; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\EVM_OMAP3530\SRC\BOOTLOADER\EBOOT\eth.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|EdbgDebugZone| [ DATA ]

  00000			 AREA	 |.bss|, NOINIT
|EdbgDebugZone| % 0x4

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|BLEthDownload|
	EXPORT	|??_C@_1HA@PBOCKLG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAd?$AAo?$AAe?$AAs?$AAn?$AA?8?$AAt?$AA?5?$AAe?$AAx?$AAi?$AAs?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@GCLCJCHA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAE?$AAb?$AAo?$AAo?$AAt?$AAI?$AAn?$AAi?$AAt?$AAE?$AAt?$AAh?$AAe?$AAr?$AAT?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAr?$AAt?$AA?5?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@DBOGGMNK@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAN?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAS?$AA?5?$AA?$CK?$AA?$CK?$AA?$CK?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@FEAPGDEK@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAu?$AAs?$AAe?$AAs?$AA?5?$AAM?$AAA?$AAC?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@FLKNKOOB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@ODLKKIGI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAD?$AAm@| [ DATA ] ; `string'
	IMPORT	|EbootInitEtherTransport|
	IMPORT	|OALKitlCreateName|
	IMPORT	|gDevice_prefix|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|OALKitlMACtoString|
	IMPORT	|OALVAtoPA|
	IMPORT	|dpCurSettings|
	IMPORT	|OALKitlFindDevice|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|memcpy|
	IMPORT	|__security_check_cookie|

  00004			 AREA	 |.bss|, NOINIT
|g_ethState| %	0x10010
|g_ethState| %	0x10010
; File c:\wince600\platform\evm_omap3530\src\bootloader\eboot\eth.c

  00000			 AREA	 |.pdata|, PDATA
|$T46860| DCD	|$LN35@BLEthDownl|
	DCD	0xc0009402

  00000			 AREA	 |.xdata|, DATA
|$T46856| DCD	0xffffffd8

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@PBOCKLG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAd?$AAo?$AAe?$AAs?$AAn?$AA?8?$AAt?$AA?5?$AAe?$AAx?$AAi?$AAs?$AAt@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "o", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "d"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "d", 0x0, "o", 0x0, "e", 0x0, "s", 0x0, "n", 0x0, "'"
	DCB	0x0, "t", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, " ", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "i"
	DCB	0x0, "t", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "u"
	DCB	0x0, "n", 0x0, "s", 0x0, "u", 0x0, "p", 0x0, "p", 0x0, "o"
	DCB	0x0, "r", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@GCLCJCHA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAE?$AAb?$AAo?$AAo?$AAt?$AAI?$AAn?$AAi?$AAt?$AAE?$AAt?$AAh?$AAe?$AAr?$AAT?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAr?$AAt?$AA?5?$AAc@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "E", 0x0, "b", 0x0, "o", 0x0, "o", 0x0, "t", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "E", 0x0, "t", 0x0, "h"
	DCB	0x0, "e", 0x0, "r", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, " "
	DCB	0x0, "c", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@DBOGGMNK@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAN?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAS?$AA?5?$AA?$CK?$AA?$CK?$AA?$CK?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "N", 0x0, "F", 0x0, "O", 0x0, ":", 0x0, " ", 0x0, "*"
	DCB	0x0, "*", 0x0, "*", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "N", 0x0, "a"
	DCB	0x0, "m", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "S", 0x0, " "
	DCB	0x0, "*", 0x0, "*", 0x0, "*", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@FEAPGDEK@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAu?$AAs?$AAe?$AAs?$AA?5?$AAM?$AAA?$AAC?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "N", 0x0, "F", 0x0, "O", 0x0, ":", 0x0, " ", 0x0, "B"
	DCB	0x0, "o", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "d", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "u"
	DCB	0x0, "s", 0x0, "e", 0x0, "s", 0x0, " ", 0x0, "M", 0x0, "A"
	DCB	0x0, "C", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FLKNKOOB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAc@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "o", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "d"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "d", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, " "
	DCB	0x0, "c", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@ODLKKIGI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAD?$AAm@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "o", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "d"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "d", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "l"
	DCB	0x0, "l", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T46856|

  00008		 |BLEthDownload| PROC

; 54   : {

  00008		 |$LN35@BLEthDownl|
  00008	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  0000c	e24dd040	 sub         sp, sp, #0x40
  00010		 |$M46857|
  00010	e1a06000	 mov         r6, r0
  00014	e59f3238	 ldr         r3, [pc, #0x238]
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d303c	 str         r3, [sp, #0x3C]

; 55   :     UINT32 rc = (UINT32) BL_ERROR;
; 56   :     OAL_KITL_DEVICE *pDevice;
; 57   :     UINT32 subnetMask, *pLeaseTime, leaseTime = 0;

  00020	e3a03000	 mov         r3, #0

; 58   :     UINT16 mac[3];
; 59   :     BOOL jumpToImage = FALSE;

  00024	e3a02000	 mov         r2, #0

; 60   :     UINT8 deviceId[OAL_KITL_ID_SIZE];
; 61   : 
; 62   : 
; 63   :     // Do any necessary initialization
; 64   :     switch (pConfig->bootDevLoc.IfcType) 
; 65   :         {
; 66   :         case Internal:
; 67   :             switch (pConfig->bootDevLoc.LogicalLoc)
; 68   :                 {
; 69   :                 case BSP_LAN9115_REGS_PA:
; 70   :                     // Nothing to do
; 71   :                     break;
; 72   :                 }
; 73   :             break;
; 74   :         }
; 75   : 
; 76   :     // Find boot/KITL device driver
; 77   :     pDevice = OALKitlFindDevice(&pConfig->bootDevLoc, pBootDevices);        

  00028	e2860008	 add         r0, r6, #8
  0002c	e58d3020	 str         r3, [sp, #0x20]
  00030	e58d2018	 str         r2, [sp, #0x18]
  00034	e3e08000	 mvn         r8, #0
  00038	eb000000	 bl          OALKitlFindDevice
  0003c	e3500000	 cmp         r0, #0

; 78   :     if ((pDevice == NULL) || (pDevice->type != OAL_KITL_TYPE_ETH))

  00040	0a00006e	 beq         |$LN8@BLEthDownl|
  00044	e5903010	 ldr         r3, [r0, #0x10]
  00048	e3530002	 cmp         r3, #2
  0004c	1a00006b	 bne         |$LN8@BLEthDownl|

; 83   :         goto cleanUp;
; 84   :         }
; 85   : 
; 86   :     // Get device driver
; 87   :     g_ethState.pDriver = (OAL_KITL_ETH_DRIVER*)pDevice->pDriver;

  00050	e59f51f8	 ldr         r5, [pc, #0x1F8]
  00054	e5903014	 ldr         r3, [r0, #0x14]
  00058	e585300c	 str         r3, [r5, #0xC]

; 88   :     
; 89   :     // Call InitDmaBuffer if there is any
; 90   :     if (g_ethState.pDriver->pfnInitDmaBuffer != NULL)

  0005c	e5933004	 ldr         r3, [r3, #4]
  00060	e3530000	 cmp         r3, #0
  00064	0a00000b	 beq         |$LN6@BLEthDownl|

; 91   :         {
; 92   :         if (!g_ethState.pDriver->pfnInitDmaBuffer(
; 93   :                 (UINT32)g_ethState.buffer, sizeof(g_ethState.buffer)
; 94   :                 ))

  00068	e3a01801	 mov         r1, #1, 16
  0006c	e2850010	 add         r0, r5, #0x10
  00070	e1a0e00f	 mov         lr, pc
  00074	e12fff13	 bx          r3
  00078	e3500000	 cmp         r0, #0
  0007c	1a000005	 bne         |$LN6@BLEthDownl|

; 95   :             {
; 96   :             OALMSG(OAL_ERROR, (L"ERROR: "
; 97   :                 L"Boot device driver InitDmaBuffer call failed\r\n"
; 98   :                 ));

  00080	e59f31ac	 ldr         r3, [pc, #0x1AC]
  00084	e5933440	 ldr         r3, [r3, #0x440]
  00088	e3130001	 tst         r3, #1
  0008c	0a000061	 beq         |$cleanUp$46743|
  00090	e59f01b4	 ldr         r0, [pc, #0x1B4]

; 99   :             goto cleanUp;

  00094	ea00005e	 b           |$LN32@BLEthDownl|
  00098		 |$LN6@BLEthDownl|

; 100  :             }
; 101  :         }      
; 102  : 
; 103  :     // RNDIS_MDD (public code) attempts to map devLoc.PhysicalLoc with
; 104  :     // NKCreateStaticMapping.  NKCreateStaticMapping requires a true
; 105  :     // physical address.  OALKitlFindDevice fills in devLoc.PhysicalLoc
; 106  :     // with the kernel mode virtual address which causes NKCreateStaticMapping
; 107  :     // to fail.
; 108  :     // Overwrite devLoc.PhysicalLoc with the actual physical address so 
; 109  :     // this function succeeds.  Note that all kitl transports need to 
; 110  :     // handle a true physical address in this location.
; 111  :     pConfig->bootDevLoc.PhysicalLoc = (PVOID)OALVAtoPA(pConfig->bootDevLoc.PhysicalLoc);

  00098	e5960014	 ldr         r0, [r6, #0x14]
  0009c	eb000000	 bl          OALVAtoPA
  000a0	e1a04000	 mov         r4, r0

; 112  : 
; 113  :     // Call Init
; 114  : 	memcpy(mac,pConfig->mac,sizeof(mac));

  000a4	e28d0024	 add         r0, sp, #0x24
  000a8	e2861066	 add         r1, r6, #0x66
  000ac	e3a02006	 mov         r2, #6
  000b0	e5864014	 str         r4, [r6, #0x14]
  000b4	eb000000	 bl          memcpy

; 115  :     if (!g_ethState.pDriver->pfnInit(
; 116  :             pConfig->bootDevLoc.PhysicalLoc, pConfig->bootDevLoc.LogicalLoc, mac
; 117  :             ))

  000b8	e595300c	 ldr         r3, [r5, #0xC]
  000bc	e5961010	 ldr         r1, [r6, #0x10]
  000c0	e28d2024	 add         r2, sp, #0x24
  000c4	e5933000	 ldr         r3, [r3]
  000c8	e1a00004	 mov         r0, r4
  000cc	e1a0e00f	 mov         lr, pc
  000d0	e12fff13	 bx          r3
  000d4	e3500000	 cmp         r0, #0
  000d8	1a000005	 bne         |$LN5@BLEthDownl|

; 118  :         {
; 119  :         OALMSG(OAL_ERROR, (L"ERROR: "
; 120  :             L"Boot device driver Init call failed\r\n"
; 121  :             ));

  000dc	e59f3150	 ldr         r3, [pc, #0x150]
  000e0	e5933440	 ldr         r3, [r3, #0x440]
  000e4	e3130001	 tst         r3, #1
  000e8	0a00004a	 beq         |$cleanUp$46743|
  000ec	e59f0154	 ldr         r0, [pc, #0x154]

; 122  :         goto cleanUp;

  000f0	ea000047	 b           |$LN32@BLEthDownl|
  000f4		 |$LN5@BLEthDownl|

; 123  :         }         
; 124  : 
; 125  :     OALMSG(OAL_INFO, (L"INFO: "
; 126  :         L"Boot device uses MAC %s\r\n", OALKitlMACtoString(mac)
; 127  :         ));

  000f4	e59f7138	 ldr         r7, [pc, #0x138]
  000f8	e5973440	 ldr         r3, [r7, #0x440]
  000fc	e3130008	 tst         r3, #8
  00100	0a000004	 beq         |$LN24@BLEthDownl|
  00104	e28d0024	 add         r0, sp, #0x24
  00108	eb000000	 bl          OALKitlMACtoString
  0010c	e1a01000	 mov         r1, r0
  00110	e59f012c	 ldr         r0, [pc, #0x12C]
  00114	eb000000	 bl          NKDbgPrintfW
  00118		 |$LN24@BLEthDownl|

; 128  : 
; 129  :     // Generate device name
; 130  :     OALKitlCreateName((CHAR *)gDevice_prefix, mac, (CHAR *)deviceId);

  00118	e59f4120	 ldr         r4, [pc, #0x120]
  0011c	e28d202c	 add         r2, sp, #0x2C
  00120	e28d1024	 add         r1, sp, #0x24
  00124	e5940000	 ldr         r0, [r4]
  00128	eb000000	 bl          OALKitlCreateName

; 131  :     OALMSG(OAL_INFO, (L"INFO: "
; 132  :         L"*** Device Name %S ***\r\n", deviceId
; 133  :         ));

  0012c	e5973440	 ldr         r3, [r7, #0x440]
  00130	e3130008	 tst         r3, #8
  00134	159f0100	 ldrne       r0, [pc, #0x100]
  00138	128d102c	 addne       r1, sp, #0x2C
  0013c	1b000000	 blne        NKDbgPrintfW

; 134  : 
; 135  :     // Initialize ethernet
; 136  :     memset(&g_ethState.edbgAddress, 0, sizeof(g_ethState.edbgAddress));

  00140	e3a03000	 mov         r3, #0
  00144	e5853000	 str         r3, [r5]
  00148	e5853004	 str         r3, [r5, #4]
  0014c	e5853008	 str         r3, [r5, #8]

; 137  : 
; 138  :     // Set lease time pointer to activate DHCP or update global structure
; 139  :     if ((pConfig->kitlFlags & OAL_KITL_FLAGS_DHCP) != 0)

  00150	e5963030	 ldr         r3, [r6, #0x30]

; 140  :         {
; 141  :         pLeaseTime = &leaseTime;
; 142  :         }
; 143  :     else 
; 144  :         {
; 145  :         pLeaseTime = NULL;
; 146  :         g_ethState.edbgAddress.dwIP = pConfig->ipAddress;
; 147  :         }
; 148  :     memcpy(
; 149  :         g_ethState.edbgAddress.wMAC, mac, sizeof(g_ethState.edbgAddress.wMAC)
; 150  :         );

  00154	e1a01005	 mov         r1, r5
  00158	e1dd22b8	 ldrh        r2, [sp, #0x28]
  0015c	e3130004	 tst         r3, #4
  00160	05963038	 ldreq       r3, [r6, #0x38]

; 151  :     subnetMask = 0xFFFFFF;
; 152  :        
; 153  :     // Initialize TFTP transport
; 154  :     // Note that first parameter must be pointer to global variable...
; 155  :     if (!EbootInitEtherTransport(
; 156  :             &g_ethState.edbgAddress, (LPDWORD) &subnetMask, &jumpToImage, (DWORD*) pLeaseTime,
; 157  :             EBOOT_VERSION_MAJOR, EBOOT_VERSION_MINOR, gDevice_prefix, 
; 158  :             (char*) deviceId, EDBG_CPU_TYPE_ARM|0x0F, 0
; 159  :             ))

  00164	e5944000	 ldr         r4, [r4]
  00168	e3e0a4ff	 mvn         r10, #0xFF, 8
  0016c	05853000	 streq       r3, [r5]
  00170	e59d3024	 ldr         r3, [sp, #0x24]
  00174	128d9020	 addne       r9, sp, #0x20
  00178	03a09000	 moveq       r9, #0
  0017c	e5a13004	 str         r3, [r1, #4]!
  00180	e58da01c	 str         r10, [sp, #0x1C]
  00184	e3a0b04f	 mov         r11, #0x4F
  00188	e1c120b4	 strh        r2, [r1, #4]
  0018c	e28de02c	 add         lr, sp, #0x2C
  00190	e3a0a000	 mov         r10, #0
  00194	e28d2018	 add         r2, sp, #0x18
  00198	e28d101c	 add         r1, sp, #0x1C
  0019c	e1a03009	 mov         r3, r9
  001a0	e1a00005	 mov         r0, r5
  001a4	e58da014	 str         r10, [sp, #0x14]
  001a8	e58db010	 str         r11, [sp, #0x10]
  001ac	e58de00c	 str         lr, [sp, #0xC]
  001b0	e58d4008	 str         r4, [sp, #8]
  001b4	e58da004	 str         r10, [sp, #4]
  001b8	e58da000	 str         r10, [sp]
  001bc	eb000000	 bl          EbootInitEtherTransport
  001c0	e3500000	 cmp         r0, #0
  001c4	1a000004	 bne         |$LN2@BLEthDownl|

; 160  :         {
; 161  :         OALMSG(OAL_ERROR, (L"ERROR: EbootInitEtherTransport call failed\r\n"));

  001c8	e5973440	 ldr         r3, [r7, #0x440]
  001cc	e3130001	 tst         r3, #1
  001d0	0a000010	 beq         |$cleanUp$46743|
  001d4	e59f005c	 ldr         r0, [pc, #0x5C]

; 162  :         goto cleanUp;

  001d8	ea00000d	 b           |$LN32@BLEthDownl|
  001dc		 |$LN2@BLEthDownl|

; 163  :         }
; 164  : 
; 165  :     // If DHCP was used update lease time and address
; 166  :     if (pLeaseTime != NULL) pConfig->ipAddress = g_ethState.edbgAddress.dwIP;

  001dc	e3590000	 cmp         r9, #0
  001e0	15953000	 ldrne       r3, [r5]
  001e4	15863038	 strne       r3, [r6, #0x38]

; 167  : 
; 168  :     // Depending on what we get from TFTP
; 169  :     rc = jumpToImage ? BL_JUMP : BL_DOWNLOAD;

  001e8	e59d3018	 ldr         r3, [sp, #0x18]
  001ec	e3530000	 cmp         r3, #0
  001f0	13a08001	 movne       r8, #1
  001f4	1a000007	 bne         |$cleanUp$46743|
  001f8	e3a08000	 mov         r8, #0
  001fc	ea000005	 b           |$cleanUp$46743|
  00200		 |$LN8@BLEthDownl|

; 79   :         {
; 80   :         OALMSG(OAL_ERROR, (
; 81   :             L"ERROR: Boot device doesn't exist or it is unsupported\r\n"
; 82   :             ));

  00200	e59f302c	 ldr         r3, [pc, #0x2C]
  00204	e5933440	 ldr         r3, [r3, #0x440]
  00208	e3130001	 tst         r3, #1
  0020c	0a000001	 beq         |$cleanUp$46743|
  00210	e59f0018	 ldr         r0, [pc, #0x18]
  00214		 |$LN32@BLEthDownl|
  00214	eb000000	 bl          NKDbgPrintfW
  00218		 |$cleanUp$46743|

; 170  : 
; 171  : cleanUp:
; 172  :     return rc;

  00218	e59d003c	 ldr         r0, [sp, #0x3C]
  0021c	eb000000	 bl          __security_check_cookie

; 173  : }

  00220	e1a00008	 mov         r0, r8
  00224	e28dd040	 add         sp, sp, #0x40
  00228	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  0022c	e12fff1e	 bx          lr
  00230		 |$LN36@BLEthDownl|
  00230		 |$LN37@BLEthDownl|
  00230	00000000	 DCD         |??_C@_1HA@PBOCKLG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAd?$AAo?$AAe?$AAs?$AAn?$AA?8?$AAt?$AA?5?$AAe?$AAx?$AAi?$AAs?$AAt@|
  00234		 |$LN38@BLEthDownl|
  00234	00000000	 DCD         |dpCurSettings|
  00238		 |$LN39@BLEthDownl|
  00238	00000000	 DCD         |??_C@_1FK@GCLCJCHA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAE?$AAb?$AAo?$AAo?$AAt?$AAI?$AAn?$AAi?$AAt?$AAE?$AAt?$AAh?$AAe?$AAr?$AAT?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAr?$AAt?$AA?5?$AAc@|
  0023c		 |$LN40@BLEthDownl|
  0023c	00000000	 DCD         |??_C@_1DO@DBOGGMNK@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAN?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAS?$AA?5?$AA?$CK?$AA?$CK?$AA?$CK?$AA?$AN?$AA?6?$AA?$AA@|
  00240		 |$LN41@BLEthDownl|
  00240	00000000	 DCD         |gDevice_prefix|
  00244		 |$LN42@BLEthDownl|
  00244	00000000	 DCD         |??_C@_1EA@FEAPGDEK@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAu?$AAs?$AAe?$AAs?$AA?5?$AAM?$AAA?$AAC?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00248		 |$LN43@BLEthDownl|
  00248	00000000	 DCD         |??_C@_1FK@FLKNKOOB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAc@|
  0024c		 |$LN44@BLEthDownl|
  0024c	00000000	 DCD         |??_C@_1GM@ODLKKIGI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAD?$AAm@|
  00250		 |$LN45@BLEthDownl|
  00250	00000000	 DCD         |g_ethState|
  00254		 |$LN46@BLEthDownl|
  00254	00000000	 DCD         |__security_cookie|
  00258		 |$M46858|

			 ENDP  ; |BLEthDownload|

	EXPORT	|BLEthConfig|
	IMPORT	|EbootWaitForHostConnect|

  00000			 AREA	 |.pdata|, PDATA
|$T46881| DCD	|$LN6@BLEthConfi|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BLEthConfig| PROC

; 187  : {

  00000		 |$LN6@BLEthConfi|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M46878|
  00004	e1a04000	 mov         r4, r0

; 188  :     EDBG_OS_CONFIG_DATA *pConfig;
; 189  : 
; 190  :     // Get host connect info
; 191  :     pConfig = EbootWaitForHostConnect(&g_ethState.edbgAddress, NULL);

  00008	e59f0028	 ldr         r0, [pc, #0x28]
  0000c	e3a01000	 mov         r1, #0
  00010	eb000000	 bl          EbootWaitForHostConnect

; 192  : 
; 193  :     pArgs->kitl.flags &= ~OAL_KITL_FLAGS_PASSIVE;

  00014	e5943018	 ldr         r3, [r4, #0x18]
  00018	e3c32002	 bic         r2, r3, #2
  0001c	e5842018	 str         r2, [r4, #0x18]

; 194  :     if ((pConfig->KitlTransport & KTS_PASSIVE_MODE) != 0)

  00020	e5d03001	 ldrb        r3, [r0, #1]
  00024	e3130040	 tst         r3, #0x40

; 195  :         {
; 196  :         pArgs->kitl.flags |= OAL_KITL_FLAGS_PASSIVE;

  00028	13823002	 orrne       r3, r2, #2
  0002c	15843018	 strne       r3, [r4, #0x18]

; 197  :         }        
; 198  : }

  00030	e8bd4010	 ldmia       sp!, {r4, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$LN7@BLEthConfi|
  00038		 |$LN8@BLEthConfi|
  00038	00000000	 DCD         |g_ethState|
  0003c		 |$M46879|

			 ENDP  ; |BLEthConfig|

	EXPORT	|OEMEthGetFrame|

  00000			 AREA	 |.pdata|, PDATA
|$T46896| DCD	|$LN7@OEMEthGetF|
	DCD	0x40000e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMEthGetFrame| PROC

; 213  : {

  00000		 |$LN7@OEMEthGetF|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M46893|

; 214  :     return g_ethState.pDriver->pfnGetFrame(pData, pLength) > 0;

  00004	e59f3028	 ldr         r3, [pc, #0x28]
  00008	e593300c	 ldr         r3, [r3, #0xC]
  0000c	e5933010	 ldr         r3, [r3, #0x10]
  00010	e1a0e00f	 mov         lr, pc
  00014	e12fff13	 bx          r3
  00018	e1a03800	 mov         r3, r0, lsl #16
  0001c	e1b03823	 movs        r3, r3, lsr #16
  00020	13a00001	 movne       r0, #1

; 215  : }

  00024	149de004	 ldrne       lr, [sp], #4

; 214  :     return g_ethState.pDriver->pfnGetFrame(pData, pLength) > 0;

  00028	03a00000	 moveq       r0, #0

; 215  : }

  0002c	049de004	 ldreq       lr, [sp], #4
  00030	e12fff1e	 bx          lr
  00034		 |$LN8@OEMEthGetF|
  00034		 |$LN9@OEMEthGetF|
  00034	00000000	 DCD         |g_ethState|
  00038		 |$M46894|

			 ENDP  ; |OEMEthGetFrame|

	EXPORT	|OEMEthSendFrame|

  00000			 AREA	 |.pdata|, PDATA
|$T46911| DCD	|$LN7@OEMEthSend|
	DCD	0x40000e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMEthSendFrame| PROC

; 228  : {

  00000		 |$LN7@OEMEthSend|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M46908|

; 229  :     return g_ethState.pDriver->pfnSendFrame(pData, length) == 0;

  00004	e59f3028	 ldr         r3, [pc, #0x28]
  00008	e593300c	 ldr         r3, [r3, #0xC]
  0000c	e593300c	 ldr         r3, [r3, #0xC]
  00010	e1a0e00f	 mov         lr, pc
  00014	e12fff13	 bx          r3
  00018	e1a03800	 mov         r3, r0, lsl #16
  0001c	e1b03823	 movs        r3, r3, lsr #16
  00020	03a00001	 moveq       r0, #1

; 230  : }

  00024	049de004	 ldreq       lr, [sp], #4

; 229  :     return g_ethState.pDriver->pfnSendFrame(pData, length) == 0;

  00028	13a00000	 movne       r0, #0

; 230  : }

  0002c	149de004	 ldrne       lr, [sp], #4
  00030	e12fff1e	 bx          lr
  00034		 |$LN8@OEMEthSend|
  00034		 |$LN9@OEMEthSend|
  00034	00000000	 DCD         |g_ethState|
  00038		 |$M46909|

			 ENDP  ; |OEMEthSendFrame|

	EXPORT	|BLEthReadData|
	IMPORT	|EbootEtherReadData|
	IMPORT	|g_eboot|

  00000			 AREA	 |.pdata|, PDATA
|$T46924| DCD	|$LN5@BLEthReadD|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BLEthReadData| PROC

; 244  : {

  00000		 |$LN5@BLEthReadD|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M46921|
  00004	e1a0e001	 mov         lr, r1
  00008	e1a02000	 mov         r2, r0

; 245  :     // Save read data size and location. It is used in workaround
; 246  :     // for download BIN DIO images larger than RAM.
; 247  :     g_eboot.readSize = size;

  0000c	e59f3010	 ldr         r3, [pc, #0x10]

; 248  :     g_eboot.pReadBuffer = pData;
; 249  :     return EbootEtherReadData(size, pData);

  00010	e5832144	 str         r2, [r3, #0x144]
  00014	e583e140	 str         lr, [r3, #0x140]
  00018	eb000000	 bl          EbootEtherReadData

; 250  : }

  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$LN6@BLEthReadD|
  00024		 |$LN7@BLEthReadD|
  00024	00000000	 DCD         |g_eboot|
  00028		 |$M46922|

			 ENDP  ; |BLEthReadData|

	END
