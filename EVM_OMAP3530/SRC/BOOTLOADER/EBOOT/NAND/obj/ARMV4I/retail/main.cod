; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\EVM_OMAP3530\SRC\BOOTLOADER\EBOOT\main.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1BK@GNCICGCB@?$AAN?$AAK?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAN?$AAA?$AAN?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@NKDLNHPK@?$AAU?$AAS?$AAB?$AAF?$AAn?$AA?5?$AAR?$AAN?$AAD?$AAI?$AAS?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@OOCKPHGK@?$AAL?$AAA?$AAN?$AA9?$AA1?$AA1?$AA5?$AA?5?$AAM?$AAA?$AAC?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|g_kitlEthLan911x| [ DATA ]
	EXPORT	|g_kitlUsbRndis| [ DATA ]
	EXPORT	|g_kitlDevices| [ DATA ]
	EXPORT	|g_bootDevices| [ DATA ]
	EXPORT	|DefaultMacAddress| [ DATA ]
	EXPORT	|dwEbootECCtype| [ DATA ]
	EXPORT	|g_CPUFamily| [ DATA ]
	IMPORT	|RndisMulticastList|
	IMPORT	|RndisCurrentPacketFilter|
	IMPORT	|RndisDisableInts|
	IMPORT	|RndisEnableInts|
	IMPORT	|RndisEDbgGetFrame|
	IMPORT	|RndisEDbgSendFrame|
	IMPORT	|HostMiniInit|
	IMPORT	|LAN911XMulticastList|
	IMPORT	|LAN911XCurrentPacketFilter|
	IMPORT	|LAN911XDisableInts|
	IMPORT	|LAN911XEnableInts|
	IMPORT	|LAN911XGetFrame|
	IMPORT	|LAN911XSendFrame|
	IMPORT	|LAN911XInit|

  00000			 AREA	 |.data|, DATA
	 COMMON	|g_bootCfg|, 0x7c

	 COMMON	|g_ecctype|, 0x1

	 COMMON	|g_eboot|, 0x148

	 COMMON	|gDevice_prefix|, 0x4


  00000			 AREA	 |.bss|, NOINIT
|g_CPUFamily| %	0x4

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@GNCICGCB@?$AAN?$AAK?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAN?$AAA?$AAN?$AAD?$AA?$AA@| DCB "N"
	DCB	0x0, "K", 0x0, " ", 0x0, "f", 0x0, "r", 0x0, "o", 0x0, "m"
	DCB	0x0, " ", 0x0, "N", 0x0, "A", 0x0, "N", 0x0, "D", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@NKDLNHPK@?$AAU?$AAS?$AAB?$AAF?$AAn?$AA?5?$AAR?$AAN?$AAD?$AAI?$AAS?$AA?5?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "F", 0x0, "n", 0x0, " ", 0x0, "R"
	DCB	0x0, "N", 0x0, "D", 0x0, "I", 0x0, "S", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@OOCKPHGK@?$AAL?$AAA?$AAN?$AA9?$AA1?$AA1?$AA5?$AA?5?$AAM?$AAA?$AAC?$AA?$AA@| DCB "L"
	DCB	0x0, "A", 0x0, "N", 0x0, "9", 0x0, "1", 0x0, "1", 0x0, "5"
	DCB	0x0, " ", 0x0, "M", 0x0, "A", 0x0, "C", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.data|, DATA
|g_kitlEthLan911x| DCD |LAN911XInit|
	DCD	0x0
	DCD	0x0
	DCD	|LAN911XSendFrame|
	DCD	|LAN911XGetFrame|
	DCD	|LAN911XEnableInts|
	DCD	|LAN911XDisableInts|
	DCD	0x0
	DCD	0x0
	DCD	|LAN911XCurrentPacketFilter|
	DCD	|LAN911XMulticastList|
|g_kitlUsbRndis| DCD |HostMiniInit|
	DCD	0x0
	DCD	0x0
	DCD	|RndisEDbgSendFrame|
	DCD	|RndisEDbgGetFrame|
	DCD	|RndisEnableInts|
	DCD	|RndisDisableInts|
	DCD	0x0
	DCD	0x0
	DCD	|RndisCurrentPacketFilter|
	DCD	|RndisMulticastList|
|g_kitlDevices| DCD |??_C@_1BI@OOCKPHGK@?$AAL?$AAA?$AAN?$AA9?$AA1?$AA1?$AA5?$AA?5?$AAM?$AAA?$AAC?$AA?$AA@|
	DCD	0x0
	DCD	0x15000000
	DCD	0x0
	DCD	0x2
	DCD	|g_kitlEthLan911x|
	DCD	|??_C@_1BK@NKDLNHPK@?$AAU?$AAS?$AAB?$AAF?$AAn?$AA?5?$AAR?$AAN?$AAD?$AAI?$AAS?$AA?5?$AA?$AA@|
	DCD	0x0
	DCD	0x480ab000
	DCD	0x0
	DCD	0x2
	DCD	|g_kitlUsbRndis|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
|g_bootDevices| DCD |??_C@_1BI@OOCKPHGK@?$AAL?$AAA?$AAN?$AA9?$AA1?$AA1?$AA5?$AA?5?$AAM?$AAA?$AAC?$AA?$AA@|
	DCD	0x0
	DCD	0x15000000
	DCD	0x0
	DCD	0x2
	DCD	|g_kitlEthLan911x|
	DCD	|??_C@_1BK@NKDLNHPK@?$AAU?$AAS?$AAB?$AAF?$AAn?$AA?5?$AAR?$AAN?$AAD?$AAI?$AAS?$AA?5?$AA?$AA@|
	DCD	0x0
	DCD	0x480ab000
	DCD	0x0
	DCD	0x2
	DCD	|g_kitlUsbRndis|
	DCD	|??_C@_1BK@GNCICGCB@?$AAN?$AAK?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAN?$AAA?$AAN?$AAD?$AA?$AA@|
	DCD	0x0
	DCD	0x8000020
	DCD	0x0
	DCD	0x3
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
|DefaultMacAddress| DCW 0x2020
	DCW	0x3040
	DCW	0x5060

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
|dwEbootECCtype| DCD 0xffffffff
	%	4
|?ebootPinMux@?1??OEMPlatformInit@@9@9| DCW 0x52	; `OEMPlatformInit'::`2'::ebootPinMux
	%	2
	DCD	0x0
	DCW	0x53
	%	2
	DCD	0x0
	DCW	0x54
	%	2
	DCD	0x0
	DCW	0x55
	%	2
	DCD	0x0
	DCW	0x56
	%	2
	DCD	0x0
	DCW	0x57
	%	2
	DCD	0x0
	DCW	0x58
	%	2
	DCD	0x0
	DCW	0x59
	%	2
	DCD	0x0
	DCW	0x5a
	%	2
	DCD	0x0
	DCW	0x5b
	%	2
	DCD	0x0
	DCW	0x5c
	%	2
	DCD	0x0
	DCW	0x5d
	%	2
	DCD	0x0
	DCW	0x5e
	%	2
	DCD	0x0
	DCW	0x5f
	%	2
	DCD	0x0
	DCW	0x60
	%	2
	DCD	0x0
	DCW	0x61
	%	2
	DCD	0x0
	DCW	0x62
	%	2
	DCD	0x0
	DCW	0x63
	%	2
	DCD	0x0
	DCW	0x64
	%	2
	DCD	0x0
	DCW	0x65
	%	2
	DCD	0x0
	DCW	0x66
	%	2
	DCD	0x0
	DCW	0x67
	%	2
	DCD	0x0
	DCW	0x68
	%	2
	DCD	0x0
	DCW	0x69
	%	2
	DCD	0x0
	DCW	0x6a
	%	2
	DCD	0x0
	DCW	0x6b
	%	2
	DCD	0x0
	DCW	0x6c
	%	2
	DCD	0x0
	DCW	0x6d
	%	2
	DCD	0x0
	DCW	0xaa
	%	2
	DCD	0x20
	DCW	0xab
	%	2
	DCD	0x20
	DCW	0xac
	%	2
	DCD	0x20
	DCW	0xad
	%	2
	DCD	0x20
	DCW	0x51c
	%	2
	DCD	0x20
	DCW	0x520
	%	2
	DCD	0x20
	DCW	0x51b
	%	2
	DCD	0x20
	DCW	0xd0
	%	2
	DCD	0x21
	DCW	0xd1
	%	2
	DCD	0x21
	DCW	0xd8
	%	2
	DCD	0x21
	DCW	0x50
	%	2
	DCD	0x20
	DCW	0x4c
	%	2
	DCD	0x20
	DCW	0xaf
	%	2
	DCD	0x20
	DCW	0xba
	%	2
	DCD	0x7
	DCW	0xb9
	%	2
	DCD	0x1
	DCW	0xbb
	%	2
	DCD	0x1
	DCW	0xbc
	%	2
	DCD	0x1
	DCW	0xbd
	%	2
	DCD	0x1
	DCW	0xbe
	%	2
	DCD	0x1
	DCW	0xbf
	%	2
	DCD	0x1
	DCW	0xc0
	%	2
	DCD	0x1
	DCW	0xc1
	%	2
	DCD	0x1
	DCW	0xc2
	%	2
	DCD	0x1
	DCW	0xc3
	%	2
	DCD	0x1
	DCW	0xc4
	%	2
	DCD	0x1
	DCW	0xffff
	%	2
	DCD	0x0
|?ebootPinMux_37XX@?1??OEMPlatformInit@@9@9| DCW 0x52	; `OEMPlatformInit'::`2'::ebootPinMux_37XX
	%	2
	DCD	0x0
	DCW	0x53
	%	2
	DCD	0x0
	DCW	0x54
	%	2
	DCD	0x0
	DCW	0x55
	%	2
	DCD	0x0
	DCW	0x5c
	%	2
	DCD	0x0
	DCW	0x5d
	%	2
	DCD	0x0
	DCW	0x5e
	%	2
	DCD	0x0
	DCW	0x5f
	%	2
	DCD	0x0
	DCW	0x60
	%	2
	DCD	0x0
	DCW	0x61
	%	2
	DCD	0x0
	DCW	0x62
	%	2
	DCD	0x0
	DCW	0x63
	%	2
	DCD	0x0
	DCW	0x64
	%	2
	DCD	0x0
	DCW	0x65
	%	2
	DCD	0x0
	DCW	0x66
	%	2
	DCD	0x0
	DCW	0x67
	%	2
	DCD	0x0
	DCW	0x68
	%	2
	DCD	0x18
	DCW	0x69
	%	2
	DCD	0x18
	DCW	0x6a
	%	2
	DCD	0x18
	DCW	0x6b
	%	2
	DCD	0x18
	DCW	0x6c
	%	2
	DCD	0x18
	DCW	0x6d
	%	2
	DCD	0x18
	DCW	0x51b
	%	2
	DCD	0x18
	DCW	0x51c
	%	2
	DCD	0x18
	DCW	0x51e
	%	2
	DCD	0x18
	DCW	0x51f
	%	2
	DCD	0x18
	DCW	0x520
	%	2
	DCD	0x18
	DCW	0x521
	%	2
	DCD	0x18
	DCW	0xaa
	%	2
	DCD	0x20
	DCW	0xab
	%	2
	DCD	0x20
	DCW	0xac
	%	2
	DCD	0x20
	DCW	0xad
	%	2
	DCD	0x20
	DCW	0xd0
	%	2
	DCD	0x21
	DCW	0xd1
	%	2
	DCD	0x21
	DCW	0xd8
	%	2
	DCD	0x21
	DCW	0x50
	%	2
	DCD	0x20
	DCW	0x4c
	%	2
	DCD	0x20
	DCW	0xaf
	%	2
	DCD	0x20
	DCW	0xba
	%	2
	DCD	0x7
	DCW	0xb9
	%	2
	DCD	0x1
	DCW	0xbb
	%	2
	DCD	0x1
	DCW	0xbc
	%	2
	DCD	0x1
	DCW	0xbd
	%	2
	DCD	0x1
	DCW	0xbe
	%	2
	DCD	0x1
	DCW	0xbf
	%	2
	DCD	0x1
	DCW	0xc0
	%	2
	DCD	0x1
	DCW	0xc1
	%	2
	DCD	0x1
	DCW	0xc2
	%	2
	DCD	0x1
	DCW	0xc3
	%	2
	DCD	0x1
	DCW	0xc4
	%	2
	DCD	0x1
	DCW	0xffff
	%	2
	DCD	0x0
	IMPORT	|SOCSetPadConfig|
; File c:\wince600\platform\evm_omap3530\src\inc\bsp_padcfg.h

  00000			 AREA	 |.pdata|, PDATA
|$T48185| DCD	|$LN9@ConfigureP|
	DCD	0x40001601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ConfigurePadArray| PROC

; 616  : {

  00000		 |$LN9@ConfigureP|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M48182|
  00004	e1a04000	 mov         r4, r0

; 617  :     int i=0;
; 618  :     while (padArray[i].padID != (UINT16) -1)

  00008	e1d420b0	 ldrh        r2, [r4]
  0000c	e3a03cff	 mov         r3, #0xFF, 24
  00010	e38350ff	 orr         r5, r3, #0xFF
  00014	e1520005	 cmp         r2, r5
  00018	e3a06000	 mov         r6, #0
  0001c	0a00000b	 beq         |$LN1@ConfigureP|
  00020	e3a01c7f	 mov         r1, #0x7F, 24
  00024	e38170ff	 orr         r7, r1, #0xFF
  00028	e1a03004	 mov         r3, r4
  0002c		 |$LL2@ConfigureP|

; 619  :     {
; 620  :         SOCSetPadConfig(padArray[i].padID,(UINT16) padArray[i].Cfg);

  0002c	e5933004	 ldr         r3, [r3, #4]
  00030	e1a00002	 mov         r0, r2
  00034	e0031007	 and         r1, r3, r7
  00038	eb000000	 bl          SOCSetPadConfig

; 621  :         i++;

  0003c	e2866001	 add         r6, r6, #1
  00040	e0843186	 add         r3, r4, r6, lsl #3
  00044	e1d320b0	 ldrh        r2, [r3]
  00048	e1520005	 cmp         r2, r5
  0004c	1afffff6	 bne         |$LL2@ConfigureP|
  00050		 |$LN1@ConfigureP|

; 622  :     }
; 623  : }

  00050	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$M48183|

			 ENDP  ; |ConfigurePadArray|

	EXPORT	|BSPGpioInit|
	IMPORT	|BSPInsertGpioDevice|
	IMPORT	|Omap_Gpio|
	IMPORT	|Tps659xx_Gpio|
; File c:\wince600\platform\evm_omap3530\src\bootloader\eboot\main.c

  00000			 AREA	 |.pdata|, PDATA
|$T48192| DCD	|$LN5@BSPGpioIni|
	DCD	0x40000d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BSPGpioInit| PROC

; 94   : {

  00000		 |$LN5@BSPGpioIni|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M48189|

; 95   :    BSPInsertGpioDevice(0,&Omap_Gpio,NULL);

  00004	e59f1024	 ldr         r1, [pc, #0x24]
  00008	e3a02000	 mov         r2, #0
  0000c	e3a00000	 mov         r0, #0
  00010	eb000000	 bl          BSPInsertGpioDevice

; 96   :    BSPInsertGpioDevice(TRITON_GPIO_PINID_START,&Tps659xx_Gpio,NULL);

  00014	e59f1010	 ldr         r1, [pc, #0x10]
  00018	e3a02000	 mov         r2, #0
  0001c	e3a00c01	 mov         r0, #1, 24
  00020	eb000000	 bl          BSPInsertGpioDevice

; 97   : 
; 98   : }

  00024	e49de004	 ldr         lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$LN6@BSPGpioIni|
  0002c		 |$LN7@BSPGpioIni|
  0002c	00000000	 DCD         |Tps659xx_Gpio|
  00030		 |$LN8@BSPGpioIni|
  00030	00000000	 DCD         |Omap_Gpio|
  00034		 |$M48190|

			 ENDP  ; |BSPGpioInit|

	EXPORT	|main|
	IMPORT	|BootloaderMain|
	IMPORT	|EnableDeviceClocks|
	IMPORT	|BSPGetDebugUARTConfig|
	IMPORT	|Get_CPUVersion|

  00000			 AREA	 |.pdata|, PDATA
|$T48204| DCD	|$LN5@main|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |main|	 PROC

; 100  : {

  00000		 |$LN5@main|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M48201|

; 101  : 	UINT32 CpuRevision;
; 102  : 
; 103  : 	// Get CPU family
; 104  : 	g_CPUFamily = CPU_FAMILY_OMAP35XX;

  00004	e59f4034	 ldr         r4, [pc, #0x34]
  00008	e3a03000	 mov         r3, #0
  0000c	e5843000	 str         r3, [r4]

; 105  : 	CpuRevision = Get_CPUVersion();

  00010	eb000000	 bl          Get_CPUVersion

; 106  : 	g_CPUFamily = CPU_FAMILY(CpuRevision);

  00014	e1a03800	 mov         r3, r0, lsl #16
  00018	e1a03c23	 mov         r3, r3, lsr #24
  0001c	e5843000	 str         r3, [r4]

; 107  : 
; 108  :     EnableDeviceClocks(BSPGetDebugUARTConfig()->dev,TRUE);

  00020	eb000000	 bl          BSPGetDebugUARTConfig
  00024	e5900000	 ldr         r0, [r0]
  00028	e3a01001	 mov         r1, #1
  0002c	eb000000	 bl          EnableDeviceClocks

; 109  :     BootloaderMain();

  00030	eb000000	 bl          BootloaderMain

; 110  : }

  00034	e3a00000	 mov         r0, #0
  00038	e8bd4010	 ldmia       sp!, {r4, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN6@main|
  00040		 |$LN7@main|
  00040	00000000	 DCD         |g_CPUFamily|
  00044		 |$M48202|

			 ENDP  ; |main|

	EXPORT	|OEMPlatformInit|
	EXPORT	|??_C@_1DO@MGHPPPEE@?$AAT?$AAP?$AAS?$AA6?$AA5?$AA9?$AAX?$AAX?$AA?5?$AAV?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?5?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@OIJGKENB@?$AAE?$AAS?$AA1?$AA?4?$AA3?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@KGKCAFPP@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAU?$AAn?$AAK?$AAn?$AAo?$AAw?$AAn?$AA?5?$AAC?$AAP?$AAU?$AA?5?$AAf?$AAa?$AAm?$AAi?$AAl?$AAy?$AA?3?$AA?$CF?$AAd?$AA?4?$AA?4?$AA?4?$AA?4?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_08DGJGOJCE@EVM3530?9?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_08EMFGLKEE@EVM3730?9?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@EMFEEPJF@?$AA?$AN?$AA?6?$AAT?$AAI?$AA?5?$AAO?$AAM?$AAA?$AAP?$AA?$CF?$AAx?$AA?5?$AAV?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@FACKMDLE@?$AAE?$AAS?$AA1?$AA?4?$AA2?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@ECJPGMFK@?$AAE?$AAS?$AA1?$AA?4?$AA1?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@LKGLCH@?$AAE?$AAS?$AA3?$AA?4?$AA1?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@LIAGAMEC@?$AAE?$AAS?$AA3?$AA?4?$AA0?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@OPHFFOFA@?$AAE?$AAS?$AA2?$AA?4?$AA1?$AA?0?$AA?5?$AAI?$AAD?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAr?$AAm?$AAi?$AAn?$AAe?$AAd?$AA?5?$AAu?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAC?$AAR?$AAC?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@OONAPHOG@?$AAE?$AAS?$AA2?$AA?4?$AA0?$AA?0?$AA?5?$AAI?$AAD?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAr?$AAm?$AAi?$AAn?$AAe?$AAd?$AA?5?$AAu?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAC?$AAR?$AAC?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@MMBAGLLJ@?$AAE?$AAS?$AA2?$AA?4?$AA1?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@HEKMAMNM@?$AAE?$AAS?$AA2?$AA?4?$AA0?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@PKCDALDP@?$AAE?$AAS?$AA1?$AA?4?$AA0?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_08LPCFAMLO@18?320?357?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_0M@KDNNPCBM@Sep?5?59?52013?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JC@DPCDJGMK@?$AA?$AN?$AA?6?$AAT?$AAe?$AAx?$AAa?$AAs?$AA?5?$AAI?$AAn?$AAs?$AAt?$AAr?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?5?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAC?$AAE?$AA?5?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@BKILFBIJ@?$AAE?$AAB?$AAO?$AAO?$AAT?$AA?5?$AAV?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA?$CF?$AAd?$AA?4?$AA?$CF?$AAd?$AA?0?$AA?5?$AAB?$AAS?$AAP?$AA?5?$AAB?$AAS?$AAP?$AA_?$AAW?$AAI?$AAN@| [ DATA ] ; `string'
	IMPORT	|TWLReadIDCode|
	IMPORT	|GPIOSetMode|
	IMPORT	|GPIOSetBit|
	IMPORT	|GPIOOpen|
	IMPORT	|TWLOpen|
	IMPORT	|GPIOInit|
	IMPORT	|OALI2CInit|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|OALPAtoVA|
	IMPORT	|OALLocalAllocInit|

  00004			 AREA	 |.bss|, NOINIT
|?allocationPool@?1??OEMPlatformInit@@9@9| % 0x200	; `OEMPlatformInit'::`2'::allocationPool
|?allocationPool@?1??OEMPlatformInit@@9@9| % 0x200	; `OEMPlatformInit'::`2'::allocationPool
; File c:\wince600\platform\evm_omap3530\src\inc\bsp_padcfg.h

  00000			 AREA	 |.pdata|, PDATA
|$T48271| DCD	|$LN57@OEMPlatfor|
	DCD	0x4000cc02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@MGHPPPEE@?$AAT?$AAP?$AAS?$AA6?$AA5?$AA9?$AAX?$AAX?$AA?5?$AAV?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?5?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "P", 0x0, "S", 0x0, "6", 0x0, "5", 0x0, "9", 0x0, "X"
	DCB	0x0, "X", 0x0, " ", 0x0, "V", 0x0, "e", 0x0, "r", 0x0, "s"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, " ", 0x0, "("
	DCB	0x0, "%", 0x0, "s", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@OIJGKENB@?$AAE?$AAS?$AA1?$AA?4?$AA3?$AA?$AA@| DCB "E", 0x0, "S", 0x0
	DCB	"1", 0x0, ".", 0x0, "3", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@KGKCAFPP@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAU?$AAn?$AAK?$AAn?$AAo?$AAw?$AAn?$AA?5?$AAC?$AAP?$AAU?$AA?5?$AAf?$AAa?$AAm?$AAi?$AAl?$AAy?$AA?3?$AA?$CF?$AAd?$AA?4?$AA?4?$AA?4?$AA?4?$AA?$AN@| DCB "I"
	DCB	0x0, "N", 0x0, "F", 0x0, "O", 0x0, ":", 0x0, " ", 0x0, "U"
	DCB	0x0, "n", 0x0, "K", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n"
	DCB	0x0, " ", 0x0, "C", 0x0, "P", 0x0, "U", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "m", 0x0, "i", 0x0, "l", 0x0, "y", 0x0, ":"
	DCB	0x0, "%", 0x0, "d", 0x0, ".", 0x0, ".", 0x0, ".", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_08DGJGOJCE@EVM3530?9?$AA@| DCB "EVM3530-", 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_08EMFGLKEE@EVM3730?9?$AA@| DCB "EVM3730-", 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@EMFEEPJF@?$AA?$AN?$AA?6?$AAT?$AAI?$AA?5?$AAO?$AAM?$AAA?$AAP?$AA?$CF?$AAx?$AA?5?$AAV?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?$AN@| DCB 0xd
	DCB	0x0, 0xa, 0x0, "T", 0x0, "I", 0x0, " ", 0x0, "O", 0x0, "M"
	DCB	0x0, "A", 0x0, "P", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, "V"
	DCB	0x0, "e", 0x0, "r", 0x0, "s", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, " ", 0x0, "(", 0x0, "%", 0x0, "s", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| DCB "U", 0x0
	DCB	"n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@FACKMDLE@?$AAE?$AAS?$AA1?$AA?4?$AA2?$AA?$AA@| DCB "E", 0x0, "S", 0x0
	DCB	"1", 0x0, ".", 0x0, "2", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@ECJPGMFK@?$AAE?$AAS?$AA1?$AA?4?$AA1?$AA?$AA@| DCB "E", 0x0, "S", 0x0
	DCB	"1", 0x0, ".", 0x0, "1", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@LKGLCH@?$AAE?$AAS?$AA3?$AA?4?$AA1?$AA?$AA@| DCB "E", 0x0, "S", 0x0
	DCB	"3", 0x0, ".", 0x0, "1", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@LIAGAMEC@?$AAE?$AAS?$AA3?$AA?4?$AA0?$AA?$AA@| DCB "E", 0x0, "S", 0x0
	DCB	"3", 0x0, ".", 0x0, "0", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@OPHFFOFA@?$AAE?$AAS?$AA2?$AA?4?$AA1?$AA?0?$AA?5?$AAI?$AAD?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAr?$AAm?$AAi?$AAn?$AAe?$AAd?$AA?5?$AAu?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAC?$AAR?$AAC?$AA?$AA@| DCB "E"
	DCB	0x0, "S", 0x0, "2", 0x0, ".", 0x0, "1", 0x0, ",", 0x0, " "
	DCB	0x0, "I", 0x0, "D", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "m", 0x0, "i", 0x0, "n", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "u", 0x0, "s", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "C", 0x0, "R", 0x0, "C", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@OONAPHOG@?$AAE?$AAS?$AA2?$AA?4?$AA0?$AA?0?$AA?5?$AAI?$AAD?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAr?$AAm?$AAi?$AAn?$AAe?$AAd?$AA?5?$AAu?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAC?$AAR?$AAC?$AA?$AA@| DCB "E"
	DCB	0x0, "S", 0x0, "2", 0x0, ".", 0x0, "0", 0x0, ",", 0x0, " "
	DCB	0x0, "I", 0x0, "D", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "m", 0x0, "i", 0x0, "n", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "u", 0x0, "s", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "C", 0x0, "R", 0x0, "C", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@MMBAGLLJ@?$AAE?$AAS?$AA2?$AA?4?$AA1?$AA?$AA@| DCB "E", 0x0, "S", 0x0
	DCB	"2", 0x0, ".", 0x0, "1", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@HEKMAMNM@?$AAE?$AAS?$AA2?$AA?4?$AA0?$AA?$AA@| DCB "E", 0x0, "S", 0x0
	DCB	"2", 0x0, ".", 0x0, "0", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@PKCDALDP@?$AAE?$AAS?$AA1?$AA?4?$AA0?$AA?$AA@| DCB "E", 0x0, "S", 0x0
	DCB	"1", 0x0, ".", 0x0, "0", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_08LPCFAMLO@18?320?357?$AA@| DCB "18:20:57", 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0M@KDNNPCBM@Sep?5?59?52013?$AA@| DCB "Sep  9 2013", 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JC@DPCDJGMK@?$AA?$AN?$AA?6?$AAT?$AAe?$AAx?$AAa?$AAs?$AA?5?$AAI?$AAn?$AAs?$AAt?$AAr?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?5?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAC?$AAE?$AA?5?$AAE@| DCB 0xd
	DCB	0x0, 0xa, 0x0, "T", 0x0, "e", 0x0, "x", 0x0, "a", 0x0, "s"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "s", 0x0, "t", 0x0, "r"
	DCB	0x0, "u", 0x0, "m", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "s"
	DCB	0x0, " ", 0x0, "W", 0x0, "i", 0x0, "n", 0x0, "d", 0x0, "o"
	DCB	0x0, "w", 0x0, "s", 0x0, " ", 0x0, "C", 0x0, "E", 0x0, " "
	DCB	0x0, "E", 0x0, "B", 0x0, "O", 0x0, "O", 0x0, "T", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "O", 0x0, "M"
	DCB	0x0, "A", 0x0, "P", 0x0, "3", 0x0, "5", 0x0, "x", 0x0, "x"
	DCB	0x0, "/", 0x0, "3", 0x0, "7", 0x0, "x", 0x0, "x", 0x0, ","
	DCB	0x0, " ", 0x0, "B", 0x0, "u", 0x0, "i", 0x0, "l", 0x0, "t"
	DCB	0x0, " ", 0x0, "%", 0x0, "S", 0x0, " ", 0x0, "a", 0x0, "t"
	DCB	0x0, " ", 0x0, "%", 0x0, "S", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@BKILFBIJ@?$AAE?$AAB?$AAO?$AAO?$AAT?$AA?5?$AAV?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA?$CF?$AAd?$AA?4?$AA?$CF?$AAd?$AA?0?$AA?5?$AAB?$AAS?$AAP?$AA?5?$AAB?$AAS?$AAP?$AA_?$AAW?$AAI?$AAN@| DCB "E"
	DCB	0x0, "B", 0x0, "O", 0x0, "O", 0x0, "T", 0x0, " ", 0x0, "V"
	DCB	0x0, "e", 0x0, "r", 0x0, "s", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ".", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "B", 0x0, "S", 0x0, "P", 0x0, " "
	DCB	0x0, "B", 0x0, "S", 0x0, "P", 0x0, "_", 0x0, "W", 0x0, "I"
	DCB	0x0, "N", 0x0, "C", 0x0, "E", 0x0, "_", 0x0, "A", 0x0, "R"
	DCB	0x0, "M", 0x0, "_", 0x0, "A", 0x0, "8", 0x0, " ", 0x0, "1"
	DCB	0x0, ".", 0x0, "0", 0x0, "2", 0x0, ".", 0x0, "0", 0x0, "0"
	DCB	0x0, ".", 0x0, "0", 0x0, "2", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\evm_omap3530\src\bootloader\eboot\main.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMPlatformInit| PROC

; 123  : {

  00000		 |$LN57@OEMPlatfor|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M48268|

; 124  :     OMAP_GPTIMER_REGS *pTimerRegs;
; 125  :     UINT32 CpuRevision, version;
; 126  :     HANDLE hTwl,hGPIO;
; 127  :     static UCHAR allocationPool[512];
; 128  :     static const PAD_INFO ebootPinMux[] = {
; 129  :             DSS_PADS
; 130  :             GPIO_PADS
; 131  : 			USBOTG_PADS
; 132  :             END_OF_PAD_ARRAY
; 133  :     };
; 134  :     static const PAD_INFO ebootPinMux_37XX[] = {
; 135  :             DSS_PADS_37XX
; 136  :             GPIO_PADS_37XX
; 137  : 	     	USBOTG_PADS
; 138  :             END_OF_PAD_ARRAY
; 139  :     };
; 140  :     
; 141  :     OALLocalAllocInit(allocationPool,sizeof(allocationPool));

  00008	e59f631c	 ldr         r6, [pc, #0x31C]
  0000c	e3a01c02	 mov         r1, #2, 24
  00010	e1a00006	 mov         r0, r6
  00014	eb000000	 bl          OALLocalAllocInit

; 142  : 
; 143  :     // Get processor and companion chip versions
; 144  : 	g_CPUFamily = CPU_FAMILY_OMAP35XX;

  00018	e3a03000	 mov         r3, #0
  0001c	e5863200	 str         r3, [r6, #0x200]

; 145  :     CpuRevision = Get_CPUVersion();

  00020	eb000000	 bl          Get_CPUVersion
  00024	e1a02000	 mov         r2, r0

; 146  :     version = CPU_REVISION(CpuRevision);
; 147  :     g_CPUFamily = CPU_FAMILY(CpuRevision);

  00028	e1a03802	 mov         r3, r2, lsl #16
  0002c	e3a00312	 mov         r0, #0x12, 6
  00030	e1a03c23	 mov         r3, r3, lsr #24

; 148  : 
; 149  : 	// Set GPTIMER1 regs pointer
; 150  : 	pTimerRegs = OALPAtoUA(OMAP_GPTIMER1_REGS_PA);

  00034	e3a01000	 mov         r1, #0
  00038	e38009c6	 orr         r0, r0, #0xC6, 18
  0003c	e5863200	 str         r3, [r6, #0x200]
  00040	e58d2000	 str         r2, [sp]
  00044	e20250ff	 and         r5, r2, #0xFF
  00048	eb000000	 bl          OALPAtoVA

; 151  : 
; 152  :     if(g_CPUFamily == CPU_FAMILY_DM37XX)

  0004c	e5963200	 ldr         r3, [r6, #0x200]

; 153  :     {
; 154  :         ConfigurePadArray(ebootPinMux_37XX);

  00050	e3a01c7f	 mov         r1, #0x7F, 24
  00054	e38170ff	 orr         r7, r1, #0xFF
  00058	e3a01cff	 mov         r1, #0xFF, 24
  0005c	e59fb2c0	 ldr         r11, [pc, #0x2C0]
  00060	e3530001	 cmp         r3, #1
  00064	e3a03000	 mov         r3, #0
  00068	e38180ff	 orr         r8, r1, #0xFF
  0006c	e1a0a000	 mov         r10, r0
  00070	e3a04000	 mov         r4, #0
  00074	e3a02052	 mov         r2, #0x52
  00078	1a00000b	 bne         |$LN8@OEMPlatfor|
  0007c	e59f92a4	 ldr         r9, [pc, #0x2A4]
  00080		 |$LL40@OEMPlatfor|
  00080	e0833009	 add         r3, r3, r9
  00084	e5933004	 ldr         r3, [r3, #4]
  00088	e1a00002	 mov         r0, r2
  0008c	e0031007	 and         r1, r3, r7
  00090	eb000000	 bl          SOCSetPadConfig
  00094	e2844001	 add         r4, r4, #1
  00098	e1a03184	 mov         r3, r4, lsl #3
  0009c	e19320b9	 ldrh        r2, [r3, +r9]
  000a0	e1520008	 cmp         r2, r8
  000a4	1afffff5	 bne         |$LL40@OEMPlatfor|

; 155  :     }
; 156  :     else

  000a8	ea00000c	 b           |$LN43@OEMPlatfor|
  000ac		 |$LN8@OEMPlatfor|

; 157  :     {
; 158  :         ConfigurePadArray(ebootPinMux);

  000ac	e28b9008	 add         r9, r11, #8
  000b0	e28bb008	 add         r11, r11, #8
  000b4		 |$LL44@OEMPlatfor|
  000b4	e0833009	 add         r3, r3, r9
  000b8	e5933004	 ldr         r3, [r3, #4]
  000bc	e1a00002	 mov         r0, r2
  000c0	e0031007	 and         r1, r3, r7
  000c4	eb000000	 bl          SOCSetPadConfig
  000c8	e2844001	 add         r4, r4, #1
  000cc	e1a03184	 mov         r3, r4, lsl #3
  000d0	e19320bb	 ldrh        r2, [r3, +r11]
  000d4	e1520008	 cmp         r2, r8
  000d8	1afffff5	 bne         |$LL44@OEMPlatfor|
  000dc	e59fb240	 ldr         r11, [pc, #0x240]
  000e0		 |$LN43@OEMPlatfor|

; 159  :     }
; 160  :     //OALLogSetZones( 
; 161  :     //           (1<<OAL_LOG_VERBOSE)  |
; 162  :     //           (1<<OAL_LOG_INFO)     |
; 163  :     //           (1<<OAL_LOG_ERROR)    |
; 164  :     //           (1<<OAL_LOG_WARN)     |
; 165  :     //           (1<<OAL_LOG_FUNC)     |
; 166  :     //           (1<<OAL_LOG_IO)     |
; 167  :     //           0);
; 168  : 
; 169  :     OALLog(
; 170  :         L"\r\nTexas Instruments Windows CE EBOOT for OMAP35xx/37xx, "
; 171  :         L"Built %S at %S\r\n", __DATE__, __TIME__
; 172  :         );

  000e0	e59f2238	 ldr         r2, [pc, #0x238]
  000e4	e59f1230	 ldr         r1, [pc, #0x230]
  000e8	e59f0228	 ldr         r0, [pc, #0x228]
  000ec	eb000000	 bl          NKDbgPrintfW

; 173  :     OALLog(
; 174  :         L"EBOOT Version %d.%d, BSP " BSP_VERSION_STRING L"\r\n", 
; 175  :         EBOOT_VERSION_MAJOR, EBOOT_VERSION_MINOR        
; 176  :         );

  000f0	e59f021c	 ldr         r0, [pc, #0x21C]
  000f4	e3a02000	 mov         r2, #0
  000f8	e3a01000	 mov         r1, #0
  000fc	eb000000	 bl          NKDbgPrintfW

; 177  : 
; 178  :     // Soft reset GPTIMER1
; 179  :     OUTREG32(&pTimerRegs->TIOCP, SYSCONFIG_SOFTRESET);

  00100	e3a03002	 mov         r3, #2
  00104	e58a3010	 str         r3, [r10, #0x10]
  00108		 |$LL6@OEMPlatfor|

; 180  :     // While until done
; 181  :     while ((INREG32(&pTimerRegs->TISTAT) & GPTIMER_TISTAT_RESETDONE) == 0);

  00108	e59a3014	 ldr         r3, [r10, #0x14]
  0010c	e3130001	 tst         r3, #1
  00110	0afffffc	 beq         |$LL6@OEMPlatfor|

; 182  :     // Enable posted mode
; 183  :     OUTREG32(&pTimerRegs->TSICR, GPTIMER_TSICR_POSTED);

  00114	e3a03004	 mov         r3, #4
  00118	e58a3040	 str         r3, [r10, #0x40]

; 184  :     // Start timer
; 185  :     OUTREG32(&pTimerRegs->TCLR, GPTIMER_TCLR_AR|GPTIMER_TCLR_ST);

  0011c	e3a03003	 mov         r3, #3

; 186  :     
; 187  : 	// Enable device clocks used by the bootloader
; 188  :     EnableDeviceClocks(OMAP_DEVICE_GPIO1,TRUE);

  00120	e3a01001	 mov         r1, #1
  00124	e3a00029	 mov         r0, #0x29
  00128	e58a3024	 str         r3, [r10, #0x24]
  0012c	eb000000	 bl          EnableDeviceClocks

; 189  :     EnableDeviceClocks(OMAP_DEVICE_GPIO2,TRUE);

  00130	e3a01001	 mov         r1, #1
  00134	e3a0002d	 mov         r0, #0x2D
  00138	eb000000	 bl          EnableDeviceClocks

; 190  :     EnableDeviceClocks(OMAP_DEVICE_GPIO3,TRUE);

  0013c	e3a01001	 mov         r1, #1
  00140	e3a0002e	 mov         r0, #0x2E
  00144	eb000000	 bl          EnableDeviceClocks

; 191  :     EnableDeviceClocks(OMAP_DEVICE_GPIO4,TRUE);

  00148	e3a01001	 mov         r1, #1
  0014c	e3a0002f	 mov         r0, #0x2F
  00150	eb000000	 bl          EnableDeviceClocks

; 192  :     EnableDeviceClocks(OMAP_DEVICE_GPIO5,TRUE);

  00154	e3a01001	 mov         r1, #1
  00158	e3a00030	 mov         r0, #0x30
  0015c	eb000000	 bl          EnableDeviceClocks

; 193  :     EnableDeviceClocks(OMAP_DEVICE_GPIO6,TRUE);

  00160	e3a01001	 mov         r1, #1
  00164	e3a00031	 mov         r0, #0x31
  00168	eb000000	 bl          EnableDeviceClocks

; 194  : 
; 195  :     // configure i2c devices
; 196  :     OALI2CInit(OMAP_DEVICE_I2C1);

  0016c	e3a0000c	 mov         r0, #0xC
  00170	eb000000	 bl          OALI2CInit

; 197  :     OALI2CInit(OMAP_DEVICE_I2C2);

  00174	e3a0000d	 mov         r0, #0xD
  00178	eb000000	 bl          OALI2CInit

; 198  :     OALI2CInit(OMAP_DEVICE_I2C3);

  0017c	e3a0000e	 mov         r0, #0xE
  00180	eb000000	 bl          OALI2CInit

; 199  : 
; 200  :     GPIOInit();

  00184	eb000000	 bl          GPIOInit

; 201  :     // Note that T2 accesses must occur after I2C initialization
; 202  :     hTwl = TWLOpen();

  00188	eb000000	 bl          TWLOpen
  0018c	e1a07000	 mov         r7, r0

; 203  :     hGPIO = GPIOOpen(); 

  00190	eb000000	 bl          GPIOOpen

; 204  :     
; 205  :     
; 206  :     // Clear Reset on ethernet controller        
; 207  :     GPIOSetBit(hGPIO,LAN9115_RESET_GPIO);            

  00194	e3a01007	 mov         r1, #7
  00198	e1a04000	 mov         r4, r0
  0019c	eb000000	 bl          GPIOSetBit

; 208  :     GPIOSetMode(hGPIO, LAN9115_RESET_GPIO,GPIO_DIR_OUTPUT);

  001a0	e3a02000	 mov         r2, #0
  001a4	e3a01007	 mov         r1, #7
  001a8	e1a00004	 mov         r0, r4
  001ac	eb000000	 bl          GPIOSetMode

; 209  : 
; 210  :     
; 211  : 
; 212  :     OALLog(L"\r\nTI OMAP%x Version 0x%08x (%s)\r\n", CPU_ID(CpuRevision), CPU_REVISION(CpuRevision),        
; 213  :         version == CPU_FAMILY_35XX_REVISION_ES_1_0 ? L"ES1.0" :
; 214  :         version == CPU_FAMILY_35XX_REVISION_ES_2_0 ? L"ES2.0" :
; 215  :         version == CPU_FAMILY_35XX_REVISION_ES_2_1 ? L"ES2.1" :
; 216  :         version == CPU_FAMILY_35XX_REVISION_ES_2_0_CRC ? L"ES2.0, ID determined using CRC" :
; 217  :         version == CPU_FAMILY_35XX_REVISION_ES_2_1_CRC ? L"ES2.1, ID determined using CRC" :
; 218  :         version == CPU_FAMILY_35XX_REVISION_ES_3_0 ? L"ES3.0" :
; 219  :         version == CPU_FAMILY_35XX_REVISION_ES_3_1 ? L"ES3.1" : 
; 220  :         version == CPU_FAMILY_37XX_REVISION_ES_1_0? L"ES1.0" :
; 221  :         version == CPU_FAMILY_37XX_REVISION_ES_1_1? L"ES1.1" :
; 222  :         version == CPU_FAMILY_37XX_REVISION_ES_1_2? L"ES1.2" :
; 223  :         L"Unknown" );  

  001b0	e59f4158	 ldr         r4, [pc, #0x158]
  001b4	e3550000	 cmp         r5, #0
  001b8	0a000013	 beq         |$LN52@OEMPlatfor|
  001bc	e3550001	 cmp         r5, #1
  001c0	059f3144	 ldreq       r3, [pc, #0x144]
  001c4	0a000018	 beq         |$LN12@OEMPlatfor|
  001c8	e3550002	 cmp         r5, #2
  001cc	059f3134	 ldreq       r3, [pc, #0x134]
  001d0	0a000015	 beq         |$LN12@OEMPlatfor|
  001d4	e3550003	 cmp         r5, #3
  001d8	059f3124	 ldreq       r3, [pc, #0x124]
  001dc	0a000012	 beq         |$LN12@OEMPlatfor|
  001e0	e3550004	 cmp         r5, #4
  001e4	059f3114	 ldreq       r3, [pc, #0x114]
  001e8	0a00000f	 beq         |$LN12@OEMPlatfor|
  001ec	e3550005	 cmp         r5, #5
  001f0	059f3104	 ldreq       r3, [pc, #0x104]
  001f4	0a00000c	 beq         |$LN12@OEMPlatfor|
  001f8	e3550006	 cmp         r5, #6
  001fc	059f30f4	 ldreq       r3, [pc, #0xF4]
  00200	0a000009	 beq         |$LN12@OEMPlatfor|
  00204	e3550010	 cmp         r5, #0x10
  00208	1a000001	 bne         |$LN15@OEMPlatfor|
  0020c		 |$LN52@OEMPlatfor|
  0020c	e1a03004	 mov         r3, r4
  00210	ea000005	 b           |$LN12@OEMPlatfor|
  00214		 |$LN15@OEMPlatfor|
  00214	e3550011	 cmp         r5, #0x11
  00218	059f30c0	 ldreq       r3, [pc, #0xC0]
  0021c	0a000002	 beq         |$LN12@OEMPlatfor|
  00220	e3550012	 cmp         r5, #0x12
  00224	059f30b0	 ldreq       r3, [pc, #0xB0]
  00228	159f30a4	 ldrne       r3, [pc, #0xA4]
  0022c		 |$LN12@OEMPlatfor|
  0022c	e59d1000	 ldr         r1, [sp]
  00230	e59f00bc	 ldr         r0, [pc, #0xBC]
  00234	e1a02005	 mov         r2, r5
  00238	e1a01821	 mov         r1, r1, lsr #16
  0023c	eb000000	 bl          NKDbgPrintfW

; 224  :     /* Initialize Device Prefix */
; 225  :     if(g_CPUFamily == CPU_FAMILY_DM37XX)

  00240	e5963200	 ldr         r3, [r6, #0x200]
  00244	e3530001	 cmp         r3, #1

; 226  :     {
; 227  :         gDevice_prefix = BSP_DEVICE_37xx_PREFIX;

  00248	059f20a0	 ldreq       r2, [pc, #0xA0]
  0024c	0a000005	 beq         |$LN53@OEMPlatfor|

; 228  :     }
; 229  :     else if (g_CPUFamily == CPU_FAMILY_OMAP35XX)

  00250	e5963200	 ldr         r3, [r6, #0x200]
  00254	e3530000	 cmp         r3, #0

; 230  :     {
; 231  :         gDevice_prefix = BSP_DEVICE_35xx_PREFIX;
; 232  :     }
; 233  :     else
; 234  :     {
; 235  :         OALLog(L"INFO: UnKnown CPU family:%d....\r\n", g_CPUFamily);

  00258	15961200	 ldrne       r1, [r6, #0x200]
  0025c	159f0088	 ldrne       r0, [pc, #0x88]
  00260	1b000000	 blne        NKDbgPrintfW

; 236  :         gDevice_prefix = BSP_DEVICE_35xx_PREFIX;

  00264	e59f207c	 ldr         r2, [pc, #0x7C]
  00268		 |$LN53@OEMPlatfor|
  00268	e59f3074	 ldr         r3, [pc, #0x74]

; 237  :     }
; 238  : 
; 239  :     version = TWLReadIDCode(hTwl);

  0026c	e1a00007	 mov         r0, r7
  00270	e5832000	 str         r2, [r3]
  00274	eb000000	 bl          TWLReadIDCode
  00278	e1b01000	 movs        r1, r0

; 240  : 
; 241  :     OALLog(L"TPS659XX Version 0x%02x (%s)\r\n", version,
; 242  :         version == 0x00 ? L"ES1.0" : 
; 243  :         version == 0x10 ? L"ES1.1" : 
; 244  :         version == 0x20 ? L"ES1.2" : 
; 245  :         version == 0x30 ? L"ES1.3" : L"Unknown" );

  0027c	0a000008	 beq         |$LN32@OEMPlatfor|
  00280	e3510010	 cmp         r1, #0x10
  00284	059f4054	 ldreq       r4, [pc, #0x54]
  00288	0a000005	 beq         |$LN32@OEMPlatfor|
  0028c	e3510020	 cmp         r1, #0x20
  00290	059f4044	 ldreq       r4, [pc, #0x44]
  00294	0a000002	 beq         |$LN32@OEMPlatfor|
  00298	e3510030	 cmp         r1, #0x30
  0029c	059f4034	 ldreq       r4, [pc, #0x34]
  002a0	159f402c	 ldrne       r4, [pc, #0x2C]
  002a4		 |$LN32@OEMPlatfor|
  002a4	e59f0024	 ldr         r0, [pc, #0x24]
  002a8	e1a02004	 mov         r2, r4
  002ac	eb000000	 bl          NKDbgPrintfW

; 246  : 		
; 247  :     g_ecctype = (UCHAR)dwEbootECCtype;

  002b0	e59b2000	 ldr         r2, [r11]
  002b4	e59f3010	 ldr         r3, [pc, #0x10]

; 248  : 
; 249  :     // Done
; 250  :     return TRUE;

  002b8	e3a00001	 mov         r0, #1
  002bc	e5c32000	 strb        r2, [r3]

; 251  : }

  002c0	e28dd004	 add         sp, sp, #4
  002c4	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  002c8	e12fff1e	 bx          lr
  002cc		 |$LN58@OEMPlatfor|
  002cc		 |$LN59@OEMPlatfor|
  002cc	00000000	 DCD         |g_ecctype|
  002d0		 |$LN60@OEMPlatfor|
  002d0	00000000	 DCD         |??_C@_1DO@MGHPPPEE@?$AAT?$AAP?$AAS?$AA6?$AA5?$AA9?$AAX?$AAX?$AA?5?$AAV?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?5?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  002d4		 |$LN61@OEMPlatfor|
  002d4	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  002d8		 |$LN62@OEMPlatfor|
  002d8	00000000	 DCD         |??_C@_1M@OIJGKENB@?$AAE?$AAS?$AA1?$AA?4?$AA3?$AA?$AA@|
  002dc		 |$LN63@OEMPlatfor|
  002dc	00000000	 DCD         |??_C@_1M@FACKMDLE@?$AAE?$AAS?$AA1?$AA?4?$AA2?$AA?$AA@|
  002e0		 |$LN64@OEMPlatfor|
  002e0	00000000	 DCD         |??_C@_1M@ECJPGMFK@?$AAE?$AAS?$AA1?$AA?4?$AA1?$AA?$AA@|
  002e4		 |$LN65@OEMPlatfor|
  002e4	00000000	 DCD         |gDevice_prefix|
  002e8		 |$LN66@OEMPlatfor|
  002e8	00000000	 DCD         |??_C@_08DGJGOJCE@EVM3530?9?$AA@|
  002ec		 |$LN67@OEMPlatfor|
  002ec	00000000	 DCD         |??_C@_1EE@KGKCAFPP@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAU?$AAn?$AAK?$AAn?$AAo?$AAw?$AAn?$AA?5?$AAC?$AAP?$AAU?$AA?5?$AAf?$AAa?$AAm?$AAi?$AAl?$AAy?$AA?3?$AA?$CF?$AAd?$AA?4?$AA?4?$AA?4?$AA?4?$AA?$AN@|
  002f0		 |$LN68@OEMPlatfor|
  002f0	00000000	 DCD         |??_C@_08EMFGLKEE@EVM3730?9?$AA@|
  002f4		 |$LN69@OEMPlatfor|
  002f4	00000000	 DCD         |??_C@_1EE@EMFEEPJF@?$AA?$AN?$AA?6?$AAT?$AAI?$AA?5?$AAO?$AAM?$AAA?$AAP?$AA?$CF?$AAx?$AA?5?$AAV?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?$AN@|
  002f8		 |$LN70@OEMPlatfor|
  002f8	00000000	 DCD         |??_C@_1M@LKGLCH@?$AAE?$AAS?$AA3?$AA?4?$AA1?$AA?$AA@|
  002fc		 |$LN71@OEMPlatfor|
  002fc	00000000	 DCD         |??_C@_1M@LIAGAMEC@?$AAE?$AAS?$AA3?$AA?4?$AA0?$AA?$AA@|
  00300		 |$LN72@OEMPlatfor|
  00300	00000000	 DCD         |??_C@_1DO@OPHFFOFA@?$AAE?$AAS?$AA2?$AA?4?$AA1?$AA?0?$AA?5?$AAI?$AAD?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAr?$AAm?$AAi?$AAn?$AAe?$AAd?$AA?5?$AAu?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAC?$AAR?$AAC?$AA?$AA@|
  00304		 |$LN73@OEMPlatfor|
  00304	00000000	 DCD         |??_C@_1DO@OONAPHOG@?$AAE?$AAS?$AA2?$AA?4?$AA0?$AA?0?$AA?5?$AAI?$AAD?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAr?$AAm?$AAi?$AAn?$AAe?$AAd?$AA?5?$AAu?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAC?$AAR?$AAC?$AA?$AA@|
  00308		 |$LN74@OEMPlatfor|
  00308	00000000	 DCD         |??_C@_1M@MMBAGLLJ@?$AAE?$AAS?$AA2?$AA?4?$AA1?$AA?$AA@|
  0030c		 |$LN75@OEMPlatfor|
  0030c	00000000	 DCD         |??_C@_1M@HEKMAMNM@?$AAE?$AAS?$AA2?$AA?4?$AA0?$AA?$AA@|
  00310		 |$LN76@OEMPlatfor|
  00310	00000000	 DCD         |??_C@_1M@PKCDALDP@?$AAE?$AAS?$AA1?$AA?4?$AA0?$AA?$AA@|
  00314		 |$LN77@OEMPlatfor|
  00314	00000000	 DCD         |??_C@_1GO@BKILFBIJ@?$AAE?$AAB?$AAO?$AAO?$AAT?$AA?5?$AAV?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA?$CF?$AAd?$AA?4?$AA?$CF?$AAd?$AA?0?$AA?5?$AAB?$AAS?$AAP?$AA?5?$AAB?$AAS?$AAP?$AA_?$AAW?$AAI?$AAN@|
  00318		 |$LN78@OEMPlatfor|
  00318	00000000	 DCD         |??_C@_1JC@DPCDJGMK@?$AA?$AN?$AA?6?$AAT?$AAe?$AAx?$AAa?$AAs?$AA?5?$AAI?$AAn?$AAs?$AAt?$AAr?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?5?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAC?$AAE?$AA?5?$AAE@|
  0031c		 |$LN79@OEMPlatfor|
  0031c	00000000	 DCD         |??_C@_0M@KDNNPCBM@Sep?5?59?52013?$AA@|
  00320		 |$LN80@OEMPlatfor|
  00320	00000000	 DCD         |??_C@_08LPCFAMLO@18?320?357?$AA@|
  00324		 |$LN81@OEMPlatfor|
  00324	00000000	 DCD         |dwEbootECCtype|
  00328		 |$LN82@OEMPlatfor|
  00328	00000000	 DCD         |?ebootPinMux_37XX@?1??OEMPlatformInit@@9@9|
  0032c		 |$LN83@OEMPlatfor|
  0032c	00000000	 DCD         |?allocationPool@?1??OEMPlatformInit@@9@9|
  00330		 |$M48269|

			 ENDP  ; |OEMPlatformInit|


  00000			 AREA	 |.pdata|, PDATA
|$T48306| DCD	|$LN8@OEMPlatfor@2|
	DCD	0x40003901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMPlatformDeinit| PROC

; 261  : {

  00000		 |$LN8@OEMPlatfor@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M48303|
  00004	e3a03312	 mov         r3, #0x12, 6

; 262  :     OMAP_GPTIMER_REGS *pTimerRegs = OALPAtoUA(OMAP_GPTIMER1_REGS_PA);

  00008	e38309c6	 orr         r0, r3, #0xC6, 18
  0000c	e3a01000	 mov         r1, #0
  00010	eb000000	 bl          OALPAtoVA

; 263  : 
; 264  :     // Soft reset GPTIMER
; 265  :     OUTREG32(&pTimerRegs->TIOCP, SYSCONFIG_SOFTRESET);

  00014	e3a03002	 mov         r3, #2
  00018	e5803010	 str         r3, [r0, #0x10]
  0001c		 |$LL2@OEMPlatfor@2|

; 266  :     // While until done
; 267  :     while ((INREG32(&pTimerRegs->TISTAT) & GPTIMER_TISTAT_RESETDONE) == 0);

  0001c	e5903014	 ldr         r3, [r0, #0x14]
  00020	e3130001	 tst         r3, #1
  00024	0afffffc	 beq         |$LL2@OEMPlatfor@2|

; 268  : 
; 269  : 	// Disable device clocks that were used by the bootloader
; 270  :     EnableDeviceClocks(OMAP_DEVICE_GPIO1,FALSE);

  00028	e3a01000	 mov         r1, #0
  0002c	e3a00029	 mov         r0, #0x29
  00030	eb000000	 bl          EnableDeviceClocks

; 271  :     EnableDeviceClocks(OMAP_DEVICE_GPIO2,FALSE);

  00034	e3a01000	 mov         r1, #0
  00038	e3a0002d	 mov         r0, #0x2D
  0003c	eb000000	 bl          EnableDeviceClocks

; 272  :     EnableDeviceClocks(OMAP_DEVICE_GPIO3,FALSE);

  00040	e3a01000	 mov         r1, #0
  00044	e3a0002e	 mov         r0, #0x2E
  00048	eb000000	 bl          EnableDeviceClocks

; 273  :     EnableDeviceClocks(OMAP_DEVICE_GPIO4,FALSE);

  0004c	e3a01000	 mov         r1, #0
  00050	e3a0002f	 mov         r0, #0x2F
  00054	eb000000	 bl          EnableDeviceClocks

; 274  :     EnableDeviceClocks(OMAP_DEVICE_GPIO5,FALSE);

  00058	e3a01000	 mov         r1, #0
  0005c	e3a00030	 mov         r0, #0x30
  00060	eb000000	 bl          EnableDeviceClocks

; 275  :     EnableDeviceClocks(OMAP_DEVICE_GPIO6,FALSE);

  00064	e3a01000	 mov         r1, #0
  00068	e3a00031	 mov         r0, #0x31
  0006c	eb000000	 bl          EnableDeviceClocks

; 276  :     EnableDeviceClocks(OMAP_DEVICE_GPTIMER2,FALSE);

  00070	e3a01000	 mov         r1, #0
  00074	e3a00035	 mov         r0, #0x35
  00078	eb000000	 bl          EnableDeviceClocks

; 277  :     EnableDeviceClocks(OMAP_DEVICE_UART1,FALSE);

  0007c	e3a01000	 mov         r1, #0
  00080	e3a0000a	 mov         r0, #0xA
  00084	eb000000	 bl          EnableDeviceClocks

; 278  : 	EnableDeviceClocks(OMAP_DEVICE_UART2,FALSE);

  00088	e3a01000	 mov         r1, #0
  0008c	e3a0000b	 mov         r0, #0xB
  00090	eb000000	 bl          EnableDeviceClocks

; 279  :     EnableDeviceClocks(OMAP_DEVICE_UART3,FALSE);

  00094	e3a01000	 mov         r1, #0
  00098	e3a0003d	 mov         r0, #0x3D
  0009c	eb000000	 bl          EnableDeviceClocks

; 280  :     EnableDeviceClocks(OMAP_DEVICE_MMC1,FALSE);

  000a0	e3a01000	 mov         r1, #0
  000a4	e3a00015	 mov         r0, #0x15
  000a8	eb000000	 bl          EnableDeviceClocks

; 281  :     EnableDeviceClocks(OMAP_DEVICE_MMC2,FALSE);

  000ac	e3a01000	 mov         r1, #0
  000b0	e3a00016	 mov         r0, #0x16
  000b4	eb000000	 bl          EnableDeviceClocks

; 282  :     EnableDeviceClocks(OMAP_DEVICE_I2C1,FALSE);

  000b8	e3a01000	 mov         r1, #0
  000bc	e3a0000c	 mov         r0, #0xC
  000c0	eb000000	 bl          EnableDeviceClocks

; 283  :     EnableDeviceClocks(OMAP_DEVICE_I2C2,FALSE);

  000c4	e3a01000	 mov         r1, #0
  000c8	e3a0000d	 mov         r0, #0xD
  000cc	eb000000	 bl          EnableDeviceClocks

; 284  :     EnableDeviceClocks(OMAP_DEVICE_I2C3,FALSE);

  000d0	e3a01000	 mov         r1, #0
  000d4	e3a0000e	 mov         r0, #0xE
  000d8	eb000000	 bl          EnableDeviceClocks

; 285  : }

  000dc	e49de004	 ldr         lr, [sp], #4
  000e0	e12fff1e	 bx          lr
  000e4		 |$M48304|

			 ENDP  ; |OEMPlatformDeinit|

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|OEMMultiBinNotify|
	EXPORT	|??_C@_1CK@FDDKFJJE@?$AA?9?$AAO?$AAE?$AAM?$AAM?$AAu?$AAl?$AAt?$AAi?$AAB?$AAi?$AAn?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@JHMEBKAH@?$AAS?$AAp?$AAi?$AAn?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAe?$AAv?$AAe?$AAr?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@FNKKGJOD@?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@CJMKOEPD@?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAd?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAe?$AAd?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_08CMMENMPK@logo?4nb0?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@BJIBFLEA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAM?$AAu?$AAl?$AAt?$AAi?$AAX?$AAI?$AAP?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAu?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@NLHBBJNL@?$AA?$FL?$AA?$CF?$AAd?$AA?$FN?$AA?3?$AA?5?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?5?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$DN?$AA0?$AAx?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@MNPMBDFE@?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@OFMGKCPE@?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AAi?$AAn?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@EIADDJAP@?$AA?$CL?$AAO?$AAE?$AAM?$AAM?$AAu?$AAl?$AAt?$AAi?$AAB?$AAi?$AAn?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?9?$AA?$DO?$AA?5?$AA?$CF?$AAd?$AA?$CJ@| [ DATA ] ; `string'
	IMPORT	|OALLogSerial|
	IMPORT	|dpCurSettings|
	IMPORT	|OALVAtoPA|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|strncmp|
	IMPORT	|memset|
	IMPORT	|__security_check_cookie|

  00000			 AREA	 |.pdata|, PDATA
|$T48364| DCD	|$LN64@OEMMultiBi|
	DCD	0xc000aa02

  00000			 AREA	 |.xdata|, DATA
|$T48360| DCD	0xffffffdc

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@FDDKFJJE@?$AA?9?$AAO?$AAE?$AAM?$AAM?$AAu?$AAl?$AAt?$AAi?$AAB?$AAi?$AAn?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "M", 0x0, "u", 0x0, "l"
	DCB	0x0, "t", 0x0, "i", 0x0, "B", 0x0, "i", 0x0, "n", 0x0, "N"
	DCB	0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f", 0x0, "y", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@JHMEBKAH@?$AAS?$AAp?$AAi?$AAn?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAe?$AAv?$AAe?$AAr?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "p", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, ".", 0x0, ".", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@FNKKGJOD@?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "o", 0x0, "w", 0x0, "n", 0x0, "l", 0x0, "o", 0x0, "a"
	DCB	0x0, "d", 0x0, " ", 0x0, "f", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, " ", 0x0, "t", 0x0, "y", 0x0, "p", 0x0, "e", 0x0, ":"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@CJMKOEPD@?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAd?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAe?$AAd?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "n", 0x0, "s", 0x0, "u", 0x0, "p", 0x0, "p", 0x0, "o"
	DCB	0x0, "r", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "d"
	DCB	0x0, "o", 0x0, "w", 0x0, "n", 0x0, "l", 0x0, "o", 0x0, "a"
	DCB	0x0, "d", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_08CMMENMPK@logo?4nb0?$AA@| DCB "logo.nb0", 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@BJIBFLEA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAM?$AAu?$AAl?$AAt?$AAi?$AAX?$AAI?$AAP?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAu?$AAp@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "M", 0x0, "u", 0x0, "l", 0x0, "t", 0x0, "i", 0x0, "X"
	DCB	0x0, "I", 0x0, "P", 0x0, " ", 0x0, "i", 0x0, "m", 0x0, "a"
	DCB	0x0, "g", 0x0, "e", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " "
	DCB	0x0, "n", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "s", 0x0, "u"
	DCB	0x0, "p", 0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@NLHBBJNL@?$AA?$FL?$AA?$CF?$AAd?$AA?$FN?$AA?3?$AA?5?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?5?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$DN?$AA0?$AAx?$AA?$CF@| DCB "["
	DCB	0x0, "%", 0x0, "d", 0x0, "]", 0x0, ":", 0x0, " ", 0x0, "A"
	DCB	0x0, "d", 0x0, "d", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, " ", 0x0, " ", 0x0, "L", 0x0, "e", 0x0, "n"
	DCB	0x0, "g", 0x0, "t", 0x0, "h", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, " ", 0x0, " "
	DCB	0x0, "S", 0x0, "a", 0x0, "v", 0x0, "e", 0x0, "=", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@MNPMBDFE@?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@| DCB "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@OFMGKCPE@?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AAi?$AAn?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "o", 0x0, "w", 0x0, "n", 0x0, "l", 0x0, "o", 0x0, "a"
	DCB	0x0, "d", 0x0, " ", 0x0, "f", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, "m", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, ":", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@EIADDJAP@?$AA?$CL?$AAO?$AAE?$AAM?$AAM?$AAu?$AAl?$AAt?$AAi?$AAB?$AAi?$AAn?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?9?$AA?$DO?$AA?5?$AA?$CF?$AAd?$AA?$CJ@| DCB "+"
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "M", 0x0, "u", 0x0, "l"
	DCB	0x0, "t", 0x0, "i", 0x0, "B", 0x0, "i", 0x0, "n", 0x0, "N"
	DCB	0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f", 0x0, "y", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, " ", 0x0, "-", 0x0, ">", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T48360|

  00008		 |OEMMultiBinNotify| PROC

; 761  : {

  00008		 |$LN64@OEMMultiBi|
  00008	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  0000c	e24ddf43	 sub         sp, sp, #0x43, 30
  00010		 |$M48361|
  00010	e1a06000	 mov         r6, r0
  00014	e59f3290	 ldr         r3, [pc, #0x290]
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3108	 str         r3, [sp, #0x108]
  00020	e3a03102	 mov         r3, #2, 2

; 762  :     BOOL rc = FALSE;
; 763  :     UINT32 base = OALVAtoPA((UCHAR*)IMAGE_WINCE_CODE_CA);

  00024	e3830a02	 orr         r0, r3, #2, 20
  00028	eb000000	 bl          OALVAtoPA

; 764  :     UINT32 start, length;
; 765  :     UINT32 ix;
; 766  : 
; 767  : 
; 768  :     OALMSGS(OAL_FUNC, (
; 769  :         L"+OEMMultiBinNotify(0x%08x -> %d)\r\n", pInfo, pInfo->dwNumRegions
; 770  :         ));

  0002c	e59f5274	 ldr         r5, [pc, #0x274]
  00030	e1a0a000	 mov         r10, r0
  00034	e5953440	 ldr         r3, [r5, #0x440]
  00038	e3130004	 tst         r3, #4
  0003c	15962000	 ldrne       r2, [r6]
  00040	159f025c	 ldrne       r0, [pc, #0x25C]
  00044	11a01006	 movne       r1, r6
  00048	1b000000	 blne        OALLogSerial
  0004c	e5953440	 ldr         r3, [r5, #0x440]

; 771  :     OALMSG(OAL_INFO, (
; 772  :         L"Download file information:\r\n"
; 773  :         ));

  00050	e3130008	 tst         r3, #8
  00054	159f0244	 ldrne       r0, [pc, #0x244]
  00058	1b000000	 blne        NKDbgPrintfW
  0005c	e5953440	 ldr         r3, [r5, #0x440]

; 774  :     OALMSG(OAL_INFO, (
; 775  :         L"-----------------------------------------------------------\r\n"
; 776  :         ));

  00060	e3130008	 tst         r3, #8
  00064	159f0228	 ldrne       r0, [pc, #0x228]
  00068	1b000000	 blne        NKDbgPrintfW

; 777  : 
; 778  :     // Copy information to EBOOT structure and set also save address
; 779  :     g_eboot.numRegions = pInfo->dwNumRegions;

  0006c	e59f4228	 ldr         r4, [pc, #0x228]
  00070	e5963000	 ldr         r3, [r6]

; 780  :     for (ix = 0; ix < pInfo->dwNumRegions; ix++)

  00074	e3a08000	 mov         r8, #0
  00078	e5843008	 str         r3, [r4, #8]
  0007c	e5963000	 ldr         r3, [r6]
  00080	e3530000	 cmp         r3, #0
  00084	9a000015	 bls         |$LN22@OEMMultiBi|
  00088	e1a07004	 mov         r7, r4
  0008c	e1a09006	 mov         r9, r6
  00090		 |$LL24@OEMMultiBi|

; 781  :         {
; 782  :         g_eboot.region[ix].start = pInfo->Region[ix].dwRegionStart;

  00090	e5993004	 ldr         r3, [r9, #4]
  00094	e5952440	 ldr         r2, [r5, #0x440]
  00098	e5873010	 str         r3, [r7, #0x10]

; 783  :         g_eboot.region[ix].length = pInfo->Region[ix].dwRegionLength;

  0009c	e5993008	 ldr         r3, [r9, #8]

; 784  :         g_eboot.region[ix].base = base;
; 785  :         base += g_eboot.region[ix].length;
; 786  :         OALMSG(OAL_INFO, (
; 787  :             L"[%d]: Address=0x%08x  Length=0x%08x  Save=0x%08x\r\n",
; 788  :             ix, g_eboot.region[ix].start, g_eboot.region[ix].length,
; 789  :             g_eboot.region[ix].base
; 790  :             ));

  000a0	e3120008	 tst         r2, #8
  000a4	e587a018	 str         r10, [r7, #0x18]
  000a8	15971018	 ldrne       r1, [r7, #0x18]
  000ac	15972010	 ldrne       r2, [r7, #0x10]
  000b0	159f01e0	 ldrne       r0, [pc, #0x1E0]
  000b4	158d1000	 strne       r1, [sp]
  000b8	11a01008	 movne       r1, r8
  000bc	e5873014	 str         r3, [r7, #0x14]
  000c0	e08aa003	 add         r10, r10, r3
  000c4	1b000000	 blne        NKDbgPrintfW
  000c8	e5963000	 ldr         r3, [r6]
  000cc	e2888001	 add         r8, r8, #1
  000d0	e2899f43	 add         r9, r9, #0x43, 30
  000d4	e1580003	 cmp         r8, r3
  000d8	e287700c	 add         r7, r7, #0xC
  000dc	3affffeb	 bcc         |$LL24@OEMMultiBi|
  000e0		 |$LN22@OEMMultiBi|

; 764  :     UINT32 start, length;
; 765  :     UINT32 ix;
; 766  : 
; 767  : 
; 768  :     OALMSGS(OAL_FUNC, (
; 769  :         L"+OEMMultiBinNotify(0x%08x -> %d)\r\n", pInfo, pInfo->dwNumRegions
; 770  :         ));

  000e0	e5953440	 ldr         r3, [r5, #0x440]

; 791  :         }
; 792  :     OALMSG(OAL_INFO, (
; 793  :         L"-----------------------------------------------------------\r\n"
; 794  :         ));

  000e4	e3130008	 tst         r3, #8
  000e8	159f01a4	 ldrne       r0, [pc, #0x1A4]
  000ec	1b000000	 blne        NKDbgPrintfW
  000f0	e5943008	 ldr         r3, [r4, #8]

; 795  : 
; 796  : #ifndef IMGMULTIXIP
; 797  : 
; 798  :     //Determine type of image downloaded
; 799  :     if (g_eboot.numRegions > 1) 

  000f4	e3530001	 cmp         r3, #1
  000f8	9a000004	 bls         |$LN21@OEMMultiBi|
  000fc	e5953440	 ldr         r3, [r5, #0x440]

; 800  :     {
; 801  :         OALMSG(OAL_ERROR, (L"ERROR: MultiXIP image is not supported\r\n"));

  00100	e3130001	 tst         r3, #1
  00104	0a000047	 beq         |$LN53@OEMMultiBi|
  00108	e59f0180	 ldr         r0, [pc, #0x180]

; 802  :         goto cleanUp;

  0010c	ea000044	 b           |$LN59@OEMMultiBi|
  00110		 |$LN21@OEMMultiBi|

; 803  :     }
; 804  : #endif
; 805  : 
; 806  :     base = g_eboot.region[0].base;
; 807  :     start = g_eboot.region[0].start;

  00110	e5941010	 ldr         r1, [r4, #0x10]
  00114	e3a03101	 mov         r3, #1, 2

; 808  :     length = g_eboot.region[0].length; 
; 809  :     
; 810  :     if (start == IMAGE_XLDR_CODE_PA)

  00118	e3833602	 orr         r3, r3, #2, 12
  0011c	e1510003	 cmp         r1, r3
  00120	e5940018	 ldr         r0, [r4, #0x18]
  00124	e5947014	 ldr         r7, [r4, #0x14]

; 811  :         {
; 812  :         g_eboot.type = DOWNLOAD_TYPE_XLDR;

  00128	03a03003	 moveq       r3, #3
  0012c	0a00000e	 beq         |$LN61@OEMMultiBi|

; 813  :         memset(OALPAtoCA(base), 0xFF, length);

  00130	e3a03487	 mov         r3, #0x87, 8

; 814  :         } 
; 815  :     else if (start == IMAGE_EBOOT_CODE_CA)

  00134	e383360e	 orr         r3, r3, #0xE, 12
  00138	e1510003	 cmp         r1, r3

; 816  :         {
; 817  :         g_eboot.type = DOWNLOAD_TYPE_EBOOT;

  0013c	03a03004	 moveq       r3, #4
  00140	0a000009	 beq         |$LN61@OEMMultiBi|

; 818  :         memset(OALPAtoCA(base), 0xFF, length);

  00144	e3a03103	 mov         r3, #3, 2

; 819  :         }
; 820  :     else if (start == (IMAGE_WINCE_CODE_CA + NAND_ROMOFFSET))

  00148	e3833a02	 orr         r3, r3, #2, 20
  0014c	e1510003	 cmp         r1, r3

; 821  :         {
; 822  :         g_eboot.type = DOWNLOAD_TYPE_FLASHNAND;

  00150	03a03006	 moveq       r3, #6
  00154	0a000004	 beq         |$LN61@OEMMultiBi|

; 823  :         memset(OALPAtoCA(base), 0xFF, length);

  00158	e3a0320e	 mov         r3, #0xE, 4

; 824  :         } 
; 825  : #ifdef IMGMULTIXIP
; 826  :     else if (start == (IMAGE_WINCE_EXT_CA))
; 827  :         {
; 828  :         g_eboot.type = DOWNLOAD_TYPE_EXT;
; 829  :         memset(OALPAtoCA(base), 0xFF, length);
; 830  :         } 
; 831  : #endif	
; 832  :     else if (start == (IMAGE_WINCE_CODE_CA + NOR_ROMOFFSET))

  0015c	e3833a02	 orr         r3, r3, #2, 20
  00160	e1510003	 cmp         r1, r3
  00164	1a000007	 bne         |$LN14@OEMMultiBi|

; 833  :         {
; 834  :         g_eboot.type = DOWNLOAD_TYPE_FLASHNOR;

  00168	e3a03007	 mov         r3, #7
  0016c		 |$LN61@OEMMultiBi|

; 835  :         memset(OALPAtoCA(base), 0xFF, length);

  0016c	e3a01001	 mov         r1, #1
  00170	e5843004	 str         r3, [r4, #4]
  00174	eb000000	 bl          OALPAtoVA
  00178	e1a02007	 mov         r2, r7
  0017c	e3a010ff	 mov         r1, #0xFF
  00180	eb000000	 bl          memset
  00184	ea00002e	 b           |$LN4@OEMMultiBi|
  00188		 |$LN14@OEMMultiBi|

; 836  :         } 
; 837  : 	else if (start == 0) // Probably a NB0 file, let's fint out

  00188	e3510000	 cmp         r1, #0
  0018c	1a00002a	 bne         |$LN12@OEMMultiBi|

; 838  : 		{
; 839  : 		// Convert the file name to lower case
; 840  : 		CHAR szFileName[MAX_PATH];
; 841  : 		int i = 0;
; 842  : 		int fileExtPos = 0;
; 843  : 
; 844  : 		while ((pInfo->Region[0].szFileName[i] != '\0') && (i < MAX_PATH))

  00190	e1d630dc	 ldrsb       r3, [r6, #0xC]
  00194	e3a00000	 mov         r0, #0
  00198	e3530000	 cmp         r3, #0
  0019c	0a00000f	 beq         |$LN58@OEMMultiBi|
  001a0	e28d3004	 add         r3, sp, #4
  001a4	e0431006	 sub         r1, r3, r6
  001a8	e1a02006	 mov         r2, r6
  001ac		 |$LL11@OEMMultiBi|
  001ac	e3500f41	 cmp         r0, #0x41, 30
  001b0	aa00000a	 bge         |$LN58@OEMMultiBi|

; 845  : 		{
; 846  : 			if((pInfo->Region[0].szFileName[i] >= 'A') && (pInfo->Region[0].szFileName[i] <= 'Z')) 

  001b4	e1d230dc	 ldrsb       r3, [r2, #0xC]
  001b8	e3530041	 cmp         r3, #0x41
  001bc	ba000001	 blt         |$LN9@OEMMultiBi|
  001c0	e353005a	 cmp         r3, #0x5A

; 847  : 			{
; 848  : 				szFileName[i] = (pInfo->Region[0].szFileName[i] - 'A' + 'a'); 

  001c4	d2833020	 addle       r3, r3, #0x20
  001c8		 |$LN9@OEMMultiBi|

; 849  : 			}
; 850  : 			else
; 851  : 			{
; 852  : 				szFileName[i] = pInfo->Region[0].szFileName[i];

  001c8	e7c13002	 strb        r3, [r1, +r2]

; 853  : 			}
; 854  : 
; 855  : 			// Keep track of file extension position
; 856  : 			if (szFileName[i] == '.')
; 857  : 			{
; 858  : 				fileExtPos = i;
; 859  : 			}
; 860  : 			i++;

  001cc	e2822001	 add         r2, r2, #1
  001d0	e1d230dc	 ldrsb       r3, [r2, #0xC]
  001d4	e2800001	 add         r0, r0, #1
  001d8	e3530000	 cmp         r3, #0
  001dc	1afffff2	 bne         |$LL11@OEMMultiBi|
  001e0		 |$LN58@OEMMultiBi|

; 861  : 		}
; 862  : 
; 863  : 		// Copy string terminator as well
; 864  : 		szFileName[i] = pInfo->Region[0].szFileName[i];

  001e0	e0863000	 add         r3, r6, r0
  001e4	e1d320dc	 ldrsb       r2, [r3, #0xC]

; 865  : 
; 866  : 		// Check if we support this file
; 867  : 		if (strncmp(szFileName, LOGO_NB0_FILE, LOGO_NB0_FILE_LEN) == 0)

  001e8	e59f109c	 ldr         r1, [pc, #0x9C]
  001ec	e28d3004	 add         r3, sp, #4
  001f0	e7c02003	 strb        r2, [r0, +r3]
  001f4	e3a02008	 mov         r2, #8
  001f8	e28d0004	 add         r0, sp, #4
  001fc	eb000000	 bl          strncmp
  00200	e3500000	 cmp         r0, #0

; 868  : 		{
; 869  : 			// Remap the start address to the correct NAND location of the logo
; 870  : 			g_eboot.region[0].start = IMAGE_XLDR_BOOTSEC_NAND_SIZE + IMAGE_EBOOT_BOOTSEC_NAND_SIZE;

  00204	03a03703	 moveq       r3, #3, 14
  00208	05843010	 streq       r3, [r4, #0x10]

; 871  : 			g_eboot.type = DOWNLOAD_TYPE_LOGO;

  0020c	03a03008	 moveq       r3, #8
  00210	0a00000a	 beq         |$LN60@OEMMultiBi|
  00214	e5953440	 ldr         r3, [r5, #0x440]

; 872  : 		}
; 873  : 		else
; 874  : 		{
; 875  : 		    OALMSG(OAL_ERROR, (L"Unsupported downloaded file\r\n"));

  00218	e3130001	 tst         r3, #1
  0021c	0a000001	 beq         |$LN53@OEMMultiBi|
  00220	e59f0060	 ldr         r0, [pc, #0x60]
  00224		 |$LN59@OEMMultiBi|
  00224	eb000000	 bl          NKDbgPrintfW
  00228		 |$LN53@OEMMultiBi|

; 764  :     UINT32 start, length;
; 765  :     UINT32 ix;
; 766  : 
; 767  : 
; 768  :     OALMSGS(OAL_FUNC, (
; 769  :         L"+OEMMultiBinNotify(0x%08x -> %d)\r\n", pInfo, pInfo->dwNumRegions
; 770  :         ));

  00228	e5953440	 ldr         r3, [r5, #0x440]

; 887  :     
; 888  :     rc = TRUE;
; 889  : 
; 890  : cleanUp:
; 891  :     if (!rc) 
; 892  :         {
; 893  :         OALMSG(OAL_ERROR, (L"Spin for ever...\r\n"));

  0022c	e3130001	 tst         r3, #1
  00230	159f004c	 ldrne       r0, [pc, #0x4C]
  00234	1b000000	 blne        NKDbgPrintfW
  00238		 |$LL2@OEMMultiBi|

; 894  :         for(;;);

  00238	eafffffe	 b           |$LL2@OEMMultiBi|
  0023c		 |$LN12@OEMMultiBi|

; 876  : 			goto cleanUp;
; 877  : 		}
; 878  : 		}
; 879  :     else 
; 880  :         {
; 881  :         g_eboot.type = DOWNLOAD_TYPE_RAM;

  0023c	e3a03001	 mov         r3, #1
  00240		 |$LN60@OEMMultiBi|
  00240	e5843004	 str         r3, [r4, #4]
  00244		 |$LN4@OEMMultiBi|
  00244	e5953440	 ldr         r3, [r5, #0x440]

; 882  :         }
; 883  : 
; 884  :     OALMSG(OAL_INFO, (
; 885  :         L"Download file type: %d\r\n", g_eboot.type
; 886  :     ));

  00248	e3130008	 tst         r3, #8
  0024c	15941004	 ldrne       r1, [r4, #4]
  00250	159f0028	 ldrne       r0, [pc, #0x28]
  00254	1b000000	 blne        NKDbgPrintfW
  00258	e5953440	 ldr         r3, [r5, #0x440]
  0025c		 |$cleanUp$47959|

; 895  :         }
; 896  :     OALMSGS(OAL_FUNC, (L"-OEMMultiBinNotify\r\n"));

  0025c	e3130004	 tst         r3, #4
  00260	159f0014	 ldrne       r0, [pc, #0x14]
  00264	1b000000	 blne        OALLogSerial
  00268	e59d0108	 ldr         r0, [sp, #0x108]
  0026c	eb000000	 bl          __security_check_cookie

; 897  : }

  00270	e28ddf43	 add         sp, sp, #0x43, 30
  00274	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  00278	e12fff1e	 bx          lr
  0027c		 |$LN65@OEMMultiBi|
  0027c		 |$LN66@OEMMultiBi|
  0027c	00000000	 DCD         |??_C@_1CK@FDDKFJJE@?$AA?9?$AAO?$AAE?$AAM?$AAM?$AAu?$AAl?$AAt?$AAi?$AAB?$AAi?$AAn?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$AN?$AA?6?$AA?$AA@|
  00280		 |$LN67@OEMMultiBi|
  00280	00000000	 DCD         |??_C@_1DC@FNKKGJOD@?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00284		 |$LN68@OEMMultiBi|
  00284	00000000	 DCD         |??_C@_1CG@JHMEBKAH@?$AAS?$AAp?$AAi?$AAn?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAe?$AAv?$AAe?$AAr?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  00288		 |$LN69@OEMMultiBi|
  00288	00000000	 DCD         |??_C@_1DM@CJMKOEPD@?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAd?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAe?$AAd?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  0028c		 |$LN70@OEMMultiBi|
  0028c	00000000	 DCD         |??_C@_08CMMENMPK@logo?4nb0?$AA@|
  00290		 |$LN71@OEMMultiBi|
  00290	00000000	 DCD         |??_C@_1FC@BJIBFLEA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAM?$AAu?$AAl?$AAt?$AAi?$AAX?$AAI?$AAP?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAu?$AAp@|
  00294		 |$LN72@OEMMultiBi|
  00294	00000000	 DCD         |??_C@_1HM@MNPMBDFE@?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@|
  00298		 |$LN73@OEMMultiBi|
  00298	00000000	 DCD         |??_C@_1GG@NLHBBJNL@?$AA?$FL?$AA?$CF?$AAd?$AA?$FN?$AA?3?$AA?5?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?5?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$DN?$AA0?$AAx?$AA?$CF@|
  0029c		 |$LN74@OEMMultiBi|
  0029c	00000000	 DCD         |g_eboot|
  002a0		 |$LN75@OEMMultiBi|
  002a0	00000000	 DCD         |??_C@_1DK@OFMGKCPE@?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AAi?$AAn?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?$AN?$AA?6?$AA?$AA@|
  002a4		 |$LN76@OEMMultiBi|
  002a4	00000000	 DCD         |??_C@_1EG@EIADDJAP@?$AA?$CL?$AAO?$AAE?$AAM?$AAM?$AAu?$AAl?$AAt?$AAi?$AAB?$AAi?$AAn?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?9?$AA?$DO?$AA?5?$AA?$CF?$AAd?$AA?$CJ@|
  002a8		 |$LN77@OEMMultiBi|
  002a8	00000000	 DCD         |dpCurSettings|
  002ac		 |$LN78@OEMMultiBi|
  002ac	00000000	 DCD         |__security_cookie|
  002b0		 |$M48362|

			 ENDP  ; |OEMMultiBinNotify|

	EXPORT	|OEMMapMemAddr|
	EXPORT	|??_C@_1EI@ICHMOAEH@?$AA?9?$AAO?$AAE?$AAM?$AAM?$AAa?$AAp?$AAM?$AAe?$AAm?$AAA?$AAd?$AAd?$AAr?$AA?$CI?$AAp?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@BMCFFGLH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAM?$AAa?$AAp?$AAM?$AAe?$AAm?$AAA?$AAd?$AAd?$AAr?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAd?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@JMODNKDN@?$AA?$CL?$AAO?$AAE?$AAM?$AAM?$AAa?$AAp?$AAM?$AAe?$AAm?$AAA?$AAd?$AAd?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T48397| DCD	|$LN18@OEMMapMemA|
	DCD	0x40003601

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@ICHMOAEH@?$AA?9?$AAO?$AAE?$AAM?$AAM?$AAa?$AAp?$AAM?$AAe?$AAm?$AAA?$AAd?$AAd?$AAr?$AA?$CI?$AAp?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@| DCB "-"
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "M", 0x0, "a", 0x0, "p"
	DCB	0x0, "M", 0x0, "e", 0x0, "m", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, "(", 0x0, "p", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@BMCFFGLH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAM?$AAa?$AAp?$AAM?$AAe?$AAm?$AAA?$AAd?$AAd?$AAr?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAd?$AAo@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "M", 0x0, "a", 0x0, "p"
	DCB	0x0, "M", 0x0, "e", 0x0, "m", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "d"
	DCB	0x0, "o", 0x0, "w", 0x0, "n", 0x0, "l", 0x0, "o", 0x0, "a"
	DCB	0x0, "d", 0x0, " ", 0x0, "t", 0x0, "y", 0x0, "p", 0x0, "e"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@JMODNKDN@?$AA?$CL?$AAO?$AAE?$AAM?$AAM?$AAa?$AAp?$AAM?$AAe?$AAm?$AAA?$AAd?$AAd?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6@| DCB "+"
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "M", 0x0, "a", 0x0, "p"
	DCB	0x0, "M", 0x0, "e", 0x0, "m", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMMapMemAddr| PROC

; 914  : {

  00000		 |$LN18@OEMMapMemA|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M48394|
  00004	e1a05001	 mov         r5, r1
  00008	e1a07000	 mov         r7, r0

; 915  :     UINT8 *pAddress = NULL;
; 916  : 
; 917  :     OALMSG(OAL_FUNC, (L"+OEMMapMemAddr(0x%08x, 0x%08x)\r\n", image, address));

  0000c	e59f60c0	 ldr         r6, [pc, #0xC0]
  00010	e3a04000	 mov         r4, #0
  00014	e5962440	 ldr         r2, [r6, #0x440]
  00018	e3120004	 tst         r2, #4
  0001c	0a000004	 beq         |$LN10@OEMMapMemA|
  00020	e59f00a8	 ldr         r0, [pc, #0xA8]
  00024	e1a02005	 mov         r2, r5
  00028	e1a01007	 mov         r1, r7
  0002c	eb000000	 bl          NKDbgPrintfW
  00030	e5962440	 ldr         r2, [r6, #0x440]
  00034		 |$LN10@OEMMapMemA|

; 918  :     
; 919  :     switch (g_eboot.type) {

  00034	e59f3090	 ldr         r3, [pc, #0x90]
  00038	e5931004	 ldr         r1, [r3, #4]
  0003c	e3510001	 cmp         r1, #1
  00040	0a000017	 beq         |$LN4@OEMMapMemA|
  00044	e3510002	 cmp         r1, #2
  00048	9a000007	 bls         |$LN1@OEMMapMemA|
  0004c	e3510004	 cmp         r1, #4
  00050	9a00000f	 bls         |$LN5@OEMMapMemA|
  00054	e3510006	 cmp         r1, #6
  00058	0a00000b	 beq         |$LN3@OEMMapMemA|
  0005c	e3510007	 cmp         r1, #7
  00060	0a000007	 beq         |$LN2@OEMMapMemA|
  00064	e3510008	 cmp         r1, #8
  00068	0a000009	 beq         |$LN5@OEMMapMemA|
  0006c		 |$LN1@OEMMapMemA|

; 941  : 		
; 942  : #ifdef IMGMULTIXIP
; 943  : 	case DOWNLOAD_TYPE_EXT:
; 944  :         pAddress = (UINT8*) (address);
; 945  :         break;
; 946  : #endif
; 947  : 
; 948  :     default:
; 949  :         OALMSG(OAL_ERROR, (L"ERROR: OEMMapMemAddr: "
; 950  :             L"Invalid download type %d\r\n", g_eboot.type
; 951  :         ));

  0006c	e3120001	 tst         r2, #1
  00070	0a00000c	 beq         |$LN13@OEMMapMemA|
  00074	e59f004c	 ldr         r0, [pc, #0x4C]
  00078	eb000000	 bl          NKDbgPrintfW
  0007c	e5962440	 ldr         r2, [r6, #0x440]
  00080	ea000008	 b           |$LN13@OEMMapMemA|
  00084		 |$LN2@OEMMapMemA|

; 937  : 
; 938  : 	case DOWNLOAD_TYPE_FLASHNOR:
; 939  :         pAddress = (UINT8*) (address - NOR_ROMOFFSET);

  00084	e2454206	 sub         r4, r5, #6, 4

; 940  :         break;

  00088	ea000006	 b           |$LN13@OEMMapMemA|
  0008c		 |$LN3@OEMMapMemA|

; 932  :         break;
; 933  : 
; 934  :     case DOWNLOAD_TYPE_FLASHNAND:
; 935  :         pAddress = (UINT8*) (address - NAND_ROMOFFSET);

  0008c	e2454101	 sub         r4, r5, #1, 2

; 936  :         break;

  00090	ea000004	 b           |$LN13@OEMMapMemA|
  00094		 |$LN5@OEMMapMemA|

; 920  : 
; 921  :         
; 922  :     case DOWNLOAD_TYPE_XLDR:
; 923  :     case DOWNLOAD_TYPE_EBOOT:   
; 924  : 	case DOWNLOAD_TYPE_LOGO:
; 925  :         //  Map to scratch RAM prior to flashing
; 926  :         pAddress = (UINT8*)g_eboot.region[0].base + (address - image);

  00094	e5933018	 ldr         r3, [r3, #0x18]
  00098	e0433007	 sub         r3, r3, r7
  0009c	e0834005	 add         r4, r3, r5

; 927  :         break;

  000a0	ea000000	 b           |$LN13@OEMMapMemA|
  000a4		 |$LN4@OEMMapMemA|

; 928  : 
; 929  :     case DOWNLOAD_TYPE_RAM:            
; 930  :         //  RAM based NK.BIN and EBOOT.BIN files are given in virtual memory addresses
; 931  :         pAddress = (UINT8*)address;

  000a4	e1a04005	 mov         r4, r5
  000a8		 |$LN13@OEMMapMemA|

; 952  : 
; 953  :     }
; 954  : 
; 955  : 
; 956  :     OALMSGS(OAL_FUNC, (L"-OEMMapMemAddr(pAddress = 0x%08x)\r\n", pAddress));

  000a8	e3120004	 tst         r2, #4
  000ac	159f0010	 ldrne       r0, [pc, #0x10]
  000b0	11a01004	 movne       r1, r4
  000b4	1b000000	 blne        OALLogSerial

; 957  :     return pAddress;
; 958  : }

  000b8	e1a00004	 mov         r0, r4
  000bc	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000c0	e12fff1e	 bx          lr
  000c4		 |$LN19@OEMMapMemA|
  000c4		 |$LN20@OEMMapMemA|
  000c4	00000000	 DCD         |??_C@_1EI@ICHMOAEH@?$AA?9?$AAO?$AAE?$AAM?$AAM?$AAa?$AAp?$AAM?$AAe?$AAm?$AAA?$AAd?$AAd?$AAr?$AA?$CI?$AAp?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@|
  000c8		 |$LN21@OEMMapMemA|
  000c8	00000000	 DCD         |??_C@_1GC@BMCFFGLH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAM?$AAa?$AAp?$AAM?$AAe?$AAm?$AAA?$AAd?$AAd?$AAr?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAd?$AAo@|
  000cc		 |$LN22@OEMMapMemA|
  000cc	00000000	 DCD         |g_eboot|
  000d0		 |$LN23@OEMMapMemA|
  000d0	00000000	 DCD         |??_C@_1EC@JMODNKDN@?$AA?$CL?$AAO?$AAE?$AAM?$AAM?$AAa?$AAp?$AAM?$AAe?$AAm?$AAA?$AAd?$AAd?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6@|
  000d4		 |$LN24@OEMMapMemA|
  000d4	00000000	 DCD         |dpCurSettings|
  000d8		 |$M48395|

			 ENDP  ; |OEMMapMemAddr|

	EXPORT	|OEMIsFlashAddr|
	EXPORT	|??_C@_1DG@FBKAGMKG@?$AA?9?$AAO?$AAE?$AAM?$AAI?$AAs?$AAF?$AAl?$AAa?$AAs?$AAh?$AAA?$AAd?$AAd?$AAr?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@JMLJAABG@?$AA?$CL?$AAO?$AAE?$AAM?$AAI?$AAs?$AAF?$AAl?$AAa?$AAs?$AAh?$AAA?$AAd?$AAd?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T48418| DCD	|$LN13@OEMIsFlash|
	DCD	0x40002001

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@FBKAGMKG@?$AA?9?$AAO?$AAE?$AAM?$AAI?$AAs?$AAF?$AAl?$AAa?$AAs?$AAh?$AAA?$AAd?$AAd?$AAr?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "I", 0x0, "s", 0x0, "F"
	DCB	0x0, "l", 0x0, "a", 0x0, "s", 0x0, "h", 0x0, "A", 0x0, "d"
	DCB	0x0, "d", 0x0, "r", 0x0, "(", 0x0, "r", 0x0, "c", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@JMLJAABG@?$AA?$CL?$AAO?$AAE?$AAM?$AAI?$AAs?$AAF?$AAl?$AAa?$AAs?$AAh?$AAA?$AAd?$AAd?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "I", 0x0, "s", 0x0, "F"
	DCB	0x0, "l", 0x0, "a", 0x0, "s", 0x0, "h", 0x0, "A", 0x0, "d"
	DCB	0x0, "d", 0x0, "r", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMIsFlashAddr| PROC

; 974  : {

  00000		 |$LN13@OEMIsFlash|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M48415|
  00004	e1a01000	 mov         r1, r0

; 975  :     BOOL rc;
; 976  : 
; 977  : 	UNREFERENCED_PARAMETER(address);
; 978  : 
; 979  :     OALMSG(OAL_FUNC, (L"+OEMIsFlashAddr(0x%08x)\r\n", address));

  00008	e59f406c	 ldr         r4, [pc, #0x6C]
  0000c	e5942440	 ldr         r2, [r4, #0x440]
  00010	e3120004	 tst         r2, #4
  00014	0a000002	 beq         |$LN7@OEMIsFlash|
  00018	e59f0058	 ldr         r0, [pc, #0x58]
  0001c	eb000000	 bl          NKDbgPrintfW
  00020	e5942440	 ldr         r2, [r4, #0x440]
  00024		 |$LN7@OEMIsFlash|

; 980  : 
; 981  :     // Depending on download type
; 982  :     switch (g_eboot.type)

  00024	e59f3048	 ldr         r3, [pc, #0x48]
  00028	e5933004	 ldr         r3, [r3, #4]
  0002c	e3530003	 cmp         r3, #3
  00030	3a000006	 bcc         |$LN1@OEMIsFlash|
  00034	e3530004	 cmp         r3, #4
  00038	9a000002	 bls         |$LN2@OEMIsFlash|
  0003c	e2433006	 sub         r3, r3, #6
  00040	e3530003	 cmp         r3, #3
  00044	8a000001	 bhi         |$LN1@OEMIsFlash|
  00048		 |$LN2@OEMIsFlash|

; 983  :         {
; 984  :         case DOWNLOAD_TYPE_XLDR:
; 985  :         case DOWNLOAD_TYPE_EBOOT:
; 986  :         case DOWNLOAD_TYPE_LOGO:
; 987  :         case DOWNLOAD_TYPE_FLASHNAND:
; 988  :         case DOWNLOAD_TYPE_FLASHNOR:
; 989  :         case DOWNLOAD_TYPE_EXT:
; 990  :             rc = TRUE;

  00048	e3a04001	 mov         r4, #1

; 991  :             break;

  0004c	ea000000	 b           |$LN3@OEMIsFlash|
  00050		 |$LN1@OEMIsFlash|

; 992  :         default:
; 993  :             rc = FALSE;

  00050	e3a04000	 mov         r4, #0
  00054		 |$LN3@OEMIsFlash|

; 994  :             break;
; 995  :         }
; 996  : 
; 997  :     OALMSG(OAL_FUNC, (L"-OEMIsFlashAddr(rc = %d)\r\n", rc));

  00054	e3120004	 tst         r2, #4
  00058	159f0010	 ldrne       r0, [pc, #0x10]
  0005c	11a01004	 movne       r1, r4
  00060	1b000000	 blne        NKDbgPrintfW

; 998  :     return rc;
; 999  : }

  00064	e1a00004	 mov         r0, r4
  00068	e8bd4010	 ldmia       sp!, {r4, lr}
  0006c	e12fff1e	 bx          lr
  00070		 |$LN14@OEMIsFlash|
  00070		 |$LN15@OEMIsFlash|
  00070	00000000	 DCD         |??_C@_1DG@FBKAGMKG@?$AA?9?$AAO?$AAE?$AAM?$AAI?$AAs?$AAF?$AAl?$AAa?$AAs?$AAh?$AAA?$AAd?$AAd?$AAr?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00074		 |$LN16@OEMIsFlash|
  00074	00000000	 DCD         |g_eboot|
  00078		 |$LN17@OEMIsFlash|
  00078	00000000	 DCD         |??_C@_1DE@JMLJAABG@?$AA?$CL?$AAO?$AAE?$AAM?$AAI?$AAs?$AAF?$AAl?$AAa?$AAs?$AAh?$AAA?$AAd?$AAd?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0007c		 |$LN18@OEMIsFlash|
  0007c	00000000	 DCD         |dpCurSettings|
  00080		 |$M48416|

			 ENDP  ; |OEMIsFlashAddr|

	EXPORT	|OEMReadData|
	IMPORT	|BLEthReadData|

  00000			 AREA	 |.pdata|, PDATA
|$T48435| DCD	|$LN8@OEMReadDat|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMReadData| PROC

; 1013 : {

  00000		 |$LN8@OEMReadDat|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M48432|
  00004	e1a02000	 mov         r2, r0

; 1014 :     BOOL rc = FALSE;
; 1015 :     switch (g_eboot.bootDeviceType)

  00008	e59f3018	 ldr         r3, [pc, #0x18]
  0000c	e3a00000	 mov         r0, #0
  00010	e5933000	 ldr         r3, [r3]
  00014	e3530002	 cmp         r3, #2

; 1016 :         {
; 1017 :         #if BUILDING_EBOOT_SD
; 1018 :         case BOOT_SDCARD_TYPE:
; 1019 :             rc = BLSDCardReadData(size, pData);
; 1020 :             break;
; 1021 :         #endif
; 1022 :         case OAL_KITL_TYPE_ETH:
; 1023 :             rc = BLEthReadData(size, pData);

  00018	01a00002	 moveq       r0, r2
  0001c	0b000000	 bleq        BLEthReadData

; 1024 :             break;
; 1025 :         }
; 1026 :     return rc;
; 1027 : }

  00020	e49de004	 ldr         lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$LN9@OEMReadDat|
  00028		 |$LN10@OEMReadDat|
  00028	00000000	 DCD         |g_eboot|
  0002c		 |$M48433|

			 ENDP  ; |OEMReadData|

	EXPORT	|OEMShowProgress|
	EXPORT	|??_C@_13JOFGPIOO@?$AA?4?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T48444| DCD	|$LN5@OEMShowPro@2|
	DCD	0x40000601

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_13JOFGPIOO@?$AA?4?$AA?$AA@| DCB ".", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMShowProgress| PROC

; 1040 : {

  00000		 |$LN5@OEMShowPro@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M48441|

; 1041 :     UNREFERENCED_PARAMETER(packetNumber);
; 1042 :     RETAILMSG(1,(TEXT(".")));

  00004	e59f0008	 ldr         r0, [pc, #8]
  00008	eb000000	 bl          NKDbgPrintfW

; 1043 : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$LN6@OEMShowPro@2|
  00014		 |$LN7@OEMShowPro@2|
  00014	00000000	 DCD         |??_C@_13JOFGPIOO@?$AA?4?$AA?$AA@|
  00018		 |$M48442|

			 ENDP  ; |OEMShowProgress|

	EXPORT	|OALGetTickCount|

  00000			 AREA	 |.pdata|, PDATA
|$T48456| DCD	|$LN5@OALGetTick|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALGetTickCount| PROC

; 1052 : {

  00000		 |$LN5@OALGetTick|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M48453|
  00004	e3a03312	 mov         r3, #0x12, 6

; 1053 :     OMAP_GPTIMER_REGS *pGPTimerRegs = OALPAtoUA(OMAP_GPTIMER1_REGS_PA);

  00008	e38309c6	 orr         r0, r3, #0xC6, 18
  0000c	e3a01000	 mov         r1, #0
  00010	eb000000	 bl          OALPAtoVA

; 1054 :     return INREG32(&pGPTimerRegs->TCRR) >> 5;

  00014	e5903028	 ldr         r3, [r0, #0x28]
  00018	e1a002a3	 mov         r0, r3, lsr #5

; 1055 : }

  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M48454|

			 ENDP  ; |OALGetTickCount|

	EXPORT	|OEMKitlGetSecs|

  00000			 AREA	 |.pdata|, PDATA
|$T48470| DCD	|$LN7@OEMKitlGet|
	DCD	0x40000d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMKitlGetSecs| PROC

; 1066 : {

  00000		 |$LN7@OEMKitlGet|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M48467|
  00004	e3a03312	 mov         r3, #0x12, 6

; 1067 :     return OALGetTickCount()/1000;

  00008	e38309c6	 orr         r0, r3, #0xC6, 18
  0000c	e3a01000	 mov         r1, #0
  00010	eb000000	 bl          OALPAtoVA
  00014	e5903028	 ldr         r3, [r0, #0x28]
  00018	e59f2010	 ldr         r2, [pc, #0x10]
  0001c	e1a012a3	 mov         r1, r3, lsr #5
  00020	e0823291	 umull       r3, r2, r1, r2
  00024	e1a00322	 mov         r0, r2, lsr #6

; 1068 : }

  00028	e49de004	 ldr         lr, [sp], #4
  0002c	e12fff1e	 bx          lr
  00030		 |$LN8@OEMKitlGet|
  00030		 |$LN9@OEMKitlGet|
  00030	10624dd3	 DCD         0x10624dd3
  00034		 |$M48468|

			 ENDP  ; |OEMKitlGetSecs|

	EXPORT	|GetDisplayResolutionFromBootArgs|

  00000			 AREA	 |.pdata|, PDATA
|$T48480| DCD	|$LN5@GetDisplay|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetDisplayResolutionFromBootArgs| PROC

; 1075 : {

  00000		 |$LN5@GetDisplay|
  00000		 |$M48477|

; 1076 :     *pDispRes=g_bootCfg.displayRes;

  00000	e59f3008	 ldr         r3, [pc, #8]
  00004	e593306c	 ldr         r3, [r3, #0x6C]
  00008	e5803000	 str         r3, [r0]

; 1077 : }

  0000c	e12fff1e	 bx          lr
  00010		 |$LN6@GetDisplay|
  00010		 |$LN7@GetDisplay|
  00010	00000000	 DCD         |g_bootCfg|
  00014		 |$M48478|

			 ENDP  ; |GetDisplayResolutionFromBootArgs|

	EXPORT	|IsDVIMode|

  00000			 AREA	 |.pdata|, PDATA
|$T48494| DCD	|$LN9@IsDVIMode|
	DCD	0x40000700
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |IsDVIMode| PROC

; 1081 : {

  00000		 |$LN9@IsDVIMode|
  00000		 |$M48491|

; 1082 :     DWORD dispRes;    
; 1083 :     GetDisplayResolutionFromBootArgs(&dispRes);
; 1084 :     if (dispRes==OMAP_LCD_DEFAULT)

  00000	e59f3010	 ldr         r3, [pc, #0x10]
  00004	e593306c	 ldr         r3, [r3, #0x6C]
  00008	e3530000	 cmp         r3, #0

; 1085 :         return FALSE;

  0000c	03a00000	 moveq       r0, #0

; 1086 :     else
; 1087 :         return TRUE;        

  00010	13a00001	 movne       r0, #1

; 1088 : }

  00014	e12fff1e	 bx          lr
  00018		 |$LN10@IsDVIMode|
  00018		 |$LN11@IsDVIMode|
  00018	00000000	 DCD         |g_bootCfg|
  0001c		 |$M48492|

			 ENDP  ; |IsDVIMode|

	EXPORT	|ConvertCAtoPA|

  00000			 AREA	 |.pdata|, PDATA
|$T48506| DCD	|$LN5@ConvertCAt|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ConvertCAtoPA| PROC

; 1092 : {   

  00000		 |$LN5@ConvertCAt|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M48503|

; 1093 :     return OALVAtoPA(va);

  00004	eb000000	 bl          OALVAtoPA

; 1094 : }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M48504|

			 ENDP  ; |ConvertCAtoPA|

	EXPORT	|OEMPreDownload|
	EXPORT	|??_C@_1KM@MLNPCLLF@?$AA?$AN?$AA?6?$AA?$DO?$AA?$DO?$AA?$DO?$AA?5?$AAF?$AAo?$AAr?$AAc?$AAi?$AAn?$AAg?$AA?5?$AAc?$AAo?$AAl?$AAd?$AA?5?$AAb?$AAo?$AAo?$AAt?$AA?5?$AA?$CI?$AAn?$AAo?$AAn?$AA?9?$AAp?$AAe?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@HJKNOJA@?$AAn?$AAk?$AA?4?$AAb?$AAi?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@IFKCAMGN@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAS?$AAW?$AA4?$AA?5?$AAb?$AAo?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@MEIINOMM@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAf?$AAi?$AAg?$AA?5?$AAw?$AAa?$AAs?$AAn?$AA?8?$AAt?$AA?5?$AAf?$AAo?$AAu?$AAn?$AAd?$AA?0?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@IBPJNEAL@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAo?$AAu?$AAn?$AAd?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@EHCEJENN@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAP?$AAr?$AAe?$AAd?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AA?4?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|BLEthDownload|
	IMPORT	|BLFlashDownload|
	IMPORT	|BLSDCardDownload|
	IMPORT	|OALKitlDeviceType|
	IMPORT	|BLShowLogo|
	IMPORT	|BLMenu|
	IMPORT	|BLConfigureFlashPartitions|
	IMPORT	|BLReadBootCfg|
	IMPORT	|BLReserveBootBlocks|
	IMPORT	|g_pOEMMultiBINNotify|
	IMPORT	|wcscpy|
	IMPORT	|memcpy|

  00000			 AREA	 |.pdata|, PDATA
|$T48561| DCD	|$LN66@OEMPreDown|
	DCD	0x4000e901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KM@MLNPCLLF@?$AA?$AN?$AA?6?$AA?$DO?$AA?$DO?$AA?$DO?$AA?5?$AAF?$AAo?$AAr?$AAc?$AAi?$AAn?$AAg?$AA?5?$AAc?$AAo?$AAl?$AAd?$AA?5?$AAb?$AAo?$AAo?$AAt?$AA?5?$AA?$CI?$AAn?$AAo?$AAn?$AA?9?$AAp?$AAe?$AAr@| DCB 0xd
	DCB	0x0, 0xa, 0x0, ">", 0x0, ">", 0x0, ">", 0x0, " ", 0x0, "F"
	DCB	0x0, "o", 0x0, "r", 0x0, "c", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "l", 0x0, "d", 0x0, " "
	DCB	0x0, "b", 0x0, "o", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "("
	DCB	0x0, "n", 0x0, "o", 0x0, "n", 0x0, "-", 0x0, "p", 0x0, "e"
	DCB	0x0, "r", 0x0, "s", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "r", 0x0, "y", 0x0, " "
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, " ", 0x0, "o", 0x0, "t"
	DCB	0x0, "h", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "d", 0x0, "a"
	DCB	0x0, "t", 0x0, "a", 0x0, " ", 0x0, "w", 0x0, "i", 0x0, "l"
	DCB	0x0, "l", 0x0, " ", 0x0, "b", 0x0, "e", 0x0, " ", 0x0, "w"
	DCB	0x0, "i", 0x0, "p", 0x0, "e", 0x0, "d", 0x0, ")", 0x0, " "
	DCB	0x0, "<", 0x0, "<", 0x0, "<", 0x0, " ", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@HJKNOJA@?$AAn?$AAk?$AA?4?$AAb?$AAi?$AAn?$AA?$AA@| DCB "n", 0x0, "k"
	DCB	0x0, ".", 0x0, "b", 0x0, "i", 0x0, "n", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@IFKCAMGN@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAS?$AAW?$AA4?$AA?5?$AAb?$AAo?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?$AN?$AA?6@| DCB "I"
	DCB	0x0, "N", 0x0, "F", 0x0, "O", 0x0, ":", 0x0, " ", 0x0, "S"
	DCB	0x0, "W", 0x0, "4", 0x0, " ", 0x0, "b", 0x0, "o", 0x0, "o"
	DCB	0x0, "t", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@MEIINOMM@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAf?$AAi?$AAg?$AA?5?$AAw?$AAa?$AAs?$AAn?$AA?8?$AAt?$AA?5?$AAf?$AAo?$AAu?$AAn?$AAd?$AA?0?$AA?5@| DCB "W"
	DCB	0x0, "A", 0x0, "R", 0x0, "N", 0x0, ":", 0x0, " ", 0x0, "B"
	DCB	0x0, "o", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "n", 0x0, "f", 0x0, "i", 0x0, "g", 0x0, " ", 0x0, "w"
	DCB	0x0, "a", 0x0, "s", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "u", 0x0, "n", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "u", 0x0, "s", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "a", 0x0, "u"
	DCB	0x0, "l", 0x0, "t", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@IBPJNEAL@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAo?$AAu?$AAn?$AAd?$AA?$AN?$AA?6@| DCB "I"
	DCB	0x0, "N", 0x0, "F", 0x0, "O", 0x0, ":", 0x0, " ", 0x0, "B"
	DCB	0x0, "o", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "n", 0x0, "f", 0x0, "i", 0x0, "g", 0x0, "u", 0x0, "r"
	DCB	0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "u", 0x0, "n", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@EHCEJENN@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAP?$AAr?$AAe?$AAd?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AA?4?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "N", 0x0, "F", 0x0, "O", 0x0, ":", 0x0, " ", 0x0, "P"
	DCB	0x0, "r", 0x0, "e", 0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n"
	DCB	0x0, "l", 0x0, "o", 0x0, "a", 0x0, "d", 0x0, ".", 0x0, "."
	DCB	0x0, ".", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMPreDownload| PROC

; 397  : {

  00000		 |$LN66@OEMPreDown|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004		 |$M48558|

; 398  :     ULONG rc = (ULONG) BL_ERROR;
; 399  :     BSP_ARGS *pArgs = OALCAtoUA(IMAGE_SHARE_ARGS_CA);
; 400  :     BOOL bForceBootMenu;
; 401  :     OMAP_PRCM_GLOBAL_PRM_REGS * pPrmGlobal = OALPAtoUA(OMAP_PRCM_GLOBAL_PRM_REGS_PA);

  00004	e59f0394	 ldr         r0, [pc, #0x394]
  00008	e3a01000	 mov         r1, #0
  0000c	e3a0a20a	 mov         r10, #0xA, 4
  00010	eb000000	 bl          OALPAtoVA
  00014	e1a08000	 mov         r8, r0

; 402  :     ULONG dwTemp;
; 403  :     UINT32 *pStatusControlAddr = OALPAtoUA(OMAP_STATUS_CONTROL_REGS_PA);

  00018	e59f037c	 ldr         r0, [pc, #0x37C]
  0001c	e3a01000	 mov         r1, #0
  00020	eb000000	 bl          OALPAtoVA
  00024	e1a07000	 mov         r7, r0

; 404  :     UINT32 dwSysBootCfg;
; 405  : 
; 406  :     OALLog(L"INFO: Predownload....\r\n");

  00028	e59f0368	 ldr         r0, [pc, #0x368]
  0002c	eb000000	 bl          NKDbgPrintfW

; 407  : 
; 408  :     // We need to support multi bin notify
; 409  :     g_pOEMMultiBINNotify = OEMMultiBinNotify;

  00030	e59f235c	 ldr         r2, [pc, #0x35C]
  00034	e59f3354	 ldr         r3, [pc, #0x354]
  00038	e5823000	 str         r3, [r2]

; 410  : 
; 411  :     // Ensure bootloader blocks are marked as reserved
; 412  :     BLReserveBootBlocks();

  0003c	eb000000	 bl          BLReserveBootBlocks

; 413  : 
; 414  :     // Read saved configration
; 415  :     if (BLReadBootCfg(&g_bootCfg) &&
; 416  :         (g_bootCfg.signature == BOOT_CFG_SIGNATURE) &&
; 417  :         (g_bootCfg.version == BOOT_CFG_VERSION))

  00040	e59f4344	 ldr         r4, [pc, #0x344]
  00044	e1a00004	 mov         r0, r4
  00048	eb000000	 bl          BLReadBootCfg
  0004c	e59f6334	 ldr         r6, [pc, #0x334]
  00050	e59f532c	 ldr         r5, [pc, #0x32C]
  00054	e3500000	 cmp         r0, #0
  00058	0a000008	 beq         |$LN24@OEMPreDown|
  0005c	e5943000	 ldr         r3, [r4]
  00060	e1530005	 cmp         r3, r5
  00064	1a000005	 bne         |$LN24@OEMPreDown|
  00068	e5943004	 ldr         r3, [r4, #4]
  0006c	e3530002	 cmp         r3, #2
  00070	1a000002	 bne         |$LN24@OEMPreDown|

; 418  :         {
; 419  :         OALLog(L"INFO: Boot configuration found\r\n");

  00074	e59f0304	 ldr         r0, [pc, #0x304]
  00078	eb000000	 bl          NKDbgPrintfW

; 420  :         }
; 421  :     else 

  0007c	ea000052	 b           |$LN23@OEMPreDown|
  00080		 |$LN24@OEMPreDown|

; 422  :         {
; 423  :         OALLog(L"WARN: Boot config wasn't found, using defaults\r\n");

  00080	e59f02f4	 ldr         r0, [pc, #0x2F4]
  00084	eb000000	 bl          NKDbgPrintfW

; 424  :         memset(&g_bootCfg, 0, sizeof(g_bootCfg));

  00088	e3a0207c	 mov         r2, #0x7C
  0008c	e3a01000	 mov         r1, #0
  00090	e1a00004	 mov         r0, r4
  00094	eb000000	 bl          memset

; 425  : 		memcpy(&g_bootCfg.mac,DefaultMacAddress,sizeof(g_bootCfg.mac));

  00098	e2861060	 add         r1, r6, #0x60
  0009c	e2840066	 add         r0, r4, #0x66
  000a0	e3a02006	 mov         r2, #6
  000a4	eb000000	 bl          memcpy

; 426  :         g_bootCfg.signature = BOOT_CFG_SIGNATURE;
; 427  :         g_bootCfg.version = BOOT_CFG_VERSION;
; 428  : 
; 429  :         g_bootCfg.oalFlags = 0;
; 430  :         g_bootCfg.flashNKFlags = 0;
; 431  :         g_bootCfg.ECCtype =  (UCHAR)dwEbootECCtype;

  000a8	e59f32c8	 ldr         r3, [pc, #0x2C8]

; 432  :         // To make it easier to select USB or EBOOT from menus when booting from SD card,
; 433  :         // preset the kitlFlags. This has no effect if booting from SD card.
; 434  :         g_bootCfg.kitlFlags = OAL_KITL_FLAGS_DHCP|OAL_KITL_FLAGS_ENABLED;
; 435  :         g_bootCfg.kitlFlags |= OAL_KITL_FLAGS_VMINI;
; 436  :         g_bootCfg.kitlFlags |= OAL_KITL_FLAGS_EXTNAME;
; 437  : 
; 438  :         g_bootCfg.displayRes = OMAP_LCD_DEFAULT;
; 439  : 
; 440  :         
; 441  :         if(g_CPUFamily == CPU_FAMILY_DM37XX)

  000ac	e3a01002	 mov         r1, #2
  000b0	e59f22bc	 ldr         r2, [pc, #0x2BC]
  000b4	e5933000	 ldr         r3, [r3]
  000b8	e5845000	 str         r5, [r4]
  000bc	e3a00000	 mov         r0, #0
  000c0	e5841004	 str         r1, [r4, #4]
  000c4	e3a01000	 mov         r1, #0
  000c8	e5840034	 str         r0, [r4, #0x34]
  000cc	e5922000	 ldr         r2, [r2]
  000d0	e5841070	 str         r1, [r4, #0x70]
  000d4	e5c43074	 strb        r3, [r4, #0x74]
  000d8	e3a0302d	 mov         r3, #0x2D
  000dc	e5843030	 str         r3, [r4, #0x30]
  000e0	e3a03000	 mov         r3, #0
  000e4	e3520001	 cmp         r2, #1
  000e8	e584306c	 str         r3, [r4, #0x6C]

; 442  :         {
; 443  :             g_bootCfg.opp_mode = BSP_OPM_SELECT_37XX-1;

  000ec	03a03003	 moveq       r3, #3

; 444  :         }
; 445  :         else
; 446  :         {
; 447  :             g_bootCfg.opp_mode = BSP_OPM_SELECT_35XX-1;

  000f0	13a03004	 movne       r3, #4
  000f4	e5843078	 str         r3, [r4, #0x78]

; 448  :         }
; 449  :         // select default boot device based on boot select switch setting
; 450  :         dwSysBootCfg = INREG32(pStatusControlAddr);

  000f8	e5973000	 ldr         r3, [r7]

; 451  :         OALLog(L"INFO: SW4 boot setting: 0x%02x\r\n", dwSysBootCfg & 0x3f);

  000fc	e59f026c	 ldr         r0, [pc, #0x26C]
  00100	e203503f	 and         r5, r3, #0x3F
  00104	e1a01005	 mov         r1, r5
  00108	eb000000	 bl          NKDbgPrintfW

; 452  : 
; 453  :         switch (dwSysBootCfg & 0x3f)

  0010c	e3550024	 cmp         r5, #0x24
  00110	8a000016	 bhi         |$LN27@OEMPreDown|
  00114	0a00001c	 beq         |$LN18@OEMPreDown|
  00118	e355001b	 cmp         r5, #0x1B
  0011c	8a000017	 bhi         |$LN14@OEMPreDown|
  00120	e28f3004	 add         r3, pc, #4
  00124	e7d33005	 ldrb        r3, [r3, +r5]
  00128	e08ff003	 add         pc, pc, r3
  0012c		 |$LN35@OEMPreDown|
  0012c		 |$LN34@OEMPreDown|
  0012c		 |$LN36@OEMPreDown|
  0012c	38ed		 DCB         0x38
  0012d		 |$LN37@OEMPreDown|
  0012d	28ed		 DCB         0x28
  0012e		 |$LN38@OEMPreDown|
  0012e	38ed		 DCB         0x38
  0012f		 |$LN39@OEMPreDown|
  0012f	50ed		 DCB         0x50
  00130		 |$LN40@OEMPreDown|
  00130	38ed		 DCB         0x38
  00131		 |$LN41@OEMPreDown|
  00131	50ed		 DCB         0x50
  00132		 |$LN42@OEMPreDown|
  00132	18ed		 DCB         0x18
  00133		 |$LN43@OEMPreDown|
  00133	50ed		 DCB         0x50
  00134		 |$LN44@OEMPreDown|
  00134	50ed		 DCB         0x50
  00135		 |$LN45@OEMPreDown|
  00135	50ed		 DCB         0x50
  00136		 |$LN46@OEMPreDown|
  00136	50ed		 DCB         0x50
  00137		 |$LN47@OEMPreDown|
  00137	50ed		 DCB         0x50
  00138		 |$LN48@OEMPreDown|
  00138	28ed		 DCB         0x28
  00139		 |$LN49@OEMPreDown|
  00139	50ed		 DCB         0x50
  0013a		 |$LN50@OEMPreDown|
  0013a	50ed		 DCB         0x50
  0013b		 |$LN51@OEMPreDown|
  0013b	50ed		 DCB         0x50
  0013c		 |$LN52@OEMPreDown|
  0013c	38ed		 DCB         0x38
  0013d		 |$LN53@OEMPreDown|
  0013d	50ed		 DCB         0x50
  0013e		 |$LN54@OEMPreDown|
  0013e	18ed		 DCB         0x18
  0013f		 |$LN55@OEMPreDown|
  0013f	50ed		 DCB         0x50
  00140		 |$LN56@OEMPreDown|
  00140	50ed		 DCB         0x50
  00141		 |$LN57@OEMPreDown|
  00141	28ed		 DCB         0x28
  00142		 |$LN58@OEMPreDown|
  00142	38ed		 DCB         0x38
  00143		 |$LN59@OEMPreDown|
  00143	50ed		 DCB         0x50
  00144		 |$LN60@OEMPreDown|
  00144	18ed		 DCB         0x18
  00145		 |$LN61@OEMPreDown|
  00145	50ed		 DCB         0x50
  00146		 |$LN62@OEMPreDown|
  00146	50ed		 DCB         0x50
  00147		 |$LN63@OEMPreDown|
  00147	28ed		 DCB         0x28
  00148		 |$LN17@OEMPreDown|
  00148	e3a03312	 mov         r3, #0x12, 6

; 461  :             break;
; 462  :     
; 463  :         case 0x06:
; 464  :         case 0x12:
; 465  :         case 0x18:
; 466  :             // 1st boot device is MMC1 (SD Card Boot)
; 467  :             g_bootCfg.bootDevLoc.LogicalLoc = OMAP_MMCHS1_REGS_PA;

  0014c	e3833927	 orr         r3, r3, #0x27, 18
  00150	e5843010	 str         r3, [r4, #0x10]

; 468  :             break;          

  00154	ea000010	 b           |$LN19@OEMPreDown|
  00158		 |$LN16@OEMPreDown|
  00158	e3a03302	 mov         r3, #2, 6
  0015c		 |$LN33@OEMPreDown|

; 469  : 
; 470  :         case 0x01: 
; 471  :         case 0x0c: 
; 472  :         case 0x15: 
; 473  :         case 0x1b: 
; 474  :             // 1st boot device is NAND
; 475  :             g_bootCfg.bootDevLoc.LogicalLoc = BSP_NAND_REGS_PA + 0x20;

  0015c	e3833020	 orr         r3, r3, #0x20
  00160	e5843010	 str         r3, [r4, #0x10]
  00164	ea00000c	 b           |$LN19@OEMPreDown|
  00168		 |$LN15@OEMPreDown|

; 476  :             break;

  00168	e3a03303	 mov         r3, #3, 6

; 477  :             
; 478  :         case 0x00:
; 479  :         case 0x02:
; 480  :         case 0x04:
; 481  :         case 0x10:
; 482  :         case 0x16:
; 483  :             // 1st boot device is ONENAND
; 484  :             g_bootCfg.bootDevLoc.LogicalLoc = BSP_ONENAND_REGS_PA + 0x20;                       
; 485  :             break;

  0016c	eafffffa	 b           |$LN33@OEMPreDown|
  00170		 |$LN27@OEMPreDown|

; 452  : 
; 453  :         switch (dwSysBootCfg & 0x3f)

  00170	e3550026	 cmp         r5, #0x26
  00174	0a000004	 beq         |$LN18@OEMPreDown|
  00178	e355003b	 cmp         r5, #0x3B
  0017c	0a000002	 beq         |$LN18@OEMPreDown|
  00180		 |$LN14@OEMPreDown|

; 486  : 
; 487  :         default:
; 488  :             // UART,  Ethernet Boot
; 489  :             g_bootCfg.bootDevLoc.LogicalLoc = BSP_LAN9115_REGS_PA;

  00180	e3a03415	 mov         r3, #0x15, 8
  00184	e5843010	 str         r3, [r4, #0x10]

; 490  :             g_bootCfg.kitlDevLoc.LogicalLoc = BSP_LAN9115_REGS_PA;
; 491  :             break;

  00188	ea000006	 b           |$LN31@OEMPreDown|
  0018c		 |$LN18@OEMPreDown|

; 454  :         {
; 455  :         case 0x24:
; 456  :         case 0x26:
; 457  :         case 0x3b:
; 458  :             // 1st boot device is USB
; 459  :             g_bootCfg.bootDevLoc.LogicalLoc = OMAP_USBHS_REGS_PA;

  0018c	e3a03312	 mov         r3, #0x12, 6
  00190	e3833aab	 orr         r3, r3, #0xAB, 20
  00194	e5843010	 str         r3, [r4, #0x10]

; 460  :             g_bootCfg.kitlDevLoc.LogicalLoc = OMAP_USBHS_REGS_PA;

  00198	e5843024	 str         r3, [r4, #0x24]
  0019c		 |$LN19@OEMPreDown|

; 468  :             break;          

  0019c	e5943024	 ldr         r3, [r4, #0x24]

; 492  :         }            
; 493  :         if (g_bootCfg.kitlDevLoc.LogicalLoc == 0)

  001a0	e3530000	 cmp         r3, #0
  001a4	1a000001	 bne         |$LN13@OEMPreDown|
  001a8		 |$LN31@OEMPreDown|

; 494  :         {
; 495  :             g_bootCfg.kitlDevLoc.LogicalLoc = BSP_LAN9115_REGS_PA;

  001a8	e3a03415	 mov         r3, #0x15, 8
  001ac	e5843024	 str         r3, [r4, #0x24]
  001b0		 |$LN13@OEMPreDown|

; 496  :         };
; 497  :         g_bootCfg.deviceID = 0;
; 498  :         g_bootCfg.osPartitionSize = IMAGE_WINCE_CODE_SIZE;
; 499  :         wcscpy(g_bootCfg.filename, L"nk.bin");

  001b0	e3a03000	 mov         r3, #0
  001b4	e59f11b0	 ldr         r1, [pc, #0x1B0]
  001b8	e5843044	 str         r3, [r4, #0x44]
  001bc	e3a0350a	 mov         r3, #0xA, 10
  001c0	e284004c	 add         r0, r4, #0x4C
  001c4	e5843048	 str         r3, [r4, #0x48]
  001c8	eb000000	 bl          wcscpy
  001cc		 |$LN23@OEMPreDown|

; 500  :         }
; 501  : 
; 502  :     // Initialize flash partitions if needed
; 503  :     BLConfigureFlashPartitions(FALSE);

  001cc	e3a00000	 mov         r0, #0
  001d0	eb000000	 bl          BLConfigureFlashPartitions

; 504  : 
; 505  :     // Initialize ARGS structure
; 506  :     if ((pArgs->header.signature != OAL_ARGS_SIGNATURE) ||
; 507  :         (pArgs->header.oalVersion != OAL_ARGS_VERSION) ||
; 508  :         (pArgs->header.bspVersion != BSP_ARGS_VERSION))

  001d4	e59a3000	 ldr         r3, [r10]
  001d8	e59f5188	 ldr         r5, [pc, #0x188]
  001dc	e1530005	 cmp         r3, r5
  001e0	1a000005	 bne         |$LN11@OEMPreDown|
  001e4	e1da30b4	 ldrh        r3, [r10, #4]
  001e8	e3530001	 cmp         r3, #1
  001ec	1a000002	 bne         |$LN11@OEMPreDown|
  001f0	e1da30b6	 ldrh        r3, [r10, #6]
  001f4	e3530001	 cmp         r3, #1
  001f8	0a000003	 beq         |$LN12@OEMPreDown|
  001fc		 |$LN11@OEMPreDown|

; 509  :         {
; 510  :         memset(pArgs, 0, IMAGE_SHARE_ARGS_SIZE);

  001fc	e3a02a01	 mov         r2, #1, 20
  00200	e3a01000	 mov         r1, #0
  00204	e3a0020a	 mov         r0, #0xA, 4
  00208	eb000000	 bl          memset
  0020c		 |$LN12@OEMPreDown|

; 511  :         }        
; 512  :     
; 513  :     // Save reset type
; 514  :     dwTemp = INREG32(&pPrmGlobal->PRM_RSTST);

  0020c	e5983058	 ldr         r3, [r8, #0x58]

; 515  :     if (dwTemp & (GLOBALWARM_RST /* actually SW reset */ | EXTERNALWARM_RST))

  00210	e3a02000	 mov         r2, #0
  00214	e3a0b001	 mov         r11, #1
  00218	e3130042	 tst         r3, #0x42

; 516  :     {
; 517  :         pArgs->coldBoot = FALSE;
; 518  :     }
; 519  :     else
; 520  :     {
; 521  :         pArgs->coldBoot = TRUE;
; 522  :         OALLog(L"\r\n>>> Forcing cold boot (non-persistent registry and other data will be wiped) <<< \r\n");

  0021c	059f0140	 ldreq       r0, [pc, #0x140]
  00220	158a200c	 strne       r2, [r10, #0xC]
  00224	058ab00c	 streq       r11, [r10, #0xC]
  00228	0b000000	 bleq        NKDbgPrintfW

; 523  :     }
; 524  :     
; 525  :     // Don't force the boot menu, use default action unless user breaks
; 526  :     // into menu
; 527  :     bForceBootMenu = FALSE;

  0022c	e59f712c	 ldr         r7, [pc, #0x12C]
  00230	e59f8124	 ldr         r8, [pc, #0x124]
  00234	e3a00000	 mov         r0, #0
  00238		 |$retryBootMenu$47861|

; 528  :     
; 529  : retryBootMenu:
; 530  :     // Call configuration menu
; 531  :     BLMenu(bForceBootMenu);

  00238	eb000000	 bl          BLMenu

; 532  :     
; 533  :     // Update ARGS structure if necessary
; 534  :     if ((pArgs->header.signature != OAL_ARGS_SIGNATURE) ||
; 535  :         (pArgs->header.oalVersion != OAL_ARGS_VERSION) ||
; 536  :         (pArgs->header.bspVersion != BSP_ARGS_VERSION))

  0023c	e59a3000	 ldr         r3, [r10]
  00240	e1530005	 cmp         r3, r5
  00244	1a000005	 bne         |$LN7@OEMPreDown|
  00248	e1da30b4	 ldrh        r3, [r10, #4]
  0024c	e3530001	 cmp         r3, #1
  00250	1a000002	 bne         |$LN7@OEMPreDown|
  00254	e1da30b6	 ldrh        r3, [r10, #6]
  00258	e3530001	 cmp         r3, #1
  0025c	0a000023	 beq         |$LN8@OEMPreDown|
  00260		 |$LN7@OEMPreDown|

; 537  :         {
; 538  :         pArgs->header.signature = OAL_ARGS_SIGNATURE;

  00260	e58a5000	 str         r5, [r10]

; 539  :         pArgs->header.oalVersion = OAL_ARGS_VERSION;

  00264	e1cab0b4	 strh        r11, [r10, #4]

; 540  :         pArgs->header.bspVersion = BSP_ARGS_VERSION;

  00268	e1cab0b6	 strh        r11, [r10, #6]

; 541  :         pArgs->kitl.flags = g_bootCfg.kitlFlags;

  0026c	e5943030	 ldr         r3, [r4, #0x30]

; 542  :         pArgs->kitl.devLoc = g_bootCfg.kitlDevLoc;

  00270	e284101c	 add         r1, r4, #0x1C
  00274	e28a001c	 add         r0, r10, #0x1C
  00278	e3a02014	 mov         r2, #0x14
  0027c	e58a3018	 str         r3, [r10, #0x18]
  00280	eb000000	 bl          memcpy

; 543  :         pArgs->kitl.ipAddress = g_bootCfg.ipAddress;

  00284	e5943038	 ldr         r3, [r4, #0x38]
  00288	e3a0920a	 mov         r9, #0xA, 4

; 544  :         pArgs->kitl.ipMask = g_bootCfg.ipMask;
; 545  :         pArgs->kitl.ipRoute = g_bootCfg.ipRoute;
; 546  : 		memcpy(pArgs->kitl.mac,g_bootCfg.mac,sizeof(pArgs->kitl.mac)); 

  0028c	e3890030	 orr         r0, r9, #0x30
  00290	e58a3038	 str         r3, [r10, #0x38]
  00294	e594303c	 ldr         r3, [r4, #0x3C]
  00298	e2841066	 add         r1, r4, #0x66
  0029c	e3a02006	 mov         r2, #6
  002a0	e58a303c	 str         r3, [r10, #0x3C]
  002a4	e5943040	 ldr         r3, [r4, #0x40]
  002a8	e58a3040	 str         r3, [r10, #0x40]
  002ac	eb000000	 bl          memcpy

; 547  :  	    pArgs->updateMode = FALSE;

  002b0	e3a03000	 mov         r3, #0
  002b4	e58a3008	 str         r3, [r10, #8]

; 548  :         pArgs->deviceID = g_bootCfg.deviceID;

  002b8	e5943044	 ldr         r3, [r4, #0x44]

; 549  :         pArgs->oalFlags = g_bootCfg.oalFlags;
; 550  :         pArgs->dispRes = g_bootCfg.displayRes;
; 551  :         pArgs->ECCtype = g_bootCfg.ECCtype; 
; 552  :         pArgs->opp_mode = g_bootCfg.opp_mode;
; 553  :         memcpy(pArgs->DevicePrefix, gDevice_prefix, sizeof(pArgs->DevicePrefix));

  002bc	e3890048	 orr         r0, r9, #0x48
  002c0	e3a02018	 mov         r2, #0x18
  002c4	e58a3010	 str         r3, [r10, #0x10]
  002c8	e5943034	 ldr         r3, [r4, #0x34]
  002cc	e58a3044	 str         r3, [r10, #0x44]
  002d0	e594306c	 ldr         r3, [r4, #0x6C]
  002d4	e58a3060	 str         r3, [r10, #0x60]
  002d8	e5d43074	 ldrb        r3, [r4, #0x74]
  002dc	e58a3064	 str         r3, [r10, #0x64]
  002e0	e5943078	 ldr         r3, [r4, #0x78]
  002e4	e58a3068	 str         r3, [r10, #0x68]
  002e8	e5981000	 ldr         r1, [r8]
  002ec	eb000000	 bl          memcpy
  002f0		 |$LN8@OEMPreDown|

; 554  :         }  
; 555  :     
; 556  :     // Initialize display
; 557  :     BLShowLogo();

  002f0	eb000000	 bl          BLShowLogo

; 558  : 
; 559  :     // Image download depends on protocol
; 560  :     g_eboot.bootDeviceType = OALKitlDeviceType(
; 561  :         &g_bootCfg.bootDevLoc, g_bootDevices
; 562  :         );

  002f4	e1a01006	 mov         r1, r6
  002f8	e2840008	 add         r0, r4, #8
  002fc	eb000000	 bl          OALKitlDeviceType
  00300	e5870000	 str         r0, [r7]

; 563  : 
; 564  :     switch (g_eboot.bootDeviceType)

  00304	e3500002	 cmp         r0, #2
  00308	0a00000a	 beq         |$LN2@OEMPreDown|
  0030c	e3500003	 cmp         r0, #3
  00310	0a000004	 beq         |$LN3@OEMPreDown|
  00314	e3500004	 cmp         r0, #4
  00318	1a00000b	 bne         |$LN29@OEMPreDown|

; 565  :         {
; 566  :         case BOOT_SDCARD_TYPE:
; 567  :             rc = BLSDCardDownload(g_bootCfg.filename);

  0031c	e284004c	 add         r0, r4, #0x4C
  00320	eb000000	 bl          BLSDCardDownload

; 568  :             break;

  00324	ea000006	 b           |$LN5@OEMPreDown|
  00328		 |$LN3@OEMPreDown|

; 569  :         case OAL_KITL_TYPE_FLASH:
; 570  :             rc = BLFlashDownload(&g_bootCfg, g_bootDevices);

  00328	e1a01006	 mov         r1, r6
  0032c	e1a00004	 mov         r0, r4
  00330	eb000000	 bl          BLFlashDownload

; 571  :             break;

  00334	ea000002	 b           |$LN5@OEMPreDown|
  00338		 |$LN2@OEMPreDown|

; 572  :         case OAL_KITL_TYPE_ETH:
; 573  :             rc = BLEthDownload(&g_bootCfg, g_bootDevices);

  00338	e1a01006	 mov         r1, r6
  0033c	e1a00004	 mov         r0, r4
  00340	eb000000	 bl          BLEthDownload
  00344		 |$LN5@OEMPreDown|

; 574  :             break;
; 575  :         }
; 576  :         
; 577  :     if (rc == BL_ERROR)

  00344	e3700001	 cmn         r0, #1
  00348	1a000001	 bne         |$LN1@OEMPreDown|
  0034c		 |$LN29@OEMPreDown|

; 578  :     {
; 579  :         // No automatic mode now, force the boot menu to appear
; 580  :         bForceBootMenu = TRUE;

  0034c	e3a00001	 mov         r0, #1

; 581  :         goto retryBootMenu; 

  00350	eaffffb8	 b           |$retryBootMenu$47861|
  00354		 |$LN1@OEMPreDown|

; 582  :     }   
; 583  :     
; 584  :     return rc;
; 585  : }

  00354	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00358	e12fff1e	 bx          lr
  0035c		 |$LN67@OEMPreDown|
  0035c		 |$LN68@OEMPreDown|
  0035c	00000000	 DCD         |gDevice_prefix|
  00360		 |$LN69@OEMPreDown|
  00360	00000000	 DCD         |g_eboot|
  00364		 |$LN70@OEMPreDown|
  00364	00000000	 DCD         |??_C@_1KM@MLNPCLLF@?$AA?$AN?$AA?6?$AA?$DO?$AA?$DO?$AA?$DO?$AA?5?$AAF?$AAo?$AAr?$AAc?$AAi?$AAn?$AAg?$AA?5?$AAc?$AAo?$AAl?$AAd?$AA?5?$AAb?$AAo?$AAo?$AAt?$AA?5?$AA?$CI?$AAn?$AAo?$AAn?$AA?9?$AAp?$AAe?$AAr@|
  00368		 |$LN71@OEMPreDown|
  00368	53475241	 DCD         0x53475241
  0036c		 |$LN72@OEMPreDown|
  0036c	00000000	 DCD         |??_C@_1O@HJKNOJA@?$AAn?$AAk?$AA?4?$AAb?$AAi?$AAn?$AA?$AA@|
  00370		 |$LN73@OEMPreDown|
  00370	00000000	 DCD         |??_C@_1EC@IFKCAMGN@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAS?$AAW?$AA4?$AA?5?$AAb?$AAo?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?$AN?$AA?6@|
  00374		 |$LN74@OEMPreDown|
  00374	00000000	 DCD         |g_CPUFamily|
  00378		 |$LN75@OEMPreDown|
  00378	00000000	 DCD         |dwEbootECCtype|
  0037c		 |$LN76@OEMPreDown|
  0037c	00000000	 DCD         |??_C@_1GC@MEIINOMM@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAf?$AAi?$AAg?$AA?5?$AAw?$AAa?$AAs?$AAn?$AA?8?$AAt?$AA?5?$AAf?$AAo?$AAu?$AAn?$AAd?$AA?0?$AA?5@|
  00380		 |$LN77@OEMPreDown|
  00380	00000000	 DCD         |??_C@_1EC@IBPJNEAL@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAo?$AAu?$AAn?$AAd?$AA?$AN?$AA?6@|
  00384		 |$LN78@OEMPreDown|
  00384	42434647	 DCD         0x42434647
  00388		 |$LN79@OEMPreDown|
  00388	00000000	 DCD         |g_bootDevices|
  0038c		 |$LN80@OEMPreDown|
  0038c	00000000	 DCD         |g_bootCfg|
  00390		 |$LN81@OEMPreDown|
  00390	00000000	 DCD         |OEMMultiBinNotify|
  00394		 |$LN82@OEMPreDown|
  00394	00000000	 DCD         |g_pOEMMultiBINNotify|
  00398		 |$LN83@OEMPreDown|
  00398	00000000	 DCD         |??_C@_1DA@EHCEJENN@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAP?$AAr?$AAe?$AAd?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AA?4?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  0039c		 |$LN84@OEMPreDown|
  0039c	480022f0	 DCD         0x480022f0
  003a0		 |$LN85@OEMPreDown|
  003a0	48307200	 DCD         0x48307200
  003a4		 |$M48559|

			 ENDP  ; |OEMPreDownload|

	EXPORT	|OEMLaunch|
	EXPORT	|??_C@_1GI@OMOEGIPN@?$AAL?$AAa?$AAu?$AAn?$AAc?$AAh?$AA?5?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAC?$AAE?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAb?$AAy?$AA?5?$AAj?$AAu?$AAm?$AAp?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@MGHNOKAM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAL?$AAa?$AAu?$AAn?$AAc?$AAh?$AA?3?$AA?5?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@FBKDALPO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAL?$AAa?$AAu?$AAn?$AAc?$AAh?$AA?3?$AA?5?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAN?$AAK?$AA?4?$AAb?$AAi?$AAn?$AA?5?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@PPNIDEHG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAL?$AAa?$AAu?$AAn?$AAc?$AAh?$AA?3?$AA?5?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?5?$AAd?$AAo?$AAw?$AAn?$AAl?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@LEGMELFL@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAX?$AAL?$AAD?$AAR?$AA?1?$AAE?$AAB?$AAO?$AAO?$AAT?$AA?1?$AAI?$AAP?$AAL?$AA?5?$AAd?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAe?$AAd?$AA?0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@LNJPPCBO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAL?$AAa?$AAu?$AAn?$AAc?$AAh?$AA?3?$AA?5?$AAI?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAf?$AAr?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@FFBNFJNC@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAS?$AAp?$AAl?$AAa?$AAs?$AAh?$AAc?$AAr?$AAe?$AAe?$AAn?$AA?5?$AAl?$AAo?$AAg?$AAo?$AA?5?$AAd?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@MMIDCEGF@?$AA?$CL?$AAO?$AAE?$AAM?$AAL?$AAa?$AAu?$AAn?$AAc?$AAh?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8@| [ DATA ] ; `string'
	IMPORT	|JumpTo|
	IMPORT	|OEMDeinitDebugSerial|
	IMPORT	|WriteFlashNK|
	IMPORT	|BLEthConfig|

  00000			 AREA	 |.pdata|, PDATA
|$T48627| DCD	|$LN63@OEMLaunch|
	DCD	0x40007e02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@OMOEGIPN@?$AAL?$AAa?$AAu?$AAn?$AAc?$AAh?$AA?5?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAC?$AAE?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAb?$AAy?$AA?5?$AAj?$AAu?$AAm?$AAp?$AAi@| DCB "L"
	DCB	0x0, "a", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "h", 0x0, " "
	DCB	0x0, "W", 0x0, "i", 0x0, "n", 0x0, "d", 0x0, "o", 0x0, "w"
	DCB	0x0, "s", 0x0, " ", 0x0, "C", 0x0, "E", 0x0, " ", 0x0, "i"
	DCB	0x0, "m", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, " ", 0x0, "b"
	DCB	0x0, "y", 0x0, " ", 0x0, "j", 0x0, "u", 0x0, "m", 0x0, "p"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ".", 0x0, ".", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@MGHNOKAM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAL?$AAa?$AAu?$AAn?$AAc?$AAh?$AA?3?$AA?5?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "L", 0x0, "a", 0x0, "u"
	DCB	0x0, "n", 0x0, "c", 0x0, "h", 0x0, ":", 0x0, " ", 0x0, "U"
	DCB	0x0, "n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n"
	DCB	0x0, " ", 0x0, "i", 0x0, "m", 0x0, "a", 0x0, "g", 0x0, "e"
	DCB	0x0, " ", 0x0, "l", 0x0, "a", 0x0, "u", 0x0, "n", 0x0, "c"
	DCB	0x0, "h", 0x0, " ", 0x0, "a", 0x0, "d", 0x0, "d", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, ",", 0x0, " ", 0x0, "s"
	DCB	0x0, "p", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "o"
	DCB	0x0, "r", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@FBKDALPO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAL?$AAa?$AAu?$AAn?$AAc?$AAh?$AA?3?$AA?5?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAN?$AAK?$AA?4?$AAb?$AAi?$AAn?$AA?5?$AAf@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "L", 0x0, "a", 0x0, "u"
	DCB	0x0, "n", 0x0, "c", 0x0, "h", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "l", 0x0, "a", 0x0, "s", 0x0, "h", 0x0, " ", 0x0, "N"
	DCB	0x0, "K", 0x0, ".", 0x0, "b", 0x0, "i", 0x0, "n", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "r"
	DCB	0x0, "t", 0x0, "=", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@PPNIDEHG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAL?$AAa?$AAu?$AAn?$AAc?$AAh?$AA?3?$AA?5?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?5?$AAd?$AAo?$AAw?$AAn?$AAl?$AAo@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "L", 0x0, "a", 0x0, "u"
	DCB	0x0, "n", 0x0, "c", 0x0, "h", 0x0, ":", 0x0, " ", 0x0, "U"
	DCB	0x0, "n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n"
	DCB	0x0, " ", 0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n", 0x0, "l"
	DCB	0x0, "o", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "y"
	DCB	0x0, "p", 0x0, "e", 0x0, ",", 0x0, " ", 0x0, "s", 0x0, "p"
	DCB	0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, "e", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@LEGMELFL@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAX?$AAL?$AAD?$AAR?$AA?1?$AAE?$AAB?$AAO?$AAO?$AAT?$AA?1?$AAI?$AAP?$AAL?$AA?5?$AAd?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAe?$AAd?$AA?0@| DCB "I"
	DCB	0x0, "N", 0x0, "F", 0x0, "O", 0x0, ":", 0x0, " ", 0x0, "X"
	DCB	0x0, "L", 0x0, "D", 0x0, "R", 0x0, "/", 0x0, "E", 0x0, "B"
	DCB	0x0, "O", 0x0, "O", 0x0, "T", 0x0, "/", 0x0, "I", 0x0, "P"
	DCB	0x0, "L", 0x0, " ", 0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n"
	DCB	0x0, "l", 0x0, "o", 0x0, "a", 0x0, "d", 0x0, "e", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "s", 0x0, "p", 0x0, "i", 0x0, "n"
	DCB	0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, "e", 0x0, "v"
	DCB	0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@LNJPPCBO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAL?$AAa?$AAu?$AAn?$AAc?$AAh?$AA?3?$AA?5?$AAI?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAf?$AAr?$AAo@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "L", 0x0, "a", 0x0, "u"
	DCB	0x0, "n", 0x0, "c", 0x0, "h", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "m", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, " ", 0x0, "l"
	DCB	0x0, "o", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "f", 0x0, "r"
	DCB	0x0, "o", 0x0, "m", 0x0, " ", 0x0, "f", 0x0, "l", 0x0, "a"
	DCB	0x0, "s", 0x0, "h", 0x0, " ", 0x0, "m", 0x0, "e", 0x0, "m"
	DCB	0x0, "o", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@FFBNFJNC@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAS?$AAp?$AAl?$AAa?$AAs?$AAh?$AAc?$AAr?$AAe?$AAe?$AAn?$AA?5?$AAl?$AAo?$AAg?$AAo?$AA?5?$AAd?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAe@| DCB "I"
	DCB	0x0, "N", 0x0, "F", 0x0, "O", 0x0, ":", 0x0, " ", 0x0, "S"
	DCB	0x0, "p", 0x0, "l", 0x0, "a", 0x0, "s", 0x0, "h", 0x0, "c"
	DCB	0x0, "r", 0x0, "e", 0x0, "e", 0x0, "n", 0x0, " ", 0x0, "l"
	DCB	0x0, "o", 0x0, "g", 0x0, "o", 0x0, " ", 0x0, "d", 0x0, "o"
	DCB	0x0, "w", 0x0, "n", 0x0, "l", 0x0, "o", 0x0, "a", 0x0, "d"
	DCB	0x0, "e", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "s", 0x0, "p"
	DCB	0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, "e", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@MMIDCEGF@?$AA?$CL?$AAO?$AAE?$AAM?$AAL?$AAa?$AAu?$AAn?$AAc?$AAh?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8@| DCB "+"
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "L", 0x0, "a", 0x0, "u"
	DCB	0x0, "n", 0x0, "c", 0x0, "h", 0x0, "(", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, "/", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMLaunch| PROC

; 601  : {

  00000		 |$LN63@OEMLaunch|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M48624|
  00008	e1a08003	 mov         r8, r3
  0000c	e1a09002	 mov         r9, r2
  00010	e1a0a001	 mov         r10, r1
  00014	e1a07000	 mov         r7, r0

; 602  :     BSP_ARGS *pArgs = OALCAtoUA(IMAGE_SHARE_ARGS_CA);
; 603  : 
; 604  : 	UNREFERENCED_PARAMETER(size);
; 605  : 	UNREFERENCED_PARAMETER(pRomHeader);
; 606  : 
; 607  :     OALMSG(OAL_FUNC, (
; 608  :         L"+OEMLaunch(0x%08x, 0x%08x, 0x%08x, 0x%08x - %d/%d)\r\n", start, size,
; 609  :         launch, pRomHeader, g_eboot.bootDeviceType, g_eboot.type
; 610  :         ));

  00018	e59f51d4	 ldr         r5, [pc, #0x1D4]
  0001c	e59f61cc	 ldr         r6, [pc, #0x1CC]
  00020	e595e440	 ldr         lr, [r5, #0x440]
  00024	e31e0004	 tst         lr, #4
  00028	0a000009	 beq         |$LN26@OEMLaunch|
  0002c	e5964004	 ldr         r4, [r6, #4]
  00030	e596e000	 ldr         lr, [r6]
  00034	e59f01b0	 ldr         r0, [pc, #0x1B0]
  00038	e1a03009	 mov         r3, r9
  0003c	e1a0200a	 mov         r2, r10
  00040	e1a01007	 mov         r1, r7
  00044	e58d4008	 str         r4, [sp, #8]
  00048	e58de004	 str         lr, [sp, #4]
  0004c	e58d8000	 str         r8, [sp]
  00050	eb000000	 bl          NKDbgPrintfW
  00054		 |$LN26@OEMLaunch|

; 611  : 
; 612  :     // Depending on protocol there can be some action required
; 613  :     switch (g_eboot.bootDeviceType)

  00054	e5963000	 ldr         r3, [r6]
  00058	e59f8188	 ldr         r8, [pc, #0x188]
  0005c	e3530002	 cmp         r3, #2

; 709  :                     break;
; 710  :                 }
; 711  :             break;
; 712  : 
; 713  :         default:        
; 714  :             launch = g_eboot.launchAddress;
; 715  :             break;

  00060	1a00001e	 bne         |$LN17@OEMLaunch|
  00064	e3a0020a	 mov         r0, #0xA, 4
  00068	eb000000	 bl          BLEthConfig
  0006c	e5963004	 ldr         r3, [r6, #4]
  00070	e3530001	 cmp         r3, #1
  00074	0a000025	 beq         |$LN16@OEMLaunch|

; 614  :         {
; 615  : #if BUILDING_EBOOT_SD
; 616  :         case BOOT_SDCARD_TYPE:            
; 617  :             switch (g_eboot.type)
; 618  :                 {
; 619  : #if 0
; 620  : /*
; 621  :                 case DOWNLOAD_TYPE_FLASHRAM:
; 622  :                     if (BLFlashDownload(&g_bootCfg, g_kitlDevices) != BL_JUMP)
; 623  :                         {
; 624  :                         OALMSG(OAL_ERROR, (L"ERROR: OEMLaunch: "
; 625  :                             L"Image load from flash memory failed\r\n"
; 626  :                             ));
; 627  :                         goto cleanUp;
; 628  :                         }
; 629  :                     launch = g_eboot.launchAddress;
; 630  :                     break;
; 631  : */
; 632  : #endif
; 633  :                 case DOWNLOAD_TYPE_RAM:
; 634  :                     launch = (UINT32)OEMMapMemAddr(start, launch);
; 635  :                     break;
; 636  : 					
; 637  :                 case DOWNLOAD_TYPE_FLASHNAND:
; 638  :                     if (BLFlashDownload(&g_bootCfg, g_kitlDevices) != BL_JUMP)
; 639  :                         {
; 640  :                         OALMSG(OAL_ERROR, (L"ERROR: OEMLaunch: "
; 641  :                             L"Image load from flash memory failed\r\n"
; 642  :                             ));
; 643  :                         goto cleanUp;
; 644  :                         }
; 645  :                     launch = g_eboot.launchAddress;
; 646  :                     break;
; 647  : 					
; 648  : #if 0
; 649  : /*
; 650  :                 case DOWNLOAD_TYPE_EBOOT:
; 651  :                 case DOWNLOAD_TYPE_XLDR:
; 652  :                     OALMSG(OAL_INFO, (L"INFO: "
; 653  :                         L"XLDR/EBOOT/IPL downloaded, spin forever\r\n"
; 654  :                         ));
; 655  :                     while (TRUE);
; 656  :                     break;
; 657  : */
; 658  : #endif
; 659  :                 default:
; 660  :                     OALMSG(OAL_ERROR, (L"ERROR: OEMLaunch: Unknown download type, spin forever\r\n"));
; 661  :                     for(;;);
; 662  :                     break;
; 663  :                 }
; 664  :             break;
; 665  : 
; 666  : #endif
; 667  : 
; 668  :         case OAL_KITL_TYPE_ETH:
; 669  :             BLEthConfig(pArgs);
; 670  :             switch (g_eboot.type)

  00078	e3530002	 cmp         r3, #2
  0007c	9a00001e	 bls         |$LN9@OEMLaunch|
  00080	e3530004	 cmp         r3, #4
  00084	9a000017	 bls         |$LN15@OEMLaunch|
  00088	e3530005	 cmp         r3, #5
  0008c	9a00001a	 bls         |$LN9@OEMLaunch|
  00090	e3530007	 cmp         r3, #7
  00094	9a000006	 bls         |$LN18@OEMLaunch|
  00098	e3530008	 cmp         r3, #8
  0009c	1a000016	 bne         |$LN9@OEMLaunch|

; 697  :                     break;
; 698  : 
; 699  : 				case DOWNLOAD_TYPE_LOGO:
; 700  :                     OALMSG(OAL_INFO, (L"INFO: "
; 701  :                         L"Splashcreen logo downloaded, spin forever\r\n"
; 702  :                         ));

  000a0	e5953440	 ldr         r3, [r5, #0x440]
  000a4	e3130008	 tst         r3, #8
  000a8	159f0134	 ldrne       r0, [pc, #0x134]
  000ac	1b000000	 blne        NKDbgPrintfW
  000b0		 |$LL11@OEMLaunch|

; 703  :                     for(;;);

  000b0	eafffffe	 b           |$LL11@OEMLaunch|
  000b4		 |$LN18@OEMLaunch|

; 671  :                 {
; 672  : #ifdef IMGMULTIXIP
; 673  :                 case DOWNLOAD_TYPE_EXT:
; 674  : #endif					
; 675  :                 case DOWNLOAD_TYPE_FLASHNAND:
; 676  : 				case DOWNLOAD_TYPE_FLASHNOR:
; 677  :                     if (BLFlashDownload(&g_bootCfg, g_kitlDevices) != BL_JUMP)

  000b4	e59f1124	 ldr         r1, [pc, #0x124]
  000b8	e1a00008	 mov         r0, r8
  000bc	eb000000	 bl          BLFlashDownload
  000c0	e3500001	 cmp         r0, #1
  000c4	0a000005	 beq         |$LN17@OEMLaunch|

; 678  :                         {
; 679  :                         OALMSG(OAL_ERROR, (L"ERROR: OEMLaunch: "
; 680  :                             L"Image load from flash memory failed\r\n"
; 681  :                             ));

  000c8	e5953440	 ldr         r3, [r5, #0x440]
  000cc	e3130001	 tst         r3, #1
  000d0	0a000039	 beq         |$cleanUp$47899|
  000d4	e59f0100	 ldr         r0, [pc, #0x100]
  000d8	eb000000	 bl          NKDbgPrintfW

; 682  :                         goto cleanUp;

  000dc	ea000036	 b           |$cleanUp$47899|
  000e0		 |$LN17@OEMLaunch|

; 683  :                         }
; 684  :                     launch = g_eboot.launchAddress;

  000e0	e596400c	 ldr         r4, [r6, #0xC]

; 685  :                     break;

  000e4	ea00000d	 b           |$LN19@OEMLaunch|
  000e8		 |$LN15@OEMLaunch|

; 689  :                     break;
; 690  : 
; 691  :                 case DOWNLOAD_TYPE_EBOOT:
; 692  :                 case DOWNLOAD_TYPE_XLDR:
; 693  :                     OALMSG(OAL_INFO, (L"INFO: "
; 694  :                         L"XLDR/EBOOT/IPL downloaded, spin forever\r\n"
; 695  :                         ));

  000e8	e5953440	 ldr         r3, [r5, #0x440]
  000ec	e3130008	 tst         r3, #8
  000f0	159f00e0	 ldrne       r0, [pc, #0xE0]
  000f4	1b000000	 blne        NKDbgPrintfW
  000f8		 |$LL14@OEMLaunch|

; 696  :                     for(;;);

  000f8	eafffffe	 b           |$LL14@OEMLaunch|
  000fc		 |$LN9@OEMLaunch|

; 704  :                     break;
; 705  : 
; 706  :                 default:
; 707  :                     OALMSG(OAL_ERROR, (L"ERROR: OEMLaunch: Unknown download type, spin forever\r\n"));

  000fc	e5953440	 ldr         r3, [r5, #0x440]
  00100	e3130001	 tst         r3, #1
  00104	159f00c8	 ldrne       r0, [pc, #0xC8]
  00108	1b000000	 blne        NKDbgPrintfW
  0010c		 |$LL8@OEMLaunch|

; 708  :                     for(;;);

  0010c	eafffffe	 b           |$LL8@OEMLaunch|
  00110		 |$LN16@OEMLaunch|

; 686  : 
; 687  :                 case DOWNLOAD_TYPE_RAM:
; 688  :                     launch = (UINT32)OEMMapMemAddr(start, launch);

  00110	e1a01009	 mov         r1, r9
  00114	e1a00007	 mov         r0, r7
  00118	eb000000	 bl          OEMMapMemAddr
  0011c	e1a04000	 mov         r4, r0
  00120		 |$LN19@OEMLaunch|

; 716  :         }
; 717  : 
; 718  : #ifndef BSP_NO_NAND_IN_SDBOOT
; 719  :     if ((g_bootCfg.flashNKFlags & ENABLE_FLASH_NK) &&       
; 720  :         /* if loading from NAND then do not need to flash NAND again */      
; 721  :         (g_eboot.bootDeviceType != OAL_KITL_TYPE_FLASH) && 
; 722  : 	    (start != (IMAGE_WINCE_CODE_CA + NAND_ROMOFFSET)) &&
; 723  : 	    (start != (IMAGE_WINCE_CODE_CA + NOR_ROMOFFSET))) {

  00120	e5983070	 ldr         r3, [r8, #0x70]
  00124	e3130001	 tst         r3, #1
  00128	0a000014	 beq         |$LN52@OEMLaunch|
  0012c	e5963000	 ldr         r3, [r6]
  00130	e3530003	 cmp         r3, #3
  00134	0a000011	 beq         |$LN52@OEMLaunch|
  00138	e3a03103	 mov         r3, #3, 2
  0013c	e3833a02	 orr         r3, r3, #2, 20
  00140	e1570003	 cmp         r7, r3
  00144	0a00000d	 beq         |$LN52@OEMLaunch|
  00148	e3a0320e	 mov         r3, #0xE, 4
  0014c	e3833a02	 orr         r3, r3, #2, 20
  00150	e1570003	 cmp         r7, r3
  00154	0a000009	 beq         |$LN52@OEMLaunch|

; 724  :             if( !WriteFlashNK(start, size))

  00158	e1a0100a	 mov         r1, r10
  0015c	e1a00007	 mov         r0, r7
  00160	eb000000	 bl          WriteFlashNK
  00164	e3500000	 cmp         r0, #0
  00168	1a000004	 bne         |$LN52@OEMLaunch|
  0016c	e5953440	 ldr         r3, [r5, #0x440]

; 725  : 	            OALMSG(OAL_ERROR, (L"ERROR: OEMLaunch: "
; 726  : 	                L"Flash NK.bin failed, start=%x\r\n", start
; 727  : 	                ));

  00170	e3130001	 tst         r3, #1
  00174	159f0054	 ldrne       r0, [pc, #0x54]
  00178	11a01007	 movne       r1, r7
  0017c	1b000000	 blne        NKDbgPrintfW
  00180		 |$LN52@OEMLaunch|

; 728  :     	}
; 729  : #endif
; 730  : 
; 731  :     // Check if we get launch address
; 732  :     if (launch == (UINT32)INVALID_HANDLE_VALUE)

  00180	e3740001	 cmn         r4, #1
  00184	1a000004	 bne         |$LN1@OEMLaunch|
  00188	e5953440	 ldr         r3, [r5, #0x440]

; 733  :         {
; 734  :         OALMSG(OAL_ERROR, (L"ERROR: OEMLaunch: "
; 735  :             L"Unknown image launch address, spin forever\r\n"
; 736  :             ));

  0018c	e3130001	 tst         r3, #1
  00190	159f0034	 ldrne       r0, [pc, #0x34]
  00194	1b000000	 blne        NKDbgPrintfW
  00198		 |$LL2@OEMLaunch|

; 737  :         for(;;);

  00198	eafffffe	 b           |$LL2@OEMLaunch|
  0019c		 |$LN1@OEMLaunch|

; 738  :         }        
; 739  : 
; 740  :     // Print message, flush caches and jump to image
; 741  :     OALLog(
; 742  :         L"Launch Windows CE image by jumping to 0x%08x...\r\n\r\n", launch
; 743  :         );

  0019c	e59f0024	 ldr         r0, [pc, #0x24]
  001a0	e1a01004	 mov         r1, r4
  001a4	eb000000	 bl          NKDbgPrintfW

; 744  : 
; 745  : 	OEMDeinitDebugSerial();

  001a8	eb000000	 bl          OEMDeinitDebugSerial

; 746  :     OEMPlatformDeinit();

  001ac	eb000000	 bl          OEMPlatformDeinit

; 747  :     JumpTo(OALVAtoPA((UCHAR*)launch));

  001b0	e1a00004	 mov         r0, r4
  001b4	eb000000	 bl          OALVAtoPA
  001b8	eb000000	 bl          JumpTo
  001bc		 |$cleanUp$47899|

; 748  : 
; 749  : cleanUp:
; 750  :     return;
; 751  : }

  001bc	e28dd00c	 add         sp, sp, #0xC
  001c0	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  001c4	e12fff1e	 bx          lr
  001c8		 |$LN64@OEMLaunch|
  001c8		 |$LN65@OEMLaunch|
  001c8	00000000	 DCD         |??_C@_1GI@OMOEGIPN@?$AAL?$AAa?$AAu?$AAn?$AAc?$AAh?$AA?5?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAC?$AAE?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAb?$AAy?$AA?5?$AAj?$AAu?$AAm?$AAp?$AAi@|
  001cc		 |$LN66@OEMLaunch|
  001cc	00000000	 DCD         |??_C@_1HO@MGHNOKAM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAL?$AAa?$AAu?$AAn?$AAc?$AAh?$AA?3?$AA?5?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5@|
  001d0		 |$LN67@OEMLaunch|
  001d0	00000000	 DCD         |??_C@_1GE@FBKDALPO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAL?$AAa?$AAu?$AAn?$AAc?$AAh?$AA?3?$AA?5?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAN?$AAK?$AA?4?$AAb?$AAi?$AAn?$AA?5?$AAf@|
  001d4		 |$LN68@OEMLaunch|
  001d4	00000000	 DCD         |??_C@_1HA@PPNIDEHG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAL?$AAa?$AAu?$AAn?$AAc?$AAh?$AA?3?$AA?5?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?5?$AAd?$AAo?$AAw?$AAn?$AAl?$AAo@|
  001d8		 |$LN69@OEMLaunch|
  001d8	00000000	 DCD         |??_C@_1GA@LEGMELFL@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAX?$AAL?$AAD?$AAR?$AA?1?$AAE?$AAB?$AAO?$AAO?$AAT?$AA?1?$AAI?$AAP?$AAL?$AA?5?$AAd?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAe?$AAd?$AA?0@|
  001dc		 |$LN70@OEMLaunch|
  001dc	00000000	 DCD         |??_C@_1HA@LNJPPCBO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAL?$AAa?$AAu?$AAn?$AAc?$AAh?$AA?3?$AA?5?$AAI?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAf?$AAr?$AAo@|
  001e0		 |$LN71@OEMLaunch|
  001e0	00000000	 DCD         |g_kitlDevices|
  001e4		 |$LN72@OEMLaunch|
  001e4	00000000	 DCD         |??_C@_1GE@FFBNFJNC@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAS?$AAp?$AAl?$AAa?$AAs?$AAh?$AAc?$AAr?$AAe?$AAe?$AAn?$AA?5?$AAl?$AAo?$AAg?$AAo?$AA?5?$AAd?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAe@|
  001e8		 |$LN73@OEMLaunch|
  001e8	00000000	 DCD         |g_bootCfg|
  001ec		 |$LN74@OEMLaunch|
  001ec	00000000	 DCD         |??_C@_1GK@MMIDCEGF@?$AA?$CL?$AAO?$AAE?$AAM?$AAL?$AAa?$AAu?$AAn?$AAc?$AAh?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8@|
  001f0		 |$LN75@OEMLaunch|
  001f0	00000000	 DCD         |g_eboot|
  001f4		 |$LN76@OEMLaunch|
  001f4	00000000	 DCD         |dpCurSettings|
  001f8		 |$M48625|

			 ENDP  ; |OEMLaunch|

	END
