; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\EVM_OMAP3530\SRC\DRIVERS\PM\DLL\pminit.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|ghtResume| [ DATA ]
	EXPORT	|gpSystemPowerState| [ DATA ]
	EXPORT	|ghtActivityTimers| [ DATA ]
	EXPORT	|gcsDeviceUpdateAPIs| [ DATA ]
	EXPORT	|gpDeviceLists| [ DATA ]
	EXPORT	|gpPMExtInit| [ DATA ]
	EXPORT	|ghevResume| [ DATA ]
	EXPORT	|gcsPowerManager| [ DATA ]
	EXPORT	|gpCeilingDx| [ DATA ]
	EXPORT	|ghPmHeap| [ DATA ]
	EXPORT	|ghevPowerManagerReady| [ DATA ]
	EXPORT	|gpFloorDx| [ DATA ]
	EXPORT	|gpPowerNotifications| [ DATA ]
	EXPORT	|ghtSystem| [ DATA ]
	EXPORT	|ghtPnP| [ DATA ]
	EXPORT	|gppActivityTimers| [ DATA ]
	EXPORT	|ghInst| [ DATA ]
	EXPORT	|ghevPmShutdown| [ DATA ]
	EXPORT	|ghevTimerResume| [ DATA ]
	EXPORT	|ghPMExtLib| [ DATA ]
	EXPORT	|gpPMExtDeinit| [ DATA ]
	EXPORT	|idGenericPMDeviceClass| [ DATA ]
	EXPORT	|idPMDisplayDeviceClass| [ DATA ]
	EXPORT	|gdwPMExtContext| [ DATA ]
	EXPORT	|dpCurSettings| [ DATA ]
	EXPORT	|?g_pSysRegistryAccess@@3PAVSystemNotifyRegKey@@A| [ DATA ] ; g_pSysRegistryAccess

  00000			 AREA	 |.bss|, NOINIT
|ghtResume| %	0x4
|gpSystemPowerState| % 0x4
|ghtActivityTimers| % 0x4
|gcsDeviceUpdateAPIs| % 0x14
|gpDeviceLists| % 0x4
|gpPMExtInit| %	0x4
|ghevResume| %	0x4
|gcsPowerManager| % 0x14
|gpCeilingDx| %	0x4
|ghPmHeap| %	0x4
|ghevPowerManagerReady| % 0x4
|gpFloorDx| %	0x4
|gpPowerNotifications| % 0x4
|ghtSystem| %	0x4
|ghtPnP| %	0x4
|gppActivityTimers| % 0x4
|ghInst| %	0x4
|ghevPmShutdown| % 0x4
|ghevTimerResume| % 0x4
|ghPMExtLib| %	0x4
|gpPMExtDeinit| % 0x4
|gdwPMExtContext| % 0x4
|?g_pSysRegistryAccess@@3PAVSystemNotifyRegKey@@A| % 0x4 ; g_pSysRegistryAccess

  00000			 AREA	 |.data|, DATA
|idGenericPMDeviceClass| DCD 0xa32942b7
	DCW	0x920c
	DCW	0x486b
	DCB	0xb0
	DCB	0xe6
	DCB	0x92
	DCB	0xa7
	DCB	0x2
	DCB	0xa9
	DCB	0x9b
	DCB	0x35
|idPMDisplayDeviceClass| DCD 0xeb91c7c9
	DCW	0x8bf6
	DCW	0x4a2d
	DCB	0x9a
	DCB	0xb8
	DCB	0x69
	DCB	0x72
	DCB	0x4e
	DCB	0xed
	DCB	0x97
	DCB	0xd1
|dpCurSettings| DCB "P", 0x0, "M", 0x0, 0x0, 0x0
	%	58
	DCB	"E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, "s", 0x0
	DCB	0x0, 0x0
	%	50
	DCB	"W", 0x0, "a", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0
	DCB	"g", 0x0, "s", 0x0, 0x0, 0x0
	%	46
	DCB	"I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0x0, 0x0
	%	54
	DCB	"R", 0x0, "e", 0x0, "s", 0x0, "u", 0x0, "m", 0x0, "e", 0x0
	DCB	0x0, 0x0
	%	50
	DCB	"D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0
	DCB	0x0, 0x0
	%	50
	DCB	"I", 0x0, "o", 0x0, "c", 0x0, "t", 0x0, "l", 0x0, 0x0, 0x0
	%	52
	DCB	"R", 0x0, "e", 0x0, "f", 0x0, "c", 0x0, "n", 0x0, "t", 0x0
	DCB	0x0, 0x0
	%	50
	DCB	"R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "i", 0x0, "r", 0x0
	DCB	"e", 0x0, 0x0, 0x0
	%	48
	DCB	"N", 0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f", 0x0, "y", 0x0
	DCB	0x0, 0x0
	%	50
	DCB	"R", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0
	DCB	"r", 0x0, "y", 0x0, 0x0, 0x0
	%	46
	DCB	"P", 0x0, "l", 0x0, "a", 0x0, "t", 0x0, "f", 0x0, "o", 0x0
	DCB	"r", 0x0, "m", 0x0, 0x0, 0x0
	%	46
	DCB	"A", 0x0, "P", 0x0, "I", 0x0, 0x0, 0x0
	%	56
	DCB	"A", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, 0x0, 0x0
	%	52
	DCB	"T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "r", 0x0, "s", 0x0
	DCB	0x0, 0x0
	%	50
	DCB	0x0, 0x0
	%	62
	DCB	0x0, 0x0
	%	62
	DCD	0x7
	EXPORT	|SetEvent|
	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T34573| DCD	|$LN5@SetEvent|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34570|

; 236  : 	return EventModify(h,EVENT_SET);

  00004	e3a01003	 mov         r1, #3
  00008	eb000000	 bl          EventModify

; 237  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M34571|

			 ENDP  ; |SetEvent|

	EXPORT	|GetCurrentProcess|

  00000			 AREA	 |.pdata|, PDATA
|$T34582| DCD	|$LN5@GetCurrent|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentProcess| PROC

; 361  : _inline HANDLE GetCurrentProcess(void) {

  00000		 |$LN5@GetCurrent|
  00000		 |$M34579|

; 362  : 	return ((HANDLE)(SH_CURPROC+SYS_HANDLE_BASE));

  00000	e3a00042	 mov         r0, #0x42

; 363  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M34580|

			 ENDP  ; |GetCurrentProcess|

	EXPORT	|GetCurrentProcessId|
	IMPORT	|__GetUserKData|

  00000			 AREA	 |.pdata|, PDATA
|$T34591| DCD	|$LN5@GetCurrent@2|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentProcessId| PROC

; 373  : _inline DWORD GetCurrentProcessId(void) {

  00000		 |$LN5@GetCurrent@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34588|

; 374  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURPROC * sizeof(HANDLE)));

  00004	e3a0000c	 mov         r0, #0xC
  00008	eb000000	 bl          __GetUserKData

; 375  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M34589|

			 ENDP  ; |GetCurrentProcessId|

	EXPORT	|??8@YAHABU_GUID@@0@Z|			; operator==
	IMPORT	|memcmp|
; File c:\wince600\public\common\sdk\inc\objbase.h

  00000			 AREA	 |.pdata|, PDATA
|$T34605| DCD	|$LN7@operator|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??8@YAHABU_GUID@@0@Z| PROC		; operator==

; 516  : {

  00000		 |$LN7@operator|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34602|

; 517  : #ifdef _WIN32
; 518  :     return !memcmp(&guidOne,&guidOther,sizeof(GUID));

  00004	e3a02010	 mov         r2, #0x10
  00008	eb000000	 bl          memcmp
  0000c	e3500000	 cmp         r0, #0
  00010	03a00001	 moveq       r0, #1

; 519  : #else
; 520  :     return !_fmemcmp(&guidOne,&guidOther,sizeof(GUID)); }
; 521  : #endif
; 522  : }

  00014	049de004	 ldreq       lr, [sp], #4

; 517  : #ifdef _WIN32
; 518  :     return !memcmp(&guidOne,&guidOther,sizeof(GUID));

  00018	13a00000	 movne       r0, #0

; 519  : #else
; 520  :     return !_fmemcmp(&guidOne,&guidOther,sizeof(GUID)); }
; 521  : #endif
; 522  : }

  0001c	149de004	 ldrne       lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M34603|

			 ENDP  ; |??8@YAHABU_GUID@@0@Z|, operator==

	EXPORT	|__$ArrayPad$| [ DATA ]
	IMPORT	|CeLogData|
	IMPORT	|StringCchLengthW|
	IMPORT	|StringCchVPrintfW|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|__security_check_cookie|
; File c:\wince600\public\common\sdk\inc\celog.h

  00000			 AREA	 |.pdata|, PDATA
|$T34619| DCD	|$LN7@CeLogMsg|
	DCD	0xc0002a04

  00000			 AREA	 |.xdata|, DATA
|$T34615| DCD	0xffffffe0
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T34615|

  00008		 |CeLogMsg| PROC

; 1020 : {

  00008		 |$LN7@CeLogMsg|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d000f	 stmdb       sp!, {r0 - r3}
  00010	e92d5010	 stmdb       sp!, {r4, r12, lr}
  00014	e24dde22	 sub         sp, sp, #0x22, 28
  00018		 |$M34616|
  00018	e58d022c	 str         r0, [sp, #0x22C]
  0001c	e59f3088	 ldr         r3, [pc, #0x88]
  00020	e5933000	 ldr         r3, [r3]
  00024	e58d321c	 str         r3, [sp, #0x21C]

; 1021 :     va_list arglist;
; 1022 :     WCHAR   szTemp[MAX_PATH];
; 1023 :     size_t  cchLen;
; 1024 :     HRESULT hr;
; 1025 : 
; 1026 :     // Compose a single string using the input args
; 1027 :     va_start(arglist, szFormat);
; 1028 :     hr = StringCchVPrintfW(szTemp, MAX_PATH, szFormat, arglist);

  00028	e1a02000	 mov         r2, r0
  0002c	e28d0014	 add         r0, sp, #0x14
  00030	e28d3e23	 add         r3, sp, #0x23, 28
  00034	e3a01f41	 mov         r1, #0x41, 30
  00038	eb000000	 bl          StringCchVPrintfW
  0003c	e3500000	 cmp         r0, #0

; 1029 :     if (SUCCEEDED(hr)) {

  00040	4a000014	 bmi         |$LN1@CeLogMsg|

; 1030 :         hr = StringCchLengthW(szTemp, MAX_PATH, &cchLen);

  00044	e28d2010	 add         r2, sp, #0x10
  00048	e3a01f41	 mov         r1, #0x41, 30
  0004c	e28d0014	 add         r0, sp, #0x14
  00050	eb000000	 bl          StringCchLengthW
  00054	e3500000	 cmp         r0, #0

; 1031 :         if (SUCCEEDED(hr)) {

  00058	4a00000e	 bmi         |$LN1@CeLogMsg|

; 1032 :             CeLogData(TRUE, CELID_RAW_WCHAR, szTemp, (WORD)((cchLen + 1) * sizeof(WCHAR)),
; 1033 :                       0, CELZONE_ALWAYSON, 0, FALSE);

  0005c	e59d3010	 ldr         r3, [sp, #0x10]
  00060	e3a04101	 mov         r4, #1, 2
  00064	e3a0e000	 mov         lr, #0
  00068	e2833001	 add         r3, r3, #1
  0006c	e1a03083	 mov         r3, r3, lsl #1
  00070	e1a03803	 mov         r3, r3, lsl #16
  00074	e1a03823	 mov         r3, r3, lsr #16
  00078	e28d2014	 add         r2, sp, #0x14
  0007c	e3a0104a	 mov         r1, #0x4A
  00080	e3a00001	 mov         r0, #1
  00084	e58de00c	 str         lr, [sp, #0xC]
  00088	e58de008	 str         lr, [sp, #8]
  0008c	e58d4004	 str         r4, [sp, #4]
  00090	e58de000	 str         lr, [sp]
  00094	eb000000	 bl          CeLogData
  00098		 |$LN1@CeLogMsg|
  00098	e59d021c	 ldr         r0, [sp, #0x21C]
  0009c	eb000000	 bl          __security_check_cookie

; 1034 :         }
; 1035 :     }
; 1036 : }

  000a0	e28dde22	 add         sp, sp, #0x22, 28
  000a4	e89d6010	 ldmia       sp, {r4, sp, lr}
  000a8	e12fff1e	 bx          lr
  000ac		 |$LN8@CeLogMsg|
  000ac		 |$LN9@CeLogMsg|
  000ac	00000000	 DCD         |__security_cookie|
  000b0		 |$M34617|

			 ENDP  ; |CeLogMsg|

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|?DeviceListsInit@@YAHXZ|		; DeviceListsInit
	EXPORT	|??_C@_1EO@FIGOIHNC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAd?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@PHCGCLLJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@FNHBJNHN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@IPLGNFH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@HMMKDNKJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAG?$AAU?$AAI?$AAD?$AA?5?$AAf?$AAo?$AAu?$AAn?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@OJCNELMO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAt?$AAo?$AA?5?$AAG?$AAU?$AAI?$AAD?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@CAGDLEBG@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAs?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@DAMLNPFA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@OBHJEKIL@?$AA?$CF?$AAs?$AA?2?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AAs?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|RegCloseKey|
	IMPORT	|DeviceListDestroy|
	IMPORT	|PlatformDeviceListInit|
	IMPORT	|DeviceListCreate|
	IMPORT	|ConvertStringToGuid|
	IMPORT	|RegEnumValueW|
	IMPORT	|RegOpenKeyExW|
	IMPORT	|StringCchPrintfW|
; File c:\wince600\public\common\sdk\inc\objbase.h

  00000			 AREA	 |.pdata|, PDATA
|$T34672| DCD	|$LN58@DeviceList|
	DCD	0xc000a702

  00000			 AREA	 |.xdata|, DATA
|$T34668| DCD	0xffffffd8

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@FIGOIHNC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAd?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "d", 0x0, "u", 0x0, "r"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "l", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z"
	DCB	0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@PHCGCLLJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "P", 0x0, "l", 0x0, "a"
	DCB	0x0, "t", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, "m", 0x0, "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "L"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "f"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "f"
	DCB	0x0, "a", 0x0, "u", 0x0, "l", 0x0, "t", 0x0, " ", 0x0, "c"
	DCB	0x0, "l", 0x0, "a", 0x0, "s", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@FNHBJNHN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "P", 0x0, "l", 0x0, "a"
	DCB	0x0, "t", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, "m", 0x0, "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "L"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@IPLGNFH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, "L", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "C", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@HMMKDNKJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAG?$AAU?$AAI?$AAD?$AA?5?$AAf?$AAo?$AAu?$AAn?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "f"
	DCB	0x0, "a", 0x0, "u", 0x0, "l", 0x0, "t", 0x0, " ", 0x0, "G"
	DCB	0x0, "U", 0x0, "I", 0x0, "D", 0x0, " ", 0x0, "f", 0x0, "o"
	DCB	0x0, "u", 0x0, "n", 0x0, "d", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "a", 0x0, "s"
	DCB	0x0, " ", 0x0, "e", 0x0, "x", 0x0, "p", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@OJCNELMO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAt?$AAo?$AA?5?$AAG?$AAU?$AAI?$AAD?$AA?$AN?$AA?6@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "n"
	DCB	0x0, "'", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "v", 0x0, "e", 0x0, "r", 0x0, "t", 0x0, " ", 0x0, "'"
	DCB	0x0, "%", 0x0, "s", 0x0, "'", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "G", 0x0, "U", 0x0, "I", 0x0, "D", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@CAGDLEBG@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAs?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "L"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "s", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@DAMLNPFA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "y", 0x0, "p", 0x0, "e", 0x0, " ", 0x0, "f", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "u"
	DCB	0x0, "e", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| DCB "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "\\"
	DCB	0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "\\"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "\\", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@OBHJEKIL@?$AA?$CF?$AAs?$AA?2?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AAs?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, "\\", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "f", 0x0, "a", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\evm_omap3530\src\drivers\pm\dll\pminit.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T34668|

  00008		 |?DeviceListsInit@@YAHXZ| PROC		; DeviceListsInit

; 112  : {

  00008		 |$LN58@DeviceList|
  00008	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  0000c	e24ddf8e	 sub         sp, sp, #0x8E, 30
  00010		 |$M34669|
  00010	e59f3288	 ldr         r3, [pc, #0x288]
  00014	e5933000	 ldr         r3, [r3]
  00018	e58d3234	 str         r3, [sp, #0x234]

; 113  :     BOOL fOk = TRUE;
; 114  :     PDEVICE_LIST pdl;
; 115  :     DWORD dwStatus;
; 116  :     HKEY hk;
; 117  :     TCHAR szBuf[MAX_PATH];
; 118  : 
; 119  : #ifndef SHIP_BUILD
; 120  :     SETFNAME(_T("DeviceListsInit"));
; 121  : #endif
; 122  : 
; 123  :     // enumerate all the device classes
; 124  :     StringCchPrintf(szBuf,_countof(szBuf), _T("%s\\Interfaces"), PWRMGR_REG_KEY);

  0001c	e59f3278	 ldr         r3, [pc, #0x278]
  00020	e59f2270	 ldr         r2, [pc, #0x270]
  00024	e3a01f41	 mov         r1, #0x41, 30
  00028	e28d002c	 add         r0, sp, #0x2C
  0002c	e3a06001	 mov         r6, #1
  00030	eb000000	 bl          StringCchPrintfW

; 125  :     dwStatus = RegOpenKeyEx(HKEY_LOCAL_MACHINE, szBuf, 0, 0, &hk);

  00034	e28d3010	 add         r3, sp, #0x10
  00038	e58d3000	 str         r3, [sp]
  0003c	e3a03000	 mov         r3, #0
  00040	e3a02000	 mov         r2, #0
  00044	e28d102c	 add         r1, sp, #0x2C
  00048	e3a0010a	 mov         r0, #0xA, 2
  0004c	eb000000	 bl          RegOpenKeyExW
  00050	e59f523c	 ldr         r5, [pc, #0x23C]
  00054	e59f7234	 ldr         r7, [pc, #0x234]
  00058	e3500000	 cmp         r0, #0
  0005c	e3a0a000	 mov         r10, #0

; 126  :     if(dwStatus == ERROR_SUCCESS) {

  00060	1a000055	 bne         |$LN49@DeviceList|

; 127  :         DWORD dwIndex = 0;

  00064	e3a08000	 mov         r8, #0
  00068	e3a0bf41	 mov         r11, #0x41, 30
  0006c	e28d9014	 add         r9, sp, #0x14
  00070		 |$LL22@DeviceList|

; 128  :         do {
; 129  :             DWORD cbValueName = dim(szBuf), dwType;
; 130  :             GUID idInterface;
; 131  : 
; 132  :             dwStatus = RegEnumValue(hk, dwIndex, szBuf, &cbValueName, NULL,
; 133  :                 &dwType, NULL, NULL);

  00070	e59d0010	 ldr         r0, [sp, #0x10]
  00074	e28d3018	 add         r3, sp, #0x18
  00078	e28d202c	 add         r2, sp, #0x2C
  0007c	e1a01008	 mov         r1, r8
  00080	e58db018	 str         r11, [sp, #0x18]
  00084	e58da00c	 str         r10, [sp, #0xC]
  00088	e58da008	 str         r10, [sp, #8]
  0008c	e58d9004	 str         r9, [sp, #4]
  00090	e58da000	 str         r10, [sp]
  00094	eb000000	 bl          RegEnumValueW
  00098	e3500000	 cmp         r0, #0

; 134  :             if(dwStatus == ERROR_SUCCESS) {

  0009c	1a00003e	 bne         |$LN48@DeviceList|

; 135  :                 if(dwType != REG_SZ) {

  000a0	e59d3014	 ldr         r3, [sp, #0x14]
  000a4	e3530001	 cmp         r3, #1
  000a8	0a000004	 beq         |$LN18@DeviceList|

; 136  :                     PMLOGMSG(ZONE_WARN, (_T("%s: invalid type for value '%s'\r\n"),
; 137  :                         pszFname, szBuf));

  000ac	e5973460	 ldr         r3, [r7, #0x460]
  000b0	e3130002	 tst         r3, #2
  000b4	0a000036	 beq         |$LN9@DeviceList|
  000b8	e59f01cc	 ldr         r0, [pc, #0x1CC]

; 138  :                 } else if(!ConvertStringToGuid(szBuf, &idInterface)) {

  000bc	ea000008	 b           |$LN54@DeviceList|
  000c0		 |$LN18@DeviceList|
  000c0	e28d101c	 add         r1, sp, #0x1C
  000c4	e28d002c	 add         r0, sp, #0x2C
  000c8	eb000000	 bl          ConvertStringToGuid
  000cc	e3500000	 cmp         r0, #0
  000d0	1a000008	 bne         |$LN16@DeviceList|

; 139  :                     PMLOGMSG(ZONE_WARN, (_T("%s: can't convert '%s' to GUID\r\n"),
; 140  :                         pszFname, szBuf));

  000d4	e5973460	 ldr         r3, [r7, #0x460]
  000d8	e3130002	 tst         r3, #2
  000dc	0a00002c	 beq         |$LN9@DeviceList|
  000e0	e59f01a0	 ldr         r0, [pc, #0x1A0]
  000e4		 |$LN54@DeviceList|
  000e4	e59f1184	 ldr         r1, [pc, #0x184]
  000e8	e28d202c	 add         r2, sp, #0x2C
  000ec	eb000000	 bl          CeLogMsg

; 155  :                 }
; 156  : 
; 157  :                 // update the index
; 158  :                 dwIndex++;

  000f0	e2888001	 add         r8, r8, #1

; 159  :             }
; 160  :         } while(dwStatus == ERROR_SUCCESS);

  000f4	eaffffdd	 b           |$LL22@DeviceList|
  000f8		 |$LN16@DeviceList|

; 141  :                 } else if(idInterface == idGenericPMDeviceClass) {

  000f8	e3a02010	 mov         r2, #0x10
  000fc	e1a01007	 mov         r1, r7
  00100	e28d001c	 add         r0, sp, #0x1C
  00104	eb000000	 bl          memcmp
  00108	e3500000	 cmp         r0, #0
  0010c	1a000004	 bne         |$LN14@DeviceList|

; 142  :                     PMLOGMSG(ZONE_INIT, (_T("%s: default GUID found in registry as expected\r\n"), 
; 143  :                         pszFname));

  00110	e5973460	 ldr         r3, [r7, #0x460]
  00114	e3130004	 tst         r3, #4
  00118	0a00001d	 beq         |$LN9@DeviceList|
  0011c	e59f0160	 ldr         r0, [pc, #0x160]

; 144  :                 } else if((pdl = DeviceListCreate(&idInterface)) == NULL) {

  00120	ea000007	 b           |$LN55@DeviceList|
  00124		 |$LN14@DeviceList|
  00124	e28d001c	 add         r0, sp, #0x1C
  00128	eb000000	 bl          DeviceListCreate
  0012c	e1b04000	 movs        r4, r0
  00130	1a000007	 bne         |$LN12@DeviceList|

; 145  :                     PMLOGMSG(ZONE_WARN, (_T("%s: DeviceListCreate() failed\r\n"), 
; 146  :                         pszFname));

  00134	e5973460	 ldr         r3, [r7, #0x460]
  00138	e3130002	 tst         r3, #2
  0013c	0a000014	 beq         |$LN9@DeviceList|
  00140	e59f0138	 ldr         r0, [pc, #0x138]
  00144		 |$LN55@DeviceList|
  00144	e59f1124	 ldr         r1, [pc, #0x124]
  00148	eb000000	 bl          CeLogMsg

; 155  :                 }
; 156  : 
; 157  :                 // update the index
; 158  :                 dwIndex++;

  0014c	e2888001	 add         r8, r8, #1

; 159  :             }
; 160  :         } while(dwStatus == ERROR_SUCCESS);

  00150	eaffffc6	 b           |$LL22@DeviceList|
  00154		 |$LN12@DeviceList|

; 147  :                 } else if(PlatformDeviceListInit(pdl) == FALSE) {

  00154	e1a00004	 mov         r0, r4
  00158	eb000000	 bl          PlatformDeviceListInit
  0015c	e3500000	 cmp         r0, #0
  00160	1a000008	 bne         |$LN10@DeviceList|

; 148  :                     PMLOGMSG(ZONE_WARN, (_T("%s: PlatformDeviceListInit() failed\r\n"), 
; 149  :                         pszFname));

  00164	e5973460	 ldr         r3, [r7, #0x460]
  00168	e3130002	 tst         r3, #2
  0016c	159f10fc	 ldrne       r1, [pc, #0xFC]
  00170	159f0104	 ldrne       r0, [pc, #0x104]
  00174	1b000000	 blne        CeLogMsg

; 150  :                     DeviceListDestroy(pdl);

  00178	e1a00004	 mov         r0, r4
  0017c	eb000000	 bl          DeviceListDestroy

; 155  :                 }
; 156  : 
; 157  :                 // update the index
; 158  :                 dwIndex++;

  00180	e2888001	 add         r8, r8, #1

; 159  :             }
; 160  :         } while(dwStatus == ERROR_SUCCESS);

  00184	eaffffb9	 b           |$LL22@DeviceList|
  00188		 |$LN10@DeviceList|

; 151  :                 } else {
; 152  :                     // add the new entry to the list
; 153  :                     pdl->pNext = gpDeviceLists;

  00188	e5953000	 ldr         r3, [r5]
  0018c	e5843014	 str         r3, [r4, #0x14]

; 154  :                     gpDeviceLists = pdl;

  00190	e5854000	 str         r4, [r5]
  00194		 |$LN9@DeviceList|

; 155  :                 }
; 156  : 
; 157  :                 // update the index
; 158  :                 dwIndex++;

  00194	e2888001	 add         r8, r8, #1

; 159  :             }
; 160  :         } while(dwStatus == ERROR_SUCCESS);

  00198	eaffffb4	 b           |$LL22@DeviceList|
  0019c		 |$LN48@DeviceList|
  0019c	e3a03c01	 mov         r3, #1, 24

; 161  : 
; 162  :         // check for abnormal termination of the loop
; 163  :         if(dwStatus != ERROR_NO_MORE_ITEMS) {

  001a0	e3833003	 orr         r3, r3, #3
  001a4	e1500003	 cmp         r0, r3

; 164  :             fOk = FALSE;
; 165  :         }
; 166  : 
; 167  :         // close the registry handle
; 168  :         RegCloseKey(hk);

  001a8	e59d0010	 ldr         r0, [sp, #0x10]
  001ac	13a06000	 movne       r6, #0
  001b0	eb000000	 bl          RegCloseKey

; 169  :     }
; 170  : 
; 171  :     // add the default list last
; 172  :     if(fOk) {

  001b4	e3560000	 cmp         r6, #0
  001b8	0a000012	 beq         |$LN47@DeviceList|
  001bc		 |$LN49@DeviceList|

; 173  :         fOk = FALSE;
; 174  :         pdl = DeviceListCreate(&idGenericPMDeviceClass);

  001bc	e1a00007	 mov         r0, r7
  001c0	e3a06000	 mov         r6, #0
  001c4	eb000000	 bl          DeviceListCreate
  001c8	e1b04000	 movs        r4, r0

; 175  :         if(pdl != NULL) {

  001cc	0a00000d	 beq         |$LN47@DeviceList|

; 176  :             if(PlatformDeviceListInit(pdl) == FALSE) {

  001d0	e1a00004	 mov         r0, r4
  001d4	eb000000	 bl          PlatformDeviceListInit
  001d8	e3500000	 cmp         r0, #0
  001dc	1a000010	 bne         |$LN5@DeviceList|

; 177  :                 PMLOGMSG(ZONE_INIT || ZONE_WARN, 
; 178  :                     (_T("%s: PlatformDeviceListInit() failed for default class\r\n"),
; 179  :                     pszFname));

  001e0	e5973460	 ldr         r3, [r7, #0x460]
  001e4	e3130004	 tst         r3, #4
  001e8	1a000001	 bne         |$LN36@DeviceList|
  001ec	e3130002	 tst         r3, #2
  001f0	0a000002	 beq         |$LN37@DeviceList|
  001f4		 |$LN36@DeviceList|
  001f4	e59f007c	 ldr         r0, [pc, #0x7C]
  001f8	e59f1070	 ldr         r1, [pc, #0x70]
  001fc	eb000000	 bl          CeLogMsg
  00200		 |$LN37@DeviceList|

; 180  :                 DeviceListDestroy(pdl);

  00200	e1a00004	 mov         r0, r4
  00204	eb000000	 bl          DeviceListDestroy
  00208		 |$LN47@DeviceList|

; 191  :         PMLOGMSG(ZONE_WARN, (_T("%s: error during list initialization\r\n"), 
; 192  :             pszFname));

  00208	e5973460	 ldr         r3, [r7, #0x460]
  0020c	e3130002	 tst         r3, #2
  00210	0a00000d	 beq         |$LN38@DeviceList|
  00214	e59f0058	 ldr         r0, [pc, #0x58]
  00218	e59f1050	 ldr         r1, [pc, #0x50]
  0021c	eb000000	 bl          CeLogMsg

; 193  :         while(gpDeviceLists != NULL) {

  00220	ea000009	 b           |$LN38@DeviceList|
  00224		 |$LN5@DeviceList|

; 181  :             } else {
; 182  :                 pdl->pNext = gpDeviceLists;

  00224	e5953000	 ldr         r3, [r5]

; 183  :                 gpDeviceLists = pdl;
; 184  :                 fOk = TRUE;

  00228	e3a06001	 mov         r6, #1
  0022c	e5843014	 str         r3, [r4, #0x14]
  00230	e5854000	 str         r4, [r5]

; 185  :             }
; 186  :         }
; 187  :     }
; 188  : 
; 189  :     // clean up if necessary
; 190  :     if(!fOk) {

  00234	ea000007	 b           |$LN1@DeviceList|
  00238		 |$LL2@DeviceList|

; 194  :             pdl = gpDeviceLists;
; 195  :             gpDeviceLists = pdl->pNext;

  00238	e5923014	 ldr         r3, [r2, #0x14]

; 196  :             pdl->pNext = NULL;
; 197  :             DeviceListDestroy(pdl);

  0023c	e1a00002	 mov         r0, r2
  00240	e5853000	 str         r3, [r5]
  00244	e582a014	 str         r10, [r2, #0x14]
  00248	eb000000	 bl          DeviceListDestroy
  0024c		 |$LN38@DeviceList|
  0024c	e5952000	 ldr         r2, [r5]
  00250	e3520000	 cmp         r2, #0
  00254	1afffff7	 bne         |$LL2@DeviceList|
  00258		 |$LN1@DeviceList|

; 198  :         }
; 199  :     }
; 200  : 
; 201  :     return fOk;

  00258	e59d0234	 ldr         r0, [sp, #0x234]
  0025c	eb000000	 bl          __security_check_cookie

; 202  : }

  00260	e1a00006	 mov         r0, r6
  00264	e28ddf8e	 add         sp, sp, #0x8E, 30
  00268	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  0026c	e12fff1e	 bx          lr
  00270		 |$LN59@DeviceList|
  00270		 |$LN60@DeviceList|
  00270	00000000	 DCD         |??_C@_1CA@CAGDLEBG@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAs?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  00274		 |$LN61@DeviceList|
  00274	00000000	 DCD         |??_C@_1EO@FIGOIHNC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAd?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa@|
  00278		 |$LN62@DeviceList|
  00278	00000000	 DCD         |??_C@_1HA@PHCGCLLJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi@|
  0027c		 |$LN63@DeviceList|
  0027c	00000000	 DCD         |??_C@_1EM@FNHBJNHN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi@|
  00280		 |$LN64@DeviceList|
  00280	00000000	 DCD         |??_C@_1EA@IPLGNFH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00284		 |$LN65@DeviceList|
  00284	00000000	 DCD         |??_C@_1GC@HMMKDNKJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAG?$AAU?$AAI?$AAD?$AA?5?$AAf?$AAo?$AAu?$AAn?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt@|
  00288		 |$LN66@DeviceList|
  00288	00000000	 DCD         |??_C@_1EC@OJCNELMO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAt?$AAo?$AA?5?$AAG?$AAU?$AAI?$AAD?$AA?$AN?$AA?6@|
  0028c		 |$LN67@DeviceList|
  0028c	00000000	 DCD         |??_C@_1EE@DAMLNPFA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN@|
  00290		 |$LN68@DeviceList|
  00290	00000000	 DCD         |idGenericPMDeviceClass|
  00294		 |$LN69@DeviceList|
  00294	00000000	 DCD         |gpDeviceLists|
  00298		 |$LN70@DeviceList|
  00298	00000000	 DCD         |??_C@_1BM@OBHJEKIL@?$AA?$CF?$AAs?$AA?2?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AAs?$AA?$AA@|
  0029c		 |$LN71@DeviceList|
  0029c	00000000	 DCD         |??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  002a0		 |$LN72@DeviceList|
  002a0	00000000	 DCD         |__security_cookie|
  002a4		 |$M34670|

			 ENDP  ; |?DeviceListsInit@@YAHXZ|, DeviceListsInit

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|PmInit|
	EXPORT	|??_C@_1CI@JMHLNJN@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@JOGFCBGM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAl?$AAo?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAa?$AAn?$AAd?$AAl?$AAe?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@OCCOMIBI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAa?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@CIFABHGF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@OMMAAAMF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@JOHFJEDC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAP?$AAn?$AAP?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@LNDLJJOC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@MHHINMNC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@JNPAFHHM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAk?$AAe?$AAy?$AA?5?$AA?$FL?$AAH?$AAK?$AAE?$AAY?$AA_?$AAL?$AAO?$AAC?$AAA?$AAL?$AA_?$AAM@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@KJJDOFJE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@FMDJOFIA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@LDBCAAAG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAi?$AAn?$AA?5?$AAk?$AAe?$AAy?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@PBEIGBDA@?$AAP?$AAM?$AAE?$AAx?$AAt?$AA_?$AAD?$AAe?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@PCHMNDCC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAG?$AAe?$AAt?$AAP?$AAr?$AAo?$AAc?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@JEIALCGK@?$AAP?$AAM?$AAE?$AAx?$AAt?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@MFMHNBPH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAP?$AAM?$AAE?$AAx?$AAt?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AA?9?$AA?9?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@OAJFFPML@?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_17DJMMGLBL@?$AAD?$AAl?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@IDDIFJJB@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@PHFPGFKF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAM?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@OEHMKAOO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@GDOFDLJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@HMANBMPF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@OOKIINAM@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AAR?$AAe?$AAa?$AAd?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@KDNBKLHB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAP?$AAM?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?$CI?$AA?$CJ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@CIIPHLJM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAs?$AAh?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@NDNKNHPJ@?$AAP?$AAm?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@LFABOLDL@?$AA?$CL?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|CloseHandle|
	IMPORT	|WaitForSingleObject|
	IMPORT	|PmSetSystemPowerState|
	IMPORT	|SystemThreadProc|
	IMPORT	|GetProcAddressW|
	IMPORT	|LoadDriver|
	IMPORT	|LoadLibraryW|
	IMPORT	|RegQueryValueExW|
	IMPORT	|GetLastError|
	IMPORT	|ActivityTimersThreadProc|
	IMPORT	|ResumeThreadProc|
	IMPORT	|CreateThread|
	IMPORT	|PnpThreadProc|
	IMPORT	|WaitForMultipleObjects|
	IMPORT	|PlatformValidatePMRegistry|
	IMPORT	|CreateEventW|
	IMPORT	|GetProcessHeap|
	IMPORT	|InitializeCriticalSection|
	IMPORT	|__GSHandlerCheck_SEH|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T34794| DCD	|$LN135@PmInit|
	DCD	0xc0024304

  00000			 AREA	 |.pdata|, PDATA
|$T34796| DCD	|$LN98@PmInit|
	DCD	0x40002802

  00000			 AREA	 |.xdata|, DATA
|$T34792| DCD	0x1
	DCD	|$LN102@PmInit|
	DCD	|$LN103@PmInit|
	DCD	|$LN98@PmInit|
	DCD	|$LN99@PmInit|
	DCD	0xffffffd4

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@JMHLNJN@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@JOGFCBGM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAl?$AAo?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAa?$AAn?$AAd?$AAl?$AAe?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "l", 0x0, "o"
	DCB	0x0, "s", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@OCCOMIBI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAa?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "h", 0x0, "u"
	DCB	0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n", 0x0, " ", 0x0, "a"
	DCB	0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v", 0x0, "i", 0x0, "t"
	DCB	0x0, "y", 0x0, " ", 0x0, "t", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "r", 0x0, "s", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@CIFABHGF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "h", 0x0, "u"
	DCB	0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n", 0x0, " ", 0x0, "s"
	DCB	0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, " "
	DCB	0x0, "t", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@OMMAAAMF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "h", 0x0, "u"
	DCB	0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "u", 0x0, "m", 0x0, "e", 0x0, " "
	DCB	0x0, "t", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@JOHFJEDC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAP?$AAn?$AAP?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "h", 0x0, "u"
	DCB	0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n", 0x0, " ", 0x0, "P"
	DCB	0x0, "n", 0x0, "P", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@LNDLJJOC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "y", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "m", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l"
	DCB	0x0, "i", 0x0, "z", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "u", 0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@MHHINMNC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "y", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "m", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "c"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "u", 0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@JNPAFHHM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAk?$AAe?$AAy?$AA?5?$AA?$FL?$AAH?$AAK?$AAE?$AAY?$AA_?$AAL?$AAO?$AAC?$AAA?$AAL?$AA_?$AAM@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "n"
	DCB	0x0, "'", 0x0, "t", 0x0, " ", 0x0, "o", 0x0, "p", 0x0, "e"
	DCB	0x0, "n", 0x0, " ", 0x0, "k", 0x0, "e", 0x0, "y", 0x0, " "
	DCB	0x0, "[", 0x0, "H", 0x0, "K", 0x0, "E", 0x0, "Y", 0x0, "_"
	DCB	0x0, "L", 0x0, "O", 0x0, "C", 0x0, "A", 0x0, "L", 0x0, "_"
	DCB	0x0, "M", 0x0, "A", 0x0, "C", 0x0, "H", 0x0, "I", 0x0, "N"
	DCB	0x0, "E", 0x0, "\\", 0x0, "%", 0x0, "s", 0x0, "]", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@KJJDOFJE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, """", 0x0, "%", 0x0, "s"
	DCB	0x0, """", 0x0, " ", 0x0, "s", 0x0, "u", 0x0, "c", 0x0, "c"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@FMDJOFIA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, """", 0x0, "%", 0x0, "s"
	DCB	0x0, """", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@LDBCAAAG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAi?$AAn?$AA?5?$AAk?$AAe?$AAy?$AA?5@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "n"
	DCB	0x0, "'", 0x0, "t", 0x0, " ", 0x0, "g", 0x0, "e", 0x0, "t"
	DCB	0x0, " ", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "u", 0x0, "e"
	DCB	0x0, " ", 0x0, """", 0x0, "%", 0x0, "s", 0x0, """", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, " ", 0x0, "k", 0x0, "e", 0x0, "y"
	DCB	0x0, " ", 0x0, """", 0x0, "%", 0x0, "s", 0x0, """", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@PBEIGBDA@?$AAP?$AAM?$AAE?$AAx?$AAt?$AA_?$AAD?$AAe?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| DCB "P"
	DCB	0x0, "M", 0x0, "E", 0x0, "x", 0x0, "t", 0x0, "_", 0x0, "D"
	DCB	0x0, "e", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@PCHMNDCC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAG?$AAe?$AAt?$AAP?$AAr?$AAo?$AAc?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, """", 0x0, "%", 0x0, "s"
	DCB	0x0, """", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "n", 0x0, "'"
	DCB	0x0, "t", 0x0, " ", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "P"
	DCB	0x0, "r", 0x0, "o", 0x0, "c", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@JEIALCGK@?$AAP?$AAM?$AAE?$AAx?$AAt?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| DCB "P"
	DCB	0x0, "M", 0x0, "E", 0x0, "x", 0x0, "t", 0x0, "_", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@MFMHNBPH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAP?$AAM?$AAE?$AAx?$AAt?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AA?9?$AA?9?$AA?5@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "u"
	DCB	0x0, "l", 0x0, "d", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " "
	DCB	0x0, "l", 0x0, "o", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "P"
	DCB	0x0, "M", 0x0, "E", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, """"
	DCB	0x0, "%", 0x0, "s", 0x0, """", 0x0, " ", 0x0, "-", 0x0, "-"
	DCB	0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@OAJFFPML@?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?$AA@| DCB "F", 0x0, "l", 0x0
	DCB	"a", 0x0, "g", 0x0, "s", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17DJMMGLBL@?$AAD?$AAl?$AAl?$AA?$AA@| DCB "D", 0x0, "l", 0x0, "l", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@IDDIFJJB@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| DCB "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "\\"
	DCB	0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "\\"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "\\", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, "\\", 0x0, "E", 0x0, "x", 0x0, "t", 0x0, "e"
	DCB	0x0, "n", 0x0, "s", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "\\"
	DCB	0x0, "O", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@PHFPGFKF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAM?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "W", 0x0, "a", 0x0, "i"
	DCB	0x0, "t", 0x0, "F", 0x0, "o", 0x0, "r", 0x0, "M", 0x0, "u"
	DCB	0x0, "l", 0x0, "t", 0x0, "i", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "O", 0x0, "b", 0x0, "j", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, "s", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "d", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, " ", 0x0, "i"
	DCB	0x0, "s", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@OEHMKAOO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "u"
	DCB	0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@GDOFDLJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "c", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "u"
	DCB	0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@HMANBMPF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "v", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "u", 0x0, "r"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@OOKIINAM@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AAR?$AAe?$AAa?$AAd?$AAy?$AA?$AA@| DCB "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "/"
	DCB	0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "M"
	DCB	0x0, "a", 0x0, "n", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "r"
	DCB	0x0, "R", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "y", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@KDNBKLHB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAP?$AAM?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?$CI?$AA?$CJ@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "P", 0x0, "l", 0x0, "a"
	DCB	0x0, "t", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, "m", 0x0, "V"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "P", 0x0, "M", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "r", 0x0, "y", 0x0, "("
	DCB	0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@CIIPHLJM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAs?$AAh?$AAu@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "E", 0x0, "v", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "s", 0x0, "h"
	DCB	0x0, "u", 0x0, "t", 0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n"
	DCB	0x0, " ", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@NDNKNHPJ@?$AAP?$AAm?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| DCB "P", 0x0, "m"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@LFABOLDL@?$AA?$CL?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "+", 0x0
	DCB	"%", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\evm_omap3530\src\drivers\pm\dll\pminit.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck_SEH|
  00004	00000000	 DCD         |$T34792|

  00008		 |PmInit| PROC

; 209  : {

  00008		 |$LN135@PmInit|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d5ff0	 stmdb       sp!, {r4 - r12, lr}
  00010	e28db028	 add         r11, sp, #0x28
  00014	e24dd0d8	 sub         sp, sp, #0xD8
  00018		 |$LN133@PmInit|
  00018	e59f3990	 ldr         r3, [pc, #0x990]
  0001c	e5933000	 ldr         r3, [r3]
  00020	e50b302c	 str         r3, [r11, #-0x2C]

; 210  :     BOOL fOk = TRUE;
; 211  :     HANDLE hevPnPReady = NULL, hevResumeReady = NULL, hevSystemReady = NULL;
; 212  :     HANDLE hevActivityTimersReady = NULL, hevDummy = NULL;
; 213  : 
; 214  : #ifndef SHIP_BUILD
; 215  :     SETFNAME(_T("PmInit"));
; 216  : #endif
; 217  : 
; 218  :     PMLOGMSG(ZONE_INIT || ZONE_API, (_T("+%s\r\n"), pszFname));

  00024	e59f7938	 ldr         r7, [pc, #0x938]
  00028	e3a06001	 mov         r6, #1
  0002c	e3a02000	 mov         r2, #0
  00030	e50b20f0	 str         r2, [r11, #-0xF0]
  00034	e5973440	 ldr         r3, [r7, #0x440]
  00038	e3a04000	 mov         r4, #0
  0003c	e50b40f4	 str         r4, [r11, #-0xF4]
  00040	e3a09000	 mov         r9, #0
  00044	e50b90ec	 str         r9, [r11, #-0xEC]
  00048	e3a0a000	 mov         r10, #0
  0004c	e3a08000	 mov         r8, #0
  00050	e50b80e8	 str         r8, [r11, #-0xE8]
  00054	e3130004	 tst         r3, #4
  00058	e50b60f8	 str         r6, [r11, #-0xF8]
  0005c	e50b20d0	 str         r2, [r11, #-0xD0]
  00060	e50b40c8	 str         r4, [r11, #-0xC8]
  00064	e50b90cc	 str         r9, [r11, #-0xCC]
  00068	e50ba0d4	 str         r10, [r11, #-0xD4]
  0006c	e50b80e0	 str         r8, [r11, #-0xE0]
  00070	1a000001	 bne         |$LN52@PmInit|
  00074	e3130b02	 tst         r3, #2, 22
  00078	0a000002	 beq         |$LN53@PmInit|
  0007c		 |$LN52@PmInit|
  0007c	e59f0928	 ldr         r0, [pc, #0x928]
  00080	e59f18a0	 ldr         r1, [pc, #0x8A0]
  00084	eb000000	 bl          CeLogMsg
  00088		 |$LN53@PmInit|

; 219  : 
; 220  :     // set up globals
; 221  :     InitializeCriticalSection(&gcsPowerManager);

  00088	e59f58d8	 ldr         r5, [pc, #0x8D8]
  0008c	e2850034	 add         r0, r5, #0x34
  00090	eb000000	 bl          InitializeCriticalSection

; 222  :     InitializeCriticalSection(&gcsDeviceUpdateAPIs);

  00094	e2850054	 add         r0, r5, #0x54
  00098	eb000000	 bl          InitializeCriticalSection

; 223  :     gpFloorDx = NULL;

  0009c	e3a03000	 mov         r3, #0

; 224  :     gpCeilingDx = NULL;

  000a0	e3a02000	 mov         r2, #0

; 225  :     gpPowerNotifications = NULL;

  000a4	e3a01000	 mov         r1, #0

; 226  :     gpSystemPowerState = NULL;

  000a8	e3a00000	 mov         r0, #0
  000ac	e5853024	 str         r3, [r5, #0x24]
  000b0	e5852030	 str         r2, [r5, #0x30]
  000b4	e5851020	 str         r1, [r5, #0x20]
  000b8	e585006c	 str         r0, [r5, #0x6C]

; 227  :     ghPmHeap = GetProcessHeap();

  000bc	eb000000	 bl          GetProcessHeap
  000c0	e1a03000	 mov         r3, r0

; 228  :     gpDeviceLists = NULL;

  000c4	e3a0e000	 mov         lr, #0

; 229  :     gppActivityTimers = NULL;

  000c8	e3a08000	 mov         r8, #0

; 230  :     ghevPowerManagerReady = NULL;
; 231  :     ghevResume = NULL;
; 232  :     ghevTimerResume = NULL;
; 233  :     ghtPnP = NULL;
; 234  :     ghtResume = NULL;
; 235  :     ghtActivityTimers = NULL;
; 236  :     ghtSystem = NULL;
; 237  : 
; 238  :     // cleanup event (hopefully never used)
; 239  :     ghevPmShutdown = CreateEvent(NULL, TRUE, FALSE, NULL);

  000cc	e3a00000	 mov         r0, #0
  000d0	e585302c	 str         r3, [r5, #0x2C]
  000d4	e3a03000	 mov         r3, #0
  000d8	e3a02000	 mov         r2, #0
  000dc	e3a01001	 mov         r1, #1
  000e0	e585e050	 str         lr, [r5, #0x50]
  000e4	e5858014	 str         r8, [r5, #0x14]
  000e8	e3a0e000	 mov         lr, #0
  000ec	e585e028	 str         lr, [r5, #0x28]
  000f0	e3a0e000	 mov         lr, #0
  000f4	e585e048	 str         lr, [r5, #0x48]
  000f8	e3a0e000	 mov         lr, #0
  000fc	e585e008	 str         lr, [r5, #8]
  00100	e3a0e000	 mov         lr, #0
  00104	e585e018	 str         lr, [r5, #0x18]
  00108	e3a0e000	 mov         lr, #0
  0010c	e585e070	 str         lr, [r5, #0x70]
  00110	e3a0e000	 mov         lr, #0
  00114	e585e068	 str         lr, [r5, #0x68]
  00118	e3a0e000	 mov         lr, #0
  0011c	e585e01c	 str         lr, [r5, #0x1C]
  00120	eb000000	 bl          CreateEventW
  00124	e3500000	 cmp         r0, #0
  00128	e585000c	 str         r0, [r5, #0xC]

; 240  :     if(ghevPmShutdown == NULL) {

  0012c	1a000006	 bne         |$LN113@PmInit|

; 241  :         PMLOGMSG(ZONE_ERROR, (_T("%s: CreateEvent() failed for shutdown event\r\n"), pszFname));

  00130	e5973440	 ldr         r3, [r7, #0x440]
  00134	e3130001	 tst         r3, #1
  00138	159f0868	 ldrne       r0, [pc, #0x868]
  0013c	159f17e4	 ldrne       r1, [pc, #0x7E4]
  00140	1b000000	 blne        CeLogMsg

; 242  :         fOk = FALSE;

  00144	e3a06000	 mov         r6, #0
  00148	e50b60f8	 str         r6, [r11, #-0xF8]
  0014c		 |$LN113@PmInit|

; 243  :     } 
; 244  : 
; 245  :     // validate the power management registry settings.  OEM code should use this
; 246  :     // routine to make sure that registry settings are present for all the power
; 247  :     // states they expect to support.  If the registry is not configured, the OEM
; 248  :     // code can treat it as a fatal error or perform its own initialization.
; 249  :     if(fOk) {

  0014c	e3560000	 cmp         r6, #0
  00150	0a000009	 beq         |$LN117@PmInit|

; 250  :         DWORD dwStatus = PlatformValidatePMRegistry();

  00154	eb000000	 bl          PlatformValidatePMRegistry
  00158	e1b02000	 movs        r2, r0

; 251  :         if(dwStatus != ERROR_SUCCESS) {

  0015c	0a000027	 beq         |$LN47@PmInit|
  00160	e5973440	 ldr         r3, [r7, #0x440]

; 252  :             PMLOGMSG(ZONE_ERROR, (_T("%s: PlatformValidatePMRegistry() failed %d\r\n"), 
; 253  :                 pszFname, dwStatus));

  00164	e3130001	 tst         r3, #1
  00168	159f0834	 ldrne       r0, [pc, #0x834]
  0016c	159f17b4	 ldrne       r1, [pc, #0x7B4]
  00170	1b000000	 blne        CeLogMsg

; 254  :             fOk = FALSE;

  00174	e3a06000	 mov         r6, #0
  00178	e50b60f8	 str         r6, [r11, #-0xF8]
  0017c		 |$LN117@PmInit|

; 298  :             fOk = FALSE;

  0017c	e3a08000	 mov         r8, #0
  00180		 |$LN41@PmInit|

; 255  :         } else {

  00180	e5953018	 ldr         r3, [r5, #0x18]
  00184	e5952070	 ldr         r2, [r5, #0x70]
  00188	e5951068	 ldr         r1, [r5, #0x68]

; 299  :         }
; 300  :     }
; 301  : 
; 302  :     // wait for threads to initialize (or fail to initialize)
; 303  :     #define NUM_OF_READY_EXIT_PAIR 3
; 304  :     HANDLE hEvents[] = { hevPnPReady, hevResumeReady, hevActivityTimersReady, 
; 305  :         ghtPnP, ghtResume, ghtActivityTimers };

  0018c	e50b30b8	 str         r3, [r11, #-0xB8]
  00190	e50b20b4	 str         r2, [r11, #-0xB4]
  00194	e50b10b0	 str         r1, [r11, #-0xB0]

; 306  :     int iReady = 0;

  00198	e51b30f0	 ldr         r3, [r11, #-0xF0]
  0019c	e50b30c4	 str         r3, [r11, #-0xC4]
  001a0	e50b40c0	 str         r4, [r11, #-0xC0]
  001a4	e50ba0bc	 str         r10, [r11, #-0xBC]
  001a8	e3a04000	 mov         r4, #0

; 267  :         hevResumeReady = CreateEvent(NULL, FALSE, FALSE, NULL);

  001ac	e51b50e8	 ldr         r5, [r11, #-0xE8]
  001b0	e24b90c4	 sub         r9, r11, #0xC4

; 306  :     int iReady = 0;

  001b4		 |$LL39@PmInit|

; 307  :     while( iReady < NUM_OF_READY_EXIT_PAIR  && fOk) {

  001b4	e3560000	 cmp         r6, #0
  001b8	0a0000a7	 beq         |$LN38@PmInit|

; 308  :         DWORD dwStatus = WaitForMultipleObjects(dim(hEvents), hEvents, FALSE, INFINITE);

  001bc	e3e03000	 mvn         r3, #0
  001c0	e3a02000	 mov         r2, #0
  001c4	e24b10c4	 sub         r1, r11, #0xC4
  001c8	e3a00006	 mov         r0, #6
  001cc	eb000000	 bl          WaitForMultipleObjects

; 309  :         switch(dwStatus) {

  001d0	e3500002	 cmp         r0, #2
  001d4	9a00009b	 bls         |$LN35@PmInit|
  001d8	e3500005	 cmp         r0, #5
  001dc	e5973440	 ldr         r3, [r7, #0x440]
  001e0	8a000090	 bhi         |$LN33@PmInit|

; 318  :             break;
; 319  : 
; 320  :         // thread exiting events
; 321  :         case (WAIT_OBJECT_0 + 3):   // pnp exited
; 322  :         case (WAIT_OBJECT_0 + 4):   // resume exited
; 323  :         case (WAIT_OBJECT_0 + 5):   // activity timers exited
; 324  :             PMLOGMSG(ZONE_ERROR, (_T("%s: thread initialization failure\r\n"), pszFname));

  001e4	e3130001	 tst         r3, #1
  001e8	159f1738	 ldrne       r1, [pc, #0x738]
  001ec	159f07ac	 ldrne       r0, [pc, #0x7AC]
  001f0	1b000000	 blne        CeLogMsg
  001f4		 |$LN62@PmInit|

; 325  :             fOk = FALSE;

  001f4	e3a06000	 mov         r6, #0
  001f8	e50b60f8	 str         r6, [r11, #-0xF8]

; 326  :             break;

  001fc	ea000094	 b           |$LN36@PmInit|
  00200		 |$LN47@PmInit|

; 256  :             // read the list of interface types we will monitor
; 257  :             fOk = DeviceListsInit();

  00200	eb000000	 bl          |?DeviceListsInit@@YAHXZ|
  00204	e1a06000	 mov         r6, r0
  00208	e50b60f8	 str         r6, [r11, #-0xF8]

; 258  :         }
; 259  :     }
; 260  : 
; 261  :     // create events
; 262  :     if(fOk) {

  0020c	e3560000	 cmp         r6, #0
  00210	0affffd9	 beq         |$LN117@PmInit|

; 263  :         ghevPowerManagerReady = CreateEvent(NULL, TRUE, FALSE, _T("SYSTEM/PowerManagerReady"));

  00214	e59f3780	 ldr         r3, [pc, #0x780]
  00218	e3a02000	 mov         r2, #0
  0021c	e3a01001	 mov         r1, #1
  00220	e3a00000	 mov         r0, #0
  00224	eb000000	 bl          CreateEventW
  00228	e1a03000	 mov         r3, r0

; 264  :         ghevResume = CreateEvent(NULL, FALSE, FALSE, NULL);

  0022c	e3a00000	 mov         r0, #0
  00230	e5853028	 str         r3, [r5, #0x28]
  00234	e3a03000	 mov         r3, #0
  00238	e3a02000	 mov         r2, #0
  0023c	e3a01000	 mov         r1, #0
  00240	eb000000	 bl          CreateEventW
  00244	e1a03000	 mov         r3, r0

; 265  :         ghevTimerResume = CreateEvent(NULL, FALSE, FALSE, NULL);

  00248	e3a00000	 mov         r0, #0
  0024c	e5853048	 str         r3, [r5, #0x48]
  00250	e3a03000	 mov         r3, #0
  00254	e3a02000	 mov         r2, #0
  00258	e3a01000	 mov         r1, #0
  0025c	eb000000	 bl          CreateEventW
  00260	e1a03000	 mov         r3, r0

; 266  :         hevPnPReady = CreateEvent(NULL, FALSE, FALSE, NULL);

  00264	e3a00000	 mov         r0, #0
  00268	e5853008	 str         r3, [r5, #8]
  0026c	e3a03000	 mov         r3, #0
  00270	e3a02000	 mov         r2, #0
  00274	e3a01000	 mov         r1, #0
  00278	eb000000	 bl          CreateEventW
  0027c	e1a03000	 mov         r3, r0
  00280	e50b30f0	 str         r3, [r11, #-0xF0]

; 267  :         hevResumeReady = CreateEvent(NULL, FALSE, FALSE, NULL);

  00284	e3a00000	 mov         r0, #0
  00288	e50b30d0	 str         r3, [r11, #-0xD0]
  0028c	e3a03000	 mov         r3, #0
  00290	e3a02000	 mov         r2, #0
  00294	e3a01000	 mov         r1, #0
  00298	eb000000	 bl          CreateEventW
  0029c	e1a04000	 mov         r4, r0
  002a0	e50b40f4	 str         r4, [r11, #-0xF4]

; 268  :         hevSystemReady = CreateEvent(NULL, FALSE, FALSE, NULL);

  002a4	e3a00000	 mov         r0, #0
  002a8	e50b40c8	 str         r4, [r11, #-0xC8]
  002ac	e3a03000	 mov         r3, #0
  002b0	e3a02000	 mov         r2, #0
  002b4	e3a01000	 mov         r1, #0
  002b8	eb000000	 bl          CreateEventW
  002bc	e1a09000	 mov         r9, r0
  002c0	e50b90ec	 str         r9, [r11, #-0xEC]

; 269  :         hevActivityTimersReady = CreateEvent(NULL, FALSE, FALSE, NULL);

  002c4	e3a00000	 mov         r0, #0
  002c8	e50b90cc	 str         r9, [r11, #-0xCC]
  002cc	e3a03000	 mov         r3, #0
  002d0	e3a02000	 mov         r2, #0
  002d4	e3a01000	 mov         r1, #0
  002d8	eb000000	 bl          CreateEventW
  002dc	e1a0a000	 mov         r10, r0

; 270  :         hevDummy = CreateEvent(NULL, FALSE, FALSE, NULL);

  002e0	e3a00000	 mov         r0, #0
  002e4	e50ba0d4	 str         r10, [r11, #-0xD4]
  002e8	e3a03000	 mov         r3, #0
  002ec	e3a02000	 mov         r2, #0
  002f0	e3a01000	 mov         r1, #0
  002f4	eb000000	 bl          CreateEventW
  002f8	e1a08000	 mov         r8, r0
  002fc	e50b80e8	 str         r8, [r11, #-0xE8]
  00300	e50b80e0	 str         r8, [r11, #-0xE0]

; 271  : 
; 272  :         // check everything
; 273  :         if(hevPnPReady == NULL
; 274  :         || hevResumeReady == NULL 
; 275  :         || hevSystemReady == NULL
; 276  :         || hevActivityTimersReady == NULL
; 277  :         || hevDummy == NULL
; 278  :         || ghevPowerManagerReady == NULL
; 279  :         || ghevTimerResume == NULL
; 280  :         || ghevResume == NULL) {

  00304	e51b30f0	 ldr         r3, [r11, #-0xF0]
  00308	e3530000	 cmp         r3, #0
  0030c	0a000010	 beq         |$LN43@PmInit|
  00310	e3540000	 cmp         r4, #0
  00314	0a00000e	 beq         |$LN43@PmInit|
  00318	e3590000	 cmp         r9, #0
  0031c	0a00000c	 beq         |$LN43@PmInit|
  00320	e35a0000	 cmp         r10, #0
  00324	0a00000a	 beq         |$LN43@PmInit|
  00328	e3580000	 cmp         r8, #0
  0032c	0a000008	 beq         |$LN43@PmInit|
  00330	e5953028	 ldr         r3, [r5, #0x28]
  00334	e3530000	 cmp         r3, #0
  00338	0a000005	 beq         |$LN43@PmInit|
  0033c	e5953008	 ldr         r3, [r5, #8]
  00340	e3530000	 cmp         r3, #0
  00344	0a000002	 beq         |$LN43@PmInit|
  00348	e5953048	 ldr         r3, [r5, #0x48]
  0034c	e3530000	 cmp         r3, #0
  00350	1a000006	 bne         |$LN114@PmInit|
  00354		 |$LN43@PmInit|

; 241  :         PMLOGMSG(ZONE_ERROR, (_T("%s: CreateEvent() failed for shutdown event\r\n"), pszFname));

  00354	e5973440	 ldr         r3, [r7, #0x440]

; 281  :             PMLOGMSG(ZONE_ERROR, (_T("%s: event creation failure\r\n"), pszFname));

  00358	e3130001	 tst         r3, #1
  0035c	159f0634	 ldrne       r0, [pc, #0x634]
  00360	159f15c0	 ldrne       r1, [pc, #0x5C0]
  00364	1b000000	 blne        CeLogMsg

; 282  :             fOk = FALSE;

  00368	e3a06000	 mov         r6, #0
  0036c	e50b60f8	 str         r6, [r11, #-0xF8]
  00370		 |$LN114@PmInit|

; 283  :         }
; 284  :     }
; 285  : 
; 286  :     // start threads
; 287  :     if(fOk) {

  00370	e3560000	 cmp         r6, #0
  00374	0affff80	 beq         |$LN117@PmInit|

; 288  :         ghtPnP = CreateThread(NULL, 0, PnpThreadProc, (LPVOID) hevPnPReady, 0, NULL);

  00378	e59f2614	 ldr         r2, [pc, #0x614]
  0037c	e3a08000	 mov         r8, #0
  00380	e51b30f0	 ldr         r3, [r11, #-0xF0]
  00384	e3a01000	 mov         r1, #0
  00388	e3a00000	 mov         r0, #0
  0038c	e58d8004	 str         r8, [sp, #4]
  00390	e58d8000	 str         r8, [sp]
  00394	eb000000	 bl          CreateThread

; 289  :         ghtResume = CreateThread(NULL, 0, ResumeThreadProc, (LPVOID) hevResumeReady, 0, NULL);

  00398	e59f25f0	 ldr         r2, [pc, #0x5F0]
  0039c	e1a03000	 mov         r3, r0
  003a0	e3a00000	 mov         r0, #0
  003a4	e5853018	 str         r3, [r5, #0x18]
  003a8	e1a03004	 mov         r3, r4
  003ac	e3a01000	 mov         r1, #0
  003b0	e58d8004	 str         r8, [sp, #4]
  003b4	e58d8000	 str         r8, [sp]
  003b8	eb000000	 bl          CreateThread

; 290  :         ghtActivityTimers = CreateThread(NULL, 0, ActivityTimersThreadProc, 
; 291  :             (LPVOID) hevActivityTimersReady, 0, NULL);

  003bc	e59f25c8	 ldr         r2, [pc, #0x5C8]
  003c0	e1a03000	 mov         r3, r0
  003c4	e3a00000	 mov         r0, #0
  003c8	e5853070	 str         r3, [r5, #0x70]
  003cc	e1a0300a	 mov         r3, r10
  003d0	e3a01000	 mov         r1, #0
  003d4	e58d8004	 str         r8, [sp, #4]
  003d8	e58d8000	 str         r8, [sp]
  003dc	eb000000	 bl          CreateThread
  003e0	e5953018	 ldr         r3, [r5, #0x18]
  003e4	e5850068	 str         r0, [r5, #0x68]

; 292  :         
; 293  :         // check everything
; 294  :         if(ghtPnP == NULL 
; 295  :         || ghtResume == NULL 
; 296  :         || ghtActivityTimers == NULL) {

  003e8	e3530000	 cmp         r3, #0
  003ec	0a000005	 beq         |$LN115@PmInit|
  003f0	e5953070	 ldr         r3, [r5, #0x70]
  003f4	e3530000	 cmp         r3, #0
  003f8	0a000002	 beq         |$LN115@PmInit|
  003fc	e1a03000	 mov         r3, r0
  00400	e3530000	 cmp         r3, #0
  00404	1affff5d	 bne         |$LN41@PmInit|
  00408		 |$LN115@PmInit|

; 241  :         PMLOGMSG(ZONE_ERROR, (_T("%s: CreateEvent() failed for shutdown event\r\n"), pszFname));

  00408	e5973440	 ldr         r3, [r7, #0x440]

; 297  :             PMLOGMSG(ZONE_ERROR, (_T("%s: thread creation failure\r\n"), pszFname));

  0040c	e3130001	 tst         r3, #1
  00410	159f0570	 ldrne       r0, [pc, #0x570]
  00414	159f150c	 ldrne       r1, [pc, #0x50C]
  00418	1b000000	 blne        CeLogMsg

; 298  :             fOk = FALSE;

  0041c	e3a06000	 mov         r6, #0
  00420	e50b60f8	 str         r6, [r11, #-0xF8]
  00424	eaffff55	 b           |$LN41@PmInit|
  00428		 |$LN33@PmInit|

; 327  :         default:
; 328  :             PMLOGMSG(ZONE_ERROR, (_T("%s: WaitForMultipleObjects() returnd %d, status is %d\r\n"),
; 329  :                 pszFname, GetLastError()));

  00428	e3130001	 tst         r3, #1
  0042c	0affff70	 beq         |$LN62@PmInit|
  00430	eb000000	 bl          GetLastError
  00434	e1a02000	 mov         r2, r0
  00438	e59f0544	 ldr         r0, [pc, #0x544]
  0043c	e59f14e4	 ldr         r1, [pc, #0x4E4]
  00440	eb000000	 bl          CeLogMsg

; 330  :             fOk = FALSE;

  00444	eaffff6a	 b           |$LN62@PmInit|
  00448		 |$LN35@PmInit|

; 310  :         // thread ready events
; 311  :         case (WAIT_OBJECT_0 + 0):   // pnp ready
; 312  :         case (WAIT_OBJECT_0 + 1):   // resume ready
; 313  :         case (WAIT_OBJECT_0 + 2):   // activity timers ready
; 314  :             // don't watch for the thread exiting now -- some may do
; 315  :             // so if they don't have work to do.
; 316  :             hEvents[dwStatus - WAIT_OBJECT_0 + NUM_OF_READY_EXIT_PAIR] = hevDummy;

  00448	e0893100	 add         r3, r9, r0, lsl #2
  0044c	e583500c	 str         r5, [r3, #0xC]

; 317  :             iReady++;

  00450	e2844001	 add         r4, r4, #1

; 330  :             fOk = FALSE;

  00454		 |$LN36@PmInit|

; 307  :     while( iReady < NUM_OF_READY_EXIT_PAIR  && fOk) {

  00454	e3540003	 cmp         r4, #3
  00458	baffff55	 blt         |$LL39@PmInit|
  0045c		 |$LN38@PmInit|

; 331  :             break;
; 332  :         }
; 333  :     }
; 334  : 
; 335  :     // load PMExt DLL, call init
; 336  :     if (fOk) {

  0045c	e3560000	 cmp         r6, #0
  00460	e59f5500	 ldr         r5, [pc, #0x500]
  00464	e51b90ec	 ldr         r9, [r11, #-0xEC]
  00468	0a000087	 beq         |$LN123@PmInit|

; 337  :         TCHAR DevDll[DEVDLL_LEN];
; 338  :         DWORD cbData;
; 339  :         DWORD Flags;
; 340  :         HKEY hKey;
; 341  : 
; 342  :         gpPMExtInit = NULL;
; 343  :         gpPMExtDeinit = NULL;;
; 344  : 
; 345  :         // Note: TEXT("\\Omap") is appended to the PMExt_Registry_Root because this is the only PMExt that we support
; 346  :         if (ERROR_SUCCESS == RegOpenKeyEx(HKEY_LOCAL_MACHINE, PMExt_Registry_Root TEXT("\\Omap"), 0, 0, &hKey)) {

  0046c	e3a04000	 mov         r4, #0
  00470	e24be0ec	 sub         lr, r11, #0xEC
  00474	e59f14d4	 ldr         r1, [pc, #0x4D4]
  00478	e3a03000	 mov         r3, #0
  0047c	e3a02000	 mov         r2, #0
  00480	e3a0010a	 mov         r0, #0xA, 2
  00484	e585404c	 str         r4, [r5, #0x4C]
  00488	e3a04000	 mov         r4, #0
  0048c	e5854000	 str         r4, [r5]
  00490	e58de000	 str         lr, [sp]
  00494	eb000000	 bl          RegOpenKeyExW
  00498	e3500000	 cmp         r0, #0
  0049c	1a000074	 bne         |$LN31@PmInit|

; 347  :             cbData = sizeof(DevDll);
; 348  :             if (ERROR_SUCCESS == RegQueryValueEx(hKey, DEVLOAD_DLLNAME_VALNAME, NULL, NULL, (LPBYTE) DevDll, &cbData)) {

  004a0	e51b00ec	 ldr         r0, [r11, #-0xEC]
  004a4	e24b40ac	 sub         r4, r11, #0xAC
  004a8	e59f14bc	 ldr         r1, [pc, #0x4BC]
  004ac	e3a03000	 mov         r3, #0
  004b0	e3a02000	 mov         r2, #0
  004b4	e3a0e080	 mov         lr, #0x80
  004b8	e50be0e4	 str         lr, [r11, #-0xE4]
  004bc	e24be0e4	 sub         lr, r11, #0xE4
  004c0	e58de004	 str         lr, [sp, #4]
  004c4	e58d4000	 str         r4, [sp]
  004c8	eb000000	 bl          RegQueryValueExW
  004cc	e3500000	 cmp         r0, #0
  004d0	1a00002f	 bne         |$LN30@PmInit|

; 349  :                 cbData = sizeof(Flags);
; 350  :                 if (ERROR_SUCCESS != RegQueryValueEx(hKey, DEVLOAD_FLAGS_VALNAME, NULL, NULL, (LPBYTE) &Flags, &cbData)) {

  004d4	e59f14a4	 ldr         r1, [pc, #0x4A4]
  004d8	e51b00ec	 ldr         r0, [r11, #-0xEC]
  004dc	e24b40d8	 sub         r4, r11, #0xD8
  004e0	e3a03000	 mov         r3, #0
  004e4	e3a02000	 mov         r2, #0
  004e8	e3a0e004	 mov         lr, #4
  004ec	e50be0e4	 str         lr, [r11, #-0xE4]
  004f0	e24be0e4	 sub         lr, r11, #0xE4
  004f4	e58de004	 str         lr, [sp, #4]
  004f8	e58d4000	 str         r4, [sp]
  004fc	eb000000	 bl          RegQueryValueExW
  00500	e3500000	 cmp         r0, #0

; 351  :                     Flags = DEVFLAGS_NONE;

  00504	13a03000	 movne       r3, #0
  00508	150b30d8	 strne       r3, [r11, #-0xD8]
  0050c	051b30d8	 ldreq       r3, [r11, #-0xD8]

; 352  :                 }
; 353  :                 ghPMExtLib = (Flags & DEVFLAGS_LOADLIBRARY) ? LoadLibrary(DevDll) : LoadDriver(DevDll);

  00510	e3130002	 tst         r3, #2
  00514	e24b00ac	 sub         r0, r11, #0xAC
  00518	0a000001	 beq         |$LN66@PmInit|
  0051c	eb000000	 bl          LoadLibraryW
  00520	ea000000	 b           |$LN128@PmInit|
  00524		 |$LN66@PmInit|
  00524	eb000000	 bl          LoadDriver
  00528		 |$LN128@PmInit|
  00528	e5850004	 str         r0, [r5, #4]

; 354  :                 if (!ghPMExtLib) {

  0052c	e3500000	 cmp         r0, #0
  00530	1a000007	 bne         |$LN28@PmInit|

; 355  :                     PMLOGMSG(ZONE_ERROR, (_T("%s: couldn't load PMExt \"%s\" -- error %d\r\n"), pszFname, DevDll, GetLastError()));

  00534	e5973440	 ldr         r3, [r7, #0x440]
  00538	e3130001	 tst         r3, #1
  0053c	0a00001c	 beq         |$LN119@PmInit|
  00540	eb000000	 bl          GetLastError
  00544	e1a03000	 mov         r3, r0
  00548	e59f042c	 ldr         r0, [pc, #0x42C]
  0054c	e24b20ac	 sub         r2, r11, #0xAC

; 356  :                 } 
; 357  :                 else {

  00550	ea000015	 b           |$LN129@PmInit|
  00554		 |$LN28@PmInit|

; 358  :                     gpPMExtInit = (PFN_PMExt_Init) GetProcAddress(ghPMExtLib, PMExt_Init_NAME);

  00554	e59f1400	 ldr         r1, [pc, #0x400]
  00558	eb000000	 bl          GetProcAddressW
  0055c	e3500000	 cmp         r0, #0
  00560	e585004c	 str         r0, [r5, #0x4C]

; 359  :                     if (!gpPMExtInit)

  00564	1a000005	 bne         |$LN70@PmInit|

; 360  :                         PMLOGMSG(ZONE_ERROR, (_T("%s: \"%s\" can't GetProcAddress\r\n"), pszFname, PMExt_Init_NAME));

  00568	e5973440	 ldr         r3, [r7, #0x440]
  0056c	e3130001	 tst         r3, #1
  00570	159f0400	 ldrne       r0, [pc, #0x400]
  00574	159f23e0	 ldrne       r2, [pc, #0x3E0]
  00578	159f13a8	 ldrne       r1, [pc, #0x3A8]
  0057c	1b000000	 blne        CeLogMsg
  00580		 |$LN70@PmInit|

; 361  : 
; 362  :                     gpPMExtDeinit = (PFN_PMExt_DeInit) GetProcAddress(ghPMExtLib, PMExt_DeInit_NAME);

  00580	e59f13ec	 ldr         r1, [pc, #0x3EC]
  00584	e5950004	 ldr         r0, [r5, #4]
  00588	eb000000	 bl          GetProcAddressW
  0058c	e5850000	 str         r0, [r5]

; 363  :                 }
; 364  :             }
; 365  :             else {

  00590	ea000007	 b           |$LN119@PmInit|
  00594		 |$LN30@PmInit|

; 366  :                 PMLOGMSG(ZONE_INIT, (_T("%s: can't get value \"%s\" in key \"%s\"\r\n"), pszFname, DEVLOAD_DLLNAME_VALNAME, PMExt_Registry_Root TEXT("\\Omap")));

  00594	e5973440	 ldr         r3, [r7, #0x440]
  00598	e3130004	 tst         r3, #4
  0059c	0a000004	 beq         |$LN119@PmInit|
  005a0	e59f03c8	 ldr         r0, [pc, #0x3C8]
  005a4	e59f33a4	 ldr         r3, [pc, #0x3A4]
  005a8	e59f23bc	 ldr         r2, [pc, #0x3BC]
  005ac		 |$LN129@PmInit|
  005ac	e59f1374	 ldr         r1, [pc, #0x374]
  005b0	eb000000	 bl          CeLogMsg
  005b4		 |$LN119@PmInit|

; 367  :             }
; 368  :             if (gpPMExtInit && gpPMExtDeinit) {

  005b4	e595304c	 ldr         r3, [r5, #0x4C]
  005b8	e3530000	 cmp         r3, #0
  005bc	0a000028	 beq         |$LN125@PmInit|
  005c0	e5953000	 ldr         r3, [r5]
  005c4	e3530000	 cmp         r3, #0
  005c8	0a000025	 beq         |$LN125@PmInit|
  005cc		 |$LN102@PmInit|

; 369  : #ifdef DEBUG
; 370  :                gdwPMExtContext = gpPMExtInit(HKEY_LOCAL_MACHINE, PMExt_Registry_Root TEXT("\\Omap"));
; 371  : #else
; 372  :                 __try {
; 373  :                     gdwPMExtContext = gpPMExtInit(HKEY_LOCAL_MACHINE, PMExt_Registry_Root TEXT("\\Omap"));

  005cc	e595304c	 ldr         r3, [r5, #0x4C]
  005d0	e59f1378	 ldr         r1, [pc, #0x378]
  005d4	e3a0010a	 mov         r0, #0xA, 2
  005d8	e1a0e00f	 mov         lr, pc
  005dc	e12fff13	 bx          r3
  005e0	e5850074	 str         r0, [r5, #0x74]
  005e4		 |$LN103@PmInit|

; 374  :                 }

  005e4	e5953074	 ldr         r3, [r5, #0x74]
  005e8	e51b40f4	 ldr         r4, [r11, #-0xF4]
  005ec	ea00000c	 b           |$LN104@PmInit|
  005f0		 |$LN99@PmInit|

; 376  :                     gdwPMExtContext = 0;

  005f0	e59f5370	 ldr         r5, [pc, #0x370]
  005f4	e3a03000	 mov         r3, #0
  005f8	e5853074	 str         r3, [r5, #0x74]
  005fc	e59f7360	 ldr         r7, [pc, #0x360]
  00600	e51b60f8	 ldr         r6, [r11, #-0xF8]
  00604	e51b20d0	 ldr         r2, [r11, #-0xD0]
  00608	e50b20f0	 str         r2, [r11, #-0xF0]
  0060c	e51b40c8	 ldr         r4, [r11, #-0xC8]
  00610	e51b90cc	 ldr         r9, [r11, #-0xCC]
  00614	e51ba0d4	 ldr         r10, [r11, #-0xD4]
  00618	e51b20e0	 ldr         r2, [r11, #-0xE0]
  0061c	e50b20e8	 str         r2, [r11, #-0xE8]
  00620	e3a08000	 mov         r8, #0
  00624		 |$LN104@PmInit|

; 377  :                 }
; 378  : #endif
; 379  :                 if (!gdwPMExtContext)

  00624	e3530000	 cmp         r3, #0

; 380  :                     PMLOGMSG(ZONE_ERROR, (_T("%s: \"%s\" failed\r\n"), pszFname, PMExt_Init_NAME));

  00628	e5973440	 ldr         r3, [r7, #0x440]

; 377  :                 }
; 378  : #endif
; 379  :                 if (!gdwPMExtContext)

  0062c	1a000006	 bne         |$LN22@PmInit|

; 380  :                     PMLOGMSG(ZONE_ERROR, (_T("%s: \"%s\" failed\r\n"), pszFname, PMExt_Init_NAME));

  00630	e3130001	 tst         r3, #1
  00634	0a00000b	 beq         |$LN76@PmInit|
  00638	e59f0320	 ldr         r0, [pc, #0x320]
  0063c		 |$LN130@PmInit|
  0063c	e59f2318	 ldr         r2, [pc, #0x318]
  00640	e59f12e0	 ldr         r1, [pc, #0x2E0]
  00644	eb000000	 bl          CeLogMsg

; 381  :                 else

  00648	ea000006	 b           |$LN76@PmInit|
  0064c		 |$LN22@PmInit|

; 382  :                     PMLOGMSG(ZONE_INIT, (_T("%s: \"%s\" success\r\n"), pszFname, PMExt_Init_NAME));

  0064c	e3130004	 tst         r3, #4
  00650	0a000004	 beq         |$LN76@PmInit|
  00654	e59f02fc	 ldr         r0, [pc, #0x2FC]
  00658	eafffff7	 b           |$LN130@PmInit|
  0065c		 |$LN121@PmInit|

; 459  : 
; 460  :     DEBUGCHK(fOk);      // make sure we raise a red flag if the init fails
; 461  : 
; 462  :     return fOk;

  0065c	e51b60e0	 ldr         r6, [r11, #-0xE0]
  00660	ea0000a7	 b           |$LN50@PmInit|
  00664		 |$LN125@PmInit|

; 331  :             break;
; 332  :         }
; 333  :     }
; 334  : 
; 335  :     // load PMExt DLL, call init
; 336  :     if (fOk) {

  00664	e51b40f4	 ldr         r4, [r11, #-0xF4]

; 382  :                     PMLOGMSG(ZONE_INIT, (_T("%s: \"%s\" success\r\n"), pszFname, PMExt_Init_NAME));

  00668		 |$LN76@PmInit|

; 383  :             }
; 384  :             RegCloseKey(hKey);

  00668	e51b00ec	 ldr         r0, [r11, #-0xEC]
  0066c	eb000000	 bl          RegCloseKey

; 385  :         }
; 386  :         else {

  00670	ea000006	 b           |$LN78@PmInit|
  00674		 |$LN31@PmInit|

; 241  :         PMLOGMSG(ZONE_ERROR, (_T("%s: CreateEvent() failed for shutdown event\r\n"), pszFname));

  00674	e5973440	 ldr         r3, [r7, #0x440]

; 387  :             PMLOGMSG(ZONE_INIT, (_T("%s: can't open key [HKEY_LOCAL_MACHINE\\%s]\r\n"), pszFname, PMExt_Registry_Root TEXT("\\Omap")));

  00678	e3130004	 tst         r3, #4
  0067c	159f02d0	 ldrne       r0, [pc, #0x2D0]
  00680	159f22c8	 ldrne       r2, [pc, #0x2C8]
  00684	159f129c	 ldrne       r1, [pc, #0x29C]
  00688	1b000000	 blne        CeLogMsg
  0068c		 |$LN123@PmInit|

; 331  :             break;
; 332  :         }
; 333  :     }
; 334  : 
; 335  :     // load PMExt DLL, call init
; 336  :     if (fOk) {

  0068c	e51b40f4	 ldr         r4, [r11, #-0xF4]

; 387  :             PMLOGMSG(ZONE_INIT, (_T("%s: can't open key [HKEY_LOCAL_MACHINE\\%s]\r\n"), pszFname, PMExt_Registry_Root TEXT("\\Omap")));

  00690		 |$LN78@PmInit|

; 388  :         }
; 389  :     }
; 390  : 
; 391  :     // if everything is initialized, we're ready start the system thread
; 392  :     if(fOk) {

  00690	e3560000	 cmp         r6, #0
  00694	0a00002a	 beq         |$LN16@PmInit|

; 393  :         // check that the thread started
; 394  :         ghtSystem = CreateThread(NULL, 0, SystemThreadProc, (LPVOID) hevSystemReady, 0, NULL);

  00698	e59f22ac	 ldr         r2, [pc, #0x2AC]
  0069c	e1a03009	 mov         r3, r9
  006a0	e3a01000	 mov         r1, #0
  006a4	e3a00000	 mov         r0, #0
  006a8	e58d8004	 str         r8, [sp, #4]
  006ac	e58d8000	 str         r8, [sp]
  006b0	eb000000	 bl          CreateThread
  006b4	e1b0e000	 movs        lr, r0
  006b8	e585e01c	 str         lr, [r5, #0x1C]

; 395  :         if(ghtSystem == NULL) {

  006bc	1a000007	 bne         |$LN18@PmInit|

; 396  :             PMLOGMSG(ZONE_ERROR, (_T("%s: system thread creation failure\r\n"), pszFname));

  006c0	e5973440	 ldr         r3, [r7, #0x440]
  006c4	e3130001	 tst         r3, #1
  006c8	0a000003	 beq         |$LN80@PmInit|
  006cc	e59f0274	 ldr         r0, [pc, #0x274]
  006d0	e59f1250	 ldr         r1, [pc, #0x250]
  006d4	eb000000	 bl          CeLogMsg
  006d8	e595e01c	 ldr         lr, [r5, #0x1C]
  006dc		 |$LN80@PmInit|

; 397  :             fOk = FALSE;

  006dc	e3a06000	 mov         r6, #0
  006e0		 |$LN18@PmInit|

; 398  :         }
; 399  :         
; 400  :         // wait for it to initialize or exit
; 401  :         HANDLE hSystemEvents[] = { hevSystemReady, ghtSystem };
; 402  :         DWORD dwStatus = WaitForMultipleObjects(dim(hSystemEvents), hSystemEvents, FALSE, INFINITE);

  006e0	e3e03000	 mvn         r3, #0
  006e4	e3a02000	 mov         r2, #0
  006e8	e24b10e0	 sub         r1, r11, #0xE0
  006ec	e3a00002	 mov         r0, #2
  006f0	e50b90e0	 str         r9, [r11, #-0xE0]
  006f4	e50be0dc	 str         lr, [r11, #-0xDC]
  006f8	eb000000	 bl          WaitForMultipleObjects
  006fc	e3500000	 cmp         r0, #0

; 403  :         if(dwStatus != WAIT_OBJECT_0) {

  00700	0a000005	 beq         |$LN120@PmInit|
  00704	e5973440	 ldr         r3, [r7, #0x440]

; 404  :             PMLOGMSG(ZONE_ERROR, (_T("%s: system thread initialization failure\r\n"), pszFname));

  00708	e3130001	 tst         r3, #1
  0070c	159f0230	 ldrne       r0, [pc, #0x230]
  00710	159f1210	 ldrne       r1, [pc, #0x210]
  00714	1b000000	 blne        CeLogMsg

; 405  :             fOk = FALSE;

  00718	e3a06000	 mov         r6, #0
  0071c		 |$LN120@PmInit|

; 406  :         }
; 407  :     } 
; 408  :     
; 409  :     // should we signal that our API is ready?
; 410  :     if(fOk) {

  0071c	e3560000	 cmp         r6, #0
  00720	0a000007	 beq         |$LN16@PmInit|

; 411  :         // yes, the PM is initialized
; 412  :         PmSetSystemPowerState(NULL, POWER_STATE_ON, POWER_FORCE);

  00724	e3a02a01	 mov         r2, #1, 20
  00728	e3a01801	 mov         r1, #1, 16
  0072c	e3a00000	 mov         r0, #0
  00730	eb000000	 bl          PmSetSystemPowerState

; 413  :         SetEvent(ghevPowerManagerReady);

  00734	e5950028	 ldr         r0, [r5, #0x28]
  00738	e3a01003	 mov         r1, #3
  0073c	eb000000	 bl          EventModify

; 414  :     } else {

  00740	ea00004e	 b           |$LN6@PmInit|
  00744		 |$LN16@PmInit|

; 415  :         // no, clean up
; 416  :         if(ghevPmShutdown != NULL) {

  00744	e595300c	 ldr         r3, [r5, #0xC]
  00748	e3530000	 cmp         r3, #0
  0074c	11a00003	 movne       r0, r3

; 417  :             // tell threads to shut down
; 418  :             SetEvent(ghevPmShutdown);

  00750	13a01003	 movne       r1, #3
  00754	1b000000	 blne        EventModify

; 419  :         }
; 420  : 
; 421  :         // wait for threads to exit
; 422  :         if(ghtPnP != NULL) {

  00758	e5950018	 ldr         r0, [r5, #0x18]
  0075c	e3500000	 cmp         r0, #0
  00760	0a00000a	 beq         |$LN13@PmInit|
  00764	e5973440	 ldr         r3, [r7, #0x440]

; 423  :             PMLOGMSG(ZONE_ERROR, (_T("%s: shutting down PnP thread\r\n"), pszFname));

  00768	e3130001	 tst         r3, #1
  0076c	0a000003	 beq         |$LN84@PmInit|
  00770	e59f01c8	 ldr         r0, [pc, #0x1C8]
  00774	e59f11ac	 ldr         r1, [pc, #0x1AC]
  00778	eb000000	 bl          CeLogMsg
  0077c	e5950018	 ldr         r0, [r5, #0x18]
  00780		 |$LN84@PmInit|

; 424  :             WaitForSingleObject(ghtPnP, INFINITE);

  00780	e3e01000	 mvn         r1, #0
  00784	eb000000	 bl          WaitForSingleObject

; 425  :             CloseHandle(ghtPnP);

  00788	e5950018	 ldr         r0, [r5, #0x18]
  0078c	eb000000	 bl          CloseHandle
  00790		 |$LN13@PmInit|

; 426  :         }
; 427  :         if(ghtResume != NULL) {

  00790	e5950070	 ldr         r0, [r5, #0x70]
  00794	e3500000	 cmp         r0, #0
  00798	0a00000a	 beq         |$LN12@PmInit|
  0079c	e5973440	 ldr         r3, [r7, #0x440]

; 428  :             PMLOGMSG(ZONE_ERROR, (_T("%s: shutting down resume thread\r\n"), pszFname));

  007a0	e3130001	 tst         r3, #1
  007a4	0a000003	 beq         |$LN86@PmInit|
  007a8	e59f018c	 ldr         r0, [pc, #0x18C]
  007ac	e59f1174	 ldr         r1, [pc, #0x174]
  007b0	eb000000	 bl          CeLogMsg
  007b4	e5950070	 ldr         r0, [r5, #0x70]
  007b8		 |$LN86@PmInit|

; 429  :             WaitForSingleObject(ghtResume, INFINITE);

  007b8	e3e01000	 mvn         r1, #0
  007bc	eb000000	 bl          WaitForSingleObject

; 430  :             CloseHandle(ghtResume);

  007c0	e5950070	 ldr         r0, [r5, #0x70]
  007c4	eb000000	 bl          CloseHandle
  007c8		 |$LN12@PmInit|

; 431  :         }
; 432  :         if(ghtSystem != NULL) {

  007c8	e595001c	 ldr         r0, [r5, #0x1C]
  007cc	e3500000	 cmp         r0, #0
  007d0	0a00000a	 beq         |$LN11@PmInit|
  007d4	e5973440	 ldr         r3, [r7, #0x440]

; 433  :             PMLOGMSG(ZONE_ERROR, (_T("%s: shutting down system thread\r\n"), pszFname));

  007d8	e3130001	 tst         r3, #1
  007dc	0a000003	 beq         |$LN88@PmInit|
  007e0	e59f0150	 ldr         r0, [pc, #0x150]
  007e4	e59f113c	 ldr         r1, [pc, #0x13C]
  007e8	eb000000	 bl          CeLogMsg
  007ec	e595001c	 ldr         r0, [r5, #0x1C]
  007f0		 |$LN88@PmInit|

; 434  :             WaitForSingleObject(ghtSystem, INFINITE);

  007f0	e3e01000	 mvn         r1, #0
  007f4	eb000000	 bl          WaitForSingleObject

; 435  :             CloseHandle(ghtSystem);

  007f8	e595001c	 ldr         r0, [r5, #0x1C]
  007fc	eb000000	 bl          CloseHandle
  00800		 |$LN11@PmInit|

; 436  :         }
; 437  :         if(ghtActivityTimers != NULL) {

  00800	e5950068	 ldr         r0, [r5, #0x68]
  00804	e3500000	 cmp         r0, #0
  00808	0a00000a	 beq         |$LN10@PmInit|
  0080c	e5973440	 ldr         r3, [r7, #0x440]

; 438  :             PMLOGMSG(ZONE_ERROR, (_T("%s: shutting down activity timers thread\r\n"), pszFname));

  00810	e3130001	 tst         r3, #1
  00814	0a000003	 beq         |$LN90@PmInit|
  00818	e59f0114	 ldr         r0, [pc, #0x114]
  0081c	e59f1104	 ldr         r1, [pc, #0x104]
  00820	eb000000	 bl          CeLogMsg
  00824	e5950068	 ldr         r0, [r5, #0x68]
  00828		 |$LN90@PmInit|

; 439  :             WaitForSingleObject(ghtActivityTimers, INFINITE);

  00828	e3e01000	 mvn         r1, #0
  0082c	eb000000	 bl          WaitForSingleObject

; 440  :             CloseHandle(ghtActivityTimers);

  00830	e5950068	 ldr         r0, [r5, #0x68]
  00834	eb000000	 bl          CloseHandle
  00838		 |$LN10@PmInit|
  00838	e5973440	 ldr         r3, [r7, #0x440]

; 441  :         }
; 442  : 
; 443  :         PMLOGMSG(ZONE_ERROR, (_T("%s: closing handles\r\n"), pszFname));

  0083c	e3130001	 tst         r3, #1
  00840	159f00e8	 ldrne       r0, [pc, #0xE8]
  00844	159f10dc	 ldrne       r1, [pc, #0xDC]
  00848	1b000000	 blne        CeLogMsg
  0084c	e595300c	 ldr         r3, [r5, #0xC]

; 444  :         if(ghevPmShutdown != NULL) CloseHandle(ghevPmShutdown);

  00850	e3530000	 cmp         r3, #0
  00854	11a00003	 movne       r0, r3
  00858	1b000000	 blne        CloseHandle

; 445  :         if(ghevPowerManagerReady != NULL) CloseHandle(ghevPowerManagerReady);

  0085c	e5950028	 ldr         r0, [r5, #0x28]
  00860	e3500000	 cmp         r0, #0
  00864	1b000000	 blne        CloseHandle

; 446  :         if(ghevResume != NULL) CloseHandle(ghevResume);

  00868	e5950048	 ldr         r0, [r5, #0x48]
  0086c	e3500000	 cmp         r0, #0
  00870	1b000000	 blne        CloseHandle

; 447  :         if(ghevTimerResume != NULL) CloseHandle(ghevTimerResume);

  00874	e5950008	 ldr         r0, [r5, #8]
  00878	e3500000	 cmp         r0, #0
  0087c	1b000000	 blne        CloseHandle
  00880		 |$LN6@PmInit|

; 448  :     }
; 449  : 
; 450  :     // clean up status handles
; 451  :     if(hevPnPReady != NULL) CloseHandle(hevPnPReady);

  00880	e51b30f0	 ldr         r3, [r11, #-0xF0]
  00884	e3530000	 cmp         r3, #0
  00888	11a00003	 movne       r0, r3
  0088c	1b000000	 blne        CloseHandle

; 452  :     if(hevResumeReady != NULL) CloseHandle(hevResumeReady);

  00890	e3540000	 cmp         r4, #0
  00894	11a00004	 movne       r0, r4
  00898	1b000000	 blne        CloseHandle

; 453  :     if(hevSystemReady != NULL) CloseHandle(hevSystemReady);

  0089c	e3590000	 cmp         r9, #0
  008a0	11a00009	 movne       r0, r9
  008a4	1b000000	 blne        CloseHandle

; 454  :     if(hevActivityTimersReady != NULL) CloseHandle(hevActivityTimersReady);

  008a8	e35a0000	 cmp         r10, #0
  008ac	11a0000a	 movne       r0, r10
  008b0	1b000000	 blne        CloseHandle

; 455  :     if(hevDummy != NULL) CloseHandle(hevDummy);

  008b4	e51b30e8	 ldr         r3, [r11, #-0xE8]
  008b8	e3530000	 cmp         r3, #0
  008bc	11a00003	 movne       r0, r3
  008c0	1b000000	 blne        CloseHandle

; 456  : 
; 457  :     PMLOGMSG((!fOk && ZONE_ERROR) || ZONE_INIT || ZONE_API, 
; 458  :         (_T("-%s: returning %d\r\n"), pszFname, fOk));

  008c4	e3560000	 cmp         r6, #0
  008c8	1a000002	 bne         |$LN94@PmInit|
  008cc	e5973440	 ldr         r3, [r7, #0x440]
  008d0	e3130001	 tst         r3, #1
  008d4	1a000004	 bne         |$LN95@PmInit|
  008d8		 |$LN94@PmInit|

; 241  :         PMLOGMSG(ZONE_ERROR, (_T("%s: CreateEvent() failed for shutdown event\r\n"), pszFname));

  008d8	e5973440	 ldr         r3, [r7, #0x440]

; 456  : 
; 457  :     PMLOGMSG((!fOk && ZONE_ERROR) || ZONE_INIT || ZONE_API, 
; 458  :         (_T("-%s: returning %d\r\n"), pszFname, fOk));

  008dc	e3130004	 tst         r3, #4
  008e0	1a000001	 bne         |$LN95@PmInit|
  008e4	e3130b02	 tst         r3, #2, 22
  008e8	0a000003	 beq         |$LN96@PmInit|
  008ec		 |$LN95@PmInit|
  008ec	e59f0038	 ldr         r0, [pc, #0x38]
  008f0	e1a02006	 mov         r2, r6
  008f4	e59f102c	 ldr         r1, [pc, #0x2C]
  008f8	eb000000	 bl          CeLogMsg
  008fc		 |$LN96@PmInit|

; 459  : 
; 460  :     DEBUGCHK(fOk);      // make sure we raise a red flag if the init fails
; 461  : 
; 462  :     return fOk;

  008fc	e51b002c	 ldr         r0, [r11, #-0x2C]
  00900	eb000000	 bl          __security_check_cookie
  00904		 |$LN50@PmInit|

; 463  : }

  00904	e1a00006	 mov         r0, r6
  00908	e24bd028	 sub         sp, r11, #0x28
  0090c	e89d6ff0	 ldmia       sp, {r4 - r11, sp, lr}
  00910	e12fff1e	 bx          lr

			 ENDP  ; |PmInit|

  00914		 |$LN98@PmInit|
  00914		 |$LN134@PmInit|

; 375  :                 __except(EXCEPTION_EXECUTE_HANDLER) {

  00914	e52de004	 str         lr, [sp, #-4]!
  00918	e24dd008	 sub         sp, sp, #8
  0091c		 |$LN101@PmInit|
  0091c		 |$LN137@PmInit|
  0091c	e3a00001	 mov         r0, #1
  00920		 |$LN100@PmInit|
  00920	e28dd008	 add         sp, sp, #8
  00924	e49df004	 ldr         pc, [sp], #4
  00928		 |$LN139@PmInit|
  00928		 |$LN140@PmInit|
  00928	00000000	 DCD         |??_C@_1O@NDNKNHPJ@?$AAP?$AAm?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  0092c		 |$LN141@PmInit|
  0092c	00000000	 DCD         |??_C@_1CI@JMHLNJN@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00930		 |$LN142@PmInit|
  00930	00000000	 DCD         |??_C@_1CM@JOGFCBGM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAl?$AAo?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAa?$AAn?$AAd?$AAl?$AAe?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00934		 |$LN143@PmInit|
  00934	00000000	 DCD         |??_C@_1FG@OCCOMIBI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAa?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr@|
  00938		 |$LN144@PmInit|
  00938	00000000	 DCD         |??_C@_1EE@CIFABHGF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN@|
  0093c		 |$LN145@PmInit|
  0093c	00000000	 DCD         |??_C@_1EE@OMMAAAMF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN@|
  00940		 |$LN146@PmInit|
  00940	00000000	 DCD         |??_C@_1DO@JOHFJEDC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAP?$AAn?$AAP?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00944		 |$LN147@PmInit|
  00944	00000000	 DCD         |??_C@_1FG@LNDLJJOC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn@|
  00948		 |$LN148@PmInit|
  00948	00000000	 DCD         |??_C@_1EK@MHHINMNC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu@|
  0094c		 |$LN149@PmInit|
  0094c	00000000	 DCD         |SystemThreadProc|
  00950		 |$LN150@PmInit|
  00950	00000000	 DCD         |??_C@_1GM@IDDIFJJB@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  00954		 |$LN151@PmInit|
  00954	00000000	 DCD         |??_C@_1FK@JNPAFHHM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAk?$AAe?$AAy?$AA?5?$AA?$FL?$AAH?$AAK?$AAE?$AAY?$AA_?$AAL?$AAO?$AAC?$AAA?$AAL?$AA_?$AAM@|
  00958		 |$LN152@PmInit|
  00958	00000000	 DCD         |??_C@_1CG@KJJDOFJE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  0095c		 |$LN153@PmInit|
  0095c	00000000	 DCD         |??_C@_1BG@JEIALCGK@?$AAP?$AAM?$AAE?$AAx?$AAt?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  00960		 |$LN154@PmInit|
  00960	00000000	 DCD         |??_C@_1CE@FMDJOFIA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00964		 |$LN155@PmInit|
  00964	00000000	 DCD         |dpCurSettings|
  00968		 |$LN156@PmInit|
  00968	00000000	 DCD         |gpPMExtDeinit|
  0096c		 |$LN157@PmInit|
  0096c	00000000	 DCD         |??_C@_17DJMMGLBL@?$AAD?$AAl?$AAl?$AA?$AA@|
  00970		 |$LN158@PmInit|
  00970	00000000	 DCD         |??_C@_1EO@LDBCAAAG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAi?$AAn?$AA?5?$AAk?$AAe?$AAy?$AA?5@|
  00974		 |$LN159@PmInit|
  00974	00000000	 DCD         |??_C@_1BK@PBEIGBDA@?$AAP?$AAM?$AAE?$AAx?$AAt?$AA_?$AAD?$AAe?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  00978		 |$LN160@PmInit|
  00978	00000000	 DCD         |??_C@_1EA@PCHMNDCC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAG?$AAe?$AAt?$AAP?$AAr?$AAo?$AAc?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  0097c		 |$LN161@PmInit|
  0097c	00000000	 DCD         |??_C@_1FG@MFMHNBPH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAP?$AAM?$AAE?$AAx?$AAt?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AA?9?$AA?9?$AA?5@|
  00980		 |$LN162@PmInit|
  00980	00000000	 DCD         |??_C@_1M@OAJFFPML@?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?$AA@|
  00984		 |$LN163@PmInit|
  00984	00000000	 DCD         |??_C@_1HA@PHFPGFKF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAM?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt@|
  00988		 |$LN164@PmInit|
  00988	00000000	 DCD         |??_C@_1DM@GDOFDLJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  0098c		 |$LN165@PmInit|
  0098c	00000000	 DCD         |ActivityTimersThreadProc|
  00990		 |$LN166@PmInit|
  00990	00000000	 DCD         |ResumeThreadProc|
  00994		 |$LN167@PmInit|
  00994	00000000	 DCD         |PnpThreadProc|
  00998		 |$LN168@PmInit|
  00998	00000000	 DCD         |??_C@_1DK@HMANBMPF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  0099c		 |$LN169@PmInit|
  0099c	00000000	 DCD         |??_C@_1DC@OOKIINAM@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AAR?$AAe?$AAa?$AAd?$AAy?$AA?$AA@|
  009a0		 |$LN170@PmInit|
  009a0	00000000	 DCD         |??_C@_1EI@OEHMKAOO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr@|
  009a4		 |$LN171@PmInit|
  009a4	00000000	 DCD         |??_C@_1FK@KDNBKLHB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAP?$AAM?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?$CI?$AA?$CJ@|
  009a8		 |$LN172@PmInit|
  009a8	00000000	 DCD         |??_C@_1FM@CIIPHLJM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAs?$AAh?$AAu@|
  009ac		 |$LN173@PmInit|
  009ac	00000000	 DCD         |??_C@_1M@LFABOLDL@?$AA?$CL?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  009b0		 |$LN174@PmInit|
  009b0	00000000	 DCD         |__security_cookie|
  009b4		 |$LN138@PmInit|
  009b4		 |$LN136@PmInit|
	EXPORT	|PmNotify|
	EXPORT	|??_C@_1M@FKDMEONL@?$AA?9?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BC@BELJBPDP@?$AAP?$AAm?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@CKDJKBAK@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAh?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|DeleteProcessNotifications|
	IMPORT	|DeleteProcessRequirements|

  00000			 AREA	 |.pdata|, PDATA
|$T34849| DCD	|$LN13@PmNotify|
	DCD	0x40001a01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@FKDMEONL@?$AA?9?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "-", 0x0
	DCB	"%", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@BELJBPDP@?$AAP?$AAm?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$AA@| DCB "P"
	DCB	0x0, "m", 0x0, "N", 0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f"
	DCB	0x0, "y", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@CKDJKBAK@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAh?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "h", 0x0, "P"
	DCB	0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmNotify| PROC

; 473  : {

  00000		 |$LN13@PmNotify|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M34846|
  00004	e1a04001	 mov         r4, r1
  00008	e3500000	 cmp         r0, #0

; 474  : #ifndef SHIP_BUILD
; 475  :     SETFNAME(_T("PmNotify"));
; 476  : #endif
; 477  : 
; 478  :     UnusedParameter(hThread);
; 479  : 
; 480  :     switch(dwFlags) {

  0000c	1a00000f	 bne         |$LN9@PmNotify|

; 481  :     case DLL_PROCESS_DETACH:
; 482  :         // release any resources held by this process
; 483  :         PMLOGMSG(ZONE_API, (_T("+%s: hProcess 0x%08x exiting\r\n"), pszFname, hProcess));

  00010	e59f504c	 ldr         r5, [pc, #0x4C]
  00014	e5953440	 ldr         r3, [r5, #0x440]
  00018	e3130b02	 tst         r3, #2, 22
  0001c	159f003c	 ldrne       r0, [pc, #0x3C]
  00020	159f1030	 ldrne       r1, [pc, #0x30]
  00024	11a02004	 movne       r2, r4
  00028	1b000000	 blne        CeLogMsg

; 484  :         DeleteProcessRequirements(hProcess);

  0002c	e1a00004	 mov         r0, r4
  00030	eb000000	 bl          DeleteProcessRequirements

; 485  :         DeleteProcessNotifications(hProcess);

  00034	e1a00004	 mov         r0, r4
  00038	eb000000	 bl          DeleteProcessNotifications

; 486  :         PMLOGMSG(ZONE_API, (_T("-%s\r\n"), pszFname));

  0003c	e5953440	 ldr         r3, [r5, #0x440]
  00040	e3130b02	 tst         r3, #2, 22
  00044	159f0010	 ldrne       r0, [pc, #0x10]
  00048	159f1008	 ldrne       r1, [pc, #8]
  0004c	1b000000	 blne        CeLogMsg
  00050		 |$LN9@PmNotify|

; 487  :         break;
; 488  :     default:
; 489  :         break;
; 490  :     }
; 491  : }

  00050	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$LN14@PmNotify|
  00058		 |$LN15@PmNotify|
  00058	00000000	 DCD         |??_C@_1BC@BELJBPDP@?$AAP?$AAm?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$AA@|
  0005c		 |$LN16@PmNotify|
  0005c	00000000	 DCD         |??_C@_1M@FKDMEONL@?$AA?9?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00060		 |$LN17@PmNotify|
  00060	00000000	 DCD         |??_C@_1DO@CKDJKBAK@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAh?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@|
  00064		 |$LN18@PmNotify|
  00064	00000000	 DCD         |dpCurSettings|
  00068		 |$M34847|

			 ENDP  ; |PmNotify|

	EXPORT	|DllEntry|
	EXPORT	|??_C@_1IG@NJENGIBE@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAL?$AAL?$AA_?$AAP?$AAR?$AAO?$AAC?$AAE?$AAS?$AAS?$AA_?$AAD?$AAE?$AAT?$AAA?$AAC?$AAH?$AA?5?$AA?9?$AA?5?$AAC?$AAu?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@ICKAFFLD@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IG@DMCGIFIH@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAL?$AAL?$AA_?$AAP?$AAR?$AAO?$AAC?$AAE?$AAS?$AAS?$AA_?$AAA?$AAT?$AAT?$AAA?$AAC?$AAH?$AA?5?$AA?9?$AA?5?$AAC?$AAu?$AAr@| [ DATA ] ; `string'
	IMPORT	|DisableThreadLibraryCalls|
	IMPORT	|RegisterDbgZones|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T34885| DCD	|$LN25@DllEntry|
	DCD	0x40003501

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IG@NJENGIBE@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAL?$AAL?$AA_?$AAP?$AAR?$AAO?$AAC?$AAE?$AAS?$AAS?$AA_?$AAD?$AAE?$AAT?$AAA?$AAC?$AAH?$AA?5?$AA?9?$AA?5?$AAC?$AAu?$AAr@| DCB "*"
	DCB	0x0, "*", 0x0, "*", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, ":"
	DCB	0x0, " ", 0x0, "D", 0x0, "L", 0x0, "L", 0x0, "_", 0x0, "P"
	DCB	0x0, "R", 0x0, "O", 0x0, "C", 0x0, "E", 0x0, "S", 0x0, "S"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "T", 0x0, "A", 0x0, "C"
	DCB	0x0, "H", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "C", 0x0, "u"
	DCB	0x0, "r", 0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "I", 0x0, "D", 0x0, ":"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " "
	DCB	0x0, "*", 0x0, "*", 0x0, "*", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@ICKAFFLD@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "M"
	DCB	0x0, "a", 0x0, "n", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "r"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IG@DMCGIFIH@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAL?$AAL?$AA_?$AAP?$AAR?$AAO?$AAC?$AAE?$AAS?$AAS?$AA_?$AAA?$AAT?$AAT?$AAA?$AAC?$AAH?$AA?5?$AA?9?$AA?5?$AAC?$AAu?$AAr@| DCB "*"
	DCB	0x0, "*", 0x0, "*", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, ":"
	DCB	0x0, " ", 0x0, "D", 0x0, "L", 0x0, "L", 0x0, "_", 0x0, "P"
	DCB	0x0, "R", 0x0, "O", 0x0, "C", 0x0, "E", 0x0, "S", 0x0, "S"
	DCB	0x0, "_", 0x0, "A", 0x0, "T", 0x0, "T", 0x0, "A", 0x0, "C"
	DCB	0x0, "H", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "C", 0x0, "u"
	DCB	0x0, "r", 0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "I", 0x0, "D", 0x0, ":"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " "
	DCB	0x0, "*", 0x0, "*", 0x0, "*", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\evm_omap3530\src\drivers\pm\dll\pminit.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DllEntry| PROC

; 495  : {

  00000		 |$LN25@DllEntry|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M34882|
  00004	e3510000	 cmp         r1, #0
  00008	e1a05000	 mov         r5, r0

; 496  :     BOOL bRc = TRUE;
; 497  : 
; 498  : #ifndef SHIP_BUILD
; 499  :     SETFNAME(_T("Power Manager"));
; 500  : #endif
; 501  : 
; 502  :     UnusedParameter(hInst);
; 503  :     UnusedParameter(lpvReserved);
; 504  :     
; 505  :     switch (dwReason) {

  0000c	0a000013	 beq         |$LN3@DllEntry|
  00010	e3510001	 cmp         r1, #1
  00014	1a000026	 bne         |$LN5@DllEntry|

; 506  :     case DLL_PROCESS_ATTACH:
; 507  :         ghInst = (HINSTANCE) hInst;
; 508  :         RETAILREGISTERZONES(ghInst);    // zones in both debug and retail builds

  00018	e59f40ac	 ldr         r4, [pc, #0xAC]
  0001c	e59f309c	 ldr         r3, [pc, #0x9C]
  00020	e1a01004	 mov         r1, r4
  00024	e5835000	 str         r5, [r3]
  00028	eb000000	 bl          RegisterDbgZones

; 509  :         PMLOGMSG(ZONE_INIT,(TEXT("*** %s: DLL_PROCESS_ATTACH - Current Process: 0x%x, ID: 0x%x ***\r\n"),
; 510  :             pszFname, GetCurrentProcess(), GetCurrentProcessId()));

  0002c	e5943440	 ldr         r3, [r4, #0x440]
  00030	e3130004	 tst         r3, #4
  00034	0a000006	 beq         |$LN9@DllEntry|
  00038	e3a0000c	 mov         r0, #0xC
  0003c	eb000000	 bl          __GetUserKData
  00040	e59f1080	 ldr         r1, [pc, #0x80]
  00044	e1a03000	 mov         r3, r0
  00048	e59f0080	 ldr         r0, [pc, #0x80]
  0004c	e3a02042	 mov         r2, #0x42
  00050	eb000000	 bl          CeLogMsg
  00054		 |$LN9@DllEntry|

; 511  :         DisableThreadLibraryCalls((HMODULE) hInst);

  00054	e1a00005	 mov         r0, r5
  00058	eb000000	 bl          DisableThreadLibraryCalls

; 512  :         break;

  0005c	ea000014	 b           |$LN5@DllEntry|
  00060		 |$LN3@DllEntry|

; 513  :         
; 514  :     case DLL_PROCESS_DETACH:
; 515  :         PMLOGMSG(ZONE_INIT,(TEXT("*** %s: DLL_PROCESS_DETACH - Current Process: 0x%x, ID: 0x%x ***\r\n"),
; 516  :             pszFname, GetCurrentProcess(), GetCurrentProcessId()));

  00060	e59f3064	 ldr         r3, [pc, #0x64]
  00064	e5933440	 ldr         r3, [r3, #0x440]
  00068	e3130004	 tst         r3, #4
  0006c	0a000006	 beq         |$LN11@DllEntry|
  00070	e3a0000c	 mov         r0, #0xC
  00074	eb000000	 bl          __GetUserKData
  00078	e59f1048	 ldr         r1, [pc, #0x48]
  0007c	e1a03000	 mov         r3, r0
  00080	e59f003c	 ldr         r0, [pc, #0x3C]
  00084	e3a02042	 mov         r2, #0x42
  00088	eb000000	 bl          CeLogMsg
  0008c		 |$LN11@DllEntry|

; 517  :         if (g_pSysRegistryAccess != NULL)

  0008c	e59f402c	 ldr         r4, [pc, #0x2C]
  00090	e5940068	 ldr         r0, [r4, #0x68]
  00094	e3500000	 cmp         r0, #0

; 518  :             delete g_pSysRegistryAccess;

  00098	15903000	 ldrne       r3, [r0]
  0009c	13a01001	 movne       r1, #1
  000a0	15933004	 ldrne       r3, [r3, #4]
  000a4	11a0e00f	 movne       lr, pc
  000a8	112fff13	 bxne        r3

; 519  :         g_pSysRegistryAccess = NULL;

  000ac	e3a03000	 mov         r3, #0
  000b0	e5843068	 str         r3, [r4, #0x68]
  000b4		 |$LN5@DllEntry|

; 520  :         break;
; 521  :         
; 522  :     default:
; 523  :         break;
; 524  :     }
; 525  :    
; 526  :     return bRc;

  000b4	e3a00001	 mov         r0, #1

; 527  : }

  000b8	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000bc	e12fff1e	 bx          lr
  000c0		 |$LN26@DllEntry|
  000c0		 |$LN27@DllEntry|
  000c0	00000000	 DCD         |ghInst|
  000c4		 |$LN28@DllEntry|
  000c4	00000000	 DCD         |??_C@_1IG@NJENGIBE@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAL?$AAL?$AA_?$AAP?$AAR?$AAO?$AAC?$AAE?$AAS?$AAS?$AA_?$AAD?$AAE?$AAT?$AAA?$AAC?$AAH?$AA?5?$AA?9?$AA?5?$AAC?$AAu?$AAr@|
  000c8		 |$LN29@DllEntry|
  000c8	00000000	 DCD         |??_C@_1BM@ICKAFFLD@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?$AA@|
  000cc		 |$LN30@DllEntry|
  000cc	00000000	 DCD         |dpCurSettings|
  000d0		 |$LN31@DllEntry|
  000d0	00000000	 DCD         |??_C@_1IG@DMCGIFIH@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAL?$AAL?$AA_?$AAP?$AAR?$AAO?$AAC?$AAE?$AAS?$AAS?$AA_?$AAA?$AAT?$AAT?$AAA?$AAC?$AAH?$AA?5?$AA?9?$AA?5?$AAC?$AAu?$AAr@|
  000d4		 |$M34883|

			 ENDP  ; |DllEntry|

	END
