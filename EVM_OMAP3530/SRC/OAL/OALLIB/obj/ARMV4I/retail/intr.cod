; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\EVM_OMAP3530\SRC\OAL\OALLIB\intr.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|RegisterPrcmInterruptHandler|
	EXPORT	|??_C@_1IM@BFMLCNLK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAP?$AAr?$AAc?$AAm?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd@| [ DATA ] ; `string'
	IMPORT	|PrcmInterruptEnable|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
	IMPORT	|OEMInterruptEnable|
	IMPORT	|OALIntrRequestSysIntr|
	IMPORT	|PrcmInterruptClearStatus|
	IMPORT	|g_oalPrcmIrq|
; File c:\wince600\platform\evm_omap3530\src\oal\oallib\intr.c

  00000			 AREA	 |.pdata|, PDATA
|$T47350| DCD	|$LN8@RegisterPr|
	DCD	0x40002201

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IM@BFMLCNLK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAP?$AAr?$AAc?$AAm?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "R", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "P", 0x0, "r", 0x0, "c", 0x0, "m"
	DCB	0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, "H", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, " ", 0x0, "e", 0x0, "n"
	DCB	0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, " ", 0x0, "f"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "P", 0x0, "R", 0x0, "C"
	DCB	0x0, "M", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |RegisterPrcmInterruptHandler| PROC

; 67   : {

  00000		 |$LN8@RegisterPr|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M47347|

; 68   :     UINT32 sysIntr;
; 69   :     BOOL rc = FALSE;
; 70   :     
; 71   :     // enable PRCM iterrupts
; 72   :     g_oalPrcmIrq = IRQ_PRCM_MPU;

  00004	e59f4078	 ldr         r4, [pc, #0x78]
  00008	e3a0300b	 mov         r3, #0xB

; 73   : 
; 74   :     // clear status
; 75   :     PrcmInterruptClearStatus(0xFFFFFFFF);

  0000c	e3e00000	 mvn         r0, #0
  00010	e5843000	 str         r3, [r4]
  00014	e3a05000	 mov         r5, #0
  00018	eb000000	 bl          PrcmInterruptClearStatus

; 76   : 
; 77   :     // Request SYSINTR for timer IRQ, it is done to reserve it...
; 78   :     sysIntr = OALIntrRequestSysIntr(1, &g_oalPrcmIrq, OAL_INTR_FORCE_STATIC);

  0001c	e3a02004	 mov         r2, #4
  00020	e1a01004	 mov         r1, r4
  00024	e3a00001	 mov         r0, #1
  00028	eb000000	 bl          OALIntrRequestSysIntr

; 79   : 
; 80   :     // Enable System Tick interrupt
; 81   :     if (!OEMInterruptEnable(sysIntr, NULL, 0))

  0002c	e3a02000	 mov         r2, #0
  00030	e3a01000	 mov         r1, #0
  00034	eb000000	 bl          OEMInterruptEnable
  00038	e3500000	 cmp         r0, #0
  0003c	1a000006	 bne         |$LN1@RegisterPr|

; 82   :         {
; 83   :         OALMSG(OAL_ERROR, (
; 84   :             L"ERROR: RegisterPrcmInterruptHandler: "
; 85   :             L"Interrupt enable for PRCM failed"
; 86   :             ));

  00040	e59f3038	 ldr         r3, [pc, #0x38]
  00044	e5933440	 ldr         r3, [r3, #0x440]
  00048	e3130001	 tst         r3, #1
  0004c	0a000006	 beq         |$cleanUp$47290|
  00050	e59f0024	 ldr         r0, [pc, #0x24]
  00054	eb000000	 bl          NKDbgPrintfW

; 87   :         goto cleanUp;

  00058	ea000003	 b           |$cleanUp$47290|
  0005c		 |$LN1@RegisterPr|

; 88   :         }
; 89   : 
; 90   :     // enable some prcm interrupts, others should be enabled as needed
; 91   :     PrcmInterruptEnable(
; 92   :         //PRM_IRQENABLE_WKUP_EN |
; 93   :         PRM_IRQENABLE_MPU_DPLL_RECAL_EN |
; 94   :         PRM_IRQENABLE_CORE_DPLL_RECAL_EN |
; 95   :         //PRM_IRQENABLE_PERIPH_DPLL_RECAL_EN |
; 96   :         //PRM_IRQENABLE_IVA2_DPLL_RECAL_EN_MPU |
; 97   :         //PRM_IRQENABLE_SND_PERIPH_DPLL_RECAL_EN |
; 98   :         PRM_IRQENABLE_VP1_OPPCHANGEDONE_EN |
; 99   :         PRM_IRQENABLE_VP2_OPPCHANGEDONE_EN |
; 100  :         PRM_IRQENABLE_VP1_NOSMPSACK_EN |
; 101  :         PRM_IRQENABLE_VP2_NOSMPSACK_EN |
; 102  :         PRM_IRQENABLE_VC_SAERR_EN |
; 103  :         PRM_IRQENABLE_VC_RAERR_EN |
; 104  :         PRM_IRQENABLE_VC_TIMEOUTERR_EN |
; 105  :         PRM_IRQENABLE_IO_EN ,
; 106  :         TRUE
; 107  :         );

  0005c	e59f0014	 ldr         r0, [pc, #0x14]
  00060	e3a01001	 mov         r1, #1
  00064	eb000000	 bl          PrcmInterruptEnable

; 108  :    
; 109  :     rc = TRUE;

  00068	e3a05001	 mov         r5, #1
  0006c		 |$cleanUp$47290|

; 110  : 
; 111  : cleanUp:
; 112  :     return rc;
; 113  : }

  0006c	e1a00005	 mov         r0, r5
  00070	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$LN9@RegisterPr|
  00078		 |$LN10@RegisterPr|
  00078	01c926a0	 DCD         0x1c926a0
  0007c		 |$LN11@RegisterPr|
  0007c	00000000	 DCD         |??_C@_1IM@BFMLCNLK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAP?$AAr?$AAc?$AAm?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd@|
  00080		 |$LN12@RegisterPr|
  00080	00000000	 DCD         |dpCurSettings|
  00084		 |$LN13@RegisterPr|
  00084	00000000	 DCD         |g_oalPrcmIrq|
  00088		 |$M47348|

			 ENDP  ; |RegisterPrcmInterruptHandler|

	EXPORT	|BSPIntrInit|
	IMPORT	|OALIntrStaticTranslate|
	IMPORT	|BSPGetGpioIrq|

  00000			 AREA	 |.pdata|, PDATA
|$T47364| DCD	|$LN5@BSPIntrIni|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BSPIntrInit| PROC

; 125  : {    

  00000		 |$LN5@BSPIntrIni|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M47361|

; 126  :     
; 127  :     // Associate the External LAN Irq with a fixed sysintr.
; 128  :     // The reason is that the LAN irq is greater than 255 and that is not 
; 129  :     // suported by NDIS
; 130  :     OALIntrStaticTranslate(SYSINTR_LAN9115, BSPGetGpioIrq(LAN9115_IRQ_GPIO));

  00004	e3a000b0	 mov         r0, #0xB0
  00008	eb000000	 bl          BSPGetGpioIrq
  0000c	e1a01000	 mov         r1, r0
  00010	e3a00010	 mov         r0, #0x10
  00014	eb000000	 bl          OALIntrStaticTranslate

; 131  : 
; 132  :     return RegisterPrcmInterruptHandler();

  00018	eb000000	 bl          RegisterPrcmInterruptHandler

; 133  : }

  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M47362|

			 ENDP  ; |BSPIntrInit|

	EXPORT	|BSPIntrRequestIrqs|
	EXPORT	|??_C@_1DM@POOLLMMJ@?$AA?9?$AAB?$AAS?$AAP?$AAI?$AAn?$AAt?$AAr?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAI?$AAr?$AAq?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@PDLDOEEM@?$AA?$CL?$AAB?$AAS?$AAP?$AAI?$AAn?$AAt?$AAr?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAI?$AAr?$AAq?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?9?$AA?$DO?$AA?$CF?$AAd?$AA?1?$AA?$CF?$AAd@| [ DATA ] ; `string'
	IMPORT	|GPIOClose|
	IMPORT	|GPIOSetMode|
	IMPORT	|GPIOOpen|

  00000			 AREA	 |.pdata|, PDATA
|$T47383| DCD	|$LN18@BSPIntrReq|
	DCD	0x40003b02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@POOLLMMJ@?$AA?9?$AAB?$AAS?$AAP?$AAI?$AAn?$AAt?$AAr?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAI?$AAr?$AAq?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "B", 0x0, "S", 0x0, "P", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "("
	DCB	0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@PDLDOEEM@?$AA?$CL?$AAB?$AAS?$AAP?$AAI?$AAn?$AAt?$AAr?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAI?$AAr?$AAq?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?9?$AA?$DO?$AA?$CF?$AAd?$AA?1?$AA?$CF?$AAd@| DCB "+"
	DCB	0x0, "B", 0x0, "S", 0x0, "P", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, "-", 0x0, ">", 0x0, "%", 0x0, "d", 0x0, "/", 0x0, "%"
	DCB	0x0, "d", 0x0, "/", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, "/", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BSPIntrRequestIrqs| PROC

; 149  : {

  00000		 |$LN18@BSPIntrReq|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M47380|
  00008	e1a08002	 mov         r8, r2
  0000c	e1a09001	 mov         r9, r1
  00010	e1a06000	 mov         r6, r0

; 150  :     BOOL rc = FALSE;
; 151  : 
; 152  :     OALMSG(OAL_INTR&&OAL_FUNC, (
; 153  :         L"+BSPIntrRequestIrq(0x%08x->%d/%d/0x%08x/%d, 0x%08x)\r\n", pDevLoc, 
; 154  :         pDevLoc->IfcType, pDevLoc->BusNumber, pDevLoc->LogicalLoc,
; 155  :         pDevLoc->Pin, pIrq
; 156  :         ));

  00014	e59f70cc	 ldr         r7, [pc, #0xCC]
  00018	e3a05000	 mov         r5, #0
  0001c	e597e440	 ldr         lr, [r7, #0x440]
  00020	e31e0901	 tst         lr, #1, 18
  00024	0a00000c	 beq         |$LN11@BSPIntrReq|
  00028	e31e0004	 tst         lr, #4
  0002c	0a00000a	 beq         |$LN11@BSPIntrReq|
  00030	e596e010	 ldr         lr, [r6, #0x10]
  00034	e5964008	 ldr         r4, [r6, #8]
  00038	e5963004	 ldr         r3, [r6, #4]
  0003c	e5962000	 ldr         r2, [r6]
  00040	e59f009c	 ldr         r0, [pc, #0x9C]
  00044	e1a01006	 mov         r1, r6
  00048	e58de004	 str         lr, [sp, #4]
  0004c	e58d4000	 str         r4, [sp]
  00050	e58d8008	 str         r8, [sp, #8]
  00054	eb000000	 bl          NKDbgPrintfW
  00058	e597e440	 ldr         lr, [r7, #0x440]
  0005c		 |$LN11@BSPIntrReq|

; 157  : 
; 158  :     switch (pDevLoc->IfcType)

  0005c	e5963000	 ldr         r3, [r6]
  00060	e3530000	 cmp         r3, #0
  00064	1a000014	 bne         |$LN1@BSPIntrReq|

; 159  :         {
; 160  :         case Internal:
; 161  :             switch ((ULONG)pDevLoc->LogicalLoc)

  00068	e5963008	 ldr         r3, [r6, #8]
  0006c	e3530415	 cmp         r3, #0x15, 8
  00070	1a000011	 bne         |$LN1@BSPIntrReq|

; 162  :                 {
; 163  :                 case BSP_LAN9115_REGS_PA:
; 164  :                     {
; 165  :                         HANDLE hGPIO;
; 166  :                         hGPIO = GPIOOpen();

  00074	eb000000	 bl          GPIOOpen
  00078	e1b04000	 movs        r4, r0

; 167  :                         if (hGPIO)

  0007c	0a00000c	 beq         |$LN2@BSPIntrReq|

; 168  :                         {
; 169  :                             GPIOSetMode(hGPIO, LAN9115_IRQ_GPIO,GPIO_DIR_INPUT | GPIO_INT_LOW);

  00080	e3a02009	 mov         r2, #9
  00084	e3a010b0	 mov         r1, #0xB0
  00088	e1a00004	 mov         r0, r4
  0008c	eb000000	 bl          GPIOSetMode

; 170  :                             GPIOClose(hGPIO);

  00090	e1a00004	 mov         r0, r4
  00094	eb000000	 bl          GPIOClose

; 171  :                             *pCount = 1;

  00098	e3a03001	 mov         r3, #1

; 172  :                             *pIrq = BSPGetGpioIrq(LAN9115_IRQ_GPIO);

  0009c	e3a000b0	 mov         r0, #0xB0
  000a0	e5893000	 str         r3, [r9]
  000a4	eb000000	 bl          BSPGetGpioIrq
  000a8	e5880000	 str         r0, [r8]

; 173  :                             rc = TRUE;
; 174  :                         }
; 175  :                         else

  000ac	e3a05001	 mov         r5, #1
  000b0	ea000000	 b           |$LN15@BSPIntrReq|
  000b4		 |$LN2@BSPIntrReq|

; 176  :                         {
; 177  :                             rc = FALSE;

  000b4	e3a05000	 mov         r5, #0
  000b8		 |$LN15@BSPIntrReq|
  000b8	e597e440	 ldr         lr, [r7, #0x440]
  000bc		 |$LN1@BSPIntrReq|

; 178  :                         }
; 179  :                     }
; 180  :                     break;
; 181  :                 }
; 182  :             break;
; 183  :         }
; 184  : 
; 185  :     OALMSG(OAL_INTR&&OAL_FUNC, (L"-BSPIntrRequestIrq(rc = %d)\r\n", rc));

  000bc	e31e0901	 tst         lr, #1, 18
  000c0	131e0004	 tstne       lr, #4
  000c4	159f0014	 ldrne       r0, [pc, #0x14]
  000c8	11a01005	 movne       r1, r5
  000cc	1b000000	 blne        NKDbgPrintfW

; 186  : 
; 187  :     return rc;
; 188  : }

  000d0	e1a00005	 mov         r0, r5
  000d4	e28dd00c	 add         sp, sp, #0xC
  000d8	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  000dc	e12fff1e	 bx          lr
  000e0		 |$LN19@BSPIntrReq|
  000e0		 |$LN20@BSPIntrReq|
  000e0	00000000	 DCD         |??_C@_1DM@POOLLMMJ@?$AA?9?$AAB?$AAS?$AAP?$AAI?$AAn?$AAt?$AAr?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAI?$AAr?$AAq?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  000e4		 |$LN21@BSPIntrReq|
  000e4	00000000	 DCD         |??_C@_1GM@PDLDOEEM@?$AA?$CL?$AAB?$AAS?$AAP?$AAI?$AAn?$AAt?$AAr?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAI?$AAr?$AAq?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?9?$AA?$DO?$AA?$CF?$AAd?$AA?1?$AA?$CF?$AAd@|
  000e8		 |$LN22@BSPIntrReq|
  000e8	00000000	 DCD         |dpCurSettings|
  000ec		 |$M47381|

			 ENDP  ; |BSPIntrRequestIrqs|

	END
