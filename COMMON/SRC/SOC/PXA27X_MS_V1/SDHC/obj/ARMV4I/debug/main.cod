; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\PXA27X_MS_V1\SDHC\main.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|dpCurSettings| [ DATA ]

  00000			 AREA	 |.data|, DATA
|dpCurSettings| DCB "P", 0x0, "X", 0x0, "A", 0x0, "2", 0x0, "7", 0x0, "X", 0x0
	DCB	" ", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, " ", 0x0
	DCB	"D", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r", 0x0
	DCB	0x0, 0x0
	%	26
	DCB	"I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0
	DCB	"u", 0x0, "p", 0x0, "t", 0x0, "s", 0x0, 0x0, 0x0
	%	42
	DCB	"S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, " ", 0x0, "H", 0x0
	DCB	"a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r", 0x0
	DCB	" ", 0x0, 0x0, 0x0
	%	36
	DCB	"R", 0x0, "e", 0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n", 0x0
	DCB	"s", 0x0, "e", 0x0, "s", 0x0, 0x0, 0x0
	%	44
	DCB	"R", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0
	DCB	"e", 0x0, " ", 0x0, "D", 0x0, "a", 0x0, "t", 0x0, "a", 0x0
	DCB	0x0, 0x0
	%	38
	DCB	"C", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " ", 0x0
	DCB	"C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0
	DCB	"l", 0x0, 0x0, 0x0
	%	36
	DCB	"T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m", 0x0
	DCB	"i", 0x0, "t", 0x0, " ", 0x0, "D", 0x0, "a", 0x0, "t", 0x0
	DCB	"a", 0x0, 0x0, 0x0
	%	36
	DCB	"F", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i", 0x0
	DCB	"o", 0x0, "n", 0x0, 0x0, 0x0
	%	46
	DCB	"S", 0x0, "D", 0x0, "B", 0x0, "u", 0x0, "s", 0x0, " ", 0x0
	DCB	"I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "a", 0x0
	DCB	"c", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, 0x0, 0x0
	%	28
	DCB	0x0, 0x0
	%	62
	DCB	0x0, 0x0
	%	62
	DCB	0x0, 0x0
	%	62
	DCB	"F", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i", 0x0
	DCB	"o", 0x0, "n", 0x0, "s", 0x0, 0x0, 0x0
	%	44
	DCB	"I", 0x0, "n", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, "m", 0x0
	DCB	"a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, 0x0, 0x0
	%	40
	DCB	"I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0x0, 0x0
	%	54
	DCB	"W", 0x0, "a", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0
	DCB	"g", 0x0, "s", 0x0, 0x0, 0x0
	%	46
	DCB	"E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, "s", 0x0
	DCB	0x0, 0x0
	%	50
	DCD	0xe000
	EXPORT	|DllEntry|
	IMPORT	|SDHCDDeinitializeHCLib|
	IMPORT	|SDDeinitializeCardLib|
	IMPORT	|SDHCDInitializeHCLib|
	IMPORT	|SDInitializeCardLib|
	IMPORT	|DisableThreadLibraryCalls|
	IMPORT	|RegisterDbgZones|

  00000			 AREA	 |.pdata|, PDATA
|$T43044| DCD	|$LN10@DllEntry|
	DCD	0x40002a04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\sdhc\main.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DllEntry| PROC

; 71   : {

  00000		 |$LN10@DllEntry|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M43041|

; 72   :     if ( Reason == DLL_PROCESS_ATTACH ) {

  00010	e59d3018	 ldr         r3, [sp, #0x18]
  00014	e3530001	 cmp         r3, #1
  00018	1a000016	 bne         |$LN5@DllEntry|

; 73   :         SD_DEBUG_ZONE_REGISTER(hInstance, SDH_REGISTRY_BASE_PATH);

  0001c	e59f1080	 ldr         r1, [pc, #0x80]
  00020	e59d0014	 ldr         r0, [sp, #0x14]
  00024	eb000000	 bl          RegisterDbgZones

; 74   :         DisableThreadLibraryCalls( (HMODULE) hInstance );

  00028	e59d0014	 ldr         r0, [sp, #0x14]
  0002c	eb000000	 bl          DisableThreadLibraryCalls

; 75   : 
; 76   :         if( !SDInitializeCardLib() )

  00030	eb000000	 bl          SDInitializeCardLib
  00034	e58d0004	 str         r0, [sp, #4]
  00038	e59d3004	 ldr         r3, [sp, #4]
  0003c	e3530000	 cmp         r3, #0
  00040	1a000003	 bne         |$LN4@DllEntry|

; 77   :         {
; 78   :             return FALSE;

  00044	e3a03000	 mov         r3, #0
  00048	e58d3000	 str         r3, [sp]
  0004c	ea000010	 b           |$LN6@DllEntry|
  00050	ea000008	 b           |$LN3@DllEntry|
  00054		 |$LN4@DllEntry|

; 79   :         }
; 80   :         else if( !SD_API_SUCCESS( SDHCDInitializeHCLib() ) ) 

  00054	eb000000	 bl          SDHCDInitializeHCLib
  00058	e58d0008	 str         r0, [sp, #8]
  0005c	e59d3008	 ldr         r3, [sp, #8]
  00060	e3530000	 cmp         r3, #0
  00064	aa000003	 bge         |$LN2@DllEntry|

; 81   :         {
; 82   :             SDDeinitializeCardLib();

  00068	eb000000	 bl          SDDeinitializeCardLib

; 83   :             return FALSE;

  0006c	e3a03000	 mov         r3, #0
  00070	e58d3000	 str         r3, [sp]
  00074	ea000006	 b           |$LN6@DllEntry|
  00078		 |$LN2@DllEntry|
  00078		 |$LN3@DllEntry|
  00078		 |$LN5@DllEntry|

; 84   :         }
; 85   :     }
; 86   : 
; 87   :     if ( Reason == DLL_PROCESS_DETACH ) {

  00078	e59d3018	 ldr         r3, [sp, #0x18]
  0007c	e3530000	 cmp         r3, #0
  00080	1a000001	 bne         |$LN1@DllEntry|

; 88   :         SDHCDDeinitializeHCLib();

  00084	eb000000	 bl          SDHCDDeinitializeHCLib

; 89   :         SDDeinitializeCardLib();

  00088	eb000000	 bl          SDDeinitializeCardLib
  0008c		 |$LN1@DllEntry|

; 90   :     }
; 91   : 
; 92   :     return(TRUE);

  0008c	e3a03001	 mov         r3, #1
  00090	e58d3000	 str         r3, [sp]
  00094		 |$LN6@DllEntry|

; 93   : }

  00094	e59d0000	 ldr         r0, [sp]
  00098	e28dd00c	 add         sp, sp, #0xC
  0009c	e89d6000	 ldmia       sp, {sp, lr}
  000a0	e12fff1e	 bx          lr
  000a4		 |$LN11@DllEntry|
  000a4		 |$LN12@DllEntry|
  000a4	00000000	 DCD         |dpCurSettings|
  000a8		 |$M43042|

			 ENDP  ; |DllEntry|

	EXPORT	|??_C@_1CE@JLECHMAP@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AAS?$AAD?$AAH?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|SDH_Deinit|
	IMPORT	|SDHCDDeleteContext|
	IMPORT	|free|
	IMPORT	|SDHCDDeregisterHostController|
	IMPORT	|SDCardDebugOutput|

  00008			 AREA	 |.pdata|, PDATA
|$T43054| DCD	|$LN8@SDH_Deinit|
	DCD	0x40002904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@JLECHMAP@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AAS?$AAD?$AAH?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, ":", 0x0, " ", 0x0, "+", 0x0, "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "_", 0x0, "D", 0x0, "e", 0x0, "i"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  000a8			 AREA	 |.text|, CODE, ARM

  000a8		 |SDH_Deinit| PROC

; 105  : {

  000a8		 |$LN8@SDH_Deinit|
  000a8	e1a0c00d	 mov         r12, sp
  000ac	e92d0001	 stmdb       sp!, {r0}
  000b0	e92d5000	 stmdb       sp!, {r12, lr}
  000b4	e24dd00c	 sub         sp, sp, #0xC
  000b8		 |$M43051|

; 106  :     PSDCARD_HC_CONTEXT pHostContext;
; 107  : 
; 108  :     DbgPrintZo(SDCARD_ZONE_INIT, (TEXT("SDH: +SDH_Deinit\n")));

  000b8	e59f3088	 ldr         r3, [pc, #0x88]
  000bc	e5933440	 ldr         r3, [r3, #0x440]
  000c0	e3130a02	 tst         r3, #2, 20
  000c4	0a000004	 beq         |$LN4@SDH_Deinit|
  000c8	e59f0074	 ldr         r0, [pc, #0x74]
  000cc	eb000000	 bl          SDCardDebugOutput
  000d0	e3a03001	 mov         r3, #1
  000d4	e58d3008	 str         r3, [sp, #8]
  000d8	ea000001	 b           |$LN5@SDH_Deinit|
  000dc		 |$LN4@SDH_Deinit|
  000dc	e3a03000	 mov         r3, #0
  000e0	e58d3008	 str         r3, [sp, #8]
  000e4		 |$LN5@SDH_Deinit|

; 109  : 
; 110  :     pHostContext = (PSDCARD_HC_CONTEXT)hDeviceContext;

  000e4	e59d3014	 ldr         r3, [sp, #0x14]
  000e8	e58d3000	 str         r3, [sp]

; 111  : 
; 112  :         // deregister the host controller
; 113  :     SDHCDDeregisterHostController(pHostContext);

  000ec	e59d0000	 ldr         r0, [sp]
  000f0	eb000000	 bl          SDHCDDeregisterHostController

; 114  : 
; 115  :     if( pHostContext && pHostContext->pHCSpecificContext )

  000f4	e59d3000	 ldr         r3, [sp]
  000f8	e3530000	 cmp         r3, #0
  000fc	0a000008	 beq         |$LN1@SDH_Deinit|
  00100	e59d3000	 ldr         r3, [sp]
  00104	e283304c	 add         r3, r3, #0x4C
  00108	e5933000	 ldr         r3, [r3]
  0010c	e3530000	 cmp         r3, #0
  00110	0a000003	 beq         |$LN1@SDH_Deinit|

; 116  :     {
; 117  :         free( pHostContext->pHCSpecificContext );

  00114	e59d3000	 ldr         r3, [sp]
  00118	e283304c	 add         r3, r3, #0x4C
  0011c	e5930000	 ldr         r0, [r3]
  00120	eb000000	 bl          free
  00124		 |$LN1@SDH_Deinit|

; 118  :     }
; 119  : 
; 120  :         // cleanup the context
; 121  :     SDHCDDeleteContext((PSDCARD_HC_CONTEXT)hDeviceContext);

  00124	e59d0014	 ldr         r0, [sp, #0x14]
  00128	eb000000	 bl          SDHCDDeleteContext

; 122  : 
; 123  :     return TRUE;

  0012c	e3a03001	 mov         r3, #1
  00130	e58d3004	 str         r3, [sp, #4]

; 124  : }

  00134	e59d0004	 ldr         r0, [sp, #4]
  00138	e28dd00c	 add         sp, sp, #0xC
  0013c	e89d6000	 ldmia       sp, {sp, lr}
  00140	e12fff1e	 bx          lr
  00144		 |$LN9@SDH_Deinit|
  00144		 |$LN10@SDH_Deinit|
  00144	00000000	 DCD         |??_C@_1CE@JLECHMAP@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AAS?$AAD?$AAH?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?6?$AA?$AA@|
  00148		 |$LN11@SDH_Deinit|
  00148	00000000	 DCD         |dpCurSettings|
  0014c		 |$M43052|

			 ENDP  ; |SDH_Deinit|

	EXPORT	|??_C@_1CA@JKCNMIMC@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?9?$AAS?$AAD?$AAH?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@PAHBKKMJ@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAh?$AAo?$AAs?$AAt?$AA?5?$AAc?$AAo?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@IOCDNFIL@?$AAL?$AAu?$AAb?$AAb?$AAo?$AAc?$AAk?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@GEGBKBPH@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AAR?$AAe?$AAa?$AAl?$AA?5?$AAR?$AAe?$AAg?$AAP?$AAa?$AAt?$AAh?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@BNHGBKMF@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?5?$AAs?$AAe@| [ DATA ] ; `string'
	EXPORT	|LoadRegistrySettings|
	EXPORT	|??_C@_1EG@NCODLPJM@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAe?$AAx?$AAt?$AAe?$AAn?$AAs?$AAi?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@MJLECAFI@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@IBMJAKBI@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAR?$AAe?$AAg?$AAP?$AAa?$AAt?$AAh?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@OINMJCEC@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AAS?$AAD?$AAH?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|SDH_Init|
	IMPORT	|SDHCDRegisterHostController|
	IMPORT	|SDHSlotOptionHandler|
	IMPORT	|SDHCancelIoHandler|
	IMPORT	|SDHBusRequestHandler|
	IMPORT	|SDDeinitialize|
	IMPORT	|SDInitialize|
	IMPORT	|wcsncpy|
	IMPORT	|RegCloseKey|
	IMPORT	|OpenDeviceKey|
	IMPORT	|CreateBusAccessHandle|
	IMPORT	|memset|
	IMPORT	|malloc|
	IMPORT	|SDHCDAllocateContext|

  00010			 AREA	 |.pdata|, PDATA
|$T43079| DCD	|$LN27@SDH_Init|
	DCD	0x4000ed04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@JKCNMIMC@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?9?$AAS?$AAD?$AAH?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, ":", 0x0, " ", 0x0, "-", 0x0, "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@PAHBKKMJ@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAh?$AAo?$AAs?$AAt?$AA?5?$AAc?$AAo?$AAn@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "h"
	DCB	0x0, "o", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "0"
	DCB	0x0, "x", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, " ", 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@IOCDNFIL@?$AAL?$AAu?$AAb?$AAb?$AAo?$AAc?$AAk?$AA?$AA@| DCB "L", 0x0
	DCB	"u", 0x0, "b", 0x0, "b", 0x0, "o", 0x0, "c", 0x0, "k", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@GEGBKBPH@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AAR?$AAe?$AAa?$AAl?$AA?5?$AAR?$AAe?$AAg?$AAP?$AAa?$AAt?$AAh?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "a", 0x0, "l", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "P", 0x0, "a", 0x0, "t", 0x0, "h", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@BNHGBKMF@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?5?$AAs?$AAe@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "l"
	DCB	0x0, "o", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "e", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "s", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@NCODLPJM@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAe?$AAx?$AAt?$AAe?$AAn?$AAs?$AAi?$AAo@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "e"
	DCB	0x0, "x", 0x0, "t", 0x0, "e", 0x0, "n", 0x0, "s", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@MJLECAFI@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?5@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, " ", 0x0, ":", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, " ", 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@IBMJAKBI@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAR?$AAe?$AAg?$AAP?$AAa?$AAt?$AAh?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, ":", 0x0, " ", 0x0, "A", 0x0, "c"
	DCB	0x0, "t", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, " ", 0x0, "R"
	DCB	0x0, "e", 0x0, "g", 0x0, "P", 0x0, "a", 0x0, "t", 0x0, "h"
	DCB	0x0, ":", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " ", 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@OINMJCEC@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AAS?$AAD?$AAH?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, ":", 0x0, " ", 0x0, "+", 0x0, "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  0014c			 AREA	 |.text|, CODE, ARM

  0014c		 |SDH_Init| PROC

; 134  : {

  0014c		 |$LN27@SDH_Init|
  0014c	e1a0c00d	 mov         r12, sp
  00150	e92d0001	 stmdb       sp!, {r0}
  00154	e92d5000	 stmdb       sp!, {r12, lr}
  00158	e24dd050	 sub         sp, sp, #0x50
  0015c		 |$M43076|

; 135  :     PSDCARD_HC_CONTEXT      pHostContext;   // new HC context
; 136  :     SD_API_STATUS           status;         // SD status
; 137  :     PSDH_HARDWARE_CONTEXT pController;    // new instance
; 138  :     HKEY hKeyDevice;
; 139  :     LPCTSTR pszActiveKey;
; 140  : 
; 141  :     DbgPrintZo(SDCARD_ZONE_INIT, (TEXT("SDH: +SDH_Init\n")));    

  0015c	e59f3364	 ldr         r3, [pc, #0x364]
  00160	e5933440	 ldr         r3, [r3, #0x440]
  00164	e3130a02	 tst         r3, #2, 20
  00168	0a000004	 beq         |$LN9@SDH_Init|
  0016c	e59f0388	 ldr         r0, [pc, #0x388]
  00170	eb000000	 bl          SDCardDebugOutput
  00174	e3a03001	 mov         r3, #1
  00178	e58d3018	 str         r3, [sp, #0x18]
  0017c	ea000001	 b           |$LN10@SDH_Init|
  00180		 |$LN9@SDH_Init|
  00180	e3a03000	 mov         r3, #0
  00184	e58d3018	 str         r3, [sp, #0x18]
  00188		 |$LN10@SDH_Init|

; 142  : 
; 143  :     DbgPrintZo(SDCARD_ZONE_INIT, (TEXT("SDH: Active RegPath: %s \n"),
; 144  :         (PTSTR)dwContext));

  00188	e59f3338	 ldr         r3, [pc, #0x338]
  0018c	e5933440	 ldr         r3, [r3, #0x440]
  00190	e3130a02	 tst         r3, #2, 20
  00194	0a000005	 beq         |$LN11@SDH_Init|
  00198	e59d1058	 ldr         r1, [sp, #0x58]
  0019c	e59f0354	 ldr         r0, [pc, #0x354]
  001a0	eb000000	 bl          SDCardDebugOutput
  001a4	e3a03001	 mov         r3, #1
  001a8	e58d301c	 str         r3, [sp, #0x1C]
  001ac	ea000001	 b           |$LN12@SDH_Init|
  001b0		 |$LN11@SDH_Init|
  001b0	e3a03000	 mov         r3, #0
  001b4	e58d301c	 str         r3, [sp, #0x1C]
  001b8		 |$LN12@SDH_Init|

; 145  : 
; 146  :     pController = NULL;

  001b8	e3a03000	 mov         r3, #0
  001bc	e58d300c	 str         r3, [sp, #0xC]

; 147  : 
; 148  :     // allocate the context
; 149  :     status = SDHCDAllocateContext(SDH_SLOTS, 
; 150  :                                   &pHostContext);

  001c0	e28d1000	 add         r1, sp, #0
  001c4	e3a00001	 mov         r0, #1
  001c8	eb000000	 bl          SDHCDAllocateContext
  001cc	e58d0020	 str         r0, [sp, #0x20]
  001d0	e59d3020	 ldr         r3, [sp, #0x20]
  001d4	e58d3004	 str         r3, [sp, #4]

; 151  : 
; 152  :     if (!SD_API_SUCCESS(status)) {

  001d8	e59d3004	 ldr         r3, [sp, #4]
  001dc	e3530000	 cmp         r3, #0
  001e0	aa00000e	 bge         |$LN6@SDH_Init|

; 153  :         DbgPrintZo(SDCARD_ZONE_ERROR, 
; 154  :             (TEXT("SDH: Failed to allocate context : 0x%08X \n"), status));

  001e4	e59f32dc	 ldr         r3, [pc, #0x2DC]
  001e8	e5933440	 ldr         r3, [r3, #0x440]
  001ec	e3130902	 tst         r3, #2, 18
  001f0	0a000005	 beq         |$LN13@SDH_Init|
  001f4	e59d1004	 ldr         r1, [sp, #4]
  001f8	e59f02f4	 ldr         r0, [pc, #0x2F4]
  001fc	eb000000	 bl          SDCardDebugOutput
  00200	e3a03001	 mov         r3, #1
  00204	e58d3024	 str         r3, [sp, #0x24]
  00208	ea000001	 b           |$LN14@SDH_Init|
  0020c		 |$LN13@SDH_Init|
  0020c	e3a03000	 mov         r3, #0
  00210	e58d3024	 str         r3, [sp, #0x24]
  00214		 |$LN14@SDH_Init|

; 155  :         return 0;

  00214	e3a03000	 mov         r3, #0
  00218	e58d3014	 str         r3, [sp, #0x14]
  0021c	ea0000a4	 b           |$LN7@SDH_Init|
  00220		 |$LN6@SDH_Init|

; 156  :     }
; 157  : 
; 158  :     // create our extension 
; 159  :     pController = (PSDH_HARDWARE_CONTEXT)malloc( sizeof(SDH_HARDWARE_CONTEXT) );

  00220	e3a00c0d	 mov         r0, #0xD, 24
  00224	e3800068	 orr         r0, r0, #0x68
  00228	eb000000	 bl          malloc
  0022c	e58d0028	 str         r0, [sp, #0x28]
  00230	e59d3028	 ldr         r3, [sp, #0x28]
  00234	e58d300c	 str         r3, [sp, #0xC]

; 160  :     if( pController == NULL )

  00238	e59d300c	 ldr         r3, [sp, #0xC]
  0023c	e3530000	 cmp         r3, #0
  00240	1a00000d	 bne         |$LN5@SDH_Init|

; 161  :     {
; 162  :         DbgPrintZo(SDCARD_ZONE_ERROR, 
; 163  :             (TEXT("SDH: Failed to allocate extension\n")));

  00244	e59f327c	 ldr         r3, [pc, #0x27C]
  00248	e5933440	 ldr         r3, [r3, #0x440]
  0024c	e3130902	 tst         r3, #2, 18
  00250	0a000004	 beq         |$LN15@SDH_Init|
  00254	e59f0294	 ldr         r0, [pc, #0x294]
  00258	eb000000	 bl          SDCardDebugOutput
  0025c	e3a03001	 mov         r3, #1
  00260	e58d302c	 str         r3, [sp, #0x2C]
  00264	ea000001	 b           |$LN16@SDH_Init|
  00268		 |$LN15@SDH_Init|
  00268	e3a03000	 mov         r3, #0
  0026c	e58d302c	 str         r3, [sp, #0x2C]
  00270		 |$LN16@SDH_Init|

; 164  :         return 0;

  00270	e3a03000	 mov         r3, #0
  00274	e58d3014	 str         r3, [sp, #0x14]
  00278	ea00008d	 b           |$LN7@SDH_Init|
  0027c		 |$LN5@SDH_Init|

; 165  :     }
; 166  :     memset( pController, 0, sizeof(SDH_HARDWARE_CONTEXT) );

  0027c	e3a02c0d	 mov         r2, #0xD, 24
  00280	e3822068	 orr         r2, r2, #0x68
  00284	e3a01000	 mov         r1, #0
  00288	e59d000c	 ldr         r0, [sp, #0xC]
  0028c	eb000000	 bl          memset

; 167  : 
; 168  :     // Set our extension
; 169  :     pHostContext->pHCSpecificContext = pController;

  00290	e59d3000	 ldr         r3, [sp]
  00294	e283204c	 add         r2, r3, #0x4C
  00298	e59d300c	 ldr         r3, [sp, #0xC]
  0029c	e5823000	 str         r3, [r2]

; 170  : 
; 171  :     pController = GetExtensionFromHCDContext(PSDH_HARDWARE_CONTEXT, pHostContext);

  002a0	e59d3000	 ldr         r3, [sp]
  002a4	e283304c	 add         r3, r3, #0x4C
  002a8	e5933000	 ldr         r3, [r3]
  002ac	e58d300c	 str         r3, [sp, #0xC]

; 172  : 
; 173  :     pszActiveKey = (LPCTSTR) dwContext;

  002b0	e59d3058	 ldr         r3, [sp, #0x58]
  002b4	e58d3008	 str         r3, [sp, #8]

; 174  :     
; 175  :     pController->pszActiveKey = pszActiveKey;

  002b8	e59d300c	 ldr         r3, [sp, #0xC]
  002bc	e2832010	 add         r2, r3, #0x10
  002c0	e59d3008	 ldr         r3, [sp, #8]
  002c4	e5823000	 str         r3, [r2]

; 176  :     pController->hBusAccessHandle = CreateBusAccessHandle( pszActiveKey );

  002c8	e59d0008	 ldr         r0, [sp, #8]
  002cc	eb000000	 bl          CreateBusAccessHandle
  002d0	e58d0030	 str         r0, [sp, #0x30]
  002d4	e59d300c	 ldr         r3, [sp, #0xC]
  002d8	e2832014	 add         r2, r3, #0x14
  002dc	e59d3030	 ldr         r3, [sp, #0x30]
  002e0	e5823000	 str         r3, [r2]

; 177  : 
; 178  :     hKeyDevice = OpenDeviceKey(pszActiveKey);

  002e4	e59d0008	 ldr         r0, [sp, #8]
  002e8	eb000000	 bl          OpenDeviceKey
  002ec	e58d0034	 str         r0, [sp, #0x34]
  002f0	e59d3034	 ldr         r3, [sp, #0x34]
  002f4	e58d3010	 str         r3, [sp, #0x10]

; 179  :     if (!hKeyDevice || !LoadRegistrySettings(hKeyDevice, pController) ) {

  002f8	e59d3010	 ldr         r3, [sp, #0x10]
  002fc	e3530000	 cmp         r3, #0
  00300	0a000006	 beq         |$LN3@SDH_Init|
  00304	e59d100c	 ldr         r1, [sp, #0xC]
  00308	e59d0010	 ldr         r0, [sp, #0x10]
  0030c	eb000000	 bl          LoadRegistrySettings
  00310	e58d0038	 str         r0, [sp, #0x38]
  00314	e59d3038	 ldr         r3, [sp, #0x38]
  00318	e3530000	 cmp         r3, #0
  0031c	1a00000d	 bne         |$LN4@SDH_Init|
  00320		 |$LN3@SDH_Init|

; 180  :         DbgPrintZo(SDCARD_ZONE_ERROR, 
; 181  :         (TEXT("SDH: Failed load the registry settings\n")));

  00320	e59f31a0	 ldr         r3, [pc, #0x1A0]
  00324	e5933440	 ldr         r3, [r3, #0x440]
  00328	e3130902	 tst         r3, #2, 18
  0032c	0a000004	 beq         |$LN17@SDH_Init|
  00330	e59f01b4	 ldr         r0, [pc, #0x1B4]
  00334	eb000000	 bl          SDCardDebugOutput
  00338	e3a03001	 mov         r3, #1
  0033c	e58d303c	 str         r3, [sp, #0x3C]
  00340	ea000001	 b           |$LN18@SDH_Init|
  00344		 |$LN17@SDH_Init|
  00344	e3a03000	 mov         r3, #0
  00348	e58d303c	 str         r3, [sp, #0x3C]
  0034c		 |$LN18@SDH_Init|

; 182  :         return 0;

  0034c	e3a03000	 mov         r3, #0
  00350	e58d3014	 str         r3, [sp, #0x14]
  00354	ea000056	 b           |$LN7@SDH_Init|
  00358		 |$LN4@SDH_Init|

; 183  :     }
; 184  :     RegCloseKey( hKeyDevice );

  00358	e59d0010	 ldr         r0, [sp, #0x10]
  0035c	eb000000	 bl          RegCloseKey

; 185  : 
; 186  :     DbgPrintZo(SDCARD_ZONE_INIT, 
; 187  :                (TEXT("SDH: Real RegPath: %s \n"),pController->RegPath));

  00360	e59f3160	 ldr         r3, [pc, #0x160]
  00364	e5933440	 ldr         r3, [r3, #0x440]
  00368	e3130a02	 tst         r3, #2, 20
  0036c	0a000006	 beq         |$LN19@SDH_Init|
  00370	e59d300c	 ldr         r3, [sp, #0xC]
  00374	e2831eaf	 add         r1, r3, #0xAF, 28
  00378	e59f0168	 ldr         r0, [pc, #0x168]
  0037c	eb000000	 bl          SDCardDebugOutput
  00380	e3a03001	 mov         r3, #1
  00384	e58d3040	 str         r3, [sp, #0x40]
  00388	ea000001	 b           |$LN20@SDH_Init|
  0038c		 |$LN19@SDH_Init|
  0038c	e3a03000	 mov         r3, #0
  00390	e58d3040	 str         r3, [sp, #0x40]
  00394		 |$LN20@SDH_Init|

; 188  :    
; 189  :     // save off the host context
; 190  :     pController->pHCContext = pHostContext;

  00394	e59d300c	 ldr         r3, [sp, #0xC]
  00398	e2832018	 add         r2, r3, #0x18
  0039c	e59d3000	 ldr         r3, [sp]
  003a0	e5823000	 str         r3, [r2]

; 191  : 
; 192  :     // set the name
; 193  :     SDHCDSetHCName(pHostContext, TEXT("Lubbock"));

  003a4	e3a0200f	 mov         r2, #0xF
  003a8	e59f1134	 ldr         r1, [pc, #0x134]
  003ac	e59d3000	 ldr         r3, [sp]
  003b0	e2830004	 add         r0, r3, #4
  003b4	eb000000	 bl          wcsncpy

; 194  : 
; 195  :     // set init handler
; 196  :     SDHCDSetControllerInitHandler(pHostContext,SDInitialize);  

  003b8	e59d3000	 ldr         r3, [sp]
  003bc	e2832044	 add         r2, r3, #0x44
  003c0	e59f3118	 ldr         r3, [pc, #0x118]
  003c4	e5823000	 str         r3, [r2]

; 197  :     // set deinit handler    
; 198  :     SDHCDSetControllerDeinitHandler(pHostContext, SDDeinitialize);

  003c8	e59d3000	 ldr         r3, [sp]
  003cc	e2832048	 add         r2, r3, #0x48
  003d0	e59f3104	 ldr         r3, [pc, #0x104]
  003d4	e5823000	 str         r3, [r2]

; 199  :     // set the bus request handler
; 200  :     SDHCDSetBusRequestHandler(pHostContext,SDHBusRequestHandler);   

  003d8	e59d3000	 ldr         r3, [sp]
  003dc	e2832038	 add         r2, r3, #0x38
  003e0	e59f30f0	 ldr         r3, [pc, #0xF0]
  003e4	e5823000	 str         r3, [r2]

; 201  :     // set the cancel I/O handler
; 202  :     SDHCDSetCancelIOHandler(pHostContext, SDHCancelIoHandler);   

  003e8	e59d3000	 ldr         r3, [sp]
  003ec	e2832040	 add         r2, r3, #0x40
  003f0	e59f30dc	 ldr         r3, [pc, #0xDC]
  003f4	e5823000	 str         r3, [r2]

; 203  :     // set the slot option handler
; 204  :     SDHCDSetSlotOptionHandler(pHostContext, SDHSlotOptionHandler); 

  003f8	e59d3000	 ldr         r3, [sp]
  003fc	e283203c	 add         r2, r3, #0x3C
  00400	e59f30c8	 ldr         r3, [pc, #0xC8]
  00404	e5823000	 str         r3, [r2]

; 205  :     
; 206  : 
; 207  :     // now register the host controller 
; 208  :     status = SDHCDRegisterHostController(pHostContext);

  00408	e59d0000	 ldr         r0, [sp]
  0040c	eb000000	 bl          SDHCDRegisterHostController
  00410	e58d0044	 str         r0, [sp, #0x44]
  00414	e59d3044	 ldr         r3, [sp, #0x44]
  00418	e58d3004	 str         r3, [sp, #4]

; 209  : 
; 210  :     if (!SD_API_SUCCESS(status)) {

  0041c	e59d3004	 ldr         r3, [sp, #4]
  00420	e3530000	 cmp         r3, #0
  00424	aa000015	 bge         |$LN2@SDH_Init|

; 211  :         if( pController )

  00428	e59d300c	 ldr         r3, [sp, #0xC]
  0042c	e3530000	 cmp         r3, #0
  00430	0a000001	 beq         |$LN1@SDH_Init|

; 212  :         {
; 213  :             free( pController );

  00434	e59d000c	 ldr         r0, [sp, #0xC]
  00438	eb000000	 bl          free
  0043c		 |$LN1@SDH_Init|

; 214  :         }
; 215  :         SDHCDDeleteContext(pHostContext);

  0043c	e59d0000	 ldr         r0, [sp]
  00440	eb000000	 bl          SDHCDDeleteContext

; 216  :         DbgPrintZo(SDCARD_ZONE_ERROR, 
; 217  :                 (TEXT("SDH: Failed to register host controller: %0x08X \n"),status));

  00444	e59f307c	 ldr         r3, [pc, #0x7C]
  00448	e5933440	 ldr         r3, [r3, #0x440]
  0044c	e3130902	 tst         r3, #2, 18
  00450	0a000005	 beq         |$LN21@SDH_Init|
  00454	e59d1004	 ldr         r1, [sp, #4]
  00458	e59f006c	 ldr         r0, [pc, #0x6C]
  0045c	eb000000	 bl          SDCardDebugOutput
  00460	e3a03001	 mov         r3, #1
  00464	e58d3048	 str         r3, [sp, #0x48]
  00468	ea000001	 b           |$LN22@SDH_Init|
  0046c		 |$LN21@SDH_Init|
  0046c	e3a03000	 mov         r3, #0
  00470	e58d3048	 str         r3, [sp, #0x48]
  00474		 |$LN22@SDH_Init|

; 218  :         return 0;

  00474	e3a03000	 mov         r3, #0
  00478	e58d3014	 str         r3, [sp, #0x14]
  0047c	ea00000c	 b           |$LN7@SDH_Init|
  00480		 |$LN2@SDH_Init|

; 219  :     }
; 220  : 
; 221  :     DbgPrintZo(SDCARD_ZONE_INIT, (TEXT("SDH: -SDH_Init\n")));

  00480	e59f3040	 ldr         r3, [pc, #0x40]
  00484	e5933440	 ldr         r3, [r3, #0x440]
  00488	e3130a02	 tst         r3, #2, 20
  0048c	0a000004	 beq         |$LN23@SDH_Init|
  00490	e59f002c	 ldr         r0, [pc, #0x2C]
  00494	eb000000	 bl          SDCardDebugOutput
  00498	e3a03001	 mov         r3, #1
  0049c	e58d304c	 str         r3, [sp, #0x4C]
  004a0	ea000001	 b           |$LN24@SDH_Init|
  004a4		 |$LN23@SDH_Init|
  004a4	e3a03000	 mov         r3, #0
  004a8	e58d304c	 str         r3, [sp, #0x4C]
  004ac		 |$LN24@SDH_Init|

; 222  : 
; 223  :     // return the Host Controller context
; 224  :     return (DWORD)pHostContext;

  004ac	e59d3000	 ldr         r3, [sp]
  004b0	e58d3014	 str         r3, [sp, #0x14]
  004b4		 |$LN7@SDH_Init|

; 225  : }

  004b4	e59d0014	 ldr         r0, [sp, #0x14]
  004b8	e28dd050	 add         sp, sp, #0x50
  004bc	e89d6000	 ldmia       sp, {sp, lr}
  004c0	e12fff1e	 bx          lr
  004c4		 |$LN28@SDH_Init|
  004c4		 |$LN29@SDH_Init|
  004c4	00000000	 DCD         |??_C@_1CA@JKCNMIMC@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?9?$AAS?$AAD?$AAH?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?6?$AA?$AA@|
  004c8		 |$LN30@SDH_Init|
  004c8	00000000	 DCD         |dpCurSettings|
  004cc		 |$LN31@SDH_Init|
  004cc	00000000	 DCD         |??_C@_1GE@PAHBKKMJ@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAh?$AAo?$AAs?$AAt?$AA?5?$AAc?$AAo?$AAn@|
  004d0		 |$LN32@SDH_Init|
  004d0	00000000	 DCD         |SDHSlotOptionHandler|
  004d4		 |$LN33@SDH_Init|
  004d4	00000000	 DCD         |SDHCancelIoHandler|
  004d8		 |$LN34@SDH_Init|
  004d8	00000000	 DCD         |SDHBusRequestHandler|
  004dc		 |$LN35@SDH_Init|
  004dc	00000000	 DCD         |SDDeinitialize|
  004e0		 |$LN36@SDH_Init|
  004e0	00000000	 DCD         |SDInitialize|
  004e4		 |$LN37@SDH_Init|
  004e4	00000000	 DCD         |??_C@_1BA@IOCDNFIL@?$AAL?$AAu?$AAb?$AAb?$AAo?$AAc?$AAk?$AA?$AA@|
  004e8		 |$LN38@SDH_Init|
  004e8	00000000	 DCD         |??_C@_1DA@GEGBKBPH@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AAR?$AAe?$AAa?$AAl?$AA?5?$AAR?$AAe?$AAg?$AAP?$AAa?$AAt?$AAh?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?6?$AA?$AA@|
  004ec		 |$LN39@SDH_Init|
  004ec	00000000	 DCD         |??_C@_1FA@BNHGBKMF@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?5?$AAs?$AAe@|
  004f0		 |$LN40@SDH_Init|
  004f0	00000000	 DCD         |??_C@_1EG@NCODLPJM@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAe?$AAx?$AAt?$AAe?$AAn?$AAs?$AAi?$AAo@|
  004f4		 |$LN41@SDH_Init|
  004f4	00000000	 DCD         |??_C@_1FG@MJLECAFI@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?5@|
  004f8		 |$LN42@SDH_Init|
  004f8	00000000	 DCD         |??_C@_1DE@IBMJAKBI@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAR?$AAe?$AAg?$AAP?$AAa?$AAt?$AAh?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?6?$AA?$AA@|
  004fc		 |$LN43@SDH_Init|
  004fc	00000000	 DCD         |??_C@_1CA@OINMJCEC@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AAS?$AAD?$AAH?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?6?$AA?$AA@|
  00500		 |$M43077|

			 ENDP  ; |SDH_Init|

	EXPORT	|??_C@_1CO@OKAOPCGI@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AA?9?$AAS?$AAD?$AAH?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|SDH_IOControl|

  00018			 AREA	 |.pdata|, PDATA
|$T43103| DCD	|$LN7@SDH_IOCont|
	DCD	0x40001704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@OKAOPCGI@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AA?9?$AAS?$AAD?$AAH?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, ":", 0x0, " ", 0x0, "+", 0x0, "-"
	DCB	0x0, "S", 0x0, "D", 0x0, "H", 0x0, "_", 0x0, "I", 0x0, "O"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, " ", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00500			 AREA	 |.text|, CODE, ARM

  00500		 |SDH_IOControl| PROC

; 247  : {

  00500		 |$LN7@SDH_IOCont|
  00500	e1a0c00d	 mov         r12, sp
  00504	e92d000f	 stmdb       sp!, {r0 - r3}
  00508	e92d5000	 stmdb       sp!, {r12, lr}
  0050c	e24dd008	 sub         sp, sp, #8
  00510		 |$M43100|

; 248  :     DbgPrintZo(SDCARD_ZONE_FUNC, (TEXT("SDH: +-SDH_IOControl \n")));

  00510	e59f3040	 ldr         r3, [pc, #0x40]
  00514	e5933440	 ldr         r3, [r3, #0x440]
  00518	e3130b02	 tst         r3, #2, 22
  0051c	0a000004	 beq         |$LN3@SDH_IOCont|
  00520	e59f002c	 ldr         r0, [pc, #0x2C]
  00524	eb000000	 bl          SDCardDebugOutput
  00528	e3a03001	 mov         r3, #1
  0052c	e58d3004	 str         r3, [sp, #4]
  00530	ea000001	 b           |$LN4@SDH_IOCont|
  00534		 |$LN3@SDH_IOCont|
  00534	e3a03000	 mov         r3, #0
  00538	e58d3004	 str         r3, [sp, #4]
  0053c		 |$LN4@SDH_IOCont|

; 249  :     return FALSE;;

  0053c	e3a03000	 mov         r3, #0
  00540	e58d3000	 str         r3, [sp]

; 250  : }

  00544	e59d0000	 ldr         r0, [sp]
  00548	e28dd008	 add         sp, sp, #8
  0054c	e89d6000	 ldmia       sp, {sp, lr}
  00550	e12fff1e	 bx          lr
  00554		 |$LN8@SDH_IOCont|
  00554		 |$LN9@SDH_IOCont|
  00554	00000000	 DCD         |??_C@_1CO@OKAOPCGI@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AA?9?$AAS?$AAD?$AAH?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AA?6?$AA?$AA@|
  00558		 |$LN10@SDH_IOCont|
  00558	00000000	 DCD         |dpCurSettings|
  0055c		 |$M43101|

			 ENDP  ; |SDH_IOControl|

	EXPORT	|??_C@_1CC@HAOJNEFD@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AA?9?$AAS?$AAD?$AAH?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|SDH_Open|

  00020			 AREA	 |.pdata|, PDATA
|$T43114| DCD	|$LN7@SDH_Open|
	DCD	0x40001704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@HAOJNEFD@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AA?9?$AAS?$AAD?$AAH?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, ":", 0x0, " ", 0x0, "+", 0x0, "-"
	DCB	0x0, "S", 0x0, "D", 0x0, "H", 0x0, "_", 0x0, "O", 0x0, "p"
	DCB	0x0, "e", 0x0, "n", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  0055c			 AREA	 |.text|, CODE, ARM

  0055c		 |SDH_Open| PROC

; 264  : {

  0055c		 |$LN7@SDH_Open|
  0055c	e1a0c00d	 mov         r12, sp
  00560	e92d0007	 stmdb       sp!, {r0 - r2}
  00564	e92d5000	 stmdb       sp!, {r12, lr}
  00568	e24dd008	 sub         sp, sp, #8
  0056c		 |$M43111|

; 265  :     DbgPrintZo(SDCARD_ZONE_FUNC, (TEXT("SDH: +-SDH_Open\n")));

  0056c	e59f3040	 ldr         r3, [pc, #0x40]
  00570	e5933440	 ldr         r3, [r3, #0x440]
  00574	e3130b02	 tst         r3, #2, 22
  00578	0a000004	 beq         |$LN3@SDH_Open|
  0057c	e59f002c	 ldr         r0, [pc, #0x2C]
  00580	eb000000	 bl          SDCardDebugOutput
  00584	e3a03001	 mov         r3, #1
  00588	e58d3004	 str         r3, [sp, #4]
  0058c	ea000001	 b           |$LN4@SDH_Open|
  00590		 |$LN3@SDH_Open|
  00590	e3a03000	 mov         r3, #0
  00594	e58d3004	 str         r3, [sp, #4]
  00598		 |$LN4@SDH_Open|

; 266  :     return 0;

  00598	e3a03000	 mov         r3, #0
  0059c	e58d3000	 str         r3, [sp]

; 267  : }

  005a0	e59d0000	 ldr         r0, [sp]
  005a4	e28dd008	 add         sp, sp, #8
  005a8	e89d6000	 ldmia       sp, {sp, lr}
  005ac	e12fff1e	 bx          lr
  005b0		 |$LN8@SDH_Open|
  005b0		 |$LN9@SDH_Open|
  005b0	00000000	 DCD         |??_C@_1CC@HAOJNEFD@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AA?9?$AAS?$AAD?$AAH?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?6?$AA?$AA@|
  005b4		 |$LN10@SDH_Open|
  005b4	00000000	 DCD         |dpCurSettings|
  005b8		 |$M43112|

			 ENDP  ; |SDH_Open|

	EXPORT	|??_C@_1CE@FFEMLADL@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AA?9?$AAS?$AAD?$AAH?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|SDH_Close|

  00028			 AREA	 |.pdata|, PDATA
|$T43125| DCD	|$LN7@SDH_Close|
	DCD	0x40001704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@FFEMLADL@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AA?9?$AAS?$AAD?$AAH?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, ":", 0x0, " ", 0x0, "+", 0x0, "-"
	DCB	0x0, "S", 0x0, "D", 0x0, "H", 0x0, "_", 0x0, "C", 0x0, "l"
	DCB	0x0, "o", 0x0, "s", 0x0, "e", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  005b8			 AREA	 |.text|, CODE, ARM

  005b8		 |SDH_Close| PROC

; 279  : {

  005b8		 |$LN7@SDH_Close|
  005b8	e1a0c00d	 mov         r12, sp
  005bc	e92d0001	 stmdb       sp!, {r0}
  005c0	e92d5000	 stmdb       sp!, {r12, lr}
  005c4	e24dd008	 sub         sp, sp, #8
  005c8		 |$M43122|

; 280  :     DbgPrintZo(SDCARD_ZONE_FUNC, (TEXT("SDH: +-SDH_Close\n")));

  005c8	e59f3040	 ldr         r3, [pc, #0x40]
  005cc	e5933440	 ldr         r3, [r3, #0x440]
  005d0	e3130b02	 tst         r3, #2, 22
  005d4	0a000004	 beq         |$LN3@SDH_Close|
  005d8	e59f002c	 ldr         r0, [pc, #0x2C]
  005dc	eb000000	 bl          SDCardDebugOutput
  005e0	e3a03001	 mov         r3, #1
  005e4	e58d3004	 str         r3, [sp, #4]
  005e8	ea000001	 b           |$LN4@SDH_Close|
  005ec		 |$LN3@SDH_Close|
  005ec	e3a03000	 mov         r3, #0
  005f0	e58d3004	 str         r3, [sp, #4]
  005f4		 |$LN4@SDH_Close|

; 281  :     return TRUE;

  005f4	e3a03001	 mov         r3, #1
  005f8	e58d3000	 str         r3, [sp]

; 282  : }

  005fc	e59d0000	 ldr         r0, [sp]
  00600	e28dd008	 add         sp, sp, #8
  00604	e89d6000	 ldmia       sp, {sp, lr}
  00608	e12fff1e	 bx          lr
  0060c		 |$LN8@SDH_Close|
  0060c		 |$LN9@SDH_Close|
  0060c	00000000	 DCD         |??_C@_1CE@FFEMLADL@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AA?9?$AAS?$AAD?$AAH?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?6?$AA?$AA@|
  00610		 |$LN10@SDH_Close|
  00610	00000000	 DCD         |dpCurSettings|
  00614		 |$M43123|

			 ENDP  ; |SDH_Close|

	EXPORT	|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@KFLEGKGK@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@DDICIMJJ@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AAS?$AAD?$AAH?$AA_?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|SDH_PowerDown|
	IMPORT	|SDControllerPowerDown|
	IMPORT	|NKDbgPrintfW|

  00030			 AREA	 |.pdata|, PDATA
|$T43137| DCD	|$LN10@SDH_PowerD|
	DCD	0x40003104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "E", 0x0, "B"
	DCB	0x0, "U", 0x0, "G", 0x0, "C", 0x0, "H", 0x0, "K", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, "t", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| DCB "U", 0x0
	DCB	"n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@KFLEGKGK@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "P"
	DCB	0x0, "X", 0x0, "A", 0x0, "2", 0x0, "7", 0x0, "X", 0x0, "_"
	DCB	0x0, "M", 0x0, "S", 0x0, "_", 0x0, "V", 0x0, "1", 0x0, "\\"
	DCB	0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C", 0x0, "\\", 0x0, "."
	DCB	0x0, "\\", 0x0, "m", 0x0, "a", 0x0, "i", 0x0, "n", 0x0, "."
	DCB	0x0, "c", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@DDICIMJJ@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AAS?$AAD?$AAH?$AA_?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, ":", 0x0, " ", 0x0, "+", 0x0, "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "_", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, "D", 0x0, "o", 0x0, "w", 0x0, "n"
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  00614			 AREA	 |.text|, CODE, ARM

  00614		 |SDH_PowerDown| PROC

; 294  : {

  00614		 |$LN10@SDH_PowerD|
  00614	e1a0c00d	 mov         r12, sp
  00618	e92d0001	 stmdb       sp!, {r0}
  0061c	e92d5000	 stmdb       sp!, {r12, lr}
  00620	e24dd010	 sub         sp, sp, #0x10
  00624		 |$M43134|

; 295  :     PSDCARD_HC_CONTEXT pHostContext;
; 296  :     PSDH_HARDWARE_CONTEXT pController;
; 297  : 
; 298  :     DbgPrintZo(SDCARD_ZONE_FUNC, (TEXT("SDH: +SDH_PowerDown\n")));

  00624	e59f30a8	 ldr         r3, [pc, #0xA8]
  00628	e5933440	 ldr         r3, [r3, #0x440]
  0062c	e3130b02	 tst         r3, #2, 22
  00630	0a000004	 beq         |$LN4@SDH_PowerD|
  00634	e59f0094	 ldr         r0, [pc, #0x94]
  00638	eb000000	 bl          SDCardDebugOutput
  0063c	e3a03001	 mov         r3, #1
  00640	e58d3008	 str         r3, [sp, #8]
  00644	ea000001	 b           |$LN5@SDH_PowerD|
  00648		 |$LN4@SDH_PowerD|
  00648	e3a03000	 mov         r3, #0
  0064c	e58d3008	 str         r3, [sp, #8]
  00650		 |$LN5@SDH_PowerD|

; 299  : 
; 300  :     pHostContext = (PSDCARD_HC_CONTEXT)hDeviceContext;

  00650	e59d3018	 ldr         r3, [sp, #0x18]
  00654	e58d3000	 str         r3, [sp]

; 301  :     ASSERT( pHostContext );

  00658	e59d3000	 ldr         r3, [sp]
  0065c	e3530000	 cmp         r3, #0
  00660	0a000002	 beq         |$LN6@SDH_PowerD|
  00664	e3a03001	 mov         r3, #1
  00668	e58d300c	 str         r3, [sp, #0xC]
  0066c	ea000008	 b           |$LN7@SDH_PowerD|
  00670		 |$LN6@SDH_PowerD|
  00670	e3a03c01	 mov         r3, #1, 24
  00674	e383302d	 orr         r3, r3, #0x2D
  00678	e59f204c	 ldr         r2, [pc, #0x4C]
  0067c	e59f1044	 ldr         r1, [pc, #0x44]
  00680	e59f003c	 ldr         r0, [pc, #0x3C]
  00684	eb000000	 bl          NKDbgPrintfW
  00688	e6000010	 __debugbreak_ce
  0068c	e3a03000	 mov         r3, #0
  00690	e58d300c	 str         r3, [sp, #0xC]
  00694		 |$LN7@SDH_PowerD|

; 302  :     if( pHostContext )

  00694	e59d3000	 ldr         r3, [sp]
  00698	e3530000	 cmp         r3, #0
  0069c	0a000005	 beq         |$LN1@SDH_PowerD|

; 303  :     {
; 304  :         pController = pHostContext->pHCSpecificContext;

  006a0	e59d3000	 ldr         r3, [sp]
  006a4	e283304c	 add         r3, r3, #0x4C
  006a8	e5933000	 ldr         r3, [r3]
  006ac	e58d3004	 str         r3, [sp, #4]

; 305  :         SDControllerPowerDown( pController );

  006b0	e59d0004	 ldr         r0, [sp, #4]
  006b4	eb000000	 bl          SDControllerPowerDown
  006b8		 |$LN1@SDH_PowerD|

; 306  :     }
; 307  : }

  006b8	e28dd010	 add         sp, sp, #0x10
  006bc	e89d6000	 ldmia       sp, {sp, lr}
  006c0	e12fff1e	 bx          lr
  006c4		 |$LN11@SDH_PowerD|
  006c4		 |$LN12@SDH_PowerD|
  006c4	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  006c8		 |$LN13@SDH_PowerD|
  006c8	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  006cc		 |$LN14@SDH_PowerD|
  006cc	00000000	 DCD         |??_C@_1HO@KFLEGKGK@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  006d0		 |$LN15@SDH_PowerD|
  006d0	00000000	 DCD         |??_C@_1CK@DDICIMJJ@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AAS?$AAD?$AAH?$AA_?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?6?$AA?$AA@|
  006d4		 |$LN16@SDH_PowerD|
  006d4	00000000	 DCD         |dpCurSettings|
  006d8		 |$M43135|

			 ENDP  ; |SDH_PowerDown|

	EXPORT	|SDH_PowerUp|
	IMPORT	|SDControllerPowerUp|

  00038			 AREA	 |.pdata|, PDATA
|$T43152| DCD	|$LN10@SDH_PowerU|
	DCD	0x40003104
; Function compile flags: /Odtp

  006d8			 AREA	 |.text|, CODE, ARM

  006d8		 |SDH_PowerUp| PROC

; 316  : {

  006d8		 |$LN10@SDH_PowerU|
  006d8	e1a0c00d	 mov         r12, sp
  006dc	e92d0001	 stmdb       sp!, {r0}
  006e0	e92d5000	 stmdb       sp!, {r12, lr}
  006e4	e24dd010	 sub         sp, sp, #0x10
  006e8		 |$M43149|

; 317  :     PSDCARD_HC_CONTEXT pHostContext;
; 318  :     PSDH_HARDWARE_CONTEXT pController;
; 319  : 
; 320  :     DbgPrintZo(SDCARD_ZONE_FUNC, (TEXT("SDH: +SDH_PowerDown\n")));

  006e8	e59f30a8	 ldr         r3, [pc, #0xA8]
  006ec	e5933440	 ldr         r3, [r3, #0x440]
  006f0	e3130b02	 tst         r3, #2, 22
  006f4	0a000004	 beq         |$LN4@SDH_PowerU|
  006f8	e59f0094	 ldr         r0, [pc, #0x94]
  006fc	eb000000	 bl          SDCardDebugOutput
  00700	e3a03001	 mov         r3, #1
  00704	e58d3008	 str         r3, [sp, #8]
  00708	ea000001	 b           |$LN5@SDH_PowerU|
  0070c		 |$LN4@SDH_PowerU|
  0070c	e3a03000	 mov         r3, #0
  00710	e58d3008	 str         r3, [sp, #8]
  00714		 |$LN5@SDH_PowerU|

; 321  : 
; 322  :     pHostContext = (PSDCARD_HC_CONTEXT)hDeviceContext;

  00714	e59d3018	 ldr         r3, [sp, #0x18]
  00718	e58d3000	 str         r3, [sp]

; 323  :     ASSERT( pHostContext );

  0071c	e59d3000	 ldr         r3, [sp]
  00720	e3530000	 cmp         r3, #0
  00724	0a000002	 beq         |$LN6@SDH_PowerU|
  00728	e3a03001	 mov         r3, #1
  0072c	e58d300c	 str         r3, [sp, #0xC]
  00730	ea000008	 b           |$LN7@SDH_PowerU|
  00734		 |$LN6@SDH_PowerU|
  00734	e3a03c01	 mov         r3, #1, 24
  00738	e3833043	 orr         r3, r3, #0x43
  0073c	e59f204c	 ldr         r2, [pc, #0x4C]
  00740	e59f1044	 ldr         r1, [pc, #0x44]
  00744	e59f003c	 ldr         r0, [pc, #0x3C]
  00748	eb000000	 bl          NKDbgPrintfW
  0074c	e6000010	 __debugbreak_ce
  00750	e3a03000	 mov         r3, #0
  00754	e58d300c	 str         r3, [sp, #0xC]
  00758		 |$LN7@SDH_PowerU|

; 324  :     if( pHostContext )

  00758	e59d3000	 ldr         r3, [sp]
  0075c	e3530000	 cmp         r3, #0
  00760	0a000005	 beq         |$LN1@SDH_PowerU|

; 325  :     {
; 326  :         pController = pHostContext->pHCSpecificContext;

  00764	e59d3000	 ldr         r3, [sp]
  00768	e283304c	 add         r3, r3, #0x4C
  0076c	e5933000	 ldr         r3, [r3]
  00770	e58d3004	 str         r3, [sp, #4]

; 327  :         SDControllerPowerUp( pController );

  00774	e59d0004	 ldr         r0, [sp, #4]
  00778	eb000000	 bl          SDControllerPowerUp
  0077c		 |$LN1@SDH_PowerU|

; 328  :     }
; 329  : }

  0077c	e28dd010	 add         sp, sp, #0x10
  00780	e89d6000	 ldmia       sp, {sp, lr}
  00784	e12fff1e	 bx          lr
  00788		 |$LN11@SDH_PowerU|
  00788		 |$LN12@SDH_PowerU|
  00788	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  0078c		 |$LN13@SDH_PowerU|
  0078c	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  00790		 |$LN14@SDH_PowerU|
  00790	00000000	 DCD         |??_C@_1HO@KFLEGKGK@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  00794		 |$LN15@SDH_PowerU|
  00794	00000000	 DCD         |??_C@_1CK@DDICIMJJ@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AAS?$AAD?$AAH?$AA_?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?6?$AA?$AA@|
  00798		 |$LN16@SDH_PowerU|
  00798	00000000	 DCD         |dpCurSettings|
  0079c		 |$M43150|

			 ENDP  ; |SDH_PowerUp|

	EXPORT	|??_C@_1CC@GAIFPHB@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AA?9?$AAS?$AAD?$AAH?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|SDH_Read|

  00040			 AREA	 |.pdata|, PDATA
|$T43166| DCD	|$LN7@SDH_Read|
	DCD	0x40001704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@GAIFPHB@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AA?9?$AAS?$AAD?$AAH?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, ":", 0x0, " ", 0x0, "+", 0x0, "-"
	DCB	0x0, "S", 0x0, "D", 0x0, "H", 0x0, "_", 0x0, "R", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  0079c			 AREA	 |.text|, CODE, ARM

  0079c		 |SDH_Read| PROC

; 343  : {

  0079c		 |$LN7@SDH_Read|
  0079c	e1a0c00d	 mov         r12, sp
  007a0	e92d0007	 stmdb       sp!, {r0 - r2}
  007a4	e92d5000	 stmdb       sp!, {r12, lr}
  007a8	e24dd008	 sub         sp, sp, #8
  007ac		 |$M43163|

; 344  :     DbgPrintZo(SDCARD_ZONE_FUNC, (TEXT("SDH: +-SDH_Read\n")));

  007ac	e59f3040	 ldr         r3, [pc, #0x40]
  007b0	e5933440	 ldr         r3, [r3, #0x440]
  007b4	e3130b02	 tst         r3, #2, 22
  007b8	0a000004	 beq         |$LN3@SDH_Read|
  007bc	e59f002c	 ldr         r0, [pc, #0x2C]
  007c0	eb000000	 bl          SDCardDebugOutput
  007c4	e3a03001	 mov         r3, #1
  007c8	e58d3004	 str         r3, [sp, #4]
  007cc	ea000001	 b           |$LN4@SDH_Read|
  007d0		 |$LN3@SDH_Read|
  007d0	e3a03000	 mov         r3, #0
  007d4	e58d3004	 str         r3, [sp, #4]
  007d8		 |$LN4@SDH_Read|

; 345  :     return 0;

  007d8	e3a03000	 mov         r3, #0
  007dc	e58d3000	 str         r3, [sp]

; 346  : }

  007e0	e59d0000	 ldr         r0, [sp]
  007e4	e28dd008	 add         sp, sp, #8
  007e8	e89d6000	 ldmia       sp, {sp, lr}
  007ec	e12fff1e	 bx          lr
  007f0		 |$LN8@SDH_Read|
  007f0		 |$LN9@SDH_Read|
  007f0	00000000	 DCD         |??_C@_1CC@GAIFPHB@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AA?9?$AAS?$AAD?$AAH?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?6?$AA?$AA@|
  007f4		 |$LN10@SDH_Read|
  007f4	00000000	 DCD         |dpCurSettings|
  007f8		 |$M43164|

			 ENDP  ; |SDH_Read|

	EXPORT	|??_C@_1CC@OILBKPDB@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AA?9?$AAS?$AAD?$AAH?$AA_?$AAS?$AAe?$AAe?$AAk?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|SDH_Seek|

  00048			 AREA	 |.pdata|, PDATA
|$T43177| DCD	|$LN7@SDH_Seek|
	DCD	0x40001704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@OILBKPDB@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AA?9?$AAS?$AAD?$AAH?$AA_?$AAS?$AAe?$AAe?$AAk?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, ":", 0x0, " ", 0x0, "+", 0x0, "-"
	DCB	0x0, "S", 0x0, "D", 0x0, "H", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "e", 0x0, "k", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  007f8			 AREA	 |.text|, CODE, ARM

  007f8		 |SDH_Seek| PROC

; 360  : {

  007f8		 |$LN7@SDH_Seek|
  007f8	e1a0c00d	 mov         r12, sp
  007fc	e92d0007	 stmdb       sp!, {r0 - r2}
  00800	e92d5000	 stmdb       sp!, {r12, lr}
  00804	e24dd008	 sub         sp, sp, #8
  00808		 |$M43174|

; 361  :     DbgPrintZo(SDCARD_ZONE_FUNC, (TEXT("SDH: +-SDH_Seek\n")));

  00808	e59f3040	 ldr         r3, [pc, #0x40]
  0080c	e5933440	 ldr         r3, [r3, #0x440]
  00810	e3130b02	 tst         r3, #2, 22
  00814	0a000004	 beq         |$LN3@SDH_Seek|
  00818	e59f002c	 ldr         r0, [pc, #0x2C]
  0081c	eb000000	 bl          SDCardDebugOutput
  00820	e3a03001	 mov         r3, #1
  00824	e58d3004	 str         r3, [sp, #4]
  00828	ea000001	 b           |$LN4@SDH_Seek|
  0082c		 |$LN3@SDH_Seek|
  0082c	e3a03000	 mov         r3, #0
  00830	e58d3004	 str         r3, [sp, #4]
  00834		 |$LN4@SDH_Seek|

; 362  :     return 0;

  00834	e3a03000	 mov         r3, #0
  00838	e58d3000	 str         r3, [sp]

; 363  : }

  0083c	e59d0000	 ldr         r0, [sp]
  00840	e28dd008	 add         sp, sp, #8
  00844	e89d6000	 ldmia       sp, {sp, lr}
  00848	e12fff1e	 bx          lr
  0084c		 |$LN8@SDH_Seek|
  0084c		 |$LN9@SDH_Seek|
  0084c	00000000	 DCD         |??_C@_1CC@OILBKPDB@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AA?9?$AAS?$AAD?$AAH?$AA_?$AAS?$AAe?$AAe?$AAk?$AA?6?$AA?$AA@|
  00850		 |$LN10@SDH_Seek|
  00850	00000000	 DCD         |dpCurSettings|
  00854		 |$M43175|

			 ENDP  ; |SDH_Seek|

	EXPORT	|??_C@_1CE@MIKAEEPA@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AA?9?$AAS?$AAD?$AAH?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|SDH_Write|

  00050			 AREA	 |.pdata|, PDATA
|$T43188| DCD	|$LN7@SDH_Write|
	DCD	0x40001704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@MIKAEEPA@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AA?9?$AAS?$AAD?$AAH?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, ":", 0x0, " ", 0x0, "+", 0x0, "-"
	DCB	0x0, "S", 0x0, "D", 0x0, "H", 0x0, "_", 0x0, "W", 0x0, "r"
	DCB	0x0, "i", 0x0, "t", 0x0, "e", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00854			 AREA	 |.text|, CODE, ARM

  00854		 |SDH_Write| PROC

; 377  : {

  00854		 |$LN7@SDH_Write|
  00854	e1a0c00d	 mov         r12, sp
  00858	e92d0007	 stmdb       sp!, {r0 - r2}
  0085c	e92d5000	 stmdb       sp!, {r12, lr}
  00860	e24dd008	 sub         sp, sp, #8
  00864		 |$M43185|

; 378  :     DbgPrintZo(SDCARD_ZONE_FUNC, (TEXT("SDH: +-SDH_Write\n")));

  00864	e59f3040	 ldr         r3, [pc, #0x40]
  00868	e5933440	 ldr         r3, [r3, #0x440]
  0086c	e3130b02	 tst         r3, #2, 22
  00870	0a000004	 beq         |$LN3@SDH_Write|
  00874	e59f002c	 ldr         r0, [pc, #0x2C]
  00878	eb000000	 bl          SDCardDebugOutput
  0087c	e3a03001	 mov         r3, #1
  00880	e58d3004	 str         r3, [sp, #4]
  00884	ea000001	 b           |$LN4@SDH_Write|
  00888		 |$LN3@SDH_Write|
  00888	e3a03000	 mov         r3, #0
  0088c	e58d3004	 str         r3, [sp, #4]
  00890		 |$LN4@SDH_Write|

; 379  :     return 0;

  00890	e3a03000	 mov         r3, #0
  00894	e58d3000	 str         r3, [sp]

; 380  : }

  00898	e59d0000	 ldr         r0, [sp]
  0089c	e28dd008	 add         sp, sp, #8
  008a0	e89d6000	 ldmia       sp, {sp, lr}
  008a4	e12fff1e	 bx          lr
  008a8		 |$LN8@SDH_Write|
  008a8		 |$LN9@SDH_Write|
  008a8	00000000	 DCD         |??_C@_1CE@MIKAEEPA@?$AAS?$AAD?$AAH?$AA?3?$AA?5?$AA?$CL?$AA?9?$AAS?$AAD?$AAH?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?6?$AA?$AA@|
  008ac		 |$LN10@SDH_Write|
  008ac	00000000	 DCD         |dpCurSettings|
  008b0		 |$M43186|

			 ENDP  ; |SDH_Write|

	EXPORT	|??_C@_1CA@LCEEPFOK@?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAM?$AAo?$AAd?$AAe?$AAS?$AAi?$AAz?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@FPPMGDBH@?$AAM?$AAa?$AAx?$AAi?$AAm?$AAu?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAF?$AAr?$AAe?$AAq?$AAu?$AAe?$AAn?$AAc?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@LOLEJNPJ@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAI?$AAS?$AAT?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@HGGPDGIP@?$AAC?$AAl?$AAo?$AAc?$AAk?$AAO?$AAn?$AAI?$AAf?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAs?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@IDMBHNCC@?$AAC?$AAl?$AAo?$AAc?$AAk?$AAA?$AAl?$AAw?$AAa?$AAy?$AAs?$AAO?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@OJBDCMDA@?$AAD?$AAM?$AAA?$AAI?$AAS?$AAT?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@GMMNAJKE@?$AAD?$AAM?$AAA?$AAI?$AAs?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@KPJJLCEA@?$AAD?$AAM?$AAA?$AAI?$AAs?$AAr?$AAD?$AAl?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@BHHIEEFG@?$AAD?$AAM?$AAA?$AAS?$AAy?$AAs?$AAI?$AAn?$AAt?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@JHFMHONC@?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AAS?$AAi?$AAz?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@KNMADMKP@?$AAD?$AAM?$AAA?$AAI?$AAR?$AAQ?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@DPAMDNIK@?$AAD?$AAM?$AAA?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@LBONBMJK@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAI?$AAR?$AAQ?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|LoadPlatformRegistrySettings|
	IMPORT	|RegQueryValueExW|

  00058			 AREA	 |.pdata|, PDATA
|$T43227| DCD	|$LN36@LoadRegist|
	DCD	0x4001a104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@LCEEPFOK@?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAM?$AAo?$AAd?$AAe?$AAS?$AAi?$AAz?$AAe?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, "S", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@FPPMGDBH@?$AAM?$AAa?$AAx?$AAi?$AAm?$AAu?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAF?$AAr?$AAe?$AAq?$AAu?$AAe?$AAn?$AAc?$AAy?$AA?$AA@| DCB "M"
	DCB	0x0, "a", 0x0, "x", 0x0, "i", 0x0, "m", 0x0, "u", 0x0, "m"
	DCB	0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "F"
	DCB	0x0, "r", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "n"
	DCB	0x0, "c", 0x0, "y", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@LOLEJNPJ@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAI?$AAS?$AAT?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I", 0x0, "S", 0x0, "T"
	DCB	0x0, "P", 0x0, "r", 0x0, "i", 0x0, "o", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "y", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@HGGPDGIP@?$AAC?$AAl?$AAo?$AAc?$AAk?$AAO?$AAn?$AAI?$AAf?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAs?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?$AA@| DCB "C"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "O", 0x0, "n"
	DCB	0x0, "I", 0x0, "f", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "s"
	DCB	0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@IDMBHNCC@?$AAC?$AAl?$AAo?$AAc?$AAk?$AAA?$AAl?$AAw?$AAa?$AAy?$AAs?$AAO?$AAn?$AA?$AA@| DCB "C"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "A", 0x0, "l"
	DCB	0x0, "w", 0x0, "a", 0x0, "y", 0x0, "s", 0x0, "O", 0x0, "n"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@OJBDCMDA@?$AAD?$AAM?$AAA?$AAI?$AAS?$AAT?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| DCB "D"
	DCB	0x0, "M", 0x0, "A", 0x0, "I", 0x0, "S", 0x0, "T", 0x0, "P"
	DCB	0x0, "r", 0x0, "i", 0x0, "o", 0x0, "r", 0x0, "i", 0x0, "t"
	DCB	0x0, "y", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@GMMNAJKE@?$AAD?$AAM?$AAA?$AAI?$AAs?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$AA@| DCB "D"
	DCB	0x0, "M", 0x0, "A", 0x0, "I", 0x0, "s", 0x0, "r", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@KPJJLCEA@?$AAD?$AAM?$AAA?$AAI?$AAs?$AAr?$AAD?$AAl?$AAl?$AA?$AA@| DCB "D"
	DCB	0x0, "M", 0x0, "A", 0x0, "I", 0x0, "s", 0x0, "r", 0x0, "D"
	DCB	0x0, "l", 0x0, "l", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@BHHIEEFG@?$AAD?$AAM?$AAA?$AAS?$AAy?$AAs?$AAI?$AAn?$AAt?$AAr?$AA?$AA@| DCB "D"
	DCB	0x0, "M", 0x0, "A", 0x0, "S", 0x0, "y", 0x0, "s", 0x0, "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@JHFMHONC@?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AAS?$AAi?$AAz?$AAe?$AA?$AA@| DCB "D"
	DCB	0x0, "M", 0x0, "A", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "S", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@KNMADMKP@?$AAD?$AAM?$AAA?$AAI?$AAR?$AAQ?$AA?$AA@| DCB "D", 0x0, "M"
	DCB	0x0, "A", 0x0, "I", 0x0, "R", 0x0, "Q", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@DPAMDNIK@?$AAD?$AAM?$AAA?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AA@| DCB "D"
	DCB	0x0, "M", 0x0, "A", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "l", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@LBONBMJK@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAI?$AAR?$AAQ?$AA?$AA@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I", 0x0, "R", 0x0, "Q"
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  008b0			 AREA	 |.text|, CODE, ARM

  008b0		 |LoadRegistrySettings| PROC

; 397  : {

  008b0		 |$LN36@LoadRegist|
  008b0	e1a0c00d	 mov         r12, sp
  008b4	e92d0003	 stmdb       sp!, {r0, r1}
  008b8	e92d5000	 stmdb       sp!, {r12, lr}
  008bc	e24dd0c0	 sub         sp, sp, #0xC0
  008c0		 |$M43224|

; 398  :     DWORD dwRegVal;
; 399  :     DWORD dwDataSize;
; 400  :     DWORD dwType;
; 401  : 
; 402  :     dwDataSize = sizeof(DWORD);

  008c0	e3a03004	 mov         r3, #4
  008c4	e58d3010	 str         r3, [sp, #0x10]

; 403  :     if( ERROR_SUCCESS == RegQueryValueEx( hKeyDevice, CONTROLLER_IRQ_TEXT,
; 404  :                                           NULL, &dwType, (LPBYTE)&dwRegVal, &dwDataSize ) &&
; 405  :         REG_DWORD == dwType )

  008c8	e28d3010	 add         r3, sp, #0x10
  008cc	e58d3004	 str         r3, [sp, #4]
  008d0	e28d300c	 add         r3, sp, #0xC
  008d4	e58d3000	 str         r3, [sp]
  008d8	e28d3008	 add         r3, sp, #8
  008dc	e3a02000	 mov         r2, #0
  008e0	e59f1648	 ldr         r1, [pc, #0x648]
  008e4	e59d00c8	 ldr         r0, [sp, #0xC8]
  008e8	eb000000	 bl          RegQueryValueExW
  008ec	e58d0080	 str         r0, [sp, #0x80]
  008f0	e59d3080	 ldr         r3, [sp, #0x80]
  008f4	e3530000	 cmp         r3, #0
  008f8	1a000007	 bne         |$LN27@LoadRegist|
  008fc	e59d3008	 ldr         r3, [sp, #8]
  00900	e3530004	 cmp         r3, #4
  00904	1a000004	 bne         |$LN27@LoadRegist|

; 406  :     {
; 407  :         pController->dwSDMMCIrq = dwRegVal;

  00908	e59d30cc	 ldr         r3, [sp, #0xCC]
  0090c	e2832028	 add         r2, r3, #0x28
  00910	e59d300c	 ldr         r3, [sp, #0xC]
  00914	e5823000	 str         r3, [r2]

; 408  :     }
; 409  :     else

  00918	ea000002	 b           |$LN26@LoadRegist|
  0091c		 |$LN27@LoadRegist|

; 410  :     {
; 411  :         return FALSE;

  0091c	e3a03000	 mov         r3, #0
  00920	e58d301c	 str         r3, [sp, #0x1C]
  00924	ea000170	 b           |$LN28@LoadRegist|
  00928		 |$LN26@LoadRegist|

; 412  :     }
; 413  : 
; 414  :     // get the DMA channel
; 415  :     dwDataSize = sizeof(DWORD);

  00928	e3a03004	 mov         r3, #4
  0092c	e58d3010	 str         r3, [sp, #0x10]

; 416  :     if( ERROR_SUCCESS == RegQueryValueEx( hKeyDevice, CONTROLLER_DMA_CHANNEL_TEXT,
; 417  :                                           NULL, &dwType, (LPBYTE)&dwRegVal, &dwDataSize ) &&
; 418  :         REG_DWORD == dwType )

  00930	e28d3010	 add         r3, sp, #0x10
  00934	e58d3004	 str         r3, [sp, #4]
  00938	e28d300c	 add         r3, sp, #0xC
  0093c	e58d3000	 str         r3, [sp]
  00940	e28d3008	 add         r3, sp, #8
  00944	e3a02000	 mov         r2, #0
  00948	e59f15dc	 ldr         r1, [pc, #0x5DC]
  0094c	e59d00c8	 ldr         r0, [sp, #0xC8]
  00950	eb000000	 bl          RegQueryValueExW
  00954	e58d0084	 str         r0, [sp, #0x84]
  00958	e59d3084	 ldr         r3, [sp, #0x84]
  0095c	e3530000	 cmp         r3, #0
  00960	1a0000b5	 bne         |$LN25@LoadRegist|
  00964	e59d3008	 ldr         r3, [sp, #8]
  00968	e3530004	 cmp         r3, #4
  0096c	1a0000b2	 bne         |$LN25@LoadRegist|

; 419  :     {
; 420  :         if( dwRegVal > 31 )

  00970	e59d300c	 ldr         r3, [sp, #0xC]
  00974	e353001f	 cmp         r3, #0x1F
  00978	9a000007	 bls         |$LN24@LoadRegist|

; 421  :         {
; 422  :             pController->dwDmaChannel = 0xffffffff;

  0097c	e59d30cc	 ldr         r3, [sp, #0xCC]
  00980	e2833c0a	 add         r3, r3, #0xA, 24
  00984	e28320a4	 add         r2, r3, #0xA4
  00988	e3e03000	 mvn         r3, #0
  0098c	e5823000	 str         r3, [r2]

; 423  :             return FALSE;

  00990	e3a03000	 mov         r3, #0
  00994	e58d301c	 str         r3, [sp, #0x1C]
  00998	ea000153	 b           |$LN28@LoadRegist|
  0099c		 |$LN24@LoadRegist|

; 424  :         }
; 425  :         pController->dwDmaChannel = dwRegVal;

  0099c	e59d30cc	 ldr         r3, [sp, #0xCC]
  009a0	e2833c0a	 add         r3, r3, #0xA, 24
  009a4	e28320a4	 add         r2, r3, #0xA4
  009a8	e59d300c	 ldr         r3, [sp, #0xC]
  009ac	e5823000	 str         r3, [r2]

; 426  : 
; 427  :         // get the DMA IRQ
; 428  :         dwDataSize = sizeof(DWORD);

  009b0	e3a03004	 mov         r3, #4
  009b4	e58d3010	 str         r3, [sp, #0x10]

; 429  :         if( ERROR_SUCCESS == RegQueryValueEx( hKeyDevice, CONTROLLER_DMA_IRQ_TEXT,
; 430  :                                               NULL, &dwType, (LPBYTE)&dwRegVal, &dwDataSize ) &&
; 431  :             REG_DWORD == dwType )

  009b8	e28d3010	 add         r3, sp, #0x10
  009bc	e58d3004	 str         r3, [sp, #4]
  009c0	e28d300c	 add         r3, sp, #0xC
  009c4	e58d3000	 str         r3, [sp]
  009c8	e28d3008	 add         r3, sp, #8
  009cc	e3a02000	 mov         r2, #0
  009d0	e59f1550	 ldr         r1, [pc, #0x550]
  009d4	e59d00c8	 ldr         r0, [sp, #0xC8]
  009d8	eb000000	 bl          RegQueryValueExW
  009dc	e58d0088	 str         r0, [sp, #0x88]
  009e0	e59d3088	 ldr         r3, [sp, #0x88]
  009e4	e3530000	 cmp         r3, #0
  009e8	1a000008	 bne         |$LN23@LoadRegist|
  009ec	e59d3008	 ldr         r3, [sp, #8]
  009f0	e3530004	 cmp         r3, #4
  009f4	1a000005	 bne         |$LN23@LoadRegist|

; 432  :         {
; 433  :             pController->dwDmaIRQ = dwRegVal;

  009f8	e59d30cc	 ldr         r3, [sp, #0xCC]
  009fc	e2833c0a	 add         r3, r3, #0xA, 24
  00a00	e283208c	 add         r2, r3, #0x8C
  00a04	e59d300c	 ldr         r3, [sp, #0xC]
  00a08	e5823000	 str         r3, [r2]

; 434  :         }
; 435  :         else

  00a0c	ea000004	 b           |$LN22@LoadRegist|
  00a10		 |$LN23@LoadRegist|

; 436  :         {
; 437  :             pController->dwDmaIRQ = IRQ_DMAC;

  00a10	e59d30cc	 ldr         r3, [sp, #0xCC]
  00a14	e2833c0a	 add         r3, r3, #0xA, 24
  00a18	e283208c	 add         r2, r3, #0x8C
  00a1c	e3a03019	 mov         r3, #0x19
  00a20	e5823000	 str         r3, [r2]
  00a24		 |$LN22@LoadRegist|

; 438  :         }
; 439  : 
; 440  :         // get the DMA buffer size
; 441  :         dwDataSize = sizeof(DWORD);

  00a24	e3a03004	 mov         r3, #4
  00a28	e58d3010	 str         r3, [sp, #0x10]

; 442  :         if( ERROR_SUCCESS == RegQueryValueEx( hKeyDevice, CONTROLLER_DMA_BUFFER_SIZE_TEXT,
; 443  :                                               NULL, &dwType, (LPBYTE)&dwRegVal, &dwDataSize ) &&
; 444  :             REG_DWORD == dwType )

  00a2c	e28d3010	 add         r3, sp, #0x10
  00a30	e58d3004	 str         r3, [sp, #4]
  00a34	e28d300c	 add         r3, sp, #0xC
  00a38	e58d3000	 str         r3, [sp]
  00a3c	e28d3008	 add         r3, sp, #8
  00a40	e3a02000	 mov         r2, #0
  00a44	e59f14d8	 ldr         r1, [pc, #0x4D8]
  00a48	e59d00c8	 ldr         r0, [sp, #0xC8]
  00a4c	eb000000	 bl          RegQueryValueExW
  00a50	e58d008c	 str         r0, [sp, #0x8C]
  00a54	e59d308c	 ldr         r3, [sp, #0x8C]
  00a58	e3530000	 cmp         r3, #0
  00a5c	1a000007	 bne         |$LN21@LoadRegist|
  00a60	e59d3008	 ldr         r3, [sp, #8]
  00a64	e3530004	 cmp         r3, #4
  00a68	1a000004	 bne         |$LN21@LoadRegist|

; 445  :         {
; 446  :             pController->dwDmaBufferSize = dwRegVal;

  00a6c	e59d30cc	 ldr         r3, [sp, #0xCC]
  00a70	e2832088	 add         r2, r3, #0x88
  00a74	e59d300c	 ldr         r3, [sp, #0xC]
  00a78	e5823000	 str         r3, [r2]

; 447  :         }
; 448  :         else

  00a7c	ea000003	 b           |$LN20@LoadRegist|
  00a80		 |$LN21@LoadRegist|

; 449  :         {
; 450  :             pController->dwDmaBufferSize = 0;

  00a80	e59d30cc	 ldr         r3, [sp, #0xCC]
  00a84	e2832088	 add         r2, r3, #0x88
  00a88	e3a03000	 mov         r3, #0
  00a8c	e5823000	 str         r3, [r2]
  00a90		 |$LN20@LoadRegist|

; 451  :         }
; 452  : 
; 453  :         // get the DMA SysInt
; 454  :         dwDataSize = sizeof(DWORD);

  00a90	e3a03004	 mov         r3, #4
  00a94	e58d3010	 str         r3, [sp, #0x10]

; 455  :         if( ERROR_SUCCESS == RegQueryValueEx( hKeyDevice, CONTROLLER_DMA_SYSINT_TEXT,
; 456  :                                               NULL, &dwType, (LPBYTE)&dwRegVal, &dwDataSize ) &&
; 457  :             REG_DWORD == dwType )

  00a98	e28d3010	 add         r3, sp, #0x10
  00a9c	e58d3004	 str         r3, [sp, #4]
  00aa0	e28d300c	 add         r3, sp, #0xC
  00aa4	e58d3000	 str         r3, [sp]
  00aa8	e28d3008	 add         r3, sp, #8
  00aac	e3a02000	 mov         r2, #0
  00ab0	e59f1468	 ldr         r1, [pc, #0x468]
  00ab4	e59d00c8	 ldr         r0, [sp, #0xC8]
  00ab8	eb000000	 bl          RegQueryValueExW
  00abc	e58d0090	 str         r0, [sp, #0x90]
  00ac0	e59d3090	 ldr         r3, [sp, #0x90]
  00ac4	e3530000	 cmp         r3, #0
  00ac8	1a000007	 bne         |$LN19@LoadRegist|
  00acc	e59d3008	 ldr         r3, [sp, #8]
  00ad0	e3530004	 cmp         r3, #4
  00ad4	1a000004	 bne         |$LN19@LoadRegist|

; 458  :         {
; 459  :             pController->dwDmaSysIntr = dwRegVal;

  00ad8	e59d30cc	 ldr         r3, [sp, #0xCC]
  00adc	e2832ea9	 add         r2, r3, #0xA9, 28
  00ae0	e59d300c	 ldr         r3, [sp, #0xC]
  00ae4	e5823000	 str         r3, [r2]

; 460  :         }
; 461  :         else

  00ae8	ea000003	 b           |$LN18@LoadRegist|
  00aec		 |$LN19@LoadRegist|

; 462  :         {
; 463  :             pController->dwDmaSysIntr = SYSINTR_UNDEFINED;

  00aec	e59d30cc	 ldr         r3, [sp, #0xCC]
  00af0	e2832ea9	 add         r2, r3, #0xA9, 28
  00af4	e3e03000	 mvn         r3, #0
  00af8	e5823000	 str         r3, [r2]
  00afc		 |$LN18@LoadRegist|

; 464  :         }
; 465  : 
; 466  :         dwDataSize = sizeof(pController->wszDmaIsrDll);

  00afc	e3a03b02	 mov         r3, #2, 22
  00b00	e58d3010	 str         r3, [sp, #0x10]

; 467  :         if( ERROR_SUCCESS == RegQueryValueEx( hKeyDevice, CONTROLLER_DMA_ISR_DLL_TEXT,
; 468  :                                               NULL, &dwType, (LPBYTE)pController->wszDmaIsrDll, &dwDataSize ) &&
; 469  :             REG_SZ == dwType )

  00b04	e28d3010	 add         r3, sp, #0x10
  00b08	e58d3004	 str         r3, [sp, #4]
  00b0c	e59d30cc	 ldr         r3, [sp, #0xCC]
  00b10	e283308c	 add         r3, r3, #0x8C
  00b14	e58d3000	 str         r3, [sp]
  00b18	e28d3008	 add         r3, sp, #8
  00b1c	e3a02000	 mov         r2, #0
  00b20	e59f13f4	 ldr         r1, [pc, #0x3F4]
  00b24	e59d00c8	 ldr         r0, [sp, #0xC8]
  00b28	eb000000	 bl          RegQueryValueExW
  00b2c	e58d0094	 str         r0, [sp, #0x94]
  00b30	e59d3094	 ldr         r3, [sp, #0x94]
  00b34	e3530000	 cmp         r3, #0
  00b38	1a000003	 bne         |$LN17@LoadRegist|
  00b3c	e59d3008	 ldr         r3, [sp, #8]
  00b40	e3530001	 cmp         r3, #1
  00b44	1a000000	 bne         |$LN17@LoadRegist|

; 470  :         {
; 471  :         }
; 472  :         else

  00b48	ea000003	 b           |$LN16@LoadRegist|
  00b4c		 |$LN17@LoadRegist|

; 473  :         {
; 474  :             pController->wszDmaIsrDll[0] = 0;

  00b4c	e59d30cc	 ldr         r3, [sp, #0xCC]
  00b50	e283208c	 add         r2, r3, #0x8C
  00b54	e3a03000	 mov         r3, #0
  00b58	e1c230b0	 strh        r3, [r2]
  00b5c		 |$LN16@LoadRegist|

; 475  :         }
; 476  : 
; 477  :         dwDataSize = sizeof(pController->wszDmaIsrHandler);

  00b5c	e3a03c02	 mov         r3, #2, 24
  00b60	e58d3010	 str         r3, [sp, #0x10]

; 478  :         if( ERROR_SUCCESS == RegQueryValueEx( hKeyDevice, CONTROLLER_DMA_ISR_HANDLER_TEXT,
; 479  :                                               NULL, &dwType, (LPBYTE)pController->wszDmaIsrHandler, &dwDataSize ) &&
; 480  :             REG_SZ == dwType )

  00b64	e28d3010	 add         r3, sp, #0x10
  00b68	e58d3004	 str         r3, [sp, #4]
  00b6c	e59d30cc	 ldr         r3, [sp, #0xCC]
  00b70	e2833b02	 add         r3, r3, #2, 22
  00b74	e283308c	 add         r3, r3, #0x8C
  00b78	e58d3000	 str         r3, [sp]
  00b7c	e28d3008	 add         r3, sp, #8
  00b80	e3a02000	 mov         r2, #0
  00b84	e59f138c	 ldr         r1, [pc, #0x38C]
  00b88	e59d00c8	 ldr         r0, [sp, #0xC8]
  00b8c	eb000000	 bl          RegQueryValueExW
  00b90	e58d0098	 str         r0, [sp, #0x98]
  00b94	e59d3098	 ldr         r3, [sp, #0x98]
  00b98	e3530000	 cmp         r3, #0
  00b9c	1a000003	 bne         |$LN15@LoadRegist|
  00ba0	e59d3008	 ldr         r3, [sp, #8]
  00ba4	e3530001	 cmp         r3, #1
  00ba8	1a000000	 bne         |$LN15@LoadRegist|

; 481  :         {
; 482  :         }
; 483  :         else

  00bac	ea000004	 b           |$LN14@LoadRegist|
  00bb0		 |$LN15@LoadRegist|

; 484  :         {
; 485  :             pController->wszDmaIsrHandler[0] = 0;

  00bb0	e59d30cc	 ldr         r3, [sp, #0xCC]
  00bb4	e2833b02	 add         r3, r3, #2, 22
  00bb8	e283208c	 add         r2, r3, #0x8C
  00bbc	e3a03000	 mov         r3, #0
  00bc0	e1c230b0	 strh        r3, [r2]
  00bc4		 |$LN14@LoadRegist|

; 486  :         }
; 487  : 
; 488  :         dwDataSize = sizeof(DWORD);

  00bc4	e3a03004	 mov         r3, #4
  00bc8	e58d3010	 str         r3, [sp, #0x10]

; 489  :         if( ERROR_SUCCESS == RegQueryValueEx( hKeyDevice, CONTROLLER_DMA_IST_PRI_TEXT,
; 490  :                                               NULL, &dwType, (LPBYTE)&dwRegVal, &dwDataSize ) &&
; 491  :             REG_DWORD == dwType )

  00bcc	e28d3010	 add         r3, sp, #0x10
  00bd0	e58d3004	 str         r3, [sp, #4]
  00bd4	e28d300c	 add         r3, sp, #0xC
  00bd8	e58d3000	 str         r3, [sp]
  00bdc	e28d3008	 add         r3, sp, #8
  00be0	e3a02000	 mov         r2, #0
  00be4	e59f1328	 ldr         r1, [pc, #0x328]
  00be8	e59d00c8	 ldr         r0, [sp, #0xC8]
  00bec	eb000000	 bl          RegQueryValueExW
  00bf0	e58d009c	 str         r0, [sp, #0x9C]
  00bf4	e59d309c	 ldr         r3, [sp, #0x9C]
  00bf8	e3530000	 cmp         r3, #0
  00bfc	1a000008	 bne         |$LN13@LoadRegist|
  00c00	e59d3008	 ldr         r3, [sp, #8]
  00c04	e3530004	 cmp         r3, #4
  00c08	1a000005	 bne         |$LN13@LoadRegist|

; 492  :         {
; 493  :             pController->DmaIstThreadPriority = dwRegVal;

  00c0c	e59d30cc	 ldr         r3, [sp, #0xCC]
  00c10	e2833c0a	 add         r3, r3, #0xA, 24
  00c14	e283209c	 add         r2, r3, #0x9C
  00c18	e59d300c	 ldr         r3, [sp, #0xC]
  00c1c	e5823000	 str         r3, [r2]

; 494  :         }
; 495  :         else

  00c20	ea000004	 b           |$LN12@LoadRegist|
  00c24		 |$LN13@LoadRegist|

; 496  :         {
; 497  :             pController->DmaIstThreadPriority = SDH_DMA_CONTROLLER_PRIORITY;

  00c24	e59d30cc	 ldr         r3, [sp, #0xCC]
  00c28	e2833c0a	 add         r3, r3, #0xA, 24
  00c2c	e283209c	 add         r2, r3, #0x9C
  00c30	e3a03063	 mov         r3, #0x63
  00c34	e5823000	 str         r3, [r2]
  00c38		 |$LN12@LoadRegist|

; 498  :         }
; 499  :     }
; 500  :     else

  00c38	ea00000d	 b           |$LN11@LoadRegist|
  00c3c		 |$LN25@LoadRegist|

; 501  :     {
; 502  :         pController->dwDmaChannel = 0xffffffff;

  00c3c	e59d30cc	 ldr         r3, [sp, #0xCC]
  00c40	e2833c0a	 add         r3, r3, #0xA, 24
  00c44	e28320a4	 add         r2, r3, #0xA4
  00c48	e3e03000	 mvn         r3, #0
  00c4c	e5823000	 str         r3, [r2]

; 503  :         pController->wszDmaIsrDll[0] = 0;

  00c50	e59d30cc	 ldr         r3, [sp, #0xCC]
  00c54	e283208c	 add         r2, r3, #0x8C
  00c58	e3a03000	 mov         r3, #0
  00c5c	e1c230b0	 strh        r3, [r2]

; 504  :         pController->wszDmaIsrHandler[0] = 0;

  00c60	e59d30cc	 ldr         r3, [sp, #0xCC]
  00c64	e2833b02	 add         r3, r3, #2, 22
  00c68	e283208c	 add         r2, r3, #0x8C
  00c6c	e3a03000	 mov         r3, #0
  00c70	e1c230b0	 strh        r3, [r2]
  00c74		 |$LN11@LoadRegist|

; 505  :     }
; 506  : 
; 507  :     dwDataSize = sizeof(DWORD);

  00c74	e3a03004	 mov         r3, #4
  00c78	e58d3010	 str         r3, [sp, #0x10]

; 508  :     if( ERROR_SUCCESS == RegQueryValueEx( hKeyDevice, CLOCK_ALWAYS_ON_TEXT,
; 509  :                                           NULL, &dwType, (LPBYTE)&dwRegVal, &dwDataSize ) &&
; 510  :         REG_DWORD == dwType )

  00c7c	e28d3010	 add         r3, sp, #0x10
  00c80	e58d3004	 str         r3, [sp, #4]
  00c84	e28d300c	 add         r3, sp, #0xC
  00c88	e58d3000	 str         r3, [sp]
  00c8c	e28d3008	 add         r3, sp, #8
  00c90	e3a02000	 mov         r2, #0
  00c94	e59f1274	 ldr         r1, [pc, #0x274]
  00c98	e59d00c8	 ldr         r0, [sp, #0xC8]
  00c9c	eb000000	 bl          RegQueryValueExW
  00ca0	e58d00a0	 str         r0, [sp, #0xA0]
  00ca4	e59d30a0	 ldr         r3, [sp, #0xA0]
  00ca8	e3530000	 cmp         r3, #0
  00cac	1a00000f	 bne         |$LN10@LoadRegist|
  00cb0	e59d3008	 ldr         r3, [sp, #8]
  00cb4	e3530004	 cmp         r3, #4
  00cb8	1a00000c	 bne         |$LN10@LoadRegist|

; 511  :     {
; 512  :         pController->fClockAlwaysOn = dwRegVal ? TRUE : FALSE;

  00cbc	e59d300c	 ldr         r3, [sp, #0xC]
  00cc0	e3530000	 cmp         r3, #0
  00cc4	0a000002	 beq         |$LN30@LoadRegist|
  00cc8	e3a03001	 mov         r3, #1
  00ccc	e58d30a4	 str         r3, [sp, #0xA4]
  00cd0	ea000001	 b           |$LN31@LoadRegist|
  00cd4		 |$LN30@LoadRegist|
  00cd4	e3a03000	 mov         r3, #0
  00cd8	e58d30a4	 str         r3, [sp, #0xA4]
  00cdc		 |$LN31@LoadRegist|
  00cdc	e59d30cc	 ldr         r3, [sp, #0xCC]
  00ce0	e2832d35	 add         r2, r3, #0x35, 26
  00ce4	e59d30a4	 ldr         r3, [sp, #0xA4]
  00ce8	e5823000	 str         r3, [r2]

; 513  :     }
; 514  :     else

  00cec	ea000003	 b           |$LN9@LoadRegist|
  00cf0		 |$LN10@LoadRegist|

; 515  :     {
; 516  :         pController->fClockAlwaysOn = FALSE;

  00cf0	e59d30cc	 ldr         r3, [sp, #0xCC]
  00cf4	e2832d35	 add         r2, r3, #0x35, 26
  00cf8	e3a03000	 mov         r3, #0
  00cfc	e5823000	 str         r3, [r2]
  00d00		 |$LN9@LoadRegist|

; 517  :     }
; 518  : 
; 519  :     dwDataSize = sizeof(DWORD);

  00d00	e3a03004	 mov         r3, #4
  00d04	e58d3010	 str         r3, [sp, #0x10]

; 520  :     if( ERROR_SUCCESS == RegQueryValueEx( hKeyDevice, CLOCK_ON_IF_INTERRUPTS_ENABLED_TEXT,
; 521  :                                           NULL, &dwType, (LPBYTE)&dwRegVal, &dwDataSize ) &&
; 522  :         REG_DWORD == dwType )

  00d08	e28d3010	 add         r3, sp, #0x10
  00d0c	e58d3004	 str         r3, [sp, #4]
  00d10	e28d300c	 add         r3, sp, #0xC
  00d14	e58d3000	 str         r3, [sp]
  00d18	e28d3008	 add         r3, sp, #8
  00d1c	e3a02000	 mov         r2, #0
  00d20	e59f11e4	 ldr         r1, [pc, #0x1E4]
  00d24	e59d00c8	 ldr         r0, [sp, #0xC8]
  00d28	eb000000	 bl          RegQueryValueExW
  00d2c	e58d00a8	 str         r0, [sp, #0xA8]
  00d30	e59d30a8	 ldr         r3, [sp, #0xA8]
  00d34	e3530000	 cmp         r3, #0
  00d38	1a000010	 bne         |$LN8@LoadRegist|
  00d3c	e59d3008	 ldr         r3, [sp, #8]
  00d40	e3530004	 cmp         r3, #4
  00d44	1a00000d	 bne         |$LN8@LoadRegist|

; 523  :     {
; 524  :         pController->fClockOnIfInterruptsEnabled = dwRegVal ? TRUE : FALSE;

  00d48	e59d300c	 ldr         r3, [sp, #0xC]
  00d4c	e3530000	 cmp         r3, #0
  00d50	0a000002	 beq         |$LN32@LoadRegist|
  00d54	e3a03001	 mov         r3, #1
  00d58	e58d30ac	 str         r3, [sp, #0xAC]
  00d5c	ea000001	 b           |$LN33@LoadRegist|
  00d60		 |$LN32@LoadRegist|
  00d60	e3a03000	 mov         r3, #0
  00d64	e58d30ac	 str         r3, [sp, #0xAC]
  00d68		 |$LN33@LoadRegist|
  00d68	e59d30cc	 ldr         r3, [sp, #0xCC]
  00d6c	e2833c0d	 add         r3, r3, #0xD, 24
  00d70	e2832044	 add         r2, r3, #0x44
  00d74	e59d30ac	 ldr         r3, [sp, #0xAC]
  00d78	e5823000	 str         r3, [r2]

; 525  :     }
; 526  :     else

  00d7c	ea000004	 b           |$LN7@LoadRegist|
  00d80		 |$LN8@LoadRegist|

; 527  :     {
; 528  :         pController->fClockOnIfInterruptsEnabled = FALSE;

  00d80	e59d30cc	 ldr         r3, [sp, #0xCC]
  00d84	e2833c0d	 add         r3, r3, #0xD, 24
  00d88	e2832044	 add         r2, r3, #0x44
  00d8c	e3a03000	 mov         r3, #0
  00d90	e5823000	 str         r3, [r2]
  00d94		 |$LN7@LoadRegist|

; 529  :     }
; 530  : 
; 531  :     dwDataSize = sizeof(DWORD);

  00d94	e3a03004	 mov         r3, #4
  00d98	e58d3010	 str         r3, [sp, #0x10]

; 532  :     if( ERROR_SUCCESS == RegQueryValueEx( hKeyDevice, CONTROLLER_IST_PRI_TEXT,
; 533  :                                           NULL, &dwType, (LPBYTE)&dwRegVal, &dwDataSize ) &&
; 534  :         REG_DWORD == dwType )

  00d9c	e28d3010	 add         r3, sp, #0x10
  00da0	e58d3004	 str         r3, [sp, #4]
  00da4	e28d300c	 add         r3, sp, #0xC
  00da8	e58d3000	 str         r3, [sp]
  00dac	e28d3008	 add         r3, sp, #8
  00db0	e3a02000	 mov         r2, #0
  00db4	e59f114c	 ldr         r1, [pc, #0x14C]
  00db8	e59d00c8	 ldr         r0, [sp, #0xC8]
  00dbc	eb000000	 bl          RegQueryValueExW
  00dc0	e58d00b0	 str         r0, [sp, #0xB0]
  00dc4	e59d30b0	 ldr         r3, [sp, #0xB0]
  00dc8	e3530000	 cmp         r3, #0
  00dcc	1a000007	 bne         |$LN6@LoadRegist|
  00dd0	e59d3008	 ldr         r3, [sp, #8]
  00dd4	e3530004	 cmp         r3, #4
  00dd8	1a000004	 bne         |$LN6@LoadRegist|

; 535  :     {
; 536  :         pController->ControllerIstThreadPriority = dwRegVal;

  00ddc	e59d30cc	 ldr         r3, [sp, #0xCC]
  00de0	e2832038	 add         r2, r3, #0x38
  00de4	e59d300c	 ldr         r3, [sp, #0xC]
  00de8	e5823000	 str         r3, [r2]

; 537  :     }
; 538  :     else

  00dec	ea000003	 b           |$LN5@LoadRegist|
  00df0		 |$LN6@LoadRegist|

; 539  :     {
; 540  :         pController->ControllerIstThreadPriority = SDH_CARD_CONTROLLER_PRIORITY;

  00df0	e59d30cc	 ldr         r3, [sp, #0xCC]
  00df4	e2832038	 add         r2, r3, #0x38
  00df8	e3a03064	 mov         r3, #0x64
  00dfc	e5823000	 str         r3, [r2]
  00e00		 |$LN5@LoadRegist|

; 541  :     }
; 542  : 
; 543  :     dwDataSize = sizeof(DWORD);

  00e00	e3a03004	 mov         r3, #4
  00e04	e58d3010	 str         r3, [sp, #0x10]

; 544  :     if( ERROR_SUCCESS == RegQueryValueEx( hKeyDevice, MAXIMUM_CLOCK_FREQUENCY_TEXT,
; 545  :                                           NULL, &dwType, (LPBYTE)&dwRegVal, &dwDataSize ) &&
; 546  :         REG_DWORD == dwType )

  00e08	e28d3010	 add         r3, sp, #0x10
  00e0c	e58d3004	 str         r3, [sp, #4]
  00e10	e28d300c	 add         r3, sp, #0xC
  00e14	e58d3000	 str         r3, [sp]
  00e18	e28d3008	 add         r3, sp, #8
  00e1c	e3a02000	 mov         r2, #0
  00e20	e59f10dc	 ldr         r1, [pc, #0xDC]
  00e24	e59d00c8	 ldr         r0, [sp, #0xC8]
  00e28	eb000000	 bl          RegQueryValueExW
  00e2c	e58d00b4	 str         r0, [sp, #0xB4]
  00e30	e59d30b4	 ldr         r3, [sp, #0xB4]
  00e34	e3530000	 cmp         r3, #0
  00e38	1a000007	 bne         |$LN4@LoadRegist|
  00e3c	e59d3008	 ldr         r3, [sp, #8]
  00e40	e3530004	 cmp         r3, #4
  00e44	1a000004	 bne         |$LN4@LoadRegist|

; 547  :     {
; 548  :         pController->dwMaximumSDClockFrequency = dwRegVal;

  00e48	e59d30cc	 ldr         r3, [sp, #0xCC]
  00e4c	e2832ed5	 add         r2, r3, #0xD5, 28
  00e50	e59d300c	 ldr         r3, [sp, #0xC]
  00e54	e5823000	 str         r3, [r2]

; 549  :     }
; 550  :     else

  00e58	ea000003	 b           |$LN3@LoadRegist|
  00e5c		 |$LN4@LoadRegist|

; 551  :     {
; 552  :         pController->dwMaximumSDClockFrequency = MAXIMUM_SDCLOCK_FREQUENCY;

  00e5c	e59d30cc	 ldr         r3, [sp, #0xCC]
  00e60	e2832ed5	 add         r2, r3, #0xD5, 28
  00e64	e59f3094	 ldr         r3, [pc, #0x94]
  00e68	e5823000	 str         r3, [r2]
  00e6c		 |$LN3@LoadRegist|

; 553  :     }
; 554  : 
; 555  :     dwDataSize = sizeof(DWORD);

  00e6c	e3a03004	 mov         r3, #4
  00e70	e58d3010	 str         r3, [sp, #0x10]

; 556  :     if( ERROR_SUCCESS == RegQueryValueEx( hKeyDevice, CONTROLLER_POLLING_MODE_TEXT,
; 557  :                                           NULL, &dwType, (LPBYTE)&dwRegVal, &dwDataSize ) &&
; 558  :         REG_DWORD == dwType )

  00e74	e28d3010	 add         r3, sp, #0x10
  00e78	e58d3004	 str         r3, [sp, #4]
  00e7c	e28d300c	 add         r3, sp, #0xC
  00e80	e58d3000	 str         r3, [sp]
  00e84	e28d3008	 add         r3, sp, #8
  00e88	e3a02000	 mov         r2, #0
  00e8c	e59f1068	 ldr         r1, [pc, #0x68]
  00e90	e59d00c8	 ldr         r0, [sp, #0xC8]
  00e94	eb000000	 bl          RegQueryValueExW
  00e98	e58d00b8	 str         r0, [sp, #0xB8]
  00e9c	e59d30b8	 ldr         r3, [sp, #0xB8]
  00ea0	e3530000	 cmp         r3, #0
  00ea4	1a000007	 bne         |$LN2@LoadRegist|
  00ea8	e59d3008	 ldr         r3, [sp, #8]
  00eac	e3530004	 cmp         r3, #4
  00eb0	1a000004	 bne         |$LN2@LoadRegist|

; 559  :     {
; 560  :         pController->dwPollingModeSize = dwRegVal;

  00eb4	e59d30cc	 ldr         r3, [sp, #0xCC]
  00eb8	e2832040	 add         r2, r3, #0x40
  00ebc	e59d300c	 ldr         r3, [sp, #0xC]
  00ec0	e5823000	 str         r3, [r2]

; 561  :     }
; 562  :     else

  00ec4	ea000003	 b           |$LN1@LoadRegist|
  00ec8		 |$LN2@LoadRegist|

; 563  :     {
; 564  :         pController->dwPollingModeSize = NUM_BYTE_FOR_POLLING_MODE;

  00ec8	e59d30cc	 ldr         r3, [sp, #0xCC]
  00ecc	e2832040	 add         r2, r3, #0x40
  00ed0	e3a03b02	 mov         r3, #2, 22
  00ed4	e5823000	 str         r3, [r2]
  00ed8		 |$LN1@LoadRegist|

; 565  :     }
; 566  :     return LoadPlatformRegistrySettings(hKeyDevice);

  00ed8	e59d00c8	 ldr         r0, [sp, #0xC8]
  00edc	eb000000	 bl          LoadPlatformRegistrySettings
  00ee0	e58d00bc	 str         r0, [sp, #0xBC]
  00ee4	e59d30bc	 ldr         r3, [sp, #0xBC]
  00ee8	e58d301c	 str         r3, [sp, #0x1C]
  00eec		 |$LN28@LoadRegist|

; 567  : }

  00eec	e59d001c	 ldr         r0, [sp, #0x1C]
  00ef0	e28dd0c0	 add         sp, sp, #0xC0
  00ef4	e89d6000	 ldmia       sp, {sp, lr}
  00ef8	e12fff1e	 bx          lr
  00efc		 |$LN37@LoadRegist|
  00efc		 |$LN38@LoadRegist|
  00efc	00000000	 DCD         |??_C@_1CA@LCEEPFOK@?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAM?$AAo?$AAd?$AAe?$AAS?$AAi?$AAz?$AAe?$AA?$AA@|
  00f00		 |$LN39@LoadRegist|
  00f00	01312d00	 DCD         0x1312d00
  00f04		 |$LN40@LoadRegist|
  00f04	00000000	 DCD         |??_C@_1CM@FPPMGDBH@?$AAM?$AAa?$AAx?$AAi?$AAm?$AAu?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAF?$AAr?$AAe?$AAq?$AAu?$AAe?$AAn?$AAc?$AAy?$AA?$AA@|
  00f08		 |$LN41@LoadRegist|
  00f08	00000000	 DCD         |??_C@_1CM@LOLEJNPJ@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAI?$AAS?$AAT?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@|
  00f0c		 |$LN42@LoadRegist|
  00f0c	00000000	 DCD         |??_C@_1DG@HGGPDGIP@?$AAC?$AAl?$AAo?$AAc?$AAk?$AAO?$AAn?$AAI?$AAf?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAs?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?$AA@|
  00f10		 |$LN43@LoadRegist|
  00f10	00000000	 DCD         |??_C@_1BM@IDMBHNCC@?$AAC?$AAl?$AAo?$AAc?$AAk?$AAA?$AAl?$AAw?$AAa?$AAy?$AAs?$AAO?$AAn?$AA?$AA@|
  00f14		 |$LN44@LoadRegist|
  00f14	00000000	 DCD         |??_C@_1BO@OJBDCMDA@?$AAD?$AAM?$AAA?$AAI?$AAS?$AAT?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@|
  00f18		 |$LN45@LoadRegist|
  00f18	00000000	 DCD         |??_C@_1BM@GMMNAJKE@?$AAD?$AAM?$AAA?$AAI?$AAs?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$AA@|
  00f1c		 |$LN46@LoadRegist|
  00f1c	00000000	 DCD         |??_C@_1BE@KPJJLCEA@?$AAD?$AAM?$AAA?$AAI?$AAs?$AAr?$AAD?$AAl?$AAl?$AA?$AA@|
  00f20		 |$LN47@LoadRegist|
  00f20	00000000	 DCD         |??_C@_1BG@BHHIEEFG@?$AAD?$AAM?$AAA?$AAS?$AAy?$AAs?$AAI?$AAn?$AAt?$AAr?$AA?$AA@|
  00f24		 |$LN48@LoadRegist|
  00f24	00000000	 DCD         |??_C@_1BM@JHFMHONC@?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AAS?$AAi?$AAz?$AAe?$AA?$AA@|
  00f28		 |$LN49@LoadRegist|
  00f28	00000000	 DCD         |??_C@_1O@KNMADMKP@?$AAD?$AAM?$AAA?$AAI?$AAR?$AAQ?$AA?$AA@|
  00f2c		 |$LN50@LoadRegist|
  00f2c	00000000	 DCD         |??_C@_1BG@DPAMDNIK@?$AAD?$AAM?$AAA?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AA@|
  00f30		 |$LN51@LoadRegist|
  00f30	00000000	 DCD         |??_C@_1BM@LBONBMJK@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAI?$AAR?$AAQ?$AA?$AA@|
  00f34		 |$M43225|

			 ENDP  ; |LoadRegistrySettings|

	END
