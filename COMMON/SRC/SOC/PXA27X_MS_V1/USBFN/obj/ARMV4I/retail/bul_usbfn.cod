; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\PXA27X_MS_V1\USBFN\bul_usbfn.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|SetEvent|
	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T37123| DCD	|$LN5@SetEvent|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37120|

; 236  : 	return EventModify(h,EVENT_SET);

  00004	e3a01003	 mov         r1, #3
  00008	eb000000	 bl          EventModify

; 237  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37121|

			 ENDP  ; |SetEvent|

	EXPORT	|??0CLockObject@@QAA@XZ|		; CLockObject::CLockObject
	IMPORT	|InitializeCriticalSection|
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37133| DCD	|$LN5@CLockObjec|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CLockObject@@QAA@XZ| PROC		; CLockObject::CLockObject

; 36   :     CLockObject()

  00000		 |$LN5@CLockObjec|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37130|
  00004	e1a04000	 mov         r4, r0

; 37   :     {
; 38   :         InitializeCriticalSection( &m_CSection );

  00008	eb000000	 bl          InitializeCriticalSection

; 39   :     };

  0000c	e1a00004	 mov         r0, r4
  00010	e8bd4010	 ldmia       sp!, {r4, lr}
  00014	e12fff1e	 bx          lr
  00018		 |$M37131|

			 ENDP  ; |??0CLockObject@@QAA@XZ|, CLockObject::CLockObject

	EXPORT	|??1CLockObject@@QAA@XZ|		; CLockObject::~CLockObject
	IMPORT	|DeleteCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37141| DCD	|$LN5@CLockObjec@2|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CLockObject@@QAA@XZ| PROC		; CLockObject::~CLockObject

; 41   :     {

  00000		 |$LN5@CLockObjec@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37138|

; 42   :         DeleteCriticalSection( &m_CSection );

  00004	eb000000	 bl          DeleteCriticalSection

; 43   :     };

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M37139|

			 ENDP  ; |??1CLockObject@@QAA@XZ|, CLockObject::~CLockObject

	EXPORT	|?Lock@CLockObject@@QAAXXZ|		; CLockObject::Lock
	IMPORT	|EnterCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37149| DCD	|$LN5@Lock|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Lock@CLockObject@@QAAXXZ| PROC	; CLockObject::Lock

; 45   :     {

  00000		 |$LN5@Lock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37146|

; 46   :         EnterCriticalSection( &m_CSection );

  00004	eb000000	 bl          EnterCriticalSection

; 47   :     };

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M37147|

			 ENDP  ; |?Lock@CLockObject@@QAAXXZ|, CLockObject::Lock

	EXPORT	|?Unlock@CLockObject@@QAAXXZ|		; CLockObject::Unlock
	IMPORT	|LeaveCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37157| DCD	|$LN5@Unlock|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Unlock@CLockObject@@QAAXXZ| PROC	; CLockObject::Unlock

; 49   :     {

  00000		 |$LN5@Unlock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37154|

; 50   :         LeaveCriticalSection( &m_CSection );

  00004	eb000000	 bl          LeaveCriticalSection

; 51   :     };

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M37155|

			 ENDP  ; |?Unlock@CLockObject@@QAAXXZ|, CLockObject::Unlock

	EXPORT	|?ThreadStart@CMiniThread@@QAAHXZ|	; CMiniThread::ThreadStart
	IMPORT	|ResumeThread|
; File c:\wince600\public\common\oak\inc\cmthread.h

  00000			 AREA	 |.pdata|, PDATA
|$T37167| DCD	|$LN7@ThreadStar|
	DCD	0x40001001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ThreadStart@CMiniThread@@QAAHXZ| PROC ; CMiniThread::ThreadStart

; 49   :     {

  00000		 |$LN7@ThreadStar|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37164|
  00004	e1a04000	 mov         r4, r0

; 50   :         if( m_bSuspendFlag )

  00008	e5943010	 ldr         r3, [r4, #0x10]
  0000c	e3530000	 cmp         r3, #0
  00010	0a000007	 beq         |$LN2@ThreadStar|

; 51   :         {
; 52   :             if( ResumeThread( m_hThreadHandle ) == ( DWORD ) ( -1 ) )

  00014	e5940008	 ldr         r0, [r4, #8]
  00018	eb000000	 bl          ResumeThread
  0001c	e3700001	 cmn         r0, #1

; 53   :             {
; 54   :                 // failure for resume somehow
; 55   :                 return FALSE;

  00020	03a00000	 moveq       r0, #0

; 60   :     }

  00024	08bd4010	 ldmeqia     sp!, {r4, lr}
  00028	012fff1e	 bxeq        lr

; 56   :             };
; 57   :             m_bSuspendFlag = FALSE;

  0002c	e3a03000	 mov         r3, #0
  00030	e5843010	 str         r3, [r4, #0x10]
  00034		 |$LN2@ThreadStar|

; 58   :         }
; 59   :         return TRUE;

  00034	e3a00001	 mov         r0, #1

; 60   :     }

  00038	e8bd4010	 ldmia       sp!, {r4, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$M37165|

			 ENDP  ; |?ThreadStart@CMiniThread@@QAAHXZ|, CMiniThread::ThreadStart

	EXPORT	|?CeSetPriority@CMiniThread@@QAAHH@Z|	; CMiniThread::CeSetPriority
	IMPORT	|CeSetThreadPriority|

  00000			 AREA	 |.pdata|, PDATA
|$T37178| DCD	|$LN6@CeSetPrior|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CeSetPriority@CMiniThread@@QAAHH@Z| PROC ; CMiniThread::CeSetPriority

; 77   :     {

  00000		 |$LN6@CeSetPrior|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37175|

; 78   :         if( m_hThreadHandle )

  00004	e5903008	 ldr         r3, [r0, #8]
  00008	e3530000	 cmp         r3, #0
  0000c	0a000003	 beq         |$LN1@CeSetPrior|

; 79   :         {
; 80   :             return CeSetThreadPriority( m_hThreadHandle, nPriority );

  00010	e1a00003	 mov         r0, r3
  00014	eb000000	 bl          CeSetThreadPriority

; 83   :     }

  00018	e49de004	 ldr         lr, [sp], #4
  0001c	e12fff1e	 bx          lr
  00020		 |$LN1@CeSetPrior|

; 81   :         }
; 82   :         return FALSE;

  00020	e3a00000	 mov         r0, #0

; 83   :     }

  00024	e49de004	 ldr         lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$M37176|

			 ENDP  ; |?CeSetPriority@CMiniThread@@QAAHH@Z|, CMiniThread::CeSetPriority

	EXPORT	|?WaitThreadComplete@CMiniThread@@QAAHK@Z| ; CMiniThread::WaitThreadComplete
	IMPORT	|CloseHandle|
	IMPORT	|WaitForSingleObject|

  00000			 AREA	 |.pdata|, PDATA
|$T37189| DCD	|$LN8@WaitThread|
	DCD	0x40001801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?WaitThreadComplete@CMiniThread@@QAAHK@Z| PROC ; CMiniThread::WaitThreadComplete

; 92   :     {

  00000		 |$LN8@WaitThread|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37186|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0

; 93   :         if( !m_hThreadHandle )

  0000c	e5943008	 ldr         r3, [r4, #8]
  00010	e3530000	 cmp         r3, #0

; 94   :         {
; 95   :             return FALSE;

  00014	0a00000e	 beq         |$LN1@WaitThread|

; 96   :         };
; 97   : 
; 98   :         if( ThreadStart() )

  00018	eb000000	 bl          |?ThreadStart@CMiniThread@@QAAHXZ|
  0001c	e3500000	 cmp         r0, #0
  00020	0a00000b	 beq         |$LN1@WaitThread|

; 99   :         {
; 100  :             if( ::WaitForSingleObject( m_hThreadHandle, dwMilliSeconds ) ==
; 101  :                 WAIT_OBJECT_0 )

  00024	e5940008	 ldr         r0, [r4, #8]
  00028	e1a01005	 mov         r1, r5
  0002c	eb000000	 bl          WaitForSingleObject
  00030	e3500000	 cmp         r0, #0
  00034	1a000006	 bne         |$LN1@WaitThread|

; 102  :             {
; 103  :                 // thread dead
; 104  :                 ::CloseHandle( m_hThreadHandle );

  00038	e5940008	 ldr         r0, [r4, #8]
  0003c	eb000000	 bl          CloseHandle

; 105  :                 m_hThreadHandle = NULL;

  00040	e3a03000	 mov         r3, #0
  00044	e5843008	 str         r3, [r4, #8]

; 106  :                 return TRUE;

  00048	e3a00001	 mov         r0, #1

; 110  :     }

  0004c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$LN1@WaitThread|

; 107  :             }
; 108  :         }
; 109  :         return FALSE;

  00054	e3a00000	 mov         r0, #0

; 110  :     }

  00058	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$M37187|

			 ENDP  ; |?WaitThreadComplete@CMiniThread@@QAAHK@Z|, CMiniThread::WaitThreadComplete

	EXPORT	|?ForceTerminated@CMiniThread@@QAAHXZ|	; CMiniThread::ForceTerminated
	IMPORT	|TerminateThread|

  00000			 AREA	 |.pdata|, PDATA
|$T37200| DCD	|$LN6@ForceTermi|
	DCD	0x40001401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ForceTerminated@CMiniThread@@QAAHXZ| PROC ; CMiniThread::ForceTerminated

; 113  :     {

  00000		 |$LN6@ForceTermi|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M37197|
  00004	e1a05000	 mov         r5, r0

; 114  :         if( m_hThreadHandle )

  00008	e5953008	 ldr         r3, [r5, #8]
  0000c	e3530000	 cmp         r3, #0
  00010	0a00000a	 beq         |$LN1@ForceTermi|

; 115  :         {
; 116  : //#pragma prefast(suppress: 258, "Try to recover from a pathological failure")
; 117  :             BOOL bReturn = ::TerminateThread( m_hThreadHandle, ( DWORD ) - 1 ); // terminate abnormal

  00014	e3e06000	 mvn         r6, #0
  00018	e1a01006	 mov         r1, r6
  0001c	e1a00003	 mov         r0, r3
  00020	eb000000	 bl          TerminateThread
  00024	e1a04000	 mov         r4, r0

; 118  :             m_dwExitCode = -1;
; 119  :             ::CloseHandle( m_hThreadHandle );

  00028	e5950008	 ldr         r0, [r5, #8]
  0002c	e5856014	 str         r6, [r5, #0x14]
  00030	eb000000	 bl          CloseHandle

; 120  :             m_hThreadHandle = NULL;

  00034	e3a03000	 mov         r3, #0
  00038	e5853008	 str         r3, [r5, #8]

; 121  :             return bReturn;

  0003c	ea000000	 b           |$LN2@ForceTermi|
  00040		 |$LN1@ForceTermi|

; 122  :         };
; 123  :         return TRUE;

  00040	e3a04001	 mov         r4, #1
  00044		 |$LN2@ForceTermi|

; 124  :     }

  00044	e1a00004	 mov         r0, r4
  00048	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M37198|

			 ENDP  ; |?ForceTerminated@CMiniThread@@QAAHXZ|, CMiniThread::ForceTerminated

	EXPORT	|?ThreadProc@CMiniThread@@CAKPAX@Z|	; CMiniThread::ThreadProc
	IMPORT	|ExitThread|

  00000			 AREA	 |.pdata|, PDATA
|$T37210| DCD	|$LN5@ThreadProc|
	DCD	0x40000c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ThreadProc@CMiniThread@@CAKPAX@Z| PROC ; CMiniThread::ThreadProc

; 154  :     {

  00000		 |$LN5@ThreadProc|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37207|
  00004	e1a04000	 mov         r4, r0

; 155  :         CMiniThread* pThreadPtr = ( CMiniThread* ) dParam;
; 156  :         pThreadPtr->m_dwExitCode = pThreadPtr->ThreadRun();

  00008	e5943000	 ldr         r3, [r4]
  0000c	e5933000	 ldr         r3, [r3]
  00010	e1a0e00f	 mov         lr, pc
  00014	e12fff13	 bx          r3
  00018	e1a03000	 mov         r3, r0

; 157  :         ::ExitThread( pThreadPtr->m_dwExitCode );

  0001c	e5843014	 str         r3, [r4, #0x14]
  00020	eb000000	 bl          ExitThread

; 158  :         return pThreadPtr->m_dwExitCode;

  00024	e5940014	 ldr         r0, [r4, #0x14]

; 159  :     };

  00028	e8bd4010	 ldmia       sp!, {r4, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M37208|

			 ENDP  ; |?ThreadProc@CMiniThread@@CAKPAX@Z|, CMiniThread::ThreadProc

	EXPORT	|??0CRegistryEdit@@QAA@PBG@Z|		; CRegistryEdit::CRegistryEdit
	IMPORT	|OpenDeviceKey|
; File c:\wince600\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.pdata|, PDATA
|$T37221| DCD	|$LN6@CRegistryE|
	DCD	0x40000c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CRegistryEdit@@QAA@PBG@Z| PROC	; CRegistryEdit::CRegistryEdit

; 36   :     CRegistryEdit( LPCTSTR RegPath )

  00000		 |$LN6@CRegistryE|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37218|
  00004	e3510000	 cmp         r1, #0
  00008	e1a04000	 mov         r4, r0

; 37   :     {
; 38   :         m_hDevKey = NULL;

  0000c	e3a03000	 mov         r3, #0
  00010	e5843000	 str         r3, [r4]

; 39   :         if( RegPath )

  00014	0a000002	 beq         |$LN1@CRegistryE|

; 40   :         {
; 41   :             m_hDevKey = OpenDeviceKey( RegPath );

  00018	e1a00001	 mov         r0, r1
  0001c	eb000000	 bl          OpenDeviceKey
  00020	e5840000	 str         r0, [r4]
  00024		 |$LN1@CRegistryE|

; 42   :         }
; 43   :     }

  00024	e1a00004	 mov         r0, r4
  00028	e8bd4010	 ldmia       sp!, {r4, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M37219|

			 ENDP  ; |??0CRegistryEdit@@QAA@PBG@Z|, CRegistryEdit::CRegistryEdit

	EXPORT	|??1CRegistryEdit@@QAA@XZ|		; CRegistryEdit::~CRegistryEdit
	IMPORT	|RegCloseKey|

  00000			 AREA	 |.pdata|, PDATA
|$T37229| DCD	|$LN6@CRegistryE@2|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CRegistryEdit@@QAA@XZ| PROC	; CRegistryEdit::~CRegistryEdit

; 80   :     {

  00000		 |$LN6@CRegistryE@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37226|

; 81   :         if( m_hDevKey )

  00004	e5903000	 ldr         r3, [r0]
  00008	e3530000	 cmp         r3, #0

; 82   :         {
; 83   :             RegCloseKey( m_hDevKey );

  0000c	11a00003	 movne       r0, r3
  00010	1b000000	 blne        RegCloseKey

; 84   :         }
; 85   :     }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M37227|

			 ENDP  ; |??1CRegistryEdit@@QAA@XZ|, CRegistryEdit::~CRegistryEdit

	EXPORT	|?GetWindowInfo@CRegistryEdit@@QAAKPAU_DDKWINDOWINFO_tag@@@Z| ; CRegistryEdit::GetWindowInfo
	IMPORT	|DDKReg_GetWindowInfo|

  00000			 AREA	 |.pdata|, PDATA
|$T37240| DCD	|$LN7@GetWindowI|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetWindowInfo@CRegistryEdit@@QAAKPAU_DDKWINDOWINFO_tag@@@Z| PROC ; CRegistryEdit::GetWindowInfo

; 88   :     {

  00000		 |$LN7@GetWindowI|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37237|
  00004	e3510000	 cmp         r1, #0

; 89   :         if( pdwi && m_hDevKey )

  00008	0a000008	 beq         |$LN2@GetWindowI|
  0000c	e5903000	 ldr         r3, [r0]
  00010	e3530000	 cmp         r3, #0
  00014	0a000005	 beq         |$LN2@GetWindowI|

; 90   :         {
; 91   :             pdwi->cbSize = sizeof( DDKWINDOWINFO );

  00018	e3a03074	 mov         r3, #0x74
  0001c	e5813000	 str         r3, [r1]

; 92   :             DWORD status = DDKReg_GetWindowInfo( m_hDevKey, pdwi );

  00020	e5900000	 ldr         r0, [r0]
  00024	eb000000	 bl          DDKReg_GetWindowInfo

; 98   :         }
; 99   :     }

  00028	e49de004	 ldr         lr, [sp], #4
  0002c	e12fff1e	 bx          lr
  00030		 |$LN2@GetWindowI|

; 93   :             return status;
; 94   :         }
; 95   :         else
; 96   :         {
; 97   :             return ERROR_INVALID_FUNCTION;

  00030	e3a00001	 mov         r0, #1

; 98   :         }
; 99   :     }

  00034	e49de004	 ldr         lr, [sp], #4
  00038	e12fff1e	 bx          lr
  0003c		 |$M37238|

			 ENDP  ; |?GetWindowInfo@CRegistryEdit@@QAAKPAU_DDKWINDOWINFO_tag@@@Z|, CRegistryEdit::GetWindowInfo

	EXPORT	|?GetIsrInfo@CRegistryEdit@@QAAKPAU_DDKISRINFO_tag@@@Z| ; CRegistryEdit::GetIsrInfo
	IMPORT	|DDKReg_GetIsrInfo|

  00000			 AREA	 |.pdata|, PDATA
|$T37251| DCD	|$LN7@GetIsrInfo|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetIsrInfo@CRegistryEdit@@QAAKPAU_DDKISRINFO_tag@@@Z| PROC ; CRegistryEdit::GetIsrInfo

; 102  :     {

  00000		 |$LN7@GetIsrInfo|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37248|
  00004	e3510000	 cmp         r1, #0

; 103  :         if( pddi && m_hDevKey )

  00008	0a000008	 beq         |$LN2@GetIsrInfo|
  0000c	e5903000	 ldr         r3, [r0]
  00010	e3530000	 cmp         r3, #0
  00014	0a000005	 beq         |$LN2@GetIsrInfo|

; 104  :         {
; 105  :             pddi->cbSize = sizeof( DDKISRINFO );

  00018	e3a03f43	 mov         r3, #0x43, 30
  0001c	e5813000	 str         r3, [r1]

; 106  :             DWORD status = DDKReg_GetIsrInfo( m_hDevKey, pddi );

  00020	e5900000	 ldr         r0, [r0]
  00024	eb000000	 bl          DDKReg_GetIsrInfo

; 112  :         }
; 113  :     }

  00028	e49de004	 ldr         lr, [sp], #4
  0002c	e12fff1e	 bx          lr
  00030		 |$LN2@GetIsrInfo|

; 107  :             return status;
; 108  :         }
; 109  :         else
; 110  :         {
; 111  :             return ERROR_INVALID_FUNCTION;

  00030	e3a00001	 mov         r0, #1

; 112  :         }
; 113  :     }

  00034	e49de004	 ldr         lr, [sp], #4
  00038	e12fff1e	 bx          lr
  0003c		 |$M37249|

			 ENDP  ; |?GetIsrInfo@CRegistryEdit@@QAAKPAU_DDKISRINFO_tag@@@Z|, CRegistryEdit::GetIsrInfo

	EXPORT	|?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z| ; CRegistryEdit::GetRegValue
	IMPORT	|RegQueryValueExW|

  00000			 AREA	 |.pdata|, PDATA
|$T37265| DCD	|$LN7@GetRegValu|
	DCD	0x40001404
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z| PROC ; CRegistryEdit::GetRegValue

; 130  :     {

  00000		 |$LN7@GetRegValu|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M37262|
  00010	e1a04002	 mov         r4, r2

; 131  :         DWORD dwType = 0;
; 132  :         LONG status = ::RegQueryValueEx( m_hDevKey,
; 133  :                                            lpcName,
; 134  :                                            NULL,
; 135  :                                            &dwType,
; 136  :                                            lpData,
; 137  :                                            &dwDataLen );

  00014	e5900000	 ldr         r0, [r0]
  00018	e3a05000	 mov         r5, #0
  0001c	e28de028	 add         lr, sp, #0x28
  00020	e28d3008	 add         r3, sp, #8
  00024	e3a02000	 mov         r2, #0
  00028	e58d5008	 str         r5, [sp, #8]
  0002c	e58de004	 str         lr, [sp, #4]
  00030	e58d4000	 str         r4, [sp]
  00034	eb000000	 bl          RegQueryValueExW
  00038	e3500000	 cmp         r0, #0

; 138  :         return ( status == ERROR_SUCCESS );

  0003c	03a00001	 moveq       r0, #1
  00040	13a00000	 movne       r0, #0

; 139  :     }

  00044	e28dd00c	 add         sp, sp, #0xC
  00048	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M37263|

			 ENDP  ; |?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z|, CRegistryEdit::GetRegValue

	EXPORT	|?RegSetValueExW@CRegistryEdit@@QAAHPBGKPAEK@Z| ; CRegistryEdit::RegSetValueExW
	IMPORT	|RegSetValueExW|

  00000			 AREA	 |.pdata|, PDATA
|$T37280| DCD	|$LN7@RegSetValu|
	DCD	0x40001002
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RegSetValueExW@CRegistryEdit@@QAAHPBGKPAEK@Z| PROC ; CRegistryEdit::RegSetValueExW

; 160  :     {

  00000		 |$LN7@RegSetValu|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M37277|
  00008	e1a04003	 mov         r4, r3
  0000c	e1a03002	 mov         r3, r2

; 161  :         LONG status = ::RegSetValueEx( m_hDevKey,
; 162  :                                          lpcName,
; 163  :                                          NULL,
; 164  :                                          dwType,
; 165  :                                          lpData,
; 166  :                                          dwDataLen );

  00010	e59de010	 ldr         lr, [sp, #0x10]
  00014	e5900000	 ldr         r0, [r0]
  00018	e3a02000	 mov         r2, #0
  0001c	e58de004	 str         lr, [sp, #4]
  00020	e58d4000	 str         r4, [sp]
  00024	eb000000	 bl          RegSetValueExW
  00028	e3500000	 cmp         r0, #0

; 167  :         return ( status == ERROR_SUCCESS );

  0002c	03a00001	 moveq       r0, #1
  00030	13a00000	 movne       r0, #0

; 168  :     }

  00034	e28dd008	 add         sp, sp, #8
  00038	e8bd4010	 ldmia       sp!, {r4, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$M37278|

			 ENDP  ; |?RegSetValueExW@CRegistryEdit@@QAAHPBGKPAEK@Z|, CRegistryEdit::RegSetValueExW

	EXPORT	|?IsKeyOpened@CRegistryEdit@@QAAHXZ|	; CRegistryEdit::IsKeyOpened

  00000			 AREA	 |.pdata|, PDATA
|$T37292| DCD	|$LN7@IsKeyOpene|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsKeyOpened@CRegistryEdit@@QAAHXZ| PROC ; CRegistryEdit::IsKeyOpened

; 171  :     {

  00000		 |$LN7@IsKeyOpene|
  00000		 |$M37289|

; 172  :         return ( m_hDevKey != NULL );

  00000	e5903000	 ldr         r3, [r0]
  00004	e3530000	 cmp         r3, #0
  00008	13a00001	 movne       r0, #1
  0000c	03a00000	 moveq       r0, #0

; 173  :     }

  00010	e12fff1e	 bx          lr
  00014		 |$M37290|

			 ENDP  ; |?IsKeyOpened@CRegistryEdit@@QAAHXZ|, CRegistryEdit::IsKeyOpened

	EXPORT	|??0CRefObject@@QAA@XZ|			; CRefObject::CRefObject
	EXPORT	|??_7CRefObject@@6B@| [ DATA ]		; CRefObject::`vftable'
	IMPORT	|??_ECRefObject@@UAAPAXI@Z|, WEAK |??_GCRefObject@@UAAPAXI@Z| ; CRefObject::`vector deleting destructor', CRefObject::`scalar deleting destructor'
; File c:\wince600\public\common\oak\inc\crefcon.h

  00000			 AREA	 |.pdata|, PDATA
|$T37302| DCD	|$LN5@CRefObject|
	DCD	0x40000600

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CRefObject@@6B@| DCD |??_ECRefObject@@UAAPAXI@Z|	; CRefObject::`vftable'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CRefObject@@QAA@XZ| PROC		; CRefObject::CRefObject

; 35   :     CRefObject()

  00000		 |$LN5@CRefObject|
  00000		 |$M37299|
  00000	e59f300c	 ldr         r3, [pc, #0xC]

; 36   :     {
; 37   :         m_lRefCount = 0;

  00004	e3a02000	 mov         r2, #0
  00008	e5802004	 str         r2, [r0, #4]
  0000c	e5803000	 str         r3, [r0]

; 38   :     };

  00010	e12fff1e	 bx          lr
  00014		 |$LN6@CRefObject|
  00014		 |$LN7@CRefObject|
  00014	00000000	 DCD         |??_7CRefObject@@6B@|
  00018		 |$M37300|

			 ENDP  ; |??0CRefObject@@QAA@XZ|, CRefObject::CRefObject

	EXPORT	|??1CRefObject@@UAA@XZ|			; CRefObject::~CRefObject

  00000			 AREA	 |.pdata|, PDATA
|$T37312| DCD	|$LN5@CRefObject@2|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CRefObject@@UAA@XZ| PROC		; CRefObject::~CRefObject

; 40   :     {

  00000		 |$LN5@CRefObject@2|
  00000		 |$M37309|
  00000	e59f3004	 ldr         r3, [pc, #4]
  00004	e5803000	 str         r3, [r0]

; 41   :         ;};

  00008	e12fff1e	 bx          lr
  0000c		 |$LN6@CRefObject@2|
  0000c		 |$LN7@CRefObject@2|
  0000c	00000000	 DCD         |??_7CRefObject@@6B@|
  00010		 |$M37310|

			 ENDP  ; |??1CRefObject@@UAA@XZ|, CRefObject::~CRefObject

	EXPORT	|?AddRef@CRefObject@@QAAKXZ|		; CRefObject::AddRef
	IMPORT	|InterlockedIncrement|

  00000			 AREA	 |.pdata|, PDATA
|$T37324| DCD	|$LN5@AddRef|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AddRef@CRefObject@@QAAKXZ| PROC	; CRefObject::AddRef

; 43   :     {

  00000		 |$LN5@AddRef|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37321|

; 44   :         return (DWORD)InterlockedIncrement(&m_lRefCount);

  00004	e2800004	 add         r0, r0, #4
  00008	eb000000	 bl          InterlockedIncrement

; 45   :     };

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37322|

			 ENDP  ; |?AddRef@CRefObject@@QAAKXZ|, CRefObject::AddRef

	EXPORT	|?DeRef@CRefObject@@QAAKXZ|		; CRefObject::DeRef
	IMPORT	|InterlockedDecrement|

  00000			 AREA	 |.pdata|, PDATA
|$T37339| DCD	|$LN8@DeRef|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DeRef@CRefObject@@QAAKXZ| PROC	; CRefObject::DeRef

; 47   :     {

  00000		 |$LN8@DeRef|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37336|
  00004	e1a04000	 mov         r4, r0

; 48   :         LONG lReturn = InterlockedDecrement(&m_lRefCount);

  00008	e2840004	 add         r0, r4, #4
  0000c	eb000000	 bl          InterlockedDecrement
  00010	e1a05000	 mov         r5, r0

; 49   :         if( lReturn <= 0 ) {

  00014	e3550000	 cmp         r5, #0
  00018	ca000006	 bgt         |$LN4@DeRef|

; 50   :             delete this;

  0001c	e3540000	 cmp         r4, #0
  00020	15943000	 ldrne       r3, [r4]
  00024	13a01001	 movne       r1, #1
  00028	11a00004	 movne       r0, r4
  0002c	15933000	 ldrne       r3, [r3]
  00030	11a0e00f	 movne       lr, pc
  00034	112fff13	 bxne        r3
  00038		 |$LN4@DeRef|

; 51   :         }
; 52   :         return (DWORD)lReturn;
; 53   :     }

  00038	e1a00005	 mov         r0, r5
  0003c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M37337|

			 ENDP  ; |?DeRef@CRefObject@@QAAKXZ|, CRefObject::DeRef

	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T37353| DCD	|$LN8@scalar|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCRefObject@@UAAPAXI@Z| PROC	; CRefObject::`scalar deleting destructor'
  00000		 |$LN8@scalar|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37350|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3014	 ldr         r3, [pc, #0x14]
  0000c	e3110001	 tst         r1, #1
  00010	e5843000	 str         r3, [r4]
  00014	1b000000	 blne        |??3@YAXPAX@Z|
  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN9@scalar|
  00024		 |$LN10@scalar|
  00024	00000000	 DCD         |??_7CRefObject@@6B@|
  00028		 |$M37351|

			 ENDP  ; |??_GCRefObject@@UAAPAXI@Z|, CRefObject::`scalar deleting destructor'

	EXPORT	|?WriteUDCRegister@BulUsbDevice@@QAAXKK@Z| ; BulUsbDevice::WriteUDCRegister
	IMPORT	|WRITE_REGISTER_ULONG|
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul_usbfn.h

  00000			 AREA	 |.pdata|, PDATA
|$T37365| DCD	|$LN5@WriteUDCRe|
	DCD	0x40000801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?WriteUDCRegister@BulUsbDevice@@QAAXKK@Z| PROC ; BulUsbDevice::WriteUDCRegister

; 121  :     void WriteUDCRegister(DWORD dwOffset, DWORD dwData) { 

  00000		 |$LN5@WriteUDCRe|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37362|
  00004	e1a0e001	 mov         lr, r1

; 122  :         PREFAST_ASSERT(m_pUsbDevReg!=NULL);
; 123  :         WRITE_REGISTER_ULONG(m_pUsbDevReg + dwOffset, dwData);

  00008	e5903098	 ldr         r3, [r0, #0x98]
  0000c	e1a01002	 mov         r1, r2
  00010	e083010e	 add         r0, r3, lr, lsl #2
  00014	eb000000	 bl          WRITE_REGISTER_ULONG

; 124  :     }

  00018	e49de004	 ldr         lr, [sp], #4
  0001c	e12fff1e	 bx          lr
  00020		 |$M37363|

			 ENDP  ; |?WriteUDCRegister@BulUsbDevice@@QAAXKK@Z|, BulUsbDevice::WriteUDCRegister

	EXPORT	|?ReadUDCRegister@BulUsbDevice@@QAAKK@Z| ; BulUsbDevice::ReadUDCRegister
	IMPORT	|READ_REGISTER_ULONG|

  00000			 AREA	 |.pdata|, PDATA
|$T37376| DCD	|$LN5@ReadUDCReg|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ReadUDCRegister@BulUsbDevice@@QAAKK@Z| PROC ; BulUsbDevice::ReadUDCRegister

; 125  :     DWORD ReadUDCRegister(DWORD dwOffset) {

  00000		 |$LN5@ReadUDCReg|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37373|

; 126  :         PREFAST_ASSERT(m_pUsbDevReg!=NULL);
; 127  :         return READ_REGISTER_ULONG(m_pUsbDevReg + dwOffset);

  00004	e5903098	 ldr         r3, [r0, #0x98]
  00008	e0830101	 add         r0, r3, r1, lsl #2
  0000c	eb000000	 bl          READ_REGISTER_ULONG

; 128  :     }

  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M37374|

			 ENDP  ; |?ReadUDCRegister@BulUsbDevice@@QAAKK@Z|, BulUsbDevice::ReadUDCRegister

	EXPORT	|?WriteUDCRegisterByte@BulUsbDevice@@QAAXKE@Z| ; BulUsbDevice::WriteUDCRegisterByte
	IMPORT	|WRITE_REGISTER_UCHAR|

  00000			 AREA	 |.pdata|, PDATA
|$T37386| DCD	|$LN5@WriteUDCRe@2|
	DCD	0x40000801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?WriteUDCRegisterByte@BulUsbDevice@@QAAXKE@Z| PROC ; BulUsbDevice::WriteUDCRegisterByte

; 129  :     void WriteUDCRegisterByte(DWORD dwOffset, BYTE bData) {

  00000		 |$LN5@WriteUDCRe@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37383|
  00004	e1a0e001	 mov         lr, r1

; 130  :         PREFAST_ASSERT(m_pUsbDevReg!=NULL);
; 131  :         WRITE_REGISTER_UCHAR((PUCHAR)(m_pUsbDevReg + dwOffset),bData);

  00008	e5903098	 ldr         r3, [r0, #0x98]
  0000c	e1a01002	 mov         r1, r2
  00010	e083010e	 add         r0, r3, lr, lsl #2
  00014	eb000000	 bl          WRITE_REGISTER_UCHAR

; 132  :     }

  00018	e49de004	 ldr         lr, [sp], #4
  0001c	e12fff1e	 bx          lr
  00020		 |$M37384|

			 ENDP  ; |?WriteUDCRegisterByte@BulUsbDevice@@QAAXKE@Z|, BulUsbDevice::WriteUDCRegisterByte

	EXPORT	|?ReadControlRegister@BulUsbDevice@@QAAKXZ| ; BulUsbDevice::ReadControlRegister

  00000			 AREA	 |.pdata|, PDATA
|$T37399| DCD	|$LN7@ReadContro|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ReadControlRegister@BulUsbDevice@@QAAKXZ| PROC ; BulUsbDevice::ReadControlRegister

; 139  :     DWORD   ReadControlRegister() {  return ReadUDCRegister(DEVICE_CONTROL_REGISTER); }

  00000		 |$LN7@ReadContro|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37396|
  00004	e5900098	 ldr         r0, [r0, #0x98]
  00008	eb000000	 bl          READ_REGISTER_ULONG
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37397|

			 ENDP  ; |?ReadControlRegister@BulUsbDevice@@QAAKXZ|, BulUsbDevice::ReadControlRegister

	EXPORT	|?WriteControlRegister@BulUsbDevice@@QAAXK@Z| ; BulUsbDevice::WriteControlRegister

  00000			 AREA	 |.pdata|, PDATA
|$T37411| DCD	|$LN7@WriteContr|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?WriteControlRegister@BulUsbDevice@@QAAXK@Z| PROC ; BulUsbDevice::WriteControlRegister

; 140  :     void    WriteControlRegister(DWORD dwData) { WriteUDCRegister(DEVICE_CONTROL_REGISTER, dwData);}

  00000		 |$LN7@WriteContr|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37408|
  00004	e5900098	 ldr         r0, [r0, #0x98]
  00008	eb000000	 bl          WRITE_REGISTER_ULONG
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37409|

			 ENDP  ; |?WriteControlRegister@BulUsbDevice@@QAAXK@Z|, BulUsbDevice::WriteControlRegister

	EXPORT	|?ReadIntrCtr0Register@BulUsbDevice@@QAAKXZ| ; BulUsbDevice::ReadIntrCtr0Register

  00000			 AREA	 |.pdata|, PDATA
|$T37424| DCD	|$LN7@ReadIntrCt|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ReadIntrCtr0Register@BulUsbDevice@@QAAKXZ| PROC ; BulUsbDevice::ReadIntrCtr0Register

; 141  :     DWORD   ReadIntrCtr0Register() { return ReadUDCRegister(DEVICE_INT_CR0_REGISTER); }

  00000		 |$LN7@ReadIntrCt|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37421|
  00004	e5903098	 ldr         r3, [r0, #0x98]
  00008	e2830004	 add         r0, r3, #4
  0000c	eb000000	 bl          READ_REGISTER_ULONG
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M37422|

			 ENDP  ; |?ReadIntrCtr0Register@BulUsbDevice@@QAAKXZ|, BulUsbDevice::ReadIntrCtr0Register

	EXPORT	|?ReadIntrCtr1Register@BulUsbDevice@@QAAKXZ| ; BulUsbDevice::ReadIntrCtr1Register

  00000			 AREA	 |.pdata|, PDATA
|$T37437| DCD	|$LN7@ReadIntrCt@2|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ReadIntrCtr1Register@BulUsbDevice@@QAAKXZ| PROC ; BulUsbDevice::ReadIntrCtr1Register

; 142  :     DWORD   ReadIntrCtr1Register() { return ReadUDCRegister(DEVICE_INT_CR1_REGISTER); }

  00000		 |$LN7@ReadIntrCt@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37434|
  00004	e5903098	 ldr         r3, [r0, #0x98]
  00008	e2830008	 add         r0, r3, #8
  0000c	eb000000	 bl          READ_REGISTER_ULONG
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M37435|

			 ENDP  ; |?ReadIntrCtr1Register@BulUsbDevice@@QAAKXZ|, BulUsbDevice::ReadIntrCtr1Register

	EXPORT	|?ReadIntrStatus0Register@BulUsbDevice@@QAAKXZ| ; BulUsbDevice::ReadIntrStatus0Register

  00000			 AREA	 |.pdata|, PDATA
|$T37450| DCD	|$LN7@ReadIntrSt|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ReadIntrStatus0Register@BulUsbDevice@@QAAKXZ| PROC ; BulUsbDevice::ReadIntrStatus0Register

; 143  :     DWORD   ReadIntrStatus0Register() { return ReadUDCRegister(DEVICE_INT_SR0_REGISTER); }

  00000		 |$LN7@ReadIntrSt|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37447|
  00004	e5903098	 ldr         r3, [r0, #0x98]
  00008	e283000c	 add         r0, r3, #0xC
  0000c	eb000000	 bl          READ_REGISTER_ULONG
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M37448|

			 ENDP  ; |?ReadIntrStatus0Register@BulUsbDevice@@QAAKXZ|, BulUsbDevice::ReadIntrStatus0Register

	EXPORT	|?ReadIntrStatus1Register@BulUsbDevice@@QAAKXZ| ; BulUsbDevice::ReadIntrStatus1Register

  00000			 AREA	 |.pdata|, PDATA
|$T37463| DCD	|$LN7@ReadIntrSt@2|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ReadIntrStatus1Register@BulUsbDevice@@QAAKXZ| PROC ; BulUsbDevice::ReadIntrStatus1Register

; 144  :     DWORD   ReadIntrStatus1Register() { return ReadUDCRegister(DEVICE_INT_SR1_REGISTER); }

  00000		 |$LN7@ReadIntrSt@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37460|
  00004	e5903098	 ldr         r3, [r0, #0x98]
  00008	e2830010	 add         r0, r3, #0x10
  0000c	eb000000	 bl          READ_REGISTER_ULONG
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M37461|

			 ENDP  ; |?ReadIntrStatus1Register@BulUsbDevice@@QAAKXZ|, BulUsbDevice::ReadIntrStatus1Register

	EXPORT	|?WriteIntrCtr0Register@BulUsbDevice@@QAAXK@Z| ; BulUsbDevice::WriteIntrCtr0Register

  00000			 AREA	 |.pdata|, PDATA
|$T37475| DCD	|$LN7@WriteIntrC|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?WriteIntrCtr0Register@BulUsbDevice@@QAAXK@Z| PROC ; BulUsbDevice::WriteIntrCtr0Register

; 145  :     void    WriteIntrCtr0Register(DWORD dwData) { WriteUDCRegister(DEVICE_INT_CR0_REGISTER, dwData); }

  00000		 |$LN7@WriteIntrC|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37472|
  00004	e5903098	 ldr         r3, [r0, #0x98]
  00008	e2830004	 add         r0, r3, #4
  0000c	eb000000	 bl          WRITE_REGISTER_ULONG
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M37473|

			 ENDP  ; |?WriteIntrCtr0Register@BulUsbDevice@@QAAXK@Z|, BulUsbDevice::WriteIntrCtr0Register

	EXPORT	|?WriteIntrCtr1Register@BulUsbDevice@@QAAXK@Z| ; BulUsbDevice::WriteIntrCtr1Register

  00000			 AREA	 |.pdata|, PDATA
|$T37487| DCD	|$LN7@WriteIntrC@2|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?WriteIntrCtr1Register@BulUsbDevice@@QAAXK@Z| PROC ; BulUsbDevice::WriteIntrCtr1Register

; 146  :     void    WriteIntrCtr1Register(DWORD dwData) { WriteUDCRegister(DEVICE_INT_CR1_REGISTER, dwData); }

  00000		 |$LN7@WriteIntrC@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37484|
  00004	e5903098	 ldr         r3, [r0, #0x98]
  00008	e2830008	 add         r0, r3, #8
  0000c	eb000000	 bl          WRITE_REGISTER_ULONG
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M37485|

			 ENDP  ; |?WriteIntrCtr1Register@BulUsbDevice@@QAAXK@Z|, BulUsbDevice::WriteIntrCtr1Register

	EXPORT	|?WriteIntrStatus0Register@BulUsbDevice@@QAAXK@Z| ; BulUsbDevice::WriteIntrStatus0Register

  00000			 AREA	 |.pdata|, PDATA
|$T37499| DCD	|$LN7@WriteIntrS|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?WriteIntrStatus0Register@BulUsbDevice@@QAAXK@Z| PROC ; BulUsbDevice::WriteIntrStatus0Register

; 147  :     void    WriteIntrStatus0Register(DWORD dwData) { WriteUDCRegister(DEVICE_INT_SR0_REGISTER,dwData); }

  00000		 |$LN7@WriteIntrS|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37496|
  00004	e5903098	 ldr         r3, [r0, #0x98]
  00008	e283000c	 add         r0, r3, #0xC
  0000c	eb000000	 bl          WRITE_REGISTER_ULONG
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M37497|

			 ENDP  ; |?WriteIntrStatus0Register@BulUsbDevice@@QAAXK@Z|, BulUsbDevice::WriteIntrStatus0Register

	EXPORT	|?WriteIntrStatus1Register@BulUsbDevice@@QAAXK@Z| ; BulUsbDevice::WriteIntrStatus1Register

  00000			 AREA	 |.pdata|, PDATA
|$T37511| DCD	|$LN7@WriteIntrS@2|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?WriteIntrStatus1Register@BulUsbDevice@@QAAXK@Z| PROC ; BulUsbDevice::WriteIntrStatus1Register

; 148  :     void    WriteIntrStatus1Register(DWORD dwData) { WriteUDCRegister(DEVICE_INT_SR1_REGISTER,dwData); }

  00000		 |$LN7@WriteIntrS@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37508|
  00004	e5903098	 ldr         r3, [r0, #0x98]
  00008	e2830010	 add         r0, r3, #0x10
  0000c	eb000000	 bl          WRITE_REGISTER_ULONG
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M37509|

			 ENDP  ; |?WriteIntrStatus1Register@BulUsbDevice@@QAAXK@Z|, BulUsbDevice::WriteIntrStatus1Register

	EXPORT	|?MddTransferComplete@BulUsbDevice@@QAAXPAU_STransfer@@@Z| ; BulUsbDevice::MddTransferComplete

  00000			 AREA	 |.pdata|, PDATA
|$T37520| DCD	|$LN6@MddTransfe|
	DCD	0x40000c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?MddTransferComplete@BulUsbDevice@@QAAXPAU_STransfer@@@Z| PROC ; BulUsbDevice::MddTransferComplete

; 160  :     void MddTransferComplete(PSTransfer pTransfer) {

  00000		 |$LN6@MddTransfe|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37517|

; 161  :         SETFNAME();
; 162  :         if (m_pvMddContext && pTransfer) {

  00004	e59030b4	 ldr         r3, [r0, #0xB4]
  00008	e1b0e003	 movs        lr, r3
  0000c	13510000	 cmpne       r1, #0

; 163  :             DEBUGMSG(ZONE_FUNCTION, (_T("%s MddTransferComplete pTransfer:0x%x"),pszFname,pTransfer));
; 164  :             m_pfnNotify(m_pvMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD) pTransfer);

  00010	159030c0	 ldrne       r3, [r0, #0xC0]
  00014	11a02001	 movne       r2, r1
  00018	13a01064	 movne       r1, #0x64
  0001c	11a0000e	 movne       r0, lr
  00020	11a0e00f	 movne       lr, pc
  00024	112fff13	 bxne        r3

; 165  :         }
; 166  :     }

  00028	e49de004	 ldr         lr, [sp], #4
  0002c	e12fff1e	 bx          lr
  00030		 |$M37518|

			 ENDP  ; |?MddTransferComplete@BulUsbDevice@@QAAXPAU_STransfer@@@Z|, BulUsbDevice::MddTransferComplete

	EXPORT	|?DeviceNotification@BulUsbDevice@@QAAHKK@Z| ; BulUsbDevice::DeviceNotification

  00000			 AREA	 |.pdata|, PDATA
|$T37532| DCD	|$LN7@DeviceNoti|
	DCD	0x40000e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DeviceNotification@BulUsbDevice@@QAAHKK@Z| PROC ; BulUsbDevice::DeviceNotification

; 167  :     BOOL DeviceNotification( DWORD dwMsg, DWORD dwParam ) {

  00000		 |$LN7@DeviceNoti|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37529|

; 168  :         SETFNAME();
; 169  :         if (m_pvMddContext) {

  00004	e59030b4	 ldr         r3, [r0, #0xB4]
  00008	e1b0e003	 movs        lr, r3
  0000c	0a000005	 beq         |$LN2@DeviceNoti|

; 170  :             DEBUGMSG(ZONE_FUNCTION, (_T("%s DeviceNotification dwMsg:0x%x,dwParam:0x%x"),pszFname,dwMsg,dwParam));
; 171  :             return m_pfnNotify(m_pvMddContext, dwMsg, dwParam);

  00010	e59030c0	 ldr         r3, [r0, #0xC0]
  00014	e1a0000e	 mov         r0, lr
  00018	e1a0e00f	 mov         lr, pc
  0001c	e12fff13	 bx          r3

; 176  :         }
; 177  :     }

  00020	e49de004	 ldr         lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$LN2@DeviceNoti|

; 172  :         }
; 173  :         else {
; 174  :             DebugBreak();

  00028	e6000010	 __debugbreak_ce

; 175  :             return FALSE;

  0002c	e3a00000	 mov         r0, #0

; 176  :         }
; 177  :     }

  00030	e49de004	 ldr         lr, [sp], #4
  00034	e12fff1e	 bx          lr
  00038		 |$M37530|

			 ENDP  ; |?DeviceNotification@BulUsbDevice@@QAAHKK@Z|, BulUsbDevice::DeviceNotification

	EXPORT	|?IncEp0StallCounter@BulUsbDevice@@QAAXXZ| ; BulUsbDevice::IncEp0StallCounter
	EXPORT	|??_C@_1CA@EJGBPJEP@?$AAE?$AAP?$AA0?$AAS?$AAt?$AAa?$AAl?$AAl?$AAC?$AAo?$AAu?$AAn?$AAt?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
; File c:\wince600\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.pdata|, PDATA
|$T37550| DCD	|$LN11@IncEp0Stal|
	DCD	0x40001c02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@EJGBPJEP@?$AAE?$AAP?$AA0?$AAS?$AAt?$AAa?$AAl?$AAl?$AAC?$AAo?$AAu?$AAn?$AAt?$AAe?$AAr?$AA?$AA@| DCB "E"
	DCB	0x0, "P", 0x0, "0", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "l"
	DCB	0x0, "l", 0x0, "C", 0x0, "o", 0x0, "u", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul_usbfn.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IncEp0StallCounter@BulUsbDevice@@QAAXXZ| PROC ; BulUsbDevice::IncEp0StallCounter

; 180  :     void IncEp0StallCounter() {

  00000		 |$LN11@IncEp0Stal|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M37547|
  00008	e1a04000	 mov         r4, r0

; 181  : #ifdef ERRORCOUNTERINREGISTRY
; 182  :         DWORD dwEp0StallCounter = 0;
; 183  :         if (!GetRegValue(BUL_USBFUNCTION_EP0_STALL_COUNTER_VALNAME,(LPBYTE) &dwEp0StallCounter,sizeof(dwEp0StallCounter))) {

  0000c	e59f1058	 ldr         r1, [pc, #0x58]
  00010	e3a0e000	 mov         lr, #0
  00014	e3a03004	 mov         r3, #4
  00018	e28d2008	 add         r2, sp, #8
  0001c	e2840090	 add         r0, r4, #0x90
  00020	e58de008	 str         lr, [sp, #8]
  00024	eb000000	 bl          |?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z|
  00028	e3500000	 cmp         r0, #0

; 184  :             dwEp0StallCounter = 0;

  0002c	03a03000	 moveq       r3, #0
  00030	159d3008	 ldrne       r3, [sp, #8]

; 185  :         }
; 186  :         dwEp0StallCounter++;
; 187  :         RegSetValueEx( BUL_USBFUNCTION_EP0_STALL_COUNTER_VALNAME,BUL_USBFUNCTION_EP0_STALL_COUNTER_VALTYPE,
; 188  :             (PBYTE)&dwEp0StallCounter,sizeof(dwEp0StallCounter));

  00034	e5940090	 ldr         r0, [r4, #0x90]
  00038	e59f102c	 ldr         r1, [pc, #0x2C]
  0003c	e283e001	 add         lr, r3, #1
  00040	e3a05004	 mov         r5, #4
  00044	e28d4008	 add         r4, sp, #8
  00048	e3a03004	 mov         r3, #4
  0004c	e3a02000	 mov         r2, #0
  00050	e58de008	 str         lr, [sp, #8]
  00054	e58d5004	 str         r5, [sp, #4]
  00058	e58d4000	 str         r4, [sp]
  0005c	eb000000	 bl          RegSetValueExW

; 189  : #endif
; 190  :     }

  00060	e28dd00c	 add         sp, sp, #0xC
  00064	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$LN12@IncEp0Stal|
  0006c		 |$LN13@IncEp0Stal|
  0006c	00000000	 DCD         |??_C@_1CA@EJGBPJEP@?$AAE?$AAP?$AA0?$AAS?$AAt?$AAa?$AAl?$AAl?$AAC?$AAo?$AAu?$AAn?$AAt?$AAe?$AAr?$AA?$AA@|
  00070		 |$M37548|

			 ENDP  ; |?IncEp0StallCounter@BulUsbDevice@@QAAXXZ|, BulUsbDevice::IncEp0StallCounter

	EXPORT	|?IncBadSetupCounter@BulUsbDevice@@QAAXXZ| ; BulUsbDevice::IncBadSetupCounter
	EXPORT	|??_C@_1CA@BKEHOKGI@?$AAB?$AAa?$AAd?$AAS?$AAe?$AAt?$AAu?$AAp?$AAC?$AAo?$AAu?$AAn?$AAt?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
; File c:\wince600\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.pdata|, PDATA
|$T37570| DCD	|$LN11@IncBadSetu|
	DCD	0x40001c02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@BKEHOKGI@?$AAB?$AAa?$AAd?$AAS?$AAe?$AAt?$AAu?$AAp?$AAC?$AAo?$AAu?$AAn?$AAt?$AAe?$AAr?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "d", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "u"
	DCB	0x0, "p", 0x0, "C", 0x0, "o", 0x0, "u", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul_usbfn.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IncBadSetupCounter@BulUsbDevice@@QAAXXZ| PROC ; BulUsbDevice::IncBadSetupCounter

; 191  :     void IncBadSetupCounter() {

  00000		 |$LN11@IncBadSetu|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M37567|
  00008	e1a04000	 mov         r4, r0

; 192  : #ifdef ERRORCOUNTERINREGISTRY
; 193  :         DWORD dwBadSetupCounter = 0;
; 194  :         if (!GetRegValue(BUL_USBFUNCTION_BAD_SETUP_COUNTER_VALNAME,(LPBYTE) &dwBadSetupCounter,sizeof(dwBadSetupCounter))) {

  0000c	e59f1058	 ldr         r1, [pc, #0x58]
  00010	e3a0e000	 mov         lr, #0
  00014	e3a03004	 mov         r3, #4
  00018	e28d2008	 add         r2, sp, #8
  0001c	e2840090	 add         r0, r4, #0x90
  00020	e58de008	 str         lr, [sp, #8]
  00024	eb000000	 bl          |?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z|
  00028	e3500000	 cmp         r0, #0

; 195  :             dwBadSetupCounter = 0;

  0002c	03a03000	 moveq       r3, #0
  00030	159d3008	 ldrne       r3, [sp, #8]

; 196  :         }
; 197  :         dwBadSetupCounter++;
; 198  :         RegSetValueEx( BUL_USBFUNCTION_BAD_SETUP_COUNTER_VALNAME, BUL_USBFUNCTION_BAD_SETUP_COUNTER_VALTYPE,
; 199  :             (PBYTE)&dwBadSetupCounter,sizeof(dwBadSetupCounter));

  00034	e5940090	 ldr         r0, [r4, #0x90]
  00038	e59f102c	 ldr         r1, [pc, #0x2C]
  0003c	e283e001	 add         lr, r3, #1
  00040	e3a05004	 mov         r5, #4
  00044	e28d4008	 add         r4, sp, #8
  00048	e3a03004	 mov         r3, #4
  0004c	e3a02000	 mov         r2, #0
  00050	e58de008	 str         lr, [sp, #8]
  00054	e58d5004	 str         r5, [sp, #4]
  00058	e58d4000	 str         r4, [sp]
  0005c	eb000000	 bl          RegSetValueExW

; 200  : #endif
; 201  :     }

  00060	e28dd00c	 add         sp, sp, #0xC
  00064	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$LN12@IncBadSetu|
  0006c		 |$LN13@IncBadSetu|
  0006c	00000000	 DCD         |??_C@_1CA@BKEHOKGI@?$AAB?$AAa?$AAd?$AAS?$AAe?$AAt?$AAu?$AAp?$AAC?$AAo?$AAu?$AAn?$AAt?$AAe?$AAr?$AA?$AA@|
  00070		 |$M37568|

			 ENDP  ; |?IncBadSetupCounter@BulUsbDevice@@QAAXXZ|, BulUsbDevice::IncBadSetupCounter

	EXPORT	|?Init@BulOTGEventThread@@QAAHXZ|	; BulOTGEventThread::Init
; File c:\wince600\public\common\oak\inc\cmthread.h

  00000			 AREA	 |.pdata|, PDATA
|$T37587| DCD	|$LN8@Init|
	DCD	0x40000c01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul_usbfn.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Init@BulOTGEventThread@@QAAHXZ| PROC	; BulOTGEventThread::Init

; 248  :     BOOL Init() {

  00000		 |$LN8@Init|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37584|
  00004	e1a04000	 mov         r4, r0

; 249  :         CeSetPriority(m_dwPriority);

  00008	e5943008	 ldr         r3, [r4, #8]
  0000c	e3530000	 cmp         r3, #0
  00010	15941020	 ldrne       r1, [r4, #0x20]
  00014	11a00003	 movne       r0, r3
  00018	1b000000	 blne        CeSetThreadPriority

; 250  :         ThreadStart();

  0001c	e1a00004	 mov         r0, r4
  00020	eb000000	 bl          |?ThreadStart@CMiniThread@@QAAHXZ|

; 251  :         return TRUE;

  00024	e3a00001	 mov         r0, #1

; 252  :     }

  00028	e8bd4010	 ldmia       sp!, {r4, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M37585|

			 ENDP  ; |?Init@BulOTGEventThread@@QAAHXZ|, BulOTGEventThread::Init

	EXPORT	|??0BulEndpoint@@QAA@QAVBulUsbDevice@@KH@Z| ; BulEndpoint::BulEndpoint
	EXPORT	|??_7BulEndpoint@@6B@| [ DATA ]		; BulEndpoint::`vftable'
	EXPORT	|?Init@BulEndpoint@@UAAHPAU_USB_ENDPOINT_DESCRIPTOR@@EEE@Z| ; BulEndpoint::Init
	EXPORT	|?ReInit@BulEndpoint@@UAAHXZ|		; BulEndpoint::ReInit
	EXPORT	|?InitEndpoint@BulEndpoint@@UAAKW4_UFN_BUS_SPEED@@PAU_USB_ENDPOINT_DESCRIPTOR@@@Z| ; BulEndpoint::InitEndpoint
	EXPORT	|?DeinitEndpoint@BulEndpoint@@UAAKXZ|	; BulEndpoint::DeinitEndpoint
	EXPORT	|?StallEndpoint@BulEndpoint@@UAAKXZ|	; BulEndpoint::StallEndpoint
	EXPORT	|?ClearEndpointStall@BulEndpoint@@UAAKXZ| ; BulEndpoint::ClearEndpointStall
	EXPORT	|?ResetEndpoint@BulEndpoint@@UAAKXZ|	; BulEndpoint::ResetEndpoint
	EXPORT	|?IsEndpointHalted@BulEndpoint@@UAAKPAH@Z| ; BulEndpoint::IsEndpointHalted
	EXPORT	|?IssueTransfer@BulEndpoint@@UAAKPAU_STransfer@@@Z| ; BulEndpoint::IssueTransfer
	EXPORT	|?AbortTransfer@BulEndpoint@@UAAKPAU_STransfer@@@Z| ; BulEndpoint::AbortTransfer
	EXPORT	|?SendControlStatusHandshake@BulEndpoint@@UAAKXZ| ; BulEndpoint::SendControlStatusHandshake
	IMPORT	|??_EBulEndpoint@@UAAPAXI@Z|, WEAK |??_GBulEndpoint@@UAAPAXI@Z| ; BulEndpoint::`vector deleting destructor', BulEndpoint::`scalar deleting destructor'
	IMPORT	|_purecall|
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37607| DCD	|$LN9@BulEndpoin|
	DCD	0x40001601

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7BulEndpoint@@6B@| DCD |??_EBulEndpoint@@UAAPAXI@Z|	; BulEndpoint::`vftable'
	DCD	|?Init@BulEndpoint@@UAAHPAU_USB_ENDPOINT_DESCRIPTOR@@EEE@Z|
	DCD	|?ReInit@BulEndpoint@@UAAHXZ|
	DCD	|?InitEndpoint@BulEndpoint@@UAAKW4_UFN_BUS_SPEED@@PAU_USB_ENDPOINT_DESCRIPTOR@@@Z|
	DCD	|?DeinitEndpoint@BulEndpoint@@UAAKXZ|
	DCD	|?StallEndpoint@BulEndpoint@@UAAKXZ|
	DCD	|?ClearEndpointStall@BulEndpoint@@UAAKXZ|
	DCD	|?ResetEndpoint@BulEndpoint@@UAAKXZ|
	DCD	|?IsEndpointHalted@BulEndpoint@@UAAKPAH@Z|
	DCD	|?IssueTransfer@BulEndpoint@@UAAKPAU_STransfer@@@Z|
	DCD	|?AbortTransfer@BulEndpoint@@UAAKPAU_STransfer@@@Z|
	DCD	|?SendControlStatusHandshake@BulEndpoint@@UAAKXZ|
	DCD	|_purecall|
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul_usbfn.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0BulEndpoint@@QAA@QAVBulUsbDevice@@KH@Z| PROC ; BulEndpoint::BulEndpoint

; 265  :     {

  00000		 |$LN9@BulEndpoin|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M37604|
  00004	e1a07003	 mov         r7, r3
  00008	e1a05002	 mov         r5, r2
  0000c	e1a04001	 mov         r4, r1
  00010	e1a06000	 mov         r6, r0
  00014	e59fe038	 ldr         lr, [pc, #0x38]
  00018	e3a08000	 mov         r8, #0
  0001c	e2860008	 add         r0, r6, #8
  00020	e586e000	 str         lr, [r6]
  00024	e5868004	 str         r8, [r6, #4]
  00028	eb000000	 bl          InitializeCriticalSection
  0002c	e59fe01c	 ldr         lr, [pc, #0x1C]
  00030	e586401c	 str         r4, [r6, #0x1C]
  00034	e5865020	 str         r5, [r6, #0x20]
  00038	e586e000	 str         lr, [r6]
  0003c	e5867030	 str         r7, [r6, #0x30]

; 266  :         m_pCurTransfer = NULL;

  00040	e5868034	 str         r8, [r6, #0x34]

; 267  :     }

  00044	e1a00006	 mov         r0, r6
  00048	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$LN10@BulEndpoin|
  00050		 |$LN11@BulEndpoin|
  00050	00000000	 DCD         |??_7BulEndpoint@@6B@|
  00054		 |$LN12@BulEndpoin|
  00054	00000000	 DCD         |??_7CRefObject@@6B@|
  00058		 |$M37605|

			 ENDP  ; |??0BulEndpoint@@QAA@QAVBulUsbDevice@@KH@Z|, BulEndpoint::BulEndpoint

	EXPORT	|?ReadControlStatusRegister@BulEndpoint@@QAAKXZ| ; BulEndpoint::ReadControlStatusRegister

  00000			 AREA	 |.pdata|, PDATA
|$T37627| DCD	|$LN7@ReadContro@2|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ReadControlStatusRegister@BulEndpoint@@QAAKXZ| PROC ; BulEndpoint::ReadControlStatusRegister

; 276  :     DWORD   ReadControlStatusRegister() {

  00000		 |$LN7@ReadContro@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37624|

; 277  :         PREFAST_ASSERT(m_pUsbDevice!=NULL);
; 278  :         PREFAST_ASSERT(m_dwEndpointIndex<MAX_ENDPOINT_NUMBER);
; 279  :         return m_pUsbDevice->ReadUDCRegister( ENDPOINT_CONTROL_STATUS_REGISTER_OFFSET + m_dwEndpointIndex);

  00004	e590301c	 ldr         r3, [r0, #0x1C]
  00008	e5901020	 ldr         r1, [r0, #0x20]
  0000c	e5932098	 ldr         r2, [r3, #0x98]
  00010	e2813040	 add         r3, r1, #0x40
  00014	e0820103	 add         r0, r2, r3, lsl #2
  00018	eb000000	 bl          READ_REGISTER_ULONG

; 280  :     }; 

  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M37625|

			 ENDP  ; |?ReadControlStatusRegister@BulEndpoint@@QAAKXZ|, BulEndpoint::ReadControlStatusRegister

	EXPORT	|?WriteControlStatusRegister@BulEndpoint@@QAAXK@Z| ; BulEndpoint::WriteControlStatusRegister

  00000			 AREA	 |.pdata|, PDATA
|$T37643| DCD	|$LN7@WriteContr@2|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?WriteControlStatusRegister@BulEndpoint@@QAAXK@Z| PROC ; BulEndpoint::WriteControlStatusRegister

; 281  :     void    WriteControlStatusRegister(DWORD dwData) {

  00000		 |$LN7@WriteContr@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37640|

; 282  :         PREFAST_ASSERT(m_pUsbDevice!=NULL);
; 283  :         PREFAST_ASSERT(m_dwEndpointIndex<MAX_ENDPOINT_NUMBER);
; 284  :         m_pUsbDevice->WriteUDCRegister( ENDPOINT_CONTROL_STATUS_REGISTER_OFFSET + m_dwEndpointIndex,dwData);

  00004	e590301c	 ldr         r3, [r0, #0x1C]
  00008	e5900020	 ldr         r0, [r0, #0x20]
  0000c	e5932098	 ldr         r2, [r3, #0x98]
  00010	e2803040	 add         r3, r0, #0x40
  00014	e0820103	 add         r0, r2, r3, lsl #2
  00018	eb000000	 bl          WRITE_REGISTER_ULONG

; 285  :     };

  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M37641|

			 ENDP  ; |?WriteControlStatusRegister@BulEndpoint@@QAAXK@Z|, BulEndpoint::WriteControlStatusRegister

	EXPORT	|?ReadByteCountRegister@BulEndpoint@@QAAKXZ| ; BulEndpoint::ReadByteCountRegister

  00000			 AREA	 |.pdata|, PDATA
|$T37660| DCD	|$LN7@ReadByteCo|
	DCD	0x40000c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ReadByteCountRegister@BulEndpoint@@QAAKXZ| PROC ; BulEndpoint::ReadByteCountRegister

; 287  :     DWORD   ReadByteCountRegister(){

  00000		 |$LN7@ReadByteCo|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37657|

; 288  :         PREFAST_ASSERT(m_pUsbDevice!=NULL);
; 289  :         PREFAST_ASSERT(m_dwEndpointIndex<MAX_ENDPOINT_NUMBER);
; 290  :         return ((m_pUsbDevice->ReadUDCRegister( ENDPOINT_BYTECOUNT_REGISTER_OFFSET + m_dwEndpointIndex)) & 0x3ff);

  00004	e590301c	 ldr         r3, [r0, #0x1C]
  00008	e5901020	 ldr         r1, [r0, #0x20]
  0000c	e5932098	 ldr         r2, [r3, #0x98]
  00010	e2813080	 add         r3, r1, #0x80
  00014	e0820103	 add         r0, r2, r3, lsl #2
  00018	eb000000	 bl          READ_REGISTER_ULONG
  0001c	e3a03c03	 mov         r3, #3, 24
  00020	e38330ff	 orr         r3, r3, #0xFF
  00024	e0000003	 and         r0, r0, r3

; 291  :     }

  00028	e49de004	 ldr         lr, [sp], #4
  0002c	e12fff1e	 bx          lr
  00030		 |$M37658|

			 ENDP  ; |?ReadByteCountRegister@BulEndpoint@@QAAKXZ|, BulEndpoint::ReadByteCountRegister

	EXPORT	|?ReadDataRegister@BulEndpoint@@QAAKXZ|	; BulEndpoint::ReadDataRegister

  00000			 AREA	 |.pdata|, PDATA
|$T37677| DCD	|$LN7@ReadDataRe|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ReadDataRegister@BulEndpoint@@QAAKXZ| PROC ; BulEndpoint::ReadDataRegister

; 299  :     DWORD    ReadDataRegister() {

  00000		 |$LN7@ReadDataRe|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37674|

; 300  :         PREFAST_ASSERT(m_pUsbDevice!=NULL);
; 301  :         PREFAST_ASSERT(m_dwEndpointIndex<MAX_ENDPOINT_NUMBER);
; 302  :         return ( m_pUsbDevice->ReadUDCRegister( ENDPOINT_DATA_REGISTER_OFFSET + m_dwEndpointIndex));

  00004	e590301c	 ldr         r3, [r0, #0x1C]
  00008	e5901020	 ldr         r1, [r0, #0x20]
  0000c	e5932098	 ldr         r2, [r3, #0x98]
  00010	e28130c0	 add         r3, r1, #0xC0
  00014	e0820103	 add         r0, r2, r3, lsl #2
  00018	eb000000	 bl          READ_REGISTER_ULONG

; 303  :     }

  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M37675|

			 ENDP  ; |?ReadDataRegister@BulEndpoint@@QAAKXZ|, BulEndpoint::ReadDataRegister

	EXPORT	|?WriteDataRegisterByte@BulEndpoint@@QAAXE@Z| ; BulEndpoint::WriteDataRegisterByte

  00000			 AREA	 |.pdata|, PDATA
|$T37693| DCD	|$LN7@WriteDataR|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?WriteDataRegisterByte@BulEndpoint@@QAAXE@Z| PROC ; BulEndpoint::WriteDataRegisterByte

; 304  :     void    WriteDataRegisterByte(BYTE bData) {

  00000		 |$LN7@WriteDataR|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37690|

; 305  :         PREFAST_ASSERT(m_pUsbDevice!=NULL);
; 306  :         PREFAST_ASSERT(m_dwEndpointIndex<MAX_ENDPOINT_NUMBER);
; 307  :         m_pUsbDevice->WriteUDCRegisterByte( ENDPOINT_DATA_REGISTER_OFFSET + m_dwEndpointIndex, bData);

  00004	e590301c	 ldr         r3, [r0, #0x1C]
  00008	e5900020	 ldr         r0, [r0, #0x20]
  0000c	e5932098	 ldr         r2, [r3, #0x98]
  00010	e28030c0	 add         r3, r0, #0xC0
  00014	e0820103	 add         r0, r2, r3, lsl #2
  00018	eb000000	 bl          WRITE_REGISTER_UCHAR

; 308  :     }

  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M37691|

			 ENDP  ; |?WriteDataRegisterByte@BulEndpoint@@QAAXE@Z|, BulEndpoint::WriteDataRegisterByte

	EXPORT	|?WriteDataRegister@BulEndpoint@@QAAXK@Z| ; BulEndpoint::WriteDataRegister

  00000			 AREA	 |.pdata|, PDATA
|$T37709| DCD	|$LN7@WriteDataR@2|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?WriteDataRegister@BulEndpoint@@QAAXK@Z| PROC ; BulEndpoint::WriteDataRegister

; 309  :     void    WriteDataRegister(DWORD dwData) {

  00000		 |$LN7@WriteDataR@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37706|

; 310  :         PREFAST_ASSERT(m_pUsbDevice!=NULL);
; 311  :         PREFAST_ASSERT(m_dwEndpointIndex<MAX_ENDPOINT_NUMBER);
; 312  :         m_pUsbDevice->WriteUDCRegister( ENDPOINT_DATA_REGISTER_OFFSET + m_dwEndpointIndex, dwData);

  00004	e590301c	 ldr         r3, [r0, #0x1C]
  00008	e5900020	 ldr         r0, [r0, #0x20]
  0000c	e5932098	 ldr         r2, [r3, #0x98]
  00010	e28030c0	 add         r3, r0, #0xC0
  00014	e0820103	 add         r0, r2, r3, lsl #2
  00018	eb000000	 bl          WRITE_REGISTER_ULONG

; 313  :     }

  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M37707|

			 ENDP  ; |?WriteDataRegister@BulEndpoint@@QAAXK@Z|, BulEndpoint::WriteDataRegister

	EXPORT	|?WriteConfigurationRegister@BulEndpoint@@QAAXK@Z| ; BulEndpoint::WriteConfigurationRegister

  00000			 AREA	 |.pdata|, PDATA
|$T37725| DCD	|$LN9@WriteConfi|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?WriteConfigurationRegister@BulEndpoint@@QAAXK@Z| PROC ; BulEndpoint::WriteConfigurationRegister

; 326  :     void    WriteConfigurationRegister(DWORD dwData) {

  00000		 |$LN9@WriteConfi|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37722|

; 327  :         PREFAST_ASSERT(m_pUsbDevice!=NULL);
; 328  :         PREFAST_ASSERT(m_dwEndpointIndex<MAX_ENDPOINT_NUMBER);
; 329  :         if (m_pUsbDevice!=0) { // Endpoint ZERO is not supported

  00004	e590301c	 ldr         r3, [r0, #0x1C]
  00008	e1b02003	 movs        r2, r3

; 330  :             m_pUsbDevice->WriteUDCRegister( ENDPOINT_CONFIGURATION_REGISTER_OFFSET + m_dwEndpointIndex, dwData );

  0000c	15903020	 ldrne       r3, [r0, #0x20]
  00010	15922098	 ldrne       r2, [r2, #0x98]
  00014	12833c01	 addne       r3, r3, #1, 24
  00018	10820103	 addne       r0, r2, r3, lsl #2
  0001c	1b000000	 blne        WRITE_REGISTER_ULONG

; 331  :         }
; 332  :         else {
; 333  :             ASSERT(FALSE);
; 334  :         }
; 335  :     }

  00020	e49de004	 ldr         lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$M37723|

			 ENDP  ; |?WriteConfigurationRegister@BulEndpoint@@QAAXK@Z|, BulEndpoint::WriteConfigurationRegister


  00000			 AREA	 |.pdata|, PDATA
|$T37734| DCD	|$LN5@SendContro|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SendControlStatusHandshake@BulEndpoint@@UAAKXZ| PROC ; BulEndpoint::SendControlStatusHandshake

; 353  :     virtual DWORD SendControlStatusHandshake() { return ERROR_INVALID_PARAMETER; };

  00000		 |$LN5@SendContro|
  00000		 |$M37731|
  00000	e3a00057	 mov         r0, #0x57
  00004	e12fff1e	 bx          lr
  00008		 |$M37732|

			 ENDP  ; |?SendControlStatusHandshake@BulEndpoint@@UAAKXZ|, BulEndpoint::SendControlStatusHandshake

	IMPORT	|memcpy|
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37754| DCD	|$LN10@Init@2|
	DCD	0x40002801
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Init@BulEndpoint@@UAAHPAU_USB_ENDPOINT_DESCRIPTOR@@EEE@Z| PROC ; BulEndpoint::Init

; 40   : {

  00000		 |$LN10@Init@2|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M37751|
  00004	e1a04002	 mov         r4, r2
  00008	e1a07001	 mov         r7, r1
  0000c	e1a05000	 mov         r5, r0

; 41   :     SETFNAME();
; 42   :     FUNCTION_ENTER_MSG();
; 43   :     BOOL bReturn = FALSE;
; 44   :     Lock();

  00010	e2850008	 add         r0, r5, #8
  00014	e3a06000	 mov         r6, #0
  00018	eb000000	 bl          EnterCriticalSection

; 45   :     m_bConfigurationValue= bConfigurationValue;
; 46   :     m_bInterfaceNumber = bInterfaceNumber;
; 47   :     m_bAlternateSetting =bAlternateSetting;
; 48   : #ifndef BULVERDE_MULTI_INTEFACE_FIXED
; 49   :     m_bInterfaceNumber = 0;

  0001c	e3a03000	 mov         r3, #0
  00020	e5c5302c	 strb        r3, [r5, #0x2C]

; 50   :     m_bAlternateSetting =0;

  00024	e5c5302d	 strb        r3, [r5, #0x2D]

; 51   : #endif
; 52   :     m_fZeroPacket = FALSE;

  00028	e5853038	 str         r3, [r5, #0x38]

; 53   :     m_fStalled = FALSE;

  0002c	e585303c	 str         r3, [r5, #0x3C]
  00030	e5c5402b	 strb        r4, [r5, #0x2B]

; 54   :     // Change address according
; 55   :     
; 56   :     if ( pEndpointDesc && m_pUsbDevice!=NULL && m_dwEndpointIndex < MAX_ENDPOINT_NUMBER) {

  00034	e3570000	 cmp         r7, #0
  00038	0a000013	 beq         |$LN1@Init@2|
  0003c	e595301c	 ldr         r3, [r5, #0x1C]
  00040	e3530000	 cmp         r3, #0
  00044	0a000010	 beq         |$LN1@Init@2|
  00048	e595e020	 ldr         lr, [r5, #0x20]
  0004c	e35e0018	 cmp         lr, #0x18
  00050	2a00000d	 bcs         |$LN1@Init@2|

; 57   :         pEndpointDesc->bEndpointAddress = (UCHAR)((pEndpointDesc->bEndpointAddress & 0x80) | m_dwEndpointIndex);

  00054	e5d73002	 ldrb        r3, [r7, #2]

; 58   :         m_epDesc = *pEndpointDesc;

  00058	e2850024	 add         r0, r5, #0x24
  0005c	e3a02007	 mov         r2, #7
  00060	e2033080	 and         r3, r3, #0x80
  00064	e183300e	 orr         r3, r3, lr
  00068	e1a01007	 mov         r1, r7
  0006c	e5c73002	 strb        r3, [r7, #2]
  00070	eb000000	 bl          memcpy

; 59   :         bReturn = ReInit();

  00074	e5953000	 ldr         r3, [r5]
  00078	e1a00005	 mov         r0, r5
  0007c	e5933008	 ldr         r3, [r3, #8]
  00080	e1a0e00f	 mov         lr, pc
  00084	e12fff13	 bx          r3
  00088	e1a06000	 mov         r6, r0
  0008c		 |$LN1@Init@2|

; 60   :     }
; 61   :     Unlock();

  0008c	e2850008	 add         r0, r5, #8
  00090	eb000000	 bl          LeaveCriticalSection

; 62   :     FUNCTION_LEAVE_MSG();
; 63   :     return bReturn;
; 64   : }

  00094	e1a00006	 mov         r0, r6
  00098	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  0009c	e12fff1e	 bx          lr
  000a0		 |$M37752|

			 ENDP  ; |?Init@BulEndpoint@@UAAHPAU_USB_ENDPOINT_DESCRIPTOR@@EEE@Z|, BulEndpoint::Init

; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul_usbfn.h

  00000			 AREA	 |.pdata|, PDATA
|$T37795| DCD	|$LN19@ReInit|
	DCD	0x40003a01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ReInit@BulEndpoint@@UAAHXZ| PROC	; BulEndpoint::ReInit

; 66   : {

  00000		 |$LN19@ReInit|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M37792|
  00004	e1a05000	 mov         r5, r0

; 67   :     SETFNAME();
; 68   :     FUNCTION_ENTER_MSG();
; 69   :     UDCCSR udccsr;
; 70   :     udccsr.ulValue = 0;
; 71   :     udccsr.epbit.PC = udccsr.epbit.TRN= udccsr.epbit.SST = udccsr.epbit.FEF =1;
; 72   :     WriteControlStatusRegister(udccsr.ulValue);

  00008	e595301c	 ldr         r3, [r5, #0x1C]
  0000c	e5951020	 ldr         r1, [r5, #0x20]
  00010	e3a00c01	 mov         r0, #1, 24
  00014	e5932098	 ldr         r2, [r3, #0x98]
  00018	e2813040	 add         r3, r1, #0x40
  0001c	e3801016	 orr         r1, r0, #0x16
  00020	e0820103	 add         r0, r2, r3, lsl #2
  00024	eb000000	 bl          WRITE_REGISTER_ULONG

; 73   :     DEBUGMSG(ZONE_INIT, (_T("%s (%d)udccsr.ulValue= 0x%x\r\n"),pszFname,m_dwEndpointIndex,udccsr.ulValue));
; 74   :     
; 75   :     UDCCRAX udccrax;
; 76   :     udccrax.ulValue = 0;
; 77   :     udccrax.bit.CN = (m_bConfigurationValue & 3);
; 78   :     udccrax.bit.ISN = (m_bInterfaceNumber & 0x7);
; 79   :     udccrax.bit.AISN = m_bAlternateSetting & 0x7;
; 80   :     udccrax.bit.EN = m_epDesc.bEndpointAddress & 0xf;
; 81   :     udccrax.bit.ET = m_epDesc.bmAttributes & 0x3;

  00028	e5d5302b	 ldrb        r3, [r5, #0x2B]
  0002c	e5d5202c	 ldrb        r2, [r5, #0x2C]
  00030	e5d5e02d	 ldrb        lr, [r5, #0x2D]
  00034	e2031003	 and         r1, r3, #3
  00038	e2023007	 and         r3, r2, #7
  0003c	e5d54026	 ldrb        r4, [r5, #0x26]
  00040	e1832181	 orr         r2, r3, r1, lsl #3
  00044	e5d51027	 ldrb        r1, [r5, #0x27]
  00048	e20e3007	 and         r3, lr, #7
  0004c	e1832182	 orr         r2, r3, r2, lsl #3
  00050	e204300f	 and         r3, r4, #0xF
  00054	e1833202	 orr         r3, r3, r2, lsl #4
  00058	e2016003	 and         r6, r1, #3

; 82   :     udccrax.bit.ED = ((m_epDesc.bEndpointAddress & 0x80)!=0?1:0);
; 83   :     udccrax.bit.MPS = m_epDesc.wMaxPacketSize & 0x3ff ;
; 84   :     
; 85   :     udccrax.bit.DE = 0;

  0005c	e5d51028	 ldrb        r1, [r5, #0x28]
  00060	e1867103	 orr         r7, r6, r3, lsl #2
  00064	e5d53029	 ldrb        r3, [r5, #0x29]
  00068	e3140080	 tst         r4, #0x80
  0006c	e3a02c03	 mov         r2, #3, 24
  00070	13a0e001	 movne       lr, #1
  00074	e1813403	 orr         r3, r1, r3, lsl #8
  00078	e38220ff	 orr         r2, r2, #0xFF
  0007c	03a0e000	 moveq       lr, #0
  00080	e0031002	 and         r1, r3, r2
  00084	e3e04c1f	 mvn         r4, #0x1F, 24

; 86   :     // Only In and Isochronouse transfer can use double buffer
; 87   :     if (((m_epDesc.bEndpointAddress & 0x80) != 0 || (m_epDesc.bmAttributes & 0x3) == 1 ) && m_fDoubleBuffer)

  00088	e5d50026	 ldrb        r0, [r5, #0x26]
  0008c	e20e3001	 and         r3, lr, #1
  00090	e22420fe	 eor         r2, r4, #0xFE
  00094	e1811503	 orr         r1, r1, r3, lsl #10
  00098	e0023687	 and         r3, r2, r7, lsl #13
  0009c	e1831101	 orr         r1, r3, r1, lsl #2
  000a0	e3100080	 tst         r0, #0x80
  000a4	1a000001	 bne         |$LN1@ReInit|
  000a8	e3560001	 cmp         r6, #1
  000ac	1a000002	 bne         |$LN2@ReInit|
  000b0		 |$LN1@ReInit|
  000b0	e5953030	 ldr         r3, [r5, #0x30]
  000b4	e3530000	 cmp         r3, #0

; 88   :         udccrax.bit.DE = 1 ;

  000b8	13811002	 orrne       r1, r1, #2
  000bc		 |$LN2@ReInit|

; 89   :         
; 90   :     udccrax.bit.EE = 1;
; 91   :     WriteConfigurationRegister(udccrax.ulValue);

  000bc	e595301c	 ldr         r3, [r5, #0x1C]
  000c0	e1b02003	 movs        r2, r3
  000c4	15953020	 ldrne       r3, [r5, #0x20]
  000c8	15922098	 ldrne       r2, [r2, #0x98]
  000cc	13811001	 orrne       r1, r1, #1
  000d0	12833c01	 addne       r3, r3, #1, 24
  000d4	10820103	 addne       r0, r2, r3, lsl #2
  000d8	1b000000	 blne        WRITE_REGISTER_ULONG

; 92   :     DEBUGMSG(ZONE_INIT, (_T("%s(%d) udccrax.ulValue= 0x%x\r\n"),pszFname,m_dwEndpointIndex,udccrax.ulValue));
; 93   :     FUNCTION_LEAVE_MSG();
; 94   :     return TRUE;

  000dc	e3a00001	 mov         r0, #1

; 95   : }

  000e0	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000e4	e12fff1e	 bx          lr
  000e8		 |$M37793|

			 ENDP  ; |?ReInit@BulEndpoint@@UAAHXZ|, BulEndpoint::ReInit

; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37837| DCD	|$LN17@StallEndpo|
	DCD	0x40001901
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?StallEndpoint@BulEndpoint@@UAAKXZ| PROC ; BulEndpoint::StallEndpoint

; 97   : {

  00000		 |$LN17@StallEndpo|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37834|
  00004	e1a04000	 mov         r4, r0

; 98   :     UDCCSR udccsr, udccsrWrite;
; 99   :     SETFNAME();
; 100  :     FUNCTION_ENTER_MSG();
; 101  :     Lock();

  00008	e2840008	 add         r0, r4, #8
  0000c	eb000000	 bl          EnterCriticalSection

; 102  :     udccsr.ulValue = ReadControlStatusRegister();

  00010	e594301c	 ldr         r3, [r4, #0x1C]
  00014	e5941020	 ldr         r1, [r4, #0x20]
  00018	e5932098	 ldr         r2, [r3, #0x98]
  0001c	e2813040	 add         r3, r1, #0x40
  00020	e0820103	 add         r0, r2, r3, lsl #2
  00024	eb000000	 bl          READ_REGISTER_ULONG

; 103  :     udccsrWrite.ulValue = 0;
; 104  :     udccsrWrite.epbit.DME = udccsr.epbit.DME;
; 105  :     udccsrWrite.epbit.FST = 1; // Force Stall.
; 106  :     udccsrWrite.epbit.SST = 1; // Clear Previous Stall Sent if there is any.
; 107  :     WriteControlStatusRegister(udccsrWrite.ulValue);

  00028	e594301c	 ldr         r3, [r4, #0x1C]
  0002c	e594e020	 ldr         lr, [r4, #0x20]
  00030	e2001008	 and         r1, r0, #8
  00034	e5932098	 ldr         r2, [r3, #0x98]
  00038	e28e3040	 add         r3, lr, #0x40
  0003c	e3811030	 orr         r1, r1, #0x30
  00040	e0820103	 add         r0, r2, r3, lsl #2
  00044	eb000000	 bl          WRITE_REGISTER_ULONG

; 108  :     m_fStalled = TRUE;

  00048	e3a03001	 mov         r3, #1

; 109  :     Unlock();

  0004c	e2840008	 add         r0, r4, #8
  00050	e584303c	 str         r3, [r4, #0x3C]
  00054	eb000000	 bl          LeaveCriticalSection

; 110  :     FUNCTION_LEAVE_MSG();
; 111  :     return ERROR_SUCCESS;

  00058	e3a00000	 mov         r0, #0

; 112  : }

  0005c	e8bd4010	 ldmia       sp!, {r4, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M37835|

			 ENDP  ; |?StallEndpoint@BulEndpoint@@UAAKXZ|, BulEndpoint::StallEndpoint

; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37853| DCD	|$LN9@ClearEndpo|
	DCD	0x40000b01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ClearEndpointStall@BulEndpoint@@UAAKXZ| PROC ; BulEndpoint::ClearEndpointStall

; 114  : {

  00000		 |$LN9@ClearEndpo|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37850|
  00004	e1a04000	 mov         r4, r0

; 115  :     Lock();

  00008	e2840008	 add         r0, r4, #8
  0000c	eb000000	 bl          EnterCriticalSection

; 116  :     m_fStalled = FALSE;

  00010	e3a03000	 mov         r3, #0

; 117  :     Unlock();

  00014	e2840008	 add         r0, r4, #8
  00018	e584303c	 str         r3, [r4, #0x3C]
  0001c	eb000000	 bl          LeaveCriticalSection

; 118  :     return ERROR_SUCCESS;

  00020	e3a00000	 mov         r0, #0

; 119  : }

  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M37851|

			 ENDP  ; |?ClearEndpointStall@BulEndpoint@@UAAKXZ|, BulEndpoint::ClearEndpointStall

; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37895| DCD	|$LN17@ResetEndpo|
	DCD	0x40001901
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ResetEndpoint@BulEndpoint@@UAAKXZ| PROC ; BulEndpoint::ResetEndpoint

; 121  : {

  00000		 |$LN17@ResetEndpo|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37892|
  00004	e1a05000	 mov         r5, r0

; 122  :     UDCCSR udccsr;
; 123  :     SETFNAME();
; 124  :     FUNCTION_ENTER_MSG();
; 125  :     DEBUGMSG(ZONE_WARNING, (_T("ResetEndpoint+ (%d) UDCCSR =0x%x UDCCRAX = 0x%x"),m_dwEndpointIndex, ReadControlStatusRegister(),ReadConfigurationRegister()));
; 126  :     Lock();

  00008	e2850008	 add         r0, r5, #8
  0000c	eb000000	 bl          EnterCriticalSection

; 127  :     udccsr.ulValue = ReadControlStatusRegister();

  00010	e595301c	 ldr         r3, [r5, #0x1C]
  00014	e5951020	 ldr         r1, [r5, #0x20]
  00018	e5932098	 ldr         r2, [r3, #0x98]
  0001c	e2813040	 add         r3, r1, #0x40
  00020	e0820103	 add         r0, r2, r3, lsl #2
  00024	eb000000	 bl          READ_REGISTER_ULONG

; 128  :     udccsr.epbit.PC = udccsr.epbit.TRN= udccsr.epbit.SST = udccsr.epbit.FEF =1;
; 129  :     WriteControlStatusRegister(udccsr.ulValue);

  00028	e595301c	 ldr         r3, [r5, #0x1C]
  0002c	e5954020	 ldr         r4, [r5, #0x20]
  00030	e3a02c01	 mov         r2, #1, 24
  00034	e5931098	 ldr         r1, [r3, #0x98]
  00038	e2843040	 add         r3, r4, #0x40
  0003c	e1a0e000	 mov         lr, r0
  00040	e3822016	 orr         r2, r2, #0x16
  00044	e0810103	 add         r0, r1, r3, lsl #2
  00048	e18e1002	 orr         r1, lr, r2
  0004c	eb000000	 bl          WRITE_REGISTER_ULONG

; 130  :     Unlock();

  00050	e2850008	 add         r0, r5, #8
  00054	eb000000	 bl          LeaveCriticalSection

; 131  :     DEBUGMSG(ZONE_WARNING, (_T("ResetEndpoint- (%d) UDCCSR =0x%x UDCCRAX = 0x%x"),m_dwEndpointIndex, ReadControlStatusRegister(),ReadConfigurationRegister()));
; 132  :     FUNCTION_LEAVE_MSG();
; 133  :     return ERROR_SUCCESS;

  00058	e3a00000	 mov         r0, #0

; 134  : }

  0005c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M37893|

			 ENDP  ; |?ResetEndpoint@BulEndpoint@@UAAKXZ|, BulEndpoint::ResetEndpoint

; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37912| DCD	|$LN11@IsEndpoint|
	DCD	0x40001501
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsEndpointHalted@BulEndpoint@@UAAKPAH@Z| PROC ; BulEndpoint::IsEndpointHalted

; 136  : {

  00000		 |$LN11@IsEndpoint|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37909|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0

; 137  :     Lock();

  0000c	e2840008	 add         r0, r4, #8
  00010	eb000000	 bl          EnterCriticalSection

; 138  :     if (m_fStalled)

  00014	e594303c	 ldr         r3, [r4, #0x3C]
  00018	e3530000	 cmp         r3, #0

; 139  :         IST(0);

  0001c	15943000	 ldrne       r3, [r4]
  00020	13a01000	 movne       r1, #0
  00024	11a00004	 movne       r0, r4
  00028	15933030	 ldrne       r3, [r3, #0x30]
  0002c	11a0e00f	 movne       lr, pc
  00030	112fff13	 bxne        r3

; 140  :     if (pfHalted)

  00034	e3550000	 cmp         r5, #0

; 141  :         *pfHalted = m_fStalled;

  00038	1594303c	 ldrne       r3, [r4, #0x3C]

; 142  :     Unlock();

  0003c	e2840008	 add         r0, r4, #8
  00040	15853000	 strne       r3, [r5]
  00044	eb000000	 bl          LeaveCriticalSection

; 143  :     return ERROR_SUCCESS;

  00048	e3a00000	 mov         r0, #0

; 144  : }

  0004c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$M37910|

			 ENDP  ; |?IsEndpointHalted@BulEndpoint@@UAAKPAH@Z|, BulEndpoint::IsEndpointHalted

	EXPORT	|?CompleteTransfer@BulEndpoint@@IAAPAU_STransfer@@K@Z| ; BulEndpoint::CompleteTransfer

  00000			 AREA	 |.pdata|, PDATA
|$T37924| DCD	|$LN6@CompleteTr|
	DCD	0x40000900
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CompleteTransfer@BulEndpoint@@IAAPAU_STransfer@@K@Z| PROC ; BulEndpoint::CompleteTransfer

; 146  : {

  00000		 |$LN6@CompleteTr|
  00000		 |$M37921|

; 147  :     if (m_pCurTransfer) {

  00000	e5903034	 ldr         r3, [r0, #0x34]
  00004	e3530000	 cmp         r3, #0

; 148  :         PSTransfer  pCurTransfer = m_pCurTransfer;
; 149  :         m_pCurTransfer->dwUsbError= dwError;
; 150  :         m_pCurTransfer = NULL;

  00008	13a02000	 movne       r2, #0
  0000c	15831014	 strne       r1, [r3, #0x14]
  00010	15802034	 strne       r2, [r0, #0x34]

; 154  : }

  00014	11a00003	 movne       r0, r3

; 151  :         return pCurTransfer ;
; 152  :     }
; 153  :     return NULL;

  00018	03a03000	 moveq       r3, #0

; 154  : }

  0001c	01a00003	 moveq       r0, r3
  00020	e12fff1e	 bx          lr
  00024		 |$M37922|

			 ENDP  ; |?CompleteTransfer@BulEndpoint@@IAAPAU_STransfer@@K@Z|, BulEndpoint::CompleteTransfer

; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul_usbfn.h

  00000			 AREA	 |.pdata|, PDATA
|$T37958| DCD	|$LN18@AbortTrans|
	DCD	0x40002a01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AbortTransfer@BulEndpoint@@UAAKPAU_STransfer@@@Z| PROC ; BulEndpoint::AbortTransfer

; 186  : {

  00000		 |$LN18@AbortTrans|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M37955|
  00004	e1a04001	 mov         r4, r1
  00008	e1a06000	 mov         r6, r0

; 187  :     DWORD dwReturn = ERROR_SUCCESS;
; 188  :     SETFNAME();
; 189  :     FUNCTION_ENTER_MSG();
; 190  :     Lock();

  0000c	e2860008	 add         r0, r6, #8
  00010	e3a07000	 mov         r7, #0
  00014	eb000000	 bl          EnterCriticalSection

; 191  :     PSTransfer pNotifyTransfer = NULL;
; 192  :     if (pTransfer == m_pCurTransfer && m_pCurTransfer!=NULL) {

  00018	e5963034	 ldr         r3, [r6, #0x34]
  0001c	e3a05000	 mov         r5, #0
  00020	e1540003	 cmp         r4, r3
  00024	1a000010	 bne         |$LN3@AbortTrans|
  00028	e3530000	 cmp         r3, #0
  0002c	0a00000e	 beq         |$LN3@AbortTrans|

; 193  :         ResetEndpoint();

  00030	e5963000	 ldr         r3, [r6]
  00034	e1a00006	 mov         r0, r6
  00038	e593301c	 ldr         r3, [r3, #0x1C]
  0003c	e1a0e00f	 mov         lr, pc
  00040	e12fff13	 bx          r3

; 194  :         pNotifyTransfer = CompleteTransfer(UFN_CANCELED_ERROR);

  00044	e5963034	 ldr         r3, [r6, #0x34]
  00048	e1b05003	 movs        r5, r3
  0004c	13a03c01	 movne       r3, #1, 24
  00050	13833001	 orrne       r3, r3, #1
  00054	15853014	 strne       r3, [r5, #0x14]
  00058	13a03000	 movne       r3, #0
  0005c	15863034	 strne       r3, [r6, #0x34]
  00060	1a000002	 bne         |$LN2@AbortTrans|
  00064	e3a05000	 mov         r5, #0

; 195  :     }
; 196  :     else

  00068	ea000000	 b           |$LN2@AbortTrans|
  0006c		 |$LN3@AbortTrans|

; 197  :         dwReturn = ERROR_INVALID_DATA;

  0006c	e3a0700d	 mov         r7, #0xD
  00070		 |$LN2@AbortTrans|

; 198  :     Unlock();

  00070	e2860008	 add         r0, r6, #8
  00074	eb000000	 bl          LeaveCriticalSection

; 199  :     if (pNotifyTransfer)

  00078	e3550000	 cmp         r5, #0

; 200  :         m_pUsbDevice->MddTransferComplete(pNotifyTransfer);

  0007c	1596201c	 ldrne       r2, [r6, #0x1C]
  00080	159230b4	 ldrne       r3, [r2, #0xB4]
  00084	11b00003	 movnes      r0, r3
  00088	159230c0	 ldrne       r3, [r2, #0xC0]
  0008c	11a02005	 movne       r2, r5
  00090	13a01064	 movne       r1, #0x64
  00094	11a0e00f	 movne       lr, pc
  00098	112fff13	 bxne        r3

; 201  :     FUNCTION_LEAVE_MSG();
; 202  :     return dwReturn;
; 203  : }

  0009c	e1a00007	 mov         r0, r7
  000a0	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000a4	e12fff1e	 bx          lr
  000a8		 |$M37956|

			 ENDP  ; |?AbortTransfer@BulEndpoint@@UAAKPAU_STransfer@@@Z|, BulEndpoint::AbortTransfer

	EXPORT	|?XmitData@BulEndpoint@@IAAKPAEK@Z|	; BulEndpoint::XmitData
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul_usbfn.h

  00000			 AREA	 |.pdata|, PDATA
|$T38006| DCD	|$LN32@XmitData|
	DCD	0x40003a02
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?XmitData@BulEndpoint@@IAAKPAEK@Z| PROC ; BulEndpoint::XmitData

; 205  : {

  00000		 |$LN32@XmitData|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M38003|
  00008	e1a04002	 mov         r4, r2
  0000c	e1b09001	 movs        r9, r1
  00010	e1a07000	 mov         r7, r0

; 206  :     SETFNAME();
; 207  :     DEBUGMSG(ZONE_FUNCTION, (_T("%s pBuffer=0x%x, dwLegnth= 0x%x\r\n"),pszFname,pBuffer,dwLength));
; 208  :     if (pBuffer==NULL || dwLength==0 )

  00014	0a00002e	 beq         |$LN12@XmitData|
  00018	e3540000	 cmp         r4, #0
  0001c	0a00002c	 beq         |$LN12@XmitData|

; 210  :     // Spec 12.4.2
; 211  :     union {
; 212  :         BYTE  bData[4];
; 213  :         DWORD dwData;
; 214  :     } ;
; 215  :     if (dwLength > m_epDesc.wMaxPacketSize)

  00020	e5d72028	 ldrb        r2, [r7, #0x28]
  00024	e5d73029	 ldrb        r3, [r7, #0x29]

; 216  :         dwLength = m_epDesc.wMaxPacketSize;
; 217  :     
; 218  :     for (DWORD dwIndex = 0; dwIndex< dwLength; ) { 

  00028	e3a06000	 mov         r6, #0
  0002c	e1823403	 orr         r3, r2, r3, lsl #8
  00030	e1540003	 cmp         r4, r3
  00034	81a04003	 movhi       r4, r3
  00038	e3540000	 cmp         r4, #0
  0003c	0a000025	 beq         |$LN14@XmitData|
  00040	e28da000	 add         r10, sp, #0
  00044	e28db000	 add         r11, sp, #0
  00048		 |$LL10@XmitData|

; 219  :         for ( DWORD dwCount = 0; dwCount < sizeof(DWORD) && dwIndex< dwLength ; dwCount ++, dwIndex++) {

  00048	e3a05000	 mov         r5, #0
  0004c		 |$LL8@XmitData|
  0004c	e1560004	 cmp         r6, r4
  00050	2a000005	 bcs         |$LN6@XmitData|

; 220  :             bData[dwCount] = *(pBuffer++);

  00054	e4d93001	 ldrb        r3, [r9], #1
  00058	e2866001	 add         r6, r6, #1
  0005c	e7c5300a	 strb        r3, [r5, +r10]
  00060	e2855001	 add         r5, r5, #1
  00064	e3550004	 cmp         r5, #4
  00068	3afffff7	 bcc         |$LL8@XmitData|
  0006c		 |$LN6@XmitData|

; 221  :         }
; 222  :         if (dwCount >= sizeof(DWORD)) {

  0006c	e3550004	 cmp         r5, #4
  00070	3a000007	 bcc         |$LN5@XmitData|

; 223  :             WriteDataRegister(dwData);

  00074	e597301c	 ldr         r3, [r7, #0x1C]
  00078	e5970020	 ldr         r0, [r7, #0x20]
  0007c	e59d1000	 ldr         r1, [sp]
  00080	e5932098	 ldr         r2, [r3, #0x98]
  00084	e28030c0	 add         r3, r0, #0xC0
  00088	e0820103	 add         r0, r2, r3, lsl #2
  0008c	eb000000	 bl          WRITE_REGISTER_ULONG

; 224  :         }
; 225  :         else {

  00090	ea00000c	 b           |$LN1@XmitData|
  00094		 |$LN5@XmitData|

; 226  :             for (DWORD dwCount2=0; dwCount2 < dwCount; dwCount2 ++)

  00094	e3a08000	 mov         r8, #0
  00098	e3550000	 cmp         r5, #0
  0009c	0a000009	 beq         |$LN1@XmitData|
  000a0		 |$LL3@XmitData|

; 227  :                 WriteDataRegisterByte(bData[dwCount2]);

  000a0	e597301c	 ldr         r3, [r7, #0x1C]
  000a4	e5970020	 ldr         r0, [r7, #0x20]
  000a8	e7d8100b	 ldrb        r1, [r8, +r11]
  000ac	e5932098	 ldr         r2, [r3, #0x98]
  000b0	e28030c0	 add         r3, r0, #0xC0
  000b4	e0820103	 add         r0, r2, r3, lsl #2
  000b8	eb000000	 bl          WRITE_REGISTER_UCHAR
  000bc	e2888001	 add         r8, r8, #1
  000c0	e1580005	 cmp         r8, r5
  000c4	3afffff5	 bcc         |$LL3@XmitData|
  000c8		 |$LN1@XmitData|

; 216  :         dwLength = m_epDesc.wMaxPacketSize;
; 217  :     
; 218  :     for (DWORD dwIndex = 0; dwIndex< dwLength; ) { 

  000c8	e1560004	 cmp         r6, r4
  000cc	3affffdd	 bcc         |$LL10@XmitData|

; 228  :         }
; 229  :     };
; 230  :     DEBUGMSG(ZONE_FUNCTION, (_T("%s Complete dwLength = 0x%x\r\n"),pszFname,dwLength));
; 231  :     return dwLength;

  000d0	ea000000	 b           |$LN14@XmitData|
  000d4		 |$LN12@XmitData|

; 209  :         return 0;

  000d4	e3a04000	 mov         r4, #0
  000d8		 |$LN14@XmitData|

; 232  : }

  000d8	e1a00004	 mov         r0, r4
  000dc	e28dd004	 add         sp, sp, #4
  000e0	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  000e4	e12fff1e	 bx          lr
  000e8		 |$M38004|

			 ENDP  ; |?XmitData@BulEndpoint@@IAAKPAEK@Z|, BulEndpoint::XmitData

	EXPORT	|?ReceiveData@BulEndpoint@@IAAKPAEK@Z|	; BulEndpoint::ReceiveData
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul_usbfn.h

  00000			 AREA	 |.pdata|, PDATA
|$T38051| DCD	|$LN25@ReceiveDat|
	DCD	0x40002f02
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ReceiveData@BulEndpoint@@IAAKPAEK@Z| PROC ; BulEndpoint::ReceiveData

; 234  : {

  00000		 |$LN25@ReceiveDat|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M38048|
  00008	e1a06002	 mov         r6, r2
  0000c	e1a08001	 mov         r8, r1
  00010	e1a09000	 mov         r9, r0

; 235  :     SETFNAME();
; 236  :     DEBUGMSG(ZONE_FUNCTION, (_T("%s pBuffer=0x%x, dwLegnth= 0x%x\r\n"),pszFname,pBuffer,dwLength));
; 237  :     PREFAST_ASSERT(pBuffer!=NULL);
; 238  :     // Spec 12.4.2
; 239  :     union {
; 240  :         BYTE  bData[4];
; 241  :         DWORD dwData;
; 242  :     } ;
; 243  :     DWORD dwAvailableDataSize = ReadByteCountRegister();

  00014	e599301c	 ldr         r3, [r9, #0x1C]
  00018	e5994020	 ldr         r4, [r9, #0x20]
  0001c	e593e098	 ldr         lr, [r3, #0x98]
  00020	e2843080	 add         r3, r4, #0x80
  00024	e08e0103	 add         r0, lr, r3, lsl #2
  00028	eb000000	 bl          READ_REGISTER_ULONG
  0002c	e3a03c03	 mov         r3, #3, 24
  00030	e38330ff	 orr         r3, r3, #0xFF
  00034	e0104003	 ands        r4, r0, r3

; 244  :     DWORD dwDataRead;
; 245  :     DWORD dwIndex;
; 246  :     DWORD dwTotalRead = 0;

  00038	e3a05000	 mov         r5, #0

; 247  :     while (dwAvailableDataSize) {

  0003c	0a00001a	 beq         |$LN6@ReceiveDat|
  00040	e28d7000	 add         r7, sp, #0
  00044		 |$LL7@ReceiveDat|

; 248  :         dwData = ReadDataRegister();

  00044	e599301c	 ldr         r3, [r9, #0x1C]
  00048	e599e020	 ldr         lr, [r9, #0x20]
  0004c	e5932098	 ldr         r2, [r3, #0x98]
  00050	e28e30c0	 add         r3, lr, #0xC0
  00054	e0820103	 add         r0, r2, r3, lsl #2
  00058	eb000000	 bl          READ_REGISTER_ULONG

; 249  :         if (dwAvailableDataSize>=sizeof(DWORD)) {

  0005c	e3540004	 cmp         r4, #4

; 250  :             dwAvailableDataSize -= sizeof(DWORD);

  00060	22444004	 subcs       r4, r4, #4

; 251  :             dwDataRead = sizeof(DWORD);

  00064	23a01004	 movcs       r1, #4

; 252  :         }
; 253  :         else {
; 254  :             dwDataRead = dwAvailableDataSize;

  00068	31a01004	 movcc       r1, r4

; 255  :             dwAvailableDataSize = 0;

  0006c	33a04000	 movcc       r4, #0

; 256  :         }
; 257  :         for (dwIndex = 0 ; dwIndex < dwDataRead && dwIndex < dwLength; dwIndex ++) {

  00070	e3510000	 cmp         r1, #0
  00074	e58d0000	 str         r0, [sp]
  00078	e3a02000	 mov         r2, #0
  0007c	0a000007	 beq         |$LN22@ReceiveDat|
  00080		 |$LL3@ReceiveDat|
  00080	e1520006	 cmp         r2, r6
  00084	2a000005	 bcs         |$LN22@ReceiveDat|

; 258  :             *(pBuffer++) = bData[dwIndex];

  00088	e7d23007	 ldrb        r3, [r2, +r7]
  0008c	e2822001	 add         r2, r2, #1

; 259  :             dwTotalRead ++;

  00090	e2855001	 add         r5, r5, #1
  00094	e4c83001	 strb        r3, [r8], #1
  00098	e1520001	 cmp         r2, r1
  0009c	3afffff7	 bcc         |$LL3@ReceiveDat|
  000a0		 |$LN22@ReceiveDat|

; 260  :         }
; 261  :         dwLength -= dwIndex;

  000a0	e0466002	 sub         r6, r6, r2
  000a4	e3540000	 cmp         r4, #0
  000a8	1affffe5	 bne         |$LL7@ReceiveDat|
  000ac		 |$LN6@ReceiveDat|

; 262  :     }
; 263  :     DEBUGMSG(ZONE_FUNCTION, (_T("%s Complete dwTotalRead = 0x%x\r\n"),pszFname,dwTotalRead));
; 264  :     return dwTotalRead;
; 265  : }

  000ac	e1a00005	 mov         r0, r5
  000b0	e28dd004	 add         sp, sp, #4
  000b4	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  000b8	e12fff1e	 bx          lr
  000bc		 |$M38049|

			 ENDP  ; |?ReceiveData@BulEndpoint@@IAAKPAEK@Z|, BulEndpoint::ReceiveData

	EXPORT	|?SendFakeFeature@BulEndpoint@@IAAXEG@Z| ; BulEndpoint::SendFakeFeature
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul_usbfn.h

  00000			 AREA	 |.pdata|, PDATA
|$T38069| DCD	|$LN9@SendFakeFe|
	DCD	0x40001802
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SendFakeFeature@BulEndpoint@@IAAXEG@Z| PROC ; BulEndpoint::SendFakeFeature

; 267  : {

  00000		 |$LN9@SendFakeFe|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M38066|

; 268  :     USB_DEVICE_REQUEST udr;
; 269  :     PREFAST_DEBUGCHK(m_pUsbDevice!=NULL);
; 270  :     udr.bmRequestType = USB_REQUEST_FOR_ENDPOINT;
; 271  :     udr.bRequest = bRequest;
; 272  :     udr.wValue = wFeatureSelector ;
; 273  :     udr.wIndex = m_epDesc.bEndpointAddress ;

  00008	e5d03026	 ldrb        r3, [r0, #0x26]

; 274  :     udr.wLength =0;
; 275  :     m_pUsbDevice->DeviceNotification( UFN_MSG_SETUP_PACKET,(DWORD) &udr);

  0000c	e590e01c	 ldr         lr, [r0, #0x1C]
  00010	e3a00002	 mov         r0, #2
  00014	e3a04000	 mov         r4, #0
  00018	e1cd30b4	 strh        r3, [sp, #4]
  0001c	e5cd0000	 strb        r0, [sp]
  00020	e5cd1001	 strb        r1, [sp, #1]
  00024	e1cd20b2	 strh        r2, [sp, #2]
  00028	e1cd40b6	 strh        r4, [sp, #6]
  0002c	e59e30b4	 ldr         r3, [lr, #0xB4]
  00030	e1b00003	 movs        r0, r3
  00034	0a000005	 beq         |$LN4@SendFakeFe|
  00038	e59e30c0	 ldr         r3, [lr, #0xC0]
  0003c	e28d2000	 add         r2, sp, #0
  00040	e3a01004	 mov         r1, #4
  00044	e1a0e00f	 mov         lr, pc
  00048	e12fff13	 bx          r3
  0004c	ea000000	 b           |$LN3@SendFakeFe|
  00050		 |$LN4@SendFakeFe|
  00050	e6000010	 __debugbreak_ce
  00054		 |$LN3@SendFakeFe|

; 276  : }

  00054	e28dd008	 add         sp, sp, #8
  00058	e8bd4010	 ldmia       sp!, {r4, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$M38067|

			 ENDP  ; |?SendFakeFeature@BulEndpoint@@IAAXEG@Z|, BulEndpoint::SendFakeFeature

	EXPORT	|?Init@BulEndpointZero@@UAAHPAU_USB_ENDPOINT_DESCRIPTOR@@EEE@Z| ; BulEndpointZero::Init
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T38089| DCD	|$LN11@Init@3|
	DCD	0x40003201
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Init@BulEndpointZero@@UAAHPAU_USB_ENDPOINT_DESCRIPTOR@@EEE@Z| PROC ; BulEndpointZero::Init

; 279  : {

  00000		 |$LN11@Init@3|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004		 |$M38086|
  00004	e1a05003	 mov         r5, r3
  00008	e1a04002	 mov         r4, r2
  0000c	e1a08001	 mov         r8, r1
  00010	e1a06000	 mov         r6, r0

; 280  :     Lock();

  00014	e2860008	 add         r0, r6, #8
  00018	eb000000	 bl          EnterCriticalSection

; 281  :     m_fBackedudr = FALSE;
; 282  :     BOOL bReturn = FALSE;
; 283  :     SETFNAME();
; 284  :     FUNCTION_ENTER_MSG();
; 285  :     m_bConfigurationValue= bConfigurationValue;
; 286  :     m_bInterfaceNumber = bInterfaceNumber;
; 287  :     m_bAlternateSetting =bAlternateSetting;

  0001c	e5dde01c	 ldrb        lr, [sp, #0x1C]
  00020	e3a09000	 mov         r9, #0
  00024	e586905c	 str         r9, [r6, #0x5C]
  00028	e5c6e02d	 strb        lr, [r6, #0x2D]
  0002c	e3a07000	 mov         r7, #0
  00030	e5c6402b	 strb        r4, [r6, #0x2B]
  00034	e5c6502c	 strb        r5, [r6, #0x2C]

; 288  :     
; 289  :     if ( pEndpointDesc && m_pUsbDevice!=NULL && m_dwEndpointIndex < MAX_ENDPOINT_NUMBER) {

  00038	e3580000	 cmp         r8, #0
  0003c	0a00001c	 beq         |$LN1@Init@3|
  00040	e596301c	 ldr         r3, [r6, #0x1C]
  00044	e3530000	 cmp         r3, #0
  00048	0a000019	 beq         |$LN1@Init@3|
  0004c	e5963020	 ldr         r3, [r6, #0x20]
  00050	e3530018	 cmp         r3, #0x18
  00054	2a000016	 bcs         |$LN1@Init@3|

; 290  :         m_epDesc = *pEndpointDesc;

  00058	e2860024	 add         r0, r6, #0x24
  0005c	e3a02007	 mov         r2, #7
  00060	e1a01008	 mov         r1, r8
  00064	eb000000	 bl          memcpy

; 291  :         if ((m_epDesc.wMaxPacketSize & 0x3ff) >= EP0_MAX_PACKET_SIZE) {

  00068	e5d61028	 ldrb        r1, [r6, #0x28]
  0006c	e5d63029	 ldrb        r3, [r6, #0x29]
  00070	e3a02c03	 mov         r2, #3, 24
  00074	e38220ff	 orr         r2, r2, #0xFF
  00078	e1813403	 orr         r3, r1, r3, lsl #8
  0007c	e0033002	 and         r3, r3, r2
  00080	e3530010	 cmp         r3, #0x10
  00084	3a00000a	 bcc         |$LN1@Init@3|

; 292  :             m_epDesc.wMaxPacketSize = pEndpointDesc->wMaxPacketSize = EP0_MAX_PACKET_SIZE;

  00088	e3a02010	 mov         r2, #0x10
  0008c	e5c82004	 strb        r2, [r8, #4]
  00090	e5c89005	 strb        r9, [r8, #5]

; 293  :         
; 294  :             bReturn = ReInit();

  00094	e5963000	 ldr         r3, [r6]
  00098	e1a00006	 mov         r0, r6
  0009c	e5c62028	 strb        r2, [r6, #0x28]
  000a0	e5933008	 ldr         r3, [r3, #8]
  000a4	e5c69029	 strb        r9, [r6, #0x29]
  000a8	e1a0e00f	 mov         lr, pc
  000ac	e12fff13	 bx          r3
  000b0	e1a07000	 mov         r7, r0
  000b4		 |$LN1@Init@3|

; 295  :         }
; 296  :     }
; 297  :     Unlock();

  000b4	e2860008	 add         r0, r6, #8
  000b8	eb000000	 bl          LeaveCriticalSection

; 298  :     FUNCTION_LEAVE_MSG();
; 299  :     return bReturn;
; 300  : }

  000bc	e1a00007	 mov         r0, r7
  000c0	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  000c4	e12fff1e	 bx          lr
  000c8		 |$M38087|

			 ENDP  ; |?Init@BulEndpointZero@@UAAHPAU_USB_ENDPOINT_DESCRIPTOR@@EEE@Z|, BulEndpointZero::Init

	EXPORT	|?ReInit@BulEndpointZero@@UAAHXZ|	; BulEndpointZero::ReInit
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul_usbfn.h

  00000			 AREA	 |.pdata|, PDATA
|$T38121| DCD	|$LN13@ReInit@2|
	DCD	0x40001301
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ReInit@BulEndpointZero@@UAAHXZ| PROC	; BulEndpointZero::ReInit

; 302  : {

  00000		 |$LN13@ReInit@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38118|
  00004	e1a04000	 mov         r4, r0

; 303  :     m_bNeedAck = FALSE;
; 304  :     m_bSetupDirIn = FALSE;
; 305  :     UDCCSR udccsr;
; 306  :     udccsr.ulValue = 0;        
; 307  :     udccsr.ep0bit.SA = udccsr.ep0bit.SST = udccsr.ep0bit.FTF =udccsr.ep0bit.OPC=1;
; 308  :     WriteControlStatusRegister(udccsr.ulValue);

  00008	e594301c	 ldr         r3, [r4, #0x1C]
  0000c	e5941020	 ldr         r1, [r4, #0x20]
  00010	e3a02000	 mov         r2, #0
  00014	e5842040	 str         r2, [r4, #0x40]
  00018	e5842044	 str         r2, [r4, #0x44]
  0001c	e5932098	 ldr         r2, [r3, #0x98]
  00020	e2813040	 add         r3, r1, #0x40
  00024	e3a01095	 mov         r1, #0x95
  00028	e0820103	 add         r0, r2, r3, lsl #2
  0002c	eb000000	 bl          WRITE_REGISTER_ULONG

; 309  :     
; 310  :     UDCCR udccr;
; 311  :     udccr.ulValue = 0;
; 312  :     udccr.bit.EMCE = 1;
; 313  :     m_pUsbDevice->WriteControlRegister(udccr.ulValue);

  00030	e594301c	 ldr         r3, [r4, #0x1C]
  00034	e3a01008	 mov         r1, #8
  00038	e5930098	 ldr         r0, [r3, #0x98]
  0003c	eb000000	 bl          WRITE_REGISTER_ULONG

; 314  :     return TRUE;

  00040	e3a00001	 mov         r0, #1

; 315  : }

  00044	e8bd4010	 ldmia       sp!, {r4, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$M38119|

			 ENDP  ; |?ReInit@BulEndpointZero@@UAAHXZ|, BulEndpointZero::ReInit

	EXPORT	|?ResetEndpoint@BulEndpointZero@@UAAKXZ| ; BulEndpointZero::ResetEndpoint
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T38149| DCD	|$LN13@ResetEndpo@2|
	DCD	0x40001201
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ResetEndpoint@BulEndpointZero@@UAAKXZ| PROC ; BulEndpointZero::ResetEndpoint

; 317  : {

  00000		 |$LN13@ResetEndpo@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38146|
  00004	e1a04000	 mov         r4, r0

; 318  :     UDCCSR udccsr;
; 319  :     SETFNAME();
; 320  :     FUNCTION_ENTER_MSG();
; 321  :     Lock();

  00008	e2840008	 add         r0, r4, #8
  0000c	eb000000	 bl          EnterCriticalSection

; 322  :     m_bNeedAck = FALSE;
; 323  :     udccsr.ulValue = 0;        
; 324  :     udccsr.ep0bit.SA = udccsr.ep0bit.SST = udccsr.ep0bit.FTF =udccsr.ep0bit.OPC=1;
; 325  :     WriteControlStatusRegister(udccsr.ulValue);

  00010	e594201c	 ldr         r2, [r4, #0x1C]
  00014	e5943020	 ldr         r3, [r4, #0x20]
  00018	e3a01000	 mov         r1, #0
  0001c	e5841040	 str         r1, [r4, #0x40]
  00020	e5922098	 ldr         r2, [r2, #0x98]
  00024	e2833040	 add         r3, r3, #0x40
  00028	e3a01095	 mov         r1, #0x95
  0002c	e0820103	 add         r0, r2, r3, lsl #2
  00030	eb000000	 bl          WRITE_REGISTER_ULONG

; 326  :     Unlock();

  00034	e2840008	 add         r0, r4, #8
  00038	eb000000	 bl          LeaveCriticalSection

; 327  :     FUNCTION_LEAVE_MSG();
; 328  :     return ERROR_SUCCESS;

  0003c	e3a00000	 mov         r0, #0

; 329  : }

  00040	e8bd4010	 ldmia       sp!, {r4, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$M38147|

			 ENDP  ; |?ResetEndpoint@BulEndpointZero@@UAAKXZ|, BulEndpointZero::ResetEndpoint

	EXPORT	|?IST@BulEndpointIn@@UAAKK@Z|		; BulEndpointIn::IST
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T38314| DCD	|$LN85@IST|
	DCD	0x4000a601
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IST@BulEndpointIn@@UAAKK@Z| PROC	; BulEndpointIn::IST

; 540  : {

  00000		 |$LN85@IST|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M38311|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 541  :     Lock();

  0000c	e2850008	 add         r0, r5, #8
  00010	eb000000	 bl          EnterCriticalSection

; 542  :     BOOL bContinue = TRUE;
; 543  :     SETFNAME();
; 544  :     FUNCTION_ENTER_MSG();
; 545  :     if ((dwIRBit & EPINT_FIFO_ERROR)!=0) { // FIFO Error. End

  00014	e3140002	 tst         r4, #2

; 546  :         DWORD dwUdccsr;
; 547  :         dwUdccsr = ReadControlStatusRegister();

  00018	1595301c	 ldrne       r3, [r5, #0x1C]
  0001c	15951020	 ldrne       r1, [r5, #0x20]
  00020	15932098	 ldrne       r2, [r3, #0x98]
  00024	12813040	 addne       r3, r1, #0x40
  00028	10820103	 addne       r0, r2, r3, lsl #2
  0002c	1b000000	 blne        READ_REGISTER_ULONG
  00030	e3e03c01	 mvn         r3, #1, 24
  00034	e2237006	 eor         r7, r3, #6
  00038	e3a08000	 mov         r8, #0
  0003c		 |$LL12@IST|

; 552  :     { // Loop until all the event clear.
; 553  :         bContinue = FALSE;
; 554  :         UDCCSR udccsr;
; 555  :         udccsr.ulValue = ReadControlStatusRegister();

  0003c	e595301c	 ldr         r3, [r5, #0x1C]
  00040	e5951020	 ldr         r1, [r5, #0x20]
  00044	e3a06000	 mov         r6, #0
  00048	e5932098	 ldr         r2, [r3, #0x98]
  0004c	e2813040	 add         r3, r1, #0x40
  00050	e0820103	 add         r0, r2, r3, lsl #2
  00054	eb000000	 bl          READ_REGISTER_ULONG

; 556  :         DEBUGMSG(ZONE_TRANSFER, (_T(" IN::IST(%d) UDCCSR=0x%x"),m_dwEndpointIndex,udccsr.ulValue));
; 557  :         if (m_fStalled && (udccsr.epbit.PC!=0 || udccsr.epbit.TRN!=0) ) {

  00058	e595303c	 ldr         r3, [r5, #0x3C]
  0005c	e1a0e000	 mov         lr, r0
  00060	e3530000	 cmp         r3, #0
  00064	0a000010	 beq         |$LN10@IST|
  00068	e31e0002	 tst         lr, #2
  0006c	1a000001	 bne         |$LN9@IST|
  00070	e31e0004	 tst         lr, #4
  00074	0a00000c	 beq         |$LN10@IST|
  00078		 |$LN9@IST|

; 558  :             // Stall has been clear silently. So we generate Faking Clear Feature for Endpoint Zero
; 559  :             m_fStalled = FALSE;
; 560  :             udccsr.epbit.PC = udccsr.epbit.TRN = udccsr.epbit.FEF = 0;
; 561  :             WriteControlStatusRegister(udccsr.ulValue);

  00078	e595301c	 ldr         r3, [r5, #0x1C]
  0007c	e5951020	 ldr         r1, [r5, #0x20]
  00080	e585803c	 str         r8, [r5, #0x3C]
  00084	e5932098	 ldr         r2, [r3, #0x98]
  00088	e2813040	 add         r3, r1, #0x40
  0008c	e00e1007	 and         r1, lr, r7
  00090		 |$LN82@IST|
  00090	e0820103	 add         r0, r2, r3, lsl #2
  00094	eb000000	 bl          WRITE_REGISTER_ULONG

; 562  :             bContinue = TRUE;
; 563  :             SendFakeFeature(USB_REQUEST_CLEAR_FEATURE,USB_FEATURE_ENDPOINT_STALL);

  00098	e3a02000	 mov         r2, #0
  0009c	e3a01001	 mov         r1, #1
  000a0	e1a00005	 mov         r0, r5
  000a4	eb000000	 bl          |?SendFakeFeature@BulEndpoint@@IAAXEG@Z|

; 564  :             continue;

  000a8	eaffffe3	 b           |$LL12@IST|
  000ac		 |$LN10@IST|

; 565  :         }
; 566  :         if ( udccsr.epbit.PC!=0 ) { // Packet Complete.

  000ac	e31e0002	 tst         lr, #2
  000b0	0a00000c	 beq         |$LN8@IST|

; 567  :             if (udccsr.epbit.DPE!=0 ) { // Data Packet Error

  000b4	e31e0c02	 tst         lr, #2, 24
  000b8	1a000056	 bne         |$LN79@IST|

; 573  :                 continue;
; 574  :             }
; 575  :             if ( m_pCurTransfer && !m_fZeroPacket &&  m_pCurTransfer->cbTransferred >= m_pCurTransfer->cbBuffer) {

  000bc	e5953034	 ldr         r3, [r5, #0x34]
  000c0	e1b01003	 movs        r1, r3
  000c4	0a000006	 beq         |$LN6@IST|
  000c8	e5953038	 ldr         r3, [r5, #0x38]
  000cc	e3530000	 cmp         r3, #0
  000d0	1a000003	 bne         |$LN6@IST|
  000d4	e5912010	 ldr         r2, [r1, #0x10]
  000d8	e591300c	 ldr         r3, [r1, #0xC]
  000dc	e1520003	 cmp         r2, r3
  000e0	2a000032	 bcs         |$LN80@IST|
  000e4		 |$LN6@IST|

; 581  :                 continue;
; 582  :             }
; 583  :             bContinue = TRUE;

  000e4	e3a06001	 mov         r6, #1
  000e8		 |$LN8@IST|

; 584  :         }
; 585  :         udccsr.epbit.SP = 0;

  000e8	e3ce4080	 bic         r4, lr, #0x80

; 586  :         if ( udccsr.epbit.FS!=0 && m_pCurTransfer!=NULL  && 
; 587  :                 (m_pCurTransfer->cbTransferred < m_pCurTransfer->cbBuffer || m_fZeroPacket) )  { // Include Eaqual for 0 packet.

  000ec	e3140001	 tst         r4, #1
  000f0	0a00001d	 beq         |$LN5@IST|
  000f4	e5953034	 ldr         r3, [r5, #0x34]
  000f8	e1b00003	 movs        r0, r3
  000fc	0a00001a	 beq         |$LN5@IST|
  00100	e5901010	 ldr         r1, [r0, #0x10]
  00104	e590200c	 ldr         r2, [r0, #0xC]
  00108	e1510002	 cmp         r1, r2
  0010c	3a000002	 bcc         |$LN4@IST|
  00110	e5953038	 ldr         r3, [r5, #0x38]
  00114	e3530000	 cmp         r3, #0
  00118	0a000013	 beq         |$LN5@IST|
  0011c		 |$LN4@IST|

; 588  :             ASSERT((m_pCurTransfer->dwFlags & USB_IN_TRANSFER)!=NULL);
; 589  :             DWORD dwXmitLength = (m_fZeroPacket?0:m_pCurTransfer->cbBuffer-m_pCurTransfer->cbTransferred);

  0011c	e5953038	 ldr         r3, [r5, #0x38]
  00120	e3530000	 cmp         r3, #0

; 590  :             dwXmitLength = XmitData((PBYTE)m_pCurTransfer->pvBuffer + m_pCurTransfer->cbTransferred, dwXmitLength );

  00124	e5903004	 ldr         r3, [r0, #4]
  00128	13a02000	 movne       r2, #0
  0012c	00422001	 subeq       r2, r2, r1
  00130	e0811003	 add         r1, r1, r3
  00134	e1a00005	 mov         r0, r5
  00138	eb000000	 bl          |?XmitData@BulEndpoint@@IAAKPAEK@Z|

; 591  :             m_pCurTransfer->cbTransferred += dwXmitLength;

  0013c	e5952034	 ldr         r2, [r5, #0x34]

; 592  :             m_fZeroPacket = FALSE;
; 593  :             if (dwXmitLength < m_epDesc.wMaxPacketSize) {
; 594  :                 udccsr.epbit.SP = 1;
; 595  :                 m_fZeroPacket = FALSE;
; 596  :             }
; 597  :             else
; 598  :                 m_fZeroPacket = FALSE;
; 599  :             bContinue = TRUE;

  00140	e3a06001	 mov         r6, #1
  00144	e5923010	 ldr         r3, [r2, #0x10]
  00148	e0803003	 add         r3, r0, r3
  0014c	e5823010	 str         r3, [r2, #0x10]
  00150	e5d52028	 ldrb        r2, [r5, #0x28]
  00154	e5d53029	 ldrb        r3, [r5, #0x29]
  00158	e5858038	 str         r8, [r5, #0x38]
  0015c	e5858038	 str         r8, [r5, #0x38]
  00160	e1823403	 orr         r3, r2, r3, lsl #8
  00164	e1500003	 cmp         r0, r3
  00168	33844080	 orrcc       r4, r4, #0x80
  0016c		 |$LN5@IST|

; 600  :         }
; 601  :         if (udccsr.epbit.SST) {
; 602  :             DEBUGMSG(ZONE_WARNING, (_T("Stall send on In Endpoint = 0x%x"),m_dwEndpointIndex));
; 603  :             // We have to assume we clean stall here because this no more interrupt.
; 604  :             udccsr.epbit.FST = 0 ;
; 605  :             m_fStalled = FALSE;
; 606  :             bContinue = TRUE;
; 607  :             WriteControlStatusRegister(udccsr.ulValue);        

  0016c	e595301c	 ldr         r3, [r5, #0x1C]
  00170	e3140010	 tst         r4, #0x10
  00174	15951020	 ldrne       r1, [r5, #0x20]
  00178	1585803c	 strne       r8, [r5, #0x3C]
  0017c	15932098	 ldrne       r2, [r3, #0x98]
  00180	12813040	 addne       r3, r1, #0x40
  00184	13c41020	 bicne       r1, r4, #0x20
  00188	1affffc0	 bne         |$LN82@IST|

; 608  :             SendFakeFeature(USB_REQUEST_CLEAR_FEATURE,USB_FEATURE_ENDPOINT_STALL);
; 609  :             continue;
; 610  :         }
; 611  :         WriteControlStatusRegister(udccsr.ulValue);        

  0018c	e5950020	 ldr         r0, [r5, #0x20]
  00190	e5932098	 ldr         r2, [r3, #0x98]
  00194	e1a01004	 mov         r1, r4
  00198	e2803040	 add         r3, r0, #0x40
  0019c	e0820103	 add         r0, r2, r3, lsl #2
  001a0	eb000000	 bl          WRITE_REGISTER_ULONG
  001a4	e3560000	 cmp         r6, #0
  001a8	1affffa3	 bne         |$LL12@IST|

; 548  :         DEBUGMSG(ZONE_WARNING, (_T("FIFO Error on Endpoint IN(%d) UDCCSR=0x%x"),m_dwEndpointIndex,dwUdccsr));
; 549  :     }
; 550  : 
; 551  :     while (bContinue) 

  001ac	ea000034	 b           |$LN77@IST|
  001b0		 |$LN80@IST|

; 576  :                 WriteControlStatusRegister(udccsr.ulValue);        

  001b0	e595301c	 ldr         r3, [r5, #0x1C]
  001b4	e5950020	 ldr         r0, [r5, #0x20]
  001b8	e1a0100e	 mov         r1, lr
  001bc	e5932098	 ldr         r2, [r3, #0x98]
  001c0	e2803040	 add         r3, r0, #0x40
  001c4	e0820103	 add         r0, r2, r3, lsl #2
  001c8	eb000000	 bl          WRITE_REGISTER_ULONG

; 577  :                 PSTransfer pTransfer = CompleteTransfer(UFN_NO_ERROR);

  001cc	e5953034	 ldr         r3, [r5, #0x34]

; 578  :                 Unlock();

  001d0	e2850008	 add         r0, r5, #8
  001d4	e1b04003	 movs        r4, r3
  001d8	15848014	 strne       r8, [r4, #0x14]
  001dc	15858034	 strne       r8, [r5, #0x34]
  001e0	03a04000	 moveq       r4, #0
  001e4	eb000000	 bl          LeaveCriticalSection

; 579  :                 m_pUsbDevice->MddTransferComplete(pTransfer);

  001e8	e595201c	 ldr         r2, [r5, #0x1C]
  001ec	e59230b4	 ldr         r3, [r2, #0xB4]
  001f0	e1b00003	 movs        r0, r3
  001f4	0a000020	 beq         |$LN41@IST|
  001f8	e3540000	 cmp         r4, #0
  001fc	0a00001e	 beq         |$LN41@IST|
  00200	e59230c0	 ldr         r3, [r2, #0xC0]
  00204	e1a02004	 mov         r2, r4
  00208	e3a01064	 mov         r1, #0x64
  0020c	e1a0e00f	 mov         lr, pc
  00210	e12fff13	 bx          r3

; 580  :                 Lock();                

  00214	ea000018	 b           |$LN41@IST|
  00218		 |$LN79@IST|

; 568  :                 WriteControlStatusRegister(udccsr.ulValue);

  00218	e595301c	 ldr         r3, [r5, #0x1C]
  0021c	e5950020	 ldr         r0, [r5, #0x20]
  00220	e1a0100e	 mov         r1, lr
  00224	e5932098	 ldr         r2, [r3, #0x98]
  00228	e2803040	 add         r3, r0, #0x40
  0022c	e0820103	 add         r0, r2, r3, lsl #2
  00230	eb000000	 bl          WRITE_REGISTER_ULONG

; 569  :                 PSTransfer pTransfer = CompleteTransfer( UFN_NOT_COMPLETE_ERROR );

  00234	e5953034	 ldr         r3, [r5, #0x34]

; 570  :                 Unlock();

  00238	e2850008	 add         r0, r5, #8
  0023c	e1b04003	 movs        r4, r3
  00240	13a03c01	 movne       r3, #1, 24
  00244	13833003	 orrne       r3, r3, #3
  00248	15843014	 strne       r3, [r4, #0x14]
  0024c	15858034	 strne       r8, [r5, #0x34]
  00250	03a04000	 moveq       r4, #0
  00254	eb000000	 bl          LeaveCriticalSection

; 571  :                 m_pUsbDevice->MddTransferComplete(pTransfer);

  00258	e595201c	 ldr         r2, [r5, #0x1C]
  0025c	e59230b4	 ldr         r3, [r2, #0xB4]
  00260	e1b00003	 movs        r0, r3
  00264	13540000	 cmpne       r4, #0
  00268	159230c0	 ldrne       r3, [r2, #0xC0]
  0026c	11a02004	 movne       r2, r4
  00270	13a01064	 movne       r1, #0x64
  00274	11a0e00f	 movne       lr, pc
  00278	112fff13	 bxne        r3
  0027c		 |$LN41@IST|

; 572  :                 Lock();                

  0027c	e2850008	 add         r0, r5, #8
  00280	eb000000	 bl          EnterCriticalSection

; 580  :                 Lock();                

  00284		 |$LN77@IST|

; 612  :     }
; 613  :     Unlock();

  00284	e2850008	 add         r0, r5, #8
  00288	eb000000	 bl          LeaveCriticalSection

; 614  :     FUNCTION_LEAVE_MSG();
; 615  :     return ERROR_SUCCESS;

  0028c	e3a00000	 mov         r0, #0

; 616  : }

  00290	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00294	e12fff1e	 bx          lr
  00298		 |$M38312|

			 ENDP  ; |?IST@BulEndpointIn@@UAAKK@Z|, BulEndpointIn::IST

	EXPORT	|?IST@BulEndpointOut@@UAAKK@Z|		; BulEndpointOut::IST
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T38585| DCD	|$LN134@IST@2|
	DCD	0x40011701
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IST@BulEndpointOut@@UAAKK@Z| PROC	; BulEndpointOut::IST

; 618  : {

  00000		 |$LN134@IST@2|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004		 |$M38582|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 619  :     Lock();

  0000c	e2850008	 add         r0, r5, #8
  00010	eb000000	 bl          EnterCriticalSection

; 620  :     BOOL bContinue = TRUE;
; 621  :     SETFNAME();
; 622  :     FUNCTION_ENTER_MSG();
; 623  :     if ((dwIRBit & EPINT_FIFO_ERROR)!=0) { // FIFO Error. End

  00014	e3140002	 tst         r4, #2

; 624  :         DWORD dwUdccsr;
; 625  :         dwUdccsr = ReadControlStatusRegister();

  00018	1595301c	 ldrne       r3, [r5, #0x1C]
  0001c	15951020	 ldrne       r1, [r5, #0x20]
  00020	15932098	 ldrne       r2, [r3, #0x98]
  00024	12813040	 addne       r3, r1, #0x40
  00028	10820103	 addne       r0, r2, r3, lsl #2
  0002c	1b000000	 blne        READ_REGISTER_ULONG
  00030	e3a03c03	 mov         r3, #3, 24
  00034	e38370ff	 orr         r7, r3, #0xFF
  00038	e3e03c01	 mvn         r3, #1, 24
  0003c	e3a02c01	 mov         r2, #1, 24
  00040	e2239006	 eor         r9, r3, #6
  00044	e3a0a000	 mov         r10, #0
  00048	e3828003	 orr         r8, r2, #3
  0004c	e3a0b001	 mov         r11, #1
  00050		 |$LL18@IST@2|

; 630  :         bContinue = FALSE;
; 631  :         UDCCSR udccsr;
; 632  :         udccsr.ulValue = ReadControlStatusRegister();

  00050	e595301c	 ldr         r3, [r5, #0x1C]
  00054	e5951020	 ldr         r1, [r5, #0x20]
  00058	e3a06000	 mov         r6, #0
  0005c	e5932098	 ldr         r2, [r3, #0x98]
  00060	e2813040	 add         r3, r1, #0x40
  00064	e0820103	 add         r0, r2, r3, lsl #2
  00068	eb000000	 bl          READ_REGISTER_ULONG

; 633  :         DEBUGMSG(ZONE_TRANSFER, (_T(" Out::IST(%d) UDCCSR=0x%x"),m_dwEndpointIndex,udccsr.ulValue));
; 634  :         if (m_fStalled && (udccsr.epbit.PC!=0 || udccsr.epbit.TRN!=0) ) {

  0006c	e595303c	 ldr         r3, [r5, #0x3C]
  00070	e1a04000	 mov         r4, r0
  00074	e3530000	 cmp         r3, #0
  00078	0a000010	 beq         |$LN16@IST@2|
  0007c	e3140002	 tst         r4, #2
  00080	1a000001	 bne         |$LN15@IST@2|
  00084	e3140004	 tst         r4, #4
  00088	0a00000c	 beq         |$LN16@IST@2|
  0008c		 |$LN15@IST@2|

; 635  :             // Stall has been clear silently. So we generate Faking Clear Feature for Endpoint Zero
; 636  :             m_fStalled = FALSE;
; 637  :             udccsr.epbit.PC = udccsr.epbit.TRN = udccsr.epbit.FEF = 0;
; 638  :             WriteControlStatusRegister(udccsr.ulValue);

  0008c	e595301c	 ldr         r3, [r5, #0x1C]
  00090	e5951020	 ldr         r1, [r5, #0x20]
  00094	e585a03c	 str         r10, [r5, #0x3C]
  00098	e5932098	 ldr         r2, [r3, #0x98]
  0009c	e2813040	 add         r3, r1, #0x40
  000a0	e0041009	 and         r1, r4, r9
  000a4	e0820103	 add         r0, r2, r3, lsl #2
  000a8	eb000000	 bl          WRITE_REGISTER_ULONG

; 639  :             bContinue = TRUE;
; 640  :             SendFakeFeature(USB_REQUEST_CLEAR_FEATURE,USB_FEATURE_ENDPOINT_STALL);

  000ac	e3a02000	 mov         r2, #0
  000b0	e3a01001	 mov         r1, #1
  000b4	e1a00005	 mov         r0, r5
  000b8	eb000000	 bl          |?SendFakeFeature@BulEndpoint@@IAAXEG@Z|

; 641  :             continue;

  000bc	eaffffe3	 b           |$LL18@IST@2|
  000c0		 |$LN16@IST@2|

; 642  :         }
; 643  :         // Unload in data if there is any
; 644  :         if  ( udccsr.epbit.FS!=0 && m_pCurTransfer!=NULL  && 
; 645  :                 m_pCurTransfer->cbTransferred < m_pCurTransfer->cbBuffer)  { // Include Eaqual for 0 packet.

  000c0	e3140001	 tst         r4, #1
  000c4	0a00002a	 beq         |$LN12@IST@2|
  000c8	e5953034	 ldr         r3, [r5, #0x34]
  000cc	e3530000	 cmp         r3, #0
  000d0	0a000027	 beq         |$LN12@IST@2|
  000d4	e5932010	 ldr         r2, [r3, #0x10]
  000d8	e593300c	 ldr         r3, [r3, #0xC]
  000dc	e1520003	 cmp         r2, r3
  000e0	2a000023	 bcs         |$LN12@IST@2|

; 646  :             DWORD dwReceiveLength = min (ReadByteCountRegister(),m_pCurTransfer->cbBuffer - m_pCurTransfer->cbTransferred);

  000e4	e595301c	 ldr         r3, [r5, #0x1C]
  000e8	e5951020	 ldr         r1, [r5, #0x20]
  000ec	e5932098	 ldr         r2, [r3, #0x98]
  000f0	e2813080	 add         r3, r1, #0x80
  000f4	e0820103	 add         r0, r2, r3, lsl #2
  000f8	eb000000	 bl          READ_REGISTER_ULONG
  000fc	e5953034	 ldr         r3, [r5, #0x34]
  00100	e0001007	 and         r1, r0, r7
  00104	e593200c	 ldr         r2, [r3, #0xC]
  00108	e5933010	 ldr         r3, [r3, #0x10]
  0010c	e0422003	 sub         r2, r2, r3
  00110	e1510002	 cmp         r1, r2
  00114	2a000006	 bcs         |$LN22@IST@2|
  00118	e595301c	 ldr         r3, [r5, #0x1C]
  0011c	e5951020	 ldr         r1, [r5, #0x20]
  00120	e5932098	 ldr         r2, [r3, #0x98]
  00124	e2813080	 add         r3, r1, #0x80
  00128	e0820103	 add         r0, r2, r3, lsl #2
  0012c	eb000000	 bl          READ_REGISTER_ULONG
  00130	e0002007	 and         r2, r0, r7
  00134		 |$LN22@IST@2|

; 647  :             dwReceiveLength = ReceiveData((PBYTE)m_pCurTransfer->pvBuffer + m_pCurTransfer->cbTransferred,dwReceiveLength);

  00134	e5953034	 ldr         r3, [r5, #0x34]
  00138	e1a00005	 mov         r0, r5
  0013c	e5931010	 ldr         r1, [r3, #0x10]
  00140	e5933004	 ldr         r3, [r3, #4]
  00144	e0811003	 add         r1, r1, r3
  00148	eb000000	 bl          |?ReceiveData@BulEndpoint@@IAAKPAEK@Z|

; 648  :             m_pCurTransfer->cbTransferred += dwReceiveLength;

  0014c	e5952034	 ldr         r2, [r5, #0x34]
  00150	e5923010	 ldr         r3, [r2, #0x10]
  00154	e0833000	 add         r3, r3, r0
  00158	e5823010	 str         r3, [r2, #0x10]

; 649  :             if (m_pCurTransfer->cbTransferred >= m_pCurTransfer->cbBuffer) {

  0015c	e5953034	 ldr         r3, [r5, #0x34]
  00160	e5932010	 ldr         r2, [r3, #0x10]
  00164	e593300c	 ldr         r3, [r3, #0xC]
  00168	e1520003	 cmp         r2, r3
  0016c	2a00009c	 bcs         |$LN129@IST@2|

; 655  :                 continue;
; 656  :             }
; 657  :             else
; 658  :                 bContinue = TRUE;

  00170	e3a06001	 mov         r6, #1
  00174		 |$LN12@IST@2|

; 659  :                 
; 660  :         }
; 661  :         if ( udccsr.epbit.PC!=0 ) { // Packet Complete.

  00174	e3140002	 tst         r4, #2
  00178	0a00008b	 beq         |$LN3@IST@2|

; 662  :             if (udccsr.epbit.DPE!=0 ) { // Data Packet Error

  0017c	e3140c02	 tst         r4, #2, 24
  00180	0a000019	 beq         |$LN10@IST@2|

; 663  :                 WriteControlStatusRegister(udccsr.ulValue);

  00184	e595301c	 ldr         r3, [r5, #0x1C]
  00188	e5950020	 ldr         r0, [r5, #0x20]
  0018c	e1a01004	 mov         r1, r4
  00190	e5932098	 ldr         r2, [r3, #0x98]
  00194	e2803040	 add         r3, r0, #0x40
  00198	e0820103	 add         r0, r2, r3, lsl #2
  0019c	eb000000	 bl          WRITE_REGISTER_ULONG

; 664  :                 PSTransfer pTransfer = CompleteTransfer( UFN_NOT_COMPLETE_ERROR );

  001a0	e5953034	 ldr         r3, [r5, #0x34]

; 665  :                 Unlock();

  001a4	e2850008	 add         r0, r5, #8
  001a8	e1b04003	 movs        r4, r3
  001ac	15848014	 strne       r8, [r4, #0x14]
  001b0	1585a034	 strne       r10, [r5, #0x34]
  001b4	03a04000	 moveq       r4, #0
  001b8	eb000000	 bl          LeaveCriticalSection

; 666  :                 m_pUsbDevice->MddTransferComplete(pTransfer);

  001bc	e595201c	 ldr         r2, [r5, #0x1C]
  001c0	e59230b4	 ldr         r3, [r2, #0xB4]
  001c4	e1b00003	 movs        r0, r3
  001c8	0a000072	 beq         |$LN109@IST@2|
  001cc	e3540000	 cmp         r4, #0
  001d0	0a000070	 beq         |$LN109@IST@2|
  001d4	e59230c0	 ldr         r3, [r2, #0xC0]
  001d8	e1a02004	 mov         r2, r4
  001dc	e3a01064	 mov         r1, #0x64
  001e0	e1a0e00f	 mov         lr, pc
  001e4	e12fff13	 bx          r3

; 667  :                 Lock();                
; 668  :                 continue;

  001e8	ea00006a	 b           |$LN109@IST@2|
  001ec		 |$LN10@IST@2|

; 669  :             }
; 670  :             if ( m_pCurTransfer) {

  001ec	e5953034	 ldr         r3, [r5, #0x34]
  001f0	e3530000	 cmp         r3, #0
  001f4	0a00006a	 beq         |$LN9@IST@2|

; 671  :                 BOOL fShortPacket = FALSE;

  001f8	e3a01000	 mov         r1, #0

; 672  :                 if (udccsr.epbit.BNE_BNF!=0 &&
; 673  :                         m_pCurTransfer->cbTransferred < m_pCurTransfer->cbBuffer)  { // Last Try.

  001fc	e3140040	 tst         r4, #0x40
  00200	0a00002a	 beq         |$LN27@IST@2|
  00204	e5932010	 ldr         r2, [r3, #0x10]
  00208	e593300c	 ldr         r3, [r3, #0xC]
  0020c	e1520003	 cmp         r2, r3
  00210	2a000026	 bcs         |$LN27@IST@2|

; 674  :                     DWORD dwReceiveLength = min (ReadByteCountRegister(),m_pCurTransfer->cbBuffer - m_pCurTransfer->cbTransferred);

  00214	e595301c	 ldr         r3, [r5, #0x1C]
  00218	e5951020	 ldr         r1, [r5, #0x20]
  0021c	e5932098	 ldr         r2, [r3, #0x98]
  00220	e2813080	 add         r3, r1, #0x80
  00224	e0820103	 add         r0, r2, r3, lsl #2
  00228	eb000000	 bl          READ_REGISTER_ULONG
  0022c	e5953034	 ldr         r3, [r5, #0x34]
  00230	e0001007	 and         r1, r0, r7
  00234	e593200c	 ldr         r2, [r3, #0xC]
  00238	e5933010	 ldr         r3, [r3, #0x10]
  0023c	e0422003	 sub         r2, r2, r3
  00240	e1510002	 cmp         r1, r2
  00244	2a000006	 bcs         |$LN24@IST@2|
  00248	e595301c	 ldr         r3, [r5, #0x1C]
  0024c	e5951020	 ldr         r1, [r5, #0x20]
  00250	e5932098	 ldr         r2, [r3, #0x98]
  00254	e2813080	 add         r3, r1, #0x80
  00258	e0820103	 add         r0, r2, r3, lsl #2
  0025c	eb000000	 bl          READ_REGISTER_ULONG
  00260	e0002007	 and         r2, r0, r7
  00264		 |$LN24@IST@2|

; 675  :                     dwReceiveLength = ReceiveData((PBYTE)m_pCurTransfer->pvBuffer + m_pCurTransfer->cbTransferred,dwReceiveLength);

  00264	e5953034	 ldr         r3, [r5, #0x34]
  00268	e1a00005	 mov         r0, r5
  0026c	e5931010	 ldr         r1, [r3, #0x10]
  00270	e5933004	 ldr         r3, [r3, #4]
  00274	e0811003	 add         r1, r1, r3
  00278	eb000000	 bl          |?ReceiveData@BulEndpoint@@IAAKPAEK@Z|

; 676  :                     m_pCurTransfer->cbTransferred += dwReceiveLength;

  0027c	e5952034	 ldr         r2, [r5, #0x34]
  00280	e3500000	 cmp         r0, #0
  00284	e5923010	 ldr         r3, [r2, #0x10]
  00288	e0833000	 add         r3, r3, r0
  0028c	e5823010	 str         r3, [r2, #0x10]

; 677  :                     fShortPacket = (dwReceiveLength!=0 && dwReceiveLength<m_epDesc.wMaxPacketSize) ;

  00290	0a000005	 beq         |$LN26@IST@2|
  00294	e5d52028	 ldrb        r2, [r5, #0x28]
  00298	e5d53029	 ldrb        r3, [r5, #0x29]
  0029c	e1823403	 orr         r3, r2, r3, lsl #8
  002a0	e1500003	 cmp         r0, r3
  002a4	33a01001	 movcc       r1, #1
  002a8	3a000000	 bcc         |$LN27@IST@2|
  002ac		 |$LN26@IST@2|
  002ac	e3a01000	 mov         r1, #0
  002b0		 |$LN27@IST@2|

; 678  :                     
; 679  :                 }
; 680  :                 if (m_pCurTransfer->cbTransferred >= m_pCurTransfer->cbBuffer) {

  002b0	e5953034	 ldr         r3, [r5, #0x34]
  002b4	e5932010	 ldr         r2, [r3, #0x10]
  002b8	e593300c	 ldr         r3, [r3, #0xC]
  002bc	e1520003	 cmp         r2, r3
  002c0	3a000019	 bcc         |$LN7@IST@2|

; 681  :                     WriteControlStatusRegister(udccsr.ulValue);

  002c4	e595301c	 ldr         r3, [r5, #0x1C]
  002c8	e5950020	 ldr         r0, [r5, #0x20]
  002cc	e1a01004	 mov         r1, r4
  002d0	e5932098	 ldr         r2, [r3, #0x98]
  002d4	e2803040	 add         r3, r0, #0x40
  002d8	e0820103	 add         r0, r2, r3, lsl #2
  002dc	eb000000	 bl          WRITE_REGISTER_ULONG

; 682  :                     PSTransfer pTransfer = CompleteTransfer(UFN_NO_ERROR);

  002e0	e5953034	 ldr         r3, [r5, #0x34]

; 683  :                     Unlock();

  002e4	e2850008	 add         r0, r5, #8
  002e8	e1b04003	 movs        r4, r3
  002ec	1584a014	 strne       r10, [r4, #0x14]
  002f0	1585a034	 strne       r10, [r5, #0x34]
  002f4	03a04000	 moveq       r4, #0
  002f8	eb000000	 bl          LeaveCriticalSection

; 684  :                     m_pUsbDevice->MddTransferComplete(pTransfer);

  002fc	e595201c	 ldr         r2, [r5, #0x1C]
  00300	e59230b4	 ldr         r3, [r2, #0xB4]
  00304	e1b00003	 movs        r0, r3
  00308	0a000022	 beq         |$LN109@IST@2|
  0030c	e3540000	 cmp         r4, #0
  00310	0a000020	 beq         |$LN109@IST@2|
  00314	e59230c0	 ldr         r3, [r2, #0xC0]
  00318	e1a02004	 mov         r2, r4
  0031c	e3a01064	 mov         r1, #0x64
  00320	e1a0e00f	 mov         lr, pc
  00324	e12fff13	 bx          r3

; 685  :                     Lock();                

  00328	ea00001a	 b           |$LN109@IST@2|
  0032c		 |$LN7@IST@2|

; 686  :                     continue;
; 687  :                 }
; 688  :                 else if (udccsr.epbit.SP || fShortPacket ){

  0032c	e3140080	 tst         r4, #0x80
  00330	03510000	 cmpeq       r1, #0

; 689  :                     WriteControlStatusRegister(udccsr.ulValue);
; 690  :                     PSTransfer pTransfer = CompleteTransfer(UFN_NO_ERROR);
; 691  :                     Unlock();
; 692  :                     m_pUsbDevice->MddTransferComplete(pTransfer);
; 693  :                     Lock();                
; 694  :                     continue;
; 695  :                 }
; 696  :                 bContinue = TRUE;

  00334	03a06001	 moveq       r6, #1
  00338	0a00001b	 beq         |$LN3@IST@2|
  0033c	e595301c	 ldr         r3, [r5, #0x1C]
  00340	e5950020	 ldr         r0, [r5, #0x20]
  00344	e1a01004	 mov         r1, r4
  00348	e5932098	 ldr         r2, [r3, #0x98]
  0034c	e2803040	 add         r3, r0, #0x40
  00350	e0820103	 add         r0, r2, r3, lsl #2
  00354	eb000000	 bl          WRITE_REGISTER_ULONG
  00358	e5953034	 ldr         r3, [r5, #0x34]
  0035c	e2850008	 add         r0, r5, #8
  00360	e1b04003	 movs        r4, r3
  00364	1584a014	 strne       r10, [r4, #0x14]
  00368	1585a034	 strne       r10, [r5, #0x34]
  0036c	03a04000	 moveq       r4, #0
  00370	eb000000	 bl          LeaveCriticalSection
  00374	e595201c	 ldr         r2, [r5, #0x1C]
  00378	e59230b4	 ldr         r3, [r2, #0xB4]
  0037c	e1b00003	 movs        r0, r3
  00380	13540000	 cmpne       r4, #0
  00384	159230c0	 ldrne       r3, [r2, #0xC0]
  00388	11a02004	 movne       r2, r4
  0038c	13a01064	 movne       r1, #0x64
  00390	11a0e00f	 movne       lr, pc
  00394	112fff13	 bxne        r3
  00398		 |$LN109@IST@2|
  00398	e2850008	 add         r0, r5, #8
  0039c	eb000000	 bl          EnterCriticalSection
  003a0	ea00000c	 b           |$LN116@IST@2|
  003a4		 |$LN9@IST@2|

; 697  :             }
; 698  :             else { // Not ready yet.
; 699  :                 //m_pUsbDevice->EnableEndpointInterrupt(m_dwEndpointIndex,FALSE);
; 700  :                 // Do not clean anything
; 701  :                 udccsr.epbit.PC = 0;

  003a4	e3c44002	 bic         r4, r4, #2

; 702  :                 bContinue = FALSE;

  003a8	e3a06000	 mov         r6, #0
  003ac		 |$LN3@IST@2|

; 703  :             }
; 704  :         }
; 705  :         if (udccsr.epbit.SST) {

  003ac	e3140010	 tst         r4, #0x10

; 706  :             DEBUGMSG(ZONE_WARNING, (_T("Stall Sent on Out endpoint =0x%x"),m_dwEndpointIndex));
; 707  :             m_fStalled = TRUE;

  003b0	1585b03c	 strne       r11, [r5, #0x3C]

; 708  :             bContinue = TRUE;

  003b4	13a06001	 movne       r6, #1

; 709  :         }
; 710  :         if (udccsr.ulValue)

  003b8	e3540000	 cmp         r4, #0

; 711  :             WriteControlStatusRegister(udccsr.ulValue);

  003bc	1595301c	 ldrne       r3, [r5, #0x1C]
  003c0	15950020	 ldrne       r0, [r5, #0x20]
  003c4	11a01004	 movne       r1, r4
  003c8	15932098	 ldrne       r2, [r3, #0x98]
  003cc	12803040	 addne       r3, r0, #0x40
  003d0	10820103	 addne       r0, r2, r3, lsl #2
  003d4	1b000000	 blne        WRITE_REGISTER_ULONG
  003d8		 |$LN116@IST@2|

; 626  :         DEBUGMSG(ZONE_WARNING, (_T("FIFO Error on Endpoint Out(%d) UDCCSR=0x%x"),m_dwEndpointIndex,dwUdccsr));
; 627  :     }
; 628  : 
; 629  :     while (bContinue) {

  003d8	e3560000	 cmp         r6, #0
  003dc	1affff1b	 bne         |$LL18@IST@2|
  003e0	ea000018	 b           |$LN127@IST@2|
  003e4		 |$LN129@IST@2|

; 650  :                 WriteControlStatusRegister(udccsr.ulValue);

  003e4	e595301c	 ldr         r3, [r5, #0x1C]
  003e8	e5950020	 ldr         r0, [r5, #0x20]
  003ec	e1a01004	 mov         r1, r4
  003f0	e5932098	 ldr         r2, [r3, #0x98]
  003f4	e2803040	 add         r3, r0, #0x40
  003f8	e0820103	 add         r0, r2, r3, lsl #2
  003fc	eb000000	 bl          WRITE_REGISTER_ULONG

; 651  :                 PSTransfer pTransfer = CompleteTransfer(UFN_NO_ERROR);

  00400	e5953034	 ldr         r3, [r5, #0x34]

; 652  :                 Unlock();

  00404	e2850008	 add         r0, r5, #8
  00408	e1b04003	 movs        r4, r3
  0040c	1584a014	 strne       r10, [r4, #0x14]
  00410	1585a034	 strne       r10, [r5, #0x34]
  00414	03a04000	 moveq       r4, #0
  00418	eb000000	 bl          LeaveCriticalSection

; 653  :                 m_pUsbDevice->MddTransferComplete(pTransfer);

  0041c	e595201c	 ldr         r2, [r5, #0x1C]
  00420	e59230b4	 ldr         r3, [r2, #0xB4]
  00424	e1b00003	 movs        r0, r3
  00428	13540000	 cmpne       r4, #0
  0042c	159230c0	 ldrne       r3, [r2, #0xC0]
  00430	11a02004	 movne       r2, r4
  00434	13a01064	 movne       r1, #0x64
  00438	11a0e00f	 movne       lr, pc
  0043c	112fff13	 bxne        r3

; 654  :                 Lock();

  00440	e2850008	 add         r0, r5, #8
  00444	eb000000	 bl          EnterCriticalSection
  00448		 |$LN127@IST@2|

; 712  :     }
; 713  :     Unlock();

  00448	e2850008	 add         r0, r5, #8
  0044c	eb000000	 bl          LeaveCriticalSection

; 714  :     FUNCTION_LEAVE_MSG();
; 715  :     return ERROR_SUCCESS;

  00450	e3a00000	 mov         r0, #0

; 716  : }

  00454	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00458	e12fff1e	 bx          lr
  0045c		 |$M38583|

			 ENDP  ; |?IST@BulEndpointOut@@UAAKK@Z|, BulEndpointOut::IST

	EXPORT	|?HardwareInit@BulUsbDevice@@IAAHXZ|	; BulUsbDevice::HardwareInit
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T38651| DCD	|$LN33@HardwareIn|
	DCD	0x40001f01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HardwareInit@BulUsbDevice@@IAAHXZ| PROC ; BulUsbDevice::HardwareInit

; 858  : {

  00000		 |$LN33@HardwareIn|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38648|
  00004	e1a04000	 mov         r4, r0

; 859  :     BOOL bReturn = TRUE;
; 860  :     SETFNAME();
; 861  :     FUNCTION_ENTER_MSG();
; 862  :     Lock();

  00008	e2840018	 add         r0, r4, #0x18
  0000c	eb000000	 bl          EnterCriticalSection

; 863  :     // Disable Hardware
; 864  :     UDCCR udccr;
; 865  :     udccr.ulValue = ReadControlRegister();

  00010	e5940098	 ldr         r0, [r4, #0x98]
  00014	eb000000	 bl          READ_REGISTER_ULONG
  00018	e1a03000	 mov         r3, r0

; 866  :     udccr.bit.UDE= udccr.bit.EMCE = 0;
; 867  :     WriteControlRegister(udccr.ulValue);

  0001c	e5940098	 ldr         r0, [r4, #0x98]
  00020	e3c31009	 bic         r1, r3, #9
  00024	eb000000	 bl          WRITE_REGISTER_ULONG

; 868  :     WriteIntrCtr0Register(0);

  00028	e5943098	 ldr         r3, [r4, #0x98]
  0002c	e3a01000	 mov         r1, #0
  00030	e2830004	 add         r0, r3, #4
  00034	eb000000	 bl          WRITE_REGISTER_ULONG

; 869  :     WriteIntrCtr1Register(0); 

  00038	e5943098	 ldr         r3, [r4, #0x98]
  0003c	e3a01000	 mov         r1, #0
  00040	e2830008	 add         r0, r3, #8
  00044	eb000000	 bl          WRITE_REGISTER_ULONG

; 870  :     // Ack all outstanding interrupt.
; 871  :     WriteIntrStatus0Register(0xffffffff);

  00048	e5943098	 ldr         r3, [r4, #0x98]
  0004c	e3e01000	 mvn         r1, #0
  00050	e283000c	 add         r0, r3, #0xC
  00054	eb000000	 bl          WRITE_REGISTER_ULONG

; 872  :     WriteIntrStatus1Register(0xffffffff);

  00058	e5943098	 ldr         r3, [r4, #0x98]
  0005c	e3e01000	 mvn         r1, #0
  00060	e2830010	 add         r0, r3, #0x10
  00064	eb000000	 bl          WRITE_REGISTER_ULONG

; 873  :     Unlock();

  00068	e2840018	 add         r0, r4, #0x18
  0006c	eb000000	 bl          LeaveCriticalSection

; 874  :     FUNCTION_LEAVE_MSG();
; 875  :     return bReturn;

  00070	e3a00001	 mov         r0, #1

; 876  : }

  00074	e8bd4010	 ldmia       sp!, {r4, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$M38649|

			 ENDP  ; |?HardwareInit@BulUsbDevice@@IAAHXZ|, BulUsbDevice::HardwareInit

	EXPORT	|?EnableEndpointInterrupt@BulUsbDevice@@QAAHKH@Z| ; BulUsbDevice::EnableEndpointInterrupt
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T38706| DCD	|$LN33@EnableEndp|
	DCD	0x40002601
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?EnableEndpointInterrupt@BulUsbDevice@@QAAHKH@Z| PROC ; BulUsbDevice::EnableEndpointInterrupt

; 912  : {

  00000		 |$LN33@EnableEndp|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M38703|
  00004	e1a06002	 mov         r6, r2
  00008	e1a05001	 mov         r5, r1
  0000c	e1a04000	 mov         r4, r0

; 913  :     SETFNAME();
; 914  :     DEBUGMSG(ZONE_USB_EVENTS, (_T("%s Enter. dwEndpoint:0x%x,Enable:0x%x --\r\n"), pszFname,dwEndpointIndex,bEnable));
; 915  :     
; 916  :     if (dwEndpointIndex < MAX_ENDPOINT_NUMBER ) {

  00010	e3550018	 cmp         r5, #0x18
  00014	2a00001c	 bcs         |$LN7@EnableEndp|

; 917  :         Lock();

  00018	e2840018	 add         r0, r4, #0x18
  0001c	eb000000	 bl          EnterCriticalSection

; 918  :         if (dwEndpointIndex <UDCIR0_MAX) {
; 919  :             DWORD dwIntrCtrBit = ((EPINT_PACKET_COMPLETE | EPINT_FIFO_ERROR) <<(dwEndpointIndex*2));
; 920  :             DWORD dwIntrCtl = ReadIntrCtr0Register() ;

  00020	e5943098	 ldr         r3, [r4, #0x98]
  00024	e3550010	 cmp         r5, #0x10
  00028	2a000009	 bcs         |$LN6@EnableEndp|
  0002c	e2830004	 add         r0, r3, #4
  00030	e1a05085	 mov         r5, r5, lsl #1
  00034	e3a07003	 mov         r7, #3
  00038	eb000000	 bl          READ_REGISTER_ULONG

; 921  :             if (bEnable)
; 922  :                 dwIntrCtl |= dwIntrCtrBit;
; 923  :             else 
; 924  :                 dwIntrCtl &= ~dwIntrCtrBit;
; 925  :             WriteIntrCtr0Register(dwIntrCtl);

  0003c	e5943098	 ldr         r3, [r4, #0x98]
  00040	e3560000	 cmp         r6, #0
  00044	11801517	 orrne       r1, r0, r7, lsl r5
  00048	01c01517	 biceq       r1, r0, r7, lsl r5
  0004c	e2830004	 add         r0, r3, #4

; 926  :         }
; 927  :         else {

  00050	ea000007	 b           |$LN30@EnableEndp|
  00054		 |$LN6@EnableEndp|

; 928  :             dwEndpointIndex -= UDCIR0_MAX;
; 929  :             DWORD dwIntrCtrBit = ((EPINT_PACKET_COMPLETE | EPINT_FIFO_ERROR) <<(dwEndpointIndex*2));
; 930  :             DWORD dwIntrCtl = ReadIntrCtr1Register() ;

  00054	e2830008	 add         r0, r3, #8
  00058	eb000000	 bl          READ_REGISTER_ULONG

; 931  :             if (bEnable)

  0005c	e3560000	 cmp         r6, #0

; 932  :                 dwIntrCtl |= dwIntrCtl;
; 933  :             else 
; 934  :                 dwIntrCtl &= ~dwIntrCtl;

  00060	01e03000	 mvneq       r3, r0
  00064	00030000	 andeq       r0, r3, r0

; 935  :             WriteIntrCtr1Register(dwIntrCtl);

  00068	e5943098	 ldr         r3, [r4, #0x98]
  0006c	e1a01000	 mov         r1, r0
  00070	e2830008	 add         r0, r3, #8
  00074		 |$LN30@EnableEndp|
  00074	eb000000	 bl          WRITE_REGISTER_ULONG

; 936  :         }
; 937  :         Unlock();

  00078	e2840018	 add         r0, r4, #0x18
  0007c	eb000000	 bl          LeaveCriticalSection

; 938  :         return TRUE;

  00080	e3a00001	 mov         r0, #1

; 941  : }

  00084	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00088	e12fff1e	 bx          lr
  0008c		 |$LN7@EnableEndp|

; 939  :     }
; 940  :     return FALSE;

  0008c	e3a00000	 mov         r0, #0

; 941  : }

  00090	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00094	e12fff1e	 bx          lr
  00098		 |$M38704|

			 ENDP  ; |?EnableEndpointInterrupt@BulUsbDevice@@QAAHKH@Z|, BulUsbDevice::EnableEndpointInterrupt

	EXPORT	|?GetEndpointIntrStatus@BulUsbDevice@@QAAKK@Z| ; BulUsbDevice::GetEndpointIntrStatus
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul_usbfn.h

  00000			 AREA	 |.pdata|, PDATA
|$T38735| DCD	|$LN17@GetEndpoin|
	DCD	0x40001501
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetEndpointIntrStatus@BulUsbDevice@@QAAKK@Z| PROC ; BulUsbDevice::GetEndpointIntrStatus

; 943  : {

  00000		 |$LN17@GetEndpoin|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38732|
  00004	e1a04001	 mov         r4, r1
  00008	e1a03000	 mov         r3, r0

; 944  :     DWORD dwReturnStatus = 0;

  0000c	e3a00000	 mov         r0, #0

; 945  :     if (dwEndpointIndex < MAX_ENDPOINT_NUMBER ) {

  00010	e3540018	 cmp         r4, #0x18
  00014	2a00000c	 bcs         |$LN1@GetEndpoin|

; 946  :         if (dwEndpointIndex <UDCIR0_MAX) {
; 947  :             dwReturnStatus = (ReadIntrStatus0Register()>>(dwEndpointIndex*2)) & (EPINT_PACKET_COMPLETE | EPINT_FIFO_ERROR);

  00018	e5933098	 ldr         r3, [r3, #0x98]
  0001c	e3540010	 cmp         r4, #0x10
  00020	2a000003	 bcs         |$LN2@GetEndpoin|
  00024	e283000c	 add         r0, r3, #0xC
  00028	eb000000	 bl          READ_REGISTER_ULONG
  0002c	e1a03084	 mov         r3, r4, lsl #1

; 948  :         }
; 949  :         else {

  00030	ea000003	 b           |$LN14@GetEndpoin|
  00034		 |$LN2@GetEndpoin|

; 950  :             dwEndpointIndex -= MAX_ENDPOINT_NUMBER;
; 951  :             dwReturnStatus = (ReadIntrStatus1Register()>>(dwEndpointIndex*2)) & (EPINT_PACKET_COMPLETE | EPINT_FIFO_ERROR);

  00034	e2830010	 add         r0, r3, #0x10
  00038	eb000000	 bl          READ_REGISTER_ULONG
  0003c	e2443018	 sub         r3, r4, #0x18
  00040	e1a03083	 mov         r3, r3, lsl #1
  00044		 |$LN14@GetEndpoin|
  00044	e1a03330	 mov         r3, r0, lsr r3
  00048	e2030003	 and         r0, r3, #3
  0004c		 |$LN1@GetEndpoin|

; 952  :         }
; 953  :     }
; 954  :     return dwReturnStatus;
; 955  : }

  0004c	e8bd4010	 ldmia       sp!, {r4, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$M38733|

			 ENDP  ; |?GetEndpointIntrStatus@BulUsbDevice@@QAAKK@Z|, BulUsbDevice::GetEndpointIntrStatus

	EXPORT	|?Start@BulUsbDevice@@UAAKXZ|		; BulUsbDevice::Start
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T38795| DCD	|$LN30@Start@3|
	DCD	0x40001f01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Start@BulUsbDevice@@UAAKXZ| PROC	; BulUsbDevice::Start

; 1119 : {

  00000		 |$LN30@Start@3|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38792|
  00004	e1a05000	 mov         r5, r0

; 1120 :     SETFNAME();
; 1121 :     FUNCTION_ENTER_MSG();
; 1122 :     DWORD dwReturn = ERROR_SUCCESS;
; 1123 :     Lock();

  00008	e2850018	 add         r0, r5, #0x18
  0000c	e3a04000	 mov         r4, #0
  00010	eb000000	 bl          EnterCriticalSection

; 1124 :     //ASSERT(m_pvMddContext==NULL);
; 1125 :     m_dwCurConfigure = MAXDWORD;
; 1126 :     m_dwCurInterface = MAXDWORD;
; 1127 :     // Enable Device Interrupt.
; 1128 :     WriteIntrCtr1Register( ReadIntrCtr1Register() | 
; 1129 :         (UDCISR1_IRCC | UDCISR1_IRRU | UDCISR1_IRSU |UDCISR1_IRRS ));

  00014	e5953098	 ldr         r3, [r5, #0x98]
  00018	e3e02000	 mvn         r2, #0
  0001c	e58520b8	 str         r2, [r5, #0xB8]
  00020	e2830008	 add         r0, r3, #8
  00024	e58520bc	 str         r2, [r5, #0xBC]
  00028	eb000000	 bl          READ_REGISTER_ULONG
  0002c	e5953098	 ldr         r3, [r5, #0x98]
  00030	e380132e	 orr         r1, r0, #0x2E, 6
  00034	e2830008	 add         r0, r3, #8
  00038	eb000000	 bl          WRITE_REGISTER_ULONG

; 1130 :     // Enable UDC.
; 1131 :     UDCCR udccr;
; 1132 :     udccr.ulValue = ReadControlRegister();

  0003c	e5950098	 ldr         r0, [r5, #0x98]
  00040	eb000000	 bl          READ_REGISTER_ULONG
  00044	e3c03008	 bic         r3, r0, #8

; 1133 :     udccr.bit.OEN = 1;
; 1134 :     udccr.bit.UDE = 1;
; 1135 :     udccr.bit.EMCE = 0 ;
; 1136 :     WriteControlRegister(udccr.ulValue);

  00048	e5950098	 ldr         r0, [r5, #0x98]
  0004c	e3831106	 orr         r1, r3, #6, 2
  00050	eb000000	 bl          WRITE_REGISTER_ULONG

; 1137 :     udccr.ulValue = ReadControlRegister();

  00054	e5950098	 ldr         r0, [r5, #0x98]
  00058	eb000000	 bl          READ_REGISTER_ULONG

; 1138 :     ASSERT(udccr.bit.EMCE==0);
; 1139 :     if (udccr.bit.EMCE==1)

  0005c	e2003008	 and         r3, r0, #8
  00060	e3530008	 cmp         r3, #8

; 1140 :         dwReturn = ERROR_INVALID_PARAMETER ;
; 1141 :     Unlock();

  00064	e2850018	 add         r0, r5, #0x18
  00068	03a04057	 moveq       r4, #0x57
  0006c	eb000000	 bl          LeaveCriticalSection

; 1142 :     FUNCTION_LEAVE_MSG();
; 1143 :     return dwReturn;
; 1144 : }

  00070	e1a00004	 mov         r0, r4
  00074	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$M38793|

			 ENDP  ; |?Start@BulUsbDevice@@UAAKXZ|, BulUsbDevice::Start

	EXPORT	|?Stop@BulUsbDevice@@UAAKXZ|		; BulUsbDevice::Stop
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T38827| DCD	|$LN17@Stop|
	DCD	0x40001101
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Stop@BulUsbDevice@@UAAKXZ| PROC	; BulUsbDevice::Stop

; 1146 : {

  00000		 |$LN17@Stop|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38824|
  00004	e1a04000	 mov         r4, r0

; 1147 :     SETFNAME();
; 1148 :     FUNCTION_ENTER_MSG();
; 1149 :     Lock();

  00008	e2840018	 add         r0, r4, #0x18
  0000c	eb000000	 bl          EnterCriticalSection

; 1150 :     //ASSERT(m_pvMddContext!=NULL);
; 1151 :     //m_pvMddContext = NULL;
; 1152 :     // Enable Device Interrupt.
; 1153 :     WriteIntrCtr0Register(0);

  00010	e5943098	 ldr         r3, [r4, #0x98]
  00014	e3a01000	 mov         r1, #0
  00018	e2830004	 add         r0, r3, #4
  0001c	eb000000	 bl          WRITE_REGISTER_ULONG

; 1154 :     WriteIntrCtr1Register(0);    

  00020	e5943098	 ldr         r3, [r4, #0x98]
  00024	e3a01000	 mov         r1, #0
  00028	e2830008	 add         r0, r3, #8
  0002c	eb000000	 bl          WRITE_REGISTER_ULONG

; 1155 :     Unlock();

  00030	e2840018	 add         r0, r4, #0x18
  00034	eb000000	 bl          LeaveCriticalSection

; 1156 :     FUNCTION_LEAVE_MSG();
; 1157 :     return ERROR_SUCCESS;

  00038	e3a00000	 mov         r0, #0

; 1158 :     
; 1159 : }

  0003c	e8bd4010	 ldmia       sp!, {r4, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M38825|

			 ENDP  ; |?Stop@BulUsbDevice@@UAAKXZ|, BulUsbDevice::Stop

	EXPORT	|?SetAddress@BulUsbDevice@@UAAKE@Z|	; BulUsbDevice::SetAddress

  00000			 AREA	 |.pdata|, PDATA
|$T38836| DCD	|$LN5@SetAddress|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetAddress@BulUsbDevice@@UAAKE@Z| PROC ; BulUsbDevice::SetAddress

; 1161 : {

  00000		 |$LN5@SetAddress|
  00000		 |$M38833|

; 1162 :     // Do we need handle this? NO?
; 1163 :     return ERROR_SUCCESS;

  00000	e3a00000	 mov         r0, #0

; 1164 : }

  00004	e12fff1e	 bx          lr
  00008		 |$M38834|

			 ENDP  ; |?SetAddress@BulUsbDevice@@UAAKE@Z|, BulUsbDevice::SetAddress

	EXPORT	|?PowerMgr@BulUsbDevice@@MAAXH@Z|	; BulUsbDevice::PowerMgr
	IMPORT	|SetInterruptEvent|
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T38867| DCD	|$LN19@PowerMgr|
	DCD	0x40001301
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PowerMgr@BulUsbDevice@@MAAXH@Z| PROC	; BulUsbDevice::PowerMgr

; 1166 : {

  00000		 |$LN19@PowerMgr|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38864|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 1167 :     Lock();

  0000c	e2850018	 add         r0, r5, #0x18
  00010	eb000000	 bl          EnterCriticalSection

; 1168 :     if (bOff) {
; 1169 :         // Disable Device to simulate remove from bus.
; 1170 :         UDCCR udccr;
; 1171 :         udccr.ulValue = 0;
; 1172 :         udccr.bit.UDE  = 0 ;
; 1173 :         WriteControlRegister(udccr.ulValue);

  00014	e5950098	 ldr         r0, [r5, #0x98]
  00018	e3540000	 cmp         r4, #0
  0001c	0a000002	 beq         |$LN2@PowerMgr|
  00020	e3a01000	 mov         r1, #0
  00024	eb000000	 bl          WRITE_REGISTER_ULONG

; 1174 :     }
; 1175 :     else {

  00028	ea000003	 b           |$LN1@PowerMgr|
  0002c		 |$LN2@PowerMgr|

; 1176 :         UDCCR udccr;
; 1177 :         udccr.ulValue = 0;
; 1178 :         udccr.bit.UDE = 1 ;
; 1179 :         udccr.bit.OEN = 1;
; 1180 :         WriteControlRegister(udccr.ulValue);

  0002c	e3a01106	 mov         r1, #6, 2
  00030	eb000000	 bl          WRITE_REGISTER_ULONG

; 1181 :         SetInterruptEvent(m_dwSysIntr);

  00034	e59500a4	 ldr         r0, [r5, #0xA4]
  00038	eb000000	 bl          SetInterruptEvent
  0003c		 |$LN1@PowerMgr|

; 1182 :     }
; 1183 :     Unlock();

  0003c	e2850018	 add         r0, r5, #0x18
  00040	eb000000	 bl          LeaveCriticalSection

; 1184 : }

  00044	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$M38865|

			 ENDP  ; |?PowerMgr@BulUsbDevice@@MAAXH@Z|, BulUsbDevice::PowerMgr

	EXPORT	|?PowerDown@BulUsbDevice@@UAAXXZ|	; BulUsbDevice::PowerDown

  00000			 AREA	 |.pdata|, PDATA
|$T38875| DCD	|$LN6@PowerDown|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PowerDown@BulUsbDevice@@UAAXXZ| PROC	; BulUsbDevice::PowerDown

; 1187 : {

  00000		 |$LN6@PowerDown|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38872|

; 1188 :     if (m_CurPowerState == PwrDeviceUnspecified) {

  00004	e59030c4	 ldr         r3, [r0, #0xC4]
  00008	e3730001	 cmn         r3, #1

; 1189 :         PowerMgr(TRUE) ;

  0000c	05903000	 ldreq       r3, [r0]
  00010	03a01001	 moveq       r1, #1
  00014	05933058	 ldreq       r3, [r3, #0x58]
  00018	01a0e00f	 moveq       lr, pc
  0001c	012fff13	 bxeq        r3

; 1190 :     }
; 1191 : }

  00020	e49de004	 ldr         lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$M38873|

			 ENDP  ; |?PowerDown@BulUsbDevice@@UAAXXZ|, BulUsbDevice::PowerDown

	EXPORT	|?PowerUp@BulUsbDevice@@UAAXXZ|		; BulUsbDevice::PowerUp

  00000			 AREA	 |.pdata|, PDATA
|$T38883| DCD	|$LN6@PowerUp|
	DCD	0x40000c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PowerUp@BulUsbDevice@@UAAXXZ| PROC	; BulUsbDevice::PowerUp

; 1193 : {

  00000		 |$LN6@PowerUp|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38880|

; 1194 :     m_fResumeOccurred = TRUE;
; 1195 :     if (m_CurPowerState == PwrDeviceUnspecified) {

  00004	e59030c4	 ldr         r3, [r0, #0xC4]
  00008	e3a02001	 mov         r2, #1
  0000c	e5802094	 str         r2, [r0, #0x94]
  00010	e3730001	 cmn         r3, #1

; 1196 :         PowerMgr(FALSE) ;

  00014	05903000	 ldreq       r3, [r0]
  00018	03a01000	 moveq       r1, #0
  0001c	05933058	 ldreq       r3, [r3, #0x58]
  00020	01a0e00f	 moveq       lr, pc
  00024	012fff13	 bxeq        r3

; 1197 :     }
; 1198 : }

  00028	e49de004	 ldr         lr, [sp], #4
  0002c	e12fff1e	 bx          lr
  00030		 |$M38881|

			 ENDP  ; |?PowerUp@BulUsbDevice@@UAAXXZ|, BulUsbDevice::PowerUp

	EXPORT	|?SetPowerState@BulUsbDevice@@UAAXW4_CEDEVICE_POWER_STATE@@@Z| ; BulUsbDevice::SetPowerState
	IMPORT	|KernelIoControl|
	IMPORT	|SetDevicePowerState|

  00000			 AREA	 |.pdata|, PDATA
|$T38893| DCD	|$LN21@SetPowerSt|
	DCD	0x40005802
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetPowerState@BulUsbDevice@@UAAXW4_CEDEVICE_POWER_STATE@@@Z| PROC ; BulUsbDevice::SetPowerState

; 1200 : {

  00000		 |$LN21@SetPowerSt|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M38890|
  00008	e1a04001	 mov         r4, r1
  0000c	e1a05000	 mov         r5, r0

; 1201 :     SETFNAME();
; 1202 :     
; 1203 :     // Adjust cpsNew.
; 1204 :     if (cpsNew != m_CurPowerState ) {

  00010	e59530c4	 ldr         r3, [r5, #0xC4]
  00014	e1540003	 cmp         r4, r3
  00018	0a00004b	 beq         |$LN10@SetPowerSt|

; 1205 :         if (cpsNew == D1 || cpsNew == D2) {

  0001c	e3540001	 cmp         r4, #1
  00020	0a000003	 beq         |$LN13@SetPowerSt|
  00024	e3540002	 cmp         r4, #2
  00028	0a000001	 beq         |$LN13@SetPowerSt|

; 1208 :         }
; 1209 :         else if (m_CurPowerState== D4) {

  0002c	e3530004	 cmp         r3, #4
  00030	1a000000	 bne         |$LN11@SetPowerSt|
  00034		 |$LN13@SetPowerSt|

; 1206 :             // D1 and D2 are not supported.
; 1207 :             cpsNew = D0;

  00034	e3a04000	 mov         r4, #0
  00038		 |$LN11@SetPowerSt|

; 1210 :             // D4 can only go to D0.
; 1211 :             cpsNew = D0;
; 1212 :         }
; 1213 :     }
; 1214 : 
; 1215 :     if (cpsNew != m_CurPowerState ) {

  00038	e1540003	 cmp         r4, r3
  0003c	0a000042	 beq         |$LN10@SetPowerSt|

; 1216 :         BOOL bBusSucceed = FALSE;
; 1217 :         DEBUGMSG(ZONE_FUNCTION, (_T("%s Going from D%u to D%u\r\n"), pszFname, m_CurPowerState , cpsNew));
; 1218 :         if ( (cpsNew < m_CurPowerState) && m_hParent) {

  00040	aa00000d	 bge         |$LN8@SetPowerSt|
  00044	e59530c8	 ldr         r3, [r5, #0xC8]
  00048	e3530000	 cmp         r3, #0
  0004c	0a00000a	 beq         |$LN8@SetPowerSt|

; 1219 :             bBusSucceed = SetDevicePowerState(m_hParent, cpsNew, NULL);

  00050	e3a02000	 mov         r2, #0
  00054	e1a01004	 mov         r1, r4
  00058	e1a00003	 mov         r0, r3
  0005c	eb000000	 bl          SetDevicePowerState
  00060	e3500000	 cmp         r0, #0

; 1220 :             if (bBusSucceed) {
; 1221 :                 PowerMgr(FALSE);

  00064	15953000	 ldrne       r3, [r5]
  00068	13a01000	 movne       r1, #0
  0006c	11a00005	 movne       r0, r5
  00070	15933058	 ldrne       r3, [r3, #0x58]
  00074	11a0e00f	 movne       lr, pc
  00078	112fff13	 bxne        r3
  0007c		 |$LN8@SetPowerSt|

; 1222 :             }
; 1223 :         }
; 1224 : 
; 1225 :         switch (cpsNew) {

  0007c	e3540000	 cmp         r4, #0
  00080	0a000015	 beq         |$LN5@SetPowerSt|
  00084	e3540003	 cmp         r4, #3
  00088	0a00000a	 beq         |$LN4@SetPowerSt|
  0008c	e3540004	 cmp         r4, #4
  00090	1a000019	 bne         |$LN6@SetPowerSt|

; 1232 :         case D4:
; 1233 :             KernelIoControl(IOCTL_HAL_DISABLE_WAKE, &m_dwSysIntr,  sizeof(m_dwSysIntr), NULL, 0, NULL);

  00094	e59f00bc	 ldr         r0, [pc, #0xBC]
  00098	e3a0e000	 mov         lr, #0
  0009c	e3a03000	 mov         r3, #0
  000a0	e3a02004	 mov         r2, #4
  000a4	e28510a4	 add         r1, r5, #0xA4
  000a8	e58de004	 str         lr, [sp, #4]
  000ac	e58de000	 str         lr, [sp]
  000b0	eb000000	 bl          KernelIoControl

; 1234 :             break;

  000b4	ea000010	 b           |$LN6@SetPowerSt|
  000b8		 |$LN4@SetPowerSt|

; 1228 :             break;
; 1229 :         case D3:
; 1230 :             KernelIoControl(IOCTL_HAL_ENABLE_WAKE, &m_dwSysIntr,  sizeof(m_dwSysIntr), NULL, 0, NULL);

  000b8	e59f009c	 ldr         r0, [pc, #0x9C]
  000bc	e3a0e000	 mov         lr, #0
  000c0	e3a03000	 mov         r3, #0
  000c4	e3a02004	 mov         r2, #4
  000c8	e28510a4	 add         r1, r5, #0xA4
  000cc	e58de004	 str         lr, [sp, #4]
  000d0	e58de000	 str         lr, [sp]
  000d4	eb000000	 bl          KernelIoControl

; 1231 :             break;

  000d8	ea000007	 b           |$LN6@SetPowerSt|
  000dc		 |$LN5@SetPowerSt|

; 1226 :         case D0:
; 1227 :             KernelIoControl(IOCTL_HAL_DISABLE_WAKE, &m_dwSysIntr,sizeof(m_dwSysIntr), NULL, 0, NULL);

  000dc	e59f0074	 ldr         r0, [pc, #0x74]
  000e0	e3a0e000	 mov         lr, #0
  000e4	e3a03000	 mov         r3, #0
  000e8	e3a02004	 mov         r2, #4
  000ec	e28510a4	 add         r1, r5, #0xA4
  000f0	e58de004	 str         lr, [sp, #4]
  000f4	e58de000	 str         lr, [sp]
  000f8	eb000000	 bl          KernelIoControl
  000fc		 |$LN6@SetPowerSt|

; 1235 :         }
; 1236 : 
; 1237 :         if ( (cpsNew > m_CurPowerState ) && m_hParent  ) {

  000fc	e59530c4	 ldr         r3, [r5, #0xC4]
  00100	e1540003	 cmp         r4, r3
  00104	da00000f	 ble         |$LN1@SetPowerSt|
  00108	e59530c8	 ldr         r3, [r5, #0xC8]
  0010c	e3530000	 cmp         r3, #0
  00110	0a00000c	 beq         |$LN1@SetPowerSt|

; 1238 :             bBusSucceed = SetDevicePowerState(m_hParent, cpsNew, NULL);

  00114	e3a02000	 mov         r2, #0
  00118	e1a01004	 mov         r1, r4
  0011c	e1a00003	 mov         r0, r3
  00120	eb000000	 bl          SetDevicePowerState
  00124	e3500000	 cmp         r0, #0

; 1239 :             if (bBusSucceed && cpsNew == D4) {

  00128	0a000006	 beq         |$LN1@SetPowerSt|
  0012c	e3540004	 cmp         r4, #4

; 1240 :                 PowerMgr(TRUE);

  00130	05953000	 ldreq       r3, [r5]
  00134	03a01001	 moveq       r1, #1
  00138	01a00005	 moveq       r0, r5
  0013c	05933058	 ldreq       r3, [r3, #0x58]
  00140	01a0e00f	 moveq       lr, pc
  00144	012fff13	 bxeq        r3
  00148		 |$LN1@SetPowerSt|

; 1241 :             }
; 1242 :         }
; 1243 :         m_CurPowerState = cpsNew;

  00148	e58540c4	 str         r4, [r5, #0xC4]
  0014c		 |$LN10@SetPowerSt|

; 1244 :     }
; 1245 : }

  0014c	e28dd008	 add         sp, sp, #8
  00150	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00154	e12fff1e	 bx          lr
  00158		 |$LN22@SetPowerSt|
  00158		 |$LN23@SetPowerSt|
  00158	010100a4	 DCD         0x10100a4
  0015c		 |$LN24@SetPowerSt|
  0015c	010100a0	 DCD         0x10100a0
  00160		 |$M38891|

			 ENDP  ; |?SetPowerState@BulUsbDevice@@UAAXW4_CEDEVICE_POWER_STATE@@@Z|, BulUsbDevice::SetPowerState

	EXPORT	|?IOControl@BulUsbDevice@@UAAKW4_IOCTL_SOURCE@@KPAEK1KPAK@Z| ; BulUsbDevice::IOControl

  00000			 AREA	 |.pdata|, PDATA
|$T38911| DCD	|$LN15@IOControl|
	DCD	0x40002101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IOControl@BulUsbDevice@@UAAKW4_IOCTL_SOURCE@@KPAEK1KPAK@Z| PROC ; BulUsbDevice::IOControl

; 1247 : {

  00000		 |$LN15@IOControl|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38908|
  00004	e1a04000	 mov         r4, r0
  00008	e3a00822	 mov         r0, #0x22, 16

; 1248 :     SETFNAME();
; 1249 :     FUNCTION_ENTER_MSG();
; 1250 : 
; 1251 :     DWORD dwRet = ERROR_INVALID_PARAMETER;
; 1252 : 
; 1253 :     switch (dwCode) {

  0000c	e380ef65	 orr         lr, r0, #0x65, 30
  00010	e152000e	 cmp         r2, lr
  00014	e3a00057	 mov         r0, #0x57
  00018	0a000017	 beq         |$LN3@IOControl|
  0001c	e3a0e82a	 mov         lr, #0x2A, 16
  00020	e38ee00c	 orr         lr, lr, #0xC
  00024	e152000e	 cmp         r2, lr
  00028	0a00000d	 beq         |$LN4@IOControl|
  0002c	e3a0e82a	 mov         lr, #0x2A, 16
  00030	e38ee010	 orr         lr, lr, #0x10
  00034	e152000e	 cmp         r2, lr
  00038	1a00000f	 bne         |$LN3@IOControl|

; 1275 :         }
; 1276 :         break;
; 1277 : 
; 1278 :     case IOCTL_BUS_SET_POWER_STATE:
; 1279 :         if (source == MDD_IOCTL) {

  0003c	e3510002	 cmp         r1, #2
  00040	1a00000d	 bne         |$LN3@IOControl|

; 1280 :             PREFAST_DEBUGCHK(pbIn);
; 1281 :             DEBUGCHK(cbIn == sizeof(CE_BUS_POWER_STATE));
; 1282 : 
; 1283 :             PCE_BUS_POWER_STATE pCePowerState = (PCE_BUS_POWER_STATE) pbIn;
; 1284 : 
; 1285 :             PREFAST_DEBUGCHK(pCePowerState->lpceDevicePowerState);
; 1286 :             DEBUGCHK(VALID_DX(*pCePowerState->lpceDevicePowerState));
; 1287 : 
; 1288 :             DEBUGMSG(ZONE_FUNCTION, (_T("%s IOCTL_BUS_GET_POWER_STATE(D%u)\r\n"), pszFname, *pCePowerState->lpceDevicePowerState));
; 1289 :             SetPowerState( *pCePowerState->lpceDevicePowerState );

  00044	e5933004	 ldr         r3, [r3, #4]
  00048	e5942000	 ldr         r2, [r4]
  0004c	e1a00004	 mov         r0, r4
  00050	e5931000	 ldr         r1, [r3]
  00054	e5923050	 ldr         r3, [r2, #0x50]
  00058	e1a0e00f	 mov         lr, pc
  0005c	e12fff13	 bx          r3

; 1290 :             dwRet = ERROR_SUCCESS;
; 1291 :         }
; 1292 :         break;

  00060	ea000004	 b           |$LN12@IOControl|
  00064		 |$LN4@IOControl|

; 1254 :     case IOCTL_UFN_GET_PDD_INFO:
; 1255 :         if ( source != BUS_IOCTL || pbOut == NULL || cbOut != sizeof(UFN_PDD_INFO) ) {
; 1256 :             break;
; 1257 :         }
; 1258 : 
; 1259 :         // Not currently supported.
; 1260 :         break;
; 1261 : 
; 1262 :     case IOCTL_BUS_GET_POWER_STATE:
; 1263 :         if (source == MDD_IOCTL) {

  00064	e3510002	 cmp         r1, #2
  00068	1a000003	 bne         |$LN3@IOControl|

; 1264 :             PREFAST_DEBUGCHK(pbIn);
; 1265 :             DEBUGCHK(cbIn == sizeof(CE_BUS_POWER_STATE));
; 1266 : 
; 1267 :             PCE_BUS_POWER_STATE pCePowerState = (PCE_BUS_POWER_STATE) pbIn;
; 1268 :             PREFAST_DEBUGCHK(pCePowerState->lpceDevicePowerState);
; 1269 : 
; 1270 :             DEBUGMSG(ZONE_FUNCTION, (_T("%s IOCTL_BUS_GET_POWER_STATE\r\n"), pszFname));
; 1271 : 
; 1272 :             *pCePowerState->lpceDevicePowerState = m_CurPowerState;

  0006c	e5932004	 ldr         r2, [r3, #4]
  00070	e59430c4	 ldr         r3, [r4, #0xC4]

; 1273 : 
; 1274 :             dwRet = ERROR_SUCCESS;

  00074	e5823000	 str         r3, [r2]
  00078		 |$LN12@IOControl|
  00078	e3a00000	 mov         r0, #0
  0007c		 |$LN3@IOControl|

; 1293 :     }
; 1294 :     FUNCTION_LEAVE_MSG();
; 1295 :     return dwRet;
; 1296 : }

  0007c	e8bd4010	 ldmia       sp!, {r4, lr}
  00080	e12fff1e	 bx          lr
  00084		 |$M38909|

			 ENDP  ; |?IOControl@BulUsbDevice@@UAAKW4_IOCTL_SOURCE@@KPAEK1KPAK@Z|, BulUsbDevice::IOControl

	EXPORT	|?UfnPdd_Deinit@@YAKPAX@Z|		; UfnPdd_Deinit

  00000			 AREA	 |.pdata|, PDATA
|$T38925| DCD	|$LN9@UfnPdd_Dei|
	DCD	0x40000e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UfnPdd_Deinit@@YAKPAX@Z| PROC	; UfnPdd_Deinit

; 1518 : {

  00000		 |$LN9@UfnPdd_Dei|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38922|
  00004	e3500000	 cmp         r0, #0

; 1519 :     if (pvPddContext) {

  00008	0a000007	 beq         |$LN2@UfnPdd_Dei|

; 1520 :         delete ((BulUsbDevice *)pvPddContext);

  0000c	e5903000	 ldr         r3, [r0]
  00010	e3a01001	 mov         r1, #1
  00014	e5933004	 ldr         r3, [r3, #4]
  00018	e1a0e00f	 mov         lr, pc
  0001c	e12fff13	 bx          r3

; 1521 :         return ERROR_SUCCESS ;

  00020	e3a00000	 mov         r0, #0

; 1525 : }

  00024	e49de004	 ldr         lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$LN2@UfnPdd_Dei|

; 1522 :     }
; 1523 :     else
; 1524 :         return ERROR_INVALID_PARAMETER;;

  0002c	e3a00057	 mov         r0, #0x57

; 1525 : }

  00030	e49de004	 ldr         lr, [sp], #4
  00034	e12fff1e	 bx          lr
  00038		 |$M38923|

			 ENDP  ; |?UfnPdd_Deinit@@YAKPAX@Z|, UfnPdd_Deinit

	EXPORT	|?UfnPdd_IsConfigurationSupportable@@YAKPAXW4_UFN_BUS_SPEED@@PAU_UFN_CONFIGURATION@@@Z| ; UfnPdd_IsConfigurationSupportable

  00000			 AREA	 |.pdata|, PDATA
|$T38934| DCD	|$LN5@UfnPdd_IsC|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UfnPdd_IsConfigurationSupportable@@YAKPAXW4_UFN_BUS_SPEED@@PAU_UFN_CONFIGURATION@@@Z| PROC ; UfnPdd_IsConfigurationSupportable

; 1535 : {

  00000		 |$LN5@UfnPdd_IsC|
  00000		 |$M38931|

; 1536 :     // TODO: Need to do anything?
; 1537 :     return ERROR_SUCCESS;

  00000	e3a00000	 mov         r0, #0

; 1538 : }

  00004	e12fff1e	 bx          lr
  00008		 |$M38932|

			 ENDP  ; |?UfnPdd_IsConfigurationSupportable@@YAKPAXW4_UFN_BUS_SPEED@@PAU_UFN_CONFIGURATION@@@Z|, UfnPdd_IsConfigurationSupportable

	EXPORT	|?UfnPdd_IsEndpointSupportable@@YAKPAXKW4_UFN_BUS_SPEED@@PAU_USB_ENDPOINT_DESCRIPTOR@@EEE@Z| ; UfnPdd_IsEndpointSupportable

  00000			 AREA	 |.pdata|, PDATA
|$T38948| DCD	|$LN6@UfnPdd_IsE|
	DCD	0x40001902
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UfnPdd_IsEndpointSupportable@@YAKPAXKW4_UFN_BUS_SPEED@@PAU_USB_ENDPOINT_DESCRIPTOR@@EEE@Z| PROC ; UfnPdd_IsEndpointSupportable

; 1552 : {

  00000		 |$LN6@UfnPdd_IsE|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M38945|
  00008	e1b08000	 movs        r8, r0

; 1553 :     // TODO: Use extra parameters
; 1554 :     
; 1555 :     DWORD dwError = ERROR_INVALID_PARAMETER;

  0000c	e3a00057	 mov         r0, #0x57

; 1556 :     if (pvPddContext) {

  00010	0a000010	 beq         |$LN1@UfnPdd_IsE|

; 1557 :         dwError =((BulUsbDevice *)pvPddContext)->IsEndpointSupportable( dwEndpoint, Speed, pEndpointDesc ,bConfigurationValue,bInterfaceNumber,bAlternateSetting );

  00014	e5d86000	 ldrb        r6, [r8]
  00018	e5d8e001	 ldrb        lr, [r8, #1]
  0001c	e5d84002	 ldrb        r4, [r8, #2]
  00020	e5d85003	 ldrb        r5, [r8, #3]
  00024	e186e40e	 orr         lr, r6, lr, lsl #8
  00028	e18ee804	 orr         lr, lr, r4, lsl #16
  0002c	e5dd402c	 ldrb        r4, [sp, #0x2C]
  00030	e5dd6024	 ldrb        r6, [sp, #0x24]
  00034	e18eec05	 orr         lr, lr, r5, lsl #24
  00038	e5dd5028	 ldrb        r5, [sp, #0x28]
  0003c	e59e7010	 ldr         r7, [lr, #0x10]
  00040	e1a00008	 mov         r0, r8
  00044	e58d5004	 str         r5, [sp, #4]
  00048	e58d4008	 str         r4, [sp, #8]
  0004c	e58d6000	 str         r6, [sp]
  00050	e1a0e00f	 mov         lr, pc
  00054	e12fff17	 bx          r7
  00058		 |$LN1@UfnPdd_IsE|

; 1558 :     };
; 1559 :     return dwError;
; 1560 : }

  00058	e28dd00c	 add         sp, sp, #0xC
  0005c	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M38946|

			 ENDP  ; |?UfnPdd_IsEndpointSupportable@@YAKPAXKW4_UFN_BUS_SPEED@@PAU_USB_ENDPOINT_DESCRIPTOR@@EEE@Z|, UfnPdd_IsEndpointSupportable

	EXPORT	|?UfnPdd_InitEndpoint@@YAKPAXKW4_UFN_BUS_SPEED@@PAU_USB_ENDPOINT_DESCRIPTOR@@0EEE@Z| ; UfnPdd_InitEndpoint

  00000			 AREA	 |.pdata|, PDATA
|$T38962| DCD	|$LN6@UfnPdd_Ini|
	DCD	0x40001902
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UfnPdd_InitEndpoint@@YAKPAXKW4_UFN_BUS_SPEED@@PAU_USB_ENDPOINT_DESCRIPTOR@@0EEE@Z| PROC ; UfnPdd_InitEndpoint

; 1574 : {

  00000		 |$LN6@UfnPdd_Ini|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M38959|
  00008	e1b08000	 movs        r8, r0

; 1575 :     DWORD dwError = ERROR_INVALID_PARAMETER;

  0000c	e3a00057	 mov         r0, #0x57

; 1576 :     if (pvPddContext) {

  00010	0a000010	 beq         |$LN1@UfnPdd_Ini|

; 1577 :         dwError =((BulUsbDevice *)pvPddContext)->InitEndpoint( dwEndpoint, Speed, pEndpointDesc, bConfigurationValue,bInterfaceNumber,bAlternateSetting );

  00014	e5d86000	 ldrb        r6, [r8]
  00018	e5d8e001	 ldrb        lr, [r8, #1]
  0001c	e5d84002	 ldrb        r4, [r8, #2]
  00020	e5d85003	 ldrb        r5, [r8, #3]
  00024	e186e40e	 orr         lr, r6, lr, lsl #8
  00028	e18ee804	 orr         lr, lr, r4, lsl #16
  0002c	e5dd4030	 ldrb        r4, [sp, #0x30]
  00030	e5dd6028	 ldrb        r6, [sp, #0x28]
  00034	e18eec05	 orr         lr, lr, r5, lsl #24
  00038	e5dd502c	 ldrb        r5, [sp, #0x2C]
  0003c	e59e7014	 ldr         r7, [lr, #0x14]
  00040	e1a00008	 mov         r0, r8
  00044	e58d5004	 str         r5, [sp, #4]
  00048	e58d4008	 str         r4, [sp, #8]
  0004c	e58d6000	 str         r6, [sp]
  00050	e1a0e00f	 mov         lr, pc
  00054	e12fff17	 bx          r7
  00058		 |$LN1@UfnPdd_Ini|

; 1578 :     };
; 1579 :     return dwError;
; 1580 : }

  00058	e28dd00c	 add         sp, sp, #0xC
  0005c	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M38960|

			 ENDP  ; |?UfnPdd_InitEndpoint@@YAKPAXKW4_UFN_BUS_SPEED@@PAU_USB_ENDPOINT_DESCRIPTOR@@0EEE@Z|, UfnPdd_InitEndpoint

	EXPORT	|?UfnPdd_RegisterDevice@@YAKPAXPBU_USB_DEVICE_DESCRIPTOR@@PBU_UFN_CONFIGURATION@@PBU_USB_CONFIGURATION_DESCRIPTOR@@123PBU_UFN_STRING_SET@@K@Z| ; UfnPdd_RegisterDevice

  00000			 AREA	 |.pdata|, PDATA
|$T38971| DCD	|$LN5@UfnPdd_Reg|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UfnPdd_RegisterDevice@@YAKPAXPBU_USB_DEVICE_DESCRIPTOR@@PBU_UFN_CONFIGURATION@@PBU_USB_CONFIGURATION_DESCRIPTOR@@123PBU_UFN_STRING_SET@@K@Z| PROC ; UfnPdd_RegisterDevice

; 1595 : {

  00000		 |$LN5@UfnPdd_Reg|
  00000		 |$M38968|

; 1596 :     return ERROR_SUCCESS;

  00000	e3a00000	 mov         r0, #0

; 1597 : }

  00004	e12fff1e	 bx          lr
  00008		 |$M38969|

			 ENDP  ; |?UfnPdd_RegisterDevice@@YAKPAXPBU_USB_DEVICE_DESCRIPTOR@@PBU_UFN_CONFIGURATION@@PBU_USB_CONFIGURATION_DESCRIPTOR@@123PBU_UFN_STRING_SET@@K@Z|, UfnPdd_RegisterDevice

	EXPORT	|?UfnPdd_DeregisterDevice@@YAKPAX@Z|	; UfnPdd_DeregisterDevice

  00000			 AREA	 |.pdata|, PDATA
|$T38981| DCD	|$LN6@UfnPdd_Der|
	DCD	0x40001001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UfnPdd_DeregisterDevice@@YAKPAX@Z| PROC ; UfnPdd_DeregisterDevice

; 1605 : {

  00000		 |$LN6@UfnPdd_Der|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38978|
  00004	e3500000	 cmp         r0, #0

; 1606 :     if (pvPddContext) {

  00008	0a000009	 beq         |$LN1@UfnPdd_Der|

; 1607 :         ((BulUsbDevice *)pvPddContext)->DeleteAllEndpoint();

  0000c	e5d0e000	 ldrb        lr, [r0]
  00010	e5d03001	 ldrb        r3, [r0, #1]
  00014	e5d02002	 ldrb        r2, [r0, #2]
  00018	e5d01003	 ldrb        r1, [r0, #3]
  0001c	e18e3403	 orr         r3, lr, r3, lsl #8
  00020	e1833802	 orr         r3, r3, r2, lsl #16
  00024	e1833c01	 orr         r3, r3, r1, lsl #24
  00028	e593300c	 ldr         r3, [r3, #0xC]
  0002c	e1a0e00f	 mov         lr, pc
  00030	e12fff13	 bx          r3
  00034		 |$LN1@UfnPdd_Der|

; 1608 :     };
; 1609 :     return ERROR_SUCCESS;

  00034	e3a00000	 mov         r0, #0

; 1610 : }

  00038	e49de004	 ldr         lr, [sp], #4
  0003c	e12fff1e	 bx          lr
  00040		 |$M38979|

			 ENDP  ; |?UfnPdd_DeregisterDevice@@YAKPAX@Z|, UfnPdd_DeregisterDevice

	EXPORT	|?UfnPdd_Start@@YAKPAX@Z|		; UfnPdd_Start

  00000			 AREA	 |.pdata|, PDATA
|$T38992| DCD	|$LN6@UfnPdd_Sta|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UfnPdd_Start@@YAKPAX@Z| PROC		; UfnPdd_Start

; 1618 : {

  00000		 |$LN6@UfnPdd_Sta|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38989|
  00004	e1b04000	 movs        r4, r0

; 1619 :     DWORD dwError = ERROR_INVALID_PARAMETER;

  00008	e3a00057	 mov         r0, #0x57

; 1620 :     if (pvPddContext) {

  0000c	0a00000a	 beq         |$LN1@UfnPdd_Sta|

; 1621 :         dwError =((BulUsbDevice *)pvPddContext)->Start();

  00010	e5d4e000	 ldrb        lr, [r4]
  00014	e5d43001	 ldrb        r3, [r4, #1]
  00018	e5d42002	 ldrb        r2, [r4, #2]
  0001c	e5d41003	 ldrb        r1, [r4, #3]
  00020	e18e3403	 orr         r3, lr, r3, lsl #8
  00024	e1833802	 orr         r3, r3, r2, lsl #16
  00028	e1833c01	 orr         r3, r3, r1, lsl #24
  0002c	e5933038	 ldr         r3, [r3, #0x38]
  00030	e1a00004	 mov         r0, r4
  00034	e1a0e00f	 mov         lr, pc
  00038	e12fff13	 bx          r3
  0003c		 |$LN1@UfnPdd_Sta|

; 1622 :     };
; 1623 :     return dwError;
; 1624 : }

  0003c	e8bd4010	 ldmia       sp!, {r4, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M38990|

			 ENDP  ; |?UfnPdd_Start@@YAKPAX@Z|, UfnPdd_Start

	EXPORT	|?UfnPdd_Stop@@YAKPAX@Z|		; UfnPdd_Stop

  00000			 AREA	 |.pdata|, PDATA
|$T39003| DCD	|$LN6@UfnPdd_Sto|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UfnPdd_Stop@@YAKPAX@Z| PROC		; UfnPdd_Stop

; 1631 : {

  00000		 |$LN6@UfnPdd_Sto|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M39000|
  00004	e1b04000	 movs        r4, r0

; 1632 :     DWORD dwError = ERROR_INVALID_PARAMETER;

  00008	e3a00057	 mov         r0, #0x57

; 1633 :     if (pvPddContext) {

  0000c	0a00000a	 beq         |$LN1@UfnPdd_Sto|

; 1634 :         dwError =((BulUsbDevice *)pvPddContext)->Stop();

  00010	e5d4e000	 ldrb        lr, [r4]
  00014	e5d43001	 ldrb        r3, [r4, #1]
  00018	e5d42002	 ldrb        r2, [r4, #2]
  0001c	e5d41003	 ldrb        r1, [r4, #3]
  00020	e18e3403	 orr         r3, lr, r3, lsl #8
  00024	e1833802	 orr         r3, r3, r2, lsl #16
  00028	e1833c01	 orr         r3, r3, r1, lsl #24
  0002c	e593303c	 ldr         r3, [r3, #0x3C]
  00030	e1a00004	 mov         r0, r4
  00034	e1a0e00f	 mov         lr, pc
  00038	e12fff13	 bx          r3
  0003c		 |$LN1@UfnPdd_Sto|

; 1635 :     };
; 1636 :     return dwError;
; 1637 : }

  0003c	e8bd4010	 ldmia       sp!, {r4, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M39001|

			 ENDP  ; |?UfnPdd_Stop@@YAKPAX@Z|, UfnPdd_Stop

	EXPORT	|?UfnPdd_IssueTransfer@@YAKPAXKPAU_STransfer@@@Z| ; UfnPdd_IssueTransfer

  00000			 AREA	 |.pdata|, PDATA
|$T39016| DCD	|$LN6@UfnPdd_Iss|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UfnPdd_IssueTransfer@@YAKPAXKPAU_STransfer@@@Z| PROC ; UfnPdd_IssueTransfer

; 1646 : {

  00000		 |$LN6@UfnPdd_Iss|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M39013|
  00004	e1b06000	 movs        r6, r0

; 1647 :     DWORD dwError = ERROR_INVALID_PARAMETER;

  00008	e3a00057	 mov         r0, #0x57

; 1648 :     if (pvPddContext) {

  0000c	0a00000a	 beq         |$LN1@UfnPdd_Iss|

; 1649 :         dwError =((BulUsbDevice *)pvPddContext)->IssueTransfer(dwEndpoint,pTransfer);

  00010	e5d65000	 ldrb        r5, [r6]
  00014	e5d63001	 ldrb        r3, [r6, #1]
  00018	e5d6e002	 ldrb        lr, [r6, #2]
  0001c	e5d64003	 ldrb        r4, [r6, #3]
  00020	e1853403	 orr         r3, r5, r3, lsl #8
  00024	e183380e	 orr         r3, r3, lr, lsl #16
  00028	e1833c04	 orr         r3, r3, r4, lsl #24
  0002c	e593302c	 ldr         r3, [r3, #0x2C]
  00030	e1a00006	 mov         r0, r6
  00034	e1a0e00f	 mov         lr, pc
  00038	e12fff13	 bx          r3
  0003c		 |$LN1@UfnPdd_Iss|

; 1650 :     };
; 1651 :     return dwError;
; 1652 : }

  0003c	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M39014|

			 ENDP  ; |?UfnPdd_IssueTransfer@@YAKPAXKPAU_STransfer@@@Z|, UfnPdd_IssueTransfer

	EXPORT	|?UfnPdd_AbortTransfer@@YAKPAXKPAU_STransfer@@@Z| ; UfnPdd_AbortTransfer

  00000			 AREA	 |.pdata|, PDATA
|$T39029| DCD	|$LN6@UfnPdd_Abo|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UfnPdd_AbortTransfer@@YAKPAXKPAU_STransfer@@@Z| PROC ; UfnPdd_AbortTransfer

; 1661 : {

  00000		 |$LN6@UfnPdd_Abo|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M39026|
  00004	e1b06000	 movs        r6, r0

; 1662 :     DWORD dwError = ERROR_INVALID_PARAMETER;

  00008	e3a00057	 mov         r0, #0x57

; 1663 :     if (pvPddContext) {

  0000c	0a00000a	 beq         |$LN1@UfnPdd_Abo|

; 1664 :         dwError =((BulUsbDevice *)pvPddContext)->AbortTransfer(dwEndpoint, pTransfer);

  00010	e5d65000	 ldrb        r5, [r6]
  00014	e5d63001	 ldrb        r3, [r6, #1]
  00018	e5d6e002	 ldrb        lr, [r6, #2]
  0001c	e5d64003	 ldrb        r4, [r6, #3]
  00020	e1853403	 orr         r3, r5, r3, lsl #8
  00024	e183380e	 orr         r3, r3, lr, lsl #16
  00028	e1833c04	 orr         r3, r3, r4, lsl #24
  0002c	e5933030	 ldr         r3, [r3, #0x30]
  00030	e1a00006	 mov         r0, r6
  00034	e1a0e00f	 mov         lr, pc
  00038	e12fff13	 bx          r3
  0003c		 |$LN1@UfnPdd_Abo|

; 1665 :     };
; 1666 :     return dwError;
; 1667 : }

  0003c	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M39027|

			 ENDP  ; |?UfnPdd_AbortTransfer@@YAKPAXKPAU_STransfer@@@Z|, UfnPdd_AbortTransfer

	EXPORT	|?UfnPdd_DeinitEndpoint@@YAKPAXK@Z|	; UfnPdd_DeinitEndpoint

  00000			 AREA	 |.pdata|, PDATA
|$T39041| DCD	|$LN6@UfnPdd_Dei@2|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UfnPdd_DeinitEndpoint@@YAKPAXK@Z| PROC ; UfnPdd_DeinitEndpoint

; 1675 : {

  00000		 |$LN6@UfnPdd_Dei@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M39038|
  00004	e1b05000	 movs        r5, r0

; 1676 :     DWORD dwError = ERROR_INVALID_PARAMETER;

  00008	e3a00057	 mov         r0, #0x57

; 1677 :     if (pvPddContext) {

  0000c	0a00000a	 beq         |$LN1@UfnPdd_Dei@2|

; 1678 :         dwError =((BulUsbDevice *)pvPddContext)->DeinitEndpoint(dwEndpoint);

  00010	e5d54000	 ldrb        r4, [r5]
  00014	e5d53001	 ldrb        r3, [r5, #1]
  00018	e5d52002	 ldrb        r2, [r5, #2]
  0001c	e5d5e003	 ldrb        lr, [r5, #3]
  00020	e1843403	 orr         r3, r4, r3, lsl #8
  00024	e1833802	 orr         r3, r3, r2, lsl #16
  00028	e1833c0e	 orr         r3, r3, lr, lsl #24
  0002c	e5933018	 ldr         r3, [r3, #0x18]
  00030	e1a00005	 mov         r0, r5
  00034	e1a0e00f	 mov         lr, pc
  00038	e12fff13	 bx          r3
  0003c		 |$LN1@UfnPdd_Dei@2|

; 1679 :     };
; 1680 :     return dwError;
; 1681 : }

  0003c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M39039|

			 ENDP  ; |?UfnPdd_DeinitEndpoint@@YAKPAXK@Z|, UfnPdd_DeinitEndpoint

	EXPORT	|?UfnPdd_StallEndpoint@@YAKPAXK@Z|	; UfnPdd_StallEndpoint

  00000			 AREA	 |.pdata|, PDATA
|$T39053| DCD	|$LN6@UfnPdd_Sta@2|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UfnPdd_StallEndpoint@@YAKPAXK@Z| PROC ; UfnPdd_StallEndpoint

; 1689 : {

  00000		 |$LN6@UfnPdd_Sta@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M39050|
  00004	e1b05000	 movs        r5, r0

; 1690 :     DWORD dwError = ERROR_INVALID_PARAMETER;

  00008	e3a00057	 mov         r0, #0x57

; 1691 :     if (pvPddContext) {

  0000c	0a00000a	 beq         |$LN1@UfnPdd_Sta@2|

; 1692 :         dwError =((BulUsbDevice *)pvPddContext)->StallEndpoint(dwEndpoint);

  00010	e5d54000	 ldrb        r4, [r5]
  00014	e5d53001	 ldrb        r3, [r5, #1]
  00018	e5d52002	 ldrb        r2, [r5, #2]
  0001c	e5d5e003	 ldrb        lr, [r5, #3]
  00020	e1843403	 orr         r3, r4, r3, lsl #8
  00024	e1833802	 orr         r3, r3, r2, lsl #16
  00028	e1833c0e	 orr         r3, r3, lr, lsl #24
  0002c	e593301c	 ldr         r3, [r3, #0x1C]
  00030	e1a00005	 mov         r0, r5
  00034	e1a0e00f	 mov         lr, pc
  00038	e12fff13	 bx          r3
  0003c		 |$LN1@UfnPdd_Sta@2|

; 1693 :     };
; 1694 :     return dwError;
; 1695 : }

  0003c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M39051|

			 ENDP  ; |?UfnPdd_StallEndpoint@@YAKPAXK@Z|, UfnPdd_StallEndpoint

	EXPORT	|?UfnPdd_ClearEndpointStall@@YAKPAXK@Z|	; UfnPdd_ClearEndpointStall

  00000			 AREA	 |.pdata|, PDATA
|$T39065| DCD	|$LN6@UfnPdd_Cle|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UfnPdd_ClearEndpointStall@@YAKPAXK@Z| PROC ; UfnPdd_ClearEndpointStall

; 1703 : {

  00000		 |$LN6@UfnPdd_Cle|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M39062|
  00004	e1b05000	 movs        r5, r0

; 1704 :     DWORD dwError = ERROR_INVALID_PARAMETER;

  00008	e3a00057	 mov         r0, #0x57

; 1705 :     if (pvPddContext) {

  0000c	0a00000a	 beq         |$LN1@UfnPdd_Cle|

; 1706 :         dwError =((BulUsbDevice *)pvPddContext)->ClearEndpointStall(dwEndpoint);

  00010	e5d54000	 ldrb        r4, [r5]
  00014	e5d53001	 ldrb        r3, [r5, #1]
  00018	e5d52002	 ldrb        r2, [r5, #2]
  0001c	e5d5e003	 ldrb        lr, [r5, #3]
  00020	e1843403	 orr         r3, r4, r3, lsl #8
  00024	e1833802	 orr         r3, r3, r2, lsl #16
  00028	e1833c0e	 orr         r3, r3, lr, lsl #24
  0002c	e5933020	 ldr         r3, [r3, #0x20]
  00030	e1a00005	 mov         r0, r5
  00034	e1a0e00f	 mov         lr, pc
  00038	e12fff13	 bx          r3
  0003c		 |$LN1@UfnPdd_Cle|

; 1707 :     };
; 1708 :     return dwError;
; 1709 : }

  0003c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M39063|

			 ENDP  ; |?UfnPdd_ClearEndpointStall@@YAKPAXK@Z|, UfnPdd_ClearEndpointStall

	EXPORT	|?UfnPdd_SendControlStatusHandshake@@YAKPAXK@Z| ; UfnPdd_SendControlStatusHandshake

  00000			 AREA	 |.pdata|, PDATA
|$T39077| DCD	|$LN6@UfnPdd_Sen|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UfnPdd_SendControlStatusHandshake@@YAKPAXK@Z| PROC ; UfnPdd_SendControlStatusHandshake

; 1717 : {

  00000		 |$LN6@UfnPdd_Sen|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M39074|
  00004	e1b05000	 movs        r5, r0

; 1718 :     DWORD dwError = ERROR_INVALID_PARAMETER;

  00008	e3a00057	 mov         r0, #0x57

; 1719 :     if (pvPddContext) {

  0000c	0a00000a	 beq         |$LN1@UfnPdd_Sen|

; 1720 :         dwError =((BulUsbDevice *)pvPddContext)->SendControlStatusHandshake(dwEndpoint);

  00010	e5d54000	 ldrb        r4, [r5]
  00014	e5d53001	 ldrb        r3, [r5, #1]
  00018	e5d52002	 ldrb        r2, [r5, #2]
  0001c	e5d5e003	 ldrb        lr, [r5, #3]
  00020	e1843403	 orr         r3, r4, r3, lsl #8
  00024	e1833802	 orr         r3, r3, r2, lsl #16
  00028	e1833c0e	 orr         r3, r3, lr, lsl #24
  0002c	e5933034	 ldr         r3, [r3, #0x34]
  00030	e1a00005	 mov         r0, r5
  00034	e1a0e00f	 mov         lr, pc
  00038	e12fff13	 bx          r3
  0003c		 |$LN1@UfnPdd_Sen|

; 1721 :     };
; 1722 :     return dwError;
; 1723 : }

  0003c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M39075|

			 ENDP  ; |?UfnPdd_SendControlStatusHandshake@@YAKPAXK@Z|, UfnPdd_SendControlStatusHandshake

	EXPORT	|?UfnPdd_SetAddress@@YAKPAXE@Z|		; UfnPdd_SetAddress

  00000			 AREA	 |.pdata|, PDATA
|$T39089| DCD	|$LN6@UfnPdd_Set|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UfnPdd_SetAddress@@YAKPAXE@Z| PROC	; UfnPdd_SetAddress

; 1731 : {

  00000		 |$LN6@UfnPdd_Set|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M39086|
  00004	e1b05000	 movs        r5, r0

; 1732 :     DWORD dwError = ERROR_INVALID_PARAMETER;

  00008	e3a00057	 mov         r0, #0x57

; 1733 :     if (pvPddContext) {

  0000c	0a00000a	 beq         |$LN1@UfnPdd_Set|

; 1734 :         dwError =((BulUsbDevice *)pvPddContext)->SetAddress(bAddress);

  00010	e5d54000	 ldrb        r4, [r5]
  00014	e5d53001	 ldrb        r3, [r5, #1]
  00018	e5d52002	 ldrb        r2, [r5, #2]
  0001c	e5d5e003	 ldrb        lr, [r5, #3]
  00020	e1843403	 orr         r3, r4, r3, lsl #8
  00024	e1833802	 orr         r3, r3, r2, lsl #16
  00028	e1833c0e	 orr         r3, r3, lr, lsl #24
  0002c	e5933044	 ldr         r3, [r3, #0x44]
  00030	e1a00005	 mov         r0, r5
  00034	e1a0e00f	 mov         lr, pc
  00038	e12fff13	 bx          r3
  0003c		 |$LN1@UfnPdd_Set|

; 1735 :     };
; 1736 :     return dwError;
; 1737 : 
; 1738 : }

  0003c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M39087|

			 ENDP  ; |?UfnPdd_SetAddress@@YAKPAXE@Z|, UfnPdd_SetAddress

	EXPORT	|?UfnPdd_IsEndpointHalted@@YAKPAXKPAH@Z| ; UfnPdd_IsEndpointHalted

  00000			 AREA	 |.pdata|, PDATA
|$T39102| DCD	|$LN6@UfnPdd_IsE@2|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UfnPdd_IsEndpointHalted@@YAKPAXKPAH@Z| PROC ; UfnPdd_IsEndpointHalted

; 1747 : {

  00000		 |$LN6@UfnPdd_IsE@2|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M39099|
  00004	e1b06000	 movs        r6, r0

; 1748 :     DWORD dwError = ERROR_INVALID_PARAMETER;

  00008	e3a00057	 mov         r0, #0x57

; 1749 :     if (pvPddContext) {

  0000c	0a00000a	 beq         |$LN1@UfnPdd_IsE@2|

; 1750 :         dwError =((BulUsbDevice *)pvPddContext)->IsEndpointHalted(dwEndpoint,pfHalted);

  00010	e5d65000	 ldrb        r5, [r6]
  00014	e5d63001	 ldrb        r3, [r6, #1]
  00018	e5d6e002	 ldrb        lr, [r6, #2]
  0001c	e5d64003	 ldrb        r4, [r6, #3]
  00020	e1853403	 orr         r3, r5, r3, lsl #8
  00024	e183380e	 orr         r3, r3, lr, lsl #16
  00028	e1833c04	 orr         r3, r3, r4, lsl #24
  0002c	e5933028	 ldr         r3, [r3, #0x28]
  00030	e1a00006	 mov         r0, r6
  00034	e1a0e00f	 mov         lr, pc
  00038	e12fff13	 bx          r3
  0003c		 |$LN1@UfnPdd_IsE@2|

; 1751 :     };
; 1752 :     return dwError;
; 1753 : }

  0003c	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M39100|

			 ENDP  ; |?UfnPdd_IsEndpointHalted@@YAKPAXKPAH@Z|, UfnPdd_IsEndpointHalted

	EXPORT	|?UfnPdd_InitiateRemoteWakeup@@YAKPAX@Z| ; UfnPdd_InitiateRemoteWakeup

  00000			 AREA	 |.pdata|, PDATA
|$T39111| DCD	|$LN5@UfnPdd_Ini@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UfnPdd_InitiateRemoteWakeup@@YAKPAX@Z| PROC ; UfnPdd_InitiateRemoteWakeup

; 1761 : {

  00000		 |$LN5@UfnPdd_Ini@2|
  00000		 |$M39108|

; 1762 :     // TODO: Fill in
; 1763 : 
; 1764 :     return ERROR_SUCCESS;

  00000	e3a00000	 mov         r0, #0

; 1765 : }

  00004	e12fff1e	 bx          lr
  00008		 |$M39109|

			 ENDP  ; |?UfnPdd_InitiateRemoteWakeup@@YAKPAX@Z|, UfnPdd_InitiateRemoteWakeup

	EXPORT	|?UfnPdd_PowerDown@@YAXPAX@Z|		; UfnPdd_PowerDown

  00000			 AREA	 |.pdata|, PDATA
|$T39119| DCD	|$LN6@UfnPdd_Pow|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UfnPdd_PowerDown@@YAXPAX@Z| PROC	; UfnPdd_PowerDown

; 1773 : {

  00000		 |$LN6@UfnPdd_Pow|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M39116|
  00004	e3500000	 cmp         r0, #0

; 1774 :     if (pvPddContext) {

  00008	0a000009	 beq         |$LN1@UfnPdd_Pow|

; 1775 :         ((BulUsbDevice *)pvPddContext)->PowerDown();

  0000c	e5d0e000	 ldrb        lr, [r0]
  00010	e5d03001	 ldrb        r3, [r0, #1]
  00014	e5d02002	 ldrb        r2, [r0, #2]
  00018	e5d01003	 ldrb        r1, [r0, #3]
  0001c	e18e3403	 orr         r3, lr, r3, lsl #8
  00020	e1833802	 orr         r3, r3, r2, lsl #16
  00024	e1833c01	 orr         r3, r3, r1, lsl #24
  00028	e5933048	 ldr         r3, [r3, #0x48]
  0002c	e1a0e00f	 mov         lr, pc
  00030	e12fff13	 bx          r3
  00034		 |$LN1@UfnPdd_Pow|

; 1776 :     };
; 1777 : }

  00034	e49de004	 ldr         lr, [sp], #4
  00038	e12fff1e	 bx          lr
  0003c		 |$M39117|

			 ENDP  ; |?UfnPdd_PowerDown@@YAXPAX@Z|, UfnPdd_PowerDown

	EXPORT	|?UfnPdd_PowerUp@@YAXPAX@Z|		; UfnPdd_PowerUp

  00000			 AREA	 |.pdata|, PDATA
|$T39127| DCD	|$LN6@UfnPdd_Pow@2|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UfnPdd_PowerUp@@YAXPAX@Z| PROC	; UfnPdd_PowerUp

; 1784 : {

  00000		 |$LN6@UfnPdd_Pow@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M39124|
  00004	e3500000	 cmp         r0, #0

; 1785 :     if (pvPddContext) {

  00008	0a000009	 beq         |$LN1@UfnPdd_Pow@2|

; 1786 :         ((BulUsbDevice *)pvPddContext)->PowerUp();

  0000c	e5d0e000	 ldrb        lr, [r0]
  00010	e5d03001	 ldrb        r3, [r0, #1]
  00014	e5d02002	 ldrb        r2, [r0, #2]
  00018	e5d01003	 ldrb        r1, [r0, #3]
  0001c	e18e3403	 orr         r3, lr, r3, lsl #8
  00020	e1833802	 orr         r3, r3, r2, lsl #16
  00024	e1833c01	 orr         r3, r3, r1, lsl #24
  00028	e593304c	 ldr         r3, [r3, #0x4C]
  0002c	e1a0e00f	 mov         lr, pc
  00030	e12fff13	 bx          r3
  00034		 |$LN1@UfnPdd_Pow@2|

; 1787 :     };
; 1788 : }

  00034	e49de004	 ldr         lr, [sp], #4
  00038	e12fff1e	 bx          lr
  0003c		 |$M39125|

			 ENDP  ; |?UfnPdd_PowerUp@@YAXPAX@Z|, UfnPdd_PowerUp

	EXPORT	|?UfnPdd_IOControl@@YAKPAXW4_IOCTL_SOURCE@@KPAEK2KPAK@Z| ; UfnPdd_IOControl

  00000			 AREA	 |.pdata|, PDATA
|$T39141| DCD	|$LN6@UfnPdd_IOC|
	DCD	0x40001b02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UfnPdd_IOControl@@YAKPAXW4_IOCTL_SOURCE@@KPAEK2KPAK@Z| PROC ; UfnPdd_IOControl

; 1805 : {

  00000		 |$LN6@UfnPdd_IOC|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd010	 sub         sp, sp, #0x10
  00008		 |$M39138|
  00008	e1b09000	 movs        r9, r0

; 1806 :     DWORD dwError = ERROR_INVALID_PARAMETER;

  0000c	e3a00057	 mov         r0, #0x57

; 1807 :     if (pvPddContext) {

  00010	0a000012	 beq         |$LN1@UfnPdd_IOC|

; 1808 :         dwError =((BulUsbDevice *)pvPddContext)->IOControl(source, dwCode, pbInBuf, cbInBuf, pbOutBuf,  cbOutBuf, pcbActualOutBuf);

  00014	e5d96000	 ldrb        r6, [r9]
  00018	e5d9e001	 ldrb        lr, [r9, #1]
  0001c	e5d94002	 ldrb        r4, [r9, #2]
  00020	e5d95003	 ldrb        r5, [r9, #3]
  00024	e186e40e	 orr         lr, r6, lr, lsl #8
  00028	e18ee804	 orr         lr, lr, r4, lsl #16
  0002c	e59d4038	 ldr         r4, [sp, #0x38]
  00030	e59d6030	 ldr         r6, [sp, #0x30]
  00034	e59d702c	 ldr         r7, [sp, #0x2C]
  00038	e18eec05	 orr         lr, lr, r5, lsl #24
  0003c	e59d5034	 ldr         r5, [sp, #0x34]
  00040	e59e8054	 ldr         r8, [lr, #0x54]
  00044	e1a00009	 mov         r0, r9
  00048	e58d5008	 str         r5, [sp, #8]
  0004c	e58d400c	 str         r4, [sp, #0xC]
  00050	e58d6004	 str         r6, [sp, #4]
  00054	e58d7000	 str         r7, [sp]
  00058	e1a0e00f	 mov         lr, pc
  0005c	e12fff18	 bx          r8
  00060		 |$LN1@UfnPdd_IOC|

; 1809 :     };
; 1810 :     return dwError;
; 1811 : }

  00060	e28dd010	 add         sp, sp, #0x10
  00064	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$M39139|

			 ENDP  ; |?UfnPdd_IOControl@@YAKPAXW4_IOCTL_SOURCE@@KPAEK2KPAK@Z|, UfnPdd_IOControl

	EXPORT	|UfnPdd_Init|
	IMPORT	|?CreateBulUsbDevice@@YAPAVBulUsbDevice@@PBG@Z| ; CreateBulUsbDevice

  00000			 AREA	 |.pdata|, PDATA
|$T39159| DCD	|$LN9@UfnPdd_Ini@3|
	DCD	0x40002301

  00000			 AREA	 |.rdata|, DATA, READONLY
|?sc_PddInterfaceInfo@?1??UfnPdd_Init@@9@4U_UFN_PDD_INTERFACE_INFO@@B| DCD 0x60000 ; `UfnPdd_Init'::`2'::sc_PddInterfaceInfo
	DCD	0x1
	DCD	0x18
	DCD	0x0
	DCD	|?UfnPdd_Deinit@@YAKPAX@Z|
	DCD	|?UfnPdd_IsConfigurationSupportable@@YAKPAXW4_UFN_BUS_SPEED@@PAU_UFN_CONFIGURATION@@@Z|
	DCD	|?UfnPdd_IsEndpointSupportable@@YAKPAXKW4_UFN_BUS_SPEED@@PAU_USB_ENDPOINT_DESCRIPTOR@@EEE@Z|
	DCD	|?UfnPdd_InitEndpoint@@YAKPAXKW4_UFN_BUS_SPEED@@PAU_USB_ENDPOINT_DESCRIPTOR@@0EEE@Z|
	DCD	|?UfnPdd_RegisterDevice@@YAKPAXPBU_USB_DEVICE_DESCRIPTOR@@PBU_UFN_CONFIGURATION@@PBU_USB_CONFIGURATION_DESCRIPTOR@@123PBU_UFN_STRING_SET@@K@Z|
	DCD	|?UfnPdd_DeregisterDevice@@YAKPAX@Z|
	DCD	|?UfnPdd_Start@@YAKPAX@Z|
	DCD	|?UfnPdd_Stop@@YAKPAX@Z|
	DCD	|?UfnPdd_IssueTransfer@@YAKPAXKPAU_STransfer@@@Z|
	DCD	|?UfnPdd_AbortTransfer@@YAKPAXKPAU_STransfer@@@Z|
	DCD	|?UfnPdd_DeinitEndpoint@@YAKPAXK@Z|
	DCD	|?UfnPdd_StallEndpoint@@YAKPAXK@Z|
	DCD	|?UfnPdd_ClearEndpointStall@@YAKPAXK@Z|
	DCD	|?UfnPdd_SendControlStatusHandshake@@YAKPAXK@Z|
	DCD	|?UfnPdd_SetAddress@@YAKPAXE@Z|
	DCD	|?UfnPdd_IsEndpointHalted@@YAKPAXKPAH@Z|
	DCD	|?UfnPdd_InitiateRemoteWakeup@@YAKPAX@Z|
	DCD	|?UfnPdd_PowerDown@@YAXPAX@Z|
	DCD	|?UfnPdd_PowerUp@@YAXPAX@Z|
	DCD	|?UfnPdd_IOControl@@YAKPAXW4_IOCTL_SOURCE@@KPAEK2KPAK@Z|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_Init| PROC

; 1824 : {

  00000		 |$LN9@UfnPdd_Ini@3|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M39156|
  00004	e1a06003	 mov         r6, r3
  00008	e1a07002	 mov         r7, r2
  0000c	e1a08001	 mov         r8, r1
  00010	e1a04000	 mov         r4, r0

; 1825 :     static const UFN_PDD_INTERFACE_INFO sc_PddInterfaceInfo = {
; 1826 :         UFN_PDD_INTERFACE_VERSION,
; 1827 :         UFN_PDD_CAPS_SUPPORTS_FULL_SPEED,
; 1828 :         MAX_ENDPOINT_NUMBER,
; 1829 :         NULL,
; 1830 :         
; 1831 :         &UfnPdd_Deinit,
; 1832 :         &UfnPdd_IsConfigurationSupportable,
; 1833 :         &UfnPdd_IsEndpointSupportable,
; 1834 :         &UfnPdd_InitEndpoint,
; 1835 :         &UfnPdd_RegisterDevice,
; 1836 :         &UfnPdd_DeregisterDevice,
; 1837 :         &UfnPdd_Start,
; 1838 :         &UfnPdd_Stop,
; 1839 :         &UfnPdd_IssueTransfer,
; 1840 :         &UfnPdd_AbortTransfer,
; 1841 :         &UfnPdd_DeinitEndpoint,
; 1842 :         &UfnPdd_StallEndpoint,
; 1843 :         &UfnPdd_ClearEndpointStall,
; 1844 :         &UfnPdd_SendControlStatusHandshake,
; 1845 :         &UfnPdd_SetAddress,
; 1846 :         &UfnPdd_IsEndpointHalted,
; 1847 :         &UfnPdd_InitiateRemoteWakeup,
; 1848 :         &UfnPdd_PowerDown,
; 1849 :         &UfnPdd_PowerUp,
; 1850 :         &UfnPdd_IOControl,
; 1851 :     };
; 1852 : 
; 1853 :     memcpy(pPddInterfaceInfo, &sc_PddInterfaceInfo, sizeof(sc_PddInterfaceInfo));

  00014	e59f106c	 ldr         r1, [pc, #0x6C]
  00018	e3a02060	 mov         r2, #0x60
  0001c	e1a00006	 mov         r0, r6
  00020	eb000000	 bl          memcpy

; 1854 :     
; 1855 :     BulUsbDevice * pDevice = CreateBulUsbDevice(pszActiveKey );

  00024	e1a00004	 mov         r0, r4
  00028	eb000000	 bl          |?CreateBulUsbDevice@@YAPAVBulUsbDevice@@PBG@Z|
  0002c	e1b05000	 movs        r5, r0

; 1856 :     if (pDevice && pDevice->Init( pvMddContext, pMddInterfaceInfo, pPddInterfaceInfo)==ERROR_SUCCESS) {

  00030	0a000011	 beq         |$LN5@UfnPdd_Ini@3|
  00034	e595e000	 ldr         lr, [r5]
  00038	e1a03006	 mov         r3, r6
  0003c	e1a02007	 mov         r2, r7
  00040	e59e4008	 ldr         r4, [lr, #8]
  00044	e1a01008	 mov         r1, r8
  00048	e1a00005	 mov         r0, r5
  0004c	e1a0e00f	 mov         lr, pc
  00050	e12fff14	 bx          r4
  00054	e3500000	 cmp         r0, #0

; 1857 :         return ERROR_SUCCESS;

  00058	03a00000	 moveq       r0, #0

; 1864 : }

  0005c	08bd41f0	 ldmeqia     sp!, {r4 - r8, lr}
  00060	012fff1e	 bxeq        lr

; 1858 :     }
; 1859 :     
; 1860 :     if (pDevice!=NULL)
; 1861 :         delete pDevice;

  00064	e5953000	 ldr         r3, [r5]
  00068	e3a01001	 mov         r1, #1
  0006c	e1a00005	 mov         r0, r5
  00070	e5933004	 ldr         r3, [r3, #4]
  00074	e1a0e00f	 mov         lr, pc
  00078	e12fff13	 bx          r3
  0007c		 |$LN5@UfnPdd_Ini@3|

; 1862 : 
; 1863 :     return ERROR_INVALID_PARAMETER;

  0007c	e3a00057	 mov         r0, #0x57

; 1864 : }

  00080	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00084	e12fff1e	 bx          lr
  00088		 |$LN10@UfnPdd_Ini@3|
  00088		 |$LN11@UfnPdd_Ini@3|
  00088	00000000	 DCD         |?sc_PddInterfaceInfo@?1??UfnPdd_Init@@9@4U_UFN_PDD_INTERFACE_INFO@@B|
  0008c		 |$M39157|

			 ENDP  ; |UfnPdd_Init|

	EXPORT	|UfnPdd_DllEntry|

  00000			 AREA	 |.pdata|, PDATA
|$T39170| DCD	|$LN5@UfnPdd_Dll|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_DllEntry| PROC

; 1874 : {

  00000		 |$LN5@UfnPdd_Dll|
  00000		 |$M39167|

; 1875 :     return TRUE; // Nothing to do.

  00000	e3a00001	 mov         r0, #1

; 1876 : }

  00004	e12fff1e	 bx          lr
  00008		 |$M39168|

			 ENDP  ; |UfnPdd_DllEntry|

	EXPORT	|??0?$CStaticContainer@VBulEndpoint@@$0BI@@@QAA@XZ| ; CStaticContainer<BulEndpoint,24>::CStaticContainer<BulEndpoint,24>
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T39186| DCD	|$LN12@CStaticCon|
	DCD	0x40001101
; Function compile flags: /Ogspy
; File c:\wince600\public\common\oak\inc\crefcon.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0?$CStaticContainer@VBulEndpoint@@$0BI@@@QAA@XZ| PROC ; CStaticContainer<BulEndpoint,24>::CStaticContainer<BulEndpoint,24>

; 64   :     CStaticContainer()

  00000		 |$LN12@CStaticCon|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M39183|
  00004	e1a04000	 mov         r4, r0
  00008	eb000000	 bl          InitializeCriticalSection

; 65   :     {
; 66   :         m_dwArraySize = dwNumArray;

  0000c	e3a03018	 mov         r3, #0x18
  00010	e5843074	 str         r3, [r4, #0x74]

; 67   :         for( DWORD dwIndex = 0; dwIndex < m_dwArraySize; dwIndex++ )

  00014	e3a02000	 mov         r2, #0
  00018	e1a01004	 mov         r1, r4
  0001c	e3a00000	 mov         r0, #0
  00020		 |$LL3@CStaticCon|

; 68   :         {
; 69   :             m_rgObjectArray[dwIndex] = NULL;

  00020	e5810014	 str         r0, [r1, #0x14]
  00024	e5943074	 ldr         r3, [r4, #0x74]
  00028	e2822001	 add         r2, r2, #1
  0002c	e2811004	 add         r1, r1, #4
  00030	e1520003	 cmp         r2, r3
  00034	3afffff9	 bcc         |$LL3@CStaticCon|

; 70   :         }
; 71   :     }

  00038	e1a00004	 mov         r0, r4
  0003c	e8bd4010	 ldmia       sp!, {r4, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M39184|

			 ENDP  ; |??0?$CStaticContainer@VBulEndpoint@@$0BI@@@QAA@XZ|, CStaticContainer<BulEndpoint,24>::CStaticContainer<BulEndpoint,24>

	EXPORT	|??1?$CStaticContainer@VBulEndpoint@@$0BI@@@QAA@XZ| ; CStaticContainer<BulEndpoint,24>::~CStaticContainer<BulEndpoint,24>
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T39211| DCD	|$LN19@CStaticCon@2|
	DCD	0x40001a01
; Function compile flags: /Ogspy
; File c:\wince600\public\common\oak\inc\crefcon.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1?$CStaticContainer@VBulEndpoint@@$0BI@@@QAA@XZ| PROC ; CStaticContainer<BulEndpoint,24>::~CStaticContainer<BulEndpoint,24>

; 73   :     {

  00000		 |$LN19@CStaticCon@2|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M39208|
  00004	e1a04000	 mov         r4, r0

; 74   :         Lock();

  00008	eb000000	 bl          EnterCriticalSection

; 75   :         for( DWORD dwIndex = 0; dwIndex < m_dwArraySize; dwIndex++ )

  0000c	e5943074	 ldr         r3, [r4, #0x74]
  00010	e3a06000	 mov         r6, #0
  00014	e3530000	 cmp         r3, #0
  00018	9a00000c	 bls         |$LN2@CStaticCon@2|

; 74   :         Lock();

  0001c	e1a05004	 mov         r5, r4
  00020		 |$LL4@CStaticCon@2|

; 76   :         {
; 77   :             if( m_rgObjectArray[dwIndex] != NULL )

  00020	e5953014	 ldr         r3, [r5, #0x14]
  00024	e1b00003	 movs        r0, r3

; 78   :             {
; 79   :                 delete m_rgObjectArray[dwIndex];

  00028	15903000	 ldrne       r3, [r0]
  0002c	13a01001	 movne       r1, #1
  00030	15933000	 ldrne       r3, [r3]
  00034	11a0e00f	 movne       lr, pc
  00038	112fff13	 bxne        r3
  0003c	e5943074	 ldr         r3, [r4, #0x74]
  00040	e2866001	 add         r6, r6, #1
  00044	e2855004	 add         r5, r5, #4
  00048	e1560003	 cmp         r6, r3
  0004c	3afffff3	 bcc         |$LL4@CStaticCon@2|
  00050		 |$LN2@CStaticCon@2|

; 80   :             }
; 81   :         };
; 82   :         Unlock();

  00050	e1a00004	 mov         r0, r4
  00054	eb000000	 bl          LeaveCriticalSection

; 83   :     }

  00058	e1a00004	 mov         r0, r4
  0005c	eb000000	 bl          DeleteCriticalSection
  00060	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$M39209|

			 ENDP  ; |??1?$CStaticContainer@VBulEndpoint@@$0BI@@@QAA@XZ|, CStaticContainer<BulEndpoint,24>::~CStaticContainer<BulEndpoint,24>

	EXPORT	|?InsertObject@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@KPAV2@@Z| ; CStaticContainer<BulEndpoint,24>::InsertObject
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T39235| DCD	|$LN17@InsertObje|
	DCD	0x40001901
; Function compile flags: /Ogspy
; File c:\wince600\public\common\oak\inc\crefcon.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InsertObject@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@KPAV2@@Z| PROC ; CStaticContainer<BulEndpoint,24>::InsertObject

; 85   :     {

  00000		 |$LN17@InsertObje|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M39232|
  00004	e1b05002	 movs        r5, r2
  00008	e1a07001	 mov         r7, r1
  0000c	e1a06000	 mov         r6, r0

; 86   :         if( pObject )

  00010	0a00000f	 beq         |$LN4@InsertObje|

; 87   :         {
; 88   :             Lock();

  00014	eb000000	 bl          EnterCriticalSection

; 89   :             T*  pReturn = NULL;
; 90   :             if( dwIndex < m_dwArraySize )

  00018	e5963074	 ldr         r3, [r6, #0x74]
  0001c	e3a04000	 mov         r4, #0
  00020	e1570003	 cmp         r7, r3
  00024	2a000007	 bcs         |$LN11@InsertObje|

; 91   :                 pReturn = ( ( m_rgObjectArray[dwIndex] != NULL ) ?
; 92   :                             NULL :
; 93   :                             ( m_rgObjectArray[dwIndex] = pObject ) );

  00028	e0862107	 add         r2, r6, r7, lsl #2
  0002c	e5923014	 ldr         r3, [r2, #0x14]
  00030	e3530000	 cmp         r3, #0
  00034	13a04000	 movne       r4, #0

; 94   :             if( pReturn )
; 95   :                 pReturn->AddRef();

  00038	02850004	 addeq       r0, r5, #4
  0003c	01a04005	 moveq       r4, r5
  00040	05825014	 streq       r5, [r2, #0x14]
  00044	0b000000	 bleq        InterlockedIncrement
  00048		 |$LN11@InsertObje|

; 96   :             Unlock();

  00048	e1a00006	 mov         r0, r6
  0004c	eb000000	 bl          LeaveCriticalSection

; 97   :             return pReturn;

  00050	ea000000	 b           |$LN1@InsertObje|
  00054		 |$LN4@InsertObje|

; 98   :         }
; 99   :         else
; 100  :         {
; 101  :             return NULL;

  00054	e3a04000	 mov         r4, #0
  00058		 |$LN1@InsertObje|

; 102  :         }
; 103  :     }

  00058	e1a00004	 mov         r0, r4
  0005c	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M39233|

			 ENDP  ; |?InsertObject@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@KPAV2@@Z|, CStaticContainer<BulEndpoint,24>::InsertObject

	EXPORT	|?ObjectIndex@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@K@Z| ; CStaticContainer<BulEndpoint,24>::ObjectIndex
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T39258| DCD	|$LN14@ObjectInde|
	DCD	0x40001101
; Function compile flags: /Ogspy
; File c:\wince600\public\common\oak\inc\crefcon.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ObjectIndex@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@K@Z| PROC ; CStaticContainer<BulEndpoint,24>::ObjectIndex

; 105  :     {

  00000		 |$LN14@ObjectInde|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M39255|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 106  :         Lock();

  0000c	eb000000	 bl          EnterCriticalSection

; 107  :         T*  pReturn = dwIndex <
; 108  :                       m_dwArraySize ?
; 109  :                       m_rgObjectArray[dwIndex] :
; 110  :                       NULL;

  00010	e5953074	 ldr         r3, [r5, #0x74]
  00014	e1540003	 cmp         r4, r3
  00018	30853104	 addcc       r3, r5, r4, lsl #2
  0001c	35934014	 ldrcc       r4, [r3, #0x14]
  00020	23a04000	 movcs       r4, #0

; 111  :         if( pReturn )

  00024	e3540000	 cmp         r4, #0

; 112  :         {
; 113  :             pReturn->AddRef();

  00028	12840004	 addne       r0, r4, #4
  0002c	1b000000	 blne        InterlockedIncrement

; 114  :         }
; 115  :         Unlock();

  00030	e1a00005	 mov         r0, r5
  00034	eb000000	 bl          LeaveCriticalSection

; 116  :         return pReturn;
; 117  :     }

  00038	e1a00004	 mov         r0, r4
  0003c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M39256|

			 ENDP  ; |?ObjectIndex@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@K@Z|, CStaticContainer<BulEndpoint,24>::ObjectIndex

	EXPORT	|?RemoveObjectBy@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@K@Z| ; CStaticContainer<BulEndpoint,24>::RemoveObjectBy
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T39276| DCD	|$LN11@RemoveObje|
	DCD	0x40001301
; Function compile flags: /Ogspy
; File c:\wince600\public\common\oak\inc\crefcon.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RemoveObjectBy@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@K@Z| PROC ; CStaticContainer<BulEndpoint,24>::RemoveObjectBy

; 119  :     {

  00000		 |$LN11@RemoveObje|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M39273|
  00004	e1a06001	 mov         r6, r1
  00008	e1a05000	 mov         r5, r0

; 120  :         Lock();

  0000c	eb000000	 bl          EnterCriticalSection

; 121  :         T*  pReturn = NULL;
; 122  :         if( dwIndex < m_dwArraySize )

  00010	e5953074	 ldr         r3, [r5, #0x74]
  00014	e3a04000	 mov         r4, #0

; 123  :         {
; 124  :             pReturn = m_rgObjectArray[dwIndex];
; 125  :             m_rgObjectArray[dwIndex] = NULL;
; 126  :         };
; 127  :         Unlock();

  00018	e1a00005	 mov         r0, r5
  0001c	e1560003	 cmp         r6, r3
  00020	30853106	 addcc       r3, r5, r6, lsl #2
  00024	35934014	 ldrcc       r4, [r3, #0x14]
  00028	33a02000	 movcc       r2, #0
  0002c	35832014	 strcc       r2, [r3, #0x14]
  00030	eb000000	 bl          LeaveCriticalSection

; 128  :         if( pReturn )

  00034	e3540000	 cmp         r4, #0

; 129  :         {
; 130  :             pReturn->DeRef();

  00038	11a00004	 movne       r0, r4
  0003c	1b000000	 blne        |?DeRef@CRefObject@@QAAKXZ|

; 131  :         }
; 132  :         return pReturn;
; 133  :     }

  00040	e1a00004	 mov         r0, r4
  00044	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$M39274|

			 ENDP  ; |?RemoveObjectBy@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@K@Z|, CStaticContainer<BulEndpoint,24>::RemoveObjectBy

	EXPORT	|?RawObjectIndex@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@K@Z| ; CStaticContainer<BulEndpoint,24>::RawObjectIndex

  00000			 AREA	 |.pdata|, PDATA
|$T39289| DCD	|$LN7@RawObjectI|
	DCD	0x40000600
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RawObjectIndex@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@K@Z| PROC ; CStaticContainer<BulEndpoint,24>::RawObjectIndex

; 199  :     {

  00000		 |$LN7@RawObjectI|
  00000		 |$M39286|

; 200  :         // This is only should be usded during suspend & resume.
; 201  :         return ( dwIndex < m_dwArraySize ? m_rgObjectArray[dwIndex] : NULL );

  00000	e5903074	 ldr         r3, [r0, #0x74]
  00004	e1510003	 cmp         r1, r3
  00008	30803101	 addcc       r3, r0, r1, lsl #2
  0000c	35930014	 ldrcc       r0, [r3, #0x14]
  00010	23a00000	 movcs       r0, #0

; 202  :     }

  00014	e12fff1e	 bx          lr
  00018		 |$M39287|

			 ENDP  ; |?RawObjectIndex@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@K@Z|, CStaticContainer<BulEndpoint,24>::RawObjectIndex

	EXPORT	|??0CMiniThread@@QAA@KH@Z|		; CMiniThread::CMiniThread
	EXPORT	|??_7CMiniThread@@6B@| [ DATA ]		; CMiniThread::`vftable'
	IMPORT	|CreateThread|
; File c:\wince600\public\common\oak\inc\cmthread.h

  00000			 AREA	 |.pdata|, PDATA
|$T39303| DCD	|$LN7@CMiniThrea|
	DCD	0x40001b02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CMiniThread@@6B@| DCD |_purecall|			; CMiniThread::`vftable'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CMiniThread@@QAA@KH@Z| PROC	; CMiniThread::CMiniThread

; 29   :     CMiniThread( DWORD dwStackSize = 0, BOOL bSuspended = FALSE )

  00000		 |$LN7@CMiniThrea|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M39300|
  00008	e1b06002	 movs        r6, r2
  0000c	e1a05000	 mov         r5, r0
  00010	e59f3050	 ldr         r3, [pc, #0x50]

; 30   :     {
; 31   :         m_bTerminated = FALSE;

  00014	e3a02000	 mov         r2, #0

; 32   :         m_dwExitCode = ( DWORD ) - 1;

  00018	e5852004	 str         r2, [r5, #4]

; 33   :         m_hThreadHandle = ::CreateThread( NULL,
; 34   :                                           dwStackSize,
; 35   :                                           CMiniThread::ThreadProc,
; 36   :                                           ( LPVOID )this,
; 37   :                                           bSuspended ? CREATE_SUSPENDED : 0,
; 38   :                                           &m_dwThreadId );

  0001c	e59f2040	 ldr         r2, [pc, #0x40]
  00020	e3e00000	 mvn         r0, #0
  00024	13a04004	 movne       r4, #4
  00028	e5853000	 str         r3, [r5]
  0002c	e5850014	 str         r0, [r5, #0x14]
  00030	03a04000	 moveq       r4, #0
  00034	e285e00c	 add         lr, r5, #0xC
  00038	e1a03005	 mov         r3, r5
  0003c	e3a00000	 mov         r0, #0
  00040	e58de004	 str         lr, [sp, #4]
  00044	e58d4000	 str         r4, [sp]
  00048	eb000000	 bl          CreateThread
  0004c	e5850008	 str         r0, [r5, #8]

; 39   :         m_bSuspendFlag = bSuspended;
; 40   :     };

  00050	e1a00005	 mov         r0, r5
  00054	e5856010	 str         r6, [r5, #0x10]
  00058	e28dd008	 add         sp, sp, #8
  0005c	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$LN8@CMiniThrea|
  00064		 |$LN9@CMiniThrea|
  00064	00000000	 DCD         |?ThreadProc@CMiniThread@@CAKPAX@Z|
  00068		 |$LN10@CMiniThrea|
  00068	00000000	 DCD         |??_7CMiniThread@@6B@|
  0006c		 |$M39301|

			 ENDP  ; |??0CMiniThread@@QAA@KH@Z|, CMiniThread::CMiniThread

	EXPORT	|??1CMiniThread@@QAA@XZ|		; CMiniThread::~CMiniThread

  00000			 AREA	 |.pdata|, PDATA
|$T39314| DCD	|$LN5@CMiniThrea@2|
	DCD	0x40000801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CMiniThread@@QAA@XZ| PROC		; CMiniThread::~CMiniThread

; 44   :     {

  00000		 |$LN5@CMiniThrea@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M39311|
  00004	e1a02000	 mov         r2, r0
  00008	e59f300c	 ldr         r3, [pc, #0xC]

; 45   :         ForceTerminated();

  0000c	e5823000	 str         r3, [r2]
  00010	eb000000	 bl          |?ForceTerminated@CMiniThread@@QAAHXZ|

; 46   :     }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$LN6@CMiniThrea@2|
  0001c		 |$LN7@CMiniThrea@2|
  0001c	00000000	 DCD         |??_7CMiniThread@@6B@|
  00020		 |$M39312|

			 ENDP  ; |??1CMiniThread@@QAA@XZ|, CMiniThread::~CMiniThread

	EXPORT	|?ThreadTerminated@CMiniThread@@QAAHK@Z| ; CMiniThread::ThreadTerminated

  00000			 AREA	 |.pdata|, PDATA
|$T39327| DCD	|$LN5@ThreadTerm|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ThreadTerminated@CMiniThread@@QAAHK@Z| PROC ; CMiniThread::ThreadTerminated

; 86   :     {

  00000		 |$LN5@ThreadTerm|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M39324|

; 87   :         m_bTerminated = TRUE;

  00004	e3a03001	 mov         r3, #1
  00008	e5803004	 str         r3, [r0, #4]

; 88   :         return WaitThreadComplete( dwMilliSeconds  );

  0000c	eb000000	 bl          |?WaitThreadComplete@CMiniThread@@QAAHK@Z|

; 89   :     }

  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M39325|

			 ENDP  ; |?ThreadTerminated@CMiniThread@@QAAHK@Z|, CMiniThread::ThreadTerminated

	EXPORT	|??1BulEndpoint@@UAA@XZ|		; BulEndpoint::~BulEndpoint
; File c:\wince600\public\common\oak\inc\crefcon.h

  00000			 AREA	 |.pdata|, PDATA
|$T39345| DCD	|$LN12@BulEndpoin@2|
	DCD	0x40001101
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul_usbfn.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1BulEndpoint@@UAA@XZ| PROC		; BulEndpoint::~BulEndpoint

; 268  :     virtual ~BulEndpoint() {

  00000		 |$LN12@BulEndpoin@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M39342|
  00004	e1a04000	 mov         r4, r0

; 269  :         if (m_pUsbDevice)

  00008	e594201c	 ldr         r2, [r4, #0x1C]
  0000c	e59f302c	 ldr         r3, [pc, #0x2C]
  00010	e1b00002	 movs        r0, r2

; 270  :             m_pUsbDevice->EnableEndpointInterrupt(m_dwEndpointIndex,FALSE);

  00014	15941020	 ldrne       r1, [r4, #0x20]
  00018	13a02000	 movne       r2, #0
  0001c	e5843000	 str         r3, [r4]
  00020	1b000000	 blne        |?EnableEndpointInterrupt@BulUsbDevice@@QAAHKH@Z|

; 271  :     }

  00024	e2840008	 add         r0, r4, #8
  00028	eb000000	 bl          DeleteCriticalSection
  0002c	e59f3008	 ldr         r3, [pc, #8]
  00030	e5843000	 str         r3, [r4]
  00034	e8bd4010	 ldmia       sp!, {r4, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$LN13@BulEndpoin@2|
  0003c		 |$LN14@BulEndpoin@2|
  0003c	00000000	 DCD         |??_7CRefObject@@6B@|
  00040		 |$LN15@BulEndpoin@2|
  00040	00000000	 DCD         |??_7BulEndpoint@@6B@|
  00044		 |$M39343|

			 ENDP  ; |??1BulEndpoint@@UAA@XZ|, BulEndpoint::~BulEndpoint


  00000			 AREA	 |.pdata|, PDATA
|$T39360| DCD	|$LN7@InitEndpoi|
	DCD	0x40001001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InitEndpoint@BulEndpoint@@UAAKW4_UFN_BUS_SPEED@@PAU_USB_ENDPOINT_DESCRIPTOR@@@Z| PROC ; BulEndpoint::InitEndpoint

; 339  :     virtual DWORD InitEndpoint(UFN_BUS_SPEED Speed,PUSB_ENDPOINT_DESCRIPTOR pEndpointDesc) {

  00000		 |$LN7@InitEndpoi|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M39357|
  00004	e1a04000	 mov         r4, r0

; 340  :         // We should Reset the EndPoint and clear FIFO
; 341  :         ResetEndpoint();

  00008	e5943000	 ldr         r3, [r4]
  0000c	e593301c	 ldr         r3, [r3, #0x1C]
  00010	e1a0e00f	 mov         lr, pc
  00014	e12fff13	 bx          r3

; 342  :         return (m_pUsbDevice->EnableEndpointInterrupt(m_dwEndpointIndex,TRUE)?ERROR_SUCCESS:ERROR_GEN_FAILURE);

  00018	e5941020	 ldr         r1, [r4, #0x20]
  0001c	e594001c	 ldr         r0, [r4, #0x1C]
  00020	e3a02001	 mov         r2, #1
  00024	eb000000	 bl          |?EnableEndpointInterrupt@BulUsbDevice@@QAAHKH@Z|
  00028	e3500000	 cmp         r0, #0
  0002c	13a00000	 movne       r0, #0

; 343  :     }

  00030	18bd4010	 ldmneia     sp!, {r4, lr}

; 342  :         return (m_pUsbDevice->EnableEndpointInterrupt(m_dwEndpointIndex,TRUE)?ERROR_SUCCESS:ERROR_GEN_FAILURE);

  00034	03a0001f	 moveq       r0, #0x1F

; 343  :     }

  00038	08bd4010	 ldmeqia     sp!, {r4, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$M39358|

			 ENDP  ; |?InitEndpoint@BulEndpoint@@UAAKW4_UFN_BUS_SPEED@@PAU_USB_ENDPOINT_DESCRIPTOR@@@Z|, BulEndpoint::InitEndpoint


  00000			 AREA	 |.pdata|, PDATA
|$T39372| DCD	|$LN7@DeinitEndp|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DeinitEndpoint@BulEndpoint@@UAAKXZ| PROC ; BulEndpoint::DeinitEndpoint

; 344  :     virtual DWORD DeinitEndpoint() {

  00000		 |$LN7@DeinitEndp|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M39369|

; 345  :         return (m_pUsbDevice->EnableEndpointInterrupt(m_dwEndpointIndex,FALSE)?ERROR_SUCCESS:ERROR_GEN_FAILURE);

  00004	e5901020	 ldr         r1, [r0, #0x20]
  00008	e590001c	 ldr         r0, [r0, #0x1C]
  0000c	e3a02000	 mov         r2, #0
  00010	eb000000	 bl          |?EnableEndpointInterrupt@BulUsbDevice@@QAAHKH@Z|
  00014	e3500000	 cmp         r0, #0
  00018	13a00000	 movne       r0, #0

; 346  :     }

  0001c	149de004	 ldrne       lr, [sp], #4

; 345  :         return (m_pUsbDevice->EnableEndpointInterrupt(m_dwEndpointIndex,FALSE)?ERROR_SUCCESS:ERROR_GEN_FAILURE);

  00020	03a0001f	 moveq       r0, #0x1F

; 346  :     }

  00024	049de004	 ldreq       lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$M39370|

			 ENDP  ; |?DeinitEndpoint@BulEndpoint@@UAAKXZ|, BulEndpoint::DeinitEndpoint


  00000			 AREA	 |.pdata|, PDATA
|$T39383| DCD	|$LN6@scalar@2|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GBulEndpoint@@UAAPAXI@Z| PROC	; BulEndpoint::`scalar deleting destructor'
  00000		 |$LN6@scalar@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M39380|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |??1BulEndpoint@@UAA@XZ|
  00010	e3140001	 tst         r4, #1
  00014	11a00005	 movne       r0, r5
  00018	1b000000	 blne        |??3@YAXPAX@Z|
  0001c	e1a00005	 mov         r0, r5
  00020	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M39381|

			 ENDP  ; |??_GBulEndpoint@@UAAPAXI@Z|, BulEndpoint::`scalar deleting destructor'

	EXPORT	|??0BulEndpointZero@@QAA@QAVBulUsbDevice@@H@Z| ; BulEndpointZero::BulEndpointZero
	EXPORT	|??_7BulEndpointZero@@6B@| [ DATA ]	; BulEndpointZero::`vftable'
	EXPORT	|?IssueTransfer@BulEndpointZero@@UAAKPAU_STransfer@@@Z| ; BulEndpointZero::IssueTransfer
	EXPORT	|?SendControlStatusHandshake@BulEndpointZero@@UAAKXZ| ; BulEndpointZero::SendControlStatusHandshake
	EXPORT	|?IST@BulEndpointZero@@UAAKK@Z|		; BulEndpointZero::IST
	IMPORT	|??_EBulEndpointZero@@UAAPAXI@Z|, WEAK |??_GBulEndpointZero@@UAAPAXI@Z| ; BulEndpointZero::`vector deleting destructor', BulEndpointZero::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T39395| DCD	|$LN5@BulEndpoin@3|
	DCD	0x40000f01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7BulEndpointZero@@6B@| DCD |??_EBulEndpointZero@@UAAPAXI@Z| ; BulEndpointZero::`vftable'
	DCD	|?Init@BulEndpointZero@@UAAHPAU_USB_ENDPOINT_DESCRIPTOR@@EEE@Z|
	DCD	|?ReInit@BulEndpointZero@@UAAHXZ|
	DCD	|?InitEndpoint@BulEndpoint@@UAAKW4_UFN_BUS_SPEED@@PAU_USB_ENDPOINT_DESCRIPTOR@@@Z|
	DCD	|?DeinitEndpoint@BulEndpoint@@UAAKXZ|
	DCD	|?StallEndpoint@BulEndpoint@@UAAKXZ|
	DCD	|?ClearEndpointStall@BulEndpoint@@UAAKXZ|
	DCD	|?ResetEndpoint@BulEndpointZero@@UAAKXZ|
	DCD	|?IsEndpointHalted@BulEndpoint@@UAAKPAH@Z|
	DCD	|?IssueTransfer@BulEndpointZero@@UAAKPAU_STransfer@@@Z|
	DCD	|?AbortTransfer@BulEndpoint@@UAAKPAU_STransfer@@@Z|
	DCD	|?SendControlStatusHandshake@BulEndpointZero@@UAAKXZ|
	DCD	|?IST@BulEndpointZero@@UAAKK@Z|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0BulEndpointZero@@QAA@QAVBulUsbDevice@@H@Z| PROC ; BulEndpointZero::BulEndpointZero

; 378  :     {

  00000		 |$LN5@BulEndpoin@3|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M39392|
  00004	e1a03002	 mov         r3, r2
  00008	e1a04000	 mov         r4, r0
  0000c	e3a02000	 mov         r2, #0
  00010	eb000000	 bl          |??0BulEndpoint@@QAA@QAVBulUsbDevice@@KH@Z|
  00014	e59f301c	 ldr         r3, [pc, #0x1C]

; 379  :         m_bNeedAck = FALSE;

  00018	e3a02000	 mov         r2, #0
  0001c	e5842040	 str         r2, [r4, #0x40]
  00020	e5843000	 str         r3, [r4]

; 380  :         m_bSetupDirIn = FALSE;

  00024	e5842044	 str         r2, [r4, #0x44]

; 381  :         m_fInIST = FALSE;

  00028	e5842048	 str         r2, [r4, #0x48]

; 382  :     }

  0002c	e1a00004	 mov         r0, r4
  00030	e8bd4010	 ldmia       sp!, {r4, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$LN6@BulEndpoin@3|
  00038		 |$LN7@BulEndpoin@3|
  00038	00000000	 DCD         |??_7BulEndpointZero@@6B@|
  0003c		 |$M39393|

			 ENDP  ; |??0BulEndpointZero@@QAA@QAVBulUsbDevice@@H@Z|, BulEndpointZero::BulEndpointZero

	EXPORT	|??1BulEndpointZero@@UAA@XZ|		; BulEndpointZero::~BulEndpointZero

  00000			 AREA	 |.pdata|, PDATA
|$T39405| DCD	|$LN5@BulEndpoin@4|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1BulEndpointZero@@UAA@XZ| PROC	; BulEndpointZero::~BulEndpointZero
  00000		 |$LN5@BulEndpoin@4|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M39402|
  00004	eb000000	 bl          |??1BulEndpoint@@UAA@XZ|
  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M39403|

			 ENDP  ; |??1BulEndpointZero@@UAA@XZ|, BulEndpointZero::~BulEndpointZero

	EXPORT	|??0BulEndpointIn@@QAA@QAVBulUsbDevice@@KH@Z| ; BulEndpointIn::BulEndpointIn
	EXPORT	|??_7BulEndpointIn@@6B@| [ DATA ]	; BulEndpointIn::`vftable'
	IMPORT	|??_EBulEndpointIn@@UAAPAXI@Z|, WEAK |??_GBulEndpointIn@@UAAPAXI@Z| ; BulEndpointIn::`vector deleting destructor', BulEndpointIn::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T39418| DCD	|$LN5@BulEndpoin@5|
	DCD	0x40000901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7BulEndpointIn@@6B@| DCD |??_EBulEndpointIn@@UAAPAXI@Z| ; BulEndpointIn::`vftable'
	DCD	|?Init@BulEndpoint@@UAAHPAU_USB_ENDPOINT_DESCRIPTOR@@EEE@Z|
	DCD	|?ReInit@BulEndpoint@@UAAHXZ|
	DCD	|?InitEndpoint@BulEndpoint@@UAAKW4_UFN_BUS_SPEED@@PAU_USB_ENDPOINT_DESCRIPTOR@@@Z|
	DCD	|?DeinitEndpoint@BulEndpoint@@UAAKXZ|
	DCD	|?StallEndpoint@BulEndpoint@@UAAKXZ|
	DCD	|?ClearEndpointStall@BulEndpoint@@UAAKXZ|
	DCD	|?ResetEndpoint@BulEndpoint@@UAAKXZ|
	DCD	|?IsEndpointHalted@BulEndpoint@@UAAKPAH@Z|
	DCD	|?IssueTransfer@BulEndpoint@@UAAKPAU_STransfer@@@Z|
	DCD	|?AbortTransfer@BulEndpoint@@UAAKPAU_STransfer@@@Z|
	DCD	|?SendControlStatusHandshake@BulEndpoint@@UAAKXZ|
	DCD	|?IST@BulEndpointIn@@UAAKK@Z|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0BulEndpointIn@@QAA@QAVBulUsbDevice@@KH@Z| PROC ; BulEndpointIn::BulEndpointIn

; 405  :     {;

  00000		 |$LN5@BulEndpoin@5|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M39415|
  00004	e1a04000	 mov         r4, r0
  00008	eb000000	 bl          |??0BulEndpoint@@QAA@QAVBulUsbDevice@@KH@Z|
  0000c	e59f300c	 ldr         r3, [pc, #0xC]

; 406  :     }

  00010	e1a00004	 mov         r0, r4
  00014	e5843000	 str         r3, [r4]
  00018	e8bd4010	 ldmia       sp!, {r4, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$LN6@BulEndpoin@5|
  00020		 |$LN7@BulEndpoin@5|
  00020	00000000	 DCD         |??_7BulEndpointIn@@6B@|
  00024		 |$M39416|

			 ENDP  ; |??0BulEndpointIn@@QAA@QAVBulUsbDevice@@KH@Z|, BulEndpointIn::BulEndpointIn

	EXPORT	|??1BulEndpointIn@@UAA@XZ|		; BulEndpointIn::~BulEndpointIn

  00000			 AREA	 |.pdata|, PDATA
|$T39428| DCD	|$LN5@BulEndpoin@6|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1BulEndpointIn@@UAA@XZ| PROC	; BulEndpointIn::~BulEndpointIn
  00000		 |$LN5@BulEndpoin@6|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M39425|
  00004	eb000000	 bl          |??1BulEndpoint@@UAA@XZ|
  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M39426|

			 ENDP  ; |??1BulEndpointIn@@UAA@XZ|, BulEndpointIn::~BulEndpointIn

	EXPORT	|??0BulEndpointOut@@QAA@QAVBulUsbDevice@@KH@Z| ; BulEndpointOut::BulEndpointOut
	EXPORT	|??_7BulEndpointOut@@6B@| [ DATA ]	; BulEndpointOut::`vftable'
	IMPORT	|??_EBulEndpointOut@@UAAPAXI@Z|, WEAK |??_GBulEndpointOut@@UAAPAXI@Z| ; BulEndpointOut::`vector deleting destructor', BulEndpointOut::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T39441| DCD	|$LN5@BulEndpoin@7|
	DCD	0x40000901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7BulEndpointOut@@6B@| DCD |??_EBulEndpointOut@@UAAPAXI@Z| ; BulEndpointOut::`vftable'
	DCD	|?Init@BulEndpoint@@UAAHPAU_USB_ENDPOINT_DESCRIPTOR@@EEE@Z|
	DCD	|?ReInit@BulEndpoint@@UAAHXZ|
	DCD	|?InitEndpoint@BulEndpoint@@UAAKW4_UFN_BUS_SPEED@@PAU_USB_ENDPOINT_DESCRIPTOR@@@Z|
	DCD	|?DeinitEndpoint@BulEndpoint@@UAAKXZ|
	DCD	|?StallEndpoint@BulEndpoint@@UAAKXZ|
	DCD	|?ClearEndpointStall@BulEndpoint@@UAAKXZ|
	DCD	|?ResetEndpoint@BulEndpoint@@UAAKXZ|
	DCD	|?IsEndpointHalted@BulEndpoint@@UAAKPAH@Z|
	DCD	|?IssueTransfer@BulEndpoint@@UAAKPAU_STransfer@@@Z|
	DCD	|?AbortTransfer@BulEndpoint@@UAAKPAU_STransfer@@@Z|
	DCD	|?SendControlStatusHandshake@BulEndpoint@@UAAKXZ|
	DCD	|?IST@BulEndpointOut@@UAAKK@Z|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0BulEndpointOut@@QAA@QAVBulUsbDevice@@KH@Z| PROC ; BulEndpointOut::BulEndpointOut

; 414  :     {;

  00000		 |$LN5@BulEndpoin@7|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M39438|
  00004	e1a04000	 mov         r4, r0
  00008	eb000000	 bl          |??0BulEndpoint@@QAA@QAVBulUsbDevice@@KH@Z|
  0000c	e59f300c	 ldr         r3, [pc, #0xC]

; 415  :     }

  00010	e1a00004	 mov         r0, r4
  00014	e5843000	 str         r3, [r4]
  00018	e8bd4010	 ldmia       sp!, {r4, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$LN6@BulEndpoin@7|
  00020		 |$LN7@BulEndpoin@7|
  00020	00000000	 DCD         |??_7BulEndpointOut@@6B@|
  00024		 |$M39439|

			 ENDP  ; |??0BulEndpointOut@@QAA@QAVBulUsbDevice@@KH@Z|, BulEndpointOut::BulEndpointOut

	EXPORT	|??1BulEndpointOut@@UAA@XZ|		; BulEndpointOut::~BulEndpointOut

  00000			 AREA	 |.pdata|, PDATA
|$T39451| DCD	|$LN5@BulEndpoin@8|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1BulEndpointOut@@UAA@XZ| PROC	; BulEndpointOut::~BulEndpointOut
  00000		 |$LN5@BulEndpoin@8|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M39448|
  00004	eb000000	 bl          |??1BulEndpoint@@UAA@XZ|
  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M39449|

			 ENDP  ; |??1BulEndpointOut@@UAA@XZ|, BulEndpointOut::~BulEndpointOut

; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T39475| DCD	|$LN20@IssueTrans|
	DCD	0x40003e01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IssueTransfer@BulEndpoint@@UAAKPAU_STransfer@@@Z| PROC ; BulEndpoint::IssueTransfer

; 157  : {

  00000		 |$LN20@IssueTrans|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M39472|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0

; 158  :     DWORD dwReturn = ERROR_SUCCESS;
; 159  :     SETFNAME();
; 160  :     FUNCTION_ENTER_MSG();
; 161  :     Lock();

  0000c	e2840008	 add         r0, r4, #8
  00010	e3a06000	 mov         r6, #0
  00014	eb000000	 bl          EnterCriticalSection

; 162  :     DEBUGMSG(ZONE_FUNCTION, (_T("ReadConfigurationRegister (%d) UDCCSR =0x%x"),m_dwEndpointIndex,ReadConfigurationRegister()));
; 163  :     
; 164  :     if (pTransfer!=NULL && m_pCurTransfer == NULL && (pTransfer->cbBuffer==0 || pTransfer->pvBuffer!=NULL) ) { // If it is valid.        

  00018	e3550000	 cmp         r5, #0
  0001c	0a00002f	 beq         |$LN5@IssueTrans|
  00020	e5943034	 ldr         r3, [r4, #0x34]
  00024	e3530000	 cmp         r3, #0
  00028	1a00002c	 bne         |$LN5@IssueTrans|
  0002c	e595300c	 ldr         r3, [r5, #0xC]
  00030	e3530000	 cmp         r3, #0
  00034	0a000002	 beq         |$LN4@IssueTrans|
  00038	e5953004	 ldr         r3, [r5, #4]
  0003c	e3530000	 cmp         r3, #0
  00040	0a000026	 beq         |$LN5@IssueTrans|
  00044		 |$LN4@IssueTrans|

; 165  :         if (((pTransfer->dwFlags & USB_IN_TRANSFER)!= 0 )== ((m_epDesc.bEndpointAddress & 0x80)!=0)) {

  00044	e5953000	 ldr         r3, [r5]
  00048	e3130080	 tst         r3, #0x80
  0004c	e5d43026	 ldrb        r3, [r4, #0x26]
  00050	13a02001	 movne       r2, #1
  00054	03a02000	 moveq       r2, #0
  00058	e3130080	 tst         r3, #0x80
  0005c	13a03001	 movne       r3, #1
  00060	03a03000	 moveq       r3, #0
  00064	e1520003	 cmp         r2, r3
  00068	1a00001a	 bne         |$LN3@IssueTrans|

; 166  :             pTransfer ->pvPddData = (PVOID)m_dwEndpointIndex;

  0006c	e5943020	 ldr         r3, [r4, #0x20]

; 167  :             m_pCurTransfer = pTransfer;
; 168  :             m_pCurTransfer->cbTransferred = 0;

  00070	e3a02000	 mov         r2, #0
  00074	e5853018	 str         r3, [r5, #0x18]
  00078	e5845034	 str         r5, [r4, #0x34]
  0007c	e5852010	 str         r2, [r5, #0x10]

; 169  :             m_pCurTransfer->pvPddData = (PVOID) m_dwEndpointIndex;

  00080	e5942034	 ldr         r2, [r4, #0x34]
  00084	e5943020	 ldr         r3, [r4, #0x20]
  00088	e5823018	 str         r3, [r2, #0x18]

; 170  :             m_fZeroPacket = (m_pCurTransfer->cbBuffer== 0 || m_pCurTransfer->pvBuffer== 0);

  0008c	e5942034	 ldr         r2, [r4, #0x34]

; 171  :             m_pUsbDevice->EnableEndpointInterrupt(m_dwEndpointIndex,TRUE);

  00090	e5941020	 ldr         r1, [r4, #0x20]
  00094	e594001c	 ldr         r0, [r4, #0x1C]
  00098	e592300c	 ldr         r3, [r2, #0xC]
  0009c	e3530000	 cmp         r3, #0
  000a0	15923004	 ldrne       r3, [r2, #4]
  000a4	e3a02001	 mov         r2, #1
  000a8	13530000	 cmpne       r3, #0
  000ac	13a03000	 movne       r3, #0
  000b0	03a03001	 moveq       r3, #1
  000b4	e5843038	 str         r3, [r4, #0x38]
  000b8	eb000000	 bl          |?EnableEndpointInterrupt@BulUsbDevice@@QAAHKH@Z|

; 172  :             // Trigger First IST.
; 173  :             IST(EPINT_PACKET_COMPLETE);

  000bc	e5943000	 ldr         r3, [r4]
  000c0	e3a01001	 mov         r1, #1
  000c4	e1a00004	 mov         r0, r4
  000c8	e5933030	 ldr         r3, [r3, #0x30]
  000cc	e1a0e00f	 mov         lr, pc
  000d0	e12fff13	 bx          r3

; 174  :         }
; 175  :         else 

  000d4	ea000002	 b           |$LN1@IssueTrans|
  000d8		 |$LN3@IssueTrans|

; 176  :             dwReturn = ERROR_INVALID_DATA;

  000d8	e3a0600d	 mov         r6, #0xD

; 177  :     }
; 178  :     else 

  000dc	ea000000	 b           |$LN1@IssueTrans|
  000e0		 |$LN5@IssueTrans|

; 179  :         dwReturn = ERROR_NOT_READY;

  000e0	e3a06015	 mov         r6, #0x15
  000e4		 |$LN1@IssueTrans|

; 180  :     Unlock();

  000e4	e2840008	 add         r0, r4, #8
  000e8	eb000000	 bl          LeaveCriticalSection

; 181  :     FUNCTION_LEAVE_MSG();
; 182  :     ASSERT(dwReturn == ERROR_SUCCESS);
; 183  :     return dwReturn ;
; 184  : }

  000ec	e1a00006	 mov         r0, r6
  000f0	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000f4	e12fff1e	 bx          lr
  000f8		 |$M39473|

			 ENDP  ; |?IssueTransfer@BulEndpoint@@UAAKPAU_STransfer@@@Z|, BulEndpoint::IssueTransfer

; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T39507| DCD	|$LN19@IssueTrans@2|
	DCD	0x40002f01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IssueTransfer@BulEndpointZero@@UAAKPAU_STransfer@@@Z| PROC ; BulEndpointZero::IssueTransfer

; 331  : {   

  00000		 |$LN19@IssueTrans@2|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M39504|
  00004	e1a06001	 mov         r6, r1
  00008	e1a04000	 mov         r4, r0

; 332  :     Lock();

  0000c	e2840008	 add         r0, r4, #8
  00010	eb000000	 bl          EnterCriticalSection

; 333  :     SETFNAME();
; 334  :     FUNCTION_ENTER_MSG();
; 335  :     DWORD dwReturn = ERROR_SUCCESS;

  00014	e3a05000	 mov         r5, #0

; 336  :     if (pTransfer!=NULL && pTransfer->pvBuffer!=NULL && m_pCurTransfer == NULL) { // If it is valid.                

  00018	e3560000	 cmp         r6, #0
  0001c	0a000020	 beq         |$LN4@IssueTrans@2|
  00020	e5963004	 ldr         r3, [r6, #4]
  00024	e3530000	 cmp         r3, #0
  00028	0a00001d	 beq         |$LN4@IssueTrans@2|
  0002c	e5943034	 ldr         r3, [r4, #0x34]
  00030	e3530000	 cmp         r3, #0
  00034	1a00001a	 bne         |$LN4@IssueTrans@2|

; 337  :         m_pCurTransfer = pTransfer;
; 338  :         m_pCurTransfer->cbTransferred = 0;

  00038	e3a07000	 mov         r7, #0
  0003c	e5846034	 str         r6, [r4, #0x34]
  00040	e5867010	 str         r7, [r6, #0x10]

; 339  :         m_pCurTransfer->pvPddData = (PVOID) m_dwEndpointIndex;

  00044	e5942034	 ldr         r2, [r4, #0x34]
  00048	e5943020	 ldr         r3, [r4, #0x20]
  0004c	e5823018	 str         r3, [r2, #0x18]

; 340  :         
; 341  :         UDCCSR udccsr;
; 342  :         udccsr.ulValue = ReadControlStatusRegister();

  00050	e594301c	 ldr         r3, [r4, #0x1C]
  00054	e5941020	 ldr         r1, [r4, #0x20]
  00058	e5932098	 ldr         r2, [r3, #0x98]
  0005c	e2813040	 add         r3, r1, #0x40
  00060	e0820103	 add         r0, r2, r3, lsl #2
  00064	eb000000	 bl          READ_REGISTER_ULONG

; 343  :         udccsr.ep0bit.FST = 0; //
; 344  :         m_pCurTransfer->cbTransferred = 0;

  00068	e5943034	 ldr         r3, [r4, #0x34]
  0006c	e5837010	 str         r7, [r3, #0x10]

; 345  :         m_fZeroPacket = (m_pCurTransfer->cbBuffer== 0 || m_pCurTransfer->pvBuffer== 0);

  00070	e5942034	 ldr         r2, [r4, #0x34]

; 346  : 
; 347  :         if (dwReturn == ERROR_SUCCESS) {
; 348  :             m_pUsbDevice->EnableEndpointInterrupt(m_dwEndpointIndex,TRUE);

  00074	e5941020	 ldr         r1, [r4, #0x20]
  00078	e594001c	 ldr         r0, [r4, #0x1C]
  0007c	e592300c	 ldr         r3, [r2, #0xC]
  00080	e3530000	 cmp         r3, #0
  00084	15923004	 ldrne       r3, [r2, #4]
  00088	e3a02001	 mov         r2, #1
  0008c	13530000	 cmpne       r3, #0
  00090	13a03000	 movne       r3, #0
  00094	03a03001	 moveq       r3, #1
  00098	e5843038	 str         r3, [r4, #0x38]
  0009c	eb000000	 bl          |?EnableEndpointInterrupt@BulUsbDevice@@QAAHKH@Z|

; 349  :         }
; 350  :         else {
; 351  :             // We no long handle this because of return error.
; 352  :             m_pCurTransfer = NULL;
; 353  :         }
; 354  :     }
; 355  :     else 

  000a0	ea000000	 b           |$LN1@IssueTrans@2|
  000a4		 |$LN4@IssueTrans@2|

; 356  :         dwReturn = ERROR_INVALID_DATA;

  000a4	e3a0500d	 mov         r5, #0xD
  000a8		 |$LN1@IssueTrans@2|

; 357  :     FUNCTION_LEAVE_MSG();
; 358  :     Unlock();

  000a8	e2840008	 add         r0, r4, #8
  000ac	eb000000	 bl          LeaveCriticalSection

; 359  :     return dwReturn;
; 360  : }

  000b0	e1a00005	 mov         r0, r5
  000b4	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000b8	e12fff1e	 bx          lr
  000bc		 |$M39505|

			 ENDP  ; |?IssueTransfer@BulEndpointZero@@UAAKPAU_STransfer@@@Z|, BulEndpointZero::IssueTransfer

; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T39559| DCD	|$LN30@SendContro@2|
	DCD	0x40005601
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SendControlStatusHandshake@BulEndpointZero@@UAAKXZ| PROC ; BulEndpointZero::SendControlStatusHandshake

; 362  : {

  00000		 |$LN30@SendContro@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M39556|
  00004	e1a04000	 mov         r4, r0

; 363  :     Lock();

  00008	e2840008	 add         r0, r4, #8
  0000c	eb000000	 bl          EnterCriticalSection

; 364  :     SETFNAME();
; 365  :     DWORD dwReturn = ERROR_SUCCESS ;
; 366  :     if (m_pCurTransfer == NULL && m_bNeedAck) { // No Transfer.

  00010	e5943034	 ldr         r3, [r4, #0x34]
  00014	e3530000	 cmp         r3, #0
  00018	1a000049	 bne         |$LN2@SendContro@2|
  0001c	e5943040	 ldr         r3, [r4, #0x40]
  00020	e3530000	 cmp         r3, #0
  00024	0a000046	 beq         |$LN2@SendContro@2|

; 367  :         m_pUsbDevice->EnableEndpointInterrupt(m_dwEndpointIndex,TRUE);

  00028	e5941020	 ldr         r1, [r4, #0x20]
  0002c	e594001c	 ldr         r0, [r4, #0x1C]
  00030	e3a02001	 mov         r2, #1
  00034	eb000000	 bl          |?EnableEndpointInterrupt@BulUsbDevice@@QAAHKH@Z|

; 368  :         if (!m_bSetupDirIn) {

  00038	e5943044	 ldr         r3, [r4, #0x44]
  0003c	e3530000	 cmp         r3, #0
  00040	1a00000d	 bne         |$LN20@SendContro@2|

; 369  :             UDCCSR udccsr;
; 370  :             udccsr.ulValue = ReadControlStatusRegister();

  00044	e594301c	 ldr         r3, [r4, #0x1C]
  00048	e5941020	 ldr         r1, [r4, #0x20]
  0004c	e5932098	 ldr         r2, [r3, #0x98]
  00050	e2813040	 add         r3, r1, #0x40
  00054	e0820103	 add         r0, r2, r3, lsl #2
  00058	eb000000	 bl          READ_REGISTER_ULONG

; 371  :             udccsr.ep0bit.SA = 0 ;
; 372  :             udccsr.ep0bit.FST = 0; //
; 373  :             udccsr.ep0bit.SST = 0;
; 374  :             udccsr.ep0bit.IPR = 1; // Sent Zero Packet.
; 375  :             udccsr.ep0bit.OPC = 0;
; 376  :             WriteControlStatusRegister(udccsr.ulValue);

  0005c	e594301c	 ldr         r3, [r4, #0x1C]
  00060	e594e020	 ldr         lr, [r4, #0x20]
  00064	e3c020b1	 bic         r2, r0, #0xB1
  00068	e5931098	 ldr         r1, [r3, #0x98]
  0006c	e28e3040	 add         r3, lr, #0x40
  00070	e0810103	 add         r0, r1, r3, lsl #2
  00074	e3821002	 orr         r1, r2, #2
  00078	eb000000	 bl          WRITE_REGISTER_ULONG
  0007c		 |$LN20@SendContro@2|

; 377  :         }
; 378  :         m_bNeedAck = FALSE;
; 379  :         if (m_fBackedudr) {

  0007c	e594305c	 ldr         r3, [r4, #0x5C]
  00080	e3a0e000	 mov         lr, #0
  00084	e584e040	 str         lr, [r4, #0x40]
  00088	e3530000	 cmp         r3, #0
  0008c	0a000021	 beq         |$LN5@SendContro@2|

; 380  :             m_bNeedAck = TRUE;
; 381  :             m_bSetupDirIn = ((m_backup_udr.bmRequestType & USB_REQUEST_DEVICE_TO_HOST)!=0?TRUE:FALSE);

  00090	e5d4304c	 ldrb        r3, [r4, #0x4C]
  00094	e3a02001	 mov         r2, #1
  00098	e5842040	 str         r2, [r4, #0x40]
  0009c	e3130080	 tst         r3, #0x80
  000a0	13a03001	 movne       r3, #1
  000a4	03a03000	 moveq       r3, #0

; 382  :             m_fZeroPacket = FALSE;
; 383  :             m_fBackedudr = FALSE;
; 384  :             m_cur_udr = m_backup_udr ;

  000a8	e2840054	 add         r0, r4, #0x54
  000ac	e284104c	 add         r1, r4, #0x4C
  000b0	e3a02008	 mov         r2, #8
  000b4	e5843044	 str         r3, [r4, #0x44]
  000b8	e584e038	 str         lr, [r4, #0x38]
  000bc	e584e05c	 str         lr, [r4, #0x5C]
  000c0	eb000000	 bl          memcpy

; 385  :             m_pUsbDevice->DeviceNotification(UFN_MSG_SETUP_PACKET, (DWORD) &m_backup_udr);

  000c4	e594201c	 ldr         r2, [r4, #0x1C]
  000c8	e59230b4	 ldr         r3, [r2, #0xB4]
  000cc	e1b00003	 movs        r0, r3
  000d0	0a000005	 beq         |$LN23@SendContro@2|
  000d4	e59230c0	 ldr         r3, [r2, #0xC0]
  000d8	e284204c	 add         r2, r4, #0x4C
  000dc	e3a01004	 mov         r1, #4
  000e0	e1a0e00f	 mov         lr, pc
  000e4	e12fff13	 bx          r3
  000e8	ea000000	 b           |$LN22@SendContro@2|
  000ec		 |$LN23@SendContro@2|
  000ec	e6000010	 __debugbreak_ce
  000f0		 |$LN22@SendContro@2|

; 386  :             if (!m_fInIST) {

  000f0	e5943048	 ldr         r3, [r4, #0x48]
  000f4	e3530000	 cmp         r3, #0
  000f8	1a000011	 bne         |$LN2@SendContro@2|

; 387  :                 IST(EPINT_PACKET_COMPLETE);

  000fc	e5943000	 ldr         r3, [r4]
  00100	e3a01001	 mov         r1, #1
  00104	e1a00004	 mov         r0, r4
  00108	e5933030	 ldr         r3, [r3, #0x30]
  0010c	e1a0e00f	 mov         lr, pc
  00110	e12fff13	 bx          r3

; 388  :             }
; 389  :         }

  00114	ea00000a	 b           |$LN2@SendContro@2|
  00118		 |$LN5@SendContro@2|

; 390  :         else if (m_bSetupDirIn && !m_fInIST )

  00118	e5943044	 ldr         r3, [r4, #0x44]
  0011c	e3530000	 cmp         r3, #0
  00120	0a000007	 beq         |$LN2@SendContro@2|
  00124	e5943048	 ldr         r3, [r4, #0x48]
  00128	e3530000	 cmp         r3, #0

; 391  :             IST(EPINT_PACKET_COMPLETE);

  0012c	05943000	 ldreq       r3, [r4]
  00130	03a01001	 moveq       r1, #1
  00134	01a00004	 moveq       r0, r4
  00138	05933030	 ldreq       r3, [r3, #0x30]
  0013c	01a0e00f	 moveq       lr, pc
  00140	012fff13	 bxeq        r3
  00144		 |$LN2@SendContro@2|

; 392  :         DEBUGMSG(ZONE_TRANSFER, (_T("%s Complete\r\n"),pszFname));
; 393  :     }
; 394  :     else
; 395  :         DEBUGMSG(ZONE_TRANSFER, (_T("%s Skipped\r\n"),pszFname));
; 396  :     Unlock();

  00144	e2840008	 add         r0, r4, #8
  00148	eb000000	 bl          LeaveCriticalSection

; 397  :     return ERROR_SUCCESS;

  0014c	e3a00000	 mov         r0, #0

; 398  : }

  00150	e8bd4010	 ldmia       sp!, {r4, lr}
  00154	e12fff1e	 bx          lr
  00158		 |$M39557|

			 ENDP  ; |?SendControlStatusHandshake@BulEndpointZero@@UAAKXZ|, BulEndpointZero::SendControlStatusHandshake

	EXPORT	|??_C@_1GM@LAGLGKNJ@?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AAZ?$AAe?$AAr?$AAo?$AA?5?$AAF?$AAA?$AAI?$AAL?$AAE?$AAD?$AA?5?$AAS?$AAE?$AAT?$AAU?$AAP?$AA?5?$AA?5?$AAu?$AAd?$AAc?$AAc@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T39808| DCD	|$LN134@IST@3|
	DCD	0x40013802

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@LAGLGKNJ@?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AAZ?$AAe?$AAr?$AAo?$AA?5?$AAF?$AAA?$AAI?$AAL?$AAE?$AAD?$AA?5?$AAS?$AAE?$AAT?$AAU?$AAP?$AA?5?$AA?5?$AAu?$AAd?$AAc?$AAc@| DCB "E"
	DCB	0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, " ", 0x0, "Z", 0x0, "e", 0x0, "r", 0x0, "o"
	DCB	0x0, " ", 0x0, "F", 0x0, "A", 0x0, "I", 0x0, "L", 0x0, "E"
	DCB	0x0, "D", 0x0, " ", 0x0, "S", 0x0, "E", 0x0, "T", 0x0, "U"
	DCB	0x0, "P", 0x0, " ", 0x0, " ", 0x0, "u", 0x0, "d", 0x0, "c"
	DCB	0x0, "c", 0x0, "s", 0x0, "r", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, ".", 0x0, " ", 0x0, "S", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, " ", 0x0, "S", 0x0, "T", 0x0, "A"
	DCB	0x0, "L", 0x0, "L", 0x0, " ", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IST@BulEndpointZero@@UAAKK@Z| PROC	; BulEndpointZero::IST

; 400  : {

  00000		 |$LN134@IST@3|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M39805|
  00008	e1a08001	 mov         r8, r1
  0000c	e1a04000	 mov         r4, r0

; 401  :     Lock();

  00010	e2840008	 add         r0, r4, #8
  00014	eb000000	 bl          EnterCriticalSection

; 402  :     BOOL bContinue = TRUE;
; 403  :     m_fInIST = TRUE;
; 404  :     SETFNAME();
; 405  :     FUNCTION_ENTER_MSG();
; 406  :     if ((dwIRBit & EPINT_FIFO_ERROR)!=0) { // FIFO Error. End

  00018	e3180002	 tst         r8, #2

; 407  :         DWORD dwUdccsr;
; 408  :         dwUdccsr = ReadControlStatusRegister();

  0001c	1594301c	 ldrne       r3, [r4, #0x1C]
  00020	1594e020	 ldrne       lr, [r4, #0x20]
  00024	e3a06001	 mov         r6, #1
  00028	e5846048	 str         r6, [r4, #0x48]
  0002c	15932098	 ldrne       r2, [r3, #0x98]
  00030	128e3040	 addne       r3, lr, #0x40
  00034	10820103	 addne       r0, r2, r3, lsl #2
  00038	1b000000	 blne        READ_REGISTER_ULONG
  0003c	e3a03c03	 mov         r3, #3, 24
  00040	e38390ff	 orr         r9, r3, #0xFF
  00044	e3a03c01	 mov         r3, #1, 24
  00048	e383a001	 orr         r10, r3, #1
  0004c	e3a0b000	 mov         r11, #0
  00050		 |$LL24@IST@3|

; 409  :         DEBUGMSG(ZONE_TRANSFER, (_T("FIFO Error on Endpoint Zero UDCCSR=0x%x"),dwUdccsr));
; 410  :     };
; 411  :     while (bContinue && (dwIRBit & EPINT_PACKET_COMPLETE)!=0) {

  00050	e3180001	 tst         r8, #1
  00054	0a000119	 beq         |$LN23@IST@3|

; 412  :         bContinue = FALSE;
; 413  :         m_fStalled = FALSE; // Endpoint Zero is auto clear stall condition.
; 414  :         UDCCSR udccsr;
; 415  :         udccsr.ulValue = ReadControlStatusRegister();

  00058	e594301c	 ldr         r3, [r4, #0x1C]
  0005c	e5941020	 ldr         r1, [r4, #0x20]
  00060	e584b03c	 str         r11, [r4, #0x3C]
  00064	e5932098	 ldr         r2, [r3, #0x98]
  00068	e2813040	 add         r3, r1, #0x40
  0006c	e3a07000	 mov         r7, #0
  00070	e0820103	 add         r0, r2, r3, lsl #2
  00074	eb000000	 bl          READ_REGISTER_ULONG

; 416  :         DEBUGMSG(ZONE_TRANSFER, (_T("Endpoint Zero ReadControlStatusRegister()=0x%x\n"),udccsr.ulValue));
; 417  :         udccsr.ep0bit.FST = 0;

  00078	e3c05020	 bic         r5, r0, #0x20

; 418  :         if (udccsr.ep0bit.SA !=0 && udccsr.ep0bit.OPC==0) {

  0007c	e3150080	 tst         r5, #0x80
  00080	0a000007	 beq         |$LN22@IST@3|
  00084	e3150001	 tst         r5, #1
  00088	1a000005	 bne         |$LN22@IST@3|

; 419  :             m_pUsbDevice->IncBadSetupCounter();

  0008c	e594001c	 ldr         r0, [r4, #0x1C]
  00090	eb000000	 bl          |?IncBadSetupCounter@BulUsbDevice@@QAAXXZ|

; 420  :             RETAILMSG(1, (_T("Endpoint Zero FAILED SETUP  udccsr=0x%x. Sent STALL \n"),udccsr.ulValue));

  00094	e59f0440	 ldr         r0, [pc, #0x440]
  00098	e1a01005	 mov         r1, r5
  0009c	eb000000	 bl          NKDbgPrintfW

; 421  :             udccsr.ep0bit.FST = 1;

  000a0	e3855020	 orr         r5, r5, #0x20
  000a4		 |$LN22@IST@3|

; 422  :         }
; 423  :         if (udccsr.ep0bit.OPC) {

  000a4	e3150001	 tst         r5, #1
  000a8	0a00009e	 beq         |$LN8@IST@3|

; 424  :             if ( udccsr.ep0bit.SA ) { // This is setup Packet.

  000ac	e3150080	 tst         r5, #0x80
  000b0	0a00004b	 beq         |$LN20@IST@3|

; 425  :                 if (m_pCurTransfer) { // Outstanding transfer.

  000b4	e5943034	 ldr         r3, [r4, #0x34]
  000b8	e3530000	 cmp         r3, #0
  000bc	0a000019	 beq         |$LN64@IST@3|

; 426  :                     //DebugBreak();
; 427  :                     DEBUGMSG(ZONE_TRANSFER, (_T("Endpoint Zero Current Transfer Canceled\n")));
; 428  :                     WriteControlStatusRegister( udccsr.ulValue);

  000c0	e594301c	 ldr         r3, [r4, #0x1C]
  000c4	e5940020	 ldr         r0, [r4, #0x20]
  000c8	e1a01005	 mov         r1, r5
  000cc	e5932098	 ldr         r2, [r3, #0x98]
  000d0	e2803040	 add         r3, r0, #0x40
  000d4	e0820103	 add         r0, r2, r3, lsl #2
  000d8	eb000000	 bl          WRITE_REGISTER_ULONG

; 429  :                     PSTransfer pTransfer = CompleteTransfer( UFN_CANCELED_ERROR );

  000dc	e5943034	 ldr         r3, [r4, #0x34]

; 430  :                     Unlock();

  000e0	e2840008	 add         r0, r4, #8
  000e4	e1b06003	 movs        r6, r3
  000e8	1586a014	 strne       r10, [r6, #0x14]
  000ec	1584b034	 strne       r11, [r4, #0x34]
  000f0	03a06000	 moveq       r6, #0
  000f4	eb000000	 bl          LeaveCriticalSection

; 431  :                     m_pUsbDevice->MddTransferComplete(pTransfer);

  000f8	e594201c	 ldr         r2, [r4, #0x1C]
  000fc	e59230b4	 ldr         r3, [r2, #0xB4]
  00100	e1b00003	 movs        r0, r3
  00104	13560000	 cmpne       r6, #0
  00108	159230c0	 ldrne       r3, [r2, #0xC0]
  0010c	11a02006	 movne       r2, r6
  00110	13a01064	 movne       r1, #0x64
  00114	11a0e00f	 movne       lr, pc
  00118	112fff13	 bxne        r3

; 432  :                     Lock();

  0011c	e2840008	 add         r0, r4, #8
  00120	eb000000	 bl          EnterCriticalSection
  00124	e3a06001	 mov         r6, #1
  00128		 |$LN64@IST@3|

; 433  :                 }
; 434  :                 ASSERT(ReadByteCountRegister() == sizeof (USB_DEVICE_REQUEST));
; 435  :                 union {
; 436  :                     USB_DEVICE_REQUEST udr;
; 437  :                     DWORD dw8Byte[2];
; 438  :                 };
; 439  :                 dw8Byte[0] = ReadDataRegister();

  00128	e594301c	 ldr         r3, [r4, #0x1C]
  0012c	e5941020	 ldr         r1, [r4, #0x20]
  00130	e5932098	 ldr         r2, [r3, #0x98]
  00134	e28130c0	 add         r3, r1, #0xC0
  00138	e0820103	 add         r0, r2, r3, lsl #2
  0013c	eb000000	 bl          READ_REGISTER_ULONG

; 440  :                 dw8Byte[1] = ReadDataRegister();

  00140	e594201c	 ldr         r2, [r4, #0x1C]
  00144	e5943020	 ldr         r3, [r4, #0x20]
  00148	e58d0000	 str         r0, [sp]
  0014c	e5922098	 ldr         r2, [r2, #0x98]
  00150	e28330c0	 add         r3, r3, #0xC0
  00154	e0820103	 add         r0, r2, r3, lsl #2
  00158	eb000000	 bl          READ_REGISTER_ULONG

; 441  :                 DEBUGMSG(ZONE_TRANSFER, (_T("Endpoint Zero Setup bmRequestType = 0xx%x, bRequest=0x%x, wValue=0x%x,wIndex=0x%x,wLength=0x%x\n"),
; 442  :                     udr.bmRequestType,udr.bRequest,udr.wValue,udr.wIndex,udr.wLength));
; 443  :                 
; 444  :                 if (m_bNeedAck) { // Previous setup haven't ack yet. Disable Interrupt and wait for the Ack.

  0015c	e5943040	 ldr         r3, [r4, #0x40]
  00160	e58d0004	 str         r0, [sp, #4]
  00164	e3530000	 cmp         r3, #0
  00168	1a0000c4	 bne         |$LN130@IST@3|

; 450  :                    continue;
; 451  :                 }
; 452  :                 else {
; 453  :                     m_bNeedAck = TRUE;
; 454  :                     m_bSetupDirIn = ((udr.bmRequestType & USB_REQUEST_DEVICE_TO_HOST)!=0?TRUE:FALSE);

  0016c	e5dd3000	 ldrb        r3, [sp]

; 455  :                     bContinue = TRUE ;
; 456  :                     m_fZeroPacket = FALSE;
; 457  :                     m_cur_udr = udr ;

  00170	e2840054	 add         r0, r4, #0x54
  00174	e28d1000	 add         r1, sp, #0
  00178	e3130080	 tst         r3, #0x80
  0017c	13a03001	 movne       r3, #1
  00180	03a03000	 moveq       r3, #0
  00184	e3a02008	 mov         r2, #8
  00188	e5843044	 str         r3, [r4, #0x44]
  0018c	e5846040	 str         r6, [r4, #0x40]
  00190	e584b038	 str         r11, [r4, #0x38]
  00194	eb000000	 bl          memcpy

; 458  :                     WriteControlStatusRegister( udccsr.ulValue);

  00198	e594301c	 ldr         r3, [r4, #0x1C]
  0019c	e5940020	 ldr         r0, [r4, #0x20]
  001a0	e1a01005	 mov         r1, r5
  001a4	e5932098	 ldr         r2, [r3, #0x98]
  001a8	e2803040	 add         r3, r0, #0x40
  001ac	e0820103	 add         r0, r2, r3, lsl #2
  001b0	eb000000	 bl          WRITE_REGISTER_ULONG

; 459  :                     m_pUsbDevice->DeviceNotification(UFN_MSG_SETUP_PACKET, (DWORD) &udr);

  001b4	e594201c	 ldr         r2, [r4, #0x1C]
  001b8	e59230b4	 ldr         r3, [r2, #0xB4]
  001bc	e1b00003	 movs        r0, r3
  001c0	0a000005	 beq         |$LN83@IST@3|
  001c4	e59230c0	 ldr         r3, [r2, #0xC0]
  001c8	e28d2000	 add         r2, sp, #0
  001cc	e3a01004	 mov         r1, #4
  001d0	e1a0e00f	 mov         lr, pc
  001d4	e12fff13	 bx          r3
  001d8	eaffff9c	 b           |$LL24@IST@3|
  001dc		 |$LN83@IST@3|
  001dc	e6000010	 __debugbreak_ce

; 460  :                 }

  001e0	eaffff9a	 b           |$LL24@IST@3|
  001e4		 |$LN20@IST@3|

; 461  :                 continue;
; 462  :             }
; 463  :             else if ( ReadByteCountRegister() == 0 ) { // ACK from Host.

  001e4	e594301c	 ldr         r3, [r4, #0x1C]
  001e8	e5941020	 ldr         r1, [r4, #0x20]
  001ec	e5932098	 ldr         r2, [r3, #0x98]
  001f0	e2813080	 add         r3, r1, #0x80
  001f4	e0820103	 add         r0, r2, r3, lsl #2
  001f8	eb000000	 bl          READ_REGISTER_ULONG
  001fc	e1100009	 tst         r0, r9

; 464  :                 bContinue = TRUE; 

  00200	03a07001	 moveq       r7, #1
  00204	0a000047	 beq         |$LN8@IST@3|

; 465  :             }
; 466  :             else if (m_pCurTransfer ) {

  00208	e5943034	 ldr         r3, [r4, #0x34]
  0020c	e3530000	 cmp         r3, #0
  00210	0a000043	 beq         |$LN13@IST@3|

; 467  :                 if((m_pCurTransfer->dwFlags & USB_IN_TRANSFER)==0) { // Out Data.

  00214	e5933000	 ldr         r3, [r3]
  00218	e3130080	 tst         r3, #0x80
  0021c	1a00003e	 bne         |$LN12@IST@3|

; 468  :                     BOOL bComplete =  (ReadByteCountRegister()<m_epDesc.wMaxPacketSize);

  00220	e594301c	 ldr         r3, [r4, #0x1C]
  00224	e5941020	 ldr         r1, [r4, #0x20]
  00228	e5932098	 ldr         r2, [r3, #0x98]
  0022c	e2813080	 add         r3, r1, #0x80
  00230	e0820103	 add         r0, r2, r3, lsl #2
  00234	eb000000	 bl          READ_REGISTER_ULONG
  00238	e5d41028	 ldrb        r1, [r4, #0x28]
  0023c	e5d43029	 ldrb        r3, [r4, #0x29]
  00240	e0002009	 and         r2, r0, r9

; 469  :                     DWORD dwSize = (m_pCurTransfer->cbTransferred< m_pCurTransfer->cbBuffer? m_pCurTransfer->cbBuffer-m_pCurTransfer->cbTransferred: 0);

  00244	e5940034	 ldr         r0, [r4, #0x34]
  00248	e1813403	 orr         r3, r1, r3, lsl #8
  0024c	e1520003	 cmp         r2, r3
  00250	e590300c	 ldr         r3, [r0, #0xC]
  00254	e5901010	 ldr         r1, [r0, #0x10]
  00258	33a06001	 movcc       r6, #1
  0025c	23a06000	 movcs       r6, #0
  00260	e1510003	 cmp         r1, r3
  00264	30432001	 subcc       r2, r3, r1
  00268	23a02000	 movcs       r2, #0

; 470  :                     if (dwSize!=0) {

  0026c	e3520000	 cmp         r2, #0
  00270	0a000007	 beq         |$LN11@IST@3|

; 471  :                         dwSize= ReceiveData((PBYTE)m_pCurTransfer->pvBuffer + m_pCurTransfer->cbTransferred , dwSize);

  00274	e5903004	 ldr         r3, [r0, #4]
  00278	e1a00004	 mov         r0, r4
  0027c	e0811003	 add         r1, r1, r3
  00280	eb000000	 bl          |?ReceiveData@BulEndpoint@@IAAKPAEK@Z|

; 472  :                         m_pCurTransfer->cbTransferred += dwSize;

  00284	e5942034	 ldr         r2, [r4, #0x34]
  00288	e5923010	 ldr         r3, [r2, #0x10]
  0028c	e0833000	 add         r3, r3, r0
  00290	e5823010	 str         r3, [r2, #0x10]
  00294		 |$LN11@IST@3|

; 473  :                     }
; 474  : 
; 475  :                     bComplete = (bComplete || (m_pCurTransfer->cbTransferred>= m_pCurTransfer->cbBuffer));

  00294	e3560000	 cmp         r6, #0
  00298	1a000004	 bne         |$LN36@IST@3|
  0029c	e5943034	 ldr         r3, [r4, #0x34]
  002a0	e5932010	 ldr         r2, [r3, #0x10]
  002a4	e593300c	 ldr         r3, [r3, #0xC]
  002a8	e1520003	 cmp         r2, r3
  002ac	3a00001d	 bcc         |$LN8@IST@3|
  002b0		 |$LN36@IST@3|

; 476  :                     // Check for the completeion.
; 477  :                     if ( bComplete ) {
; 478  :                         WriteControlStatusRegister( udccsr.ulValue);

  002b0	e594301c	 ldr         r3, [r4, #0x1C]
  002b4	e5940020	 ldr         r0, [r4, #0x20]
  002b8	e1a01005	 mov         r1, r5
  002bc	e5932098	 ldr         r2, [r3, #0x98]
  002c0	e2803040	 add         r3, r0, #0x40
  002c4	e0820103	 add         r0, r2, r3, lsl #2
  002c8	eb000000	 bl          WRITE_REGISTER_ULONG

; 479  :                         PSTransfer pTransfer =CompleteTransfer(UFN_NO_ERROR);

  002cc	e5943034	 ldr         r3, [r4, #0x34]

; 480  :                         bContinue = TRUE;
; 481  :                         Unlock();

  002d0	e2840008	 add         r0, r4, #8
  002d4	e1b05003	 movs        r5, r3
  002d8	1585b014	 strne       r11, [r5, #0x14]
  002dc	1584b034	 strne       r11, [r4, #0x34]
  002e0	03a05000	 moveq       r5, #0
  002e4	eb000000	 bl          LeaveCriticalSection

; 482  :                         m_pUsbDevice->MddTransferComplete(pTransfer);

  002e8	e594201c	 ldr         r2, [r4, #0x1C]
  002ec	e59230b4	 ldr         r3, [r2, #0xB4]
  002f0	e1b00003	 movs        r0, r3
  002f4	13550000	 cmpne       r5, #0
  002f8	159230c0	 ldrne       r3, [r2, #0xC0]
  002fc	11a02005	 movne       r2, r5
  00300	13a01064	 movne       r1, #0x64
  00304	11a0e00f	 movne       lr, pc
  00308	112fff13	 bxne        r3

; 483  :                         Lock();

  0030c	e2840008	 add         r0, r4, #8
  00310	eb000000	 bl          EnterCriticalSection

; 484  :                         continue;

  00314	e3a06001	 mov         r6, #1
  00318	eaffff4c	 b           |$LL24@IST@3|
  0031c		 |$LN12@IST@3|

; 485  :                     }
; 486  :                 }
; 487  :                 else { // Error
; 488  :                     udccsr.ep0bit.FST = 1;

  0031c	e3855020	 orr         r5, r5, #0x20

; 489  :                 }
; 490  :             }
; 491  :             else { // Transfer Not queue yet. 

  00320	ea000000	 b           |$LN8@IST@3|
  00324		 |$LN13@IST@3|

; 492  :                 //m_pUsbDevice->EnableEndpointInterrupt(m_dwEndpointIndex,FALSE);
; 493  :                 // Do not clean OPC
; 494  :                 udccsr.ep0bit.OPC = 0;

  00324	e3c55001	 bic         r5, r5, #1
  00328		 |$LN8@IST@3|

; 495  :             }
; 496  : 
; 497  :         }
; 498  :         
; 499  :         if (udccsr.ep0bit.IPR==0 ) {

  00328	e3150002	 tst         r5, #2
  0032c	1a00002b	 bne         |$LN7@IST@3|

; 500  :         // Because the Ep0 is half duplex. We assume the direction is correct.
; 501  :             if (m_pCurTransfer && (m_pCurTransfer->dwFlags & USB_IN_TRANSFER)!=0 &&
; 502  :                     m_pCurTransfer->cbTransferred <= m_pCurTransfer->cbBuffer) {

  00330	e5943034	 ldr         r3, [r4, #0x34]
  00334	e1b01003	 movs        r1, r3
  00338	0a000029	 beq         |$LN3@IST@3|
  0033c	e5913000	 ldr         r3, [r1]
  00340	e3130080	 tst         r3, #0x80
  00344	0a000026	 beq         |$LN3@IST@3|
  00348	e591e010	 ldr         lr, [r1, #0x10]
  0034c	e591000c	 ldr         r0, [r1, #0xC]
  00350	e15e0000	 cmp         lr, r0
  00354	8a000022	 bhi         |$LN3@IST@3|

; 503  :                 DWORD dwTotalData = m_pCurTransfer->cbBuffer - m_pCurTransfer->cbTransferred ;
; 504  :                 dwTotalData = min (dwTotalData,m_epDesc.wMaxPacketSize) ;

  00358	e5d42028	 ldrb        r2, [r4, #0x28]
  0035c	e5d43029	 ldrb        r3, [r4, #0x29]
  00360	e040600e	 sub         r6, r0, lr

; 505  :                 // Spec 12.5.5
; 506  :                 DWORD dwReturn = XmitData(((PBYTE)m_pCurTransfer->pvBuffer)+ m_pCurTransfer->cbTransferred, dwTotalData );

  00364	e1a00004	 mov         r0, r4
  00368	e1823403	 orr         r3, r2, r3, lsl #8
  0036c	e1560003	 cmp         r6, r3
  00370	21a06003	 movcs       r6, r3
  00374	e5913004	 ldr         r3, [r1, #4]
  00378	e1a02006	 mov         r2, r6
  0037c	e08e1003	 add         r1, lr, r3
  00380	eb000000	 bl          |?XmitData@BulEndpoint@@IAAKPAEK@Z|

; 507  :                 ASSERT(dwReturn == dwTotalData);
; 508  :                 m_pCurTransfer->cbTransferred += dwReturn;

  00384	e5942034	 ldr         r2, [r4, #0x34]
  00388	e5923010	 ldr         r3, [r2, #0x10]
  0038c	e0833000	 add         r3, r3, r0
  00390	e5823010	 str         r3, [r2, #0x10]

; 509  :                 if (dwTotalData< m_epDesc.wMaxPacketSize) {

  00394	e5d42028	 ldrb        r2, [r4, #0x28]
  00398	e5d43029	 ldrb        r3, [r4, #0x29]
  0039c	e1823403	 orr         r3, r2, r3, lsl #8
  003a0	e1560003	 cmp         r6, r3

; 510  :                     udccsr.ep0bit.IPR = 1;

  003a4	33855002	 orrcc       r5, r5, #2

; 511  :                     m_fZeroPacket = FALSE;

  003a8	3584b038	 strcc       r11, [r4, #0x38]
  003ac	3a00000c	 bcc         |$LN3@IST@3|

; 512  :                 }
; 513  :                 else 
; 514  :                     m_fZeroPacket = (m_cur_udr.wLength > m_pCurTransfer->cbTransferred);

  003b0	e5942034	 ldr         r2, [r4, #0x34]
  003b4	e5d4105a	 ldrb        r1, [r4, #0x5A]
  003b8	e5d4305b	 ldrb        r3, [r4, #0x5B]
  003bc	e5922010	 ldr         r2, [r2, #0x10]
  003c0	e1813403	 orr         r3, r1, r3, lsl #8
  003c4	e1530002	 cmp         r3, r2
  003c8	83a03001	 movhi       r3, #1
  003cc	85843038	 strhi       r3, [r4, #0x38]
  003d0	8a000003	 bhi         |$LN3@IST@3|
  003d4	e3a03000	 mov         r3, #0
  003d8	e5843038	 str         r3, [r4, #0x38]

; 515  :             }
; 516  :         }
; 517  :         else 

  003dc	ea000000	 b           |$LN3@IST@3|
  003e0		 |$LN7@IST@3|

; 518  :             udccsr.ep0bit.IPR = 0 ; // Do not set when there is packet.

  003e0	e3c55002	 bic         r5, r5, #2
  003e4		 |$LN3@IST@3|

; 519  :             
; 520  :         if (udccsr.ep0bit.SST) { // Stall happens.

  003e4	e3150010	 tst         r5, #0x10

; 521  :             m_pUsbDevice->IncEp0StallCounter() ;

  003e8	1594001c	 ldrne       r0, [r4, #0x1C]
  003ec	1b000000	 blne        |?IncEp0StallCounter@BulUsbDevice@@QAAXXZ|

; 522  :             DEBUGMSG(ZONE_TRANSFER, (_T("Stall Sent on Zero endpoint =0x%x"),m_dwEndpointIndex));
; 523  :         }
; 524  :         // Clean the status.
; 525  :         WriteControlStatusRegister( udccsr.ulValue);

  003f0	e594301c	 ldr         r3, [r4, #0x1C]
  003f4	e5940020	 ldr         r0, [r4, #0x20]
  003f8	e1a01005	 mov         r1, r5
  003fc	e5932098	 ldr         r2, [r3, #0x98]
  00400	e2803040	 add         r3, r0, #0x40
  00404	e0820103	 add         r0, r2, r3, lsl #2
  00408	eb000000	 bl          WRITE_REGISTER_ULONG

; 526  :         if (m_pCurTransfer &&m_pCurTransfer->cbTransferred >= m_pCurTransfer->cbBuffer && !m_fZeroPacket ) {// Complete anyway

  0040c	e5943034	 ldr         r3, [r4, #0x34]
  00410	e1b05003	 movs        r5, r3
  00414	0a000015	 beq         |$LN120@IST@3|
  00418	e5951010	 ldr         r1, [r5, #0x10]
  0041c	e595300c	 ldr         r3, [r5, #0xC]
  00420	e1510003	 cmp         r1, r3
  00424	3a000011	 bcc         |$LN120@IST@3|
  00428	e5943038	 ldr         r3, [r4, #0x38]
  0042c	e3530000	 cmp         r3, #0
  00430	1a00000e	 bne         |$LN120@IST@3|

; 527  :             PSTransfer pTransfer = CompleteTransfer(UFN_NO_ERROR);

  00434	e585b014	 str         r11, [r5, #0x14]

; 528  :             Unlock();

  00438	e2840008	 add         r0, r4, #8
  0043c	e584b034	 str         r11, [r4, #0x34]
  00440	eb000000	 bl          LeaveCriticalSection

; 529  :             m_pUsbDevice->MddTransferComplete(pTransfer);

  00444	e594201c	 ldr         r2, [r4, #0x1C]
  00448	e59230b4	 ldr         r3, [r2, #0xB4]
  0044c	e1b00003	 movs        r0, r3
  00450	13550000	 cmpne       r5, #0
  00454	159230c0	 ldrne       r3, [r2, #0xC0]
  00458	11a02005	 movne       r2, r5
  0045c	13a01064	 movne       r1, #0x64
  00460	11a0e00f	 movne       lr, pc
  00464	112fff13	 bxne        r3

; 530  :             Lock();            

  00468	e2840008	 add         r0, r4, #8
  0046c	eb000000	 bl          EnterCriticalSection
  00470		 |$LN120@IST@3|

; 409  :         DEBUGMSG(ZONE_TRANSFER, (_T("FIFO Error on Endpoint Zero UDCCSR=0x%x"),dwUdccsr));
; 410  :     };
; 411  :     while (bContinue && (dwIRBit & EPINT_PACKET_COMPLETE)!=0) {

  00470	e3570000	 cmp         r7, #0
  00474	0a000011	 beq         |$LN23@IST@3|

; 484  :                         continue;

  00478	e3a06001	 mov         r6, #1
  0047c	eafffef3	 b           |$LL24@IST@3|
  00480		 |$LN130@IST@3|

; 445  :                     m_pUsbDevice->EnableEndpointInterrupt(m_dwEndpointIndex,FALSE);

  00480	e5941020	 ldr         r1, [r4, #0x20]
  00484	e594001c	 ldr         r0, [r4, #0x1C]
  00488	e3a02000	 mov         r2, #0
  0048c	eb000000	 bl          |?EnableEndpointInterrupt@BulUsbDevice@@QAAHKH@Z|

; 446  :                     DEBUGMSG(ZONE_TRANSFER, (_T("Endpoint Zero Disable Interrupt")));
; 447  :                     m_fBackedudr = TRUE;
; 448  :                     m_backup_udr = udr;

  00490	e284004c	 add         r0, r4, #0x4C
  00494	e28d1000	 add         r1, sp, #0
  00498	e3a02008	 mov         r2, #8
  0049c	e584605c	 str         r6, [r4, #0x5C]
  004a0	eb000000	 bl          memcpy

; 449  :                     WriteControlStatusRegister( udccsr.ulValue);

  004a4	e594301c	 ldr         r3, [r4, #0x1C]
  004a8	e5940020	 ldr         r0, [r4, #0x20]
  004ac	e1a01005	 mov         r1, r5
  004b0	e5932098	 ldr         r2, [r3, #0x98]
  004b4	e2803040	 add         r3, r0, #0x40
  004b8	e0820103	 add         r0, r2, r3, lsl #2
  004bc	eb000000	 bl          WRITE_REGISTER_ULONG
  004c0		 |$LN23@IST@3|

; 531  :         }
; 532  :         
; 533  :     }
; 534  :     m_fInIST = FALSE;
; 535  :     Unlock();

  004c0	e2840008	 add         r0, r4, #8
  004c4	e584b048	 str         r11, [r4, #0x48]
  004c8	eb000000	 bl          LeaveCriticalSection

; 536  :     FUNCTION_LEAVE_MSG();
; 537  :     return ERROR_SUCCESS;

  004cc	e3a00000	 mov         r0, #0

; 538  : }

  004d0	e28dd008	 add         sp, sp, #8
  004d4	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  004d8	e12fff1e	 bx          lr
  004dc		 |$LN135@IST@3|
  004dc		 |$LN136@IST@3|
  004dc	00000000	 DCD         |??_C@_1GM@LAGLGKNJ@?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AAZ?$AAe?$AAr?$AAo?$AA?5?$AAF?$AAA?$AAI?$AAL?$AAE?$AAD?$AA?5?$AAS?$AAE?$AAT?$AAU?$AAP?$AA?5?$AA?5?$AAu?$AAd?$AAc?$AAc@|
  004e0		 |$M39806|

			 ENDP  ; |?IST@BulEndpointZero@@UAAKK@Z|, BulEndpointZero::IST

	EXPORT	|??0CEndpointContainer@@QAA@XZ|		; CEndpointContainer::CEndpointContainer

  00000			 AREA	 |.pdata|, PDATA
|$T39820| DCD	|$LN5@CEndpointC|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CEndpointContainer@@QAA@XZ| PROC	; CEndpointContainer::CEndpointContainer
  00000		 |$LN5@CEndpointC|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M39817|
  00004	e1a04000	 mov         r4, r0
  00008	eb000000	 bl          |??0?$CStaticContainer@VBulEndpoint@@$0BI@@@QAA@XZ|
  0000c	e1a00004	 mov         r0, r4
  00010	e8bd4010	 ldmia       sp!, {r4, lr}
  00014	e12fff1e	 bx          lr
  00018		 |$M39818|

			 ENDP  ; |??0CEndpointContainer@@QAA@XZ|, CEndpointContainer::CEndpointContainer

	EXPORT	|??1CEndpointContainer@@QAA@XZ|		; CEndpointContainer::~CEndpointContainer

  00000			 AREA	 |.pdata|, PDATA
|$T39828| DCD	|$LN5@CEndpointC@2|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CEndpointContainer@@QAA@XZ| PROC	; CEndpointContainer::~CEndpointContainer
  00000		 |$LN5@CEndpointC@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M39825|
  00004	eb000000	 bl          |??1?$CStaticContainer@VBulEndpoint@@$0BI@@@QAA@XZ|
  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M39826|

			 ENDP  ; |??1CEndpointContainer@@QAA@XZ|, CEndpointContainer::~CEndpointContainer

	EXPORT	|?ReInit@BulUsbDevice@@IAAHXZ|		; BulUsbDevice::ReInit
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T39860| DCD	|$LN25@ReInit@3|
	DCD	0x40002f01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ReInit@BulUsbDevice@@IAAHXZ| PROC	; BulUsbDevice::ReInit

; 878  : {

  00000		 |$LN25@ReInit@3|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M39857|
  00004	e1a06000	 mov         r6, r0

; 879  :     Lock();

  00008	e2865018	 add         r5, r6, #0x18
  0000c	e1a00005	 mov         r0, r5
  00010	eb000000	 bl          EnterCriticalSection

; 880  :     HardwareInit();

  00014	e1a00006	 mov         r0, r6
  00018	eb000000	 bl          |?HardwareInit@BulUsbDevice@@IAAHXZ|

; 881  :     for (DWORD dwIndex=0; dwIndex<MAX_ENDPOINT_NUMBER; dwIndex++) {

  0001c	e3a04000	 mov         r4, #0
  00020		 |$LL8@ReInit@3|

; 882  :         BulEndpoint *pEndpoint = ObjectIndex(dwIndex);

  00020	e1a01004	 mov         r1, r4
  00024	e1a00005	 mov         r0, r5
  00028	eb000000	 bl          |?ObjectIndex@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@K@Z|
  0002c	e1b07000	 movs        r7, r0

; 883  :         if (pEndpoint!=NULL)  {

  00030	0a000006	 beq         |$LN7@ReInit@3|

; 884  :             pEndpoint->ReInit();

  00034	e5973000	 ldr         r3, [r7]
  00038	e1a00007	 mov         r0, r7
  0003c	e5933008	 ldr         r3, [r3, #8]
  00040	e1a0e00f	 mov         lr, pc
  00044	e12fff13	 bx          r3

; 885  :             pEndpoint->DeRef();

  00048	e1a00007	 mov         r0, r7
  0004c	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00050		 |$LN7@ReInit@3|
  00050	e2844001	 add         r4, r4, #1
  00054	e3540018	 cmp         r4, #0x18
  00058	3afffff0	 bcc         |$LL8@ReInit@3|

; 886  :         }
; 887  :     }
; 888  :         
; 889  :     //PVOID pvMddContext = m_pvMddContext;
; 890  :     //m_pvMddContext = NULL;
; 891  :     Start();

  0005c	e5963000	 ldr         r3, [r6]
  00060	e1a00006	 mov         r0, r6
  00064	e5933038	 ldr         r3, [r3, #0x38]
  00068	e1a0e00f	 mov         lr, pc
  0006c	e12fff13	 bx          r3

; 892  :     
; 893  :     for (dwIndex=0; dwIndex<MAX_ENDPOINT_NUMBER; dwIndex++) {

  00070	e3a04000	 mov         r4, #0
  00074		 |$LL4@ReInit@3|

; 894  :         if ( RawObjectIndex(dwIndex)!=NULL) {

  00074	e5953074	 ldr         r3, [r5, #0x74]
  00078	e1540003	 cmp         r4, r3
  0007c	30853104	 addcc       r3, r5, r4, lsl #2
  00080	35933014	 ldrcc       r3, [r3, #0x14]
  00084	23a03000	 movcs       r3, #0
  00088	e3530000	 cmp         r3, #0

; 895  :             EnableEndpointInterrupt(dwIndex, TRUE);

  0008c	13a02001	 movne       r2, #1
  00090	11a01004	 movne       r1, r4
  00094	11a00006	 movne       r0, r6
  00098	1b000000	 blne        |?EnableEndpointInterrupt@BulUsbDevice@@QAAHKH@Z|
  0009c	e2844001	 add         r4, r4, #1
  000a0	e3540018	 cmp         r4, #0x18
  000a4	bafffff2	 blt         |$LL4@ReInit@3|

; 896  :         }
; 897  :     }
; 898  :     
; 899  :     Unlock();

  000a8	e1a00005	 mov         r0, r5
  000ac	eb000000	 bl          LeaveCriticalSection

; 900  :     return FALSE;

  000b0	e3a00000	 mov         r0, #0

; 901  : }

  000b4	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000b8	e12fff1e	 bx          lr
  000bc		 |$M39858|

			 ENDP  ; |?ReInit@BulUsbDevice@@IAAHXZ|, BulUsbDevice::ReInit

	EXPORT	|?DeleteAllEndpoint@BulUsbDevice@@UAAHXZ| ; BulUsbDevice::DeleteAllEndpoint

  00000			 AREA	 |.pdata|, PDATA
|$T39873| DCD	|$LN10@DeleteAllE|
	DCD	0x40000c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DeleteAllEndpoint@BulUsbDevice@@UAAHXZ| PROC ; BulUsbDevice::DeleteAllEndpoint

; 903  : {

  00000		 |$LN10@DeleteAllE|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M39870|
  00004	e1a05000	 mov         r5, r0

; 904  :     for (DWORD dwIndex=0; dwIndex<MAX_ENDPOINT_NUMBER; dwIndex++)

  00008	e3a04000	 mov         r4, #0
  0000c		 |$LL3@DeleteAllE|

; 905  :         RemoveObjectBy( dwIndex );

  0000c	e1a01004	 mov         r1, r4
  00010	e2850018	 add         r0, r5, #0x18
  00014	eb000000	 bl          |?RemoveObjectBy@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@K@Z|
  00018	e2844001	 add         r4, r4, #1
  0001c	e3540018	 cmp         r4, #0x18
  00020	3afffff9	 bcc         |$LL3@DeleteAllE|

; 906  :     return TRUE;

  00024	e3a00001	 mov         r0, #1

; 907  : }

  00028	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M39871|

			 ENDP  ; |?DeleteAllEndpoint@BulUsbDevice@@UAAHXZ|, BulUsbDevice::DeleteAllEndpoint

	EXPORT	|?IsEndpointSupportable@BulUsbDevice@@UAAKKW4_UFN_BUS_SPEED@@PAU_USB_ENDPOINT_DESCRIPTOR@@EEE@Z| ; BulUsbDevice::IsEndpointSupportable
	IMPORT	|??2@YAPAXI@Z|				; operator new
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T39932| DCD	|$LN36@IsEndpoint@2|
	DCD	0x40006802
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsEndpointSupportable@BulUsbDevice@@UAAKKW4_UFN_BUS_SPEED@@PAU_USB_ENDPOINT_DESCRIPTOR@@EEE@Z| PROC ; BulUsbDevice::IsEndpointSupportable

; 961  : {

  00000		 |$LN36@IsEndpoint@2|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M39929|
  00008	e1a09003	 mov         r9, r3
  0000c	e1a04002	 mov         r4, r2
  00010	e1a07001	 mov         r7, r1
  00014	e1a05000	 mov         r5, r0

; 962  :     DWORD dwError = ERROR_INVALID_PARAMETER;
; 963  :     SETFNAME();
; 964  :     DEBUGMSG(ZONE_FUNCTION, (_T("%s Enter. dwEndpoint:0x%x,Speed:0x%x --\r\n"), pszFname,dwEndpoint,Speed));
; 965  :     Lock();

  00018	e2858018	 add         r8, r5, #0x18
  0001c	e1a00008	 mov         r0, r8
  00020	e3a0a057	 mov         r10, #0x57
  00024	eb000000	 bl          EnterCriticalSection

; 966  :     if ((Speed & BS_FULL_SPEED)==BS_FULL_SPEED &&  pEndpointDesc  &&
; 967  :             dwEndpoint < MAX_ENDPOINT_NUMBER && RawObjectIndex(dwEndpoint)==0 ) {

  00028	e2042001	 and         r2, r4, #1
  0002c	e3520001	 cmp         r2, #1
  00030	1a000051	 bne         |$LN17@IsEndpoint@2|
  00034	e3590000	 cmp         r9, #0
  00038	0a00004f	 beq         |$LN17@IsEndpoint@2|
  0003c	e3570018	 cmp         r7, #0x18
  00040	2a00004d	 bcs         |$LN17@IsEndpoint@2|
  00044	e5982074	 ldr         r2, [r8, #0x74]
  00048	e1570002	 cmp         r7, r2
  0004c	30882107	 addcc       r2, r8, r7, lsl #2
  00050	35922014	 ldrcc       r2, [r2, #0x14]
  00054	23a02000	 movcs       r2, #0
  00058	e3520000	 cmp         r2, #0
  0005c	1a000046	 bne         |$LN17@IsEndpoint@2|

; 968  :         BulEndpoint *pEndpoint = NULL;
; 969  :         if (dwEndpoint == 0 ) // Endpoint Zero.

  00060	e3570000	 cmp         r7, #0
  00064	1a00000f	 bne         |$LN7@IsEndpoint@2|

; 970  :              pEndpoint = new BulEndpointZero(this,m_fDoubleBuffer);

  00068	e3a00060	 mov         r0, #0x60
  0006c	eb000000	 bl          |??2@YAPAXI@Z|
  00070	e1b06000	 movs        r6, r0
  00074	0a000025	 beq         |$LN15@IsEndpoint@2|
  00078	e59530b0	 ldr         r3, [r5, #0xB0]
  0007c	e3a02000	 mov         r2, #0
  00080	e1a01005	 mov         r1, r5
  00084	e1a00006	 mov         r0, r6
  00088	eb000000	 bl          |??0BulEndpoint@@QAA@QAVBulUsbDevice@@KH@Z|
  0008c	e59f3108	 ldr         r3, [pc, #0x108]
  00090	e3a02000	 mov         r2, #0
  00094	e5862040	 str         r2, [r6, #0x40]
  00098	e5862044	 str         r2, [r6, #0x44]
  0009c	e5862048	 str         r2, [r6, #0x48]

; 974  :             else 
; 975  :                 pEndpoint = new BulEndpointOut(this,dwEndpoint,m_fDoubleBuffer);

  000a0	e5863000	 str         r3, [r6]
  000a4	ea00001a	 b           |$LN16@IsEndpoint@2|
  000a8		 |$LN7@IsEndpoint@2|

; 971  :         else {
; 972  :             if ( (pEndpointDesc->bEndpointAddress & 0x80)!=0) 

  000a8	e5d93002	 ldrb        r3, [r9, #2]

; 973  :                 pEndpoint = new BulEndpointIn(this,dwEndpoint,m_fDoubleBuffer);

  000ac	e3a00040	 mov         r0, #0x40
  000b0	e3130080	 tst         r3, #0x80
  000b4	0a00000a	 beq         |$LN5@IsEndpoint@2|
  000b8	eb000000	 bl          |??2@YAPAXI@Z|
  000bc	e1b06000	 movs        r6, r0
  000c0	0a000012	 beq         |$LN15@IsEndpoint@2|
  000c4	e59530b0	 ldr         r3, [r5, #0xB0]
  000c8	e1a02007	 mov         r2, r7
  000cc	e1a01005	 mov         r1, r5
  000d0	e1a00006	 mov         r0, r6
  000d4	eb000000	 bl          |??0BulEndpoint@@QAA@QAVBulUsbDevice@@KH@Z|
  000d8	e59f30b8	 ldr         r3, [pc, #0xB8]

; 974  :             else 
; 975  :                 pEndpoint = new BulEndpointOut(this,dwEndpoint,m_fDoubleBuffer);

  000dc	e5863000	 str         r3, [r6]
  000e0	ea00000b	 b           |$LN16@IsEndpoint@2|
  000e4		 |$LN5@IsEndpoint@2|
  000e4	eb000000	 bl          |??2@YAPAXI@Z|
  000e8	e1b06000	 movs        r6, r0
  000ec	0a000007	 beq         |$LN15@IsEndpoint@2|
  000f0	e59530b0	 ldr         r3, [r5, #0xB0]
  000f4	e1a02007	 mov         r2, r7
  000f8	e1a01005	 mov         r1, r5
  000fc	e1a00006	 mov         r0, r6
  00100	eb000000	 bl          |??0BulEndpoint@@QAA@QAVBulUsbDevice@@KH@Z|
  00104	e59f3088	 ldr         r3, [pc, #0x88]
  00108	e5863000	 str         r3, [r6]
  0010c	ea000000	 b           |$LN16@IsEndpoint@2|
  00110		 |$LN15@IsEndpoint@2|
  00110	e3a06000	 mov         r6, #0
  00114		 |$LN16@IsEndpoint@2|

; 976  :         }
; 977  :         if (pEndpoint &&  pEndpoint->Init(pEndpointDesc,bConfigurationValue,bInterfaceNumber,bAlternateSetting)) {

  00114	e3560000	 cmp         r6, #0
  00118	0a000017	 beq         |$LN17@IsEndpoint@2|
  0011c	e5961000	 ldr         r1, [r6]
  00120	e5dd502c	 ldrb        r5, [sp, #0x2C]
  00124	e5dd3028	 ldrb        r3, [sp, #0x28]
  00128	e5914004	 ldr         r4, [r1, #4]
  0012c	e5dd2024	 ldrb        r2, [sp, #0x24]
  00130	e1a01009	 mov         r1, r9
  00134	e1a00006	 mov         r0, r6
  00138	e58d5000	 str         r5, [sp]
  0013c	e1a0e00f	 mov         lr, pc
  00140	e12fff14	 bx          r4
  00144	e3500000	 cmp         r0, #0
  00148	0a000005	 beq         |$LN3@IsEndpoint@2|

; 978  :             dwError = ERROR_SUCCESS;
; 979  :             InsertObject(dwEndpoint, pEndpoint) ;

  0014c	e1a02006	 mov         r2, r6
  00150	e1a01007	 mov         r1, r7
  00154	e1a00008	 mov         r0, r8
  00158	e3a0a000	 mov         r10, #0
  0015c	eb000000	 bl          |?InsertObject@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@KPAV2@@Z|

; 980  :         }
; 981  :         else {

  00160	ea000005	 b           |$LN17@IsEndpoint@2|
  00164		 |$LN3@IsEndpoint@2|

; 982  :             if (pEndpoint) {
; 983  :                 delete pEndpoint;

  00164	e5963000	 ldr         r3, [r6]
  00168	e3a01001	 mov         r1, #1
  0016c	e1a00006	 mov         r0, r6
  00170	e5933000	 ldr         r3, [r3]
  00174	e1a0e00f	 mov         lr, pc
  00178	e12fff13	 bx          r3
  0017c		 |$LN17@IsEndpoint@2|

; 984  :             }
; 985  :         }
; 986  :     }
; 987  :     Unlock();

  0017c	e1a00008	 mov         r0, r8
  00180	eb000000	 bl          LeaveCriticalSection

; 988  :     ASSERT(dwError == ERROR_SUCCESS);
; 989  :     DEBUGMSG(ZONE_FUNCTION, (_T("%s return errorcode = %d --\r\n"), pszFname,dwError));
; 990  :     return dwError;
; 991  : }

  00184	e1a0000a	 mov         r0, r10
  00188	e28dd004	 add         sp, sp, #4
  0018c	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  00190	e12fff1e	 bx          lr
  00194		 |$LN37@IsEndpoint@2|
  00194		 |$LN38@IsEndpoint@2|
  00194	00000000	 DCD         |??_7BulEndpointOut@@6B@|
  00198		 |$LN39@IsEndpoint@2|
  00198	00000000	 DCD         |??_7BulEndpointIn@@6B@|
  0019c		 |$LN40@IsEndpoint@2|
  0019c	00000000	 DCD         |??_7BulEndpointZero@@6B@|
  001a0		 |$M39930|

			 ENDP  ; |?IsEndpointSupportable@BulUsbDevice@@UAAKKW4_UFN_BUS_SPEED@@PAU_USB_ENDPOINT_DESCRIPTOR@@EEE@Z|, BulUsbDevice::IsEndpointSupportable

	EXPORT	|?InitEndpoint@BulUsbDevice@@UAAKKW4_UFN_BUS_SPEED@@PAU_USB_ENDPOINT_DESCRIPTOR@@EEE@Z| ; BulUsbDevice::InitEndpoint

  00000			 AREA	 |.pdata|, PDATA
|$T39951| DCD	|$LN6@InitEndpoi@2|
	DCD	0x40001501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InitEndpoint@BulUsbDevice@@UAAKKW4_UFN_BUS_SPEED@@PAU_USB_ENDPOINT_DESCRIPTOR@@EEE@Z| PROC ; BulUsbDevice::InitEndpoint

; 994  : {

  00000		 |$LN6@InitEndpoi@2|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M39948|
  00004	e1a06003	 mov         r6, r3
  00008	e1a07002	 mov         r7, r2

; 995  :     DWORD dwError = ERROR_INVALID_PARAMETER;
; 996  :     SETFNAME();
; 997  :     FUNCTION_ENTER_MSG();
; 998  :     BulEndpoint *pEndpoint = ObjectIndex(dwEndpoint);

  0000c	e2800018	 add         r0, r0, #0x18
  00010	e3a04057	 mov         r4, #0x57
  00014	eb000000	 bl          |?ObjectIndex@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@K@Z|
  00018	e1b05000	 movs        r5, r0

; 999  :     if (pEndpoint) {

  0001c	0a000009	 beq         |$LN1@InitEndpoi@2|

; 1000 :         dwError = pEndpoint->InitEndpoint(Speed, pEndpointDesc);

  00020	e595e000	 ldr         lr, [r5]
  00024	e1a02006	 mov         r2, r6
  00028	e1a01007	 mov         r1, r7
  0002c	e59e300c	 ldr         r3, [lr, #0xC]
  00030	e1a00005	 mov         r0, r5
  00034	e1a0e00f	 mov         lr, pc
  00038	e12fff13	 bx          r3
  0003c	e1a04000	 mov         r4, r0

; 1001 :         pEndpoint->DeRef();

  00040	e1a00005	 mov         r0, r5
  00044	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00048		 |$LN1@InitEndpoi@2|

; 1002 :     }
; 1003 :     FUNCTION_LEAVE_MSG();
; 1004 :     return dwError;
; 1005 : };

  00048	e1a00004	 mov         r0, r4
  0004c	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$M39949|

			 ENDP  ; |?InitEndpoint@BulUsbDevice@@UAAKKW4_UFN_BUS_SPEED@@PAU_USB_ENDPOINT_DESCRIPTOR@@EEE@Z|, BulUsbDevice::InitEndpoint

	EXPORT	|?DeinitEndpoint@BulUsbDevice@@UAAKK@Z|	; BulUsbDevice::DeinitEndpoint

  00000			 AREA	 |.pdata|, PDATA
|$T39964| DCD	|$LN6@DeinitEndp@2|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DeinitEndpoint@BulUsbDevice@@UAAKK@Z| PROC ; BulUsbDevice::DeinitEndpoint

; 1008 : {

  00000		 |$LN6@DeinitEndp@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M39961|

; 1009 :     DWORD dwError = ERROR_INVALID_PARAMETER;
; 1010 :     SETFNAME();
; 1011 :     FUNCTION_ENTER_MSG();
; 1012 :     BulEndpoint *pEndpoint = ObjectIndex(dwEndpoint);

  00004	e2800018	 add         r0, r0, #0x18
  00008	e3a04057	 mov         r4, #0x57
  0000c	eb000000	 bl          |?ObjectIndex@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@K@Z|
  00010	e1b05000	 movs        r5, r0

; 1013 :     if (pEndpoint) {

  00014	0a000007	 beq         |$LN1@DeinitEndp@2|

; 1014 :         dwError = pEndpoint->DeinitEndpoint();

  00018	e5953000	 ldr         r3, [r5]
  0001c	e1a00005	 mov         r0, r5
  00020	e5933010	 ldr         r3, [r3, #0x10]
  00024	e1a0e00f	 mov         lr, pc
  00028	e12fff13	 bx          r3
  0002c	e1a04000	 mov         r4, r0

; 1015 :         pEndpoint->DeRef();

  00030	e1a00005	 mov         r0, r5
  00034	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00038		 |$LN1@DeinitEndp@2|

; 1016 :     }
; 1017 :     FUNCTION_LEAVE_MSG();
; 1018 :     return dwError;
; 1019 :     
; 1020 : }

  00038	e1a00004	 mov         r0, r4
  0003c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M39962|

			 ENDP  ; |?DeinitEndpoint@BulUsbDevice@@UAAKK@Z|, BulUsbDevice::DeinitEndpoint

	EXPORT	|?StallEndpoint@BulUsbDevice@@UAAKK@Z|	; BulUsbDevice::StallEndpoint

  00000			 AREA	 |.pdata|, PDATA
|$T39977| DCD	|$LN6@StallEndpo@2|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?StallEndpoint@BulUsbDevice@@UAAKK@Z| PROC ; BulUsbDevice::StallEndpoint

; 1022 : {

  00000		 |$LN6@StallEndpo@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M39974|

; 1023 :     DWORD dwError = ERROR_INVALID_PARAMETER;
; 1024 :     SETFNAME();
; 1025 :     FUNCTION_ENTER_MSG();
; 1026 :     BulEndpoint *pEndpoint = ObjectIndex(dwEndpoint);

  00004	e2800018	 add         r0, r0, #0x18
  00008	e3a04057	 mov         r4, #0x57
  0000c	eb000000	 bl          |?ObjectIndex@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@K@Z|
  00010	e1b05000	 movs        r5, r0

; 1027 :     if (pEndpoint) {

  00014	0a000007	 beq         |$LN1@StallEndpo@2|

; 1028 :         dwError = pEndpoint->StallEndpoint();

  00018	e5953000	 ldr         r3, [r5]
  0001c	e1a00005	 mov         r0, r5
  00020	e5933014	 ldr         r3, [r3, #0x14]
  00024	e1a0e00f	 mov         lr, pc
  00028	e12fff13	 bx          r3
  0002c	e1a04000	 mov         r4, r0

; 1029 :         pEndpoint->DeRef();

  00030	e1a00005	 mov         r0, r5
  00034	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00038		 |$LN1@StallEndpo@2|

; 1030 :     }
; 1031 :     FUNCTION_LEAVE_MSG();
; 1032 :     return dwError;
; 1033 : }

  00038	e1a00004	 mov         r0, r4
  0003c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M39975|

			 ENDP  ; |?StallEndpoint@BulUsbDevice@@UAAKK@Z|, BulUsbDevice::StallEndpoint

	EXPORT	|?ClearEndpointStall@BulUsbDevice@@UAAKK@Z| ; BulUsbDevice::ClearEndpointStall

  00000			 AREA	 |.pdata|, PDATA
|$T39990| DCD	|$LN6@ClearEndpo@2|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ClearEndpointStall@BulUsbDevice@@UAAKK@Z| PROC ; BulUsbDevice::ClearEndpointStall

; 1035 : {

  00000		 |$LN6@ClearEndpo@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M39987|

; 1036 :     DWORD dwError = ERROR_INVALID_PARAMETER;
; 1037 :     SETFNAME();
; 1038 :     FUNCTION_ENTER_MSG();
; 1039 :     BulEndpoint *pEndpoint = ObjectIndex(dwEndpoint);

  00004	e2800018	 add         r0, r0, #0x18
  00008	e3a04057	 mov         r4, #0x57
  0000c	eb000000	 bl          |?ObjectIndex@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@K@Z|
  00010	e1b05000	 movs        r5, r0

; 1040 :     if (pEndpoint) {

  00014	0a000007	 beq         |$LN1@ClearEndpo@2|

; 1041 :         dwError = pEndpoint->ClearEndpointStall();

  00018	e5953000	 ldr         r3, [r5]
  0001c	e1a00005	 mov         r0, r5
  00020	e5933018	 ldr         r3, [r3, #0x18]
  00024	e1a0e00f	 mov         lr, pc
  00028	e12fff13	 bx          r3
  0002c	e1a04000	 mov         r4, r0

; 1042 :         pEndpoint->DeRef();

  00030	e1a00005	 mov         r0, r5
  00034	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00038		 |$LN1@ClearEndpo@2|

; 1043 :     }
; 1044 :     FUNCTION_LEAVE_MSG();
; 1045 :     return dwError;    
; 1046 : }

  00038	e1a00004	 mov         r0, r4
  0003c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M39988|

			 ENDP  ; |?ClearEndpointStall@BulUsbDevice@@UAAKK@Z|, BulUsbDevice::ClearEndpointStall

	EXPORT	|?ResetEndpoint@BulUsbDevice@@UAAKK@Z|	; BulUsbDevice::ResetEndpoint

  00000			 AREA	 |.pdata|, PDATA
|$T40003| DCD	|$LN6@ResetEndpo@3|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ResetEndpoint@BulUsbDevice@@UAAKK@Z| PROC ; BulUsbDevice::ResetEndpoint

; 1048 : {

  00000		 |$LN6@ResetEndpo@3|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40000|

; 1049 :     DWORD dwError = ERROR_INVALID_PARAMETER;
; 1050 :     SETFNAME();
; 1051 :     FUNCTION_ENTER_MSG();
; 1052 :     BulEndpoint *pEndpoint =  ObjectIndex(dwEndpoint);

  00004	e2800018	 add         r0, r0, #0x18
  00008	e3a04057	 mov         r4, #0x57
  0000c	eb000000	 bl          |?ObjectIndex@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@K@Z|
  00010	e1b05000	 movs        r5, r0

; 1053 :     if (pEndpoint) {

  00014	0a000007	 beq         |$LN1@ResetEndpo@3|

; 1054 :         dwError = pEndpoint->ResetEndpoint();

  00018	e5953000	 ldr         r3, [r5]
  0001c	e1a00005	 mov         r0, r5
  00020	e593301c	 ldr         r3, [r3, #0x1C]
  00024	e1a0e00f	 mov         lr, pc
  00028	e12fff13	 bx          r3
  0002c	e1a04000	 mov         r4, r0

; 1055 :         pEndpoint->DeRef();

  00030	e1a00005	 mov         r0, r5
  00034	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00038		 |$LN1@ResetEndpo@3|

; 1056 :     }
; 1057 :     FUNCTION_LEAVE_MSG();
; 1058 :     return dwError;    
; 1059 :     
; 1060 : }

  00038	e1a00004	 mov         r0, r4
  0003c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M40001|

			 ENDP  ; |?ResetEndpoint@BulUsbDevice@@UAAKK@Z|, BulUsbDevice::ResetEndpoint

	EXPORT	|?IsEndpointHalted@BulUsbDevice@@UAAKKPAH@Z| ; BulUsbDevice::IsEndpointHalted

  00000			 AREA	 |.pdata|, PDATA
|$T40017| DCD	|$LN6@IsEndpoint@3|
	DCD	0x40001301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsEndpointHalted@BulUsbDevice@@UAAKKPAH@Z| PROC ; BulUsbDevice::IsEndpointHalted

; 1062 : {

  00000		 |$LN6@IsEndpoint@3|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M40014|
  00004	e1a06002	 mov         r6, r2

; 1063 :     DWORD dwError = ERROR_INVALID_PARAMETER;
; 1064 :     SETFNAME();
; 1065 :     FUNCTION_ENTER_MSG();
; 1066 :     BulEndpoint *pEndpoint =  ObjectIndex(dwEndpoint);

  00008	e2800018	 add         r0, r0, #0x18
  0000c	e3a04057	 mov         r4, #0x57
  00010	eb000000	 bl          |?ObjectIndex@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@K@Z|
  00014	e1b05000	 movs        r5, r0

; 1067 :     if (pEndpoint) {

  00018	0a000008	 beq         |$LN1@IsEndpoint@3|

; 1068 :         dwError = pEndpoint->IsEndpointHalted(pfHalted);

  0001c	e5953000	 ldr         r3, [r5]
  00020	e1a01006	 mov         r1, r6
  00024	e1a00005	 mov         r0, r5
  00028	e5933020	 ldr         r3, [r3, #0x20]
  0002c	e1a0e00f	 mov         lr, pc
  00030	e12fff13	 bx          r3
  00034	e1a04000	 mov         r4, r0

; 1069 :         pEndpoint->DeRef();

  00038	e1a00005	 mov         r0, r5
  0003c	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00040		 |$LN1@IsEndpoint@3|

; 1070 :     }
; 1071 :     FUNCTION_LEAVE_MSG();
; 1072 :     return dwError;    
; 1073 : }

  00040	e1a00004	 mov         r0, r4
  00044	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$M40015|

			 ENDP  ; |?IsEndpointHalted@BulUsbDevice@@UAAKKPAH@Z|, BulUsbDevice::IsEndpointHalted

	EXPORT	|?IssueTransfer@BulUsbDevice@@UAAKKPAU_STransfer@@@Z| ; BulUsbDevice::IssueTransfer

  00000			 AREA	 |.pdata|, PDATA
|$T40031| DCD	|$LN6@IssueTrans@3|
	DCD	0x40001301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IssueTransfer@BulUsbDevice@@UAAKKPAU_STransfer@@@Z| PROC ; BulUsbDevice::IssueTransfer

; 1075 : {

  00000		 |$LN6@IssueTrans@3|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M40028|
  00004	e1a06002	 mov         r6, r2

; 1076 :     DWORD dwError = ERROR_INVALID_PARAMETER;
; 1077 :     SETFNAME();
; 1078 :     FUNCTION_ENTER_MSG();
; 1079 :     BulEndpoint *pEndpoint =  ObjectIndex(dwEndpoint);

  00008	e2800018	 add         r0, r0, #0x18
  0000c	e3a04057	 mov         r4, #0x57
  00010	eb000000	 bl          |?ObjectIndex@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@K@Z|
  00014	e1b05000	 movs        r5, r0

; 1080 :     if (pEndpoint) {

  00018	0a000008	 beq         |$LN1@IssueTrans@3|

; 1081 :         dwError = pEndpoint->IssueTransfer(pTransfer);

  0001c	e5953000	 ldr         r3, [r5]
  00020	e1a01006	 mov         r1, r6
  00024	e1a00005	 mov         r0, r5
  00028	e5933024	 ldr         r3, [r3, #0x24]
  0002c	e1a0e00f	 mov         lr, pc
  00030	e12fff13	 bx          r3
  00034	e1a04000	 mov         r4, r0

; 1082 :         pEndpoint->DeRef();

  00038	e1a00005	 mov         r0, r5
  0003c	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00040		 |$LN1@IssueTrans@3|

; 1083 :     }
; 1084 :     FUNCTION_LEAVE_MSG();
; 1085 :     return dwError;    
; 1086 : }

  00040	e1a00004	 mov         r0, r4
  00044	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$M40029|

			 ENDP  ; |?IssueTransfer@BulUsbDevice@@UAAKKPAU_STransfer@@@Z|, BulUsbDevice::IssueTransfer

	EXPORT	|?AbortTransfer@BulUsbDevice@@UAAKKPAU_STransfer@@@Z| ; BulUsbDevice::AbortTransfer

  00000			 AREA	 |.pdata|, PDATA
|$T40045| DCD	|$LN7@AbortTrans@2|
	DCD	0x40001401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AbortTransfer@BulUsbDevice@@UAAKKPAU_STransfer@@@Z| PROC ; BulUsbDevice::AbortTransfer

; 1088 : {

  00000		 |$LN7@AbortTrans@2|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M40042|
  00004	e1b06002	 movs        r6, r2

; 1089 :     DWORD dwError = ERROR_INVALID_PARAMETER;

  00008	e3a04057	 mov         r4, #0x57

; 1090 :     SETFNAME();
; 1091 :     FUNCTION_ENTER_MSG();
; 1092 :     if (pTransfer) {

  0000c	0a00000c	 beq         |$LN1@AbortTrans@2|

; 1093 :         BulEndpoint *pEndpoint =  ObjectIndex(dwEndpoint);

  00010	e2800018	 add         r0, r0, #0x18
  00014	eb000000	 bl          |?ObjectIndex@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@K@Z|
  00018	e1b05000	 movs        r5, r0

; 1094 :         if (pEndpoint) {

  0001c	0a000008	 beq         |$LN1@AbortTrans@2|

; 1095 :             dwError = pEndpoint->AbortTransfer(pTransfer);

  00020	e5953000	 ldr         r3, [r5]
  00024	e1a01006	 mov         r1, r6
  00028	e1a00005	 mov         r0, r5
  0002c	e5933028	 ldr         r3, [r3, #0x28]
  00030	e1a0e00f	 mov         lr, pc
  00034	e12fff13	 bx          r3
  00038	e1a04000	 mov         r4, r0

; 1096 :             pEndpoint->DeRef();

  0003c	e1a00005	 mov         r0, r5
  00040	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00044		 |$LN1@AbortTrans@2|

; 1097 :         }
; 1098 :     }
; 1099 :     FUNCTION_LEAVE_MSG();
; 1100 :     return dwError;    
; 1101 : }

  00044	e1a00004	 mov         r0, r4
  00048	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M40043|

			 ENDP  ; |?AbortTransfer@BulUsbDevice@@UAAKKPAU_STransfer@@@Z|, BulUsbDevice::AbortTransfer

	EXPORT	|?SendControlStatusHandshake@BulUsbDevice@@UAAKK@Z| ; BulUsbDevice::SendControlStatusHandshake

  00000			 AREA	 |.pdata|, PDATA
|$T40057| DCD	|$LN6@SendContro@3|
	DCD	0x40001201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SendControlStatusHandshake@BulUsbDevice@@UAAKK@Z| PROC ; BulUsbDevice::SendControlStatusHandshake

; 1105 : {

  00000		 |$LN6@SendContro@3|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40054|

; 1106 :     DWORD dwError = ERROR_INVALID_PARAMETER;
; 1107 :     SETFNAME();
; 1108 :     FUNCTION_ENTER_MSG();
; 1109 :     BulEndpoint *pEndpoint =  ObjectIndex(0);

  00004	e3a01000	 mov         r1, #0
  00008	e2800018	 add         r0, r0, #0x18
  0000c	e3a04057	 mov         r4, #0x57
  00010	eb000000	 bl          |?ObjectIndex@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@K@Z|
  00014	e1b05000	 movs        r5, r0

; 1110 :     if (pEndpoint) {

  00018	0a000007	 beq         |$LN1@SendContro@3|

; 1111 :         dwError = pEndpoint->SendControlStatusHandshake();

  0001c	e5953000	 ldr         r3, [r5]
  00020	e1a00005	 mov         r0, r5
  00024	e593302c	 ldr         r3, [r3, #0x2C]
  00028	e1a0e00f	 mov         lr, pc
  0002c	e12fff13	 bx          r3
  00030	e1a04000	 mov         r4, r0

; 1112 :         pEndpoint->DeRef();

  00034	e1a00005	 mov         r0, r5
  00038	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  0003c		 |$LN1@SendContro@3|

; 1113 :     }
; 1114 :     FUNCTION_LEAVE_MSG();
; 1115 :     return dwError;    
; 1116 : }

  0003c	e1a00004	 mov         r0, r4
  00040	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$M40055|

			 ENDP  ; |?SendControlStatusHandshake@BulUsbDevice@@UAAKK@Z|, BulUsbDevice::SendControlStatusHandshake

	EXPORT	|?ISTProcess@BulUsbDevice@@IAAXXZ|	; BulUsbDevice::ISTProcess
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T40228| DCD	|$LN126@ISTProcess|
	DCD	0x40017c02
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ISTProcess@BulUsbDevice@@IAAXXZ| PROC ; BulUsbDevice::ISTProcess

; 1298 : {

  00000		 |$LN126@ISTProcess|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd010	 sub         sp, sp, #0x10
  00008		 |$M40225|
  00008	e1a04000	 mov         r4, r0

; 1299 :     SETFNAME();
; 1300 :     FUNCTION_ENTER_MSG();
; 1301 :     m_ISTLock.Lock();

  0000c	e28400cc	 add         r0, r4, #0xCC
  00010	eb000000	 bl          EnterCriticalSection

; 1302 :     DWORD dwIntr0Status = ReadIntrStatus0Register() ;

  00014	e5943098	 ldr         r3, [r4, #0x98]
  00018	e283000c	 add         r0, r3, #0xC
  0001c	eb000000	 bl          READ_REGISTER_ULONG

; 1303 :     DWORD dwIntr1Status = ReadIntrStatus1Register() ; 

  00020	e5943098	 ldr         r3, [r4, #0x98]
  00024	e1a09000	 mov         r9, r0
  00028	e2830010	 add         r0, r3, #0x10
  0002c	eb000000	 bl          READ_REGISTER_ULONG

; 1304 :     
; 1305 : 
; 1306 :     WriteIntrStatus0Register(dwIntr0Status) ;

  00030	e5943098	 ldr         r3, [r4, #0x98]
  00034	e1a06000	 mov         r6, r0
  00038	e1a01009	 mov         r1, r9
  0003c	e283000c	 add         r0, r3, #0xC
  00040	eb000000	 bl          WRITE_REGISTER_ULONG

; 1307 :     WriteIntrStatus1Register(dwIntr1Status) ; 

  00044	e5943098	 ldr         r3, [r4, #0x98]
  00048	e1a01006	 mov         r1, r6
  0004c	e2830010	 add         r0, r3, #0x10
  00050	eb000000	 bl          WRITE_REGISTER_ULONG

; 1308 :     DEBUGMSG(ZONE_FUNCTION, (_T("%s : BulUsbDevice dwIntr0Status 0x%x, dwIntr1Status 0x%x, dwIntr0Ctrl=0x%x, dwIntr11Ctrl=0x%x, OTGICR=0x%x \r\n "), pszFname, dwIntr0Status,dwIntr1Status,ReadIntrCtr0Register(), ReadIntrCtr1Register()));
; 1309 : 
; 1310 : 
; 1311 :     if (m_fIsCableAttached != IsCableAttached() || m_fResumeOccurred ) {

  00054	e5943000	 ldr         r3, [r4]
  00058	e1a00004	 mov         r0, r4
  0005c	e5933040	 ldr         r3, [r3, #0x40]
  00060	e1a0e00f	 mov         lr, pc
  00064	e12fff13	 bx          r3
  00068	e59430a0	 ldr         r3, [r4, #0xA0]
  0006c	e3a0b000	 mov         r11, #0
  00070	e1530000	 cmp         r3, r0
  00074	1a000002	 bne         |$LN28@ISTProcess|
  00078	e5943094	 ldr         r3, [r4, #0x94]
  0007c	e3530000	 cmp         r3, #0
  00080	0a00001c	 beq         |$LN54@ISTProcess|
  00084		 |$LN28@ISTProcess|

; 1312 :         m_fIsCableAttached = IsCableAttached();

  00084	e5943000	 ldr         r3, [r4]
  00088	e1a00004	 mov         r0, r4
  0008c	e5933040	 ldr         r3, [r3, #0x40]
  00090	e1a0e00f	 mov         lr, pc
  00094	e12fff13	 bx          r3
  00098	e1a03000	 mov         r3, r0

; 1313 : 
; 1314 :         UDCCR udccr;
; 1315 :         udccr.ulValue = ReadControlRegister();

  0009c	e5940098	 ldr         r0, [r4, #0x98]
  000a0	e58430a0	 str         r3, [r4, #0xA0]
  000a4	eb000000	 bl          READ_REGISTER_ULONG

; 1316 :         udccr.bit.EMCE = 0 ;
; 1317 :         if (m_fIsCableAttached || m_fResumeOccurred ) {

  000a8	e59430a0	 ldr         r3, [r4, #0xA0]
  000ac	e3530000	 cmp         r3, #0
  000b0	1a00000d	 bne         |$LN26@ISTProcess|
  000b4	e5943094	 ldr         r3, [r4, #0x94]
  000b8	e3530000	 cmp         r3, #0
  000bc	1a00000a	 bne         |$LN26@ISTProcess|

; 1321 :         }
; 1322 :         else {
; 1323 :             DEBUGMSG(ZONE_FUNCTION, (_T("%s : Detach Detected\r\n"),pszFname));
; 1324 :             DeviceNotification( UFN_MSG_BUS_EVENTS, UFN_DETACH);

  000c0	e59430b4	 ldr         r3, [r4, #0xB4]
  000c4	e1b00003	 movs        r0, r3
  000c8	0a000005	 beq         |$LN55@ISTProcess|
  000cc	e59430c0	 ldr         r3, [r4, #0xC0]
  000d0	e3a02000	 mov         r2, #0
  000d4	e3a01001	 mov         r1, #1
  000d8	e1a0e00f	 mov         lr, pc
  000dc	e12fff13	 bx          r3
  000e0	ea000004	 b           |$LN54@ISTProcess|
  000e4		 |$LN55@ISTProcess|
  000e4	e6000010	 __debugbreak_ce
  000e8	ea000002	 b           |$LN54@ISTProcess|
  000ec		 |$LN26@ISTProcess|

; 1318 :             DEBUGMSG(ZONE_FUNCTION, (_T("%s : Attach Detected\r\n"),pszFname));
; 1319 :             m_fResumeOccurred = FALSE ;
; 1320 :             ReInit();

  000ec	e1a00004	 mov         r0, r4
  000f0	e584b094	 str         r11, [r4, #0x94]
  000f4	eb000000	 bl          |?ReInit@BulUsbDevice@@IAAHXZ|

; 1321 :         }
; 1322 :         else {
; 1323 :             DEBUGMSG(ZONE_FUNCTION, (_T("%s : Detach Detected\r\n"),pszFname));
; 1324 :             DeviceNotification( UFN_MSG_BUS_EVENTS, UFN_DETACH);

  000f8		 |$LN54@ISTProcess|

; 1325 :         }
; 1326 :     }
; 1327 :     // Processing Device Interrupt 
; 1328 :     if ( (dwIntr1Status & UDCISR1_IRCC)!=0 || m_fOTGSetupFeature) { // Setup Config or Setup Interface has been received.

  000f8	e3160102	 tst         r6, #2, 2
  000fc	1a000002	 bne         |$LN23@ISTProcess|
  00100	e59430e0	 ldr         r3, [r4, #0xE0]
  00104	e3530000	 cmp         r3, #0
  00108	0a00008e	 beq         |$LN78@ISTProcess|
  0010c		 |$LN23@ISTProcess|

; 1329 :         USB_DEVICE_REQUEST udr;
; 1330 :         UDCCR udccr;
; 1331 :         udccr.ulValue = ReadControlRegister();

  0010c	e5940098	 ldr         r0, [r4, #0x98]
  00110	eb000000	 bl          READ_REGISTER_ULONG

; 1332 :         DEBUGMSG(ZONE_FUNCTION, (_T("%s : Setup Configuration and Interface received UDCCR=0x%x.\r\n"),pszFname,udccr.ulValue));
; 1333 :         udccr.bit.SMAC = 1;

  00114	e3c03018	 bic         r3, r0, #0x18

; 1334 :         udccr.bit.EMCE = 0 ;
; 1335 :         WriteControlRegister(udccr.ulValue);

  00118	e5940098	 ldr         r0, [r4, #0x98]
  0011c	e3835010	 orr         r5, r3, #0x10
  00120	e1a01005	 mov         r1, r5
  00124	eb000000	 bl          WRITE_REGISTER_ULONG

; 1336 :         m_fOTGSetupFeature = FALSE;
; 1337 :         if (udccr.bit.ACN != m_dwCurConfigure) { // COnfiguration has changed.

  00128	e59420b8	 ldr         r2, [r4, #0xB8]
  0012c	e1a03985	 mov         r3, r5, lsl #19
  00130	e1a01f23	 mov         r1, r3, lsr #30
  00134	e1510002	 cmp         r1, r2
  00138	e584b0e0	 str         r11, [r4, #0xE0]
  0013c	0a000013	 beq         |$LN66@ISTProcess|

; 1338 :             udr.bmRequestType = USB_REQUEST_FOR_DEVICE;
; 1339 :             udr.bRequest = USB_REQUEST_SET_CONFIGURATION;
; 1340 :             udr.wValue = (USHORT) udccr.bit.ACN;
; 1341 :             udr.wIndex =  0;
; 1342 :             udr.wLength =0;
; 1343 :             m_dwCurConfigure = udccr.bit.ACN ;
; 1344 :             DeviceNotification( UFN_MSG_SETUP_PACKET,(DWORD) &udr);

  00140	e59430b4	 ldr         r3, [r4, #0xB4]
  00144	e3a02000	 mov         r2, #0
  00148	e3a0e009	 mov         lr, #9
  0014c	e3a07000	 mov         r7, #0
  00150	e3a08000	 mov         r8, #0
  00154	e1b00003	 movs        r0, r3
  00158	e5cd2000	 strb        r2, [sp]
  0015c	e5cde001	 strb        lr, [sp, #1]
  00160	e1cd10b2	 strh        r1, [sp, #2]
  00164	e1cd70b4	 strh        r7, [sp, #4]
  00168	e1cd80b6	 strh        r8, [sp, #6]
  0016c	e58410b8	 str         r1, [r4, #0xB8]
  00170	0a000005	 beq         |$LN67@ISTProcess|
  00174	e59430c0	 ldr         r3, [r4, #0xC0]
  00178	e28d2000	 add         r2, sp, #0
  0017c	e3a01004	 mov         r1, #4
  00180	e1a0e00f	 mov         lr, pc
  00184	e12fff13	 bx          r3
  00188	ea000000	 b           |$LN66@ISTProcess|
  0018c		 |$LN67@ISTProcess|
  0018c	e6000010	 __debugbreak_ce
  00190		 |$LN66@ISTProcess|

; 1345 :         }
; 1346 :         if (udccr.bit.AIN*0x100 + udccr.bit.AAISN != m_dwCurInterface) {

  00190	e1a03a85	 mov         r3, r5, lsl #21
  00194	e1a02c05	 mov         r2, r5, lsl #24
  00198	e1a01ea3	 mov         r1, r3, lsr #29
  0019c	e59430bc	 ldr         r3, [r4, #0xBC]
  001a0	e1a02ea2	 mov         r2, r2, lsr #29
  001a4	e0820401	 add         r0, r2, r1, lsl #8
  001a8	e1500003	 cmp         r0, r3
  001ac	0a000008	 beq         |$LN21@ISTProcess|

; 1347 :             udr.bmRequestType = USB_REQUEST_FOR_DEVICE;

  001b0	e3a03000	 mov         r3, #0

; 1348 :             udr.bRequest = USB_REQUEST_SET_INTERFACE;

  001b4	e3a0e00b	 mov         lr, #0xB

; 1349 :             udr.wValue = (USHORT) udccr.bit.AAISN;
; 1350 :             udr.wIndex = (USHORT) udccr.bit.AIN;
; 1351 :             udr.wLength =  0;

  001b8	e3a07000	 mov         r7, #0
  001bc	e5cd3000	 strb        r3, [sp]
  001c0	e5cde001	 strb        lr, [sp, #1]
  001c4	e1cd70b6	 strh        r7, [sp, #6]
  001c8	e1cd20b2	 strh        r2, [sp, #2]
  001cc	e1cd10b4	 strh        r1, [sp, #4]

; 1352 :             m_dwCurInterface = udccr.bit.AIN*0x100 + udccr.bit.AAISN ;

  001d0	e58400bc	 str         r0, [r4, #0xBC]
  001d4		 |$LN21@ISTProcess|

; 1353 :             // We can not do this because MDD will stall the endpoint.
; 1354 :             //DeviceNotification( UFN_MSG_SETUP_PACKET,(DWORD) &udr);
; 1355 :         }
; 1356 :         // For OTG.
; 1357 :         if (udccr.bit.BHNP !=0 &&  udccr.bit.BHNP!= m_prevUDCR.bit.BHNP) { // Host Set HNP Feature.

  001d4	e1a03185	 mov         r3, r5, lsl #3
  001d8	e1b02fa3	 movs        r2, r3, lsr #31
  001dc	0a00001b	 beq         |$LN70@ISTProcess|
  001e0	e59410e4	 ldr         r1, [r4, #0xE4]
  001e4	e1a03181	 mov         r3, r1, lsl #3
  001e8	e1520fa3	 cmp         r2, r3, lsr #31
  001ec	0a000017	 beq         |$LN70@ISTProcess|

; 1358 :             DEBUGMSG(ZONE_FUNCTION, (_T("%s : BHNP Detected\r\n"),pszFname));
; 1359 :             udr.bmRequestType = USB_REQUEST_FOR_DEVICE;
; 1360 :             udr.bRequest = USB_REQUEST_SET_FEATURE ;
; 1361 :             udr.wValue =  USB_FEATURE_B_HNP_ENABLE;
; 1362 :             udr.wIndex =  0 ;
; 1363 :             udr.wLength =0;
; 1364 :             m_prevUDCR.bit.BHNP =  udccr.bit.BHNP ;

  001f0	e0213005	 eor         r3, r1, r5

; 1365 :             DeviceNotification( UFN_MSG_SETUP_PACKET,(DWORD) &udr);

  001f4	e59420b4	 ldr         r2, [r4, #0xB4]
  001f8	e2033201	 and         r3, r3, #1, 4
  001fc	e0233001	 eor         r3, r3, r1
  00200	e3a00003	 mov         r0, #3
  00204	e3a01000	 mov         r1, #0
  00208	e3a0e003	 mov         lr, #3
  0020c	e3a07000	 mov         r7, #0
  00210	e3a08000	 mov         r8, #0
  00214	e5cd0001	 strb        r0, [sp, #1]
  00218	e5cd1000	 strb        r1, [sp]
  0021c	e58430e4	 str         r3, [r4, #0xE4]
  00220	e1cde0b2	 strh        lr, [sp, #2]
  00224	e1cd70b4	 strh        r7, [sp, #4]
  00228	e1cd80b6	 strh        r8, [sp, #6]
  0022c	e1b00002	 movs        r0, r2
  00230	0a000005	 beq         |$LN71@ISTProcess|
  00234	e59430c0	 ldr         r3, [r4, #0xC0]
  00238	e28d2000	 add         r2, sp, #0
  0023c	e3a01004	 mov         r1, #4
  00240	e1a0e00f	 mov         lr, pc
  00244	e12fff13	 bx          r3
  00248	ea000000	 b           |$LN70@ISTProcess|
  0024c		 |$LN71@ISTProcess|
  0024c	e6000010	 __debugbreak_ce
  00250		 |$LN70@ISTProcess|

; 1366 :         }
; 1367 :         if (udccr.bit.AHNP !=0  && udccr.bit.AHNP != m_prevUDCR.bit.AHNP) {// Host Set HNP Support.

  00250	e1a03105	 mov         r3, r5, lsl #2
  00254	e1b02fa3	 movs        r2, r3, lsr #31
  00258	0a00001b	 beq         |$LN74@ISTProcess|
  0025c	e59410e4	 ldr         r1, [r4, #0xE4]
  00260	e1a03101	 mov         r3, r1, lsl #2
  00264	e1520fa3	 cmp         r2, r3, lsr #31
  00268	0a000017	 beq         |$LN74@ISTProcess|

; 1368 :             DEBUGMSG(ZONE_FUNCTION, (_T("%s : AHNP Detected\r\n"),pszFname));
; 1369 :             udr.bmRequestType = USB_REQUEST_FOR_DEVICE;
; 1370 :             udr.bRequest = USB_REQUEST_SET_FEATURE ;
; 1371 :             udr.wValue =  USB_FEATURE_A_HNP_SUPPORT;
; 1372 :             udr.wIndex =  0 ;
; 1373 :             udr.wLength =0;
; 1374 :             m_prevUDCR.bit.AHNP = udccr.bit.AHNP;

  0026c	e0213005	 eor         r3, r1, r5

; 1375 :             DeviceNotification( UFN_MSG_SETUP_PACKET,(DWORD) &udr);

  00270	e59420b4	 ldr         r2, [r4, #0xB4]
  00274	e2033202	 and         r3, r3, #2, 4
  00278	e0233001	 eor         r3, r3, r1
  0027c	e3a00003	 mov         r0, #3
  00280	e3a01000	 mov         r1, #0
  00284	e3a0e004	 mov         lr, #4
  00288	e3a07000	 mov         r7, #0
  0028c	e3a08000	 mov         r8, #0
  00290	e5cd0001	 strb        r0, [sp, #1]
  00294	e5cd1000	 strb        r1, [sp]
  00298	e58430e4	 str         r3, [r4, #0xE4]
  0029c	e1cde0b2	 strh        lr, [sp, #2]
  002a0	e1cd70b4	 strh        r7, [sp, #4]
  002a4	e1cd80b6	 strh        r8, [sp, #6]
  002a8	e1b00002	 movs        r0, r2
  002ac	0a000005	 beq         |$LN75@ISTProcess|
  002b0	e59430c0	 ldr         r3, [r4, #0xC0]
  002b4	e28d2000	 add         r2, sp, #0
  002b8	e3a01004	 mov         r1, #4
  002bc	e1a0e00f	 mov         lr, pc
  002c0	e12fff13	 bx          r3
  002c4	ea000000	 b           |$LN74@ISTProcess|
  002c8		 |$LN75@ISTProcess|
  002c8	e6000010	 __debugbreak_ce
  002cc		 |$LN74@ISTProcess|

; 1376 :         }
; 1377 :         if (udccr.bit.AALTHNP!=0 && udccr.bit.AALTHNP != m_prevUDCR.bit.AALTHNP) { // Host Set Alter HNP Support.

  002cc	e1a03085	 mov         r3, r5, lsl #1
  002d0	e1b02fa3	 movs        r2, r3, lsr #31
  002d4	0a00001b	 beq         |$LN78@ISTProcess|
  002d8	e59410e4	 ldr         r1, [r4, #0xE4]
  002dc	e1a03081	 mov         r3, r1, lsl #1
  002e0	e1520fa3	 cmp         r2, r3, lsr #31
  002e4	0a000017	 beq         |$LN78@ISTProcess|

; 1378 :             DEBUGMSG(ZONE_FUNCTION, (_T("%s : AALTHNP Detected\r\n"),pszFname));
; 1379 :             udr.bmRequestType = USB_REQUEST_FOR_DEVICE;
; 1380 :             udr.bRequest = USB_REQUEST_SET_FEATURE ;
; 1381 :             udr.wValue =  USB_FEATURE_A_ALT_HNP_SUPPORT;
; 1382 :             udr.wIndex =  0 ;
; 1383 :             udr.wLength =0;
; 1384 :             m_prevUDCR.bit.AALTHNP = udccr.bit.AALTHNP;

  002e8	e0213005	 eor         r3, r1, r5

; 1385 :             DeviceNotification(UFN_MSG_SETUP_PACKET,(DWORD) &udr);

  002ec	e59420b4	 ldr         r2, [r4, #0xB4]
  002f0	e2033101	 and         r3, r3, #1, 2
  002f4	e0233001	 eor         r3, r3, r1
  002f8	e3a00003	 mov         r0, #3
  002fc	e3a01000	 mov         r1, #0
  00300	e3a0e005	 mov         lr, #5
  00304	e3a05000	 mov         r5, #0
  00308	e3a07000	 mov         r7, #0
  0030c	e5cd0001	 strb        r0, [sp, #1]
  00310	e5cd1000	 strb        r1, [sp]
  00314	e58430e4	 str         r3, [r4, #0xE4]
  00318	e1cde0b2	 strh        lr, [sp, #2]
  0031c	e1cd50b4	 strh        r5, [sp, #4]
  00320	e1cd70b6	 strh        r7, [sp, #6]
  00324	e1b00002	 movs        r0, r2
  00328	0a000005	 beq         |$LN79@ISTProcess|
  0032c	e59430c0	 ldr         r3, [r4, #0xC0]
  00330	e28d2000	 add         r2, sp, #0
  00334	e3a01004	 mov         r1, #4
  00338	e1a0e00f	 mov         lr, pc
  0033c	e12fff13	 bx          r3
  00340	ea000000	 b           |$LN78@ISTProcess|
  00344		 |$LN79@ISTProcess|
  00344	e6000010	 __debugbreak_ce
  00348		 |$LN78@ISTProcess|

; 1386 :         }
; 1387 :         
; 1388 :     }
; 1389 :     if ( dwIntr1Status & UDCISR1_IRRU) { // Resume Detected

  00348	e3160202	 tst         r6, #2, 4
  0034c	0a000009	 beq         |$LN82@ISTProcess|

; 1390 :         DEBUGMSG(ZONE_FUNCTION, (_T("%s : Resume Detected\r\n"),pszFname));
; 1391 :         DeviceNotification( UFN_MSG_BUS_EVENTS, UFN_RESUME);

  00350	e59430b4	 ldr         r3, [r4, #0xB4]
  00354	e1b00003	 movs        r0, r3
  00358	0a000005	 beq         |$LN83@ISTProcess|
  0035c	e59430c0	 ldr         r3, [r4, #0xC0]
  00360	e3a02004	 mov         r2, #4
  00364	e3a01001	 mov         r1, #1
  00368	e1a0e00f	 mov         lr, pc
  0036c	e12fff13	 bx          r3
  00370	ea000000	 b           |$LN82@ISTProcess|
  00374		 |$LN83@ISTProcess|
  00374	e6000010	 __debugbreak_ce
  00378		 |$LN82@ISTProcess|

; 1392 :     }
; 1393 :     if (dwIntr1Status & UDCISR1_IRSU ) { // Suspend Detected.

  00378	e3160201	 tst         r6, #1, 4
  0037c	0a000009	 beq         |$LN86@ISTProcess|

; 1394 :         DEBUGMSG(ZONE_FUNCTION, (_T("%s : Suspend Detected\r\n"),pszFname));
; 1395 :         DeviceNotification( UFN_MSG_BUS_EVENTS, UFN_SUSPEND);

  00380	e59430b4	 ldr         r3, [r4, #0xB4]
  00384	e1b00003	 movs        r0, r3
  00388	0a000005	 beq         |$LN87@ISTProcess|
  0038c	e59430c0	 ldr         r3, [r4, #0xC0]
  00390	e3a02003	 mov         r2, #3
  00394	e3a01001	 mov         r1, #1
  00398	e1a0e00f	 mov         lr, pc
  0039c	e12fff13	 bx          r3
  003a0	ea000000	 b           |$LN86@ISTProcess|
  003a4		 |$LN87@ISTProcess|
  003a4	e6000010	 __debugbreak_ce
  003a8		 |$LN86@ISTProcess|

; 1396 :     }
; 1397 :     if (dwIntr1Status & UDCISR1_IRRS) { // Reset Detected.

  003a8	e3160302	 tst         r6, #2, 6
  003ac	0a000062	 beq         |$LN15@ISTProcess|

; 1398 :         DEBUGMSG(ZONE_FUNCTION, (_T("%s : Reset Detected\r\n"),pszFname));
; 1399 :         // Set DETACH First
; 1400 :         DeviceNotification( UFN_MSG_BUS_EVENTS, UFN_DETACH);

  003b0	e59430b4	 ldr         r3, [r4, #0xB4]
  003b4	e1b00003	 movs        r0, r3
  003b8	0a000005	 beq         |$LN91@ISTProcess|
  003bc	e59430c0	 ldr         r3, [r4, #0xC0]
  003c0	e3a02000	 mov         r2, #0
  003c4	e3a01001	 mov         r1, #1
  003c8	e1a0e00f	 mov         lr, pc
  003cc	e12fff13	 bx          r3
  003d0	ea000000	 b           |$LN90@ISTProcess|
  003d4		 |$LN91@ISTProcess|
  003d4	e6000010	 __debugbreak_ce
  003d8		 |$LN90@ISTProcess|

; 1401 :         // Set ATTACH.
; 1402 :         DeviceNotification( UFN_MSG_BUS_EVENTS, UFN_ATTACH);

  003d8	e59430b4	 ldr         r3, [r4, #0xB4]
  003dc	e1b00003	 movs        r0, r3
  003e0	0a000005	 beq         |$LN95@ISTProcess|
  003e4	e59430c0	 ldr         r3, [r4, #0xC0]
  003e8	e3a02001	 mov         r2, #1
  003ec	e3a01001	 mov         r1, #1
  003f0	e1a0e00f	 mov         lr, pc
  003f4	e12fff13	 bx          r3
  003f8	ea000000	 b           |$LN94@ISTProcess|
  003fc		 |$LN95@ISTProcess|
  003fc	e6000010	 __debugbreak_ce
  00400		 |$LN94@ISTProcess|

; 1403 :         // Set Reset
; 1404 :         DeviceNotification( UFN_MSG_BUS_EVENTS, UFN_RESET);

  00400	e59430b4	 ldr         r3, [r4, #0xB4]
  00404	e1b00003	 movs        r0, r3
  00408	0a000005	 beq         |$LN99@ISTProcess|
  0040c	e59430c0	 ldr         r3, [r4, #0xC0]
  00410	e3a02002	 mov         r2, #2
  00414	e3a01001	 mov         r1, #1
  00418	e1a0e00f	 mov         lr, pc
  0041c	e12fff13	 bx          r3
  00420	ea000000	 b           |$LN98@ISTProcess|
  00424		 |$LN99@ISTProcess|
  00424	e6000010	 __debugbreak_ce
  00428		 |$LN98@ISTProcess|

; 1405 :         // This device can only support FULL Speed.
; 1406 :         DeviceNotification( UFN_MSG_BUS_SPEED, BS_FULL_SPEED);

  00428	e59430b4	 ldr         r3, [r4, #0xB4]
  0042c	e1b00003	 movs        r0, r3
  00430	0a000005	 beq         |$LN103@ISTProcess|
  00434	e59430c0	 ldr         r3, [r4, #0xC0]
  00438	e3a02001	 mov         r2, #1
  0043c	e3a01003	 mov         r1, #3
  00440	e1a0e00f	 mov         lr, pc
  00444	e12fff13	 bx          r3
  00448	ea000000	 b           |$LN102@ISTProcess|
  0044c		 |$LN103@ISTProcess|
  0044c	e6000010	 __debugbreak_ce
  00450		 |$LN102@ISTProcess|

; 1407 :         // The HW Filters the Set Address ... Fake it here
; 1408 :         DeviceNotification( UFN_MSG_SET_ADDRESS, 0xFF);

  00450	e59430b4	 ldr         r3, [r4, #0xB4]
  00454	e1b00003	 movs        r0, r3
  00458	0a000005	 beq         |$LN107@ISTProcess|
  0045c	e59430c0	 ldr         r3, [r4, #0xC0]
  00460	e3a020ff	 mov         r2, #0xFF
  00464	e3a01006	 mov         r1, #6
  00468	e1a0e00f	 mov         lr, pc
  0046c	e12fff13	 bx          r3
  00470	ea000000	 b           |$LN106@ISTProcess|
  00474		 |$LN107@ISTProcess|
  00474	e6000010	 __debugbreak_ce
  00478		 |$LN106@ISTProcess|

; 1409 :         UDCCR udccr;
; 1410 :         USB_DEVICE_REQUEST udr;
; 1411 :         udccr.ulValue = ReadControlRegister();

  00478	e5940098	 ldr         r0, [r4, #0x98]
  0047c	eb000000	 bl          READ_REGISTER_ULONG
  00480	e1a05000	 mov         r5, r0

; 1412 :         if (udccr.bit.ACN == m_dwCurConfigure) { // COnfiguration has changed.

  00484	e59420b8	 ldr         r2, [r4, #0xB8]
  00488	e1a03985	 mov         r3, r5, lsl #19
  0048c	e1a01f23	 mov         r1, r3, lsr #30
  00490	e1510002	 cmp         r1, r2
  00494	e3e0a000	 mvn         r10, #0
  00498	1a000013	 bne         |$LN14@ISTProcess|

; 1413 :             udr.bmRequestType = USB_REQUEST_FOR_DEVICE;
; 1414 :             udr.bRequest = USB_REQUEST_SET_CONFIGURATION;
; 1415 :             udr.wValue = (USHORT) udccr.bit.ACN;
; 1416 :             udr.wIndex =  0;
; 1417 :             udr.wLength =0;
; 1418 :             DeviceNotification( UFN_MSG_SETUP_PACKET,(DWORD) &udr);

  0049c	e59430b4	 ldr         r3, [r4, #0xB4]
  004a0	e3a02000	 mov         r2, #0
  004a4	e3a0e009	 mov         lr, #9
  004a8	e3a07000	 mov         r7, #0
  004ac	e3a08000	 mov         r8, #0
  004b0	e1b00003	 movs        r0, r3
  004b4	e5cd2008	 strb        r2, [sp, #8]
  004b8	e5cde009	 strb        lr, [sp, #9]
  004bc	e1cd10ba	 strh        r1, [sp, #0xA]
  004c0	e1cd70bc	 strh        r7, [sp, #0xC]
  004c4	e1cd80be	 strh        r8, [sp, #0xE]
  004c8	0a000005	 beq         |$LN115@ISTProcess|
  004cc	e59430c0	 ldr         r3, [r4, #0xC0]
  004d0	e28d2008	 add         r2, sp, #8
  004d4	e3a01004	 mov         r1, #4
  004d8	e1a0e00f	 mov         lr, pc
  004dc	e12fff13	 bx          r3
  004e0	ea000002	 b           |$LN13@ISTProcess|
  004e4		 |$LN115@ISTProcess|
  004e4	e6000010	 __debugbreak_ce

; 1419 :         }
; 1420 :         else { // THis device is not configured

  004e8	ea000000	 b           |$LN13@ISTProcess|
  004ec		 |$LN14@ISTProcess|

; 1421 :             m_dwCurConfigure = MAXDWORD ;

  004ec	e584a0b8	 str         r10, [r4, #0xB8]
  004f0		 |$LN13@ISTProcess|

; 1422 :         }
; 1423 :         if (udccr.bit.AIN*0x100 + udccr.bit.AAISN == m_dwCurInterface) {

  004f0	e1a02c05	 mov         r2, r5, lsl #24
  004f4	e1a03a85	 mov         r3, r5, lsl #21
  004f8	e1a00ea2	 mov         r0, r2, lsr #29
  004fc	e59420bc	 ldr         r2, [r4, #0xBC]
  00500	e1a01ea3	 mov         r1, r3, lsr #29
  00504	e0803401	 add         r3, r0, r1, lsl #8
  00508	e1530002	 cmp         r3, r2
  0050c	1a000008	 bne         |$LN12@ISTProcess|

; 1424 :             udr.bmRequestType = USB_REQUEST_FOR_DEVICE;

  00510	e3a03000	 mov         r3, #0

; 1425 :             udr.bRequest = USB_REQUEST_SET_INTERFACE;

  00514	e3a0200b	 mov         r2, #0xB

; 1426 :             udr.wValue = (USHORT) udccr.bit.AAISN;
; 1427 :             udr.wIndex = (USHORT) udccr.bit.AIN;
; 1428 :             udr.wLength =  0;

  00518	e3a0e000	 mov         lr, #0
  0051c	e5cd3008	 strb        r3, [sp, #8]
  00520	e5cd2009	 strb        r2, [sp, #9]
  00524	e1cde0be	 strh        lr, [sp, #0xE]
  00528	e1cd00ba	 strh        r0, [sp, #0xA]
  0052c	e1cd10bc	 strh        r1, [sp, #0xC]

; 1429 :             // We can not do this because MDD will stall the endpoint.
; 1430 :             //DeviceNotification( UFN_MSG_SETUP_PACKET,(DWORD) &udr);
; 1431 :         }
; 1432 :         else { // THis device is not configured

  00530	ea000000	 b           |$LN11@ISTProcess|
  00534		 |$LN12@ISTProcess|

; 1433 :             m_dwCurInterface = MAXDWORD ;

  00534	e584a0bc	 str         r10, [r4, #0xBC]
  00538		 |$LN11@ISTProcess|

; 1434 :         }
; 1435 :         m_prevUDCR.ulValue = 0 ; // Reset Should clear all previous state;

  00538	e584b0e4	 str         r11, [r4, #0xE4]
  0053c		 |$LN15@ISTProcess|

; 1436 :     }
; 1437 :     BulEndpoint *pEndpoint;
; 1438 :     DWORD dwIntrStatusCopy = dwIntr0Status;
; 1439 :     for (DWORD dwIndex =0 ; dwIndex < UDCIR0_MAX ; dwIndex ++ ) {

  0053c	e3a05000	 mov         r5, #0
  00540		 |$LL10@ISTProcess|

; 1440 :         if  ((dwIntrStatusCopy & ( EPINT_PACKET_COMPLETE | EPINT_FIFO_ERROR ))!=0 ) {

  00540	e2198003	 ands        r8, r9, #3
  00544	0a00000c	 beq         |$LN6@ISTProcess|

; 1441 :             if ((pEndpoint = ObjectIndex(dwIndex)) != NULL ) {

  00548	e1a01005	 mov         r1, r5
  0054c	e2840018	 add         r0, r4, #0x18
  00550	eb000000	 bl          |?ObjectIndex@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@K@Z|
  00554	e1b07000	 movs        r7, r0
  00558	0a000007	 beq         |$LN6@ISTProcess|

; 1442 :                 pEndpoint->IST(dwIntrStatusCopy & ( EPINT_PACKET_COMPLETE | EPINT_FIFO_ERROR ));

  0055c	e5973000	 ldr         r3, [r7]
  00560	e1a01008	 mov         r1, r8
  00564	e1a00007	 mov         r0, r7
  00568	e5933030	 ldr         r3, [r3, #0x30]
  0056c	e1a0e00f	 mov         lr, pc
  00570	e12fff13	 bx          r3

; 1443 :                 pEndpoint->DeRef();

  00574	e1a00007	 mov         r0, r7
  00578	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  0057c		 |$LN6@ISTProcess|
  0057c	e2855001	 add         r5, r5, #1
  00580	e3550010	 cmp         r5, #0x10

; 1444 :             }
; 1445 :         }
; 1446 :         dwIntrStatusCopy >>=2;

  00584	e1a09129	 mov         r9, r9, lsr #2
  00588	3affffec	 bcc         |$LL10@ISTProcess|

; 1447 :     }
; 1448 :     dwIntrStatusCopy = dwIntr1Status;
; 1449 :     for (DWORD dwIndex =UDCIR0_MAX ; dwIndex < MAX_ENDPOINT_NUMBER ; dwIndex ++ ) {

  0058c	e3a05010	 mov         r5, #0x10
  00590		 |$LL5@ISTProcess|

; 1450 :         if  ((dwIntrStatusCopy & ( EPINT_PACKET_COMPLETE | EPINT_FIFO_ERROR ))!=0 ) {

  00590	e2168003	 ands        r8, r6, #3
  00594	0a00000c	 beq         |$LN1@ISTProcess|

; 1451 :             if ((pEndpoint = ObjectIndex(dwIndex)) != NULL ) {

  00598	e1a01005	 mov         r1, r5
  0059c	e2840018	 add         r0, r4, #0x18
  005a0	eb000000	 bl          |?ObjectIndex@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@K@Z|
  005a4	e1b07000	 movs        r7, r0
  005a8	0a000007	 beq         |$LN1@ISTProcess|

; 1452 :                 pEndpoint->IST(dwIntrStatusCopy & ( EPINT_PACKET_COMPLETE | EPINT_FIFO_ERROR ));

  005ac	e5973000	 ldr         r3, [r7]
  005b0	e1a01008	 mov         r1, r8
  005b4	e1a00007	 mov         r0, r7
  005b8	e5933030	 ldr         r3, [r3, #0x30]
  005bc	e1a0e00f	 mov         lr, pc
  005c0	e12fff13	 bx          r3

; 1453 :                 pEndpoint->DeRef();

  005c4	e1a00007	 mov         r0, r7
  005c8	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  005cc		 |$LN1@ISTProcess|
  005cc	e2855001	 add         r5, r5, #1
  005d0	e3550018	 cmp         r5, #0x18

; 1454 :             }
; 1455 :         }
; 1456 :         dwIntrStatusCopy >>=2;

  005d4	e1a06126	 mov         r6, r6, lsr #2
  005d8	3affffec	 bcc         |$LL5@ISTProcess|

; 1457 :     }
; 1458 :     m_ISTLock.Unlock();

  005dc	e28400cc	 add         r0, r4, #0xCC
  005e0	eb000000	 bl          LeaveCriticalSection

; 1459 :     FUNCTION_LEAVE_MSG();
; 1460 : }

  005e4	e28dd010	 add         sp, sp, #0x10
  005e8	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  005ec	e12fff1e	 bx          lr
  005f0		 |$M40226|

			 ENDP  ; |?ISTProcess@BulUsbDevice@@IAAXXZ|, BulUsbDevice::ISTProcess

	EXPORT	|?ThreadRun@BulUsbDevice@@EAAKXZ|	; BulUsbDevice::ThreadRun
	IMPORT	|InterruptDone|

  00000			 AREA	 |.pdata|, PDATA
|$T40243| DCD	|$LN13@ThreadRun|
	DCD	0x40001501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ThreadRun@BulUsbDevice@@EAAKXZ| PROC	; BulUsbDevice::ThreadRun

; 1468 : {

  00000		 |$LN13@ThreadRun|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40240|
  00004	e1a04000	 mov         r4, r0

; 1469 :     SETFNAME();
; 1470 :     FUNCTION_ENTER_MSG();
; 1471 : 
; 1472 :     while (!m_bTerminated && m_hISTEvent!=NULL) {

  00008	ea00000b	 b           |$LN8@ThreadRun|
  0000c		 |$LL3@ThreadRun|
  0000c	e59430a8	 ldr         r3, [r4, #0xA8]
  00010	e3530000	 cmp         r3, #0
  00014	0a00000b	 beq         |$LN9@ThreadRun|

; 1473 :         if ( WaitForSingleObject(m_hISTEvent,cISTTimeOut) != WAIT_OBJECT_0) {

  00018	e3e01000	 mvn         r1, #0
  0001c	e1a00003	 mov         r0, r3
  00020	eb000000	 bl          WaitForSingleObject
  00024	e3500000	 cmp         r0, #0
  00028	1a000003	 bne         |$LN8@ThreadRun|

; 1474 :             DEBUGMSG(ZONE_FUNCTION, (_T("%s : Interrupt Time out dwIntr0Status=0x%x dwIntr1Status = 0x%x. dwIntr0Ctrl=0x%x, dwIntr11Ctrl=0x%x\r\n"),pszFname,
; 1475 :                 ReadIntrStatus0Register(), ReadIntrStatus1Register(),ReadIntrCtr0Register(), ReadIntrCtr1Register()));
; 1476 :             DEBUGMSG(ZONE_FUNCTION, (_T("%s : ControlRegister() =0x%x ControlStatusRegister(0)=0x%x\r\n"),pszFname,
; 1477 :                  ReadControlRegister(), ReadUDCRegister( ENDPOINT_CONTROL_STATUS_REGISTER_OFFSET + 0 ) ));
; 1478 :             continue;
; 1479 :         }
; 1480 :         ISTProcess();

  0002c	e1a00004	 mov         r0, r4
  00030	eb000000	 bl          |?ISTProcess@BulUsbDevice@@IAAXXZ|

; 1481 :         InterruptDone(m_dwSysIntr);

  00034	e59400a4	 ldr         r0, [r4, #0xA4]
  00038	eb000000	 bl          InterruptDone
  0003c		 |$LN8@ThreadRun|
  0003c	e5943004	 ldr         r3, [r4, #4]
  00040	e3530000	 cmp         r3, #0
  00044	0afffff0	 beq         |$LL3@ThreadRun|
  00048		 |$LN9@ThreadRun|

; 1482 :     }
; 1483 :     FUNCTION_LEAVE_MSG();
; 1484 :     return 1;

  00048	e3a00001	 mov         r0, #1

; 1485 : }

  0004c	e8bd4010	 ldmia       sp!, {r4, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$M40241|

			 ENDP  ; |?ThreadRun@BulUsbDevice@@EAAKXZ|, BulUsbDevice::ThreadRun

	EXPORT	|??0BulOTGEventThread@@QAA@AAVBulUsbDevice@@AAPAXK@Z| ; BulOTGEventThread::BulOTGEventThread
	EXPORT	|??_7BulOTGEventThread@@6B@| [ DATA ]	; BulOTGEventThread::`vftable'
	EXPORT	|?ThreadRun@BulOTGEventThread@@EAAKXZ|	; BulOTGEventThread::ThreadRun

  00000			 AREA	 |.pdata|, PDATA
|$T40256| DCD	|$LN5@BulOTGEven|
	DCD	0x40001101

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7BulOTGEventThread@@6B@| DCD |?ThreadRun@BulOTGEventThread@@EAAKXZ| ; BulOTGEventThread::`vftable'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0BulOTGEventThread@@QAA@AAVBulUsbDevice@@AAPAXK@Z| PROC ; BulOTGEventThread::BulOTGEventThread

; 1492 : {

  00000		 |$LN5@BulOTGEven|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M40253|
  00004	e1a07003	 mov         r7, r3
  00008	e1a05002	 mov         r5, r2
  0000c	e1a04001	 mov         r4, r1
  00010	e1a06000	 mov         r6, r0
  00014	e3a02001	 mov         r2, #1
  00018	e3a01000	 mov         r1, #0
  0001c	eb000000	 bl          |??0CMiniThread@@QAA@KH@Z|
  00020	e59fe018	 ldr         lr, [pc, #0x18]
  00024	e5864018	 str         r4, [r6, #0x18]
  00028	e586501c	 str         r5, [r6, #0x1C]
  0002c	e586e000	 str         lr, [r6]
  00030	e5867020	 str         r7, [r6, #0x20]

; 1493 : }

  00034	e1a00006	 mov         r0, r6
  00038	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN6@BulOTGEven|
  00040		 |$LN7@BulOTGEven|
  00040	00000000	 DCD         |??_7BulOTGEventThread@@6B@|
  00044		 |$M40254|

			 ENDP  ; |??0BulOTGEventThread@@QAA@AAVBulUsbDevice@@AAPAXK@Z|, BulOTGEventThread::BulOTGEventThread

	EXPORT	|??1BulOTGEventThread@@QAA@XZ|		; BulOTGEventThread::~BulOTGEventThread
; File c:\wince600\public\common\oak\inc\cmthread.h

  00000			 AREA	 |.pdata|, PDATA
|$T40276| DCD	|$LN11@BulOTGEven@2|
	DCD	0x40001701
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1BulOTGEventThread@@QAA@XZ| PROC	; BulOTGEventThread::~BulOTGEventThread

; 1495 : {

  00000		 |$LN11@BulOTGEven@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40273|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3048	 ldr         r3, [pc, #0x48]

; 1496 :     m_bTerminated=TRUE;

  0000c	e3a05001	 mov         r5, #1

; 1497 :     ThreadStart();

  00010	e5845004	 str         r5, [r4, #4]
  00014	e5843000	 str         r3, [r4]
  00018	eb000000	 bl          |?ThreadStart@CMiniThread@@QAAHXZ|

; 1498 :     SetEvent(m_hOTGEvent);

  0001c	e594301c	 ldr         r3, [r4, #0x1C]
  00020	e3a01003	 mov         r1, #3
  00024	e5930000	 ldr         r0, [r3]
  00028	eb000000	 bl          EventModify

; 1499 :     ThreadTerminated(1000);

  0002c	e3a01ffa	 mov         r1, #0xFA, 30
  00030	e1a00004	 mov         r0, r4
  00034	e5845004	 str         r5, [r4, #4]
  00038	eb000000	 bl          |?WaitThreadComplete@CMiniThread@@QAAHK@Z|

; 1500 : }

  0003c	e59f3010	 ldr         r3, [pc, #0x10]
  00040	e1a00004	 mov         r0, r4
  00044	e5843000	 str         r3, [r4]
  00048	eb000000	 bl          |?ForceTerminated@CMiniThread@@QAAHXZ|
  0004c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$LN12@BulOTGEven@2|
  00054		 |$LN13@BulOTGEven@2|
  00054	00000000	 DCD         |??_7CMiniThread@@6B@|
  00058		 |$LN14@BulOTGEven@2|
  00058	00000000	 DCD         |??_7BulOTGEventThread@@6B@|
  0005c		 |$M40274|

			 ENDP  ; |??1BulOTGEventThread@@QAA@XZ|, BulOTGEventThread::~BulOTGEventThread

	EXPORT	|?OTGSetupFeature@BulUsbDevice@@QAAXXZ|	; BulUsbDevice::OTGSetupFeature
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul_usbfn.h

  00000			 AREA	 |.pdata|, PDATA
|$T40287| DCD	|$LN5@OTGSetupFe|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?OTGSetupFeature@BulUsbDevice@@QAAXXZ| PROC ; BulUsbDevice::OTGSetupFeature

; 115  :     void    OTGSetupFeature() {

  00000		 |$LN5@OTGSetupFe|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M40284|

; 116  :         m_fOTGSetupFeature = TRUE;

  00004	e3a03001	 mov         r3, #1
  00008	e58030e0	 str         r3, [r0, #0xE0]

; 117  :         ISTProcess();

  0000c	eb000000	 bl          |?ISTProcess@BulUsbDevice@@IAAXXZ|

; 118  :     }

  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M40285|

			 ENDP  ; |?OTGSetupFeature@BulUsbDevice@@QAAXXZ|, BulUsbDevice::OTGSetupFeature


  00000			 AREA	 |.pdata|, PDATA
|$T40301| DCD	|$LN8@scalar@3|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GBulEndpointZero@@UAAPAXI@Z| PROC	; BulEndpointZero::`scalar deleting destructor'
  00000		 |$LN8@scalar@3|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40298|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |??1BulEndpoint@@UAA@XZ|
  00010	e3140001	 tst         r4, #1
  00014	11a00005	 movne       r0, r5
  00018	1b000000	 blne        |??3@YAXPAX@Z|
  0001c	e1a00005	 mov         r0, r5
  00020	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M40299|

			 ENDP  ; |??_GBulEndpointZero@@UAAPAXI@Z|, BulEndpointZero::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T40315| DCD	|$LN8@scalar@4|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GBulEndpointIn@@UAAPAXI@Z| PROC	; BulEndpointIn::`scalar deleting destructor'
  00000		 |$LN8@scalar@4|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40312|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |??1BulEndpoint@@UAA@XZ|
  00010	e3140001	 tst         r4, #1
  00014	11a00005	 movne       r0, r5
  00018	1b000000	 blne        |??3@YAXPAX@Z|
  0001c	e1a00005	 mov         r0, r5
  00020	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M40313|

			 ENDP  ; |??_GBulEndpointIn@@UAAPAXI@Z|, BulEndpointIn::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T40329| DCD	|$LN8@scalar@5|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GBulEndpointOut@@UAAPAXI@Z| PROC	; BulEndpointOut::`scalar deleting destructor'
  00000		 |$LN8@scalar@5|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40326|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |??1BulEndpoint@@UAA@XZ|
  00010	e3140001	 tst         r4, #1
  00014	11a00005	 movne       r0, r5
  00018	1b000000	 blne        |??3@YAXPAX@Z|
  0001c	e1a00005	 mov         r0, r5
  00020	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M40327|

			 ENDP  ; |??_GBulEndpointOut@@UAAPAXI@Z|, BulEndpointOut::`scalar deleting destructor'

	EXPORT	|??0BulUsbDevice@@QAA@PBG@Z|		; BulUsbDevice::BulUsbDevice
	EXPORT	|??_7BulUsbDevice@@6B@| [ DATA ]	; BulUsbDevice::`vftable'
	EXPORT	|?Init@BulUsbDevice@@UAAKPAXPAU_UFN_MDD_INTERFACE_INFO@@PAU_UFN_PDD_INTERFACE_INFO@@@Z| ; BulUsbDevice::Init
	EXPORT	|?IsCableAttached@BulUsbDevice@@UAAHXZ|	; BulUsbDevice::IsCableAttached
	IMPORT	|CreateBusAccessHandle|
	IMPORT	|??_EBulUsbDevice@@UAAPAXI@Z|, WEAK |??_GBulUsbDevice@@UAAPAXI@Z| ; BulUsbDevice::`vector deleting destructor', BulUsbDevice::`scalar deleting destructor'
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T40354| DCD	|$LN12@BulUsbDevi|
	DCD	0x40002901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7BulUsbDevice@@6B@| DCD |?ThreadRun@BulUsbDevice@@EAAKXZ| ; BulUsbDevice::`vftable'
	DCD	|??_EBulUsbDevice@@UAAPAXI@Z|
	DCD	|?Init@BulUsbDevice@@UAAKPAXPAU_UFN_MDD_INTERFACE_INFO@@PAU_UFN_PDD_INTERFACE_INFO@@@Z|
	DCD	|?DeleteAllEndpoint@BulUsbDevice@@UAAHXZ|
	DCD	|?IsEndpointSupportable@BulUsbDevice@@UAAKKW4_UFN_BUS_SPEED@@PAU_USB_ENDPOINT_DESCRIPTOR@@EEE@Z|
	DCD	|?InitEndpoint@BulUsbDevice@@UAAKKW4_UFN_BUS_SPEED@@PAU_USB_ENDPOINT_DESCRIPTOR@@EEE@Z|
	DCD	|?DeinitEndpoint@BulUsbDevice@@UAAKK@Z|
	DCD	|?StallEndpoint@BulUsbDevice@@UAAKK@Z|
	DCD	|?ClearEndpointStall@BulUsbDevice@@UAAKK@Z|
	DCD	|?ResetEndpoint@BulUsbDevice@@UAAKK@Z|
	DCD	|?IsEndpointHalted@BulUsbDevice@@UAAKKPAH@Z|
	DCD	|?IssueTransfer@BulUsbDevice@@UAAKKPAU_STransfer@@@Z|
	DCD	|?AbortTransfer@BulUsbDevice@@UAAKKPAU_STransfer@@@Z|
	DCD	|?SendControlStatusHandshake@BulUsbDevice@@UAAKK@Z|
	DCD	|?Start@BulUsbDevice@@UAAKXZ|
	DCD	|?Stop@BulUsbDevice@@UAAKXZ|
	DCD	|?IsCableAttached@BulUsbDevice@@UAAHXZ|
	DCD	|?SetAddress@BulUsbDevice@@UAAKE@Z|
	DCD	|?PowerDown@BulUsbDevice@@UAAXXZ|
	DCD	|?PowerUp@BulUsbDevice@@UAAXXZ|
	DCD	|?SetPowerState@BulUsbDevice@@UAAXW4_CEDEVICE_POWER_STATE@@@Z|
	DCD	|?IOControl@BulUsbDevice@@UAAKW4_IOCTL_SOURCE@@KPAEK1KPAK@Z|
	DCD	|?PowerMgr@BulUsbDevice@@MAAXH@Z|
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0BulUsbDevice@@QAA@PBG@Z| PROC	; BulUsbDevice::BulUsbDevice

; 720  : {

  00000		 |$LN12@BulUsbDevi|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M40351|
  00004	e1a06001	 mov         r6, r1
  00008	e1a05000	 mov         r5, r0
  0000c	e2850018	 add         r0, r5, #0x18
  00010	eb000000	 bl          |??0?$CStaticContainer@VBulEndpoint@@$0BI@@@QAA@XZ|
  00014	e1a04005	 mov         r4, r5
  00018	e3a07000	 mov         r7, #0
  0001c	e5a47090	 str         r7, [r4, #0x90]!
  00020	e3560000	 cmp         r6, #0
  00024	0a000002	 beq         |$LN5@BulUsbDevi|
  00028	e1a00006	 mov         r0, r6
  0002c	eb000000	 bl          OpenDeviceKey
  00030	e5840000	 str         r0, [r4]
  00034		 |$LN5@BulUsbDevi|
  00034	e3a02001	 mov         r2, #1
  00038	e3a01000	 mov         r1, #0
  0003c	e1a00005	 mov         r0, r5
  00040	eb000000	 bl          |??0CMiniThread@@QAA@KH@Z|
  00044	e59f3054	 ldr         r3, [pc, #0x54]
  00048	e1a00005	 mov         r0, r5
  0004c	e48030cc	 str         r3, [r0], #0xCC
  00050	eb000000	 bl          InitializeCriticalSection

; 721  :     m_pUsbDevReg = NULL;
; 722  :     m_hISTEvent = NULL;
; 723  :     m_pDCCLKReg = NULL;
; 724  :     m_fDoubleBuffer = TRUE;

  00054	e3a03001	 mov         r3, #1

; 725  :     m_pvMddContext = NULL;
; 726  :     m_dwCurConfigure = MAXDWORD;

  00058	e3e02000	 mvn         r2, #0
  0005c	e5857098	 str         r7, [r5, #0x98]

; 727  :     m_dwCurInterface = MAXDWORD;
; 728  :     m_pfnNotify = NULL;
; 729  :     m_CurPowerState = PwrDeviceUnspecified ;
; 730  :     m_hParent = CreateBusAccessHandle(lpActivePath);  

  00060	e1a00006	 mov         r0, r6
  00064	e58530b0	 str         r3, [r5, #0xB0]
  00068	e58520b8	 str         r2, [r5, #0xB8]
  0006c	e58520bc	 str         r2, [r5, #0xBC]
  00070	e58520c4	 str         r2, [r5, #0xC4]
  00074	e585709c	 str         r7, [r5, #0x9C]
  00078	e58570a8	 str         r7, [r5, #0xA8]
  0007c	e58570b4	 str         r7, [r5, #0xB4]
  00080	e58570c0	 str         r7, [r5, #0xC0]
  00084	eb000000	 bl          CreateBusAccessHandle
  00088	e58500c8	 str         r0, [r5, #0xC8]

; 731  :     m_pOTGEventThread = NULL;
; 732  :     m_fOTGSetupFeature = FALSE;
; 733  : }

  0008c	e1a00005	 mov         r0, r5
  00090	e58570ec	 str         r7, [r5, #0xEC]
  00094	e58570e0	 str         r7, [r5, #0xE0]
  00098	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  0009c	e12fff1e	 bx          lr
  000a0		 |$LN13@BulUsbDevi|
  000a0		 |$LN14@BulUsbDevi|
  000a0	00000000	 DCD         |??_7BulUsbDevice@@6B@|
  000a4		 |$M40352|

			 ENDP  ; |??0BulUsbDevice@@QAA@PBG@Z|, BulUsbDevice::BulUsbDevice

; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul_usbfn.h

  00000			 AREA	 |.pdata|, PDATA
|$T40365| DCD	|$LN5@IsCableAtt|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsCableAttached@BulUsbDevice@@UAAHXZ| PROC ; BulUsbDevice::IsCableAttached

; 109  :     virtual BOOL IsCableAttached() { return TRUE; };

  00000		 |$LN5@IsCableAtt|
  00000		 |$M40362|
  00000	e3a00001	 mov         r0, #1
  00004	e12fff1e	 bx          lr
  00008		 |$M40363|

			 ENDP  ; |?IsCableAttached@BulUsbDevice@@UAAHXZ|, BulUsbDevice::IsCableAttached

	EXPORT	|??_GBulOTGEventThread@@QAAPAXI@Z|	; BulOTGEventThread::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T40376| DCD	|$LN6@scalar@6|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GBulOTGEventThread@@QAAPAXI@Z| PROC ; BulOTGEventThread::`scalar deleting destructor'
  00000		 |$LN6@scalar@6|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40373|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |??1BulOTGEventThread@@QAA@XZ|
  00010	e3140001	 tst         r4, #1
  00014	11a00005	 movne       r0, r5
  00018	1b000000	 blne        |??3@YAXPAX@Z|
  0001c	e1a00005	 mov         r0, r5
  00020	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M40374|

			 ENDP  ; |??_GBulOTGEventThread@@QAAPAXI@Z|, BulOTGEventThread::`scalar deleting destructor'

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|??_C@_1BI@BHLBGEOK@?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@DHEBDKKE@?$AAD?$AAo?$AAu?$AAb?$AAl?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|BusChildIoControl|
	IMPORT	|InterruptInitialize|
	IMPORT	|CreateEventW|
	IMPORT	|MmMapIoSpace|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|__security_check_cookie|
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T40466| DCD	|$LN58@Init@4|
	DCD	0xc000af02

  00000			 AREA	 |.xdata|, DATA
|$T40462| DCD	0xfffffff0

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@BHLBGEOK@?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@| DCB "P"
	DCB	0x0, "r", 0x0, "i", 0x0, "o", 0x0, "r", 0x0, "i", 0x0, "t"
	DCB	0x0, "y", 0x0, "2", 0x0, "5", 0x0, "6", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@DHEBDKKE@?$AAD?$AAo?$AAu?$AAb?$AAl?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@| DCB "D"
	DCB	0x0, "o", 0x0, "u", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, "B"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T40462|

  00008		 |?Init@BulUsbDevice@@UAAKPAXPAU_UFN_MDD_INTERFACE_INFO@@PAU_UFN_PDD_INTERFACE_INFO@@@Z| PROC ; BulUsbDevice::Init

; 772  : {

  00008		 |$LN58@Init@4|
  00008	e92d4030	 stmdb       sp!, {r4, r5, lr}
  0000c	e24ddf62	 sub         sp, sp, #0x62, 30
  00010		 |$M40463|
  00010	e1a04000	 mov         r4, r0
  00014	e59fe2a4	 ldr         lr, [pc, #0x2A4]
  00018	e59ee000	 ldr         lr, [lr]
  0001c	e58de184	 str         lr, [sp, #0x184]

; 773  :     m_pvMddContext = pvMddContext;

  00020	e58410b4	 str         r1, [r4, #0xB4]

; 774  :     m_pfnNotify = pMddInterfaceInfo->pfnNotify;

  00024	e5922004	 ldr         r2, [r2, #4]
  00028	e58420c0	 str         r2, [r4, #0xC0]

; 775  :     pPddInterfaceInfo->pvPddContext = this;

  0002c	e583400c	 str         r4, [r3, #0xC]

; 776  :     
; 777  :     if ( !IsKeyOpened())

  00030	e5943090	 ldr         r3, [r4, #0x90]
  00034	e3530000	 cmp         r3, #0

; 778  :         return ERROR_INVALID_DATA; 

  00038	0a000096	 beq         |$LN8@Init@4|

; 779  :     
; 780  :     DDKISRINFO dii;
; 781  :     DDKWINDOWINFO dwi;
; 782  :     DWORD dwRet = GetWindowInfo(&dwi);

  0003c	e3530000	 cmp         r3, #0
  00040	0a000006	 beq         |$LN36@Init@4|
  00044	e3a02074	 mov         r2, #0x74
  00048	e28d1004	 add         r1, sp, #4
  0004c	e1a00003	 mov         r0, r3
  00050	e58d2004	 str         r2, [sp, #4]
  00054	eb000000	 bl          DDKReg_GetWindowInfo
  00058	e1a05000	 mov         r5, r0
  0005c	ea000000	 b           |$LN35@Init@4|
  00060		 |$LN36@Init@4|
  00060	e3a05001	 mov         r5, #1
  00064		 |$LN35@Init@4|

; 783  :     if(dwRet != ERROR_SUCCESS) {

  00064	e3550000	 cmp         r5, #0
  00068	0a000002	 beq         |$LN21@Init@4|
  0006c		 |$LN55@Init@4|

; 784  :         DEBUGMSG(ZONE_INIT, (_T("BulUsbDevice:: DDKReg_GetWindowInfo() failed %d\r\n"), dwRet));
; 785  :         return dwRet;

  0006c	e59d0184	 ldr         r0, [sp, #0x184]
  00070	eb000000	 bl          __security_check_cookie
  00074	ea00008a	 b           |$LN1@Init@4|
  00078		 |$LN21@Init@4|

; 786  :     } else if(dwi.dwNumMemWindows != 1) {

  00078	e59d3044	 ldr         r3, [sp, #0x44]
  0007c	e3530001	 cmp         r3, #1

; 787  :         return ERROR_INVALID_DATA;

  00080	1a000084	 bne         |$LN8@Init@4|

; 788  :     }  else if (dwi.memWindows[0].dwLen < sizeof(BULVERDE_USBD_REG)) {

  00084	e59d204c	 ldr         r2, [sp, #0x4C]
  00088	e3520c05	 cmp         r2, #5, 24

; 789  :         DEBUGMSG(ZONE_INIT, (_T("memLen of 0x%x is less than required 0x%x\r\n"),
; 790  :             dwi.memWindows[0].dwLen, sizeof(BULVERDE_USBD_REG)));
; 791  :         return ERROR_INVALID_DATA;

  0008c	3a000081	 bcc         |$LN8@Init@4|

; 792  :     }
; 793  :     m_fIsCableAttached = FALSE;
; 794  :     m_fResumeOccurred = FALSE;
; 795  :     if (m_pDCCLKReg == NULL ) {

  00090	e594309c	 ldr         r3, [r4, #0x9C]
  00094	e3a01000	 mov         r1, #0
  00098	e58410a0	 str         r1, [r4, #0xA0]
  0009c	e3530000	 cmp         r3, #0
  000a0	e5841094	 str         r1, [r4, #0x94]
  000a4	1a00000e	 bne         |$LN14@Init@4|
  000a8	e3a03441	 mov         r3, #0x41, 8

; 796  :         PHYSICAL_ADDRESS ioPhysicalBase = {BULVERDE_BASE_REG_PA_CLKMGR, 0 };

  000ac	e3830603	 orr         r0, r3, #3, 12

; 797  :         m_pDCCLKReg = (PBULVERDE_CLKMGR_REG)MmMapIoSpace(ioPhysicalBase, sizeof(BULVERDE_CLKMGR_REG),FALSE);

  000b0	e3a03000	 mov         r3, #0
  000b4	e3a01000	 mov         r1, #0
  000b8	e3a02010	 mov         r2, #0x10
  000bc	eb000000	 bl          MmMapIoSpace
  000c0	e584009c	 str         r0, [r4, #0x9C]

; 798  :         if (m_pDCCLKReg != NULL)

  000c4	e594309c	 ldr         r3, [r4, #0x9C]
  000c8	e3530000	 cmp         r3, #0
  000cc	0a000071	 beq         |$LN8@Init@4|

; 799  :             m_pDCCLKReg->cken |= XLLP_CLKEN_USBCLIENT ;

  000d0	e594209c	 ldr         r2, [r4, #0x9C]
  000d4	e5923004	 ldr         r3, [r2, #4]
  000d8	e3833b02	 orr         r3, r3, #2, 22
  000dc	e5823004	 str         r3, [r2, #4]

; 800  :         else

  000e0	e59d204c	 ldr         r2, [sp, #0x4C]
  000e4		 |$LN14@Init@4|

; 801  :             return ERROR_INVALID_DATA;            
; 802  :     }
; 803  : 
; 804  :     // Map Windows.
; 805  :     // Translate to System Address.
; 806  :     if (m_pUsbDevReg==NULL ) {

  000e4	e5943098	 ldr         r3, [r4, #0x98]
  000e8	e3530000	 cmp         r3, #0
  000ec	1a000007	 bne         |$LN12@Init@4|

; 807  :         PHYSICAL_ADDRESS    ioPhysicalBase = { dwi.memWindows[0].dwBase, 0};

  000f0	e59d0048	 ldr         r0, [sp, #0x48]
  000f4	e3a01000	 mov         r1, #0

; 808  :         m_pUsbDevReg = (PULONG) MmMapIoSpace(ioPhysicalBase, dwi.memWindows[0].dwLen,FALSE);

  000f8	e3a03000	 mov         r3, #0
  000fc	eb000000	 bl          MmMapIoSpace
  00100	e5840098	 str         r0, [r4, #0x98]

; 809  :         if (m_pUsbDevReg==NULL )

  00104	e5943098	 ldr         r3, [r4, #0x98]
  00108	e3530000	 cmp         r3, #0

; 810  :             return ERROR_INVALID_DATA;

  0010c	0a000061	 beq         |$LN8@Init@4|
  00110		 |$LN12@Init@4|

; 811  :     }
; 812  :     // get ISR configuration information
; 813  :     dwRet = GetIsrInfo( &dii);

  00110	e5943090	 ldr         r3, [r4, #0x90]
  00114	e3530000	 cmp         r3, #0
  00118	0a000006	 beq         |$LN40@Init@4|
  0011c	e3a02f43	 mov         r2, #0x43, 30
  00120	e28d1078	 add         r1, sp, #0x78
  00124	e1a00003	 mov         r0, r3
  00128	e58d2078	 str         r2, [sp, #0x78]
  0012c	eb000000	 bl          DDKReg_GetIsrInfo
  00130	e1a05000	 mov         r5, r0
  00134	ea000000	 b           |$LN39@Init@4|
  00138		 |$LN40@Init@4|
  00138	e3a05001	 mov         r5, #1
  0013c		 |$LN39@Init@4|

; 814  :     if(dwRet != ERROR_SUCCESS) {

  0013c	e3550000	 cmp         r5, #0

; 815  :         DEBUGMSG(ZONE_INIT, (_T("BulUsbDevice DDKReg_GetIsrInfo() failed %d\r\n"), dwRet));
; 816  :         return dwRet;

  00140	1affffc9	 bne         |$LN55@Init@4|

; 817  :     } else if(dii.dwSysintr == SYSINTR_NOP){

  00144	e59de080	 ldr         lr, [sp, #0x80]
  00148	e35e0000	 cmp         lr, #0

; 818  :         DEBUGMSG(ZONE_INIT, (_T("BulUsbDevice  no SYSINTR value specified\r\n")));
; 819  :         return ERROR_INVALID_DATA;

  0014c	0a000051	 beq         |$LN8@Init@4|

; 820  :     };
; 821  : 
; 822  :     m_dwSysIntr = dii.dwSysintr;
; 823  : 
; 824  :     m_hISTEvent= CreateEvent(0,FALSE,FALSE,NULL);

  00150	e3a03000	 mov         r3, #0
  00154	e3a02000	 mov         r2, #0
  00158	e3a01000	 mov         r1, #0
  0015c	e3a00000	 mov         r0, #0
  00160	e584e0a4	 str         lr, [r4, #0xA4]
  00164	eb000000	 bl          CreateEventW
  00168	e1b01000	 movs        r1, r0
  0016c	e58410a8	 str         r1, [r4, #0xA8]

; 825  :     if (m_hISTEvent!=NULL)

  00170	0a000048	 beq         |$LN8@Init@4|

; 826  :         InterruptInitialize(m_dwSysIntr,m_hISTEvent,0,0);

  00174	e59400a4	 ldr         r0, [r4, #0xA4]
  00178	e3a03000	 mov         r3, #0
  0017c	e3a02000	 mov         r2, #0
  00180	eb000000	 bl          InterruptInitialize

; 829  :         
; 830  :     // Optional Registry.
; 831  :     DWORD dwDataSize = sizeof(DWORD);
; 832  :     DWORD dwDoubleBuffer = 1;
; 833  :     if (!GetRegValue(BUL_USBFUNCTION_DOUBLEBUFFER_VALNAME, (LPBYTE) &dwDoubleBuffer,dwDataSize)){

  00184	e59f1130	 ldr         r1, [pc, #0x130]
  00188	e3a0e001	 mov         lr, #1
  0018c	e3a03004	 mov         r3, #4
  00190	e28d2000	 add         r2, sp, #0
  00194	e2840090	 add         r0, r4, #0x90
  00198	e58de000	 str         lr, [sp]
  0019c	eb000000	 bl          |?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z|
  001a0	e3500000	 cmp         r0, #0

; 834  :         dwDoubleBuffer = 1;

  001a4	03a03001	 moveq       r3, #1
  001a8	058d3000	 streq       r3, [sp]
  001ac	159d3000	 ldrne       r3, [sp]

; 835  :     };
; 836  :     m_fDoubleBuffer = (dwDoubleBuffer==1);
; 837  :     // Read the IST priority
; 838  :     dwDataSize = sizeof(m_dwPriority);
; 839  :     if (!GetRegValue(BUL_USBFUNCTION_PRIORITY_VALNAME,(LPBYTE) &m_dwPriority, dwDataSize)) {

  001b0	e59f1100	 ldr         r1, [pc, #0x100]
  001b4	e28420ac	 add         r2, r4, #0xAC
  001b8	e3530001	 cmp         r3, #1
  001bc	03a0e001	 moveq       lr, #1
  001c0	13a0e000	 movne       lr, #0
  001c4	e3a03004	 mov         r3, #4
  001c8	e2840090	 add         r0, r4, #0x90
  001cc	e584e0b0	 str         lr, [r4, #0xB0]
  001d0	eb000000	 bl          |?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z|
  001d4	e3500000	 cmp         r0, #0

; 840  :         m_dwPriority = BUL_USBFUNCTION_DEFAULT_PRIORITY;

  001d8	03a03064	 moveq       r3, #0x64
  001dc	058430ac	 streq       r3, [r4, #0xAC]

; 841  :     }
; 842  :     CeSetPriority(m_dwPriority);

  001e0	e5943008	 ldr         r3, [r4, #8]
  001e4	e3530000	 cmp         r3, #0
  001e8	159410ac	 ldrne       r1, [r4, #0xAC]
  001ec	11a00003	 movne       r0, r3
  001f0	1b000000	 blne        CeSetThreadPriority

; 843  :     if (HardwareInit()) {

  001f4	e1a00004	 mov         r0, r4
  001f8	eb000000	 bl          |?HardwareInit@BulUsbDevice@@IAAHXZ|
  001fc	e3500000	 cmp         r0, #0
  00200	0a000024	 beq         |$LN8@Init@4|

; 844  :         ThreadStart();

  00204	e1a00004	 mov         r0, r4
  00208	eb000000	 bl          |?ThreadStart@CMiniThread@@QAAHXZ|

; 845  :         if (BusChildIoControl(m_hParent,IOCTL_BUS_USBOTG_BULVERDE_GET_EVENT,&m_hOTGEvent,sizeof(m_hOTGEvent)) && m_hOTGEvent!=NULL){

  0020c	e59f10a0	 ldr         r1, [pc, #0xA0]
  00210	e59400c8	 ldr         r0, [r4, #0xC8]
  00214	e28420e8	 add         r2, r4, #0xE8
  00218	e3a03004	 mov         r3, #4
  0021c	eb000000	 bl          BusChildIoControl
  00220	e3500000	 cmp         r0, #0
  00224	0a000017	 beq         |$LN2@Init@4|
  00228	e59430e8	 ldr         r3, [r4, #0xE8]
  0022c	e3530000	 cmp         r3, #0
  00230	0a000014	 beq         |$LN2@Init@4|

; 846  :             m_pOTGEventThread = new BulOTGEventThread(*this,m_hOTGEvent,m_dwPriority);

  00234	e3a00024	 mov         r0, #0x24
  00238	eb000000	 bl          |??2@YAPAXI@Z|
  0023c	e3500000	 cmp         r0, #0
  00240	0a000005	 beq         |$LN27@Init@4|
  00244	e59430ac	 ldr         r3, [r4, #0xAC]
  00248	e28420e8	 add         r2, r4, #0xE8
  0024c	e1a01004	 mov         r1, r4
  00250	eb000000	 bl          |??0BulOTGEventThread@@QAA@AAVBulUsbDevice@@AAPAXK@Z|
  00254	e1a05000	 mov         r5, r0
  00258	ea000000	 b           |$LN28@Init@4|
  0025c		 |$LN27@Init@4|
  0025c	e3a05000	 mov         r5, #0
  00260		 |$LN28@Init@4|
  00260	e58450ec	 str         r5, [r4, #0xEC]

; 847  :             if (m_pOTGEventThread && !m_pOTGEventThread->Init()){

  00264	e3550000	 cmp         r5, #0
  00268	0a000006	 beq         |$LN2@Init@4|
  0026c	e5953008	 ldr         r3, [r5, #8]
  00270	e3530000	 cmp         r3, #0
  00274	15951020	 ldrne       r1, [r5, #0x20]
  00278	11a00003	 movne       r0, r3
  0027c	1b000000	 blne        CeSetThreadPriority
  00280	e1a00005	 mov         r0, r5
  00284	eb000000	 bl          |?ThreadStart@CMiniThread@@QAAHXZ|
  00288		 |$LN2@Init@4|

; 848  :                 delete m_pOTGEventThread;
; 849  :                 m_pOTGEventThread = NULL;
; 850  :             }
; 851  :         }
; 852  :         return ERROR_SUCCESS;

  00288	e59d0184	 ldr         r0, [sp, #0x184]
  0028c	eb000000	 bl          __security_check_cookie
  00290	e3a05000	 mov         r5, #0
  00294	ea000002	 b           |$LN1@Init@4|
  00298		 |$LN8@Init@4|

; 827  :     else
; 828  :        return ERROR_INVALID_DATA;

  00298	e59d0184	 ldr         r0, [sp, #0x184]
  0029c	eb000000	 bl          __security_check_cookie
  002a0	e3a0500d	 mov         r5, #0xD
  002a4		 |$LN1@Init@4|

; 853  :     }
; 854  :     else
; 855  :         return ERROR_INVALID_DATA;
; 856  : }

  002a4	e1a00005	 mov         r0, r5
  002a8	e28ddf62	 add         sp, sp, #0x62, 30
  002ac	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  002b0	e12fff1e	 bx          lr
  002b4		 |$LN59@Init@4|
  002b4		 |$LN60@Init@4|
  002b4	002a042c	 DCD         0x2a042c
  002b8		 |$LN61@Init@4|
  002b8	00000000	 DCD         |??_C@_1BI@BHLBGEOK@?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@|
  002bc		 |$LN62@Init@4|
  002bc	00000000	 DCD         |??_C@_1BK@DHEBDKKE@?$AAD?$AAo?$AAu?$AAb?$AAl?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@|
  002c0		 |$LN63@Init@4|
  002c0	00000000	 DCD         |__security_cookie|
  002c4		 |$M40464|

			 ENDP  ; |?Init@BulUsbDevice@@UAAKPAXPAU_UFN_MDD_INTERFACE_INFO@@PAU_UFN_PDD_INTERFACE_INFO@@@Z|, BulUsbDevice::Init

; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul_usbfn.h

  00000			 AREA	 |.pdata|, PDATA
|$T40489| DCD	|$LN13@ThreadRun@2|
	DCD	0x40001901
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\usbfn\bul_usbfn.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ThreadRun@BulOTGEventThread@@EAAKXZ| PROC ; BulOTGEventThread::ThreadRun

; 1503 : {

  00000		 |$LN13@ThreadRun@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40486|
  00004	e1a04000	 mov         r4, r0

; 1504 :     while (!m_bTerminated && m_hOTGEvent!=NULL) {

  00008	e5943004	 ldr         r3, [r4, #4]
  0000c	e3530000	 cmp         r3, #0
  00010	1a000010	 bne         |$LN10@ThreadRun@2|
  00014	e3a05001	 mov         r5, #1
  00018		 |$LL4@ThreadRun@2|
  00018	e594201c	 ldr         r2, [r4, #0x1C]
  0001c	e5923000	 ldr         r3, [r2]
  00020	e3530000	 cmp         r3, #0
  00024	0a00000b	 beq         |$LN10@ThreadRun@2|

; 1505 :         if ( WaitForSingleObject(m_hOTGEvent,INFINITE)== WAIT_OBJECT_0) {

  00028	e1a00003	 mov         r0, r3
  0002c	e3e01000	 mvn         r1, #0
  00030	eb000000	 bl          WaitForSingleObject
  00034	e3500000	 cmp         r0, #0
  00038	1a000006	 bne         |$LN10@ThreadRun@2|

; 1506 :             m_BulverUSBDevice.OTGSetupFeature();

  0003c	e5943018	 ldr         r3, [r4, #0x18]
  00040	e1a00003	 mov         r0, r3
  00044	e58350e0	 str         r5, [r3, #0xE0]
  00048	eb000000	 bl          |?ISTProcess@BulUsbDevice@@IAAXXZ|
  0004c	e5943004	 ldr         r3, [r4, #4]
  00050	e3530000	 cmp         r3, #0
  00054	0affffef	 beq         |$LL4@ThreadRun@2|
  00058		 |$LN10@ThreadRun@2|

; 1507 :         }
; 1508 :         else
; 1509 :             break;
; 1510 :     }
; 1511 :     return 0;

  00058	e3a00000	 mov         r0, #0

; 1512 : }

  0005c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M40487|

			 ENDP  ; |?ThreadRun@BulOTGEventThread@@EAAKXZ|, BulOTGEventThread::ThreadRun

	EXPORT	|??1BulUsbDevice@@UAA@XZ|		; BulUsbDevice::~BulUsbDevice
	IMPORT	|CloseBusAccessHandle|
	IMPORT	|MmUnmapIoSpace|
	IMPORT	|InterruptDisable|

  00000			 AREA	 |.pdata|, PDATA
|$T40561| DCD	|$LN49@BulUsbDevi@2|
	DCD	0x40005301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1BulUsbDevice@@UAA@XZ| PROC		; BulUsbDevice::~BulUsbDevice

; 736  : {

  00000		 |$LN49@BulUsbDevi@2|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M40558|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3138	 ldr         r3, [pc, #0x138]

; 737  :     if (m_pOTGEventThread)

  0000c	e59420ec	 ldr         r2, [r4, #0xEC]
  00010	e5843000	 str         r3, [r4]
  00014	e1b05002	 movs        r5, r2
  00018	0a000003	 beq         |$LN15@BulUsbDevi@2|

; 738  :         delete m_pOTGEventThread;

  0001c	e1a00005	 mov         r0, r5
  00020	eb000000	 bl          |??1BulOTGEventThread@@QAA@XZ|
  00024	e1a00005	 mov         r0, r5
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN15@BulUsbDevi@2|

; 739  :     if (m_hISTEvent) {

  0002c	e59430a8	 ldr         r3, [r4, #0xA8]
  00030	e3530000	 cmp         r3, #0
  00034	0a00000e	 beq         |$LN7@BulUsbDevi@2|

; 740  :         m_bTerminated=TRUE;

  00038	e3a05001	 mov         r5, #1

; 741  :         ThreadStart();

  0003c	e1a00004	 mov         r0, r4
  00040	e5845004	 str         r5, [r4, #4]
  00044	eb000000	 bl          |?ThreadStart@CMiniThread@@QAAHXZ|

; 742  :         SetEvent(m_hISTEvent);

  00048	e59400a8	 ldr         r0, [r4, #0xA8]
  0004c	e3a01003	 mov         r1, #3
  00050	eb000000	 bl          EventModify

; 743  :         ThreadTerminated(1000);

  00054	e3a01ffa	 mov         r1, #0xFA, 30
  00058	e1a00004	 mov         r0, r4
  0005c	e5845004	 str         r5, [r4, #4]
  00060	eb000000	 bl          |?WaitThreadComplete@CMiniThread@@QAAHK@Z|

; 744  :         InterruptDisable( m_dwSysIntr );         

  00064	e59400a4	 ldr         r0, [r4, #0xA4]
  00068	eb000000	 bl          InterruptDisable

; 745  :         CloseHandle(m_hISTEvent);

  0006c	e59400a8	 ldr         r0, [r4, #0xA8]
  00070	eb000000	 bl          CloseHandle
  00074		 |$LN7@BulUsbDevi@2|

; 746  :     };
; 747  :     for (DWORD dwIndex =0 ; dwIndex <MAX_ENDPOINT_NUMBER; dwIndex ++) {

  00074	e3a05000	 mov         r5, #0
  00078	e2846018	 add         r6, r4, #0x18
  0007c		 |$LL6@BulUsbDevi@2|

; 748  :         RemoveObjectBy( dwIndex );

  0007c	e1a01005	 mov         r1, r5
  00080	e1a00006	 mov         r0, r6
  00084	eb000000	 bl          |?RemoveObjectBy@?$CStaticContainer@VBulEndpoint@@$0BI@@@QAAPAVBulEndpoint@@K@Z|
  00088	e2855001	 add         r5, r5, #1
  0008c	e3550018	 cmp         r5, #0x18
  00090	3afffff9	 bcc         |$LL6@BulUsbDevi@2|

; 749  :     }
; 750  :     
; 751  :     if (m_pUsbDevReg!=NULL) {

  00094	e5943098	 ldr         r3, [r4, #0x98]
  00098	e3530000	 cmp         r3, #0
  0009c	0a00000d	 beq         |$LN3@BulUsbDevi@2|

; 752  :         WriteIntrCtr0Register(0);

  000a0	e5943098	 ldr         r3, [r4, #0x98]
  000a4	e3a01000	 mov         r1, #0
  000a8	e2830004	 add         r0, r3, #4
  000ac	eb000000	 bl          WRITE_REGISTER_ULONG

; 753  :         WriteIntrCtr1Register(0);

  000b0	e5943098	 ldr         r3, [r4, #0x98]
  000b4	e3a01000	 mov         r1, #0
  000b8	e2830008	 add         r0, r3, #8
  000bc	eb000000	 bl          WRITE_REGISTER_ULONG

; 754  :         WriteControlRegister(0) ;

  000c0	e5940098	 ldr         r0, [r4, #0x98]
  000c4	e3a01000	 mov         r1, #0
  000c8	eb000000	 bl          WRITE_REGISTER_ULONG

; 755  :         MmUnmapIoSpace((PVOID)m_pUsbDevReg,0UL);

  000cc	e5940098	 ldr         r0, [r4, #0x98]
  000d0	e3a01000	 mov         r1, #0
  000d4	eb000000	 bl          MmUnmapIoSpace
  000d8		 |$LN3@BulUsbDevi@2|

; 756  :     }
; 757  : 
; 758  :     if (m_pDCCLKReg) {

  000d8	e594309c	 ldr         r3, [r4, #0x9C]
  000dc	e3530000	 cmp         r3, #0

; 759  :         m_pDCCLKReg->cken &= ~XLLP_CLKEN_USBCLIENT ;

  000e0	1594209c	 ldrne       r2, [r4, #0x9C]

; 760  :         MmUnmapIoSpace(m_pDCCLKReg,0);

  000e4	13a01000	 movne       r1, #0
  000e8	15923004	 ldrne       r3, [r2, #4]
  000ec	13c33b02	 bicne       r3, r3, #2, 22
  000f0	15823004	 strne       r3, [r2, #4]
  000f4	1594009c	 ldrne       r0, [r4, #0x9C]
  000f8	1b000000	 blne        MmUnmapIoSpace

; 761  :     }
; 762  : 
; 763  :     if (m_hParent)

  000fc	e59430c8	 ldr         r3, [r4, #0xC8]
  00100	e3530000	 cmp         r3, #0

; 764  :         CloseBusAccessHandle(m_hParent);

  00104	11a00003	 movne       r0, r3
  00108	1b000000	 blne        CloseBusAccessHandle

; 765  :     
; 766  : }

  0010c	e28400cc	 add         r0, r4, #0xCC
  00110	eb000000	 bl          DeleteCriticalSection
  00114	e59f3028	 ldr         r3, [pc, #0x28]
  00118	e1a00004	 mov         r0, r4
  0011c	e5843000	 str         r3, [r4]
  00120	eb000000	 bl          |?ForceTerminated@CMiniThread@@QAAHXZ|
  00124	e5b43090	 ldr         r3, [r4, #0x90]!
  00128	e3530000	 cmp         r3, #0
  0012c	11a00003	 movne       r0, r3
  00130	1b000000	 blne        RegCloseKey
  00134	e1a00006	 mov         r0, r6
  00138	eb000000	 bl          |??1?$CStaticContainer@VBulEndpoint@@$0BI@@@QAA@XZ|
  0013c	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00140	e12fff1e	 bx          lr
  00144		 |$LN50@BulUsbDevi@2|
  00144		 |$LN51@BulUsbDevi@2|
  00144	00000000	 DCD         |??_7CMiniThread@@6B@|
  00148		 |$LN52@BulUsbDevi@2|
  00148	00000000	 DCD         |??_7BulUsbDevice@@6B@|
  0014c		 |$M40559|

			 ENDP  ; |??1BulUsbDevice@@UAA@XZ|, BulUsbDevice::~BulUsbDevice


  00000			 AREA	 |.pdata|, PDATA
|$T40575| DCD	|$LN6@scalar@7|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GBulUsbDevice@@UAAPAXI@Z| PROC	; BulUsbDevice::`scalar deleting destructor'
  00000		 |$LN6@scalar@7|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40572|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |??1BulUsbDevice@@UAA@XZ|
  00010	e3140001	 tst         r4, #1
  00014	11a00005	 movne       r0, r5
  00018	1b000000	 blne        |??3@YAXPAX@Z|
  0001c	e1a00005	 mov         r0, r5
  00020	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M40573|

			 ENDP  ; |??_GBulUsbDevice@@UAAPAXI@Z|, BulUsbDevice::`scalar deleting destructor'

	END
