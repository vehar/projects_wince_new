; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\PXA27X_MS_V1\OAL\POWER\off.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.data|, DATA
	 COMMON	|m_SleepData|, 0x198


  00000			 AREA	 |.bss|, NOINIT
|?sleepParamsInit@?1??OEMPowerOff@@9@9| % 0x4		; `OEMPowerOff'::`2'::sleepParamsInit

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|InitSleepParams|
	EXPORT	|OEMPowerOff|
	IMPORT	|BSPPowerOn|
	IMPORT	|OEMInitDebugSerial|
	IMPORT	|XllpPmEnterSleep|
	IMPORT	|KITLIoctl|
	IMPORT	|BSPPowerOff|
	IMPORT	|g_oalWakeSource|

  00000			 AREA	 |.pdata|, PDATA
|$T43285| DCD	|$LN6@OEMPowerOf|
	DCD	0x40003102
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\oal\power\off.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMPowerOff| PROC

; 40   : {

  00000		 |$LN6@OEMPowerOf|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd01c	 sub         sp, sp, #0x1C
  00008		 |$M43282|

; 41   :     BOOL PowerState;
; 42   :     static BOOL sleepParamsInit = FALSE;
; 43   :     
; 44   :     // init sleep params variable
; 45   :     //
; 46   :     if (!sleepParamsInit) {

  00008	e59f30b0	 ldr         r3, [pc, #0xB0]
  0000c	e5933000	 ldr         r3, [r3]
  00010	e3530000	 cmp         r3, #0
  00014	1a000004	 bne         |$LN1@OEMPowerOf|

; 47   :         InitSleepParams(&m_SleepData);

  00018	e59f0098	 ldr         r0, [pc, #0x98]
  0001c	eb000000	 bl          InitSleepParams

; 48   :         sleepParamsInit = TRUE;

  00020	e59f2098	 ldr         r2, [pc, #0x98]
  00024	e3a03001	 mov         r3, #1
  00028	e5823000	 str         r3, [r2]
  0002c		 |$LN1@OEMPowerOf|

; 49   :     }
; 50   : 
; 51   :     // reset global wake-up source variable
; 52   :     //
; 53   :     g_oalWakeSource = SYSWAKE_UNKNOWN;

  0002c	e59f2088	 ldr         r2, [pc, #0x88]
  00030	e3e03000	 mvn         r3, #0
  00034	e5823000	 str         r3, [r2]

; 54   : 
; 55   :     // Give chance to do board specific stuff
; 56   :     // Note: this sets wake-up source register
; 57   :     //
; 58   :     BSPPowerOff();

  00038	eb000000	 bl          BSPPowerOff

; 59   : 
; 60   :     // power off KITL
; 61   :     // 
; 62   :     PowerState = 0;

  0003c	e3a03000	 mov         r3, #0
  00040	e58d3008	 str         r3, [sp, #8]

; 63   :     KITLIoctl (IOCTL_KITL_POWER_CALL, &PowerState, sizeof(PowerState), NULL, 0, NULL);

  00044	e3a03000	 mov         r3, #0
  00048	e58d3004	 str         r3, [sp, #4]
  0004c	e3a03000	 mov         r3, #0
  00050	e58d3000	 str         r3, [sp]
  00054	e3a03000	 mov         r3, #0
  00058	e3a02004	 mov         r2, #4
  0005c	e28d1008	 add         r1, sp, #8
  00060	e59f004c	 ldr         r0, [pc, #0x4C]
  00064	eb000000	 bl          KITLIoctl

; 64   : 
; 65   :     // Sleep
; 66   :     //
; 67   :     XllpPmEnterSleep(&m_SleepData.sleepParameters);

  00068	e59f3048	 ldr         r3, [pc, #0x48]
  0006c	e2830f5d	 add         r0, r3, #0x5D, 30
  00070	eb000000	 bl          XllpPmEnterSleep

; 68   : 
; 69   :     //At this point device returned from sleep
; 70   : 
; 71   :     // turn on the serial port
; 72   :     //
; 73   :     OEMInitDebugSerial ();

  00074	eb000000	 bl          OEMInitDebugSerial

; 74   : 
; 75   :     // Reinitialize KITL
; 76   :     //
; 77   :     PowerState = 1;

  00078	e3a03001	 mov         r3, #1
  0007c	e58d3008	 str         r3, [sp, #8]

; 78   :     KITLIoctl (IOCTL_KITL_POWER_CALL, &PowerState, sizeof(PowerState), NULL, 0, NULL);

  00080	e3a03000	 mov         r3, #0
  00084	e58d3004	 str         r3, [sp, #4]
  00088	e3a03000	 mov         r3, #0
  0008c	e58d3000	 str         r3, [sp]
  00090	e3a03000	 mov         r3, #0
  00094	e3a02004	 mov         r2, #4
  00098	e28d1008	 add         r1, sp, #8
  0009c	e59f0010	 ldr         r0, [pc, #0x10]
  000a0	eb000000	 bl          KITLIoctl

; 79   : 
; 80   :     // Do board specific stuff
; 81   :     // Note: this sets g_oalWakeSource
; 82   :     //
; 83   :     BSPPowerOn();

  000a4	eb000000	 bl          BSPPowerOn

; 84   : 
; 85   : }

  000a8	e28dd01c	 add         sp, sp, #0x1C
  000ac	e49de004	 ldr         lr, [sp], #4
  000b0	e12fff1e	 bx          lr
  000b4		 |$LN7@OEMPowerOf|
  000b4		 |$LN8@OEMPowerOf|
  000b4	01010144	 DCD         0x1010144
  000b8		 |$LN9@OEMPowerOf|
  000b8	00000000	 DCD         |m_SleepData|
  000bc		 |$LN10@OEMPowerOf|
  000bc	00000000	 DCD         |g_oalWakeSource|
  000c0		 |$LN11@OEMPowerOf|
  000c0	00000000	 DCD         |?sleepParamsInit@?1??OEMPowerOff@@9@9|
  000c4		 |$M43283|

			 ENDP  ; |OEMPowerOff|

	IMPORT	|OALVAtoPA|
	IMPORT	|OALPAtoVA|
	IMPORT	|memset|

  00008			 AREA	 |.pdata|, PDATA
|$T43295| DCD	|$LN5@InitSleepP|
	DCD	0x40005004
; Function compile flags: /Odtp

  000c4			 AREA	 |.text|, CODE, ARM

  000c4		 |InitSleepParams| PROC

; 96   : {

  000c4		 |$LN5@InitSleepP|
  000c4	e1a0c00d	 mov         r12, sp
  000c8	e92d0001	 stmdb       sp!, {r0}
  000cc	e92d5000	 stmdb       sp!, {r12, lr}
  000d0	e24dd020	 sub         sp, sp, #0x20
  000d4		 |$M43292|

; 97   : 
; 98   :     struct XLLP_PM_ENTER_SLEEP_PARAMS_S*  pSlpParams = &pSleepData->sleepParameters;

  000d4	e59d3028	 ldr         r3, [sp, #0x28]
  000d8	e2833f5d	 add         r3, r3, #0x5D, 30
  000dc	e58d3000	 str         r3, [sp]

; 99   :          
; 100  :     // Force any unsupported options to not-selected
; 101  :     //
; 102  :     memset (pSlpParams, 0, sizeof (struct XLLP_PM_ENTER_SLEEP_PARAMS_S));

  000e0	e3a02024	 mov         r2, #0x24
  000e4	e3a01000	 mov         r1, #0
  000e8	e59d0000	 ldr         r0, [sp]
  000ec	eb000000	 bl          memset

; 103  : 
; 104  :     //Set regs Uncached addresses. Required by the xllp layer to access, save and restore regs
; 105  :     //
; 106  :     pSlpParams->ProcRegs.UAPwrMgrRegs      = (XLLP_UINT32_T) OALPAtoUA(BULVERDE_BASE_REG_PA_PWR);

  000f0	e3a01000	 mov         r1, #0
  000f4	e3a00101	 mov         r0, #1, 2
  000f8	e380060f	 orr         r0, r0, #0xF, 12
  000fc	eb000000	 bl          OALPAtoVA
  00100	e58d0004	 str         r0, [sp, #4]
  00104	e59d3000	 ldr         r3, [sp]
  00108	e283200c	 add         r2, r3, #0xC
  0010c	e59d3004	 ldr         r3, [sp, #4]
  00110	e5823000	 str         r3, [r2]

; 107  :     pSlpParams->ProcRegs.UAGPIORegs        = (XLLP_UINT32_T) OALPAtoUA(BULVERDE_BASE_REG_PA_GPIO);

  00114	e3a01000	 mov         r1, #0
  00118	e3a00101	 mov         r0, #1, 2
  0011c	e380060e	 orr         r0, r0, #0xE, 12
  00120	eb000000	 bl          OALPAtoVA
  00124	e58d0008	 str         r0, [sp, #8]
  00128	e59d3000	 ldr         r3, [sp]
  0012c	e2832010	 add         r2, r3, #0x10
  00130	e59d3008	 ldr         r3, [sp, #8]
  00134	e5823000	 str         r3, [r2]

; 108  :     pSlpParams->ProcRegs.UAIntcRegs        = (XLLP_UINT32_T) OALPAtoUA(BULVERDE_BASE_REG_PA_INTC);

  00138	e3a01000	 mov         r1, #0
  0013c	e3a00101	 mov         r0, #1, 2
  00140	e380060d	 orr         r0, r0, #0xD, 12
  00144	eb000000	 bl          OALPAtoVA
  00148	e58d000c	 str         r0, [sp, #0xC]
  0014c	e59d3000	 ldr         r3, [sp]
  00150	e2832014	 add         r2, r3, #0x14
  00154	e59d300c	 ldr         r3, [sp, #0xC]
  00158	e5823000	 str         r3, [r2]

; 109  :     pSlpParams->ProcRegs.UAIMControlReg    = (XLLP_UINT32_T) OALPAtoUA(BULVERDE_BASE_REG_PA_IMCONTROL);

  0015c	e3a01000	 mov         r1, #0
  00160	e3a00316	 mov         r0, #0x16, 6
  00164	eb000000	 bl          OALPAtoVA
  00168	e58d0010	 str         r0, [sp, #0x10]
  0016c	e59d3000	 ldr         r3, [sp]
  00170	e2832020	 add         r2, r3, #0x20
  00174	e59d3010	 ldr         r3, [sp, #0x10]
  00178	e5823000	 str         r3, [r2]

; 110  :     pSlpParams->ProcRegs.UAOSTRegs         = (XLLP_UINT32_T) OALPAtoUA(BULVERDE_BASE_REG_PA_OST);

  0017c	e3a01000	 mov         r1, #0
  00180	e3a00101	 mov         r0, #1, 2
  00184	e380060a	 orr         r0, r0, #0xA, 12
  00188	eb000000	 bl          OALPAtoVA
  0018c	e58d0014	 str         r0, [sp, #0x14]
  00190	e59d3000	 ldr         r3, [sp]
  00194	e2832018	 add         r2, r3, #0x18
  00198	e59d3014	 ldr         r3, [sp, #0x14]
  0019c	e5823000	 str         r3, [r2]

; 111  :     pSlpParams->ProcRegs.UAMEMCRegs        = (XLLP_UINT32_T) OALPAtoUA(BULVERDE_BASE_REG_PA_MEMC);

  001a0	e3a01000	 mov         r1, #0
  001a4	e3a00312	 mov         r0, #0x12, 6
  001a8	eb000000	 bl          OALPAtoVA
  001ac	e58d0018	 str         r0, [sp, #0x18]
  001b0	e59d3000	 ldr         r3, [sp]
  001b4	e283201c	 add         r2, r3, #0x1C
  001b8	e59d3018	 ldr         r3, [sp, #0x18]
  001bc	e5823000	 str         r3, [r2]

; 112  :     
; 113  :     //Set other values
; 114  :     //
; 115  :     pSlpParams->SleepDataAreaPA             = (XLLP_UINT32_T) OALVAtoPA(pSleepData);

  001c0	e59d0028	 ldr         r0, [sp, #0x28]
  001c4	eb000000	 bl          OALVAtoPA
  001c8	e58d001c	 str         r0, [sp, #0x1C]
  001cc	e59d201c	 ldr         r2, [sp, #0x1C]
  001d0	e59d3000	 ldr         r3, [sp]
  001d4	e5832000	 str         r2, [r3]

; 116  :     pSlpParams->SleepDataAreaVA             = (P_XLLP_PM_SLEEP_SAVE_DATA_T) pSleepData;

  001d8	e59d3000	 ldr         r3, [sp]
  001dc	e2832004	 add         r2, r3, #4
  001e0	e59d3028	 ldr         r3, [sp, #0x28]
  001e4	e5823000	 str         r3, [r2]

; 117  :     pSlpParams->PWRMODE                     = XLLP_PM_PWRMODE_DEEPSLEEP;              //deep-sleep by default

  001e8	e59d3000	 ldr         r3, [sp]
  001ec	e2832008	 add         r2, r3, #8
  001f0	e3a03007	 mov         r3, #7
  001f4	e5823000	 str         r3, [r2]

; 118  : 
; 119  : }

  001f8	e28dd020	 add         sp, sp, #0x20
  001fc	e89d6000	 ldmia       sp, {sp, lr}
  00200	e12fff1e	 bx          lr
  00204		 |$M43293|

			 ENDP  ; |InitSleepParams|

	EXPORT	|OALIoCtlHalPresuspend|

  00010			 AREA	 |.pdata|, PDATA
|$T43301| DCD	|$LN5@OALIoCtlHa|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00204			 AREA	 |.text|, CODE, ARM

  00204		 |OALIoCtlHalPresuspend| PROC

; 131  : ) {

  00204		 |$LN5@OALIoCtlHa|
  00204	e1a0c00d	 mov         r12, sp
  00208	e92d000f	 stmdb       sp!, {r0 - r3}
  0020c	e92d5000	 stmdb       sp!, {r12, lr}
  00210	e24dd004	 sub         sp, sp, #4
  00214		 |$M43298|

; 132  :     return TRUE;

  00214	e3a03001	 mov         r3, #1
  00218	e58d3000	 str         r3, [sp]

; 133  : }

  0021c	e59d0000	 ldr         r0, [sp]
  00220	e28dd004	 add         sp, sp, #4
  00224	e89d6000	 ldmia       sp, {sp, lr}
  00228	e12fff1e	 bx          lr
  0022c		 |$M43299|

			 ENDP  ; |OALIoCtlHalPresuspend|

	END
