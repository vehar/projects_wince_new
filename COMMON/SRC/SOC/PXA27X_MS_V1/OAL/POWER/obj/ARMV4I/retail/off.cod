; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\PXA27X_MS_V1\OAL\POWER\off.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.data|, DATA
	 COMMON	|m_SleepData|, 0x198


  00000			 AREA	 |.bss|, NOINIT
|?sleepParamsInit@?1??OEMPowerOff@@9@9| % 0x4		; `OEMPowerOff'::`2'::sleepParamsInit

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|InitSleepParams|
	IMPORT	|OALVAtoPA|
	IMPORT	|OALPAtoVA|
	IMPORT	|memset|
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\oal\power\off.c

  00000			 AREA	 |.pdata|, PDATA
|$T43319| DCD	|$LN5@InitSleepP|
	DCD	0x40002d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |InitSleepParams| PROC

; 96   : {

  00000		 |$LN5@InitSleepP|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M43316|
  00004	e1a04000	 mov         r4, r0

; 97   : 
; 98   :     struct XLLP_PM_ENTER_SLEEP_PARAMS_S*  pSlpParams = &pSleepData->sleepParameters;
; 99   :          
; 100  :     // Force any unsupported options to not-selected
; 101  :     //
; 102  :     memset (pSlpParams, 0, sizeof (struct XLLP_PM_ENTER_SLEEP_PARAMS_S));

  00008	e2840f5d	 add         r0, r4, #0x5D, 30
  0000c	e3a02024	 mov         r2, #0x24
  00010	e3a01000	 mov         r1, #0
  00014	eb000000	 bl          memset
  00018	e3a05101	 mov         r5, #1, 2

; 103  : 
; 104  :     //Set regs Uncached addresses. Required by the xllp layer to access, save and restore regs
; 105  :     //
; 106  :     pSlpParams->ProcRegs.UAPwrMgrRegs      = (XLLP_UINT32_T) OALPAtoUA(BULVERDE_BASE_REG_PA_PWR);

  0001c	e385060f	 orr         r0, r5, #0xF, 12
  00020	e3a01000	 mov         r1, #0
  00024	eb000000	 bl          OALPAtoVA
  00028	e1a03000	 mov         r3, r0

; 107  :     pSlpParams->ProcRegs.UAGPIORegs        = (XLLP_UINT32_T) OALPAtoUA(BULVERDE_BASE_REG_PA_GPIO);

  0002c	e385060e	 orr         r0, r5, #0xE, 12
  00030	e3a01000	 mov         r1, #0
  00034	e5843180	 str         r3, [r4, #0x180]
  00038	eb000000	 bl          OALPAtoVA
  0003c	e1a03000	 mov         r3, r0

; 108  :     pSlpParams->ProcRegs.UAIntcRegs        = (XLLP_UINT32_T) OALPAtoUA(BULVERDE_BASE_REG_PA_INTC);

  00040	e385060d	 orr         r0, r5, #0xD, 12
  00044	e3a01000	 mov         r1, #0
  00048	e5843184	 str         r3, [r4, #0x184]
  0004c	eb000000	 bl          OALPAtoVA
  00050	e1a03000	 mov         r3, r0

; 109  :     pSlpParams->ProcRegs.UAIMControlReg    = (XLLP_UINT32_T) OALPAtoUA(BULVERDE_BASE_REG_PA_IMCONTROL);

  00054	e3a00316	 mov         r0, #0x16, 6
  00058	e3a01000	 mov         r1, #0
  0005c	e5843188	 str         r3, [r4, #0x188]
  00060	eb000000	 bl          OALPAtoVA
  00064	e1a03000	 mov         r3, r0

; 110  :     pSlpParams->ProcRegs.UAOSTRegs         = (XLLP_UINT32_T) OALPAtoUA(BULVERDE_BASE_REG_PA_OST);

  00068	e385060a	 orr         r0, r5, #0xA, 12
  0006c	e3a01000	 mov         r1, #0
  00070	e5843194	 str         r3, [r4, #0x194]
  00074	eb000000	 bl          OALPAtoVA
  00078	e1a03000	 mov         r3, r0

; 111  :     pSlpParams->ProcRegs.UAMEMCRegs        = (XLLP_UINT32_T) OALPAtoUA(BULVERDE_BASE_REG_PA_MEMC);

  0007c	e3a00312	 mov         r0, #0x12, 6
  00080	e3a01000	 mov         r1, #0
  00084	e584318c	 str         r3, [r4, #0x18C]
  00088	eb000000	 bl          OALPAtoVA
  0008c	e1a03000	 mov         r3, r0

; 112  :     
; 113  :     //Set other values
; 114  :     //
; 115  :     pSlpParams->SleepDataAreaPA             = (XLLP_UINT32_T) OALVAtoPA(pSleepData);

  00090	e1a00004	 mov         r0, r4
  00094	e5843190	 str         r3, [r4, #0x190]
  00098	eb000000	 bl          OALVAtoPA

; 116  :     pSlpParams->SleepDataAreaVA             = (P_XLLP_PM_SLEEP_SAVE_DATA_T) pSleepData;
; 117  :     pSlpParams->PWRMODE                     = XLLP_PM_PWRMODE_DEEPSLEEP;              //deep-sleep by default

  0009c	e3a03007	 mov         r3, #7
  000a0	e584317c	 str         r3, [r4, #0x17C]
  000a4	e5840174	 str         r0, [r4, #0x174]
  000a8	e5844178	 str         r4, [r4, #0x178]

; 118  : 
; 119  : }

  000ac	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000b0	e12fff1e	 bx          lr
  000b4		 |$M43317|

			 ENDP  ; |InitSleepParams|

	EXPORT	|OALIoCtlHalPresuspend|

  00000			 AREA	 |.pdata|, PDATA
|$T43328| DCD	|$LN5@OALIoCtlHa|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIoCtlHalPresuspend| PROC

; 131  : ) {

  00000		 |$LN5@OALIoCtlHa|
  00000		 |$M43325|

; 132  :     return TRUE;

  00000	e3a00001	 mov         r0, #1

; 133  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M43326|

			 ENDP  ; |OALIoCtlHalPresuspend|

	EXPORT	|OEMPowerOff|
	IMPORT	|BSPPowerOn|
	IMPORT	|OEMInitDebugSerial|
	IMPORT	|XllpPmEnterSleep|
	IMPORT	|KITLIoctl|
	IMPORT	|BSPPowerOff|
	IMPORT	|g_oalWakeSource|

  00000			 AREA	 |.pdata|, PDATA
|$T43335| DCD	|$LN6@OEMPowerOf|
	DCD	0x40002d02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMPowerOff| PROC

; 40   : {

  00000		 |$LN6@OEMPowerOf|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M43332|

; 41   :     BOOL PowerState;
; 42   :     static BOOL sleepParamsInit = FALSE;
; 43   :     
; 44   :     // init sleep params variable
; 45   :     //
; 46   :     if (!sleepParamsInit) {

  00008	e59f40a0	 ldr         r4, [pc, #0xA0]
  0000c	e59f5098	 ldr         r5, [pc, #0x98]
  00010	e5943000	 ldr         r3, [r4]
  00014	e3530000	 cmp         r3, #0
  00018	1a000003	 bne         |$LN1@OEMPowerOf|

; 47   :         InitSleepParams(&m_SleepData);

  0001c	e1a00005	 mov         r0, r5
  00020	eb000000	 bl          InitSleepParams

; 48   :         sleepParamsInit = TRUE;

  00024	e3a03001	 mov         r3, #1
  00028	e5843000	 str         r3, [r4]
  0002c		 |$LN1@OEMPowerOf|

; 49   :     }
; 50   : 
; 51   :     // reset global wake-up source variable
; 52   :     //
; 53   :     g_oalWakeSource = SYSWAKE_UNKNOWN;

  0002c	e59f3074	 ldr         r3, [pc, #0x74]
  00030	e3e02000	 mvn         r2, #0
  00034	e5832000	 str         r2, [r3]

; 54   : 
; 55   :     // Give chance to do board specific stuff
; 56   :     // Note: this sets wake-up source register
; 57   :     //
; 58   :     BSPPowerOff();

  00038	eb000000	 bl          BSPPowerOff

; 59   : 
; 60   :     // power off KITL
; 61   :     // 
; 62   :     PowerState = 0;
; 63   :     KITLIoctl (IOCTL_KITL_POWER_CALL, &PowerState, sizeof(PowerState), NULL, 0, NULL);

  0003c	e59f0060	 ldr         r0, [pc, #0x60]
  00040	e3a03000	 mov         r3, #0
  00044	e58d3008	 str         r3, [sp, #8]
  00048	e3a04000	 mov         r4, #0
  0004c	e3a03000	 mov         r3, #0
  00050	e3a02004	 mov         r2, #4
  00054	e28d1008	 add         r1, sp, #8
  00058	e58d4004	 str         r4, [sp, #4]
  0005c	e58d4000	 str         r4, [sp]
  00060	eb000000	 bl          KITLIoctl

; 64   : 
; 65   :     // Sleep
; 66   :     //
; 67   :     XllpPmEnterSleep(&m_SleepData.sleepParameters);

  00064	e2850f5d	 add         r0, r5, #0x5D, 30
  00068	eb000000	 bl          XllpPmEnterSleep

; 68   : 
; 69   :     //At this point device returned from sleep
; 70   : 
; 71   :     // turn on the serial port
; 72   :     //
; 73   :     OEMInitDebugSerial ();

  0006c	eb000000	 bl          OEMInitDebugSerial

; 74   : 
; 75   :     // Reinitialize KITL
; 76   :     //
; 77   :     PowerState = 1;
; 78   :     KITLIoctl (IOCTL_KITL_POWER_CALL, &PowerState, sizeof(PowerState), NULL, 0, NULL);

  00070	e59f002c	 ldr         r0, [pc, #0x2C]
  00074	e3a03001	 mov         r3, #1
  00078	e58d3008	 str         r3, [sp, #8]
  0007c	e3a03000	 mov         r3, #0
  00080	e3a02004	 mov         r2, #4
  00084	e28d1008	 add         r1, sp, #8
  00088	e58d4004	 str         r4, [sp, #4]
  0008c	e58d4000	 str         r4, [sp]
  00090	eb000000	 bl          KITLIoctl

; 79   : 
; 80   :     // Do board specific stuff
; 81   :     // Note: this sets g_oalWakeSource
; 82   :     //
; 83   :     BSPPowerOn();

  00094	eb000000	 bl          BSPPowerOn

; 84   : 
; 85   : }

  00098	e28dd00c	 add         sp, sp, #0xC
  0009c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000a0	e12fff1e	 bx          lr
  000a4		 |$LN7@OEMPowerOf|
  000a4		 |$LN8@OEMPowerOf|
  000a4	01010144	 DCD         0x1010144
  000a8		 |$LN9@OEMPowerOf|
  000a8	00000000	 DCD         |g_oalWakeSource|
  000ac		 |$LN10@OEMPowerOf|
  000ac	00000000	 DCD         |m_SleepData|
  000b0		 |$LN11@OEMPowerOf|
  000b0	00000000	 DCD         |?sleepParamsInit@?1??OEMPowerOff@@9@9|
  000b4		 |$M43333|

			 ENDP  ; |OEMPowerOff|

	END
