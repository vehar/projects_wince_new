; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\PXA27X_MS_V1\XLLP\SOURCE\xllp_pccardsocket.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|XllpPCCardPowerOn|
	EXPORT	|XllpPCCardGetVoltageSetting|
	EXPORT	|XllpPCCardConfigureGPIOs|
	EXPORT	|XllpPCCardHWSetup|

  00000			 AREA	 |.pdata|, PDATA
|$T1048| DCD	|$LN9@XllpPCCard|
	DCD	0x40008904
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\xllp\source\xllp_pccardsocket.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |XllpPCCardHWSetup| PROC

; 78   : {

  00000		 |$LN9@XllpPCCard|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd018	 sub         sp, sp, #0x18
  00010		 |$M1045|

; 79   :     volatile XLLP_BCR_T *vpstrMainBLRegs = (volatile XLLP_BCR_T *)pstrSocketHandle->pstrBcrHandle;

  00010	e59d3020	 ldr         r3, [sp, #0x20]
  00014	e2833004	 add         r3, r3, #4
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3004	 str         r3, [sp, #4]

; 80   :     XLLP_STATUS_T ReturnValue = XLLP_STATUS_SUCCESS;

  00020	e3a03000	 mov         r3, #0
  00024	e58d3008	 str         r3, [sp, #8]

; 81   :     XLLP_UINT32_T uiCardVoltage = 0;

  00028	e3a03000	 mov         r3, #0
  0002c	e58d3000	 str         r3, [sp]

; 82   : 
; 83   :     //
; 84   :     //Check the validity of the input arguments to the function
; 85   :     //
; 86   :     if((pstrSocketHandle == XLLP_NULL_PTR))

  00030	e59d3020	 ldr         r3, [sp, #0x20]
  00034	e3530000	 cmp         r3, #0
  00038	1a000001	 bne         |$LN4@XllpPCCard|

; 87   :     {
; 88   :         ReturnValue = XLLP_STATUS_PCCARD_FAILURE;   

  0003c	e3a0300f	 mov         r3, #0xF
  00040	e58d3008	 str         r3, [sp, #8]
  00044		 |$LN4@XllpPCCard|

; 89   :     }
; 90   :     
; 91   :     if(ReturnValue != XLLP_STATUS_PCCARD_FAILURE)

  00044	e59d3008	 ldr         r3, [sp, #8]
  00048	e353000f	 cmp         r3, #0xF
  0004c	0a00006e	 beq         |$LN3@XllpPCCard|

; 92   :     {
; 93   :         XllpPCCardConfigureGPIOs(pstrSocketHandle); 

  00050	e59d0020	 ldr         r0, [sp, #0x20]
  00054	eb000000	 bl          XllpPCCardConfigureGPIOs

; 94   : 
; 95   :         //
; 96   :         //*************************** SOCKET 0 **********************************
; 97   :         //
; 98   :         vpstrMainBLRegs->PCMCIAS0SCR &= ~(XLLP_BCR_PCMCIA_SCR_S0_PWR);

  00058	e59d3004	 ldr         r3, [sp, #4]
  0005c	e28330e0	 add         r3, r3, #0xE0
  00060	e5932000	 ldr         r2, [r3]
  00064	e3e0300f	 mvn         r3, #0xF
  00068	e0022003	 and         r2, r2, r3
  0006c	e59d3004	 ldr         r3, [sp, #4]
  00070	e28330e0	 add         r3, r3, #0xE0
  00074	e5832000	 str         r2, [r3]

; 99   : 
; 100  :         //
; 101  :         //Deassert RESET for Socket 0: bit[4] of the Socket 0 Status Control Register
; 102  :         //
; 103  :         vpstrMainBLRegs->PCMCIAS0SCR &= ~(XLLP_BCR_PCMCIA_SCR_S0_RESET);

  00078	e59d3004	 ldr         r3, [sp, #4]
  0007c	e28330e0	 add         r3, r3, #0xE0
  00080	e5932000	 ldr         r2, [r3]
  00084	e3e03010	 mvn         r3, #0x10
  00088	e0022003	 and         r2, r2, r3
  0008c	e59d3004	 ldr         r3, [sp, #4]
  00090	e28330e0	 add         r3, r3, #0xE0
  00094	e5832000	 str         r2, [r3]

; 104  : 
; 105  :         //
; 106  :         //If a card is inserted, configure the MAX1602EE power IC for
; 107  :         //appropriate power supply to the socket, based on the voltage requirements
; 108  :         //of the card. If no card is present in the socket, then bypass powering
; 109  :         //up the socket at this point
; 110  :         //
; 111  :         ReturnValue = XllpPCCardGetVoltageSetting(pstrSocketHandle, XLLP_PCCARD_SOCKET0, &uiCardVoltage);

  00098	e28d2000	 add         r2, sp, #0
  0009c	e3a01000	 mov         r1, #0
  000a0	e59d0020	 ldr         r0, [sp, #0x20]
  000a4	eb000000	 bl          XllpPCCardGetVoltageSetting
  000a8	e58d0010	 str         r0, [sp, #0x10]
  000ac	e59d3010	 ldr         r3, [sp, #0x10]
  000b0	e58d3008	 str         r3, [sp, #8]

; 112  : 
; 113  :         if(ReturnValue == XLLP_STATUS_SUCCESS)

  000b4	e59d3008	 ldr         r3, [sp, #8]
  000b8	e3530000	 cmp         r3, #0
  000bc	1a000012	 bne         |$LN2@XllpPCCard|

; 114  :         {
; 115  :             XllpPCCardPowerOn(pstrSocketHandle, XLLP_PCCARD_SOCKET0, uiCardVoltage);

  000c0	e59d2000	 ldr         r2, [sp]
  000c4	e3a01000	 mov         r1, #0
  000c8	e59d0020	 ldr         r0, [sp, #0x20]
  000cc	eb000000	 bl          XllpPCCardPowerOn

; 116  : 
; 117  :             //
; 118  :             //Assert RESET for Socket 0: bit[4] of the Socket 0 Status Control Register
; 119  :             //
; 120  :             vpstrMainBLRegs->PCMCIAS0SCR |= XLLP_BCR_PCMCIA_SCR_S0_RESET;

  000d0	e59d3004	 ldr         r3, [sp, #4]
  000d4	e28330e0	 add         r3, r3, #0xE0
  000d8	e5933000	 ldr         r3, [r3]
  000dc	e3832010	 orr         r2, r3, #0x10
  000e0	e59d3004	 ldr         r3, [sp, #4]
  000e4	e28330e0	 add         r3, r3, #0xE0
  000e8	e5832000	 str         r2, [r3]

; 121  : 
; 122  :             //
; 123  :             //Deassert RESET for Socket 0: bit[4] of the Socket 0 Status Control Register
; 124  :             //
; 125  :             vpstrMainBLRegs->PCMCIAS0SCR &= ~(XLLP_BCR_PCMCIA_SCR_S0_RESET);

  000ec	e59d3004	 ldr         r3, [sp, #4]
  000f0	e28330e0	 add         r3, r3, #0xE0
  000f4	e5932000	 ldr         r2, [r3]
  000f8	e3e03010	 mvn         r3, #0x10
  000fc	e0022003	 and         r2, r2, r3
  00100	e59d3004	 ldr         r3, [sp, #4]
  00104	e28330e0	 add         r3, r3, #0xE0
  00108	e5832000	 str         r2, [r3]
  0010c		 |$LN2@XllpPCCard|

; 126  :         }
; 127  : 
; 128  :         //
; 129  :         //*************************** SOCKET 1 **********************************
; 130  :         //
; 131  :         vpstrMainBLRegs->PCMCIAS1SCR &= ~(XLLP_BCR_PCMCIA_SCR_S1_PWR);

  0010c	e59d3004	 ldr         r3, [sp, #4]
  00110	e28330e4	 add         r3, r3, #0xE4
  00114	e5932000	 ldr         r2, [r3]
  00118	e3e0300f	 mvn         r3, #0xF
  0011c	e0022003	 and         r2, r2, r3
  00120	e59d3004	 ldr         r3, [sp, #4]
  00124	e28330e4	 add         r3, r3, #0xE4
  00128	e5832000	 str         r2, [r3]

; 132  : 
; 133  :         //
; 134  :         //Deassert RESET for Socket 1: bit[4] of the Socket 1 Status Control Register
; 135  :         //
; 136  :         vpstrMainBLRegs->PCMCIAS1SCR &= ~(XLLP_BCR_PCMCIA_SCR_S1_RESET);

  0012c	e59d3004	 ldr         r3, [sp, #4]
  00130	e28330e4	 add         r3, r3, #0xE4
  00134	e5932000	 ldr         r2, [r3]
  00138	e3e03010	 mvn         r3, #0x10
  0013c	e0022003	 and         r2, r2, r3
  00140	e59d3004	 ldr         r3, [sp, #4]
  00144	e28330e4	 add         r3, r3, #0xE4
  00148	e5832000	 str         r2, [r3]

; 137  : 
; 138  :         //
; 139  :         //If a card is inserted, configure the MAX1602EE power IC for
; 140  :         //appropriate power supply to the socket, based on the voltage requirements
; 141  :         //of the card. If no card is present in the socket, then bypass powering
; 142  :         //up the socket at this point
; 143  :         //
; 144  :         uiCardVoltage = 0;   //reset the value

  0014c	e3a03000	 mov         r3, #0
  00150	e58d3000	 str         r3, [sp]

; 145  :         ReturnValue = XLLP_STATUS_SUCCESS;   //reset the value

  00154	e3a03000	 mov         r3, #0
  00158	e58d3008	 str         r3, [sp, #8]

; 146  : 
; 147  :         ReturnValue = XllpPCCardGetVoltageSetting(pstrSocketHandle, XLLP_PCCARD_SOCKET1, &uiCardVoltage);

  0015c	e28d2000	 add         r2, sp, #0
  00160	e3a01001	 mov         r1, #1
  00164	e59d0020	 ldr         r0, [sp, #0x20]
  00168	eb000000	 bl          XllpPCCardGetVoltageSetting
  0016c	e58d0014	 str         r0, [sp, #0x14]
  00170	e59d3014	 ldr         r3, [sp, #0x14]
  00174	e58d3008	 str         r3, [sp, #8]

; 148  : 
; 149  :         if(ReturnValue == XLLP_STATUS_SUCCESS)

  00178	e59d3008	 ldr         r3, [sp, #8]
  0017c	e3530000	 cmp         r3, #0
  00180	1a000012	 bne         |$LN1@XllpPCCard|

; 150  :         {
; 151  :             XllpPCCardPowerOn(pstrSocketHandle, XLLP_PCCARD_SOCKET1, uiCardVoltage);

  00184	e59d2000	 ldr         r2, [sp]
  00188	e3a01001	 mov         r1, #1
  0018c	e59d0020	 ldr         r0, [sp, #0x20]
  00190	eb000000	 bl          XllpPCCardPowerOn

; 152  : 
; 153  :             //
; 154  :             //Assert RESET for Socket 1: bit[4] of the Socket 1 Status Control Register
; 155  :             //
; 156  :             vpstrMainBLRegs->PCMCIAS1SCR |= XLLP_BCR_PCMCIA_SCR_S0_RESET;

  00194	e59d3004	 ldr         r3, [sp, #4]
  00198	e28330e4	 add         r3, r3, #0xE4
  0019c	e5933000	 ldr         r3, [r3]
  001a0	e3832010	 orr         r2, r3, #0x10
  001a4	e59d3004	 ldr         r3, [sp, #4]
  001a8	e28330e4	 add         r3, r3, #0xE4
  001ac	e5832000	 str         r2, [r3]

; 157  : 
; 158  :             //
; 159  :             //Deassert RESET for Socket 1: bit[4] of the Socket 1 Status Control Register
; 160  :             //
; 161  :             vpstrMainBLRegs->PCMCIAS1SCR &= ~(XLLP_BCR_PCMCIA_SCR_S0_RESET);

  001b0	e59d3004	 ldr         r3, [sp, #4]
  001b4	e28330e4	 add         r3, r3, #0xE4
  001b8	e5932000	 ldr         r2, [r3]
  001bc	e3e03010	 mvn         r3, #0x10
  001c0	e0022003	 and         r2, r2, r3
  001c4	e59d3004	 ldr         r3, [sp, #4]
  001c8	e28330e4	 add         r3, r3, #0xE4
  001cc	e5832000	 str         r2, [r3]
  001d0		 |$LN1@XllpPCCard|

; 162  :         }
; 163  : 
; 164  :         //
; 165  :         //Route signals to the PC card interface, as opposed to the Baseband controller
; 166  :         //
; 167  :         vpstrMainBLRegs->MISCWR1 |= (XLLP_BCR_MISCWR1_BB_SEL);

  001d0	e59d3004	 ldr         r3, [sp, #4]
  001d4	e2833080	 add         r3, r3, #0x80
  001d8	e5933000	 ldr         r3, [r3]
  001dc	e3832c02	 orr         r2, r3, #2, 24
  001e0	e59d3004	 ldr         r3, [sp, #4]
  001e4	e2833080	 add         r3, r3, #0x80
  001e8	e5832000	 str         r2, [r3]

; 168  :         vpstrMainBLRegs->MISCWR1 &= ~(XLLP_BCR_MISCWR1_BB_SEL);

  001ec	e59d3004	 ldr         r3, [sp, #4]
  001f0	e2833080	 add         r3, r3, #0x80
  001f4	e5932000	 ldr         r2, [r3]
  001f8	e3e03c02	 mvn         r3, #2, 24
  001fc	e0022003	 and         r2, r2, r3
  00200	e59d3004	 ldr         r3, [sp, #4]
  00204	e2833080	 add         r3, r3, #0x80
  00208	e5832000	 str         r2, [r3]
  0020c		 |$LN3@XllpPCCard|

; 169  :     }
; 170  : 
; 171  :     return ReturnValue;

  0020c	e59d3008	 ldr         r3, [sp, #8]
  00210	e58d300c	 str         r3, [sp, #0xC]

; 172  : 
; 173  : } //end XllpPCCardHWSetup()

  00214	e59d000c	 ldr         r0, [sp, #0xC]
  00218	e28dd018	 add         sp, sp, #0x18
  0021c	e89d6000	 ldmia       sp, {sp, lr}
  00220	e12fff1e	 bx          lr
  00224		 |$M1046|

			 ENDP  ; |XllpPCCardHWSetup|

	IMPORT	|XllpUnlock|
	IMPORT	|XllpLock|

  00008			 AREA	 |.pdata|, PDATA
|$T1053| DCD	|$LN5@XllpPCCard@2|
	DCD	0x4000a504
; Function compile flags: /Odtp

  00224			 AREA	 |.text|, CODE, ARM

  00224		 |XllpPCCardConfigureGPIOs| PROC

; 194  : {

  00224		 |$LN5@XllpPCCard@2|
  00224	e1a0c00d	 mov         r12, sp
  00228	e92d0001	 stmdb       sp!, {r0}
  0022c	e92d5000	 stmdb       sp!, {r12, lr}
  00230	e24dd024	 sub         sp, sp, #0x24
  00234		 |$M1050|

; 195  :     XLLP_UINT32_T ulLockID;
; 196  :     volatile XLLP_GPIO_T *vpstrBvdGPIORegs = (volatile XLLP_GPIO_T *)pstrSocketHandle->pstrGpioRegsHandle;

  00234	e59d302c	 ldr         r3, [sp, #0x2C]
  00238	e5933000	 ldr         r3, [r3]
  0023c	e58d3000	 str         r3, [sp]

; 197  : 
; 198  : 
; 199  :     //
; 200  :     //Configure GPIO Output Set registers for active-low, output GPIO pins.This is a required
; 201  :     //step for programming Bulverde GPIOs.
; 202  :     //
; 203  :     ulLockID = XllpLock(GPSR1);

  00240	e3a00008	 mov         r0, #8
  00244	eb000000	 bl          XllpLock
  00248	e58d0008	 str         r0, [sp, #8]
  0024c	e59d3008	 ldr         r3, [sp, #8]
  00250	e58d3004	 str         r3, [sp, #4]

; 204  :     vpstrBvdGPIORegs->GPSR1 |= (XLLP_GPIO_BIT_PCMCIA_nPOE |
; 205  :                                 XLLP_GPIO_BIT_nPWE |
; 206  :                                 XLLP_GPIO_BIT_PCMCIA_nPIOR |
; 207  :                                 XLLP_GPIO_BIT_PCMCIA_nPIOW |
; 208  :                                 XLLP_GPIO_BIT_PCMCIA_nPCE2 |
; 209  :                                 XLLP_GPIO_BIT_PCMCIA_nPREG);

  00254	e59d3000	 ldr         r3, [sp]
  00258	e283301c	 add         r3, r3, #0x1C
  0025c	e5933000	 ldr         r3, [r3]
  00260	e38328cf	 orr         r2, r3, #0xCF, 16
  00264	e59d3000	 ldr         r3, [sp]
  00268	e283301c	 add         r3, r3, #0x1C
  0026c	e5832000	 str         r2, [r3]

; 210  :     XllpUnlock(ulLockID);

  00270	e59d0004	 ldr         r0, [sp, #4]
  00274	eb000000	 bl          XllpUnlock

; 211  : 
; 212  :     ulLockID = XllpLock(GPSR2);

  00278	e3a00009	 mov         r0, #9
  0027c	eb000000	 bl          XllpLock
  00280	e58d000c	 str         r0, [sp, #0xC]
  00284	e59d300c	 ldr         r3, [sp, #0xC]
  00288	e58d3004	 str         r3, [sp, #4]

; 213  :     vpstrBvdGPIORegs->GPSR2 |= (XLLP_GPIO_BIT_PCMCIA_PSKTSEL |
; 214  :                                 XLLP_GPIO_BIT_PCMCIA_nPCE1);

  0028c	e59d3000	 ldr         r3, [sp]
  00290	e2833020	 add         r3, r3, #0x20
  00294	e5933000	 ldr         r3, [r3]
  00298	e3832982	 orr         r2, r3, #0x82, 18
  0029c	e59d3000	 ldr         r3, [sp]
  002a0	e2833020	 add         r3, r3, #0x20
  002a4	e5832000	 str         r2, [r3]

; 215  :     XllpUnlock(ulLockID);

  002a8	e59d0004	 ldr         r0, [sp, #4]
  002ac	eb000000	 bl          XllpUnlock

; 216  : 
; 217  :     //
; 218  :     //Configure GPIO pin directions
; 219  :     //
; 220  :     //PC Card interface GPIO Output pins: GPIO 48, 49, 50, 51, 55, 78 and 79
; 221  :     //PC Card interface GPIO Input pins:  GPIO 56 and 57
; 222  :     ulLockID = XllpLock(GPDR1);

  002b0	e3a00005	 mov         r0, #5
  002b4	eb000000	 bl          XllpLock
  002b8	e58d0010	 str         r0, [sp, #0x10]
  002bc	e59d3010	 ldr         r3, [sp, #0x10]
  002c0	e58d3004	 str         r3, [sp, #4]

; 223  :     vpstrBvdGPIORegs->GPDR1 |= (XLLP_GPIO_BIT_PCMCIA_nPOE |
; 224  :                                 XLLP_GPIO_BIT_nPWE |
; 225  :                                 XLLP_GPIO_BIT_PCMCIA_nPIOR |
; 226  :                                 XLLP_GPIO_BIT_PCMCIA_nPIOW |
; 227  :                                 XLLP_GPIO_BIT_PCMCIA_nPCE2 |
; 228  :                                 XLLP_GPIO_BIT_PCMCIA_nPREG);

  002c4	e59d3000	 ldr         r3, [sp]
  002c8	e2833010	 add         r3, r3, #0x10
  002cc	e5933000	 ldr         r3, [r3]
  002d0	e38328cf	 orr         r2, r3, #0xCF, 16
  002d4	e59d3000	 ldr         r3, [sp]
  002d8	e2833010	 add         r3, r3, #0x10
  002dc	e5832000	 str         r2, [r3]

; 229  : 
; 230  :     vpstrBvdGPIORegs->GPDR1 &= ~(XLLP_GPIO_BIT_PCMCIA_nPWAIT);

  002e0	e59d3000	 ldr         r3, [sp]
  002e4	e2833010	 add         r3, r3, #0x10
  002e8	e5932000	 ldr         r2, [r3]
  002ec	e3e03401	 mvn         r3, #1, 8
  002f0	e0022003	 and         r2, r2, r3
  002f4	e59d3000	 ldr         r3, [sp]
  002f8	e2833010	 add         r3, r3, #0x10
  002fc	e5832000	 str         r2, [r3]

; 231  :     vpstrBvdGPIORegs->GPDR1 &= ~(XLLP_GPIO_BIT_PCMCIA_nIOIS16);

  00300	e59d3000	 ldr         r3, [sp]
  00304	e2833010	 add         r3, r3, #0x10
  00308	e5932000	 ldr         r2, [r3]
  0030c	e3e03402	 mvn         r3, #2, 8
  00310	e0022003	 and         r2, r2, r3
  00314	e59d3000	 ldr         r3, [sp]
  00318	e2833010	 add         r3, r3, #0x10
  0031c	e5832000	 str         r2, [r3]

; 232  :     XllpUnlock(ulLockID);

  00320	e59d0004	 ldr         r0, [sp, #4]
  00324	eb000000	 bl          XllpUnlock

; 233  : 
; 234  :     ulLockID = XllpLock(GPDR2);

  00328	e3a00006	 mov         r0, #6
  0032c	eb000000	 bl          XllpLock
  00330	e58d0014	 str         r0, [sp, #0x14]
  00334	e59d3014	 ldr         r3, [sp, #0x14]
  00338	e58d3004	 str         r3, [sp, #4]

; 235  :     vpstrBvdGPIORegs->GPDR2 |= XLLP_GPIO_BIT_PCMCIA_PSKTSEL;

  0033c	e59d3000	 ldr         r3, [sp]
  00340	e2833014	 add         r3, r3, #0x14
  00344	e5933000	 ldr         r3, [r3]
  00348	e3832902	 orr         r2, r3, #2, 18
  0034c	e59d3000	 ldr         r3, [sp]
  00350	e2833014	 add         r3, r3, #0x14
  00354	e5832000	 str         r2, [r3]

; 236  :     vpstrBvdGPIORegs->GPDR2 |= XLLP_GPIO_BIT_PCMCIA_nPCE1;

  00358	e59d3000	 ldr         r3, [sp]
  0035c	e2833014	 add         r3, r3, #0x14
  00360	e5933000	 ldr         r3, [r3]
  00364	e3832602	 orr         r2, r3, #2, 12
  00368	e59d3000	 ldr         r3, [sp]
  0036c	e2833014	 add         r3, r3, #0x14
  00370	e5832000	 str         r2, [r3]

; 237  :     XllpUnlock(ulLockID);

  00374	e59d0004	 ldr         r0, [sp, #4]
  00378	eb000000	 bl          XllpUnlock

; 238  : 
; 239  :     //
; 240  :     //Configure GPIO pin alternate functions
; 241  :     //
; 242  :     ulLockID = XllpLock(GAFR1_U);

  0037c	e3a00019	 mov         r0, #0x19
  00380	eb000000	 bl          XllpLock
  00384	e58d0018	 str         r0, [sp, #0x18]
  00388	e59d3018	 ldr         r3, [sp, #0x18]
  0038c	e58d3004	 str         r3, [sp, #4]

; 243  :     vpstrBvdGPIORegs->GAFR1_U &= 0xFFF00F00;  //Clear the alternate function bits

  00390	e59d3000	 ldr         r3, [sp]
  00394	e2833060	 add         r3, r3, #0x60
  00398	e5932000	 ldr         r2, [r3]
  0039c	e3e03aff	 mvn         r3, #0xFF, 20
  003a0	e22330ff	 eor         r3, r3, #0xFF
  003a4	e0022003	 and         r2, r2, r3
  003a8	e59d3000	 ldr         r3, [sp]
  003ac	e2833060	 add         r3, r3, #0x60
  003b0	e5832000	 str         r2, [r3]

; 244  :                                               //for GPIO 48, 49, 50, 51, 55, 56 and 57
; 245  :     //Set Alternate Function 2 for GPIO 48, 49, 50, 51 and 55
; 246  :     vpstrBvdGPIORegs->GAFR1_U |= (XLLP_GPIO_AF_BIT_PCMCIA_nPOE |
; 247  :                                   XLLP_GPIO_AF_BIT_nPWE |
; 248  :                                   XLLP_GPIO_AF_BIT_PCMCIA_nPIOR |
; 249  :                                   XLLP_GPIO_AF_BIT_PCMCIA_nPIOW |
; 250  :                                   XLLP_GPIO_AF_BIT_PCMCIA_nPCE2 |
; 251  :                                   XLLP_GPIO_AF_BIT_PCMCIA_nPREG);

  003b4	e59d3000	 ldr         r3, [sp]
  003b8	e2833060	 add         r3, r3, #0x60
  003bc	e5932000	 ldr         r2, [r3]
  003c0	e3a03a0a	 mov         r3, #0xA, 20
  003c4	e38330aa	 orr         r3, r3, #0xAA
  003c8	e1822003	 orr         r2, r2, r3
  003cc	e59d3000	 ldr         r3, [sp]
  003d0	e2833060	 add         r3, r3, #0x60
  003d4	e5832000	 str         r2, [r3]

; 252  : 
; 253  :     //Set Alternate Function 1 for GPIO 56 and 57
; 254  :     vpstrBvdGPIORegs->GAFR1_U |= (XLLP_GPIO_AF_BIT_PCMCIA_nPWAIT |
; 255  :                                   XLLP_GPIO_AF_BIT_PCMCIA_nIOIS16);

  003d8	e59d3000	 ldr         r3, [sp]
  003dc	e2833060	 add         r3, r3, #0x60
  003e0	e5933000	 ldr         r3, [r3]
  003e4	e3832805	 orr         r2, r3, #5, 16
  003e8	e59d3000	 ldr         r3, [sp]
  003ec	e2833060	 add         r3, r3, #0x60
  003f0	e5832000	 str         r2, [r3]

; 256  :     XllpUnlock(ulLockID);

  003f4	e59d0004	 ldr         r0, [sp, #4]
  003f8	eb000000	 bl          XllpUnlock

; 257  : 
; 258  :     ulLockID = XllpLock(GAFR2_L);

  003fc	e3a0001a	 mov         r0, #0x1A
  00400	eb000000	 bl          XllpLock
  00404	e58d001c	 str         r0, [sp, #0x1C]
  00408	e59d301c	 ldr         r3, [sp, #0x1C]
  0040c	e58d3004	 str         r3, [sp, #4]

; 259  :     vpstrBvdGPIORegs->GAFR2_L &= 0x3FFFFFFF;  //Clear the alternate function bits

  00410	e59d3000	 ldr         r3, [sp]
  00414	e2833064	 add         r3, r3, #0x64
  00418	e5932000	 ldr         r2, [r3]
  0041c	e3e03103	 mvn         r3, #3, 2
  00420	e0022003	 and         r2, r2, r3
  00424	e59d3000	 ldr         r3, [sp]
  00428	e2833064	 add         r3, r3, #0x64
  0042c	e5832000	 str         r2, [r3]

; 260  :                                               //for GPIO 79
; 261  :     //Set Alternate Function 1 for GPIO 79
; 262  :     vpstrBvdGPIORegs->GAFR2_L |= XLLP_GPIO_AF_BIT_PCMCIA_PSKTSEL;

  00430	e59d3000	 ldr         r3, [sp]
  00434	e2833064	 add         r3, r3, #0x64
  00438	e5933000	 ldr         r3, [r3]
  0043c	e3832101	 orr         r2, r3, #1, 2
  00440	e59d3000	 ldr         r3, [sp]
  00444	e2833064	 add         r3, r3, #0x64
  00448	e5832000	 str         r2, [r3]

; 263  :     XllpUnlock(ulLockID);

  0044c	e59d0004	 ldr         r0, [sp, #4]
  00450	eb000000	 bl          XllpUnlock

; 264  : 
; 265  :     ulLockID = XllpLock(GAFR2_U);

  00454	e3a0001b	 mov         r0, #0x1B
  00458	eb000000	 bl          XllpLock
  0045c	e58d0020	 str         r0, [sp, #0x20]
  00460	e59d3020	 ldr         r3, [sp, #0x20]
  00464	e58d3004	 str         r3, [sp, #4]

; 266  :     vpstrBvdGPIORegs->GAFR2_U &= 0xFFFFF3FF;  //Clear the alternate function bits for GPIO 85

  00468	e59d3000	 ldr         r3, [sp]
  0046c	e2833068	 add         r3, r3, #0x68
  00470	e5932000	 ldr         r2, [r3]
  00474	e3e03b03	 mvn         r3, #3, 22
  00478	e0022003	 and         r2, r2, r3
  0047c	e59d3000	 ldr         r3, [sp]
  00480	e2833068	 add         r3, r3, #0x68
  00484	e5832000	 str         r2, [r3]

; 267  :     vpstrBvdGPIORegs->GAFR2_U |= XLLP_GPIO_AF_BIT_PCMCIA_nPCE1;

  00488	e59d3000	 ldr         r3, [sp]
  0048c	e2833068	 add         r3, r3, #0x68
  00490	e5933000	 ldr         r3, [r3]
  00494	e3832b01	 orr         r2, r3, #1, 22
  00498	e59d3000	 ldr         r3, [sp]
  0049c	e2833068	 add         r3, r3, #0x68
  004a0	e5832000	 str         r2, [r3]

; 268  :     XllpUnlock(ulLockID);

  004a4	e59d0004	 ldr         r0, [sp, #4]
  004a8	eb000000	 bl          XllpUnlock

; 269  : 
; 270  : } //end XllpPCCardConfigureGPIOs()

  004ac	e28dd024	 add         sp, sp, #0x24
  004b0	e89d6000	 ldmia       sp, {sp, lr}
  004b4	e12fff1e	 bx          lr
  004b8		 |$M1051|

			 ENDP  ; |XllpPCCardConfigureGPIOs|

	EXPORT	|XllpPCCardGetSocketState|

  00010			 AREA	 |.pdata|, PDATA
|$T1059| DCD	|$LN29@XllpPCCard@3|
	DCD	0x4000bf04
; Function compile flags: /Odtp

  004b8			 AREA	 |.text|, CODE, ARM

  004b8		 |XllpPCCardGetSocketState| PROC

; 292  : {

  004b8		 |$LN29@XllpPCCard@3|
  004b8	e1a0c00d	 mov         r12, sp
  004bc	e92d0003	 stmdb       sp!, {r0, r1}
  004c0	e92d5000	 stmdb       sp!, {r12, lr}
  004c4	e24dd00c	 sub         sp, sp, #0xC
  004c8		 |$M1056|

; 293  : 
; 294  :     XLLP_STATUS_T ReturnValue = XLLP_STATUS_SUCCESS;

  004c8	e3a03000	 mov         r3, #0
  004cc	e58d3000	 str         r3, [sp]

; 295  : 
; 296  : 
; 297  :     //Check the validity of the input arguments to the function
; 298  :     if((ushSocketNumber > XLLP_MAINSTONE_MAX_PCCARD_SOCKETS) ||
; 299  :        (pstrSocketHandle == XLLP_NULL_PTR))

  004d0	e1dd31b8	 ldrh        r3, [sp, #0x18]
  004d4	e3530002	 cmp         r3, #2
  004d8	ca000002	 bgt         |$LN23@XllpPCCard@3|
  004dc	e59d3014	 ldr         r3, [sp, #0x14]
  004e0	e3530000	 cmp         r3, #0
  004e4	1a000001	 bne         |$LN24@XllpPCCard@3|
  004e8		 |$LN23@XllpPCCard@3|

; 300  :     {
; 301  :         ReturnValue = XLLP_STATUS_PCCARD_FAILURE;   

  004e8	e3a0300f	 mov         r3, #0xF
  004ec	e58d3000	 str         r3, [sp]
  004f0		 |$LN24@XllpPCCard@3|

; 302  :     }
; 303  : 
; 304  :     if(ReturnValue != XLLP_STATUS_PCCARD_FAILURE)

  004f0	e59d3000	 ldr         r3, [sp]
  004f4	e353000f	 cmp         r3, #0xF
  004f8	0a0000a7	 beq         |$LN22@XllpPCCard@3|

; 305  :     {
; 306  :         switch(ushSocketNumber)

  004fc	e1dd31b8	 ldrh        r3, [sp, #0x18]
  00500	e58d3008	 str         r3, [sp, #8]
  00504	e59d3008	 ldr         r3, [sp, #8]
  00508	e3530000	 cmp         r3, #0
  0050c	0a000003	 beq         |$LN19@XllpPCCard@3|
  00510	e59d3008	 ldr         r3, [sp, #8]
  00514	e3530001	 cmp         r3, #1
  00518	0a00004f	 beq         |$LN10@XllpPCCard@3|
  0051c	ea00009e	 b           |$LN1@XllpPCCard@3|
  00520		 |$LN19@XllpPCCard@3|

; 307  :         {
; 308  :             case XLLP_PCCARD_SOCKET0:
; 309  : 
; 310  :                 //
; 311  :                 //Check the CD status bit[5] of the Socket 0 Status Register. If set, it indicates
; 312  :                 //that a card is either not present or is not properly inserted in the socket. If clear,
; 313  :                 //it indicates that a card is present in the socket.
; 314  :                 //
; 315  :                 if((pstrSocketHandle->pstrBcrHandle->PCMCIAS0SCR) & (XLLP_BCR_PCMCIA_SCR_S0_nCD))

  00520	e59d3014	 ldr         r3, [sp, #0x14]
  00524	e2833004	 add         r3, r3, #4
  00528	e5933000	 ldr         r3, [r3]
  0052c	e28330e0	 add         r3, r3, #0xE0
  00530	e5933000	 ldr         r3, [r3]
  00534	e3130020	 tst         r3, #0x20
  00538	0a000005	 beq         |$LN18@XllpPCCard@3|

; 316  :                 {
; 317  :                     pstrSocketHandle->pstrPCCardSocketState->blSocket0CDState = XLLP_FALSE;

  0053c	e59d3014	 ldr         r3, [sp, #0x14]
  00540	e2833008	 add         r3, r3, #8
  00544	e5932000	 ldr         r2, [r3]
  00548	e3a03000	 mov         r3, #0
  0054c	e5c23000	 strb        r3, [r2]

; 318  :                 }
; 319  :                 else

  00550	ea000004	 b           |$LN17@XllpPCCard@3|
  00554		 |$LN18@XllpPCCard@3|

; 320  :                 {
; 321  :                     pstrSocketHandle->pstrPCCardSocketState->blSocket0CDState = XLLP_TRUE;

  00554	e59d3014	 ldr         r3, [sp, #0x14]
  00558	e2833008	 add         r3, r3, #8
  0055c	e5932000	 ldr         r2, [r3]
  00560	e3a03001	 mov         r3, #1
  00564	e5c23000	 strb        r3, [r2]
  00568		 |$LN17@XllpPCCard@3|

; 322  :                 }
; 323  : 
; 324  :                 //
; 325  :                 //Check the BVD1 status bit[8] of the Socket 0 Status Register. If set, then it
; 326  :                 //indicates that the card status has not changed. If clear, then it indicates that
; 327  :                 //a card status change event has occurred.
; 328  :                 //
; 329  :                 if((pstrSocketHandle->pstrBcrHandle->PCMCIAS0SCR) & (XLLP_BCR_PCMCIA_SCR_S0_nSTSCHG_BVD1))

  00568	e59d3014	 ldr         r3, [sp, #0x14]
  0056c	e2833004	 add         r3, r3, #4
  00570	e5933000	 ldr         r3, [r3]
  00574	e28330e0	 add         r3, r3, #0xE0
  00578	e5933000	 ldr         r3, [r3]
  0057c	e3130c01	 tst         r3, #1, 24
  00580	0a000006	 beq         |$LN16@XllpPCCard@3|

; 330  :                 {
; 331  :                     pstrSocketHandle->pstrPCCardSocketState->blSocket0BVD1State = XLLP_FALSE;

  00584	e59d3014	 ldr         r3, [sp, #0x14]
  00588	e2833008	 add         r3, r3, #8
  0058c	e5933000	 ldr         r3, [r3]
  00590	e2832001	 add         r2, r3, #1
  00594	e3a03000	 mov         r3, #0
  00598	e5c23000	 strb        r3, [r2]

; 332  :                 }
; 333  :                 else

  0059c	ea000005	 b           |$LN15@XllpPCCard@3|
  005a0		 |$LN16@XllpPCCard@3|

; 334  :                 {
; 335  :                     pstrSocketHandle->pstrPCCardSocketState->blSocket0BVD1State = XLLP_TRUE;

  005a0	e59d3014	 ldr         r3, [sp, #0x14]
  005a4	e2833008	 add         r3, r3, #8
  005a8	e5933000	 ldr         r3, [r3]
  005ac	e2832001	 add         r2, r3, #1
  005b0	e3a03001	 mov         r3, #1
  005b4	e5c23000	 strb        r3, [r2]
  005b8		 |$LN15@XllpPCCard@3|

; 336  :                 }
; 337  : 
; 338  :                 //
; 339  :                 //Check the BVD2 status bit[9] of the Socket 0 Status Register. If set, then it
; 340  :                 //indicates that the card status has not changed. If clear, then it indicates that
; 341  :                 //a card status change event has occurred.
; 342  :                 //
; 343  :                 if((pstrSocketHandle->pstrBcrHandle->PCMCIAS0SCR) & (XLLP_BCR_PCMCIA_SCR_S0_nSPKR_BVD2))

  005b8	e59d3014	 ldr         r3, [sp, #0x14]
  005bc	e2833004	 add         r3, r3, #4
  005c0	e5933000	 ldr         r3, [r3]
  005c4	e28330e0	 add         r3, r3, #0xE0
  005c8	e5933000	 ldr         r3, [r3]
  005cc	e3130c02	 tst         r3, #2, 24
  005d0	0a000006	 beq         |$LN14@XllpPCCard@3|

; 344  :                 {
; 345  :                     pstrSocketHandle->pstrPCCardSocketState->blSocket0BVD2State = XLLP_FALSE;

  005d4	e59d3014	 ldr         r3, [sp, #0x14]
  005d8	e2833008	 add         r3, r3, #8
  005dc	e5933000	 ldr         r3, [r3]
  005e0	e2832002	 add         r2, r3, #2
  005e4	e3a03000	 mov         r3, #0
  005e8	e5c23000	 strb        r3, [r2]

; 346  :                 }
; 347  :                 else

  005ec	ea000005	 b           |$LN13@XllpPCCard@3|
  005f0		 |$LN14@XllpPCCard@3|

; 348  :                 {
; 349  :                     pstrSocketHandle->pstrPCCardSocketState->blSocket0BVD2State = XLLP_TRUE;

  005f0	e59d3014	 ldr         r3, [sp, #0x14]
  005f4	e2833008	 add         r3, r3, #8
  005f8	e5933000	 ldr         r3, [r3]
  005fc	e2832002	 add         r2, r3, #2
  00600	e3a03001	 mov         r3, #1
  00604	e5c23000	 strb        r3, [r2]
  00608		 |$LN13@XllpPCCard@3|

; 350  :                 }
; 351  : 
; 352  :                 //
; 353  :                 //Check the IREQ status bit[10] of the Socket 0 Status Register. If set, then it
; 354  :                 //indicates that the card is READY (i.e. no interrupt request is pending). If clear,
; 355  :                 //it indicates that the card is BUSY, pending an interrupt request.
; 356  :                 //
; 357  :                 if((pstrSocketHandle->pstrBcrHandle->PCMCIAS0SCR) & (XLLP_BCR_PCMCIA_SCR_S0_nIRQ))

  00608	e59d3014	 ldr         r3, [sp, #0x14]
  0060c	e2833004	 add         r3, r3, #4
  00610	e5933000	 ldr         r3, [r3]
  00614	e28330e0	 add         r3, r3, #0xE0
  00618	e5933000	 ldr         r3, [r3]
  0061c	e3130b01	 tst         r3, #1, 22
  00620	0a000006	 beq         |$LN12@XllpPCCard@3|

; 358  :                 {
; 359  :                     pstrSocketHandle->pstrPCCardSocketState->blSocket0IREQState = XLLP_TRUE;

  00624	e59d3014	 ldr         r3, [sp, #0x14]
  00628	e2833008	 add         r3, r3, #8
  0062c	e5933000	 ldr         r3, [r3]
  00630	e2832003	 add         r2, r3, #3
  00634	e3a03001	 mov         r3, #1
  00638	e5c23000	 strb        r3, [r2]

; 360  :                 }
; 361  :                 else

  0063c	ea000005	 b           |$LN11@XllpPCCard@3|
  00640		 |$LN12@XllpPCCard@3|

; 362  :                 {
; 363  :                     pstrSocketHandle->pstrPCCardSocketState->blSocket0IREQState = XLLP_FALSE;

  00640	e59d3014	 ldr         r3, [sp, #0x14]
  00644	e2833008	 add         r3, r3, #8
  00648	e5933000	 ldr         r3, [r3]
  0064c	e2832003	 add         r2, r3, #3
  00650	e3a03000	 mov         r3, #0
  00654	e5c23000	 strb        r3, [r2]
  00658		 |$LN11@XllpPCCard@3|

; 364  :                 }
; 365  : 
; 366  :                 break;

  00658	ea00004f	 b           |$LN20@XllpPCCard@3|
  0065c		 |$LN10@XllpPCCard@3|

; 367  : 
; 368  :             case XLLP_PCCARD_SOCKET1:
; 369  : 
; 370  :                 //
; 371  :                 //Check the CD status bit[5] of the Socket 1 Status Register. If set, it indicates
; 372  :                 //that a card is either not present or is not properly inserted in the socket. If clear,
; 373  :                 //it indicates that a card is present in the socket.
; 374  :                 //
; 375  :                 if((pstrSocketHandle->pstrBcrHandle->PCMCIAS1SCR) & (XLLP_BCR_PCMCIA_SCR_S1_nCD))

  0065c	e59d3014	 ldr         r3, [sp, #0x14]
  00660	e2833004	 add         r3, r3, #4
  00664	e5933000	 ldr         r3, [r3]
  00668	e28330e4	 add         r3, r3, #0xE4
  0066c	e5933000	 ldr         r3, [r3]
  00670	e3130020	 tst         r3, #0x20
  00674	0a000006	 beq         |$LN9@XllpPCCard@3|

; 376  :                 {
; 377  :                     pstrSocketHandle->pstrPCCardSocketState->blSocket1CDState = XLLP_FALSE;

  00678	e59d3014	 ldr         r3, [sp, #0x14]
  0067c	e2833008	 add         r3, r3, #8
  00680	e5933000	 ldr         r3, [r3]
  00684	e2832004	 add         r2, r3, #4
  00688	e3a03000	 mov         r3, #0
  0068c	e5c23000	 strb        r3, [r2]

; 378  :                 }
; 379  :                 else

  00690	ea000005	 b           |$LN8@XllpPCCard@3|
  00694		 |$LN9@XllpPCCard@3|

; 380  :                 {
; 381  :                     pstrSocketHandle->pstrPCCardSocketState->blSocket1CDState = XLLP_TRUE;

  00694	e59d3014	 ldr         r3, [sp, #0x14]
  00698	e2833008	 add         r3, r3, #8
  0069c	e5933000	 ldr         r3, [r3]
  006a0	e2832004	 add         r2, r3, #4
  006a4	e3a03001	 mov         r3, #1
  006a8	e5c23000	 strb        r3, [r2]
  006ac		 |$LN8@XllpPCCard@3|

; 382  :                 }
; 383  : 
; 384  :                 //
; 385  :                 //Check the BVD1 status bit[8] of the Socket 1 Status Register. If set, then it
; 386  :                 //indicates that the card status has not changed. If clear, then it indicates that
; 387  :                 //a card status change event has occurred.
; 388  :                 //
; 389  :                 if((pstrSocketHandle->pstrBcrHandle->PCMCIAS1SCR) & (XLLP_BCR_PCMCIA_SCR_S1_nSTSCHG_BVD1))

  006ac	e59d3014	 ldr         r3, [sp, #0x14]
  006b0	e2833004	 add         r3, r3, #4
  006b4	e5933000	 ldr         r3, [r3]
  006b8	e28330e4	 add         r3, r3, #0xE4
  006bc	e5933000	 ldr         r3, [r3]
  006c0	e3130c01	 tst         r3, #1, 24
  006c4	0a000006	 beq         |$LN7@XllpPCCard@3|

; 390  :                 {
; 391  :                     pstrSocketHandle->pstrPCCardSocketState->blSocket1BVD1State = XLLP_FALSE;

  006c8	e59d3014	 ldr         r3, [sp, #0x14]
  006cc	e2833008	 add         r3, r3, #8
  006d0	e5933000	 ldr         r3, [r3]
  006d4	e2832005	 add         r2, r3, #5
  006d8	e3a03000	 mov         r3, #0
  006dc	e5c23000	 strb        r3, [r2]

; 392  :                 }
; 393  :                 else

  006e0	ea000005	 b           |$LN6@XllpPCCard@3|
  006e4		 |$LN7@XllpPCCard@3|

; 394  :                 {
; 395  :                     pstrSocketHandle->pstrPCCardSocketState->blSocket1BVD1State = XLLP_TRUE;

  006e4	e59d3014	 ldr         r3, [sp, #0x14]
  006e8	e2833008	 add         r3, r3, #8
  006ec	e5933000	 ldr         r3, [r3]
  006f0	e2832005	 add         r2, r3, #5
  006f4	e3a03001	 mov         r3, #1
  006f8	e5c23000	 strb        r3, [r2]
  006fc		 |$LN6@XllpPCCard@3|

; 396  :                 }
; 397  : 
; 398  :                 //
; 399  :                 //Check the BVD2 status bit[9] of the Socket 1 Status Register. If set, then it
; 400  :                 //indicates that the card status has not changed. If clear, then it indicates that
; 401  :                 //a card status change event has occurred.
; 402  :                 //
; 403  :                 if((pstrSocketHandle->pstrBcrHandle->PCMCIAS1SCR) & (XLLP_BCR_PCMCIA_SCR_S1_nSPKR_BVD2))

  006fc	e59d3014	 ldr         r3, [sp, #0x14]
  00700	e2833004	 add         r3, r3, #4
  00704	e5933000	 ldr         r3, [r3]
  00708	e28330e4	 add         r3, r3, #0xE4
  0070c	e5933000	 ldr         r3, [r3]
  00710	e3130c02	 tst         r3, #2, 24
  00714	0a000006	 beq         |$LN5@XllpPCCard@3|

; 404  :                 {
; 405  :                     pstrSocketHandle->pstrPCCardSocketState->blSocket1BVD2State = XLLP_FALSE;

  00718	e59d3014	 ldr         r3, [sp, #0x14]
  0071c	e2833008	 add         r3, r3, #8
  00720	e5933000	 ldr         r3, [r3]
  00724	e2832006	 add         r2, r3, #6
  00728	e3a03000	 mov         r3, #0
  0072c	e5c23000	 strb        r3, [r2]

; 406  :                 }
; 407  :                 else

  00730	ea000005	 b           |$LN4@XllpPCCard@3|
  00734		 |$LN5@XllpPCCard@3|

; 408  :                 {
; 409  :                     pstrSocketHandle->pstrPCCardSocketState->blSocket1BVD2State = XLLP_TRUE;

  00734	e59d3014	 ldr         r3, [sp, #0x14]
  00738	e2833008	 add         r3, r3, #8
  0073c	e5933000	 ldr         r3, [r3]
  00740	e2832006	 add         r2, r3, #6
  00744	e3a03001	 mov         r3, #1
  00748	e5c23000	 strb        r3, [r2]
  0074c		 |$LN4@XllpPCCard@3|

; 410  :                 }
; 411  : 
; 412  :                 //
; 413  :                 //Check the IREQ status bit[10] of the Socket 1 Status Register. If set, then it
; 414  :                 //indicates that the card is READY (i.e. no interrupt request is pending). If clear,
; 415  :                 //it indicates that the card is BUSY, pending an interrupt request.
; 416  :                 //
; 417  :                 if((pstrSocketHandle->pstrBcrHandle->PCMCIAS1SCR) & (XLLP_BCR_PCMCIA_SCR_S1_nIRQ))

  0074c	e59d3014	 ldr         r3, [sp, #0x14]
  00750	e2833004	 add         r3, r3, #4
  00754	e5933000	 ldr         r3, [r3]
  00758	e28330e4	 add         r3, r3, #0xE4
  0075c	e5933000	 ldr         r3, [r3]
  00760	e3130b01	 tst         r3, #1, 22
  00764	0a000006	 beq         |$LN3@XllpPCCard@3|

; 418  :                 {
; 419  :                     pstrSocketHandle->pstrPCCardSocketState->blSocket1IREQState = XLLP_TRUE;

  00768	e59d3014	 ldr         r3, [sp, #0x14]
  0076c	e2833008	 add         r3, r3, #8
  00770	e5933000	 ldr         r3, [r3]
  00774	e2832007	 add         r2, r3, #7
  00778	e3a03001	 mov         r3, #1
  0077c	e5c23000	 strb        r3, [r2]

; 420  :                 }
; 421  :                 else

  00780	ea000005	 b           |$LN2@XllpPCCard@3|
  00784		 |$LN3@XllpPCCard@3|

; 422  :                 {
; 423  :                     pstrSocketHandle->pstrPCCardSocketState->blSocket1IREQState = XLLP_FALSE;

  00784	e59d3014	 ldr         r3, [sp, #0x14]
  00788	e2833008	 add         r3, r3, #8
  0078c	e5933000	 ldr         r3, [r3]
  00790	e2832007	 add         r2, r3, #7
  00794	e3a03000	 mov         r3, #0
  00798	e5c23000	 strb        r3, [r2]
  0079c		 |$LN2@XllpPCCard@3|
  0079c		 |$LN1@XllpPCCard@3|
  0079c		 |$LN20@XllpPCCard@3|
  0079c		 |$LN22@XllpPCCard@3|

; 424  :                 }
; 425  : 
; 426  :                 break;
; 427  : 
; 428  :             default:
; 429  :                 break;
; 430  : 
; 431  :         } //end switch(uSocket)
; 432  : 
; 433  :     } //end if
; 434  : 
; 435  :     return ReturnValue;

  0079c	e59d3000	 ldr         r3, [sp]
  007a0	e58d3004	 str         r3, [sp, #4]

; 436  : 
; 437  : } //end XllpPCCardGetSocketState()

  007a4	e59d0004	 ldr         r0, [sp, #4]
  007a8	e28dd00c	 add         sp, sp, #0xC
  007ac	e89d6000	 ldmia       sp, {sp, lr}
  007b0	e12fff1e	 bx          lr
  007b4		 |$M1057|

			 ENDP  ; |XllpPCCardGetSocketState|

	EXPORT	|XllpPCCardResetSocket|
	IMPORT	|XllpOstDelayMilliSeconds|

  00018			 AREA	 |.pdata|, PDATA
|$T1065| DCD	|$LN27@XllpPCCard@4|
	DCD	0x4000be04
; Function compile flags: /Odtp

  007b4			 AREA	 |.text|, CODE, ARM

  007b4		 |XllpPCCardResetSocket| PROC

; 458  : {

  007b4		 |$LN27@XllpPCCard@4|
  007b4	e1a0c00d	 mov         r12, sp
  007b8	e92d0003	 stmdb       sp!, {r0, r1}
  007bc	e92d5000	 stmdb       sp!, {r12, lr}
  007c0	e24dd018	 sub         sp, sp, #0x18
  007c4		 |$M1062|

; 459  :     XLLP_STATUS_T ReturnValue = XLLP_STATUS_SUCCESS;

  007c4	e3a03000	 mov         r3, #0
  007c8	e58d3004	 str         r3, [sp, #4]

; 460  :     XLLP_BOOL_T blCDStatus = XLLP_FALSE;

  007cc	e3a03000	 mov         r3, #0
  007d0	e58d3000	 str         r3, [sp]

; 461  :     XLLP_BOOL_T blRDYStatus = XLLP_FALSE;

  007d4	e3a03000	 mov         r3, #0
  007d8	e58d300c	 str         r3, [sp, #0xC]

; 462  :     XLLP_UINT16_T t; //loop counter
; 463  : 
; 464  :     //Check the validity of the input arguments to the function
; 465  :     if((ushSocketNumber > XLLP_MAINSTONE_MAX_PCCARD_SOCKETS) ||
; 466  :        (pstrSocketHandle == XLLP_NULL_PTR))

  007dc	e1dd32b4	 ldrh        r3, [sp, #0x24]
  007e0	e3530002	 cmp         r3, #2
  007e4	ca000002	 bgt         |$LN21@XllpPCCard@4|
  007e8	e59d3020	 ldr         r3, [sp, #0x20]
  007ec	e3530000	 cmp         r3, #0
  007f0	1a000001	 bne         |$LN22@XllpPCCard@4|
  007f4		 |$LN21@XllpPCCard@4|

; 467  :     {
; 468  :         ReturnValue = XLLP_STATUS_PCCARD_FAILURE;   

  007f4	e3a0300f	 mov         r3, #0xF
  007f8	e58d3004	 str         r3, [sp, #4]
  007fc		 |$LN22@XllpPCCard@4|

; 469  :     }
; 470  : 
; 471  :     if(ReturnValue != XLLP_STATUS_PCCARD_FAILURE)

  007fc	e59d3004	 ldr         r3, [sp, #4]
  00800	e353000f	 cmp         r3, #0xF
  00804	0a0000a2	 beq         |$LN20@XllpPCCard@4|

; 472  :     {
; 473  :         switch(ushSocketNumber)

  00808	e1dd32b4	 ldrh        r3, [sp, #0x24]
  0080c	e58d3014	 str         r3, [sp, #0x14]
  00810	e59d3014	 ldr         r3, [sp, #0x14]
  00814	e3530000	 cmp         r3, #0
  00818	0a000003	 beq         |$LN17@XllpPCCard@4|
  0081c	e59d3014	 ldr         r3, [sp, #0x14]
  00820	e3530001	 cmp         r3, #1
  00824	0a00004c	 beq         |$LN9@XllpPCCard@4|
  00828	ea000097	 b           |$LN1@XllpPCCard@4|
  0082c		 |$LN17@XllpPCCard@4|

; 474  :         {
; 475  :             case XLLP_PCCARD_SOCKET0:
; 476  : 
; 477  :                 //
; 478  :                 //Check if a card is inserted in the socket
; 479  :                 //
; 480  :                 blCDStatus = ((pstrSocketHandle->pstrBcrHandle->PCMCIAS0SCR) & (XLLP_BCR_PCMCIA_SCR_S0_nCD));

  0082c	e59d3020	 ldr         r3, [sp, #0x20]
  00830	e2833004	 add         r3, r3, #4
  00834	e5933000	 ldr         r3, [r3]
  00838	e28330e0	 add         r3, r3, #0xE0
  0083c	e5933000	 ldr         r3, [r3]
  00840	e2033020	 and         r3, r3, #0x20
  00844	e58d3000	 str         r3, [sp]

; 481  : 
; 482  :                 //
; 483  :                 //If the CD status bit is *not* set in the PC Card Status register,
; 484  :                 //it implies that a card is properly inserted. Reset the socket
; 485  :                 //in that case.
; 486  :                 //
; 487  :                 if(!blCDStatus)

  00848	e59d3000	 ldr         r3, [sp]
  0084c	e3530000	 cmp         r3, #0
  00850	1a00003e	 bne         |$LN16@XllpPCCard@4|

; 488  :                 {
; 489  :                     //Assert reset
; 490  :                     (pstrSocketHandle->pstrBcrHandle->PCMCIAS0SCR) |= (XLLP_BCR_PCMCIA_SCR_S0_RESET);

  00854	e59d3020	 ldr         r3, [sp, #0x20]
  00858	e2833004	 add         r3, r3, #4
  0085c	e5933000	 ldr         r3, [r3]
  00860	e28330e0	 add         r3, r3, #0xE0
  00864	e5933000	 ldr         r3, [r3]
  00868	e3832010	 orr         r2, r3, #0x10
  0086c	e59d3020	 ldr         r3, [sp, #0x20]
  00870	e2833004	 add         r3, r3, #4
  00874	e5933000	 ldr         r3, [r3]
  00878	e28330e0	 add         r3, r3, #0xE0
  0087c	e5832000	 str         r2, [r3]

; 491  : 
; 492  : 					// Wait long enough for the device to notice.
; 493  :                     XllpOstDelayMilliSeconds(pstrSocketHandle->pstrOstRegsHandle,200);

  00880	e3a010c8	 mov         r1, #0xC8
  00884	e59d3020	 ldr         r3, [sp, #0x20]
  00888	e283300c	 add         r3, r3, #0xC
  0088c	e5930000	 ldr         r0, [r3]
  00890	eb000000	 bl          XllpOstDelayMilliSeconds

; 494  : 
; 495  :                     //Clear reset
; 496  :                     (pstrSocketHandle->pstrBcrHandle->PCMCIAS0SCR) &= ~(XLLP_BCR_PCMCIA_SCR_S0_RESET);

  00894	e59d3020	 ldr         r3, [sp, #0x20]
  00898	e2833004	 add         r3, r3, #4
  0089c	e5933000	 ldr         r3, [r3]
  008a0	e28330e0	 add         r3, r3, #0xE0
  008a4	e5932000	 ldr         r2, [r3]
  008a8	e3e03010	 mvn         r3, #0x10
  008ac	e0022003	 and         r2, r2, r3
  008b0	e59d3020	 ldr         r3, [sp, #0x20]
  008b4	e2833004	 add         r3, r3, #4
  008b8	e5933000	 ldr         r3, [r3]
  008bc	e28330e0	 add         r3, r3, #0xE0
  008c0	e5832000	 str         r2, [r3]

; 497  : 
; 498  :                     //Wait for the READY signal to be set.This will indicate that the socket
; 499  :                     XllpOstDelayMilliSeconds(pstrSocketHandle->pstrOstRegsHandle,20);

  008c4	e3a01014	 mov         r1, #0x14
  008c8	e59d3020	 ldr         r3, [sp, #0x20]
  008cc	e283300c	 add         r3, r3, #0xC
  008d0	e5930000	 ldr         r0, [r3]
  008d4	eb000000	 bl          XllpOstDelayMilliSeconds

; 500  :                     //is interrupt-ready and can function normally now.
; 501  :                     for(t = 0; t < XLLP_PCCARD_MAX_READY_WAIT_TIME;  t += XLLP_PCCARD_READY_POLL_INTERVAL)

  008d8	e3a03000	 mov         r3, #0
  008dc	e1cd30b8	 strh        r3, [sp, #8]
  008e0	ea000004	 b           |$LN15@XllpPCCard@4|
  008e4		 |$LN14@XllpPCCard@4|
  008e4	e1dd30b8	 ldrh        r3, [sp, #8]
  008e8	e2833032	 add         r3, r3, #0x32
  008ec	e1a03803	 mov         r3, r3, lsl #16
  008f0	e1a03823	 mov         r3, r3, lsr #16
  008f4	e1cd30b8	 strh        r3, [sp, #8]
  008f8		 |$LN15@XllpPCCard@4|
  008f8	e1dd30b8	 ldrh        r3, [sp, #8]
  008fc	e3530e7d	 cmp         r3, #0x7D, 28
  00900	aa000011	 bge         |$LN13@XllpPCCard@4|

; 502  :                     {
; 503  :                         blRDYStatus = ((pstrSocketHandle->pstrBcrHandle->PCMCIAS0SCR) &
; 504  :                                                              (XLLP_BCR_PCMCIA_SCR_S0_nIRQ));

  00904	e59d3020	 ldr         r3, [sp, #0x20]
  00908	e2833004	 add         r3, r3, #4
  0090c	e5933000	 ldr         r3, [r3]
  00910	e28330e0	 add         r3, r3, #0xE0
  00914	e5933000	 ldr         r3, [r3]
  00918	e2033b01	 and         r3, r3, #1, 22
  0091c	e58d300c	 str         r3, [sp, #0xC]

; 505  : 
; 506  :                         if(!blRDYStatus)

  00920	e59d300c	 ldr         r3, [sp, #0xC]
  00924	e3530000	 cmp         r3, #0
  00928	1a000005	 bne         |$LN12@XllpPCCard@4|

; 507  :                         {
; 508  :                             XllpOstDelayMilliSeconds(pstrSocketHandle->pstrOstRegsHandle,
; 509  :                                                      XLLP_PCCARD_READY_POLL_INTERVAL);                          

  0092c	e3a01032	 mov         r1, #0x32
  00930	e59d3020	 ldr         r3, [sp, #0x20]
  00934	e283300c	 add         r3, r3, #0xC
  00938	e5930000	 ldr         r0, [r3]
  0093c	eb000000	 bl          XllpOstDelayMilliSeconds

; 510  :                         }
; 511  :                         else

  00940	ea000000	 b           |$LN11@XllpPCCard@4|
  00944		 |$LN12@XllpPCCard@4|

; 512  :                         {
; 513  :                             break;

  00944	ea000000	 b           |$LN13@XllpPCCard@4|
  00948		 |$LN11@XllpPCCard@4|

; 514  :                         }
; 515  :                     } //end for loop

  00948	eaffffe5	 b           |$LN14@XllpPCCard@4|
  0094c		 |$LN13@XllpPCCard@4|

; 516  : 
; 517  :                 }
; 518  :                 //If no card is inserted or if a card is not properly inserted, then tri-
; 519  :                 //state the socket.
; 520  :                 else

  0094c	ea000001	 b           |$LN10@XllpPCCard@4|
  00950		 |$LN16@XllpPCCard@4|

; 521  :                 {
; 522  :                     //Tri-state the socket here.
; 523  :                     ReturnValue = XLLP_STATUS_PCCARD_FAILURE;

  00950	e3a0300f	 mov         r3, #0xF
  00954	e58d3004	 str         r3, [sp, #4]
  00958		 |$LN10@XllpPCCard@4|

; 524  :                 }
; 525  : 
; 526  :             break;

  00958	ea00004d	 b           |$LN18@XllpPCCard@4|
  0095c		 |$LN9@XllpPCCard@4|

; 527  : 
; 528  :             case XLLP_PCCARD_SOCKET1:
; 529  :                 //Check if a card is inserted in the socket
; 530  :                 blCDStatus = ((pstrSocketHandle->pstrBcrHandle->PCMCIAS1SCR) &
; 531  :                                                      (XLLP_BCR_PCMCIA_SCR_S1_nCD));

  0095c	e59d3020	 ldr         r3, [sp, #0x20]
  00960	e2833004	 add         r3, r3, #4
  00964	e5933000	 ldr         r3, [r3]
  00968	e28330e4	 add         r3, r3, #0xE4
  0096c	e5933000	 ldr         r3, [r3]
  00970	e2033020	 and         r3, r3, #0x20
  00974	e58d3000	 str         r3, [sp]

; 532  : 
; 533  :                 //If the CD status bit is *not* set in the PC Card Status register,
; 534  :                 //it implies that a card is properly inserted. Reset the socket
; 535  :                 //in that case.
; 536  :                 if(!blCDStatus)

  00978	e59d3000	 ldr         r3, [sp]
  0097c	e3530000	 cmp         r3, #0
  00980	1a00003e	 bne         |$LN8@XllpPCCard@4|

; 537  :                 {
; 538  :                     //Assert reset
; 539  :                     (pstrSocketHandle->pstrBcrHandle->PCMCIAS1SCR) |=
; 540  :                                           (XLLP_BCR_PCMCIA_SCR_S1_RESET);

  00984	e59d3020	 ldr         r3, [sp, #0x20]
  00988	e2833004	 add         r3, r3, #4
  0098c	e5933000	 ldr         r3, [r3]
  00990	e28330e4	 add         r3, r3, #0xE4
  00994	e5933000	 ldr         r3, [r3]
  00998	e3832010	 orr         r2, r3, #0x10
  0099c	e59d3020	 ldr         r3, [sp, #0x20]
  009a0	e2833004	 add         r3, r3, #4
  009a4	e5933000	 ldr         r3, [r3]
  009a8	e28330e4	 add         r3, r3, #0xE4
  009ac	e5832000	 str         r2, [r3]

; 541  : 
; 542  : 					// Wait long enough for the device to notice.
; 543  :                     XllpOstDelayMilliSeconds(pstrSocketHandle->pstrOstRegsHandle,200);

  009b0	e3a010c8	 mov         r1, #0xC8
  009b4	e59d3020	 ldr         r3, [sp, #0x20]
  009b8	e283300c	 add         r3, r3, #0xC
  009bc	e5930000	 ldr         r0, [r3]
  009c0	eb000000	 bl          XllpOstDelayMilliSeconds

; 544  : 
; 545  :                     //Clear reset
; 546  :                     (pstrSocketHandle->pstrBcrHandle->PCMCIAS1SCR) &=
; 547  :                                          ~(XLLP_BCR_PCMCIA_SCR_S1_RESET);

  009c4	e59d3020	 ldr         r3, [sp, #0x20]
  009c8	e2833004	 add         r3, r3, #4
  009cc	e5933000	 ldr         r3, [r3]
  009d0	e28330e4	 add         r3, r3, #0xE4
  009d4	e5932000	 ldr         r2, [r3]
  009d8	e3e03010	 mvn         r3, #0x10
  009dc	e0022003	 and         r2, r2, r3
  009e0	e59d3020	 ldr         r3, [sp, #0x20]
  009e4	e2833004	 add         r3, r3, #4
  009e8	e5933000	 ldr         r3, [r3]
  009ec	e28330e4	 add         r3, r3, #0xE4
  009f0	e5832000	 str         r2, [r3]

; 548  :                     XllpOstDelayMilliSeconds(pstrSocketHandle->pstrOstRegsHandle,20);

  009f4	e3a01014	 mov         r1, #0x14
  009f8	e59d3020	 ldr         r3, [sp, #0x20]
  009fc	e283300c	 add         r3, r3, #0xC
  00a00	e5930000	 ldr         r0, [r3]
  00a04	eb000000	 bl          XllpOstDelayMilliSeconds

; 549  : 
; 550  : 
; 551  :                     //Wait for the READY signal to be set.This will indicate that the socket
; 552  :                     //is interrupt-ready and can function normally now.
; 553  :                     for(t = 0; t < XLLP_PCCARD_MAX_READY_WAIT_TIME;  t += XLLP_PCCARD_READY_POLL_INTERVAL)

  00a08	e3a03000	 mov         r3, #0
  00a0c	e1cd30b8	 strh        r3, [sp, #8]
  00a10	ea000004	 b           |$LN7@XllpPCCard@4|
  00a14		 |$LN6@XllpPCCard@4|
  00a14	e1dd30b8	 ldrh        r3, [sp, #8]
  00a18	e2833032	 add         r3, r3, #0x32
  00a1c	e1a03803	 mov         r3, r3, lsl #16
  00a20	e1a03823	 mov         r3, r3, lsr #16
  00a24	e1cd30b8	 strh        r3, [sp, #8]
  00a28		 |$LN7@XllpPCCard@4|
  00a28	e1dd30b8	 ldrh        r3, [sp, #8]
  00a2c	e3530e7d	 cmp         r3, #0x7D, 28
  00a30	aa000011	 bge         |$LN5@XllpPCCard@4|

; 554  :                     {
; 555  :                         blRDYStatus = ((pstrSocketHandle->pstrBcrHandle->PCMCIAS1SCR) &
; 556  :                                                              (XLLP_BCR_PCMCIA_SCR_S1_nIRQ));

  00a34	e59d3020	 ldr         r3, [sp, #0x20]
  00a38	e2833004	 add         r3, r3, #4
  00a3c	e5933000	 ldr         r3, [r3]
  00a40	e28330e4	 add         r3, r3, #0xE4
  00a44	e5933000	 ldr         r3, [r3]
  00a48	e2033b01	 and         r3, r3, #1, 22
  00a4c	e58d300c	 str         r3, [sp, #0xC]

; 557  : 
; 558  :                         if(!blRDYStatus)

  00a50	e59d300c	 ldr         r3, [sp, #0xC]
  00a54	e3530000	 cmp         r3, #0
  00a58	1a000005	 bne         |$LN4@XllpPCCard@4|

; 559  :                         {
; 560  :                             XllpOstDelayMilliSeconds(pstrSocketHandle->pstrOstRegsHandle,
; 561  :                                                      XLLP_PCCARD_READY_POLL_INTERVAL);

  00a5c	e3a01032	 mov         r1, #0x32
  00a60	e59d3020	 ldr         r3, [sp, #0x20]
  00a64	e283300c	 add         r3, r3, #0xC
  00a68	e5930000	 ldr         r0, [r3]
  00a6c	eb000000	 bl          XllpOstDelayMilliSeconds

; 562  :                         }
; 563  :                         else

  00a70	ea000000	 b           |$LN3@XllpPCCard@4|
  00a74		 |$LN4@XllpPCCard@4|

; 564  :                         {
; 565  :                             break;

  00a74	ea000000	 b           |$LN5@XllpPCCard@4|
  00a78		 |$LN3@XllpPCCard@4|

; 566  :                         }
; 567  :                     } //end for loop

  00a78	eaffffe5	 b           |$LN6@XllpPCCard@4|
  00a7c		 |$LN5@XllpPCCard@4|

; 568  : 
; 569  :                 }
; 570  :                 //If no card is inserted or if a card is not properly inserted, then tri-
; 571  :                 //state the socket.
; 572  :                 else

  00a7c	ea000001	 b           |$LN2@XllpPCCard@4|
  00a80		 |$LN8@XllpPCCard@4|

; 573  :                 {
; 574  :                     //Tri-state the socket here
; 575  :                     ReturnValue = XLLP_STATUS_PCCARD_FAILURE;

  00a80	e3a0300f	 mov         r3, #0xF
  00a84	e58d3004	 str         r3, [sp, #4]
  00a88		 |$LN2@XllpPCCard@4|

; 576  :                 }
; 577  : 
; 578  :             break;

  00a88	ea000001	 b           |$LN18@XllpPCCard@4|
  00a8c		 |$LN1@XllpPCCard@4|

; 579  : 
; 580  :             default:
; 581  :                 //TBD. Should not be here at all!!
; 582  :                 ReturnValue = XLLP_STATUS_PCCARD_FAILURE;

  00a8c	e3a0300f	 mov         r3, #0xF
  00a90	e58d3004	 str         r3, [sp, #4]
  00a94		 |$LN18@XllpPCCard@4|
  00a94		 |$LN20@XllpPCCard@4|

; 583  : 
; 584  :             break;
; 585  :         } //end switch
; 586  : 
; 587  :     } //end if
; 588  : 
; 589  :     return ReturnValue;

  00a94	e59d3004	 ldr         r3, [sp, #4]
  00a98	e58d3010	 str         r3, [sp, #0x10]

; 590  : 
; 591  : } //end XllpPCCardResetSocket()

  00a9c	e59d0010	 ldr         r0, [sp, #0x10]
  00aa0	e28dd018	 add         sp, sp, #0x18
  00aa4	e89d6000	 ldmia       sp, {sp, lr}
  00aa8	e12fff1e	 bx          lr
  00aac		 |$M1063|

			 ENDP  ; |XllpPCCardResetSocket|


  00020			 AREA	 |.pdata|, PDATA
|$T1071| DCD	|$LN21@XllpPCCard@5|
	DCD	0x4000ac04
; Function compile flags: /Odtp

  00aac			 AREA	 |.text|, CODE, ARM

  00aac		 |XllpPCCardPowerOn| PROC

; 614  : {

  00aac		 |$LN21@XllpPCCard@5|
  00aac	e1a0c00d	 mov         r12, sp
  00ab0	e92d0007	 stmdb       sp!, {r0 - r2}
  00ab4	e92d5000	 stmdb       sp!, {r12, lr}
  00ab8	e24dd00c	 sub         sp, sp, #0xC
  00abc		 |$M1068|

; 615  :     XLLP_STATUS_T ReturnValue = XLLP_STATUS_SUCCESS;

  00abc	e3a03000	 mov         r3, #0
  00ac0	e58d3000	 str         r3, [sp]

; 616  : 
; 617  : 
; 618  : 
; 619  :     //
; 620  :     //Check the validity of the input arguments to the function
; 621  :     //
; 622  :     if((ushSocketNumber > XLLP_MAINSTONE_MAX_PCCARD_SOCKETS) ||
; 623  :        (pstrSocketHandle == XLLP_NULL_PTR))

  00ac4	e1dd31b8	 ldrh        r3, [sp, #0x18]
  00ac8	e3530002	 cmp         r3, #2
  00acc	ca000002	 bgt         |$LN15@XllpPCCard@5|
  00ad0	e59d3014	 ldr         r3, [sp, #0x14]
  00ad4	e3530000	 cmp         r3, #0
  00ad8	1a000001	 bne         |$LN16@XllpPCCard@5|
  00adc		 |$LN15@XllpPCCard@5|

; 624  :     {
; 625  :         ReturnValue = XLLP_STATUS_PCCARD_FAILURE;

  00adc	e3a0300f	 mov         r3, #0xF
  00ae0	e58d3000	 str         r3, [sp]
  00ae4		 |$LN16@XllpPCCard@5|

; 626  :     }
; 627  : 
; 628  :     if(ReturnValue != XLLP_STATUS_PCCARD_FAILURE)

  00ae4	e59d3000	 ldr         r3, [sp]
  00ae8	e353000f	 cmp         r3, #0xF
  00aec	0a000094	 beq         |$LN14@XllpPCCard@5|

; 629  :     {
; 630  :         switch(ushSocketNumber)

  00af0	e1dd31b8	 ldrh        r3, [sp, #0x18]
  00af4	e58d3008	 str         r3, [sp, #8]
  00af8	e59d3008	 ldr         r3, [sp, #8]
  00afc	e3530000	 cmp         r3, #0
  00b00	0a000003	 beq         |$LN11@XllpPCCard@5|
  00b04	e59d3008	 ldr         r3, [sp, #8]
  00b08	e3530001	 cmp         r3, #1
  00b0c	0a000045	 beq         |$LN6@XllpPCCard@5|
  00b10	ea000089	 b           |$LN1@XllpPCCard@5|
  00b14		 |$LN11@XllpPCCard@5|

; 631  :         {
; 632  :             case XLLP_PCCARD_SOCKET0:
; 633  : 
; 634  :                 if(uiCardVoltage == XLLP_PCCARD_5_00VOLTS)

  00b14	e59d301c	 ldr         r3, [sp, #0x1C]
  00b18	e3530002	 cmp         r3, #2
  00b1c	1a000017	 bne         |$LN10@XllpPCCard@5|

; 635  :                 {
; 636  :                     //
; 637  :                     //5V card detected; set bit[2] of the status register
; 638  :                     //
; 639  :                     pstrSocketHandle->pstrBcrHandle->PCMCIAS0SCR |= (XLLP_BIT_2);

  00b20	e59d3014	 ldr         r3, [sp, #0x14]
  00b24	e2833004	 add         r3, r3, #4
  00b28	e5933000	 ldr         r3, [r3]
  00b2c	e28330e0	 add         r3, r3, #0xE0
  00b30	e5933000	 ldr         r3, [r3]
  00b34	e3832004	 orr         r2, r3, #4
  00b38	e59d3014	 ldr         r3, [sp, #0x14]
  00b3c	e2833004	 add         r3, r3, #4
  00b40	e5933000	 ldr         r3, [r3]
  00b44	e28330e0	 add         r3, r3, #0xE0
  00b48	e5832000	 str         r2, [r3]

; 640  :                     pstrSocketHandle->pstrBcrHandle->PCMCIAS0SCR &= ~(XLLP_BIT_3);

  00b4c	e59d3014	 ldr         r3, [sp, #0x14]
  00b50	e2833004	 add         r3, r3, #4
  00b54	e5933000	 ldr         r3, [r3]
  00b58	e28330e0	 add         r3, r3, #0xE0
  00b5c	e5932000	 ldr         r2, [r3]
  00b60	e3e03008	 mvn         r3, #8
  00b64	e0022003	 and         r2, r2, r3
  00b68	e59d3014	 ldr         r3, [sp, #0x14]
  00b6c	e2833004	 add         r3, r3, #4
  00b70	e5933000	 ldr         r3, [r3]
  00b74	e28330e0	 add         r3, r3, #0xE0
  00b78	e5832000	 str         r2, [r3]
  00b7c	ea00001c	 b           |$LN9@XllpPCCard@5|
  00b80		 |$LN10@XllpPCCard@5|

; 641  :                 }
; 642  :                 else if(uiCardVoltage == XLLP_PCCARD_3_30VOLTS)

  00b80	e59d301c	 ldr         r3, [sp, #0x1C]
  00b84	e3530001	 cmp         r3, #1
  00b88	1a000017	 bne         |$LN8@XllpPCCard@5|

; 643  :                 {
; 644  :                     //
; 645  :                     //3.3V card detected; set bit[3] of the status register
; 646  :                     //
; 647  :                     pstrSocketHandle->pstrBcrHandle->PCMCIAS0SCR |= (XLLP_BIT_3);

  00b8c	e59d3014	 ldr         r3, [sp, #0x14]
  00b90	e2833004	 add         r3, r3, #4
  00b94	e5933000	 ldr         r3, [r3]
  00b98	e28330e0	 add         r3, r3, #0xE0
  00b9c	e5933000	 ldr         r3, [r3]
  00ba0	e3832008	 orr         r2, r3, #8
  00ba4	e59d3014	 ldr         r3, [sp, #0x14]
  00ba8	e2833004	 add         r3, r3, #4
  00bac	e5933000	 ldr         r3, [r3]
  00bb0	e28330e0	 add         r3, r3, #0xE0
  00bb4	e5832000	 str         r2, [r3]

; 648  :                     pstrSocketHandle->pstrBcrHandle->PCMCIAS0SCR &= ~(XLLP_BIT_2);

  00bb8	e59d3014	 ldr         r3, [sp, #0x14]
  00bbc	e2833004	 add         r3, r3, #4
  00bc0	e5933000	 ldr         r3, [r3]
  00bc4	e28330e0	 add         r3, r3, #0xE0
  00bc8	e5932000	 ldr         r2, [r3]
  00bcc	e3e03004	 mvn         r3, #4
  00bd0	e0022003	 and         r2, r2, r3
  00bd4	e59d3014	 ldr         r3, [sp, #0x14]
  00bd8	e2833004	 add         r3, r3, #4
  00bdc	e5933000	 ldr         r3, [r3]
  00be0	e28330e0	 add         r3, r3, #0xE0
  00be4	e5832000	 str         r2, [r3]

; 649  :                 }
; 650  :                 else

  00be8	ea000001	 b           |$LN7@XllpPCCard@5|
  00bec		 |$LN8@XllpPCCard@5|

; 651  :                 {
; 652  :                     //
; 653  :                     //Unsupported PC Card voltage
; 654  :                     //
; 655  :                     ReturnValue = XLLP_STATUS_PCCARD_FAILURE;

  00bec	e3a0300f	 mov         r3, #0xF
  00bf0	e58d3000	 str         r3, [sp]
  00bf4		 |$LN7@XllpPCCard@5|
  00bf4		 |$LN9@XllpPCCard@5|

; 656  :                 }
; 657  :                 (pstrSocketHandle->pstrBcrHandle->PCMCIAS0SCR) &= ~(XLLP_BCR_PCMCIA_SCR_S0_RESET);

  00bf4	e59d3014	 ldr         r3, [sp, #0x14]
  00bf8	e2833004	 add         r3, r3, #4
  00bfc	e5933000	 ldr         r3, [r3]
  00c00	e28330e0	 add         r3, r3, #0xE0
  00c04	e5932000	 ldr         r2, [r3]
  00c08	e3e03010	 mvn         r3, #0x10
  00c0c	e0022003	 and         r2, r2, r3
  00c10	e59d3014	 ldr         r3, [sp, #0x14]
  00c14	e2833004	 add         r3, r3, #4
  00c18	e5933000	 ldr         r3, [r3]
  00c1c	e28330e0	 add         r3, r3, #0xE0
  00c20	e5832000	 str         r2, [r3]

; 658  : 
; 659  :                 break;

  00c24	ea000046	 b           |$LN12@XllpPCCard@5|
  00c28		 |$LN6@XllpPCCard@5|

; 660  : 
; 661  :             case XLLP_PCCARD_SOCKET1:
; 662  : 
; 663  :                 if(uiCardVoltage == XLLP_PCCARD_5_00VOLTS)

  00c28	e59d301c	 ldr         r3, [sp, #0x1C]
  00c2c	e3530002	 cmp         r3, #2
  00c30	1a000017	 bne         |$LN5@XllpPCCard@5|

; 664  :                 {
; 665  :                     //5V card detected; set bit[2] of the status register
; 666  :                     pstrSocketHandle->pstrBcrHandle->PCMCIAS1SCR |= (XLLP_BIT_2);

  00c34	e59d3014	 ldr         r3, [sp, #0x14]
  00c38	e2833004	 add         r3, r3, #4
  00c3c	e5933000	 ldr         r3, [r3]
  00c40	e28330e4	 add         r3, r3, #0xE4
  00c44	e5933000	 ldr         r3, [r3]
  00c48	e3832004	 orr         r2, r3, #4
  00c4c	e59d3014	 ldr         r3, [sp, #0x14]
  00c50	e2833004	 add         r3, r3, #4
  00c54	e5933000	 ldr         r3, [r3]
  00c58	e28330e4	 add         r3, r3, #0xE4
  00c5c	e5832000	 str         r2, [r3]

; 667  :                     pstrSocketHandle->pstrBcrHandle->PCMCIAS1SCR &= ~(XLLP_BIT_3);

  00c60	e59d3014	 ldr         r3, [sp, #0x14]
  00c64	e2833004	 add         r3, r3, #4
  00c68	e5933000	 ldr         r3, [r3]
  00c6c	e28330e4	 add         r3, r3, #0xE4
  00c70	e5932000	 ldr         r2, [r3]
  00c74	e3e03008	 mvn         r3, #8
  00c78	e0022003	 and         r2, r2, r3
  00c7c	e59d3014	 ldr         r3, [sp, #0x14]
  00c80	e2833004	 add         r3, r3, #4
  00c84	e5933000	 ldr         r3, [r3]
  00c88	e28330e4	 add         r3, r3, #0xE4
  00c8c	e5832000	 str         r2, [r3]
  00c90	ea00001c	 b           |$LN4@XllpPCCard@5|
  00c94		 |$LN5@XllpPCCard@5|

; 668  :                 }
; 669  :                 else if(uiCardVoltage == XLLP_PCCARD_3_30VOLTS)

  00c94	e59d301c	 ldr         r3, [sp, #0x1C]
  00c98	e3530001	 cmp         r3, #1
  00c9c	1a000017	 bne         |$LN3@XllpPCCard@5|

; 670  :                 {
; 671  :                     //3.3V card detected; set bit[3] of the status register
; 672  :                     pstrSocketHandle->pstrBcrHandle->PCMCIAS1SCR |= (XLLP_BIT_3);

  00ca0	e59d3014	 ldr         r3, [sp, #0x14]
  00ca4	e2833004	 add         r3, r3, #4
  00ca8	e5933000	 ldr         r3, [r3]
  00cac	e28330e4	 add         r3, r3, #0xE4
  00cb0	e5933000	 ldr         r3, [r3]
  00cb4	e3832008	 orr         r2, r3, #8
  00cb8	e59d3014	 ldr         r3, [sp, #0x14]
  00cbc	e2833004	 add         r3, r3, #4
  00cc0	e5933000	 ldr         r3, [r3]
  00cc4	e28330e4	 add         r3, r3, #0xE4
  00cc8	e5832000	 str         r2, [r3]

; 673  :                     pstrSocketHandle->pstrBcrHandle->PCMCIAS1SCR &= ~(XLLP_BIT_2);

  00ccc	e59d3014	 ldr         r3, [sp, #0x14]
  00cd0	e2833004	 add         r3, r3, #4
  00cd4	e5933000	 ldr         r3, [r3]
  00cd8	e28330e4	 add         r3, r3, #0xE4
  00cdc	e5932000	 ldr         r2, [r3]
  00ce0	e3e03004	 mvn         r3, #4
  00ce4	e0022003	 and         r2, r2, r3
  00ce8	e59d3014	 ldr         r3, [sp, #0x14]
  00cec	e2833004	 add         r3, r3, #4
  00cf0	e5933000	 ldr         r3, [r3]
  00cf4	e28330e4	 add         r3, r3, #0xE4
  00cf8	e5832000	 str         r2, [r3]

; 674  :                 }
; 675  :                 else

  00cfc	ea000001	 b           |$LN2@XllpPCCard@5|
  00d00		 |$LN3@XllpPCCard@5|

; 676  :                 {
; 677  :                     //
; 678  :                     //Unsupported PC Card voltage
; 679  :                     //
; 680  :                     ReturnValue = XLLP_STATUS_PCCARD_FAILURE;

  00d00	e3a0300f	 mov         r3, #0xF
  00d04	e58d3000	 str         r3, [sp]
  00d08		 |$LN2@XllpPCCard@5|
  00d08		 |$LN4@XllpPCCard@5|

; 681  :                 }
; 682  :                 (pstrSocketHandle->pstrBcrHandle->PCMCIAS1SCR) &= ~(XLLP_BCR_PCMCIA_SCR_S1_RESET);

  00d08	e59d3014	 ldr         r3, [sp, #0x14]
  00d0c	e2833004	 add         r3, r3, #4
  00d10	e5933000	 ldr         r3, [r3]
  00d14	e28330e4	 add         r3, r3, #0xE4
  00d18	e5932000	 ldr         r2, [r3]
  00d1c	e3e03010	 mvn         r3, #0x10
  00d20	e0022003	 and         r2, r2, r3
  00d24	e59d3014	 ldr         r3, [sp, #0x14]
  00d28	e2833004	 add         r3, r3, #4
  00d2c	e5933000	 ldr         r3, [r3]
  00d30	e28330e4	 add         r3, r3, #0xE4
  00d34	e5832000	 str         r2, [r3]

; 683  :                 break;

  00d38	ea000001	 b           |$LN12@XllpPCCard@5|
  00d3c		 |$LN1@XllpPCCard@5|

; 684  : 
; 685  :             default:
; 686  :                 //TBD. Should not be here at all!!
; 687  :                 ReturnValue = XLLP_STATUS_PCCARD_FAILURE;

  00d3c	e3a0300f	 mov         r3, #0xF
  00d40	e58d3000	 str         r3, [sp]
  00d44		 |$LN12@XllpPCCard@5|
  00d44		 |$LN14@XllpPCCard@5|

; 688  : 
; 689  :             break;
; 690  :         } //end switch
; 691  :     }
; 692  : 
; 693  :     return ReturnValue;

  00d44	e59d3000	 ldr         r3, [sp]
  00d48	e58d3004	 str         r3, [sp, #4]

; 694  : 
; 695  : } //end XllpPCCardEnableSocket()

  00d4c	e59d0004	 ldr         r0, [sp, #4]
  00d50	e28dd00c	 add         sp, sp, #0xC
  00d54	e89d6000	 ldmia       sp, {sp, lr}
  00d58	e12fff1e	 bx          lr
  00d5c		 |$M1069|

			 ENDP  ; |XllpPCCardPowerOn|

	EXPORT	|XllpPCCardPowerOff|

  00028			 AREA	 |.pdata|, PDATA
|$T1077| DCD	|$LN13@XllpPCCard@6|
	DCD	0x40005004
; Function compile flags: /Odtp

  00d5c			 AREA	 |.text|, CODE, ARM

  00d5c		 |XllpPCCardPowerOff| PROC

; 717  : {

  00d5c		 |$LN13@XllpPCCard@6|
  00d5c	e1a0c00d	 mov         r12, sp
  00d60	e92d0003	 stmdb       sp!, {r0, r1}
  00d64	e92d5000	 stmdb       sp!, {r12, lr}
  00d68	e24dd00c	 sub         sp, sp, #0xC
  00d6c		 |$M1074|

; 718  :     XLLP_STATUS_T ReturnValue = XLLP_STATUS_SUCCESS;

  00d6c	e3a03000	 mov         r3, #0
  00d70	e58d3000	 str         r3, [sp]

; 719  : 
; 720  : 
; 721  : 
; 722  :     //
; 723  :     //Check the validity of the input arguments to the function
; 724  :     //
; 725  :     if((ushSocketNumber > XLLP_MAINSTONE_MAX_PCCARD_SOCKETS) ||
; 726  :        (pstrSocketHandle == XLLP_NULL_PTR))

  00d74	e1dd31b8	 ldrh        r3, [sp, #0x18]
  00d78	e3530002	 cmp         r3, #2
  00d7c	ca000002	 bgt         |$LN7@XllpPCCard@6|
  00d80	e59d3014	 ldr         r3, [sp, #0x14]
  00d84	e3530000	 cmp         r3, #0
  00d88	1a000001	 bne         |$LN8@XllpPCCard@6|
  00d8c		 |$LN7@XllpPCCard@6|

; 727  :     {
; 728  :         ReturnValue = XLLP_STATUS_PCCARD_FAILURE;

  00d8c	e3a0300f	 mov         r3, #0xF
  00d90	e58d3000	 str         r3, [sp]
  00d94		 |$LN8@XllpPCCard@6|

; 729  :     }
; 730  : 
; 731  :     if(ReturnValue != XLLP_STATUS_PCCARD_FAILURE)

  00d94	e59d3000	 ldr         r3, [sp]
  00d98	e353000f	 cmp         r3, #0xF
  00d9c	0a000038	 beq         |$LN6@XllpPCCard@6|

; 732  :     {
; 733  :         switch(ushSocketNumber)

  00da0	e1dd31b8	 ldrh        r3, [sp, #0x18]
  00da4	e58d3008	 str         r3, [sp, #8]
  00da8	e59d3008	 ldr         r3, [sp, #8]
  00dac	e3530000	 cmp         r3, #0
  00db0	0a000003	 beq         |$LN3@XllpPCCard@6|
  00db4	e59d3008	 ldr         r3, [sp, #8]
  00db8	e3530001	 cmp         r3, #1
  00dbc	0a000017	 beq         |$LN2@XllpPCCard@6|
  00dc0	ea00002d	 b           |$LN1@XllpPCCard@6|
  00dc4		 |$LN3@XllpPCCard@6|

; 734  :         {
; 735  :             case XLLP_PCCARD_SOCKET0:
; 736  : 
; 737  :                 //
; 738  :                 //Power off the socket
; 739  :                 //
; 740  :                 pstrSocketHandle->pstrBcrHandle->PCMCIAS0SCR |= (XLLP_BIT_2);

  00dc4	e59d3014	 ldr         r3, [sp, #0x14]
  00dc8	e2833004	 add         r3, r3, #4
  00dcc	e5933000	 ldr         r3, [r3]
  00dd0	e28330e0	 add         r3, r3, #0xE0
  00dd4	e5933000	 ldr         r3, [r3]
  00dd8	e3832004	 orr         r2, r3, #4
  00ddc	e59d3014	 ldr         r3, [sp, #0x14]
  00de0	e2833004	 add         r3, r3, #4
  00de4	e5933000	 ldr         r3, [r3]
  00de8	e28330e0	 add         r3, r3, #0xE0
  00dec	e5832000	 str         r2, [r3]

; 741  :                 pstrSocketHandle->pstrBcrHandle->PCMCIAS0SCR |= (XLLP_BIT_3);

  00df0	e59d3014	 ldr         r3, [sp, #0x14]
  00df4	e2833004	 add         r3, r3, #4
  00df8	e5933000	 ldr         r3, [r3]
  00dfc	e28330e0	 add         r3, r3, #0xE0
  00e00	e5933000	 ldr         r3, [r3]
  00e04	e3832008	 orr         r2, r3, #8
  00e08	e59d3014	 ldr         r3, [sp, #0x14]
  00e0c	e2833004	 add         r3, r3, #4
  00e10	e5933000	 ldr         r3, [r3]
  00e14	e28330e0	 add         r3, r3, #0xE0
  00e18	e5832000	 str         r2, [r3]

; 742  : 
; 743  :                 break;

  00e1c	ea000018	 b           |$LN4@XllpPCCard@6|
  00e20		 |$LN2@XllpPCCard@6|

; 744  : 
; 745  :             case XLLP_PCCARD_SOCKET1:
; 746  : 
; 747  :                 //
; 748  :                 //Power off the socket
; 749  :                 //
; 750  :                 pstrSocketHandle->pstrBcrHandle->PCMCIAS1SCR |= (XLLP_BIT_2);

  00e20	e59d3014	 ldr         r3, [sp, #0x14]
  00e24	e2833004	 add         r3, r3, #4
  00e28	e5933000	 ldr         r3, [r3]
  00e2c	e28330e4	 add         r3, r3, #0xE4
  00e30	e5933000	 ldr         r3, [r3]
  00e34	e3832004	 orr         r2, r3, #4
  00e38	e59d3014	 ldr         r3, [sp, #0x14]
  00e3c	e2833004	 add         r3, r3, #4
  00e40	e5933000	 ldr         r3, [r3]
  00e44	e28330e4	 add         r3, r3, #0xE4
  00e48	e5832000	 str         r2, [r3]

; 751  :                 pstrSocketHandle->pstrBcrHandle->PCMCIAS1SCR |= (XLLP_BIT_3);

  00e4c	e59d3014	 ldr         r3, [sp, #0x14]
  00e50	e2833004	 add         r3, r3, #4
  00e54	e5933000	 ldr         r3, [r3]
  00e58	e28330e4	 add         r3, r3, #0xE4
  00e5c	e5933000	 ldr         r3, [r3]
  00e60	e3832008	 orr         r2, r3, #8
  00e64	e59d3014	 ldr         r3, [sp, #0x14]
  00e68	e2833004	 add         r3, r3, #4
  00e6c	e5933000	 ldr         r3, [r3]
  00e70	e28330e4	 add         r3, r3, #0xE4
  00e74	e5832000	 str         r2, [r3]

; 752  : 
; 753  :                 break;

  00e78	ea000001	 b           |$LN4@XllpPCCard@6|
  00e7c		 |$LN1@XllpPCCard@6|

; 754  : 
; 755  :             default:
; 756  : 
; 757  :                 //TBD. Should not be here at all!!
; 758  :                 ReturnValue = XLLP_STATUS_PCCARD_FAILURE;

  00e7c	e3a0300f	 mov         r3, #0xF
  00e80	e58d3000	 str         r3, [sp]
  00e84		 |$LN4@XllpPCCard@6|
  00e84		 |$LN6@XllpPCCard@6|

; 759  : 
; 760  :             break;
; 761  : 
; 762  :         } //end switch
; 763  :     } //end if
; 764  : 
; 765  :     return ReturnValue;

  00e84	e59d3000	 ldr         r3, [sp]
  00e88	e58d3004	 str         r3, [sp, #4]

; 766  : 
; 767  : } //end XllpPCCardResetSocket()

  00e8c	e59d0004	 ldr         r0, [sp, #4]
  00e90	e28dd00c	 add         sp, sp, #0xC
  00e94	e89d6000	 ldmia       sp, {sp, lr}
  00e98	e12fff1e	 bx          lr
  00e9c		 |$M1075|

			 ENDP  ; |XllpPCCardPowerOff|


  00030			 AREA	 |.pdata|, PDATA
|$T1083| DCD	|$LN21@XllpPCCard@7|
	DCD	0x40006204
; Function compile flags: /Odtp

  00e9c			 AREA	 |.text|, CODE, ARM

  00e9c		 |XllpPCCardGetVoltageSetting| PROC

; 790  : {

  00e9c		 |$LN21@XllpPCCard@7|
  00e9c	e1a0c00d	 mov         r12, sp
  00ea0	e92d0007	 stmdb       sp!, {r0 - r2}
  00ea4	e92d5000	 stmdb       sp!, {r12, lr}
  00ea8	e24dd00c	 sub         sp, sp, #0xC
  00eac		 |$M1080|

; 791  :     XLLP_STATUS_T ReturnValue = XLLP_STATUS_SUCCESS;

  00eac	e3a03000	 mov         r3, #0
  00eb0	e58d3000	 str         r3, [sp]

; 792  : 
; 793  : 
; 794  : 
; 795  :     //
; 796  :     //Check the validity of the input arguments to the function
; 797  :     //
; 798  :     if((ushSocketNumber > XLLP_MAINSTONE_MAX_PCCARD_SOCKETS) ||
; 799  :        (pstrSocketHandle == XLLP_NULL_PTR))

  00eb4	e1dd31b8	 ldrh        r3, [sp, #0x18]
  00eb8	e3530002	 cmp         r3, #2
  00ebc	ca000002	 bgt         |$LN15@XllpPCCard@7|
  00ec0	e59d3014	 ldr         r3, [sp, #0x14]
  00ec4	e3530000	 cmp         r3, #0
  00ec8	1a000001	 bne         |$LN16@XllpPCCard@7|
  00ecc		 |$LN15@XllpPCCard@7|

; 800  :     {
; 801  :         ReturnValue = XLLP_STATUS_PCCARD_FAILURE;

  00ecc	e3a0300f	 mov         r3, #0xF
  00ed0	e58d3000	 str         r3, [sp]
  00ed4		 |$LN16@XllpPCCard@7|

; 802  :     }
; 803  : 
; 804  :     if(ReturnValue != XLLP_STATUS_PCCARD_FAILURE)

  00ed4	e59d3000	 ldr         r3, [sp]
  00ed8	e353000f	 cmp         r3, #0xF
  00edc	0a00004a	 beq         |$LN14@XllpPCCard@7|

; 805  :     {
; 806  :         switch(ushSocketNumber)

  00ee0	e1dd31b8	 ldrh        r3, [sp, #0x18]
  00ee4	e58d3008	 str         r3, [sp, #8]
  00ee8	e59d3008	 ldr         r3, [sp, #8]
  00eec	e3530000	 cmp         r3, #0
  00ef0	0a000003	 beq         |$LN11@XllpPCCard@7|
  00ef4	e59d3008	 ldr         r3, [sp, #8]
  00ef8	e3530001	 cmp         r3, #1
  00efc	0a000020	 beq         |$LN6@XllpPCCard@7|
  00f00	ea00003f	 b           |$LN1@XllpPCCard@7|
  00f04		 |$LN11@XllpPCCard@7|

; 807  :         {
; 808  :             case XLLP_PCCARD_SOCKET0:
; 809  : 
; 810  :                 if((pstrSocketHandle->pstrBcrHandle->PCMCIAS0SCR) & (XLLP_BCR_PCMCIA_SCR_S0_nCD))

  00f04	e59d3014	 ldr         r3, [sp, #0x14]
  00f08	e2833004	 add         r3, r3, #4
  00f0c	e5933000	 ldr         r3, [r3]
  00f10	e28330e0	 add         r3, r3, #0xE0
  00f14	e5933000	 ldr         r3, [r3]
  00f18	e3130020	 tst         r3, #0x20
  00f1c	0a000002	 beq         |$LN10@XllpPCCard@7|

; 811  :                 {
; 812  :                     ReturnValue = XLLP_STATUS_PCCARD_FAILURE;

  00f20	e3a0300f	 mov         r3, #0xF
  00f24	e58d3000	 str         r3, [sp]

; 813  :                 }
; 814  :                 else

  00f28	ea000014	 b           |$LN9@XllpPCCard@7|
  00f2c		 |$LN10@XllpPCCard@7|

; 815  :                 {
; 816  :                     //
; 817  :                     //Determine the voltage requirements of the PC Card, else
; 818  :                     //default voltage to 3.3V
; 819  :                     //
; 820  :                     if(((pstrSocketHandle->pstrBcrHandle->PCMCIAS0SCR) & (XLLP_BIT_6)) &&
; 821  :                        ((pstrSocketHandle->pstrBcrHandle->PCMCIAS0SCR) & (XLLP_BIT_7)))

  00f2c	e59d3014	 ldr         r3, [sp, #0x14]
  00f30	e2833004	 add         r3, r3, #4
  00f34	e5933000	 ldr         r3, [r3]
  00f38	e28330e0	 add         r3, r3, #0xE0
  00f3c	e5933000	 ldr         r3, [r3]
  00f40	e3130040	 tst         r3, #0x40
  00f44	0a00000a	 beq         |$LN8@XllpPCCard@7|
  00f48	e59d3014	 ldr         r3, [sp, #0x14]
  00f4c	e2833004	 add         r3, r3, #4
  00f50	e5933000	 ldr         r3, [r3]
  00f54	e28330e0	 add         r3, r3, #0xE0
  00f58	e5933000	 ldr         r3, [r3]
  00f5c	e3130080	 tst         r3, #0x80
  00f60	0a000003	 beq         |$LN8@XllpPCCard@7|

; 822  :                     {
; 823  :                         //
; 824  :                         //5 volt card detected in the socket
; 825  :                         //
; 826  :                         *puiCardVoltage = XLLP_PCCARD_5_00VOLTS;

  00f64	e59d201c	 ldr         r2, [sp, #0x1C]
  00f68	e3a03002	 mov         r3, #2
  00f6c	e5823000	 str         r3, [r2]

; 827  :                     }
; 828  :                     else

  00f70	ea000002	 b           |$LN7@XllpPCCard@7|
  00f74		 |$LN8@XllpPCCard@7|

; 829  :                     {
; 830  :                         //
; 831  :                         //3.3 volt card detected in the socket
; 832  :                         //
; 833  :                         *puiCardVoltage = XLLP_PCCARD_3_30VOLTS;

  00f74	e59d201c	 ldr         r2, [sp, #0x1C]
  00f78	e3a03001	 mov         r3, #1
  00f7c	e5823000	 str         r3, [r2]
  00f80		 |$LN7@XllpPCCard@7|
  00f80		 |$LN9@XllpPCCard@7|

; 834  :                     }
; 835  :                 }
; 836  : 
; 837  :                 break;

  00f80	ea000021	 b           |$LN12@XllpPCCard@7|
  00f84		 |$LN6@XllpPCCard@7|

; 838  : 
; 839  :             case XLLP_PCCARD_SOCKET1:
; 840  : 
; 841  :                 if((pstrSocketHandle->pstrBcrHandle->PCMCIAS1SCR) & (XLLP_BCR_PCMCIA_SCR_S0_nCD))

  00f84	e59d3014	 ldr         r3, [sp, #0x14]
  00f88	e2833004	 add         r3, r3, #4
  00f8c	e5933000	 ldr         r3, [r3]
  00f90	e28330e4	 add         r3, r3, #0xE4
  00f94	e5933000	 ldr         r3, [r3]
  00f98	e3130020	 tst         r3, #0x20
  00f9c	0a000002	 beq         |$LN5@XllpPCCard@7|

; 842  :                 {
; 843  :                     ReturnValue = XLLP_STATUS_PCCARD_FAILURE;

  00fa0	e3a0300f	 mov         r3, #0xF
  00fa4	e58d3000	 str         r3, [sp]

; 844  :                 }
; 845  :                 else

  00fa8	ea000014	 b           |$LN4@XllpPCCard@7|
  00fac		 |$LN5@XllpPCCard@7|

; 846  :                 {
; 847  :                     //
; 848  :                     //Determine the voltage requirements of the PC Card, else
; 849  :                     //default voltage to 3.3V
; 850  :                     //
; 851  :                     if(((pstrSocketHandle->pstrBcrHandle->PCMCIAS1SCR) & (XLLP_BIT_6)) &&
; 852  :                        ((pstrSocketHandle->pstrBcrHandle->PCMCIAS1SCR) & (XLLP_BIT_7)))

  00fac	e59d3014	 ldr         r3, [sp, #0x14]
  00fb0	e2833004	 add         r3, r3, #4
  00fb4	e5933000	 ldr         r3, [r3]
  00fb8	e28330e4	 add         r3, r3, #0xE4
  00fbc	e5933000	 ldr         r3, [r3]
  00fc0	e3130040	 tst         r3, #0x40
  00fc4	0a00000a	 beq         |$LN3@XllpPCCard@7|
  00fc8	e59d3014	 ldr         r3, [sp, #0x14]
  00fcc	e2833004	 add         r3, r3, #4
  00fd0	e5933000	 ldr         r3, [r3]
  00fd4	e28330e4	 add         r3, r3, #0xE4
  00fd8	e5933000	 ldr         r3, [r3]
  00fdc	e3130080	 tst         r3, #0x80
  00fe0	0a000003	 beq         |$LN3@XllpPCCard@7|

; 853  :                     {
; 854  :                         //
; 855  :                         //5 volt card detected in the socket
; 856  :                         //
; 857  :                         *puiCardVoltage = XLLP_PCCARD_5_00VOLTS;

  00fe4	e59d201c	 ldr         r2, [sp, #0x1C]
  00fe8	e3a03002	 mov         r3, #2
  00fec	e5823000	 str         r3, [r2]

; 858  :                     }
; 859  :                     else

  00ff0	ea000002	 b           |$LN2@XllpPCCard@7|
  00ff4		 |$LN3@XllpPCCard@7|

; 860  :                     {
; 861  :                         //
; 862  :                         //3.3 volt card detected in the socket
; 863  :                         //
; 864  :                         *puiCardVoltage = XLLP_PCCARD_3_30VOLTS;

  00ff4	e59d201c	 ldr         r2, [sp, #0x1C]
  00ff8	e3a03001	 mov         r3, #1
  00ffc	e5823000	 str         r3, [r2]
  01000		 |$LN2@XllpPCCard@7|
  01000		 |$LN4@XllpPCCard@7|

; 865  :                     }
; 866  :                 }
; 867  : 
; 868  :                 break;

  01000	ea000001	 b           |$LN12@XllpPCCard@7|
  01004		 |$LN1@XllpPCCard@7|

; 869  : 
; 870  :             default:
; 871  : 
; 872  :                 //TBD. Should not be here at all!!
; 873  :                 ReturnValue = XLLP_STATUS_PCCARD_FAILURE;

  01004	e3a0300f	 mov         r3, #0xF
  01008	e58d3000	 str         r3, [sp]
  0100c		 |$LN12@XllpPCCard@7|
  0100c		 |$LN14@XllpPCCard@7|

; 874  : 
; 875  :             break;
; 876  : 
; 877  :         } //end switch
; 878  :     }
; 879  : 
; 880  :     return ReturnValue;

  0100c	e59d3000	 ldr         r3, [sp]
  01010	e58d3004	 str         r3, [sp, #4]

; 881  : 
; 882  : } //end XllpPCCardGetVoltageSetting()

  01014	e59d0004	 ldr         r0, [sp, #4]
  01018	e28dd00c	 add         sp, sp, #0xC
  0101c	e89d6000	 ldmia       sp, {sp, lr}
  01020	e12fff1e	 bx          lr
  01024		 |$M1081|

			 ENDP  ; |XllpPCCardGetVoltageSetting|

	EXPORT	|XllpPCCardSetExpMemTiming|

  00038			 AREA	 |.pdata|, PDATA
|$T1089| DCD	|$LN7@XllpPCCard@8|
	DCD	0x40004f04
; Function compile flags: /Odtp

  01024			 AREA	 |.text|, CODE, ARM

  01024		 |XllpPCCardSetExpMemTiming| PROC

; 903  : {

  01024		 |$LN7@XllpPCCard@8|
  01024	e1a0c00d	 mov         r12, sp
  01028	e92d0001	 stmdb       sp!, {r0}
  0102c	e92d5000	 stmdb       sp!, {r12, lr}
  01030	e24dd008	 sub         sp, sp, #8
  01034		 |$M1086|

; 904  : 
; 905  :     XLLP_STATUS_T ReturnValue = XLLP_STATUS_SUCCESS;

  01034	e3a03000	 mov         r3, #0
  01038	e58d3000	 str         r3, [sp]

; 906  : 
; 907  :     //
; 908  :     //Check the validity of the input arguments to the function
; 909  :     //
; 910  :     if(pstrSocketHandle == XLLP_NULL_PTR)

  0103c	e59d3010	 ldr         r3, [sp, #0x10]
  01040	e3530000	 cmp         r3, #0
  01044	1a000001	 bne         |$LN2@XllpPCCard@8|

; 911  :     {
; 912  :         ReturnValue = XLLP_STATUS_PCCARD_FAILURE;

  01048	e3a0300f	 mov         r3, #0xF
  0104c	e58d3000	 str         r3, [sp]
  01050		 |$LN2@XllpPCCard@8|

; 913  :     }
; 914  : 
; 915  :     if(ReturnValue != XLLP_STATUS_PCCARD_FAILURE)

  01050	e59d3000	 ldr         r3, [sp]
  01054	e353000f	 cmp         r3, #0xF
  01058	0a00003a	 beq         |$LN1@XllpPCCard@8|

; 916  :     {
; 917  :         pstrSocketHandle->pstrMemCtrlRegsHandle->MCATT0 = pstrSocketHandle->pstrCardTimingHandle->MCATT0;

  0105c	e59d3010	 ldr         r3, [sp, #0x10]
  01060	e2833010	 add         r3, r3, #0x10
  01064	e5933000	 ldr         r3, [r3]
  01068	e2831008	 add         r1, r3, #8
  0106c	e59d3010	 ldr         r3, [sp, #0x10]
  01070	e2833014	 add         r3, r3, #0x14
  01074	e5933000	 ldr         r3, [r3]
  01078	e2832030	 add         r2, r3, #0x30
  0107c	e5913000	 ldr         r3, [r1]
  01080	e5823000	 str         r3, [r2]

; 918  :         pstrSocketHandle->pstrMemCtrlRegsHandle->MCATT1 = pstrSocketHandle->pstrCardTimingHandle->MCATT1;

  01084	e59d3010	 ldr         r3, [sp, #0x10]
  01088	e2833010	 add         r3, r3, #0x10
  0108c	e5933000	 ldr         r3, [r3]
  01090	e283100c	 add         r1, r3, #0xC
  01094	e59d3010	 ldr         r3, [sp, #0x10]
  01098	e2833014	 add         r3, r3, #0x14
  0109c	e5933000	 ldr         r3, [r3]
  010a0	e2832034	 add         r2, r3, #0x34
  010a4	e5913000	 ldr         r3, [r1]
  010a8	e5823000	 str         r3, [r2]

; 919  : 
; 920  :         pstrSocketHandle->pstrMemCtrlRegsHandle->MCMEM0 = pstrSocketHandle->pstrCardTimingHandle->MCMEM0;

  010ac	e59d3010	 ldr         r3, [sp, #0x10]
  010b0	e2833010	 add         r3, r3, #0x10
  010b4	e5931000	 ldr         r1, [r3]
  010b8	e59d3010	 ldr         r3, [sp, #0x10]
  010bc	e2833014	 add         r3, r3, #0x14
  010c0	e5933000	 ldr         r3, [r3]
  010c4	e2832028	 add         r2, r3, #0x28
  010c8	e5913000	 ldr         r3, [r1]
  010cc	e5823000	 str         r3, [r2]

; 921  :         pstrSocketHandle->pstrMemCtrlRegsHandle->MCMEM1 = pstrSocketHandle->pstrCardTimingHandle->MCMEM1;

  010d0	e59d3010	 ldr         r3, [sp, #0x10]
  010d4	e2833010	 add         r3, r3, #0x10
  010d8	e5933000	 ldr         r3, [r3]
  010dc	e2831004	 add         r1, r3, #4
  010e0	e59d3010	 ldr         r3, [sp, #0x10]
  010e4	e2833014	 add         r3, r3, #0x14
  010e8	e5933000	 ldr         r3, [r3]
  010ec	e283202c	 add         r2, r3, #0x2C
  010f0	e5913000	 ldr         r3, [r1]
  010f4	e5823000	 str         r3, [r2]

; 922  : 
; 923  :         pstrSocketHandle->pstrMemCtrlRegsHandle->MCIO0 = pstrSocketHandle->pstrCardTimingHandle->MCIO0;

  010f8	e59d3010	 ldr         r3, [sp, #0x10]
  010fc	e2833010	 add         r3, r3, #0x10
  01100	e5933000	 ldr         r3, [r3]
  01104	e2831010	 add         r1, r3, #0x10
  01108	e59d3010	 ldr         r3, [sp, #0x10]
  0110c	e2833014	 add         r3, r3, #0x14
  01110	e5933000	 ldr         r3, [r3]
  01114	e2832038	 add         r2, r3, #0x38
  01118	e5913000	 ldr         r3, [r1]
  0111c	e5823000	 str         r3, [r2]

; 924  :         pstrSocketHandle->pstrMemCtrlRegsHandle->MCIO1 = pstrSocketHandle->pstrCardTimingHandle->MCIO1;

  01120	e59d3010	 ldr         r3, [sp, #0x10]
  01124	e2833010	 add         r3, r3, #0x10
  01128	e5933000	 ldr         r3, [r3]
  0112c	e2831014	 add         r1, r3, #0x14
  01130	e59d3010	 ldr         r3, [sp, #0x10]
  01134	e2833014	 add         r3, r3, #0x14
  01138	e5933000	 ldr         r3, [r3]
  0113c	e283203c	 add         r2, r3, #0x3C
  01140	e5913000	 ldr         r3, [r1]
  01144	e5823000	 str         r3, [r2]
  01148		 |$LN1@XllpPCCard@8|

; 925  :     }
; 926  : 
; 927  :     return ReturnValue;

  01148	e59d3000	 ldr         r3, [sp]
  0114c	e58d3004	 str         r3, [sp, #4]

; 928  : 
; 929  : } //end XllpPCCardSetExpMemTiming()

  01150	e59d0004	 ldr         r0, [sp, #4]
  01154	e28dd008	 add         sp, sp, #8
  01158	e89d6000	 ldmia       sp, {sp, lr}
  0115c	e12fff1e	 bx          lr
  01160		 |$M1087|

			 ENDP  ; |XllpPCCardSetExpMemTiming|

	EXPORT	|XllpPCCardGetExpMemTiming|

  00040			 AREA	 |.pdata|, PDATA
|$T1095| DCD	|$LN8@XllpPCCard@9|
	DCD	0x40004604
; Function compile flags: /Odtp

  01160			 AREA	 |.text|, CODE, ARM

  01160		 |XllpPCCardGetExpMemTiming| PROC

; 951  : {

  01160		 |$LN8@XllpPCCard@9|
  01160	e1a0c00d	 mov         r12, sp
  01164	e92d0003	 stmdb       sp!, {r0, r1}
  01168	e92d5000	 stmdb       sp!, {r12, lr}
  0116c	e24dd008	 sub         sp, sp, #8
  01170		 |$M1092|

; 952  :     XLLP_STATUS_T ReturnValue = XLLP_STATUS_SUCCESS;

  01170	e3a03000	 mov         r3, #0
  01174	e58d3000	 str         r3, [sp]

; 953  : 
; 954  :     //
; 955  :     //Check the validity of the input arguments to the function
; 956  :     //
; 957  :     if((pstrSocketHandle == XLLP_NULL_PTR) ||
; 958  :        (pstrCardTimingHandle == XLLP_NULL_PTR))

  01178	e59d3010	 ldr         r3, [sp, #0x10]
  0117c	e3530000	 cmp         r3, #0
  01180	0a000002	 beq         |$LN2@XllpPCCard@9|
  01184	e59d3014	 ldr         r3, [sp, #0x14]
  01188	e3530000	 cmp         r3, #0
  0118c	1a000001	 bne         |$LN3@XllpPCCard@9|
  01190		 |$LN2@XllpPCCard@9|

; 959  :     {
; 960  :         ReturnValue = XLLP_STATUS_PCCARD_FAILURE;

  01190	e3a0300f	 mov         r3, #0xF
  01194	e58d3000	 str         r3, [sp]
  01198		 |$LN3@XllpPCCard@9|

; 961  :     }
; 962  : 
; 963  :     if(ReturnValue != XLLP_STATUS_PCCARD_FAILURE)

  01198	e59d3000	 ldr         r3, [sp]
  0119c	e353000f	 cmp         r3, #0xF
  011a0	0a00002e	 beq         |$LN1@XllpPCCard@9|

; 964  :     {
; 965  :         pstrCardTimingHandle->MCATT0 = pstrSocketHandle->pstrMemCtrlRegsHandle->MCATT0;

  011a4	e59d3010	 ldr         r3, [sp, #0x10]
  011a8	e2833014	 add         r3, r3, #0x14
  011ac	e5933000	 ldr         r3, [r3]
  011b0	e2831030	 add         r1, r3, #0x30
  011b4	e59d3014	 ldr         r3, [sp, #0x14]
  011b8	e2832008	 add         r2, r3, #8
  011bc	e5913000	 ldr         r3, [r1]
  011c0	e5823000	 str         r3, [r2]

; 966  :         pstrCardTimingHandle->MCATT1 = pstrSocketHandle->pstrMemCtrlRegsHandle->MCATT1;

  011c4	e59d3010	 ldr         r3, [sp, #0x10]
  011c8	e2833014	 add         r3, r3, #0x14
  011cc	e5933000	 ldr         r3, [r3]
  011d0	e2831034	 add         r1, r3, #0x34
  011d4	e59d3014	 ldr         r3, [sp, #0x14]
  011d8	e283200c	 add         r2, r3, #0xC
  011dc	e5913000	 ldr         r3, [r1]
  011e0	e5823000	 str         r3, [r2]

; 967  : 
; 968  :         pstrCardTimingHandle->MCMEM0 = pstrSocketHandle->pstrMemCtrlRegsHandle->MCMEM0;

  011e4	e59d3010	 ldr         r3, [sp, #0x10]
  011e8	e2833014	 add         r3, r3, #0x14
  011ec	e5933000	 ldr         r3, [r3]
  011f0	e2833028	 add         r3, r3, #0x28
  011f4	e5932000	 ldr         r2, [r3]
  011f8	e59d3014	 ldr         r3, [sp, #0x14]
  011fc	e5832000	 str         r2, [r3]

; 969  :         pstrCardTimingHandle->MCMEM1 = pstrSocketHandle->pstrMemCtrlRegsHandle->MCMEM1;

  01200	e59d3010	 ldr         r3, [sp, #0x10]
  01204	e2833014	 add         r3, r3, #0x14
  01208	e5933000	 ldr         r3, [r3]
  0120c	e283102c	 add         r1, r3, #0x2C
  01210	e59d3014	 ldr         r3, [sp, #0x14]
  01214	e2832004	 add         r2, r3, #4
  01218	e5913000	 ldr         r3, [r1]
  0121c	e5823000	 str         r3, [r2]

; 970  : 
; 971  :         pstrCardTimingHandle->MCIO0 = pstrSocketHandle->pstrMemCtrlRegsHandle->MCIO0;

  01220	e59d3010	 ldr         r3, [sp, #0x10]
  01224	e2833014	 add         r3, r3, #0x14
  01228	e5933000	 ldr         r3, [r3]
  0122c	e2831038	 add         r1, r3, #0x38
  01230	e59d3014	 ldr         r3, [sp, #0x14]
  01234	e2832010	 add         r2, r3, #0x10
  01238	e5913000	 ldr         r3, [r1]
  0123c	e5823000	 str         r3, [r2]

; 972  :         pstrCardTimingHandle->MCIO1 = pstrSocketHandle->pstrMemCtrlRegsHandle->MCIO1;

  01240	e59d3010	 ldr         r3, [sp, #0x10]
  01244	e2833014	 add         r3, r3, #0x14
  01248	e5933000	 ldr         r3, [r3]
  0124c	e283103c	 add         r1, r3, #0x3C
  01250	e59d3014	 ldr         r3, [sp, #0x14]
  01254	e2832014	 add         r2, r3, #0x14
  01258	e5913000	 ldr         r3, [r1]
  0125c	e5823000	 str         r3, [r2]
  01260		 |$LN1@XllpPCCard@9|

; 973  :     }
; 974  : 
; 975  :     return ReturnValue;

  01260	e59d3000	 ldr         r3, [sp]
  01264	e58d3004	 str         r3, [sp, #4]

; 976  : 
; 977  : } //end XllpPCCardGetExpMemTiming()

  01268	e59d0004	 ldr         r0, [sp, #4]
  0126c	e28dd008	 add         sp, sp, #8
  01270	e89d6000	 ldmia       sp, {sp, lr}
  01274	e12fff1e	 bx          lr
  01278		 |$M1093|

			 ENDP  ; |XllpPCCardGetExpMemTiming|

	END
