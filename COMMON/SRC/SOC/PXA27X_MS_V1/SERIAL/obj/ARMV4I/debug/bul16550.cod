; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\PXA27X_MS_V1\SERIAL\bul16550.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.data|, DATA
|s_HighWaterPairs| DCD 0x0
	DCD	0x1
	DCD	0x40
	DCD	0x8
	DCD	0x80
	DCD	0x10
	DCD	0xc0
	DCD	0x20
	EXPORT	|??_7CBulReg16550@@6B@| [ DATA ]	; CBulReg16550::`vftable'
	EXPORT	|??0CBulReg16550@@QAA@PAUBULVERDE_UART_REG@@@Z| ; CBulReg16550::CBulReg16550
	EXPORT	|?Init@CBulReg16550@@UAAHXZ|		; CBulReg16550::Init
	EXPORT	|?Write_DATA@CBulReg16550@@UAAXE@Z|	; CBulReg16550::Write_DATA
	EXPORT	|?Read_Data@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_Data
	EXPORT	|?Write_IER@CBulReg16550@@UAAXE@Z|	; CBulReg16550::Write_IER
	EXPORT	|?Read_IER@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_IER
	EXPORT	|?Write_FCR@CBulReg16550@@UAAXE@Z|	; CBulReg16550::Write_FCR
	EXPORT	|?Read_FCR@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_FCR
	EXPORT	|?Read_IIR@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_IIR
	EXPORT	|?Write_LCR@CBulReg16550@@UAAXE@Z|	; CBulReg16550::Write_LCR
	EXPORT	|?Read_LCR@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_LCR
	EXPORT	|?Write_MCR@CBulReg16550@@UAAXE@Z|	; CBulReg16550::Write_MCR
	EXPORT	|?Read_MCR@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_MCR
	EXPORT	|?Write_LSR@CBulReg16550@@UAAXE@Z|	; CBulReg16550::Write_LSR
	EXPORT	|?Read_LSR@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_LSR
	EXPORT	|?Write_MSR@CBulReg16550@@UAAXE@Z|	; CBulReg16550::Write_MSR
	EXPORT	|?Read_MSR@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_MSR
	EXPORT	|?Write_SCR@CBulReg16550@@UAAXE@Z|	; CBulReg16550::Write_SCR
	EXPORT	|?Read_SCR@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_SCR
	EXPORT	|?Backup@CBulReg16550@@UAAXXZ|		; CBulReg16550::Backup
	EXPORT	|?Restore@CBulReg16550@@UAAXXZ|		; CBulReg16550::Restore
	EXPORT	|?Write_SIR@CBulReg16550@@UAAXE@Z|	; CBulReg16550::Write_SIR
	EXPORT	|?Read_SIR@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_SIR
	EXPORT	|?Read_FIOR@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_FIOR
	EXPORT	|?Read_ABR@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_ABR
	EXPORT	|?Write_ABR@CBulReg16550@@UAAXE@Z|	; CBulReg16550::Write_ABR
	IMPORT	|??0CReg16550@@QAA@PAEK@Z|		; CReg16550::CReg16550
	IMPORT	|??_ECBulReg16550@@UAAPAXI@Z|, WEAK |??_GCBulReg16550@@UAAPAXI@Z| ; CBulReg16550::`vector deleting destructor', CBulReg16550::`scalar deleting destructor'
	IMPORT	|?Write_BaudRate@CReg16550@@UAAHG@Z|	; CReg16550::Write_BaudRate
	IMPORT	|?DumpRegister@CReg16550@@UAAXXZ|	; CReg16550::DumpRegister

  00000			 AREA	 |.pdata|, PDATA
|$T36610| DCD	|$LN5@CBulReg165|
	DCD	0x40001704
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\serial\bul16550.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CBulReg16550@@6B@| DCD |??_ECBulReg16550@@UAAPAXI@Z| ; CBulReg16550::`vftable'
	DCD	|?Init@CBulReg16550@@UAAHXZ|
	DCD	|?Write_DATA@CBulReg16550@@UAAXE@Z|
	DCD	|?Read_Data@CBulReg16550@@UAAEXZ|
	DCD	|?Write_IER@CBulReg16550@@UAAXE@Z|
	DCD	|?Read_IER@CBulReg16550@@UAAEXZ|
	DCD	|?Write_FCR@CBulReg16550@@UAAXE@Z|
	DCD	|?Read_FCR@CBulReg16550@@UAAEXZ|
	DCD	|?Read_IIR@CBulReg16550@@UAAEXZ|
	DCD	|?Write_LCR@CBulReg16550@@UAAXE@Z|
	DCD	|?Read_LCR@CBulReg16550@@UAAEXZ|
	DCD	|?Write_MCR@CBulReg16550@@UAAXE@Z|
	DCD	|?Read_MCR@CBulReg16550@@UAAEXZ|
	DCD	|?Write_LSR@CBulReg16550@@UAAXE@Z|
	DCD	|?Read_LSR@CBulReg16550@@UAAEXZ|
	DCD	|?Write_MSR@CBulReg16550@@UAAXE@Z|
	DCD	|?Read_MSR@CBulReg16550@@UAAEXZ|
	DCD	|?Write_SCR@CBulReg16550@@UAAXE@Z|
	DCD	|?Read_SCR@CBulReg16550@@UAAEXZ|
	DCD	|?Write_BaudRate@CReg16550@@UAAHG@Z|
	DCD	|?Backup@CBulReg16550@@UAAXXZ|
	DCD	|?Restore@CBulReg16550@@UAAXXZ|
	DCD	|?DumpRegister@CReg16550@@UAAXXZ|
	DCD	|?Write_SIR@CBulReg16550@@UAAXE@Z|
	DCD	|?Read_SIR@CBulReg16550@@UAAEXZ|
	DCD	|?Read_FIOR@CBulReg16550@@UAAEXZ|
	DCD	|?Read_ABR@CBulReg16550@@UAAEXZ|
	DCD	|?Write_ABR@CBulReg16550@@UAAXE@Z|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CBulReg16550@@QAA@PAUBULVERDE_UART_REG@@@Z| PROC ; CBulReg16550::CBulReg16550

; 47   : {

  00000		 |$LN5@CBulReg165|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36607|
  00010	e3a02004	 mov         r2, #4
  00014	e59d1014	 ldr         r1, [sp, #0x14]
  00018	e59d0010	 ldr         r0, [sp, #0x10]
  0001c	eb000000	 bl          |??0CReg16550@@QAA@PAEK@Z|
  00020	e58d0004	 str         r0, [sp, #4]
  00024	e59f202c	 ldr         r2, [pc, #0x2C]
  00028	e59d3010	 ldr         r3, [sp, #0x10]
  0002c	e5832000	 str         r2, [r3]

; 48   :     m_pRegAddr = (PBULVERDE_UART_REG)pRegAddr;

  00030	e59d3010	 ldr         r3, [sp, #0x10]
  00034	e283203c	 add         r2, r3, #0x3C
  00038	e59d3014	 ldr         r3, [sp, #0x14]
  0003c	e5823000	 str         r3, [r2]

; 49   : }

  00040	e59d3010	 ldr         r3, [sp, #0x10]
  00044	e58d3000	 str         r3, [sp]
  00048	e59d0000	 ldr         r0, [sp]
  0004c	e28dd008	 add         sp, sp, #8
  00050	e89d6000	 ldmia       sp, {sp, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$LN6@CBulReg165|
  00058		 |$LN7@CBulReg165|
  00058	00000000	 DCD         |??_7CBulReg16550@@6B@|
  0005c		 |$M36608|

			 ENDP  ; |??0CBulReg16550@@QAA@PAUBULVERDE_UART_REG@@@Z|, CBulReg16550::CBulReg16550

; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul16550.h

  00000			 AREA	 |.pdata|, PDATA
|$T36620| DCD	|$LN7@Init|
	DCD	0x40001404
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Init@CBulReg16550@@UAAHXZ| PROC	; CBulReg16550::Init

; 94   :     virtual BOOL    Init() { return (m_pRegAddr!=NULL); } ;

  00000		 |$LN7@Init|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36617|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e283303c	 add         r3, r3, #0x3C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e3530000	 cmp         r3, #0
  00020	0a000002	 beq         |$LN3@Init|
  00024	e3a03001	 mov         r3, #1
  00028	e58d3004	 str         r3, [sp, #4]
  0002c	ea000001	 b           |$LN4@Init|
  00030		 |$LN3@Init|
  00030	e3a03000	 mov         r3, #0
  00034	e58d3004	 str         r3, [sp, #4]
  00038		 |$LN4@Init|
  00038	e59d3004	 ldr         r3, [sp, #4]
  0003c	e58d3000	 str         r3, [sp]
  00040	e59d0000	 ldr         r0, [sp]
  00044	e28dd008	 add         sp, sp, #8
  00048	e89d6000	 ldmia       sp, {sp, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M36618|

			 ENDP  ; |?Init@CBulReg16550@@UAAHXZ|, CBulReg16550::Init

	IMPORT	|WRITE_REGISTER_ULONG|

  00000			 AREA	 |.pdata|, PDATA
|$T36627| DCD	|$LN5@Write_DATA|
	DCD	0x40000a03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_DATA@CBulReg16550@@UAAXE@Z| PROC ; CBulReg16550::Write_DATA

; 96   :     virtual void    Write_DATA(UINT8 uData) { WRITE_REGISTER_ULONG((PULONG) &(m_pRegAddr->thr_rbr_dll), uData); };

  00000		 |$LN5@Write_DATA|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36624|
  0000c	e5dd100c	 ldrb        r1, [sp, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e283303c	 add         r3, r3, #0x3C
  00018	e5930000	 ldr         r0, [r3]
  0001c	eb000000	 bl          WRITE_REGISTER_ULONG
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M36625|

			 ENDP  ; |?Write_DATA@CBulReg16550@@UAAXE@Z|, CBulReg16550::Write_DATA

	IMPORT	|READ_REGISTER_ULONG|

  00000			 AREA	 |.pdata|, PDATA
|$T36635| DCD	|$LN5@Read_Data|
	DCD	0x40001004
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_Data@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_Data

; 97   :     virtual UINT8   Read_Data() { return (UCHAR)READ_REGISTER_ULONG((PULONG)&(m_pRegAddr->thr_rbr_dll)); } ;

  00000		 |$LN5@Read_Data|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36632|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e283303c	 add         r3, r3, #0x3C
  00018	e5930000	 ldr         r0, [r3]
  0001c	eb000000	 bl          READ_REGISTER_ULONG
  00020	e58d0004	 str         r0, [sp, #4]
  00024	e59d3004	 ldr         r3, [sp, #4]
  00028	e20330ff	 and         r3, r3, #0xFF
  0002c	e5cd3000	 strb        r3, [sp]
  00030	e5dd0000	 ldrb        r0, [sp]
  00034	e28dd008	 add         sp, sp, #8
  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$M36633|

			 ENDP  ; |?Read_Data@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_Data


  00000			 AREA	 |.pdata|, PDATA
|$T36642| DCD	|$LN5@Write_IER|
	DCD	0x40000b03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_IER@CBulReg16550@@UAAXE@Z| PROC ; CBulReg16550::Write_IER

; 98   :     virtual void    Write_IER(UINT8 uData) { WRITE_REGISTER_ULONG((PULONG)&(m_pRegAddr->ier_dlh), uData); };

  00000		 |$LN5@Write_IER|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36639|
  0000c	e5dd100c	 ldrb        r1, [sp, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e283303c	 add         r3, r3, #0x3C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e2830004	 add         r0, r3, #4
  00020	eb000000	 bl          WRITE_REGISTER_ULONG
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M36640|

			 ENDP  ; |?Write_IER@CBulReg16550@@UAAXE@Z|, CBulReg16550::Write_IER


  00000			 AREA	 |.pdata|, PDATA
|$T36650| DCD	|$LN5@Read_IER|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_IER@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_IER

; 99   :     virtual UINT8   Read_IER() { return (UCHAR)READ_REGISTER_ULONG((PULONG)&(m_pRegAddr->ier_dlh)); };

  00000		 |$LN5@Read_IER|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36647|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e283303c	 add         r3, r3, #0x3C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e2830004	 add         r0, r3, #4
  00020	eb000000	 bl          READ_REGISTER_ULONG
  00024	e58d0004	 str         r0, [sp, #4]
  00028	e59d3004	 ldr         r3, [sp, #4]
  0002c	e20330ff	 and         r3, r3, #0xFF
  00030	e5cd3000	 strb        r3, [sp]
  00034	e5dd0000	 ldrb        r0, [sp]
  00038	e28dd008	 add         sp, sp, #8
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M36648|

			 ENDP  ; |?Read_IER@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_IER


  00000			 AREA	 |.pdata|, PDATA
|$T36657| DCD	|$LN5@Write_FCR|
	DCD	0x40000f03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_FCR@CBulReg16550@@UAAXE@Z| PROC ; CBulReg16550::Write_FCR

; 100  :     virtual void    Write_FCR(UINT8 uData) { WRITE_REGISTER_ULONG( (PULONG)&(m_pRegAddr->iir_fcr), uData);m_FCR = uData; };

  00000		 |$LN5@Write_FCR|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36654|
  0000c	e5dd100c	 ldrb        r1, [sp, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e283303c	 add         r3, r3, #0x3C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e2830008	 add         r0, r3, #8
  00020	eb000000	 bl          WRITE_REGISTER_ULONG
  00024	e59d3008	 ldr         r3, [sp, #8]
  00028	e283200c	 add         r2, r3, #0xC
  0002c	e5dd300c	 ldrb        r3, [sp, #0xC]
  00030	e5c23000	 strb        r3, [r2]
  00034	e89d6000	 ldmia       sp, {sp, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M36655|

			 ENDP  ; |?Write_FCR@CBulReg16550@@UAAXE@Z|, CBulReg16550::Write_FCR


  00000			 AREA	 |.pdata|, PDATA
|$T36665| DCD	|$LN5@Read_FCR|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_FCR@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_FCR

; 101  :     virtual UINT8   Read_FCR() { return m_FCR; };

  00000		 |$LN5@Read_FCR|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36662|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e283300c	 add         r3, r3, #0xC
  00018	e5d33000	 ldrb        r3, [r3]
  0001c	e5cd3000	 strb        r3, [sp]
  00020	e5dd0000	 ldrb        r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M36663|

			 ENDP  ; |?Read_FCR@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_FCR


  00000			 AREA	 |.pdata|, PDATA
|$T36673| DCD	|$LN5@Read_IIR|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_IIR@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_IIR

; 102  :     virtual UINT8   Read_IIR() { return (UCHAR)READ_REGISTER_ULONG( (PULONG)&(m_pRegAddr->iir_fcr)) ;};

  00000		 |$LN5@Read_IIR|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36670|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e283303c	 add         r3, r3, #0x3C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e2830008	 add         r0, r3, #8
  00020	eb000000	 bl          READ_REGISTER_ULONG
  00024	e58d0004	 str         r0, [sp, #4]
  00028	e59d3004	 ldr         r3, [sp, #4]
  0002c	e20330ff	 and         r3, r3, #0xFF
  00030	e5cd3000	 strb        r3, [sp]
  00034	e5dd0000	 ldrb        r0, [sp]
  00038	e28dd008	 add         sp, sp, #8
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M36671|

			 ENDP  ; |?Read_IIR@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_IIR


  00000			 AREA	 |.pdata|, PDATA
|$T36680| DCD	|$LN5@Write_LCR|
	DCD	0x40000b03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_LCR@CBulReg16550@@UAAXE@Z| PROC ; CBulReg16550::Write_LCR

; 103  :     virtual void    Write_LCR(UINT8 uData) { WRITE_REGISTER_ULONG( (PULONG)&(m_pRegAddr->lcr), uData);};

  00000		 |$LN5@Write_LCR|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36677|
  0000c	e5dd100c	 ldrb        r1, [sp, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e283303c	 add         r3, r3, #0x3C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e283000c	 add         r0, r3, #0xC
  00020	eb000000	 bl          WRITE_REGISTER_ULONG
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M36678|

			 ENDP  ; |?Write_LCR@CBulReg16550@@UAAXE@Z|, CBulReg16550::Write_LCR


  00000			 AREA	 |.pdata|, PDATA
|$T36688| DCD	|$LN5@Read_LCR|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_LCR@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_LCR

; 104  :     virtual UINT8   Read_LCR() { return (UCHAR)READ_REGISTER_ULONG( (PULONG)&(m_pRegAddr->lcr));};

  00000		 |$LN5@Read_LCR|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36685|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e283303c	 add         r3, r3, #0x3C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e283000c	 add         r0, r3, #0xC
  00020	eb000000	 bl          READ_REGISTER_ULONG
  00024	e58d0004	 str         r0, [sp, #4]
  00028	e59d3004	 ldr         r3, [sp, #4]
  0002c	e20330ff	 and         r3, r3, #0xFF
  00030	e5cd3000	 strb        r3, [sp]
  00034	e5dd0000	 ldrb        r0, [sp]
  00038	e28dd008	 add         sp, sp, #8
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M36686|

			 ENDP  ; |?Read_LCR@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_LCR


  00000			 AREA	 |.pdata|, PDATA
|$T36695| DCD	|$LN5@Write_MCR|
	DCD	0x40000b03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_MCR@CBulReg16550@@UAAXE@Z| PROC ; CBulReg16550::Write_MCR

; 105  :     virtual void    Write_MCR(UINT8 uData) { WRITE_REGISTER_ULONG( (PULONG)&(m_pRegAddr->mcr), uData);};

  00000		 |$LN5@Write_MCR|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36692|
  0000c	e5dd100c	 ldrb        r1, [sp, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e283303c	 add         r3, r3, #0x3C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e2830010	 add         r0, r3, #0x10
  00020	eb000000	 bl          WRITE_REGISTER_ULONG
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M36693|

			 ENDP  ; |?Write_MCR@CBulReg16550@@UAAXE@Z|, CBulReg16550::Write_MCR


  00000			 AREA	 |.pdata|, PDATA
|$T36703| DCD	|$LN5@Read_MCR|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_MCR@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_MCR

; 106  :     virtual UINT8   Read_MCR() { return (UCHAR) READ_REGISTER_ULONG( (PULONG)&(m_pRegAddr->mcr) );};

  00000		 |$LN5@Read_MCR|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36700|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e283303c	 add         r3, r3, #0x3C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e2830010	 add         r0, r3, #0x10
  00020	eb000000	 bl          READ_REGISTER_ULONG
  00024	e58d0004	 str         r0, [sp, #4]
  00028	e59d3004	 ldr         r3, [sp, #4]
  0002c	e20330ff	 and         r3, r3, #0xFF
  00030	e5cd3000	 strb        r3, [sp]
  00034	e5dd0000	 ldrb        r0, [sp]
  00038	e28dd008	 add         sp, sp, #8
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M36701|

			 ENDP  ; |?Read_MCR@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_MCR


  00000			 AREA	 |.pdata|, PDATA
|$T36710| DCD	|$LN5@Write_LSR|
	DCD	0x40000b03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_LSR@CBulReg16550@@UAAXE@Z| PROC ; CBulReg16550::Write_LSR

; 107  :     virtual void    Write_LSR(UINT8 uData) { WRITE_REGISTER_ULONG( (PULONG)&(m_pRegAddr->lsr), uData);};

  00000		 |$LN5@Write_LSR|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36707|
  0000c	e5dd100c	 ldrb        r1, [sp, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e283303c	 add         r3, r3, #0x3C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e2830014	 add         r0, r3, #0x14
  00020	eb000000	 bl          WRITE_REGISTER_ULONG
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M36708|

			 ENDP  ; |?Write_LSR@CBulReg16550@@UAAXE@Z|, CBulReg16550::Write_LSR


  00000			 AREA	 |.pdata|, PDATA
|$T36718| DCD	|$LN5@Read_LSR|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_LSR@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_LSR

; 108  :     virtual UINT8   Read_LSR() { return (UCHAR) READ_REGISTER_ULONG( (PULONG)&(m_pRegAddr->lsr) );};

  00000		 |$LN5@Read_LSR|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36715|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e283303c	 add         r3, r3, #0x3C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e2830014	 add         r0, r3, #0x14
  00020	eb000000	 bl          READ_REGISTER_ULONG
  00024	e58d0004	 str         r0, [sp, #4]
  00028	e59d3004	 ldr         r3, [sp, #4]
  0002c	e20330ff	 and         r3, r3, #0xFF
  00030	e5cd3000	 strb        r3, [sp]
  00034	e5dd0000	 ldrb        r0, [sp]
  00038	e28dd008	 add         sp, sp, #8
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M36716|

			 ENDP  ; |?Read_LSR@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_LSR


  00000			 AREA	 |.pdata|, PDATA
|$T36725| DCD	|$LN5@Write_MSR|
	DCD	0x40000b03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_MSR@CBulReg16550@@UAAXE@Z| PROC ; CBulReg16550::Write_MSR

; 109  :     virtual void    Write_MSR(UINT8 uData) { WRITE_REGISTER_ULONG( (PULONG)&(m_pRegAddr->msr), uData) ; };

  00000		 |$LN5@Write_MSR|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36722|
  0000c	e5dd100c	 ldrb        r1, [sp, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e283303c	 add         r3, r3, #0x3C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e2830018	 add         r0, r3, #0x18
  00020	eb000000	 bl          WRITE_REGISTER_ULONG
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M36723|

			 ENDP  ; |?Write_MSR@CBulReg16550@@UAAXE@Z|, CBulReg16550::Write_MSR


  00000			 AREA	 |.pdata|, PDATA
|$T36733| DCD	|$LN5@Read_MSR|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_MSR@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_MSR

; 110  :     virtual UINT8   Read_MSR() { return (UCHAR) READ_REGISTER_ULONG( (PULONG)&(m_pRegAddr->msr)); };

  00000		 |$LN5@Read_MSR|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36730|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e283303c	 add         r3, r3, #0x3C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e2830018	 add         r0, r3, #0x18
  00020	eb000000	 bl          READ_REGISTER_ULONG
  00024	e58d0004	 str         r0, [sp, #4]
  00028	e59d3004	 ldr         r3, [sp, #4]
  0002c	e20330ff	 and         r3, r3, #0xFF
  00030	e5cd3000	 strb        r3, [sp]
  00034	e5dd0000	 ldrb        r0, [sp]
  00038	e28dd008	 add         sp, sp, #8
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M36731|

			 ENDP  ; |?Read_MSR@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_MSR


  00000			 AREA	 |.pdata|, PDATA
|$T36740| DCD	|$LN5@Write_SCR|
	DCD	0x40000b03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_SCR@CBulReg16550@@UAAXE@Z| PROC ; CBulReg16550::Write_SCR

; 111  :     virtual void    Write_SCR(UINT8 uData) { WRITE_REGISTER_ULONG( (PULONG)&(m_pRegAddr->scr), uData );};

  00000		 |$LN5@Write_SCR|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36737|
  0000c	e5dd100c	 ldrb        r1, [sp, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e283303c	 add         r3, r3, #0x3C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e283001c	 add         r0, r3, #0x1C
  00020	eb000000	 bl          WRITE_REGISTER_ULONG
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M36738|

			 ENDP  ; |?Write_SCR@CBulReg16550@@UAAXE@Z|, CBulReg16550::Write_SCR


  00000			 AREA	 |.pdata|, PDATA
|$T36748| DCD	|$LN5@Read_SCR|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_SCR@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_SCR

; 112  :     virtual UINT8   Read_SCR() { return (UCHAR) READ_REGISTER_ULONG( (PULONG)&(m_pRegAddr->scr)); };

  00000		 |$LN5@Read_SCR|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36745|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e283303c	 add         r3, r3, #0x3C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e283001c	 add         r0, r3, #0x1C
  00020	eb000000	 bl          READ_REGISTER_ULONG
  00024	e58d0004	 str         r0, [sp, #4]
  00028	e59d3004	 ldr         r3, [sp, #4]
  0002c	e20330ff	 and         r3, r3, #0xFF
  00030	e5cd3000	 strb        r3, [sp]
  00034	e5dd0000	 ldrb        r0, [sp]
  00038	e28dd008	 add         sp, sp, #8
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M36746|

			 ENDP  ; |?Read_SCR@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_SCR


  00000			 AREA	 |.pdata|, PDATA
|$T36755| DCD	|$LN5@Write_SIR|
	DCD	0x40000b03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_SIR@CBulReg16550@@UAAXE@Z| PROC ; CBulReg16550::Write_SIR

; 117  :     virtual void    Write_SIR(UINT8 uData) { WRITE_REGISTER_ULONG( (PULONG)&(m_pRegAddr->irdasel), uData);};

  00000		 |$LN5@Write_SIR|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36752|
  0000c	e5dd100c	 ldrb        r1, [sp, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e283303c	 add         r3, r3, #0x3C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e2830020	 add         r0, r3, #0x20
  00020	eb000000	 bl          WRITE_REGISTER_ULONG
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M36753|

			 ENDP  ; |?Write_SIR@CBulReg16550@@UAAXE@Z|, CBulReg16550::Write_SIR


  00000			 AREA	 |.pdata|, PDATA
|$T36763| DCD	|$LN5@Read_SIR|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_SIR@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_SIR

; 118  :     virtual UINT8    Read_SIR() { return (UCHAR) READ_REGISTER_ULONG( (PULONG)&(m_pRegAddr->irdasel)); };

  00000		 |$LN5@Read_SIR|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36760|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e283303c	 add         r3, r3, #0x3C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e2830020	 add         r0, r3, #0x20
  00020	eb000000	 bl          READ_REGISTER_ULONG
  00024	e58d0004	 str         r0, [sp, #4]
  00028	e59d3004	 ldr         r3, [sp, #4]
  0002c	e20330ff	 and         r3, r3, #0xFF
  00030	e5cd3000	 strb        r3, [sp]
  00034	e5dd0000	 ldrb        r0, [sp]
  00038	e28dd008	 add         sp, sp, #8
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M36761|

			 ENDP  ; |?Read_SIR@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_SIR


  00000			 AREA	 |.pdata|, PDATA
|$T36771| DCD	|$LN5@Read_FIOR|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_FIOR@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_FIOR

; 120  :     virtual UINT8   Read_FIOR() { return (UCHAR) READ_REGISTER_ULONG( (PULONG)&(m_pRegAddr->fior)); };

  00000		 |$LN5@Read_FIOR|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36768|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e283303c	 add         r3, r3, #0x3C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e2830024	 add         r0, r3, #0x24
  00020	eb000000	 bl          READ_REGISTER_ULONG
  00024	e58d0004	 str         r0, [sp, #4]
  00028	e59d3004	 ldr         r3, [sp, #4]
  0002c	e20330ff	 and         r3, r3, #0xFF
  00030	e5cd3000	 strb        r3, [sp]
  00034	e5dd0000	 ldrb        r0, [sp]
  00038	e28dd008	 add         sp, sp, #8
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M36769|

			 ENDP  ; |?Read_FIOR@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_FIOR


  00000			 AREA	 |.pdata|, PDATA
|$T36779| DCD	|$LN5@Read_ABR|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_ABR@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_ABR

; 121  :     virtual UINT8   Read_ABR() { return (UCHAR) READ_REGISTER_ULONG( (PULONG)&(m_pRegAddr->abr));};

  00000		 |$LN5@Read_ABR|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36776|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e283303c	 add         r3, r3, #0x3C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e2830028	 add         r0, r3, #0x28
  00020	eb000000	 bl          READ_REGISTER_ULONG
  00024	e58d0004	 str         r0, [sp, #4]
  00028	e59d3004	 ldr         r3, [sp, #4]
  0002c	e20330ff	 and         r3, r3, #0xFF
  00030	e5cd3000	 strb        r3, [sp]
  00034	e5dd0000	 ldrb        r0, [sp]
  00038	e28dd008	 add         sp, sp, #8
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M36777|

			 ENDP  ; |?Read_ABR@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_ABR


  00000			 AREA	 |.pdata|, PDATA
|$T36786| DCD	|$LN5@Write_ABR|
	DCD	0x40000b03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_ABR@CBulReg16550@@UAAXE@Z| PROC ; CBulReg16550::Write_ABR

; 122  :     virtual void    Write_ABR(UINT8 uData) {  WRITE_REGISTER_ULONG( (PULONG)&(m_pRegAddr->abr),uData);};

  00000		 |$LN5@Write_ABR|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36783|
  0000c	e5dd100c	 ldrb        r1, [sp, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e283303c	 add         r3, r3, #0x3C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e2830028	 add         r0, r3, #0x28
  00020	eb000000	 bl          WRITE_REGISTER_ULONG
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M36784|

			 ENDP  ; |?Write_ABR@CBulReg16550@@UAAXE@Z|, CBulReg16550::Write_ABR

	EXPORT	|??1CBulReg16550@@UAA@XZ|		; CBulReg16550::~CBulReg16550
	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T36794| DCD	|$LN6@scalar|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCBulReg16550@@UAAPAXI@Z| PROC	; CBulReg16550::`scalar deleting destructor'
  00000		 |$LN6@scalar|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36791|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1CBulReg16550@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M36792|

			 ENDP  ; |??_GCBulReg16550@@UAAPAXI@Z|, CBulReg16550::`scalar deleting destructor'

	EXPORT	|??1CReg16550@@UAA@XZ|			; CReg16550::~CReg16550

  00000			 AREA	 |.pdata|, PDATA
|$T36801| DCD	|$LN5@CBulReg165@2|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CBulReg16550@@UAA@XZ| PROC		; CBulReg16550::~CBulReg16550
  00000		 |$LN5@CBulReg165@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36798|
  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          |??1CReg16550@@UAA@XZ|
  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M36799|

			 ENDP  ; |??1CBulReg16550@@UAA@XZ|, CBulReg16550::~CBulReg16550

	EXPORT	|??_7CReg16550@@6B@| [ DATA ]		; CReg16550::`vftable'
	EXPORT	|?Init@CReg16550@@UAAHXZ|		; CReg16550::Init
	EXPORT	|?Write_DATA@CReg16550@@UAAXE@Z|	; CReg16550::Write_DATA
	EXPORT	|?Read_Data@CReg16550@@UAAEXZ|		; CReg16550::Read_Data
	EXPORT	|?Write_IER@CReg16550@@UAAXE@Z|		; CReg16550::Write_IER
	EXPORT	|?Read_IER@CReg16550@@UAAEXZ|		; CReg16550::Read_IER
	EXPORT	|?Write_FCR@CReg16550@@UAAXE@Z|		; CReg16550::Write_FCR
	EXPORT	|?Read_FCR@CReg16550@@UAAEXZ|		; CReg16550::Read_FCR
	EXPORT	|?Read_IIR@CReg16550@@UAAEXZ|		; CReg16550::Read_IIR
	EXPORT	|?Write_LCR@CReg16550@@UAAXE@Z|		; CReg16550::Write_LCR
	EXPORT	|?Read_LCR@CReg16550@@UAAEXZ|		; CReg16550::Read_LCR
	EXPORT	|?Write_MCR@CReg16550@@UAAXE@Z|		; CReg16550::Write_MCR
	EXPORT	|?Read_MCR@CReg16550@@UAAEXZ|		; CReg16550::Read_MCR
	EXPORT	|?Write_LSR@CReg16550@@UAAXE@Z|		; CReg16550::Write_LSR
	EXPORT	|?Read_LSR@CReg16550@@UAAEXZ|		; CReg16550::Read_LSR
	EXPORT	|?Write_MSR@CReg16550@@UAAXE@Z|		; CReg16550::Write_MSR
	EXPORT	|?Read_MSR@CReg16550@@UAAEXZ|		; CReg16550::Read_MSR
	EXPORT	|?Write_SCR@CReg16550@@UAAXE@Z|		; CReg16550::Write_SCR
	EXPORT	|?Read_SCR@CReg16550@@UAAEXZ|		; CReg16550::Read_SCR
	IMPORT	|??_ECReg16550@@UAAPAXI@Z|, WEAK |??_GCReg16550@@UAAPAXI@Z| ; CReg16550::`vector deleting destructor', CReg16550::`scalar deleting destructor'
	IMPORT	|?Backup@CReg16550@@UAAXXZ|		; CReg16550::Backup
	IMPORT	|?Restore@CReg16550@@UAAXXZ|		; CReg16550::Restore
; File c:\wince600\public\common\oak\inc\pdd16550.h

  00000			 AREA	 |.pdata|, PDATA
|$T36808| DCD	|$LN5@CReg16550|
	DCD	0x40000903

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CReg16550@@6B@| DCD |??_ECReg16550@@UAAPAXI@Z|	; CReg16550::`vftable'
	DCD	|?Init@CReg16550@@UAAHXZ|
	DCD	|?Write_DATA@CReg16550@@UAAXE@Z|
	DCD	|?Read_Data@CReg16550@@UAAEXZ|
	DCD	|?Write_IER@CReg16550@@UAAXE@Z|
	DCD	|?Read_IER@CReg16550@@UAAEXZ|
	DCD	|?Write_FCR@CReg16550@@UAAXE@Z|
	DCD	|?Read_FCR@CReg16550@@UAAEXZ|
	DCD	|?Read_IIR@CReg16550@@UAAEXZ|
	DCD	|?Write_LCR@CReg16550@@UAAXE@Z|
	DCD	|?Read_LCR@CReg16550@@UAAEXZ|
	DCD	|?Write_MCR@CReg16550@@UAAXE@Z|
	DCD	|?Read_MCR@CReg16550@@UAAEXZ|
	DCD	|?Write_LSR@CReg16550@@UAAXE@Z|
	DCD	|?Read_LSR@CReg16550@@UAAEXZ|
	DCD	|?Write_MSR@CReg16550@@UAAXE@Z|
	DCD	|?Read_MSR@CReg16550@@UAAEXZ|
	DCD	|?Write_SCR@CReg16550@@UAAXE@Z|
	DCD	|?Read_SCR@CReg16550@@UAAEXZ|
	DCD	|?Write_BaudRate@CReg16550@@UAAHG@Z|
	DCD	|?Backup@CReg16550@@UAAXXZ|
	DCD	|?Restore@CReg16550@@UAAXXZ|
	DCD	|?DumpRegister@CReg16550@@UAAXXZ|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CReg16550@@UAA@XZ| PROC		; CReg16550::~CReg16550

; 33   :     virtual ~CReg16550() { ; };

  00000		 |$LN5@CReg16550|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36805|
  0000c	e59f200c	 ldr         r2, [pc, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e5832000	 str         r2, [r3]
  00018	e89d6000	 ldmia       sp, {sp, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$LN6@CReg16550|
  00020		 |$LN7@CReg16550|
  00020	00000000	 DCD         |??_7CReg16550@@6B@|
  00024		 |$M36806|

			 ENDP  ; |??1CReg16550@@UAA@XZ|, CReg16550::~CReg16550


  00000			 AREA	 |.pdata|, PDATA
|$T36820| DCD	|$LN7@Init@2|
	DCD	0x40001404
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Init@CReg16550@@UAAHXZ| PROC		; CReg16550::Init

; 34   :     virtual BOOL    Init() { return (m_pReg!=NULL); } ;

  00000		 |$LN7@Init@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36817|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e2833004	 add         r3, r3, #4
  00018	e5933000	 ldr         r3, [r3]
  0001c	e3530000	 cmp         r3, #0
  00020	0a000002	 beq         |$LN3@Init@2|
  00024	e3a03001	 mov         r3, #1
  00028	e58d3004	 str         r3, [sp, #4]
  0002c	ea000001	 b           |$LN4@Init@2|
  00030		 |$LN3@Init@2|
  00030	e3a03000	 mov         r3, #0
  00034	e58d3004	 str         r3, [sp, #4]
  00038		 |$LN4@Init@2|
  00038	e59d3004	 ldr         r3, [sp, #4]
  0003c	e58d3000	 str         r3, [sp]
  00040	e59d0000	 ldr         r0, [sp]
  00044	e28dd008	 add         sp, sp, #8
  00048	e89d6000	 ldmia       sp, {sp, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M36818|

			 ENDP  ; |?Init@CReg16550@@UAAHXZ|, CReg16550::Init

	IMPORT	|WRITE_PORT_UCHAR|

  00000			 AREA	 |.pdata|, PDATA
|$T36827| DCD	|$LN5@Write_DATA@2|
	DCD	0x40000a03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_DATA@CReg16550@@UAAXE@Z| PROC	; CReg16550::Write_DATA

; 36   :     virtual void    Write_DATA(UINT8 uData) { WRITE_PORT_UCHAR( m_pData, uData); };

  00000		 |$LN5@Write_DATA@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36824|
  0000c	e5dd100c	 ldrb        r1, [sp, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e2833014	 add         r3, r3, #0x14
  00018	e5930000	 ldr         r0, [r3]
  0001c	eb000000	 bl          WRITE_PORT_UCHAR
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M36825|

			 ENDP  ; |?Write_DATA@CReg16550@@UAAXE@Z|, CReg16550::Write_DATA

	IMPORT	|READ_PORT_UCHAR|

  00000			 AREA	 |.pdata|, PDATA
|$T36835| DCD	|$LN5@Read_Data@2|
	DCD	0x40000f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_Data@CReg16550@@UAAEXZ| PROC	; CReg16550::Read_Data

; 37   :     virtual UINT8   Read_Data() { return READ_PORT_UCHAR(m_pData); } ;

  00000		 |$LN5@Read_Data@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36832|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e2833014	 add         r3, r3, #0x14
  00018	e5930000	 ldr         r0, [r3]
  0001c	eb000000	 bl          READ_PORT_UCHAR
  00020	e5cd0004	 strb        r0, [sp, #4]
  00024	e5dd3004	 ldrb        r3, [sp, #4]
  00028	e5cd3000	 strb        r3, [sp]
  0002c	e5dd0000	 ldrb        r0, [sp]
  00030	e28dd008	 add         sp, sp, #8
  00034	e89d6000	 ldmia       sp, {sp, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M36833|

			 ENDP  ; |?Read_Data@CReg16550@@UAAEXZ|, CReg16550::Read_Data


  00000			 AREA	 |.pdata|, PDATA
|$T36842| DCD	|$LN5@Write_IER@2|
	DCD	0x40000a03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_IER@CReg16550@@UAAXE@Z| PROC	; CReg16550::Write_IER

; 38   :     virtual void    Write_IER(UINT8 uData) { WRITE_PORT_UCHAR(m_pIER, uData); };

  00000		 |$LN5@Write_IER@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36839|
  0000c	e5dd100c	 ldrb        r1, [sp, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e2833018	 add         r3, r3, #0x18
  00018	e5930000	 ldr         r0, [r3]
  0001c	eb000000	 bl          WRITE_PORT_UCHAR
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M36840|

			 ENDP  ; |?Write_IER@CReg16550@@UAAXE@Z|, CReg16550::Write_IER


  00000			 AREA	 |.pdata|, PDATA
|$T36850| DCD	|$LN5@Read_IER@2|
	DCD	0x40000f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_IER@CReg16550@@UAAEXZ| PROC	; CReg16550::Read_IER

; 39   :     virtual UINT8   Read_IER() { return READ_PORT_UCHAR(m_pIER); };

  00000		 |$LN5@Read_IER@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36847|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e2833018	 add         r3, r3, #0x18
  00018	e5930000	 ldr         r0, [r3]
  0001c	eb000000	 bl          READ_PORT_UCHAR
  00020	e5cd0004	 strb        r0, [sp, #4]
  00024	e5dd3004	 ldrb        r3, [sp, #4]
  00028	e5cd3000	 strb        r3, [sp]
  0002c	e5dd0000	 ldrb        r0, [sp]
  00030	e28dd008	 add         sp, sp, #8
  00034	e89d6000	 ldmia       sp, {sp, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M36848|

			 ENDP  ; |?Read_IER@CReg16550@@UAAEXZ|, CReg16550::Read_IER


  00000			 AREA	 |.pdata|, PDATA
|$T36857| DCD	|$LN5@Write_FCR@2|
	DCD	0x40000e03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_FCR@CReg16550@@UAAXE@Z| PROC	; CReg16550::Write_FCR

; 40   :     virtual void    Write_FCR(UINT8 uData) { WRITE_PORT_UCHAR( m_pIIR_FCR, uData);m_FCR = uData; };

  00000		 |$LN5@Write_FCR@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36854|
  0000c	e5dd100c	 ldrb        r1, [sp, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e283301c	 add         r3, r3, #0x1C
  00018	e5930000	 ldr         r0, [r3]
  0001c	eb000000	 bl          WRITE_PORT_UCHAR
  00020	e59d3008	 ldr         r3, [sp, #8]
  00024	e283200c	 add         r2, r3, #0xC
  00028	e5dd300c	 ldrb        r3, [sp, #0xC]
  0002c	e5c23000	 strb        r3, [r2]
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M36855|

			 ENDP  ; |?Write_FCR@CReg16550@@UAAXE@Z|, CReg16550::Write_FCR


  00000			 AREA	 |.pdata|, PDATA
|$T36865| DCD	|$LN5@Read_FCR@2|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_FCR@CReg16550@@UAAEXZ| PROC	; CReg16550::Read_FCR

; 41   :     virtual UINT8   Read_FCR() { return m_FCR; };

  00000		 |$LN5@Read_FCR@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36862|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e283300c	 add         r3, r3, #0xC
  00018	e5d33000	 ldrb        r3, [r3]
  0001c	e5cd3000	 strb        r3, [sp]
  00020	e5dd0000	 ldrb        r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M36863|

			 ENDP  ; |?Read_FCR@CReg16550@@UAAEXZ|, CReg16550::Read_FCR


  00000			 AREA	 |.pdata|, PDATA
|$T36873| DCD	|$LN5@Read_IIR@2|
	DCD	0x40000f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_IIR@CReg16550@@UAAEXZ| PROC	; CReg16550::Read_IIR

; 42   :     virtual UINT8   Read_IIR() { return READ_PORT_UCHAR( m_pIIR_FCR) ;};

  00000		 |$LN5@Read_IIR@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36870|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e283301c	 add         r3, r3, #0x1C
  00018	e5930000	 ldr         r0, [r3]
  0001c	eb000000	 bl          READ_PORT_UCHAR
  00020	e5cd0004	 strb        r0, [sp, #4]
  00024	e5dd3004	 ldrb        r3, [sp, #4]
  00028	e5cd3000	 strb        r3, [sp]
  0002c	e5dd0000	 ldrb        r0, [sp]
  00030	e28dd008	 add         sp, sp, #8
  00034	e89d6000	 ldmia       sp, {sp, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M36871|

			 ENDP  ; |?Read_IIR@CReg16550@@UAAEXZ|, CReg16550::Read_IIR


  00000			 AREA	 |.pdata|, PDATA
|$T36880| DCD	|$LN5@Write_LCR@2|
	DCD	0x40000a03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_LCR@CReg16550@@UAAXE@Z| PROC	; CReg16550::Write_LCR

; 43   :     virtual void    Write_LCR(UINT8 uData) { WRITE_PORT_UCHAR(m_pLCR, uData);};

  00000		 |$LN5@Write_LCR@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36877|
  0000c	e5dd100c	 ldrb        r1, [sp, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e2833020	 add         r3, r3, #0x20
  00018	e5930000	 ldr         r0, [r3]
  0001c	eb000000	 bl          WRITE_PORT_UCHAR
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M36878|

			 ENDP  ; |?Write_LCR@CReg16550@@UAAXE@Z|, CReg16550::Write_LCR


  00000			 AREA	 |.pdata|, PDATA
|$T36888| DCD	|$LN5@Read_LCR@2|
	DCD	0x40000f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_LCR@CReg16550@@UAAEXZ| PROC	; CReg16550::Read_LCR

; 44   :     virtual UINT8   Read_LCR() { return READ_PORT_UCHAR(m_pLCR);};

  00000		 |$LN5@Read_LCR@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36885|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e2833020	 add         r3, r3, #0x20
  00018	e5930000	 ldr         r0, [r3]
  0001c	eb000000	 bl          READ_PORT_UCHAR
  00020	e5cd0004	 strb        r0, [sp, #4]
  00024	e5dd3004	 ldrb        r3, [sp, #4]
  00028	e5cd3000	 strb        r3, [sp]
  0002c	e5dd0000	 ldrb        r0, [sp]
  00030	e28dd008	 add         sp, sp, #8
  00034	e89d6000	 ldmia       sp, {sp, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M36886|

			 ENDP  ; |?Read_LCR@CReg16550@@UAAEXZ|, CReg16550::Read_LCR


  00000			 AREA	 |.pdata|, PDATA
|$T36895| DCD	|$LN5@Write_MCR@2|
	DCD	0x40000a03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_MCR@CReg16550@@UAAXE@Z| PROC	; CReg16550::Write_MCR

; 45   :     virtual void    Write_MCR(UINT8 uData) { WRITE_PORT_UCHAR( m_pMCR, uData);};

  00000		 |$LN5@Write_MCR@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36892|
  0000c	e5dd100c	 ldrb        r1, [sp, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e2833024	 add         r3, r3, #0x24
  00018	e5930000	 ldr         r0, [r3]
  0001c	eb000000	 bl          WRITE_PORT_UCHAR
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M36893|

			 ENDP  ; |?Write_MCR@CReg16550@@UAAXE@Z|, CReg16550::Write_MCR


  00000			 AREA	 |.pdata|, PDATA
|$T36903| DCD	|$LN5@Read_MCR@2|
	DCD	0x40000f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_MCR@CReg16550@@UAAEXZ| PROC	; CReg16550::Read_MCR

; 46   :     virtual UINT8   Read_MCR() { return READ_PORT_UCHAR(m_pMCR);};

  00000		 |$LN5@Read_MCR@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36900|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e2833024	 add         r3, r3, #0x24
  00018	e5930000	 ldr         r0, [r3]
  0001c	eb000000	 bl          READ_PORT_UCHAR
  00020	e5cd0004	 strb        r0, [sp, #4]
  00024	e5dd3004	 ldrb        r3, [sp, #4]
  00028	e5cd3000	 strb        r3, [sp]
  0002c	e5dd0000	 ldrb        r0, [sp]
  00030	e28dd008	 add         sp, sp, #8
  00034	e89d6000	 ldmia       sp, {sp, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M36901|

			 ENDP  ; |?Read_MCR@CReg16550@@UAAEXZ|, CReg16550::Read_MCR


  00000			 AREA	 |.pdata|, PDATA
|$T36910| DCD	|$LN5@Write_LSR@2|
	DCD	0x40000a03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_LSR@CReg16550@@UAAXE@Z| PROC	; CReg16550::Write_LSR

; 47   :     virtual void    Write_LSR(UINT8 uData) { WRITE_PORT_UCHAR( m_pLSR, uData);};

  00000		 |$LN5@Write_LSR@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36907|
  0000c	e5dd100c	 ldrb        r1, [sp, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e2833028	 add         r3, r3, #0x28
  00018	e5930000	 ldr         r0, [r3]
  0001c	eb000000	 bl          WRITE_PORT_UCHAR
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M36908|

			 ENDP  ; |?Write_LSR@CReg16550@@UAAXE@Z|, CReg16550::Write_LSR


  00000			 AREA	 |.pdata|, PDATA
|$T36918| DCD	|$LN5@Read_LSR@2|
	DCD	0x40000f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_LSR@CReg16550@@UAAEXZ| PROC	; CReg16550::Read_LSR

; 48   :     virtual UINT8   Read_LSR() { return READ_PORT_UCHAR(m_pLSR);};

  00000		 |$LN5@Read_LSR@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36915|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e2833028	 add         r3, r3, #0x28
  00018	e5930000	 ldr         r0, [r3]
  0001c	eb000000	 bl          READ_PORT_UCHAR
  00020	e5cd0004	 strb        r0, [sp, #4]
  00024	e5dd3004	 ldrb        r3, [sp, #4]
  00028	e5cd3000	 strb        r3, [sp]
  0002c	e5dd0000	 ldrb        r0, [sp]
  00030	e28dd008	 add         sp, sp, #8
  00034	e89d6000	 ldmia       sp, {sp, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M36916|

			 ENDP  ; |?Read_LSR@CReg16550@@UAAEXZ|, CReg16550::Read_LSR


  00000			 AREA	 |.pdata|, PDATA
|$T36925| DCD	|$LN5@Write_MSR@2|
	DCD	0x40000a03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_MSR@CReg16550@@UAAXE@Z| PROC	; CReg16550::Write_MSR

; 49   :     virtual void    Write_MSR(UINT8 uData) { WRITE_PORT_UCHAR( m_pMSR, uData) ; };

  00000		 |$LN5@Write_MSR@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36922|
  0000c	e5dd100c	 ldrb        r1, [sp, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e283302c	 add         r3, r3, #0x2C
  00018	e5930000	 ldr         r0, [r3]
  0001c	eb000000	 bl          WRITE_PORT_UCHAR
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M36923|

			 ENDP  ; |?Write_MSR@CReg16550@@UAAXE@Z|, CReg16550::Write_MSR


  00000			 AREA	 |.pdata|, PDATA
|$T36933| DCD	|$LN5@Read_MSR@2|
	DCD	0x40000f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_MSR@CReg16550@@UAAEXZ| PROC	; CReg16550::Read_MSR

; 50   :     virtual UINT8   Read_MSR() { return READ_PORT_UCHAR( m_pMSR); };

  00000		 |$LN5@Read_MSR@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36930|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e283302c	 add         r3, r3, #0x2C
  00018	e5930000	 ldr         r0, [r3]
  0001c	eb000000	 bl          READ_PORT_UCHAR
  00020	e5cd0004	 strb        r0, [sp, #4]
  00024	e5dd3004	 ldrb        r3, [sp, #4]
  00028	e5cd3000	 strb        r3, [sp]
  0002c	e5dd0000	 ldrb        r0, [sp]
  00030	e28dd008	 add         sp, sp, #8
  00034	e89d6000	 ldmia       sp, {sp, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M36931|

			 ENDP  ; |?Read_MSR@CReg16550@@UAAEXZ|, CReg16550::Read_MSR


  00000			 AREA	 |.pdata|, PDATA
|$T36940| DCD	|$LN5@Write_SCR@2|
	DCD	0x40000a03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_SCR@CReg16550@@UAAXE@Z| PROC	; CReg16550::Write_SCR

; 51   :     virtual void    Write_SCR(UINT8 uData) { WRITE_PORT_UCHAR( m_pSRC, uData );};

  00000		 |$LN5@Write_SCR@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36937|
  0000c	e5dd100c	 ldrb        r1, [sp, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e2833030	 add         r3, r3, #0x30
  00018	e5930000	 ldr         r0, [r3]
  0001c	eb000000	 bl          WRITE_PORT_UCHAR
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M36938|

			 ENDP  ; |?Write_SCR@CReg16550@@UAAXE@Z|, CReg16550::Write_SCR


  00000			 AREA	 |.pdata|, PDATA
|$T36948| DCD	|$LN5@Read_SCR@2|
	DCD	0x40000f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_SCR@CReg16550@@UAAEXZ| PROC	; CReg16550::Read_SCR

; 52   :     virtual UINT8   Read_SCR() { return READ_PORT_UCHAR(m_pSRC); };

  00000		 |$LN5@Read_SCR@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36945|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e2833030	 add         r3, r3, #0x30
  00018	e5930000	 ldr         r0, [r3]
  0001c	eb000000	 bl          READ_PORT_UCHAR
  00020	e5cd0004	 strb        r0, [sp, #4]
  00024	e5dd3004	 ldrb        r3, [sp, #4]
  00028	e5cd3000	 strb        r3, [sp]
  0002c	e5dd0000	 ldrb        r0, [sp]
  00030	e28dd008	 add         sp, sp, #8
  00034	e89d6000	 ldmia       sp, {sp, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M36946|

			 ENDP  ; |?Read_SCR@CReg16550@@UAAEXZ|, CReg16550::Read_SCR


  00000			 AREA	 |.pdata|, PDATA
|$T36956| DCD	|$LN6@scalar@2|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCReg16550@@UAAPAXI@Z| PROC	; CReg16550::`scalar deleting destructor'
  00000		 |$LN6@scalar@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36953|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1CReg16550@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar@2|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar@2|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M36954|

			 ENDP  ; |??_GCReg16550@@UAAPAXI@Z|, CReg16550::`scalar deleting destructor'


  00008			 AREA	 |.pdata|, PDATA
|$T36963| DCD	|$LN5@Backup|
	DCD	0x40001d04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\serial\bul16550.cpp

  0005c			 AREA	 |.text|, CODE, ARM

  0005c		 |?Backup@CBulReg16550@@UAAXXZ| PROC	; CBulReg16550::Backup

; 52   : {

  0005c		 |$LN5@Backup|
  0005c	e1a0c00d	 mov         r12, sp
  00060	e92d0001	 stmdb       sp!, {r0}
  00064	e92d5000	 stmdb       sp!, {r12, lr}
  00068	e24dd004	 sub         sp, sp, #4
  0006c		 |$M36960|

; 53   :     CReg16550::Backup();

  0006c	e59d000c	 ldr         r0, [sp, #0xC]
  00070	eb000000	 bl          |?Backup@CReg16550@@UAAXXZ|

; 54   :     m_SIRBackup = Read_SIR();

  00074	e59d300c	 ldr         r3, [sp, #0xC]
  00078	e5933000	 ldr         r3, [r3]
  0007c	e2833060	 add         r3, r3, #0x60
  00080	e59d000c	 ldr         r0, [sp, #0xC]
  00084	e5933000	 ldr         r3, [r3]
  00088	e1a0e00f	 mov         lr, pc
  0008c	e12fff13	 bx          r3
  00090	e5cd0000	 strb        r0, [sp]
  00094	e59d300c	 ldr         r3, [sp, #0xC]
  00098	e2832040	 add         r2, r3, #0x40
  0009c	e5dd3000	 ldrb        r3, [sp]
  000a0	e5c23000	 strb        r3, [r2]

; 55   :     // Backup happens during power off. So We need turn off the IRDA
; 56   :     Write_SIR(0);

  000a4	e3a01000	 mov         r1, #0
  000a8	e59d300c	 ldr         r3, [sp, #0xC]
  000ac	e5933000	 ldr         r3, [r3]
  000b0	e283305c	 add         r3, r3, #0x5C
  000b4	e59d000c	 ldr         r0, [sp, #0xC]
  000b8	e5933000	 ldr         r3, [r3]
  000bc	e1a0e00f	 mov         lr, pc
  000c0	e12fff13	 bx          r3

; 57   : }

  000c4	e28dd004	 add         sp, sp, #4
  000c8	e89d6000	 ldmia       sp, {sp, lr}
  000cc	e12fff1e	 bx          lr
  000d0		 |$M36961|

			 ENDP  ; |?Backup@CBulReg16550@@UAAXXZ|, CBulReg16550::Backup


  00010			 AREA	 |.pdata|, PDATA
|$T36968| DCD	|$LN6@Restore|
	DCD	0x40001603
; Function compile flags: /Odtp

  000d0			 AREA	 |.text|, CODE, ARM

  000d0		 |?Restore@CBulReg16550@@UAAXXZ| PROC	; CBulReg16550::Restore

; 59   : {

  000d0		 |$LN6@Restore|
  000d0	e1a0c00d	 mov         r12, sp
  000d4	e92d0001	 stmdb       sp!, {r0}
  000d8	e92d5000	 stmdb       sp!, {r12, lr}
  000dc		 |$M36965|

; 60   :     if (m_fIsBackedUp) {

  000dc	e59d3008	 ldr         r3, [sp, #8]
  000e0	e2833010	 add         r3, r3, #0x10
  000e4	e5933000	 ldr         r3, [r3]
  000e8	e3530000	 cmp         r3, #0
  000ec	0a00000b	 beq         |$LN1@Restore|

; 61   :         CReg16550::Restore();

  000f0	e59d0008	 ldr         r0, [sp, #8]
  000f4	eb000000	 bl          |?Restore@CReg16550@@UAAXXZ|

; 62   :         Write_SIR(m_SIRBackup);

  000f8	e59d3008	 ldr         r3, [sp, #8]
  000fc	e2833040	 add         r3, r3, #0x40
  00100	e5d31000	 ldrb        r1, [r3]
  00104	e59d3008	 ldr         r3, [sp, #8]
  00108	e5933000	 ldr         r3, [r3]
  0010c	e283305c	 add         r3, r3, #0x5C
  00110	e59d0008	 ldr         r0, [sp, #8]
  00114	e5933000	 ldr         r3, [r3]
  00118	e1a0e00f	 mov         lr, pc
  0011c	e12fff13	 bx          r3
  00120		 |$LN1@Restore|

; 63   :     }
; 64   : }

  00120	e89d6000	 ldmia       sp, {sp, lr}
  00124	e12fff1e	 bx          lr
  00128		 |$M36966|

			 ENDP  ; |?Restore@CBulReg16550@@UAAXXZ|, CBulReg16550::Restore

	EXPORT	|??_7CBulPdd16550@@6BCMiniThread@@@| [ DATA ] ; CBulPdd16550::`vftable'
	EXPORT	|??_7CBulPdd16550@@6BCSerialPDD@@@| [ DATA ] ; CBulPdd16550::`vftable'
	EXPORT	|??0CBulPdd16550@@QAA@PAGPAXPAU__HWOBJ@@@Z| ; CBulPdd16550::CBulPdd16550
	EXPORT	|?Init@CBulPdd16550@@UAAHXZ|		; CBulPdd16550::Init
	EXPORT	|?PostInit@CBulPdd16550@@UAAXXZ|	; CBulPdd16550::PostInit
	EXPORT	|?PreDeinit@CSerialPDD@@UAAXXZ|		; CSerialPDD::PreDeinit
	EXPORT	|?Open@CBulPdd16550@@UAAHXZ|		; CBulPdd16550::Open
	EXPORT	|?Close@CBulPdd16550@@UAAHXZ|		; CBulPdd16550::Close
	EXPORT	|?SerialRegisterBackup@CBulPdd16550@@MAAXXZ| ; CBulPdd16550::SerialRegisterBackup
	EXPORT	|?SerialRegisterRestore@CPdd16550@@UAAXXZ| ; CPdd16550::SerialRegisterRestore
	EXPORT	|?GetDevicePowerState@CSerialPDD@@UAA?AW4_CEDEVICE_POWER_STATE@@XZ| ; CSerialPDD::GetDevicePowerState
	EXPORT	|?GetPowerCapabilities@CSerialPDD@@UAA?AU_POWER_CAPABILITIES@@XZ| ; CSerialPDD::GetPowerCapabilities
	EXPORT	|?XmitInterruptHandler@CBulPdd16550@@UAAXPAEPAK@Z| ; CBulPdd16550::XmitInterruptHandler
	EXPORT	|?XmitComChar@CBulPdd16550@@UAAXE@Z|	; CBulPdd16550::XmitComChar
	EXPORT	|?EnableXmitInterrupt@CBulPdd16550@@UAAHH@Z| ; CBulPdd16550::EnableXmitInterrupt
	EXPORT	|?GetRxBufferSize@CSerialPDD@@UAAKXZ|	; CSerialPDD::GetRxBufferSize
	EXPORT	|?IsCTSOff@CSerialPDD@@UAAHXZ|		; CSerialPDD::IsCTSOff
	EXPORT	|?IsDSROff@CSerialPDD@@UAAHXZ|		; CSerialPDD::IsDSROff
	EXPORT	|?LineInterruptHandler@CPdd16550@@UAAXXZ| ; CPdd16550::LineInterruptHandler
	EXPORT	|?SetDCB@CBulPdd16550@@UAAHPAU_DCB@@@Z|	; CBulPdd16550::SetDCB
	EXPORT	|?GetDivisorOfRate@CBulPdd16550@@UAAHKPAK@Z| ; CBulPdd16550::GetDivisorOfRate
	EXPORT	|?SetOutputMode@CBulPdd16550@@UAAXHH@Z|	; CBulPdd16550::SetOutputMode
	EXPORT	|?GetOutputMode@CSerialPDD@@UAAXPAH0@Z|	; CSerialPDD::GetOutputMode
	EXPORT	|?MapHardware@CBulPdd16550@@UAAHXZ|	; CBulPdd16550::MapHardware
	EXPORT	|?CreateHardwareAccess@CBulPdd16550@@UAAHXZ| ; CBulPdd16550::CreateHardwareAccess
	EXPORT	|?GetWriteableSize@CBulPdd16550@@UAAKXZ| ; CBulPdd16550::GetWriteableSize
	EXPORT	|?GetWaterMark@CBulPdd16550@@UAAKXZ|	; CBulPdd16550::GetWaterMark
	EXPORT	|?GetWaterMarkBit@CBulPdd16550@@UAAEXZ|	; CBulPdd16550::GetWaterMarkBit
	EXPORT	|?InitIR@CBulPdd16550@@UAAHH@Z|		; CBulPdd16550::InitIR
	IMPORT	|??0CPdd16550@@QAA@PAGPAXPAU__HWOBJ@@@Z| ; CPdd16550::CPdd16550
	IMPORT	|??_ECBulPdd16550@@UAAPAXI@Z|, WEAK |??_GCBulPdd16550@@UAAPAXI@Z| ; CBulPdd16550::`vector deleting destructor', CBulPdd16550::`scalar deleting destructor'
	IMPORT	|?Ioctl@CSerialPDD@@UAAHKPAEK0KPAK@Z|	; CSerialPDD::Ioctl
	IMPORT	|?InitialPower@CSerialPDD@@UAAHH@Z|	; CSerialPDD::InitialPower
	IMPORT	|?PowerOff@CSerialPDD@@UAAHXZ|		; CSerialPDD::PowerOff
	IMPORT	|?PowerOn@CSerialPDD@@UAAHXZ|		; CSerialPDD::PowerOn
	IMPORT	|?SetDevicePowerState@CSerialPDD@@UAAHW4_CEDEVICE_POWER_STATE@@@Z| ; CSerialPDD::SetDevicePowerState
	IMPORT	|?InitialEnableInterrupt@CPdd16550@@UAAHH@Z| ; CPdd16550::InitialEnableInterrupt
	IMPORT	|?NotifyPDDInterrupt@CSerialPDD@@UAAHW4INTERRUPT_TYPE@@@Z| ; CSerialPDD::NotifyPDDInterrupt
	IMPORT	|?GetInterruptType@CSerialPDD@@UAA?AW4INTERRUPT_TYPE@@XZ| ; CSerialPDD::GetInterruptType
	IMPORT	|?EventCallback@CSerialPDD@@UAAHKK@Z|	; CSerialPDD::EventCallback
	IMPORT	|?DataReplaced@CSerialPDD@@UAAHPAEH@Z|	; CSerialPDD::DataReplaced
	IMPORT	|?PurgeComm@CSerialPDD@@UAAHK@Z|	; CSerialPDD::PurgeComm
	IMPORT	|?InitXmit@CPdd16550@@UAAHH@Z|		; CPdd16550::InitXmit
	IMPORT	|?CancelXmit@CPdd16550@@UAAHXZ|		; CPdd16550::CancelXmit
	IMPORT	|?InitReceive@CPdd16550@@UAAHH@Z|	; CPdd16550::InitReceive
	IMPORT	|?ReceiveInterruptHandler@CPdd16550@@UAAKPAEPAK@Z| ; CPdd16550::ReceiveInterruptHandler
	IMPORT	|?CancelReceive@CPdd16550@@UAAKXZ|	; CPdd16550::CancelReceive
	IMPORT	|?InitModem@CPdd16550@@UAAHH@Z|		; CPdd16550::InitModem
	IMPORT	|?ModemInterruptHandler@CPdd16550@@UAAXXZ| ; CPdd16550::ModemInterruptHandler
	IMPORT	|?GetModemStatus@CPdd16550@@UAAKXZ|	; CPdd16550::GetModemStatus
	IMPORT	|?SetDTR@CPdd16550@@UAAXH@Z|		; CPdd16550::SetDTR
	IMPORT	|?SetRTS@CPdd16550@@UAAXH@Z|		; CPdd16550::SetRTS
	IMPORT	|?InitLine@CPdd16550@@UAAHH@Z|		; CPdd16550::InitLine
	IMPORT	|?SetBreak@CPdd16550@@UAAXH@Z|		; CPdd16550::SetBreak
	IMPORT	|?SetBaudRate@CPdd16550@@UAAHKH@Z|	; CPdd16550::SetBaudRate
	IMPORT	|?SetByteSize@CPdd16550@@UAAHK@Z|	; CPdd16550::SetByteSize
	IMPORT	|?SetParity@CPdd16550@@UAAHK@Z|		; CPdd16550::SetParity
	IMPORT	|?SetStopBits@CPdd16550@@UAAHK@Z|	; CPdd16550::SetStopBits
	IMPORT	|?SetDefaultConfiguration@CSerialPDD@@UAAXXZ| ; CSerialPDD::SetDefaultConfiguration
	IMPORT	|?SetReceiveError@CSerialPDD@@UAAXK@Z|	; CSerialPDD::SetReceiveError
	IMPORT	|?GetReceivedError@CSerialPDD@@UAAKXZ|	; CSerialPDD::GetReceivedError
	IMPORT	|?WaitForTransmitterEmpty@CPdd16550@@UAAHK@Z| ; CPdd16550::WaitForTransmitterEmpty
	IMPORT	|?ThreadRun@CPdd16550@@EAAKXZ|		; CPdd16550::ThreadRun

  00018			 AREA	 |.pdata|, PDATA
|$T36974| DCD	|$LN5@CBulPdd165|
	DCD	0x40002904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CBulPdd16550@@6BCMiniThread@@@| DCD |?ThreadRun@CPdd16550@@EAAKXZ| ; CBulPdd16550::`vftable'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CBulPdd16550@@6BCSerialPDD@@@| DCD |??_ECBulPdd16550@@UAAPAXI@Z| ; CBulPdd16550::`vftable'
	DCD	|?Init@CBulPdd16550@@UAAHXZ|
	DCD	|?PostInit@CBulPdd16550@@UAAXXZ|
	DCD	|?PreDeinit@CSerialPDD@@UAAXXZ|
	DCD	|?Open@CBulPdd16550@@UAAHXZ|
	DCD	|?Close@CBulPdd16550@@UAAHXZ|
	DCD	|?Ioctl@CSerialPDD@@UAAHKPAEK0KPAK@Z|
	DCD	|?InitialPower@CSerialPDD@@UAAHH@Z|
	DCD	|?PowerOff@CSerialPDD@@UAAHXZ|
	DCD	|?PowerOn@CSerialPDD@@UAAHXZ|
	DCD	|?SetDevicePowerState@CSerialPDD@@UAAHW4_CEDEVICE_POWER_STATE@@@Z|
	DCD	|?SerialRegisterBackup@CBulPdd16550@@MAAXXZ|
	DCD	|?SerialRegisterRestore@CPdd16550@@UAAXXZ|
	DCD	|?GetDevicePowerState@CSerialPDD@@UAA?AW4_CEDEVICE_POWER_STATE@@XZ|
	DCD	|?GetPowerCapabilities@CSerialPDD@@UAA?AU_POWER_CAPABILITIES@@XZ|
	DCD	|?InitialEnableInterrupt@CPdd16550@@UAAHH@Z|
	DCD	|?NotifyPDDInterrupt@CSerialPDD@@UAAHW4INTERRUPT_TYPE@@@Z|
	DCD	|?GetInterruptType@CSerialPDD@@UAA?AW4INTERRUPT_TYPE@@XZ|
	DCD	|?EventCallback@CSerialPDD@@UAAHKK@Z|
	DCD	|?DataReplaced@CSerialPDD@@UAAHPAEH@Z|
	DCD	|?PurgeComm@CSerialPDD@@UAAHK@Z|
	DCD	|?InitXmit@CPdd16550@@UAAHH@Z|
	DCD	|?XmitInterruptHandler@CBulPdd16550@@UAAXPAEPAK@Z|
	DCD	|?XmitComChar@CBulPdd16550@@UAAXE@Z|
	DCD	|?EnableXmitInterrupt@CBulPdd16550@@UAAHH@Z|
	DCD	|?CancelXmit@CPdd16550@@UAAHXZ|
	DCD	|?InitReceive@CPdd16550@@UAAHH@Z|
	DCD	|?GetRxBufferSize@CSerialPDD@@UAAKXZ|
	DCD	|?ReceiveInterruptHandler@CPdd16550@@UAAKPAEPAK@Z|
	DCD	|?CancelReceive@CPdd16550@@UAAKXZ|
	DCD	|?InitModem@CPdd16550@@UAAHH@Z|
	DCD	|?ModemInterruptHandler@CPdd16550@@UAAXXZ|
	DCD	|?GetModemStatus@CPdd16550@@UAAKXZ|
	DCD	|?SetDTR@CPdd16550@@UAAXH@Z|
	DCD	|?SetRTS@CPdd16550@@UAAXH@Z|
	DCD	|?IsCTSOff@CSerialPDD@@UAAHXZ|
	DCD	|?IsDSROff@CSerialPDD@@UAAHXZ|
	DCD	|?InitLine@CPdd16550@@UAAHH@Z|
	DCD	|?LineInterruptHandler@CPdd16550@@UAAXXZ|
	DCD	|?SetBreak@CPdd16550@@UAAXH@Z|
	DCD	|?SetBaudRate@CPdd16550@@UAAHKH@Z|
	DCD	|?SetByteSize@CPdd16550@@UAAHK@Z|
	DCD	|?SetParity@CPdd16550@@UAAHK@Z|
	DCD	|?SetStopBits@CPdd16550@@UAAHK@Z|
	DCD	|?SetDCB@CBulPdd16550@@UAAHPAU_DCB@@@Z|
	DCD	|?SetDefaultConfiguration@CSerialPDD@@UAAXXZ|
	DCD	|?GetDivisorOfRate@CBulPdd16550@@UAAHKPAK@Z|
	DCD	|?SetOutputMode@CBulPdd16550@@UAAXHH@Z|
	DCD	|?GetOutputMode@CSerialPDD@@UAAXPAH0@Z|
	DCD	|?SetReceiveError@CSerialPDD@@UAAXK@Z|
	DCD	|?GetReceivedError@CSerialPDD@@UAAKXZ|
	DCD	|?MapHardware@CBulPdd16550@@UAAHXZ|
	DCD	|?CreateHardwareAccess@CBulPdd16550@@UAAHXZ|
	DCD	|?WaitForTransmitterEmpty@CPdd16550@@UAAHK@Z|
	DCD	|?GetWriteableSize@CBulPdd16550@@UAAKXZ|
	DCD	|?GetWaterMark@CBulPdd16550@@UAAKXZ|
	DCD	|?GetWaterMarkBit@CBulPdd16550@@UAAEXZ|
	DCD	|?InitIR@CBulPdd16550@@UAAHH@Z|
; Function compile flags: /Odtp

  00128			 AREA	 |.text|, CODE, ARM

  00128		 |??0CBulPdd16550@@QAA@PAGPAXPAU__HWOBJ@@@Z| PROC ; CBulPdd16550::CBulPdd16550

; 67   : {

  00128		 |$LN5@CBulPdd165|
  00128	e1a0c00d	 mov         r12, sp
  0012c	e92d000f	 stmdb       sp!, {r0 - r3}
  00130	e92d5000	 stmdb       sp!, {r12, lr}
  00134	e24dd008	 sub         sp, sp, #8
  00138		 |$M36971|
  00138	e59d301c	 ldr         r3, [sp, #0x1C]
  0013c	e59d2018	 ldr         r2, [sp, #0x18]
  00140	e59d1014	 ldr         r1, [sp, #0x14]
  00144	e59d0010	 ldr         r0, [sp, #0x10]
  00148	eb000000	 bl          |??0CPdd16550@@QAA@PAGPAXPAU__HWOBJ@@@Z|
  0014c	e58d0004	 str         r0, [sp, #4]
  00150	e59f2070	 ldr         r2, [pc, #0x70]
  00154	e59d3010	 ldr         r3, [sp, #0x10]
  00158	e5832000	 str         r2, [r3]
  0015c	e59d3010	 ldr         r3, [sp, #0x10]
  00160	e28320fc	 add         r2, r3, #0xFC
  00164	e59f3058	 ldr         r3, [pc, #0x58]
  00168	e5823000	 str         r3, [r2]

; 68   :     m_pBaseAddress = NULL;

  0016c	e59d3010	 ldr         r3, [sp, #0x10]
  00170	e2832f52	 add         r2, r3, #0x52, 30
  00174	e3a03000	 mov         r3, #0
  00178	e5823000	 str         r3, [r2]

; 69   :     m_pGPIOReg = NULL;

  0017c	e59d3010	 ldr         r3, [sp, #0x10]
  00180	e2832f53	 add         r2, r3, #0x53, 30
  00184	e3a03000	 mov         r3, #0
  00188	e5823000	 str         r3, [r2]

; 70   :     m_pDCCLKReg = NULL;

  0018c	e59d3010	 ldr         r3, [sp, #0x10]
  00190	e2832e15	 add         r2, r3, #0x15, 28
  00194	e3a03000	 mov         r3, #0
  00198	e5823000	 str         r3, [r2]

; 71   :     m_fIRConnected = FALSE;

  0019c	e59d3010	 ldr         r3, [sp, #0x10]
  001a0	e2832f55	 add         r2, r3, #0x55, 30
  001a4	e3a03000	 mov         r3, #0
  001a8	e5823000	 str         r3, [r2]

; 72   : }

  001ac	e59d3010	 ldr         r3, [sp, #0x10]
  001b0	e58d3000	 str         r3, [sp]
  001b4	e59d0000	 ldr         r0, [sp]
  001b8	e28dd008	 add         sp, sp, #8
  001bc	e89d6000	 ldmia       sp, {sp, lr}
  001c0	e12fff1e	 bx          lr
  001c4		 |$LN6@CBulPdd165|
  001c4		 |$LN7@CBulPdd165|
  001c4	00000000	 DCD         |??_7CBulPdd16550@@6BCMiniThread@@@|
  001c8		 |$LN8@CBulPdd165|
  001c8	00000000	 DCD         |??_7CBulPdd16550@@6BCSerialPDD@@@|
  001cc		 |$M36972|

			 ENDP  ; |??0CBulPdd16550@@QAA@PAGPAXPAU__HWOBJ@@@Z|, CBulPdd16550::CBulPdd16550

; File c:\wince600\public\common\oak\inc\cserpdd.h

  00000			 AREA	 |.pdata|, PDATA
|$T36982| DCD	|$LN5@PreDeinit|
	DCD	0x40000503
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PreDeinit@CSerialPDD@@UAAXXZ| PROC	; CSerialPDD::PreDeinit

; 63   :     virtual void  PreDeinit() {;};

  00000		 |$LN5@PreDeinit|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36979|
  0000c	e89d6000	 ldmia       sp, {sp, lr}
  00010	e12fff1e	 bx          lr
  00014		 |$M36980|

			 ENDP  ; |?PreDeinit@CSerialPDD@@UAAXXZ|, CSerialPDD::PreDeinit


  00000			 AREA	 |.pdata|, PDATA
|$T36990| DCD	|$LN5@GetDeviceP|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDevicePowerState@CSerialPDD@@UAA?AW4_CEDEVICE_POWER_STATE@@XZ| PROC ; CSerialPDD::GetDevicePowerState

; 87   :     virtual CEDEVICE_POWER_STATE    GetDevicePowerState() { return m_PowerState; };

  00000		 |$LN5@GetDeviceP|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36987|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833018	 add         r3, r3, #0x18
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M36988|

			 ENDP  ; |?GetDevicePowerState@CSerialPDD@@UAA?AW4_CEDEVICE_POWER_STATE@@XZ|, CSerialPDD::GetDevicePowerState

	IMPORT	|memcpy|

  00000			 AREA	 |.pdata|, PDATA
|$T36999| DCD	|$LN5@GetPowerCa|
	DCD	0x40000f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPowerCapabilities@CSerialPDD@@UAA?AU_POWER_CAPABILITIES@@XZ| PROC ; CSerialPDD::GetPowerCapabilities

; 88   :     virtual POWER_CAPABILITIES  GetPowerCapabilities() { return m_PowerCapabilities; };

  00000		 |$LN5@GetPowerCa|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36996|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2831020	 add         r1, r3, #0x20
  00018	e59d0010	 ldr         r0, [sp, #0x10]
  0001c	e3a02030	 mov         r2, #0x30
  00020	eb000000	 bl          memcpy
  00024	e59d3010	 ldr         r3, [sp, #0x10]
  00028	e58d3000	 str         r3, [sp]
  0002c	e59d0000	 ldr         r0, [sp]
  00030	e28dd004	 add         sp, sp, #4
  00034	e89d6000	 ldmia       sp, {sp, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M36997|

			 ENDP  ; |?GetPowerCapabilities@CSerialPDD@@UAA?AU_POWER_CAPABILITIES@@XZ|, CSerialPDD::GetPowerCapabilities


  00000			 AREA	 |.pdata|, PDATA
|$T37007| DCD	|$LN5@GetRxBuffe|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetRxBufferSize@CSerialPDD@@UAAKXZ| PROC ; CSerialPDD::GetRxBufferSize

; 131  :     virtual ULONG   GetRxBufferSize() { return m_ulRxBufferSize; };

  00000		 |$LN5@GetRxBuffe|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37004|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e28330f4	 add         r3, r3, #0xF4
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M37005|

			 ENDP  ; |?GetRxBufferSize@CSerialPDD@@UAAKXZ|, CSerialPDD::GetRxBufferSize


  00000			 AREA	 |.pdata|, PDATA
|$T37017| DCD	|$LN7@IsCTSOff|
	DCD	0x40001a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsCTSOff@CSerialPDD@@UAAHXZ| PROC	; CSerialPDD::IsCTSOff

; 141  :     virtual BOOL    IsCTSOff() {  return ((GetModemStatus() & MS_CTS_ON)==0) ; };

  00000		 |$LN7@IsCTSOff|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M37014|
  00010	e59d3014	 ldr         r3, [sp, #0x14]
  00014	e5933000	 ldr         r3, [r3]
  00018	e2833080	 add         r3, r3, #0x80
  0001c	e59d0014	 ldr         r0, [sp, #0x14]
  00020	e5933000	 ldr         r3, [r3]
  00024	e1a0e00f	 mov         lr, pc
  00028	e12fff13	 bx          r3
  0002c	e58d0004	 str         r0, [sp, #4]
  00030	e59d3004	 ldr         r3, [sp, #4]
  00034	e3130010	 tst         r3, #0x10
  00038	1a000002	 bne         |$LN3@IsCTSOff|
  0003c	e3a03001	 mov         r3, #1
  00040	e58d3008	 str         r3, [sp, #8]
  00044	ea000001	 b           |$LN4@IsCTSOff|
  00048		 |$LN3@IsCTSOff|
  00048	e3a03000	 mov         r3, #0
  0004c	e58d3008	 str         r3, [sp, #8]
  00050		 |$LN4@IsCTSOff|
  00050	e59d3008	 ldr         r3, [sp, #8]
  00054	e58d3000	 str         r3, [sp]
  00058	e59d0000	 ldr         r0, [sp]
  0005c	e28dd00c	 add         sp, sp, #0xC
  00060	e89d6000	 ldmia       sp, {sp, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$M37015|

			 ENDP  ; |?IsCTSOff@CSerialPDD@@UAAHXZ|, CSerialPDD::IsCTSOff


  00000			 AREA	 |.pdata|, PDATA
|$T37027| DCD	|$LN7@IsDSROff|
	DCD	0x40001a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsDSROff@CSerialPDD@@UAAHXZ| PROC	; CSerialPDD::IsDSROff

; 142  :     virtual BOOL    IsDSROff() {  return ((GetModemStatus() & MS_DSR_ON)==0) ; };

  00000		 |$LN7@IsDSROff|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M37024|
  00010	e59d3014	 ldr         r3, [sp, #0x14]
  00014	e5933000	 ldr         r3, [r3]
  00018	e2833080	 add         r3, r3, #0x80
  0001c	e59d0014	 ldr         r0, [sp, #0x14]
  00020	e5933000	 ldr         r3, [r3]
  00024	e1a0e00f	 mov         lr, pc
  00028	e12fff13	 bx          r3
  0002c	e58d0004	 str         r0, [sp, #4]
  00030	e59d3004	 ldr         r3, [sp, #4]
  00034	e3130020	 tst         r3, #0x20
  00038	1a000002	 bne         |$LN3@IsDSROff|
  0003c	e3a03001	 mov         r3, #1
  00040	e58d3008	 str         r3, [sp, #8]
  00044	ea000001	 b           |$LN4@IsDSROff|
  00048		 |$LN3@IsDSROff|
  00048	e3a03000	 mov         r3, #0
  0004c	e58d3008	 str         r3, [sp, #8]
  00050		 |$LN4@IsDSROff|
  00050	e59d3008	 ldr         r3, [sp, #8]
  00054	e58d3000	 str         r3, [sp]
  00058	e59d0000	 ldr         r0, [sp]
  0005c	e28dd00c	 add         sp, sp, #0xC
  00060	e89d6000	 ldmia       sp, {sp, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$M37025|

			 ENDP  ; |?IsDSROff@CSerialPDD@@UAAHXZ|, CSerialPDD::IsDSROff


  00000			 AREA	 |.pdata|, PDATA
|$T37034| DCD	|$LN7@GetOutputM|
	DCD	0x40001503
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetOutputMode@CSerialPDD@@UAAXPAH0@Z| PROC ; CSerialPDD::GetOutputMode

; 173  :     virtual void    GetOutputMode(BOOL* pUseIR, BOOL* pUse9Pin) {

  00000		 |$LN7@GetOutputM|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37031|

; 174  :         if (pUseIR) *pUseIR = m_fIREnable;

  0000c	e59d300c	 ldr         r3, [sp, #0xC]
  00010	e3530000	 cmp         r3, #0
  00014	0a000004	 beq         |$LN2@GetOutputM|
  00018	e59d3008	 ldr         r3, [sp, #8]
  0001c	e28330ec	 add         r3, r3, #0xEC
  00020	e5932000	 ldr         r2, [r3]
  00024	e59d300c	 ldr         r3, [sp, #0xC]
  00028	e5832000	 str         r2, [r3]
  0002c		 |$LN2@GetOutputM|

; 175  :         if (pUse9Pin) *pUse9Pin = m_f9PinEnable;

  0002c	e59d3010	 ldr         r3, [sp, #0x10]
  00030	e3530000	 cmp         r3, #0
  00034	0a000004	 beq         |$LN1@GetOutputM|
  00038	e59d3008	 ldr         r3, [sp, #8]
  0003c	e28330f0	 add         r3, r3, #0xF0
  00040	e5932000	 ldr         r2, [r3]
  00044	e59d3010	 ldr         r3, [sp, #0x10]
  00048	e5832000	 str         r2, [r3]
  0004c		 |$LN1@GetOutputM|

; 176  :     }

  0004c	e89d6000	 ldmia       sp, {sp, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$M37032|

			 ENDP  ; |?GetOutputMode@CSerialPDD@@UAAXPAH0@Z|, CSerialPDD::GetOutputMode

; File c:\wince600\public\common\oak\inc\pdd16550.h

  00000			 AREA	 |.pdata|, PDATA
|$T37041| DCD	|$LN5@SerialRegi|
	DCD	0x40001003
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SerialRegisterRestore@CPdd16550@@UAAXXZ| PROC ; CPdd16550::SerialRegisterRestore

; 126  :     virtual void    SerialRegisterRestore() { m_pReg16550->Restore(); };

  00000		 |$LN5@SerialRegi|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37038|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2833f4a	 add         r3, r3, #0x4A, 30
  00014	e5932000	 ldr         r2, [r3]
  00018	e59d3008	 ldr         r3, [sp, #8]
  0001c	e2833f4a	 add         r3, r3, #0x4A, 30
  00020	e5930000	 ldr         r0, [r3]
  00024	e5923000	 ldr         r3, [r2]
  00028	e2833054	 add         r3, r3, #0x54
  0002c	e5933000	 ldr         r3, [r3]
  00030	e1a0e00f	 mov         lr, pc
  00034	e12fff13	 bx          r3
  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$M37039|

			 ENDP  ; |?SerialRegisterRestore@CPdd16550@@UAAXXZ|, CPdd16550::SerialRegisterRestore

	IMPORT	|?GetLineStatus@CPdd16550@@QAAEXZ|	; CPdd16550::GetLineStatus

  00000			 AREA	 |.pdata|, PDATA
|$T37048| DCD	|$LN5@LineInterr|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?LineInterruptHandler@CPdd16550@@UAAXXZ| PROC ; CPdd16550::LineInterruptHandler

; 169  :     virtual void    LineInterruptHandler() { GetLineStatus();};

  00000		 |$LN5@LineInterr|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37045|
  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          |?GetLineStatus@CPdd16550@@QAAEXZ|
  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M37046|

			 ENDP  ; |?LineInterruptHandler@CPdd16550@@UAAXXZ|, CPdd16550::LineInterruptHandler

	EXPORT	|??1CBulPdd16550@@UAA@XZ|		; CBulPdd16550::~CBulPdd16550

  00000			 AREA	 |.pdata|, PDATA
|$T37056| DCD	|$LN6@scalar@3|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCBulPdd16550@@UAAPAXI@Z| PROC	; CBulPdd16550::`scalar deleting destructor'
  00000		 |$LN6@scalar@3|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37053|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1CBulPdd16550@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar@3|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar@3|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M37054|

			 ENDP  ; |??_GCBulPdd16550@@UAAPAXI@Z|, CBulPdd16550::`scalar deleting destructor'

	IMPORT	|??1CPdd16550@@UAA@XZ|			; CPdd16550::~CPdd16550
	IMPORT	|MmUnmapIoSpace|

  00020			 AREA	 |.pdata|, PDATA
|$T37063| DCD	|$LN8@CBulPdd165@2|
	DCD	0x40002e03
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\serial\bul16550.cpp

  001cc			 AREA	 |.text|, CODE, ARM

  001cc		 |??1CBulPdd16550@@UAA@XZ| PROC		; CBulPdd16550::~CBulPdd16550

; 74   : {

  001cc		 |$LN8@CBulPdd165@2|
  001cc	e1a0c00d	 mov         r12, sp
  001d0	e92d0001	 stmdb       sp!, {r0}
  001d4	e92d5000	 stmdb       sp!, {r12, lr}
  001d8		 |$M37060|
  001d8	e59f20a0	 ldr         r2, [pc, #0xA0]
  001dc	e59d3008	 ldr         r3, [sp, #8]
  001e0	e5832000	 str         r2, [r3]
  001e4	e59d3008	 ldr         r3, [sp, #8]
  001e8	e28320fc	 add         r2, r3, #0xFC
  001ec	e59f3088	 ldr         r3, [pc, #0x88]
  001f0	e5823000	 str         r3, [r2]

; 75   :     if (m_pBaseAddress) 

  001f4	e59d3008	 ldr         r3, [sp, #8]
  001f8	e2833f52	 add         r3, r3, #0x52, 30
  001fc	e5933000	 ldr         r3, [r3]
  00200	e3530000	 cmp         r3, #0
  00204	0a000004	 beq         |$LN3@CBulPdd165@2|

; 76   :         MmUnmapIoSpace(m_pBaseAddress,0);

  00208	e3a01000	 mov         r1, #0
  0020c	e59d3008	 ldr         r3, [sp, #8]
  00210	e2833f52	 add         r3, r3, #0x52, 30
  00214	e5930000	 ldr         r0, [r3]
  00218	eb000000	 bl          MmUnmapIoSpace
  0021c		 |$LN3@CBulPdd165@2|

; 77   :     
; 78   :     if (m_pGPIOReg)

  0021c	e59d3008	 ldr         r3, [sp, #8]
  00220	e2833f53	 add         r3, r3, #0x53, 30
  00224	e5933000	 ldr         r3, [r3]
  00228	e3530000	 cmp         r3, #0
  0022c	0a000004	 beq         |$LN2@CBulPdd165@2|

; 79   :         MmUnmapIoSpace(m_pGPIOReg,0);

  00230	e3a01000	 mov         r1, #0
  00234	e59d3008	 ldr         r3, [sp, #8]
  00238	e2833f53	 add         r3, r3, #0x53, 30
  0023c	e5930000	 ldr         r0, [r3]
  00240	eb000000	 bl          MmUnmapIoSpace
  00244		 |$LN2@CBulPdd165@2|

; 80   :     
; 81   :     if (m_pDCCLKReg)

  00244	e59d3008	 ldr         r3, [sp, #8]
  00248	e2833e15	 add         r3, r3, #0x15, 28
  0024c	e5933000	 ldr         r3, [r3]
  00250	e3530000	 cmp         r3, #0
  00254	0a000004	 beq         |$LN1@CBulPdd165@2|

; 82   :         MmUnmapIoSpace(m_pDCCLKReg,0);

  00258	e3a01000	 mov         r1, #0
  0025c	e59d3008	 ldr         r3, [sp, #8]
  00260	e2833e15	 add         r3, r3, #0x15, 28
  00264	e5930000	 ldr         r0, [r3]
  00268	eb000000	 bl          MmUnmapIoSpace
  0026c		 |$LN1@CBulPdd165@2|

; 83   : }

  0026c	e59d0008	 ldr         r0, [sp, #8]
  00270	eb000000	 bl          |??1CPdd16550@@UAA@XZ|
  00274	e89d6000	 ldmia       sp, {sp, lr}
  00278	e12fff1e	 bx          lr
  0027c		 |$LN9@CBulPdd165@2|
  0027c		 |$LN10@CBulPdd165@2|
  0027c	00000000	 DCD         |??_7CBulPdd16550@@6BCMiniThread@@@|
  00280		 |$LN11@CBulPdd165@2|
  00280	00000000	 DCD         |??_7CBulPdd16550@@6BCSerialPDD@@@|
  00284		 |$M37061|

			 ENDP  ; |??1CBulPdd16550@@UAA@XZ|, CBulPdd16550::~CBulPdd16550

	EXPORT	|?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ| ; CBulPdd16550::GetRegister
	EXPORT	|??_C@_1BI@BIDGGFDD@?$AAW?$AAa?$AAt?$AAe?$AAr?$AAM?$AAa?$AAr?$AAk?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z| ; CRegistryEdit::GetRegValue
	EXPORT	|??_C@_1BI@PPAFNDCI@?$AAI?$AAR?$AAC?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?RegSetValueExW@CRegistryEdit@@QAAHPBGKPAEK@Z| ; CRegistryEdit::RegSetValueExW
	EXPORT	|??_C@_1BA@BDHDGOBO@?$AAS?$AAy?$AAs?$AAI?$AAn?$AAt?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?GetIsrInfo@CRegistryEdit@@QAAKPAU_DDKISRINFO_tag@@@Z| ; CRegistryEdit::GetIsrInfo
	EXPORT	|__$ArrayPad$| [ DATA ]
	IMPORT	|?Init@CPdd16550@@UAAHXZ|		; CPdd16550::Init
	IMPORT	|KernelIoControl|
	IMPORT	|__security_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_check_cookie|

  00028			 AREA	 |.pdata|, PDATA
|$T37082| DCD	|$LN14@Init@3|
	DCD	0xc0009004

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@BIDGGFDD@?$AAW?$AAa?$AAt?$AAe?$AAr?$AAM?$AAa?$AAr?$AAk?$AAe?$AAr?$AA?$AA@| DCB "W"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "M", 0x0, "a"
	DCB	0x0, "r", 0x0, "k", 0x0, "e", 0x0, "r", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@PPAFNDCI@?$AAI?$AAR?$AAC?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AA@| DCB "I"
	DCB	0x0, "R", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "n", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@BDHDGOBO@?$AAS?$AAy?$AAs?$AAI?$AAn?$AAt?$AAr?$AA?$AA@| DCB "S", 0x0
	DCB	"y", 0x0, "s", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.xdata|, DATA
|$T37078| DCD	0xffffffc0
; Function compile flags: /Odtp

  00284			 AREA	 |.text|, CODE, ARM

  00284	00000000	 DCD         |__GSHandlerCheck|
  00288	00000000	 DCD         |$T37078|

  0028c		 |?Init@CBulPdd16550@@UAAHXZ| PROC	; CBulPdd16550::Init

; 85   : {

  0028c		 |$LN14@Init@3|
  0028c	e1a0c00d	 mov         r12, sp
  00290	e92d0001	 stmdb       sp!, {r0}
  00294	e92d5000	 stmdb       sp!, {r12, lr}
  00298	e24dde15	 sub         sp, sp, #0x15, 28
  0029c		 |$M37079|
  0029c	e59f3224	 ldr         r3, [pc, #0x224]
  002a0	e5933000	 ldr         r3, [r3]
  002a4	e58d311c	 str         r3, [sp, #0x11C]

; 86   :     // IST Setup . This is only need when Root Bus driver does not allocate any resource for this driver.
; 87   :     DDKISRINFO ddi;
; 88   :     ddi.dwIrq = MAXDWORD; ddi.dwSysintr = MAXDWORD;

  002a8	e3e03000	 mvn         r3, #0
  002ac	e58d3014	 str         r3, [sp, #0x14]
  002b0	e3e03000	 mvn         r3, #0
  002b4	e58d3018	 str         r3, [sp, #0x18]

; 89   :     if (GetIsrInfo(&ddi)==ERROR_SUCCESS && (ddi.dwSysintr==0 || ddi.dwSysintr>=0xff )) { // We need rework Interrupt

  002b8	e28d1010	 add         r1, sp, #0x10
  002bc	e59d3158	 ldr         r3, [sp, #0x158]
  002c0	e2830004	 add         r0, r3, #4
  002c4	eb000000	 bl          |?GetIsrInfo@CRegistryEdit@@QAAKPAU_DDKISRINFO_tag@@@Z|
  002c8	e58d0130	 str         r0, [sp, #0x130]
  002cc	e59d3130	 ldr         r3, [sp, #0x130]
  002d0	e3530000	 cmp         r3, #0
  002d4	1a000020	 bne         |$LN7@Init@3|
  002d8	e59d3018	 ldr         r3, [sp, #0x18]
  002dc	e3530000	 cmp         r3, #0
  002e0	0a000002	 beq         |$LN6@Init@3|
  002e4	e59d3018	 ldr         r3, [sp, #0x18]
  002e8	e35300ff	 cmp         r3, #0xFF
  002ec	3a00001a	 bcc         |$LN7@Init@3|
  002f0		 |$LN6@Init@3|

; 90   :         if (ddi.dwIrq!=0 && ddi.dwIrq < 0xff &&
; 91   :                 KernelIoControl(IOCTL_HAL_REQUEST_SYSINTR, &ddi.dwIrq, sizeof(UINT32), &ddi.dwSysintr, sizeof(UINT32), NULL)) {

  002f0	e59d3014	 ldr         r3, [sp, #0x14]
  002f4	e3530000	 cmp         r3, #0
  002f8	0a000017	 beq         |$LN5@Init@3|
  002fc	e59d3014	 ldr         r3, [sp, #0x14]
  00300	e35300ff	 cmp         r3, #0xFF
  00304	2a000014	 bcs         |$LN5@Init@3|
  00308	e3a03000	 mov         r3, #0
  0030c	e58d3004	 str         r3, [sp, #4]
  00310	e3a03004	 mov         r3, #4
  00314	e58d3000	 str         r3, [sp]
  00318	e28d3018	 add         r3, sp, #0x18
  0031c	e3a02004	 mov         r2, #4
  00320	e28d1014	 add         r1, sp, #0x14
  00324	e59f0198	 ldr         r0, [pc, #0x198]
  00328	eb000000	 bl          KernelIoControl
  0032c	e58d0134	 str         r0, [sp, #0x134]
  00330	e59d3134	 ldr         r3, [sp, #0x134]
  00334	e3530000	 cmp         r3, #0
  00338	0a000007	 beq         |$LN5@Init@3|

; 92   :             // We use correct IRQ to allocate SYSINTR from system.
; 93   :             // We can put it back to the registry.
; 94   :             RegSetValueEx(DEVLOAD_SYSINTR_VALNAME,REG_DWORD,(PBYTE)&ddi.dwSysintr, sizeof(UINT32));

  0033c	e3a03004	 mov         r3, #4
  00340	e58d3000	 str         r3, [sp]
  00344	e28d3018	 add         r3, sp, #0x18
  00348	e3a02004	 mov         r2, #4
  0034c	e59f116c	 ldr         r1, [pc, #0x16C]
  00350	e59d0158	 ldr         r0, [sp, #0x158]
  00354	e2800004	 add         r0, r0, #4
  00358	eb000000	 bl          |?RegSetValueExW@CRegistryEdit@@QAAHPBGKPAEK@Z|
  0035c		 |$LN5@Init@3|
  0035c		 |$LN7@Init@3|

; 95   :         }
; 96   :     }
; 97   :     DWORD dwIRConnected=0;

  0035c	e3a03000	 mov         r3, #0
  00360	e58d300c	 str         r3, [sp, #0xC]

; 98   :     if (!GetRegValue(PC_REG_SERIALIRCONNECTED_VAL_NAME,(PBYTE)&dwIRConnected,PC_REG_SERIALIRCONNECTED_VAL_LEN)) {

  00364	e3a03004	 mov         r3, #4
  00368	e28d200c	 add         r2, sp, #0xC
  0036c	e59f1148	 ldr         r1, [pc, #0x148]
  00370	e59d0158	 ldr         r0, [sp, #0x158]
  00374	e2800004	 add         r0, r0, #4
  00378	eb000000	 bl          |?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z|
  0037c	e58d0138	 str         r0, [sp, #0x138]
  00380	e59d3138	 ldr         r3, [sp, #0x138]
  00384	e3530000	 cmp         r3, #0
  00388	1a000001	 bne         |$LN4@Init@3|

; 99   :         dwIRConnected=0;

  0038c	e3a03000	 mov         r3, #0
  00390	e58d300c	 str         r3, [sp, #0xC]
  00394		 |$LN4@Init@3|

; 100  :     }
; 101  :     m_fIRConnected = (dwIRConnected!=0);

  00394	e59d300c	 ldr         r3, [sp, #0xC]
  00398	e3530000	 cmp         r3, #0
  0039c	0a000002	 beq         |$LN10@Init@3|
  003a0	e3a03001	 mov         r3, #1
  003a4	e58d313c	 str         r3, [sp, #0x13C]
  003a8	ea000001	 b           |$LN11@Init@3|
  003ac		 |$LN10@Init@3|
  003ac	e3a03000	 mov         r3, #0
  003b0	e58d313c	 str         r3, [sp, #0x13C]
  003b4		 |$LN11@Init@3|
  003b4	e59d3158	 ldr         r3, [sp, #0x158]
  003b8	e2832f55	 add         r2, r3, #0x55, 30
  003bc	e59d313c	 ldr         r3, [sp, #0x13C]
  003c0	e5823000	 str         r3, [r2]

; 102  :     BOOL fReturn ;
; 103  :     if ((fReturn = CPdd16550::Init())== TRUE) {

  003c4	e59d0158	 ldr         r0, [sp, #0x158]
  003c8	eb000000	 bl          |?Init@CPdd16550@@UAAHXZ|
  003cc	e58d0140	 str         r0, [sp, #0x140]
  003d0	e59d3140	 ldr         r3, [sp, #0x140]
  003d4	e58d3008	 str         r3, [sp, #8]
  003d8	e59d3008	 ldr         r3, [sp, #8]
  003dc	e3530001	 cmp         r3, #1
  003e0	1a00002c	 bne         |$LN3@Init@3|

; 104  :         if (!GetRegValue(PC_REG_SERIALWATERMARK_VAL_NAME,(PBYTE)&m_dwWaterMark,sizeof(DWORD))) {

  003e4	e3a03004	 mov         r3, #4
  003e8	e59d2158	 ldr         r2, [sp, #0x158]
  003ec	e2822f49	 add         r2, r2, #0x49, 30
  003f0	e59f10c0	 ldr         r1, [pc, #0xC0]
  003f4	e59d0158	 ldr         r0, [sp, #0x158]
  003f8	e2800004	 add         r0, r0, #4
  003fc	eb000000	 bl          |?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z|
  00400	e58d0144	 str         r0, [sp, #0x144]
  00404	e59d3144	 ldr         r3, [sp, #0x144]
  00408	e3530000	 cmp         r3, #0
  0040c	1a000003	 bne         |$LN2@Init@3|

; 105  :             m_dwWaterMark = 32; // Default to Half of FIFO.

  00410	e59d3158	 ldr         r3, [sp, #0x158]
  00414	e2832f49	 add         r2, r3, #0x49, 30
  00418	e3a03020	 mov         r3, #0x20
  0041c	e5823000	 str         r3, [r2]
  00420		 |$LN2@Init@3|

; 106  :         }
; 107  :         if (m_pReg16550) {

  00420	e59d3158	 ldr         r3, [sp, #0x158]
  00424	e2833f4a	 add         r3, r3, #0x4A, 30
  00428	e5933000	 ldr         r3, [r3]
  0042c	e3530000	 cmp         r3, #0
  00430	0a000018	 beq         |$LN1@Init@3|

; 108  :             // We have to initial FCR because it got bus specific content inside.
; 109  :             m_pReg16550->Write_FCR(0);

  00434	e3a01000	 mov         r1, #0
  00438	e59d3158	 ldr         r3, [sp, #0x158]
  0043c	e2833f4a	 add         r3, r3, #0x4A, 30
  00440	e5932000	 ldr         r2, [r3]
  00444	e59d3158	 ldr         r3, [sp, #0x158]
  00448	e2833f4a	 add         r3, r3, #0x4A, 30
  0044c	e5930000	 ldr         r0, [r3]
  00450	e5923000	 ldr         r3, [r2]
  00454	e2833018	 add         r3, r3, #0x18
  00458	e5933000	 ldr         r3, [r3]
  0045c	e1a0e00f	 mov         lr, pc
  00460	e12fff13	 bx          r3

; 110  : #ifdef UART_32_BIT_PERIPHERAL_BUS
; 111  :             m_pReg16550->Write_FCR(SERIAL_FCR_PERIPHERAL_BUS);
; 112  : #endif
; 113  :             GetRegister()->Write_ABR(0);

  00464	e59d0158	 ldr         r0, [sp, #0x158]
  00468	eb000000	 bl          |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ|
  0046c	e58d0148	 str         r0, [sp, #0x148]
  00470	e59d3148	 ldr         r3, [sp, #0x148]
  00474	e58d314c	 str         r3, [sp, #0x14C]
  00478	e3a01000	 mov         r1, #0
  0047c	e59d014c	 ldr         r0, [sp, #0x14C]
  00480	e59d314c	 ldr         r3, [sp, #0x14C]
  00484	e5933000	 ldr         r3, [r3]
  00488	e283306c	 add         r3, r3, #0x6C
  0048c	e5933000	 ldr         r3, [r3]
  00490	e1a0e00f	 mov         lr, pc
  00494	e12fff13	 bx          r3
  00498		 |$LN1@Init@3|
  00498		 |$LN3@Init@3|

; 114  :         }
; 115  :     }
; 116  :     return fReturn;

  00498	e59d011c	 ldr         r0, [sp, #0x11C]
  0049c	eb000000	 bl          __security_check_cookie
  004a0	e59d3008	 ldr         r3, [sp, #8]
  004a4	e58d312c	 str         r3, [sp, #0x12C]

; 117  : }

  004a8	e59d012c	 ldr         r0, [sp, #0x12C]
  004ac	e28dde15	 add         sp, sp, #0x15, 28
  004b0	e89d6000	 ldmia       sp, {sp, lr}
  004b4	e12fff1e	 bx          lr
  004b8		 |$LN15@Init@3|
  004b8		 |$LN16@Init@3|
  004b8	00000000	 DCD         |??_C@_1BI@BIDGGFDD@?$AAW?$AAa?$AAt?$AAe?$AAr?$AAM?$AAa?$AAr?$AAk?$AAe?$AAr?$AA?$AA@|
  004bc		 |$LN17@Init@3|
  004bc	00000000	 DCD         |??_C@_1BI@PPAFNDCI@?$AAI?$AAR?$AAC?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AA@|
  004c0		 |$LN18@Init@3|
  004c0	00000000	 DCD         |??_C@_1BA@BDHDGOBO@?$AAS?$AAy?$AAs?$AAI?$AAn?$AAt?$AAr?$AA?$AA@|
  004c4		 |$LN19@Init@3|
  004c4	01010098	 DCD         0x1010098
  004c8		 |$LN20@Init@3|
  004c8	00000000	 DCD         |__security_cookie|
  004cc		 |$M37080|

			 ENDP  ; |?Init@CBulPdd16550@@UAAHXZ|, CBulPdd16550::Init

	IMPORT	|DDKReg_GetIsrInfo|
; File c:\wince600\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.pdata|, PDATA
|$T37094| DCD	|$LN7@GetIsrInfo|
	DCD	0x40001f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetIsrInfo@CRegistryEdit@@QAAKPAU_DDKISRINFO_tag@@@Z| PROC ; CRegistryEdit::GetIsrInfo

; 102  :     {

  00000		 |$LN7@GetIsrInfo|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M37091|

; 103  :         if( pddi && m_hDevKey )

  00010	e59d3018	 ldr         r3, [sp, #0x18]
  00014	e3530000	 cmp         r3, #0
  00018	0a000011	 beq         |$LN2@GetIsrInfo|
  0001c	e59d3014	 ldr         r3, [sp, #0x14]
  00020	e5933000	 ldr         r3, [r3]
  00024	e3530000	 cmp         r3, #0
  00028	0a00000d	 beq         |$LN2@GetIsrInfo|

; 104  :         {
; 105  :             pddi->cbSize = sizeof( DDKISRINFO );

  0002c	e59d2018	 ldr         r2, [sp, #0x18]
  00030	e3a03f43	 mov         r3, #0x43, 30
  00034	e5823000	 str         r3, [r2]

; 106  :             DWORD status = DDKReg_GetIsrInfo( m_hDevKey, pddi );

  00038	e59d1018	 ldr         r1, [sp, #0x18]
  0003c	e59d3014	 ldr         r3, [sp, #0x14]
  00040	e5930000	 ldr         r0, [r3]
  00044	eb000000	 bl          DDKReg_GetIsrInfo
  00048	e58d0008	 str         r0, [sp, #8]
  0004c	e59d3008	 ldr         r3, [sp, #8]
  00050	e58d3000	 str         r3, [sp]

; 107  :             return status;

  00054	e59d3000	 ldr         r3, [sp]
  00058	e58d3004	 str         r3, [sp, #4]
  0005c	ea000002	 b           |$LN3@GetIsrInfo|

; 108  :         }
; 109  :         else

  00060	ea000001	 b           |$LN1@GetIsrInfo|
  00064		 |$LN2@GetIsrInfo|

; 110  :         {
; 111  :             return ERROR_INVALID_FUNCTION;

  00064	e3a03001	 mov         r3, #1
  00068	e58d3004	 str         r3, [sp, #4]
  0006c		 |$LN1@GetIsrInfo|
  0006c		 |$LN3@GetIsrInfo|

; 112  :         }
; 113  :     }

  0006c	e59d0004	 ldr         r0, [sp, #4]
  00070	e28dd00c	 add         sp, sp, #0xC
  00074	e89d6000	 ldmia       sp, {sp, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$M37092|

			 ENDP  ; |?GetIsrInfo@CRegistryEdit@@QAAKPAU_DDKISRINFO_tag@@@Z|, CRegistryEdit::GetIsrInfo

	IMPORT	|RegQueryValueExW|

  00000			 AREA	 |.pdata|, PDATA
|$T37106| DCD	|$LN7@GetRegValu|
	DCD	0x40002104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z| PROC ; CRegistryEdit::GetRegValue

; 130  :     {

  00000		 |$LN7@GetRegValu|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd024	 sub         sp, sp, #0x24
  00010		 |$M37103|

; 131  :         DWORD dwType = 0;

  00010	e3a03000	 mov         r3, #0
  00014	e58d3008	 str         r3, [sp, #8]

; 132  :         LONG status = ::RegQueryValueEx( m_hDevKey,
; 133  :                                            lpcName,
; 134  :                                            NULL,
; 135  :                                            &dwType,
; 136  :                                            lpData,
; 137  :                                            &dwDataLen );

  00018	e28d3038	 add         r3, sp, #0x38
  0001c	e58d3004	 str         r3, [sp, #4]
  00020	e59d3034	 ldr         r3, [sp, #0x34]
  00024	e58d3000	 str         r3, [sp]
  00028	e28d3008	 add         r3, sp, #8
  0002c	e3a02000	 mov         r2, #0
  00030	e59d1030	 ldr         r1, [sp, #0x30]
  00034	e59d002c	 ldr         r0, [sp, #0x2C]
  00038	e5900000	 ldr         r0, [r0]
  0003c	eb000000	 bl          RegQueryValueExW
  00040	e58d001c	 str         r0, [sp, #0x1C]
  00044	e59d301c	 ldr         r3, [sp, #0x1C]
  00048	e58d300c	 str         r3, [sp, #0xC]

; 138  :         return ( status == ERROR_SUCCESS );

  0004c	e59d300c	 ldr         r3, [sp, #0xC]
  00050	e3530000	 cmp         r3, #0
  00054	1a000002	 bne         |$LN3@GetRegValu|
  00058	e3a03001	 mov         r3, #1
  0005c	e58d3020	 str         r3, [sp, #0x20]
  00060	ea000001	 b           |$LN4@GetRegValu|
  00064		 |$LN3@GetRegValu|
  00064	e3a03000	 mov         r3, #0
  00068	e58d3020	 str         r3, [sp, #0x20]
  0006c		 |$LN4@GetRegValu|
  0006c	e59d3020	 ldr         r3, [sp, #0x20]
  00070	e58d3018	 str         r3, [sp, #0x18]

; 139  :     }

  00074	e59d0018	 ldr         r0, [sp, #0x18]
  00078	e28dd024	 add         sp, sp, #0x24
  0007c	e89d6000	 ldmia       sp, {sp, lr}
  00080	e12fff1e	 bx          lr
  00084		 |$M37104|

			 ENDP  ; |?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z|, CRegistryEdit::GetRegValue

	IMPORT	|RegSetValueExW|

  00000			 AREA	 |.pdata|, PDATA
|$T37118| DCD	|$LN7@RegSetValu|
	DCD	0x40001f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RegSetValueExW@CRegistryEdit@@QAAHPBGKPAEK@Z| PROC ; CRegistryEdit::RegSetValueExW

; 160  :     {

  00000		 |$LN7@RegSetValu|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd020	 sub         sp, sp, #0x20
  00010		 |$M37115|

; 161  :         LONG status = ::RegSetValueEx( m_hDevKey,
; 162  :                                          lpcName,
; 163  :                                          NULL,
; 164  :                                          dwType,
; 165  :                                          lpData,
; 166  :                                          dwDataLen );

  00010	e59d3038	 ldr         r3, [sp, #0x38]
  00014	e58d3004	 str         r3, [sp, #4]
  00018	e59d3034	 ldr         r3, [sp, #0x34]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d3030	 ldr         r3, [sp, #0x30]
  00024	e3a02000	 mov         r2, #0
  00028	e59d102c	 ldr         r1, [sp, #0x2C]
  0002c	e59d0028	 ldr         r0, [sp, #0x28]
  00030	e5900000	 ldr         r0, [r0]
  00034	eb000000	 bl          RegSetValueExW
  00038	e58d0018	 str         r0, [sp, #0x18]
  0003c	e59d3018	 ldr         r3, [sp, #0x18]
  00040	e58d3008	 str         r3, [sp, #8]

; 167  :         return ( status == ERROR_SUCCESS );

  00044	e59d3008	 ldr         r3, [sp, #8]
  00048	e3530000	 cmp         r3, #0
  0004c	1a000002	 bne         |$LN3@RegSetValu|
  00050	e3a03001	 mov         r3, #1
  00054	e58d301c	 str         r3, [sp, #0x1C]
  00058	ea000001	 b           |$LN4@RegSetValu|
  0005c		 |$LN3@RegSetValu|
  0005c	e3a03000	 mov         r3, #0
  00060	e58d301c	 str         r3, [sp, #0x1C]
  00064		 |$LN4@RegSetValu|
  00064	e59d301c	 ldr         r3, [sp, #0x1C]
  00068	e58d3014	 str         r3, [sp, #0x14]

; 168  :     }

  0006c	e59d0014	 ldr         r0, [sp, #0x14]
  00070	e28dd020	 add         sp, sp, #0x20
  00074	e89d6000	 ldmia       sp, {sp, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$M37116|

			 ENDP  ; |?RegSetValueExW@CRegistryEdit@@QAAHPBGKPAEK@Z|, CRegistryEdit::RegSetValueExW

; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul16550.h

  00000			 AREA	 |.pdata|, PDATA
|$T37126| DCD	|$LN5@GetRegiste|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ| PROC ; CBulPdd16550::GetRegister

; 141  :     CBulReg16550 *GetRegister() { return (CBulReg16550 *)m_pReg16550; };

  00000		 |$LN5@GetRegiste|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37123|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833f4a	 add         r3, r3, #0x4A, 30
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M37124|

			 ENDP  ; |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ|, CBulPdd16550::GetRegister

	EXPORT	|?Unlock@CLockObject@@QAAXXZ|		; CLockObject::Unlock
	EXPORT	|?Lock@CLockObject@@QAAXXZ|		; CLockObject::Lock
	IMPORT	|?Open@CSerialPDD@@UAAHXZ|		; CSerialPDD::Open

  00030			 AREA	 |.pdata|, PDATA
|$T37134| DCD	|$LN6@Open|
	DCD	0x40003d04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\serial\bul16550.cpp

  004cc			 AREA	 |.text|, CODE, ARM

  004cc		 |?Open@CBulPdd16550@@UAAHXZ| PROC	; CBulPdd16550::Open

; 119  : {

  004cc		 |$LN6@Open|
  004cc	e1a0c00d	 mov         r12, sp
  004d0	e92d0001	 stmdb       sp!, {r0}
  004d4	e92d5000	 stmdb       sp!, {r12, lr}
  004d8	e24dd020	 sub         sp, sp, #0x20
  004dc		 |$M37131|

; 120  :     BOOL bReturn =  CPdd16550::Open();

  004dc	e59d0028	 ldr         r0, [sp, #0x28]
  004e0	eb000000	 bl          |?Open@CSerialPDD@@UAAHXZ|
  004e4	e58d0008	 str         r0, [sp, #8]
  004e8	e59d3008	 ldr         r3, [sp, #8]
  004ec	e58d3000	 str         r3, [sp]

; 121  :     if (bReturn) {        

  004f0	e59d3000	 ldr         r3, [sp]
  004f4	e3530000	 cmp         r3, #0
  004f8	0a00002a	 beq         |$LN1@Open|

; 122  :         // Need Enable UART.
; 123  :         m_HardwareLock.Lock();   

  004fc	e59d3028	 ldr         r3, [sp, #0x28]
  00500	e2830060	 add         r0, r3, #0x60
  00504	eb000000	 bl          |?Lock@CLockObject@@QAAXXZ|

; 124  :         GetRegister()->Write_IER(GetRegister()->Read_IER() | BUL_SERIAL_IER_UUE|BUL_SERIAL_IER_RTOIE);

  00508	e59d0028	 ldr         r0, [sp, #0x28]
  0050c	eb000000	 bl          |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ|
  00510	e58d000c	 str         r0, [sp, #0xC]
  00514	e59d300c	 ldr         r3, [sp, #0xC]
  00518	e58d3010	 str         r3, [sp, #0x10]
  0051c	e59d3010	 ldr         r3, [sp, #0x10]
  00520	e5933000	 ldr         r3, [r3]
  00524	e2833014	 add         r3, r3, #0x14
  00528	e59d0010	 ldr         r0, [sp, #0x10]
  0052c	e5933000	 ldr         r3, [r3]
  00530	e1a0e00f	 mov         lr, pc
  00534	e12fff13	 bx          r3
  00538	e5cd0014	 strb        r0, [sp, #0x14]
  0053c	e59d0028	 ldr         r0, [sp, #0x28]
  00540	eb000000	 bl          |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ|
  00544	e58d0018	 str         r0, [sp, #0x18]
  00548	e59d3018	 ldr         r3, [sp, #0x18]
  0054c	e58d301c	 str         r3, [sp, #0x1C]
  00550	e5dd3014	 ldrb        r3, [sp, #0x14]
  00554	e3833040	 orr         r3, r3, #0x40
  00558	e3833010	 orr         r3, r3, #0x10
  0055c	e20310ff	 and         r1, r3, #0xFF
  00560	e59d001c	 ldr         r0, [sp, #0x1C]
  00564	e59d301c	 ldr         r3, [sp, #0x1C]
  00568	e5933000	 ldr         r3, [r3]
  0056c	e2833010	 add         r3, r3, #0x10
  00570	e5933000	 ldr         r3, [r3]
  00574	e1a0e00f	 mov         lr, pc
  00578	e12fff13	 bx          r3

; 125  :         InitIR(TRUE);

  0057c	e3a01001	 mov         r1, #1
  00580	e59d3028	 ldr         r3, [sp, #0x28]
  00584	e5933000	 ldr         r3, [r3]
  00588	e28330e4	 add         r3, r3, #0xE4
  0058c	e59d0028	 ldr         r0, [sp, #0x28]
  00590	e5933000	 ldr         r3, [r3]
  00594	e1a0e00f	 mov         lr, pc
  00598	e12fff13	 bx          r3

; 126  :         m_HardwareLock.Unlock();

  0059c	e59d3028	 ldr         r3, [sp, #0x28]
  005a0	e2830060	 add         r0, r3, #0x60
  005a4	eb000000	 bl          |?Unlock@CLockObject@@QAAXXZ|
  005a8		 |$LN1@Open|

; 127  : 
; 128  :     }
; 129  :     return bReturn;

  005a8	e59d3000	 ldr         r3, [sp]
  005ac	e58d3004	 str         r3, [sp, #4]

; 130  : }

  005b0	e59d0004	 ldr         r0, [sp, #4]
  005b4	e28dd020	 add         sp, sp, #0x20
  005b8	e89d6000	 ldmia       sp, {sp, lr}
  005bc	e12fff1e	 bx          lr
  005c0		 |$M37132|

			 ENDP  ; |?Open@CBulPdd16550@@UAAHXZ|, CBulPdd16550::Open

	IMPORT	|EnterCriticalSection|
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37139| DCD	|$LN5@Lock|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Lock@CLockObject@@QAAXXZ| PROC	; CLockObject::Lock

; 45   :     {

  00000		 |$LN5@Lock|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37136|

; 46   :         EnterCriticalSection( &m_CSection );

  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          EnterCriticalSection

; 47   :     };

  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M37137|

			 ENDP  ; |?Lock@CLockObject@@QAAXXZ|, CLockObject::Lock

	IMPORT	|LeaveCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37146| DCD	|$LN5@Unlock|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Unlock@CLockObject@@QAAXXZ| PROC	; CLockObject::Unlock

; 49   :     {

  00000		 |$LN5@Unlock|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37143|

; 50   :         LeaveCriticalSection( &m_CSection );

  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          LeaveCriticalSection

; 51   :     };

  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M37144|

			 ENDP  ; |?Unlock@CLockObject@@QAAXXZ|, CLockObject::Unlock

	IMPORT	|?Close@CSerialPDD@@UAAHXZ|		; CSerialPDD::Close

  00038			 AREA	 |.pdata|, PDATA
|$T37154| DCD	|$LN6@Close|
	DCD	0x40003e04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\serial\bul16550.cpp

  005c0			 AREA	 |.text|, CODE, ARM

  005c0		 |?Close@CBulPdd16550@@UAAHXZ| PROC	; CBulPdd16550::Close

; 132  : {

  005c0		 |$LN6@Close|
  005c0	e1a0c00d	 mov         r12, sp
  005c4	e92d0001	 stmdb       sp!, {r0}
  005c8	e92d5000	 stmdb       sp!, {r12, lr}
  005cc	e24dd020	 sub         sp, sp, #0x20
  005d0		 |$M37151|

; 133  :     BOOL bReturn =  CPdd16550::Close();

  005d0	e59d0028	 ldr         r0, [sp, #0x28]
  005d4	eb000000	 bl          |?Close@CSerialPDD@@UAAHXZ|
  005d8	e58d0008	 str         r0, [sp, #8]
  005dc	e59d3008	 ldr         r3, [sp, #8]
  005e0	e58d3000	 str         r3, [sp]

; 134  :     if (bReturn) { 

  005e4	e59d3000	 ldr         r3, [sp]
  005e8	e3530000	 cmp         r3, #0
  005ec	0a00002b	 beq         |$LN1@Close|

; 135  :         // Need Disable UART.
; 136  :         m_HardwareLock.Lock();   

  005f0	e59d3028	 ldr         r3, [sp, #0x28]
  005f4	e2830060	 add         r0, r3, #0x60
  005f8	eb000000	 bl          |?Lock@CLockObject@@QAAXXZ|

; 137  :         InitIR(FALSE);

  005fc	e3a01000	 mov         r1, #0
  00600	e59d3028	 ldr         r3, [sp, #0x28]
  00604	e5933000	 ldr         r3, [r3]
  00608	e28330e4	 add         r3, r3, #0xE4
  0060c	e59d0028	 ldr         r0, [sp, #0x28]
  00610	e5933000	 ldr         r3, [r3]
  00614	e1a0e00f	 mov         lr, pc
  00618	e12fff13	 bx          r3

; 138  :         GetRegister()->Write_IER(GetRegister()->Read_IER() &~( BUL_SERIAL_IER_UUE|BUL_SERIAL_IER_RTOIE));

  0061c	e59d0028	 ldr         r0, [sp, #0x28]
  00620	eb000000	 bl          |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ|
  00624	e58d000c	 str         r0, [sp, #0xC]
  00628	e59d300c	 ldr         r3, [sp, #0xC]
  0062c	e58d3010	 str         r3, [sp, #0x10]
  00630	e59d3010	 ldr         r3, [sp, #0x10]
  00634	e5933000	 ldr         r3, [r3]
  00638	e2833014	 add         r3, r3, #0x14
  0063c	e59d0010	 ldr         r0, [sp, #0x10]
  00640	e5933000	 ldr         r3, [r3]
  00644	e1a0e00f	 mov         lr, pc
  00648	e12fff13	 bx          r3
  0064c	e5cd0014	 strb        r0, [sp, #0x14]
  00650	e59d0028	 ldr         r0, [sp, #0x28]
  00654	eb000000	 bl          |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ|
  00658	e58d0018	 str         r0, [sp, #0x18]
  0065c	e59d3018	 ldr         r3, [sp, #0x18]
  00660	e58d301c	 str         r3, [sp, #0x1C]
  00664	e5dd3014	 ldrb        r3, [sp, #0x14]
  00668	e1a02003	 mov         r2, r3
  0066c	e3e03050	 mvn         r3, #0x50
  00670	e0023003	 and         r3, r2, r3
  00674	e20310ff	 and         r1, r3, #0xFF
  00678	e59d001c	 ldr         r0, [sp, #0x1C]
  0067c	e59d301c	 ldr         r3, [sp, #0x1C]
  00680	e5933000	 ldr         r3, [r3]
  00684	e2833010	 add         r3, r3, #0x10
  00688	e5933000	 ldr         r3, [r3]
  0068c	e1a0e00f	 mov         lr, pc
  00690	e12fff13	 bx          r3

; 139  :         m_HardwareLock.Unlock();

  00694	e59d3028	 ldr         r3, [sp, #0x28]
  00698	e2830060	 add         r0, r3, #0x60
  0069c	eb000000	 bl          |?Unlock@CLockObject@@QAAXXZ|
  006a0		 |$LN1@Close|

; 140  :     }
; 141  :     return bReturn;

  006a0	e59d3000	 ldr         r3, [sp]
  006a4	e58d3004	 str         r3, [sp, #4]

; 142  : }

  006a8	e59d0004	 ldr         r0, [sp, #4]
  006ac	e28dd020	 add         sp, sp, #0x20
  006b0	e89d6000	 ldmia       sp, {sp, lr}
  006b4	e12fff1e	 bx          lr
  006b8		 |$M37152|

			 ENDP  ; |?Close@CBulPdd16550@@UAAHXZ|, CBulPdd16550::Close

	EXPORT	|??_C@_1JI@HICIENIB@?$AAC?$AAB?$AAu?$AAl?$AAP?$AAd?$AAd?$AA1?$AA6?$AA5?$AA5?$AA0?$AA?3?$AA?3?$AAM?$AAa?$AAp?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?3?$AA?5?$AAm?$AA_?$AAp?$AAB?$AAa@| [ DATA ] ; `string'
	EXPORT	|?GetWindowInfo@CRegistryEdit@@QAAKPAU_DDKWINDOWINFO_tag@@@Z| ; CRegistryEdit::GetWindowInfo
	EXPORT	|??_C@_1BE@PGPADFAN@?$AAR?$AAe?$AAg?$AAS?$AAt?$AAr?$AAi?$AAd?$AAe?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
	IMPORT	|MmMapIoSpace|

  00040			 AREA	 |.pdata|, PDATA
|$T37164| DCD	|$LN14@MapHardwar|
	DCD	0x40009504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JI@HICIENIB@?$AAC?$AAB?$AAu?$AAl?$AAP?$AAd?$AAd?$AA1?$AA6?$AA5?$AA5?$AA0?$AA?3?$AA?3?$AAM?$AAa?$AAp?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?3?$AA?5?$AAm?$AA_?$AAp?$AAB?$AAa@| DCB "C"
	DCB	0x0, "B", 0x0, "u", 0x0, "l", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "1", 0x0, "6", 0x0, "5", 0x0, "5", 0x0, "0", 0x0, ":"
	DCB	0x0, ":", 0x0, "M", 0x0, "a", 0x0, "p", 0x0, "H", 0x0, "a"
	DCB	0x0, "r", 0x0, "d", 0x0, "w", 0x0, "a", 0x0, "r", 0x0, "e"
	DCB	0x0, ":", 0x0, " ", 0x0, "m", 0x0, "_", 0x0, "p", 0x0, "B"
	DCB	0x0, "a", 0x0, "s", 0x0, "e", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, ":", 0x0, "%"
	DCB	0x0, "x", 0x0, " ", 0x0, "m", 0x0, "_", 0x0, "p", 0x0, "G"
	DCB	0x0, "P", 0x0, "I", 0x0, "O", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, ":", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, "m", 0x0, "_"
	DCB	0x0, "p", 0x0, "D", 0x0, "C", 0x0, "C", 0x0, "L", 0x0, "K"
	DCB	0x0, "R", 0x0, "e", 0x0, "g", 0x0, ":", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@PGPADFAN@?$AAR?$AAe?$AAg?$AAS?$AAt?$AAr?$AAi?$AAd?$AAe?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "g", 0x0, "S", 0x0, "t", 0x0, "r", 0x0, "i"
	DCB	0x0, "d", 0x0, "e", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  006b8			 AREA	 |.text|, CODE, ARM

  006b8		 |?MapHardware@CBulPdd16550@@UAAHXZ| PROC ; CBulPdd16550::MapHardware

; 145  : {

  006b8		 |$LN14@MapHardwar|
  006b8	e1a0c00d	 mov         r12, sp
  006bc	e92d0001	 stmdb       sp!, {r0}
  006c0	e92d5000	 stmdb       sp!, {r12, lr}
  006c4	e24dd0ac	 sub         sp, sp, #0xAC
  006c8		 |$M37161|

; 146  :     if (!GetRegValue(PC_REG_REGSTRIDE_VAL_NAME,(PBYTE)&m_dwRegStride, PC_REG_REGSTRIDE_VAL_LEN)) {

  006c8	e3a03004	 mov         r3, #4
  006cc	e59d20b4	 ldr         r2, [sp, #0xB4]
  006d0	e2822f4d	 add         r2, r2, #0x4D, 30
  006d4	e59f122c	 ldr         r1, [pc, #0x22C]
  006d8	e59d00b4	 ldr         r0, [sp, #0xB4]
  006dc	e2800004	 add         r0, r0, #4
  006e0	eb000000	 bl          |?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z|
  006e4	e58d0090	 str         r0, [sp, #0x90]
  006e8	e59d3090	 ldr         r3, [sp, #0x90]
  006ec	e3530000	 cmp         r3, #0
  006f0	1a000003	 bne         |$LN5@MapHardwar|

; 147  :         m_dwRegStride = 4;// Default is 4 for Bulverde

  006f4	e59d30b4	 ldr         r3, [sp, #0xB4]
  006f8	e2832f4d	 add         r2, r3, #0x4D, 30
  006fc	e3a03004	 mov         r3, #4
  00700	e5823000	 str         r3, [r2]
  00704		 |$LN5@MapHardwar|

; 148  :     }
; 149  :     // Get IO Window From Registry
; 150  :     if (m_pBaseAddress == NULL ) {

  00704	e59d30b4	 ldr         r3, [sp, #0xB4]
  00708	e2833f52	 add         r3, r3, #0x52, 30
  0070c	e5933000	 ldr         r3, [r3]
  00710	e3530000	 cmp         r3, #0
  00714	1a000023	 bne         |$LN4@MapHardwar|

; 151  :         DDKWINDOWINFO dwi;
; 152  :         if ( GetWindowInfo( &dwi)==ERROR_SUCCESS &&
; 153  :                 dwi.dwNumMemWindows >= 1 &&  dwi.memWindows[0].dwBase != 0 && dwi.memWindows[0].dwLen >=  m_dwRegStride * 0x10)  {

  00718	e28d1000	 add         r1, sp, #0
  0071c	e59d30b4	 ldr         r3, [sp, #0xB4]
  00720	e2830004	 add         r0, r3, #4
  00724	eb000000	 bl          |?GetWindowInfo@CRegistryEdit@@QAAKPAU_DDKWINDOWINFO_tag@@@Z|
  00728	e58d0094	 str         r0, [sp, #0x94]
  0072c	e59d3094	 ldr         r3, [sp, #0x94]
  00730	e3530000	 cmp         r3, #0
  00734	1a00001b	 bne         |$LN3@MapHardwar|
  00738	e59d3040	 ldr         r3, [sp, #0x40]
  0073c	e3530001	 cmp         r3, #1
  00740	3a000018	 bcc         |$LN3@MapHardwar|
  00744	e59d3044	 ldr         r3, [sp, #0x44]
  00748	e3530000	 cmp         r3, #0
  0074c	0a000015	 beq         |$LN3@MapHardwar|
  00750	e59d30b4	 ldr         r3, [sp, #0xB4]
  00754	e2833f4d	 add         r3, r3, #0x4D, 30
  00758	e5931000	 ldr         r1, [r3]
  0075c	e3a03010	 mov         r3, #0x10
  00760	e0020391	 mul         r2, r1, r3
  00764	e59d3048	 ldr         r3, [sp, #0x48]
  00768	e1530002	 cmp         r3, r2
  0076c	3a00000d	 bcc         |$LN3@MapHardwar|

; 154  :             PHYSICAL_ADDRESS ioPhysicalBase = { dwi.memWindows[0].dwBase, 0};

  00770	e59d3044	 ldr         r3, [sp, #0x44]
  00774	e58d3074	 str         r3, [sp, #0x74]
  00778	e3a03000	 mov         r3, #0
  0077c	e58d3078	 str         r3, [sp, #0x78]

; 155  :             m_pBaseAddress = (PBULVERDE_UART_REG)MmMapIoSpace(ioPhysicalBase, dwi.memWindows[0].dwLen,FALSE);

  00780	e3a03000	 mov         r3, #0
  00784	e59d2048	 ldr         r2, [sp, #0x48]
  00788	e59d0074	 ldr         r0, [sp, #0x74]
  0078c	e59d1078	 ldr         r1, [sp, #0x78]
  00790	eb000000	 bl          MmMapIoSpace
  00794	e58d0098	 str         r0, [sp, #0x98]
  00798	e59d30b4	 ldr         r3, [sp, #0xB4]
  0079c	e2832f52	 add         r2, r3, #0x52, 30
  007a0	e59d3098	 ldr         r3, [sp, #0x98]
  007a4	e5823000	 str         r3, [r2]
  007a8		 |$LN3@MapHardwar|
  007a8		 |$LN4@MapHardwar|

; 156  :         }
; 157  :     }
; 158  :     if (m_pGPIOReg == NULL) {

  007a8	e59d30b4	 ldr         r3, [sp, #0xB4]
  007ac	e2833f53	 add         r3, r3, #0x53, 30
  007b0	e5933000	 ldr         r3, [r3]
  007b4	e3530000	 cmp         r3, #0
  007b8	1a00000e	 bne         |$LN2@MapHardwar|

; 159  :         PHYSICAL_ADDRESS ioPhysicalBase = {BULVERDE_BASE_REG_PA_GPIO,0};

  007bc	e3a03101	 mov         r3, #1, 2
  007c0	e383360e	 orr         r3, r3, #0xE, 12
  007c4	e58d307c	 str         r3, [sp, #0x7C]
  007c8	e3a03000	 mov         r3, #0
  007cc	e58d3080	 str         r3, [sp, #0x80]

; 160  :         m_pGPIOReg = (PBULVERDE_GPIO_REG)MmMapIoSpace(ioPhysicalBase, sizeof(BULVERDE_GPIO_REG),FALSE);

  007d0	e3a03000	 mov         r3, #0
  007d4	e3a02f53	 mov         r2, #0x53, 30
  007d8	e59d007c	 ldr         r0, [sp, #0x7C]
  007dc	e59d1080	 ldr         r1, [sp, #0x80]
  007e0	eb000000	 bl          MmMapIoSpace
  007e4	e58d009c	 str         r0, [sp, #0x9C]
  007e8	e59d30b4	 ldr         r3, [sp, #0xB4]
  007ec	e2832f53	 add         r2, r3, #0x53, 30
  007f0	e59d309c	 ldr         r3, [sp, #0x9C]
  007f4	e5823000	 str         r3, [r2]
  007f8		 |$LN2@MapHardwar|

; 161  :     }
; 162  :     if (m_pDCCLKReg == NULL ) {

  007f8	e59d30b4	 ldr         r3, [sp, #0xB4]
  007fc	e2833e15	 add         r3, r3, #0x15, 28
  00800	e5933000	 ldr         r3, [r3]
  00804	e3530000	 cmp         r3, #0
  00808	1a00000e	 bne         |$LN1@MapHardwar|

; 163  :         PHYSICAL_ADDRESS ioPhysicalBase = {BULVERDE_BASE_REG_PA_CLKMGR, 0 };

  0080c	e3a03441	 mov         r3, #0x41, 8
  00810	e3833603	 orr         r3, r3, #3, 12
  00814	e58d3084	 str         r3, [sp, #0x84]
  00818	e3a03000	 mov         r3, #0
  0081c	e58d3088	 str         r3, [sp, #0x88]

; 164  :         m_pDCCLKReg = (PBULVERDE_CLKMGR_REG)MmMapIoSpace(ioPhysicalBase, sizeof(BULVERDE_CLKMGR_REG),FALSE);

  00820	e3a03000	 mov         r3, #0
  00824	e3a02010	 mov         r2, #0x10
  00828	e59d0084	 ldr         r0, [sp, #0x84]
  0082c	e59d1088	 ldr         r1, [sp, #0x88]
  00830	eb000000	 bl          MmMapIoSpace
  00834	e58d00a0	 str         r0, [sp, #0xA0]
  00838	e59d30b4	 ldr         r3, [sp, #0xB4]
  0083c	e2832e15	 add         r2, r3, #0x15, 28
  00840	e59d30a0	 ldr         r3, [sp, #0xA0]
  00844	e5823000	 str         r3, [r2]
  00848		 |$LN1@MapHardwar|

; 165  :     }    
; 166  :     DEBUGMSG(ZONE_INIT,(TEXT("CBulPdd16550::MapHardware: m_pBaseAddress:%x m_pGPIOReg:%x m_pDCCLKReg:%x\r\n"),
; 167  :         m_pBaseAddress,m_pGPIOReg,m_pDCCLKReg));

  00848	e59f30b4	 ldr         r3, [pc, #0xB4]
  0084c	e5933440	 ldr         r3, [r3, #0x440]
  00850	e3130001	 tst         r3, #1
  00854	0a00000d	 beq         |$LN8@MapHardwar|
  00858	e59d30b4	 ldr         r3, [sp, #0xB4]
  0085c	e2833e15	 add         r3, r3, #0x15, 28
  00860	e5933000	 ldr         r3, [r3]
  00864	e59d20b4	 ldr         r2, [sp, #0xB4]
  00868	e2822f53	 add         r2, r2, #0x53, 30
  0086c	e5922000	 ldr         r2, [r2]
  00870	e59d10b4	 ldr         r1, [sp, #0xB4]
  00874	e2811f52	 add         r1, r1, #0x52, 30
  00878	e5911000	 ldr         r1, [r1]
  0087c	e59f007c	 ldr         r0, [pc, #0x7C]
  00880	eb000000	 bl          NKDbgPrintfW
  00884	e3a03001	 mov         r3, #1
  00888	e58d30a4	 str         r3, [sp, #0xA4]
  0088c	ea000001	 b           |$LN9@MapHardwar|
  00890		 |$LN8@MapHardwar|
  00890	e3a03000	 mov         r3, #0
  00894	e58d30a4	 str         r3, [sp, #0xA4]
  00898		 |$LN9@MapHardwar|

; 168  :     
; 169  :     return(m_pBaseAddress!=NULL && m_pGPIOReg!=NULL && m_pDCCLKReg!=NULL); 

  00898	e59d30b4	 ldr         r3, [sp, #0xB4]
  0089c	e2833f52	 add         r3, r3, #0x52, 30
  008a0	e5933000	 ldr         r3, [r3]
  008a4	e3530000	 cmp         r3, #0
  008a8	0a00000c	 beq         |$LN10@MapHardwar|
  008ac	e59d30b4	 ldr         r3, [sp, #0xB4]
  008b0	e2833f53	 add         r3, r3, #0x53, 30
  008b4	e5933000	 ldr         r3, [r3]
  008b8	e3530000	 cmp         r3, #0
  008bc	0a000007	 beq         |$LN10@MapHardwar|
  008c0	e59d30b4	 ldr         r3, [sp, #0xB4]
  008c4	e2833e15	 add         r3, r3, #0x15, 28
  008c8	e5933000	 ldr         r3, [r3]
  008cc	e3530000	 cmp         r3, #0
  008d0	0a000002	 beq         |$LN10@MapHardwar|
  008d4	e3a03001	 mov         r3, #1
  008d8	e58d30a8	 str         r3, [sp, #0xA8]
  008dc	ea000001	 b           |$LN11@MapHardwar|
  008e0		 |$LN10@MapHardwar|
  008e0	e3a03000	 mov         r3, #0
  008e4	e58d30a8	 str         r3, [sp, #0xA8]
  008e8		 |$LN11@MapHardwar|
  008e8	e59d30a8	 ldr         r3, [sp, #0xA8]
  008ec	e58d308c	 str         r3, [sp, #0x8C]

; 170  : }

  008f0	e59d008c	 ldr         r0, [sp, #0x8C]
  008f4	e28dd0ac	 add         sp, sp, #0xAC
  008f8	e89d6000	 ldmia       sp, {sp, lr}
  008fc	e12fff1e	 bx          lr
  00900		 |$LN15@MapHardwar|
  00900		 |$LN16@MapHardwar|
  00900	00000000	 DCD         |??_C@_1JI@HICIENIB@?$AAC?$AAB?$AAu?$AAl?$AAP?$AAd?$AAd?$AA1?$AA6?$AA5?$AA5?$AA0?$AA?3?$AA?3?$AAM?$AAa?$AAp?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?3?$AA?5?$AAm?$AA_?$AAp?$AAB?$AAa@|
  00904		 |$LN17@MapHardwar|
  00904	00000000	 DCD         |dpCurSettings|
  00908		 |$LN18@MapHardwar|
  00908	00000000	 DCD         |??_C@_1BE@PGPADFAN@?$AAR?$AAe?$AAg?$AAS?$AAt?$AAr?$AAi?$AAd?$AAe?$AA?$AA@|
  0090c		 |$M37162|

			 ENDP  ; |?MapHardware@CBulPdd16550@@UAAHXZ|, CBulPdd16550::MapHardware

	IMPORT	|DDKReg_GetWindowInfo|
; File c:\wince600\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.pdata|, PDATA
|$T37174| DCD	|$LN7@GetWindowI|
	DCD	0x40001f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetWindowInfo@CRegistryEdit@@QAAKPAU_DDKWINDOWINFO_tag@@@Z| PROC ; CRegistryEdit::GetWindowInfo

; 88   :     {

  00000		 |$LN7@GetWindowI|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M37171|

; 89   :         if( pdwi && m_hDevKey )

  00010	e59d3018	 ldr         r3, [sp, #0x18]
  00014	e3530000	 cmp         r3, #0
  00018	0a000011	 beq         |$LN2@GetWindowI|
  0001c	e59d3014	 ldr         r3, [sp, #0x14]
  00020	e5933000	 ldr         r3, [r3]
  00024	e3530000	 cmp         r3, #0
  00028	0a00000d	 beq         |$LN2@GetWindowI|

; 90   :         {
; 91   :             pdwi->cbSize = sizeof( DDKWINDOWINFO );

  0002c	e59d2018	 ldr         r2, [sp, #0x18]
  00030	e3a03074	 mov         r3, #0x74
  00034	e5823000	 str         r3, [r2]

; 92   :             DWORD status = DDKReg_GetWindowInfo( m_hDevKey, pdwi );

  00038	e59d1018	 ldr         r1, [sp, #0x18]
  0003c	e59d3014	 ldr         r3, [sp, #0x14]
  00040	e5930000	 ldr         r0, [r3]
  00044	eb000000	 bl          DDKReg_GetWindowInfo
  00048	e58d0008	 str         r0, [sp, #8]
  0004c	e59d3008	 ldr         r3, [sp, #8]
  00050	e58d3000	 str         r3, [sp]

; 93   :             return status;

  00054	e59d3000	 ldr         r3, [sp]
  00058	e58d3004	 str         r3, [sp, #4]
  0005c	ea000002	 b           |$LN3@GetWindowI|

; 94   :         }
; 95   :         else

  00060	ea000001	 b           |$LN1@GetWindowI|
  00064		 |$LN2@GetWindowI|

; 96   :         {
; 97   :             return ERROR_INVALID_FUNCTION;

  00064	e3a03001	 mov         r3, #1
  00068	e58d3004	 str         r3, [sp, #4]
  0006c		 |$LN1@GetWindowI|
  0006c		 |$LN3@GetWindowI|

; 98   :         }
; 99   :     }

  0006c	e59d0004	 ldr         r0, [sp, #4]
  00070	e28dd00c	 add         sp, sp, #0xC
  00074	e89d6000	 ldmia       sp, {sp, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$M37172|

			 ENDP  ; |?GetWindowInfo@CRegistryEdit@@QAAKPAU_DDKWINDOWINFO_tag@@@Z|, CRegistryEdit::GetWindowInfo

	IMPORT	|??2@YAPAXI@Z|				; operator new

  00048			 AREA	 |.pdata|, PDATA
|$T37191| DCD	|$LN14@CreateHard|
	DCD	0x40006604
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\serial\bul16550.cpp

  0090c			 AREA	 |.text|, CODE, ARM

  0090c		 |?CreateHardwareAccess@CBulPdd16550@@UAAHXZ| PROC ; CBulPdd16550::CreateHardwareAccess

; 172  : {

  0090c		 |$LN14@CreateHard|
  0090c	e1a0c00d	 mov         r12, sp
  00910	e92d0001	 stmdb       sp!, {r0}
  00914	e92d5000	 stmdb       sp!, {r12, lr}
  00918	e24dd02c	 sub         sp, sp, #0x2C
  0091c		 |$M37188|

; 173  :     if (m_pReg16550)

  0091c	e59d3034	 ldr         r3, [sp, #0x34]
  00920	e2833f4a	 add         r3, r3, #0x4A, 30
  00924	e5933000	 ldr         r3, [r3]
  00928	e3530000	 cmp         r3, #0
  0092c	0a000002	 beq         |$LN3@CreateHard|

; 174  :         return TRUE;

  00930	e3a03001	 mov         r3, #1
  00934	e58d300c	 str         r3, [sp, #0xC]
  00938	ea000055	 b           |$LN4@CreateHard|
  0093c		 |$LN3@CreateHard|

; 175  :     if (m_pBaseAddress!=NULL) {

  0093c	e59d3034	 ldr         r3, [sp, #0x34]
  00940	e2833f52	 add         r3, r3, #0x52, 30
  00944	e5933000	 ldr         r3, [r3]
  00948	e3530000	 cmp         r3, #0
  0094c	0a000044	 beq         |$LN2@CreateHard|

; 176  :         m_pReg16550 = new CBulReg16550(m_pBaseAddress);

  00950	e3a00044	 mov         r0, #0x44
  00954	eb000000	 bl          |??2@YAPAXI@Z|
  00958	e58d0010	 str         r0, [sp, #0x10]
  0095c	e59d3010	 ldr         r3, [sp, #0x10]
  00960	e58d3000	 str         r3, [sp]
  00964	e59d3000	 ldr         r3, [sp]
  00968	e3530000	 cmp         r3, #0
  0096c	0a000008	 beq         |$LN6@CreateHard|
  00970	e59d3034	 ldr         r3, [sp, #0x34]
  00974	e2833f52	 add         r3, r3, #0x52, 30
  00978	e5931000	 ldr         r1, [r3]
  0097c	e59d0000	 ldr         r0, [sp]
  00980	eb000000	 bl          |??0CBulReg16550@@QAA@PAUBULVERDE_UART_REG@@@Z|
  00984	e58d0014	 str         r0, [sp, #0x14]
  00988	e59d3014	 ldr         r3, [sp, #0x14]
  0098c	e58d3018	 str         r3, [sp, #0x18]
  00990	ea000001	 b           |$LN7@CreateHard|
  00994		 |$LN6@CreateHard|
  00994	e3a03000	 mov         r3, #0
  00998	e58d3018	 str         r3, [sp, #0x18]
  0099c		 |$LN7@CreateHard|
  0099c	e59d3034	 ldr         r3, [sp, #0x34]
  009a0	e2832f4a	 add         r2, r3, #0x4A, 30
  009a4	e59d3018	 ldr         r3, [sp, #0x18]
  009a8	e5823000	 str         r3, [r2]

; 177  :         if (m_pReg16550 && !m_pReg16550->Init()) { // FALSE.

  009ac	e59d3034	 ldr         r3, [sp, #0x34]
  009b0	e2833f4a	 add         r3, r3, #0x4A, 30
  009b4	e5933000	 ldr         r3, [r3]
  009b8	e3530000	 cmp         r3, #0
  009bc	0a000028	 beq         |$LN1@CreateHard|
  009c0	e59d3034	 ldr         r3, [sp, #0x34]
  009c4	e2833f4a	 add         r3, r3, #0x4A, 30
  009c8	e5932000	 ldr         r2, [r3]
  009cc	e59d3034	 ldr         r3, [sp, #0x34]
  009d0	e2833f4a	 add         r3, r3, #0x4A, 30
  009d4	e5930000	 ldr         r0, [r3]
  009d8	e5923000	 ldr         r3, [r2]
  009dc	e2833004	 add         r3, r3, #4
  009e0	e5933000	 ldr         r3, [r3]
  009e4	e1a0e00f	 mov         lr, pc
  009e8	e12fff13	 bx          r3
  009ec	e58d001c	 str         r0, [sp, #0x1C]
  009f0	e59d301c	 ldr         r3, [sp, #0x1C]
  009f4	e3530000	 cmp         r3, #0
  009f8	1a000019	 bne         |$LN1@CreateHard|

; 178  :             delete m_pReg16550 ;

  009fc	e59d3034	 ldr         r3, [sp, #0x34]
  00a00	e2833f4a	 add         r3, r3, #0x4A, 30
  00a04	e5933000	 ldr         r3, [r3]
  00a08	e58d3008	 str         r3, [sp, #8]
  00a0c	e59d3008	 ldr         r3, [sp, #8]
  00a10	e58d3004	 str         r3, [sp, #4]
  00a14	e59d3004	 ldr         r3, [sp, #4]
  00a18	e3530000	 cmp         r3, #0
  00a1c	0a00000a	 beq         |$LN8@CreateHard|
  00a20	e3a01001	 mov         r1, #1
  00a24	e59d3004	 ldr         r3, [sp, #4]
  00a28	e5933000	 ldr         r3, [r3]
  00a2c	e59d0004	 ldr         r0, [sp, #4]
  00a30	e5933000	 ldr         r3, [r3]
  00a34	e1a0e00f	 mov         lr, pc
  00a38	e12fff13	 bx          r3
  00a3c	e58d0020	 str         r0, [sp, #0x20]
  00a40	e59d3020	 ldr         r3, [sp, #0x20]
  00a44	e58d3024	 str         r3, [sp, #0x24]
  00a48	ea000001	 b           |$LN9@CreateHard|
  00a4c		 |$LN8@CreateHard|
  00a4c	e3a03000	 mov         r3, #0
  00a50	e58d3024	 str         r3, [sp, #0x24]
  00a54		 |$LN9@CreateHard|

; 179  :             m_pReg16550 = NULL;

  00a54	e59d3034	 ldr         r3, [sp, #0x34]
  00a58	e2832f4a	 add         r2, r3, #0x4A, 30
  00a5c	e3a03000	 mov         r3, #0
  00a60	e5823000	 str         r3, [r2]
  00a64		 |$LN1@CreateHard|
  00a64		 |$LN2@CreateHard|

; 180  :         }
; 181  :             
; 182  :     }
; 183  :     return (m_pReg16550!=NULL);

  00a64	e59d3034	 ldr         r3, [sp, #0x34]
  00a68	e2833f4a	 add         r3, r3, #0x4A, 30
  00a6c	e5933000	 ldr         r3, [r3]
  00a70	e3530000	 cmp         r3, #0
  00a74	0a000002	 beq         |$LN10@CreateHard|
  00a78	e3a03001	 mov         r3, #1
  00a7c	e58d3028	 str         r3, [sp, #0x28]
  00a80	ea000001	 b           |$LN11@CreateHard|
  00a84		 |$LN10@CreateHard|
  00a84	e3a03000	 mov         r3, #0
  00a88	e58d3028	 str         r3, [sp, #0x28]
  00a8c		 |$LN11@CreateHard|
  00a8c	e59d3028	 ldr         r3, [sp, #0x28]
  00a90	e58d300c	 str         r3, [sp, #0xC]
  00a94		 |$LN4@CreateHard|

; 184  : }

  00a94	e59d000c	 ldr         r0, [sp, #0xC]
  00a98	e28dd02c	 add         sp, sp, #0x2C
  00a9c	e89d6000	 ldmia       sp, {sp, lr}
  00aa0	e12fff1e	 bx          lr
  00aa4		 |$M37189|

			 ENDP  ; |?CreateHardwareAccess@CBulPdd16550@@UAAHXZ|, CBulPdd16550::CreateHardwareAccess


  00050			 AREA	 |.pdata|, PDATA
|$T37197| DCD	|$LN9@GetWaterMa|
	DCD	0x40002e04
; Function compile flags: /Odtp

  00aa4			 AREA	 |.text|, CODE, ARM

  00aa4		 |?GetWaterMarkBit@CBulPdd16550@@UAAEXZ| PROC ; CBulPdd16550::GetWaterMarkBit

; 193  : {

  00aa4		 |$LN9@GetWaterMa|
  00aa4	e1a0c00d	 mov         r12, sp
  00aa8	e92d0001	 stmdb       sp!, {r0}
  00aac	e92d5000	 stmdb       sp!, {r12, lr}
  00ab0	e24dd00c	 sub         sp, sp, #0xC
  00ab4		 |$M37194|

; 194  :     BYTE bReturnKey = (BYTE)s_HighWaterPairs[0].Key;

  00ab4	e59f309c	 ldr         r3, [pc, #0x9C]
  00ab8	e5933000	 ldr         r3, [r3]
  00abc	e20330ff	 and         r3, r3, #0xFF
  00ac0	e5cd3000	 strb        r3, [sp]

; 195  :     for (DWORD dwIndex=dim(s_HighWaterPairs)-1;dwIndex!=0; dwIndex --) {

  00ac4	e3a03003	 mov         r3, #3
  00ac8	e58d3004	 str         r3, [sp, #4]
  00acc	ea000002	 b           |$LN4@GetWaterMa|
  00ad0		 |$LN3@GetWaterMa|
  00ad0	e59d3004	 ldr         r3, [sp, #4]
  00ad4	e2433001	 sub         r3, r3, #1
  00ad8	e58d3004	 str         r3, [sp, #4]
  00adc		 |$LN4@GetWaterMa|
  00adc	e59d3004	 ldr         r3, [sp, #4]
  00ae0	e3530000	 cmp         r3, #0
  00ae4	0a000015	 beq         |$LN2@GetWaterMa|

; 196  :         if (m_dwWaterMark>=s_HighWaterPairs[dwIndex].AssociatedValue) {

  00ae8	e59d3014	 ldr         r3, [sp, #0x14]
  00aec	e2830f49	 add         r0, r3, #0x49, 30
  00af0	e59d1004	 ldr         r1, [sp, #4]
  00af4	e3a03008	 mov         r3, #8
  00af8	e0020391	 mul         r2, r1, r3
  00afc	e59f3054	 ldr         r3, [pc, #0x54]
  00b00	e0833002	 add         r3, r3, r2
  00b04	e2833004	 add         r3, r3, #4
  00b08	e5902000	 ldr         r2, [r0]
  00b0c	e5933000	 ldr         r3, [r3]
  00b10	e1520003	 cmp         r2, r3
  00b14	3a000008	 bcc         |$LN1@GetWaterMa|

; 197  :             bReturnKey = (BYTE)s_HighWaterPairs[dwIndex].Key;

  00b18	e59d1004	 ldr         r1, [sp, #4]
  00b1c	e3a03008	 mov         r3, #8
  00b20	e0020391	 mul         r2, r1, r3
  00b24	e59f302c	 ldr         r3, [pc, #0x2C]
  00b28	e0833002	 add         r3, r3, r2
  00b2c	e5933000	 ldr         r3, [r3]
  00b30	e20330ff	 and         r3, r3, #0xFF
  00b34	e5cd3000	 strb        r3, [sp]

; 198  :             break;

  00b38	ea000000	 b           |$LN2@GetWaterMa|
  00b3c		 |$LN1@GetWaterMa|

; 199  :         }
; 200  :     }

  00b3c	eaffffe3	 b           |$LN3@GetWaterMa|
  00b40		 |$LN2@GetWaterMa|

; 201  :     return bReturnKey;

  00b40	e5dd3000	 ldrb        r3, [sp]
  00b44	e5cd3008	 strb        r3, [sp, #8]

; 202  : }

  00b48	e5dd0008	 ldrb        r0, [sp, #8]
  00b4c	e28dd00c	 add         sp, sp, #0xC
  00b50	e89d6000	 ldmia       sp, {sp, lr}
  00b54	e12fff1e	 bx          lr
  00b58		 |$LN10@GetWaterMa|
  00b58		 |$LN11@GetWaterMa|
  00b58	00000000	 DCD         |s_HighWaterPairs|
  00b5c		 |$M37195|

			 ENDP  ; |?GetWaterMarkBit@CBulPdd16550@@UAAEXZ|, CBulPdd16550::GetWaterMarkBit


  00058			 AREA	 |.pdata|, PDATA
|$T37205| DCD	|$LN9@GetWaterMa@2|
	DCD	0x40002f04
; Function compile flags: /Odtp

  00b5c			 AREA	 |.text|, CODE, ARM

  00b5c		 |?GetWaterMark@CBulPdd16550@@UAAKXZ| PROC ; CBulPdd16550::GetWaterMark

; 204  : {

  00b5c		 |$LN9@GetWaterMa@2|
  00b5c	e1a0c00d	 mov         r12, sp
  00b60	e92d0001	 stmdb       sp!, {r0}
  00b64	e92d5000	 stmdb       sp!, {r12, lr}
  00b68	e24dd00c	 sub         sp, sp, #0xC
  00b6c		 |$M37202|

; 205  :     BYTE bReturnValue = (BYTE)s_HighWaterPairs[0].AssociatedValue;

  00b6c	e59f30a0	 ldr         r3, [pc, #0xA0]
  00b70	e5933004	 ldr         r3, [r3, #4]
  00b74	e20330ff	 and         r3, r3, #0xFF
  00b78	e5cd3000	 strb        r3, [sp]

; 206  :     for (DWORD dwIndex=dim(s_HighWaterPairs)-1;dwIndex!=0; dwIndex --) {

  00b7c	e3a03003	 mov         r3, #3
  00b80	e58d3004	 str         r3, [sp, #4]
  00b84	ea000002	 b           |$LN4@GetWaterMa@2|
  00b88		 |$LN3@GetWaterMa@2|
  00b88	e59d3004	 ldr         r3, [sp, #4]
  00b8c	e2433001	 sub         r3, r3, #1
  00b90	e58d3004	 str         r3, [sp, #4]
  00b94		 |$LN4@GetWaterMa@2|
  00b94	e59d3004	 ldr         r3, [sp, #4]
  00b98	e3530000	 cmp         r3, #0
  00b9c	0a000016	 beq         |$LN2@GetWaterMa@2|

; 207  :         if (m_dwWaterMark>=s_HighWaterPairs[dwIndex].AssociatedValue) {

  00ba0	e59d3014	 ldr         r3, [sp, #0x14]
  00ba4	e2830f49	 add         r0, r3, #0x49, 30
  00ba8	e59d1004	 ldr         r1, [sp, #4]
  00bac	e3a03008	 mov         r3, #8
  00bb0	e0020391	 mul         r2, r1, r3
  00bb4	e59f3058	 ldr         r3, [pc, #0x58]
  00bb8	e0833002	 add         r3, r3, r2
  00bbc	e2833004	 add         r3, r3, #4
  00bc0	e5902000	 ldr         r2, [r0]
  00bc4	e5933000	 ldr         r3, [r3]
  00bc8	e1520003	 cmp         r2, r3
  00bcc	3a000009	 bcc         |$LN1@GetWaterMa@2|

; 208  :             bReturnValue = (BYTE)s_HighWaterPairs[dwIndex].AssociatedValue;

  00bd0	e59d1004	 ldr         r1, [sp, #4]
  00bd4	e3a03008	 mov         r3, #8
  00bd8	e0020391	 mul         r2, r1, r3
  00bdc	e59f3030	 ldr         r3, [pc, #0x30]
  00be0	e0833002	 add         r3, r3, r2
  00be4	e2833004	 add         r3, r3, #4
  00be8	e5933000	 ldr         r3, [r3]
  00bec	e20330ff	 and         r3, r3, #0xFF
  00bf0	e5cd3000	 strb        r3, [sp]

; 209  :             break;

  00bf4	ea000000	 b           |$LN2@GetWaterMa@2|
  00bf8		 |$LN1@GetWaterMa@2|

; 210  :         }
; 211  :     }

  00bf8	eaffffe2	 b           |$LN3@GetWaterMa@2|
  00bfc		 |$LN2@GetWaterMa@2|

; 212  :     return bReturnValue;

  00bfc	e5dd3000	 ldrb        r3, [sp]
  00c00	e58d3008	 str         r3, [sp, #8]

; 213  : }

  00c04	e59d0008	 ldr         r0, [sp, #8]
  00c08	e28dd00c	 add         sp, sp, #0xC
  00c0c	e89d6000	 ldmia       sp, {sp, lr}
  00c10	e12fff1e	 bx          lr
  00c14		 |$LN10@GetWaterMa@2|
  00c14		 |$LN11@GetWaterMa@2|
  00c14	00000000	 DCD         |s_HighWaterPairs|
  00c18		 |$M37203|

			 ENDP  ; |?GetWaterMark@CBulPdd16550@@UAAKXZ|, CBulPdd16550::GetWaterMark


  00060			 AREA	 |.pdata|, PDATA
|$T37213| DCD	|$LN10@GetDivisor|
	DCD	0x40003604

  00000			 AREA	 |.rdata|, DATA, READONLY
|?s_LS_BaudPairs@?1??GetDivisorOfRate@CBulPdd16550@@UAAHKPAK@Z@4QBU__PAIRS@@B| DCD 0x32 ; `CBulPdd16550::GetDivisorOfRate'::`2'::s_LS_BaudPairs
	DCD	0x4800
	DCD	0x4b
	DCD	0x3000
	DCD	0x96
	DCD	0x1800
	DCD	0x12c
	DCD	0xc00
	DCD	0x258
	DCD	0x600
	DCD	0x4b0
	DCD	0x300
	DCD	0x708
	DCD	0x200
	DCD	0x960
	DCD	0x180
	DCD	0xe10
	DCD	0x100
	DCD	0x12c0
	DCD	0xc0
	DCD	0x1c20
	DCD	0x80
	DCD	0x2580
	DCD	0x60
	DCD	0x3200
	DCD	0x48
	DCD	0x3840
	DCD	0x40
	DCD	0x4b00
	DCD	0x30
	DCD	0x5a00
	DCD	0x28
	DCD	0x7080
	DCD	0x20
	DCD	0x9600
	DCD	0x18
	DCD	0xe100
	DCD	0x10
	DCD	0x1c200
	DCD	0x8
	DCD	0x38400
	DCD	0x4
	DCD	0xe1000
	DCD	0x1
; Function compile flags: /Odtp

  00c18			 AREA	 |.text|, CODE, ARM

  00c18		 |?GetDivisorOfRate@CBulPdd16550@@UAAHKPAK@Z| PROC ; CBulPdd16550::GetDivisorOfRate

; 215  : {

  00c18		 |$LN10@GetDivisor|
  00c18	e1a0c00d	 mov         r12, sp
  00c1c	e92d0007	 stmdb       sp!, {r0 - r2}
  00c20	e92d5000	 stmdb       sp!, {r12, lr}
  00c24	e24dd008	 sub         sp, sp, #8
  00c28		 |$M37210|

; 216  : static const
; 217  : PAIRS  s_LS_BaudPairs[] = {
; 218  :     {50,        18432},
; 219  :     {75,        12288},
; 220  :     {150,       6144},
; 221  :     {300,       3072},
; 222  :     {600,       1536},
; 223  :     {1200,      768},
; 224  :     {1800,      512},
; 225  :     {2400,      384},
; 226  :     {3600,      256},
; 227  :     {4800,      192},
; 228  :     {7200,      128},
; 229  :     {9600,      96},
; 230  :     {12800,     72},
; 231  :     {14400,     64},
; 232  :     {19200,     48},
; 233  :     {23040,     40},
; 234  :     {28800,     32},
; 235  :     {38400,     24},
; 236  :     {57600,     16},
; 237  :     {115200,    8},
; 238  :     {230400,    4},
; 239  :     {921600,    1}
; 240  : };
; 241  : 
; 242  : 
; 243  :     for (DWORD dwIndex =0 ; dwIndex <dim(s_LS_BaudPairs) && s_LS_BaudPairs[dwIndex].Key<=BaudRate; dwIndex ++) {

  00c28	e3a03000	 mov         r3, #0
  00c2c	e58d3000	 str         r3, [sp]
  00c30	ea000002	 b           |$LN5@GetDivisor|
  00c34		 |$LN4@GetDivisor|
  00c34	e59d3000	 ldr         r3, [sp]
  00c38	e2833001	 add         r3, r3, #1
  00c3c	e58d3000	 str         r3, [sp]
  00c40		 |$LN5@GetDivisor|
  00c40	e59d3000	 ldr         r3, [sp]
  00c44	e3530016	 cmp         r3, #0x16
  00c48	2a000021	 bcs         |$LN3@GetDivisor|
  00c4c	e59d1000	 ldr         r1, [sp]
  00c50	e3a03008	 mov         r3, #8
  00c54	e0020391	 mul         r2, r1, r3
  00c58	e59f308c	 ldr         r3, [pc, #0x8C]
  00c5c	e0833002	 add         r3, r3, r2
  00c60	e5932000	 ldr         r2, [r3]
  00c64	e59d3014	 ldr         r3, [sp, #0x14]
  00c68	e1520003	 cmp         r2, r3
  00c6c	8a000018	 bhi         |$LN3@GetDivisor|

; 244  :         if (s_LS_BaudPairs[dwIndex].Key== BaudRate){

  00c70	e59d1000	 ldr         r1, [sp]
  00c74	e3a03008	 mov         r3, #8
  00c78	e0020391	 mul         r2, r1, r3
  00c7c	e59f3068	 ldr         r3, [pc, #0x68]
  00c80	e0833002	 add         r3, r3, r2
  00c84	e5932000	 ldr         r2, [r3]
  00c88	e59d3014	 ldr         r3, [sp, #0x14]
  00c8c	e1520003	 cmp         r2, r3
  00c90	1a00000e	 bne         |$LN2@GetDivisor|

; 245  :             if (pulDivisor)

  00c94	e59d3018	 ldr         r3, [sp, #0x18]
  00c98	e3530000	 cmp         r3, #0
  00c9c	0a000008	 beq         |$LN1@GetDivisor|

; 246  :                 *pulDivisor = s_LS_BaudPairs[dwIndex].AssociatedValue;

  00ca0	e59d1000	 ldr         r1, [sp]
  00ca4	e3a03008	 mov         r3, #8
  00ca8	e0020391	 mul         r2, r1, r3
  00cac	e59f3038	 ldr         r3, [pc, #0x38]
  00cb0	e0833002	 add         r3, r3, r2
  00cb4	e2833004	 add         r3, r3, #4
  00cb8	e5932000	 ldr         r2, [r3]
  00cbc	e59d3018	 ldr         r3, [sp, #0x18]
  00cc0	e5832000	 str         r2, [r3]
  00cc4		 |$LN1@GetDivisor|

; 247  :             return TRUE;

  00cc4	e3a03001	 mov         r3, #1
  00cc8	e58d3004	 str         r3, [sp, #4]
  00ccc	ea000002	 b           |$LN6@GetDivisor|
  00cd0		 |$LN2@GetDivisor|

; 248  :         }
; 249  :     }

  00cd0	eaffffd7	 b           |$LN4@GetDivisor|
  00cd4		 |$LN3@GetDivisor|

; 250  :     return FALSE;    

  00cd4	e3a03000	 mov         r3, #0
  00cd8	e58d3004	 str         r3, [sp, #4]
  00cdc		 |$LN6@GetDivisor|

; 251  : }

  00cdc	e59d0004	 ldr         r0, [sp, #4]
  00ce0	e28dd008	 add         sp, sp, #8
  00ce4	e89d6000	 ldmia       sp, {sp, lr}
  00ce8	e12fff1e	 bx          lr
  00cec		 |$LN11@GetDivisor|
  00cec		 |$LN12@GetDivisor|
  00cec	00000000	 DCD         |?s_LS_BaudPairs@?1??GetDivisorOfRate@CBulPdd16550@@UAAHKPAK@Z@4QBU__PAIRS@@B|
  00cf0		 |$M37211|

			 ENDP  ; |?GetDivisorOfRate@CBulPdd16550@@UAAHKPAK@Z|, CBulPdd16550::GetDivisorOfRate

	EXPORT	|?Enable_IR_Rx_Tx@CBulPdd16550@@IAAHHH@Z| ; CBulPdd16550::Enable_IR_Rx_Tx

  00068			 AREA	 |.pdata|, PDATA
|$T37225| DCD	|$LN12@Enable_IR_|
	DCD	0x40009c04
; Function compile flags: /Odtp

  00cf0			 AREA	 |.text|, CODE, ARM

  00cf0		 |?Enable_IR_Rx_Tx@CBulPdd16550@@IAAHHH@Z| PROC ; CBulPdd16550::Enable_IR_Rx_Tx

; 254  : {

  00cf0		 |$LN12@Enable_IR_|
  00cf0	e1a0c00d	 mov         r12, sp
  00cf4	e92d0007	 stmdb       sp!, {r0 - r2}
  00cf8	e92d5000	 stmdb       sp!, {r12, lr}
  00cfc	e24dd04c	 sub         sp, sp, #0x4C
  00d00		 |$M37222|

; 255  :     if (m_fIRConnected) {

  00d00	e59d3054	 ldr         r3, [sp, #0x54]
  00d04	e2833f55	 add         r3, r3, #0x55, 30
  00d08	e5933000	 ldr         r3, [r3]
  00d0c	e3530000	 cmp         r3, #0
  00d10	0a00008c	 beq         |$LN3@Enable_IR_|

; 256  :         BYTE irdasel=0;

  00d14	e3a03000	 mov         r3, #0
  00d18	e5cd3000	 strb        r3, [sp]

; 257  :         //Enable/Disable IR receiver/transmitter (decoder/encoder) mask
; 258  :         irdasel |= (Rxenable?INFRARED_ISR_RECEIVE_SIR_ENABLE:0 );

  00d1c	e59d3058	 ldr         r3, [sp, #0x58]
  00d20	e3530000	 cmp         r3, #0
  00d24	0a000002	 beq         |$LN6@Enable_IR_|
  00d28	e3a03002	 mov         r3, #2
  00d2c	e58d3008	 str         r3, [sp, #8]
  00d30	ea000001	 b           |$LN7@Enable_IR_|
  00d34		 |$LN6@Enable_IR_|
  00d34	e3a03000	 mov         r3, #0
  00d38	e58d3008	 str         r3, [sp, #8]
  00d3c		 |$LN7@Enable_IR_|
  00d3c	e5dd3000	 ldrb        r3, [sp]
  00d40	e1a02003	 mov         r2, r3
  00d44	e59d3008	 ldr         r3, [sp, #8]
  00d48	e1823003	 orr         r3, r2, r3
  00d4c	e20330ff	 and         r3, r3, #0xFF
  00d50	e5cd3000	 strb        r3, [sp]

; 259  :         irdasel |= (Txenable?INFRARED_ISR_TRANSMIT_SIR_ENABLE:0);

  00d54	e59d305c	 ldr         r3, [sp, #0x5C]
  00d58	e3530000	 cmp         r3, #0
  00d5c	0a000002	 beq         |$LN8@Enable_IR_|
  00d60	e3a03001	 mov         r3, #1
  00d64	e58d300c	 str         r3, [sp, #0xC]
  00d68	ea000001	 b           |$LN9@Enable_IR_|
  00d6c		 |$LN8@Enable_IR_|
  00d6c	e3a03000	 mov         r3, #0
  00d70	e58d300c	 str         r3, [sp, #0xC]
  00d74		 |$LN9@Enable_IR_|
  00d74	e5dd3000	 ldrb        r3, [sp]
  00d78	e1a02003	 mov         r2, r3
  00d7c	e59d300c	 ldr         r3, [sp, #0xC]
  00d80	e1823003	 orr         r3, r2, r3
  00d84	e20330ff	 and         r3, r3, #0xFF
  00d88	e5cd3000	 strb        r3, [sp]

; 260  :         m_HardwareLock.Lock();        

  00d8c	e59d3054	 ldr         r3, [sp, #0x54]
  00d90	e2830060	 add         r0, r3, #0x60
  00d94	eb000000	 bl          |?Lock@CLockObject@@QAAXXZ|

; 261  :         if ((GetRegister()->Read_SIR()&(INFRARED_ISR_RECEIVE_SIR_ENABLE | INFRARED_ISR_TRANSMIT_SIR_ENABLE))!= irdasel) {

  00d98	e59d0054	 ldr         r0, [sp, #0x54]
  00d9c	eb000000	 bl          |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ|
  00da0	e58d0010	 str         r0, [sp, #0x10]
  00da4	e59d3010	 ldr         r3, [sp, #0x10]
  00da8	e58d3014	 str         r3, [sp, #0x14]
  00dac	e59d3014	 ldr         r3, [sp, #0x14]
  00db0	e5933000	 ldr         r3, [r3]
  00db4	e2833060	 add         r3, r3, #0x60
  00db8	e59d0014	 ldr         r0, [sp, #0x14]
  00dbc	e5933000	 ldr         r3, [r3]
  00dc0	e1a0e00f	 mov         lr, pc
  00dc4	e12fff13	 bx          r3
  00dc8	e5cd0018	 strb        r0, [sp, #0x18]
  00dcc	e5dd3018	 ldrb        r3, [sp, #0x18]
  00dd0	e2032003	 and         r2, r3, #3
  00dd4	e5dd3000	 ldrb        r3, [sp]
  00dd8	e1520003	 cmp         r2, r3
  00ddc	0a000052	 beq         |$LN2@Enable_IR_|

; 262  :             //Disable UART In order to make the changes.
; 263  :             BYTE bIER = GetRegister()->Read_IER();

  00de0	e59d0054	 ldr         r0, [sp, #0x54]
  00de4	eb000000	 bl          |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ|
  00de8	e58d001c	 str         r0, [sp, #0x1C]
  00dec	e59d301c	 ldr         r3, [sp, #0x1C]
  00df0	e58d3020	 str         r3, [sp, #0x20]
  00df4	e59d3020	 ldr         r3, [sp, #0x20]
  00df8	e5933000	 ldr         r3, [r3]
  00dfc	e2833014	 add         r3, r3, #0x14
  00e00	e59d0020	 ldr         r0, [sp, #0x20]
  00e04	e5933000	 ldr         r3, [r3]
  00e08	e1a0e00f	 mov         lr, pc
  00e0c	e12fff13	 bx          r3
  00e10	e5cd0024	 strb        r0, [sp, #0x24]
  00e14	e5dd3024	 ldrb        r3, [sp, #0x24]
  00e18	e5cd3001	 strb        r3, [sp, #1]

; 264  :             GetRegister()->Write_IER( bIER & ~BUL_SERIAL_IER_UUE);

  00e1c	e59d0054	 ldr         r0, [sp, #0x54]
  00e20	eb000000	 bl          |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ|
  00e24	e58d0028	 str         r0, [sp, #0x28]
  00e28	e59d3028	 ldr         r3, [sp, #0x28]
  00e2c	e58d302c	 str         r3, [sp, #0x2C]
  00e30	e5dd3001	 ldrb        r3, [sp, #1]
  00e34	e1a02003	 mov         r2, r3
  00e38	e3e03040	 mvn         r3, #0x40
  00e3c	e0023003	 and         r3, r2, r3
  00e40	e20310ff	 and         r1, r3, #0xFF
  00e44	e59d002c	 ldr         r0, [sp, #0x2C]
  00e48	e59d302c	 ldr         r3, [sp, #0x2C]
  00e4c	e5933000	 ldr         r3, [r3]
  00e50	e2833010	 add         r3, r3, #0x10
  00e54	e5933000	 ldr         r3, [r3]
  00e58	e1a0e00f	 mov         lr, pc
  00e5c	e12fff13	 bx          r3

; 265  :             BYTE bIrStatus = GetRegister()->Read_SIR() & ~(INFRARED_ISR_RECEIVE_SIR_ENABLE|INFRARED_ISR_TRANSMIT_SIR_ENABLE);

  00e60	e59d0054	 ldr         r0, [sp, #0x54]
  00e64	eb000000	 bl          |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ|
  00e68	e58d0030	 str         r0, [sp, #0x30]
  00e6c	e59d3030	 ldr         r3, [sp, #0x30]
  00e70	e58d3034	 str         r3, [sp, #0x34]
  00e74	e59d3034	 ldr         r3, [sp, #0x34]
  00e78	e5933000	 ldr         r3, [r3]
  00e7c	e2833060	 add         r3, r3, #0x60
  00e80	e59d0034	 ldr         r0, [sp, #0x34]
  00e84	e5933000	 ldr         r3, [r3]
  00e88	e1a0e00f	 mov         lr, pc
  00e8c	e12fff13	 bx          r3
  00e90	e5cd0038	 strb        r0, [sp, #0x38]
  00e94	e5dd3038	 ldrb        r3, [sp, #0x38]
  00e98	e1a02003	 mov         r2, r3
  00e9c	e3e03003	 mvn         r3, #3
  00ea0	e0023003	 and         r3, r2, r3
  00ea4	e20330ff	 and         r3, r3, #0xFF
  00ea8	e5cd3002	 strb        r3, [sp, #2]

; 266  :             bIrStatus |= irdasel;

  00eac	e5dd3000	 ldrb        r3, [sp]
  00eb0	e1a02003	 mov         r2, r3
  00eb4	e5dd3002	 ldrb        r3, [sp, #2]
  00eb8	e1833002	 orr         r3, r3, r2
  00ebc	e20330ff	 and         r3, r3, #0xFF
  00ec0	e5cd3002	 strb        r3, [sp, #2]

; 267  :             GetRegister()->Write_SIR(bIrStatus);

  00ec4	e59d0054	 ldr         r0, [sp, #0x54]
  00ec8	eb000000	 bl          |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ|
  00ecc	e58d003c	 str         r0, [sp, #0x3C]
  00ed0	e59d303c	 ldr         r3, [sp, #0x3C]
  00ed4	e58d3040	 str         r3, [sp, #0x40]
  00ed8	e5dd1002	 ldrb        r1, [sp, #2]
  00edc	e59d0040	 ldr         r0, [sp, #0x40]
  00ee0	e59d3040	 ldr         r3, [sp, #0x40]
  00ee4	e5933000	 ldr         r3, [r3]
  00ee8	e283305c	 add         r3, r3, #0x5C
  00eec	e5933000	 ldr         r3, [r3]
  00ef0	e1a0e00f	 mov         lr, pc
  00ef4	e12fff13	 bx          r3

; 268  :             GetRegister()->Write_IER(bIER);

  00ef8	e59d0054	 ldr         r0, [sp, #0x54]
  00efc	eb000000	 bl          |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ|
  00f00	e58d0044	 str         r0, [sp, #0x44]
  00f04	e59d3044	 ldr         r3, [sp, #0x44]
  00f08	e58d3048	 str         r3, [sp, #0x48]
  00f0c	e5dd1001	 ldrb        r1, [sp, #1]
  00f10	e59d0048	 ldr         r0, [sp, #0x48]
  00f14	e59d3048	 ldr         r3, [sp, #0x48]
  00f18	e5933000	 ldr         r3, [r3]
  00f1c	e2833010	 add         r3, r3, #0x10
  00f20	e5933000	 ldr         r3, [r3]
  00f24	e1a0e00f	 mov         lr, pc
  00f28	e12fff13	 bx          r3
  00f2c		 |$LN2@Enable_IR_|

; 269  :         }
; 270  :         m_HardwareLock.Unlock();

  00f2c	e59d3054	 ldr         r3, [sp, #0x54]
  00f30	e2830060	 add         r0, r3, #0x60
  00f34	eb000000	 bl          |?Unlock@CLockObject@@QAAXXZ|

; 271  :         return TRUE;

  00f38	e3a03001	 mov         r3, #1
  00f3c	e58d3004	 str         r3, [sp, #4]
  00f40	ea000002	 b           |$LN4@Enable_IR_|

; 272  :     }
; 273  :     else

  00f44	ea000001	 b           |$LN1@Enable_IR_|
  00f48		 |$LN3@Enable_IR_|

; 274  :         return TRUE;

  00f48	e3a03001	 mov         r3, #1
  00f4c	e58d3004	 str         r3, [sp, #4]
  00f50		 |$LN1@Enable_IR_|
  00f50		 |$LN4@Enable_IR_|

; 275  :     //Restore to original value of IER including Uart Unit setting
; 276  : }

  00f50	e59d0004	 ldr         r0, [sp, #4]
  00f54	e28dd04c	 add         sp, sp, #0x4C
  00f58	e89d6000	 ldmia       sp, {sp, lr}
  00f5c	e12fff1e	 bx          lr
  00f60		 |$M37223|

			 ENDP  ; |?Enable_IR_Rx_Tx@CBulPdd16550@@IAAHHH@Z|, CBulPdd16550::Enable_IR_Rx_Tx


  00070			 AREA	 |.pdata|, PDATA
|$T37231| DCD	|$LN7@InitIR|
	DCD	0x40007d04
; Function compile flags: /Odtp

  00f60			 AREA	 |.text|, CODE, ARM

  00f60		 |?InitIR@CBulPdd16550@@UAAHH@Z| PROC	; CBulPdd16550::InitIR

; 278  : {

  00f60		 |$LN7@InitIR|
  00f60	e1a0c00d	 mov         r12, sp
  00f64	e92d0003	 stmdb       sp!, {r0, r1}
  00f68	e92d5000	 stmdb       sp!, {r12, lr}
  00f6c	e24dd040	 sub         sp, sp, #0x40
  00f70		 |$M37228|

; 279  :     //Updating our copy of IER before disabling UART
; 280  :     m_HardwareLock.Lock();        

  00f70	e59d3048	 ldr         r3, [sp, #0x48]
  00f74	e2830060	 add         r0, r3, #0x60
  00f78	eb000000	 bl          |?Lock@CLockObject@@QAAXXZ|

; 281  :     BYTE bIER = GetRegister()->Read_IER();

  00f7c	e59d0048	 ldr         r0, [sp, #0x48]
  00f80	eb000000	 bl          |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ|
  00f84	e58d0008	 str         r0, [sp, #8]
  00f88	e59d3008	 ldr         r3, [sp, #8]
  00f8c	e58d300c	 str         r3, [sp, #0xC]
  00f90	e59d300c	 ldr         r3, [sp, #0xC]
  00f94	e5933000	 ldr         r3, [r3]
  00f98	e2833014	 add         r3, r3, #0x14
  00f9c	e59d000c	 ldr         r0, [sp, #0xC]
  00fa0	e5933000	 ldr         r3, [r3]
  00fa4	e1a0e00f	 mov         lr, pc
  00fa8	e12fff13	 bx          r3
  00fac	e5cd0010	 strb        r0, [sp, #0x10]
  00fb0	e5dd3010	 ldrb        r3, [sp, #0x10]
  00fb4	e5cd3000	 strb        r3, [sp]

; 282  : 
; 283  :     //Disable the UART for sure
; 284  :     GetRegister()->Write_IER(bIER & ~BUL_SERIAL_IER_UUE);

  00fb8	e59d0048	 ldr         r0, [sp, #0x48]
  00fbc	eb000000	 bl          |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ|
  00fc0	e58d0014	 str         r0, [sp, #0x14]
  00fc4	e59d3014	 ldr         r3, [sp, #0x14]
  00fc8	e58d3018	 str         r3, [sp, #0x18]
  00fcc	e5dd3000	 ldrb        r3, [sp]
  00fd0	e1a02003	 mov         r2, r3
  00fd4	e3e03040	 mvn         r3, #0x40
  00fd8	e0023003	 and         r3, r2, r3
  00fdc	e20310ff	 and         r1, r3, #0xFF
  00fe0	e59d0018	 ldr         r0, [sp, #0x18]
  00fe4	e59d3018	 ldr         r3, [sp, #0x18]
  00fe8	e5933000	 ldr         r3, [r3]
  00fec	e2833010	 add         r3, r3, #0x10
  00ff0	e5933000	 ldr         r3, [r3]
  00ff4	e1a0e00f	 mov         lr, pc
  00ff8	e12fff13	 bx          r3

; 285  :     if (m_fIRConnected && bSet) {

  00ffc	e59d3048	 ldr         r3, [sp, #0x48]
  01000	e2833f55	 add         r3, r3, #0x55, 30
  01004	e5933000	 ldr         r3, [r3]
  01008	e3530000	 cmp         r3, #0
  0100c	0a00002b	 beq         |$LN2@InitIR|
  01010	e59d304c	 ldr         r3, [sp, #0x4C]
  01014	e3530000	 cmp         r3, #0
  01018	0a000028	 beq         |$LN2@InitIR|

; 286  :         //Updating our copy of pIRDASEL before enabling/disabling IR
; 287  :         BYTE uIRSel = GetRegister()->Read_SIR() & ~INFRARED_ISR_TX_DATA_POLARITY;

  0101c	e59d0048	 ldr         r0, [sp, #0x48]
  01020	eb000000	 bl          |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ|
  01024	e58d001c	 str         r0, [sp, #0x1C]
  01028	e59d301c	 ldr         r3, [sp, #0x1C]
  0102c	e58d3020	 str         r3, [sp, #0x20]
  01030	e59d3020	 ldr         r3, [sp, #0x20]
  01034	e5933000	 ldr         r3, [r3]
  01038	e2833060	 add         r3, r3, #0x60
  0103c	e59d0020	 ldr         r0, [sp, #0x20]
  01040	e5933000	 ldr         r3, [r3]
  01044	e1a0e00f	 mov         lr, pc
  01048	e12fff13	 bx          r3
  0104c	e5cd0024	 strb        r0, [sp, #0x24]
  01050	e5dd3024	 ldrb        r3, [sp, #0x24]
  01054	e1a02003	 mov         r2, r3
  01058	e3e03008	 mvn         r3, #8
  0105c	e0023003	 and         r3, r2, r3
  01060	e20330ff	 and         r3, r3, #0xFF
  01064	e5cd3001	 strb        r3, [sp, #1]

; 288  :         uIRSel |=  (INFRARED_ISR_XMODE| INFRARED_ISR_RX_DATA_POLARITY);

  01068	e5dd3001	 ldrb        r3, [sp, #1]
  0106c	e3833014	 orr         r3, r3, #0x14
  01070	e20330ff	 and         r3, r3, #0xFF
  01074	e5cd3001	 strb        r3, [sp, #1]

; 289  :         GetRegister()->Write_SIR( uIRSel );

  01078	e59d0048	 ldr         r0, [sp, #0x48]
  0107c	eb000000	 bl          |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ|
  01080	e58d0028	 str         r0, [sp, #0x28]
  01084	e59d3028	 ldr         r3, [sp, #0x28]
  01088	e58d302c	 str         r3, [sp, #0x2C]
  0108c	e5dd1001	 ldrb        r1, [sp, #1]
  01090	e59d002c	 ldr         r0, [sp, #0x2C]
  01094	e59d302c	 ldr         r3, [sp, #0x2C]
  01098	e5933000	 ldr         r3, [r3]
  0109c	e283305c	 add         r3, r3, #0x5C
  010a0	e5933000	 ldr         r3, [r3]
  010a4	e1a0e00f	 mov         lr, pc
  010a8	e12fff13	 bx          r3

; 290  :         Enable_IR_Rx_Tx( TRUE, FALSE);

  010ac	e3a02000	 mov         r2, #0
  010b0	e3a01001	 mov         r1, #1
  010b4	e59d0048	 ldr         r0, [sp, #0x48]
  010b8	eb000000	 bl          |?Enable_IR_Rx_Tx@CBulPdd16550@@IAAHHH@Z|

; 291  : 
; 292  :     }
; 293  :     else {

  010bc	ea00000c	 b           |$LN1@InitIR|
  010c0		 |$LN2@InitIR|

; 294  :         GetRegister()->Write_SIR(0);

  010c0	e59d0048	 ldr         r0, [sp, #0x48]
  010c4	eb000000	 bl          |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ|
  010c8	e58d0030	 str         r0, [sp, #0x30]
  010cc	e59d3030	 ldr         r3, [sp, #0x30]
  010d0	e58d3034	 str         r3, [sp, #0x34]
  010d4	e3a01000	 mov         r1, #0
  010d8	e59d0034	 ldr         r0, [sp, #0x34]
  010dc	e59d3034	 ldr         r3, [sp, #0x34]
  010e0	e5933000	 ldr         r3, [r3]
  010e4	e283305c	 add         r3, r3, #0x5C
  010e8	e5933000	 ldr         r3, [r3]
  010ec	e1a0e00f	 mov         lr, pc
  010f0	e12fff13	 bx          r3
  010f4		 |$LN1@InitIR|

; 295  :     }
; 296  : 
; 297  :     //Restoring to the original IER (including UART unit state).
; 298  :     GetRegister()->Write_IER(bIER);

  010f4	e59d0048	 ldr         r0, [sp, #0x48]
  010f8	eb000000	 bl          |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ|
  010fc	e58d0038	 str         r0, [sp, #0x38]
  01100	e59d3038	 ldr         r3, [sp, #0x38]
  01104	e58d303c	 str         r3, [sp, #0x3C]
  01108	e5dd1000	 ldrb        r1, [sp]
  0110c	e59d003c	 ldr         r0, [sp, #0x3C]
  01110	e59d303c	 ldr         r3, [sp, #0x3C]
  01114	e5933000	 ldr         r3, [r3]
  01118	e2833010	 add         r3, r3, #0x10
  0111c	e5933000	 ldr         r3, [r3]
  01120	e1a0e00f	 mov         lr, pc
  01124	e12fff13	 bx          r3

; 299  :     m_HardwareLock.Unlock();

  01128	e59d3048	 ldr         r3, [sp, #0x48]
  0112c	e2830060	 add         r0, r3, #0x60
  01130	eb000000	 bl          |?Unlock@CLockObject@@QAAXXZ|

; 300  :     return m_fIRConnected;

  01134	e59d3048	 ldr         r3, [sp, #0x48]
  01138	e2833f55	 add         r3, r3, #0x55, 30
  0113c	e5933000	 ldr         r3, [r3]
  01140	e58d3004	 str         r3, [sp, #4]

; 301  :     
; 302  : }

  01144	e59d0004	 ldr         r0, [sp, #4]
  01148	e28dd040	 add         sp, sp, #0x40
  0114c	e89d6000	 ldmia       sp, {sp, lr}
  01150	e12fff1e	 bx          lr
  01154		 |$M37229|

			 ENDP  ; |?InitIR@CBulPdd16550@@UAAHH@Z|, CBulPdd16550::InitIR

	EXPORT	|?SetOutputMode@CSerialPDD@@UAAXHH@Z|	; CSerialPDD::SetOutputMode

  00078			 AREA	 |.pdata|, PDATA
|$T37236| DCD	|$LN7@SetOutputM|
	DCD	0x40002303
; Function compile flags: /Odtp

  01154			 AREA	 |.text|, CODE, ARM

  01154		 |?SetOutputMode@CBulPdd16550@@UAAXHH@Z| PROC ; CBulPdd16550::SetOutputMode

; 304  : {

  01154		 |$LN7@SetOutputM|
  01154	e1a0c00d	 mov         r12, sp
  01158	e92d0007	 stmdb       sp!, {r0 - r2}
  0115c	e92d5000	 stmdb       sp!, {r12, lr}
  01160		 |$M37233|

; 305  :     CPdd16550::SetOutputMode(fUseIR,fUse9Pin);

  01160	e59d2010	 ldr         r2, [sp, #0x10]
  01164	e59d100c	 ldr         r1, [sp, #0xC]
  01168	e59d0008	 ldr         r0, [sp, #8]
  0116c	eb000000	 bl          |?SetOutputMode@CSerialPDD@@UAAXHH@Z|

; 306  :     if (m_fIREnable) {

  01170	e59d3008	 ldr         r3, [sp, #8]
  01174	e28330ec	 add         r3, r3, #0xEC
  01178	e5933000	 ldr         r3, [r3]
  0117c	e3530000	 cmp         r3, #0
  01180	0a00000c	 beq         |$LN2@SetOutputM|

; 307  :         InitIR(TRUE);

  01184	e3a01001	 mov         r1, #1
  01188	e59d3008	 ldr         r3, [sp, #8]
  0118c	e5933000	 ldr         r3, [r3]
  01190	e28330e4	 add         r3, r3, #0xE4
  01194	e59d0008	 ldr         r0, [sp, #8]
  01198	e5933000	 ldr         r3, [r3]
  0119c	e1a0e00f	 mov         lr, pc
  011a0	e12fff13	 bx          r3

; 308  :         Enable_IR_Rx_Tx(TRUE,FALSE);

  011a4	e3a02000	 mov         r2, #0
  011a8	e3a01001	 mov         r1, #1
  011ac	e59d0008	 ldr         r0, [sp, #8]
  011b0	eb000000	 bl          |?Enable_IR_Rx_Tx@CBulPdd16550@@IAAHHH@Z|

; 309  :     }
; 310  :     else

  011b4	ea000007	 b           |$LN1@SetOutputM|
  011b8		 |$LN2@SetOutputM|

; 311  :         InitIR(FALSE);

  011b8	e3a01000	 mov         r1, #0
  011bc	e59d3008	 ldr         r3, [sp, #8]
  011c0	e5933000	 ldr         r3, [r3]
  011c4	e28330e4	 add         r3, r3, #0xE4
  011c8	e59d0008	 ldr         r0, [sp, #8]
  011cc	e5933000	 ldr         r3, [r3]
  011d0	e1a0e00f	 mov         lr, pc
  011d4	e12fff13	 bx          r3
  011d8		 |$LN1@SetOutputM|

; 312  : }

  011d8	e89d6000	 ldmia       sp, {sp, lr}
  011dc	e12fff1e	 bx          lr
  011e0		 |$M37234|

			 ENDP  ; |?SetOutputMode@CBulPdd16550@@UAAXHH@Z|, CBulPdd16550::SetOutputMode

; File c:\wince600\public\common\oak\inc\cserpdd.h

  00000			 AREA	 |.pdata|, PDATA
|$T37241| DCD	|$LN5@SetOutputM@2|
	DCD	0x40000d03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetOutputMode@CSerialPDD@@UAAXHH@Z| PROC ; CSerialPDD::SetOutputMode

; 169  :     virtual void    SetOutputMode(BOOL UseIR, BOOL Use9Pin) {   

  00000		 |$LN5@SetOutputM@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37238|

; 170  :         m_fIREnable = UseIR;

  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e28320ec	 add         r2, r3, #0xEC
  00014	e59d300c	 ldr         r3, [sp, #0xC]
  00018	e5823000	 str         r3, [r2]

; 171  :         m_f9PinEnable=Use9Pin;

  0001c	e59d3008	 ldr         r3, [sp, #8]
  00020	e28320f0	 add         r2, r3, #0xF0
  00024	e59d3010	 ldr         r3, [sp, #0x10]
  00028	e5823000	 str         r3, [r2]

; 172  :     }

  0002c	e89d6000	 ldmia       sp, {sp, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$M37239|

			 ENDP  ; |?SetOutputMode@CSerialPDD@@UAAXHH@Z|, CSerialPDD::SetOutputMode


  00080			 AREA	 |.pdata|, PDATA
|$T37253| DCD	|$LN12@GetWriteab|
	DCD	0x40003a04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\serial\bul16550.cpp

  011e0			 AREA	 |.text|, CODE, ARM

  011e0		 |?GetWriteableSize@CBulPdd16550@@UAAKXZ| PROC ; CBulPdd16550::GetWriteableSize

; 314  : {

  011e0		 |$LN12@GetWriteab|
  011e0	e1a0c00d	 mov         r12, sp
  011e4	e92d0001	 stmdb       sp!, {r0}
  011e8	e92d5000	 stmdb       sp!, {r12, lr}
  011ec	e24dd020	 sub         sp, sp, #0x20
  011f0		 |$M37250|

; 315  :     BYTE bLSR = GetRegister()->Read_LSR( );

  011f0	e59d0028	 ldr         r0, [sp, #0x28]
  011f4	eb000000	 bl          |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ|
  011f8	e58d000c	 str         r0, [sp, #0xC]
  011fc	e59d300c	 ldr         r3, [sp, #0xC]
  01200	e58d3010	 str         r3, [sp, #0x10]
  01204	e59d3010	 ldr         r3, [sp, #0x10]
  01208	e5933000	 ldr         r3, [r3]
  0120c	e2833038	 add         r3, r3, #0x38
  01210	e59d0010	 ldr         r0, [sp, #0x10]
  01214	e5933000	 ldr         r3, [r3]
  01218	e1a0e00f	 mov         lr, pc
  0121c	e12fff13	 bx          r3
  01220	e5cd0014	 strb        r0, [sp, #0x14]
  01224	e5dd3014	 ldrb        r3, [sp, #0x14]
  01228	e5cd3000	 strb        r3, [sp]

; 316  :     DWORD dwByteCanWrite = 0;

  0122c	e3a03000	 mov         r3, #0
  01230	e58d3004	 str         r3, [sp, #4]

; 317  :     if (bLSR & SERIAL_LSR_TEMT) {

  01234	e5dd3000	 ldrb        r3, [sp]
  01238	e3130040	 tst         r3, #0x40
  0123c	0a00000c	 beq         |$LN3@GetWriteab|

; 318  :         dwByteCanWrite = (m_XmitFifoEnable?BUL_SERIAL_FIFO_DEPTH:1);

  01240	e59d3028	 ldr         r3, [sp, #0x28]
  01244	e2833f45	 add         r3, r3, #0x45, 30
  01248	e5933000	 ldr         r3, [r3]
  0124c	e3530000	 cmp         r3, #0
  01250	0a000002	 beq         |$LN6@GetWriteab|
  01254	e3a03040	 mov         r3, #0x40
  01258	e58d3018	 str         r3, [sp, #0x18]
  0125c	ea000001	 b           |$LN7@GetWriteab|
  01260		 |$LN6@GetWriteab|
  01260	e3a03001	 mov         r3, #1
  01264	e58d3018	 str         r3, [sp, #0x18]
  01268		 |$LN7@GetWriteab|
  01268	e59d3018	 ldr         r3, [sp, #0x18]
  0126c	e58d3004	 str         r3, [sp, #4]

; 319  :     }
; 320  :     else 

  01270	ea00000e	 b           |$LN2@GetWriteab|
  01274		 |$LN3@GetWriteab|

; 321  :     if (bLSR & SERIAL_LSR_THRE) {

  01274	e5dd3000	 ldrb        r3, [sp]
  01278	e3130020	 tst         r3, #0x20
  0127c	0a00000b	 beq         |$LN1@GetWriteab|

; 322  :         dwByteCanWrite = (m_XmitFifoEnable?(BUL_SERIAL_FIFO_DEPTH/2):1);

  01280	e59d3028	 ldr         r3, [sp, #0x28]
  01284	e2833f45	 add         r3, r3, #0x45, 30
  01288	e5933000	 ldr         r3, [r3]
  0128c	e3530000	 cmp         r3, #0
  01290	0a000002	 beq         |$LN8@GetWriteab|
  01294	e3a03020	 mov         r3, #0x20
  01298	e58d301c	 str         r3, [sp, #0x1C]
  0129c	ea000001	 b           |$LN9@GetWriteab|
  012a0		 |$LN8@GetWriteab|
  012a0	e3a03001	 mov         r3, #1
  012a4	e58d301c	 str         r3, [sp, #0x1C]
  012a8		 |$LN9@GetWriteab|
  012a8	e59d301c	 ldr         r3, [sp, #0x1C]
  012ac	e58d3004	 str         r3, [sp, #4]
  012b0		 |$LN1@GetWriteab|
  012b0		 |$LN2@GetWriteab|

; 323  :     }
; 324  :     return dwByteCanWrite;

  012b0	e59d3004	 ldr         r3, [sp, #4]
  012b4	e58d3008	 str         r3, [sp, #8]

; 325  : }

  012b8	e59d0008	 ldr         r0, [sp, #8]
  012bc	e28dd020	 add         sp, sp, #0x20
  012c0	e89d6000	 ldmia       sp, {sp, lr}
  012c4	e12fff1e	 bx          lr
  012c8		 |$M37251|

			 ENDP  ; |?GetWriteableSize@CBulPdd16550@@UAAKXZ|, CBulPdd16550::GetWriteableSize

	IMPORT	|?EnableXmitInterrupt@CPdd16550@@UAAHH@Z| ; CPdd16550::EnableXmitInterrupt

  00088			 AREA	 |.pdata|, PDATA
|$T37261| DCD	|$LN8@EnableXmit|
	DCD	0x40001f04
; Function compile flags: /Odtp

  012c8			 AREA	 |.text|, CODE, ARM

  012c8		 |?EnableXmitInterrupt@CBulPdd16550@@UAAHH@Z| PROC ; CBulPdd16550::EnableXmitInterrupt

; 327  : {

  012c8		 |$LN8@EnableXmit|
  012c8	e1a0c00d	 mov         r12, sp
  012cc	e92d0003	 stmdb       sp!, {r0, r1}
  012d0	e92d5000	 stmdb       sp!, {r12, lr}
  012d4	e24dd00c	 sub         sp, sp, #0xC
  012d8		 |$M37258|

; 328  :     if (m_fIREnable) {

  012d8	e59d3014	 ldr         r3, [sp, #0x14]
  012dc	e28330ec	 add         r3, r3, #0xEC
  012e0	e5933000	 ldr         r3, [r3]
  012e4	e3530000	 cmp         r3, #0
  012e8	0a00000b	 beq         |$LN1@EnableXmit|

; 329  :         Enable_IR_Rx_Tx(!fEnable,fEnable);

  012ec	e59d3018	 ldr         r3, [sp, #0x18]
  012f0	e3530000	 cmp         r3, #0
  012f4	1a000002	 bne         |$LN4@EnableXmit|
  012f8	e3a03001	 mov         r3, #1
  012fc	e58d3004	 str         r3, [sp, #4]
  01300	ea000001	 b           |$LN5@EnableXmit|
  01304		 |$LN4@EnableXmit|
  01304	e3a03000	 mov         r3, #0
  01308	e58d3004	 str         r3, [sp, #4]
  0130c		 |$LN5@EnableXmit|
  0130c	e59d2018	 ldr         r2, [sp, #0x18]
  01310	e59d1004	 ldr         r1, [sp, #4]
  01314	e59d0014	 ldr         r0, [sp, #0x14]
  01318	eb000000	 bl          |?Enable_IR_Rx_Tx@CBulPdd16550@@IAAHHH@Z|
  0131c		 |$LN1@EnableXmit|

; 330  :     }
; 331  :     return CPdd16550::EnableXmitInterrupt(fEnable);

  0131c	e59d1018	 ldr         r1, [sp, #0x18]
  01320	e59d0014	 ldr         r0, [sp, #0x14]
  01324	eb000000	 bl          |?EnableXmitInterrupt@CPdd16550@@UAAHH@Z|
  01328	e58d0008	 str         r0, [sp, #8]
  0132c	e59d3008	 ldr         r3, [sp, #8]
  01330	e58d3000	 str         r3, [sp]

; 332  : }

  01334	e59d0000	 ldr         r0, [sp]
  01338	e28dd00c	 add         sp, sp, #0xC
  0133c	e89d6000	 ldmia       sp, {sp, lr}
  01340	e12fff1e	 bx          lr
  01344		 |$M37259|

			 ENDP  ; |?EnableXmitInterrupt@CBulPdd16550@@UAAHH@Z|, CBulPdd16550::EnableXmitInterrupt

	IMPORT	|?XmitInterruptHandler@CPdd16550@@UAAXPAEPAK@Z| ; CPdd16550::XmitInterruptHandler
	IMPORT	|Sleep|

  00090			 AREA	 |.pdata|, PDATA
|$T37266| DCD	|$LN15@XmitInterr|
	DCD	0x40004b04
; Function compile flags: /Odtp

  01344			 AREA	 |.text|, CODE, ARM

  01344		 |?XmitInterruptHandler@CBulPdd16550@@UAAXPAEPAK@Z| PROC ; CBulPdd16550::XmitInterruptHandler

; 334  : {

  01344		 |$LN15@XmitInterr|
  01344	e1a0c00d	 mov         r12, sp
  01348	e92d0007	 stmdb       sp!, {r0 - r2}
  0134c	e92d5000	 stmdb       sp!, {r12, lr}
  01350	e24dd010	 sub         sp, sp, #0x10
  01354		 |$M37263|

; 335  :     if (!(pTxBuffer!=NULL && pBuffLen!=NULL && *pBuffLen!=NULL)) { // Transfer End.

  01354	e59d301c	 ldr         r3, [sp, #0x1C]
  01358	e3530000	 cmp         r3, #0
  0135c	0a000006	 beq         |$LN9@XmitInterr|
  01360	e59d3020	 ldr         r3, [sp, #0x20]
  01364	e3530000	 cmp         r3, #0
  01368	0a000003	 beq         |$LN9@XmitInterr|
  0136c	e59d3020	 ldr         r3, [sp, #0x20]
  01370	e5933000	 ldr         r3, [r3]
  01374	e3530000	 cmp         r3, #0
  01378	1a00001d	 bne         |$LN10@XmitInterr|
  0137c		 |$LN9@XmitInterr|

; 336  :         // The Xmit Empty interrupt can be generated by two sources.
; 337  :         // One is Xmit FIFO half empty, other is empty.
; 338  :         // We have to make sure the FIFO is completely empty before return this.
; 339  :         // Because after this return, user may shut down hardware or change baudrate. 
; 340  :         for (DWORD dwIndex = 0; dwIndex< 500; dwIndex++) {

  0137c	e3a03000	 mov         r3, #0
  01380	e58d3000	 str         r3, [sp]
  01384	ea000002	 b           |$LN8@XmitInterr|
  01388		 |$LN7@XmitInterr|
  01388	e59d3000	 ldr         r3, [sp]
  0138c	e2833001	 add         r3, r3, #1
  01390	e58d3000	 str         r3, [sp]
  01394		 |$LN8@XmitInterr|
  01394	e59d3000	 ldr         r3, [sp]
  01398	e3530f7d	 cmp         r3, #0x7D, 30
  0139c	2a000014	 bcs         |$LN6@XmitInterr|

; 341  :             if ((GetRegister()->Read_LSR( ) & SERIAL_LSR_TEMT) == 0 ) 

  013a0	e59d0018	 ldr         r0, [sp, #0x18]
  013a4	eb000000	 bl          |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ|
  013a8	e58d0004	 str         r0, [sp, #4]
  013ac	e59d3004	 ldr         r3, [sp, #4]
  013b0	e58d3008	 str         r3, [sp, #8]
  013b4	e59d3008	 ldr         r3, [sp, #8]
  013b8	e5933000	 ldr         r3, [r3]
  013bc	e2833038	 add         r3, r3, #0x38
  013c0	e59d0008	 ldr         r0, [sp, #8]
  013c4	e5933000	 ldr         r3, [r3]
  013c8	e1a0e00f	 mov         lr, pc
  013cc	e12fff13	 bx          r3
  013d0	e5cd000c	 strb        r0, [sp, #0xC]
  013d4	e5dd300c	 ldrb        r3, [sp, #0xC]
  013d8	e3130040	 tst         r3, #0x40
  013dc	1a000002	 bne         |$LN5@XmitInterr|

; 342  :                 Sleep(1);

  013e0	e3a00001	 mov         r0, #1
  013e4	eb000000	 bl          Sleep

; 343  :             else

  013e8	ea000000	 b           |$LN4@XmitInterr|
  013ec		 |$LN5@XmitInterr|

; 344  :                 break;

  013ec	ea000000	 b           |$LN6@XmitInterr|
  013f0		 |$LN4@XmitInterr|

; 345  :         }

  013f0	eaffffe4	 b           |$LN7@XmitInterr|
  013f4		 |$LN6@XmitInterr|
  013f4		 |$LN10@XmitInterr|

; 346  :     }
; 347  :     if (m_fIREnable) {

  013f4	e59d3018	 ldr         r3, [sp, #0x18]
  013f8	e28330ec	 add         r3, r3, #0xEC
  013fc	e5933000	 ldr         r3, [r3]
  01400	e3530000	 cmp         r3, #0
  01404	0a000012	 beq         |$LN3@XmitInterr|

; 348  :         if (pTxBuffer!=NULL && pBuffLen!=NULL && *pBuffLen!=NULL) 

  01408	e59d301c	 ldr         r3, [sp, #0x1C]
  0140c	e3530000	 cmp         r3, #0
  01410	0a00000b	 beq         |$LN2@XmitInterr|
  01414	e59d3020	 ldr         r3, [sp, #0x20]
  01418	e3530000	 cmp         r3, #0
  0141c	0a000008	 beq         |$LN2@XmitInterr|
  01420	e59d3020	 ldr         r3, [sp, #0x20]
  01424	e5933000	 ldr         r3, [r3]
  01428	e3530000	 cmp         r3, #0
  0142c	0a000004	 beq         |$LN2@XmitInterr|

; 349  :             Enable_IR_Rx_Tx(FALSE,TRUE);

  01430	e3a02001	 mov         r2, #1
  01434	e3a01000	 mov         r1, #0
  01438	e59d0018	 ldr         r0, [sp, #0x18]
  0143c	eb000000	 bl          |?Enable_IR_Rx_Tx@CBulPdd16550@@IAAHHH@Z|

; 350  :         else

  01440	ea000003	 b           |$LN1@XmitInterr|
  01444		 |$LN2@XmitInterr|

; 351  :             Enable_IR_Rx_Tx(TRUE,FALSE);

  01444	e3a02000	 mov         r2, #0
  01448	e3a01001	 mov         r1, #1
  0144c	e59d0018	 ldr         r0, [sp, #0x18]
  01450	eb000000	 bl          |?Enable_IR_Rx_Tx@CBulPdd16550@@IAAHHH@Z|
  01454		 |$LN1@XmitInterr|
  01454		 |$LN3@XmitInterr|

; 352  :     }
; 353  :     CPdd16550::XmitInterruptHandler(pTxBuffer,pBuffLen);

  01454	e59d2020	 ldr         r2, [sp, #0x20]
  01458	e59d101c	 ldr         r1, [sp, #0x1C]
  0145c	e59d0018	 ldr         r0, [sp, #0x18]
  01460	eb000000	 bl          |?XmitInterruptHandler@CPdd16550@@UAAXPAEPAK@Z|

; 354  : }

  01464	e28dd010	 add         sp, sp, #0x10
  01468	e89d6000	 ldmia       sp, {sp, lr}
  0146c	e12fff1e	 bx          lr
  01470		 |$M37264|

			 ENDP  ; |?XmitInterruptHandler@CBulPdd16550@@UAAXPAEPAK@Z|, CBulPdd16550::XmitInterruptHandler

	IMPORT	|?XmitComChar@CPdd16550@@UAAXE@Z|	; CPdd16550::XmitComChar

  00098			 AREA	 |.pdata|, PDATA
|$T37271| DCD	|$LN6@XmitComCha|
	DCD	0x40001103
; Function compile flags: /Odtp

  01470			 AREA	 |.text|, CODE, ARM

  01470		 |?XmitComChar@CBulPdd16550@@UAAXE@Z| PROC ; CBulPdd16550::XmitComChar

; 356  : {

  01470		 |$LN6@XmitComCha|
  01470	e1a0c00d	 mov         r12, sp
  01474	e92d0003	 stmdb       sp!, {r0, r1}
  01478	e92d5000	 stmdb       sp!, {r12, lr}
  0147c		 |$M37268|

; 357  :     if (m_fIREnable) {

  0147c	e59d3008	 ldr         r3, [sp, #8]
  01480	e28330ec	 add         r3, r3, #0xEC
  01484	e5933000	 ldr         r3, [r3]
  01488	e3530000	 cmp         r3, #0
  0148c	0a000003	 beq         |$LN1@XmitComCha|

; 358  :         Enable_IR_Rx_Tx(FALSE,TRUE);

  01490	e3a02001	 mov         r2, #1
  01494	e3a01000	 mov         r1, #0
  01498	e59d0008	 ldr         r0, [sp, #8]
  0149c	eb000000	 bl          |?Enable_IR_Rx_Tx@CBulPdd16550@@IAAHHH@Z|
  014a0		 |$LN1@XmitComCha|

; 359  :     }
; 360  :     CPdd16550::XmitComChar(ComChar);

  014a0	e5dd100c	 ldrb        r1, [sp, #0xC]
  014a4	e59d0008	 ldr         r0, [sp, #8]
  014a8	eb000000	 bl          |?XmitComChar@CPdd16550@@UAAXE@Z|

; 361  : }

  014ac	e89d6000	 ldmia       sp, {sp, lr}
  014b0	e12fff1e	 bx          lr
  014b4		 |$M37269|

			 ENDP  ; |?XmitComChar@CBulPdd16550@@UAAXE@Z|, CBulPdd16550::XmitComChar

	IMPORT	|?SetDCB@CSerialPDD@@UAAHPAU_DCB@@@Z|	; CSerialPDD::SetDCB

  000a0			 AREA	 |.pdata|, PDATA
|$T37277| DCD	|$LN5@SetDCB|
	DCD	0x40001e04
; Function compile flags: /Odtp

  014b4			 AREA	 |.text|, CODE, ARM

  014b4		 |?SetDCB@CBulPdd16550@@UAAHPAU_DCB@@@Z| PROC ; CBulPdd16550::SetDCB

; 363  : {

  014b4		 |$LN5@SetDCB|
  014b4	e1a0c00d	 mov         r12, sp
  014b8	e92d0003	 stmdb       sp!, {r0, r1}
  014bc	e92d5000	 stmdb       sp!, {r12, lr}
  014c0	e24dd00c	 sub         sp, sp, #0xC
  014c4		 |$M37274|

; 364  :     m_HardwareLock.Lock();

  014c4	e59d3014	 ldr         r3, [sp, #0x14]
  014c8	e2830060	 add         r0, r3, #0x60
  014cc	eb000000	 bl          |?Lock@CLockObject@@QAAXXZ|

; 365  :     //Disable the UART for sure
; 366  :     Enable_IR_Rx_Tx(FALSE,FALSE);

  014d0	e3a02000	 mov         r2, #0
  014d4	e3a01000	 mov         r1, #0
  014d8	e59d0014	 ldr         r0, [sp, #0x14]
  014dc	eb000000	 bl          |?Enable_IR_Rx_Tx@CBulPdd16550@@IAAHHH@Z|

; 367  :     BOOL bReturn = CPdd16550::SetDCB(lpDCB);

  014e0	e59d1018	 ldr         r1, [sp, #0x18]
  014e4	e59d0014	 ldr         r0, [sp, #0x14]
  014e8	eb000000	 bl          |?SetDCB@CSerialPDD@@UAAHPAU_DCB@@@Z|
  014ec	e58d0008	 str         r0, [sp, #8]
  014f0	e59d3008	 ldr         r3, [sp, #8]
  014f4	e58d3000	 str         r3, [sp]

; 368  :     Enable_IR_Rx_Tx(TRUE,FALSE);

  014f8	e3a02000	 mov         r2, #0
  014fc	e3a01001	 mov         r1, #1
  01500	e59d0014	 ldr         r0, [sp, #0x14]
  01504	eb000000	 bl          |?Enable_IR_Rx_Tx@CBulPdd16550@@IAAHHH@Z|

; 369  :     m_HardwareLock.Unlock();        

  01508	e59d3014	 ldr         r3, [sp, #0x14]
  0150c	e2830060	 add         r0, r3, #0x60
  01510	eb000000	 bl          |?Unlock@CLockObject@@QAAXXZ|

; 370  :     return bReturn;

  01514	e59d3000	 ldr         r3, [sp]
  01518	e58d3004	 str         r3, [sp, #4]

; 371  : }

  0151c	e59d0004	 ldr         r0, [sp, #4]
  01520	e28dd00c	 add         sp, sp, #0xC
  01524	e89d6000	 ldmia       sp, {sp, lr}
  01528	e12fff1e	 bx          lr
  0152c		 |$M37275|

			 ENDP  ; |?SetDCB@CBulPdd16550@@UAAHPAU_DCB@@@Z|, CBulPdd16550::SetDCB

	EXPORT	|?SerialRegisterBackup@CPdd16550@@UAAXXZ| ; CPdd16550::SerialRegisterBackup

  000a8			 AREA	 |.pdata|, PDATA
|$T37282| DCD	|$LN5@SerialRegi@2|
	DCD	0x40002704
; Function compile flags: /Odtp

  0152c			 AREA	 |.text|, CODE, ARM

  0152c		 |?SerialRegisterBackup@CBulPdd16550@@MAAXXZ| PROC ; CBulPdd16550::SerialRegisterBackup

; 373  : {

  0152c		 |$LN5@SerialRegi@2|
  0152c	e1a0c00d	 mov         r12, sp
  01530	e92d0001	 stmdb       sp!, {r0}
  01534	e92d5000	 stmdb       sp!, {r12, lr}
  01538	e24dd014	 sub         sp, sp, #0x14
  0153c		 |$M37279|

; 374  :     CPdd16550::SerialRegisterBackup();

  0153c	e59d001c	 ldr         r0, [sp, #0x1C]
  01540	eb000000	 bl          |?SerialRegisterBackup@CPdd16550@@UAAXXZ|

; 375  :     //Actually power down UART and disable all interrupts
; 376  :     GetRegister()->Write_IER(GetRegister()->Read_IER() &~BUL_SERIAL_IER_UUE);

  01544	e59d001c	 ldr         r0, [sp, #0x1C]
  01548	eb000000	 bl          |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ|
  0154c	e58d0000	 str         r0, [sp]
  01550	e59d3000	 ldr         r3, [sp]
  01554	e58d3004	 str         r3, [sp, #4]
  01558	e59d3004	 ldr         r3, [sp, #4]
  0155c	e5933000	 ldr         r3, [r3]
  01560	e2833014	 add         r3, r3, #0x14
  01564	e59d0004	 ldr         r0, [sp, #4]
  01568	e5933000	 ldr         r3, [r3]
  0156c	e1a0e00f	 mov         lr, pc
  01570	e12fff13	 bx          r3
  01574	e5cd0008	 strb        r0, [sp, #8]
  01578	e59d001c	 ldr         r0, [sp, #0x1C]
  0157c	eb000000	 bl          |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ|
  01580	e58d000c	 str         r0, [sp, #0xC]
  01584	e59d300c	 ldr         r3, [sp, #0xC]
  01588	e58d3010	 str         r3, [sp, #0x10]
  0158c	e5dd3008	 ldrb        r3, [sp, #8]
  01590	e1a02003	 mov         r2, r3
  01594	e3e03040	 mvn         r3, #0x40
  01598	e0023003	 and         r3, r2, r3
  0159c	e20310ff	 and         r1, r3, #0xFF
  015a0	e59d0010	 ldr         r0, [sp, #0x10]
  015a4	e59d3010	 ldr         r3, [sp, #0x10]
  015a8	e5933000	 ldr         r3, [r3]
  015ac	e2833010	 add         r3, r3, #0x10
  015b0	e5933000	 ldr         r3, [r3]
  015b4	e1a0e00f	 mov         lr, pc
  015b8	e12fff13	 bx          r3

; 377  : }

  015bc	e28dd014	 add         sp, sp, #0x14
  015c0	e89d6000	 ldmia       sp, {sp, lr}
  015c4	e12fff1e	 bx          lr
  015c8		 |$M37280|

			 ENDP  ; |?SerialRegisterBackup@CBulPdd16550@@MAAXXZ|, CBulPdd16550::SerialRegisterBackup

; File c:\wince600\public\common\oak\inc\pdd16550.h

  00000			 AREA	 |.pdata|, PDATA
|$T37287| DCD	|$LN5@SerialRegi@3|
	DCD	0x40001003
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SerialRegisterBackup@CPdd16550@@UAAXXZ| PROC ; CPdd16550::SerialRegisterBackup

; 125  :     virtual void    SerialRegisterBackup() { m_pReg16550->Backup(); };

  00000		 |$LN5@SerialRegi@3|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37284|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2833f4a	 add         r3, r3, #0x4A, 30
  00014	e5932000	 ldr         r2, [r3]
  00018	e59d3008	 ldr         r3, [sp, #8]
  0001c	e2833f4a	 add         r3, r3, #0x4A, 30
  00020	e5930000	 ldr         r0, [r3]
  00024	e5923000	 ldr         r3, [r2]
  00028	e2833050	 add         r3, r3, #0x50
  0002c	e5933000	 ldr         r3, [r3]
  00030	e1a0e00f	 mov         lr, pc
  00034	e12fff13	 bx          r3
  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$M37285|

			 ENDP  ; |?SerialRegisterBackup@CPdd16550@@UAAXXZ|, CPdd16550::SerialRegisterBackup

	IMPORT	|?PostInit@CPdd16550@@UAAXXZ|		; CPdd16550::PostInit

  000b0			 AREA	 |.pdata|, PDATA
|$T37294| DCD	|$LN5@PostInit|
	DCD	0x40000703
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\serial\bul16550.cpp

  015c8			 AREA	 |.text|, CODE, ARM

  015c8		 |?PostInit@CBulPdd16550@@UAAXXZ| PROC	; CBulPdd16550::PostInit

; 380  : {

  015c8		 |$LN5@PostInit|
  015c8	e1a0c00d	 mov         r12, sp
  015cc	e92d0001	 stmdb       sp!, {r0}
  015d0	e92d5000	 stmdb       sp!, {r12, lr}
  015d4		 |$M37291|

; 381  :     CPdd16550::PostInit();

  015d4	e59d0008	 ldr         r0, [sp, #8]
  015d8	eb000000	 bl          |?PostInit@CPdd16550@@UAAXXZ|

; 382  : }

  015dc	e89d6000	 ldmia       sp, {sp, lr}
  015e0	e12fff1e	 bx          lr
  015e4		 |$M37292|

			 ENDP  ; |?PostInit@CBulPdd16550@@UAAXXZ|, CBulPdd16550::PostInit

	END
