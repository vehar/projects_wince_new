; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\PXA27X_MS_V1\SERIAL\bul16550.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.data|, DATA
|s_HighWaterPairs| DCD 0x0
	DCD	0x1
	DCD	0x40
	DCD	0x8
	DCD	0x80
	DCD	0x10
	DCD	0xc0
	DCD	0x20
	EXPORT	|?GetWindowInfo@CRegistryEdit@@QAAKPAU_DDKWINDOWINFO_tag@@@Z| ; CRegistryEdit::GetWindowInfo
	IMPORT	|DDKReg_GetWindowInfo|
; File c:\wince600\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.pdata|, PDATA
|$T36675| DCD	|$LN7@GetWindowI|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetWindowInfo@CRegistryEdit@@QAAKPAU_DDKWINDOWINFO_tag@@@Z| PROC ; CRegistryEdit::GetWindowInfo

; 88   :     {

  00000		 |$LN7@GetWindowI|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36672|
  00004	e3510000	 cmp         r1, #0

; 89   :         if( pdwi && m_hDevKey )

  00008	0a000008	 beq         |$LN2@GetWindowI|
  0000c	e5903000	 ldr         r3, [r0]
  00010	e3530000	 cmp         r3, #0
  00014	0a000005	 beq         |$LN2@GetWindowI|

; 90   :         {
; 91   :             pdwi->cbSize = sizeof( DDKWINDOWINFO );

  00018	e3a03074	 mov         r3, #0x74
  0001c	e5813000	 str         r3, [r1]

; 92   :             DWORD status = DDKReg_GetWindowInfo( m_hDevKey, pdwi );

  00020	e5900000	 ldr         r0, [r0]
  00024	eb000000	 bl          DDKReg_GetWindowInfo

; 98   :         }
; 99   :     }

  00028	e49de004	 ldr         lr, [sp], #4
  0002c	e12fff1e	 bx          lr
  00030		 |$LN2@GetWindowI|

; 93   :             return status;
; 94   :         }
; 95   :         else
; 96   :         {
; 97   :             return ERROR_INVALID_FUNCTION;

  00030	e3a00001	 mov         r0, #1

; 98   :         }
; 99   :     }

  00034	e49de004	 ldr         lr, [sp], #4
  00038	e12fff1e	 bx          lr
  0003c		 |$M36673|

			 ENDP  ; |?GetWindowInfo@CRegistryEdit@@QAAKPAU_DDKWINDOWINFO_tag@@@Z|, CRegistryEdit::GetWindowInfo

	EXPORT	|?GetIsrInfo@CRegistryEdit@@QAAKPAU_DDKISRINFO_tag@@@Z| ; CRegistryEdit::GetIsrInfo
	IMPORT	|DDKReg_GetIsrInfo|

  00000			 AREA	 |.pdata|, PDATA
|$T36686| DCD	|$LN7@GetIsrInfo|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetIsrInfo@CRegistryEdit@@QAAKPAU_DDKISRINFO_tag@@@Z| PROC ; CRegistryEdit::GetIsrInfo

; 102  :     {

  00000		 |$LN7@GetIsrInfo|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36683|
  00004	e3510000	 cmp         r1, #0

; 103  :         if( pddi && m_hDevKey )

  00008	0a000008	 beq         |$LN2@GetIsrInfo|
  0000c	e5903000	 ldr         r3, [r0]
  00010	e3530000	 cmp         r3, #0
  00014	0a000005	 beq         |$LN2@GetIsrInfo|

; 104  :         {
; 105  :             pddi->cbSize = sizeof( DDKISRINFO );

  00018	e3a03f43	 mov         r3, #0x43, 30
  0001c	e5813000	 str         r3, [r1]

; 106  :             DWORD status = DDKReg_GetIsrInfo( m_hDevKey, pddi );

  00020	e5900000	 ldr         r0, [r0]
  00024	eb000000	 bl          DDKReg_GetIsrInfo

; 112  :         }
; 113  :     }

  00028	e49de004	 ldr         lr, [sp], #4
  0002c	e12fff1e	 bx          lr
  00030		 |$LN2@GetIsrInfo|

; 107  :             return status;
; 108  :         }
; 109  :         else
; 110  :         {
; 111  :             return ERROR_INVALID_FUNCTION;

  00030	e3a00001	 mov         r0, #1

; 112  :         }
; 113  :     }

  00034	e49de004	 ldr         lr, [sp], #4
  00038	e12fff1e	 bx          lr
  0003c		 |$M36684|

			 ENDP  ; |?GetIsrInfo@CRegistryEdit@@QAAKPAU_DDKISRINFO_tag@@@Z|, CRegistryEdit::GetIsrInfo

	EXPORT	|?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z| ; CRegistryEdit::GetRegValue
	IMPORT	|RegQueryValueExW|

  00000			 AREA	 |.pdata|, PDATA
|$T36700| DCD	|$LN7@GetRegValu|
	DCD	0x40001404
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z| PROC ; CRegistryEdit::GetRegValue

; 130  :     {

  00000		 |$LN7@GetRegValu|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M36697|
  00010	e1a04002	 mov         r4, r2

; 131  :         DWORD dwType = 0;
; 132  :         LONG status = ::RegQueryValueEx( m_hDevKey,
; 133  :                                            lpcName,
; 134  :                                            NULL,
; 135  :                                            &dwType,
; 136  :                                            lpData,
; 137  :                                            &dwDataLen );

  00014	e5900000	 ldr         r0, [r0]
  00018	e3a05000	 mov         r5, #0
  0001c	e28de028	 add         lr, sp, #0x28
  00020	e28d3008	 add         r3, sp, #8
  00024	e3a02000	 mov         r2, #0
  00028	e58d5008	 str         r5, [sp, #8]
  0002c	e58de004	 str         lr, [sp, #4]
  00030	e58d4000	 str         r4, [sp]
  00034	eb000000	 bl          RegQueryValueExW
  00038	e3500000	 cmp         r0, #0

; 138  :         return ( status == ERROR_SUCCESS );

  0003c	03a00001	 moveq       r0, #1
  00040	13a00000	 movne       r0, #0

; 139  :     }

  00044	e28dd00c	 add         sp, sp, #0xC
  00048	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M36698|

			 ENDP  ; |?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z|, CRegistryEdit::GetRegValue

	EXPORT	|?RegSetValueExW@CRegistryEdit@@QAAHPBGKPAEK@Z| ; CRegistryEdit::RegSetValueExW
	IMPORT	|RegSetValueExW|

  00000			 AREA	 |.pdata|, PDATA
|$T36715| DCD	|$LN7@RegSetValu|
	DCD	0x40001002
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RegSetValueExW@CRegistryEdit@@QAAHPBGKPAEK@Z| PROC ; CRegistryEdit::RegSetValueExW

; 160  :     {

  00000		 |$LN7@RegSetValu|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M36712|
  00008	e1a04003	 mov         r4, r3
  0000c	e1a03002	 mov         r3, r2

; 161  :         LONG status = ::RegSetValueEx( m_hDevKey,
; 162  :                                          lpcName,
; 163  :                                          NULL,
; 164  :                                          dwType,
; 165  :                                          lpData,
; 166  :                                          dwDataLen );

  00010	e59de010	 ldr         lr, [sp, #0x10]
  00014	e5900000	 ldr         r0, [r0]
  00018	e3a02000	 mov         r2, #0
  0001c	e58de004	 str         lr, [sp, #4]
  00020	e58d4000	 str         r4, [sp]
  00024	eb000000	 bl          RegSetValueExW
  00028	e3500000	 cmp         r0, #0

; 167  :         return ( status == ERROR_SUCCESS );

  0002c	03a00001	 moveq       r0, #1
  00030	13a00000	 movne       r0, #0

; 168  :     }

  00034	e28dd008	 add         sp, sp, #8
  00038	e8bd4010	 ldmia       sp!, {r4, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$M36713|

			 ENDP  ; |?RegSetValueExW@CRegistryEdit@@QAAHPBGKPAEK@Z|, CRegistryEdit::RegSetValueExW

	EXPORT	|?Lock@CLockObject@@QAAXXZ|		; CLockObject::Lock
	IMPORT	|EnterCriticalSection|
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T36723| DCD	|$LN5@Lock|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Lock@CLockObject@@QAAXXZ| PROC	; CLockObject::Lock

; 45   :     {

  00000		 |$LN5@Lock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36720|

; 46   :         EnterCriticalSection( &m_CSection );

  00004	eb000000	 bl          EnterCriticalSection

; 47   :     };

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M36721|

			 ENDP  ; |?Lock@CLockObject@@QAAXXZ|, CLockObject::Lock

	EXPORT	|?Unlock@CLockObject@@QAAXXZ|		; CLockObject::Unlock
	IMPORT	|LeaveCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T36731| DCD	|$LN5@Unlock|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Unlock@CLockObject@@QAAXXZ| PROC	; CLockObject::Unlock

; 49   :     {

  00000		 |$LN5@Unlock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36728|

; 50   :         LeaveCriticalSection( &m_CSection );

  00004	eb000000	 bl          LeaveCriticalSection

; 51   :     };

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M36729|

			 ENDP  ; |?Unlock@CLockObject@@QAAXXZ|, CLockObject::Unlock

	EXPORT	|?SetOutputMode@CSerialPDD@@UAAXHH@Z|	; CSerialPDD::SetOutputMode
; File c:\wince600\public\common\oak\inc\cserpdd.h

  00000			 AREA	 |.pdata|, PDATA
|$T36741| DCD	|$LN5@SetOutputM|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetOutputMode@CSerialPDD@@UAAXHH@Z| PROC ; CSerialPDD::SetOutputMode

; 169  :     virtual void    SetOutputMode(BOOL UseIR, BOOL Use9Pin) {   

  00000		 |$LN5@SetOutputM|
  00000		 |$M36738|

; 170  :         m_fIREnable = UseIR;

  00000	e58010ec	 str         r1, [r0, #0xEC]

; 171  :         m_f9PinEnable=Use9Pin;

  00004	e58020f0	 str         r2, [r0, #0xF0]

; 172  :     }

  00008	e12fff1e	 bx          lr
  0000c		 |$M36739|

			 ENDP  ; |?SetOutputMode@CSerialPDD@@UAAXHH@Z|, CSerialPDD::SetOutputMode

	EXPORT	|??1CReg16550@@UAA@XZ|			; CReg16550::~CReg16550
	EXPORT	|??_7CReg16550@@6B@| [ DATA ]		; CReg16550::`vftable'
	EXPORT	|?Init@CReg16550@@UAAHXZ|		; CReg16550::Init
	EXPORT	|?Write_DATA@CReg16550@@UAAXE@Z|	; CReg16550::Write_DATA
	EXPORT	|?Read_Data@CReg16550@@UAAEXZ|		; CReg16550::Read_Data
	EXPORT	|?Write_IER@CReg16550@@UAAXE@Z|		; CReg16550::Write_IER
	EXPORT	|?Read_IER@CReg16550@@UAAEXZ|		; CReg16550::Read_IER
	EXPORT	|?Write_FCR@CReg16550@@UAAXE@Z|		; CReg16550::Write_FCR
	EXPORT	|?Read_FCR@CReg16550@@UAAEXZ|		; CReg16550::Read_FCR
	EXPORT	|?Read_IIR@CReg16550@@UAAEXZ|		; CReg16550::Read_IIR
	EXPORT	|?Write_LCR@CReg16550@@UAAXE@Z|		; CReg16550::Write_LCR
	EXPORT	|?Read_LCR@CReg16550@@UAAEXZ|		; CReg16550::Read_LCR
	EXPORT	|?Write_MCR@CReg16550@@UAAXE@Z|		; CReg16550::Write_MCR
	EXPORT	|?Read_MCR@CReg16550@@UAAEXZ|		; CReg16550::Read_MCR
	EXPORT	|?Write_LSR@CReg16550@@UAAXE@Z|		; CReg16550::Write_LSR
	EXPORT	|?Read_LSR@CReg16550@@UAAEXZ|		; CReg16550::Read_LSR
	EXPORT	|?Write_MSR@CReg16550@@UAAXE@Z|		; CReg16550::Write_MSR
	EXPORT	|?Read_MSR@CReg16550@@UAAEXZ|		; CReg16550::Read_MSR
	EXPORT	|?Write_SCR@CReg16550@@UAAXE@Z|		; CReg16550::Write_SCR
	EXPORT	|?Read_SCR@CReg16550@@UAAEXZ|		; CReg16550::Read_SCR
	IMPORT	|??_ECReg16550@@UAAPAXI@Z|, WEAK |??_GCReg16550@@UAAPAXI@Z| ; CReg16550::`vector deleting destructor', CReg16550::`scalar deleting destructor'
	IMPORT	|?Write_BaudRate@CReg16550@@UAAHG@Z|	; CReg16550::Write_BaudRate
	IMPORT	|?Backup@CReg16550@@UAAXXZ|		; CReg16550::Backup
	IMPORT	|?Restore@CReg16550@@UAAXXZ|		; CReg16550::Restore
; File c:\wince600\public\common\oak\inc\pdd16550.h

  00000			 AREA	 |.pdata|, PDATA
|$T36749| DCD	|$LN5@CReg16550|
	DCD	0x40000400

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CReg16550@@6B@| DCD |??_ECReg16550@@UAAPAXI@Z|	; CReg16550::`vftable'
	DCD	|?Init@CReg16550@@UAAHXZ|
	DCD	|?Write_DATA@CReg16550@@UAAXE@Z|
	DCD	|?Read_Data@CReg16550@@UAAEXZ|
	DCD	|?Write_IER@CReg16550@@UAAXE@Z|
	DCD	|?Read_IER@CReg16550@@UAAEXZ|
	DCD	|?Write_FCR@CReg16550@@UAAXE@Z|
	DCD	|?Read_FCR@CReg16550@@UAAEXZ|
	DCD	|?Read_IIR@CReg16550@@UAAEXZ|
	DCD	|?Write_LCR@CReg16550@@UAAXE@Z|
	DCD	|?Read_LCR@CReg16550@@UAAEXZ|
	DCD	|?Write_MCR@CReg16550@@UAAXE@Z|
	DCD	|?Read_MCR@CReg16550@@UAAEXZ|
	DCD	|?Write_LSR@CReg16550@@UAAXE@Z|
	DCD	|?Read_LSR@CReg16550@@UAAEXZ|
	DCD	|?Write_MSR@CReg16550@@UAAXE@Z|
	DCD	|?Read_MSR@CReg16550@@UAAEXZ|
	DCD	|?Write_SCR@CReg16550@@UAAXE@Z|
	DCD	|?Read_SCR@CReg16550@@UAAEXZ|
	DCD	|?Write_BaudRate@CReg16550@@UAAHG@Z|
	DCD	|?Backup@CReg16550@@UAAXXZ|
	DCD	|?Restore@CReg16550@@UAAXXZ|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CReg16550@@UAA@XZ| PROC		; CReg16550::~CReg16550

; 33   :     virtual ~CReg16550() { ; };

  00000		 |$LN5@CReg16550|
  00000		 |$M36746|
  00000	e59f3004	 ldr         r3, [pc, #4]
  00004	e5803000	 str         r3, [r0]
  00008	e12fff1e	 bx          lr
  0000c		 |$LN6@CReg16550|
  0000c		 |$LN7@CReg16550|
  0000c	00000000	 DCD         |??_7CReg16550@@6B@|
  00010		 |$M36747|

			 ENDP  ; |??1CReg16550@@UAA@XZ|, CReg16550::~CReg16550


  00000			 AREA	 |.pdata|, PDATA
|$T36763| DCD	|$LN7@Init|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Init@CReg16550@@UAAHXZ| PROC		; CReg16550::Init

; 34   :     virtual BOOL    Init() { return (m_pReg!=NULL); } ;

  00000		 |$LN7@Init|
  00000		 |$M36760|
  00000	e5903004	 ldr         r3, [r0, #4]
  00004	e3530000	 cmp         r3, #0
  00008	13a00001	 movne       r0, #1
  0000c	03a00000	 moveq       r0, #0
  00010	e12fff1e	 bx          lr
  00014		 |$M36761|

			 ENDP  ; |?Init@CReg16550@@UAAHXZ|, CReg16550::Init

	IMPORT	|WRITE_PORT_UCHAR|

  00000			 AREA	 |.pdata|, PDATA
|$T36772| DCD	|$LN5@Write_DATA|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_DATA@CReg16550@@UAAXE@Z| PROC	; CReg16550::Write_DATA

; 36   :     virtual void    Write_DATA(UINT8 uData) { WRITE_PORT_UCHAR( m_pData, uData); };

  00000		 |$LN5@Write_DATA|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36769|
  00004	e5900014	 ldr         r0, [r0, #0x14]
  00008	eb000000	 bl          WRITE_PORT_UCHAR
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M36770|

			 ENDP  ; |?Write_DATA@CReg16550@@UAAXE@Z|, CReg16550::Write_DATA

	IMPORT	|READ_PORT_UCHAR|

  00000			 AREA	 |.pdata|, PDATA
|$T36782| DCD	|$LN5@Read_Data|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_Data@CReg16550@@UAAEXZ| PROC	; CReg16550::Read_Data

; 37   :     virtual UINT8   Read_Data() { return READ_PORT_UCHAR(m_pData); } ;

  00000		 |$LN5@Read_Data|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36779|
  00004	e5900014	 ldr         r0, [r0, #0x14]
  00008	eb000000	 bl          READ_PORT_UCHAR
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M36780|

			 ENDP  ; |?Read_Data@CReg16550@@UAAEXZ|, CReg16550::Read_Data


  00000			 AREA	 |.pdata|, PDATA
|$T36791| DCD	|$LN5@Write_IER|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_IER@CReg16550@@UAAXE@Z| PROC	; CReg16550::Write_IER

; 38   :     virtual void    Write_IER(UINT8 uData) { WRITE_PORT_UCHAR(m_pIER, uData); };

  00000		 |$LN5@Write_IER|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36788|
  00004	e5900018	 ldr         r0, [r0, #0x18]
  00008	eb000000	 bl          WRITE_PORT_UCHAR
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M36789|

			 ENDP  ; |?Write_IER@CReg16550@@UAAXE@Z|, CReg16550::Write_IER


  00000			 AREA	 |.pdata|, PDATA
|$T36801| DCD	|$LN5@Read_IER|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_IER@CReg16550@@UAAEXZ| PROC	; CReg16550::Read_IER

; 39   :     virtual UINT8   Read_IER() { return READ_PORT_UCHAR(m_pIER); };

  00000		 |$LN5@Read_IER|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36798|
  00004	e5900018	 ldr         r0, [r0, #0x18]
  00008	eb000000	 bl          READ_PORT_UCHAR
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M36799|

			 ENDP  ; |?Read_IER@CReg16550@@UAAEXZ|, CReg16550::Read_IER


  00000			 AREA	 |.pdata|, PDATA
|$T36810| DCD	|$LN5@Write_FCR|
	DCD	0x40000801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_FCR@CReg16550@@UAAXE@Z| PROC	; CReg16550::Write_FCR

; 40   :     virtual void    Write_FCR(UINT8 uData) { WRITE_PORT_UCHAR( m_pIIR_FCR, uData);m_FCR = uData; };

  00000		 |$LN5@Write_FCR|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M36807|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0
  0000c	e594001c	 ldr         r0, [r4, #0x1C]
  00010	eb000000	 bl          WRITE_PORT_UCHAR
  00014	e5c4500c	 strb        r5, [r4, #0xC]
  00018	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$M36808|

			 ENDP  ; |?Write_FCR@CReg16550@@UAAXE@Z|, CReg16550::Write_FCR


  00000			 AREA	 |.pdata|, PDATA
|$T36820| DCD	|$LN5@Read_FCR|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_FCR@CReg16550@@UAAEXZ| PROC	; CReg16550::Read_FCR

; 41   :     virtual UINT8   Read_FCR() { return m_FCR; };

  00000		 |$LN5@Read_FCR|
  00000		 |$M36817|
  00000	e5d0000c	 ldrb        r0, [r0, #0xC]
  00004	e12fff1e	 bx          lr
  00008		 |$M36818|

			 ENDP  ; |?Read_FCR@CReg16550@@UAAEXZ|, CReg16550::Read_FCR


  00000			 AREA	 |.pdata|, PDATA
|$T36830| DCD	|$LN5@Read_IIR|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_IIR@CReg16550@@UAAEXZ| PROC	; CReg16550::Read_IIR

; 42   :     virtual UINT8   Read_IIR() { return READ_PORT_UCHAR( m_pIIR_FCR) ;};

  00000		 |$LN5@Read_IIR|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36827|
  00004	e590001c	 ldr         r0, [r0, #0x1C]
  00008	eb000000	 bl          READ_PORT_UCHAR
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M36828|

			 ENDP  ; |?Read_IIR@CReg16550@@UAAEXZ|, CReg16550::Read_IIR


  00000			 AREA	 |.pdata|, PDATA
|$T36839| DCD	|$LN5@Write_LCR|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_LCR@CReg16550@@UAAXE@Z| PROC	; CReg16550::Write_LCR

; 43   :     virtual void    Write_LCR(UINT8 uData) { WRITE_PORT_UCHAR(m_pLCR, uData);};

  00000		 |$LN5@Write_LCR|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36836|
  00004	e5900020	 ldr         r0, [r0, #0x20]
  00008	eb000000	 bl          WRITE_PORT_UCHAR
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M36837|

			 ENDP  ; |?Write_LCR@CReg16550@@UAAXE@Z|, CReg16550::Write_LCR


  00000			 AREA	 |.pdata|, PDATA
|$T36849| DCD	|$LN5@Read_LCR|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_LCR@CReg16550@@UAAEXZ| PROC	; CReg16550::Read_LCR

; 44   :     virtual UINT8   Read_LCR() { return READ_PORT_UCHAR(m_pLCR);};

  00000		 |$LN5@Read_LCR|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36846|
  00004	e5900020	 ldr         r0, [r0, #0x20]
  00008	eb000000	 bl          READ_PORT_UCHAR
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M36847|

			 ENDP  ; |?Read_LCR@CReg16550@@UAAEXZ|, CReg16550::Read_LCR


  00000			 AREA	 |.pdata|, PDATA
|$T36858| DCD	|$LN5@Write_MCR|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_MCR@CReg16550@@UAAXE@Z| PROC	; CReg16550::Write_MCR

; 45   :     virtual void    Write_MCR(UINT8 uData) { WRITE_PORT_UCHAR( m_pMCR, uData);};

  00000		 |$LN5@Write_MCR|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36855|
  00004	e5900024	 ldr         r0, [r0, #0x24]
  00008	eb000000	 bl          WRITE_PORT_UCHAR
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M36856|

			 ENDP  ; |?Write_MCR@CReg16550@@UAAXE@Z|, CReg16550::Write_MCR


  00000			 AREA	 |.pdata|, PDATA
|$T36868| DCD	|$LN5@Read_MCR|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_MCR@CReg16550@@UAAEXZ| PROC	; CReg16550::Read_MCR

; 46   :     virtual UINT8   Read_MCR() { return READ_PORT_UCHAR(m_pMCR);};

  00000		 |$LN5@Read_MCR|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36865|
  00004	e5900024	 ldr         r0, [r0, #0x24]
  00008	eb000000	 bl          READ_PORT_UCHAR
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M36866|

			 ENDP  ; |?Read_MCR@CReg16550@@UAAEXZ|, CReg16550::Read_MCR


  00000			 AREA	 |.pdata|, PDATA
|$T36877| DCD	|$LN5@Write_LSR|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_LSR@CReg16550@@UAAXE@Z| PROC	; CReg16550::Write_LSR

; 47   :     virtual void    Write_LSR(UINT8 uData) { WRITE_PORT_UCHAR( m_pLSR, uData);};

  00000		 |$LN5@Write_LSR|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36874|
  00004	e5900028	 ldr         r0, [r0, #0x28]
  00008	eb000000	 bl          WRITE_PORT_UCHAR
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M36875|

			 ENDP  ; |?Write_LSR@CReg16550@@UAAXE@Z|, CReg16550::Write_LSR


  00000			 AREA	 |.pdata|, PDATA
|$T36887| DCD	|$LN5@Read_LSR|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_LSR@CReg16550@@UAAEXZ| PROC	; CReg16550::Read_LSR

; 48   :     virtual UINT8   Read_LSR() { return READ_PORT_UCHAR(m_pLSR);};

  00000		 |$LN5@Read_LSR|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36884|
  00004	e5900028	 ldr         r0, [r0, #0x28]
  00008	eb000000	 bl          READ_PORT_UCHAR
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M36885|

			 ENDP  ; |?Read_LSR@CReg16550@@UAAEXZ|, CReg16550::Read_LSR


  00000			 AREA	 |.pdata|, PDATA
|$T36896| DCD	|$LN5@Write_MSR|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_MSR@CReg16550@@UAAXE@Z| PROC	; CReg16550::Write_MSR

; 49   :     virtual void    Write_MSR(UINT8 uData) { WRITE_PORT_UCHAR( m_pMSR, uData) ; };

  00000		 |$LN5@Write_MSR|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36893|
  00004	e590002c	 ldr         r0, [r0, #0x2C]
  00008	eb000000	 bl          WRITE_PORT_UCHAR
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M36894|

			 ENDP  ; |?Write_MSR@CReg16550@@UAAXE@Z|, CReg16550::Write_MSR


  00000			 AREA	 |.pdata|, PDATA
|$T36906| DCD	|$LN5@Read_MSR|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_MSR@CReg16550@@UAAEXZ| PROC	; CReg16550::Read_MSR

; 50   :     virtual UINT8   Read_MSR() { return READ_PORT_UCHAR( m_pMSR); };

  00000		 |$LN5@Read_MSR|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36903|
  00004	e590002c	 ldr         r0, [r0, #0x2C]
  00008	eb000000	 bl          READ_PORT_UCHAR
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M36904|

			 ENDP  ; |?Read_MSR@CReg16550@@UAAEXZ|, CReg16550::Read_MSR


  00000			 AREA	 |.pdata|, PDATA
|$T36915| DCD	|$LN5@Write_SCR|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_SCR@CReg16550@@UAAXE@Z| PROC	; CReg16550::Write_SCR

; 51   :     virtual void    Write_SCR(UINT8 uData) { WRITE_PORT_UCHAR( m_pSRC, uData );};

  00000		 |$LN5@Write_SCR|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36912|
  00004	e5900030	 ldr         r0, [r0, #0x30]
  00008	eb000000	 bl          WRITE_PORT_UCHAR
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M36913|

			 ENDP  ; |?Write_SCR@CReg16550@@UAAXE@Z|, CReg16550::Write_SCR


  00000			 AREA	 |.pdata|, PDATA
|$T36925| DCD	|$LN5@Read_SCR|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_SCR@CReg16550@@UAAEXZ| PROC	; CReg16550::Read_SCR

; 52   :     virtual UINT8   Read_SCR() { return READ_PORT_UCHAR(m_pSRC); };

  00000		 |$LN5@Read_SCR|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36922|
  00004	e5900030	 ldr         r0, [r0, #0x30]
  00008	eb000000	 bl          READ_PORT_UCHAR
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M36923|

			 ENDP  ; |?Read_SCR@CReg16550@@UAAEXZ|, CReg16550::Read_SCR

	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T36939| DCD	|$LN8@scalar|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCReg16550@@UAAPAXI@Z| PROC	; CReg16550::`scalar deleting destructor'
  00000		 |$LN8@scalar|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M36936|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3014	 ldr         r3, [pc, #0x14]
  0000c	e3110001	 tst         r1, #1
  00010	e5843000	 str         r3, [r4]
  00014	1b000000	 blne        |??3@YAXPAX@Z|
  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN9@scalar|
  00024		 |$LN10@scalar|
  00024	00000000	 DCD         |??_7CReg16550@@6B@|
  00028		 |$M36937|

			 ENDP  ; |??_GCReg16550@@UAAPAXI@Z|, CReg16550::`scalar deleting destructor'

	EXPORT	|?SerialRegisterBackup@CPdd16550@@UAAXXZ| ; CPdd16550::SerialRegisterBackup

  00000			 AREA	 |.pdata|, PDATA
|$T36949| DCD	|$LN5@SerialRegi|
	DCD	0x40000801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SerialRegisterBackup@CPdd16550@@UAAXXZ| PROC ; CPdd16550::SerialRegisterBackup

; 125  :     virtual void    SerialRegisterBackup() { m_pReg16550->Backup(); };

  00000		 |$LN5@SerialRegi|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36946|
  00004	e5900128	 ldr         r0, [r0, #0x128]
  00008	e5903000	 ldr         r3, [r0]
  0000c	e5933050	 ldr         r3, [r3, #0x50]
  00010	e1a0e00f	 mov         lr, pc
  00014	e12fff13	 bx          r3
  00018	e49de004	 ldr         lr, [sp], #4
  0001c	e12fff1e	 bx          lr
  00020		 |$M36947|

			 ENDP  ; |?SerialRegisterBackup@CPdd16550@@UAAXXZ|, CPdd16550::SerialRegisterBackup

	EXPORT	|?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ| ; CBulPdd16550::GetRegister
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul16550.h

  00000			 AREA	 |.pdata|, PDATA
|$T36959| DCD	|$LN5@GetRegiste|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ| PROC ; CBulPdd16550::GetRegister

; 141  :     CBulReg16550 *GetRegister() { return (CBulReg16550 *)m_pReg16550; };

  00000		 |$LN5@GetRegiste|
  00000		 |$M36956|
  00000	e5900128	 ldr         r0, [r0, #0x128]
  00004	e12fff1e	 bx          lr
  00008		 |$M36957|

			 ENDP  ; |?GetRegister@CBulPdd16550@@QAAPAVCBulReg16550@@XZ|, CBulPdd16550::GetRegister

	EXPORT	|??0CBulReg16550@@QAA@PAUBULVERDE_UART_REG@@@Z| ; CBulReg16550::CBulReg16550
	EXPORT	|??_7CBulReg16550@@6B@| [ DATA ]	; CBulReg16550::`vftable'
	EXPORT	|?Init@CBulReg16550@@UAAHXZ|		; CBulReg16550::Init
	EXPORT	|?Write_DATA@CBulReg16550@@UAAXE@Z|	; CBulReg16550::Write_DATA
	EXPORT	|?Read_Data@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_Data
	EXPORT	|?Write_IER@CBulReg16550@@UAAXE@Z|	; CBulReg16550::Write_IER
	EXPORT	|?Read_IER@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_IER
	EXPORT	|?Write_FCR@CBulReg16550@@UAAXE@Z|	; CBulReg16550::Write_FCR
	EXPORT	|?Read_FCR@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_FCR
	EXPORT	|?Read_IIR@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_IIR
	EXPORT	|?Write_LCR@CBulReg16550@@UAAXE@Z|	; CBulReg16550::Write_LCR
	EXPORT	|?Read_LCR@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_LCR
	EXPORT	|?Write_MCR@CBulReg16550@@UAAXE@Z|	; CBulReg16550::Write_MCR
	EXPORT	|?Read_MCR@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_MCR
	EXPORT	|?Write_LSR@CBulReg16550@@UAAXE@Z|	; CBulReg16550::Write_LSR
	EXPORT	|?Read_LSR@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_LSR
	EXPORT	|?Write_MSR@CBulReg16550@@UAAXE@Z|	; CBulReg16550::Write_MSR
	EXPORT	|?Read_MSR@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_MSR
	EXPORT	|?Write_SCR@CBulReg16550@@UAAXE@Z|	; CBulReg16550::Write_SCR
	EXPORT	|?Read_SCR@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_SCR
	EXPORT	|?Backup@CBulReg16550@@UAAXXZ|		; CBulReg16550::Backup
	EXPORT	|?Restore@CBulReg16550@@UAAXXZ|		; CBulReg16550::Restore
	EXPORT	|?Write_SIR@CBulReg16550@@UAAXE@Z|	; CBulReg16550::Write_SIR
	EXPORT	|?Read_SIR@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_SIR
	EXPORT	|?Read_FIOR@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_FIOR
	EXPORT	|?Read_ABR@CBulReg16550@@UAAEXZ|	; CBulReg16550::Read_ABR
	EXPORT	|?Write_ABR@CBulReg16550@@UAAXE@Z|	; CBulReg16550::Write_ABR
	IMPORT	|??0CReg16550@@QAA@PAEK@Z|		; CReg16550::CReg16550
	IMPORT	|??_ECBulReg16550@@UAAPAXI@Z|, WEAK |??_GCBulReg16550@@UAAPAXI@Z| ; CBulReg16550::`vector deleting destructor', CBulReg16550::`scalar deleting destructor'
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\serial\bul16550.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T36970| DCD	|$LN5@CBulReg165|
	DCD	0x40000c01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CBulReg16550@@6B@| DCD |??_ECBulReg16550@@UAAPAXI@Z| ; CBulReg16550::`vftable'
	DCD	|?Init@CBulReg16550@@UAAHXZ|
	DCD	|?Write_DATA@CBulReg16550@@UAAXE@Z|
	DCD	|?Read_Data@CBulReg16550@@UAAEXZ|
	DCD	|?Write_IER@CBulReg16550@@UAAXE@Z|
	DCD	|?Read_IER@CBulReg16550@@UAAEXZ|
	DCD	|?Write_FCR@CBulReg16550@@UAAXE@Z|
	DCD	|?Read_FCR@CBulReg16550@@UAAEXZ|
	DCD	|?Read_IIR@CBulReg16550@@UAAEXZ|
	DCD	|?Write_LCR@CBulReg16550@@UAAXE@Z|
	DCD	|?Read_LCR@CBulReg16550@@UAAEXZ|
	DCD	|?Write_MCR@CBulReg16550@@UAAXE@Z|
	DCD	|?Read_MCR@CBulReg16550@@UAAEXZ|
	DCD	|?Write_LSR@CBulReg16550@@UAAXE@Z|
	DCD	|?Read_LSR@CBulReg16550@@UAAEXZ|
	DCD	|?Write_MSR@CBulReg16550@@UAAXE@Z|
	DCD	|?Read_MSR@CBulReg16550@@UAAEXZ|
	DCD	|?Write_SCR@CBulReg16550@@UAAXE@Z|
	DCD	|?Read_SCR@CBulReg16550@@UAAEXZ|
	DCD	|?Write_BaudRate@CReg16550@@UAAHG@Z|
	DCD	|?Backup@CBulReg16550@@UAAXXZ|
	DCD	|?Restore@CBulReg16550@@UAAXXZ|
	DCD	|?Write_SIR@CBulReg16550@@UAAXE@Z|
	DCD	|?Read_SIR@CBulReg16550@@UAAEXZ|
	DCD	|?Read_FIOR@CBulReg16550@@UAAEXZ|
	DCD	|?Read_ABR@CBulReg16550@@UAAEXZ|
	DCD	|?Write_ABR@CBulReg16550@@UAAXE@Z|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CBulReg16550@@QAA@PAUBULVERDE_UART_REG@@@Z| PROC ; CBulReg16550::CBulReg16550

; 47   : {

  00000		 |$LN5@CBulReg165|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M36967|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	e3a02004	 mov         r2, #4
  00010	eb000000	 bl          |??0CReg16550@@QAA@PAEK@Z|
  00014	e59f3010	 ldr         r3, [pc, #0x10]

; 48   :     m_pRegAddr = (PBULVERDE_UART_REG)pRegAddr;

  00018	e585403c	 str         r4, [r5, #0x3C]

; 49   : }

  0001c	e1a00005	 mov         r0, r5
  00020	e5853000	 str         r3, [r5]
  00024	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$LN6@CBulReg165|
  0002c		 |$LN7@CBulReg165|
  0002c	00000000	 DCD         |??_7CBulReg16550@@6B@|
  00030		 |$M36968|

			 ENDP  ; |??0CBulReg16550@@QAA@PAUBULVERDE_UART_REG@@@Z|, CBulReg16550::CBulReg16550

; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul16550.h

  00000			 AREA	 |.pdata|, PDATA
|$T36984| DCD	|$LN7@Init@2|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Init@CBulReg16550@@UAAHXZ| PROC	; CBulReg16550::Init

; 94   :     virtual BOOL    Init() { return (m_pRegAddr!=NULL); } ;

  00000		 |$LN7@Init@2|
  00000		 |$M36981|
  00000	e590303c	 ldr         r3, [r0, #0x3C]
  00004	e3530000	 cmp         r3, #0
  00008	13a00001	 movne       r0, #1
  0000c	03a00000	 moveq       r0, #0
  00010	e12fff1e	 bx          lr
  00014		 |$M36982|

			 ENDP  ; |?Init@CBulReg16550@@UAAHXZ|, CBulReg16550::Init

	IMPORT	|WRITE_REGISTER_ULONG|

  00000			 AREA	 |.pdata|, PDATA
|$T36993| DCD	|$LN5@Write_DATA@2|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_DATA@CBulReg16550@@UAAXE@Z| PROC ; CBulReg16550::Write_DATA

; 96   :     virtual void    Write_DATA(UINT8 uData) { WRITE_REGISTER_ULONG((PULONG) &(m_pRegAddr->thr_rbr_dll), uData); };

  00000		 |$LN5@Write_DATA@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36990|
  00004	e590003c	 ldr         r0, [r0, #0x3C]
  00008	eb000000	 bl          WRITE_REGISTER_ULONG
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M36991|

			 ENDP  ; |?Write_DATA@CBulReg16550@@UAAXE@Z|, CBulReg16550::Write_DATA

	IMPORT	|READ_REGISTER_ULONG|

  00000			 AREA	 |.pdata|, PDATA
|$T37003| DCD	|$LN5@Read_Data@2|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_Data@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_Data

; 97   :     virtual UINT8   Read_Data() { return (UCHAR)READ_REGISTER_ULONG((PULONG)&(m_pRegAddr->thr_rbr_dll)); } ;

  00000		 |$LN5@Read_Data@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37000|
  00004	e590003c	 ldr         r0, [r0, #0x3C]
  00008	eb000000	 bl          READ_REGISTER_ULONG
  0000c	e20000ff	 and         r0, r0, #0xFF
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M37001|

			 ENDP  ; |?Read_Data@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_Data


  00000			 AREA	 |.pdata|, PDATA
|$T37012| DCD	|$LN5@Write_IER@2|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_IER@CBulReg16550@@UAAXE@Z| PROC ; CBulReg16550::Write_IER

; 98   :     virtual void    Write_IER(UINT8 uData) { WRITE_REGISTER_ULONG((PULONG)&(m_pRegAddr->ier_dlh), uData); };

  00000		 |$LN5@Write_IER@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37009|
  00004	e590303c	 ldr         r3, [r0, #0x3C]
  00008	e2830004	 add         r0, r3, #4
  0000c	eb000000	 bl          WRITE_REGISTER_ULONG
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M37010|

			 ENDP  ; |?Write_IER@CBulReg16550@@UAAXE@Z|, CBulReg16550::Write_IER


  00000			 AREA	 |.pdata|, PDATA
|$T37022| DCD	|$LN5@Read_IER@2|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_IER@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_IER

; 99   :     virtual UINT8   Read_IER() { return (UCHAR)READ_REGISTER_ULONG((PULONG)&(m_pRegAddr->ier_dlh)); };

  00000		 |$LN5@Read_IER@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37019|
  00004	e590303c	 ldr         r3, [r0, #0x3C]
  00008	e2830004	 add         r0, r3, #4
  0000c	eb000000	 bl          READ_REGISTER_ULONG
  00010	e20000ff	 and         r0, r0, #0xFF
  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M37020|

			 ENDP  ; |?Read_IER@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_IER


  00000			 AREA	 |.pdata|, PDATA
|$T37031| DCD	|$LN5@Write_FCR@2|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_FCR@CBulReg16550@@UAAXE@Z| PROC ; CBulReg16550::Write_FCR

; 100  :     virtual void    Write_FCR(UINT8 uData) { WRITE_REGISTER_ULONG( (PULONG)&(m_pRegAddr->iir_fcr), uData);m_FCR = uData; };

  00000		 |$LN5@Write_FCR@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37028|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0
  0000c	e594303c	 ldr         r3, [r4, #0x3C]
  00010	e2830008	 add         r0, r3, #8
  00014	eb000000	 bl          WRITE_REGISTER_ULONG
  00018	e5c4500c	 strb        r5, [r4, #0xC]
  0001c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$M37029|

			 ENDP  ; |?Write_FCR@CBulReg16550@@UAAXE@Z|, CBulReg16550::Write_FCR


  00000			 AREA	 |.pdata|, PDATA
|$T37041| DCD	|$LN5@Read_FCR@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_FCR@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_FCR

; 101  :     virtual UINT8   Read_FCR() { return m_FCR; };

  00000		 |$LN5@Read_FCR@2|
  00000		 |$M37038|
  00000	e5d0000c	 ldrb        r0, [r0, #0xC]
  00004	e12fff1e	 bx          lr
  00008		 |$M37039|

			 ENDP  ; |?Read_FCR@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_FCR


  00000			 AREA	 |.pdata|, PDATA
|$T37051| DCD	|$LN5@Read_IIR@2|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_IIR@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_IIR

; 102  :     virtual UINT8   Read_IIR() { return (UCHAR)READ_REGISTER_ULONG( (PULONG)&(m_pRegAddr->iir_fcr)) ;};

  00000		 |$LN5@Read_IIR@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37048|
  00004	e590303c	 ldr         r3, [r0, #0x3C]
  00008	e2830008	 add         r0, r3, #8
  0000c	eb000000	 bl          READ_REGISTER_ULONG
  00010	e20000ff	 and         r0, r0, #0xFF
  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M37049|

			 ENDP  ; |?Read_IIR@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_IIR


  00000			 AREA	 |.pdata|, PDATA
|$T37060| DCD	|$LN5@Write_LCR@2|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_LCR@CBulReg16550@@UAAXE@Z| PROC ; CBulReg16550::Write_LCR

; 103  :     virtual void    Write_LCR(UINT8 uData) { WRITE_REGISTER_ULONG( (PULONG)&(m_pRegAddr->lcr), uData);};

  00000		 |$LN5@Write_LCR@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37057|
  00004	e590303c	 ldr         r3, [r0, #0x3C]
  00008	e283000c	 add         r0, r3, #0xC
  0000c	eb000000	 bl          WRITE_REGISTER_ULONG
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M37058|

			 ENDP  ; |?Write_LCR@CBulReg16550@@UAAXE@Z|, CBulReg16550::Write_LCR


  00000			 AREA	 |.pdata|, PDATA
|$T37070| DCD	|$LN5@Read_LCR@2|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_LCR@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_LCR

; 104  :     virtual UINT8   Read_LCR() { return (UCHAR)READ_REGISTER_ULONG( (PULONG)&(m_pRegAddr->lcr));};

  00000		 |$LN5@Read_LCR@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37067|
  00004	e590303c	 ldr         r3, [r0, #0x3C]
  00008	e283000c	 add         r0, r3, #0xC
  0000c	eb000000	 bl          READ_REGISTER_ULONG
  00010	e20000ff	 and         r0, r0, #0xFF
  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M37068|

			 ENDP  ; |?Read_LCR@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_LCR


  00000			 AREA	 |.pdata|, PDATA
|$T37079| DCD	|$LN5@Write_MCR@2|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_MCR@CBulReg16550@@UAAXE@Z| PROC ; CBulReg16550::Write_MCR

; 105  :     virtual void    Write_MCR(UINT8 uData) { WRITE_REGISTER_ULONG( (PULONG)&(m_pRegAddr->mcr), uData);};

  00000		 |$LN5@Write_MCR@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37076|
  00004	e590303c	 ldr         r3, [r0, #0x3C]
  00008	e2830010	 add         r0, r3, #0x10
  0000c	eb000000	 bl          WRITE_REGISTER_ULONG
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M37077|

			 ENDP  ; |?Write_MCR@CBulReg16550@@UAAXE@Z|, CBulReg16550::Write_MCR


  00000			 AREA	 |.pdata|, PDATA
|$T37089| DCD	|$LN5@Read_MCR@2|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_MCR@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_MCR

; 106  :     virtual UINT8   Read_MCR() { return (UCHAR) READ_REGISTER_ULONG( (PULONG)&(m_pRegAddr->mcr) );};

  00000		 |$LN5@Read_MCR@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37086|
  00004	e590303c	 ldr         r3, [r0, #0x3C]
  00008	e2830010	 add         r0, r3, #0x10
  0000c	eb000000	 bl          READ_REGISTER_ULONG
  00010	e20000ff	 and         r0, r0, #0xFF
  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M37087|

			 ENDP  ; |?Read_MCR@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_MCR


  00000			 AREA	 |.pdata|, PDATA
|$T37098| DCD	|$LN5@Write_LSR@2|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_LSR@CBulReg16550@@UAAXE@Z| PROC ; CBulReg16550::Write_LSR

; 107  :     virtual void    Write_LSR(UINT8 uData) { WRITE_REGISTER_ULONG( (PULONG)&(m_pRegAddr->lsr), uData);};

  00000		 |$LN5@Write_LSR@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37095|
  00004	e590303c	 ldr         r3, [r0, #0x3C]
  00008	e2830014	 add         r0, r3, #0x14
  0000c	eb000000	 bl          WRITE_REGISTER_ULONG
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M37096|

			 ENDP  ; |?Write_LSR@CBulReg16550@@UAAXE@Z|, CBulReg16550::Write_LSR


  00000			 AREA	 |.pdata|, PDATA
|$T37108| DCD	|$LN5@Read_LSR@2|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_LSR@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_LSR

; 108  :     virtual UINT8   Read_LSR() { return (UCHAR) READ_REGISTER_ULONG( (PULONG)&(m_pRegAddr->lsr) );};

  00000		 |$LN5@Read_LSR@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37105|
  00004	e590303c	 ldr         r3, [r0, #0x3C]
  00008	e2830014	 add         r0, r3, #0x14
  0000c	eb000000	 bl          READ_REGISTER_ULONG
  00010	e20000ff	 and         r0, r0, #0xFF
  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M37106|

			 ENDP  ; |?Read_LSR@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_LSR


  00000			 AREA	 |.pdata|, PDATA
|$T37117| DCD	|$LN5@Write_MSR@2|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_MSR@CBulReg16550@@UAAXE@Z| PROC ; CBulReg16550::Write_MSR

; 109  :     virtual void    Write_MSR(UINT8 uData) { WRITE_REGISTER_ULONG( (PULONG)&(m_pRegAddr->msr), uData) ; };

  00000		 |$LN5@Write_MSR@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37114|
  00004	e590303c	 ldr         r3, [r0, #0x3C]
  00008	e2830018	 add         r0, r3, #0x18
  0000c	eb000000	 bl          WRITE_REGISTER_ULONG
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M37115|

			 ENDP  ; |?Write_MSR@CBulReg16550@@UAAXE@Z|, CBulReg16550::Write_MSR


  00000			 AREA	 |.pdata|, PDATA
|$T37127| DCD	|$LN5@Read_MSR@2|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_MSR@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_MSR

; 110  :     virtual UINT8   Read_MSR() { return (UCHAR) READ_REGISTER_ULONG( (PULONG)&(m_pRegAddr->msr)); };

  00000		 |$LN5@Read_MSR@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37124|
  00004	e590303c	 ldr         r3, [r0, #0x3C]
  00008	e2830018	 add         r0, r3, #0x18
  0000c	eb000000	 bl          READ_REGISTER_ULONG
  00010	e20000ff	 and         r0, r0, #0xFF
  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M37125|

			 ENDP  ; |?Read_MSR@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_MSR


  00000			 AREA	 |.pdata|, PDATA
|$T37136| DCD	|$LN5@Write_SCR@2|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_SCR@CBulReg16550@@UAAXE@Z| PROC ; CBulReg16550::Write_SCR

; 111  :     virtual void    Write_SCR(UINT8 uData) { WRITE_REGISTER_ULONG( (PULONG)&(m_pRegAddr->scr), uData );};

  00000		 |$LN5@Write_SCR@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37133|
  00004	e590303c	 ldr         r3, [r0, #0x3C]
  00008	e283001c	 add         r0, r3, #0x1C
  0000c	eb000000	 bl          WRITE_REGISTER_ULONG
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M37134|

			 ENDP  ; |?Write_SCR@CBulReg16550@@UAAXE@Z|, CBulReg16550::Write_SCR


  00000			 AREA	 |.pdata|, PDATA
|$T37146| DCD	|$LN5@Read_SCR@2|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_SCR@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_SCR

; 112  :     virtual UINT8   Read_SCR() { return (UCHAR) READ_REGISTER_ULONG( (PULONG)&(m_pRegAddr->scr)); };

  00000		 |$LN5@Read_SCR@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37143|
  00004	e590303c	 ldr         r3, [r0, #0x3C]
  00008	e283001c	 add         r0, r3, #0x1C
  0000c	eb000000	 bl          READ_REGISTER_ULONG
  00010	e20000ff	 and         r0, r0, #0xFF
  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M37144|

			 ENDP  ; |?Read_SCR@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_SCR


  00000			 AREA	 |.pdata|, PDATA
|$T37155| DCD	|$LN5@Write_SIR|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_SIR@CBulReg16550@@UAAXE@Z| PROC ; CBulReg16550::Write_SIR

; 117  :     virtual void    Write_SIR(UINT8 uData) { WRITE_REGISTER_ULONG( (PULONG)&(m_pRegAddr->irdasel), uData);};

  00000		 |$LN5@Write_SIR|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37152|
  00004	e590303c	 ldr         r3, [r0, #0x3C]
  00008	e2830020	 add         r0, r3, #0x20
  0000c	eb000000	 bl          WRITE_REGISTER_ULONG
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M37153|

			 ENDP  ; |?Write_SIR@CBulReg16550@@UAAXE@Z|, CBulReg16550::Write_SIR


  00000			 AREA	 |.pdata|, PDATA
|$T37165| DCD	|$LN5@Read_SIR|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_SIR@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_SIR

; 118  :     virtual UINT8    Read_SIR() { return (UCHAR) READ_REGISTER_ULONG( (PULONG)&(m_pRegAddr->irdasel)); };

  00000		 |$LN5@Read_SIR|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37162|
  00004	e590303c	 ldr         r3, [r0, #0x3C]
  00008	e2830020	 add         r0, r3, #0x20
  0000c	eb000000	 bl          READ_REGISTER_ULONG
  00010	e20000ff	 and         r0, r0, #0xFF
  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M37163|

			 ENDP  ; |?Read_SIR@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_SIR


  00000			 AREA	 |.pdata|, PDATA
|$T37175| DCD	|$LN5@Read_FIOR|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_FIOR@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_FIOR

; 120  :     virtual UINT8   Read_FIOR() { return (UCHAR) READ_REGISTER_ULONG( (PULONG)&(m_pRegAddr->fior)); };

  00000		 |$LN5@Read_FIOR|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37172|
  00004	e590303c	 ldr         r3, [r0, #0x3C]
  00008	e2830024	 add         r0, r3, #0x24
  0000c	eb000000	 bl          READ_REGISTER_ULONG
  00010	e20000ff	 and         r0, r0, #0xFF
  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M37173|

			 ENDP  ; |?Read_FIOR@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_FIOR


  00000			 AREA	 |.pdata|, PDATA
|$T37185| DCD	|$LN5@Read_ABR|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_ABR@CBulReg16550@@UAAEXZ| PROC	; CBulReg16550::Read_ABR

; 121  :     virtual UINT8   Read_ABR() { return (UCHAR) READ_REGISTER_ULONG( (PULONG)&(m_pRegAddr->abr));};

  00000		 |$LN5@Read_ABR|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37182|
  00004	e590303c	 ldr         r3, [r0, #0x3C]
  00008	e2830028	 add         r0, r3, #0x28
  0000c	eb000000	 bl          READ_REGISTER_ULONG
  00010	e20000ff	 and         r0, r0, #0xFF
  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M37183|

			 ENDP  ; |?Read_ABR@CBulReg16550@@UAAEXZ|, CBulReg16550::Read_ABR


  00000			 AREA	 |.pdata|, PDATA
|$T37194| DCD	|$LN5@Write_ABR|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_ABR@CBulReg16550@@UAAXE@Z| PROC ; CBulReg16550::Write_ABR

; 122  :     virtual void    Write_ABR(UINT8 uData) {  WRITE_REGISTER_ULONG( (PULONG)&(m_pRegAddr->abr),uData);};

  00000		 |$LN5@Write_ABR|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37191|
  00004	e590303c	 ldr         r3, [r0, #0x3C]
  00008	e2830028	 add         r0, r3, #0x28
  0000c	eb000000	 bl          WRITE_REGISTER_ULONG
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M37192|

			 ENDP  ; |?Write_ABR@CBulReg16550@@UAAXE@Z|, CBulReg16550::Write_ABR

	EXPORT	|??1CBulReg16550@@UAA@XZ|		; CBulReg16550::~CBulReg16550

  00000			 AREA	 |.pdata|, PDATA
|$T37205| DCD	|$LN7@CBulReg165@2|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CBulReg16550@@UAA@XZ| PROC		; CBulReg16550::~CBulReg16550
  00000		 |$LN7@CBulReg165@2|
  00000		 |$M37202|
  00000	e59f3004	 ldr         r3, [pc, #4]
  00004	e5803000	 str         r3, [r0]
  00008	e12fff1e	 bx          lr
  0000c		 |$LN8@CBulReg165@2|
  0000c		 |$LN9@CBulReg165@2|
  0000c	00000000	 DCD         |??_7CReg16550@@6B@|
  00010		 |$M37203|

			 ENDP  ; |??1CBulReg16550@@UAA@XZ|, CBulReg16550::~CBulReg16550

; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\serial\bul16550.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T37215| DCD	|$LN5@Backup|
	DCD	0x40001201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Backup@CBulReg16550@@UAAXXZ| PROC	; CBulReg16550::Backup

; 52   : {

  00000		 |$LN5@Backup|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37212|
  00004	e1a04000	 mov         r4, r0

; 53   :     CReg16550::Backup();

  00008	eb000000	 bl          |?Backup@CReg16550@@UAAXXZ|

; 54   :     m_SIRBackup = Read_SIR();

  0000c	e5943000	 ldr         r3, [r4]
  00010	e1a00004	 mov         r0, r4
  00014	e593305c	 ldr         r3, [r3, #0x5C]
  00018	e1a0e00f	 mov         lr, pc
  0001c	e12fff13	 bx          r3

; 55   :     // Backup happens during power off. So We need turn off the IRDA
; 56   :     Write_SIR(0);

  00020	e5943000	 ldr         r3, [r4]
  00024	e1a02000	 mov         r2, r0
  00028	e3a01000	 mov         r1, #0
  0002c	e5933058	 ldr         r3, [r3, #0x58]
  00030	e1a00004	 mov         r0, r4
  00034	e5c42040	 strb        r2, [r4, #0x40]
  00038	e1a0e00f	 mov         lr, pc
  0003c	e12fff13	 bx          r3

; 57   : }

  00040	e8bd4010	 ldmia       sp!, {r4, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$M37213|

			 ENDP  ; |?Backup@CBulReg16550@@UAAXXZ|, CBulReg16550::Backup


  00000			 AREA	 |.pdata|, PDATA
|$T37223| DCD	|$LN6@Restore|
	DCD	0x40000e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Restore@CBulReg16550@@UAAXXZ| PROC	; CBulReg16550::Restore

; 59   : {

  00000		 |$LN6@Restore|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37220|
  00004	e1a04000	 mov         r4, r0

; 60   :     if (m_fIsBackedUp) {

  00008	e5943010	 ldr         r3, [r4, #0x10]
  0000c	e3530000	 cmp         r3, #0
  00010	0a000006	 beq         |$LN1@Restore|

; 61   :         CReg16550::Restore();

  00014	eb000000	 bl          |?Restore@CReg16550@@UAAXXZ|

; 62   :         Write_SIR(m_SIRBackup);

  00018	e5943000	 ldr         r3, [r4]
  0001c	e5d41040	 ldrb        r1, [r4, #0x40]
  00020	e1a00004	 mov         r0, r4
  00024	e5933058	 ldr         r3, [r3, #0x58]
  00028	e1a0e00f	 mov         lr, pc
  0002c	e12fff13	 bx          r3
  00030		 |$LN1@Restore|

; 63   :     }
; 64   : }

  00030	e8bd4010	 ldmia       sp!, {r4, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M37221|

			 ENDP  ; |?Restore@CBulReg16550@@UAAXXZ|, CBulReg16550::Restore

	EXPORT	|??0CBulPdd16550@@QAA@PAGPAXPAU__HWOBJ@@@Z| ; CBulPdd16550::CBulPdd16550
	EXPORT	|??_7CBulPdd16550@@6BCSerialPDD@@@| [ DATA ] ; CBulPdd16550::`vftable'
	EXPORT	|??_7CBulPdd16550@@6BCMiniThread@@@| [ DATA ] ; CBulPdd16550::`vftable'
	EXPORT	|?Init@CBulPdd16550@@UAAHXZ|		; CBulPdd16550::Init
	EXPORT	|?PostInit@CBulPdd16550@@UAAXXZ|	; CBulPdd16550::PostInit
	EXPORT	|?PreDeinit@CSerialPDD@@UAAXXZ|		; CSerialPDD::PreDeinit
	EXPORT	|?Open@CBulPdd16550@@UAAHXZ|		; CBulPdd16550::Open
	EXPORT	|?Close@CBulPdd16550@@UAAHXZ|		; CBulPdd16550::Close
	EXPORT	|?SerialRegisterBackup@CBulPdd16550@@MAAXXZ| ; CBulPdd16550::SerialRegisterBackup
	EXPORT	|?SerialRegisterRestore@CPdd16550@@UAAXXZ| ; CPdd16550::SerialRegisterRestore
	EXPORT	|?GetDevicePowerState@CSerialPDD@@UAA?AW4_CEDEVICE_POWER_STATE@@XZ| ; CSerialPDD::GetDevicePowerState
	EXPORT	|?GetPowerCapabilities@CSerialPDD@@UAA?AU_POWER_CAPABILITIES@@XZ| ; CSerialPDD::GetPowerCapabilities
	EXPORT	|?XmitInterruptHandler@CBulPdd16550@@UAAXPAEPAK@Z| ; CBulPdd16550::XmitInterruptHandler
	EXPORT	|?XmitComChar@CBulPdd16550@@UAAXE@Z|	; CBulPdd16550::XmitComChar
	EXPORT	|?EnableXmitInterrupt@CBulPdd16550@@UAAHH@Z| ; CBulPdd16550::EnableXmitInterrupt
	EXPORT	|?GetRxBufferSize@CSerialPDD@@UAAKXZ|	; CSerialPDD::GetRxBufferSize
	EXPORT	|?IsCTSOff@CSerialPDD@@UAAHXZ|		; CSerialPDD::IsCTSOff
	EXPORT	|?IsDSROff@CSerialPDD@@UAAHXZ|		; CSerialPDD::IsDSROff
	EXPORT	|?LineInterruptHandler@CPdd16550@@UAAXXZ| ; CPdd16550::LineInterruptHandler
	EXPORT	|?SetDCB@CBulPdd16550@@UAAHPAU_DCB@@@Z|	; CBulPdd16550::SetDCB
	EXPORT	|?GetDivisorOfRate@CBulPdd16550@@UAAHKPAK@Z| ; CBulPdd16550::GetDivisorOfRate
	EXPORT	|?SetOutputMode@CBulPdd16550@@UAAXHH@Z|	; CBulPdd16550::SetOutputMode
	EXPORT	|?GetOutputMode@CSerialPDD@@UAAXPAH0@Z|	; CSerialPDD::GetOutputMode
	EXPORT	|?MapHardware@CBulPdd16550@@UAAHXZ|	; CBulPdd16550::MapHardware
	EXPORT	|?CreateHardwareAccess@CBulPdd16550@@UAAHXZ| ; CBulPdd16550::CreateHardwareAccess
	EXPORT	|?GetWriteableSize@CBulPdd16550@@UAAKXZ| ; CBulPdd16550::GetWriteableSize
	EXPORT	|?GetWaterMark@CBulPdd16550@@UAAKXZ|	; CBulPdd16550::GetWaterMark
	EXPORT	|?GetWaterMarkBit@CBulPdd16550@@UAAEXZ|	; CBulPdd16550::GetWaterMarkBit
	EXPORT	|?InitIR@CBulPdd16550@@UAAHH@Z|		; CBulPdd16550::InitIR
	IMPORT	|??0CPdd16550@@QAA@PAGPAXPAU__HWOBJ@@@Z| ; CPdd16550::CPdd16550
	IMPORT	|?ThreadRun@CPdd16550@@EAAKXZ|		; CPdd16550::ThreadRun
	IMPORT	|??_ECBulPdd16550@@UAAPAXI@Z|, WEAK |??_GCBulPdd16550@@UAAPAXI@Z| ; CBulPdd16550::`vector deleting destructor', CBulPdd16550::`scalar deleting destructor'
	IMPORT	|?Ioctl@CSerialPDD@@UAAHKPAEK0KPAK@Z|	; CSerialPDD::Ioctl
	IMPORT	|?InitialPower@CSerialPDD@@UAAHH@Z|	; CSerialPDD::InitialPower
	IMPORT	|?PowerOff@CSerialPDD@@UAAHXZ|		; CSerialPDD::PowerOff
	IMPORT	|?PowerOn@CSerialPDD@@UAAHXZ|		; CSerialPDD::PowerOn
	IMPORT	|?SetDevicePowerState@CSerialPDD@@UAAHW4_CEDEVICE_POWER_STATE@@@Z| ; CSerialPDD::SetDevicePowerState
	IMPORT	|?InitialEnableInterrupt@CPdd16550@@UAAHH@Z| ; CPdd16550::InitialEnableInterrupt
	IMPORT	|?NotifyPDDInterrupt@CSerialPDD@@UAAHW4INTERRUPT_TYPE@@@Z| ; CSerialPDD::NotifyPDDInterrupt
	IMPORT	|?GetInterruptType@CSerialPDD@@UAA?AW4INTERRUPT_TYPE@@XZ| ; CSerialPDD::GetInterruptType
	IMPORT	|?EventCallback@CSerialPDD@@UAAHKK@Z|	; CSerialPDD::EventCallback
	IMPORT	|?DataReplaced@CSerialPDD@@UAAHPAEH@Z|	; CSerialPDD::DataReplaced
	IMPORT	|?PurgeComm@CSerialPDD@@UAAHK@Z|	; CSerialPDD::PurgeComm
	IMPORT	|?InitXmit@CPdd16550@@UAAHH@Z|		; CPdd16550::InitXmit
	IMPORT	|?CancelXmit@CPdd16550@@UAAHXZ|		; CPdd16550::CancelXmit
	IMPORT	|?InitReceive@CPdd16550@@UAAHH@Z|	; CPdd16550::InitReceive
	IMPORT	|?ReceiveInterruptHandler@CPdd16550@@UAAKPAEPAK@Z| ; CPdd16550::ReceiveInterruptHandler
	IMPORT	|?CancelReceive@CPdd16550@@UAAKXZ|	; CPdd16550::CancelReceive
	IMPORT	|?InitModem@CPdd16550@@UAAHH@Z|		; CPdd16550::InitModem
	IMPORT	|?ModemInterruptHandler@CPdd16550@@UAAXXZ| ; CPdd16550::ModemInterruptHandler
	IMPORT	|?GetModemStatus@CPdd16550@@UAAKXZ|	; CPdd16550::GetModemStatus
	IMPORT	|?SetDTR@CPdd16550@@UAAXH@Z|		; CPdd16550::SetDTR
	IMPORT	|?SetRTS@CPdd16550@@UAAXH@Z|		; CPdd16550::SetRTS
	IMPORT	|?InitLine@CPdd16550@@UAAHH@Z|		; CPdd16550::InitLine
	IMPORT	|?SetBreak@CPdd16550@@UAAXH@Z|		; CPdd16550::SetBreak
	IMPORT	|?SetBaudRate@CPdd16550@@UAAHKH@Z|	; CPdd16550::SetBaudRate
	IMPORT	|?SetByteSize@CPdd16550@@UAAHK@Z|	; CPdd16550::SetByteSize
	IMPORT	|?SetParity@CPdd16550@@UAAHK@Z|		; CPdd16550::SetParity
	IMPORT	|?SetStopBits@CPdd16550@@UAAHK@Z|	; CPdd16550::SetStopBits
	IMPORT	|?SetDefaultConfiguration@CSerialPDD@@UAAXXZ| ; CSerialPDD::SetDefaultConfiguration
	IMPORT	|?SetReceiveError@CSerialPDD@@UAAXK@Z|	; CSerialPDD::SetReceiveError
	IMPORT	|?GetReceivedError@CSerialPDD@@UAAKXZ|	; CSerialPDD::GetReceivedError
	IMPORT	|?WaitForTransmitterEmpty@CPdd16550@@UAAHK@Z| ; CPdd16550::WaitForTransmitterEmpty

  00000			 AREA	 |.pdata|, PDATA
|$T37236| DCD	|$LN5@CBulPdd165|
	DCD	0x40001101

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CBulPdd16550@@6BCSerialPDD@@@| DCD |??_ECBulPdd16550@@UAAPAXI@Z| ; CBulPdd16550::`vftable'
	DCD	|?Init@CBulPdd16550@@UAAHXZ|
	DCD	|?PostInit@CBulPdd16550@@UAAXXZ|
	DCD	|?PreDeinit@CSerialPDD@@UAAXXZ|
	DCD	|?Open@CBulPdd16550@@UAAHXZ|
	DCD	|?Close@CBulPdd16550@@UAAHXZ|
	DCD	|?Ioctl@CSerialPDD@@UAAHKPAEK0KPAK@Z|
	DCD	|?InitialPower@CSerialPDD@@UAAHH@Z|
	DCD	|?PowerOff@CSerialPDD@@UAAHXZ|
	DCD	|?PowerOn@CSerialPDD@@UAAHXZ|
	DCD	|?SetDevicePowerState@CSerialPDD@@UAAHW4_CEDEVICE_POWER_STATE@@@Z|
	DCD	|?SerialRegisterBackup@CBulPdd16550@@MAAXXZ|
	DCD	|?SerialRegisterRestore@CPdd16550@@UAAXXZ|
	DCD	|?GetDevicePowerState@CSerialPDD@@UAA?AW4_CEDEVICE_POWER_STATE@@XZ|
	DCD	|?GetPowerCapabilities@CSerialPDD@@UAA?AU_POWER_CAPABILITIES@@XZ|
	DCD	|?InitialEnableInterrupt@CPdd16550@@UAAHH@Z|
	DCD	|?NotifyPDDInterrupt@CSerialPDD@@UAAHW4INTERRUPT_TYPE@@@Z|
	DCD	|?GetInterruptType@CSerialPDD@@UAA?AW4INTERRUPT_TYPE@@XZ|
	DCD	|?EventCallback@CSerialPDD@@UAAHKK@Z|
	DCD	|?DataReplaced@CSerialPDD@@UAAHPAEH@Z|
	DCD	|?PurgeComm@CSerialPDD@@UAAHK@Z|
	DCD	|?InitXmit@CPdd16550@@UAAHH@Z|
	DCD	|?XmitInterruptHandler@CBulPdd16550@@UAAXPAEPAK@Z|
	DCD	|?XmitComChar@CBulPdd16550@@UAAXE@Z|
	DCD	|?EnableXmitInterrupt@CBulPdd16550@@UAAHH@Z|
	DCD	|?CancelXmit@CPdd16550@@UAAHXZ|
	DCD	|?InitReceive@CPdd16550@@UAAHH@Z|
	DCD	|?GetRxBufferSize@CSerialPDD@@UAAKXZ|
	DCD	|?ReceiveInterruptHandler@CPdd16550@@UAAKPAEPAK@Z|
	DCD	|?CancelReceive@CPdd16550@@UAAKXZ|
	DCD	|?InitModem@CPdd16550@@UAAHH@Z|
	DCD	|?ModemInterruptHandler@CPdd16550@@UAAXXZ|
	DCD	|?GetModemStatus@CPdd16550@@UAAKXZ|
	DCD	|?SetDTR@CPdd16550@@UAAXH@Z|
	DCD	|?SetRTS@CPdd16550@@UAAXH@Z|
	DCD	|?IsCTSOff@CSerialPDD@@UAAHXZ|
	DCD	|?IsDSROff@CSerialPDD@@UAAHXZ|
	DCD	|?InitLine@CPdd16550@@UAAHH@Z|
	DCD	|?LineInterruptHandler@CPdd16550@@UAAXXZ|
	DCD	|?SetBreak@CPdd16550@@UAAXH@Z|
	DCD	|?SetBaudRate@CPdd16550@@UAAHKH@Z|
	DCD	|?SetByteSize@CPdd16550@@UAAHK@Z|
	DCD	|?SetParity@CPdd16550@@UAAHK@Z|
	DCD	|?SetStopBits@CPdd16550@@UAAHK@Z|
	DCD	|?SetDCB@CBulPdd16550@@UAAHPAU_DCB@@@Z|
	DCD	|?SetDefaultConfiguration@CSerialPDD@@UAAXXZ|
	DCD	|?GetDivisorOfRate@CBulPdd16550@@UAAHKPAK@Z|
	DCD	|?SetOutputMode@CBulPdd16550@@UAAXHH@Z|
	DCD	|?GetOutputMode@CSerialPDD@@UAAXPAH0@Z|
	DCD	|?SetReceiveError@CSerialPDD@@UAAXK@Z|
	DCD	|?GetReceivedError@CSerialPDD@@UAAKXZ|
	DCD	|?MapHardware@CBulPdd16550@@UAAHXZ|
	DCD	|?CreateHardwareAccess@CBulPdd16550@@UAAHXZ|
	DCD	|?WaitForTransmitterEmpty@CPdd16550@@UAAHK@Z|
	DCD	|?GetWriteableSize@CBulPdd16550@@UAAKXZ|
	DCD	|?GetWaterMark@CBulPdd16550@@UAAKXZ|
	DCD	|?GetWaterMarkBit@CBulPdd16550@@UAAEXZ|
	DCD	|?InitIR@CBulPdd16550@@UAAHH@Z|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CBulPdd16550@@6BCMiniThread@@@| DCD |?ThreadRun@CPdd16550@@EAAKXZ| ; CBulPdd16550::`vftable'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CBulPdd16550@@QAA@PAGPAXPAU__HWOBJ@@@Z| PROC ; CBulPdd16550::CBulPdd16550

; 67   : {

  00000		 |$LN5@CBulPdd165|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37233|
  00004	e1a04000	 mov         r4, r0
  00008	eb000000	 bl          |??0CPdd16550@@QAA@PAGPAXPAU__HWOBJ@@@Z|
  0000c	e59f302c	 ldr         r3, [pc, #0x2C]
  00010	e59f2024	 ldr         r2, [pc, #0x24]

; 68   :     m_pBaseAddress = NULL;

  00014	e3a01000	 mov         r1, #0
  00018	e5841148	 str         r1, [r4, #0x148]

; 69   :     m_pGPIOReg = NULL;

  0001c	e584114c	 str         r1, [r4, #0x14C]

; 70   :     m_pDCCLKReg = NULL;

  00020	e5843000	 str         r3, [r4]
  00024	e58420fc	 str         r2, [r4, #0xFC]
  00028	e5841150	 str         r1, [r4, #0x150]

; 71   :     m_fIRConnected = FALSE;

  0002c	e5841154	 str         r1, [r4, #0x154]

; 72   : }

  00030	e1a00004	 mov         r0, r4
  00034	e8bd4010	 ldmia       sp!, {r4, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$LN6@CBulPdd165|
  0003c		 |$LN7@CBulPdd165|
  0003c	00000000	 DCD         |??_7CBulPdd16550@@6BCMiniThread@@@|
  00040		 |$LN8@CBulPdd165|
  00040	00000000	 DCD         |??_7CBulPdd16550@@6BCSerialPDD@@@|
  00044		 |$M37234|

			 ENDP  ; |??0CBulPdd16550@@QAA@PAGPAXPAU__HWOBJ@@@Z|, CBulPdd16550::CBulPdd16550

; File c:\wince600\public\common\oak\inc\cserpdd.h

  00000			 AREA	 |.pdata|, PDATA
|$T37246| DCD	|$LN5@PreDeinit|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PreDeinit@CSerialPDD@@UAAXXZ| PROC	; CSerialPDD::PreDeinit

; 63   :     virtual void  PreDeinit() {;};

  00000		 |$LN5@PreDeinit|
  00000		 |$M37243|
  00000	e12fff1e	 bx          lr
  00004		 |$M37244|

			 ENDP  ; |?PreDeinit@CSerialPDD@@UAAXXZ|, CSerialPDD::PreDeinit


  00000			 AREA	 |.pdata|, PDATA
|$T37256| DCD	|$LN5@GetDeviceP|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDevicePowerState@CSerialPDD@@UAA?AW4_CEDEVICE_POWER_STATE@@XZ| PROC ; CSerialPDD::GetDevicePowerState

; 87   :     virtual CEDEVICE_POWER_STATE    GetDevicePowerState() { return m_PowerState; };

  00000		 |$LN5@GetDeviceP|
  00000		 |$M37253|
  00000	e5900018	 ldr         r0, [r0, #0x18]
  00004	e12fff1e	 bx          lr
  00008		 |$M37254|

			 ENDP  ; |?GetDevicePowerState@CSerialPDD@@UAA?AW4_CEDEVICE_POWER_STATE@@XZ|, CSerialPDD::GetDevicePowerState

	IMPORT	|memcpy|

  00000			 AREA	 |.pdata|, PDATA
|$T37268| DCD	|$LN5@GetPowerCa|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPowerCapabilities@CSerialPDD@@UAA?AU_POWER_CAPABILITIES@@XZ| PROC ; CSerialPDD::GetPowerCapabilities

; 88   :     virtual POWER_CAPABILITIES  GetPowerCapabilities() { return m_PowerCapabilities; };

  00000		 |$LN5@GetPowerCa|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37265|
  00004	e1a04001	 mov         r4, r1
  00008	e2801020	 add         r1, r0, #0x20
  0000c	e1a00004	 mov         r0, r4
  00010	e3a02030	 mov         r2, #0x30
  00014	eb000000	 bl          memcpy
  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$M37266|

			 ENDP  ; |?GetPowerCapabilities@CSerialPDD@@UAA?AU_POWER_CAPABILITIES@@XZ|, CSerialPDD::GetPowerCapabilities


  00000			 AREA	 |.pdata|, PDATA
|$T37278| DCD	|$LN5@GetRxBuffe|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetRxBufferSize@CSerialPDD@@UAAKXZ| PROC ; CSerialPDD::GetRxBufferSize

; 131  :     virtual ULONG   GetRxBufferSize() { return m_ulRxBufferSize; };

  00000		 |$LN5@GetRxBuffe|
  00000		 |$M37275|
  00000	e59000f4	 ldr         r0, [r0, #0xF4]
  00004	e12fff1e	 bx          lr
  00008		 |$M37276|

			 ENDP  ; |?GetRxBufferSize@CSerialPDD@@UAAKXZ|, CSerialPDD::GetRxBufferSize


  00000			 AREA	 |.pdata|, PDATA
|$T37290| DCD	|$LN7@IsCTSOff|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsCTSOff@CSerialPDD@@UAAHXZ| PROC	; CSerialPDD::IsCTSOff

; 141  :     virtual BOOL    IsCTSOff() {  return ((GetModemStatus() & MS_CTS_ON)==0) ; };

  00000		 |$LN7@IsCTSOff|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37287|
  00004	e5903000	 ldr         r3, [r0]
  00008	e5933080	 ldr         r3, [r3, #0x80]
  0000c	e1a0e00f	 mov         lr, pc
  00010	e12fff13	 bx          r3
  00014	e3100010	 tst         r0, #0x10
  00018	03a00001	 moveq       r0, #1
  0001c	049de004	 ldreq       lr, [sp], #4
  00020	13a00000	 movne       r0, #0
  00024	149de004	 ldrne       lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$M37288|

			 ENDP  ; |?IsCTSOff@CSerialPDD@@UAAHXZ|, CSerialPDD::IsCTSOff


  00000			 AREA	 |.pdata|, PDATA
|$T37302| DCD	|$LN7@IsDSROff|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsDSROff@CSerialPDD@@UAAHXZ| PROC	; CSerialPDD::IsDSROff

; 142  :     virtual BOOL    IsDSROff() {  return ((GetModemStatus() & MS_DSR_ON)==0) ; };

  00000		 |$LN7@IsDSROff|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37299|
  00004	e5903000	 ldr         r3, [r0]
  00008	e5933080	 ldr         r3, [r3, #0x80]
  0000c	e1a0e00f	 mov         lr, pc
  00010	e12fff13	 bx          r3
  00014	e3100020	 tst         r0, #0x20
  00018	03a00001	 moveq       r0, #1
  0001c	049de004	 ldreq       lr, [sp], #4
  00020	13a00000	 movne       r0, #0
  00024	149de004	 ldrne       lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$M37300|

			 ENDP  ; |?IsDSROff@CSerialPDD@@UAAHXZ|, CSerialPDD::IsDSROff


  00000			 AREA	 |.pdata|, PDATA
|$T37312| DCD	|$LN7@GetOutputM|
	DCD	0x40000700
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetOutputMode@CSerialPDD@@UAAXPAH0@Z| PROC ; CSerialPDD::GetOutputMode

; 173  :     virtual void    GetOutputMode(BOOL* pUseIR, BOOL* pUse9Pin) {

  00000		 |$LN7@GetOutputM|
  00000		 |$M37309|
  00000	e3510000	 cmp         r1, #0

; 174  :         if (pUseIR) *pUseIR = m_fIREnable;

  00004	159030ec	 ldrne       r3, [r0, #0xEC]
  00008	15813000	 strne       r3, [r1]

; 175  :         if (pUse9Pin) *pUse9Pin = m_f9PinEnable;

  0000c	e3520000	 cmp         r2, #0
  00010	159030f0	 ldrne       r3, [r0, #0xF0]
  00014	15823000	 strne       r3, [r2]

; 176  :     }

  00018	e12fff1e	 bx          lr
  0001c		 |$M37310|

			 ENDP  ; |?GetOutputMode@CSerialPDD@@UAAXPAH0@Z|, CSerialPDD::GetOutputMode

; File c:\wince600\public\common\oak\inc\pdd16550.h

  00000			 AREA	 |.pdata|, PDATA
|$T37320| DCD	|$LN5@SerialRegi@2|
	DCD	0x40000801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SerialRegisterRestore@CPdd16550@@UAAXXZ| PROC ; CPdd16550::SerialRegisterRestore

; 126  :     virtual void    SerialRegisterRestore() { m_pReg16550->Restore(); };

  00000		 |$LN5@SerialRegi@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37317|
  00004	e5900128	 ldr         r0, [r0, #0x128]
  00008	e5903000	 ldr         r3, [r0]
  0000c	e5933054	 ldr         r3, [r3, #0x54]
  00010	e1a0e00f	 mov         lr, pc
  00014	e12fff13	 bx          r3
  00018	e49de004	 ldr         lr, [sp], #4
  0001c	e12fff1e	 bx          lr
  00020		 |$M37318|

			 ENDP  ; |?SerialRegisterRestore@CPdd16550@@UAAXXZ|, CPdd16550::SerialRegisterRestore

	IMPORT	|?GetLineStatus@CPdd16550@@QAAEXZ|	; CPdd16550::GetLineStatus

  00000			 AREA	 |.pdata|, PDATA
|$T37328| DCD	|$LN5@LineInterr|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?LineInterruptHandler@CPdd16550@@UAAXXZ| PROC ; CPdd16550::LineInterruptHandler

; 169  :     virtual void    LineInterruptHandler() { GetLineStatus();};

  00000		 |$LN5@LineInterr|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37325|
  00004	eb000000	 bl          |?GetLineStatus@CPdd16550@@QAAEXZ|
  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M37326|

			 ENDP  ; |?LineInterruptHandler@CPdd16550@@UAAXXZ|, CPdd16550::LineInterruptHandler

	EXPORT	|??1CBulPdd16550@@UAA@XZ|		; CBulPdd16550::~CBulPdd16550
	IMPORT	|??1CPdd16550@@UAA@XZ|			; CPdd16550::~CPdd16550
	IMPORT	|MmUnmapIoSpace|
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\serial\bul16550.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T37336| DCD	|$LN8@CBulPdd165@2|
	DCD	0x40001b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CBulPdd16550@@UAA@XZ| PROC		; CBulPdd16550::~CBulPdd16550

; 74   : {

  00000		 |$LN8@CBulPdd165@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37333|
  00004	e1a04000	 mov         r4, r0

; 75   :     if (m_pBaseAddress) 

  00008	e5943148	 ldr         r3, [r4, #0x148]
  0000c	e59f1054	 ldr         r1, [pc, #0x54]
  00010	e59f204c	 ldr         r2, [pc, #0x4C]
  00014	e3530000	 cmp         r3, #0

; 76   :         MmUnmapIoSpace(m_pBaseAddress,0);

  00018	15940148	 ldrne       r0, [r4, #0x148]
  0001c	e58410fc	 str         r1, [r4, #0xFC]
  00020	13a01000	 movne       r1, #0
  00024	e5842000	 str         r2, [r4]
  00028	1b000000	 blne        MmUnmapIoSpace

; 77   :     
; 78   :     if (m_pGPIOReg)

  0002c	e594314c	 ldr         r3, [r4, #0x14C]
  00030	e3530000	 cmp         r3, #0

; 79   :         MmUnmapIoSpace(m_pGPIOReg,0);

  00034	1594014c	 ldrne       r0, [r4, #0x14C]
  00038	13a01000	 movne       r1, #0
  0003c	1b000000	 blne        MmUnmapIoSpace

; 80   :     
; 81   :     if (m_pDCCLKReg)

  00040	e5943150	 ldr         r3, [r4, #0x150]
  00044	e3530000	 cmp         r3, #0

; 82   :         MmUnmapIoSpace(m_pDCCLKReg,0);

  00048	15940150	 ldrne       r0, [r4, #0x150]
  0004c	13a01000	 movne       r1, #0
  00050	1b000000	 blne        MmUnmapIoSpace

; 83   : }

  00054	e1a00004	 mov         r0, r4
  00058	eb000000	 bl          |??1CPdd16550@@UAA@XZ|
  0005c	e8bd4010	 ldmia       sp!, {r4, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$LN9@CBulPdd165@2|
  00064		 |$LN10@CBulPdd165@2|
  00064	00000000	 DCD         |??_7CBulPdd16550@@6BCSerialPDD@@@|
  00068		 |$LN11@CBulPdd165@2|
  00068	00000000	 DCD         |??_7CBulPdd16550@@6BCMiniThread@@@|
  0006c		 |$M37334|

			 ENDP  ; |??1CBulPdd16550@@UAA@XZ|, CBulPdd16550::~CBulPdd16550

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|??_C@_1BI@BIDGGFDD@?$AAW?$AAa?$AAt?$AAe?$AAr?$AAM?$AAa?$AAr?$AAk?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@PPAFNDCI@?$AAI?$AAR?$AAC?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@BDHDGOBO@?$AAS?$AAy?$AAs?$AAI?$AAn?$AAt?$AAr?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|?Init@CPdd16550@@UAAHXZ|		; CPdd16550::Init
	IMPORT	|KernelIoControl|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|__security_check_cookie|
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul16550.h

  00000			 AREA	 |.pdata|, PDATA
|$T37385| DCD	|$LN25@Init@3|
	DCD	0xc0006702

  00000			 AREA	 |.xdata|, DATA
|$T37381| DCD	0xfffffff0

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@BIDGGFDD@?$AAW?$AAa?$AAt?$AAe?$AAr?$AAM?$AAa?$AAr?$AAk?$AAe?$AAr?$AA?$AA@| DCB "W"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "M", 0x0, "a"
	DCB	0x0, "r", 0x0, "k", 0x0, "e", 0x0, "r", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@PPAFNDCI@?$AAI?$AAR?$AAC?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AA@| DCB "I"
	DCB	0x0, "R", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "n", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@BDHDGOBO@?$AAS?$AAy?$AAs?$AAI?$AAn?$AAt?$AAr?$AA?$AA@| DCB "S", 0x0
	DCB	"y", 0x0, "s", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r", 0x0
	DCB	0x0, 0x0				; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\serial\bul16550.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T37381|

  00008		 |?Init@CBulPdd16550@@UAAHXZ| PROC	; CBulPdd16550::Init

; 85   : {

  00008		 |$LN25@Init@3|
  00008	e92d4030	 stmdb       sp!, {r4, r5, lr}
  0000c	e24ddf47	 sub         sp, sp, #0x47, 30
  00010		 |$M37382|
  00010	e1a04000	 mov         r4, r0
  00014	e59f3184	 ldr         r3, [pc, #0x184]
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3118	 str         r3, [sp, #0x118]

; 86   :     // IST Setup . This is only need when Root Bus driver does not allocate any resource for this driver.
; 87   :     DDKISRINFO ddi;
; 88   :     ddi.dwIrq = MAXDWORD; ddi.dwSysintr = MAXDWORD;
; 89   :     if (GetIsrInfo(&ddi)==ERROR_SUCCESS && (ddi.dwSysintr==0 || ddi.dwSysintr>=0xff )) { // We need rework Interrupt

  00020	e5943004	 ldr         r3, [r4, #4]
  00024	e3e02000	 mvn         r2, #0
  00028	e1a01002	 mov         r1, r2
  0002c	e3530000	 cmp         r3, #0
  00030	e58d2010	 str         r2, [sp, #0x10]
  00034	e58d2014	 str         r2, [sp, #0x14]
  00038	0a000007	 beq         |$LN13@Init@3|
  0003c	e3a02f43	 mov         r2, #0x43, 30
  00040	e28d100c	 add         r1, sp, #0xC
  00044	e1a00003	 mov         r0, r3
  00048	e58d200c	 str         r2, [sp, #0xC]
  0004c	eb000000	 bl          DDKReg_GetIsrInfo
  00050	e59d1014	 ldr         r1, [sp, #0x14]
  00054	e59d2010	 ldr         r2, [sp, #0x10]
  00058	ea000000	 b           |$LN12@Init@3|
  0005c		 |$LN13@Init@3|
  0005c	e3a00001	 mov         r0, #1
  00060		 |$LN12@Init@3|
  00060	e3500000	 cmp         r0, #0
  00064	1a000019	 bne         |$LN18@Init@3|
  00068	e3510000	 cmp         r1, #0
  0006c	0a000001	 beq         |$LN6@Init@3|
  00070	e35100ff	 cmp         r1, #0xFF
  00074	3a000015	 bcc         |$LN18@Init@3|
  00078		 |$LN6@Init@3|

; 90   :         if (ddi.dwIrq!=0 && ddi.dwIrq < 0xff &&
; 91   :                 KernelIoControl(IOCTL_HAL_REQUEST_SYSINTR, &ddi.dwIrq, sizeof(UINT32), &ddi.dwSysintr, sizeof(UINT32), NULL)) {

  00078	e3520000	 cmp         r2, #0
  0007c	0a000013	 beq         |$LN18@Init@3|
  00080	e35200ff	 cmp         r2, #0xFF
  00084	2a000011	 bcs         |$LN18@Init@3|
  00088	e59f010c	 ldr         r0, [pc, #0x10C]
  0008c	e3a0e000	 mov         lr, #0
  00090	e3a05004	 mov         r5, #4
  00094	e28d3014	 add         r3, sp, #0x14
  00098	e3a02004	 mov         r2, #4
  0009c	e28d1010	 add         r1, sp, #0x10
  000a0	e58de004	 str         lr, [sp, #4]
  000a4	e58d5000	 str         r5, [sp]
  000a8	eb000000	 bl          KernelIoControl
  000ac	e3500000	 cmp         r0, #0

; 92   :             // We use correct IRQ to allocate SYSINTR from system.
; 93   :             // We can put it back to the registry.
; 94   :             RegSetValueEx(DEVLOAD_SYSINTR_VALNAME,REG_DWORD,(PBYTE)&ddi.dwSysintr, sizeof(UINT32));

  000b0	159f10e0	 ldrne       r1, [pc, #0xE0]
  000b4	15940004	 ldrne       r0, [r4, #4]
  000b8	128de014	 addne       lr, sp, #0x14
  000bc	13a03004	 movne       r3, #4
  000c0	13a02000	 movne       r2, #0
  000c4	158d5004	 strne       r5, [sp, #4]
  000c8	158de000	 strne       lr, [sp]
  000cc	1b000000	 blne        RegSetValueExW
  000d0		 |$LN18@Init@3|

; 95   :         }
; 96   :     }
; 97   :     DWORD dwIRConnected=0;
; 98   :     if (!GetRegValue(PC_REG_SERIALIRCONNECTED_VAL_NAME,(PBYTE)&dwIRConnected,PC_REG_SERIALIRCONNECTED_VAL_LEN)) {

  000d0	e59f10bc	 ldr         r1, [pc, #0xBC]
  000d4	e3a0e000	 mov         lr, #0
  000d8	e3a03004	 mov         r3, #4
  000dc	e28d2008	 add         r2, sp, #8
  000e0	e2840004	 add         r0, r4, #4
  000e4	e58de008	 str         lr, [sp, #8]
  000e8	eb000000	 bl          |?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z|
  000ec	e3500000	 cmp         r0, #0

; 99   :         dwIRConnected=0;

  000f0	03a03000	 moveq       r3, #0
  000f4	058d3008	 streq       r3, [sp, #8]
  000f8	159d3008	 ldrne       r3, [sp, #8]

; 100  :     }
; 101  :     m_fIRConnected = (dwIRConnected!=0);
; 102  :     BOOL fReturn ;
; 103  :     if ((fReturn = CPdd16550::Init())== TRUE) {

  000fc	e1a00004	 mov         r0, r4
  00100	e3530000	 cmp         r3, #0
  00104	13a03001	 movne       r3, #1
  00108	03a03000	 moveq       r3, #0
  0010c	e5843154	 str         r3, [r4, #0x154]
  00110	eb000000	 bl          |?Init@CPdd16550@@UAAHXZ|
  00114	e1a05000	 mov         r5, r0
  00118	e3550001	 cmp         r5, #1
  0011c	1a000015	 bne         |$LN1@Init@3|

; 104  :         if (!GetRegValue(PC_REG_SERIALWATERMARK_VAL_NAME,(PBYTE)&m_dwWaterMark,sizeof(DWORD))) {

  00120	e59f1068	 ldr         r1, [pc, #0x68]
  00124	e3a03004	 mov         r3, #4
  00128	e2842f49	 add         r2, r4, #0x49, 30
  0012c	e2840004	 add         r0, r4, #4
  00130	eb000000	 bl          |?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z|
  00134	e3500000	 cmp         r0, #0

; 105  :             m_dwWaterMark = 32; // Default to Half of FIFO.

  00138	03a03020	 moveq       r3, #0x20
  0013c	05843124	 streq       r3, [r4, #0x124]

; 106  :         }
; 107  :         if (m_pReg16550) {

  00140	e5943128	 ldr         r3, [r4, #0x128]
  00144	e1b00003	 movs        r0, r3
  00148	0a00000a	 beq         |$LN1@Init@3|

; 108  :             // We have to initial FCR because it got bus specific content inside.
; 109  :             m_pReg16550->Write_FCR(0);

  0014c	e5903000	 ldr         r3, [r0]
  00150	e3a01000	 mov         r1, #0
  00154	e5933018	 ldr         r3, [r3, #0x18]
  00158	e1a0e00f	 mov         lr, pc
  0015c	e12fff13	 bx          r3

; 110  : #ifdef UART_32_BIT_PERIPHERAL_BUS
; 111  :             m_pReg16550->Write_FCR(SERIAL_FCR_PERIPHERAL_BUS);
; 112  : #endif
; 113  :             GetRegister()->Write_ABR(0);

  00160	e5940128	 ldr         r0, [r4, #0x128]
  00164	e3a01000	 mov         r1, #0
  00168	e5903000	 ldr         r3, [r0]
  0016c	e5933068	 ldr         r3, [r3, #0x68]
  00170	e1a0e00f	 mov         lr, pc
  00174	e12fff13	 bx          r3
  00178		 |$LN1@Init@3|

; 114  :         }
; 115  :     }
; 116  :     return fReturn;

  00178	e59d0118	 ldr         r0, [sp, #0x118]
  0017c	eb000000	 bl          __security_check_cookie

; 117  : }

  00180	e1a00005	 mov         r0, r5
  00184	e28ddf47	 add         sp, sp, #0x47, 30
  00188	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0018c	e12fff1e	 bx          lr
  00190		 |$LN26@Init@3|
  00190		 |$LN27@Init@3|
  00190	00000000	 DCD         |??_C@_1BI@BIDGGFDD@?$AAW?$AAa?$AAt?$AAe?$AAr?$AAM?$AAa?$AAr?$AAk?$AAe?$AAr?$AA?$AA@|
  00194		 |$LN28@Init@3|
  00194	00000000	 DCD         |??_C@_1BI@PPAFNDCI@?$AAI?$AAR?$AAC?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AA@|
  00198		 |$LN29@Init@3|
  00198	00000000	 DCD         |??_C@_1BA@BDHDGOBO@?$AAS?$AAy?$AAs?$AAI?$AAn?$AAt?$AAr?$AA?$AA@|
  0019c		 |$LN30@Init@3|
  0019c	01010098	 DCD         0x1010098
  001a0		 |$LN31@Init@3|
  001a0	00000000	 DCD         |__security_cookie|
  001a4		 |$M37383|

			 ENDP  ; |?Init@CBulPdd16550@@UAAHXZ|, CBulPdd16550::Init

	IMPORT	|?Open@CSerialPDD@@UAAHXZ|		; CSerialPDD::Open
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37417| DCD	|$LN14@Open|
	DCD	0x40001e01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\serial\bul16550.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Open@CBulPdd16550@@UAAHXZ| PROC	; CBulPdd16550::Open

; 119  : {

  00000		 |$LN14@Open|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37414|
  00004	e1a04000	 mov         r4, r0

; 120  :     BOOL bReturn =  CPdd16550::Open();

  00008	eb000000	 bl          |?Open@CSerialPDD@@UAAHXZ|
  0000c	e1b05000	 movs        r5, r0

; 121  :     if (bReturn) {        

  00010	0a000015	 beq         |$LN10@Open|

; 122  :         // Need Enable UART.
; 123  :         m_HardwareLock.Lock();   

  00014	e2840060	 add         r0, r4, #0x60
  00018	eb000000	 bl          EnterCriticalSection

; 124  :         GetRegister()->Write_IER(GetRegister()->Read_IER() | BUL_SERIAL_IER_UUE|BUL_SERIAL_IER_RTOIE);

  0001c	e5940128	 ldr         r0, [r4, #0x128]
  00020	e5903000	 ldr         r3, [r0]
  00024	e5933014	 ldr         r3, [r3, #0x14]
  00028	e1a0e00f	 mov         lr, pc
  0002c	e12fff13	 bx          r3
  00030	e5942128	 ldr         r2, [r4, #0x128]
  00034	e3801050	 orr         r1, r0, #0x50
  00038	e5923000	 ldr         r3, [r2]
  0003c	e1a00002	 mov         r0, r2
  00040	e5933010	 ldr         r3, [r3, #0x10]
  00044	e1a0e00f	 mov         lr, pc
  00048	e12fff13	 bx          r3

; 125  :         InitIR(TRUE);

  0004c	e5943000	 ldr         r3, [r4]
  00050	e3a01001	 mov         r1, #1
  00054	e1a00004	 mov         r0, r4
  00058	e59330e4	 ldr         r3, [r3, #0xE4]
  0005c	e1a0e00f	 mov         lr, pc
  00060	e12fff13	 bx          r3

; 126  :         m_HardwareLock.Unlock();

  00064	e2840060	 add         r0, r4, #0x60
  00068	eb000000	 bl          LeaveCriticalSection
  0006c		 |$LN10@Open|

; 127  : 
; 128  :     }
; 129  :     return bReturn;
; 130  : }

  0006c	e1a00005	 mov         r0, r5
  00070	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$M37415|

			 ENDP  ; |?Open@CBulPdd16550@@UAAHXZ|, CBulPdd16550::Open

	IMPORT	|?Close@CSerialPDD@@UAAHXZ|		; CSerialPDD::Close
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37442| DCD	|$LN14@Close|
	DCD	0x40001e01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\serial\bul16550.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Close@CBulPdd16550@@UAAHXZ| PROC	; CBulPdd16550::Close

; 132  : {

  00000		 |$LN14@Close|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37439|
  00004	e1a04000	 mov         r4, r0

; 133  :     BOOL bReturn =  CPdd16550::Close();

  00008	eb000000	 bl          |?Close@CSerialPDD@@UAAHXZ|
  0000c	e1b05000	 movs        r5, r0

; 134  :     if (bReturn) { 

  00010	0a000015	 beq         |$LN10@Close|

; 135  :         // Need Disable UART.
; 136  :         m_HardwareLock.Lock();   

  00014	e2840060	 add         r0, r4, #0x60
  00018	eb000000	 bl          EnterCriticalSection

; 137  :         InitIR(FALSE);

  0001c	e5943000	 ldr         r3, [r4]
  00020	e3a01000	 mov         r1, #0
  00024	e1a00004	 mov         r0, r4
  00028	e59330e4	 ldr         r3, [r3, #0xE4]
  0002c	e1a0e00f	 mov         lr, pc
  00030	e12fff13	 bx          r3

; 138  :         GetRegister()->Write_IER(GetRegister()->Read_IER() &~( BUL_SERIAL_IER_UUE|BUL_SERIAL_IER_RTOIE));

  00034	e5940128	 ldr         r0, [r4, #0x128]
  00038	e5903000	 ldr         r3, [r0]
  0003c	e5933014	 ldr         r3, [r3, #0x14]
  00040	e1a0e00f	 mov         lr, pc
  00044	e12fff13	 bx          r3
  00048	e5942128	 ldr         r2, [r4, #0x128]
  0004c	e20010af	 and         r1, r0, #0xAF
  00050	e5923000	 ldr         r3, [r2]
  00054	e1a00002	 mov         r0, r2
  00058	e5933010	 ldr         r3, [r3, #0x10]
  0005c	e1a0e00f	 mov         lr, pc
  00060	e12fff13	 bx          r3

; 139  :         m_HardwareLock.Unlock();

  00064	e2840060	 add         r0, r4, #0x60
  00068	eb000000	 bl          LeaveCriticalSection
  0006c		 |$LN10@Close|

; 140  :     }
; 141  :     return bReturn;
; 142  : }

  0006c	e1a00005	 mov         r0, r5
  00070	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$M37440|

			 ENDP  ; |?Close@CBulPdd16550@@UAAHXZ|, CBulPdd16550::Close

	EXPORT	|??_C@_1BE@PGPADFAN@?$AAR?$AAe?$AAg?$AAS?$AAt?$AAr?$AAi?$AAd?$AAe?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|MmMapIoSpace|
; File c:\wince600\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.pdata|, PDATA
|$T37472| DCD	|$LN16@MapHardwar|
	DCD	0x40004a02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@PGPADFAN@?$AAR?$AAe?$AAg?$AAS?$AAt?$AAr?$AAi?$AAd?$AAe?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "g", 0x0, "S", 0x0, "t", 0x0, "r", 0x0, "i"
	DCB	0x0, "d", 0x0, "e", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\serial\bul16550.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?MapHardware@CBulPdd16550@@UAAHXZ| PROC ; CBulPdd16550::MapHardware

; 145  : {

  00000		 |$LN16@MapHardwar|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd074	 sub         sp, sp, #0x74
  00008		 |$M37469|
  00008	e1a04000	 mov         r4, r0

; 146  :     if (!GetRegValue(PC_REG_REGSTRIDE_VAL_NAME,(PBYTE)&m_dwRegStride, PC_REG_REGSTRIDE_VAL_LEN)) {

  0000c	e59f1110	 ldr         r1, [pc, #0x110]
  00010	e2840004	 add         r0, r4, #4
  00014	e3a03004	 mov         r3, #4
  00018	e2842f4d	 add         r2, r4, #0x4D, 30
  0001c	eb000000	 bl          |?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z|
  00020	e3500000	 cmp         r0, #0

; 147  :         m_dwRegStride = 4;// Default is 4 for Bulverde

  00024	03a03004	 moveq       r3, #4
  00028	05843134	 streq       r3, [r4, #0x134]

; 148  :     }
; 149  :     // Get IO Window From Registry
; 150  :     if (m_pBaseAddress == NULL ) {

  0002c	e5943148	 ldr         r3, [r4, #0x148]
  00030	e3530000	 cmp         r3, #0
  00034	1a000019	 bne         |$LN3@MapHardwar|

; 151  :         DDKWINDOWINFO dwi;
; 152  :         if ( GetWindowInfo( &dwi)==ERROR_SUCCESS &&
; 153  :                 dwi.dwNumMemWindows >= 1 &&  dwi.memWindows[0].dwBase != 0 && dwi.memWindows[0].dwLen >=  m_dwRegStride * 0x10)  {

  00038	e5943004	 ldr         r3, [r4, #4]
  0003c	e3530000	 cmp         r3, #0
  00040	0a000005	 beq         |$LN11@MapHardwar|
  00044	e3a02074	 mov         r2, #0x74
  00048	e28d1000	 add         r1, sp, #0
  0004c	e1a00003	 mov         r0, r3
  00050	e58d2000	 str         r2, [sp]
  00054	eb000000	 bl          DDKReg_GetWindowInfo
  00058	ea000000	 b           |$LN10@MapHardwar|
  0005c		 |$LN11@MapHardwar|
  0005c	e3a00001	 mov         r0, #1
  00060		 |$LN10@MapHardwar|
  00060	e3500000	 cmp         r0, #0
  00064	1a00000d	 bne         |$LN3@MapHardwar|
  00068	e59d3040	 ldr         r3, [sp, #0x40]
  0006c	e3530001	 cmp         r3, #1
  00070	3a00000a	 bcc         |$LN3@MapHardwar|
  00074	e59d0044	 ldr         r0, [sp, #0x44]
  00078	e3500000	 cmp         r0, #0
  0007c	0a000007	 beq         |$LN3@MapHardwar|
  00080	e5943134	 ldr         r3, [r4, #0x134]
  00084	e59d2048	 ldr         r2, [sp, #0x48]
  00088	e1520203	 cmp         r2, r3, lsl #4
  0008c	3a000003	 bcc         |$LN3@MapHardwar|

; 154  :             PHYSICAL_ADDRESS ioPhysicalBase = { dwi.memWindows[0].dwBase, 0};

  00090	e3a01000	 mov         r1, #0

; 155  :             m_pBaseAddress = (PBULVERDE_UART_REG)MmMapIoSpace(ioPhysicalBase, dwi.memWindows[0].dwLen,FALSE);

  00094	e3a03000	 mov         r3, #0
  00098	eb000000	 bl          MmMapIoSpace
  0009c	e5840148	 str         r0, [r4, #0x148]
  000a0		 |$LN3@MapHardwar|

; 156  :         }
; 157  :     }
; 158  :     if (m_pGPIOReg == NULL) {

  000a0	e594314c	 ldr         r3, [r4, #0x14C]
  000a4	e3530000	 cmp         r3, #0
  000a8	1a000006	 bne         |$LN2@MapHardwar|
  000ac	e3a03101	 mov         r3, #1, 2

; 159  :         PHYSICAL_ADDRESS ioPhysicalBase = {BULVERDE_BASE_REG_PA_GPIO,0};

  000b0	e383060e	 orr         r0, r3, #0xE, 12

; 160  :         m_pGPIOReg = (PBULVERDE_GPIO_REG)MmMapIoSpace(ioPhysicalBase, sizeof(BULVERDE_GPIO_REG),FALSE);

  000b4	e3a03000	 mov         r3, #0
  000b8	e3a01000	 mov         r1, #0
  000bc	e3a02f53	 mov         r2, #0x53, 30
  000c0	eb000000	 bl          MmMapIoSpace
  000c4	e584014c	 str         r0, [r4, #0x14C]
  000c8		 |$LN2@MapHardwar|

; 161  :     }
; 162  :     if (m_pDCCLKReg == NULL ) {

  000c8	e5943150	 ldr         r3, [r4, #0x150]
  000cc	e3530000	 cmp         r3, #0
  000d0	1a000006	 bne         |$LN1@MapHardwar|
  000d4	e3a03441	 mov         r3, #0x41, 8

; 163  :         PHYSICAL_ADDRESS ioPhysicalBase = {BULVERDE_BASE_REG_PA_CLKMGR, 0 };

  000d8	e3830603	 orr         r0, r3, #3, 12

; 164  :         m_pDCCLKReg = (PBULVERDE_CLKMGR_REG)MmMapIoSpace(ioPhysicalBase, sizeof(BULVERDE_CLKMGR_REG),FALSE);

  000dc	e3a03000	 mov         r3, #0
  000e0	e3a01000	 mov         r1, #0
  000e4	e3a02010	 mov         r2, #0x10
  000e8	eb000000	 bl          MmMapIoSpace
  000ec	e5840150	 str         r0, [r4, #0x150]
  000f0		 |$LN1@MapHardwar|

; 165  :     }    
; 166  :     DEBUGMSG(ZONE_INIT,(TEXT("CBulPdd16550::MapHardware: m_pBaseAddress:%x m_pGPIOReg:%x m_pDCCLKReg:%x\r\n"),
; 167  :         m_pBaseAddress,m_pGPIOReg,m_pDCCLKReg));
; 168  :     
; 169  :     return(m_pBaseAddress!=NULL && m_pGPIOReg!=NULL && m_pDCCLKReg!=NULL); 

  000f0	e5943148	 ldr         r3, [r4, #0x148]
  000f4	e3530000	 cmp         r3, #0
  000f8	0a000005	 beq         |$LN8@MapHardwar|
  000fc	e594314c	 ldr         r3, [r4, #0x14C]
  00100	e3530000	 cmp         r3, #0
  00104	15943150	 ldrne       r3, [r4, #0x150]
  00108	13530000	 cmpne       r3, #0
  0010c	13a00001	 movne       r0, #1
  00110	1a000000	 bne         |$LN9@MapHardwar|
  00114		 |$LN8@MapHardwar|
  00114	e3a00000	 mov         r0, #0
  00118		 |$LN9@MapHardwar|

; 170  : }

  00118	e28dd074	 add         sp, sp, #0x74
  0011c	e8bd4010	 ldmia       sp!, {r4, lr}
  00120	e12fff1e	 bx          lr
  00124		 |$LN17@MapHardwar|
  00124		 |$LN18@MapHardwar|
  00124	00000000	 DCD         |??_C@_1BE@PGPADFAN@?$AAR?$AAe?$AAg?$AAS?$AAt?$AAr?$AAi?$AAd?$AAe?$AA?$AA@|
  00128		 |$M37470|

			 ENDP  ; |?MapHardware@CBulPdd16550@@UAAHXZ|, CBulPdd16550::MapHardware

	IMPORT	|??2@YAPAXI@Z|				; operator new

  00000			 AREA	 |.pdata|, PDATA
|$T37501| DCD	|$LN17@CreateHard|
	DCD	0x40003301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CreateHardwareAccess@CBulPdd16550@@UAAHXZ| PROC ; CBulPdd16550::CreateHardwareAccess

; 172  : {

  00000		 |$LN17@CreateHard|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M37498|
  00004	e1a05000	 mov         r5, r0

; 173  :     if (m_pReg16550)

  00008	e5953128	 ldr         r3, [r5, #0x128]
  0000c	e3530000	 cmp         r3, #0

; 174  :         return TRUE;

  00010	1a000026	 bne         |$LN14@CreateHard|

; 175  :     if (m_pBaseAddress!=NULL) {

  00014	e5953148	 ldr         r3, [r5, #0x148]
  00018	e3530000	 cmp         r3, #0
  0001c	0a000020	 beq         |$LN1@CreateHard|

; 176  :         m_pReg16550 = new CBulReg16550(m_pBaseAddress);

  00020	e3a00044	 mov         r0, #0x44
  00024	eb000000	 bl          |??2@YAPAXI@Z|
  00028	e1b06000	 movs        r6, r0
  0002c	0a000008	 beq         |$LN6@CreateHard|
  00030	e5954148	 ldr         r4, [r5, #0x148]
  00034	e3a02004	 mov         r2, #4
  00038	e1a00006	 mov         r0, r6
  0003c	e1a01004	 mov         r1, r4
  00040	eb000000	 bl          |??0CReg16550@@QAA@PAEK@Z|
  00044	e59f307c	 ldr         r3, [pc, #0x7C]
  00048	e586403c	 str         r4, [r6, #0x3C]
  0004c	e5863000	 str         r3, [r6]
  00050	ea000000	 b           |$LN7@CreateHard|
  00054		 |$LN6@CreateHard|
  00054	e3a06000	 mov         r6, #0
  00058		 |$LN7@CreateHard|
  00058	e5856128	 str         r6, [r5, #0x128]

; 177  :         if (m_pReg16550 && !m_pReg16550->Init()) { // FALSE.

  0005c	e3560000	 cmp         r6, #0
  00060	0a000015	 beq         |$LN10@CreateHard|
  00064	e5963000	 ldr         r3, [r6]
  00068	e1a00006	 mov         r0, r6
  0006c	e5933004	 ldr         r3, [r3, #4]
  00070	e1a0e00f	 mov         lr, pc
  00074	e12fff13	 bx          r3
  00078	e3500000	 cmp         r0, #0
  0007c	1a000008	 bne         |$LN1@CreateHard|

; 178  :             delete m_pReg16550 ;

  00080	e5953128	 ldr         r3, [r5, #0x128]
  00084	e1b00003	 movs        r0, r3
  00088	15903000	 ldrne       r3, [r0]
  0008c	13a01001	 movne       r1, #1
  00090	15933000	 ldrne       r3, [r3]
  00094	11a0e00f	 movne       lr, pc
  00098	112fff13	 bxne        r3

; 179  :             m_pReg16550 = NULL;

  0009c	e3a03000	 mov         r3, #0
  000a0	e5853128	 str         r3, [r5, #0x128]
  000a4		 |$LN1@CreateHard|

; 180  :         }
; 181  :             
; 182  :     }
; 183  :     return (m_pReg16550!=NULL);

  000a4	e5953128	 ldr         r3, [r5, #0x128]
  000a8	e3530000	 cmp         r3, #0
  000ac	0a000002	 beq         |$LN10@CreateHard|
  000b0		 |$LN14@CreateHard|
  000b0	e3a00001	 mov         r0, #1

; 184  : }

  000b4	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000b8	e12fff1e	 bx          lr
  000bc		 |$LN10@CreateHard|

; 180  :         }
; 181  :             
; 182  :     }
; 183  :     return (m_pReg16550!=NULL);

  000bc	e3a00000	 mov         r0, #0

; 184  : }

  000c0	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000c4	e12fff1e	 bx          lr
  000c8		 |$LN18@CreateHard|
  000c8		 |$LN19@CreateHard|
  000c8	00000000	 DCD         |??_7CBulReg16550@@6B@|
  000cc		 |$M37499|

			 ENDP  ; |?CreateHardwareAccess@CBulPdd16550@@UAAHXZ|, CBulPdd16550::CreateHardwareAccess


  00000			 AREA	 |.pdata|, PDATA
|$T37518| DCD	|$LN12@GetWaterMa|
	DCD	0x40001401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetWaterMarkBit@CBulPdd16550@@UAAEXZ| PROC ; CBulPdd16550::GetWaterMarkBit

; 193  : {

  00000		 |$LN12@GetWaterMa|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37515|

; 194  :     BYTE bReturnKey = (BYTE)s_HighWaterPairs[0].Key;

  00004	e59fe040	 ldr         lr, [pc, #0x40]

; 195  :     for (DWORD dwIndex=dim(s_HighWaterPairs)-1;dwIndex!=0; dwIndex --) {

  00008	e5904124	 ldr         r4, [r0, #0x124]
  0000c	e3a02003	 mov         r2, #3
  00010	e59e3000	 ldr         r3, [lr]
  00014	e28e1018	 add         r1, lr, #0x18
  00018	e20300ff	 and         r0, r3, #0xFF
  0001c		 |$LL4@GetWaterMa|

; 196  :         if (m_dwWaterMark>=s_HighWaterPairs[dwIndex].AssociatedValue) {

  0001c	e5913004	 ldr         r3, [r1, #4]
  00020	e1540003	 cmp         r4, r3
  00024	2a000004	 bcs         |$LN8@GetWaterMa|
  00028	e2522001	 subs        r2, r2, #1
  0002c	e2411008	 sub         r1, r1, #8
  00030	1afffff9	 bne         |$LL4@GetWaterMa|

; 198  :             break;
; 199  :         }
; 200  :     }
; 201  :     return bReturnKey;
; 202  : }

  00034	e8bd4010	 ldmia       sp!, {r4, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$LN8@GetWaterMa|

; 197  :             bReturnKey = (BYTE)s_HighWaterPairs[dwIndex].Key;

  0003c	e79e3182	 ldr         r3, [lr, +r2, lsl #3]
  00040	e20300ff	 and         r0, r3, #0xFF

; 198  :             break;
; 199  :         }
; 200  :     }
; 201  :     return bReturnKey;
; 202  : }

  00044	e8bd4010	 ldmia       sp!, {r4, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$LN13@GetWaterMa|
  0004c		 |$LN14@GetWaterMa|
  0004c	00000000	 DCD         |s_HighWaterPairs|
  00050		 |$M37516|

			 ENDP  ; |?GetWaterMarkBit@CBulPdd16550@@UAAEXZ|, CBulPdd16550::GetWaterMarkBit


  00000			 AREA	 |.pdata|, PDATA
|$T37535| DCD	|$LN12@GetWaterMa@2|
	DCD	0x40001501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetWaterMark@CBulPdd16550@@UAAKXZ| PROC ; CBulPdd16550::GetWaterMark

; 204  : {

  00000		 |$LN12@GetWaterMa@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37532|

; 205  :     BYTE bReturnValue = (BYTE)s_HighWaterPairs[0].AssociatedValue;

  00004	e59fe044	 ldr         lr, [pc, #0x44]

; 206  :     for (DWORD dwIndex=dim(s_HighWaterPairs)-1;dwIndex!=0; dwIndex --) {

  00008	e5904124	 ldr         r4, [r0, #0x124]
  0000c	e3a02003	 mov         r2, #3
  00010	e59e3004	 ldr         r3, [lr, #4]
  00014	e28e1018	 add         r1, lr, #0x18
  00018	e20300ff	 and         r0, r3, #0xFF
  0001c		 |$LL4@GetWaterMa@2|

; 207  :         if (m_dwWaterMark>=s_HighWaterPairs[dwIndex].AssociatedValue) {

  0001c	e5913004	 ldr         r3, [r1, #4]
  00020	e1540003	 cmp         r4, r3
  00024	2a000004	 bcs         |$LN8@GetWaterMa@2|
  00028	e2522001	 subs        r2, r2, #1
  0002c	e2411008	 sub         r1, r1, #8
  00030	1afffff9	 bne         |$LL4@GetWaterMa@2|

; 209  :             break;
; 210  :         }
; 211  :     }
; 212  :     return bReturnValue;
; 213  : }

  00034	e8bd4010	 ldmia       sp!, {r4, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$LN8@GetWaterMa@2|

; 208  :             bReturnValue = (BYTE)s_HighWaterPairs[dwIndex].AssociatedValue;

  0003c	e08e3182	 add         r3, lr, r2, lsl #3
  00040	e5933004	 ldr         r3, [r3, #4]
  00044	e20300ff	 and         r0, r3, #0xFF

; 209  :             break;
; 210  :         }
; 211  :     }
; 212  :     return bReturnValue;
; 213  : }

  00048	e8bd4010	 ldmia       sp!, {r4, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$LN13@GetWaterMa@2|
  00050		 |$LN14@GetWaterMa@2|
  00050	00000000	 DCD         |s_HighWaterPairs|
  00054		 |$M37533|

			 ENDP  ; |?GetWaterMark@CBulPdd16550@@UAAKXZ|, CBulPdd16550::GetWaterMark


  00000			 AREA	 |.pdata|, PDATA
|$T37552| DCD	|$LN13@GetDivisor|
	DCD	0x40001701

  00000			 AREA	 |.rdata|, DATA, READONLY
|?s_LS_BaudPairs@?1??GetDivisorOfRate@CBulPdd16550@@UAAHKPAK@Z@4QBU__PAIRS@@B| DCD 0x32 ; `CBulPdd16550::GetDivisorOfRate'::`2'::s_LS_BaudPairs
	DCD	0x4800
	DCD	0x4b
	DCD	0x3000
	DCD	0x96
	DCD	0x1800
	DCD	0x12c
	DCD	0xc00
	DCD	0x258
	DCD	0x600
	DCD	0x4b0
	DCD	0x300
	DCD	0x708
	DCD	0x200
	DCD	0x960
	DCD	0x180
	DCD	0xe10
	DCD	0x100
	DCD	0x12c0
	DCD	0xc0
	DCD	0x1c20
	DCD	0x80
	DCD	0x2580
	DCD	0x60
	DCD	0x3200
	DCD	0x48
	DCD	0x3840
	DCD	0x40
	DCD	0x4b00
	DCD	0x30
	DCD	0x5a00
	DCD	0x28
	DCD	0x7080
	DCD	0x20
	DCD	0x9600
	DCD	0x18
	DCD	0xe100
	DCD	0x10
	DCD	0x1c200
	DCD	0x8
	DCD	0x38400
	DCD	0x4
	DCD	0xe1000
	DCD	0x1
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDivisorOfRate@CBulPdd16550@@UAAHKPAK@Z| PROC ; CBulPdd16550::GetDivisorOfRate

; 215  : {

  00000		 |$LN13@GetDivisor|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37549|

; 216  : static const
; 217  : PAIRS  s_LS_BaudPairs[] = {
; 218  :     {50,        18432},
; 219  :     {75,        12288},
; 220  :     {150,       6144},
; 221  :     {300,       3072},
; 222  :     {600,       1536},
; 223  :     {1200,      768},
; 224  :     {1800,      512},
; 225  :     {2400,      384},
; 226  :     {3600,      256},
; 227  :     {4800,      192},
; 228  :     {7200,      128},
; 229  :     {9600,      96},
; 230  :     {12800,     72},
; 231  :     {14400,     64},
; 232  :     {19200,     48},
; 233  :     {23040,     40},
; 234  :     {28800,     32},
; 235  :     {38400,     24},
; 236  :     {57600,     16},
; 237  :     {115200,    8},
; 238  :     {230400,    4},
; 239  :     {921600,    1}
; 240  : };
; 241  : 
; 242  : 
; 243  :     for (DWORD dwIndex =0 ; dwIndex <dim(s_LS_BaudPairs) && s_LS_BaudPairs[dwIndex].Key<=BaudRate; dwIndex ++) {

  00004	e59f404c	 ldr         r4, [pc, #0x4C]
  00008	e3a03000	 mov         r3, #0
  0000c	e1a00004	 mov         r0, r4
  00010		 |$LL5@GetDivisor|
  00010	e590e000	 ldr         lr, [r0]
  00014	e15e0001	 cmp         lr, r1
  00018	8a000004	 bhi         |$LN3@GetDivisor|

; 244  :         if (s_LS_BaudPairs[dwIndex].Key== BaudRate){

  0001c	0a000006	 beq         |$LN9@GetDivisor|
  00020	e2833001	 add         r3, r3, #1
  00024	e3530016	 cmp         r3, #0x16
  00028	e2800008	 add         r0, r0, #8
  0002c	3afffff7	 bcc         |$LL5@GetDivisor|
  00030		 |$LN3@GetDivisor|

; 248  :         }
; 249  :     }
; 250  :     return FALSE;    

  00030	e3a00000	 mov         r0, #0

; 251  : }

  00034	e8bd4010	 ldmia       sp!, {r4, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$LN9@GetDivisor|

; 245  :             if (pulDivisor)

  0003c	e3520000	 cmp         r2, #0

; 246  :                 *pulDivisor = s_LS_BaudPairs[dwIndex].AssociatedValue;

  00040	10843183	 addne       r3, r4, r3, lsl #3
  00044	15933004	 ldrne       r3, [r3, #4]

; 247  :             return TRUE;

  00048	e3a00001	 mov         r0, #1
  0004c	15823000	 strne       r3, [r2]

; 251  : }

  00050	e8bd4010	 ldmia       sp!, {r4, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$LN14@GetDivisor|
  00058		 |$LN15@GetDivisor|
  00058	00000000	 DCD         |?s_LS_BaudPairs@?1??GetDivisorOfRate@CBulPdd16550@@UAAHKPAK@Z@4QBU__PAIRS@@B|
  0005c		 |$M37550|

			 ENDP  ; |?GetDivisorOfRate@CBulPdd16550@@UAAHKPAK@Z|, CBulPdd16550::GetDivisorOfRate

	EXPORT	|?Enable_IR_Rx_Tx@CBulPdd16550@@IAAHHH@Z| ; CBulPdd16550::Enable_IR_Rx_Tx
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37603| DCD	|$LN28@Enable_IR_|
	DCD	0x40003c01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\serial\bul16550.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Enable_IR_Rx_Tx@CBulPdd16550@@IAAHHH@Z| PROC ; CBulPdd16550::Enable_IR_Rx_Tx

; 254  : {

  00000		 |$LN28@Enable_IR_|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M37600|
  00004	e1a05000	 mov         r5, r0

; 255  :     if (m_fIRConnected) {

  00008	e5953154	 ldr         r3, [r5, #0x154]
  0000c	e3530000	 cmp         r3, #0
  00010	0a000033	 beq         |$LN3@Enable_IR_|

; 256  :         BYTE irdasel=0;
; 257  :         //Enable/Disable IR receiver/transmitter (decoder/encoder) mask
; 258  :         irdasel |= (Rxenable?INFRARED_ISR_RECEIVE_SIR_ENABLE:0 );

  00014	e3510000	 cmp         r1, #0
  00018	13a01002	 movne       r1, #2
  0001c	03a01000	 moveq       r1, #0

; 259  :         irdasel |= (Txenable?INFRARED_ISR_TRANSMIT_SIR_ENABLE:0);

  00020	e3520000	 cmp         r2, #0
  00024	13a03001	 movne       r3, #1
  00028	03a03000	 moveq       r3, #0

; 260  :         m_HardwareLock.Lock();        

  0002c	e1813003	 orr         r3, r1, r3
  00030	e2850060	 add         r0, r5, #0x60
  00034	e20360ff	 and         r6, r3, #0xFF
  00038	eb000000	 bl          EnterCriticalSection

; 261  :         if ((GetRegister()->Read_SIR()&(INFRARED_ISR_RECEIVE_SIR_ENABLE | INFRARED_ISR_TRANSMIT_SIR_ENABLE))!= irdasel) {

  0003c	e5950128	 ldr         r0, [r5, #0x128]
  00040	e5903000	 ldr         r3, [r0]
  00044	e593305c	 ldr         r3, [r3, #0x5C]
  00048	e1a0e00f	 mov         lr, pc
  0004c	e12fff13	 bx          r3
  00050	e2003003	 and         r3, r0, #3
  00054	e1530006	 cmp         r3, r6
  00058	0a00001f	 beq         |$LN2@Enable_IR_|

; 262  :             //Disable UART In order to make the changes.
; 263  :             BYTE bIER = GetRegister()->Read_IER();

  0005c	e5950128	 ldr         r0, [r5, #0x128]
  00060	e5903000	 ldr         r3, [r0]
  00064	e5933014	 ldr         r3, [r3, #0x14]
  00068	e1a0e00f	 mov         lr, pc
  0006c	e12fff13	 bx          r3

; 264  :             GetRegister()->Write_IER( bIER & ~BUL_SERIAL_IER_UUE);

  00070	e5952128	 ldr         r2, [r5, #0x128]
  00074	e1a04000	 mov         r4, r0
  00078	e20410bf	 and         r1, r4, #0xBF
  0007c	e5923000	 ldr         r3, [r2]
  00080	e1a00002	 mov         r0, r2
  00084	e5933010	 ldr         r3, [r3, #0x10]
  00088	e1a0e00f	 mov         lr, pc
  0008c	e12fff13	 bx          r3

; 265  :             BYTE bIrStatus = GetRegister()->Read_SIR() & ~(INFRARED_ISR_RECEIVE_SIR_ENABLE|INFRARED_ISR_TRANSMIT_SIR_ENABLE);

  00090	e5950128	 ldr         r0, [r5, #0x128]
  00094	e5903000	 ldr         r3, [r0]
  00098	e593305c	 ldr         r3, [r3, #0x5C]
  0009c	e1a0e00f	 mov         lr, pc
  000a0	e12fff13	 bx          r3

; 266  :             bIrStatus |= irdasel;
; 267  :             GetRegister()->Write_SIR(bIrStatus);

  000a4	e595e128	 ldr         lr, [r5, #0x128]
  000a8	e20030fc	 and         r3, r0, #0xFC
  000ac	e1831006	 orr         r1, r3, r6
  000b0	e59e2000	 ldr         r2, [lr]
  000b4	e1a0000e	 mov         r0, lr
  000b8	e5923058	 ldr         r3, [r2, #0x58]
  000bc	e1a0e00f	 mov         lr, pc
  000c0	e12fff13	 bx          r3

; 268  :             GetRegister()->Write_IER(bIER);

  000c4	e5950128	 ldr         r0, [r5, #0x128]
  000c8	e1a01004	 mov         r1, r4
  000cc	e5903000	 ldr         r3, [r0]
  000d0	e5933010	 ldr         r3, [r3, #0x10]
  000d4	e1a0e00f	 mov         lr, pc
  000d8	e12fff13	 bx          r3
  000dc		 |$LN2@Enable_IR_|

; 269  :         }
; 270  :         m_HardwareLock.Unlock();

  000dc	e2850060	 add         r0, r5, #0x60
  000e0	eb000000	 bl          LeaveCriticalSection
  000e4		 |$LN3@Enable_IR_|

; 271  :         return TRUE;
; 272  :     }
; 273  :     else
; 274  :         return TRUE;

  000e4	e3a00001	 mov         r0, #1

; 275  :     //Restore to original value of IER including Uart Unit setting
; 276  : }

  000e8	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000ec	e12fff1e	 bx          lr
  000f0		 |$M37601|

			 ENDP  ; |?Enable_IR_Rx_Tx@CBulPdd16550@@IAAHHH@Z|, CBulPdd16550::Enable_IR_Rx_Tx

; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37645| DCD	|$LN23@InitIR|
	DCD	0x40003a01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\serial\bul16550.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InitIR@CBulPdd16550@@UAAHH@Z| PROC	; CBulPdd16550::InitIR

; 278  : {

  00000		 |$LN23@InitIR|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M37642|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0

; 279  :     //Updating our copy of IER before disabling UART
; 280  :     m_HardwareLock.Lock();        

  0000c	e2840060	 add         r0, r4, #0x60
  00010	eb000000	 bl          EnterCriticalSection

; 281  :     BYTE bIER = GetRegister()->Read_IER();

  00014	e5940128	 ldr         r0, [r4, #0x128]
  00018	e5903000	 ldr         r3, [r0]
  0001c	e5933014	 ldr         r3, [r3, #0x14]
  00020	e1a0e00f	 mov         lr, pc
  00024	e12fff13	 bx          r3

; 282  : 
; 283  :     //Disable the UART for sure
; 284  :     GetRegister()->Write_IER(bIER & ~BUL_SERIAL_IER_UUE);

  00028	e5942128	 ldr         r2, [r4, #0x128]
  0002c	e1a06000	 mov         r6, r0
  00030	e20610bf	 and         r1, r6, #0xBF
  00034	e5923000	 ldr         r3, [r2]
  00038	e1a00002	 mov         r0, r2
  0003c	e5933010	 ldr         r3, [r3, #0x10]
  00040	e1a0e00f	 mov         lr, pc
  00044	e12fff13	 bx          r3

; 285  :     if (m_fIRConnected && bSet) {

  00048	e5943154	 ldr         r3, [r4, #0x154]
  0004c	e3530000	 cmp         r3, #0
  00050	0a000013	 beq         |$LN2@InitIR|
  00054	e3550000	 cmp         r5, #0
  00058	0a000011	 beq         |$LN2@InitIR|

; 286  :         //Updating our copy of pIRDASEL before enabling/disabling IR
; 287  :         BYTE uIRSel = GetRegister()->Read_SIR() & ~INFRARED_ISR_TX_DATA_POLARITY;

  0005c	e5940128	 ldr         r0, [r4, #0x128]
  00060	e5903000	 ldr         r3, [r0]
  00064	e593305c	 ldr         r3, [r3, #0x5C]
  00068	e1a0e00f	 mov         lr, pc
  0006c	e12fff13	 bx          r3

; 288  :         uIRSel |=  (INFRARED_ISR_XMODE| INFRARED_ISR_RX_DATA_POLARITY);
; 289  :         GetRegister()->Write_SIR( uIRSel );

  00070	e594e128	 ldr         lr, [r4, #0x128]
  00074	e20030e3	 and         r3, r0, #0xE3
  00078	e3831014	 orr         r1, r3, #0x14
  0007c	e59e2000	 ldr         r2, [lr]
  00080	e1a0000e	 mov         r0, lr
  00084	e5923058	 ldr         r3, [r2, #0x58]
  00088	e1a0e00f	 mov         lr, pc
  0008c	e12fff13	 bx          r3

; 290  :         Enable_IR_Rx_Tx( TRUE, FALSE);

  00090	e3a02000	 mov         r2, #0
  00094	e3a01001	 mov         r1, #1
  00098	e1a00004	 mov         r0, r4
  0009c	eb000000	 bl          |?Enable_IR_Rx_Tx@CBulPdd16550@@IAAHHH@Z|

; 291  : 
; 292  :     }
; 293  :     else {

  000a0	ea000005	 b           |$LN1@InitIR|
  000a4		 |$LN2@InitIR|

; 294  :         GetRegister()->Write_SIR(0);

  000a4	e5940128	 ldr         r0, [r4, #0x128]
  000a8	e3a01000	 mov         r1, #0
  000ac	e5903000	 ldr         r3, [r0]
  000b0	e5933058	 ldr         r3, [r3, #0x58]
  000b4	e1a0e00f	 mov         lr, pc
  000b8	e12fff13	 bx          r3
  000bc		 |$LN1@InitIR|

; 295  :     }
; 296  : 
; 297  :     //Restoring to the original IER (including UART unit state).
; 298  :     GetRegister()->Write_IER(bIER);

  000bc	e5940128	 ldr         r0, [r4, #0x128]
  000c0	e1a01006	 mov         r1, r6
  000c4	e5903000	 ldr         r3, [r0]
  000c8	e5933010	 ldr         r3, [r3, #0x10]
  000cc	e1a0e00f	 mov         lr, pc
  000d0	e12fff13	 bx          r3

; 299  :     m_HardwareLock.Unlock();

  000d4	e2840060	 add         r0, r4, #0x60
  000d8	eb000000	 bl          LeaveCriticalSection

; 300  :     return m_fIRConnected;

  000dc	e5940154	 ldr         r0, [r4, #0x154]

; 301  :     
; 302  : }

  000e0	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000e4	e12fff1e	 bx          lr
  000e8		 |$M37643|

			 ENDP  ; |?InitIR@CBulPdd16550@@UAAHH@Z|, CBulPdd16550::InitIR

; File c:\wince600\public\common\oak\inc\cserpdd.h

  00000			 AREA	 |.pdata|, PDATA
|$T37658| DCD	|$LN9@SetOutputM@2|
	DCD	0x40001601
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\serial\bul16550.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetOutputMode@CBulPdd16550@@UAAXHH@Z| PROC ; CBulPdd16550::SetOutputMode

; 304  : {

  00000		 |$LN9@SetOutputM@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37655|
  00004	e3510000	 cmp         r1, #0
  00008	e1a04000	 mov         r4, r0

; 305  :     CPdd16550::SetOutputMode(fUseIR,fUse9Pin);
; 306  :     if (m_fIREnable) {
; 307  :         InitIR(TRUE);

  0000c	e5943000	 ldr         r3, [r4]
  00010	e58410ec	 str         r1, [r4, #0xEC]
  00014	e58420f0	 str         r2, [r4, #0xF0]
  00018	e59330e4	 ldr         r3, [r3, #0xE4]
  0001c	0a000008	 beq         |$LN2@SetOutputM@2|
  00020	e3a01001	 mov         r1, #1
  00024	e1a0e00f	 mov         lr, pc
  00028	e12fff13	 bx          r3

; 308  :         Enable_IR_Rx_Tx(TRUE,FALSE);

  0002c	e3a02000	 mov         r2, #0
  00030	e3a01001	 mov         r1, #1
  00034	e1a00004	 mov         r0, r4
  00038	eb000000	 bl          |?Enable_IR_Rx_Tx@CBulPdd16550@@IAAHHH@Z|

; 312  : }

  0003c	e8bd4010	 ldmia       sp!, {r4, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$LN2@SetOutputM@2|

; 309  :     }
; 310  :     else
; 311  :         InitIR(FALSE);

  00044	e3a01000	 mov         r1, #0
  00048	e1a0e00f	 mov         lr, pc
  0004c	e12fff13	 bx          r3

; 312  : }

  00050	e8bd4010	 ldmia       sp!, {r4, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$M37656|

			 ENDP  ; |?SetOutputMode@CBulPdd16550@@UAAXHH@Z|, CBulPdd16550::SetOutputMode

; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul16550.h

  00000			 AREA	 |.pdata|, PDATA
|$T37679| DCD	|$LN15@GetWriteab|
	DCD	0x40001b01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\serial\bul16550.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetWriteableSize@CBulPdd16550@@UAAKXZ| PROC ; CBulPdd16550::GetWriteableSize

; 314  : {

  00000		 |$LN15@GetWriteab|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37676|
  00004	e1a04000	 mov         r4, r0

; 315  :     BYTE bLSR = GetRegister()->Read_LSR( );

  00008	e5940128	 ldr         r0, [r4, #0x128]
  0000c	e5903000	 ldr         r3, [r0]
  00010	e5933038	 ldr         r3, [r3, #0x38]
  00014	e1a0e00f	 mov         lr, pc
  00018	e12fff13	 bx          r3
  0001c	e1a03000	 mov         r3, r0

; 316  :     DWORD dwByteCanWrite = 0;
; 317  :     if (bLSR & SERIAL_LSR_TEMT) {

  00020	e3130040	 tst         r3, #0x40
  00024	e3a00000	 mov         r0, #0
  00028	0a000005	 beq         |$LN3@GetWriteab|

; 318  :         dwByteCanWrite = (m_XmitFifoEnable?BUL_SERIAL_FIFO_DEPTH:1);

  0002c	e5943114	 ldr         r3, [r4, #0x114]
  00030	e3530000	 cmp         r3, #0
  00034	0a000009	 beq         |$LN8@GetWriteab|
  00038	e3a00040	 mov         r0, #0x40

; 323  :     }
; 324  :     return dwByteCanWrite;
; 325  : }

  0003c	e8bd4010	 ldmia       sp!, {r4, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$LN3@GetWriteab|

; 319  :     }
; 320  :     else 
; 321  :     if (bLSR & SERIAL_LSR_THRE) {

  00044	e3130020	 tst         r3, #0x20
  00048	0a000005	 beq         |$LN9@GetWriteab|

; 322  :         dwByteCanWrite = (m_XmitFifoEnable?(BUL_SERIAL_FIFO_DEPTH/2):1);

  0004c	e5943114	 ldr         r3, [r4, #0x114]
  00050	e3530000	 cmp         r3, #0
  00054	13a00020	 movne       r0, #0x20

; 323  :     }
; 324  :     return dwByteCanWrite;
; 325  : }

  00058	18bd4010	 ldmneia     sp!, {r4, lr}
  0005c	112fff1e	 bxne        lr
  00060		 |$LN8@GetWriteab|

; 322  :         dwByteCanWrite = (m_XmitFifoEnable?(BUL_SERIAL_FIFO_DEPTH/2):1);

  00060	e3a00001	 mov         r0, #1
  00064		 |$LN9@GetWriteab|

; 323  :     }
; 324  :     return dwByteCanWrite;
; 325  : }

  00064	e8bd4010	 ldmia       sp!, {r4, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$M37677|

			 ENDP  ; |?GetWriteableSize@CBulPdd16550@@UAAKXZ|, CBulPdd16550::GetWriteableSize

	IMPORT	|?EnableXmitInterrupt@CPdd16550@@UAAHH@Z| ; CPdd16550::EnableXmitInterrupt

  00000			 AREA	 |.pdata|, PDATA
|$T37692| DCD	|$LN8@EnableXmit|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?EnableXmitInterrupt@CBulPdd16550@@UAAHH@Z| PROC ; CBulPdd16550::EnableXmitInterrupt

; 327  : {

  00000		 |$LN8@EnableXmit|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37689|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 328  :     if (m_fIREnable) {

  0000c	e59530ec	 ldr         r3, [r5, #0xEC]
  00010	e3530000	 cmp         r3, #0
  00014	0a000005	 beq         |$LN1@EnableXmit|

; 329  :         Enable_IR_Rx_Tx(!fEnable,fEnable);

  00018	e3540000	 cmp         r4, #0
  0001c	03a01001	 moveq       r1, #1
  00020	13a01000	 movne       r1, #0
  00024	e1a02004	 mov         r2, r4
  00028	e1a00005	 mov         r0, r5
  0002c	eb000000	 bl          |?Enable_IR_Rx_Tx@CBulPdd16550@@IAAHHH@Z|
  00030		 |$LN1@EnableXmit|

; 330  :     }
; 331  :     return CPdd16550::EnableXmitInterrupt(fEnable);

  00030	e1a01004	 mov         r1, r4
  00034	e1a00005	 mov         r0, r5
  00038	eb000000	 bl          |?EnableXmitInterrupt@CPdd16550@@UAAHH@Z|

; 332  : }

  0003c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M37690|

			 ENDP  ; |?EnableXmitInterrupt@CBulPdd16550@@UAAHH@Z|, CBulPdd16550::EnableXmitInterrupt

	IMPORT	|?XmitInterruptHandler@CPdd16550@@UAAXPAEPAK@Z| ; CPdd16550::XmitInterruptHandler
	IMPORT	|Sleep|
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul16550.h

  00000			 AREA	 |.pdata|, PDATA
|$T37711| DCD	|$LN21@XmitInterr|
	DCD	0x40002c01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\serial\bul16550.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?XmitInterruptHandler@CBulPdd16550@@UAAXPAEPAK@Z| PROC ; CBulPdd16550::XmitInterruptHandler

; 334  : {

  00000		 |$LN21@XmitInterr|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M37708|
  00004	e1a04002	 mov         r4, r2
  00008	e1b07001	 movs        r7, r1
  0000c	e1a05000	 mov         r5, r0

; 335  :     if (!(pTxBuffer!=NULL && pBuffLen!=NULL && *pBuffLen!=NULL)) { // Transfer End.

  00010	0a000004	 beq         |$LN9@XmitInterr|
  00014	e3540000	 cmp         r4, #0
  00018	0a000002	 beq         |$LN9@XmitInterr|
  0001c	e5943000	 ldr         r3, [r4]
  00020	e3530000	 cmp         r3, #0
  00024	1a00000c	 bne         |$LN17@XmitInterr|
  00028		 |$LN9@XmitInterr|

; 336  :         // The Xmit Empty interrupt can be generated by two sources.
; 337  :         // One is Xmit FIFO half empty, other is empty.
; 338  :         // We have to make sure the FIFO is completely empty before return this.
; 339  :         // Because after this return, user may shut down hardware or change baudrate. 
; 340  :         for (DWORD dwIndex = 0; dwIndex< 500; dwIndex++) {

  00028	e3a06000	 mov         r6, #0
  0002c		 |$LL8@XmitInterr|

; 341  :             if ((GetRegister()->Read_LSR( ) & SERIAL_LSR_TEMT) == 0 ) 

  0002c	e5950128	 ldr         r0, [r5, #0x128]
  00030	e5903000	 ldr         r3, [r0]
  00034	e5933038	 ldr         r3, [r3, #0x38]
  00038	e1a0e00f	 mov         lr, pc
  0003c	e12fff13	 bx          r3
  00040	e3100040	 tst         r0, #0x40
  00044	1a000004	 bne         |$LN17@XmitInterr|

; 342  :                 Sleep(1);

  00048	e3a00001	 mov         r0, #1
  0004c	eb000000	 bl          Sleep
  00050	e2866001	 add         r6, r6, #1
  00054	e3560f7d	 cmp         r6, #0x7D, 30
  00058	3afffff3	 bcc         |$LL8@XmitInterr|
  0005c		 |$LN17@XmitInterr|

; 343  :             else
; 344  :                 break;
; 345  :         }
; 346  :     }
; 347  :     if (m_fIREnable) {

  0005c	e59530ec	 ldr         r3, [r5, #0xEC]
  00060	e3530000	 cmp         r3, #0
  00064	0a00000b	 beq         |$LN1@XmitInterr|

; 348  :         if (pTxBuffer!=NULL && pBuffLen!=NULL && *pBuffLen!=NULL) 

  00068	e3570000	 cmp         r7, #0
  0006c	0a000005	 beq         |$LN2@XmitInterr|
  00070	e3540000	 cmp         r4, #0
  00074	15943000	 ldrne       r3, [r4]
  00078	13530000	 cmpne       r3, #0

; 349  :             Enable_IR_Rx_Tx(FALSE,TRUE);

  0007c	13a02001	 movne       r2, #1
  00080	13a01000	 movne       r1, #0
  00084	1a000001	 bne         |$LN18@XmitInterr|
  00088		 |$LN2@XmitInterr|

; 350  :         else
; 351  :             Enable_IR_Rx_Tx(TRUE,FALSE);

  00088	e3a02000	 mov         r2, #0
  0008c	e3a01001	 mov         r1, #1
  00090		 |$LN18@XmitInterr|
  00090	e1a00005	 mov         r0, r5
  00094	eb000000	 bl          |?Enable_IR_Rx_Tx@CBulPdd16550@@IAAHHH@Z|
  00098		 |$LN1@XmitInterr|

; 352  :     }
; 353  :     CPdd16550::XmitInterruptHandler(pTxBuffer,pBuffLen);

  00098	e1a02004	 mov         r2, r4
  0009c	e1a01007	 mov         r1, r7
  000a0	e1a00005	 mov         r0, r5
  000a4	eb000000	 bl          |?XmitInterruptHandler@CPdd16550@@UAAXPAEPAK@Z|

; 354  : }

  000a8	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000ac	e12fff1e	 bx          lr
  000b0		 |$M37709|

			 ENDP  ; |?XmitInterruptHandler@CBulPdd16550@@UAAXPAEPAK@Z|, CBulPdd16550::XmitInterruptHandler

	IMPORT	|?XmitComChar@CPdd16550@@UAAXE@Z|	; CPdd16550::XmitComChar

  00000			 AREA	 |.pdata|, PDATA
|$T37720| DCD	|$LN6@XmitComCha|
	DCD	0x40000d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?XmitComChar@CBulPdd16550@@UAAXE@Z| PROC ; CBulPdd16550::XmitComChar

; 356  : {

  00000		 |$LN6@XmitComCha|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37717|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0

; 357  :     if (m_fIREnable) {

  0000c	e59430ec	 ldr         r3, [r4, #0xEC]
  00010	e3530000	 cmp         r3, #0

; 358  :         Enable_IR_Rx_Tx(FALSE,TRUE);

  00014	13a02001	 movne       r2, #1
  00018	13a01000	 movne       r1, #0
  0001c	1b000000	 blne        |?Enable_IR_Rx_Tx@CBulPdd16550@@IAAHHH@Z|

; 359  :     }
; 360  :     CPdd16550::XmitComChar(ComChar);

  00020	e1a01005	 mov         r1, r5
  00024	e1a00004	 mov         r0, r4
  00028	eb000000	 bl          |?XmitComChar@CPdd16550@@UAAXE@Z|

; 361  : }

  0002c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$M37718|

			 ENDP  ; |?XmitComChar@CBulPdd16550@@UAAXE@Z|, CBulPdd16550::XmitComChar

	IMPORT	|?SetDCB@CSerialPDD@@UAAHPAU_DCB@@@Z|	; CSerialPDD::SetDCB
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37738| DCD	|$LN9@SetDCB|
	DCD	0x40001601
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\serial\bul16550.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetDCB@CBulPdd16550@@UAAHPAU_DCB@@@Z| PROC ; CBulPdd16550::SetDCB

; 363  : {

  00000		 |$LN9@SetDCB|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37735|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 364  :     m_HardwareLock.Lock();

  0000c	e2850060	 add         r0, r5, #0x60
  00010	eb000000	 bl          EnterCriticalSection

; 365  :     //Disable the UART for sure
; 366  :     Enable_IR_Rx_Tx(FALSE,FALSE);

  00014	e3a02000	 mov         r2, #0
  00018	e3a01000	 mov         r1, #0
  0001c	e1a00005	 mov         r0, r5
  00020	eb000000	 bl          |?Enable_IR_Rx_Tx@CBulPdd16550@@IAAHHH@Z|

; 367  :     BOOL bReturn = CPdd16550::SetDCB(lpDCB);

  00024	e1a01004	 mov         r1, r4
  00028	e1a00005	 mov         r0, r5
  0002c	eb000000	 bl          |?SetDCB@CSerialPDD@@UAAHPAU_DCB@@@Z|
  00030	e1a04000	 mov         r4, r0

; 368  :     Enable_IR_Rx_Tx(TRUE,FALSE);

  00034	e1a00005	 mov         r0, r5
  00038	e3a02000	 mov         r2, #0
  0003c	e3a01001	 mov         r1, #1
  00040	eb000000	 bl          |?Enable_IR_Rx_Tx@CBulPdd16550@@IAAHHH@Z|

; 369  :     m_HardwareLock.Unlock();        

  00044	e2850060	 add         r0, r5, #0x60
  00048	eb000000	 bl          LeaveCriticalSection

; 370  :     return bReturn;
; 371  : }

  0004c	e1a00004	 mov         r0, r4
  00050	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$M37736|

			 ENDP  ; |?SetDCB@CBulPdd16550@@UAAHPAU_DCB@@@Z|, CBulPdd16550::SetDCB

; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\inc\bul16550.h

  00000			 AREA	 |.pdata|, PDATA
|$T37757| DCD	|$LN11@SerialRegi@3|
	DCD	0x40001501
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\pxa27x_ms_v1\serial\bul16550.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SerialRegisterBackup@CBulPdd16550@@MAAXXZ| PROC ; CBulPdd16550::SerialRegisterBackup

; 373  : {

  00000		 |$LN11@SerialRegi@3|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37754|
  00004	e1a04000	 mov         r4, r0

; 374  :     CPdd16550::SerialRegisterBackup();

  00008	e5940128	 ldr         r0, [r4, #0x128]
  0000c	e5903000	 ldr         r3, [r0]
  00010	e5933050	 ldr         r3, [r3, #0x50]
  00014	e1a0e00f	 mov         lr, pc
  00018	e12fff13	 bx          r3

; 375  :     //Actually power down UART and disable all interrupts
; 376  :     GetRegister()->Write_IER(GetRegister()->Read_IER() &~BUL_SERIAL_IER_UUE);

  0001c	e5940128	 ldr         r0, [r4, #0x128]
  00020	e5903000	 ldr         r3, [r0]
  00024	e5933014	 ldr         r3, [r3, #0x14]
  00028	e1a0e00f	 mov         lr, pc
  0002c	e12fff13	 bx          r3
  00030	e5942128	 ldr         r2, [r4, #0x128]
  00034	e20010bf	 and         r1, r0, #0xBF
  00038	e5923000	 ldr         r3, [r2]
  0003c	e1a00002	 mov         r0, r2
  00040	e5933010	 ldr         r3, [r3, #0x10]
  00044	e1a0e00f	 mov         lr, pc
  00048	e12fff13	 bx          r3

; 377  : }

  0004c	e8bd4010	 ldmia       sp!, {r4, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$M37755|

			 ENDP  ; |?SerialRegisterBackup@CBulPdd16550@@MAAXXZ|, CBulPdd16550::SerialRegisterBackup

	IMPORT	|?PostInit@CPdd16550@@UAAXXZ|		; CPdd16550::PostInit

  00000			 AREA	 |.pdata|, PDATA
|$T37765| DCD	|$LN5@PostInit|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PostInit@CBulPdd16550@@UAAXXZ| PROC	; CBulPdd16550::PostInit

; 380  : {

  00000		 |$LN5@PostInit|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37762|

; 381  :     CPdd16550::PostInit();

  00004	eb000000	 bl          |?PostInit@CPdd16550@@UAAXXZ|

; 382  : }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M37763|

			 ENDP  ; |?PostInit@CBulPdd16550@@UAAXXZ|, CBulPdd16550::PostInit


  00000			 AREA	 |.pdata|, PDATA
|$T37784| DCD	|$LN10@scalar@2|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCBulReg16550@@UAAPAXI@Z| PROC	; CBulReg16550::`scalar deleting destructor'
  00000		 |$LN10@scalar@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37781|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3014	 ldr         r3, [pc, #0x14]
  0000c	e3110001	 tst         r1, #1
  00010	e5843000	 str         r3, [r4]
  00014	1b000000	 blne        |??3@YAXPAX@Z|
  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN11@scalar@2|
  00024		 |$LN12@scalar@2|
  00024	00000000	 DCD         |??_7CReg16550@@6B@|
  00028		 |$M37782|

			 ENDP  ; |??_GCBulReg16550@@UAAPAXI@Z|, CBulReg16550::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T37797| DCD	|$LN6@scalar@3|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCBulPdd16550@@UAAPAXI@Z| PROC	; CBulPdd16550::`scalar deleting destructor'
  00000		 |$LN6@scalar@3|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37794|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |??1CBulPdd16550@@UAA@XZ|
  00010	e3140001	 tst         r4, #1
  00014	11a00005	 movne       r0, r5
  00018	1b000000	 blne        |??3@YAXPAX@Z|
  0001c	e1a00005	 mov         r0, r5
  00020	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M37795|

			 ENDP  ; |??_GCBulPdd16550@@UAAPAXI@Z|, CBulPdd16550::`scalar deleting destructor'

	END
