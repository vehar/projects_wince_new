; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\OMAP2420_MS_V1\WAVEDEV\xhwctxt.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1BO@GNLCMPML@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAA?$AAt?$AAt?$AAe?$AAn?$AAM?$AAa?$AAx?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@OIDHIJBG@?$AAS?$AAe?$AAc?$AAo?$AAn?$AAd?$AAA?$AAt?$AAt?$AAe?$AAn?$AAM?$AAa?$AAx?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@JAICFNDB@?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAA?$AAt?$AAt?$AAe?$AAn?$AAM?$AAa?$AAx?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@GMHHJMNO@?$AAG?$AAS?$AAM?$AAW?$AAa?$AAv?$AAV?$AAo?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@FPPADLDG@?$AAW?$AAa?$AAv?$AAG?$AAS?$AAM?$AAV?$AAo?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@CNEAGKCB@?$AAW?$AAa?$AAv?$AAS?$AAp?$AAe?$AAa?$AAk?$AAe?$AAr?$AAV?$AAo?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@NHMAPIG@?$AAG?$AAS?$AAM?$AAS?$AAp?$AAe?$AAa?$AAk?$AAe?$AAr?$AAV?$AAo?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@HPCLICKH@?$AAD?$AAM?$AAA?$AAW?$AAr?$AAi?$AAt?$AAe?$AAV?$AAo?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@CACIBJLJ@?$AAD?$AAM?$AAA?$AAR?$AAe?$AAa?$AAd?$AAV?$AAo?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@JFANFMBJ@?$AAS?$AAi?$AAd?$AAe?$AAt?$AAo?$AAn?$AAe?$AAS?$AAp?$AAe?$AAa?$AAk?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@KEPKJOEC@?$AAS?$AAi?$AAd?$AAe?$AAt?$AAo?$AAn?$AAe?$AAH?$AAe?$AAa?$AAd?$AAs?$AAe?$AAt?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|g_RegParams| DCD |??_C@_1CA@KEPKJOEC@?$AAS?$AAi?$AAd?$AAe?$AAt?$AAo?$AAn?$AAe?$AAH?$AAe?$AAa?$AAd?$AAs?$AAe?$AAt?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x16c
	DCD	0x4
	DCD	0x64
	DCD	|??_C@_1CA@JFANFMBJ@?$AAS?$AAi?$AAd?$AAe?$AAt?$AAo?$AAn?$AAe?$AAS?$AAp?$AAe?$AAa?$AAk?$AAe?$AAr?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x170
	DCD	0x4
	DCD	0x64
	DCD	|??_C@_1BG@CACIBJLJ@?$AAD?$AAM?$AAA?$AAR?$AAe?$AAa?$AAd?$AAV?$AAo?$AAl?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x174
	DCD	0x4
	DCD	0xe7
	DCD	|??_C@_1BI@HPCLICKH@?$AAD?$AAM?$AAA?$AAW?$AAr?$AAi?$AAt?$AAe?$AAV?$AAo?$AAl?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x178
	DCD	0x4
	DCD	0xe7
	DCD	|??_C@_1BM@NHMAPIG@?$AAG?$AAS?$AAM?$AAS?$AAp?$AAe?$AAa?$AAk?$AAe?$AAr?$AAV?$AAo?$AAl?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x17c
	DCD	0x4
	DCD	0x67
	DCD	|??_C@_1BM@CNEAGKCB@?$AAW?$AAa?$AAv?$AAS?$AAp?$AAe?$AAa?$AAk?$AAe?$AAr?$AAV?$AAo?$AAl?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x180
	DCD	0x4
	DCD	0x67
	DCD	|??_C@_1BE@FPPADLDG@?$AAW?$AAa?$AAv?$AAG?$AAS?$AAM?$AAV?$AAo?$AAl?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x184
	DCD	0x4
	DCD	0x67
	DCD	|??_C@_1BE@GMHHJMNO@?$AAG?$AAS?$AAM?$AAW?$AAa?$AAv?$AAV?$AAo?$AAl?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x188
	DCD	0x4
	DCD	0x67
	DCD	|??_C@_1BO@JAICFNDB@?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAA?$AAt?$AAt?$AAe?$AAn?$AAM?$AAa?$AAx?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0xe0
	DCD	0x4
	DCD	0x64
	DCD	|??_C@_1BO@OIDHIJBG@?$AAS?$AAe?$AAc?$AAo?$AAn?$AAd?$AAA?$AAt?$AAt?$AAe?$AAn?$AAM?$AAa?$AAx?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0xe8
	DCD	0x4
	DCD	0x23
	DCD	|??_C@_1BO@GNLCMPML@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAA?$AAt?$AAt?$AAe?$AAn?$AAM?$AAa?$AAx?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0xe4
	DCD	0x4
	DCD	0x23

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@GNLCMPML@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAA?$AAt?$AAt?$AAe?$AAn?$AAM?$AAa?$AAx?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "A"
	DCB	0x0, "t", 0x0, "t", 0x0, "e", 0x0, "n", 0x0, "M", 0x0, "a"
	DCB	0x0, "x", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@OIDHIJBG@?$AAS?$AAe?$AAc?$AAo?$AAn?$AAd?$AAA?$AAt?$AAt?$AAe?$AAn?$AAM?$AAa?$AAx?$AA?$AA@| DCB "S"
	DCB	0x0, "e", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "d", 0x0, "A"
	DCB	0x0, "t", 0x0, "t", 0x0, "e", 0x0, "n", 0x0, "M", 0x0, "a"
	DCB	0x0, "x", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@JAICFNDB@?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAA?$AAt?$AAt?$AAe?$AAn?$AAM?$AAa?$AAx?$AA?$AA@| DCB "S"
	DCB	0x0, "t", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "m", 0x0, "A"
	DCB	0x0, "t", 0x0, "t", 0x0, "e", 0x0, "n", 0x0, "M", 0x0, "a"
	DCB	0x0, "x", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@GMHHJMNO@?$AAG?$AAS?$AAM?$AAW?$AAa?$AAv?$AAV?$AAo?$AAl?$AA?$AA@| DCB "G"
	DCB	0x0, "S", 0x0, "M", 0x0, "W", 0x0, "a", 0x0, "v", 0x0, "V"
	DCB	0x0, "o", 0x0, "l", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@FPPADLDG@?$AAW?$AAa?$AAv?$AAG?$AAS?$AAM?$AAV?$AAo?$AAl?$AA?$AA@| DCB "W"
	DCB	0x0, "a", 0x0, "v", 0x0, "G", 0x0, "S", 0x0, "M", 0x0, "V"
	DCB	0x0, "o", 0x0, "l", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@CNEAGKCB@?$AAW?$AAa?$AAv?$AAS?$AAp?$AAe?$AAa?$AAk?$AAe?$AAr?$AAV?$AAo?$AAl?$AA?$AA@| DCB "W"
	DCB	0x0, "a", 0x0, "v", 0x0, "S", 0x0, "p", 0x0, "e", 0x0, "a"
	DCB	0x0, "k", 0x0, "e", 0x0, "r", 0x0, "V", 0x0, "o", 0x0, "l"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@NHMAPIG@?$AAG?$AAS?$AAM?$AAS?$AAp?$AAe?$AAa?$AAk?$AAe?$AAr?$AAV?$AAo?$AAl?$AA?$AA@| DCB "G"
	DCB	0x0, "S", 0x0, "M", 0x0, "S", 0x0, "p", 0x0, "e", 0x0, "a"
	DCB	0x0, "k", 0x0, "e", 0x0, "r", 0x0, "V", 0x0, "o", 0x0, "l"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@HPCLICKH@?$AAD?$AAM?$AAA?$AAW?$AAr?$AAi?$AAt?$AAe?$AAV?$AAo?$AAl?$AA?$AA@| DCB "D"
	DCB	0x0, "M", 0x0, "A", 0x0, "W", 0x0, "r", 0x0, "i", 0x0, "t"
	DCB	0x0, "e", 0x0, "V", 0x0, "o", 0x0, "l", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@CACIBJLJ@?$AAD?$AAM?$AAA?$AAR?$AAe?$AAa?$AAd?$AAV?$AAo?$AAl?$AA?$AA@| DCB "D"
	DCB	0x0, "M", 0x0, "A", 0x0, "R", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, "V", 0x0, "o", 0x0, "l", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@JFANFMBJ@?$AAS?$AAi?$AAd?$AAe?$AAt?$AAo?$AAn?$AAe?$AAS?$AAp?$AAe?$AAa?$AAk?$AAe?$AAr?$AA?$AA@| DCB "S"
	DCB	0x0, "i", 0x0, "d", 0x0, "e", 0x0, "t", 0x0, "o", 0x0, "n"
	DCB	0x0, "e", 0x0, "S", 0x0, "p", 0x0, "e", 0x0, "a", 0x0, "k"
	DCB	0x0, "e", 0x0, "r", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@KEPKJOEC@?$AAS?$AAi?$AAd?$AAe?$AAt?$AAo?$AAn?$AAe?$AAH?$AAe?$AAa?$AAd?$AAs?$AAe?$AAt?$AA?$AA@| DCB "S"
	DCB	0x0, "i", 0x0, "d", 0x0, "e", 0x0, "t", 0x0, "o", 0x0, "n"
	DCB	0x0, "e", 0x0, "H", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, 0x0, 0x0	; `string'
	EXPORT	|??_C@_1IE@IFGJEHML@?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_7ACAudioHWContext@@6B@| [ DATA ]	; ACAudioHWContext::`vftable'
	EXPORT	|??0ACAudioHWContext@@QAA@PAG@Z|	; ACAudioHWContext::ACAudioHWContext
	EXPORT	|?HWDMAMemoryIn@OMAP2420DMAContext@@UAAPAEXZ| ; OMAP2420DMAContext::HWDMAMemoryIn
	EXPORT	|?HWDMAMemoryOut@OMAP2420DMAContext@@UAAPAEXZ| ; OMAP2420DMAContext::HWDMAMemoryOut
	EXPORT	|?HWInitCodec@ACAudioHWContext@@UAAHXZ|	; ACAudioHWContext::HWInitCodec
	EXPORT	|?HWInitNetwork@ACAudioHWContext@@UAAHXZ| ; ACAudioHWContext::HWInitNetwork
	EXPORT	|?HWEnableNetwork@ACAudioHWContext@@UAAHH@Z| ; ACAudioHWContext::HWEnableNetwork
	EXPORT	|?HWAudioPowerTimeout@ACAudioHWContext@@UAAHH@Z| ; ACAudioHWContext::HWAudioPowerTimeout
	EXPORT	|?HWUpdateAudioPRC@ACAudioHWContext@@UAAXXZ| ; ACAudioHWContext::HWUpdateAudioPRC
	EXPORT	|?HWDeinit@ACAudioHWContext@@UAAHXZ|	; ACAudioHWContext::HWDeinit
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
	IMPORT	|GetDeviceRegistryParams|
	IMPORT	|InitializeCriticalSection|
	IMPORT	|??0OMAP2420DMAContext@@QAA@XZ|		; OMAP2420DMAContext::OMAP2420DMAContext
	IMPORT	|??_EACAudioHWContext@@UAAPAXI@Z|, WEAK |??_GACAudioHWContext@@UAAPAXI@Z| ; ACAudioHWContext::`vector deleting destructor', ACAudioHWContext::`scalar deleting destructor'
	IMPORT	|?HWMapDMAMemory@OMAP2420DMAContext@@UAAHK@Z| ; OMAP2420DMAContext::HWMapDMAMemory
	IMPORT	|?HWInitInputDMA@OMAP2420DMAContext@@UAAXXZ| ; OMAP2420DMAContext::HWInitInputDMA
	IMPORT	|?HWInitOutputDMA@OMAP2420DMAContext@@UAAXXZ| ; OMAP2420DMAContext::HWInitOutputDMA
	IMPORT	|?HWStartOutputDMA@OMAP2420DMAContext@@UAAXXZ| ; OMAP2420DMAContext::HWStartOutputDMA
	IMPORT	|?HWStopOutputDMA@OMAP2420DMAContext@@UAAXXZ| ; OMAP2420DMAContext::HWStopOutputDMA
	IMPORT	|?HWStartInputDMA@OMAP2420DMAContext@@UAAXXZ| ; OMAP2420DMAContext::HWStartInputDMA
	IMPORT	|?HWStopInputDMA@OMAP2420DMAContext@@UAAXXZ| ; OMAP2420DMAContext::HWStopInputDMA
	IMPORT	|?HWTransferInputBuffers@OMAP2420DMAContext@@UAAKXZ| ; OMAP2420DMAContext::HWTransferInputBuffers
	IMPORT	|?HWTransferOutputBuffers@OMAP2420DMAContext@@UAAKXZ| ; OMAP2420DMAContext::HWTransferOutputBuffers
	IMPORT	|?HWMapControllerRegs@ACAudioHWContext@@UAAHXZ| ; ACAudioHWContext::HWMapControllerRegs
	IMPORT	|?HWInitController@ACAudioHWContext@@UAAXXZ| ; ACAudioHWContext::HWInitController
	IMPORT	|?HWPowerUp@ACAudioHWContext@@UAAXXZ|	; ACAudioHWContext::HWPowerUp
	IMPORT	|?HWPowerDown@ACAudioHWContext@@UAAXXZ|	; ACAudioHWContext::HWPowerDown
	IMPORT	|?OutputStreamOpened@ACAudioHWContext@@UAAHXZ| ; ACAudioHWContext::OutputStreamOpened
	IMPORT	|?OutputStreamClosed@ACAudioHWContext@@UAAHXZ| ; ACAudioHWContext::OutputStreamClosed
	IMPORT	|?InputStreamOpened@ACAudioHWContext@@UAAHXZ| ; ACAudioHWContext::InputStreamOpened
	IMPORT	|?InputStreamClosed@ACAudioHWContext@@UAAHXZ| ; ACAudioHWContext::InputStreamClosed
	IMPORT	|?SetRecordMemoPath@ACAudioHWContext@@UAAXH@Z| ; ACAudioHWContext::SetRecordMemoPath
	IMPORT	|?HandleExtMessage@ACAudioHWContext@@UAAHKPAEK0KPAK@Z| ; ACAudioHWContext::HandleExtMessage
	IMPORT	|?PmControlMessage@ACAudioHWContext@@UAAHKPAEK0KPAK@Z| ; ACAudioHWContext::PmControlMessage
	IMPORT	|?RegisterRilCallback@ACAudioHWContext@@EAAHPAPAX@Z| ; ACAudioHWContext::RegisterRilCallback
	IMPORT	|?SetupDelayUpdate@HardwareContext@@MAAXXZ| ; HardwareContext::SetupDelayUpdate
	IMPORT	|?DelayedUpdate@HardwareContext@@MAAXXZ| ; HardwareContext::DelayedUpdate
	IMPORT	|?HWEnableInputChannel@ACAudioHWContext@@UAAXH@Z| ; ACAudioHWContext::HWEnableInputChannel
	IMPORT	|?HWEnableOutputChannel@ACAudioHWContext@@UAAXH@Z| ; ACAudioHWContext::HWEnableOutputChannel

  00000			 AREA	 |.pdata|, PDATA
|$T37635| DCD	|$LN8@ACAudioHWC|
	DCD	0x40008a04
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\xhwctxt.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@IFGJEHML@?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe@| DCB "A"
	DCB	0x0, "C", 0x0, "A", 0x0, "u", 0x0, "d", 0x0, "i", 0x0, "o"
	DCB	0x0, "H", 0x0, "W", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":", 0x0, ":", 0x0, "A"
	DCB	0x0, "C", 0x0, "A", 0x0, "u", 0x0, "d", 0x0, "i", 0x0, "o"
	DCB	0x0, "H", 0x0, "W", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "R"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "r", 0x0, "y", 0x0, "P"
	DCB	0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "s", 0x0, "("
	DCB	0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7ACAudioHWContext@@6B@| DCD |??_EACAudioHWContext@@UAAPAXI@Z| ; ACAudioHWContext::`vftable'
	DCD	|?HWMapDMAMemory@OMAP2420DMAContext@@UAAHK@Z|
	DCD	|?HWInitInputDMA@OMAP2420DMAContext@@UAAXXZ|
	DCD	|?HWInitOutputDMA@OMAP2420DMAContext@@UAAXXZ|
	DCD	|?HWStartOutputDMA@OMAP2420DMAContext@@UAAXXZ|
	DCD	|?HWStopOutputDMA@OMAP2420DMAContext@@UAAXXZ|
	DCD	|?HWStartInputDMA@OMAP2420DMAContext@@UAAXXZ|
	DCD	|?HWStopInputDMA@OMAP2420DMAContext@@UAAXXZ|
	DCD	|?HWTransferInputBuffers@OMAP2420DMAContext@@UAAKXZ|
	DCD	|?HWTransferOutputBuffers@OMAP2420DMAContext@@UAAKXZ|
	DCD	|?HWDMAMemoryIn@OMAP2420DMAContext@@UAAPAEXZ|
	DCD	|?HWDMAMemoryOut@OMAP2420DMAContext@@UAAPAEXZ|
	DCD	|?HWMapControllerRegs@ACAudioHWContext@@UAAHXZ|
	DCD	|?HWInitController@ACAudioHWContext@@UAAXXZ|
	DCD	|?HWInitCodec@ACAudioHWContext@@UAAHXZ|
	DCD	|?HWInitNetwork@ACAudioHWContext@@UAAHXZ|
	DCD	|?HWEnableNetwork@ACAudioHWContext@@UAAHH@Z|
	DCD	|?HWAudioPowerTimeout@ACAudioHWContext@@UAAHH@Z|
	DCD	|?HWUpdateAudioPRC@ACAudioHWContext@@UAAXXZ|
	DCD	|?HWPowerUp@ACAudioHWContext@@UAAXXZ|
	DCD	|?HWPowerDown@ACAudioHWContext@@UAAXXZ|
	DCD	|?HWDeinit@ACAudioHWContext@@UAAHXZ|
	DCD	|?OutputStreamOpened@ACAudioHWContext@@UAAHXZ|
	DCD	|?OutputStreamClosed@ACAudioHWContext@@UAAHXZ|
	DCD	|?InputStreamOpened@ACAudioHWContext@@UAAHXZ|
	DCD	|?InputStreamClosed@ACAudioHWContext@@UAAHXZ|
	DCD	|?SetRecordMemoPath@ACAudioHWContext@@UAAXH@Z|
	DCD	|?HandleExtMessage@ACAudioHWContext@@UAAHKPAEK0KPAK@Z|
	DCD	|?PmControlMessage@ACAudioHWContext@@UAAHKPAEK0KPAK@Z|
	DCD	|?RegisterRilCallback@ACAudioHWContext@@EAAHPAPAX@Z|
	DCD	|?SetupDelayUpdate@HardwareContext@@MAAXXZ|
	DCD	|?DelayedUpdate@HardwareContext@@MAAXXZ|
	DCD	|?HWEnableInputChannel@ACAudioHWContext@@UAAXH@Z|
	DCD	|?HWEnableOutputChannel@ACAudioHWContext@@UAAXH@Z|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0ACAudioHWContext@@QAA@PAG@Z| PROC	; ACAudioHWContext::ACAudioHWContext

; 116  : {

  00000		 |$LN8@ACAudioHWC|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd010	 sub         sp, sp, #0x10
  00010		 |$M37632|
  00010	e59d0018	 ldr         r0, [sp, #0x18]
  00014	eb000000	 bl          |??0OMAP2420DMAContext@@QAA@XZ|
  00018	e58d0004	 str         r0, [sp, #4]
  0001c	e59f2200	 ldr         r2, [pc, #0x200]
  00020	e59d3018	 ldr         r3, [sp, #0x18]
  00024	e5832000	 str         r2, [r3]

; 117  :     // Bluetooth 
; 118  :     m_CurBTEacConnection = CONNECTION_NOT_DEFINED;

  00028	e59d3018	 ldr         r3, [sp, #0x18]
  0002c	e2832f4b	 add         r2, r3, #0x4B, 30
  00030	e3a03000	 mov         r3, #0
  00034	e5823000	 str         r3, [r2]

; 119  : 
; 120  :     // modem 
; 121  :     InitializeCriticalSection( &m_csModemDevice );

  00038	e59d3018	 ldr         r3, [sp, #0x18]
  0003c	e2830e11	 add         r0, r3, #0x11, 28
  00040	eb000000	 bl          InitializeCriticalSection

; 122  :     m_fHeadsetOn = FALSE;

  00044	e59d3018	 ldr         r3, [sp, #0x18]
  00048	e2832f4a	 add         r2, r3, #0x4A, 30
  0004c	e3a03000	 mov         r3, #0
  00050	e5823000	 str         r3, [r2]

; 123  :     m_fModemCodecOn = FALSE;

  00054	e59d3018	 ldr         r3, [sp, #0x18]
  00058	e2832f49	 add         r2, r3, #0x49, 30
  0005c	e3a03000	 mov         r3, #0
  00060	e5823000	 str         r3, [r2]

; 124  :     m_hGsmDev = NULL;

  00064	e59d3018	 ldr         r3, [sp, #0x18]
  00068	e2832f43	 add         r2, r3, #0x43, 30
  0006c	e3a03000	 mov         r3, #0
  00070	e5823000	 str         r3, [r2]

; 125  : 
; 126  :     m_pMCBSPRegisters=NULL;

  00074	e59d3018	 ldr         r3, [sp, #0x18]
  00078	e2832e16	 add         r2, r3, #0x16, 28
  0007c	e3a03000	 mov         r3, #0
  00080	e5823000	 str         r3, [r2]

; 127  :     m_pPRCMRegs=NULL;

  00084	e59d3018	 ldr         r3, [sp, #0x18]
  00088	e2832f59	 add         r2, r3, #0x59, 30
  0008c	e3a03000	 mov         r3, #0
  00090	e5823000	 str         r3, [r2]

; 128  :     m_hSPI=NULL; 

  00094	e59d3018	 ldr         r3, [sp, #0x18]
  00098	e2832f5a	 add         r2, r3, #0x5A, 30
  0009c	e3a03000	 mov         r3, #0
  000a0	e5823000	 str         r3, [r2]

; 129  : 
; 130  :     // power managment cs
; 131  :     InitializeCriticalSection( &m_csAudioPRC );

  000a4	e59d3018	 ldr         r3, [sp, #0x18]
  000a8	e2830e13	 add         r0, r3, #0x13, 28
  000ac	eb000000	 bl          InitializeCriticalSection

; 132  : 
; 133  :     // EAC power
; 134  :     m_bEACPowerOn=FALSE;         

  000b0	e59d3018	 ldr         r3, [sp, #0x18]
  000b4	e2832f51	 add         r2, r3, #0x51, 30
  000b8	e3a03000	 mov         r3, #0
  000bc	e5823000	 str         r3, [r2]

; 135  :     m_ExternPowerStateRequired = D4;

  000c0	e59d3018	 ldr         r3, [sp, #0x18]
  000c4	e2832f42	 add         r2, r3, #0x42, 30
  000c8	e3a03004	 mov         r3, #4
  000cc	e5823000	 str         r3, [r2]

; 136  :     
; 137  :     // audio state variables
; 138  :     m_bModemPortActive=FALSE;     

  000d0	e59d3018	 ldr         r3, [sp, #0x18]
  000d4	e2832f52	 add         r2, r3, #0x52, 30
  000d8	e3a03000	 mov         r3, #0
  000dc	e5823000	 str         r3, [r2]

; 139  :     m_bPowerTimeout=FALSE;        

  000e0	e59d3018	 ldr         r3, [sp, #0x18]
  000e4	e2832f53	 add         r2, r3, #0x53, 30
  000e8	e3a03000	 mov         r3, #0
  000ec	e5823000	 str         r3, [r2]

; 140  :     m_bBtHeadsetActive=FALSE;      

  000f0	e59d3018	 ldr         r3, [sp, #0x18]
  000f4	e2832e15	 add         r2, r3, #0x15, 28
  000f8	e3a03000	 mov         r3, #0
  000fc	e5823000	 str         r3, [r2]

; 141  :     m_bHeadsetActive=FALSE;       

  00100	e59d3018	 ldr         r3, [sp, #0x18]
  00104	e2832f55	 add         r2, r3, #0x55, 30
  00108	e3a03000	 mov         r3, #0
  0010c	e5823000	 str         r3, [r2]

; 142  :     m_bLoudSpeakerActive=FALSE;   

  00110	e59d3018	 ldr         r3, [sp, #0x18]
  00114	e2832f56	 add         r2, r3, #0x56, 30
  00118	e3a03000	 mov         r3, #0
  0011c	e5823000	 str         r3, [r2]

; 143  :     m_bChooseBtHeadset=FALSE;     

  00120	e59d3018	 ldr         r3, [sp, #0x18]
  00124	e2832f57	 add         r2, r3, #0x57, 30
  00128	e3a03000	 mov         r3, #0
  0012c	e5823000	 str         r3, [r2]

; 144  : 
; 145  :     // default audio sidetone volume settings
; 146  :     m_nSidetoneHeadset=DEFAULT_SIDETONE;

  00130	e59d3018	 ldr         r3, [sp, #0x18]
  00134	e2832f5b	 add         r2, r3, #0x5B, 30
  00138	e3a03064	 mov         r3, #0x64
  0013c	e5823000	 str         r3, [r2]

; 147  :     m_nSidetoneSpeaker=DEFAULT_SIDETONE;

  00140	e59d3018	 ldr         r3, [sp, #0x18]
  00144	e2832e17	 add         r2, r3, #0x17, 28
  00148	e3a03064	 mov         r3, #0x64
  0014c	e5823000	 str         r3, [r2]

; 148  :     // mixer/dma default gain 0db
; 149  :     m_nDMAReadVol    = DEFAULT_DMAVOLUME;

  00150	e59d3018	 ldr         r3, [sp, #0x18]
  00154	e2832f5d	 add         r2, r3, #0x5D, 30
  00158	e3a030e7	 mov         r3, #0xE7
  0015c	e5823000	 str         r3, [r2]

; 150  :     m_nDMAWriteVol   = DEFAULT_DMAVOLUME;

  00160	e59d3018	 ldr         r3, [sp, #0x18]
  00164	e2832f5e	 add         r2, r3, #0x5E, 30
  00168	e3a030e7	 mov         r3, #0xE7
  0016c	e5823000	 str         r3, [r2]

; 151  :     m_nGSMSpeakerVol = DEFAULT_MIXVOLUME;

  00170	e59d3018	 ldr         r3, [sp, #0x18]
  00174	e2832f5f	 add         r2, r3, #0x5F, 30
  00178	e3a03067	 mov         r3, #0x67
  0017c	e5823000	 str         r3, [r2]

; 152  :     m_nWavSpeakerVol = DEFAULT_MIXVOLUME;

  00180	e59d3018	 ldr         r3, [sp, #0x18]
  00184	e2832d06	 add         r2, r3, #6, 26
  00188	e3a03067	 mov         r3, #0x67
  0018c	e5823000	 str         r3, [r2]

; 153  :     m_nWavGSMVol     = DEFAULT_MIXVOLUME;

  00190	e59d3018	 ldr         r3, [sp, #0x18]
  00194	e2832f61	 add         r2, r3, #0x61, 30
  00198	e3a03067	 mov         r3, #0x67
  0019c	e5823000	 str         r3, [r2]

; 154  :     m_nGSMWavVol     = DEFAULT_MIXVOLUME;

  001a0	e59d3018	 ldr         r3, [sp, #0x18]
  001a4	e2832f62	 add         r2, r3, #0x62, 30
  001a8	e3a03067	 mov         r3, #0x67
  001ac	e5823000	 str         r3, [r2]

; 155  : 
; 156  :     // Read device parameters
; 157  :     if (GetDeviceRegistryParams( 
; 158  :          lpszContext,
; 159  :          this, 
; 160  :          dimof(g_RegParams), 
; 161  :          g_RegParams
; 162  :         )!=ERROR_SUCCESS)

  001b0	e59f3068	 ldr         r3, [pc, #0x68]
  001b4	e3a0200b	 mov         r2, #0xB
  001b8	e59d1018	 ldr         r1, [sp, #0x18]
  001bc	e59d001c	 ldr         r0, [sp, #0x1C]
  001c0	eb000000	 bl          GetDeviceRegistryParams
  001c4	e58d0008	 str         r0, [sp, #8]
  001c8	e59d3008	 ldr         r3, [sp, #8]
  001cc	e3530000	 cmp         r3, #0
  001d0	0a00000a	 beq         |$LN1@ACAudioHWC|

; 163  :     {
; 164  :         DEBUGMSG(ZONE_ERROR, (L"ACAudioHWContext::ACAudioHWContext: "
; 165  :             L"ReadRegistryParams() failed\r\n"
; 166  :         ));

  001d4	e59f3040	 ldr         r3, [pc, #0x40]
  001d8	e5933440	 ldr         r3, [r3, #0x440]
  001dc	e3130902	 tst         r3, #2, 18
  001e0	0a000004	 beq         |$LN4@ACAudioHWC|
  001e4	e59f002c	 ldr         r0, [pc, #0x2C]
  001e8	eb000000	 bl          NKDbgPrintfW
  001ec	e3a03001	 mov         r3, #1
  001f0	e58d300c	 str         r3, [sp, #0xC]
  001f4	ea000001	 b           |$LN5@ACAudioHWC|
  001f8		 |$LN4@ACAudioHWC|
  001f8	e3a03000	 mov         r3, #0
  001fc	e58d300c	 str         r3, [sp, #0xC]
  00200		 |$LN5@ACAudioHWC|
  00200		 |$LN1@ACAudioHWC|

; 167  :     }
; 168  : 
; 169  :    
; 170  : }

  00200	e59d3018	 ldr         r3, [sp, #0x18]
  00204	e58d3000	 str         r3, [sp]
  00208	e59d0000	 ldr         r0, [sp]
  0020c	e28dd010	 add         sp, sp, #0x10
  00210	e89d6000	 ldmia       sp, {sp, lr}
  00214	e12fff1e	 bx          lr
  00218		 |$LN9@ACAudioHWC|
  00218		 |$LN10@ACAudioHWC|
  00218	00000000	 DCD         |??_C@_1IE@IFGJEHML@?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe@|
  0021c		 |$LN11@ACAudioHWC|
  0021c	00000000	 DCD         |dpCurSettings|
  00220		 |$LN12@ACAudioHWC|
  00220	00000000	 DCD         |g_RegParams|
  00224		 |$LN13@ACAudioHWC|
  00224	00000000	 DCD         |??_7ACAudioHWContext@@6B@|
  00228		 |$M37633|

			 ENDP  ; |??0ACAudioHWContext@@QAA@PAG@Z|, ACAudioHWContext::ACAudioHWContext

; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\dmactxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T37646| DCD	|$LN5@HWDMAMemor|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HWDMAMemoryIn@OMAP2420DMAContext@@UAAPAEXZ| PROC ; OMAP2420DMAContext::HWDMAMemoryIn

; 58   :     PBYTE HWDMAMemoryIn( void ) { return m_pbDMABufIn;  }

  00000		 |$LN5@HWDMAMemor|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37643|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833c01	 add         r3, r3, #1, 24
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M37644|

			 ENDP  ; |?HWDMAMemoryIn@OMAP2420DMAContext@@UAAPAEXZ|, OMAP2420DMAContext::HWDMAMemoryIn


  00000			 AREA	 |.pdata|, PDATA
|$T37654| DCD	|$LN5@HWDMAMemor@2|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HWDMAMemoryOut@OMAP2420DMAContext@@UAAPAEXZ| PROC ; OMAP2420DMAContext::HWDMAMemoryOut

; 59   :     PBYTE HWDMAMemoryOut( void ){ return m_pbDMABufOut; }

  00000		 |$LN5@HWDMAMemor@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37651|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833f41	 add         r3, r3, #0x41, 30
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M37652|

			 ENDP  ; |?HWDMAMemoryOut@OMAP2420DMAContext@@UAAPAEXZ|, OMAP2420DMAContext::HWDMAMemoryOut

; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\xhwctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T37662| DCD	|$LN5@HWInitCode|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HWInitCodec@ACAudioHWContext@@UAAHXZ| PROC ; ACAudioHWContext::HWInitCodec

; 49   :     BOOL  HWInitCodec( void ){ return TRUE; }

  00000		 |$LN5@HWInitCode|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37659|
  00010	e3a03001	 mov         r3, #1
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M37660|

			 ENDP  ; |?HWInitCodec@ACAudioHWContext@@UAAHXZ|, ACAudioHWContext::HWInitCodec

	EXPORT	|??1ACAudioHWContext@@UAA@XZ|		; ACAudioHWContext::~ACAudioHWContext
	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T37670| DCD	|$LN6@scalar|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GACAudioHWContext@@UAAPAXI@Z| PROC	; ACAudioHWContext::`scalar deleting destructor'
  00000		 |$LN6@scalar|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37667|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1ACAudioHWContext@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M37668|

			 ENDP  ; |??_GACAudioHWContext@@UAAPAXI@Z|, ACAudioHWContext::`scalar deleting destructor'

	EXPORT	|??1OMAP2420DMAContext@@UAA@XZ|		; OMAP2420DMAContext::~OMAP2420DMAContext
	EXPORT	|CloseDevice|
	IMPORT	|DeleteCriticalSection|

  00008			 AREA	 |.pdata|, PDATA
|$T37677| DCD	|$LN5@ACAudioHWC@2|
	DCD	0x40001503
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\xhwctxt.cpp

  00228			 AREA	 |.text|, CODE, ARM

  00228		 |??1ACAudioHWContext@@UAA@XZ| PROC	; ACAudioHWContext::~ACAudioHWContext

; 180  : {

  00228		 |$LN5@ACAudioHWC@2|
  00228	e1a0c00d	 mov         r12, sp
  0022c	e92d0001	 stmdb       sp!, {r0}
  00230	e92d5000	 stmdb       sp!, {r12, lr}
  00234		 |$M37674|
  00234	e59f203c	 ldr         r2, [pc, #0x3C]
  00238	e59d3008	 ldr         r3, [sp, #8]
  0023c	e5832000	 str         r2, [r3]

; 181  :     // modem 
; 182  :     DeleteCriticalSection( &m_csAudioPRC );

  00240	e59d3008	 ldr         r3, [sp, #8]
  00244	e2830e13	 add         r0, r3, #0x13, 28
  00248	eb000000	 bl          DeleteCriticalSection

; 183  :     DeleteCriticalSection( &m_csModemDevice );

  0024c	e59d3008	 ldr         r3, [sp, #8]
  00250	e2830e11	 add         r0, r3, #0x11, 28
  00254	eb000000	 bl          DeleteCriticalSection

; 184  :     CloseDevice(m_hGsmDev);

  00258	e59d3008	 ldr         r3, [sp, #8]
  0025c	e2833f43	 add         r3, r3, #0x43, 30
  00260	e5930000	 ldr         r0, [r3]
  00264	eb000000	 bl          CloseDevice

; 185  : }

  00268	e59d0008	 ldr         r0, [sp, #8]
  0026c	eb000000	 bl          |??1OMAP2420DMAContext@@UAA@XZ|
  00270	e89d6000	 ldmia       sp, {sp, lr}
  00274	e12fff1e	 bx          lr
  00278		 |$LN6@ACAudioHWC@2|
  00278		 |$LN7@ACAudioHWC@2|
  00278	00000000	 DCD         |??_7ACAudioHWContext@@6B@|
  0027c		 |$M37675|

			 ENDP  ; |??1ACAudioHWContext@@UAA@XZ|, ACAudioHWContext::~ACAudioHWContext

	IMPORT	|LocalFree|
	IMPORT	|CloseHandle|
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\inc\ceddkex.h

  00000			 AREA	 |.pdata|, PDATA
|$T37685| DCD	|$LN5@CloseDevic|
	DCD	0x40001504
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |CloseDevice| PROC

; 151  : {

  00000		 |$LN5@CloseDevic|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd010	 sub         sp, sp, #0x10
  00010		 |$M37682|

; 152  :     BOOL rc;
; 153  :     CEDDK_DRIVER_CONTEXT *pContext = (CEDDK_DRIVER_CONTEXT*)hDevice;

  00010	e59d3018	 ldr         r3, [sp, #0x18]
  00014	e58d3004	 str         r3, [sp, #4]

; 154  : 
; 155  :     rc = CloseHandle(pContext->hDevice);

  00018	e59d3004	 ldr         r3, [sp, #4]
  0001c	e2833010	 add         r3, r3, #0x10
  00020	e5930000	 ldr         r0, [r3]
  00024	eb000000	 bl          CloseHandle
  00028	e58d000c	 str         r0, [sp, #0xC]
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]

; 156  :     LocalFree(pContext);

  00034	e59d0004	 ldr         r0, [sp, #4]
  00038	eb000000	 bl          LocalFree

; 157  :     return rc;

  0003c	e59d3000	 ldr         r3, [sp]
  00040	e58d3008	 str         r3, [sp, #8]

; 158  : }

  00044	e59d0008	 ldr         r0, [sp, #8]
  00048	e28dd010	 add         sp, sp, #0x10
  0004c	e89d6000	 ldmia       sp, {sp, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$M37683|

			 ENDP  ; |CloseDevice|

	IMPORT	|??1HardwareContext@@UAA@XZ|		; HardwareContext::~HardwareContext

  00000			 AREA	 |.pdata|, PDATA
|$T37692| DCD	|$LN5@OMAP2420DM|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1OMAP2420DMAContext@@UAA@XZ| PROC	; OMAP2420DMAContext::~OMAP2420DMAContext
  00000		 |$LN5@OMAP2420DM|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37689|
  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          |??1HardwareContext@@UAA@XZ|
  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M37690|

			 ENDP  ; |??1OMAP2420DMAContext@@UAA@XZ|, OMAP2420DMAContext::~OMAP2420DMAContext

	EXPORT	|??_C@_1FC@NGCDOLAC@?$AA?$CL?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAE?$AAx?$AAt?$AAS?$AAp?$AAe?$AAa@| [ DATA ] ; `string'
	EXPORT	|?EnableExtSpeaker@ACAudioHWContext@@AAAXH@Z| ; ACAudioHWContext::EnableExtSpeaker

  00010			 AREA	 |.pdata|, PDATA
|$T37701| DCD	|$LN7@EnableExtS|
	DCD	0x40001504
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\xhwctxt.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@NGCDOLAC@?$AA?$CL?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAE?$AAx?$AAt?$AAS?$AAp?$AAe?$AAa@| DCB "+"
	DCB	0x0, "A", 0x0, "C", 0x0, "A", 0x0, "u", 0x0, "d", 0x0, "i"
	DCB	0x0, "o", 0x0, "H", 0x0, "W", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":", 0x0, ":"
	DCB	0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, "E", 0x0, "x", 0x0, "t", 0x0, "S", 0x0, "p", 0x0, "e"
	DCB	0x0, "a", 0x0, "k", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  0027c			 AREA	 |.text|, CODE, ARM

  0027c		 |?EnableExtSpeaker@ACAudioHWContext@@AAAXH@Z| PROC ; ACAudioHWContext::EnableExtSpeaker

; 196  : {

  0027c		 |$LN7@EnableExtS|
  0027c	e1a0c00d	 mov         r12, sp
  00280	e92d0003	 stmdb       sp!, {r0, r1}
  00284	e92d5000	 stmdb       sp!, {r12, lr}
  00288	e24dd004	 sub         sp, sp, #4
  0028c		 |$M37698|

; 197  :     DEBUGMSG(ZONE_AC, (L"+ACAudioHWContext::EnableExtSpeaker %d\r\n", bEnable));

  0028c	e59f3038	 ldr         r3, [pc, #0x38]
  00290	e5933440	 ldr         r3, [r3, #0x440]
  00294	e3130001	 tst         r3, #1
  00298	0a000005	 beq         |$LN3@EnableExtS|
  0029c	e59d1010	 ldr         r1, [sp, #0x10]
  002a0	e59f0020	 ldr         r0, [pc, #0x20]
  002a4	eb000000	 bl          NKDbgPrintfW
  002a8	e3a03001	 mov         r3, #1
  002ac	e58d3000	 str         r3, [sp]
  002b0	ea000001	 b           |$LN4@EnableExtS|
  002b4		 |$LN3@EnableExtS|
  002b4	e3a03000	 mov         r3, #0
  002b8	e58d3000	 str         r3, [sp]
  002bc		 |$LN4@EnableExtS|

; 198  : }

  002bc	e28dd004	 add         sp, sp, #4
  002c0	e89d6000	 ldmia       sp, {sp, lr}
  002c4	e12fff1e	 bx          lr
  002c8		 |$LN8@EnableExtS|
  002c8		 |$LN9@EnableExtS|
  002c8	00000000	 DCD         |??_C@_1FC@NGCDOLAC@?$AA?$CL?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAE?$AAx?$AAt?$AAS?$AAp?$AAe?$AAa@|
  002cc		 |$LN10@EnableExtS|
  002cc	00000000	 DCD         |dpCurSettings|
  002d0		 |$M37699|

			 ENDP  ; |?EnableExtSpeaker@ACAudioHWContext@@AAAXH@Z|, ACAudioHWContext::EnableExtSpeaker

	IMPORT	|?InitModem@ACAudioHWContext@@AAAHXZ|	; ACAudioHWContext::InitModem

  00018			 AREA	 |.pdata|, PDATA
|$T37710| DCD	|$LN6@HWInitNetw|
	DCD	0x40003f04
; Function compile flags: /Odtp

  002d0			 AREA	 |.text|, CODE, ARM

  002d0		 |?HWInitNetwork@ACAudioHWContext@@UAAHXZ| PROC ; ACAudioHWContext::HWInitNetwork

; 209  : {

  002d0		 |$LN6@HWInitNetw|
  002d0	e1a0c00d	 mov         r12, sp
  002d4	e92d0001	 stmdb       sp!, {r0}
  002d8	e92d5000	 stmdb       sp!, {r12, lr}
  002dc	e24dd004	 sub         sp, sp, #4
  002e0		 |$M37707|

; 210  :     // Init parameters. 
; 211  :     m_bModemPortActive=FALSE;     

  002e0	e59d300c	 ldr         r3, [sp, #0xC]
  002e4	e2832f52	 add         r2, r3, #0x52, 30
  002e8	e3a03000	 mov         r3, #0
  002ec	e5823000	 str         r3, [r2]

; 212  :     m_bPowerTimeout=FALSE;        

  002f0	e59d300c	 ldr         r3, [sp, #0xC]
  002f4	e2832f53	 add         r2, r3, #0x53, 30
  002f8	e3a03000	 mov         r3, #0
  002fc	e5823000	 str         r3, [r2]

; 213  :     m_bBtHeadsetActive=FALSE;      

  00300	e59d300c	 ldr         r3, [sp, #0xC]
  00304	e2832e15	 add         r2, r3, #0x15, 28
  00308	e3a03000	 mov         r3, #0
  0030c	e5823000	 str         r3, [r2]

; 214  :     m_bHeadsetActive=FALSE;       

  00310	e59d300c	 ldr         r3, [sp, #0xC]
  00314	e2832f55	 add         r2, r3, #0x55, 30
  00318	e3a03000	 mov         r3, #0
  0031c	e5823000	 str         r3, [r2]

; 215  :     m_bLoudSpeakerActive=FALSE;   

  00320	e59d300c	 ldr         r3, [sp, #0xC]
  00324	e2832f56	 add         r2, r3, #0x56, 30
  00328	e3a03000	 mov         r3, #0
  0032c	e5823000	 str         r3, [r2]

; 216  :     m_bChooseBtHeadset=FALSE;     

  00330	e59d300c	 ldr         r3, [sp, #0xC]
  00334	e2832f57	 add         r2, r3, #0x57, 30
  00338	e3a03000	 mov         r3, #0
  0033c	e5823000	 str         r3, [r2]

; 217  :     
; 218  :     m_dwBtAudioRouting = BT_AUDIO_MODEM;

  00340	e59d300c	 ldr         r3, [sp, #0xC]
  00344	e28320dc	 add         r2, r3, #0xDC
  00348	e3a03002	 mov         r3, #2
  0034c	e5823000	 str         r3, [r2]

; 219  :     
; 220  : #ifdef CHOOSE_BT_HEADSET
; 221  :     m_bChooseBtHeadset = TRUE;
; 222  : #else
; 223  :     m_bChooseBtHeadset = FALSE;

  00350	e59d300c	 ldr         r3, [sp, #0xC]
  00354	e2832f57	 add         r2, r3, #0x57, 30
  00358	e3a03000	 mov         r3, #0
  0035c	e5823000	 str         r3, [r2]

; 224  : #endif
; 225  : 
; 226  :     InitModem ();

  00360	e59d000c	 ldr         r0, [sp, #0xC]
  00364	eb000000	 bl          |?InitModem@ACAudioHWContext@@AAAHXZ|

; 227  :     HWUpdateAudioPRC ();

  00368	e59d300c	 ldr         r3, [sp, #0xC]
  0036c	e5933000	 ldr         r3, [r3]
  00370	e2833048	 add         r3, r3, #0x48
  00374	e59d000c	 ldr         r0, [sp, #0xC]
  00378	e5933000	 ldr         r3, [r3]
  0037c	e1a0e00f	 mov         lr, pc
  00380	e12fff13	 bx          r3

; 228  :     if (!m_bEACPowerOn) {

  00384	e59d300c	 ldr         r3, [sp, #0xC]
  00388	e2833f51	 add         r3, r3, #0x51, 30
  0038c	e5933000	 ldr         r3, [r3]
  00390	e3530000	 cmp         r3, #0
  00394	1a000006	 bne         |$LN1@HWInitNetw|

; 229  :         HWPowerDown();

  00398	e59d300c	 ldr         r3, [sp, #0xC]
  0039c	e5933000	 ldr         r3, [r3]
  003a0	e2833050	 add         r3, r3, #0x50
  003a4	e59d000c	 ldr         r0, [sp, #0xC]
  003a8	e5933000	 ldr         r3, [r3]
  003ac	e1a0e00f	 mov         lr, pc
  003b0	e12fff13	 bx          r3
  003b4		 |$LN1@HWInitNetw|

; 230  :     }
; 231  : 
; 232  :     return ( TRUE ); 

  003b4	e3a03001	 mov         r3, #1
  003b8	e58d3000	 str         r3, [sp]

; 233  : }   

  003bc	e59d0000	 ldr         r0, [sp]
  003c0	e28dd004	 add         sp, sp, #4
  003c4	e89d6000	 ldmia       sp, {sp, lr}
  003c8	e12fff1e	 bx          lr
  003cc		 |$M37708|

			 ENDP  ; |?HWInitNetwork@ACAudioHWContext@@UAAHXZ|, ACAudioHWContext::HWInitNetwork


  00020			 AREA	 |.pdata|, PDATA
|$T37716| DCD	|$LN5@HWDeinit|
	DCD	0x40000a04
; Function compile flags: /Odtp

  003cc			 AREA	 |.text|, CODE, ARM

  003cc		 |?HWDeinit@ACAudioHWContext@@UAAHXZ| PROC ; ACAudioHWContext::HWDeinit

; 244  : {

  003cc		 |$LN5@HWDeinit|
  003cc	e1a0c00d	 mov         r12, sp
  003d0	e92d0001	 stmdb       sp!, {r0}
  003d4	e92d5000	 stmdb       sp!, {r12, lr}
  003d8	e24dd004	 sub         sp, sp, #4
  003dc		 |$M37713|

; 245  :     return TRUE;

  003dc	e3a03001	 mov         r3, #1
  003e0	e58d3000	 str         r3, [sp]

; 246  : }

  003e4	e59d0000	 ldr         r0, [sp]
  003e8	e28dd004	 add         sp, sp, #4
  003ec	e89d6000	 ldmia       sp, {sp, lr}
  003f0	e12fff1e	 bx          lr
  003f4		 |$M37714|

			 ENDP  ; |?HWDeinit@ACAudioHWContext@@UAAHXZ|, ACAudioHWContext::HWDeinit

	EXPORT	|??1CAutoLock@@QAA@XZ|			; CAutoLock::~CAutoLock
	EXPORT	|??0CAutoLock@@QAA@PAUCRITICAL_SECTION@@@Z| ; CAutoLock::CAutoLock

  00028			 AREA	 |.pdata|, PDATA
|$T37723| DCD	|$LN9@HWEnableNe|
	DCD	0x40004104
; Function compile flags: /Odtp

  003f4			 AREA	 |.text|, CODE, ARM

  003f4		 |?HWEnableNetwork@ACAudioHWContext@@UAAHH@Z| PROC ; ACAudioHWContext::HWEnableNetwork

; 257  : {

  003f4		 |$LN9@HWEnableNe|
  003f4	e1a0c00d	 mov         r12, sp
  003f8	e92d0003	 stmdb       sp!, {r0, r1}
  003fc	e92d5000	 stmdb       sp!, {r12, lr}
  00400	e24dd014	 sub         sp, sp, #0x14
  00404		 |$M37720|

; 258  :     BOOL bRetVal = TRUE;    // Indicate no error.

  00404	e3a03001	 mov         r3, #1
  00408	e58d3004	 str         r3, [sp, #4]

; 259  :     // this lock will nest the m_csAudioPRC critical section
; 260  :     CAutoLock cs( &m_csAudioPRC );

  0040c	e59d301c	 ldr         r3, [sp, #0x1C]
  00410	e2831e13	 add         r1, r3, #0x13, 28
  00414	e28d0000	 add         r0, sp, #0
  00418	eb000000	 bl          |??0CAutoLock@@QAA@PAUCRITICAL_SECTION@@@Z|
  0041c	e58d0010	 str         r0, [sp, #0x10]

; 261  : 
; 262  :     // Make sure the modem device is ready. 
; 263  :     //    ModemNetworkEnabled(bEnable);
; 264  : 
; 265  :     // Check for enable network audio transfer.
; 266  :     if ( bEnable )

  00420	e59d3020	 ldr         r3, [sp, #0x20]
  00424	e3530000	 cmp         r3, #0
  00428	0a000014	 beq         |$LN4@HWEnableNe|

; 267  :     {
; 268  :         // Check if network already running.
; 269  :         if ( !m_bModemPortActive )

  0042c	e59d301c	 ldr         r3, [sp, #0x1C]
  00430	e2833f52	 add         r3, r3, #0x52, 30
  00434	e5933000	 ldr         r3, [r3]
  00438	e3530000	 cmp         r3, #0
  0043c	1a00000e	 bne         |$LN3@HWEnableNe|

; 270  :         {
; 271  :             // Indicate network is running.
; 272  :             m_bModemPortActive = TRUE;

  00440	e59d301c	 ldr         r3, [sp, #0x1C]
  00444	e2832f52	 add         r2, r3, #0x52, 30
  00448	e3a03001	 mov         r3, #1
  0044c	e5823000	 str         r3, [r2]

; 273  :         
; 274  :             // Force not to use loud speaker. 
; 275  :             m_bLoudSpeakerActive = FALSE;

  00450	e59d301c	 ldr         r3, [sp, #0x1C]
  00454	e2832f56	 add         r2, r3, #0x56, 30
  00458	e3a03000	 mov         r3, #0
  0045c	e5823000	 str         r3, [r2]

; 276  : 
; 277  :             // Enable the audio path.
; 278  :             HWUpdateAudioPRC();

  00460	e59d301c	 ldr         r3, [sp, #0x1C]
  00464	e5933000	 ldr         r3, [r3]
  00468	e2833048	 add         r3, r3, #0x48
  0046c	e59d001c	 ldr         r0, [sp, #0x1C]
  00470	e5933000	 ldr         r3, [r3]
  00474	e1a0e00f	 mov         lr, pc
  00478	e12fff13	 bx          r3
  0047c		 |$LN3@HWEnableNe|

; 279  :        }
; 280  :     }
; 281  :     else    // Otherwise, disable network audio transfer.

  0047c	ea000013	 b           |$LN2@HWEnableNe|
  00480		 |$LN4@HWEnableNe|

; 282  :     {
; 283  :         // Check if network already stopped.
; 284  :         if ( m_bModemPortActive )

  00480	e59d301c	 ldr         r3, [sp, #0x1C]
  00484	e2833f52	 add         r3, r3, #0x52, 30
  00488	e5933000	 ldr         r3, [r3]
  0048c	e3530000	 cmp         r3, #0
  00490	0a00000e	 beq         |$LN1@HWEnableNe|

; 285  :         {
; 286  :             // Indicate network is stopped.
; 287  :             m_bModemPortActive = FALSE;

  00494	e59d301c	 ldr         r3, [sp, #0x1C]
  00498	e2832f52	 add         r2, r3, #0x52, 30
  0049c	e3a03000	 mov         r3, #0
  004a0	e5823000	 str         r3, [r2]

; 288  :     
; 289  :             // Force to use loud speaker. 
; 290  :             m_bLoudSpeakerActive = TRUE;

  004a4	e59d301c	 ldr         r3, [sp, #0x1C]
  004a8	e2832f56	 add         r2, r3, #0x56, 30
  004ac	e3a03001	 mov         r3, #1
  004b0	e5823000	 str         r3, [r2]

; 291  : 
; 292  :             // Disable the audio path.
; 293  :             HWUpdateAudioPRC();

  004b4	e59d301c	 ldr         r3, [sp, #0x1C]
  004b8	e5933000	 ldr         r3, [r3]
  004bc	e2833048	 add         r3, r3, #0x48
  004c0	e59d001c	 ldr         r0, [sp, #0x1C]
  004c4	e5933000	 ldr         r3, [r3]
  004c8	e1a0e00f	 mov         lr, pc
  004cc	e12fff13	 bx          r3
  004d0		 |$LN1@HWEnableNe|
  004d0		 |$LN2@HWEnableNe|

; 294  :         }
; 295  :     }
; 296  : 
; 297  :     return ( bRetVal ); 

  004d0	e59d3004	 ldr         r3, [sp, #4]
  004d4	e58d3008	 str         r3, [sp, #8]
  004d8	e28d0000	 add         r0, sp, #0
  004dc	eb000000	 bl          |??1CAutoLock@@QAA@XZ|
  004e0	e59d3008	 ldr         r3, [sp, #8]
  004e4	e58d300c	 str         r3, [sp, #0xC]

; 298  : }   

  004e8	e59d000c	 ldr         r0, [sp, #0xC]
  004ec	e28dd014	 add         sp, sp, #0x14
  004f0	e89d6000	 ldmia       sp, {sp, lr}
  004f4	e12fff1e	 bx          lr
  004f8		 |$M37721|

			 ENDP  ; |?HWEnableNetwork@ACAudioHWContext@@UAAHH@Z|, ACAudioHWContext::HWEnableNetwork

	IMPORT	|EnterCriticalSection|
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\strmctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T37729| DCD	|$LN5@CAutoLock|
	DCD	0x40001004
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CAutoLock@@QAA@PAUCRITICAL_SECTION@@@Z| PROC ; CAutoLock::CAutoLock

; 277  :     CAutoLock (CRITICAL_SECTION * cs)

  00000		 |$LN5@CAutoLock|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37726|

; 278  :     {
; 279  :         pcs = cs;

  00010	e59d2010	 ldr         r2, [sp, #0x10]
  00014	e59d300c	 ldr         r3, [sp, #0xC]
  00018	e5832000	 str         r2, [r3]

; 280  :         EnterCriticalSection(pcs);

  0001c	e59d300c	 ldr         r3, [sp, #0xC]
  00020	e5930000	 ldr         r0, [r3]
  00024	eb000000	 bl          EnterCriticalSection

; 281  :     }

  00028	e59d300c	 ldr         r3, [sp, #0xC]
  0002c	e58d3000	 str         r3, [sp]
  00030	e59d0000	 ldr         r0, [sp]
  00034	e28dd004	 add         sp, sp, #4
  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$M37727|

			 ENDP  ; |??0CAutoLock@@QAA@PAUCRITICAL_SECTION@@@Z|, CAutoLock::CAutoLock

	IMPORT	|LeaveCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37736| DCD	|$LN5@CAutoLock@2|
	DCD	0x40000803
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CAutoLock@@QAA@XZ| PROC		; CAutoLock::~CAutoLock

; 283  :     {

  00000		 |$LN5@CAutoLock@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37733|

; 284  :         LeaveCriticalSection(pcs);

  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e5930000	 ldr         r0, [r3]
  00014	eb000000	 bl          LeaveCriticalSection

; 285  :     }

  00018	e89d6000	 ldmia       sp, {sp, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$M37734|

			 ENDP  ; |??1CAutoLock@@QAA@XZ|, CAutoLock::~CAutoLock


  00030			 AREA	 |.pdata|, PDATA
|$T37745| DCD	|$LN5@HWAudioPow|
	DCD	0x40001e04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\xhwctxt.cpp

  004f8			 AREA	 |.text|, CODE, ARM

  004f8		 |?HWAudioPowerTimeout@ACAudioHWContext@@UAAHH@Z| PROC ; ACAudioHWContext::HWAudioPowerTimeout

; 309  : {

  004f8		 |$LN5@HWAudioPow|
  004f8	e1a0c00d	 mov         r12, sp
  004fc	e92d0003	 stmdb       sp!, {r0, r1}
  00500	e92d5000	 stmdb       sp!, {r12, lr}
  00504	e24dd010	 sub         sp, sp, #0x10
  00508		 |$M37742|

; 310  :     CAutoLock cs( &m_csAudioPRC );

  00508	e59d3018	 ldr         r3, [sp, #0x18]
  0050c	e2831e13	 add         r1, r3, #0x13, 28
  00510	e28d0000	 add         r0, sp, #0
  00514	eb000000	 bl          |??0CAutoLock@@QAA@PAUCRITICAL_SECTION@@@Z|
  00518	e58d000c	 str         r0, [sp, #0xC]

; 311  : 
; 312  :     // Power can be off since it is timeout. 
; 313  :     m_bPowerTimeout=bTimeOut;

  0051c	e59d3018	 ldr         r3, [sp, #0x18]
  00520	e2832f53	 add         r2, r3, #0x53, 30
  00524	e59d301c	 ldr         r3, [sp, #0x1C]
  00528	e5823000	 str         r3, [r2]

; 314  : 
; 315  :     HWUpdateAudioPRC ();

  0052c	e59d3018	 ldr         r3, [sp, #0x18]
  00530	e5933000	 ldr         r3, [r3]
  00534	e2833048	 add         r3, r3, #0x48
  00538	e59d0018	 ldr         r0, [sp, #0x18]
  0053c	e5933000	 ldr         r3, [r3]
  00540	e1a0e00f	 mov         lr, pc
  00544	e12fff13	 bx          r3

; 316  : 
; 317  :     return ( TRUE );

  00548	e3a03001	 mov         r3, #1
  0054c	e58d3004	 str         r3, [sp, #4]
  00550	e28d0000	 add         r0, sp, #0
  00554	eb000000	 bl          |??1CAutoLock@@QAA@XZ|
  00558	e59d3004	 ldr         r3, [sp, #4]
  0055c	e58d3008	 str         r3, [sp, #8]

; 318  : }

  00560	e59d0008	 ldr         r0, [sp, #8]
  00564	e28dd010	 add         sp, sp, #0x10
  00568	e89d6000	 ldmia       sp, {sp, lr}
  0056c	e12fff1e	 bx          lr
  00570		 |$M37743|

			 ENDP  ; |?HWAudioPowerTimeout@ACAudioHWContext@@UAAHH@Z|, ACAudioHWContext::HWAudioPowerTimeout

	EXPORT	|??_C@_1HA@ICCGCKJH@?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAA?$AAu?$AAd?$AAi?$AAo?$AAP@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@JCFNAGOA@?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAA?$AAu?$AAd?$AAi?$AAo?$AAP@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HI@ONLHICCG@?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAA?$AAu?$AAd?$AAi?$AAo?$AAP@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HK@CMIGKAFK@?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAA?$AAu?$AAd?$AAi?$AAo?$AAP@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@FDKNFFJG@?$AA?$CL?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAA?$AAu?$AAd?$AAi?$AAo@| [ DATA ] ; `string'
	IMPORT	|?SetModemHeadset@ACAudioHWContext@@AAAHH@Z| ; ACAudioHWContext::SetModemHeadset
	IMPORT	|?SetSideTone@ACAudioHWContext@@AAAHH@Z| ; ACAudioHWContext::SetSideTone
	IMPORT	|?SelectVoiceCodec@ACAudioHWContext@@AAAXXZ| ; ACAudioHWContext::SelectVoiceCodec
	IMPORT	|?SelectBtAudio@ACAudioHWContext@@AAAXK@Z| ; ACAudioHWContext::SelectBtAudio
	IMPORT	|?SetControllerClocks@ACAudioHWContext@@AAAXH@Z| ; ACAudioHWContext::SetControllerClocks
	IMPORT	|?SetCodecPower@ACAudioHWContext@@AAAXH@Z| ; ACAudioHWContext::SetCodecPower
	IMPORT	|?SetModemDevice@ACAudioHWContext@@AAAHH@Z| ; ACAudioHWContext::SetModemDevice

  00038			 AREA	 |.pdata|, PDATA
|$T37762| DCD	|$LN44@HWUpdateAu|
	DCD	0x40014704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@ICCGCKJH@?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAA?$AAu?$AAd?$AAi?$AAo?$AAP@| DCB "A"
	DCB	0x0, "C", 0x0, "A", 0x0, "u", 0x0, "d", 0x0, "i", 0x0, "o"
	DCB	0x0, "H", 0x0, "W", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":", 0x0, ":", 0x0, "H"
	DCB	0x0, "W", 0x0, "U", 0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "A", 0x0, "u", 0x0, "d", 0x0, "i", 0x0, "o"
	DCB	0x0, "P", 0x0, "R", 0x0, "C", 0x0, ":", 0x0, " ", 0x0, "B"
	DCB	0x0, "t", 0x0, "H", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, "S", 0x0, "e", 0x0, "l", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@JCFNAGOA@?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAA?$AAu?$AAd?$AAi?$AAo?$AAP@| DCB "A"
	DCB	0x0, "C", 0x0, "A", 0x0, "u", 0x0, "d", 0x0, "i", 0x0, "o"
	DCB	0x0, "H", 0x0, "W", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":", 0x0, ":", 0x0, "H"
	DCB	0x0, "W", 0x0, "U", 0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "A", 0x0, "u", 0x0, "d", 0x0, "i", 0x0, "o"
	DCB	0x0, "P", 0x0, "R", 0x0, "C", 0x0, ":", 0x0, " ", 0x0, "T"
	DCB	0x0, "u", 0x0, "r", 0x0, "n", 0x0, " ", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "p", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@ONLHICCG@?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAA?$AAu?$AAd?$AAi?$AAo?$AAP@| DCB "A"
	DCB	0x0, "C", 0x0, "A", 0x0, "u", 0x0, "d", 0x0, "i", 0x0, "o"
	DCB	0x0, "H", 0x0, "W", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":", 0x0, ":", 0x0, "H"
	DCB	0x0, "W", 0x0, "U", 0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "A", 0x0, "u", 0x0, "d", 0x0, "i", 0x0, "o"
	DCB	0x0, "P", 0x0, "R", 0x0, "C", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "o", 0x0, "r", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "l"
	DCB	0x0, "o", 0x0, "u", 0x0, "d", 0x0, " ", 0x0, "s", 0x0, "p"
	DCB	0x0, "e", 0x0, "a", 0x0, "k", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "o", 0x0, "n", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@CMIGKAFK@?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAA?$AAu?$AAd?$AAi?$AAo?$AAP@| DCB "A"
	DCB	0x0, "C", 0x0, "A", 0x0, "u", 0x0, "d", 0x0, "i", 0x0, "o"
	DCB	0x0, "H", 0x0, "W", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":", 0x0, ":", 0x0, "H"
	DCB	0x0, "W", 0x0, "U", 0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "A", 0x0, "u", 0x0, "d", 0x0, "i", 0x0, "o"
	DCB	0x0, "P", 0x0, "R", 0x0, "C", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "o", 0x0, "r", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "l"
	DCB	0x0, "o", 0x0, "u", 0x0, "d", 0x0, " ", 0x0, "s", 0x0, "p"
	DCB	0x0, "e", 0x0, "a", 0x0, "k", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "o", 0x0, "f", 0x0, "f", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@FDKNFFJG@?$AA?$CL?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAA?$AAu?$AAd?$AAi?$AAo@| DCB "+"
	DCB	0x0, "A", 0x0, "C", 0x0, "A", 0x0, "u", 0x0, "d", 0x0, "i"
	DCB	0x0, "o", 0x0, "H", 0x0, "W", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":", 0x0, ":"
	DCB	0x0, "H", 0x0, "W", 0x0, "U", 0x0, "p", 0x0, "d", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, "A", 0x0, "u", 0x0, "d", 0x0, "i"
	DCB	0x0, "o", 0x0, "P", 0x0, "R", 0x0, "C", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00570			 AREA	 |.text|, CODE, ARM

  00570		 |?HWUpdateAudioPRC@ACAudioHWContext@@UAAXXZ| PROC ; ACAudioHWContext::HWUpdateAudioPRC

; 330  : {

  00570		 |$LN44@HWUpdateAu|
  00570	e1a0c00d	 mov         r12, sp
  00574	e92d0001	 stmdb       sp!, {r0}
  00578	e92d5000	 stmdb       sp!, {r12, lr}
  0057c	e24dd030	 sub         sp, sp, #0x30
  00580		 |$M37759|

; 331  :     CAutoLock cs( &m_csAudioPRC );

  00580	e59d3038	 ldr         r3, [sp, #0x38]
  00584	e2831e13	 add         r1, r3, #0x13, 28
  00588	e28d0004	 add         r0, sp, #4
  0058c	eb000000	 bl          |??0CAutoLock@@QAA@PAUCRITICAL_SECTION@@@Z|
  00590	e58d000c	 str         r0, [sp, #0xC]

; 332  :     BOOL bBothHeadsetArePluggedIn = FALSE;

  00594	e3a03000	 mov         r3, #0
  00598	e58d3000	 str         r3, [sp]

; 333  : 
; 334  :     DEBUGMSG(ZONE_AC, (L"+ACAudioHWContext::HWUpdateAudioPRC\r\n"));

  0059c	e59f34d4	 ldr         r3, [pc, #0x4D4]
  005a0	e5933440	 ldr         r3, [r3, #0x440]
  005a4	e3130001	 tst         r3, #1
  005a8	0a000004	 beq         |$LN30@HWUpdateAu|
  005ac	e59f04d4	 ldr         r0, [pc, #0x4D4]
  005b0	eb000000	 bl          NKDbgPrintfW
  005b4	e3a03001	 mov         r3, #1
  005b8	e58d3010	 str         r3, [sp, #0x10]
  005bc	ea000001	 b           |$LN31@HWUpdateAu|
  005c0		 |$LN30@HWUpdateAu|
  005c0	e3a03000	 mov         r3, #0
  005c4	e58d3010	 str         r3, [sp, #0x10]
  005c8		 |$LN31@HWUpdateAu|

; 335  :     // The power can be off only: 
; 336  :     //  1. when DMA is not running. 
; 337  :     //  2. It is not during call.  
; 338  : 
; 339  :     if (!m_bDMARunning && !m_bModemPortActive)

  005c8	e59d3038	 ldr         r3, [sp, #0x38]
  005cc	e28330c8	 add         r3, r3, #0xC8
  005d0	e5933000	 ldr         r3, [r3]
  005d4	e3530000	 cmp         r3, #0
  005d8	1a00004e	 bne         |$LN27@HWUpdateAu|
  005dc	e59d3038	 ldr         r3, [sp, #0x38]
  005e0	e2833f52	 add         r3, r3, #0x52, 30
  005e4	e5933000	 ldr         r3, [r3]
  005e8	e3530000	 cmp         r3, #0
  005ec	1a000049	 bne         |$LN27@HWUpdateAu|

; 340  :     {
; 341  :         // Force loud speaker off since backlight is off.
; 342  :         if (m_bPowerTimeout)

  005f0	e59d3038	 ldr         r3, [sp, #0x38]
  005f4	e2833f53	 add         r3, r3, #0x53, 30
  005f8	e5933000	 ldr         r3, [r3]
  005fc	e3530000	 cmp         r3, #0
  00600	0a00001d	 beq         |$LN26@HWUpdateAu|

; 343  :         {
; 344  :             if (m_bEACPowerOn)

  00604	e59d3038	 ldr         r3, [sp, #0x38]
  00608	e2833f51	 add         r3, r3, #0x51, 30
  0060c	e5933000	 ldr         r3, [r3]
  00610	e3530000	 cmp         r3, #0
  00614	0a000017	 beq         |$LN25@HWUpdateAu|

; 345  :             {
; 346  :                 m_bEACPowerOn = FALSE;

  00618	e59d3038	 ldr         r3, [sp, #0x38]
  0061c	e2832f51	 add         r2, r3, #0x51, 30
  00620	e3a03000	 mov         r3, #0
  00624	e5823000	 str         r3, [r2]

; 347  : 
; 348  :                 DEBUGMSG(ZONE_AC,(L"ACAudioHWContext::HWUpdateAudioPRC: "
; 349  :                     L"Force loud speaker off\r\n"
; 350  :                 ));

  00628	e59f3448	 ldr         r3, [pc, #0x448]
  0062c	e5933440	 ldr         r3, [r3, #0x440]
  00630	e3130001	 tst         r3, #1
  00634	0a000004	 beq         |$LN32@HWUpdateAu|
  00638	e59f0444	 ldr         r0, [pc, #0x444]
  0063c	eb000000	 bl          NKDbgPrintfW
  00640	e3a03001	 mov         r3, #1
  00644	e58d3014	 str         r3, [sp, #0x14]
  00648	ea000001	 b           |$LN33@HWUpdateAu|
  0064c		 |$LN32@HWUpdateAu|
  0064c	e3a03000	 mov         r3, #0
  00650	e58d3014	 str         r3, [sp, #0x14]
  00654		 |$LN33@HWUpdateAu|

; 351  :                 // Turn off modem device.
; 352  :                 SetModemDevice (FALSE);

  00654	e3a01000	 mov         r1, #0
  00658	e59d0038	 ldr         r0, [sp, #0x38]
  0065c	eb000000	 bl          |?SetModemDevice@ACAudioHWContext@@AAAHH@Z|

; 353  : 
; 354  :                 // Power off codec
; 355  :                 SetCodecPower (FALSE);

  00660	e3a01000	 mov         r1, #0
  00664	e59d0038	 ldr         r0, [sp, #0x38]
  00668	eb000000	 bl          |?SetCodecPower@ACAudioHWContext@@AAAXH@Z|

; 356  : 
; 357  :                 // Request to disable ontroller clocks. 
; 358  :                 SetControllerClocks (FALSE);  

  0066c	e3a01000	 mov         r1, #0
  00670	e59d0038	 ldr         r0, [sp, #0x38]
  00674	eb000000	 bl          |?SetControllerClocks@ACAudioHWContext@@AAAXH@Z|
  00678		 |$LN25@HWUpdateAu|

; 359  :             }
; 360  :         }
; 361  :         else

  00678	ea000025	 b           |$LN24@HWUpdateAu|
  0067c		 |$LN26@HWUpdateAu|

; 362  :         {
; 363  :             // Force loud speaker on when backlight is on.
; 364  :             if (!m_bEACPowerOn)

  0067c	e59d3038	 ldr         r3, [sp, #0x38]
  00680	e2833f51	 add         r3, r3, #0x51, 30
  00684	e5933000	 ldr         r3, [r3]
  00688	e3530000	 cmp         r3, #0
  0068c	1a000020	 bne         |$LN23@HWUpdateAu|

; 365  :             {
; 366  :                 DEBUGMSG(ZONE_AC, (L"ACAudioHWContext::HWUpdateAudioPRC: "
; 367  :                     L"Force loud speaker on\r\n"
; 368  :                 ));

  00690	e59f33e0	 ldr         r3, [pc, #0x3E0]
  00694	e5933440	 ldr         r3, [r3, #0x440]
  00698	e3130001	 tst         r3, #1
  0069c	0a000004	 beq         |$LN34@HWUpdateAu|
  006a0	e59f03d8	 ldr         r0, [pc, #0x3D8]
  006a4	eb000000	 bl          NKDbgPrintfW
  006a8	e3a03001	 mov         r3, #1
  006ac	e58d3018	 str         r3, [sp, #0x18]
  006b0	ea000001	 b           |$LN35@HWUpdateAu|
  006b4		 |$LN34@HWUpdateAu|
  006b4	e3a03000	 mov         r3, #0
  006b8	e58d3018	 str         r3, [sp, #0x18]
  006bc		 |$LN35@HWUpdateAu|

; 369  :                 // Turn on modem device.
; 370  :                 if (!SetModemDevice (TRUE))

  006bc	e3a01001	 mov         r1, #1
  006c0	e59d0038	 ldr         r0, [sp, #0x38]
  006c4	eb000000	 bl          |?SetModemDevice@ACAudioHWContext@@AAAHH@Z|
  006c8	e58d001c	 str         r0, [sp, #0x1C]
  006cc	e59d301c	 ldr         r3, [sp, #0x1C]
  006d0	e3530000	 cmp         r3, #0
  006d4	1a000004	 bne         |$LN22@HWUpdateAu|

; 371  :                 {
; 372  :                     m_bEACPowerOn = FALSE;

  006d8	e59d3038	 ldr         r3, [sp, #0x38]
  006dc	e2832f51	 add         r2, r3, #0x51, 30
  006e0	e3a03000	 mov         r3, #0
  006e4	e5823000	 str         r3, [r2]

; 373  :                 }
; 374  :                 else

  006e8	ea000009	 b           |$LN21@HWUpdateAu|
  006ec		 |$LN22@HWUpdateAu|

; 375  :                 {
; 376  :                     m_bEACPowerOn = TRUE;

  006ec	e59d3038	 ldr         r3, [sp, #0x38]
  006f0	e2832f51	 add         r2, r3, #0x51, 30
  006f4	e3a03001	 mov         r3, #1
  006f8	e5823000	 str         r3, [r2]

; 377  :                 
; 378  :                     // Make sure controller clocks are on first. 
; 379  :                     SetControllerClocks (TRUE);  

  006fc	e3a01001	 mov         r1, #1
  00700	e59d0038	 ldr         r0, [sp, #0x38]
  00704	eb000000	 bl          |?SetControllerClocks@ACAudioHWContext@@AAAXH@Z|

; 380  : 
; 381  :                     // Power on codec
; 382  :                     SetCodecPower (TRUE);

  00708	e3a01001	 mov         r1, #1
  0070c	e59d0038	 ldr         r0, [sp, #0x38]
  00710	eb000000	 bl          |?SetCodecPower@ACAudioHWContext@@AAAXH@Z|
  00714		 |$LN21@HWUpdateAu|
  00714		 |$LN23@HWUpdateAu|
  00714		 |$LN24@HWUpdateAu|

; 383  :                 }
; 384  :             }
; 385  :         }
; 386  :     }
; 387  : 
; 388  :     // Otherwise we need to turn on the power. 
; 389  :     else 

  00714	ea000029	 b           |$LN20@HWUpdateAu|
  00718		 |$LN27@HWUpdateAu|

; 390  :     {
; 391  :         if (!m_bEACPowerOn)

  00718	e59d3038	 ldr         r3, [sp, #0x38]
  0071c	e2833f51	 add         r3, r3, #0x51, 30
  00720	e5933000	 ldr         r3, [r3]
  00724	e3530000	 cmp         r3, #0
  00728	1a000024	 bne         |$LN19@HWUpdateAu|

; 392  :         {   
; 393  :             DEBUGMSG(ZONE_AC, (L"ACAudioHWContext::HWUpdateAudioPRC: "
; 394  :                 L"Turn on power\r\n"
; 395  :             ));

  0072c	e59f3344	 ldr         r3, [pc, #0x344]
  00730	e5933440	 ldr         r3, [r3, #0x440]
  00734	e3130001	 tst         r3, #1
  00738	0a000004	 beq         |$LN36@HWUpdateAu|
  0073c	e59f0338	 ldr         r0, [pc, #0x338]
  00740	eb000000	 bl          NKDbgPrintfW
  00744	e3a03001	 mov         r3, #1
  00748	e58d3020	 str         r3, [sp, #0x20]
  0074c	ea000001	 b           |$LN37@HWUpdateAu|
  00750		 |$LN36@HWUpdateAu|
  00750	e3a03000	 mov         r3, #0
  00754	e58d3020	 str         r3, [sp, #0x20]
  00758		 |$LN37@HWUpdateAu|

; 396  :             m_bPowerTimeout = FALSE;

  00758	e59d3038	 ldr         r3, [sp, #0x38]
  0075c	e2832f53	 add         r2, r3, #0x53, 30
  00760	e3a03000	 mov         r3, #0
  00764	e5823000	 str         r3, [r2]

; 397  :             // Turn on modem device.
; 398  :             if (!SetModemDevice (TRUE))

  00768	e3a01001	 mov         r1, #1
  0076c	e59d0038	 ldr         r0, [sp, #0x38]
  00770	eb000000	 bl          |?SetModemDevice@ACAudioHWContext@@AAAHH@Z|
  00774	e58d0024	 str         r0, [sp, #0x24]
  00778	e59d3024	 ldr         r3, [sp, #0x24]
  0077c	e3530000	 cmp         r3, #0
  00780	1a000004	 bne         |$LN18@HWUpdateAu|

; 399  :             {
; 400  :                 m_bEACPowerOn = FALSE;

  00784	e59d3038	 ldr         r3, [sp, #0x38]
  00788	e2832f51	 add         r2, r3, #0x51, 30
  0078c	e3a03000	 mov         r3, #0
  00790	e5823000	 str         r3, [r2]

; 401  :             }
; 402  :             else

  00794	ea000009	 b           |$LN17@HWUpdateAu|
  00798		 |$LN18@HWUpdateAu|

; 403  :             {
; 404  :                 m_bEACPowerOn = TRUE;

  00798	e59d3038	 ldr         r3, [sp, #0x38]
  0079c	e2832f51	 add         r2, r3, #0x51, 30
  007a0	e3a03001	 mov         r3, #1
  007a4	e5823000	 str         r3, [r2]

; 405  : 
; 406  :                 // Make sure controller clocks are on first. 
; 407  :                 SetControllerClocks (TRUE);  

  007a8	e3a01001	 mov         r1, #1
  007ac	e59d0038	 ldr         r0, [sp, #0x38]
  007b0	eb000000	 bl          |?SetControllerClocks@ACAudioHWContext@@AAAXH@Z|

; 408  : 
; 409  :                 // Power on codec
; 410  :                 SetCodecPower (TRUE);

  007b4	e3a01001	 mov         r1, #1
  007b8	e59d0038	 ldr         r0, [sp, #0x38]
  007bc	eb000000	 bl          |?SetCodecPower@ACAudioHWContext@@AAAXH@Z|
  007c0		 |$LN17@HWUpdateAu|
  007c0		 |$LN19@HWUpdateAu|
  007c0		 |$LN20@HWUpdateAu|

; 411  :             }
; 412  :         }
; 413  :     }
; 414  : 
; 415  :     // Headset routing.
; 416  :     if (m_bHeadsetPluggedIn && m_bBtHeadsetSelected)

  007c0	e59d3038	 ldr         r3, [sp, #0x38]
  007c4	e28330cc	 add         r3, r3, #0xCC
  007c8	e5933000	 ldr         r3, [r3]
  007cc	e3530000	 cmp         r3, #0
  007d0	0a000014	 beq         |$LN16@HWUpdateAu|
  007d4	e59d3038	 ldr         r3, [sp, #0x38]
  007d8	e28330d8	 add         r3, r3, #0xD8
  007dc	e5933000	 ldr         r3, [r3]
  007e0	e3530000	 cmp         r3, #0
  007e4	0a00000f	 beq         |$LN16@HWUpdateAu|

; 417  :     {
; 418  :         bBothHeadsetArePluggedIn = TRUE;

  007e8	e3a03001	 mov         r3, #1
  007ec	e58d3000	 str         r3, [sp]

; 419  : 
; 420  :         if (m_bChooseBtHeadset)

  007f0	e59d3038	 ldr         r3, [sp, #0x38]
  007f4	e2833f57	 add         r3, r3, #0x57, 30
  007f8	e5933000	 ldr         r3, [r3]
  007fc	e3530000	 cmp         r3, #0
  00800	0a000004	 beq         |$LN15@HWUpdateAu|

; 421  :             m_bHeadsetPluggedIn = FALSE;

  00804	e59d3038	 ldr         r3, [sp, #0x38]
  00808	e28320cc	 add         r2, r3, #0xCC
  0080c	e3a03000	 mov         r3, #0
  00810	e5823000	 str         r3, [r2]

; 422  :         else

  00814	ea000003	 b           |$LN14@HWUpdateAu|
  00818		 |$LN15@HWUpdateAu|

; 423  :             m_bBtHeadsetSelected = FALSE;

  00818	e59d3038	 ldr         r3, [sp, #0x38]
  0081c	e28320d8	 add         r2, r3, #0xD8
  00820	e3a03000	 mov         r3, #0
  00824	e5823000	 str         r3, [r2]
  00828		 |$LN14@HWUpdateAu|
  00828		 |$LN16@HWUpdateAu|

; 424  :     }
; 425  : 
; 426  : 
; 427  :     if (m_bBtHeadsetSelected)

  00828	e59d3038	 ldr         r3, [sp, #0x38]
  0082c	e28330d8	 add         r3, r3, #0xD8
  00830	e5933000	 ldr         r3, [r3]
  00834	e3530000	 cmp         r3, #0
  00838	0a000010	 beq         |$LN13@HWUpdateAu|

; 428  :     {
; 429  :         DEBUGMSG(ZONE_AC, (L"ACAudioHWContext::HWUpdateAudioPRC: "
; 430  :             L"BtHeadsetSelected\r\n"));

  0083c	e59f3234	 ldr         r3, [pc, #0x234]
  00840	e5933440	 ldr         r3, [r3, #0x440]
  00844	e3130001	 tst         r3, #1
  00848	0a000004	 beq         |$LN38@HWUpdateAu|
  0084c	e59f0220	 ldr         r0, [pc, #0x220]
  00850	eb000000	 bl          NKDbgPrintfW
  00854	e3a03001	 mov         r3, #1
  00858	e58d3028	 str         r3, [sp, #0x28]
  0085c	ea000001	 b           |$LN39@HWUpdateAu|
  00860		 |$LN38@HWUpdateAu|
  00860	e3a03000	 mov         r3, #0
  00864	e58d3028	 str         r3, [sp, #0x28]
  00868		 |$LN39@HWUpdateAu|

; 431  :         SelectBtAudio(m_dwBtAudioRouting);  

  00868	e59d3038	 ldr         r3, [sp, #0x38]
  0086c	e28330dc	 add         r3, r3, #0xDC
  00870	e5931000	 ldr         r1, [r3]
  00874	e59d0038	 ldr         r0, [sp, #0x38]
  00878	eb000000	 bl          |?SelectBtAudio@ACAudioHWContext@@AAAXK@Z|

; 432  :     }
; 433  :     else

  0087c	ea000001	 b           |$LN12@HWUpdateAu|
  00880		 |$LN13@HWUpdateAu|

; 434  :     {
; 435  :         SelectVoiceCodec();

  00880	e59d0038	 ldr         r0, [sp, #0x38]
  00884	eb000000	 bl          |?SelectVoiceCodec@ACAudioHWContext@@AAAXXZ|
  00888		 |$LN12@HWUpdateAu|

; 436  :     }
; 437  :     // default: headset off
; 438  :     BOOL bNewHeadsetActive=FALSE;

  00888	e3a03000	 mov         r3, #0
  0088c	e58d3008	 str         r3, [sp, #8]

; 439  : 
; 440  :     // Headset routing.
; 441  :     if (m_bHeadsetPluggedIn || m_bBtHeadsetSelected)

  00890	e59d3038	 ldr         r3, [sp, #0x38]
  00894	e28330cc	 add         r3, r3, #0xCC
  00898	e5933000	 ldr         r3, [r3]
  0089c	e3530000	 cmp         r3, #0
  008a0	1a000004	 bne         |$LN10@HWUpdateAu|
  008a4	e59d3038	 ldr         r3, [sp, #0x38]
  008a8	e28330d8	 add         r3, r3, #0xD8
  008ac	e5933000	 ldr         r3, [r3]
  008b0	e3530000	 cmp         r3, #0
  008b4	0a00000b	 beq         |$LN11@HWUpdateAu|
  008b8		 |$LN10@HWUpdateAu|

; 442  :     {
; 443  :         // deactivate headset if somebody forces speaker mode,
; 444  :         // e.g. incoming call
; 445  :         bNewHeadsetActive = (m_NumForcedSpeaker == 0)?TRUE:FALSE;

  008b8	e59d3038	 ldr         r3, [sp, #0x38]
  008bc	e2833064	 add         r3, r3, #0x64
  008c0	e5933000	 ldr         r3, [r3]
  008c4	e3530000	 cmp         r3, #0
  008c8	1a000002	 bne         |$LN40@HWUpdateAu|
  008cc	e3a03001	 mov         r3, #1
  008d0	e58d302c	 str         r3, [sp, #0x2C]
  008d4	ea000001	 b           |$LN41@HWUpdateAu|
  008d8		 |$LN40@HWUpdateAu|
  008d8	e3a03000	 mov         r3, #0
  008dc	e58d302c	 str         r3, [sp, #0x2C]
  008e0		 |$LN41@HWUpdateAu|
  008e0	e59d302c	 ldr         r3, [sp, #0x2C]
  008e4	e58d3008	 str         r3, [sp, #8]
  008e8		 |$LN11@HWUpdateAu|

; 446  :     }
; 447  : 
; 448  :     if (!bNewHeadsetActive &&
; 449  :          bNewHeadsetActive!=m_bHeadsetActive)

  008e8	e59d3008	 ldr         r3, [sp, #8]
  008ec	e3530000	 cmp         r3, #0
  008f0	1a000015	 bne         |$LN9@HWUpdateAu|
  008f4	e59d3038	 ldr         r3, [sp, #0x38]
  008f8	e2833f55	 add         r3, r3, #0x55, 30
  008fc	e59d2008	 ldr         r2, [sp, #8]
  00900	e5933000	 ldr         r3, [r3]
  00904	e1520003	 cmp         r2, r3
  00908	0a00000f	 beq         |$LN9@HWUpdateAu|

; 450  :     {
; 451  :         m_bHeadsetActive = bNewHeadsetActive;

  0090c	e59d3038	 ldr         r3, [sp, #0x38]
  00910	e2832f55	 add         r2, r3, #0x55, 30
  00914	e59d3008	 ldr         r3, [sp, #8]
  00918	e5823000	 str         r3, [r2]

; 452  : 
; 453  :         if (!m_bLoudSpeakerActive)

  0091c	e59d3038	 ldr         r3, [sp, #0x38]
  00920	e2833f56	 add         r3, r3, #0x56, 30
  00924	e5933000	 ldr         r3, [r3]
  00928	e3530000	 cmp         r3, #0
  0092c	1a000002	 bne         |$LN8@HWUpdateAu|

; 454  :             SetSideTone (TRUE);

  00930	e3a01001	 mov         r1, #1
  00934	e59d0038	 ldr         r0, [sp, #0x38]
  00938	eb000000	 bl          |?SetSideTone@ACAudioHWContext@@AAAHH@Z|
  0093c		 |$LN8@HWUpdateAu|

; 455  : 
; 456  :         SetModemHeadset (FALSE);

  0093c	e3a01000	 mov         r1, #0
  00940	e59d0038	 ldr         r0, [sp, #0x38]
  00944	eb000000	 bl          |?SetModemHeadset@ACAudioHWContext@@AAAHH@Z|

; 457  :     } 
; 458  :     else 

  00948	ea000017	 b           |$LN7@HWUpdateAu|
  0094c		 |$LN9@HWUpdateAu|

; 459  :     if (bNewHeadsetActive &&
; 460  :         bNewHeadsetActive!=m_bHeadsetActive)

  0094c	e59d3008	 ldr         r3, [sp, #8]
  00950	e3530000	 cmp         r3, #0
  00954	0a000014	 beq         |$LN6@HWUpdateAu|
  00958	e59d3038	 ldr         r3, [sp, #0x38]
  0095c	e2833f55	 add         r3, r3, #0x55, 30
  00960	e59d2008	 ldr         r2, [sp, #8]
  00964	e5933000	 ldr         r3, [r3]
  00968	e1520003	 cmp         r2, r3
  0096c	0a00000e	 beq         |$LN6@HWUpdateAu|

; 461  :     {
; 462  :          m_bHeadsetActive = bNewHeadsetActive;

  00970	e59d3038	 ldr         r3, [sp, #0x38]
  00974	e2832f55	 add         r2, r3, #0x55, 30
  00978	e59d3008	 ldr         r3, [sp, #8]
  0097c	e5823000	 str         r3, [r2]

; 463  : 
; 464  :          if (!m_bLoudSpeakerActive)

  00980	e59d3038	 ldr         r3, [sp, #0x38]
  00984	e2833f56	 add         r3, r3, #0x56, 30
  00988	e5933000	 ldr         r3, [r3]
  0098c	e3530000	 cmp         r3, #0
  00990	1a000002	 bne         |$LN5@HWUpdateAu|

; 465  :              SetSideTone (TRUE);

  00994	e3a01001	 mov         r1, #1
  00998	e59d0038	 ldr         r0, [sp, #0x38]
  0099c	eb000000	 bl          |?SetSideTone@ACAudioHWContext@@AAAHH@Z|
  009a0		 |$LN5@HWUpdateAu|

; 466  : 
; 467  :          SetModemHeadset (TRUE);

  009a0	e3a01001	 mov         r1, #1
  009a4	e59d0038	 ldr         r0, [sp, #0x38]
  009a8	eb000000	 bl          |?SetModemHeadset@ACAudioHWContext@@AAAHH@Z|
  009ac		 |$LN6@HWUpdateAu|
  009ac		 |$LN7@HWUpdateAu|

; 468  :     }
; 469  : 
; 470  :     // Toggle the loud speaker during voice call only.
; 471  :     if (m_bModemPortActive && m_bToggleLoadSpeaker)

  009ac	e59d3038	 ldr         r3, [sp, #0x38]
  009b0	e2833f52	 add         r3, r3, #0x52, 30
  009b4	e5933000	 ldr         r3, [r3]
  009b8	e3530000	 cmp         r3, #0
  009bc	0a000018	 beq         |$LN4@HWUpdateAu|
  009c0	e59d3038	 ldr         r3, [sp, #0x38]
  009c4	e28330d0	 add         r3, r3, #0xD0
  009c8	e5933000	 ldr         r3, [r3]
  009cc	e3530000	 cmp         r3, #0
  009d0	0a000013	 beq         |$LN4@HWUpdateAu|

; 472  :     {
; 473  :         if (!m_bLoudSpeakerActive)

  009d4	e59d3038	 ldr         r3, [sp, #0x38]
  009d8	e2833f56	 add         r3, r3, #0x56, 30
  009dc	e5933000	 ldr         r3, [r3]
  009e0	e3530000	 cmp         r3, #0
  009e4	1a000007	 bne         |$LN3@HWUpdateAu|

; 474  :         {
; 475  :             // Turn off mic Side Tone
; 476  :             SetSideTone (FALSE);

  009e8	e3a01000	 mov         r1, #0
  009ec	e59d0038	 ldr         r0, [sp, #0x38]
  009f0	eb000000	 bl          |?SetSideTone@ACAudioHWContext@@AAAHH@Z|

; 477  : 
; 478  :             m_bLoudSpeakerActive = TRUE;

  009f4	e59d3038	 ldr         r3, [sp, #0x38]
  009f8	e2832f56	 add         r2, r3, #0x56, 30
  009fc	e3a03001	 mov         r3, #1
  00a00	e5823000	 str         r3, [r2]

; 479  :         }
; 480  :         else

  00a04	ea000006	 b           |$LN2@HWUpdateAu|
  00a08		 |$LN3@HWUpdateAu|

; 481  :         {
; 482  :             // Turn on mic Side Tone
; 483  :             SetSideTone (TRUE);

  00a08	e3a01001	 mov         r1, #1
  00a0c	e59d0038	 ldr         r0, [sp, #0x38]
  00a10	eb000000	 bl          |?SetSideTone@ACAudioHWContext@@AAAHH@Z|

; 484  : 
; 485  :             m_bLoudSpeakerActive = FALSE;

  00a14	e59d3038	 ldr         r3, [sp, #0x38]
  00a18	e2832f56	 add         r2, r3, #0x56, 30
  00a1c	e3a03000	 mov         r3, #0
  00a20	e5823000	 str         r3, [r2]
  00a24		 |$LN2@HWUpdateAu|
  00a24		 |$LN4@HWUpdateAu|

; 486  :         }
; 487  :     }
; 488  : 
; 489  :     // Reset the flag.
; 490  :     m_bToggleLoadSpeaker = FALSE;

  00a24	e59d3038	 ldr         r3, [sp, #0x38]
  00a28	e28320d0	 add         r2, r3, #0xD0
  00a2c	e3a03000	 mov         r3, #0
  00a30	e5823000	 str         r3, [r2]

; 491  : 
; 492  :     // If both the physically connected headset and the
; 493  :     // BT headset where connected, reset the variables
; 494  :     if (bBothHeadsetArePluggedIn)

  00a34	e59d3000	 ldr         r3, [sp]
  00a38	e3530000	 cmp         r3, #0
  00a3c	0a000007	 beq         |$LN1@HWUpdateAu|

; 495  :     {
; 496  :         m_bBtHeadsetSelected    =
; 497  :         m_bHeadsetPluggedIn     = TRUE;

  00a40	e59d3038	 ldr         r3, [sp, #0x38]
  00a44	e28320cc	 add         r2, r3, #0xCC
  00a48	e3a03001	 mov         r3, #1
  00a4c	e5823000	 str         r3, [r2]
  00a50	e59d3038	 ldr         r3, [sp, #0x38]
  00a54	e28320d8	 add         r2, r3, #0xD8
  00a58	e3a03001	 mov         r3, #1
  00a5c	e5823000	 str         r3, [r2]
  00a60		 |$LN1@HWUpdateAu|

; 498  :     }
; 499  : #ifdef DEBUG    
; 500  : //  DumpMCBSPRegisters();
; 501  : #endif
; 502  : }

  00a60	e28d0004	 add         r0, sp, #4
  00a64	eb000000	 bl          |??1CAutoLock@@QAA@XZ|
  00a68	e28dd030	 add         sp, sp, #0x30
  00a6c	e89d6000	 ldmia       sp, {sp, lr}
  00a70	e12fff1e	 bx          lr
  00a74		 |$LN45@HWUpdateAu|
  00a74		 |$LN46@HWUpdateAu|
  00a74	00000000	 DCD         |??_C@_1HA@ICCGCKJH@?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAA?$AAu?$AAd?$AAi?$AAo?$AAP@|
  00a78		 |$LN47@HWUpdateAu|
  00a78	00000000	 DCD         |dpCurSettings|
  00a7c		 |$LN48@HWUpdateAu|
  00a7c	00000000	 DCD         |??_C@_1GI@JCFNAGOA@?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAA?$AAu?$AAd?$AAi?$AAo?$AAP@|
  00a80		 |$LN49@HWUpdateAu|
  00a80	00000000	 DCD         |??_C@_1HI@ONLHICCG@?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAA?$AAu?$AAd?$AAi?$AAo?$AAP@|
  00a84		 |$LN50@HWUpdateAu|
  00a84	00000000	 DCD         |??_C@_1HK@CMIGKAFK@?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAA?$AAu?$AAd?$AAi?$AAo?$AAP@|
  00a88		 |$LN51@HWUpdateAu|
  00a88	00000000	 DCD         |??_C@_1EM@FDKNFFJG@?$AA?$CL?$AAA?$AAC?$AAA?$AAu?$AAd?$AAi?$AAo?$AAH?$AAW?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAA?$AAu?$AAd?$AAi?$AAo@|
  00a8c		 |$M37760|

			 ENDP  ; |?HWUpdateAudioPRC@ACAudioHWContext@@UAAXXZ|, ACAudioHWContext::HWUpdateAudioPRC

	END
