; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\OMAP2420_MS_V1\WAVEDEV\wavemain.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|dpCurSettings| [ DATA ]

  00000			 AREA	 |.data|, DATA
|dpCurSettings| DCB "W", 0x0, "a", 0x0, "v", 0x0, "e", 0x0, "D", 0x0, "r", 0x0
	DCB	"i", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, 0x0, 0x0
	%	42
	DCB	"E", 0x0, "A", 0x0, "C", 0x0, 0x0, 0x0
	%	56
	DCB	"P", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "s", 0x0
	DCB	0x0, 0x0
	%	50
	DCB	"V", 0x0, "e", 0x0, "r", 0x0, "b", 0x0, "o", 0x0, "s", 0x0
	DCB	"e", 0x0, 0x0, 0x0
	%	48
	DCB	"I", 0x0, "r", 0x0, "q", 0x0, 0x0, 0x0
	%	56
	DCB	"W", 0x0, "O", 0x0, "D", 0x0, "M", 0x0, 0x0, 0x0
	%	54
	DCB	"W", 0x0, "I", 0x0, "D", 0x0, "M", 0x0, 0x0, 0x0
	%	54
	DCB	"P", 0x0, "D", 0x0, "D", 0x0, 0x0, 0x0
	%	56
	DCB	"M", 0x0, "D", 0x0, "D", 0x0, 0x0, 0x0
	%	56
	DCB	"D", 0x0, "M", 0x0, "A", 0x0, 0x0, 0x0
	%	56
	DCB	"M", 0x0, "i", 0x0, "s", 0x0, "c", 0x0, 0x0, 0x0
	%	54
	DCB	"M", 0x0, "i", 0x0, "d", 0x0, "i", 0x0, 0x0, 0x0
	%	54
	DCB	"M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, "m", 0x0, 0x0, 0x0
	%	52
	DCB	"A", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, 0x0, 0x0
	%	52
	DCB	"F", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i", 0x0
	DCB	"o", 0x0, "n", 0x0, 0x0, 0x0
	%	46
	DCB	"W", 0x0, "a", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0
	DCB	"g", 0x0, 0x0, 0x0
	%	48
	DCB	"E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, 0x0, 0x0
	%	52
	DCD	0xc000
	EXPORT	|DllMain|
	IMPORT	|RegisterDbgZones|

  00000			 AREA	 |.pdata|, PDATA
|$T37574| DCD	|$LN6@DllMain|
	DCD	0x40001104
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\wavemain.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DllMain| PROC

; 58   : {

  00000		 |$LN6@DllMain|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37571|

; 59   :     if ( dwReason==DLL_PROCESS_ATTACH )

  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e3530001	 cmp         r3, #1
  00018	1a000002	 bne         |$LN1@DllMain|

; 60   :     {
; 61   :         DEBUGREGISTER((HMODULE)hDLL);

  0001c	e59f101c	 ldr         r1, [pc, #0x1C]
  00020	e59d000c	 ldr         r0, [sp, #0xC]
  00024	eb000000	 bl          RegisterDbgZones
  00028		 |$LN1@DllMain|

; 62   :     }
; 63   : 
; 64   :     return TRUE;

  00028	e3a03001	 mov         r3, #1
  0002c	e58d3000	 str         r3, [sp]

; 65   : }

  00030	e59d0000	 ldr         r0, [sp]
  00034	e28dd004	 add         sp, sp, #4
  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN7@DllMain|
  00040		 |$LN8@DllMain|
  00040	00000000	 DCD         |dpCurSettings|
  00044		 |$M37572|

			 ENDP  ; |DllMain|

	EXPORT	|WAV_Init|
	IMPORT	|?CreateHWContext@HardwareContext@@SAHK@Z| ; HardwareContext::CreateHWContext

  00008			 AREA	 |.pdata|, PDATA
|$T37582| DCD	|$LN5@WAV_Init|
	DCD	0x40000d04
; Function compile flags: /Odtp

  00044			 AREA	 |.text|, CODE, ARM

  00044		 |WAV_Init| PROC

; 134  : {

  00044		 |$LN5@WAV_Init|
  00044	e1a0c00d	 mov         r12, sp
  00048	e92d0001	 stmdb       sp!, {r0}
  0004c	e92d5000	 stmdb       sp!, {r12, lr}
  00050	e24dd008	 sub         sp, sp, #8
  00054		 |$M37579|

; 135  :     return (DWORD)HardwareContext::CreateHWContext(Index);

  00054	e59d0010	 ldr         r0, [sp, #0x10]
  00058	eb000000	 bl          |?CreateHWContext@HardwareContext@@SAHK@Z|
  0005c	e58d0004	 str         r0, [sp, #4]
  00060	e59d3004	 ldr         r3, [sp, #4]
  00064	e58d3000	 str         r3, [sp]

; 136  : }

  00068	e59d0000	 ldr         r0, [sp]
  0006c	e28dd008	 add         sp, sp, #8
  00070	e89d6000	 ldmia       sp, {sp, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$M37580|

			 ENDP  ; |WAV_Init|

	EXPORT	|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JE@OMJBAMM@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|WAV_Deinit|
	IMPORT	|?Deinit@HardwareContext@@QAAHXZ|	; HardwareContext::Deinit
	IMPORT	|NKDbgPrintfW|
	IMPORT	|?g_pHWContext@@3PAVHardwareContext@@A|	; g_pHWContext

  00010			 AREA	 |.pdata|, PDATA
|$T37590| DCD	|$LN7@WAV_Deinit|
	DCD	0x40002104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "E", 0x0, "B"
	DCB	0x0, "U", 0x0, "G", 0x0, "C", 0x0, "H", 0x0, "K", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, "t", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| DCB "U", 0x0
	DCB	"n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JE@OMJBAMM@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "_", 0x0, "M", 0x0, "S", 0x0, "_", 0x0, "V"
	DCB	0x0, "1", 0x0, "\\", 0x0, "W", 0x0, "A", 0x0, "V", 0x0, "E"
	DCB	0x0, "D", 0x0, "E", 0x0, "V", 0x0, "\\", 0x0, ".", 0x0, "\\"
	DCB	0x0, "w", 0x0, "a", 0x0, "v", 0x0, "e", 0x0, "m", 0x0, "a"
	DCB	0x0, "i", 0x0, "n", 0x0, ".", 0x0, "c", 0x0, "p", 0x0, "p"
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00078			 AREA	 |.text|, CODE, ARM

  00078		 |WAV_Deinit| PROC

; 151  : {

  00078		 |$LN7@WAV_Deinit|
  00078	e1a0c00d	 mov         r12, sp
  0007c	e92d0001	 stmdb       sp!, {r0}
  00080	e92d5000	 stmdb       sp!, {r12, lr}
  00084	e24dd00c	 sub         sp, sp, #0xC
  00088		 |$M37587|

; 152  :     ASSERT(g_pHWContext!=NULL);

  00088	e59f305c	 ldr         r3, [pc, #0x5C]
  0008c	e5933000	 ldr         r3, [r3]
  00090	e3530000	 cmp         r3, #0
  00094	0a000002	 beq         |$LN3@WAV_Deinit|
  00098	e3a03001	 mov         r3, #1
  0009c	e58d3004	 str         r3, [sp, #4]
  000a0	ea000007	 b           |$LN4@WAV_Deinit|
  000a4		 |$LN3@WAV_Deinit|
  000a4	e3a03098	 mov         r3, #0x98
  000a8	e59f2048	 ldr         r2, [pc, #0x48]
  000ac	e59f1040	 ldr         r1, [pc, #0x40]
  000b0	e59f0038	 ldr         r0, [pc, #0x38]
  000b4	eb000000	 bl          NKDbgPrintfW
  000b8	e6000010	 __debugbreak_ce
  000bc	e3a03000	 mov         r3, #0
  000c0	e58d3004	 str         r3, [sp, #4]
  000c4		 |$LN4@WAV_Deinit|

; 153  :     return g_pHWContext->Deinit();

  000c4	e59f3020	 ldr         r3, [pc, #0x20]
  000c8	e5930000	 ldr         r0, [r3]
  000cc	eb000000	 bl          |?Deinit@HardwareContext@@QAAHXZ|
  000d0	e58d0008	 str         r0, [sp, #8]
  000d4	e59d3008	 ldr         r3, [sp, #8]
  000d8	e58d3000	 str         r3, [sp]

; 154  : }

  000dc	e59d0000	 ldr         r0, [sp]
  000e0	e28dd00c	 add         sp, sp, #0xC
  000e4	e89d6000	 ldmia       sp, {sp, lr}
  000e8	e12fff1e	 bx          lr
  000ec		 |$LN8@WAV_Deinit|
  000ec		 |$LN9@WAV_Deinit|
  000ec	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  000f0		 |$LN10@WAV_Deinit|
  000f0	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  000f4		 |$LN11@WAV_Deinit|
  000f4	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  000f8		 |$LN12@WAV_Deinit|
  000f8	00000000	 DCD         |??_C@_1JE@OMJBAMM@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  000fc		 |$M37588|

			 ENDP  ; |WAV_Deinit|

	EXPORT	|WAV_Open|
	IMPORT	|??2@YAPAXI@Z|				; operator new

  00018			 AREA	 |.pdata|, PDATA
|$T37604| DCD	|$LN7@WAV_Open|
	DCD	0x40001a04
; Function compile flags: /Odtp

  000fc			 AREA	 |.text|, CODE, ARM

  000fc		 |WAV_Open| PROC

; 178  : {

  000fc		 |$LN7@WAV_Open|
  000fc	e1a0c00d	 mov         r12, sp
  00100	e92d0007	 stmdb       sp!, {r0 - r2}
  00104	e92d5000	 stmdb       sp!, {r12, lr}
  00108	e24dd010	 sub         sp, sp, #0x10
  0010c		 |$M37601|

; 179  :     // allocate and return handle context to efficiently verify caller trust level
; 180  :     return new DWORD(NULL); // assume untrusted. Can't tell for sure until WAV_IoControl

  0010c	e3a00004	 mov         r0, #4
  00110	eb000000	 bl          |??2@YAPAXI@Z|
  00114	e58d0008	 str         r0, [sp, #8]
  00118	e59d3008	 ldr         r3, [sp, #8]
  0011c	e58d3000	 str         r3, [sp]
  00120	e59d3000	 ldr         r3, [sp]
  00124	e3530000	 cmp         r3, #0
  00128	0a000005	 beq         |$LN3@WAV_Open|
  0012c	e59d2000	 ldr         r2, [sp]
  00130	e3a03000	 mov         r3, #0
  00134	e5823000	 str         r3, [r2]
  00138	e59d3000	 ldr         r3, [sp]
  0013c	e58d300c	 str         r3, [sp, #0xC]
  00140	ea000001	 b           |$LN4@WAV_Open|
  00144		 |$LN3@WAV_Open|
  00144	e3a03000	 mov         r3, #0
  00148	e58d300c	 str         r3, [sp, #0xC]
  0014c		 |$LN4@WAV_Open|
  0014c	e59d300c	 ldr         r3, [sp, #0xC]
  00150	e58d3004	 str         r3, [sp, #4]

; 181  : }

  00154	e59d0004	 ldr         r0, [sp, #4]
  00158	e28dd010	 add         sp, sp, #0x10
  0015c	e89d6000	 ldmia       sp, {sp, lr}
  00160	e12fff1e	 bx          lr
  00164		 |$M37602|

			 ENDP  ; |WAV_Open|

	EXPORT	|WAV_Close|
	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00020			 AREA	 |.pdata|, PDATA
|$T37611| DCD	|$LN5@WAV_Close|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00164			 AREA	 |.text|, CODE, ARM

  00164		 |WAV_Close| PROC

; 196  : {

  00164		 |$LN5@WAV_Close|
  00164	e1a0c00d	 mov         r12, sp
  00168	e92d0001	 stmdb       sp!, {r0}
  0016c	e92d5000	 stmdb       sp!, {r12, lr}
  00170	e24dd008	 sub         sp, sp, #8
  00174		 |$M37608|

; 197  :     // we trust the device manager to give us a valid context to free.
; 198  :     delete pdwData;

  00174	e59d3010	 ldr         r3, [sp, #0x10]
  00178	e58d3000	 str         r3, [sp]
  0017c	e59d0000	 ldr         r0, [sp]
  00180	eb000000	 bl          |??3@YAXPAX@Z|

; 199  :     return(TRUE);

  00184	e3a03001	 mov         r3, #1
  00188	e58d3004	 str         r3, [sp, #4]

; 200  : }

  0018c	e59d0004	 ldr         r0, [sp, #4]
  00190	e28dd008	 add         sp, sp, #8
  00194	e89d6000	 ldmia       sp, {sp, lr}
  00198	e12fff1e	 bx          lr
  0019c		 |$M37609|

			 ENDP  ; |WAV_Close|

	EXPORT	|?Unlock@HardwareContext@@QAAXXZ|	; HardwareContext::Unlock
	EXPORT	|??_C@_1FI@PLNLJNDI@?$AAA?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAv?$AAi?$AAo?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAW?$AAa?$AAv?$AAe?$AAM?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@BBHMOGMF@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAB?$AAT?$AA_?$AAS?$AAC?$AAO?$AA_?$AAA?$AAU?$AAD?$AAI?$AAO?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@KCAKHJBN@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAM?$AAM?$AA_?$AAM?$AAO?$AAM?$AA_?$AAM?$AAI?$AAD?$AAI?$AAM?$AAE?$AAS?$AAS?$AAA?$AAG?$AAE?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@GOOPIKCN@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAM?$AAM?$AA_?$AAW?$AAO?$AAM?$AA_?$AAF?$AAO?$AAR?$AAC?$AAE?$AAS?$AAP?$AAE?$AAA?$AAK?$AAE?$AAR?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?SetSecondaryGainLimit@DeviceContext@@QAAKKK@Z| ; DeviceContext::SetSecondaryGainLimit
	EXPORT	|??_C@_1EM@PKODCDCB@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAM?$AAM?$AA_?$AAW?$AAO?$AAM?$AA_?$AAS?$AAE?$AAT?$AAS?$AAE?$AAC?$AAO?$AAN?$AAD?$AAA?$AAR?$AAY?$AAG?$AAA?$AAI?$AAN?$AAL?$AAI?$AAM@| [ DATA ] ; `string'
	EXPORT	|?SetSecondaryGainClass@StreamContext@@QAAKK@Z| ; StreamContext::SetSecondaryGainClass
	EXPORT	|??_C@_1EM@FIMDNFJG@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAM?$AAM?$AA_?$AAW?$AAO?$AAM?$AA_?$AAS?$AAE?$AAT?$AAS?$AAE?$AAC?$AAO?$AAN?$AAD?$AAA?$AAR?$AAY?$AAG?$AAA?$AAI?$AAN?$AAC?$AAL?$AAA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@LGFAHNBC@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAS?$AAE?$AAT?$AAV?$AAO?$AAL?$AAU?$AAM?$AAE?$AA?0?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?SetGain@DeviceContext@@QAAKK@Z|	; DeviceContext::SetGain
	EXPORT	|??_C@_1DM@LFDCFBKB@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAS?$AAE?$AAT?$AAV?$AAO?$AAL?$AAU?$AAM?$AAE?$AA?0?$AA?5?$AAs?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?SetGain@StreamContext@@QAAKK@Z|	; StreamContext::SetGain
	EXPORT	|?GetGain@DeviceContext@@QAAKXZ|	; DeviceContext::GetGain
	EXPORT	|?GetGain@StreamContext@@QAAKXZ|	; StreamContext::GetGain
	EXPORT	|??_C@_1FC@CHDBMOCJ@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAW?$AAR?$AAI?$AAT?$AAE?$AA?1?$AAW?$AAI?$AAD?$AAM?$AA_?$AAA?$AAD?$AAD?$AAB?$AAU?$AAF?$AAF?$AAE?$AAR?$AA?0?$AA?5?$AAB?$AAu?$AAf?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@JENGGEIC@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA?1?$AAW?$AAI?$AAD?$AAM?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@ENODMAIG@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAG?$AAE?$AAT?$AAP?$AAO?$AAS?$AA?1?$AAW?$AAI?$AAD?$AAM?$AA_?$AAG?$AAE?$AAT?$AAP?$AAO?$AAS?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@GEFNJAAK@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAP?$AAA?$AAU?$AAS?$AAE?$AA?1?$AAW?$AAI?$AAD?$AAM?$AA_?$AAS?$AAT?$AAO?$AAP?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@OILDFNMB@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAR?$AAE?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?1?$AAW?$AAI?$AAD?$AAM?$AA_?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@HCJEGLD@?$AAW?$AAI?$AAD?$AAM?$AA_?$AAC?$AAL?$AAO?$AAS?$AAE?$AA?1?$AAW?$AAO?$AAD?$AAM?$AA_?$AAC?$AAL?$AAO?$AAS?$AAE?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@JIMFELDH@?$AAW?$AAI?$AAD?$AAM?$AA_?$AAO?$AAP?$AAE?$AAN?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@OKDEBBLH@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAO?$AAP?$AAE?$AAN?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?GetInputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z| ; HardwareContext::GetInputDeviceContext
	EXPORT	|?GetOutputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z| ; HardwareContext::GetOutputDeviceContext
	EXPORT	|?GetDeviceContext@StreamContext@@QAAPAVDeviceContext@@XZ| ; StreamContext::GetDeviceContext
	EXPORT	|?GetNumInputDevices@HardwareContext@@QAAKXZ| ; HardwareContext::GetNumInputDevices
	EXPORT	|?GetNumOutputDevices@HardwareContext@@QAAKXZ| ; HardwareContext::GetNumOutputDevices
	EXPORT	|?Lock@HardwareContext@@QAAXXZ|		; HardwareContext::Lock
	EXPORT	|?HandleWaveMessage@@YAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z| ; HandleWaveMessage
	IMPORT	|?NotifyBtHeadsetOn@HardwareContext@@QAAXK@Z| ; HardwareContext::NotifyBtHeadsetOn
	IMPORT	|?MidiMessage@CMidiStream@@QAAKI@Z|	; CMidiStream::MidiMessage
	IMPORT	|?ForceSpeaker@HardwareContext@@QAAKH@Z| ; HardwareContext::ForceSpeaker
	IMPORT	|?ForceSpeaker@StreamContext@@QAAKH@Z|	; StreamContext::ForceSpeaker
	IMPORT	|?GetRate@WaveStreamContext@@QAAKPAK@Z|	; WaveStreamContext::GetRate
	IMPORT	|?BreakLoop@StreamContext@@QAAKXZ|	; StreamContext::BreakLoop
	IMPORT	|?Release@StreamContext@@QAAJXZ|	; StreamContext::Release
	IMPORT	|?OpenStream@DeviceContext@@QAAKPAUwaveopendesc_tag@@KPAPAVStreamContext@@@Z| ; DeviceContext::OpenStream
	IMPORT	|SetLastError|
	IMPORT	|__C_specific_handler|

  00028			 AREA	 |.pdata|, PDATA
|$T37666| DCD	|$LN98@HandleWave|
	DCD	0xc002fb05
|$T37668| DCD	|$LN88@HandleWave|
	DCD	0x40002502

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@PLNLJNDI@?$AAA?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAv?$AAi?$AAo?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAW?$AAa?$AAv?$AAe?$AAM?$AAe@| DCB "A"
	DCB	0x0, "c", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, " "
	DCB	0x0, "v", 0x0, "i", 0x0, "o", 0x0, "l", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, " ", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l"
	DCB	0x0, "e", 0x0, "W", 0x0, "a", 0x0, "v", 0x0, "e", 0x0, "M"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "a", 0x0, "g", 0x0, "e"
	DCB	0x0, "!", 0x0, "!", 0x0, "!", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ":", 0x0, " "
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@BBHMOGMF@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAB?$AAT?$AA_?$AAS?$AAC?$AAO?$AA_?$AAA?$AAU?$AAD?$AAI?$AAO?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA?$AN?$AA?6?$AA?$AA@| DCB "W"
	DCB	0x0, "O", 0x0, "D", 0x0, "M", 0x0, "_", 0x0, "B", 0x0, "T"
	DCB	0x0, "_", 0x0, "S", 0x0, "C", 0x0, "O", 0x0, "_", 0x0, "A"
	DCB	0x0, "U", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "_", 0x0, "C"
	DCB	0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O", 0x0, "L"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@KCAKHJBN@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAM?$AAM?$AA_?$AAM?$AAO?$AAM?$AA_?$AAM?$AAI?$AAD?$AAI?$AAM?$AAE?$AAS?$AAS?$AAA?$AAG?$AAE?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "W"
	DCB	0x0, "A", 0x0, "V", 0x0, "E", 0x0, ":", 0x0, " ", 0x0, "M"
	DCB	0x0, "M", 0x0, "_", 0x0, "M", 0x0, "O", 0x0, "M", 0x0, "_"
	DCB	0x0, "M", 0x0, "I", 0x0, "D", 0x0, "I", 0x0, "M", 0x0, "E"
	DCB	0x0, "S", 0x0, "S", 0x0, "A", 0x0, "G", 0x0, "E", 0x0, " "
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@GOOPIKCN@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAM?$AAM?$AA_?$AAW?$AAO?$AAM?$AA_?$AAF?$AAO?$AAR?$AAC?$AAE?$AAS?$AAP?$AAE?$AAA?$AAK?$AAE?$AAR?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "W"
	DCB	0x0, "A", 0x0, "V", 0x0, "E", 0x0, ":", 0x0, " ", 0x0, "M"
	DCB	0x0, "M", 0x0, "_", 0x0, "W", 0x0, "O", 0x0, "M", 0x0, "_"
	DCB	0x0, "F", 0x0, "O", 0x0, "R", 0x0, "C", 0x0, "E", 0x0, "S"
	DCB	0x0, "P", 0x0, "E", 0x0, "A", 0x0, "K", 0x0, "E", 0x0, "R"
	DCB	0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@PKODCDCB@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAM?$AAM?$AA_?$AAW?$AAO?$AAM?$AA_?$AAS?$AAE?$AAT?$AAS?$AAE?$AAC?$AAO?$AAN?$AAD?$AAA?$AAR?$AAY?$AAG?$AAA?$AAI?$AAN?$AAL?$AAI?$AAM@| DCB "W"
	DCB	0x0, "A", 0x0, "V", 0x0, "E", 0x0, ":", 0x0, " ", 0x0, "M"
	DCB	0x0, "M", 0x0, "_", 0x0, "W", 0x0, "O", 0x0, "M", 0x0, "_"
	DCB	0x0, "S", 0x0, "E", 0x0, "T", 0x0, "S", 0x0, "E", 0x0, "C"
	DCB	0x0, "O", 0x0, "N", 0x0, "D", 0x0, "A", 0x0, "R", 0x0, "Y"
	DCB	0x0, "G", 0x0, "A", 0x0, "I", 0x0, "N", 0x0, "L", 0x0, "I"
	DCB	0x0, "M", 0x0, "I", 0x0, "T", 0x0, " ", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@FIMDNFJG@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAM?$AAM?$AA_?$AAW?$AAO?$AAM?$AA_?$AAS?$AAE?$AAT?$AAS?$AAE?$AAC?$AAO?$AAN?$AAD?$AAA?$AAR?$AAY?$AAG?$AAA?$AAI?$AAN?$AAC?$AAL?$AAA@| DCB "W"
	DCB	0x0, "A", 0x0, "V", 0x0, "E", 0x0, ":", 0x0, " ", 0x0, "M"
	DCB	0x0, "M", 0x0, "_", 0x0, "W", 0x0, "O", 0x0, "M", 0x0, "_"
	DCB	0x0, "S", 0x0, "E", 0x0, "T", 0x0, "S", 0x0, "E", 0x0, "C"
	DCB	0x0, "O", 0x0, "N", 0x0, "D", 0x0, "A", 0x0, "R", 0x0, "Y"
	DCB	0x0, "G", 0x0, "A", 0x0, "I", 0x0, "N", 0x0, "C", 0x0, "L"
	DCB	0x0, "A", 0x0, "S", 0x0, "S", 0x0, " ", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@LGFAHNBC@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAS?$AAE?$AAT?$AAV?$AAO?$AAL?$AAU?$AAM?$AAE?$AA?0?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "W"
	DCB	0x0, "O", 0x0, "D", 0x0, "M", 0x0, "_", 0x0, "S", 0x0, "E"
	DCB	0x0, "T", 0x0, "V", 0x0, "O", 0x0, "L", 0x0, "U", 0x0, "M"
	DCB	0x0, "E", 0x0, ",", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@LFDCFBKB@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAS?$AAE?$AAT?$AAV?$AAO?$AAL?$AAU?$AAM?$AAE?$AA?0?$AA?5?$AAs?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "W"
	DCB	0x0, "O", 0x0, "D", 0x0, "M", 0x0, "_", 0x0, "S", 0x0, "E"
	DCB	0x0, "T", 0x0, "V", 0x0, "O", 0x0, "L", 0x0, "U", 0x0, "M"
	DCB	0x0, "E", 0x0, ",", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "m", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@CHDBMOCJ@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAW?$AAR?$AAI?$AAT?$AAE?$AA?1?$AAW?$AAI?$AAD?$AAM?$AA_?$AAA?$AAD?$AAD?$AAB?$AAU?$AAF?$AAF?$AAE?$AAR?$AA?0?$AA?5?$AAB?$AAu?$AAf?$AAf?$AAe@| DCB "W"
	DCB	0x0, "O", 0x0, "D", 0x0, "M", 0x0, "_", 0x0, "W", 0x0, "R"
	DCB	0x0, "I", 0x0, "T", 0x0, "E", 0x0, "/", 0x0, "W", 0x0, "I"
	DCB	0x0, "D", 0x0, "M", 0x0, "_", 0x0, "A", 0x0, "D", 0x0, "D"
	DCB	0x0, "B", 0x0, "U", 0x0, "F", 0x0, "F", 0x0, "E", 0x0, "R"
	DCB	0x0, ",", 0x0, " ", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@JENGGEIC@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA?1?$AAW?$AAI?$AAD?$AAM?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@| DCB "W"
	DCB	0x0, "O", 0x0, "D", 0x0, "M", 0x0, "_", 0x0, "R", 0x0, "E"
	DCB	0x0, "S", 0x0, "E", 0x0, "T", 0x0, "/", 0x0, "W", 0x0, "I"
	DCB	0x0, "D", 0x0, "M", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "S"
	DCB	0x0, "E", 0x0, "T", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@ENODMAIG@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAG?$AAE?$AAT?$AAP?$AAO?$AAS?$AA?1?$AAW?$AAI?$AAD?$AAM?$AA_?$AAG?$AAE?$AAT?$AAP?$AAO?$AAS?$AA?$AN?$AA?6?$AA?$AA@| DCB "W"
	DCB	0x0, "O", 0x0, "D", 0x0, "M", 0x0, "_", 0x0, "G", 0x0, "E"
	DCB	0x0, "T", 0x0, "P", 0x0, "O", 0x0, "S", 0x0, "/", 0x0, "W"
	DCB	0x0, "I", 0x0, "D", 0x0, "M", 0x0, "_", 0x0, "G", 0x0, "E"
	DCB	0x0, "T", 0x0, "P", 0x0, "O", 0x0, "S", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@GEFNJAAK@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAP?$AAA?$AAU?$AAS?$AAE?$AA?1?$AAW?$AAI?$AAD?$AAM?$AA_?$AAS?$AAT?$AAO?$AAP?$AA?$AN?$AA?6?$AA?$AA@| DCB "W"
	DCB	0x0, "O", 0x0, "D", 0x0, "M", 0x0, "_", 0x0, "P", 0x0, "A"
	DCB	0x0, "U", 0x0, "S", 0x0, "E", 0x0, "/", 0x0, "W", 0x0, "I"
	DCB	0x0, "D", 0x0, "M", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "O"
	DCB	0x0, "P", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@OILDFNMB@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAR?$AAE?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?1?$AAW?$AAI?$AAD?$AAM?$AA_?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?$AN?$AA?6?$AA?$AA@| DCB "W"
	DCB	0x0, "O", 0x0, "D", 0x0, "M", 0x0, "_", 0x0, "R", 0x0, "E"
	DCB	0x0, "S", 0x0, "T", 0x0, "A", 0x0, "R", 0x0, "T", 0x0, "/"
	DCB	0x0, "W", 0x0, "I", 0x0, "D", 0x0, "M", 0x0, "_", 0x0, "S"
	DCB	0x0, "T", 0x0, "A", 0x0, "R", 0x0, "T", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@HCJEGLD@?$AAW?$AAI?$AAD?$AAM?$AA_?$AAC?$AAL?$AAO?$AAS?$AAE?$AA?1?$AAW?$AAO?$AAD?$AAM?$AA_?$AAC?$AAL?$AAO?$AAS?$AAE?$AA?$AN?$AA?6?$AA?$AA@| DCB "W"
	DCB	0x0, "I", 0x0, "D", 0x0, "M", 0x0, "_", 0x0, "C", 0x0, "L"
	DCB	0x0, "O", 0x0, "S", 0x0, "E", 0x0, "/", 0x0, "W", 0x0, "O"
	DCB	0x0, "D", 0x0, "M", 0x0, "_", 0x0, "C", 0x0, "L", 0x0, "O"
	DCB	0x0, "S", 0x0, "E", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@JIMFELDH@?$AAW?$AAI?$AAD?$AAM?$AA_?$AAO?$AAP?$AAE?$AAN?$AA?$AN?$AA?6?$AA?$AA@| DCB "W"
	DCB	0x0, "I", 0x0, "D", 0x0, "M", 0x0, "_", 0x0, "O", 0x0, "P"
	DCB	0x0, "E", 0x0, "N", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@OKDEBBLH@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAO?$AAP?$AAE?$AAN?$AA?$AN?$AA?6?$AA?$AA@| DCB "W"
	DCB	0x0, "O", 0x0, "D", 0x0, "M", 0x0, "_", 0x0, "O", 0x0, "P"
	DCB	0x0, "E", 0x0, "N", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.xdata|, DATA
|$T37664| DCD	0x1
	DCD	|$LN92@HandleWave|
	DCD	|$LN93@HandleWave|
	DCD	|$LN88@HandleWave|
	DCD	|$LN89@HandleWave|
; Function compile flags: /Odtp

  0019c			 AREA	 |.text|, CODE, ARM

  0019c	00000000	 DCD         |__C_specific_handler|
  001a0	00000000	 DCD         |$T37664|

  001a4		 |?HandleWaveMessage@@YAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z| PROC ; HandleWaveMessage

; 205  : {

  001a4		 |$LN98@HandleWave|
  001a4	e1a0c00d	 mov         r12, sp
  001a8	e92d0003	 stmdb       sp!, {r0, r1}
  001ac	e92d5800	 stmdb       sp!, {r11, r12, lr}
  001b0	e28db00c	 add         r11, sp, #0xC
  001b4	e24ddf59	 sub         sp, sp, #0x59, 30
  001b8		 |$LN96@HandleWave|

; 206  :     //  set the error code to be no error first
; 207  :     SetLastError(MMSYSERR_NOERROR);

  001b8	e3a00000	 mov         r0, #0
  001bc	eb000000	 bl          SetLastError

; 208  : 
; 209  :     UINT uMsg = pParams->uMsg;

  001c0	e59b3000	 ldr         r3, [r11]
  001c4	e2833004	 add         r3, r3, #4
  001c8	e5933000	 ldr         r3, [r3]
  001cc	e50b315c	 str         r3, [r11, #-0x15C]

; 210  :     UINT uDeviceId = pParams->uDeviceId;

  001d0	e59b3000	 ldr         r3, [r11]
  001d4	e5933000	 ldr         r3, [r3]
  001d8	e50b3168	 str         r3, [r11, #-0x168]

; 211  :     DWORD dwParam1 = pParams->dwParam1;

  001dc	e59b3000	 ldr         r3, [r11]
  001e0	e283300c	 add         r3, r3, #0xC
  001e4	e5933000	 ldr         r3, [r3]
  001e8	e50b316c	 str         r3, [r11, #-0x16C]

; 212  :     DWORD dwParam2 = pParams->dwParam2;

  001ec	e59b3000	 ldr         r3, [r11]
  001f0	e2833010	 add         r3, r3, #0x10
  001f4	e5933000	 ldr         r3, [r3]
  001f8	e50b3164	 str         r3, [r11, #-0x164]

; 213  :     DWORD dwUser   = pParams->dwUser;

  001fc	e59b3000	 ldr         r3, [r11]
  00200	e2833008	 add         r3, r3, #8
  00204	e5933000	 ldr         r3, [r3]
  00208	e50b3160	 str         r3, [r11, #-0x160]

; 214  :     StreamContext *pStreamContext = (StreamContext *)dwUser;

  0020c	e51b3160	 ldr         r3, [r11, #-0x160]
  00210	e50b3158	 str         r3, [r11, #-0x158]

; 215  :     DWORD dwRet=MMSYSERR_NOTSUPPORTED;

  00214	e3a03008	 mov         r3, #8
  00218	e50b3170	 str         r3, [r11, #-0x170]

; 216  : 
; 217  :     g_pHWContext->Lock();

  0021c	e59f3bb0	 ldr         r3, [pc, #0xBB0]
  00220	e5930000	 ldr         r0, [r3]
  00224	eb000000	 bl          |?Lock@HardwareContext@@QAAXXZ|
  00228		 |$LN92@HandleWave|

; 218  : 
; 219  :     // catch exceptions inside device lock, otherwise device will remain locked!
; 220  :     _try
; 221  :     {
; 222  : 
; 223  :     switch (uMsg)

  00228	e51b315c	 ldr         r3, [r11, #-0x15C]
  0022c	e50b3100	 str         r3, [r11, #-0x100]
  00230	e51b3100	 ldr         r3, [r11, #-0x100]
  00234	e3530032	 cmp         r3, #0x32
  00238	8a000021	 bhi         |$LN80@HandleWave|
  0023c	e51b3100	 ldr         r3, [r11, #-0x100]
  00240	e3530032	 cmp         r3, #0x32
  00244	0a000057	 beq         |$LN43@HandleWave|
  00248	e51b3100	 ldr         r3, [r11, #-0x100]
  0024c	e2433003	 sub         r3, r3, #3
  00250	e50b3100	 str         r3, [r11, #-0x100]
  00254	e51b3100	 ldr         r3, [r11, #-0x100]
  00258	e3530013	 cmp         r3, #0x13
  0025c	8a0002a9	 bhi         |$LN2@HandleWave|
  00260	e51b2100	 ldr         r2, [r11, #-0x100]
  00264	e1a03102	 mov         r3, r2, lsl #2
  00268	e083300f	 add         r3, r3, pc
  0026c	e5933004	 ldr         r3, [r3, #4]
  00270	e08ff003	 add         pc, pc, r3
  00274		 |$LN101@HandleWave|
  00274		 |$LN100@HandleWave|
  00274		 |$LN102@HandleWave|
  00274	00000114	 DCD         0x114
  00278		 |$LN103@HandleWave|
  00278	0000014c	 DCD         0x14c
  0027c		 |$LN104@HandleWave|
  0027c	00000264	 DCD         0x264
  00280		 |$LN105@HandleWave|
  00280	000003c8	 DCD         0x3c8
  00284		 |$LN106@HandleWave|
  00284	00000a90	 DCD         0xa90
  00288		 |$LN107@HandleWave|
  00288	00000a90	 DCD         0xa90
  0028c		 |$LN108@HandleWave|
  0028c	000005e8	 DCD         0x5e8
  00290		 |$LN109@HandleWave|
  00290	000004ac	 DCD         0x4ac
  00294		 |$LN110@HandleWave|
  00294	00000444	 DCD         0x444
  00298		 |$LN111@HandleWave|
  00298	00000580	 DCD         0x580
  0029c		 |$LN112@HandleWave|
  0029c	00000514	 DCD         0x514
  002a0		 |$LN113@HandleWave|
  002a0	00000a90	 DCD         0xa90
  002a4		 |$LN114@HandleWave|
  002a4	00000a90	 DCD         0xa90
  002a8		 |$LN115@HandleWave|
  002a8	00000658	 DCD         0x658
  002ac		 |$LN116@HandleWave|
  002ac	000006e0	 DCD         0x6e0
  002b0		 |$LN117@HandleWave|
  002b0	00000864	 DCD         0x864
  002b4		 |$LN118@HandleWave|
  002b4	0000082c	 DCD         0x82c
  002b8		 |$LN119@HandleWave|
  002b8	00000814	 DCD         0x814
  002bc		 |$LN120@HandleWave|
  002bc	00000a90	 DCD         0xa90
  002c0		 |$LN121@HandleWave|
  002c0	000002d0	 DCD         0x2d0
  002c4		 |$LN80@HandleWave|
  002c4	e51b3100	 ldr         r3, [r11, #-0x100]
  002c8	e3530f7d	 cmp         r3, #0x7D, 30
  002cc	8a000017	 bhi         |$LN81@HandleWave|
  002d0	e51b3100	 ldr         r3, [r11, #-0x100]
  002d4	e3530f7d	 cmp         r3, #0x7D, 30
  002d8	0a00026e	 beq         |$LN5@HandleWave|
  002dc	e51b3100	 ldr         r3, [r11, #-0x100]
  002e0	e2433033	 sub         r3, r3, #0x33
  002e4	e50b3100	 str         r3, [r11, #-0x100]
  002e8	e51b3100	 ldr         r3, [r11, #-0x100]
  002ec	e3530009	 cmp         r3, #9
  002f0	8a000284	 bhi         |$LN2@HandleWave|
  002f4	e51b2100	 ldr         r2, [r11, #-0x100]
  002f8	e1a03102	 mov         r3, r2, lsl #2
  002fc	e083300f	 add         r3, r3, pc
  00300	e5933004	 ldr         r3, [r3, #4]
  00304	e08ff003	 add         pc, pc, r3
  00308		 |$LN123@HandleWave|
  00308		 |$LN122@HandleWave|
  00308		 |$LN124@HandleWave|
  00308	00000144	 DCD         0x144
  0030c		 |$LN125@HandleWave|
  0030c	000002c8	 DCD         0x2c8
  00310		 |$LN126@HandleWave|
  00310	00000334	 DCD         0x334
  00314		 |$LN127@HandleWave|
  00314	000009fc	 DCD         0x9fc
  00318		 |$LN128@HandleWave|
  00318	000009fc	 DCD         0x9fc
  0031c		 |$LN129@HandleWave|
  0031c	00000554	 DCD         0x554
  00320		 |$LN130@HandleWave|
  00320	000003b0	 DCD         0x3b0
  00324		 |$LN131@HandleWave|
  00324	00000418	 DCD         0x418
  00328		 |$LN132@HandleWave|
  00328	000004ec	 DCD         0x4ec
  0032c		 |$LN133@HandleWave|
  0032c	00000480	 DCD         0x480
  00330		 |$LN81@HandleWave|
  00330	e51b2100	 ldr         r2, [r11, #-0x100]
  00334	e3a03b01	 mov         r3, #1, 22
  00338	e3833002	 orr         r3, r3, #2
  0033c	e1520003	 cmp         r2, r3
  00340	8a00000d	 bhi         |$LN82@HandleWave|
  00344	e51b2100	 ldr         r2, [r11, #-0x100]
  00348	e3a03b01	 mov         r3, #1, 22
  0034c	e3833002	 orr         r3, r3, #2
  00350	e1520003	 cmp         r2, r3
  00354	0a00021e	 beq         |$LN9@HandleWave|
  00358	e51b3100	 ldr         r3, [r11, #-0x100]
  0035c	e3530b01	 cmp         r3, #1, 22
  00360	0a0001e6	 beq         |$LN13@HandleWave|
  00364	e51b2100	 ldr         r2, [r11, #-0x100]
  00368	e3a03b01	 mov         r3, #1, 22
  0036c	e3833001	 orr         r3, r3, #1
  00370	e1520003	 cmp         r2, r3
  00374	0a0001f3	 beq         |$LN12@HandleWave|
  00378	ea000262	 b           |$LN2@HandleWave|
  0037c		 |$LN82@HandleWave|
  0037c	e51b3100	 ldr         r3, [r11, #-0x100]
  00380	e3530c05	 cmp         r3, #5, 24
  00384	0a00022f	 beq         |$LN6@HandleWave|
  00388	ea00025e	 b           |$LN2@HandleWave|
  0038c		 |$LN44@HandleWave|

; 224  :     {
; 225  :     case WODM_GETNUMDEVS:
; 226  :         {
; 227  :             dwRet = g_pHWContext->GetNumOutputDevices();

  0038c	e59f3a40	 ldr         r3, [pc, #0xA40]
  00390	e5930000	 ldr         r0, [r3]
  00394	eb000000	 bl          |?GetNumOutputDevices@HardwareContext@@QAAKXZ|
  00398	e50b00fc	 str         r0, [r11, #-0xFC]
  0039c	e51b30fc	 ldr         r3, [r11, #-0xFC]
  003a0	e50b3170	 str         r3, [r11, #-0x170]

; 228  :             break;

  003a4	ea000259	 b           |$LN45@HandleWave|
  003a8		 |$LN43@HandleWave|

; 229  :         }
; 230  : 
; 231  :     case WIDM_GETNUMDEVS:
; 232  :         {
; 233  :             dwRet = g_pHWContext->GetNumInputDevices();

  003a8	e59f3a24	 ldr         r3, [pc, #0xA24]
  003ac	e5930000	 ldr         r0, [r3]
  003b0	eb000000	 bl          |?GetNumInputDevices@HardwareContext@@QAAKXZ|
  003b4	e50b00f8	 str         r0, [r11, #-0xF8]
  003b8	e51b30f8	 ldr         r3, [r11, #-0xF8]
  003bc	e50b3170	 str         r3, [r11, #-0x170]

; 234  :             break;

  003c0	ea000252	 b           |$LN45@HandleWave|
  003c4		 |$LN42@HandleWave|

; 235  :         }
; 236  : 
; 237  :     case WODM_GETDEVCAPS:
; 238  :         {
; 239  :             DeviceContext *pDeviceContext;
; 240  :             UINT NumDevs = g_pHWContext->GetNumOutputDevices();

  003c4	e59f3a08	 ldr         r3, [pc, #0xA08]
  003c8	e5930000	 ldr         r0, [r3]
  003cc	eb000000	 bl          |?GetNumOutputDevices@HardwareContext@@QAAKXZ|
  003d0	e50b00f4	 str         r0, [r11, #-0xF4]
  003d4	e51b30f4	 ldr         r3, [r11, #-0xF4]
  003d8	e50b3150	 str         r3, [r11, #-0x150]

; 241  : 
; 242  :             if (pStreamContext)

  003dc	e51b3158	 ldr         r3, [r11, #-0x158]
  003e0	e3530000	 cmp         r3, #0
  003e4	0a000005	 beq         |$LN41@HandleWave|

; 243  :             {
; 244  :                 pDeviceContext=pStreamContext->GetDeviceContext();

  003e8	e51b0158	 ldr         r0, [r11, #-0x158]
  003ec	eb000000	 bl          |?GetDeviceContext@StreamContext@@QAAPAVDeviceContext@@XZ|
  003f0	e50b00f0	 str         r0, [r11, #-0xF0]
  003f4	e51b30f0	 ldr         r3, [r11, #-0xF0]
  003f8	e50b3154	 str         r3, [r11, #-0x154]

; 245  :             }
; 246  :             else

  003fc	ea000006	 b           |$LN40@HandleWave|
  00400		 |$LN41@HandleWave|

; 247  :             {
; 248  :                 pDeviceContext = g_pHWContext->GetOutputDeviceContext(uDeviceId);

  00400	e51b1168	 ldr         r1, [r11, #-0x168]
  00404	e59f39c8	 ldr         r3, [pc, #0x9C8]
  00408	e5930000	 ldr         r0, [r3]
  0040c	eb000000	 bl          |?GetOutputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z|
  00410	e50b00ec	 str         r0, [r11, #-0xEC]
  00414	e51b30ec	 ldr         r3, [r11, #-0xEC]
  00418	e50b3154	 str         r3, [r11, #-0x154]
  0041c		 |$LN40@HandleWave|

; 249  :             }
; 250  : 
; 251  :             dwRet = pDeviceContext->GetDevCaps((PVOID)dwParam1,dwParam2);

  0041c	e51b2164	 ldr         r2, [r11, #-0x164]
  00420	e51b116c	 ldr         r1, [r11, #-0x16C]
  00424	e51b3154	 ldr         r3, [r11, #-0x154]
  00428	e5933000	 ldr         r3, [r3]
  0042c	e2833008	 add         r3, r3, #8
  00430	e51b0154	 ldr         r0, [r11, #-0x154]
  00434	e5933000	 ldr         r3, [r3]
  00438	e1a0e00f	 mov         lr, pc
  0043c	e12fff13	 bx          r3
  00440	e50b00e8	 str         r0, [r11, #-0xE8]
  00444	e51b30e8	 ldr         r3, [r11, #-0xE8]
  00448	e50b3170	 str         r3, [r11, #-0x170]

; 252  :             break;

  0044c	ea00022f	 b           |$LN45@HandleWave|
  00450		 |$LN39@HandleWave|

; 253  :         }
; 254  : 
; 255  : 
; 256  :     case WIDM_GETDEVCAPS:
; 257  :         {
; 258  :             DeviceContext *pDeviceContext;
; 259  :             UINT NumDevs = g_pHWContext->GetNumInputDevices();

  00450	e59f397c	 ldr         r3, [pc, #0x97C]
  00454	e5930000	 ldr         r0, [r3]
  00458	eb000000	 bl          |?GetNumInputDevices@HardwareContext@@QAAKXZ|
  0045c	e50b00e4	 str         r0, [r11, #-0xE4]
  00460	e51b30e4	 ldr         r3, [r11, #-0xE4]
  00464	e50b3148	 str         r3, [r11, #-0x148]

; 260  : 
; 261  :             if (pStreamContext)

  00468	e51b3158	 ldr         r3, [r11, #-0x158]
  0046c	e3530000	 cmp         r3, #0
  00470	0a000005	 beq         |$LN38@HandleWave|

; 262  :             {
; 263  :                 pDeviceContext=pStreamContext->GetDeviceContext();

  00474	e51b0158	 ldr         r0, [r11, #-0x158]
  00478	eb000000	 bl          |?GetDeviceContext@StreamContext@@QAAPAVDeviceContext@@XZ|
  0047c	e50b00e0	 str         r0, [r11, #-0xE0]
  00480	e51b30e0	 ldr         r3, [r11, #-0xE0]
  00484	e50b314c	 str         r3, [r11, #-0x14C]

; 264  :             }
; 265  :             else

  00488	ea000006	 b           |$LN37@HandleWave|
  0048c		 |$LN38@HandleWave|

; 266  :             {
; 267  :                 pDeviceContext = g_pHWContext->GetInputDeviceContext(uDeviceId);

  0048c	e51b1168	 ldr         r1, [r11, #-0x168]
  00490	e59f393c	 ldr         r3, [pc, #0x93C]
  00494	e5930000	 ldr         r0, [r3]
  00498	eb000000	 bl          |?GetInputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z|
  0049c	e50b00dc	 str         r0, [r11, #-0xDC]
  004a0	e51b30dc	 ldr         r3, [r11, #-0xDC]
  004a4	e50b314c	 str         r3, [r11, #-0x14C]
  004a8		 |$LN37@HandleWave|

; 268  :             }
; 269  : 
; 270  :             dwRet = pDeviceContext->GetDevCaps((PVOID)dwParam1,dwParam2);

  004a8	e51b2164	 ldr         r2, [r11, #-0x164]
  004ac	e51b116c	 ldr         r1, [r11, #-0x16C]
  004b0	e51b314c	 ldr         r3, [r11, #-0x14C]
  004b4	e5933000	 ldr         r3, [r3]
  004b8	e2833008	 add         r3, r3, #8
  004bc	e51b014c	 ldr         r0, [r11, #-0x14C]
  004c0	e5933000	 ldr         r3, [r3]
  004c4	e1a0e00f	 mov         lr, pc
  004c8	e12fff13	 bx          r3
  004cc	e50b00d8	 str         r0, [r11, #-0xD8]
  004d0	e51b30d8	 ldr         r3, [r11, #-0xD8]
  004d4	e50b3170	 str         r3, [r11, #-0x170]

; 271  :             break;

  004d8	ea00020c	 b           |$LN45@HandleWave|
  004dc		 |$LN36@HandleWave|

; 272  :         }
; 273  : 
; 274  :     case WODM_OPEN:
; 275  :         {
; 276  :             DEBUGMSG(ZONE_WODM, (TEXT("WODM_OPEN\r\n")));

  004dc	e59f3904	 ldr         r3, [pc, #0x904]
  004e0	e5933440	 ldr         r3, [r3, #0x440]
  004e4	e3130010	 tst         r3, #0x10
  004e8	0a000004	 beq         |$LN50@HandleWave|
  004ec	e59f092c	 ldr         r0, [pc, #0x92C]
  004f0	eb000000	 bl          NKDbgPrintfW
  004f4	e3a03001	 mov         r3, #1
  004f8	e50b30d4	 str         r3, [r11, #-0xD4]
  004fc	ea000001	 b           |$LN51@HandleWave|
  00500		 |$LN50@HandleWave|
  00500	e3a03000	 mov         r3, #0
  00504	e50b30d4	 str         r3, [r11, #-0xD4]
  00508		 |$LN51@HandleWave|

; 277  :             DeviceContext *pDeviceContext = g_pHWContext->GetOutputDeviceContext(uDeviceId);

  00508	e51b1168	 ldr         r1, [r11, #-0x168]
  0050c	e59f38c0	 ldr         r3, [pc, #0x8C0]
  00510	e5930000	 ldr         r0, [r3]
  00514	eb000000	 bl          |?GetOutputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z|
  00518	e50b00d0	 str         r0, [r11, #-0xD0]
  0051c	e51b30d0	 ldr         r3, [r11, #-0xD0]
  00520	e50b3144	 str         r3, [r11, #-0x144]

; 278  :             dwRet = pDeviceContext->OpenStream((LPWAVEOPENDESC)dwParam1, dwParam2, (StreamContext **)dwUser);

  00524	e51b3160	 ldr         r3, [r11, #-0x160]
  00528	e51b2164	 ldr         r2, [r11, #-0x164]
  0052c	e51b116c	 ldr         r1, [r11, #-0x16C]
  00530	e51b0144	 ldr         r0, [r11, #-0x144]
  00534	eb000000	 bl          |?OpenStream@DeviceContext@@QAAKPAUwaveopendesc_tag@@KPAPAVStreamContext@@@Z|
  00538	e50b00cc	 str         r0, [r11, #-0xCC]
  0053c	e51b30cc	 ldr         r3, [r11, #-0xCC]
  00540	e50b3170	 str         r3, [r11, #-0x170]

; 279  :             break;

  00544	ea0001f1	 b           |$LN45@HandleWave|
  00548		 |$LN35@HandleWave|

; 280  :         }
; 281  : 
; 282  :     case WODM_GETEXTDEVCAPS:
; 283  :         {
; 284  :             DeviceContext *pDeviceContext;
; 285  :             UINT NumDevs = g_pHWContext->GetNumOutputDevices();

  00548	e59f3884	 ldr         r3, [pc, #0x884]
  0054c	e5930000	 ldr         r0, [r3]
  00550	eb000000	 bl          |?GetNumOutputDevices@HardwareContext@@QAAKXZ|
  00554	e50b00c8	 str         r0, [r11, #-0xC8]
  00558	e51b30c8	 ldr         r3, [r11, #-0xC8]
  0055c	e50b313c	 str         r3, [r11, #-0x13C]

; 286  : 
; 287  :             if (pStreamContext)

  00560	e51b3158	 ldr         r3, [r11, #-0x158]
  00564	e3530000	 cmp         r3, #0
  00568	0a000005	 beq         |$LN34@HandleWave|

; 288  :             {
; 289  :                 pDeviceContext=pStreamContext->GetDeviceContext();

  0056c	e51b0158	 ldr         r0, [r11, #-0x158]
  00570	eb000000	 bl          |?GetDeviceContext@StreamContext@@QAAPAVDeviceContext@@XZ|
  00574	e50b00c4	 str         r0, [r11, #-0xC4]
  00578	e51b30c4	 ldr         r3, [r11, #-0xC4]
  0057c	e50b3140	 str         r3, [r11, #-0x140]

; 290  :             }
; 291  :             else

  00580	ea000006	 b           |$LN33@HandleWave|
  00584		 |$LN34@HandleWave|

; 292  :             {
; 293  :                 pDeviceContext = g_pHWContext->GetOutputDeviceContext(uDeviceId);

  00584	e51b1168	 ldr         r1, [r11, #-0x168]
  00588	e59f3844	 ldr         r3, [pc, #0x844]
  0058c	e5930000	 ldr         r0, [r3]
  00590	eb000000	 bl          |?GetOutputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z|
  00594	e50b00c0	 str         r0, [r11, #-0xC0]
  00598	e51b30c0	 ldr         r3, [r11, #-0xC0]
  0059c	e50b3140	 str         r3, [r11, #-0x140]
  005a0		 |$LN33@HandleWave|

; 294  :             }
; 295  : 
; 296  :             dwRet = pDeviceContext->GetExtDevCaps((PVOID)dwParam1,dwParam2);

  005a0	e51b2164	 ldr         r2, [r11, #-0x164]
  005a4	e51b116c	 ldr         r1, [r11, #-0x16C]
  005a8	e51b3140	 ldr         r3, [r11, #-0x140]
  005ac	e5933000	 ldr         r3, [r3]
  005b0	e2833004	 add         r3, r3, #4
  005b4	e51b0140	 ldr         r0, [r11, #-0x140]
  005b8	e5933000	 ldr         r3, [r3]
  005bc	e1a0e00f	 mov         lr, pc
  005c0	e12fff13	 bx          r3
  005c4	e50b00bc	 str         r0, [r11, #-0xBC]
  005c8	e51b30bc	 ldr         r3, [r11, #-0xBC]
  005cc	e50b3170	 str         r3, [r11, #-0x170]

; 297  :             break;

  005d0	ea0001ce	 b           |$LN45@HandleWave|
  005d4		 |$LN32@HandleWave|

; 298  :         }
; 299  : 
; 300  :     case WIDM_OPEN:
; 301  :         {
; 302  :             DEBUGMSG(ZONE_WIDM, (TEXT("WIDM_OPEN\r\n")));

  005d4	e59f380c	 ldr         r3, [pc, #0x80C]
  005d8	e5933440	 ldr         r3, [r3, #0x440]
  005dc	e3130020	 tst         r3, #0x20
  005e0	0a000004	 beq         |$LN52@HandleWave|
  005e4	e59f0830	 ldr         r0, [pc, #0x830]
  005e8	eb000000	 bl          NKDbgPrintfW
  005ec	e3a03001	 mov         r3, #1
  005f0	e50b30b8	 str         r3, [r11, #-0xB8]
  005f4	ea000001	 b           |$LN53@HandleWave|
  005f8		 |$LN52@HandleWave|
  005f8	e3a03000	 mov         r3, #0
  005fc	e50b30b8	 str         r3, [r11, #-0xB8]
  00600		 |$LN53@HandleWave|

; 303  :             DeviceContext *pDeviceContext = g_pHWContext->GetInputDeviceContext(uDeviceId);

  00600	e51b1168	 ldr         r1, [r11, #-0x168]
  00604	e59f37c8	 ldr         r3, [pc, #0x7C8]
  00608	e5930000	 ldr         r0, [r3]
  0060c	eb000000	 bl          |?GetInputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z|
  00610	e50b00b4	 str         r0, [r11, #-0xB4]
  00614	e51b30b4	 ldr         r3, [r11, #-0xB4]
  00618	e50b3138	 str         r3, [r11, #-0x138]

; 304  :             dwRet = pDeviceContext->OpenStream((LPWAVEOPENDESC)dwParam1, dwParam2, (StreamContext **)dwUser);

  0061c	e51b3160	 ldr         r3, [r11, #-0x160]
  00620	e51b2164	 ldr         r2, [r11, #-0x164]
  00624	e51b116c	 ldr         r1, [r11, #-0x16C]
  00628	e51b0138	 ldr         r0, [r11, #-0x138]
  0062c	eb000000	 bl          |?OpenStream@DeviceContext@@QAAKPAUwaveopendesc_tag@@KPAPAVStreamContext@@@Z|
  00630	e50b00b0	 str         r0, [r11, #-0xB0]
  00634	e51b30b0	 ldr         r3, [r11, #-0xB0]
  00638	e50b3170	 str         r3, [r11, #-0x170]

; 305  :             break;

  0063c	ea0001b3	 b           |$LN45@HandleWave|
  00640		 |$LN31@HandleWave|

; 306  :         }
; 307  : 
; 308  :     case WODM_CLOSE:
; 309  :     case WIDM_CLOSE:
; 310  :         {
; 311  :             DEBUGMSG(ZONE_WODM|ZONE_WIDM, (TEXT("WIDM_CLOSE/WODM_CLOSE\r\n")));

  00640	e59f37a0	 ldr         r3, [pc, #0x7A0]
  00644	e5933440	 ldr         r3, [r3, #0x440]
  00648	e2032010	 and         r2, r3, #0x10
  0064c	e59f3794	 ldr         r3, [pc, #0x794]
  00650	e5933440	 ldr         r3, [r3, #0x440]
  00654	e2033020	 and         r3, r3, #0x20
  00658	e1923003	 orrs        r3, r2, r3
  0065c	0a000004	 beq         |$LN54@HandleWave|
  00660	e59f07b0	 ldr         r0, [pc, #0x7B0]
  00664	eb000000	 bl          NKDbgPrintfW
  00668	e3a03001	 mov         r3, #1
  0066c	e50b30ac	 str         r3, [r11, #-0xAC]
  00670	ea000001	 b           |$LN55@HandleWave|
  00674		 |$LN54@HandleWave|
  00674	e3a03000	 mov         r3, #0
  00678	e50b30ac	 str         r3, [r11, #-0xAC]
  0067c		 |$LN55@HandleWave|

; 312  :             dwRet = pStreamContext->Close();

  0067c	e51b3158	 ldr         r3, [r11, #-0x158]
  00680	e5933000	 ldr         r3, [r3]
  00684	e2833008	 add         r3, r3, #8
  00688	e51b0158	 ldr         r0, [r11, #-0x158]
  0068c	e5933000	 ldr         r3, [r3]
  00690	e1a0e00f	 mov         lr, pc
  00694	e12fff13	 bx          r3
  00698	e50b00a8	 str         r0, [r11, #-0xA8]
  0069c	e51b30a8	 ldr         r3, [r11, #-0xA8]
  006a0	e50b3170	 str         r3, [r11, #-0x170]

; 313  : 
; 314  :             // Release stream context here, rather than inside StreamContext::Close, so that if someone
; 315  :             // (like CMidiStream) has subclassed Close there's no chance that the object will get released
; 316  :             // out from under them.
; 317  :             if (dwRet==MMSYSERR_NOERROR)

  006a4	e51b3170	 ldr         r3, [r11, #-0x170]
  006a8	e3530000	 cmp         r3, #0
  006ac	1a000001	 bne         |$LN30@HandleWave|

; 318  :             {
; 319  :                 pStreamContext->Release();

  006b0	e51b0158	 ldr         r0, [r11, #-0x158]
  006b4	eb000000	 bl          |?Release@StreamContext@@QAAJXZ|
  006b8		 |$LN30@HandleWave|

; 320  :             }
; 321  :             break;

  006b8	ea000194	 b           |$LN45@HandleWave|
  006bc		 |$LN29@HandleWave|

; 322  :         }
; 323  : 
; 324  :     case WODM_RESTART:
; 325  :     case WIDM_START:
; 326  :         {
; 327  :             DEBUGMSG(ZONE_WODM|ZONE_WIDM, (TEXT("WODM_RESTART/WIDM_START\r\n")));

  006bc	e59f3724	 ldr         r3, [pc, #0x724]
  006c0	e5933440	 ldr         r3, [r3, #0x440]
  006c4	e2032010	 and         r2, r3, #0x10
  006c8	e59f3718	 ldr         r3, [pc, #0x718]
  006cc	e5933440	 ldr         r3, [r3, #0x440]
  006d0	e2033020	 and         r3, r3, #0x20
  006d4	e1923003	 orrs        r3, r2, r3
  006d8	0a000004	 beq         |$LN56@HandleWave|
  006dc	e59f0730	 ldr         r0, [pc, #0x730]
  006e0	eb000000	 bl          NKDbgPrintfW
  006e4	e3a03001	 mov         r3, #1
  006e8	e50b30a4	 str         r3, [r11, #-0xA4]
  006ec	ea000001	 b           |$LN57@HandleWave|
  006f0		 |$LN56@HandleWave|
  006f0	e3a03000	 mov         r3, #0
  006f4	e50b30a4	 str         r3, [r11, #-0xA4]
  006f8		 |$LN57@HandleWave|

; 328  :             dwRet = pStreamContext->Run();

  006f8	e51b3158	 ldr         r3, [r11, #-0x158]
  006fc	e5933000	 ldr         r3, [r3]
  00700	e2833010	 add         r3, r3, #0x10
  00704	e51b0158	 ldr         r0, [r11, #-0x158]
  00708	e5933000	 ldr         r3, [r3]
  0070c	e1a0e00f	 mov         lr, pc
  00710	e12fff13	 bx          r3
  00714	e50b00a0	 str         r0, [r11, #-0xA0]
  00718	e51b30a0	 ldr         r3, [r11, #-0xA0]
  0071c	e50b3170	 str         r3, [r11, #-0x170]

; 329  :             break;

  00720	ea00017a	 b           |$LN45@HandleWave|
  00724		 |$LN28@HandleWave|

; 330  :         }
; 331  : 
; 332  :     case WODM_PAUSE:
; 333  :     case WIDM_STOP:
; 334  :         {
; 335  :             DEBUGMSG(ZONE_WODM|ZONE_WIDM, (TEXT("WODM_PAUSE/WIDM_STOP\r\n")));

  00724	e59f36bc	 ldr         r3, [pc, #0x6BC]
  00728	e5933440	 ldr         r3, [r3, #0x440]
  0072c	e2032010	 and         r2, r3, #0x10
  00730	e59f36b0	 ldr         r3, [pc, #0x6B0]
  00734	e5933440	 ldr         r3, [r3, #0x440]
  00738	e2033020	 and         r3, r3, #0x20
  0073c	e1923003	 orrs        r3, r2, r3
  00740	0a000004	 beq         |$LN58@HandleWave|
  00744	e59f06c4	 ldr         r0, [pc, #0x6C4]
  00748	eb000000	 bl          NKDbgPrintfW
  0074c	e3a03001	 mov         r3, #1
  00750	e50b309c	 str         r3, [r11, #-0x9C]
  00754	ea000001	 b           |$LN59@HandleWave|
  00758		 |$LN58@HandleWave|
  00758	e3a03000	 mov         r3, #0
  0075c	e50b309c	 str         r3, [r11, #-0x9C]
  00760		 |$LN59@HandleWave|

; 336  :             dwRet = pStreamContext->Stop();

  00760	e51b3158	 ldr         r3, [r11, #-0x158]
  00764	e5933000	 ldr         r3, [r3]
  00768	e2833014	 add         r3, r3, #0x14
  0076c	e51b0158	 ldr         r0, [r11, #-0x158]
  00770	e5933000	 ldr         r3, [r3]
  00774	e1a0e00f	 mov         lr, pc
  00778	e12fff13	 bx          r3
  0077c	e50b0098	 str         r0, [r11, #-0x98]
  00780	e51b3098	 ldr         r3, [r11, #-0x98]
  00784	e50b3170	 str         r3, [r11, #-0x170]

; 337  :             break;

  00788	ea000160	 b           |$LN45@HandleWave|
  0078c		 |$LN27@HandleWave|

; 338  :         }
; 339  : 
; 340  :     case WODM_GETPOS:
; 341  :     case WIDM_GETPOS:
; 342  :         {
; 343  :             DEBUGMSG(ZONE_WODM|ZONE_WIDM, (TEXT("WODM_GETPOS/WIDM_GETPOS\r\n")));

  0078c	e59f3654	 ldr         r3, [pc, #0x654]
  00790	e5933440	 ldr         r3, [r3, #0x440]
  00794	e2032010	 and         r2, r3, #0x10
  00798	e59f3648	 ldr         r3, [pc, #0x648]
  0079c	e5933440	 ldr         r3, [r3, #0x440]
  007a0	e2033020	 and         r3, r3, #0x20
  007a4	e1923003	 orrs        r3, r2, r3
  007a8	0a000004	 beq         |$LN60@HandleWave|
  007ac	e59f0658	 ldr         r0, [pc, #0x658]
  007b0	eb000000	 bl          NKDbgPrintfW
  007b4	e3a03001	 mov         r3, #1
  007b8	e50b3094	 str         r3, [r11, #-0x94]
  007bc	ea000001	 b           |$LN61@HandleWave|
  007c0		 |$LN60@HandleWave|
  007c0	e3a03000	 mov         r3, #0
  007c4	e50b3094	 str         r3, [r11, #-0x94]
  007c8		 |$LN61@HandleWave|

; 344  :             dwRet = pStreamContext->GetPos((PMMTIME)dwParam1);

  007c8	e51b116c	 ldr         r1, [r11, #-0x16C]
  007cc	e51b3158	 ldr         r3, [r11, #-0x158]
  007d0	e5933000	 ldr         r3, [r3]
  007d4	e283300c	 add         r3, r3, #0xC
  007d8	e51b0158	 ldr         r0, [r11, #-0x158]
  007dc	e5933000	 ldr         r3, [r3]
  007e0	e1a0e00f	 mov         lr, pc
  007e4	e12fff13	 bx          r3
  007e8	e50b0090	 str         r0, [r11, #-0x90]
  007ec	e51b3090	 ldr         r3, [r11, #-0x90]
  007f0	e50b3170	 str         r3, [r11, #-0x170]

; 345  :             break;

  007f4	ea000145	 b           |$LN45@HandleWave|
  007f8		 |$LN26@HandleWave|

; 346  :         }
; 347  : 
; 348  :     case WODM_RESET:
; 349  :     case WIDM_RESET:
; 350  :         {
; 351  :             DEBUGMSG(ZONE_WODM|ZONE_WIDM, (TEXT("WODM_RESET/WIDM_RESET\r\n")));

  007f8	e59f35e8	 ldr         r3, [pc, #0x5E8]
  007fc	e5933440	 ldr         r3, [r3, #0x440]
  00800	e2032010	 and         r2, r3, #0x10
  00804	e59f35dc	 ldr         r3, [pc, #0x5DC]
  00808	e5933440	 ldr         r3, [r3, #0x440]
  0080c	e2033020	 and         r3, r3, #0x20
  00810	e1923003	 orrs        r3, r2, r3
  00814	0a000004	 beq         |$LN62@HandleWave|
  00818	e59f05e8	 ldr         r0, [pc, #0x5E8]
  0081c	eb000000	 bl          NKDbgPrintfW
  00820	e3a03001	 mov         r3, #1
  00824	e50b308c	 str         r3, [r11, #-0x8C]
  00828	ea000001	 b           |$LN63@HandleWave|
  0082c		 |$LN62@HandleWave|
  0082c	e3a03000	 mov         r3, #0
  00830	e50b308c	 str         r3, [r11, #-0x8C]
  00834		 |$LN63@HandleWave|

; 352  :             dwRet = pStreamContext->Reset();

  00834	e51b3158	 ldr         r3, [r11, #-0x158]
  00838	e5933000	 ldr         r3, [r3]
  0083c	e2833018	 add         r3, r3, #0x18
  00840	e51b0158	 ldr         r0, [r11, #-0x158]
  00844	e5933000	 ldr         r3, [r3]
  00848	e1a0e00f	 mov         lr, pc
  0084c	e12fff13	 bx          r3
  00850	e50b0088	 str         r0, [r11, #-0x88]
  00854	e51b3088	 ldr         r3, [r11, #-0x88]
  00858	e50b3170	 str         r3, [r11, #-0x170]

; 353  :             break;

  0085c	ea00012b	 b           |$LN45@HandleWave|
  00860		 |$LN25@HandleWave|

; 354  :         }
; 355  : 
; 356  :     case WODM_WRITE:
; 357  :     case WIDM_ADDBUFFER:
; 358  :         {
; 359  :             DEBUGMSG(ZONE_WODM|ZONE_WIDM, (TEXT("WODM_WRITE/WIDM_ADDBUFFER, Buffer=0x%x\r\n"),dwParam1));

  00860	e59f3580	 ldr         r3, [pc, #0x580]
  00864	e5933440	 ldr         r3, [r3, #0x440]
  00868	e2032010	 and         r2, r3, #0x10
  0086c	e59f3574	 ldr         r3, [pc, #0x574]
  00870	e5933440	 ldr         r3, [r3, #0x440]
  00874	e2033020	 and         r3, r3, #0x20
  00878	e1923003	 orrs        r3, r2, r3
  0087c	0a000005	 beq         |$LN64@HandleWave|
  00880	e51b116c	 ldr         r1, [r11, #-0x16C]
  00884	e59f0578	 ldr         r0, [pc, #0x578]
  00888	eb000000	 bl          NKDbgPrintfW
  0088c	e3a03001	 mov         r3, #1
  00890	e50b3084	 str         r3, [r11, #-0x84]
  00894	ea000001	 b           |$LN65@HandleWave|
  00898		 |$LN64@HandleWave|
  00898	e3a03000	 mov         r3, #0
  0089c	e50b3084	 str         r3, [r11, #-0x84]
  008a0		 |$LN65@HandleWave|

; 360  :             dwRet = pStreamContext->QueueBuffer((LPWAVEHDR)dwParam1);

  008a0	e51b116c	 ldr         r1, [r11, #-0x16C]
  008a4	e51b3158	 ldr         r3, [r11, #-0x158]
  008a8	e5933000	 ldr         r3, [r3]
  008ac	e283302c	 add         r3, r3, #0x2C
  008b0	e51b0158	 ldr         r0, [r11, #-0x158]
  008b4	e5933000	 ldr         r3, [r3]
  008b8	e1a0e00f	 mov         lr, pc
  008bc	e12fff13	 bx          r3
  008c0	e50b0080	 str         r0, [r11, #-0x80]
  008c4	e51b3080	 ldr         r3, [r11, #-0x80]
  008c8	e50b3170	 str         r3, [r11, #-0x170]

; 361  :             break;

  008cc	ea00010f	 b           |$LN45@HandleWave|
  008d0		 |$LN24@HandleWave|

; 362  :         }
; 363  : 
; 364  :     case WODM_GETVOLUME:
; 365  :         {
; 366  :             PDWORD pdwGain = (PDWORD)dwParam1;

  008d0	e51b316c	 ldr         r3, [r11, #-0x16C]
  008d4	e50b3130	 str         r3, [r11, #-0x130]

; 367  :             UINT NumDevs = g_pHWContext->GetNumOutputDevices();

  008d8	e59f34f4	 ldr         r3, [pc, #0x4F4]
  008dc	e5930000	 ldr         r0, [r3]
  008e0	eb000000	 bl          |?GetNumOutputDevices@HardwareContext@@QAAKXZ|
  008e4	e50b007c	 str         r0, [r11, #-0x7C]
  008e8	e51b307c	 ldr         r3, [r11, #-0x7C]
  008ec	e50b3134	 str         r3, [r11, #-0x134]

; 368  : 
; 369  :             if (pStreamContext)

  008f0	e51b3158	 ldr         r3, [r11, #-0x158]
  008f4	e3530000	 cmp         r3, #0
  008f8	0a000006	 beq         |$LN23@HandleWave|

; 370  :             {
; 371  :                 *pdwGain = pStreamContext->GetGain();

  008fc	e51b0158	 ldr         r0, [r11, #-0x158]
  00900	eb000000	 bl          |?GetGain@StreamContext@@QAAKXZ|
  00904	e50b0078	 str         r0, [r11, #-0x78]
  00908	e51b2078	 ldr         r2, [r11, #-0x78]
  0090c	e51b3130	 ldr         r3, [r11, #-0x130]
  00910	e5832000	 str         r2, [r3]

; 372  :             }
; 373  :             else

  00914	ea00000c	 b           |$LN22@HandleWave|
  00918		 |$LN23@HandleWave|

; 374  :             {
; 375  :                 DeviceContext *pDeviceContext = g_pHWContext->GetOutputDeviceContext(uDeviceId);

  00918	e51b1168	 ldr         r1, [r11, #-0x168]
  0091c	e59f34b0	 ldr         r3, [pc, #0x4B0]
  00920	e5930000	 ldr         r0, [r3]
  00924	eb000000	 bl          |?GetOutputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z|
  00928	e50b0074	 str         r0, [r11, #-0x74]
  0092c	e51b3074	 ldr         r3, [r11, #-0x74]
  00930	e50b312c	 str         r3, [r11, #-0x12C]

; 376  :                 *pdwGain = pDeviceContext->GetGain();

  00934	e51b012c	 ldr         r0, [r11, #-0x12C]
  00938	eb000000	 bl          |?GetGain@DeviceContext@@QAAKXZ|
  0093c	e50b0070	 str         r0, [r11, #-0x70]
  00940	e51b2070	 ldr         r2, [r11, #-0x70]
  00944	e51b3130	 ldr         r3, [r11, #-0x130]
  00948	e5832000	 str         r2, [r3]
  0094c		 |$LN22@HandleWave|

; 377  :             }
; 378  :             dwRet = MMSYSERR_NOERROR;

  0094c	e3a03000	 mov         r3, #0
  00950	e50b3170	 str         r3, [r11, #-0x170]

; 379  :             break;

  00954	ea0000ed	 b           |$LN45@HandleWave|
  00958		 |$LN21@HandleWave|

; 380  :         }
; 381  : 
; 382  :     case WODM_SETVOLUME:
; 383  :         {
; 384  :             UINT NumDevs = g_pHWContext->GetNumOutputDevices();

  00958	e59f3474	 ldr         r3, [pc, #0x474]
  0095c	e5930000	 ldr         r0, [r3]
  00960	eb000000	 bl          |?GetNumOutputDevices@HardwareContext@@QAAKXZ|
  00964	e50b006c	 str         r0, [r11, #-0x6C]
  00968	e51b306c	 ldr         r3, [r11, #-0x6C]
  0096c	e50b3128	 str         r3, [r11, #-0x128]

; 385  :             LONG dwGain = dwParam1 & 0xffff;

  00970	e51b216c	 ldr         r2, [r11, #-0x16C]
  00974	e3a03cff	 mov         r3, #0xFF, 24
  00978	e38330ff	 orr         r3, r3, #0xFF
  0097c	e0023003	 and         r3, r2, r3
  00980	e50b3124	 str         r3, [r11, #-0x124]

; 386  :             LONG ulRight = (dwParam1>>16);

  00984	e51b316c	 ldr         r3, [r11, #-0x16C]
  00988	e1a03823	 mov         r3, r3, lsr #16
  0098c	e50b3120	 str         r3, [r11, #-0x120]

; 387  : 
; 388  :             // Left and rights volume are the same.
; 389  :             if (ulRight>dwGain)

  00990	e51b2120	 ldr         r2, [r11, #-0x120]
  00994	e51b3124	 ldr         r3, [r11, #-0x124]
  00998	e1520003	 cmp         r2, r3
  0099c	da000005	 ble         |$LN20@HandleWave|

; 390  :             {
; 391  :                 dwGain = (ulRight<<16) + ulRight;

  009a0	e51b3120	 ldr         r3, [r11, #-0x120]
  009a4	e1a02803	 mov         r2, r3, lsl #16
  009a8	e51b3120	 ldr         r3, [r11, #-0x120]
  009ac	e0823003	 add         r3, r2, r3
  009b0	e50b3124	 str         r3, [r11, #-0x124]

; 392  :             }
; 393  :             else

  009b4	ea000004	 b           |$LN19@HandleWave|
  009b8		 |$LN20@HandleWave|

; 394  :             {
; 395  :                 dwGain = (dwGain<<16) + dwGain;

  009b8	e51b3124	 ldr         r3, [r11, #-0x124]
  009bc	e1a02803	 mov         r2, r3, lsl #16
  009c0	e51b3124	 ldr         r3, [r11, #-0x124]
  009c4	e0823003	 add         r3, r2, r3
  009c8	e50b3124	 str         r3, [r11, #-0x124]
  009cc		 |$LN19@HandleWave|

; 396  :             }
; 397  : 
; 398  :             if (pStreamContext)

  009cc	e51b3158	 ldr         r3, [r11, #-0x158]
  009d0	e3530000	 cmp         r3, #0
  009d4	0a000012	 beq         |$LN18@HandleWave|

; 399  :             {
; 400  :                 dwRet = pStreamContext->SetGain(dwGain);

  009d8	e51b1124	 ldr         r1, [r11, #-0x124]
  009dc	e51b0158	 ldr         r0, [r11, #-0x158]
  009e0	eb000000	 bl          |?SetGain@StreamContext@@QAAKK@Z|
  009e4	e50b0068	 str         r0, [r11, #-0x68]
  009e8	e51b3068	 ldr         r3, [r11, #-0x68]
  009ec	e50b3170	 str         r3, [r11, #-0x170]

; 401  :                 DEBUGMSG(ZONE_WODM, (TEXT("WODM_SETVOLUME, stream=0x%x\r\n"),dwGain));

  009f0	e59f33f0	 ldr         r3, [pc, #0x3F0]
  009f4	e5933440	 ldr         r3, [r3, #0x440]
  009f8	e3130010	 tst         r3, #0x10
  009fc	0a000005	 beq         |$LN66@HandleWave|
  00a00	e51b1124	 ldr         r1, [r11, #-0x124]
  00a04	e59f03f4	 ldr         r0, [pc, #0x3F4]
  00a08	eb000000	 bl          NKDbgPrintfW
  00a0c	e3a03001	 mov         r3, #1
  00a10	e50b3064	 str         r3, [r11, #-0x64]
  00a14	ea000001	 b           |$LN67@HandleWave|
  00a18		 |$LN66@HandleWave|
  00a18	e3a03000	 mov         r3, #0
  00a1c	e50b3064	 str         r3, [r11, #-0x64]
  00a20		 |$LN67@HandleWave|

; 402  :             }
; 403  :             else

  00a20	ea000018	 b           |$LN17@HandleWave|
  00a24		 |$LN18@HandleWave|

; 404  :             {
; 405  :                 DeviceContext *pDeviceContext = g_pHWContext->GetOutputDeviceContext(uDeviceId);

  00a24	e51b1168	 ldr         r1, [r11, #-0x168]
  00a28	e59f33a4	 ldr         r3, [pc, #0x3A4]
  00a2c	e5930000	 ldr         r0, [r3]
  00a30	eb000000	 bl          |?GetOutputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z|
  00a34	e50b0060	 str         r0, [r11, #-0x60]
  00a38	e51b3060	 ldr         r3, [r11, #-0x60]
  00a3c	e50b311c	 str         r3, [r11, #-0x11C]

; 406  :                 dwRet = pDeviceContext->SetGain(dwGain);

  00a40	e51b1124	 ldr         r1, [r11, #-0x124]
  00a44	e51b011c	 ldr         r0, [r11, #-0x11C]
  00a48	eb000000	 bl          |?SetGain@DeviceContext@@QAAKK@Z|
  00a4c	e50b005c	 str         r0, [r11, #-0x5C]
  00a50	e51b305c	 ldr         r3, [r11, #-0x5C]
  00a54	e50b3170	 str         r3, [r11, #-0x170]

; 407  :                 DEBUGMSG(ZONE_WODM, (TEXT("WODM_SETVOLUME, device=0x%x\r\n"),dwGain));

  00a58	e59f3388	 ldr         r3, [pc, #0x388]
  00a5c	e5933440	 ldr         r3, [r3, #0x440]
  00a60	e3130010	 tst         r3, #0x10
  00a64	0a000005	 beq         |$LN68@HandleWave|
  00a68	e51b1124	 ldr         r1, [r11, #-0x124]
  00a6c	e59f0388	 ldr         r0, [pc, #0x388]
  00a70	eb000000	 bl          NKDbgPrintfW
  00a74	e3a03001	 mov         r3, #1
  00a78	e50b3058	 str         r3, [r11, #-0x58]
  00a7c	ea000001	 b           |$LN69@HandleWave|
  00a80		 |$LN68@HandleWave|
  00a80	e3a03000	 mov         r3, #0
  00a84	e50b3058	 str         r3, [r11, #-0x58]
  00a88		 |$LN69@HandleWave|
  00a88		 |$LN17@HandleWave|

; 408  :             }
; 409  :             break;

  00a88	ea0000a0	 b           |$LN45@HandleWave|
  00a8c		 |$LN16@HandleWave|

; 410  :         }
; 411  : 
; 412  :     case WODM_BREAKLOOP:
; 413  :         {
; 414  :             dwRet = pStreamContext->BreakLoop();

  00a8c	e51b0158	 ldr         r0, [r11, #-0x158]
  00a90	eb000000	 bl          |?BreakLoop@StreamContext@@QAAKXZ|
  00a94	e50b0054	 str         r0, [r11, #-0x54]
  00a98	e51b3054	 ldr         r3, [r11, #-0x54]
  00a9c	e50b3170	 str         r3, [r11, #-0x170]

; 415  :             break;

  00aa0	ea00009a	 b           |$LN45@HandleWave|
  00aa4		 |$LN15@HandleWave|

; 416  :         }
; 417  : 
; 418  :     case WODM_SETPLAYBACKRATE:
; 419  :         {
; 420  :             WaveStreamContext *pWaveStream = (WaveStreamContext *)dwUser;

  00aa4	e51b3160	 ldr         r3, [r11, #-0x160]
  00aa8	e50b3118	 str         r3, [r11, #-0x118]

; 421  :             dwRet = pWaveStream->SetRate(dwParam1);

  00aac	e51b116c	 ldr         r1, [r11, #-0x16C]
  00ab0	e51b3118	 ldr         r3, [r11, #-0x118]
  00ab4	e5933000	 ldr         r3, [r3]
  00ab8	e2833034	 add         r3, r3, #0x34
  00abc	e51b0118	 ldr         r0, [r11, #-0x118]
  00ac0	e5933000	 ldr         r3, [r3]
  00ac4	e1a0e00f	 mov         lr, pc
  00ac8	e12fff13	 bx          r3
  00acc	e50b0050	 str         r0, [r11, #-0x50]
  00ad0	e51b3050	 ldr         r3, [r11, #-0x50]
  00ad4	e50b3170	 str         r3, [r11, #-0x170]

; 422  :             break;

  00ad8	ea00008c	 b           |$LN45@HandleWave|
  00adc		 |$LN14@HandleWave|

; 423  :         }
; 424  : 
; 425  :     case WODM_GETPLAYBACKRATE:
; 426  :         {
; 427  :             WaveStreamContext *pWaveStream = (WaveStreamContext *)dwUser;

  00adc	e51b3160	 ldr         r3, [r11, #-0x160]
  00ae0	e50b3114	 str         r3, [r11, #-0x114]

; 428  :             dwRet = pWaveStream->GetRate((DWORD *)dwParam1);

  00ae4	e51b116c	 ldr         r1, [r11, #-0x16C]
  00ae8	e51b0114	 ldr         r0, [r11, #-0x114]
  00aec	eb000000	 bl          |?GetRate@WaveStreamContext@@QAAKPAK@Z|
  00af0	e50b004c	 str         r0, [r11, #-0x4C]
  00af4	e51b304c	 ldr         r3, [r11, #-0x4C]
  00af8	e50b3170	 str         r3, [r11, #-0x170]

; 429  :             break;

  00afc	ea000083	 b           |$LN45@HandleWave|
  00b00		 |$LN13@HandleWave|

; 430  :         }
; 431  : 
; 432  :     case MM_WOM_SETSECONDARYGAINCLASS:
; 433  :         {
; 434  :             DEBUGMSG(ZONE_WODM, (TEXT("WAVE: MM_WOM_SETSECONDARYGAINCLASS \r\n")));

  00b00	e59f32e0	 ldr         r3, [pc, #0x2E0]
  00b04	e5933440	 ldr         r3, [r3, #0x440]
  00b08	e3130010	 tst         r3, #0x10
  00b0c	0a000004	 beq         |$LN70@HandleWave|
  00b10	e59f02e0	 ldr         r0, [pc, #0x2E0]
  00b14	eb000000	 bl          NKDbgPrintfW
  00b18	e3a03001	 mov         r3, #1
  00b1c	e50b3048	 str         r3, [r11, #-0x48]
  00b20	ea000001	 b           |$LN71@HandleWave|
  00b24		 |$LN70@HandleWave|
  00b24	e3a03000	 mov         r3, #0
  00b28	e50b3048	 str         r3, [r11, #-0x48]
  00b2c		 |$LN71@HandleWave|

; 435  : 
; 436  :             dwRet = pStreamContext->SetSecondaryGainClass(dwParam1);

  00b2c	e51b116c	 ldr         r1, [r11, #-0x16C]
  00b30	e51b0158	 ldr         r0, [r11, #-0x158]
  00b34	eb000000	 bl          |?SetSecondaryGainClass@StreamContext@@QAAKK@Z|
  00b38	e50b0044	 str         r0, [r11, #-0x44]
  00b3c	e51b3044	 ldr         r3, [r11, #-0x44]
  00b40	e50b3170	 str         r3, [r11, #-0x170]

; 437  :             break;

  00b44	ea000071	 b           |$LN45@HandleWave|
  00b48		 |$LN12@HandleWave|

; 438  :         }
; 439  : 
; 440  :     case MM_WOM_SETSECONDARYGAINLIMIT:
; 441  :         {
; 442  :             DeviceContext *pDeviceContext;
; 443  :             DEBUGMSG(ZONE_WODM, (TEXT("WAVE: MM_WOM_SETSECONDARYGAINLIMIT \r\n")));

  00b48	e59f3298	 ldr         r3, [pc, #0x298]
  00b4c	e5933440	 ldr         r3, [r3, #0x440]
  00b50	e3130010	 tst         r3, #0x10
  00b54	0a000004	 beq         |$LN72@HandleWave|
  00b58	e59f0294	 ldr         r0, [pc, #0x294]
  00b5c	eb000000	 bl          NKDbgPrintfW
  00b60	e3a03001	 mov         r3, #1
  00b64	e50b3040	 str         r3, [r11, #-0x40]
  00b68	ea000001	 b           |$LN73@HandleWave|
  00b6c		 |$LN72@HandleWave|
  00b6c	e3a03000	 mov         r3, #0
  00b70	e50b3040	 str         r3, [r11, #-0x40]
  00b74		 |$LN73@HandleWave|

; 444  : 
; 445  :             if (pStreamContext)

  00b74	e51b3158	 ldr         r3, [r11, #-0x158]
  00b78	e3530000	 cmp         r3, #0
  00b7c	0a000005	 beq         |$LN11@HandleWave|

; 446  :             {
; 447  :                 pDeviceContext = pStreamContext->GetDeviceContext();

  00b80	e51b0158	 ldr         r0, [r11, #-0x158]
  00b84	eb000000	 bl          |?GetDeviceContext@StreamContext@@QAAPAVDeviceContext@@XZ|
  00b88	e50b003c	 str         r0, [r11, #-0x3C]
  00b8c	e51b303c	 ldr         r3, [r11, #-0x3C]
  00b90	e50b3110	 str         r3, [r11, #-0x110]

; 448  :             }
; 449  :             else

  00b94	ea000006	 b           |$LN10@HandleWave|
  00b98		 |$LN11@HandleWave|

; 450  :             {
; 451  :                 pDeviceContext = g_pHWContext->GetOutputDeviceContext(uDeviceId);

  00b98	e51b1168	 ldr         r1, [r11, #-0x168]
  00b9c	e59f3230	 ldr         r3, [pc, #0x230]
  00ba0	e5930000	 ldr         r0, [r3]
  00ba4	eb000000	 bl          |?GetOutputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z|
  00ba8	e50b0038	 str         r0, [r11, #-0x38]
  00bac	e51b3038	 ldr         r3, [r11, #-0x38]
  00bb0	e50b3110	 str         r3, [r11, #-0x110]
  00bb4		 |$LN10@HandleWave|

; 452  :             }
; 453  :             dwRet = pDeviceContext->SetSecondaryGainLimit(dwParam1,dwParam2);

  00bb4	e51b2164	 ldr         r2, [r11, #-0x164]
  00bb8	e51b116c	 ldr         r1, [r11, #-0x16C]
  00bbc	e51b0110	 ldr         r0, [r11, #-0x110]
  00bc0	eb000000	 bl          |?SetSecondaryGainLimit@DeviceContext@@QAAKKK@Z|
  00bc4	e50b0034	 str         r0, [r11, #-0x34]
  00bc8	e51b3034	 ldr         r3, [r11, #-0x34]
  00bcc	e50b3170	 str         r3, [r11, #-0x170]

; 454  :             break;

  00bd0	ea00004e	 b           |$LN45@HandleWave|
  00bd4		 |$LN9@HandleWave|

; 455  :         }
; 456  : 
; 457  :     case MM_WOM_FORCESPEAKER:
; 458  :         {
; 459  :             DEBUGMSG(ZONE_WODM, (TEXT("WAVE: MM_WOM_FORCESPEAKER \r\n")));

  00bd4	e59f320c	 ldr         r3, [pc, #0x20C]
  00bd8	e5933440	 ldr         r3, [r3, #0x440]
  00bdc	e3130010	 tst         r3, #0x10
  00be0	0a000004	 beq         |$LN74@HandleWave|
  00be4	e59f0204	 ldr         r0, [pc, #0x204]
  00be8	eb000000	 bl          NKDbgPrintfW
  00bec	e3a03001	 mov         r3, #1
  00bf0	e50b3030	 str         r3, [r11, #-0x30]
  00bf4	ea000001	 b           |$LN75@HandleWave|
  00bf8		 |$LN74@HandleWave|
  00bf8	e3a03000	 mov         r3, #0
  00bfc	e50b3030	 str         r3, [r11, #-0x30]
  00c00		 |$LN75@HandleWave|

; 460  :             if (pStreamContext)

  00c00	e51b3158	 ldr         r3, [r11, #-0x158]
  00c04	e3530000	 cmp         r3, #0
  00c08	0a000006	 beq         |$LN8@HandleWave|

; 461  :             {
; 462  :                 dwRet = pStreamContext->ForceSpeaker((BOOL)dwParam1);

  00c0c	e51b116c	 ldr         r1, [r11, #-0x16C]
  00c10	e51b0158	 ldr         r0, [r11, #-0x158]
  00c14	eb000000	 bl          |?ForceSpeaker@StreamContext@@QAAKH@Z|
  00c18	e50b002c	 str         r0, [r11, #-0x2C]
  00c1c	e51b302c	 ldr         r3, [r11, #-0x2C]
  00c20	e50b3170	 str         r3, [r11, #-0x170]

; 463  :             }
; 464  :             else

  00c24	ea000006	 b           |$LN7@HandleWave|
  00c28		 |$LN8@HandleWave|

; 465  :             {
; 466  :                 dwRet = g_pHWContext->ForceSpeaker((BOOL)dwParam1);

  00c28	e51b116c	 ldr         r1, [r11, #-0x16C]
  00c2c	e59f31a0	 ldr         r3, [pc, #0x1A0]
  00c30	e5930000	 ldr         r0, [r3]
  00c34	eb000000	 bl          |?ForceSpeaker@HardwareContext@@QAAKH@Z|
  00c38	e50b0028	 str         r0, [r11, #-0x28]
  00c3c	e51b3028	 ldr         r3, [r11, #-0x28]
  00c40	e50b3170	 str         r3, [r11, #-0x170]
  00c44		 |$LN7@HandleWave|

; 467  :             }
; 468  :             break;

  00c44	ea000031	 b           |$LN45@HandleWave|
  00c48		 |$LN6@HandleWave|

; 469  :         }
; 470  : 
; 471  :     case MM_MOM_MIDIMESSAGE:
; 472  :         {
; 473  :             DEBUGMSG(ZONE_WODM, (TEXT("WAVE: MM_MOM_MIDIMESSAGE \r\n")));

  00c48	e59f3198	 ldr         r3, [pc, #0x198]
  00c4c	e5933440	 ldr         r3, [r3, #0x440]
  00c50	e3130010	 tst         r3, #0x10
  00c54	0a000004	 beq         |$LN76@HandleWave|
  00c58	e59f018c	 ldr         r0, [pc, #0x18C]
  00c5c	eb000000	 bl          NKDbgPrintfW
  00c60	e3a03001	 mov         r3, #1
  00c64	e50b3024	 str         r3, [r11, #-0x24]
  00c68	ea000001	 b           |$LN77@HandleWave|
  00c6c		 |$LN76@HandleWave|
  00c6c	e3a03000	 mov         r3, #0
  00c70	e50b3024	 str         r3, [r11, #-0x24]
  00c74		 |$LN77@HandleWave|

; 474  :             CMidiStream *pMidiStream = (CMidiStream *)dwUser;

  00c74	e51b3160	 ldr         r3, [r11, #-0x160]
  00c78	e50b310c	 str         r3, [r11, #-0x10C]

; 475  :             dwRet = pMidiStream->MidiMessage(dwParam1);

  00c7c	e51b116c	 ldr         r1, [r11, #-0x16C]
  00c80	e51b010c	 ldr         r0, [r11, #-0x10C]
  00c84	eb000000	 bl          |?MidiMessage@CMidiStream@@QAAKI@Z|
  00c88	e50b0020	 str         r0, [r11, #-0x20]
  00c8c	e51b3020	 ldr         r3, [r11, #-0x20]
  00c90	e50b3170	 str         r3, [r11, #-0x170]

; 476  :             break;

  00c94	ea00001d	 b           |$LN45@HandleWave|
  00c98		 |$LN5@HandleWave|

; 477  :         }
; 478  : 
; 479  :     case WODM_BT_SCO_AUDIO_CONTROL:
; 480  :         {
; 481  :             DEBUGMSG(ZONE_WODM,(TEXT("WODM_BT_SCO_AUDIO_CONTROL\r\n")));

  00c98	e59f3148	 ldr         r3, [pc, #0x148]
  00c9c	e5933440	 ldr         r3, [r3, #0x440]
  00ca0	e3130010	 tst         r3, #0x10
  00ca4	0a000004	 beq         |$LN78@HandleWave|
  00ca8	e59f0134	 ldr         r0, [pc, #0x134]
  00cac	eb000000	 bl          NKDbgPrintfW
  00cb0	e3a03001	 mov         r3, #1
  00cb4	e50b301c	 str         r3, [r11, #-0x1C]
  00cb8	ea000001	 b           |$LN79@HandleWave|
  00cbc		 |$LN78@HandleWave|
  00cbc	e3a03000	 mov         r3, #0
  00cc0	e50b301c	 str         r3, [r11, #-0x1C]
  00cc4		 |$LN79@HandleWave|

; 482  :             if (pParams->dwParam2)

  00cc4	e59b3000	 ldr         r3, [r11]
  00cc8	e2833010	 add         r3, r3, #0x10
  00ccc	e5933000	 ldr         r3, [r3]
  00cd0	e3530000	 cmp         r3, #0
  00cd4	0a000004	 beq         |$LN4@HandleWave|

; 483  :             {
; 484  :                 g_pHWContext->NotifyBtHeadsetOn(BT_AUDIO_SYSTEM|BT_AUDIO_MODEM);

  00cd8	e3a01003	 mov         r1, #3
  00cdc	e59f30f0	 ldr         r3, [pc, #0xF0]
  00ce0	e5930000	 ldr         r0, [r3]
  00ce4	eb000000	 bl          |?NotifyBtHeadsetOn@HardwareContext@@QAAXK@Z|

; 485  :             }
; 486  :             else

  00ce8	ea000003	 b           |$LN3@HandleWave|
  00cec		 |$LN4@HandleWave|

; 487  :             {
; 488  :                 g_pHWContext->NotifyBtHeadsetOn(BT_AUDIO_NONE);

  00cec	e3a01000	 mov         r1, #0
  00cf0	e59f30dc	 ldr         r3, [pc, #0xDC]
  00cf4	e5930000	 ldr         r0, [r3]
  00cf8	eb000000	 bl          |?NotifyBtHeadsetOn@HardwareContext@@QAAXK@Z|
  00cfc		 |$LN3@HandleWave|

; 489  :             }
; 490  :             dwRet = MMSYSERR_NOERROR;

  00cfc	e3a03000	 mov         r3, #0
  00d00	e50b3170	 str         r3, [r11, #-0x170]

; 491  :             break;

  00d04	ea000001	 b           |$LN45@HandleWave|
  00d08		 |$LN2@HandleWave|

; 492  :         }
; 493  : 
; 494  : // unsupported messages
; 495  :     case WODM_GETPITCH:
; 496  :     case WODM_SETPITCH:
; 497  :     case WODM_PREPARE:
; 498  :     case WODM_UNPREPARE:
; 499  :     case WIDM_PREPARE:
; 500  :     case WIDM_UNPREPARE:
; 501  :     default:
; 502  :         dwRet  = MMSYSERR_NOTSUPPORTED;

  00d08	e3a03008	 mov         r3, #8
  00d0c	e50b3170	 str         r3, [r11, #-0x170]
  00d10		 |$LN45@HandleWave|
  00d10		 |$LN93@HandleWave|

; 503  :         break;
; 504  :     }
; 505  : 
; 506  :     }

  00d10	ea00000f	 b           |$LN94@HandleWave|
  00d14		 |$LN89@HandleWave|

; 508  :     {
; 509  :         ERRORMSG(1, (TEXT("Access violation in HandleWaveMessage!!!!\r\n")));

  00d14	e3a02c01	 mov         r2, #1, 24
  00d18	e38220fd	 orr         r2, r2, #0xFD
  00d1c	e59f10bc	 ldr         r1, [pc, #0xBC]
  00d20	e59f00b4	 ldr         r0, [pc, #0xB4]
  00d24	eb000000	 bl          NKDbgPrintfW
  00d28	e59f00a8	 ldr         r0, [pc, #0xA8]
  00d2c	eb000000	 bl          NKDbgPrintfW
  00d30	e3a03001	 mov         r3, #1
  00d34	e50b3010	 str         r3, [r11, #-0x10]
  00d38	ea000001	 b           |$LN86@HandleWave|
  00d3c	e3a03000	 mov         r3, #0
  00d40	e50b3010	 str         r3, [r11, #-0x10]
  00d44		 |$LN86@HandleWave|

; 510  :         SetLastError(E_FAIL);

  00d44	e3a00116	 mov         r0, #0x16, 2
  00d48	e3800901	 orr         r0, r0, #1, 18
  00d4c	eb000000	 bl          SetLastError
  00d50	eaffffff	 b           |$LN94@HandleWave|
  00d54		 |$LN94@HandleWave|

; 511  :     }
; 512  : 
; 513  :     g_pHWContext->Unlock();

  00d54	e59f3078	 ldr         r3, [pc, #0x78]
  00d58	e5930000	 ldr         r0, [r3]
  00d5c	eb000000	 bl          |?Unlock@HardwareContext@@QAAXXZ|

; 514  : 
; 515  :     // Pass the return code back via pBufOut
; 516  :     if (pdwResult)

  00d60	e59b3004	 ldr         r3, [r11, #4]
  00d64	e3530000	 cmp         r3, #0
  00d68	0a000002	 beq         |$LN1@HandleWave|

; 517  :     {
; 518  :         *pdwResult = dwRet;

  00d6c	e51b2170	 ldr         r2, [r11, #-0x170]
  00d70	e59b3004	 ldr         r3, [r11, #4]
  00d74	e5832000	 str         r2, [r3]
  00d78		 |$LN1@HandleWave|

; 519  :     }
; 520  : 
; 521  :     return TRUE;

  00d78	e3a03001	 mov         r3, #1
  00d7c	e50b3104	 str         r3, [r11, #-0x104]
  00d80		 |$LN87@HandleWave|

; 522  : }

  00d80	e51b0104	 ldr         r0, [r11, #-0x104]
  00d84	e24bd00c	 sub         sp, r11, #0xC
  00d88	e89d6800	 ldmia       sp, {r11, sp, lr}
  00d8c	e12fff1e	 bx          lr

			 ENDP  ; |?HandleWaveMessage@@YAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z|, HandleWaveMessage

  00d90		 |$LN88@HandleWave|
  00d90		 |$LN97@HandleWave|

; 507  :     _except (GetExceptionCode() == STATUS_ACCESS_VIOLATION ? EXCEPTION_EXECUTE_HANDLER : EXCEPTION_CONTINUE_SEARCH)

  00d90	e52de004	 str         lr, [sp, #-4]!
  00d94	e24bb008	 sub         r11, r11, #8
  00d98		 |$LN91@HandleWave|
  00d98		 |$LN134@HandleWave|
  00d98	e50b0108	 str         r0, [r11, #-0x108]
  00d9c	e51b3108	 ldr         r3, [r11, #-0x108]
  00da0	e5933000	 ldr         r3, [r3]
  00da4	e5933000	 ldr         r3, [r3]
  00da8	e50b3018	 str         r3, [r11, #-0x18]
  00dac	e51b3018	 ldr         r3, [r11, #-0x18]
  00db0	e3530117	 cmp         r3, #0x17, 2
  00db4	1a000002	 bne         |$LN83@HandleWave|
  00db8	e3a03001	 mov         r3, #1
  00dbc	e50b3014	 str         r3, [r11, #-0x14]
  00dc0	ea000001	 b           |$LN84@HandleWave|
  00dc4		 |$LN83@HandleWave|
  00dc4	e3a03000	 mov         r3, #0
  00dc8	e50b3014	 str         r3, [r11, #-0x14]
  00dcc		 |$LN84@HandleWave|
  00dcc	e51b0014	 ldr         r0, [r11, #-0x14]
  00dd0		 |$LN90@HandleWave|
  00dd0	e49df004	 ldr         pc, [sp], #4
  00dd4		 |$LN136@HandleWave|
  00dd4		 |$LN137@HandleWave|
  00dd4	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  00dd8		 |$LN138@HandleWave|
  00dd8	00000000	 DCD         |??_C@_1FI@PLNLJNDI@?$AAA?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAv?$AAi?$AAo?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAW?$AAa?$AAv?$AAe?$AAM?$AAe@|
  00ddc		 |$LN139@HandleWave|
  00ddc	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  00de0		 |$LN140@HandleWave|
  00de0	00000000	 DCD         |??_C@_1JE@OMJBAMM@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  00de4		 |$LN141@HandleWave|
  00de4	00000000	 DCD         |??_C@_1DI@BBHMOGMF@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAB?$AAT?$AA_?$AAS?$AAC?$AAO?$AA_?$AAA?$AAU?$AAD?$AAI?$AAO?$AA_?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA?$AN?$AA?6?$AA?$AA@|
  00de8		 |$LN142@HandleWave|
  00de8	00000000	 DCD         |dpCurSettings|
  00dec		 |$LN143@HandleWave|
  00dec	00000000	 DCD         |??_C@_1DI@KCAKHJBN@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAM?$AAM?$AA_?$AAM?$AAO?$AAM?$AA_?$AAM?$AAI?$AAD?$AAI?$AAM?$AAE?$AAS?$AAS?$AAA?$AAG?$AAE?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  00df0		 |$LN144@HandleWave|
  00df0	00000000	 DCD         |??_C@_1DK@GOOPIKCN@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAM?$AAM?$AA_?$AAW?$AAO?$AAM?$AA_?$AAF?$AAO?$AAR?$AAC?$AAE?$AAS?$AAP?$AAE?$AAA?$AAK?$AAE?$AAR?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  00df4		 |$LN145@HandleWave|
  00df4	00000000	 DCD         |??_C@_1EM@PKODCDCB@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAM?$AAM?$AA_?$AAW?$AAO?$AAM?$AA_?$AAS?$AAE?$AAT?$AAS?$AAE?$AAC?$AAO?$AAN?$AAD?$AAA?$AAR?$AAY?$AAG?$AAA?$AAI?$AAN?$AAL?$AAI?$AAM@|
  00df8		 |$LN146@HandleWave|
  00df8	00000000	 DCD         |??_C@_1EM@FIMDNFJG@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAM?$AAM?$AA_?$AAW?$AAO?$AAM?$AA_?$AAS?$AAE?$AAT?$AAS?$AAE?$AAC?$AAO?$AAN?$AAD?$AAA?$AAR?$AAY?$AAG?$AAA?$AAI?$AAN?$AAC?$AAL?$AAA@|
  00dfc		 |$LN147@HandleWave|
  00dfc	00000000	 DCD         |??_C@_1DM@LGFAHNBC@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAS?$AAE?$AAT?$AAV?$AAO?$AAL?$AAU?$AAM?$AAE?$AA?0?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00e00		 |$LN148@HandleWave|
  00e00	00000000	 DCD         |??_C@_1DM@LFDCFBKB@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAS?$AAE?$AAT?$AAV?$AAO?$AAL?$AAU?$AAM?$AAE?$AA?0?$AA?5?$AAs?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00e04		 |$LN149@HandleWave|
  00e04	00000000	 DCD         |??_C@_1FC@CHDBMOCJ@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAW?$AAR?$AAI?$AAT?$AAE?$AA?1?$AAW?$AAI?$AAD?$AAM?$AA_?$AAA?$AAD?$AAD?$AAB?$AAU?$AAF?$AAF?$AAE?$AAR?$AA?0?$AA?5?$AAB?$AAu?$AAf?$AAf?$AAe@|
  00e08		 |$LN150@HandleWave|
  00e08	00000000	 DCD         |??_C@_1DA@JENGGEIC@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA?1?$AAW?$AAI?$AAD?$AAM?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@|
  00e0c		 |$LN151@HandleWave|
  00e0c	00000000	 DCD         |??_C@_1DE@ENODMAIG@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAG?$AAE?$AAT?$AAP?$AAO?$AAS?$AA?1?$AAW?$AAI?$AAD?$AAM?$AA_?$AAG?$AAE?$AAT?$AAP?$AAO?$AAS?$AA?$AN?$AA?6?$AA?$AA@|
  00e10		 |$LN152@HandleWave|
  00e10	00000000	 DCD         |??_C@_1CO@GEFNJAAK@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAP?$AAA?$AAU?$AAS?$AAE?$AA?1?$AAW?$AAI?$AAD?$AAM?$AA_?$AAS?$AAT?$AAO?$AAP?$AA?$AN?$AA?6?$AA?$AA@|
  00e14		 |$LN153@HandleWave|
  00e14	00000000	 DCD         |??_C@_1DE@OILDFNMB@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAR?$AAE?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?1?$AAW?$AAI?$AAD?$AAM?$AA_?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?$AN?$AA?6?$AA?$AA@|
  00e18		 |$LN154@HandleWave|
  00e18	00000000	 DCD         |??_C@_1DA@HCJEGLD@?$AAW?$AAI?$AAD?$AAM?$AA_?$AAC?$AAL?$AAO?$AAS?$AAE?$AA?1?$AAW?$AAO?$AAD?$AAM?$AA_?$AAC?$AAL?$AAO?$AAS?$AAE?$AA?$AN?$AA?6?$AA?$AA@|
  00e1c		 |$LN155@HandleWave|
  00e1c	00000000	 DCD         |??_C@_1BI@JIMFELDH@?$AAW?$AAI?$AAD?$AAM?$AA_?$AAO?$AAP?$AAE?$AAN?$AA?$AN?$AA?6?$AA?$AA@|
  00e20		 |$LN156@HandleWave|
  00e20	00000000	 DCD         |??_C@_1BI@OKDEBBLH@?$AAW?$AAO?$AAD?$AAM?$AA_?$AAO?$AAP?$AAE?$AAN?$AA?$AN?$AA?6?$AA?$AA@|
  00e24		 |$LN135@HandleWave|
  00e24		 |$LN99@HandleWave|
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\devctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T37731| DCD	|$LN5@GetGain|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetGain@DeviceContext@@QAAKXZ| PROC	; DeviceContext::GetGain

; 56   :     {

  00000		 |$LN5@GetGain|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37728|

; 57   :         return m_dwGain;

  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e283300c	 add         r3, r3, #0xC
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]

; 58   :     }

  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M37729|

			 ENDP  ; |?GetGain@DeviceContext@@QAAKXZ|, DeviceContext::GetGain

	IMPORT	|?RecalcAllGains@DeviceContext@@QAAXXZ|	; DeviceContext::RecalcAllGains

  00000			 AREA	 |.pdata|, PDATA
|$T37739| DCD	|$LN5@SetGain|
	DCD	0x40001004
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetGain@DeviceContext@@QAAKK@Z| PROC	; DeviceContext::SetGain

; 61   :     {

  00000		 |$LN5@SetGain|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37736|

; 62   :         m_dwGain = dwGain;

  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e283200c	 add         r2, r3, #0xC
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e5823000	 str         r3, [r2]

; 63   :         RecalcAllGains();

  00020	e59d000c	 ldr         r0, [sp, #0xC]
  00024	eb000000	 bl          |?RecalcAllGains@DeviceContext@@QAAXXZ|

; 64   :         return MMSYSERR_NOERROR;

  00028	e3a03000	 mov         r3, #0
  0002c	e58d3000	 str         r3, [sp]

; 65   :     }

  00030	e59d0000	 ldr         r0, [sp]
  00034	e28dd004	 add         sp, sp, #4
  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$M37737|

			 ENDP  ; |?SetGain@DeviceContext@@QAAKK@Z|, DeviceContext::SetGain


  00000			 AREA	 |.pdata|, PDATA
|$T37747| DCD	|$LN6@SetSeconda|
	DCD	0x40001a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetSecondaryGainLimit@DeviceContext@@QAAKKK@Z| PROC ; DeviceContext::SetSecondaryGainLimit

; 84   :     {

  00000		 |$LN6@SetSeconda|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37744|

; 85   :         if (GainClass>=SECONDARYGAINCLASSMAX)

  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e3530004	 cmp         r3, #4
  00018	3a000002	 bcc         |$LN1@SetSeconda|

; 86   :         {
; 87   :             return MMSYSERR_ERROR;

  0001c	e3a03001	 mov         r3, #1
  00020	e58d3000	 str         r3, [sp]
  00024	ea00000b	 b           |$LN2@SetSeconda|
  00028		 |$LN1@SetSeconda|

; 88   :         }
; 89   :         m_dwSecondaryGainLimit[GainClass]=Limit;

  00028	e59d300c	 ldr         r3, [sp, #0xC]
  0002c	e2831014	 add         r1, r3, #0x14
  00030	e59d2010	 ldr         r2, [sp, #0x10]
  00034	e3a03004	 mov         r3, #4
  00038	e0030392	 mul         r3, r2, r3
  0003c	e0812003	 add         r2, r1, r3
  00040	e59d3014	 ldr         r3, [sp, #0x14]
  00044	e5823000	 str         r3, [r2]

; 90   :         RecalcAllGains();

  00048	e59d000c	 ldr         r0, [sp, #0xC]
  0004c	eb000000	 bl          |?RecalcAllGains@DeviceContext@@QAAXXZ|

; 91   :         return MMSYSERR_NOERROR;

  00050	e3a03000	 mov         r3, #0
  00054	e58d3000	 str         r3, [sp]
  00058		 |$LN2@SetSeconda|

; 92   :     }

  00058	e59d0000	 ldr         r0, [sp]
  0005c	e28dd004	 add         sp, sp, #4
  00060	e89d6000	 ldmia       sp, {sp, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$M37745|

			 ENDP  ; |?SetSecondaryGainLimit@DeviceContext@@QAAKKK@Z|, DeviceContext::SetSecondaryGainLimit

	IMPORT	|EnterCriticalSection|
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T37754| DCD	|$LN5@Lock|
	DCD	0x40000803
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Lock@HardwareContext@@QAAXXZ| PROC	; HardwareContext::Lock

; 82   :     void Lock()   {EnterCriticalSection(&m_Lock);}

  00000		 |$LN5@Lock|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37751|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2830004	 add         r0, r3, #4
  00014	eb000000	 bl          EnterCriticalSection
  00018	e89d6000	 ldmia       sp, {sp, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$M37752|

			 ENDP  ; |?Lock@HardwareContext@@QAAXXZ|, HardwareContext::Lock

	IMPORT	|LeaveCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37761| DCD	|$LN5@Unlock|
	DCD	0x40000803
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Unlock@HardwareContext@@QAAXXZ| PROC	; HardwareContext::Unlock

; 83   :     void Unlock() {LeaveCriticalSection(&m_Lock);}

  00000		 |$LN5@Unlock|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37758|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2830004	 add         r0, r3, #4
  00014	eb000000	 bl          LeaveCriticalSection
  00018	e89d6000	 ldmia       sp, {sp, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$M37759|

			 ENDP  ; |?Unlock@HardwareContext@@QAAXXZ|, HardwareContext::Unlock


  00000			 AREA	 |.pdata|, PDATA
|$T37769| DCD	|$LN5@GetNumInpu|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetNumInputDevices@HardwareContext@@QAAKXZ| PROC ; HardwareContext::GetNumInputDevices

; 85   :     DWORD GetNumInputDevices()  {return 1;}

  00000		 |$LN5@GetNumInpu|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37766|
  00010	e3a03001	 mov         r3, #1
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M37767|

			 ENDP  ; |?GetNumInputDevices@HardwareContext@@QAAKXZ|, HardwareContext::GetNumInputDevices


  00000			 AREA	 |.pdata|, PDATA
|$T37777| DCD	|$LN5@GetNumOutp|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetNumOutputDevices@HardwareContext@@QAAKXZ| PROC ; HardwareContext::GetNumOutputDevices

; 86   :     DWORD GetNumOutputDevices() {return 1;}

  00000		 |$LN5@GetNumOutp|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37774|
  00010	e3a03001	 mov         r3, #1
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M37775|

			 ENDP  ; |?GetNumOutputDevices@HardwareContext@@QAAKXZ|, HardwareContext::GetNumOutputDevices


  00000			 AREA	 |.pdata|, PDATA
|$T37785| DCD	|$LN5@GetInputDe|
	DCD	0x40000b04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetInputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z| PROC ; HardwareContext::GetInputDeviceContext

; 89   :     {

  00000		 |$LN5@GetInputDe|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37782|

; 90   :         return &m_InputDeviceContext;

  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833070	 add         r3, r3, #0x70
  00018	e58d3000	 str         r3, [sp]

; 91   :     }

  0001c	e59d0000	 ldr         r0, [sp]
  00020	e28dd004	 add         sp, sp, #4
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M37783|

			 ENDP  ; |?GetInputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z|, HardwareContext::GetInputDeviceContext


  00000			 AREA	 |.pdata|, PDATA
|$T37793| DCD	|$LN5@GetOutputD|
	DCD	0x40000b04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetOutputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z| PROC ; HardwareContext::GetOutputDeviceContext

; 94   :     {

  00000		 |$LN5@GetOutputD|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37790|

; 95   :         return &m_OutputDeviceContext;

  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833094	 add         r3, r3, #0x94
  00018	e58d3000	 str         r3, [sp]

; 96   :     }

  0001c	e59d0000	 ldr         r0, [sp]
  00020	e28dd004	 add         sp, sp, #4
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M37791|

			 ENDP  ; |?GetOutputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z|, HardwareContext::GetOutputDeviceContext

; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\strmctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T37801| DCD	|$LN5@GetDeviceC|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDeviceContext@StreamContext@@QAAPAVDeviceContext@@XZ| PROC ; StreamContext::GetDeviceContext

; 94   :     DeviceContext *GetDeviceContext() { return m_pDeviceContext; }

  00000		 |$LN5@GetDeviceC|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37798|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833050	 add         r3, r3, #0x50
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M37799|

			 ENDP  ; |?GetDeviceContext@StreamContext@@QAAPAVDeviceContext@@XZ|, StreamContext::GetDeviceContext


  00000			 AREA	 |.pdata|, PDATA
|$T37809| DCD	|$LN5@GetGain@2|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetGain@StreamContext@@QAAKXZ| PROC	; StreamContext::GetGain

; 130  :     {

  00000		 |$LN5@GetGain@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37806|

; 131  :         return m_dwGain;

  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833058	 add         r3, r3, #0x58
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]

; 132  :     }

  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M37807|

			 ENDP  ; |?GetGain@StreamContext@@QAAKXZ|, StreamContext::GetGain


  00000			 AREA	 |.pdata|, PDATA
|$T37817| DCD	|$LN5@SetGain@2|
	DCD	0x40001504
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetGain@StreamContext@@QAAKK@Z| PROC	; StreamContext::SetGain

; 135  :     {

  00000		 |$LN5@SetGain@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37814|

; 136  :         m_dwGain = dwGain;

  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2832058	 add         r2, r3, #0x58
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e5823000	 str         r3, [r2]

; 137  :         GainChange();

  00020	e59d300c	 ldr         r3, [sp, #0xC]
  00024	e5933000	 ldr         r3, [r3]
  00028	e2833030	 add         r3, r3, #0x30
  0002c	e59d000c	 ldr         r0, [sp, #0xC]
  00030	e5933000	 ldr         r3, [r3]
  00034	e1a0e00f	 mov         lr, pc
  00038	e12fff13	 bx          r3

; 138  :         return MMSYSERR_NOERROR;

  0003c	e3a03000	 mov         r3, #0
  00040	e58d3000	 str         r3, [sp]

; 139  :     }

  00044	e59d0000	 ldr         r0, [sp]
  00048	e28dd004	 add         sp, sp, #4
  0004c	e89d6000	 ldmia       sp, {sp, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$M37815|

			 ENDP  ; |?SetGain@StreamContext@@QAAKK@Z|, StreamContext::SetGain


  00000			 AREA	 |.pdata|, PDATA
|$T37825| DCD	|$LN6@SetSeconda@2|
	DCD	0x40001b04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetSecondaryGainClass@StreamContext@@QAAKK@Z| PROC ; StreamContext::SetSecondaryGainClass

; 142  :     {

  00000		 |$LN6@SetSeconda@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37822|

; 143  :         if (GainClass>=SECONDARYGAINCLASSMAX)

  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e3530004	 cmp         r3, #4
  00018	3a000002	 bcc         |$LN1@SetSeconda@2|

; 144  :         {
; 145  :             return MMSYSERR_ERROR;

  0001c	e3a03001	 mov         r3, #1
  00020	e58d3000	 str         r3, [sp]
  00024	ea00000c	 b           |$LN2@SetSeconda@2|
  00028		 |$LN1@SetSeconda@2|

; 146  :         }
; 147  :         m_SecondaryGainClass=GainClass;

  00028	e59d300c	 ldr         r3, [sp, #0xC]
  0002c	e283205c	 add         r2, r3, #0x5C
  00030	e59d3010	 ldr         r3, [sp, #0x10]
  00034	e5823000	 str         r3, [r2]

; 148  :         GainChange();

  00038	e59d300c	 ldr         r3, [sp, #0xC]
  0003c	e5933000	 ldr         r3, [r3]
  00040	e2833030	 add         r3, r3, #0x30
  00044	e59d000c	 ldr         r0, [sp, #0xC]
  00048	e5933000	 ldr         r3, [r3]
  0004c	e1a0e00f	 mov         lr, pc
  00050	e12fff13	 bx          r3

; 149  :         return MMSYSERR_NOERROR;

  00054	e3a03000	 mov         r3, #0
  00058	e58d3000	 str         r3, [sp]
  0005c		 |$LN2@SetSeconda@2|

; 150  :     }

  0005c	e59d0000	 ldr         r0, [sp]
  00060	e28dd004	 add         sp, sp, #4
  00064	e89d6000	 ldmia       sp, {sp, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$M37823|

			 ENDP  ; |?SetSecondaryGainClass@StreamContext@@QAAKK@Z|, StreamContext::SetSecondaryGainClass

	EXPORT	|??_C@_1EC@LMGEMPAK@?$AAE?$AAX?$AAC?$AAE?$AAP?$AAT?$AAI?$AAO?$AAN?$AA?5?$AAI?$AAN?$AA?5?$AAW?$AAA?$AAV?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1OG@CCECIOMO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAW?$AAA?$AAV?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAD?$AAD?$AAK?$AA_@| [ DATA ] ; `string'
	EXPORT	|GetCurrentProcessId|
	EXPORT	|?WAV_IOControl@@YAHKKPAEK0KPAK@Z|	; WAV_IOControl
	IMPORT	|GetCallerProcess|
	IMPORT	|?PrepareForVoiceCall@HardwareContext@@QAAHH@Z| ; HardwareContext::PrepareForVoiceCall
	IMPORT	|?ToggleExtSpeaker@HardwareContext@@QAAXXZ| ; HardwareContext::ToggleExtSpeaker
	IMPORT	|?NotifyHeadsetOn@HardwareContext@@QAAXH@Z| ; HardwareContext::NotifyHeadsetOn
	IMPORT	|?SetExtSpeakerPower@HardwareContext@@QAAHH@Z| ; HardwareContext::SetExtSpeakerPower

  00038			 AREA	 |.pdata|, PDATA
|$T37871| DCD	|$LN47@WAV_IOCont|
	DCD	0xc0014a05
|$T37873| DCD	|$LN37@WAV_IOCont|
	DCD	0x40001d03
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\wavemain.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@LMGEMPAK@?$AAE?$AAX?$AAC?$AAE?$AAP?$AAT?$AAI?$AAO?$AAN?$AA?5?$AAI?$AAN?$AA?5?$AAW?$AAA?$AAV?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$AN?$AA?6@| DCB "E"
	DCB	0x0, "X", 0x0, "C", 0x0, "E", 0x0, "P", 0x0, "T", 0x0, "I"
	DCB	0x0, "O", 0x0, "N", 0x0, " ", 0x0, "I", 0x0, "N", 0x0, " "
	DCB	0x0, "W", 0x0, "A", 0x0, "V", 0x0, "_", 0x0, "I", 0x0, "O"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "!", 0x0, "!", 0x0, "!", 0x0, "!", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1OG@CCECIOMO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAW?$AAA?$AAV?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAD?$AAD?$AAK?$AA_@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "W", 0x0, "A", 0x0, "V", 0x0, "_", 0x0, "I", 0x0, "O"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "T", 0x0, "L", 0x0, "_", 0x0, "D", 0x0, "D", 0x0, "K"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D"
	DCB	0x0, "R", 0x0, "I", 0x0, "V", 0x0, "E", 0x0, "R", 0x0, "_"
	DCB	0x0, "I", 0x0, "F", 0x0, "C", 0x0, " ", 0x0, "c", 0x0, "a"
	DCB	0x0, "n", 0x0, " ", 0x0, "b", 0x0, "e", 0x0, " ", 0x0, "c"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "o", 0x0, "n", 0x0, "l", 0x0, "y", 0x0, " ", 0x0, "f"
	DCB	0x0, "r", 0x0, "o", 0x0, "m", 0x0, " ", 0x0, "d", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "p"
	DCB	0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, " ", 0x0, "(", 0x0, "c", 0x0, "a", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "p", 0x0, "r", 0x0, "o"
	DCB	0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, " ", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00014			 AREA	 |.xdata|, DATA
|$T37869| DCD	0x1
	DCD	|$LN41@WAV_IOCont|
	DCD	|$LN42@WAV_IOCont|
	DCD	|$LN37@WAV_IOCont|
	DCD	|$LN38@WAV_IOCont|
; Function compile flags: /Odtp

  00e24			 AREA	 |.text|, CODE, ARM

  00e24	00000000	 DCD         |__C_specific_handler|
  00e28	00000000	 DCD         |$T37869|

  00e2c		 |?WAV_IOControl@@YAHKKPAEK0KPAK@Z| PROC ; WAV_IOControl

; 562  : {

  00e2c		 |$LN47@WAV_IOCont|
  00e2c	e1a0c00d	 mov         r12, sp
  00e30	e92d000f	 stmdb       sp!, {r0 - r3}
  00e34	e92d5810	 stmdb       sp!, {r4, r11, r12, lr}
  00e38	e28db010	 add         r11, sp, #0x10
  00e3c	e24dd090	 sub         sp, sp, #0x90
  00e40		 |$LN45@WAV_IOCont|
  00e40		 |$LN41@WAV_IOCont|

; 563  :     __try
; 564  :     {
; 565  :         switch (dwCode)

  00e40	e59b3004	 ldr         r3, [r11, #4]
  00e44	e50b303c	 str         r3, [r11, #-0x3C]
  00e48	e51b203c	 ldr         r2, [r11, #-0x3C]
  00e4c	e3a037da	 mov         r3, #0xDA, 14
  00e50	e383301c	 orr         r3, r3, #0x1C
  00e54	e1520003	 cmp         r2, r3
  00e58	8a000025	 bhi         |$LN30@WAV_IOCont|
  00e5c	e51b203c	 ldr         r2, [r11, #-0x3C]
  00e60	e3a037da	 mov         r3, #0xDA, 14
  00e64	e383301c	 orr         r3, r3, #0x1C
  00e68	e1520003	 cmp         r2, r3
  00e6c	0a00009d	 beq         |$LN10@WAV_IOCont|
  00e70	e51b203c	 ldr         r2, [r11, #-0x3C]
  00e74	e59f3548	 ldr         r3, [pc, #0x548]
  00e78	e1520003	 cmp         r2, r3
  00e7c	8a000013	 bhi         |$LN31@WAV_IOCont|
  00e80	e51b203c	 ldr         r2, [r11, #-0x3C]
  00e84	e59f3538	 ldr         r3, [pc, #0x538]
  00e88	e1520003	 cmp         r2, r3
  00e8c	0a0000b5	 beq         |$LN6@WAV_IOCont|
  00e90	e51b203c	 ldr         r2, [r11, #-0x3C]
  00e94	e3a0381d	 mov         r3, #0x1D, 16
  00e98	e383300c	 orr         r3, r3, #0xC
  00e9c	e1520003	 cmp         r2, r3
  00ea0	0a000031	 beq         |$LN22@WAV_IOCont|
  00ea4	e51b203c	 ldr         r2, [r11, #-0x3C]
  00ea8	e3a03822	 mov         r3, #0x22, 16
  00eac	e3833b01	 orr         r3, r3, #1, 22
  00eb0	e1520003	 cmp         r2, r3
  00eb4	0a0000c4	 beq         |$LN5@WAV_IOCont|
  00eb8	e51b203c	 ldr         r2, [r11, #-0x3C]
  00ebc	e3a03832	 mov         r3, #0x32, 16
  00ec0	e3833a01	 orr         r3, r3, #1, 20
  00ec4	e1520003	 cmp         r2, r3
  00ec8	0a0000a6	 beq         |$LN6@WAV_IOCont|
  00ecc	ea0000f1	 b           |$LN1@WAV_IOCont|
  00ed0		 |$LN31@WAV_IOCont|
  00ed0	e51b203c	 ldr         r2, [r11, #-0x3C]
  00ed4	e59f34e4	 ldr         r3, [pc, #0x4E4]
  00ed8	e1520003	 cmp         r2, r3
  00edc	0a0000a1	 beq         |$LN6@WAV_IOCont|
  00ee0	e51b203c	 ldr         r2, [r11, #-0x3C]
  00ee4	e59f34d0	 ldr         r3, [pc, #0x4D0]
  00ee8	e1520003	 cmp         r2, r3
  00eec	0a00009d	 beq         |$LN6@WAV_IOCont|
  00ef0	ea0000e8	 b           |$LN1@WAV_IOCont|
  00ef4		 |$LN30@WAV_IOCont|
  00ef4	e51b203c	 ldr         r2, [r11, #-0x3C]
  00ef8	e3a037da	 mov         r3, #0xDA, 14
  00efc	e3833020	 orr         r3, r3, #0x20
  00f00	e0423003	 sub         r3, r2, r3
  00f04	e50b303c	 str         r3, [r11, #-0x3C]
  00f08	e51b303c	 ldr         r3, [r11, #-0x3C]
  00f0c	e3530010	 cmp         r3, #0x10
  00f10	8a0000e0	 bhi         |$LN1@WAV_IOCont|
  00f14	e51b203c	 ldr         r2, [r11, #-0x3C]
  00f18	e1a03102	 mov         r3, r2, lsl #2
  00f1c	e083300f	 add         r3, r3, pc
  00f20	e5933004	 ldr         r3, [r3, #4]
  00f24	e08ff003	 add         pc, pc, r3
  00f28		 |$LN50@WAV_IOCont|
  00f28		 |$LN49@WAV_IOCont|
  00f28		 |$LN51@WAV_IOCont|
  00f28	000001f8	 DCD         0x1f8
  00f2c		 |$LN52@WAV_IOCont|
  00f2c	0000036c	 DCD         0x36c
  00f30		 |$LN53@WAV_IOCont|
  00f30	0000036c	 DCD         0x36c
  00f34		 |$LN54@WAV_IOCont|
  00f34	0000036c	 DCD         0x36c
  00f38		 |$LN55@WAV_IOCont|
  00f38	00000064	 DCD         0x64
  00f3c		 |$LN56@WAV_IOCont|
  00f3c	0000036c	 DCD         0x36c
  00f40		 |$LN57@WAV_IOCont|
  00f40	0000036c	 DCD         0x36c
  00f44		 |$LN58@WAV_IOCont|
  00f44	0000036c	 DCD         0x36c
  00f48		 |$LN59@WAV_IOCont|
  00f48	000000c4	 DCD         0xc4
  00f4c		 |$LN60@WAV_IOCont|
  00f4c	0000036c	 DCD         0x36c
  00f50		 |$LN61@WAV_IOCont|
  00f50	0000036c	 DCD         0x36c
  00f54		 |$LN62@WAV_IOCont|
  00f54	0000036c	 DCD         0x36c
  00f58		 |$LN63@WAV_IOCont|
  00f58	00000184	 DCD         0x184
  00f5c		 |$LN64@WAV_IOCont|
  00f5c	0000036c	 DCD         0x36c
  00f60		 |$LN65@WAV_IOCont|
  00f60	0000036c	 DCD         0x36c
  00f64		 |$LN66@WAV_IOCont|
  00f64	0000036c	 DCD         0x36c
  00f68		 |$LN67@WAV_IOCont|
  00f68	00000124	 DCD         0x124
  00f6c		 |$LN22@WAV_IOCont|

; 566  :         {
; 567  :         case IOCTL_WAV_MESSAGE:
; 568  :             return HandleWaveMessage((PMMDRV_MESSAGE_PARAMS)pBufIn, (DWORD *)pBufOut);

  00f6c	e59b1010	 ldr         r1, [r11, #0x10]
  00f70	e59b0008	 ldr         r0, [r11, #8]
  00f74	eb000000	 bl          |?HandleWaveMessage@@YAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z|
  00f78	e50b0038	 str         r0, [r11, #-0x38]
  00f7c	e51b3038	 ldr         r3, [r11, #-0x38]
  00f80	e50b3090	 str         r3, [r11, #-0x90]
  00f84	e51b3090	 ldr         r3, [r11, #-0x90]
  00f88	e50b3058	 str         r3, [r11, #-0x58]
  00f8c	ea0000ec	 b           |$LN26@WAV_IOCont|
  00f90		 |$LN21@WAV_IOCont|

; 569  : 
; 570  :         case IOCTL_SET_EXTSPEAKER_POWER:
; 571  :             if(dwLenIn<sizeof(BOOL))

  00f90	e59b300c	 ldr         r3, [r11, #0xC]
  00f94	e3530004	 cmp         r3, #4
  00f98	2a000004	 bcs         |$LN20@WAV_IOCont|

; 572  :                 return FALSE;

  00f9c	e3a03000	 mov         r3, #0
  00fa0	e50b308c	 str         r3, [r11, #-0x8C]
  00fa4	e51b308c	 ldr         r3, [r11, #-0x8C]
  00fa8	e50b3058	 str         r3, [r11, #-0x58]
  00fac	ea0000e4	 b           |$LN26@WAV_IOCont|
  00fb0		 |$LN20@WAV_IOCont|

; 573  :             g_pHWContext->SetExtSpeakerPower((BOOL)*(DWORD*)pBufIn);

  00fb0	e59b3008	 ldr         r3, [r11, #8]
  00fb4	e5931000	 ldr         r1, [r3]
  00fb8	e59f33ec	 ldr         r3, [pc, #0x3EC]
  00fbc	e5930000	 ldr         r0, [r3]
  00fc0	eb000000	 bl          |?SetExtSpeakerPower@HardwareContext@@QAAHH@Z|

; 574  :             if(pdwActualOut)

  00fc4	e59b3018	 ldr         r3, [r11, #0x18]
  00fc8	e3530000	 cmp         r3, #0
  00fcc	0a000002	 beq         |$LN19@WAV_IOCont|

; 575  :                 *pdwActualOut = 0;

  00fd0	e59b2018	 ldr         r2, [r11, #0x18]
  00fd4	e3a03000	 mov         r3, #0
  00fd8	e5823000	 str         r3, [r2]
  00fdc		 |$LN19@WAV_IOCont|

; 576  :             return TRUE;

  00fdc	e3a03001	 mov         r3, #1
  00fe0	e50b3088	 str         r3, [r11, #-0x88]
  00fe4	e51b3088	 ldr         r3, [r11, #-0x88]
  00fe8	e50b3058	 str         r3, [r11, #-0x58]
  00fec	ea0000d4	 b           |$LN26@WAV_IOCont|
  00ff0		 |$LN18@WAV_IOCont|

; 577  : 
; 578  :         case IOCTL_NOTIFY_HEADSET:
; 579  :             if(dwLenIn<sizeof(BOOL))

  00ff0	e59b300c	 ldr         r3, [r11, #0xC]
  00ff4	e3530004	 cmp         r3, #4
  00ff8	2a000004	 bcs         |$LN17@WAV_IOCont|

; 580  :                 return FALSE;

  00ffc	e3a03000	 mov         r3, #0
  01000	e50b3084	 str         r3, [r11, #-0x84]
  01004	e51b3084	 ldr         r3, [r11, #-0x84]
  01008	e50b3058	 str         r3, [r11, #-0x58]
  0100c	ea0000cc	 b           |$LN26@WAV_IOCont|
  01010		 |$LN17@WAV_IOCont|

; 581  :             if(pdwActualOut)

  01010	e59b3018	 ldr         r3, [r11, #0x18]
  01014	e3530000	 cmp         r3, #0
  01018	0a000002	 beq         |$LN16@WAV_IOCont|

; 582  :                 *pdwActualOut = 0;

  0101c	e59b2018	 ldr         r2, [r11, #0x18]
  01020	e3a03000	 mov         r3, #0
  01024	e5823000	 str         r3, [r2]
  01028		 |$LN16@WAV_IOCont|

; 583  :             g_pHWContext->NotifyHeadsetOn((BOOL)*(DWORD *)pBufIn);

  01028	e59b3008	 ldr         r3, [r11, #8]
  0102c	e5931000	 ldr         r1, [r3]
  01030	e59f3374	 ldr         r3, [pc, #0x374]
  01034	e5930000	 ldr         r0, [r3]
  01038	eb000000	 bl          |?NotifyHeadsetOn@HardwareContext@@QAAXH@Z|

; 584  :             return TRUE;

  0103c	e3a03001	 mov         r3, #1
  01040	e50b3080	 str         r3, [r11, #-0x80]
  01044	e51b3080	 ldr         r3, [r11, #-0x80]
  01048	e50b3058	 str         r3, [r11, #-0x58]
  0104c	ea0000bc	 b           |$LN26@WAV_IOCont|
  01050		 |$LN15@WAV_IOCont|

; 585  : 
; 586  :         case IOCTL_NOTIFY_BT_HEADSET:
; 587  :             if(dwLenIn<sizeof(DWORD))

  01050	e59b300c	 ldr         r3, [r11, #0xC]
  01054	e3530004	 cmp         r3, #4
  01058	2a000004	 bcs         |$LN14@WAV_IOCont|

; 588  :                 return FALSE;

  0105c	e3a03000	 mov         r3, #0
  01060	e50b307c	 str         r3, [r11, #-0x7C]
  01064	e51b307c	 ldr         r3, [r11, #-0x7C]
  01068	e50b3058	 str         r3, [r11, #-0x58]
  0106c	ea0000b4	 b           |$LN26@WAV_IOCont|
  01070		 |$LN14@WAV_IOCont|

; 589  :             if(pdwActualOut)

  01070	e59b3018	 ldr         r3, [r11, #0x18]
  01074	e3530000	 cmp         r3, #0
  01078	0a000002	 beq         |$LN13@WAV_IOCont|

; 590  :                 *pdwActualOut = 0;

  0107c	e59b2018	 ldr         r2, [r11, #0x18]
  01080	e3a03000	 mov         r3, #0
  01084	e5823000	 str         r3, [r2]
  01088		 |$LN13@WAV_IOCont|

; 591  :             g_pHWContext->NotifyBtHeadsetOn(*(DWORD *)pBufIn);

  01088	e59b3008	 ldr         r3, [r11, #8]
  0108c	e5931000	 ldr         r1, [r3]
  01090	e59f3314	 ldr         r3, [pc, #0x314]
  01094	e5930000	 ldr         r0, [r3]
  01098	eb000000	 bl          |?NotifyBtHeadsetOn@HardwareContext@@QAAXK@Z|

; 592  :             return TRUE;

  0109c	e3a03001	 mov         r3, #1
  010a0	e50b3078	 str         r3, [r11, #-0x78]
  010a4	e51b3078	 ldr         r3, [r11, #-0x78]
  010a8	e50b3058	 str         r3, [r11, #-0x58]
  010ac	ea0000a4	 b           |$LN26@WAV_IOCont|
  010b0		 |$LN12@WAV_IOCont|

; 593  : 
; 594  :         case IOCTL_TOGGLE_EXT_SPEAKER:
; 595  :             if(pdwActualOut)

  010b0	e59b3018	 ldr         r3, [r11, #0x18]
  010b4	e3530000	 cmp         r3, #0
  010b8	0a000002	 beq         |$LN11@WAV_IOCont|

; 596  :                 *pdwActualOut = 0;

  010bc	e59b2018	 ldr         r2, [r11, #0x18]
  010c0	e3a03000	 mov         r3, #0
  010c4	e5823000	 str         r3, [r2]
  010c8		 |$LN11@WAV_IOCont|

; 597  :             g_pHWContext->ToggleExtSpeaker();

  010c8	e59f32dc	 ldr         r3, [pc, #0x2DC]
  010cc	e5930000	 ldr         r0, [r3]
  010d0	eb000000	 bl          |?ToggleExtSpeaker@HardwareContext@@QAAXXZ|

; 598  :             return TRUE;

  010d4	e3a03001	 mov         r3, #1
  010d8	e50b3074	 str         r3, [r11, #-0x74]
  010dc	e51b3074	 ldr         r3, [r11, #-0x74]
  010e0	e50b3058	 str         r3, [r11, #-0x58]
  010e4	ea000096	 b           |$LN26@WAV_IOCont|
  010e8		 |$LN10@WAV_IOCont|

; 599  : 
; 600  :         case IOCTL_GSM_CALL_ACTIVE:
; 601  :             g_pHWContext->PrepareForVoiceCall(TRUE);

  010e8	e3a01001	 mov         r1, #1
  010ec	e59f32b8	 ldr         r3, [pc, #0x2B8]
  010f0	e5930000	 ldr         r0, [r3]
  010f4	eb000000	 bl          |?PrepareForVoiceCall@HardwareContext@@QAAHH@Z|

; 602  :             if(pdwActualOut)

  010f8	e59b3018	 ldr         r3, [r11, #0x18]
  010fc	e3530000	 cmp         r3, #0
  01100	0a000002	 beq         |$LN9@WAV_IOCont|

; 603  :                 *pdwActualOut = 0;

  01104	e59b2018	 ldr         r2, [r11, #0x18]
  01108	e3a03000	 mov         r3, #0
  0110c	e5823000	 str         r3, [r2]
  01110		 |$LN9@WAV_IOCont|

; 604  :             return TRUE;

  01110	e3a03001	 mov         r3, #1
  01114	e50b3070	 str         r3, [r11, #-0x70]
  01118	e51b3070	 ldr         r3, [r11, #-0x70]
  0111c	e50b3058	 str         r3, [r11, #-0x58]
  01120	ea000087	 b           |$LN26@WAV_IOCont|
  01124		 |$LN8@WAV_IOCont|

; 605  : 
; 606  :         case IOCTL_GSM_CALL_INACTIVE:
; 607  :             g_pHWContext->PrepareForVoiceCall(FALSE);

  01124	e3a01000	 mov         r1, #0
  01128	e59f327c	 ldr         r3, [pc, #0x27C]
  0112c	e5930000	 ldr         r0, [r3]
  01130	eb000000	 bl          |?PrepareForVoiceCall@HardwareContext@@QAAHH@Z|

; 608  :             dwLenOut = 0;

  01134	e3a03000	 mov         r3, #0
  01138	e58b3014	 str         r3, [r11, #0x14]

; 609  :             if(pdwActualOut)

  0113c	e59b3018	 ldr         r3, [r11, #0x18]
  01140	e3530000	 cmp         r3, #0
  01144	0a000002	 beq         |$LN7@WAV_IOCont|

; 610  :                 *pdwActualOut = 0;

  01148	e59b2018	 ldr         r2, [r11, #0x18]
  0114c	e3a03000	 mov         r3, #0
  01150	e5823000	 str         r3, [r2]
  01154		 |$LN7@WAV_IOCont|

; 611  :             return TRUE;

  01154	e3a03001	 mov         r3, #1
  01158	e50b306c	 str         r3, [r11, #-0x6C]
  0115c	e51b306c	 ldr         r3, [r11, #-0x6C]
  01160	e50b3058	 str         r3, [r11, #-0x58]
  01164	ea000076	 b           |$LN26@WAV_IOCont|
  01168		 |$LN6@WAV_IOCont|

; 612  : 
; 613  :         // Power management functions.
; 614  :         case IOCTL_POWER_CAPABILITIES:
; 615  :         case IOCTL_POWER_QUERY:
; 616  :         case IOCTL_POWER_SET:
; 617  :         case IOCTL_POWER_GET:
; 618  :             return g_pHWContext->PmControlMessage
; 619  :                                 (dwCode, pBufIn, dwLenIn, pBufOut, dwLenOut, pdwActualOut);

  01168	e59b3018	 ldr         r3, [r11, #0x18]
  0116c	e58d3008	 str         r3, [sp, #8]
  01170	e59b3014	 ldr         r3, [r11, #0x14]
  01174	e58d3004	 str         r3, [sp, #4]
  01178	e59b3010	 ldr         r3, [r11, #0x10]
  0117c	e58d3000	 str         r3, [sp]
  01180	e59b300c	 ldr         r3, [r11, #0xC]
  01184	e59b2008	 ldr         r2, [r11, #8]
  01188	e59b1004	 ldr         r1, [r11, #4]
  0118c	e59f0218	 ldr         r0, [pc, #0x218]
  01190	e5900000	 ldr         r0, [r0]
  01194	e5900000	 ldr         r0, [r0]
  01198	e280e070	 add         lr, r0, #0x70
  0119c	e59f0208	 ldr         r0, [pc, #0x208]
  011a0	e5900000	 ldr         r0, [r0]
  011a4	e59e4000	 ldr         r4, [lr]
  011a8	e1a0e00f	 mov         lr, pc
  011ac	e12fff14	 bx          r4
  011b0	e50b0034	 str         r0, [r11, #-0x34]
  011b4	e51b3034	 ldr         r3, [r11, #-0x34]
  011b8	e50b3068	 str         r3, [r11, #-0x68]
  011bc	e51b3068	 ldr         r3, [r11, #-0x68]
  011c0	e50b3058	 str         r3, [r11, #-0x58]
  011c4	ea00005e	 b           |$LN26@WAV_IOCont|

; 620  :             break;

  011c8	ea00004a	 b           |$LN23@WAV_IOCont|
  011cc		 |$LN5@WAV_IOCont|

; 621  : 
; 622  :         case IOCTL_DDK_GET_DRIVER_IFC:
; 623  :             {
; 624  :             // We can give interface only to our peer in device process
; 625  :             if (GetCurrentProcessId() != (DWORD)GetCallerProcess()) 

  011cc	eb000000	 bl          GetCurrentProcessId
  011d0	e50b0030	 str         r0, [r11, #-0x30]
  011d4	eb000000	 bl          GetCallerProcess
  011d8	e50b002c	 str         r0, [r11, #-0x2C]
  011dc	e51b2030	 ldr         r2, [r11, #-0x30]
  011e0	e51b302c	 ldr         r3, [r11, #-0x2C]
  011e4	e1520003	 cmp         r2, r3
  011e8	0a000010	 beq         |$LN4@WAV_IOCont|

; 626  :             {
; 627  :                 DEBUGMSG(ZONE_ERROR, (L"ERROR: WAV_IOControl: "
; 628  :                     L"IOCTL_DDK_GET_DRIVER_IFC can be called only from "
; 629  :                     L"device process (caller process id 0x%08x)\r\n", 
; 630  :                     GetCallerProcess()
; 631  :                 ));

  011ec	e59f31c4	 ldr         r3, [pc, #0x1C4]
  011f0	e5933440	 ldr         r3, [r3, #0x440]
  011f4	e3130902	 tst         r3, #2, 18
  011f8	0a000007	 beq         |$LN28@WAV_IOCont|
  011fc	eb000000	 bl          GetCallerProcess
  01200	e50b0028	 str         r0, [r11, #-0x28]
  01204	e51b1028	 ldr         r1, [r11, #-0x28]
  01208	e59f01a4	 ldr         r0, [pc, #0x1A4]
  0120c	eb000000	 bl          NKDbgPrintfW
  01210	e3a03001	 mov         r3, #1
  01214	e50b3024	 str         r3, [r11, #-0x24]
  01218	ea000001	 b           |$LN29@WAV_IOCont|
  0121c		 |$LN28@WAV_IOCont|
  0121c	e3a03000	 mov         r3, #0
  01220	e50b3024	 str         r3, [r11, #-0x24]
  01224		 |$LN29@WAV_IOCont|

; 632  :                 SetLastError(ERROR_ACCESS_DENIED);

  01224	e3a00005	 mov         r0, #5
  01228	eb000000	 bl          SetLastError

; 633  :                 break;

  0122c	ea000031	 b           |$LN23@WAV_IOCont|
  01230		 |$LN4@WAV_IOCont|

; 634  :             }
; 635  :             if (pBufIn != NULL || 
; 636  :                 pBufOut == NULL ||
; 637  :                 dwLenOut < sizeof(CEDDK_DRIVER_PFN)) 

  01230	e59b3008	 ldr         r3, [r11, #8]
  01234	e3530000	 cmp         r3, #0
  01238	1a000005	 bne         |$LN2@WAV_IOCont|
  0123c	e59b3010	 ldr         r3, [r11, #0x10]
  01240	e3530000	 cmp         r3, #0
  01244	0a000002	 beq         |$LN2@WAV_IOCont|
  01248	e59b3014	 ldr         r3, [r11, #0x14]
  0124c	e3530010	 cmp         r3, #0x10
  01250	2a000002	 bcs         |$LN3@WAV_IOCont|
  01254		 |$LN2@WAV_IOCont|

; 638  :             {
; 639  :                 SetLastError(ERROR_INVALID_PARAMETER);

  01254	e3a00057	 mov         r0, #0x57
  01258	eb000000	 bl          SetLastError

; 640  :                 break;

  0125c	ea000025	 b           |$LN23@WAV_IOCont|
  01260		 |$LN3@WAV_IOCont|

; 641  :             }
; 642  : 
; 643  :             CEDDK_DRIVER_PFN *pFN;
; 644  :             pFN = (CEDDK_DRIVER_PFN*)pBufOut;

  01260	e59b3010	 ldr         r3, [r11, #0x10]
  01264	e50b3094	 str         r3, [r11, #-0x94]

; 645  :             pFN->context = dwOpenData;

  01268	e59b2000	 ldr         r2, [r11]
  0126c	e51b3094	 ldr         r3, [r11, #-0x94]
  01270	e5832000	 str         r2, [r3]

; 646  :             pFN->pfnIOControl = WAV_IOControl;

  01274	e51b3094	 ldr         r3, [r11, #-0x94]
  01278	e283200c	 add         r2, r3, #0xC
  0127c	e59f312c	 ldr         r3, [pc, #0x12C]
  01280	e5823000	 str         r3, [r2]

; 647  :             }
; 648  :             return TRUE;

  01284	e3a03001	 mov         r3, #1
  01288	e50b3064	 str         r3, [r11, #-0x64]
  0128c	e51b3064	 ldr         r3, [r11, #-0x64]
  01290	e50b3058	 str         r3, [r11, #-0x58]
  01294	ea00002a	 b           |$LN26@WAV_IOCont|
  01298		 |$LN1@WAV_IOCont|

; 649  : 
; 650  : 
; 651  :         default:
; 652  :             return g_pHWContext->HandleExtMessage (dwCode, pBufIn, dwLenIn, pBufOut, dwLenOut, pdwActualOut);

  01298	e59b3018	 ldr         r3, [r11, #0x18]
  0129c	e58d3008	 str         r3, [sp, #8]
  012a0	e59b3014	 ldr         r3, [r11, #0x14]
  012a4	e58d3004	 str         r3, [sp, #4]
  012a8	e59b3010	 ldr         r3, [r11, #0x10]
  012ac	e58d3000	 str         r3, [sp]
  012b0	e59b300c	 ldr         r3, [r11, #0xC]
  012b4	e59b2008	 ldr         r2, [r11, #8]
  012b8	e59b1004	 ldr         r1, [r11, #4]
  012bc	e59f00e8	 ldr         r0, [pc, #0xE8]
  012c0	e5900000	 ldr         r0, [r0]
  012c4	e5900000	 ldr         r0, [r0]
  012c8	e280e06c	 add         lr, r0, #0x6C
  012cc	e59f00d8	 ldr         r0, [pc, #0xD8]
  012d0	e5900000	 ldr         r0, [r0]
  012d4	e59e4000	 ldr         r4, [lr]
  012d8	e1a0e00f	 mov         lr, pc
  012dc	e12fff14	 bx          r4
  012e0	e50b0020	 str         r0, [r11, #-0x20]
  012e4	e51b3020	 ldr         r3, [r11, #-0x20]
  012e8	e50b3060	 str         r3, [r11, #-0x60]
  012ec	e51b3060	 ldr         r3, [r11, #-0x60]
  012f0	e50b3058	 str         r3, [r11, #-0x58]
  012f4	ea000012	 b           |$LN26@WAV_IOCont|
  012f8		 |$LN23@WAV_IOCont|
  012f8		 |$LN42@WAV_IOCont|

; 653  :             break;
; 654  :         }
; 655  :     }

  012f8	ea00000f	 b           |$LN43@WAV_IOCont|
  012fc		 |$LN38@WAV_IOCont|

; 657  :     {
; 658  :         ERRORMSG(1, (TEXT("EXCEPTION IN WAV_IOControl!!!!\r\n")));

  012fc	e3a02c02	 mov         r2, #2, 24
  01300	e3822092	 orr         r2, r2, #0x92
  01304	e59f109c	 ldr         r1, [pc, #0x9C]
  01308	e59f0094	 ldr         r0, [pc, #0x94]
  0130c	eb000000	 bl          NKDbgPrintfW
  01310	e59f0088	 ldr         r0, [pc, #0x88]
  01314	eb000000	 bl          NKDbgPrintfW
  01318	e3a03001	 mov         r3, #1
  0131c	e50b3014	 str         r3, [r11, #-0x14]
  01320	ea000001	 b           |$LN35@WAV_IOCont|
  01324	e3a03000	 mov         r3, #0
  01328	e50b3014	 str         r3, [r11, #-0x14]
  0132c		 |$LN35@WAV_IOCont|

; 659  :         SetLastError(E_FAIL);

  0132c	e3a00116	 mov         r0, #0x16, 2
  01330	e3800901	 orr         r0, r0, #1, 18
  01334	eb000000	 bl          SetLastError
  01338	eaffffff	 b           |$LN43@WAV_IOCont|
  0133c		 |$LN43@WAV_IOCont|

; 660  :     }
; 661  : 
; 662  :     return FALSE;

  0133c	e3a03000	 mov         r3, #0
  01340	e50b3058	 str         r3, [r11, #-0x58]
  01344		 |$LN26@WAV_IOCont|
  01344		 |$LN36@WAV_IOCont|

; 663  : }

  01344	e51b0058	 ldr         r0, [r11, #-0x58]
  01348	e24bd010	 sub         sp, r11, #0x10
  0134c	e89d6810	 ldmia       sp, {r4, r11, sp, lr}
  01350	e12fff1e	 bx          lr

			 ENDP  ; |?WAV_IOControl@@YAHKKPAEK0KPAK@Z|, WAV_IOControl

  01354		 |$LN37@WAV_IOCont|
  01354		 |$LN46@WAV_IOCont|

; 656  :     __except (GetExceptionCode() == STATUS_ACCESS_VIOLATION ? EXCEPTION_EXECUTE_HANDLER : EXCEPTION_CONTINUE_SEARCH)

  01354	e52de004	 str         lr, [sp, #-4]!
  01358	e24bb010	 sub         r11, r11, #0x10
  0135c	e24dd00c	 sub         sp, sp, #0xC
  01360		 |$LN40@WAV_IOCont|
  01360		 |$LN68@WAV_IOCont|
  01360	e50b005c	 str         r0, [r11, #-0x5C]
  01364	e51b305c	 ldr         r3, [r11, #-0x5C]
  01368	e5933000	 ldr         r3, [r3]
  0136c	e5933000	 ldr         r3, [r3]
  01370	e50b301c	 str         r3, [r11, #-0x1C]
  01374	e51b301c	 ldr         r3, [r11, #-0x1C]
  01378	e3530117	 cmp         r3, #0x17, 2
  0137c	1a000002	 bne         |$LN32@WAV_IOCont|
  01380	e3a03001	 mov         r3, #1
  01384	e50b3018	 str         r3, [r11, #-0x18]
  01388	ea000001	 b           |$LN33@WAV_IOCont|
  0138c		 |$LN32@WAV_IOCont|
  0138c	e3a03000	 mov         r3, #0
  01390	e50b3018	 str         r3, [r11, #-0x18]
  01394		 |$LN33@WAV_IOCont|
  01394	e51b0018	 ldr         r0, [r11, #-0x18]
  01398		 |$LN39@WAV_IOCont|
  01398	e28dd00c	 add         sp, sp, #0xC
  0139c	e49df004	 ldr         pc, [sp], #4
  013a0		 |$LN70@WAV_IOCont|
  013a0		 |$LN71@WAV_IOCont|
  013a0	00000000	 DCD         |??_C@_1EC@LMGEMPAK@?$AAE?$AAX?$AAC?$AAE?$AAP?$AAT?$AAI?$AAO?$AAN?$AA?5?$AAI?$AAN?$AA?5?$AAW?$AAA?$AAV?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$AN?$AA?6@|
  013a4		 |$LN72@WAV_IOCont|
  013a4	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  013a8		 |$LN73@WAV_IOCont|
  013a8	00000000	 DCD         |??_C@_1JE@OMJBAMM@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  013ac		 |$LN74@WAV_IOCont|
  013ac	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  013b0		 |$LN75@WAV_IOCont|
  013b0	00000000	 DCD         |?WAV_IOControl@@YAHKKPAEK0KPAK@Z|
  013b4		 |$LN76@WAV_IOCont|
  013b4	00000000	 DCD         |??_C@_1OG@CCECIOMO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAW?$AAA?$AAV?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAD?$AAD?$AAK?$AA_@|
  013b8		 |$LN77@WAV_IOCont|
  013b8	00000000	 DCD         |dpCurSettings|
  013bc		 |$LN78@WAV_IOCont|
  013bc	0032100c	 DCD         0x32100c
  013c0		 |$LN79@WAV_IOCont|
  013c0	00321008	 DCD         0x321008
  013c4		 |$LN80@WAV_IOCont|
  013c4	00321004	 DCD         0x321004
  013c8		 |$LN69@WAV_IOCont|
  013c8		 |$LN48@WAV_IOCont|
	IMPORT	|__GetUserKData|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T37911| DCD	|$LN5@GetCurrent|
	DCD	0x40000b02
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentProcessId| PROC

; 373  : _inline DWORD GetCurrentProcessId(void) {

  00000		 |$LN5@GetCurrent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M37908|

; 374  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURPROC * sizeof(HANDLE)));

  00008	e3a0000c	 mov         r0, #0xC
  0000c	eb000000	 bl          __GetUserKData
  00010	e58d0004	 str         r0, [sp, #4]
  00014	e59d3004	 ldr         r3, [sp, #4]
  00018	e58d3000	 str         r3, [sp]

; 375  : }

  0001c	e59d0000	 ldr         r0, [sp]
  00020	e28dd008	 add         sp, sp, #8
  00024	e49de004	 ldr         lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$M37909|

			 ENDP  ; |GetCurrentProcessId|

	END
