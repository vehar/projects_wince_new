; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\OMAP2420_MS_V1\WAVEDEV\dma.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_7OMAP2420DMAContext@@6B@| [ DATA ]	; OMAP2420DMAContext::`vftable'
	EXPORT	|??0OMAP2420DMAContext@@QAA@XZ|		; OMAP2420DMAContext::OMAP2420DMAContext
	EXPORT	|?HWMapDMAMemory@OMAP2420DMAContext@@UAAHK@Z| ; OMAP2420DMAContext::HWMapDMAMemory
	EXPORT	|?HWInitInputDMA@OMAP2420DMAContext@@UAAXXZ| ; OMAP2420DMAContext::HWInitInputDMA
	EXPORT	|?HWInitOutputDMA@OMAP2420DMAContext@@UAAXXZ| ; OMAP2420DMAContext::HWInitOutputDMA
	EXPORT	|?HWStartOutputDMA@OMAP2420DMAContext@@UAAXXZ| ; OMAP2420DMAContext::HWStartOutputDMA
	EXPORT	|?HWStopOutputDMA@OMAP2420DMAContext@@UAAXXZ| ; OMAP2420DMAContext::HWStopOutputDMA
	EXPORT	|?HWStartInputDMA@OMAP2420DMAContext@@UAAXXZ| ; OMAP2420DMAContext::HWStartInputDMA
	EXPORT	|?HWStopInputDMA@OMAP2420DMAContext@@UAAXXZ| ; OMAP2420DMAContext::HWStopInputDMA
	EXPORT	|?HWTransferInputBuffers@OMAP2420DMAContext@@UAAKXZ| ; OMAP2420DMAContext::HWTransferInputBuffers
	EXPORT	|?HWTransferOutputBuffers@OMAP2420DMAContext@@UAAKXZ| ; OMAP2420DMAContext::HWTransferOutputBuffers
	EXPORT	|?HWDMAMemoryIn@OMAP2420DMAContext@@UAAPAEXZ| ; OMAP2420DMAContext::HWDMAMemoryIn
	EXPORT	|?HWDMAMemoryOut@OMAP2420DMAContext@@UAAPAEXZ| ; OMAP2420DMAContext::HWDMAMemoryOut
	IMPORT	|??0HardwareContext@@QAA@XZ|		; HardwareContext::HardwareContext
	IMPORT	|??_EOMAP2420DMAContext@@UAAPAXI@Z|, WEAK |??_GOMAP2420DMAContext@@UAAPAXI@Z| ; OMAP2420DMAContext::`vector deleting destructor', OMAP2420DMAContext::`scalar deleting destructor'
	IMPORT	|_purecall|
	IMPORT	|?SetupDelayUpdate@HardwareContext@@MAAXXZ| ; HardwareContext::SetupDelayUpdate
	IMPORT	|?DelayedUpdate@HardwareContext@@MAAXXZ| ; HardwareContext::DelayedUpdate

  00000			 AREA	 |.pdata|, PDATA
|$T37860| DCD	|$LN5@OMAP2420DM|
	DCD	0x40002d04
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\dma.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7OMAP2420DMAContext@@6B@| DCD |??_EOMAP2420DMAContext@@UAAPAXI@Z| ; OMAP2420DMAContext::`vftable'
	DCD	|?HWMapDMAMemory@OMAP2420DMAContext@@UAAHK@Z|
	DCD	|?HWInitInputDMA@OMAP2420DMAContext@@UAAXXZ|
	DCD	|?HWInitOutputDMA@OMAP2420DMAContext@@UAAXXZ|
	DCD	|?HWStartOutputDMA@OMAP2420DMAContext@@UAAXXZ|
	DCD	|?HWStopOutputDMA@OMAP2420DMAContext@@UAAXXZ|
	DCD	|?HWStartInputDMA@OMAP2420DMAContext@@UAAXXZ|
	DCD	|?HWStopInputDMA@OMAP2420DMAContext@@UAAXXZ|
	DCD	|?HWTransferInputBuffers@OMAP2420DMAContext@@UAAKXZ|
	DCD	|?HWTransferOutputBuffers@OMAP2420DMAContext@@UAAKXZ|
	DCD	|?HWDMAMemoryIn@OMAP2420DMAContext@@UAAPAEXZ|
	DCD	|?HWDMAMemoryOut@OMAP2420DMAContext@@UAAPAEXZ|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|?SetupDelayUpdate@HardwareContext@@MAAXXZ|
	DCD	|?DelayedUpdate@HardwareContext@@MAAXXZ|
	DCD	|_purecall|
	DCD	|_purecall|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0OMAP2420DMAContext@@QAA@XZ| PROC	; OMAP2420DMAContext::OMAP2420DMAContext

; 44   : {

  00000		 |$LN5@OMAP2420DM|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M37857|
  00010	e59d0010	 ldr         r0, [sp, #0x10]
  00014	eb000000	 bl          |??0HardwareContext@@QAA@XZ|
  00018	e58d0004	 str         r0, [sp, #4]
  0001c	e59f208c	 ldr         r2, [pc, #0x8C]
  00020	e59d3010	 ldr         r3, [sp, #0x10]
  00024	e5832000	 str         r2, [r3]

; 45   :     m_hCont = NULL;

  00028	e59d3010	 ldr         r3, [sp, #0x10]
  0002c	e28320ec	 add         r2, r3, #0xEC
  00030	e3a03000	 mov         r3, #0
  00034	e5823000	 str         r3, [r2]

; 46   :     m_pInDMAReg = NULL;

  00038	e59d3010	 ldr         r3, [sp, #0x10]
  0003c	e28320f0	 add         r2, r3, #0xF0
  00040	e3a03000	 mov         r3, #0
  00044	e5823000	 str         r3, [r2]

; 47   :     m_pOutDMAReg = NULL;

  00048	e59d3010	 ldr         r3, [sp, #0x10]
  0004c	e28320f4	 add         r2, r3, #0xF4
  00050	e3a03000	 mov         r3, #0
  00054	e5823000	 str         r3, [r2]

; 48   :     m_paAudioDMA.LowPart = 0;

  00058	e59d3010	 ldr         r3, [sp, #0x10]
  0005c	e28320f8	 add         r2, r3, #0xF8
  00060	e3a03000	 mov         r3, #0
  00064	e5823000	 str         r3, [r2]

; 49   :     m_paAudioDMA.HighPart = 0;

  00068	e59d3010	 ldr         r3, [sp, #0x10]
  0006c	e28320fc	 add         r2, r3, #0xFC
  00070	e3a03000	 mov         r3, #0
  00074	e5823000	 str         r3, [r2]

; 50   :     m_pbDMABufOut=NULL;

  00078	e59d3010	 ldr         r3, [sp, #0x10]
  0007c	e2832f41	 add         r2, r3, #0x41, 30
  00080	e3a03000	 mov         r3, #0
  00084	e5823000	 str         r3, [r2]

; 51   :     m_pbDMABufIn=NULL;

  00088	e59d3010	 ldr         r3, [sp, #0x10]
  0008c	e2832c01	 add         r2, r3, #1, 24
  00090	e3a03000	 mov         r3, #0
  00094	e5823000	 str         r3, [r2]

; 52   : }

  00098	e59d3010	 ldr         r3, [sp, #0x10]
  0009c	e58d3000	 str         r3, [sp]
  000a0	e59d0000	 ldr         r0, [sp]
  000a4	e28dd008	 add         sp, sp, #8
  000a8	e89d6000	 ldmia       sp, {sp, lr}
  000ac	e12fff1e	 bx          lr
  000b0		 |$LN6@OMAP2420DM|
  000b0		 |$LN7@OMAP2420DM|
  000b0	00000000	 DCD         |??_7OMAP2420DMAContext@@6B@|
  000b4		 |$M37858|

			 ENDP  ; |??0OMAP2420DMAContext@@QAA@XZ|, OMAP2420DMAContext::OMAP2420DMAContext

; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\dmactxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T37868| DCD	|$LN5@HWDMAMemor|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HWDMAMemoryIn@OMAP2420DMAContext@@UAAPAEXZ| PROC ; OMAP2420DMAContext::HWDMAMemoryIn

; 58   :     PBYTE HWDMAMemoryIn( void ) { return m_pbDMABufIn;  }

  00000		 |$LN5@HWDMAMemor|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37865|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833c01	 add         r3, r3, #1, 24
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M37866|

			 ENDP  ; |?HWDMAMemoryIn@OMAP2420DMAContext@@UAAPAEXZ|, OMAP2420DMAContext::HWDMAMemoryIn


  00000			 AREA	 |.pdata|, PDATA
|$T37876| DCD	|$LN5@HWDMAMemor@2|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HWDMAMemoryOut@OMAP2420DMAContext@@UAAPAEXZ| PROC ; OMAP2420DMAContext::HWDMAMemoryOut

; 59   :     PBYTE HWDMAMemoryOut( void ){ return m_pbDMABufOut; }

  00000		 |$LN5@HWDMAMemor@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37873|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833f41	 add         r3, r3, #0x41, 30
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M37874|

			 ENDP  ; |?HWDMAMemoryOut@OMAP2420DMAContext@@UAAPAEXZ|, OMAP2420DMAContext::HWDMAMemoryOut

	EXPORT	|??1OMAP2420DMAContext@@UAA@XZ|		; OMAP2420DMAContext::~OMAP2420DMAContext
	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T37884| DCD	|$LN6@scalar|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GOMAP2420DMAContext@@UAAPAXI@Z| PROC ; OMAP2420DMAContext::`scalar deleting destructor'
  00000		 |$LN6@scalar|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37881|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1OMAP2420DMAContext@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M37882|

			 ENDP  ; |??_GOMAP2420DMAContext@@UAAPAXI@Z|, OMAP2420DMAContext::`scalar deleting destructor'

	IMPORT	|??1HardwareContext@@UAA@XZ|		; HardwareContext::~HardwareContext

  00000			 AREA	 |.pdata|, PDATA
|$T37891| DCD	|$LN5@OMAP2420DM@2|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1OMAP2420DMAContext@@UAA@XZ| PROC	; OMAP2420DMAContext::~OMAP2420DMAContext
  00000		 |$LN5@OMAP2420DM@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37888|
  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          |??1HardwareContext@@UAA@XZ|
  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M37889|

			 ENDP  ; |??1OMAP2420DMAContext@@UAA@XZ|, OMAP2420DMAContext::~OMAP2420DMAContext

	EXPORT	|??_C@_1MA@BPIDEJOM@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@BGKCDEND@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KG@OPLHHFIK@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KE@FCABAAAD@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IE@DHOMDDMN@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JG@KCCFCNPL@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JM@KCKCBIEK@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JM@PJODANJJ@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_06JIODDOFH@System?$AA@| [ DATA ]	; `string'
	EXPORT	|??_C@_1KI@IHKCMMFM@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JA@EEIHDCMD@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1MK@PBIECIJF@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| [ DATA ] ; `string'
	IMPORT	|HalAllocateCommonBuffer|
	IMPORT	|__imp_DMA_ControllerSet|
	IMPORT	|MmMapIoSpace|
	IMPORT	|__imp_DMA_ControllerClose|
	IMPORT	|__imp_DMA_ControllerAcquireChannels|
	IMPORT	|__imp_DMA_ControllerOpen|
	IMPORT	|_stricmp|
	IMPORT	|free|
	IMPORT	|malloc|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
	IMPORT	|__imp_DMA_ControllerEnum|
	IMPORT	|__rt_udiv|

  00008			 AREA	 |.pdata|, PDATA
|$T37922| DCD	|$LN47@HWMapDMAMe|
	DCD	0x4001b904
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\dma.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1MA@BPIDEJOM@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "H", 0x0, "W", 0x0, "M", 0x0, "a", 0x0, "p"
	DCB	0x0, "D", 0x0, "M", 0x0, "A", 0x0, "M", 0x0, "e", 0x0, "m"
	DCB	0x0, "o", 0x0, "r", 0x0, "y", 0x0, ":", 0x0, " ", 0x0, "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "m"
	DCB	0x0, "a", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "c"
	DCB	0x0, "h", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "m", 0x0, "e"
	DCB	0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, ",", 0x0, " "
	DCB	0x0, "u", 0x0, "s", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "u", 0x0, "n", 0x0, "c", 0x0, "a", 0x0, "c", 0x0, "h"
	DCB	0x0, "e", 0x0, "d", 0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@BGKCDEND@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "H", 0x0, "W", 0x0, "M", 0x0, "a", 0x0, "p"
	DCB	0x0, "D", 0x0, "M", 0x0, "A", 0x0, "M", 0x0, "e", 0x0, "m"
	DCB	0x0, "o", 0x0, "r", 0x0, "y", 0x0, ":", 0x0, " ", 0x0, "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "m"
	DCB	0x0, "a", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " ", 0x0, "m"
	DCB	0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, "."
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KG@OPLHHFIK@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "H", 0x0, "W", 0x0, "M", 0x0, "a", 0x0, "p"
	DCB	0x0, "D", 0x0, "M", 0x0, "A", 0x0, "M", 0x0, "e", 0x0, "m"
	DCB	0x0, "o", 0x0, "r", 0x0, "y", 0x0, ":", 0x0, " ", 0x0, "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "I", 0x0, "R", 0x0, "Q", 0x0, " ", 0x0, "f"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "L", 0x0, "2", 0x0, " "
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, "p", 0x0, "u", 0x0, "t"
	DCB	0x0, " ", 0x0, "d", 0x0, "m", 0x0, "a", 0x0, " ", 0x0, "c"
	DCB	0x0, "h", 0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l"
	DCB	0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KE@FCABAAAD@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "H", 0x0, "W", 0x0, "M", 0x0, "a", 0x0, "p"
	DCB	0x0, "D", 0x0, "M", 0x0, "A", 0x0, "M", 0x0, "e", 0x0, "m"
	DCB	0x0, "o", 0x0, "r", 0x0, "y", 0x0, ":", 0x0, " ", 0x0, "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "I", 0x0, "R", 0x0, "Q", 0x0, " ", 0x0, "f"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "L", 0x0, "3", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "p", 0x0, "u", 0x0, "t", 0x0, " "
	DCB	0x0, "d", 0x0, "m", 0x0, "a", 0x0, " ", 0x0, "c", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@DHOMDDMN@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "H", 0x0, "W", 0x0, "M", 0x0, "a", 0x0, "p"
	DCB	0x0, "D", 0x0, "M", 0x0, "A", 0x0, "M", 0x0, "e", 0x0, "m"
	DCB	0x0, "o", 0x0, "r", 0x0, "y", 0x0, ":", 0x0, " ", 0x0, "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "m"
	DCB	0x0, "a", 0x0, "p", 0x0, "p", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "s", 0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JG@KCCFCNPL@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "H", 0x0, "W", 0x0, "M", 0x0, "a", 0x0, "p"
	DCB	0x0, "D", 0x0, "M", 0x0, "A", 0x0, "M", 0x0, "e", 0x0, "m"
	DCB	0x0, "o", 0x0, "r", 0x0, "y", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "o", 0x0, "u", 0x0, "l", 0x0, "d", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "a", 0x0, "c", 0x0, "q"
	DCB	0x0, "u", 0x0, "i", 0x0, "r", 0x0, "e", 0x0, " ", 0x0, "a"
	DCB	0x0, "u", 0x0, "d", 0x0, "i", 0x0, "o", 0x0, " ", 0x0, "i"
	DCB	0x0, "/", 0x0, "o", 0x0, " ", 0x0, "c", 0x0, "h", 0x0, "a"
	DCB	0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JM@KCKCBIEK@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "H", 0x0, "W", 0x0, "M", 0x0, "a", 0x0, "p"
	DCB	0x0, "D", 0x0, "M", 0x0, "A", 0x0, "M", 0x0, "e", 0x0, "m"
	DCB	0x0, "o", 0x0, "r", 0x0, "y", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "o", 0x0, "u", 0x0, "l", 0x0, "d", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "o", 0x0, "p", 0x0, "e"
	DCB	0x0, "n", 0x0, " ", 0x0, """", 0x0, "S", 0x0, "y", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "m", 0x0, """", 0x0, " ", 0x0, "d"
	DCB	0x0, "m", 0x0, "a", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e"
	DCB	0x0, "r", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JM@PJODANJJ@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "H", 0x0, "W", 0x0, "M", 0x0, "a", 0x0, "p"
	DCB	0x0, "D", 0x0, "M", 0x0, "A", 0x0, "M", 0x0, "e", 0x0, "m"
	DCB	0x0, "o", 0x0, "r", 0x0, "y", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "o", 0x0, "u", 0x0, "l", 0x0, "d", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "f", 0x0, "i", 0x0, "n"
	DCB	0x0, "d", 0x0, " ", 0x0, """", 0x0, "S", 0x0, "y", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "m", 0x0, """", 0x0, " ", 0x0, "d"
	DCB	0x0, "m", 0x0, "a", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e"
	DCB	0x0, "r", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_06JIODDOFH@System?$AA@| DCB "System", 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KI@IHKCMMFM@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "H", 0x0, "W", 0x0, "M", 0x0, "a", 0x0, "p"
	DCB	0x0, "D", 0x0, "M", 0x0, "A", 0x0, "M", 0x0, "e", 0x0, "m"
	DCB	0x0, "o", 0x0, "r", 0x0, "y", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "o", 0x0, "u", 0x0, "l", 0x0, "d", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "e", 0x0, "n", 0x0, "u"
	DCB	0x0, "m", 0x0, "e", 0x0, "r", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, " ", 0x0, "p", 0x0, "l", 0x0, "a", 0x0, "t", 0x0, "f"
	DCB	0x0, "o", 0x0, "r", 0x0, "m", 0x0, " ", 0x0, "d", 0x0, "m"
	DCB	0x0, "a", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, "s", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JA@EEIHDCMD@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "H", 0x0, "W", 0x0, "M", 0x0, "a", 0x0, "p"
	DCB	0x0, "D", 0x0, "M", 0x0, "A", 0x0, "M", 0x0, "e", 0x0, "m"
	DCB	0x0, "o", 0x0, "r", 0x0, "y", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "o", 0x0, "u", 0x0, "l", 0x0, "d", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "l"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, " ", 0x0, "d", 0x0, "m"
	DCB	0x0, "a", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, "s", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1MK@PBIECIJF@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "H", 0x0, "W", 0x0, "M", 0x0, "a", 0x0, "p"
	DCB	0x0, "D", 0x0, "M", 0x0, "A", 0x0, "M", 0x0, "e", 0x0, "m"
	DCB	0x0, "o", 0x0, "r", 0x0, "y", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "o", 0x0, "u", 0x0, "l", 0x0, "d", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "g", 0x0, "e", 0x0, "t"
	DCB	0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " "
	DCB	0x0, "o", 0x0, "f", 0x0, " ", 0x0, "e", 0x0, "n", 0x0, "u"
	DCB	0x0, "m", 0x0, "e", 0x0, "r", 0x0, "a", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, " ", 0x0, "o", 0x0, "f", 0x0, " "
	DCB	0x0, "p", 0x0, "l", 0x0, "a", 0x0, "t", 0x0, "f", 0x0, "o"
	DCB	0x0, "r", 0x0, "m", 0x0, " ", 0x0, "d", 0x0, "m", 0x0, "a"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "s"
	DCB	0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  000b4			 AREA	 |.text|, CODE, ARM

  000b4		 |?HWMapDMAMemory@OMAP2420DMAContext@@UAAHK@Z| PROC ; OMAP2420DMAContext::HWMapDMAMemory

; 65   : {

  000b4		 |$LN47@HWMapDMAMe|
  000b4	e1a0c00d	 mov         r12, sp
  000b8	e92d0003	 stmdb       sp!, {r0, r1}
  000bc	e92d5000	 stmdb       sp!, {r12, lr}
  000c0	e24dd098	 sub         sp, sp, #0x98
  000c4		 |$M37919|

; 66   :     PBYTE pbDMATemp;
; 67   :     PHYSICAL_ADDRESS pa;
; 68   : 
; 69   :     /* find the system dma controller */
; 70   :     uint bytesToAlloc = 0;

  000c4	e3a03000	 mov         r3, #0
  000c8	e58d3000	 str         r3, [sp]

; 71   :     uint err = DMA_ControllerEnum(NULL,&bytesToAlloc);

  000cc	e28d1000	 add         r1, sp, #0
  000d0	e3a00000	 mov         r0, #0
  000d4	e59f36b0	 ldr         r3, [pc, #0x6B0]
  000d8	e5933000	 ldr         r3, [r3]
  000dc	e1a0e00f	 mov         lr, pc
  000e0	e12fff13	 bx          r3
  000e4	e58d003c	 str         r0, [sp, #0x3C]
  000e8	e59d303c	 ldr         r3, [sp, #0x3C]
  000ec	e58d301c	 str         r3, [sp, #0x1C]

; 72   :     if (err!=DMAERR_NOTENOUGHSPACE)

  000f0	e59d201c	 ldr         r2, [sp, #0x1C]
  000f4	e3a03106	 mov         r3, #6, 2
  000f8	e3833847	 orr         r3, r3, #0x47, 16
  000fc	e1520003	 cmp         r2, r3
  00100	0a00000d	 beq         |$LN20@HWMapDMAMe|

; 73   :     {
; 74   :         DEBUGMSG(ZONE_ERROR, (L"OMAP2420DMAContext::HWMapDMAMemory: "
; 75   :             L"Could not get size of enumeration of platform dma controllers.\r\n"
; 76   :         ));

  00104	e59f364c	 ldr         r3, [pc, #0x64C]
  00108	e5933440	 ldr         r3, [r3, #0x440]
  0010c	e3130902	 tst         r3, #2, 18
  00110	0a000004	 beq         |$LN23@HWMapDMAMe|
  00114	e59f0678	 ldr         r0, [pc, #0x678]
  00118	eb000000	 bl          NKDbgPrintfW
  0011c	e3a03001	 mov         r3, #1
  00120	e58d3040	 str         r3, [sp, #0x40]
  00124	ea000001	 b           |$LN24@HWMapDMAMe|
  00128		 |$LN23@HWMapDMAMe|
  00128	e3a03000	 mov         r3, #0
  0012c	e58d3040	 str         r3, [sp, #0x40]
  00130		 |$LN24@HWMapDMAMe|

; 77   :         return FALSE;

  00130	e3a03000	 mov         r3, #0
  00134	e58d3038	 str         r3, [sp, #0x38]
  00138	ea000180	 b           |$LN21@HWMapDMAMe|
  0013c		 |$LN20@HWMapDMAMe|

; 78   :     }
; 79   :     DMACONTROLLER *pContList = (DMACONTROLLER *)malloc(bytesToAlloc);

  0013c	e59d0000	 ldr         r0, [sp]
  00140	eb000000	 bl          malloc
  00144	e58d0044	 str         r0, [sp, #0x44]
  00148	e59d3044	 ldr         r3, [sp, #0x44]
  0014c	e58d302c	 str         r3, [sp, #0x2C]

; 80   :     if (pContList == NULL)

  00150	e59d302c	 ldr         r3, [sp, #0x2C]
  00154	e3530000	 cmp         r3, #0
  00158	1a00000d	 bne         |$LN19@HWMapDMAMe|

; 81   :     {
; 82   :         DEBUGMSG(ZONE_ERROR, (L"OMAP2420DMAContext::HWMapDMAMemory: "
; 83   :             L"Could not malloc dma controllers.\r\n"
; 84   :         ));

  0015c	e59f35f4	 ldr         r3, [pc, #0x5F4]
  00160	e5933440	 ldr         r3, [r3, #0x440]
  00164	e3130902	 tst         r3, #2, 18
  00168	0a000004	 beq         |$LN25@HWMapDMAMe|
  0016c	e59f061c	 ldr         r0, [pc, #0x61C]
  00170	eb000000	 bl          NKDbgPrintfW
  00174	e3a03001	 mov         r3, #1
  00178	e58d3048	 str         r3, [sp, #0x48]
  0017c	ea000001	 b           |$LN26@HWMapDMAMe|
  00180		 |$LN25@HWMapDMAMe|
  00180	e3a03000	 mov         r3, #0
  00184	e58d3048	 str         r3, [sp, #0x48]
  00188		 |$LN26@HWMapDMAMe|

; 85   :         return FALSE;

  00188	e3a03000	 mov         r3, #0
  0018c	e58d3038	 str         r3, [sp, #0x38]
  00190	ea00016a	 b           |$LN21@HWMapDMAMe|
  00194		 |$LN19@HWMapDMAMe|

; 86   :     }
; 87   :     err = DMA_ControllerEnum(pContList,&bytesToAlloc);

  00194	e28d1000	 add         r1, sp, #0
  00198	e59d002c	 ldr         r0, [sp, #0x2C]
  0019c	e59f35e8	 ldr         r3, [pc, #0x5E8]
  001a0	e5933000	 ldr         r3, [r3]
  001a4	e1a0e00f	 mov         lr, pc
  001a8	e12fff13	 bx          r3
  001ac	e58d004c	 str         r0, [sp, #0x4C]
  001b0	e59d304c	 ldr         r3, [sp, #0x4C]
  001b4	e58d301c	 str         r3, [sp, #0x1C]

; 88   :     if (err)

  001b8	e59d301c	 ldr         r3, [sp, #0x1C]
  001bc	e3530000	 cmp         r3, #0
  001c0	0a00000f	 beq         |$LN18@HWMapDMAMe|

; 89   :     {
; 90   :         DEBUGMSG(ZONE_ERROR, (L"OMAP2420DMAContext::HWMapDMAMemory: "
; 91   :             L"Could not enumerate platform dma controllers.\r\n"
; 92   :         ));

  001c4	e59f358c	 ldr         r3, [pc, #0x58C]
  001c8	e5933440	 ldr         r3, [r3, #0x440]
  001cc	e3130902	 tst         r3, #2, 18
  001d0	0a000004	 beq         |$LN27@HWMapDMAMe|
  001d4	e59f05ac	 ldr         r0, [pc, #0x5AC]
  001d8	eb000000	 bl          NKDbgPrintfW
  001dc	e3a03001	 mov         r3, #1
  001e0	e58d3050	 str         r3, [sp, #0x50]
  001e4	ea000001	 b           |$LN28@HWMapDMAMe|
  001e8		 |$LN27@HWMapDMAMe|
  001e8	e3a03000	 mov         r3, #0
  001ec	e58d3050	 str         r3, [sp, #0x50]
  001f0		 |$LN28@HWMapDMAMe|

; 93   :         free(pContList);

  001f0	e59d002c	 ldr         r0, [sp, #0x2C]
  001f4	eb000000	 bl          free

; 94   :         return FALSE;

  001f8	e3a03000	 mov         r3, #0
  001fc	e58d3038	 str         r3, [sp, #0x38]
  00200	ea00014e	 b           |$LN21@HWMapDMAMe|
  00204		 |$LN18@HWMapDMAMe|

; 95   :     }
; 96   :     /* find the system dma controller */
; 97   :     uint numEntries = bytesToAlloc/sizeof(DMACONTROLLER);

  00204	e59d1000	 ldr         r1, [sp]
  00208	e3a00024	 mov         r0, #0x24
  0020c	eb000000	 bl          __rt_udiv
  00210	e58d0034	 str         r0, [sp, #0x34]

; 98   :     uint i;
; 99   :     for(i=0;i<numEntries;i++)

  00214	e3a03000	 mov         r3, #0
  00218	e58d3004	 str         r3, [sp, #4]
  0021c	ea000002	 b           |$LN17@HWMapDMAMe|
  00220		 |$LN16@HWMapDMAMe|
  00220	e59d3004	 ldr         r3, [sp, #4]
  00224	e2833001	 add         r3, r3, #1
  00228	e58d3004	 str         r3, [sp, #4]
  0022c		 |$LN17@HWMapDMAMe|
  0022c	e59d2004	 ldr         r2, [sp, #4]
  00230	e59d3034	 ldr         r3, [sp, #0x34]
  00234	e1520003	 cmp         r2, r3
  00238	2a00000d	 bcs         |$LN15@HWMapDMAMe|

; 100  :     {
; 101  :         if (!_stricmp(pContList[i].mName,"System"))

  0023c	e59f1540	 ldr         r1, [pc, #0x540]
  00240	e59d0004	 ldr         r0, [sp, #4]
  00244	e3a03024	 mov         r3, #0x24
  00248	e0020390	 mul         r2, r0, r3
  0024c	e59d302c	 ldr         r3, [sp, #0x2C]
  00250	e0833002	 add         r3, r3, r2
  00254	e2830004	 add         r0, r3, #4
  00258	eb000000	 bl          _stricmp
  0025c	e58d0054	 str         r0, [sp, #0x54]
  00260	e59d3054	 ldr         r3, [sp, #0x54]
  00264	e3530000	 cmp         r3, #0
  00268	1a000000	 bne         |$LN14@HWMapDMAMe|

; 102  :             break;

  0026c	ea000000	 b           |$LN15@HWMapDMAMe|
  00270		 |$LN14@HWMapDMAMe|

; 103  :     }

  00270	eaffffea	 b           |$LN16@HWMapDMAMe|
  00274		 |$LN15@HWMapDMAMe|

; 104  :     if (i==numEntries)

  00274	e59d2004	 ldr         r2, [sp, #4]
  00278	e59d3034	 ldr         r3, [sp, #0x34]
  0027c	e1520003	 cmp         r2, r3
  00280	1a00000f	 bne         |$LN13@HWMapDMAMe|

; 105  :     {
; 106  :         DEBUGMSG(ZONE_ERROR, (L"OMAP2420DMAContext::HWMapDMAMemory: "
; 107  :             L"Could not find \"System\" dma controller.\r\n"
; 108  :         ));

  00284	e59f34cc	 ldr         r3, [pc, #0x4CC]
  00288	e5933440	 ldr         r3, [r3, #0x440]
  0028c	e3130902	 tst         r3, #2, 18
  00290	0a000004	 beq         |$LN29@HWMapDMAMe|
  00294	e59f04e4	 ldr         r0, [pc, #0x4E4]
  00298	eb000000	 bl          NKDbgPrintfW
  0029c	e3a03001	 mov         r3, #1
  002a0	e58d3058	 str         r3, [sp, #0x58]
  002a4	ea000001	 b           |$LN30@HWMapDMAMe|
  002a8		 |$LN29@HWMapDMAMe|
  002a8	e3a03000	 mov         r3, #0
  002ac	e58d3058	 str         r3, [sp, #0x58]
  002b0		 |$LN30@HWMapDMAMe|

; 109  :         free(pContList);

  002b0	e59d002c	 ldr         r0, [sp, #0x2C]
  002b4	eb000000	 bl          free

; 110  :         return FALSE;

  002b8	e3a03000	 mov         r3, #0
  002bc	e58d3038	 str         r3, [sp, #0x38]
  002c0	ea00011e	 b           |$LN21@HWMapDMAMe|
  002c4		 |$LN13@HWMapDMAMe|

; 111  :     }
; 112  :     uint controllerId = pContList[i].mSysId;

  002c4	e59d1004	 ldr         r1, [sp, #4]
  002c8	e3a03024	 mov         r3, #0x24
  002cc	e0020391	 mul         r2, r1, r3
  002d0	e59d302c	 ldr         r3, [sp, #0x2C]
  002d4	e0833002	 add         r3, r3, r2
  002d8	e5933000	 ldr         r3, [r3]
  002dc	e58d3018	 str         r3, [sp, #0x18]

; 113  :     free(pContList);

  002e0	e59d002c	 ldr         r0, [sp, #0x2C]
  002e4	eb000000	 bl          free

; 114  : 
; 115  :     /* open the controller now */
; 116  :     err = DMA_ControllerOpen(controllerId, &m_hCont);

  002e8	e59d30a0	 ldr         r3, [sp, #0xA0]
  002ec	e28310ec	 add         r1, r3, #0xEC
  002f0	e59d0018	 ldr         r0, [sp, #0x18]
  002f4	e59f3480	 ldr         r3, [pc, #0x480]
  002f8	e5933000	 ldr         r3, [r3]
  002fc	e1a0e00f	 mov         lr, pc
  00300	e12fff13	 bx          r3
  00304	e58d005c	 str         r0, [sp, #0x5C]
  00308	e59d305c	 ldr         r3, [sp, #0x5C]
  0030c	e58d301c	 str         r3, [sp, #0x1C]

; 117  :     if (err)

  00310	e59d301c	 ldr         r3, [sp, #0x1C]
  00314	e3530000	 cmp         r3, #0
  00318	0a00000d	 beq         |$LN12@HWMapDMAMe|

; 118  :     {
; 119  :         DEBUGMSG(ZONE_ERROR, (L"OMAP2420DMAContext::HWMapDMAMemory: "
; 120  :             L"Could not open \"System\" dma controller.\r\n"
; 121  :         ));

  0031c	e59f3434	 ldr         r3, [pc, #0x434]
  00320	e5933440	 ldr         r3, [r3, #0x440]
  00324	e3130902	 tst         r3, #2, 18
  00328	0a000004	 beq         |$LN31@HWMapDMAMe|
  0032c	e59f0444	 ldr         r0, [pc, #0x444]
  00330	eb000000	 bl          NKDbgPrintfW
  00334	e3a03001	 mov         r3, #1
  00338	e58d3060	 str         r3, [sp, #0x60]
  0033c	ea000001	 b           |$LN32@HWMapDMAMe|
  00340		 |$LN31@HWMapDMAMe|
  00340	e3a03000	 mov         r3, #0
  00344	e58d3060	 str         r3, [sp, #0x60]
  00348		 |$LN32@HWMapDMAMe|

; 122  :         return FALSE;

  00348	e3a03000	 mov         r3, #0
  0034c	e58d3038	 str         r3, [sp, #0x38]
  00350	ea0000fa	 b           |$LN21@HWMapDMAMe|
  00354		 |$LN12@HWMapDMAMe|

; 123  :     }
; 124  : 
; 125  :     /* we need to allocate our input and output channels */
; 126  :     uint chanIO = (1<<AUDIO_INPUT_DMA_CHANNEL) | (1<<AUDIO_OUTPUT_DMA_CHANNEL);

  00354	e3a0300c	 mov         r3, #0xC
  00358	e58d3030	 str         r3, [sp, #0x30]

; 127  :     err = DMA_ControllerAcquireChannels(m_hCont, 2, &chanIO);

  0035c	e28d2030	 add         r2, sp, #0x30
  00360	e3a01002	 mov         r1, #2
  00364	e59d30a0	 ldr         r3, [sp, #0xA0]
  00368	e28330ec	 add         r3, r3, #0xEC
  0036c	e5930000	 ldr         r0, [r3]
  00370	e59f33fc	 ldr         r3, [pc, #0x3FC]
  00374	e5933000	 ldr         r3, [r3]
  00378	e1a0e00f	 mov         lr, pc
  0037c	e12fff13	 bx          r3
  00380	e58d0064	 str         r0, [sp, #0x64]
  00384	e59d3064	 ldr         r3, [sp, #0x64]
  00388	e58d301c	 str         r3, [sp, #0x1C]

; 128  :     if (err)

  0038c	e59d301c	 ldr         r3, [sp, #0x1C]
  00390	e3530000	 cmp         r3, #0
  00394	0a000018	 beq         |$LN11@HWMapDMAMe|

; 129  :     {
; 130  :         DEBUGMSG(ZONE_ERROR, (L"OMAP2420DMAContext::HWMapDMAMemory: "
; 131  :             L"Could not acquire audio i/o channels\r\n"
; 132  :         ));

  00398	e59f33b8	 ldr         r3, [pc, #0x3B8]
  0039c	e5933440	 ldr         r3, [r3, #0x440]
  003a0	e3130902	 tst         r3, #2, 18
  003a4	0a000004	 beq         |$LN33@HWMapDMAMe|
  003a8	e59f03c0	 ldr         r0, [pc, #0x3C0]
  003ac	eb000000	 bl          NKDbgPrintfW
  003b0	e3a03001	 mov         r3, #1
  003b4	e58d3068	 str         r3, [sp, #0x68]
  003b8	ea000001	 b           |$LN34@HWMapDMAMe|
  003bc		 |$LN33@HWMapDMAMe|
  003bc	e3a03000	 mov         r3, #0
  003c0	e58d3068	 str         r3, [sp, #0x68]
  003c4		 |$LN34@HWMapDMAMe|

; 133  :         DMA_ControllerClose(m_hCont);

  003c4	e59d30a0	 ldr         r3, [sp, #0xA0]
  003c8	e28330ec	 add         r3, r3, #0xEC
  003cc	e5930000	 ldr         r0, [r3]
  003d0	e59f3378	 ldr         r3, [pc, #0x378]
  003d4	e5933000	 ldr         r3, [r3]
  003d8	e1a0e00f	 mov         lr, pc
  003dc	e12fff13	 bx          r3

; 134  :         m_hCont = NULL;

  003e0	e59d30a0	 ldr         r3, [sp, #0xA0]
  003e4	e28320ec	 add         r2, r3, #0xEC
  003e8	e3a03000	 mov         r3, #0
  003ec	e5823000	 str         r3, [r2]

; 135  :         return FALSE;

  003f0	e3a03000	 mov         r3, #0
  003f4	e58d3038	 str         r3, [sp, #0x38]
  003f8	ea0000d0	 b           |$LN21@HWMapDMAMe|
  003fc		 |$LN11@HWMapDMAMe|

; 136  :     }
; 137  : 
; 138  :     /* if we get here, then we have ownership of the two dma channels we need */
; 139  : 
; 140  :     // map DMA registers into driver address space
; 141  :     pa.HighPart= 0;

  003fc	e3a03000	 mov         r3, #0
  00400	e58d3014	 str         r3, [sp, #0x14]

; 142  :     pa.LowPart = OMAP2420_SDMA_REGS_PA;

  00404	e3a03312	 mov         r3, #0x12, 6
  00408	e3833a56	 orr         r3, r3, #0x56, 20
  0040c	e58d3010	 str         r3, [sp, #0x10]

; 143  :     volatile OMAP2420_SDMA_REGS *pDMA_Regs = (OMAP2420_SDMA_REGS *)MmMapIoSpace(pa, sizeof(OMAP2420_SDMA_REGS), FALSE);

  00410	e3a03000	 mov         r3, #0
  00414	e3a02d32	 mov         r2, #0x32, 26
  00418	e59d0010	 ldr         r0, [sp, #0x10]
  0041c	e59d1014	 ldr         r1, [sp, #0x14]
  00420	eb000000	 bl          MmMapIoSpace
  00424	e58d006c	 str         r0, [sp, #0x6C]
  00428	e59d306c	 ldr         r3, [sp, #0x6C]
  0042c	e58d3008	 str         r3, [sp, #8]

; 144  :     if (!pDMA_Regs)

  00430	e59d3008	 ldr         r3, [sp, #8]
  00434	e3530000	 cmp         r3, #0
  00438	1a00000c	 bne         |$LN10@HWMapDMAMe|

; 145  :     {
; 146  :         DEBUGMSG(ZONE_ERROR, (L"OMAP2420DMAContext::HWMapDMAMemory: "
; 147  :             L"ERROR mapping DMA registers.\n"
; 148  :         ));

  0043c	e59f3314	 ldr         r3, [pc, #0x314]
  00440	e5933440	 ldr         r3, [r3, #0x440]
  00444	e3130902	 tst         r3, #2, 18
  00448	0a000004	 beq         |$LN35@HWMapDMAMe|
  0044c	e59f0318	 ldr         r0, [pc, #0x318]
  00450	eb000000	 bl          NKDbgPrintfW
  00454	e3a03001	 mov         r3, #1
  00458	e58d3070	 str         r3, [sp, #0x70]
  0045c	ea000001	 b           |$LN36@HWMapDMAMe|
  00460		 |$LN35@HWMapDMAMe|
  00460	e3a03000	 mov         r3, #0
  00464	e58d3070	 str         r3, [sp, #0x70]
  00468		 |$LN36@HWMapDMAMe|

; 149  :         goto ErrExit;

  00468	ea000092	 b           |$LN9@HWMapDMAMe|
  0046c	ea000091	 b           |$ErrExit$37354|
  00470		 |$LN10@HWMapDMAMe|

; 150  :     }
; 151  : 
; 152  :     // enable input DMA IRQ
; 153  :     err = DMA_ControllerSet(m_hCont, DMACP_L3IntEnb, 1<< AUDIO_INPUT_DMA_CHANNEL);

  00470	e3a02008	 mov         r2, #8
  00474	e3a01001	 mov         r1, #1
  00478	e59d30a0	 ldr         r3, [sp, #0xA0]
  0047c	e28330ec	 add         r3, r3, #0xEC
  00480	e5930000	 ldr         r0, [r3]
  00484	e59f32d8	 ldr         r3, [pc, #0x2D8]
  00488	e5933000	 ldr         r3, [r3]
  0048c	e1a0e00f	 mov         lr, pc
  00490	e12fff13	 bx          r3
  00494	e58d0074	 str         r0, [sp, #0x74]
  00498	e59d3074	 ldr         r3, [sp, #0x74]
  0049c	e58d301c	 str         r3, [sp, #0x1C]

; 154  :     if (err)

  004a0	e59d301c	 ldr         r3, [sp, #0x1C]
  004a4	e3530000	 cmp         r3, #0
  004a8	0a00000c	 beq         |$LN8@HWMapDMAMe|

; 155  :     {
; 156  :         DEBUGMSG(ZONE_ERROR, (L"OMAP2420DMAContext::HWMapDMAMemory: "
; 157  :             L"ERROR setting IRQ for L3 input dma channel.\r\n"
; 158  :         ));

  004ac	e59f32a4	 ldr         r3, [pc, #0x2A4]
  004b0	e5933440	 ldr         r3, [r3, #0x440]
  004b4	e3130902	 tst         r3, #2, 18
  004b8	0a000004	 beq         |$LN37@HWMapDMAMe|
  004bc	e59f02a4	 ldr         r0, [pc, #0x2A4]
  004c0	eb000000	 bl          NKDbgPrintfW
  004c4	e3a03001	 mov         r3, #1
  004c8	e58d3078	 str         r3, [sp, #0x78]
  004cc	ea000001	 b           |$LN38@HWMapDMAMe|
  004d0		 |$LN37@HWMapDMAMe|
  004d0	e3a03000	 mov         r3, #0
  004d4	e58d3078	 str         r3, [sp, #0x78]
  004d8		 |$LN38@HWMapDMAMe|

; 159  :         goto ErrExit;

  004d8	ea000076	 b           |$LN7@HWMapDMAMe|
  004dc	ea000075	 b           |$ErrExit$37354|
  004e0		 |$LN8@HWMapDMAMe|

; 160  :     }
; 161  :     // enable output DMA IRQ
; 162  :     err = DMA_ControllerSet(m_hCont, DMACP_L2IntEnb, 1<< AUDIO_OUTPUT_DMA_CHANNEL);

  004e0	e3a02004	 mov         r2, #4
  004e4	e3a01004	 mov         r1, #4
  004e8	e59d30a0	 ldr         r3, [sp, #0xA0]
  004ec	e28330ec	 add         r3, r3, #0xEC
  004f0	e5930000	 ldr         r0, [r3]
  004f4	e59f3268	 ldr         r3, [pc, #0x268]
  004f8	e5933000	 ldr         r3, [r3]
  004fc	e1a0e00f	 mov         lr, pc
  00500	e12fff13	 bx          r3
  00504	e58d007c	 str         r0, [sp, #0x7C]
  00508	e59d307c	 ldr         r3, [sp, #0x7C]
  0050c	e58d301c	 str         r3, [sp, #0x1C]

; 163  :     if (err)

  00510	e59d301c	 ldr         r3, [sp, #0x1C]
  00514	e3530000	 cmp         r3, #0
  00518	0a00000c	 beq         |$LN6@HWMapDMAMe|

; 164  :     {
; 165  :         DEBUGMSG(ZONE_ERROR, (L"OMAP2420DMAContext::HWMapDMAMemory: "
; 166  :             L"ERROR setting IRQ for L2 output dma channel.\r\n"
; 167  :         ));

  0051c	e59f3234	 ldr         r3, [pc, #0x234]
  00520	e5933440	 ldr         r3, [r3, #0x440]
  00524	e3130902	 tst         r3, #2, 18
  00528	0a000004	 beq         |$LN39@HWMapDMAMe|
  0052c	e59f022c	 ldr         r0, [pc, #0x22C]
  00530	eb000000	 bl          NKDbgPrintfW
  00534	e3a03001	 mov         r3, #1
  00538	e58d3080	 str         r3, [sp, #0x80]
  0053c	ea000001	 b           |$LN40@HWMapDMAMe|
  00540		 |$LN39@HWMapDMAMe|
  00540	e3a03000	 mov         r3, #0
  00544	e58d3080	 str         r3, [sp, #0x80]
  00548		 |$LN40@HWMapDMAMe|

; 168  :         goto ErrExit;        

  00548	ea00005a	 b           |$LN5@HWMapDMAMe|
  0054c	ea000059	 b           |$ErrExit$37354|
  00550		 |$LN6@HWMapDMAMe|

; 169  :     }
; 170  : 
; 171  :     // get the channel register pointers
; 172  :     m_pInDMAReg  = &pDMA_Regs->CHNL_CTRL[AUDIO_INPUT_DMA_CHANNEL];

  00550	e59d3008	 ldr         r3, [sp, #8]
  00554	e2832e1a	 add         r2, r3, #0x1A, 28
  00558	e59d30a0	 ldr         r3, [sp, #0xA0]
  0055c	e28330f0	 add         r3, r3, #0xF0
  00560	e5832000	 str         r2, [r3]

; 173  :     m_pOutDMAReg = &pDMA_Regs->CHNL_CTRL[AUDIO_OUTPUT_DMA_CHANNEL];

  00564	e59d3008	 ldr         r3, [sp, #8]
  00568	e2832d05	 add         r2, r3, #5, 26
  0056c	e59d30a0	 ldr         r3, [sp, #0xA0]
  00570	e28330f4	 add         r3, r3, #0xF4
  00574	e5832000	 str         r2, [r3]

; 174  : 
; 175  :     // allocate the DMA pages
; 176  :     DMA_ADAPTER_OBJECT AdapterObject; 
; 177  :     AdapterObject.ObjectSize = sizeof(AdapterObject); 

  00578	e3a0300c	 mov         r3, #0xC
  0057c	e1cd32b0	 strh        r3, [sp, #0x20]

; 178  :     AdapterObject.InterfaceType = Internal; 

  00580	e3a03000	 mov         r3, #0
  00584	e58d3024	 str         r3, [sp, #0x24]

; 179  :     AdapterObject.BusNumber = 0; 

  00588	e3a03000	 mov         r3, #0
  0058c	e58d3028	 str         r3, [sp, #0x28]

; 180  :     m_pbDMABufOut = NULL;

  00590	e59d30a0	 ldr         r3, [sp, #0xA0]
  00594	e2832f41	 add         r2, r3, #0x41, 30
  00598	e3a03000	 mov         r3, #0
  0059c	e5823000	 str         r3, [r2]

; 181  : 
; 182  :     pbDMATemp = (PBYTE)HalAllocateCommonBuffer(&AdapterObject, dwSize, &m_paAudioDMA, FALSE);

  005a0	e3a03000	 mov         r3, #0
  005a4	e59d20a0	 ldr         r2, [sp, #0xA0]
  005a8	e28220f8	 add         r2, r2, #0xF8
  005ac	e59d10a4	 ldr         r1, [sp, #0xA4]
  005b0	e28d0020	 add         r0, sp, #0x20
  005b4	eb000000	 bl          HalAllocateCommonBuffer
  005b8	e58d0084	 str         r0, [sp, #0x84]
  005bc	e59d3084	 ldr         r3, [sp, #0x84]
  005c0	e58d300c	 str         r3, [sp, #0xC]

; 183  :     if (!pbDMATemp)

  005c4	e59d300c	 ldr         r3, [sp, #0xC]
  005c8	e3530000	 cmp         r3, #0
  005cc	1a00000c	 bne         |$LN4@HWMapDMAMe|

; 184  :     {
; 185  :         DEBUGMSG(ZONE_ERROR, (L"OMAP2420DMAContext::HWMapDMAMemory: "
; 186  :             L"ERROR mapping DMA memory.\n"
; 187  :         ));

  005d0	e59f3180	 ldr         r3, [pc, #0x180]
  005d4	e5933440	 ldr         r3, [r3, #0x440]
  005d8	e3130902	 tst         r3, #2, 18
  005dc	0a000004	 beq         |$LN41@HWMapDMAMe|
  005e0	e59f0174	 ldr         r0, [pc, #0x174]
  005e4	eb000000	 bl          NKDbgPrintfW
  005e8	e3a03001	 mov         r3, #1
  005ec	e58d3088	 str         r3, [sp, #0x88]
  005f0	ea000001	 b           |$LN42@HWMapDMAMe|
  005f4		 |$LN41@HWMapDMAMe|
  005f4	e3a03000	 mov         r3, #0
  005f8	e58d3088	 str         r3, [sp, #0x88]
  005fc		 |$LN42@HWMapDMAMe|

; 188  :         goto ErrExit;

  005fc	ea00002d	 b           |$LN3@HWMapDMAMe|
  00600	ea00002c	 b           |$ErrExit$37354|
  00604		 |$LN4@HWMapDMAMe|

; 189  :     }
; 190  : 
; 191  :     m_pbDMABufOut = m_pbDMABufIn = pbDMATemp;

  00604	e59d30a0	 ldr         r3, [sp, #0xA0]
  00608	e2832c01	 add         r2, r3, #1, 24
  0060c	e59d300c	 ldr         r3, [sp, #0xC]
  00610	e5823000	 str         r3, [r2]
  00614	e59d30a0	 ldr         r3, [sp, #0xA0]
  00618	e2832f41	 add         r2, r3, #0x41, 30
  0061c	e59d300c	 ldr         r3, [sp, #0xC]
  00620	e5823000	 str         r3, [r2]

; 192  : 
; 193  : #ifdef MIXER_CACHEDMEM
; 194  :     // Map DMA buffer also to cached memory for DMA out
; 195  :     // Mixer will call cache flush after block is completed
; 196  :     m_pbDMABufOut = (PBYTE)MmMapIoSpace(m_paAudioDMA, dwSize, TRUE);

  00624	e3a03001	 mov         r3, #1
  00628	e59d20a4	 ldr         r2, [sp, #0xA4]
  0062c	e59d10a0	 ldr         r1, [sp, #0xA0]
  00630	e28110f8	 add         r1, r1, #0xF8
  00634	e58d108c	 str         r1, [sp, #0x8C]
  00638	e59d108c	 ldr         r1, [sp, #0x8C]
  0063c	e5910000	 ldr         r0, [r1]
  00640	e5911004	 ldr         r1, [r1, #4]
  00644	eb000000	 bl          MmMapIoSpace
  00648	e58d0090	 str         r0, [sp, #0x90]
  0064c	e59d30a0	 ldr         r3, [sp, #0xA0]
  00650	e2832f41	 add         r2, r3, #0x41, 30
  00654	e59d3090	 ldr         r3, [sp, #0x90]
  00658	e5823000	 str         r3, [r2]

; 197  :     if (!m_pbDMABufOut)

  0065c	e59d30a0	 ldr         r3, [sp, #0xA0]
  00660	e2833f41	 add         r3, r3, #0x41, 30
  00664	e5933000	 ldr         r3, [r3]
  00668	e3530000	 cmp         r3, #0
  0066c	1a00000e	 bne         |$LN2@HWMapDMAMe|

; 198  :     {
; 199  :         DEBUGMSG(ZONE_ERROR, (L"OMAP2420DMAContext::HWMapDMAMemory: "
; 200  :             L"ERROR mapping DMA buffer to cached memory, using uncached.\n"
; 201  :         ));

  00670	e59f30e0	 ldr         r3, [pc, #0xE0]
  00674	e5933440	 ldr         r3, [r3, #0x440]
  00678	e3130902	 tst         r3, #2, 18
  0067c	0a000004	 beq         |$LN43@HWMapDMAMe|
  00680	e59f00cc	 ldr         r0, [pc, #0xCC]
  00684	eb000000	 bl          NKDbgPrintfW
  00688	e3a03001	 mov         r3, #1
  0068c	e58d3094	 str         r3, [sp, #0x94]
  00690	ea000001	 b           |$LN44@HWMapDMAMe|
  00694		 |$LN43@HWMapDMAMe|
  00694	e3a03000	 mov         r3, #0
  00698	e58d3094	 str         r3, [sp, #0x94]
  0069c		 |$LN44@HWMapDMAMe|

; 202  :         m_pbDMABufOut = pbDMATemp;

  0069c	e59d30a0	 ldr         r3, [sp, #0xA0]
  006a0	e2832f41	 add         r2, r3, #0x41, 30
  006a4	e59d300c	 ldr         r3, [sp, #0xC]
  006a8	e5823000	 str         r3, [r2]
  006ac		 |$LN2@HWMapDMAMe|

; 203  :     }
; 204  : #endif
; 205  : 
; 206  :     return TRUE;

  006ac	e3a03001	 mov         r3, #1
  006b0	e58d3038	 str         r3, [sp, #0x38]
  006b4	ea000021	 b           |$LN21@HWMapDMAMe|
  006b8		 |$LN3@HWMapDMAMe|
  006b8		 |$LN5@HWMapDMAMe|
  006b8		 |$LN7@HWMapDMAMe|
  006b8		 |$LN9@HWMapDMAMe|
  006b8		 |$ErrExit$37354|

; 207  : 
; 208  : ErrExit:
; 209  : 
; 210  :     m_pInDMAReg  =NULL;

  006b8	e59d30a0	 ldr         r3, [sp, #0xA0]
  006bc	e28320f0	 add         r2, r3, #0xF0
  006c0	e3a03000	 mov         r3, #0
  006c4	e5823000	 str         r3, [r2]

; 211  :     m_pOutDMAReg =NULL;

  006c8	e59d30a0	 ldr         r3, [sp, #0xA0]
  006cc	e28320f4	 add         r2, r3, #0xF4
  006d0	e3a03000	 mov         r3, #0
  006d4	e5823000	 str         r3, [r2]

; 212  :     m_pbDMABufOut=NULL;

  006d8	e59d30a0	 ldr         r3, [sp, #0xA0]
  006dc	e2832f41	 add         r2, r3, #0x41, 30
  006e0	e3a03000	 mov         r3, #0
  006e4	e5823000	 str         r3, [r2]

; 213  :     m_pbDMABufIn =NULL;

  006e8	e59d30a0	 ldr         r3, [sp, #0xA0]
  006ec	e2832c01	 add         r2, r3, #1, 24
  006f0	e3a03000	 mov         r3, #0
  006f4	e5823000	 str         r3, [r2]

; 214  : 
; 215  :     if (m_hCont)

  006f8	e59d30a0	 ldr         r3, [sp, #0xA0]
  006fc	e28330ec	 add         r3, r3, #0xEC
  00700	e5933000	 ldr         r3, [r3]
  00704	e3530000	 cmp         r3, #0
  00708	0a00000a	 beq         |$LN1@HWMapDMAMe|

; 216  :     {
; 217  :         DMA_ControllerClose(m_hCont);

  0070c	e59d30a0	 ldr         r3, [sp, #0xA0]
  00710	e28330ec	 add         r3, r3, #0xEC
  00714	e5930000	 ldr         r0, [r3]
  00718	e59f3030	 ldr         r3, [pc, #0x30]
  0071c	e5933000	 ldr         r3, [r3]
  00720	e1a0e00f	 mov         lr, pc
  00724	e12fff13	 bx          r3

; 218  :         m_hCont = NULL;

  00728	e59d30a0	 ldr         r3, [sp, #0xA0]
  0072c	e28320ec	 add         r2, r3, #0xEC
  00730	e3a03000	 mov         r3, #0
  00734	e5823000	 str         r3, [r2]
  00738		 |$LN1@HWMapDMAMe|

; 219  :     }
; 220  : 
; 221  :     return FALSE;

  00738	e3a03000	 mov         r3, #0
  0073c	e58d3038	 str         r3, [sp, #0x38]
  00740		 |$LN21@HWMapDMAMe|

; 222  : }

  00740	e59d0038	 ldr         r0, [sp, #0x38]
  00744	e28dd098	 add         sp, sp, #0x98
  00748	e89d6000	 ldmia       sp, {sp, lr}
  0074c	e12fff1e	 bx          lr
  00750		 |$LN48@HWMapDMAMe|
  00750		 |$LN49@HWMapDMAMe|
  00750	00000000	 DCD         |__imp_DMA_ControllerClose|
  00754		 |$LN50@HWMapDMAMe|
  00754	00000000	 DCD         |??_C@_1MA@BPIDEJOM@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@|
  00758		 |$LN51@HWMapDMAMe|
  00758	00000000	 DCD         |dpCurSettings|
  0075c		 |$LN52@HWMapDMAMe|
  0075c	00000000	 DCD         |??_C@_1HO@BGKCDEND@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@|
  00760		 |$LN53@HWMapDMAMe|
  00760	00000000	 DCD         |??_C@_1KG@OPLHHFIK@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@|
  00764		 |$LN54@HWMapDMAMe|
  00764	00000000	 DCD         |__imp_DMA_ControllerSet|
  00768		 |$LN55@HWMapDMAMe|
  00768	00000000	 DCD         |??_C@_1KE@FCABAAAD@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@|
  0076c		 |$LN56@HWMapDMAMe|
  0076c	00000000	 DCD         |??_C@_1IE@DHOMDDMN@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@|
  00770		 |$LN57@HWMapDMAMe|
  00770	00000000	 DCD         |??_C@_1JG@KCCFCNPL@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@|
  00774		 |$LN58@HWMapDMAMe|
  00774	00000000	 DCD         |__imp_DMA_ControllerAcquireChannels|
  00778		 |$LN59@HWMapDMAMe|
  00778	00000000	 DCD         |??_C@_1JM@KCKCBIEK@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@|
  0077c		 |$LN60@HWMapDMAMe|
  0077c	00000000	 DCD         |__imp_DMA_ControllerOpen|
  00780		 |$LN61@HWMapDMAMe|
  00780	00000000	 DCD         |??_C@_1JM@PJODANJJ@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@|
  00784		 |$LN62@HWMapDMAMe|
  00784	00000000	 DCD         |??_C@_06JIODDOFH@System?$AA@|
  00788		 |$LN63@HWMapDMAMe|
  00788	00000000	 DCD         |??_C@_1KI@IHKCMMFM@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@|
  0078c		 |$LN64@HWMapDMAMe|
  0078c	00000000	 DCD         |__imp_DMA_ControllerEnum|
  00790		 |$LN65@HWMapDMAMe|
  00790	00000000	 DCD         |??_C@_1JA@EEIHDCMD@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@|
  00794		 |$LN66@HWMapDMAMe|
  00794	00000000	 DCD         |??_C@_1MK@PBIECIJF@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@|
  00798		 |$M37920|

			 ENDP  ; |?HWMapDMAMemory@OMAP2420DMAContext@@UAAHK@Z|, OMAP2420DMAContext::HWMapDMAMemory

	EXPORT	|??_C@_1FA@EGKNLLFH@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAI?$AAn?$AAi?$AAt?$AAI?$AAn?$AAp?$AAu?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@KNPCEABC@?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@OHMOLCJ@?$AA?$CL?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAI?$AAn?$AAi?$AAt?$AAI?$AAn?$AAp?$AAu?$AAt@| [ DATA ] ; `string'

  00010			 AREA	 |.pdata|, PDATA
|$T37950| DCD	|$LN9@HWInitInpu|
	DCD	0x40006604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@EGKNLLFH@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAI?$AAn?$AAi?$AAt?$AAI?$AAn?$AAp?$AAu?$AAt@| DCB "-"
	DCB	0x0, "O", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4"
	DCB	0x0, "2", 0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, ":", 0x0, ":", 0x0, "H", 0x0, "W", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "I", 0x0, "n", 0x0, "p", 0x0, "u"
	DCB	0x0, "t", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "(", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@KNPCEABC@?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "p", 0x0, "u", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@OHMOLCJ@?$AA?$CL?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAI?$AAn?$AAi?$AAt?$AAI?$AAn?$AAp?$AAu?$AAt@| DCB "+"
	DCB	0x0, "O", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4"
	DCB	0x0, "2", 0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, ":", 0x0, ":", 0x0, "H", 0x0, "W", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "I", 0x0, "n", 0x0, "p", 0x0, "u"
	DCB	0x0, "t", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "(", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00798			 AREA	 |.text|, CODE, ARM

  00798		 |?HWInitInputDMA@OMAP2420DMAContext@@UAAXXZ| PROC ; OMAP2420DMAContext::HWInitInputDMA

; 280  : {

  00798		 |$LN9@HWInitInpu|
  00798	e1a0c00d	 mov         r12, sp
  0079c	e92d0001	 stmdb       sp!, {r0}
  007a0	e92d5000	 stmdb       sp!, {r12, lr}
  007a4	e24dd014	 sub         sp, sp, #0x14
  007a8		 |$M37947|

; 281  :     OMAP2420_DMA_REGS  *pDMAReg;
; 282  :     DWORD   dwAddr, dwVal;
; 283  : 
; 284  :     DEBUGMSG(ZONE_FUNCTION, (L"+OMAP2420DMAContext::HWInitInputDMA()\r\n"));

  007a8	e59f3170	 ldr         r3, [pc, #0x170]
  007ac	e5933440	 ldr         r3, [r3, #0x440]
  007b0	e3130a02	 tst         r3, #2, 20
  007b4	0a000004	 beq         |$LN3@HWInitInpu|
  007b8	e59f016c	 ldr         r0, [pc, #0x16C]
  007bc	eb000000	 bl          NKDbgPrintfW
  007c0	e3a03001	 mov         r3, #1
  007c4	e58d300c	 str         r3, [sp, #0xC]
  007c8	ea000001	 b           |$LN4@HWInitInpu|
  007cc		 |$LN3@HWInitInpu|
  007cc	e3a03000	 mov         r3, #0
  007d0	e58d300c	 str         r3, [sp, #0xC]
  007d4		 |$LN4@HWInitInpu|

; 285  : 
; 286  :     pDMAReg = m_pInDMAReg;

  007d4	e59d301c	 ldr         r3, [sp, #0x1C]
  007d8	e28330f0	 add         r3, r3, #0xF0
  007dc	e5933000	 ldr         r3, [r3]
  007e0	e58d3008	 str         r3, [sp, #8]

; 287  : 
; 288  :     // disable the channel, clear the configuration
; 289  :     SETREG32(&pDMAReg->DMA4_CCR, 0);

  007e4	e59d3008	 ldr         r3, [sp, #8]
  007e8	e5932000	 ldr         r2, [r3]
  007ec	e59d3008	 ldr         r3, [sp, #8]
  007f0	e5832000	 str         r2, [r3]

; 290  : 
; 291  :     // link this channel to itself to get continuous operation
; 292  :     OUTREG32(&pDMAReg->DMA4_CLNK_CTRL, AUDIO_INPUT_DMA_CHANNEL);

  007f4	e59d3008	 ldr         r3, [sp, #8]
  007f8	e2832004	 add         r2, r3, #4
  007fc	e3a03003	 mov         r3, #3
  00800	e5823000	 str         r3, [r2]

; 293  : 
; 294  :     // 16 bits scalar, no pack, no burst
; 295  :     OUTREG32(&pDMAReg->DMA4_CSDP, DMA_CSDP_DATATYPE_16BIT);

  00804	e59d3008	 ldr         r3, [sp, #8]
  00808	e2832010	 add         r2, r3, #0x10
  0080c	e3a03001	 mov         r3, #1
  00810	e5823000	 str         r3, [r2]

; 296  : 
; 297  :     // request number, post incremented destination address, high priority
; 298  :     dwVal = DMA_CCR_SYNC(AUDIO_INPUT_DMA_REQ) | DMA_CCR_DST_AMODE_POST_INC | DMA_CCR_PRIO;

  00814	e3a03921	 mov         r3, #0x21, 18
  00818	e3833042	 orr         r3, r3, #0x42
  0081c	e58d3000	 str         r3, [sp]

; 299  :     OUTREG32(&pDMAReg->DMA4_CCR, dwVal);

  00820	e59d2000	 ldr         r2, [sp]
  00824	e59d3008	 ldr         r3, [sp, #8]
  00828	e5832000	 str         r2, [r3]

; 300  : 
; 301  :     // source address
; 302  :     OUTREG32(&pDMAReg->DMA4_CSSA, AUDIO_INPUT_DMA_SOURCE);

  0082c	e59d3008	 ldr         r3, [sp, #8]
  00830	e283201c	 add         r2, r3, #0x1C
  00834	e59f30ec	 ldr         r3, [pc, #0xEC]
  00838	e5823000	 str         r3, [r2]

; 303  : 
; 304  :     // destination address
; 305  :     dwAddr = m_paAudioDMA.LowPart + AUDIO_DMA_PAGES * AUDIO_DMA_PAGE_SIZE;      

  0083c	e59d301c	 ldr         r3, [sp, #0x1C]
  00840	e28330f8	 add         r3, r3, #0xF8
  00844	e5933000	 ldr         r3, [r3]
  00848	e2833901	 add         r3, r3, #1, 18
  0084c	e58d3004	 str         r3, [sp, #4]

; 306  :     OUTREG32(&pDMAReg->DMA4_CDSA, dwAddr);

  00850	e59d3008	 ldr         r3, [sp, #8]
  00854	e2832020	 add         r2, r3, #0x20
  00858	e59d3004	 ldr         r3, [sp, #4]
  0085c	e5823000	 str         r3, [r2]

; 307  : 
; 308  :     // interrupt conditions
; 309  :     dwVal = DMA_CICR_FRAME_IE | DMA_CICR_HALF_IE | DMA_CICR_DROP_IE;

  00860	e3a0300e	 mov         r3, #0xE
  00864	e58d3000	 str         r3, [sp]

; 310  :     OUTREG32(&pDMAReg->DMA4_CICR, dwVal);

  00868	e59d3008	 ldr         r3, [sp, #8]
  0086c	e2832008	 add         r2, r3, #8
  00870	e59d3000	 ldr         r3, [sp]
  00874	e5823000	 str         r3, [r2]

; 311  : 
; 312  :     // number of samples per frame
; 313  :     OUTREG32(&pDMAReg->DMA4_CEN, AUDIO_DMA_PAGE_SIZE);

  00878	e59d3008	 ldr         r3, [sp, #8]
  0087c	e2832014	 add         r2, r3, #0x14
  00880	e3a03a02	 mov         r3, #2, 20
  00884	e5823000	 str         r3, [r2]

; 314  : 
; 315  :     // number of frames per block
; 316  :     OUTREG32(&pDMAReg->DMA4_CFN, 1);

  00888	e59d3008	 ldr         r3, [sp, #8]
  0088c	e2832018	 add         r2, r3, #0x18
  00890	e3a03001	 mov         r3, #1
  00894	e5823000	 str         r3, [r2]

; 317  : 
; 318  :     // source frame index and element index
; 319  :     OUTREG32(&pDMAReg->DMA4_CSFI, 0);

  00898	e59d3008	 ldr         r3, [sp, #8]
  0089c	e2832028	 add         r2, r3, #0x28
  008a0	e3a03000	 mov         r3, #0
  008a4	e5823000	 str         r3, [r2]

; 320  :     OUTREG32(&pDMAReg->DMA4_CSEI, 0);

  008a8	e59d3008	 ldr         r3, [sp, #8]
  008ac	e2832024	 add         r2, r3, #0x24
  008b0	e3a03000	 mov         r3, #0
  008b4	e5823000	 str         r3, [r2]

; 321  : 
; 322  :     // destination frame index and element index
; 323  :     OUTREG32(&pDMAReg->DMA4_CDFI, 0);

  008b8	e59d3008	 ldr         r3, [sp, #8]
  008bc	e2832030	 add         r2, r3, #0x30
  008c0	e3a03000	 mov         r3, #0
  008c4	e5823000	 str         r3, [r2]

; 324  :     OUTREG32(&pDMAReg->DMA4_CDEI, 0);

  008c8	e59d3008	 ldr         r3, [sp, #8]
  008cc	e283202c	 add         r2, r3, #0x2C
  008d0	e3a03000	 mov         r3, #0
  008d4	e5823000	 str         r3, [r2]

; 325  : 
; 326  : #if defined(DEBUG)
; 327  :     DumpDMA_LC(L"Init Input", pDMAReg);

  008d8	e59d1008	 ldr         r1, [sp, #8]
  008dc	e59f0040	 ldr         r0, [pc, #0x40]
  008e0	eb000000	 bl          |?DumpDMA_LC@@YAXPAGPCUOMAP2420_DMA_REGS@@@Z|

; 328  : #endif
; 329  : 
; 330  :     DEBUGMSG(ZONE_FUNCTION, (L"-OMAP2420DMAContext::HWInitInputDMA()\r\n"));

  008e4	e59f3034	 ldr         r3, [pc, #0x34]
  008e8	e5933440	 ldr         r3, [r3, #0x440]
  008ec	e3130a02	 tst         r3, #2, 20
  008f0	0a000004	 beq         |$LN5@HWInitInpu|
  008f4	e59f0020	 ldr         r0, [pc, #0x20]
  008f8	eb000000	 bl          NKDbgPrintfW
  008fc	e3a03001	 mov         r3, #1
  00900	e58d3010	 str         r3, [sp, #0x10]
  00904	ea000001	 b           |$LN6@HWInitInpu|
  00908		 |$LN5@HWInitInpu|
  00908	e3a03000	 mov         r3, #0
  0090c	e58d3010	 str         r3, [sp, #0x10]
  00910		 |$LN6@HWInitInpu|

; 331  : }

  00910	e28dd014	 add         sp, sp, #0x14
  00914	e89d6000	 ldmia       sp, {sp, lr}
  00918	e12fff1e	 bx          lr
  0091c		 |$LN10@HWInitInpu|
  0091c		 |$LN11@HWInitInpu|
  0091c	00000000	 DCD         |??_C@_1FA@EGKNLLFH@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAI?$AAn?$AAi?$AAt?$AAI?$AAn?$AAp?$AAu?$AAt@|
  00920		 |$LN12@HWInitInpu|
  00920	00000000	 DCD         |dpCurSettings|
  00924		 |$LN13@HWInitInpu|
  00924	00000000	 DCD         |??_C@_1BG@KNPCEABC@?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?$AA@|
  00928		 |$LN14@HWInitInpu|
  00928	48076004	 DCD         0x48076004
  0092c		 |$LN15@HWInitInpu|
  0092c	00000000	 DCD         |??_C@_1FA@OHMOLCJ@?$AA?$CL?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAI?$AAn?$AAi?$AAt?$AAI?$AAn?$AAp?$AAu?$AAt@|
  00930		 |$M37948|

			 ENDP  ; |?HWInitInputDMA@OMAP2420DMAContext@@UAAXXZ|, OMAP2420DMAContext::HWInitInputDMA

	EXPORT	|??_C@_1FA@IPPOPCOM@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAW?$AAI?$AAn?$AAi?$AAt?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@OFGKNEIF@?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@ONDAJHMA@?$AA?$CL?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAI?$AAn?$AAi?$AAt?$AAO?$AAu?$AAt?$AAp?$AAu@| [ DATA ] ; `string'

  00018			 AREA	 |.pdata|, PDATA
|$T37965| DCD	|$LN9@HWInitOutp|
	DCD	0x40006504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@IPPOPCOM@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAW?$AAI?$AAn?$AAi?$AAt?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt@| DCB "-"
	DCB	0x0, "O", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4"
	DCB	0x0, "2", 0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, ":", 0x0, ":", 0x0, "W", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "O", 0x0, "u", 0x0, "t", 0x0, "p", 0x0, "u"
	DCB	0x0, "t", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "(", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@OFGKNEIF@?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "O", 0x0, "u"
	DCB	0x0, "t", 0x0, "p", 0x0, "u", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@ONDAJHMA@?$AA?$CL?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAI?$AAn?$AAi?$AAt?$AAO?$AAu?$AAt?$AAp?$AAu@| DCB "+"
	DCB	0x0, "O", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4"
	DCB	0x0, "2", 0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, ":", 0x0, ":", 0x0, "H", 0x0, "W", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "O", 0x0, "u", 0x0, "t", 0x0, "p"
	DCB	0x0, "u", 0x0, "t", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "("
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00930			 AREA	 |.text|, CODE, ARM

  00930		 |?HWInitOutputDMA@OMAP2420DMAContext@@UAAXXZ| PROC ; OMAP2420DMAContext::HWInitOutputDMA

; 342  : {

  00930		 |$LN9@HWInitOutp|
  00930	e1a0c00d	 mov         r12, sp
  00934	e92d0001	 stmdb       sp!, {r0}
  00938	e92d5000	 stmdb       sp!, {r12, lr}
  0093c	e24dd014	 sub         sp, sp, #0x14
  00940		 |$M37962|

; 343  :     OMAP2420_DMA_REGS  *pDMAReg;
; 344  :     DWORD   dwAddr, dwVal;
; 345  : 
; 346  :     DEBUGMSG(ZONE_FUNCTION, (L"+OMAP2420DMAContext::HWInitOutputDMA()\r\n"));

  00940	e59f316c	 ldr         r3, [pc, #0x16C]
  00944	e5933440	 ldr         r3, [r3, #0x440]
  00948	e3130a02	 tst         r3, #2, 20
  0094c	0a000004	 beq         |$LN3@HWInitOutp|
  00950	e59f0168	 ldr         r0, [pc, #0x168]
  00954	eb000000	 bl          NKDbgPrintfW
  00958	e3a03001	 mov         r3, #1
  0095c	e58d300c	 str         r3, [sp, #0xC]
  00960	ea000001	 b           |$LN4@HWInitOutp|
  00964		 |$LN3@HWInitOutp|
  00964	e3a03000	 mov         r3, #0
  00968	e58d300c	 str         r3, [sp, #0xC]
  0096c		 |$LN4@HWInitOutp|

; 347  : 
; 348  :     pDMAReg = m_pOutDMAReg;

  0096c	e59d301c	 ldr         r3, [sp, #0x1C]
  00970	e28330f4	 add         r3, r3, #0xF4
  00974	e5933000	 ldr         r3, [r3]
  00978	e58d3008	 str         r3, [sp, #8]

; 349  : 
; 350  :     // disable the channel, clear the configuration
; 351  :     SETREG32(&pDMAReg->DMA4_CCR, 0);

  0097c	e59d3008	 ldr         r3, [sp, #8]
  00980	e5932000	 ldr         r2, [r3]
  00984	e59d3008	 ldr         r3, [sp, #8]
  00988	e5832000	 str         r2, [r3]

; 352  : 
; 353  :     // link this channel to itself to get continuous operation
; 354  :     OUTREG32(&pDMAReg->DMA4_CLNK_CTRL, AUDIO_OUTPUT_DMA_CHANNEL);

  0098c	e59d3008	 ldr         r3, [sp, #8]
  00990	e2832004	 add         r2, r3, #4
  00994	e3a03002	 mov         r3, #2
  00998	e5823000	 str         r3, [r2]

; 355  : 
; 356  :     // 16 bits scalar, no pack, no burst
; 357  :     OUTREG32(&pDMAReg->DMA4_CSDP, DMA_CSDP_DATATYPE_16BIT);

  0099c	e59d3008	 ldr         r3, [sp, #8]
  009a0	e2832010	 add         r2, r3, #0x10
  009a4	e3a03001	 mov         r3, #1
  009a8	e5823000	 str         r3, [r2]

; 358  : 
; 359  :     // request number, post incremented source address, high priority
; 360  :     dwVal = DMA_CCR_SYNC(AUDIO_OUTPUT_DMA_REQ) | DMA_CCR_SRC_AMODE_POST_INC | DMA_CCR_PRIO;

  009ac	e3a03a81	 mov         r3, #0x81, 20
  009b0	e3833041	 orr         r3, r3, #0x41
  009b4	e58d3000	 str         r3, [sp]

; 361  :     OUTREG32(&pDMAReg->DMA4_CCR, dwVal);

  009b8	e59d2000	 ldr         r2, [sp]
  009bc	e59d3008	 ldr         r3, [sp, #8]
  009c0	e5832000	 str         r2, [r3]

; 362  : 
; 363  :     // source address
; 364  :     dwAddr = m_paAudioDMA.LowPart;     

  009c4	e59d301c	 ldr         r3, [sp, #0x1C]
  009c8	e28330f8	 add         r3, r3, #0xF8
  009cc	e5933000	 ldr         r3, [r3]
  009d0	e58d3004	 str         r3, [sp, #4]

; 365  :     OUTREG32(&pDMAReg->DMA4_CSSA, dwAddr);

  009d4	e59d3008	 ldr         r3, [sp, #8]
  009d8	e283201c	 add         r2, r3, #0x1C
  009dc	e59d3004	 ldr         r3, [sp, #4]
  009e0	e5823000	 str         r3, [r2]

; 366  : 
; 367  :     // destination address
; 368  :     OUTREG32(&pDMAReg->DMA4_CDSA, AUDIO_OUTPUT_DMA_DEST);

  009e4	e59d3008	 ldr         r3, [sp, #8]
  009e8	e2832020	 add         r2, r3, #0x20
  009ec	e59f30c8	 ldr         r3, [pc, #0xC8]
  009f0	e5823000	 str         r3, [r2]

; 369  : 
; 370  :     // interrupt conditions
; 371  :     dwVal = DMA_CICR_FRAME_IE | DMA_CICR_HALF_IE | DMA_CICR_DROP_IE;

  009f4	e3a0300e	 mov         r3, #0xE
  009f8	e58d3000	 str         r3, [sp]

; 372  :     OUTREG32(&pDMAReg->DMA4_CICR, dwVal);

  009fc	e59d3008	 ldr         r3, [sp, #8]
  00a00	e2832008	 add         r2, r3, #8
  00a04	e59d3000	 ldr         r3, [sp]
  00a08	e5823000	 str         r3, [r2]

; 373  : 
; 374  :     // number of samples per frame
; 375  :     OUTREG32(&pDMAReg->DMA4_CEN, AUDIO_DMA_PAGE_SIZE);

  00a0c	e59d3008	 ldr         r3, [sp, #8]
  00a10	e2832014	 add         r2, r3, #0x14
  00a14	e3a03a02	 mov         r3, #2, 20
  00a18	e5823000	 str         r3, [r2]

; 376  : 
; 377  :     // number of frames per block
; 378  :     OUTREG32(&pDMAReg->DMA4_CFN, 1);

  00a1c	e59d3008	 ldr         r3, [sp, #8]
  00a20	e2832018	 add         r2, r3, #0x18
  00a24	e3a03001	 mov         r3, #1
  00a28	e5823000	 str         r3, [r2]

; 379  : 
; 380  :     // source frame index and element index
; 381  :     OUTREG32(&pDMAReg->DMA4_CSFI, 0);

  00a2c	e59d3008	 ldr         r3, [sp, #8]
  00a30	e2832028	 add         r2, r3, #0x28
  00a34	e3a03000	 mov         r3, #0
  00a38	e5823000	 str         r3, [r2]

; 382  :     OUTREG32(&pDMAReg->DMA4_CSEI, 0);

  00a3c	e59d3008	 ldr         r3, [sp, #8]
  00a40	e2832024	 add         r2, r3, #0x24
  00a44	e3a03000	 mov         r3, #0
  00a48	e5823000	 str         r3, [r2]

; 383  : 
; 384  :     // destination frame index and element index
; 385  :     OUTREG32(&pDMAReg->DMA4_CDFI, 0);

  00a4c	e59d3008	 ldr         r3, [sp, #8]
  00a50	e2832030	 add         r2, r3, #0x30
  00a54	e3a03000	 mov         r3, #0
  00a58	e5823000	 str         r3, [r2]

; 386  :     OUTREG32(&pDMAReg->DMA4_CDEI, 0);

  00a5c	e59d3008	 ldr         r3, [sp, #8]
  00a60	e283202c	 add         r2, r3, #0x2C
  00a64	e3a03000	 mov         r3, #0
  00a68	e5823000	 str         r3, [r2]

; 387  : 
; 388  : #if defined(DEBUG)
; 389  :     DumpDMA_LC(L"Init Output", pDMAReg);

  00a6c	e59d1008	 ldr         r1, [sp, #8]
  00a70	e59f0040	 ldr         r0, [pc, #0x40]
  00a74	eb000000	 bl          |?DumpDMA_LC@@YAXPAGPCUOMAP2420_DMA_REGS@@@Z|

; 390  : #endif
; 391  : 
; 392  :     DEBUGMSG(ZONE_FUNCTION, (L"-OMAP2420DMAContext::WInitOutputDMA()\r\n"));

  00a78	e59f3034	 ldr         r3, [pc, #0x34]
  00a7c	e5933440	 ldr         r3, [r3, #0x440]
  00a80	e3130a02	 tst         r3, #2, 20
  00a84	0a000004	 beq         |$LN5@HWInitOutp|
  00a88	e59f0020	 ldr         r0, [pc, #0x20]
  00a8c	eb000000	 bl          NKDbgPrintfW
  00a90	e3a03001	 mov         r3, #1
  00a94	e58d3010	 str         r3, [sp, #0x10]
  00a98	ea000001	 b           |$LN6@HWInitOutp|
  00a9c		 |$LN5@HWInitOutp|
  00a9c	e3a03000	 mov         r3, #0
  00aa0	e58d3010	 str         r3, [sp, #0x10]
  00aa4		 |$LN6@HWInitOutp|

; 393  : }

  00aa4	e28dd014	 add         sp, sp, #0x14
  00aa8	e89d6000	 ldmia       sp, {sp, lr}
  00aac	e12fff1e	 bx          lr
  00ab0		 |$LN10@HWInitOutp|
  00ab0		 |$LN11@HWInitOutp|
  00ab0	00000000	 DCD         |??_C@_1FA@IPPOPCOM@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAW?$AAI?$AAn?$AAi?$AAt?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt@|
  00ab4		 |$LN12@HWInitOutp|
  00ab4	00000000	 DCD         |dpCurSettings|
  00ab8		 |$LN13@HWInitOutp|
  00ab8	00000000	 DCD         |??_C@_1BI@OFGKNEIF@?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?$AA@|
  00abc		 |$LN14@HWInitOutp|
  00abc	4807600c	 DCD         0x4807600c
  00ac0		 |$LN15@HWInitOutp|
  00ac0	00000000	 DCD         |??_C@_1FC@ONDAJHMA@?$AA?$CL?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAI?$AAn?$AAi?$AAt?$AAO?$AAu?$AAt?$AAp?$AAu@|
  00ac4		 |$M37963|

			 ENDP  ; |?HWInitOutputDMA@OMAP2420DMAContext@@UAAXXZ|, OMAP2420DMAContext::HWInitOutputDMA

	EXPORT	|??_C@_1FC@KCOHKOEG@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAa?$AAr?$AAt?$AAI?$AAn?$AAp?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@NLPKEBGH@?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@JBOBMCMI@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAa?$AAr?$AAt?$AAI?$AAn?$AAp?$AAu?$AAt@| [ DATA ] ; `string'

  00020			 AREA	 |.pdata|, PDATA
|$T37980| DCD	|$LN9@HWStartInp|
	DCD	0x40003f04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@KCOHKOEG@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAa?$AAr?$AAt?$AAI?$AAn?$AAp?$AAu@| DCB "-"
	DCB	0x0, "O", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4"
	DCB	0x0, "2", 0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, ":", 0x0, ":", 0x0, "H", 0x0, "W", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "r", 0x0, "t", 0x0, "I", 0x0, "n", 0x0, "p"
	DCB	0x0, "u", 0x0, "t", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "("
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@NLPKEBGH@?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?$AA@| DCB "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "p", 0x0, "u", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@JBOBMCMI@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAa?$AAr?$AAt?$AAI?$AAn?$AAp?$AAu?$AAt@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "H", 0x0, "W", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "r", 0x0, "t", 0x0, "I", 0x0, "n", 0x0, "p", 0x0, "u"
	DCB	0x0, "t", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "(", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00ac4			 AREA	 |.text|, CODE, ARM

  00ac4		 |?HWStartInputDMA@OMAP2420DMAContext@@UAAXXZ| PROC ; OMAP2420DMAContext::HWStartInputDMA

; 404  : {

  00ac4		 |$LN9@HWStartInp|
  00ac4	e1a0c00d	 mov         r12, sp
  00ac8	e92d0001	 stmdb       sp!, {r0}
  00acc	e92d5000	 stmdb       sp!, {r12, lr}
  00ad0	e24dd00c	 sub         sp, sp, #0xC
  00ad4		 |$M37977|

; 405  :     OMAP2420_DMA_REGS  *pDMAReg;
; 406  : 
; 407  :     DEBUGMSG(ZONE_FUNCTION, (L"OMAP2420DMAContext::HWStartInputDMA()\r\n"));

  00ad4	e59f30d8	 ldr         r3, [pc, #0xD8]
  00ad8	e5933440	 ldr         r3, [r3, #0x440]
  00adc	e3130a02	 tst         r3, #2, 20
  00ae0	0a000004	 beq         |$LN3@HWStartInp|
  00ae4	e59f00d0	 ldr         r0, [pc, #0xD0]
  00ae8	eb000000	 bl          NKDbgPrintfW
  00aec	e3a03001	 mov         r3, #1
  00af0	e58d3004	 str         r3, [sp, #4]
  00af4	ea000001	 b           |$LN4@HWStartInp|
  00af8		 |$LN3@HWStartInp|
  00af8	e3a03000	 mov         r3, #0
  00afc	e58d3004	 str         r3, [sp, #4]
  00b00		 |$LN4@HWStartInp|

; 408  : 
; 409  :     pDMAReg = m_pInDMAReg;

  00b00	e59d3014	 ldr         r3, [sp, #0x14]
  00b04	e28330f0	 add         r3, r3, #0xF0
  00b08	e5933000	 ldr         r3, [r3]
  00b0c	e58d3000	 str         r3, [sp]

; 410  : 
; 411  : #ifdef PROFILE_MIXER
; 412  :     GetInputDeviceContext(0)->StartMixerProfiler();
; 413  : #endif
; 414  : 
; 415  :     // enable the channel
; 416  :     SETREG32(&pDMAReg->DMA4_CLNK_CTRL, DMA_CLNK_CTRL_ENABLE_LINK);

  00b10	e59d3000	 ldr         r3, [sp]
  00b14	e2833004	 add         r3, r3, #4
  00b18	e5933000	 ldr         r3, [r3]
  00b1c	e3832902	 orr         r2, r3, #2, 18
  00b20	e59d3000	 ldr         r3, [sp]
  00b24	e2833004	 add         r3, r3, #4
  00b28	e5832000	 str         r2, [r3]

; 417  :     SETREG32(&pDMAReg->DMA4_CCR, DMA_CCR_ENABLE);

  00b2c	e59d3000	 ldr         r3, [sp]
  00b30	e5933000	 ldr         r3, [r3]
  00b34	e3832080	 orr         r2, r3, #0x80
  00b38	e59d3000	 ldr         r3, [sp]
  00b3c	e5832000	 str         r2, [r3]

; 418  : 
; 419  : #if defined(DEBUG)
; 420  :     DumpDMA_LC(L"Start Input", pDMAReg);

  00b40	e59d1000	 ldr         r1, [sp]
  00b44	e59f006c	 ldr         r0, [pc, #0x6C]
  00b48	eb000000	 bl          |?DumpDMA_LC@@YAXPAGPCUOMAP2420_DMA_REGS@@@Z|

; 421  :     CheckDMAStatus(pDMAReg, TRUE);

  00b4c	e3a01001	 mov         r1, #1
  00b50	e59d0000	 ldr         r0, [sp]
  00b54	eb000000	 bl          |?CheckDMAStatus@@YAXPCUOMAP2420_DMA_REGS@@H@Z|

; 422  : #endif
; 423  : 
; 424  :     HWEnableInputChannel(TRUE);

  00b58	e3a01001	 mov         r1, #1
  00b5c	e59d3014	 ldr         r3, [sp, #0x14]
  00b60	e5933000	 ldr         r3, [r3]
  00b64	e2833080	 add         r3, r3, #0x80
  00b68	e59d0014	 ldr         r0, [sp, #0x14]
  00b6c	e5933000	 ldr         r3, [r3]
  00b70	e1a0e00f	 mov         lr, pc
  00b74	e12fff13	 bx          r3

; 425  : 
; 426  :     DEBUGMSG(ZONE_FUNCTION, (L"-OMAP2420DMAContext::HWStartInputDMA()\r\n"));

  00b78	e59f3034	 ldr         r3, [pc, #0x34]
  00b7c	e5933440	 ldr         r3, [r3, #0x440]
  00b80	e3130a02	 tst         r3, #2, 20
  00b84	0a000004	 beq         |$LN5@HWStartInp|
  00b88	e59f0020	 ldr         r0, [pc, #0x20]
  00b8c	eb000000	 bl          NKDbgPrintfW
  00b90	e3a03001	 mov         r3, #1
  00b94	e58d3008	 str         r3, [sp, #8]
  00b98	ea000001	 b           |$LN6@HWStartInp|
  00b9c		 |$LN5@HWStartInp|
  00b9c	e3a03000	 mov         r3, #0
  00ba0	e58d3008	 str         r3, [sp, #8]
  00ba4		 |$LN6@HWStartInp|

; 427  : }

  00ba4	e28dd00c	 add         sp, sp, #0xC
  00ba8	e89d6000	 ldmia       sp, {sp, lr}
  00bac	e12fff1e	 bx          lr
  00bb0		 |$LN10@HWStartInp|
  00bb0		 |$LN11@HWStartInp|
  00bb0	00000000	 DCD         |??_C@_1FC@KCOHKOEG@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAa?$AAr?$AAt?$AAI?$AAn?$AAp?$AAu@|
  00bb4		 |$LN12@HWStartInp|
  00bb4	00000000	 DCD         |dpCurSettings|
  00bb8		 |$LN13@HWStartInp|
  00bb8	00000000	 DCD         |??_C@_1BI@NLPKEBGH@?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?$AA@|
  00bbc		 |$LN14@HWStartInp|
  00bbc	00000000	 DCD         |??_C@_1FA@JBOBMCMI@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAa?$AAr?$AAt?$AAI?$AAn?$AAp?$AAu?$AAt@|
  00bc0		 |$M37978|

			 ENDP  ; |?HWStartInputDMA@OMAP2420DMAContext@@UAAXXZ|, OMAP2420DMAContext::HWStartInputDMA

	EXPORT	|??_C@_1JE@FEDFMNK@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| [ DATA ] ; `string'

  00028			 AREA	 |.pdata|, PDATA
|$T37994| DCD	|$LN17@CheckDMASt|
	DCD	0x40004804

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JE@FEDFMNK@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "H", 0x0, "W", 0x0, "M", 0x0, "a", 0x0, "p"
	DCB	0x0, "D", 0x0, "M", 0x0, "A", 0x0, "M", 0x0, "e", 0x0, "m"
	DCB	0x0, "o", 0x0, "r", 0x0, "y", 0x0, ":", 0x0, " ", 0x0, "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "D"
	DCB	0x0, "M", 0x0, "A", 0x0, " ", 0x0, "s", 0x0, "a", 0x0, "f"
	DCB	0x0, "e", 0x0, "t", 0x0, "y", 0x0, " ", 0x0, "c", 0x0, "h"
	DCB	0x0, "e", 0x0, "c", 0x0, "k", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " "
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00bc0			 AREA	 |.text|, CODE, ARM

  00bc0		 |?CheckDMAStatus@@YAXPCUOMAP2420_DMA_REGS@@H@Z| PROC ; CheckDMAStatus

; 235  : {

  00bc0		 |$LN17@CheckDMASt|
  00bc0	e1a0c00d	 mov         r12, sp
  00bc4	e92d0003	 stmdb       sp!, {r0, r1}
  00bc8	e92d5000	 stmdb       sp!, {r12, lr}
  00bcc	e24dd010	 sub         sp, sp, #0x10
  00bd0		 |$M37991|

; 236  :     DWORD dwCount = 0;

  00bd0	e3a03000	 mov         r3, #0
  00bd4	e58d3000	 str         r3, [sp]

; 237  : 
; 238  :     DWORD dwValConfirm = INREG32(&pDMAReg->DMA4_CCR);

  00bd8	e59d3018	 ldr         r3, [sp, #0x18]
  00bdc	e5933000	 ldr         r3, [r3]
  00be0	e58d3004	 str         r3, [sp, #4]

; 239  :     if (fEnabled) 

  00be4	e59d301c	 ldr         r3, [sp, #0x1C]
  00be8	e3530000	 cmp         r3, #0
  00bec	0a00001b	 beq         |$LN8@CheckDMASt|
  00bf0		 |$LN7@CheckDMASt|

; 240  :     {
; 241  :         while ( !( dwValConfirm & DMA_CCR_ENABLE ) )

  00bf0	e59d3004	 ldr         r3, [sp, #4]
  00bf4	e3130080	 tst         r3, #0x80
  00bf8	1a000017	 bne         |$LN6@CheckDMASt|

; 242  :         {
; 243  :             // Put safety checking in case something is wrong
; 244  :             if (dwCount++>DMA_SAFETY_LOOP_NUM)

  00bfc	e59d3000	 ldr         r3, [sp]
  00c00	e3530064	 cmp         r3, #0x64
  00c04	e59d3000	 ldr         r3, [sp]
  00c08	e2833001	 add         r3, r3, #1
  00c0c	e58d3000	 str         r3, [sp]
  00c10	9a000000	 bls         |$LN5@CheckDMASt|

; 245  :                 break;

  00c14	ea000010	 b           |$LN6@CheckDMASt|
  00c18		 |$LN5@CheckDMASt|

; 246  : 
; 247  :             dwValConfirm = INREG32(&pDMAReg->DMA4_CCR);

  00c18	e59d3018	 ldr         r3, [sp, #0x18]
  00c1c	e5933000	 ldr         r3, [r3]
  00c20	e58d3004	 str         r3, [sp, #4]

; 248  :             DEBUGMSG(ZONE_ERROR, (L"OMAP2420DMAContext::HWMapDMAMemory: "
; 249  :                 L"ERROR DMA safety checking = %d %08X\r\n", fEnabled, dwValConfirm
; 250  :             ));

  00c24	e59f30b0	 ldr         r3, [pc, #0xB0]
  00c28	e5933440	 ldr         r3, [r3, #0x440]
  00c2c	e3130902	 tst         r3, #2, 18
  00c30	0a000006	 beq         |$LN11@CheckDMASt|
  00c34	e59d2004	 ldr         r2, [sp, #4]
  00c38	e59d101c	 ldr         r1, [sp, #0x1C]
  00c3c	e59f0094	 ldr         r0, [pc, #0x94]
  00c40	eb000000	 bl          NKDbgPrintfW
  00c44	e3a03001	 mov         r3, #1
  00c48	e58d3008	 str         r3, [sp, #8]
  00c4c	ea000001	 b           |$LN12@CheckDMASt|
  00c50		 |$LN11@CheckDMASt|
  00c50	e3a03000	 mov         r3, #0
  00c54	e58d3008	 str         r3, [sp, #8]
  00c58		 |$LN12@CheckDMASt|

; 251  :         }

  00c58	eaffffe4	 b           |$LN7@CheckDMASt|
  00c5c		 |$LN6@CheckDMASt|

; 252  :     }
; 253  :     else

  00c5c	ea00001a	 b           |$LN4@CheckDMASt|
  00c60		 |$LN8@CheckDMASt|
  00c60		 |$LN3@CheckDMASt|

; 254  :     {
; 255  :         while ( dwValConfirm & DMA_CCR_ENABLE )

  00c60	e59d3004	 ldr         r3, [sp, #4]
  00c64	e3130080	 tst         r3, #0x80
  00c68	0a000017	 beq         |$LN2@CheckDMASt|

; 256  :         {
; 257  :             // Put safety checking in case something is wrong
; 258  :             if (dwCount++>DMA_SAFETY_LOOP_NUM)

  00c6c	e59d3000	 ldr         r3, [sp]
  00c70	e3530064	 cmp         r3, #0x64
  00c74	e59d3000	 ldr         r3, [sp]
  00c78	e2833001	 add         r3, r3, #1
  00c7c	e58d3000	 str         r3, [sp]
  00c80	9a000000	 bls         |$LN1@CheckDMASt|

; 259  :                 break;

  00c84	ea000010	 b           |$LN2@CheckDMASt|
  00c88		 |$LN1@CheckDMASt|

; 260  : 
; 261  :             dwValConfirm = INREG32(&pDMAReg->DMA4_CCR);

  00c88	e59d3018	 ldr         r3, [sp, #0x18]
  00c8c	e5933000	 ldr         r3, [r3]
  00c90	e58d3004	 str         r3, [sp, #4]

; 262  :             DEBUGMSG(ZONE_ERROR, (L"OMAP2420DMAContext::HWMapDMAMemory: "
; 263  :                 L"ERROR DMA safety checking = %d %08X\r\n", fEnabled, dwValConfirm
; 264  :             ));

  00c94	e59f3040	 ldr         r3, [pc, #0x40]
  00c98	e5933440	 ldr         r3, [r3, #0x440]
  00c9c	e3130902	 tst         r3, #2, 18
  00ca0	0a000006	 beq         |$LN13@CheckDMASt|
  00ca4	e59d2004	 ldr         r2, [sp, #4]
  00ca8	e59d101c	 ldr         r1, [sp, #0x1C]
  00cac	e59f0024	 ldr         r0, [pc, #0x24]
  00cb0	eb000000	 bl          NKDbgPrintfW
  00cb4	e3a03001	 mov         r3, #1
  00cb8	e58d300c	 str         r3, [sp, #0xC]
  00cbc	ea000001	 b           |$LN14@CheckDMASt|
  00cc0		 |$LN13@CheckDMASt|
  00cc0	e3a03000	 mov         r3, #0
  00cc4	e58d300c	 str         r3, [sp, #0xC]
  00cc8		 |$LN14@CheckDMASt|

; 265  :         }

  00cc8	eaffffe4	 b           |$LN3@CheckDMASt|
  00ccc		 |$LN2@CheckDMASt|
  00ccc		 |$LN4@CheckDMASt|

; 266  :     }
; 267  : }

  00ccc	e28dd010	 add         sp, sp, #0x10
  00cd0	e89d6000	 ldmia       sp, {sp, lr}
  00cd4	e12fff1e	 bx          lr
  00cd8		 |$LN18@CheckDMASt|
  00cd8		 |$LN19@CheckDMASt|
  00cd8	00000000	 DCD         |??_C@_1JE@FEDFMNK@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAM?$AAa?$AAp?$AAD?$AAM?$AAA?$AAM?$AAe?$AAm?$AAo@|
  00cdc		 |$LN20@CheckDMASt|
  00cdc	00000000	 DCD         |dpCurSettings|
  00ce0		 |$M37992|

			 ENDP  ; |?CheckDMAStatus@@YAXPCUOMAP2420_DMA_REGS@@H@Z|, CheckDMAStatus

	EXPORT	|??_C@_1FA@JMGBGGIF@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAo?$AAp?$AAI?$AAn?$AAp?$AAu?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@POIIBOMK@?$AAS?$AAt?$AAo?$AAp?$AA?5?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@NELADGPL@?$AA?$CL?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAo?$AAp?$AAI?$AAn?$AAp?$AAu?$AAt@| [ DATA ] ; `string'
	IMPORT	|Sleep|

  00030			 AREA	 |.pdata|, PDATA
|$T38006| DCD	|$LN12@HWStopInpu|
	DCD	0x40006604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@JMGBGGIF@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAo?$AAp?$AAI?$AAn?$AAp?$AAu?$AAt@| DCB "-"
	DCB	0x0, "O", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4"
	DCB	0x0, "2", 0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, ":", 0x0, ":", 0x0, "H", 0x0, "W", 0x0, "S", 0x0, "t"
	DCB	0x0, "o", 0x0, "p", 0x0, "I", 0x0, "n", 0x0, "p", 0x0, "u"
	DCB	0x0, "t", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "(", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@POIIBOMK@?$AAS?$AAt?$AAo?$AAp?$AA?5?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?$AA@| DCB "S"
	DCB	0x0, "t", 0x0, "o", 0x0, "p", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "p", 0x0, "u", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@NELADGPL@?$AA?$CL?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAo?$AAp?$AAI?$AAn?$AAp?$AAu?$AAt@| DCB "+"
	DCB	0x0, "O", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4"
	DCB	0x0, "2", 0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, ":", 0x0, ":", 0x0, "H", 0x0, "W", 0x0, "S", 0x0, "t"
	DCB	0x0, "o", 0x0, "p", 0x0, "I", 0x0, "n", 0x0, "p", 0x0, "u"
	DCB	0x0, "t", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "(", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00ce0			 AREA	 |.text|, CODE, ARM

  00ce0		 |?HWStopInputDMA@OMAP2420DMAContext@@UAAXXZ| PROC ; OMAP2420DMAContext::HWStopInputDMA

; 438  : {

  00ce0		 |$LN12@HWStopInpu|
  00ce0	e1a0c00d	 mov         r12, sp
  00ce4	e92d0001	 stmdb       sp!, {r0}
  00ce8	e92d5000	 stmdb       sp!, {r12, lr}
  00cec	e24dd014	 sub         sp, sp, #0x14
  00cf0		 |$M38003|

; 439  :     OMAP2420_DMA_REGS  *pDMAReg;
; 440  :     DWORD i, dwVal;
; 441  : 
; 442  :     DEBUGMSG(ZONE_FUNCTION, (L"+OMAP2420DMAContext::HWStopInputDMA()\r\n"));

  00cf0	e59f3170	 ldr         r3, [pc, #0x170]
  00cf4	e5933440	 ldr         r3, [r3, #0x440]
  00cf8	e3130a02	 tst         r3, #2, 20
  00cfc	0a000004	 beq         |$LN6@HWStopInpu|
  00d00	e59f016c	 ldr         r0, [pc, #0x16C]
  00d04	eb000000	 bl          NKDbgPrintfW
  00d08	e3a03001	 mov         r3, #1
  00d0c	e58d300c	 str         r3, [sp, #0xC]
  00d10	ea000001	 b           |$LN7@HWStopInpu|
  00d14		 |$LN6@HWStopInpu|
  00d14	e3a03000	 mov         r3, #0
  00d18	e58d300c	 str         r3, [sp, #0xC]
  00d1c		 |$LN7@HWStopInpu|

; 443  : 
; 444  :     pDMAReg = m_pInDMAReg;

  00d1c	e59d301c	 ldr         r3, [sp, #0x1C]
  00d20	e28330f0	 add         r3, r3, #0xF0
  00d24	e5933000	 ldr         r3, [r3]
  00d28	e58d3008	 str         r3, [sp, #8]

; 445  : 
; 446  :     // disable the DMA channel link and wait for reading to finish
; 447  :     CLRREG32(&pDMAReg->DMA4_CLNK_CTRL, DMA_CLNK_CTRL_ENABLE_LINK);

  00d2c	e59d3008	 ldr         r3, [sp, #8]
  00d30	e2833004	 add         r3, r3, #4
  00d34	e5932000	 ldr         r2, [r3]
  00d38	e3e03902	 mvn         r3, #2, 18
  00d3c	e0022003	 and         r2, r2, r3
  00d40	e59d3008	 ldr         r3, [sp, #8]
  00d44	e2833004	 add         r3, r3, #4
  00d48	e5832000	 str         r2, [r3]

; 448  :     dwVal = INREG32(&pDMAReg->DMA4_CCR);

  00d4c	e59d3008	 ldr         r3, [sp, #8]
  00d50	e5933000	 ldr         r3, [r3]
  00d54	e58d3000	 str         r3, [sp]

; 449  :     for (i = 0; (i < DMA_SAFETY_LOOP_NUM) && (dwVal & DMA_CCR_RD_ACTIVE); i++)

  00d58	e3a03000	 mov         r3, #0
  00d5c	e58d3004	 str         r3, [sp, #4]
  00d60	ea000002	 b           |$LN3@HWStopInpu|
  00d64		 |$LN2@HWStopInpu|
  00d64	e59d3004	 ldr         r3, [sp, #4]
  00d68	e2833001	 add         r3, r3, #1
  00d6c	e58d3004	 str         r3, [sp, #4]
  00d70		 |$LN3@HWStopInpu|
  00d70	e59d3004	 ldr         r3, [sp, #4]
  00d74	e3530064	 cmp         r3, #0x64
  00d78	2a000008	 bcs         |$LN1@HWStopInpu|
  00d7c	e59d3000	 ldr         r3, [sp]
  00d80	e3130c02	 tst         r3, #2, 24
  00d84	0a000005	 beq         |$LN1@HWStopInpu|

; 450  :     {
; 451  :         Sleep(1);

  00d88	e3a00001	 mov         r0, #1
  00d8c	eb000000	 bl          Sleep

; 452  :         dwVal = INREG32(&pDMAReg->DMA4_CCR);

  00d90	e59d3008	 ldr         r3, [sp, #8]
  00d94	e5933000	 ldr         r3, [r3]
  00d98	e58d3000	 str         r3, [sp]

; 453  :     }

  00d9c	eafffff0	 b           |$LN2@HWStopInpu|
  00da0		 |$LN1@HWStopInpu|

; 454  : 
; 455  :     // disable DMA on the channel
; 456  :     CLRREG32(&pDMAReg->DMA4_CCR, DMA_CCR_ENABLE);

  00da0	e59d3008	 ldr         r3, [sp, #8]
  00da4	e5932000	 ldr         r2, [r3]
  00da8	e3e03080	 mvn         r3, #0x80
  00dac	e0022003	 and         r2, r2, r3
  00db0	e59d3008	 ldr         r3, [sp, #8]
  00db4	e5832000	 str         r2, [r3]

; 457  : 
; 458  :     // clear pending interrupts
; 459  :     OUTREG32(&pDMAReg->DMA4_CSR, INREG32(&pDMAReg->DMA4_CSR));

  00db8	e59d3008	 ldr         r3, [sp, #8]
  00dbc	e283300c	 add         r3, r3, #0xC
  00dc0	e5932000	 ldr         r2, [r3]
  00dc4	e59d3008	 ldr         r3, [sp, #8]
  00dc8	e283300c	 add         r3, r3, #0xC
  00dcc	e5832000	 str         r2, [r3]

; 460  :     DMA_ControllerSet(m_hCont, DMACP_L3IntAck, 1 << AUDIO_INPUT_DMA_CHANNEL);

  00dd0	e3a02008	 mov         r2, #8
  00dd4	e3a01003	 mov         r1, #3
  00dd8	e59d301c	 ldr         r3, [sp, #0x1C]
  00ddc	e28330ec	 add         r3, r3, #0xEC
  00de0	e5930000	 ldr         r0, [r3]
  00de4	e59f3084	 ldr         r3, [pc, #0x84]
  00de8	e5933000	 ldr         r3, [r3]
  00dec	e1a0e00f	 mov         lr, pc
  00df0	e12fff13	 bx          r3

; 461  : 
; 462  :     // disable the rest of the channel
; 463  :     HWEnableInputChannel(FALSE);

  00df4	e3a01000	 mov         r1, #0
  00df8	e59d301c	 ldr         r3, [sp, #0x1C]
  00dfc	e5933000	 ldr         r3, [r3]
  00e00	e2833080	 add         r3, r3, #0x80
  00e04	e59d001c	 ldr         r0, [sp, #0x1C]
  00e08	e5933000	 ldr         r3, [r3]
  00e0c	e1a0e00f	 mov         lr, pc
  00e10	e12fff13	 bx          r3

; 464  : 
; 465  : #if defined(DEBUG)
; 466  :     DumpDMA_LC(L"Stop Input", pDMAReg);

  00e14	e59d1008	 ldr         r1, [sp, #8]
  00e18	e59f004c	 ldr         r0, [pc, #0x4C]
  00e1c	eb000000	 bl          |?DumpDMA_LC@@YAXPAGPCUOMAP2420_DMA_REGS@@@Z|

; 467  :     CheckDMAStatus(pDMAReg, FALSE);

  00e20	e3a01000	 mov         r1, #0
  00e24	e59d0008	 ldr         r0, [sp, #8]
  00e28	eb000000	 bl          |?CheckDMAStatus@@YAXPCUOMAP2420_DMA_REGS@@H@Z|

; 468  : #endif
; 469  : 
; 470  : #ifdef PROFILE_MIXER
; 471  :     LARGE_INTEGER liTotalTime; 
; 472  :     LARGE_INTEGER liMixerTime;
; 473  : 
; 474  :     GetInputDeviceContext(0)->StopMixerProfiler(&liTotalTime,&liMixerTime);
; 475  : 
; 476  :     DEBUGMSG(ZONE_DMA, (L"OMAP2420DMAContext::HWStopInputDMA: "
; 477  :         L"Total capture time: %dms, %dms while mixing\r\n", (DWORD) (liTotalTime.QuadPart), (DWORD) (liMixerTime.QuadPart)
; 478  :     ));
; 479  : #endif
; 480  : 
; 481  :     DEBUGMSG(ZONE_FUNCTION, (L"-OMAP2420DMAContext::HWStopInputDMA()\r\n"));

  00e2c	e59f3034	 ldr         r3, [pc, #0x34]
  00e30	e5933440	 ldr         r3, [r3, #0x440]
  00e34	e3130a02	 tst         r3, #2, 20
  00e38	0a000004	 beq         |$LN8@HWStopInpu|
  00e3c	e59f0020	 ldr         r0, [pc, #0x20]
  00e40	eb000000	 bl          NKDbgPrintfW
  00e44	e3a03001	 mov         r3, #1
  00e48	e58d3010	 str         r3, [sp, #0x10]
  00e4c	ea000001	 b           |$LN9@HWStopInpu|
  00e50		 |$LN8@HWStopInpu|
  00e50	e3a03000	 mov         r3, #0
  00e54	e58d3010	 str         r3, [sp, #0x10]
  00e58		 |$LN9@HWStopInpu|

; 482  : }

  00e58	e28dd014	 add         sp, sp, #0x14
  00e5c	e89d6000	 ldmia       sp, {sp, lr}
  00e60	e12fff1e	 bx          lr
  00e64		 |$LN13@HWStopInpu|
  00e64		 |$LN14@HWStopInpu|
  00e64	00000000	 DCD         |??_C@_1FA@JMGBGGIF@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAo?$AAp?$AAI?$AAn?$AAp?$AAu?$AAt@|
  00e68		 |$LN15@HWStopInpu|
  00e68	00000000	 DCD         |dpCurSettings|
  00e6c		 |$LN16@HWStopInpu|
  00e6c	00000000	 DCD         |??_C@_1BG@POIIBOMK@?$AAS?$AAt?$AAo?$AAp?$AA?5?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?$AA@|
  00e70		 |$LN17@HWStopInpu|
  00e70	00000000	 DCD         |__imp_DMA_ControllerSet|
  00e74		 |$LN18@HWStopInpu|
  00e74	00000000	 DCD         |??_C@_1FA@NELADGPL@?$AA?$CL?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAo?$AAp?$AAI?$AAn?$AAp?$AAu?$AAt@|
  00e78		 |$M38004|

			 ENDP  ; |?HWStopInputDMA@OMAP2420DMAContext@@UAAXXZ|, OMAP2420DMAContext::HWStopInputDMA

	EXPORT	|??_C@_1FE@JODPJCM@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAa?$AAr?$AAt?$AAO?$AAu?$AAt?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@MACFBPKI@?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@OJLDNMP@?$AA?$CL?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAa?$AAr?$AAt?$AAO?$AAu?$AAt?$AAp@| [ DATA ] ; `string'

  00038			 AREA	 |.pdata|, PDATA
|$T38021| DCD	|$LN9@HWStartOut|
	DCD	0x40003f04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@JODPJCM@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAa?$AAr?$AAt?$AAO?$AAu?$AAt?$AAp@| DCB "-"
	DCB	0x0, "O", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4"
	DCB	0x0, "2", 0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, ":", 0x0, ":", 0x0, "H", 0x0, "W", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "r", 0x0, "t", 0x0, "O", 0x0, "u", 0x0, "t"
	DCB	0x0, "p", 0x0, "u", 0x0, "t", 0x0, "D", 0x0, "M", 0x0, "A"
	DCB	0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@MACFBPKI@?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?$AA@| DCB "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, " ", 0x0, "O"
	DCB	0x0, "u", 0x0, "t", 0x0, "p", 0x0, "u", 0x0, "t", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@OJLDNMP@?$AA?$CL?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAa?$AAr?$AAt?$AAO?$AAu?$AAt?$AAp@| DCB "+"
	DCB	0x0, "O", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4"
	DCB	0x0, "2", 0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, ":", 0x0, ":", 0x0, "H", 0x0, "W", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "r", 0x0, "t", 0x0, "O", 0x0, "u", 0x0, "t"
	DCB	0x0, "p", 0x0, "u", 0x0, "t", 0x0, "D", 0x0, "M", 0x0, "A"
	DCB	0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00e78			 AREA	 |.text|, CODE, ARM

  00e78		 |?HWStartOutputDMA@OMAP2420DMAContext@@UAAXXZ| PROC ; OMAP2420DMAContext::HWStartOutputDMA

; 493  : {

  00e78		 |$LN9@HWStartOut|
  00e78	e1a0c00d	 mov         r12, sp
  00e7c	e92d0001	 stmdb       sp!, {r0}
  00e80	e92d5000	 stmdb       sp!, {r12, lr}
  00e84	e24dd00c	 sub         sp, sp, #0xC
  00e88		 |$M38018|

; 494  :     OMAP2420_DMA_REGS  *pDMAReg;
; 495  :     
; 496  :     DEBUGMSG(ZONE_FUNCTION, (L"+OMAP2420DMAContext::HWStartOutputDMA()\r\n"));

  00e88	e59f30d8	 ldr         r3, [pc, #0xD8]
  00e8c	e5933440	 ldr         r3, [r3, #0x440]
  00e90	e3130a02	 tst         r3, #2, 20
  00e94	0a000004	 beq         |$LN3@HWStartOut|
  00e98	e59f00d0	 ldr         r0, [pc, #0xD0]
  00e9c	eb000000	 bl          NKDbgPrintfW
  00ea0	e3a03001	 mov         r3, #1
  00ea4	e58d3004	 str         r3, [sp, #4]
  00ea8	ea000001	 b           |$LN4@HWStartOut|
  00eac		 |$LN3@HWStartOut|
  00eac	e3a03000	 mov         r3, #0
  00eb0	e58d3004	 str         r3, [sp, #4]
  00eb4		 |$LN4@HWStartOut|

; 497  : 
; 498  : #ifdef PROFILE_MIXER
; 499  :     GetOutputDeviceContext(0)->StartMixerProfiler();
; 500  : #endif
; 501  : 
; 502  :     pDMAReg = m_pOutDMAReg;

  00eb4	e59d3014	 ldr         r3, [sp, #0x14]
  00eb8	e28330f4	 add         r3, r3, #0xF4
  00ebc	e5933000	 ldr         r3, [r3]
  00ec0	e58d3000	 str         r3, [sp]

; 503  : 
; 504  :     // enable the channel
; 505  :     SETREG32(&pDMAReg->DMA4_CLNK_CTRL, DMA_CLNK_CTRL_ENABLE_LINK);

  00ec4	e59d3000	 ldr         r3, [sp]
  00ec8	e2833004	 add         r3, r3, #4
  00ecc	e5933000	 ldr         r3, [r3]
  00ed0	e3832902	 orr         r2, r3, #2, 18
  00ed4	e59d3000	 ldr         r3, [sp]
  00ed8	e2833004	 add         r3, r3, #4
  00edc	e5832000	 str         r2, [r3]

; 506  :     SETREG32(&pDMAReg->DMA4_CCR, DMA_CCR_ENABLE);

  00ee0	e59d3000	 ldr         r3, [sp]
  00ee4	e5933000	 ldr         r3, [r3]
  00ee8	e3832080	 orr         r2, r3, #0x80
  00eec	e59d3000	 ldr         r3, [sp]
  00ef0	e5832000	 str         r2, [r3]

; 507  : 
; 508  : #if defined(DEBUG)
; 509  :     DumpDMA_LC(L"Start Output", pDMAReg);

  00ef4	e59d1000	 ldr         r1, [sp]
  00ef8	e59f006c	 ldr         r0, [pc, #0x6C]
  00efc	eb000000	 bl          |?DumpDMA_LC@@YAXPAGPCUOMAP2420_DMA_REGS@@@Z|

; 510  :     CheckDMAStatus(pDMAReg, TRUE);

  00f00	e3a01001	 mov         r1, #1
  00f04	e59d0000	 ldr         r0, [sp]
  00f08	eb000000	 bl          |?CheckDMAStatus@@YAXPCUOMAP2420_DMA_REGS@@H@Z|

; 511  : #endif
; 512  : 
; 513  :     HWEnableOutputChannel(TRUE);

  00f0c	e3a01001	 mov         r1, #1
  00f10	e59d3014	 ldr         r3, [sp, #0x14]
  00f14	e5933000	 ldr         r3, [r3]
  00f18	e2833084	 add         r3, r3, #0x84
  00f1c	e59d0014	 ldr         r0, [sp, #0x14]
  00f20	e5933000	 ldr         r3, [r3]
  00f24	e1a0e00f	 mov         lr, pc
  00f28	e12fff13	 bx          r3

; 514  : 
; 515  :     DEBUGMSG(ZONE_FUNCTION, (L"-OMAP2420DMAContext::HWStartOutputDMA()\r\n"));

  00f2c	e59f3034	 ldr         r3, [pc, #0x34]
  00f30	e5933440	 ldr         r3, [r3, #0x440]
  00f34	e3130a02	 tst         r3, #2, 20
  00f38	0a000004	 beq         |$LN5@HWStartOut|
  00f3c	e59f0020	 ldr         r0, [pc, #0x20]
  00f40	eb000000	 bl          NKDbgPrintfW
  00f44	e3a03001	 mov         r3, #1
  00f48	e58d3008	 str         r3, [sp, #8]
  00f4c	ea000001	 b           |$LN6@HWStartOut|
  00f50		 |$LN5@HWStartOut|
  00f50	e3a03000	 mov         r3, #0
  00f54	e58d3008	 str         r3, [sp, #8]
  00f58		 |$LN6@HWStartOut|

; 516  : }

  00f58	e28dd00c	 add         sp, sp, #0xC
  00f5c	e89d6000	 ldmia       sp, {sp, lr}
  00f60	e12fff1e	 bx          lr
  00f64		 |$LN10@HWStartOut|
  00f64		 |$LN11@HWStartOut|
  00f64	00000000	 DCD         |??_C@_1FE@JODPJCM@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAa?$AAr?$AAt?$AAO?$AAu?$AAt?$AAp@|
  00f68		 |$LN12@HWStartOut|
  00f68	00000000	 DCD         |dpCurSettings|
  00f6c		 |$LN13@HWStartOut|
  00f6c	00000000	 DCD         |??_C@_1BK@MACFBPKI@?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?$AA@|
  00f70		 |$LN14@HWStartOut|
  00f70	00000000	 DCD         |??_C@_1FE@OJLDNMP@?$AA?$CL?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAa?$AAr?$AAt?$AAO?$AAu?$AAt?$AAp@|
  00f74		 |$M38019|

			 ENDP  ; |?HWStartOutputDMA@OMAP2420DMAContext@@UAAXXZ|, OMAP2420DMAContext::HWStartOutputDMA

	EXPORT	|??_C@_1FC@HMILAJKF@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAo?$AAp?$AAO?$AAu?$AAt?$AAp?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@CAFILEBL@?$AAS?$AAt?$AAo?$AAp?$AA?5?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@KGFMEEPI@?$AA?$CL?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAo?$AAp?$AAO?$AAu?$AAt?$AAp?$AAu@| [ DATA ] ; `string'

  00040			 AREA	 |.pdata|, PDATA
|$T38035| DCD	|$LN12@HWStopOutp|
	DCD	0x40006604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@HMILAJKF@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAo?$AAp?$AAO?$AAu?$AAt?$AAp?$AAu@| DCB "-"
	DCB	0x0, "O", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4"
	DCB	0x0, "2", 0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, ":", 0x0, ":", 0x0, "H", 0x0, "W", 0x0, "S", 0x0, "t"
	DCB	0x0, "o", 0x0, "p", 0x0, "O", 0x0, "u", 0x0, "t", 0x0, "p"
	DCB	0x0, "u", 0x0, "t", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "("
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@CAFILEBL@?$AAS?$AAt?$AAo?$AAp?$AA?5?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?$AA@| DCB "S"
	DCB	0x0, "t", 0x0, "o", 0x0, "p", 0x0, " ", 0x0, "O", 0x0, "u"
	DCB	0x0, "t", 0x0, "p", 0x0, "u", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@KGFMEEPI@?$AA?$CL?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAo?$AAp?$AAO?$AAu?$AAt?$AAp?$AAu@| DCB "+"
	DCB	0x0, "O", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4"
	DCB	0x0, "2", 0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, ":", 0x0, ":", 0x0, "H", 0x0, "W", 0x0, "S", 0x0, "t"
	DCB	0x0, "o", 0x0, "p", 0x0, "O", 0x0, "u", 0x0, "t", 0x0, "p"
	DCB	0x0, "u", 0x0, "t", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "("
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00f74			 AREA	 |.text|, CODE, ARM

  00f74		 |?HWStopOutputDMA@OMAP2420DMAContext@@UAAXXZ| PROC ; OMAP2420DMAContext::HWStopOutputDMA

; 527  : {

  00f74		 |$LN12@HWStopOutp|
  00f74	e1a0c00d	 mov         r12, sp
  00f78	e92d0001	 stmdb       sp!, {r0}
  00f7c	e92d5000	 stmdb       sp!, {r12, lr}
  00f80	e24dd014	 sub         sp, sp, #0x14
  00f84		 |$M38032|

; 528  :     OMAP2420_DMA_REGS  *pDMAReg;
; 529  :     DWORD i, dwVal;
; 530  : 
; 531  :     DEBUGMSG(ZONE_FUNCTION, (L"+OMAP2420DMAContext::HWStopOutputDMA()\r\n"));

  00f84	e59f3170	 ldr         r3, [pc, #0x170]
  00f88	e5933440	 ldr         r3, [r3, #0x440]
  00f8c	e3130a02	 tst         r3, #2, 20
  00f90	0a000004	 beq         |$LN6@HWStopOutp|
  00f94	e59f016c	 ldr         r0, [pc, #0x16C]
  00f98	eb000000	 bl          NKDbgPrintfW
  00f9c	e3a03001	 mov         r3, #1
  00fa0	e58d300c	 str         r3, [sp, #0xC]
  00fa4	ea000001	 b           |$LN7@HWStopOutp|
  00fa8		 |$LN6@HWStopOutp|
  00fa8	e3a03000	 mov         r3, #0
  00fac	e58d300c	 str         r3, [sp, #0xC]
  00fb0		 |$LN7@HWStopOutp|

; 532  : 
; 533  :     pDMAReg = m_pOutDMAReg;

  00fb0	e59d301c	 ldr         r3, [sp, #0x1C]
  00fb4	e28330f4	 add         r3, r3, #0xF4
  00fb8	e5933000	 ldr         r3, [r3]
  00fbc	e58d3008	 str         r3, [sp, #8]

; 534  : 
; 535  :     // disable the DMA channel link and wait for writing to finish
; 536  :     CLRREG32(&pDMAReg->DMA4_CLNK_CTRL, DMA_CLNK_CTRL_ENABLE_LINK);

  00fc0	e59d3008	 ldr         r3, [sp, #8]
  00fc4	e2833004	 add         r3, r3, #4
  00fc8	e5932000	 ldr         r2, [r3]
  00fcc	e3e03902	 mvn         r3, #2, 18
  00fd0	e0022003	 and         r2, r2, r3
  00fd4	e59d3008	 ldr         r3, [sp, #8]
  00fd8	e2833004	 add         r3, r3, #4
  00fdc	e5832000	 str         r2, [r3]

; 537  :     dwVal = INREG32(&pDMAReg->DMA4_CCR);

  00fe0	e59d3008	 ldr         r3, [sp, #8]
  00fe4	e5933000	 ldr         r3, [r3]
  00fe8	e58d3000	 str         r3, [sp]

; 538  :     for (i = 0; (i < DMA_SAFETY_LOOP_NUM) && (dwVal & DMA_CCR_WR_ACTIVE); i++)

  00fec	e3a03000	 mov         r3, #0
  00ff0	e58d3004	 str         r3, [sp, #4]
  00ff4	ea000002	 b           |$LN3@HWStopOutp|
  00ff8		 |$LN2@HWStopOutp|
  00ff8	e59d3004	 ldr         r3, [sp, #4]
  00ffc	e2833001	 add         r3, r3, #1
  01000	e58d3004	 str         r3, [sp, #4]
  01004		 |$LN3@HWStopOutp|
  01004	e59d3004	 ldr         r3, [sp, #4]
  01008	e3530064	 cmp         r3, #0x64
  0100c	2a000008	 bcs         |$LN1@HWStopOutp|
  01010	e59d3000	 ldr         r3, [sp]
  01014	e3130b01	 tst         r3, #1, 22
  01018	0a000005	 beq         |$LN1@HWStopOutp|

; 539  :     {
; 540  :         Sleep(1);

  0101c	e3a00001	 mov         r0, #1
  01020	eb000000	 bl          Sleep

; 541  :         dwVal = INREG32(&pDMAReg->DMA4_CCR);

  01024	e59d3008	 ldr         r3, [sp, #8]
  01028	e5933000	 ldr         r3, [r3]
  0102c	e58d3000	 str         r3, [sp]

; 542  :     }

  01030	eafffff0	 b           |$LN2@HWStopOutp|
  01034		 |$LN1@HWStopOutp|

; 543  : 
; 544  :     // disable DMA on the channel
; 545  :     CLRREG32(&pDMAReg->DMA4_CCR, DMA_CCR_ENABLE);

  01034	e59d3008	 ldr         r3, [sp, #8]
  01038	e5932000	 ldr         r2, [r3]
  0103c	e3e03080	 mvn         r3, #0x80
  01040	e0022003	 and         r2, r2, r3
  01044	e59d3008	 ldr         r3, [sp, #8]
  01048	e5832000	 str         r2, [r3]

; 546  : 
; 547  :     // clear pending interrupts
; 548  :     OUTREG32(&pDMAReg->DMA4_CSR, INREG32(&pDMAReg->DMA4_CSR));

  0104c	e59d3008	 ldr         r3, [sp, #8]
  01050	e283300c	 add         r3, r3, #0xC
  01054	e5932000	 ldr         r2, [r3]
  01058	e59d3008	 ldr         r3, [sp, #8]
  0105c	e283300c	 add         r3, r3, #0xC
  01060	e5832000	 str         r2, [r3]

; 549  :     DMA_ControllerSet(m_hCont, DMACP_L2IntAck, 1 << AUDIO_OUTPUT_DMA_CHANNEL);

  01064	e3a02004	 mov         r2, #4
  01068	e3a01006	 mov         r1, #6
  0106c	e59d301c	 ldr         r3, [sp, #0x1C]
  01070	e28330ec	 add         r3, r3, #0xEC
  01074	e5930000	 ldr         r0, [r3]
  01078	e59f3084	 ldr         r3, [pc, #0x84]
  0107c	e5933000	 ldr         r3, [r3]
  01080	e1a0e00f	 mov         lr, pc
  01084	e12fff13	 bx          r3

; 550  : 
; 551  :     // disable the rest of the channel
; 552  :     HWEnableOutputChannel(FALSE);

  01088	e3a01000	 mov         r1, #0
  0108c	e59d301c	 ldr         r3, [sp, #0x1C]
  01090	e5933000	 ldr         r3, [r3]
  01094	e2833084	 add         r3, r3, #0x84
  01098	e59d001c	 ldr         r0, [sp, #0x1C]
  0109c	e5933000	 ldr         r3, [r3]
  010a0	e1a0e00f	 mov         lr, pc
  010a4	e12fff13	 bx          r3

; 553  : 
; 554  : #if defined(DEBUG)
; 555  :     DumpDMA_LC(L"Stop Output", pDMAReg);

  010a8	e59d1008	 ldr         r1, [sp, #8]
  010ac	e59f004c	 ldr         r0, [pc, #0x4C]
  010b0	eb000000	 bl          |?DumpDMA_LC@@YAXPAGPCUOMAP2420_DMA_REGS@@@Z|

; 556  :     CheckDMAStatus(pDMAReg, FALSE);

  010b4	e3a01000	 mov         r1, #0
  010b8	e59d0008	 ldr         r0, [sp, #8]
  010bc	eb000000	 bl          |?CheckDMAStatus@@YAXPCUOMAP2420_DMA_REGS@@H@Z|

; 557  : #endif
; 558  : 
; 559  : #ifdef PROFILE_MIXER
; 560  :     LARGE_INTEGER liTotalTime; 
; 561  :     LARGE_INTEGER liMixerTime;
; 562  : 
; 563  :     GetOutputDeviceContext(0)->StopMixerProfiler(&liTotalTime,&liMixerTime);
; 564  : 
; 565  :     DEBUGMSG(ZONE_DMA,(L"OMAP2420DMAContext::HWStopOutputDMA: "
; 566  :         L"Total play time: %dms, %dms while mixing\r\n", (DWORD) (liTotalTime.QuadPart), (DWORD) (liMixerTime.QuadPart)
; 567  :     ));
; 568  : #endif
; 569  : 
; 570  :     DEBUGMSG(ZONE_FUNCTION, (L"-OMAP2420DMAContext::HWStopOutputDMA()\r\n"));

  010c0	e59f3034	 ldr         r3, [pc, #0x34]
  010c4	e5933440	 ldr         r3, [r3, #0x440]
  010c8	e3130a02	 tst         r3, #2, 20
  010cc	0a000004	 beq         |$LN8@HWStopOutp|
  010d0	e59f0020	 ldr         r0, [pc, #0x20]
  010d4	eb000000	 bl          NKDbgPrintfW
  010d8	e3a03001	 mov         r3, #1
  010dc	e58d3010	 str         r3, [sp, #0x10]
  010e0	ea000001	 b           |$LN9@HWStopOutp|
  010e4		 |$LN8@HWStopOutp|
  010e4	e3a03000	 mov         r3, #0
  010e8	e58d3010	 str         r3, [sp, #0x10]
  010ec		 |$LN9@HWStopOutp|

; 571  : }

  010ec	e28dd014	 add         sp, sp, #0x14
  010f0	e89d6000	 ldmia       sp, {sp, lr}
  010f4	e12fff1e	 bx          lr
  010f8		 |$LN13@HWStopOutp|
  010f8		 |$LN14@HWStopOutp|
  010f8	00000000	 DCD         |??_C@_1FC@HMILAJKF@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAo?$AAp?$AAO?$AAu?$AAt?$AAp?$AAu@|
  010fc		 |$LN15@HWStopOutp|
  010fc	00000000	 DCD         |dpCurSettings|
  01100		 |$LN16@HWStopOutp|
  01100	00000000	 DCD         |??_C@_1BI@CAFILEBL@?$AAS?$AAt?$AAo?$AAp?$AA?5?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?$AA@|
  01104		 |$LN17@HWStopOutp|
  01104	00000000	 DCD         |__imp_DMA_ControllerSet|
  01108		 |$LN18@HWStopOutp|
  01108	00000000	 DCD         |??_C@_1FC@KGFMEEPI@?$AA?$CL?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAS?$AAt?$AAo?$AAp?$AAO?$AAu?$AAt?$AAp?$AAu@|
  0110c		 |$M38033|

			 ENDP  ; |?HWStopOutputDMA@OMAP2420DMAContext@@UAAXXZ|, OMAP2420DMAContext::HWStopOutputDMA

	EXPORT	|??_C@_1JE@CDMPKHIM@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAI?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IM@ECCDJNPH@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAI?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IM@CLMNNLBP@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAI?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@MDEDAHJE@?$AA?$CL?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAI@| [ DATA ] ; `string'
	IMPORT	|?StopInputDMA@HardwareContext@@QAAXXZ|	; HardwareContext::StopInputDMA
	IMPORT	|?TransferInputBuffer@HardwareContext@@QAAKK@Z| ; HardwareContext::TransferInputBuffer

  00048			 AREA	 |.pdata|, PDATA
|$T38057| DCD	|$LN21@HWTransfer|
	DCD	0x40009404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JE@CDMPKHIM@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAI?$AAn@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "H", 0x0, "W", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "I"
	DCB	0x0, "n", 0x0, "p", 0x0, "u", 0x0, "t", 0x0, "B", 0x0, "u"
	DCB	0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "p", 0x0, "u", 0x0, "t"
	DCB	0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, " "
	DCB	0x0, "l", 0x0, "o", 0x0, "s", 0x0, "t", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IM@ECCDJNPH@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAI?$AAn@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "H", 0x0, "W", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "I"
	DCB	0x0, "n", 0x0, "p", 0x0, "u", 0x0, "t", 0x0, "B", 0x0, "u"
	DCB	0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, ":"
	DCB	0x0, " ", 0x0, "N", 0x0, "O", 0x0, "T", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "p", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u"
	DCB	0x0, "p", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IM@CLMNNLBP@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAI?$AAn@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "H", 0x0, "W", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "I"
	DCB	0x0, "n", 0x0, "p", 0x0, "u", 0x0, "t", 0x0, "B", 0x0, "u"
	DCB	0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, ":"
	DCB	0x0, " ", 0x0, "R", 0x0, "X", 0x0, " ", 0x0, "D", 0x0, "M"
	DCB	0x0, "A", 0x0, " ", 0x0, "C", 0x0, "S", 0x0, "R", 0x0, " "
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@MDEDAHJE@?$AA?$CL?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAI@| DCB "+"
	DCB	0x0, "O", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4"
	DCB	0x0, "2", 0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, ":", 0x0, ":", 0x0, "H", 0x0, "W", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "I", 0x0, "n", 0x0, "p", 0x0, "u", 0x0, "t", 0x0, "B"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "s"
	DCB	0x0, "(", 0x0, ")", 0x0, " ", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  0110c			 AREA	 |.text|, CODE, ARM

  0110c		 |?HWTransferInputBuffers@OMAP2420DMAContext@@UAAKXZ| PROC ; OMAP2420DMAContext::HWTransferInputBuffers

; 582  : {

  0110c		 |$LN21@HWTransfer|
  0110c	e1a0c00d	 mov         r12, sp
  01110	e92d0001	 stmdb       sp!, {r0}
  01114	e92d5000	 stmdb       sp!, {r12, lr}
  01118	e24dd030	 sub         sp, sp, #0x30
  0111c		 |$M38054|

; 583  :     ULONG BytesTransferred=0;

  0111c	e3a03000	 mov         r3, #0
  01120	e58d300c	 str         r3, [sp, #0xC]

; 584  :     OMAP2420_DMA_REGS  *pDMAReg;
; 585  :     DWORD dwVal, dwOffset;
; 586  : 
; 587  :     pDMAReg = m_pInDMAReg;

  01124	e59d3038	 ldr         r3, [sp, #0x38]
  01128	e28330f0	 add         r3, r3, #0xF0
  0112c	e5933000	 ldr         r3, [r3]
  01130	e58d3008	 str         r3, [sp, #8]

; 588  : 
; 589  :     // read the CSR register, clear interrupt bits
; 590  :     dwVal = INREG32(&pDMAReg->DMA4_CSR);

  01134	e59d3008	 ldr         r3, [sp, #8]
  01138	e283300c	 add         r3, r3, #0xC
  0113c	e5933000	 ldr         r3, [r3]
  01140	e58d3000	 str         r3, [sp]

; 591  :     OUTREG32(&pDMAReg->DMA4_CSR, dwVal);

  01144	e59d3008	 ldr         r3, [sp, #8]
  01148	e283200c	 add         r2, r3, #0xC
  0114c	e59d3000	 ldr         r3, [sp]
  01150	e5823000	 str         r3, [r2]

; 592  :     DMA_ControllerSet(m_hCont, DMACP_L3IntAck, 1 << AUDIO_INPUT_DMA_CHANNEL);

  01154	e3a02008	 mov         r2, #8
  01158	e3a01003	 mov         r1, #3
  0115c	e59d3038	 ldr         r3, [sp, #0x38]
  01160	e28330ec	 add         r3, r3, #0xEC
  01164	e5930000	 ldr         r0, [r3]
  01168	e59f31e8	 ldr         r3, [pc, #0x1E8]
  0116c	e5933000	 ldr         r3, [r3]
  01170	e1a0e00f	 mov         lr, pc
  01174	e12fff13	 bx          r3

; 593  : 
; 594  :     DEBUGMSG(ZONE_FUNCTION, (L"+OMAP2420DMAContext::HWTransferInputBuffers() %08X\n", dwVal));

  01178	e59f31c8	 ldr         r3, [pc, #0x1C8]
  0117c	e5933440	 ldr         r3, [r3, #0x440]
  01180	e3130a02	 tst         r3, #2, 20
  01184	0a000005	 beq         |$LN9@HWTransfer|
  01188	e59d1000	 ldr         r1, [sp]
  0118c	e59f01c0	 ldr         r0, [pc, #0x1C0]
  01190	eb000000	 bl          NKDbgPrintfW
  01194	e3a03001	 mov         r3, #1
  01198	e58d3014	 str         r3, [sp, #0x14]
  0119c	ea000001	 b           |$LN10@HWTransfer|
  011a0		 |$LN9@HWTransfer|
  011a0	e3a03000	 mov         r3, #0
  011a4	e58d3014	 str         r3, [sp, #0x14]
  011a8		 |$LN10@HWTransfer|

; 595  : 
; 596  :     // an error occured
; 597  :     if (dwVal & DMA_CSR_DROP)

  011a8	e59d3000	 ldr         r3, [sp]
  011ac	e3130002	 tst         r3, #2
  011b0	0a00000f	 beq         |$LN6@HWTransfer|

; 598  :     {
; 599  :         DEBUGMSG(ZONE_ERROR|ZONE_DMA, (L"OMAP2420DMAContext::HWTransferInputBuffers: "
; 600  :             L"RX DMA CSR error = 0x%x\r\n", dwVal
; 601  :         ));

  011b4	e59f318c	 ldr         r3, [pc, #0x18C]
  011b8	e5933440	 ldr         r3, [r3, #0x440]
  011bc	e2032902	 and         r2, r3, #2, 18
  011c0	e59f3180	 ldr         r3, [pc, #0x180]
  011c4	e5933440	 ldr         r3, [r3, #0x440]
  011c8	e2033c01	 and         r3, r3, #1, 24
  011cc	e1923003	 orrs        r3, r2, r3
  011d0	0a000005	 beq         |$LN11@HWTransfer|
  011d4	e59d1000	 ldr         r1, [sp]
  011d8	e59f0170	 ldr         r0, [pc, #0x170]
  011dc	eb000000	 bl          NKDbgPrintfW
  011e0	e3a03001	 mov         r3, #1
  011e4	e58d3018	 str         r3, [sp, #0x18]
  011e8	ea000001	 b           |$LN12@HWTransfer|
  011ec		 |$LN11@HWTransfer|
  011ec	e3a03000	 mov         r3, #0
  011f0	e58d3018	 str         r3, [sp, #0x18]
  011f4		 |$LN12@HWTransfer|
  011f4		 |$LN6@HWTransfer|

; 602  :     }
; 603  : 
; 604  :     // make sure this is a HALF or FRAME interrupt
; 605  :     if (!(dwVal & (DMA_CSR_HALF|DMA_CSR_FRAME)))

  011f4	e59d3000	 ldr         r3, [sp]
  011f8	e313000c	 tst         r3, #0xC
  011fc	1a00000e	 bne         |$LN5@HWTransfer|

; 606  :     {
; 607  :         DEBUGMSG(ZONE_DMA, (L"OMAP2420DMAContext::HWTransferInputBuffers: "
; 608  :             L"NOT input interrupt %08X\n", dwVal
; 609  :         ));

  01200	e59f3140	 ldr         r3, [pc, #0x140]
  01204	e5933440	 ldr         r3, [r3, #0x440]
  01208	e3130c01	 tst         r3, #1, 24
  0120c	0a000005	 beq         |$LN13@HWTransfer|
  01210	e59d1000	 ldr         r1, [sp]
  01214	e59f0130	 ldr         r0, [pc, #0x130]
  01218	eb000000	 bl          NKDbgPrintfW
  0121c	e3a03001	 mov         r3, #1
  01220	e58d301c	 str         r3, [sp, #0x1C]
  01224	ea000001	 b           |$LN14@HWTransfer|
  01228		 |$LN13@HWTransfer|
  01228	e3a03000	 mov         r3, #0
  0122c	e58d301c	 str         r3, [sp, #0x1C]
  01230		 |$LN14@HWTransfer|

; 610  :         return BytesTransferred;

  01230	e59d300c	 ldr         r3, [sp, #0xC]
  01234	e58d3010	 str         r3, [sp, #0x10]
  01238	ea00003d	 b           |$LN7@HWTransfer|
  0123c		 |$LN5@HWTransfer|

; 611  :     }
; 612  : 
; 613  :     // if both HALF and FRAME are on, then we lost one of them
; 614  :     if ((dwVal & (DMA_CSR_HALF|DMA_CSR_FRAME)) == (DMA_CSR_HALF|DMA_CSR_FRAME))

  0123c	e59d3000	 ldr         r3, [sp]
  01240	e203300c	 and         r3, r3, #0xC
  01244	e353000c	 cmp         r3, #0xC
  01248	1a00001c	 bne         |$LN4@HWTransfer|

; 615  :     {
; 616  :         DEBUGMSG(ZONE_ERROR, (L"OMAP2420DMAContext::HWTransferInputBuffers: "
; 617  :             L"Input buffer interrupt lost\r\n"
; 618  :         ));

  0124c	e59f30f4	 ldr         r3, [pc, #0xF4]
  01250	e5933440	 ldr         r3, [r3, #0x440]
  01254	e3130902	 tst         r3, #2, 18
  01258	0a000004	 beq         |$LN15@HWTransfer|
  0125c	e59f00e0	 ldr         r0, [pc, #0xE0]
  01260	eb000000	 bl          NKDbgPrintfW
  01264	e3a03001	 mov         r3, #1
  01268	e58d3020	 str         r3, [sp, #0x20]
  0126c	ea000001	 b           |$LN16@HWTransfer|
  01270		 |$LN15@HWTransfer|
  01270	e3a03000	 mov         r3, #0
  01274	e58d3020	 str         r3, [sp, #0x20]
  01278		 |$LN16@HWTransfer|

; 619  : 
; 620  :         // pick HALF or FRAME based on which half of the frame the read pointer is in
; 621  :         dwOffset = INREG32(&pDMAReg->DMA4_CSAC) - INREG32(&pDMAReg->DMA4_CSSA);

  01278	e59d3008	 ldr         r3, [sp, #8]
  0127c	e2832034	 add         r2, r3, #0x34
  01280	e59d3008	 ldr         r3, [sp, #8]
  01284	e283301c	 add         r3, r3, #0x1C
  01288	e5922000	 ldr         r2, [r2]
  0128c	e5933000	 ldr         r3, [r3]
  01290	e0423003	 sub         r3, r2, r3
  01294	e58d3004	 str         r3, [sp, #4]

; 622  :         dwVal = (dwOffset >= AUDIO_DMA_PAGE_SIZE) ? DMA_CSR_HALF : DMA_CSR_FRAME;

  01298	e59d3004	 ldr         r3, [sp, #4]
  0129c	e3530a02	 cmp         r3, #2, 20
  012a0	3a000002	 bcc         |$LN17@HWTransfer|
  012a4	e3a03004	 mov         r3, #4
  012a8	e58d3024	 str         r3, [sp, #0x24]
  012ac	ea000001	 b           |$LN18@HWTransfer|
  012b0		 |$LN17@HWTransfer|
  012b0	e3a03008	 mov         r3, #8
  012b4	e58d3024	 str         r3, [sp, #0x24]
  012b8		 |$LN18@HWTransfer|
  012b8	e59d3024	 ldr         r3, [sp, #0x24]
  012bc	e58d3000	 str         r3, [sp]
  012c0		 |$LN4@HWTransfer|

; 623  :     }
; 624  : 
; 625  :     // HALF interrupt, reload page 0
; 626  :     if (dwVal & DMA_CSR_HALF)

  012c0	e59d3000	 ldr         r3, [sp]
  012c4	e3130004	 tst         r3, #4
  012c8	0a000007	 beq         |$LN3@HWTransfer|

; 627  :     {
; 628  :         BytesTransferred += TransferInputBuffer(0);

  012cc	e3a01000	 mov         r1, #0
  012d0	e59d0038	 ldr         r0, [sp, #0x38]
  012d4	eb000000	 bl          |?TransferInputBuffer@HardwareContext@@QAAKK@Z|
  012d8	e58d0028	 str         r0, [sp, #0x28]
  012dc	e59d200c	 ldr         r2, [sp, #0xC]
  012e0	e59d3028	 ldr         r3, [sp, #0x28]
  012e4	e0823003	 add         r3, r2, r3
  012e8	e58d300c	 str         r3, [sp, #0xC]
  012ec		 |$LN3@HWTransfer|

; 629  :     }
; 630  : 
; 631  :     // FRAME interrupt, reload page 1
; 632  :     if (dwVal & DMA_CSR_FRAME)

  012ec	e59d3000	 ldr         r3, [sp]
  012f0	e3130008	 tst         r3, #8
  012f4	0a000007	 beq         |$LN2@HWTransfer|

; 633  :     {
; 634  :         BytesTransferred += TransferInputBuffer(1);

  012f8	e3a01001	 mov         r1, #1
  012fc	e59d0038	 ldr         r0, [sp, #0x38]
  01300	eb000000	 bl          |?TransferInputBuffer@HardwareContext@@QAAKK@Z|
  01304	e58d002c	 str         r0, [sp, #0x2C]
  01308	e59d200c	 ldr         r2, [sp, #0xC]
  0130c	e59d302c	 ldr         r3, [sp, #0x2C]
  01310	e0823003	 add         r3, r2, r3
  01314	e58d300c	 str         r3, [sp, #0xC]
  01318		 |$LN2@HWTransfer|

; 635  :     }
; 636  : 
; 637  :     // stop DMA when there's no more data
; 638  :     if (BytesTransferred == 0)

  01318	e59d300c	 ldr         r3, [sp, #0xC]
  0131c	e3530000	 cmp         r3, #0
  01320	1a000001	 bne         |$LN1@HWTransfer|

; 639  :     {
; 640  :         StopInputDMA();

  01324	e59d0038	 ldr         r0, [sp, #0x38]
  01328	eb000000	 bl          |?StopInputDMA@HardwareContext@@QAAXXZ|
  0132c		 |$LN1@HWTransfer|

; 641  :     }
; 642  : 
; 643  :     return BytesTransferred;

  0132c	e59d300c	 ldr         r3, [sp, #0xC]
  01330	e58d3010	 str         r3, [sp, #0x10]
  01334		 |$LN7@HWTransfer|

; 644  : }

  01334	e59d0010	 ldr         r0, [sp, #0x10]
  01338	e28dd030	 add         sp, sp, #0x30
  0133c	e89d6000	 ldmia       sp, {sp, lr}
  01340	e12fff1e	 bx          lr
  01344		 |$LN22@HWTransfer|
  01344		 |$LN23@HWTransfer|
  01344	00000000	 DCD         |??_C@_1JE@CDMPKHIM@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAI?$AAn@|
  01348		 |$LN24@HWTransfer|
  01348	00000000	 DCD         |dpCurSettings|
  0134c		 |$LN25@HWTransfer|
  0134c	00000000	 DCD         |??_C@_1IM@ECCDJNPH@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAI?$AAn@|
  01350		 |$LN26@HWTransfer|
  01350	00000000	 DCD         |??_C@_1IM@CLMNNLBP@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAI?$AAn@|
  01354		 |$LN27@HWTransfer|
  01354	00000000	 DCD         |??_C@_1GI@MDEDAHJE@?$AA?$CL?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAI@|
  01358		 |$LN28@HWTransfer|
  01358	00000000	 DCD         |__imp_DMA_ControllerSet|
  0135c		 |$M38055|

			 ENDP  ; |?HWTransferInputBuffers@OMAP2420DMAContext@@UAAKXZ|, OMAP2420DMAContext::HWTransferInputBuffers

	EXPORT	|??_C@_1HC@GEIEGBHC@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAO@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JK@JFHGKCJD@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAO?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JA@IEJPNPOJ@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAO?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IO@LCOGJJAB@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAO?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@FOPMAFCD@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAO?$AAu@| [ DATA ] ; `string'
	IMPORT	|?StopOutputDMA@HardwareContext@@QAAXXZ| ; HardwareContext::StopOutputDMA
	IMPORT	|?TransferOutputBuffer@HardwareContext@@QAAKK@Z| ; HardwareContext::TransferOutputBuffer

  00050			 AREA	 |.pdata|, PDATA
|$T38082| DCD	|$LN23@HWTransfer@2|
	DCD	0x4000a604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@GEIEGBHC@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAO@| DCB "-"
	DCB	0x0, "O", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4"
	DCB	0x0, "2", 0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, ":", 0x0, ":", 0x0, "H", 0x0, "W", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "O", 0x0, "u", 0x0, "t", 0x0, "p", 0x0, "u", 0x0, "t"
	DCB	0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "s", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JK@JFHGKCJD@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAO?$AAu@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "H", 0x0, "W", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "O"
	DCB	0x0, "u", 0x0, "t", 0x0, "p", 0x0, "u", 0x0, "t", 0x0, "B"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "s"
	DCB	0x0, ":", 0x0, " ", 0x0, "O", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, "p", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "b", 0x0, "u"
	DCB	0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u"
	DCB	0x0, "p", 0x0, "t", 0x0, " ", 0x0, "l", 0x0, "o", 0x0, "s"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JA@IEJPNPOJ@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAO?$AAu@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "H", 0x0, "W", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "O"
	DCB	0x0, "u", 0x0, "t", 0x0, "p", 0x0, "u", 0x0, "t", 0x0, "B"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "s"
	DCB	0x0, ":", 0x0, " ", 0x0, "N", 0x0, "O", 0x0, "T", 0x0, " "
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, "p", 0x0, "u", 0x0, "t"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IO@LCOGJJAB@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAO?$AAu@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "H", 0x0, "W", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "O"
	DCB	0x0, "u", 0x0, "t", 0x0, "p", 0x0, "u", 0x0, "t", 0x0, "B"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "s"
	DCB	0x0, ":", 0x0, " ", 0x0, "T", 0x0, "X", 0x0, " ", 0x0, "D"
	DCB	0x0, "M", 0x0, "A", 0x0, " ", 0x0, "C", 0x0, "S", 0x0, "R"
	DCB	0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@FOPMAFCD@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAO?$AAu@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "H", 0x0, "W", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "O"
	DCB	0x0, "u", 0x0, "t", 0x0, "p", 0x0, "u", 0x0, "t", 0x0, "B"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "s"
	DCB	0x0, "(", 0x0, ")", 0x0, " ", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  0135c			 AREA	 |.text|, CODE, ARM

  0135c		 |?HWTransferOutputBuffers@OMAP2420DMAContext@@UAAKXZ| PROC ; OMAP2420DMAContext::HWTransferOutputBuffers

; 655  : {

  0135c		 |$LN23@HWTransfer@2|
  0135c	e1a0c00d	 mov         r12, sp
  01360	e92d0001	 stmdb       sp!, {r0}
  01364	e92d5000	 stmdb       sp!, {r12, lr}
  01368	e24dd034	 sub         sp, sp, #0x34
  0136c		 |$M38079|

; 656  :     ULONG BytesTransferred=0;

  0136c	e3a03000	 mov         r3, #0
  01370	e58d300c	 str         r3, [sp, #0xC]

; 657  :     OMAP2420_DMA_REGS  *pDMAReg;
; 658  :     DWORD dwVal, dwOffset;
; 659  : 
; 660  :     pDMAReg = m_pOutDMAReg;

  01374	e59d303c	 ldr         r3, [sp, #0x3C]
  01378	e28330f4	 add         r3, r3, #0xF4
  0137c	e5933000	 ldr         r3, [r3]
  01380	e58d3008	 str         r3, [sp, #8]

; 661  : 
; 662  :     // read the DMA CSR register, clear interrupt bits.
; 663  :     dwVal = INREG32(&pDMAReg->DMA4_CSR);

  01384	e59d3008	 ldr         r3, [sp, #8]
  01388	e283300c	 add         r3, r3, #0xC
  0138c	e5933000	 ldr         r3, [r3]
  01390	e58d3000	 str         r3, [sp]

; 664  :     OUTREG32(&pDMAReg->DMA4_CSR, dwVal);

  01394	e59d3008	 ldr         r3, [sp, #8]
  01398	e283200c	 add         r2, r3, #0xC
  0139c	e59d3000	 ldr         r3, [sp]
  013a0	e5823000	 str         r3, [r2]

; 665  :     DMA_ControllerSet(m_hCont, DMACP_L2IntAck, 1 << AUDIO_OUTPUT_DMA_CHANNEL);

  013a4	e3a02004	 mov         r2, #4
  013a8	e3a01006	 mov         r1, #6
  013ac	e59d303c	 ldr         r3, [sp, #0x3C]
  013b0	e28330ec	 add         r3, r3, #0xEC
  013b4	e5930000	 ldr         r0, [r3]
  013b8	e59f3230	 ldr         r3, [pc, #0x230]
  013bc	e5933000	 ldr         r3, [r3]
  013c0	e1a0e00f	 mov         lr, pc
  013c4	e12fff13	 bx          r3

; 666  : 
; 667  :     DEBUGMSG(ZONE_FUNCTION, (L"OMAP2420DMAContext::HWTransferOutputBuffers() %08X\n", dwVal));

  013c8	e59f320c	 ldr         r3, [pc, #0x20C]
  013cc	e5933440	 ldr         r3, [r3, #0x440]
  013d0	e3130a02	 tst         r3, #2, 20
  013d4	0a000005	 beq         |$LN9@HWTransfer@2|
  013d8	e59d1000	 ldr         r1, [sp]
  013dc	e59f0208	 ldr         r0, [pc, #0x208]
  013e0	eb000000	 bl          NKDbgPrintfW
  013e4	e3a03001	 mov         r3, #1
  013e8	e58d3014	 str         r3, [sp, #0x14]
  013ec	ea000001	 b           |$LN10@HWTransfer@2|
  013f0		 |$LN9@HWTransfer@2|
  013f0	e3a03000	 mov         r3, #0
  013f4	e58d3014	 str         r3, [sp, #0x14]
  013f8		 |$LN10@HWTransfer@2|

; 668  : 
; 669  :     // an error occured
; 670  :     if (dwVal & DMA_CSR_DROP)

  013f8	e59d3000	 ldr         r3, [sp]
  013fc	e3130002	 tst         r3, #2
  01400	0a00000f	 beq         |$LN6@HWTransfer@2|

; 671  :     {
; 672  :         DEBUGMSG(ZONE_ERROR|ZONE_DMA, (L"OMAP2420DMAContext::HWTransferOutputBuffers: "
; 673  :             L"TX DMA CSR error = 0x%x\r\n", dwVal
; 674  :         ));

  01404	e59f31d0	 ldr         r3, [pc, #0x1D0]
  01408	e5933440	 ldr         r3, [r3, #0x440]
  0140c	e2032902	 and         r2, r3, #2, 18
  01410	e59f31c4	 ldr         r3, [pc, #0x1C4]
  01414	e5933440	 ldr         r3, [r3, #0x440]
  01418	e2033c01	 and         r3, r3, #1, 24
  0141c	e1923003	 orrs        r3, r2, r3
  01420	0a000005	 beq         |$LN11@HWTransfer@2|
  01424	e59d1000	 ldr         r1, [sp]
  01428	e59f01b8	 ldr         r0, [pc, #0x1B8]
  0142c	eb000000	 bl          NKDbgPrintfW
  01430	e3a03001	 mov         r3, #1
  01434	e58d3018	 str         r3, [sp, #0x18]
  01438	ea000001	 b           |$LN12@HWTransfer@2|
  0143c		 |$LN11@HWTransfer@2|
  0143c	e3a03000	 mov         r3, #0
  01440	e58d3018	 str         r3, [sp, #0x18]
  01444		 |$LN12@HWTransfer@2|
  01444		 |$LN6@HWTransfer@2|

; 675  :     }
; 676  : 
; 677  :     // make sure this is a HALF or FRAME interrupt
; 678  :     if (!(dwVal & (DMA_CSR_HALF|DMA_CSR_FRAME)))

  01444	e59d3000	 ldr         r3, [sp]
  01448	e313000c	 tst         r3, #0xC
  0144c	1a00000e	 bne         |$LN5@HWTransfer@2|

; 679  :     {
; 680  :         DEBUGMSG(ZONE_DMA, (L"OMAP2420DMAContext::HWTransferOutputBuffers: "
; 681  :             L"NOT output interrupt %08X\n", dwVal
; 682  :         ));

  01450	e59f3184	 ldr         r3, [pc, #0x184]
  01454	e5933440	 ldr         r3, [r3, #0x440]
  01458	e3130c01	 tst         r3, #1, 24
  0145c	0a000005	 beq         |$LN13@HWTransfer@2|
  01460	e59d1000	 ldr         r1, [sp]
  01464	e59f0178	 ldr         r0, [pc, #0x178]
  01468	eb000000	 bl          NKDbgPrintfW
  0146c	e3a03001	 mov         r3, #1
  01470	e58d301c	 str         r3, [sp, #0x1C]
  01474	ea000001	 b           |$LN14@HWTransfer@2|
  01478		 |$LN13@HWTransfer@2|
  01478	e3a03000	 mov         r3, #0
  0147c	e58d301c	 str         r3, [sp, #0x1C]
  01480		 |$LN14@HWTransfer@2|

; 683  :         return BytesTransferred;

  01480	e59d300c	 ldr         r3, [sp, #0xC]
  01484	e58d3010	 str         r3, [sp, #0x10]
  01488	ea00004e	 b           |$LN7@HWTransfer@2|
  0148c		 |$LN5@HWTransfer@2|

; 684  :     }
; 685  : 
; 686  :     // if both HALF and FRAME are on, then we lost an interrupt
; 687  :     if ((dwVal & (DMA_CSR_HALF|DMA_CSR_FRAME)) == (DMA_CSR_HALF|DMA_CSR_FRAME))

  0148c	e59d3000	 ldr         r3, [sp]
  01490	e203300c	 and         r3, r3, #0xC
  01494	e353000c	 cmp         r3, #0xC
  01498	1a000020	 bne         |$LN4@HWTransfer@2|

; 688  :     {   
; 689  :         DEBUGMSG(ZONE_ERROR|ZONE_DMA, (L"OMAP2420DMAContext::HWTransferOutputBuffers: "
; 690  :             L"Ooutput buffer interrupt lost\r\n"
; 691  :         ));

  0149c	e59f3138	 ldr         r3, [pc, #0x138]
  014a0	e5933440	 ldr         r3, [r3, #0x440]
  014a4	e2032902	 and         r2, r3, #2, 18
  014a8	e59f312c	 ldr         r3, [pc, #0x12C]
  014ac	e5933440	 ldr         r3, [r3, #0x440]
  014b0	e2033c01	 and         r3, r3, #1, 24
  014b4	e1923003	 orrs        r3, r2, r3
  014b8	0a000004	 beq         |$LN15@HWTransfer@2|
  014bc	e59f011c	 ldr         r0, [pc, #0x11C]
  014c0	eb000000	 bl          NKDbgPrintfW
  014c4	e3a03001	 mov         r3, #1
  014c8	e58d3020	 str         r3, [sp, #0x20]
  014cc	ea000001	 b           |$LN16@HWTransfer@2|
  014d0		 |$LN15@HWTransfer@2|
  014d0	e3a03000	 mov         r3, #0
  014d4	e58d3020	 str         r3, [sp, #0x20]
  014d8		 |$LN16@HWTransfer@2|

; 692  : 
; 693  :         // pick HALF or FRAME based on which half of the frame the write pointer is in
; 694  :         dwOffset = INREG32(&pDMAReg->DMA4_CSAC) - INREG32(&pDMAReg->DMA4_CSSA);

  014d8	e59d3008	 ldr         r3, [sp, #8]
  014dc	e2832034	 add         r2, r3, #0x34
  014e0	e59d3008	 ldr         r3, [sp, #8]
  014e4	e283301c	 add         r3, r3, #0x1C
  014e8	e5922000	 ldr         r2, [r2]
  014ec	e5933000	 ldr         r3, [r3]
  014f0	e0423003	 sub         r3, r2, r3
  014f4	e58d3004	 str         r3, [sp, #4]

; 695  :         dwVal = (dwOffset >= AUDIO_DMA_PAGE_SIZE) ? DMA_CSR_HALF : DMA_CSR_FRAME;

  014f8	e59d3004	 ldr         r3, [sp, #4]
  014fc	e3530a02	 cmp         r3, #2, 20
  01500	3a000002	 bcc         |$LN17@HWTransfer@2|
  01504	e3a03004	 mov         r3, #4
  01508	e58d3024	 str         r3, [sp, #0x24]
  0150c	ea000001	 b           |$LN18@HWTransfer@2|
  01510		 |$LN17@HWTransfer@2|
  01510	e3a03008	 mov         r3, #8
  01514	e58d3024	 str         r3, [sp, #0x24]
  01518		 |$LN18@HWTransfer@2|
  01518	e59d3024	 ldr         r3, [sp, #0x24]
  0151c	e58d3000	 str         r3, [sp]
  01520		 |$LN4@HWTransfer@2|

; 696  :     }
; 697  : 
; 698  :     // HALF interrupt, reload page 0
; 699  :     if (dwVal & DMA_CSR_HALF)

  01520	e59d3000	 ldr         r3, [sp]
  01524	e3130004	 tst         r3, #4
  01528	0a000007	 beq         |$LN3@HWTransfer@2|

; 700  :     {
; 701  :         BytesTransferred += TransferOutputBuffer(0);

  0152c	e3a01000	 mov         r1, #0
  01530	e59d003c	 ldr         r0, [sp, #0x3C]
  01534	eb000000	 bl          |?TransferOutputBuffer@HardwareContext@@QAAKK@Z|
  01538	e58d0028	 str         r0, [sp, #0x28]
  0153c	e59d200c	 ldr         r2, [sp, #0xC]
  01540	e59d3028	 ldr         r3, [sp, #0x28]
  01544	e0823003	 add         r3, r2, r3
  01548	e58d300c	 str         r3, [sp, #0xC]
  0154c		 |$LN3@HWTransfer@2|

; 702  :     }
; 703  : 
; 704  :     // FRAME interrupt, reload page 1
; 705  :     if (dwVal & DMA_CSR_FRAME)

  0154c	e59d3000	 ldr         r3, [sp]
  01550	e3130008	 tst         r3, #8
  01554	0a000007	 beq         |$LN2@HWTransfer@2|

; 706  :     {   
; 707  :         BytesTransferred += TransferOutputBuffer(1);

  01558	e3a01001	 mov         r1, #1
  0155c	e59d003c	 ldr         r0, [sp, #0x3C]
  01560	eb000000	 bl          |?TransferOutputBuffer@HardwareContext@@QAAKK@Z|
  01564	e58d002c	 str         r0, [sp, #0x2C]
  01568	e59d200c	 ldr         r2, [sp, #0xC]
  0156c	e59d302c	 ldr         r3, [sp, #0x2C]
  01570	e0823003	 add         r3, r2, r3
  01574	e58d300c	 str         r3, [sp, #0xC]
  01578		 |$LN2@HWTransfer@2|

; 708  :     }
; 709  : 
; 710  :     // stop DMA when there's no more data
; 711  :     if (BytesTransferred == 0)

  01578	e59d300c	 ldr         r3, [sp, #0xC]
  0157c	e3530000	 cmp         r3, #0
  01580	1a000001	 bne         |$LN1@HWTransfer@2|

; 712  :     {
; 713  :         StopOutputDMA();

  01584	e59d003c	 ldr         r0, [sp, #0x3C]
  01588	eb000000	 bl          |?StopOutputDMA@HardwareContext@@QAAXXZ|
  0158c		 |$LN1@HWTransfer@2|

; 714  :     }
; 715  : 
; 716  :     DEBUGMSG(ZONE_FUNCTION, (L"-OMAP2420DMAContext::HWTransferOutputBuffers() %08X %d\r\n", dwVal, BytesTransferred));

  0158c	e59f3048	 ldr         r3, [pc, #0x48]
  01590	e5933440	 ldr         r3, [r3, #0x440]
  01594	e3130a02	 tst         r3, #2, 20
  01598	0a000006	 beq         |$LN19@HWTransfer@2|
  0159c	e59d200c	 ldr         r2, [sp, #0xC]
  015a0	e59d1000	 ldr         r1, [sp]
  015a4	e59f002c	 ldr         r0, [pc, #0x2C]
  015a8	eb000000	 bl          NKDbgPrintfW
  015ac	e3a03001	 mov         r3, #1
  015b0	e58d3030	 str         r3, [sp, #0x30]
  015b4	ea000001	 b           |$LN20@HWTransfer@2|
  015b8		 |$LN19@HWTransfer@2|
  015b8	e3a03000	 mov         r3, #0
  015bc	e58d3030	 str         r3, [sp, #0x30]
  015c0		 |$LN20@HWTransfer@2|

; 717  : 
; 718  :     return BytesTransferred;

  015c0	e59d300c	 ldr         r3, [sp, #0xC]
  015c4	e58d3010	 str         r3, [sp, #0x10]
  015c8		 |$LN7@HWTransfer@2|

; 719  : }

  015c8	e59d0010	 ldr         r0, [sp, #0x10]
  015cc	e28dd034	 add         sp, sp, #0x34
  015d0	e89d6000	 ldmia       sp, {sp, lr}
  015d4	e12fff1e	 bx          lr
  015d8		 |$LN24@HWTransfer@2|
  015d8		 |$LN25@HWTransfer@2|
  015d8	00000000	 DCD         |??_C@_1HC@GEIEGBHC@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAO@|
  015dc		 |$LN26@HWTransfer@2|
  015dc	00000000	 DCD         |dpCurSettings|
  015e0		 |$LN27@HWTransfer@2|
  015e0	00000000	 DCD         |??_C@_1JK@JFHGKCJD@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAO?$AAu@|
  015e4		 |$LN28@HWTransfer@2|
  015e4	00000000	 DCD         |??_C@_1JA@IEJPNPOJ@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAO?$AAu@|
  015e8		 |$LN29@HWTransfer@2|
  015e8	00000000	 DCD         |??_C@_1IO@LCOGJJAB@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAO?$AAu@|
  015ec		 |$LN30@HWTransfer@2|
  015ec	00000000	 DCD         |??_C@_1GI@FOPMAFCD@?$AAO?$AAM?$AAA?$AAP?$AA2?$AA4?$AA2?$AA0?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAH?$AAW?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAO?$AAu@|
  015f0		 |$LN31@HWTransfer@2|
  015f0	00000000	 DCD         |__imp_DMA_ControllerSet|
  015f4		 |$M38080|

			 ENDP  ; |?HWTransferOutputBuffers@OMAP2420DMAContext@@UAAKXZ|, OMAP2420DMAContext::HWTransferOutputBuffers

	EXPORT	|??_C@_1DC@IODMMJB@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAL?$AAN?$AAK?$AA_?$AAC?$AAT?$AAR?$AAL?$AA?3?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@DOICNLLH@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAO?$AAL?$AAO?$AAR?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@ECKKOFMO@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAD?$AAF?$AAI?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@ILLFONHB@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAD?$AAE?$AAI?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@LKIICPEK@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAD?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@GALBIBGL@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAS?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@FBIMEDFA@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAS?$AAE?$AAI?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@JIJDELOP@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAS?$AAF?$AAI?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@DAHFCHKD@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAF?$AAN?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@FNPDNEPJ@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAE?$AAN?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@OHNFIKKG@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAD?$AAS?$AAA?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@DNOMCEIH@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAS?$AAS?$AAA?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@CMIPGLHJ@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAS?$AAR?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@IHCJGHEK@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAI?$AAC?$AAR?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@JDJHCNK@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAC?$AAR?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@NEKMIHPB@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAS?$AAD?$AAP?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@HKEAJDHB@?$AAA?$AAC?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|GetTickCount|

  00058			 AREA	 |.pdata|, PDATA
|$T38129| DCD	|$LN39@DumpDMA_LC|
	DCD	0x40010704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@IODMMJB@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAL?$AAN?$AAK?$AA_?$AAC?$AAT?$AAR?$AAL?$AA?3?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, "C", 0x0, "L", 0x0, "N", 0x0, "K", 0x0, "_", 0x0, "C"
	DCB	0x0, "T", 0x0, "R", 0x0, "L", 0x0, ":", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@DOICNLLH@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAO?$AAL?$AAO?$AAR?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, "C", 0x0, "O", 0x0, "L", 0x0, "O", 0x0, "R", 0x0, ":"
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@ECKKOFMO@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAD?$AAF?$AAI?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, "C", 0x0, "D", 0x0, "F", 0x0, "I", 0x0, ":", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@ILLFONHB@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAD?$AAE?$AAI?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, "C", 0x0, "D", 0x0, "E", 0x0, "I", 0x0, ":", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@LKIICPEK@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAD?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, "C", 0x0, "D", 0x0, "A", 0x0, "C", 0x0, ":", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@GALBIBGL@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAS?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, "C", 0x0, "S", 0x0, "A", 0x0, "C", 0x0, ":", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@FBIMEDFA@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAS?$AAE?$AAI?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, "C", 0x0, "S", 0x0, "E", 0x0, "I", 0x0, ":", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@JIJDELOP@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAS?$AAF?$AAI?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, "C", 0x0, "S", 0x0, "F", 0x0, "I", 0x0, ":", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@DAHFCHKD@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAF?$AAN?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, "C", 0x0, "F", 0x0, "N", 0x0, ":", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@FNPDNEPJ@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAE?$AAN?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, "C", 0x0, "E", 0x0, "N", 0x0, ":", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@OHNFIKKG@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAD?$AAS?$AAA?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, "C", 0x0, "D", 0x0, "S", 0x0, "A", 0x0, ":", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@DNOMCEIH@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAS?$AAS?$AAA?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, "C", 0x0, "S", 0x0, "S", 0x0, "A", 0x0, ":", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@CMIPGLHJ@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAS?$AAR?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, "C", 0x0, "S", 0x0, "R", 0x0, ":", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@IHCJGHEK@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAI?$AAC?$AAR?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, "C", 0x0, "I", 0x0, "C", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@JDJHCNK@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAC?$AAR?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, "C", 0x0, "C", 0x0, "R", 0x0, ":", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@NEKMIHPB@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAS?$AAD?$AAP?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, "C", 0x0, "S", 0x0, "D", 0x0, "P", 0x0, ":", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@HKEAJDHB@?$AAA?$AAC?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e"
	DCB	0x0, "l", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  015f4			 AREA	 |.text|, CODE, ARM

  015f4		 |?DumpDMA_LC@@YAXPAGPCUOMAP2420_DMA_REGS@@@Z| PROC ; DumpDMA_LC

; 731  : {

  015f4		 |$LN39@DumpDMA_LC|
  015f4	e1a0c00d	 mov         r12, sp
  015f8	e92d0003	 stmdb       sp!, {r0, r1}
  015fc	e92d5000	 stmdb       sp!, {r12, lr}
  01600	e24dd048	 sub         sp, sp, #0x48
  01604		 |$M38126|

; 732  :     DEBUGMSG(ZONE_DMA,(L"AC: %s Channel\r\n", szChannel, GetTickCount()));

  01604	e59f33c0	 ldr         r3, [pc, #0x3C0]
  01608	e5933440	 ldr         r3, [r3, #0x440]
  0160c	e3130c01	 tst         r3, #1, 24
  01610	0a000008	 beq         |$LN3@DumpDMA_LC|
  01614	eb000000	 bl          GetTickCount
  01618	e58d0000	 str         r0, [sp]
  0161c	e59d2000	 ldr         r2, [sp]
  01620	e59d1050	 ldr         r1, [sp, #0x50]
  01624	e59f03e0	 ldr         r0, [pc, #0x3E0]
  01628	eb000000	 bl          NKDbgPrintfW
  0162c	e3a03001	 mov         r3, #1
  01630	e58d3004	 str         r3, [sp, #4]
  01634	ea000001	 b           |$LN4@DumpDMA_LC|
  01638		 |$LN3@DumpDMA_LC|
  01638	e3a03000	 mov         r3, #0
  0163c	e58d3004	 str         r3, [sp, #4]
  01640		 |$LN4@DumpDMA_LC|

; 733  :     DEBUGMSG(ZONE_DMA,(L"AC:    CSDP:      %08X\r\n", INREG32(&pCh->DMA4_CSDP)));

  01640	e59f3384	 ldr         r3, [pc, #0x384]
  01644	e5933440	 ldr         r3, [r3, #0x440]
  01648	e3130c01	 tst         r3, #1, 24
  0164c	0a000007	 beq         |$LN5@DumpDMA_LC|
  01650	e59d3054	 ldr         r3, [sp, #0x54]
  01654	e2833010	 add         r3, r3, #0x10
  01658	e5931000	 ldr         r1, [r3]
  0165c	e59f03a4	 ldr         r0, [pc, #0x3A4]
  01660	eb000000	 bl          NKDbgPrintfW
  01664	e3a03001	 mov         r3, #1
  01668	e58d3008	 str         r3, [sp, #8]
  0166c	ea000001	 b           |$LN6@DumpDMA_LC|
  01670		 |$LN5@DumpDMA_LC|
  01670	e3a03000	 mov         r3, #0
  01674	e58d3008	 str         r3, [sp, #8]
  01678		 |$LN6@DumpDMA_LC|

; 734  :     DEBUGMSG(ZONE_DMA,(L"AC:    CCR:       %08X\r\n", INREG32(&pCh->DMA4_CCR)));

  01678	e59f334c	 ldr         r3, [pc, #0x34C]
  0167c	e5933440	 ldr         r3, [r3, #0x440]
  01680	e3130c01	 tst         r3, #1, 24
  01684	0a000006	 beq         |$LN7@DumpDMA_LC|
  01688	e59d3054	 ldr         r3, [sp, #0x54]
  0168c	e5931000	 ldr         r1, [r3]
  01690	e59f036c	 ldr         r0, [pc, #0x36C]
  01694	eb000000	 bl          NKDbgPrintfW
  01698	e3a03001	 mov         r3, #1
  0169c	e58d300c	 str         r3, [sp, #0xC]
  016a0	ea000001	 b           |$LN8@DumpDMA_LC|
  016a4		 |$LN7@DumpDMA_LC|
  016a4	e3a03000	 mov         r3, #0
  016a8	e58d300c	 str         r3, [sp, #0xC]
  016ac		 |$LN8@DumpDMA_LC|

; 735  :     DEBUGMSG(ZONE_DMA,(L"AC:    CICR:      %08X\r\n", INREG32(&pCh->DMA4_CICR)));

  016ac	e59f3318	 ldr         r3, [pc, #0x318]
  016b0	e5933440	 ldr         r3, [r3, #0x440]
  016b4	e3130c01	 tst         r3, #1, 24
  016b8	0a000007	 beq         |$LN9@DumpDMA_LC|
  016bc	e59d3054	 ldr         r3, [sp, #0x54]
  016c0	e2833008	 add         r3, r3, #8
  016c4	e5931000	 ldr         r1, [r3]
  016c8	e59f0330	 ldr         r0, [pc, #0x330]
  016cc	eb000000	 bl          NKDbgPrintfW
  016d0	e3a03001	 mov         r3, #1
  016d4	e58d3010	 str         r3, [sp, #0x10]
  016d8	ea000001	 b           |$LN10@DumpDMA_LC|
  016dc		 |$LN9@DumpDMA_LC|
  016dc	e3a03000	 mov         r3, #0
  016e0	e58d3010	 str         r3, [sp, #0x10]
  016e4		 |$LN10@DumpDMA_LC|

; 736  :     DEBUGMSG(ZONE_DMA,(L"AC:    CSR:       %08X\r\n", INREG32(&pCh->DMA4_CSR)));

  016e4	e59f32e0	 ldr         r3, [pc, #0x2E0]
  016e8	e5933440	 ldr         r3, [r3, #0x440]
  016ec	e3130c01	 tst         r3, #1, 24
  016f0	0a000007	 beq         |$LN11@DumpDMA_LC|
  016f4	e59d3054	 ldr         r3, [sp, #0x54]
  016f8	e283300c	 add         r3, r3, #0xC
  016fc	e5931000	 ldr         r1, [r3]
  01700	e59f02f4	 ldr         r0, [pc, #0x2F4]
  01704	eb000000	 bl          NKDbgPrintfW
  01708	e3a03001	 mov         r3, #1
  0170c	e58d3014	 str         r3, [sp, #0x14]
  01710	ea000001	 b           |$LN12@DumpDMA_LC|
  01714		 |$LN11@DumpDMA_LC|
  01714	e3a03000	 mov         r3, #0
  01718	e58d3014	 str         r3, [sp, #0x14]
  0171c		 |$LN12@DumpDMA_LC|

; 737  :     DEBUGMSG(ZONE_DMA,(L"AC:    CSSA:      %08X\r\n", INREG32(&pCh->DMA4_CSSA)));

  0171c	e59f32a8	 ldr         r3, [pc, #0x2A8]
  01720	e5933440	 ldr         r3, [r3, #0x440]
  01724	e3130c01	 tst         r3, #1, 24
  01728	0a000007	 beq         |$LN13@DumpDMA_LC|
  0172c	e59d3054	 ldr         r3, [sp, #0x54]
  01730	e283301c	 add         r3, r3, #0x1C
  01734	e5931000	 ldr         r1, [r3]
  01738	e59f02b8	 ldr         r0, [pc, #0x2B8]
  0173c	eb000000	 bl          NKDbgPrintfW
  01740	e3a03001	 mov         r3, #1
  01744	e58d3018	 str         r3, [sp, #0x18]
  01748	ea000001	 b           |$LN14@DumpDMA_LC|
  0174c		 |$LN13@DumpDMA_LC|
  0174c	e3a03000	 mov         r3, #0
  01750	e58d3018	 str         r3, [sp, #0x18]
  01754		 |$LN14@DumpDMA_LC|

; 738  :     DEBUGMSG(ZONE_DMA,(L"AC:    CDSA:      %08X\r\n", INREG32(&pCh->DMA4_CDSA)));

  01754	e59f3270	 ldr         r3, [pc, #0x270]
  01758	e5933440	 ldr         r3, [r3, #0x440]
  0175c	e3130c01	 tst         r3, #1, 24
  01760	0a000007	 beq         |$LN15@DumpDMA_LC|
  01764	e59d3054	 ldr         r3, [sp, #0x54]
  01768	e2833020	 add         r3, r3, #0x20
  0176c	e5931000	 ldr         r1, [r3]
  01770	e59f027c	 ldr         r0, [pc, #0x27C]
  01774	eb000000	 bl          NKDbgPrintfW
  01778	e3a03001	 mov         r3, #1
  0177c	e58d301c	 str         r3, [sp, #0x1C]
  01780	ea000001	 b           |$LN16@DumpDMA_LC|
  01784		 |$LN15@DumpDMA_LC|
  01784	e3a03000	 mov         r3, #0
  01788	e58d301c	 str         r3, [sp, #0x1C]
  0178c		 |$LN16@DumpDMA_LC|

; 739  :     DEBUGMSG(ZONE_DMA,(L"AC:    CEN:       %08X\r\n", INREG32(&pCh->DMA4_CEN)));

  0178c	e59f3238	 ldr         r3, [pc, #0x238]
  01790	e5933440	 ldr         r3, [r3, #0x440]
  01794	e3130c01	 tst         r3, #1, 24
  01798	0a000007	 beq         |$LN17@DumpDMA_LC|
  0179c	e59d3054	 ldr         r3, [sp, #0x54]
  017a0	e2833014	 add         r3, r3, #0x14
  017a4	e5931000	 ldr         r1, [r3]
  017a8	e59f0240	 ldr         r0, [pc, #0x240]
  017ac	eb000000	 bl          NKDbgPrintfW
  017b0	e3a03001	 mov         r3, #1
  017b4	e58d3020	 str         r3, [sp, #0x20]
  017b8	ea000001	 b           |$LN18@DumpDMA_LC|
  017bc		 |$LN17@DumpDMA_LC|
  017bc	e3a03000	 mov         r3, #0
  017c0	e58d3020	 str         r3, [sp, #0x20]
  017c4		 |$LN18@DumpDMA_LC|

; 740  :     DEBUGMSG(ZONE_DMA,(L"AC:    CFN:       %08X\r\n", INREG32(&pCh->DMA4_CFN)));

  017c4	e59f3200	 ldr         r3, [pc, #0x200]
  017c8	e5933440	 ldr         r3, [r3, #0x440]
  017cc	e3130c01	 tst         r3, #1, 24
  017d0	0a000007	 beq         |$LN19@DumpDMA_LC|
  017d4	e59d3054	 ldr         r3, [sp, #0x54]
  017d8	e2833018	 add         r3, r3, #0x18
  017dc	e5931000	 ldr         r1, [r3]
  017e0	e59f0204	 ldr         r0, [pc, #0x204]
  017e4	eb000000	 bl          NKDbgPrintfW
  017e8	e3a03001	 mov         r3, #1
  017ec	e58d3024	 str         r3, [sp, #0x24]
  017f0	ea000001	 b           |$LN20@DumpDMA_LC|
  017f4		 |$LN19@DumpDMA_LC|
  017f4	e3a03000	 mov         r3, #0
  017f8	e58d3024	 str         r3, [sp, #0x24]
  017fc		 |$LN20@DumpDMA_LC|

; 741  :     DEBUGMSG(ZONE_DMA,(L"AC:    CSFI:      %08X\r\n", INREG32(&pCh->DMA4_CSFI)));

  017fc	e59f31c8	 ldr         r3, [pc, #0x1C8]
  01800	e5933440	 ldr         r3, [r3, #0x440]
  01804	e3130c01	 tst         r3, #1, 24
  01808	0a000007	 beq         |$LN21@DumpDMA_LC|
  0180c	e59d3054	 ldr         r3, [sp, #0x54]
  01810	e2833028	 add         r3, r3, #0x28
  01814	e5931000	 ldr         r1, [r3]
  01818	e59f01c8	 ldr         r0, [pc, #0x1C8]
  0181c	eb000000	 bl          NKDbgPrintfW
  01820	e3a03001	 mov         r3, #1
  01824	e58d3028	 str         r3, [sp, #0x28]
  01828	ea000001	 b           |$LN22@DumpDMA_LC|
  0182c		 |$LN21@DumpDMA_LC|
  0182c	e3a03000	 mov         r3, #0
  01830	e58d3028	 str         r3, [sp, #0x28]
  01834		 |$LN22@DumpDMA_LC|

; 742  :     DEBUGMSG(ZONE_DMA,(L"AC:    CSEI:      %08X\r\n", INREG32(&pCh->DMA4_CSEI)));

  01834	e59f3190	 ldr         r3, [pc, #0x190]
  01838	e5933440	 ldr         r3, [r3, #0x440]
  0183c	e3130c01	 tst         r3, #1, 24
  01840	0a000007	 beq         |$LN23@DumpDMA_LC|
  01844	e59d3054	 ldr         r3, [sp, #0x54]
  01848	e2833024	 add         r3, r3, #0x24
  0184c	e5931000	 ldr         r1, [r3]
  01850	e59f018c	 ldr         r0, [pc, #0x18C]
  01854	eb000000	 bl          NKDbgPrintfW
  01858	e3a03001	 mov         r3, #1
  0185c	e58d302c	 str         r3, [sp, #0x2C]
  01860	ea000001	 b           |$LN24@DumpDMA_LC|
  01864		 |$LN23@DumpDMA_LC|
  01864	e3a03000	 mov         r3, #0
  01868	e58d302c	 str         r3, [sp, #0x2C]
  0186c		 |$LN24@DumpDMA_LC|

; 743  :     DEBUGMSG(ZONE_DMA,(L"AC:    CSAC:      %08X\r\n", INREG32(&pCh->DMA4_CSAC)));

  0186c	e59f3158	 ldr         r3, [pc, #0x158]
  01870	e5933440	 ldr         r3, [r3, #0x440]
  01874	e3130c01	 tst         r3, #1, 24
  01878	0a000007	 beq         |$LN25@DumpDMA_LC|
  0187c	e59d3054	 ldr         r3, [sp, #0x54]
  01880	e2833034	 add         r3, r3, #0x34
  01884	e5931000	 ldr         r1, [r3]
  01888	e59f0150	 ldr         r0, [pc, #0x150]
  0188c	eb000000	 bl          NKDbgPrintfW
  01890	e3a03001	 mov         r3, #1
  01894	e58d3030	 str         r3, [sp, #0x30]
  01898	ea000001	 b           |$LN26@DumpDMA_LC|
  0189c		 |$LN25@DumpDMA_LC|
  0189c	e3a03000	 mov         r3, #0
  018a0	e58d3030	 str         r3, [sp, #0x30]
  018a4		 |$LN26@DumpDMA_LC|

; 744  :     DEBUGMSG(ZONE_DMA,(L"AC:    CDAC:      %08X\r\n", INREG32(&pCh->DMA4_CDAC)));

  018a4	e59f3120	 ldr         r3, [pc, #0x120]
  018a8	e5933440	 ldr         r3, [r3, #0x440]
  018ac	e3130c01	 tst         r3, #1, 24
  018b0	0a000007	 beq         |$LN27@DumpDMA_LC|
  018b4	e59d3054	 ldr         r3, [sp, #0x54]
  018b8	e2833038	 add         r3, r3, #0x38
  018bc	e5931000	 ldr         r1, [r3]
  018c0	e59f0114	 ldr         r0, [pc, #0x114]
  018c4	eb000000	 bl          NKDbgPrintfW
  018c8	e3a03001	 mov         r3, #1
  018cc	e58d3034	 str         r3, [sp, #0x34]
  018d0	ea000001	 b           |$LN28@DumpDMA_LC|
  018d4		 |$LN27@DumpDMA_LC|
  018d4	e3a03000	 mov         r3, #0
  018d8	e58d3034	 str         r3, [sp, #0x34]
  018dc		 |$LN28@DumpDMA_LC|

; 745  :     DEBUGMSG(ZONE_DMA,(L"AC:    CDEI:      %08X\r\n", INREG32(&pCh->DMA4_CDEI)));

  018dc	e59f30e8	 ldr         r3, [pc, #0xE8]
  018e0	e5933440	 ldr         r3, [r3, #0x440]
  018e4	e3130c01	 tst         r3, #1, 24
  018e8	0a000007	 beq         |$LN29@DumpDMA_LC|
  018ec	e59d3054	 ldr         r3, [sp, #0x54]
  018f0	e283302c	 add         r3, r3, #0x2C
  018f4	e5931000	 ldr         r1, [r3]
  018f8	e59f00d8	 ldr         r0, [pc, #0xD8]
  018fc	eb000000	 bl          NKDbgPrintfW
  01900	e3a03001	 mov         r3, #1
  01904	e58d3038	 str         r3, [sp, #0x38]
  01908	ea000001	 b           |$LN30@DumpDMA_LC|
  0190c		 |$LN29@DumpDMA_LC|
  0190c	e3a03000	 mov         r3, #0
  01910	e58d3038	 str         r3, [sp, #0x38]
  01914		 |$LN30@DumpDMA_LC|

; 746  :     DEBUGMSG(ZONE_DMA,(L"AC:    CDFI:      %08X\r\n", INREG32(&pCh->DMA4_CDFI)));

  01914	e59f30b0	 ldr         r3, [pc, #0xB0]
  01918	e5933440	 ldr         r3, [r3, #0x440]
  0191c	e3130c01	 tst         r3, #1, 24
  01920	0a000007	 beq         |$LN31@DumpDMA_LC|
  01924	e59d3054	 ldr         r3, [sp, #0x54]
  01928	e2833030	 add         r3, r3, #0x30
  0192c	e5931000	 ldr         r1, [r3]
  01930	e59f009c	 ldr         r0, [pc, #0x9C]
  01934	eb000000	 bl          NKDbgPrintfW
  01938	e3a03001	 mov         r3, #1
  0193c	e58d303c	 str         r3, [sp, #0x3C]
  01940	ea000001	 b           |$LN32@DumpDMA_LC|
  01944		 |$LN31@DumpDMA_LC|
  01944	e3a03000	 mov         r3, #0
  01948	e58d303c	 str         r3, [sp, #0x3C]
  0194c		 |$LN32@DumpDMA_LC|

; 747  :     DEBUGMSG(ZONE_DMA,(L"AC:    COLOR:     %08X\r\n", INREG32(&pCh->DMA4_COLOR)));

  0194c	e59f3078	 ldr         r3, [pc, #0x78]
  01950	e5933440	 ldr         r3, [r3, #0x440]
  01954	e3130c01	 tst         r3, #1, 24
  01958	0a000007	 beq         |$LN33@DumpDMA_LC|
  0195c	e59d3054	 ldr         r3, [sp, #0x54]
  01960	e2833044	 add         r3, r3, #0x44
  01964	e5931000	 ldr         r1, [r3]
  01968	e59f0060	 ldr         r0, [pc, #0x60]
  0196c	eb000000	 bl          NKDbgPrintfW
  01970	e3a03001	 mov         r3, #1
  01974	e58d3040	 str         r3, [sp, #0x40]
  01978	ea000001	 b           |$LN34@DumpDMA_LC|
  0197c		 |$LN33@DumpDMA_LC|
  0197c	e3a03000	 mov         r3, #0
  01980	e58d3040	 str         r3, [sp, #0x40]
  01984		 |$LN34@DumpDMA_LC|

; 748  :     DEBUGMSG(ZONE_DMA,(L"AC:    CLNK_CTRL: %08X\r\n", INREG32(&pCh->DMA4_CLNK_CTRL)));

  01984	e59f3040	 ldr         r3, [pc, #0x40]
  01988	e5933440	 ldr         r3, [r3, #0x440]
  0198c	e3130c01	 tst         r3, #1, 24
  01990	0a000007	 beq         |$LN35@DumpDMA_LC|
  01994	e59d3054	 ldr         r3, [sp, #0x54]
  01998	e2833004	 add         r3, r3, #4
  0199c	e5931000	 ldr         r1, [r3]
  019a0	e59f0020	 ldr         r0, [pc, #0x20]
  019a4	eb000000	 bl          NKDbgPrintfW
  019a8	e3a03001	 mov         r3, #1
  019ac	e58d3044	 str         r3, [sp, #0x44]
  019b0	ea000001	 b           |$LN36@DumpDMA_LC|
  019b4		 |$LN35@DumpDMA_LC|
  019b4	e3a03000	 mov         r3, #0
  019b8	e58d3044	 str         r3, [sp, #0x44]
  019bc		 |$LN36@DumpDMA_LC|

; 749  : }

  019bc	e28dd048	 add         sp, sp, #0x48
  019c0	e89d6000	 ldmia       sp, {sp, lr}
  019c4	e12fff1e	 bx          lr
  019c8		 |$LN40@DumpDMA_LC|
  019c8		 |$LN41@DumpDMA_LC|
  019c8	00000000	 DCD         |??_C@_1DC@IODMMJB@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAL?$AAN?$AAK?$AA_?$AAC?$AAT?$AAR?$AAL?$AA?3?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  019cc		 |$LN42@DumpDMA_LC|
  019cc	00000000	 DCD         |dpCurSettings|
  019d0		 |$LN43@DumpDMA_LC|
  019d0	00000000	 DCD         |??_C@_1DC@DOICNLLH@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAO?$AAL?$AAO?$AAR?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  019d4		 |$LN44@DumpDMA_LC|
  019d4	00000000	 DCD         |??_C@_1DC@ECKKOFMO@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAD?$AAF?$AAI?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  019d8		 |$LN45@DumpDMA_LC|
  019d8	00000000	 DCD         |??_C@_1DC@ILLFONHB@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAD?$AAE?$AAI?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  019dc		 |$LN46@DumpDMA_LC|
  019dc	00000000	 DCD         |??_C@_1DC@LKIICPEK@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAD?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  019e0		 |$LN47@DumpDMA_LC|
  019e0	00000000	 DCD         |??_C@_1DC@GALBIBGL@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAS?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  019e4		 |$LN48@DumpDMA_LC|
  019e4	00000000	 DCD         |??_C@_1DC@FBIMEDFA@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAS?$AAE?$AAI?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  019e8		 |$LN49@DumpDMA_LC|
  019e8	00000000	 DCD         |??_C@_1DC@JIJDELOP@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAS?$AAF?$AAI?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  019ec		 |$LN50@DumpDMA_LC|
  019ec	00000000	 DCD         |??_C@_1DC@DAHFCHKD@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAF?$AAN?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  019f0		 |$LN51@DumpDMA_LC|
  019f0	00000000	 DCD         |??_C@_1DC@FNPDNEPJ@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAE?$AAN?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  019f4		 |$LN52@DumpDMA_LC|
  019f4	00000000	 DCD         |??_C@_1DC@OHNFIKKG@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAD?$AAS?$AAA?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  019f8		 |$LN53@DumpDMA_LC|
  019f8	00000000	 DCD         |??_C@_1DC@DNOMCEIH@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAS?$AAS?$AAA?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  019fc		 |$LN54@DumpDMA_LC|
  019fc	00000000	 DCD         |??_C@_1DC@CMIPGLHJ@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAS?$AAR?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  01a00		 |$LN55@DumpDMA_LC|
  01a00	00000000	 DCD         |??_C@_1DC@IHCJGHEK@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAI?$AAC?$AAR?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  01a04		 |$LN56@DumpDMA_LC|
  01a04	00000000	 DCD         |??_C@_1DC@JDJHCNK@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAC?$AAR?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  01a08		 |$LN57@DumpDMA_LC|
  01a08	00000000	 DCD         |??_C@_1DC@NEKMIHPB@?$AAA?$AAC?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AAC?$AAS?$AAD?$AAP?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  01a0c		 |$LN58@DumpDMA_LC|
  01a0c	00000000	 DCD         |??_C@_1CC@HKEAJDHB@?$AAA?$AAC?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?$AN?$AA?6?$AA?$AA@|
  01a10		 |$M38127|

			 ENDP  ; |?DumpDMA_LC@@YAXPAGPCUOMAP2420_DMA_REGS@@@Z|, DumpDMA_LC

	END
