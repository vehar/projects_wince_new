; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\OMAP2420_MS_V1\WAVEDEV\hwctxt.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?g_pHWContext@@3PAVHardwareContext@@A| [ DATA ] ; g_pHWContext

  00000			 AREA	 |.bss|, NOINIT
|?g_pHWContext@@3PAVHardwareContext@@A| % 0x4		; g_pHWContext
	EXPORT	|??0OutputDeviceContext@@QAA@XZ|	; OutputDeviceContext::OutputDeviceContext
	EXPORT	|??0InputDeviceContext@@QAA@XZ|		; InputDeviceContext::InputDeviceContext
	EXPORT	|??_7HardwareContext@@6B@| [ DATA ]	; HardwareContext::`vftable'
	EXPORT	|??0HardwareContext@@QAA@XZ|		; HardwareContext::HardwareContext
	EXPORT	|?SetupDelayUpdate@HardwareContext@@MAAXXZ| ; HardwareContext::SetupDelayUpdate
	EXPORT	|?DelayedUpdate@HardwareContext@@MAAXXZ| ; HardwareContext::DelayedUpdate
	IMPORT	|CreateEventW|
	IMPORT	|InitializeCriticalSection|
	IMPORT	|??_EHardwareContext@@UAAPAXI@Z|, WEAK |??_GHardwareContext@@UAAPAXI@Z| ; HardwareContext::`vector deleting destructor', HardwareContext::`scalar deleting destructor'
	IMPORT	|_purecall|

  00000			 AREA	 |.pdata|, PDATA
|$T37672| DCD	|$LN5@HardwareCo|
	DCD	0x40006504
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7HardwareContext@@6B@| DCD |??_EHardwareContext@@UAAPAXI@Z| ; HardwareContext::`vftable'
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|?SetupDelayUpdate@HardwareContext@@MAAXXZ|
	DCD	|?DelayedUpdate@HardwareContext@@MAAXXZ|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0HardwareContext@@QAA@XZ| PROC	; HardwareContext::HardwareContext

; 44   : {

  00000		 |$LN5@HardwareCo|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd010	 sub         sp, sp, #0x10
  00010		 |$M37669|
  00010	e59f2178	 ldr         r2, [pc, #0x178]
  00014	e59d3018	 ldr         r3, [sp, #0x18]
  00018	e5832000	 str         r2, [r3]
  0001c	e59d3018	 ldr         r3, [sp, #0x18]
  00020	e2830070	 add         r0, r3, #0x70
  00024	eb000000	 bl          |??0InputDeviceContext@@QAA@XZ|
  00028	e59d3018	 ldr         r3, [sp, #0x18]
  0002c	e2830094	 add         r0, r3, #0x94
  00030	eb000000	 bl          |??0OutputDeviceContext@@QAA@XZ|

; 45   :     InitializeCriticalSection(&m_Lock);

  00034	e59d3018	 ldr         r3, [sp, #0x18]
  00038	e2830004	 add         r0, r3, #4
  0003c	eb000000	 bl          InitializeCriticalSection

; 46   :     m_fTerminating = FALSE;

  00040	e59d3018	 ldr         r3, [sp, #0x18]
  00044	e283202c	 add         r2, r3, #0x2C
  00048	e3a03000	 mov         r3, #0
  0004c	e5823000	 str         r3, [r2]

; 47   :     m_Initialized=FALSE;

  00050	e59d3018	 ldr         r3, [sp, #0x18]
  00054	e283205c	 add         r2, r3, #0x5C
  00058	e3a03000	 mov         r3, #0
  0005c	e5823000	 str         r3, [r2]

; 48   : 
; 49   :     m_hParent = NULL;

  00060	e59d3018	 ldr         r3, [sp, #0x18]
  00064	e2832054	 add         r2, r3, #0x54
  00068	e3a03000	 mov         r3, #0
  0006c	e5823000	 str         r3, [r2]

; 50   :     m_CurPowerState = PwrDeviceUnspecified ;

  00070	e59d3018	 ldr         r3, [sp, #0x18]
  00074	e2832050	 add         r2, r3, #0x50
  00078	e3e03000	 mvn         r3, #0
  0007c	e5823000	 str         r3, [r2]

; 51   : 
; 52   :     m_hAudioInterruptThreadRx = NULL;

  00080	e59d3018	 ldr         r3, [sp, #0x18]
  00084	e2832044	 add         r2, r3, #0x44
  00088	e3a03000	 mov         r3, #0
  0008c	e5823000	 str         r3, [r2]

; 53   :     m_hAudioInterruptThreadTx = NULL;

  00090	e59d3018	 ldr         r3, [sp, #0x18]
  00094	e2832040	 add         r2, r3, #0x40
  00098	e3a03000	 mov         r3, #0
  0009c	e5823000	 str         r3, [r2]

; 54   :     m_hTimeoutThread = NULL;

  000a0	e59d3018	 ldr         r3, [sp, #0x18]
  000a4	e283204c	 add         r2, r3, #0x4C
  000a8	e3a03000	 mov         r3, #0
  000ac	e5823000	 str         r3, [r2]

; 55   :     
; 56   :     m_fRequestedSysIntr = FALSE;

  000b0	e59d3018	 ldr         r3, [sp, #0x18]
  000b4	e2832020	 add         r2, r3, #0x20
  000b8	e3a03000	 mov         r3, #0
  000bc	e5823000	 str         r3, [r2]

; 57   :     m_IntrAudioRx = m_IntrAudioTx = SYSINTR_UNDEFINED ;

  000c0	e59d3018	 ldr         r3, [sp, #0x18]
  000c4	e2832024	 add         r2, r3, #0x24
  000c8	e3e03000	 mvn         r3, #0
  000cc	e5823000	 str         r3, [r2]
  000d0	e59d3018	 ldr         r3, [sp, #0x18]
  000d4	e2832028	 add         r2, r3, #0x28
  000d8	e3e03000	 mvn         r3, #0
  000dc	e5823000	 str         r3, [r2]

; 58   :     m_fRxInterruptIntialized = m_fTxInterruptIntialized = FALSE;

  000e0	e59d3018	 ldr         r3, [sp, #0x18]
  000e4	e2832034	 add         r2, r3, #0x34
  000e8	e3a03000	 mov         r3, #0
  000ec	e5823000	 str         r3, [r2]
  000f0	e59d3018	 ldr         r3, [sp, #0x18]
  000f4	e2832030	 add         r2, r3, #0x30
  000f8	e3a03000	 mov         r3, #0
  000fc	e5823000	 str         r3, [r2]

; 59   : 
; 60   :     m_hTimeoutEvent = CreateEvent(NULL,FALSE,FALSE,NULL);

  00100	e3a03000	 mov         r3, #0
  00104	e3a02000	 mov         r2, #0
  00108	e3a01000	 mov         r1, #0
  0010c	e3a00000	 mov         r0, #0
  00110	eb000000	 bl          CreateEventW
  00114	e58d0004	 str         r0, [sp, #4]
  00118	e59d3018	 ldr         r3, [sp, #0x18]
  0011c	e2832048	 add         r2, r3, #0x48
  00120	e59d3004	 ldr         r3, [sp, #4]
  00124	e5823000	 str         r3, [r2]

; 61   :     m_hAudioInterruptTx = CreateEvent( NULL, FALSE, FALSE, NULL);

  00128	e3a03000	 mov         r3, #0
  0012c	e3a02000	 mov         r2, #0
  00130	e3a01000	 mov         r1, #0
  00134	e3a00000	 mov         r0, #0
  00138	eb000000	 bl          CreateEventW
  0013c	e58d0008	 str         r0, [sp, #8]
  00140	e59d3018	 ldr         r3, [sp, #0x18]
  00144	e2832038	 add         r2, r3, #0x38
  00148	e59d3008	 ldr         r3, [sp, #8]
  0014c	e5823000	 str         r3, [r2]

; 62   :     m_hAudioInterruptRx = CreateEvent( NULL, FALSE, FALSE, NULL);

  00150	e3a03000	 mov         r3, #0
  00154	e3a02000	 mov         r2, #0
  00158	e3a01000	 mov         r1, #0
  0015c	e3a00000	 mov         r0, #0
  00160	eb000000	 bl          CreateEventW
  00164	e58d000c	 str         r0, [sp, #0xC]
  00168	e59d3018	 ldr         r3, [sp, #0x18]
  0016c	e283203c	 add         r2, r3, #0x3C
  00170	e59d300c	 ldr         r3, [sp, #0xC]
  00174	e5823000	 str         r3, [r2]

; 63   :     
; 64   : }

  00178	e59d3018	 ldr         r3, [sp, #0x18]
  0017c	e58d3000	 str         r3, [sp]
  00180	e59d0000	 ldr         r0, [sp]
  00184	e28dd010	 add         sp, sp, #0x10
  00188	e89d6000	 ldmia       sp, {sp, lr}
  0018c	e12fff1e	 bx          lr
  00190		 |$LN6@HardwareCo|
  00190		 |$LN7@HardwareCo|
  00190	00000000	 DCD         |??_7HardwareContext@@6B@|
  00194		 |$M37670|

			 ENDP  ; |??0HardwareContext@@QAA@XZ|, HardwareContext::HardwareContext

	EXPORT	|??1HardwareContext@@UAA@XZ|		; HardwareContext::~HardwareContext
	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T37680| DCD	|$LN6@scalar|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GHardwareContext@@UAAPAXI@Z| PROC	; HardwareContext::`scalar deleting destructor'
  00000		 |$LN6@scalar|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37677|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1HardwareContext@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M37678|

			 ENDP  ; |??_GHardwareContext@@UAAPAXI@Z|, HardwareContext::`scalar deleting destructor'

	EXPORT	|??_7InputDeviceContext@@6B@| [ DATA ]	; InputDeviceContext::`vftable'
	EXPORT	|??0DeviceContext@@QAA@XZ|		; DeviceContext::DeviceContext
	IMPORT	|?IsSupportedFormat@DeviceContext@@UAAHPAUtWAVEFORMATEX@@@Z| ; DeviceContext::IsSupportedFormat
	IMPORT	|?GetExtDevCaps@InputDeviceContext@@UAAKPAXK@Z| ; InputDeviceContext::GetExtDevCaps
	IMPORT	|?GetDevCaps@InputDeviceContext@@UAAKPAXK@Z| ; InputDeviceContext::GetDevCaps
	IMPORT	|?StreamReadyToRender@InputDeviceContext@@UAAXPAVStreamContext@@@Z| ; InputDeviceContext::StreamReadyToRender
	IMPORT	|?CreateStream@InputDeviceContext@@UAAPAVStreamContext@@PAUwaveopendesc_tag@@@Z| ; InputDeviceContext::CreateStream

  00000			 AREA	 |.pdata|, PDATA
|$T37688| DCD	|$LN5@InputDevic|
	DCD	0x40001004

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7InputDeviceContext@@6B@| DCD |?IsSupportedFormat@DeviceContext@@UAAHPAUtWAVEFORMATEX@@@Z| ; InputDeviceContext::`vftable'
	DCD	|?GetExtDevCaps@InputDeviceContext@@UAAKPAXK@Z|
	DCD	|?GetDevCaps@InputDeviceContext@@UAAKPAXK@Z|
	DCD	|?StreamReadyToRender@InputDeviceContext@@UAAXPAVStreamContext@@@Z|
	DCD	|?CreateStream@InputDeviceContext@@UAAPAVStreamContext@@PAUwaveopendesc_tag@@@Z|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0InputDeviceContext@@QAA@XZ| PROC	; InputDeviceContext::InputDeviceContext
  00000		 |$LN5@InputDevic|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37685|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??0DeviceContext@@QAA@XZ|
  00018	e59f201c	 ldr         r2, [pc, #0x1C]
  0001c	e59d300c	 ldr         r3, [sp, #0xC]
  00020	e5832000	 str         r2, [r3]
  00024	e59d300c	 ldr         r3, [sp, #0xC]
  00028	e58d3000	 str         r3, [sp]
  0002c	e59d0000	 ldr         r0, [sp]
  00030	e28dd004	 add         sp, sp, #4
  00034	e89d6000	 ldmia       sp, {sp, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$LN6@InputDevic|
  0003c		 |$LN7@InputDevic|
  0003c	00000000	 DCD         |??_7InputDeviceContext@@6B@|
  00040		 |$M37686|

			 ENDP  ; |??0InputDeviceContext@@QAA@XZ|, InputDeviceContext::InputDeviceContext

	EXPORT	|??_7DeviceContext@@6B@| [ DATA ]	; DeviceContext::`vftable'
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\devctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T37698| DCD	|$LN8@DeviceCont|
	DCD	0x40003604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7DeviceContext@@6B@| DCD |?IsSupportedFormat@DeviceContext@@UAAHPAUtWAVEFORMATEX@@@Z| ; DeviceContext::`vftable'
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0DeviceContext@@QAA@XZ| PROC	; DeviceContext::DeviceContext

; 32   :     DeviceContext()

  00000		 |$LN8@DeviceCont|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M37695|
  00010	e59f20bc	 ldr         r2, [pc, #0xBC]
  00014	e59d3010	 ldr         r3, [sp, #0x10]
  00018	e5832000	 str         r2, [r3]

; 33   :     {
; 34   :         InitializeListHead(&m_StreamList);

  0001c	e59d3010	 ldr         r3, [sp, #0x10]
  00020	e2832004	 add         r2, r3, #4
  00024	e59d3010	 ldr         r3, [sp, #0x10]
  00028	e2833008	 add         r3, r3, #8
  0002c	e5832000	 str         r2, [r3]
  00030	e59d3010	 ldr         r3, [sp, #0x10]
  00034	e2831008	 add         r1, r3, #8
  00038	e59d3010	 ldr         r3, [sp, #0x10]
  0003c	e2832004	 add         r2, r3, #4
  00040	e5913000	 ldr         r3, [r1]
  00044	e5823000	 str         r3, [r2]

; 35   :         m_dwGain = 0xFFFF;

  00048	e59d3010	 ldr         r3, [sp, #0x10]
  0004c	e283200c	 add         r2, r3, #0xC
  00050	e3a03cff	 mov         r3, #0xFF, 24
  00054	e38330ff	 orr         r3, r3, #0xFF
  00058	e5823000	 str         r3, [r2]

; 36   :         m_dwDefaultStreamGain = 0xFFFF;

  0005c	e59d3010	 ldr         r3, [sp, #0x10]
  00060	e2832010	 add         r2, r3, #0x10
  00064	e3a03cff	 mov         r3, #0xFF, 24
  00068	e38330ff	 orr         r3, r3, #0xFF
  0006c	e5823000	 str         r3, [r2]

; 37   :         for (int i=0;i<SECONDARYGAINCLASSMAX;i++)

  00070	e3a03000	 mov         r3, #0
  00074	e58d3000	 str         r3, [sp]
  00078	ea000002	 b           |$LN3@DeviceCont|
  0007c		 |$LN2@DeviceCont|
  0007c	e59d3000	 ldr         r3, [sp]
  00080	e2833001	 add         r3, r3, #1
  00084	e58d3000	 str         r3, [sp]
  00088		 |$LN3@DeviceCont|
  00088	e59d3000	 ldr         r3, [sp]
  0008c	e3530004	 cmp         r3, #4
  00090	aa000009	 bge         |$LN1@DeviceCont|

; 38   :         {
; 39   :             m_dwSecondaryGainLimit[i]=0xFFFF;

  00094	e59d3010	 ldr         r3, [sp, #0x10]
  00098	e2831014	 add         r1, r3, #0x14
  0009c	e59d2000	 ldr         r2, [sp]
  000a0	e3a03004	 mov         r3, #4
  000a4	e0030392	 mul         r3, r2, r3
  000a8	e0812003	 add         r2, r1, r3
  000ac	e3a03cff	 mov         r3, #0xFF, 24
  000b0	e38330ff	 orr         r3, r3, #0xFF
  000b4	e5823000	 str         r3, [r2]

; 40   :         }

  000b8	eaffffef	 b           |$LN2@DeviceCont|
  000bc		 |$LN1@DeviceCont|

; 41   : 
; 42   : #ifdef PROFILE_MIXER
; 43   : 		m_liPCStart.QuadPart = 0;
; 44   : 		m_liPCTotal.QuadPart = 0;
; 45   : 		QueryPerformanceFrequency(&m_liPCFrequency);
; 46   : #endif
; 47   :     }

  000bc	e59d3010	 ldr         r3, [sp, #0x10]
  000c0	e58d3004	 str         r3, [sp, #4]
  000c4	e59d0004	 ldr         r0, [sp, #4]
  000c8	e28dd008	 add         sp, sp, #8
  000cc	e89d6000	 ldmia       sp, {sp, lr}
  000d0	e12fff1e	 bx          lr
  000d4		 |$LN9@DeviceCont|
  000d4		 |$LN10@DeviceCont|
  000d4	00000000	 DCD         |??_7DeviceContext@@6B@|
  000d8		 |$M37696|

			 ENDP  ; |??0DeviceContext@@QAA@XZ|, DeviceContext::DeviceContext

	EXPORT	|??_7OutputDeviceContext@@6B@| [ DATA ]	; OutputDeviceContext::`vftable'
	IMPORT	|?IsSupportedFormat@OutputDeviceContext@@UAAHPAUtWAVEFORMATEX@@@Z| ; OutputDeviceContext::IsSupportedFormat
	IMPORT	|?GetExtDevCaps@OutputDeviceContext@@UAAKPAXK@Z| ; OutputDeviceContext::GetExtDevCaps
	IMPORT	|?GetDevCaps@OutputDeviceContext@@UAAKPAXK@Z| ; OutputDeviceContext::GetDevCaps
	IMPORT	|?StreamReadyToRender@OutputDeviceContext@@UAAXPAVStreamContext@@@Z| ; OutputDeviceContext::StreamReadyToRender
	IMPORT	|?CreateStream@OutputDeviceContext@@UAAPAVStreamContext@@PAUwaveopendesc_tag@@@Z| ; OutputDeviceContext::CreateStream

  00000			 AREA	 |.pdata|, PDATA
|$T37708| DCD	|$LN5@OutputDevi|
	DCD	0x40001004

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7OutputDeviceContext@@6B@| DCD |?IsSupportedFormat@OutputDeviceContext@@UAAHPAUtWAVEFORMATEX@@@Z| ; OutputDeviceContext::`vftable'
	DCD	|?GetExtDevCaps@OutputDeviceContext@@UAAKPAXK@Z|
	DCD	|?GetDevCaps@OutputDeviceContext@@UAAKPAXK@Z|
	DCD	|?StreamReadyToRender@OutputDeviceContext@@UAAXPAVStreamContext@@@Z|
	DCD	|?CreateStream@OutputDeviceContext@@UAAPAVStreamContext@@PAUwaveopendesc_tag@@@Z|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0OutputDeviceContext@@QAA@XZ| PROC	; OutputDeviceContext::OutputDeviceContext
  00000		 |$LN5@OutputDevi|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37705|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??0DeviceContext@@QAA@XZ|
  00018	e59f201c	 ldr         r2, [pc, #0x1C]
  0001c	e59d300c	 ldr         r3, [sp, #0xC]
  00020	e5832000	 str         r2, [r3]
  00024	e59d300c	 ldr         r3, [sp, #0xC]
  00028	e58d3000	 str         r3, [sp]
  0002c	e59d0000	 ldr         r0, [sp]
  00030	e28dd004	 add         sp, sp, #4
  00034	e89d6000	 ldmia       sp, {sp, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$LN6@OutputDevi|
  0003c		 |$LN7@OutputDevi|
  0003c	00000000	 DCD         |??_7OutputDeviceContext@@6B@|
  00040		 |$M37706|

			 ENDP  ; |??0OutputDeviceContext@@QAA@XZ|, OutputDeviceContext::OutputDeviceContext

	EXPORT	|?TerminateCloseThread@HardwareContext@@IAAXPAX@Z| ; HardwareContext::TerminateCloseThread
	EXPORT	|SetEvent|
	IMPORT	|DeleteCriticalSection|
	IMPORT	|CloseBusAccessHandle|
	IMPORT	|SetDevicePowerState|
	IMPORT	|CloseHandle|
	IMPORT	|KernelIoControl|
	IMPORT	|InterruptDisable|
	IMPORT	|Sleep|

  00008			 AREA	 |.pdata|, PDATA
|$T37721| DCD	|$LN14@HardwareCo@2|
	DCD	0x40009104
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.cpp

  00194			 AREA	 |.text|, CODE, ARM

  00194		 |??1HardwareContext@@UAA@XZ| PROC	; HardwareContext::~HardwareContext

; 74   : {

  00194		 |$LN14@HardwareCo@2|
  00194	e1a0c00d	 mov         r12, sp
  00198	e92d0001	 stmdb       sp!, {r0}
  0019c	e92d5000	 stmdb       sp!, {r12, lr}
  001a0	e24dd018	 sub         sp, sp, #0x18
  001a4		 |$M37718|
  001a4	e59f2228	 ldr         r2, [pc, #0x228]
  001a8	e59d3020	 ldr         r3, [sp, #0x20]
  001ac	e5832000	 str         r2, [r3]

; 75   :     m_fTerminating = TRUE;

  001b0	e59d3020	 ldr         r3, [sp, #0x20]
  001b4	e283202c	 add         r2, r3, #0x2C
  001b8	e3a03001	 mov         r3, #1
  001bc	e5823000	 str         r3, [r2]

; 76   : 
; 77   :     if (m_hTimeoutEvent!=NULL)

  001c0	e59d3020	 ldr         r3, [sp, #0x20]
  001c4	e2833048	 add         r3, r3, #0x48
  001c8	e5933000	 ldr         r3, [r3]
  001cc	e3530000	 cmp         r3, #0
  001d0	0a000003	 beq         |$LN9@HardwareCo@2|

; 78   :         SetEvent(m_hTimeoutEvent);

  001d4	e59d3020	 ldr         r3, [sp, #0x20]
  001d8	e2833048	 add         r3, r3, #0x48
  001dc	e5930000	 ldr         r0, [r3]
  001e0	eb000000	 bl          SetEvent
  001e4		 |$LN9@HardwareCo@2|

; 79   :     if (m_hAudioInterruptTx!=NULL)

  001e4	e59d3020	 ldr         r3, [sp, #0x20]
  001e8	e2833038	 add         r3, r3, #0x38
  001ec	e5933000	 ldr         r3, [r3]
  001f0	e3530000	 cmp         r3, #0
  001f4	0a000003	 beq         |$LN8@HardwareCo@2|

; 80   :         SetEvent(m_hAudioInterruptTx);

  001f8	e59d3020	 ldr         r3, [sp, #0x20]
  001fc	e2833038	 add         r3, r3, #0x38
  00200	e5930000	 ldr         r0, [r3]
  00204	eb000000	 bl          SetEvent
  00208		 |$LN8@HardwareCo@2|

; 81   :     if (m_hAudioInterruptRx)

  00208	e59d3020	 ldr         r3, [sp, #0x20]
  0020c	e283303c	 add         r3, r3, #0x3C
  00210	e5933000	 ldr         r3, [r3]
  00214	e3530000	 cmp         r3, #0
  00218	0a000003	 beq         |$LN7@HardwareCo@2|

; 82   :         SetEvent(m_hAudioInterruptRx);

  0021c	e59d3020	 ldr         r3, [sp, #0x20]
  00220	e283303c	 add         r3, r3, #0x3C
  00224	e5930000	 ldr         r0, [r3]
  00228	eb000000	 bl          SetEvent
  0022c		 |$LN7@HardwareCo@2|

; 83   :     
; 84   :     Sleep(500); // Sleep 500 ticks to allow all thread terminated.

  0022c	e3a00f7d	 mov         r0, #0x7D, 30
  00230	eb000000	 bl          Sleep

; 85   :     TerminateCloseThread(m_hAudioInterruptThreadTx);

  00234	e59d3020	 ldr         r3, [sp, #0x20]
  00238	e2833040	 add         r3, r3, #0x40
  0023c	e5931000	 ldr         r1, [r3]
  00240	e59d0020	 ldr         r0, [sp, #0x20]
  00244	eb000000	 bl          |?TerminateCloseThread@HardwareContext@@IAAXPAX@Z|

; 86   :     TerminateCloseThread(m_hAudioInterruptThreadRx);

  00248	e59d3020	 ldr         r3, [sp, #0x20]
  0024c	e2833044	 add         r3, r3, #0x44
  00250	e5931000	 ldr         r1, [r3]
  00254	e59d0020	 ldr         r0, [sp, #0x20]
  00258	eb000000	 bl          |?TerminateCloseThread@HardwareContext@@IAAXPAX@Z|

; 87   :     TerminateCloseThread(m_hTimeoutThread);

  0025c	e59d3020	 ldr         r3, [sp, #0x20]
  00260	e283304c	 add         r3, r3, #0x4C
  00264	e5931000	 ldr         r1, [r3]
  00268	e59d0020	 ldr         r0, [sp, #0x20]
  0026c	eb000000	 bl          |?TerminateCloseThread@HardwareContext@@IAAXPAX@Z|

; 88   :     
; 89   :     if (m_fRxInterruptIntialized)

  00270	e59d3020	 ldr         r3, [sp, #0x20]
  00274	e2833030	 add         r3, r3, #0x30
  00278	e5933000	 ldr         r3, [r3]
  0027c	e3530000	 cmp         r3, #0
  00280	0a000003	 beq         |$LN6@HardwareCo@2|

; 90   :         InterruptDisable(m_IntrAudioRx);  

  00284	e59d3020	 ldr         r3, [sp, #0x20]
  00288	e2833028	 add         r3, r3, #0x28
  0028c	e5930000	 ldr         r0, [r3]
  00290	eb000000	 bl          InterruptDisable
  00294		 |$LN6@HardwareCo@2|

; 91   :     if (m_fTxInterruptIntialized)

  00294	e59d3020	 ldr         r3, [sp, #0x20]
  00298	e2833034	 add         r3, r3, #0x34
  0029c	e5933000	 ldr         r3, [r3]
  002a0	e3530000	 cmp         r3, #0
  002a4	0a000003	 beq         |$LN5@HardwareCo@2|

; 92   :         InterruptDisable(m_IntrAudioTx);   

  002a8	e59d3020	 ldr         r3, [sp, #0x20]
  002ac	e2833024	 add         r3, r3, #0x24
  002b0	e5930000	 ldr         r0, [r3]
  002b4	eb000000	 bl          InterruptDisable
  002b8		 |$LN5@HardwareCo@2|

; 93   :     
; 94   :     if (m_IntrAudioTx != SYSINTR_UNDEFINED && m_fRequestedSysIntr) {

  002b8	e59d3020	 ldr         r3, [sp, #0x20]
  002bc	e2833024	 add         r3, r3, #0x24
  002c0	e5933000	 ldr         r3, [r3]
  002c4	e3730001	 cmn         r3, #1
  002c8	0a00000e	 beq         |$LN4@HardwareCo@2|
  002cc	e59d3020	 ldr         r3, [sp, #0x20]
  002d0	e2833020	 add         r3, r3, #0x20
  002d4	e5933000	 ldr         r3, [r3]
  002d8	e3530000	 cmp         r3, #0
  002dc	0a000009	 beq         |$LN4@HardwareCo@2|

; 95   :         KernelIoControl( IOCTL_HAL_RELEASE_SYSINTR,&m_IntrAudioTx, sizeof( m_IntrAudioTx ), NULL,  0,  NULL );

  002e0	e3a03000	 mov         r3, #0
  002e4	e58d3004	 str         r3, [sp, #4]
  002e8	e3a03000	 mov         r3, #0
  002ec	e58d3000	 str         r3, [sp]
  002f0	e3a03000	 mov         r3, #0
  002f4	e3a02004	 mov         r2, #4
  002f8	e59d1020	 ldr         r1, [sp, #0x20]
  002fc	e2811024	 add         r1, r1, #0x24
  00300	e59f00c8	 ldr         r0, [pc, #0xC8]
  00304	eb000000	 bl          KernelIoControl
  00308		 |$LN4@HardwareCo@2|

; 96   :     }
; 97   :     if (m_IntrAudioRx != SYSINTR_UNDEFINED && m_fRequestedSysIntr) {

  00308	e59d3020	 ldr         r3, [sp, #0x20]
  0030c	e2833028	 add         r3, r3, #0x28
  00310	e5933000	 ldr         r3, [r3]
  00314	e3730001	 cmn         r3, #1
  00318	0a00000e	 beq         |$LN3@HardwareCo@2|
  0031c	e59d3020	 ldr         r3, [sp, #0x20]
  00320	e2833020	 add         r3, r3, #0x20
  00324	e5933000	 ldr         r3, [r3]
  00328	e3530000	 cmp         r3, #0
  0032c	0a000009	 beq         |$LN3@HardwareCo@2|

; 98   :         KernelIoControl( IOCTL_HAL_RELEASE_SYSINTR,&m_IntrAudioRx, sizeof( m_IntrAudioRx ), NULL,  0,  NULL );

  00330	e3a03000	 mov         r3, #0
  00334	e58d3004	 str         r3, [sp, #4]
  00338	e3a03000	 mov         r3, #0
  0033c	e58d3000	 str         r3, [sp]
  00340	e3a03000	 mov         r3, #0
  00344	e3a02004	 mov         r2, #4
  00348	e59d1020	 ldr         r1, [sp, #0x20]
  0034c	e2811028	 add         r1, r1, #0x28
  00350	e59f0078	 ldr         r0, [pc, #0x78]
  00354	eb000000	 bl          KernelIoControl
  00358		 |$LN3@HardwareCo@2|

; 99   :     }
; 100  :     if (m_hTimeoutEvent)

  00358	e59d3020	 ldr         r3, [sp, #0x20]
  0035c	e2833048	 add         r3, r3, #0x48
  00360	e5933000	 ldr         r3, [r3]
  00364	e3530000	 cmp         r3, #0
  00368	0a000003	 beq         |$LN2@HardwareCo@2|

; 101  :         CloseHandle(m_hTimeoutEvent);

  0036c	e59d3020	 ldr         r3, [sp, #0x20]
  00370	e2833048	 add         r3, r3, #0x48
  00374	e5930000	 ldr         r0, [r3]
  00378	eb000000	 bl          CloseHandle
  0037c		 |$LN2@HardwareCo@2|

; 102  : 
; 103  :     if (m_hParent ) {

  0037c	e59d3020	 ldr         r3, [sp, #0x20]
  00380	e2833054	 add         r3, r3, #0x54
  00384	e5933000	 ldr         r3, [r3]
  00388	e3530000	 cmp         r3, #0
  0038c	0a000009	 beq         |$LN1@HardwareCo@2|

; 104  :         SetDevicePowerState(m_hParent, D4 , NULL);

  00390	e3a02000	 mov         r2, #0
  00394	e3a01004	 mov         r1, #4
  00398	e59d3020	 ldr         r3, [sp, #0x20]
  0039c	e2833054	 add         r3, r3, #0x54
  003a0	e5930000	 ldr         r0, [r3]
  003a4	eb000000	 bl          SetDevicePowerState

; 105  :         CloseBusAccessHandle (m_hParent ) ;

  003a8	e59d3020	 ldr         r3, [sp, #0x20]
  003ac	e2833054	 add         r3, r3, #0x54
  003b0	e5930000	 ldr         r0, [r3]
  003b4	eb000000	 bl          CloseBusAccessHandle
  003b8		 |$LN1@HardwareCo@2|

; 106  :     }
; 107  :     DeleteCriticalSection(&m_Lock);

  003b8	e59d3020	 ldr         r3, [sp, #0x20]
  003bc	e2830004	 add         r0, r3, #4
  003c0	eb000000	 bl          DeleteCriticalSection

; 108  : }

  003c4	e28dd018	 add         sp, sp, #0x18
  003c8	e89d6000	 ldmia       sp, {sp, lr}
  003cc	e12fff1e	 bx          lr
  003d0		 |$LN15@HardwareCo@2|
  003d0		 |$LN16@HardwareCo@2|
  003d0	010100d8	 DCD         0x10100d8
  003d4		 |$LN17@HardwareCo@2|
  003d4	00000000	 DCD         |??_7HardwareContext@@6B@|
  003d8		 |$M37719|

			 ENDP  ; |??1HardwareContext@@UAA@XZ|, HardwareContext::~HardwareContext

	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T37730| DCD	|$LN5@SetEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M37727|

; 236  : 	return EventModify(h,EVENT_SET);

  00010	e3a01003	 mov         r1, #3
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 237  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M37728|

			 ENDP  ; |SetEvent|

	IMPORT	|TerminateThread|
	IMPORT	|WaitForSingleObject|

  00010			 AREA	 |.pdata|, PDATA
|$T37737| DCD	|$LN7@TerminateC|
	DCD	0x40001604
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.cpp

  003d8			 AREA	 |.text|, CODE, ARM

  003d8		 |?TerminateCloseThread@HardwareContext@@IAAXPAX@Z| PROC ; HardwareContext::TerminateCloseThread

; 110  : {

  003d8		 |$LN7@TerminateC|
  003d8	e1a0c00d	 mov         r12, sp
  003dc	e92d0003	 stmdb       sp!, {r0, r1}
  003e0	e92d5000	 stmdb       sp!, {r12, lr}
  003e4	e24dd004	 sub         sp, sp, #4
  003e8		 |$M37734|

; 111  :     if (hThread) {

  003e8	e59d3010	 ldr         r3, [sp, #0x10]
  003ec	e3530000	 cmp         r3, #0
  003f0	0a00000b	 beq         |$LN2@TerminateC|

; 112  :         if( ::WaitForSingleObject( hThread, 0 ) != WAIT_OBJECT_0 ) // Can't terminate. Force it.

  003f4	e3a01000	 mov         r1, #0
  003f8	e59d0010	 ldr         r0, [sp, #0x10]
  003fc	eb000000	 bl          WaitForSingleObject
  00400	e58d0000	 str         r0, [sp]
  00404	e59d3000	 ldr         r3, [sp]
  00408	e3530000	 cmp         r3, #0
  0040c	0a000002	 beq         |$LN1@TerminateC|

; 113  :             ::TerminateThread( hThread, ( DWORD ) - 1 ) ;

  00410	e3e01000	 mvn         r1, #0
  00414	e59d0010	 ldr         r0, [sp, #0x10]
  00418	eb000000	 bl          TerminateThread
  0041c		 |$LN1@TerminateC|

; 114  :         ::CloseHandle( hThread );

  0041c	e59d0010	 ldr         r0, [sp, #0x10]
  00420	eb000000	 bl          CloseHandle
  00424		 |$LN2@TerminateC|

; 115  :     }
; 116  : }

  00424	e28dd004	 add         sp, sp, #4
  00428	e89d6000	 ldmia       sp, {sp, lr}
  0042c	e12fff1e	 bx          lr
  00430		 |$M37735|

			 ENDP  ; |?TerminateCloseThread@HardwareContext@@IAAXPAX@Z|, HardwareContext::TerminateCloseThread

	EXPORT	|?InitInterruptThread@HardwareContext@@IAAHXZ| ; HardwareContext::InitInterruptThread
	EXPORT	|?InitController@HardwareContext@@IAAXXZ| ; HardwareContext::InitController
	EXPORT	|?InitDMA@HardwareContext@@IAAXXZ|	; HardwareContext::InitDMA
	EXPORT	|?InitCodec@HardwareContext@@IAAXXZ|	; HardwareContext::InitCodec
	EXPORT	|?InitMemories@HardwareContext@@IAAHXZ|	; HardwareContext::InitMemories
	EXPORT	|??_C@_1FI@IFEJADKJ@?$AAW?$AAA?$AAV?$AAE?$AAD?$AAE?$AAV?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAI@| [ DATA ] ; `string'
	EXPORT	|?Init@HardwareContext@@QAAHK@Z|	; HardwareContext::Init
	IMPORT	|CreateBusAccessHandle|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|

  00018			 AREA	 |.pdata|, PDATA
|$T37745| DCD	|$LN12@Init|
	DCD	0x40006f04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@IFEJADKJ@?$AAW?$AAA?$AAV?$AAE?$AAD?$AAE?$AAV?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAI@| DCB "W"
	DCB	0x0, "A", 0x0, "V", 0x0, "E", 0x0, "D", 0x0, "E", 0x0, "V"
	DCB	0x0, ":", 0x0, " ", 0x0, "H", 0x0, "a", 0x0, "r", 0x0, "d"
	DCB	0x0, "w", 0x0, "a", 0x0, "r", 0x0, "e", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "x", 0x0, "="
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00430			 AREA	 |.text|, CODE, ARM

  00430		 |?Init@HardwareContext@@QAAHK@Z| PROC	; HardwareContext::Init

; 127  : {

  00430		 |$LN12@Init|
  00430	e1a0c00d	 mov         r12, sp
  00434	e92d0003	 stmdb       sp!, {r0, r1}
  00438	e92d5000	 stmdb       sp!, {r12, lr}
  0043c	e24dd014	 sub         sp, sp, #0x14
  00440		 |$M37742|

; 128  :     DEBUGMSG(ZONE_AC,(TEXT("WAVEDEV: HardwareContext::Init Index=0x%x\r\n"), Index));

  00440	e59f31a0	 ldr         r3, [pc, #0x1A0]
  00444	e5933440	 ldr         r3, [r3, #0x440]
  00448	e3130001	 tst         r3, #1
  0044c	0a000005	 beq         |$LN8@Init|
  00450	e59d1020	 ldr         r1, [sp, #0x20]
  00454	e59f0188	 ldr         r0, [pc, #0x188]
  00458	eb000000	 bl          NKDbgPrintfW
  0045c	e3a03001	 mov         r3, #1
  00460	e58d3004	 str         r3, [sp, #4]
  00464	ea000001	 b           |$LN9@Init|
  00468		 |$LN8@Init|
  00468	e3a03000	 mov         r3, #0
  0046c	e58d3004	 str         r3, [sp, #4]
  00470		 |$LN9@Init|

; 129  : 
; 130  :     if (m_Initialized)

  00470	e59d301c	 ldr         r3, [sp, #0x1C]
  00474	e283305c	 add         r3, r3, #0x5C
  00478	e5933000	 ldr         r3, [r3]
  0047c	e3530000	 cmp         r3, #0
  00480	0a000002	 beq         |$LN5@Init|

; 131  :     {
; 132  :         return FALSE;

  00484	e3a03000	 mov         r3, #0
  00488	e58d3000	 str         r3, [sp]
  0048c	ea000050	 b           |$LN6@Init|
  00490		 |$LN5@Init|

; 133  :     }
; 134  : 
; 135  :     m_hParent           = CreateBusAccessHandle((LPCTSTR) Index) ;

  00490	e59d0020	 ldr         r0, [sp, #0x20]
  00494	eb000000	 bl          CreateBusAccessHandle
  00498	e58d0008	 str         r0, [sp, #8]
  0049c	e59d301c	 ldr         r3, [sp, #0x1C]
  004a0	e2832054	 add         r2, r3, #0x54
  004a4	e59d3008	 ldr         r3, [sp, #8]
  004a8	e5823000	 str         r3, [r2]

; 136  : 
; 137  :     m_DriverIndex       = Index;

  004ac	e59d301c	 ldr         r3, [sp, #0x1C]
  004b0	e2832058	 add         r2, r3, #0x58
  004b4	e59d3020	 ldr         r3, [sp, #0x20]
  004b8	e5823000	 str         r3, [r2]

; 138  :     m_InPowerHandler    = FALSE;

  004bc	e59d301c	 ldr         r3, [sp, #0x1C]
  004c0	e2832060	 add         r2, r3, #0x60
  004c4	e3a03000	 mov         r3, #0
  004c8	e5823000	 str         r3, [r2]

; 139  :     m_InputDMARunning   = FALSE;

  004cc	e59d301c	 ldr         r3, [sp, #0x1C]
  004d0	e2832068	 add         r2, r3, #0x68
  004d4	e3a03000	 mov         r3, #0
  004d8	e5823000	 str         r3, [r2]

; 140  :     m_OutputDMARunning  = FALSE;

  004dc	e59d301c	 ldr         r3, [sp, #0x1C]
  004e0	e283206c	 add         r2, r3, #0x6C
  004e4	e3a03000	 mov         r3, #0
  004e8	e5823000	 str         r3, [r2]

; 141  :     m_NumForcedSpeaker  = 0;

  004ec	e59d301c	 ldr         r3, [sp, #0x1C]
  004f0	e2832064	 add         r2, r3, #0x64
  004f4	e3a03000	 mov         r3, #0
  004f8	e5823000	 str         r3, [r2]

; 142  : 
; 143  :     m_bDMARunning       = FALSE;

  004fc	e59d301c	 ldr         r3, [sp, #0x1C]
  00500	e28320c8	 add         r2, r3, #0xC8
  00504	e3a03000	 mov         r3, #0
  00508	e5823000	 str         r3, [r2]

; 144  :     m_bBtHeadsetSelected= FALSE;

  0050c	e59d301c	 ldr         r3, [sp, #0x1C]
  00510	e28320d8	 add         r2, r3, #0xD8
  00514	e3a03000	 mov         r3, #0
  00518	e5823000	 str         r3, [r2]

; 145  :     m_dwBtAudioRouting  = BT_AUDIO_MODEM;

  0051c	e59d301c	 ldr         r3, [sp, #0x1C]
  00520	e28320dc	 add         r2, r3, #0xDC
  00524	e3a03002	 mov         r3, #2
  00528	e5823000	 str         r3, [r2]

; 146  :     m_bHeadsetPluggedIn = FALSE;    

  0052c	e59d301c	 ldr         r3, [sp, #0x1C]
  00530	e28320cc	 add         r2, r3, #0xCC
  00534	e3a03000	 mov         r3, #0
  00538	e5823000	 str         r3, [r2]

; 147  :     m_bToggleLoadSpeaker= FALSE;   

  0053c	e59d301c	 ldr         r3, [sp, #0x1C]
  00540	e28320d0	 add         r2, r3, #0xD0
  00544	e3a03000	 mov         r3, #0
  00548	e5823000	 str         r3, [r2]

; 148  :     m_hRil              = NULL;                 

  0054c	e59d301c	 ldr         r3, [sp, #0x1C]
  00550	e28320d4	 add         r2, r3, #0xD4
  00554	e3a03000	 mov         r3, #0
  00558	e5823000	 str         r3, [r2]

; 149  :     
; 150  :     // Map registers and the DMA buffers into driver's virtual address space
; 151  :     if (!InitMemories())

  0055c	e59d001c	 ldr         r0, [sp, #0x1C]
  00560	eb000000	 bl          |?InitMemories@HardwareContext@@IAAHXZ|
  00564	e58d000c	 str         r0, [sp, #0xC]
  00568	e59d300c	 ldr         r3, [sp, #0xC]
  0056c	e3530000	 cmp         r3, #0
  00570	1a000001	 bne         |$LN4@Init|
  00574	ea000012	 b           |$LN3@Init|

; 152  :     {
; 153  :         goto Exit;

  00578	ea000011	 b           |$Exit$37365|
  0057c		 |$LN4@Init|

; 154  :     }
; 155  : 
; 156  :     // Init codec.
; 157  :     InitCodec();

  0057c	e59d001c	 ldr         r0, [sp, #0x1C]
  00580	eb000000	 bl          |?InitCodec@HardwareContext@@IAAXXZ|

; 158  : 
; 159  :     // Configure the DMA controller
; 160  :     InitDMA();

  00584	e59d001c	 ldr         r0, [sp, #0x1C]
  00588	eb000000	 bl          |?InitDMA@HardwareContext@@IAAXXZ|

; 161  : 
; 162  :     // Configure the controller
; 163  :     InitController();

  0058c	e59d001c	 ldr         r0, [sp, #0x1C]
  00590	eb000000	 bl          |?InitController@HardwareContext@@IAAXXZ|

; 164  : 
; 165  :     if (!InitInterruptThread())

  00594	e59d001c	 ldr         r0, [sp, #0x1C]
  00598	eb000000	 bl          |?InitInterruptThread@HardwareContext@@IAAHXZ|
  0059c	e58d0010	 str         r0, [sp, #0x10]
  005a0	e59d3010	 ldr         r3, [sp, #0x10]
  005a4	e3530000	 cmp         r3, #0
  005a8	1a000001	 bne         |$LN2@Init|
  005ac	ea000004	 b           |$LN1@Init|

; 166  :     {
; 167  :         goto Exit;

  005b0	ea000003	 b           |$Exit$37365|
  005b4		 |$LN2@Init|

; 168  :     }
; 169  : 
; 170  :     m_Initialized=TRUE;

  005b4	e59d301c	 ldr         r3, [sp, #0x1C]
  005b8	e283205c	 add         r2, r3, #0x5C
  005bc	e3a03001	 mov         r3, #1
  005c0	e5823000	 str         r3, [r2]
  005c4		 |$LN1@Init|
  005c4		 |$LN3@Init|
  005c4		 |$Exit$37365|

; 171  : 
; 172  : Exit:
; 173  :     return m_Initialized;

  005c4	e59d301c	 ldr         r3, [sp, #0x1C]
  005c8	e283305c	 add         r3, r3, #0x5C
  005cc	e5933000	 ldr         r3, [r3]
  005d0	e58d3000	 str         r3, [sp]
  005d4		 |$LN6@Init|

; 174  : }

  005d4	e59d0000	 ldr         r0, [sp]
  005d8	e28dd014	 add         sp, sp, #0x14
  005dc	e89d6000	 ldmia       sp, {sp, lr}
  005e0	e12fff1e	 bx          lr
  005e4		 |$LN13@Init|
  005e4		 |$LN14@Init|
  005e4	00000000	 DCD         |??_C@_1FI@IFEJADKJ@?$AAW?$AAA?$AAV?$AAE?$AAD?$AAE?$AAV?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAI@|
  005e8		 |$LN15@Init|
  005e8	00000000	 DCD         |dpCurSettings|
  005ec		 |$M37743|

			 ENDP  ; |?Init@HardwareContext@@QAAHK@Z|, HardwareContext::Init


  00020			 AREA	 |.pdata|, PDATA
|$T37754| DCD	|$LN11@InitMemori|
	DCD	0x40005d04
; Function compile flags: /Odtp

  005ec			 AREA	 |.text|, CODE, ARM

  005ec		 |?InitMemories@HardwareContext@@IAAHXZ| PROC ; HardwareContext::InitMemories

; 185  : {

  005ec		 |$LN11@InitMemori|
  005ec	e1a0c00d	 mov         r12, sp
  005f0	e92d0001	 stmdb       sp!, {r0}
  005f4	e92d5000	 stmdb       sp!, {r12, lr}
  005f8	e24dd020	 sub         sp, sp, #0x20
  005fc		 |$M37751|

; 186  :     PBYTE pbDMABufIn, pbDMABufOut;
; 187  : 
; 188  :     if (!HWMapControllerRegs ())

  005fc	e59d3028	 ldr         r3, [sp, #0x28]
  00600	e5933000	 ldr         r3, [r3]
  00604	e2833030	 add         r3, r3, #0x30
  00608	e59d0028	 ldr         r0, [sp, #0x28]
  0060c	e5933000	 ldr         r3, [r3]
  00610	e1a0e00f	 mov         lr, pc
  00614	e12fff13	 bx          r3
  00618	e58d0010	 str         r0, [sp, #0x10]
  0061c	e59d3010	 ldr         r3, [sp, #0x10]
  00620	e3530000	 cmp         r3, #0
  00624	1a000001	 bne         |$LN6@InitMemori|
  00628	ea000046	 b           |$LN5@InitMemori|

; 189  :     {
; 190  :         goto ErrExit;

  0062c	ea000045	 b           |$ErrExit$37375|
  00630		 |$LN6@InitMemori|

; 191  :     }
; 192  : 
; 193  :     if (HWMapDMAMemory(AUDIO_DMA_PAGE_SIZE*AUDIO_DMA_PAGES*2))

  00630	e3a01902	 mov         r1, #2, 18
  00634	e59d3028	 ldr         r3, [sp, #0x28]
  00638	e5933000	 ldr         r3, [r3]
  0063c	e2833004	 add         r3, r3, #4
  00640	e59d0028	 ldr         r0, [sp, #0x28]
  00644	e5933000	 ldr         r3, [r3]
  00648	e1a0e00f	 mov         lr, pc
  0064c	e12fff13	 bx          r3
  00650	e58d0014	 str         r0, [sp, #0x14]
  00654	e59d3014	 ldr         r3, [sp, #0x14]
  00658	e3530000	 cmp         r3, #0
  0065c	0a000039	 beq         |$LN4@InitMemori|

; 194  :     {
; 195  :         pbDMABufIn  = HWDMAMemoryIn(); 

  00660	e59d3028	 ldr         r3, [sp, #0x28]
  00664	e5933000	 ldr         r3, [r3]
  00668	e2833028	 add         r3, r3, #0x28
  0066c	e59d0028	 ldr         r0, [sp, #0x28]
  00670	e5933000	 ldr         r3, [r3]
  00674	e1a0e00f	 mov         lr, pc
  00678	e12fff13	 bx          r3
  0067c	e58d0018	 str         r0, [sp, #0x18]
  00680	e59d3018	 ldr         r3, [sp, #0x18]
  00684	e58d3004	 str         r3, [sp, #4]

; 196  :         pbDMABufOut = HWDMAMemoryOut();

  00688	e59d3028	 ldr         r3, [sp, #0x28]
  0068c	e5933000	 ldr         r3, [r3]
  00690	e283302c	 add         r3, r3, #0x2C
  00694	e59d0028	 ldr         r0, [sp, #0x28]
  00698	e5933000	 ldr         r3, [r3]
  0069c	e1a0e00f	 mov         lr, pc
  006a0	e12fff13	 bx          r3
  006a4	e58d001c	 str         r0, [sp, #0x1C]
  006a8	e59d301c	 ldr         r3, [sp, #0x1C]
  006ac	e58d3000	 str         r3, [sp]

; 197  : 
; 198  :         // Save pointers to the virtual addresses so the driver can access them
; 199  :         for (int i=0; i<AUDIO_DMA_PAGES; i++)

  006b0	e3a03000	 mov         r3, #0
  006b4	e58d3008	 str         r3, [sp, #8]
  006b8	ea000002	 b           |$LN3@InitMemori|
  006bc		 |$LN2@InitMemori|
  006bc	e59d3008	 ldr         r3, [sp, #8]
  006c0	e2833001	 add         r3, r3, #1
  006c4	e58d3008	 str         r3, [sp, #8]
  006c8		 |$LN3@InitMemori|
  006c8	e59d3008	 ldr         r3, [sp, #8]
  006cc	e3530002	 cmp         r3, #2
  006d0	aa000019	 bge         |$LN1@InitMemori|

; 200  :         {
; 201  :             m_Output_pbDMA_PAGES[i] = pbDMABufOut + AUDIO_DMA_PAGE_SIZE*i;

  006d4	e59d1008	 ldr         r1, [sp, #8]
  006d8	e3a03a02	 mov         r3, #2, 20
  006dc	e0020391	 mul         r2, r1, r3
  006e0	e59d3000	 ldr         r3, [sp]
  006e4	e0830002	 add         r0, r3, r2
  006e8	e59d3028	 ldr         r3, [sp, #0x28]
  006ec	e28310c0	 add         r1, r3, #0xC0
  006f0	e59d2008	 ldr         r2, [sp, #8]
  006f4	e3a03004	 mov         r3, #4
  006f8	e0030392	 mul         r3, r2, r3
  006fc	e0813003	 add         r3, r1, r3
  00700	e5830000	 str         r0, [r3]

; 202  :             m_Input_pbDMA_PAGES[i]  = pbDMABufIn + ((AUDIO_DMA_PAGES+i)*AUDIO_DMA_PAGE_SIZE);

  00704	e59d3008	 ldr         r3, [sp, #8]
  00708	e2831002	 add         r1, r3, #2
  0070c	e3a03a02	 mov         r3, #2, 20
  00710	e0020391	 mul         r2, r1, r3
  00714	e59d3004	 ldr         r3, [sp, #4]
  00718	e0830002	 add         r0, r3, r2
  0071c	e59d3028	 ldr         r3, [sp, #0x28]
  00720	e28310b8	 add         r1, r3, #0xB8
  00724	e59d2008	 ldr         r2, [sp, #8]
  00728	e3a03004	 mov         r3, #4
  0072c	e0030392	 mul         r3, r2, r3
  00730	e0813003	 add         r3, r1, r3
  00734	e5830000	 str         r0, [r3]

; 203  :         }

  00738	eaffffdf	 b           |$LN2@InitMemori|
  0073c		 |$LN1@InitMemori|

; 204  : 
; 205  :         return TRUE;

  0073c	e3a03001	 mov         r3, #1
  00740	e58d300c	 str         r3, [sp, #0xC]
  00744	ea000001	 b           |$LN7@InitMemori|
  00748		 |$LN4@InitMemori|
  00748		 |$LN5@InitMemori|
  00748		 |$ErrExit$37375|

; 206  : 
; 207  :     }
; 208  : 
; 209  : ErrExit:
; 210  : 
; 211  :     return FALSE;

  00748	e3a03000	 mov         r3, #0
  0074c	e58d300c	 str         r3, [sp, #0xC]
  00750		 |$LN7@InitMemori|

; 212  : 
; 213  : }

  00750	e59d000c	 ldr         r0, [sp, #0xC]
  00754	e28dd020	 add         sp, sp, #0x20
  00758	e89d6000	 ldmia       sp, {sp, lr}
  0075c	e12fff1e	 bx          lr
  00760		 |$M37752|

			 ENDP  ; |?InitMemories@HardwareContext@@IAAHXZ|, HardwareContext::InitMemories


  00028			 AREA	 |.pdata|, PDATA
|$T37759| DCD	|$LN5@InitDMA|
	DCD	0x40001303
; Function compile flags: /Odtp

  00760			 AREA	 |.text|, CODE, ARM

  00760		 |?InitDMA@HardwareContext@@IAAXXZ| PROC ; HardwareContext::InitDMA

; 224  : {

  00760		 |$LN5@InitDMA|
  00760	e1a0c00d	 mov         r12, sp
  00764	e92d0001	 stmdb       sp!, {r0}
  00768	e92d5000	 stmdb       sp!, {r12, lr}
  0076c		 |$M37756|

; 225  :     HWInitInputDMA();

  0076c	e59d3008	 ldr         r3, [sp, #8]
  00770	e5933000	 ldr         r3, [r3]
  00774	e2833008	 add         r3, r3, #8
  00778	e59d0008	 ldr         r0, [sp, #8]
  0077c	e5933000	 ldr         r3, [r3]
  00780	e1a0e00f	 mov         lr, pc
  00784	e12fff13	 bx          r3

; 226  :     HWInitOutputDMA();

  00788	e59d3008	 ldr         r3, [sp, #8]
  0078c	e5933000	 ldr         r3, [r3]
  00790	e283300c	 add         r3, r3, #0xC
  00794	e59d0008	 ldr         r0, [sp, #8]
  00798	e5933000	 ldr         r3, [r3]
  0079c	e1a0e00f	 mov         lr, pc
  007a0	e12fff13	 bx          r3

; 227  : }

  007a4	e89d6000	 ldmia       sp, {sp, lr}
  007a8	e12fff1e	 bx          lr
  007ac		 |$M37757|

			 ENDP  ; |?InitDMA@HardwareContext@@IAAXXZ|, HardwareContext::InitDMA


  00030			 AREA	 |.pdata|, PDATA
|$T37764| DCD	|$LN5@InitContro|
	DCD	0x40001303
; Function compile flags: /Odtp

  007ac			 AREA	 |.text|, CODE, ARM

  007ac		 |?InitController@HardwareContext@@IAAXXZ| PROC ; HardwareContext::InitController

; 238  : {

  007ac		 |$LN5@InitContro|
  007ac	e1a0c00d	 mov         r12, sp
  007b0	e92d0001	 stmdb       sp!, {r0}
  007b4	e92d5000	 stmdb       sp!, {r12, lr}
  007b8		 |$M37761|

; 239  :     HWInitController();

  007b8	e59d3008	 ldr         r3, [sp, #8]
  007bc	e5933000	 ldr         r3, [r3]
  007c0	e2833034	 add         r3, r3, #0x34
  007c4	e59d0008	 ldr         r0, [sp, #8]
  007c8	e5933000	 ldr         r3, [r3]
  007cc	e1a0e00f	 mov         lr, pc
  007d0	e12fff13	 bx          r3

; 240  :     HWInitNetwork();

  007d4	e59d3008	 ldr         r3, [sp, #8]
  007d8	e5933000	 ldr         r3, [r3]
  007dc	e283303c	 add         r3, r3, #0x3C
  007e0	e59d0008	 ldr         r0, [sp, #8]
  007e4	e5933000	 ldr         r3, [r3]
  007e8	e1a0e00f	 mov         lr, pc
  007ec	e12fff13	 bx          r3

; 241  : }

  007f0	e89d6000	 ldmia       sp, {sp, lr}
  007f4	e12fff1e	 bx          lr
  007f8		 |$M37762|

			 ENDP  ; |?InitController@HardwareContext@@IAAXXZ|, HardwareContext::InitController


  00038			 AREA	 |.pdata|, PDATA
|$T37769| DCD	|$LN5@InitCodec|
	DCD	0x40000c03
; Function compile flags: /Odtp

  007f8			 AREA	 |.text|, CODE, ARM

  007f8		 |?InitCodec@HardwareContext@@IAAXXZ| PROC ; HardwareContext::InitCodec

; 252  : {

  007f8		 |$LN5@InitCodec|
  007f8	e1a0c00d	 mov         r12, sp
  007fc	e92d0001	 stmdb       sp!, {r0}
  00800	e92d5000	 stmdb       sp!, {r12, lr}
  00804		 |$M37766|

; 253  :     HWInitCodec();

  00804	e59d3008	 ldr         r3, [sp, #8]
  00808	e5933000	 ldr         r3, [r3]
  0080c	e2833038	 add         r3, r3, #0x38
  00810	e59d0008	 ldr         r0, [sp, #8]
  00814	e5933000	 ldr         r3, [r3]
  00818	e1a0e00f	 mov         lr, pc
  0081c	e12fff13	 bx          r3

; 254  : }

  00820	e89d6000	 ldmia       sp, {sp, lr}
  00824	e12fff1e	 bx          lr
  00828		 |$M37767|

			 ENDP  ; |?InitCodec@HardwareContext@@IAAXXZ|, HardwareContext::InitCodec

	EXPORT	|?TransferOutputBuffer@HardwareContext@@QAAKK@Z| ; HardwareContext::TransferOutputBuffer
	EXPORT	|?StartOutputDMA@HardwareContext@@QAAXXZ| ; HardwareContext::StartOutputDMA

  00040			 AREA	 |.pdata|, PDATA
|$T37774| DCD	|$LN7@StartOutpu|
	DCD	0x40003604
; Function compile flags: /Odtp

  00828			 AREA	 |.text|, CODE, ARM

  00828		 |?StartOutputDMA@HardwareContext@@QAAXXZ| PROC ; HardwareContext::StartOutputDMA

; 266  : {

  00828		 |$LN7@StartOutpu|
  00828	e1a0c00d	 mov         r12, sp
  0082c	e92d0001	 stmdb       sp!, {r0}
  00830	e92d5000	 stmdb       sp!, {r12, lr}
  00834	e24dd00c	 sub         sp, sp, #0xC
  00838		 |$M37771|

; 267  :     if (!m_OutputDMARunning)

  00838	e59d3014	 ldr         r3, [sp, #0x14]
  0083c	e283306c	 add         r3, r3, #0x6C
  00840	e5933000	 ldr         r3, [r3]
  00844	e3530000	 cmp         r3, #0
  00848	1a000029	 bne         |$LN2@StartOutpu|

; 268  :     {
; 269  :         // Set output dma to running state in case we get 
; 270  :         // reentered during TransferOutputBuffer
; 271  :         m_OutputDMARunning=TRUE;

  0084c	e59d3014	 ldr         r3, [sp, #0x14]
  00850	e283206c	 add         r2, r3, #0x6C
  00854	e3a03001	 mov         r3, #1
  00858	e5823000	 str         r3, [r2]

; 272  :         
; 273  :         // Prime the output buffer and turn on DMA if anything got transferred
; 274  :         ULONG OutputTransferred;
; 275  :         OutputTransferred = TransferOutputBuffer(0)+TransferOutputBuffer(1);

  0085c	e3a01000	 mov         r1, #0
  00860	e59d0014	 ldr         r0, [sp, #0x14]
  00864	eb000000	 bl          |?TransferOutputBuffer@HardwareContext@@QAAKK@Z|
  00868	e58d0004	 str         r0, [sp, #4]
  0086c	e3a01001	 mov         r1, #1
  00870	e59d0014	 ldr         r0, [sp, #0x14]
  00874	eb000000	 bl          |?TransferOutputBuffer@HardwareContext@@QAAKK@Z|
  00878	e58d0008	 str         r0, [sp, #8]
  0087c	e59d2004	 ldr         r2, [sp, #4]
  00880	e59d3008	 ldr         r3, [sp, #8]
  00884	e0823003	 add         r3, r2, r3
  00888	e58d3000	 str         r3, [sp]

; 276  : 
; 277  :         // If we didn't transfer any data to the DMA buffers, don't enable DMA
; 278  :         if (OutputTransferred==0)

  0088c	e59d3000	 ldr         r3, [sp]
  00890	e3530000	 cmp         r3, #0
  00894	1a000004	 bne         |$LN1@StartOutpu|

; 279  :         {
; 280  :             m_OutputDMARunning=FALSE;

  00898	e59d3014	 ldr         r3, [sp, #0x14]
  0089c	e283206c	 add         r2, r3, #0x6C
  008a0	e3a03000	 mov         r3, #0
  008a4	e5823000	 str         r3, [r2]

; 281  :             return;

  008a8	ea000011	 b           |$LN3@StartOutpu|
  008ac		 |$LN1@StartOutpu|

; 282  :         }
; 283  : 
; 284  :         m_bDMARunning = TRUE;

  008ac	e59d3014	 ldr         r3, [sp, #0x14]
  008b0	e28320c8	 add         r2, r3, #0xC8
  008b4	e3a03001	 mov         r3, #1
  008b8	e5823000	 str         r3, [r2]

; 285  :         
; 286  :         HWUpdateAudioPRC ();

  008bc	e59d3014	 ldr         r3, [sp, #0x14]
  008c0	e5933000	 ldr         r3, [r3]
  008c4	e2833048	 add         r3, r3, #0x48
  008c8	e59d0014	 ldr         r0, [sp, #0x14]
  008cc	e5933000	 ldr         r3, [r3]
  008d0	e1a0e00f	 mov         lr, pc
  008d4	e12fff13	 bx          r3

; 287  :         HWStartOutputDMA();

  008d8	e59d3014	 ldr         r3, [sp, #0x14]
  008dc	e5933000	 ldr         r3, [r3]
  008e0	e2833010	 add         r3, r3, #0x10
  008e4	e59d0014	 ldr         r0, [sp, #0x14]
  008e8	e5933000	 ldr         r3, [r3]
  008ec	e1a0e00f	 mov         lr, pc
  008f0	e12fff13	 bx          r3
  008f4		 |$LN2@StartOutpu|
  008f4		 |$LN3@StartOutpu|

; 288  :     }
; 289  : }

  008f4	e28dd00c	 add         sp, sp, #0xC
  008f8	e89d6000	 ldmia       sp, {sp, lr}
  008fc	e12fff1e	 bx          lr
  00900		 |$M37772|

			 ENDP  ; |?StartOutputDMA@HardwareContext@@QAAXXZ|, HardwareContext::StartOutputDMA

	EXPORT	|?StopOutputDMA@HardwareContext@@QAAXXZ| ; HardwareContext::StopOutputDMA

  00048			 AREA	 |.pdata|, PDATA
|$T37779| DCD	|$LN7@StopOutput|
	DCD	0x40002a03
; Function compile flags: /Odtp

  00900			 AREA	 |.text|, CODE, ARM

  00900		 |?StopOutputDMA@HardwareContext@@QAAXXZ| PROC ; HardwareContext::StopOutputDMA

; 300  : {

  00900		 |$LN7@StopOutput|
  00900	e1a0c00d	 mov         r12, sp
  00904	e92d0001	 stmdb       sp!, {r0}
  00908	e92d5000	 stmdb       sp!, {r12, lr}
  0090c		 |$M37776|

; 301  :     if (m_OutputDMARunning)

  0090c	e59d3008	 ldr         r3, [sp, #8]
  00910	e283306c	 add         r3, r3, #0x6C
  00914	e5933000	 ldr         r3, [r3]
  00918	e3530000	 cmp         r3, #0
  0091c	0a00001f	 beq         |$LN2@StopOutput|

; 302  :     {
; 303  :         m_OutputDMARunning=FALSE;

  00920	e59d3008	 ldr         r3, [sp, #8]
  00924	e283206c	 add         r2, r3, #0x6C
  00928	e3a03000	 mov         r3, #0
  0092c	e5823000	 str         r3, [r2]

; 304  :         HWStopOutputDMA();

  00930	e59d3008	 ldr         r3, [sp, #8]
  00934	e5933000	 ldr         r3, [r3]
  00938	e2833014	 add         r3, r3, #0x14
  0093c	e59d0008	 ldr         r0, [sp, #8]
  00940	e5933000	 ldr         r3, [r3]
  00944	e1a0e00f	 mov         lr, pc
  00948	e12fff13	 bx          r3

; 305  : 
; 306  :         if (!m_InputDMARunning && !m_OutputDMARunning)

  0094c	e59d3008	 ldr         r3, [sp, #8]
  00950	e2833068	 add         r3, r3, #0x68
  00954	e5933000	 ldr         r3, [r3]
  00958	e3530000	 cmp         r3, #0
  0095c	1a00000f	 bne         |$LN1@StopOutput|
  00960	e59d3008	 ldr         r3, [sp, #8]
  00964	e283306c	 add         r3, r3, #0x6C
  00968	e5933000	 ldr         r3, [r3]
  0096c	e3530000	 cmp         r3, #0
  00970	1a00000a	 bne         |$LN1@StopOutput|

; 307  :         {
; 308  :             // Take care of power management.
; 309  :             m_bDMARunning = FALSE;

  00974	e59d3008	 ldr         r3, [sp, #8]
  00978	e28320c8	 add         r2, r3, #0xC8
  0097c	e3a03000	 mov         r3, #0
  00980	e5823000	 str         r3, [r2]

; 310  :             SetupDelayUpdate ();

  00984	e59d3008	 ldr         r3, [sp, #8]
  00988	e5933000	 ldr         r3, [r3]
  0098c	e2833078	 add         r3, r3, #0x78
  00990	e59d0008	 ldr         r0, [sp, #8]
  00994	e5933000	 ldr         r3, [r3]
  00998	e1a0e00f	 mov         lr, pc
  0099c	e12fff13	 bx          r3
  009a0		 |$LN1@StopOutput|
  009a0		 |$LN2@StopOutput|

; 311  :         }
; 312  :     }
; 313  : }

  009a0	e89d6000	 ldmia       sp, {sp, lr}
  009a4	e12fff1e	 bx          lr
  009a8		 |$M37777|

			 ENDP  ; |?StopOutputDMA@HardwareContext@@QAAXXZ|, HardwareContext::StopOutputDMA

	EXPORT	|?StartInputDMA@HardwareContext@@QAAXXZ| ; HardwareContext::StartInputDMA

  00050			 AREA	 |.pdata|, PDATA
|$T37784| DCD	|$LN6@StartInput|
	DCD	0x40002803
; Function compile flags: /Odtp

  009a8			 AREA	 |.text|, CODE, ARM

  009a8		 |?StartInputDMA@HardwareContext@@QAAXXZ| PROC ; HardwareContext::StartInputDMA

; 323  : {

  009a8		 |$LN6@StartInput|
  009a8	e1a0c00d	 mov         r12, sp
  009ac	e92d0001	 stmdb       sp!, {r0}
  009b0	e92d5000	 stmdb       sp!, {r12, lr}
  009b4		 |$M37781|

; 324  :     if (!m_InputDMARunning)

  009b4	e59d3008	 ldr         r3, [sp, #8]
  009b8	e2833068	 add         r3, r3, #0x68
  009bc	e5933000	 ldr         r3, [r3]
  009c0	e3530000	 cmp         r3, #0
  009c4	1a00001d	 bne         |$LN1@StartInput|

; 325  :     {
; 326  : #ifdef INPUT_CACHEDMEM
; 327  :         InputBufferCacheDiscard( m_Input_pbDMA_PAGES[0],AUDIO_DMA_PAGE_SIZE*2);
; 328  : #endif
; 329  :         m_InputDMARunning=TRUE;

  009c8	e59d3008	 ldr         r3, [sp, #8]
  009cc	e2832068	 add         r2, r3, #0x68
  009d0	e3a03001	 mov         r3, #1
  009d4	e5823000	 str         r3, [r2]

; 330  : 
; 331  :         m_bDMARunning = TRUE;

  009d8	e59d3008	 ldr         r3, [sp, #8]
  009dc	e28320c8	 add         r2, r3, #0xC8
  009e0	e3a03001	 mov         r3, #1
  009e4	e5823000	 str         r3, [r2]

; 332  :         HWUpdateAudioPRC ();

  009e8	e59d3008	 ldr         r3, [sp, #8]
  009ec	e5933000	 ldr         r3, [r3]
  009f0	e2833048	 add         r3, r3, #0x48
  009f4	e59d0008	 ldr         r0, [sp, #8]
  009f8	e5933000	 ldr         r3, [r3]
  009fc	e1a0e00f	 mov         lr, pc
  00a00	e12fff13	 bx          r3

; 333  :         
; 334  :         // Turn on the recording path.
; 335  :         SetRecordMemoPath (TRUE);

  00a04	e3a01001	 mov         r1, #1
  00a08	e59d3008	 ldr         r3, [sp, #8]
  00a0c	e5933000	 ldr         r3, [r3]
  00a10	e2833068	 add         r3, r3, #0x68
  00a14	e59d0008	 ldr         r0, [sp, #8]
  00a18	e5933000	 ldr         r3, [r3]
  00a1c	e1a0e00f	 mov         lr, pc
  00a20	e12fff13	 bx          r3

; 336  : 
; 337  :         HWStartInputDMA();

  00a24	e59d3008	 ldr         r3, [sp, #8]
  00a28	e5933000	 ldr         r3, [r3]
  00a2c	e2833018	 add         r3, r3, #0x18
  00a30	e59d0008	 ldr         r0, [sp, #8]
  00a34	e5933000	 ldr         r3, [r3]
  00a38	e1a0e00f	 mov         lr, pc
  00a3c	e12fff13	 bx          r3
  00a40		 |$LN1@StartInput|

; 338  :     }
; 339  : }

  00a40	e89d6000	 ldmia       sp, {sp, lr}
  00a44	e12fff1e	 bx          lr
  00a48		 |$M37782|

			 ENDP  ; |?StartInputDMA@HardwareContext@@QAAXXZ|, HardwareContext::StartInputDMA

	EXPORT	|?StopInputDMA@HardwareContext@@QAAXXZ|	; HardwareContext::StopInputDMA

  00058			 AREA	 |.pdata|, PDATA
|$T37789| DCD	|$LN7@StopInputD|
	DCD	0x40003203
; Function compile flags: /Odtp

  00a48			 AREA	 |.text|, CODE, ARM

  00a48		 |?StopInputDMA@HardwareContext@@QAAXXZ| PROC ; HardwareContext::StopInputDMA

; 350  : {

  00a48		 |$LN7@StopInputD|
  00a48	e1a0c00d	 mov         r12, sp
  00a4c	e92d0001	 stmdb       sp!, {r0}
  00a50	e92d5000	 stmdb       sp!, {r12, lr}
  00a54		 |$M37786|

; 351  :     if (m_InputDMARunning)

  00a54	e59d3008	 ldr         r3, [sp, #8]
  00a58	e2833068	 add         r3, r3, #0x68
  00a5c	e5933000	 ldr         r3, [r3]
  00a60	e3530000	 cmp         r3, #0
  00a64	0a000027	 beq         |$LN2@StopInputD|

; 352  :     {
; 353  :         m_InputDMARunning=FALSE;

  00a68	e59d3008	 ldr         r3, [sp, #8]
  00a6c	e2832068	 add         r2, r3, #0x68
  00a70	e3a03000	 mov         r3, #0
  00a74	e5823000	 str         r3, [r2]

; 354  :         
; 355  :         HWStopInputDMA();

  00a78	e59d3008	 ldr         r3, [sp, #8]
  00a7c	e5933000	 ldr         r3, [r3]
  00a80	e283301c	 add         r3, r3, #0x1C
  00a84	e59d0008	 ldr         r0, [sp, #8]
  00a88	e5933000	 ldr         r3, [r3]
  00a8c	e1a0e00f	 mov         lr, pc
  00a90	e12fff13	 bx          r3

; 356  : 
; 357  :         // Turn off the recording path.
; 358  :         SetRecordMemoPath (FALSE);

  00a94	e3a01000	 mov         r1, #0
  00a98	e59d3008	 ldr         r3, [sp, #8]
  00a9c	e5933000	 ldr         r3, [r3]
  00aa0	e2833068	 add         r3, r3, #0x68
  00aa4	e59d0008	 ldr         r0, [sp, #8]
  00aa8	e5933000	 ldr         r3, [r3]
  00aac	e1a0e00f	 mov         lr, pc
  00ab0	e12fff13	 bx          r3

; 359  : 
; 360  :         if (!m_InputDMARunning && !m_OutputDMARunning)

  00ab4	e59d3008	 ldr         r3, [sp, #8]
  00ab8	e2833068	 add         r3, r3, #0x68
  00abc	e5933000	 ldr         r3, [r3]
  00ac0	e3530000	 cmp         r3, #0
  00ac4	1a00000f	 bne         |$LN1@StopInputD|
  00ac8	e59d3008	 ldr         r3, [sp, #8]
  00acc	e283306c	 add         r3, r3, #0x6C
  00ad0	e5933000	 ldr         r3, [r3]
  00ad4	e3530000	 cmp         r3, #0
  00ad8	1a00000a	 bne         |$LN1@StopInputD|

; 361  :         {
; 362  :             // Take care of power management.
; 363  :             m_bDMARunning = FALSE;

  00adc	e59d3008	 ldr         r3, [sp, #8]
  00ae0	e28320c8	 add         r2, r3, #0xC8
  00ae4	e3a03000	 mov         r3, #0
  00ae8	e5823000	 str         r3, [r2]

; 364  :             SetupDelayUpdate ();

  00aec	e59d3008	 ldr         r3, [sp, #8]
  00af0	e5933000	 ldr         r3, [r3]
  00af4	e2833078	 add         r3, r3, #0x78
  00af8	e59d0008	 ldr         r0, [sp, #8]
  00afc	e5933000	 ldr         r3, [r3]
  00b00	e1a0e00f	 mov         lr, pc
  00b04	e12fff13	 bx          r3
  00b08		 |$LN1@StopInputD|
  00b08		 |$LN2@StopInputD|

; 365  :         }
; 366  :     }
; 367  : }

  00b08	e89d6000	 ldmia       sp, {sp, lr}
  00b0c	e12fff1e	 bx          lr
  00b10		 |$M37787|

			 ENDP  ; |?StopInputDMA@HardwareContext@@QAAXXZ|, HardwareContext::StopInputDMA


  00060			 AREA	 |.pdata|, PDATA
|$T37794| DCD	|$LN5@SetupDelay|
	DCD	0x40000903
; Function compile flags: /Odtp

  00b10			 AREA	 |.text|, CODE, ARM

  00b10		 |?SetupDelayUpdate@HardwareContext@@MAAXXZ| PROC ; HardwareContext::SetupDelayUpdate

; 370  : {

  00b10		 |$LN5@SetupDelay|
  00b10	e1a0c00d	 mov         r12, sp
  00b14	e92d0001	 stmdb       sp!, {r0}
  00b18	e92d5000	 stmdb       sp!, {r12, lr}
  00b1c		 |$M37791|

; 371  :     SetEvent(m_hTimeoutEvent);

  00b1c	e59d3008	 ldr         r3, [sp, #8]
  00b20	e2833048	 add         r3, r3, #0x48
  00b24	e5930000	 ldr         r0, [r3]
  00b28	eb000000	 bl          SetEvent

; 372  : }

  00b2c	e89d6000	 ldmia       sp, {sp, lr}
  00b30	e12fff1e	 bx          lr
  00b34		 |$M37792|

			 ENDP  ; |?SetupDelayUpdate@HardwareContext@@MAAXXZ|, HardwareContext::SetupDelayUpdate


  00068			 AREA	 |.pdata|, PDATA
|$T37799| DCD	|$LN5@DelayedUpd|
	DCD	0x40000d03
; Function compile flags: /Odtp

  00b34			 AREA	 |.text|, CODE, ARM

  00b34		 |?DelayedUpdate@HardwareContext@@MAAXXZ| PROC ; HardwareContext::DelayedUpdate

; 374  : {

  00b34		 |$LN5@DelayedUpd|
  00b34	e1a0c00d	 mov         r12, sp
  00b38	e92d0001	 stmdb       sp!, {r0}
  00b3c	e92d5000	 stmdb       sp!, {r12, lr}
  00b40		 |$M37796|

; 375  :     HWAudioPowerTimeout(TRUE); // Timeout.

  00b40	e3a01001	 mov         r1, #1
  00b44	e59d3008	 ldr         r3, [sp, #8]
  00b48	e5933000	 ldr         r3, [r3]
  00b4c	e2833044	 add         r3, r3, #0x44
  00b50	e59d0008	 ldr         r0, [sp, #8]
  00b54	e5933000	 ldr         r3, [r3]
  00b58	e1a0e00f	 mov         lr, pc
  00b5c	e12fff13	 bx          r3

; 376  : }

  00b60	e89d6000	 ldmia       sp, {sp, lr}
  00b64	e12fff1e	 bx          lr
  00b68		 |$M37797|

			 ENDP  ; |?DelayedUpdate@HardwareContext@@MAAXXZ|, HardwareContext::DelayedUpdate

	EXPORT	|??_C@_1CE@FOKFACOC@?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAD?$AAe?$AAl?$AAa?$AAy?$AAT?$AAi?$AAc?$AAk?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@BHLBGEOK@?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?GetRegistryValue@HardwareContext@@IAAXXZ| ; HardwareContext::GetRegistryValue
	IMPORT	|RegCloseKey|
	IMPORT	|RegQueryValueExW|
	IMPORT	|OpenDeviceKey|

  00070			 AREA	 |.pdata|, PDATA
|$T37808| DCD	|$LN7@GetRegistr|
	DCD	0x40003e04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@FOKFACOC@?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAD?$AAe?$AAl?$AAa?$AAy?$AAT?$AAi?$AAc?$AAk?$AAs?$AA?$AA@| DCB "S"
	DCB	0x0, "u", 0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d"
	DCB	0x0, "D", 0x0, "e", 0x0, "l", 0x0, "a", 0x0, "y", 0x0, "T"
	DCB	0x0, "i", 0x0, "c", 0x0, "k", 0x0, "s", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@BHLBGEOK@?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@| DCB "P"
	DCB	0x0, "r", 0x0, "i", 0x0, "o", 0x0, "r", 0x0, "i", 0x0, "t"
	DCB	0x0, "y", 0x0, "2", 0x0, "5", 0x0, "6", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00b68			 AREA	 |.text|, CODE, ARM

  00b68		 |?GetRegistryValue@HardwareContext@@IAAXXZ| PROC ; HardwareContext::GetRegistryValue

; 388  : {

  00b68		 |$LN7@GetRegistr|
  00b68	e1a0c00d	 mov         r12, sp
  00b6c	e92d0001	 stmdb       sp!, {r0}
  00b70	e92d5000	 stmdb       sp!, {r12, lr}
  00b74	e24dd028	 sub         sp, sp, #0x28
  00b78		 |$M37805|

; 389  :     HKEY hDevKey;
; 390  :     m_dwPriority256 = 210; // Default priority

  00b78	e59d3030	 ldr         r3, [sp, #0x30]
  00b7c	e2832018	 add         r2, r3, #0x18
  00b80	e3a030d2	 mov         r3, #0xD2
  00b84	e5823000	 str         r3, [r2]

; 391  :     m_dwTimeoutTicks = 1000;    // 1 second.

  00b88	e59d3030	 ldr         r3, [sp, #0x30]
  00b8c	e283201c	 add         r2, r3, #0x1C
  00b90	e3a03ffa	 mov         r3, #0xFA, 30
  00b94	e5823000	 str         r3, [r2]

; 392  :     hDevKey = OpenDeviceKey((LPWSTR)m_DriverIndex);

  00b98	e59d3030	 ldr         r3, [sp, #0x30]
  00b9c	e2833058	 add         r3, r3, #0x58
  00ba0	e5930000	 ldr         r0, [r3]
  00ba4	eb000000	 bl          OpenDeviceKey
  00ba8	e58d0024	 str         r0, [sp, #0x24]
  00bac	e59d3024	 ldr         r3, [sp, #0x24]
  00bb0	e58d3008	 str         r3, [sp, #8]

; 393  :     if (hDevKey)

  00bb4	e59d3008	 ldr         r3, [sp, #8]
  00bb8	e3530000	 cmp         r3, #0
  00bbc	0a000022	 beq         |$LN2@GetRegistr|

; 394  :     {
; 395  :         DWORD dwValType;
; 396  :         DWORD dwValLen;
; 397  :         dwValLen = sizeof(DWORD);

  00bc0	e3a03004	 mov         r3, #4
  00bc4	e58d300c	 str         r3, [sp, #0xC]

; 398  :         RegQueryValueEx(
; 399  :                        hDevKey,
; 400  :                        TEXT("Priority256"),
; 401  :                        NULL,
; 402  :                        &dwValType,
; 403  :                        (PUCHAR)&m_dwPriority256,
; 404  :                        &dwValLen);

  00bc8	e28d300c	 add         r3, sp, #0xC
  00bcc	e58d3004	 str         r3, [sp, #4]
  00bd0	e59d3030	 ldr         r3, [sp, #0x30]
  00bd4	e2833018	 add         r3, r3, #0x18
  00bd8	e58d3000	 str         r3, [sp]
  00bdc	e28d3010	 add         r3, sp, #0x10
  00be0	e3a02000	 mov         r2, #0
  00be4	e59f1070	 ldr         r1, [pc, #0x70]
  00be8	e59d0008	 ldr         r0, [sp, #8]
  00bec	eb000000	 bl          RegQueryValueExW

; 405  :         
; 406  :         dwValLen = sizeof(DWORD);

  00bf0	e3a03004	 mov         r3, #4
  00bf4	e58d300c	 str         r3, [sp, #0xC]

; 407  :         RegQueryValueEx(
; 408  :                        hDevKey,
; 409  :                        TEXT("SuspendDelayTicks"),
; 410  :                        NULL,
; 411  :                        &dwValType,
; 412  :                        (PUCHAR)&m_dwTimeoutTicks,
; 413  :                        &dwValLen);

  00bf8	e28d300c	 add         r3, sp, #0xC
  00bfc	e58d3004	 str         r3, [sp, #4]
  00c00	e59d3030	 ldr         r3, [sp, #0x30]
  00c04	e283301c	 add         r3, r3, #0x1C
  00c08	e58d3000	 str         r3, [sp]
  00c0c	e28d3010	 add         r3, sp, #0x10
  00c10	e3a02000	 mov         r2, #0
  00c14	e59f103c	 ldr         r1, [pc, #0x3C]
  00c18	e59d0008	 ldr         r0, [sp, #8]
  00c1c	eb000000	 bl          RegQueryValueExW

; 414  :         if (m_dwTimeoutTicks == 0 )

  00c20	e59d3030	 ldr         r3, [sp, #0x30]
  00c24	e283301c	 add         r3, r3, #0x1C
  00c28	e5933000	 ldr         r3, [r3]
  00c2c	e3530000	 cmp         r3, #0
  00c30	1a000003	 bne         |$LN1@GetRegistr|

; 415  :             m_dwTimeoutTicks = INFINITE;

  00c34	e59d3030	 ldr         r3, [sp, #0x30]
  00c38	e283201c	 add         r2, r3, #0x1C
  00c3c	e3e03000	 mvn         r3, #0
  00c40	e5823000	 str         r3, [r2]
  00c44		 |$LN1@GetRegistr|

; 416  :         
; 417  :         RegCloseKey(hDevKey);

  00c44	e59d0008	 ldr         r0, [sp, #8]
  00c48	eb000000	 bl          RegCloseKey
  00c4c		 |$LN2@GetRegistr|

; 418  :     }
; 419  : 
; 420  : }

  00c4c	e28dd028	 add         sp, sp, #0x28
  00c50	e89d6000	 ldmia       sp, {sp, lr}
  00c54	e12fff1e	 bx          lr
  00c58		 |$LN8@GetRegistr|
  00c58		 |$LN9@GetRegistr|
  00c58	00000000	 DCD         |??_C@_1CE@FOKFACOC@?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAD?$AAe?$AAl?$AAa?$AAy?$AAT?$AAi?$AAc?$AAk?$AAs?$AA?$AA@|
  00c5c		 |$LN10@GetRegistr|
  00c5c	00000000	 DCD         |??_C@_1BI@BHLBGEOK@?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@|
  00c60		 |$M37806|

			 ENDP  ; |?GetRegistryValue@HardwareContext@@IAAXXZ|, HardwareContext::GetRegistryValue

	EXPORT	|??_C@_1FK@KEHNOOHI@?$AAW?$AAa?$AAv?$AAe?$AAD?$AAe?$AAv?$AA?3?$AA?5?$AAI?$AAR?$AAQ?$AA?5?$AA?9?$AA?$DO?$AA?5?$AAS?$AAY?$AAS?$AAI?$AAN?$AAT?$AAR?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAl?$AAa?$AAt@| [ DATA ] ; `string'
	EXPORT	|?MapIrqToSysIntr@HardwareContext@@IAAKK@Z| ; HardwareContext::MapIrqToSysIntr

  00078			 AREA	 |.pdata|, PDATA
|$T37821| DCD	|$LN8@MapIrqToSy|
	DCD	0x40002904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@KEHNOOHI@?$AAW?$AAa?$AAv?$AAe?$AAD?$AAe?$AAv?$AA?3?$AA?5?$AAI?$AAR?$AAQ?$AA?5?$AA?9?$AA?$DO?$AA?5?$AAS?$AAY?$AAS?$AAI?$AAN?$AAT?$AAR?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAl?$AAa?$AAt@| DCB "W"
	DCB	0x0, "a", 0x0, "v", 0x0, "e", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "R", 0x0, "Q", 0x0, " "
	DCB	0x0, "-", 0x0, ">", 0x0, " ", 0x0, "S", 0x0, "Y", 0x0, "S"
	DCB	0x0, "I", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, " ", 0x0, "t"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "l", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  00c60			 AREA	 |.text|, CODE, ARM

  00c60		 |?MapIrqToSysIntr@HardwareContext@@IAAKK@Z| PROC ; HardwareContext::MapIrqToSysIntr

; 431  : {

  00c60		 |$LN8@MapIrqToSy|
  00c60	e1a0c00d	 mov         r12, sp
  00c64	e92d000f	 stmdb       sp!, {r0 - r3}
  00c68	e92d5000	 stmdb       sp!, {r12, lr}
  00c6c	e24dd020	 sub         sp, sp, #0x20
  00c70		 |$M37818|

; 432  :     DWORD dwSysIntr = SYSINTR_UNDEFINED;

  00c70	e3e03000	 mvn         r3, #0
  00c74	e58d3008	 str         r3, [sp, #8]

; 433  :     if (!KernelIoControl(
; 434  :             IOCTL_HAL_REQUEST_SYSINTR, 
; 435  :             &irq, 
; 436  :             sizeof(irq), 
; 437  :             &dwSysIntr,
; 438  :             sizeof(dwSysIntr),
; 439  :             NULL)) 

  00c78	e3a03000	 mov         r3, #0
  00c7c	e58d3004	 str         r3, [sp, #4]
  00c80	e3a03004	 mov         r3, #4
  00c84	e58d3000	 str         r3, [sp]
  00c88	e28d3008	 add         r3, sp, #8
  00c8c	e3a02004	 mov         r2, #4
  00c90	e28d102c	 add         r1, sp, #0x2C
  00c94	e59f0064	 ldr         r0, [pc, #0x64]
  00c98	eb000000	 bl          KernelIoControl
  00c9c	e58d0018	 str         r0, [sp, #0x18]
  00ca0	e59d3018	 ldr         r3, [sp, #0x18]
  00ca4	e3530000	 cmp         r3, #0
  00ca8	1a00000c	 bne         |$LN1@MapIrqToSy|

; 440  :     {
; 441  :         DEBUGMSG(ZONE_ERROR, 
; 442  :             (TEXT("WaveDev: IRQ -> SYSINTR translation failed\r\n")));

  00cac	e59f3048	 ldr         r3, [pc, #0x48]
  00cb0	e5933440	 ldr         r3, [r3, #0x440]
  00cb4	e3130902	 tst         r3, #2, 18
  00cb8	0a000004	 beq         |$LN4@MapIrqToSy|
  00cbc	e59f0034	 ldr         r0, [pc, #0x34]
  00cc0	eb000000	 bl          NKDbgPrintfW
  00cc4	e3a03001	 mov         r3, #1
  00cc8	e58d301c	 str         r3, [sp, #0x1C]
  00ccc	ea000001	 b           |$LN5@MapIrqToSy|
  00cd0		 |$LN4@MapIrqToSy|
  00cd0	e3a03000	 mov         r3, #0
  00cd4	e58d301c	 str         r3, [sp, #0x1C]
  00cd8		 |$LN5@MapIrqToSy|

; 443  :         dwSysIntr = SYSINTR_UNDEFINED;

  00cd8	e3e03000	 mvn         r3, #0
  00cdc	e58d3008	 str         r3, [sp, #8]
  00ce0		 |$LN1@MapIrqToSy|

; 444  :     }
; 445  : 
; 446  :     return dwSysIntr;

  00ce0	e59d3008	 ldr         r3, [sp, #8]
  00ce4	e58d3014	 str         r3, [sp, #0x14]

; 447  : }

  00ce8	e59d0014	 ldr         r0, [sp, #0x14]
  00cec	e28dd020	 add         sp, sp, #0x20
  00cf0	e89d6000	 ldmia       sp, {sp, lr}
  00cf4	e12fff1e	 bx          lr
  00cf8		 |$LN9@MapIrqToSy|
  00cf8		 |$LN10@MapIrqToSy|
  00cf8	00000000	 DCD         |??_C@_1FK@KEHNOOHI@?$AAW?$AAa?$AAv?$AAe?$AAD?$AAe?$AAv?$AA?3?$AA?5?$AAI?$AAR?$AAQ?$AA?5?$AA?9?$AA?$DO?$AA?5?$AAS?$AAY?$AAS?$AAI?$AAN?$AAT?$AAR?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAl?$AAa?$AAt@|
  00cfc		 |$LN11@MapIrqToSy|
  00cfc	00000000	 DCD         |dpCurSettings|
  00d00		 |$LN12@MapIrqToSy|
  00d00	01010098	 DCD         0x1010098
  00d04		 |$M37819|

			 ENDP  ; |?MapIrqToSysIntr@HardwareContext@@IAAKK@Z|, HardwareContext::MapIrqToSysIntr

	EXPORT	|??_C@_1GA@ILNNPHDJ@?$AAW?$AAa?$AAv?$AAe?$AAD?$AAe?$AAv?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAI?$AAn@| [ DATA ] ; `string'
	IMPORT	|CreateThread|
	IMPORT	|InterruptInitialize|

  00080			 AREA	 |.pdata|, PDATA
|$T37841| DCD	|$LN15@InitInterr|
	DCD	0x4000b604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@ILNNPHDJ@?$AAW?$AAa?$AAv?$AAe?$AAD?$AAe?$AAv?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAI?$AAn@| DCB "W"
	DCB	0x0, "a", 0x0, "v", 0x0, "e", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, ":", 0x0, " ", 0x0, "H", 0x0, "a", 0x0, "r", 0x0, "d"
	DCB	0x0, "w", 0x0, "a", 0x0, "r", 0x0, "e", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u"
	DCB	0x0, "p", 0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00d04			 AREA	 |.text|, CODE, ARM

  00d04		 |?InitInterruptThread@HardwareContext@@IAAHXZ| PROC ; HardwareContext::InitInterruptThread

; 458  : {

  00d04		 |$LN15@InitInterr|
  00d04	e1a0c00d	 mov         r12, sp
  00d08	e92d0001	 stmdb       sp!, {r0}
  00d0c	e92d5000	 stmdb       sp!, {r12, lr}
  00d10	e24dd048	 sub         sp, sp, #0x48
  00d14		 |$M37838|

; 459  :     DEBUGMSG(ZONE_AC, 
; 460  :        (TEXT("WaveDev: HardwareContext::InitInterruptThread\r\n")));

  00d14	e59f32bc	 ldr         r3, [pc, #0x2BC]
  00d18	e5933440	 ldr         r3, [r3, #0x440]
  00d1c	e3130001	 tst         r3, #1
  00d20	0a000004	 beq         |$LN9@InitInterr|
  00d24	e59f02a8	 ldr         r0, [pc, #0x2A8]
  00d28	eb000000	 bl          NKDbgPrintfW
  00d2c	e3a03001	 mov         r3, #1
  00d30	e58d3024	 str         r3, [sp, #0x24]
  00d34	ea000001	 b           |$LN10@InitInterr|
  00d38		 |$LN9@InitInterr|
  00d38	e3a03000	 mov         r3, #0
  00d3c	e58d3024	 str         r3, [sp, #0x24]
  00d40		 |$LN10@InitInterr|

; 461  : 
; 462  :     if ( !(m_hTimeoutEvent !=NULL &&  m_hAudioInterruptTx !=NULL &&  m_hAudioInterruptRx !=NULL))

  00d40	e59d3050	 ldr         r3, [sp, #0x50]
  00d44	e2833048	 add         r3, r3, #0x48
  00d48	e5933000	 ldr         r3, [r3]
  00d4c	e3530000	 cmp         r3, #0
  00d50	0a000009	 beq         |$LN5@InitInterr|
  00d54	e59d3050	 ldr         r3, [sp, #0x50]
  00d58	e2833038	 add         r3, r3, #0x38
  00d5c	e5933000	 ldr         r3, [r3]
  00d60	e3530000	 cmp         r3, #0
  00d64	0a000004	 beq         |$LN5@InitInterr|
  00d68	e59d3050	 ldr         r3, [sp, #0x50]
  00d6c	e283303c	 add         r3, r3, #0x3C
  00d70	e5933000	 ldr         r3, [r3]
  00d74	e3530000	 cmp         r3, #0
  00d78	1a000002	 bne         |$LN6@InitInterr|
  00d7c		 |$LN5@InitInterr|

; 463  :         return FALSE;

  00d7c	e3a03000	 mov         r3, #0
  00d80	e58d3008	 str         r3, [sp, #8]
  00d84	ea00008b	 b           |$LN7@InitInterr|
  00d88		 |$LN6@InitInterr|

; 464  : 
; 465  :     GetRegistryValue();

  00d88	e59d0050	 ldr         r0, [sp, #0x50]
  00d8c	eb000000	 bl          |?GetRegistryValue@HardwareContext@@IAAXXZ|

; 466  : 
; 467  :     m_fRequestedSysIntr    = TRUE;

  00d90	e59d3050	 ldr         r3, [sp, #0x50]
  00d94	e2832020	 add         r2, r3, #0x20
  00d98	e3a03001	 mov         r3, #1
  00d9c	e5823000	 str         r3, [r2]

; 468  :     m_IntrAudioTx = MapIrqToSysIntr(AUDIO_OUTPUT_DMA_IRQ);

  00da0	e3a0100e	 mov         r1, #0xE
  00da4	e59d0050	 ldr         r0, [sp, #0x50]
  00da8	eb000000	 bl          |?MapIrqToSysIntr@HardwareContext@@IAAKK@Z|
  00dac	e58d0028	 str         r0, [sp, #0x28]
  00db0	e59d3050	 ldr         r3, [sp, #0x50]
  00db4	e2832024	 add         r2, r3, #0x24
  00db8	e59d3028	 ldr         r3, [sp, #0x28]
  00dbc	e5823000	 str         r3, [r2]

; 469  :     m_IntrAudioRx = MapIrqToSysIntr(AUDIO_INPUT_DMA_IRQ);

  00dc0	e3a0100f	 mov         r1, #0xF
  00dc4	e59d0050	 ldr         r0, [sp, #0x50]
  00dc8	eb000000	 bl          |?MapIrqToSysIntr@HardwareContext@@IAAKK@Z|
  00dcc	e58d002c	 str         r0, [sp, #0x2C]
  00dd0	e59d3050	 ldr         r3, [sp, #0x50]
  00dd4	e2832028	 add         r2, r3, #0x28
  00dd8	e59d302c	 ldr         r3, [sp, #0x2C]
  00ddc	e5823000	 str         r3, [r2]

; 470  :     if (m_IntrAudioTx == SYSINTR_UNDEFINED ||
; 471  :         m_IntrAudioRx == SYSINTR_UNDEFINED)

  00de0	e59d3050	 ldr         r3, [sp, #0x50]
  00de4	e2833024	 add         r3, r3, #0x24
  00de8	e5933000	 ldr         r3, [r3]
  00dec	e3730001	 cmn         r3, #1
  00df0	0a000004	 beq         |$LN3@InitInterr|
  00df4	e59d3050	 ldr         r3, [sp, #0x50]
  00df8	e2833028	 add         r3, r3, #0x28
  00dfc	e5933000	 ldr         r3, [r3]
  00e00	e3730001	 cmn         r3, #1
  00e04	1a000002	 bne         |$LN4@InitInterr|
  00e08		 |$LN3@InitInterr|

; 472  :     {
; 473  :         return FALSE;

  00e08	e3a03000	 mov         r3, #0
  00e0c	e58d3008	 str         r3, [sp, #8]
  00e10	ea000068	 b           |$LN7@InitInterr|
  00e14		 |$LN4@InitInterr|

; 474  :     }
; 475  : 
; 476  :     m_fRxInterruptIntialized = InterruptInitialize(m_IntrAudioTx, m_hAudioInterruptTx, NULL, 0);

  00e14	e3a03000	 mov         r3, #0
  00e18	e3a02000	 mov         r2, #0
  00e1c	e59d1050	 ldr         r1, [sp, #0x50]
  00e20	e2811038	 add         r1, r1, #0x38
  00e24	e5911000	 ldr         r1, [r1]
  00e28	e59d0050	 ldr         r0, [sp, #0x50]
  00e2c	e2800024	 add         r0, r0, #0x24
  00e30	e5900000	 ldr         r0, [r0]
  00e34	eb000000	 bl          InterruptInitialize
  00e38	e58d0030	 str         r0, [sp, #0x30]
  00e3c	e59d3050	 ldr         r3, [sp, #0x50]
  00e40	e2832030	 add         r2, r3, #0x30
  00e44	e59d3030	 ldr         r3, [sp, #0x30]
  00e48	e5823000	 str         r3, [r2]

; 477  :     m_fTxInterruptIntialized  = InterruptInitialize(m_IntrAudioRx, m_hAudioInterruptRx, NULL, 0);

  00e4c	e3a03000	 mov         r3, #0
  00e50	e3a02000	 mov         r2, #0
  00e54	e59d1050	 ldr         r1, [sp, #0x50]
  00e58	e281103c	 add         r1, r1, #0x3C
  00e5c	e5911000	 ldr         r1, [r1]
  00e60	e59d0050	 ldr         r0, [sp, #0x50]
  00e64	e2800028	 add         r0, r0, #0x28
  00e68	e5900000	 ldr         r0, [r0]
  00e6c	eb000000	 bl          InterruptInitialize
  00e70	e58d0034	 str         r0, [sp, #0x34]
  00e74	e59d3050	 ldr         r3, [sp, #0x50]
  00e78	e2832034	 add         r2, r3, #0x34
  00e7c	e59d3034	 ldr         r3, [sp, #0x34]
  00e80	e5823000	 str         r3, [r2]

; 478  :     
; 479  :     if (!m_fRxInterruptIntialized || !m_fTxInterruptIntialized)

  00e84	e59d3050	 ldr         r3, [sp, #0x50]
  00e88	e2833030	 add         r3, r3, #0x30
  00e8c	e5933000	 ldr         r3, [r3]
  00e90	e3530000	 cmp         r3, #0
  00e94	0a000004	 beq         |$LN1@InitInterr|
  00e98	e59d3050	 ldr         r3, [sp, #0x50]
  00e9c	e2833034	 add         r3, r3, #0x34
  00ea0	e5933000	 ldr         r3, [r3]
  00ea4	e3530000	 cmp         r3, #0
  00ea8	1a000002	 bne         |$LN2@InitInterr|
  00eac		 |$LN1@InitInterr|

; 480  :         return FALSE ;

  00eac	e3a03000	 mov         r3, #0
  00eb0	e58d3008	 str         r3, [sp, #8]
  00eb4	ea00003f	 b           |$LN7@InitInterr|
  00eb8		 |$LN2@InitInterr|

; 481  : 
; 482  : 
; 483  :     m_hAudioInterruptThreadTx  = CreateThread((LPSECURITY_ATTRIBUTES)NULL,
; 484  :                                             0,
; 485  :                                             (LPTHREAD_START_ROUTINE)CallInterruptThreadTx,
; 486  :                                             this,
; 487  :                                             0,
; 488  :                                             NULL);

  00eb8	e3a03000	 mov         r3, #0
  00ebc	e58d3004	 str         r3, [sp, #4]
  00ec0	e3a03000	 mov         r3, #0
  00ec4	e58d3000	 str         r3, [sp]
  00ec8	e59d3050	 ldr         r3, [sp, #0x50]
  00ecc	e59f20fc	 ldr         r2, [pc, #0xFC]
  00ed0	e3a01000	 mov         r1, #0
  00ed4	e3a00000	 mov         r0, #0
  00ed8	eb000000	 bl          CreateThread
  00edc	e58d0038	 str         r0, [sp, #0x38]
  00ee0	e59d3050	 ldr         r3, [sp, #0x50]
  00ee4	e2832040	 add         r2, r3, #0x40
  00ee8	e59d3038	 ldr         r3, [sp, #0x38]
  00eec	e5823000	 str         r3, [r2]

; 489  :     m_hAudioInterruptThreadRx  = CreateThread((LPSECURITY_ATTRIBUTES)NULL,
; 490  :                                             0,
; 491  :                                             (LPTHREAD_START_ROUTINE)CallInterruptThreadRx,
; 492  :                                             this,
; 493  :                                             0,
; 494  :                                             NULL);

  00ef0	e3a03000	 mov         r3, #0
  00ef4	e58d3004	 str         r3, [sp, #4]
  00ef8	e3a03000	 mov         r3, #0
  00efc	e58d3000	 str         r3, [sp]
  00f00	e59d3050	 ldr         r3, [sp, #0x50]
  00f04	e59f20c0	 ldr         r2, [pc, #0xC0]
  00f08	e3a01000	 mov         r1, #0
  00f0c	e3a00000	 mov         r0, #0
  00f10	eb000000	 bl          CreateThread
  00f14	e58d003c	 str         r0, [sp, #0x3C]
  00f18	e59d3050	 ldr         r3, [sp, #0x50]
  00f1c	e2832044	 add         r2, r3, #0x44
  00f20	e59d303c	 ldr         r3, [sp, #0x3C]
  00f24	e5823000	 str         r3, [r2]

; 495  :     m_hTimeoutThread = CreateThread ((LPSECURITY_ATTRIBUTES)NULL,
; 496  :                                             0,
; 497  :                                             (LPTHREAD_START_ROUTINE)CallTimeoutThread,
; 498  :                                             this,
; 499  :                                             0,
; 500  :                                             NULL);

  00f28	e3a03000	 mov         r3, #0
  00f2c	e58d3004	 str         r3, [sp, #4]
  00f30	e3a03000	 mov         r3, #0
  00f34	e58d3000	 str         r3, [sp]
  00f38	e59d3050	 ldr         r3, [sp, #0x50]
  00f3c	e59f2084	 ldr         r2, [pc, #0x84]
  00f40	e3a01000	 mov         r1, #0
  00f44	e3a00000	 mov         r0, #0
  00f48	eb000000	 bl          CreateThread
  00f4c	e58d0040	 str         r0, [sp, #0x40]
  00f50	e59d3050	 ldr         r3, [sp, #0x50]
  00f54	e283204c	 add         r2, r3, #0x4C
  00f58	e59d3040	 ldr         r3, [sp, #0x40]
  00f5c	e5823000	 str         r3, [r2]

; 501  :     return (m_hAudioInterruptThreadTx!=NULL && m_hAudioInterruptThreadRx!=NULL && m_hTimeoutThread!=NULL) ;

  00f60	e59d3050	 ldr         r3, [sp, #0x50]
  00f64	e2833040	 add         r3, r3, #0x40
  00f68	e5933000	 ldr         r3, [r3]
  00f6c	e3530000	 cmp         r3, #0
  00f70	0a00000c	 beq         |$LN11@InitInterr|
  00f74	e59d3050	 ldr         r3, [sp, #0x50]
  00f78	e2833044	 add         r3, r3, #0x44
  00f7c	e5933000	 ldr         r3, [r3]
  00f80	e3530000	 cmp         r3, #0
  00f84	0a000007	 beq         |$LN11@InitInterr|
  00f88	e59d3050	 ldr         r3, [sp, #0x50]
  00f8c	e283304c	 add         r3, r3, #0x4C
  00f90	e5933000	 ldr         r3, [r3]
  00f94	e3530000	 cmp         r3, #0
  00f98	0a000002	 beq         |$LN11@InitInterr|
  00f9c	e3a03001	 mov         r3, #1
  00fa0	e58d3044	 str         r3, [sp, #0x44]
  00fa4	ea000001	 b           |$LN12@InitInterr|
  00fa8		 |$LN11@InitInterr|
  00fa8	e3a03000	 mov         r3, #0
  00fac	e58d3044	 str         r3, [sp, #0x44]
  00fb0		 |$LN12@InitInterr|
  00fb0	e59d3044	 ldr         r3, [sp, #0x44]
  00fb4	e58d3008	 str         r3, [sp, #8]
  00fb8		 |$LN7@InitInterr|

; 502  : }

  00fb8	e59d0008	 ldr         r0, [sp, #8]
  00fbc	e28dd048	 add         sp, sp, #0x48
  00fc0	e89d6000	 ldmia       sp, {sp, lr}
  00fc4	e12fff1e	 bx          lr
  00fc8		 |$LN16@InitInterr|
  00fc8		 |$LN17@InitInterr|
  00fc8	00000000	 DCD         |?CallTimeoutThread@@YAXPAVHardwareContext@@@Z|
  00fcc		 |$LN18@InitInterr|
  00fcc	00000000	 DCD         |?CallInterruptThreadRx@@YAXPAVHardwareContext@@@Z|
  00fd0		 |$LN19@InitInterr|
  00fd0	00000000	 DCD         |?CallInterruptThreadTx@@YAXPAVHardwareContext@@@Z|
  00fd4		 |$LN20@InitInterr|
  00fd4	00000000	 DCD         |??_C@_1GA@ILNNPHDJ@?$AAW?$AAa?$AAv?$AAe?$AAD?$AAe?$AAv?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAI?$AAn@|
  00fd8		 |$LN21@InitInterr|
  00fd8	00000000	 DCD         |dpCurSettings|
  00fdc		 |$M37839|

			 ENDP  ; |?InitInterruptThread@HardwareContext@@IAAHXZ|, HardwareContext::InitInterruptThread

	EXPORT	|?Deinit@HardwareContext@@QAAHXZ|	; HardwareContext::Deinit

  00088			 AREA	 |.pdata|, PDATA
|$T37853| DCD	|$LN5@Deinit|
	DCD	0x40001204
; Function compile flags: /Odtp

  00fdc			 AREA	 |.text|, CODE, ARM

  00fdc		 |?Deinit@HardwareContext@@QAAHXZ| PROC	; HardwareContext::Deinit

; 513  : {

  00fdc		 |$LN5@Deinit|
  00fdc	e1a0c00d	 mov         r12, sp
  00fe0	e92d0001	 stmdb       sp!, {r0}
  00fe4	e92d5000	 stmdb       sp!, {r12, lr}
  00fe8	e24dd008	 sub         sp, sp, #8
  00fec		 |$M37850|

; 514  :     return HWDeinit();

  00fec	e59d3010	 ldr         r3, [sp, #0x10]
  00ff0	e5933000	 ldr         r3, [r3]
  00ff4	e2833054	 add         r3, r3, #0x54
  00ff8	e59d0010	 ldr         r0, [sp, #0x10]
  00ffc	e5933000	 ldr         r3, [r3]
  01000	e1a0e00f	 mov         lr, pc
  01004	e12fff13	 bx          r3
  01008	e58d0004	 str         r0, [sp, #4]
  0100c	e59d3004	 ldr         r3, [sp, #4]
  01010	e58d3000	 str         r3, [sp]

; 515  : }

  01014	e59d0000	 ldr         r0, [sp]
  01018	e28dd008	 add         sp, sp, #8
  0101c	e89d6000	 ldmia       sp, {sp, lr}
  01020	e12fff1e	 bx          lr
  01024		 |$M37851|

			 ENDP  ; |?Deinit@HardwareContext@@QAAHXZ|, HardwareContext::Deinit

	EXPORT	|??_C@_1DE@LHLPKALI@?$AAI?$AAn?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AA?$CF?$AAd?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs?$AA?0?$AA?5?$AAs?$AAt?$AAr?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?TransferInputBuffer@HardwareContext@@QAAKK@Z| ; HardwareContext::TransferInputBuffer
	IMPORT	|?TransferBuffer@DeviceContext@@QAAPAEPAE0PAK@Z| ; DeviceContext::TransferBuffer

  00090			 AREA	 |.pdata|, PDATA
|$T37861| DCD	|$LN7@TransferIn|
	DCD	0x40003204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@LHLPKALI@?$AAI?$AAn?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AA?$CF?$AAd?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs?$AA?0?$AA?5?$AAs?$AAt?$AAr?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t"
	DCB	0x0, "e", 0x0, "s", 0x0, ",", 0x0, " ", 0x0, "s", 0x0, "t"
	DCB	0x0, "r", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  01024			 AREA	 |.text|, CODE, ARM

  01024		 |?TransferInputBuffer@HardwareContext@@QAAKK@Z| PROC ; HardwareContext::TransferInputBuffer

; 526  : {

  01024		 |$LN7@TransferIn|
  01024	e1a0c00d	 mov         r12, sp
  01028	e92d0003	 stmdb       sp!, {r0, r1}
  0102c	e92d5000	 stmdb       sp!, {r12, lr}
  01030	e24dd020	 sub         sp, sp, #0x20
  01034		 |$M37858|

; 527  :     ULONG BytesTransferred;
; 528  :     PBYTE pBufferStart = m_Input_pbDMA_PAGES[NumBuf];

  01034	e59d3028	 ldr         r3, [sp, #0x28]
  01038	e28310b8	 add         r1, r3, #0xB8
  0103c	e59d202c	 ldr         r2, [sp, #0x2C]
  01040	e3a03004	 mov         r3, #4
  01044	e0030392	 mul         r3, r2, r3
  01048	e0813003	 add         r3, r1, r3
  0104c	e5933000	 ldr         r3, [r3]
  01050	e58d3004	 str         r3, [sp, #4]

; 529  :     PBYTE pBufferEnd = pBufferStart + AUDIO_DMA_PAGE_SIZE;

  01054	e59d3004	 ldr         r3, [sp, #4]
  01058	e2833a02	 add         r3, r3, #2, 20
  0105c	e58d3010	 str         r3, [sp, #0x10]

; 530  :     PBYTE pBufferLast;
; 531  :     DWORD NumStreams;
; 532  : 
; 533  : #ifdef PROFILE_MIXER
; 534  :     LARGE_INTEGER liPCStart, liPCStop;
; 535  :     QueryPerformanceCounter(&liPCStart);
; 536  : #endif
; 537  : 
; 538  :     pBufferLast = m_InputDeviceContext.TransferBuffer(pBufferStart, pBufferEnd, &NumStreams);

  01060	e28d3008	 add         r3, sp, #8
  01064	e59d2010	 ldr         r2, [sp, #0x10]
  01068	e59d1004	 ldr         r1, [sp, #4]
  0106c	e59d0028	 ldr         r0, [sp, #0x28]
  01070	e2800070	 add         r0, r0, #0x70
  01074	eb000000	 bl          |?TransferBuffer@DeviceContext@@QAAPAEPAE0PAK@Z|
  01078	e58d0018	 str         r0, [sp, #0x18]
  0107c	e59d3018	 ldr         r3, [sp, #0x18]
  01080	e58d3000	 str         r3, [sp]

; 539  :     BytesTransferred = pBufferLast-pBufferStart;

  01084	e59d2000	 ldr         r2, [sp]
  01088	e59d3004	 ldr         r3, [sp, #4]
  0108c	e0423003	 sub         r3, r2, r3
  01090	e58d300c	 str         r3, [sp, #0xC]

; 540  : 
; 541  : #ifdef INPUT_CACHEDMEM
; 542  :     InputBufferCacheDiscard( pBufferStart, AUDIO_DMA_PAGE_SIZE);
; 543  : #endif
; 544  : 
; 545  : #ifdef PROFILE_MIXER 
; 546  :     QueryPerformanceCounter(&liPCStop);
; 547  :     m_InputDeviceContext.m_liPCTotal.QuadPart += liPCStop.QuadPart-liPCStart.QuadPart;
; 548  : #endif
; 549  : 
; 550  :     DEBUGMSG(ZONE_DMA, (TEXT("In(%d) %d bytes, str %d\r\n"),NumBuf, BytesTransferred, NumStreams));

  01094	e59f304c	 ldr         r3, [pc, #0x4C]
  01098	e5933440	 ldr         r3, [r3, #0x440]
  0109c	e3130c01	 tst         r3, #1, 24
  010a0	0a000007	 beq         |$LN3@TransferIn|
  010a4	e59d3008	 ldr         r3, [sp, #8]
  010a8	e59d200c	 ldr         r2, [sp, #0xC]
  010ac	e59d102c	 ldr         r1, [sp, #0x2C]
  010b0	e59f002c	 ldr         r0, [pc, #0x2C]
  010b4	eb000000	 bl          NKDbgPrintfW
  010b8	e3a03001	 mov         r3, #1
  010bc	e58d301c	 str         r3, [sp, #0x1C]
  010c0	ea000001	 b           |$LN4@TransferIn|
  010c4		 |$LN3@TransferIn|
  010c4	e3a03000	 mov         r3, #0
  010c8	e58d301c	 str         r3, [sp, #0x1C]
  010cc		 |$LN4@TransferIn|

; 551  : #if 0
; 552  : 	DWORD i;
; 553  : 	PWORD pwData, pwLast;
; 554  : 	RETAILMSG(1, (L"-------------------------------Input----------------------------------\r\n"));
; 555  : 	pwData = (PWORD)pBufferStart;
; 556  : 	pwLast = (PWORD)pBufferLast;
; 557  : 	while (pwData < pwLast)
; 558  : 	{
; 559  : 		RETAILMSG(1, (L"\t"));
; 560  : 		for (i = 0; i < 16 && pwData < pwLast; i++, pwData++)
; 561  : 		{
; 562  : 			RETAILMSG(1, (L"0x%04X, ", *pwData));
; 563  : 		}
; 564  : 		RETAILMSG(1, (L"\r\n"));
; 565  : 	}
; 566  : 	RETAILMSG(1, (L"-------------------------------Input----------------------------------\r\n"));
; 567  : #endif
; 568  : 
; 569  :     return BytesTransferred;

  010cc	e59d300c	 ldr         r3, [sp, #0xC]
  010d0	e58d3014	 str         r3, [sp, #0x14]

; 570  : }

  010d4	e59d0014	 ldr         r0, [sp, #0x14]
  010d8	e28dd020	 add         sp, sp, #0x20
  010dc	e89d6000	 ldmia       sp, {sp, lr}
  010e0	e12fff1e	 bx          lr
  010e4		 |$LN8@TransferIn|
  010e4		 |$LN9@TransferIn|
  010e4	00000000	 DCD         |??_C@_1DE@LHLPKALI@?$AAI?$AAn?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AA?$CF?$AAd?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs?$AA?0?$AA?5?$AAs?$AAt?$AAr?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  010e8		 |$LN10@TransferIn|
  010e8	00000000	 DCD         |dpCurSettings|
  010ec		 |$M37859|

			 ENDP  ; |?TransferInputBuffer@HardwareContext@@QAAKK@Z|, HardwareContext::TransferInputBuffer

	EXPORT	|??_C@_1DE@DDBAECDD@?$AAO?$AAu?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AA?$CF?$AAd?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs?$AA?5?$AAs?$AAt?$AAr?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?OutputBufferCacheFlush@HardwareContext@@IAAXPAEK@Z| ; HardwareContext::OutputBufferCacheFlush
	EXPORT	|?ClearBuffer@StreamContext@@SAXPAE0@Z|	; StreamContext::ClearBuffer
	EXPORT	|??_C@_1EE@OKGHIGAI@?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAN?$AAu?$AAm?$AAB?$AAu?$AAf?$AA?$DN?$AA?$CF?$AAd?$AA?$AN@| [ DATA ] ; `string'

  00098			 AREA	 |.pdata|, PDATA
|$T37874| DCD	|$LN9@TransferOu|
	DCD	0x40004604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@DDBAECDD@?$AAO?$AAu?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AA?$CF?$AAd?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs?$AA?5?$AAs?$AAt?$AAr?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "u", 0x0, "t", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "b", 0x0, "y"
	DCB	0x0, "t", 0x0, "e", 0x0, "s", 0x0, " ", 0x0, "s", 0x0, "t"
	DCB	0x0, "r", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@OKGHIGAI@?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAN?$AAu?$AAm?$AAB?$AAu?$AAf?$AA?$DN?$AA?$CF?$AAd?$AA?$AN@| DCB "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, "O", 0x0, "u", 0x0, "t", 0x0, "p", 0x0, "u"
	DCB	0x0, "t", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, ":", 0x0, " ", 0x0, "N", 0x0, "u", 0x0, "m"
	DCB	0x0, "B", 0x0, "u", 0x0, "f", 0x0, "=", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  010ec			 AREA	 |.text|, CODE, ARM

  010ec		 |?TransferOutputBuffer@HardwareContext@@QAAKK@Z| PROC ; HardwareContext::TransferOutputBuffer

; 610  : {

  010ec		 |$LN9@TransferOu|
  010ec	e1a0c00d	 mov         r12, sp
  010f0	e92d0003	 stmdb       sp!, {r0, r1}
  010f4	e92d5000	 stmdb       sp!, {r12, lr}
  010f8	e24dd024	 sub         sp, sp, #0x24
  010fc		 |$M37871|

; 611  :     ULONG BytesTransferred;
; 612  :     PBYTE pBufferStart = m_Output_pbDMA_PAGES[NumBuf];

  010fc	e59d302c	 ldr         r3, [sp, #0x2C]
  01100	e28310c0	 add         r1, r3, #0xC0
  01104	e59d2030	 ldr         r2, [sp, #0x30]
  01108	e3a03004	 mov         r3, #4
  0110c	e0030392	 mul         r3, r2, r3
  01110	e0813003	 add         r3, r1, r3
  01114	e5933000	 ldr         r3, [r3]
  01118	e58d3004	 str         r3, [sp, #4]

; 613  :     PBYTE pBufferEnd = pBufferStart + AUDIO_DMA_PAGE_SIZE;

  0111c	e59d3004	 ldr         r3, [sp, #4]
  01120	e2833a02	 add         r3, r3, #2, 20
  01124	e58d3010	 str         r3, [sp, #0x10]

; 614  :     PBYTE pBufferLast;
; 615  :     DWORD NumStreams;
; 616  : 
; 617  : 	DEBUGMSG(ZONE_DMA, (TEXT("TransferOutputBuffer: NumBuf=%d\r\n"), NumBuf));

  01128	e59f30cc	 ldr         r3, [pc, #0xCC]
  0112c	e5933440	 ldr         r3, [r3, #0x440]
  01130	e3130c01	 tst         r3, #1, 24
  01134	0a000005	 beq         |$LN3@TransferOu|
  01138	e59d1030	 ldr         r1, [sp, #0x30]
  0113c	e59f00bc	 ldr         r0, [pc, #0xBC]
  01140	eb000000	 bl          NKDbgPrintfW
  01144	e3a03001	 mov         r3, #1
  01148	e58d3018	 str         r3, [sp, #0x18]
  0114c	ea000001	 b           |$LN4@TransferOu|
  01150		 |$LN3@TransferOu|
  01150	e3a03000	 mov         r3, #0
  01154	e58d3018	 str         r3, [sp, #0x18]
  01158		 |$LN4@TransferOu|

; 618  : #if 0
; 619  : 	DWORD i;
; 620  : 	PWORD pwData, pwLast;
; 621  : 	RETAILMSG(1, (L"-------------------------------Output---------------------------------\r\n"));
; 622  : 	pwData = (PWORD)pBufferStart;
; 623  : 	pwLast = (PWORD)(pBufferStart + AUDIO_DMA_PAGE_SIZE);
; 624  : 	while (pwData < pwLast)
; 625  : 	{
; 626  : 		RETAILMSG(1, (L"\t"));
; 627  : 		for (i = 0; i < 16 && pwData < pwLast; i++, pwData++)
; 628  : 		{
; 629  : 			RETAILMSG(1, (L"0x%04X, ", *pwData));
; 630  : 		}
; 631  : 		RETAILMSG(1, (L"\r\n"));
; 632  : 	}
; 633  : 	RETAILMSG(1, (L"-------------------------------Output---------------------------------\r\n"));
; 634  : #endif
; 635  : 
; 636  : #ifdef PROFILE_MIXER
; 637  :     LARGE_INTEGER liPCStart, liPCStop;
; 638  :     QueryPerformanceCounter(&liPCStart);
; 639  : #endif
; 640  : 
; 641  :     pBufferLast = m_OutputDeviceContext.TransferBuffer(pBufferStart, pBufferEnd, &NumStreams);

  01158	e28d3008	 add         r3, sp, #8
  0115c	e59d2010	 ldr         r2, [sp, #0x10]
  01160	e59d1004	 ldr         r1, [sp, #4]
  01164	e59d002c	 ldr         r0, [sp, #0x2C]
  01168	e2800094	 add         r0, r0, #0x94
  0116c	eb000000	 bl          |?TransferBuffer@DeviceContext@@QAAPAEPAE0PAK@Z|
  01170	e58d001c	 str         r0, [sp, #0x1C]
  01174	e59d301c	 ldr         r3, [sp, #0x1C]
  01178	e58d3000	 str         r3, [sp]

; 642  : #if USE_HW_SATURATE
; 643  :     // If not using mix saturation, take care saturation here.
; 644  :     // If more than 1 stream rendered, guard against saturation.
; 645  :     if (NumStreams>1)
; 646  :     {
; 647  :         HandleSaturation(pBufferStart, pBufferLast);
; 648  :     }
; 649  : #endif
; 650  :     // Clear the rest of the buffer
; 651  :     StreamContext::ClearBuffer(pBufferLast,pBufferEnd);

  0117c	e59d1010	 ldr         r1, [sp, #0x10]
  01180	e59d0000	 ldr         r0, [sp]
  01184	eb000000	 bl          |?ClearBuffer@StreamContext@@SAXPAE0@Z|

; 652  : 
; 653  :     BytesTransferred = pBufferLast-pBufferStart;

  01188	e59d2000	 ldr         r2, [sp]
  0118c	e59d3004	 ldr         r3, [sp, #4]
  01190	e0423003	 sub         r3, r2, r3
  01194	e58d300c	 str         r3, [sp, #0xC]

; 654  : 
; 655  : #ifdef MIXER_CACHEDMEM
; 656  :     OutputBufferCacheFlush( pBufferStart, AUDIO_DMA_PAGE_SIZE);

  01198	e3a02a02	 mov         r2, #2, 20
  0119c	e59d1004	 ldr         r1, [sp, #4]
  011a0	e59d002c	 ldr         r0, [sp, #0x2C]
  011a4	eb000000	 bl          |?OutputBufferCacheFlush@HardwareContext@@IAAXPAEK@Z|

; 657  : #endif
; 658  : 
; 659  : #ifdef PROFILE_MIXER 
; 660  :     QueryPerformanceCounter(&liPCStop);
; 661  :     m_OutputDeviceContext.m_liPCTotal.QuadPart += liPCStop.QuadPart-liPCStart.QuadPart;
; 662  : #endif
; 663  : 
; 664  :     DEBUGMSG(ZONE_DMA, (TEXT("Out(%d) %d bytes str %d\r\n"),NumBuf, BytesTransferred, NumStreams));

  011a8	e59f304c	 ldr         r3, [pc, #0x4C]
  011ac	e5933440	 ldr         r3, [r3, #0x440]
  011b0	e3130c01	 tst         r3, #1, 24
  011b4	0a000007	 beq         |$LN5@TransferOu|
  011b8	e59d3008	 ldr         r3, [sp, #8]
  011bc	e59d200c	 ldr         r2, [sp, #0xC]
  011c0	e59d1030	 ldr         r1, [sp, #0x30]
  011c4	e59f002c	 ldr         r0, [pc, #0x2C]
  011c8	eb000000	 bl          NKDbgPrintfW
  011cc	e3a03001	 mov         r3, #1
  011d0	e58d3020	 str         r3, [sp, #0x20]
  011d4	ea000001	 b           |$LN6@TransferOu|
  011d8		 |$LN5@TransferOu|
  011d8	e3a03000	 mov         r3, #0
  011dc	e58d3020	 str         r3, [sp, #0x20]
  011e0		 |$LN6@TransferOu|

; 665  : 
; 666  :     return BytesTransferred;

  011e0	e59d300c	 ldr         r3, [sp, #0xC]
  011e4	e58d3014	 str         r3, [sp, #0x14]

; 667  : }

  011e8	e59d0014	 ldr         r0, [sp, #0x14]
  011ec	e28dd024	 add         sp, sp, #0x24
  011f0	e89d6000	 ldmia       sp, {sp, lr}
  011f4	e12fff1e	 bx          lr
  011f8		 |$LN10@TransferOu|
  011f8		 |$LN11@TransferOu|
  011f8	00000000	 DCD         |??_C@_1DE@DDBAECDD@?$AAO?$AAu?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AA?$CF?$AAd?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs?$AA?5?$AAs?$AAt?$AAr?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  011fc		 |$LN12@TransferOu|
  011fc	00000000	 DCD         |dpCurSettings|
  01200		 |$LN13@TransferOu|
  01200	00000000	 DCD         |??_C@_1EE@OKGHIGAI@?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAN?$AAu?$AAm?$AAB?$AAu?$AAf?$AA?$DN?$AA?$CF?$AAd?$AA?$AN@|
  01204		 |$M37872|

			 ENDP  ; |?TransferOutputBuffer@HardwareContext@@QAAKK@Z|, HardwareContext::TransferOutputBuffer

	IMPORT	|CacheRangeFlush|
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T37883| DCD	|$LN5@OutputBuff|
	DCD	0x40000903
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?OutputBufferCacheFlush@HardwareContext@@IAAXPAEK@Z| PROC ; HardwareContext::OutputBufferCacheFlush

; 293  : {

  00000		 |$LN5@OutputBuff|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37880|

; 294  : #ifdef MIXER_CACHEDMEM
; 295  :     CacheRangeFlush(pbMem, dwLen, CACHE_SYNC_WRITEBACK);

  0000c	e3a02004	 mov         r2, #4
  00010	e59d1010	 ldr         r1, [sp, #0x10]
  00014	e59d000c	 ldr         r0, [sp, #0xC]
  00018	eb000000	 bl          CacheRangeFlush

; 296  : #endif
; 297  : }

  0001c	e89d6000	 ldmia       sp, {sp, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$M37881|

			 ENDP  ; |?OutputBufferCacheFlush@HardwareContext@@IAAXPAEK@Z|, HardwareContext::OutputBufferCacheFlush

	IMPORT	|memset|
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\strmctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T37890| DCD	|$LN5@ClearBuffe|
	DCD	0x40000b03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ClearBuffer@StreamContext@@SAXPAE0@Z| PROC ; StreamContext::ClearBuffer

; 159  :     static void ClearBuffer(PBYTE pStart, PBYTE pEnd) {memset(pStart,0,pEnd-pStart);}

  00000		 |$LN5@ClearBuffe|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37887|
  0000c	e59d200c	 ldr         r2, [sp, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e0422003	 sub         r2, r2, r3
  00018	e3a01000	 mov         r1, #0
  0001c	e59d0008	 ldr         r0, [sp, #8]
  00020	eb000000	 bl          memset
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M37888|

			 ENDP  ; |?ClearBuffer@StreamContext@@SAXPAE0@Z|, StreamContext::ClearBuffer

	EXPORT	|?Unlock@HardwareContext@@QAAXXZ|	; HardwareContext::Unlock
	EXPORT	|?Lock@HardwareContext@@QAAXXZ|		; HardwareContext::Lock
	EXPORT	|??_C@_1CK@IPLDKDFB@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAT?$AAx?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IE@IFDLKCLD@?$AAW?$AAa?$AAv?$AAe?$AAD?$AAe?$AAv?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr@| [ DATA ] ; `string'
	EXPORT	|GetCurrentThread|
	EXPORT	|??_C@_1FE@NOGKEDNF@?$AAW?$AAa?$AAv?$AAe?$AAd?$AAe?$AAv?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAA?$AAP?$AAI?$AAR?$AAe?$AAa?$AAd?$AAy?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@DCCNFMOO@?$AAW?$AAa?$AAv?$AAe?$AAD?$AAe?$AAv?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr@| [ DATA ] ; `string'
	EXPORT	|?InterruptThreadTx@HardwareContext@@QAAXXZ| ; HardwareContext::InterruptThreadTx
	IMPORT	|InterruptDone|
	IMPORT	|CeSetThreadPriority|
	IMPORT	|WaitForAPIReady|

  000a0			 AREA	 |.pdata|, PDATA
|$T37905| DCD	|$LN16@InterruptT|
	DCD	0x40006404
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@IPLDKDFB@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAT?$AAx?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "W"
	DCB	0x0, "A", 0x0, "V", 0x0, "E", 0x0, ":", 0x0, " ", 0x0, "T"
	DCB	0x0, "x", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@IFDLKCLD@?$AAW?$AAa?$AAv?$AAe?$AAD?$AAe?$AAv?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr@| DCB "W"
	DCB	0x0, "a", 0x0, "v", 0x0, "e", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, ":", 0x0, " ", 0x0, "H", 0x0, "a", 0x0, "r", 0x0, "d"
	DCB	0x0, "w", 0x0, "a", 0x0, "r", 0x0, "e", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "T", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "T", 0x0, "x"
	DCB	0x0, " ", 0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "!"
	DCB	0x0, "!", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@NOGKEDNF@?$AAW?$AAa?$AAv?$AAe?$AAd?$AAe?$AAv?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAA?$AAP?$AAI?$AAR?$AAe?$AAa?$AAd?$AAy?$AA?5@| DCB "W"
	DCB	0x0, "a", 0x0, "v", 0x0, "e", 0x0, "d", 0x0, "e", 0x0, "v"
	DCB	0x0, " ", 0x0, "d", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "r", 0x0, ":", 0x0, " ", 0x0, "W", 0x0, "a", 0x0, "i"
	DCB	0x0, "t", 0x0, "F", 0x0, "o", 0x0, "r", 0x0, "A", 0x0, "P"
	DCB	0x0, "I", 0x0, "R", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "y"
	DCB	0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@DCCNFMOO@?$AAW?$AAa?$AAv?$AAe?$AAD?$AAe?$AAv?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr@| DCB "W"
	DCB	0x0, "a", 0x0, "v", 0x0, "e", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, ":", 0x0, " ", 0x0, "H", 0x0, "a", 0x0, "r", 0x0, "d"
	DCB	0x0, "w", 0x0, "a", 0x0, "r", 0x0, "e", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "T", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "T", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  01204			 AREA	 |.text|, CODE, ARM

  01204		 |?InterruptThreadTx@HardwareContext@@QAAXXZ| PROC ; HardwareContext::InterruptThreadTx

; 678  : {

  01204		 |$LN16@InterruptT|
  01204	e1a0c00d	 mov         r12, sp
  01208	e92d0001	 stmdb       sp!, {r0}
  0120c	e92d5000	 stmdb       sp!, {r12, lr}
  01210	e24dd020	 sub         sp, sp, #0x20
  01214		 |$M37902|

; 679  :     DEBUGMSG(ZONE_AC, 
; 680  :        (TEXT("WaveDev: HardwareContext::InterruptThreadTx\r\n")));

  01214	e59f3168	 ldr         r3, [pc, #0x168]
  01218	e5933440	 ldr         r3, [r3, #0x440]
  0121c	e3130001	 tst         r3, #1
  01220	0a000004	 beq         |$LN6@InterruptT|
  01224	e59f0164	 ldr         r0, [pc, #0x164]
  01228	eb000000	 bl          NKDbgPrintfW
  0122c	e3a03001	 mov         r3, #1
  01230	e58d3004	 str         r3, [sp, #4]
  01234	ea000001	 b           |$LN7@InterruptT|
  01238		 |$LN6@InterruptT|
  01238	e3a03000	 mov         r3, #0
  0123c	e58d3004	 str         r3, [sp, #4]
  01240		 |$LN7@InterruptT|

; 681  : 
; 682  :     // make sure that GWES APIs ready before calling: 
; 683  :     if (WAIT_OBJECT_0 != WaitForAPIReady(SH_GDI, INFINITE))

  01240	e3e01000	 mvn         r1, #0
  01244	e3a00050	 mov         r0, #0x50
  01248	eb000000	 bl          WaitForAPIReady
  0124c	e58d0008	 str         r0, [sp, #8]
  01250	e59d3008	 ldr         r3, [sp, #8]
  01254	e3530000	 cmp         r3, #0
  01258	0a00000b	 beq         |$LN3@InterruptT|

; 684  :     {
; 685  :         DEBUGMSG(ZONE_ERROR, (TEXT("Wavedev driver: WaitForAPIReady failed.\r\n")));

  0125c	e59f3120	 ldr         r3, [pc, #0x120]
  01260	e5933440	 ldr         r3, [r3, #0x440]
  01264	e3130902	 tst         r3, #2, 18
  01268	0a000004	 beq         |$LN8@InterruptT|
  0126c	e59f0118	 ldr         r0, [pc, #0x118]
  01270	eb000000	 bl          NKDbgPrintfW
  01274	e3a03001	 mov         r3, #1
  01278	e58d300c	 str         r3, [sp, #0xC]
  0127c	ea000001	 b           |$LN9@InterruptT|
  01280		 |$LN8@InterruptT|
  01280	e3a03000	 mov         r3, #0
  01284	e58d300c	 str         r3, [sp, #0xC]
  01288		 |$LN9@InterruptT|

; 686  :         return;

  01288	ea000039	 b           |$LN4@InterruptT|
  0128c		 |$LN3@InterruptT|

; 687  :     }
; 688  : 
; 689  :     // Bump up the priority since the interrupt must be serviced immediately.
; 690  :     CeSetThreadPriority(GetCurrentThread(),  m_dwPriority256);

  0128c	eb000000	 bl          GetCurrentThread
  01290	e58d0010	 str         r0, [sp, #0x10]
  01294	e59d3028	 ldr         r3, [sp, #0x28]
  01298	e2833018	 add         r3, r3, #0x18
  0129c	e5931000	 ldr         r1, [r3]
  012a0	e59d0010	 ldr         r0, [sp, #0x10]
  012a4	eb000000	 bl          CeSetThreadPriority

; 691  : 
; 692  :     DEBUGMSG(ZONE_AC, 
; 693  :        (TEXT("WaveDev: HardwareContext::InterruptThreadTx Enable Interrupt!!!\r\n")));

  012a8	e59f30d4	 ldr         r3, [pc, #0xD4]
  012ac	e5933440	 ldr         r3, [r3, #0x440]
  012b0	e3130001	 tst         r3, #1
  012b4	0a000004	 beq         |$LN10@InterruptT|
  012b8	e59f00c8	 ldr         r0, [pc, #0xC8]
  012bc	eb000000	 bl          NKDbgPrintfW
  012c0	e3a03001	 mov         r3, #1
  012c4	e58d3014	 str         r3, [sp, #0x14]
  012c8	ea000001	 b           |$LN11@InterruptT|
  012cc		 |$LN10@InterruptT|
  012cc	e3a03000	 mov         r3, #0
  012d0	e58d3014	 str         r3, [sp, #0x14]
  012d4		 |$LN11@InterruptT|
  012d4		 |$LN2@InterruptT|

; 694  :     while (!m_fTerminating)

  012d4	e59d3028	 ldr         r3, [sp, #0x28]
  012d8	e283302c	 add         r3, r3, #0x2C
  012dc	e5933000	 ldr         r3, [r3]
  012e0	e3530000	 cmp         r3, #0
  012e4	1a000022	 bne         |$LN1@InterruptT|

; 695  :     {
; 696  :         DWORD dwWaitObject;
; 697  : 
; 698  :         InterruptDone(m_IntrAudioTx);

  012e8	e59d3028	 ldr         r3, [sp, #0x28]
  012ec	e2833024	 add         r3, r3, #0x24
  012f0	e5930000	 ldr         r0, [r3]
  012f4	eb000000	 bl          InterruptDone

; 699  : 
; 700  :         dwWaitObject = WaitForSingleObject(m_hAudioInterruptTx, INFINITE);

  012f8	e3e01000	 mvn         r1, #0
  012fc	e59d3028	 ldr         r3, [sp, #0x28]
  01300	e2833038	 add         r3, r3, #0x38
  01304	e5930000	 ldr         r0, [r3]
  01308	eb000000	 bl          WaitForSingleObject
  0130c	e58d0018	 str         r0, [sp, #0x18]
  01310	e59d3018	 ldr         r3, [sp, #0x18]
  01314	e58d3000	 str         r3, [sp]

; 701  : 
; 702  :         DEBUGMSG(ZONE_IRQ,(TEXT("WAVE: Tx interrupt\r\n")));

  01318	e59f3064	 ldr         r3, [pc, #0x64]
  0131c	e5933440	 ldr         r3, [r3, #0x440]
  01320	e3130008	 tst         r3, #8
  01324	0a000004	 beq         |$LN12@InterruptT|
  01328	e59f0050	 ldr         r0, [pc, #0x50]
  0132c	eb000000	 bl          NKDbgPrintfW
  01330	e3a03001	 mov         r3, #1
  01334	e58d301c	 str         r3, [sp, #0x1C]
  01338	ea000001	 b           |$LN13@InterruptT|
  0133c		 |$LN12@InterruptT|
  0133c	e3a03000	 mov         r3, #0
  01340	e58d301c	 str         r3, [sp, #0x1C]
  01344		 |$LN13@InterruptT|

; 703  : 
; 704  :         // Grab the lock
; 705  :         Lock();

  01344	e59d0028	 ldr         r0, [sp, #0x28]
  01348	eb000000	 bl          |?Lock@HardwareContext@@QAAXXZ|

; 706  : 
; 707  :         // Copy data to DMA buffers
; 708  :         HWTransferOutputBuffers();

  0134c	e59d3028	 ldr         r3, [sp, #0x28]
  01350	e5933000	 ldr         r3, [r3]
  01354	e2833024	 add         r3, r3, #0x24
  01358	e59d0028	 ldr         r0, [sp, #0x28]
  0135c	e5933000	 ldr         r3, [r3]
  01360	e1a0e00f	 mov         lr, pc
  01364	e12fff13	 bx          r3

; 709  : 
; 710  :         Unlock();

  01368	e59d0028	 ldr         r0, [sp, #0x28]
  0136c	eb000000	 bl          |?Unlock@HardwareContext@@QAAXXZ|

; 711  :     }

  01370	eaffffd7	 b           |$LN2@InterruptT|
  01374		 |$LN1@InterruptT|
  01374		 |$LN4@InterruptT|

; 712  : }

  01374	e28dd020	 add         sp, sp, #0x20
  01378	e89d6000	 ldmia       sp, {sp, lr}
  0137c	e12fff1e	 bx          lr
  01380		 |$LN17@InterruptT|
  01380		 |$LN18@InterruptT|
  01380	00000000	 DCD         |??_C@_1CK@IPLDKDFB@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAT?$AAx?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  01384		 |$LN19@InterruptT|
  01384	00000000	 DCD         |dpCurSettings|
  01388		 |$LN20@InterruptT|
  01388	00000000	 DCD         |??_C@_1IE@IFDLKCLD@?$AAW?$AAa?$AAv?$AAe?$AAD?$AAe?$AAv?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr@|
  0138c		 |$LN21@InterruptT|
  0138c	00000000	 DCD         |??_C@_1FE@NOGKEDNF@?$AAW?$AAa?$AAv?$AAe?$AAd?$AAe?$AAv?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAA?$AAP?$AAI?$AAR?$AAe?$AAa?$AAd?$AAy?$AA?5@|
  01390		 |$LN22@InterruptT|
  01390	00000000	 DCD         |??_C@_1FM@DCCNFMOO@?$AAW?$AAa?$AAv?$AAe?$AAD?$AAe?$AAv?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr@|
  01394		 |$M37903|

			 ENDP  ; |?InterruptThreadTx@HardwareContext@@QAAXXZ|, HardwareContext::InterruptThreadTx

; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T37917| DCD	|$LN5@GetCurrent|
	DCD	0x40000601
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentThread| PROC

; 351  : _inline HANDLE GetCurrentThread(void) {

  00000		 |$LN5@GetCurrent|
  00000	e24dd004	 sub         sp, sp, #4
  00004		 |$M37914|

; 352  : 	return ((HANDLE)(SH_CURTHREAD+SYS_HANDLE_BASE));

  00004	e3a03041	 mov         r3, #0x41
  00008	e58d3000	 str         r3, [sp]

; 353  : }

  0000c	e59d0000	 ldr         r0, [sp]
  00010	e28dd004	 add         sp, sp, #4
  00014	e12fff1e	 bx          lr
  00018		 |$M37915|

			 ENDP  ; |GetCurrentThread|

	IMPORT	|EnterCriticalSection|
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T37924| DCD	|$LN5@Lock|
	DCD	0x40000803
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Lock@HardwareContext@@QAAXXZ| PROC	; HardwareContext::Lock

; 82   :     void Lock()   {EnterCriticalSection(&m_Lock);}

  00000		 |$LN5@Lock|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37921|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2830004	 add         r0, r3, #4
  00014	eb000000	 bl          EnterCriticalSection
  00018	e89d6000	 ldmia       sp, {sp, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$M37922|

			 ENDP  ; |?Lock@HardwareContext@@QAAXXZ|, HardwareContext::Lock

	IMPORT	|LeaveCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37931| DCD	|$LN5@Unlock|
	DCD	0x40000803
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Unlock@HardwareContext@@QAAXXZ| PROC	; HardwareContext::Unlock

; 83   :     void Unlock() {LeaveCriticalSection(&m_Lock);}

  00000		 |$LN5@Unlock|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37928|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2830004	 add         r0, r3, #4
  00014	eb000000	 bl          LeaveCriticalSection
  00018	e89d6000	 ldmia       sp, {sp, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$M37929|

			 ENDP  ; |?Unlock@HardwareContext@@QAAXXZ|, HardwareContext::Unlock

	EXPORT	|??_C@_1CK@GPBOJGB@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAR?$AAx?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@DPDDCMKJ@?$AAW?$AAa?$AAv?$AAe?$AAD?$AAe?$AAv?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr@| [ DATA ] ; `string'
	EXPORT	|?InterruptThreadRx@HardwareContext@@QAAXXZ| ; HardwareContext::InterruptThreadRx

  000a8			 AREA	 |.pdata|, PDATA
|$T37944| DCD	|$LN14@InterruptT@2|
	DCD	0x40005804
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@GPBOJGB@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAR?$AAx?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "W"
	DCB	0x0, "A", 0x0, "V", 0x0, "E", 0x0, ":", 0x0, " ", 0x0, "R"
	DCB	0x0, "x", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@DPDDCMKJ@?$AAW?$AAa?$AAv?$AAe?$AAD?$AAe?$AAv?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr@| DCB "W"
	DCB	0x0, "a", 0x0, "v", 0x0, "e", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, ":", 0x0, " ", 0x0, "H", 0x0, "a", 0x0, "r", 0x0, "d"
	DCB	0x0, "w", 0x0, "a", 0x0, "r", 0x0, "e", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "T", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "R", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  01394			 AREA	 |.text|, CODE, ARM

  01394		 |?InterruptThreadRx@HardwareContext@@QAAXXZ| PROC ; HardwareContext::InterruptThreadRx

; 723  : {

  01394		 |$LN14@InterruptT@2|
  01394	e1a0c00d	 mov         r12, sp
  01398	e92d0001	 stmdb       sp!, {r0}
  0139c	e92d5000	 stmdb       sp!, {r12, lr}
  013a0	e24dd01c	 sub         sp, sp, #0x1C
  013a4		 |$M37941|

; 724  :     DEBUGMSG(ZONE_AC, 
; 725  :        (TEXT("WaveDev: HardwareContext::InterruptThreadRx\r\n")));

  013a4	e59f313c	 ldr         r3, [pc, #0x13C]
  013a8	e5933440	 ldr         r3, [r3, #0x440]
  013ac	e3130001	 tst         r3, #1
  013b0	0a000004	 beq         |$LN6@InterruptT@2|
  013b4	e59f0134	 ldr         r0, [pc, #0x134]
  013b8	eb000000	 bl          NKDbgPrintfW
  013bc	e3a03001	 mov         r3, #1
  013c0	e58d3004	 str         r3, [sp, #4]
  013c4	ea000001	 b           |$LN7@InterruptT@2|
  013c8		 |$LN6@InterruptT@2|
  013c8	e3a03000	 mov         r3, #0
  013cc	e58d3004	 str         r3, [sp, #4]
  013d0		 |$LN7@InterruptT@2|

; 726  : 
; 727  :     // make sure that GWES APIs ready before calling: 
; 728  :     if (WAIT_OBJECT_0 != WaitForAPIReady(SH_GDI, INFINITE))

  013d0	e3e01000	 mvn         r1, #0
  013d4	e3a00050	 mov         r0, #0x50
  013d8	eb000000	 bl          WaitForAPIReady
  013dc	e58d0008	 str         r0, [sp, #8]
  013e0	e59d3008	 ldr         r3, [sp, #8]
  013e4	e3530000	 cmp         r3, #0
  013e8	0a00000b	 beq         |$LN3@InterruptT@2|

; 729  :     {
; 730  :         DEBUGMSG(ZONE_ERROR, (TEXT("Wavedev driver: WaitForAPIReady failed.\r\n")));

  013ec	e59f30f4	 ldr         r3, [pc, #0xF4]
  013f0	e5933440	 ldr         r3, [r3, #0x440]
  013f4	e3130902	 tst         r3, #2, 18
  013f8	0a000004	 beq         |$LN8@InterruptT@2|
  013fc	e59f00e8	 ldr         r0, [pc, #0xE8]
  01400	eb000000	 bl          NKDbgPrintfW
  01404	e3a03001	 mov         r3, #1
  01408	e58d300c	 str         r3, [sp, #0xC]
  0140c	ea000001	 b           |$LN9@InterruptT@2|
  01410		 |$LN8@InterruptT@2|
  01410	e3a03000	 mov         r3, #0
  01414	e58d300c	 str         r3, [sp, #0xC]
  01418		 |$LN9@InterruptT@2|

; 731  :         return;

  01418	ea00002e	 b           |$LN4@InterruptT@2|
  0141c		 |$LN3@InterruptT@2|

; 732  :     }
; 733  : 
; 734  :     // Bump up the priority since the interrupt must be serviced immediately.
; 735  :     CeSetThreadPriority(GetCurrentThread(), m_dwPriority256);

  0141c	eb000000	 bl          GetCurrentThread
  01420	e58d0010	 str         r0, [sp, #0x10]
  01424	e59d3024	 ldr         r3, [sp, #0x24]
  01428	e2833018	 add         r3, r3, #0x18
  0142c	e5931000	 ldr         r1, [r3]
  01430	e59d0010	 ldr         r0, [sp, #0x10]
  01434	eb000000	 bl          CeSetThreadPriority
  01438		 |$LN2@InterruptT@2|

; 736  : 
; 737  :     while (!m_fTerminating)

  01438	e59d3024	 ldr         r3, [sp, #0x24]
  0143c	e283302c	 add         r3, r3, #0x2C
  01440	e5933000	 ldr         r3, [r3]
  01444	e3530000	 cmp         r3, #0
  01448	1a000022	 bne         |$LN1@InterruptT@2|

; 738  :     {
; 739  :         DWORD dwWaitObject;
; 740  : 
; 741  :         InterruptDone(m_IntrAudioRx);

  0144c	e59d3024	 ldr         r3, [sp, #0x24]
  01450	e2833028	 add         r3, r3, #0x28
  01454	e5930000	 ldr         r0, [r3]
  01458	eb000000	 bl          InterruptDone

; 742  : 
; 743  :         dwWaitObject = WaitForSingleObject(m_hAudioInterruptRx, INFINITE);

  0145c	e3e01000	 mvn         r1, #0
  01460	e59d3024	 ldr         r3, [sp, #0x24]
  01464	e283303c	 add         r3, r3, #0x3C
  01468	e5930000	 ldr         r0, [r3]
  0146c	eb000000	 bl          WaitForSingleObject
  01470	e58d0014	 str         r0, [sp, #0x14]
  01474	e59d3014	 ldr         r3, [sp, #0x14]
  01478	e58d3000	 str         r3, [sp]

; 744  : 
; 745  :         DEBUGMSG(ZONE_IRQ,(TEXT("WAVE: Rx interrupt\r\n")));

  0147c	e59f3064	 ldr         r3, [pc, #0x64]
  01480	e5933440	 ldr         r3, [r3, #0x440]
  01484	e3130008	 tst         r3, #8
  01488	0a000004	 beq         |$LN10@InterruptT@2|
  0148c	e59f0050	 ldr         r0, [pc, #0x50]
  01490	eb000000	 bl          NKDbgPrintfW
  01494	e3a03001	 mov         r3, #1
  01498	e58d3018	 str         r3, [sp, #0x18]
  0149c	ea000001	 b           |$LN11@InterruptT@2|
  014a0		 |$LN10@InterruptT@2|
  014a0	e3a03000	 mov         r3, #0
  014a4	e58d3018	 str         r3, [sp, #0x18]
  014a8		 |$LN11@InterruptT@2|

; 746  : 
; 747  :         // Grab the lock
; 748  :         Lock();

  014a8	e59d0024	 ldr         r0, [sp, #0x24]
  014ac	eb000000	 bl          |?Lock@HardwareContext@@QAAXXZ|

; 749  : 
; 750  :         // Copy data from DMA buffers
; 751  :         HWTransferInputBuffers();

  014b0	e59d3024	 ldr         r3, [sp, #0x24]
  014b4	e5933000	 ldr         r3, [r3]
  014b8	e2833020	 add         r3, r3, #0x20
  014bc	e59d0024	 ldr         r0, [sp, #0x24]
  014c0	e5933000	 ldr         r3, [r3]
  014c4	e1a0e00f	 mov         lr, pc
  014c8	e12fff13	 bx          r3

; 752  : 
; 753  :         Unlock();

  014cc	e59d0024	 ldr         r0, [sp, #0x24]
  014d0	eb000000	 bl          |?Unlock@HardwareContext@@QAAXXZ|

; 754  :     }

  014d4	eaffffd7	 b           |$LN2@InterruptT@2|
  014d8		 |$LN1@InterruptT@2|
  014d8		 |$LN4@InterruptT@2|

; 755  : }

  014d8	e28dd01c	 add         sp, sp, #0x1C
  014dc	e89d6000	 ldmia       sp, {sp, lr}
  014e0	e12fff1e	 bx          lr
  014e4		 |$LN15@InterruptT@2|
  014e4		 |$LN16@InterruptT@2|
  014e4	00000000	 DCD         |??_C@_1CK@GPBOJGB@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAR?$AAx?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  014e8		 |$LN17@InterruptT@2|
  014e8	00000000	 DCD         |dpCurSettings|
  014ec		 |$LN18@InterruptT@2|
  014ec	00000000	 DCD         |??_C@_1FE@NOGKEDNF@?$AAW?$AAa?$AAv?$AAe?$AAd?$AAe?$AAv?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAA?$AAP?$AAI?$AAR?$AAe?$AAa?$AAd?$AAy?$AA?5@|
  014f0		 |$LN19@InterruptT@2|
  014f0	00000000	 DCD         |??_C@_1FM@DPDDCMKJ@?$AAW?$AAa?$AAv?$AAe?$AAD?$AAe?$AAv?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr@|
  014f4		 |$M37942|

			 ENDP  ; |?InterruptThreadRx@HardwareContext@@QAAXXZ|, HardwareContext::InterruptThreadRx

	EXPORT	|??_C@_1GO@HJKPAJID@?$AAW?$AAa?$AAv?$AAe?$AAD?$AAe?$AAv?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@OPILLPJA@?$AAW?$AAa?$AAv?$AAe?$AAD?$AAe?$AAv?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu@| [ DATA ] ; `string'
	EXPORT	|?TimeoutThread@HardwareContext@@QAAXXZ| ; HardwareContext::TimeoutThread

  000b0			 AREA	 |.pdata|, PDATA
|$T37958| DCD	|$LN13@TimeoutThr|
	DCD	0x40004904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@HJKPAJID@?$AAW?$AAa?$AAv?$AAe?$AAD?$AAe?$AAv?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu@| DCB "W"
	DCB	0x0, "a", 0x0, "v", 0x0, "e", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, ":", 0x0, " ", 0x0, "H", 0x0, "a", 0x0, "r", 0x0, "d"
	DCB	0x0, "w", 0x0, "a", 0x0, "r", 0x0, "e", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o"
	DCB	0x0, "u", 0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, " ", 0x0, "G", 0x0, "o", 0x0, "t"
	DCB	0x0, " ", 0x0, "t", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o"
	DCB	0x0, "u", 0x0, "t", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@OPILLPJA@?$AAW?$AAa?$AAv?$AAe?$AAD?$AAe?$AAv?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu@| DCB "W"
	DCB	0x0, "a", 0x0, "v", 0x0, "e", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, ":", 0x0, " ", 0x0, "H", 0x0, "a", 0x0, "r", 0x0, "d"
	DCB	0x0, "w", 0x0, "a", 0x0, "r", 0x0, "e", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, ":"
	DCB	0x0, ":", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o"
	DCB	0x0, "u", 0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  014f4			 AREA	 |.text|, CODE, ARM

  014f4		 |?TimeoutThread@HardwareContext@@QAAXXZ| PROC ; HardwareContext::TimeoutThread

; 758  : {

  014f4		 |$LN13@TimeoutThr|
  014f4	e1a0c00d	 mov         r12, sp
  014f8	e92d0001	 stmdb       sp!, {r0}
  014fc	e92d5000	 stmdb       sp!, {r12, lr}
  01500	e24dd014	 sub         sp, sp, #0x14
  01504		 |$M37955|

; 759  :     DEBUGMSG(ZONE_AC, 
; 760  :        (TEXT("WaveDev: HardwareContext::TimeoutThread\r\n")));

  01504	e59f3104	 ldr         r3, [pc, #0x104]
  01508	e5933440	 ldr         r3, [r3, #0x440]
  0150c	e3130001	 tst         r3, #1
  01510	0a000004	 beq         |$LN7@TimeoutThr|
  01514	e59f00f8	 ldr         r0, [pc, #0xF8]
  01518	eb000000	 bl          NKDbgPrintfW
  0151c	e3a03001	 mov         r3, #1
  01520	e58d3008	 str         r3, [sp, #8]
  01524	ea000001	 b           |$LN8@TimeoutThr|
  01528		 |$LN7@TimeoutThr|
  01528	e3a03000	 mov         r3, #0
  0152c	e58d3008	 str         r3, [sp, #8]
  01530		 |$LN8@TimeoutThr|

; 761  :     DWORD dwTimeout = m_dwTimeoutTicks;

  01530	e59d301c	 ldr         r3, [sp, #0x1C]
  01534	e283301c	 add         r3, r3, #0x1C
  01538	e5933000	 ldr         r3, [r3]
  0153c	e58d3000	 str         r3, [sp]
  01540		 |$LN4@TimeoutThr|

; 762  :     while (!m_fTerminating) {

  01540	e59d301c	 ldr         r3, [sp, #0x1C]
  01544	e283302c	 add         r3, r3, #0x2C
  01548	e5933000	 ldr         r3, [r3]
  0154c	e3530000	 cmp         r3, #0
  01550	1a00002a	 bne         |$LN3@TimeoutThr|

; 763  :         DWORD dwWaitObject = WaitForSingleObject(m_hTimeoutEvent, dwTimeout);

  01554	e59d1000	 ldr         r1, [sp]
  01558	e59d301c	 ldr         r3, [sp, #0x1C]
  0155c	e2833048	 add         r3, r3, #0x48
  01560	e5930000	 ldr         r0, [r3]
  01564	eb000000	 bl          WaitForSingleObject
  01568	e58d000c	 str         r0, [sp, #0xC]
  0156c	e59d300c	 ldr         r3, [sp, #0xC]
  01570	e58d3004	 str         r3, [sp, #4]

; 764  :         if (dwWaitObject == WAIT_TIMEOUT) { // It is timeout. 

  01574	e59d2004	 ldr         r2, [sp, #4]
  01578	e3a03c01	 mov         r3, #1, 24
  0157c	e3833002	 orr         r3, r3, #2
  01580	e1520003	 cmp         r2, r3
  01584	1a000018	 bne         |$LN2@TimeoutThr|

; 765  : 			DEBUGMSG(ZONE_AC, 
; 766  : 			   (TEXT("WaveDev: HardwareContext::TimeoutThread Got timeout!\r\n")));

  01588	e59f3080	 ldr         r3, [pc, #0x80]
  0158c	e5933440	 ldr         r3, [r3, #0x440]
  01590	e3130001	 tst         r3, #1
  01594	0a000004	 beq         |$LN9@TimeoutThr|
  01598	e59f006c	 ldr         r0, [pc, #0x6C]
  0159c	eb000000	 bl          NKDbgPrintfW
  015a0	e3a03001	 mov         r3, #1
  015a4	e58d3010	 str         r3, [sp, #0x10]
  015a8	ea000001	 b           |$LN10@TimeoutThr|
  015ac		 |$LN9@TimeoutThr|
  015ac	e3a03000	 mov         r3, #0
  015b0	e58d3010	 str         r3, [sp, #0x10]
  015b4		 |$LN10@TimeoutThr|

; 767  :             Lock();

  015b4	e59d001c	 ldr         r0, [sp, #0x1C]
  015b8	eb000000	 bl          |?Lock@HardwareContext@@QAAXXZ|

; 768  :             DelayedUpdate() ;

  015bc	e59d301c	 ldr         r3, [sp, #0x1C]
  015c0	e5933000	 ldr         r3, [r3]
  015c4	e283307c	 add         r3, r3, #0x7C
  015c8	e59d001c	 ldr         r0, [sp, #0x1C]
  015cc	e5933000	 ldr         r3, [r3]
  015d0	e1a0e00f	 mov         lr, pc
  015d4	e12fff13	 bx          r3

; 769  :             Unlock();

  015d8	e59d001c	 ldr         r0, [sp, #0x1C]
  015dc	eb000000	 bl          |?Unlock@HardwareContext@@QAAXXZ|

; 770  :             dwTimeout = INFINITE;

  015e0	e3e03000	 mvn         r3, #0
  015e4	e58d3000	 str         r3, [sp]

; 771  :         }
; 772  :         else

  015e8	ea000003	 b           |$LN1@TimeoutThr|
  015ec		 |$LN2@TimeoutThr|

; 773  :             dwTimeout = m_dwTimeoutTicks;

  015ec	e59d301c	 ldr         r3, [sp, #0x1C]
  015f0	e283301c	 add         r3, r3, #0x1C
  015f4	e5933000	 ldr         r3, [r3]
  015f8	e58d3000	 str         r3, [sp]
  015fc		 |$LN1@TimeoutThr|

; 774  :     }

  015fc	eaffffcf	 b           |$LN4@TimeoutThr|
  01600		 |$LN3@TimeoutThr|

; 775  : }

  01600	e28dd014	 add         sp, sp, #0x14
  01604	e89d6000	 ldmia       sp, {sp, lr}
  01608	e12fff1e	 bx          lr
  0160c		 |$LN14@TimeoutThr|
  0160c		 |$LN15@TimeoutThr|
  0160c	00000000	 DCD         |??_C@_1GO@HJKPAJID@?$AAW?$AAa?$AAv?$AAe?$AAD?$AAe?$AAv?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu@|
  01610		 |$LN16@TimeoutThr|
  01610	00000000	 DCD         |dpCurSettings|
  01614		 |$LN17@TimeoutThr|
  01614	00000000	 DCD         |??_C@_1FE@OPILLPJA@?$AAW?$AAa?$AAv?$AAe?$AAD?$AAe?$AAv?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3?$AA?3?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu@|
  01618		 |$M37956|

			 ENDP  ; |?TimeoutThread@HardwareContext@@QAAXXZ|, HardwareContext::TimeoutThread


  000b8			 AREA	 |.pdata|, PDATA
|$T37967| DCD	|$LN5@CallInterr|
	DCD	0x40000703
; Function compile flags: /Odtp

  01618			 AREA	 |.text|, CODE, ARM

  01618		 |?CallInterruptThreadTx@@YAXPAVHardwareContext@@@Z| PROC ; CallInterruptThreadTx

; 787  : {

  01618		 |$LN5@CallInterr|
  01618	e1a0c00d	 mov         r12, sp
  0161c	e92d0001	 stmdb       sp!, {r0}
  01620	e92d5000	 stmdb       sp!, {r12, lr}
  01624		 |$M37964|

; 788  :     pHWContext->InterruptThreadTx();

  01624	e59d0008	 ldr         r0, [sp, #8]
  01628	eb000000	 bl          |?InterruptThreadTx@HardwareContext@@QAAXXZ|

; 789  : }

  0162c	e89d6000	 ldmia       sp, {sp, lr}
  01630	e12fff1e	 bx          lr
  01634		 |$M37965|

			 ENDP  ; |?CallInterruptThreadTx@@YAXPAVHardwareContext@@@Z|, CallInterruptThreadTx


  000c0			 AREA	 |.pdata|, PDATA
|$T37972| DCD	|$LN5@CallInterr@2|
	DCD	0x40000703
; Function compile flags: /Odtp

  01634			 AREA	 |.text|, CODE, ARM

  01634		 |?CallInterruptThreadRx@@YAXPAVHardwareContext@@@Z| PROC ; CallInterruptThreadRx

; 793  : {

  01634		 |$LN5@CallInterr@2|
  01634	e1a0c00d	 mov         r12, sp
  01638	e92d0001	 stmdb       sp!, {r0}
  0163c	e92d5000	 stmdb       sp!, {r12, lr}
  01640		 |$M37969|

; 794  :     pHWContext->InterruptThreadRx();

  01640	e59d0008	 ldr         r0, [sp, #8]
  01644	eb000000	 bl          |?InterruptThreadRx@HardwareContext@@QAAXXZ|

; 795  : }

  01648	e89d6000	 ldmia       sp, {sp, lr}
  0164c	e12fff1e	 bx          lr
  01650		 |$M37970|

			 ENDP  ; |?CallInterruptThreadRx@@YAXPAVHardwareContext@@@Z|, CallInterruptThreadRx


  000c8			 AREA	 |.pdata|, PDATA
|$T37977| DCD	|$LN5@CallTimeou|
	DCD	0x40000703
; Function compile flags: /Odtp

  01650			 AREA	 |.text|, CODE, ARM

  01650		 |?CallTimeoutThread@@YAXPAVHardwareContext@@@Z| PROC ; CallTimeoutThread

; 798  : {

  01650		 |$LN5@CallTimeou|
  01650	e1a0c00d	 mov         r12, sp
  01654	e92d0001	 stmdb       sp!, {r0}
  01658	e92d5000	 stmdb       sp!, {r12, lr}
  0165c		 |$M37974|

; 799  :     pHWContext->TimeoutThread();

  0165c	e59d0008	 ldr         r0, [sp, #8]
  01660	eb000000	 bl          |?TimeoutThread@HardwareContext@@QAAXXZ|

; 800  : }

  01664	e89d6000	 ldmia       sp, {sp, lr}
  01668	e12fff1e	 bx          lr
  0166c		 |$M37975|

			 ENDP  ; |?CallTimeoutThread@@YAXPAVHardwareContext@@@Z|, CallTimeoutThread

	EXPORT	|?RecalcSpeakerEnable@HardwareContext@@QAAXXZ| ; HardwareContext::RecalcSpeakerEnable

  000d0			 AREA	 |.pdata|, PDATA
|$T37982| DCD	|$LN5@RecalcSpea|
	DCD	0x40000c03
; Function compile flags: /Odtp

  0166c			 AREA	 |.text|, CODE, ARM

  0166c		 |?RecalcSpeakerEnable@HardwareContext@@QAAXXZ| PROC ; HardwareContext::RecalcSpeakerEnable

; 816  : {

  0166c		 |$LN5@RecalcSpea|
  0166c	e1a0c00d	 mov         r12, sp
  01670	e92d0001	 stmdb       sp!, {r0}
  01674	e92d5000	 stmdb       sp!, {r12, lr}
  01678		 |$M37979|

; 817  :     HWUpdateAudioPRC();

  01678	e59d3008	 ldr         r3, [sp, #8]
  0167c	e5933000	 ldr         r3, [r3]
  01680	e2833048	 add         r3, r3, #0x48
  01684	e59d0008	 ldr         r0, [sp, #8]
  01688	e5933000	 ldr         r3, [r3]
  0168c	e1a0e00f	 mov         lr, pc
  01690	e12fff13	 bx          r3

; 818  : }

  01694	e89d6000	 ldmia       sp, {sp, lr}
  01698	e12fff1e	 bx          lr
  0169c		 |$M37980|

			 ENDP  ; |?RecalcSpeakerEnable@HardwareContext@@QAAXXZ|, HardwareContext::RecalcSpeakerEnable

	EXPORT	|??_C@_1DE@JMIIPJLE@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAF?$AAo?$AAr?$AAc?$AAe?$AAS?$AAp?$AAe?$AAa?$AAk?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?ForceSpeaker@HardwareContext@@QAAKH@Z| ; HardwareContext::ForceSpeaker

  000d8			 AREA	 |.pdata|, PDATA
|$T37990| DCD	|$LN12@ForceSpeak|
	DCD	0x40004104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@JMIIPJLE@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAF?$AAo?$AAr?$AAc?$AAe?$AAS?$AAp?$AAe?$AAa?$AAk?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "W"
	DCB	0x0, "A", 0x0, "V", 0x0, "E", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "o", 0x0, "r", 0x0, "c", 0x0, "e", 0x0, "S", 0x0, "p"
	DCB	0x0, "e", 0x0, "a", 0x0, "k", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  0169c			 AREA	 |.text|, CODE, ARM

  0169c		 |?ForceSpeaker@HardwareContext@@QAAKH@Z| PROC ; HardwareContext::ForceSpeaker

; 830  : {

  0169c		 |$LN12@ForceSpeak|
  0169c	e1a0c00d	 mov         r12, sp
  016a0	e92d0003	 stmdb       sp!, {r0, r1}
  016a4	e92d5000	 stmdb       sp!, {r12, lr}
  016a8	e24dd008	 sub         sp, sp, #8
  016ac		 |$M37987|

; 831  :     DEBUGMSG( ZONE_AC, (TEXT("WAVE: ForceSpeaker = %d\r\n"), bForceSpeaker));   

  016ac	e59f30e8	 ldr         r3, [pc, #0xE8]
  016b0	e5933440	 ldr         r3, [r3, #0x440]
  016b4	e3130001	 tst         r3, #1
  016b8	0a000005	 beq         |$LN8@ForceSpeak|
  016bc	e59d1014	 ldr         r1, [sp, #0x14]
  016c0	e59f00d0	 ldr         r0, [pc, #0xD0]
  016c4	eb000000	 bl          NKDbgPrintfW
  016c8	e3a03001	 mov         r3, #1
  016cc	e58d3004	 str         r3, [sp, #4]
  016d0	ea000001	 b           |$LN9@ForceSpeak|
  016d4		 |$LN8@ForceSpeak|
  016d4	e3a03000	 mov         r3, #0
  016d8	e58d3004	 str         r3, [sp, #4]
  016dc		 |$LN9@ForceSpeak|

; 832  : 
; 833  :     // lock is only taken because of ++/-- operators
; 834  :     Lock();

  016dc	e59d0010	 ldr         r0, [sp, #0x10]
  016e0	eb000000	 bl          |?Lock@HardwareContext@@QAAXXZ|

; 835  : 
; 836  :     // If m_NumForcedSpeaker is non-zero, audio should be routed to an
; 837  :     // external speaker (if hw permits).
; 838  :     if (bForceSpeaker)

  016e4	e59d3014	 ldr         r3, [sp, #0x14]
  016e8	e3530000	 cmp         r3, #0
  016ec	0a00000e	 beq         |$LN5@ForceSpeak|

; 839  :     {
; 840  :         m_NumForcedSpeaker++;

  016f0	e59d3010	 ldr         r3, [sp, #0x10]
  016f4	e2833064	 add         r3, r3, #0x64
  016f8	e5933000	 ldr         r3, [r3]
  016fc	e2832001	 add         r2, r3, #1
  01700	e59d3010	 ldr         r3, [sp, #0x10]
  01704	e2833064	 add         r3, r3, #0x64
  01708	e5832000	 str         r2, [r3]

; 841  :         if (m_NumForcedSpeaker==1)

  0170c	e59d3010	 ldr         r3, [sp, #0x10]
  01710	e2833064	 add         r3, r3, #0x64
  01714	e5933000	 ldr         r3, [r3]
  01718	e3530001	 cmp         r3, #1
  0171c	1a000001	 bne         |$LN4@ForceSpeak|

; 842  :         {
; 843  :             RecalcSpeakerEnable();

  01720	e59d0010	 ldr         r0, [sp, #0x10]
  01724	eb000000	 bl          |?RecalcSpeakerEnable@HardwareContext@@QAAXXZ|
  01728		 |$LN4@ForceSpeak|

; 844  :         }
; 845  :     }
; 846  :     else

  01728	ea000012	 b           |$LN3@ForceSpeak|
  0172c		 |$LN5@ForceSpeak|

; 847  :     {
; 848  :         if (m_NumForcedSpeaker > 0)

  0172c	e59d3010	 ldr         r3, [sp, #0x10]
  01730	e2833064	 add         r3, r3, #0x64
  01734	e5933000	 ldr         r3, [r3]
  01738	e3530000	 cmp         r3, #0
  0173c	da00000d	 ble         |$LN2@ForceSpeak|

; 849  :         {
; 850  :             m_NumForcedSpeaker--;

  01740	e59d3010	 ldr         r3, [sp, #0x10]
  01744	e2833064	 add         r3, r3, #0x64
  01748	e5933000	 ldr         r3, [r3]
  0174c	e2432001	 sub         r2, r3, #1
  01750	e59d3010	 ldr         r3, [sp, #0x10]
  01754	e2833064	 add         r3, r3, #0x64
  01758	e5832000	 str         r2, [r3]

; 851  :             if (m_NumForcedSpeaker)

  0175c	e59d3010	 ldr         r3, [sp, #0x10]
  01760	e2833064	 add         r3, r3, #0x64
  01764	e5933000	 ldr         r3, [r3]
  01768	e3530000	 cmp         r3, #0
  0176c	0a000001	 beq         |$LN1@ForceSpeak|

; 852  :             {
; 853  :                 RecalcSpeakerEnable();

  01770	e59d0010	 ldr         r0, [sp, #0x10]
  01774	eb000000	 bl          |?RecalcSpeakerEnable@HardwareContext@@QAAXXZ|
  01778		 |$LN1@ForceSpeak|
  01778		 |$LN2@ForceSpeak|
  01778		 |$LN3@ForceSpeak|

; 854  :             }
; 855  :         }
; 856  :     }   
; 857  : 
; 858  :     Unlock();

  01778	e59d0010	 ldr         r0, [sp, #0x10]
  0177c	eb000000	 bl          |?Unlock@HardwareContext@@QAAXXZ|

; 859  : 
; 860  :     return MMSYSERR_NOERROR;

  01780	e3a03000	 mov         r3, #0
  01784	e58d3000	 str         r3, [sp]

; 861  : }

  01788	e59d0000	 ldr         r0, [sp]
  0178c	e28dd008	 add         sp, sp, #8
  01790	e89d6000	 ldmia       sp, {sp, lr}
  01794	e12fff1e	 bx          lr
  01798		 |$LN13@ForceSpeak|
  01798		 |$LN14@ForceSpeak|
  01798	00000000	 DCD         |??_C@_1DE@JMIIPJLE@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAF?$AAo?$AAr?$AAc?$AAe?$AAS?$AAp?$AAe?$AAa?$AAk?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0179c		 |$LN15@ForceSpeak|
  0179c	00000000	 DCD         |dpCurSettings|
  017a0		 |$M37988|

			 ENDP  ; |?ForceSpeaker@HardwareContext@@QAAKH@Z|, HardwareContext::ForceSpeaker

	EXPORT	|?PowerUp@HardwareContext@@QAAXXZ|	; HardwareContext::PowerUp

  000e0			 AREA	 |.pdata|, PDATA
|$T37998| DCD	|$LN5@PowerUp|
	DCD	0x40000c03
; Function compile flags: /Odtp

  017a0			 AREA	 |.text|, CODE, ARM

  017a0		 |?PowerUp@HardwareContext@@QAAXXZ| PROC ; HardwareContext::PowerUp

; 872  : {

  017a0		 |$LN5@PowerUp|
  017a0	e1a0c00d	 mov         r12, sp
  017a4	e92d0001	 stmdb       sp!, {r0}
  017a8	e92d5000	 stmdb       sp!, {r12, lr}
  017ac		 |$M37995|

; 873  :     HWPowerUp();

  017ac	e59d3008	 ldr         r3, [sp, #8]
  017b0	e5933000	 ldr         r3, [r3]
  017b4	e283304c	 add         r3, r3, #0x4C
  017b8	e59d0008	 ldr         r0, [sp, #8]
  017bc	e5933000	 ldr         r3, [r3]
  017c0	e1a0e00f	 mov         lr, pc
  017c4	e12fff13	 bx          r3

; 874  : }

  017c8	e89d6000	 ldmia       sp, {sp, lr}
  017cc	e12fff1e	 bx          lr
  017d0		 |$M37996|

			 ENDP  ; |?PowerUp@HardwareContext@@QAAXXZ|, HardwareContext::PowerUp

	EXPORT	|?PowerDown@HardwareContext@@QAAXXZ|	; HardwareContext::PowerDown

  000e8			 AREA	 |.pdata|, PDATA
|$T38003| DCD	|$LN5@PowerDown|
	DCD	0x40000c03
; Function compile flags: /Odtp

  017d0			 AREA	 |.text|, CODE, ARM

  017d0		 |?PowerDown@HardwareContext@@QAAXXZ| PROC ; HardwareContext::PowerDown

; 885  : {

  017d0		 |$LN5@PowerDown|
  017d0	e1a0c00d	 mov         r12, sp
  017d4	e92d0001	 stmdb       sp!, {r0}
  017d8	e92d5000	 stmdb       sp!, {r12, lr}
  017dc		 |$M38000|

; 886  :     HWPowerDown();

  017dc	e59d3008	 ldr         r3, [sp, #8]
  017e0	e5933000	 ldr         r3, [r3]
  017e4	e2833050	 add         r3, r3, #0x50
  017e8	e59d0008	 ldr         r0, [sp, #8]
  017ec	e5933000	 ldr         r3, [r3]
  017f0	e1a0e00f	 mov         lr, pc
  017f4	e12fff13	 bx          r3

; 887  : }

  017f8	e89d6000	 ldmia       sp, {sp, lr}
  017fc	e12fff1e	 bx          lr
  01800		 |$M38001|

			 ENDP  ; |?PowerDown@HardwareContext@@QAAXXZ|, HardwareContext::PowerDown

	EXPORT	|??_C@_1FI@LDMCFGNI@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAE?$AAx?$AAt?$AAS?$AAp?$AAe?$AAa?$AAk?$AAe?$AAr?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm?$AAp@| [ DATA ] ; `string'
	EXPORT	|?SetExtSpeakerPower@HardwareContext@@QAAHH@Z| ; HardwareContext::SetExtSpeakerPower

  000f0			 AREA	 |.pdata|, PDATA
|$T38011| DCD	|$LN7@SetExtSpea|
	DCD	0x40001704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@LDMCFGNI@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAE?$AAx?$AAt?$AAS?$AAp?$AAe?$AAa?$AAk?$AAe?$AAr?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm?$AAp@| DCB "W"
	DCB	0x0, "A", 0x0, "V", 0x0, "E", 0x0, ":", 0x0, " ", 0x0, "S"
	DCB	0x0, "e", 0x0, "t", 0x0, "E", 0x0, "x", 0x0, "t", 0x0, "S"
	DCB	0x0, "p", 0x0, "e", 0x0, "a", 0x0, "k", 0x0, "e", 0x0, "r"
	DCB	0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "n", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "i", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "m", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  01800			 AREA	 |.text|, CODE, ARM

  01800		 |?SetExtSpeakerPower@HardwareContext@@QAAHH@Z| PROC ; HardwareContext::SetExtSpeakerPower

; 898  : {

  01800		 |$LN7@SetExtSpea|
  01800	e1a0c00d	 mov         r12, sp
  01804	e92d0003	 stmdb       sp!, {r0, r1}
  01808	e92d5000	 stmdb       sp!, {r12, lr}
  0180c	e24dd008	 sub         sp, sp, #8
  01810		 |$M38008|

; 899  :     DEBUGMSG( ZONE_ERROR, ( TEXT( "WAVE: SetExtSpeakerPower not implemented!\r\n" )));

  01810	e59f3040	 ldr         r3, [pc, #0x40]
  01814	e5933440	 ldr         r3, [r3, #0x440]
  01818	e3130902	 tst         r3, #2, 18
  0181c	0a000004	 beq         |$LN3@SetExtSpea|
  01820	e59f002c	 ldr         r0, [pc, #0x2C]
  01824	eb000000	 bl          NKDbgPrintfW
  01828	e3a03001	 mov         r3, #1
  0182c	e58d3004	 str         r3, [sp, #4]
  01830	ea000001	 b           |$LN4@SetExtSpea|
  01834		 |$LN3@SetExtSpea|
  01834	e3a03000	 mov         r3, #0
  01838	e58d3004	 str         r3, [sp, #4]
  0183c		 |$LN4@SetExtSpea|

; 900  :     return FALSE;

  0183c	e3a03000	 mov         r3, #0
  01840	e58d3000	 str         r3, [sp]

; 901  : }

  01844	e59d0000	 ldr         r0, [sp]
  01848	e28dd008	 add         sp, sp, #8
  0184c	e89d6000	 ldmia       sp, {sp, lr}
  01850	e12fff1e	 bx          lr
  01854		 |$LN8@SetExtSpea|
  01854		 |$LN9@SetExtSpea|
  01854	00000000	 DCD         |??_C@_1FI@LDMCFGNI@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAE?$AAx?$AAt?$AAS?$AAp?$AAe?$AAa?$AAk?$AAe?$AAr?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAm?$AAp@|
  01858		 |$LN10@SetExtSpea|
  01858	00000000	 DCD         |dpCurSettings|
  0185c		 |$M38009|

			 ENDP  ; |?SetExtSpeakerPower@HardwareContext@@QAAHH@Z|, HardwareContext::SetExtSpeakerPower

	EXPORT	|?PrepareForVoiceCall@HardwareContext@@QAAHH@Z| ; HardwareContext::PrepareForVoiceCall

  000f8			 AREA	 |.pdata|, PDATA
|$T38020| DCD	|$LN5@PrepareFor|
	DCD	0x40001304
; Function compile flags: /Odtp

  0185c			 AREA	 |.text|, CODE, ARM

  0185c		 |?PrepareForVoiceCall@HardwareContext@@QAAHH@Z| PROC ; HardwareContext::PrepareForVoiceCall

; 912  : {

  0185c		 |$LN5@PrepareFor|
  0185c	e1a0c00d	 mov         r12, sp
  01860	e92d0003	 stmdb       sp!, {r0, r1}
  01864	e92d5000	 stmdb       sp!, {r12, lr}
  01868	e24dd008	 sub         sp, sp, #8
  0186c		 |$M38017|

; 913  :     return HWEnableNetwork( bInVoiceCall );

  0186c	e59d1014	 ldr         r1, [sp, #0x14]
  01870	e59d3010	 ldr         r3, [sp, #0x10]
  01874	e5933000	 ldr         r3, [r3]
  01878	e2833040	 add         r3, r3, #0x40
  0187c	e59d0010	 ldr         r0, [sp, #0x10]
  01880	e5933000	 ldr         r3, [r3]
  01884	e1a0e00f	 mov         lr, pc
  01888	e12fff13	 bx          r3
  0188c	e58d0004	 str         r0, [sp, #4]
  01890	e59d3004	 ldr         r3, [sp, #4]
  01894	e58d3000	 str         r3, [sp]

; 914  : }

  01898	e59d0000	 ldr         r0, [sp]
  0189c	e28dd008	 add         sp, sp, #8
  018a0	e89d6000	 ldmia       sp, {sp, lr}
  018a4	e12fff1e	 bx          lr
  018a8		 |$M38018|

			 ENDP  ; |?PrepareForVoiceCall@HardwareContext@@QAAHH@Z|, HardwareContext::PrepareForVoiceCall

	EXPORT	|?NotifyHeadsetOn@HardwareContext@@QAAXH@Z| ; HardwareContext::NotifyHeadsetOn

  00100			 AREA	 |.pdata|, PDATA
|$T38025| DCD	|$LN5@NotifyHead|
	DCD	0x40001003
; Function compile flags: /Odtp

  018a8			 AREA	 |.text|, CODE, ARM

  018a8		 |?NotifyHeadsetOn@HardwareContext@@QAAXH@Z| PROC ; HardwareContext::NotifyHeadsetOn

; 926  : {

  018a8		 |$LN5@NotifyHead|
  018a8	e1a0c00d	 mov         r12, sp
  018ac	e92d0003	 stmdb       sp!, {r0, r1}
  018b0	e92d5000	 stmdb       sp!, {r12, lr}
  018b4		 |$M38022|

; 927  :     m_bHeadsetPluggedIn = fHeadset;

  018b4	e59d3008	 ldr         r3, [sp, #8]
  018b8	e28320cc	 add         r2, r3, #0xCC
  018bc	e59d300c	 ldr         r3, [sp, #0xC]
  018c0	e5823000	 str         r3, [r2]

; 928  :     HWUpdateAudioPRC();

  018c4	e59d3008	 ldr         r3, [sp, #8]
  018c8	e5933000	 ldr         r3, [r3]
  018cc	e2833048	 add         r3, r3, #0x48
  018d0	e59d0008	 ldr         r0, [sp, #8]
  018d4	e5933000	 ldr         r3, [r3]
  018d8	e1a0e00f	 mov         lr, pc
  018dc	e12fff13	 bx          r3

; 929  : }

  018e0	e89d6000	 ldmia       sp, {sp, lr}
  018e4	e12fff1e	 bx          lr
  018e8		 |$M38023|

			 ENDP  ; |?NotifyHeadsetOn@HardwareContext@@QAAXH@Z|, HardwareContext::NotifyHeadsetOn

	EXPORT	|?ToggleExtSpeaker@HardwareContext@@QAAXXZ| ; HardwareContext::ToggleExtSpeaker

  00108			 AREA	 |.pdata|, PDATA
|$T38030| DCD	|$LN5@ToggleExtS|
	DCD	0x40001003
; Function compile flags: /Odtp

  018e8			 AREA	 |.text|, CODE, ARM

  018e8		 |?ToggleExtSpeaker@HardwareContext@@QAAXXZ| PROC ; HardwareContext::ToggleExtSpeaker

; 940  : {

  018e8		 |$LN5@ToggleExtS|
  018e8	e1a0c00d	 mov         r12, sp
  018ec	e92d0001	 stmdb       sp!, {r0}
  018f0	e92d5000	 stmdb       sp!, {r12, lr}
  018f4		 |$M38027|

; 941  : 
; 942  :     m_bToggleLoadSpeaker = TRUE; 

  018f4	e59d3008	 ldr         r3, [sp, #8]
  018f8	e28320d0	 add         r2, r3, #0xD0
  018fc	e3a03001	 mov         r3, #1
  01900	e5823000	 str         r3, [r2]

; 943  :     HWUpdateAudioPRC();

  01904	e59d3008	 ldr         r3, [sp, #8]
  01908	e5933000	 ldr         r3, [r3]
  0190c	e2833048	 add         r3, r3, #0x48
  01910	e59d0008	 ldr         r0, [sp, #8]
  01914	e5933000	 ldr         r3, [r3]
  01918	e1a0e00f	 mov         lr, pc
  0191c	e12fff13	 bx          r3

; 944  : }

  01920	e89d6000	 ldmia       sp, {sp, lr}
  01924	e12fff1e	 bx          lr
  01928		 |$M38028|

			 ENDP  ; |?ToggleExtSpeaker@HardwareContext@@QAAXXZ|, HardwareContext::ToggleExtSpeaker

	EXPORT	|?NotifyBtHeadsetOn@HardwareContext@@QAAXK@Z| ; HardwareContext::NotifyBtHeadsetOn

  00110			 AREA	 |.pdata|, PDATA
|$T38035| DCD	|$LN6@NotifyBtHe|
	DCD	0x40002203
; Function compile flags: /Odtp

  01928			 AREA	 |.text|, CODE, ARM

  01928		 |?NotifyBtHeadsetOn@HardwareContext@@QAAXK@Z| PROC ; HardwareContext::NotifyBtHeadsetOn

; 955  : {

  01928		 |$LN6@NotifyBtHe|
  01928	e1a0c00d	 mov         r12, sp
  0192c	e92d0003	 stmdb       sp!, {r0, r1}
  01930	e92d5000	 stmdb       sp!, {r12, lr}
  01934		 |$M38032|

; 956  : 
; 957  :     m_bBtHeadsetSelected = FALSE;

  01934	e59d3008	 ldr         r3, [sp, #8]
  01938	e28320d8	 add         r2, r3, #0xD8
  0193c	e3a03000	 mov         r3, #0
  01940	e5823000	 str         r3, [r2]

; 958  :     m_dwBtAudioRouting = BT_AUDIO_NONE;

  01944	e59d3008	 ldr         r3, [sp, #8]
  01948	e28320dc	 add         r2, r3, #0xDC
  0194c	e3a03000	 mov         r3, #0
  01950	e5823000	 str         r3, [r2]

; 959  : 
; 960  :     dwBtAudioRouting &= (BT_AUDIO_SYSTEM | BT_AUDIO_MODEM);

  01954	e59d300c	 ldr         r3, [sp, #0xC]
  01958	e2033003	 and         r3, r3, #3
  0195c	e58d300c	 str         r3, [sp, #0xC]

; 961  : 
; 962  :     if (dwBtAudioRouting)

  01960	e59d300c	 ldr         r3, [sp, #0xC]
  01964	e3530000	 cmp         r3, #0
  01968	0a000007	 beq         |$LN1@NotifyBtHe|

; 963  :     {
; 964  :         m_bBtHeadsetSelected = TRUE;

  0196c	e59d3008	 ldr         r3, [sp, #8]
  01970	e28320d8	 add         r2, r3, #0xD8
  01974	e3a03001	 mov         r3, #1
  01978	e5823000	 str         r3, [r2]

; 965  :         m_dwBtAudioRouting =  dwBtAudioRouting;

  0197c	e59d3008	 ldr         r3, [sp, #8]
  01980	e28320dc	 add         r2, r3, #0xDC
  01984	e59d300c	 ldr         r3, [sp, #0xC]
  01988	e5823000	 str         r3, [r2]
  0198c		 |$LN1@NotifyBtHe|

; 966  :     }
; 967  : 
; 968  :     HWUpdateAudioPRC();

  0198c	e59d3008	 ldr         r3, [sp, #8]
  01990	e5933000	 ldr         r3, [r3]
  01994	e2833048	 add         r3, r3, #0x48
  01998	e59d0008	 ldr         r0, [sp, #8]
  0199c	e5933000	 ldr         r3, [r3]
  019a0	e1a0e00f	 mov         lr, pc
  019a4	e12fff13	 bx          r3

; 969  : 
; 970  : }

  019a8	e89d6000	 ldmia       sp, {sp, lr}
  019ac	e12fff1e	 bx          lr
  019b0		 |$M38033|

			 ENDP  ; |?NotifyBtHeadsetOn@HardwareContext@@QAAXK@Z|, HardwareContext::NotifyBtHeadsetOn

	END
