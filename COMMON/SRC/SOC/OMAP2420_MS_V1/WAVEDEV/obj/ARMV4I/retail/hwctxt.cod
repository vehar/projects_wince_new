; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\OMAP2420_MS_V1\WAVEDEV\hwctxt.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?g_pHWContext@@3PAVHardwareContext@@A| [ DATA ] ; g_pHWContext

  00000			 AREA	 |.bss|, NOINIT
|?g_pHWContext@@3PAVHardwareContext@@A| % 0x4		; g_pHWContext
	EXPORT	|SetEvent|
	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T37740| DCD	|$LN5@SetEvent|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37737|

; 236  : 	return EventModify(h,EVENT_SET);

  00004	e3a01003	 mov         r1, #3
  00008	eb000000	 bl          EventModify

; 237  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37738|

			 ENDP  ; |SetEvent|

	EXPORT	|GetCurrentThread|

  00000			 AREA	 |.pdata|, PDATA
|$T37749| DCD	|$LN5@GetCurrent|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentThread| PROC

; 351  : _inline HANDLE GetCurrentThread(void) {

  00000		 |$LN5@GetCurrent|
  00000		 |$M37746|

; 352  : 	return ((HANDLE)(SH_CURTHREAD+SYS_HANDLE_BASE));

  00000	e3a00041	 mov         r0, #0x41

; 353  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M37747|

			 ENDP  ; |GetCurrentThread|

	EXPORT	|??0DeviceContext@@QAA@XZ|		; DeviceContext::DeviceContext
	EXPORT	|??_7DeviceContext@@6B@| [ DATA ]	; DeviceContext::`vftable'
	IMPORT	|?IsSupportedFormat@DeviceContext@@UAAHPAUtWAVEFORMATEX@@@Z| ; DeviceContext::IsSupportedFormat
	IMPORT	|_purecall|
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\devctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T37763| DCD	|$LN12@DeviceCont|
	DCD	0x40001000

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7DeviceContext@@6B@| DCD |?IsSupportedFormat@DeviceContext@@UAAHPAUtWAVEFORMATEX@@@Z| ; DeviceContext::`vftable'
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0DeviceContext@@QAA@XZ| PROC	; DeviceContext::DeviceContext

; 32   :     DeviceContext()

  00000		 |$LN12@DeviceCont|
  00000		 |$M37760|
  00000	e59f3034	 ldr         r3, [pc, #0x34]

; 33   :     {
; 34   :         InitializeListHead(&m_StreamList);

  00004	e1a02000	 mov         r2, r0

; 35   :         m_dwGain = 0xFFFF;
; 36   :         m_dwDefaultStreamGain = 0xFFFF;
; 37   :         for (int i=0;i<SECONDARYGAINCLASSMAX;i++)
; 38   :         {
; 39   :             m_dwSecondaryGainLimit[i]=0xFFFF;

  00008	e2801014	 add         r1, r0, #0x14
  0000c	e4823004	 str         r3, [r2], #4
  00010	e3a03cff	 mov         r3, #0xFF, 24
  00014	e38330ff	 orr         r3, r3, #0xFF
  00018	e5802008	 str         r2, [r0, #8]
  0001c	e5802004	 str         r2, [r0, #4]
  00020	e580300c	 str         r3, [r0, #0xC]
  00024	e5803010	 str         r3, [r0, #0x10]
  00028	e2812010	 add         r2, r1, #0x10
  0002c		 |$LN8@DeviceCont|
  0002c	e4813004	 str         r3, [r1], #4
  00030	e1510002	 cmp         r1, r2
  00034	1afffffc	 bne         |$LN8@DeviceCont|

; 40   :         }
; 41   : 
; 42   : #ifdef PROFILE_MIXER
; 43   : 		m_liPCStart.QuadPart = 0;
; 44   : 		m_liPCTotal.QuadPart = 0;
; 45   : 		QueryPerformanceFrequency(&m_liPCFrequency);
; 46   : #endif
; 47   :     }

  00038	e12fff1e	 bx          lr
  0003c		 |$LN13@DeviceCont|
  0003c		 |$LN14@DeviceCont|
  0003c	00000000	 DCD         |??_7DeviceContext@@6B@|
  00040		 |$M37761|

			 ENDP  ; |??0DeviceContext@@QAA@XZ|, DeviceContext::DeviceContext

	EXPORT	|?Lock@HardwareContext@@QAAXXZ|		; HardwareContext::Lock
	IMPORT	|EnterCriticalSection|
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T37773| DCD	|$LN5@Lock|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Lock@HardwareContext@@QAAXXZ| PROC	; HardwareContext::Lock

; 82   :     void Lock()   {EnterCriticalSection(&m_Lock);}

  00000		 |$LN5@Lock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37770|
  00004	e2800004	 add         r0, r0, #4
  00008	eb000000	 bl          EnterCriticalSection
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37771|

			 ENDP  ; |?Lock@HardwareContext@@QAAXXZ|, HardwareContext::Lock

	EXPORT	|?Unlock@HardwareContext@@QAAXXZ|	; HardwareContext::Unlock
	IMPORT	|LeaveCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37781| DCD	|$LN5@Unlock|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Unlock@HardwareContext@@QAAXXZ| PROC	; HardwareContext::Unlock

; 83   :     void Unlock() {LeaveCriticalSection(&m_Lock);}

  00000		 |$LN5@Unlock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37778|
  00004	e2800004	 add         r0, r0, #4
  00008	eb000000	 bl          LeaveCriticalSection
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37779|

			 ENDP  ; |?Unlock@HardwareContext@@QAAXXZ|, HardwareContext::Unlock

	EXPORT	|?OutputBufferCacheFlush@HardwareContext@@IAAXPAEK@Z| ; HardwareContext::OutputBufferCacheFlush
	IMPORT	|CacheRangeFlush|

  00000			 AREA	 |.pdata|, PDATA
|$T37790| DCD	|$LN5@OutputBuff|
	DCD	0x40000801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?OutputBufferCacheFlush@HardwareContext@@IAAXPAEK@Z| PROC ; HardwareContext::OutputBufferCacheFlush

; 293  : {

  00000		 |$LN5@OutputBuff|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37787|
  00004	e1a03002	 mov         r3, r2
  00008	e1a00001	 mov         r0, r1

; 294  : #ifdef MIXER_CACHEDMEM
; 295  :     CacheRangeFlush(pbMem, dwLen, CACHE_SYNC_WRITEBACK);

  0000c	e3a02004	 mov         r2, #4
  00010	e1a01003	 mov         r1, r3
  00014	eb000000	 bl          CacheRangeFlush

; 296  : #endif
; 297  : }

  00018	e49de004	 ldr         lr, [sp], #4
  0001c	e12fff1e	 bx          lr
  00020		 |$M37788|

			 ENDP  ; |?OutputBufferCacheFlush@HardwareContext@@IAAXPAEK@Z|, HardwareContext::OutputBufferCacheFlush

	EXPORT	|?ClearBuffer@StreamContext@@SAXPAE0@Z|	; StreamContext::ClearBuffer
	IMPORT	|memset|
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\strmctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T37800| DCD	|$LN5@ClearBuffe|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ClearBuffer@StreamContext@@SAXPAE0@Z| PROC ; StreamContext::ClearBuffer

; 159  :     static void ClearBuffer(PBYTE pStart, PBYTE pEnd) {memset(pStart,0,pEnd-pStart);}

  00000		 |$LN5@ClearBuffe|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37797|
  00004	e0412000	 sub         r2, r1, r0
  00008	e3a01000	 mov         r1, #0
  0000c	eb000000	 bl          memset
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M37798|

			 ENDP  ; |?ClearBuffer@StreamContext@@SAXPAE0@Z|, StreamContext::ClearBuffer

	EXPORT	|??0InputDeviceContext@@QAA@XZ|		; InputDeviceContext::InputDeviceContext
	EXPORT	|??_7InputDeviceContext@@6B@| [ DATA ]	; InputDeviceContext::`vftable'
	IMPORT	|?GetExtDevCaps@InputDeviceContext@@UAAKPAXK@Z| ; InputDeviceContext::GetExtDevCaps
	IMPORT	|?GetDevCaps@InputDeviceContext@@UAAKPAXK@Z| ; InputDeviceContext::GetDevCaps
	IMPORT	|?StreamReadyToRender@InputDeviceContext@@UAAXPAVStreamContext@@@Z| ; InputDeviceContext::StreamReadyToRender
	IMPORT	|?CreateStream@InputDeviceContext@@UAAPAVStreamContext@@PAUwaveopendesc_tag@@@Z| ; InputDeviceContext::CreateStream

  00000			 AREA	 |.pdata|, PDATA
|$T37821| DCD	|$LN14@InputDevic|
	DCD	0x40001200

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7InputDeviceContext@@6B@| DCD |?IsSupportedFormat@DeviceContext@@UAAHPAUtWAVEFORMATEX@@@Z| ; InputDeviceContext::`vftable'
	DCD	|?GetExtDevCaps@InputDeviceContext@@UAAKPAXK@Z|
	DCD	|?GetDevCaps@InputDeviceContext@@UAAKPAXK@Z|
	DCD	|?StreamReadyToRender@InputDeviceContext@@UAAXPAVStreamContext@@@Z|
	DCD	|?CreateStream@InputDeviceContext@@UAAPAVStreamContext@@PAUwaveopendesc_tag@@@Z|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0InputDeviceContext@@QAA@XZ| PROC	; InputDeviceContext::InputDeviceContext
  00000		 |$LN14@InputDevic|
  00000		 |$M37818|
  00000	e1a02000	 mov         r2, r0
  00004	e2823004	 add         r3, r2, #4
  00008	e5823008	 str         r3, [r2, #8]
  0000c	e5823004	 str         r3, [r2, #4]
  00010	e3a03cff	 mov         r3, #0xFF, 24
  00014	e38330ff	 orr         r3, r3, #0xFF
  00018	e2821014	 add         r1, r2, #0x14
  0001c	e582300c	 str         r3, [r2, #0xC]
  00020	e5823010	 str         r3, [r2, #0x10]
  00024	e2810010	 add         r0, r1, #0x10
  00028		 |$LN10@InputDevic|
  00028	e4813004	 str         r3, [r1], #4
  0002c	e1510000	 cmp         r1, r0
  00030	1afffffc	 bne         |$LN10@InputDevic|
  00034	e59f3008	 ldr         r3, [pc, #8]
  00038	e1a00002	 mov         r0, r2
  0003c	e5823000	 str         r3, [r2]
  00040	e12fff1e	 bx          lr
  00044		 |$LN15@InputDevic|
  00044		 |$LN16@InputDevic|
  00044	00000000	 DCD         |??_7InputDeviceContext@@6B@|
  00048		 |$M37819|

			 ENDP  ; |??0InputDeviceContext@@QAA@XZ|, InputDeviceContext::InputDeviceContext

	EXPORT	|??0OutputDeviceContext@@QAA@XZ|	; OutputDeviceContext::OutputDeviceContext
	EXPORT	|??_7OutputDeviceContext@@6B@| [ DATA ]	; OutputDeviceContext::`vftable'
	IMPORT	|?IsSupportedFormat@OutputDeviceContext@@UAAHPAUtWAVEFORMATEX@@@Z| ; OutputDeviceContext::IsSupportedFormat
	IMPORT	|?GetExtDevCaps@OutputDeviceContext@@UAAKPAXK@Z| ; OutputDeviceContext::GetExtDevCaps
	IMPORT	|?GetDevCaps@OutputDeviceContext@@UAAKPAXK@Z| ; OutputDeviceContext::GetDevCaps
	IMPORT	|?StreamReadyToRender@OutputDeviceContext@@UAAXPAVStreamContext@@@Z| ; OutputDeviceContext::StreamReadyToRender
	IMPORT	|?CreateStream@OutputDeviceContext@@UAAPAVStreamContext@@PAUwaveopendesc_tag@@@Z| ; OutputDeviceContext::CreateStream

  00000			 AREA	 |.pdata|, PDATA
|$T37844| DCD	|$LN14@OutputDevi|
	DCD	0x40001200

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7OutputDeviceContext@@6B@| DCD |?IsSupportedFormat@OutputDeviceContext@@UAAHPAUtWAVEFORMATEX@@@Z| ; OutputDeviceContext::`vftable'
	DCD	|?GetExtDevCaps@OutputDeviceContext@@UAAKPAXK@Z|
	DCD	|?GetDevCaps@OutputDeviceContext@@UAAKPAXK@Z|
	DCD	|?StreamReadyToRender@OutputDeviceContext@@UAAXPAVStreamContext@@@Z|
	DCD	|?CreateStream@OutputDeviceContext@@UAAPAVStreamContext@@PAUwaveopendesc_tag@@@Z|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0OutputDeviceContext@@QAA@XZ| PROC	; OutputDeviceContext::OutputDeviceContext
  00000		 |$LN14@OutputDevi|
  00000		 |$M37841|
  00000	e1a02000	 mov         r2, r0
  00004	e2823004	 add         r3, r2, #4
  00008	e5823008	 str         r3, [r2, #8]
  0000c	e5823004	 str         r3, [r2, #4]
  00010	e3a03cff	 mov         r3, #0xFF, 24
  00014	e38330ff	 orr         r3, r3, #0xFF
  00018	e2821014	 add         r1, r2, #0x14
  0001c	e582300c	 str         r3, [r2, #0xC]
  00020	e5823010	 str         r3, [r2, #0x10]
  00024	e2810010	 add         r0, r1, #0x10
  00028		 |$LN10@OutputDevi|
  00028	e4813004	 str         r3, [r1], #4
  0002c	e1510000	 cmp         r1, r0
  00030	1afffffc	 bne         |$LN10@OutputDevi|
  00034	e59f3008	 ldr         r3, [pc, #8]
  00038	e1a00002	 mov         r0, r2
  0003c	e5823000	 str         r3, [r2]
  00040	e12fff1e	 bx          lr
  00044		 |$LN15@OutputDevi|
  00044		 |$LN16@OutputDevi|
  00044	00000000	 DCD         |??_7OutputDeviceContext@@6B@|
  00048		 |$M37842|

			 ENDP  ; |??0OutputDeviceContext@@QAA@XZ|, OutputDeviceContext::OutputDeviceContext

	EXPORT	|?TerminateCloseThread@HardwareContext@@IAAXPAX@Z| ; HardwareContext::TerminateCloseThread
	IMPORT	|CloseHandle|
	IMPORT	|TerminateThread|
	IMPORT	|WaitForSingleObject|
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T37854| DCD	|$LN7@TerminateC|
	DCD	0x40000e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?TerminateCloseThread@HardwareContext@@IAAXPAX@Z| PROC ; HardwareContext::TerminateCloseThread

; 110  : {

  00000		 |$LN7@TerminateC|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37851|
  00004	e1b04001	 movs        r4, r1

; 111  :     if (hThread) {

  00008	0a000008	 beq         |$LN2@TerminateC|

; 112  :         if( ::WaitForSingleObject( hThread, 0 ) != WAIT_OBJECT_0 ) // Can't terminate. Force it.

  0000c	e3a01000	 mov         r1, #0
  00010	e1a00004	 mov         r0, r4
  00014	eb000000	 bl          WaitForSingleObject
  00018	e3500000	 cmp         r0, #0

; 113  :             ::TerminateThread( hThread, ( DWORD ) - 1 ) ;

  0001c	13e01000	 mvnne       r1, #0
  00020	11a00004	 movne       r0, r4
  00024	1b000000	 blne        TerminateThread

; 114  :         ::CloseHandle( hThread );

  00028	e1a00004	 mov         r0, r4
  0002c	eb000000	 bl          CloseHandle
  00030		 |$LN2@TerminateC|

; 115  :     }
; 116  : }

  00030	e8bd4010	 ldmia       sp!, {r4, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M37852|

			 ENDP  ; |?TerminateCloseThread@HardwareContext@@IAAXPAX@Z|, HardwareContext::TerminateCloseThread

	EXPORT	|?InitMemories@HardwareContext@@IAAHXZ|	; HardwareContext::InitMemories

  00000			 AREA	 |.pdata|, PDATA
|$T37868| DCD	|$LN13@InitMemori|
	DCD	0x40002a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InitMemories@HardwareContext@@IAAHXZ| PROC ; HardwareContext::InitMemories

; 185  : {

  00000		 |$LN13@InitMemori|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37865|
  00004	e1a05000	 mov         r5, r0

; 186  :     PBYTE pbDMABufIn, pbDMABufOut;
; 187  : 
; 188  :     if (!HWMapControllerRegs ())

  00008	e5953000	 ldr         r3, [r5]
  0000c	e5933030	 ldr         r3, [r3, #0x30]
  00010	e1a0e00f	 mov         lr, pc
  00014	e12fff13	 bx          r3
  00018	e3500000	 cmp         r0, #0
  0001c	0a00001e	 beq         |$ErrExit$37369|

; 189  :     {
; 190  :         goto ErrExit;
; 191  :     }
; 192  : 
; 193  :     if (HWMapDMAMemory(AUDIO_DMA_PAGE_SIZE*AUDIO_DMA_PAGES*2))

  00020	e5953000	 ldr         r3, [r5]
  00024	e3a01902	 mov         r1, #2, 18
  00028	e1a00005	 mov         r0, r5
  0002c	e5933004	 ldr         r3, [r3, #4]
  00030	e1a0e00f	 mov         lr, pc
  00034	e12fff13	 bx          r3
  00038	e3500000	 cmp         r0, #0
  0003c	0a000016	 beq         |$ErrExit$37369|

; 194  :     {
; 195  :         pbDMABufIn  = HWDMAMemoryIn(); 

  00040	e5953000	 ldr         r3, [r5]
  00044	e1a00005	 mov         r0, r5
  00048	e5933028	 ldr         r3, [r3, #0x28]
  0004c	e1a0e00f	 mov         lr, pc
  00050	e12fff13	 bx          r3

; 196  :         pbDMABufOut = HWDMAMemoryOut();

  00054	e5953000	 ldr         r3, [r5]
  00058	e1a04000	 mov         r4, r0
  0005c	e1a00005	 mov         r0, r5
  00060	e593302c	 ldr         r3, [r3, #0x2C]
  00064	e1a0e00f	 mov         lr, pc
  00068	e12fff13	 bx          r3
  0006c	e2843901	 add         r3, r4, #1, 18
  00070	e3a02002	 mov         r2, #2
  00074		 |$LL3@InitMemori|

; 197  : 
; 198  :         // Save pointers to the virtual addresses so the driver can access them
; 199  :         for (int i=0; i<AUDIO_DMA_PAGES; i++)
; 200  :         {
; 201  :             m_Output_pbDMA_PAGES[i] = pbDMABufOut + AUDIO_DMA_PAGE_SIZE*i;

  00074	e58500c0	 str         r0, [r5, #0xC0]

; 202  :             m_Input_pbDMA_PAGES[i]  = pbDMABufIn + ((AUDIO_DMA_PAGES+i)*AUDIO_DMA_PAGE_SIZE);

  00078	e58530b8	 str         r3, [r5, #0xB8]
  0007c	e2800a02	 add         r0, r0, #2, 20
  00080	e2833a02	 add         r3, r3, #2, 20
  00084	e2855004	 add         r5, r5, #4
  00088	e2522001	 subs        r2, r2, #1
  0008c	1afffff8	 bne         |$LL3@InitMemori|

; 203  :         }
; 204  : 
; 205  :         return TRUE;

  00090	e3a00001	 mov         r0, #1

; 212  : 
; 213  : }

  00094	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00098	e12fff1e	 bx          lr
  0009c		 |$ErrExit$37369|

; 206  : 
; 207  :     }
; 208  : 
; 209  : ErrExit:
; 210  : 
; 211  :     return FALSE;

  0009c	e3a00000	 mov         r0, #0

; 212  : 
; 213  : }

  000a0	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000a4	e12fff1e	 bx          lr
  000a8		 |$M37866|

			 ENDP  ; |?InitMemories@HardwareContext@@IAAHXZ|, HardwareContext::InitMemories

	EXPORT	|?InitDMA@HardwareContext@@IAAXXZ|	; HardwareContext::InitDMA

  00000			 AREA	 |.pdata|, PDATA
|$T37876| DCD	|$LN5@InitDMA|
	DCD	0x40000d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InitDMA@HardwareContext@@IAAXXZ| PROC ; HardwareContext::InitDMA

; 224  : {

  00000		 |$LN5@InitDMA|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37873|
  00004	e1a04000	 mov         r4, r0

; 225  :     HWInitInputDMA();

  00008	e5943000	 ldr         r3, [r4]
  0000c	e5933008	 ldr         r3, [r3, #8]
  00010	e1a0e00f	 mov         lr, pc
  00014	e12fff13	 bx          r3

; 226  :     HWInitOutputDMA();

  00018	e5943000	 ldr         r3, [r4]
  0001c	e1a00004	 mov         r0, r4
  00020	e593300c	 ldr         r3, [r3, #0xC]
  00024	e1a0e00f	 mov         lr, pc
  00028	e12fff13	 bx          r3

; 227  : }

  0002c	e8bd4010	 ldmia       sp!, {r4, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$M37874|

			 ENDP  ; |?InitDMA@HardwareContext@@IAAXXZ|, HardwareContext::InitDMA

	EXPORT	|?InitController@HardwareContext@@IAAXXZ| ; HardwareContext::InitController

  00000			 AREA	 |.pdata|, PDATA
|$T37884| DCD	|$LN5@InitContro|
	DCD	0x40000d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InitController@HardwareContext@@IAAXXZ| PROC ; HardwareContext::InitController

; 238  : {

  00000		 |$LN5@InitContro|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37881|
  00004	e1a04000	 mov         r4, r0

; 239  :     HWInitController();

  00008	e5943000	 ldr         r3, [r4]
  0000c	e5933034	 ldr         r3, [r3, #0x34]
  00010	e1a0e00f	 mov         lr, pc
  00014	e12fff13	 bx          r3

; 240  :     HWInitNetwork();

  00018	e5943000	 ldr         r3, [r4]
  0001c	e1a00004	 mov         r0, r4
  00020	e593303c	 ldr         r3, [r3, #0x3C]
  00024	e1a0e00f	 mov         lr, pc
  00028	e12fff13	 bx          r3

; 241  : }

  0002c	e8bd4010	 ldmia       sp!, {r4, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$M37882|

			 ENDP  ; |?InitController@HardwareContext@@IAAXXZ|, HardwareContext::InitController

	EXPORT	|?InitCodec@HardwareContext@@IAAXXZ|	; HardwareContext::InitCodec

  00000			 AREA	 |.pdata|, PDATA
|$T37892| DCD	|$LN5@InitCodec|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InitCodec@HardwareContext@@IAAXXZ| PROC ; HardwareContext::InitCodec

; 252  : {

  00000		 |$LN5@InitCodec|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37889|

; 253  :     HWInitCodec();

  00004	e5903000	 ldr         r3, [r0]
  00008	e5933038	 ldr         r3, [r3, #0x38]
  0000c	e1a0e00f	 mov         lr, pc
  00010	e12fff13	 bx          r3

; 254  : }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M37890|

			 ENDP  ; |?InitCodec@HardwareContext@@IAAXXZ|, HardwareContext::InitCodec

	EXPORT	|?StopOutputDMA@HardwareContext@@QAAXXZ| ; HardwareContext::StopOutputDMA

  00000			 AREA	 |.pdata|, PDATA
|$T37900| DCD	|$LN7@StopOutput|
	DCD	0x40001701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?StopOutputDMA@HardwareContext@@QAAXXZ| PROC ; HardwareContext::StopOutputDMA

; 300  : {

  00000		 |$LN7@StopOutput|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37897|
  00004	e1a04000	 mov         r4, r0

; 301  :     if (m_OutputDMARunning)

  00008	e594306c	 ldr         r3, [r4, #0x6C]
  0000c	e3530000	 cmp         r3, #0
  00010	0a00000f	 beq         |$LN1@StopOutput|

; 302  :     {
; 303  :         m_OutputDMARunning=FALSE;
; 304  :         HWStopOutputDMA();

  00014	e5943000	 ldr         r3, [r4]
  00018	e3a05000	 mov         r5, #0
  0001c	e584506c	 str         r5, [r4, #0x6C]
  00020	e5933014	 ldr         r3, [r3, #0x14]
  00024	e1a0e00f	 mov         lr, pc
  00028	e12fff13	 bx          r3

; 305  : 
; 306  :         if (!m_InputDMARunning && !m_OutputDMARunning)

  0002c	e5943068	 ldr         r3, [r4, #0x68]
  00030	e3530000	 cmp         r3, #0
  00034	0594306c	 ldreq       r3, [r4, #0x6C]
  00038	03530000	 cmpeq       r3, #0

; 307  :         {
; 308  :             // Take care of power management.
; 309  :             m_bDMARunning = FALSE;
; 310  :             SetupDelayUpdate ();

  0003c	05943000	 ldreq       r3, [r4]
  00040	01a00004	 moveq       r0, r4
  00044	058450c8	 streq       r5, [r4, #0xC8]
  00048	05933078	 ldreq       r3, [r3, #0x78]
  0004c	01a0e00f	 moveq       lr, pc
  00050	012fff13	 bxeq        r3
  00054		 |$LN1@StopOutput|

; 311  :         }
; 312  :     }
; 313  : }

  00054	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00058	e12fff1e	 bx          lr
  0005c		 |$M37898|

			 ENDP  ; |?StopOutputDMA@HardwareContext@@QAAXXZ|, HardwareContext::StopOutputDMA

	EXPORT	|?StartInputDMA@HardwareContext@@QAAXXZ| ; HardwareContext::StartInputDMA

  00000			 AREA	 |.pdata|, PDATA
|$T37908| DCD	|$LN6@StartInput|
	DCD	0x40001901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?StartInputDMA@HardwareContext@@QAAXXZ| PROC ; HardwareContext::StartInputDMA

; 323  : {

  00000		 |$LN6@StartInput|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37905|
  00004	e1a04000	 mov         r4, r0

; 324  :     if (!m_InputDMARunning)

  00008	e5943068	 ldr         r3, [r4, #0x68]
  0000c	e3530000	 cmp         r3, #0
  00010	1a000011	 bne         |$LN1@StartInput|

; 325  :     {
; 326  : #ifdef INPUT_CACHEDMEM
; 327  :         InputBufferCacheDiscard( m_Input_pbDMA_PAGES[0],AUDIO_DMA_PAGE_SIZE*2);
; 328  : #endif
; 329  :         m_InputDMARunning=TRUE;
; 330  : 
; 331  :         m_bDMARunning = TRUE;
; 332  :         HWUpdateAudioPRC ();

  00014	e5943000	 ldr         r3, [r4]
  00018	e3a02001	 mov         r2, #1
  0001c	e5842068	 str         r2, [r4, #0x68]
  00020	e5933048	 ldr         r3, [r3, #0x48]
  00024	e58420c8	 str         r2, [r4, #0xC8]
  00028	e1a0e00f	 mov         lr, pc
  0002c	e12fff13	 bx          r3

; 333  :         
; 334  :         // Turn on the recording path.
; 335  :         SetRecordMemoPath (TRUE);

  00030	e5943000	 ldr         r3, [r4]
  00034	e3a01001	 mov         r1, #1
  00038	e1a00004	 mov         r0, r4
  0003c	e5933068	 ldr         r3, [r3, #0x68]
  00040	e1a0e00f	 mov         lr, pc
  00044	e12fff13	 bx          r3

; 336  : 
; 337  :         HWStartInputDMA();

  00048	e5943000	 ldr         r3, [r4]
  0004c	e1a00004	 mov         r0, r4
  00050	e5933018	 ldr         r3, [r3, #0x18]
  00054	e1a0e00f	 mov         lr, pc
  00058	e12fff13	 bx          r3
  0005c		 |$LN1@StartInput|

; 338  :     }
; 339  : }

  0005c	e8bd4010	 ldmia       sp!, {r4, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M37906|

			 ENDP  ; |?StartInputDMA@HardwareContext@@QAAXXZ|, HardwareContext::StartInputDMA

	EXPORT	|?StopInputDMA@HardwareContext@@QAAXXZ|	; HardwareContext::StopInputDMA

  00000			 AREA	 |.pdata|, PDATA
|$T37916| DCD	|$LN7@StopInputD|
	DCD	0x40001d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?StopInputDMA@HardwareContext@@QAAXXZ| PROC ; HardwareContext::StopInputDMA

; 350  : {

  00000		 |$LN7@StopInputD|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37913|
  00004	e1a04000	 mov         r4, r0

; 351  :     if (m_InputDMARunning)

  00008	e5943068	 ldr         r3, [r4, #0x68]
  0000c	e3530000	 cmp         r3, #0
  00010	0a000015	 beq         |$LN1@StopInputD|

; 352  :     {
; 353  :         m_InputDMARunning=FALSE;
; 354  :         
; 355  :         HWStopInputDMA();

  00014	e5943000	 ldr         r3, [r4]
  00018	e3a05000	 mov         r5, #0
  0001c	e5845068	 str         r5, [r4, #0x68]
  00020	e593301c	 ldr         r3, [r3, #0x1C]
  00024	e1a0e00f	 mov         lr, pc
  00028	e12fff13	 bx          r3

; 356  : 
; 357  :         // Turn off the recording path.
; 358  :         SetRecordMemoPath (FALSE);

  0002c	e5943000	 ldr         r3, [r4]
  00030	e3a01000	 mov         r1, #0
  00034	e1a00004	 mov         r0, r4
  00038	e5933068	 ldr         r3, [r3, #0x68]
  0003c	e1a0e00f	 mov         lr, pc
  00040	e12fff13	 bx          r3

; 359  : 
; 360  :         if (!m_InputDMARunning && !m_OutputDMARunning)

  00044	e5943068	 ldr         r3, [r4, #0x68]
  00048	e3530000	 cmp         r3, #0
  0004c	0594306c	 ldreq       r3, [r4, #0x6C]
  00050	03530000	 cmpeq       r3, #0

; 361  :         {
; 362  :             // Take care of power management.
; 363  :             m_bDMARunning = FALSE;
; 364  :             SetupDelayUpdate ();

  00054	05943000	 ldreq       r3, [r4]
  00058	01a00004	 moveq       r0, r4
  0005c	058450c8	 streq       r5, [r4, #0xC8]
  00060	05933078	 ldreq       r3, [r3, #0x78]
  00064	01a0e00f	 moveq       lr, pc
  00068	012fff13	 bxeq        r3
  0006c		 |$LN1@StopInputD|

; 365  :         }
; 366  :     }
; 367  : }

  0006c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$M37914|

			 ENDP  ; |?StopInputDMA@HardwareContext@@QAAXXZ|, HardwareContext::StopInputDMA

	EXPORT	|?SetupDelayUpdate@HardwareContext@@MAAXXZ| ; HardwareContext::SetupDelayUpdate
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T37928| DCD	|$LN7@SetupDelay|
	DCD	0x40000601
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetupDelayUpdate@HardwareContext@@MAAXXZ| PROC ; HardwareContext::SetupDelayUpdate

; 370  : {

  00000		 |$LN7@SetupDelay|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37925|

; 371  :     SetEvent(m_hTimeoutEvent);

  00004	e5900048	 ldr         r0, [r0, #0x48]
  00008	e3a01003	 mov         r1, #3
  0000c	eb000000	 bl          EventModify

; 372  : }

  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M37926|

			 ENDP  ; |?SetupDelayUpdate@HardwareContext@@MAAXXZ|, HardwareContext::SetupDelayUpdate

	EXPORT	|?DelayedUpdate@HardwareContext@@MAAXXZ| ; HardwareContext::DelayedUpdate

  00000			 AREA	 |.pdata|, PDATA
|$T37936| DCD	|$LN5@DelayedUpd|
	DCD	0x40000801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DelayedUpdate@HardwareContext@@MAAXXZ| PROC ; HardwareContext::DelayedUpdate

; 374  : {

  00000		 |$LN5@DelayedUpd|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37933|

; 375  :     HWAudioPowerTimeout(TRUE); // Timeout.

  00004	e5903000	 ldr         r3, [r0]
  00008	e3a01001	 mov         r1, #1
  0000c	e5933044	 ldr         r3, [r3, #0x44]
  00010	e1a0e00f	 mov         lr, pc
  00014	e12fff13	 bx          r3

; 376  : }

  00018	e49de004	 ldr         lr, [sp], #4
  0001c	e12fff1e	 bx          lr
  00020		 |$M37934|

			 ENDP  ; |?DelayedUpdate@HardwareContext@@MAAXXZ|, HardwareContext::DelayedUpdate

	EXPORT	|?GetRegistryValue@HardwareContext@@IAAXXZ| ; HardwareContext::GetRegistryValue
	EXPORT	|??_C@_1BI@BHLBGEOK@?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@FOKFACOC@?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAD?$AAe?$AAl?$AAa?$AAy?$AAT?$AAi?$AAc?$AAk?$AAs?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|RegCloseKey|
	IMPORT	|RegQueryValueExW|
	IMPORT	|OpenDeviceKey|

  00000			 AREA	 |.pdata|, PDATA
|$T37945| DCD	|$LN7@GetRegistr|
	DCD	0x40002c02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@BHLBGEOK@?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@| DCB "P"
	DCB	0x0, "r", 0x0, "i", 0x0, "o", 0x0, "r", 0x0, "i", 0x0, "t"
	DCB	0x0, "y", 0x0, "2", 0x0, "5", 0x0, "6", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@FOKFACOC@?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAD?$AAe?$AAl?$AAa?$AAy?$AAT?$AAi?$AAc?$AAk?$AAs?$AA?$AA@| DCB "S"
	DCB	0x0, "u", 0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d"
	DCB	0x0, "D", 0x0, "e", 0x0, "l", 0x0, "a", 0x0, "y", 0x0, "T"
	DCB	0x0, "i", 0x0, "c", 0x0, "k", 0x0, "s", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetRegistryValue@HardwareContext@@IAAXXZ| PROC ; HardwareContext::GetRegistryValue

; 388  : {

  00000		 |$LN7@GetRegistr|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd010	 sub         sp, sp, #0x10
  00008		 |$M37942|
  00008	e1a05000	 mov         r5, r0

; 389  :     HKEY hDevKey;
; 390  :     m_dwPriority256 = 210; // Default priority
; 391  :     m_dwTimeoutTicks = 1000;    // 1 second.
; 392  :     hDevKey = OpenDeviceKey((LPWSTR)m_DriverIndex);

  0000c	e5950058	 ldr         r0, [r5, #0x58]
  00010	e3a030d2	 mov         r3, #0xD2
  00014	e3a02ffa	 mov         r2, #0xFA, 30
  00018	e5853018	 str         r3, [r5, #0x18]
  0001c	e585201c	 str         r2, [r5, #0x1C]
  00020	eb000000	 bl          OpenDeviceKey
  00024	e1b06000	 movs        r6, r0

; 393  :     if (hDevKey)

  00028	0a00001b	 beq         |$LN2@GetRegistr|

; 394  :     {
; 395  :         DWORD dwValType;
; 396  :         DWORD dwValLen;
; 397  :         dwValLen = sizeof(DWORD);
; 398  :         RegQueryValueEx(
; 399  :                        hDevKey,
; 400  :                        TEXT("Priority256"),
; 401  :                        NULL,
; 402  :                        &dwValType,
; 403  :                        (PUCHAR)&m_dwPriority256,
; 404  :                        &dwValLen);

  0002c	e59f1078	 ldr         r1, [pc, #0x78]
  00030	e3a07004	 mov         r7, #4
  00034	e28de008	 add         lr, sp, #8
  00038	e2854018	 add         r4, r5, #0x18
  0003c	e28d300c	 add         r3, sp, #0xC
  00040	e3a02000	 mov         r2, #0
  00044	e1a00006	 mov         r0, r6
  00048	e58d7008	 str         r7, [sp, #8]
  0004c	e58de004	 str         lr, [sp, #4]
  00050	e58d4000	 str         r4, [sp]
  00054	eb000000	 bl          RegQueryValueExW

; 405  :         
; 406  :         dwValLen = sizeof(DWORD);
; 407  :         RegQueryValueEx(
; 408  :                        hDevKey,
; 409  :                        TEXT("SuspendDelayTicks"),
; 410  :                        NULL,
; 411  :                        &dwValType,
; 412  :                        (PUCHAR)&m_dwTimeoutTicks,
; 413  :                        &dwValLen);

  00058	e59f1048	 ldr         r1, [pc, #0x48]
  0005c	e28de008	 add         lr, sp, #8
  00060	e3a07004	 mov         r7, #4
  00064	e285401c	 add         r4, r5, #0x1C
  00068	e28d300c	 add         r3, sp, #0xC
  0006c	e3a02000	 mov         r2, #0
  00070	e1a00006	 mov         r0, r6
  00074	e58de004	 str         lr, [sp, #4]
  00078	e58d7008	 str         r7, [sp, #8]
  0007c	e58d4000	 str         r4, [sp]
  00080	eb000000	 bl          RegQueryValueExW

; 414  :         if (m_dwTimeoutTicks == 0 )

  00084	e595301c	 ldr         r3, [r5, #0x1C]

; 415  :             m_dwTimeoutTicks = INFINITE;
; 416  :         
; 417  :         RegCloseKey(hDevKey);

  00088	e1a00006	 mov         r0, r6
  0008c	e3530000	 cmp         r3, #0
  00090	03e03000	 mvneq       r3, #0
  00094	0585301c	 streq       r3, [r5, #0x1C]
  00098	eb000000	 bl          RegCloseKey
  0009c		 |$LN2@GetRegistr|

; 418  :     }
; 419  : 
; 420  : }

  0009c	e28dd010	 add         sp, sp, #0x10
  000a0	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000a4	e12fff1e	 bx          lr
  000a8		 |$LN8@GetRegistr|
  000a8		 |$LN9@GetRegistr|
  000a8	00000000	 DCD         |??_C@_1CE@FOKFACOC@?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAD?$AAe?$AAl?$AAa?$AAy?$AAT?$AAi?$AAc?$AAk?$AAs?$AA?$AA@|
  000ac		 |$LN10@GetRegistr|
  000ac	00000000	 DCD         |??_C@_1BI@BHLBGEOK@?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@|
  000b0		 |$M37943|

			 ENDP  ; |?GetRegistryValue@HardwareContext@@IAAXXZ|, HardwareContext::GetRegistryValue

	EXPORT	|?MapIrqToSysIntr@HardwareContext@@IAAKK@Z| ; HardwareContext::MapIrqToSysIntr
	IMPORT	|KernelIoControl|

  00000			 AREA	 |.pdata|, PDATA
|$T37959| DCD	|$LN7@MapIrqToSy|
	DCD	0x40001604
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?MapIrqToSysIntr@HardwareContext@@IAAKK@Z| PROC ; HardwareContext::MapIrqToSysIntr

; 431  : {

  00000		 |$LN7@MapIrqToSy|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M37956|

; 432  :     DWORD dwSysIntr = SYSINTR_UNDEFINED;
; 433  :     if (!KernelIoControl(
; 434  :             IOCTL_HAL_REQUEST_SYSINTR, 
; 435  :             &irq, 
; 436  :             sizeof(irq), 
; 437  :             &dwSysIntr,
; 438  :             sizeof(dwSysIntr),
; 439  :             NULL)) 

  00010	e59f003c	 ldr         r0, [pc, #0x3C]
  00014	e3a0e000	 mov         lr, #0
  00018	e3a05004	 mov         r5, #4
  0001c	e3e04000	 mvn         r4, #0
  00020	e28d3008	 add         r3, sp, #8
  00024	e3a02004	 mov         r2, #4
  00028	e28d1020	 add         r1, sp, #0x20
  0002c	e58d4008	 str         r4, [sp, #8]
  00030	e58de004	 str         lr, [sp, #4]
  00034	e58d5000	 str         r5, [sp]
  00038	eb000000	 bl          KernelIoControl
  0003c	e3500000	 cmp         r0, #0

; 440  :     {
; 441  :         DEBUGMSG(ZONE_ERROR, 
; 442  :             (TEXT("WaveDev: IRQ -> SYSINTR translation failed\r\n")));
; 443  :         dwSysIntr = SYSINTR_UNDEFINED;

  00040	159d4008	 ldrne       r4, [sp, #8]

; 444  :     }
; 445  : 
; 446  :     return dwSysIntr;
; 447  : }

  00044	e1a00004	 mov         r0, r4
  00048	e28dd00c	 add         sp, sp, #0xC
  0004c	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$LN8@MapIrqToSy|
  00054		 |$LN9@MapIrqToSy|
  00054	01010098	 DCD         0x1010098
  00058		 |$M37957|

			 ENDP  ; |?MapIrqToSysIntr@HardwareContext@@IAAKK@Z|, HardwareContext::MapIrqToSysIntr

	EXPORT	|?Deinit@HardwareContext@@QAAHXZ|	; HardwareContext::Deinit

  00000			 AREA	 |.pdata|, PDATA
|$T37971| DCD	|$LN5@Deinit|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Deinit@HardwareContext@@QAAHXZ| PROC	; HardwareContext::Deinit

; 513  : {

  00000		 |$LN5@Deinit|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37968|

; 514  :     return HWDeinit();

  00004	e5903000	 ldr         r3, [r0]
  00008	e5933054	 ldr         r3, [r3, #0x54]
  0000c	e1a0e00f	 mov         lr, pc
  00010	e12fff13	 bx          r3

; 515  : }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M37969|

			 ENDP  ; |?Deinit@HardwareContext@@QAAHXZ|, HardwareContext::Deinit

	EXPORT	|?TransferInputBuffer@HardwareContext@@QAAKK@Z| ; HardwareContext::TransferInputBuffer
	IMPORT	|?TransferBuffer@DeviceContext@@QAAPAEPAE0PAK@Z| ; DeviceContext::TransferBuffer

  00000			 AREA	 |.pdata|, PDATA
|$T37983| DCD	|$LN5@TransferIn|
	DCD	0x40000d02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?TransferInputBuffer@HardwareContext@@QAAKK@Z| PROC ; HardwareContext::TransferInputBuffer

; 526  : {

  00000		 |$LN5@TransferIn|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M37980|

; 527  :     ULONG BytesTransferred;
; 528  :     PBYTE pBufferStart = m_Input_pbDMA_PAGES[NumBuf];

  00008	e0803101	 add         r3, r0, r1, lsl #2
  0000c	e59340b8	 ldr         r4, [r3, #0xB8]

; 529  :     PBYTE pBufferEnd = pBufferStart + AUDIO_DMA_PAGE_SIZE;
; 530  :     PBYTE pBufferLast;
; 531  :     DWORD NumStreams;
; 532  : 
; 533  : #ifdef PROFILE_MIXER
; 534  :     LARGE_INTEGER liPCStart, liPCStop;
; 535  :     QueryPerformanceCounter(&liPCStart);
; 536  : #endif
; 537  : 
; 538  :     pBufferLast = m_InputDeviceContext.TransferBuffer(pBufferStart, pBufferEnd, &NumStreams);

  00010	e28d3000	 add         r3, sp, #0
  00014	e2800070	 add         r0, r0, #0x70
  00018	e2842a02	 add         r2, r4, #2, 20
  0001c	e1a01004	 mov         r1, r4
  00020	eb000000	 bl          |?TransferBuffer@DeviceContext@@QAAPAEPAE0PAK@Z|

; 539  :     BytesTransferred = pBufferLast-pBufferStart;

  00024	e0640000	 rsb         r0, r4, r0

; 540  : 
; 541  : #ifdef INPUT_CACHEDMEM
; 542  :     InputBufferCacheDiscard( pBufferStart, AUDIO_DMA_PAGE_SIZE);
; 543  : #endif
; 544  : 
; 545  : #ifdef PROFILE_MIXER 
; 546  :     QueryPerformanceCounter(&liPCStop);
; 547  :     m_InputDeviceContext.m_liPCTotal.QuadPart += liPCStop.QuadPart-liPCStart.QuadPart;
; 548  : #endif
; 549  : 
; 550  :     DEBUGMSG(ZONE_DMA, (TEXT("In(%d) %d bytes, str %d\r\n"),NumBuf, BytesTransferred, NumStreams));
; 551  : #if 0
; 552  : 	DWORD i;
; 553  : 	PWORD pwData, pwLast;
; 554  : 	RETAILMSG(1, (L"-------------------------------Input----------------------------------\r\n"));
; 555  : 	pwData = (PWORD)pBufferStart;
; 556  : 	pwLast = (PWORD)pBufferLast;
; 557  : 	while (pwData < pwLast)
; 558  : 	{
; 559  : 		RETAILMSG(1, (L"\t"));
; 560  : 		for (i = 0; i < 16 && pwData < pwLast; i++, pwData++)
; 561  : 		{
; 562  : 			RETAILMSG(1, (L"0x%04X, ", *pwData));
; 563  : 		}
; 564  : 		RETAILMSG(1, (L"\r\n"));
; 565  : 	}
; 566  : 	RETAILMSG(1, (L"-------------------------------Input----------------------------------\r\n"));
; 567  : #endif
; 568  : 
; 569  :     return BytesTransferred;
; 570  : }

  00028	e28dd004	 add         sp, sp, #4
  0002c	e8bd4010	 ldmia       sp!, {r4, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$M37981|

			 ENDP  ; |?TransferInputBuffer@HardwareContext@@QAAKK@Z|, HardwareContext::TransferInputBuffer

	EXPORT	|?TransferOutputBuffer@HardwareContext@@QAAKK@Z| ; HardwareContext::TransferOutputBuffer
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T38003| DCD	|$LN9@TransferOu|
	DCD	0x40001602
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?TransferOutputBuffer@HardwareContext@@QAAKK@Z| PROC ; HardwareContext::TransferOutputBuffer

; 610  : {

  00000		 |$LN9@TransferOu|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M38000|

; 611  :     ULONG BytesTransferred;
; 612  :     PBYTE pBufferStart = m_Output_pbDMA_PAGES[NumBuf];

  00008	e0803101	 add         r3, r0, r1, lsl #2
  0000c	e59360c0	 ldr         r6, [r3, #0xC0]

; 613  :     PBYTE pBufferEnd = pBufferStart + AUDIO_DMA_PAGE_SIZE;
; 614  :     PBYTE pBufferLast;
; 615  :     DWORD NumStreams;
; 616  : 
; 617  : 	DEBUGMSG(ZONE_DMA, (TEXT("TransferOutputBuffer: NumBuf=%d\r\n"), NumBuf));
; 618  : #if 0
; 619  : 	DWORD i;
; 620  : 	PWORD pwData, pwLast;
; 621  : 	RETAILMSG(1, (L"-------------------------------Output---------------------------------\r\n"));
; 622  : 	pwData = (PWORD)pBufferStart;
; 623  : 	pwLast = (PWORD)(pBufferStart + AUDIO_DMA_PAGE_SIZE);
; 624  : 	while (pwData < pwLast)
; 625  : 	{
; 626  : 		RETAILMSG(1, (L"\t"));
; 627  : 		for (i = 0; i < 16 && pwData < pwLast; i++, pwData++)
; 628  : 		{
; 629  : 			RETAILMSG(1, (L"0x%04X, ", *pwData));
; 630  : 		}
; 631  : 		RETAILMSG(1, (L"\r\n"));
; 632  : 	}
; 633  : 	RETAILMSG(1, (L"-------------------------------Output---------------------------------\r\n"));
; 634  : #endif
; 635  : 
; 636  : #ifdef PROFILE_MIXER
; 637  :     LARGE_INTEGER liPCStart, liPCStop;
; 638  :     QueryPerformanceCounter(&liPCStart);
; 639  : #endif
; 640  : 
; 641  :     pBufferLast = m_OutputDeviceContext.TransferBuffer(pBufferStart, pBufferEnd, &NumStreams);

  00010	e28d3000	 add         r3, sp, #0
  00014	e2800094	 add         r0, r0, #0x94
  00018	e2864a02	 add         r4, r6, #2, 20
  0001c	e1a02004	 mov         r2, r4
  00020	e1a01006	 mov         r1, r6
  00024	eb000000	 bl          |?TransferBuffer@DeviceContext@@QAAPAEPAE0PAK@Z|
  00028	e1a05000	 mov         r5, r0

; 642  : #if USE_HW_SATURATE
; 643  :     // If not using mix saturation, take care saturation here.
; 644  :     // If more than 1 stream rendered, guard against saturation.
; 645  :     if (NumStreams>1)
; 646  :     {
; 647  :         HandleSaturation(pBufferStart, pBufferLast);
; 648  :     }
; 649  : #endif
; 650  :     // Clear the rest of the buffer
; 651  :     StreamContext::ClearBuffer(pBufferLast,pBufferEnd);

  0002c	e0442005	 sub         r2, r4, r5
  00030	e3a01000	 mov         r1, #0
  00034	eb000000	 bl          memset

; 652  : 
; 653  :     BytesTransferred = pBufferLast-pBufferStart;
; 654  : 
; 655  : #ifdef MIXER_CACHEDMEM
; 656  :     OutputBufferCacheFlush( pBufferStart, AUDIO_DMA_PAGE_SIZE);

  00038	e3a02004	 mov         r2, #4
  0003c	e3a01a02	 mov         r1, #2, 20
  00040	e1a00006	 mov         r0, r6
  00044	eb000000	 bl          CacheRangeFlush
  00048	e0450006	 sub         r0, r5, r6

; 657  : #endif
; 658  : 
; 659  : #ifdef PROFILE_MIXER 
; 660  :     QueryPerformanceCounter(&liPCStop);
; 661  :     m_OutputDeviceContext.m_liPCTotal.QuadPart += liPCStop.QuadPart-liPCStart.QuadPart;
; 662  : #endif
; 663  : 
; 664  :     DEBUGMSG(ZONE_DMA, (TEXT("Out(%d) %d bytes str %d\r\n"),NumBuf, BytesTransferred, NumStreams));
; 665  : 
; 666  :     return BytesTransferred;
; 667  : }

  0004c	e28dd004	 add         sp, sp, #4
  00050	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$M38001|

			 ENDP  ; |?TransferOutputBuffer@HardwareContext@@QAAKK@Z|, HardwareContext::TransferOutputBuffer

	EXPORT	|?InterruptThreadTx@HardwareContext@@QAAXXZ| ; HardwareContext::InterruptThreadTx
	IMPORT	|InterruptDone|
	IMPORT	|CeSetThreadPriority|
	IMPORT	|WaitForAPIReady|
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T38024| DCD	|$LN18@InterruptT|
	DCD	0x40001e01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InterruptThreadTx@HardwareContext@@QAAXXZ| PROC ; HardwareContext::InterruptThreadTx

; 678  : {

  00000		 |$LN18@InterruptT|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38021|
  00004	e1a04000	 mov         r4, r0

; 679  :     DEBUGMSG(ZONE_AC, 
; 680  :        (TEXT("WaveDev: HardwareContext::InterruptThreadTx\r\n")));
; 681  : 
; 682  :     // make sure that GWES APIs ready before calling: 
; 683  :     if (WAIT_OBJECT_0 != WaitForAPIReady(SH_GDI, INFINITE))

  00008	e3e01000	 mvn         r1, #0
  0000c	e3a00050	 mov         r0, #0x50
  00010	eb000000	 bl          WaitForAPIReady
  00014	e3500000	 cmp         r0, #0
  00018	1a000014	 bne         |$LN1@InterruptT|

; 684  :     {
; 685  :         DEBUGMSG(ZONE_ERROR, (TEXT("Wavedev driver: WaitForAPIReady failed.\r\n")));
; 686  :         return;
; 687  :     }
; 688  : 
; 689  :     // Bump up the priority since the interrupt must be serviced immediately.
; 690  :     CeSetThreadPriority(GetCurrentThread(),  m_dwPriority256);

  0001c	e5941018	 ldr         r1, [r4, #0x18]
  00020	e3a00041	 mov         r0, #0x41
  00024	eb000000	 bl          CeSetThreadPriority

; 691  : 
; 692  :     DEBUGMSG(ZONE_AC, 
; 693  :        (TEXT("WaveDev: HardwareContext::InterruptThreadTx Enable Interrupt!!!\r\n")));
; 694  :     while (!m_fTerminating)

  00028	ea00000d	 b           |$LN15@InterruptT|
  0002c		 |$LL2@InterruptT|

; 695  :     {
; 696  :         DWORD dwWaitObject;
; 697  : 
; 698  :         InterruptDone(m_IntrAudioTx);

  0002c	e5940024	 ldr         r0, [r4, #0x24]
  00030	eb000000	 bl          InterruptDone

; 699  : 
; 700  :         dwWaitObject = WaitForSingleObject(m_hAudioInterruptTx, INFINITE);

  00034	e5940038	 ldr         r0, [r4, #0x38]
  00038	e3e01000	 mvn         r1, #0
  0003c	eb000000	 bl          WaitForSingleObject

; 701  : 
; 702  :         DEBUGMSG(ZONE_IRQ,(TEXT("WAVE: Tx interrupt\r\n")));
; 703  : 
; 704  :         // Grab the lock
; 705  :         Lock();

  00040	e2840004	 add         r0, r4, #4
  00044	eb000000	 bl          EnterCriticalSection

; 706  : 
; 707  :         // Copy data to DMA buffers
; 708  :         HWTransferOutputBuffers();

  00048	e5943000	 ldr         r3, [r4]
  0004c	e1a00004	 mov         r0, r4
  00050	e5933024	 ldr         r3, [r3, #0x24]
  00054	e1a0e00f	 mov         lr, pc
  00058	e12fff13	 bx          r3

; 709  : 
; 710  :         Unlock();

  0005c	e2840004	 add         r0, r4, #4
  00060	eb000000	 bl          LeaveCriticalSection
  00064		 |$LN15@InterruptT|
  00064	e594302c	 ldr         r3, [r4, #0x2C]
  00068	e3530000	 cmp         r3, #0
  0006c	0affffee	 beq         |$LL2@InterruptT|
  00070		 |$LN1@InterruptT|

; 711  :     }
; 712  : }

  00070	e8bd4010	 ldmia       sp!, {r4, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$M38022|

			 ENDP  ; |?InterruptThreadTx@HardwareContext@@QAAXXZ|, HardwareContext::InterruptThreadTx

	EXPORT	|?InterruptThreadRx@HardwareContext@@QAAXXZ| ; HardwareContext::InterruptThreadRx
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T38045| DCD	|$LN18@InterruptT@2|
	DCD	0x40001e01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InterruptThreadRx@HardwareContext@@QAAXXZ| PROC ; HardwareContext::InterruptThreadRx

; 723  : {

  00000		 |$LN18@InterruptT@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38042|
  00004	e1a04000	 mov         r4, r0

; 724  :     DEBUGMSG(ZONE_AC, 
; 725  :        (TEXT("WaveDev: HardwareContext::InterruptThreadRx\r\n")));
; 726  : 
; 727  :     // make sure that GWES APIs ready before calling: 
; 728  :     if (WAIT_OBJECT_0 != WaitForAPIReady(SH_GDI, INFINITE))

  00008	e3e01000	 mvn         r1, #0
  0000c	e3a00050	 mov         r0, #0x50
  00010	eb000000	 bl          WaitForAPIReady
  00014	e3500000	 cmp         r0, #0
  00018	1a000014	 bne         |$LN1@InterruptT@2|

; 729  :     {
; 730  :         DEBUGMSG(ZONE_ERROR, (TEXT("Wavedev driver: WaitForAPIReady failed.\r\n")));
; 731  :         return;
; 732  :     }
; 733  : 
; 734  :     // Bump up the priority since the interrupt must be serviced immediately.
; 735  :     CeSetThreadPriority(GetCurrentThread(), m_dwPriority256);

  0001c	e5941018	 ldr         r1, [r4, #0x18]
  00020	e3a00041	 mov         r0, #0x41
  00024	eb000000	 bl          CeSetThreadPriority

; 736  : 
; 737  :     while (!m_fTerminating)

  00028	ea00000d	 b           |$LN15@InterruptT@2|
  0002c		 |$LL2@InterruptT@2|

; 738  :     {
; 739  :         DWORD dwWaitObject;
; 740  : 
; 741  :         InterruptDone(m_IntrAudioRx);

  0002c	e5940028	 ldr         r0, [r4, #0x28]
  00030	eb000000	 bl          InterruptDone

; 742  : 
; 743  :         dwWaitObject = WaitForSingleObject(m_hAudioInterruptRx, INFINITE);

  00034	e594003c	 ldr         r0, [r4, #0x3C]
  00038	e3e01000	 mvn         r1, #0
  0003c	eb000000	 bl          WaitForSingleObject

; 744  : 
; 745  :         DEBUGMSG(ZONE_IRQ,(TEXT("WAVE: Rx interrupt\r\n")));
; 746  : 
; 747  :         // Grab the lock
; 748  :         Lock();

  00040	e2840004	 add         r0, r4, #4
  00044	eb000000	 bl          EnterCriticalSection

; 749  : 
; 750  :         // Copy data from DMA buffers
; 751  :         HWTransferInputBuffers();

  00048	e5943000	 ldr         r3, [r4]
  0004c	e1a00004	 mov         r0, r4
  00050	e5933020	 ldr         r3, [r3, #0x20]
  00054	e1a0e00f	 mov         lr, pc
  00058	e12fff13	 bx          r3

; 752  : 
; 753  :         Unlock();

  0005c	e2840004	 add         r0, r4, #4
  00060	eb000000	 bl          LeaveCriticalSection
  00064		 |$LN15@InterruptT@2|
  00064	e594302c	 ldr         r3, [r4, #0x2C]
  00068	e3530000	 cmp         r3, #0
  0006c	0affffee	 beq         |$LL2@InterruptT@2|
  00070		 |$LN1@InterruptT@2|

; 754  :     }
; 755  : }

  00070	e8bd4010	 ldmia       sp!, {r4, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$M38043|

			 ENDP  ; |?InterruptThreadRx@HardwareContext@@QAAXXZ|, HardwareContext::InterruptThreadRx

	EXPORT	|?TimeoutThread@HardwareContext@@QAAXXZ| ; HardwareContext::TimeoutThread
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T38061| DCD	|$LN14@TimeoutThr|
	DCD	0x40001d01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?TimeoutThread@HardwareContext@@QAAXXZ| PROC ; HardwareContext::TimeoutThread

; 758  : {

  00000		 |$LN14@TimeoutThr|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38058|
  00004	e1a04000	 mov         r4, r0

; 759  :     DEBUGMSG(ZONE_AC, 
; 760  :        (TEXT("WaveDev: HardwareContext::TimeoutThread\r\n")));
; 761  :     DWORD dwTimeout = m_dwTimeoutTicks;
; 762  :     while (!m_fTerminating) {

  00008	e594302c	 ldr         r3, [r4, #0x2C]
  0000c	e594101c	 ldr         r1, [r4, #0x1C]
  00010	e3530000	 cmp         r3, #0
  00014	1a000014	 bne         |$LN3@TimeoutThr|
  00018	e3a03c01	 mov         r3, #1, 24
  0001c	e3835002	 orr         r5, r3, #2
  00020		 |$LL4@TimeoutThr|

; 763  :         DWORD dwWaitObject = WaitForSingleObject(m_hTimeoutEvent, dwTimeout);

  00020	e5940048	 ldr         r0, [r4, #0x48]
  00024	eb000000	 bl          WaitForSingleObject

; 764  :         if (dwWaitObject == WAIT_TIMEOUT) { // It is timeout. 

  00028	e1550000	 cmp         r5, r0
  0002c	1a00000a	 bne         |$LN2@TimeoutThr|

; 765  : 			DEBUGMSG(ZONE_AC, 
; 766  : 			   (TEXT("WaveDev: HardwareContext::TimeoutThread Got timeout!\r\n")));
; 767  :             Lock();

  00030	e2840004	 add         r0, r4, #4
  00034	eb000000	 bl          EnterCriticalSection

; 768  :             DelayedUpdate() ;

  00038	e5943000	 ldr         r3, [r4]
  0003c	e1a00004	 mov         r0, r4
  00040	e593307c	 ldr         r3, [r3, #0x7C]
  00044	e1a0e00f	 mov         lr, pc
  00048	e12fff13	 bx          r3

; 769  :             Unlock();

  0004c	e2840004	 add         r0, r4, #4
  00050	eb000000	 bl          LeaveCriticalSection

; 770  :             dwTimeout = INFINITE;

  00054	e3e01000	 mvn         r1, #0

; 771  :         }
; 772  :         else

  00058	ea000000	 b           |$LN1@TimeoutThr|
  0005c		 |$LN2@TimeoutThr|

; 773  :             dwTimeout = m_dwTimeoutTicks;

  0005c	e594101c	 ldr         r1, [r4, #0x1C]
  00060		 |$LN1@TimeoutThr|

; 759  :     DEBUGMSG(ZONE_AC, 
; 760  :        (TEXT("WaveDev: HardwareContext::TimeoutThread\r\n")));
; 761  :     DWORD dwTimeout = m_dwTimeoutTicks;
; 762  :     while (!m_fTerminating) {

  00060	e594302c	 ldr         r3, [r4, #0x2C]
  00064	e3530000	 cmp         r3, #0
  00068	0affffec	 beq         |$LL4@TimeoutThr|
  0006c		 |$LN3@TimeoutThr|

; 774  :     }
; 775  : }

  0006c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$M38059|

			 ENDP  ; |?TimeoutThread@HardwareContext@@QAAXXZ|, HardwareContext::TimeoutThread


  00000			 AREA	 |.pdata|, PDATA
|$T38069| DCD	|$LN5@CallInterr|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CallInterruptThreadTx@@YAXPAVHardwareContext@@@Z| PROC ; CallInterruptThreadTx

; 787  : {

  00000		 |$LN5@CallInterr|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38066|

; 788  :     pHWContext->InterruptThreadTx();

  00004	eb000000	 bl          |?InterruptThreadTx@HardwareContext@@QAAXXZ|

; 789  : }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M38067|

			 ENDP  ; |?CallInterruptThreadTx@@YAXPAVHardwareContext@@@Z|, CallInterruptThreadTx


  00000			 AREA	 |.pdata|, PDATA
|$T38077| DCD	|$LN5@CallInterr@2|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CallInterruptThreadRx@@YAXPAVHardwareContext@@@Z| PROC ; CallInterruptThreadRx

; 793  : {

  00000		 |$LN5@CallInterr@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38074|

; 794  :     pHWContext->InterruptThreadRx();

  00004	eb000000	 bl          |?InterruptThreadRx@HardwareContext@@QAAXXZ|

; 795  : }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M38075|

			 ENDP  ; |?CallInterruptThreadRx@@YAXPAVHardwareContext@@@Z|, CallInterruptThreadRx


  00000			 AREA	 |.pdata|, PDATA
|$T38085| DCD	|$LN5@CallTimeou|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CallTimeoutThread@@YAXPAVHardwareContext@@@Z| PROC ; CallTimeoutThread

; 798  : {

  00000		 |$LN5@CallTimeou|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38082|

; 799  :     pHWContext->TimeoutThread();

  00004	eb000000	 bl          |?TimeoutThread@HardwareContext@@QAAXXZ|

; 800  : }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M38083|

			 ENDP  ; |?CallTimeoutThread@@YAXPAVHardwareContext@@@Z|, CallTimeoutThread

	EXPORT	|?RecalcSpeakerEnable@HardwareContext@@QAAXXZ| ; HardwareContext::RecalcSpeakerEnable

  00000			 AREA	 |.pdata|, PDATA
|$T38093| DCD	|$LN5@RecalcSpea|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RecalcSpeakerEnable@HardwareContext@@QAAXXZ| PROC ; HardwareContext::RecalcSpeakerEnable

; 816  : {

  00000		 |$LN5@RecalcSpea|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38090|

; 817  :     HWUpdateAudioPRC();

  00004	e5903000	 ldr         r3, [r0]
  00008	e5933048	 ldr         r3, [r3, #0x48]
  0000c	e1a0e00f	 mov         lr, pc
  00010	e12fff13	 bx          r3

; 818  : }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M38091|

			 ENDP  ; |?RecalcSpeakerEnable@HardwareContext@@QAAXXZ|, HardwareContext::RecalcSpeakerEnable

	EXPORT	|?ForceSpeaker@HardwareContext@@QAAKH@Z| ; HardwareContext::ForceSpeaker
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T38116| DCD	|$LN18@ForceSpeak|
	DCD	0x40002001
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ForceSpeaker@HardwareContext@@QAAKH@Z| PROC ; HardwareContext::ForceSpeaker

; 830  : {

  00000		 |$LN18@ForceSpeak|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38113|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 831  :     DEBUGMSG( ZONE_AC, (TEXT("WAVE: ForceSpeaker = %d\r\n"), bForceSpeaker));   
; 832  : 
; 833  :     // lock is only taken because of ++/-- operators
; 834  :     Lock();

  0000c	e2850004	 add         r0, r5, #4
  00010	eb000000	 bl          EnterCriticalSection

; 835  : 
; 836  :     // If m_NumForcedSpeaker is non-zero, audio should be routed to an
; 837  :     // external speaker (if hw permits).
; 838  :     if (bForceSpeaker)
; 839  :     {
; 840  :         m_NumForcedSpeaker++;

  00014	e5953064	 ldr         r3, [r5, #0x64]
  00018	e3540000	 cmp         r4, #0
  0001c	0a000009	 beq         |$LN5@ForceSpeak|
  00020	e2833001	 add         r3, r3, #1
  00024	e5853064	 str         r3, [r5, #0x64]

; 841  :         if (m_NumForcedSpeaker==1)

  00028	e3530001	 cmp         r3, #1
  0002c	1a00000e	 bne         |$LN12@ForceSpeak|

; 842  :         {
; 843  :             RecalcSpeakerEnable();

  00030	e5953000	 ldr         r3, [r5]
  00034	e1a00005	 mov         r0, r5
  00038	e5933048	 ldr         r3, [r3, #0x48]
  0003c	e1a0e00f	 mov         lr, pc
  00040	e12fff13	 bx          r3

; 844  :         }
; 845  :     }
; 846  :     else

  00044	ea000008	 b           |$LN12@ForceSpeak|
  00048		 |$LN5@ForceSpeak|

; 847  :     {
; 848  :         if (m_NumForcedSpeaker > 0)

  00048	e3530000	 cmp         r3, #0
  0004c	da000006	 ble         |$LN12@ForceSpeak|

; 849  :         {
; 850  :             m_NumForcedSpeaker--;

  00050	e2533001	 subs        r3, r3, #1
  00054	e5853064	 str         r3, [r5, #0x64]

; 851  :             if (m_NumForcedSpeaker)
; 852  :             {
; 853  :                 RecalcSpeakerEnable();

  00058	15953000	 ldrne       r3, [r5]
  0005c	11a00005	 movne       r0, r5
  00060	15933048	 ldrne       r3, [r3, #0x48]
  00064	11a0e00f	 movne       lr, pc
  00068	112fff13	 bxne        r3
  0006c		 |$LN12@ForceSpeak|

; 854  :             }
; 855  :         }
; 856  :     }   
; 857  : 
; 858  :     Unlock();

  0006c	e2850004	 add         r0, r5, #4
  00070	eb000000	 bl          LeaveCriticalSection

; 859  : 
; 860  :     return MMSYSERR_NOERROR;

  00074	e3a00000	 mov         r0, #0

; 861  : }

  00078	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0007c	e12fff1e	 bx          lr
  00080		 |$M38114|

			 ENDP  ; |?ForceSpeaker@HardwareContext@@QAAKH@Z|, HardwareContext::ForceSpeaker

	EXPORT	|?PowerUp@HardwareContext@@QAAXXZ|	; HardwareContext::PowerUp

  00000			 AREA	 |.pdata|, PDATA
|$T38124| DCD	|$LN5@PowerUp|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PowerUp@HardwareContext@@QAAXXZ| PROC ; HardwareContext::PowerUp

; 872  : {

  00000		 |$LN5@PowerUp|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38121|

; 873  :     HWPowerUp();

  00004	e5903000	 ldr         r3, [r0]
  00008	e593304c	 ldr         r3, [r3, #0x4C]
  0000c	e1a0e00f	 mov         lr, pc
  00010	e12fff13	 bx          r3

; 874  : }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M38122|

			 ENDP  ; |?PowerUp@HardwareContext@@QAAXXZ|, HardwareContext::PowerUp

	EXPORT	|?PowerDown@HardwareContext@@QAAXXZ|	; HardwareContext::PowerDown

  00000			 AREA	 |.pdata|, PDATA
|$T38132| DCD	|$LN5@PowerDown|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PowerDown@HardwareContext@@QAAXXZ| PROC ; HardwareContext::PowerDown

; 885  : {

  00000		 |$LN5@PowerDown|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38129|

; 886  :     HWPowerDown();

  00004	e5903000	 ldr         r3, [r0]
  00008	e5933050	 ldr         r3, [r3, #0x50]
  0000c	e1a0e00f	 mov         lr, pc
  00010	e12fff13	 bx          r3

; 887  : }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M38130|

			 ENDP  ; |?PowerDown@HardwareContext@@QAAXXZ|, HardwareContext::PowerDown

	EXPORT	|?SetExtSpeakerPower@HardwareContext@@QAAHH@Z| ; HardwareContext::SetExtSpeakerPower

  00000			 AREA	 |.pdata|, PDATA
|$T38141| DCD	|$LN5@SetExtSpea|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetExtSpeakerPower@HardwareContext@@QAAHH@Z| PROC ; HardwareContext::SetExtSpeakerPower

; 898  : {

  00000		 |$LN5@SetExtSpea|
  00000		 |$M38138|

; 899  :     DEBUGMSG( ZONE_ERROR, ( TEXT( "WAVE: SetExtSpeakerPower not implemented!\r\n" )));
; 900  :     return FALSE;

  00000	e3a00000	 mov         r0, #0

; 901  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M38139|

			 ENDP  ; |?SetExtSpeakerPower@HardwareContext@@QAAHH@Z|, HardwareContext::SetExtSpeakerPower

	EXPORT	|?PrepareForVoiceCall@HardwareContext@@QAAHH@Z| ; HardwareContext::PrepareForVoiceCall

  00000			 AREA	 |.pdata|, PDATA
|$T38152| DCD	|$LN5@PrepareFor|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PrepareForVoiceCall@HardwareContext@@QAAHH@Z| PROC ; HardwareContext::PrepareForVoiceCall

; 912  : {

  00000		 |$LN5@PrepareFor|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38149|

; 913  :     return HWEnableNetwork( bInVoiceCall );

  00004	e5903000	 ldr         r3, [r0]
  00008	e5933040	 ldr         r3, [r3, #0x40]
  0000c	e1a0e00f	 mov         lr, pc
  00010	e12fff13	 bx          r3

; 914  : }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M38150|

			 ENDP  ; |?PrepareForVoiceCall@HardwareContext@@QAAHH@Z|, HardwareContext::PrepareForVoiceCall

	EXPORT	|?NotifyHeadsetOn@HardwareContext@@QAAXH@Z| ; HardwareContext::NotifyHeadsetOn

  00000			 AREA	 |.pdata|, PDATA
|$T38161| DCD	|$LN5@NotifyHead|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?NotifyHeadsetOn@HardwareContext@@QAAXH@Z| PROC ; HardwareContext::NotifyHeadsetOn

; 926  : {

  00000		 |$LN5@NotifyHead|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38158|
  00004	e1a02000	 mov         r2, r0

; 927  :     m_bHeadsetPluggedIn = fHeadset;
; 928  :     HWUpdateAudioPRC();

  00008	e5923000	 ldr         r3, [r2]
  0000c	e58210cc	 str         r1, [r2, #0xCC]
  00010	e5933048	 ldr         r3, [r3, #0x48]
  00014	e1a0e00f	 mov         lr, pc
  00018	e12fff13	 bx          r3

; 929  : }

  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M38159|

			 ENDP  ; |?NotifyHeadsetOn@HardwareContext@@QAAXH@Z|, HardwareContext::NotifyHeadsetOn

	EXPORT	|?ToggleExtSpeaker@HardwareContext@@QAAXXZ| ; HardwareContext::ToggleExtSpeaker

  00000			 AREA	 |.pdata|, PDATA
|$T38169| DCD	|$LN5@ToggleExtS|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ToggleExtSpeaker@HardwareContext@@QAAXXZ| PROC ; HardwareContext::ToggleExtSpeaker

; 940  : {

  00000		 |$LN5@ToggleExtS|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38166|
  00004	e1a02000	 mov         r2, r0

; 941  : 
; 942  :     m_bToggleLoadSpeaker = TRUE; 
; 943  :     HWUpdateAudioPRC();

  00008	e5923000	 ldr         r3, [r2]
  0000c	e3a01001	 mov         r1, #1
  00010	e58210d0	 str         r1, [r2, #0xD0]
  00014	e5933048	 ldr         r3, [r3, #0x48]
  00018	e1a0e00f	 mov         lr, pc
  0001c	e12fff13	 bx          r3

; 944  : }

  00020	e49de004	 ldr         lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$M38167|

			 ENDP  ; |?ToggleExtSpeaker@HardwareContext@@QAAXXZ|, HardwareContext::ToggleExtSpeaker

	EXPORT	|?NotifyBtHeadsetOn@HardwareContext@@QAAXK@Z| ; HardwareContext::NotifyBtHeadsetOn

  00000			 AREA	 |.pdata|, PDATA
|$T38179| DCD	|$LN6@NotifyBtHe|
	DCD	0x40000e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?NotifyBtHeadsetOn@HardwareContext@@QAAXK@Z| PROC ; HardwareContext::NotifyBtHeadsetOn

; 955  : {

  00000		 |$LN6@NotifyBtHe|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38176|

; 956  : 
; 957  :     m_bBtHeadsetSelected = FALSE;

  00004	e3a03000	 mov         r3, #0
  00008	e58030d8	 str         r3, [r0, #0xD8]

; 958  :     m_dwBtAudioRouting = BT_AUDIO_NONE;

  0000c	e58030dc	 str         r3, [r0, #0xDC]

; 959  : 
; 960  :     dwBtAudioRouting &= (BT_AUDIO_SYSTEM | BT_AUDIO_MODEM);

  00010	e2113003	 ands        r3, r1, #3

; 961  : 
; 962  :     if (dwBtAudioRouting)
; 963  :     {
; 964  :         m_bBtHeadsetSelected = TRUE;
; 965  :         m_dwBtAudioRouting =  dwBtAudioRouting;

  00014	158030dc	 strne       r3, [r0, #0xDC]

; 966  :     }
; 967  : 
; 968  :     HWUpdateAudioPRC();

  00018	e5903000	 ldr         r3, [r0]
  0001c	13a02001	 movne       r2, #1
  00020	158020d8	 strne       r2, [r0, #0xD8]
  00024	e5933048	 ldr         r3, [r3, #0x48]
  00028	e1a0e00f	 mov         lr, pc
  0002c	e12fff13	 bx          r3

; 969  : 
; 970  : }

  00030	e49de004	 ldr         lr, [sp], #4
  00034	e12fff1e	 bx          lr
  00038		 |$M38177|

			 ENDP  ; |?NotifyBtHeadsetOn@HardwareContext@@QAAXK@Z|, HardwareContext::NotifyBtHeadsetOn

	EXPORT	|??0HardwareContext@@QAA@XZ|		; HardwareContext::HardwareContext
	EXPORT	|??_7HardwareContext@@6B@| [ DATA ]	; HardwareContext::`vftable'
	IMPORT	|CreateEventW|
	IMPORT	|InitializeCriticalSection|
	IMPORT	|??_EHardwareContext@@UAAPAXI@Z|, WEAK |??_GHardwareContext@@UAAPAXI@Z| ; HardwareContext::`vector deleting destructor', HardwareContext::`scalar deleting destructor'
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\devctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T38233| DCD	|$LN27@HardwareCo|
	DCD	0x40004a01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7HardwareContext@@6B@| DCD |??_EHardwareContext@@UAAPAXI@Z| ; HardwareContext::`vftable'
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|?SetupDelayUpdate@HardwareContext@@MAAXXZ|
	DCD	|?DelayedUpdate@HardwareContext@@MAAXXZ|
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0HardwareContext@@QAA@XZ| PROC	; HardwareContext::HardwareContext

; 44   : {

  00000		 |$LN27@HardwareCo|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38230|
  00004	e1a05000	 mov         r5, r0
  00008	e59f3114	 ldr         r3, [pc, #0x114]
  0000c	e1a01005	 mov         r1, r5
  00010	e3a02cff	 mov         r2, #0xFF, 24
  00014	e4813070	 str         r3, [r1], #0x70
  00018	e38240ff	 orr         r4, r2, #0xFF
  0001c	e2813004	 add         r3, r1, #4
  00020	e2812014	 add         r2, r1, #0x14
  00024	e5813008	 str         r3, [r1, #8]
  00028	e5813004	 str         r3, [r1, #4]
  0002c	e2823010	 add         r3, r2, #0x10
  00030	e581400c	 str         r4, [r1, #0xC]
  00034	e5814010	 str         r4, [r1, #0x10]
  00038		 |$LN21@HardwareCo|
  00038	e4824004	 str         r4, [r2], #4
  0003c	e1520003	 cmp         r2, r3
  00040	1afffffc	 bne         |$LN21@HardwareCo|
  00044	e59f30d4	 ldr         r3, [pc, #0xD4]
  00048	e285e094	 add         lr, r5, #0x94
  0004c	e28e2004	 add         r2, lr, #4
  00050	e5813000	 str         r3, [r1]
  00054	e28e3014	 add         r3, lr, #0x14
  00058	e58e2008	 str         r2, [lr, #8]
  0005c	e58e2004	 str         r2, [lr, #4]
  00060	e2832010	 add         r2, r3, #0x10
  00064	e58e400c	 str         r4, [lr, #0xC]
  00068	e58e4010	 str         r4, [lr, #0x10]
  0006c		 |$LN23@HardwareCo|
  0006c	e4834004	 str         r4, [r3], #4
  00070	e1530002	 cmp         r3, r2
  00074	1afffffc	 bne         |$LN23@HardwareCo|
  00078	e59f309c	 ldr         r3, [pc, #0x9C]

; 45   :     InitializeCriticalSection(&m_Lock);

  0007c	e2850004	 add         r0, r5, #4
  00080	e58e3000	 str         r3, [lr]
  00084	eb000000	 bl          InitializeCriticalSection

; 46   :     m_fTerminating = FALSE;
; 47   :     m_Initialized=FALSE;
; 48   : 
; 49   :     m_hParent = NULL;
; 50   :     m_CurPowerState = PwrDeviceUnspecified ;

  00088	e3e0e000	 mvn         lr, #0
  0008c	e3a04000	 mov         r4, #0

; 51   : 
; 52   :     m_hAudioInterruptThreadRx = NULL;
; 53   :     m_hAudioInterruptThreadTx = NULL;
; 54   :     m_hTimeoutThread = NULL;
; 55   :     
; 56   :     m_fRequestedSysIntr = FALSE;
; 57   :     m_IntrAudioRx = m_IntrAudioTx = SYSINTR_UNDEFINED ;
; 58   :     m_fRxInterruptIntialized = m_fTxInterruptIntialized = FALSE;
; 59   : 
; 60   :     m_hTimeoutEvent = CreateEvent(NULL,FALSE,FALSE,NULL);

  00090	e3a03000	 mov         r3, #0
  00094	e3a02000	 mov         r2, #0
  00098	e3a01000	 mov         r1, #0
  0009c	e3a00000	 mov         r0, #0
  000a0	e585e050	 str         lr, [r5, #0x50]
  000a4	e585e024	 str         lr, [r5, #0x24]
  000a8	e585e028	 str         lr, [r5, #0x28]
  000ac	e585402c	 str         r4, [r5, #0x2C]
  000b0	e585405c	 str         r4, [r5, #0x5C]
  000b4	e5854054	 str         r4, [r5, #0x54]
  000b8	e5854044	 str         r4, [r5, #0x44]
  000bc	e5854040	 str         r4, [r5, #0x40]
  000c0	e585404c	 str         r4, [r5, #0x4C]
  000c4	e5854020	 str         r4, [r5, #0x20]
  000c8	e5854034	 str         r4, [r5, #0x34]
  000cc	e5854030	 str         r4, [r5, #0x30]
  000d0	eb000000	 bl          CreateEventW
  000d4	e1a03000	 mov         r3, r0

; 61   :     m_hAudioInterruptTx = CreateEvent( NULL, FALSE, FALSE, NULL);

  000d8	e5853048	 str         r3, [r5, #0x48]
  000dc	e3a03000	 mov         r3, #0
  000e0	e3a00000	 mov         r0, #0
  000e4	e3a02000	 mov         r2, #0
  000e8	e3a01000	 mov         r1, #0
  000ec	eb000000	 bl          CreateEventW
  000f0	e1a03000	 mov         r3, r0

; 62   :     m_hAudioInterruptRx = CreateEvent( NULL, FALSE, FALSE, NULL);

  000f4	e5853038	 str         r3, [r5, #0x38]
  000f8	e3a03000	 mov         r3, #0
  000fc	e3a00000	 mov         r0, #0
  00100	e3a02000	 mov         r2, #0
  00104	e3a01000	 mov         r1, #0
  00108	eb000000	 bl          CreateEventW
  0010c	e585003c	 str         r0, [r5, #0x3C]

; 63   :     
; 64   : }

  00110	e1a00005	 mov         r0, r5
  00114	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00118	e12fff1e	 bx          lr
  0011c		 |$LN28@HardwareCo|
  0011c		 |$LN29@HardwareCo|
  0011c	00000000	 DCD         |??_7OutputDeviceContext@@6B@|
  00120		 |$LN30@HardwareCo|
  00120	00000000	 DCD         |??_7InputDeviceContext@@6B@|
  00124		 |$LN31@HardwareCo|
  00124	00000000	 DCD         |??_7HardwareContext@@6B@|
  00128		 |$M38231|

			 ENDP  ; |??0HardwareContext@@QAA@XZ|, HardwareContext::HardwareContext

	EXPORT	|??1HardwareContext@@UAA@XZ|		; HardwareContext::~HardwareContext
	IMPORT	|DeleteCriticalSection|
	IMPORT	|CloseBusAccessHandle|
	IMPORT	|SetDevicePowerState|
	IMPORT	|InterruptDisable|
	IMPORT	|Sleep|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T38257| DCD	|$LN20@HardwareCo@2|
	DCD	0x40005402
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1HardwareContext@@UAA@XZ| PROC	; HardwareContext::~HardwareContext

; 74   : {

  00000		 |$LN20@HardwareCo@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M38254|
  00008	e1a04000	 mov         r4, r0

; 75   :     m_fTerminating = TRUE;
; 76   : 
; 77   :     if (m_hTimeoutEvent!=NULL)

  0000c	e5942048	 ldr         r2, [r4, #0x48]
  00010	e59f3134	 ldr         r3, [pc, #0x134]
  00014	e3a01001	 mov         r1, #1
  00018	e3520000	 cmp         r2, #0
  0001c	e584102c	 str         r1, [r4, #0x2C]

; 78   :         SetEvent(m_hTimeoutEvent);

  00020	13a01003	 movne       r1, #3
  00024	11a00002	 movne       r0, r2
  00028	e5843000	 str         r3, [r4]
  0002c	1b000000	 blne        EventModify

; 79   :     if (m_hAudioInterruptTx!=NULL)

  00030	e5943038	 ldr         r3, [r4, #0x38]
  00034	e3530000	 cmp         r3, #0

; 80   :         SetEvent(m_hAudioInterruptTx);

  00038	13a01003	 movne       r1, #3
  0003c	11a00003	 movne       r0, r3
  00040	1b000000	 blne        EventModify

; 81   :     if (m_hAudioInterruptRx)

  00044	e594303c	 ldr         r3, [r4, #0x3C]
  00048	e3530000	 cmp         r3, #0

; 82   :         SetEvent(m_hAudioInterruptRx);

  0004c	13a01003	 movne       r1, #3
  00050	11a00003	 movne       r0, r3
  00054	1b000000	 blne        EventModify

; 83   :     
; 84   :     Sleep(500); // Sleep 500 ticks to allow all thread terminated.

  00058	e3a00f7d	 mov         r0, #0x7D, 30
  0005c	eb000000	 bl          Sleep

; 85   :     TerminateCloseThread(m_hAudioInterruptThreadTx);

  00060	e5941040	 ldr         r1, [r4, #0x40]
  00064	e1a00004	 mov         r0, r4
  00068	eb000000	 bl          |?TerminateCloseThread@HardwareContext@@IAAXPAX@Z|

; 86   :     TerminateCloseThread(m_hAudioInterruptThreadRx);

  0006c	e5941044	 ldr         r1, [r4, #0x44]
  00070	e1a00004	 mov         r0, r4
  00074	eb000000	 bl          |?TerminateCloseThread@HardwareContext@@IAAXPAX@Z|

; 87   :     TerminateCloseThread(m_hTimeoutThread);

  00078	e594104c	 ldr         r1, [r4, #0x4C]
  0007c	e1a00004	 mov         r0, r4
  00080	eb000000	 bl          |?TerminateCloseThread@HardwareContext@@IAAXPAX@Z|

; 88   :     
; 89   :     if (m_fRxInterruptIntialized)

  00084	e5943030	 ldr         r3, [r4, #0x30]
  00088	e3530000	 cmp         r3, #0

; 90   :         InterruptDisable(m_IntrAudioRx);  

  0008c	15940028	 ldrne       r0, [r4, #0x28]
  00090	1b000000	 blne        InterruptDisable

; 91   :     if (m_fTxInterruptIntialized)

  00094	e5943034	 ldr         r3, [r4, #0x34]
  00098	e3530000	 cmp         r3, #0

; 92   :         InterruptDisable(m_IntrAudioTx);   

  0009c	15940024	 ldrne       r0, [r4, #0x24]
  000a0	1b000000	 blne        InterruptDisable

; 93   :     
; 94   :     if (m_IntrAudioTx != SYSINTR_UNDEFINED && m_fRequestedSysIntr) {

  000a4	e5943024	 ldr         r3, [r4, #0x24]
  000a8	e3a05000	 mov         r5, #0
  000ac	e3730001	 cmn         r3, #1
  000b0	15943020	 ldrne       r3, [r4, #0x20]
  000b4	13530000	 cmpne       r3, #0

; 95   :         KernelIoControl( IOCTL_HAL_RELEASE_SYSINTR,&m_IntrAudioTx, sizeof( m_IntrAudioTx ), NULL,  0,  NULL );

  000b8	159f0088	 ldrne       r0, [pc, #0x88]
  000bc	13a03000	 movne       r3, #0
  000c0	13a02004	 movne       r2, #4
  000c4	12841024	 addne       r1, r4, #0x24
  000c8	158d5004	 strne       r5, [sp, #4]
  000cc	158d5000	 strne       r5, [sp]
  000d0	1b000000	 blne        KernelIoControl

; 96   :     }
; 97   :     if (m_IntrAudioRx != SYSINTR_UNDEFINED && m_fRequestedSysIntr) {

  000d4	e5943028	 ldr         r3, [r4, #0x28]
  000d8	e3730001	 cmn         r3, #1
  000dc	15943020	 ldrne       r3, [r4, #0x20]
  000e0	13530000	 cmpne       r3, #0

; 98   :         KernelIoControl( IOCTL_HAL_RELEASE_SYSINTR,&m_IntrAudioRx, sizeof( m_IntrAudioRx ), NULL,  0,  NULL );

  000e4	159f005c	 ldrne       r0, [pc, #0x5C]
  000e8	13a03000	 movne       r3, #0
  000ec	13a02004	 movne       r2, #4
  000f0	12841028	 addne       r1, r4, #0x28
  000f4	158d5004	 strne       r5, [sp, #4]
  000f8	158d5000	 strne       r5, [sp]
  000fc	1b000000	 blne        KernelIoControl

; 99   :     }
; 100  :     if (m_hTimeoutEvent)

  00100	e5943048	 ldr         r3, [r4, #0x48]
  00104	e3530000	 cmp         r3, #0

; 101  :         CloseHandle(m_hTimeoutEvent);

  00108	11a00003	 movne       r0, r3
  0010c	1b000000	 blne        CloseHandle

; 102  : 
; 103  :     if (m_hParent ) {

  00110	e5943054	 ldr         r3, [r4, #0x54]
  00114	e3530000	 cmp         r3, #0
  00118	0a000005	 beq         |$LN1@HardwareCo@2|

; 104  :         SetDevicePowerState(m_hParent, D4 , NULL);

  0011c	e3a02000	 mov         r2, #0
  00120	e3a01004	 mov         r1, #4
  00124	e1a00003	 mov         r0, r3
  00128	eb000000	 bl          SetDevicePowerState

; 105  :         CloseBusAccessHandle (m_hParent ) ;

  0012c	e5940054	 ldr         r0, [r4, #0x54]
  00130	eb000000	 bl          CloseBusAccessHandle
  00134		 |$LN1@HardwareCo@2|

; 106  :     }
; 107  :     DeleteCriticalSection(&m_Lock);

  00134	e2840004	 add         r0, r4, #4
  00138	eb000000	 bl          DeleteCriticalSection

; 108  : }

  0013c	e28dd008	 add         sp, sp, #8
  00140	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00144	e12fff1e	 bx          lr
  00148		 |$LN21@HardwareCo@2|
  00148		 |$LN22@HardwareCo@2|
  00148	010100d8	 DCD         0x10100d8
  0014c		 |$LN23@HardwareCo@2|
  0014c	00000000	 DCD         |??_7HardwareContext@@6B@|
  00150		 |$M38255|

			 ENDP  ; |??1HardwareContext@@UAA@XZ|, HardwareContext::~HardwareContext

	EXPORT	|?StartOutputDMA@HardwareContext@@QAAXXZ| ; HardwareContext::StartOutputDMA

  00000			 AREA	 |.pdata|, PDATA
|$T38268| DCD	|$LN7@StartOutpu|
	DCD	0x40001f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?StartOutputDMA@HardwareContext@@QAAXXZ| PROC ; HardwareContext::StartOutputDMA

; 266  : {

  00000		 |$LN7@StartOutpu|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M38265|
  00004	e1a05000	 mov         r5, r0

; 267  :     if (!m_OutputDMARunning)

  00008	e595306c	 ldr         r3, [r5, #0x6C]
  0000c	e3530000	 cmp         r3, #0
  00010	1a000017	 bne         |$LN2@StartOutpu|

; 268  :     {
; 269  :         // Set output dma to running state in case we get 
; 270  :         // reentered during TransferOutputBuffer
; 271  :         m_OutputDMARunning=TRUE;

  00014	e3a06001	 mov         r6, #1

; 272  :         
; 273  :         // Prime the output buffer and turn on DMA if anything got transferred
; 274  :         ULONG OutputTransferred;
; 275  :         OutputTransferred = TransferOutputBuffer(0)+TransferOutputBuffer(1);

  00018	e3a01000	 mov         r1, #0
  0001c	e585606c	 str         r6, [r5, #0x6C]
  00020	eb000000	 bl          |?TransferOutputBuffer@HardwareContext@@QAAKK@Z|
  00024	e1a04000	 mov         r4, r0
  00028	e1a00005	 mov         r0, r5
  0002c	e3a01001	 mov         r1, #1
  00030	eb000000	 bl          |?TransferOutputBuffer@HardwareContext@@QAAKK@Z|
  00034	e0903004	 adds        r3, r0, r4

; 276  : 
; 277  :         // If we didn't transfer any data to the DMA buffers, don't enable DMA
; 278  :         if (OutputTransferred==0)
; 279  :         {
; 280  :             m_OutputDMARunning=FALSE;

  00038	03a03000	 moveq       r3, #0
  0003c	0585306c	 streq       r3, [r5, #0x6C]

; 288  :     }
; 289  : }

  00040	08bd4070	 ldmeqia     sp!, {r4 - r6, lr}
  00044	012fff1e	 bxeq        lr

; 281  :             return;
; 282  :         }
; 283  : 
; 284  :         m_bDMARunning = TRUE;
; 285  :         
; 286  :         HWUpdateAudioPRC ();

  00048	e5953000	 ldr         r3, [r5]
  0004c	e1a00005	 mov         r0, r5
  00050	e5933048	 ldr         r3, [r3, #0x48]
  00054	e58560c8	 str         r6, [r5, #0xC8]
  00058	e1a0e00f	 mov         lr, pc
  0005c	e12fff13	 bx          r3

; 287  :         HWStartOutputDMA();

  00060	e5953000	 ldr         r3, [r5]
  00064	e1a00005	 mov         r0, r5
  00068	e5933010	 ldr         r3, [r3, #0x10]
  0006c	e1a0e00f	 mov         lr, pc
  00070	e12fff13	 bx          r3
  00074		 |$LN2@StartOutpu|

; 288  :     }
; 289  : }

  00074	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$M38266|

			 ENDP  ; |?StartOutputDMA@HardwareContext@@QAAXXZ|, HardwareContext::StartOutputDMA

	EXPORT	|?InitInterruptThread@HardwareContext@@IAAHXZ| ; HardwareContext::InitInterruptThread
	IMPORT	|CreateThread|
	IMPORT	|InterruptInitialize|

  00000			 AREA	 |.pdata|, PDATA
|$T38281| DCD	|$LN14@InitInterr|
	DCD	0x40005902
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InitInterruptThread@HardwareContext@@IAAHXZ| PROC ; HardwareContext::InitInterruptThread

; 458  : {

  00000		 |$LN14@InitInterr|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M38278|
  00008	e1a04000	 mov         r4, r0

; 459  :     DEBUGMSG(ZONE_AC, 
; 460  :        (TEXT("WaveDev: HardwareContext::InitInterruptThread\r\n")));
; 461  : 
; 462  :     if ( !(m_hTimeoutEvent !=NULL &&  m_hAudioInterruptTx !=NULL &&  m_hAudioInterruptRx !=NULL))

  0000c	e5943048	 ldr         r3, [r4, #0x48]
  00010	e3530000	 cmp         r3, #0
  00014	0a00004b	 beq         |$LN5@InitInterr|
  00018	e5943038	 ldr         r3, [r4, #0x38]
  0001c	e3530000	 cmp         r3, #0
  00020	0a000048	 beq         |$LN5@InitInterr|
  00024	e594303c	 ldr         r3, [r4, #0x3C]
  00028	e3530000	 cmp         r3, #0
  0002c	0a000045	 beq         |$LN5@InitInterr|

; 464  : 
; 465  :     GetRegistryValue();

  00030	eb000000	 bl          |?GetRegistryValue@HardwareContext@@IAAXXZ|

; 466  : 
; 467  :     m_fRequestedSysIntr    = TRUE;

  00034	e3a03001	 mov         r3, #1

; 468  :     m_IntrAudioTx = MapIrqToSysIntr(AUDIO_OUTPUT_DMA_IRQ);

  00038	e3a0100e	 mov         r1, #0xE
  0003c	e1a00004	 mov         r0, r4
  00040	e5843020	 str         r3, [r4, #0x20]
  00044	eb000000	 bl          |?MapIrqToSysIntr@HardwareContext@@IAAKK@Z|
  00048	e1a03000	 mov         r3, r0

; 469  :     m_IntrAudioRx = MapIrqToSysIntr(AUDIO_INPUT_DMA_IRQ);

  0004c	e1a00004	 mov         r0, r4
  00050	e3a0100f	 mov         r1, #0xF
  00054	e5843024	 str         r3, [r4, #0x24]
  00058	eb000000	 bl          |?MapIrqToSysIntr@HardwareContext@@IAAKK@Z|

; 470  :     if (m_IntrAudioTx == SYSINTR_UNDEFINED ||
; 471  :         m_IntrAudioRx == SYSINTR_UNDEFINED)

  0005c	e594e024	 ldr         lr, [r4, #0x24]
  00060	e5840028	 str         r0, [r4, #0x28]
  00064	e37e0001	 cmn         lr, #1
  00068	0a000036	 beq         |$LN5@InitInterr|
  0006c	e3700001	 cmn         r0, #1
  00070	0a000034	 beq         |$LN5@InitInterr|

; 472  :     {
; 473  :         return FALSE;
; 474  :     }
; 475  : 
; 476  :     m_fRxInterruptIntialized = InterruptInitialize(m_IntrAudioTx, m_hAudioInterruptTx, NULL, 0);

  00074	e5941038	 ldr         r1, [r4, #0x38]
  00078	e3a03000	 mov         r3, #0
  0007c	e3a02000	 mov         r2, #0
  00080	e1a0000e	 mov         r0, lr
  00084	eb000000	 bl          InterruptInitialize

; 477  :     m_fTxInterruptIntialized  = InterruptInitialize(m_IntrAudioRx, m_hAudioInterruptRx, NULL, 0);

  00088	e594103c	 ldr         r1, [r4, #0x3C]
  0008c	e1a0e000	 mov         lr, r0
  00090	e5940028	 ldr         r0, [r4, #0x28]
  00094	e3a03000	 mov         r3, #0
  00098	e3a02000	 mov         r2, #0
  0009c	e584e030	 str         lr, [r4, #0x30]
  000a0	eb000000	 bl          InterruptInitialize

; 478  :     
; 479  :     if (!m_fRxInterruptIntialized || !m_fTxInterruptIntialized)

  000a4	e5943030	 ldr         r3, [r4, #0x30]
  000a8	e5840034	 str         r0, [r4, #0x34]
  000ac	e3530000	 cmp         r3, #0
  000b0	0a000024	 beq         |$LN5@InitInterr|
  000b4	e3500000	 cmp         r0, #0
  000b8	0a000022	 beq         |$LN5@InitInterr|

; 480  :         return FALSE ;
; 481  : 
; 482  : 
; 483  :     m_hAudioInterruptThreadTx  = CreateThread((LPSECURITY_ATTRIBUTES)NULL,
; 484  :                                             0,
; 485  :                                             (LPTHREAD_START_ROUTINE)CallInterruptThreadTx,
; 486  :                                             this,
; 487  :                                             0,
; 488  :                                             NULL);

  000bc	e59f209c	 ldr         r2, [pc, #0x9C]
  000c0	e3a05000	 mov         r5, #0
  000c4	e1a03004	 mov         r3, r4
  000c8	e3a01000	 mov         r1, #0
  000cc	e3a00000	 mov         r0, #0
  000d0	e58d5004	 str         r5, [sp, #4]
  000d4	e58d5000	 str         r5, [sp]
  000d8	eb000000	 bl          CreateThread

; 489  :     m_hAudioInterruptThreadRx  = CreateThread((LPSECURITY_ATTRIBUTES)NULL,
; 490  :                                             0,
; 491  :                                             (LPTHREAD_START_ROUTINE)CallInterruptThreadRx,
; 492  :                                             this,
; 493  :                                             0,
; 494  :                                             NULL);

  000dc	e59f2078	 ldr         r2, [pc, #0x78]
  000e0	e1a03000	 mov         r3, r0
  000e4	e5843040	 str         r3, [r4, #0x40]
  000e8	e1a03004	 mov         r3, r4
  000ec	e3a00000	 mov         r0, #0
  000f0	e3a01000	 mov         r1, #0
  000f4	e58d5004	 str         r5, [sp, #4]
  000f8	e58d5000	 str         r5, [sp]
  000fc	eb000000	 bl          CreateThread

; 495  :     m_hTimeoutThread = CreateThread ((LPSECURITY_ATTRIBUTES)NULL,
; 496  :                                             0,
; 497  :                                             (LPTHREAD_START_ROUTINE)CallTimeoutThread,
; 498  :                                             this,
; 499  :                                             0,
; 500  :                                             NULL);

  00100	e59f2050	 ldr         r2, [pc, #0x50]
  00104	e1a03000	 mov         r3, r0
  00108	e5843044	 str         r3, [r4, #0x44]
  0010c	e1a03004	 mov         r3, r4
  00110	e3a00000	 mov         r0, #0
  00114	e3a01000	 mov         r1, #0
  00118	e58d5004	 str         r5, [sp, #4]
  0011c	e58d5000	 str         r5, [sp]
  00120	eb000000	 bl          CreateThread

; 501  :     return (m_hAudioInterruptThreadTx!=NULL && m_hAudioInterruptThreadRx!=NULL && m_hTimeoutThread!=NULL) ;

  00124	e5943040	 ldr         r3, [r4, #0x40]
  00128	e584004c	 str         r0, [r4, #0x4C]
  0012c	e3530000	 cmp         r3, #0
  00130	0a000004	 beq         |$LN5@InitInterr|
  00134	e5943044	 ldr         r3, [r4, #0x44]
  00138	e3530000	 cmp         r3, #0
  0013c	13500000	 cmpne       r0, #0
  00140	13a00001	 movne       r0, #1
  00144	1a000000	 bne         |$LN7@InitInterr|
  00148		 |$LN5@InitInterr|

; 463  :         return FALSE;

  00148	e3a00000	 mov         r0, #0
  0014c		 |$LN7@InitInterr|

; 502  : }

  0014c	e28dd008	 add         sp, sp, #8
  00150	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00154	e12fff1e	 bx          lr
  00158		 |$LN15@InitInterr|
  00158		 |$LN16@InitInterr|
  00158	00000000	 DCD         |?CallTimeoutThread@@YAXPAVHardwareContext@@@Z|
  0015c		 |$LN17@InitInterr|
  0015c	00000000	 DCD         |?CallInterruptThreadRx@@YAXPAVHardwareContext@@@Z|
  00160		 |$LN18@InitInterr|
  00160	00000000	 DCD         |?CallInterruptThreadTx@@YAXPAVHardwareContext@@@Z|
  00164		 |$M38279|

			 ENDP  ; |?InitInterruptThread@HardwareContext@@IAAHXZ|, HardwareContext::InitInterruptThread

	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T38296| DCD	|$LN6@scalar|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GHardwareContext@@UAAPAXI@Z| PROC	; HardwareContext::`scalar deleting destructor'
  00000		 |$LN6@scalar|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38293|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |??1HardwareContext@@UAA@XZ|
  00010	e3140001	 tst         r4, #1
  00014	11a00005	 movne       r0, r5
  00018	1b000000	 blne        |??3@YAXPAX@Z|
  0001c	e1a00005	 mov         r0, r5
  00020	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M38294|

			 ENDP  ; |??_GHardwareContext@@UAAPAXI@Z|, HardwareContext::`scalar deleting destructor'

	EXPORT	|?Init@HardwareContext@@QAAHK@Z|	; HardwareContext::Init
	IMPORT	|CreateBusAccessHandle|

  00000			 AREA	 |.pdata|, PDATA
|$T38310| DCD	|$LN12@Init|
	DCD	0x40002e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Init@HardwareContext@@QAAHK@Z| PROC	; HardwareContext::Init

; 127  : {

  00000		 |$LN12@Init|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38307|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0

; 128  :     DEBUGMSG(ZONE_AC,(TEXT("WAVEDEV: HardwareContext::Init Index=0x%x\r\n"), Index));
; 129  : 
; 130  :     if (m_Initialized)

  0000c	e594305c	 ldr         r3, [r4, #0x5C]
  00010	e3530000	 cmp         r3, #0

; 131  :     {
; 132  :         return FALSE;

  00014	13a00000	 movne       r0, #0

; 174  : }

  00018	18bd4030	 ldmneia     sp!, {r4, r5, lr}
  0001c	112fff1e	 bxne        lr

; 133  :     }
; 134  : 
; 135  :     m_hParent           = CreateBusAccessHandle((LPCTSTR) Index) ;

  00020	e1a00005	 mov         r0, r5
  00024	eb000000	 bl          CreateBusAccessHandle
  00028	e1a03000	 mov         r3, r0

; 136  : 
; 137  :     m_DriverIndex       = Index;
; 138  :     m_InPowerHandler    = FALSE;
; 139  :     m_InputDMARunning   = FALSE;
; 140  :     m_OutputDMARunning  = FALSE;
; 141  :     m_NumForcedSpeaker  = 0;
; 142  : 
; 143  :     m_bDMARunning       = FALSE;
; 144  :     m_bBtHeadsetSelected= FALSE;
; 145  :     m_dwBtAudioRouting  = BT_AUDIO_MODEM;

  0002c	e3a02002	 mov         r2, #2

; 146  :     m_bHeadsetPluggedIn = FALSE;    
; 147  :     m_bToggleLoadSpeaker= FALSE;   
; 148  :     m_hRil              = NULL;                 
; 149  :     
; 150  :     // Map registers and the DMA buffers into driver's virtual address space
; 151  :     if (!InitMemories())

  00030	e1a00004	 mov         r0, r4
  00034	e5843054	 str         r3, [r4, #0x54]
  00038	e3a03000	 mov         r3, #0
  0003c	e5845058	 str         r5, [r4, #0x58]
  00040	e5843060	 str         r3, [r4, #0x60]
  00044	e5843068	 str         r3, [r4, #0x68]
  00048	e584306c	 str         r3, [r4, #0x6C]
  0004c	e5843064	 str         r3, [r4, #0x64]
  00050	e58430c8	 str         r3, [r4, #0xC8]
  00054	e58430d8	 str         r3, [r4, #0xD8]
  00058	e58420dc	 str         r2, [r4, #0xDC]
  0005c	e58430cc	 str         r3, [r4, #0xCC]
  00060	e58430d0	 str         r3, [r4, #0xD0]
  00064	e58430d4	 str         r3, [r4, #0xD4]
  00068	eb000000	 bl          |?InitMemories@HardwareContext@@IAAHXZ|
  0006c	e3500000	 cmp         r0, #0
  00070	0a00000d	 beq         |$Exit$37359|

; 152  :     {
; 153  :         goto Exit;
; 154  :     }
; 155  : 
; 156  :     // Init codec.
; 157  :     InitCodec();

  00074	e5943000	 ldr         r3, [r4]
  00078	e1a00004	 mov         r0, r4
  0007c	e5933038	 ldr         r3, [r3, #0x38]
  00080	e1a0e00f	 mov         lr, pc
  00084	e12fff13	 bx          r3

; 158  : 
; 159  :     // Configure the DMA controller
; 160  :     InitDMA();

  00088	e1a00004	 mov         r0, r4
  0008c	eb000000	 bl          |?InitDMA@HardwareContext@@IAAXXZ|

; 161  : 
; 162  :     // Configure the controller
; 163  :     InitController();

  00090	e1a00004	 mov         r0, r4
  00094	eb000000	 bl          |?InitController@HardwareContext@@IAAXXZ|

; 164  : 
; 165  :     if (!InitInterruptThread())

  00098	e1a00004	 mov         r0, r4
  0009c	eb000000	 bl          |?InitInterruptThread@HardwareContext@@IAAHXZ|
  000a0	e3500000	 cmp         r0, #0

; 166  :     {
; 167  :         goto Exit;
; 168  :     }
; 169  : 
; 170  :     m_Initialized=TRUE;

  000a4	13a03001	 movne       r3, #1
  000a8	1584305c	 strne       r3, [r4, #0x5C]
  000ac		 |$Exit$37359|

; 171  : 
; 172  : Exit:
; 173  :     return m_Initialized;

  000ac	e594005c	 ldr         r0, [r4, #0x5C]

; 174  : }

  000b0	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000b4	e12fff1e	 bx          lr
  000b8		 |$M38308|

			 ENDP  ; |?Init@HardwareContext@@QAAHK@Z|, HardwareContext::Init

	END
