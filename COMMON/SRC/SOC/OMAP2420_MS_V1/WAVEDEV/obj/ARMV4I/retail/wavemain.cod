; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\OMAP2420_MS_V1\WAVEDEV\wavemain.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|GetCurrentProcessId|
	IMPORT	|__GetUserKData|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T37552| DCD	|$LN5@GetCurrent|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentProcessId| PROC

; 373  : _inline DWORD GetCurrentProcessId(void) {

  00000		 |$LN5@GetCurrent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37549|

; 374  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURPROC * sizeof(HANDLE)));

  00004	e3a0000c	 mov         r0, #0xC
  00008	eb000000	 bl          __GetUserKData

; 375  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37550|

			 ENDP  ; |GetCurrentProcessId|

	EXPORT	|?GetGain@DeviceContext@@QAAKXZ|	; DeviceContext::GetGain
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\devctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T37562| DCD	|$LN5@GetGain|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetGain@DeviceContext@@QAAKXZ| PROC	; DeviceContext::GetGain

; 56   :     {

  00000		 |$LN5@GetGain|
  00000		 |$M37559|

; 57   :         return m_dwGain;

  00000	e590000c	 ldr         r0, [r0, #0xC]

; 58   :     }

  00004	e12fff1e	 bx          lr
  00008		 |$M37560|

			 ENDP  ; |?GetGain@DeviceContext@@QAAKXZ|, DeviceContext::GetGain

	EXPORT	|?SetGain@DeviceContext@@QAAKK@Z|	; DeviceContext::SetGain
	IMPORT	|?RecalcAllGains@DeviceContext@@QAAXXZ|	; DeviceContext::RecalcAllGains

  00000			 AREA	 |.pdata|, PDATA
|$T37573| DCD	|$LN5@SetGain|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetGain@DeviceContext@@QAAKK@Z| PROC	; DeviceContext::SetGain

; 61   :     {

  00000		 |$LN5@SetGain|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37570|
  00004	e1a03000	 mov         r3, r0

; 62   :         m_dwGain = dwGain;
; 63   :         RecalcAllGains();

  00008	e583100c	 str         r1, [r3, #0xC]
  0000c	eb000000	 bl          |?RecalcAllGains@DeviceContext@@QAAXXZ|

; 64   :         return MMSYSERR_NOERROR;

  00010	e3a00000	 mov         r0, #0

; 65   :     }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M37571|

			 ENDP  ; |?SetGain@DeviceContext@@QAAKK@Z|, DeviceContext::SetGain

	EXPORT	|?SetSecondaryGainLimit@DeviceContext@@QAAKKK@Z| ; DeviceContext::SetSecondaryGainLimit

  00000			 AREA	 |.pdata|, PDATA
|$T37585| DCD	|$LN6@SetSeconda|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetSecondaryGainLimit@DeviceContext@@QAAKKK@Z| PROC ; DeviceContext::SetSecondaryGainLimit

; 84   :     {

  00000		 |$LN6@SetSeconda|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37582|

; 85   :         if (GainClass>=SECONDARYGAINCLASSMAX)

  00004	e3510004	 cmp         r1, #4

; 86   :         {
; 87   :             return MMSYSERR_ERROR;

  00008	23a00001	 movcs       r0, #1

; 92   :     }

  0000c	249de004	 ldrcs       lr, [sp], #4
  00010	212fff1e	 bxcs        lr

; 88   :         }
; 89   :         m_dwSecondaryGainLimit[GainClass]=Limit;

  00014	e0803101	 add         r3, r0, r1, lsl #2
  00018	e5832014	 str         r2, [r3, #0x14]

; 90   :         RecalcAllGains();

  0001c	eb000000	 bl          |?RecalcAllGains@DeviceContext@@QAAXXZ|

; 91   :         return MMSYSERR_NOERROR;

  00020	e3a00000	 mov         r0, #0

; 92   :     }

  00024	e49de004	 ldr         lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$M37583|

			 ENDP  ; |?SetSecondaryGainLimit@DeviceContext@@QAAKKK@Z|, DeviceContext::SetSecondaryGainLimit

	EXPORT	|?Lock@HardwareContext@@QAAXXZ|		; HardwareContext::Lock
	IMPORT	|EnterCriticalSection|
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T37593| DCD	|$LN5@Lock|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Lock@HardwareContext@@QAAXXZ| PROC	; HardwareContext::Lock

; 82   :     void Lock()   {EnterCriticalSection(&m_Lock);}

  00000		 |$LN5@Lock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37590|
  00004	e2800004	 add         r0, r0, #4
  00008	eb000000	 bl          EnterCriticalSection
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37591|

			 ENDP  ; |?Lock@HardwareContext@@QAAXXZ|, HardwareContext::Lock

	EXPORT	|?Unlock@HardwareContext@@QAAXXZ|	; HardwareContext::Unlock
	IMPORT	|LeaveCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37601| DCD	|$LN5@Unlock|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Unlock@HardwareContext@@QAAXXZ| PROC	; HardwareContext::Unlock

; 83   :     void Unlock() {LeaveCriticalSection(&m_Lock);}

  00000		 |$LN5@Unlock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37598|
  00004	e2800004	 add         r0, r0, #4
  00008	eb000000	 bl          LeaveCriticalSection
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37599|

			 ENDP  ; |?Unlock@HardwareContext@@QAAXXZ|, HardwareContext::Unlock

	EXPORT	|?GetNumInputDevices@HardwareContext@@QAAKXZ| ; HardwareContext::GetNumInputDevices

  00000			 AREA	 |.pdata|, PDATA
|$T37610| DCD	|$LN5@GetNumInpu|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetNumInputDevices@HardwareContext@@QAAKXZ| PROC ; HardwareContext::GetNumInputDevices

; 85   :     DWORD GetNumInputDevices()  {return 1;}

  00000		 |$LN5@GetNumInpu|
  00000		 |$M37607|
  00000	e3a00001	 mov         r0, #1
  00004	e12fff1e	 bx          lr
  00008		 |$M37608|

			 ENDP  ; |?GetNumInputDevices@HardwareContext@@QAAKXZ|, HardwareContext::GetNumInputDevices

	EXPORT	|?GetNumOutputDevices@HardwareContext@@QAAKXZ| ; HardwareContext::GetNumOutputDevices

  00000			 AREA	 |.pdata|, PDATA
|$T37619| DCD	|$LN5@GetNumOutp|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetNumOutputDevices@HardwareContext@@QAAKXZ| PROC ; HardwareContext::GetNumOutputDevices

; 86   :     DWORD GetNumOutputDevices() {return 1;}

  00000		 |$LN5@GetNumOutp|
  00000		 |$M37616|
  00000	e3a00001	 mov         r0, #1
  00004	e12fff1e	 bx          lr
  00008		 |$M37617|

			 ENDP  ; |?GetNumOutputDevices@HardwareContext@@QAAKXZ|, HardwareContext::GetNumOutputDevices

	EXPORT	|?GetInputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z| ; HardwareContext::GetInputDeviceContext

  00000			 AREA	 |.pdata|, PDATA
|$T37629| DCD	|$LN5@GetInputDe|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetInputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z| PROC ; HardwareContext::GetInputDeviceContext

; 89   :     {

  00000		 |$LN5@GetInputDe|
  00000		 |$M37626|

; 90   :         return &m_InputDeviceContext;

  00000	e2800070	 add         r0, r0, #0x70

; 91   :     }

  00004	e12fff1e	 bx          lr
  00008		 |$M37627|

			 ENDP  ; |?GetInputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z|, HardwareContext::GetInputDeviceContext

	EXPORT	|?GetOutputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z| ; HardwareContext::GetOutputDeviceContext

  00000			 AREA	 |.pdata|, PDATA
|$T37639| DCD	|$LN5@GetOutputD|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetOutputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z| PROC ; HardwareContext::GetOutputDeviceContext

; 94   :     {

  00000		 |$LN5@GetOutputD|
  00000		 |$M37636|

; 95   :         return &m_OutputDeviceContext;

  00000	e2800094	 add         r0, r0, #0x94

; 96   :     }

  00004	e12fff1e	 bx          lr
  00008		 |$M37637|

			 ENDP  ; |?GetOutputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z|, HardwareContext::GetOutputDeviceContext

	EXPORT	|?GetDeviceContext@StreamContext@@QAAPAVDeviceContext@@XZ| ; StreamContext::GetDeviceContext
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\strmctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T37649| DCD	|$LN5@GetDeviceC|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDeviceContext@StreamContext@@QAAPAVDeviceContext@@XZ| PROC ; StreamContext::GetDeviceContext

; 94   :     DeviceContext *GetDeviceContext() { return m_pDeviceContext; }

  00000		 |$LN5@GetDeviceC|
  00000		 |$M37646|
  00000	e5900050	 ldr         r0, [r0, #0x50]
  00004	e12fff1e	 bx          lr
  00008		 |$M37647|

			 ENDP  ; |?GetDeviceContext@StreamContext@@QAAPAVDeviceContext@@XZ|, StreamContext::GetDeviceContext

	EXPORT	|?GetGain@StreamContext@@QAAKXZ|	; StreamContext::GetGain

  00000			 AREA	 |.pdata|, PDATA
|$T37659| DCD	|$LN5@GetGain@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetGain@StreamContext@@QAAKXZ| PROC	; StreamContext::GetGain

; 130  :     {

  00000		 |$LN5@GetGain@2|
  00000		 |$M37656|

; 131  :         return m_dwGain;

  00000	e5900058	 ldr         r0, [r0, #0x58]

; 132  :     }

  00004	e12fff1e	 bx          lr
  00008		 |$M37657|

			 ENDP  ; |?GetGain@StreamContext@@QAAKXZ|, StreamContext::GetGain

	EXPORT	|?SetGain@StreamContext@@QAAKK@Z|	; StreamContext::SetGain

  00000			 AREA	 |.pdata|, PDATA
|$T37670| DCD	|$LN5@SetGain@2|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetGain@StreamContext@@QAAKK@Z| PROC	; StreamContext::SetGain

; 135  :     {

  00000		 |$LN5@SetGain@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37667|
  00004	e1a02000	 mov         r2, r0

; 136  :         m_dwGain = dwGain;
; 137  :         GainChange();

  00008	e5923000	 ldr         r3, [r2]
  0000c	e5821058	 str         r1, [r2, #0x58]
  00010	e5933030	 ldr         r3, [r3, #0x30]
  00014	e1a0e00f	 mov         lr, pc
  00018	e12fff13	 bx          r3

; 138  :         return MMSYSERR_NOERROR;

  0001c	e3a00000	 mov         r0, #0

; 139  :     }

  00020	e49de004	 ldr         lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$M37668|

			 ENDP  ; |?SetGain@StreamContext@@QAAKK@Z|, StreamContext::SetGain

	EXPORT	|?SetSecondaryGainClass@StreamContext@@QAAKK@Z| ; StreamContext::SetSecondaryGainClass

  00000			 AREA	 |.pdata|, PDATA
|$T37681| DCD	|$LN6@SetSeconda@2|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetSecondaryGainClass@StreamContext@@QAAKK@Z| PROC ; StreamContext::SetSecondaryGainClass

; 142  :     {

  00000		 |$LN6@SetSeconda@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37678|
  00004	e1a02000	 mov         r2, r0

; 143  :         if (GainClass>=SECONDARYGAINCLASSMAX)

  00008	e3510004	 cmp         r1, #4

; 144  :         {
; 145  :             return MMSYSERR_ERROR;

  0000c	23a00001	 movcs       r0, #1

; 150  :     }

  00010	249de004	 ldrcs       lr, [sp], #4
  00014	212fff1e	 bxcs        lr

; 146  :         }
; 147  :         m_SecondaryGainClass=GainClass;
; 148  :         GainChange();

  00018	e5923000	 ldr         r3, [r2]
  0001c	e1a00002	 mov         r0, r2
  00020	e5933030	 ldr         r3, [r3, #0x30]
  00024	e582105c	 str         r1, [r2, #0x5C]
  00028	e1a0e00f	 mov         lr, pc
  0002c	e12fff13	 bx          r3

; 149  :         return MMSYSERR_NOERROR;

  00030	e3a00000	 mov         r0, #0

; 150  :     }

  00034	e49de004	 ldr         lr, [sp], #4
  00038	e12fff1e	 bx          lr
  0003c		 |$M37679|

			 ENDP  ; |?SetSecondaryGainClass@StreamContext@@QAAKK@Z|, StreamContext::SetSecondaryGainClass

	EXPORT	|DllMain|
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\wavemain.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T37690| DCD	|$LN6@DllMain|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DllMain| PROC

; 58   : {

  00000		 |$LN6@DllMain|
  00000		 |$M37687|

; 59   :     if ( dwReason==DLL_PROCESS_ATTACH )
; 60   :     {
; 61   :         DEBUGREGISTER((HMODULE)hDLL);
; 62   :     }
; 63   : 
; 64   :     return TRUE;

  00000	e3a00001	 mov         r0, #1

; 65   : }

  00004	e12fff1e	 bx          lr
  00008		 |$M37688|

			 ENDP  ; |DllMain|

	EXPORT	|WAV_Init|
	IMPORT	|?CreateHWContext@HardwareContext@@SAHK@Z| ; HardwareContext::CreateHWContext

  00000			 AREA	 |.pdata|, PDATA
|$T37700| DCD	|$LN5@WAV_Init|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |WAV_Init| PROC

; 134  : {

  00000		 |$LN5@WAV_Init|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37697|

; 135  :     return (DWORD)HardwareContext::CreateHWContext(Index);

  00004	eb000000	 bl          |?CreateHWContext@HardwareContext@@SAHK@Z|

; 136  : }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M37698|

			 ENDP  ; |WAV_Init|

	EXPORT	|WAV_Deinit|
	IMPORT	|?Deinit@HardwareContext@@QAAHXZ|	; HardwareContext::Deinit
	IMPORT	|?g_pHWContext@@3PAVHardwareContext@@A|	; g_pHWContext

  00000			 AREA	 |.pdata|, PDATA
|$T37709| DCD	|$LN5@WAV_Deinit|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |WAV_Deinit| PROC

; 151  : {

  00000		 |$LN5@WAV_Deinit|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37706|

; 152  :     ASSERT(g_pHWContext!=NULL);
; 153  :     return g_pHWContext->Deinit();

  00004	e59f300c	 ldr         r3, [pc, #0xC]
  00008	e5930000	 ldr         r0, [r3]
  0000c	eb000000	 bl          |?Deinit@HardwareContext@@QAAHXZ|

; 154  : }

  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$LN6@WAV_Deinit|
  00018		 |$LN7@WAV_Deinit|
  00018	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  0001c		 |$M37707|

			 ENDP  ; |WAV_Deinit|

	EXPORT	|WAV_Open|
	IMPORT	|??2@YAPAXI@Z|				; operator new

  00000			 AREA	 |.pdata|, PDATA
|$T37724| DCD	|$LN7@WAV_Open|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |WAV_Open| PROC

; 178  : {

  00000		 |$LN7@WAV_Open|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37721|

; 179  :     // allocate and return handle context to efficiently verify caller trust level
; 180  :     return new DWORD(NULL); // assume untrusted. Can't tell for sure until WAV_IoControl

  00004	e3a00004	 mov         r0, #4
  00008	eb000000	 bl          |??2@YAPAXI@Z|
  0000c	e3500000	 cmp         r0, #0
  00010	13a03000	 movne       r3, #0
  00014	15803000	 strne       r3, [r0]

; 181  : }

  00018	149de004	 ldrne       lr, [sp], #4

; 179  :     // allocate and return handle context to efficiently verify caller trust level
; 180  :     return new DWORD(NULL); // assume untrusted. Can't tell for sure until WAV_IoControl

  0001c	03a00000	 moveq       r0, #0

; 181  : }

  00020	049de004	 ldreq       lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$M37722|

			 ENDP  ; |WAV_Open|

	EXPORT	|WAV_Close|
	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T37735| DCD	|$LN5@WAV_Close|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |WAV_Close| PROC

; 196  : {

  00000		 |$LN5@WAV_Close|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37732|

; 197  :     // we trust the device manager to give us a valid context to free.
; 198  :     delete pdwData;

  00004	eb000000	 bl          |??3@YAXPAX@Z|

; 199  :     return(TRUE);

  00008	e3a00001	 mov         r0, #1

; 200  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37733|

			 ENDP  ; |WAV_Close|

	EXPORT	|?HandleWaveMessage@@YAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z| ; HandleWaveMessage
	EXPORT	|??_C@_1JE@OMJBAMM@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@PLNLJNDI@?$AAA?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAv?$AAi?$AAo?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAW?$AAa?$AAv?$AAe?$AAM?$AAe@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|
	IMPORT	|?NotifyBtHeadsetOn@HardwareContext@@QAAXK@Z| ; HardwareContext::NotifyBtHeadsetOn
	IMPORT	|?ForceSpeaker@HardwareContext@@QAAKH@Z| ; HardwareContext::ForceSpeaker
	IMPORT	|?ForceSpeaker@StreamContext@@QAAKH@Z|	; StreamContext::ForceSpeaker
	IMPORT	|?MidiMessage@CMidiStream@@QAAKI@Z|	; CMidiStream::MidiMessage
	IMPORT	|?Release@StreamContext@@QAAJXZ|	; StreamContext::Release
	IMPORT	|?GetRate@WaveStreamContext@@QAAKPAK@Z|	; WaveStreamContext::GetRate
	IMPORT	|?BreakLoop@StreamContext@@QAAKXZ|	; StreamContext::BreakLoop
	IMPORT	|?OpenStream@DeviceContext@@QAAKPAUwaveopendesc_tag@@KPAPAVStreamContext@@@Z| ; DeviceContext::OpenStream
	IMPORT	|SetLastError|
	IMPORT	|__C_specific_handler|
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\hwctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T37881| DCD	|$LN131@HandleWave|
	DCD	0xc0010605

  00000			 AREA	 |.pdata|, PDATA
|$T37883| DCD	|$LN57@HandleWave|
	DCD	0x40000b01

  00000			 AREA	 |.xdata|, DATA
|$T37879| DCD	0x1
	DCD	|$LN61@HandleWave|
	DCD	|$LN62@HandleWave|
	DCD	|$LN57@HandleWave|
	DCD	|$LN58@HandleWave|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JE@OMJBAMM@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "_", 0x0, "M", 0x0, "S", 0x0, "_", 0x0, "V"
	DCB	0x0, "1", 0x0, "\\", 0x0, "W", 0x0, "A", 0x0, "V", 0x0, "E"
	DCB	0x0, "D", 0x0, "E", 0x0, "V", 0x0, "\\", 0x0, ".", 0x0, "\\"
	DCB	0x0, "w", 0x0, "a", 0x0, "v", 0x0, "e", 0x0, "m", 0x0, "a"
	DCB	0x0, "i", 0x0, "n", 0x0, ".", 0x0, "c", 0x0, "p", 0x0, "p"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ":", 0x0, " "
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@PLNLJNDI@?$AAA?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAv?$AAi?$AAo?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAW?$AAa?$AAv?$AAe?$AAM?$AAe@| DCB "A"
	DCB	0x0, "c", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, " "
	DCB	0x0, "v", 0x0, "i", 0x0, "o", 0x0, "l", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, " ", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l"
	DCB	0x0, "e", 0x0, "W", 0x0, "a", 0x0, "v", 0x0, "e", 0x0, "M"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "a", 0x0, "g", 0x0, "e"
	DCB	0x0, "!", 0x0, "!", 0x0, "!", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\wavemain.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T37879|

  00008		 |?HandleWaveMessage@@YAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z| PROC ; HandleWaveMessage

; 205  : {

  00008		 |$LN131@HandleWave|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d0003	 stmdb       sp!, {r0, r1}
  00010	e92d5ff0	 stmdb       sp!, {r4 - r12, lr}
  00014	e28db028	 add         r11, sp, #0x28
  00018	e24dd008	 sub         sp, sp, #8
  0001c		 |$LN129@HandleWave|
  0001c	e1a0a001	 mov         r10, r1
  00020	e58ba004	 str         r10, [r11, #4]
  00024	e1a08000	 mov         r8, r0

; 206  :     //  set the error code to be no error first
; 207  :     SetLastError(MMSYSERR_NOERROR);

  00028	e3a00000	 mov         r0, #0
  0002c	eb000000	 bl          SetLastError

; 208  : 
; 209  :     UINT uMsg = pParams->uMsg;
; 210  :     UINT uDeviceId = pParams->uDeviceId;
; 211  :     DWORD dwParam1 = pParams->dwParam1;
; 212  :     DWORD dwParam2 = pParams->dwParam2;
; 213  :     DWORD dwUser   = pParams->dwUser;
; 214  :     StreamContext *pStreamContext = (StreamContext *)dwUser;
; 215  :     DWORD dwRet=MMSYSERR_NOTSUPPORTED;
; 216  : 
; 217  :     g_pHWContext->Lock();

  00030	e59f7404	 ldr         r7, [pc, #0x404]
  00034	e3a02008	 mov         r2, #8
  00038	e5984004	 ldr         r4, [r8, #4]
  0003c	e5973000	 ldr         r3, [r7]
  00040	e598600c	 ldr         r6, [r8, #0xC]
  00044	e5989010	 ldr         r9, [r8, #0x10]
  00048	e2830004	 add         r0, r3, #4
  0004c	e5985008	 ldr         r5, [r8, #8]
  00050	e50b2030	 str         r2, [r11, #-0x30]
  00054	eb000000	 bl          EnterCriticalSection
  00058		 |$LN61@HandleWave|

; 218  : 
; 219  :     // catch exceptions inside device lock, otherwise device will remain locked!
; 220  :     _try
; 221  :     {
; 222  : 
; 223  :     switch (uMsg)

  00058	e3540032	 cmp         r4, #0x32
  0005c	8a00005a	 bhi         |$LN50@HandleWave|
  00060	0a000010	 beq         |$LN44@HandleWave|
  00064	e2442003	 sub         r2, r4, #3
  00068	e3520013	 cmp         r2, #0x13
  0006c	8a0000a7	 bhi         |$LN2@HandleWave|
  00070	e1a03082	 mov         r3, r2, lsl #1
  00074	e083300f	 add         r3, r3, pc
  00078	e1d330b4	 ldrh        r3, [r3, #4]
  0007c	e08ff003	 add         pc, pc, r3
  00080		 |$LN134@HandleWave|
  00080		 |$LN133@HandleWave|
  00080		 |$LN135@HandleWave|
  00080	0024		 DCW         0x24
  00082		 |$LN136@HandleWave|
  00082	002c		 DCW         0x2c
  00084		 |$LN137@HandleWave|
  00084	0058		 DCW         0x58
  00086		 |$LN138@HandleWave|
  00086	01d0		 DCW         0x1d0
  00088		 |$LN139@HandleWave|
  00088	028c		 DCW         0x28c
  0008a		 |$LN140@HandleWave|
  0008a	028c		 DCW         0x28c
  0008c		 |$LN141@HandleWave|
  0008c	01b4		 DCW         0x1b4
  0008e		 |$LN142@HandleWave|
  0008e	0184		 DCW         0x184
  00090		 |$LN143@HandleWave|
  00090	019c		 DCW         0x19c
  00092		 |$LN144@HandleWave|
  00092	0234		 DCW         0x234
  00094		 |$LN145@HandleWave|
  00094	0318		 DCW         0x318
  00096		 |$LN146@HandleWave|
  00096	028c		 DCW         0x28c
  00098		 |$LN147@HandleWave|
  00098	028c		 DCW         0x28c
  0009a		 |$LN148@HandleWave|
  0009a	00a0		 DCW         0xa0
  0009c		 |$LN149@HandleWave|
  0009c	00bc		 DCW         0xbc
  0009e		 |$LN150@HandleWave|
  0009e	0138		 DCW         0x138
  000a0		 |$LN151@HandleWave|
  000a0	011c		 DCW         0x11c
  000a2		 |$LN152@HandleWave|
  000a2	0110		 DCW         0x110
  000a4		 |$LN153@HandleWave|
  000a4	028c		 DCW         0x28c
  000a6		 |$LN154@HandleWave|
  000a6	0074		 DCW         0x74
  000a8		 |$LN44@HandleWave|

; 224  :     {
; 225  :     case WODM_GETNUMDEVS:
; 226  :         {
; 227  :             dwRet = g_pHWContext->GetNumOutputDevices();

  000a8	e3a04001	 mov         r4, #1

; 228  :             break;

  000ac	ea0000c1	 b           |$LN121@HandleWave|
  000b0		 |$LN42@HandleWave|

; 229  :         }
; 230  : 
; 231  :     case WIDM_GETNUMDEVS:
; 232  :         {
; 233  :             dwRet = g_pHWContext->GetNumInputDevices();
; 234  :             break;
; 235  :         }
; 236  : 
; 237  :     case WODM_GETDEVCAPS:
; 238  :         {
; 239  :             DeviceContext *pDeviceContext;
; 240  :             UINT NumDevs = g_pHWContext->GetNumOutputDevices();
; 241  : 
; 242  :             if (pStreamContext)

  000b0	e3550000	 cmp         r5, #0

; 243  :             {
; 244  :                 pDeviceContext=pStreamContext->GetDeviceContext();

  000b4	15950050	 ldrne       r0, [r5, #0x50]

; 245  :             }
; 246  :             else
; 247  :             {
; 248  :                 pDeviceContext = g_pHWContext->GetOutputDeviceContext(uDeviceId);

  000b8	05973000	 ldreq       r3, [r7]
  000bc	02830094	 addeq       r0, r3, #0x94

; 249  :             }
; 250  : 
; 251  :             dwRet = pDeviceContext->GetDevCaps((PVOID)dwParam1,dwParam2);

  000c0	e5903000	 ldr         r3, [r0]
  000c4	e1a02009	 mov         r2, r9
  000c8	e1a01006	 mov         r1, r6
  000cc	e5933008	 ldr         r3, [r3, #8]
  000d0	e1a0e00f	 mov         lr, pc
  000d4	e12fff13	 bx          r3

; 252  :             break;

  000d8	ea0000b5	 b           |$LN122@HandleWave|
  000dc		 |$LN36@HandleWave|

; 272  :         }
; 273  : 
; 274  :     case WODM_OPEN:
; 275  :         {
; 276  :             DEBUGMSG(ZONE_WODM, (TEXT("WODM_OPEN\r\n")));
; 277  :             DeviceContext *pDeviceContext = g_pHWContext->GetOutputDeviceContext(uDeviceId);

  000dc	e5971000	 ldr         r1, [r7]

; 278  :             dwRet = pDeviceContext->OpenStream((LPWAVEOPENDESC)dwParam1, dwParam2, (StreamContext **)dwUser);

  000e0	e2810094	 add         r0, r1, #0x94
  000e4		 |$LN128@HandleWave|
  000e4	e1a02009	 mov         r2, r9
  000e8	e1a03005	 mov         r3, r5
  000ec	e1a01006	 mov         r1, r6
  000f0	eb000000	 bl          |?OpenStream@DeviceContext@@QAAKPAUwaveopendesc_tag@@KPAPAVStreamContext@@@Z|

; 279  :             break;

  000f4	ea0000ae	 b           |$LN122@HandleWave|
  000f8		 |$LN35@HandleWave|

; 280  :         }
; 281  : 
; 282  :     case WODM_GETEXTDEVCAPS:
; 283  :         {
; 284  :             DeviceContext *pDeviceContext;
; 285  :             UINT NumDevs = g_pHWContext->GetNumOutputDevices();
; 286  : 
; 287  :             if (pStreamContext)

  000f8	e3550000	 cmp         r5, #0

; 288  :             {
; 289  :                 pDeviceContext=pStreamContext->GetDeviceContext();

  000fc	15950050	 ldrne       r0, [r5, #0x50]

; 290  :             }
; 291  :             else
; 292  :             {
; 293  :                 pDeviceContext = g_pHWContext->GetOutputDeviceContext(uDeviceId);

  00100	05973000	 ldreq       r3, [r7]
  00104	02830094	 addeq       r0, r3, #0x94

; 294  :             }
; 295  : 
; 296  :             dwRet = pDeviceContext->GetExtDevCaps((PVOID)dwParam1,dwParam2);

  00108	e5903000	 ldr         r3, [r0]
  0010c	e1a02009	 mov         r2, r9
  00110	e1a01006	 mov         r1, r6
  00114	e5933004	 ldr         r3, [r3, #4]
  00118	e1a0e00f	 mov         lr, pc
  0011c	e12fff13	 bx          r3

; 297  :             break;

  00120	ea0000a3	 b           |$LN122@HandleWave|
  00124		 |$LN24@HandleWave|

; 362  :         }
; 363  : 
; 364  :     case WODM_GETVOLUME:
; 365  :         {
; 366  :             PDWORD pdwGain = (PDWORD)dwParam1;
; 367  :             UINT NumDevs = g_pHWContext->GetNumOutputDevices();
; 368  : 
; 369  :             if (pStreamContext)

  00124	e3550000	 cmp         r5, #0

; 370  :             {
; 371  :                 *pdwGain = pStreamContext->GetGain();

  00128	15953058	 ldrne       r3, [r5, #0x58]

; 372  :             }
; 373  :             else
; 374  :             {
; 375  :                 DeviceContext *pDeviceContext = g_pHWContext->GetOutputDeviceContext(uDeviceId);

  0012c	05973000	 ldreq       r3, [r7]

; 376  :                 *pdwGain = pDeviceContext->GetGain();

  00130	059330a0	 ldreq       r3, [r3, #0xA0]
  00134	e5863000	 str         r3, [r6]
  00138		 |$LN126@HandleWave|

; 377  :             }
; 378  :             dwRet = MMSYSERR_NOERROR;

  00138	e3a04000	 mov         r4, #0

; 379  :             break;

  0013c	ea00009d	 b           |$LN121@HandleWave|
  00140		 |$LN21@HandleWave|
  00140	e3a03cff	 mov         r3, #0xFF, 24

; 380  :         }
; 381  : 
; 382  :     case WODM_SETVOLUME:
; 383  :         {
; 384  :             UINT NumDevs = g_pHWContext->GetNumOutputDevices();
; 385  :             LONG dwGain = dwParam1 & 0xffff;

  00144	e38330ff	 orr         r3, r3, #0xFF
  00148	e0063003	 and         r3, r6, r3

; 386  :             LONG ulRight = (dwParam1>>16);

  0014c	e1a02826	 mov         r2, r6, lsr #16

; 387  : 
; 388  :             // Left and rights volume are the same.
; 389  :             if (ulRight>dwGain)

  00150	e1520003	 cmp         r2, r3

; 390  :             {
; 391  :                 dwGain = (ulRight<<16) + ulRight;

  00154	c0822802	 addgt       r2, r2, r2, lsl #16

; 392  :             }
; 393  :             else
; 394  :             {
; 395  :                 dwGain = (dwGain<<16) + dwGain;

  00158	d0832803	 addle       r2, r3, r3, lsl #16

; 396  :             }
; 397  : 
; 398  :             if (pStreamContext)

  0015c	e3550000	 cmp         r5, #0
  00160	0a000006	 beq         |$LN18@HandleWave|

; 399  :             {
; 400  :                 dwRet = pStreamContext->SetGain(dwGain);

  00164	e5852058	 str         r2, [r5, #0x58]
  00168	e5953000	 ldr         r3, [r5]
  0016c	e1a00005	 mov         r0, r5
  00170	e5933030	 ldr         r3, [r3, #0x30]
  00174	e1a0e00f	 mov         lr, pc
  00178	e12fff13	 bx          r3

; 401  :                 DEBUGMSG(ZONE_WODM, (TEXT("WODM_SETVOLUME, stream=0x%x\r\n"),dwGain));
; 402  :             }
; 403  :             else

  0017c	eaffffed	 b           |$LN126@HandleWave|
  00180		 |$LN18@HandleWave|

; 404  :             {
; 405  :                 DeviceContext *pDeviceContext = g_pHWContext->GetOutputDeviceContext(uDeviceId);

  00180	e5973000	 ldr         r3, [r7]

; 406  :                 dwRet = pDeviceContext->SetGain(dwGain);

  00184	e2830094	 add         r0, r3, #0x94
  00188	e58320a0	 str         r2, [r3, #0xA0]
  0018c		 |$LN127@HandleWave|
  0018c	eb000000	 bl          |?RecalcAllGains@DeviceContext@@QAAXXZ|

; 407  :                 DEBUGMSG(ZONE_WODM, (TEXT("WODM_SETVOLUME, device=0x%x\r\n"),dwGain));
; 408  :             }
; 409  :             break;

  00190	eaffffe8	 b           |$LN126@HandleWave|
  00194		 |$LN16@HandleWave|

; 410  :         }
; 411  : 
; 412  :     case WODM_BREAKLOOP:
; 413  :         {
; 414  :             dwRet = pStreamContext->BreakLoop();

  00194	e1a00005	 mov         r0, r5
  00198	eb000000	 bl          |?BreakLoop@StreamContext@@QAAKXZ|

; 415  :             break;

  0019c	ea000084	 b           |$LN122@HandleWave|
  001a0		 |$LN15@HandleWave|

; 416  :         }
; 417  : 
; 418  :     case WODM_SETPLAYBACKRATE:
; 419  :         {
; 420  :             WaveStreamContext *pWaveStream = (WaveStreamContext *)dwUser;
; 421  :             dwRet = pWaveStream->SetRate(dwParam1);

  001a0	e5953000	 ldr         r3, [r5]
  001a4	e1a01006	 mov         r1, r6
  001a8	e1a00005	 mov         r0, r5
  001ac	e5933034	 ldr         r3, [r3, #0x34]
  001b0	e1a0e00f	 mov         lr, pc
  001b4	e12fff13	 bx          r3

; 422  :             break;

  001b8	ea00007d	 b           |$LN122@HandleWave|
  001bc		 |$LN14@HandleWave|

; 423  :         }
; 424  : 
; 425  :     case WODM_GETPLAYBACKRATE:
; 426  :         {
; 427  :             WaveStreamContext *pWaveStream = (WaveStreamContext *)dwUser;
; 428  :             dwRet = pWaveStream->GetRate((DWORD *)dwParam1);

  001bc	e1a01006	 mov         r1, r6
  001c0	e1a00005	 mov         r0, r5
  001c4	eb000000	 bl          |?GetRate@WaveStreamContext@@QAAKPAK@Z|

; 429  :             break;

  001c8	ea000079	 b           |$LN122@HandleWave|
  001cc		 |$LN50@HandleWave|

; 218  : 
; 219  :     // catch exceptions inside device lock, otherwise device will remain locked!
; 220  :     _try
; 221  :     {
; 222  : 
; 223  :     switch (uMsg)

  001cc	e354003b	 cmp         r4, #0x3B
  001d0	8a00003e	 bhi         |$LN51@HandleWave|
  001d4	0a000037	 beq         |$LN26@HandleWave|
  001d8	e3540033	 cmp         r4, #0x33
  001dc	0a00002a	 beq         |$LN39@HandleWave|
  001e0	e3540034	 cmp         r4, #0x34
  001e4	0a000025	 beq         |$LN32@HandleWave|
  001e8	e3540035	 cmp         r4, #0x35
  001ec	0a000018	 beq         |$LN31@HandleWave|
  001f0	e3540038	 cmp         r4, #0x38
  001f4	0a00000f	 beq         |$LN25@HandleWave|
  001f8	e3540039	 cmp         r4, #0x39
  001fc	0a000007	 beq         |$LN29@HandleWave|
  00200	e354003a	 cmp         r4, #0x3A
  00204	1a000041	 bne         |$LN2@HandleWave|
  00208		 |$LN28@HandleWave|

; 330  :         }
; 331  : 
; 332  :     case WODM_PAUSE:
; 333  :     case WIDM_STOP:
; 334  :         {
; 335  :             DEBUGMSG(ZONE_WODM|ZONE_WIDM, (TEXT("WODM_PAUSE/WIDM_STOP\r\n")));
; 336  :             dwRet = pStreamContext->Stop();

  00208	e5953000	 ldr         r3, [r5]
  0020c	e1a00005	 mov         r0, r5
  00210	e5933014	 ldr         r3, [r3, #0x14]
  00214	e1a0e00f	 mov         lr, pc
  00218	e12fff13	 bx          r3

; 337  :             break;

  0021c	ea000064	 b           |$LN122@HandleWave|
  00220		 |$LN29@HandleWave|

; 322  :         }
; 323  : 
; 324  :     case WODM_RESTART:
; 325  :     case WIDM_START:
; 326  :         {
; 327  :             DEBUGMSG(ZONE_WODM|ZONE_WIDM, (TEXT("WODM_RESTART/WIDM_START\r\n")));
; 328  :             dwRet = pStreamContext->Run();

  00220	e5953000	 ldr         r3, [r5]
  00224	e1a00005	 mov         r0, r5
  00228	e5933010	 ldr         r3, [r3, #0x10]
  0022c	e1a0e00f	 mov         lr, pc
  00230	e12fff13	 bx          r3

; 329  :             break;

  00234	ea00005e	 b           |$LN122@HandleWave|
  00238		 |$LN25@HandleWave|

; 354  :         }
; 355  : 
; 356  :     case WODM_WRITE:
; 357  :     case WIDM_ADDBUFFER:
; 358  :         {
; 359  :             DEBUGMSG(ZONE_WODM|ZONE_WIDM, (TEXT("WODM_WRITE/WIDM_ADDBUFFER, Buffer=0x%x\r\n"),dwParam1));
; 360  :             dwRet = pStreamContext->QueueBuffer((LPWAVEHDR)dwParam1);

  00238	e5953000	 ldr         r3, [r5]
  0023c	e1a01006	 mov         r1, r6
  00240	e1a00005	 mov         r0, r5
  00244	e593302c	 ldr         r3, [r3, #0x2C]
  00248	e1a0e00f	 mov         lr, pc
  0024c	e12fff13	 bx          r3

; 361  :             break;

  00250	ea000057	 b           |$LN122@HandleWave|
  00254		 |$LN31@HandleWave|

; 306  :         }
; 307  : 
; 308  :     case WODM_CLOSE:
; 309  :     case WIDM_CLOSE:
; 310  :         {
; 311  :             DEBUGMSG(ZONE_WODM|ZONE_WIDM, (TEXT("WIDM_CLOSE/WODM_CLOSE\r\n")));
; 312  :             dwRet = pStreamContext->Close();

  00254	e5953000	 ldr         r3, [r5]
  00258	e1a00005	 mov         r0, r5
  0025c	e5933008	 ldr         r3, [r3, #8]
  00260	e1a0e00f	 mov         lr, pc
  00264	e12fff13	 bx          r3
  00268	e1b04000	 movs        r4, r0
  0026c	e50b4030	 str         r4, [r11, #-0x30]

; 313  : 
; 314  :             // Release stream context here, rather than inside StreamContext::Close, so that if someone
; 315  :             // (like CMidiStream) has subclassed Close there's no chance that the object will get released
; 316  :             // out from under them.
; 317  :             if (dwRet==MMSYSERR_NOERROR)

  00270	1a000051	 bne         |$LN62@HandleWave|

; 318  :             {
; 319  :                 pStreamContext->Release();

  00274	e1a00005	 mov         r0, r5
  00278	eb000000	 bl          |?Release@StreamContext@@QAAJXZ|

; 320  :             }
; 321  :             break;

  0027c	ea00004e	 b           |$LN62@HandleWave|
  00280		 |$LN32@HandleWave|

; 298  :         }
; 299  : 
; 300  :     case WIDM_OPEN:
; 301  :         {
; 302  :             DEBUGMSG(ZONE_WIDM, (TEXT("WIDM_OPEN\r\n")));
; 303  :             DeviceContext *pDeviceContext = g_pHWContext->GetInputDeviceContext(uDeviceId);

  00280	e5971000	 ldr         r1, [r7]

; 304  :             dwRet = pDeviceContext->OpenStream((LPWAVEOPENDESC)dwParam1, dwParam2, (StreamContext **)dwUser);

  00284	e2810070	 add         r0, r1, #0x70

; 305  :             break;

  00288	eaffff95	 b           |$LN128@HandleWave|
  0028c		 |$LN39@HandleWave|

; 253  :         }
; 254  : 
; 255  : 
; 256  :     case WIDM_GETDEVCAPS:
; 257  :         {
; 258  :             DeviceContext *pDeviceContext;
; 259  :             UINT NumDevs = g_pHWContext->GetNumInputDevices();
; 260  : 
; 261  :             if (pStreamContext)

  0028c	e3550000	 cmp         r5, #0

; 262  :             {
; 263  :                 pDeviceContext=pStreamContext->GetDeviceContext();

  00290	15950050	 ldrne       r0, [r5, #0x50]

; 264  :             }
; 265  :             else
; 266  :             {
; 267  :                 pDeviceContext = g_pHWContext->GetInputDeviceContext(uDeviceId);

  00294	05973000	 ldreq       r3, [r7]
  00298	02830070	 addeq       r0, r3, #0x70

; 268  :             }
; 269  : 
; 270  :             dwRet = pDeviceContext->GetDevCaps((PVOID)dwParam1,dwParam2);

  0029c	e5903000	 ldr         r3, [r0]
  002a0	e1a02009	 mov         r2, r9
  002a4	e1a01006	 mov         r1, r6
  002a8	e5933008	 ldr         r3, [r3, #8]
  002ac	e1a0e00f	 mov         lr, pc
  002b0	e12fff13	 bx          r3

; 271  :             break;

  002b4	ea00003e	 b           |$LN122@HandleWave|
  002b8		 |$LN26@HandleWave|

; 345  :             break;
; 346  :         }
; 347  : 
; 348  :     case WODM_RESET:
; 349  :     case WIDM_RESET:
; 350  :         {
; 351  :             DEBUGMSG(ZONE_WODM|ZONE_WIDM, (TEXT("WODM_RESET/WIDM_RESET\r\n")));
; 352  :             dwRet = pStreamContext->Reset();

  002b8	e5953000	 ldr         r3, [r5]
  002bc	e1a00005	 mov         r0, r5
  002c0	e5933018	 ldr         r3, [r3, #0x18]
  002c4	e1a0e00f	 mov         lr, pc
  002c8	e12fff13	 bx          r3

; 353  :             break;

  002cc	ea000038	 b           |$LN122@HandleWave|
  002d0		 |$LN51@HandleWave|

; 218  : 
; 219  :     // catch exceptions inside device lock, otherwise device will remain locked!
; 220  :     _try
; 221  :     {
; 222  : 
; 223  :     switch (uMsg)

  002d0	e354003c	 cmp         r4, #0x3C
  002d4	0a000030	 beq         |$LN27@HandleWave|
  002d8	e3540f7d	 cmp         r4, #0x7D, 30
  002dc	0a000027	 beq         |$LN5@HandleWave|
  002e0	e3540b01	 cmp         r4, #1, 22
  002e4	0a000021	 beq         |$LN13@HandleWave|
  002e8	e3a03b01	 mov         r3, #1, 22
  002ec	e3833001	 orr         r3, r3, #1
  002f0	e1540003	 cmp         r4, r3
  002f4	0a000014	 beq         |$LN12@HandleWave|
  002f8	e3a03b01	 mov         r3, #1, 22
  002fc	e3833002	 orr         r3, r3, #2
  00300	e1540003	 cmp         r4, r3
  00304	0a000007	 beq         |$LN9@HandleWave|
  00308	e3540c05	 cmp         r4, #5, 24
  0030c	0a000001	 beq         |$LN6@HandleWave|
  00310		 |$LN2@HandleWave|

; 492  :         }
; 493  : 
; 494  : // unsupported messages
; 495  :     case WODM_GETPITCH:
; 496  :     case WODM_SETPITCH:
; 497  :     case WODM_PREPARE:
; 498  :     case WODM_UNPREPARE:
; 499  :     case WIDM_PREPARE:
; 500  :     case WIDM_UNPREPARE:
; 501  :     default:
; 502  :         dwRet  = MMSYSERR_NOTSUPPORTED;

  00310	e3a04008	 mov         r4, #8

; 503  :         break;

  00314	ea000027	 b           |$LN121@HandleWave|
  00318		 |$LN6@HandleWave|

; 469  :         }
; 470  : 
; 471  :     case MM_MOM_MIDIMESSAGE:
; 472  :         {
; 473  :             DEBUGMSG(ZONE_WODM, (TEXT("WAVE: MM_MOM_MIDIMESSAGE \r\n")));
; 474  :             CMidiStream *pMidiStream = (CMidiStream *)dwUser;
; 475  :             dwRet = pMidiStream->MidiMessage(dwParam1);

  00318	e1a01006	 mov         r1, r6
  0031c	e1a00005	 mov         r0, r5
  00320	eb000000	 bl          |?MidiMessage@CMidiStream@@QAAKI@Z|

; 476  :             break;

  00324	ea000022	 b           |$LN122@HandleWave|
  00328		 |$LN9@HandleWave|

; 455  :         }
; 456  : 
; 457  :     case MM_WOM_FORCESPEAKER:
; 458  :         {
; 459  :             DEBUGMSG(ZONE_WODM, (TEXT("WAVE: MM_WOM_FORCESPEAKER \r\n")));
; 460  :             if (pStreamContext)

  00328	e3550000	 cmp         r5, #0

; 461  :             {
; 462  :                 dwRet = pStreamContext->ForceSpeaker((BOOL)dwParam1);

  0032c	e1a01006	 mov         r1, r6

; 455  :         }
; 456  : 
; 457  :     case MM_WOM_FORCESPEAKER:
; 458  :         {
; 459  :             DEBUGMSG(ZONE_WODM, (TEXT("WAVE: MM_WOM_FORCESPEAKER \r\n")));
; 460  :             if (pStreamContext)

  00330	0a000002	 beq         |$LN8@HandleWave|

; 461  :             {
; 462  :                 dwRet = pStreamContext->ForceSpeaker((BOOL)dwParam1);

  00334	e1a00005	 mov         r0, r5
  00338	eb000000	 bl          |?ForceSpeaker@StreamContext@@QAAKH@Z|

; 463  :             }
; 464  :             else

  0033c	ea00001c	 b           |$LN122@HandleWave|
  00340		 |$LN8@HandleWave|

; 465  :             {
; 466  :                 dwRet = g_pHWContext->ForceSpeaker((BOOL)dwParam1);

  00340	e5970000	 ldr         r0, [r7]
  00344	eb000000	 bl          |?ForceSpeaker@HardwareContext@@QAAKH@Z|

; 467  :             }
; 468  :             break;

  00348	ea000019	 b           |$LN122@HandleWave|
  0034c		 |$LN12@HandleWave|

; 438  :         }
; 439  : 
; 440  :     case MM_WOM_SETSECONDARYGAINLIMIT:
; 441  :         {
; 442  :             DeviceContext *pDeviceContext;
; 443  :             DEBUGMSG(ZONE_WODM, (TEXT("WAVE: MM_WOM_SETSECONDARYGAINLIMIT \r\n")));
; 444  : 
; 445  :             if (pStreamContext)

  0034c	e3550000	 cmp         r5, #0

; 446  :             {
; 447  :                 pDeviceContext = pStreamContext->GetDeviceContext();

  00350	15950050	 ldrne       r0, [r5, #0x50]

; 228  :             break;

  00354	05973000	 ldreq       r3, [r7]

; 448  :             }
; 449  :             else
; 450  :             {
; 451  :                 pDeviceContext = g_pHWContext->GetOutputDeviceContext(uDeviceId);

  00358	02830094	 addeq       r0, r3, #0x94

; 452  :             }
; 453  :             dwRet = pDeviceContext->SetSecondaryGainLimit(dwParam1,dwParam2);

  0035c	e3560004	 cmp         r6, #4
  00360	2affff50	 bcs         |$LN44@HandleWave|
  00364	e2863005	 add         r3, r6, #5
  00368	e7809103	 str         r9, [r0, +r3, lsl #2]

; 454  :             break;

  0036c	eaffff86	 b           |$LN127@HandleWave|
  00370		 |$LN13@HandleWave|

; 430  :         }
; 431  : 
; 432  :     case MM_WOM_SETSECONDARYGAINCLASS:
; 433  :         {
; 434  :             DEBUGMSG(ZONE_WODM, (TEXT("WAVE: MM_WOM_SETSECONDARYGAINCLASS \r\n")));
; 435  : 
; 436  :             dwRet = pStreamContext->SetSecondaryGainClass(dwParam1);

  00370	e1a01006	 mov         r1, r6
  00374	e1a00005	 mov         r0, r5
  00378	eb000000	 bl          |?SetSecondaryGainClass@StreamContext@@QAAKK@Z|

; 437  :             break;

  0037c	ea00000c	 b           |$LN122@HandleWave|
  00380		 |$LN5@HandleWave|

; 477  :         }
; 478  : 
; 479  :     case WODM_BT_SCO_AUDIO_CONTROL:
; 480  :         {
; 481  :             DEBUGMSG(ZONE_WODM,(TEXT("WODM_BT_SCO_AUDIO_CONTROL\r\n")));
; 482  :             if (pParams->dwParam2)

  00380	e5983010	 ldr         r3, [r8, #0x10]
  00384	e3530000	 cmp         r3, #0

; 483  :             {
; 484  :                 g_pHWContext->NotifyBtHeadsetOn(BT_AUDIO_SYSTEM|BT_AUDIO_MODEM);

  00388	e5970000	 ldr         r0, [r7]
  0038c	13a01003	 movne       r1, #3

; 485  :             }
; 486  :             else
; 487  :             {
; 488  :                 g_pHWContext->NotifyBtHeadsetOn(BT_AUDIO_NONE);

  00390	03a01000	 moveq       r1, #0
  00394	eb000000	 bl          |?NotifyBtHeadsetOn@HardwareContext@@QAAXK@Z|

; 489  :             }
; 490  :             dwRet = MMSYSERR_NOERROR;
; 491  :             break;

  00398	eaffff66	 b           |$LN126@HandleWave|
  0039c		 |$LN27@HandleWave|

; 338  :         }
; 339  : 
; 340  :     case WODM_GETPOS:
; 341  :     case WIDM_GETPOS:
; 342  :         {
; 343  :             DEBUGMSG(ZONE_WODM|ZONE_WIDM, (TEXT("WODM_GETPOS/WIDM_GETPOS\r\n")));
; 344  :             dwRet = pStreamContext->GetPos((PMMTIME)dwParam1);

  0039c	e5953000	 ldr         r3, [r5]
  003a0	e1a01006	 mov         r1, r6
  003a4	e1a00005	 mov         r0, r5
  003a8	e593300c	 ldr         r3, [r3, #0xC]
  003ac	e1a0e00f	 mov         lr, pc
  003b0	e12fff13	 bx          r3
  003b4		 |$LN122@HandleWave|
  003b4	e1a04000	 mov         r4, r0
  003b8		 |$LN121@HandleWave|
  003b8	e50b4030	 str         r4, [r11, #-0x30]
  003bc		 |$LN62@HandleWave|

; 504  :     }
; 505  : 
; 506  :     }

  003bc	ea00000c	 b           |$LN63@HandleWave|
  003c0		 |$LN58@HandleWave|

; 508  :     {
; 509  :         ERRORMSG(1, (TEXT("Access violation in HandleWaveMessage!!!!\r\n")));

  003c0	e59f1080	 ldr         r1, [pc, #0x80]
  003c4	e59f0078	 ldr         r0, [pc, #0x78]
  003c8	e3a03c01	 mov         r3, #1, 24
  003cc	e38320fd	 orr         r2, r3, #0xFD
  003d0	eb000000	 bl          NKDbgPrintfW
  003d4	e59f0064	 ldr         r0, [pc, #0x64]
  003d8	eb000000	 bl          NKDbgPrintfW
  003dc	e3a03116	 mov         r3, #0x16, 2

; 510  :         SetLastError(E_FAIL);

  003e0	e3830901	 orr         r0, r3, #1, 18
  003e4	eb000000	 bl          SetLastError
  003e8	e59f704c	 ldr         r7, [pc, #0x4C]
  003ec	e59ba004	 ldr         r10, [r11, #4]
  003f0	e51b4030	 ldr         r4, [r11, #-0x30]
  003f4		 |$LN63@HandleWave|

; 228  :             break;

  003f4	e5973000	 ldr         r3, [r7]

; 511  :     }
; 512  : 
; 513  :     g_pHWContext->Unlock();

  003f8	e2830004	 add         r0, r3, #4
  003fc	eb000000	 bl          LeaveCriticalSection

; 514  : 
; 515  :     // Pass the return code back via pBufOut
; 516  :     if (pdwResult)

  00400	e35a0000	 cmp         r10, #0

; 517  :     {
; 518  :         *pdwResult = dwRet;

  00404	158a4000	 strne       r4, [r10]

; 519  :     }
; 520  : 
; 521  :     return TRUE;

  00408	e3a00001	 mov         r0, #1
  0040c	ea000000	 b           |$LN48@HandleWave|
  00410		 |$LN120@HandleWave|
  00410	e51b002c	 ldr         r0, [r11, #-0x2C]
  00414		 |$LN48@HandleWave|

; 522  : }

  00414	e24bd028	 sub         sp, r11, #0x28
  00418	e89d6ff0	 ldmia       sp, {r4 - r11, sp, lr}
  0041c	e12fff1e	 bx          lr

			 ENDP  ; |?HandleWaveMessage@@YAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z|, HandleWaveMessage

  00420		 |$LN57@HandleWave|
  00420		 |$LN130@HandleWave|

; 507  :     _except (GetExceptionCode() == STATUS_ACCESS_VIOLATION ? EXCEPTION_EXECUTE_HANDLER : EXCEPTION_CONTINUE_SEARCH)

  00420	e52de004	 str         lr, [sp, #-4]!
  00424		 |$LN60@HandleWave|
  00424		 |$LN155@HandleWave|
  00424	e5903000	 ldr         r3, [r0]
  00428	e5933000	 ldr         r3, [r3]
  0042c	e3530117	 cmp         r3, #0x17, 2
  00430	03a00001	 moveq       r0, #1
  00434	13a00000	 movne       r0, #0
  00438		 |$LN59@HandleWave|
  00438	e49df004	 ldr         pc, [sp], #4
  0043c		 |$LN157@HandleWave|
  0043c		 |$LN158@HandleWave|
  0043c	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  00440		 |$LN159@HandleWave|
  00440	00000000	 DCD         |??_C@_1FI@PLNLJNDI@?$AAA?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAv?$AAi?$AAo?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAW?$AAa?$AAv?$AAe?$AAM?$AAe@|
  00444		 |$LN160@HandleWave|
  00444	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  00448		 |$LN161@HandleWave|
  00448	00000000	 DCD         |??_C@_1JE@OMJBAMM@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  0044c		 |$LN156@HandleWave|
  0044c		 |$LN132@HandleWave|
	EXPORT	|?WAV_IOControl@@YAHKKPAEK0KPAK@Z|	; WAV_IOControl
	EXPORT	|??_C@_1EC@LMGEMPAK@?$AAE?$AAX?$AAC?$AAE?$AAP?$AAT?$AAI?$AAO?$AAN?$AA?5?$AAI?$AAN?$AA?5?$AAW?$AAA?$AAV?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	IMPORT	|GetCallerProcess|
	IMPORT	|?PrepareForVoiceCall@HardwareContext@@QAAHH@Z| ; HardwareContext::PrepareForVoiceCall
	IMPORT	|?SetExtSpeakerPower@HardwareContext@@QAAHH@Z| ; HardwareContext::SetExtSpeakerPower
	IMPORT	|?NotifyHeadsetOn@HardwareContext@@QAAXH@Z| ; HardwareContext::NotifyHeadsetOn
	IMPORT	|?ToggleExtSpeaker@HardwareContext@@QAAXXZ| ; HardwareContext::ToggleExtSpeaker
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T37977| DCD	|$LN53@WAV_IOCont|
	DCD	0xc000d505

  00000			 AREA	 |.pdata|, PDATA
|$T37979| DCD	|$LN34@WAV_IOCont|
	DCD	0x40001102

  00000			 AREA	 |.xdata|, DATA
|$T37975| DCD	0x1
	DCD	|$LN38@WAV_IOCont|
	DCD	|$LN39@WAV_IOCont|
	DCD	|$LN34@WAV_IOCont|
	DCD	|$LN35@WAV_IOCont|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@LMGEMPAK@?$AAE?$AAX?$AAC?$AAE?$AAP?$AAT?$AAI?$AAO?$AAN?$AA?5?$AAI?$AAN?$AA?5?$AAW?$AAA?$AAV?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$AN?$AA?6@| DCB "E"
	DCB	0x0, "X", 0x0, "C", 0x0, "E", 0x0, "P", 0x0, "T", 0x0, "I"
	DCB	0x0, "O", 0x0, "N", 0x0, " ", 0x0, "I", 0x0, "N", 0x0, " "
	DCB	0x0, "W", 0x0, "A", 0x0, "V", 0x0, "_", 0x0, "I", 0x0, "O"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "!", 0x0, "!", 0x0, "!", 0x0, "!", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\wavedev\wavemain.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T37975|

  00008		 |?WAV_IOControl@@YAHKKPAEK0KPAK@Z| PROC ; WAV_IOControl

; 562  : {

  00008		 |$LN53@WAV_IOCont|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d000f	 stmdb       sp!, {r0 - r3}
  00010	e92d59f0	 stmdb       sp!, {r4 - r8, r11, r12, lr}
  00014	e28db020	 add         r11, sp, #0x20
  00018	e24dd010	 sub         sp, sp, #0x10
  0001c		 |$LN51@WAV_IOCont|
  0001c	e1a0e003	 mov         lr, r3
  00020	e1a08002	 mov         r8, r2
  00024	e1a05000	 mov         r5, r0
  00028		 |$LN38@WAV_IOCont|

; 563  :     __try
; 564  :     {
; 565  :         switch (dwCode)

  00028	e3a037da	 mov         r3, #0xDA, 14
  0002c	e383301c	 orr         r3, r3, #0x1C
  00030	e1510003	 cmp         r1, r3
  00034	9a000058	 bls         |$LN49@WAV_IOCont|
  00038	e3a037da	 mov         r3, #0xDA, 14
  0003c	e3830020	 orr         r0, r3, #0x20
  00040	e1510000	 cmp         r1, r0
  00044	0a000049	 beq         |$LN8@WAV_IOCont|
  00048	e3a037da	 mov         r3, #0xDA, 14
  0004c	e3830024	 orr         r0, r3, #0x24
  00050	e1510000	 cmp         r1, r0
  00054	0a000035	 beq         |$LN21@WAV_IOCont|
  00058	e3a037da	 mov         r3, #0xDA, 14
  0005c	e3833028	 orr         r3, r3, #0x28
  00060	e1510003	 cmp         r1, r3
  00064	0a000021	 beq         |$LN18@WAV_IOCont|
  00068	e3a037da	 mov         r3, #0xDA, 14
  0006c	e383302c	 orr         r3, r3, #0x2C
  00070	e1510003	 cmp         r1, r3
  00074	0a000013	 beq         |$LN12@WAV_IOCont|
  00078	e3a037da	 mov         r3, #0xDA, 14
  0007c	e3833030	 orr         r3, r3, #0x30
  00080	e1510003	 cmp         r1, r3
  00084	1a00006a	 bne         |$LN1@WAV_IOCont|

; 585  : 
; 586  :         case IOCTL_NOTIFY_BT_HEADSET:
; 587  :             if(dwLenIn<sizeof(DWORD))

  00088	e35e0004	 cmp         lr, #4
  0008c	2a000002	 bcs         |$LN14@WAV_IOCont|

; 588  :                 return FALSE;

  00090	e3a00000	 mov         r0, #0
  00094	e50b0024	 str         r0, [r11, #-0x24]
  00098	ea0000ac	 b           |$LN26@WAV_IOCont|
  0009c		 |$LN14@WAV_IOCont|

; 589  :             if(pdwActualOut)

  0009c	e59b3018	 ldr         r3, [r11, #0x18]
  000a0	e3530000	 cmp         r3, #0

; 590  :                 *pdwActualOut = 0;

  000a4	13a02000	 movne       r2, #0
  000a8	15832000	 strne       r2, [r3]

; 591  :             g_pHWContext->NotifyBtHeadsetOn(*(DWORD *)pBufIn);

  000ac	e59f32dc	 ldr         r3, [pc, #0x2DC]
  000b0	e5981000	 ldr         r1, [r8]
  000b4	e5930000	 ldr         r0, [r3]
  000b8	eb000000	 bl          |?NotifyBtHeadsetOn@HardwareContext@@QAAXK@Z|

; 592  :             return TRUE;

  000bc	e3a00001	 mov         r0, #1
  000c0	e50b0024	 str         r0, [r11, #-0x24]
  000c4	ea0000a1	 b           |$LN26@WAV_IOCont|
  000c8		 |$LN12@WAV_IOCont|

; 593  : 
; 594  :         case IOCTL_TOGGLE_EXT_SPEAKER:
; 595  :             if(pdwActualOut)

  000c8	e59b3018	 ldr         r3, [r11, #0x18]
  000cc	e3530000	 cmp         r3, #0

; 596  :                 *pdwActualOut = 0;

  000d0	13a02000	 movne       r2, #0
  000d4	15832000	 strne       r2, [r3]

; 597  :             g_pHWContext->ToggleExtSpeaker();

  000d8	e59f32b0	 ldr         r3, [pc, #0x2B0]
  000dc	e5930000	 ldr         r0, [r3]
  000e0	eb000000	 bl          |?ToggleExtSpeaker@HardwareContext@@QAAXXZ|

; 598  :             return TRUE;

  000e4	e3a00001	 mov         r0, #1
  000e8	e50b0024	 str         r0, [r11, #-0x24]
  000ec	ea000097	 b           |$LN26@WAV_IOCont|
  000f0		 |$LN18@WAV_IOCont|

; 577  : 
; 578  :         case IOCTL_NOTIFY_HEADSET:
; 579  :             if(dwLenIn<sizeof(BOOL))

  000f0	e35e0004	 cmp         lr, #4
  000f4	2a000002	 bcs         |$LN17@WAV_IOCont|

; 580  :                 return FALSE;

  000f8	e3a00000	 mov         r0, #0
  000fc	e50b0024	 str         r0, [r11, #-0x24]
  00100	ea000092	 b           |$LN26@WAV_IOCont|
  00104		 |$LN17@WAV_IOCont|

; 581  :             if(pdwActualOut)

  00104	e59b3018	 ldr         r3, [r11, #0x18]
  00108	e3530000	 cmp         r3, #0

; 582  :                 *pdwActualOut = 0;

  0010c	13a02000	 movne       r2, #0
  00110	15832000	 strne       r2, [r3]

; 583  :             g_pHWContext->NotifyHeadsetOn((BOOL)*(DWORD *)pBufIn);

  00114	e59f3274	 ldr         r3, [pc, #0x274]
  00118	e5981000	 ldr         r1, [r8]
  0011c	e5930000	 ldr         r0, [r3]
  00120	eb000000	 bl          |?NotifyHeadsetOn@HardwareContext@@QAAXH@Z|

; 584  :             return TRUE;

  00124	e3a00001	 mov         r0, #1
  00128	e50b0024	 str         r0, [r11, #-0x24]
  0012c	ea000087	 b           |$LN26@WAV_IOCont|
  00130		 |$LN21@WAV_IOCont|

; 569  : 
; 570  :         case IOCTL_SET_EXTSPEAKER_POWER:
; 571  :             if(dwLenIn<sizeof(BOOL))

  00130	e35e0004	 cmp         lr, #4
  00134	2a000002	 bcs         |$LN20@WAV_IOCont|

; 572  :                 return FALSE;

  00138	e3a00000	 mov         r0, #0
  0013c	e50b0024	 str         r0, [r11, #-0x24]
  00140	ea000082	 b           |$LN26@WAV_IOCont|
  00144		 |$LN20@WAV_IOCont|

; 573  :             g_pHWContext->SetExtSpeakerPower((BOOL)*(DWORD*)pBufIn);

  00144	e59f3244	 ldr         r3, [pc, #0x244]
  00148	e5981000	 ldr         r1, [r8]
  0014c	e5930000	 ldr         r0, [r3]
  00150	eb000000	 bl          |?SetExtSpeakerPower@HardwareContext@@QAAHH@Z|

; 574  :             if(pdwActualOut)

  00154	e59b3018	 ldr         r3, [r11, #0x18]
  00158	e3530000	 cmp         r3, #0

; 575  :                 *pdwActualOut = 0;

  0015c	13a02000	 movne       r2, #0
  00160	15832000	 strne       r2, [r3]

; 576  :             return TRUE;

  00164	e3a00001	 mov         r0, #1
  00168	e50b0024	 str         r0, [r11, #-0x24]
  0016c	ea000077	 b           |$LN26@WAV_IOCont|
  00170		 |$LN8@WAV_IOCont|

; 605  : 
; 606  :         case IOCTL_GSM_CALL_INACTIVE:
; 607  :             g_pHWContext->PrepareForVoiceCall(FALSE);

  00170	e59f3218	 ldr         r3, [pc, #0x218]
  00174	e3a01000	 mov         r1, #0
  00178	e5930000	 ldr         r0, [r3]
  0017c	eb000000	 bl          |?PrepareForVoiceCall@HardwareContext@@QAAHH@Z|

; 608  :             dwLenOut = 0;
; 609  :             if(pdwActualOut)

  00180	e59b3018	 ldr         r3, [r11, #0x18]
  00184	e3530000	 cmp         r3, #0

; 610  :                 *pdwActualOut = 0;

  00188	13a02000	 movne       r2, #0
  0018c	15832000	 strne       r2, [r3]

; 611  :             return TRUE;

  00190	e3a00001	 mov         r0, #1
  00194	e50b0024	 str         r0, [r11, #-0x24]
  00198	ea00006c	 b           |$LN26@WAV_IOCont|
  0019c		 |$LN49@WAV_IOCont|

; 563  :     __try
; 564  :     {
; 565  :         switch (dwCode)

  0019c	1a00000a	 bne         |$LN46@WAV_IOCont|

; 599  : 
; 600  :         case IOCTL_GSM_CALL_ACTIVE:
; 601  :             g_pHWContext->PrepareForVoiceCall(TRUE);

  001a0	e59f31e8	 ldr         r3, [pc, #0x1E8]
  001a4	e3a01001	 mov         r1, #1
  001a8	e5930000	 ldr         r0, [r3]
  001ac	eb000000	 bl          |?PrepareForVoiceCall@HardwareContext@@QAAHH@Z|

; 602  :             if(pdwActualOut)

  001b0	e59b3018	 ldr         r3, [r11, #0x18]
  001b4	e3530000	 cmp         r3, #0

; 603  :                 *pdwActualOut = 0;

  001b8	13a02000	 movne       r2, #0
  001bc	15832000	 strne       r2, [r3]

; 604  :             return TRUE;

  001c0	e3a00001	 mov         r0, #1
  001c4	e50b0024	 str         r0, [r11, #-0x24]
  001c8	ea000060	 b           |$LN26@WAV_IOCont|
  001cc		 |$LN46@WAV_IOCont|
  001cc	e3a0381d	 mov         r3, #0x1D, 16

; 563  :     __try
; 564  :     {
; 565  :         switch (dwCode)

  001d0	e383300c	 orr         r3, r3, #0xC
  001d4	e1510003	 cmp         r1, r3
  001d8	1a000004	 bne         |$LN45@WAV_IOCont|

; 566  :         {
; 567  :         case IOCTL_WAV_MESSAGE:
; 568  :             return HandleWaveMessage((PMMDRV_MESSAGE_PARAMS)pBufIn, (DWORD *)pBufOut);

  001dc	e59b1010	 ldr         r1, [r11, #0x10]
  001e0	e1a00008	 mov         r0, r8
  001e4	eb000000	 bl          |?HandleWaveMessage@@YAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z|
  001e8	e50b0024	 str         r0, [r11, #-0x24]
  001ec	ea000057	 b           |$LN26@WAV_IOCont|
  001f0		 |$LN45@WAV_IOCont|
  001f0	e3a03822	 mov         r3, #0x22, 16

; 563  :     __try
; 564  :     {
; 565  :         switch (dwCode)

  001f4	e3833b01	 orr         r3, r3, #1, 22
  001f8	e1510003	 cmp         r1, r3
  001fc	0a00002c	 beq         |$LN5@WAV_IOCont|
  00200	e3a03832	 mov         r3, #0x32, 16
  00204	e3833a01	 orr         r3, r3, #1, 20
  00208	e1510003	 cmp         r1, r3
  0020c	0a000018	 beq         |$LN6@WAV_IOCont|
  00210	e59f3184	 ldr         r3, [pc, #0x184]
  00214	e1510003	 cmp         r1, r3
  00218	0a000015	 beq         |$LN6@WAV_IOCont|
  0021c	e59f3174	 ldr         r3, [pc, #0x174]
  00220	e1510003	 cmp         r1, r3
  00224	0a000012	 beq         |$LN6@WAV_IOCont|
  00228	e59f3164	 ldr         r3, [pc, #0x164]
  0022c	e1510003	 cmp         r1, r3
  00230	0a00000f	 beq         |$LN6@WAV_IOCont|
  00234		 |$LN1@WAV_IOCont|

; 649  : 
; 650  : 
; 651  :         default:
; 652  :             return g_pHWContext->HandleExtMessage (dwCode, pBufIn, dwLenIn, pBufOut, dwLenOut, pdwActualOut);

  00234	e59f3154	 ldr         r3, [pc, #0x154]
  00238	e59b6018	 ldr         r6, [r11, #0x18]
  0023c	e59b7014	 ldr         r7, [r11, #0x14]
  00240	e5930000	 ldr         r0, [r3]
  00244	e59b5010	 ldr         r5, [r11, #0x10]
  00248	e1a0300e	 mov         r3, lr
  0024c	e590e000	 ldr         lr, [r0]
  00250	e1a02008	 mov         r2, r8
  00254	e59e406c	 ldr         r4, [lr, #0x6C]
  00258	e58d6008	 str         r6, [sp, #8]
  0025c	e58d7004	 str         r7, [sp, #4]
  00260	e58d5000	 str         r5, [sp]
  00264	e1a0e00f	 mov         lr, pc
  00268	e12fff14	 bx          r4
  0026c	e50b0024	 str         r0, [r11, #-0x24]
  00270	ea000036	 b           |$LN26@WAV_IOCont|
  00274		 |$LN6@WAV_IOCont|

; 612  : 
; 613  :         // Power management functions.
; 614  :         case IOCTL_POWER_CAPABILITIES:
; 615  :         case IOCTL_POWER_QUERY:
; 616  :         case IOCTL_POWER_SET:
; 617  :         case IOCTL_POWER_GET:
; 618  :             return g_pHWContext->PmControlMessage
; 619  :                                 (dwCode, pBufIn, dwLenIn, pBufOut, dwLenOut, pdwActualOut);

  00274	e59f3114	 ldr         r3, [pc, #0x114]
  00278	e59b6018	 ldr         r6, [r11, #0x18]
  0027c	e59b7014	 ldr         r7, [r11, #0x14]
  00280	e5930000	 ldr         r0, [r3]
  00284	e59b5010	 ldr         r5, [r11, #0x10]
  00288	e1a0300e	 mov         r3, lr
  0028c	e590e000	 ldr         lr, [r0]
  00290	e1a02008	 mov         r2, r8
  00294	e59e4070	 ldr         r4, [lr, #0x70]
  00298	e58d6008	 str         r6, [sp, #8]
  0029c	e58d7004	 str         r7, [sp, #4]
  002a0	e58d5000	 str         r5, [sp]
  002a4	e1a0e00f	 mov         lr, pc
  002a8	e12fff14	 bx          r4
  002ac	e50b0024	 str         r0, [r11, #-0x24]
  002b0	ea000026	 b           |$LN26@WAV_IOCont|
  002b4		 |$LN5@WAV_IOCont|

; 620  :             break;
; 621  : 
; 622  :         case IOCTL_DDK_GET_DRIVER_IFC:
; 623  :             {
; 624  :             // We can give interface only to our peer in device process
; 625  :             if (GetCurrentProcessId() != (DWORD)GetCallerProcess()) 

  002b4	e3a0000c	 mov         r0, #0xC
  002b8	eb000000	 bl          __GetUserKData
  002bc	e1a04000	 mov         r4, r0
  002c0	eb000000	 bl          GetCallerProcess
  002c4	e1540000	 cmp         r4, r0

; 626  :             {
; 627  :                 DEBUGMSG(ZONE_ERROR, (L"ERROR: WAV_IOControl: "
; 628  :                     L"IOCTL_DDK_GET_DRIVER_IFC can be called only from "
; 629  :                     L"device process (caller process id 0x%08x)\r\n", 
; 630  :                     GetCallerProcess()
; 631  :                 ));
; 632  :                 SetLastError(ERROR_ACCESS_DENIED);

  002c8	13a00005	 movne       r0, #5

; 620  :             break;
; 621  : 
; 622  :         case IOCTL_DDK_GET_DRIVER_IFC:
; 623  :             {
; 624  :             // We can give interface only to our peer in device process
; 625  :             if (GetCurrentProcessId() != (DWORD)GetCallerProcess()) 

  002cc	1a00000e	 bne         |$LN50@WAV_IOCont|

; 633  :                 break;
; 634  :             }
; 635  :             if (pBufIn != NULL || 
; 636  :                 pBufOut == NULL ||
; 637  :                 dwLenOut < sizeof(CEDDK_DRIVER_PFN)) 

  002d0	e3580000	 cmp         r8, #0
  002d4	1a00000b	 bne         |$LN2@WAV_IOCont|
  002d8	e59b2010	 ldr         r2, [r11, #0x10]
  002dc	e3520000	 cmp         r2, #0
  002e0	0a000008	 beq         |$LN2@WAV_IOCont|
  002e4	e59b3014	 ldr         r3, [r11, #0x14]
  002e8	e3530010	 cmp         r3, #0x10
  002ec	3a000005	 bcc         |$LN2@WAV_IOCont|

; 640  :                 break;
; 641  :             }
; 642  : 
; 643  :             CEDDK_DRIVER_PFN *pFN;
; 644  :             pFN = (CEDDK_DRIVER_PFN*)pBufOut;
; 645  :             pFN->context = dwOpenData;
; 646  :             pFN->pfnIOControl = WAV_IOControl;

  002f0	e59f3094	 ldr         r3, [pc, #0x94]

; 647  :             }
; 648  :             return TRUE;

  002f4	e3a00001	 mov         r0, #1
  002f8	e5825000	 str         r5, [r2]
  002fc	e582300c	 str         r3, [r2, #0xC]
  00300	e50b0024	 str         r0, [r11, #-0x24]
  00304	ea000011	 b           |$LN26@WAV_IOCont|
  00308		 |$LN2@WAV_IOCont|

; 638  :             {
; 639  :                 SetLastError(ERROR_INVALID_PARAMETER);

  00308	e3a00057	 mov         r0, #0x57
  0030c		 |$LN50@WAV_IOCont|
  0030c	eb000000	 bl          SetLastError
  00310		 |$LN39@WAV_IOCont|

; 653  :             break;
; 654  :         }
; 655  :     }

  00310	e51b0024	 ldr         r0, [r11, #-0x24]
  00314	ea00000a	 b           |$LN40@WAV_IOCont|
  00318		 |$LN35@WAV_IOCont|

; 657  :     {
; 658  :         ERRORMSG(1, (TEXT("EXCEPTION IN WAV_IOControl!!!!\r\n")));

  00318	e59f1068	 ldr         r1, [pc, #0x68]
  0031c	e59f0060	 ldr         r0, [pc, #0x60]
  00320	e3a03c02	 mov         r3, #2, 24
  00324	e3832092	 orr         r2, r3, #0x92
  00328	eb000000	 bl          NKDbgPrintfW
  0032c	e59f004c	 ldr         r0, [pc, #0x4C]
  00330	eb000000	 bl          NKDbgPrintfW
  00334	e3a03116	 mov         r3, #0x16, 2

; 659  :         SetLastError(E_FAIL);

  00338	e3830901	 orr         r0, r3, #1, 18
  0033c	eb000000	 bl          SetLastError
  00340	e51b0024	 ldr         r0, [r11, #-0x24]
  00344		 |$LN40@WAV_IOCont|

; 660  :     }
; 661  : 
; 662  :     return FALSE;

  00344	e3a00000	 mov         r0, #0
  00348	ea000000	 b           |$LN26@WAV_IOCont|
  0034c		 |$LN48@WAV_IOCont|
  0034c	e51b0024	 ldr         r0, [r11, #-0x24]
  00350		 |$LN26@WAV_IOCont|

; 663  : }

  00350	e24bd020	 sub         sp, r11, #0x20
  00354	e89d69f0	 ldmia       sp, {r4 - r8, r11, sp, lr}
  00358	e12fff1e	 bx          lr

			 ENDP  ; |?WAV_IOControl@@YAHKKPAEK0KPAK@Z|, WAV_IOControl

  0035c		 |$LN34@WAV_IOCont|
  0035c		 |$LN52@WAV_IOCont|

; 656  :     __except (GetExceptionCode() == STATUS_ACCESS_VIOLATION ? EXCEPTION_EXECUTE_HANDLER : EXCEPTION_CONTINUE_SEARCH)

  0035c	e52de004	 str         lr, [sp, #-4]!
  00360	e24dd00c	 sub         sp, sp, #0xC
  00364		 |$LN37@WAV_IOCont|
  00364		 |$LN55@WAV_IOCont|
  00364	e5903000	 ldr         r3, [r0]
  00368	e5933000	 ldr         r3, [r3]
  0036c	e3530117	 cmp         r3, #0x17, 2
  00370	03a00001	 moveq       r0, #1
  00374	13a00000	 movne       r0, #0
  00378		 |$LN36@WAV_IOCont|
  00378	e28dd00c	 add         sp, sp, #0xC
  0037c	e49df004	 ldr         pc, [sp], #4
  00380		 |$LN57@WAV_IOCont|
  00380		 |$LN58@WAV_IOCont|
  00380	00000000	 DCD         |??_C@_1EC@LMGEMPAK@?$AAE?$AAX?$AAC?$AAE?$AAP?$AAT?$AAI?$AAO?$AAN?$AA?5?$AAI?$AAN?$AA?5?$AAW?$AAA?$AAV?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$AN?$AA?6@|
  00384		 |$LN59@WAV_IOCont|
  00384	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  00388		 |$LN60@WAV_IOCont|
  00388	00000000	 DCD         |??_C@_1JE@OMJBAMM@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  0038c		 |$LN61@WAV_IOCont|
  0038c	00000000	 DCD         |?WAV_IOControl@@YAHKKPAEK0KPAK@Z|
  00390		 |$LN62@WAV_IOCont|
  00390	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  00394		 |$LN63@WAV_IOCont|
  00394	0032100c	 DCD         0x32100c
  00398		 |$LN64@WAV_IOCont|
  00398	00321008	 DCD         0x321008
  0039c		 |$LN65@WAV_IOCont|
  0039c	00321004	 DCD         0x321004
  003a0		 |$LN56@WAV_IOCont|
  003a0		 |$LN54@WAV_IOCont|
	END
