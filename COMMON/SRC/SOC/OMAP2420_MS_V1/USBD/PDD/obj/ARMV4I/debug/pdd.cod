; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\OMAP2420_MS_V1\USBD\PDD\pdd.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1BI@BHLBGEOK@?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_17DJGGJCGD@?$AAI?$AAr?$AAq?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@LBBNFMDB@?$AAM?$AAe?$AAm?$AAL?$AAe?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@INLDIDEN@?$AAM?$AAe?$AAm?$AAB?$AAa?$AAs?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|dpCurSettings| [ DATA ]

  00000			 AREA	 |.bss|, NOINIT
|InEp|	%	0x4

  00000			 AREA	 |.data|, DATA
|dpCurSettings| DCB "U", 0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, 0x0
	DCB	0x0
	%	52
	DCB	"E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, 0x0, 0x0
	%	52
	DCB	"W", 0x0, "a", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0
	DCB	"g", 0x0, 0x0, 0x0
	%	48
	DCB	"I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0x0, 0x0
	%	54
	DCB	"T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0
	DCB	"e", 0x0, "r", 0x0, 0x0, 0x0
	%	46
	DCB	"P", 0x0, "i", 0x0, "p", 0x0, "e", 0x0, 0x0, 0x0
	%	54
	DCB	"S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, 0x0, 0x0
	%	54
	DCB	"R", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0
	DCB	"e", 0x0, 0x0, 0x0
	%	48
	DCB	"U", 0x0, "S", 0x0, "B", 0x0, " ", 0x0, "E", 0x0, "v", 0x0
	DCB	"e", 0x0, "n", 0x0, "t", 0x0, "s", 0x0, 0x0, 0x0
	%	42
	DCB	"I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0
	DCB	"u", 0x0, "p", 0x0, "t", 0x0, "s", 0x0, 0x0, 0x0
	%	42
	DCB	"P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, 0x0, 0x0
	%	52
	DCB	0x0, 0x0
	%	62
	DCB	0x0, 0x0
	%	62
	DCB	"F", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i", 0x0
	DCB	"o", 0x0, "n", 0x0, 0x0, 0x0
	%	46
	DCB	"C", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "e", 0x0, "n", 0x0
	DCB	"t", 0x0, "s", 0x0, 0x0, 0x0
	%	46
	DCB	0x0, 0x0
	%	62
	DCB	"P", 0x0, "D", 0x0, "D", 0x0, 0x0, 0x0
	%	56
	DCD	0x5

  00000			 AREA	 |.rdata|, DATA, READONLY
|g_deviceRegParams| DCD |??_C@_1BA@INLDIDEN@?$AAM?$AAe?$AAm?$AAB?$AAa?$AAs?$AAe?$AA?$AA@|
	DCD	0x1
	DCD	0x1
	DCD	0x0
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1O@LBBNFMDB@?$AAM?$AAe?$AAm?$AAL?$AAe?$AAn?$AA?$AA@|
	DCD	0x1
	DCD	0x1
	DCD	0x4
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_17DJGGJCGD@?$AAI?$AAr?$AAq?$AA?$AA@|
	DCD	0x3
	DCD	0x1
	DCD	0xc
	DCD	0xc
	DCD	0x0
	DCD	|??_C@_1BI@BHLBGEOK@?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x8
	DCD	0x4
	DCD	0x65

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@BHLBGEOK@?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@| DCB "P"
	DCB	0x0, "r", 0x0, "i", 0x0, "o", 0x0, "r", 0x0, "i", 0x0, "t"
	DCB	0x0, "y", 0x0, "2", 0x0, "5", 0x0, "6", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17DJGGJCGD@?$AAI?$AAr?$AAq?$AA?$AA@| DCB "I", 0x0, "r", 0x0, "q", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@LBBNFMDB@?$AAM?$AAe?$AAm?$AAL?$AAe?$AAn?$AA?$AA@| DCB "M", 0x0, "e"
	DCB	0x0, "m", 0x0, "L", 0x0, "e", 0x0, "n", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@INLDIDEN@?$AAM?$AAe?$AAm?$AAB?$AAa?$AAs?$AAe?$AA?$AA@| DCB "M", 0x0
	DCB	"e", 0x0, "m", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e", 0x0
	DCB	0x0, 0x0				; `string'
	EXPORT	|UfnPdd_PowerDown|

  00000			 AREA	 |.pdata|, PDATA
|$T45778| DCD	|$LN5@UfnPdd_Pow|
	DCD	0x40000503
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\usbd\pdd\pdd.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_PowerDown| PROC

; 236  : {

  00000		 |$LN5@UfnPdd_Pow|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M45775|

; 237  : }

  0000c	e89d6000	 ldmia       sp, {sp, lr}
  00010	e12fff1e	 bx          lr
  00014		 |$M45776|

			 ENDP  ; |UfnPdd_PowerDown|

	EXPORT	|UfnPdd_PowerUp|

  00008			 AREA	 |.pdata|, PDATA
|$T45783| DCD	|$LN5@UfnPdd_Pow@2|
	DCD	0x40000503
; Function compile flags: /Odtp

  00014			 AREA	 |.text|, CODE, ARM

  00014		 |UfnPdd_PowerUp| PROC

; 252  : {

  00014		 |$LN5@UfnPdd_Pow@2|
  00014	e1a0c00d	 mov         r12, sp
  00018	e92d0001	 stmdb       sp!, {r0}
  0001c	e92d5000	 stmdb       sp!, {r12, lr}
  00020		 |$M45780|

; 253  : }

  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M45781|

			 ENDP  ; |UfnPdd_PowerUp|

	EXPORT	|??_C@_1GE@NNLEPPKD@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAT?$AAu?$AAr?$AAn?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@EEMGPBNG@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAT?$AAu?$AAr?$AAn?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IE@CJBJIKFA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAg@| [ DATA ] ; `string'
	EXPORT	|UpdateDevicePower|
	IMPORT	|KernelIoControl|
	IMPORT	|SetDevicePowerState|
	IMPORT	|NKDbgPrintfW|

  00010			 AREA	 |.pdata|, PDATA
|$T45816| DCD	|$LN41@UpdateDevi|
	DCD	0x40010304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@NNLEPPKD@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAT?$AAu?$AAr?$AAn?$AAi@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "U", 0x0, "p"
	DCB	0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, "(", 0x0, ")", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "T", 0x0, "u", 0x0, "r", 0x0, "n"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "e", 0x0, " ", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "O", 0x0, "n", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@EEMGPBNG@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAT?$AAu?$AAr?$AAn?$AAi@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "U", 0x0, "p"
	DCB	0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, "(", 0x0, ")", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "T", 0x0, "u", 0x0, "r", 0x0, "n"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "e", 0x0, " ", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "O", 0x0, "f", 0x0, "f", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@CJBJIKFA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAg@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "U", 0x0, "p"
	DCB	0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, "(", 0x0, ")", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "g", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "f"
	DCB	0x0, "r", 0x0, "o", 0x0, "m", 0x0, " ", 0x0, "D", 0x0, "%"
	DCB	0x0, "u", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "D"
	DCB	0x0, "%", 0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00028			 AREA	 |.text|, CODE, ARM

  00028		 |UpdateDevicePower| PROC

; 273  : {

  00028		 |$LN41@UpdateDevi|
  00028	e1a0c00d	 mov         r12, sp
  0002c	e92d0001	 stmdb       sp!, {r0}
  00030	e92d5000	 stmdb       sp!, {r12, lr}
  00034	e24dd05c	 sub         sp, sp, #0x5C
  00038		 |$M45813|

; 274  :     BOOL  bRV    = TRUE;

  00038	e3a03001	 mov         r3, #1
  0003c	e58d3010	 str         r3, [sp, #0x10]

; 275  :     DWORD regBit = 0x00000001;

  00040	e3a03001	 mov         r3, #1
  00044	e58d300c	 str         r3, [sp, #0xC]

; 276  :     DWORD cbRet  = 0x00000000;

  00048	e3a03000	 mov         r3, #0
  0004c	e58d3008	 str         r3, [sp, #8]

; 277  : 
; 278  : 
; 279  :     if (pPdd != NULL)

  00050	e59d3064	 ldr         r3, [sp, #0x64]
  00054	e3530000	 cmp         r3, #0
  00058	0a0000e7	 beq         |$LN17@UpdateDevi|

; 280  :     {
; 281  :         DEBUGMSG(ZONE_POWER, (L"USBD UpdateDevicePower() - "
; 282  :             L"Changing Power State from D%u to D%u\r\n", (int)(pPdd->m_CurrentPowerState), (int)(pPdd->m_NewPowerState)));

  0005c	e59f33bc	 ldr         r3, [pc, #0x3BC]
  00060	e5933440	 ldr         r3, [r3, #0x440]
  00064	e3130c02	 tst         r3, #2, 24
  00068	0a00001b	 beq         |$LN22@UpdateDevi|
  0006c	e59f33ac	 ldr         r3, [pc, #0x3AC]
  00070	e5933440	 ldr         r3, [r3, #0x440]
  00074	e3130801	 tst         r3, #1, 16
  00078	0a00000a	 beq         |$LN20@UpdateDevi|
  0007c	e59d3064	 ldr         r3, [sp, #0x64]
  00080	e2833038	 add         r3, r3, #0x38
  00084	e5932000	 ldr         r2, [r3]
  00088	e59d3064	 ldr         r3, [sp, #0x64]
  0008c	e283303c	 add         r3, r3, #0x3C
  00090	e5931000	 ldr         r1, [r3]
  00094	e59f0394	 ldr         r0, [pc, #0x394]
  00098	eb000000	 bl          CeLogMsg
  0009c	e3a03001	 mov         r3, #1
  000a0	e58d3038	 str         r3, [sp, #0x38]
  000a4	ea000009	 b           |$LN21@UpdateDevi|
  000a8		 |$LN20@UpdateDevi|
  000a8	e59d3064	 ldr         r3, [sp, #0x64]
  000ac	e2833038	 add         r3, r3, #0x38
  000b0	e5932000	 ldr         r2, [r3]
  000b4	e59d3064	 ldr         r3, [sp, #0x64]
  000b8	e283303c	 add         r3, r3, #0x3C
  000bc	e5931000	 ldr         r1, [r3]
  000c0	e59f0368	 ldr         r0, [pc, #0x368]
  000c4	eb000000	 bl          NKDbgPrintfW
  000c8	e3a03000	 mov         r3, #0
  000cc	e58d3038	 str         r3, [sp, #0x38]
  000d0		 |$LN21@UpdateDevi|
  000d0	e3a03001	 mov         r3, #1
  000d4	e58d303c	 str         r3, [sp, #0x3C]
  000d8	ea000001	 b           |$LN23@UpdateDevi|
  000dc		 |$LN22@UpdateDevi|
  000dc	e3a03000	 mov         r3, #0
  000e0	e58d303c	 str         r3, [sp, #0x3C]
  000e4		 |$LN23@UpdateDevi|

; 283  : 
; 284  :         switch (pPdd->m_CurrentPowerState)

  000e4	e59d3064	 ldr         r3, [sp, #0x64]
  000e8	e283303c	 add         r3, r3, #0x3C
  000ec	e5933000	 ldr         r3, [r3]
  000f0	e58d3040	 str         r3, [sp, #0x40]
  000f4	e59d3040	 ldr         r3, [sp, #0x40]
  000f8	e3530004	 cmp         r3, #4
  000fc	8a0000b3	 bhi         |$LN2@UpdateDevi|
  00100	e59d2040	 ldr         r2, [sp, #0x40]
  00104	e1a03102	 mov         r3, r2, lsl #2
  00108	e083300f	 add         r3, r3, pc
  0010c	e5933004	 ldr         r3, [r3, #4]
  00110	e08ff003	 add         pc, pc, r3
  00114		 |$LN33@UpdateDevi|
  00114		 |$LN32@UpdateDevi|
  00114		 |$LN34@UpdateDevi|
  00114	00000010	 DCD         0x10
  00118		 |$LN35@UpdateDevi|
  00118	00000010	 DCD         0x10
  0011c		 |$LN36@UpdateDevi|
  0011c	00000010	 DCD         0x10
  00120		 |$LN37@UpdateDevi|
  00120	0000015c	 DCD         0x15c
  00124		 |$LN38@UpdateDevi|
  00124	0000015c	 DCD         0x15c
  00128		 |$LN14@UpdateDevi|

; 285  :         {
; 286  :             case D0:
; 287  :             case D1:
; 288  :             case D2:
; 289  :                 if (SetDevicePowerState(pPdd->hParentBus, pPdd->m_NewPowerState, NULL))

  00128	e3a02000	 mov         r2, #0
  0012c	e59d3064	 ldr         r3, [sp, #0x64]
  00130	e2833038	 add         r3, r3, #0x38
  00134	e5931000	 ldr         r1, [r3]
  00138	e59d3064	 ldr         r3, [sp, #0x64]
  0013c	e2833020	 add         r3, r3, #0x20
  00140	e5930000	 ldr         r0, [r3]
  00144	eb000000	 bl          SetDevicePowerState
  00148	e58d0044	 str         r0, [sp, #0x44]
  0014c	e59d3044	 ldr         r3, [sp, #0x44]
  00150	e3530000	 cmp         r3, #0
  00154	0a000043	 beq         |$LN13@UpdateDevi|

; 290  :                 {
; 291  :                     if ((pPdd->m_NewPowerState == D3) || (pPdd->m_NewPowerState == D4))

  00158	e59d3064	 ldr         r3, [sp, #0x64]
  0015c	e2833038	 add         r3, r3, #0x38
  00160	e5933000	 ldr         r3, [r3]
  00164	e3530003	 cmp         r3, #3
  00168	0a000004	 beq         |$LN11@UpdateDevi|
  0016c	e59d3064	 ldr         r3, [sp, #0x64]
  00170	e2833038	 add         r3, r3, #0x38
  00174	e5933000	 ldr         r3, [r3]
  00178	e3530004	 cmp         r3, #4
  0017c	1a000038	 bne         |$LN12@UpdateDevi|
  00180		 |$LN11@UpdateDevi|

; 292  :                     {
; 293  :                         DEBUGMSG(ZONE_POWER, (L"USBD UpdateDevicePower() - "
; 294  :                             L"Turning the Power Off\r\n"));

  00180	e59f3298	 ldr         r3, [pc, #0x298]
  00184	e5933440	 ldr         r3, [r3, #0x440]
  00188	e3130c02	 tst         r3, #2, 24
  0018c	0a00000f	 beq         |$LN26@UpdateDevi|
  00190	e59f3288	 ldr         r3, [pc, #0x288]
  00194	e5933440	 ldr         r3, [r3, #0x440]
  00198	e3130801	 tst         r3, #1, 16
  0019c	0a000004	 beq         |$LN24@UpdateDevi|
  001a0	e59f0284	 ldr         r0, [pc, #0x284]
  001a4	eb000000	 bl          CeLogMsg
  001a8	e3a03001	 mov         r3, #1
  001ac	e58d3048	 str         r3, [sp, #0x48]
  001b0	ea000003	 b           |$LN25@UpdateDevi|
  001b4		 |$LN24@UpdateDevi|
  001b4	e59f0270	 ldr         r0, [pc, #0x270]
  001b8	eb000000	 bl          NKDbgPrintfW
  001bc	e3a03000	 mov         r3, #0
  001c0	e58d3048	 str         r3, [sp, #0x48]
  001c4		 |$LN25@UpdateDevi|
  001c4	e3a03001	 mov         r3, #1
  001c8	e58d304c	 str         r3, [sp, #0x4C]
  001cc	ea000001	 b           |$LN27@UpdateDevi|
  001d0		 |$LN26@UpdateDevi|
  001d0	e3a03000	 mov         r3, #0
  001d4	e58d304c	 str         r3, [sp, #0x4C]
  001d8		 |$LN27@UpdateDevi|

; 295  : 
; 296  :                         // Disable the USBD Transceiver
; 297  :                         if (pPdd->pUSBDRegs)

  001d8	e59d3064	 ldr         r3, [sp, #0x64]
  001dc	e2833024	 add         r3, r3, #0x24
  001e0	e5933000	 ldr         r3, [r3]
  001e4	e3530000	 cmp         r3, #0
  001e8	0a00000b	 beq         |$LN10@UpdateDevi|

; 298  :                         {
; 299  :                             CLRREG32(&pPdd->pUSBDRegs->SYSCON1, USBD_SYSCON1_PULLUP_EN);

  001ec	e59d3064	 ldr         r3, [sp, #0x64]
  001f0	e2833024	 add         r3, r3, #0x24
  001f4	e5933000	 ldr         r3, [r3]
  001f8	e2833018	 add         r3, r3, #0x18
  001fc	e5932000	 ldr         r2, [r3]
  00200	e3e03001	 mvn         r3, #1
  00204	e0022003	 and         r2, r2, r3
  00208	e59d3064	 ldr         r3, [sp, #0x64]
  0020c	e2833024	 add         r3, r3, #0x24
  00210	e5933000	 ldr         r3, [r3]
  00214	e2833018	 add         r3, r3, #0x18
  00218	e5832000	 str         r2, [r3]
  0021c		 |$LN10@UpdateDevi|

; 300  :                         }
; 301  : 
; 302  :                         // Turn off the USBD Clocks
; 303  :                         KernelIoControl(IOCTL_ICLK2_DIS, (VOID *)&regBit, sizeof(DWORD), NULL, 0, &cbRet);

  0021c	e28d3008	 add         r3, sp, #8
  00220	e58d3004	 str         r3, [sp, #4]
  00224	e3a03000	 mov         r3, #0
  00228	e58d3000	 str         r3, [sp]
  0022c	e3a03000	 mov         r3, #0
  00230	e3a02004	 mov         r2, #4
  00234	e28d100c	 add         r1, sp, #0xC
  00238	e59f01e8	 ldr         r0, [pc, #0x1E8]
  0023c	eb000000	 bl          KernelIoControl

; 304  :                         KernelIoControl(IOCTL_FCLK2_DIS, (VOID *)&regBit, sizeof(DWORD), NULL, 0, &cbRet);

  00240	e28d3008	 add         r3, sp, #8
  00244	e58d3004	 str         r3, [sp, #4]
  00248	e3a03000	 mov         r3, #0
  0024c	e58d3000	 str         r3, [sp]
  00250	e3a03000	 mov         r3, #0
  00254	e3a02004	 mov         r2, #4
  00258	e28d100c	 add         r1, sp, #0xC
  0025c	e59f01c0	 ldr         r0, [pc, #0x1C0]
  00260	eb000000	 bl          KernelIoControl
  00264		 |$LN12@UpdateDevi|

; 305  :                     }
; 306  :                 }
; 307  :                 else

  00264	ea000001	 b           |$LN9@UpdateDevi|
  00268		 |$LN13@UpdateDevi|

; 308  :                 {
; 309  :                     bRV = FALSE;

  00268	e3a03000	 mov         r3, #0
  0026c	e58d3010	 str         r3, [sp, #0x10]
  00270		 |$LN9@UpdateDevi|

; 310  :                 }
; 311  :                 break;

  00270	ea000058	 b           |$LN15@UpdateDevi|
  00274		 |$LN8@UpdateDevi|

; 312  : 
; 313  :             case D3:
; 314  :             case D4:
; 315  :                 if (SetDevicePowerState(pPdd->hParentBus, pPdd->m_NewPowerState, NULL))

  00274	e3a02000	 mov         r2, #0
  00278	e59d3064	 ldr         r3, [sp, #0x64]
  0027c	e2833038	 add         r3, r3, #0x38
  00280	e5931000	 ldr         r1, [r3]
  00284	e59d3064	 ldr         r3, [sp, #0x64]
  00288	e2833020	 add         r3, r3, #0x20
  0028c	e5930000	 ldr         r0, [r3]
  00290	eb000000	 bl          SetDevicePowerState
  00294	e58d0050	 str         r0, [sp, #0x50]
  00298	e59d3050	 ldr         r3, [sp, #0x50]
  0029c	e3530000	 cmp         r3, #0
  002a0	0a000047	 beq         |$LN7@UpdateDevi|

; 316  :                 {
; 317  :                     if ((pPdd->m_NewPowerState == D0) || (pPdd->m_NewPowerState == D1) || (pPdd->m_NewPowerState == D2))

  002a4	e59d3064	 ldr         r3, [sp, #0x64]
  002a8	e2833038	 add         r3, r3, #0x38
  002ac	e5933000	 ldr         r3, [r3]
  002b0	e3530000	 cmp         r3, #0
  002b4	0a000009	 beq         |$LN5@UpdateDevi|
  002b8	e59d3064	 ldr         r3, [sp, #0x64]
  002bc	e2833038	 add         r3, r3, #0x38
  002c0	e5933000	 ldr         r3, [r3]
  002c4	e3530001	 cmp         r3, #1
  002c8	0a000004	 beq         |$LN5@UpdateDevi|
  002cc	e59d3064	 ldr         r3, [sp, #0x64]
  002d0	e2833038	 add         r3, r3, #0x38
  002d4	e5933000	 ldr         r3, [r3]
  002d8	e3530002	 cmp         r3, #2
  002dc	1a000037	 bne         |$LN6@UpdateDevi|
  002e0		 |$LN5@UpdateDevi|

; 318  :                     {
; 319  :                         DEBUGMSG(ZONE_POWER, (L"USBD UpdateDevicePower() - "
; 320  :                             L"Turning the Power On\r\n"));

  002e0	e59f3138	 ldr         r3, [pc, #0x138]
  002e4	e5933440	 ldr         r3, [r3, #0x440]
  002e8	e3130c02	 tst         r3, #2, 24
  002ec	0a00000f	 beq         |$LN30@UpdateDevi|
  002f0	e59f3128	 ldr         r3, [pc, #0x128]
  002f4	e5933440	 ldr         r3, [r3, #0x440]
  002f8	e3130801	 tst         r3, #1, 16
  002fc	0a000004	 beq         |$LN28@UpdateDevi|
  00300	e59f0114	 ldr         r0, [pc, #0x114]
  00304	eb000000	 bl          CeLogMsg
  00308	e3a03001	 mov         r3, #1
  0030c	e58d3054	 str         r3, [sp, #0x54]
  00310	ea000003	 b           |$LN29@UpdateDevi|
  00314		 |$LN28@UpdateDevi|
  00314	e59f0100	 ldr         r0, [pc, #0x100]
  00318	eb000000	 bl          NKDbgPrintfW
  0031c	e3a03000	 mov         r3, #0
  00320	e58d3054	 str         r3, [sp, #0x54]
  00324		 |$LN29@UpdateDevi|
  00324	e3a03001	 mov         r3, #1
  00328	e58d3058	 str         r3, [sp, #0x58]
  0032c	ea000001	 b           |$LN31@UpdateDevi|
  00330		 |$LN30@UpdateDevi|
  00330	e3a03000	 mov         r3, #0
  00334	e58d3058	 str         r3, [sp, #0x58]
  00338		 |$LN31@UpdateDevi|

; 321  : 
; 322  :                         // Turn on the USBD Clocks
; 323  :                         KernelIoControl(IOCTL_ICLK2_ENB, (VOID *)&regBit, sizeof(DWORD), NULL, 0, &cbRet);

  00338	e28d3008	 add         r3, sp, #8
  0033c	e58d3004	 str         r3, [sp, #4]
  00340	e3a03000	 mov         r3, #0
  00344	e58d3000	 str         r3, [sp]
  00348	e3a03000	 mov         r3, #0
  0034c	e3a02004	 mov         r2, #4
  00350	e28d100c	 add         r1, sp, #0xC
  00354	e59f00bc	 ldr         r0, [pc, #0xBC]
  00358	eb000000	 bl          KernelIoControl

; 324  :                         KernelIoControl(IOCTL_FCLK2_ENB, (VOID *)&regBit, sizeof(DWORD), NULL, 0, &cbRet);

  0035c	e28d3008	 add         r3, sp, #8
  00360	e58d3004	 str         r3, [sp, #4]
  00364	e3a03000	 mov         r3, #0
  00368	e58d3000	 str         r3, [sp]
  0036c	e3a03000	 mov         r3, #0
  00370	e3a02004	 mov         r2, #4
  00374	e28d100c	 add         r1, sp, #0xC
  00378	e59f0094	 ldr         r0, [pc, #0x94]
  0037c	eb000000	 bl          KernelIoControl

; 325  : 
; 326  :                         // Enable the USBD Transceiver
; 327  :                         if (pPdd->pUSBDRegs)

  00380	e59d3064	 ldr         r3, [sp, #0x64]
  00384	e2833024	 add         r3, r3, #0x24
  00388	e5933000	 ldr         r3, [r3]
  0038c	e3530000	 cmp         r3, #0
  00390	0a00000a	 beq         |$LN4@UpdateDevi|

; 328  :                         {
; 329  :                             SETREG32(&pPdd->pUSBDRegs->SYSCON1, USBD_SYSCON1_PULLUP_EN);

  00394	e59d3064	 ldr         r3, [sp, #0x64]
  00398	e2833024	 add         r3, r3, #0x24
  0039c	e5933000	 ldr         r3, [r3]
  003a0	e2833018	 add         r3, r3, #0x18
  003a4	e5933000	 ldr         r3, [r3]
  003a8	e3832001	 orr         r2, r3, #1
  003ac	e59d3064	 ldr         r3, [sp, #0x64]
  003b0	e2833024	 add         r3, r3, #0x24
  003b4	e5933000	 ldr         r3, [r3]
  003b8	e2833018	 add         r3, r3, #0x18
  003bc	e5832000	 str         r2, [r3]
  003c0		 |$LN4@UpdateDevi|
  003c0		 |$LN6@UpdateDevi|

; 330  :                         }
; 331  :                     }
; 332  :                 }
; 333  :                 else

  003c0	ea000001	 b           |$LN3@UpdateDevi|
  003c4		 |$LN7@UpdateDevi|

; 334  :                 {
; 335  :                     bRV = FALSE;

  003c4	e3a03000	 mov         r3, #0
  003c8	e58d3010	 str         r3, [sp, #0x10]
  003cc		 |$LN3@UpdateDevi|

; 336  :                 }
; 337  :                 break;

  003cc	ea000001	 b           |$LN15@UpdateDevi|
  003d0		 |$LN2@UpdateDevi|

; 338  : 
; 339  :             default:
; 340  :                 bRV = FALSE;

  003d0	e3a03000	 mov         r3, #0
  003d4	e58d3010	 str         r3, [sp, #0x10]
  003d8		 |$LN15@UpdateDevi|

; 341  :                 break;
; 342  :         }
; 343  : 
; 344  :         if (bRV)

  003d8	e59d3010	 ldr         r3, [sp, #0x10]
  003dc	e3530000	 cmp         r3, #0
  003e0	0a000005	 beq         |$LN1@UpdateDevi|

; 345  :         {
; 346  :             pPdd->m_CurrentPowerState = pPdd->m_NewPowerState;

  003e4	e59d3064	 ldr         r3, [sp, #0x64]
  003e8	e2831038	 add         r1, r3, #0x38
  003ec	e59d3064	 ldr         r3, [sp, #0x64]
  003f0	e283203c	 add         r2, r3, #0x3C
  003f4	e5913000	 ldr         r3, [r1]
  003f8	e5823000	 str         r3, [r2]
  003fc		 |$LN1@UpdateDevi|
  003fc		 |$LN17@UpdateDevi|

; 347  :         }
; 348  :     }
; 349  : 
; 350  :     return bRV;

  003fc	e59d3010	 ldr         r3, [sp, #0x10]
  00400	e58d3034	 str         r3, [sp, #0x34]

; 351  : }

  00404	e59d0034	 ldr         r0, [sp, #0x34]
  00408	e28dd05c	 add         sp, sp, #0x5C
  0040c	e89d6000	 ldmia       sp, {sp, lr}
  00410	e12fff1e	 bx          lr
  00414		 |$LN42@UpdateDevi|
  00414		 |$LN43@UpdateDevi|
  00414	00220424	 DCD         0x220424
  00418		 |$LN44@UpdateDevi|
  00418	00220414	 DCD         0x220414
  0041c		 |$LN45@UpdateDevi|
  0041c	00000000	 DCD         |??_C@_1GE@NNLEPPKD@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAT?$AAu?$AAr?$AAn?$AAi@|
  00420		 |$LN46@UpdateDevi|
  00420	00000000	 DCD         |dpCurSettings|
  00424		 |$LN47@UpdateDevi|
  00424	00220428	 DCD         0x220428
  00428		 |$LN48@UpdateDevi|
  00428	00220418	 DCD         0x220418
  0042c		 |$LN49@UpdateDevi|
  0042c	00000000	 DCD         |??_C@_1GG@EEMGPBNG@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAT?$AAu?$AAr?$AAn?$AAi@|
  00430		 |$LN50@UpdateDevi|
  00430	00000000	 DCD         |??_C@_1IE@CJBJIKFA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAg@|
  00434		 |$M45814|

			 ENDP  ; |UpdateDevicePower|

	EXPORT	|__$ArrayPad$| [ DATA ]
	IMPORT	|CeLogData|
	IMPORT	|StringCchLengthW|
	IMPORT	|StringCchVPrintfW|
	IMPORT	|__security_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_check_cookie|

  00018			 AREA	 |.pdata|, PDATA
|$T45839| DCD	|$LN7@CeLogMsg|
	DCD	0xc0003704

  00000			 AREA	 |.xdata|, DATA
|$T45835| DCD	0xffffffcc
; Function compile flags: /Odtp
; File c:\wince600\public\common\sdk\inc\celog.h

  00434			 AREA	 |.text|, CODE, ARM

  00434	00000000	 DCD         |__GSHandlerCheck|
  00438	00000000	 DCD         |$T45835|

  0043c		 |CeLogMsg| PROC

; 1020 : {

  0043c		 |$LN7@CeLogMsg|
  0043c	e1a0c00d	 mov         r12, sp
  00440	e92d000f	 stmdb       sp!, {r0 - r3}
  00444	e92d5000	 stmdb       sp!, {r12, lr}
  00448	e24ddd09	 sub         sp, sp, #9, 26
  0044c		 |$M45836|
  0044c	e59f30c0	 ldr         r3, [pc, #0xC0]
  00450	e5933000	 ldr         r3, [r3]
  00454	e58d3224	 str         r3, [sp, #0x224]

; 1021 :     va_list arglist;
; 1022 :     WCHAR   szTemp[MAX_PATH];
; 1023 :     size_t  cchLen;
; 1024 :     HRESULT hr;
; 1025 : 
; 1026 :     // Compose a single string using the input args
; 1027 :     va_start(arglist, szFormat);

  00458	e28d3f92	 add         r3, sp, #0x92, 30
  0045c	e2833004	 add         r3, r3, #4
  00460	e58d3010	 str         r3, [sp, #0x10]

; 1028 :     hr = StringCchVPrintfW(szTemp, MAX_PATH, szFormat, arglist);

  00464	e59d3010	 ldr         r3, [sp, #0x10]
  00468	e59d2248	 ldr         r2, [sp, #0x248]
  0046c	e3a01f41	 mov         r1, #0x41, 30
  00470	e28d0014	 add         r0, sp, #0x14
  00474	eb000000	 bl          StringCchVPrintfW
  00478	e58d0238	 str         r0, [sp, #0x238]
  0047c	e59d3238	 ldr         r3, [sp, #0x238]
  00480	e58d321c	 str         r3, [sp, #0x21C]

; 1029 :     if (SUCCEEDED(hr)) {

  00484	e59d321c	 ldr         r3, [sp, #0x21C]
  00488	e3530000	 cmp         r3, #0
  0048c	ba00001b	 blt         |$LN2@CeLogMsg|

; 1030 :         hr = StringCchLengthW(szTemp, MAX_PATH, &cchLen);

  00490	e28d2e22	 add         r2, sp, #0x22, 28
  00494	e3a01f41	 mov         r1, #0x41, 30
  00498	e28d0014	 add         r0, sp, #0x14
  0049c	eb000000	 bl          StringCchLengthW
  004a0	e58d023c	 str         r0, [sp, #0x23C]
  004a4	e59d323c	 ldr         r3, [sp, #0x23C]
  004a8	e58d321c	 str         r3, [sp, #0x21C]

; 1031 :         if (SUCCEEDED(hr)) {

  004ac	e59d321c	 ldr         r3, [sp, #0x21C]
  004b0	e3530000	 cmp         r3, #0
  004b4	ba000011	 blt         |$LN1@CeLogMsg|

; 1032 :             CeLogData(TRUE, CELID_RAW_WCHAR, szTemp, (WORD)((cchLen + 1) * sizeof(WCHAR)),
; 1033 :                       0, CELZONE_ALWAYSON, 0, FALSE);

  004b8	e3a03000	 mov         r3, #0
  004bc	e58d300c	 str         r3, [sp, #0xC]
  004c0	e3a03000	 mov         r3, #0
  004c4	e58d3008	 str         r3, [sp, #8]
  004c8	e3a03101	 mov         r3, #1, 2
  004cc	e58d3004	 str         r3, [sp, #4]
  004d0	e3a03000	 mov         r3, #0
  004d4	e58d3000	 str         r3, [sp]
  004d8	e59d3220	 ldr         r3, [sp, #0x220]
  004dc	e2832001	 add         r2, r3, #1
  004e0	e3a03002	 mov         r3, #2
  004e4	e0030392	 mul         r3, r2, r3
  004e8	e1a03803	 mov         r3, r3, lsl #16
  004ec	e1a03823	 mov         r3, r3, lsr #16
  004f0	e28d2014	 add         r2, sp, #0x14
  004f4	e3a0104a	 mov         r1, #0x4A
  004f8	e3a00001	 mov         r0, #1
  004fc	eb000000	 bl          CeLogData
  00500		 |$LN1@CeLogMsg|
  00500		 |$LN2@CeLogMsg|

; 1020 : {

  00500	e59d0224	 ldr         r0, [sp, #0x224]
  00504	eb000000	 bl          __security_check_cookie

; 1034 :         }
; 1035 :     }
; 1036 : }

  00508	e28ddd09	 add         sp, sp, #9, 26
  0050c	e89d6000	 ldmia       sp, {sp, lr}
  00510	e12fff1e	 bx          lr
  00514		 |$LN8@CeLogMsg|
  00514		 |$LN9@CeLogMsg|
  00514	00000000	 DCD         |__security_cookie|
  00518		 |$M45837|

			 ENDP  ; |CeLogMsg|

	EXPORT	|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1II@NDCMBDLM@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_IssueTransfer|

  00020			 AREA	 |.pdata|, PDATA
|$T45851| DCD	|$LN12@UfnPdd_Iss|
	DCD	0x40006904
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\usbd\pdd\pdd.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "E", 0x0, "B"
	DCB	0x0, "U", 0x0, "G", 0x0, "C", 0x0, "H", 0x0, "K", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, "t", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1II@NDCMBDLM@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "_", 0x0, "M", 0x0, "S", 0x0, "_", 0x0, "V"
	DCB	0x0, "1", 0x0, "\\", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "D"
	DCB	0x0, "\\", 0x0, "P", 0x0, "D", 0x0, "D", 0x0, "\\", 0x0, "."
	DCB	0x0, "\\", 0x0, "p", 0x0, "d", 0x0, "d", 0x0, ".", 0x0, "c"
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00518			 AREA	 |.text|, CODE, ARM

  00518		 |UfnPdd_IssueTransfer| PROC

; 1094 : {

  00518		 |$LN12@UfnPdd_Iss|
  00518	e1a0c00d	 mov         r12, sp
  0051c	e92d0007	 stmdb       sp!, {r0 - r2}
  00520	e92d5000	 stmdb       sp!, {r12, lr}
  00524	e24dd018	 sub         sp, sp, #0x18
  00528		 |$M45848|

; 1095 :     USBFN_PDD *pPdd = pPddContext;

  00528	e59d3020	 ldr         r3, [sp, #0x20]
  0052c	e58d3008	 str         r3, [sp, #8]

; 1096 :     OMAP2420_USBD_REGS *pUSBDRegs = pPdd->pUSBDRegs;

  00530	e59d3008	 ldr         r3, [sp, #8]
  00534	e2833024	 add         r3, r3, #0x24
  00538	e5933000	 ldr         r3, [r3]
  0053c	e58d3004	 str         r3, [sp, #4]

; 1097 :     DWORD epNum;
; 1098 : 
; 1099 : 
; 1100 :     // Save transfer for interrupt thread
; 1101 :     pPdd->ep[endPoint].pTransfer = pTransfer;

  00540	e59d3008	 ldr         r3, [sp, #8]
  00544	e2831068	 add         r1, r3, #0x68
  00548	e59d2024	 ldr         r2, [sp, #0x24]
  0054c	e3a03010	 mov         r3, #0x10
  00550	e0030392	 mul         r3, r2, r3
  00554	e0813003	 add         r3, r1, r3
  00558	e283200c	 add         r2, r3, #0xC
  0055c	e59d3028	 ldr         r3, [sp, #0x28]
  00560	e5823000	 str         r3, [r2]

; 1102 : 
; 1103 :     if (pTransfer->pvBuffer == NULL)

  00564	e59d3028	 ldr         r3, [sp, #0x28]
  00568	e2833004	 add         r3, r3, #4
  0056c	e5933000	 ldr         r3, [r3]
  00570	e3530000	 cmp         r3, #0
  00574	1a000003	 bne         |$LN3@UfnPdd_Iss|

; 1104 :     {
; 1105 :         // Sync Length with buffer.
; 1106 :         pTransfer->cbBuffer = 0;

  00578	e59d3028	 ldr         r3, [sp, #0x28]
  0057c	e283200c	 add         r2, r3, #0xC
  00580	e3a03000	 mov         r3, #0
  00584	e5823000	 str         r3, [r2]
  00588		 |$LN3@UfnPdd_Iss|

; 1107 :     }
; 1108 : 
; 1109 :     DEBUGCHK(pTransfer->dwUsbError == UFN_NOT_COMPLETE_ERROR);

  00588	e59d3028	 ldr         r3, [sp, #0x28]
  0058c	e2833014	 add         r3, r3, #0x14
  00590	e5932000	 ldr         r2, [r3]
  00594	e3a03c01	 mov         r3, #1, 24
  00598	e3833003	 orr         r3, r3, #3
  0059c	e1520003	 cmp         r2, r3
  005a0	1a000002	 bne         |$LN6@UfnPdd_Iss|
  005a4	e3a03001	 mov         r3, #1
  005a8	e58d3010	 str         r3, [sp, #0x10]
  005ac	ea000008	 b           |$LN7@UfnPdd_Iss|
  005b0		 |$LN6@UfnPdd_Iss|
  005b0	e3a03b01	 mov         r3, #1, 22
  005b4	e3833055	 orr         r3, r3, #0x55
  005b8	e59f20f8	 ldr         r2, [pc, #0xF8]
  005bc	e59f10f0	 ldr         r1, [pc, #0xF0]
  005c0	e59f00e8	 ldr         r0, [pc, #0xE8]
  005c4	eb000000	 bl          NKDbgPrintfW
  005c8	e6000010	 __debugbreak_ce
  005cc	e3a03000	 mov         r3, #0
  005d0	e58d3010	 str         r3, [sp, #0x10]
  005d4		 |$LN7@UfnPdd_Iss|

; 1110 : 
; 1111 :     // Depending on direction
; 1112 :     if (TRANSFER_IS_IN(pTransfer))

  005d4	e59d3028	 ldr         r3, [sp, #0x28]
  005d8	e5933000	 ldr         r3, [r3]
  005dc	e3130080	 tst         r3, #0x80
  005e0	0a000016	 beq         |$LN2@UfnPdd_Iss|

; 1113 :     {
; 1114 :         pPdd->ep[endPoint].fZeroLengthNeeded = (pTransfer->cbBuffer==0);

  005e4	e59d3028	 ldr         r3, [sp, #0x28]
  005e8	e283300c	 add         r3, r3, #0xC
  005ec	e5933000	 ldr         r3, [r3]
  005f0	e3530000	 cmp         r3, #0
  005f4	1a000002	 bne         |$LN8@UfnPdd_Iss|
  005f8	e3a03001	 mov         r3, #1
  005fc	e58d3014	 str         r3, [sp, #0x14]
  00600	ea000001	 b           |$LN9@UfnPdd_Iss|
  00604		 |$LN8@UfnPdd_Iss|
  00604	e3a03000	 mov         r3, #0
  00608	e58d3014	 str         r3, [sp, #0x14]
  0060c		 |$LN9@UfnPdd_Iss|
  0060c	e59d3008	 ldr         r3, [sp, #8]
  00610	e2831068	 add         r1, r3, #0x68
  00614	e59d2024	 ldr         r2, [sp, #0x24]
  00618	e3a03010	 mov         r3, #0x10
  0061c	e0030392	 mul         r3, r2, r3
  00620	e0813003	 add         r3, r1, r3
  00624	e2832008	 add         r2, r3, #8
  00628	e59d3014	 ldr         r3, [sp, #0x14]
  0062c	e5823000	 str         r3, [r2]

; 1115 :         IssueTxTransfer(pPdd, endPoint);

  00630	e59d1024	 ldr         r1, [sp, #0x24]
  00634	e59d0008	 ldr         r0, [sp, #8]
  00638	eb000000	 bl          IssueTxTransfer

; 1116 :     }
; 1117 :     else

  0063c	ea000015	 b           |$LN1@UfnPdd_Iss|
  00640		 |$LN2@UfnPdd_Iss|

; 1118 :     {
; 1119 :         pPdd->ep[endPoint].fZeroLengthNeeded  = FALSE;

  00640	e59d3008	 ldr         r3, [sp, #8]
  00644	e2831068	 add         r1, r3, #0x68
  00648	e59d2024	 ldr         r2, [sp, #0x24]
  0064c	e3a03010	 mov         r3, #0x10
  00650	e0030392	 mul         r3, r2, r3
  00654	e0813003	 add         r3, r1, r3
  00658	e2832008	 add         r2, r3, #8
  0065c	e3a03000	 mov         r3, #0
  00660	e5823000	 str         r3, [r2]

; 1120 : 
; 1121 :         // Select EP
; 1122 :         epNum = USBD_EP_NUM & endPoint;

  00664	e59d3024	 ldr         r3, [sp, #0x24]
  00668	e203300f	 and         r3, r3, #0xF
  0066c	e58d3000	 str         r3, [sp]

; 1123 :         SelectEp(pPdd, epNum);

  00670	e59d1000	 ldr         r1, [sp]
  00674	e59d0008	 ldr         r0, [sp, #8]
  00678	eb000000	 bl          SelectEp

; 1124 : 
; 1125 :         // Enable EP FIFO
; 1126 :         OUTREG32(&pUSBDRegs->CTRL, USBD_CTRL_FIFO_EN);

  0067c	e59d3004	 ldr         r3, [sp, #4]
  00680	e283200c	 add         r2, r3, #0xC
  00684	e3a03004	 mov         r3, #4
  00688	e5823000	 str         r3, [r2]

; 1127 : 
; 1128 :         // Deselect EP
; 1129 :         DeselectEp(pPdd, epNum);

  0068c	e59d1000	 ldr         r1, [sp]
  00690	e59d0008	 ldr         r0, [sp, #8]
  00694	eb000000	 bl          DeselectEp
  00698		 |$LN1@UfnPdd_Iss|

; 1130 :     }
; 1131 : 
; 1132 :     return ERROR_SUCCESS;

  00698	e3a03000	 mov         r3, #0
  0069c	e58d300c	 str         r3, [sp, #0xC]

; 1133 : }

  006a0	e59d000c	 ldr         r0, [sp, #0xC]
  006a4	e28dd018	 add         sp, sp, #0x18
  006a8	e89d6000	 ldmia       sp, {sp, lr}
  006ac	e12fff1e	 bx          lr
  006b0		 |$LN13@UfnPdd_Iss|
  006b0		 |$LN14@UfnPdd_Iss|
  006b0	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  006b4		 |$LN15@UfnPdd_Iss|
  006b4	00000000	 DCD         |dpCurSettings|
  006b8		 |$LN16@UfnPdd_Iss|
  006b8	00000000	 DCD         |??_C@_1II@NDCMBDLM@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  006bc		 |$M45849|

			 ENDP  ; |UfnPdd_IssueTransfer|


  00028			 AREA	 |.pdata|, PDATA
|$T45860| DCD	|$LN5@SelectEp|
	DCD	0x40000903
; Function compile flags: /Odtp

  006bc			 AREA	 |.text|, CODE, ARM

  006bc		 |SelectEp| PROC

; 199  : {

  006bc		 |$LN5@SelectEp|
  006bc	e1a0c00d	 mov         r12, sp
  006c0	e92d0003	 stmdb       sp!, {r0, r1}
  006c4	e92d5000	 stmdb       sp!, {r12, lr}
  006c8		 |$M45857|

; 200  :     Select(pPdd, USBD_EP_NUM_SEL | epNum);

  006c8	e59d300c	 ldr         r3, [sp, #0xC]
  006cc	e3831020	 orr         r1, r3, #0x20
  006d0	e59d0008	 ldr         r0, [sp, #8]
  006d4	eb000000	 bl          Select

; 201  : }

  006d8	e89d6000	 ldmia       sp, {sp, lr}
  006dc	e12fff1e	 bx          lr
  006e0		 |$M45858|

			 ENDP  ; |SelectEp|

	EXPORT	|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|EnterCriticalSection|

  00030			 AREA	 |.pdata|, PDATA
|$T45867| DCD	|$LN7@Select|
	DCD	0x40002804

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| DCB "U", 0x0
	DCB	"n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n", 0x0
	DCB	0x0, 0x0				; `string'
; Function compile flags: /Odtp

  006e0			 AREA	 |.text|, CODE, ARM

  006e0		 |Select| PROC

; 184  : {

  006e0		 |$LN7@Select|
  006e0	e1a0c00d	 mov         r12, sp
  006e4	e92d0003	 stmdb       sp!, {r0, r1}
  006e8	e92d5000	 stmdb       sp!, {r12, lr}
  006ec	e24dd004	 sub         sp, sp, #4
  006f0		 |$M45864|

; 185  :     EnterCriticalSection(&pPdd->epCS);

  006f0	e59d300c	 ldr         r3, [sp, #0xC]
  006f4	e2830054	 add         r0, r3, #0x54
  006f8	eb000000	 bl          EnterCriticalSection

; 186  :     ASSERT(InEp++ >= 0);

  006fc	e59f3078	 ldr         r3, [pc, #0x78]
  00700	e5933000	 ldr         r3, [r3]
  00704	e3530000	 cmp         r3, #0
  00708	e59f306c	 ldr         r3, [pc, #0x6C]
  0070c	e5933000	 ldr         r3, [r3]
  00710	e2832001	 add         r2, r3, #1
  00714	e59f3060	 ldr         r3, [pc, #0x60]
  00718	e5832000	 str         r2, [r3]
  0071c	ba000002	 blt         |$LN3@Select|
  00720	e3a03001	 mov         r3, #1
  00724	e58d3000	 str         r3, [sp]
  00728	ea000007	 b           |$LN4@Select|
  0072c		 |$LN3@Select|
  0072c	e3a030ba	 mov         r3, #0xBA
  00730	e59f2040	 ldr         r2, [pc, #0x40]
  00734	e59f1038	 ldr         r1, [pc, #0x38]
  00738	e59f0030	 ldr         r0, [pc, #0x30]
  0073c	eb000000	 bl          NKDbgPrintfW
  00740	e6000010	 __debugbreak_ce
  00744	e3a03000	 mov         r3, #0
  00748	e58d3000	 str         r3, [sp]
  0074c		 |$LN4@Select|

; 187  :     OUTREG32(&pPdd->pUSBDRegs->EP_NUM, dwVal);

  0074c	e59d300c	 ldr         r3, [sp, #0xC]
  00750	e2833024	 add         r3, r3, #0x24
  00754	e5933000	 ldr         r3, [r3]
  00758	e2832004	 add         r2, r3, #4
  0075c	e59d3010	 ldr         r3, [sp, #0x10]
  00760	e5823000	 str         r3, [r2]

; 188  : }

  00764	e28dd004	 add         sp, sp, #4
  00768	e89d6000	 ldmia       sp, {sp, lr}
  0076c	e12fff1e	 bx          lr
  00770		 |$LN8@Select|
  00770		 |$LN9@Select|
  00770	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  00774		 |$LN10@Select|
  00774	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  00778		 |$LN11@Select|
  00778	00000000	 DCD         |??_C@_1II@NDCMBDLM@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  0077c		 |$LN12@Select|
  0077c	00000000	 DCD         |InEp|
  00780		 |$M45865|

			 ENDP  ; |Select|


  00038			 AREA	 |.pdata|, PDATA
|$T45877| DCD	|$LN5@DeselectEp|
	DCD	0x40000803
; Function compile flags: /Odtp

  00780			 AREA	 |.text|, CODE, ARM

  00780		 |DeselectEp| PROC

; 219  : {

  00780		 |$LN5@DeselectEp|
  00780	e1a0c00d	 mov         r12, sp
  00784	e92d0003	 stmdb       sp!, {r0, r1}
  00788	e92d5000	 stmdb       sp!, {r12, lr}
  0078c		 |$M45874|

; 220  :     Deselect(pPdd, epNum);

  0078c	e59d100c	 ldr         r1, [sp, #0xC]
  00790	e59d0008	 ldr         r0, [sp, #8]
  00794	eb000000	 bl          Deselect

; 221  : }

  00798	e89d6000	 ldmia       sp, {sp, lr}
  0079c	e12fff1e	 bx          lr
  007a0		 |$M45875|

			 ENDP  ; |DeselectEp|

	IMPORT	|LeaveCriticalSection|

  00040			 AREA	 |.pdata|, PDATA
|$T45884| DCD	|$LN7@Deselect|
	DCD	0x40002804
; Function compile flags: /Odtp

  007a0			 AREA	 |.text|, CODE, ARM

  007a0		 |Deselect| PROC

; 205  : {

  007a0		 |$LN7@Deselect|
  007a0	e1a0c00d	 mov         r12, sp
  007a4	e92d0003	 stmdb       sp!, {r0, r1}
  007a8	e92d5000	 stmdb       sp!, {r12, lr}
  007ac	e24dd004	 sub         sp, sp, #4
  007b0		 |$M45881|

; 206  :     OUTREG32(&pPdd->pUSBDRegs->EP_NUM, dwValue);

  007b0	e59d300c	 ldr         r3, [sp, #0xC]
  007b4	e2833024	 add         r3, r3, #0x24
  007b8	e5933000	 ldr         r3, [r3]
  007bc	e2832004	 add         r2, r3, #4
  007c0	e59d3010	 ldr         r3, [sp, #0x10]
  007c4	e5823000	 str         r3, [r2]

; 207  :     ASSERT(--InEp >= 0);

  007c8	e59f306c	 ldr         r3, [pc, #0x6C]
  007cc	e5933000	 ldr         r3, [r3]
  007d0	e2432001	 sub         r2, r3, #1
  007d4	e59f3060	 ldr         r3, [pc, #0x60]
  007d8	e5832000	 str         r2, [r3]
  007dc	e59f3058	 ldr         r3, [pc, #0x58]
  007e0	e5933000	 ldr         r3, [r3]
  007e4	e3530000	 cmp         r3, #0
  007e8	ba000002	 blt         |$LN3@Deselect|
  007ec	e3a03001	 mov         r3, #1
  007f0	e58d3000	 str         r3, [sp]
  007f4	ea000007	 b           |$LN4@Deselect|
  007f8		 |$LN3@Deselect|
  007f8	e3a030cf	 mov         r3, #0xCF
  007fc	e59f2034	 ldr         r2, [pc, #0x34]
  00800	e59f102c	 ldr         r1, [pc, #0x2C]
  00804	e59f0024	 ldr         r0, [pc, #0x24]
  00808	eb000000	 bl          NKDbgPrintfW
  0080c	e6000010	 __debugbreak_ce
  00810	e3a03000	 mov         r3, #0
  00814	e58d3000	 str         r3, [sp]
  00818		 |$LN4@Deselect|

; 208  :     LeaveCriticalSection(&pPdd->epCS);

  00818	e59d300c	 ldr         r3, [sp, #0xC]
  0081c	e2830054	 add         r0, r3, #0x54
  00820	eb000000	 bl          LeaveCriticalSection

; 209  : }

  00824	e28dd004	 add         sp, sp, #4
  00828	e89d6000	 ldmia       sp, {sp, lr}
  0082c	e12fff1e	 bx          lr
  00830		 |$LN8@Deselect|
  00830		 |$LN9@Deselect|
  00830	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  00834		 |$LN10@Deselect|
  00834	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  00838		 |$LN11@Deselect|
  00838	00000000	 DCD         |??_C@_1II@NDCMBDLM@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  0083c		 |$LN12@Deselect|
  0083c	00000000	 DCD         |InEp|
  00840		 |$M45882|

			 ENDP  ; |Deselect|

	EXPORT	|??_C@_1IE@DNBOEMPM@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@OMIKPONL@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@BMACECFD@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@NABMILJO@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAp@| [ DATA ] ; `string'
	IMPORT	|__C_specific_handler|

  00048			 AREA	 |.pdata|, PDATA
|$T45939| DCD	|$LN58@IssueTxTra|
	DCD	0xc0019305
|$T45941| DCD	|$LN48@IssueTxTra|
	DCD	0x40000a02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@DNBOEMPM@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AAi@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "I", 0x0, "s"
	DCB	0x0, "s", 0x0, "u", 0x0, "e", 0x0, "T", 0x0, "x", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "N", 0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f", 0x0, "y"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "M", 0x0, "D"
	DCB	0x0, "D", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "a", 0x0, "t"
	DCB	0x0, " ", 0x0, "t", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "i", 0x0, "s"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, ".", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@OMIKPONL@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "I", 0x0, "s"
	DCB	0x0, "s", 0x0, "u", 0x0, "e", 0x0, "T", 0x0, "x", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "p", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "i", 0x0, "s"
	DCB	0x0, " ", 0x0, "N", 0x0, "U", 0x0, "L", 0x0, "L", 0x0, ";"
	DCB	0x0, " ", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "S"
	DCB	0x0, "h", 0x0, "a", 0x0, "k", 0x0, "e", 0x0, " ", 0x0, "A"
	DCB	0x0, "C", 0x0, "K", 0x0, ".", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@BMACECFD@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "I", 0x0, "s"
	DCB	0x0, "s", 0x0, "u", 0x0, "e", 0x0, "T", 0x0, "x", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e"
	DCB	0x0, "s", 0x0, " ", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "e"
	DCB	0x0, "p", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "X", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@NABMILJO@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAp@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "I", 0x0, "s"
	DCB	0x0, "s", 0x0, "u", 0x0, "e", 0x0, "T", 0x0, "x", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " "
	DCB	0x0, "p", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, " ", 0x0, "("
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00004			 AREA	 |.xdata|, DATA
|$T45937| DCD	0x1
	DCD	|$LN52@IssueTxTra|
	DCD	|$LN53@IssueTxTra|
	DCD	|$LN48@IssueTxTra|
	DCD	|$LN49@IssueTxTra|
; Function compile flags: /Odtp

  00840			 AREA	 |.text|, CODE, ARM

  00840	00000000	 DCD         |__C_specific_handler|
  00844	00000000	 DCD         |$T45937|

  00848		 |IssueTxTransfer| PROC

; 450  : {

  00848		 |$LN58@IssueTxTra|
  00848	e1a0c00d	 mov         r12, sp
  0084c	e92d0003	 stmdb       sp!, {r0, r1}
  00850	e92d5800	 stmdb       sp!, {r11, r12, lr}
  00854	e28db00c	 add         r11, sp, #0xC
  00858	e24dd07c	 sub         sp, sp, #0x7C
  0085c		 |$LN56@IssueTxTra|

; 451  :     OMAP2420_USBD_REGS *pUSBDRegs = pPdd->pUSBDRegs;

  0085c	e59b3000	 ldr         r3, [r11]
  00860	e2833024	 add         r3, r3, #0x24
  00864	e5933000	 ldr         r3, [r3]
  00868	e50b306c	 str         r3, [r11, #-0x6C]

; 452  :     STransfer *pTransfer;
; 453  :     BOOL complete = FALSE;

  0086c	e3a03000	 mov         r3, #0
  00870	e50b305c	 str         r3, [r11, #-0x5C]

; 454  :     DWORD stat, space, count, remain;
; 455  :     UCHAR *pBuffer;
; 456  :     DWORD data;
; 457  :     DWORD epNum;
; 458  : 
; 459  :     // Get active transfer
; 460  :     pTransfer = pPdd->ep[endPoint].pTransfer;

  00874	e59b3000	 ldr         r3, [r11]
  00878	e2831068	 add         r1, r3, #0x68
  0087c	e59b2004	 ldr         r2, [r11, #4]
  00880	e3a03010	 mov         r3, #0x10
  00884	e0030392	 mul         r3, r2, r3
  00888	e0813003	 add         r3, r1, r3
  0088c	e283300c	 add         r3, r3, #0xC
  00890	e5933000	 ldr         r3, [r3]
  00894	e50b3064	 str         r3, [r11, #-0x64]

; 461  : 
; 462  :     DEBUGMSG(ZONE_TRANSFER, (L"USBD IssueTxTransfer() - "
; 463  :         L"EP %d pTransfer 0x%08X (%d, %d, %d)\r\n",
; 464  :                  endPoint,
; 465  :                  pTransfer,
; 466  :                  pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 467  :                  pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 468  :                  pTransfer != NULL ? pTransfer->dwUsbError : -1));

  00898	e59f360c	 ldr         r3, [pc, #0x60C]
  0089c	e5933440	 ldr         r3, [r3, #0x440]
  008a0	e3130008	 tst         r3, #8
  008a4	0a000059	 beq         |$LN31@IssueTxTra|
  008a8	e59f35fc	 ldr         r3, [pc, #0x5FC]
  008ac	e5933440	 ldr         r3, [r3, #0x440]
  008b0	e3130801	 tst         r3, #1, 16
  008b4	0a000029	 beq         |$LN29@IssueTxTra|
  008b8	e51b3064	 ldr         r3, [r11, #-0x64]
  008bc	e3530000	 cmp         r3, #0
  008c0	0a000004	 beq         |$LN17@IssueTxTra|
  008c4	e51b3064	 ldr         r3, [r11, #-0x64]
  008c8	e2833014	 add         r3, r3, #0x14
  008cc	e5933000	 ldr         r3, [r3]
  008d0	e50b3048	 str         r3, [r11, #-0x48]
  008d4	ea000001	 b           |$LN18@IssueTxTra|
  008d8		 |$LN17@IssueTxTra|
  008d8	e3e03000	 mvn         r3, #0
  008dc	e50b3048	 str         r3, [r11, #-0x48]
  008e0		 |$LN18@IssueTxTra|
  008e0	e51b3064	 ldr         r3, [r11, #-0x64]
  008e4	e3530000	 cmp         r3, #0
  008e8	0a000004	 beq         |$LN19@IssueTxTra|
  008ec	e51b3064	 ldr         r3, [r11, #-0x64]
  008f0	e2833010	 add         r3, r3, #0x10
  008f4	e5933000	 ldr         r3, [r3]
  008f8	e50b3044	 str         r3, [r11, #-0x44]
  008fc	ea000001	 b           |$LN20@IssueTxTra|
  00900		 |$LN19@IssueTxTra|
  00900	e3a03000	 mov         r3, #0
  00904	e50b3044	 str         r3, [r11, #-0x44]
  00908		 |$LN20@IssueTxTra|
  00908	e51b3064	 ldr         r3, [r11, #-0x64]
  0090c	e3530000	 cmp         r3, #0
  00910	0a000004	 beq         |$LN21@IssueTxTra|
  00914	e51b3064	 ldr         r3, [r11, #-0x64]
  00918	e283300c	 add         r3, r3, #0xC
  0091c	e5933000	 ldr         r3, [r3]
  00920	e50b3040	 str         r3, [r11, #-0x40]
  00924	ea000001	 b           |$LN22@IssueTxTra|
  00928		 |$LN21@IssueTxTra|
  00928	e3a03000	 mov         r3, #0
  0092c	e50b3040	 str         r3, [r11, #-0x40]
  00930		 |$LN22@IssueTxTra|
  00930	e51b3048	 ldr         r3, [r11, #-0x48]
  00934	e58d3004	 str         r3, [sp, #4]
  00938	e51b3044	 ldr         r3, [r11, #-0x44]
  0093c	e58d3000	 str         r3, [sp]
  00940	e51b3040	 ldr         r3, [r11, #-0x40]
  00944	e51b2064	 ldr         r2, [r11, #-0x64]
  00948	e59b1004	 ldr         r1, [r11, #4]
  0094c	e59f0564	 ldr         r0, [pc, #0x564]
  00950	eb000000	 bl          CeLogMsg
  00954	e3a03001	 mov         r3, #1
  00958	e50b303c	 str         r3, [r11, #-0x3C]
  0095c	ea000028	 b           |$LN30@IssueTxTra|
  00960		 |$LN29@IssueTxTra|
  00960	e51b3064	 ldr         r3, [r11, #-0x64]
  00964	e3530000	 cmp         r3, #0
  00968	0a000004	 beq         |$LN23@IssueTxTra|
  0096c	e51b3064	 ldr         r3, [r11, #-0x64]
  00970	e2833014	 add         r3, r3, #0x14
  00974	e5933000	 ldr         r3, [r3]
  00978	e50b3038	 str         r3, [r11, #-0x38]
  0097c	ea000001	 b           |$LN24@IssueTxTra|
  00980		 |$LN23@IssueTxTra|
  00980	e3e03000	 mvn         r3, #0
  00984	e50b3038	 str         r3, [r11, #-0x38]
  00988		 |$LN24@IssueTxTra|
  00988	e51b3064	 ldr         r3, [r11, #-0x64]
  0098c	e3530000	 cmp         r3, #0
  00990	0a000004	 beq         |$LN25@IssueTxTra|
  00994	e51b3064	 ldr         r3, [r11, #-0x64]
  00998	e2833010	 add         r3, r3, #0x10
  0099c	e5933000	 ldr         r3, [r3]
  009a0	e50b3034	 str         r3, [r11, #-0x34]
  009a4	ea000001	 b           |$LN26@IssueTxTra|
  009a8		 |$LN25@IssueTxTra|
  009a8	e3a03000	 mov         r3, #0
  009ac	e50b3034	 str         r3, [r11, #-0x34]
  009b0		 |$LN26@IssueTxTra|
  009b0	e51b3064	 ldr         r3, [r11, #-0x64]
  009b4	e3530000	 cmp         r3, #0
  009b8	0a000004	 beq         |$LN27@IssueTxTra|
  009bc	e51b3064	 ldr         r3, [r11, #-0x64]
  009c0	e283300c	 add         r3, r3, #0xC
  009c4	e5933000	 ldr         r3, [r3]
  009c8	e50b3030	 str         r3, [r11, #-0x30]
  009cc	ea000001	 b           |$LN28@IssueTxTra|
  009d0		 |$LN27@IssueTxTra|
  009d0	e3a03000	 mov         r3, #0
  009d4	e50b3030	 str         r3, [r11, #-0x30]
  009d8		 |$LN28@IssueTxTra|
  009d8	e51b3038	 ldr         r3, [r11, #-0x38]
  009dc	e58d3004	 str         r3, [sp, #4]
  009e0	e51b3034	 ldr         r3, [r11, #-0x34]
  009e4	e58d3000	 str         r3, [sp]
  009e8	e51b3030	 ldr         r3, [r11, #-0x30]
  009ec	e51b2064	 ldr         r2, [r11, #-0x64]
  009f0	e59b1004	 ldr         r1, [r11, #4]
  009f4	e59f04bc	 ldr         r0, [pc, #0x4BC]
  009f8	eb000000	 bl          NKDbgPrintfW
  009fc	e3a03000	 mov         r3, #0
  00a00	e50b303c	 str         r3, [r11, #-0x3C]
  00a04		 |$LN30@IssueTxTra|
  00a04	e3a03001	 mov         r3, #1
  00a08	e50b302c	 str         r3, [r11, #-0x2C]
  00a0c	ea000001	 b           |$LN32@IssueTxTra|
  00a10		 |$LN31@IssueTxTra|
  00a10	e3a03000	 mov         r3, #0
  00a14	e50b302c	 str         r3, [r11, #-0x2C]
  00a18		 |$LN32@IssueTxTra|

; 469  : 
; 470  :     // Select EP
; 471  :     epNum = (USBD_EP_NUM & endPoint) | USBD_EP_NUM_DIRIN;

  00a18	e59b3004	 ldr         r3, [r11, #4]
  00a1c	e203300f	 and         r3, r3, #0xF
  00a20	e3833010	 orr         r3, r3, #0x10
  00a24	e50b3078	 str         r3, [r11, #-0x78]

; 472  :     SelectEp(pPdd, epNum);

  00a28	e51b1078	 ldr         r1, [r11, #-0x78]
  00a2c	e59b0000	 ldr         r0, [r11]
  00a30	eb000000	 bl          SelectEp

; 473  : 
; 474  : 
; 475  :     // Get EP status
; 476  :     stat = INREG32(&pUSBDRegs->STAT_FLG);

  00a34	e51b306c	 ldr         r3, [r11, #-0x6C]
  00a38	e2833010	 add         r3, r3, #0x10
  00a3c	e5933000	 ldr         r3, [r3]
  00a40	e50b3070	 str         r3, [r11, #-0x70]

; 477  : 
; 478  :     // Depending on EP status
; 479  :     if ((stat & USBD_STAT_STALL) != 0)

  00a44	e51b3070	 ldr         r3, [r11, #-0x70]
  00a48	e3130020	 tst         r3, #0x20
  00a4c	0a000004	 beq         |$LN14@IssueTxTra|

; 480  :     {
; 481  :         // We issued stall, remove it...
; 482  :         OUTREG32(&pUSBDRegs->CTRL, USBD_CTRL_CLR_HALT);

  00a50	e51b306c	 ldr         r3, [r11, #-0x6C]
  00a54	e283200c	 add         r2, r3, #0xC
  00a58	e3a03080	 mov         r3, #0x80
  00a5c	e5823000	 str         r3, [r2]

; 483  :     }
; 484  :     else

  00a60	ea0000d9	 b           |$LN13@IssueTxTra|
  00a64		 |$LN14@IssueTxTra|

; 485  :     {
; 486  :         // When transfer is NULL it is handshake ACK
; 487  :         if (pTransfer != NULL)

  00a64	e51b3064	 ldr         r3, [r11, #-0x64]
  00a68	e3530000	 cmp         r3, #0
  00a6c	0a0000c0	 beq         |$LN12@IssueTxTra|

; 488  :         {
; 489  :             // Is this final interrupt of transfer?
; 490  :             if ((pTransfer->cbTransferred == pTransfer->cbBuffer) && (!pPdd->ep[endPoint].fZeroLengthNeeded))

  00a70	e51b3064	 ldr         r3, [r11, #-0x64]
  00a74	e2832010	 add         r2, r3, #0x10
  00a78	e51b3064	 ldr         r3, [r11, #-0x64]
  00a7c	e283300c	 add         r3, r3, #0xC
  00a80	e5922000	 ldr         r2, [r2]
  00a84	e5933000	 ldr         r3, [r3]
  00a88	e1520003	 cmp         r2, r3
  00a8c	1a000010	 bne         |$LN11@IssueTxTra|
  00a90	e59b3000	 ldr         r3, [r11]
  00a94	e2831068	 add         r1, r3, #0x68
  00a98	e59b2004	 ldr         r2, [r11, #4]
  00a9c	e3a03010	 mov         r3, #0x10
  00aa0	e0030392	 mul         r3, r2, r3
  00aa4	e0813003	 add         r3, r1, r3
  00aa8	e2833008	 add         r3, r3, #8
  00aac	e5933000	 ldr         r3, [r3]
  00ab0	e3530000	 cmp         r3, #0
  00ab4	1a000006	 bne         |$LN11@IssueTxTra|

; 491  :             {
; 492  :                 pTransfer->dwUsbError = UFN_NO_ERROR;

  00ab8	e51b3064	 ldr         r3, [r11, #-0x64]
  00abc	e2832014	 add         r2, r3, #0x14
  00ac0	e3a03000	 mov         r3, #0
  00ac4	e5823000	 str         r3, [r2]

; 493  :                 complete = TRUE;

  00ac8	e3a03001	 mov         r3, #1
  00acc	e50b305c	 str         r3, [r11, #-0x5C]

; 494  :             }
; 495  :             else

  00ad0	ea0000a6	 b           |$LN10@IssueTxTra|
  00ad4		 |$LN11@IssueTxTra|
  00ad4		 |$LN52@IssueTxTra|

; 496  :             {
; 497  :                 __try
; 498  :                 {
; 499  :                     pBuffer = (UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;

  00ad4	e51b3064	 ldr         r3, [r11, #-0x64]
  00ad8	e2832004	 add         r2, r3, #4
  00adc	e51b3064	 ldr         r3, [r11, #-0x64]
  00ae0	e2833010	 add         r3, r3, #0x10
  00ae4	e5922000	 ldr         r2, [r2]
  00ae8	e5933000	 ldr         r3, [r3]
  00aec	e0823003	 add         r3, r2, r3
  00af0	e50b3080	 str         r3, [r11, #-0x80]

; 500  :                     space   = pTransfer->cbBuffer - pTransfer->cbTransferred;

  00af4	e51b3064	 ldr         r3, [r11, #-0x64]
  00af8	e283200c	 add         r2, r3, #0xC
  00afc	e51b3064	 ldr         r3, [r11, #-0x64]
  00b00	e2833010	 add         r3, r3, #0x10
  00b04	e5922000	 ldr         r2, [r2]
  00b08	e5933000	 ldr         r3, [r3]
  00b0c	e0423003	 sub         r3, r2, r3
  00b10	e50b3074	 str         r3, [r11, #-0x74]

; 501  : 
; 502  :                     if (endPoint != 0)

  00b14	e59b3004	 ldr         r3, [r11, #4]
  00b18	e3530000	 cmp         r3, #0
  00b1c	0a000009	 beq         |$LN8@IssueTxTra|

; 503  :                     {
; 504  :                         // Non Zero Endpoint: No zero length padding needed.
; 505  :                         pPdd->ep[endPoint].fZeroLengthNeeded  = FALSE;

  00b20	e59b3000	 ldr         r3, [r11]
  00b24	e2831068	 add         r1, r3, #0x68
  00b28	e59b2004	 ldr         r2, [r11, #4]
  00b2c	e3a03010	 mov         r3, #0x10
  00b30	e0030392	 mul         r3, r2, r3
  00b34	e0813003	 add         r3, r1, r3
  00b38	e2832008	 add         r2, r3, #8
  00b3c	e3a03000	 mov         r3, #0
  00b40	e5823000	 str         r3, [r2]

; 506  :                     }
; 507  :                     else

  00b44	ea00001f	 b           |$LN7@IssueTxTra|
  00b48		 |$LN8@IssueTxTra|

; 508  :                     {
; 509  :                         // Zero endpoint: Zero length padding needed if last packet is maxPacketSize.
; 510  :                         pPdd->ep[endPoint].fZeroLengthNeeded = ((space == pPdd->ep[endPoint].maxPacketSize) && (pPdd->setupCount > pTransfer->cbBuffer));

  00b48	e59b3000	 ldr         r3, [r11]
  00b4c	e2831068	 add         r1, r3, #0x68
  00b50	e59b2004	 ldr         r2, [r11, #4]
  00b54	e3a03010	 mov         r3, #0x10
  00b58	e0030392	 mul         r3, r2, r3
  00b5c	e0813003	 add         r3, r1, r3
  00b60	e1d320b0	 ldrh        r2, [r3]
  00b64	e51b3074	 ldr         r3, [r11, #-0x74]
  00b68	e1530002	 cmp         r3, r2
  00b6c	1a00000a	 bne         |$LN33@IssueTxTra|
  00b70	e59b3000	 ldr         r3, [r11]
  00b74	e283304c	 add         r3, r3, #0x4C
  00b78	e1d320b0	 ldrh        r2, [r3]
  00b7c	e51b3064	 ldr         r3, [r11, #-0x64]
  00b80	e283300c	 add         r3, r3, #0xC
  00b84	e5933000	 ldr         r3, [r3]
  00b88	e1520003	 cmp         r2, r3
  00b8c	9a000002	 bls         |$LN33@IssueTxTra|
  00b90	e3a03001	 mov         r3, #1
  00b94	e50b3028	 str         r3, [r11, #-0x28]
  00b98	ea000001	 b           |$LN34@IssueTxTra|
  00b9c		 |$LN33@IssueTxTra|
  00b9c	e3a03000	 mov         r3, #0
  00ba0	e50b3028	 str         r3, [r11, #-0x28]
  00ba4		 |$LN34@IssueTxTra|
  00ba4	e59b3000	 ldr         r3, [r11]
  00ba8	e2831068	 add         r1, r3, #0x68
  00bac	e59b2004	 ldr         r2, [r11, #4]
  00bb0	e3a03010	 mov         r3, #0x10
  00bb4	e0030392	 mul         r3, r2, r3
  00bb8	e0813003	 add         r3, r1, r3
  00bbc	e2832008	 add         r2, r3, #8
  00bc0	e51b3028	 ldr         r3, [r11, #-0x28]
  00bc4	e5823000	 str         r3, [r2]
  00bc8		 |$LN7@IssueTxTra|

; 511  :                     }
; 512  : 
; 513  :                     // How many bytes we can send just now?
; 514  :                     count = pPdd->ep[endPoint].maxPacketSize;

  00bc8	e59b3000	 ldr         r3, [r11]
  00bcc	e2831068	 add         r1, r3, #0x68
  00bd0	e59b2004	 ldr         r2, [r11, #4]
  00bd4	e3a03010	 mov         r3, #0x10
  00bd8	e0030392	 mul         r3, r2, r3
  00bdc	e0813003	 add         r3, r1, r3
  00be0	e1d330b0	 ldrh        r3, [r3]
  00be4	e50b307c	 str         r3, [r11, #-0x7C]

; 515  : 
; 516  :                     if (count > space)

  00be8	e51b207c	 ldr         r2, [r11, #-0x7C]
  00bec	e51b3074	 ldr         r3, [r11, #-0x74]
  00bf0	e1520003	 cmp         r2, r3
  00bf4	9a000001	 bls         |$LN6@IssueTxTra|

; 517  :                     {
; 518  :                         count = space;

  00bf8	e51b3074	 ldr         r3, [r11, #-0x74]
  00bfc	e50b307c	 str         r3, [r11, #-0x7C]
  00c00		 |$LN6@IssueTxTra|

; 519  :                     }
; 520  : 
; 521  :                     // Write data to FIFO
; 522  :                     remain = count;

  00c00	e51b307c	 ldr         r3, [r11, #-0x7C]
  00c04	e50b3068	 str         r3, [r11, #-0x68]
  00c08		 |$LN5@IssueTxTra|

; 523  :                     while (remain > 1)

  00c08	e51b3068	 ldr         r3, [r11, #-0x68]
  00c0c	e3530001	 cmp         r3, #1
  00c10	9a000017	 bls         |$LN4@IssueTxTra|

; 524  :                     {
; 525  :                         data = (pBuffer[1] << 8) | pBuffer[0];

  00c14	e51b3080	 ldr         r3, [r11, #-0x80]
  00c18	e2833001	 add         r3, r3, #1
  00c1c	e5d33000	 ldrb        r3, [r3]
  00c20	e1a02403	 mov         r2, r3, lsl #8
  00c24	e51b3080	 ldr         r3, [r11, #-0x80]
  00c28	e5d33000	 ldrb        r3, [r3]
  00c2c	e1823003	 orr         r3, r2, r3
  00c30	e50b3060	 str         r3, [r11, #-0x60]

; 526  :                         OUTREG16((UINT16*)&pUSBDRegs->DATA, data);

  00c34	e51b3060	 ldr         r3, [r11, #-0x60]
  00c38	e1a02803	 mov         r2, r3, lsl #16
  00c3c	e1a02822	 mov         r2, r2, lsr #16
  00c40	e51b306c	 ldr         r3, [r11, #-0x6C]
  00c44	e2833008	 add         r3, r3, #8
  00c48	e1c320b0	 strh        r2, [r3]

; 527  : 
; 528  :                         pBuffer += 2;

  00c4c	e51b3080	 ldr         r3, [r11, #-0x80]
  00c50	e2833002	 add         r3, r3, #2
  00c54	e50b3080	 str         r3, [r11, #-0x80]

; 529  :                         space   -= 2;

  00c58	e51b3074	 ldr         r3, [r11, #-0x74]
  00c5c	e2433002	 sub         r3, r3, #2
  00c60	e50b3074	 str         r3, [r11, #-0x74]

; 530  :                         remain  -= 2;

  00c64	e51b3068	 ldr         r3, [r11, #-0x68]
  00c68	e2433002	 sub         r3, r3, #2
  00c6c	e50b3068	 str         r3, [r11, #-0x68]

; 531  :                     }

  00c70	eaffffe4	 b           |$LN5@IssueTxTra|
  00c74		 |$LN4@IssueTxTra|

; 532  : 
; 533  :                     if (remain > 0)

  00c74	e51b3068	 ldr         r3, [r11, #-0x68]
  00c78	e3530000	 cmp         r3, #0
  00c7c	9a00000d	 bls         |$LN3@IssueTxTra|

; 534  :                     {
; 535  :                         OUTREG8((UINT8*)&pUSBDRegs->DATA, *pBuffer);

  00c80	e51b306c	 ldr         r3, [r11, #-0x6C]
  00c84	e2832008	 add         r2, r3, #8
  00c88	e51b3080	 ldr         r3, [r11, #-0x80]
  00c8c	e5d33000	 ldrb        r3, [r3]
  00c90	e5c23000	 strb        r3, [r2]

; 536  : 
; 537  :                         pBuffer += 1;

  00c94	e51b3080	 ldr         r3, [r11, #-0x80]
  00c98	e2833001	 add         r3, r3, #1
  00c9c	e50b3080	 str         r3, [r11, #-0x80]

; 538  :                         space   -= 1;

  00ca0	e51b3074	 ldr         r3, [r11, #-0x74]
  00ca4	e2433001	 sub         r3, r3, #1
  00ca8	e50b3074	 str         r3, [r11, #-0x74]

; 539  :                         remain  -= 1;

  00cac	e51b3068	 ldr         r3, [r11, #-0x68]
  00cb0	e2433001	 sub         r3, r3, #1
  00cb4	e50b3068	 str         r3, [r11, #-0x68]
  00cb8		 |$LN3@IssueTxTra|

; 540  :                     }
; 541  : 
; 542  :                     DEBUGMSG(ZONE_TRANSFER, (L"USBD IssueTxTransfer() - "
; 543  :                         L"Transfered %d bytes on ep 0x%02X", count, endPoint));

  00cb8	e59f31ec	 ldr         r3, [pc, #0x1EC]
  00cbc	e5933440	 ldr         r3, [r3, #0x440]
  00cc0	e3130008	 tst         r3, #8
  00cc4	0a000013	 beq         |$LN37@IssueTxTra|
  00cc8	e59f31dc	 ldr         r3, [pc, #0x1DC]
  00ccc	e5933440	 ldr         r3, [r3, #0x440]
  00cd0	e3130801	 tst         r3, #1, 16
  00cd4	0a000006	 beq         |$LN35@IssueTxTra|
  00cd8	e59b2004	 ldr         r2, [r11, #4]
  00cdc	e51b107c	 ldr         r1, [r11, #-0x7C]
  00ce0	e59f01cc	 ldr         r0, [pc, #0x1CC]
  00ce4	eb000000	 bl          CeLogMsg
  00ce8	e3a03001	 mov         r3, #1
  00cec	e50b3024	 str         r3, [r11, #-0x24]
  00cf0	ea000005	 b           |$LN36@IssueTxTra|
  00cf4		 |$LN35@IssueTxTra|
  00cf4	e59b2004	 ldr         r2, [r11, #4]
  00cf8	e51b107c	 ldr         r1, [r11, #-0x7C]
  00cfc	e59f01b0	 ldr         r0, [pc, #0x1B0]
  00d00	eb000000	 bl          NKDbgPrintfW
  00d04	e3a03000	 mov         r3, #0
  00d08	e50b3024	 str         r3, [r11, #-0x24]
  00d0c		 |$LN36@IssueTxTra|
  00d0c	e3a03001	 mov         r3, #1
  00d10	e50b3020	 str         r3, [r11, #-0x20]
  00d14	ea000001	 b           |$LN38@IssueTxTra|
  00d18		 |$LN37@IssueTxTra|
  00d18	e3a03000	 mov         r3, #0
  00d1c	e50b3020	 str         r3, [r11, #-0x20]
  00d20		 |$LN38@IssueTxTra|

; 544  : 
; 545  :                     // Enable FIFO
; 546  :                     OUTREG32(&pUSBDRegs->CTRL, USBD_CTRL_FIFO_EN);

  00d20	e51b306c	 ldr         r3, [r11, #-0x6C]
  00d24	e283200c	 add         r2, r3, #0xC
  00d28	e3a03004	 mov         r3, #4
  00d2c	e5823000	 str         r3, [r2]

; 547  : 
; 548  :                     // We transfered some data
; 549  :                     pTransfer->cbTransferred = pTransfer->cbBuffer - space;

  00d30	e51b3064	 ldr         r3, [r11, #-0x64]
  00d34	e283300c	 add         r3, r3, #0xC
  00d38	e5932000	 ldr         r2, [r3]
  00d3c	e51b3074	 ldr         r3, [r11, #-0x74]
  00d40	e0422003	 sub         r2, r2, r3
  00d44	e51b3064	 ldr         r3, [r11, #-0x64]
  00d48	e2833010	 add         r3, r3, #0x10
  00d4c	e5832000	 str         r2, [r3]
  00d50		 |$LN53@IssueTxTra|

; 550  : 
; 551  :                 }

  00d50	ea000006	 b           |$LN54@IssueTxTra|
  00d54		 |$LN49@IssueTxTra|

; 553  :                 {
; 554  :                     pTransfer->dwUsbError = UFN_CLIENT_BUFFER_ERROR;

  00d54	e51b3064	 ldr         r3, [r11, #-0x64]
  00d58	e2832014	 add         r2, r3, #0x14
  00d5c	e3a03f41	 mov         r3, #0x41, 30
  00d60	e5823000	 str         r3, [r2]

; 555  :                     complete = TRUE;

  00d64	e3a03001	 mov         r3, #1
  00d68	e50b305c	 str         r3, [r11, #-0x5C]
  00d6c	eaffffff	 b           |$LN54@IssueTxTra|
  00d70		 |$LN54@IssueTxTra|
  00d70		 |$LN10@IssueTxTra|

; 556  :                 }
; 557  :             }
; 558  :         }
; 559  :         else

  00d70	ea000015	 b           |$LN2@IssueTxTra|
  00d74		 |$LN12@IssueTxTra|

; 560  :         {
; 561  :             DEBUGMSG(ZONE_TRANSFER, (L"USBD IssueTxTransfer() - "
; 562  :                 L"pTransfer is NULL; HandShake ACK."));

  00d74	e59f3130	 ldr         r3, [pc, #0x130]
  00d78	e5933440	 ldr         r3, [r3, #0x440]
  00d7c	e3130008	 tst         r3, #8
  00d80	0a00000f	 beq         |$LN41@IssueTxTra|
  00d84	e59f3120	 ldr         r3, [pc, #0x120]
  00d88	e5933440	 ldr         r3, [r3, #0x440]
  00d8c	e3130801	 tst         r3, #1, 16
  00d90	0a000004	 beq         |$LN39@IssueTxTra|
  00d94	e59f0114	 ldr         r0, [pc, #0x114]
  00d98	eb000000	 bl          CeLogMsg
  00d9c	e3a03001	 mov         r3, #1
  00da0	e50b301c	 str         r3, [r11, #-0x1C]
  00da4	ea000003	 b           |$LN40@IssueTxTra|
  00da8		 |$LN39@IssueTxTra|
  00da8	e59f0100	 ldr         r0, [pc, #0x100]
  00dac	eb000000	 bl          NKDbgPrintfW
  00db0	e3a03000	 mov         r3, #0
  00db4	e50b301c	 str         r3, [r11, #-0x1C]
  00db8		 |$LN40@IssueTxTra|
  00db8	e3a03001	 mov         r3, #1
  00dbc	e50b3018	 str         r3, [r11, #-0x18]
  00dc0	ea000001	 b           |$LN42@IssueTxTra|
  00dc4		 |$LN41@IssueTxTra|
  00dc4	e3a03000	 mov         r3, #0
  00dc8	e50b3018	 str         r3, [r11, #-0x18]
  00dcc		 |$LN42@IssueTxTra|
  00dcc		 |$LN2@IssueTxTra|
  00dcc		 |$LN13@IssueTxTra|

; 563  :         }
; 564  :     }
; 565  : 
; 566  :     // Deselect EP
; 567  :     DeselectEp(pPdd, epNum);

  00dcc	e51b1078	 ldr         r1, [r11, #-0x78]
  00dd0	e59b0000	 ldr         r0, [r11]
  00dd4	eb000000	 bl          DeselectEp

; 568  : 
; 569  :     // If transaction is complete we should tell MDD
; 570  :     if (complete)

  00dd8	e51b305c	 ldr         r3, [r11, #-0x5C]
  00ddc	e3530000	 cmp         r3, #0
  00de0	0a000028	 beq         |$LN1@IssueTxTra|

; 571  :     {
; 572  :         DEBUGMSG(ZONE_TRANSFER, (L"USBD IssueTxTransfer() - "
; 573  :             L"Notifying MDD that transfer is complete."));

  00de4	e59f30c0	 ldr         r3, [pc, #0xC0]
  00de8	e5933440	 ldr         r3, [r3, #0x440]
  00dec	e3130008	 tst         r3, #8
  00df0	0a00000f	 beq         |$LN45@IssueTxTra|
  00df4	e59f30b0	 ldr         r3, [pc, #0xB0]
  00df8	e5933440	 ldr         r3, [r3, #0x440]
  00dfc	e3130801	 tst         r3, #1, 16
  00e00	0a000004	 beq         |$LN43@IssueTxTra|
  00e04	e59f009c	 ldr         r0, [pc, #0x9C]
  00e08	eb000000	 bl          CeLogMsg
  00e0c	e3a03001	 mov         r3, #1
  00e10	e50b3014	 str         r3, [r11, #-0x14]
  00e14	ea000003	 b           |$LN44@IssueTxTra|
  00e18		 |$LN43@IssueTxTra|
  00e18	e59f0088	 ldr         r0, [pc, #0x88]
  00e1c	eb000000	 bl          NKDbgPrintfW
  00e20	e3a03000	 mov         r3, #0
  00e24	e50b3014	 str         r3, [r11, #-0x14]
  00e28		 |$LN44@IssueTxTra|
  00e28	e3a03001	 mov         r3, #1
  00e2c	e50b3010	 str         r3, [r11, #-0x10]
  00e30	ea000001	 b           |$LN46@IssueTxTra|
  00e34		 |$LN45@IssueTxTra|
  00e34	e3a03000	 mov         r3, #0
  00e38	e50b3010	 str         r3, [r11, #-0x10]
  00e3c		 |$LN46@IssueTxTra|

; 574  : 
; 575  :         pPdd->ep[endPoint].pTransfer = NULL;

  00e3c	e59b3000	 ldr         r3, [r11]
  00e40	e2831068	 add         r1, r3, #0x68
  00e44	e59b2004	 ldr         r2, [r11, #4]
  00e48	e3a03010	 mov         r3, #0x10
  00e4c	e0030392	 mul         r3, r2, r3
  00e50	e0813003	 add         r3, r1, r3
  00e54	e283200c	 add         r2, r3, #0xC
  00e58	e3a03000	 mov         r3, #0
  00e5c	e5823000	 str         r3, [r2]

; 576  :         pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer);

  00e60	e51b2064	 ldr         r2, [r11, #-0x64]
  00e64	e3a01064	 mov         r1, #0x64
  00e68	e59b3000	 ldr         r3, [r11]
  00e6c	e2833018	 add         r3, r3, #0x18
  00e70	e5930000	 ldr         r0, [r3]
  00e74	e59b3000	 ldr         r3, [r11]
  00e78	e283301c	 add         r3, r3, #0x1C
  00e7c	e5933000	 ldr         r3, [r3]
  00e80	e1a0e00f	 mov         lr, pc
  00e84	e12fff13	 bx          r3
  00e88		 |$LN1@IssueTxTra|
  00e88		 |$LN47@IssueTxTra|

; 577  :     }
; 578  : }

  00e88	e24bd00c	 sub         sp, r11, #0xC
  00e8c	e89d6800	 ldmia       sp, {r11, sp, lr}
  00e90	e12fff1e	 bx          lr

			 ENDP  ; |IssueTxTransfer|

  00e94		 |$LN48@IssueTxTra|
  00e94		 |$LN57@IssueTxTra|

; 552  :                 __except(EXCEPTION_EXECUTE_HANDLER)

  00e94	e52de004	 str         lr, [sp, #-4]!
  00e98	e24dd008	 sub         sp, sp, #8
  00e9c		 |$LN51@IssueTxTra|
  00e9c		 |$LN60@IssueTxTra|
  00e9c	e3a00001	 mov         r0, #1
  00ea0		 |$LN50@IssueTxTra|
  00ea0	e28dd008	 add         sp, sp, #8
  00ea4	e49df004	 ldr         pc, [sp], #4
  00ea8		 |$LN62@IssueTxTra|
  00ea8		 |$LN63@IssueTxTra|
  00ea8	00000000	 DCD         |??_C@_1IE@DNBOEMPM@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AAi@|
  00eac		 |$LN64@IssueTxTra|
  00eac	00000000	 DCD         |dpCurSettings|
  00eb0		 |$LN65@IssueTxTra|
  00eb0	00000000	 DCD         |??_C@_1HG@OMIKPONL@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf@|
  00eb4		 |$LN66@IssueTxTra|
  00eb4	00000000	 DCD         |??_C@_1HE@BMACECFD@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  00eb8		 |$LN67@IssueTxTra|
  00eb8	00000000	 DCD         |??_C@_1HO@NABMILJO@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAp@|
  00ebc		 |$LN61@IssueTxTra|
  00ebc		 |$LN59@IssueTxTra|
	EXPORT	|UfnPdd_AbortTransfer|

  00058			 AREA	 |.pdata|, PDATA
|$T45955| DCD	|$LN6@UfnPdd_Abo|
	DCD	0x40003c04
; Function compile flags: /Odtp

  00ebc			 AREA	 |.text|, CODE, ARM

  00ebc		 |UfnPdd_AbortTransfer| PROC

; 1140 : {

  00ebc		 |$LN6@UfnPdd_Abo|
  00ebc	e1a0c00d	 mov         r12, sp
  00ec0	e92d0007	 stmdb       sp!, {r0 - r2}
  00ec4	e92d5000	 stmdb       sp!, {r12, lr}
  00ec8	e24dd010	 sub         sp, sp, #0x10
  00ecc		 |$M45952|

; 1141 :     USBFN_PDD *pPdd = pPddContext;

  00ecc	e59d3018	 ldr         r3, [sp, #0x18]
  00ed0	e58d3008	 str         r3, [sp, #8]

; 1142 :     OMAP2420_USBD_REGS *pUSBDRegs = pPdd->pUSBDRegs;

  00ed4	e59d3008	 ldr         r3, [sp, #8]
  00ed8	e2833024	 add         r3, r3, #0x24
  00edc	e5933000	 ldr         r3, [r3]
  00ee0	e58d3004	 str         r3, [sp, #4]

; 1143 :     DWORD epNum;
; 1144 : 
; 1145 :     // Select EP
; 1146 :     epNum = USBD_EP_NUM & endPoint;

  00ee4	e59d301c	 ldr         r3, [sp, #0x1C]
  00ee8	e203300f	 and         r3, r3, #0xF
  00eec	e58d3000	 str         r3, [sp]

; 1147 : 
; 1148 :     if (TRANSFER_IS_IN(pTransfer))

  00ef0	e59d3020	 ldr         r3, [sp, #0x20]
  00ef4	e5933000	 ldr         r3, [r3]
  00ef8	e3130080	 tst         r3, #0x80
  00efc	0a000002	 beq         |$LN1@UfnPdd_Abo|

; 1149 :     {
; 1150 :         epNum |= USBD_EP_NUM_DIRIN;

  00f00	e59d3000	 ldr         r3, [sp]
  00f04	e3833010	 orr         r3, r3, #0x10
  00f08	e58d3000	 str         r3, [sp]
  00f0c		 |$LN1@UfnPdd_Abo|

; 1151 :     }
; 1152 : 
; 1153 :     SelectEp(pPdd, epNum);

  00f0c	e59d1000	 ldr         r1, [sp]
  00f10	e59d0008	 ldr         r0, [sp, #8]
  00f14	eb000000	 bl          SelectEp

; 1154 : 
; 1155 :     // Clear EP
; 1156 :     OUTREG32(&pUSBDRegs->CTRL, USBD_CTRL_CLR_EP);

  00f18	e59d3004	 ldr         r3, [sp, #4]
  00f1c	e283200c	 add         r2, r3, #0xC
  00f20	e3a03002	 mov         r3, #2
  00f24	e5823000	 str         r3, [r2]

; 1157 : 
; 1158 :     // Deselect EP
; 1159 :     DeselectEp(pPdd, epNum);

  00f28	e59d1000	 ldr         r1, [sp]
  00f2c	e59d0008	 ldr         r0, [sp, #8]
  00f30	eb000000	 bl          DeselectEp

; 1160 : 
; 1161 :     // Finish transfer
; 1162 :     pPdd->ep[endPoint].pTransfer = NULL;

  00f34	e59d3008	 ldr         r3, [sp, #8]
  00f38	e2831068	 add         r1, r3, #0x68
  00f3c	e59d201c	 ldr         r2, [sp, #0x1C]
  00f40	e3a03010	 mov         r3, #0x10
  00f44	e0030392	 mul         r3, r2, r3
  00f48	e0813003	 add         r3, r1, r3
  00f4c	e283200c	 add         r2, r3, #0xC
  00f50	e3a03000	 mov         r3, #0
  00f54	e5823000	 str         r3, [r2]

; 1163 :     pTransfer->dwUsbError = UFN_CANCELED_ERROR;

  00f58	e59d3020	 ldr         r3, [sp, #0x20]
  00f5c	e2832014	 add         r2, r3, #0x14
  00f60	e3a03c01	 mov         r3, #1, 24
  00f64	e3833001	 orr         r3, r3, #1
  00f68	e5823000	 str         r3, [r2]

; 1164 :     pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer);

  00f6c	e59d2020	 ldr         r2, [sp, #0x20]
  00f70	e3a01064	 mov         r1, #0x64
  00f74	e59d3008	 ldr         r3, [sp, #8]
  00f78	e2833018	 add         r3, r3, #0x18
  00f7c	e5930000	 ldr         r0, [r3]
  00f80	e59d3008	 ldr         r3, [sp, #8]
  00f84	e283301c	 add         r3, r3, #0x1C
  00f88	e5933000	 ldr         r3, [r3]
  00f8c	e1a0e00f	 mov         lr, pc
  00f90	e12fff13	 bx          r3

; 1165 : 
; 1166 :     // Done
; 1167 :     return ERROR_SUCCESS;

  00f94	e3a03000	 mov         r3, #0
  00f98	e58d300c	 str         r3, [sp, #0xC]

; 1168 : }

  00f9c	e59d000c	 ldr         r0, [sp, #0xC]
  00fa0	e28dd010	 add         sp, sp, #0x10
  00fa4	e89d6000	 ldmia       sp, {sp, lr}
  00fa8	e12fff1e	 bx          lr
  00fac		 |$M45953|

			 ENDP  ; |UfnPdd_AbortTransfer|

	EXPORT	|??_C@_1DI@FFFNHHBF@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAl?$AAl?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_StallEndpoint|

  00060			 AREA	 |.pdata|, PDATA
|$T45965| DCD	|$LN12@UfnPdd_Sta|
	DCD	0x40004c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@FFFNHHBF@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAl?$AAl?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, "P", 0x0, "d"
	DCB	0x0, "d", 0x0, "_", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "l"
	DCB	0x0, "l", 0x0, "E", 0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o"
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00fac			 AREA	 |.text|, CODE, ARM

  00fac		 |UfnPdd_StallEndpoint| PROC

; 1177 : {

  00fac		 |$LN12@UfnPdd_Sta|
  00fac	e1a0c00d	 mov         r12, sp
  00fb0	e92d0003	 stmdb       sp!, {r0, r1}
  00fb4	e92d5000	 stmdb       sp!, {r12, lr}
  00fb8	e24dd018	 sub         sp, sp, #0x18
  00fbc		 |$M45962|

; 1178 :     USBFN_PDD *pPdd = pPddContext;

  00fbc	e59d3020	 ldr         r3, [sp, #0x20]
  00fc0	e58d3008	 str         r3, [sp, #8]

; 1179 :     OMAP2420_USBD_REGS *pUSBDRegs = pPdd->pUSBDRegs;

  00fc4	e59d3008	 ldr         r3, [sp, #8]
  00fc8	e2833024	 add         r3, r3, #0x24
  00fcc	e5933000	 ldr         r3, [r3]
  00fd0	e58d3004	 str         r3, [sp, #4]

; 1180 :     DWORD epNum;
; 1181 : 
; 1182 :     DEBUGMSG(ZONE_PDD, (L"UsbFnPdd_StallEndpoint %d\r\n", endPoint));

  00fd4	e59f30fc	 ldr         r3, [pc, #0xFC]
  00fd8	e5933440	 ldr         r3, [r3, #0x440]
  00fdc	e3130902	 tst         r3, #2, 18
  00fe0	0a000011	 beq         |$LN8@UfnPdd_Sta|
  00fe4	e59f30ec	 ldr         r3, [pc, #0xEC]
  00fe8	e5933440	 ldr         r3, [r3, #0x440]
  00fec	e3130801	 tst         r3, #1, 16
  00ff0	0a000005	 beq         |$LN6@UfnPdd_Sta|
  00ff4	e59d1024	 ldr         r1, [sp, #0x24]
  00ff8	e59f00d4	 ldr         r0, [pc, #0xD4]
  00ffc	eb000000	 bl          CeLogMsg
  01000	e3a03001	 mov         r3, #1
  01004	e58d3010	 str         r3, [sp, #0x10]
  01008	ea000004	 b           |$LN7@UfnPdd_Sta|
  0100c		 |$LN6@UfnPdd_Sta|
  0100c	e59d1024	 ldr         r1, [sp, #0x24]
  01010	e59f00bc	 ldr         r0, [pc, #0xBC]
  01014	eb000000	 bl          NKDbgPrintfW
  01018	e3a03000	 mov         r3, #0
  0101c	e58d3010	 str         r3, [sp, #0x10]
  01020		 |$LN7@UfnPdd_Sta|
  01020	e3a03001	 mov         r3, #1
  01024	e58d3014	 str         r3, [sp, #0x14]
  01028	ea000001	 b           |$LN9@UfnPdd_Sta|
  0102c		 |$LN8@UfnPdd_Sta|
  0102c	e3a03000	 mov         r3, #0
  01030	e58d3014	 str         r3, [sp, #0x14]
  01034		 |$LN9@UfnPdd_Sta|

; 1183 : 
; 1184 :     if (endPoint == 0)

  01034	e59d3024	 ldr         r3, [sp, #0x24]
  01038	e3530000	 cmp         r3, #0
  0103c	1a000004	 bne         |$LN3@UfnPdd_Sta|

; 1185 :     {
; 1186 :         // Stall next EP0 transaction
; 1187 :         OUTREG32(&pUSBDRegs->SYSCON2, USBD_SYSCON2_STALL_CMD);

  01040	e59d3004	 ldr         r3, [sp, #4]
  01044	e283201c	 add         r2, r3, #0x1C
  01048	e3a03020	 mov         r3, #0x20
  0104c	e5823000	 str         r3, [r2]

; 1188 : 
; 1189 :     }
; 1190 :     else

  01050	ea000019	 b           |$LN2@UfnPdd_Sta|
  01054		 |$LN3@UfnPdd_Sta|

; 1191 :     {
; 1192 :         // Select EP
; 1193 :         epNum = USBD_EP_NUM & endPoint;

  01054	e59d3024	 ldr         r3, [sp, #0x24]
  01058	e203300f	 and         r3, r3, #0xF
  0105c	e58d3000	 str         r3, [sp]

; 1194 : 
; 1195 :         if (!pPdd->ep[endPoint].dirRx)

  01060	e59d3008	 ldr         r3, [sp, #8]
  01064	e2831068	 add         r1, r3, #0x68
  01068	e59d2024	 ldr         r2, [sp, #0x24]
  0106c	e3a03010	 mov         r3, #0x10
  01070	e0030392	 mul         r3, r2, r3
  01074	e0813003	 add         r3, r1, r3
  01078	e2833004	 add         r3, r3, #4
  0107c	e5933000	 ldr         r3, [r3]
  01080	e3530000	 cmp         r3, #0
  01084	1a000002	 bne         |$LN1@UfnPdd_Sta|

; 1196 :         {
; 1197 :             epNum |= USBD_EP_NUM_DIRIN;

  01088	e59d3000	 ldr         r3, [sp]
  0108c	e3833010	 orr         r3, r3, #0x10
  01090	e58d3000	 str         r3, [sp]
  01094		 |$LN1@UfnPdd_Sta|

; 1198 :         }
; 1199 : 
; 1200 :         SelectEp(pPdd, epNum);

  01094	e59d1000	 ldr         r1, [sp]
  01098	e59d0008	 ldr         r0, [sp, #8]
  0109c	eb000000	 bl          SelectEp

; 1201 : 
; 1202 :         // Halt EP
; 1203 :         OUTREG32(&pUSBDRegs->CTRL, USBD_CTRL_SET_HALT);

  010a0	e59d3004	 ldr         r3, [sp, #4]
  010a4	e283200c	 add         r2, r3, #0xC
  010a8	e3a03040	 mov         r3, #0x40
  010ac	e5823000	 str         r3, [r2]

; 1204 : 
; 1205 :         // Deselect EP
; 1206 :         DeselectEp(pPdd, epNum);

  010b0	e59d1000	 ldr         r1, [sp]
  010b4	e59d0008	 ldr         r0, [sp, #8]
  010b8	eb000000	 bl          DeselectEp
  010bc		 |$LN2@UfnPdd_Sta|

; 1207 :     }
; 1208 : 
; 1209 :     // Done
; 1210 :     return ERROR_SUCCESS;

  010bc	e3a03000	 mov         r3, #0
  010c0	e58d300c	 str         r3, [sp, #0xC]

; 1211 : }

  010c4	e59d000c	 ldr         r0, [sp, #0xC]
  010c8	e28dd018	 add         sp, sp, #0x18
  010cc	e89d6000	 ldmia       sp, {sp, lr}
  010d0	e12fff1e	 bx          lr
  010d4		 |$LN13@UfnPdd_Sta|
  010d4		 |$LN14@UfnPdd_Sta|
  010d4	00000000	 DCD         |??_C@_1DI@FFFNHHBF@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAl?$AAl?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  010d8		 |$LN15@UfnPdd_Sta|
  010d8	00000000	 DCD         |dpCurSettings|
  010dc		 |$M45963|

			 ENDP  ; |UfnPdd_StallEndpoint|

	EXPORT	|??_C@_1DI@EBJLFADF@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAl?$AAe?$AAa?$AAr?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_ClearEndpointStall|

  00068			 AREA	 |.pdata|, PDATA
|$T45978| DCD	|$LN11@UfnPdd_Cle|
	DCD	0x40004b04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@EBJLFADF@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAl?$AAe?$AAa?$AAr?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, "P", 0x0, "d"
	DCB	0x0, "d", 0x0, "_", 0x0, "C", 0x0, "l", 0x0, "e", 0x0, "a"
	DCB	0x0, "r", 0x0, "E", 0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o"
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  010dc			 AREA	 |.text|, CODE, ARM

  010dc		 |UfnPdd_ClearEndpointStall| PROC

; 1220 : {

  010dc		 |$LN11@UfnPdd_Cle|
  010dc	e1a0c00d	 mov         r12, sp
  010e0	e92d0003	 stmdb       sp!, {r0, r1}
  010e4	e92d5000	 stmdb       sp!, {r12, lr}
  010e8	e24dd01c	 sub         sp, sp, #0x1C
  010ec		 |$M45975|

; 1221 :     DWORD rc = ERROR_INVALID_FUNCTION;

  010ec	e3a03001	 mov         r3, #1
  010f0	e58d3000	 str         r3, [sp]

; 1222 :     USBFN_PDD *pPdd = pPddContext;

  010f4	e59d3024	 ldr         r3, [sp, #0x24]
  010f8	e58d300c	 str         r3, [sp, #0xC]

; 1223 :     OMAP2420_USBD_REGS *pUSBDRegs = pPdd->pUSBDRegs;

  010fc	e59d300c	 ldr         r3, [sp, #0xC]
  01100	e2833024	 add         r3, r3, #0x24
  01104	e5933000	 ldr         r3, [r3]
  01108	e58d3008	 str         r3, [sp, #8]

; 1224 :     DWORD epNum;
; 1225 : 
; 1226 :     DEBUGMSG(ZONE_PDD, (L"UsbFnPdd_ClearEndpoint %d\r\n", endPoint));

  0110c	e59f30f0	 ldr         r3, [pc, #0xF0]
  01110	e5933440	 ldr         r3, [r3, #0x440]
  01114	e3130902	 tst         r3, #2, 18
  01118	0a000011	 beq         |$LN7@UfnPdd_Cle|
  0111c	e59f30e0	 ldr         r3, [pc, #0xE0]
  01120	e5933440	 ldr         r3, [r3, #0x440]
  01124	e3130801	 tst         r3, #1, 16
  01128	0a000005	 beq         |$LN5@UfnPdd_Cle|
  0112c	e59d1028	 ldr         r1, [sp, #0x28]
  01130	e59f00c8	 ldr         r0, [pc, #0xC8]
  01134	eb000000	 bl          CeLogMsg
  01138	e3a03001	 mov         r3, #1
  0113c	e58d3014	 str         r3, [sp, #0x14]
  01140	ea000004	 b           |$LN6@UfnPdd_Cle|
  01144		 |$LN5@UfnPdd_Cle|
  01144	e59d1028	 ldr         r1, [sp, #0x28]
  01148	e59f00b0	 ldr         r0, [pc, #0xB0]
  0114c	eb000000	 bl          NKDbgPrintfW
  01150	e3a03000	 mov         r3, #0
  01154	e58d3014	 str         r3, [sp, #0x14]
  01158		 |$LN6@UfnPdd_Cle|
  01158	e3a03001	 mov         r3, #1
  0115c	e58d3018	 str         r3, [sp, #0x18]
  01160	ea000001	 b           |$LN8@UfnPdd_Cle|
  01164		 |$LN7@UfnPdd_Cle|
  01164	e3a03000	 mov         r3, #0
  01168	e58d3018	 str         r3, [sp, #0x18]
  0116c		 |$LN8@UfnPdd_Cle|

; 1227 : 
; 1228 :     // Endpoint can't be zero
; 1229 :     if (endPoint != 0)

  0116c	e59d3028	 ldr         r3, [sp, #0x28]
  01170	e3530000	 cmp         r3, #0
  01174	0a00001b	 beq         |$LN2@UfnPdd_Cle|

; 1230 :     {
; 1231 :         // Select EP
; 1232 :         epNum = USBD_EP_NUM & endPoint;

  01178	e59d3028	 ldr         r3, [sp, #0x28]
  0117c	e203300f	 and         r3, r3, #0xF
  01180	e58d3004	 str         r3, [sp, #4]

; 1233 : 
; 1234 :         if (!pPdd->ep[endPoint].dirRx)

  01184	e59d300c	 ldr         r3, [sp, #0xC]
  01188	e2831068	 add         r1, r3, #0x68
  0118c	e59d2028	 ldr         r2, [sp, #0x28]
  01190	e3a03010	 mov         r3, #0x10
  01194	e0030392	 mul         r3, r2, r3
  01198	e0813003	 add         r3, r1, r3
  0119c	e2833004	 add         r3, r3, #4
  011a0	e5933000	 ldr         r3, [r3]
  011a4	e3530000	 cmp         r3, #0
  011a8	1a000002	 bne         |$LN1@UfnPdd_Cle|

; 1235 :         {
; 1236 :             epNum |= USBD_EP_NUM_DIRIN;

  011ac	e59d3004	 ldr         r3, [sp, #4]
  011b0	e3833010	 orr         r3, r3, #0x10
  011b4	e58d3004	 str         r3, [sp, #4]
  011b8		 |$LN1@UfnPdd_Cle|

; 1237 :         }
; 1238 : 
; 1239 :         SelectEp(pPdd, epNum);

  011b8	e59d1004	 ldr         r1, [sp, #4]
  011bc	e59d000c	 ldr         r0, [sp, #0xC]
  011c0	eb000000	 bl          SelectEp

; 1240 : 
; 1241 :         // Clear suspend, Clear data toggle
; 1242 :         OUTREG32(&pUSBDRegs->CTRL, USBD_CTRL_CLR_HALT | USBD_CTRL_CLR_DATA_TOGGLE);

  011c4	e59d3008	 ldr         r3, [sp, #8]
  011c8	e283200c	 add         r2, r3, #0xC
  011cc	e3a03088	 mov         r3, #0x88
  011d0	e5823000	 str         r3, [r2]

; 1243 : 
; 1244 :         // Deselect EP
; 1245 :         DeselectEp(pPdd, epNum);

  011d4	e59d1004	 ldr         r1, [sp, #4]
  011d8	e59d000c	 ldr         r0, [sp, #0xC]
  011dc	eb000000	 bl          DeselectEp

; 1246 : 
; 1247 :         // Done
; 1248 :         rc = ERROR_SUCCESS;

  011e0	e3a03000	 mov         r3, #0
  011e4	e58d3000	 str         r3, [sp]
  011e8		 |$LN2@UfnPdd_Cle|

; 1249 :     }
; 1250 : 
; 1251 :     return rc;

  011e8	e59d3000	 ldr         r3, [sp]
  011ec	e58d3010	 str         r3, [sp, #0x10]

; 1252 : }

  011f0	e59d0010	 ldr         r0, [sp, #0x10]
  011f4	e28dd01c	 add         sp, sp, #0x1C
  011f8	e89d6000	 ldmia       sp, {sp, lr}
  011fc	e12fff1e	 bx          lr
  01200		 |$LN12@UfnPdd_Cle|
  01200		 |$LN13@UfnPdd_Cle|
  01200	00000000	 DCD         |??_C@_1DI@EBJLFADF@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAl?$AAe?$AAa?$AAr?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  01204		 |$LN14@UfnPdd_Cle|
  01204	00000000	 DCD         |dpCurSettings|
  01208		 |$M45976|

			 ENDP  ; |UfnPdd_ClearEndpointStall|

	EXPORT	|??_C@_1DO@MLIBPKBI@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAH?$AAa?$AAl?$AAt?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_IsEndpointHalted|

  00070			 AREA	 |.pdata|, PDATA
|$T45993| DCD	|$LN13@UfnPdd_IsE|
	DCD	0x40005404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@MLIBPKBI@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAH?$AAa?$AAl?$AAt?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, "P", 0x0, "d"
	DCB	0x0, "d", 0x0, "_", 0x0, "I", 0x0, "s", 0x0, "E", 0x0, "n"
	DCB	0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, "H", 0x0, "a", 0x0, "l", 0x0, "t", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  01208			 AREA	 |.text|, CODE, ARM

  01208		 |UfnPdd_IsEndpointHalted| PROC

; 1261 : {

  01208		 |$LN13@UfnPdd_IsE|
  01208	e1a0c00d	 mov         r12, sp
  0120c	e92d0007	 stmdb       sp!, {r0 - r2}
  01210	e92d5000	 stmdb       sp!, {r12, lr}
  01214	e24dd020	 sub         sp, sp, #0x20
  01218		 |$M45990|

; 1262 :     DWORD rc = ERROR_INVALID_FUNCTION;

  01218	e3a03001	 mov         r3, #1
  0121c	e58d3000	 str         r3, [sp]

; 1263 :     USBFN_PDD *pPdd = pPddContext;

  01220	e59d3028	 ldr         r3, [sp, #0x28]
  01224	e58d300c	 str         r3, [sp, #0xC]

; 1264 :     OMAP2420_USBD_REGS *pUSBDRegs = pPdd->pUSBDRegs;

  01228	e59d300c	 ldr         r3, [sp, #0xC]
  0122c	e2833024	 add         r3, r3, #0x24
  01230	e5933000	 ldr         r3, [r3]
  01234	e58d3008	 str         r3, [sp, #8]

; 1265 :     DWORD epNum;
; 1266 : 
; 1267 :     DEBUGMSG(ZONE_PDD, (L"UsbFnPdd_IsEndpointHalted %d\r\n", endPoint));

  01238	e59f3114	 ldr         r3, [pc, #0x114]
  0123c	e5933440	 ldr         r3, [r3, #0x440]
  01240	e3130902	 tst         r3, #2, 18
  01244	0a000011	 beq         |$LN7@UfnPdd_IsE|
  01248	e59f3104	 ldr         r3, [pc, #0x104]
  0124c	e5933440	 ldr         r3, [r3, #0x440]
  01250	e3130801	 tst         r3, #1, 16
  01254	0a000005	 beq         |$LN5@UfnPdd_IsE|
  01258	e59d102c	 ldr         r1, [sp, #0x2C]
  0125c	e59f00ec	 ldr         r0, [pc, #0xEC]
  01260	eb000000	 bl          CeLogMsg
  01264	e3a03001	 mov         r3, #1
  01268	e58d3014	 str         r3, [sp, #0x14]
  0126c	ea000004	 b           |$LN6@UfnPdd_IsE|
  01270		 |$LN5@UfnPdd_IsE|
  01270	e59d102c	 ldr         r1, [sp, #0x2C]
  01274	e59f00d4	 ldr         r0, [pc, #0xD4]
  01278	eb000000	 bl          NKDbgPrintfW
  0127c	e3a03000	 mov         r3, #0
  01280	e58d3014	 str         r3, [sp, #0x14]
  01284		 |$LN6@UfnPdd_IsE|
  01284	e3a03001	 mov         r3, #1
  01288	e58d3018	 str         r3, [sp, #0x18]
  0128c	ea000001	 b           |$LN8@UfnPdd_IsE|
  01290		 |$LN7@UfnPdd_IsE|
  01290	e3a03000	 mov         r3, #0
  01294	e58d3018	 str         r3, [sp, #0x18]
  01298		 |$LN8@UfnPdd_IsE|

; 1268 : 
; 1269 :     // Endpoint can't be zero
; 1270 :     if (endPoint != 0)

  01298	e59d302c	 ldr         r3, [sp, #0x2C]
  0129c	e3530000	 cmp         r3, #0
  012a0	0a000024	 beq         |$LN2@UfnPdd_IsE|

; 1271 :     {
; 1272 :         // Select EP
; 1273 :         epNum = USBD_EP_NUM & endPoint;

  012a4	e59d302c	 ldr         r3, [sp, #0x2C]
  012a8	e203300f	 and         r3, r3, #0xF
  012ac	e58d3004	 str         r3, [sp, #4]

; 1274 : 
; 1275 :         if (!pPdd->ep[endPoint].dirRx)

  012b0	e59d300c	 ldr         r3, [sp, #0xC]
  012b4	e2831068	 add         r1, r3, #0x68
  012b8	e59d202c	 ldr         r2, [sp, #0x2C]
  012bc	e3a03010	 mov         r3, #0x10
  012c0	e0030392	 mul         r3, r2, r3
  012c4	e0813003	 add         r3, r1, r3
  012c8	e2833004	 add         r3, r3, #4
  012cc	e5933000	 ldr         r3, [r3]
  012d0	e3530000	 cmp         r3, #0
  012d4	1a000002	 bne         |$LN1@UfnPdd_IsE|

; 1276 :         {
; 1277 :             epNum |= USBD_EP_NUM_DIRIN;

  012d8	e59d3004	 ldr         r3, [sp, #4]
  012dc	e3833010	 orr         r3, r3, #0x10
  012e0	e58d3004	 str         r3, [sp, #4]
  012e4		 |$LN1@UfnPdd_IsE|

; 1278 :         }
; 1279 : 
; 1280 :         SelectEp(pPdd, epNum);

  012e4	e59d1004	 ldr         r1, [sp, #4]
  012e8	e59d000c	 ldr         r0, [sp, #0xC]
  012ec	eb000000	 bl          SelectEp

; 1281 : 
; 1282 :         // Is EP halted?
; 1283 :         *pHalted = ((INREG32(&pUSBDRegs->STAT_FLG) & USBD_STAT_HALTED) != 0);

  012f0	e59d3008	 ldr         r3, [sp, #8]
  012f4	e2833010	 add         r3, r3, #0x10
  012f8	e5933000	 ldr         r3, [r3]
  012fc	e3130040	 tst         r3, #0x40
  01300	0a000002	 beq         |$LN9@UfnPdd_IsE|
  01304	e3a03001	 mov         r3, #1
  01308	e58d301c	 str         r3, [sp, #0x1C]
  0130c	ea000001	 b           |$LN10@UfnPdd_IsE|
  01310		 |$LN9@UfnPdd_IsE|
  01310	e3a03000	 mov         r3, #0
  01314	e58d301c	 str         r3, [sp, #0x1C]
  01318		 |$LN10@UfnPdd_IsE|
  01318	e59d201c	 ldr         r2, [sp, #0x1C]
  0131c	e59d3030	 ldr         r3, [sp, #0x30]
  01320	e5832000	 str         r2, [r3]

; 1284 : 
; 1285 :         // Deselect EP
; 1286 :         DeselectEp(pPdd, epNum);

  01324	e59d1004	 ldr         r1, [sp, #4]
  01328	e59d000c	 ldr         r0, [sp, #0xC]
  0132c	eb000000	 bl          DeselectEp

; 1287 : 
; 1288 :         // Done
; 1289 :         rc = ERROR_SUCCESS;

  01330	e3a03000	 mov         r3, #0
  01334	e58d3000	 str         r3, [sp]
  01338		 |$LN2@UfnPdd_IsE|

; 1290 :     }
; 1291 : 
; 1292 :     return rc;

  01338	e59d3000	 ldr         r3, [sp]
  0133c	e58d3010	 str         r3, [sp, #0x10]

; 1293 : }

  01340	e59d0010	 ldr         r0, [sp, #0x10]
  01344	e28dd020	 add         sp, sp, #0x20
  01348	e89d6000	 ldmia       sp, {sp, lr}
  0134c	e12fff1e	 bx          lr
  01350		 |$LN14@UfnPdd_IsE|
  01350		 |$LN15@UfnPdd_IsE|
  01350	00000000	 DCD         |??_C@_1DO@MLIBPKBI@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAH?$AAa?$AAl?$AAt?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  01354		 |$LN16@UfnPdd_IsE|
  01354	00000000	 DCD         |dpCurSettings|
  01358		 |$M45991|

			 ENDP  ; |UfnPdd_IsEndpointHalted|

	EXPORT	|??_C@_1FI@OAJDCMFD@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa?$AAk@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LK@LPIJEGGI@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa?$AAk@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JI@MKHGJBLK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa?$AAk@| [ DATA ] ; `string'
	EXPORT	|??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@FAIJCNHP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa?$AAk@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_SendControlStatusHandshake|

  00078			 AREA	 |.pdata|, PDATA
|$T46022| DCD	|$LN28@UfnPdd_Sen|
	DCD	0x4000ac04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@OAJDCMFD@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa?$AAk@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "s", 0x0, "h", 0x0, "a"
	DCB	0x0, "k", 0x0, "e", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "E", 0x0, "N", 0x0, "D", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LK@LPIJEGGI@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa?$AAk@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "s", 0x0, "h", 0x0, "a"
	DCB	0x0, "k", 0x0, "e", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "N", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "s"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "s"
	DCB	0x0, "h", 0x0, "a", 0x0, "k", 0x0, "e", 0x0, " ", 0x0, "b"
	DCB	0x0, "e", 0x0, "c", 0x0, "a", 0x0, "u", 0x0, "s", 0x0, "e"
	DCB	0x0, " ", 0x0, "E", 0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o"
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JI@MKHGJBLK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa?$AAk@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "s", 0x0, "h", 0x0, "a"
	DCB	0x0, "k", 0x0, "e", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "E", 0x0, "n", 0x0, "d", 0x0, "P", 0x0, "o"
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "(", 0x0, "%", 0x0, "s", 0x0, ")", 0x0, ":"
	DCB	0x0, " ", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "_"
	DCB	0x0, "F", 0x0, "L", 0x0, "G", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@| DCB "O", 0x0, "U", 0x0, "T", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@| DCB "I", 0x0, "N", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@FAIJCNHP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa?$AAk@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "s", 0x0, "h", 0x0, "a"
	DCB	0x0, "k", 0x0, "e", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "R", 0x0, "T"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  01358			 AREA	 |.text|, CODE, ARM

  01358		 |UfnPdd_SendControlStatusHandshake| PROC

; 1303 : {

  01358		 |$LN28@UfnPdd_Sen|
  01358	e1a0c00d	 mov         r12, sp
  0135c	e92d0003	 stmdb       sp!, {r0, r1}
  01360	e92d5000	 stmdb       sp!, {r12, lr}
  01364	e24dd03c	 sub         sp, sp, #0x3C
  01368		 |$M46019|

; 1304 :     USBFN_PDD *pPdd = pPddContext;

  01368	e59d3044	 ldr         r3, [sp, #0x44]
  0136c	e58d300c	 str         r3, [sp, #0xC]

; 1305 :     OMAP2420_USBD_REGS *pUSBDRegs = pPdd->pUSBDRegs;

  01370	e59d300c	 ldr         r3, [sp, #0xC]
  01374	e2833024	 add         r3, r3, #0x24
  01378	e5933000	 ldr         r3, [r3]
  0137c	e58d3008	 str         r3, [sp, #8]

; 1306 :     DWORD epNum, stat;
; 1307 : 
; 1308 :     DEBUGMSG(ZONE_USB_EVENTS, (L"UfnPdd_SendControlStatusHandshake() - START\r\n"));

  01380	e59f3268	 ldr         r3, [pc, #0x268]
  01384	e5933440	 ldr         r3, [r3, #0x440]
  01388	e3130080	 tst         r3, #0x80
  0138c	0a00000f	 beq         |$LN8@UfnPdd_Sen|
  01390	e59f3258	 ldr         r3, [pc, #0x258]
  01394	e5933440	 ldr         r3, [r3, #0x440]
  01398	e3130801	 tst         r3, #1, 16
  0139c	0a000004	 beq         |$LN6@UfnPdd_Sen|
  013a0	e59f025c	 ldr         r0, [pc, #0x25C]
  013a4	eb000000	 bl          CeLogMsg
  013a8	e3a03001	 mov         r3, #1
  013ac	e58d3014	 str         r3, [sp, #0x14]
  013b0	ea000003	 b           |$LN7@UfnPdd_Sen|
  013b4		 |$LN6@UfnPdd_Sen|
  013b4	e59f0248	 ldr         r0, [pc, #0x248]
  013b8	eb000000	 bl          NKDbgPrintfW
  013bc	e3a03000	 mov         r3, #0
  013c0	e58d3014	 str         r3, [sp, #0x14]
  013c4		 |$LN7@UfnPdd_Sen|
  013c4	e3a03001	 mov         r3, #1
  013c8	e58d3018	 str         r3, [sp, #0x18]
  013cc	ea000001	 b           |$LN9@UfnPdd_Sen|
  013d0		 |$LN8@UfnPdd_Sen|
  013d0	e3a03000	 mov         r3, #0
  013d4	e58d3018	 str         r3, [sp, #0x18]
  013d8		 |$LN9@UfnPdd_Sen|

; 1309 : 
; 1310 :     // Select EP
; 1311 :     epNum = USBD_EP_NUM & endPoint;

  013d8	e59d3048	 ldr         r3, [sp, #0x48]
  013dc	e203300f	 and         r3, r3, #0xF
  013e0	e58d3000	 str         r3, [sp]

; 1312 : 
; 1313 :     if (pPdd->setupDirRx)

  013e4	e59d300c	 ldr         r3, [sp, #0xC]
  013e8	e2833048	 add         r3, r3, #0x48
  013ec	e5933000	 ldr         r3, [r3]
  013f0	e3530000	 cmp         r3, #0
  013f4	0a000002	 beq         |$LN3@UfnPdd_Sen|

; 1314 :     {
; 1315 :         epNum |= USBD_EP_NUM_DIRIN;

  013f8	e59d3000	 ldr         r3, [sp]
  013fc	e3833010	 orr         r3, r3, #0x10
  01400	e58d3000	 str         r3, [sp]
  01404		 |$LN3@UfnPdd_Sen|

; 1316 :     }
; 1317 : 
; 1318 :     SelectEp(pPdd, epNum);

  01404	e59d1000	 ldr         r1, [sp]
  01408	e59d000c	 ldr         r0, [sp, #0xC]
  0140c	eb000000	 bl          SelectEp

; 1319 : 
; 1320 :     // Get actual status
; 1321 :     stat = INREG32(&pUSBDRegs->STAT_FLG);

  01410	e59d3008	 ldr         r3, [sp, #8]
  01414	e2833010	 add         r3, r3, #0x10
  01418	e5933000	 ldr         r3, [r3]
  0141c	e58d3004	 str         r3, [sp, #4]

; 1322 : 
; 1323 :     DEBUGMSG(ZONE_USB_EVENTS, (L"UfnPdd_SendControlStatusHandshake() - "
; 1324 :         L"EndPoint %d (%s): STAT_FLG = 0x%04X\r\n", endPoint, pPdd->setupDirRx ? L"IN" : L"OUT", stat));

  01420	e59f31c8	 ldr         r3, [pc, #0x1C8]
  01424	e5933440	 ldr         r3, [r3, #0x440]
  01428	e3130080	 tst         r3, #0x80
  0142c	0a000029	 beq         |$LN16@UfnPdd_Sen|
  01430	e59f31b8	 ldr         r3, [pc, #0x1B8]
  01434	e5933440	 ldr         r3, [r3, #0x440]
  01438	e3130801	 tst         r3, #1, 16
  0143c	0a000011	 beq         |$LN14@UfnPdd_Sen|
  01440	e59d300c	 ldr         r3, [sp, #0xC]
  01444	e2833048	 add         r3, r3, #0x48
  01448	e5933000	 ldr         r3, [r3]
  0144c	e3530000	 cmp         r3, #0
  01450	0a000002	 beq         |$LN10@UfnPdd_Sen|
  01454	e59f31a4	 ldr         r3, [pc, #0x1A4]
  01458	e58d301c	 str         r3, [sp, #0x1C]
  0145c	ea000001	 b           |$LN11@UfnPdd_Sen|
  01460		 |$LN10@UfnPdd_Sen|
  01460	e59f3194	 ldr         r3, [pc, #0x194]
  01464	e58d301c	 str         r3, [sp, #0x1C]
  01468		 |$LN11@UfnPdd_Sen|
  01468	e59d3004	 ldr         r3, [sp, #4]
  0146c	e59d201c	 ldr         r2, [sp, #0x1C]
  01470	e59d1048	 ldr         r1, [sp, #0x48]
  01474	e59f017c	 ldr         r0, [pc, #0x17C]
  01478	eb000000	 bl          CeLogMsg
  0147c	e3a03001	 mov         r3, #1
  01480	e58d3020	 str         r3, [sp, #0x20]
  01484	ea000010	 b           |$LN15@UfnPdd_Sen|
  01488		 |$LN14@UfnPdd_Sen|
  01488	e59d300c	 ldr         r3, [sp, #0xC]
  0148c	e2833048	 add         r3, r3, #0x48
  01490	e5933000	 ldr         r3, [r3]
  01494	e3530000	 cmp         r3, #0
  01498	0a000002	 beq         |$LN12@UfnPdd_Sen|
  0149c	e59f315c	 ldr         r3, [pc, #0x15C]
  014a0	e58d3024	 str         r3, [sp, #0x24]
  014a4	ea000001	 b           |$LN13@UfnPdd_Sen|
  014a8		 |$LN12@UfnPdd_Sen|
  014a8	e59f314c	 ldr         r3, [pc, #0x14C]
  014ac	e58d3024	 str         r3, [sp, #0x24]
  014b0		 |$LN13@UfnPdd_Sen|
  014b0	e59d3004	 ldr         r3, [sp, #4]
  014b4	e59d2024	 ldr         r2, [sp, #0x24]
  014b8	e59d1048	 ldr         r1, [sp, #0x48]
  014bc	e59f0134	 ldr         r0, [pc, #0x134]
  014c0	eb000000	 bl          NKDbgPrintfW
  014c4	e3a03000	 mov         r3, #0
  014c8	e58d3020	 str         r3, [sp, #0x20]
  014cc		 |$LN15@UfnPdd_Sen|
  014cc	e3a03001	 mov         r3, #1
  014d0	e58d3028	 str         r3, [sp, #0x28]
  014d4	ea000001	 b           |$LN17@UfnPdd_Sen|
  014d8		 |$LN16@UfnPdd_Sen|
  014d8	e3a03000	 mov         r3, #0
  014dc	e58d3028	 str         r3, [sp, #0x28]
  014e0		 |$LN17@UfnPdd_Sen|

; 1325 : 
; 1326 :     // Only send the handshake when the EndPoint is not stalled.
; 1327 :     if ((stat & USBD_STAT_STALL) == 0)

  014e0	e59d3004	 ldr         r3, [sp, #4]
  014e4	e3130020	 tst         r3, #0x20
  014e8	1a000008	 bne         |$LN2@UfnPdd_Sen|

; 1328 :     {
; 1329 :         // Clear & enable FIFO
; 1330 :         OUTREG32(&pUSBDRegs->CTRL, USBD_CTRL_CLR_EP);

  014ec	e59d3008	 ldr         r3, [sp, #8]
  014f0	e283200c	 add         r2, r3, #0xC
  014f4	e3a03002	 mov         r3, #2
  014f8	e5823000	 str         r3, [r2]

; 1331 :         OUTREG32(&pUSBDRegs->CTRL, USBD_CTRL_FIFO_EN);

  014fc	e59d3008	 ldr         r3, [sp, #8]
  01500	e283200c	 add         r2, r3, #0xC
  01504	e3a03004	 mov         r3, #4
  01508	e5823000	 str         r3, [r2]

; 1332 :     }
; 1333 :     else

  0150c	ea000017	 b           |$LN1@UfnPdd_Sen|
  01510		 |$LN2@UfnPdd_Sen|

; 1334 :     {
; 1335 :         DEBUGMSG(ZONE_USB_EVENTS, (L"UfnPdd_SendControlStatusHandshake() - "
; 1336 :             L"Not sending handshake because Endpoint %d is stalled\r\n", epNum));

  01510	e59f30d8	 ldr         r3, [pc, #0xD8]
  01514	e5933440	 ldr         r3, [r3, #0x440]
  01518	e3130080	 tst         r3, #0x80
  0151c	0a000011	 beq         |$LN20@UfnPdd_Sen|
  01520	e59f30c8	 ldr         r3, [pc, #0xC8]
  01524	e5933440	 ldr         r3, [r3, #0x440]
  01528	e3130801	 tst         r3, #1, 16
  0152c	0a000005	 beq         |$LN18@UfnPdd_Sen|
  01530	e59d1000	 ldr         r1, [sp]
  01534	e59f00b8	 ldr         r0, [pc, #0xB8]
  01538	eb000000	 bl          CeLogMsg
  0153c	e3a03001	 mov         r3, #1
  01540	e58d302c	 str         r3, [sp, #0x2C]
  01544	ea000004	 b           |$LN19@UfnPdd_Sen|
  01548		 |$LN18@UfnPdd_Sen|
  01548	e59d1000	 ldr         r1, [sp]
  0154c	e59f00a0	 ldr         r0, [pc, #0xA0]
  01550	eb000000	 bl          NKDbgPrintfW
  01554	e3a03000	 mov         r3, #0
  01558	e58d302c	 str         r3, [sp, #0x2C]
  0155c		 |$LN19@UfnPdd_Sen|
  0155c	e3a03001	 mov         r3, #1
  01560	e58d3030	 str         r3, [sp, #0x30]
  01564	ea000001	 b           |$LN21@UfnPdd_Sen|
  01568		 |$LN20@UfnPdd_Sen|
  01568	e3a03000	 mov         r3, #0
  0156c	e58d3030	 str         r3, [sp, #0x30]
  01570		 |$LN21@UfnPdd_Sen|
  01570		 |$LN1@UfnPdd_Sen|

; 1337 :     }
; 1338 : 
; 1339 :     // Deselect EP
; 1340 :     DeselectEp(pPdd, epNum);

  01570	e59d1000	 ldr         r1, [sp]
  01574	e59d000c	 ldr         r0, [sp, #0xC]
  01578	eb000000	 bl          DeselectEp

; 1341 : 
; 1342 :     DEBUGMSG(ZONE_USB_EVENTS, (L"UfnPdd_SendControlStatusHandshake() - END\r\n"));

  0157c	e59f306c	 ldr         r3, [pc, #0x6C]
  01580	e5933440	 ldr         r3, [r3, #0x440]
  01584	e3130080	 tst         r3, #0x80
  01588	0a00000f	 beq         |$LN24@UfnPdd_Sen|
  0158c	e59f305c	 ldr         r3, [pc, #0x5C]
  01590	e5933440	 ldr         r3, [r3, #0x440]
  01594	e3130801	 tst         r3, #1, 16
  01598	0a000004	 beq         |$LN22@UfnPdd_Sen|
  0159c	e59f0048	 ldr         r0, [pc, #0x48]
  015a0	eb000000	 bl          CeLogMsg
  015a4	e3a03001	 mov         r3, #1
  015a8	e58d3034	 str         r3, [sp, #0x34]
  015ac	ea000003	 b           |$LN23@UfnPdd_Sen|
  015b0		 |$LN22@UfnPdd_Sen|
  015b0	e59f0034	 ldr         r0, [pc, #0x34]
  015b4	eb000000	 bl          NKDbgPrintfW
  015b8	e3a03000	 mov         r3, #0
  015bc	e58d3034	 str         r3, [sp, #0x34]
  015c0		 |$LN23@UfnPdd_Sen|
  015c0	e3a03001	 mov         r3, #1
  015c4	e58d3038	 str         r3, [sp, #0x38]
  015c8	ea000001	 b           |$LN25@UfnPdd_Sen|
  015cc		 |$LN24@UfnPdd_Sen|
  015cc	e3a03000	 mov         r3, #0
  015d0	e58d3038	 str         r3, [sp, #0x38]
  015d4		 |$LN25@UfnPdd_Sen|

; 1343 : 
; 1344 :     return ERROR_SUCCESS;

  015d4	e3a03000	 mov         r3, #0
  015d8	e58d3010	 str         r3, [sp, #0x10]

; 1345 : }

  015dc	e59d0010	 ldr         r0, [sp, #0x10]
  015e0	e28dd03c	 add         sp, sp, #0x3C
  015e4	e89d6000	 ldmia       sp, {sp, lr}
  015e8	e12fff1e	 bx          lr
  015ec		 |$LN29@UfnPdd_Sen|
  015ec		 |$LN30@UfnPdd_Sen|
  015ec	00000000	 DCD         |??_C@_1FI@OAJDCMFD@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa?$AAk@|
  015f0		 |$LN31@UfnPdd_Sen|
  015f0	00000000	 DCD         |dpCurSettings|
  015f4		 |$LN32@UfnPdd_Sen|
  015f4	00000000	 DCD         |??_C@_1LK@LPIJEGGI@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa?$AAk@|
  015f8		 |$LN33@UfnPdd_Sen|
  015f8	00000000	 DCD         |??_C@_1JI@MKHGJBLK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa?$AAk@|
  015fc		 |$LN34@UfnPdd_Sen|
  015fc	00000000	 DCD         |??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@|
  01600		 |$LN35@UfnPdd_Sen|
  01600	00000000	 DCD         |??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@|
  01604		 |$LN36@UfnPdd_Sen|
  01604	00000000	 DCD         |??_C@_1FM@FAIJCNHP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa?$AAk@|
  01608		 |$M46020|

			 ENDP  ; |UfnPdd_SendControlStatusHandshake|

	EXPORT	|??_C@_1EA@KNMJPPBI@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAt?$AAe?$AAR?$AAe?$AAm?$AAo?$AAt?$AAe?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_InitiateRemoteWakeup|

  00080			 AREA	 |.pdata|, PDATA
|$T46040| DCD	|$LN9@UfnPdd_Ini|
	DCD	0x40002f04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@KNMJPPBI@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAt?$AAe?$AAR?$AAe?$AAm?$AAo?$AAt?$AAe?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, "P", 0x0, "d"
	DCB	0x0, "d", 0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "R", 0x0, "e"
	DCB	0x0, "m", 0x0, "o", 0x0, "t", 0x0, "e", 0x0, "W", 0x0, "a"
	DCB	0x0, "k", 0x0, "e", 0x0, "u", 0x0, "p", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  01608			 AREA	 |.text|, CODE, ARM

  01608		 |UfnPdd_InitiateRemoteWakeup| PROC

; 1352 : {

  01608		 |$LN9@UfnPdd_Ini|
  01608	e1a0c00d	 mov         r12, sp
  0160c	e92d0001	 stmdb       sp!, {r0}
  01610	e92d5000	 stmdb       sp!, {r12, lr}
  01614	e24dd014	 sub         sp, sp, #0x14
  01618		 |$M46037|

; 1353 :     USBFN_PDD *pPdd = pPddContext;

  01618	e59d301c	 ldr         r3, [sp, #0x1C]
  0161c	e58d3004	 str         r3, [sp, #4]

; 1354 :     OMAP2420_USBD_REGS *pUSBDRegs = pPdd->pUSBDRegs;

  01620	e59d3004	 ldr         r3, [sp, #4]
  01624	e2833024	 add         r3, r3, #0x24
  01628	e5933000	 ldr         r3, [r3]
  0162c	e58d3000	 str         r3, [sp]

; 1355 : 
; 1356 :     DEBUGMSG(ZONE_PDD, (L"UsbFnPdd_InitiateRemoteWakeup\r\n"));

  01630	e59f3088	 ldr         r3, [pc, #0x88]
  01634	e5933440	 ldr         r3, [r3, #0x440]
  01638	e3130902	 tst         r3, #2, 18
  0163c	0a00000f	 beq         |$LN5@UfnPdd_Ini|
  01640	e59f3078	 ldr         r3, [pc, #0x78]
  01644	e5933440	 ldr         r3, [r3, #0x440]
  01648	e3130801	 tst         r3, #1, 16
  0164c	0a000004	 beq         |$LN3@UfnPdd_Ini|
  01650	e59f0064	 ldr         r0, [pc, #0x64]
  01654	eb000000	 bl          CeLogMsg
  01658	e3a03001	 mov         r3, #1
  0165c	e58d300c	 str         r3, [sp, #0xC]
  01660	ea000003	 b           |$LN4@UfnPdd_Ini|
  01664		 |$LN3@UfnPdd_Ini|
  01664	e59f0050	 ldr         r0, [pc, #0x50]
  01668	eb000000	 bl          NKDbgPrintfW
  0166c	e3a03000	 mov         r3, #0
  01670	e58d300c	 str         r3, [sp, #0xC]
  01674		 |$LN4@UfnPdd_Ini|
  01674	e3a03001	 mov         r3, #1
  01678	e58d3010	 str         r3, [sp, #0x10]
  0167c	ea000001	 b           |$LN6@UfnPdd_Ini|
  01680		 |$LN5@UfnPdd_Ini|
  01680	e3a03000	 mov         r3, #0
  01684	e58d3010	 str         r3, [sp, #0x10]
  01688		 |$LN6@UfnPdd_Ini|

; 1357 : 
; 1358 :     SETREG32(&pUSBDRegs->SYSCON2, USBD_SYSCON2_RMT_WKP);

  01688	e59d3000	 ldr         r3, [sp]
  0168c	e283301c	 add         r3, r3, #0x1C
  01690	e5933000	 ldr         r3, [r3]
  01694	e3832040	 orr         r2, r3, #0x40
  01698	e59d3000	 ldr         r3, [sp]
  0169c	e283301c	 add         r3, r3, #0x1C
  016a0	e5832000	 str         r2, [r3]

; 1359 : 
; 1360 :     return ERROR_SUCCESS;

  016a4	e3a03000	 mov         r3, #0
  016a8	e58d3008	 str         r3, [sp, #8]

; 1361 : }

  016ac	e59d0008	 ldr         r0, [sp, #8]
  016b0	e28dd014	 add         sp, sp, #0x14
  016b4	e89d6000	 ldmia       sp, {sp, lr}
  016b8	e12fff1e	 bx          lr
  016bc		 |$LN10@UfnPdd_Ini|
  016bc		 |$LN11@UfnPdd_Ini|
  016bc	00000000	 DCD         |??_C@_1EA@KNMJPPBI@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAt?$AAe?$AAR?$AAe?$AAm?$AAo?$AAt?$AAe?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AA?$AN?$AA?6?$AA?$AA@|
  016c0		 |$LN12@UfnPdd_Ini|
  016c0	00000000	 DCD         |dpCurSettings|
  016c4		 |$M46038|

			 ENDP  ; |UfnPdd_InitiateRemoteWakeup|

	EXPORT	|??_C@_1FM@LGPIGFFO@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAe?$AAt?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAS@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@JPFDBBPM@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CJ?$AA?5?$AAW?$AAA?$AAR?$AAN?$AAI?$AAN?$AAG?$AA?3?$AA?5?$AAB?$AAa?$AAd?$AA?5@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_IOControl|
	IMPORT	|CeSafeCopyMemory|

  00088			 AREA	 |.pdata|, PDATA
|$T46058| DCD	|$LN32@UfnPdd_IOC|
	DCD	0x4000bb04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@LGPIGFFO@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAe?$AAt?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAS@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "(", 0x0, ")", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, " "
	DCB	0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "D", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@JPFDBBPM@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CJ?$AA?5?$AAW?$AAA?$AAR?$AAN?$AAI?$AAN?$AAG?$AA?3?$AA?5?$AAB?$AAa?$AAd?$AA?5@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "(", 0x0, ")", 0x0, " "
	DCB	0x0, "W", 0x0, "A", 0x0, "R", 0x0, "N", 0x0, "I", 0x0, "N"
	DCB	0x0, "G", 0x0, ":", 0x0, " ", 0x0, "B", 0x0, "a", 0x0, "d"
	DCB	0x0, " ", 0x0, "P", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  016c4			 AREA	 |.text|, CODE, ARM

  016c4		 |UfnPdd_IOControl| PROC

; 1479 : {

  016c4		 |$LN32@UfnPdd_IOC|
  016c4	e1a0c00d	 mov         r12, sp
  016c8	e92d000f	 stmdb       sp!, {r0 - r3}
  016cc	e92d5000	 stmdb       sp!, {r12, lr}
  016d0	e24dd048	 sub         sp, sp, #0x48
  016d4		 |$M46055|

; 1480 :     DWORD                rc   = ERROR_INVALID_PARAMETER;

  016d4	e3a03057	 mov         r3, #0x57
  016d8	e58d3000	 str         r3, [sp]

; 1481 :     USBFN_PDD           *pPdd = pPddContext;

  016dc	e59d3050	 ldr         r3, [sp, #0x50]
  016e0	e58d3018	 str         r3, [sp, #0x18]

; 1482 :     UFN_PDD_INFO         info;
; 1483 :     CE_BUS_POWER_STATE  *pBusPowerState;
; 1484 :     CEDEVICE_POWER_STATE devicePowerState;
; 1485 : 
; 1486 : 
; 1487 :     switch (code)

  016e4	e59d3058	 ldr         r3, [sp, #0x58]
  016e8	e58d3020	 str         r3, [sp, #0x20]
  016ec	e59d2020	 ldr         r2, [sp, #0x20]
  016f0	e3a0382a	 mov         r3, #0x2A, 16
  016f4	e383300c	 orr         r3, r3, #0xC
  016f8	e1520003	 cmp         r2, r3
  016fc	8a00000f	 bhi         |$LN29@UfnPdd_IOC|
  01700	e59d2020	 ldr         r2, [sp, #0x20]
  01704	e3a0382a	 mov         r3, #0x2A, 16
  01708	e383300c	 orr         r3, r3, #0xC
  0170c	e1520003	 cmp         r2, r3
  01710	0a00002d	 beq         |$LN11@UfnPdd_IOC|
  01714	e59d2020	 ldr         r2, [sp, #0x20]
  01718	e3a03822	 mov         r3, #0x22, 16
  0171c	e3833018	 orr         r3, r3, #0x18
  01720	e1520003	 cmp         r2, r3
  01724	0a000093	 beq         |$LN1@UfnPdd_IOC|
  01728	e59d2020	 ldr         r2, [sp, #0x20]
  0172c	e3a03822	 mov         r3, #0x22, 16
  01730	e3833f65	 orr         r3, r3, #0x65, 30
  01734	e1520003	 cmp         r2, r3
  01738	0a000006	 beq         |$LN16@UfnPdd_IOC|
  0173c	ea000092	 b           |$LN17@UfnPdd_IOC|
  01740		 |$LN29@UfnPdd_IOC|
  01740	e59d2020	 ldr         r2, [sp, #0x20]
  01744	e3a0382a	 mov         r3, #0x2A, 16
  01748	e3833010	 orr         r3, r3, #0x10
  0174c	e1520003	 cmp         r2, r3
  01750	0a000039	 beq         |$LN6@UfnPdd_IOC|
  01754	ea00008c	 b           |$LN17@UfnPdd_IOC|
  01758		 |$LN16@UfnPdd_IOC|

; 1488 :     {
; 1489 :         case IOCTL_UFN_GET_PDD_INFO:
; 1490 :             if (source != BUS_IOCTL)

  01758	e59d3054	 ldr         r3, [sp, #0x54]
  0175c	e3530000	 cmp         r3, #0
  01760	0a000000	 beq         |$LN15@UfnPdd_IOC|

; 1491 :             {
; 1492 :                 break;

  01764	ea000088	 b           |$LN17@UfnPdd_IOC|
  01768		 |$LN15@UfnPdd_IOC|

; 1493 :             }
; 1494 :             if (pOutBuffer == NULL || outSize < sizeof(UFN_PDD_INFO))

  01768	e59d3064	 ldr         r3, [sp, #0x64]
  0176c	e3530000	 cmp         r3, #0
  01770	0a000002	 beq         |$LN13@UfnPdd_IOC|
  01774	e59d3068	 ldr         r3, [sp, #0x68]
  01778	e353000c	 cmp         r3, #0xC
  0177c	2a000000	 bcs         |$LN14@UfnPdd_IOC|
  01780		 |$LN13@UfnPdd_IOC|

; 1495 :             {
; 1496 :                 break;

  01780	ea000081	 b           |$LN17@UfnPdd_IOC|
  01784		 |$LN14@UfnPdd_IOC|

; 1497 :             }
; 1498 :             info.InterfaceType = Internal;

  01784	e3a03000	 mov         r3, #0
  01788	e58d300c	 str         r3, [sp, #0xC]

; 1499 :             info.BusNumber = 0;

  0178c	e3a03000	 mov         r3, #0
  01790	e58d3010	 str         r3, [sp, #0x10]

; 1500 :             info.dwAlignment = sizeof(DWORD);

  01794	e3a03004	 mov         r3, #4
  01798	e58d3014	 str         r3, [sp, #0x14]

; 1501 :             if (!CeSafeCopyMemory(pOutBuffer, &info, sizeof(UFN_PDD_INFO)))

  0179c	e3a0200c	 mov         r2, #0xC
  017a0	e28d100c	 add         r1, sp, #0xC
  017a4	e59d0064	 ldr         r0, [sp, #0x64]
  017a8	eb000000	 bl          CeSafeCopyMemory
  017ac	e58d0024	 str         r0, [sp, #0x24]
  017b0	e59d3024	 ldr         r3, [sp, #0x24]
  017b4	e3530000	 cmp         r3, #0
  017b8	1a000000	 bne         |$LN12@UfnPdd_IOC|

; 1502 :             {
; 1503 :                 break;

  017bc	ea000072	 b           |$LN17@UfnPdd_IOC|
  017c0		 |$LN12@UfnPdd_IOC|

; 1504 :             }
; 1505 :             rc = ERROR_SUCCESS;

  017c0	e3a03000	 mov         r3, #0
  017c4	e58d3000	 str         r3, [sp]

; 1506 :             break;

  017c8	ea00006f	 b           |$LN17@UfnPdd_IOC|
  017cc		 |$LN11@UfnPdd_IOC|

; 1507 : 
; 1508 :         case IOCTL_BUS_GET_POWER_STATE:
; 1509 :             if (source != MDD_IOCTL)

  017cc	e59d3054	 ldr         r3, [sp, #0x54]
  017d0	e3530002	 cmp         r3, #2
  017d4	0a000000	 beq         |$LN10@UfnPdd_IOC|

; 1510 :             {
; 1511 :                 break;

  017d8	ea00006b	 b           |$LN17@UfnPdd_IOC|
  017dc		 |$LN10@UfnPdd_IOC|

; 1512 :             }
; 1513 :             if (pInBuffer == NULL || inSize < sizeof(CE_BUS_POWER_STATE))

  017dc	e59d305c	 ldr         r3, [sp, #0x5C]
  017e0	e3530000	 cmp         r3, #0
  017e4	0a000002	 beq         |$LN8@UfnPdd_IOC|
  017e8	e59d3060	 ldr         r3, [sp, #0x60]
  017ec	e353000c	 cmp         r3, #0xC
  017f0	2a000000	 bcs         |$LN9@UfnPdd_IOC|
  017f4		 |$LN8@UfnPdd_IOC|

; 1514 :             {
; 1515 :                 break;

  017f4	ea000064	 b           |$LN17@UfnPdd_IOC|
  017f8		 |$LN9@UfnPdd_IOC|

; 1516 :             }
; 1517 :             pBusPowerState = (CE_BUS_POWER_STATE*)pInBuffer;

  017f8	e59d305c	 ldr         r3, [sp, #0x5C]
  017fc	e58d3008	 str         r3, [sp, #8]

; 1518 :             if (!CeSafeCopyMemory(pBusPowerState->lpceDevicePowerState, &pPdd->m_CurrentPowerState, sizeof(CEDEVICE_POWER_STATE)))

  01800	e3a02004	 mov         r2, #4
  01804	e59d3018	 ldr         r3, [sp, #0x18]
  01808	e283103c	 add         r1, r3, #0x3C
  0180c	e59d3008	 ldr         r3, [sp, #8]
  01810	e2833004	 add         r3, r3, #4
  01814	e5930000	 ldr         r0, [r3]
  01818	eb000000	 bl          CeSafeCopyMemory
  0181c	e58d0028	 str         r0, [sp, #0x28]
  01820	e59d3028	 ldr         r3, [sp, #0x28]
  01824	e3530000	 cmp         r3, #0
  01828	1a000000	 bne         |$LN7@UfnPdd_IOC|

; 1519 :             {
; 1520 :                 break;

  0182c	ea000056	 b           |$LN17@UfnPdd_IOC|
  01830		 |$LN7@UfnPdd_IOC|

; 1521 :             }
; 1522 : 
; 1523 :             rc = ERROR_SUCCESS;

  01830	e3a03000	 mov         r3, #0
  01834	e58d3000	 str         r3, [sp]

; 1524 :             break;

  01838	ea000053	 b           |$LN17@UfnPdd_IOC|
  0183c		 |$LN6@UfnPdd_IOC|

; 1525 : 
; 1526 :         case IOCTL_BUS_SET_POWER_STATE:
; 1527 :             if (pInBuffer == NULL || inSize < sizeof(CE_BUS_POWER_STATE))

  0183c	e59d305c	 ldr         r3, [sp, #0x5C]
  01840	e3530000	 cmp         r3, #0
  01844	0a000002	 beq         |$LN4@UfnPdd_IOC|
  01848	e59d3060	 ldr         r3, [sp, #0x60]
  0184c	e353000c	 cmp         r3, #0xC
  01850	2a000016	 bcs         |$LN5@UfnPdd_IOC|
  01854		 |$LN4@UfnPdd_IOC|

; 1528 :             {
; 1529 :                 DEBUGMSG(ZONE_WARNING, (L"UfnPdd_IOControl() "
; 1530 :                     L"WARNING: Bad Parameter\r\n"));

  01854	e59f314c	 ldr         r3, [pc, #0x14C]
  01858	e5933440	 ldr         r3, [r3, #0x440]
  0185c	e3130002	 tst         r3, #2
  01860	0a00000f	 beq         |$LN23@UfnPdd_IOC|
  01864	e59f313c	 ldr         r3, [pc, #0x13C]
  01868	e5933440	 ldr         r3, [r3, #0x440]
  0186c	e3130801	 tst         r3, #1, 16
  01870	0a000004	 beq         |$LN21@UfnPdd_IOC|
  01874	e59f0130	 ldr         r0, [pc, #0x130]
  01878	eb000000	 bl          CeLogMsg
  0187c	e3a03001	 mov         r3, #1
  01880	e58d302c	 str         r3, [sp, #0x2C]
  01884	ea000003	 b           |$LN22@UfnPdd_IOC|
  01888		 |$LN21@UfnPdd_IOC|
  01888	e59f011c	 ldr         r0, [pc, #0x11C]
  0188c	eb000000	 bl          NKDbgPrintfW
  01890	e3a03000	 mov         r3, #0
  01894	e58d302c	 str         r3, [sp, #0x2C]
  01898		 |$LN22@UfnPdd_IOC|
  01898	e3a03001	 mov         r3, #1
  0189c	e58d3030	 str         r3, [sp, #0x30]
  018a0	ea000001	 b           |$LN24@UfnPdd_IOC|
  018a4		 |$LN23@UfnPdd_IOC|
  018a4	e3a03000	 mov         r3, #0
  018a8	e58d3030	 str         r3, [sp, #0x30]
  018ac		 |$LN24@UfnPdd_IOC|

; 1531 :                 break;

  018ac	ea000036	 b           |$LN17@UfnPdd_IOC|
  018b0		 |$LN5@UfnPdd_IOC|

; 1532 :             }
; 1533 :             pBusPowerState = (CE_BUS_POWER_STATE*)pInBuffer;

  018b0	e59d305c	 ldr         r3, [sp, #0x5C]
  018b4	e58d3008	 str         r3, [sp, #8]

; 1534 :             if (!CeSafeCopyMemory(&devicePowerState, pBusPowerState->lpceDevicePowerState, sizeof(CEDEVICE_POWER_STATE)))

  018b8	e3a02004	 mov         r2, #4
  018bc	e59d3008	 ldr         r3, [sp, #8]
  018c0	e2833004	 add         r3, r3, #4
  018c4	e5931000	 ldr         r1, [r3]
  018c8	e28d0004	 add         r0, sp, #4
  018cc	eb000000	 bl          CeSafeCopyMemory
  018d0	e58d0034	 str         r0, [sp, #0x34]
  018d4	e59d3034	 ldr         r3, [sp, #0x34]
  018d8	e3530000	 cmp         r3, #0
  018dc	1a000000	 bne         |$LN3@UfnPdd_IOC|

; 1535 :             {
; 1536 :                 break;

  018e0	ea000029	 b           |$LN17@UfnPdd_IOC|
  018e4		 |$LN3@UfnPdd_IOC|

; 1537 :             }
; 1538 :             DEBUGMSG(ZONE_POWER, (L"UfnPdd_IOControl() - "
; 1539 :                 L"Set Power State to D%d\r\n", (int)devicePowerState));

  018e4	e59f30bc	 ldr         r3, [pc, #0xBC]
  018e8	e5933440	 ldr         r3, [r3, #0x440]
  018ec	e3130c02	 tst         r3, #2, 24
  018f0	0a000011	 beq         |$LN27@UfnPdd_IOC|
  018f4	e59f30ac	 ldr         r3, [pc, #0xAC]
  018f8	e5933440	 ldr         r3, [r3, #0x440]
  018fc	e3130801	 tst         r3, #1, 16
  01900	0a000005	 beq         |$LN25@UfnPdd_IOC|
  01904	e59d1004	 ldr         r1, [sp, #4]
  01908	e59f0094	 ldr         r0, [pc, #0x94]
  0190c	eb000000	 bl          CeLogMsg
  01910	e3a03001	 mov         r3, #1
  01914	e58d3038	 str         r3, [sp, #0x38]
  01918	ea000004	 b           |$LN26@UfnPdd_IOC|
  0191c		 |$LN25@UfnPdd_IOC|
  0191c	e59d1004	 ldr         r1, [sp, #4]
  01920	e59f007c	 ldr         r0, [pc, #0x7C]
  01924	eb000000	 bl          NKDbgPrintfW
  01928	e3a03000	 mov         r3, #0
  0192c	e58d3038	 str         r3, [sp, #0x38]
  01930		 |$LN26@UfnPdd_IOC|
  01930	e3a03001	 mov         r3, #1
  01934	e58d303c	 str         r3, [sp, #0x3C]
  01938	ea000001	 b           |$LN28@UfnPdd_IOC|
  0193c		 |$LN27@UfnPdd_IOC|
  0193c	e3a03000	 mov         r3, #0
  01940	e58d303c	 str         r3, [sp, #0x3C]
  01944		 |$LN28@UfnPdd_IOC|

; 1540 :             pPdd->m_NewPowerState = devicePowerState;

  01944	e59d3018	 ldr         r3, [sp, #0x18]
  01948	e2832038	 add         r2, r3, #0x38
  0194c	e59d3004	 ldr         r3, [sp, #4]
  01950	e5823000	 str         r3, [r2]

; 1541 :             if (UpdateDevicePower(pPdd))

  01954	e59d0018	 ldr         r0, [sp, #0x18]
  01958	eb000000	 bl          UpdateDevicePower
  0195c	e58d0040	 str         r0, [sp, #0x40]
  01960	e59d3040	 ldr         r3, [sp, #0x40]
  01964	e3530000	 cmp         r3, #0
  01968	0a000001	 beq         |$LN2@UfnPdd_IOC|

; 1542 :             {
; 1543 :                 rc = ERROR_SUCCESS;

  0196c	e3a03000	 mov         r3, #0
  01970	e58d3000	 str         r3, [sp]
  01974		 |$LN2@UfnPdd_IOC|

; 1544 :             }
; 1545 :             break;

  01974	ea000004	 b           |$LN17@UfnPdd_IOC|
  01978		 |$LN1@UfnPdd_IOC|

; 1546 : 
; 1547 :         case IOCTL_UFN_CHANGE_DEFAULT_CLIENT:
; 1548 :             rc = ChangeDefaultClient((LPTSTR)pInBuffer);

  01978	e59d005c	 ldr         r0, [sp, #0x5C]
  0197c	eb000000	 bl          ChangeDefaultClient
  01980	e58d0044	 str         r0, [sp, #0x44]
  01984	e59d3044	 ldr         r3, [sp, #0x44]
  01988	e58d3000	 str         r3, [sp]
  0198c		 |$LN17@UfnPdd_IOC|

; 1549 :             break;
; 1550 :     }
; 1551 : 
; 1552 :     return rc;

  0198c	e59d3000	 ldr         r3, [sp]
  01990	e58d301c	 str         r3, [sp, #0x1C]

; 1553 : }

  01994	e59d001c	 ldr         r0, [sp, #0x1C]
  01998	e28dd048	 add         sp, sp, #0x48
  0199c	e89d6000	 ldmia       sp, {sp, lr}
  019a0	e12fff1e	 bx          lr
  019a4		 |$LN33@UfnPdd_IOC|
  019a4		 |$LN34@UfnPdd_IOC|
  019a4	00000000	 DCD         |??_C@_1FM@LGPIGFFO@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAe?$AAt?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAS@|
  019a8		 |$LN35@UfnPdd_IOC|
  019a8	00000000	 DCD         |dpCurSettings|
  019ac		 |$LN36@UfnPdd_IOC|
  019ac	00000000	 DCD         |??_C@_1FI@JPFDBBPM@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CJ?$AA?5?$AAW?$AAA?$AAR?$AAN?$AAI?$AAN?$AAG?$AA?3?$AA?5?$AAB?$AAa?$AAd?$AA?5@|
  019b0		 |$M46056|

			 ENDP  ; |UfnPdd_IOControl|

	EXPORT	|??_C@_1CI@MGKPCHDE@?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|RegCloseKey|
	IMPORT	|RegSetValueExW|
	IMPORT	|wcslen|

  00090			 AREA	 |.pdata|, PDATA
|$T46070| DCD	|$LN7@ChangeDefa|
	DCD	0x40002c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@MGKPCHDE@?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "f", 0x0, "a", 0x0, "u", 0x0, "l", 0x0, "t"
	DCB	0x0, "C", 0x0, "l", 0x0, "i", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, "D", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  019b0			 AREA	 |.text|, CODE, ARM

  019b0		 |ChangeDefaultClient| PROC

; 1442 : {

  019b0		 |$LN7@ChangeDefa|
  019b0	e1a0c00d	 mov         r12, sp
  019b4	e92d0001	 stmdb       sp!, {r0}
  019b8	e92d5000	 stmdb       sp!, {r12, lr}
  019bc	e24dd028	 sub         sp, sp, #0x28
  019c0		 |$M46067|

; 1443 :     DWORD dwRet;
; 1444 :     HKEY  hkFunctions = NULL;

  019c0	e3a03000	 mov         r3, #0
  019c4	e58d300c	 str         r3, [sp, #0xC]

; 1445 : 
; 1446 : 
; 1447 :     dwRet = OpenFunctionKey(&hkFunctions);

  019c8	e28d000c	 add         r0, sp, #0xC
  019cc	eb000000	 bl          OpenFunctionKey
  019d0	e58d001c	 str         r0, [sp, #0x1C]
  019d4	e59d301c	 ldr         r3, [sp, #0x1C]
  019d8	e58d3008	 str         r3, [sp, #8]

; 1448 :     if (dwRet == ERROR_SUCCESS)

  019dc	e59d3008	 ldr         r3, [sp, #8]
  019e0	e3530000	 cmp         r3, #0
  019e4	1a000011	 bne         |$LN2@ChangeDefa|

; 1449 :     {
; 1450 :         dwRet = RegSetValueEx(hkFunctions,
; 1451 :                               PSZ_REG_DEFAULT_DEFAULT_CLIENT_DRIVER,
; 1452 :                               0,
; 1453 :                               REG_SZ,
; 1454 :                               (PBYTE)pszClientName,
; 1455 :                               (_tcslen(pszClientName) + 1) * sizeof(TCHAR));

  019e8	e59d0030	 ldr         r0, [sp, #0x30]
  019ec	eb000000	 bl          wcslen
  019f0	e58d0020	 str         r0, [sp, #0x20]
  019f4	e59d3020	 ldr         r3, [sp, #0x20]
  019f8	e2832001	 add         r2, r3, #1
  019fc	e3a03002	 mov         r3, #2
  01a00	e0030392	 mul         r3, r2, r3
  01a04	e58d3004	 str         r3, [sp, #4]
  01a08	e59d3030	 ldr         r3, [sp, #0x30]
  01a0c	e58d3000	 str         r3, [sp]
  01a10	e3a03001	 mov         r3, #1
  01a14	e3a02000	 mov         r2, #0
  01a18	e59f103c	 ldr         r1, [pc, #0x3C]
  01a1c	e59d000c	 ldr         r0, [sp, #0xC]
  01a20	eb000000	 bl          RegSetValueExW
  01a24	e58d0024	 str         r0, [sp, #0x24]
  01a28	e59d3024	 ldr         r3, [sp, #0x24]
  01a2c	e58d3008	 str         r3, [sp, #8]
  01a30		 |$LN2@ChangeDefa|

; 1456 :     }
; 1457 : 
; 1458 :     if (hkFunctions)

  01a30	e59d300c	 ldr         r3, [sp, #0xC]
  01a34	e3530000	 cmp         r3, #0
  01a38	0a000001	 beq         |$LN1@ChangeDefa|

; 1459 :     {
; 1460 :         RegCloseKey(hkFunctions);

  01a3c	e59d000c	 ldr         r0, [sp, #0xC]
  01a40	eb000000	 bl          RegCloseKey
  01a44		 |$LN1@ChangeDefa|

; 1461 :     }
; 1462 : 
; 1463 :     return dwRet;

  01a44	e59d3008	 ldr         r3, [sp, #8]
  01a48	e58d3018	 str         r3, [sp, #0x18]

; 1464 : }

  01a4c	e59d0018	 ldr         r0, [sp, #0x18]
  01a50	e28dd028	 add         sp, sp, #0x28
  01a54	e89d6000	 ldmia       sp, {sp, lr}
  01a58	e12fff1e	 bx          lr
  01a5c		 |$LN8@ChangeDefa|
  01a5c		 |$LN9@ChangeDefa|
  01a5c	00000000	 DCD         |??_C@_1CI@MGKPCHDE@?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?$AA@|
  01a60		 |$M46068|

			 ENDP  ; |ChangeDefaultClient|

	EXPORT	|??_C@_1DK@HJDLAGJ@?$AA?2?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?2?$AAU?$AAS?$AAB?$AA?2?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|RegOpenKeyExW|

  00098			 AREA	 |.pdata|, PDATA
|$T46079| DCD	|$LN5@OpenFuncti|
	DCD	0x40001304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@HJDLAGJ@?$AA?2?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?2?$AAU?$AAS?$AAB?$AA?2?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?$AA@| DCB "\\"
	DCB	0x0, "D", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, "s", 0x0, "\\", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "\\"
	DCB	0x0, "F", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "D", 0x0, "r", 0x0, "i", 0x0, "v"
	DCB	0x0, "e", 0x0, "r", 0x0, "s", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  01a60			 AREA	 |.text|, CODE, ARM

  01a60		 |OpenFunctionKey| PROC

; 1398 : {

  01a60		 |$LN5@OpenFuncti|
  01a60	e1a0c00d	 mov         r12, sp
  01a64	e92d0001	 stmdb       sp!, {r0}
  01a68	e92d5000	 stmdb       sp!, {r12, lr}
  01a6c	e24dd010	 sub         sp, sp, #0x10
  01a70		 |$M46076|

; 1399 :     // Determine which client driver to load
; 1400 :     return RegOpenKeyEx(HKEY_LOCAL_MACHINE,
; 1401 :                         PSZ_REG_CLIENT_DRIVER_PATH,
; 1402 :                         0,
; 1403 :                         0,
; 1404 :                         phkFunctions);

  01a70	e59d3018	 ldr         r3, [sp, #0x18]
  01a74	e58d3000	 str         r3, [sp]
  01a78	e3a03000	 mov         r3, #0
  01a7c	e3a02000	 mov         r2, #0
  01a80	e59f1020	 ldr         r1, [pc, #0x20]
  01a84	e3a0010a	 mov         r0, #0xA, 2
  01a88	eb000000	 bl          RegOpenKeyExW
  01a8c	e58d000c	 str         r0, [sp, #0xC]
  01a90	e59d300c	 ldr         r3, [sp, #0xC]
  01a94	e58d3008	 str         r3, [sp, #8]

; 1405 : }

  01a98	e59d0008	 ldr         r0, [sp, #8]
  01a9c	e28dd010	 add         sp, sp, #0x10
  01aa0	e89d6000	 ldmia       sp, {sp, lr}
  01aa4	e12fff1e	 bx          lr
  01aa8		 |$LN6@OpenFuncti|
  01aa8		 |$LN7@OpenFuncti|
  01aa8	00000000	 DCD         |??_C@_1DK@HJDLAGJ@?$AA?2?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?2?$AAU?$AAS?$AAB?$AA?2?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?$AA@|
  01aac		 |$M46077|

			 ENDP  ; |OpenFunctionKey|

	EXPORT	|??_C@_1EO@GIHKGMGM@?$AA?$HL?$AA6?$AAF?$AA4?$AA0?$AA7?$AA9?$AA1?$AAD?$AA?9?$AA3?$AA0?$AA0?$AAE?$AA?9?$AA4?$AA4?$AAE?$AA4?$AA?9?$AAB?$AAC?$AA3?$AA8?$AA?9?$AAE?$AA0?$AAE?$AA6?$AA3?$AAC?$AAA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@KNLKOEJA@?$AAU?$AAs?$AAb?$AAF?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|SetEvent|
	EXPORT	|UfnPdd_Deinit|
	IMPORT	|AdvertiseInterface|
	IMPORT	|LocalFree|
	IMPORT	|DeleteCriticalSection|
	IMPORT	|InterruptDisable|
	IMPORT	|MmUnmapIoSpace|
	IMPORT	|CloseBusAccessHandle|
	IMPORT	|CloseHandle|
	IMPORT	|WaitForSingleObject|

  000a0			 AREA	 |.pdata|, PDATA
|$T46089| DCD	|$LN10@UfnPdd_Dei|
	DCD	0x40007904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@GIHKGMGM@?$AA?$HL?$AA6?$AAF?$AA4?$AA0?$AA7?$AA9?$AA1?$AAD?$AA?9?$AA3?$AA0?$AA0?$AAE?$AA?9?$AA4?$AA4?$AAE?$AA4?$AA?9?$AAB?$AAC?$AA3?$AA8?$AA?9?$AAE?$AA0?$AAE?$AA6?$AA3?$AAC?$AAA@| DCB "{"
	DCB	0x0, "6", 0x0, "F", 0x0, "4", 0x0, "0", 0x0, "7", 0x0, "9"
	DCB	0x0, "1", 0x0, "D", 0x0, "-", 0x0, "3", 0x0, "0", 0x0, "0"
	DCB	0x0, "E", 0x0, "-", 0x0, "4", 0x0, "4", 0x0, "E", 0x0, "4"
	DCB	0x0, "-", 0x0, "B", 0x0, "C", 0x0, "3", 0x0, "8", 0x0, "-"
	DCB	0x0, "E", 0x0, "0", 0x0, "E", 0x0, "6", 0x0, "3", 0x0, "C"
	DCB	0x0, "A", 0x0, "8", 0x0, "3", 0x0, "7", 0x0, "5", 0x0, "C"
	DCB	0x0, "}", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@KNLKOEJA@?$AAU?$AAs?$AAb?$AAF?$AAn?$AA?$AA@| DCB "U", 0x0, "s", 0x0
	DCB	"b", 0x0, "F", 0x0, "n", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  01aac			 AREA	 |.text|, CODE, ARM

  01aac		 |UfnPdd_Deinit| PROC

; 1561 : {

  01aac		 |$LN10@UfnPdd_Dei|
  01aac	e1a0c00d	 mov         r12, sp
  01ab0	e92d0001	 stmdb       sp!, {r0}
  01ab4	e92d5000	 stmdb       sp!, {r12, lr}
  01ab8	e24dd01c	 sub         sp, sp, #0x1C
  01abc		 |$M46086|

; 1562 :     USBFN_PDD *pPdd = pPddContext;

  01abc	e59d3024	 ldr         r3, [sp, #0x24]
  01ac0	e58d300c	 str         r3, [sp, #0xC]

; 1563 :     OMAP2420_USBD_REGS *pUSBDRegs = pPdd->pUSBDRegs;

  01ac4	e59d300c	 ldr         r3, [sp, #0xC]
  01ac8	e2833024	 add         r3, r3, #0x24
  01acc	e5933000	 ldr         r3, [r3]
  01ad0	e58d3008	 str         r3, [sp, #8]

; 1564 : 
; 1565 : 
; 1566 :     // Stop interrupt thread
; 1567 :     if (pPdd->hIntrThread != NULL)

  01ad4	e59d300c	 ldr         r3, [sp, #0xC]
  01ad8	e2833034	 add         r3, r3, #0x34
  01adc	e5933000	 ldr         r3, [r3]
  01ae0	e3530000	 cmp         r3, #0
  01ae4	0a000010	 beq         |$LN5@UfnPdd_Dei|

; 1568 :     {
; 1569 :         pPdd->exitIntrThread = TRUE;

  01ae8	e59d300c	 ldr         r3, [sp, #0xC]
  01aec	e2832030	 add         r2, r3, #0x30
  01af0	e3a03001	 mov         r3, #1
  01af4	e5823000	 str         r3, [r2]

; 1570 :         SetEvent(pPdd->hIntrEvent);

  01af8	e59d300c	 ldr         r3, [sp, #0xC]
  01afc	e283302c	 add         r3, r3, #0x2C
  01b00	e5930000	 ldr         r0, [r3]
  01b04	eb000000	 bl          SetEvent

; 1571 :         WaitForSingleObject(pPdd->hIntrThread, INFINITE);

  01b08	e3e01000	 mvn         r1, #0
  01b0c	e59d300c	 ldr         r3, [sp, #0xC]
  01b10	e2833034	 add         r3, r3, #0x34
  01b14	e5930000	 ldr         r0, [r3]
  01b18	eb000000	 bl          WaitForSingleObject

; 1572 :         CloseHandle(pPdd->hIntrThread);

  01b1c	e59d300c	 ldr         r3, [sp, #0xC]
  01b20	e2833034	 add         r3, r3, #0x34
  01b24	e5930000	 ldr         r0, [r3]
  01b28	eb000000	 bl          CloseHandle
  01b2c		 |$LN5@UfnPdd_Dei|

; 1573 :     }
; 1574 : 
; 1575 :     // Close interrupt handler
; 1576 :     if (pPdd->hIntrEvent != NULL)

  01b2c	e59d300c	 ldr         r3, [sp, #0xC]
  01b30	e283302c	 add         r3, r3, #0x2C
  01b34	e5933000	 ldr         r3, [r3]
  01b38	e3530000	 cmp         r3, #0
  01b3c	0a000007	 beq         |$LN4@UfnPdd_Dei|

; 1577 :     {
; 1578 :         CloseHandle(pPdd->hIntrEvent);

  01b40	e59d300c	 ldr         r3, [sp, #0xC]
  01b44	e283302c	 add         r3, r3, #0x2C
  01b48	e5930000	 ldr         r0, [r3]
  01b4c	eb000000	 bl          CloseHandle

; 1579 :         pPdd->hIntrEvent = NULL;

  01b50	e59d300c	 ldr         r3, [sp, #0xC]
  01b54	e283202c	 add         r2, r3, #0x2C
  01b58	e3a03000	 mov         r3, #0
  01b5c	e5823000	 str         r3, [r2]
  01b60		 |$LN4@UfnPdd_Dei|

; 1580 :     }
; 1581 : 
; 1582 :     // If parent bus is open, set hardware to D4 and close it
; 1583 :     if (pPdd->hParentBus != NULL)

  01b60	e59d300c	 ldr         r3, [sp, #0xC]
  01b64	e2833020	 add         r3, r3, #0x20
  01b68	e5933000	 ldr         r3, [r3]
  01b6c	e3530000	 cmp         r3, #0
  01b70	0a00000d	 beq         |$LN3@UfnPdd_Dei|

; 1584 :     {
; 1585 :         SetDevicePowerState(pPdd->hParentBus, D4, NULL);

  01b74	e3a02000	 mov         r2, #0
  01b78	e3a01004	 mov         r1, #4
  01b7c	e59d300c	 ldr         r3, [sp, #0xC]
  01b80	e2833020	 add         r3, r3, #0x20
  01b84	e5930000	 ldr         r0, [r3]
  01b88	eb000000	 bl          SetDevicePowerState

; 1586 :         CloseBusAccessHandle(pPdd->hParentBus);

  01b8c	e59d300c	 ldr         r3, [sp, #0xC]
  01b90	e2833020	 add         r3, r3, #0x20
  01b94	e5930000	 ldr         r0, [r3]
  01b98	eb000000	 bl          CloseBusAccessHandle

; 1587 :         pPdd->hParentBus = NULL;

  01b9c	e59d300c	 ldr         r3, [sp, #0xC]
  01ba0	e2832020	 add         r2, r3, #0x20
  01ba4	e3a03000	 mov         r3, #0
  01ba8	e5823000	 str         r3, [r2]
  01bac		 |$LN3@UfnPdd_Dei|

; 1588 :     }
; 1589 : 
; 1590 :     // Unmap USBD controller registers
; 1591 :     if (pPdd->pUSBDRegs != NULL)

  01bac	e59d300c	 ldr         r3, [sp, #0xC]
  01bb0	e2833024	 add         r3, r3, #0x24
  01bb4	e5933000	 ldr         r3, [r3]
  01bb8	e3530000	 cmp         r3, #0
  01bbc	0a00000a	 beq         |$LN2@UfnPdd_Dei|

; 1592 :     {
; 1593 :         MmUnmapIoSpace((VOID*)pPdd->pUSBDRegs, pPdd->memLen);

  01bc0	e59d300c	 ldr         r3, [sp, #0xC]
  01bc4	e2833004	 add         r3, r3, #4
  01bc8	e5931000	 ldr         r1, [r3]
  01bcc	e59d300c	 ldr         r3, [sp, #0xC]
  01bd0	e2833024	 add         r3, r3, #0x24
  01bd4	e5930000	 ldr         r0, [r3]
  01bd8	eb000000	 bl          MmUnmapIoSpace

; 1594 :         pPdd->pUSBDRegs = NULL;

  01bdc	e59d300c	 ldr         r3, [sp, #0xC]
  01be0	e2832024	 add         r2, r3, #0x24
  01be4	e3a03000	 mov         r3, #0
  01be8	e5823000	 str         r3, [r2]
  01bec		 |$LN2@UfnPdd_Dei|

; 1595 :     }
; 1596 : 
; 1597 :     // Release interrupt
; 1598 :     if (pPdd->sysIntr != 0)

  01bec	e59d300c	 ldr         r3, [sp, #0xC]
  01bf0	e2833028	 add         r3, r3, #0x28
  01bf4	e5933000	 ldr         r3, [r3]
  01bf8	e3530000	 cmp         r3, #0
  01bfc	0a000011	 beq         |$LN1@UfnPdd_Dei|

; 1599 :     {
; 1600 :         InterruptDisable(pPdd->sysIntr);

  01c00	e59d300c	 ldr         r3, [sp, #0xC]
  01c04	e2833028	 add         r3, r3, #0x28
  01c08	e5930000	 ldr         r0, [r3]
  01c0c	eb000000	 bl          InterruptDisable

; 1601 :         KernelIoControl(IOCTL_HAL_RELEASE_SYSINTR,
; 1602 :                         &pPdd->sysIntr,
; 1603 :                         sizeof(pPdd->sysIntr),
; 1604 :                         NULL,
; 1605 :                         0,
; 1606 :                         NULL);

  01c10	e3a03000	 mov         r3, #0
  01c14	e58d3004	 str         r3, [sp, #4]
  01c18	e3a03000	 mov         r3, #0
  01c1c	e58d3000	 str         r3, [sp]
  01c20	e3a03000	 mov         r3, #0
  01c24	e3a02004	 mov         r2, #4
  01c28	e59d100c	 ldr         r1, [sp, #0xC]
  01c2c	e2811028	 add         r1, r1, #0x28
  01c30	e59f0054	 ldr         r0, [pc, #0x54]
  01c34	eb000000	 bl          KernelIoControl

; 1607 : 
; 1608 :         pPdd->sysIntr = 0;

  01c38	e59d300c	 ldr         r3, [sp, #0xC]
  01c3c	e2832028	 add         r2, r3, #0x28
  01c40	e3a03000	 mov         r3, #0
  01c44	e5823000	 str         r3, [r2]
  01c48		 |$LN1@UfnPdd_Dei|

; 1609 :     }
; 1610 : 
; 1611 :     // Delete critical section
; 1612 :     DeleteCriticalSection(&pPdd->epCS);

  01c48	e59d300c	 ldr         r3, [sp, #0xC]
  01c4c	e2830054	 add         r0, r3, #0x54
  01c50	eb000000	 bl          DeleteCriticalSection

; 1613 : 
; 1614 :     // Free PDD context
; 1615 :     LocalFree(pPdd);

  01c54	e59d000c	 ldr         r0, [sp, #0xC]
  01c58	eb000000	 bl          LocalFree

; 1616 : 
; 1617 :     AdvertiseInterface((const GUID *)DMCLASS_PROTECTEDBUSNAMESPACE, L"UsbFn",FALSE);

  01c5c	e3a02000	 mov         r2, #0
  01c60	e59f1020	 ldr         r1, [pc, #0x20]
  01c64	e59f0018	 ldr         r0, [pc, #0x18]
  01c68	eb000000	 bl          AdvertiseInterface

; 1618 : 
; 1619 :     // Done
; 1620 :     return ERROR_SUCCESS;

  01c6c	e3a03000	 mov         r3, #0
  01c70	e58d3018	 str         r3, [sp, #0x18]

; 1621 : }

  01c74	e59d0018	 ldr         r0, [sp, #0x18]
  01c78	e28dd01c	 add         sp, sp, #0x1C
  01c7c	e89d6000	 ldmia       sp, {sp, lr}
  01c80	e12fff1e	 bx          lr
  01c84		 |$LN11@UfnPdd_Dei|
  01c84		 |$LN12@UfnPdd_Dei|
  01c84	00000000	 DCD         |??_C@_1EO@GIHKGMGM@?$AA?$HL?$AA6?$AAF?$AA4?$AA0?$AA7?$AA9?$AA1?$AAD?$AA?9?$AA3?$AA0?$AA0?$AAE?$AA?9?$AA4?$AA4?$AAE?$AA4?$AA?9?$AAB?$AAC?$AA3?$AA8?$AA?9?$AAE?$AA0?$AAE?$AA6?$AA3?$AAC?$AAA@|
  01c88		 |$LN13@UfnPdd_Dei|
  01c88	00000000	 DCD         |??_C@_1M@KNLKOEJA@?$AAU?$AAs?$AAb?$AAF?$AAn?$AA?$AA@|
  01c8c		 |$LN14@UfnPdd_Dei|
  01c8c	010100d8	 DCD         0x10100d8
  01c90		 |$M46087|

			 ENDP  ; |UfnPdd_Deinit|

	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T46099| DCD	|$LN5@SetEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M46096|

; 236  : 	return EventModify(h,EVENT_SET);

  00010	e3a01003	 mov         r1, #3
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 237  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M46097|

			 ENDP  ; |SetEvent|

	EXPORT	|UfnPdd_DeregisterDevice|

  000a8			 AREA	 |.pdata|, PDATA
|$T46107| DCD	|$LN8@UfnPdd_Der|
	DCD	0x40002e04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\usbd\pdd\pdd.c

  01c90			 AREA	 |.text|, CODE, ARM

  01c90		 |UfnPdd_DeregisterDevice| PROC

; 1632 : {

  01c90		 |$LN8@UfnPdd_Der|
  01c90	e1a0c00d	 mov         r12, sp
  01c94	e92d0001	 stmdb       sp!, {r0}
  01c98	e92d5000	 stmdb       sp!, {r12, lr}
  01c9c	e24dd010	 sub         sp, sp, #0x10
  01ca0		 |$M46104|

; 1633 :     USBFN_PDD          *pPdd      = pPddContext;

  01ca0	e59d3018	 ldr         r3, [sp, #0x18]
  01ca4	e58d3008	 str         r3, [sp, #8]

; 1634 :     OMAP2420_USBD_REGS *pUSBDRegs = pPdd->pUSBDRegs;

  01ca8	e59d3008	 ldr         r3, [sp, #8]
  01cac	e2833024	 add         r3, r3, #0x24
  01cb0	e5933000	 ldr         r3, [r3]
  01cb4	e58d3000	 str         r3, [sp]

; 1635 :     DWORD               ep;
; 1636 : 
; 1637 : 
; 1638 :     // Disable all RX, TX EPs
; 1639 :     OUTREG32(&pUSBDRegs->EP0, 0);

  01cb8	e59d3000	 ldr         r3, [sp]
  01cbc	e2832080	 add         r2, r3, #0x80
  01cc0	e3a03000	 mov         r3, #0
  01cc4	e5823000	 str         r3, [r2]

; 1640 : 
; 1641 :     for (ep = 0; ep < USBD_NONZERO_EP_COUNT; ep++)

  01cc8	e3a03000	 mov         r3, #0
  01ccc	e58d3004	 str         r3, [sp, #4]
  01cd0	ea000002	 b           |$LN3@UfnPdd_Der|
  01cd4		 |$LN2@UfnPdd_Der|
  01cd4	e59d3004	 ldr         r3, [sp, #4]
  01cd8	e2833001	 add         r3, r3, #1
  01cdc	e58d3004	 str         r3, [sp, #4]
  01ce0		 |$LN3@UfnPdd_Der|
  01ce0	e59d3004	 ldr         r3, [sp, #4]
  01ce4	e353000f	 cmp         r3, #0xF
  01ce8	2a000010	 bcs         |$LN1@UfnPdd_Der|

; 1642 :     {
; 1643 :         OUTREG32(&pUSBDRegs->EP_RX[ep], 0);

  01cec	e59d3000	 ldr         r3, [sp]
  01cf0	e2831084	 add         r1, r3, #0x84
  01cf4	e59d2004	 ldr         r2, [sp, #4]
  01cf8	e3a03004	 mov         r3, #4
  01cfc	e0030392	 mul         r3, r2, r3
  01d00	e0812003	 add         r2, r1, r3
  01d04	e3a03000	 mov         r3, #0
  01d08	e5823000	 str         r3, [r2]

; 1644 :         OUTREG32(&pUSBDRegs->EP_TX[ep], 0);

  01d0c	e59d3000	 ldr         r3, [sp]
  01d10	e28310c4	 add         r1, r3, #0xC4
  01d14	e59d2004	 ldr         r2, [sp, #4]
  01d18	e3a03004	 mov         r3, #4
  01d1c	e0030392	 mul         r3, r2, r3
  01d20	e0812003	 add         r2, r1, r3
  01d24	e3a03000	 mov         r3, #0
  01d28	e5823000	 str         r3, [r2]

; 1645 :     }

  01d2c	eaffffe8	 b           |$LN2@UfnPdd_Der|
  01d30		 |$LN1@UfnPdd_Der|

; 1646 : 
; 1647 :     return ERROR_SUCCESS;

  01d30	e3a03000	 mov         r3, #0
  01d34	e58d300c	 str         r3, [sp, #0xC]

; 1648 : }

  01d38	e59d000c	 ldr         r0, [sp, #0xC]
  01d3c	e28dd010	 add         sp, sp, #0x10
  01d40	e89d6000	 ldmia       sp, {sp, lr}
  01d44	e12fff1e	 bx          lr
  01d48		 |$M46105|

			 ENDP  ; |UfnPdd_DeregisterDevice|

	EXPORT	|??_C@_1BM@ELBPNMDN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAo?$AAp?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_Stop|

  000b0			 AREA	 |.pdata|, PDATA
|$T46117| DCD	|$LN11@UfnPdd_Sto|
	DCD	0x40004604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@ELBPNMDN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAo?$AAp?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "t", 0x0, "o", 0x0, "p", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  01d48			 AREA	 |.text|, CODE, ARM

  01d48		 |UfnPdd_Stop| PROC

; 1659 : {

  01d48		 |$LN11@UfnPdd_Sto|
  01d48	e1a0c00d	 mov         r12, sp
  01d4c	e92d0001	 stmdb       sp!, {r0}
  01d50	e92d5000	 stmdb       sp!, {r12, lr}
  01d54	e24dd018	 sub         sp, sp, #0x18
  01d58		 |$M46114|

; 1660 :     USBFN_PDD           *pPdd      = pPddContext;

  01d58	e59d3020	 ldr         r3, [sp, #0x20]
  01d5c	e58d3008	 str         r3, [sp, #8]

; 1661 :     OMAP2420_USBD_REGS  *pUSBDRegs = pPdd->pUSBDRegs;

  01d60	e59d3008	 ldr         r3, [sp, #8]
  01d64	e2833024	 add         r3, r3, #0x24
  01d68	e5933000	 ldr         r3, [r3]
  01d6c	e58d3000	 str         r3, [sp]

; 1662 :     CEDEVICE_POWER_STATE prevPowerState ;
; 1663 : 
; 1664 : 
; 1665 :     DEBUGMSG(ZONE_PDD, (L"UfnPdd_Stop\r\n"));

  01d70	e59f30e4	 ldr         r3, [pc, #0xE4]
  01d74	e5933440	 ldr         r3, [r3, #0x440]
  01d78	e3130902	 tst         r3, #2, 18
  01d7c	0a00000f	 beq         |$LN7@UfnPdd_Sto|
  01d80	e59f30d4	 ldr         r3, [pc, #0xD4]
  01d84	e5933440	 ldr         r3, [r3, #0x440]
  01d88	e3130801	 tst         r3, #1, 16
  01d8c	0a000004	 beq         |$LN5@UfnPdd_Sto|
  01d90	e59f00c0	 ldr         r0, [pc, #0xC0]
  01d94	eb000000	 bl          CeLogMsg
  01d98	e3a03001	 mov         r3, #1
  01d9c	e58d3010	 str         r3, [sp, #0x10]
  01da0	ea000003	 b           |$LN6@UfnPdd_Sto|
  01da4		 |$LN5@UfnPdd_Sto|
  01da4	e59f00ac	 ldr         r0, [pc, #0xAC]
  01da8	eb000000	 bl          NKDbgPrintfW
  01dac	e3a03000	 mov         r3, #0
  01db0	e58d3010	 str         r3, [sp, #0x10]
  01db4		 |$LN6@UfnPdd_Sto|
  01db4	e3a03001	 mov         r3, #1
  01db8	e58d3014	 str         r3, [sp, #0x14]
  01dbc	ea000001	 b           |$LN8@UfnPdd_Sto|
  01dc0		 |$LN7@UfnPdd_Sto|
  01dc0	e3a03000	 mov         r3, #0
  01dc4	e58d3014	 str         r3, [sp, #0x14]
  01dc8		 |$LN8@UfnPdd_Sto|

; 1666 : 
; 1667 :     prevPowerState = pPdd->m_CurrentPowerState;

  01dc8	e59d3008	 ldr         r3, [sp, #8]
  01dcc	e283303c	 add         r3, r3, #0x3C
  01dd0	e5933000	 ldr         r3, [r3]
  01dd4	e58d3004	 str         r3, [sp, #4]

; 1668 : 
; 1669 :     if ((prevPowerState == D3) || (prevPowerState == D4))

  01dd8	e59d3004	 ldr         r3, [sp, #4]
  01ddc	e3530003	 cmp         r3, #3
  01de0	0a000002	 beq         |$LN1@UfnPdd_Sto|
  01de4	e59d3004	 ldr         r3, [sp, #4]
  01de8	e3530004	 cmp         r3, #4
  01dec	1a000005	 bne         |$LN2@UfnPdd_Sto|
  01df0		 |$LN1@UfnPdd_Sto|

; 1670 :     {
; 1671 :         pPdd->m_NewPowerState = D2;

  01df0	e59d3008	 ldr         r3, [sp, #8]
  01df4	e2832038	 add         r2, r3, #0x38
  01df8	e3a03002	 mov         r3, #2
  01dfc	e5823000	 str         r3, [r2]

; 1672 :         UpdateDevicePower(pPdd);

  01e00	e59d0008	 ldr         r0, [sp, #8]
  01e04	eb000000	 bl          UpdateDevicePower
  01e08		 |$LN2@UfnPdd_Sto|

; 1673 :     }
; 1674 : 
; 1675 :     // Deattach device
; 1676 :     CLRREG32(&pUSBDRegs->SYSCON1, USBD_SYSCON1_PULLUP_EN);

  01e08	e59d3000	 ldr         r3, [sp]
  01e0c	e2833018	 add         r3, r3, #0x18
  01e10	e5932000	 ldr         r2, [r3]
  01e14	e3e03001	 mvn         r3, #1
  01e18	e0022003	 and         r2, r2, r3
  01e1c	e59d3000	 ldr         r3, [sp]
  01e20	e2833018	 add         r3, r3, #0x18
  01e24	e5832000	 str         r2, [r3]

; 1677 : 
; 1678 :     pPdd->m_NewPowerState = prevPowerState;

  01e28	e59d3008	 ldr         r3, [sp, #8]
  01e2c	e2832038	 add         r2, r3, #0x38
  01e30	e59d3004	 ldr         r3, [sp, #4]
  01e34	e5823000	 str         r3, [r2]

; 1679 :     UpdateDevicePower(pPdd);

  01e38	e59d0008	 ldr         r0, [sp, #8]
  01e3c	eb000000	 bl          UpdateDevicePower

; 1680 : 
; 1681 :     // Done
; 1682 :     return ERROR_SUCCESS;

  01e40	e3a03000	 mov         r3, #0
  01e44	e58d300c	 str         r3, [sp, #0xC]

; 1683 : }

  01e48	e59d000c	 ldr         r0, [sp, #0xC]
  01e4c	e28dd018	 add         sp, sp, #0x18
  01e50	e89d6000	 ldmia       sp, {sp, lr}
  01e54	e12fff1e	 bx          lr
  01e58		 |$LN12@UfnPdd_Sto|
  01e58		 |$LN13@UfnPdd_Sto|
  01e58	00000000	 DCD         |??_C@_1BM@ELBPNMDN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAo?$AAp?$AA?$AN?$AA?6?$AA?$AA@|
  01e5c		 |$LN14@UfnPdd_Sto|
  01e5c	00000000	 DCD         |dpCurSettings|
  01e60		 |$M46115|

			 ENDP  ; |UfnPdd_Stop|

	EXPORT	|??_C@_1DI@DNFBFJFI@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_DeinitEndpoint|

  000b8			 AREA	 |.pdata|, PDATA
|$T46130| DCD	|$LN9@UfnPdd_Dei@2|
	DCD	0x40003704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@DNFBFJFI@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "E", 0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i"
	DCB	0x0, "n", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  01e60			 AREA	 |.text|, CODE, ARM

  01e60		 |UfnPdd_DeinitEndpoint| PROC

; 1694 : {

  01e60		 |$LN9@UfnPdd_Dei@2|
  01e60	e1a0c00d	 mov         r12, sp
  01e64	e92d0003	 stmdb       sp!, {r0, r1}
  01e68	e92d5000	 stmdb       sp!, {r12, lr}
  01e6c	e24dd018	 sub         sp, sp, #0x18
  01e70		 |$M46127|

; 1695 :     USBFN_PDD          *pPdd      = pPddContext;

  01e70	e59d3020	 ldr         r3, [sp, #0x20]
  01e74	e58d3008	 str         r3, [sp, #8]

; 1696 :     OMAP2420_USBD_REGS *pUSBDRegs = pPdd->pUSBDRegs;

  01e78	e59d3008	 ldr         r3, [sp, #8]
  01e7c	e2833024	 add         r3, r3, #0x24
  01e80	e5933000	 ldr         r3, [r3]
  01e84	e58d3004	 str         r3, [sp, #4]

; 1697 :     DWORD               epNum;
; 1698 : 
; 1699 : 
; 1700 :     DEBUGMSG(ZONE_PDD, (L"UfnPdd_DeinitEndpoint: %d\r\n", endPoint));

  01e88	e59f30a8	 ldr         r3, [pc, #0xA8]
  01e8c	e5933440	 ldr         r3, [r3, #0x440]
  01e90	e3130902	 tst         r3, #2, 18
  01e94	0a000011	 beq         |$LN5@UfnPdd_Dei@2|
  01e98	e59f3098	 ldr         r3, [pc, #0x98]
  01e9c	e5933440	 ldr         r3, [r3, #0x440]
  01ea0	e3130801	 tst         r3, #1, 16
  01ea4	0a000005	 beq         |$LN3@UfnPdd_Dei@2|
  01ea8	e59d1024	 ldr         r1, [sp, #0x24]
  01eac	e59f0080	 ldr         r0, [pc, #0x80]
  01eb0	eb000000	 bl          CeLogMsg
  01eb4	e3a03001	 mov         r3, #1
  01eb8	e58d3010	 str         r3, [sp, #0x10]
  01ebc	ea000004	 b           |$LN4@UfnPdd_Dei@2|
  01ec0		 |$LN3@UfnPdd_Dei@2|
  01ec0	e59d1024	 ldr         r1, [sp, #0x24]
  01ec4	e59f0068	 ldr         r0, [pc, #0x68]
  01ec8	eb000000	 bl          NKDbgPrintfW
  01ecc	e3a03000	 mov         r3, #0
  01ed0	e58d3010	 str         r3, [sp, #0x10]
  01ed4		 |$LN4@UfnPdd_Dei@2|
  01ed4	e3a03001	 mov         r3, #1
  01ed8	e58d3014	 str         r3, [sp, #0x14]
  01edc	ea000001	 b           |$LN6@UfnPdd_Dei@2|
  01ee0		 |$LN5@UfnPdd_Dei@2|
  01ee0	e3a03000	 mov         r3, #0
  01ee4	e58d3014	 str         r3, [sp, #0x14]
  01ee8		 |$LN6@UfnPdd_Dei@2|

; 1701 : 
; 1702 :     // Select EP
; 1703 :     epNum = USBD_EP_NUM & endPoint;

  01ee8	e59d3024	 ldr         r3, [sp, #0x24]
  01eec	e203300f	 and         r3, r3, #0xF
  01ef0	e58d3000	 str         r3, [sp]

; 1704 :     SelectEp(pPdd, epNum);

  01ef4	e59d1000	 ldr         r1, [sp]
  01ef8	e59d0008	 ldr         r0, [sp, #8]
  01efc	eb000000	 bl          SelectEp

; 1705 : 
; 1706 :     // Clear EP
; 1707 :     OUTREG32(&pUSBDRegs->CTRL, USBD_CTRL_CLR_EP);

  01f00	e59d3004	 ldr         r3, [sp, #4]
  01f04	e283200c	 add         r2, r3, #0xC
  01f08	e3a03002	 mov         r3, #2
  01f0c	e5823000	 str         r3, [r2]

; 1708 : 
; 1709 :     // Deselect EP
; 1710 :     DeselectEp(pPdd, epNum);

  01f10	e59d1000	 ldr         r1, [sp]
  01f14	e59d0008	 ldr         r0, [sp, #8]
  01f18	eb000000	 bl          DeselectEp

; 1711 : 
; 1712 :     // Done
; 1713 :     return ERROR_SUCCESS;

  01f1c	e3a03000	 mov         r3, #0
  01f20	e58d300c	 str         r3, [sp, #0xC]

; 1714 : }

  01f24	e59d000c	 ldr         r0, [sp, #0xC]
  01f28	e28dd018	 add         sp, sp, #0x18
  01f2c	e89d6000	 ldmia       sp, {sp, lr}
  01f30	e12fff1e	 bx          lr
  01f34		 |$LN10@UfnPdd_Dei@2|
  01f34		 |$LN11@UfnPdd_Dei@2|
  01f34	00000000	 DCD         |??_C@_1DI@DNFBFJFI@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  01f38		 |$LN12@UfnPdd_Dei@2|
  01f38	00000000	 DCD         |dpCurSettings|
  01f3c		 |$M46128|

			 ENDP  ; |UfnPdd_DeinitEndpoint|

	EXPORT	|??_C@_1DE@CLEBGKIE@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_InitEndpoint|

  000c0			 AREA	 |.pdata|, PDATA
|$T46143| DCD	|$LN9@UfnPdd_Ini@2|
	DCD	0x40002404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@CLEBGKIE@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "E", 0x0, "n"
	DCB	0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  01f3c			 AREA	 |.text|, CODE, ARM

  01f3c		 |UfnPdd_InitEndpoint| PROC

; 1732 : {

  01f3c		 |$LN9@UfnPdd_Ini@2|
  01f3c	e1a0c00d	 mov         r12, sp
  01f40	e92d000f	 stmdb       sp!, {r0 - r3}
  01f44	e92d5000	 stmdb       sp!, {r12, lr}
  01f48	e24dd00c	 sub         sp, sp, #0xC
  01f4c		 |$M46140|

; 1733 :     DEBUGMSG(ZONE_PDD, (L"UfnPdd_InitEndpoint: %d\r\n", endPoint));

  01f4c	e59f3074	 ldr         r3, [pc, #0x74]
  01f50	e5933440	 ldr         r3, [r3, #0x440]
  01f54	e3130902	 tst         r3, #2, 18
  01f58	0a000011	 beq         |$LN5@UfnPdd_Ini@2|
  01f5c	e59f3064	 ldr         r3, [pc, #0x64]
  01f60	e5933440	 ldr         r3, [r3, #0x440]
  01f64	e3130801	 tst         r3, #1, 16
  01f68	0a000005	 beq         |$LN3@UfnPdd_Ini@2|
  01f6c	e59d1018	 ldr         r1, [sp, #0x18]
  01f70	e59f004c	 ldr         r0, [pc, #0x4C]
  01f74	eb000000	 bl          CeLogMsg
  01f78	e3a03001	 mov         r3, #1
  01f7c	e58d3004	 str         r3, [sp, #4]
  01f80	ea000004	 b           |$LN4@UfnPdd_Ini@2|
  01f84		 |$LN3@UfnPdd_Ini@2|
  01f84	e59d1018	 ldr         r1, [sp, #0x18]
  01f88	e59f0034	 ldr         r0, [pc, #0x34]
  01f8c	eb000000	 bl          NKDbgPrintfW
  01f90	e3a03000	 mov         r3, #0
  01f94	e58d3004	 str         r3, [sp, #4]
  01f98		 |$LN4@UfnPdd_Ini@2|
  01f98	e3a03001	 mov         r3, #1
  01f9c	e58d3008	 str         r3, [sp, #8]
  01fa0	ea000001	 b           |$LN6@UfnPdd_Ini@2|
  01fa4		 |$LN5@UfnPdd_Ini@2|
  01fa4	e3a03000	 mov         r3, #0
  01fa8	e58d3008	 str         r3, [sp, #8]
  01fac		 |$LN6@UfnPdd_Ini@2|

; 1734 :     return ERROR_SUCCESS;

  01fac	e3a03000	 mov         r3, #0
  01fb0	e58d3000	 str         r3, [sp]

; 1735 : }

  01fb4	e59d0000	 ldr         r0, [sp]
  01fb8	e28dd00c	 add         sp, sp, #0xC
  01fbc	e89d6000	 ldmia       sp, {sp, lr}
  01fc0	e12fff1e	 bx          lr
  01fc4		 |$LN10@UfnPdd_Ini@2|
  01fc4		 |$LN11@UfnPdd_Ini@2|
  01fc4	00000000	 DCD         |??_C@_1DE@CLEBGKIE@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  01fc8		 |$LN12@UfnPdd_Ini@2|
  01fc8	00000000	 DCD         |dpCurSettings|
  01fcc		 |$M46141|

			 ENDP  ; |UfnPdd_InitEndpoint|

	EXPORT	|??_C@_1EI@KLPLDBDD@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAt?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAX@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_SetAddress|

  000c8			 AREA	 |.pdata|, PDATA
|$T46156| DCD	|$LN9@UfnPdd_Set|
	DCD	0x40002604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@KLPLDBDD@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAt?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAX@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ","
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "X", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  01fcc			 AREA	 |.text|, CODE, ARM

  01fcc		 |UfnPdd_SetAddress| PROC

; 1746 : {

  01fcc		 |$LN9@UfnPdd_Set|
  01fcc	e1a0c00d	 mov         r12, sp
  01fd0	e92d0003	 stmdb       sp!, {r0, r1}
  01fd4	e92d5000	 stmdb       sp!, {r12, lr}
  01fd8	e24dd00c	 sub         sp, sp, #0xC
  01fdc		 |$M46153|

; 1747 :     DEBUGMSG(ZONE_PDD, (L"UfnPdd_SetAddress(0x%08X, 0x%02X)\r\n", pPddContext, address));

  01fdc	e59f307c	 ldr         r3, [pc, #0x7C]
  01fe0	e5933440	 ldr         r3, [r3, #0x440]
  01fe4	e3130902	 tst         r3, #2, 18
  01fe8	0a000013	 beq         |$LN5@UfnPdd_Set|
  01fec	e59f306c	 ldr         r3, [pc, #0x6C]
  01ff0	e5933440	 ldr         r3, [r3, #0x440]
  01ff4	e3130801	 tst         r3, #1, 16
  01ff8	0a000006	 beq         |$LN3@UfnPdd_Set|
  01ffc	e5dd2018	 ldrb        r2, [sp, #0x18]
  02000	e59d1014	 ldr         r1, [sp, #0x14]
  02004	e59f0050	 ldr         r0, [pc, #0x50]
  02008	eb000000	 bl          CeLogMsg
  0200c	e3a03001	 mov         r3, #1
  02010	e58d3004	 str         r3, [sp, #4]
  02014	ea000005	 b           |$LN4@UfnPdd_Set|
  02018		 |$LN3@UfnPdd_Set|
  02018	e5dd2018	 ldrb        r2, [sp, #0x18]
  0201c	e59d1014	 ldr         r1, [sp, #0x14]
  02020	e59f0034	 ldr         r0, [pc, #0x34]
  02024	eb000000	 bl          NKDbgPrintfW
  02028	e3a03000	 mov         r3, #0
  0202c	e58d3004	 str         r3, [sp, #4]
  02030		 |$LN4@UfnPdd_Set|
  02030	e3a03001	 mov         r3, #1
  02034	e58d3008	 str         r3, [sp, #8]
  02038	ea000001	 b           |$LN6@UfnPdd_Set|
  0203c		 |$LN5@UfnPdd_Set|
  0203c	e3a03000	 mov         r3, #0
  02040	e58d3008	 str         r3, [sp, #8]
  02044		 |$LN6@UfnPdd_Set|

; 1748 :     return ERROR_SUCCESS;

  02044	e3a03000	 mov         r3, #0
  02048	e58d3000	 str         r3, [sp]

; 1749 : }

  0204c	e59d0000	 ldr         r0, [sp]
  02050	e28dd00c	 add         sp, sp, #0xC
  02054	e89d6000	 ldmia       sp, {sp, lr}
  02058	e12fff1e	 bx          lr
  0205c		 |$LN10@UfnPdd_Set|
  0205c		 |$LN11@UfnPdd_Set|
  0205c	00000000	 DCD         |??_C@_1EI@KLPLDBDD@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAt?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAX@|
  02060		 |$LN12@UfnPdd_Set|
  02060	00000000	 DCD         |dpCurSettings|
  02064		 |$M46154|

			 ENDP  ; |UfnPdd_SetAddress|

	EXPORT	|??_C@_1CO@OMIAKIFI@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAN?$AAD?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@HOKFIFBB@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAP?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@JONBEJL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_Start|

  000d0			 AREA	 |.pdata|, PDATA
|$T46177| DCD	|$LN19@UfnPdd_Sta@2|
	DCD	0x40007304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@OMIAKIFI@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAN?$AAD?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "("
	DCB	0x0, ")", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "E", 0x0, "N"
	DCB	0x0, "D", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@HOKFIFBB@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAP?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "("
	DCB	0x0, ")", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " "
	DCB	0x0, "P", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "p"
	DCB	0x0, "P", 0x0, "d", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "i"
	DCB	0x0, "s", 0x0, " ", 0x0, "N", 0x0, "U", 0x0, "L", 0x0, "L"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@JONBEJL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "("
	DCB	0x0, ")", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "S", 0x0, "T"
	DCB	0x0, "A", 0x0, "R", 0x0, "T", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  02064			 AREA	 |.text|, CODE, ARM

  02064		 |UfnPdd_Start| PROC

; 1760 : {

  02064		 |$LN19@UfnPdd_Sta@2|
  02064	e1a0c00d	 mov         r12, sp
  02068	e92d0001	 stmdb       sp!, {r0}
  0206c	e92d5000	 stmdb       sp!, {r12, lr}
  02070	e24dd028	 sub         sp, sp, #0x28
  02074		 |$M46174|

; 1761 :     DWORD rv;
; 1762 :     
; 1763 :     DEBUGMSG(ZONE_FUNCTION, (L"UfnPdd_Start() - START\r\n"));

  02074	e59f31a8	 ldr         r3, [pc, #0x1A8]
  02078	e5933440	 ldr         r3, [r3, #0x440]
  0207c	e3130a01	 tst         r3, #1, 20
  02080	0a00000f	 beq         |$LN7@UfnPdd_Sta@2|
  02084	e59f3198	 ldr         r3, [pc, #0x198]
  02088	e5933440	 ldr         r3, [r3, #0x440]
  0208c	e3130801	 tst         r3, #1, 16
  02090	0a000004	 beq         |$LN5@UfnPdd_Sta@2|
  02094	e59f0190	 ldr         r0, [pc, #0x190]
  02098	eb000000	 bl          CeLogMsg
  0209c	e3a03001	 mov         r3, #1
  020a0	e58d3010	 str         r3, [sp, #0x10]
  020a4	ea000003	 b           |$LN6@UfnPdd_Sta@2|
  020a8		 |$LN5@UfnPdd_Sta@2|
  020a8	e59f017c	 ldr         r0, [pc, #0x17C]
  020ac	eb000000	 bl          NKDbgPrintfW
  020b0	e3a03000	 mov         r3, #0
  020b4	e58d3010	 str         r3, [sp, #0x10]
  020b8		 |$LN6@UfnPdd_Sta@2|
  020b8	e3a03001	 mov         r3, #1
  020bc	e58d3014	 str         r3, [sp, #0x14]
  020c0	ea000001	 b           |$LN8@UfnPdd_Sta@2|
  020c4		 |$LN7@UfnPdd_Sta@2|
  020c4	e3a03000	 mov         r3, #0
  020c8	e58d3014	 str         r3, [sp, #0x14]
  020cc		 |$LN8@UfnPdd_Sta@2|

; 1764 : 
; 1765 :     if (pPddContext == NULL)

  020cc	e59d3030	 ldr         r3, [sp, #0x30]
  020d0	e3530000	 cmp         r3, #0
  020d4	1a000018	 bne         |$LN2@UfnPdd_Sta@2|

; 1766 :     {
; 1767 :         DEBUGMSG(ZONE_ERROR, (L"UfnPdd_Start() - "
; 1768 :             L"Invalid Parameter: pPddContext is NULL\r\n"));

  020d8	e59f3144	 ldr         r3, [pc, #0x144]
  020dc	e5933440	 ldr         r3, [r3, #0x440]
  020e0	e3130001	 tst         r3, #1
  020e4	0a00000f	 beq         |$LN11@UfnPdd_Sta@2|
  020e8	e59f3134	 ldr         r3, [pc, #0x134]
  020ec	e5933440	 ldr         r3, [r3, #0x440]
  020f0	e3130801	 tst         r3, #1, 16
  020f4	0a000004	 beq         |$LN9@UfnPdd_Sta@2|
  020f8	e59f0128	 ldr         r0, [pc, #0x128]
  020fc	eb000000	 bl          CeLogMsg
  02100	e3a03001	 mov         r3, #1
  02104	e58d3018	 str         r3, [sp, #0x18]
  02108	ea000003	 b           |$LN10@UfnPdd_Sta@2|
  0210c		 |$LN9@UfnPdd_Sta@2|
  0210c	e59f0114	 ldr         r0, [pc, #0x114]
  02110	eb000000	 bl          NKDbgPrintfW
  02114	e3a03000	 mov         r3, #0
  02118	e58d3018	 str         r3, [sp, #0x18]
  0211c		 |$LN10@UfnPdd_Sta@2|
  0211c	e3a03001	 mov         r3, #1
  02120	e58d301c	 str         r3, [sp, #0x1C]
  02124	ea000001	 b           |$LN12@UfnPdd_Sta@2|
  02128		 |$LN11@UfnPdd_Sta@2|
  02128	e3a03000	 mov         r3, #0
  0212c	e58d301c	 str         r3, [sp, #0x1C]
  02130		 |$LN12@UfnPdd_Sta@2|

; 1769 :         rv = ERROR_INVALID_PARAMETER;

  02130	e3a03057	 mov         r3, #0x57
  02134	e58d3000	 str         r3, [sp]

; 1770 :     }
; 1771 :     else

  02138	ea00001c	 b           |$LN1@UfnPdd_Sta@2|
  0213c		 |$LN2@UfnPdd_Sta@2|

; 1772 :     {
; 1773 :         USBFN_PDD          * pPdd           = pPddContext;

  0213c	e59d3030	 ldr         r3, [sp, #0x30]
  02140	e58d3008	 str         r3, [sp, #8]

; 1774 :         OMAP2420_USBD_REGS * pUSBDRegs      = pPdd->pUSBDRegs;

  02144	e59d3008	 ldr         r3, [sp, #8]
  02148	e2833024	 add         r3, r3, #0x24
  0214c	e5933000	 ldr         r3, [r3]
  02150	e58d3004	 str         r3, [sp, #4]

; 1775 : 
; 1776 : 
; 1777 :         pPdd->m_NewPowerState = D2;

  02154	e59d3008	 ldr         r3, [sp, #8]
  02158	e2832038	 add         r2, r3, #0x38
  0215c	e3a03002	 mov         r3, #2
  02160	e5823000	 str         r3, [r2]

; 1778 :         UpdateDevicePower(pPdd);

  02164	e59d0008	 ldr         r0, [sp, #8]
  02168	eb000000	 bl          UpdateDevicePower

; 1779 : 
; 1780 :         // Enable interrupts
; 1781 :         OUTREG32(&pUSBDRegs->IRQ_EN, USBD_IRQ_MASK);

  0216c	e59d3004	 ldr         r3, [sp, #4]
  02170	e2832028	 add         r2, r3, #0x28
  02174	e3a03039	 mov         r3, #0x39
  02178	e5823000	 str         r3, [r2]

; 1782 : 
; 1783 :         // Attach device to bus (it has no effect when OTG controller is used)
; 1784 :         SETREG32(&pUSBDRegs->SYSCON1, USBD_SYSCON1_PULLUP_EN);

  0217c	e59d3004	 ldr         r3, [sp, #4]
  02180	e2833018	 add         r3, r3, #0x18
  02184	e5933000	 ldr         r3, [r3]
  02188	e3832001	 orr         r2, r3, #1
  0218c	e59d3004	 ldr         r3, [sp, #4]
  02190	e2833018	 add         r3, r3, #0x18
  02194	e5832000	 str         r2, [r3]

; 1785 : 
; 1786 :         // Set fake device change flag which on first interrupt force
; 1787 :         // device state change handler even if it isn't indicated by hardware
; 1788 :         pPdd->fakeDsChange = TRUE;

  02198	e59d3008	 ldr         r3, [sp, #8]
  0219c	e2832f5a	 add         r2, r3, #0x5A, 30
  021a0	e3a03001	 mov         r3, #1
  021a4	e5823000	 str         r3, [r2]

; 1789 : 
; 1790 :         rv = ERROR_SUCCESS;

  021a8	e3a03000	 mov         r3, #0
  021ac	e58d3000	 str         r3, [sp]
  021b0		 |$LN1@UfnPdd_Sta@2|

; 1791 :     }
; 1792 :     
; 1793 : 
; 1794 :     DEBUGMSG(ZONE_FUNCTION, (L"UfnPdd_Start() - END\r\n"));

  021b0	e59f306c	 ldr         r3, [pc, #0x6C]
  021b4	e5933440	 ldr         r3, [r3, #0x440]
  021b8	e3130a01	 tst         r3, #1, 20
  021bc	0a00000f	 beq         |$LN15@UfnPdd_Sta@2|
  021c0	e59f305c	 ldr         r3, [pc, #0x5C]
  021c4	e5933440	 ldr         r3, [r3, #0x440]
  021c8	e3130801	 tst         r3, #1, 16
  021cc	0a000004	 beq         |$LN13@UfnPdd_Sta@2|
  021d0	e59f0048	 ldr         r0, [pc, #0x48]
  021d4	eb000000	 bl          CeLogMsg
  021d8	e3a03001	 mov         r3, #1
  021dc	e58d3020	 str         r3, [sp, #0x20]
  021e0	ea000003	 b           |$LN14@UfnPdd_Sta@2|
  021e4		 |$LN13@UfnPdd_Sta@2|
  021e4	e59f0034	 ldr         r0, [pc, #0x34]
  021e8	eb000000	 bl          NKDbgPrintfW
  021ec	e3a03000	 mov         r3, #0
  021f0	e58d3020	 str         r3, [sp, #0x20]
  021f4		 |$LN14@UfnPdd_Sta@2|
  021f4	e3a03001	 mov         r3, #1
  021f8	e58d3024	 str         r3, [sp, #0x24]
  021fc	ea000001	 b           |$LN16@UfnPdd_Sta@2|
  02200		 |$LN15@UfnPdd_Sta@2|
  02200	e3a03000	 mov         r3, #0
  02204	e58d3024	 str         r3, [sp, #0x24]
  02208		 |$LN16@UfnPdd_Sta@2|

; 1795 : 
; 1796 :     // Done
; 1797 :     return rv;

  02208	e59d3000	 ldr         r3, [sp]
  0220c	e58d300c	 str         r3, [sp, #0xC]

; 1798 : }

  02210	e59d000c	 ldr         r0, [sp, #0xC]
  02214	e28dd028	 add         sp, sp, #0x28
  02218	e89d6000	 ldmia       sp, {sp, lr}
  0221c	e12fff1e	 bx          lr
  02220		 |$LN20@UfnPdd_Sta@2|
  02220		 |$LN21@UfnPdd_Sta@2|
  02220	00000000	 DCD         |??_C@_1CO@OMIAKIFI@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAN?$AAD?$AA?$AN?$AA?6?$AA?$AA@|
  02224		 |$LN22@UfnPdd_Sta@2|
  02224	00000000	 DCD         |dpCurSettings|
  02228		 |$LN23@UfnPdd_Sta@2|
  02228	00000000	 DCD         |??_C@_1HE@HOKFIFBB@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAP?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt@|
  0222c		 |$LN24@UfnPdd_Sta@2|
  0222c	00000000	 DCD         |??_C@_1DC@JONBEJL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?$AN?$AA?6?$AA?$AA@|
  02230		 |$M46175|

			 ENDP  ; |UfnPdd_Start|

	EXPORT	|??_C@_1EA@JLEGENCP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAN?$AAD?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@KHMIIHJF@?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAE?$AAP@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JE@MHAMHCBG@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@CDOLBKEA@?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAE?$AAP@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JE@CIDBNHPG@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@EDCKDAJG@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@DONAKKC@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_RegisterDevice|

  000d8			 AREA	 |.pdata|, PDATA
|$T46218| DCD	|$LN55@UfnPdd_Reg|
	DCD	0x40020b04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@JLEGENCP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAN?$AAD?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "R", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "E", 0x0, "N", 0x0, "D", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@KHMIIHJF@?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAE?$AAP@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "F", 0x0, "N", 0x0, ":", 0x0, ":"
	DCB	0x0, " ", 0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d"
	DCB	0x0, "d", 0x0, "_", 0x0, "R", 0x0, "e", 0x0, "g", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "E"
	DCB	0x0, "P", 0x0, "_", 0x0, "T", 0x0, "X", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JE@MHAMHCBG@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "R", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "f", 0x0, "i"
	DCB	0x0, "g", 0x0, "u", 0x0, "r", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "f", 0x0, "a", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "u", 0x0, " ", 0x0, "E", 0x0, "n"
	DCB	0x0, "d", 0x0, "P", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, " ", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "u", 0x0, " "
	DCB	0x0, "(", 0x0, "T", 0x0, "X", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@CDOLBKEA@?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAE?$AAP@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "F", 0x0, "N", 0x0, ":", 0x0, ":"
	DCB	0x0, " ", 0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d"
	DCB	0x0, "d", 0x0, "_", 0x0, "R", 0x0, "e", 0x0, "g", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "E"
	DCB	0x0, "P", 0x0, "_", 0x0, "R", 0x0, "X", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JE@CIDBNHPG@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "R", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "f", 0x0, "i"
	DCB	0x0, "g", 0x0, "u", 0x0, "r", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "f", 0x0, "a", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "u", 0x0, " ", 0x0, "E", 0x0, "n"
	DCB	0x0, "d", 0x0, "P", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, " ", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "u", 0x0, " "
	DCB	0x0, "(", 0x0, "R", 0x0, "X", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@EDCKDAJG@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "R", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "f", 0x0, "i"
	DCB	0x0, "g", 0x0, "u", 0x0, "r", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "E", 0x0, "n", 0x0, "d", 0x0, "P", 0x0, "o"
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "0", 0x0, "0"
	DCB	0x0, " ", 0x0, "(", 0x0, "R", 0x0, "X", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@DONAKKC@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?$AN@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "R", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "R", 0x0, "T"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  02230			 AREA	 |.text|, CODE, ARM

  02230		 |UfnPdd_RegisterDevice| PROC

; 1821 : {

  02230		 |$LN55@UfnPdd_Reg|
  02230	e1a0c00d	 mov         r12, sp
  02234	e92d000f	 stmdb       sp!, {r0 - r3}
  02238	e92d5000	 stmdb       sp!, {r12, lr}
  0223c	e24dd074	 sub         sp, sp, #0x74
  02240		 |$M46215|

; 1822 :     DWORD rc = ERROR_INVALID_PARAMETER;

  02240	e3a03057	 mov         r3, #0x57
  02244	e58d3000	 str         r3, [sp]

; 1823 :     USBFN_PDD *pPdd = pPddContext;

  02248	e59d307c	 ldr         r3, [sp, #0x7C]
  0224c	e58d3020	 str         r3, [sp, #0x20]

; 1824 :     OMAP2420_USBD_REGS *pUSBDRegs = pPdd->pUSBDRegs;

  02250	e59d3020	 ldr         r3, [sp, #0x20]
  02254	e2833024	 add         r3, r3, #0x24
  02258	e5933000	 ldr         r3, [r3]
  0225c	e58d300c	 str         r3, [sp, #0xC]

; 1825 :     UFN_INTERFACE *pIFC;
; 1826 :     UFN_ENDPOINT  *pEP;
; 1827 :     DWORD offset, ep;
; 1828 :     DWORD ifc, epx;
; 1829 :     DWORD cfg;
; 1830 : 
; 1831 : 
; 1832 :     DEBUGMSG(ZONE_FUNCTION, (L"UfnPdd_RegisterDevice() - START\r\n"));

  02260	e59f37d8	 ldr         r3, [pc, #0x7D8]
  02264	e5933440	 ldr         r3, [r3, #0x440]
  02268	e3130a01	 tst         r3, #1, 20
  0226c	0a00000f	 beq         |$LN25@UfnPdd_Reg|
  02270	e59f37c8	 ldr         r3, [pc, #0x7C8]
  02274	e5933440	 ldr         r3, [r3, #0x440]
  02278	e3130801	 tst         r3, #1, 16
  0227c	0a000004	 beq         |$LN23@UfnPdd_Reg|
  02280	e59f07d0	 ldr         r0, [pc, #0x7D0]
  02284	eb000000	 bl          CeLogMsg
  02288	e3a03001	 mov         r3, #1
  0228c	e58d302c	 str         r3, [sp, #0x2C]
  02290	ea000003	 b           |$LN24@UfnPdd_Reg|
  02294		 |$LN23@UfnPdd_Reg|
  02294	e59f07bc	 ldr         r0, [pc, #0x7BC]
  02298	eb000000	 bl          NKDbgPrintfW
  0229c	e3a03000	 mov         r3, #0
  022a0	e58d302c	 str         r3, [sp, #0x2C]
  022a4		 |$LN24@UfnPdd_Reg|
  022a4	e3a03001	 mov         r3, #1
  022a8	e58d3030	 str         r3, [sp, #0x30]
  022ac	ea000001	 b           |$LN26@UfnPdd_Reg|
  022b0		 |$LN25@UfnPdd_Reg|
  022b0	e3a03000	 mov         r3, #0
  022b4	e58d3030	 str         r3, [sp, #0x30]
  022b8		 |$LN26@UfnPdd_Reg|

; 1833 : 
; 1834 :     // Remember self powered flag
; 1835 :     pPdd->selfPowered = ((pFullSpeedConfig->Descriptor.bmAttributes & 0x20) != 0);

  022b8	e59d3090	 ldr         r3, [sp, #0x90]
  022bc	e283300b	 add         r3, r3, #0xB
  022c0	e5d33000	 ldrb        r3, [r3]
  022c4	e3130020	 tst         r3, #0x20
  022c8	0a000002	 beq         |$LN27@UfnPdd_Reg|
  022cc	e3a03001	 mov         r3, #1
  022d0	e58d3034	 str         r3, [sp, #0x34]
  022d4	ea000001	 b           |$LN28@UfnPdd_Reg|
  022d8		 |$LN27@UfnPdd_Reg|
  022d8	e3a03000	 mov         r3, #0
  022dc	e58d3034	 str         r3, [sp, #0x34]
  022e0		 |$LN28@UfnPdd_Reg|
  022e0	e59d3020	 ldr         r3, [sp, #0x20]
  022e4	e2832044	 add         r2, r3, #0x44
  022e8	e59d3034	 ldr         r3, [sp, #0x34]
  022ec	e5823000	 str         r3, [r2]

; 1836 : 
; 1837 :     // Unlock configuration
; 1838 :     CLRREG32(&pUSBDRegs->SYSCON1, USBD_SYSCON1_CFG_LOCK);

  022f0	e59d300c	 ldr         r3, [sp, #0xC]
  022f4	e2833018	 add         r3, r3, #0x18
  022f8	e5932000	 ldr         r2, [r3]
  022fc	e3e03c01	 mvn         r3, #1, 24
  02300	e0022003	 and         r2, r2, r3
  02304	e59d300c	 ldr         r3, [sp, #0xC]
  02308	e2833018	 add         r3, r3, #0x18
  0230c	e5832000	 str         r2, [r3]

; 1839 : 
; 1840 :     DEBUGMSG(ZONE_PDD, (L"UfnPdd_RegisterDevice() - "
; 1841 :         L"Configuring EndPoint 00 (RX)\r\n"));

  02310	e59f3728	 ldr         r3, [pc, #0x728]
  02314	e5933440	 ldr         r3, [r3, #0x440]
  02318	e3130902	 tst         r3, #2, 18
  0231c	0a00000f	 beq         |$LN31@UfnPdd_Reg|
  02320	e59f3718	 ldr         r3, [pc, #0x718]
  02324	e5933440	 ldr         r3, [r3, #0x440]
  02328	e3130801	 tst         r3, #1, 16
  0232c	0a000004	 beq         |$LN29@UfnPdd_Reg|
  02330	e59f071c	 ldr         r0, [pc, #0x71C]
  02334	eb000000	 bl          CeLogMsg
  02338	e3a03001	 mov         r3, #1
  0233c	e58d3038	 str         r3, [sp, #0x38]
  02340	ea000003	 b           |$LN30@UfnPdd_Reg|
  02344		 |$LN29@UfnPdd_Reg|
  02344	e59f0708	 ldr         r0, [pc, #0x708]
  02348	eb000000	 bl          NKDbgPrintfW
  0234c	e3a03000	 mov         r3, #0
  02350	e58d3038	 str         r3, [sp, #0x38]
  02354		 |$LN30@UfnPdd_Reg|
  02354	e3a03001	 mov         r3, #1
  02358	e58d303c	 str         r3, [sp, #0x3C]
  0235c	ea000001	 b           |$LN32@UfnPdd_Reg|
  02360		 |$LN31@UfnPdd_Reg|
  02360	e3a03000	 mov         r3, #0
  02364	e58d303c	 str         r3, [sp, #0x3C]
  02368		 |$LN32@UfnPdd_Reg|

; 1842 : 
; 1843 :     // Configure EP0
; 1844 :     offset = 8;

  02368	e3a03008	 mov         r3, #8
  0236c	e58d3014	 str         r3, [sp, #0x14]

; 1845 :     cfg  = (Log2(pFullSpeedDeviceDesc->bMaxPacketSize0 >> 3) << 12);

  02370	e59d308c	 ldr         r3, [sp, #0x8C]
  02374	e2833007	 add         r3, r3, #7
  02378	e5d33000	 ldrb        r3, [r3]
  0237c	e1a001c3	 mov         r0, r3, asr #3
  02380	eb000000	 bl          Log2
  02384	e58d0040	 str         r0, [sp, #0x40]
  02388	e59d3040	 ldr         r3, [sp, #0x40]
  0238c	e1a03603	 mov         r3, r3, lsl #12
  02390	e58d301c	 str         r3, [sp, #0x1C]

; 1846 :     cfg |= offset >> 3;

  02394	e59d3014	 ldr         r3, [sp, #0x14]
  02398	e1a021a3	 mov         r2, r3, lsr #3
  0239c	e59d301c	 ldr         r3, [sp, #0x1C]
  023a0	e1833002	 orr         r3, r3, r2
  023a4	e58d301c	 str         r3, [sp, #0x1C]

; 1847 : 
; 1848 :     OUTREG32(&pUSBDRegs->EP0, cfg);

  023a8	e59d300c	 ldr         r3, [sp, #0xC]
  023ac	e2832080	 add         r2, r3, #0x80
  023b0	e59d301c	 ldr         r3, [sp, #0x1C]
  023b4	e5823000	 str         r3, [r2]

; 1849 : 
; 1850 :     pPdd->ep[0].maxPacketSize = pFullSpeedDeviceDesc->bMaxPacketSize0;

  023b8	e59d308c	 ldr         r3, [sp, #0x8C]
  023bc	e2831007	 add         r1, r3, #7
  023c0	e59d3020	 ldr         r3, [sp, #0x20]
  023c4	e2832068	 add         r2, r3, #0x68
  023c8	e5d13000	 ldrb        r3, [r1]
  023cc	e1c230b0	 strh        r3, [r2]

; 1851 :     offset += pFullSpeedDeviceDesc->bMaxPacketSize0;

  023d0	e59d308c	 ldr         r3, [sp, #0x8C]
  023d4	e2833007	 add         r3, r3, #7
  023d8	e5d32000	 ldrb        r2, [r3]
  023dc	e59d3014	 ldr         r3, [sp, #0x14]
  023e0	e0833002	 add         r3, r3, r2
  023e4	e58d3014	 str         r3, [sp, #0x14]

; 1852 : 
; 1853 :     // Configure Rx EPs
; 1854 :     for (ifc = 0; ifc < pFullSpeedConfig->Descriptor.bNumInterfaces; ifc++)

  023e8	e3a03000	 mov         r3, #0
  023ec	e58d3024	 str         r3, [sp, #0x24]
  023f0	ea000002	 b           |$LN20@UfnPdd_Reg|
  023f4		 |$LN19@UfnPdd_Reg|
  023f4	e59d3024	 ldr         r3, [sp, #0x24]
  023f8	e2833001	 add         r3, r3, #1
  023fc	e58d3024	 str         r3, [sp, #0x24]
  02400		 |$LN20@UfnPdd_Reg|
  02400	e59d3090	 ldr         r3, [sp, #0x90]
  02404	e2833008	 add         r3, r3, #8
  02408	e5d32000	 ldrb        r2, [r3]
  0240c	e59d3024	 ldr         r3, [sp, #0x24]
  02410	e1530002	 cmp         r3, r2
  02414	2a0000ac	 bcs         |$LN18@UfnPdd_Reg|

; 1855 :     {
; 1856 :         // For each endpoint in interface...
; 1857 :         pIFC = &pFullSpeedConfig->pInterfaces[ifc];

  02418	e59d3090	 ldr         r3, [sp, #0x90]
  0241c	e2830018	 add         r0, r3, #0x18
  02420	e59d1024	 ldr         r1, [sp, #0x24]
  02424	e3a0301c	 mov         r3, #0x1C
  02428	e0020391	 mul         r2, r1, r3
  0242c	e5903000	 ldr         r3, [r0]
  02430	e0833002	 add         r3, r3, r2
  02434	e58d3008	 str         r3, [sp, #8]

; 1858 :         for (epx = 0; epx < pIFC->Descriptor.bNumEndpoints; epx++)

  02438	e3a03000	 mov         r3, #0
  0243c	e58d3004	 str         r3, [sp, #4]
  02440	ea000002	 b           |$LN17@UfnPdd_Reg|
  02444		 |$LN16@UfnPdd_Reg|
  02444	e59d3004	 ldr         r3, [sp, #4]
  02448	e2833001	 add         r3, r3, #1
  0244c	e58d3004	 str         r3, [sp, #4]
  02450		 |$LN17@UfnPdd_Reg|
  02450	e59d3008	 ldr         r3, [sp, #8]
  02454	e2833008	 add         r3, r3, #8
  02458	e5d32000	 ldrb        r2, [r3]
  0245c	e59d3004	 ldr         r3, [sp, #4]
  02460	e1530002	 cmp         r3, r2
  02464	2a000097	 bcs         |$LN15@UfnPdd_Reg|

; 1859 :         {
; 1860 :             pEP = &pIFC->pEndpoints[epx];

  02468	e59d3008	 ldr         r3, [sp, #8]
  0246c	e2830018	 add         r0, r3, #0x18
  02470	e59d1004	 ldr         r1, [sp, #4]
  02474	e3a03014	 mov         r3, #0x14
  02478	e0020391	 mul         r2, r1, r3
  0247c	e5903000	 ldr         r3, [r0]
  02480	e0833002	 add         r3, r3, r2
  02484	e58d3010	 str         r3, [sp, #0x10]

; 1861 : 
; 1862 :             // If it is Tx EP skip it
; 1863 :             if ((pEP->Descriptor.bEndpointAddress & 0x80) != 0)

  02488	e59d3010	 ldr         r3, [sp, #0x10]
  0248c	e2833006	 add         r3, r3, #6
  02490	e5d33000	 ldrb        r3, [r3]
  02494	e3130080	 tst         r3, #0x80
  02498	0a000000	 beq         |$LN14@UfnPdd_Reg|

; 1864 :             {
; 1865 :                 continue;

  0249c	eaffffe8	 b           |$LN16@UfnPdd_Reg|
  024a0		 |$LN14@UfnPdd_Reg|

; 1866 :             }
; 1867 : 
; 1868 :             DEBUGMSG(ZONE_PDD, (L"UfnPdd_RegisterDevice() - "
; 1869 :                 L"Configuring Interface %02u EndPoint %02u (RX)\r\n", ifc, epx));

  024a0	e59f3598	 ldr         r3, [pc, #0x598]
  024a4	e5933440	 ldr         r3, [r3, #0x440]
  024a8	e3130902	 tst         r3, #2, 18
  024ac	0a000013	 beq         |$LN35@UfnPdd_Reg|
  024b0	e59f3588	 ldr         r3, [pc, #0x588]
  024b4	e5933440	 ldr         r3, [r3, #0x440]
  024b8	e3130801	 tst         r3, #1, 16
  024bc	0a000006	 beq         |$LN33@UfnPdd_Reg|
  024c0	e59d2004	 ldr         r2, [sp, #4]
  024c4	e59d1024	 ldr         r1, [sp, #0x24]
  024c8	e59f0580	 ldr         r0, [pc, #0x580]
  024cc	eb000000	 bl          CeLogMsg
  024d0	e3a03001	 mov         r3, #1
  024d4	e58d3044	 str         r3, [sp, #0x44]
  024d8	ea000005	 b           |$LN34@UfnPdd_Reg|
  024dc		 |$LN33@UfnPdd_Reg|
  024dc	e59d2004	 ldr         r2, [sp, #4]
  024e0	e59d1024	 ldr         r1, [sp, #0x24]
  024e4	e59f0564	 ldr         r0, [pc, #0x564]
  024e8	eb000000	 bl          NKDbgPrintfW
  024ec	e3a03000	 mov         r3, #0
  024f0	e58d3044	 str         r3, [sp, #0x44]
  024f4		 |$LN34@UfnPdd_Reg|
  024f4	e3a03001	 mov         r3, #1
  024f8	e58d3048	 str         r3, [sp, #0x48]
  024fc	ea000001	 b           |$LN36@UfnPdd_Reg|
  02500		 |$LN35@UfnPdd_Reg|
  02500	e3a03000	 mov         r3, #0
  02504	e58d3048	 str         r3, [sp, #0x48]
  02508		 |$LN36@UfnPdd_Reg|

; 1870 : 
; 1871 :             // Get EP address
; 1872 :             ep = pEP->Descriptor.bEndpointAddress & 0x0F;

  02508	e59d3010	 ldr         r3, [sp, #0x10]
  0250c	e2833006	 add         r3, r3, #6
  02510	e5d33000	 ldrb        r3, [r3]
  02514	e203300f	 and         r3, r3, #0xF
  02518	e58d3018	 str         r3, [sp, #0x18]

; 1873 : 
; 1874 :             // Save max packet size & direction
; 1875 :             pPdd->ep[ep].maxPacketSize = pEP->Descriptor.wMaxPacketSize;

  0251c	e59d3010	 ldr         r3, [sp, #0x10]
  02520	e2830008	 add         r0, r3, #8
  02524	e59d3020	 ldr         r3, [sp, #0x20]
  02528	e2831068	 add         r1, r3, #0x68
  0252c	e59d2018	 ldr         r2, [sp, #0x18]
  02530	e3a03010	 mov         r3, #0x10
  02534	e0030392	 mul         r3, r2, r3
  02538	e0811003	 add         r1, r1, r3
  0253c	e5d03001	 ldrb        r3, [r0, #1]
  02540	e1a03403	 mov         r3, r3, lsl #8
  02544	e1a02803	 mov         r2, r3, lsl #16
  02548	e1a02822	 mov         r2, r2, lsr #16
  0254c	e5d03000	 ldrb        r3, [r0]
  02550	e1833002	 orr         r3, r3, r2
  02554	e1c130b0	 strh        r3, [r1]

; 1876 :             pPdd->ep[ep].dirRx = TRUE;

  02558	e59d3020	 ldr         r3, [sp, #0x20]
  0255c	e2831068	 add         r1, r3, #0x68
  02560	e59d2018	 ldr         r2, [sp, #0x18]
  02564	e3a03010	 mov         r3, #0x10
  02568	e0030392	 mul         r3, r2, r3
  0256c	e0813003	 add         r3, r1, r3
  02570	e2832004	 add         r2, r3, #4
  02574	e3a03001	 mov         r3, #1
  02578	e5823000	 str         r3, [r2]

; 1877 : 
; 1878 :             // Create EP config
; 1879 :             cfg  = USBD_EP_VALID;

  0257c	e3a03902	 mov         r3, #2, 18
  02580	e58d301c	 str         r3, [sp, #0x1C]

; 1880 :             cfg |= (Log2(pEP->Descriptor.wMaxPacketSize >> 3) << 12);

  02584	e59d3010	 ldr         r3, [sp, #0x10]
  02588	e2831008	 add         r1, r3, #8
  0258c	e5d13001	 ldrb        r3, [r1, #1]
  02590	e1a03403	 mov         r3, r3, lsl #8
  02594	e1a02803	 mov         r2, r3, lsl #16
  02598	e1a02822	 mov         r2, r2, lsr #16
  0259c	e5d13000	 ldrb        r3, [r1]
  025a0	e1833002	 orr         r3, r3, r2
  025a4	e1a001c3	 mov         r0, r3, asr #3
  025a8	eb000000	 bl          Log2
  025ac	e58d004c	 str         r0, [sp, #0x4C]
  025b0	e59d304c	 ldr         r3, [sp, #0x4C]
  025b4	e1a02603	 mov         r2, r3, lsl #12
  025b8	e59d301c	 ldr         r3, [sp, #0x1C]
  025bc	e1833002	 orr         r3, r3, r2
  025c0	e58d301c	 str         r3, [sp, #0x1C]

; 1881 : 
; 1882 :             if ((pEP->Descriptor.bmAttributes & 0x03) == 0x01)

  025c4	e59d3010	 ldr         r3, [sp, #0x10]
  025c8	e2833007	 add         r3, r3, #7
  025cc	e5d33000	 ldrb        r3, [r3]
  025d0	e2033003	 and         r3, r3, #3
  025d4	e3530001	 cmp         r3, #1
  025d8	1a000002	 bne         |$LN13@UfnPdd_Reg|

; 1883 :             {
; 1884 :                 cfg |= USBD_EP_ISO;

  025dc	e59d301c	 ldr         r3, [sp, #0x1C]
  025e0	e3833b02	 orr         r3, r3, #2, 22
  025e4	e58d301c	 str         r3, [sp, #0x1C]
  025e8		 |$LN13@UfnPdd_Reg|

; 1885 :             }
; 1886 : 
; 1887 :             cfg |= offset >> 3;

  025e8	e59d3014	 ldr         r3, [sp, #0x14]
  025ec	e1a021a3	 mov         r2, r3, lsr #3
  025f0	e59d301c	 ldr         r3, [sp, #0x1C]
  025f4	e1833002	 orr         r3, r3, r2
  025f8	e58d301c	 str         r3, [sp, #0x1C]

; 1888 : 
; 1889 :             if (ep > 0)

  025fc	e59d3018	 ldr         r3, [sp, #0x18]
  02600	e3530000	 cmp         r3, #0
  02604	9a000009	 bls         |$LN12@UfnPdd_Reg|

; 1890 :                 OUTREG32(&pUSBDRegs->EP_RX[ep - 1], cfg);

  02608	e59d300c	 ldr         r3, [sp, #0xC]
  0260c	e2831084	 add         r1, r3, #0x84
  02610	e59d3018	 ldr         r3, [sp, #0x18]
  02614	e2432001	 sub         r2, r3, #1
  02618	e3a03004	 mov         r3, #4
  0261c	e0030392	 mul         r3, r2, r3
  02620	e0812003	 add         r2, r1, r3
  02624	e59d301c	 ldr         r3, [sp, #0x1C]
  02628	e5823000	 str         r3, [r2]

; 1891 :             else

  0262c	ea000019	 b           |$LN11@UfnPdd_Reg|
  02630		 |$LN12@UfnPdd_Reg|

; 1892 :                 DEBUGMSG(ZONE_PDD, (L"USBFN:: UfnPdd_RegisterDevice EP_RX = %d\r\n", ep - 1));

  02630	e59f3408	 ldr         r3, [pc, #0x408]
  02634	e5933440	 ldr         r3, [r3, #0x440]
  02638	e3130902	 tst         r3, #2, 18
  0263c	0a000013	 beq         |$LN39@UfnPdd_Reg|
  02640	e59f33f8	 ldr         r3, [pc, #0x3F8]
  02644	e5933440	 ldr         r3, [r3, #0x440]
  02648	e3130801	 tst         r3, #1, 16
  0264c	0a000006	 beq         |$LN37@UfnPdd_Reg|
  02650	e59d3018	 ldr         r3, [sp, #0x18]
  02654	e2431001	 sub         r1, r3, #1
  02658	e59f03ec	 ldr         r0, [pc, #0x3EC]
  0265c	eb000000	 bl          CeLogMsg
  02660	e3a03001	 mov         r3, #1
  02664	e58d3050	 str         r3, [sp, #0x50]
  02668	ea000005	 b           |$LN38@UfnPdd_Reg|
  0266c		 |$LN37@UfnPdd_Reg|
  0266c	e59d3018	 ldr         r3, [sp, #0x18]
  02670	e2431001	 sub         r1, r3, #1
  02674	e59f03d0	 ldr         r0, [pc, #0x3D0]
  02678	eb000000	 bl          NKDbgPrintfW
  0267c	e3a03000	 mov         r3, #0
  02680	e58d3050	 str         r3, [sp, #0x50]
  02684		 |$LN38@UfnPdd_Reg|
  02684	e3a03001	 mov         r3, #1
  02688	e58d3054	 str         r3, [sp, #0x54]
  0268c	ea000001	 b           |$LN40@UfnPdd_Reg|
  02690		 |$LN39@UfnPdd_Reg|
  02690	e3a03000	 mov         r3, #0
  02694	e58d3054	 str         r3, [sp, #0x54]
  02698		 |$LN40@UfnPdd_Reg|
  02698		 |$LN11@UfnPdd_Reg|

; 1893 : 
; 1894 :             // Update offset
; 1895 :             offset += pEP->Descriptor.wMaxPacketSize;

  02698	e59d3010	 ldr         r3, [sp, #0x10]
  0269c	e2831008	 add         r1, r3, #8
  026a0	e5d13001	 ldrb        r3, [r1, #1]
  026a4	e1a03403	 mov         r3, r3, lsl #8
  026a8	e1a02803	 mov         r2, r3, lsl #16
  026ac	e1a02822	 mov         r2, r2, lsr #16
  026b0	e5d13000	 ldrb        r3, [r1]
  026b4	e1832002	 orr         r2, r3, r2
  026b8	e59d3014	 ldr         r3, [sp, #0x14]
  026bc	e0833002	 add         r3, r3, r2
  026c0	e58d3014	 str         r3, [sp, #0x14]

; 1896 :         }

  026c4	eaffff5e	 b           |$LN16@UfnPdd_Reg|
  026c8		 |$LN15@UfnPdd_Reg|

; 1897 :     }

  026c8	eaffff49	 b           |$LN19@UfnPdd_Reg|
  026cc		 |$LN18@UfnPdd_Reg|

; 1898 : 
; 1899 :     // Configure Tx EPs
; 1900 :     for (ifc = 0; ifc < pFullSpeedConfig->Descriptor.bNumInterfaces; ifc++)

  026cc	e3a03000	 mov         r3, #0
  026d0	e58d3024	 str         r3, [sp, #0x24]
  026d4	ea000002	 b           |$LN10@UfnPdd_Reg|
  026d8		 |$LN9@UfnPdd_Reg|
  026d8	e59d3024	 ldr         r3, [sp, #0x24]
  026dc	e2833001	 add         r3, r3, #1
  026e0	e58d3024	 str         r3, [sp, #0x24]
  026e4		 |$LN10@UfnPdd_Reg|
  026e4	e59d3090	 ldr         r3, [sp, #0x90]
  026e8	e2833008	 add         r3, r3, #8
  026ec	e5d32000	 ldrb        r2, [r3]
  026f0	e59d3024	 ldr         r3, [sp, #0x24]
  026f4	e1530002	 cmp         r3, r2
  026f8	2a0000ac	 bcs         |$LN8@UfnPdd_Reg|

; 1901 :     {
; 1902 :         // For each endpoint in interface
; 1903 :         pIFC = &pFullSpeedConfig->pInterfaces[ifc];

  026fc	e59d3090	 ldr         r3, [sp, #0x90]
  02700	e2830018	 add         r0, r3, #0x18
  02704	e59d1024	 ldr         r1, [sp, #0x24]
  02708	e3a0301c	 mov         r3, #0x1C
  0270c	e0020391	 mul         r2, r1, r3
  02710	e5903000	 ldr         r3, [r0]
  02714	e0833002	 add         r3, r3, r2
  02718	e58d3008	 str         r3, [sp, #8]

; 1904 :         for (epx = 0; epx < pIFC->Descriptor.bNumEndpoints; epx++)

  0271c	e3a03000	 mov         r3, #0
  02720	e58d3004	 str         r3, [sp, #4]
  02724	ea000002	 b           |$LN7@UfnPdd_Reg|
  02728		 |$LN6@UfnPdd_Reg|
  02728	e59d3004	 ldr         r3, [sp, #4]
  0272c	e2833001	 add         r3, r3, #1
  02730	e58d3004	 str         r3, [sp, #4]
  02734		 |$LN7@UfnPdd_Reg|
  02734	e59d3008	 ldr         r3, [sp, #8]
  02738	e2833008	 add         r3, r3, #8
  0273c	e5d32000	 ldrb        r2, [r3]
  02740	e59d3004	 ldr         r3, [sp, #4]
  02744	e1530002	 cmp         r3, r2
  02748	2a000097	 bcs         |$LN5@UfnPdd_Reg|

; 1905 :         {
; 1906 :             pEP = &pIFC->pEndpoints[epx];

  0274c	e59d3008	 ldr         r3, [sp, #8]
  02750	e2830018	 add         r0, r3, #0x18
  02754	e59d1004	 ldr         r1, [sp, #4]
  02758	e3a03014	 mov         r3, #0x14
  0275c	e0020391	 mul         r2, r1, r3
  02760	e5903000	 ldr         r3, [r0]
  02764	e0833002	 add         r3, r3, r2
  02768	e58d3010	 str         r3, [sp, #0x10]

; 1907 : 
; 1908 :             // If it is Rx EP skip it
; 1909 :             if ((pEP->Descriptor.bEndpointAddress & 0x80) == 0)

  0276c	e59d3010	 ldr         r3, [sp, #0x10]
  02770	e2833006	 add         r3, r3, #6
  02774	e5d33000	 ldrb        r3, [r3]
  02778	e3130080	 tst         r3, #0x80
  0277c	1a000000	 bne         |$LN4@UfnPdd_Reg|

; 1910 :             {
; 1911 :                 continue;

  02780	eaffffe8	 b           |$LN6@UfnPdd_Reg|
  02784		 |$LN4@UfnPdd_Reg|

; 1912 :             }
; 1913 : 
; 1914 :             DEBUGMSG(ZONE_PDD, (L"UfnPdd_RegisterDevice() - "
; 1915 :                 L"Configuring Interface %02u EndPoint %02u (TX)\r\n", ifc, epx));

  02784	e59f32b4	 ldr         r3, [pc, #0x2B4]
  02788	e5933440	 ldr         r3, [r3, #0x440]
  0278c	e3130902	 tst         r3, #2, 18
  02790	0a000013	 beq         |$LN43@UfnPdd_Reg|
  02794	e59f32a4	 ldr         r3, [pc, #0x2A4]
  02798	e5933440	 ldr         r3, [r3, #0x440]
  0279c	e3130801	 tst         r3, #1, 16
  027a0	0a000006	 beq         |$LN41@UfnPdd_Reg|
  027a4	e59d2004	 ldr         r2, [sp, #4]
  027a8	e59d1024	 ldr         r1, [sp, #0x24]
  027ac	e59f0294	 ldr         r0, [pc, #0x294]
  027b0	eb000000	 bl          CeLogMsg
  027b4	e3a03001	 mov         r3, #1
  027b8	e58d3058	 str         r3, [sp, #0x58]
  027bc	ea000005	 b           |$LN42@UfnPdd_Reg|
  027c0		 |$LN41@UfnPdd_Reg|
  027c0	e59d2004	 ldr         r2, [sp, #4]
  027c4	e59d1024	 ldr         r1, [sp, #0x24]
  027c8	e59f0278	 ldr         r0, [pc, #0x278]
  027cc	eb000000	 bl          NKDbgPrintfW
  027d0	e3a03000	 mov         r3, #0
  027d4	e58d3058	 str         r3, [sp, #0x58]
  027d8		 |$LN42@UfnPdd_Reg|
  027d8	e3a03001	 mov         r3, #1
  027dc	e58d305c	 str         r3, [sp, #0x5C]
  027e0	ea000001	 b           |$LN44@UfnPdd_Reg|
  027e4		 |$LN43@UfnPdd_Reg|
  027e4	e3a03000	 mov         r3, #0
  027e8	e58d305c	 str         r3, [sp, #0x5C]
  027ec		 |$LN44@UfnPdd_Reg|

; 1916 : 
; 1917 :             // Get EP address
; 1918 :             ep = pEP->Descriptor.bEndpointAddress & 0x0F;

  027ec	e59d3010	 ldr         r3, [sp, #0x10]
  027f0	e2833006	 add         r3, r3, #6
  027f4	e5d33000	 ldrb        r3, [r3]
  027f8	e203300f	 and         r3, r3, #0xF
  027fc	e58d3018	 str         r3, [sp, #0x18]

; 1919 : 
; 1920 :             // Save max packet size & direction
; 1921 :             pPdd->ep[ep].maxPacketSize = pEP->Descriptor.wMaxPacketSize;

  02800	e59d3010	 ldr         r3, [sp, #0x10]
  02804	e2830008	 add         r0, r3, #8
  02808	e59d3020	 ldr         r3, [sp, #0x20]
  0280c	e2831068	 add         r1, r3, #0x68
  02810	e59d2018	 ldr         r2, [sp, #0x18]
  02814	e3a03010	 mov         r3, #0x10
  02818	e0030392	 mul         r3, r2, r3
  0281c	e0811003	 add         r1, r1, r3
  02820	e5d03001	 ldrb        r3, [r0, #1]
  02824	e1a03403	 mov         r3, r3, lsl #8
  02828	e1a02803	 mov         r2, r3, lsl #16
  0282c	e1a02822	 mov         r2, r2, lsr #16
  02830	e5d03000	 ldrb        r3, [r0]
  02834	e1833002	 orr         r3, r3, r2
  02838	e1c130b0	 strh        r3, [r1]

; 1922 :             pPdd->ep[ep].dirRx = FALSE;

  0283c	e59d3020	 ldr         r3, [sp, #0x20]
  02840	e2831068	 add         r1, r3, #0x68
  02844	e59d2018	 ldr         r2, [sp, #0x18]
  02848	e3a03010	 mov         r3, #0x10
  0284c	e0030392	 mul         r3, r2, r3
  02850	e0813003	 add         r3, r1, r3
  02854	e2832004	 add         r2, r3, #4
  02858	e3a03000	 mov         r3, #0
  0285c	e5823000	 str         r3, [r2]

; 1923 : 
; 1924 :             // Create EP config
; 1925 :             cfg  = USBD_EP_VALID;

  02860	e3a03902	 mov         r3, #2, 18
  02864	e58d301c	 str         r3, [sp, #0x1C]

; 1926 : 
; 1927 :             cfg |= (Log2(pEP->Descriptor.wMaxPacketSize >> 3) << 12);

  02868	e59d3010	 ldr         r3, [sp, #0x10]
  0286c	e2831008	 add         r1, r3, #8
  02870	e5d13001	 ldrb        r3, [r1, #1]
  02874	e1a03403	 mov         r3, r3, lsl #8
  02878	e1a02803	 mov         r2, r3, lsl #16
  0287c	e1a02822	 mov         r2, r2, lsr #16
  02880	e5d13000	 ldrb        r3, [r1]
  02884	e1833002	 orr         r3, r3, r2
  02888	e1a001c3	 mov         r0, r3, asr #3
  0288c	eb000000	 bl          Log2
  02890	e58d0060	 str         r0, [sp, #0x60]
  02894	e59d3060	 ldr         r3, [sp, #0x60]
  02898	e1a02603	 mov         r2, r3, lsl #12
  0289c	e59d301c	 ldr         r3, [sp, #0x1C]
  028a0	e1833002	 orr         r3, r3, r2
  028a4	e58d301c	 str         r3, [sp, #0x1C]

; 1928 : 
; 1929 :             if ((pEP->Descriptor.bmAttributes & 0x03) == 0x01)

  028a8	e59d3010	 ldr         r3, [sp, #0x10]
  028ac	e2833007	 add         r3, r3, #7
  028b0	e5d33000	 ldrb        r3, [r3]
  028b4	e2033003	 and         r3, r3, #3
  028b8	e3530001	 cmp         r3, #1
  028bc	1a000002	 bne         |$LN3@UfnPdd_Reg|

; 1930 :             {
; 1931 :                 cfg |= USBD_EP_ISO;

  028c0	e59d301c	 ldr         r3, [sp, #0x1C]
  028c4	e3833b02	 orr         r3, r3, #2, 22
  028c8	e58d301c	 str         r3, [sp, #0x1C]
  028cc		 |$LN3@UfnPdd_Reg|

; 1932 :             }
; 1933 : 
; 1934 :             cfg |= offset >> 3;

  028cc	e59d3014	 ldr         r3, [sp, #0x14]
  028d0	e1a021a3	 mov         r2, r3, lsr #3
  028d4	e59d301c	 ldr         r3, [sp, #0x1C]
  028d8	e1833002	 orr         r3, r3, r2
  028dc	e58d301c	 str         r3, [sp, #0x1C]

; 1935 : 
; 1936 :             if (ep > 0)

  028e0	e59d3018	 ldr         r3, [sp, #0x18]
  028e4	e3530000	 cmp         r3, #0
  028e8	9a000009	 bls         |$LN2@UfnPdd_Reg|

; 1937 :                 OUTREG32(&pUSBDRegs->EP_TX[ep - 1], cfg);

  028ec	e59d300c	 ldr         r3, [sp, #0xC]
  028f0	e28310c4	 add         r1, r3, #0xC4
  028f4	e59d3018	 ldr         r3, [sp, #0x18]
  028f8	e2432001	 sub         r2, r3, #1
  028fc	e3a03004	 mov         r3, #4
  02900	e0030392	 mul         r3, r2, r3
  02904	e0812003	 add         r2, r1, r3
  02908	e59d301c	 ldr         r3, [sp, #0x1C]
  0290c	e5823000	 str         r3, [r2]

; 1938 :             else

  02910	ea000019	 b           |$LN1@UfnPdd_Reg|
  02914		 |$LN2@UfnPdd_Reg|

; 1939 :                 DEBUGMSG(ZONE_PDD, (L"USBFN:: UfnPdd_RegisterDevice "
; 1940 :                     L"EP_TX = %d\r\n", ep - 1));

  02914	e59f3124	 ldr         r3, [pc, #0x124]
  02918	e5933440	 ldr         r3, [r3, #0x440]
  0291c	e3130902	 tst         r3, #2, 18
  02920	0a000013	 beq         |$LN47@UfnPdd_Reg|
  02924	e59f3114	 ldr         r3, [pc, #0x114]
  02928	e5933440	 ldr         r3, [r3, #0x440]
  0292c	e3130801	 tst         r3, #1, 16
  02930	0a000006	 beq         |$LN45@UfnPdd_Reg|
  02934	e59d3018	 ldr         r3, [sp, #0x18]
  02938	e2431001	 sub         r1, r3, #1
  0293c	e59f0100	 ldr         r0, [pc, #0x100]
  02940	eb000000	 bl          CeLogMsg
  02944	e3a03001	 mov         r3, #1
  02948	e58d3064	 str         r3, [sp, #0x64]
  0294c	ea000005	 b           |$LN46@UfnPdd_Reg|
  02950		 |$LN45@UfnPdd_Reg|
  02950	e59d3018	 ldr         r3, [sp, #0x18]
  02954	e2431001	 sub         r1, r3, #1
  02958	e59f00e4	 ldr         r0, [pc, #0xE4]
  0295c	eb000000	 bl          NKDbgPrintfW
  02960	e3a03000	 mov         r3, #0
  02964	e58d3064	 str         r3, [sp, #0x64]
  02968		 |$LN46@UfnPdd_Reg|
  02968	e3a03001	 mov         r3, #1
  0296c	e58d3068	 str         r3, [sp, #0x68]
  02970	ea000001	 b           |$LN48@UfnPdd_Reg|
  02974		 |$LN47@UfnPdd_Reg|
  02974	e3a03000	 mov         r3, #0
  02978	e58d3068	 str         r3, [sp, #0x68]
  0297c		 |$LN48@UfnPdd_Reg|
  0297c		 |$LN1@UfnPdd_Reg|

; 1941 : 
; 1942 : 
; 1943 :             // Update offset
; 1944 :             offset += pEP->Descriptor.wMaxPacketSize;

  0297c	e59d3010	 ldr         r3, [sp, #0x10]
  02980	e2831008	 add         r1, r3, #8
  02984	e5d13001	 ldrb        r3, [r1, #1]
  02988	e1a03403	 mov         r3, r3, lsl #8
  0298c	e1a02803	 mov         r2, r3, lsl #16
  02990	e1a02822	 mov         r2, r2, lsr #16
  02994	e5d13000	 ldrb        r3, [r1]
  02998	e1832002	 orr         r2, r3, r2
  0299c	e59d3014	 ldr         r3, [sp, #0x14]
  029a0	e0833002	 add         r3, r3, r2
  029a4	e58d3014	 str         r3, [sp, #0x14]

; 1945 :         }

  029a8	eaffff5e	 b           |$LN6@UfnPdd_Reg|
  029ac		 |$LN5@UfnPdd_Reg|

; 1946 :     }

  029ac	eaffff49	 b           |$LN9@UfnPdd_Reg|
  029b0		 |$LN8@UfnPdd_Reg|

; 1947 : 
; 1948 :     // Lock configuration
; 1949 :     SETREG32(&pUSBDRegs->SYSCON1, USBD_SYSCON1_CFG_LOCK);

  029b0	e59d300c	 ldr         r3, [sp, #0xC]
  029b4	e2833018	 add         r3, r3, #0x18
  029b8	e5933000	 ldr         r3, [r3]
  029bc	e3832c01	 orr         r2, r3, #1, 24
  029c0	e59d300c	 ldr         r3, [sp, #0xC]
  029c4	e2833018	 add         r3, r3, #0x18
  029c8	e5832000	 str         r2, [r3]

; 1950 : 
; 1951 :     DEBUGMSG(ZONE_PDD, (L"UfnPdd_RegisterDevice() - END\r\n"));

  029cc	e59f306c	 ldr         r3, [pc, #0x6C]
  029d0	e5933440	 ldr         r3, [r3, #0x440]
  029d4	e3130902	 tst         r3, #2, 18
  029d8	0a00000f	 beq         |$LN51@UfnPdd_Reg|
  029dc	e59f305c	 ldr         r3, [pc, #0x5C]
  029e0	e5933440	 ldr         r3, [r3, #0x440]
  029e4	e3130801	 tst         r3, #1, 16
  029e8	0a000004	 beq         |$LN49@UfnPdd_Reg|
  029ec	e59f0048	 ldr         r0, [pc, #0x48]
  029f0	eb000000	 bl          CeLogMsg
  029f4	e3a03001	 mov         r3, #1
  029f8	e58d306c	 str         r3, [sp, #0x6C]
  029fc	ea000003	 b           |$LN50@UfnPdd_Reg|
  02a00		 |$LN49@UfnPdd_Reg|
  02a00	e59f0034	 ldr         r0, [pc, #0x34]
  02a04	eb000000	 bl          NKDbgPrintfW
  02a08	e3a03000	 mov         r3, #0
  02a0c	e58d306c	 str         r3, [sp, #0x6C]
  02a10		 |$LN50@UfnPdd_Reg|
  02a10	e3a03001	 mov         r3, #1
  02a14	e58d3070	 str         r3, [sp, #0x70]
  02a18	ea000001	 b           |$LN52@UfnPdd_Reg|
  02a1c		 |$LN51@UfnPdd_Reg|
  02a1c	e3a03000	 mov         r3, #0
  02a20	e58d3070	 str         r3, [sp, #0x70]
  02a24		 |$LN52@UfnPdd_Reg|

; 1952 : 
; 1953 :     // Done
; 1954 :     return ERROR_SUCCESS;

  02a24	e3a03000	 mov         r3, #0
  02a28	e58d3028	 str         r3, [sp, #0x28]

; 1955 : }

  02a2c	e59d0028	 ldr         r0, [sp, #0x28]
  02a30	e28dd074	 add         sp, sp, #0x74
  02a34	e89d6000	 ldmia       sp, {sp, lr}
  02a38	e12fff1e	 bx          lr
  02a3c		 |$LN56@UfnPdd_Reg|
  02a3c		 |$LN57@UfnPdd_Reg|
  02a3c	00000000	 DCD         |??_C@_1EA@JLEGENCP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAN?$AAD?$AA?$AN?$AA?6?$AA?$AA@|
  02a40		 |$LN58@UfnPdd_Reg|
  02a40	00000000	 DCD         |dpCurSettings|
  02a44		 |$LN59@UfnPdd_Reg|
  02a44	00000000	 DCD         |??_C@_1FG@KHMIIHJF@?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAE?$AAP@|
  02a48		 |$LN60@UfnPdd_Reg|
  02a48	00000000	 DCD         |??_C@_1JE@MHAMHCBG@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg@|
  02a4c		 |$LN61@UfnPdd_Reg|
  02a4c	00000000	 DCD         |??_C@_1FG@CDOLBKEA@?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAE?$AAP@|
  02a50		 |$LN62@UfnPdd_Reg|
  02a50	00000000	 DCD         |??_C@_1JE@CIDBNHPG@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg@|
  02a54		 |$LN63@UfnPdd_Reg|
  02a54	00000000	 DCD         |??_C@_1HC@EDCKDAJG@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg@|
  02a58		 |$LN64@UfnPdd_Reg|
  02a58	00000000	 DCD         |??_C@_1EE@DONAKKC@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?$AN@|
  02a5c		 |$M46216|

			 ENDP  ; |UfnPdd_RegisterDevice|


  000e0			 AREA	 |.pdata|, PDATA
|$T46233| DCD	|$LN8@Log2|
	DCD	0x40001c04
; Function compile flags: /Odtp

  02a5c			 AREA	 |.text|, CODE, ARM

  02a5c		 |Log2|	 PROC

; 160  : {

  02a5c		 |$LN8@Log2|
  02a5c	e1a0c00d	 mov         r12, sp
  02a60	e92d0001	 stmdb       sp!, {r0}
  02a64	e92d5000	 stmdb       sp!, {r12, lr}
  02a68	e24dd008	 sub         sp, sp, #8
  02a6c		 |$M46230|

; 161  :     DWORD rc = 0;

  02a6c	e3a03000	 mov         r3, #0
  02a70	e58d3000	 str         r3, [sp]
  02a74		 |$LN3@Log2|

; 162  : 
; 163  :     while (value != 0)

  02a74	e59d3010	 ldr         r3, [sp, #0x10]
  02a78	e3530000	 cmp         r3, #0
  02a7c	0a000006	 beq         |$LN2@Log2|

; 164  :     {
; 165  :         value >>= 1;

  02a80	e59d3010	 ldr         r3, [sp, #0x10]
  02a84	e1a030a3	 mov         r3, r3, lsr #1
  02a88	e58d3010	 str         r3, [sp, #0x10]

; 166  :         rc++;

  02a8c	e59d3000	 ldr         r3, [sp]
  02a90	e2833001	 add         r3, r3, #1
  02a94	e58d3000	 str         r3, [sp]

; 167  :     }

  02a98	eafffff5	 b           |$LN3@Log2|
  02a9c		 |$LN2@Log2|

; 168  : 
; 169  :     if (rc > 0)

  02a9c	e59d3000	 ldr         r3, [sp]
  02aa0	e3530000	 cmp         r3, #0
  02aa4	9a000002	 bls         |$LN1@Log2|

; 170  :     {
; 171  :         rc--;

  02aa8	e59d3000	 ldr         r3, [sp]
  02aac	e2433001	 sub         r3, r3, #1
  02ab0	e58d3000	 str         r3, [sp]
  02ab4		 |$LN1@Log2|

; 172  :     }
; 173  : 
; 174  :     return rc;

  02ab4	e59d3000	 ldr         r3, [sp]
  02ab8	e58d3004	 str         r3, [sp, #4]

; 175  : }

  02abc	e59d0004	 ldr         r0, [sp, #4]
  02ac0	e28dd008	 add         sp, sp, #8
  02ac4	e89d6000	 ldmia       sp, {sp, lr}
  02ac8	e12fff1e	 bx          lr
  02acc		 |$M46231|

			 ENDP  ; |Log2|

	EXPORT	|UfnPdd_IsEndpointSupportable|

  000e8			 AREA	 |.pdata|, PDATA
|$T46243| DCD	|$LN10@UfnPdd_IsE@2|
	DCD	0x40003f04
; Function compile flags: /Odtp

  02acc			 AREA	 |.text|, CODE, ARM

  02acc		 |UfnPdd_IsEndpointSupportable| PROC

; 1975 : {

  02acc		 |$LN10@UfnPdd_IsE@2|
  02acc	e1a0c00d	 mov         r12, sp
  02ad0	e92d000f	 stmdb       sp!, {r0 - r3}
  02ad4	e92d5000	 stmdb       sp!, {r12, lr}
  02ad8	e24dd010	 sub         sp, sp, #0x10
  02adc		 |$M46240|

; 1976 :     USBFN_PDD *pPdd = pPddContext;

  02adc	e59d3018	 ldr         r3, [sp, #0x18]
  02ae0	e58d3000	 str         r3, [sp]

; 1977 : 
; 1978 : 
; 1979 :     // Update maximal packet size for EP0
; 1980 :     if (endPoint == 0)

  02ae4	e59d301c	 ldr         r3, [sp, #0x1C]
  02ae8	e3530000	 cmp         r3, #0
  02aec	1a00002c	 bne         |$LN1@UfnPdd_IsE@2|

; 1981 :     {
; 1982 :         DEBUGCHK(pEPDesc->wMaxPacketSize <= 64);

  02af0	e59d3024	 ldr         r3, [sp, #0x24]
  02af4	e2831004	 add         r1, r3, #4
  02af8	e5d13001	 ldrb        r3, [r1, #1]
  02afc	e1a03403	 mov         r3, r3, lsl #8
  02b00	e1a02803	 mov         r2, r3, lsl #16
  02b04	e1a02822	 mov         r2, r2, lsr #16
  02b08	e5d13000	 ldrb        r3, [r1]
  02b0c	e1833002	 orr         r3, r3, r2
  02b10	e3530040	 cmp         r3, #0x40
  02b14	ca000002	 bgt         |$LN4@UfnPdd_IsE@2|
  02b18	e3a03001	 mov         r3, #1
  02b1c	e58d3008	 str         r3, [sp, #8]
  02b20	ea000008	 b           |$LN5@UfnPdd_IsE@2|
  02b24		 |$LN4@UfnPdd_IsE@2|
  02b24	e3a03c07	 mov         r3, #7, 24
  02b28	e38330be	 orr         r3, r3, #0xBE
  02b2c	e59f2090	 ldr         r2, [pc, #0x90]
  02b30	e59f1088	 ldr         r1, [pc, #0x88]
  02b34	e59f0080	 ldr         r0, [pc, #0x80]
  02b38	eb000000	 bl          NKDbgPrintfW
  02b3c	e6000010	 __debugbreak_ce
  02b40	e3a03000	 mov         r3, #0
  02b44	e58d3008	 str         r3, [sp, #8]
  02b48		 |$LN5@UfnPdd_IsE@2|

; 1983 :         DEBUGCHK(pEPDesc->bmAttributes == USB_ENDPOINT_TYPE_CONTROL);

  02b48	e59d3024	 ldr         r3, [sp, #0x24]
  02b4c	e2833003	 add         r3, r3, #3
  02b50	e5d33000	 ldrb        r3, [r3]
  02b54	e3530000	 cmp         r3, #0
  02b58	1a000002	 bne         |$LN6@UfnPdd_IsE@2|
  02b5c	e3a03001	 mov         r3, #1
  02b60	e58d300c	 str         r3, [sp, #0xC]
  02b64	ea000008	 b           |$LN7@UfnPdd_IsE@2|
  02b68		 |$LN6@UfnPdd_IsE@2|
  02b68	e3a03c07	 mov         r3, #7, 24
  02b6c	e38330bf	 orr         r3, r3, #0xBF
  02b70	e59f204c	 ldr         r2, [pc, #0x4C]
  02b74	e59f1044	 ldr         r1, [pc, #0x44]
  02b78	e59f003c	 ldr         r0, [pc, #0x3C]
  02b7c	eb000000	 bl          NKDbgPrintfW
  02b80	e6000010	 __debugbreak_ce
  02b84	e3a03000	 mov         r3, #0
  02b88	e58d300c	 str         r3, [sp, #0xC]
  02b8c		 |$LN7@UfnPdd_IsE@2|

; 1984 :         pEPDesc->wMaxPacketSize = 64;

  02b8c	e59d3024	 ldr         r3, [sp, #0x24]
  02b90	e2832004	 add         r2, r3, #4
  02b94	e3a03040	 mov         r3, #0x40
  02b98	e5c23000	 strb        r3, [r2]
  02b9c	e1a03423	 mov         r3, r3, lsr #8
  02ba0	e5c23001	 strb        r3, [r2, #1]
  02ba4		 |$LN1@UfnPdd_IsE@2|

; 1985 :     }
; 1986 : 
; 1987 :     // Done
; 1988 :     return ERROR_SUCCESS;

  02ba4	e3a03000	 mov         r3, #0
  02ba8	e58d3004	 str         r3, [sp, #4]

; 1989 : }

  02bac	e59d0004	 ldr         r0, [sp, #4]
  02bb0	e28dd010	 add         sp, sp, #0x10
  02bb4	e89d6000	 ldmia       sp, {sp, lr}
  02bb8	e12fff1e	 bx          lr
  02bbc		 |$LN11@UfnPdd_IsE@2|
  02bbc		 |$LN12@UfnPdd_IsE@2|
  02bbc	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  02bc0		 |$LN13@UfnPdd_IsE@2|
  02bc0	00000000	 DCD         |dpCurSettings|
  02bc4		 |$LN14@UfnPdd_IsE@2|
  02bc4	00000000	 DCD         |??_C@_1II@NDCMBDLM@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  02bc8		 |$M46241|

			 ENDP  ; |UfnPdd_IsEndpointSupportable|

	EXPORT	|UfnPdd_IsConfigurationSupportable|

  000f0			 AREA	 |.pdata|, PDATA
|$T46253| DCD	|$LN16@UfnPdd_IsC|
	DCD	0x40007804
; Function compile flags: /Odtp

  02bc8			 AREA	 |.text|, CODE, ARM

  02bc8		 |UfnPdd_IsConfigurationSupportable| PROC

; 2007 : {

  02bc8		 |$LN16@UfnPdd_IsC|
  02bc8	e1a0c00d	 mov         r12, sp
  02bcc	e92d0007	 stmdb       sp!, {r0 - r2}
  02bd0	e92d5000	 stmdb       sp!, {r12, lr}
  02bd4	e24dd02c	 sub         sp, sp, #0x2C
  02bd8		 |$M46250|

; 2008 :     DWORD rc = ERROR_INVALID_PARAMETER;

  02bd8	e3a03057	 mov         r3, #0x57
  02bdc	e58d3004	 str         r3, [sp, #4]

; 2009 :     USBFN_PDD *pPdd = pPddContext;

  02be0	e59d3034	 ldr         r3, [sp, #0x34]
  02be4	e58d301c	 str         r3, [sp, #0x1C]

; 2010 :     UFN_INTERFACE *pIFC;
; 2011 :     UFN_ENDPOINT *pEP;
; 2012 :     DWORD ifc, epx, count;
; 2013 :     DWORD offset, size;
; 2014 : 
; 2015 : 
; 2016 :     // TODO: Update self power bit & maxPower
; 2017 : 
; 2018 :     // We must start with offset 8 + 64 (config plus EP0 size)
; 2019 :     offset = 8 + 64;

  02be8	e3a03048	 mov         r3, #0x48
  02bec	e58d3018	 str         r3, [sp, #0x18]

; 2020 : 
; 2021 :     // Clear number of end points
; 2022 :     count = 0;

  02bf0	e3a03000	 mov         r3, #0
  02bf4	e58d3000	 str         r3, [sp]

; 2023 : 
; 2024 :     // For each interface in configuration
; 2025 :     for (ifc = 0; ifc < pConfig->Descriptor.bNumInterfaces; ifc++)

  02bf8	e3a03000	 mov         r3, #0
  02bfc	e58d3020	 str         r3, [sp, #0x20]
  02c00	ea000002	 b           |$LN11@UfnPdd_IsC|
  02c04		 |$LN10@UfnPdd_IsC|
  02c04	e59d3020	 ldr         r3, [sp, #0x20]
  02c08	e2833001	 add         r3, r3, #1
  02c0c	e58d3020	 str         r3, [sp, #0x20]
  02c10		 |$LN11@UfnPdd_IsC|
  02c10	e59d303c	 ldr         r3, [sp, #0x3C]
  02c14	e2833008	 add         r3, r3, #8
  02c18	e5d32000	 ldrb        r2, [r3]
  02c1c	e59d3020	 ldr         r3, [sp, #0x20]
  02c20	e1530002	 cmp         r3, r2
  02c24	2a000051	 bcs         |$LN9@UfnPdd_IsC|

; 2026 :     {
; 2027 :         // For each endpoint in interface
; 2028 :         pIFC = &pConfig->pInterfaces[ifc];

  02c28	e59d303c	 ldr         r3, [sp, #0x3C]
  02c2c	e2830018	 add         r0, r3, #0x18
  02c30	e59d1020	 ldr         r1, [sp, #0x20]
  02c34	e3a0301c	 mov         r3, #0x1C
  02c38	e0020391	 mul         r2, r1, r3
  02c3c	e5903000	 ldr         r3, [r0]
  02c40	e0833002	 add         r3, r3, r2
  02c44	e58d300c	 str         r3, [sp, #0xC]

; 2029 : 
; 2030 :         for (epx = 0; epx < pIFC->Descriptor.bNumEndpoints; epx++)

  02c48	e3a03000	 mov         r3, #0
  02c4c	e58d3008	 str         r3, [sp, #8]
  02c50	ea000002	 b           |$LN8@UfnPdd_IsC|
  02c54		 |$LN7@UfnPdd_IsC|
  02c54	e59d3008	 ldr         r3, [sp, #8]
  02c58	e2833001	 add         r3, r3, #1
  02c5c	e58d3008	 str         r3, [sp, #8]
  02c60		 |$LN8@UfnPdd_IsC|
  02c60	e59d300c	 ldr         r3, [sp, #0xC]
  02c64	e2833008	 add         r3, r3, #8
  02c68	e5d32000	 ldrb        r2, [r3]
  02c6c	e59d3008	 ldr         r3, [sp, #8]
  02c70	e1530002	 cmp         r3, r2
  02c74	2a000036	 bcs         |$LN6@UfnPdd_IsC|

; 2031 :         {
; 2032 :             pEP = &pIFC->pEndpoints[epx];

  02c78	e59d300c	 ldr         r3, [sp, #0xC]
  02c7c	e2830018	 add         r0, r3, #0x18
  02c80	e59d1008	 ldr         r1, [sp, #8]
  02c84	e3a03014	 mov         r3, #0x14
  02c88	e0020391	 mul         r2, r1, r3
  02c8c	e5903000	 ldr         r3, [r0]
  02c90	e0833002	 add         r3, r3, r2
  02c94	e58d3010	 str         r3, [sp, #0x10]

; 2033 : 
; 2034 :             // We support maximal sizes 8, 16, 32 and 64 bytes for non-ISO
; 2035 :             size = pEP->Descriptor.wMaxPacketSize;

  02c98	e59d3010	 ldr         r3, [sp, #0x10]
  02c9c	e2831008	 add         r1, r3, #8
  02ca0	e5d13001	 ldrb        r3, [r1, #1]
  02ca4	e1a03403	 mov         r3, r3, lsl #8
  02ca8	e1a02803	 mov         r2, r3, lsl #16
  02cac	e1a02822	 mov         r2, r2, lsr #16
  02cb0	e5d13000	 ldrb        r3, [r1]
  02cb4	e1833002	 orr         r3, r3, r2
  02cb8	e58d3014	 str         r3, [sp, #0x14]

; 2036 : 
; 2037 :             // First round size to supported sizes
; 2038 :             size = 1 << Log2(size);

  02cbc	e59d0014	 ldr         r0, [sp, #0x14]
  02cc0	eb000000	 bl          Log2
  02cc4	e58d0028	 str         r0, [sp, #0x28]
  02cc8	e59d2028	 ldr         r2, [sp, #0x28]
  02ccc	e3a03001	 mov         r3, #1
  02cd0	e1a03213	 mov         r3, r3, lsl r2
  02cd4	e58d3014	 str         r3, [sp, #0x14]

; 2039 : 
; 2040 :             // Is it ISO end point?
; 2041 :             if ((pEP->Descriptor.bmAttributes & 0x03) != 0x01)

  02cd8	e59d3010	 ldr         r3, [sp, #0x10]
  02cdc	e2833007	 add         r3, r3, #7
  02ce0	e5d33000	 ldrb        r3, [r3]
  02ce4	e2033003	 and         r3, r3, #3
  02ce8	e3530001	 cmp         r3, #1
  02cec	0a000005	 beq         |$LN5@UfnPdd_IsC|

; 2042 :             {
; 2043 :                 // Non-ISO, max size is 64 bytes
; 2044 :                 if (size > 64)

  02cf0	e59d3014	 ldr         r3, [sp, #0x14]
  02cf4	e3530040	 cmp         r3, #0x40
  02cf8	9a000001	 bls         |$LN4@UfnPdd_IsC|

; 2045 :                 {
; 2046 :                     size = 64;

  02cfc	e3a03040	 mov         r3, #0x40
  02d00	e58d3014	 str         r3, [sp, #0x14]
  02d04		 |$LN4@UfnPdd_IsC|

; 2047 :                 }
; 2048 :             }
; 2049 :             else

  02d04	ea000004	 b           |$LN3@UfnPdd_IsC|
  02d08		 |$LN5@UfnPdd_IsC|

; 2050 :             {
; 2051 :                 // ISO edpoint, maximal size is 512 bytes
; 2052 :                 if (size > 512)

  02d08	e59d3014	 ldr         r3, [sp, #0x14]
  02d0c	e3530c02	 cmp         r3, #2, 24
  02d10	9a000001	 bls         |$LN2@UfnPdd_IsC|

; 2053 :                 {
; 2054 :                     size = 512;

  02d14	e3a03c02	 mov         r3, #2, 24
  02d18	e58d3014	 str         r3, [sp, #0x14]
  02d1c		 |$LN2@UfnPdd_IsC|
  02d1c		 |$LN3@UfnPdd_IsC|

; 2055 :                 }
; 2056 :             }
; 2057 : 
; 2058 :             // Update EP size
; 2059 :             pEP->Descriptor.wMaxPacketSize = (USHORT)size;

  02d1c	e59d3014	 ldr         r3, [sp, #0x14]
  02d20	e1a01803	 mov         r1, r3, lsl #16
  02d24	e1a01821	 mov         r1, r1, lsr #16
  02d28	e59d3010	 ldr         r3, [sp, #0x10]
  02d2c	e2832008	 add         r2, r3, #8
  02d30	e1a03001	 mov         r3, r1
  02d34	e5c23000	 strb        r3, [r2]
  02d38	e1a03423	 mov         r3, r3, lsr #8
  02d3c	e5c23001	 strb        r3, [r2, #1]

; 2060 : 
; 2061 :             // Calculate total buffer size
; 2062 :             offset += size;

  02d40	e59d2018	 ldr         r2, [sp, #0x18]
  02d44	e59d3014	 ldr         r3, [sp, #0x14]
  02d48	e0823003	 add         r3, r2, r3
  02d4c	e58d3018	 str         r3, [sp, #0x18]

; 2063 :         }

  02d50	eaffffbf	 b           |$LN7@UfnPdd_IsC|
  02d54		 |$LN6@UfnPdd_IsC|

; 2064 : 
; 2065 :         // Add number of end points to total count
; 2066 :         count += pIFC->Descriptor.bNumEndpoints;

  02d54	e59d300c	 ldr         r3, [sp, #0xC]
  02d58	e2833008	 add         r3, r3, #8
  02d5c	e5d32000	 ldrb        r2, [r3]
  02d60	e59d3000	 ldr         r3, [sp]
  02d64	e0833002	 add         r3, r3, r2
  02d68	e58d3000	 str         r3, [sp]

; 2067 :     }

  02d6c	eaffffa4	 b           |$LN10@UfnPdd_IsC|
  02d70		 |$LN9@UfnPdd_IsC|

; 2068 : 
; 2069 :     // Can we support this configuration?
; 2070 :     if (count < USBD_EP_COUNT && offset <= 2048)

  02d70	e59d3000	 ldr         r3, [sp]
  02d74	e3530010	 cmp         r3, #0x10
  02d78	2a000004	 bcs         |$LN1@UfnPdd_IsC|
  02d7c	e59d3018	 ldr         r3, [sp, #0x18]
  02d80	e3530b02	 cmp         r3, #2, 22
  02d84	8a000001	 bhi         |$LN1@UfnPdd_IsC|

; 2071 :     {
; 2072 :         rc = ERROR_SUCCESS;

  02d88	e3a03000	 mov         r3, #0
  02d8c	e58d3004	 str         r3, [sp, #4]
  02d90		 |$LN1@UfnPdd_IsC|

; 2073 :     }
; 2074 : 
; 2075 :     // Done
; 2076 :     return rc;

  02d90	e59d3004	 ldr         r3, [sp, #4]
  02d94	e58d3024	 str         r3, [sp, #0x24]

; 2077 : }

  02d98	e59d0024	 ldr         r0, [sp, #0x24]
  02d9c	e28dd02c	 add         sp, sp, #0x2C
  02da0	e89d6000	 ldmia       sp, {sp, lr}
  02da4	e12fff1e	 bx          lr
  02da8		 |$M46251|

			 ENDP  ; |UfnPdd_IsConfigurationSupportable|

	EXPORT	|??_C@_1CM@MKJADBOK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAN?$AAD?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@KNJFGFIE@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JG@DGLOOCDP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JM@HHLJAEDI@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAA?$AAs?$AAs?$AAo?$AAc?$AAi?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAI?$AAn?$AAt?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IO@NLPFGFNL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@FPIKJCBN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@CLKJMIGC@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAI?$AAR@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IK@LFEIGPHL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAM?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?5?$AAI?$AAR?$AAQ?$AAs?$AA?5?$AA?$CF?$AAd?$AA?0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@DEFCKJEP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAu?$AAp?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IC@GHNBPOGP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@JLKEJEAH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAp?$AAP?$AAd?$AAd?$AA?9?$AA?$DO?$AAh?$AAP?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IE@ILEICJAP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HI@GPEGCDBA@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@GNOIOLGA@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@JHDPPPON@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg?$AA?5?$AAH?$AAa?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@NEJLIGFJ@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_Init|
	IMPORT	|CeSetThreadPriority|
	IMPORT	|CreateThread|
	IMPORT	|InterruptInitialize|
	IMPORT	|CreateEventW|
	IMPORT	|MmMapIoSpace|
	IMPORT	|CreateBusAccessHandle|
	IMPORT	|GetDeviceRegistryParams|
	IMPORT	|InitializeCriticalSection|
	IMPORT	|LocalAlloc|
	IMPORT	|InitializeHardware|

  000f8			 AREA	 |.pdata|, PDATA
|$T46331| DCD	|$LN87@UfnPdd_Ini@3|
	DCD	0x40033c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@MKJADBOK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAN?$AAD?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "E", 0x0, "N", 0x0, "D"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@KNJFGFIE@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "E", 0x0, "R", 0x0, "R"
	DCB	0x0, "O", 0x0, "R", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "o"
	DCB	0x0, "u", 0x0, "l", 0x0, "d", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "t", 0x0, " ", 0x0, "c", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, " ", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JG@DGLOOCDP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "E", 0x0, "R", 0x0, "R"
	DCB	0x0, "O", 0x0, "R", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "o"
	DCB	0x0, "u", 0x0, "l", 0x0, "d", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "t", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f", 0x0, "i", 0x0, "c"
	DCB	0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, "e", 0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JM@HHLJAEDI@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAA?$AAs?$AAs?$AAo?$AAc?$AAi?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAI?$AAn?$AAt?$AAe@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "A", 0x0, "s", 0x0, "s"
	DCB	0x0, "o", 0x0, "c", 0x0, "i", 0x0, "a", 0x0, "t", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, " ", 0x0, "E", 0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, " ", 0x0, "w", 0x0, "i", 0x0, "t", 0x0, "h", 0x0, " "
	DCB	0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, "."
	DCB	0x0, ".", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IO@NLPFGFNL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "E", 0x0, "R", 0x0, "R"
	DCB	0x0, "O", 0x0, "R", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "o"
	DCB	0x0, "u", 0x0, "l", 0x0, "d", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "t", 0x0, " ", 0x0, "c", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f"
	DCB	0x0, "i", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, " ", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FPIKJCBN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "S", 0x0, "y", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "m", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@CLKJMIGC@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAI?$AAR@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "E", 0x0, "R", 0x0, "R"
	DCB	0x0, "O", 0x0, "R", 0x0, ":", 0x0, " ", 0x0, "S", 0x0, "y"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, " ", 0x0, "I"
	DCB	0x0, "R", 0x0, "Q", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "q"
	DCB	0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "F"
	DCB	0x0, "A", 0x0, "I", 0x0, "L", 0x0, "E", 0x0, "D", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@LFEIGPHL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAM?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?5?$AAI?$AAR?$AAQ?$AAs?$AA?5?$AA?$CF?$AAd?$AA?0@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "M", 0x0, "a", 0x0, "p"
	DCB	0x0, "p", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "I"
	DCB	0x0, "R", 0x0, "Q", 0x0, "s", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "S", 0x0, "y"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u"
	DCB	0x0, "p", 0x0, "t", 0x0, ".", 0x0, ".", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@DEFCKJEP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAu?$AAp?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "u"
	DCB	0x0, "p", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "s"
	DCB	0x0, ".", 0x0, ".", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@GHNBPOGP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "E", 0x0, "R", 0x0, "R"
	DCB	0x0, "O", 0x0, "R", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "o"
	DCB	0x0, "u", 0x0, "l", 0x0, "d", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "t", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, " "
	DCB	0x0, "m", 0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y"
	DCB	0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@JLKEJEAH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAp?$AAP?$AAd?$AAd?$AA?9?$AA?$DO?$AAh?$AAP?$AAa@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "E", 0x0, "R", 0x0, "R"
	DCB	0x0, "O", 0x0, "R", 0x0, ":", 0x0, " ", 0x0, "p", 0x0, "P"
	DCB	0x0, "d", 0x0, "d", 0x0, "-", 0x0, ">", 0x0, "h", 0x0, "P"
	DCB	0x0, "a", 0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "B"
	DCB	0x0, "u", 0x0, "s", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " "
	DCB	0x0, "N", 0x0, "U", 0x0, "L", 0x0, "L", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@ILEICJAP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "E", 0x0, "R", 0x0, "R"
	DCB	0x0, "O", 0x0, "R", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "o"
	DCB	0x0, "u", 0x0, "l", 0x0, "d", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "t", 0x0, " ", 0x0, "g", 0x0, "e", 0x0, "t", 0x0, " "
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "P", 0x0, "a"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@GPEGCDBA@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "E", 0x0, "R", 0x0, "R"
	DCB	0x0, "O", 0x0, "R", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "o"
	DCB	0x0, "u", 0x0, "l", 0x0, "d", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "t", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "m"
	DCB	0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "p", 0x0, "P"
	DCB	0x0, "d", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@GNOIOLGA@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?5@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "E", 0x0, "R", 0x0, "R"
	DCB	0x0, "O", 0x0, "R", 0x0, ":", 0x0, " ", 0x0, "H", 0x0, "a"
	DCB	0x0, "r", 0x0, "d", 0x0, "w", 0x0, "a", 0x0, "r", 0x0, "e"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "F", 0x0, "A"
	DCB	0x0, "I", 0x0, "L", 0x0, "E", 0x0, "D", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@JHDPPPON@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg?$AA?5?$AAH?$AAa?$AAr@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "H", 0x0, "a"
	DCB	0x0, "r", 0x0, "d", 0x0, "w", 0x0, "a", 0x0, "r", 0x0, "e"
	DCB	0x0, ".", 0x0, ".", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@NEJLIGFJ@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "S", 0x0, "T", 0x0, "A"
	DCB	0x0, "R", 0x0, "T", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  02da8			 AREA	 |.text|, CODE, ARM

  02da8		 |UfnPdd_Init| PROC

; 2092 : {

  02da8		 |$LN87@UfnPdd_Ini@3|
  02da8	e1a0c00d	 mov         r12, sp
  02dac	e92d000f	 stmdb       sp!, {r0 - r3}
  02db0	e92d5000	 stmdb       sp!, {r12, lr}
  02db4	e24dd0f4	 sub         sp, sp, #0xF4
  02db8		 |$M46328|

; 2093 :     DWORD                rc = ERROR_INVALID_PARAMETER;

  02db8	e3a03057	 mov         r3, #0x57
  02dbc	e58d3008	 str         r3, [sp, #8]

; 2094 :     DWORD                ep;
; 2095 :     USBFN_PDD          * pPdd;
; 2096 :     OMAP2420_USBD_REGS * pUSBDRegs;
; 2097 :     PHYSICAL_ADDRESS     pa;
; 2098 : 	DWORD                irqs[5];
; 2099 : 
; 2100 : 
; 2101 :     DEBUGMSG(ZONE_INIT, (L"UfnPdd_Init() - START\r\n"));

  02dc0	e59f3c24	 ldr         r3, [pc, #0xC24]
  02dc4	e5933440	 ldr         r3, [r3, #0x440]
  02dc8	e3130004	 tst         r3, #4
  02dcc	0a00000f	 beq         |$LN19@UfnPdd_Ini@3|
  02dd0	e59f3c14	 ldr         r3, [pc, #0xC14]
  02dd4	e5933440	 ldr         r3, [r3, #0x440]
  02dd8	e3130801	 tst         r3, #1, 16
  02ddc	0a000004	 beq         |$LN17@UfnPdd_Ini@3|
  02de0	e59f0cac	 ldr         r0, [pc, #0xCAC]
  02de4	eb000000	 bl          CeLogMsg
  02de8	e3a03001	 mov         r3, #1
  02dec	e58d3048	 str         r3, [sp, #0x48]
  02df0	ea000003	 b           |$LN18@UfnPdd_Ini@3|
  02df4		 |$LN17@UfnPdd_Ini@3|
  02df4	e59f0c98	 ldr         r0, [pc, #0xC98]
  02df8	eb000000	 bl          NKDbgPrintfW
  02dfc	e3a03000	 mov         r3, #0
  02e00	e58d3048	 str         r3, [sp, #0x48]
  02e04		 |$LN18@UfnPdd_Ini@3|
  02e04	e3a03001	 mov         r3, #1
  02e08	e58d304c	 str         r3, [sp, #0x4C]
  02e0c	ea000001	 b           |$LN20@UfnPdd_Ini@3|
  02e10		 |$LN19@UfnPdd_Ini@3|
  02e10	e3a03000	 mov         r3, #0
  02e14	e58d304c	 str         r3, [sp, #0x4C]
  02e18		 |$LN20@UfnPdd_Ini@3|

; 2102 : 
; 2103 :     printUsbdDriverSettings();

  02e18	eb000000	 bl          printUsbdDriverSettings

; 2104 : 
; 2105 :     DEBUGMSG(ZONE_INIT, (L"UfnPdd_Init() - "
; 2106 :         L"Initializing Hardware...\r\n"));

  02e1c	e59f3bc8	 ldr         r3, [pc, #0xBC8]
  02e20	e5933440	 ldr         r3, [r3, #0x440]
  02e24	e3130004	 tst         r3, #4
  02e28	0a00000f	 beq         |$LN23@UfnPdd_Ini@3|
  02e2c	e59f3bb8	 ldr         r3, [pc, #0xBB8]
  02e30	e5933440	 ldr         r3, [r3, #0x440]
  02e34	e3130801	 tst         r3, #1, 16
  02e38	0a000004	 beq         |$LN21@UfnPdd_Ini@3|
  02e3c	e59f0c4c	 ldr         r0, [pc, #0xC4C]
  02e40	eb000000	 bl          CeLogMsg
  02e44	e3a03001	 mov         r3, #1
  02e48	e58d3050	 str         r3, [sp, #0x50]
  02e4c	ea000003	 b           |$LN22@UfnPdd_Ini@3|
  02e50		 |$LN21@UfnPdd_Ini@3|
  02e50	e59f0c38	 ldr         r0, [pc, #0xC38]
  02e54	eb000000	 bl          NKDbgPrintfW
  02e58	e3a03000	 mov         r3, #0
  02e5c	e58d3050	 str         r3, [sp, #0x50]
  02e60		 |$LN22@UfnPdd_Ini@3|
  02e60	e3a03001	 mov         r3, #1
  02e64	e58d3054	 str         r3, [sp, #0x54]
  02e68	ea000001	 b           |$LN24@UfnPdd_Ini@3|
  02e6c		 |$LN23@UfnPdd_Ini@3|
  02e6c	e3a03000	 mov         r3, #0
  02e70	e58d3054	 str         r3, [sp, #0x54]
  02e74		 |$LN24@UfnPdd_Ini@3|

; 2107 : 
; 2108 :     if (InitializeHardware() == FALSE)

  02e74	eb000000	 bl          InitializeHardware
  02e78	e58d0058	 str         r0, [sp, #0x58]
  02e7c	e59d3058	 ldr         r3, [sp, #0x58]
  02e80	e3530000	 cmp         r3, #0
  02e84	1a000016	 bne         |$LN14@UfnPdd_Ini@3|

; 2109 :     {
; 2110 :         DEBUGMSG(ZONE_ERROR, (L"UfnPdd_Init() - "
; 2111 :             L"ERROR: Hardware Initialization FAILED\r\n"));

  02e88	e59f3b5c	 ldr         r3, [pc, #0xB5C]
  02e8c	e5933440	 ldr         r3, [r3, #0x440]
  02e90	e3130001	 tst         r3, #1
  02e94	0a00000f	 beq         |$LN27@UfnPdd_Ini@3|
  02e98	e59f3b4c	 ldr         r3, [pc, #0xB4C]
  02e9c	e5933440	 ldr         r3, [r3, #0x440]
  02ea0	e3130801	 tst         r3, #1, 16
  02ea4	0a000004	 beq         |$LN25@UfnPdd_Ini@3|
  02ea8	e59f0bdc	 ldr         r0, [pc, #0xBDC]
  02eac	eb000000	 bl          CeLogMsg
  02eb0	e3a03001	 mov         r3, #1
  02eb4	e58d305c	 str         r3, [sp, #0x5C]
  02eb8	ea000003	 b           |$LN26@UfnPdd_Ini@3|
  02ebc		 |$LN25@UfnPdd_Ini@3|
  02ebc	e59f0bc8	 ldr         r0, [pc, #0xBC8]
  02ec0	eb000000	 bl          NKDbgPrintfW
  02ec4	e3a03000	 mov         r3, #0
  02ec8	e58d305c	 str         r3, [sp, #0x5C]
  02ecc		 |$LN26@UfnPdd_Ini@3|
  02ecc	e3a03001	 mov         r3, #1
  02ed0	e58d3060	 str         r3, [sp, #0x60]
  02ed4	ea000001	 b           |$LN28@UfnPdd_Ini@3|
  02ed8		 |$LN27@UfnPdd_Ini@3|
  02ed8	e3a03000	 mov         r3, #0
  02edc	e58d3060	 str         r3, [sp, #0x60]
  02ee0		 |$LN28@UfnPdd_Ini@3|

; 2112 :         goto InitClean;

  02ee0	ea00029c	 b           |$InitClean$45080|
  02ee4		 |$LN14@UfnPdd_Ini@3|

; 2113 :     }
; 2114 :     // Allocate PDD object
; 2115 :     pPdd = LocalAlloc(LPTR, sizeof(USBFN_PDD));

  02ee4	e3a01f5b	 mov         r1, #0x5B, 30
  02ee8	e3a00040	 mov         r0, #0x40
  02eec	eb000000	 bl          LocalAlloc
  02ef0	e58d0064	 str         r0, [sp, #0x64]
  02ef4	e59d3064	 ldr         r3, [sp, #0x64]
  02ef8	e58d3030	 str         r3, [sp, #0x30]

; 2116 :     if (pPdd == NULL)

  02efc	e59d3030	 ldr         r3, [sp, #0x30]
  02f00	e3530000	 cmp         r3, #0
  02f04	1a000016	 bne         |$LN13@UfnPdd_Ini@3|

; 2117 :     {
; 2118 :         DEBUGMSG(ZONE_ERROR, (L"UfnPdd_Init() - "
; 2119 :             L"ERROR: Could not allocate memory for pPdd\r\n"));

  02f08	e59f3adc	 ldr         r3, [pc, #0xADC]
  02f0c	e5933440	 ldr         r3, [r3, #0x440]
  02f10	e3130001	 tst         r3, #1
  02f14	0a00000f	 beq         |$LN31@UfnPdd_Ini@3|
  02f18	e59f3acc	 ldr         r3, [pc, #0xACC]
  02f1c	e5933440	 ldr         r3, [r3, #0x440]
  02f20	e3130801	 tst         r3, #1, 16
  02f24	0a000004	 beq         |$LN29@UfnPdd_Ini@3|
  02f28	e59f0b58	 ldr         r0, [pc, #0xB58]
  02f2c	eb000000	 bl          CeLogMsg
  02f30	e3a03001	 mov         r3, #1
  02f34	e58d3068	 str         r3, [sp, #0x68]
  02f38	ea000003	 b           |$LN30@UfnPdd_Ini@3|
  02f3c		 |$LN29@UfnPdd_Ini@3|
  02f3c	e59f0b44	 ldr         r0, [pc, #0xB44]
  02f40	eb000000	 bl          NKDbgPrintfW
  02f44	e3a03000	 mov         r3, #0
  02f48	e58d3068	 str         r3, [sp, #0x68]
  02f4c		 |$LN30@UfnPdd_Ini@3|
  02f4c	e3a03001	 mov         r3, #1
  02f50	e58d306c	 str         r3, [sp, #0x6C]
  02f54	ea000001	 b           |$LN32@UfnPdd_Ini@3|
  02f58		 |$LN31@UfnPdd_Ini@3|
  02f58	e3a03000	 mov         r3, #0
  02f5c	e58d306c	 str         r3, [sp, #0x6C]
  02f60		 |$LN32@UfnPdd_Ini@3|

; 2120 :         goto InitClean;

  02f60	ea00027c	 b           |$InitClean$45080|
  02f64		 |$LN13@UfnPdd_Ini@3|

; 2121 :     }
; 2122 : 
; 2123 :     // Initialize critical section
; 2124 :     InitializeCriticalSection(&pPdd->epCS);

  02f64	e59d3030	 ldr         r3, [sp, #0x30]
  02f68	e2830054	 add         r0, r3, #0x54
  02f6c	eb000000	 bl          InitializeCriticalSection

; 2125 :     pPdd->devState = 0;

  02f70	e59d3030	 ldr         r3, [sp, #0x30]
  02f74	e2832040	 add         r2, r3, #0x40
  02f78	e3a03000	 mov         r3, #0
  02f7c	e5823000	 str         r3, [r2]

; 2126 : 
; 2127 :     // Read device parameters
; 2128 :     if (GetDeviceRegistryParams(szActiveKey, pPdd, dimof(g_deviceRegParams), g_deviceRegParams) != ERROR_SUCCESS)

  02f80	e59f3afc	 ldr         r3, [pc, #0xAFC]
  02f84	e3a02004	 mov         r2, #4
  02f88	e59d1030	 ldr         r1, [sp, #0x30]
  02f8c	e59d00fc	 ldr         r0, [sp, #0xFC]
  02f90	eb000000	 bl          GetDeviceRegistryParams
  02f94	e58d0070	 str         r0, [sp, #0x70]
  02f98	e59d3070	 ldr         r3, [sp, #0x70]
  02f9c	e3530000	 cmp         r3, #0
  02fa0	0a000016	 beq         |$LN12@UfnPdd_Ini@3|

; 2129 :     {
; 2130 :         DEBUGMSG(ZONE_ERROR, (L"UfnPdd_Init() - "
; 2131 :             L"ERROR: Could not get Device Registry Parameters\r\n"));

  02fa4	e59f3a40	 ldr         r3, [pc, #0xA40]
  02fa8	e5933440	 ldr         r3, [r3, #0x440]
  02fac	e3130001	 tst         r3, #1
  02fb0	0a00000f	 beq         |$LN35@UfnPdd_Ini@3|
  02fb4	e59f3a30	 ldr         r3, [pc, #0xA30]
  02fb8	e5933440	 ldr         r3, [r3, #0x440]
  02fbc	e3130801	 tst         r3, #1, 16
  02fc0	0a000004	 beq         |$LN33@UfnPdd_Ini@3|
  02fc4	e59f0ab4	 ldr         r0, [pc, #0xAB4]
  02fc8	eb000000	 bl          CeLogMsg
  02fcc	e3a03001	 mov         r3, #1
  02fd0	e58d3074	 str         r3, [sp, #0x74]
  02fd4	ea000003	 b           |$LN34@UfnPdd_Ini@3|
  02fd8		 |$LN33@UfnPdd_Ini@3|
  02fd8	e59f0aa0	 ldr         r0, [pc, #0xAA0]
  02fdc	eb000000	 bl          NKDbgPrintfW
  02fe0	e3a03000	 mov         r3, #0
  02fe4	e58d3074	 str         r3, [sp, #0x74]
  02fe8		 |$LN34@UfnPdd_Ini@3|
  02fe8	e3a03001	 mov         r3, #1
  02fec	e58d3078	 str         r3, [sp, #0x78]
  02ff0	ea000001	 b           |$LN36@UfnPdd_Ini@3|
  02ff4		 |$LN35@UfnPdd_Ini@3|
  02ff4	e3a03000	 mov         r3, #0
  02ff8	e58d3078	 str         r3, [sp, #0x78]
  02ffc		 |$LN36@UfnPdd_Ini@3|

; 2132 :         goto InitClean;

  02ffc	ea000255	 b           |$InitClean$45080|
  03000		 |$LN12@UfnPdd_Ini@3|

; 2133 :     }
; 2134 : 
; 2135 :     ASSERT(pPdd->memBase == OMAP2420_USBD_REGS_PA);

  03000	e59d3030	 ldr         r3, [sp, #0x30]
  03004	e5932000	 ldr         r2, [r3]
  03008	e59f3a6c	 ldr         r3, [pc, #0xA6C]
  0300c	e1520003	 cmp         r2, r3
  03010	1a000002	 bne         |$LN37@UfnPdd_Ini@3|
  03014	e3a03001	 mov         r3, #1
  03018	e58d307c	 str         r3, [sp, #0x7C]
  0301c	ea000008	 b           |$LN38@UfnPdd_Ini@3|
  03020		 |$LN37@UfnPdd_Ini@3|
  03020	e3a03b02	 mov         r3, #2, 22
  03024	e3833057	 orr         r3, r3, #0x57
  03028	e59f2a48	 ldr         r2, [pc, #0xA48]
  0302c	e59f1a40	 ldr         r1, [pc, #0xA40]
  03030	e59f0a38	 ldr         r0, [pc, #0xA38]
  03034	eb000000	 bl          NKDbgPrintfW
  03038	e6000010	 __debugbreak_ce
  0303c	e3a03000	 mov         r3, #0
  03040	e58d307c	 str         r3, [sp, #0x7C]
  03044		 |$LN38@UfnPdd_Ini@3|

; 2136 :     ASSERT(pPdd->memLen >= sizeof(OMAP2420_USBD_REGS));

  03044	e59d3030	 ldr         r3, [sp, #0x30]
  03048	e2833004	 add         r3, r3, #4
  0304c	e5933000	 ldr         r3, [r3]
  03050	e3530c01	 cmp         r3, #1, 24
  03054	3a000002	 bcc         |$LN39@UfnPdd_Ini@3|
  03058	e3a03001	 mov         r3, #1
  0305c	e58d3080	 str         r3, [sp, #0x80]
  03060	ea000008	 b           |$LN40@UfnPdd_Ini@3|
  03064		 |$LN39@UfnPdd_Ini@3|
  03064	e3a03b02	 mov         r3, #2, 22
  03068	e3833058	 orr         r3, r3, #0x58
  0306c	e59f2a04	 ldr         r2, [pc, #0xA04]
  03070	e59f19fc	 ldr         r1, [pc, #0x9FC]
  03074	e59f09f4	 ldr         r0, [pc, #0x9F4]
  03078	eb000000	 bl          NKDbgPrintfW
  0307c	e6000010	 __debugbreak_ce
  03080	e3a03000	 mov         r3, #0
  03084	e58d3080	 str         r3, [sp, #0x80]
  03088		 |$LN40@UfnPdd_Ini@3|

; 2137 : 
; 2138 :     pPdd->irq[0] = IRQ_USB_GEN;

  03088	e59d3030	 ldr         r3, [sp, #0x30]
  0308c	e283200c	 add         r2, r3, #0xC
  03090	e3a0304b	 mov         r3, #0x4B
  03094	e5823000	 str         r3, [r2]

; 2139 :     pPdd->irq[1] = IRQ_USB_NISO;

  03098	e59d3030	 ldr         r3, [sp, #0x30]
  0309c	e2832010	 add         r2, r3, #0x10
  030a0	e3a0304c	 mov         r3, #0x4C
  030a4	e5823000	 str         r3, [r2]

; 2140 :     pPdd->irq[2] = IRQ_USB_ISO;

  030a8	e59d3030	 ldr         r3, [sp, #0x30]
  030ac	e2832014	 add         r2, r3, #0x14
  030b0	e3a0304d	 mov         r3, #0x4D
  030b4	e5823000	 str         r3, [r2]

; 2141 : 
; 2142 :     // Set PM to Default
; 2143 :     pPdd->m_NewPowerState     = D0;

  030b8	e59d3030	 ldr         r3, [sp, #0x30]
  030bc	e2832038	 add         r2, r3, #0x38
  030c0	e3a03000	 mov         r3, #0
  030c4	e5823000	 str         r3, [r2]

; 2144 :     pPdd->m_CurrentPowerState = D4;

  030c8	e59d3030	 ldr         r3, [sp, #0x30]
  030cc	e283203c	 add         r2, r3, #0x3C
  030d0	e3a03004	 mov         r3, #4
  030d4	e5823000	 str         r3, [r2]

; 2145 : 
; 2146 :     pPdd->hParentBus = CreateBusAccessHandle(szActiveKey);

  030d8	e59d00fc	 ldr         r0, [sp, #0xFC]
  030dc	eb000000	 bl          CreateBusAccessHandle
  030e0	e58d0084	 str         r0, [sp, #0x84]
  030e4	e59d3030	 ldr         r3, [sp, #0x30]
  030e8	e2832020	 add         r2, r3, #0x20
  030ec	e59d3084	 ldr         r3, [sp, #0x84]
  030f0	e5823000	 str         r3, [r2]

; 2147 :     if (pPdd->hParentBus == NULL)

  030f4	e59d3030	 ldr         r3, [sp, #0x30]
  030f8	e2833020	 add         r3, r3, #0x20
  030fc	e5933000	 ldr         r3, [r3]
  03100	e3530000	 cmp         r3, #0
  03104	1a000016	 bne         |$LN11@UfnPdd_Ini@3|

; 2148 :     {
; 2149 :         DEBUGMSG(ZONE_ERROR, (L"UfnPdd_Init() - "
; 2150 :             L"ERROR: pPdd->hParentBus is NULL\r\n"));

  03108	e59f38dc	 ldr         r3, [pc, #0x8DC]
  0310c	e5933440	 ldr         r3, [r3, #0x440]
  03110	e3130001	 tst         r3, #1
  03114	0a00000f	 beq         |$LN43@UfnPdd_Ini@3|
  03118	e59f38cc	 ldr         r3, [pc, #0x8CC]
  0311c	e5933440	 ldr         r3, [r3, #0x440]
  03120	e3130801	 tst         r3, #1, 16
  03124	0a000004	 beq         |$LN41@UfnPdd_Ini@3|
  03128	e59f093c	 ldr         r0, [pc, #0x93C]
  0312c	eb000000	 bl          CeLogMsg
  03130	e3a03001	 mov         r3, #1
  03134	e58d3088	 str         r3, [sp, #0x88]
  03138	ea000003	 b           |$LN42@UfnPdd_Ini@3|
  0313c		 |$LN41@UfnPdd_Ini@3|
  0313c	e59f0928	 ldr         r0, [pc, #0x928]
  03140	eb000000	 bl          NKDbgPrintfW
  03144	e3a03000	 mov         r3, #0
  03148	e58d3088	 str         r3, [sp, #0x88]
  0314c		 |$LN42@UfnPdd_Ini@3|
  0314c	e3a03001	 mov         r3, #1
  03150	e58d308c	 str         r3, [sp, #0x8C]
  03154	ea000001	 b           |$LN44@UfnPdd_Ini@3|
  03158		 |$LN43@UfnPdd_Ini@3|
  03158	e3a03000	 mov         r3, #0
  0315c	e58d308c	 str         r3, [sp, #0x8C]
  03160		 |$LN44@UfnPdd_Ini@3|

; 2151 :         goto InitClean;

  03160	ea0001fc	 b           |$InitClean$45080|
  03164		 |$LN11@UfnPdd_Ini@3|

; 2152 :     }
; 2153 : 
; 2154 :     // Set hardware to standby mode
; 2155 :     pPdd->m_NewPowerState = D2;

  03164	e59d3030	 ldr         r3, [sp, #0x30]
  03168	e2832038	 add         r2, r3, #0x38
  0316c	e3a03002	 mov         r3, #2
  03170	e5823000	 str         r3, [r2]

; 2156 :     UpdateDevicePower(pPdd);

  03174	e59d0030	 ldr         r0, [sp, #0x30]
  03178	eb000000	 bl          UpdateDevicePower

; 2157 : 
; 2158 :     // Map the USB OHCI registers
; 2159 :     pa.QuadPart = pPdd->memBase;

  0317c	e59d3030	 ldr         r3, [sp, #0x30]
  03180	e5933000	 ldr         r3, [r3]
  03184	e58d3024	 str         r3, [sp, #0x24]
  03188	e3a03000	 mov         r3, #0
  0318c	e58d3028	 str         r3, [sp, #0x28]

; 2160 :     pUSBDRegs = MmMapIoSpace(pa, pPdd->memLen, FALSE);

  03190	e3a03000	 mov         r3, #0
  03194	e59d2030	 ldr         r2, [sp, #0x30]
  03198	e2822004	 add         r2, r2, #4
  0319c	e5922000	 ldr         r2, [r2]
  031a0	e59d0024	 ldr         r0, [sp, #0x24]
  031a4	e59d1028	 ldr         r1, [sp, #0x28]
  031a8	eb000000	 bl          MmMapIoSpace
  031ac	e58d0090	 str         r0, [sp, #0x90]
  031b0	e59d3090	 ldr         r3, [sp, #0x90]
  031b4	e58d3020	 str         r3, [sp, #0x20]

; 2161 : 
; 2162 :     if (pUSBDRegs == NULL)

  031b8	e59d3020	 ldr         r3, [sp, #0x20]
  031bc	e3530000	 cmp         r3, #0
  031c0	1a000016	 bne         |$LN10@UfnPdd_Ini@3|

; 2163 :     {
; 2164 :         DEBUGMSG(ZONE_ERROR, (L"UfnPdd_Init() - "
; 2165 :             L"ERROR: Could not map memory for USBD Registers\r\n"));

  031c4	e59f3820	 ldr         r3, [pc, #0x820]
  031c8	e5933440	 ldr         r3, [r3, #0x440]
  031cc	e3130001	 tst         r3, #1
  031d0	0a00000f	 beq         |$LN47@UfnPdd_Ini@3|
  031d4	e59f3810	 ldr         r3, [pc, #0x810]
  031d8	e5933440	 ldr         r3, [r3, #0x440]
  031dc	e3130801	 tst         r3, #1, 16
  031e0	0a000004	 beq         |$LN45@UfnPdd_Ini@3|
  031e4	e59f087c	 ldr         r0, [pc, #0x87C]
  031e8	eb000000	 bl          CeLogMsg
  031ec	e3a03001	 mov         r3, #1
  031f0	e58d3094	 str         r3, [sp, #0x94]
  031f4	ea000003	 b           |$LN46@UfnPdd_Ini@3|
  031f8		 |$LN45@UfnPdd_Ini@3|
  031f8	e59f0868	 ldr         r0, [pc, #0x868]
  031fc	eb000000	 bl          NKDbgPrintfW
  03200	e3a03000	 mov         r3, #0
  03204	e58d3094	 str         r3, [sp, #0x94]
  03208		 |$LN46@UfnPdd_Ini@3|
  03208	e3a03001	 mov         r3, #1
  0320c	e58d3098	 str         r3, [sp, #0x98]
  03210	ea000001	 b           |$LN48@UfnPdd_Ini@3|
  03214		 |$LN47@UfnPdd_Ini@3|
  03214	e3a03000	 mov         r3, #0
  03218	e58d3098	 str         r3, [sp, #0x98]
  0321c		 |$LN48@UfnPdd_Ini@3|

; 2166 :         goto InitClean;

  0321c	ea0001cd	 b           |$InitClean$45080|
  03220		 |$LN10@UfnPdd_Ini@3|

; 2167 :     }
; 2168 :     pPdd->pUSBDRegs = pUSBDRegs;

  03220	e59d3030	 ldr         r3, [sp, #0x30]
  03224	e2832024	 add         r2, r3, #0x24
  03228	e59d3020	 ldr         r3, [sp, #0x20]
  0322c	e5823000	 str         r3, [r2]

; 2169 : 
; 2170 :     DEBUGMSG((ZONE_INIT && ZONE_INTERRUPTS), (L"UfnPdd_Init() - Setting up interrupts...\r\n"));

  03230	e59f37b4	 ldr         r3, [pc, #0x7B4]
  03234	e5933440	 ldr         r3, [r3, #0x440]
  03238	e3130004	 tst         r3, #4
  0323c	0a000013	 beq         |$LN49@UfnPdd_Ini@3|
  03240	e59f37a4	 ldr         r3, [pc, #0x7A4]
  03244	e5933440	 ldr         r3, [r3, #0x440]
  03248	e3130c01	 tst         r3, #1, 24
  0324c	0a00000f	 beq         |$LN49@UfnPdd_Ini@3|
  03250	e59f3794	 ldr         r3, [pc, #0x794]
  03254	e5933440	 ldr         r3, [r3, #0x440]
  03258	e3130801	 tst         r3, #1, 16
  0325c	0a000004	 beq         |$LN50@UfnPdd_Ini@3|
  03260	e59f07fc	 ldr         r0, [pc, #0x7FC]
  03264	eb000000	 bl          CeLogMsg
  03268	e3a03001	 mov         r3, #1
  0326c	e58d309c	 str         r3, [sp, #0x9C]
  03270	ea000003	 b           |$LN51@UfnPdd_Ini@3|
  03274		 |$LN50@UfnPdd_Ini@3|
  03274	e59f07e8	 ldr         r0, [pc, #0x7E8]
  03278	eb000000	 bl          NKDbgPrintfW
  0327c	e3a03000	 mov         r3, #0
  03280	e58d309c	 str         r3, [sp, #0x9C]
  03284		 |$LN51@UfnPdd_Ini@3|
  03284	e3a03001	 mov         r3, #1
  03288	e58d30a0	 str         r3, [sp, #0xA0]
  0328c	ea000001	 b           |$LN52@UfnPdd_Ini@3|
  03290		 |$LN49@UfnPdd_Ini@3|
  03290	e3a03000	 mov         r3, #0
  03294	e58d30a0	 str         r3, [sp, #0xA0]
  03298		 |$LN52@UfnPdd_Ini@3|

; 2171 : 
; 2172 :     // Clear USB Interrupt enable registers
; 2173 :     OUTREG32(&pUSBDRegs->IRQ_EN, 0);

  03298	e59d3020	 ldr         r3, [sp, #0x20]
  0329c	e2832028	 add         r2, r3, #0x28
  032a0	e3a03000	 mov         r3, #0
  032a4	e5823000	 str         r3, [r2]

; 2174 :     OUTREG32(&pUSBDRegs->DMA_IRQ_EN, 0);

  032a8	e59d3020	 ldr         r3, [sp, #0x20]
  032ac	e283202c	 add         r2, r3, #0x2C
  032b0	e3a03000	 mov         r3, #0
  032b4	e5823000	 str         r3, [r2]

; 2175 : 
; 2176 :     // Reset all interrupts
; 2177 :     OUTREG32(&pUSBDRegs->IRQ_SRC, 0xFFFFFFFF);

  032b8	e59d3020	 ldr         r3, [sp, #0x20]
  032bc	e2832030	 add         r2, r3, #0x30
  032c0	e3e03000	 mvn         r3, #0
  032c4	e5823000	 str         r3, [r2]

; 2178 : 
; 2179 :     // Disable all RX and TX EndPoints (RX 0 - 15, TX 1 - 15)
; 2180 :     OUTREG32(&pUSBDRegs->EP0, 0);

  032c8	e59d3020	 ldr         r3, [sp, #0x20]
  032cc	e2832080	 add         r2, r3, #0x80
  032d0	e3a03000	 mov         r3, #0
  032d4	e5823000	 str         r3, [r2]

; 2181 :     for (ep = 0; ep < USBD_NONZERO_EP_COUNT; ep++)

  032d8	e3a03000	 mov         r3, #0
  032dc	e58d302c	 str         r3, [sp, #0x2C]
  032e0	ea000002	 b           |$LN9@UfnPdd_Ini@3|
  032e4		 |$LN8@UfnPdd_Ini@3|
  032e4	e59d302c	 ldr         r3, [sp, #0x2C]
  032e8	e2833001	 add         r3, r3, #1
  032ec	e58d302c	 str         r3, [sp, #0x2C]
  032f0		 |$LN9@UfnPdd_Ini@3|
  032f0	e59d302c	 ldr         r3, [sp, #0x2C]
  032f4	e353000f	 cmp         r3, #0xF
  032f8	2a000010	 bcs         |$LN7@UfnPdd_Ini@3|

; 2182 :     {
; 2183 :         OUTREG32(&pUSBDRegs->EP_RX[ep], 0);

  032fc	e59d3020	 ldr         r3, [sp, #0x20]
  03300	e2831084	 add         r1, r3, #0x84
  03304	e59d202c	 ldr         r2, [sp, #0x2C]
  03308	e3a03004	 mov         r3, #4
  0330c	e0030392	 mul         r3, r2, r3
  03310	e0812003	 add         r2, r1, r3
  03314	e3a03000	 mov         r3, #0
  03318	e5823000	 str         r3, [r2]

; 2184 :         OUTREG32(&pUSBDRegs->EP_TX[ep], 0);

  0331c	e59d3020	 ldr         r3, [sp, #0x20]
  03320	e28310c4	 add         r1, r3, #0xC4
  03324	e59d202c	 ldr         r2, [sp, #0x2C]
  03328	e3a03004	 mov         r3, #4
  0332c	e0030392	 mul         r3, r2, r3
  03330	e0812003	 add         r2, r1, r3
  03334	e3a03000	 mov         r3, #0
  03338	e5823000	 str         r3, [r2]

; 2185 :     }

  0333c	eaffffe8	 b           |$LN8@UfnPdd_Ini@3|
  03340		 |$LN7@UfnPdd_Ini@3|

; 2186 : 
; 2187 :     // Request SYSINTR for interrupts
; 2188 :     irqs[0] = -1;                   // We are using new call format

  03340	e3e03000	 mvn         r3, #0
  03344	e58d300c	 str         r3, [sp, #0xC]

; 2189 :     irqs[1] = OAL_INTR_FORCE_STATIC;      // Mapping flags

  03348	e3a03004	 mov         r3, #4
  0334c	e58d3010	 str         r3, [sp, #0x10]

; 2190 :     irqs[2] = pPdd->irq[0];         // Device state, EP0 & DMA

  03350	e59d3030	 ldr         r3, [sp, #0x30]
  03354	e283300c	 add         r3, r3, #0xC
  03358	e5933000	 ldr         r3, [r3]
  0335c	e58d3014	 str         r3, [sp, #0x14]

; 2191 :     irqs[3] = pPdd->irq[1];         // Non-ISO EP

  03360	e59d3030	 ldr         r3, [sp, #0x30]
  03364	e2833010	 add         r3, r3, #0x10
  03368	e5933000	 ldr         r3, [r3]
  0336c	e58d3018	 str         r3, [sp, #0x18]

; 2192 :     irqs[4] = pPdd->irq[2];         // ISO EP

  03370	e59d3030	 ldr         r3, [sp, #0x30]
  03374	e2833014	 add         r3, r3, #0x14
  03378	e5933000	 ldr         r3, [r3]
  0337c	e58d301c	 str         r3, [sp, #0x1C]

; 2193 :     pPdd->m_NewPowerState = D4;     // Assume Detached First.

  03380	e59d3030	 ldr         r3, [sp, #0x30]
  03384	e2832038	 add         r2, r3, #0x38
  03388	e3a03004	 mov         r3, #4
  0338c	e5823000	 str         r3, [r2]

; 2194 :     UpdateDevicePower(pPdd);

  03390	e59d0030	 ldr         r0, [sp, #0x30]
  03394	eb000000	 bl          UpdateDevicePower

; 2195 : 
; 2196 :     DEBUGMSG((ZONE_INIT && ZONE_INTERRUPTS), (L"UfnPdd_Init() - "
; 2197 :         L"Mapping IRQs %d, %d, and %d to System Interrupt...\r\n", irqs[2], irqs[3], irqs[4]));

  03398	e59f364c	 ldr         r3, [pc, #0x64C]
  0339c	e5933440	 ldr         r3, [r3, #0x440]
  033a0	e3130004	 tst         r3, #4
  033a4	0a000019	 beq         |$LN53@UfnPdd_Ini@3|
  033a8	e59f363c	 ldr         r3, [pc, #0x63C]
  033ac	e5933440	 ldr         r3, [r3, #0x440]
  033b0	e3130c01	 tst         r3, #1, 24
  033b4	0a000015	 beq         |$LN53@UfnPdd_Ini@3|
  033b8	e59f362c	 ldr         r3, [pc, #0x62C]
  033bc	e5933440	 ldr         r3, [r3, #0x440]
  033c0	e3130801	 tst         r3, #1, 16
  033c4	0a000007	 beq         |$LN54@UfnPdd_Ini@3|
  033c8	e59d301c	 ldr         r3, [sp, #0x1C]
  033cc	e59d2018	 ldr         r2, [sp, #0x18]
  033d0	e59d1014	 ldr         r1, [sp, #0x14]
  033d4	e59f0684	 ldr         r0, [pc, #0x684]
  033d8	eb000000	 bl          CeLogMsg
  033dc	e3a03001	 mov         r3, #1
  033e0	e58d30a4	 str         r3, [sp, #0xA4]
  033e4	ea000006	 b           |$LN55@UfnPdd_Ini@3|
  033e8		 |$LN54@UfnPdd_Ini@3|
  033e8	e59d301c	 ldr         r3, [sp, #0x1C]
  033ec	e59d2018	 ldr         r2, [sp, #0x18]
  033f0	e59d1014	 ldr         r1, [sp, #0x14]
  033f4	e59f0664	 ldr         r0, [pc, #0x664]
  033f8	eb000000	 bl          NKDbgPrintfW
  033fc	e3a03000	 mov         r3, #0
  03400	e58d30a4	 str         r3, [sp, #0xA4]
  03404		 |$LN55@UfnPdd_Ini@3|
  03404	e3a03001	 mov         r3, #1
  03408	e58d30a8	 str         r3, [sp, #0xA8]
  0340c	ea000001	 b           |$LN56@UfnPdd_Ini@3|
  03410		 |$LN53@UfnPdd_Ini@3|
  03410	e3a03000	 mov         r3, #0
  03414	e58d30a8	 str         r3, [sp, #0xA8]
  03418		 |$LN56@UfnPdd_Ini@3|

; 2198 :     if (!KernelIoControl(IOCTL_HAL_REQUEST_SYSINTR, irqs, sizeof(irqs), &pPdd->sysIntr, sizeof(pPdd->sysIntr), NULL))

  03418	e3a03000	 mov         r3, #0
  0341c	e58d3004	 str         r3, [sp, #4]
  03420	e3a03004	 mov         r3, #4
  03424	e58d3000	 str         r3, [sp]
  03428	e59d3030	 ldr         r3, [sp, #0x30]
  0342c	e2833028	 add         r3, r3, #0x28
  03430	e3a02014	 mov         r2, #0x14
  03434	e28d100c	 add         r1, sp, #0xC
  03438	e59f061c	 ldr         r0, [pc, #0x61C]
  0343c	eb000000	 bl          KernelIoControl
  03440	e58d00ac	 str         r0, [sp, #0xAC]
  03444	e59d30ac	 ldr         r3, [sp, #0xAC]
  03448	e3530000	 cmp         r3, #0
  0344c	1a000017	 bne         |$LN6@UfnPdd_Ini@3|

; 2199 :     {
; 2200 :         DEBUGMSG(ZONE_ERROR, (L"UfnPdd_Init() - "
; 2201 :             L"ERROR: System IRQ Request FAILED\r\n"));

  03450	e59f3594	 ldr         r3, [pc, #0x594]
  03454	e5933440	 ldr         r3, [r3, #0x440]
  03458	e3130001	 tst         r3, #1
  0345c	0a00000f	 beq         |$LN59@UfnPdd_Ini@3|
  03460	e59f3584	 ldr         r3, [pc, #0x584]
  03464	e5933440	 ldr         r3, [r3, #0x440]
  03468	e3130801	 tst         r3, #1, 16
  0346c	0a000004	 beq         |$LN57@UfnPdd_Ini@3|
  03470	e59f05e0	 ldr         r0, [pc, #0x5E0]
  03474	eb000000	 bl          CeLogMsg
  03478	e3a03001	 mov         r3, #1
  0347c	e58d30b0	 str         r3, [sp, #0xB0]
  03480	ea000003	 b           |$LN58@UfnPdd_Ini@3|
  03484		 |$LN57@UfnPdd_Ini@3|
  03484	e59f05cc	 ldr         r0, [pc, #0x5CC]
  03488	eb000000	 bl          NKDbgPrintfW
  0348c	e3a03000	 mov         r3, #0
  03490	e58d30b0	 str         r3, [sp, #0xB0]
  03494		 |$LN58@UfnPdd_Ini@3|
  03494	e3a03001	 mov         r3, #1
  03498	e58d30b4	 str         r3, [sp, #0xB4]
  0349c	ea000001	 b           |$LN60@UfnPdd_Ini@3|
  034a0		 |$LN59@UfnPdd_Ini@3|
  034a0	e3a03000	 mov         r3, #0
  034a4	e58d30b4	 str         r3, [sp, #0xB4]
  034a8		 |$LN60@UfnPdd_Ini@3|

; 2202 :         goto InitClean;

  034a8	ea00012a	 b           |$InitClean$45080|

; 2203 :     }
; 2204 :     else

  034ac	ea00001f	 b           |$LN5@UfnPdd_Ini@3|
  034b0		 |$LN6@UfnPdd_Ini@3|

; 2205 :     {
; 2206 :         DEBUGMSG((ZONE_INIT && ZONE_INTERRUPTS), (L"UfnPdd_Init() - "
; 2207 :             L"System Interrupt is 0x%08X\r\n", pPdd->sysIntr));

  034b0	e59f3534	 ldr         r3, [pc, #0x534]
  034b4	e5933440	 ldr         r3, [r3, #0x440]
  034b8	e3130004	 tst         r3, #4
  034bc	0a000019	 beq         |$LN61@UfnPdd_Ini@3|
  034c0	e59f3524	 ldr         r3, [pc, #0x524]
  034c4	e5933440	 ldr         r3, [r3, #0x440]
  034c8	e3130c01	 tst         r3, #1, 24
  034cc	0a000015	 beq         |$LN61@UfnPdd_Ini@3|
  034d0	e59f3514	 ldr         r3, [pc, #0x514]
  034d4	e5933440	 ldr         r3, [r3, #0x440]
  034d8	e3130801	 tst         r3, #1, 16
  034dc	0a000007	 beq         |$LN62@UfnPdd_Ini@3|
  034e0	e59d3030	 ldr         r3, [sp, #0x30]
  034e4	e2833028	 add         r3, r3, #0x28
  034e8	e5931000	 ldr         r1, [r3]
  034ec	e59f0560	 ldr         r0, [pc, #0x560]
  034f0	eb000000	 bl          CeLogMsg
  034f4	e3a03001	 mov         r3, #1
  034f8	e58d30b8	 str         r3, [sp, #0xB8]
  034fc	ea000006	 b           |$LN63@UfnPdd_Ini@3|
  03500		 |$LN62@UfnPdd_Ini@3|
  03500	e59d3030	 ldr         r3, [sp, #0x30]
  03504	e2833028	 add         r3, r3, #0x28
  03508	e5931000	 ldr         r1, [r3]
  0350c	e59f0540	 ldr         r0, [pc, #0x540]
  03510	eb000000	 bl          NKDbgPrintfW
  03514	e3a03000	 mov         r3, #0
  03518	e58d30b8	 str         r3, [sp, #0xB8]
  0351c		 |$LN63@UfnPdd_Ini@3|
  0351c	e3a03001	 mov         r3, #1
  03520	e58d30bc	 str         r3, [sp, #0xBC]
  03524	ea000001	 b           |$LN64@UfnPdd_Ini@3|
  03528		 |$LN61@UfnPdd_Ini@3|
  03528	e3a03000	 mov         r3, #0
  0352c	e58d30bc	 str         r3, [sp, #0xBC]
  03530		 |$LN64@UfnPdd_Ini@3|
  03530		 |$LN5@UfnPdd_Ini@3|

; 2208 :     }
; 2209 : 
; 2210 :     // Create interrupt event
; 2211 :     pPdd->hIntrEvent = CreateEvent(NULL, FALSE, FALSE, NULL);

  03530	e3a03000	 mov         r3, #0
  03534	e3a02000	 mov         r2, #0
  03538	e3a01000	 mov         r1, #0
  0353c	e3a00000	 mov         r0, #0
  03540	eb000000	 bl          CreateEventW
  03544	e58d00c0	 str         r0, [sp, #0xC0]
  03548	e59d3030	 ldr         r3, [sp, #0x30]
  0354c	e283202c	 add         r2, r3, #0x2C
  03550	e59d30c0	 ldr         r3, [sp, #0xC0]
  03554	e5823000	 str         r3, [r2]

; 2212 : 
; 2213 :     if (pPdd->hIntrEvent == NULL)

  03558	e59d3030	 ldr         r3, [sp, #0x30]
  0355c	e283302c	 add         r3, r3, #0x2C
  03560	e5933000	 ldr         r3, [r3]
  03564	e3530000	 cmp         r3, #0
  03568	1a000016	 bne         |$LN4@UfnPdd_Ini@3|

; 2214 :     {
; 2215 :         DEBUGMSG(ZONE_ERROR, (L"UfnPdd_Init() - "
; 2216 :             L"ERROR: Could not create interrupt notification event\r\n"));

  0356c	e59f3478	 ldr         r3, [pc, #0x478]
  03570	e5933440	 ldr         r3, [r3, #0x440]
  03574	e3130001	 tst         r3, #1
  03578	0a00000f	 beq         |$LN67@UfnPdd_Ini@3|
  0357c	e59f3468	 ldr         r3, [pc, #0x468]
  03580	e5933440	 ldr         r3, [r3, #0x440]
  03584	e3130801	 tst         r3, #1, 16
  03588	0a000004	 beq         |$LN65@UfnPdd_Ini@3|
  0358c	e59f04bc	 ldr         r0, [pc, #0x4BC]
  03590	eb000000	 bl          CeLogMsg
  03594	e3a03001	 mov         r3, #1
  03598	e58d30c4	 str         r3, [sp, #0xC4]
  0359c	ea000003	 b           |$LN66@UfnPdd_Ini@3|
  035a0		 |$LN65@UfnPdd_Ini@3|
  035a0	e59f04a8	 ldr         r0, [pc, #0x4A8]
  035a4	eb000000	 bl          NKDbgPrintfW
  035a8	e3a03000	 mov         r3, #0
  035ac	e58d30c4	 str         r3, [sp, #0xC4]
  035b0		 |$LN66@UfnPdd_Ini@3|
  035b0	e3a03001	 mov         r3, #1
  035b4	e58d30c8	 str         r3, [sp, #0xC8]
  035b8	ea000001	 b           |$LN68@UfnPdd_Ini@3|
  035bc		 |$LN67@UfnPdd_Ini@3|
  035bc	e3a03000	 mov         r3, #0
  035c0	e58d30c8	 str         r3, [sp, #0xC8]
  035c4		 |$LN68@UfnPdd_Ini@3|

; 2217 :         goto InitClean;

  035c4	ea0000e3	 b           |$InitClean$45080|
  035c8		 |$LN4@UfnPdd_Ini@3|

; 2218 :     }
; 2219 : 
; 2220 :     DEBUGMSG((ZONE_INIT && ZONE_INTERRUPTS), (L"UfnPdd_Init() - "
; 2221 :         L"Associating Interrupt Event with System Interrupt 0x%08X...\r\n", pPdd->sysIntr));

  035c8	e59f341c	 ldr         r3, [pc, #0x41C]
  035cc	e5933440	 ldr         r3, [r3, #0x440]
  035d0	e3130004	 tst         r3, #4
  035d4	0a000019	 beq         |$LN69@UfnPdd_Ini@3|
  035d8	e59f340c	 ldr         r3, [pc, #0x40C]
  035dc	e5933440	 ldr         r3, [r3, #0x440]
  035e0	e3130c01	 tst         r3, #1, 24
  035e4	0a000015	 beq         |$LN69@UfnPdd_Ini@3|
  035e8	e59f33fc	 ldr         r3, [pc, #0x3FC]
  035ec	e5933440	 ldr         r3, [r3, #0x440]
  035f0	e3130801	 tst         r3, #1, 16
  035f4	0a000007	 beq         |$LN70@UfnPdd_Ini@3|
  035f8	e59d3030	 ldr         r3, [sp, #0x30]
  035fc	e2833028	 add         r3, r3, #0x28
  03600	e5931000	 ldr         r1, [r3]
  03604	e59f0440	 ldr         r0, [pc, #0x440]
  03608	eb000000	 bl          CeLogMsg
  0360c	e3a03001	 mov         r3, #1
  03610	e58d30cc	 str         r3, [sp, #0xCC]
  03614	ea000006	 b           |$LN71@UfnPdd_Ini@3|
  03618		 |$LN70@UfnPdd_Ini@3|
  03618	e59d3030	 ldr         r3, [sp, #0x30]
  0361c	e2833028	 add         r3, r3, #0x28
  03620	e5931000	 ldr         r1, [r3]
  03624	e59f0420	 ldr         r0, [pc, #0x420]
  03628	eb000000	 bl          NKDbgPrintfW
  0362c	e3a03000	 mov         r3, #0
  03630	e58d30cc	 str         r3, [sp, #0xCC]
  03634		 |$LN71@UfnPdd_Ini@3|
  03634	e3a03001	 mov         r3, #1
  03638	e58d30d0	 str         r3, [sp, #0xD0]
  0363c	ea000001	 b           |$LN72@UfnPdd_Ini@3|
  03640		 |$LN69@UfnPdd_Ini@3|
  03640	e3a03000	 mov         r3, #0
  03644	e58d30d0	 str         r3, [sp, #0xD0]
  03648		 |$LN72@UfnPdd_Ini@3|

; 2222 : 
; 2223 :     // Initialize interrupt
; 2224 :     if (!InterruptInitialize(pPdd->sysIntr, pPdd->hIntrEvent, NULL, 0))

  03648	e3a03000	 mov         r3, #0
  0364c	e3a02000	 mov         r2, #0
  03650	e59d1030	 ldr         r1, [sp, #0x30]
  03654	e281102c	 add         r1, r1, #0x2C
  03658	e5911000	 ldr         r1, [r1]
  0365c	e59d0030	 ldr         r0, [sp, #0x30]
  03660	e2800028	 add         r0, r0, #0x28
  03664	e5900000	 ldr         r0, [r0]
  03668	eb000000	 bl          InterruptInitialize
  0366c	e58d00d4	 str         r0, [sp, #0xD4]
  03670	e59d30d4	 ldr         r3, [sp, #0xD4]
  03674	e3530000	 cmp         r3, #0
  03678	1a000016	 bne         |$LN3@UfnPdd_Ini@3|

; 2225 :     {
; 2226 :         DEBUGMSG(ZONE_ERROR, (L"UfnPdd_Init() - "
; 2227 :             L"ERROR: Could not initialize interrupt notification event\r\n"));

  0367c	e59f3368	 ldr         r3, [pc, #0x368]
  03680	e5933440	 ldr         r3, [r3, #0x440]
  03684	e3130001	 tst         r3, #1
  03688	0a00000f	 beq         |$LN75@UfnPdd_Ini@3|
  0368c	e59f3358	 ldr         r3, [pc, #0x358]
  03690	e5933440	 ldr         r3, [r3, #0x440]
  03694	e3130801	 tst         r3, #1, 16
  03698	0a000004	 beq         |$LN73@UfnPdd_Ini@3|
  0369c	e59f03a4	 ldr         r0, [pc, #0x3A4]
  036a0	eb000000	 bl          CeLogMsg
  036a4	e3a03001	 mov         r3, #1
  036a8	e58d30d8	 str         r3, [sp, #0xD8]
  036ac	ea000003	 b           |$LN74@UfnPdd_Ini@3|
  036b0		 |$LN73@UfnPdd_Ini@3|
  036b0	e59f0390	 ldr         r0, [pc, #0x390]
  036b4	eb000000	 bl          NKDbgPrintfW
  036b8	e3a03000	 mov         r3, #0
  036bc	e58d30d8	 str         r3, [sp, #0xD8]
  036c0		 |$LN74@UfnPdd_Ini@3|
  036c0	e3a03001	 mov         r3, #1
  036c4	e58d30dc	 str         r3, [sp, #0xDC]
  036c8	ea000001	 b           |$LN76@UfnPdd_Ini@3|
  036cc		 |$LN75@UfnPdd_Ini@3|
  036cc	e3a03000	 mov         r3, #0
  036d0	e58d30dc	 str         r3, [sp, #0xDC]
  036d4		 |$LN76@UfnPdd_Ini@3|

; 2228 :         goto InitClean;

  036d4	ea00009f	 b           |$InitClean$45080|
  036d8		 |$LN3@UfnPdd_Ini@3|

; 2229 :     }
; 2230 : 
; 2231 :     // Run interrupt thread
; 2232 :     pPdd->exitIntrThread = FALSE;

  036d8	e59d3030	 ldr         r3, [sp, #0x30]
  036dc	e2832030	 add         r2, r3, #0x30
  036e0	e3a03000	 mov         r3, #0
  036e4	e5823000	 str         r3, [r2]

; 2233 :     pPdd->hIntrThread    = CreateThread(NULL, 0, InterruptThread, pPdd, 0, NULL);

  036e8	e3a03000	 mov         r3, #0
  036ec	e58d3004	 str         r3, [sp, #4]
  036f0	e3a03000	 mov         r3, #0
  036f4	e58d3000	 str         r3, [sp]
  036f8	e59d3030	 ldr         r3, [sp, #0x30]
  036fc	e59f2340	 ldr         r2, [pc, #0x340]
  03700	e3a01000	 mov         r1, #0
  03704	e3a00000	 mov         r0, #0
  03708	eb000000	 bl          CreateThread
  0370c	e58d00e0	 str         r0, [sp, #0xE0]
  03710	e59d3030	 ldr         r3, [sp, #0x30]
  03714	e2832034	 add         r2, r3, #0x34
  03718	e59d30e0	 ldr         r3, [sp, #0xE0]
  0371c	e5823000	 str         r3, [r2]

; 2234 : 
; 2235 :     if (pPdd->hIntrThread == NULL)

  03720	e59d3030	 ldr         r3, [sp, #0x30]
  03724	e2833034	 add         r3, r3, #0x34
  03728	e5933000	 ldr         r3, [r3]
  0372c	e3530000	 cmp         r3, #0
  03730	1a000016	 bne         |$LN2@UfnPdd_Ini@3|

; 2236 :     {
; 2237 :         DEBUGMSG(ZONE_ERROR, (L"UfnPdd_Init() - "
; 2238 :             L"ERROR: Could not create Interrupt Thread\r\n"));

  03734	e59f32b0	 ldr         r3, [pc, #0x2B0]
  03738	e5933440	 ldr         r3, [r3, #0x440]
  0373c	e3130001	 tst         r3, #1
  03740	0a00000f	 beq         |$LN79@UfnPdd_Ini@3|
  03744	e59f32a0	 ldr         r3, [pc, #0x2A0]
  03748	e5933440	 ldr         r3, [r3, #0x440]
  0374c	e3130801	 tst         r3, #1, 16
  03750	0a000004	 beq         |$LN77@UfnPdd_Ini@3|
  03754	e59f02e4	 ldr         r0, [pc, #0x2E4]
  03758	eb000000	 bl          CeLogMsg
  0375c	e3a03001	 mov         r3, #1
  03760	e58d30e4	 str         r3, [sp, #0xE4]
  03764	ea000003	 b           |$LN78@UfnPdd_Ini@3|
  03768		 |$LN77@UfnPdd_Ini@3|
  03768	e59f02d0	 ldr         r0, [pc, #0x2D0]
  0376c	eb000000	 bl          NKDbgPrintfW
  03770	e3a03000	 mov         r3, #0
  03774	e58d30e4	 str         r3, [sp, #0xE4]
  03778		 |$LN78@UfnPdd_Ini@3|
  03778	e3a03001	 mov         r3, #1
  0377c	e58d30e8	 str         r3, [sp, #0xE8]
  03780	ea000001	 b           |$LN80@UfnPdd_Ini@3|
  03784		 |$LN79@UfnPdd_Ini@3|
  03784	e3a03000	 mov         r3, #0
  03788	e58d30e8	 str         r3, [sp, #0xE8]
  0378c		 |$LN80@UfnPdd_Ini@3|

; 2239 :         goto InitClean;

  0378c	ea000071	 b           |$InitClean$45080|
  03790		 |$LN2@UfnPdd_Ini@3|

; 2240 :     }
; 2241 :     CeSetThreadPriority(pPdd->hIntrThread, pPdd->priority256);

  03790	e59d3030	 ldr         r3, [sp, #0x30]
  03794	e2833008	 add         r3, r3, #8
  03798	e5931000	 ldr         r1, [r3]
  0379c	e59d3030	 ldr         r3, [sp, #0x30]
  037a0	e2833034	 add         r3, r3, #0x34
  037a4	e5930000	 ldr         r0, [r3]
  037a8	eb000000	 bl          CeSetThreadPriority

; 2242 : 
; 2243 :     // Set PDD interface
; 2244 :     pPddIfc->dwVersion         = UFN_PDD_INTERFACE_VERSION;

  037ac	e59d2108	 ldr         r2, [sp, #0x108]
  037b0	e3a03806	 mov         r3, #6, 16
  037b4	e5823000	 str         r3, [r2]

; 2245 :     pPddIfc->dwCapabilities    = UFN_PDD_CAPS_SUPPORTS_FULL_SPEED;

  037b8	e59d3108	 ldr         r3, [sp, #0x108]
  037bc	e2832004	 add         r2, r3, #4
  037c0	e3a03001	 mov         r3, #1
  037c4	e5823000	 str         r3, [r2]

; 2246 :     pPddIfc->dwEndpointCount   = USBD_EP_COUNT;

  037c8	e59d3108	 ldr         r3, [sp, #0x108]
  037cc	e2832008	 add         r2, r3, #8
  037d0	e3a03010	 mov         r3, #0x10
  037d4	e5823000	 str         r3, [r2]

; 2247 :     pPddIfc->pvPddContext      = pPdd;

  037d8	e59d3108	 ldr         r3, [sp, #0x108]
  037dc	e283200c	 add         r2, r3, #0xC
  037e0	e59d3030	 ldr         r3, [sp, #0x30]
  037e4	e5823000	 str         r3, [r2]

; 2248 :     pPddIfc->pfnDeinit         = UfnPdd_Deinit;

  037e8	e59d3108	 ldr         r3, [sp, #0x108]
  037ec	e2832010	 add         r2, r3, #0x10
  037f0	e59f3244	 ldr         r3, [pc, #0x244]
  037f4	e5823000	 str         r3, [r2]

; 2249 :     pPddIfc->pfnIsConfigurationSupportable = UfnPdd_IsConfigurationSupportable;

  037f8	e59d3108	 ldr         r3, [sp, #0x108]
  037fc	e2832014	 add         r2, r3, #0x14
  03800	e59f3230	 ldr         r3, [pc, #0x230]
  03804	e5823000	 str         r3, [r2]

; 2250 :     pPddIfc->pfnIsEndpointSupportable      = UfnPdd_IsEndpointSupportable;

  03808	e59d3108	 ldr         r3, [sp, #0x108]
  0380c	e2832018	 add         r2, r3, #0x18
  03810	e59f321c	 ldr         r3, [pc, #0x21C]
  03814	e5823000	 str         r3, [r2]

; 2251 :     pPddIfc->pfnInitEndpoint   = UfnPdd_InitEndpoint;

  03818	e59d3108	 ldr         r3, [sp, #0x108]
  0381c	e283201c	 add         r2, r3, #0x1C
  03820	e59f3208	 ldr         r3, [pc, #0x208]
  03824	e5823000	 str         r3, [r2]

; 2252 :     pPddIfc->pfnRegisterDevice = UfnPdd_RegisterDevice;

  03828	e59d3108	 ldr         r3, [sp, #0x108]
  0382c	e2832020	 add         r2, r3, #0x20
  03830	e59f31f4	 ldr         r3, [pc, #0x1F4]
  03834	e5823000	 str         r3, [r2]

; 2253 :     pPddIfc->pfnDeregisterDevice           = UfnPdd_DeregisterDevice;

  03838	e59d3108	 ldr         r3, [sp, #0x108]
  0383c	e2832024	 add         r2, r3, #0x24
  03840	e59f31e0	 ldr         r3, [pc, #0x1E0]
  03844	e5823000	 str         r3, [r2]

; 2254 :     pPddIfc->pfnStart          = UfnPdd_Start;

  03848	e59d3108	 ldr         r3, [sp, #0x108]
  0384c	e2832028	 add         r2, r3, #0x28
  03850	e59f31cc	 ldr         r3, [pc, #0x1CC]
  03854	e5823000	 str         r3, [r2]

; 2255 :     pPddIfc->pfnStop           = UfnPdd_Stop;

  03858	e59d3108	 ldr         r3, [sp, #0x108]
  0385c	e283202c	 add         r2, r3, #0x2C
  03860	e59f31b8	 ldr         r3, [pc, #0x1B8]
  03864	e5823000	 str         r3, [r2]

; 2256 :     pPddIfc->pfnIssueTransfer  = UfnPdd_IssueTransfer;

  03868	e59d3108	 ldr         r3, [sp, #0x108]
  0386c	e2832030	 add         r2, r3, #0x30
  03870	e59f31a4	 ldr         r3, [pc, #0x1A4]
  03874	e5823000	 str         r3, [r2]

; 2257 :     pPddIfc->pfnAbortTransfer  = UfnPdd_AbortTransfer;

  03878	e59d3108	 ldr         r3, [sp, #0x108]
  0387c	e2832034	 add         r2, r3, #0x34
  03880	e59f3190	 ldr         r3, [pc, #0x190]
  03884	e5823000	 str         r3, [r2]

; 2258 :     pPddIfc->pfnDeinitEndpoint = UfnPdd_DeinitEndpoint;

  03888	e59d3108	 ldr         r3, [sp, #0x108]
  0388c	e2832038	 add         r2, r3, #0x38
  03890	e59f317c	 ldr         r3, [pc, #0x17C]
  03894	e5823000	 str         r3, [r2]

; 2259 :     pPddIfc->pfnStallEndpoint  = UfnPdd_StallEndpoint;

  03898	e59d3108	 ldr         r3, [sp, #0x108]
  0389c	e283203c	 add         r2, r3, #0x3C
  038a0	e59f3168	 ldr         r3, [pc, #0x168]
  038a4	e5823000	 str         r3, [r2]

; 2260 :     pPddIfc->pfnClearEndpointStall         = UfnPdd_ClearEndpointStall;

  038a8	e59d3108	 ldr         r3, [sp, #0x108]
  038ac	e2832040	 add         r2, r3, #0x40
  038b0	e59f3154	 ldr         r3, [pc, #0x154]
  038b4	e5823000	 str         r3, [r2]

; 2261 :     pPddIfc->pfnSendControlStatusHandshake = UfnPdd_SendControlStatusHandshake;

  038b8	e59d3108	 ldr         r3, [sp, #0x108]
  038bc	e2832044	 add         r2, r3, #0x44
  038c0	e59f3140	 ldr         r3, [pc, #0x140]
  038c4	e5823000	 str         r3, [r2]

; 2262 :     pPddIfc->pfnSetAddress     = UfnPdd_SetAddress;

  038c8	e59d3108	 ldr         r3, [sp, #0x108]
  038cc	e2832048	 add         r2, r3, #0x48
  038d0	e59f312c	 ldr         r3, [pc, #0x12C]
  038d4	e5823000	 str         r3, [r2]

; 2263 :     pPddIfc->pfnIsEndpointHalted           = UfnPdd_IsEndpointHalted;

  038d8	e59d3108	 ldr         r3, [sp, #0x108]
  038dc	e283204c	 add         r2, r3, #0x4C
  038e0	e59f3118	 ldr         r3, [pc, #0x118]
  038e4	e5823000	 str         r3, [r2]

; 2264 :     pPddIfc->pfnInitiateRemoteWakeup       = UfnPdd_InitiateRemoteWakeup;

  038e8	e59d3108	 ldr         r3, [sp, #0x108]
  038ec	e2832050	 add         r2, r3, #0x50
  038f0	e59f3104	 ldr         r3, [pc, #0x104]
  038f4	e5823000	 str         r3, [r2]

; 2265 :     pPddIfc->pfnPowerDown      = UfnPdd_PowerDown;

  038f8	e59d3108	 ldr         r3, [sp, #0x108]
  038fc	e2832054	 add         r2, r3, #0x54
  03900	e59f30f0	 ldr         r3, [pc, #0xF0]
  03904	e5823000	 str         r3, [r2]

; 2266 :     pPddIfc->pfnPowerUp        = UfnPdd_PowerUp;

  03908	e59d3108	 ldr         r3, [sp, #0x108]
  0390c	e2832058	 add         r2, r3, #0x58
  03910	e59f30dc	 ldr         r3, [pc, #0xDC]
  03914	e5823000	 str         r3, [r2]

; 2267 :     pPddIfc->pfnIOControl      = UfnPdd_IOControl;

  03918	e59d3108	 ldr         r3, [sp, #0x108]
  0391c	e283205c	 add         r2, r3, #0x5C
  03920	e59f30c8	 ldr         r3, [pc, #0xC8]
  03924	e5823000	 str         r3, [r2]

; 2268 : 
; 2269 :     // Save MDD context & notify function
; 2270 :     pPdd->pMddContext = pMddContext;

  03928	e59d3030	 ldr         r3, [sp, #0x30]
  0392c	e2832018	 add         r2, r3, #0x18
  03930	e59d3100	 ldr         r3, [sp, #0x100]
  03934	e5823000	 str         r3, [r2]

; 2271 :     pPdd->pfnNotify   = pMddIfc->pfnNotify;

  03938	e59d3104	 ldr         r3, [sp, #0x104]
  0393c	e2831004	 add         r1, r3, #4
  03940	e59d3030	 ldr         r3, [sp, #0x30]
  03944	e283201c	 add         r2, r3, #0x1C
  03948	e5913000	 ldr         r3, [r1]
  0394c	e5823000	 str         r3, [r2]

; 2272 : 
; 2273 :     // Done
; 2274 :     rc = ERROR_SUCCESS;

  03950	e3a03000	 mov         r3, #0
  03954	e58d3008	 str         r3, [sp, #8]
  03958		 |$InitClean$45080|

; 2275 : 
; 2276 : InitClean:
; 2277 :     DEBUGMSG(ZONE_INIT, (_T("UfnPdd_Init() - END\r\n")));

  03958	e59f308c	 ldr         r3, [pc, #0x8C]
  0395c	e5933440	 ldr         r3, [r3, #0x440]
  03960	e3130004	 tst         r3, #4
  03964	0a00000f	 beq         |$LN83@UfnPdd_Ini@3|
  03968	e59f307c	 ldr         r3, [pc, #0x7C]
  0396c	e5933440	 ldr         r3, [r3, #0x440]
  03970	e3130801	 tst         r3, #1, 16
  03974	0a000004	 beq         |$LN81@UfnPdd_Ini@3|
  03978	e59f0068	 ldr         r0, [pc, #0x68]
  0397c	eb000000	 bl          CeLogMsg
  03980	e3a03001	 mov         r3, #1
  03984	e58d30ec	 str         r3, [sp, #0xEC]
  03988	ea000003	 b           |$LN82@UfnPdd_Ini@3|
  0398c		 |$LN81@UfnPdd_Ini@3|
  0398c	e59f0054	 ldr         r0, [pc, #0x54]
  03990	eb000000	 bl          NKDbgPrintfW
  03994	e3a03000	 mov         r3, #0
  03998	e58d30ec	 str         r3, [sp, #0xEC]
  0399c		 |$LN82@UfnPdd_Ini@3|
  0399c	e3a03001	 mov         r3, #1
  039a0	e58d30f0	 str         r3, [sp, #0xF0]
  039a4	ea000001	 b           |$LN84@UfnPdd_Ini@3|
  039a8		 |$LN83@UfnPdd_Ini@3|
  039a8	e3a03000	 mov         r3, #0
  039ac	e58d30f0	 str         r3, [sp, #0xF0]
  039b0		 |$LN84@UfnPdd_Ini@3|

; 2278 : 
; 2279 :     if ( (rc != ERROR_SUCCESS) && (pPdd != NULL) )

  039b0	e59d3008	 ldr         r3, [sp, #8]
  039b4	e3530000	 cmp         r3, #0
  039b8	0a000004	 beq         |$LN1@UfnPdd_Ini@3|
  039bc	e59d3030	 ldr         r3, [sp, #0x30]
  039c0	e3530000	 cmp         r3, #0
  039c4	0a000001	 beq         |$LN1@UfnPdd_Ini@3|

; 2280 :     {
; 2281 :             LocalFree(pPdd);

  039c8	e59d0030	 ldr         r0, [sp, #0x30]
  039cc	eb000000	 bl          LocalFree
  039d0		 |$LN1@UfnPdd_Ini@3|

; 2282 :     }
; 2283 : 
; 2284 :     return rc;

  039d0	e59d3008	 ldr         r3, [sp, #8]
  039d4	e58d3044	 str         r3, [sp, #0x44]

; 2285 : }

  039d8	e59d0044	 ldr         r0, [sp, #0x44]
  039dc	e28dd0f4	 add         sp, sp, #0xF4
  039e0	e89d6000	 ldmia       sp, {sp, lr}
  039e4	e12fff1e	 bx          lr
  039e8		 |$LN88@UfnPdd_Ini@3|
  039e8		 |$LN89@UfnPdd_Ini@3|
  039e8	00000000	 DCD         |??_C@_1CM@MKJADBOK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAN?$AAD?$AA?$AN?$AA?6?$AA?$AA@|
  039ec		 |$LN90@UfnPdd_Ini@3|
  039ec	00000000	 DCD         |dpCurSettings|
  039f0		 |$LN91@UfnPdd_Ini@3|
  039f0	00000000	 DCD         |UfnPdd_IOControl|
  039f4		 |$LN92@UfnPdd_Ini@3|
  039f4	00000000	 DCD         |UfnPdd_PowerUp|
  039f8		 |$LN93@UfnPdd_Ini@3|
  039f8	00000000	 DCD         |UfnPdd_PowerDown|
  039fc		 |$LN94@UfnPdd_Ini@3|
  039fc	00000000	 DCD         |UfnPdd_InitiateRemoteWakeup|
  03a00		 |$LN95@UfnPdd_Ini@3|
  03a00	00000000	 DCD         |UfnPdd_IsEndpointHalted|
  03a04		 |$LN96@UfnPdd_Ini@3|
  03a04	00000000	 DCD         |UfnPdd_SetAddress|
  03a08		 |$LN97@UfnPdd_Ini@3|
  03a08	00000000	 DCD         |UfnPdd_SendControlStatusHandshake|
  03a0c		 |$LN98@UfnPdd_Ini@3|
  03a0c	00000000	 DCD         |UfnPdd_ClearEndpointStall|
  03a10		 |$LN99@UfnPdd_Ini@3|
  03a10	00000000	 DCD         |UfnPdd_StallEndpoint|
  03a14		 |$LN100@UfnPdd_Ini@3|
  03a14	00000000	 DCD         |UfnPdd_DeinitEndpoint|
  03a18		 |$LN101@UfnPdd_Ini@3|
  03a18	00000000	 DCD         |UfnPdd_AbortTransfer|
  03a1c		 |$LN102@UfnPdd_Ini@3|
  03a1c	00000000	 DCD         |UfnPdd_IssueTransfer|
  03a20		 |$LN103@UfnPdd_Ini@3|
  03a20	00000000	 DCD         |UfnPdd_Stop|
  03a24		 |$LN104@UfnPdd_Ini@3|
  03a24	00000000	 DCD         |UfnPdd_Start|
  03a28		 |$LN105@UfnPdd_Ini@3|
  03a28	00000000	 DCD         |UfnPdd_DeregisterDevice|
  03a2c		 |$LN106@UfnPdd_Ini@3|
  03a2c	00000000	 DCD         |UfnPdd_RegisterDevice|
  03a30		 |$LN107@UfnPdd_Ini@3|
  03a30	00000000	 DCD         |UfnPdd_InitEndpoint|
  03a34		 |$LN108@UfnPdd_Ini@3|
  03a34	00000000	 DCD         |UfnPdd_IsEndpointSupportable|
  03a38		 |$LN109@UfnPdd_Ini@3|
  03a38	00000000	 DCD         |UfnPdd_IsConfigurationSupportable|
  03a3c		 |$LN110@UfnPdd_Ini@3|
  03a3c	00000000	 DCD         |UfnPdd_Deinit|
  03a40		 |$LN111@UfnPdd_Ini@3|
  03a40	00000000	 DCD         |??_C@_1HG@KNJFGFIE@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt@|
  03a44		 |$LN112@UfnPdd_Ini@3|
  03a44	00000000	 DCD         |InterruptThread|
  03a48		 |$LN113@UfnPdd_Ini@3|
  03a48	00000000	 DCD         |??_C@_1JG@DGLOOCDP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt@|
  03a4c		 |$LN114@UfnPdd_Ini@3|
  03a4c	00000000	 DCD         |??_C@_1JM@HHLJAEDI@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAA?$AAs?$AAs?$AAo?$AAc?$AAi?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAI?$AAn?$AAt?$AAe@|
  03a50		 |$LN115@UfnPdd_Ini@3|
  03a50	00000000	 DCD         |??_C@_1IO@NLPFGFNL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt@|
  03a54		 |$LN116@UfnPdd_Ini@3|
  03a54	00000000	 DCD         |??_C@_1FK@FPIKJCBN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt@|
  03a58		 |$LN117@UfnPdd_Ini@3|
  03a58	00000000	 DCD         |??_C@_1GG@CLKJMIGC@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAI?$AAR@|
  03a5c		 |$LN118@UfnPdd_Ini@3|
  03a5c	01010098	 DCD         0x1010098
  03a60		 |$LN119@UfnPdd_Ini@3|
  03a60	00000000	 DCD         |??_C@_1IK@LFEIGPHL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAM?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?5?$AAI?$AAR?$AAQ?$AAs?$AA?5?$AA?$CF?$AAd?$AA?0@|
  03a64		 |$LN120@UfnPdd_Ini@3|
  03a64	00000000	 DCD         |??_C@_1FG@DEFCKJEP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAu?$AAp?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr@|
  03a68		 |$LN121@UfnPdd_Ini@3|
  03a68	00000000	 DCD         |??_C@_1IC@GHNBPOGP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt@|
  03a6c		 |$LN122@UfnPdd_Ini@3|
  03a6c	00000000	 DCD         |??_C@_1GE@JLKEJEAH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAp?$AAP?$AAd?$AAd?$AA?9?$AA?$DO?$AAh?$AAP?$AAa@|
  03a70		 |$LN123@UfnPdd_Ini@3|
  03a70	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  03a74		 |$LN124@UfnPdd_Ini@3|
  03a74	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  03a78		 |$LN125@UfnPdd_Ini@3|
  03a78	00000000	 DCD         |??_C@_1II@NDCMBDLM@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  03a7c		 |$LN126@UfnPdd_Ini@3|
  03a7c	4805e200	 DCD         0x4805e200
  03a80		 |$LN127@UfnPdd_Ini@3|
  03a80	00000000	 DCD         |??_C@_1IE@ILEICJAP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt@|
  03a84		 |$LN128@UfnPdd_Ini@3|
  03a84	00000000	 DCD         |g_deviceRegParams|
  03a88		 |$LN129@UfnPdd_Ini@3|
  03a88	00000000	 DCD         |??_C@_1HI@GPEGCDBA@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt@|
  03a8c		 |$LN130@UfnPdd_Ini@3|
  03a8c	00000000	 DCD         |??_C@_1HA@GNOIOLGA@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?5@|
  03a90		 |$LN131@UfnPdd_Ini@3|
  03a90	00000000	 DCD         |??_C@_1FG@JHDPPPON@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg?$AA?5?$AAH?$AAa?$AAr@|
  03a94		 |$LN132@UfnPdd_Ini@3|
  03a94	00000000	 DCD         |??_C@_1DA@NEJLIGFJ@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?$AN?$AA?6?$AA?$AA@|
  03a98		 |$M46329|

			 ENDP  ; |UfnPdd_Init|

	EXPORT	|??_C@_1DO@MILNKFFA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAN?$AAD?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@DDHDHJCI@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@KFIHJHKD@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@CJKHIEOA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@KAOFMONA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IK@LNCBGBNA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@PGMBKOGJ@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@GNLKHHJB@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@MIKLGNIO@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@JCGKADEI@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	IMPORT	|InterruptDone|

  00100			 AREA	 |.pdata|, PDATA
|$T46426| DCD	|$LN63@InterruptT|
	DCD	0x40019604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@MILNKFFA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAN?$AAD?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "E", 0x0, "N", 0x0, "D", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@DDHDHJCI@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "S"
	DCB	0x0, "e", 0x0, "t", 0x0, "u", 0x0, "p", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u"
	DCB	0x0, "p", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@KFIHJHKD@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "E"
	DCB	0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "R"
	DCB	0x0, "X", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@CJKHIEOA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "E"
	DCB	0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, " ", 0x0, "0", 0x0, " ", 0x0, "T", 0x0, "X"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@KAOFMONA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "E"
	DCB	0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, " ", 0x0, "0", 0x0, " ", 0x0, "R", 0x0, "X"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@LNCBGBNA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s"
	DCB	0x0, " ", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "g"
	DCB	0x0, "e", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@PGMBKOGJ@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, " ", 0x0, "S", 0x0, "o"
	DCB	0x0, "u", 0x0, "r", 0x0, "c", 0x0, "e", 0x0, ":", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@GNLKHHJB@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "E", 0x0, "x", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@MIKLGNIO@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, " ", 0x0, "E", 0x0, "v"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "S", 0x0, "i"
	DCB	0x0, "g", 0x0, "n", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@JCGKADEI@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?$AN?$AA?6@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "S", 0x0, "T", 0x0, "A", 0x0, "R", 0x0, "T", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  03a98			 AREA	 |.text|, CODE, ARM

  03a98		 |InterruptThread| PROC

; 950  : {

  03a98		 |$LN63@InterruptT|
  03a98	e1a0c00d	 mov         r12, sp
  03a9c	e92d0001	 stmdb       sp!, {r0}
  03aa0	e92d5000	 stmdb       sp!, {r12, lr}
  03aa4	e24dd074	 sub         sp, sp, #0x74
  03aa8		 |$M46423|

; 951  :     USBFN_PDD *pPdd = pPddContext;

  03aa8	e59d307c	 ldr         r3, [sp, #0x7C]
  03aac	e58d300c	 str         r3, [sp, #0xC]

; 952  :     OMAP2420_USBD_REGS *pUSBDRegs = pPdd->pUSBDRegs;

  03ab0	e59d300c	 ldr         r3, [sp, #0xC]
  03ab4	e2833024	 add         r3, r3, #0x24
  03ab8	e5933000	 ldr         r3, [r3]
  03abc	e58d3004	 str         r3, [sp, #4]

; 953  :     DWORD code;
; 954  :     DWORD source;
; 955  :     DWORD ep;
; 956  : 
; 957  :     DEBUGMSG(ZONE_INTERRUPTS, (L"USBD InterruptThread() - START\r\n"));

  03ac0	e59f3600	 ldr         r3, [pc, #0x600]
  03ac4	e5933440	 ldr         r3, [r3, #0x440]
  03ac8	e3130c01	 tst         r3, #1, 24
  03acc	0a00000f	 beq         |$LN19@InterruptT|
  03ad0	e59f35f0	 ldr         r3, [pc, #0x5F0]
  03ad4	e5933440	 ldr         r3, [r3, #0x440]
  03ad8	e3130801	 tst         r3, #1, 16
  03adc	0a000004	 beq         |$LN17@InterruptT|
  03ae0	e59f0604	 ldr         r0, [pc, #0x604]
  03ae4	eb000000	 bl          CeLogMsg
  03ae8	e3a03001	 mov         r3, #1
  03aec	e58d3018	 str         r3, [sp, #0x18]
  03af0	ea000003	 b           |$LN18@InterruptT|
  03af4		 |$LN17@InterruptT|
  03af4	e59f05f0	 ldr         r0, [pc, #0x5F0]
  03af8	eb000000	 bl          NKDbgPrintfW
  03afc	e3a03000	 mov         r3, #0
  03b00	e58d3018	 str         r3, [sp, #0x18]
  03b04		 |$LN18@InterruptT|
  03b04	e3a03001	 mov         r3, #1
  03b08	e58d301c	 str         r3, [sp, #0x1C]
  03b0c	ea000001	 b           |$LN20@InterruptT|
  03b10		 |$LN19@InterruptT|
  03b10	e3a03000	 mov         r3, #0
  03b14	e58d301c	 str         r3, [sp, #0x1C]
  03b18		 |$LN20@InterruptT|
  03b18		 |$LN14@InterruptT|

; 958  : 
; 959  :     while (!pPdd->exitIntrThread)

  03b18	e59d300c	 ldr         r3, [sp, #0xC]
  03b1c	e2833030	 add         r3, r3, #0x30
  03b20	e5933000	 ldr         r3, [r3]
  03b24	e3530000	 cmp         r3, #0
  03b28	1a000149	 bne         |$LN13@InterruptT|

; 960  :     {
; 961  :         // Wait for interrupt
; 962  :         code = WaitForSingleObject(pPdd->hIntrEvent, INFINITE);

  03b2c	e3e01000	 mvn         r1, #0
  03b30	e59d300c	 ldr         r3, [sp, #0xC]
  03b34	e283302c	 add         r3, r3, #0x2C
  03b38	e5930000	 ldr         r0, [r3]
  03b3c	eb000000	 bl          WaitForSingleObject
  03b40	e58d0020	 str         r0, [sp, #0x20]
  03b44	e59d3020	 ldr         r3, [sp, #0x20]
  03b48	e58d3000	 str         r3, [sp]

; 963  : 
; 964  :         DEBUGMSG(ZONE_INTERRUPTS, (L"USBD InterruptThread() - "
; 965  :             L"Interrupt Event Signalled!\r\n"));

  03b4c	e59f3574	 ldr         r3, [pc, #0x574]
  03b50	e5933440	 ldr         r3, [r3, #0x440]
  03b54	e3130c01	 tst         r3, #1, 24
  03b58	0a00000f	 beq         |$LN23@InterruptT|
  03b5c	e59f3564	 ldr         r3, [pc, #0x564]
  03b60	e5933440	 ldr         r3, [r3, #0x440]
  03b64	e3130801	 tst         r3, #1, 16
  03b68	0a000004	 beq         |$LN21@InterruptT|
  03b6c	e59f0574	 ldr         r0, [pc, #0x574]
  03b70	eb000000	 bl          CeLogMsg
  03b74	e3a03001	 mov         r3, #1
  03b78	e58d3024	 str         r3, [sp, #0x24]
  03b7c	ea000003	 b           |$LN22@InterruptT|
  03b80		 |$LN21@InterruptT|
  03b80	e59f0560	 ldr         r0, [pc, #0x560]
  03b84	eb000000	 bl          NKDbgPrintfW
  03b88	e3a03000	 mov         r3, #0
  03b8c	e58d3024	 str         r3, [sp, #0x24]
  03b90		 |$LN22@InterruptT|
  03b90	e3a03001	 mov         r3, #1
  03b94	e58d3028	 str         r3, [sp, #0x28]
  03b98	ea000001	 b           |$LN24@InterruptT|
  03b9c		 |$LN23@InterruptT|
  03b9c	e3a03000	 mov         r3, #0
  03ba0	e58d3028	 str         r3, [sp, #0x28]
  03ba4		 |$LN24@InterruptT|

; 966  : 
; 967  :         if (code != WAIT_OBJECT_0)

  03ba4	e59d3000	 ldr         r3, [sp]
  03ba8	e3530000	 cmp         r3, #0
  03bac	0a000000	 beq         |$LN12@InterruptT|

; 968  :         {
; 969  :             break;

  03bb0	ea000127	 b           |$LN13@InterruptT|
  03bb4		 |$LN12@InterruptT|

; 970  :         }
; 971  : 
; 972  :         // Exit thread when we are told to do so...
; 973  :         if (pPdd->exitIntrThread)

  03bb4	e59d300c	 ldr         r3, [sp, #0xC]
  03bb8	e2833030	 add         r3, r3, #0x30
  03bbc	e5933000	 ldr         r3, [r3]
  03bc0	e3530000	 cmp         r3, #0
  03bc4	0a000016	 beq         |$LN11@InterruptT|

; 974  :         {
; 975  :             DEBUGMSG(ZONE_INTERRUPTS, (L"USBD InterruptThread() - "
; 976  :                 L"Exiting Thread\r\n"));

  03bc8	e59f34f8	 ldr         r3, [pc, #0x4F8]
  03bcc	e5933440	 ldr         r3, [r3, #0x440]
  03bd0	e3130c01	 tst         r3, #1, 24
  03bd4	0a00000f	 beq         |$LN27@InterruptT|
  03bd8	e59f34e8	 ldr         r3, [pc, #0x4E8]
  03bdc	e5933440	 ldr         r3, [r3, #0x440]
  03be0	e3130801	 tst         r3, #1, 16
  03be4	0a000004	 beq         |$LN25@InterruptT|
  03be8	e59f04f4	 ldr         r0, [pc, #0x4F4]
  03bec	eb000000	 bl          CeLogMsg
  03bf0	e3a03001	 mov         r3, #1
  03bf4	e58d302c	 str         r3, [sp, #0x2C]
  03bf8	ea000003	 b           |$LN26@InterruptT|
  03bfc		 |$LN25@InterruptT|
  03bfc	e59f04e0	 ldr         r0, [pc, #0x4E0]
  03c00	eb000000	 bl          NKDbgPrintfW
  03c04	e3a03000	 mov         r3, #0
  03c08	e58d302c	 str         r3, [sp, #0x2C]
  03c0c		 |$LN26@InterruptT|
  03c0c	e3a03001	 mov         r3, #1
  03c10	e58d3030	 str         r3, [sp, #0x30]
  03c14	ea000001	 b           |$LN28@InterruptT|
  03c18		 |$LN27@InterruptT|
  03c18	e3a03000	 mov         r3, #0
  03c1c	e58d3030	 str         r3, [sp, #0x30]
  03c20		 |$LN28@InterruptT|

; 977  :             break;

  03c20	ea00010b	 b           |$LN13@InterruptT|
  03c24		 |$LN11@InterruptT|

; 978  :         }
; 979  : 
; 980  :         if ((pPdd->m_CurrentPowerState == D3) || (pPdd->m_CurrentPowerState == D4))

  03c24	e59d300c	 ldr         r3, [sp, #0xC]
  03c28	e283303c	 add         r3, r3, #0x3C
  03c2c	e5933000	 ldr         r3, [r3]
  03c30	e3530003	 cmp         r3, #3
  03c34	0a000004	 beq         |$LN9@InterruptT|
  03c38	e59d300c	 ldr         r3, [sp, #0xC]
  03c3c	e283303c	 add         r3, r3, #0x3C
  03c40	e5933000	 ldr         r3, [r3]
  03c44	e3530004	 cmp         r3, #4
  03c48	1a000005	 bne         |$LN10@InterruptT|
  03c4c		 |$LN9@InterruptT|

; 981  :         {
; 982  :             pPdd->m_NewPowerState = D2;

  03c4c	e59d300c	 ldr         r3, [sp, #0xC]
  03c50	e2832038	 add         r2, r3, #0x38
  03c54	e3a03002	 mov         r3, #2
  03c58	e5823000	 str         r3, [r2]

; 983  :             UpdateDevicePower(pPdd);

  03c5c	e59d000c	 ldr         r0, [sp, #0xC]
  03c60	eb000000	 bl          UpdateDevicePower
  03c64		 |$LN10@InterruptT|

; 984  :         }
; 985  : 
; 986  :         // Get interrupt source
; 987  :         source = INREG32(&pUSBDRegs->IRQ_SRC);

  03c64	e59d3004	 ldr         r3, [sp, #4]
  03c68	e2833030	 add         r3, r3, #0x30
  03c6c	e5933000	 ldr         r3, [r3]
  03c70	e58d3010	 str         r3, [sp, #0x10]

; 988  : 
; 989  :         DEBUGMSG(ZONE_INTERRUPTS, (L"USBD InterruptThread() - "
; 990  :             L"Interrupt Source: 0x%04X\r\n", (source & 0x07BF)));

  03c74	e59f344c	 ldr         r3, [pc, #0x44C]
  03c78	e5933440	 ldr         r3, [r3, #0x440]
  03c7c	e3130c01	 tst         r3, #1, 24
  03c80	0a000017	 beq         |$LN31@InterruptT|
  03c84	e59f343c	 ldr         r3, [pc, #0x43C]
  03c88	e5933440	 ldr         r3, [r3, #0x440]
  03c8c	e3130801	 tst         r3, #1, 16
  03c90	0a000008	 beq         |$LN29@InterruptT|
  03c94	e59d2010	 ldr         r2, [sp, #0x10]
  03c98	e3a03c07	 mov         r3, #7, 24
  03c9c	e38330bf	 orr         r3, r3, #0xBF
  03ca0	e0021003	 and         r1, r2, r3
  03ca4	e59f0434	 ldr         r0, [pc, #0x434]
  03ca8	eb000000	 bl          CeLogMsg
  03cac	e3a03001	 mov         r3, #1
  03cb0	e58d3034	 str         r3, [sp, #0x34]
  03cb4	ea000007	 b           |$LN30@InterruptT|
  03cb8		 |$LN29@InterruptT|
  03cb8	e59d2010	 ldr         r2, [sp, #0x10]
  03cbc	e3a03c07	 mov         r3, #7, 24
  03cc0	e38330bf	 orr         r3, r3, #0xBF
  03cc4	e0021003	 and         r1, r2, r3
  03cc8	e59f0410	 ldr         r0, [pc, #0x410]
  03ccc	eb000000	 bl          NKDbgPrintfW
  03cd0	e3a03000	 mov         r3, #0
  03cd4	e58d3034	 str         r3, [sp, #0x34]
  03cd8		 |$LN30@InterruptT|
  03cd8	e3a03001	 mov         r3, #1
  03cdc	e58d3038	 str         r3, [sp, #0x38]
  03ce0	ea000001	 b           |$LN32@InterruptT|
  03ce4		 |$LN31@InterruptT|
  03ce4	e3a03000	 mov         r3, #0
  03ce8	e58d3038	 str         r3, [sp, #0x38]
  03cec		 |$LN32@InterruptT|

; 991  : 
; 992  :         // Device state
; 993  :         if ((source & USBD_INT_DS_CHG) != 0 || pPdd->fakeDsChange)

  03cec	e59d3010	 ldr         r3, [sp, #0x10]
  03cf0	e3130008	 tst         r3, #8
  03cf4	1a000004	 bne         |$LN7@InterruptT|
  03cf8	e59d300c	 ldr         r3, [sp, #0xC]
  03cfc	e2833f5a	 add         r3, r3, #0x5A, 30
  03d00	e5933000	 ldr         r3, [r3]
  03d04	e3530000	 cmp         r3, #0
  03d08	0a000022	 beq         |$LN8@InterruptT|
  03d0c		 |$LN7@InterruptT|

; 994  :         {
; 995  :             DEBUGMSG(ZONE_INTERRUPTS, (L"USBD InterruptThread() - "
; 996  :                 L"Processing Device Status Change Interrupt\r\n"));

  03d0c	e59f33b4	 ldr         r3, [pc, #0x3B4]
  03d10	e5933440	 ldr         r3, [r3, #0x440]
  03d14	e3130c01	 tst         r3, #1, 24
  03d18	0a00000f	 beq         |$LN35@InterruptT|
  03d1c	e59f33a4	 ldr         r3, [pc, #0x3A4]
  03d20	e5933440	 ldr         r3, [r3, #0x440]
  03d24	e3130801	 tst         r3, #1, 16
  03d28	0a000004	 beq         |$LN33@InterruptT|
  03d2c	e59f03a8	 ldr         r0, [pc, #0x3A8]
  03d30	eb000000	 bl          CeLogMsg
  03d34	e3a03001	 mov         r3, #1
  03d38	e58d303c	 str         r3, [sp, #0x3C]
  03d3c	ea000003	 b           |$LN34@InterruptT|
  03d40		 |$LN33@InterruptT|
  03d40	e59f0394	 ldr         r0, [pc, #0x394]
  03d44	eb000000	 bl          NKDbgPrintfW
  03d48	e3a03000	 mov         r3, #0
  03d4c	e58d303c	 str         r3, [sp, #0x3C]
  03d50		 |$LN34@InterruptT|
  03d50	e3a03001	 mov         r3, #1
  03d54	e58d3040	 str         r3, [sp, #0x40]
  03d58	ea000001	 b           |$LN36@InterruptT|
  03d5c		 |$LN35@InterruptT|
  03d5c	e3a03000	 mov         r3, #0
  03d60	e58d3040	 str         r3, [sp, #0x40]
  03d64		 |$LN36@InterruptT|

; 997  : 
; 998  :             // Handle device state change
; 999  :             DevStatEvent(pPdd);

  03d64	e59d000c	 ldr         r0, [sp, #0xC]
  03d68	eb000000	 bl          DevStatEvent

; 1000 : 
; 1001 :             // Clear fake DsChange flag
; 1002 :             pPdd->fakeDsChange = FALSE;

  03d6c	e59d300c	 ldr         r3, [sp, #0xC]
  03d70	e2832f5a	 add         r2, r3, #0x5A, 30
  03d74	e3a03000	 mov         r3, #0
  03d78	e5823000	 str         r3, [r2]

; 1003 : 
; 1004 :             if ((source & USBD_INT_DS_CHG) != 0)

  03d7c	e59d3010	 ldr         r3, [sp, #0x10]
  03d80	e3130008	 tst         r3, #8
  03d84	0a000003	 beq         |$LN6@InterruptT|

; 1005 :             {
; 1006 :                 OUTREG32(&pUSBDRegs->IRQ_SRC, USBD_INT_DS_CHG);

  03d88	e59d3004	 ldr         r3, [sp, #4]
  03d8c	e2832030	 add         r2, r3, #0x30
  03d90	e3a03008	 mov         r3, #8
  03d94	e5823000	 str         r3, [r2]
  03d98		 |$LN6@InterruptT|
  03d98		 |$LN8@InterruptT|

; 1007 :             }
; 1008 :         }
; 1009 : 
; 1010 :         // EP0 RX interrupt
; 1011 :         if ((source & USBD_INT_EP0_RX) != 0)

  03d98	e59d3010	 ldr         r3, [sp, #0x10]
  03d9c	e3130002	 tst         r3, #2
  03da0	0a00001c	 beq         |$LN5@InterruptT|

; 1012 :         {
; 1013 :             DEBUGMSG(ZONE_INTERRUPTS, (L"USBD InterruptThread() - "
; 1014 :                 L"Processing Endpoint 0 RX Interrupt\r\n"));

  03da4	e59f331c	 ldr         r3, [pc, #0x31C]
  03da8	e5933440	 ldr         r3, [r3, #0x440]
  03dac	e3130c01	 tst         r3, #1, 24
  03db0	0a00000f	 beq         |$LN39@InterruptT|
  03db4	e59f330c	 ldr         r3, [pc, #0x30C]
  03db8	e5933440	 ldr         r3, [r3, #0x440]
  03dbc	e3130801	 tst         r3, #1, 16
  03dc0	0a000004	 beq         |$LN37@InterruptT|
  03dc4	e59f030c	 ldr         r0, [pc, #0x30C]
  03dc8	eb000000	 bl          CeLogMsg
  03dcc	e3a03001	 mov         r3, #1
  03dd0	e58d3044	 str         r3, [sp, #0x44]
  03dd4	ea000003	 b           |$LN38@InterruptT|
  03dd8		 |$LN37@InterruptT|
  03dd8	e59f02f8	 ldr         r0, [pc, #0x2F8]
  03ddc	eb000000	 bl          NKDbgPrintfW
  03de0	e3a03000	 mov         r3, #0
  03de4	e58d3044	 str         r3, [sp, #0x44]
  03de8		 |$LN38@InterruptT|
  03de8	e3a03001	 mov         r3, #1
  03dec	e58d3048	 str         r3, [sp, #0x48]
  03df0	ea000001	 b           |$LN40@InterruptT|
  03df4		 |$LN39@InterruptT|
  03df4	e3a03000	 mov         r3, #0
  03df8	e58d3048	 str         r3, [sp, #0x48]
  03dfc		 |$LN40@InterruptT|

; 1015 : 
; 1016 :             // Clear source bit
; 1017 :             OUTREG32(&pUSBDRegs->IRQ_SRC, USBD_INT_EP0_RX);

  03dfc	e59d3004	 ldr         r3, [sp, #4]
  03e00	e2832030	 add         r2, r3, #0x30
  03e04	e3a03002	 mov         r3, #2
  03e08	e5823000	 str         r3, [r2]

; 1018 : 
; 1019 :             // Issue next Rx transfer
; 1020 :             IssueRxTransfer(pPdd, 0);

  03e0c	e3a01000	 mov         r1, #0
  03e10	e59d000c	 ldr         r0, [sp, #0xC]
  03e14	eb000000	 bl          IssueRxTransfer
  03e18		 |$LN5@InterruptT|

; 1021 :         }
; 1022 : 
; 1023 :         // EP0 TX interrupt
; 1024 :         if ((source & USBD_INT_EP0_TX) != 0)

  03e18	e59d3010	 ldr         r3, [sp, #0x10]
  03e1c	e3130001	 tst         r3, #1
  03e20	0a00001c	 beq         |$LN4@InterruptT|

; 1025 :         {
; 1026 :             DEBUGMSG(ZONE_INTERRUPTS, (L"USBD InterruptThread() - "
; 1027 :                 L"Processing Endpoint 0 TX Interrupt\r\n"));

  03e24	e59f329c	 ldr         r3, [pc, #0x29C]
  03e28	e5933440	 ldr         r3, [r3, #0x440]
  03e2c	e3130c01	 tst         r3, #1, 24
  03e30	0a00000f	 beq         |$LN43@InterruptT|
  03e34	e59f328c	 ldr         r3, [pc, #0x28C]
  03e38	e5933440	 ldr         r3, [r3, #0x440]
  03e3c	e3130801	 tst         r3, #1, 16
  03e40	0a000004	 beq         |$LN41@InterruptT|
  03e44	e59f0288	 ldr         r0, [pc, #0x288]
  03e48	eb000000	 bl          CeLogMsg
  03e4c	e3a03001	 mov         r3, #1
  03e50	e58d304c	 str         r3, [sp, #0x4C]
  03e54	ea000003	 b           |$LN42@InterruptT|
  03e58		 |$LN41@InterruptT|
  03e58	e59f0274	 ldr         r0, [pc, #0x274]
  03e5c	eb000000	 bl          NKDbgPrintfW
  03e60	e3a03000	 mov         r3, #0
  03e64	e58d304c	 str         r3, [sp, #0x4C]
  03e68		 |$LN42@InterruptT|
  03e68	e3a03001	 mov         r3, #1
  03e6c	e58d3050	 str         r3, [sp, #0x50]
  03e70	ea000001	 b           |$LN44@InterruptT|
  03e74		 |$LN43@InterruptT|
  03e74	e3a03000	 mov         r3, #0
  03e78	e58d3050	 str         r3, [sp, #0x50]
  03e7c		 |$LN44@InterruptT|

; 1028 : 
; 1029 :             // Clear source bit
; 1030 :             OUTREG32(&pUSBDRegs->IRQ_SRC, USBD_INT_EP0_TX);

  03e7c	e59d3004	 ldr         r3, [sp, #4]
  03e80	e2832030	 add         r2, r3, #0x30
  03e84	e3a03001	 mov         r3, #1
  03e88	e5823000	 str         r3, [r2]

; 1031 : 
; 1032 :             // Issue next Tx transfer
; 1033 :             IssueTxTransfer(pPdd, 0);

  03e8c	e3a01000	 mov         r1, #0
  03e90	e59d000c	 ldr         r0, [sp, #0xC]
  03e94	eb000000	 bl          IssueTxTransfer
  03e98		 |$LN4@InterruptT|

; 1034 :         }
; 1035 : 
; 1036 :         // EPn RX interrupt
; 1037 :         if ((source & USBD_INT_EP_RX) != 0)

  03e98	e59d3010	 ldr         r3, [sp, #0x10]
  03e9c	e3130020	 tst         r3, #0x20
  03ea0	0a000024	 beq         |$LN3@InterruptT|

; 1038 :         {
; 1039 :             // Get EP number
; 1040 :             ep = (INREG32(&pUSBDRegs->EP_STAT) >> 8) & USBD_EP_NUM;

  03ea4	e59d3004	 ldr         r3, [sp, #4]
  03ea8	e2833034	 add         r3, r3, #0x34
  03eac	e5933000	 ldr         r3, [r3]
  03eb0	e1a03a03	 mov         r3, r3, lsl #20
  03eb4	e1a03e23	 mov         r3, r3, lsr #28
  03eb8	e58d3008	 str         r3, [sp, #8]

; 1041 : 
; 1042 :             DEBUGMSG(ZONE_INTERRUPTS, (L"USBD InterruptThread() - "
; 1043 :                 L"Processing Endpoint %d RX Interrupt\r\n", ep));

  03ebc	e59f3204	 ldr         r3, [pc, #0x204]
  03ec0	e5933440	 ldr         r3, [r3, #0x440]
  03ec4	e3130c01	 tst         r3, #1, 24
  03ec8	0a000011	 beq         |$LN47@InterruptT|
  03ecc	e59f31f4	 ldr         r3, [pc, #0x1F4]
  03ed0	e5933440	 ldr         r3, [r3, #0x440]
  03ed4	e3130801	 tst         r3, #1, 16
  03ed8	0a000005	 beq         |$LN45@InterruptT|
  03edc	e59d1008	 ldr         r1, [sp, #8]
  03ee0	e59f01e8	 ldr         r0, [pc, #0x1E8]
  03ee4	eb000000	 bl          CeLogMsg
  03ee8	e3a03001	 mov         r3, #1
  03eec	e58d3054	 str         r3, [sp, #0x54]
  03ef0	ea000004	 b           |$LN46@InterruptT|
  03ef4		 |$LN45@InterruptT|
  03ef4	e59d1008	 ldr         r1, [sp, #8]
  03ef8	e59f01d0	 ldr         r0, [pc, #0x1D0]
  03efc	eb000000	 bl          NKDbgPrintfW
  03f00	e3a03000	 mov         r3, #0
  03f04	e58d3054	 str         r3, [sp, #0x54]
  03f08		 |$LN46@InterruptT|
  03f08	e3a03001	 mov         r3, #1
  03f0c	e58d3058	 str         r3, [sp, #0x58]
  03f10	ea000001	 b           |$LN48@InterruptT|
  03f14		 |$LN47@InterruptT|
  03f14	e3a03000	 mov         r3, #0
  03f18	e58d3058	 str         r3, [sp, #0x58]
  03f1c		 |$LN48@InterruptT|

; 1044 : 
; 1045 :             // Clear source bit
; 1046 :             OUTREG32(&pUSBDRegs->IRQ_SRC, USBD_INT_EP_RX);

  03f1c	e59d3004	 ldr         r3, [sp, #4]
  03f20	e2832030	 add         r2, r3, #0x30
  03f24	e3a03020	 mov         r3, #0x20
  03f28	e5823000	 str         r3, [r2]

; 1047 : 
; 1048 :             // Handle event
; 1049 :             IssueRxTransfer(pPdd, ep);

  03f2c	e59d1008	 ldr         r1, [sp, #8]
  03f30	e59d000c	 ldr         r0, [sp, #0xC]
  03f34	eb000000	 bl          IssueRxTransfer
  03f38		 |$LN3@InterruptT|

; 1050 :         }
; 1051 : 
; 1052 :         // EPn TX interrupt
; 1053 :         if ((source & USBD_INT_EP_TX) != 0)

  03f38	e59d3010	 ldr         r3, [sp, #0x10]
  03f3c	e3130010	 tst         r3, #0x10
  03f40	0a000023	 beq         |$LN2@InterruptT|

; 1054 :         {
; 1055 :             // Get EP number
; 1056 :             ep = INREG32(&pUSBDRegs->EP_STAT) & USBD_EP_NUM;

  03f44	e59d3004	 ldr         r3, [sp, #4]
  03f48	e2833034	 add         r3, r3, #0x34
  03f4c	e5933000	 ldr         r3, [r3]
  03f50	e203300f	 and         r3, r3, #0xF
  03f54	e58d3008	 str         r3, [sp, #8]

; 1057 : 
; 1058 :             DEBUGMSG(ZONE_INTERRUPTS, (L"USBD InterruptThread() - "
; 1059 :                 L"Processing Endpoint %d RX Interrupt\r\n", ep));

  03f58	e59f3168	 ldr         r3, [pc, #0x168]
  03f5c	e5933440	 ldr         r3, [r3, #0x440]
  03f60	e3130c01	 tst         r3, #1, 24
  03f64	0a000011	 beq         |$LN51@InterruptT|
  03f68	e59f3158	 ldr         r3, [pc, #0x158]
  03f6c	e5933440	 ldr         r3, [r3, #0x440]
  03f70	e3130801	 tst         r3, #1, 16
  03f74	0a000005	 beq         |$LN49@InterruptT|
  03f78	e59d1008	 ldr         r1, [sp, #8]
  03f7c	e59f014c	 ldr         r0, [pc, #0x14C]
  03f80	eb000000	 bl          CeLogMsg
  03f84	e3a03001	 mov         r3, #1
  03f88	e58d305c	 str         r3, [sp, #0x5C]
  03f8c	ea000004	 b           |$LN50@InterruptT|
  03f90		 |$LN49@InterruptT|
  03f90	e59d1008	 ldr         r1, [sp, #8]
  03f94	e59f0134	 ldr         r0, [pc, #0x134]
  03f98	eb000000	 bl          NKDbgPrintfW
  03f9c	e3a03000	 mov         r3, #0
  03fa0	e58d305c	 str         r3, [sp, #0x5C]
  03fa4		 |$LN50@InterruptT|
  03fa4	e3a03001	 mov         r3, #1
  03fa8	e58d3060	 str         r3, [sp, #0x60]
  03fac	ea000001	 b           |$LN52@InterruptT|
  03fb0		 |$LN51@InterruptT|
  03fb0	e3a03000	 mov         r3, #0
  03fb4	e58d3060	 str         r3, [sp, #0x60]
  03fb8		 |$LN52@InterruptT|

; 1060 : 
; 1061 :             // Clear source bit
; 1062 :             OUTREG32(&pUSBDRegs->IRQ_SRC, USBD_INT_EP_TX);

  03fb8	e59d3004	 ldr         r3, [sp, #4]
  03fbc	e2832030	 add         r2, r3, #0x30
  03fc0	e3a03010	 mov         r3, #0x10
  03fc4	e5823000	 str         r3, [r2]

; 1063 : 
; 1064 :             // Handle event
; 1065 :             IssueTxTransfer(pPdd, ep);

  03fc8	e59d1008	 ldr         r1, [sp, #8]
  03fcc	e59d000c	 ldr         r0, [sp, #0xC]
  03fd0	eb000000	 bl          IssueTxTransfer
  03fd4		 |$LN2@InterruptT|

; 1066 :         }
; 1067 : 
; 1068 :         // Setup Packet
; 1069 :         if ((source & USBD_INT_SETUP) != 0)

  03fd4	e59d3010	 ldr         r3, [sp, #0x10]
  03fd8	e3130004	 tst         r3, #4
  03fdc	0a000017	 beq         |$LN1@InterruptT|

; 1070 :         {
; 1071 :             DEBUGMSG(ZONE_INTERRUPTS, (L"USBD InterruptThread() - "
; 1072 :                 L"Processing Setup Interrupt\r\n"));

  03fe0	e59f30e0	 ldr         r3, [pc, #0xE0]
  03fe4	e5933440	 ldr         r3, [r3, #0x440]
  03fe8	e3130c01	 tst         r3, #1, 24
  03fec	0a00000f	 beq         |$LN55@InterruptT|
  03ff0	e59f30d0	 ldr         r3, [pc, #0xD0]
  03ff4	e5933440	 ldr         r3, [r3, #0x440]
  03ff8	e3130801	 tst         r3, #1, 16
  03ffc	0a000004	 beq         |$LN53@InterruptT|
  04000	e59f00c4	 ldr         r0, [pc, #0xC4]
  04004	eb000000	 bl          CeLogMsg
  04008	e3a03001	 mov         r3, #1
  0400c	e58d3064	 str         r3, [sp, #0x64]
  04010	ea000003	 b           |$LN54@InterruptT|
  04014		 |$LN53@InterruptT|
  04014	e59f00b0	 ldr         r0, [pc, #0xB0]
  04018	eb000000	 bl          NKDbgPrintfW
  0401c	e3a03000	 mov         r3, #0
  04020	e58d3064	 str         r3, [sp, #0x64]
  04024		 |$LN54@InterruptT|
  04024	e3a03001	 mov         r3, #1
  04028	e58d3068	 str         r3, [sp, #0x68]
  0402c	ea000001	 b           |$LN56@InterruptT|
  04030		 |$LN55@InterruptT|
  04030	e3a03000	 mov         r3, #0
  04034	e58d3068	 str         r3, [sp, #0x68]
  04038		 |$LN56@InterruptT|

; 1073 : 
; 1074 :             // Reading setup FIFO clears interrupt
; 1075 :             SetupEvent(pPdd);

  04038	e59d000c	 ldr         r0, [sp, #0xC]
  0403c	eb000000	 bl          SetupEvent
  04040		 |$LN1@InterruptT|

; 1076 :         }
; 1077 : 
; 1078 :         // Finish interrupt
; 1079 :         InterruptDone(pPdd->sysIntr);

  04040	e59d300c	 ldr         r3, [sp, #0xC]
  04044	e2833028	 add         r3, r3, #0x28
  04048	e5930000	 ldr         r0, [r3]
  0404c	eb000000	 bl          InterruptDone

; 1080 :     }

  04050	eafffeb0	 b           |$LN14@InterruptT|
  04054		 |$LN13@InterruptT|

; 1081 : 
; 1082 :     DEBUGMSG(ZONE_INTERRUPTS, (L"USBD InterruptThread() - END\r\n"));

  04054	e59f306c	 ldr         r3, [pc, #0x6C]
  04058	e5933440	 ldr         r3, [r3, #0x440]
  0405c	e3130c01	 tst         r3, #1, 24
  04060	0a00000f	 beq         |$LN59@InterruptT|
  04064	e59f305c	 ldr         r3, [pc, #0x5C]
  04068	e5933440	 ldr         r3, [r3, #0x440]
  0406c	e3130801	 tst         r3, #1, 16
  04070	0a000004	 beq         |$LN57@InterruptT|
  04074	e59f0048	 ldr         r0, [pc, #0x48]
  04078	eb000000	 bl          CeLogMsg
  0407c	e3a03001	 mov         r3, #1
  04080	e58d306c	 str         r3, [sp, #0x6C]
  04084	ea000003	 b           |$LN58@InterruptT|
  04088		 |$LN57@InterruptT|
  04088	e59f0034	 ldr         r0, [pc, #0x34]
  0408c	eb000000	 bl          NKDbgPrintfW
  04090	e3a03000	 mov         r3, #0
  04094	e58d306c	 str         r3, [sp, #0x6C]
  04098		 |$LN58@InterruptT|
  04098	e3a03001	 mov         r3, #1
  0409c	e58d3070	 str         r3, [sp, #0x70]
  040a0	ea000001	 b           |$LN60@InterruptT|
  040a4		 |$LN59@InterruptT|
  040a4	e3a03000	 mov         r3, #0
  040a8	e58d3070	 str         r3, [sp, #0x70]
  040ac		 |$LN60@InterruptT|

; 1083 : 
; 1084 :     return ERROR_SUCCESS;

  040ac	e3a03000	 mov         r3, #0
  040b0	e58d3014	 str         r3, [sp, #0x14]

; 1085 : }

  040b4	e59d0014	 ldr         r0, [sp, #0x14]
  040b8	e28dd074	 add         sp, sp, #0x74
  040bc	e89d6000	 ldmia       sp, {sp, lr}
  040c0	e12fff1e	 bx          lr
  040c4		 |$LN64@InterruptT|
  040c4		 |$LN65@InterruptT|
  040c4	00000000	 DCD         |??_C@_1DO@MILNKFFA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAN?$AAD?$AA?$AN?$AA?6?$AA?$AA@|
  040c8		 |$LN66@InterruptT|
  040c8	00000000	 DCD         |dpCurSettings|
  040cc		 |$LN67@InterruptT|
  040cc	00000000	 DCD         |??_C@_1GM@DDHDHJCI@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs@|
  040d0		 |$LN68@InterruptT|
  040d0	00000000	 DCD         |??_C@_1HO@KFIHJHKD@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs@|
  040d4		 |$LN69@InterruptT|
  040d4	00000000	 DCD         |??_C@_1HM@CJKHIEOA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs@|
  040d8		 |$LN70@InterruptT|
  040d8	00000000	 DCD         |??_C@_1HM@KAOFMONA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs@|
  040dc		 |$LN71@InterruptT|
  040dc	00000000	 DCD         |??_C@_1IK@LNCBGBNA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs@|
  040e0		 |$LN72@InterruptT|
  040e0	00000000	 DCD         |??_C@_1GI@PGMBKOGJ@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu@|
  040e4		 |$LN73@InterruptT|
  040e4	00000000	 DCD         |??_C@_1FE@GNLKHHJB@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg@|
  040e8		 |$LN74@InterruptT|
  040e8	00000000	 DCD         |??_C@_1GM@MIKLGNIO@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu@|
  040ec		 |$LN75@InterruptT|
  040ec	00000000	 DCD         |??_C@_1EC@JCGKADEI@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?$AN?$AA?6@|
  040f0		 |$M46424|

			 ENDP  ; |InterruptThread|

	EXPORT	|??_C@_1HK@GBHCNCLD@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAS?$AAe?$AAt?$AAu?$AAp?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAg?$AAi?$AAn?$AAg?$AA?5?$AAU?$AAS?$AAB@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@OMBLCKBJ@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAS?$AAe?$AAt?$AAu?$AAp?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@OLCPJODI@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAS?$AAe?$AAt?$AAu?$AAp?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@PNCHBKFA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAS?$AAe?$AAt?$AAu?$AAp?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAg?$AAi?$AAn?$AAg?$AA?5?$AAU?$AAS?$AAB@| [ DATA ] ; `string'
	EXPORT	|__$ArrayPad$| [ DATA ]

  00108			 AREA	 |.pdata|, PDATA
|$T46463| DCD	|$LN31@SetupEvent|
	DCD	0xc000fa04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@GBHCNCLD@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAS?$AAe?$AAt?$AAu?$AAp?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAg?$AAi?$AAn?$AAg?$AA?5?$AAU?$AAS?$AAB@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "p", 0x0, "E", 0x0, "v", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "g"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "A", 0x0, "d", 0x0, "d", 0x0, "r", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@OMBLCKBJ@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAS?$AAe?$AAt?$AAu?$AAp?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAi@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "p", 0x0, "E", 0x0, "v", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, " ", 0x0, "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "i", 0x0, "s", 0x0, " ", 0x0, "N", 0x0, "O", 0x0, "T"
	DCB	0x0, " ", 0x0, "S", 0x0, "e", 0x0, "l", 0x0, "f", 0x0, "-"
	DCB	0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "e"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@OLCPJODI@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAS?$AAe?$AAt?$AAu?$AAp?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAi@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "p", 0x0, "E", 0x0, "v", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, " ", 0x0, "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "i", 0x0, "s", 0x0, " ", 0x0, "S", 0x0, "e", 0x0, "l"
	DCB	0x0, "f", 0x0, "-", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@PNCHBKFA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAS?$AAe?$AAt?$AAu?$AAp?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAg?$AAi?$AAn?$AAg?$AA?5?$AAU?$AAS?$AAB@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "p", 0x0, "E", 0x0, "v", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "g"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "f", 0x0, "i", 0x0, "g"
	DCB	0x0, "u", 0x0, "r", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00018			 AREA	 |.xdata|, DATA
|$T46459| DCD	0xffffffcc
; Function compile flags: /Odtp

  040f0			 AREA	 |.text|, CODE, ARM

  040f0	00000000	 DCD         |__GSHandlerCheck|
  040f4	00000000	 DCD         |$T46459|

  040f8		 |SetupEvent| PROC

; 360  : {

  040f8		 |$LN31@SetupEvent|
  040f8	e1a0c00d	 mov         r12, sp
  040fc	e92d0001	 stmdb       sp!, {r0}
  04100	e92d5000	 stmdb       sp!, {r12, lr}
  04104	e24dd03c	 sub         sp, sp, #0x3C
  04108		 |$M46460|
  04108	e59f33cc	 ldr         r3, [pc, #0x3CC]
  0410c	e5933000	 ldr         r3, [r3]
  04110	e58d3014	 str         r3, [sp, #0x14]

; 361  :     OMAP2420_USBD_REGS *pUSBDRegs = pPdd->pUSBDRegs;

  04114	e59d3044	 ldr         r3, [sp, #0x44]
  04118	e2833024	 add         r3, r3, #0x24
  0411c	e5933000	 ldr         r3, [r3]
  04120	e58d3004	 str         r3, [sp, #4]

; 362  :     DWORD rawFifoData = 0x00000000;

  04124	e3a03000	 mov         r3, #0
  04128	e58d3000	 str         r3, [sp]

; 363  :     WORD data[4];
; 364  :     USB_DEVICE_REQUEST *pSetup = (USB_DEVICE_REQUEST*)data;

  0412c	e28d300c	 add         r3, sp, #0xC
  04130	e58d3008	 str         r3, [sp, #8]
  04134		 |$LN8@SetupEvent|

; 365  : 
; 366  : 
; 367  :     do {
; 368  :         // Select setup FIFO (this clears USBD_INT_SETUP flag)
; 369  :         SelectSetup(pPdd);

  04134	e59d0044	 ldr         r0, [sp, #0x44]
  04138	eb000000	 bl          SelectSetup

; 370  : 
; 371  :         // Read setup data
; 372  :         rawFifoData = INREG32(&pUSBDRegs->DATA);

  0413c	e59d3004	 ldr         r3, [sp, #4]
  04140	e2833008	 add         r3, r3, #8
  04144	e5933000	 ldr         r3, [r3]
  04148	e58d3000	 str         r3, [sp]

; 373  :         data[0]     = (WORD)(rawFifoData & 0x0000FFFF);

  0414c	e59d2000	 ldr         r2, [sp]
  04150	e3a03cff	 mov         r3, #0xFF, 24
  04154	e38330ff	 orr         r3, r3, #0xFF
  04158	e0023003	 and         r3, r2, r3
  0415c	e1a03803	 mov         r3, r3, lsl #16
  04160	e1a03823	 mov         r3, r3, lsr #16
  04164	e1cd30bc	 strh        r3, [sp, #0xC]

; 374  : 
; 375  :         rawFifoData = INREG32(&pUSBDRegs->DATA);

  04168	e59d3004	 ldr         r3, [sp, #4]
  0416c	e2833008	 add         r3, r3, #8
  04170	e5933000	 ldr         r3, [r3]
  04174	e58d3000	 str         r3, [sp]

; 376  :         data[1]     = (WORD)(rawFifoData & 0x0000FFFF);

  04178	e59d2000	 ldr         r2, [sp]
  0417c	e3a03cff	 mov         r3, #0xFF, 24
  04180	e38330ff	 orr         r3, r3, #0xFF
  04184	e0023003	 and         r3, r2, r3
  04188	e1a03803	 mov         r3, r3, lsl #16
  0418c	e1a03823	 mov         r3, r3, lsr #16
  04190	e1cd30be	 strh        r3, [sp, #0xE]

; 377  : 
; 378  :         rawFifoData = INREG32(&pUSBDRegs->DATA);

  04194	e59d3004	 ldr         r3, [sp, #4]
  04198	e2833008	 add         r3, r3, #8
  0419c	e5933000	 ldr         r3, [r3]
  041a0	e58d3000	 str         r3, [sp]

; 379  :         data[2]     = (WORD)(rawFifoData & 0x0000FFFF);

  041a4	e59d2000	 ldr         r2, [sp]
  041a8	e3a03cff	 mov         r3, #0xFF, 24
  041ac	e38330ff	 orr         r3, r3, #0xFF
  041b0	e0023003	 and         r3, r2, r3
  041b4	e1a03803	 mov         r3, r3, lsl #16
  041b8	e1a03823	 mov         r3, r3, lsr #16
  041bc	e1cd31b0	 strh        r3, [sp, #0x10]

; 380  : 
; 381  :         rawFifoData = INREG32(&pUSBDRegs->DATA);

  041c0	e59d3004	 ldr         r3, [sp, #4]
  041c4	e2833008	 add         r3, r3, #8
  041c8	e5933000	 ldr         r3, [r3]
  041cc	e58d3000	 str         r3, [sp]

; 382  :         data[3]     = (WORD)(rawFifoData & 0x0000FFFF);

  041d0	e59d2000	 ldr         r2, [sp]
  041d4	e3a03cff	 mov         r3, #0xFF, 24
  041d8	e38330ff	 orr         r3, r3, #0xFF
  041dc	e0023003	 and         r3, r2, r3
  041e0	e1a03803	 mov         r3, r3, lsl #16
  041e4	e1a03823	 mov         r3, r3, lsr #16
  041e8	e1cd31b2	 strh        r3, [sp, #0x12]

; 383  : 
; 384  :         // Deselect setup FIFO
; 385  :         DeselectSetup(pPdd);

  041ec	e59d0044	 ldr         r0, [sp, #0x44]
  041f0	eb000000	 bl          DeselectSetup

; 386  :     } while ((INREG32(&pUSBDRegs->IRQ_SRC) & USBD_INT_SETUP) != 0);

  041f4	e59d3004	 ldr         r3, [sp, #4]
  041f8	e2833030	 add         r3, r3, #0x30
  041fc	e5933000	 ldr         r3, [r3]
  04200	e3130004	 tst         r3, #4
  04204	1affffca	 bne         |$LN8@SetupEvent|

; 387  : /*
; 388  :     DEBUGMSG(ZONE_INIT, (L"USBD SetupEvent() - data[0] = 0x%04X\r\n", data[0]));
; 389  :     DEBUGMSG(ZONE_INIT, (L"USBD SetupEvent() - data[1] = 0x%04X\r\n", data[1]));
; 390  :     DEBUGMSG(ZONE_INIT, (L"USBD SetupEvent() - data[2] = 0x%04X\r\n", data[2]));
; 391  :     DEBUGMSG(ZONE_INIT, (L"USBD SetupEvent() - data[3] = 0x%04X\r\n", data[3]));
; 392  : 
; 393  :     // Make sure we are interpreting the above data correctly.
; 394  :     DEBUGMSG(ZONE_INIT, (L"USBD SetupEvent() - pSetup->bmRequestType = 0x%02X\r\n", pSetup->bmRequestType));
; 395  :     DEBUGMSG(ZONE_INIT, (L"USBD SetupEvent() - pSetup->bRequest      = 0x%02X\r\n", pSetup->bRequest));
; 396  :     DEBUGMSG(ZONE_INIT, (L"USBD SetupEvent() - pSetup->wValue        = 0x%04X\r\n", pSetup->wValue));
; 397  :     DEBUGMSG(ZONE_INIT, (L"USBD SetupEvent() - pSetup->wIndex        = 0x%04X\r\n", pSetup->wIndex));
; 398  :     DEBUGMSG(ZONE_INIT, (L"USBD SetupEvent() - pSetup->wLength       = 0x%04X\r\n", pSetup->wLength));
; 399  : */
; 400  :     // Save setup packet direction & size for later use
; 401  :     pPdd->setupDirRx = (pSetup->bmRequestType & 0x80) == 0;

  04208	e59d3008	 ldr         r3, [sp, #8]
  0420c	e5d33000	 ldrb        r3, [r3]
  04210	e3130080	 tst         r3, #0x80
  04214	1a000002	 bne         |$LN11@SetupEvent|
  04218	e3a03001	 mov         r3, #1
  0421c	e58d3018	 str         r3, [sp, #0x18]
  04220	ea000001	 b           |$LN12@SetupEvent|
  04224		 |$LN11@SetupEvent|
  04224	e3a03000	 mov         r3, #0
  04228	e58d3018	 str         r3, [sp, #0x18]
  0422c		 |$LN12@SetupEvent|
  0422c	e59d3044	 ldr         r3, [sp, #0x44]
  04230	e2832048	 add         r2, r3, #0x48
  04234	e59d3018	 ldr         r3, [sp, #0x18]
  04238	e5823000	 str         r3, [r2]

; 402  :     pPdd->setupCount = pSetup->wLength;

  0423c	e59d3008	 ldr         r3, [sp, #8]
  04240	e2830006	 add         r0, r3, #6
  04244	e59d3044	 ldr         r3, [sp, #0x44]
  04248	e283104c	 add         r1, r3, #0x4C
  0424c	e5d03001	 ldrb        r3, [r0, #1]
  04250	e1a03403	 mov         r3, r3, lsl #8
  04254	e1a02803	 mov         r2, r3, lsl #16
  04258	e1a02822	 mov         r2, r2, lsr #16
  0425c	e5d03000	 ldrb        r3, [r0]
  04260	e1833002	 orr         r3, r3, r2
  04264	e1c130b0	 strh        r3, [r1]

; 403  : 
; 404  :     // MDD doesn't call PDD back on configure message
; 405  :     if ((pSetup->bmRequestType == 0) && (pSetup->bRequest == USB_REQUEST_SET_CONFIGURATION))

  04268	e59d3008	 ldr         r3, [sp, #8]
  0426c	e5d33000	 ldrb        r3, [r3]
  04270	e3530000	 cmp         r3, #0
  04274	1a000084	 bne         |$LN5@SetupEvent|
  04278	e59d3008	 ldr         r3, [sp, #8]
  0427c	e2833001	 add         r3, r3, #1
  04280	e5d33000	 ldrb        r3, [r3]
  04284	e3530009	 cmp         r3, #9
  04288	1a00007f	 bne         |$LN5@SetupEvent|

; 406  :     {
; 407  :         if (pSetup->wValue != 0)

  0428c	e59d3008	 ldr         r3, [sp, #8]
  04290	e2831002	 add         r1, r3, #2
  04294	e5d13001	 ldrb        r3, [r1, #1]
  04298	e1a03403	 mov         r3, r3, lsl #8
  0429c	e1a02803	 mov         r2, r3, lsl #16
  042a0	e1a02822	 mov         r2, r2, lsr #16
  042a4	e5d13000	 ldrb        r3, [r1]
  042a8	e1833002	 orr         r3, r3, r2
  042ac	e3530000	 cmp         r3, #0
  042b0	0a00005b	 beq         |$LN4@SetupEvent|

; 408  :         {
; 409  :             DEBUGMSG(ZONE_INIT, (L"USBD SetupEvent() - "
; 410  :                 L"Changing USB Device state to Configured\r\n"));

  042b4	e59f3210	 ldr         r3, [pc, #0x210]
  042b8	e5933440	 ldr         r3, [r3, #0x440]
  042bc	e3130004	 tst         r3, #4
  042c0	0a00000f	 beq         |$LN15@SetupEvent|
  042c4	e59f3200	 ldr         r3, [pc, #0x200]
  042c8	e5933440	 ldr         r3, [r3, #0x440]
  042cc	e3130801	 tst         r3, #1, 16
  042d0	0a000004	 beq         |$LN13@SetupEvent|
  042d4	e59f01fc	 ldr         r0, [pc, #0x1FC]
  042d8	eb000000	 bl          CeLogMsg
  042dc	e3a03001	 mov         r3, #1
  042e0	e58d301c	 str         r3, [sp, #0x1C]
  042e4	ea000003	 b           |$LN14@SetupEvent|
  042e8		 |$LN13@SetupEvent|
  042e8	e59f01e8	 ldr         r0, [pc, #0x1E8]
  042ec	eb000000	 bl          NKDbgPrintfW
  042f0	e3a03000	 mov         r3, #0
  042f4	e58d301c	 str         r3, [sp, #0x1C]
  042f8		 |$LN14@SetupEvent|
  042f8	e3a03001	 mov         r3, #1
  042fc	e58d3020	 str         r3, [sp, #0x20]
  04300	ea000001	 b           |$LN16@SetupEvent|
  04304		 |$LN15@SetupEvent|
  04304	e3a03000	 mov         r3, #0
  04308	e58d3020	 str         r3, [sp, #0x20]
  0430c		 |$LN16@SetupEvent|

; 411  : 
; 412  :             // Move device to configured state
; 413  :             OUTREG32(&pUSBDRegs->SYSCON2, USBD_SYSCON2_DEV_CFG);

  0430c	e59d3004	 ldr         r3, [sp, #4]
  04310	e283201c	 add         r2, r3, #0x1C
  04314	e3a03008	 mov         r3, #8
  04318	e5823000	 str         r3, [r2]

; 414  : 
; 415  :             // Set self powered flag
; 416  :             if (pPdd->selfPowered)

  0431c	e59d3044	 ldr         r3, [sp, #0x44]
  04320	e2833044	 add         r3, r3, #0x44
  04324	e5933000	 ldr         r3, [r3]
  04328	e3530000	 cmp         r3, #0
  0432c	0a00001d	 beq         |$LN3@SetupEvent|

; 417  :             {
; 418  :                 DEBUGMSG(ZONE_INIT, (L"USBD SetupEvent() - "
; 419  :                     L"USB Device is Self-Powered\r\n"));

  04330	e59f3194	 ldr         r3, [pc, #0x194]
  04334	e5933440	 ldr         r3, [r3, #0x440]
  04338	e3130004	 tst         r3, #4
  0433c	0a00000f	 beq         |$LN19@SetupEvent|
  04340	e59f3184	 ldr         r3, [pc, #0x184]
  04344	e5933440	 ldr         r3, [r3, #0x440]
  04348	e3130801	 tst         r3, #1, 16
  0434c	0a000004	 beq         |$LN17@SetupEvent|
  04350	e59f017c	 ldr         r0, [pc, #0x17C]
  04354	eb000000	 bl          CeLogMsg
  04358	e3a03001	 mov         r3, #1
  0435c	e58d3024	 str         r3, [sp, #0x24]
  04360	ea000003	 b           |$LN18@SetupEvent|
  04364		 |$LN17@SetupEvent|
  04364	e59f0168	 ldr         r0, [pc, #0x168]
  04368	eb000000	 bl          NKDbgPrintfW
  0436c	e3a03000	 mov         r3, #0
  04370	e58d3024	 str         r3, [sp, #0x24]
  04374		 |$LN18@SetupEvent|
  04374	e3a03001	 mov         r3, #1
  04378	e58d3028	 str         r3, [sp, #0x28]
  0437c	ea000001	 b           |$LN20@SetupEvent|
  04380		 |$LN19@SetupEvent|
  04380	e3a03000	 mov         r3, #0
  04384	e58d3028	 str         r3, [sp, #0x28]
  04388		 |$LN20@SetupEvent|

; 420  :                 SETREG32(&pUSBDRegs->SYSCON1, USBD_SYSCON1_SELF_PWR);

  04388	e59d3004	 ldr         r3, [sp, #4]
  0438c	e2833018	 add         r3, r3, #0x18
  04390	e5933000	 ldr         r3, [r3]
  04394	e3832004	 orr         r2, r3, #4
  04398	e59d3004	 ldr         r3, [sp, #4]
  0439c	e2833018	 add         r3, r3, #0x18
  043a0	e5832000	 str         r2, [r3]

; 421  :             }
; 422  :             else

  043a4	ea00001d	 b           |$LN2@SetupEvent|
  043a8		 |$LN3@SetupEvent|

; 423  :             {
; 424  :                 DEBUGMSG(ZONE_INIT, (L"USBD SetupEvent() - "
; 425  :                     L"USB Device is NOT Self-Powered\r\n"));

  043a8	e59f311c	 ldr         r3, [pc, #0x11C]
  043ac	e5933440	 ldr         r3, [r3, #0x440]
  043b0	e3130004	 tst         r3, #4
  043b4	0a00000f	 beq         |$LN23@SetupEvent|
  043b8	e59f310c	 ldr         r3, [pc, #0x10C]
  043bc	e5933440	 ldr         r3, [r3, #0x440]
  043c0	e3130801	 tst         r3, #1, 16
  043c4	0a000004	 beq         |$LN21@SetupEvent|
  043c8	e59f0100	 ldr         r0, [pc, #0x100]
  043cc	eb000000	 bl          CeLogMsg
  043d0	e3a03001	 mov         r3, #1
  043d4	e58d302c	 str         r3, [sp, #0x2C]
  043d8	ea000003	 b           |$LN22@SetupEvent|
  043dc		 |$LN21@SetupEvent|
  043dc	e59f00ec	 ldr         r0, [pc, #0xEC]
  043e0	eb000000	 bl          NKDbgPrintfW
  043e4	e3a03000	 mov         r3, #0
  043e8	e58d302c	 str         r3, [sp, #0x2C]
  043ec		 |$LN22@SetupEvent|
  043ec	e3a03001	 mov         r3, #1
  043f0	e58d3030	 str         r3, [sp, #0x30]
  043f4	ea000001	 b           |$LN24@SetupEvent|
  043f8		 |$LN23@SetupEvent|
  043f8	e3a03000	 mov         r3, #0
  043fc	e58d3030	 str         r3, [sp, #0x30]
  04400		 |$LN24@SetupEvent|

; 426  :                 CLRREG32(&pUSBDRegs->SYSCON1, USBD_SYSCON1_SELF_PWR);

  04400	e59d3004	 ldr         r3, [sp, #4]
  04404	e2833018	 add         r3, r3, #0x18
  04408	e5932000	 ldr         r2, [r3]
  0440c	e3e03004	 mvn         r3, #4
  04410	e0022003	 and         r2, r2, r3
  04414	e59d3004	 ldr         r3, [sp, #4]
  04418	e2833018	 add         r3, r3, #0x18
  0441c	e5832000	 str         r2, [r3]
  04420		 |$LN2@SetupEvent|

; 427  :             }
; 428  :         }
; 429  :         else

  04420	ea000019	 b           |$LN1@SetupEvent|
  04424		 |$LN4@SetupEvent|

; 430  :         {
; 431  :             DEBUGMSG(ZONE_INIT, (L"USBD SetupEvent() - "
; 432  :                 L"Changing USB Device state to Addressed\r\n"));

  04424	e59f30a0	 ldr         r3, [pc, #0xA0]
  04428	e5933440	 ldr         r3, [r3, #0x440]
  0442c	e3130004	 tst         r3, #4
  04430	0a00000f	 beq         |$LN27@SetupEvent|
  04434	e59f3090	 ldr         r3, [pc, #0x90]
  04438	e5933440	 ldr         r3, [r3, #0x440]
  0443c	e3130801	 tst         r3, #1, 16
  04440	0a000004	 beq         |$LN25@SetupEvent|
  04444	e59f007c	 ldr         r0, [pc, #0x7C]
  04448	eb000000	 bl          CeLogMsg
  0444c	e3a03001	 mov         r3, #1
  04450	e58d3034	 str         r3, [sp, #0x34]
  04454	ea000003	 b           |$LN26@SetupEvent|
  04458		 |$LN25@SetupEvent|
  04458	e59f0068	 ldr         r0, [pc, #0x68]
  0445c	eb000000	 bl          NKDbgPrintfW
  04460	e3a03000	 mov         r3, #0
  04464	e58d3034	 str         r3, [sp, #0x34]
  04468		 |$LN26@SetupEvent|
  04468	e3a03001	 mov         r3, #1
  0446c	e58d3038	 str         r3, [sp, #0x38]
  04470	ea000001	 b           |$LN28@SetupEvent|
  04474		 |$LN27@SetupEvent|
  04474	e3a03000	 mov         r3, #0
  04478	e58d3038	 str         r3, [sp, #0x38]
  0447c		 |$LN28@SetupEvent|

; 433  :             OUTREG32(&pUSBDRegs->SYSCON2, USBD_SYSCON2_CLR_CFG);

  0447c	e59d3004	 ldr         r3, [sp, #4]
  04480	e283201c	 add         r2, r3, #0x1C
  04484	e3a03004	 mov         r3, #4
  04488	e5823000	 str         r3, [r2]
  0448c		 |$LN1@SetupEvent|
  0448c		 |$LN5@SetupEvent|

; 434  :         }
; 435  :     }
; 436  : 
; 437  :     // Let MDD process message
; 438  :     pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_SETUP_PACKET, (DWORD)data);

  0448c	e28d200c	 add         r2, sp, #0xC
  04490	e3a01004	 mov         r1, #4
  04494	e59d3044	 ldr         r3, [sp, #0x44]
  04498	e2833018	 add         r3, r3, #0x18
  0449c	e5930000	 ldr         r0, [r3]
  044a0	e59d3044	 ldr         r3, [sp, #0x44]
  044a4	e283301c	 add         r3, r3, #0x1C
  044a8	e5933000	 ldr         r3, [r3]
  044ac	e1a0e00f	 mov         lr, pc
  044b0	e12fff13	 bx          r3

; 360  : {

  044b4	e59d0014	 ldr         r0, [sp, #0x14]
  044b8	eb000000	 bl          __security_check_cookie

; 439  : 
; 440  : }

  044bc	e28dd03c	 add         sp, sp, #0x3C
  044c0	e89d6000	 ldmia       sp, {sp, lr}
  044c4	e12fff1e	 bx          lr
  044c8		 |$LN32@SetupEvent|
  044c8		 |$LN33@SetupEvent|
  044c8	00000000	 DCD         |??_C@_1HK@GBHCNCLD@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAS?$AAe?$AAt?$AAu?$AAp?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAg?$AAi?$AAn?$AAg?$AA?5?$AAU?$AAS?$AAB@|
  044cc		 |$LN34@SetupEvent|
  044cc	00000000	 DCD         |dpCurSettings|
  044d0		 |$LN35@SetupEvent|
  044d0	00000000	 DCD         |??_C@_1GK@OMBLCKBJ@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAS?$AAe?$AAt?$AAu?$AAp?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAi@|
  044d4		 |$LN36@SetupEvent|
  044d4	00000000	 DCD         |??_C@_1GC@OLCPJODI@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAS?$AAe?$AAt?$AAu?$AAp?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAi@|
  044d8		 |$LN37@SetupEvent|
  044d8	00000000	 DCD         |??_C@_1HM@PNCHBKFA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAS?$AAe?$AAt?$AAu?$AAp?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAg?$AAi?$AAn?$AAg?$AA?5?$AAU?$AAS?$AAB@|
  044dc		 |$LN38@SetupEvent|
  044dc	00000000	 DCD         |__security_cookie|
  044e0		 |$M46461|

			 ENDP  ; |SetupEvent|


  00110			 AREA	 |.pdata|, PDATA
|$T46475| DCD	|$LN5@SelectSetu|
	DCD	0x40000803
; Function compile flags: /Odtp

  044e0			 AREA	 |.text|, CODE, ARM

  044e0		 |SelectSetup| PROC

; 192  : {

  044e0		 |$LN5@SelectSetu|
  044e0	e1a0c00d	 mov         r12, sp
  044e4	e92d0001	 stmdb       sp!, {r0}
  044e8	e92d5000	 stmdb       sp!, {r12, lr}
  044ec		 |$M46472|

; 193  :     // Select setup FIFO (this clears USBD_INT_SETUP flag)
; 194  :     Select(pPdd, USBD_EP_NUM_SETUP);

  044ec	e3a01040	 mov         r1, #0x40
  044f0	e59d0008	 ldr         r0, [sp, #8]
  044f4	eb000000	 bl          Select

; 195  : }

  044f8	e89d6000	 ldmia       sp, {sp, lr}
  044fc	e12fff1e	 bx          lr
  04500		 |$M46473|

			 ENDP  ; |SelectSetup|


  00118			 AREA	 |.pdata|, PDATA
|$T46480| DCD	|$LN5@DeselectSe|
	DCD	0x40000803
; Function compile flags: /Odtp

  04500			 AREA	 |.text|, CODE, ARM

  04500		 |DeselectSetup| PROC

; 213  : {

  04500		 |$LN5@DeselectSe|
  04500	e1a0c00d	 mov         r12, sp
  04504	e92d0001	 stmdb       sp!, {r0}
  04508	e92d5000	 stmdb       sp!, {r12, lr}
  0450c		 |$M46477|

; 214  :     Deselect(pPdd, 0);

  0450c	e3a01000	 mov         r1, #0
  04510	e59d0008	 ldr         r0, [sp, #8]
  04514	eb000000	 bl          Deselect

; 215  : }

  04518	e89d6000	 ldmia       sp, {sp, lr}
  0451c	e12fff1e	 bx          lr
  04520		 |$M46478|

			 ENDP  ; |DeselectSetup|

	EXPORT	|??_C@_1HE@LDIGGEBM@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@CINEAEDN@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAp@| [ DATA ] ; `string'

  00120			 AREA	 |.pdata|, PDATA
|$T46519| DCD	|$LN51@IssueRxTra|
	DCD	0xc0015005
|$T46521| DCD	|$LN41@IssueRxTra|
	DCD	0x40000802

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@LDIGGEBM@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "I", 0x0, "s"
	DCB	0x0, "s", 0x0, "u", 0x0, "e", 0x0, "R", 0x0, "x", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e"
	DCB	0x0, "s", 0x0, " ", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "e"
	DCB	0x0, "p", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "X", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@CINEAEDN@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAp@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "I", 0x0, "s"
	DCB	0x0, "s", 0x0, "u", 0x0, "e", 0x0, "R", 0x0, "x", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " "
	DCB	0x0, "p", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, " ", 0x0, "("
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  0001c			 AREA	 |.xdata|, DATA
|$T46517| DCD	0x1
	DCD	|$LN45@IssueRxTra|
	DCD	|$LN46@IssueRxTra|
	DCD	|$LN41@IssueRxTra|
	DCD	|$LN42@IssueRxTra|
; Function compile flags: /Odtp

  04520			 AREA	 |.text|, CODE, ARM

  04520	00000000	 DCD         |__C_specific_handler|
  04524	00000000	 DCD         |$T46517|

  04528		 |IssueRxTransfer| PROC

; 588  : {

  04528		 |$LN51@IssueRxTra|
  04528	e1a0c00d	 mov         r12, sp
  0452c	e92d0003	 stmdb       sp!, {r0, r1}
  04530	e92d5800	 stmdb       sp!, {r11, r12, lr}
  04534	e28db00c	 add         r11, sp, #0xC
  04538	e24dd06c	 sub         sp, sp, #0x6C
  0453c		 |$LN49@IssueRxTra|

; 589  :     OMAP2420_USBD_REGS *pUSBDRegs = pPdd->pUSBDRegs;

  0453c	e59b3000	 ldr         r3, [r11]
  04540	e2833024	 add         r3, r3, #0x24
  04544	e5933000	 ldr         r3, [r3]
  04548	e50b3058	 str         r3, [r11, #-0x58]

; 590  :     STransfer *pTransfer;
; 591  :     BOOL complete = FALSE;

  0454c	e3a03000	 mov         r3, #0
  04550	e50b3048	 str         r3, [r11, #-0x48]

; 592  :     DWORD space, remain;
; 593  :     UCHAR *pBuffer;
; 594  :     DWORD data;
; 595  :     DWORD stat;
; 596  :     DWORD epNum;
; 597  :     DWORD count;
; 598  :     DWORD maxSize;
; 599  : 
; 600  :     // Get active transfer
; 601  :     pTransfer = pPdd->ep[endPoint].pTransfer;

  04554	e59b3000	 ldr         r3, [r11]
  04558	e2831068	 add         r1, r3, #0x68
  0455c	e59b2004	 ldr         r2, [r11, #4]
  04560	e3a03010	 mov         r3, #0x10
  04564	e0030392	 mul         r3, r2, r3
  04568	e0813003	 add         r3, r1, r3
  0456c	e283300c	 add         r3, r3, #0xC
  04570	e5933000	 ldr         r3, [r3]
  04574	e50b3050	 str         r3, [r11, #-0x50]

; 602  : 
; 603  :     DEBUGMSG(ZONE_TRANSFER, (L"USBD IssueRxTransfer() - "
; 604  :         L"EP %d pTransfer 0x%08X (%d, %d, %d)\r\n",
; 605  :                  endPoint,
; 606  :                  pTransfer,
; 607  :                  pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 608  :                  pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 609  :                  pTransfer != NULL ? pTransfer->dwUsbError : -1));

  04578	e59f3500	 ldr         r3, [pc, #0x500]
  0457c	e5933440	 ldr         r3, [r3, #0x440]
  04580	e3130008	 tst         r3, #8
  04584	0a000059	 beq         |$LN34@IssueRxTra|
  04588	e59f34f0	 ldr         r3, [pc, #0x4F0]
  0458c	e5933440	 ldr         r3, [r3, #0x440]
  04590	e3130801	 tst         r3, #1, 16
  04594	0a000029	 beq         |$LN32@IssueRxTra|
  04598	e51b3050	 ldr         r3, [r11, #-0x50]
  0459c	e3530000	 cmp         r3, #0
  045a0	0a000004	 beq         |$LN20@IssueRxTra|
  045a4	e51b3050	 ldr         r3, [r11, #-0x50]
  045a8	e2833014	 add         r3, r3, #0x14
  045ac	e5933000	 ldr         r3, [r3]
  045b0	e50b3034	 str         r3, [r11, #-0x34]
  045b4	ea000001	 b           |$LN21@IssueRxTra|
  045b8		 |$LN20@IssueRxTra|
  045b8	e3e03000	 mvn         r3, #0
  045bc	e50b3034	 str         r3, [r11, #-0x34]
  045c0		 |$LN21@IssueRxTra|
  045c0	e51b3050	 ldr         r3, [r11, #-0x50]
  045c4	e3530000	 cmp         r3, #0
  045c8	0a000004	 beq         |$LN22@IssueRxTra|
  045cc	e51b3050	 ldr         r3, [r11, #-0x50]
  045d0	e2833010	 add         r3, r3, #0x10
  045d4	e5933000	 ldr         r3, [r3]
  045d8	e50b3030	 str         r3, [r11, #-0x30]
  045dc	ea000001	 b           |$LN23@IssueRxTra|
  045e0		 |$LN22@IssueRxTra|
  045e0	e3a03000	 mov         r3, #0
  045e4	e50b3030	 str         r3, [r11, #-0x30]
  045e8		 |$LN23@IssueRxTra|
  045e8	e51b3050	 ldr         r3, [r11, #-0x50]
  045ec	e3530000	 cmp         r3, #0
  045f0	0a000004	 beq         |$LN24@IssueRxTra|
  045f4	e51b3050	 ldr         r3, [r11, #-0x50]
  045f8	e283300c	 add         r3, r3, #0xC
  045fc	e5933000	 ldr         r3, [r3]
  04600	e50b302c	 str         r3, [r11, #-0x2C]
  04604	ea000001	 b           |$LN25@IssueRxTra|
  04608		 |$LN24@IssueRxTra|
  04608	e3a03000	 mov         r3, #0
  0460c	e50b302c	 str         r3, [r11, #-0x2C]
  04610		 |$LN25@IssueRxTra|
  04610	e51b3034	 ldr         r3, [r11, #-0x34]
  04614	e58d3004	 str         r3, [sp, #4]
  04618	e51b3030	 ldr         r3, [r11, #-0x30]
  0461c	e58d3000	 str         r3, [sp]
  04620	e51b302c	 ldr         r3, [r11, #-0x2C]
  04624	e51b2050	 ldr         r2, [r11, #-0x50]
  04628	e59b1004	 ldr         r1, [r11, #4]
  0462c	e59f0450	 ldr         r0, [pc, #0x450]
  04630	eb000000	 bl          CeLogMsg
  04634	e3a03001	 mov         r3, #1
  04638	e50b3028	 str         r3, [r11, #-0x28]
  0463c	ea000028	 b           |$LN33@IssueRxTra|
  04640		 |$LN32@IssueRxTra|
  04640	e51b3050	 ldr         r3, [r11, #-0x50]
  04644	e3530000	 cmp         r3, #0
  04648	0a000004	 beq         |$LN26@IssueRxTra|
  0464c	e51b3050	 ldr         r3, [r11, #-0x50]
  04650	e2833014	 add         r3, r3, #0x14
  04654	e5933000	 ldr         r3, [r3]
  04658	e50b3024	 str         r3, [r11, #-0x24]
  0465c	ea000001	 b           |$LN27@IssueRxTra|
  04660		 |$LN26@IssueRxTra|
  04660	e3e03000	 mvn         r3, #0
  04664	e50b3024	 str         r3, [r11, #-0x24]
  04668		 |$LN27@IssueRxTra|
  04668	e51b3050	 ldr         r3, [r11, #-0x50]
  0466c	e3530000	 cmp         r3, #0
  04670	0a000004	 beq         |$LN28@IssueRxTra|
  04674	e51b3050	 ldr         r3, [r11, #-0x50]
  04678	e2833010	 add         r3, r3, #0x10
  0467c	e5933000	 ldr         r3, [r3]
  04680	e50b3020	 str         r3, [r11, #-0x20]
  04684	ea000001	 b           |$LN29@IssueRxTra|
  04688		 |$LN28@IssueRxTra|
  04688	e3a03000	 mov         r3, #0
  0468c	e50b3020	 str         r3, [r11, #-0x20]
  04690		 |$LN29@IssueRxTra|
  04690	e51b3050	 ldr         r3, [r11, #-0x50]
  04694	e3530000	 cmp         r3, #0
  04698	0a000004	 beq         |$LN30@IssueRxTra|
  0469c	e51b3050	 ldr         r3, [r11, #-0x50]
  046a0	e283300c	 add         r3, r3, #0xC
  046a4	e5933000	 ldr         r3, [r3]
  046a8	e50b301c	 str         r3, [r11, #-0x1C]
  046ac	ea000001	 b           |$LN31@IssueRxTra|
  046b0		 |$LN30@IssueRxTra|
  046b0	e3a03000	 mov         r3, #0
  046b4	e50b301c	 str         r3, [r11, #-0x1C]
  046b8		 |$LN31@IssueRxTra|
  046b8	e51b3024	 ldr         r3, [r11, #-0x24]
  046bc	e58d3004	 str         r3, [sp, #4]
  046c0	e51b3020	 ldr         r3, [r11, #-0x20]
  046c4	e58d3000	 str         r3, [sp]
  046c8	e51b301c	 ldr         r3, [r11, #-0x1C]
  046cc	e51b2050	 ldr         r2, [r11, #-0x50]
  046d0	e59b1004	 ldr         r1, [r11, #4]
  046d4	e59f03a8	 ldr         r0, [pc, #0x3A8]
  046d8	eb000000	 bl          NKDbgPrintfW
  046dc	e3a03000	 mov         r3, #0
  046e0	e50b3028	 str         r3, [r11, #-0x28]
  046e4		 |$LN33@IssueRxTra|
  046e4	e3a03001	 mov         r3, #1
  046e8	e50b3018	 str         r3, [r11, #-0x18]
  046ec	ea000001	 b           |$LN35@IssueRxTra|
  046f0		 |$LN34@IssueRxTra|
  046f0	e3a03000	 mov         r3, #0
  046f4	e50b3018	 str         r3, [r11, #-0x18]
  046f8		 |$LN35@IssueRxTra|

; 610  : 
; 611  :     // Select EP
; 612  :     epNum = USBD_EP_NUM & endPoint;

  046f8	e59b3004	 ldr         r3, [r11, #4]
  046fc	e203300f	 and         r3, r3, #0xF
  04700	e50b3064	 str         r3, [r11, #-0x64]

; 613  :     SelectEp(pPdd, epNum);

  04704	e51b1064	 ldr         r1, [r11, #-0x64]
  04708	e59b0000	 ldr         r0, [r11]
  0470c	eb000000	 bl          SelectEp

; 614  : 
; 615  :     // Get EP status
; 616  :     stat = INREG32(&pUSBDRegs->STAT_FLG);

  04710	e51b3058	 ldr         r3, [r11, #-0x58]
  04714	e2833010	 add         r3, r3, #0x10
  04718	e5933000	 ldr         r3, [r3]
  0471c	e50b305c	 str         r3, [r11, #-0x5C]

; 617  : 
; 618  :     // Depending on EP status
; 619  :     if ((stat & USBD_STAT_STALL) != 0)

  04720	e51b305c	 ldr         r3, [r11, #-0x5C]
  04724	e3130020	 tst         r3, #0x20
  04728	0a000004	 beq         |$LN17@IssueRxTra|

; 620  :     {
; 621  :         // We issued stall, remove it...
; 622  :         OUTREG32(&pUSBDRegs->CTRL, USBD_CTRL_CLR_HALT);

  0472c	e51b3058	 ldr         r3, [r11, #-0x58]
  04730	e283200c	 add         r2, r3, #0xC
  04734	e3a03080	 mov         r3, #0x80
  04738	e5823000	 str         r3, [r2]

; 623  :     }
; 624  :     else

  0473c	ea0000ad	 b           |$LN16@IssueRxTra|
  04740		 |$LN17@IssueRxTra|

; 625  :     {
; 626  :         // When transfer is NULL it is handshake ACK
; 627  :         if (pTransfer != NULL)

  04740	e51b3050	 ldr         r3, [r11, #-0x50]
  04744	e3530000	 cmp         r3, #0
  04748	0a0000aa	 beq         |$LN15@IssueRxTra|

; 628  :         {
; 629  :             // Get maxPacketSize
; 630  :             maxSize = pPdd->ep[endPoint].maxPacketSize;

  0474c	e59b3000	 ldr         r3, [r11]
  04750	e2831068	 add         r1, r3, #0x68
  04754	e59b2004	 ldr         r2, [r11, #4]
  04758	e3a03010	 mov         r3, #0x10
  0475c	e0030392	 mul         r3, r2, r3
  04760	e0813003	 add         r3, r1, r3
  04764	e1d330b0	 ldrh        r3, [r3]
  04768	e50b3070	 str         r3, [r11, #-0x70]
  0476c		 |$LN45@IssueRxTra|

; 631  : 
; 632  :             __try
; 633  :             {
; 634  :                 pBuffer = (UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;

  0476c	e51b3050	 ldr         r3, [r11, #-0x50]
  04770	e2832004	 add         r2, r3, #4
  04774	e51b3050	 ldr         r3, [r11, #-0x50]
  04778	e2833010	 add         r3, r3, #0x10
  0477c	e5922000	 ldr         r2, [r2]
  04780	e5933000	 ldr         r3, [r3]
  04784	e0823003	 add         r3, r2, r3
  04788	e50b306c	 str         r3, [r11, #-0x6C]

; 635  :                 space = pTransfer->cbBuffer - pTransfer->cbTransferred;

  0478c	e51b3050	 ldr         r3, [r11, #-0x50]
  04790	e283200c	 add         r2, r3, #0xC
  04794	e51b3050	 ldr         r3, [r11, #-0x50]
  04798	e2833010	 add         r3, r3, #0x10
  0479c	e5922000	 ldr         r2, [r2]
  047a0	e5933000	 ldr         r3, [r3]
  047a4	e0423003	 sub         r3, r2, r3
  047a8	e50b3060	 str         r3, [r11, #-0x60]

; 636  : 
; 637  :                 // Get EP status flag
; 638  :                 stat = INREG32(&pUSBDRegs->STAT_FLG);

  047ac	e51b3058	 ldr         r3, [r11, #-0x58]
  047b0	e2833010	 add         r3, r3, #0x10
  047b4	e5933000	 ldr         r3, [r3]
  047b8	e50b305c	 str         r3, [r11, #-0x5C]

; 639  : 
; 640  :                 // Get number of bytes in FIFO
; 641  :                 if ((stat & USBD_STAT_FIFO_EMPTY) != 0)

  047bc	e51b305c	 ldr         r3, [r11, #-0x5C]
  047c0	e3130002	 tst         r3, #2
  047c4	0a000002	 beq         |$LN13@IssueRxTra|

; 642  :                 {
; 643  :                     count = 0;

  047c8	e3a03000	 mov         r3, #0
  047cc	e50b3068	 str         r3, [r11, #-0x68]
  047d0	ea00000c	 b           |$LN12@IssueRxTra|
  047d4		 |$LN13@IssueRxTra|

; 644  :                 }
; 645  :                 else if ((stat & USBD_STAT_FIFO_FULL) != 0)

  047d4	e51b305c	 ldr         r3, [r11, #-0x5C]
  047d8	e3130001	 tst         r3, #1
  047dc	0a000002	 beq         |$LN11@IssueRxTra|

; 646  :                 {
; 647  :                     count = maxSize;

  047e0	e51b3070	 ldr         r3, [r11, #-0x70]
  047e4	e50b3068	 str         r3, [r11, #-0x68]

; 648  :                 }
; 649  :                 else

  047e8	ea000006	 b           |$LN10@IssueRxTra|
  047ec		 |$LN11@IssueRxTra|

; 650  :                 {
; 651  :                     count = INREG32(&pUSBDRegs->RXFSTAT) & USBD_RFXSTAT_COUNT;

  047ec	e51b3058	 ldr         r3, [r11, #-0x58]
  047f0	e2833014	 add         r3, r3, #0x14
  047f4	e5932000	 ldr         r2, [r3]
  047f8	e3a03c03	 mov         r3, #3, 24
  047fc	e38330ff	 orr         r3, r3, #0xFF
  04800	e0023003	 and         r3, r2, r3
  04804	e50b3068	 str         r3, [r11, #-0x68]
  04808		 |$LN10@IssueRxTra|
  04808		 |$LN12@IssueRxTra|

; 652  :                 }
; 653  : 
; 654  :                 // Read data
; 655  :                 remain = count;

  04808	e51b3068	 ldr         r3, [r11, #-0x68]
  0480c	e50b3054	 str         r3, [r11, #-0x54]
  04810		 |$LN9@IssueRxTra|

; 656  :                 while (remain > 1)

  04810	e51b3054	 ldr         r3, [r11, #-0x54]
  04814	e3530001	 cmp         r3, #1
  04818	9a00001a	 bls         |$LN8@IssueRxTra|

; 657  :                 {
; 658  :                     data = (WORD)INREG16(&pUSBDRegs->DATA);

  0481c	e51b3058	 ldr         r3, [r11, #-0x58]
  04820	e2833008	 add         r3, r3, #8
  04824	e1d330b0	 ldrh        r3, [r3]
  04828	e50b304c	 str         r3, [r11, #-0x4C]

; 659  :                     if (space > 1)

  0482c	e51b3060	 ldr         r3, [r11, #-0x60]
  04830	e3530001	 cmp         r3, #1
  04834	9a00000f	 bls         |$LN7@IssueRxTra|

; 660  :                     {
; 661  :                         pBuffer[0] = (UCHAR)data;

  04838	e51b304c	 ldr         r3, [r11, #-0x4C]
  0483c	e20320ff	 and         r2, r3, #0xFF
  04840	e51b306c	 ldr         r3, [r11, #-0x6C]
  04844	e5c32000	 strb        r2, [r3]

; 662  :                         pBuffer[1] = (UCHAR)(data >> 8);

  04848	e51b304c	 ldr         r3, [r11, #-0x4C]
  0484c	e1a03423	 mov         r3, r3, lsr #8
  04850	e20320ff	 and         r2, r3, #0xFF
  04854	e51b306c	 ldr         r3, [r11, #-0x6C]
  04858	e2833001	 add         r3, r3, #1
  0485c	e5c32000	 strb        r2, [r3]

; 663  :                         pBuffer += 2;

  04860	e51b306c	 ldr         r3, [r11, #-0x6C]
  04864	e2833002	 add         r3, r3, #2
  04868	e50b306c	 str         r3, [r11, #-0x6C]

; 664  :                         space -= 2;

  0486c	e51b3060	 ldr         r3, [r11, #-0x60]
  04870	e2433002	 sub         r3, r3, #2
  04874	e50b3060	 str         r3, [r11, #-0x60]
  04878		 |$LN7@IssueRxTra|

; 665  :                     }
; 666  :                     remain -= 2;

  04878	e51b3054	 ldr         r3, [r11, #-0x54]
  0487c	e2433002	 sub         r3, r3, #2
  04880	e50b3054	 str         r3, [r11, #-0x54]

; 667  :                 }

  04884	eaffffe1	 b           |$LN9@IssueRxTra|
  04888		 |$LN8@IssueRxTra|

; 668  : 
; 669  :                 if (remain > 0)

  04888	e51b3054	 ldr         r3, [r11, #-0x54]
  0488c	e3530000	 cmp         r3, #0
  04890	9a000013	 bls         |$LN6@IssueRxTra|

; 670  :                 {
; 671  :                     data = (WORD)INREG16(&pUSBDRegs->DATA);

  04894	e51b3058	 ldr         r3, [r11, #-0x58]
  04898	e2833008	 add         r3, r3, #8
  0489c	e1d330b0	 ldrh        r3, [r3]
  048a0	e50b304c	 str         r3, [r11, #-0x4C]

; 672  :                     if (space > 0)

  048a4	e51b3060	 ldr         r3, [r11, #-0x60]
  048a8	e3530000	 cmp         r3, #0
  048ac	9a000009	 bls         |$LN5@IssueRxTra|

; 673  :                     {
; 674  :                         *pBuffer = (UCHAR)data;

  048b0	e51b304c	 ldr         r3, [r11, #-0x4C]
  048b4	e20320ff	 and         r2, r3, #0xFF
  048b8	e51b306c	 ldr         r3, [r11, #-0x6C]
  048bc	e5c32000	 strb        r2, [r3]

; 675  :                         pBuffer += 1;

  048c0	e51b306c	 ldr         r3, [r11, #-0x6C]
  048c4	e2833001	 add         r3, r3, #1
  048c8	e50b306c	 str         r3, [r11, #-0x6C]

; 676  :                         space   -= 1;

  048cc	e51b3060	 ldr         r3, [r11, #-0x60]
  048d0	e2433001	 sub         r3, r3, #1
  048d4	e50b3060	 str         r3, [r11, #-0x60]
  048d8		 |$LN5@IssueRxTra|

; 677  :                     }
; 678  :                     remain -= 1;

  048d8	e51b3054	 ldr         r3, [r11, #-0x54]
  048dc	e2433001	 sub         r3, r3, #1
  048e0	e50b3054	 str         r3, [r11, #-0x54]
  048e4		 |$LN6@IssueRxTra|

; 679  :                 }
; 680  : 
; 681  :                 // We transfered some data
; 682  :                 pTransfer->cbTransferred = pTransfer->cbBuffer - space;

  048e4	e51b3050	 ldr         r3, [r11, #-0x50]
  048e8	e283300c	 add         r3, r3, #0xC
  048ec	e5932000	 ldr         r2, [r3]
  048f0	e51b3060	 ldr         r3, [r11, #-0x60]
  048f4	e0422003	 sub         r2, r2, r3
  048f8	e51b3050	 ldr         r3, [r11, #-0x50]
  048fc	e2833010	 add         r3, r3, #0x10
  04900	e5832000	 str         r2, [r3]

; 683  : 
; 684  :                 DEBUGMSG(ZONE_TRANSFER, (L"USBD IssueRxTransfer() - "
; 685  :                     L"Transfered %d bytes on ep 0x%02X", pTransfer->cbTransferred, epNum));

  04904	e59f3174	 ldr         r3, [pc, #0x174]
  04908	e5933440	 ldr         r3, [r3, #0x440]
  0490c	e3130008	 tst         r3, #8
  04910	0a000017	 beq         |$LN38@IssueRxTra|
  04914	e59f3164	 ldr         r3, [pc, #0x164]
  04918	e5933440	 ldr         r3, [r3, #0x440]
  0491c	e3130801	 tst         r3, #1, 16
  04920	0a000008	 beq         |$LN36@IssueRxTra|
  04924	e51b2064	 ldr         r2, [r11, #-0x64]
  04928	e51b3050	 ldr         r3, [r11, #-0x50]
  0492c	e2833010	 add         r3, r3, #0x10
  04930	e5931000	 ldr         r1, [r3]
  04934	e59f0140	 ldr         r0, [pc, #0x140]
  04938	eb000000	 bl          CeLogMsg
  0493c	e3a03001	 mov         r3, #1
  04940	e50b3014	 str         r3, [r11, #-0x14]
  04944	ea000007	 b           |$LN37@IssueRxTra|
  04948		 |$LN36@IssueRxTra|
  04948	e51b2064	 ldr         r2, [r11, #-0x64]
  0494c	e51b3050	 ldr         r3, [r11, #-0x50]
  04950	e2833010	 add         r3, r3, #0x10
  04954	e5931000	 ldr         r1, [r3]
  04958	e59f011c	 ldr         r0, [pc, #0x11C]
  0495c	eb000000	 bl          NKDbgPrintfW
  04960	e3a03000	 mov         r3, #0
  04964	e50b3014	 str         r3, [r11, #-0x14]
  04968		 |$LN37@IssueRxTra|
  04968	e3a03001	 mov         r3, #1
  0496c	e50b3010	 str         r3, [r11, #-0x10]
  04970	ea000001	 b           |$LN39@IssueRxTra|
  04974		 |$LN38@IssueRxTra|
  04974	e3a03000	 mov         r3, #0
  04978	e50b3010	 str         r3, [r11, #-0x10]
  0497c		 |$LN39@IssueRxTra|

; 686  : 
; 687  :                 // Is this end of transfer?
; 688  :                 if ((pTransfer->cbTransferred == pTransfer->cbBuffer) || (count < maxSize))

  0497c	e51b3050	 ldr         r3, [r11, #-0x50]
  04980	e2832010	 add         r2, r3, #0x10
  04984	e51b3050	 ldr         r3, [r11, #-0x50]
  04988	e283300c	 add         r3, r3, #0xC
  0498c	e5922000	 ldr         r2, [r2]
  04990	e5933000	 ldr         r3, [r3]
  04994	e1520003	 cmp         r2, r3
  04998	0a000003	 beq         |$LN3@IssueRxTra|
  0499c	e51b2068	 ldr         r2, [r11, #-0x68]
  049a0	e51b3070	 ldr         r3, [r11, #-0x70]
  049a4	e1520003	 cmp         r2, r3
  049a8	2a000006	 bcs         |$LN4@IssueRxTra|
  049ac		 |$LN3@IssueRxTra|

; 689  :                 {
; 690  :                     // Yes, set return code
; 691  :                     pTransfer->dwUsbError = UFN_NO_ERROR;

  049ac	e51b3050	 ldr         r3, [r11, #-0x50]
  049b0	e2832014	 add         r2, r3, #0x14
  049b4	e3a03000	 mov         r3, #0
  049b8	e5823000	 str         r3, [r2]

; 692  : 
; 693  :                     // And complete flag
; 694  :                     complete = TRUE;

  049bc	e3a03001	 mov         r3, #1
  049c0	e50b3048	 str         r3, [r11, #-0x48]

; 695  :                 }
; 696  :                 else

  049c4	ea000003	 b           |$LN2@IssueRxTra|
  049c8		 |$LN4@IssueRxTra|

; 697  :                 {
; 698  :                     // No, enable FIFO for next packet
; 699  :                     OUTREG32(&pUSBDRegs->CTRL, USBD_CTRL_FIFO_EN);

  049c8	e51b3058	 ldr         r3, [r11, #-0x58]
  049cc	e283200c	 add         r2, r3, #0xC
  049d0	e3a03004	 mov         r3, #4
  049d4	e5823000	 str         r3, [r2]
  049d8		 |$LN2@IssueRxTra|
  049d8		 |$LN46@IssueRxTra|

; 700  :                 }
; 701  : 
; 702  :             }

  049d8	ea000006	 b           |$LN47@IssueRxTra|
  049dc		 |$LN42@IssueRxTra|

; 704  :             {
; 705  :                 pTransfer->dwUsbError = UFN_CLIENT_BUFFER_ERROR;

  049dc	e51b3050	 ldr         r3, [r11, #-0x50]
  049e0	e2832014	 add         r2, r3, #0x14
  049e4	e3a03f41	 mov         r3, #0x41, 30
  049e8	e5823000	 str         r3, [r2]

; 706  :                 complete = TRUE;

  049ec	e3a03001	 mov         r3, #1
  049f0	e50b3048	 str         r3, [r11, #-0x48]
  049f4	eaffffff	 b           |$LN47@IssueRxTra|
  049f8		 |$LN47@IssueRxTra|
  049f8		 |$LN15@IssueRxTra|
  049f8		 |$LN16@IssueRxTra|

; 707  :             }
; 708  :         }
; 709  :     }
; 710  : 
; 711  :     // Deselect EP
; 712  :     Deselect(pPdd, epNum);

  049f8	e51b1064	 ldr         r1, [r11, #-0x64]
  049fc	e59b0000	 ldr         r0, [r11]
  04a00	eb000000	 bl          Deselect

; 713  : 
; 714  :     // If transaction is complete we should tell MDD
; 715  :     if (complete)

  04a04	e51b3048	 ldr         r3, [r11, #-0x48]
  04a08	e3530000	 cmp         r3, #0
  04a0c	0a000012	 beq         |$LN1@IssueRxTra|

; 716  :     {
; 717  :         pPdd->ep[endPoint].pTransfer = NULL;

  04a10	e59b3000	 ldr         r3, [r11]
  04a14	e2831068	 add         r1, r3, #0x68
  04a18	e59b2004	 ldr         r2, [r11, #4]
  04a1c	e3a03010	 mov         r3, #0x10
  04a20	e0030392	 mul         r3, r2, r3
  04a24	e0813003	 add         r3, r1, r3
  04a28	e283200c	 add         r2, r3, #0xC
  04a2c	e3a03000	 mov         r3, #0
  04a30	e5823000	 str         r3, [r2]

; 718  :         pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer);

  04a34	e51b2050	 ldr         r2, [r11, #-0x50]
  04a38	e3a01064	 mov         r1, #0x64
  04a3c	e59b3000	 ldr         r3, [r11]
  04a40	e2833018	 add         r3, r3, #0x18
  04a44	e5930000	 ldr         r0, [r3]
  04a48	e59b3000	 ldr         r3, [r11]
  04a4c	e283301c	 add         r3, r3, #0x1C
  04a50	e5933000	 ldr         r3, [r3]
  04a54	e1a0e00f	 mov         lr, pc
  04a58	e12fff13	 bx          r3
  04a5c		 |$LN1@IssueRxTra|
  04a5c		 |$LN40@IssueRxTra|

; 719  :     }
; 720  : }

  04a5c	e24bd00c	 sub         sp, r11, #0xC
  04a60	e89d6800	 ldmia       sp, {r11, sp, lr}
  04a64	e12fff1e	 bx          lr

			 ENDP  ; |IssueRxTransfer|

  04a68		 |$LN41@IssueRxTra|
  04a68		 |$LN50@IssueRxTra|

; 703  :             __except(EXCEPTION_EXECUTE_HANDLER)

  04a68	e52de004	 str         lr, [sp, #-4]!
  04a6c	e24dd008	 sub         sp, sp, #8
  04a70		 |$LN44@IssueRxTra|
  04a70		 |$LN53@IssueRxTra|
  04a70	e3a00001	 mov         r0, #1
  04a74		 |$LN43@IssueRxTra|
  04a74	e28dd008	 add         sp, sp, #8
  04a78	e49df004	 ldr         pc, [sp], #4
  04a7c		 |$LN55@IssueRxTra|
  04a7c		 |$LN56@IssueRxTra|
  04a7c	00000000	 DCD         |??_C@_1HE@LDIGGEBM@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  04a80		 |$LN57@IssueRxTra|
  04a80	00000000	 DCD         |dpCurSettings|
  04a84		 |$LN58@IssueRxTra|
  04a84	00000000	 DCD         |??_C@_1HO@CINEAEDN@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAp@|
  04a88		 |$LN54@IssueRxTra|
  04a88		 |$LN52@IssueRxTra|
	EXPORT	|??_C@_1DI@NGOPCHHN@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAN?$AAD?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@COCMEBEB@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAD@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@LOOAJFB@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAC@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@EIHDGLNN@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAD@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@CFFBHHGB@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAC@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@OBNDDCDH@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAD@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@MGGNKOOI@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAU@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IA@CKDAJKGF@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAS?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@OONPNBAP@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAS?$AAt?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@OFCOOGBH@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?5?$AAD@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@BMJPPFGL@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAP?$AAr?$AAe?$AAv?$AAi?$AAo?$AAu?$AAs?$AA?5?$AAD@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@FAABLJPA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00130			 AREA	 |.pdata|, PDATA
|$T46580| DCD	|$LN62@DevStatEve|
	DCD	0x4001eb04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@NGOPCHHN@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAN?$AAD?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "E"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "E", 0x0, "N", 0x0, "D"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@COCMEBEB@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAD@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "E"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, " ", 0x0, "A", 0x0, "d", 0x0, "d", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, " ", 0x0, "E", 0x0, "v", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@LOOAJFB@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAC@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "E"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "C", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "s", 0x0, "e", 0x0, "r", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "E", 0x0, "v"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@EIHDGLNN@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAD@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "E"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "s", 0x0, "u", 0x0, "m"
	DCB	0x0, "e", 0x0, " ", 0x0, "E", 0x0, "v", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@CFFBHHGB@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAC@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "E"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "C", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, " "
	DCB	0x0, "R", 0x0, "e", 0x0, "m", 0x0, "o", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, " ", 0x0, "E", 0x0, "v", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@OBNDDCDH@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAD@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "E"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, " ", 0x0, "S", 0x0, "u", 0x0, "s", 0x0, "p", 0x0, "e"
	DCB	0x0, "n", 0x0, "d", 0x0, " ", 0x0, "E", 0x0, "v", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@MGGNKOOI@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAU@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "E"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "s", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "E", 0x0, "v"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IA@CKDAJKGF@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAS?$AAt@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, "P", 0x0, "d"
	DCB	0x0, "d", 0x0, "!", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "E", 0x0, "v", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "c", 0x0, "h", 0x0, "a"
	DCB	0x0, "n", 0x0, "g", 0x0, "e", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@OONPNBAP@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAS?$AAt?$AAa@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "E"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "g", 0x0, "e", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "4", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@OFCOOGBH@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?5?$AAD@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "E"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "C", 0x0, "u", 0x0, "r"
	DCB	0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, " "
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, " ", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "4", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@BMJPPFGL@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAP?$AAr?$AAe?$AAv?$AAi?$AAo?$AAu?$AAs?$AA?5?$AAD@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "E"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "P", 0x0, "r", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "o", 0x0, "u", 0x0, "s", 0x0, " "
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, " ", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "4", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@FAABLJPA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "E"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "S", 0x0, "T", 0x0, "A"
	DCB	0x0, "R", 0x0, "T", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  04a88			 AREA	 |.text|, CODE, ARM

  04a88		 |DevStatEvent| PROC

; 730  : {

  04a88		 |$LN62@DevStatEve|
  04a88	e1a0c00d	 mov         r12, sp
  04a8c	e92d0001	 stmdb       sp!, {r0}
  04a90	e92d5000	 stmdb       sp!, {r12, lr}
  04a94	e24dd070	 sub         sp, sp, #0x70
  04a98		 |$M46577|

; 731  :     OMAP2420_USBD_REGS *pUSBDRegs = pPdd->pUSBDRegs;

  04a98	e59d3078	 ldr         r3, [sp, #0x78]
  04a9c	e2833024	 add         r3, r3, #0x24
  04aa0	e5933000	 ldr         r3, [r3]
  04aa4	e58d3004	 str         r3, [sp, #4]

; 732  :     DWORD state, change;
; 733  : 
; 734  : 
; 735  :     DEBUGMSG(ZONE_FUNCTION, (L"USBD DevStatEvent() - START\r\n"));

  04aa8	e59f3754	 ldr         r3, [pc, #0x754]
  04aac	e5933440	 ldr         r3, [r3, #0x440]
  04ab0	e3130a01	 tst         r3, #1, 20
  04ab4	0a00000f	 beq         |$LN14@DevStatEve|
  04ab8	e59f3744	 ldr         r3, [pc, #0x744]
  04abc	e5933440	 ldr         r3, [r3, #0x440]
  04ac0	e3130801	 tst         r3, #1, 16
  04ac4	0a000004	 beq         |$LN12@DevStatEve|
  04ac8	e59f0760	 ldr         r0, [pc, #0x760]
  04acc	eb000000	 bl          CeLogMsg
  04ad0	e3a03001	 mov         r3, #1
  04ad4	e58d300c	 str         r3, [sp, #0xC]
  04ad8	ea000003	 b           |$LN13@DevStatEve|
  04adc		 |$LN12@DevStatEve|
  04adc	e59f074c	 ldr         r0, [pc, #0x74C]
  04ae0	eb000000	 bl          NKDbgPrintfW
  04ae4	e3a03000	 mov         r3, #0
  04ae8	e58d300c	 str         r3, [sp, #0xC]
  04aec		 |$LN13@DevStatEve|
  04aec	e3a03001	 mov         r3, #1
  04af0	e58d3010	 str         r3, [sp, #0x10]
  04af4	ea000001	 b           |$LN15@DevStatEve|
  04af8		 |$LN14@DevStatEve|
  04af8	e3a03000	 mov         r3, #0
  04afc	e58d3010	 str         r3, [sp, #0x10]
  04b00		 |$LN15@DevStatEve|

; 736  : 
; 737  :     // Get Current Device State and compare to Previous Device State
; 738  :     // Store the differences in change.
; 739  :     // Note: (a ^ b) == (a XOR b)
; 740  :     state = INREG32(&pUSBDRegs->DEVSTAT);

  04b00	e59d3004	 ldr         r3, [sp, #4]
  04b04	e2833020	 add         r3, r3, #0x20
  04b08	e5933000	 ldr         r3, [r3]
  04b0c	e58d3008	 str         r3, [sp, #8]

; 741  :     change = state ^ pPdd->devState;

  04b10	e59d3078	 ldr         r3, [sp, #0x78]
  04b14	e2833040	 add         r3, r3, #0x40
  04b18	e59d2008	 ldr         r2, [sp, #8]
  04b1c	e5933000	 ldr         r3, [r3]
  04b20	e0223003	 eor         r3, r2, r3
  04b24	e58d3000	 str         r3, [sp]

; 742  : 
; 743  :     DEBUGMSG(ZONE_PDD, (L"USBD DevStatEvent() - "
; 744  :         L"Previous Device State = 0x%04X\r\n", pPdd->devState));

  04b28	e59f36d4	 ldr         r3, [pc, #0x6D4]
  04b2c	e5933440	 ldr         r3, [r3, #0x440]
  04b30	e3130902	 tst         r3, #2, 18
  04b34	0a000015	 beq         |$LN18@DevStatEve|
  04b38	e59f36c4	 ldr         r3, [pc, #0x6C4]
  04b3c	e5933440	 ldr         r3, [r3, #0x440]
  04b40	e3130801	 tst         r3, #1, 16
  04b44	0a000007	 beq         |$LN16@DevStatEve|
  04b48	e59d3078	 ldr         r3, [sp, #0x78]
  04b4c	e2833040	 add         r3, r3, #0x40
  04b50	e5931000	 ldr         r1, [r3]
  04b54	e59f06d0	 ldr         r0, [pc, #0x6D0]
  04b58	eb000000	 bl          CeLogMsg
  04b5c	e3a03001	 mov         r3, #1
  04b60	e58d3014	 str         r3, [sp, #0x14]
  04b64	ea000006	 b           |$LN17@DevStatEve|
  04b68		 |$LN16@DevStatEve|
  04b68	e59d3078	 ldr         r3, [sp, #0x78]
  04b6c	e2833040	 add         r3, r3, #0x40
  04b70	e5931000	 ldr         r1, [r3]
  04b74	e59f06b0	 ldr         r0, [pc, #0x6B0]
  04b78	eb000000	 bl          NKDbgPrintfW
  04b7c	e3a03000	 mov         r3, #0
  04b80	e58d3014	 str         r3, [sp, #0x14]
  04b84		 |$LN17@DevStatEve|
  04b84	e3a03001	 mov         r3, #1
  04b88	e58d3018	 str         r3, [sp, #0x18]
  04b8c	ea000001	 b           |$LN19@DevStatEve|
  04b90		 |$LN18@DevStatEve|
  04b90	e3a03000	 mov         r3, #0
  04b94	e58d3018	 str         r3, [sp, #0x18]
  04b98		 |$LN19@DevStatEve|

; 745  :     DEBUGMSG(ZONE_PDD, (L"USBD DevStatEvent() - "
; 746  :         L"Current  Device State = 0x%04X\r\n", state));

  04b98	e59f3664	 ldr         r3, [pc, #0x664]
  04b9c	e5933440	 ldr         r3, [r3, #0x440]
  04ba0	e3130902	 tst         r3, #2, 18
  04ba4	0a000011	 beq         |$LN22@DevStatEve|
  04ba8	e59f3654	 ldr         r3, [pc, #0x654]
  04bac	e5933440	 ldr         r3, [r3, #0x440]
  04bb0	e3130801	 tst         r3, #1, 16
  04bb4	0a000005	 beq         |$LN20@DevStatEve|
  04bb8	e59d1008	 ldr         r1, [sp, #8]
  04bbc	e59f0664	 ldr         r0, [pc, #0x664]
  04bc0	eb000000	 bl          CeLogMsg
  04bc4	e3a03001	 mov         r3, #1
  04bc8	e58d301c	 str         r3, [sp, #0x1C]
  04bcc	ea000004	 b           |$LN21@DevStatEve|
  04bd0		 |$LN20@DevStatEve|
  04bd0	e59d1008	 ldr         r1, [sp, #8]
  04bd4	e59f064c	 ldr         r0, [pc, #0x64C]
  04bd8	eb000000	 bl          NKDbgPrintfW
  04bdc	e3a03000	 mov         r3, #0
  04be0	e58d301c	 str         r3, [sp, #0x1C]
  04be4		 |$LN21@DevStatEve|
  04be4	e3a03001	 mov         r3, #1
  04be8	e58d3020	 str         r3, [sp, #0x20]
  04bec	ea000001	 b           |$LN23@DevStatEve|
  04bf0		 |$LN22@DevStatEve|
  04bf0	e3a03000	 mov         r3, #0
  04bf4	e58d3020	 str         r3, [sp, #0x20]
  04bf8		 |$LN23@DevStatEve|

; 747  :     DEBUGMSG(ZONE_PDD, (L"USBD DevStatEvent() - "
; 748  :         L"Device State Change   = 0x%04X\r\n", change));

  04bf8	e59f3604	 ldr         r3, [pc, #0x604]
  04bfc	e5933440	 ldr         r3, [r3, #0x440]
  04c00	e3130902	 tst         r3, #2, 18
  04c04	0a000011	 beq         |$LN26@DevStatEve|
  04c08	e59f35f4	 ldr         r3, [pc, #0x5F4]
  04c0c	e5933440	 ldr         r3, [r3, #0x440]
  04c10	e3130801	 tst         r3, #1, 16
  04c14	0a000005	 beq         |$LN24@DevStatEve|
  04c18	e59d1000	 ldr         r1, [sp]
  04c1c	e59f0600	 ldr         r0, [pc, #0x600]
  04c20	eb000000	 bl          CeLogMsg
  04c24	e3a03001	 mov         r3, #1
  04c28	e58d3024	 str         r3, [sp, #0x24]
  04c2c	ea000004	 b           |$LN25@DevStatEve|
  04c30		 |$LN24@DevStatEve|
  04c30	e59d1000	 ldr         r1, [sp]
  04c34	e59f05e8	 ldr         r0, [pc, #0x5E8]
  04c38	eb000000	 bl          NKDbgPrintfW
  04c3c	e3a03000	 mov         r3, #0
  04c40	e58d3024	 str         r3, [sp, #0x24]
  04c44		 |$LN25@DevStatEve|
  04c44	e3a03001	 mov         r3, #1
  04c48	e58d3028	 str         r3, [sp, #0x28]
  04c4c	ea000001	 b           |$LN27@DevStatEve|
  04c50		 |$LN26@DevStatEve|
  04c50	e3a03000	 mov         r3, #0
  04c54	e58d3028	 str         r3, [sp, #0x28]
  04c58		 |$LN27@DevStatEve|

; 749  : 
; 750  :     DEBUGMSG(ZONE_PDD, (L"UsbFnPdd!DevStatEvent: "
; 751  :         L"Device State = 0x%04x, change = 0x%04X\r\n", state, change));

  04c58	e59f35a4	 ldr         r3, [pc, #0x5A4]
  04c5c	e5933440	 ldr         r3, [r3, #0x440]
  04c60	e3130902	 tst         r3, #2, 18
  04c64	0a000013	 beq         |$LN30@DevStatEve|
  04c68	e59f3594	 ldr         r3, [pc, #0x594]
  04c6c	e5933440	 ldr         r3, [r3, #0x440]
  04c70	e3130801	 tst         r3, #1, 16
  04c74	0a000006	 beq         |$LN28@DevStatEve|
  04c78	e59d2000	 ldr         r2, [sp]
  04c7c	e59d1008	 ldr         r1, [sp, #8]
  04c80	e59f0598	 ldr         r0, [pc, #0x598]
  04c84	eb000000	 bl          CeLogMsg
  04c88	e3a03001	 mov         r3, #1
  04c8c	e58d302c	 str         r3, [sp, #0x2C]
  04c90	ea000005	 b           |$LN29@DevStatEve|
  04c94		 |$LN28@DevStatEve|
  04c94	e59d2000	 ldr         r2, [sp]
  04c98	e59d1008	 ldr         r1, [sp, #8]
  04c9c	e59f057c	 ldr         r0, [pc, #0x57C]
  04ca0	eb000000	 bl          NKDbgPrintfW
  04ca4	e3a03000	 mov         r3, #0
  04ca8	e58d302c	 str         r3, [sp, #0x2C]
  04cac		 |$LN29@DevStatEve|
  04cac	e3a03001	 mov         r3, #1
  04cb0	e58d3030	 str         r3, [sp, #0x30]
  04cb4	ea000001	 b           |$LN31@DevStatEve|
  04cb8		 |$LN30@DevStatEve|
  04cb8	e3a03000	 mov         r3, #0
  04cbc	e58d3030	 str         r3, [sp, #0x30]
  04cc0		 |$LN31@DevStatEve|

; 752  : 
; 753  : #ifdef USE_OLD_CABLE_DETECT_METHOD
; 754  :     // Attach/deattach
; 755  :     if ((change & USBD_DEVSTAT_ATT) != 0)
; 756  :     {
; 757  :         if ((state & USBD_DEVSTAT_ATT) != 0)
; 758  :         {
; 759  :             DEBUGMSG(ZONE_PDD, (L"USBD DevStatEvent() - "
; 760  :                 L"Detected Cable Insertion Event!\r\n"));
; 761  : 
; 762  :             // TODO: Call bus driver (OTG?) to move HW from deep sleep
; 763  :             // SetSelfPowerState to D0.
; 764  :             pPdd->m_CurSelfPowerState = D0;
; 765  :             UpdateDevicePower(pPdd);
; 766  : 
; 767  :             // Let MDD process change
; 768  :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_EVENTS, UFN_ATTACH);
; 769  :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_SPEED,  BS_FULL_SPEED);
; 770  :         }
; 771  :         else
; 772  :         {
; 773  :             DEBUGMSG(ZONE_PDD, (L"USBD DevStatEvent() - "
; 774  :                 L"Detected Cable Removal Event!\r\n"));
; 775  : 
; 776  :             // We are not configured anymore
; 777  :             OUTREG32(&pUSBDRegs->SYSCON2, USBD_SYSCON2_CLR_CFG);
; 778  : 
; 779  :             // TODO: Call bus driver (OTG?) to move HW to deep sleep
; 780  :             // Let MDD process change
; 781  :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_EVENTS, UFN_DETACH);
; 782  : 
; 783  :             // Don't process other changes (we are disconnected)
; 784  : 
; 785  :             // SetSelfPowerState to D4
; 786  :             pPdd->m_CurSelfPowerState = D4; // Do we need set to D3 as wake up source?
; 787  :             UpdateDevicePower(pPdd);
; 788  : 
; 789  :             goto DevStatClean;
; 790  :         }
; 791  :     }
; 792  : #endif // USE_OLD_CABLE_DETECT_METHOD
; 793  : 
; 794  :     // Reset
; 795  :     if (((change & USBD_DEVSTAT_USB_RESET) != 0) || ((change & USBD_DEVSTAT_DEF) != 0))

  04cc0	e59d3000	 ldr         r3, [sp]
  04cc4	e3130020	 tst         r3, #0x20
  04cc8	1a000002	 bne         |$LN8@DevStatEve|
  04ccc	e59d3000	 ldr         r3, [sp]
  04cd0	e3130002	 tst         r3, #2
  04cd4	0a00004b	 beq         |$LN9@DevStatEve|
  04cd8		 |$LN8@DevStatEve|

; 796  :     {
; 797  :         DEBUGMSG(ZONE_PDD, (L"USBD DevStatEvent() - "
; 798  :             L"Detected USB Reset Event!\r\n"));

  04cd8	e59f3524	 ldr         r3, [pc, #0x524]
  04cdc	e5933440	 ldr         r3, [r3, #0x440]
  04ce0	e3130902	 tst         r3, #2, 18
  04ce4	0a00000f	 beq         |$LN34@DevStatEve|
  04ce8	e59f3514	 ldr         r3, [pc, #0x514]
  04cec	e5933440	 ldr         r3, [r3, #0x440]
  04cf0	e3130801	 tst         r3, #1, 16
  04cf4	0a000004	 beq         |$LN32@DevStatEve|
  04cf8	e59f051c	 ldr         r0, [pc, #0x51C]
  04cfc	eb000000	 bl          CeLogMsg
  04d00	e3a03001	 mov         r3, #1
  04d04	e58d3034	 str         r3, [sp, #0x34]
  04d08	ea000003	 b           |$LN33@DevStatEve|
  04d0c		 |$LN32@DevStatEve|
  04d0c	e59f0508	 ldr         r0, [pc, #0x508]
  04d10	eb000000	 bl          NKDbgPrintfW
  04d14	e3a03000	 mov         r3, #0
  04d18	e58d3034	 str         r3, [sp, #0x34]
  04d1c		 |$LN33@DevStatEve|
  04d1c	e3a03001	 mov         r3, #1
  04d20	e58d3038	 str         r3, [sp, #0x38]
  04d24	ea000001	 b           |$LN35@DevStatEve|
  04d28		 |$LN34@DevStatEve|
  04d28	e3a03000	 mov         r3, #0
  04d2c	e58d3038	 str         r3, [sp, #0x38]
  04d30		 |$LN35@DevStatEve|

; 799  : 
; 800  :         pPdd->m_NewPowerState = D0;

  04d30	e59d3078	 ldr         r3, [sp, #0x78]
  04d34	e2832038	 add         r2, r3, #0x38
  04d38	e3a03000	 mov         r3, #0
  04d3c	e5823000	 str         r3, [r2]

; 801  :         UpdateDevicePower(pPdd);

  04d40	e59d0078	 ldr         r0, [sp, #0x78]
  04d44	eb000000	 bl          UpdateDevicePower

; 802  : 
; 803  :         if ((state & USBD_DEVSTAT_USB_RESET) == 0)

  04d48	e59d3008	 ldr         r3, [sp, #8]
  04d4c	e3130020	 tst         r3, #0x20
  04d50	1a000027	 bne         |$LN7@DevStatEve|

; 804  :         {
; 805  :             // OTG may not detect attach/detach events correctly on some platforms
; 806  :             // Simulate a attach/detach event to clear any previous state on reset
; 807  :             // Let MDD process change
; 808  :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_EVENTS, UFN_DETACH);

  04d54	e3a02000	 mov         r2, #0
  04d58	e3a01001	 mov         r1, #1
  04d5c	e59d3078	 ldr         r3, [sp, #0x78]
  04d60	e2833018	 add         r3, r3, #0x18
  04d64	e5930000	 ldr         r0, [r3]
  04d68	e59d3078	 ldr         r3, [sp, #0x78]
  04d6c	e283301c	 add         r3, r3, #0x1C
  04d70	e5933000	 ldr         r3, [r3]
  04d74	e1a0e00f	 mov         lr, pc
  04d78	e12fff13	 bx          r3

; 809  :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_EVENTS, UFN_ATTACH);

  04d7c	e3a02001	 mov         r2, #1
  04d80	e3a01001	 mov         r1, #1
  04d84	e59d3078	 ldr         r3, [sp, #0x78]
  04d88	e2833018	 add         r3, r3, #0x18
  04d8c	e5930000	 ldr         r0, [r3]
  04d90	e59d3078	 ldr         r3, [sp, #0x78]
  04d94	e283301c	 add         r3, r3, #0x1C
  04d98	e5933000	 ldr         r3, [r3]
  04d9c	e1a0e00f	 mov         lr, pc
  04da0	e12fff13	 bx          r3

; 810  :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_SPEED,  BS_FULL_SPEED);

  04da4	e3a02001	 mov         r2, #1
  04da8	e3a01003	 mov         r1, #3
  04dac	e59d3078	 ldr         r3, [sp, #0x78]
  04db0	e2833018	 add         r3, r3, #0x18
  04db4	e5930000	 ldr         r0, [r3]
  04db8	e59d3078	 ldr         r3, [sp, #0x78]
  04dbc	e283301c	 add         r3, r3, #0x1C
  04dc0	e5933000	 ldr         r3, [r3]
  04dc4	e1a0e00f	 mov         lr, pc
  04dc8	e12fff13	 bx          r3

; 811  : 
; 812  :             // Tell MDD about reset...
; 813  :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_EVENTS, UFN_RESET);

  04dcc	e3a02002	 mov         r2, #2
  04dd0	e3a01001	 mov         r1, #1
  04dd4	e59d3078	 ldr         r3, [sp, #0x78]
  04dd8	e2833018	 add         r3, r3, #0x18
  04ddc	e5930000	 ldr         r0, [r3]
  04de0	e59d3078	 ldr         r3, [sp, #0x78]
  04de4	e283301c	 add         r3, r3, #0x1C
  04de8	e5933000	 ldr         r3, [r3]
  04dec	e1a0e00f	 mov         lr, pc
  04df0	e12fff13	 bx          r3
  04df4		 |$LN7@DevStatEve|

; 814  :         }
; 815  : 
; 816  :         // Enable interrupts
; 817  :         OUTREG32(&pUSBDRegs->IRQ_EN, USBD_IRQ_MASK);

  04df4	e59d3004	 ldr         r3, [sp, #4]
  04df8	e2832028	 add         r2, r3, #0x28
  04dfc	e3a03039	 mov         r3, #0x39
  04e00	e5823000	 str         r3, [r2]

; 818  : 
; 819  :         // In the middle of a reset don't process other changes
; 820  :         goto DevStatClean;

  04e04	ea0000e0	 b           |$DevStatClean$44458|
  04e08		 |$LN9@DevStatEve|

; 821  :     }
; 822  : 
; 823  :     // Suspend/resume
; 824  :     if ((change & USBD_DEVSTAT_SUS) != 0)

  04e08	e59d3000	 ldr         r3, [sp]
  04e0c	e3130010	 tst         r3, #0x10
  04e10	0a0000a2	 beq         |$LN6@DevStatEve|

; 825  :     {
; 826  :         if ((state & USBD_DEVSTAT_SUS) != 0)

  04e14	e59d3008	 ldr         r3, [sp, #8]
  04e18	e3130010	 tst         r3, #0x10
  04e1c	0a00004f	 beq         |$LN5@DevStatEve|

; 827  :         {
; 828  :             DEBUGMSG(ZONE_PDD, (L"USBD DevStatEvent() - "
; 829  :                 L"Detected Device Suspend Event!\r\n"));

  04e20	e59f33dc	 ldr         r3, [pc, #0x3DC]
  04e24	e5933440	 ldr         r3, [r3, #0x440]
  04e28	e3130902	 tst         r3, #2, 18
  04e2c	0a00000f	 beq         |$LN38@DevStatEve|
  04e30	e59f33cc	 ldr         r3, [pc, #0x3CC]
  04e34	e5933440	 ldr         r3, [r3, #0x440]
  04e38	e3130801	 tst         r3, #1, 16
  04e3c	0a000004	 beq         |$LN36@DevStatEve|
  04e40	e59f03d0	 ldr         r0, [pc, #0x3D0]
  04e44	eb000000	 bl          CeLogMsg
  04e48	e3a03001	 mov         r3, #1
  04e4c	e58d303c	 str         r3, [sp, #0x3C]
  04e50	ea000003	 b           |$LN37@DevStatEve|
  04e54		 |$LN36@DevStatEve|
  04e54	e59f03bc	 ldr         r0, [pc, #0x3BC]
  04e58	eb000000	 bl          NKDbgPrintfW
  04e5c	e3a03000	 mov         r3, #0
  04e60	e58d303c	 str         r3, [sp, #0x3C]
  04e64		 |$LN37@DevStatEve|
  04e64	e3a03001	 mov         r3, #1
  04e68	e58d3040	 str         r3, [sp, #0x40]
  04e6c	ea000001	 b           |$LN39@DevStatEve|
  04e70		 |$LN38@DevStatEve|
  04e70	e3a03000	 mov         r3, #0
  04e74	e58d3040	 str         r3, [sp, #0x40]
  04e78		 |$LN39@DevStatEve|

; 830  : 
; 831  :             // Let MDD process change
; 832  :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_EVENTS, UFN_SUSPEND);

  04e78	e3a02003	 mov         r2, #3
  04e7c	e3a01001	 mov         r1, #1
  04e80	e59d3078	 ldr         r3, [sp, #0x78]
  04e84	e2833018	 add         r3, r3, #0x18
  04e88	e5930000	 ldr         r0, [r3]
  04e8c	e59d3078	 ldr         r3, [sp, #0x78]
  04e90	e283301c	 add         r3, r3, #0x1C
  04e94	e5933000	 ldr         r3, [r3]
  04e98	e1a0e00f	 mov         lr, pc
  04e9c	e12fff13	 bx          r3

; 833  : 
; 834  :             // Read device status
; 835  :             INREG32(&pUSBDRegs->DEVSTAT);

  04ea0	e59d3004	 ldr         r3, [sp, #4]
  04ea4	e2833020	 add         r3, r3, #0x20
  04ea8	e5933000	 ldr         r3, [r3]
  04eac	e58d3044	 str         r3, [sp, #0x44]

; 836  : 
; 837  :             // Put the device in the D2 state.
; 838  :             // Note that putting the device in D4 causes an endless loop if
; 839  :             // no USB cable is currently plugged in. The suspend bit is set
; 840  :             // when we get a suspend interrupt; if we turn the power off,
; 841  :             // the suspend bit gets cleared, triggering a resume interrupt.
; 842  :             // If no USB cable is plugged in, then a suspend interrupt gets
; 843  :             // generated since no USB device is present. The suspend interrupt
; 844  :             // then triggers the power off, which clears the suspend bit,
; 845  :             // which triggers the resume interrupt, and we enter an infinite
; 846  :             // loop from which there is no escape.
; 847  :             pPdd->m_NewPowerState = D2;

  04eb0	e59d3078	 ldr         r3, [sp, #0x78]
  04eb4	e2832038	 add         r2, r3, #0x38
  04eb8	e3a03002	 mov         r3, #2
  04ebc	e5823000	 str         r3, [r2]

; 848  :             UpdateDevicePower(pPdd);

  04ec0	e59d0078	 ldr         r0, [sp, #0x78]
  04ec4	eb000000	 bl          UpdateDevicePower

; 849  : 
; 850  : #ifndef USE_OLD_CABLE_DETECT_METHOD
; 851  : 
; 852  :             // This is a work-around for what is fundamentally a hardware design flaw.
; 853  :             // We can't use the ATT bit in the DEV_STAT register to determine when
; 854  :             // a cable is removed since the ATT bit is always set since we set the
; 855  :             // BSESSVLD bit in the InitializeHardware() function. We are supposed to
; 856  :             // be able to check to see whether a cable is connected to the device
; 857  :             // and set BSESSVLD as appropriate, but the hardware design for the H4
; 858  :             // lacks this functionality.
; 859  :             // As a result, we treat SUSPEND interrupts as if they indicate both a
; 860  :             // suspend and a cable removal.
; 861  : 
; 862  :             DEBUGMSG(ZONE_PDD, (L"USBD DevStatEvent() - "
; 863  :                 L"Detected Cable Removal Event!\r\n"));

  04ec8	e59f3334	 ldr         r3, [pc, #0x334]
  04ecc	e5933440	 ldr         r3, [r3, #0x440]
  04ed0	e3130902	 tst         r3, #2, 18
  04ed4	0a00000f	 beq         |$LN42@DevStatEve|
  04ed8	e59f3324	 ldr         r3, [pc, #0x324]
  04edc	e5933440	 ldr         r3, [r3, #0x440]
  04ee0	e3130801	 tst         r3, #1, 16
  04ee4	0a000004	 beq         |$LN40@DevStatEve|
  04ee8	e59f0324	 ldr         r0, [pc, #0x324]
  04eec	eb000000	 bl          CeLogMsg
  04ef0	e3a03001	 mov         r3, #1
  04ef4	e58d3048	 str         r3, [sp, #0x48]
  04ef8	ea000003	 b           |$LN41@DevStatEve|
  04efc		 |$LN40@DevStatEve|
  04efc	e59f0310	 ldr         r0, [pc, #0x310]
  04f00	eb000000	 bl          NKDbgPrintfW
  04f04	e3a03000	 mov         r3, #0
  04f08	e58d3048	 str         r3, [sp, #0x48]
  04f0c		 |$LN41@DevStatEve|
  04f0c	e3a03001	 mov         r3, #1
  04f10	e58d304c	 str         r3, [sp, #0x4C]
  04f14	ea000001	 b           |$LN43@DevStatEve|
  04f18		 |$LN42@DevStatEve|
  04f18	e3a03000	 mov         r3, #0
  04f1c	e58d304c	 str         r3, [sp, #0x4C]
  04f20		 |$LN43@DevStatEve|

; 864  : 
; 865  :             // We are not configured anymore
; 866  :             OUTREG32(&pUSBDRegs->SYSCON2, USBD_SYSCON2_CLR_CFG);

  04f20	e59d3004	 ldr         r3, [sp, #4]
  04f24	e283201c	 add         r2, r3, #0x1C
  04f28	e3a03004	 mov         r3, #4
  04f2c	e5823000	 str         r3, [r2]

; 867  : 
; 868  :             // TODO: Call bus driver (OTG?) to move HW to deep sleep
; 869  :             // Let MDD process change
; 870  :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_EVENTS, UFN_DETACH);

  04f30	e3a02000	 mov         r2, #0
  04f34	e3a01001	 mov         r1, #1
  04f38	e59d3078	 ldr         r3, [sp, #0x78]
  04f3c	e2833018	 add         r3, r3, #0x18
  04f40	e5930000	 ldr         r0, [r3]
  04f44	e59d3078	 ldr         r3, [sp, #0x78]
  04f48	e283301c	 add         r3, r3, #0x1C
  04f4c	e5933000	 ldr         r3, [r3]
  04f50	e1a0e00f	 mov         lr, pc
  04f54	e12fff13	 bx          r3

; 871  : 
; 872  :             // Don't process other changes (we are disconnected)
; 873  :             goto DevStatClean;

  04f58	ea00008b	 b           |$DevStatClean$44458|

; 874  : 
; 875  : #endif // ! USE_OLD_CABLE_DETECT_METHOD
; 876  :         }
; 877  :         else

  04f5c	ea00004f	 b           |$LN4@DevStatEve|
  04f60		 |$LN5@DevStatEve|

; 878  :         {
; 879  :             DEBUGMSG(ZONE_PDD, (L"USBD DevStatEvent() - "
; 880  :                 L"Detected Device Resume Event!\r\n"));

  04f60	e59f329c	 ldr         r3, [pc, #0x29C]
  04f64	e5933440	 ldr         r3, [r3, #0x440]
  04f68	e3130902	 tst         r3, #2, 18
  04f6c	0a00000f	 beq         |$LN46@DevStatEve|
  04f70	e59f328c	 ldr         r3, [pc, #0x28C]
  04f74	e5933440	 ldr         r3, [r3, #0x440]
  04f78	e3130801	 tst         r3, #1, 16
  04f7c	0a000004	 beq         |$LN44@DevStatEve|
  04f80	e59f0288	 ldr         r0, [pc, #0x288]
  04f84	eb000000	 bl          CeLogMsg
  04f88	e3a03001	 mov         r3, #1
  04f8c	e58d3050	 str         r3, [sp, #0x50]
  04f90	ea000003	 b           |$LN45@DevStatEve|
  04f94		 |$LN44@DevStatEve|
  04f94	e59f0274	 ldr         r0, [pc, #0x274]
  04f98	eb000000	 bl          NKDbgPrintfW
  04f9c	e3a03000	 mov         r3, #0
  04fa0	e58d3050	 str         r3, [sp, #0x50]
  04fa4		 |$LN45@DevStatEve|
  04fa4	e3a03001	 mov         r3, #1
  04fa8	e58d3054	 str         r3, [sp, #0x54]
  04fac	ea000001	 b           |$LN47@DevStatEve|
  04fb0		 |$LN46@DevStatEve|
  04fb0	e3a03000	 mov         r3, #0
  04fb4	e58d3054	 str         r3, [sp, #0x54]
  04fb8		 |$LN47@DevStatEve|

; 881  : 
; 882  :             pPdd->m_NewPowerState = D0;

  04fb8	e59d3078	 ldr         r3, [sp, #0x78]
  04fbc	e2832038	 add         r2, r3, #0x38
  04fc0	e3a03000	 mov         r3, #0
  04fc4	e5823000	 str         r3, [r2]

; 883  :             UpdateDevicePower(pPdd);

  04fc8	e59d0078	 ldr         r0, [sp, #0x78]
  04fcc	eb000000	 bl          UpdateDevicePower

; 884  : 
; 885  :             // Let MDD process change
; 886  :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_EVENTS, UFN_RESUME);

  04fd0	e3a02004	 mov         r2, #4
  04fd4	e3a01001	 mov         r1, #1
  04fd8	e59d3078	 ldr         r3, [sp, #0x78]
  04fdc	e2833018	 add         r3, r3, #0x18
  04fe0	e5930000	 ldr         r0, [r3]
  04fe4	e59d3078	 ldr         r3, [sp, #0x78]
  04fe8	e283301c	 add         r3, r3, #0x1C
  04fec	e5933000	 ldr         r3, [r3]
  04ff0	e1a0e00f	 mov         lr, pc
  04ff4	e12fff13	 bx          r3

; 887  : 
; 888  : #ifndef USE_OLD_CABLE_DETECT_METHOD
; 889  : 
; 890  :             // This is a work-around for what is fundamentally a hardware design flaw.
; 891  :             // We can't use the ATT bit in the DEV_STAT register to determine when
; 892  :             // a cable is inserted since the ATT bit is always set since we set the
; 893  :             // BSESSVLD bit in the InitializeHardware() function. We are supposed to
; 894  :             // be able to check to see whether a cable is connected to the device
; 895  :             // and set BSESSVLD as appropriate, but the hardware design for the H4
; 896  :             // lacks this functionality.
; 897  :             // As a result, we treat RESUME interrupts as if they indicate both a
; 898  :             // resume and a cable insertion.
; 899  : 
; 900  :             DEBUGMSG(ZONE_PDD, (L"USBD DevStatEvent() - "
; 901  :                 L"Detected Cable Insertion Event!\r\n"));

  04ff8	e59f3204	 ldr         r3, [pc, #0x204]
  04ffc	e5933440	 ldr         r3, [r3, #0x440]
  05000	e3130902	 tst         r3, #2, 18
  05004	0a00000f	 beq         |$LN50@DevStatEve|
  05008	e59f31f4	 ldr         r3, [pc, #0x1F4]
  0500c	e5933440	 ldr         r3, [r3, #0x440]
  05010	e3130801	 tst         r3, #1, 16
  05014	0a000004	 beq         |$LN48@DevStatEve|
  05018	e59f01ec	 ldr         r0, [pc, #0x1EC]
  0501c	eb000000	 bl          CeLogMsg
  05020	e3a03001	 mov         r3, #1
  05024	e58d3058	 str         r3, [sp, #0x58]
  05028	ea000003	 b           |$LN49@DevStatEve|
  0502c		 |$LN48@DevStatEve|
  0502c	e59f01d8	 ldr         r0, [pc, #0x1D8]
  05030	eb000000	 bl          NKDbgPrintfW
  05034	e3a03000	 mov         r3, #0
  05038	e58d3058	 str         r3, [sp, #0x58]
  0503c		 |$LN49@DevStatEve|
  0503c	e3a03001	 mov         r3, #1
  05040	e58d305c	 str         r3, [sp, #0x5C]
  05044	ea000001	 b           |$LN51@DevStatEve|
  05048		 |$LN50@DevStatEve|
  05048	e3a03000	 mov         r3, #0
  0504c	e58d305c	 str         r3, [sp, #0x5C]
  05050		 |$LN51@DevStatEve|

; 902  : 
; 903  :             // Let MDD process change
; 904  :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_EVENTS, UFN_ATTACH);

  05050	e3a02001	 mov         r2, #1
  05054	e3a01001	 mov         r1, #1
  05058	e59d3078	 ldr         r3, [sp, #0x78]
  0505c	e2833018	 add         r3, r3, #0x18
  05060	e5930000	 ldr         r0, [r3]
  05064	e59d3078	 ldr         r3, [sp, #0x78]
  05068	e283301c	 add         r3, r3, #0x1C
  0506c	e5933000	 ldr         r3, [r3]
  05070	e1a0e00f	 mov         lr, pc
  05074	e12fff13	 bx          r3

; 905  :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_SPEED,  BS_FULL_SPEED);

  05078	e3a02001	 mov         r2, #1
  0507c	e3a01003	 mov         r1, #3
  05080	e59d3078	 ldr         r3, [sp, #0x78]
  05084	e2833018	 add         r3, r3, #0x18
  05088	e5930000	 ldr         r0, [r3]
  0508c	e59d3078	 ldr         r3, [sp, #0x78]
  05090	e283301c	 add         r3, r3, #0x1C
  05094	e5933000	 ldr         r3, [r3]
  05098	e1a0e00f	 mov         lr, pc
  0509c	e12fff13	 bx          r3
  050a0		 |$LN4@DevStatEve|
  050a0		 |$LN6@DevStatEve|

; 906  : 
; 907  : #endif // ! USE_OLD_CABLE_DETECT_METHOD
; 908  :         }
; 909  :     }
; 910  : 
; 911  :     // Configured
; 912  :     // if ((change & USBD_DEVSTAT_CFG) != 0)
; 913  :     // {
; 914  :     // }
; 915  : 
; 916  :     // Addressed
; 917  :     if ((change & USBD_DEVSTAT_ADD) != 0)

  050a0	e59d3000	 ldr         r3, [sp]
  050a4	e3130004	 tst         r3, #4
  050a8	0a000037	 beq         |$LN3@DevStatEve|

; 918  :     {
; 919  :         DEBUGMSG(ZONE_PDD, (L"USBD DevStatEvent() - "
; 920  :             L"Detected Device Address Event!\r\n"));

  050ac	e59f3150	 ldr         r3, [pc, #0x150]
  050b0	e5933440	 ldr         r3, [r3, #0x440]
  050b4	e3130902	 tst         r3, #2, 18
  050b8	0a00000f	 beq         |$LN54@DevStatEve|
  050bc	e59f3140	 ldr         r3, [pc, #0x140]
  050c0	e5933440	 ldr         r3, [r3, #0x440]
  050c4	e3130801	 tst         r3, #1, 16
  050c8	0a000004	 beq         |$LN52@DevStatEve|
  050cc	e59f0134	 ldr         r0, [pc, #0x134]
  050d0	eb000000	 bl          CeLogMsg
  050d4	e3a03001	 mov         r3, #1
  050d8	e58d3060	 str         r3, [sp, #0x60]
  050dc	ea000003	 b           |$LN53@DevStatEve|
  050e0		 |$LN52@DevStatEve|
  050e0	e59f0120	 ldr         r0, [pc, #0x120]
  050e4	eb000000	 bl          NKDbgPrintfW
  050e8	e3a03000	 mov         r3, #0
  050ec	e58d3060	 str         r3, [sp, #0x60]
  050f0		 |$LN53@DevStatEve|
  050f0	e3a03001	 mov         r3, #1
  050f4	e58d3064	 str         r3, [sp, #0x64]
  050f8	ea000001	 b           |$LN55@DevStatEve|
  050fc		 |$LN54@DevStatEve|
  050fc	e3a03000	 mov         r3, #0
  05100	e58d3064	 str         r3, [sp, #0x64]
  05104		 |$LN55@DevStatEve|

; 921  : 
; 922  :         if ((state & USBD_DEVSTAT_ADD) != 0)

  05104	e59d3008	 ldr         r3, [sp, #8]
  05108	e3130004	 tst         r3, #4
  0510c	0a00000a	 beq         |$LN2@DevStatEve|

; 923  :         {
; 924  :             // Let MDD process change
; 925  :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_SET_ADDRESS, 1);

  05110	e3a02001	 mov         r2, #1
  05114	e3a01006	 mov         r1, #6
  05118	e59d3078	 ldr         r3, [sp, #0x78]
  0511c	e2833018	 add         r3, r3, #0x18
  05120	e5930000	 ldr         r0, [r3]
  05124	e59d3078	 ldr         r3, [sp, #0x78]
  05128	e283301c	 add         r3, r3, #0x1C
  0512c	e5933000	 ldr         r3, [r3]
  05130	e1a0e00f	 mov         lr, pc
  05134	e12fff13	 bx          r3

; 926  :         }
; 927  :         else

  05138	ea000013	 b           |$LN1@DevStatEve|
  0513c		 |$LN2@DevStatEve|

; 928  :         {
; 929  :             // Let MDD process change
; 930  :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_CONFIGURED,  0);

  0513c	e3a02000	 mov         r2, #0
  05140	e3a01002	 mov         r1, #2
  05144	e59d3078	 ldr         r3, [sp, #0x78]
  05148	e2833018	 add         r3, r3, #0x18
  0514c	e5930000	 ldr         r0, [r3]
  05150	e59d3078	 ldr         r3, [sp, #0x78]
  05154	e283301c	 add         r3, r3, #0x1C
  05158	e5933000	 ldr         r3, [r3]
  0515c	e1a0e00f	 mov         lr, pc
  05160	e12fff13	 bx          r3

; 931  :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_SET_ADDRESS, 0);

  05164	e3a02000	 mov         r2, #0
  05168	e3a01006	 mov         r1, #6
  0516c	e59d3078	 ldr         r3, [sp, #0x78]
  05170	e2833018	 add         r3, r3, #0x18
  05174	e5930000	 ldr         r0, [r3]
  05178	e59d3078	 ldr         r3, [sp, #0x78]
  0517c	e283301c	 add         r3, r3, #0x1C
  05180	e5933000	 ldr         r3, [r3]
  05184	e1a0e00f	 mov         lr, pc
  05188	e12fff13	 bx          r3
  0518c		 |$LN1@DevStatEve|
  0518c		 |$LN3@DevStatEve|
  0518c		 |$DevStatClean$44458|

; 932  :         }
; 933  :     }
; 934  : 
; 935  : DevStatClean:
; 936  :     // Save device state for next interrupt
; 937  :     pPdd->devState = state;

  0518c	e59d3078	 ldr         r3, [sp, #0x78]
  05190	e2832040	 add         r2, r3, #0x40
  05194	e59d3008	 ldr         r3, [sp, #8]
  05198	e5823000	 str         r3, [r2]

; 938  : 
; 939  :     DEBUGMSG(ZONE_FUNCTION, (L"USBD DevStatEvent() - END\r\n"));

  0519c	e59f3060	 ldr         r3, [pc, #0x60]
  051a0	e5933440	 ldr         r3, [r3, #0x440]
  051a4	e3130a01	 tst         r3, #1, 20
  051a8	0a00000f	 beq         |$LN58@DevStatEve|
  051ac	e59f3050	 ldr         r3, [pc, #0x50]
  051b0	e5933440	 ldr         r3, [r3, #0x440]
  051b4	e3130801	 tst         r3, #1, 16
  051b8	0a000004	 beq         |$LN56@DevStatEve|
  051bc	e59f003c	 ldr         r0, [pc, #0x3C]
  051c0	eb000000	 bl          CeLogMsg
  051c4	e3a03001	 mov         r3, #1
  051c8	e58d3068	 str         r3, [sp, #0x68]
  051cc	ea000003	 b           |$LN57@DevStatEve|
  051d0		 |$LN56@DevStatEve|
  051d0	e59f0028	 ldr         r0, [pc, #0x28]
  051d4	eb000000	 bl          NKDbgPrintfW
  051d8	e3a03000	 mov         r3, #0
  051dc	e58d3068	 str         r3, [sp, #0x68]
  051e0		 |$LN57@DevStatEve|
  051e0	e3a03001	 mov         r3, #1
  051e4	e58d306c	 str         r3, [sp, #0x6C]
  051e8	ea000001	 b           |$LN59@DevStatEve|
  051ec		 |$LN58@DevStatEve|
  051ec	e3a03000	 mov         r3, #0
  051f0	e58d306c	 str         r3, [sp, #0x6C]
  051f4		 |$LN59@DevStatEve|

; 940  : }

  051f4	e28dd070	 add         sp, sp, #0x70
  051f8	e89d6000	 ldmia       sp, {sp, lr}
  051fc	e12fff1e	 bx          lr
  05200		 |$LN63@DevStatEve|
  05200		 |$LN64@DevStatEve|
  05200	00000000	 DCD         |??_C@_1DI@NGOPCHHN@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAN?$AAD?$AA?$AN?$AA?6?$AA?$AA@|
  05204		 |$LN65@DevStatEve|
  05204	00000000	 DCD         |dpCurSettings|
  05208		 |$LN66@DevStatEve|
  05208	00000000	 DCD         |??_C@_1GO@COCMEBEB@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAD@|
  0520c		 |$LN67@DevStatEve|
  0520c	00000000	 DCD         |??_C@_1HA@LOOAJFB@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAC@|
  05210		 |$LN68@DevStatEve|
  05210	00000000	 DCD         |??_C@_1GM@EIHDGLNN@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAD@|
  05214		 |$LN69@DevStatEve|
  05214	00000000	 DCD         |??_C@_1GM@CFFBHHGB@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAC@|
  05218		 |$LN70@DevStatEve|
  05218	00000000	 DCD         |??_C@_1GO@OBNDDCDH@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAD@|
  0521c		 |$LN71@DevStatEve|
  0521c	00000000	 DCD         |??_C@_1GE@MGGNKOOI@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAU@|
  05220		 |$LN72@DevStatEve|
  05220	00000000	 DCD         |??_C@_1IA@CKDAJKGF@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAS?$AAt@|
  05224		 |$LN73@DevStatEve|
  05224	00000000	 DCD         |??_C@_1GO@OONPNBAP@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAS?$AAt?$AAa@|
  05228		 |$LN74@DevStatEve|
  05228	00000000	 DCD         |??_C@_1GO@OFCOOGBH@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?5?$AAD@|
  0522c		 |$LN75@DevStatEve|
  0522c	00000000	 DCD         |??_C@_1GO@BMJPPFGL@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAP?$AAr?$AAe?$AAv?$AAi?$AAo?$AAu?$AAs?$AA?5?$AAD@|
  05230		 |$LN76@DevStatEve|
  05230	00000000	 DCD         |??_C@_1DM@FAABLJPA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAv?$AAS?$AAt?$AAa?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?$AN?$AA?6?$AA?$AA@|
  05234		 |$M46578|

			 ENDP  ; |DevStatEvent|

	EXPORT	|UfnPdd_DllEntry|

  00138			 AREA	 |.pdata|, PDATA
|$T46600| DCD	|$LN5@UfnPdd_Dll|
	DCD	0x40000a04
; Function compile flags: /Odtp

  05234			 AREA	 |.text|, CODE, ARM

  05234		 |UfnPdd_DllEntry| PROC

; 2290 : {

  05234		 |$LN5@UfnPdd_Dll|
  05234	e1a0c00d	 mov         r12, sp
  05238	e92d0007	 stmdb       sp!, {r0 - r2}
  0523c	e92d5000	 stmdb       sp!, {r12, lr}
  05240	e24dd004	 sub         sp, sp, #4
  05244		 |$M46597|

; 2291 : //    DEBUGMSG(ZONE_PDD, (L"UfnPdd_DllEntry() - CALLED\r\n"));
; 2292 :     return TRUE;

  05244	e3a03001	 mov         r3, #1
  05248	e58d3000	 str         r3, [sp]

; 2293 : }

  0524c	e59d0000	 ldr         r0, [sp]
  05250	e28dd004	 add         sp, sp, #4
  05254	e89d6000	 ldmia       sp, {sp, lr}
  05258	e12fff1e	 bx          lr
  0525c		 |$M46598|

			 ENDP  ; |UfnPdd_DllEntry|

	EXPORT	|??_C@_1CK@CKMPBAFI@?$AA?7?$AAV?$AAC?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@OLGFIEMP@?$AA?7?$AAT?$AAE?$AAS?$AAT?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@POPOFGPF@?$AA?7?$AAO?$AAU?$AAT?$AAC?$AAT?$AAR?$AAL?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@OJBAJNGP@?$AA?7?$AAI?$AAR?$AAQ?$AA_?$AAS?$AAR?$AAC?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@FNABKJFN@?$AA?7?$AAI?$AAR?$AAQ?$AA_?$AAE?$AAN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@IIBMNIKA@?$AA?7?$AAC?$AAT?$AAR?$AAL?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@CCGEGJNA@?$AA?7?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AA_?$AA2?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@NADDIECI@?$AA?7?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AA_?$AA1?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@GDALIBOC@?$AA?7?$AAR?$AAE?$AAV?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@LFAFONGA@?$AAD?$AAu?$AAm?$AAp?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAO?$AAT?$AAG?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IM@KIKNGDBH@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAP?$AAD?$AAD?$AA_?$AAD?$AAu?$AAm?$AAp?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@GLCADIAB@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAM?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AAM?$AAU?$AAX?$AA_?$AA5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@IMDNJOJG@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAM?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AAM?$AAU?$AAX?$AA_?$AA4?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@FEPOOFLA@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAM?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AAM?$AAU?$AAX?$AA_?$AA3?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@LDODEDCH@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAM?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AAM?$AAU?$AAX?$AA_?$AA2?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@EBLEKONP@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAM?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AAM?$AAU?$AAX?$AA_?$AA1?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@KGKJAIEI@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAM?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AAM?$AAU?$AAX?$AA_?$AA0?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@PPPANBOM@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAE?$AAM?$AAU?$AA_?$AAS?$AAU?$AAP?$AAP?$AAO?$AAR?$AAT?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@FNEHFKLA@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAD?$AAE?$AAV?$AAC?$AAO?$AAN?$AAF?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@OKMHGLMJ@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAD?$AAE?$AAB?$AAO?$AAB?$AAS?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@MKLKCJP@?$AA?7?$AAP?$AAA?$AAD?$AAC?$AAO?$AAN?$AAF?$AA_?$AAU?$AAS?$AAB?$AA0?$AA_?$AAR?$AAC?$AAV?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@MBIBLMLG@?$AA?7?$AAP?$AAA?$AAD?$AAC?$AAO?$AAN?$AAF?$AA_?$AAT?$AAV?$AA_?$AAR?$AAR?$AAE?$AAF?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@ECLKIIEN@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@KDDHLEIE@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAR?$AAE?$AAV?$AAI?$AAS?$AAI?$AAO?$AAN?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@PFNEMNMO@?$AAD?$AAu?$AAm?$AAp?$AA?5?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JK@ILHGFGFN@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAP?$AAD?$AAD?$AA_?$AAD?$AAu?$AAm?$AAp?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@BAAIBNFG@?$AA?7?$AAE?$AAP?$AA_?$AAT?$AAX?$AA?$FL?$AA3?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@OBNCBIPM@?$AA?7?$AAE?$AAP?$AA_?$AAT?$AAX?$AA?$FL?$AA2?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@CIMNBAED@?$AA?7?$AAE?$AAP?$AA_?$AAT?$AAX?$AA?$FL?$AA1?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@NJBHBFOJ@?$AA?7?$AAE?$AAP?$AA_?$AAT?$AAX?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@ILNIBNJI@?$AA?7?$AAE?$AAP?$AA_?$AAR?$AAX?$AA?$FL?$AA3?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@HKACBIDC@?$AA?7?$AAE?$AAP?$AA_?$AAR?$AAX?$AA?$FL?$AA2?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@LDBNBAIN@?$AA?7?$AAE?$AAP?$AA_?$AAR?$AAX?$AA?$FL?$AA1?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@ECMHBFCH@?$AA?7?$AAE?$AAP?$AA_?$AAR?$AAX?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@FLPNEFHI@?$AA?7?$AAE?$AAP?$AA0?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@IBMKODGG@?$AA?7?$AAR?$AAX?$AAD?$AAM?$AAA?$AA2?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@OMEMBADM@?$AA?7?$AAR?$AAX?$AAD?$AAM?$AAA?$AA1?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@MIMOEBAK@?$AA?7?$AAR?$AAX?$AAD?$AAM?$AAA?$AA0?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@HNDKHCCK@?$AA?7?$AAT?$AAX?$AAD?$AAM?$AAA?$AA2?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@BALMIBHA@?$AA?7?$AAT?$AAX?$AAD?$AAM?$AAA?$AA1?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@DEDONAEG@?$AA?7?$AAT?$AAX?$AAD?$AAM?$AAA?$AA0?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@EADMAAPI@?$AA?7?$AAT?$AAX?$AAD?$AAM?$AAA?$AA_?$AAC?$AAF?$AAG?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@LMMMJBLE@?$AA?7?$AAR?$AAX?$AAD?$AAM?$AAA?$AA_?$AAC?$AAF?$AAG?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@DDFEPGLI@?$AA?7?$AAD?$AAM?$AAA?$AA_?$AAS?$AAT?$AAA?$AAT?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@FGFDIKHI@?$AA?7?$AAE?$AAP?$AA_?$AAS?$AAT?$AAA?$AAT?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@JPFGPDOC@?$AA?7?$AAI?$AAR?$AAQ?$AA_?$AAS?$AAR?$AAC?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@JEPMPDPD@?$AA?7?$AAD?$AAM?$AAA?$AA_?$AAI?$AAR?$AAQ?$AA_?$AAE?$AAN?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@HJMDNKAB@?$AA?7?$AAI?$AAR?$AAQ?$AA_?$AAE?$AAN?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@FFKBPHCP@?$AA?7?$AAS?$AAO?$AAF?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@PCDGFFFJ@?$AA?7?$AAD?$AAE?$AAV?$AAS?$AAT?$AAA?$AAT?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@CBCEPHHF@?$AA?7?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AA2?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@OIDLPPMK@?$AA?7?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AA1?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@GHNAILEE@?$AA?7?$AAR?$AAX?$AAF?$AAS?$AAT?$AAA?$AAT?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@BIMKJAAL@?$AA?7?$AAS?$AAT?$AAA?$AAT?$AA_?$AAF?$AAL?$AAG?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@HLNMMNHG@?$AA?7?$AAC?$AAT?$AAR?$AAL?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@FJKGIOCD@?$AA?7?$AAE?$AAP?$AA_?$AAN?$AAU?$AAM?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@BLPHPHJJ@?$AA?7?$AAR?$AAE?$AAV?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@PAIEAHOO@?$AAD?$AAu?$AAm?$AAp?$AA?5?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HK@PBAEGKEA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAP?$AAD?$AAD?$AA_?$AAD?$AAu?$AAm?$AAp?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAP?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@CBBNADKJ@?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN@| [ DATA ] ; `string'
	EXPORT	|PDD_Dump|

  00140			 AREA	 |.pdata|, PDATA
|$T46865| DCD	|$LN271@PDD_Dump|
	DCD	0x40074604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@CKMPBAFI@?$AA?7?$AAV?$AAC?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "V", 0x0, "C", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@OLGFIEMP@?$AA?7?$AAT?$AAE?$AAS?$AAT?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "T", 0x0, "E", 0x0, "S", 0x0, "T", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "X", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@POPOFGPF@?$AA?7?$AAO?$AAU?$AAT?$AAC?$AAT?$AAR?$AAL?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "O", 0x0, "U", 0x0, "T", 0x0, "C", 0x0, "T", 0x0, "R"
	DCB	0x0, "L", 0x0, " ", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "X", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@OJBAJNGP@?$AA?7?$AAI?$AAR?$AAQ?$AA_?$AAS?$AAR?$AAC?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "I", 0x0, "R", 0x0, "Q", 0x0, "_", 0x0, "S", 0x0, "R"
	DCB	0x0, "C", 0x0, " ", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "X", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@FNABKJFN@?$AA?7?$AAI?$AAR?$AAQ?$AA_?$AAE?$AAN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "I", 0x0, "R", 0x0, "Q", 0x0, "_", 0x0, "E", 0x0, "N"
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "X", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@IIBMNIKA@?$AA?7?$AAC?$AAT?$AAR?$AAL?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "C", 0x0, "T", 0x0, "R", 0x0, "L", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@CCGEGJNA@?$AA?7?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AA_?$AA2?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "S", 0x0, "Y", 0x0, "S", 0x0, "C", 0x0, "O", 0x0, "N"
	DCB	0x0, "_", 0x0, "2", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@NADDIECI@?$AA?7?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AA_?$AA1?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "S", 0x0, "Y", 0x0, "S", 0x0, "C", 0x0, "O", 0x0, "N"
	DCB	0x0, "_", 0x0, "1", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@GDALIBOC@?$AA?7?$AAR?$AAE?$AAV?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "R", 0x0, "E", 0x0, "V", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@LFAFONGA@?$AAD?$AAu?$AAm?$AAp?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAO?$AAT?$AAG?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "u", 0x0, "m", 0x0, "p", 0x0, " ", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, " ", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IM@KIKNGDBH@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAP?$AAD?$AAD?$AA_?$AAD?$AAu?$AAm?$AAp?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "P", 0x0, "D"
	DCB	0x0, "D", 0x0, "_", 0x0, "D", 0x0, "u", 0x0, "m", 0x0, "p"
	DCB	0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "U", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "m", 0x0, "a"
	DCB	0x0, "p", 0x0, " ", 0x0, "m", 0x0, "e", 0x0, "m", 0x0, "o"
	DCB	0x0, "r", 0x0, "y", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, " ", 0x0, "O"
	DCB	0x0, "T", 0x0, "G", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@GLCADIAB@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAM?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AAM?$AAU?$AAX?$AA_?$AA5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| DCB 0x9
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "_", 0x0, "M", 0x0, "S", 0x0, "U", 0x0, "S"
	DCB	0x0, "P", 0x0, "E", 0x0, "N", 0x0, "D", 0x0, "M", 0x0, "U"
	DCB	0x0, "X", 0x0, "_", 0x0, "5", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@IMDNJOJG@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAM?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AAM?$AAU?$AAX?$AA_?$AA4?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| DCB 0x9
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "_", 0x0, "M", 0x0, "S", 0x0, "U", 0x0, "S"
	DCB	0x0, "P", 0x0, "E", 0x0, "N", 0x0, "D", 0x0, "M", 0x0, "U"
	DCB	0x0, "X", 0x0, "_", 0x0, "4", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@FEPOOFLA@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAM?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AAM?$AAU?$AAX?$AA_?$AA3?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| DCB 0x9
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "_", 0x0, "M", 0x0, "S", 0x0, "U", 0x0, "S"
	DCB	0x0, "P", 0x0, "E", 0x0, "N", 0x0, "D", 0x0, "M", 0x0, "U"
	DCB	0x0, "X", 0x0, "_", 0x0, "3", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@LDODEDCH@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAM?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AAM?$AAU?$AAX?$AA_?$AA2?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| DCB 0x9
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "_", 0x0, "M", 0x0, "S", 0x0, "U", 0x0, "S"
	DCB	0x0, "P", 0x0, "E", 0x0, "N", 0x0, "D", 0x0, "M", 0x0, "U"
	DCB	0x0, "X", 0x0, "_", 0x0, "2", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@EBLEKONP@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAM?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AAM?$AAU?$AAX?$AA_?$AA1?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| DCB 0x9
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "_", 0x0, "M", 0x0, "S", 0x0, "U", 0x0, "S"
	DCB	0x0, "P", 0x0, "E", 0x0, "N", 0x0, "D", 0x0, "M", 0x0, "U"
	DCB	0x0, "X", 0x0, "_", 0x0, "1", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@KGKJAIEI@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAM?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AAM?$AAU?$AAX?$AA_?$AA0?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| DCB 0x9
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "_", 0x0, "M", 0x0, "S", 0x0, "U", 0x0, "S"
	DCB	0x0, "P", 0x0, "E", 0x0, "N", 0x0, "D", 0x0, "M", 0x0, "U"
	DCB	0x0, "X", 0x0, "_", 0x0, "0", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@PPPANBOM@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAE?$AAM?$AAU?$AA_?$AAS?$AAU?$AAP?$AAP?$AAO?$AAR?$AAT?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| DCB 0x9
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "_", 0x0, "E", 0x0, "M", 0x0, "U", 0x0, "_"
	DCB	0x0, "S", 0x0, "U", 0x0, "P", 0x0, "P", 0x0, "O", 0x0, "R"
	DCB	0x0, "T", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@FNEHFKLA@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAD?$AAE?$AAV?$AAC?$AAO?$AAN?$AAF?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| DCB 0x9
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "C"
	DCB	0x0, "O", 0x0, "N", 0x0, "F", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@OKMHGLMJ@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAD?$AAE?$AAB?$AAO?$AAB?$AAS?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| DCB 0x9
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "B", 0x0, "O"
	DCB	0x0, "B", 0x0, "S", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@MKLKCJP@?$AA?7?$AAP?$AAA?$AAD?$AAC?$AAO?$AAN?$AAF?$AA_?$AAU?$AAS?$AAB?$AA0?$AA_?$AAR?$AAC?$AAV?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| DCB 0x9
	DCB	0x0, "P", 0x0, "A", 0x0, "D", 0x0, "C", 0x0, "O", 0x0, "N"
	DCB	0x0, "F", 0x0, "_", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "0"
	DCB	0x0, "_", 0x0, "R", 0x0, "C", 0x0, "V", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@MBIBLMLG@?$AA?7?$AAP?$AAA?$AAD?$AAC?$AAO?$AAN?$AAF?$AA_?$AAT?$AAV?$AA_?$AAR?$AAR?$AAE?$AAF?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| DCB 0x9
	DCB	0x0, "P", 0x0, "A", 0x0, "D", 0x0, "C", 0x0, "O", 0x0, "N"
	DCB	0x0, "F", 0x0, "_", 0x0, "T", 0x0, "V", 0x0, "_", 0x0, "R"
	DCB	0x0, "R", 0x0, "E", 0x0, "F", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@ECLKIIEN@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| DCB 0x9
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "_", 0x0, "S", 0x0, "Y", 0x0, "S", 0x0, "C"
	DCB	0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@KDDHLEIE@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAR?$AAE?$AAV?$AAI?$AAS?$AAI?$AAO?$AAN?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@| DCB 0x9
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "O"
	DCB	0x0, "L", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "V", 0x0, "I"
	DCB	0x0, "S", 0x0, "I", 0x0, "O", 0x0, "N", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@PFNEMNMO@?$AAD?$AAu?$AAm?$AAp?$AA?5?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "u", 0x0, "m", 0x0, "p", 0x0, " ", 0x0, "S", 0x0, "y"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, " ", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JK@ILHGFGFN@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAP?$AAD?$AAD?$AA_?$AAD?$AAu?$AAm?$AAp?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "P", 0x0, "D"
	DCB	0x0, "D", 0x0, "_", 0x0, "D", 0x0, "u", 0x0, "m", 0x0, "p"
	DCB	0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "U", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "m", 0x0, "a"
	DCB	0x0, "p", 0x0, " ", 0x0, "m", 0x0, "e", 0x0, "m", 0x0, "o"
	DCB	0x0, "r", 0x0, "y", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@BAAIBNFG@?$AA?7?$AAE?$AAP?$AA_?$AAT?$AAX?$AA?$FL?$AA3?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "E", 0x0, "P", 0x0, "_", 0x0, "T", 0x0, "X", 0x0, "["
	DCB	0x0, "3", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@OBNCBIPM@?$AA?7?$AAE?$AAP?$AA_?$AAT?$AAX?$AA?$FL?$AA2?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "E", 0x0, "P", 0x0, "_", 0x0, "T", 0x0, "X", 0x0, "["
	DCB	0x0, "2", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@CIMNBAED@?$AA?7?$AAE?$AAP?$AA_?$AAT?$AAX?$AA?$FL?$AA1?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "E", 0x0, "P", 0x0, "_", 0x0, "T", 0x0, "X", 0x0, "["
	DCB	0x0, "1", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@NJBHBFOJ@?$AA?7?$AAE?$AAP?$AA_?$AAT?$AAX?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "E", 0x0, "P", 0x0, "_", 0x0, "T", 0x0, "X", 0x0, "["
	DCB	0x0, "0", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@ILNIBNJI@?$AA?7?$AAE?$AAP?$AA_?$AAR?$AAX?$AA?$FL?$AA3?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "E", 0x0, "P", 0x0, "_", 0x0, "R", 0x0, "X", 0x0, "["
	DCB	0x0, "3", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@HKACBIDC@?$AA?7?$AAE?$AAP?$AA_?$AAR?$AAX?$AA?$FL?$AA2?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "E", 0x0, "P", 0x0, "_", 0x0, "R", 0x0, "X", 0x0, "["
	DCB	0x0, "2", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@LDBNBAIN@?$AA?7?$AAE?$AAP?$AA_?$AAR?$AAX?$AA?$FL?$AA1?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "E", 0x0, "P", 0x0, "_", 0x0, "R", 0x0, "X", 0x0, "["
	DCB	0x0, "1", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@ECMHBFCH@?$AA?7?$AAE?$AAP?$AA_?$AAR?$AAX?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "E", 0x0, "P", 0x0, "_", 0x0, "R", 0x0, "X", 0x0, "["
	DCB	0x0, "0", 0x0, "]", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@FLPNEFHI@?$AA?7?$AAE?$AAP?$AA0?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "E", 0x0, "P", 0x0, "0", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@IBMKODGG@?$AA?7?$AAR?$AAX?$AAD?$AAM?$AAA?$AA2?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "R", 0x0, "X", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "2"
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@OMEMBADM@?$AA?7?$AAR?$AAX?$AAD?$AAM?$AAA?$AA1?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "R", 0x0, "X", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "1"
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@MIMOEBAK@?$AA?7?$AAR?$AAX?$AAD?$AAM?$AAA?$AA0?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "R", 0x0, "X", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "0"
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@HNDKHCCK@?$AA?7?$AAT?$AAX?$AAD?$AAM?$AAA?$AA2?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "T", 0x0, "X", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "2"
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@BALMIBHA@?$AA?7?$AAT?$AAX?$AAD?$AAM?$AAA?$AA1?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "T", 0x0, "X", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "1"
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@DEDONAEG@?$AA?7?$AAT?$AAX?$AAD?$AAM?$AAA?$AA0?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "T", 0x0, "X", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "0"
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@EADMAAPI@?$AA?7?$AAT?$AAX?$AAD?$AAM?$AAA?$AA_?$AAC?$AAF?$AAG?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "T", 0x0, "X", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "_"
	DCB	0x0, "C", 0x0, "F", 0x0, "G", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@LMMMJBLE@?$AA?7?$AAR?$AAX?$AAD?$AAM?$AAA?$AA_?$AAC?$AAF?$AAG?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "R", 0x0, "X", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "_"
	DCB	0x0, "C", 0x0, "F", 0x0, "G", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@DDFEPGLI@?$AA?7?$AAD?$AAM?$AAA?$AA_?$AAS?$AAT?$AAA?$AAT?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "D", 0x0, "M", 0x0, "A", 0x0, "_", 0x0, "S", 0x0, "T"
	DCB	0x0, "A", 0x0, "T", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@FGFDIKHI@?$AA?7?$AAE?$AAP?$AA_?$AAS?$AAT?$AAA?$AAT?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "E", 0x0, "P", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A"
	DCB	0x0, "T", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@JPFGPDOC@?$AA?7?$AAI?$AAR?$AAQ?$AA_?$AAS?$AAR?$AAC?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "I", 0x0, "R", 0x0, "Q", 0x0, "_", 0x0, "S", 0x0, "R"
	DCB	0x0, "C", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@JEPMPDPD@?$AA?7?$AAD?$AAM?$AAA?$AA_?$AAI?$AAR?$AAQ?$AA_?$AAE?$AAN?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "D", 0x0, "M", 0x0, "A", 0x0, "_", 0x0, "I", 0x0, "R"
	DCB	0x0, "Q", 0x0, "_", 0x0, "E", 0x0, "N", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@HJMDNKAB@?$AA?7?$AAI?$AAR?$AAQ?$AA_?$AAE?$AAN?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "I", 0x0, "R", 0x0, "Q", 0x0, "_", 0x0, "E", 0x0, "N"
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@FFKBPHCP@?$AA?7?$AAS?$AAO?$AAF?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "S", 0x0, "O", 0x0, "F", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@PCDGFFFJ@?$AA?7?$AAD?$AAE?$AAV?$AAS?$AAT?$AAA?$AAT?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "D", 0x0, "E", 0x0, "V", 0x0, "S", 0x0, "T", 0x0, "A"
	DCB	0x0, "T", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@CBCEPHHF@?$AA?7?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AA2?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "S", 0x0, "Y", 0x0, "S", 0x0, "C", 0x0, "O", 0x0, "N"
	DCB	0x0, "2", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@OIDLPPMK@?$AA?7?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AA1?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "S", 0x0, "Y", 0x0, "S", 0x0, "C", 0x0, "O", 0x0, "N"
	DCB	0x0, "1", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@GHNAILEE@?$AA?7?$AAR?$AAX?$AAF?$AAS?$AAT?$AAA?$AAT?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "R", 0x0, "X", 0x0, "F", 0x0, "S", 0x0, "T", 0x0, "A"
	DCB	0x0, "T", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@BIMKJAAL@?$AA?7?$AAS?$AAT?$AAA?$AAT?$AA_?$AAF?$AAL?$AAG?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "_", 0x0, "F"
	DCB	0x0, "L", 0x0, "G", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@HLNMMNHG@?$AA?7?$AAC?$AAT?$AAR?$AAL?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "C", 0x0, "T", 0x0, "R", 0x0, "L", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@FJKGIOCD@?$AA?7?$AAE?$AAP?$AA_?$AAN?$AAU?$AAM?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "E", 0x0, "P", 0x0, "_", 0x0, "N", 0x0, "U", 0x0, "M"
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@BLPHPHJJ@?$AA?7?$AAR?$AAE?$AAV?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "R", 0x0, "E", 0x0, "V", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@PAIEAHOO@?$AAD?$AAu?$AAm?$AAp?$AA?5?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "u", 0x0, "m", 0x0, "p", 0x0, " ", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "D", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "s"
	DCB	0x0, ":", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@PBAEGKEA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAP?$AAD?$AAD?$AA_?$AAD?$AAu?$AAm?$AAp?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAP?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "P", 0x0, "D"
	DCB	0x0, "D", 0x0, "_", 0x0, "D", 0x0, "u", 0x0, "m", 0x0, "p"
	DCB	0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "P", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "s", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "N"
	DCB	0x0, "U", 0x0, "L", 0x0, "L", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@| DCB 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@CBBNADKJ@?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN@| DCB "="
	DCB	0x0, "=", 0x0, "=", 0x0, "=", 0x0, "=", 0x0, "=", 0x0, "="
	DCB	0x0, "=", 0x0, "=", 0x0, "=", 0x0, "=", 0x0, "=", 0x0, "="
	DCB	0x0, "=", 0x0, "=", 0x0, "=", 0x0, "=", 0x0, "=", 0x0, "="
	DCB	0x0, "=", 0x0, "=", 0x0, "=", 0x0, "=", 0x0, "=", 0x0, "="
	DCB	0x0, "=", 0x0, "=", 0x0, "=", 0x0, "=", 0x0, "=", 0x0, "="
	DCB	0x0, "=", 0x0, "=", 0x0, "=", 0x0, "=", 0x0, "=", 0x0, "="
	DCB	0x0, "=", 0x0, "=", 0x0, "=", 0x0, "=", 0x0, "=", 0x0, "="
	DCB	0x0, "=", 0x0, "=", 0x0, "=", 0x0, "=", 0x0, "=", 0x0, "="
	DCB	0x0, "=", 0x0, "=", 0x0, "=", 0x0, "=", 0x0, "=", 0x0, "="
	DCB	0x0, "=", 0x0, "=", 0x0, "=", 0x0, "=", 0x0, "=", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  0525c			 AREA	 |.text|, CODE, ARM

  0525c		 |PDD_Dump| PROC

; 2301 : {

  0525c		 |$LN271@PDD_Dump|
  0525c	e1a0c00d	 mov         r12, sp
  05260	e92d0001	 stmdb       sp!, {r0}
  05264	e92d5000	 stmdb       sp!, {r12, lr}
  05268	e24ddf8a	 sub         sp, sp, #0x8A, 30
  0526c		 |$M46862|

; 2302 :     DEBUGMSG(ZONE_PDD, (L"============================================================\r\n"));

  0526c	e59f3c94	 ldr         r3, [pc, #0xC94]
  05270	e5933440	 ldr         r3, [r3, #0x440]
  05274	e3130902	 tst         r3, #2, 18
  05278	0a00000f	 beq         |$LN11@PDD_Dump|
  0527c	e59f3c84	 ldr         r3, [pc, #0xC84]
  05280	e5933440	 ldr         r3, [r3, #0x440]
  05284	e3130801	 tst         r3, #1, 16
  05288	0a000004	 beq         |$LN9@PDD_Dump|
  0528c	e59f0ce8	 ldr         r0, [pc, #0xCE8]
  05290	eb000000	 bl          CeLogMsg
  05294	e3a03001	 mov         r3, #1
  05298	e58d3018	 str         r3, [sp, #0x18]
  0529c	ea000003	 b           |$LN10@PDD_Dump|
  052a0		 |$LN9@PDD_Dump|
  052a0	e59f0cd4	 ldr         r0, [pc, #0xCD4]
  052a4	eb000000	 bl          NKDbgPrintfW
  052a8	e3a03000	 mov         r3, #0
  052ac	e58d3018	 str         r3, [sp, #0x18]
  052b0		 |$LN10@PDD_Dump|
  052b0	e3a03001	 mov         r3, #1
  052b4	e58d301c	 str         r3, [sp, #0x1C]
  052b8	ea000001	 b           |$LN12@PDD_Dump|
  052bc		 |$LN11@PDD_Dump|
  052bc	e3a03000	 mov         r3, #0
  052c0	e58d301c	 str         r3, [sp, #0x1C]
  052c4		 |$LN12@PDD_Dump|

; 2303 :     DEBUGMSG(ZONE_PDD, (L"\r\n"));

  052c4	e59f3c3c	 ldr         r3, [pc, #0xC3C]
  052c8	e5933440	 ldr         r3, [r3, #0x440]
  052cc	e3130902	 tst         r3, #2, 18
  052d0	0a00000f	 beq         |$LN15@PDD_Dump|
  052d4	e59f3c2c	 ldr         r3, [pc, #0xC2C]
  052d8	e5933440	 ldr         r3, [r3, #0x440]
  052dc	e3130801	 tst         r3, #1, 16
  052e0	0a000004	 beq         |$LN13@PDD_Dump|
  052e4	e59f0c8c	 ldr         r0, [pc, #0xC8C]
  052e8	eb000000	 bl          CeLogMsg
  052ec	e3a03001	 mov         r3, #1
  052f0	e58d3020	 str         r3, [sp, #0x20]
  052f4	ea000003	 b           |$LN14@PDD_Dump|
  052f8		 |$LN13@PDD_Dump|
  052f8	e59f0c78	 ldr         r0, [pc, #0xC78]
  052fc	eb000000	 bl          NKDbgPrintfW
  05300	e3a03000	 mov         r3, #0
  05304	e58d3020	 str         r3, [sp, #0x20]
  05308		 |$LN14@PDD_Dump|
  05308	e3a03001	 mov         r3, #1
  0530c	e58d3024	 str         r3, [sp, #0x24]
  05310	ea000001	 b           |$LN16@PDD_Dump|
  05314		 |$LN15@PDD_Dump|
  05314	e3a03000	 mov         r3, #0
  05318	e58d3024	 str         r3, [sp, #0x24]
  0531c		 |$LN16@PDD_Dump|

; 2304 : 
; 2305 :     if (pPddRegs == NULL)

  0531c	e59d3230	 ldr         r3, [sp, #0x230]
  05320	e3530000	 cmp         r3, #0
  05324	1a000016	 bne         |$LN6@PDD_Dump|

; 2306 :     {
; 2307 :         DEBUGMSG(ZONE_PDD, (L"USBD PDD_Dump() - ERROR: Pointer to USBD Registers is NULL\r\n"));

  05328	e59f3bd8	 ldr         r3, [pc, #0xBD8]
  0532c	e5933440	 ldr         r3, [r3, #0x440]
  05330	e3130902	 tst         r3, #2, 18
  05334	0a00000f	 beq         |$LN19@PDD_Dump|
  05338	e59f3bc8	 ldr         r3, [pc, #0xBC8]
  0533c	e5933440	 ldr         r3, [r3, #0x440]
  05340	e3130801	 tst         r3, #1, 16
  05344	0a000004	 beq         |$LN17@PDD_Dump|
  05348	e59f0c24	 ldr         r0, [pc, #0xC24]
  0534c	eb000000	 bl          CeLogMsg
  05350	e3a03001	 mov         r3, #1
  05354	e58d3028	 str         r3, [sp, #0x28]
  05358	ea000003	 b           |$LN18@PDD_Dump|
  0535c		 |$LN17@PDD_Dump|
  0535c	e59f0c10	 ldr         r0, [pc, #0xC10]
  05360	eb000000	 bl          NKDbgPrintfW
  05364	e3a03000	 mov         r3, #0
  05368	e58d3028	 str         r3, [sp, #0x28]
  0536c		 |$LN18@PDD_Dump|
  0536c	e3a03001	 mov         r3, #1
  05370	e58d302c	 str         r3, [sp, #0x2C]
  05374	ea000001	 b           |$LN20@PDD_Dump|
  05378		 |$LN19@PDD_Dump|
  05378	e3a03000	 mov         r3, #0
  0537c	e58d302c	 str         r3, [sp, #0x2C]
  05380		 |$LN20@PDD_Dump|

; 2308 :     }
; 2309 :     else

  05380	ea0003ac	 b           |$LN5@PDD_Dump|
  05384		 |$LN6@PDD_Dump|

; 2310 :     {
; 2311 :         // Print out the values of all USB Device Registers
; 2312 :         DEBUGMSG(ZONE_PDD, (L"Dump USBD Registers:\r\n"));

  05384	e59f3b7c	 ldr         r3, [pc, #0xB7C]
  05388	e5933440	 ldr         r3, [r3, #0x440]
  0538c	e3130902	 tst         r3, #2, 18
  05390	0a00000f	 beq         |$LN23@PDD_Dump|
  05394	e59f3b6c	 ldr         r3, [pc, #0xB6C]
  05398	e5933440	 ldr         r3, [r3, #0x440]
  0539c	e3130801	 tst         r3, #1, 16
  053a0	0a000004	 beq         |$LN21@PDD_Dump|
  053a4	e59f0bc4	 ldr         r0, [pc, #0xBC4]
  053a8	eb000000	 bl          CeLogMsg
  053ac	e3a03001	 mov         r3, #1
  053b0	e58d3030	 str         r3, [sp, #0x30]
  053b4	ea000003	 b           |$LN22@PDD_Dump|
  053b8		 |$LN21@PDD_Dump|
  053b8	e59f0bb0	 ldr         r0, [pc, #0xBB0]
  053bc	eb000000	 bl          NKDbgPrintfW
  053c0	e3a03000	 mov         r3, #0
  053c4	e58d3030	 str         r3, [sp, #0x30]
  053c8		 |$LN22@PDD_Dump|
  053c8	e3a03001	 mov         r3, #1
  053cc	e58d3034	 str         r3, [sp, #0x34]
  053d0	ea000001	 b           |$LN24@PDD_Dump|
  053d4		 |$LN23@PDD_Dump|
  053d4	e3a03000	 mov         r3, #0
  053d8	e58d3034	 str         r3, [sp, #0x34]
  053dc		 |$LN24@PDD_Dump|

; 2313 :         DEBUGMSG(ZONE_PDD, (L"\tREV        = 0x%04X\r\n", INREG32(&pPddRegs->REV)));        // 0000 - Revision

  053dc	e59f3b24	 ldr         r3, [pc, #0xB24]
  053e0	e5933440	 ldr         r3, [r3, #0x440]
  053e4	e3130902	 tst         r3, #2, 18
  053e8	0a000013	 beq         |$LN27@PDD_Dump|
  053ec	e59f3b14	 ldr         r3, [pc, #0xB14]
  053f0	e5933440	 ldr         r3, [r3, #0x440]
  053f4	e3130801	 tst         r3, #1, 16
  053f8	0a000006	 beq         |$LN25@PDD_Dump|
  053fc	e59d3230	 ldr         r3, [sp, #0x230]
  05400	e5931000	 ldr         r1, [r3]
  05404	e59f0b60	 ldr         r0, [pc, #0xB60]
  05408	eb000000	 bl          CeLogMsg
  0540c	e3a03001	 mov         r3, #1
  05410	e58d3038	 str         r3, [sp, #0x38]
  05414	ea000005	 b           |$LN26@PDD_Dump|
  05418		 |$LN25@PDD_Dump|
  05418	e59d3230	 ldr         r3, [sp, #0x230]
  0541c	e5931000	 ldr         r1, [r3]
  05420	e59f0b44	 ldr         r0, [pc, #0xB44]
  05424	eb000000	 bl          NKDbgPrintfW
  05428	e3a03000	 mov         r3, #0
  0542c	e58d3038	 str         r3, [sp, #0x38]
  05430		 |$LN26@PDD_Dump|
  05430	e3a03001	 mov         r3, #1
  05434	e58d303c	 str         r3, [sp, #0x3C]
  05438	ea000001	 b           |$LN28@PDD_Dump|
  0543c		 |$LN27@PDD_Dump|
  0543c	e3a03000	 mov         r3, #0
  05440	e58d303c	 str         r3, [sp, #0x3C]
  05444		 |$LN28@PDD_Dump|

; 2314 :         DEBUGMSG(ZONE_PDD, (L"\tEP_NUM     = 0x%04X\r\n", INREG32(&pPddRegs->EP_NUM)));     // 0004 - Endpoint selection

  05444	e59f3abc	 ldr         r3, [pc, #0xABC]
  05448	e5933440	 ldr         r3, [r3, #0x440]
  0544c	e3130902	 tst         r3, #2, 18
  05450	0a000015	 beq         |$LN31@PDD_Dump|
  05454	e59f3aac	 ldr         r3, [pc, #0xAAC]
  05458	e5933440	 ldr         r3, [r3, #0x440]
  0545c	e3130801	 tst         r3, #1, 16
  05460	0a000007	 beq         |$LN29@PDD_Dump|
  05464	e59d3230	 ldr         r3, [sp, #0x230]
  05468	e2833004	 add         r3, r3, #4
  0546c	e5931000	 ldr         r1, [r3]
  05470	e59f0af0	 ldr         r0, [pc, #0xAF0]
  05474	eb000000	 bl          CeLogMsg
  05478	e3a03001	 mov         r3, #1
  0547c	e58d3040	 str         r3, [sp, #0x40]
  05480	ea000006	 b           |$LN30@PDD_Dump|
  05484		 |$LN29@PDD_Dump|
  05484	e59d3230	 ldr         r3, [sp, #0x230]
  05488	e2833004	 add         r3, r3, #4
  0548c	e5931000	 ldr         r1, [r3]
  05490	e59f0ad0	 ldr         r0, [pc, #0xAD0]
  05494	eb000000	 bl          NKDbgPrintfW
  05498	e3a03000	 mov         r3, #0
  0549c	e58d3040	 str         r3, [sp, #0x40]
  054a0		 |$LN30@PDD_Dump|
  054a0	e3a03001	 mov         r3, #1
  054a4	e58d3044	 str         r3, [sp, #0x44]
  054a8	ea000001	 b           |$LN32@PDD_Dump|
  054ac		 |$LN31@PDD_Dump|
  054ac	e3a03000	 mov         r3, #0
  054b0	e58d3044	 str         r3, [sp, #0x44]
  054b4		 |$LN32@PDD_Dump|

; 2315 : //      DEBUGMSG(ZONE_PDD, (L"\tDATA       = 0x%04X\r\n", INREG32(&pPddRegs->DATA)));       // 0008 - Data
; 2316 :         DEBUGMSG(ZONE_PDD, (L"\tCTRL       = 0x%04X\r\n", INREG32(&pPddRegs->CTRL)));       // 000C - Control

  054b4	e59f3a4c	 ldr         r3, [pc, #0xA4C]
  054b8	e5933440	 ldr         r3, [r3, #0x440]
  054bc	e3130902	 tst         r3, #2, 18
  054c0	0a000015	 beq         |$LN35@PDD_Dump|
  054c4	e59f3a3c	 ldr         r3, [pc, #0xA3C]
  054c8	e5933440	 ldr         r3, [r3, #0x440]
  054cc	e3130801	 tst         r3, #1, 16
  054d0	0a000007	 beq         |$LN33@PDD_Dump|
  054d4	e59d3230	 ldr         r3, [sp, #0x230]
  054d8	e283300c	 add         r3, r3, #0xC
  054dc	e5931000	 ldr         r1, [r3]
  054e0	e59f0a7c	 ldr         r0, [pc, #0xA7C]
  054e4	eb000000	 bl          CeLogMsg
  054e8	e3a03001	 mov         r3, #1
  054ec	e58d3048	 str         r3, [sp, #0x48]
  054f0	ea000006	 b           |$LN34@PDD_Dump|
  054f4		 |$LN33@PDD_Dump|
  054f4	e59d3230	 ldr         r3, [sp, #0x230]
  054f8	e283300c	 add         r3, r3, #0xC
  054fc	e5931000	 ldr         r1, [r3]
  05500	e59f0a5c	 ldr         r0, [pc, #0xA5C]
  05504	eb000000	 bl          NKDbgPrintfW
  05508	e3a03000	 mov         r3, #0
  0550c	e58d3048	 str         r3, [sp, #0x48]
  05510		 |$LN34@PDD_Dump|
  05510	e3a03001	 mov         r3, #1
  05514	e58d304c	 str         r3, [sp, #0x4C]
  05518	ea000001	 b           |$LN36@PDD_Dump|
  0551c		 |$LN35@PDD_Dump|
  0551c	e3a03000	 mov         r3, #0
  05520	e58d304c	 str         r3, [sp, #0x4C]
  05524		 |$LN36@PDD_Dump|

; 2317 :         DEBUGMSG(ZONE_PDD, (L"\tSTAT_FLG   = 0x%04X\r\n", INREG32(&pPddRegs->STAT_FLG)));   // 0010 - Status

  05524	e59f39dc	 ldr         r3, [pc, #0x9DC]
  05528	e5933440	 ldr         r3, [r3, #0x440]
  0552c	e3130902	 tst         r3, #2, 18
  05530	0a000015	 beq         |$LN39@PDD_Dump|
  05534	e59f39cc	 ldr         r3, [pc, #0x9CC]
  05538	e5933440	 ldr         r3, [r3, #0x440]
  0553c	e3130801	 tst         r3, #1, 16
  05540	0a000007	 beq         |$LN37@PDD_Dump|
  05544	e59d3230	 ldr         r3, [sp, #0x230]
  05548	e2833010	 add         r3, r3, #0x10
  0554c	e5931000	 ldr         r1, [r3]
  05550	e59f0a08	 ldr         r0, [pc, #0xA08]
  05554	eb000000	 bl          CeLogMsg
  05558	e3a03001	 mov         r3, #1
  0555c	e58d3050	 str         r3, [sp, #0x50]
  05560	ea000006	 b           |$LN38@PDD_Dump|
  05564		 |$LN37@PDD_Dump|
  05564	e59d3230	 ldr         r3, [sp, #0x230]
  05568	e2833010	 add         r3, r3, #0x10
  0556c	e5931000	 ldr         r1, [r3]
  05570	e59f09e8	 ldr         r0, [pc, #0x9E8]
  05574	eb000000	 bl          NKDbgPrintfW
  05578	e3a03000	 mov         r3, #0
  0557c	e58d3050	 str         r3, [sp, #0x50]
  05580		 |$LN38@PDD_Dump|
  05580	e3a03001	 mov         r3, #1
  05584	e58d3054	 str         r3, [sp, #0x54]
  05588	ea000001	 b           |$LN40@PDD_Dump|
  0558c		 |$LN39@PDD_Dump|
  0558c	e3a03000	 mov         r3, #0
  05590	e58d3054	 str         r3, [sp, #0x54]
  05594		 |$LN40@PDD_Dump|

; 2318 :         DEBUGMSG(ZONE_PDD, (L"\tRXFSTAT    = 0x%04X\r\n", INREG32(&pPddRegs->RXFSTAT)));    // 0014 - Receive FIFO status

  05594	e59f396c	 ldr         r3, [pc, #0x96C]
  05598	e5933440	 ldr         r3, [r3, #0x440]
  0559c	e3130902	 tst         r3, #2, 18
  055a0	0a000015	 beq         |$LN43@PDD_Dump|
  055a4	e59f395c	 ldr         r3, [pc, #0x95C]
  055a8	e5933440	 ldr         r3, [r3, #0x440]
  055ac	e3130801	 tst         r3, #1, 16
  055b0	0a000007	 beq         |$LN41@PDD_Dump|
  055b4	e59d3230	 ldr         r3, [sp, #0x230]
  055b8	e2833014	 add         r3, r3, #0x14
  055bc	e5931000	 ldr         r1, [r3]
  055c0	e59f0994	 ldr         r0, [pc, #0x994]
  055c4	eb000000	 bl          CeLogMsg
  055c8	e3a03001	 mov         r3, #1
  055cc	e58d3058	 str         r3, [sp, #0x58]
  055d0	ea000006	 b           |$LN42@PDD_Dump|
  055d4		 |$LN41@PDD_Dump|
  055d4	e59d3230	 ldr         r3, [sp, #0x230]
  055d8	e2833014	 add         r3, r3, #0x14
  055dc	e5931000	 ldr         r1, [r3]
  055e0	e59f0974	 ldr         r0, [pc, #0x974]
  055e4	eb000000	 bl          NKDbgPrintfW
  055e8	e3a03000	 mov         r3, #0
  055ec	e58d3058	 str         r3, [sp, #0x58]
  055f0		 |$LN42@PDD_Dump|
  055f0	e3a03001	 mov         r3, #1
  055f4	e58d305c	 str         r3, [sp, #0x5C]
  055f8	ea000001	 b           |$LN44@PDD_Dump|
  055fc		 |$LN43@PDD_Dump|
  055fc	e3a03000	 mov         r3, #0
  05600	e58d305c	 str         r3, [sp, #0x5C]
  05604		 |$LN44@PDD_Dump|

; 2319 :         DEBUGMSG(ZONE_PDD, (L"\tSYSCON1    = 0x%04X\r\n", INREG32(&pPddRegs->SYSCON1)));    // 0018 - System configuration 1

  05604	e59f38fc	 ldr         r3, [pc, #0x8FC]
  05608	e5933440	 ldr         r3, [r3, #0x440]
  0560c	e3130902	 tst         r3, #2, 18
  05610	0a000015	 beq         |$LN47@PDD_Dump|
  05614	e59f38ec	 ldr         r3, [pc, #0x8EC]
  05618	e5933440	 ldr         r3, [r3, #0x440]
  0561c	e3130801	 tst         r3, #1, 16
  05620	0a000007	 beq         |$LN45@PDD_Dump|
  05624	e59d3230	 ldr         r3, [sp, #0x230]
  05628	e2833018	 add         r3, r3, #0x18
  0562c	e5931000	 ldr         r1, [r3]
  05630	e59f0920	 ldr         r0, [pc, #0x920]
  05634	eb000000	 bl          CeLogMsg
  05638	e3a03001	 mov         r3, #1
  0563c	e58d3060	 str         r3, [sp, #0x60]
  05640	ea000006	 b           |$LN46@PDD_Dump|
  05644		 |$LN45@PDD_Dump|
  05644	e59d3230	 ldr         r3, [sp, #0x230]
  05648	e2833018	 add         r3, r3, #0x18
  0564c	e5931000	 ldr         r1, [r3]
  05650	e59f0900	 ldr         r0, [pc, #0x900]
  05654	eb000000	 bl          NKDbgPrintfW
  05658	e3a03000	 mov         r3, #0
  0565c	e58d3060	 str         r3, [sp, #0x60]
  05660		 |$LN46@PDD_Dump|
  05660	e3a03001	 mov         r3, #1
  05664	e58d3064	 str         r3, [sp, #0x64]
  05668	ea000001	 b           |$LN48@PDD_Dump|
  0566c		 |$LN47@PDD_Dump|
  0566c	e3a03000	 mov         r3, #0
  05670	e58d3064	 str         r3, [sp, #0x64]
  05674		 |$LN48@PDD_Dump|

; 2320 :         DEBUGMSG(ZONE_PDD, (L"\tSYSCON2    = 0x%04X\r\n", INREG32(&pPddRegs->SYSCON2)));    // 001C - System configuration 2

  05674	e59f388c	 ldr         r3, [pc, #0x88C]
  05678	e5933440	 ldr         r3, [r3, #0x440]
  0567c	e3130902	 tst         r3, #2, 18
  05680	0a000015	 beq         |$LN51@PDD_Dump|
  05684	e59f387c	 ldr         r3, [pc, #0x87C]
  05688	e5933440	 ldr         r3, [r3, #0x440]
  0568c	e3130801	 tst         r3, #1, 16
  05690	0a000007	 beq         |$LN49@PDD_Dump|
  05694	e59d3230	 ldr         r3, [sp, #0x230]
  05698	e283301c	 add         r3, r3, #0x1C
  0569c	e5931000	 ldr         r1, [r3]
  056a0	e59f08ac	 ldr         r0, [pc, #0x8AC]
  056a4	eb000000	 bl          CeLogMsg
  056a8	e3a03001	 mov         r3, #1
  056ac	e58d3068	 str         r3, [sp, #0x68]
  056b0	ea000006	 b           |$LN50@PDD_Dump|
  056b4		 |$LN49@PDD_Dump|
  056b4	e59d3230	 ldr         r3, [sp, #0x230]
  056b8	e283301c	 add         r3, r3, #0x1C
  056bc	e5931000	 ldr         r1, [r3]
  056c0	e59f088c	 ldr         r0, [pc, #0x88C]
  056c4	eb000000	 bl          NKDbgPrintfW
  056c8	e3a03000	 mov         r3, #0
  056cc	e58d3068	 str         r3, [sp, #0x68]
  056d0		 |$LN50@PDD_Dump|
  056d0	e3a03001	 mov         r3, #1
  056d4	e58d306c	 str         r3, [sp, #0x6C]
  056d8	ea000001	 b           |$LN52@PDD_Dump|
  056dc		 |$LN51@PDD_Dump|
  056dc	e3a03000	 mov         r3, #0
  056e0	e58d306c	 str         r3, [sp, #0x6C]
  056e4		 |$LN52@PDD_Dump|

; 2321 :         DEBUGMSG(ZONE_PDD, (L"\tDEVSTAT    = 0x%04X\r\n", INREG32(&pPddRegs->DEVSTAT)));    // 0020 - Device status

  056e4	e59f381c	 ldr         r3, [pc, #0x81C]
  056e8	e5933440	 ldr         r3, [r3, #0x440]
  056ec	e3130902	 tst         r3, #2, 18
  056f0	0a000015	 beq         |$LN55@PDD_Dump|
  056f4	e59f380c	 ldr         r3, [pc, #0x80C]
  056f8	e5933440	 ldr         r3, [r3, #0x440]
  056fc	e3130801	 tst         r3, #1, 16
  05700	0a000007	 beq         |$LN53@PDD_Dump|
  05704	e59d3230	 ldr         r3, [sp, #0x230]
  05708	e2833020	 add         r3, r3, #0x20
  0570c	e5931000	 ldr         r1, [r3]
  05710	e59f0838	 ldr         r0, [pc, #0x838]
  05714	eb000000	 bl          CeLogMsg
  05718	e3a03001	 mov         r3, #1
  0571c	e58d3070	 str         r3, [sp, #0x70]
  05720	ea000006	 b           |$LN54@PDD_Dump|
  05724		 |$LN53@PDD_Dump|
  05724	e59d3230	 ldr         r3, [sp, #0x230]
  05728	e2833020	 add         r3, r3, #0x20
  0572c	e5931000	 ldr         r1, [r3]
  05730	e59f0818	 ldr         r0, [pc, #0x818]
  05734	eb000000	 bl          NKDbgPrintfW
  05738	e3a03000	 mov         r3, #0
  0573c	e58d3070	 str         r3, [sp, #0x70]
  05740		 |$LN54@PDD_Dump|
  05740	e3a03001	 mov         r3, #1
  05744	e58d3074	 str         r3, [sp, #0x74]
  05748	ea000001	 b           |$LN56@PDD_Dump|
  0574c		 |$LN55@PDD_Dump|
  0574c	e3a03000	 mov         r3, #0
  05750	e58d3074	 str         r3, [sp, #0x74]
  05754		 |$LN56@PDD_Dump|

; 2322 :         DEBUGMSG(ZONE_PDD, (L"\tSOF        = 0x%04X\r\n", INREG32(&pPddRegs->SOF)));        // 0024 - Start of frame

  05754	e59f37ac	 ldr         r3, [pc, #0x7AC]
  05758	e5933440	 ldr         r3, [r3, #0x440]
  0575c	e3130902	 tst         r3, #2, 18
  05760	0a000015	 beq         |$LN59@PDD_Dump|
  05764	e59f379c	 ldr         r3, [pc, #0x79C]
  05768	e5933440	 ldr         r3, [r3, #0x440]
  0576c	e3130801	 tst         r3, #1, 16
  05770	0a000007	 beq         |$LN57@PDD_Dump|
  05774	e59d3230	 ldr         r3, [sp, #0x230]
  05778	e2833024	 add         r3, r3, #0x24
  0577c	e5931000	 ldr         r1, [r3]
  05780	e59f07c4	 ldr         r0, [pc, #0x7C4]
  05784	eb000000	 bl          CeLogMsg
  05788	e3a03001	 mov         r3, #1
  0578c	e58d3078	 str         r3, [sp, #0x78]
  05790	ea000006	 b           |$LN58@PDD_Dump|
  05794		 |$LN57@PDD_Dump|
  05794	e59d3230	 ldr         r3, [sp, #0x230]
  05798	e2833024	 add         r3, r3, #0x24
  0579c	e5931000	 ldr         r1, [r3]
  057a0	e59f07a4	 ldr         r0, [pc, #0x7A4]
  057a4	eb000000	 bl          NKDbgPrintfW
  057a8	e3a03000	 mov         r3, #0
  057ac	e58d3078	 str         r3, [sp, #0x78]
  057b0		 |$LN58@PDD_Dump|
  057b0	e3a03001	 mov         r3, #1
  057b4	e58d307c	 str         r3, [sp, #0x7C]
  057b8	ea000001	 b           |$LN60@PDD_Dump|
  057bc		 |$LN59@PDD_Dump|
  057bc	e3a03000	 mov         r3, #0
  057c0	e58d307c	 str         r3, [sp, #0x7C]
  057c4		 |$LN60@PDD_Dump|

; 2323 :         DEBUGMSG(ZONE_PDD, (L"\tIRQ_EN     = 0x%04X\r\n", INREG32(&pPddRegs->IRQ_EN)));     // 0028 - Interrupt enable

  057c4	e59f373c	 ldr         r3, [pc, #0x73C]
  057c8	e5933440	 ldr         r3, [r3, #0x440]
  057cc	e3130902	 tst         r3, #2, 18
  057d0	0a000015	 beq         |$LN63@PDD_Dump|
  057d4	e59f372c	 ldr         r3, [pc, #0x72C]
  057d8	e5933440	 ldr         r3, [r3, #0x440]
  057dc	e3130801	 tst         r3, #1, 16
  057e0	0a000007	 beq         |$LN61@PDD_Dump|
  057e4	e59d3230	 ldr         r3, [sp, #0x230]
  057e8	e2833028	 add         r3, r3, #0x28
  057ec	e5931000	 ldr         r1, [r3]
  057f0	e59f0750	 ldr         r0, [pc, #0x750]
  057f4	eb000000	 bl          CeLogMsg
  057f8	e3a03001	 mov         r3, #1
  057fc	e58d3080	 str         r3, [sp, #0x80]
  05800	ea000006	 b           |$LN62@PDD_Dump|
  05804		 |$LN61@PDD_Dump|
  05804	e59d3230	 ldr         r3, [sp, #0x230]
  05808	e2833028	 add         r3, r3, #0x28
  0580c	e5931000	 ldr         r1, [r3]
  05810	e59f0730	 ldr         r0, [pc, #0x730]
  05814	eb000000	 bl          NKDbgPrintfW
  05818	e3a03000	 mov         r3, #0
  0581c	e58d3080	 str         r3, [sp, #0x80]
  05820		 |$LN62@PDD_Dump|
  05820	e3a03001	 mov         r3, #1
  05824	e58d3084	 str         r3, [sp, #0x84]
  05828	ea000001	 b           |$LN64@PDD_Dump|
  0582c		 |$LN63@PDD_Dump|
  0582c	e3a03000	 mov         r3, #0
  05830	e58d3084	 str         r3, [sp, #0x84]
  05834		 |$LN64@PDD_Dump|

; 2324 :         DEBUGMSG(ZONE_PDD, (L"\tDMA_IRQ_EN = 0x%04X\r\n", INREG32(&pPddRegs->DMA_IRQ_EN))); // 002C - DMA interrupt enable

  05834	e59f36cc	 ldr         r3, [pc, #0x6CC]
  05838	e5933440	 ldr         r3, [r3, #0x440]
  0583c	e3130902	 tst         r3, #2, 18
  05840	0a000015	 beq         |$LN67@PDD_Dump|
  05844	e59f36bc	 ldr         r3, [pc, #0x6BC]
  05848	e5933440	 ldr         r3, [r3, #0x440]
  0584c	e3130801	 tst         r3, #1, 16
  05850	0a000007	 beq         |$LN65@PDD_Dump|
  05854	e59d3230	 ldr         r3, [sp, #0x230]
  05858	e283302c	 add         r3, r3, #0x2C
  0585c	e5931000	 ldr         r1, [r3]
  05860	e59f06dc	 ldr         r0, [pc, #0x6DC]
  05864	eb000000	 bl          CeLogMsg
  05868	e3a03001	 mov         r3, #1
  0586c	e58d3088	 str         r3, [sp, #0x88]
  05870	ea000006	 b           |$LN66@PDD_Dump|
  05874		 |$LN65@PDD_Dump|
  05874	e59d3230	 ldr         r3, [sp, #0x230]
  05878	e283302c	 add         r3, r3, #0x2C
  0587c	e5931000	 ldr         r1, [r3]
  05880	e59f06bc	 ldr         r0, [pc, #0x6BC]
  05884	eb000000	 bl          NKDbgPrintfW
  05888	e3a03000	 mov         r3, #0
  0588c	e58d3088	 str         r3, [sp, #0x88]
  05890		 |$LN66@PDD_Dump|
  05890	e3a03001	 mov         r3, #1
  05894	e58d308c	 str         r3, [sp, #0x8C]
  05898	ea000001	 b           |$LN68@PDD_Dump|
  0589c		 |$LN67@PDD_Dump|
  0589c	e3a03000	 mov         r3, #0
  058a0	e58d308c	 str         r3, [sp, #0x8C]
  058a4		 |$LN68@PDD_Dump|

; 2325 :         DEBUGMSG(ZONE_PDD, (L"\tIRQ_SRC    = 0x%04X\r\n", INREG32(&pPddRegs->IRQ_SRC)));    // 0030 - Interrupt source

  058a4	e59f365c	 ldr         r3, [pc, #0x65C]
  058a8	e5933440	 ldr         r3, [r3, #0x440]
  058ac	e3130902	 tst         r3, #2, 18
  058b0	0a000015	 beq         |$LN71@PDD_Dump|
  058b4	e59f364c	 ldr         r3, [pc, #0x64C]
  058b8	e5933440	 ldr         r3, [r3, #0x440]
  058bc	e3130801	 tst         r3, #1, 16
  058c0	0a000007	 beq         |$LN69@PDD_Dump|
  058c4	e59d3230	 ldr         r3, [sp, #0x230]
  058c8	e2833030	 add         r3, r3, #0x30
  058cc	e5931000	 ldr         r1, [r3]
  058d0	e59f0668	 ldr         r0, [pc, #0x668]
  058d4	eb000000	 bl          CeLogMsg
  058d8	e3a03001	 mov         r3, #1
  058dc	e58d3090	 str         r3, [sp, #0x90]
  058e0	ea000006	 b           |$LN70@PDD_Dump|
  058e4		 |$LN69@PDD_Dump|
  058e4	e59d3230	 ldr         r3, [sp, #0x230]
  058e8	e2833030	 add         r3, r3, #0x30
  058ec	e5931000	 ldr         r1, [r3]
  058f0	e59f0648	 ldr         r0, [pc, #0x648]
  058f4	eb000000	 bl          NKDbgPrintfW
  058f8	e3a03000	 mov         r3, #0
  058fc	e58d3090	 str         r3, [sp, #0x90]
  05900		 |$LN70@PDD_Dump|
  05900	e3a03001	 mov         r3, #1
  05904	e58d3094	 str         r3, [sp, #0x94]
  05908	ea000001	 b           |$LN72@PDD_Dump|
  0590c		 |$LN71@PDD_Dump|
  0590c	e3a03000	 mov         r3, #0
  05910	e58d3094	 str         r3, [sp, #0x94]
  05914		 |$LN72@PDD_Dump|

; 2326 :         DEBUGMSG(ZONE_PDD, (L"\tEP_STAT    = 0x%04X\r\n", INREG32(&pPddRegs->EP_STAT)));    // 0034 - Non-ISO endpoint interrupt enable

  05914	e59f35ec	 ldr         r3, [pc, #0x5EC]
  05918	e5933440	 ldr         r3, [r3, #0x440]
  0591c	e3130902	 tst         r3, #2, 18
  05920	0a000015	 beq         |$LN75@PDD_Dump|
  05924	e59f35dc	 ldr         r3, [pc, #0x5DC]
  05928	e5933440	 ldr         r3, [r3, #0x440]
  0592c	e3130801	 tst         r3, #1, 16
  05930	0a000007	 beq         |$LN73@PDD_Dump|
  05934	e59d3230	 ldr         r3, [sp, #0x230]
  05938	e2833034	 add         r3, r3, #0x34
  0593c	e5931000	 ldr         r1, [r3]
  05940	e59f05f4	 ldr         r0, [pc, #0x5F4]
  05944	eb000000	 bl          CeLogMsg
  05948	e3a03001	 mov         r3, #1
  0594c	e58d3098	 str         r3, [sp, #0x98]
  05950	ea000006	 b           |$LN74@PDD_Dump|
  05954		 |$LN73@PDD_Dump|
  05954	e59d3230	 ldr         r3, [sp, #0x230]
  05958	e2833034	 add         r3, r3, #0x34
  0595c	e5931000	 ldr         r1, [r3]
  05960	e59f05d4	 ldr         r0, [pc, #0x5D4]
  05964	eb000000	 bl          NKDbgPrintfW
  05968	e3a03000	 mov         r3, #0
  0596c	e58d3098	 str         r3, [sp, #0x98]
  05970		 |$LN74@PDD_Dump|
  05970	e3a03001	 mov         r3, #1
  05974	e58d309c	 str         r3, [sp, #0x9C]
  05978	ea000001	 b           |$LN76@PDD_Dump|
  0597c		 |$LN75@PDD_Dump|
  0597c	e3a03000	 mov         r3, #0
  05980	e58d309c	 str         r3, [sp, #0x9C]
  05984		 |$LN76@PDD_Dump|

; 2327 :         DEBUGMSG(ZONE_PDD, (L"\tDMA_STAT   = 0x%04X\r\n", INREG32(&pPddRegs->DMA_STAT)));   // 0038 - Non-ISO DMA interrupt enable

  05984	e59f357c	 ldr         r3, [pc, #0x57C]
  05988	e5933440	 ldr         r3, [r3, #0x440]
  0598c	e3130902	 tst         r3, #2, 18
  05990	0a000015	 beq         |$LN79@PDD_Dump|
  05994	e59f356c	 ldr         r3, [pc, #0x56C]
  05998	e5933440	 ldr         r3, [r3, #0x440]
  0599c	e3130801	 tst         r3, #1, 16
  059a0	0a000007	 beq         |$LN77@PDD_Dump|
  059a4	e59d3230	 ldr         r3, [sp, #0x230]
  059a8	e2833038	 add         r3, r3, #0x38
  059ac	e5931000	 ldr         r1, [r3]
  059b0	e59f0580	 ldr         r0, [pc, #0x580]
  059b4	eb000000	 bl          CeLogMsg
  059b8	e3a03001	 mov         r3, #1
  059bc	e58d30a0	 str         r3, [sp, #0xA0]
  059c0	ea000006	 b           |$LN78@PDD_Dump|
  059c4		 |$LN77@PDD_Dump|
  059c4	e59d3230	 ldr         r3, [sp, #0x230]
  059c8	e2833038	 add         r3, r3, #0x38
  059cc	e5931000	 ldr         r1, [r3]
  059d0	e59f0560	 ldr         r0, [pc, #0x560]
  059d4	eb000000	 bl          NKDbgPrintfW
  059d8	e3a03000	 mov         r3, #0
  059dc	e58d30a0	 str         r3, [sp, #0xA0]
  059e0		 |$LN78@PDD_Dump|
  059e0	e3a03001	 mov         r3, #1
  059e4	e58d30a4	 str         r3, [sp, #0xA4]
  059e8	ea000001	 b           |$LN80@PDD_Dump|
  059ec		 |$LN79@PDD_Dump|
  059ec	e3a03000	 mov         r3, #0
  059f0	e58d30a4	 str         r3, [sp, #0xA4]
  059f4		 |$LN80@PDD_Dump|

; 2328 :         DEBUGMSG(ZONE_PDD, (L"\tRXDMA_CFG  = 0x%04X\r\n", INREG32(&pPddRegs->RXDMA_CFG)));  // 0040 - DMA receive channels config

  059f4	e59f350c	 ldr         r3, [pc, #0x50C]
  059f8	e5933440	 ldr         r3, [r3, #0x440]
  059fc	e3130902	 tst         r3, #2, 18
  05a00	0a000015	 beq         |$LN83@PDD_Dump|
  05a04	e59f34fc	 ldr         r3, [pc, #0x4FC]
  05a08	e5933440	 ldr         r3, [r3, #0x440]
  05a0c	e3130801	 tst         r3, #1, 16
  05a10	0a000007	 beq         |$LN81@PDD_Dump|
  05a14	e59d3230	 ldr         r3, [sp, #0x230]
  05a18	e2833040	 add         r3, r3, #0x40
  05a1c	e5931000	 ldr         r1, [r3]
  05a20	e59f050c	 ldr         r0, [pc, #0x50C]
  05a24	eb000000	 bl          CeLogMsg
  05a28	e3a03001	 mov         r3, #1
  05a2c	e58d30a8	 str         r3, [sp, #0xA8]
  05a30	ea000006	 b           |$LN82@PDD_Dump|
  05a34		 |$LN81@PDD_Dump|
  05a34	e59d3230	 ldr         r3, [sp, #0x230]
  05a38	e2833040	 add         r3, r3, #0x40
  05a3c	e5931000	 ldr         r1, [r3]
  05a40	e59f04ec	 ldr         r0, [pc, #0x4EC]
  05a44	eb000000	 bl          NKDbgPrintfW
  05a48	e3a03000	 mov         r3, #0
  05a4c	e58d30a8	 str         r3, [sp, #0xA8]
  05a50		 |$LN82@PDD_Dump|
  05a50	e3a03001	 mov         r3, #1
  05a54	e58d30ac	 str         r3, [sp, #0xAC]
  05a58	ea000001	 b           |$LN84@PDD_Dump|
  05a5c		 |$LN83@PDD_Dump|
  05a5c	e3a03000	 mov         r3, #0
  05a60	e58d30ac	 str         r3, [sp, #0xAC]
  05a64		 |$LN84@PDD_Dump|

; 2329 :         DEBUGMSG(ZONE_PDD, (L"\tTXDMA_CFG  = 0x%04X\r\n", INREG32(&pPddRegs->TXDMA_CFG)));  // 0044 - DMA transmit channels config

  05a64	e59f349c	 ldr         r3, [pc, #0x49C]
  05a68	e5933440	 ldr         r3, [r3, #0x440]
  05a6c	e3130902	 tst         r3, #2, 18
  05a70	0a000015	 beq         |$LN87@PDD_Dump|
  05a74	e59f348c	 ldr         r3, [pc, #0x48C]
  05a78	e5933440	 ldr         r3, [r3, #0x440]
  05a7c	e3130801	 tst         r3, #1, 16
  05a80	0a000007	 beq         |$LN85@PDD_Dump|
  05a84	e59d3230	 ldr         r3, [sp, #0x230]
  05a88	e2833044	 add         r3, r3, #0x44
  05a8c	e5931000	 ldr         r1, [r3]
  05a90	e59f0498	 ldr         r0, [pc, #0x498]
  05a94	eb000000	 bl          CeLogMsg
  05a98	e3a03001	 mov         r3, #1
  05a9c	e58d30b0	 str         r3, [sp, #0xB0]
  05aa0	ea000006	 b           |$LN86@PDD_Dump|
  05aa4		 |$LN85@PDD_Dump|
  05aa4	e59d3230	 ldr         r3, [sp, #0x230]
  05aa8	e2833044	 add         r3, r3, #0x44
  05aac	e5931000	 ldr         r1, [r3]
  05ab0	e59f0478	 ldr         r0, [pc, #0x478]
  05ab4	eb000000	 bl          NKDbgPrintfW
  05ab8	e3a03000	 mov         r3, #0
  05abc	e58d30b0	 str         r3, [sp, #0xB0]
  05ac0		 |$LN86@PDD_Dump|
  05ac0	e3a03001	 mov         r3, #1
  05ac4	e58d30b4	 str         r3, [sp, #0xB4]
  05ac8	ea000001	 b           |$LN88@PDD_Dump|
  05acc		 |$LN87@PDD_Dump|
  05acc	e3a03000	 mov         r3, #0
  05ad0	e58d30b4	 str         r3, [sp, #0xB4]
  05ad4		 |$LN88@PDD_Dump|

; 2330 : //      DEBUGMSG(ZONE_PDD, (L"\tDATA_DMA   = 0x%04X\r\n", INREG32(&pPddRegs->DATA_DMA)));   // 0048 - DMA FIFO data
; 2331 :         DEBUGMSG(ZONE_PDD, (L"\tTXDMA0     = 0x%04X\r\n", INREG32(&pPddRegs->TXDMA0)));     // 0050 - Transmit DMA control 0

  05ad4	e59f342c	 ldr         r3, [pc, #0x42C]
  05ad8	e5933440	 ldr         r3, [r3, #0x440]
  05adc	e3130902	 tst         r3, #2, 18
  05ae0	0a000015	 beq         |$LN91@PDD_Dump|
  05ae4	e59f341c	 ldr         r3, [pc, #0x41C]
  05ae8	e5933440	 ldr         r3, [r3, #0x440]
  05aec	e3130801	 tst         r3, #1, 16
  05af0	0a000007	 beq         |$LN89@PDD_Dump|
  05af4	e59d3230	 ldr         r3, [sp, #0x230]
  05af8	e2833050	 add         r3, r3, #0x50
  05afc	e5931000	 ldr         r1, [r3]
  05b00	e59f0424	 ldr         r0, [pc, #0x424]
  05b04	eb000000	 bl          CeLogMsg
  05b08	e3a03001	 mov         r3, #1
  05b0c	e58d30b8	 str         r3, [sp, #0xB8]
  05b10	ea000006	 b           |$LN90@PDD_Dump|
  05b14		 |$LN89@PDD_Dump|
  05b14	e59d3230	 ldr         r3, [sp, #0x230]
  05b18	e2833050	 add         r3, r3, #0x50
  05b1c	e5931000	 ldr         r1, [r3]
  05b20	e59f0404	 ldr         r0, [pc, #0x404]
  05b24	eb000000	 bl          NKDbgPrintfW
  05b28	e3a03000	 mov         r3, #0
  05b2c	e58d30b8	 str         r3, [sp, #0xB8]
  05b30		 |$LN90@PDD_Dump|
  05b30	e3a03001	 mov         r3, #1
  05b34	e58d30bc	 str         r3, [sp, #0xBC]
  05b38	ea000001	 b           |$LN92@PDD_Dump|
  05b3c		 |$LN91@PDD_Dump|
  05b3c	e3a03000	 mov         r3, #0
  05b40	e58d30bc	 str         r3, [sp, #0xBC]
  05b44		 |$LN92@PDD_Dump|

; 2332 :         DEBUGMSG(ZONE_PDD, (L"\tTXDMA1     = 0x%04X\r\n", INREG32(&pPddRegs->TXDMA1)));     // 0054 - Transmit DMA control 1

  05b44	e59f33bc	 ldr         r3, [pc, #0x3BC]
  05b48	e5933440	 ldr         r3, [r3, #0x440]
  05b4c	e3130902	 tst         r3, #2, 18
  05b50	0a000015	 beq         |$LN95@PDD_Dump|
  05b54	e59f33ac	 ldr         r3, [pc, #0x3AC]
  05b58	e5933440	 ldr         r3, [r3, #0x440]
  05b5c	e3130801	 tst         r3, #1, 16
  05b60	0a000007	 beq         |$LN93@PDD_Dump|
  05b64	e59d3230	 ldr         r3, [sp, #0x230]
  05b68	e2833054	 add         r3, r3, #0x54
  05b6c	e5931000	 ldr         r1, [r3]
  05b70	e59f03b0	 ldr         r0, [pc, #0x3B0]
  05b74	eb000000	 bl          CeLogMsg
  05b78	e3a03001	 mov         r3, #1
  05b7c	e58d30c0	 str         r3, [sp, #0xC0]
  05b80	ea000006	 b           |$LN94@PDD_Dump|
  05b84		 |$LN93@PDD_Dump|
  05b84	e59d3230	 ldr         r3, [sp, #0x230]
  05b88	e2833054	 add         r3, r3, #0x54
  05b8c	e5931000	 ldr         r1, [r3]
  05b90	e59f0390	 ldr         r0, [pc, #0x390]
  05b94	eb000000	 bl          NKDbgPrintfW
  05b98	e3a03000	 mov         r3, #0
  05b9c	e58d30c0	 str         r3, [sp, #0xC0]
  05ba0		 |$LN94@PDD_Dump|
  05ba0	e3a03001	 mov         r3, #1
  05ba4	e58d30c4	 str         r3, [sp, #0xC4]
  05ba8	ea000001	 b           |$LN96@PDD_Dump|
  05bac		 |$LN95@PDD_Dump|
  05bac	e3a03000	 mov         r3, #0
  05bb0	e58d30c4	 str         r3, [sp, #0xC4]
  05bb4		 |$LN96@PDD_Dump|

; 2333 :         DEBUGMSG(ZONE_PDD, (L"\tTXDMA2     = 0x%04X\r\n", INREG32(&pPddRegs->TXDMA2)));     // 0058 - Transmit DMA control 2

  05bb4	e59f334c	 ldr         r3, [pc, #0x34C]
  05bb8	e5933440	 ldr         r3, [r3, #0x440]
  05bbc	e3130902	 tst         r3, #2, 18
  05bc0	0a000015	 beq         |$LN99@PDD_Dump|
  05bc4	e59f333c	 ldr         r3, [pc, #0x33C]
  05bc8	e5933440	 ldr         r3, [r3, #0x440]
  05bcc	e3130801	 tst         r3, #1, 16
  05bd0	0a000007	 beq         |$LN97@PDD_Dump|
  05bd4	e59d3230	 ldr         r3, [sp, #0x230]
  05bd8	e2833058	 add         r3, r3, #0x58
  05bdc	e5931000	 ldr         r1, [r3]
  05be0	e59f033c	 ldr         r0, [pc, #0x33C]
  05be4	eb000000	 bl          CeLogMsg
  05be8	e3a03001	 mov         r3, #1
  05bec	e58d30c8	 str         r3, [sp, #0xC8]
  05bf0	ea000006	 b           |$LN98@PDD_Dump|
  05bf4		 |$LN97@PDD_Dump|
  05bf4	e59d3230	 ldr         r3, [sp, #0x230]
  05bf8	e2833058	 add         r3, r3, #0x58
  05bfc	e5931000	 ldr         r1, [r3]
  05c00	e59f031c	 ldr         r0, [pc, #0x31C]
  05c04	eb000000	 bl          NKDbgPrintfW
  05c08	e3a03000	 mov         r3, #0
  05c0c	e58d30c8	 str         r3, [sp, #0xC8]
  05c10		 |$LN98@PDD_Dump|
  05c10	e3a03001	 mov         r3, #1
  05c14	e58d30cc	 str         r3, [sp, #0xCC]
  05c18	ea000001	 b           |$LN100@PDD_Dump|
  05c1c		 |$LN99@PDD_Dump|
  05c1c	e3a03000	 mov         r3, #0
  05c20	e58d30cc	 str         r3, [sp, #0xCC]
  05c24		 |$LN100@PDD_Dump|

; 2334 :         DEBUGMSG(ZONE_PDD, (L"\tRXDMA0     = 0x%04X\r\n", INREG32(&pPddRegs->RXDMA0)));     // 0060 - Receive DMA control 0

  05c24	e59f32dc	 ldr         r3, [pc, #0x2DC]
  05c28	e5933440	 ldr         r3, [r3, #0x440]
  05c2c	e3130902	 tst         r3, #2, 18
  05c30	0a000015	 beq         |$LN103@PDD_Dump|
  05c34	e59f32cc	 ldr         r3, [pc, #0x2CC]
  05c38	e5933440	 ldr         r3, [r3, #0x440]
  05c3c	e3130801	 tst         r3, #1, 16
  05c40	0a000007	 beq         |$LN101@PDD_Dump|
  05c44	e59d3230	 ldr         r3, [sp, #0x230]
  05c48	e2833060	 add         r3, r3, #0x60
  05c4c	e5931000	 ldr         r1, [r3]
  05c50	e59f02c8	 ldr         r0, [pc, #0x2C8]
  05c54	eb000000	 bl          CeLogMsg
  05c58	e3a03001	 mov         r3, #1
  05c5c	e58d30d0	 str         r3, [sp, #0xD0]
  05c60	ea000006	 b           |$LN102@PDD_Dump|
  05c64		 |$LN101@PDD_Dump|
  05c64	e59d3230	 ldr         r3, [sp, #0x230]
  05c68	e2833060	 add         r3, r3, #0x60
  05c6c	e5931000	 ldr         r1, [r3]
  05c70	e59f02a8	 ldr         r0, [pc, #0x2A8]
  05c74	eb000000	 bl          NKDbgPrintfW
  05c78	e3a03000	 mov         r3, #0
  05c7c	e58d30d0	 str         r3, [sp, #0xD0]
  05c80		 |$LN102@PDD_Dump|
  05c80	e3a03001	 mov         r3, #1
  05c84	e58d30d4	 str         r3, [sp, #0xD4]
  05c88	ea000001	 b           |$LN104@PDD_Dump|
  05c8c		 |$LN103@PDD_Dump|
  05c8c	e3a03000	 mov         r3, #0
  05c90	e58d30d4	 str         r3, [sp, #0xD4]
  05c94		 |$LN104@PDD_Dump|

; 2335 :         DEBUGMSG(ZONE_PDD, (L"\tRXDMA1     = 0x%04X\r\n", INREG32(&pPddRegs->RXDMA1)));     // 0064 - Receive DMA control 0

  05c94	e59f326c	 ldr         r3, [pc, #0x26C]
  05c98	e5933440	 ldr         r3, [r3, #0x440]
  05c9c	e3130902	 tst         r3, #2, 18
  05ca0	0a000015	 beq         |$LN107@PDD_Dump|
  05ca4	e59f325c	 ldr         r3, [pc, #0x25C]
  05ca8	e5933440	 ldr         r3, [r3, #0x440]
  05cac	e3130801	 tst         r3, #1, 16
  05cb0	0a000007	 beq         |$LN105@PDD_Dump|
  05cb4	e59d3230	 ldr         r3, [sp, #0x230]
  05cb8	e2833064	 add         r3, r3, #0x64
  05cbc	e5931000	 ldr         r1, [r3]
  05cc0	e59f0254	 ldr         r0, [pc, #0x254]
  05cc4	eb000000	 bl          CeLogMsg
  05cc8	e3a03001	 mov         r3, #1
  05ccc	e58d30d8	 str         r3, [sp, #0xD8]
  05cd0	ea000006	 b           |$LN106@PDD_Dump|
  05cd4		 |$LN105@PDD_Dump|
  05cd4	e59d3230	 ldr         r3, [sp, #0x230]
  05cd8	e2833064	 add         r3, r3, #0x64
  05cdc	e5931000	 ldr         r1, [r3]
  05ce0	e59f0234	 ldr         r0, [pc, #0x234]
  05ce4	eb000000	 bl          NKDbgPrintfW
  05ce8	e3a03000	 mov         r3, #0
  05cec	e58d30d8	 str         r3, [sp, #0xD8]
  05cf0		 |$LN106@PDD_Dump|
  05cf0	e3a03001	 mov         r3, #1
  05cf4	e58d30dc	 str         r3, [sp, #0xDC]
  05cf8	ea000001	 b           |$LN108@PDD_Dump|
  05cfc		 |$LN107@PDD_Dump|
  05cfc	e3a03000	 mov         r3, #0
  05d00	e58d30dc	 str         r3, [sp, #0xDC]
  05d04		 |$LN108@PDD_Dump|

; 2336 :         DEBUGMSG(ZONE_PDD, (L"\tRXDMA2     = 0x%04X\r\n", INREG32(&pPddRegs->RXDMA2)));     // 0068 - Receive DMA control 0

  05d04	e59f31fc	 ldr         r3, [pc, #0x1FC]
  05d08	e5933440	 ldr         r3, [r3, #0x440]
  05d0c	e3130902	 tst         r3, #2, 18
  05d10	0a000015	 beq         |$LN111@PDD_Dump|
  05d14	e59f31ec	 ldr         r3, [pc, #0x1EC]
  05d18	e5933440	 ldr         r3, [r3, #0x440]
  05d1c	e3130801	 tst         r3, #1, 16
  05d20	0a000007	 beq         |$LN109@PDD_Dump|
  05d24	e59d3230	 ldr         r3, [sp, #0x230]
  05d28	e2833068	 add         r3, r3, #0x68
  05d2c	e5931000	 ldr         r1, [r3]
  05d30	e59f01e0	 ldr         r0, [pc, #0x1E0]
  05d34	eb000000	 bl          CeLogMsg
  05d38	e3a03001	 mov         r3, #1
  05d3c	e58d30e0	 str         r3, [sp, #0xE0]
  05d40	ea000006	 b           |$LN110@PDD_Dump|
  05d44		 |$LN109@PDD_Dump|
  05d44	e59d3230	 ldr         r3, [sp, #0x230]
  05d48	e2833068	 add         r3, r3, #0x68
  05d4c	e5931000	 ldr         r1, [r3]
  05d50	e59f01c0	 ldr         r0, [pc, #0x1C0]
  05d54	eb000000	 bl          NKDbgPrintfW
  05d58	e3a03000	 mov         r3, #0
  05d5c	e58d30e0	 str         r3, [sp, #0xE0]
  05d60		 |$LN110@PDD_Dump|
  05d60	e3a03001	 mov         r3, #1
  05d64	e58d30e4	 str         r3, [sp, #0xE4]
  05d68	ea000001	 b           |$LN112@PDD_Dump|
  05d6c		 |$LN111@PDD_Dump|
  05d6c	e3a03000	 mov         r3, #0
  05d70	e58d30e4	 str         r3, [sp, #0xE4]
  05d74		 |$LN112@PDD_Dump|

; 2337 :         DEBUGMSG(ZONE_PDD, (L"\tEP0        = 0x%04X\r\n", INREG32(&pPddRegs->EP0)));        // 0080 - Endpoint 0 configuration

  05d74	e59f318c	 ldr         r3, [pc, #0x18C]
  05d78	e5933440	 ldr         r3, [r3, #0x440]
  05d7c	e3130902	 tst         r3, #2, 18
  05d80	0a000015	 beq         |$LN115@PDD_Dump|
  05d84	e59f317c	 ldr         r3, [pc, #0x17C]
  05d88	e5933440	 ldr         r3, [r3, #0x440]
  05d8c	e3130801	 tst         r3, #1, 16
  05d90	0a000007	 beq         |$LN113@PDD_Dump|
  05d94	e59d3230	 ldr         r3, [sp, #0x230]
  05d98	e2833080	 add         r3, r3, #0x80
  05d9c	e5931000	 ldr         r1, [r3]
  05da0	e59f016c	 ldr         r0, [pc, #0x16C]
  05da4	eb000000	 bl          CeLogMsg
  05da8	e3a03001	 mov         r3, #1
  05dac	e58d30e8	 str         r3, [sp, #0xE8]
  05db0	ea000006	 b           |$LN114@PDD_Dump|
  05db4		 |$LN113@PDD_Dump|
  05db4	e59d3230	 ldr         r3, [sp, #0x230]
  05db8	e2833080	 add         r3, r3, #0x80
  05dbc	e5931000	 ldr         r1, [r3]
  05dc0	e59f014c	 ldr         r0, [pc, #0x14C]
  05dc4	eb000000	 bl          NKDbgPrintfW
  05dc8	e3a03000	 mov         r3, #0
  05dcc	e58d30e8	 str         r3, [sp, #0xE8]
  05dd0		 |$LN114@PDD_Dump|
  05dd0	e3a03001	 mov         r3, #1
  05dd4	e58d30ec	 str         r3, [sp, #0xEC]
  05dd8	ea000001	 b           |$LN116@PDD_Dump|
  05ddc		 |$LN115@PDD_Dump|
  05ddc	e3a03000	 mov         r3, #0
  05de0	e58d30ec	 str         r3, [sp, #0xEC]
  05de4		 |$LN116@PDD_Dump|

; 2338 :         DEBUGMSG(ZONE_PDD, (L"\tEP_RX[0]   = 0x%04X\r\n", INREG32(&pPddRegs->EP_RX[0])));   // 0084 - Endpoint 1 configuration

  05de4	e59f311c	 ldr         r3, [pc, #0x11C]
  05de8	e5933440	 ldr         r3, [r3, #0x440]
  05dec	e3130902	 tst         r3, #2, 18
  05df0	0a000015	 beq         |$LN119@PDD_Dump|
  05df4	e59f310c	 ldr         r3, [pc, #0x10C]
  05df8	e5933440	 ldr         r3, [r3, #0x440]
  05dfc	e3130801	 tst         r3, #1, 16
  05e00	0a000007	 beq         |$LN117@PDD_Dump|
  05e04	e59d3230	 ldr         r3, [sp, #0x230]
  05e08	e2833084	 add         r3, r3, #0x84
  05e0c	e5931000	 ldr         r1, [r3]
  05e10	e59f00f8	 ldr         r0, [pc, #0xF8]
  05e14	eb000000	 bl          CeLogMsg
  05e18	e3a03001	 mov         r3, #1
  05e1c	e58d30f0	 str         r3, [sp, #0xF0]
  05e20	ea000006	 b           |$LN118@PDD_Dump|
  05e24		 |$LN117@PDD_Dump|
  05e24	e59d3230	 ldr         r3, [sp, #0x230]
  05e28	e2833084	 add         r3, r3, #0x84
  05e2c	e5931000	 ldr         r1, [r3]
  05e30	e59f00d8	 ldr         r0, [pc, #0xD8]
  05e34	eb000000	 bl          NKDbgPrintfW
  05e38	e3a03000	 mov         r3, #0
  05e3c	e58d30f0	 str         r3, [sp, #0xF0]
  05e40		 |$LN118@PDD_Dump|
  05e40	e3a03001	 mov         r3, #1
  05e44	e58d30f4	 str         r3, [sp, #0xF4]
  05e48	ea000001	 b           |$LN120@PDD_Dump|
  05e4c		 |$LN119@PDD_Dump|
  05e4c	e3a03000	 mov         r3, #0
  05e50	e58d30f4	 str         r3, [sp, #0xF4]
  05e54		 |$LN120@PDD_Dump|

; 2339 :         DEBUGMSG(ZONE_PDD, (L"\tEP_RX[1]   = 0x%04X\r\n", INREG32(&pPddRegs->EP_RX[1])));   // 0088 - Endpoint 2 configuration

  05e54	e59f30ac	 ldr         r3, [pc, #0xAC]
  05e58	e5933440	 ldr         r3, [r3, #0x440]
  05e5c	e3130902	 tst         r3, #2, 18
  05e60	0a000015	 beq         |$LN123@PDD_Dump|
  05e64	e59f309c	 ldr         r3, [pc, #0x9C]
  05e68	e5933440	 ldr         r3, [r3, #0x440]
  05e6c	e3130801	 tst         r3, #1, 16
  05e70	0a000007	 beq         |$LN121@PDD_Dump|
  05e74	e59d3230	 ldr         r3, [sp, #0x230]
  05e78	e2833088	 add         r3, r3, #0x88
  05e7c	e5931000	 ldr         r1, [r3]
  05e80	e59f0084	 ldr         r0, [pc, #0x84]
  05e84	eb000000	 bl          CeLogMsg
  05e88	e3a03001	 mov         r3, #1
  05e8c	e58d30f8	 str         r3, [sp, #0xF8]
  05e90	ea000006	 b           |$LN122@PDD_Dump|
  05e94		 |$LN121@PDD_Dump|
  05e94	e59d3230	 ldr         r3, [sp, #0x230]
  05e98	e2833088	 add         r3, r3, #0x88
  05e9c	e5931000	 ldr         r1, [r3]
  05ea0	e59f0064	 ldr         r0, [pc, #0x64]
  05ea4	eb000000	 bl          NKDbgPrintfW
  05ea8	e3a03000	 mov         r3, #0
  05eac	e58d30f8	 str         r3, [sp, #0xF8]
  05eb0		 |$LN122@PDD_Dump|
  05eb0	e3a03001	 mov         r3, #1
  05eb4	e58d30fc	 str         r3, [sp, #0xFC]
  05eb8	ea000001	 b           |$LN124@PDD_Dump|
  05ebc		 |$LN123@PDD_Dump|
  05ebc	e3a03000	 mov         r3, #0
  05ec0	e58d30fc	 str         r3, [sp, #0xFC]
  05ec4		 |$LN124@PDD_Dump|

; 2340 :         DEBUGMSG(ZONE_PDD, (L"\tEP_RX[2]   = 0x%04X\r\n", INREG32(&pPddRegs->EP_RX[2])));   // 008C - Endpoint 3 configuration

  05ec4	e59f303c	 ldr         r3, [pc, #0x3C]
  05ec8	e5933440	 ldr         r3, [r3, #0x440]
  05ecc	e3130902	 tst         r3, #2, 18
  05ed0	0a000034	 beq         |$LN127@PDD_Dump|
  05ed4	e59f302c	 ldr         r3, [pc, #0x2C]
  05ed8	e5933440	 ldr         r3, [r3, #0x440]
  05edc	e3130801	 tst         r3, #1, 16
  05ee0	0a000026	 beq         |$LN125@PDD_Dump|
  05ee4	e59d3230	 ldr         r3, [sp, #0x230]
  05ee8	e283308c	 add         r3, r3, #0x8C
  05eec	e5931000	 ldr         r1, [r3]
  05ef0	e59f000c	 ldr         r0, [pc, #0xC]
  05ef4	eb000000	 bl          CeLogMsg
  05ef8	e3a03001	 mov         r3, #1
  05efc	e58d3100	 str         r3, [sp, #0x100]
  05f00	ea000025	 b           |$LN126@PDD_Dump|
  05f04		 |$LN309@PDD_Dump|
  05f04		 |$LN310@PDD_Dump|
  05f04	00000000	 DCD         |??_C@_1CO@HKACBIDC@?$AA?7?$AAE?$AAP?$AA_?$AAR?$AAX?$AA?$FL?$AA2?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f08		 |$LN311@PDD_Dump|
  05f08	00000000	 DCD         |dpCurSettings|
  05f0c		 |$LN312@PDD_Dump|
  05f0c	00000000	 DCD         |??_C@_1CO@LDBNBAIN@?$AA?7?$AAE?$AAP?$AA_?$AAR?$AAX?$AA?$FL?$AA1?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f10		 |$LN313@PDD_Dump|
  05f10	00000000	 DCD         |??_C@_1CO@ECMHBFCH@?$AA?7?$AAE?$AAP?$AA_?$AAR?$AAX?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f14		 |$LN314@PDD_Dump|
  05f14	00000000	 DCD         |??_C@_1CO@FLPNEFHI@?$AA?7?$AAE?$AAP?$AA0?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f18		 |$LN315@PDD_Dump|
  05f18	00000000	 DCD         |??_C@_1CO@IBMKODGG@?$AA?7?$AAR?$AAX?$AAD?$AAM?$AAA?$AA2?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f1c		 |$LN316@PDD_Dump|
  05f1c	00000000	 DCD         |??_C@_1CO@OMEMBADM@?$AA?7?$AAR?$AAX?$AAD?$AAM?$AAA?$AA1?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f20		 |$LN317@PDD_Dump|
  05f20	00000000	 DCD         |??_C@_1CO@MIMOEBAK@?$AA?7?$AAR?$AAX?$AAD?$AAM?$AAA?$AA0?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f24		 |$LN318@PDD_Dump|
  05f24	00000000	 DCD         |??_C@_1CO@HNDKHCCK@?$AA?7?$AAT?$AAX?$AAD?$AAM?$AAA?$AA2?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f28		 |$LN319@PDD_Dump|
  05f28	00000000	 DCD         |??_C@_1CO@BALMIBHA@?$AA?7?$AAT?$AAX?$AAD?$AAM?$AAA?$AA1?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f2c		 |$LN320@PDD_Dump|
  05f2c	00000000	 DCD         |??_C@_1CO@DEDONAEG@?$AA?7?$AAT?$AAX?$AAD?$AAM?$AAA?$AA0?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f30		 |$LN321@PDD_Dump|
  05f30	00000000	 DCD         |??_C@_1CO@EADMAAPI@?$AA?7?$AAT?$AAX?$AAD?$AAM?$AAA?$AA_?$AAC?$AAF?$AAG?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f34		 |$LN322@PDD_Dump|
  05f34	00000000	 DCD         |??_C@_1CO@LMMMJBLE@?$AA?7?$AAR?$AAX?$AAD?$AAM?$AAA?$AA_?$AAC?$AAF?$AAG?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f38		 |$LN323@PDD_Dump|
  05f38	00000000	 DCD         |??_C@_1CO@DDFEPGLI@?$AA?7?$AAD?$AAM?$AAA?$AA_?$AAS?$AAT?$AAA?$AAT?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f3c		 |$LN324@PDD_Dump|
  05f3c	00000000	 DCD         |??_C@_1CO@FGFDIKHI@?$AA?7?$AAE?$AAP?$AA_?$AAS?$AAT?$AAA?$AAT?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f40		 |$LN325@PDD_Dump|
  05f40	00000000	 DCD         |??_C@_1CO@JPFGPDOC@?$AA?7?$AAI?$AAR?$AAQ?$AA_?$AAS?$AAR?$AAC?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f44		 |$LN326@PDD_Dump|
  05f44	00000000	 DCD         |??_C@_1CO@JEPMPDPD@?$AA?7?$AAD?$AAM?$AAA?$AA_?$AAI?$AAR?$AAQ?$AA_?$AAE?$AAN?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f48		 |$LN327@PDD_Dump|
  05f48	00000000	 DCD         |??_C@_1CO@HJMDNKAB@?$AA?7?$AAI?$AAR?$AAQ?$AA_?$AAE?$AAN?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f4c		 |$LN328@PDD_Dump|
  05f4c	00000000	 DCD         |??_C@_1CO@FFKBPHCP@?$AA?7?$AAS?$AAO?$AAF?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f50		 |$LN329@PDD_Dump|
  05f50	00000000	 DCD         |??_C@_1CO@PCDGFFFJ@?$AA?7?$AAD?$AAE?$AAV?$AAS?$AAT?$AAA?$AAT?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f54		 |$LN330@PDD_Dump|
  05f54	00000000	 DCD         |??_C@_1CO@CBCEPHHF@?$AA?7?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AA2?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f58		 |$LN331@PDD_Dump|
  05f58	00000000	 DCD         |??_C@_1CO@OIDLPPMK@?$AA?7?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AA1?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f5c		 |$LN332@PDD_Dump|
  05f5c	00000000	 DCD         |??_C@_1CO@GHNAILEE@?$AA?7?$AAR?$AAX?$AAF?$AAS?$AAT?$AAA?$AAT?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f60		 |$LN333@PDD_Dump|
  05f60	00000000	 DCD         |??_C@_1CO@BIMKJAAL@?$AA?7?$AAS?$AAT?$AAA?$AAT?$AA_?$AAF?$AAL?$AAG?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f64		 |$LN334@PDD_Dump|
  05f64	00000000	 DCD         |??_C@_1CO@HLNMMNHG@?$AA?7?$AAC?$AAT?$AAR?$AAL?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f68		 |$LN335@PDD_Dump|
  05f68	00000000	 DCD         |??_C@_1CO@FJKGIOCD@?$AA?7?$AAE?$AAP?$AA_?$AAN?$AAU?$AAM?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f6c		 |$LN336@PDD_Dump|
  05f6c	00000000	 DCD         |??_C@_1CO@BLPHPHJJ@?$AA?7?$AAR?$AAE?$AAV?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  05f70		 |$LN337@PDD_Dump|
  05f70	00000000	 DCD         |??_C@_1CO@PAIEAHOO@?$AAD?$AAu?$AAm?$AAp?$AA?5?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?3?$AA?$AN?$AA?6?$AA?$AA@|
  05f74		 |$LN338@PDD_Dump|
  05f74	00000000	 DCD         |??_C@_1HK@PBAEGKEA@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAP?$AAD?$AAD?$AA_?$AAD?$AAu?$AAm?$AAp?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAP?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr@|
  05f78		 |$LN339@PDD_Dump|
  05f78	00000000	 DCD         |??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@|
  05f7c		 |$LN340@PDD_Dump|
  05f7c	00000000	 DCD         |??_C@_1HO@CBBNADKJ@?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN@|
  05f80		 |$LN125@PDD_Dump|
  05f80	e59d3230	 ldr         r3, [sp, #0x230]
  05f84	e283308c	 add         r3, r3, #0x8C
  05f88	e5931000	 ldr         r1, [r3]
  05f8c	e59f0fdc	 ldr         r0, [pc, #0xFDC]
  05f90	eb000000	 bl          NKDbgPrintfW
  05f94	e3a03000	 mov         r3, #0
  05f98	e58d3100	 str         r3, [sp, #0x100]
  05f9c		 |$LN126@PDD_Dump|
  05f9c	e3a03001	 mov         r3, #1
  05fa0	e58d3104	 str         r3, [sp, #0x104]
  05fa4	ea000001	 b           |$LN128@PDD_Dump|
  05fa8		 |$LN127@PDD_Dump|
  05fa8	e3a03000	 mov         r3, #0
  05fac	e58d3104	 str         r3, [sp, #0x104]
  05fb0		 |$LN128@PDD_Dump|

; 2341 :         DEBUGMSG(ZONE_PDD, (L"\tEP_RX[3]   = 0x%04X\r\n", INREG32(&pPddRegs->EP_RX[3])));   // 0090 - Endpoint 4 configuration

  05fb0	e59f3f30	 ldr         r3, [pc, #0xF30]
  05fb4	e5933440	 ldr         r3, [r3, #0x440]
  05fb8	e3130902	 tst         r3, #2, 18
  05fbc	0a000015	 beq         |$LN131@PDD_Dump|
  05fc0	e59f3f20	 ldr         r3, [pc, #0xF20]
  05fc4	e5933440	 ldr         r3, [r3, #0x440]
  05fc8	e3130801	 tst         r3, #1, 16
  05fcc	0a000007	 beq         |$LN129@PDD_Dump|
  05fd0	e59d3230	 ldr         r3, [sp, #0x230]
  05fd4	e2833090	 add         r3, r3, #0x90
  05fd8	e5931000	 ldr         r1, [r3]
  05fdc	e59f0f88	 ldr         r0, [pc, #0xF88]
  05fe0	eb000000	 bl          CeLogMsg
  05fe4	e3a03001	 mov         r3, #1
  05fe8	e58d3108	 str         r3, [sp, #0x108]
  05fec	ea000006	 b           |$LN130@PDD_Dump|
  05ff0		 |$LN129@PDD_Dump|
  05ff0	e59d3230	 ldr         r3, [sp, #0x230]
  05ff4	e2833090	 add         r3, r3, #0x90
  05ff8	e5931000	 ldr         r1, [r3]
  05ffc	e59f0f68	 ldr         r0, [pc, #0xF68]
  06000	eb000000	 bl          NKDbgPrintfW
  06004	e3a03000	 mov         r3, #0
  06008	e58d3108	 str         r3, [sp, #0x108]
  0600c		 |$LN130@PDD_Dump|
  0600c	e3a03001	 mov         r3, #1
  06010	e58d310c	 str         r3, [sp, #0x10C]
  06014	ea000001	 b           |$LN132@PDD_Dump|
  06018		 |$LN131@PDD_Dump|
  06018	e3a03000	 mov         r3, #0
  0601c	e58d310c	 str         r3, [sp, #0x10C]
  06020		 |$LN132@PDD_Dump|

; 2342 :         DEBUGMSG(ZONE_PDD, (L"\tEP_TX[0]   = 0x%04X\r\n", INREG32(&pPddRegs->EP_TX[0])));   // 00C4 - Endpoint 1 configuration

  06020	e59f3ec0	 ldr         r3, [pc, #0xEC0]
  06024	e5933440	 ldr         r3, [r3, #0x440]
  06028	e3130902	 tst         r3, #2, 18
  0602c	0a000015	 beq         |$LN135@PDD_Dump|
  06030	e59f3eb0	 ldr         r3, [pc, #0xEB0]
  06034	e5933440	 ldr         r3, [r3, #0x440]
  06038	e3130801	 tst         r3, #1, 16
  0603c	0a000007	 beq         |$LN133@PDD_Dump|
  06040	e59d3230	 ldr         r3, [sp, #0x230]
  06044	e28330c4	 add         r3, r3, #0xC4
  06048	e5931000	 ldr         r1, [r3]
  0604c	e59f0f14	 ldr         r0, [pc, #0xF14]
  06050	eb000000	 bl          CeLogMsg
  06054	e3a03001	 mov         r3, #1
  06058	e58d3110	 str         r3, [sp, #0x110]
  0605c	ea000006	 b           |$LN134@PDD_Dump|
  06060		 |$LN133@PDD_Dump|
  06060	e59d3230	 ldr         r3, [sp, #0x230]
  06064	e28330c4	 add         r3, r3, #0xC4
  06068	e5931000	 ldr         r1, [r3]
  0606c	e59f0ef4	 ldr         r0, [pc, #0xEF4]
  06070	eb000000	 bl          NKDbgPrintfW
  06074	e3a03000	 mov         r3, #0
  06078	e58d3110	 str         r3, [sp, #0x110]
  0607c		 |$LN134@PDD_Dump|
  0607c	e3a03001	 mov         r3, #1
  06080	e58d3114	 str         r3, [sp, #0x114]
  06084	ea000001	 b           |$LN136@PDD_Dump|
  06088		 |$LN135@PDD_Dump|
  06088	e3a03000	 mov         r3, #0
  0608c	e58d3114	 str         r3, [sp, #0x114]
  06090		 |$LN136@PDD_Dump|

; 2343 :         DEBUGMSG(ZONE_PDD, (L"\tEP_TX[1]   = 0x%04X\r\n", INREG32(&pPddRegs->EP_TX[1])));   // 00C8 - Endpoint 2 configuration

  06090	e59f3e50	 ldr         r3, [pc, #0xE50]
  06094	e5933440	 ldr         r3, [r3, #0x440]
  06098	e3130902	 tst         r3, #2, 18
  0609c	0a000015	 beq         |$LN139@PDD_Dump|
  060a0	e59f3e40	 ldr         r3, [pc, #0xE40]
  060a4	e5933440	 ldr         r3, [r3, #0x440]
  060a8	e3130801	 tst         r3, #1, 16
  060ac	0a000007	 beq         |$LN137@PDD_Dump|
  060b0	e59d3230	 ldr         r3, [sp, #0x230]
  060b4	e28330c8	 add         r3, r3, #0xC8
  060b8	e5931000	 ldr         r1, [r3]
  060bc	e59f0ea0	 ldr         r0, [pc, #0xEA0]
  060c0	eb000000	 bl          CeLogMsg
  060c4	e3a03001	 mov         r3, #1
  060c8	e58d3118	 str         r3, [sp, #0x118]
  060cc	ea000006	 b           |$LN138@PDD_Dump|
  060d0		 |$LN137@PDD_Dump|
  060d0	e59d3230	 ldr         r3, [sp, #0x230]
  060d4	e28330c8	 add         r3, r3, #0xC8
  060d8	e5931000	 ldr         r1, [r3]
  060dc	e59f0e80	 ldr         r0, [pc, #0xE80]
  060e0	eb000000	 bl          NKDbgPrintfW
  060e4	e3a03000	 mov         r3, #0
  060e8	e58d3118	 str         r3, [sp, #0x118]
  060ec		 |$LN138@PDD_Dump|
  060ec	e3a03001	 mov         r3, #1
  060f0	e58d311c	 str         r3, [sp, #0x11C]
  060f4	ea000001	 b           |$LN140@PDD_Dump|
  060f8		 |$LN139@PDD_Dump|
  060f8	e3a03000	 mov         r3, #0
  060fc	e58d311c	 str         r3, [sp, #0x11C]
  06100		 |$LN140@PDD_Dump|

; 2344 :         DEBUGMSG(ZONE_PDD, (L"\tEP_TX[2]   = 0x%04X\r\n", INREG32(&pPddRegs->EP_TX[2])));   // 00CC - Endpoint 3 configuration

  06100	e59f3de0	 ldr         r3, [pc, #0xDE0]
  06104	e5933440	 ldr         r3, [r3, #0x440]
  06108	e3130902	 tst         r3, #2, 18
  0610c	0a000015	 beq         |$LN143@PDD_Dump|
  06110	e59f3dd0	 ldr         r3, [pc, #0xDD0]
  06114	e5933440	 ldr         r3, [r3, #0x440]
  06118	e3130801	 tst         r3, #1, 16
  0611c	0a000007	 beq         |$LN141@PDD_Dump|
  06120	e59d3230	 ldr         r3, [sp, #0x230]
  06124	e28330cc	 add         r3, r3, #0xCC
  06128	e5931000	 ldr         r1, [r3]
  0612c	e59f0e2c	 ldr         r0, [pc, #0xE2C]
  06130	eb000000	 bl          CeLogMsg
  06134	e3a03001	 mov         r3, #1
  06138	e58d3120	 str         r3, [sp, #0x120]
  0613c	ea000006	 b           |$LN142@PDD_Dump|
  06140		 |$LN141@PDD_Dump|
  06140	e59d3230	 ldr         r3, [sp, #0x230]
  06144	e28330cc	 add         r3, r3, #0xCC
  06148	e5931000	 ldr         r1, [r3]
  0614c	e59f0e0c	 ldr         r0, [pc, #0xE0C]
  06150	eb000000	 bl          NKDbgPrintfW
  06154	e3a03000	 mov         r3, #0
  06158	e58d3120	 str         r3, [sp, #0x120]
  0615c		 |$LN142@PDD_Dump|
  0615c	e3a03001	 mov         r3, #1
  06160	e58d3124	 str         r3, [sp, #0x124]
  06164	ea000001	 b           |$LN144@PDD_Dump|
  06168		 |$LN143@PDD_Dump|
  06168	e3a03000	 mov         r3, #0
  0616c	e58d3124	 str         r3, [sp, #0x124]
  06170		 |$LN144@PDD_Dump|

; 2345 :         DEBUGMSG(ZONE_PDD, (L"\tEP_TX[3]   = 0x%04X\r\n", INREG32(&pPddRegs->EP_TX[3])));   // 00D0 - Endpoint 4 configuration

  06170	e59f3d70	 ldr         r3, [pc, #0xD70]
  06174	e5933440	 ldr         r3, [r3, #0x440]
  06178	e3130902	 tst         r3, #2, 18
  0617c	0a000015	 beq         |$LN147@PDD_Dump|
  06180	e59f3d60	 ldr         r3, [pc, #0xD60]
  06184	e5933440	 ldr         r3, [r3, #0x440]
  06188	e3130801	 tst         r3, #1, 16
  0618c	0a000007	 beq         |$LN145@PDD_Dump|
  06190	e59d3230	 ldr         r3, [sp, #0x230]
  06194	e28330d0	 add         r3, r3, #0xD0
  06198	e5931000	 ldr         r1, [r3]
  0619c	e59f0db8	 ldr         r0, [pc, #0xDB8]
  061a0	eb000000	 bl          CeLogMsg
  061a4	e3a03001	 mov         r3, #1
  061a8	e58d3128	 str         r3, [sp, #0x128]
  061ac	ea000006	 b           |$LN146@PDD_Dump|
  061b0		 |$LN145@PDD_Dump|
  061b0	e59d3230	 ldr         r3, [sp, #0x230]
  061b4	e28330d0	 add         r3, r3, #0xD0
  061b8	e5931000	 ldr         r1, [r3]
  061bc	e59f0d98	 ldr         r0, [pc, #0xD98]
  061c0	eb000000	 bl          NKDbgPrintfW
  061c4	e3a03000	 mov         r3, #0
  061c8	e58d3128	 str         r3, [sp, #0x128]
  061cc		 |$LN146@PDD_Dump|
  061cc	e3a03001	 mov         r3, #1
  061d0	e58d312c	 str         r3, [sp, #0x12C]
  061d4	ea000001	 b           |$LN148@PDD_Dump|
  061d8		 |$LN147@PDD_Dump|
  061d8	e3a03000	 mov         r3, #0
  061dc	e58d312c	 str         r3, [sp, #0x12C]
  061e0		 |$LN148@PDD_Dump|

; 2346 :         DEBUGMSG(ZONE_PDD, (L"\r\n"));

  061e0	e59f3d00	 ldr         r3, [pc, #0xD00]
  061e4	e5933440	 ldr         r3, [r3, #0x440]
  061e8	e3130902	 tst         r3, #2, 18
  061ec	0a00000f	 beq         |$LN151@PDD_Dump|
  061f0	e59f3cf0	 ldr         r3, [pc, #0xCF0]
  061f4	e5933440	 ldr         r3, [r3, #0x440]
  061f8	e3130801	 tst         r3, #1, 16
  061fc	0a000004	 beq         |$LN149@PDD_Dump|
  06200	e59f0ce4	 ldr         r0, [pc, #0xCE4]
  06204	eb000000	 bl          CeLogMsg
  06208	e3a03001	 mov         r3, #1
  0620c	e58d3130	 str         r3, [sp, #0x130]
  06210	ea000003	 b           |$LN150@PDD_Dump|
  06214		 |$LN149@PDD_Dump|
  06214	e59f0cd0	 ldr         r0, [pc, #0xCD0]
  06218	eb000000	 bl          NKDbgPrintfW
  0621c	e3a03000	 mov         r3, #0
  06220	e58d3130	 str         r3, [sp, #0x130]
  06224		 |$LN150@PDD_Dump|
  06224	e3a03001	 mov         r3, #1
  06228	e58d3134	 str         r3, [sp, #0x134]
  0622c	ea000001	 b           |$LN152@PDD_Dump|
  06230		 |$LN151@PDD_Dump|
  06230	e3a03000	 mov         r3, #0
  06234	e58d3134	 str         r3, [sp, #0x134]
  06238		 |$LN152@PDD_Dump|
  06238		 |$LN5@PDD_Dump|

; 2347 :     }
; 2348 : 
; 2349 : #ifdef SHOW_CONFIG_REGISTERS
; 2350 :     {
; 2351 :         PHYSICAL_ADDRESS pa;
; 2352 :         OMAP2420_SYSC1_REGS * pConfRegs;
; 2353 : 
; 2354 :         pa.QuadPart = OMAP2420_SYSC1_REGS_PA;

  06238	e3a03312	 mov         r3, #0x12, 6
  0623c	e58d3004	 str         r3, [sp, #4]
  06240	e3a03000	 mov         r3, #0
  06244	e58d3008	 str         r3, [sp, #8]

; 2355 :         pConfRegs   = (OMAP2420_SYSC1_REGS*)MmMapIoSpace(pa, sizeof(OMAP2420_SYSC1_REGS), FALSE);

  06248	e3a03000	 mov         r3, #0
  0624c	e3a02fd6	 mov         r2, #0xD6, 30
  06250	e59d0004	 ldr         r0, [sp, #4]
  06254	e59d1008	 ldr         r1, [sp, #8]
  06258	eb000000	 bl          MmMapIoSpace
  0625c	e58d0138	 str         r0, [sp, #0x138]
  06260	e59d3138	 ldr         r3, [sp, #0x138]
  06264	e58d3000	 str         r3, [sp]

; 2356 : 
; 2357 :         if (pConfRegs == NULL)

  06268	e59d3000	 ldr         r3, [sp]
  0626c	e3530000	 cmp         r3, #0
  06270	1a000016	 bne         |$LN4@PDD_Dump|

; 2358 :         {
; 2359 :             DEBUGMSG(ZONE_PDD, (L"USBD PDD_Dump() - ERROR: Unable to map memory for System Control Registers\r\n"));

  06274	e59f3c6c	 ldr         r3, [pc, #0xC6C]
  06278	e5933440	 ldr         r3, [r3, #0x440]
  0627c	e3130902	 tst         r3, #2, 18
  06280	0a00000f	 beq         |$LN155@PDD_Dump|
  06284	e59f3c5c	 ldr         r3, [pc, #0xC5C]
  06288	e5933440	 ldr         r3, [r3, #0x440]
  0628c	e3130801	 tst         r3, #1, 16
  06290	0a000004	 beq         |$LN153@PDD_Dump|
  06294	e59f0cbc	 ldr         r0, [pc, #0xCBC]
  06298	eb000000	 bl          CeLogMsg
  0629c	e3a03001	 mov         r3, #1
  062a0	e58d313c	 str         r3, [sp, #0x13C]
  062a4	ea000003	 b           |$LN154@PDD_Dump|
  062a8		 |$LN153@PDD_Dump|
  062a8	e59f0ca8	 ldr         r0, [pc, #0xCA8]
  062ac	eb000000	 bl          NKDbgPrintfW
  062b0	e3a03000	 mov         r3, #0
  062b4	e58d313c	 str         r3, [sp, #0x13C]
  062b8		 |$LN154@PDD_Dump|
  062b8	e3a03001	 mov         r3, #1
  062bc	e58d3140	 str         r3, [sp, #0x140]
  062c0	ea000001	 b           |$LN156@PDD_Dump|
  062c4		 |$LN155@PDD_Dump|
  062c4	e3a03000	 mov         r3, #0
  062c8	e58d3140	 str         r3, [sp, #0x140]
  062cc		 |$LN156@PDD_Dump|

; 2360 :         }
; 2361 :         else

  062cc	ea00019a	 b           |$LN3@PDD_Dump|
  062d0		 |$LN4@PDD_Dump|

; 2362 :         {
; 2363 :             DEBUGMSG(ZONE_PDD, (L"Dump System Control Registers\r\n"));

  062d0	e59f3c10	 ldr         r3, [pc, #0xC10]
  062d4	e5933440	 ldr         r3, [r3, #0x440]
  062d8	e3130902	 tst         r3, #2, 18
  062dc	0a00000f	 beq         |$LN159@PDD_Dump|
  062e0	e59f3c00	 ldr         r3, [pc, #0xC00]
  062e4	e5933440	 ldr         r3, [r3, #0x440]
  062e8	e3130801	 tst         r3, #1, 16
  062ec	0a000004	 beq         |$LN157@PDD_Dump|
  062f0	e59f0c5c	 ldr         r0, [pc, #0xC5C]
  062f4	eb000000	 bl          CeLogMsg
  062f8	e3a03001	 mov         r3, #1
  062fc	e58d3144	 str         r3, [sp, #0x144]
  06300	ea000003	 b           |$LN158@PDD_Dump|
  06304		 |$LN157@PDD_Dump|
  06304	e59f0c48	 ldr         r0, [pc, #0xC48]
  06308	eb000000	 bl          NKDbgPrintfW
  0630c	e3a03000	 mov         r3, #0
  06310	e58d3144	 str         r3, [sp, #0x144]
  06314		 |$LN158@PDD_Dump|
  06314	e3a03001	 mov         r3, #1
  06318	e58d3148	 str         r3, [sp, #0x148]
  0631c	ea000001	 b           |$LN160@PDD_Dump|
  06320		 |$LN159@PDD_Dump|
  06320	e3a03000	 mov         r3, #0
  06324	e58d3148	 str         r3, [sp, #0x148]
  06328		 |$LN160@PDD_Dump|

; 2364 :             DEBUGMSG(ZONE_PDD, (L"\tCONTROL_REVISION      = 0x%08X\r\n", INREG32(&pConfRegs->ulCONTROL_REVISION)));

  06328	e59f3bb8	 ldr         r3, [pc, #0xBB8]
  0632c	e5933440	 ldr         r3, [r3, #0x440]
  06330	e3130902	 tst         r3, #2, 18
  06334	0a000013	 beq         |$LN163@PDD_Dump|
  06338	e59f3ba8	 ldr         r3, [pc, #0xBA8]
  0633c	e5933440	 ldr         r3, [r3, #0x440]
  06340	e3130801	 tst         r3, #1, 16
  06344	0a000006	 beq         |$LN161@PDD_Dump|
  06348	e59d3000	 ldr         r3, [sp]
  0634c	e5931000	 ldr         r1, [r3]
  06350	e59f0bf8	 ldr         r0, [pc, #0xBF8]
  06354	eb000000	 bl          CeLogMsg
  06358	e3a03001	 mov         r3, #1
  0635c	e58d314c	 str         r3, [sp, #0x14C]
  06360	ea000005	 b           |$LN162@PDD_Dump|
  06364		 |$LN161@PDD_Dump|
  06364	e59d3000	 ldr         r3, [sp]
  06368	e5931000	 ldr         r1, [r3]
  0636c	e59f0bdc	 ldr         r0, [pc, #0xBDC]
  06370	eb000000	 bl          NKDbgPrintfW
  06374	e3a03000	 mov         r3, #0
  06378	e58d314c	 str         r3, [sp, #0x14C]
  0637c		 |$LN162@PDD_Dump|
  0637c	e3a03001	 mov         r3, #1
  06380	e58d3150	 str         r3, [sp, #0x150]
  06384	ea000001	 b           |$LN164@PDD_Dump|
  06388		 |$LN163@PDD_Dump|
  06388	e3a03000	 mov         r3, #0
  0638c	e58d3150	 str         r3, [sp, #0x150]
  06390		 |$LN164@PDD_Dump|

; 2365 :             DEBUGMSG(ZONE_PDD, (L"\tCONTROL_SYSCONFIG     = 0x%08X\r\n", INREG32(&pConfRegs->ulCONTROL_SYSCONFIG)));

  06390	e59f3b50	 ldr         r3, [pc, #0xB50]
  06394	e5933440	 ldr         r3, [r3, #0x440]
  06398	e3130902	 tst         r3, #2, 18
  0639c	0a000015	 beq         |$LN167@PDD_Dump|
  063a0	e59f3b40	 ldr         r3, [pc, #0xB40]
  063a4	e5933440	 ldr         r3, [r3, #0x440]
  063a8	e3130801	 tst         r3, #1, 16
  063ac	0a000007	 beq         |$LN165@PDD_Dump|
  063b0	e59d3000	 ldr         r3, [sp]
  063b4	e2833010	 add         r3, r3, #0x10
  063b8	e5931000	 ldr         r1, [r3]
  063bc	e59f0b88	 ldr         r0, [pc, #0xB88]
  063c0	eb000000	 bl          CeLogMsg
  063c4	e3a03001	 mov         r3, #1
  063c8	e58d3154	 str         r3, [sp, #0x154]
  063cc	ea000006	 b           |$LN166@PDD_Dump|
  063d0		 |$LN165@PDD_Dump|
  063d0	e59d3000	 ldr         r3, [sp]
  063d4	e2833010	 add         r3, r3, #0x10
  063d8	e5931000	 ldr         r1, [r3]
  063dc	e59f0b68	 ldr         r0, [pc, #0xB68]
  063e0	eb000000	 bl          NKDbgPrintfW
  063e4	e3a03000	 mov         r3, #0
  063e8	e58d3154	 str         r3, [sp, #0x154]
  063ec		 |$LN166@PDD_Dump|
  063ec	e3a03001	 mov         r3, #1
  063f0	e58d3158	 str         r3, [sp, #0x158]
  063f4	ea000001	 b           |$LN168@PDD_Dump|
  063f8		 |$LN167@PDD_Dump|
  063f8	e3a03000	 mov         r3, #0
  063fc	e58d3158	 str         r3, [sp, #0x158]
  06400		 |$LN168@PDD_Dump|

; 2366 :             DEBUGMSG(ZONE_PDD, (L"\tPADCONF_TV_RREF       = 0x%08X\r\n", INREG32(&pConfRegs->ulCONTROL_PADCONF.ulPADCONF_TV_RREF)));

  06400	e59f3ae0	 ldr         r3, [pc, #0xAE0]
  06404	e5933440	 ldr         r3, [r3, #0x440]
  06408	e3130902	 tst         r3, #2, 18
  0640c	0a000015	 beq         |$LN171@PDD_Dump|
  06410	e59f3ad0	 ldr         r3, [pc, #0xAD0]
  06414	e5933440	 ldr         r3, [r3, #0x440]
  06418	e3130801	 tst         r3, #1, 16
  0641c	0a000007	 beq         |$LN169@PDD_Dump|
  06420	e59d3000	 ldr         r3, [sp]
  06424	e2833f47	 add         r3, r3, #0x47, 30
  06428	e5931000	 ldr         r1, [r3]
  0642c	e59f0b14	 ldr         r0, [pc, #0xB14]
  06430	eb000000	 bl          CeLogMsg
  06434	e3a03001	 mov         r3, #1
  06438	e58d315c	 str         r3, [sp, #0x15C]
  0643c	ea000006	 b           |$LN170@PDD_Dump|
  06440		 |$LN169@PDD_Dump|
  06440	e59d3000	 ldr         r3, [sp]
  06444	e2833f47	 add         r3, r3, #0x47, 30
  06448	e5931000	 ldr         r1, [r3]
  0644c	e59f0af4	 ldr         r0, [pc, #0xAF4]
  06450	eb000000	 bl          NKDbgPrintfW
  06454	e3a03000	 mov         r3, #0
  06458	e58d315c	 str         r3, [sp, #0x15C]
  0645c		 |$LN170@PDD_Dump|
  0645c	e3a03001	 mov         r3, #1
  06460	e58d3160	 str         r3, [sp, #0x160]
  06464	ea000001	 b           |$LN172@PDD_Dump|
  06468		 |$LN171@PDD_Dump|
  06468	e3a03000	 mov         r3, #0
  0646c	e58d3160	 str         r3, [sp, #0x160]
  06470		 |$LN172@PDD_Dump|

; 2367 :             DEBUGMSG(ZONE_PDD, (L"\tPADCONF_USB0_RCV      = 0x%08X\r\n", INREG32(&pConfRegs->ulCONTROL_PADCONF.ulPADCONF_USB0_RCV)));

  06470	e59f3a70	 ldr         r3, [pc, #0xA70]
  06474	e5933440	 ldr         r3, [r3, #0x440]
  06478	e3130902	 tst         r3, #2, 18
  0647c	0a000015	 beq         |$LN175@PDD_Dump|
  06480	e59f3a60	 ldr         r3, [pc, #0xA60]
  06484	e5933440	 ldr         r3, [r3, #0x440]
  06488	e3130801	 tst         r3, #1, 16
  0648c	0a000007	 beq         |$LN173@PDD_Dump|
  06490	e59d3000	 ldr         r3, [sp]
  06494	e2833e12	 add         r3, r3, #0x12, 28
  06498	e5931000	 ldr         r1, [r3]
  0649c	e59f0aa0	 ldr         r0, [pc, #0xAA0]
  064a0	eb000000	 bl          CeLogMsg
  064a4	e3a03001	 mov         r3, #1
  064a8	e58d3164	 str         r3, [sp, #0x164]
  064ac	ea000006	 b           |$LN174@PDD_Dump|
  064b0		 |$LN173@PDD_Dump|
  064b0	e59d3000	 ldr         r3, [sp]
  064b4	e2833e12	 add         r3, r3, #0x12, 28
  064b8	e5931000	 ldr         r1, [r3]
  064bc	e59f0a80	 ldr         r0, [pc, #0xA80]
  064c0	eb000000	 bl          NKDbgPrintfW
  064c4	e3a03000	 mov         r3, #0
  064c8	e58d3164	 str         r3, [sp, #0x164]
  064cc		 |$LN174@PDD_Dump|
  064cc	e3a03001	 mov         r3, #1
  064d0	e58d3168	 str         r3, [sp, #0x168]
  064d4	ea000001	 b           |$LN176@PDD_Dump|
  064d8		 |$LN175@PDD_Dump|
  064d8	e3a03000	 mov         r3, #0
  064dc	e58d3168	 str         r3, [sp, #0x168]
  064e0		 |$LN176@PDD_Dump|

; 2368 :             DEBUGMSG(ZONE_PDD, (L"\tCONTROL_DEBOBS        = 0x%08X\r\n", INREG32(&pConfRegs->ulCONTROL_DEBOBS)));

  064e0	e59f3a00	 ldr         r3, [pc, #0xA00]
  064e4	e5933440	 ldr         r3, [r3, #0x440]
  064e8	e3130902	 tst         r3, #2, 18
  064ec	0a000015	 beq         |$LN179@PDD_Dump|
  064f0	e59f39f0	 ldr         r3, [pc, #0x9F0]
  064f4	e5933440	 ldr         r3, [r3, #0x440]
  064f8	e3130801	 tst         r3, #1, 16
  064fc	0a000007	 beq         |$LN177@PDD_Dump|
  06500	e59d3000	 ldr         r3, [sp]
  06504	e2833e27	 add         r3, r3, #0x27, 28
  06508	e5931000	 ldr         r1, [r3]
  0650c	e59f0a2c	 ldr         r0, [pc, #0xA2C]
  06510	eb000000	 bl          CeLogMsg
  06514	e3a03001	 mov         r3, #1
  06518	e58d316c	 str         r3, [sp, #0x16C]
  0651c	ea000006	 b           |$LN178@PDD_Dump|
  06520		 |$LN177@PDD_Dump|
  06520	e59d3000	 ldr         r3, [sp]
  06524	e2833e27	 add         r3, r3, #0x27, 28
  06528	e5931000	 ldr         r1, [r3]
  0652c	e59f0a0c	 ldr         r0, [pc, #0xA0C]
  06530	eb000000	 bl          NKDbgPrintfW
  06534	e3a03000	 mov         r3, #0
  06538	e58d316c	 str         r3, [sp, #0x16C]
  0653c		 |$LN178@PDD_Dump|
  0653c	e3a03001	 mov         r3, #1
  06540	e58d3170	 str         r3, [sp, #0x170]
  06544	ea000001	 b           |$LN180@PDD_Dump|
  06548		 |$LN179@PDD_Dump|
  06548	e3a03000	 mov         r3, #0
  0654c	e58d3170	 str         r3, [sp, #0x170]
  06550		 |$LN180@PDD_Dump|

; 2369 :             DEBUGMSG(ZONE_PDD, (L"\tCONTROL_DEVCONF       = 0x%08X\r\n", INREG32(&pConfRegs->ulCONTROL_DEVCONF)));

  06550	e59f3990	 ldr         r3, [pc, #0x990]
  06554	e5933440	 ldr         r3, [r3, #0x440]
  06558	e3130902	 tst         r3, #2, 18
  0655c	0a000015	 beq         |$LN183@PDD_Dump|
  06560	e59f3980	 ldr         r3, [pc, #0x980]
  06564	e5933440	 ldr         r3, [r3, #0x440]
  06568	e3130801	 tst         r3, #1, 16
  0656c	0a000007	 beq         |$LN181@PDD_Dump|
  06570	e59d3000	 ldr         r3, [sp]
  06574	e2833f9d	 add         r3, r3, #0x9D, 30
  06578	e5931000	 ldr         r1, [r3]
  0657c	e59f09b8	 ldr         r0, [pc, #0x9B8]
  06580	eb000000	 bl          CeLogMsg
  06584	e3a03001	 mov         r3, #1
  06588	e58d3174	 str         r3, [sp, #0x174]
  0658c	ea000006	 b           |$LN182@PDD_Dump|
  06590		 |$LN181@PDD_Dump|
  06590	e59d3000	 ldr         r3, [sp]
  06594	e2833f9d	 add         r3, r3, #0x9D, 30
  06598	e5931000	 ldr         r1, [r3]
  0659c	e59f0998	 ldr         r0, [pc, #0x998]
  065a0	eb000000	 bl          NKDbgPrintfW
  065a4	e3a03000	 mov         r3, #0
  065a8	e58d3174	 str         r3, [sp, #0x174]
  065ac		 |$LN182@PDD_Dump|
  065ac	e3a03001	 mov         r3, #1
  065b0	e58d3178	 str         r3, [sp, #0x178]
  065b4	ea000001	 b           |$LN184@PDD_Dump|
  065b8		 |$LN183@PDD_Dump|
  065b8	e3a03000	 mov         r3, #0
  065bc	e58d3178	 str         r3, [sp, #0x178]
  065c0		 |$LN184@PDD_Dump|

; 2370 :             DEBUGMSG(ZONE_PDD, (L"\tCONTROL_EMU_SUPPORT   = 0x%08X\r\n", INREG32(&pConfRegs->ulCONTROL_EMU_SUPPORT)));

  065c0	e59f3920	 ldr         r3, [pc, #0x920]
  065c4	e5933440	 ldr         r3, [r3, #0x440]
  065c8	e3130902	 tst         r3, #2, 18
  065cc	0a000015	 beq         |$LN187@PDD_Dump|
  065d0	e59f3910	 ldr         r3, [pc, #0x910]
  065d4	e5933440	 ldr         r3, [r3, #0x440]
  065d8	e3130801	 tst         r3, #1, 16
  065dc	0a000007	 beq         |$LN185@PDD_Dump|
  065e0	e59d3000	 ldr         r3, [sp]
  065e4	e2833fa3	 add         r3, r3, #0xA3, 30
  065e8	e5931000	 ldr         r1, [r3]
  065ec	e59f0944	 ldr         r0, [pc, #0x944]
  065f0	eb000000	 bl          CeLogMsg
  065f4	e3a03001	 mov         r3, #1
  065f8	e58d317c	 str         r3, [sp, #0x17C]
  065fc	ea000006	 b           |$LN186@PDD_Dump|
  06600		 |$LN185@PDD_Dump|
  06600	e59d3000	 ldr         r3, [sp]
  06604	e2833fa3	 add         r3, r3, #0xA3, 30
  06608	e5931000	 ldr         r1, [r3]
  0660c	e59f0924	 ldr         r0, [pc, #0x924]
  06610	eb000000	 bl          NKDbgPrintfW
  06614	e3a03000	 mov         r3, #0
  06618	e58d317c	 str         r3, [sp, #0x17C]
  0661c		 |$LN186@PDD_Dump|
  0661c	e3a03001	 mov         r3, #1
  06620	e58d3180	 str         r3, [sp, #0x180]
  06624	ea000001	 b           |$LN188@PDD_Dump|
  06628		 |$LN187@PDD_Dump|
  06628	e3a03000	 mov         r3, #0
  0662c	e58d3180	 str         r3, [sp, #0x180]
  06630		 |$LN188@PDD_Dump|

; 2371 :             DEBUGMSG(ZONE_PDD, (L"\tCONTROL_MSUSPENDMUX_0 = 0x%08X\r\n", INREG32(&pConfRegs->ulCONTROL_MSUSPENDMUX_0)));

  06630	e59f38b0	 ldr         r3, [pc, #0x8B0]
  06634	e5933440	 ldr         r3, [r3, #0x440]
  06638	e3130902	 tst         r3, #2, 18
  0663c	0a000015	 beq         |$LN191@PDD_Dump|
  06640	e59f38a0	 ldr         r3, [pc, #0x8A0]
  06644	e5933440	 ldr         r3, [r3, #0x440]
  06648	e3130801	 tst         r3, #1, 16
  0664c	0a000007	 beq         |$LN189@PDD_Dump|
  06650	e59d3000	 ldr         r3, [sp]
  06654	e2833e29	 add         r3, r3, #0x29, 28
  06658	e5931000	 ldr         r1, [r3]
  0665c	e59f08d0	 ldr         r0, [pc, #0x8D0]
  06660	eb000000	 bl          CeLogMsg
  06664	e3a03001	 mov         r3, #1
  06668	e58d3184	 str         r3, [sp, #0x184]
  0666c	ea000006	 b           |$LN190@PDD_Dump|
  06670		 |$LN189@PDD_Dump|
  06670	e59d3000	 ldr         r3, [sp]
  06674	e2833e29	 add         r3, r3, #0x29, 28
  06678	e5931000	 ldr         r1, [r3]
  0667c	e59f08b0	 ldr         r0, [pc, #0x8B0]
  06680	eb000000	 bl          NKDbgPrintfW
  06684	e3a03000	 mov         r3, #0
  06688	e58d3184	 str         r3, [sp, #0x184]
  0668c		 |$LN190@PDD_Dump|
  0668c	e3a03001	 mov         r3, #1
  06690	e58d3188	 str         r3, [sp, #0x188]
  06694	ea000001	 b           |$LN192@PDD_Dump|
  06698		 |$LN191@PDD_Dump|
  06698	e3a03000	 mov         r3, #0
  0669c	e58d3188	 str         r3, [sp, #0x188]
  066a0		 |$LN192@PDD_Dump|

; 2372 :             DEBUGMSG(ZONE_PDD, (L"\tCONTROL_MSUSPENDMUX_1 = 0x%08X\r\n", INREG32(&pConfRegs->ulCONTROL_MSUSPENDMUX_1)));

  066a0	e59f3840	 ldr         r3, [pc, #0x840]
  066a4	e5933440	 ldr         r3, [r3, #0x440]
  066a8	e3130902	 tst         r3, #2, 18
  066ac	0a000015	 beq         |$LN195@PDD_Dump|
  066b0	e59f3830	 ldr         r3, [pc, #0x830]
  066b4	e5933440	 ldr         r3, [r3, #0x440]
  066b8	e3130801	 tst         r3, #1, 16
  066bc	0a000007	 beq         |$LN193@PDD_Dump|
  066c0	e59d3000	 ldr         r3, [sp]
  066c4	e2833fa5	 add         r3, r3, #0xA5, 30
  066c8	e5931000	 ldr         r1, [r3]
  066cc	e59f085c	 ldr         r0, [pc, #0x85C]
  066d0	eb000000	 bl          CeLogMsg
  066d4	e3a03001	 mov         r3, #1
  066d8	e58d318c	 str         r3, [sp, #0x18C]
  066dc	ea000006	 b           |$LN194@PDD_Dump|
  066e0		 |$LN193@PDD_Dump|
  066e0	e59d3000	 ldr         r3, [sp]
  066e4	e2833fa5	 add         r3, r3, #0xA5, 30
  066e8	e5931000	 ldr         r1, [r3]
  066ec	e59f083c	 ldr         r0, [pc, #0x83C]
  066f0	eb000000	 bl          NKDbgPrintfW
  066f4	e3a03000	 mov         r3, #0
  066f8	e58d318c	 str         r3, [sp, #0x18C]
  066fc		 |$LN194@PDD_Dump|
  066fc	e3a03001	 mov         r3, #1
  06700	e58d3190	 str         r3, [sp, #0x190]
  06704	ea000001	 b           |$LN196@PDD_Dump|
  06708		 |$LN195@PDD_Dump|
  06708	e3a03000	 mov         r3, #0
  0670c	e58d3190	 str         r3, [sp, #0x190]
  06710		 |$LN196@PDD_Dump|

; 2373 :             DEBUGMSG(ZONE_PDD, (L"\tCONTROL_MSUSPENDMUX_2 = 0x%08X\r\n", INREG32(&pConfRegs->ulCONTROL_MSUSPENDMUX_2)));

  06710	e59f37d0	 ldr         r3, [pc, #0x7D0]
  06714	e5933440	 ldr         r3, [r3, #0x440]
  06718	e3130902	 tst         r3, #2, 18
  0671c	0a000015	 beq         |$LN199@PDD_Dump|
  06720	e59f37c0	 ldr         r3, [pc, #0x7C0]
  06724	e5933440	 ldr         r3, [r3, #0x440]
  06728	e3130801	 tst         r3, #1, 16
  0672c	0a000007	 beq         |$LN197@PDD_Dump|
  06730	e59d3000	 ldr         r3, [sp]
  06734	e2833fa6	 add         r3, r3, #0xA6, 30
  06738	e5931000	 ldr         r1, [r3]
  0673c	e59f07e8	 ldr         r0, [pc, #0x7E8]
  06740	eb000000	 bl          CeLogMsg
  06744	e3a03001	 mov         r3, #1
  06748	e58d3194	 str         r3, [sp, #0x194]
  0674c	ea000006	 b           |$LN198@PDD_Dump|
  06750		 |$LN197@PDD_Dump|
  06750	e59d3000	 ldr         r3, [sp]
  06754	e2833fa6	 add         r3, r3, #0xA6, 30
  06758	e5931000	 ldr         r1, [r3]
  0675c	e59f07c8	 ldr         r0, [pc, #0x7C8]
  06760	eb000000	 bl          NKDbgPrintfW
  06764	e3a03000	 mov         r3, #0
  06768	e58d3194	 str         r3, [sp, #0x194]
  0676c		 |$LN198@PDD_Dump|
  0676c	e3a03001	 mov         r3, #1
  06770	e58d3198	 str         r3, [sp, #0x198]
  06774	ea000001	 b           |$LN200@PDD_Dump|
  06778		 |$LN199@PDD_Dump|
  06778	e3a03000	 mov         r3, #0
  0677c	e58d3198	 str         r3, [sp, #0x198]
  06780		 |$LN200@PDD_Dump|

; 2374 :             DEBUGMSG(ZONE_PDD, (L"\tCONTROL_MSUSPENDMUX_3 = 0x%08X\r\n", INREG32(&pConfRegs->ulCONTROL_MSUSPENDMUX_3)));

  06780	e59f3760	 ldr         r3, [pc, #0x760]
  06784	e5933440	 ldr         r3, [r3, #0x440]
  06788	e3130902	 tst         r3, #2, 18
  0678c	0a000015	 beq         |$LN203@PDD_Dump|
  06790	e59f3750	 ldr         r3, [pc, #0x750]
  06794	e5933440	 ldr         r3, [r3, #0x440]
  06798	e3130801	 tst         r3, #1, 16
  0679c	0a000007	 beq         |$LN201@PDD_Dump|
  067a0	e59d3000	 ldr         r3, [sp]
  067a4	e2833fa7	 add         r3, r3, #0xA7, 30
  067a8	e5931000	 ldr         r1, [r3]
  067ac	e59f0774	 ldr         r0, [pc, #0x774]
  067b0	eb000000	 bl          CeLogMsg
  067b4	e3a03001	 mov         r3, #1
  067b8	e58d319c	 str         r3, [sp, #0x19C]
  067bc	ea000006	 b           |$LN202@PDD_Dump|
  067c0		 |$LN201@PDD_Dump|
  067c0	e59d3000	 ldr         r3, [sp]
  067c4	e2833fa7	 add         r3, r3, #0xA7, 30
  067c8	e5931000	 ldr         r1, [r3]
  067cc	e59f0754	 ldr         r0, [pc, #0x754]
  067d0	eb000000	 bl          NKDbgPrintfW
  067d4	e3a03000	 mov         r3, #0
  067d8	e58d319c	 str         r3, [sp, #0x19C]
  067dc		 |$LN202@PDD_Dump|
  067dc	e3a03001	 mov         r3, #1
  067e0	e58d31a0	 str         r3, [sp, #0x1A0]
  067e4	ea000001	 b           |$LN204@PDD_Dump|
  067e8		 |$LN203@PDD_Dump|
  067e8	e3a03000	 mov         r3, #0
  067ec	e58d31a0	 str         r3, [sp, #0x1A0]
  067f0		 |$LN204@PDD_Dump|

; 2375 :             DEBUGMSG(ZONE_PDD, (L"\tCONTROL_MSUSPENDMUX_4 = 0x%08X\r\n", INREG32(&pConfRegs->ulCONTROL_MSUSPENDMUX_4)));

  067f0	e59f36f0	 ldr         r3, [pc, #0x6F0]
  067f4	e5933440	 ldr         r3, [r3, #0x440]
  067f8	e3130902	 tst         r3, #2, 18
  067fc	0a000015	 beq         |$LN207@PDD_Dump|
  06800	e59f36e0	 ldr         r3, [pc, #0x6E0]
  06804	e5933440	 ldr         r3, [r3, #0x440]
  06808	e3130801	 tst         r3, #1, 16
  0680c	0a000007	 beq         |$LN205@PDD_Dump|
  06810	e59d3000	 ldr         r3, [sp]
  06814	e2833e2a	 add         r3, r3, #0x2A, 28
  06818	e5931000	 ldr         r1, [r3]
  0681c	e59f0700	 ldr         r0, [pc, #0x700]
  06820	eb000000	 bl          CeLogMsg
  06824	e3a03001	 mov         r3, #1
  06828	e58d31a4	 str         r3, [sp, #0x1A4]
  0682c	ea000006	 b           |$LN206@PDD_Dump|
  06830		 |$LN205@PDD_Dump|
  06830	e59d3000	 ldr         r3, [sp]
  06834	e2833e2a	 add         r3, r3, #0x2A, 28
  06838	e5931000	 ldr         r1, [r3]
  0683c	e59f06e0	 ldr         r0, [pc, #0x6E0]
  06840	eb000000	 bl          NKDbgPrintfW
  06844	e3a03000	 mov         r3, #0
  06848	e58d31a4	 str         r3, [sp, #0x1A4]
  0684c		 |$LN206@PDD_Dump|
  0684c	e3a03001	 mov         r3, #1
  06850	e58d31a8	 str         r3, [sp, #0x1A8]
  06854	ea000001	 b           |$LN208@PDD_Dump|
  06858		 |$LN207@PDD_Dump|
  06858	e3a03000	 mov         r3, #0
  0685c	e58d31a8	 str         r3, [sp, #0x1A8]
  06860		 |$LN208@PDD_Dump|

; 2376 :             DEBUGMSG(ZONE_PDD, (L"\tCONTROL_MSUSPENDMUX_5 = 0x%08X\r\n", INREG32(&pConfRegs->ulCONTROL_MSUSPENDMUX_5)));

  06860	e59f3680	 ldr         r3, [pc, #0x680]
  06864	e5933440	 ldr         r3, [r3, #0x440]
  06868	e3130902	 tst         r3, #2, 18
  0686c	0a000015	 beq         |$LN211@PDD_Dump|
  06870	e59f3670	 ldr         r3, [pc, #0x670]
  06874	e5933440	 ldr         r3, [r3, #0x440]
  06878	e3130801	 tst         r3, #1, 16
  0687c	0a000007	 beq         |$LN209@PDD_Dump|
  06880	e59d3000	 ldr         r3, [sp]
  06884	e2833fa9	 add         r3, r3, #0xA9, 30
  06888	e5931000	 ldr         r1, [r3]
  0688c	e59f068c	 ldr         r0, [pc, #0x68C]
  06890	eb000000	 bl          CeLogMsg
  06894	e3a03001	 mov         r3, #1
  06898	e58d31ac	 str         r3, [sp, #0x1AC]
  0689c	ea000006	 b           |$LN210@PDD_Dump|
  068a0		 |$LN209@PDD_Dump|
  068a0	e59d3000	 ldr         r3, [sp]
  068a4	e2833fa9	 add         r3, r3, #0xA9, 30
  068a8	e5931000	 ldr         r1, [r3]
  068ac	e59f066c	 ldr         r0, [pc, #0x66C]
  068b0	eb000000	 bl          NKDbgPrintfW
  068b4	e3a03000	 mov         r3, #0
  068b8	e58d31ac	 str         r3, [sp, #0x1AC]
  068bc		 |$LN210@PDD_Dump|
  068bc	e3a03001	 mov         r3, #1
  068c0	e58d31b0	 str         r3, [sp, #0x1B0]
  068c4	ea000001	 b           |$LN212@PDD_Dump|
  068c8		 |$LN211@PDD_Dump|
  068c8	e3a03000	 mov         r3, #0
  068cc	e58d31b0	 str         r3, [sp, #0x1B0]
  068d0		 |$LN212@PDD_Dump|

; 2377 :             DEBUGMSG(ZONE_PDD, (L"\r\n"));

  068d0	e59f3610	 ldr         r3, [pc, #0x610]
  068d4	e5933440	 ldr         r3, [r3, #0x440]
  068d8	e3130902	 tst         r3, #2, 18
  068dc	0a00000f	 beq         |$LN215@PDD_Dump|
  068e0	e59f3600	 ldr         r3, [pc, #0x600]
  068e4	e5933440	 ldr         r3, [r3, #0x440]
  068e8	e3130801	 tst         r3, #1, 16
  068ec	0a000004	 beq         |$LN213@PDD_Dump|
  068f0	e59f05f4	 ldr         r0, [pc, #0x5F4]
  068f4	eb000000	 bl          CeLogMsg
  068f8	e3a03001	 mov         r3, #1
  068fc	e58d31b4	 str         r3, [sp, #0x1B4]
  06900	ea000003	 b           |$LN214@PDD_Dump|
  06904		 |$LN213@PDD_Dump|
  06904	e59f05e0	 ldr         r0, [pc, #0x5E0]
  06908	eb000000	 bl          NKDbgPrintfW
  0690c	e3a03000	 mov         r3, #0
  06910	e58d31b4	 str         r3, [sp, #0x1B4]
  06914		 |$LN214@PDD_Dump|
  06914	e3a03001	 mov         r3, #1
  06918	e58d31b8	 str         r3, [sp, #0x1B8]
  0691c	ea000001	 b           |$LN216@PDD_Dump|
  06920		 |$LN215@PDD_Dump|
  06920	e3a03000	 mov         r3, #0
  06924	e58d31b8	 str         r3, [sp, #0x1B8]
  06928		 |$LN216@PDD_Dump|

; 2378 : 
; 2379 :             // Unmap System Control Registers
; 2380 :             MmUnmapIoSpace((VOID*)pConfRegs, sizeof(OMAP2420_SYSC1_REGS));

  06928	e3a01fd6	 mov         r1, #0xD6, 30
  0692c	e59d0000	 ldr         r0, [sp]
  06930	eb000000	 bl          MmUnmapIoSpace

; 2381 :             pConfRegs = NULL;

  06934	e3a03000	 mov         r3, #0
  06938	e58d3000	 str         r3, [sp]
  0693c		 |$LN3@PDD_Dump|

; 2382 :         }
; 2383 :     }
; 2384 : #endif // SHOW_CONFIG_REGISTERS
; 2385 : #ifdef SHOW_OTG_REGISTERS
; 2386 :     {
; 2387 :         PHYSICAL_ADDRESS pa;
; 2388 :         OMAP2420_OTG_REGS * pOtgRegs;
; 2389 : 
; 2390 :         pa.QuadPart = OMAP2420_OTG_REGS_PA;

  0693c	e59f35d8	 ldr         r3, [pc, #0x5D8]
  06940	e58d300c	 str         r3, [sp, #0xC]
  06944	e3a03000	 mov         r3, #0
  06948	e58d3010	 str         r3, [sp, #0x10]

; 2391 :         pOtgRegs    = (OMAP2420_OTG_REGS*)MmMapIoSpace(pa, sizeof(OMAP2420_OTG_REGS), FALSE);

  0694c	e3a03000	 mov         r3, #0
  06950	e3a02c01	 mov         r2, #1, 24
  06954	e59d000c	 ldr         r0, [sp, #0xC]
  06958	e59d1010	 ldr         r1, [sp, #0x10]
  0695c	eb000000	 bl          MmMapIoSpace
  06960	e58d01bc	 str         r0, [sp, #0x1BC]
  06964	e59d31bc	 ldr         r3, [sp, #0x1BC]
  06968	e58d3014	 str         r3, [sp, #0x14]

; 2392 : 
; 2393 :         if (pOtgRegs == NULL)

  0696c	e59d3014	 ldr         r3, [sp, #0x14]
  06970	e3530000	 cmp         r3, #0
  06974	1a000016	 bne         |$LN2@PDD_Dump|

; 2394 :         {
; 2395 :             DEBUGMSG(ZONE_PDD, (L"USBD PDD_Dump() - ERROR: Unable to map memory for USB OTG Registers\r\n"));

  06978	e59f3568	 ldr         r3, [pc, #0x568]
  0697c	e5933440	 ldr         r3, [r3, #0x440]
  06980	e3130902	 tst         r3, #2, 18
  06984	0a00000f	 beq         |$LN219@PDD_Dump|
  06988	e59f3558	 ldr         r3, [pc, #0x558]
  0698c	e5933440	 ldr         r3, [r3, #0x440]
  06990	e3130801	 tst         r3, #1, 16
  06994	0a000004	 beq         |$LN217@PDD_Dump|
  06998	e59f0578	 ldr         r0, [pc, #0x578]
  0699c	eb000000	 bl          CeLogMsg
  069a0	e3a03001	 mov         r3, #1
  069a4	e58d31c0	 str         r3, [sp, #0x1C0]
  069a8	ea000003	 b           |$LN218@PDD_Dump|
  069ac		 |$LN217@PDD_Dump|
  069ac	e59f0564	 ldr         r0, [pc, #0x564]
  069b0	eb000000	 bl          NKDbgPrintfW
  069b4	e3a03000	 mov         r3, #0
  069b8	e58d31c0	 str         r3, [sp, #0x1C0]
  069bc		 |$LN218@PDD_Dump|
  069bc	e3a03001	 mov         r3, #1
  069c0	e58d31c4	 str         r3, [sp, #0x1C4]
  069c4	ea000001	 b           |$LN220@PDD_Dump|
  069c8		 |$LN219@PDD_Dump|
  069c8	e3a03000	 mov         r3, #0
  069cc	e58d31c4	 str         r3, [sp, #0x1C4]
  069d0		 |$LN220@PDD_Dump|

; 2396 :         }
; 2397 :         else

  069d0	ea00012a	 b           |$LN1@PDD_Dump|
  069d4		 |$LN2@PDD_Dump|

; 2398 :         {
; 2399 :             DEBUGMSG(ZONE_PDD, (L"Dump USB OTG registers\r\n"));

  069d4	e59f350c	 ldr         r3, [pc, #0x50C]
  069d8	e5933440	 ldr         r3, [r3, #0x440]
  069dc	e3130902	 tst         r3, #2, 18
  069e0	0a00000f	 beq         |$LN223@PDD_Dump|
  069e4	e59f34fc	 ldr         r3, [pc, #0x4FC]
  069e8	e5933440	 ldr         r3, [r3, #0x440]
  069ec	e3130801	 tst         r3, #1, 16
  069f0	0a000004	 beq         |$LN221@PDD_Dump|
  069f4	e59f0518	 ldr         r0, [pc, #0x518]
  069f8	eb000000	 bl          CeLogMsg
  069fc	e3a03001	 mov         r3, #1
  06a00	e58d31c8	 str         r3, [sp, #0x1C8]
  06a04	ea000003	 b           |$LN222@PDD_Dump|
  06a08		 |$LN221@PDD_Dump|
  06a08	e59f0504	 ldr         r0, [pc, #0x504]
  06a0c	eb000000	 bl          NKDbgPrintfW
  06a10	e3a03000	 mov         r3, #0
  06a14	e58d31c8	 str         r3, [sp, #0x1C8]
  06a18		 |$LN222@PDD_Dump|
  06a18	e3a03001	 mov         r3, #1
  06a1c	e58d31cc	 str         r3, [sp, #0x1CC]
  06a20	ea000001	 b           |$LN224@PDD_Dump|
  06a24		 |$LN223@PDD_Dump|
  06a24	e3a03000	 mov         r3, #0
  06a28	e58d31cc	 str         r3, [sp, #0x1CC]
  06a2c		 |$LN224@PDD_Dump|

; 2400 :             DEBUGMSG(ZONE_PDD, (L"\tREV      = 0x%08X\r\n", INREG32(&pOtgRegs->REV)));

  06a2c	e59f34b4	 ldr         r3, [pc, #0x4B4]
  06a30	e5933440	 ldr         r3, [r3, #0x440]
  06a34	e3130902	 tst         r3, #2, 18
  06a38	0a000013	 beq         |$LN227@PDD_Dump|
  06a3c	e59f34a4	 ldr         r3, [pc, #0x4A4]
  06a40	e5933440	 ldr         r3, [r3, #0x440]
  06a44	e3130801	 tst         r3, #1, 16
  06a48	0a000006	 beq         |$LN225@PDD_Dump|
  06a4c	e59d3014	 ldr         r3, [sp, #0x14]
  06a50	e5931000	 ldr         r1, [r3]
  06a54	e59f04b4	 ldr         r0, [pc, #0x4B4]
  06a58	eb000000	 bl          CeLogMsg
  06a5c	e3a03001	 mov         r3, #1
  06a60	e58d31d0	 str         r3, [sp, #0x1D0]
  06a64	ea000005	 b           |$LN226@PDD_Dump|
  06a68		 |$LN225@PDD_Dump|
  06a68	e59d3014	 ldr         r3, [sp, #0x14]
  06a6c	e5931000	 ldr         r1, [r3]
  06a70	e59f0498	 ldr         r0, [pc, #0x498]
  06a74	eb000000	 bl          NKDbgPrintfW
  06a78	e3a03000	 mov         r3, #0
  06a7c	e58d31d0	 str         r3, [sp, #0x1D0]
  06a80		 |$LN226@PDD_Dump|
  06a80	e3a03001	 mov         r3, #1
  06a84	e58d31d4	 str         r3, [sp, #0x1D4]
  06a88	ea000001	 b           |$LN228@PDD_Dump|
  06a8c		 |$LN227@PDD_Dump|
  06a8c	e3a03000	 mov         r3, #0
  06a90	e58d31d4	 str         r3, [sp, #0x1D4]
  06a94		 |$LN228@PDD_Dump|

; 2401 :             DEBUGMSG(ZONE_PDD, (L"\tSYSCON_1 = 0x%08X\r\n", INREG32(&pOtgRegs->SYSCON_1)));

  06a94	e59f344c	 ldr         r3, [pc, #0x44C]
  06a98	e5933440	 ldr         r3, [r3, #0x440]
  06a9c	e3130902	 tst         r3, #2, 18
  06aa0	0a000015	 beq         |$LN231@PDD_Dump|
  06aa4	e59f343c	 ldr         r3, [pc, #0x43C]
  06aa8	e5933440	 ldr         r3, [r3, #0x440]
  06aac	e3130801	 tst         r3, #1, 16
  06ab0	0a000007	 beq         |$LN229@PDD_Dump|
  06ab4	e59d3014	 ldr         r3, [sp, #0x14]
  06ab8	e2833004	 add         r3, r3, #4
  06abc	e5931000	 ldr         r1, [r3]
  06ac0	e59f0444	 ldr         r0, [pc, #0x444]
  06ac4	eb000000	 bl          CeLogMsg
  06ac8	e3a03001	 mov         r3, #1
  06acc	e58d31d8	 str         r3, [sp, #0x1D8]
  06ad0	ea000006	 b           |$LN230@PDD_Dump|
  06ad4		 |$LN229@PDD_Dump|
  06ad4	e59d3014	 ldr         r3, [sp, #0x14]
  06ad8	e2833004	 add         r3, r3, #4
  06adc	e5931000	 ldr         r1, [r3]
  06ae0	e59f0424	 ldr         r0, [pc, #0x424]
  06ae4	eb000000	 bl          NKDbgPrintfW
  06ae8	e3a03000	 mov         r3, #0
  06aec	e58d31d8	 str         r3, [sp, #0x1D8]
  06af0		 |$LN230@PDD_Dump|
  06af0	e3a03001	 mov         r3, #1
  06af4	e58d31dc	 str         r3, [sp, #0x1DC]
  06af8	ea000001	 b           |$LN232@PDD_Dump|
  06afc		 |$LN231@PDD_Dump|
  06afc	e3a03000	 mov         r3, #0
  06b00	e58d31dc	 str         r3, [sp, #0x1DC]
  06b04		 |$LN232@PDD_Dump|

; 2402 :             DEBUGMSG(ZONE_PDD, (L"\tSYSCON_2 = 0x%08X\r\n", INREG32(&pOtgRegs->SYSCON_2)));

  06b04	e59f33dc	 ldr         r3, [pc, #0x3DC]
  06b08	e5933440	 ldr         r3, [r3, #0x440]
  06b0c	e3130902	 tst         r3, #2, 18
  06b10	0a000015	 beq         |$LN235@PDD_Dump|
  06b14	e59f33cc	 ldr         r3, [pc, #0x3CC]
  06b18	e5933440	 ldr         r3, [r3, #0x440]
  06b1c	e3130801	 tst         r3, #1, 16
  06b20	0a000007	 beq         |$LN233@PDD_Dump|
  06b24	e59d3014	 ldr         r3, [sp, #0x14]
  06b28	e2833008	 add         r3, r3, #8
  06b2c	e5931000	 ldr         r1, [r3]
  06b30	e59f03d0	 ldr         r0, [pc, #0x3D0]
  06b34	eb000000	 bl          CeLogMsg
  06b38	e3a03001	 mov         r3, #1
  06b3c	e58d31e0	 str         r3, [sp, #0x1E0]
  06b40	ea000006	 b           |$LN234@PDD_Dump|
  06b44		 |$LN233@PDD_Dump|
  06b44	e59d3014	 ldr         r3, [sp, #0x14]
  06b48	e2833008	 add         r3, r3, #8
  06b4c	e5931000	 ldr         r1, [r3]
  06b50	e59f03b0	 ldr         r0, [pc, #0x3B0]
  06b54	eb000000	 bl          NKDbgPrintfW
  06b58	e3a03000	 mov         r3, #0
  06b5c	e58d31e0	 str         r3, [sp, #0x1E0]
  06b60		 |$LN234@PDD_Dump|
  06b60	e3a03001	 mov         r3, #1
  06b64	e58d31e4	 str         r3, [sp, #0x1E4]
  06b68	ea000001	 b           |$LN236@PDD_Dump|
  06b6c		 |$LN235@PDD_Dump|
  06b6c	e3a03000	 mov         r3, #0
  06b70	e58d31e4	 str         r3, [sp, #0x1E4]
  06b74		 |$LN236@PDD_Dump|

; 2403 :             DEBUGMSG(ZONE_PDD, (L"\tCTRL     = 0x%08X\r\n", INREG32(&pOtgRegs->CTRL)));

  06b74	e59f336c	 ldr         r3, [pc, #0x36C]
  06b78	e5933440	 ldr         r3, [r3, #0x440]
  06b7c	e3130902	 tst         r3, #2, 18
  06b80	0a000015	 beq         |$LN239@PDD_Dump|
  06b84	e59f335c	 ldr         r3, [pc, #0x35C]
  06b88	e5933440	 ldr         r3, [r3, #0x440]
  06b8c	e3130801	 tst         r3, #1, 16
  06b90	0a000007	 beq         |$LN237@PDD_Dump|
  06b94	e59d3014	 ldr         r3, [sp, #0x14]
  06b98	e283300c	 add         r3, r3, #0xC
  06b9c	e5931000	 ldr         r1, [r3]
  06ba0	e59f035c	 ldr         r0, [pc, #0x35C]
  06ba4	eb000000	 bl          CeLogMsg
  06ba8	e3a03001	 mov         r3, #1
  06bac	e58d31e8	 str         r3, [sp, #0x1E8]
  06bb0	ea000006	 b           |$LN238@PDD_Dump|
  06bb4		 |$LN237@PDD_Dump|
  06bb4	e59d3014	 ldr         r3, [sp, #0x14]
  06bb8	e283300c	 add         r3, r3, #0xC
  06bbc	e5931000	 ldr         r1, [r3]
  06bc0	e59f033c	 ldr         r0, [pc, #0x33C]
  06bc4	eb000000	 bl          NKDbgPrintfW
  06bc8	e3a03000	 mov         r3, #0
  06bcc	e58d31e8	 str         r3, [sp, #0x1E8]
  06bd0		 |$LN238@PDD_Dump|
  06bd0	e3a03001	 mov         r3, #1
  06bd4	e58d31ec	 str         r3, [sp, #0x1EC]
  06bd8	ea000001	 b           |$LN240@PDD_Dump|
  06bdc		 |$LN239@PDD_Dump|
  06bdc	e3a03000	 mov         r3, #0
  06be0	e58d31ec	 str         r3, [sp, #0x1EC]
  06be4		 |$LN240@PDD_Dump|

; 2404 :             DEBUGMSG(ZONE_PDD, (L"\tIRQ_EN   = 0x%04X\r\n", INREG32(&pOtgRegs->IRQ_EN)));

  06be4	e59f32fc	 ldr         r3, [pc, #0x2FC]
  06be8	e5933440	 ldr         r3, [r3, #0x440]
  06bec	e3130902	 tst         r3, #2, 18
  06bf0	0a000015	 beq         |$LN243@PDD_Dump|
  06bf4	e59f32ec	 ldr         r3, [pc, #0x2EC]
  06bf8	e5933440	 ldr         r3, [r3, #0x440]
  06bfc	e3130801	 tst         r3, #1, 16
  06c00	0a000007	 beq         |$LN241@PDD_Dump|
  06c04	e59d3014	 ldr         r3, [sp, #0x14]
  06c08	e2833010	 add         r3, r3, #0x10
  06c0c	e5931000	 ldr         r1, [r3]
  06c10	e59f02e8	 ldr         r0, [pc, #0x2E8]
  06c14	eb000000	 bl          CeLogMsg
  06c18	e3a03001	 mov         r3, #1
  06c1c	e58d31f0	 str         r3, [sp, #0x1F0]
  06c20	ea000006	 b           |$LN242@PDD_Dump|
  06c24		 |$LN241@PDD_Dump|
  06c24	e59d3014	 ldr         r3, [sp, #0x14]
  06c28	e2833010	 add         r3, r3, #0x10
  06c2c	e5931000	 ldr         r1, [r3]
  06c30	e59f02c8	 ldr         r0, [pc, #0x2C8]
  06c34	eb000000	 bl          NKDbgPrintfW
  06c38	e3a03000	 mov         r3, #0
  06c3c	e58d31f0	 str         r3, [sp, #0x1F0]
  06c40		 |$LN242@PDD_Dump|
  06c40	e3a03001	 mov         r3, #1
  06c44	e58d31f4	 str         r3, [sp, #0x1F4]
  06c48	ea000001	 b           |$LN244@PDD_Dump|
  06c4c		 |$LN243@PDD_Dump|
  06c4c	e3a03000	 mov         r3, #0
  06c50	e58d31f4	 str         r3, [sp, #0x1F4]
  06c54		 |$LN244@PDD_Dump|

; 2405 :             DEBUGMSG(ZONE_PDD, (L"\tIRQ_SRC  = 0x%04X\r\n", INREG32(&pOtgRegs->IRQ_SRC)));

  06c54	e59f328c	 ldr         r3, [pc, #0x28C]
  06c58	e5933440	 ldr         r3, [r3, #0x440]
  06c5c	e3130902	 tst         r3, #2, 18
  06c60	0a000015	 beq         |$LN247@PDD_Dump|
  06c64	e59f327c	 ldr         r3, [pc, #0x27C]
  06c68	e5933440	 ldr         r3, [r3, #0x440]
  06c6c	e3130801	 tst         r3, #1, 16
  06c70	0a000007	 beq         |$LN245@PDD_Dump|
  06c74	e59d3014	 ldr         r3, [sp, #0x14]
  06c78	e2833014	 add         r3, r3, #0x14
  06c7c	e5931000	 ldr         r1, [r3]
  06c80	e59f0274	 ldr         r0, [pc, #0x274]
  06c84	eb000000	 bl          CeLogMsg
  06c88	e3a03001	 mov         r3, #1
  06c8c	e58d31f8	 str         r3, [sp, #0x1F8]
  06c90	ea000006	 b           |$LN246@PDD_Dump|
  06c94		 |$LN245@PDD_Dump|
  06c94	e59d3014	 ldr         r3, [sp, #0x14]
  06c98	e2833014	 add         r3, r3, #0x14
  06c9c	e5931000	 ldr         r1, [r3]
  06ca0	e59f0254	 ldr         r0, [pc, #0x254]
  06ca4	eb000000	 bl          NKDbgPrintfW
  06ca8	e3a03000	 mov         r3, #0
  06cac	e58d31f8	 str         r3, [sp, #0x1F8]
  06cb0		 |$LN246@PDD_Dump|
  06cb0	e3a03001	 mov         r3, #1
  06cb4	e58d31fc	 str         r3, [sp, #0x1FC]
  06cb8	ea000001	 b           |$LN248@PDD_Dump|
  06cbc		 |$LN247@PDD_Dump|
  06cbc	e3a03000	 mov         r3, #0
  06cc0	e58d31fc	 str         r3, [sp, #0x1FC]
  06cc4		 |$LN248@PDD_Dump|

; 2406 :             DEBUGMSG(ZONE_PDD, (L"\tOUTCTRL  = 0x%04X\r\n", INREG32(&pOtgRegs->OUTCTRL)));

  06cc4	e59f321c	 ldr         r3, [pc, #0x21C]
  06cc8	e5933440	 ldr         r3, [r3, #0x440]
  06ccc	e3130902	 tst         r3, #2, 18
  06cd0	0a000015	 beq         |$LN251@PDD_Dump|
  06cd4	e59f320c	 ldr         r3, [pc, #0x20C]
  06cd8	e5933440	 ldr         r3, [r3, #0x440]
  06cdc	e3130801	 tst         r3, #1, 16
  06ce0	0a000007	 beq         |$LN249@PDD_Dump|
  06ce4	e59d3014	 ldr         r3, [sp, #0x14]
  06ce8	e2833018	 add         r3, r3, #0x18
  06cec	e5931000	 ldr         r1, [r3]
  06cf0	e59f0200	 ldr         r0, [pc, #0x200]
  06cf4	eb000000	 bl          CeLogMsg
  06cf8	e3a03001	 mov         r3, #1
  06cfc	e58d3200	 str         r3, [sp, #0x200]
  06d00	ea000006	 b           |$LN250@PDD_Dump|
  06d04		 |$LN249@PDD_Dump|
  06d04	e59d3014	 ldr         r3, [sp, #0x14]
  06d08	e2833018	 add         r3, r3, #0x18
  06d0c	e5931000	 ldr         r1, [r3]
  06d10	e59f01e0	 ldr         r0, [pc, #0x1E0]
  06d14	eb000000	 bl          NKDbgPrintfW
  06d18	e3a03000	 mov         r3, #0
  06d1c	e58d3200	 str         r3, [sp, #0x200]
  06d20		 |$LN250@PDD_Dump|
  06d20	e3a03001	 mov         r3, #1
  06d24	e58d3204	 str         r3, [sp, #0x204]
  06d28	ea000001	 b           |$LN252@PDD_Dump|
  06d2c		 |$LN251@PDD_Dump|
  06d2c	e3a03000	 mov         r3, #0
  06d30	e58d3204	 str         r3, [sp, #0x204]
  06d34		 |$LN252@PDD_Dump|

; 2407 :             DEBUGMSG(ZONE_PDD, (L"\tTEST     = 0x%04X\r\n", INREG32(&pOtgRegs->TEST)));

  06d34	e59f31ac	 ldr         r3, [pc, #0x1AC]
  06d38	e5933440	 ldr         r3, [r3, #0x440]
  06d3c	e3130902	 tst         r3, #2, 18
  06d40	0a000015	 beq         |$LN255@PDD_Dump|
  06d44	e59f319c	 ldr         r3, [pc, #0x19C]
  06d48	e5933440	 ldr         r3, [r3, #0x440]
  06d4c	e3130801	 tst         r3, #1, 16
  06d50	0a000007	 beq         |$LN253@PDD_Dump|
  06d54	e59d3014	 ldr         r3, [sp, #0x14]
  06d58	e2833020	 add         r3, r3, #0x20
  06d5c	e5931000	 ldr         r1, [r3]
  06d60	e59f018c	 ldr         r0, [pc, #0x18C]
  06d64	eb000000	 bl          CeLogMsg
  06d68	e3a03001	 mov         r3, #1
  06d6c	e58d3208	 str         r3, [sp, #0x208]
  06d70	ea000006	 b           |$LN254@PDD_Dump|
  06d74		 |$LN253@PDD_Dump|
  06d74	e59d3014	 ldr         r3, [sp, #0x14]
  06d78	e2833020	 add         r3, r3, #0x20
  06d7c	e5931000	 ldr         r1, [r3]
  06d80	e59f016c	 ldr         r0, [pc, #0x16C]
  06d84	eb000000	 bl          NKDbgPrintfW
  06d88	e3a03000	 mov         r3, #0
  06d8c	e58d3208	 str         r3, [sp, #0x208]
  06d90		 |$LN254@PDD_Dump|
  06d90	e3a03001	 mov         r3, #1
  06d94	e58d320c	 str         r3, [sp, #0x20C]
  06d98	ea000001	 b           |$LN256@PDD_Dump|
  06d9c		 |$LN255@PDD_Dump|
  06d9c	e3a03000	 mov         r3, #0
  06da0	e58d320c	 str         r3, [sp, #0x20C]
  06da4		 |$LN256@PDD_Dump|

; 2408 :             DEBUGMSG(ZONE_PDD, (L"\tVC       = 0x%08X\r\n", INREG32(&pOtgRegs->VC)));

  06da4	e59f313c	 ldr         r3, [pc, #0x13C]
  06da8	e5933440	 ldr         r3, [r3, #0x440]
  06dac	e3130902	 tst         r3, #2, 18
  06db0	0a000015	 beq         |$LN259@PDD_Dump|
  06db4	e59f312c	 ldr         r3, [pc, #0x12C]
  06db8	e5933440	 ldr         r3, [r3, #0x440]
  06dbc	e3130801	 tst         r3, #1, 16
  06dc0	0a000007	 beq         |$LN257@PDD_Dump|
  06dc4	e59d3014	 ldr         r3, [sp, #0x14]
  06dc8	e28330fc	 add         r3, r3, #0xFC
  06dcc	e5931000	 ldr         r1, [r3]
  06dd0	e59f0118	 ldr         r0, [pc, #0x118]
  06dd4	eb000000	 bl          CeLogMsg
  06dd8	e3a03001	 mov         r3, #1
  06ddc	e58d3210	 str         r3, [sp, #0x210]
  06de0	ea000006	 b           |$LN258@PDD_Dump|
  06de4		 |$LN257@PDD_Dump|
  06de4	e59d3014	 ldr         r3, [sp, #0x14]
  06de8	e28330fc	 add         r3, r3, #0xFC
  06dec	e5931000	 ldr         r1, [r3]
  06df0	e59f00f8	 ldr         r0, [pc, #0xF8]
  06df4	eb000000	 bl          NKDbgPrintfW
  06df8	e3a03000	 mov         r3, #0
  06dfc	e58d3210	 str         r3, [sp, #0x210]
  06e00		 |$LN258@PDD_Dump|
  06e00	e3a03001	 mov         r3, #1
  06e04	e58d3214	 str         r3, [sp, #0x214]
  06e08	ea000001	 b           |$LN260@PDD_Dump|
  06e0c		 |$LN259@PDD_Dump|
  06e0c	e3a03000	 mov         r3, #0
  06e10	e58d3214	 str         r3, [sp, #0x214]
  06e14		 |$LN260@PDD_Dump|

; 2409 :             DEBUGMSG(ZONE_PDD, (L"\r\n"));

  06e14	e59f30cc	 ldr         r3, [pc, #0xCC]
  06e18	e5933440	 ldr         r3, [r3, #0x440]
  06e1c	e3130902	 tst         r3, #2, 18
  06e20	0a00000f	 beq         |$LN263@PDD_Dump|
  06e24	e59f30bc	 ldr         r3, [pc, #0xBC]
  06e28	e5933440	 ldr         r3, [r3, #0x440]
  06e2c	e3130801	 tst         r3, #1, 16
  06e30	0a000004	 beq         |$LN261@PDD_Dump|
  06e34	e59f00b0	 ldr         r0, [pc, #0xB0]
  06e38	eb000000	 bl          CeLogMsg
  06e3c	e3a03001	 mov         r3, #1
  06e40	e58d3218	 str         r3, [sp, #0x218]
  06e44	ea000003	 b           |$LN262@PDD_Dump|
  06e48		 |$LN261@PDD_Dump|
  06e48	e59f009c	 ldr         r0, [pc, #0x9C]
  06e4c	eb000000	 bl          NKDbgPrintfW
  06e50	e3a03000	 mov         r3, #0
  06e54	e58d3218	 str         r3, [sp, #0x218]
  06e58		 |$LN262@PDD_Dump|
  06e58	e3a03001	 mov         r3, #1
  06e5c	e58d321c	 str         r3, [sp, #0x21C]
  06e60	ea000001	 b           |$LN264@PDD_Dump|
  06e64		 |$LN263@PDD_Dump|
  06e64	e3a03000	 mov         r3, #0
  06e68	e58d321c	 str         r3, [sp, #0x21C]
  06e6c		 |$LN264@PDD_Dump|

; 2410 : 
; 2411 :             // Unmap USB OTG Registers
; 2412 :             MmUnmapIoSpace((VOID*)pOtgRegs, sizeof(OMAP2420_OTG_REGS));

  06e6c	e3a01c01	 mov         r1, #1, 24
  06e70	e59d0014	 ldr         r0, [sp, #0x14]
  06e74	eb000000	 bl          MmUnmapIoSpace

; 2413 :             pOtgRegs = NULL;

  06e78	e3a03000	 mov         r3, #0
  06e7c	e58d3014	 str         r3, [sp, #0x14]
  06e80		 |$LN1@PDD_Dump|

; 2414 :         }
; 2415 :     }
; 2416 : #endif // SHOW_OTG_REGISTERS
; 2417 : #ifdef SHOW_INTC_MPU_REGISTERS
; 2418 :     {
; 2419 :         PHYSICAL_ADDRESS pa;
; 2420 :         OMAP2420_MPUINTC_REGS * pIntcMpuRegs;
; 2421 : 
; 2422 :         pa.QuadPart  = OMAP2420_INTC_MPU_REGS_PA;
; 2423 :         pIntcMpuRegs = (OMAP2420_MPUINTC_REGS*)MmMapIoSpace(pa, sizeof(OMAP2420_MPUINTC_REGS), FALSE);
; 2424 : 
; 2425 :         if (pIntcMpuRegs == NULL)
; 2426 :         {
; 2427 :             DEBUGMSG(ZONE_PDD, (L"USBD PDD_Dump() - ERROR: Unable to map memory for INTC MPU Registers\r\n"));
; 2428 :         }
; 2429 :         else
; 2430 :         {
; 2431 :             DEBUGMSG(ZONE_PDD, (L"Dump INTC MPU Registers\r\n"));
; 2432 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_REVISION     = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_REVISION)));
; 2433 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_SYSCONFIG    = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_SYSCONFIG)));
; 2434 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_SYSSTATUS    = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_SYSSTATUS)));
; 2435 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_SIR_IRQ      = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_SIR_IRQ)));
; 2436 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_SIR_FIQ      = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_SIR_FIQ)));
; 2437 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_CONTROL      = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_CONTROL)));
; 2438 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_PROTECTION   = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_PROTECTION)));
; 2439 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_IDLE         = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_IDLE)));
; 2440 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_ITR0         = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_ITR0)));
; 2441 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_MIR0         = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_MIR0)));
; 2442 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_MIR_CLEAR0   = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_MIR_CLEAR0)));
; 2443 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_MIR_SET0     = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_MIR_SET0)));
; 2444 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_ISR_SET0     = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_ISR_SET0)));
; 2445 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_ISR_CLEAR0   = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_ISR_CLEAR0)));
; 2446 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_PENDING_IRQ0 = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_PENDING_IRQ0)));
; 2447 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_PENDING_FIQ0 = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_PENDING_FIQ0)));
; 2448 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_ITR1         = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_ITR1)));
; 2449 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_MIR1         = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_MIR1)));
; 2450 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_MIR_CLEAR1   = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_MIR_CLEAR1)));
; 2451 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_MIR_SET1     = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_MIR_SET1)));
; 2452 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_ISR_SET1     = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_ISR_SET1)));
; 2453 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_ISR_CLEAR1   = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_ISR_CLEAR1)));
; 2454 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_PENDING_IRQ1 = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_PENDING_IRQ1)));
; 2455 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_PENDING_FIQ1 = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_PENDING_FIQ1)));
; 2456 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_ITR2         = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_ITR2)));
; 2457 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_MIR2         = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_MIR2)));
; 2458 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_MIR_CLEAR2   = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_MIR_CLEAR2)));
; 2459 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_MIR_SET2     = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_MIR_SET2)));
; 2460 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_ISR_SET2     = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_ISR_SET2)));
; 2461 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_ISR_CLEAR2   = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_ISR_CLEAR2)));
; 2462 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_PENDING_IRQ2 = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_PENDING_IRQ2)));
; 2463 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_PENDING_FIQ2 = 0x%08X\r\n", INREG32(&pIntcMpuRegs->ulINTC_PENDING_FIQ2)));
; 2464 :             DEBUGMSG(ZONE_PDD, (L"\r\n"));
; 2465 :             // Unmap INTC MPU Registers
; 2466 :             MmUnmapIoSpace((VOID*)pIntcMpuRegs, sizeof(OMAP2420_MPUINTC_REGS));
; 2467 :             pIntcMpuRegs = NULL;
; 2468 :         }
; 2469 :     }
; 2470 : #endif // SHOW_INTC_MPU_REGISTERS
; 2471 : #ifdef SHOW_INTC_IVA_REGISTERS
; 2472 :     {
; 2473 :         PHYSICAL_ADDRESS pa;
; 2474 :         OMAP2420_IVAINTC_REGS * pIntcIvaRegs;
; 2475 : 
; 2476 :         pa.QuadPart  = OMAP2420_INTC_IVA_REGS_PA;
; 2477 :         pIntcIvaRegs = (OMAP2420_IVAINTC_REGS*)MmMapIoSpace(pa, sizeof(OMAP2420_IVAINTC_REGS), FALSE);
; 2478 : 
; 2479 :         if (pIntcIvaRegs == NULL)
; 2480 :         {
; 2481 :             DEBUGMSG(ZONE_PDD, (L"USBD PDD_Dump() - ERROR: Unable to map memory for INTC IVA Registers\r\n"));
; 2482 :         }
; 2483 :         else
; 2484 :         {
; 2485 :             DEBUGMSG(ZONE_PDD, (L"Dump INTC IVA Registers\r\n"));
; 2486 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_REVISION     = 0x%08X\r\n", INREG32(&pIntcIvaRegs->ulINTC_REVISION)));
; 2487 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_SYSCONFIG    = 0x%08X\r\n", INREG32(&pIntcIvaRegs->ulINTC_SYSCONFIG)));
; 2488 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_SYSSTATUS    = 0x%08X\r\n", INREG32(&pIntcIvaRegs->ulINTC_SYSSTATUS)));
; 2489 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_SIR_IRQ      = 0x%08X\r\n", INREG32(&pIntcIvaRegs->ulINTC_SIR_IRQ)));
; 2490 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_SIR_FIQ      = 0x%08X\r\n", INREG32(&pIntcIvaRegs->ulINTC_SIR_FIQ)));
; 2491 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_CONTROL      = 0x%08X\r\n", INREG32(&pIntcIvaRegs->ulINTC_CONTROL)));
; 2492 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_PROTECTION   = 0x%08X\r\n", INREG32(&pIntcIvaRegs->ulINTC_PROTECTION)));
; 2493 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_IDLE         = 0x%08X\r\n", INREG32(&pIntcIvaRegs->ulINTC_IDLE)));
; 2494 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_ITR0         = 0x%08X\r\n", INREG32(&pIntcIvaRegs->ulINTC_ITR0)));
; 2495 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_MIR0         = 0x%08X\r\n", INREG32(&pIntcIvaRegs->ulINTC_MIR0)));
; 2496 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_MIR_CLEAR0   = 0x%08X\r\n", INREG32(&pIntcIvaRegs->ulINTC_MIR_CLEAR0)));
; 2497 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_MIR_SET0     = 0x%08X\r\n", INREG32(&pIntcIvaRegs->ulINTC_MIR_SET0)));
; 2498 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_ISR_SET0     = 0x%08X\r\n", INREG32(&pIntcIvaRegs->ulINTC_ISR_SET0)));
; 2499 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_ISR_CLEAR0   = 0x%08X\r\n", INREG32(&pIntcIvaRegs->ulINTC_ISR_CLEAR0)));
; 2500 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_PENDING_IRQ0 = 0x%08X\r\n", INREG32(&pIntcIvaRegs->ulINTC_PENDING_IRQ0)));
; 2501 :             DEBUGMSG(ZONE_PDD, (L"\tINTC_PENDING_FIQ0 = 0x%08X\r\n", INREG32(&pIntcIvaRegs->ulINTC_PENDING_FIQ0)));
; 2502 :             DEBUGMSG(ZONE_PDD, (L"\r\n"));
; 2503 : 
; 2504 :             // Unmap INTC IVA Registers
; 2505 :             MmUnmapIoSpace((VOID*)pIntcIvaRegs, sizeof(OMAP2420_IVAINTC_REGS));
; 2506 :             pIntcIvaRegs = NULL;
; 2507 :         }
; 2508 :     }
; 2509 : #endif // SHOW_INTC_IVA_REGISTERS
; 2510 : 
; 2511 :     DEBUGMSG(ZONE_PDD, (L"============================================================\r\n"));

  06e80	e59f3060	 ldr         r3, [pc, #0x60]
  06e84	e5933440	 ldr         r3, [r3, #0x440]
  06e88	e3130902	 tst         r3, #2, 18
  06e8c	0a00000f	 beq         |$LN267@PDD_Dump|
  06e90	e59f3050	 ldr         r3, [pc, #0x50]
  06e94	e5933440	 ldr         r3, [r3, #0x440]
  06e98	e3130801	 tst         r3, #1, 16
  06e9c	0a000004	 beq         |$LN265@PDD_Dump|
  06ea0	e59f003c	 ldr         r0, [pc, #0x3C]
  06ea4	eb000000	 bl          CeLogMsg
  06ea8	e3a03001	 mov         r3, #1
  06eac	e58d3220	 str         r3, [sp, #0x220]
  06eb0	ea000003	 b           |$LN266@PDD_Dump|
  06eb4		 |$LN265@PDD_Dump|
  06eb4	e59f0028	 ldr         r0, [pc, #0x28]
  06eb8	eb000000	 bl          NKDbgPrintfW
  06ebc	e3a03000	 mov         r3, #0
  06ec0	e58d3220	 str         r3, [sp, #0x220]
  06ec4		 |$LN266@PDD_Dump|
  06ec4	e3a03001	 mov         r3, #1
  06ec8	e58d3224	 str         r3, [sp, #0x224]
  06ecc	ea000001	 b           |$LN268@PDD_Dump|
  06ed0		 |$LN267@PDD_Dump|
  06ed0	e3a03000	 mov         r3, #0
  06ed4	e58d3224	 str         r3, [sp, #0x224]
  06ed8		 |$LN268@PDD_Dump|

; 2512 : }

  06ed8	e28ddf8a	 add         sp, sp, #0x8A, 30
  06edc	e89d6000	 ldmia       sp, {sp, lr}
  06ee0	e12fff1e	 bx          lr
  06ee4		 |$LN272@PDD_Dump|
  06ee4		 |$LN273@PDD_Dump|
  06ee4	00000000	 DCD         |??_C@_1HO@CBBNADKJ@?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN?$AA?$DN@|
  06ee8		 |$LN274@PDD_Dump|
  06ee8	00000000	 DCD         |dpCurSettings|
  06eec		 |$LN275@PDD_Dump|
  06eec	00000000	 DCD         |??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@|
  06ef0		 |$LN276@PDD_Dump|
  06ef0	00000000	 DCD         |??_C@_1CK@CKMPBAFI@?$AA?7?$AAV?$AAC?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  06ef4		 |$LN277@PDD_Dump|
  06ef4	00000000	 DCD         |??_C@_1CK@OLGFIEMP@?$AA?7?$AAT?$AAE?$AAS?$AAT?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  06ef8		 |$LN278@PDD_Dump|
  06ef8	00000000	 DCD         |??_C@_1CK@POPOFGPF@?$AA?7?$AAO?$AAU?$AAT?$AAC?$AAT?$AAR?$AAL?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  06efc		 |$LN279@PDD_Dump|
  06efc	00000000	 DCD         |??_C@_1CK@OJBAJNGP@?$AA?7?$AAI?$AAR?$AAQ?$AA_?$AAS?$AAR?$AAC?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  06f00		 |$LN280@PDD_Dump|
  06f00	00000000	 DCD         |??_C@_1CK@FNABKJFN@?$AA?7?$AAI?$AAR?$AAQ?$AA_?$AAE?$AAN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  06f04		 |$LN281@PDD_Dump|
  06f04	00000000	 DCD         |??_C@_1CK@IIBMNIKA@?$AA?7?$AAC?$AAT?$AAR?$AAL?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  06f08		 |$LN282@PDD_Dump|
  06f08	00000000	 DCD         |??_C@_1CK@CCGEGJNA@?$AA?7?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AA_?$AA2?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  06f0c		 |$LN283@PDD_Dump|
  06f0c	00000000	 DCD         |??_C@_1CK@NADDIECI@?$AA?7?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AA_?$AA1?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  06f10		 |$LN284@PDD_Dump|
  06f10	00000000	 DCD         |??_C@_1CK@GDALIBOC@?$AA?7?$AAR?$AAE?$AAV?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  06f14		 |$LN285@PDD_Dump|
  06f14	00000000	 DCD         |??_C@_1DC@LFAFONGA@?$AAD?$AAu?$AAm?$AAp?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAO?$AAT?$AAG?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  06f18		 |$LN286@PDD_Dump|
  06f18	00000000	 DCD         |??_C@_1IM@KIKNGDBH@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAP?$AAD?$AAD?$AA_?$AAD?$AAu?$AAm?$AAp?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@|
  06f1c		 |$LN287@PDD_Dump|
  06f1c	4805e300	 DCD         0x4805e300
  06f20		 |$LN288@PDD_Dump|
  06f20	00000000	 DCD         |??_C@_1EE@GLCADIAB@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAM?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AAM?$AAU?$AAX?$AA_?$AA5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@|
  06f24		 |$LN289@PDD_Dump|
  06f24	00000000	 DCD         |??_C@_1EE@IMDNJOJG@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAM?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AAM?$AAU?$AAX?$AA_?$AA4?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@|
  06f28		 |$LN290@PDD_Dump|
  06f28	00000000	 DCD         |??_C@_1EE@FEPOOFLA@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAM?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AAM?$AAU?$AAX?$AA_?$AA3?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@|
  06f2c		 |$LN291@PDD_Dump|
  06f2c	00000000	 DCD         |??_C@_1EE@LDODEDCH@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAM?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AAM?$AAU?$AAX?$AA_?$AA2?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@|
  06f30		 |$LN292@PDD_Dump|
  06f30	00000000	 DCD         |??_C@_1EE@EBLEKONP@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAM?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AAM?$AAU?$AAX?$AA_?$AA1?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@|
  06f34		 |$LN293@PDD_Dump|
  06f34	00000000	 DCD         |??_C@_1EE@KGKJAIEI@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAM?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AAM?$AAU?$AAX?$AA_?$AA0?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@|
  06f38		 |$LN294@PDD_Dump|
  06f38	00000000	 DCD         |??_C@_1EE@PPPANBOM@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAE?$AAM?$AAU?$AA_?$AAS?$AAU?$AAP?$AAP?$AAO?$AAR?$AAT?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@|
  06f3c		 |$LN295@PDD_Dump|
  06f3c	00000000	 DCD         |??_C@_1EE@FNEHFKLA@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAD?$AAE?$AAV?$AAC?$AAO?$AAN?$AAF?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@|
  06f40		 |$LN296@PDD_Dump|
  06f40	00000000	 DCD         |??_C@_1EE@OKMHGLMJ@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAD?$AAE?$AAB?$AAO?$AAB?$AAS?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@|
  06f44		 |$LN297@PDD_Dump|
  06f44	00000000	 DCD         |??_C@_1EE@MKLKCJP@?$AA?7?$AAP?$AAA?$AAD?$AAC?$AAO?$AAN?$AAF?$AA_?$AAU?$AAS?$AAB?$AA0?$AA_?$AAR?$AAC?$AAV?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@|
  06f48		 |$LN298@PDD_Dump|
  06f48	00000000	 DCD         |??_C@_1EE@MBIBLMLG@?$AA?7?$AAP?$AAA?$AAD?$AAC?$AAO?$AAN?$AAF?$AA_?$AAT?$AAV?$AA_?$AAR?$AAR?$AAE?$AAF?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@|
  06f4c		 |$LN299@PDD_Dump|
  06f4c	00000000	 DCD         |??_C@_1EE@ECLKIIEN@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@|
  06f50		 |$LN300@PDD_Dump|
  06f50	00000000	 DCD         |??_C@_1EE@KDDHLEIE@?$AA?7?$AAC?$AAO?$AAN?$AAT?$AAR?$AAO?$AAL?$AA_?$AAR?$AAE?$AAV?$AAI?$AAS?$AAI?$AAO?$AAN?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN@|
  06f54		 |$LN301@PDD_Dump|
  06f54	00000000	 DCD         |??_C@_1EA@PFNEMNMO@?$AAD?$AAu?$AAm?$AAp?$AA?5?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  06f58		 |$LN302@PDD_Dump|
  06f58	00000000	 DCD         |??_C@_1JK@ILHGFGFN@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAP?$AAD?$AAD?$AA_?$AAD?$AAu?$AAm?$AAp?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@|
  06f5c		 |$LN303@PDD_Dump|
  06f5c	00000000	 DCD         |??_C@_1CO@BAAIBNFG@?$AA?7?$AAE?$AAP?$AA_?$AAT?$AAX?$AA?$FL?$AA3?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  06f60		 |$LN304@PDD_Dump|
  06f60	00000000	 DCD         |??_C@_1CO@OBNCBIPM@?$AA?7?$AAE?$AAP?$AA_?$AAT?$AAX?$AA?$FL?$AA2?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  06f64		 |$LN305@PDD_Dump|
  06f64	00000000	 DCD         |??_C@_1CO@CIMNBAED@?$AA?7?$AAE?$AAP?$AA_?$AAT?$AAX?$AA?$FL?$AA1?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  06f68		 |$LN306@PDD_Dump|
  06f68	00000000	 DCD         |??_C@_1CO@NJBHBFOJ@?$AA?7?$AAE?$AAP?$AA_?$AAT?$AAX?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  06f6c		 |$LN307@PDD_Dump|
  06f6c	00000000	 DCD         |??_C@_1CO@ILNIBNJI@?$AA?7?$AAE?$AAP?$AA_?$AAR?$AAX?$AA?$FL?$AA3?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  06f70		 |$LN308@PDD_Dump|
  06f70	00000000	 DCD         |??_C@_1CO@HKACBIDC@?$AA?7?$AAE?$AAP?$AA_?$AAR?$AAX?$AA?$FL?$AA2?$AA?$FN?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  06f74		 |$M46863|

			 ENDP  ; |PDD_Dump|

	EXPORT	|??_C@_1EI@PPOOHFFN@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$CI?$AAV?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA?$CF?$AAd?$AA?4?$AA?$CF?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@GNOKMIPO@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?5?$AAT?$AAy?$AAp?$AAe?$AA?5?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AA?$DN?$AA?5?$AAU?$AAN?$AAK?$AAN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@JIFIKCFI@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?5?$AAU?$AAN?$AAK?$AAN?$AAO?$AAW?$AAN?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@HJLIOCDC@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@HELFFKKD@?$AAB?$AAu?$AAi?$AAl?$AAt?$AA?5?$AAo?$AAn?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa?$AAt?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@HDBOLDHH@?$AAO?$AAc?$AAt?$AA?5?$AA1?$AA7?$AA?5?$AA2?$AA0?$AA1?$AA3?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BC@CLDPGLHP@?$AA1?$AA5?$AA?3?$AA5?$AA0?$AA?3?$AA1?$AA3?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@ELPALPA@?$AAU?$AAS?$AAB?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@JHFGDFMK@?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@| [ DATA ] ; `string'
	IMPORT	|wcsncpy|
	IMPORT	|__rt_udiv|

  00148			 AREA	 |.pdata|, PDATA
|$T46992| DCD	|$LN77@printUsbdD|
	DCD	0x40021b02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@PPOOHFFN@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$CI?$AAV?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA?$CF?$AAd?$AA?4?$AA?$CF?$AAd@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "P", 0x0, "l"
	DCB	0x0, "a", 0x0, "t", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, "m"
	DCB	0x0, ":", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " ", 0x0, "("
	DCB	0x0, "V", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ".", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@GNOKMIPO@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?5?$AAT?$AAy?$AAp?$AAe?$AA?5?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AA?$DN?$AA?5?$AAU?$AAN?$AAK?$AAN@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "P", 0x0, "l"
	DCB	0x0, "a", 0x0, "t", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, "m"
	DCB	0x0, " ", 0x0, "T", 0x0, "y", 0x0, "p", 0x0, "e", 0x0, " "
	DCB	0x0, "S", 0x0, "t", 0x0, "r", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "U", 0x0, "N", 0x0, "K"
	DCB	0x0, "N", 0x0, "O", 0x0, "W", 0x0, "N", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@JIFIKCFI@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?5?$AAU?$AAN?$AAK?$AAN?$AAO?$AAW?$AAN?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "f", 0x0, "a", 0x0, "u", 0x0, "l", 0x0, "t", 0x0, " "
	DCB	0x0, "C", 0x0, "l", 0x0, "i", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "U", 0x0, "N", 0x0, "K"
	DCB	0x0, "N", 0x0, "O", 0x0, "W", 0x0, "N", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@HJLIOCDC@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "D", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "f", 0x0, "a", 0x0, "u", 0x0, "l", 0x0, "t", 0x0, " "
	DCB	0x0, "C", 0x0, "l", 0x0, "i", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@HELFFKKD@?$AAB?$AAu?$AAi?$AAl?$AAt?$AA?5?$AAo?$AAn?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa?$AAt?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "u", 0x0, "i", 0x0, "l", 0x0, "t", 0x0, " ", 0x0, "o"
	DCB	0x0, "n", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " ", 0x0, "a"
	DCB	0x0, "t", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@HDBOLDHH@?$AAO?$AAc?$AAt?$AA?5?$AA1?$AA7?$AA?5?$AA2?$AA0?$AA1?$AA3?$AA?$AA@| DCB "O"
	DCB	0x0, "c", 0x0, "t", 0x0, " ", 0x0, "1", 0x0, "7", 0x0, " "
	DCB	0x0, "2", 0x0, "0", 0x0, "1", 0x0, "3", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@CLDPGLHP@?$AA1?$AA5?$AA?3?$AA5?$AA0?$AA?3?$AA1?$AA3?$AA?$AA@| DCB "1"
	DCB	0x0, "5", 0x0, ":", 0x0, "5", 0x0, "0", 0x0, ":", 0x0, "1"
	DCB	0x0, "3", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@ELPALPA@?$AAU?$AAS?$AAB?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, " ", 0x0, "C", 0x0, "l", 0x0, "i"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "D", 0x0, "r"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "S"
	DCB	0x0, "e", 0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@JHFGDFMK@?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@| DCB "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  06f74			 AREA	 |.text|, CODE, ARM

  06f74		 |printUsbdDriverSettings| PROC

; 2519 : {

  06f74		 |$LN77@printUsbdD|
  06f74	e52de004	 str         lr, [sp, #-4]!
  06f78	e24dde12	 sub         sp, sp, #0x12, 28
  06f7c		 |$M46989|

; 2520 : #ifdef DEBUG
; 2521 :     LPTSTR            defaultClientName;
; 2522 :     PLATFORMVERSION * platVer;
; 2523 :     DWORD             numBytesReturned;
; 2524 :     DWORD             infoType;
; 2525 :     DWORD             platformTypeStringMaxBytes = PLATFORM_TYPE_STRING_MAX_NUM_BYTES;

  06f7c	e3a03030	 mov         r3, #0x30
  06f80	e58d3088	 str         r3, [sp, #0x88]

; 2526 :     DWORD             outputBufferSize;
; 2527 :     DWORD             i;
; 2528 :     DWORD             index = 0;

  06f84	e3a03000	 mov         r3, #0
  06f88	e58d3018	 str         r3, [sp, #0x18]

; 2529 :     DWORD             newStringSize      = 0;

  06f8c	e3a03000	 mov         r3, #0
  06f90	e58d307c	 str         r3, [sp, #0x7C]

; 2530 :     DWORD             numPlatformTypes   = 0;

  06f94	e3a03000	 mov         r3, #0
  06f98	e58d3080	 str         r3, [sp, #0x80]

; 2531 :     wchar_t         * platformTypeString = NULL;

  06f9c	e3a03000	 mov         r3, #0
  06fa0	e58d3010	 str         r3, [sp, #0x10]

; 2532 :     wchar_t         * platformTypes[(PLATFORM_TYPE_STRING_MAX_NUM_BYTES / sizeof(wchar_t))];
; 2533 : 
; 2534 : 
; 2535 :     DEBUGMSG(ZONE_PDD, (L"\r\n"));

  06fa4	e59f3808	 ldr         r3, [pc, #0x808]
  06fa8	e5933440	 ldr         r3, [r3, #0x440]
  06fac	e3130902	 tst         r3, #2, 18
  06fb0	0a00000f	 beq         |$LN29@printUsbdD|
  06fb4	e59f37f8	 ldr         r3, [pc, #0x7F8]
  06fb8	e5933440	 ldr         r3, [r3, #0x440]
  06fbc	e3130801	 tst         r3, #1, 16
  06fc0	0a000004	 beq         |$LN27@printUsbdD|
  06fc4	e59f07e4	 ldr         r0, [pc, #0x7E4]
  06fc8	eb000000	 bl          CeLogMsg
  06fcc	e3a03001	 mov         r3, #1
  06fd0	e58d30a4	 str         r3, [sp, #0xA4]
  06fd4	ea000003	 b           |$LN28@printUsbdD|
  06fd8		 |$LN27@printUsbdD|
  06fd8	e59f07d0	 ldr         r0, [pc, #0x7D0]
  06fdc	eb000000	 bl          NKDbgPrintfW
  06fe0	e3a03000	 mov         r3, #0
  06fe4	e58d30a4	 str         r3, [sp, #0xA4]
  06fe8		 |$LN28@printUsbdD|
  06fe8	e3a03001	 mov         r3, #1
  06fec	e58d30a8	 str         r3, [sp, #0xA8]
  06ff0	ea000001	 b           |$LN30@printUsbdD|
  06ff4		 |$LN29@printUsbdD|
  06ff4	e3a03000	 mov         r3, #0
  06ff8	e58d30a8	 str         r3, [sp, #0xA8]
  06ffc		 |$LN30@printUsbdD|

; 2536 :     DEBUGMSG(ZONE_PDD, (L"----------------------------------------\r\n"));

  06ffc	e59f37b0	 ldr         r3, [pc, #0x7B0]
  07000	e5933440	 ldr         r3, [r3, #0x440]
  07004	e3130902	 tst         r3, #2, 18
  07008	0a00000f	 beq         |$LN33@printUsbdD|
  0700c	e59f37a0	 ldr         r3, [pc, #0x7A0]
  07010	e5933440	 ldr         r3, [r3, #0x440]
  07014	e3130801	 tst         r3, #1, 16
  07018	0a000004	 beq         |$LN31@printUsbdD|
  0701c	e59f0794	 ldr         r0, [pc, #0x794]
  07020	eb000000	 bl          CeLogMsg
  07024	e3a03001	 mov         r3, #1
  07028	e58d30ac	 str         r3, [sp, #0xAC]
  0702c	ea000003	 b           |$LN32@printUsbdD|
  07030		 |$LN31@printUsbdD|
  07030	e59f0780	 ldr         r0, [pc, #0x780]
  07034	eb000000	 bl          NKDbgPrintfW
  07038	e3a03000	 mov         r3, #0
  0703c	e58d30ac	 str         r3, [sp, #0xAC]
  07040		 |$LN32@printUsbdD|
  07040	e3a03001	 mov         r3, #1
  07044	e58d30b0	 str         r3, [sp, #0xB0]
  07048	ea000001	 b           |$LN34@printUsbdD|
  0704c		 |$LN33@printUsbdD|
  0704c	e3a03000	 mov         r3, #0
  07050	e58d30b0	 str         r3, [sp, #0xB0]
  07054		 |$LN34@printUsbdD|

; 2537 :     DEBUGMSG(ZONE_PDD, (L"USB Client Driver Settings\r\n"));

  07054	e59f3758	 ldr         r3, [pc, #0x758]
  07058	e5933440	 ldr         r3, [r3, #0x440]
  0705c	e3130902	 tst         r3, #2, 18
  07060	0a00000f	 beq         |$LN37@printUsbdD|
  07064	e59f3748	 ldr         r3, [pc, #0x748]
  07068	e5933440	 ldr         r3, [r3, #0x440]
  0706c	e3130801	 tst         r3, #1, 16
  07070	0a000004	 beq         |$LN35@printUsbdD|
  07074	e59f0760	 ldr         r0, [pc, #0x760]
  07078	eb000000	 bl          CeLogMsg
  0707c	e3a03001	 mov         r3, #1
  07080	e58d30b4	 str         r3, [sp, #0xB4]
  07084	ea000003	 b           |$LN36@printUsbdD|
  07088		 |$LN35@printUsbdD|
  07088	e59f074c	 ldr         r0, [pc, #0x74C]
  0708c	eb000000	 bl          NKDbgPrintfW
  07090	e3a03000	 mov         r3, #0
  07094	e58d30b4	 str         r3, [sp, #0xB4]
  07098		 |$LN36@printUsbdD|
  07098	e3a03001	 mov         r3, #1
  0709c	e58d30b8	 str         r3, [sp, #0xB8]
  070a0	ea000001	 b           |$LN38@printUsbdD|
  070a4		 |$LN37@printUsbdD|
  070a4	e3a03000	 mov         r3, #0
  070a8	e58d30b8	 str         r3, [sp, #0xB8]
  070ac		 |$LN38@printUsbdD|

; 2538 :     DEBUGMSG(ZONE_PDD, (L"Built on %s at %s\r\n", TEXT(__DATE__), TEXT(__TIME__)));

  070ac	e59f3700	 ldr         r3, [pc, #0x700]
  070b0	e5933440	 ldr         r3, [r3, #0x440]
  070b4	e3130902	 tst         r3, #2, 18
  070b8	0a000013	 beq         |$LN41@printUsbdD|
  070bc	e59f36f0	 ldr         r3, [pc, #0x6F0]
  070c0	e5933440	 ldr         r3, [r3, #0x440]
  070c4	e3130801	 tst         r3, #1, 16
  070c8	0a000006	 beq         |$LN39@printUsbdD|
  070cc	e59f2704	 ldr         r2, [pc, #0x704]
  070d0	e59f16fc	 ldr         r1, [pc, #0x6FC]
  070d4	e59f06f4	 ldr         r0, [pc, #0x6F4]
  070d8	eb000000	 bl          CeLogMsg
  070dc	e3a03001	 mov         r3, #1
  070e0	e58d30bc	 str         r3, [sp, #0xBC]
  070e4	ea000005	 b           |$LN40@printUsbdD|
  070e8		 |$LN39@printUsbdD|
  070e8	e59f26e8	 ldr         r2, [pc, #0x6E8]
  070ec	e59f16e0	 ldr         r1, [pc, #0x6E0]
  070f0	e59f06d8	 ldr         r0, [pc, #0x6D8]
  070f4	eb000000	 bl          NKDbgPrintfW
  070f8	e3a03000	 mov         r3, #0
  070fc	e58d30bc	 str         r3, [sp, #0xBC]
  07100		 |$LN40@printUsbdD|
  07100	e3a03001	 mov         r3, #1
  07104	e58d30c0	 str         r3, [sp, #0xC0]
  07108	ea000001	 b           |$LN42@printUsbdD|
  0710c		 |$LN41@printUsbdD|
  0710c	e3a03000	 mov         r3, #0
  07110	e58d30c0	 str         r3, [sp, #0xC0]
  07114		 |$LN42@printUsbdD|

; 2539 :     DEBUGMSG(ZONE_PDD, (L"\r\n"));

  07114	e59f3698	 ldr         r3, [pc, #0x698]
  07118	e5933440	 ldr         r3, [r3, #0x440]
  0711c	e3130902	 tst         r3, #2, 18
  07120	0a00000f	 beq         |$LN45@printUsbdD|
  07124	e59f3688	 ldr         r3, [pc, #0x688]
  07128	e5933440	 ldr         r3, [r3, #0x440]
  0712c	e3130801	 tst         r3, #1, 16
  07130	0a000004	 beq         |$LN43@printUsbdD|
  07134	e59f0674	 ldr         r0, [pc, #0x674]
  07138	eb000000	 bl          CeLogMsg
  0713c	e3a03001	 mov         r3, #1
  07140	e58d30c4	 str         r3, [sp, #0xC4]
  07144	ea000003	 b           |$LN44@printUsbdD|
  07148		 |$LN43@printUsbdD|
  07148	e59f0660	 ldr         r0, [pc, #0x660]
  0714c	eb000000	 bl          NKDbgPrintfW
  07150	e3a03000	 mov         r3, #0
  07154	e58d30c4	 str         r3, [sp, #0xC4]
  07158		 |$LN44@printUsbdD|
  07158	e3a03001	 mov         r3, #1
  0715c	e58d30c8	 str         r3, [sp, #0xC8]
  07160	ea000001	 b           |$LN46@printUsbdD|
  07164		 |$LN45@printUsbdD|
  07164	e3a03000	 mov         r3, #0
  07168	e58d30c8	 str         r3, [sp, #0xC8]
  0716c		 |$LN46@printUsbdD|

; 2540 : 
; 2541 : 
; 2542 :     // Get default client type
; 2543 :     defaultClientName = (LPTSTR)LocalAlloc(LPTR, MAX_LOADSTRING);

  0716c	e3a01064	 mov         r1, #0x64
  07170	e3a00040	 mov         r0, #0x40
  07174	eb000000	 bl          LocalAlloc
  07178	e58d00cc	 str         r0, [sp, #0xCC]
  0717c	e59d30cc	 ldr         r3, [sp, #0xCC]
  07180	e58d3084	 str         r3, [sp, #0x84]

; 2544 :     if (defaultClientName)

  07184	e59d3084	 ldr         r3, [sp, #0x84]
  07188	e3530000	 cmp         r3, #0
  0718c	0a000037	 beq         |$LN24@printUsbdD|

; 2545 :     {
; 2546 :         if (GetDefaultClientName((LPTSTR)defaultClientName) == ERROR_SUCCESS)

  07190	e59d0084	 ldr         r0, [sp, #0x84]
  07194	eb000000	 bl          GetDefaultClientName
  07198	e58d00d0	 str         r0, [sp, #0xD0]
  0719c	e59d30d0	 ldr         r3, [sp, #0xD0]
  071a0	e3530000	 cmp         r3, #0
  071a4	1a000018	 bne         |$LN23@printUsbdD|

; 2547 :         {
; 2548 :             DEBUGMSG(ZONE_PDD, (L"USBD Default Client = %s\r\n", defaultClientName));

  071a8	e59f3604	 ldr         r3, [pc, #0x604]
  071ac	e5933440	 ldr         r3, [r3, #0x440]
  071b0	e3130902	 tst         r3, #2, 18
  071b4	0a000011	 beq         |$LN49@printUsbdD|
  071b8	e59f35f4	 ldr         r3, [pc, #0x5F4]
  071bc	e5933440	 ldr         r3, [r3, #0x440]
  071c0	e3130801	 tst         r3, #1, 16
  071c4	0a000005	 beq         |$LN47@printUsbdD|
  071c8	e59d1084	 ldr         r1, [sp, #0x84]
  071cc	e59f05f8	 ldr         r0, [pc, #0x5F8]
  071d0	eb000000	 bl          CeLogMsg
  071d4	e3a03001	 mov         r3, #1
  071d8	e58d30d4	 str         r3, [sp, #0xD4]
  071dc	ea000004	 b           |$LN48@printUsbdD|
  071e0		 |$LN47@printUsbdD|
  071e0	e59d1084	 ldr         r1, [sp, #0x84]
  071e4	e59f05e0	 ldr         r0, [pc, #0x5E0]
  071e8	eb000000	 bl          NKDbgPrintfW
  071ec	e3a03000	 mov         r3, #0
  071f0	e58d30d4	 str         r3, [sp, #0xD4]
  071f4		 |$LN48@printUsbdD|
  071f4	e3a03001	 mov         r3, #1
  071f8	e58d30d8	 str         r3, [sp, #0xD8]
  071fc	ea000001	 b           |$LN50@printUsbdD|
  07200		 |$LN49@printUsbdD|
  07200	e3a03000	 mov         r3, #0
  07204	e58d30d8	 str         r3, [sp, #0xD8]
  07208		 |$LN50@printUsbdD|

; 2549 :         }
; 2550 :         else

  07208	ea000015	 b           |$LN22@printUsbdD|
  0720c		 |$LN23@printUsbdD|

; 2551 :         {
; 2552 :             DEBUGMSG(ZONE_PDD, (L"USBD Default Client = UNKNOWN\r\n"));

  0720c	e59f35a0	 ldr         r3, [pc, #0x5A0]
  07210	e5933440	 ldr         r3, [r3, #0x440]
  07214	e3130902	 tst         r3, #2, 18
  07218	0a00000f	 beq         |$LN53@printUsbdD|
  0721c	e59f3590	 ldr         r3, [pc, #0x590]
  07220	e5933440	 ldr         r3, [r3, #0x440]
  07224	e3130801	 tst         r3, #1, 16
  07228	0a000004	 beq         |$LN51@printUsbdD|
  0722c	e59f0594	 ldr         r0, [pc, #0x594]
  07230	eb000000	 bl          CeLogMsg
  07234	e3a03001	 mov         r3, #1
  07238	e58d30dc	 str         r3, [sp, #0xDC]
  0723c	ea000003	 b           |$LN52@printUsbdD|
  07240		 |$LN51@printUsbdD|
  07240	e59f0580	 ldr         r0, [pc, #0x580]
  07244	eb000000	 bl          NKDbgPrintfW
  07248	e3a03000	 mov         r3, #0
  0724c	e58d30dc	 str         r3, [sp, #0xDC]
  07250		 |$LN52@printUsbdD|
  07250	e3a03001	 mov         r3, #1
  07254	e58d30e0	 str         r3, [sp, #0xE0]
  07258	ea000001	 b           |$LN54@printUsbdD|
  0725c		 |$LN53@printUsbdD|
  0725c	e3a03000	 mov         r3, #0
  07260	e58d30e0	 str         r3, [sp, #0xE0]
  07264		 |$LN54@printUsbdD|
  07264		 |$LN22@printUsbdD|

; 2553 :         }
; 2554 :         LocalFree((HLOCAL)defaultClientName);

  07264	e59d0084	 ldr         r0, [sp, #0x84]
  07268	eb000000	 bl          LocalFree

; 2555 :     }
; 2556 :     else

  0726c	ea000015	 b           |$LN21@printUsbdD|
  07270		 |$LN24@printUsbdD|

; 2557 :     {
; 2558 :         DEBUGMSG(ZONE_PDD, (L"USBD Default Client = UNKNOWN\r\n"));

  07270	e59f353c	 ldr         r3, [pc, #0x53C]
  07274	e5933440	 ldr         r3, [r3, #0x440]
  07278	e3130902	 tst         r3, #2, 18
  0727c	0a00000f	 beq         |$LN57@printUsbdD|
  07280	e59f352c	 ldr         r3, [pc, #0x52C]
  07284	e5933440	 ldr         r3, [r3, #0x440]
  07288	e3130801	 tst         r3, #1, 16
  0728c	0a000004	 beq         |$LN55@printUsbdD|
  07290	e59f0530	 ldr         r0, [pc, #0x530]
  07294	eb000000	 bl          CeLogMsg
  07298	e3a03001	 mov         r3, #1
  0729c	e58d30e4	 str         r3, [sp, #0xE4]
  072a0	ea000003	 b           |$LN56@printUsbdD|
  072a4		 |$LN55@printUsbdD|
  072a4	e59f051c	 ldr         r0, [pc, #0x51C]
  072a8	eb000000	 bl          NKDbgPrintfW
  072ac	e3a03000	 mov         r3, #0
  072b0	e58d30e4	 str         r3, [sp, #0xE4]
  072b4		 |$LN56@printUsbdD|
  072b4	e3a03001	 mov         r3, #1
  072b8	e58d30e8	 str         r3, [sp, #0xE8]
  072bc	ea000001	 b           |$LN58@printUsbdD|
  072c0		 |$LN57@printUsbdD|
  072c0	e3a03000	 mov         r3, #0
  072c4	e58d30e8	 str         r3, [sp, #0xE8]
  072c8		 |$LN58@printUsbdD|
  072c8		 |$LN21@printUsbdD|

; 2559 :     }
; 2560 : 
; 2561 :     // Get the USB Device's Platform Type Array.
; 2562 :     // 32 bytes should be enough space to store the Platform Type string.
; 2563 :     platformTypeString = (wchar_t *)LocalAlloc(LPTR, platformTypeStringMaxBytes);

  072c8	e59d1088	 ldr         r1, [sp, #0x88]
  072cc	e3a00040	 mov         r0, #0x40
  072d0	eb000000	 bl          LocalAlloc
  072d4	e58d00ec	 str         r0, [sp, #0xEC]
  072d8	e59d30ec	 ldr         r3, [sp, #0xEC]
  072dc	e58d3010	 str         r3, [sp, #0x10]

; 2564 :     if (platformTypeString)

  072e0	e59d3010	 ldr         r3, [sp, #0x10]
  072e4	e3530000	 cmp         r3, #0
  072e8	0a000072	 beq         |$LN20@printUsbdD|

; 2565 :     {
; 2566 :         infoType = SPI_GETPLATFORMTYPE;

  072ec	e3a03c01	 mov         r3, #1, 24
  072f0	e3833001	 orr         r3, r3, #1
  072f4	e58d308c	 str         r3, [sp, #0x8C]

; 2567 : 
; 2568 :         if (KernelIoControl(IOCTL_HAL_GET_DEVICE_INFO,
; 2569 :                             &infoType,
; 2570 :                             sizeof(infoType),
; 2571 :                             platformTypeString,
; 2572 :                             platformTypeStringMaxBytes,
; 2573 :                             &numBytesReturned))

  072f8	e28d3090	 add         r3, sp, #0x90
  072fc	e58d3004	 str         r3, [sp, #4]
  07300	e59d3088	 ldr         r3, [sp, #0x88]
  07304	e58d3000	 str         r3, [sp]
  07308	e59d3010	 ldr         r3, [sp, #0x10]
  0730c	e3a02004	 mov         r2, #4
  07310	e28d108c	 add         r1, sp, #0x8C
  07314	e59f04a4	 ldr         r0, [pc, #0x4A4]
  07318	eb000000	 bl          KernelIoControl
  0731c	e58d00f0	 str         r0, [sp, #0xF0]
  07320	e59d30f0	 ldr         r3, [sp, #0xF0]
  07324	e3530000	 cmp         r3, #0
  07328	0a000048	 beq         |$LN19@printUsbdD|

; 2574 :         {
; 2575 :             for (i = 0; i < (numBytesReturned / sizeof(wchar_t)); i++)

  0732c	e3a03000	 mov         r3, #0
  07330	e58d300c	 str         r3, [sp, #0xC]
  07334	ea000002	 b           |$LN18@printUsbdD|
  07338		 |$LN17@printUsbdD|
  07338	e59d300c	 ldr         r3, [sp, #0xC]
  0733c	e2833001	 add         r3, r3, #1
  07340	e58d300c	 str         r3, [sp, #0xC]
  07344		 |$LN18@printUsbdD|
  07344	e59d1090	 ldr         r1, [sp, #0x90]
  07348	e3a00002	 mov         r0, #2
  0734c	eb000000	 bl          __rt_udiv
  07350	e59d300c	 ldr         r3, [sp, #0xC]
  07354	e1530000	 cmp         r3, r0
  07358	2a00003b	 bcs         |$LN16@printUsbdD|

; 2576 :             {
; 2577 :                 // Loop through platformTypeString one character at a time until we find a null string terminator
; 2578 :                 if (platformTypeString[i] == (wchar_t)'\0')

  0735c	e59d100c	 ldr         r1, [sp, #0xC]
  07360	e3a03002	 mov         r3, #2
  07364	e0020391	 mul         r2, r1, r3
  07368	e59d3010	 ldr         r3, [sp, #0x10]
  0736c	e0833002	 add         r3, r3, r2
  07370	e1d330b0	 ldrh        r3, [r3]
  07374	e3530000	 cmp         r3, #0
  07378	1a000032	 bne         |$LN15@printUsbdD|

; 2579 :                 {
; 2580 :                     // If (index == i), then we have found two consecutive null string terminators.
; 2581 :                     if (i > index)

  0737c	e59d200c	 ldr         r2, [sp, #0xC]
  07380	e59d3018	 ldr         r3, [sp, #0x18]
  07384	e1520003	 cmp         r2, r3
  07388	9a00002e	 bls         |$LN14@printUsbdD|

; 2582 :                     {
; 2583 :                         newStringSize = (i + 1 - index) * sizeof(wchar_t);

  0738c	e59d300c	 ldr         r3, [sp, #0xC]
  07390	e2832001	 add         r2, r3, #1
  07394	e59d3018	 ldr         r3, [sp, #0x18]
  07398	e0422003	 sub         r2, r2, r3
  0739c	e3a03002	 mov         r3, #2
  073a0	e0030392	 mul         r3, r2, r3
  073a4	e58d307c	 str         r3, [sp, #0x7C]

; 2584 : 
; 2585 :                         // Allocate a new element in platformTypes to contain the string we have found
; 2586 :                         platformTypes[numPlatformTypes] = (wchar_t *)LocalAlloc(LPTR, newStringSize);

  073a8	e59d107c	 ldr         r1, [sp, #0x7C]
  073ac	e3a00040	 mov         r0, #0x40
  073b0	eb000000	 bl          LocalAlloc
  073b4	e58d00f4	 str         r0, [sp, #0xF4]
  073b8	e59d1080	 ldr         r1, [sp, #0x80]
  073bc	e3a03004	 mov         r3, #4
  073c0	e0020391	 mul         r2, r1, r3
  073c4	e28d301c	 add         r3, sp, #0x1C
  073c8	e0832002	 add         r2, r3, r2
  073cc	e59d30f4	 ldr         r3, [sp, #0xF4]
  073d0	e5823000	 str         r3, [r2]

; 2587 :                         if (platformTypes[numPlatformTypes])

  073d4	e59d1080	 ldr         r1, [sp, #0x80]
  073d8	e3a03004	 mov         r3, #4
  073dc	e0020391	 mul         r2, r1, r3
  073e0	e28d301c	 add         r3, sp, #0x1C
  073e4	e0833002	 add         r3, r3, r2
  073e8	e5933000	 ldr         r3, [r3]
  073ec	e3530000	 cmp         r3, #0
  073f0	0a000014	 beq         |$LN13@printUsbdD|

; 2588 :                         {
; 2589 :                             // Extract the string from platformTypeString
; 2590 :                             // Note: Pass the number of characters (NOT including
; 2591 :                             //       the NULL terminator), not the number of bytes!
; 2592 :                             wcsncpy(platformTypes[numPlatformTypes], (platformTypeString + index), (i - index));

  073f4	e59d200c	 ldr         r2, [sp, #0xC]
  073f8	e59d3018	 ldr         r3, [sp, #0x18]
  073fc	e0422003	 sub         r2, r2, r3
  07400	e59d0018	 ldr         r0, [sp, #0x18]
  07404	e3a03002	 mov         r3, #2
  07408	e0010390	 mul         r1, r0, r3
  0740c	e59d3010	 ldr         r3, [sp, #0x10]
  07410	e0831001	 add         r1, r3, r1
  07414	e59de080	 ldr         lr, [sp, #0x80]
  07418	e3a03004	 mov         r3, #4
  0741c	e000039e	 mul         r0, lr, r3
  07420	e28d301c	 add         r3, sp, #0x1C
  07424	e0833000	 add         r3, r3, r0
  07428	e5930000	 ldr         r0, [r3]
  0742c	eb000000	 bl          wcsncpy

; 2593 :                             numPlatformTypes++;

  07430	e59d3080	 ldr         r3, [sp, #0x80]
  07434	e2833001	 add         r3, r3, #1
  07438	e58d3080	 str         r3, [sp, #0x80]

; 2594 :                             index = i + 1;

  0743c	e59d300c	 ldr         r3, [sp, #0xC]
  07440	e2833001	 add         r3, r3, #1
  07444	e58d3018	 str         r3, [sp, #0x18]
  07448		 |$LN13@printUsbdD|
  07448		 |$LN14@printUsbdD|
  07448		 |$LN15@printUsbdD|

; 2595 :                         }
; 2596 :                     }
; 2597 :                 }
; 2598 :             }

  07448	eaffffba	 b           |$LN17@printUsbdD|
  0744c		 |$LN16@printUsbdD|

; 2599 : 
; 2600 :             // At this point, all of the strings contained in platformTypeString should have
; 2601 :             // been parsed and placed into separate elements within the platformTypes[] array.
; 2602 :             // numPlatformTypes should contain the number of platform types.
; 2603 :         }
; 2604 :         else

  0744c	ea000015	 b           |$LN12@printUsbdD|
  07450		 |$LN19@printUsbdD|

; 2605 :         {
; 2606 :             DEBUGMSG(ZONE_PDD, (L"USBD Platform Type String = UNKNOWN\r\n"));

  07450	e59f335c	 ldr         r3, [pc, #0x35C]
  07454	e5933440	 ldr         r3, [r3, #0x440]
  07458	e3130902	 tst         r3, #2, 18
  0745c	0a00000f	 beq         |$LN61@printUsbdD|
  07460	e59f334c	 ldr         r3, [pc, #0x34C]
  07464	e5933440	 ldr         r3, [r3, #0x440]
  07468	e3130801	 tst         r3, #1, 16
  0746c	0a000004	 beq         |$LN59@printUsbdD|
  07470	e59f034c	 ldr         r0, [pc, #0x34C]
  07474	eb000000	 bl          CeLogMsg
  07478	e3a03001	 mov         r3, #1
  0747c	e58d30f8	 str         r3, [sp, #0xF8]
  07480	ea000003	 b           |$LN60@printUsbdD|
  07484		 |$LN59@printUsbdD|
  07484	e59f0338	 ldr         r0, [pc, #0x338]
  07488	eb000000	 bl          NKDbgPrintfW
  0748c	e3a03000	 mov         r3, #0
  07490	e58d30f8	 str         r3, [sp, #0xF8]
  07494		 |$LN60@printUsbdD|
  07494	e3a03001	 mov         r3, #1
  07498	e58d30fc	 str         r3, [sp, #0xFC]
  0749c	ea000001	 b           |$LN62@printUsbdD|
  074a0		 |$LN61@printUsbdD|
  074a0	e3a03000	 mov         r3, #0
  074a4	e58d30fc	 str         r3, [sp, #0xFC]
  074a8		 |$LN62@printUsbdD|
  074a8		 |$LN12@printUsbdD|

; 2607 :         }
; 2608 : 
; 2609 :         LocalFree((HLOCAL)platformTypeString);

  074a8	e59d0010	 ldr         r0, [sp, #0x10]
  074ac	eb000000	 bl          LocalFree

; 2610 :         platformTypeString = NULL;

  074b0	e3a03000	 mov         r3, #0
  074b4	e58d3010	 str         r3, [sp, #0x10]
  074b8		 |$LN20@printUsbdD|

; 2611 :     }
; 2612 : 
; 2613 :     if (numPlatformTypes > 0)

  074b8	e59d3080	 ldr         r3, [sp, #0x80]
  074bc	e3530000	 cmp         r3, #0
  074c0	9a00006a	 bls         |$LN11@printUsbdD|

; 2614 :     {
; 2615 :         infoType         = SPI_GETPLATFORMVERSION;

  074c4	e3a030e0	 mov         r3, #0xE0
  074c8	e58d308c	 str         r3, [sp, #0x8C]

; 2616 :         outputBufferSize = numPlatformTypes * sizeof(PLATFORMVERSION);

  074cc	e59d2080	 ldr         r2, [sp, #0x80]
  074d0	e3a03008	 mov         r3, #8
  074d4	e0030392	 mul         r3, r2, r3
  074d8	e58d3008	 str         r3, [sp, #8]

; 2617 : 
; 2618 :         // Get the Windows Mobile Platform Version Array.
; 2619 :         platVer = (PLATFORMVERSION *)LocalAlloc(LPTR, outputBufferSize);

  074dc	e59d1008	 ldr         r1, [sp, #8]
  074e0	e3a00040	 mov         r0, #0x40
  074e4	eb000000	 bl          LocalAlloc
  074e8	e58d0100	 str         r0, [sp, #0x100]
  074ec	e59d3100	 ldr         r3, [sp, #0x100]
  074f0	e58d3014	 str         r3, [sp, #0x14]

; 2620 :         if (platVer)

  074f4	e59d3014	 ldr         r3, [sp, #0x14]
  074f8	e3530000	 cmp         r3, #0
  074fc	0a00005b	 beq         |$LN10@printUsbdD|

; 2621 :         {
; 2622 :             if (KernelIoControl(IOCTL_HAL_GET_DEVICE_INFO,
; 2623 :                                 &infoType,
; 2624 :                                 sizeof(infoType),
; 2625 :                                 platVer,
; 2626 :                                 outputBufferSize,
; 2627 :                                 &numBytesReturned))

  07500	e28d3090	 add         r3, sp, #0x90
  07504	e58d3004	 str         r3, [sp, #4]
  07508	e59d3008	 ldr         r3, [sp, #8]
  0750c	e58d3000	 str         r3, [sp]
  07510	e59d3014	 ldr         r3, [sp, #0x14]
  07514	e3a02004	 mov         r2, #4
  07518	e28d108c	 add         r1, sp, #0x8C
  0751c	e59f029c	 ldr         r0, [pc, #0x29C]
  07520	eb000000	 bl          KernelIoControl
  07524	e58d0104	 str         r0, [sp, #0x104]
  07528	e59d3104	 ldr         r3, [sp, #0x104]
  0752c	e3530000	 cmp         r3, #0
  07530	0a00004a	 beq         |$LN9@printUsbdD|

; 2628 :             {
; 2629 :                 if (outputBufferSize == numBytesReturned)

  07534	e59d2008	 ldr         r2, [sp, #8]
  07538	e59d3090	 ldr         r3, [sp, #0x90]
  0753c	e1520003	 cmp         r2, r3
  07540	1a000046	 bne         |$LN8@printUsbdD|

; 2630 :                 {
; 2631 :                     for (i = 0; i < numPlatformTypes; i++)

  07544	e3a03000	 mov         r3, #0
  07548	e58d300c	 str         r3, [sp, #0xC]
  0754c	ea000002	 b           |$LN7@printUsbdD|
  07550		 |$LN6@printUsbdD|
  07550	e59d300c	 ldr         r3, [sp, #0xC]
  07554	e2833001	 add         r3, r3, #1
  07558	e58d300c	 str         r3, [sp, #0xC]
  0755c		 |$LN7@printUsbdD|
  0755c	e59d200c	 ldr         r2, [sp, #0xC]
  07560	e59d3080	 ldr         r3, [sp, #0x80]
  07564	e1520003	 cmp         r2, r3
  07568	2a00003c	 bcs         |$LN5@printUsbdD|

; 2632 :                     {
; 2633 :                         DEBUGMSG(ZONE_PDD, (L"USBD Platform: %s (Version %d.%d)\r\n", platformTypes[i], platVer[i].dwMajor, platVer[i].dwMinor));

  0756c	e59f3240	 ldr         r3, [pc, #0x240]
  07570	e5933440	 ldr         r3, [r3, #0x440]
  07574	e3130902	 tst         r3, #2, 18
  07578	0a000035	 beq         |$LN65@printUsbdD|
  0757c	e59f3230	 ldr         r3, [pc, #0x230]
  07580	e5933440	 ldr         r3, [r3, #0x440]
  07584	e3130801	 tst         r3, #1, 16
  07588	0a000017	 beq         |$LN63@printUsbdD|
  0758c	e59d100c	 ldr         r1, [sp, #0xC]
  07590	e3a03008	 mov         r3, #8
  07594	e0020391	 mul         r2, r1, r3
  07598	e59d3014	 ldr         r3, [sp, #0x14]
  0759c	e0833002	 add         r3, r3, r2
  075a0	e2833004	 add         r3, r3, #4
  075a4	e5933000	 ldr         r3, [r3]
  075a8	e59d000c	 ldr         r0, [sp, #0xC]
  075ac	e3a02008	 mov         r2, #8
  075b0	e0010290	 mul         r1, r0, r2
  075b4	e59d2014	 ldr         r2, [sp, #0x14]
  075b8	e0822001	 add         r2, r2, r1
  075bc	e5922000	 ldr         r2, [r2]
  075c0	e59de00c	 ldr         lr, [sp, #0xC]
  075c4	e3a01004	 mov         r1, #4
  075c8	e000019e	 mul         r0, lr, r1
  075cc	e28d101c	 add         r1, sp, #0x1C
  075d0	e0811000	 add         r1, r1, r0
  075d4	e5911000	 ldr         r1, [r1]
  075d8	e59f01dc	 ldr         r0, [pc, #0x1DC]
  075dc	eb000000	 bl          CeLogMsg
  075e0	e3a03001	 mov         r3, #1
  075e4	e58d3108	 str         r3, [sp, #0x108]
  075e8	ea000016	 b           |$LN64@printUsbdD|
  075ec		 |$LN63@printUsbdD|
  075ec	e59d100c	 ldr         r1, [sp, #0xC]
  075f0	e3a03008	 mov         r3, #8
  075f4	e0020391	 mul         r2, r1, r3
  075f8	e59d3014	 ldr         r3, [sp, #0x14]
  075fc	e0833002	 add         r3, r3, r2
  07600	e2833004	 add         r3, r3, #4
  07604	e5933000	 ldr         r3, [r3]
  07608	e59d000c	 ldr         r0, [sp, #0xC]
  0760c	e3a02008	 mov         r2, #8
  07610	e0010290	 mul         r1, r0, r2
  07614	e59d2014	 ldr         r2, [sp, #0x14]
  07618	e0822001	 add         r2, r2, r1
  0761c	e5922000	 ldr         r2, [r2]
  07620	e59de00c	 ldr         lr, [sp, #0xC]
  07624	e3a01004	 mov         r1, #4
  07628	e000019e	 mul         r0, lr, r1
  0762c	e28d101c	 add         r1, sp, #0x1C
  07630	e0811000	 add         r1, r1, r0
  07634	e5911000	 ldr         r1, [r1]
  07638	e59f017c	 ldr         r0, [pc, #0x17C]
  0763c	eb000000	 bl          NKDbgPrintfW
  07640	e3a03000	 mov         r3, #0
  07644	e58d3108	 str         r3, [sp, #0x108]
  07648		 |$LN64@printUsbdD|
  07648	e3a03001	 mov         r3, #1
  0764c	e58d310c	 str         r3, [sp, #0x10C]
  07650	ea000001	 b           |$LN66@printUsbdD|
  07654		 |$LN65@printUsbdD|
  07654	e3a03000	 mov         r3, #0
  07658	e58d310c	 str         r3, [sp, #0x10C]
  0765c		 |$LN66@printUsbdD|

; 2634 :                     }

  0765c	eaffffbb	 b           |$LN6@printUsbdD|
  07660		 |$LN5@printUsbdD|
  07660		 |$LN8@printUsbdD|
  07660		 |$LN9@printUsbdD|

; 2635 :                 }
; 2636 :             }
; 2637 :             LocalFree((HLOCAL)platVer);

  07660	e59d0014	 ldr         r0, [sp, #0x14]
  07664	eb000000	 bl          LocalFree

; 2638 :             platVer = NULL;

  07668	e3a03000	 mov         r3, #0
  0766c	e58d3014	 str         r3, [sp, #0x14]
  07670		 |$LN10@printUsbdD|
  07670		 |$LN11@printUsbdD|

; 2639 :         }
; 2640 :     }
; 2641 : 
; 2642 :     // Free the memory allocated for platform version strings.
; 2643 :     for (i = 0; i < numPlatformTypes; i++)

  07670	e3a03000	 mov         r3, #0
  07674	e58d300c	 str         r3, [sp, #0xC]
  07678	ea000002	 b           |$LN4@printUsbdD|
  0767c		 |$LN3@printUsbdD|
  0767c	e59d300c	 ldr         r3, [sp, #0xC]
  07680	e2833001	 add         r3, r3, #1
  07684	e58d300c	 str         r3, [sp, #0xC]
  07688		 |$LN4@printUsbdD|
  07688	e59d200c	 ldr         r2, [sp, #0xC]
  0768c	e59d3080	 ldr         r3, [sp, #0x80]
  07690	e1520003	 cmp         r2, r3
  07694	2a000016	 bcs         |$LN2@printUsbdD|

; 2644 :     {
; 2645 :         if (platformTypes[i])

  07698	e59d100c	 ldr         r1, [sp, #0xC]
  0769c	e3a03004	 mov         r3, #4
  076a0	e0020391	 mul         r2, r1, r3
  076a4	e28d301c	 add         r3, sp, #0x1C
  076a8	e0833002	 add         r3, r3, r2
  076ac	e5933000	 ldr         r3, [r3]
  076b0	e3530000	 cmp         r3, #0
  076b4	0a00000d	 beq         |$LN1@printUsbdD|

; 2646 :         {
; 2647 :             LocalFree((HLOCAL)platformTypes[i]);

  076b8	e59d100c	 ldr         r1, [sp, #0xC]
  076bc	e3a03004	 mov         r3, #4
  076c0	e0020391	 mul         r2, r1, r3
  076c4	e28d301c	 add         r3, sp, #0x1C
  076c8	e0833002	 add         r3, r3, r2
  076cc	e5930000	 ldr         r0, [r3]
  076d0	eb000000	 bl          LocalFree

; 2648 :             platformTypes[i] = NULL;

  076d4	e59d100c	 ldr         r1, [sp, #0xC]
  076d8	e3a03004	 mov         r3, #4
  076dc	e0020391	 mul         r2, r1, r3
  076e0	e28d301c	 add         r3, sp, #0x1C
  076e4	e0832002	 add         r2, r3, r2
  076e8	e3a03000	 mov         r3, #0
  076ec	e5823000	 str         r3, [r2]
  076f0		 |$LN1@printUsbdD|

; 2649 :         }
; 2650 :     }

  076f0	eaffffe1	 b           |$LN3@printUsbdD|
  076f4		 |$LN2@printUsbdD|

; 2651 : 
; 2652 :     DEBUGMSG(ZONE_PDD, (L"----------------------------------------\r\n"));

  076f4	e59f30b8	 ldr         r3, [pc, #0xB8]
  076f8	e5933440	 ldr         r3, [r3, #0x440]
  076fc	e3130902	 tst         r3, #2, 18
  07700	0a00000f	 beq         |$LN69@printUsbdD|
  07704	e59f30a8	 ldr         r3, [pc, #0xA8]
  07708	e5933440	 ldr         r3, [r3, #0x440]
  0770c	e3130801	 tst         r3, #1, 16
  07710	0a000004	 beq         |$LN67@printUsbdD|
  07714	e59f009c	 ldr         r0, [pc, #0x9C]
  07718	eb000000	 bl          CeLogMsg
  0771c	e3a03001	 mov         r3, #1
  07720	e58d3110	 str         r3, [sp, #0x110]
  07724	ea000003	 b           |$LN68@printUsbdD|
  07728		 |$LN67@printUsbdD|
  07728	e59f0088	 ldr         r0, [pc, #0x88]
  0772c	eb000000	 bl          NKDbgPrintfW
  07730	e3a03000	 mov         r3, #0
  07734	e58d3110	 str         r3, [sp, #0x110]
  07738		 |$LN68@printUsbdD|
  07738	e3a03001	 mov         r3, #1
  0773c	e58d3114	 str         r3, [sp, #0x114]
  07740	ea000001	 b           |$LN70@printUsbdD|
  07744		 |$LN69@printUsbdD|
  07744	e3a03000	 mov         r3, #0
  07748	e58d3114	 str         r3, [sp, #0x114]
  0774c		 |$LN70@printUsbdD|

; 2653 :     DEBUGMSG(ZONE_PDD, (L"\r\n"));

  0774c	e59f3060	 ldr         r3, [pc, #0x60]
  07750	e5933440	 ldr         r3, [r3, #0x440]
  07754	e3130902	 tst         r3, #2, 18
  07758	0a00000f	 beq         |$LN73@printUsbdD|
  0775c	e59f3050	 ldr         r3, [pc, #0x50]
  07760	e5933440	 ldr         r3, [r3, #0x440]
  07764	e3130801	 tst         r3, #1, 16
  07768	0a000004	 beq         |$LN71@printUsbdD|
  0776c	e59f003c	 ldr         r0, [pc, #0x3C]
  07770	eb000000	 bl          CeLogMsg
  07774	e3a03001	 mov         r3, #1
  07778	e58d3118	 str         r3, [sp, #0x118]
  0777c	ea000003	 b           |$LN72@printUsbdD|
  07780		 |$LN71@printUsbdD|
  07780	e59f0028	 ldr         r0, [pc, #0x28]
  07784	eb000000	 bl          NKDbgPrintfW
  07788	e3a03000	 mov         r3, #0
  0778c	e58d3118	 str         r3, [sp, #0x118]
  07790		 |$LN72@printUsbdD|
  07790	e3a03001	 mov         r3, #1
  07794	e58d311c	 str         r3, [sp, #0x11C]
  07798	ea000001	 b           |$LN74@printUsbdD|
  0779c		 |$LN73@printUsbdD|
  0779c	e3a03000	 mov         r3, #0
  077a0	e58d311c	 str         r3, [sp, #0x11C]
  077a4		 |$LN74@printUsbdD|

; 2654 : #endif
; 2655 : }

  077a4	e28dde12	 add         sp, sp, #0x12, 28
  077a8	e49de004	 ldr         lr, [sp], #4
  077ac	e12fff1e	 bx          lr
  077b0		 |$LN78@printUsbdD|
  077b0		 |$LN79@printUsbdD|
  077b0	00000000	 DCD         |??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@|
  077b4		 |$LN80@printUsbdD|
  077b4	00000000	 DCD         |dpCurSettings|
  077b8		 |$LN81@printUsbdD|
  077b8	00000000	 DCD         |??_C@_1FG@JHFGDFMK@?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@|
  077bc		 |$LN82@printUsbdD|
  077bc	00000000	 DCD         |??_C@_1EI@PPOOHFFN@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$CI?$AAV?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA?$CF?$AAd?$AA?4?$AA?$CF?$AAd@|
  077c0		 |$LN83@printUsbdD|
  077c0	01010004	 DCD         0x1010004
  077c4		 |$LN84@printUsbdD|
  077c4	00000000	 DCD         |??_C@_1EM@GNOKMIPO@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?5?$AAT?$AAy?$AAp?$AAe?$AA?5?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AA?$DN?$AA?5?$AAU?$AAN?$AAK?$AAN@|
  077c8		 |$LN85@printUsbdD|
  077c8	00000000	 DCD         |??_C@_1EA@JIFIKCFI@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?5?$AAU?$AAN?$AAK?$AAN?$AAO?$AAW?$AAN?$AA?$AN?$AA?6?$AA?$AA@|
  077cc		 |$LN86@printUsbdD|
  077cc	00000000	 DCD         |??_C@_1DG@HJLIOCDC@?$AAU?$AAS?$AAB?$AAD?$AA?5?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  077d0		 |$LN87@printUsbdD|
  077d0	00000000	 DCD         |??_C@_1CI@HELFFKKD@?$AAB?$AAu?$AAi?$AAl?$AAt?$AA?5?$AAo?$AAn?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa?$AAt?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  077d4		 |$LN88@printUsbdD|
  077d4	00000000	 DCD         |??_C@_1BI@HDBOLDHH@?$AAO?$AAc?$AAt?$AA?5?$AA1?$AA7?$AA?5?$AA2?$AA0?$AA1?$AA3?$AA?$AA@|
  077d8		 |$LN89@printUsbdD|
  077d8	00000000	 DCD         |??_C@_1BC@CLDPGLHP@?$AA1?$AA5?$AA?3?$AA5?$AA0?$AA?3?$AA1?$AA3?$AA?$AA@|
  077dc		 |$LN90@printUsbdD|
  077dc	00000000	 DCD         |??_C@_1DK@ELPALPA@?$AAU?$AAS?$AAB?$AA?5?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  077e0		 |$M46990|

			 ENDP  ; |printUsbdDriverSettings|

	IMPORT	|RegQueryValueExW|

  00150			 AREA	 |.pdata|, PDATA
|$T47013| DCD	|$LN9@GetDefault|
	DCD	0x40003104
; Function compile flags: /Odtp

  077e0			 AREA	 |.text|, CODE, ARM

  077e0		 |GetDefaultClientName| PROC

; 1409 : {

  077e0		 |$LN9@GetDefault|
  077e0	e1a0c00d	 mov         r12, sp
  077e4	e92d0001	 stmdb       sp!, {r0}
  077e8	e92d5000	 stmdb       sp!, {r12, lr}
  077ec	e24dd02c	 sub         sp, sp, #0x2C
  077f0		 |$M47010|

; 1410 :     HKEY  hkFunctions = NULL;

  077f0	e3a03000	 mov         r3, #0
  077f4	e58d3010	 str         r3, [sp, #0x10]

; 1411 :     DWORD cbData      = MAX_LOADSTRING * sizeof(TCHAR);

  077f8	e3a030c8	 mov         r3, #0xC8
  077fc	e58d3014	 str         r3, [sp, #0x14]

; 1412 :     DWORD dwType;
; 1413 :     DWORD dwRet       = OpenFunctionKey(&hkFunctions);

  07800	e28d0010	 add         r0, sp, #0x10
  07804	eb000000	 bl          OpenFunctionKey
  07808	e58d0024	 str         r0, [sp, #0x24]
  0780c	e59d3024	 ldr         r3, [sp, #0x24]
  07810	e58d3008	 str         r3, [sp, #8]

; 1414 : 
; 1415 : 
; 1416 :     if (dwRet == ERROR_SUCCESS)

  07814	e59d3008	 ldr         r3, [sp, #8]
  07818	e3530000	 cmp         r3, #0
  0781c	1a000014	 bne         |$LN4@GetDefault|

; 1417 :     {
; 1418 :         dwRet = RegQueryValueEx(hkFunctions,
; 1419 :                                 PSZ_REG_DEFAULT_DEFAULT_CLIENT_DRIVER,
; 1420 :                                 NULL,
; 1421 :                                 &dwType,
; 1422 :                                 (PBYTE)pszClientName,
; 1423 :                                 &cbData);

  07820	e28d3014	 add         r3, sp, #0x14
  07824	e58d3004	 str         r3, [sp, #4]
  07828	e59d3034	 ldr         r3, [sp, #0x34]
  0782c	e58d3000	 str         r3, [sp]
  07830	e28d300c	 add         r3, sp, #0xC
  07834	e3a02000	 mov         r2, #0
  07838	e59f1060	 ldr         r1, [pc, #0x60]
  0783c	e59d0010	 ldr         r0, [sp, #0x10]
  07840	eb000000	 bl          RegQueryValueExW
  07844	e58d0028	 str         r0, [sp, #0x28]
  07848	e59d3028	 ldr         r3, [sp, #0x28]
  0784c	e58d3008	 str         r3, [sp, #8]

; 1424 : 
; 1425 :         if ((dwRet != ERROR_SUCCESS) || (dwType != REG_SZ))

  07850	e59d3008	 ldr         r3, [sp, #8]
  07854	e3530000	 cmp         r3, #0
  07858	1a000002	 bne         |$LN2@GetDefault|
  0785c	e59d300c	 ldr         r3, [sp, #0xC]
  07860	e3530001	 cmp         r3, #1
  07864	0a000002	 beq         |$LN3@GetDefault|
  07868		 |$LN2@GetDefault|

; 1426 :         {
; 1427 :             // No client name. Still return success, though.
; 1428 :             pszClientName[0] = 0;

  07868	e59d2034	 ldr         r2, [sp, #0x34]
  0786c	e3a03000	 mov         r3, #0
  07870	e1c230b0	 strh        r3, [r2]
  07874		 |$LN3@GetDefault|
  07874		 |$LN4@GetDefault|

; 1429 :         }
; 1430 :     }
; 1431 : 
; 1432 :     if (hkFunctions)

  07874	e59d3010	 ldr         r3, [sp, #0x10]
  07878	e3530000	 cmp         r3, #0
  0787c	0a000001	 beq         |$LN1@GetDefault|

; 1433 :     {
; 1434 :         RegCloseKey(hkFunctions);

  07880	e59d0010	 ldr         r0, [sp, #0x10]
  07884	eb000000	 bl          RegCloseKey
  07888		 |$LN1@GetDefault|

; 1435 :     }
; 1436 : 
; 1437 :     return dwRet;

  07888	e59d3008	 ldr         r3, [sp, #8]
  0788c	e58d3020	 str         r3, [sp, #0x20]

; 1438 : }

  07890	e59d0020	 ldr         r0, [sp, #0x20]
  07894	e28dd02c	 add         sp, sp, #0x2C
  07898	e89d6000	 ldmia       sp, {sp, lr}
  0789c	e12fff1e	 bx          lr
  078a0		 |$LN10@GetDefault|
  078a0		 |$LN11@GetDefault|
  078a0	00000000	 DCD         |??_C@_1CI@MGKPCHDE@?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?$AA@|
  078a4		 |$M47011|

			 ENDP  ; |GetDefaultClientName|

	END
