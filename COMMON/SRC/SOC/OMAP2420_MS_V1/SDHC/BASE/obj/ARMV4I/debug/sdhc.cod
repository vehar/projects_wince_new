; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\OMAP2420_MS_V1\SDHC\BASE\sdhc.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?szHexBuf@@3PADA| [ DATA ]		; szHexBuf
	EXPORT	|DEVICE_IFC_TWL_GUID| [ DATA ]

  00000			 AREA	 |.bss|, NOINIT
|?szHexBuf@@3PADA| % 0x400				; szHexBuf

  00000			 AREA	 |.rdata|, DATA, READONLY
	%	16
|gwaCMD| DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x0
	DCW	0x2000
	DCW	0x0
	DCB	0x0
	DCB	0x0
	DCB	0x1
	%	1
	DCW	0x1000
	DCW	0x2000
	DCW	0x1040
	DCB	0x1
	DCB	0x0
	DCB	0x1
	%	1
	DCW	0x1000
	DCW	0x2000
	DCW	0x1040
	DCB	0x1
	DCB	0x0
	DCB	0x1
	%	1
	DCW	0x1000
	DCW	0x2000
	DCW	0x1040
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x0
	DCW	0x2000
	DCW	0x0
	DCB	0x2
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x1000
	DCW	0x2000
	DCW	0x1000
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x0
	DCB	0x0
	DCB	0x1
	%	1
	DCW	0xf000
	DCW	0x2000
	DCW	0xf040
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x1
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x3000
	DCW	0x2000
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x1
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0x3000
	DCW	0x2000
	DCW	0x3000
	DCB	0x1
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0x3000
	DCW	0x2000
	DCW	0x3000
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x0
	DCB	0x1
	DCB	0x1
	%	1
	DCW	0x7000
	DCW	0x2000
	DCW	0x7000
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x3000
	DCW	0x2000
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x1
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0x3000
	DCW	0x2000
	DCW	0x3000
	DCB	0x1
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0x3000
	DCW	0x2000
	DCW	0x3000
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x3000
	DCW	0x2000
	DCW	0x3000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x3000
	DCW	0x2000
	DCW	0x3000
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x1
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x1
	DCB	0x1
	DCB	0x1
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2040
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0x1000
	DCW	0x1000
	DCW	0x1000
	DCB	0x1
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0x3000
	DCW	0x2000
	DCW	0x3000
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCW	0xb000
	DCW	0x3000
	DCW	0xb000
	DCB	0x2
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x2
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x3000
	DCW	0x2000
	DCW	0x3000
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x3000
	DCW	0x2000
	DCW	0x3000
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCW	0x2000
	DCW	0x2000
	DCW	0x2000
	EXPORT	|??_7CSDIOControllerBase@@6B@| [ DATA ]	; CSDIOControllerBase::`vftable'
	EXPORT	|??0CSDIOControllerBase@@QAA@XZ|	; CSDIOControllerBase::CSDIOControllerBase
	EXPORT	|?IndicateBusRequestComplete@CSDIOControllerBase@@UAAXPAU_SD_BUS_REQUEST@@J@Z| ; CSDIOControllerBase::IndicateBusRequestComplete
	EXPORT	|?GetRegistrySettings@CSDIOControllerBase@@UAAHPAVCReg@@@Z| ; CSDIOControllerBase::GetRegistrySettings
	EXPORT	|?InterpretCapabilities@CSDIOControllerBase@@UAAHXZ| ; CSDIOControllerBase::InterpretCapabilities
	IMPORT	|InitializeCriticalSection|
	IMPORT	|??_ECSDIOControllerBase@@UAAPAXI@Z|, WEAK |??_GCSDIOControllerBase@@UAAPAXI@Z| ; CSDIOControllerBase::`vector deleting destructor', CSDIOControllerBase::`scalar deleting destructor'
	IMPORT	|_purecall|

  00000			 AREA	 |.pdata|, PDATA
|$T42285| DCD	|$LN5@CSDIOContr|
	DCD	0x40005e04
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\sdhc\base\sdhc.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CSDIOControllerBase@@6B@| DCD |??_ECSDIOControllerBase@@UAAPAXI@Z| ; CSDIOControllerBase::`vftable'
	DCD	|?IndicateBusRequestComplete@CSDIOControllerBase@@UAAXPAU_SD_BUS_REQUEST@@J@Z|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|?GetRegistrySettings@CSDIOControllerBase@@UAAHPAVCReg@@@Z|
	DCD	|?InterpretCapabilities@CSDIOControllerBase@@UAAHXZ|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CSDIOControllerBase@@QAA@XZ| PROC	; CSDIOControllerBase::CSDIOControllerBase

; 168  : {

  00000		 |$LN5@CSDIOContr|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42282|
  00010	e59f215c	 ldr         r2, [pc, #0x15C]
  00014	e59d300c	 ldr         r3, [sp, #0xC]
  00018	e5832000	 str         r2, [r3]

; 169  :     InitializeCriticalSection( &m_critSec );

  0001c	e59d300c	 ldr         r3, [sp, #0xC]
  00020	e2830014	 add         r0, r3, #0x14
  00024	eb000000	 bl          InitializeCriticalSection

; 170  :     m_fSDIOInterruptInService = FALSE;

  00028	e59d300c	 ldr         r3, [sp, #0xC]
  0002c	e2832028	 add         r2, r3, #0x28
  00030	e3a03000	 mov         r3, #0
  00034	e5823000	 str         r3, [r2]

; 171  :     m_fFirstTime = TRUE;

  00038	e59d300c	 ldr         r3, [sp, #0xC]
  0003c	e2832080	 add         r2, r3, #0x80
  00040	e3a03001	 mov         r3, #1
  00044	e5823000	 str         r3, [r2]

; 172  :     m_hControllerISTEvent = NULL;

  00048	e59d300c	 ldr         r3, [sp, #0xC]
  0004c	e2832048	 add         r2, r3, #0x48
  00050	e3a03000	 mov         r3, #0
  00054	e5823000	 str         r3, [r2]

; 173  :     m_htControllerIST = NULL;

  00058	e59d300c	 ldr         r3, [sp, #0xC]
  0005c	e283204c	 add         r2, r3, #0x4C
  00060	e3a03000	 mov         r3, #0
  00064	e5823000	 str         r3, [r2]

; 174  :     m_dwControllerSysIntr = SYSINTR_UNDEFINED;

  00068	e59d300c	 ldr         r3, [sp, #0xC]
  0006c	e283206c	 add         r2, r3, #0x6C
  00070	e3e03000	 mvn         r3, #0
  00074	e5823000	 str         r3, [r2]

; 175  :     m_hCardDetectEvent = NULL;

  00078	e59d300c	 ldr         r3, [sp, #0xC]
  0007c	e2832050	 add         r2, r3, #0x50
  00080	e3a03000	 mov         r3, #0
  00084	e5823000	 str         r3, [r2]

; 176  :     m_htCardDetectIST = NULL;

  00088	e59d300c	 ldr         r3, [sp, #0xC]
  0008c	e2832054	 add         r2, r3, #0x54
  00090	e3a03000	 mov         r3, #0
  00094	e5823000	 str         r3, [r2]

; 177  :     m_dwCardDetectSysIntr = SYSINTR_UNDEFINED;

  00098	e59d300c	 ldr         r3, [sp, #0xC]
  0009c	e2832068	 add         r2, r3, #0x68
  000a0	e3e03000	 mvn         r3, #0
  000a4	e5823000	 str         r3, [r2]

; 178  :     m_dwCardDetectSysIRQSize = -1;

  000a8	e59d300c	 ldr         r3, [sp, #0xC]
  000ac	e2832064	 add         r2, r3, #0x64
  000b0	e3e03000	 mvn         r3, #0
  000b4	e5823000	 str         r3, [r2]

; 179  :     m_fAppCmdMode = FALSE;

  000b8	e59d300c	 ldr         r3, [sp, #0xC]
  000bc	e2832044	 add         r2, r3, #0x44
  000c0	e3a03000	 mov         r3, #0
  000c4	e5823000	 str         r3, [r2]

; 180  : 
; 181  :     m_vpSDIOReg = NULL;

  000c8	e59d300c	 ldr         r3, [sp, #0xC]
  000cc	e2832088	 add         r2, r3, #0x88
  000d0	e3a03000	 mov         r3, #0
  000d4	e5823000	 str         r3, [r2]

; 182  :     m_fCardPresent = FALSE;

  000d8	e59d300c	 ldr         r3, [sp, #0xC]
  000dc	e2832038	 add         r2, r3, #0x38
  000e0	e3a03000	 mov         r3, #0
  000e4	e5823000	 str         r3, [r2]

; 183  :     m_fSDIOInterruptsEnabled = FALSE;

  000e8	e59d300c	 ldr         r3, [sp, #0xC]
  000ec	e283203c	 add         r2, r3, #0x3C
  000f0	e3a03000	 mov         r3, #0
  000f4	e5823000	 str         r3, [r2]

; 184  :     
; 185  :     m_dwMaxTimeout = DEFAULT_TIMEOUT_VALUE;

  000f8	e59d300c	 ldr         r3, [sp, #0xC]
  000fc	e283207c	 add         r2, r3, #0x7C
  00100	e3a03cea	 mov         r3, #0xEA, 24
  00104	e3833060	 orr         r3, r3, #0x60
  00108	e5823000	 str         r3, [r2]

; 186  :     m_bReinsertTheCard = FALSE;

  0010c	e59d300c	 ldr         r3, [sp, #0xC]
  00110	e283202c	 add         r2, r3, #0x2C
  00114	e3a03000	 mov         r3, #0
  00118	e5823000	 str         r3, [r2]

; 187  :     m_dwWakeupSources = 0;

  0011c	e59d300c	 ldr         r3, [sp, #0xC]
  00120	e2832030	 add         r2, r3, #0x30
  00124	e3a03000	 mov         r3, #0
  00128	e5823000	 str         r3, [r2]

; 188  :     m_dwCurrentWakeupSources = 0;

  0012c	e59d300c	 ldr         r3, [sp, #0xC]
  00130	e2832034	 add         r2, r3, #0x34
  00134	e3a03000	 mov         r3, #0
  00138	e5823000	 str         r3, [r2]

; 189  :     m_fMMCMode = FALSE;

  0013c	e59d300c	 ldr         r3, [sp, #0xC]
  00140	e2832040	 add         r2, r3, #0x40
  00144	e3a03000	 mov         r3, #0
  00148	e5823000	 str         r3, [r2]

; 190  : 
; 191  :     m_PowerState = D0;

  0014c	e59d300c	 ldr         r3, [sp, #0xC]
  00150	e2832010	 add         r2, r3, #0x10
  00154	e3a03000	 mov         r3, #0
  00158	e5823000	 str         r3, [r2]

; 192  : }

  0015c	e59d300c	 ldr         r3, [sp, #0xC]
  00160	e58d3000	 str         r3, [sp]
  00164	e59d0000	 ldr         r0, [sp]
  00168	e28dd004	 add         sp, sp, #4
  0016c	e89d6000	 ldmia       sp, {sp, lr}
  00170	e12fff1e	 bx          lr
  00174		 |$LN6@CSDIOContr|
  00174		 |$LN7@CSDIOContr|
  00174	00000000	 DCD         |??_7CSDIOControllerBase@@6B@|
  00178		 |$M42283|

			 ENDP  ; |??0CSDIOControllerBase@@QAA@XZ|, CSDIOControllerBase::CSDIOControllerBase

	EXPORT	|??1CSDIOControllerBase@@UAA@XZ|	; CSDIOControllerBase::~CSDIOControllerBase
	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T42293| DCD	|$LN6@scalar|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCSDIOControllerBase@@UAAPAXI@Z| PROC ; CSDIOControllerBase::`scalar deleting destructor'
  00000		 |$LN6@scalar|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42290|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1CSDIOControllerBase@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M42291|

			 ENDP  ; |??_GCSDIOControllerBase@@UAAPAXI@Z|, CSDIOControllerBase::`scalar deleting destructor'

	EXPORT	|??_C@_1GK@EHLBFPLN@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAo?$AAf?$AAt?$AAw?$AAa?$AAr?$AAe?$AAR?$AAe?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JA@LIPKICML@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|?SoftwareReset@CSDIOControllerBase@@QAAXE@Z| ; CSDIOControllerBase::SoftwareReset
	IMPORT	|GetTickCount|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|

  00008			 AREA	 |.pdata|, PDATA
|$T42310| DCD	|$LN20@SoftwareRe|
	DCD	0x40006f04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@EHLBFPLN@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAo?$AAf?$AAt?$AAw?$AAa?$AAr?$AAe?$AAR?$AAe?$AAs@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "o", 0x0, "f", 0x0, "t"
	DCB	0x0, "w", 0x0, "a", 0x0, "r", 0x0, "e", 0x0, "R", 0x0, "e"
	DCB	0x0, "s", 0x0, "e", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "E"
	DCB	0x0, "x", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "T"
	DCB	0x0, "I", 0x0, "M", 0x0, "E", 0x0, "O", 0x0, "U", 0x0, "T"
	DCB	0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "E", 0x0, "B"
	DCB	0x0, "U", 0x0, "G", 0x0, "C", 0x0, "H", 0x0, "K", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, "t", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JA@LIPKICML@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "_", 0x0, "M", 0x0, "S", 0x0, "_", 0x0, "V"
	DCB	0x0, "1", 0x0, "\\", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "\\", 0x0, "B", 0x0, "A", 0x0, "S", 0x0, "E", 0x0, "\\"
	DCB	0x0, ".", 0x0, "\\", 0x0, "s", 0x0, "d", 0x0, "h", 0x0, "c"
	DCB	0x0, ".", 0x0, "c", 0x0, "p", 0x0, "p", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00178			 AREA	 |.text|, CODE, ARM

  00178		 |?SoftwareReset@CSDIOControllerBase@@QAAXE@Z| PROC ; CSDIOControllerBase::SoftwareReset

; 228  : {

  00178		 |$LN20@SoftwareRe|
  00178	e1a0c00d	 mov         r12, sp
  0017c	e92d0003	 stmdb       sp!, {r0, r1}
  00180	e92d5000	 stmdb       sp!, {r12, lr}
  00184	e24dd030	 sub         sp, sp, #0x30
  00188		 |$M42307|

; 229  :     WORD                bValue;
; 230  :     DWORD               dwCurrentTickCount;
; 231  :     DWORD               dwTimeout;
; 232  :     DWORD               dwCountStart;
; 233  :     BOOL                fTimeoutOverflow = FALSE;

  00188	e3a03000	 mov         r3, #0
  0018c	e58d3000	 str         r3, [sp]

; 234  : 
; 235  :     DEBUGCHK(sizeof(OMAP2420_SDIO_REGS) % sizeof(WORD) == 0);

  00190	e3a03001	 mov         r3, #1
  00194	e58d3014	 str         r3, [sp, #0x14]
  00198	ea000007	 b           |$LN9@SoftwareRe|
  0019c	e3a030eb	 mov         r3, #0xEB
  001a0	e59f2188	 ldr         r2, [pc, #0x188]
  001a4	e59f117c	 ldr         r1, [pc, #0x17C]
  001a8	e59f017c	 ldr         r0, [pc, #0x17C]
  001ac	eb000000	 bl          NKDbgPrintfW
  001b0	e6000010	 __debugbreak_ce
  001b4	e3a03000	 mov         r3, #0
  001b8	e58d3014	 str         r3, [sp, #0x14]
  001bc		 |$LN9@SoftwareRe|

; 236  : 
; 237  :     // Reset the controller
; 238  :     OUTREG16(&m_vpSDIOReg->MMC_SYSC,(0x0002 & bResetBits));

  001bc	e5dd303c	 ldrb        r3, [sp, #0x3C]
  001c0	e2033002	 and         r3, r3, #2
  001c4	e1a02803	 mov         r2, r3, lsl #16
  001c8	e1a02822	 mov         r2, r2, lsr #16
  001cc	e59d3038	 ldr         r3, [sp, #0x38]
  001d0	e2833088	 add         r3, r3, #0x88
  001d4	e5933000	 ldr         r3, [r3]
  001d8	e2833064	 add         r3, r3, #0x64
  001dc	e1c320b0	 strh        r2, [r3]

; 239  : 
; 240  :     // calculate timeout conditions
; 241  :     dwCountStart = GetTickCount();

  001e0	eb000000	 bl          GetTickCount
  001e4	e58d0018	 str         r0, [sp, #0x18]
  001e8	e59d3018	 ldr         r3, [sp, #0x18]
  001ec	e58d3004	 str         r3, [sp, #4]

; 242  :     dwTimeout = dwCountStart + m_dwMaxTimeout;

  001f0	e59d3038	 ldr         r3, [sp, #0x38]
  001f4	e283307c	 add         r3, r3, #0x7C
  001f8	e59d2004	 ldr         r2, [sp, #4]
  001fc	e5933000	 ldr         r3, [r3]
  00200	e0823003	 add         r3, r2, r3
  00204	e58d300c	 str         r3, [sp, #0xC]

; 243  :     if( dwTimeout < dwCountStart )

  00208	e59d200c	 ldr         r2, [sp, #0xC]
  0020c	e59d3004	 ldr         r3, [sp, #4]
  00210	e1520003	 cmp         r2, r3
  00214	2a000001	 bcs         |$LN5@SoftwareRe|

; 244  :         fTimeoutOverflow = TRUE;

  00218	e3a03001	 mov         r3, #1
  0021c	e58d3000	 str         r3, [sp]
  00220		 |$LN5@SoftwareRe|
  00220		 |$LN4@SoftwareRe|

; 245  : 
; 246  :     // Verify that reset has completed.
; 247  :     do {
; 248  :         bValue = INREG16(&m_vpSDIOReg->MMC_SISS);

  00220	e59d3038	 ldr         r3, [sp, #0x38]
  00224	e2833088	 add         r3, r3, #0x88
  00228	e5933000	 ldr         r3, [r3]
  0022c	e2833068	 add         r3, r3, #0x68
  00230	e1d330b0	 ldrh        r3, [r3]
  00234	e1cd31b0	 strh        r3, [sp, #0x10]

; 249  : 
; 250  :         // check for a timeout
; 251  :         dwCurrentTickCount = GetTickCount();

  00238	eb000000	 bl          GetTickCount
  0023c	e58d001c	 str         r0, [sp, #0x1C]
  00240	e59d301c	 ldr         r3, [sp, #0x1C]
  00244	e58d3008	 str         r3, [sp, #8]

; 252  :         if( fTimeoutOverflow ? ( dwTimeout < dwCurrentTickCount && dwCurrentTickCount < dwCountStart )
; 253  :             : ( dwTimeout < dwCurrentTickCount || dwCurrentTickCount < dwCountStart ) )

  00248	e59d3000	 ldr         r3, [sp]
  0024c	e3530000	 cmp         r3, #0
  00250	0a00000f	 beq         |$LN14@SoftwareRe|
  00254	e59d200c	 ldr         r2, [sp, #0xC]
  00258	e59d3008	 ldr         r3, [sp, #8]
  0025c	e1520003	 cmp         r2, r3
  00260	2a000006	 bcs         |$LN10@SoftwareRe|
  00264	e59d2008	 ldr         r2, [sp, #8]
  00268	e59d3004	 ldr         r3, [sp, #4]
  0026c	e1520003	 cmp         r2, r3
  00270	2a000002	 bcs         |$LN10@SoftwareRe|
  00274	e3a03001	 mov         r3, #1
  00278	e58d3020	 str         r3, [sp, #0x20]
  0027c	ea000001	 b           |$LN13@SoftwareRe|
  00280		 |$LN10@SoftwareRe|
  00280	e3a03000	 mov         r3, #0
  00284	e58d3020	 str         r3, [sp, #0x20]
  00288		 |$LN13@SoftwareRe|
  00288	e59d3020	 ldr         r3, [sp, #0x20]
  0028c	e58d3024	 str         r3, [sp, #0x24]
  00290	ea00000e	 b           |$LN15@SoftwareRe|
  00294		 |$LN14@SoftwareRe|
  00294	e59d200c	 ldr         r2, [sp, #0xC]
  00298	e59d3008	 ldr         r3, [sp, #8]
  0029c	e1520003	 cmp         r2, r3
  002a0	3a000006	 bcc         |$LN11@SoftwareRe|
  002a4	e59d2008	 ldr         r2, [sp, #8]
  002a8	e59d3004	 ldr         r3, [sp, #4]
  002ac	e1520003	 cmp         r2, r3
  002b0	3a000002	 bcc         |$LN11@SoftwareRe|
  002b4	e3a03000	 mov         r3, #0
  002b8	e58d3028	 str         r3, [sp, #0x28]
  002bc	ea000001	 b           |$LN12@SoftwareRe|
  002c0		 |$LN11@SoftwareRe|
  002c0	e3a03001	 mov         r3, #1
  002c4	e58d3028	 str         r3, [sp, #0x28]
  002c8		 |$LN12@SoftwareRe|
  002c8	e59d3028	 ldr         r3, [sp, #0x28]
  002cc	e58d3024	 str         r3, [sp, #0x24]
  002d0		 |$LN15@SoftwareRe|
  002d0	e59d3024	 ldr         r3, [sp, #0x24]
  002d4	e3530000	 cmp         r3, #0
  002d8	0a00000b	 beq         |$LN1@SoftwareRe|

; 254  :         {
; 255  :             DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::SoftwareReset: "
; 256  :                 L"Exit: TIMEOUT.\r\n"
; 257  :             ));

  002dc	e59f3044	 ldr         r3, [pc, #0x44]
  002e0	e5933440	 ldr         r3, [r3, #0x440]
  002e4	e3130902	 tst         r3, #2, 18
  002e8	0a000004	 beq         |$LN16@SoftwareRe|
  002ec	e59f0030	 ldr         r0, [pc, #0x30]
  002f0	eb000000	 bl          NKDbgPrintfW
  002f4	e3a03001	 mov         r3, #1
  002f8	e58d302c	 str         r3, [sp, #0x2C]
  002fc	ea000001	 b           |$LN17@SoftwareRe|
  00300		 |$LN16@SoftwareRe|
  00300	e3a03000	 mov         r3, #0
  00304	e58d302c	 str         r3, [sp, #0x2C]
  00308		 |$LN17@SoftwareRe|

; 258  :             break;

  00308	ea000002	 b           |$LN2@SoftwareRe|
  0030c		 |$LN1@SoftwareRe|

; 259  :         }
; 260  :     } while (bValue != 0);

  0030c	e1dd31b0	 ldrh        r3, [sp, #0x10]
  00310	e3530000	 cmp         r3, #0
  00314	1affffc1	 bne         |$LN4@SoftwareRe|
  00318		 |$LN2@SoftwareRe|

; 261  : }

  00318	e28dd030	 add         sp, sp, #0x30
  0031c	e89d6000	 ldmia       sp, {sp, lr}
  00320	e12fff1e	 bx          lr
  00324		 |$LN21@SoftwareRe|
  00324		 |$LN22@SoftwareRe|
  00324	00000000	 DCD         |??_C@_1GK@EHLBFPLN@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAo?$AAf?$AAt?$AAw?$AAa?$AAr?$AAe?$AAR?$AAe?$AAs@|
  00328		 |$LN23@SoftwareRe|
  00328	00000000	 DCD         |dpCurSettings|
  0032c		 |$LN24@SoftwareRe|
  0032c	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  00330		 |$LN25@SoftwareRe|
  00330	00000000	 DCD         |??_C@_1JA@LIPKICML@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  00334		 |$M42308|

			 ENDP  ; |?SoftwareReset@CSDIOControllerBase@@QAAXE@Z|, CSDIOControllerBase::SoftwareReset

	EXPORT	|?ClockOn@CSDIOControllerBase@@QAAXXZ|	; CSDIOControllerBase::ClockOn
	EXPORT	|?SetClockRate@CSDIOControllerBase@@QAAXPAK@Z| ; CSDIOControllerBase::SetClockRate
	EXPORT	|?ClockOff@CSDIOControllerBase@@QAAXXZ|	; CSDIOControllerBase::ClockOff
	EXPORT	|??_C@_1HK@KHBJCCNB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@CHLHEKFM@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HI@KEEPKPJP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc@| [ DATA ] ; `string'
	EXPORT	|?SetInterface@CSDIOControllerBase@@QAAXPAU_SD_CARD_INTERFACE@@@Z| ; CSDIOControllerBase::SetInterface

  00010			 AREA	 |.pdata|, PDATA
|$T42332| DCD	|$LN21@SetInterfa|
	DCD	0x40009204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@KHBJCCNB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "f", 0x0, "a"
	DCB	0x0, "c", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "4", 0x0, " "
	DCB	0x0, "b", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "m", 0x0, "o"
	DCB	0x0, "d", 0x0, "e", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@CHLHEKFM@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "f", 0x0, "a"
	DCB	0x0, "c", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "M", 0x0, "M"
	DCB	0x0, "C", 0x0, "1", 0x0, "_", 0x0, "C", 0x0, "O", 0x0, "N"
	DCB	0x0, " ", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "u", 0x0, "e"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "X", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@KEEPKPJP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "f", 0x0, "a"
	DCB	0x0, "c", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "1", 0x0, " "
	DCB	0x0, "b", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "m", 0x0, "o"
	DCB	0x0, "d", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00334			 AREA	 |.text|, CODE, ARM

  00334		 |?SetInterface@CSDIOControllerBase@@QAAXPAU_SD_CARD_INTERFACE@@@Z| PROC ; CSDIOControllerBase::SetInterface

; 269  : {            

  00334		 |$LN21@SetInterfa|
  00334	e1a0c00d	 mov         r12, sp
  00338	e92d0003	 stmdb       sp!, {r0, r1}
  0033c	e92d5000	 stmdb       sp!, {r12, lr}
  00340	e24dd01c	 sub         sp, sp, #0x1C
  00344		 |$M42329|

; 270  :     DEBUGCHK(pInterface);

  00344	e59d3028	 ldr         r3, [sp, #0x28]
  00348	e3530000	 cmp         r3, #0
  0034c	0a000002	 beq         |$LN7@SetInterfa|
  00350	e3a03001	 mov         r3, #1
  00354	e58d3004	 str         r3, [sp, #4]
  00358	ea000008	 b           |$LN8@SetInterfa|
  0035c		 |$LN7@SetInterfa|
  0035c	e3a03c01	 mov         r3, #1, 24
  00360	e383300e	 orr         r3, r3, #0xE
  00364	e59f2200	 ldr         r2, [pc, #0x200]
  00368	e59f11f8	 ldr         r1, [pc, #0x1F8]
  0036c	e59f01f0	 ldr         r0, [pc, #0x1F0]
  00370	eb000000	 bl          NKDbgPrintfW
  00374	e6000010	 __debugbreak_ce
  00378	e3a03000	 mov         r3, #0
  0037c	e58d3004	 str         r3, [sp, #4]
  00380		 |$LN8@SetInterfa|

; 271  : 
; 272  :     WORD wRegValue;
; 273  : 
; 274  :     if (SD_INTERFACE_SD_MMC_1BIT == pInterface->InterfaceMode) 

  00380	e59d3028	 ldr         r3, [sp, #0x28]
  00384	e5933000	 ldr         r3, [r3]
  00388	e3530000	 cmp         r3, #0
  0038c	1a00002d	 bne         |$LN4@SetInterfa|

; 275  :     {
; 276  :         DEBUGMSG(SDCARD_ZONE_INIT, (L"CSDIOControllerBase::SetInterface: "
; 277  :             L"Setting for 1 bit mode\r\n"
; 278  :         ));

  00390	e59f31d0	 ldr         r3, [pc, #0x1D0]
  00394	e5933440	 ldr         r3, [r3, #0x440]
  00398	e3130a02	 tst         r3, #2, 20
  0039c	0a000004	 beq         |$LN9@SetInterfa|
  003a0	e59f01d0	 ldr         r0, [pc, #0x1D0]
  003a4	eb000000	 bl          NKDbgPrintfW
  003a8	e3a03001	 mov         r3, #1
  003ac	e58d3008	 str         r3, [sp, #8]
  003b0	ea000001	 b           |$LN10@SetInterfa|
  003b4		 |$LN9@SetInterfa|
  003b4	e3a03000	 mov         r3, #0
  003b8	e58d3008	 str         r3, [sp, #8]
  003bc		 |$LN10@SetInterfa|

; 279  :         wRegValue = INREG16(&m_vpSDIOReg->MMC_CON);

  003bc	e59d3024	 ldr         r3, [sp, #0x24]
  003c0	e2833088	 add         r3, r3, #0x88
  003c4	e5933000	 ldr         r3, [r3]
  003c8	e283300c	 add         r3, r3, #0xC
  003cc	e1d330b0	 ldrh        r3, [r3]
  003d0	e1cd30b0	 strh        r3, [sp]

; 280  :         OUTREG16(&m_vpSDIOReg->MMC_CON, (wRegValue & (~VALUE_MMC_CON_DW_4BIT)));

  003d4	e1dd30b0	 ldrh        r3, [sp]
  003d8	e1a02003	 mov         r2, r3
  003dc	e3e03902	 mvn         r3, #2, 18
  003e0	e0023003	 and         r3, r2, r3
  003e4	e1a02803	 mov         r2, r3, lsl #16
  003e8	e1a02822	 mov         r2, r2, lsr #16
  003ec	e59d3024	 ldr         r3, [sp, #0x24]
  003f0	e2833088	 add         r3, r3, #0x88
  003f4	e5933000	 ldr         r3, [r3]
  003f8	e283300c	 add         r3, r3, #0xC
  003fc	e1c320b0	 strh        r2, [r3]

; 281  : 
; 282  :         DEBUGMSG(SDCARD_ZONE_INIT, (L"CSDIOControllerBase::SetInterface: "
; 283  :             L"MMC1_CON value = %X\r\n", INREG16(&m_vpSDIOReg->MMC_CON)
; 284  :         ));

  00400	e59f3160	 ldr         r3, [pc, #0x160]
  00404	e5933440	 ldr         r3, [r3, #0x440]
  00408	e3130a02	 tst         r3, #2, 20
  0040c	0a00000a	 beq         |$LN11@SetInterfa|
  00410	e59d3024	 ldr         r3, [sp, #0x24]
  00414	e2833088	 add         r3, r3, #0x88
  00418	e5933000	 ldr         r3, [r3]
  0041c	e283300c	 add         r3, r3, #0xC
  00420	e1d330b0	 ldrh        r3, [r3]
  00424	e1a01003	 mov         r1, r3
  00428	e59f0140	 ldr         r0, [pc, #0x140]
  0042c	eb000000	 bl          NKDbgPrintfW
  00430	e3a03001	 mov         r3, #1
  00434	e58d300c	 str         r3, [sp, #0xC]
  00438	ea000001	 b           |$LN12@SetInterfa|
  0043c		 |$LN11@SetInterfa|
  0043c	e3a03000	 mov         r3, #0
  00440	e58d300c	 str         r3, [sp, #0xC]
  00444		 |$LN12@SetInterfa|

; 285  :     } 
; 286  :     else if (SD_INTERFACE_SD_4BIT == pInterface->InterfaceMode) 

  00444	ea00003b	 b           |$LN3@SetInterfa|
  00448		 |$LN4@SetInterfa|
  00448	e59d3028	 ldr         r3, [sp, #0x28]
  0044c	e5933000	 ldr         r3, [r3]
  00450	e3530001	 cmp         r3, #1
  00454	1a00002b	 bne         |$LN2@SetInterfa|

; 287  :     {
; 288  :         DEBUGMSG(SDCARD_ZONE_INIT, (L"CSDIOControllerBase::SetInterface: "
; 289  :             L"Setting for 4 bit mode \r\n"
; 290  :         ));

  00458	e59f3108	 ldr         r3, [pc, #0x108]
  0045c	e5933440	 ldr         r3, [r3, #0x440]
  00460	e3130a02	 tst         r3, #2, 20
  00464	0a000004	 beq         |$LN13@SetInterfa|
  00468	e59f0104	 ldr         r0, [pc, #0x104]
  0046c	eb000000	 bl          NKDbgPrintfW
  00470	e3a03001	 mov         r3, #1
  00474	e58d3010	 str         r3, [sp, #0x10]
  00478	ea000001	 b           |$LN14@SetInterfa|
  0047c		 |$LN13@SetInterfa|
  0047c	e3a03000	 mov         r3, #0
  00480	e58d3010	 str         r3, [sp, #0x10]
  00484		 |$LN14@SetInterfa|

; 291  :         wRegValue = INREG16(&m_vpSDIOReg->MMC_CON);

  00484	e59d3024	 ldr         r3, [sp, #0x24]
  00488	e2833088	 add         r3, r3, #0x88
  0048c	e5933000	 ldr         r3, [r3]
  00490	e283300c	 add         r3, r3, #0xC
  00494	e1d330b0	 ldrh        r3, [r3]
  00498	e1cd30b0	 strh        r3, [sp]

; 292  :         OUTREG16(&m_vpSDIOReg->MMC_CON, (wRegValue | (VALUE_MMC_CON_DW_4BIT)));

  0049c	e1dd30b0	 ldrh        r3, [sp]
  004a0	e3833902	 orr         r3, r3, #2, 18
  004a4	e1a02803	 mov         r2, r3, lsl #16
  004a8	e1a02822	 mov         r2, r2, lsr #16
  004ac	e59d3024	 ldr         r3, [sp, #0x24]
  004b0	e2833088	 add         r3, r3, #0x88
  004b4	e5933000	 ldr         r3, [r3]
  004b8	e283300c	 add         r3, r3, #0xC
  004bc	e1c320b0	 strh        r2, [r3]

; 293  : 
; 294  :         DEBUGMSG(SDCARD_ZONE_INIT, (L"CSDIOControllerBase::SetInterface: "
; 295  :             L"MMC1_CON value = %X\r\n", INREG16(&m_vpSDIOReg->MMC_CON)
; 296  :         ));

  004c0	e59f30a0	 ldr         r3, [pc, #0xA0]
  004c4	e5933440	 ldr         r3, [r3, #0x440]
  004c8	e3130a02	 tst         r3, #2, 20
  004cc	0a00000a	 beq         |$LN15@SetInterfa|
  004d0	e59d3024	 ldr         r3, [sp, #0x24]
  004d4	e2833088	 add         r3, r3, #0x88
  004d8	e5933000	 ldr         r3, [r3]
  004dc	e283300c	 add         r3, r3, #0xC
  004e0	e1d330b0	 ldrh        r3, [r3]
  004e4	e1a01003	 mov         r1, r3
  004e8	e59f0080	 ldr         r0, [pc, #0x80]
  004ec	eb000000	 bl          NKDbgPrintfW
  004f0	e3a03001	 mov         r3, #1
  004f4	e58d3014	 str         r3, [sp, #0x14]
  004f8	ea000001	 b           |$LN16@SetInterfa|
  004fc		 |$LN15@SetInterfa|
  004fc	e3a03000	 mov         r3, #0
  00500	e58d3014	 str         r3, [sp, #0x14]
  00504		 |$LN16@SetInterfa|

; 297  :     } 
; 298  :     else 

  00504	ea00000b	 b           |$LN1@SetInterfa|
  00508		 |$LN2@SetInterfa|

; 299  :     {
; 300  :         DEBUGCHK(FALSE);

  00508	ea000002	 b           |$LN17@SetInterfa|
  0050c	e3a03001	 mov         r3, #1
  00510	e58d3018	 str         r3, [sp, #0x18]
  00514	ea000007	 b           |$LN18@SetInterfa|
  00518		 |$LN17@SetInterfa|
  00518	e3a03f4b	 mov         r3, #0x4B, 30
  0051c	e59f2048	 ldr         r2, [pc, #0x48]
  00520	e59f1040	 ldr         r1, [pc, #0x40]
  00524	e59f0038	 ldr         r0, [pc, #0x38]
  00528	eb000000	 bl          NKDbgPrintfW
  0052c	e6000010	 __debugbreak_ce
  00530	e3a03000	 mov         r3, #0
  00534	e58d3018	 str         r3, [sp, #0x18]
  00538		 |$LN18@SetInterfa|
  00538		 |$LN1@SetInterfa|
  00538		 |$LN3@SetInterfa|

; 301  :     }
; 302  : 
; 303  :     ClockOff();

  00538	e59d0024	 ldr         r0, [sp, #0x24]
  0053c	eb000000	 bl          |?ClockOff@CSDIOControllerBase@@QAAXXZ|

; 304  :     SetClockRate(&pInterface->ClockRate);

  00540	e59d3028	 ldr         r3, [sp, #0x28]
  00544	e2831004	 add         r1, r3, #4
  00548	e59d0024	 ldr         r0, [sp, #0x24]
  0054c	eb000000	 bl          |?SetClockRate@CSDIOControllerBase@@QAAXPAK@Z|

; 305  :     ClockOn();

  00550	e59d0024	 ldr         r0, [sp, #0x24]
  00554	eb000000	 bl          |?ClockOn@CSDIOControllerBase@@QAAXXZ|

; 306  : }

  00558	e28dd01c	 add         sp, sp, #0x1C
  0055c	e89d6000	 ldmia       sp, {sp, lr}
  00560	e12fff1e	 bx          lr
  00564		 |$LN22@SetInterfa|
  00564		 |$LN23@SetInterfa|
  00564	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  00568		 |$LN24@SetInterfa|
  00568	00000000	 DCD         |dpCurSettings|
  0056c		 |$LN25@SetInterfa|
  0056c	00000000	 DCD         |??_C@_1JA@LIPKICML@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  00570		 |$LN26@SetInterfa|
  00570	00000000	 DCD         |??_C@_1HC@CHLHEKFM@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc@|
  00574		 |$LN27@SetInterfa|
  00574	00000000	 DCD         |??_C@_1HK@KHBJCCNB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc@|
  00578		 |$LN28@SetInterfa|
  00578	00000000	 DCD         |??_C@_1HI@KEEPKPJP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc@|
  0057c		 |$M42330|

			 ENDP  ; |?SetInterface@CSDIOControllerBase@@QAAXPAU_SD_CARD_INTERFACE@@@Z|, CSDIOControllerBase::SetInterface

	EXPORT	|?Write_MMC_SDIO@CSDIOControllerBase@@QAAXG@Z| ; CSDIOControllerBase::Write_MMC_SDIO
	EXPORT	|?Read_MMC_SDIO@CSDIOControllerBase@@QAAGXZ| ; CSDIOControllerBase::Read_MMC_SDIO
	EXPORT	|??_C@_1EG@CLCNIPFF@?$AA?$CL?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAS?$AAD?$AAI?$AAO?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?EnableSDIOInterrupts@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::EnableSDIOInterrupts

  00018			 AREA	 |.pdata|, PDATA
|$T42348| DCD	|$LN9@EnableSDIO|
	DCD	0x40004804

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@CLCNIPFF@?$AA?$CL?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAS?$AAD?$AAI?$AAO?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAs@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C", 0x0, "S"
	DCB	0x0, "l", 0x0, "o", 0x0, "t", 0x0, ":", 0x0, ":", 0x0, "E"
	DCB	0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, "S"
	DCB	0x0, "D", 0x0, "I", 0x0, "O", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| DCB "U", 0x0
	DCB	"n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n", 0x0
	DCB	0x0, 0x0				; `string'
; Function compile flags: /Odtp

  0057c			 AREA	 |.text|, CODE, ARM

  0057c		 |?EnableSDIOInterrupts@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::EnableSDIOInterrupts

; 312  : {

  0057c		 |$LN9@EnableSDIO|
  0057c	e1a0c00d	 mov         r12, sp
  00580	e92d0001	 stmdb       sp!, {r0}
  00584	e92d5000	 stmdb       sp!, {r12, lr}
  00588	e24dd010	 sub         sp, sp, #0x10
  0058c		 |$M42345|

; 313  :     ASSERT( !m_fSDIOInterruptsEnabled );

  0058c	e59d3018	 ldr         r3, [sp, #0x18]
  00590	e283303c	 add         r3, r3, #0x3C
  00594	e5933000	 ldr         r3, [r3]
  00598	e3530000	 cmp         r3, #0
  0059c	1a000002	 bne         |$LN3@EnableSDIO|
  005a0	e3a03001	 mov         r3, #1
  005a4	e58d3004	 str         r3, [sp, #4]
  005a8	ea000008	 b           |$LN4@EnableSDIO|
  005ac		 |$LN3@EnableSDIO|
  005ac	e3a03c01	 mov         r3, #1, 24
  005b0	e3833039	 orr         r3, r3, #0x39
  005b4	e59f20dc	 ldr         r2, [pc, #0xDC]
  005b8	e59f10d4	 ldr         r1, [pc, #0xD4]
  005bc	e59f00cc	 ldr         r0, [pc, #0xCC]
  005c0	eb000000	 bl          NKDbgPrintfW
  005c4	e6000010	 __debugbreak_ce
  005c8	e3a03000	 mov         r3, #0
  005cc	e58d3004	 str         r3, [sp, #4]
  005d0		 |$LN4@EnableSDIO|

; 314  :     DEBUGMSG(SHC_INTERRUPT_ZONE, (L"+CSDHCSlot::EnableSDIOInterrupts\r\n"));

  005d0	e59f30b4	 ldr         r3, [pc, #0xB4]
  005d4	e5933440	 ldr         r3, [r3, #0x440]
  005d8	e3130001	 tst         r3, #1
  005dc	0a000004	 beq         |$LN5@EnableSDIO|
  005e0	e59f00a0	 ldr         r0, [pc, #0xA0]
  005e4	eb000000	 bl          NKDbgPrintfW
  005e8	e3a03001	 mov         r3, #1
  005ec	e58d3008	 str         r3, [sp, #8]
  005f0	ea000001	 b           |$LN6@EnableSDIO|
  005f4		 |$LN5@EnableSDIO|
  005f4	e3a03000	 mov         r3, #0
  005f8	e58d3008	 str         r3, [sp, #8]
  005fc		 |$LN6@EnableSDIO|

; 315  : 
; 316  :     WORD wRegValue = Read_MMC_SDIO();

  005fc	e59d0018	 ldr         r0, [sp, #0x18]
  00600	eb000000	 bl          |?Read_MMC_SDIO@CSDIOControllerBase@@QAAGXZ|
  00604	e1a03800	 mov         r3, r0, lsl #16
  00608	e1a03823	 mov         r3, r3, lsr #16
  0060c	e1cd30bc	 strh        r3, [sp, #0xC]
  00610	e1dd30bc	 ldrh        r3, [sp, #0xC]
  00614	e1cd30b0	 strh        r3, [sp]

; 317  :     wRegValue |= MMC_IE_EOC;

  00618	e1dd30b0	 ldrh        r3, [sp]
  0061c	e3833001	 orr         r3, r3, #1
  00620	e1a03803	 mov         r3, r3, lsl #16
  00624	e1a03823	 mov         r3, r3, lsr #16
  00628	e1cd30b0	 strh        r3, [sp]

; 318  :     Write_MMC_SDIO(wRegValue);

  0062c	e1dd10b0	 ldrh        r1, [sp]
  00630	e59d0018	 ldr         r0, [sp, #0x18]
  00634	eb000000	 bl          |?Write_MMC_SDIO@CSDIOControllerBase@@QAAXG@Z|

; 319  :     SETREG16(&m_vpSDIOReg->MMC_IE, MMC_IE_CIRQ);

  00638	e59d3018	 ldr         r3, [sp, #0x18]
  0063c	e2833088	 add         r3, r3, #0x88
  00640	e5933000	 ldr         r3, [r3]
  00644	e2833014	 add         r3, r3, #0x14
  00648	e1d330b0	 ldrh        r3, [r3]
  0064c	e3833a02	 orr         r3, r3, #2, 20
  00650	e1a02803	 mov         r2, r3, lsl #16
  00654	e1a02822	 mov         r2, r2, lsr #16
  00658	e59d3018	 ldr         r3, [sp, #0x18]
  0065c	e2833088	 add         r3, r3, #0x88
  00660	e5933000	 ldr         r3, [r3]
  00664	e2833014	 add         r3, r3, #0x14
  00668	e1c320b0	 strh        r2, [r3]

; 320  : 
; 321  :     m_fSDIOInterruptsEnabled = TRUE;

  0066c	e59d3018	 ldr         r3, [sp, #0x18]
  00670	e283203c	 add         r2, r3, #0x3C
  00674	e3a03001	 mov         r3, #1
  00678	e5823000	 str         r3, [r2]

; 322  : }

  0067c	e28dd010	 add         sp, sp, #0x10
  00680	e89d6000	 ldmia       sp, {sp, lr}
  00684	e12fff1e	 bx          lr
  00688		 |$LN10@EnableSDIO|
  00688		 |$LN11@EnableSDIO|
  00688	00000000	 DCD         |??_C@_1EG@CLCNIPFF@?$AA?$CL?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAS?$AAD?$AAI?$AAO?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAs@|
  0068c		 |$LN12@EnableSDIO|
  0068c	00000000	 DCD         |dpCurSettings|
  00690		 |$LN13@EnableSDIO|
  00690	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  00694		 |$LN14@EnableSDIO|
  00694	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  00698		 |$LN15@EnableSDIO|
  00698	00000000	 DCD         |??_C@_1JA@LIPKICML@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  0069c		 |$M42346|

			 ENDP  ; |?EnableSDIOInterrupts@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::EnableSDIOInterrupts

	IMPORT	|LeaveCriticalSection|
	IMPORT	|EnterCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T42360| DCD	|$LN5@Read_MMC_S|
	DCD	0x40001604
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_MMC_SDIO@CSDIOControllerBase@@QAAGXZ| PROC ; CSDIOControllerBase::Read_MMC_SDIO

; 195  : {

  00000		 |$LN5@Read_MMC_S|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42357|

; 196  :     WORD wVal;
; 197  :     EnterCriticalSection( &m_critSec );

  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e2830014	 add         r0, r3, #0x14
  00018	eb000000	 bl          EnterCriticalSection

; 198  :     wVal = INREG16(&m_vpSDIOReg->MMC_SDIO);

  0001c	e59d3010	 ldr         r3, [sp, #0x10]
  00020	e2833088	 add         r3, r3, #0x88
  00024	e5933000	 ldr         r3, [r3]
  00028	e2833034	 add         r3, r3, #0x34
  0002c	e1d330b0	 ldrh        r3, [r3]
  00030	e1cd30b0	 strh        r3, [sp]

; 199  :     LeaveCriticalSection( &m_critSec );

  00034	e59d3010	 ldr         r3, [sp, #0x10]
  00038	e2830014	 add         r0, r3, #0x14
  0003c	eb000000	 bl          LeaveCriticalSection

; 200  :     return wVal;

  00040	e1dd30b0	 ldrh        r3, [sp]
  00044	e1cd30b4	 strh        r3, [sp, #4]

; 201  : }

  00048	e1dd00b4	 ldrh        r0, [sp, #4]
  0004c	e28dd008	 add         sp, sp, #8
  00050	e89d6000	 ldmia       sp, {sp, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$M42358|

			 ENDP  ; |?Read_MMC_SDIO@CSDIOControllerBase@@QAAGXZ|, CSDIOControllerBase::Read_MMC_SDIO


  00000			 AREA	 |.pdata|, PDATA
|$T42367| DCD	|$LN5@Write_MMC_|
	DCD	0x40001103
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_MMC_SDIO@CSDIOControllerBase@@QAAXG@Z| PROC ; CSDIOControllerBase::Write_MMC_SDIO

; 204  : {

  00000		 |$LN5@Write_MMC_|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42364|

; 205  :     EnterCriticalSection( &m_critSec );

  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2830014	 add         r0, r3, #0x14
  00014	eb000000	 bl          EnterCriticalSection

; 206  :     OUTREG16(&m_vpSDIOReg->MMC_SDIO, wVal);

  00018	e59d3008	 ldr         r3, [sp, #8]
  0001c	e2833088	 add         r3, r3, #0x88
  00020	e5933000	 ldr         r3, [r3]
  00024	e2832034	 add         r2, r3, #0x34
  00028	e1dd30bc	 ldrh        r3, [sp, #0xC]
  0002c	e1c230b0	 strh        r3, [r2]

; 207  :     LeaveCriticalSection( &m_critSec );

  00030	e59d3008	 ldr         r3, [sp, #8]
  00034	e2830014	 add         r0, r3, #0x14
  00038	eb000000	 bl          LeaveCriticalSection

; 208  : }

  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M42365|

			 ENDP  ; |?Write_MMC_SDIO@CSDIOControllerBase@@QAAXG@Z|, CSDIOControllerBase::Write_MMC_SDIO

	EXPORT	|?Write_MMC_STAT@CSDIOControllerBase@@QAAXG@Z| ; CSDIOControllerBase::Write_MMC_STAT
	EXPORT	|?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ| ; CSDIOControllerBase::Read_MMC_STAT
	EXPORT	|??_C@_1DO@MHNLJCLK@?$AA?$CL?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAA?$AAc?$AAk?$AAS?$AAD?$AAI?$AAO?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?AckSDIOInterrupt@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::AckSDIOInterrupt
	IMPORT	|SDHCDIndicateSlotStateChange|

  00020			 AREA	 |.pdata|, PDATA
|$T42378| DCD	|$LN11@AckSDIOInt|
	DCD	0x40005404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@MHNLJCLK@?$AA?$CL?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAA?$AAc?$AAk?$AAS?$AAD?$AAI?$AAO?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C", 0x0, "S"
	DCB	0x0, "l", 0x0, "o", 0x0, "t", 0x0, ":", 0x0, ":", 0x0, "A"
	DCB	0x0, "c", 0x0, "k", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O"
	DCB	0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  0069c			 AREA	 |.text|, CODE, ARM

  0069c		 |?AckSDIOInterrupt@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::AckSDIOInterrupt

; 328  : {   

  0069c		 |$LN11@AckSDIOInt|
  0069c	e1a0c00d	 mov         r12, sp
  006a0	e92d0001	 stmdb       sp!, {r0}
  006a4	e92d5000	 stmdb       sp!, {r12, lr}
  006a8	e24dd010	 sub         sp, sp, #0x10
  006ac		 |$M42375|

; 329  :     ASSERT( m_fSDIOInterruptsEnabled );

  006ac	e59d3018	 ldr         r3, [sp, #0x18]
  006b0	e283303c	 add         r3, r3, #0x3C
  006b4	e5933000	 ldr         r3, [r3]
  006b8	e3530000	 cmp         r3, #0
  006bc	0a000002	 beq         |$LN5@AckSDIOInt|
  006c0	e3a03001	 mov         r3, #1
  006c4	e58d3004	 str         r3, [sp, #4]
  006c8	ea000008	 b           |$LN6@AckSDIOInt|
  006cc		 |$LN5@AckSDIOInt|
  006cc	e3a03c01	 mov         r3, #1, 24
  006d0	e3833049	 orr         r3, r3, #0x49
  006d4	e59f210c	 ldr         r2, [pc, #0x10C]
  006d8	e59f1104	 ldr         r1, [pc, #0x104]
  006dc	e59f00fc	 ldr         r0, [pc, #0xFC]
  006e0	eb000000	 bl          NKDbgPrintfW
  006e4	e6000010	 __debugbreak_ce
  006e8	e3a03000	 mov         r3, #0
  006ec	e58d3004	 str         r3, [sp, #4]
  006f0		 |$LN6@AckSDIOInt|

; 330  : 
; 331  :     DEBUGMSG(SHC_INTERRUPT_ZONE, (L"+CSDHCSlot::AckSDIOInterrupt\r\n"));

  006f0	e59f30e4	 ldr         r3, [pc, #0xE4]
  006f4	e5933440	 ldr         r3, [r3, #0x440]
  006f8	e3130001	 tst         r3, #1
  006fc	0a000004	 beq         |$LN7@AckSDIOInt|
  00700	e59f00d0	 ldr         r0, [pc, #0xD0]
  00704	eb000000	 bl          NKDbgPrintfW
  00708	e3a03001	 mov         r3, #1
  0070c	e58d3008	 str         r3, [sp, #8]
  00710	ea000001	 b           |$LN8@AckSDIOInt|
  00714		 |$LN7@AckSDIOInt|
  00714	e3a03000	 mov         r3, #0
  00718	e58d3008	 str         r3, [sp, #8]
  0071c		 |$LN8@AckSDIOInt|

; 332  : 
; 333  :     WORD wRegValue = Read_MMC_STAT();

  0071c	e59d0018	 ldr         r0, [sp, #0x18]
  00720	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|
  00724	e1a03800	 mov         r3, r0, lsl #16
  00728	e1a03823	 mov         r3, r3, lsr #16
  0072c	e1cd30bc	 strh        r3, [sp, #0xC]
  00730	e1dd30bc	 ldrh        r3, [sp, #0xC]
  00734	e1cd30b0	 strh        r3, [sp]

; 334  :     Write_MMC_STAT(MMC_STAT_CIRQ);

  00738	e3a01a02	 mov         r1, #2, 20
  0073c	e59d0018	 ldr         r0, [sp, #0x18]
  00740	eb000000	 bl          |?Write_MMC_STAT@CSDIOControllerBase@@QAAXG@Z|

; 335  :     wRegValue = Read_MMC_STAT();

  00744	e59d0018	 ldr         r0, [sp, #0x18]
  00748	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|
  0074c	e1a03800	 mov         r3, r0, lsl #16
  00750	e1a03823	 mov         r3, r3, lsr #16
  00754	e1cd30be	 strh        r3, [sp, #0xE]
  00758	e1dd30be	 ldrh        r3, [sp, #0xE]
  0075c	e1cd30b0	 strh        r3, [sp]

; 336  :     if( wRegValue & MMC_STAT_CIRQ )

  00760	e1dd30b0	 ldrh        r3, [sp]
  00764	e3130a02	 tst         r3, #2, 20
  00768	0a000006	 beq         |$LN2@AckSDIOInt|

; 337  :     {
; 338  :         SDHCDIndicateSlotStateChange(m_pHCContext, 0, DeviceInterrupting);

  0076c	e3a02003	 mov         r2, #3
  00770	e3a01000	 mov         r1, #0
  00774	e59d3018	 ldr         r3, [sp, #0x18]
  00778	e2833004	 add         r3, r3, #4
  0077c	e5930000	 ldr         r0, [r3]
  00780	eb000000	 bl          SDHCDIndicateSlotStateChange

; 339  :     }
; 340  :     else

  00784	ea000010	 b           |$LN1@AckSDIOInt|
  00788		 |$LN2@AckSDIOInt|

; 341  :     {
; 342  :         SETREG16(&m_vpSDIOReg->MMC_IE, MMC_IE_CIRQ);

  00788	e59d3018	 ldr         r3, [sp, #0x18]
  0078c	e2833088	 add         r3, r3, #0x88
  00790	e5933000	 ldr         r3, [r3]
  00794	e2833014	 add         r3, r3, #0x14
  00798	e1d330b0	 ldrh        r3, [r3]
  0079c	e3833a02	 orr         r3, r3, #2, 20
  007a0	e1a02803	 mov         r2, r3, lsl #16
  007a4	e1a02822	 mov         r2, r2, lsr #16
  007a8	e59d3018	 ldr         r3, [sp, #0x18]
  007ac	e2833088	 add         r3, r3, #0x88
  007b0	e5933000	 ldr         r3, [r3]
  007b4	e2833014	 add         r3, r3, #0x14
  007b8	e1c320b0	 strh        r2, [r3]

; 343  :         m_fSDIOInterruptInService = FALSE;

  007bc	e59d3018	 ldr         r3, [sp, #0x18]
  007c0	e2832028	 add         r2, r3, #0x28
  007c4	e3a03000	 mov         r3, #0
  007c8	e5823000	 str         r3, [r2]
  007cc		 |$LN1@AckSDIOInt|

; 344  :     }
; 345  : }

  007cc	e28dd010	 add         sp, sp, #0x10
  007d0	e89d6000	 ldmia       sp, {sp, lr}
  007d4	e12fff1e	 bx          lr
  007d8		 |$LN12@AckSDIOInt|
  007d8		 |$LN13@AckSDIOInt|
  007d8	00000000	 DCD         |??_C@_1DO@MHNLJCLK@?$AA?$CL?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAA?$AAc?$AAk?$AAS?$AAD?$AAI?$AAO?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  007dc		 |$LN14@AckSDIOInt|
  007dc	00000000	 DCD         |dpCurSettings|
  007e0		 |$LN15@AckSDIOInt|
  007e0	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  007e4		 |$LN16@AckSDIOInt|
  007e4	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  007e8		 |$LN17@AckSDIOInt|
  007e8	00000000	 DCD         |??_C@_1JA@LIPKICML@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  007ec		 |$M42376|

			 ENDP  ; |?AckSDIOInterrupt@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::AckSDIOInterrupt


  00000			 AREA	 |.pdata|, PDATA
|$T42390| DCD	|$LN5@Read_MMC_S@2|
	DCD	0x40001604
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ| PROC ; CSDIOControllerBase::Read_MMC_STAT

; 211  : {

  00000		 |$LN5@Read_MMC_S@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42387|

; 212  :     WORD wVal;
; 213  :     EnterCriticalSection( &m_critSec );

  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e2830014	 add         r0, r3, #0x14
  00018	eb000000	 bl          EnterCriticalSection

; 214  :     wVal = INREG16(&m_vpSDIOReg->MMC_STAT);

  0001c	e59d3010	 ldr         r3, [sp, #0x10]
  00020	e2833088	 add         r3, r3, #0x88
  00024	e5933000	 ldr         r3, [r3]
  00028	e2833010	 add         r3, r3, #0x10
  0002c	e1d330b0	 ldrh        r3, [r3]
  00030	e1cd30b0	 strh        r3, [sp]

; 215  :     LeaveCriticalSection( &m_critSec );

  00034	e59d3010	 ldr         r3, [sp, #0x10]
  00038	e2830014	 add         r0, r3, #0x14
  0003c	eb000000	 bl          LeaveCriticalSection

; 216  :     return wVal;

  00040	e1dd30b0	 ldrh        r3, [sp]
  00044	e1cd30b4	 strh        r3, [sp, #4]

; 217  : }

  00048	e1dd00b4	 ldrh        r0, [sp, #4]
  0004c	e28dd008	 add         sp, sp, #8
  00050	e89d6000	 ldmia       sp, {sp, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$M42388|

			 ENDP  ; |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|, CSDIOControllerBase::Read_MMC_STAT


  00000			 AREA	 |.pdata|, PDATA
|$T42397| DCD	|$LN5@Write_MMC_@2|
	DCD	0x40001103
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_MMC_STAT@CSDIOControllerBase@@QAAXG@Z| PROC ; CSDIOControllerBase::Write_MMC_STAT

; 220  : {

  00000		 |$LN5@Write_MMC_@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42394|

; 221  :     EnterCriticalSection( &m_critSec );

  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2830014	 add         r0, r3, #0x14
  00014	eb000000	 bl          EnterCriticalSection

; 222  :     OUTREG16(&m_vpSDIOReg->MMC_STAT,wVal);

  00018	e59d3008	 ldr         r3, [sp, #8]
  0001c	e2833088	 add         r3, r3, #0x88
  00020	e5933000	 ldr         r3, [r3]
  00024	e2832010	 add         r2, r3, #0x10
  00028	e1dd30bc	 ldrh        r3, [sp, #0xC]
  0002c	e1c230b0	 strh        r3, [r2]

; 223  :     LeaveCriticalSection( &m_critSec );

  00030	e59d3008	 ldr         r3, [sp, #8]
  00034	e2830014	 add         r0, r3, #0x14
  00038	eb000000	 bl          LeaveCriticalSection

; 224  : }

  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M42395|

			 ENDP  ; |?Write_MMC_STAT@CSDIOControllerBase@@QAAXG@Z|, CSDIOControllerBase::Write_MMC_STAT

	EXPORT	|??_C@_1EI@FOOKLALI@?$AA?$CL?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAS?$AAD?$AAI?$AAO?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt@| [ DATA ] ; `string'
	EXPORT	|?DisableSDIOInterrupts@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::DisableSDIOInterrupts

  00028			 AREA	 |.pdata|, PDATA
|$T42408| DCD	|$LN9@DisableSDI|
	DCD	0x40004904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@FOOKLALI@?$AA?$CL?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAS?$AAD?$AAI?$AAO?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C", 0x0, "S"
	DCB	0x0, "l", 0x0, "o", 0x0, "t", 0x0, ":", 0x0, ":", 0x0, "D"
	DCB	0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  007ec			 AREA	 |.text|, CODE, ARM

  007ec		 |?DisableSDIOInterrupts@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::DisableSDIOInterrupts

; 351  : {            

  007ec		 |$LN9@DisableSDI|
  007ec	e1a0c00d	 mov         r12, sp
  007f0	e92d0001	 stmdb       sp!, {r0}
  007f4	e92d5000	 stmdb       sp!, {r12, lr}
  007f8	e24dd010	 sub         sp, sp, #0x10
  007fc		 |$M42405|

; 352  :     ASSERT( m_fSDIOInterruptsEnabled );

  007fc	e59d3018	 ldr         r3, [sp, #0x18]
  00800	e283303c	 add         r3, r3, #0x3C
  00804	e5933000	 ldr         r3, [r3]
  00808	e3530000	 cmp         r3, #0
  0080c	0a000002	 beq         |$LN3@DisableSDI|
  00810	e3a03001	 mov         r3, #1
  00814	e58d3004	 str         r3, [sp, #4]
  00818	ea000007	 b           |$LN4@DisableSDI|
  0081c		 |$LN3@DisableSDI|
  0081c	e3a03e16	 mov         r3, #0x16, 28
  00820	e59f20e4	 ldr         r2, [pc, #0xE4]
  00824	e59f10dc	 ldr         r1, [pc, #0xDC]
  00828	e59f00d4	 ldr         r0, [pc, #0xD4]
  0082c	eb000000	 bl          NKDbgPrintfW
  00830	e6000010	 __debugbreak_ce
  00834	e3a03000	 mov         r3, #0
  00838	e58d3004	 str         r3, [sp, #4]
  0083c		 |$LN4@DisableSDI|

; 353  :     DEBUGMSG(SHC_INTERRUPT_ZONE, (L"+CSDHCSlot::DisableSDIOInterrupts\r\n"));

  0083c	e59f30bc	 ldr         r3, [pc, #0xBC]
  00840	e5933440	 ldr         r3, [r3, #0x440]
  00844	e3130001	 tst         r3, #1
  00848	0a000004	 beq         |$LN5@DisableSDI|
  0084c	e59f00a8	 ldr         r0, [pc, #0xA8]
  00850	eb000000	 bl          NKDbgPrintfW
  00854	e3a03001	 mov         r3, #1
  00858	e58d3008	 str         r3, [sp, #8]
  0085c	ea000001	 b           |$LN6@DisableSDI|
  00860		 |$LN5@DisableSDI|
  00860	e3a03000	 mov         r3, #0
  00864	e58d3008	 str         r3, [sp, #8]
  00868		 |$LN6@DisableSDI|

; 354  :     
; 355  :     CLRREG16(&m_vpSDIOReg->MMC_IE, MMC_IE_CIRQ);

  00868	e59d3018	 ldr         r3, [sp, #0x18]
  0086c	e2833088	 add         r3, r3, #0x88
  00870	e5933000	 ldr         r3, [r3]
  00874	e2833014	 add         r3, r3, #0x14
  00878	e1d330b0	 ldrh        r3, [r3]
  0087c	e1a02003	 mov         r2, r3
  00880	e3e03a02	 mvn         r3, #2, 20
  00884	e0023003	 and         r3, r2, r3
  00888	e1a02803	 mov         r2, r3, lsl #16
  0088c	e1a02822	 mov         r2, r2, lsr #16
  00890	e59d3018	 ldr         r3, [sp, #0x18]
  00894	e2833088	 add         r3, r3, #0x88
  00898	e5933000	 ldr         r3, [r3]
  0089c	e2833014	 add         r3, r3, #0x14
  008a0	e1c320b0	 strh        r2, [r3]

; 356  :     WORD wRegValue = Read_MMC_SDIO();

  008a4	e59d0018	 ldr         r0, [sp, #0x18]
  008a8	eb000000	 bl          |?Read_MMC_SDIO@CSDIOControllerBase@@QAAGXZ|
  008ac	e1cd00bc	 strh        r0, [sp, #0xC]
  008b0	e1dd30bc	 ldrh        r3, [sp, #0xC]
  008b4	e1cd30b0	 strh        r3, [sp]

; 357  :     wRegValue &= (~MMC_IE_EOC);

  008b8	e1dd30b0	 ldrh        r3, [sp]
  008bc	e1a02003	 mov         r2, r3
  008c0	e3e03001	 mvn         r3, #1
  008c4	e0023003	 and         r3, r2, r3
  008c8	e1a03803	 mov         r3, r3, lsl #16
  008cc	e1a03823	 mov         r3, r3, lsr #16
  008d0	e1cd30b0	 strh        r3, [sp]

; 358  :     Write_MMC_SDIO(wRegValue);

  008d4	e1dd10b0	 ldrh        r1, [sp]
  008d8	e59d0018	 ldr         r0, [sp, #0x18]
  008dc	eb000000	 bl          |?Write_MMC_SDIO@CSDIOControllerBase@@QAAXG@Z|

; 359  : 
; 360  :     m_fSDIOInterruptsEnabled = FALSE;

  008e0	e59d3018	 ldr         r3, [sp, #0x18]
  008e4	e283203c	 add         r2, r3, #0x3C
  008e8	e3a03000	 mov         r3, #0
  008ec	e5823000	 str         r3, [r2]

; 361  : }

  008f0	e28dd010	 add         sp, sp, #0x10
  008f4	e89d6000	 ldmia       sp, {sp, lr}
  008f8	e12fff1e	 bx          lr
  008fc		 |$LN10@DisableSDI|
  008fc		 |$LN11@DisableSDI|
  008fc	00000000	 DCD         |??_C@_1EI@FOOKLALI@?$AA?$CL?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAS?$AAD?$AAI?$AAO?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt@|
  00900		 |$LN12@DisableSDI|
  00900	00000000	 DCD         |dpCurSettings|
  00904		 |$LN13@DisableSDI|
  00904	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  00908		 |$LN14@DisableSDI|
  00908	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  0090c		 |$LN15@DisableSDI|
  0090c	00000000	 DCD         |??_C@_1JA@LIPKICML@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  00910		 |$M42406|

			 ENDP  ; |?DisableSDIOInterrupts@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::DisableSDIOInterrupts

	EXPORT	|??_C@_1HK@KCPIOLKC@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAC?$AAl?$AAo?$AAc?$AAk?$AAR?$AAa?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@NPNHOABI@?$AAw?$AAD?$AAi?$AAv?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IO@PBBDNKNJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAC?$AAl?$AAo?$AAc?$AAk?$AAR?$AAa?$AAt@| [ DATA ] ; `string'
	IMPORT	|__rt_sdiv|
	IMPORT	|__rt_udiv|

  00030			 AREA	 |.pdata|, PDATA
|$T42427| DCD	|$LN12@SetClockRa|
	DCD	0x40006604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@KCPIOLKC@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAC?$AAl?$AAo?$AAc?$AAk?$AAR?$AAa?$AAt@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "C"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "R", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "A", 0x0, "c"
	DCB	0x0, "t", 0x0, "u", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "c"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " ", 0x0, "r"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@NPNHOABI@?$AAw?$AAD?$AAi?$AAv?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AA@| DCB "w"
	DCB	0x0, "D", 0x0, "i", 0x0, "v", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IO@PBBDNKNJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAC?$AAl?$AAo?$AAc?$AAk?$AAR?$AAa?$AAt@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "C"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "R", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "A", 0x0, "c"
	DCB	0x0, "t", 0x0, "u", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "w"
	DCB	0x0, "D", 0x0, "i", 0x0, "v", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, ":", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, " ", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00910			 AREA	 |.text|, CODE, ARM

  00910		 |?SetClockRate@CSDIOControllerBase@@QAAXPAK@Z| PROC ; CSDIOControllerBase::SetClockRate

; 367  : {

  00910		 |$LN12@SetClockRa|
  00910	e1a0c00d	 mov         r12, sp
  00914	e92d0003	 stmdb       sp!, {r0, r1}
  00918	e92d5000	 stmdb       sp!, {r12, lr}
  0091c	e24dd014	 sub         sp, sp, #0x14
  00920		 |$M42424|

; 368  :     const DWORD dwClockRate = *pdwRate;

  00920	e59d3020	 ldr         r3, [sp, #0x20]
  00924	e5933000	 ldr         r3, [r3]
  00928	e58d3000	 str         r3, [sp]

; 369  : 
; 370  :     // calculate the register value
; 371  :     WORD wDiv = (WORD)((MMCSD_CLOCK_INPUT + dwClockRate - 1) / dwClockRate);

  0092c	e59d2000	 ldr         r2, [sp]
  00930	e59f3164	 ldr         r3, [pc, #0x164]
  00934	e0823003	 add         r3, r2, r3
  00938	e2431001	 sub         r1, r3, #1
  0093c	e59d0000	 ldr         r0, [sp]
  00940	eb000000	 bl          __rt_udiv
  00944	e1a03800	 mov         r3, r0, lsl #16
  00948	e1a03823	 mov         r3, r3, lsr #16
  0094c	e1cd30b4	 strh        r3, [sp, #4]

; 372  :     DEBUGMSG(SHC_CLOCK_ZONE, (L"CSDIOControllerBase::SetClockRate: "
; 373  :         L"Actual wDiv = 0x%x  requested:0x%x ", wDiv, *pdwRate
; 374  :     ));

  00950	e59f3140	 ldr         r3, [pc, #0x140]
  00954	e5933440	 ldr         r3, [r3, #0x440]
  00958	e3130010	 tst         r3, #0x10
  0095c	0a000008	 beq         |$LN4@SetClockRa|
  00960	e59d3020	 ldr         r3, [sp, #0x20]
  00964	e5932000	 ldr         r2, [r3]
  00968	e1dd30b4	 ldrh        r3, [sp, #4]
  0096c	e1a01003	 mov         r1, r3
  00970	e59f012c	 ldr         r0, [pc, #0x12C]
  00974	eb000000	 bl          NKDbgPrintfW
  00978	e3a03001	 mov         r3, #1
  0097c	e58d3008	 str         r3, [sp, #8]
  00980	ea000001	 b           |$LN5@SetClockRa|
  00984		 |$LN4@SetClockRa|
  00984	e3a03000	 mov         r3, #0
  00988	e58d3008	 str         r3, [sp, #8]
  0098c		 |$LN5@SetClockRa|

; 375  :     // Only 8 bits available for the divider, so mmc base clock / 255 is minimum.
; 376  :     if ( wDiv > 0x03FF )

  0098c	e1dd30b4	 ldrh        r3, [sp, #4]
  00990	e1a02003	 mov         r2, r3
  00994	e3a03c03	 mov         r3, #3, 24
  00998	e38330ff	 orr         r3, r3, #0xFF
  0099c	e1520003	 cmp         r2, r3
  009a0	da000002	 ble         |$LN1@SetClockRa|

; 377  :         wDiv = 0x03FF;

  009a4	e3a03c03	 mov         r3, #3, 24
  009a8	e38330ff	 orr         r3, r3, #0xFF
  009ac	e1cd30b4	 strh        r3, [sp, #4]
  009b0		 |$LN1@SetClockRa|

; 378  : 
; 379  :     DEBUGMSG(SHC_CLOCK_ZONE, (L"wDiv = 0x%x 0x%x", wDiv, *pdwRate
; 380  :     ));

  009b0	e59f30e0	 ldr         r3, [pc, #0xE0]
  009b4	e5933440	 ldr         r3, [r3, #0x440]
  009b8	e3130010	 tst         r3, #0x10
  009bc	0a000008	 beq         |$LN6@SetClockRa|
  009c0	e59d3020	 ldr         r3, [sp, #0x20]
  009c4	e5932000	 ldr         r2, [r3]
  009c8	e1dd30b4	 ldrh        r3, [sp, #4]
  009cc	e1a01003	 mov         r1, r3
  009d0	e59f00c8	 ldr         r0, [pc, #0xC8]
  009d4	eb000000	 bl          NKDbgPrintfW
  009d8	e3a03001	 mov         r3, #1
  009dc	e58d300c	 str         r3, [sp, #0xC]
  009e0	ea000001	 b           |$LN7@SetClockRa|
  009e4		 |$LN6@SetClockRa|
  009e4	e3a03000	 mov         r3, #0
  009e8	e58d300c	 str         r3, [sp, #0xC]
  009ec		 |$LN7@SetClockRa|

; 381  : 
; 382  :     // Program the divisor, but leave the rest of the register alone.
; 383  :     WORD wRegValue = INREG16(&m_vpSDIOReg->MMC_CON);

  009ec	e59d301c	 ldr         r3, [sp, #0x1C]
  009f0	e2833088	 add         r3, r3, #0x88
  009f4	e5933000	 ldr         r3, [r3]
  009f8	e283300c	 add         r3, r3, #0xC
  009fc	e1d330b0	 ldrh        r3, [r3]
  00a00	e1cd30b6	 strh        r3, [sp, #6]

; 384  : 
; 385  :     OUTREG16(&m_vpSDIOReg->MMC_CON, ((wRegValue & ~0x03FF) | wDiv));

  00a04	e1dd30b6	 ldrh        r3, [sp, #6]
  00a08	e1a02003	 mov         r2, r3
  00a0c	e3e030ff	 mvn         r3, #0xFF
  00a10	e1a03103	 mov         r3, r3, lsl #2
  00a14	e0022003	 and         r2, r2, r3
  00a18	e1dd30b4	 ldrh        r3, [sp, #4]
  00a1c	e1823003	 orr         r3, r2, r3
  00a20	e1a02803	 mov         r2, r3, lsl #16
  00a24	e1a02822	 mov         r2, r2, lsr #16
  00a28	e59d301c	 ldr         r3, [sp, #0x1C]
  00a2c	e2833088	 add         r3, r3, #0x88
  00a30	e5933000	 ldr         r3, [r3]
  00a34	e283300c	 add         r3, r3, #0xC
  00a38	e1c320b0	 strh        r2, [r3]

; 386  : 
; 387  :     
; 388  :     *pdwRate = MMCSD_CLOCK_INPUT / wDiv;

  00a3c	e1dd30b4	 ldrh        r3, [sp, #4]
  00a40	e1a00003	 mov         r0, r3
  00a44	e59f1050	 ldr         r1, [pc, #0x50]
  00a48	eb000000	 bl          __rt_sdiv
  00a4c	e59d3020	 ldr         r3, [sp, #0x20]
  00a50	e5830000	 str         r0, [r3]

; 389  :     DEBUGMSG(SHC_CLOCK_ZONE,(L"CSDIOControllerBase::SetClockRate: "
; 390  :         L"Actual clock rate = 0x%x\n", *pdwRate
; 391  :     ));

  00a54	e59f303c	 ldr         r3, [pc, #0x3C]
  00a58	e5933440	 ldr         r3, [r3, #0x440]
  00a5c	e3130010	 tst         r3, #0x10
  00a60	0a000006	 beq         |$LN8@SetClockRa|
  00a64	e59d3020	 ldr         r3, [sp, #0x20]
  00a68	e5931000	 ldr         r1, [r3]
  00a6c	e59f0020	 ldr         r0, [pc, #0x20]
  00a70	eb000000	 bl          NKDbgPrintfW
  00a74	e3a03001	 mov         r3, #1
  00a78	e58d3010	 str         r3, [sp, #0x10]
  00a7c	ea000001	 b           |$LN9@SetClockRa|
  00a80		 |$LN8@SetClockRa|
  00a80	e3a03000	 mov         r3, #0
  00a84	e58d3010	 str         r3, [sp, #0x10]
  00a88		 |$LN9@SetClockRa|

; 392  : }

  00a88	e28dd014	 add         sp, sp, #0x14
  00a8c	e89d6000	 ldmia       sp, {sp, lr}
  00a90	e12fff1e	 bx          lr
  00a94		 |$LN13@SetClockRa|
  00a94		 |$LN14@SetClockRa|
  00a94	00000000	 DCD         |??_C@_1HK@KCPIOLKC@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAC?$AAl?$AAo?$AAc?$AAk?$AAR?$AAa?$AAt@|
  00a98		 |$LN15@SetClockRa|
  00a98	00000000	 DCD         |dpCurSettings|
  00a9c		 |$LN16@SetClockRa|
  00a9c	05b8d800	 DCD         0x5b8d800
  00aa0		 |$LN17@SetClockRa|
  00aa0	00000000	 DCD         |??_C@_1CC@NPNHOABI@?$AAw?$AAD?$AAi?$AAv?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AA@|
  00aa4		 |$LN18@SetClockRa|
  00aa4	00000000	 DCD         |??_C@_1IO@PBBDNKNJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAC?$AAl?$AAo?$AAc?$AAk?$AAR?$AAa?$AAt@|
  00aa8		 |$M42425|

			 ENDP  ; |?SetClockRate@CSDIOControllerBase@@QAAXPAK@Z|, CSDIOControllerBase::SetClockRate

	IMPORT	|KernelIoControl|

  00038			 AREA	 |.pdata|, PDATA
|$T42442| DCD	|$LN5@ClockOn|
	DCD	0x40001f04
; Function compile flags: /Odtp

  00aa8			 AREA	 |.text|, CODE, ARM

  00aa8		 |?ClockOn@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::ClockOn

; 397  : {

  00aa8		 |$LN5@ClockOn|
  00aa8	e1a0c00d	 mov         r12, sp
  00aac	e92d0001	 stmdb       sp!, {r0}
  00ab0	e92d5000	 stmdb       sp!, {r12, lr}
  00ab4	e24dd020	 sub         sp, sp, #0x20
  00ab8		 |$M42439|

; 398  :     // Enable MMC clock - clocks on by default
; 399  :     DWORD cbRet;
; 400  :     DWORD regVal = PRCM_FCLKEN1_CORE_EN_MMC;

  00ab8	e3a03301	 mov         r3, #1, 6
  00abc	e58d300c	 str         r3, [sp, #0xC]

; 401  :     KernelIoControl(IOCTL_FCLK1_ENB, (VOID *)&regVal, sizeof(DWORD), (VOID *)&regVal, sizeof(DWORD), &cbRet);

  00ac0	e28d3008	 add         r3, sp, #8
  00ac4	e58d3004	 str         r3, [sp, #4]
  00ac8	e3a03004	 mov         r3, #4
  00acc	e58d3000	 str         r3, [sp]
  00ad0	e28d300c	 add         r3, sp, #0xC
  00ad4	e3a02004	 mov         r2, #4
  00ad8	e28d100c	 add         r1, sp, #0xC
  00adc	e59f003c	 ldr         r0, [pc, #0x3C]
  00ae0	eb000000	 bl          KernelIoControl

; 402  :     regVal = PRCM_ICLKEN1_CORE_EN_MMC;

  00ae4	e3a03301	 mov         r3, #1, 6
  00ae8	e58d300c	 str         r3, [sp, #0xC]

; 403  :     KernelIoControl(IOCTL_ICLK1_ENB, (VOID *)&regVal, sizeof(DWORD), (VOID *)&regVal, sizeof(DWORD), &cbRet);   

  00aec	e28d3008	 add         r3, sp, #8
  00af0	e58d3004	 str         r3, [sp, #4]
  00af4	e3a03004	 mov         r3, #4
  00af8	e58d3000	 str         r3, [sp]
  00afc	e28d300c	 add         r3, sp, #0xC
  00b00	e3a02004	 mov         r2, #4
  00b04	e28d100c	 add         r1, sp, #0xC
  00b08	e59f000c	 ldr         r0, [pc, #0xC]
  00b0c	eb000000	 bl          KernelIoControl

; 404  : }

  00b10	e28dd020	 add         sp, sp, #0x20
  00b14	e89d6000	 ldmia       sp, {sp, lr}
  00b18	e12fff1e	 bx          lr
  00b1c		 |$LN6@ClockOn|
  00b1c		 |$LN7@ClockOn|
  00b1c	0022040c	 DCD         0x22040c
  00b20		 |$LN8@ClockOn|
  00b20	0022041c	 DCD         0x22041c
  00b24		 |$M42440|

			 ENDP  ; |?ClockOn@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::ClockOn


  00040			 AREA	 |.pdata|, PDATA
|$T42454| DCD	|$LN5@ClockOff|
	DCD	0x40001f04
; Function compile flags: /Odtp

  00b24			 AREA	 |.text|, CODE, ARM

  00b24		 |?ClockOff@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::ClockOff

; 409  : {

  00b24		 |$LN5@ClockOff|
  00b24	e1a0c00d	 mov         r12, sp
  00b28	e92d0001	 stmdb       sp!, {r0}
  00b2c	e92d5000	 stmdb       sp!, {r12, lr}
  00b30	e24dd020	 sub         sp, sp, #0x20
  00b34		 |$M42451|

; 410  :     // disable MMC clock
; 411  :     DWORD cbRet;
; 412  :     DWORD regVal = PRCM_FCLKEN1_CORE_EN_MMC;

  00b34	e3a03301	 mov         r3, #1, 6
  00b38	e58d300c	 str         r3, [sp, #0xC]

; 413  :     KernelIoControl(IOCTL_FCLK1_DIS, (VOID *)&regVal, sizeof(DWORD), (VOID *)&regVal, sizeof(DWORD), &cbRet);

  00b3c	e28d3008	 add         r3, sp, #8
  00b40	e58d3004	 str         r3, [sp, #4]
  00b44	e3a03004	 mov         r3, #4
  00b48	e58d3000	 str         r3, [sp]
  00b4c	e28d300c	 add         r3, sp, #0xC
  00b50	e3a02004	 mov         r2, #4
  00b54	e28d100c	 add         r1, sp, #0xC
  00b58	e3a00822	 mov         r0, #0x22, 16
  00b5c	e3800e42	 orr         r0, r0, #0x42, 28
  00b60	eb000000	 bl          KernelIoControl

; 414  :     regVal = PRCM_ICLKEN1_CORE_EN_MMC;

  00b64	e3a03301	 mov         r3, #1, 6
  00b68	e58d300c	 str         r3, [sp, #0xC]

; 415  :     KernelIoControl(IOCTL_ICLK1_DIS, (VOID *)&regVal, sizeof(DWORD), (VOID *)&regVal, sizeof(DWORD), &cbRet);   

  00b6c	e28d3008	 add         r3, sp, #8
  00b70	e58d3004	 str         r3, [sp, #4]
  00b74	e3a03004	 mov         r3, #4
  00b78	e58d3000	 str         r3, [sp]
  00b7c	e28d300c	 add         r3, sp, #0xC
  00b80	e3a02004	 mov         r2, #4
  00b84	e28d100c	 add         r1, sp, #0xC
  00b88	e3a00822	 mov         r0, #0x22, 16
  00b8c	e3800e41	 orr         r0, r0, #0x41, 28
  00b90	eb000000	 bl          KernelIoControl

; 416  : }

  00b94	e28dd020	 add         sp, sp, #0x20
  00b98	e89d6000	 ldmia       sp, {sp, lr}
  00b9c	e12fff1e	 bx          lr
  00ba0		 |$M42452|

			 ENDP  ; |?ClockOff@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::ClockOff

	EXPORT	|??_C@_1LO@CGIMODFJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JG@CIFNDOFH@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IM@LAHDELEP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JI@NGIDLIDI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LO@MLNBGAON@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1MO@NNBDGGKC@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LO@GNAMHGME@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@| [ DATA ] ; `string'
	EXPORT	|?SendCommand@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z| ; CSDIOControllerBase::SendCommand

  00048			 AREA	 |.pdata|, PDATA
|$T42506| DCD	|$LN76@SendComman|
	DCD	0x4002dc04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LO@CGIMODFJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d"
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "s"
	DCB	0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "A", 0x0, "R", 0x0, "G"
	DCB	0x0, "1", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "M", 0x0, "M"
	DCB	0x0, "C", 0x0, "_", 0x0, "A", 0x0, "R", 0x0, "G", 0x0, "2"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JG@CIFNDOFH@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d"
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "x", 0x0, "i"
	DCB	0x0, "t", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "r"
	DCB	0x0, "d", 0x0, " ", 0x0, "e", 0x0, "j", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "w", 0x0, "h"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, " ", 0x0, "s", 0x0, "e"
	DCB	0x0, "n", 0x0, "d", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "I", 0x0, "N", 0x0, "I", 0x0, "B", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IM@LAHDELEP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d"
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "x", 0x0, "i"
	DCB	0x0, "t", 0x0, ":", 0x0, " ", 0x0, "T", 0x0, "I", 0x0, "M"
	DCB	0x0, "E", 0x0, "O", 0x0, "U", 0x0, "T", 0x0, " ", 0x0, "w"
	DCB	0x0, "h", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, " ", 0x0, "s"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "I", 0x0, "N", 0x0, "I", 0x0, "B", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JI@NGIDLIDI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d"
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "a", 0x0, "r"
	DCB	0x0, "d", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "s", 0x0, "y", 0x0, " ", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "b", 0x0, "e"
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, "e", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, " ", 0x0, "s", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "!"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LO@MLNBGAON@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d"
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "m", 0x0, "d"
	DCB	0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "A", 0x0, "r", 0x0, "g"
	DCB	0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "s"
	DCB	0x0, "p", 0x0, "T", 0x0, "y", 0x0, "p", 0x0, "e", 0x0, "="
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "D", 0x0, "a", 0x0, "t", 0x0, "a"
	DCB	0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1MO@NNBDGGKC@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d"
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "m", 0x0, "d"
	DCB	0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "A", 0x0, "r", 0x0, "g"
	DCB	0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "s"
	DCB	0x0, "p", 0x0, "T", 0x0, "y", 0x0, "p", 0x0, "e", 0x0, "="
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "D", 0x0, "a", 0x0, "t", 0x0, "a"
	DCB	0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " "
	DCB	0x0, "<", 0x0, "%", 0x0, "d", 0x0, "x", 0x0, "%", 0x0, "d"
	DCB	0x0, ">", 0x0, ")", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "r", 0x0, "t", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LO@GNAMHGME@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d"
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "m", 0x0, "d"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, " ", 0x0, "A", 0x0, "r", 0x0, "g", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "p", 0x0, "T"
	DCB	0x0, "y", 0x0, "p", 0x0, "e", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, "C", 0x0, "l", 0x0, "a", 0x0, "s", 0x0, "s"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00ba0			 AREA	 |.text|, CODE, ARM

  00ba0		 |?SendCommand@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z| PROC ; CSDIOControllerBase::SendCommand

; 423  : {

  00ba0		 |$LN76@SendComman|
  00ba0	e1a0c00d	 mov         r12, sp
  00ba4	e92d0003	 stmdb       sp!, {r0, r1}
  00ba8	e92d5000	 stmdb       sp!, {r12, lr}
  00bac	e24dd0b0	 sub         sp, sp, #0xB0
  00bb0		 |$M42503|

; 424  :     WORD MMC_CMD;
; 425  :     DWORD dwCurrentTickCount;
; 426  :     DWORD dwTimeout;
; 427  :     DWORD dwCountStart;
; 428  :     BOOL  fTimeoutOverflow = FALSE;

  00bb0	e3a03000	 mov         r3, #0
  00bb4	e58d3014	 str         r3, [sp, #0x14]

; 429  :     UINT16 Cmd = pRequest->CommandCode;

  00bb8	e59d30bc	 ldr         r3, [sp, #0xBC]
  00bbc	e2833014	 add         r3, r3, #0x14
  00bc0	e5d33000	 ldrb        r3, [r3]
  00bc4	e1cd32b8	 strh        r3, [sp, #0x28]

; 430  :     UINT32 Arg = pRequest->CommandArgument;

  00bc8	e59d30bc	 ldr         r3, [sp, #0xBC]
  00bcc	e2833018	 add         r3, r3, #0x18
  00bd0	e5933000	 ldr         r3, [r3]
  00bd4	e58d3010	 str         r3, [sp, #0x10]

; 431  :     UINT16 respType = pRequest->CommandResponse.ResponseType;

  00bd8	e59d30bc	 ldr         r3, [sp, #0xBC]
  00bdc	e283301c	 add         r3, r3, #0x1C
  00be0	e5933000	 ldr         r3, [r3]
  00be4	e1a03803	 mov         r3, r3, lsl #16
  00be8	e1a03823	 mov         r3, r3, lsr #16
  00bec	e1cd32b0	 strh        r3, [sp, #0x20]

; 432  :     UINT16 TransferClass = pRequest->TransferClass;

  00bf0	e59d30bc	 ldr         r3, [sp, #0xBC]
  00bf4	e2833010	 add         r3, r3, #0x10
  00bf8	e5933000	 ldr         r3, [r3]
  00bfc	e1a03803	 mov         r3, r3, lsl #16
  00c00	e1a03823	 mov         r3, r3, lsr #16
  00c04	e1cd30bc	 strh        r3, [sp, #0xC]

; 433  : 
; 434  :     DEBUGMSG(SHC_SEND_ZONE, (L"CSDIOControllerBase::SendCommand: "
; 435  :         L"Cmd = 0x%x Arg = 0x%x respType = 0x%x TransferClass = 0x%x\r\n", Cmd, Arg, respType, TransferClass
; 436  :     ));

  00c08	e59f3ad4	 ldr         r3, [pc, #0xAD4]
  00c0c	e5933440	 ldr         r3, [r3, #0x440]
  00c10	e3130002	 tst         r3, #2
  00c14	0a000009	 beq         |$LN33@SendComman|
  00c18	e1dd30bc	 ldrh        r3, [sp, #0xC]
  00c1c	e58d3000	 str         r3, [sp]
  00c20	e1dd32b0	 ldrh        r3, [sp, #0x20]
  00c24	e59d2010	 ldr         r2, [sp, #0x10]
  00c28	e1dd12b8	 ldrh        r1, [sp, #0x28]
  00c2c	e59f0ad8	 ldr         r0, [pc, #0xAD8]
  00c30	eb000000	 bl          NKDbgPrintfW
  00c34	e3a03001	 mov         r3, #1
  00c38	e58d3048	 str         r3, [sp, #0x48]
  00c3c	ea000001	 b           |$LN34@SendComman|
  00c40		 |$LN33@SendComman|
  00c40	e3a03000	 mov         r3, #0
  00c44	e58d3048	 str         r3, [sp, #0x48]
  00c48		 |$LN34@SendComman|

; 437  : 
; 438  :     if( TransferClass == SD_READ || TransferClass == SD_WRITE )

  00c48	e1dd30bc	 ldrh        r3, [sp, #0xC]
  00c4c	e3530000	 cmp         r3, #0
  00c50	0a000002	 beq         |$LN29@SendComman|
  00c54	e1dd30bc	 ldrh        r3, [sp, #0xC]
  00c58	e3530001	 cmp         r3, #1
  00c5c	1a000020	 bne         |$LN30@SendComman|
  00c60		 |$LN29@SendComman|

; 439  :     {
; 440  :         DEBUGMSG(SHC_SDBUS_INTERACT_ZONE, (L"CSDIOControllerBase::SendCommand: "
; 441  :             L"Cmd=0x%04x, Arg=0x%08x, RespType=0x%04x, Data=0x%x <%dx%d>) starts\r\n", 
; 442  :             Cmd, Arg, respType, (TransferClass==SD_COMMAND)?FALSE:TRUE, pRequest->NumBlocks, pRequest->BlockSize
; 443  :         ));

  00c60	e59f3a7c	 ldr         r3, [pc, #0xA7C]
  00c64	e5933440	 ldr         r3, [r3, #0x440]
  00c68	e3130040	 tst         r3, #0x40
  00c6c	0a000019	 beq         |$LN37@SendComman|
  00c70	e1dd30bc	 ldrh        r3, [sp, #0xC]
  00c74	e3530002	 cmp         r3, #2
  00c78	1a000002	 bne         |$LN35@SendComman|
  00c7c	e3a03000	 mov         r3, #0
  00c80	e58d304c	 str         r3, [sp, #0x4C]
  00c84	ea000001	 b           |$LN36@SendComman|
  00c88		 |$LN35@SendComman|
  00c88	e3a03001	 mov         r3, #1
  00c8c	e58d304c	 str         r3, [sp, #0x4C]
  00c90		 |$LN36@SendComman|
  00c90	e59d30bc	 ldr         r3, [sp, #0xBC]
  00c94	e2833040	 add         r3, r3, #0x40
  00c98	e5933000	 ldr         r3, [r3]
  00c9c	e58d3008	 str         r3, [sp, #8]
  00ca0	e59d30bc	 ldr         r3, [sp, #0xBC]
  00ca4	e283303c	 add         r3, r3, #0x3C
  00ca8	e5933000	 ldr         r3, [r3]
  00cac	e58d3004	 str         r3, [sp, #4]
  00cb0	e59d304c	 ldr         r3, [sp, #0x4C]
  00cb4	e58d3000	 str         r3, [sp]
  00cb8	e1dd32b0	 ldrh        r3, [sp, #0x20]
  00cbc	e59d2010	 ldr         r2, [sp, #0x10]
  00cc0	e1dd12b8	 ldrh        r1, [sp, #0x28]
  00cc4	e59f0a3c	 ldr         r0, [pc, #0xA3C]
  00cc8	eb000000	 bl          NKDbgPrintfW
  00ccc	e3a03001	 mov         r3, #1
  00cd0	e58d3050	 str         r3, [sp, #0x50]
  00cd4	ea000001	 b           |$LN38@SendComman|
  00cd8		 |$LN37@SendComman|
  00cd8	e3a03000	 mov         r3, #0
  00cdc	e58d3050	 str         r3, [sp, #0x50]
  00ce0		 |$LN38@SendComman|

; 444  :     }
; 445  :     else

  00ce0	ea000017	 b           |$LN28@SendComman|
  00ce4		 |$LN30@SendComman|

; 446  :     {
; 447  :         DEBUGMSG(SHC_SDBUS_INTERACT_ZONE, (L"CSDIOControllerBase::SendCommand: "
; 448  :             L"Cmd=0x%04x, Arg=0x%08x, RespType=0x%04x, Data=0x%x) starts\r\n", 
; 449  :             Cmd, Arg, respType, (TransferClass==SD_COMMAND)?FALSE:TRUE
; 450  :         ));

  00ce4	e59f39f8	 ldr         r3, [pc, #0x9F8]
  00ce8	e5933440	 ldr         r3, [r3, #0x440]
  00cec	e3130040	 tst         r3, #0x40
  00cf0	0a000011	 beq         |$LN41@SendComman|
  00cf4	e1dd30bc	 ldrh        r3, [sp, #0xC]
  00cf8	e3530002	 cmp         r3, #2
  00cfc	1a000002	 bne         |$LN39@SendComman|
  00d00	e3a03000	 mov         r3, #0
  00d04	e58d3054	 str         r3, [sp, #0x54]
  00d08	ea000001	 b           |$LN40@SendComman|
  00d0c		 |$LN39@SendComman|
  00d0c	e3a03001	 mov         r3, #1
  00d10	e58d3054	 str         r3, [sp, #0x54]
  00d14		 |$LN40@SendComman|
  00d14	e59d3054	 ldr         r3, [sp, #0x54]
  00d18	e58d3000	 str         r3, [sp]
  00d1c	e1dd32b0	 ldrh        r3, [sp, #0x20]
  00d20	e59d2010	 ldr         r2, [sp, #0x10]
  00d24	e1dd12b8	 ldrh        r1, [sp, #0x28]
  00d28	e59f09d4	 ldr         r0, [pc, #0x9D4]
  00d2c	eb000000	 bl          NKDbgPrintfW
  00d30	e3a03001	 mov         r3, #1
  00d34	e58d3058	 str         r3, [sp, #0x58]
  00d38	ea000001	 b           |$LN42@SendComman|
  00d3c		 |$LN41@SendComman|
  00d3c	e3a03000	 mov         r3, #0
  00d40	e58d3058	 str         r3, [sp, #0x58]
  00d44		 |$LN42@SendComman|
  00d44		 |$LN28@SendComman|

; 451  :     }
; 452  : 
; 453  :     // turn the clock on
; 454  :     ClockOn();

  00d44	e59d00b8	 ldr         r0, [sp, #0xB8]
  00d48	eb000000	 bl          |?ClockOn@CSDIOControllerBase@@QAAXXZ|

; 455  : 
; 456  :     WORD MMC_STAT = Read_MMC_STAT();

  00d4c	e59d00b8	 ldr         r0, [sp, #0xB8]
  00d50	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|
  00d54	e1cd05bc	 strh        r0, [sp, #0x5C]
  00d58	e1dd35bc	 ldrh        r3, [sp, #0x5C]
  00d5c	e1cd31ba	 strh        r3, [sp, #0x1A]

; 457  : 
; 458  :     if ( MMC_STAT & MMC_STAT_CB )

  00d60	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  00d64	e3130004	 tst         r3, #4
  00d68	0a00000a	 beq         |$LN27@SendComman|

; 459  :     {
; 460  :         DEBUGMSG(SHC_BUSY_STATE_ZONE, (L"CSDIOControllerBase::SendCommand: "
; 461  :             L"Card in busy state before command sent!\r\n"
; 462  :         ));

  00d6c	e59f3970	 ldr         r3, [pc, #0x970]
  00d70	e5933440	 ldr         r3, [r3, #0x440]
  00d74	e3130080	 tst         r3, #0x80
  00d78	0a000004	 beq         |$LN43@SendComman|
  00d7c	e59f097c	 ldr         r0, [pc, #0x97C]
  00d80	eb000000	 bl          NKDbgPrintfW
  00d84	e3a03001	 mov         r3, #1
  00d88	e58d3060	 str         r3, [sp, #0x60]
  00d8c	ea000001	 b           |$LN44@SendComman|
  00d90		 |$LN43@SendComman|
  00d90	e3a03000	 mov         r3, #0
  00d94	e58d3060	 str         r3, [sp, #0x60]
  00d98		 |$LN44@SendComman|
  00d98		 |$LN27@SendComman|

; 463  :     }
; 464  : 
; 465  :     if (m_fFirstTime) 

  00d98	e59d30b8	 ldr         r3, [sp, #0xB8]
  00d9c	e2833080	 add         r3, r3, #0x80
  00da0	e5933000	 ldr         r3, [r3]
  00da4	e3530000	 cmp         r3, #0
  00da8	0a000099	 beq         |$LN26@SendComman|

; 466  :     {
; 467  :         m_fFirstTime = FALSE;

  00dac	e59d30b8	 ldr         r3, [sp, #0xB8]
  00db0	e2832080	 add         r2, r3, #0x80
  00db4	e3a03000	 mov         r3, #0
  00db8	e5823000	 str         r3, [r2]

; 468  : 
; 469  :         // Clear the MMC_STAT register
; 470  :         Write_MMC_STAT( Read_MMC_STAT() & (~MMC_STAT_CIRQ) );

  00dbc	e59d00b8	 ldr         r0, [sp, #0xB8]
  00dc0	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|
  00dc4	e1cd06b4	 strh        r0, [sp, #0x64]
  00dc8	e1dd36b4	 ldrh        r3, [sp, #0x64]
  00dcc	e1a02003	 mov         r2, r3
  00dd0	e3e03a02	 mvn         r3, #2, 20
  00dd4	e0023003	 and         r3, r2, r3
  00dd8	e1a01803	 mov         r1, r3, lsl #16
  00ddc	e1a01821	 mov         r1, r1, lsr #16
  00de0	e59d00b8	 ldr         r0, [sp, #0xB8]
  00de4	eb000000	 bl          |?Write_MMC_STAT@CSDIOControllerBase@@QAAXG@Z|

; 471  : 
; 472  :         // temporarily mask all interrupts
; 473  :         OUTREG16(&m_vpSDIOReg->MMC_IE, 0x00);

  00de8	e59d30b8	 ldr         r3, [sp, #0xB8]
  00dec	e2833088	 add         r3, r3, #0x88
  00df0	e5933000	 ldr         r3, [r3]
  00df4	e2832014	 add         r2, r3, #0x14
  00df8	e3a03000	 mov         r3, #0
  00dfc	e1c230b0	 strh        r3, [r2]

; 474  : 
; 475  :         // send the initialization command
; 476  :         OUTREG16(&m_vpSDIOReg->MMC_CMD, 0x80);

  00e00	e59d30b8	 ldr         r3, [sp, #0xB8]
  00e04	e2833088	 add         r3, r3, #0x88
  00e08	e5932000	 ldr         r2, [r3]
  00e0c	e3a03080	 mov         r3, #0x80
  00e10	e1c230b0	 strh        r3, [r2]

; 477  : 
; 478  :         // calculate timeout conditions
; 479  :         dwCountStart = GetTickCount();

  00e14	eb000000	 bl          GetTickCount
  00e18	e58d0068	 str         r0, [sp, #0x68]
  00e1c	e59d3068	 ldr         r3, [sp, #0x68]
  00e20	e58d301c	 str         r3, [sp, #0x1C]

; 480  :         dwTimeout = dwCountStart + m_dwMaxTimeout;

  00e24	e59d30b8	 ldr         r3, [sp, #0xB8]
  00e28	e283307c	 add         r3, r3, #0x7C
  00e2c	e59d201c	 ldr         r2, [sp, #0x1C]
  00e30	e5933000	 ldr         r3, [r3]
  00e34	e0823003	 add         r3, r2, r3
  00e38	e58d302c	 str         r3, [sp, #0x2C]

; 481  :         if( dwTimeout < dwCountStart )

  00e3c	e59d202c	 ldr         r2, [sp, #0x2C]
  00e40	e59d301c	 ldr         r3, [sp, #0x1C]
  00e44	e1520003	 cmp         r2, r3
  00e48	2a000001	 bcs         |$LN25@SendComman|

; 482  :             fTimeoutOverflow = TRUE;

  00e4c	e3a03001	 mov         r3, #1
  00e50	e58d3014	 str         r3, [sp, #0x14]
  00e54		 |$LN25@SendComman|
  00e54		 |$LN24@SendComman|

; 483  : 
; 484  :         // poll until command complete
; 485  :         while( !( Read_MMC_STAT() & ( MMC_IE_EOC | MMC_IE_CTO | MMC_IE_CCRC | MMC_IE_CERR ) ) )

  00e54	e59d00b8	 ldr         r0, [sp, #0xB8]
  00e58	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|
  00e5c	e1cd06bc	 strh        r0, [sp, #0x6C]
  00e60	e1dd36bc	 ldrh        r3, [sp, #0x6C]
  00e64	e1a02003	 mov         r2, r3
  00e68	e3a03c41	 mov         r3, #0x41, 24
  00e6c	e3833081	 orr         r3, r3, #0x81
  00e70	e1120003	 tst         r2, r3
  00e74	1a000054	 bne         |$LN23@SendComman|

; 486  :         {
; 487  :             // check for a timeout
; 488  :             dwCurrentTickCount = GetTickCount();

  00e78	eb000000	 bl          GetTickCount
  00e7c	e58d0070	 str         r0, [sp, #0x70]
  00e80	e59d3070	 ldr         r3, [sp, #0x70]
  00e84	e58d3024	 str         r3, [sp, #0x24]

; 489  :             if( fTimeoutOverflow ? ( dwTimeout < dwCurrentTickCount && dwCurrentTickCount < dwCountStart )
; 490  :                 : ( dwTimeout < dwCurrentTickCount || dwCurrentTickCount < dwCountStart ) )

  00e88	e59d3014	 ldr         r3, [sp, #0x14]
  00e8c	e3530000	 cmp         r3, #0
  00e90	0a00000f	 beq         |$LN49@SendComman|
  00e94	e59d202c	 ldr         r2, [sp, #0x2C]
  00e98	e59d3024	 ldr         r3, [sp, #0x24]
  00e9c	e1520003	 cmp         r2, r3
  00ea0	2a000006	 bcs         |$LN45@SendComman|
  00ea4	e59d2024	 ldr         r2, [sp, #0x24]
  00ea8	e59d301c	 ldr         r3, [sp, #0x1C]
  00eac	e1520003	 cmp         r2, r3
  00eb0	2a000002	 bcs         |$LN45@SendComman|
  00eb4	e3a03001	 mov         r3, #1
  00eb8	e58d3074	 str         r3, [sp, #0x74]
  00ebc	ea000001	 b           |$LN48@SendComman|
  00ec0		 |$LN45@SendComman|
  00ec0	e3a03000	 mov         r3, #0
  00ec4	e58d3074	 str         r3, [sp, #0x74]
  00ec8		 |$LN48@SendComman|
  00ec8	e59d3074	 ldr         r3, [sp, #0x74]
  00ecc	e58d3078	 str         r3, [sp, #0x78]
  00ed0	ea00000e	 b           |$LN50@SendComman|
  00ed4		 |$LN49@SendComman|
  00ed4	e59d202c	 ldr         r2, [sp, #0x2C]
  00ed8	e59d3024	 ldr         r3, [sp, #0x24]
  00edc	e1520003	 cmp         r2, r3
  00ee0	3a000006	 bcc         |$LN46@SendComman|
  00ee4	e59d2024	 ldr         r2, [sp, #0x24]
  00ee8	e59d301c	 ldr         r3, [sp, #0x1C]
  00eec	e1520003	 cmp         r2, r3
  00ef0	3a000002	 bcc         |$LN46@SendComman|
  00ef4	e3a03000	 mov         r3, #0
  00ef8	e58d307c	 str         r3, [sp, #0x7C]
  00efc	ea000001	 b           |$LN47@SendComman|
  00f00		 |$LN46@SendComman|
  00f00	e3a03001	 mov         r3, #1
  00f04	e58d307c	 str         r3, [sp, #0x7C]
  00f08		 |$LN47@SendComman|
  00f08	e59d307c	 ldr         r3, [sp, #0x7C]
  00f0c	e58d3078	 str         r3, [sp, #0x78]
  00f10		 |$LN50@SendComman|
  00f10	e59d3078	 ldr         r3, [sp, #0x78]
  00f14	e3530000	 cmp         r3, #0
  00f18	0a00000f	 beq         |$LN22@SendComman|

; 491  :             {
; 492  :                 DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::SendCommand: "
; 493  :                     L"Exit: TIMEOUT while sending INIB.\r\n"
; 494  :                 ));

  00f1c	e59f37c0	 ldr         r3, [pc, #0x7C0]
  00f20	e5933440	 ldr         r3, [r3, #0x440]
  00f24	e3130902	 tst         r3, #2, 18
  00f28	0a000004	 beq         |$LN51@SendComman|
  00f2c	e59f07c8	 ldr         r0, [pc, #0x7C8]
  00f30	eb000000	 bl          NKDbgPrintfW
  00f34	e3a03001	 mov         r3, #1
  00f38	e58d3080	 str         r3, [sp, #0x80]
  00f3c	ea000001	 b           |$LN52@SendComman|
  00f40		 |$LN51@SendComman|
  00f40	e3a03000	 mov         r3, #0
  00f44	e58d3080	 str         r3, [sp, #0x80]
  00f48		 |$LN52@SendComman|

; 495  :                 ClockOff();

  00f48	e59d00b8	 ldr         r0, [sp, #0xB8]
  00f4c	eb000000	 bl          |?ClockOff@CSDIOControllerBase@@QAAXXZ|

; 496  :                 return SD_API_STATUS_UNSUCCESSFUL;

  00f50	e3a0310f	 mov         r3, #0xF, 2
  00f54	e58d3044	 str         r3, [sp, #0x44]
  00f58	ea0001dc	 b           |$LN31@SendComman|
  00f5c		 |$LN22@SendComman|

; 497  :             }
; 498  : 
; 499  :             // check for card ejection
; 500  :             if( !SDCardDetect() )

  00f5c	e59d30b8	 ldr         r3, [sp, #0xB8]
  00f60	e5933000	 ldr         r3, [r3]
  00f64	e2833014	 add         r3, r3, #0x14
  00f68	e59d00b8	 ldr         r0, [sp, #0xB8]
  00f6c	e5933000	 ldr         r3, [r3]
  00f70	e1a0e00f	 mov         lr, pc
  00f74	e12fff13	 bx          r3
  00f78	e58d0084	 str         r0, [sp, #0x84]
  00f7c	e59d3084	 ldr         r3, [sp, #0x84]
  00f80	e3530000	 cmp         r3, #0
  00f84	1a00000f	 bne         |$LN21@SendComman|

; 501  :             {
; 502  :                 DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::SendCommand: "
; 503  :                     L"Exit: card ejected while sending INIB.\r\n"
; 504  :                 ));

  00f88	e59f3754	 ldr         r3, [pc, #0x754]
  00f8c	e5933440	 ldr         r3, [r3, #0x440]
  00f90	e3130902	 tst         r3, #2, 18
  00f94	0a000004	 beq         |$LN53@SendComman|
  00f98	e59f0758	 ldr         r0, [pc, #0x758]
  00f9c	eb000000	 bl          NKDbgPrintfW
  00fa0	e3a03001	 mov         r3, #1
  00fa4	e58d3088	 str         r3, [sp, #0x88]
  00fa8	ea000001	 b           |$LN54@SendComman|
  00fac		 |$LN53@SendComman|
  00fac	e3a03000	 mov         r3, #0
  00fb0	e58d3088	 str         r3, [sp, #0x88]
  00fb4		 |$LN54@SendComman|

; 505  :                 ClockOff();

  00fb4	e59d00b8	 ldr         r0, [sp, #0xB8]
  00fb8	eb000000	 bl          |?ClockOff@CSDIOControllerBase@@QAAXXZ|

; 506  :                 return SD_API_STATUS_DEVICE_REMOVED;

  00fbc	e3a03147	 mov         r3, #0x47, 2
  00fc0	e58d3044	 str         r3, [sp, #0x44]
  00fc4	ea0001c1	 b           |$LN31@SendComman|
  00fc8		 |$LN21@SendComman|

; 507  :             }
; 508  :         }

  00fc8	eaffffa1	 b           |$LN24@SendComman|
  00fcc		 |$LN23@SendComman|

; 509  : 
; 510  :         // Clear the MMC_STAT register
; 511  :         Write_MMC_STAT( Read_MMC_STAT() & (~MMC_STAT_CIRQ) );

  00fcc	e59d00b8	 ldr         r0, [sp, #0xB8]
  00fd0	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|
  00fd4	e1cd08bc	 strh        r0, [sp, #0x8C]
  00fd8	e1dd38bc	 ldrh        r3, [sp, #0x8C]
  00fdc	e1a02003	 mov         r2, r3
  00fe0	e3e03a02	 mvn         r3, #2, 20
  00fe4	e0023003	 and         r3, r2, r3
  00fe8	e1a01803	 mov         r1, r3, lsl #16
  00fec	e1a01821	 mov         r1, r1, lsr #16
  00ff0	e59d00b8	 ldr         r0, [sp, #0xB8]
  00ff4	eb000000	 bl          |?Write_MMC_STAT@CSDIOControllerBase@@QAAXG@Z|

; 512  : 
; 513  :         // unmask interrupts
; 514  :         OUTREG16(&m_vpSDIOReg->MMC_IE, (MMC_IE_EOC | MMC_IE_CTO | MMC_IE_CCRC | MMC_IE_CERR | MMC_IE_BRS));           

  00ff8	e59d30b8	 ldr         r3, [sp, #0xB8]
  00ffc	e2833088	 add         r3, r3, #0x88
  01000	e5933000	 ldr         r3, [r3]
  01004	e2832014	 add         r2, r3, #0x14
  01008	e3a03c41	 mov         r3, #0x41, 24
  0100c	e3833089	 orr         r3, r3, #0x89
  01010	e1c230b0	 strh        r3, [r2]
  01014		 |$LN26@SendComman|

; 515  :     }
; 516  : 
; 517  :     // Clear the MMC_STAT register before issues command.
; 518  :     Write_MMC_STAT( Read_MMC_STAT() & (~MMC_STAT_CIRQ) );

  01014	e59d00b8	 ldr         r0, [sp, #0xB8]
  01018	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|
  0101c	e1cd08be	 strh        r0, [sp, #0x8E]
  01020	e1dd38be	 ldrh        r3, [sp, #0x8E]
  01024	e1a02003	 mov         r2, r3
  01028	e3e03a02	 mvn         r3, #2, 20
  0102c	e0023003	 and         r3, r2, r3
  01030	e1a01803	 mov         r1, r3, lsl #16
  01034	e1a01821	 mov         r1, r1, lsr #16
  01038	e59d00b8	 ldr         r0, [sp, #0xB8]
  0103c	eb000000	 bl          |?Write_MMC_STAT@CSDIOControllerBase@@QAAXG@Z|

; 519  : 
; 520  :     MMC_CMD = Cmd;

  01040	e1dd32b8	 ldrh        r3, [sp, #0x28]
  01044	e1cd31b8	 strh        r3, [sp, #0x18]

; 521  :     ASSERT( ( MMC_CMD & 0x003f ) == MMC_CMD );

  01048	e1dd31b8	 ldrh        r3, [sp, #0x18]
  0104c	e203203f	 and         r2, r3, #0x3F
  01050	e1dd31b8	 ldrh        r3, [sp, #0x18]
  01054	e1520003	 cmp         r2, r3
  01058	1a000002	 bne         |$LN55@SendComman|
  0105c	e3a03001	 mov         r3, #1
  01060	e58d3090	 str         r3, [sp, #0x90]
  01064	ea000008	 b           |$LN56@SendComman|
  01068		 |$LN55@SendComman|
  01068	e3a03c02	 mov         r3, #2, 24
  0106c	e3833009	 orr         r3, r3, #9
  01070	e59f267c	 ldr         r2, [pc, #0x67C]
  01074	e59f1674	 ldr         r1, [pc, #0x674]
  01078	e59f066c	 ldr         r0, [pc, #0x66C]
  0107c	eb000000	 bl          NKDbgPrintfW
  01080	e6000010	 __debugbreak_ce
  01084	e3a03000	 mov         r3, #0
  01088	e58d3090	 str         r3, [sp, #0x90]
  0108c		 |$LN56@SendComman|

; 522  : 
; 523  :     if( m_fAppCmdMode )

  0108c	e59d30b8	 ldr         r3, [sp, #0xB8]
  01090	e2833044	 add         r3, r3, #0x44
  01094	e5933000	 ldr         r3, [r3]
  01098	e3530000	 cmp         r3, #0
  0109c	0a000024	 beq         |$LN20@SendComman|

; 524  :     {
; 525  :         ASSERT( gwaCMD[Cmd].ACmd != 0 );

  010a0	e1dd32b8	 ldrh        r3, [sp, #0x28]
  010a4	e1a01003	 mov         r1, r3
  010a8	e3a0300a	 mov         r3, #0xA
  010ac	e0020391	 mul         r2, r1, r3
  010b0	e59f3630	 ldr         r3, [pc, #0x630]
  010b4	e0833002	 add         r3, r3, r2
  010b8	e2833001	 add         r3, r3, #1
  010bc	e5d33000	 ldrb        r3, [r3]
  010c0	e3530000	 cmp         r3, #0
  010c4	0a000002	 beq         |$LN57@SendComman|
  010c8	e3a03001	 mov         r3, #1
  010cc	e58d3094	 str         r3, [sp, #0x94]
  010d0	ea000008	 b           |$LN58@SendComman|
  010d4		 |$LN57@SendComman|
  010d4	e3a03c02	 mov         r3, #2, 24
  010d8	e383300d	 orr         r3, r3, #0xD
  010dc	e59f2610	 ldr         r2, [pc, #0x610]
  010e0	e59f1608	 ldr         r1, [pc, #0x608]
  010e4	e59f0600	 ldr         r0, [pc, #0x600]
  010e8	eb000000	 bl          NKDbgPrintfW
  010ec	e6000010	 __debugbreak_ce
  010f0	e3a03000	 mov         r3, #0
  010f4	e58d3094	 str         r3, [sp, #0x94]
  010f8		 |$LN58@SendComman|

; 526  :         MMC_CMD |= gwaCMD[Cmd].ACMD_TYPE;

  010f8	e1dd32b8	 ldrh        r3, [sp, #0x28]
  010fc	e1a01003	 mov         r1, r3
  01100	e3a0300a	 mov         r3, #0xA
  01104	e0020391	 mul         r2, r1, r3
  01108	e59f35d8	 ldr         r3, [pc, #0x5D8]
  0110c	e0833002	 add         r3, r3, r2
  01110	e2833006	 add         r3, r3, #6
  01114	e1d330b0	 ldrh        r3, [r3]
  01118	e1a02003	 mov         r2, r3
  0111c	e1dd31b8	 ldrh        r3, [sp, #0x18]
  01120	e1833002	 orr         r3, r3, r2
  01124	e1a03803	 mov         r3, r3, lsl #16
  01128	e1a03823	 mov         r3, r3, lsr #16
  0112c	e1cd31b8	 strh        r3, [sp, #0x18]

; 527  :     }
; 528  :     else

  01130	ea000076	 b           |$LN19@SendComman|
  01134		 |$LN20@SendComman|

; 529  :     {
; 530  :         if( m_fMMCMode )

  01134	e59d30b8	 ldr         r3, [sp, #0xB8]
  01138	e2833040	 add         r3, r3, #0x40
  0113c	e5933000	 ldr         r3, [r3]
  01140	e3530000	 cmp         r3, #0
  01144	0a000045	 beq         |$LN18@SendComman|

; 531  :         {
; 532  :             ASSERT( gwaCMD[Cmd].Cmd != 0 || gwaCMD[Cmd].MMCCmd != 0 );

  01148	e1dd32b8	 ldrh        r3, [sp, #0x28]
  0114c	e1a01003	 mov         r1, r3
  01150	e3a0300a	 mov         r3, #0xA
  01154	e0020391	 mul         r2, r1, r3
  01158	e59f3588	 ldr         r3, [pc, #0x588]
  0115c	e0833002	 add         r3, r3, r2
  01160	e5d33000	 ldrb        r3, [r3]
  01164	e3530000	 cmp         r3, #0
  01168	1a000012	 bne         |$LN59@SendComman|
  0116c	e1dd32b8	 ldrh        r3, [sp, #0x28]
  01170	e1a01003	 mov         r1, r3
  01174	e3a0300a	 mov         r3, #0xA
  01178	e0020391	 mul         r2, r1, r3
  0117c	e59f3564	 ldr         r3, [pc, #0x564]
  01180	e0833002	 add         r3, r3, r2
  01184	e2833002	 add         r3, r3, #2
  01188	e5d33000	 ldrb        r3, [r3]
  0118c	e3530000	 cmp         r3, #0
  01190	1a000008	 bne         |$LN59@SendComman|
  01194	e3a03f85	 mov         r3, #0x85, 30
  01198	e59f2554	 ldr         r2, [pc, #0x554]
  0119c	e59f154c	 ldr         r1, [pc, #0x54C]
  011a0	e59f0544	 ldr         r0, [pc, #0x544]
  011a4	eb000000	 bl          NKDbgPrintfW
  011a8	e6000010	 __debugbreak_ce
  011ac	e3a03000	 mov         r3, #0
  011b0	e58d3098	 str         r3, [sp, #0x98]
  011b4	ea000001	 b           |$LN60@SendComman|
  011b8		 |$LN59@SendComman|
  011b8	e3a03001	 mov         r3, #1
  011bc	e58d3098	 str         r3, [sp, #0x98]
  011c0		 |$LN60@SendComman|

; 533  :             if( gwaCMD[Cmd].MMCCmd )

  011c0	e1dd32b8	 ldrh        r3, [sp, #0x28]
  011c4	e1a01003	 mov         r1, r3
  011c8	e3a0300a	 mov         r3, #0xA
  011cc	e0020391	 mul         r2, r1, r3
  011d0	e59f3510	 ldr         r3, [pc, #0x510]
  011d4	e0833002	 add         r3, r3, r2
  011d8	e2833002	 add         r3, r3, #2
  011dc	e5d33000	 ldrb        r3, [r3]
  011e0	e3530000	 cmp         r3, #0
  011e4	0a00000e	 beq         |$LN17@SendComman|

; 534  :                 MMC_CMD |= gwaCMD[Cmd].MMC_CMD_TYPE;

  011e8	e1dd32b8	 ldrh        r3, [sp, #0x28]
  011ec	e1a01003	 mov         r1, r3
  011f0	e3a0300a	 mov         r3, #0xA
  011f4	e0020391	 mul         r2, r1, r3
  011f8	e59f34e8	 ldr         r3, [pc, #0x4E8]
  011fc	e0833002	 add         r3, r3, r2
  01200	e2833008	 add         r3, r3, #8
  01204	e1d330b0	 ldrh        r3, [r3]
  01208	e1a02003	 mov         r2, r3
  0120c	e1dd31b8	 ldrh        r3, [sp, #0x18]
  01210	e1833002	 orr         r3, r3, r2
  01214	e1a03803	 mov         r3, r3, lsl #16
  01218	e1a03823	 mov         r3, r3, lsr #16
  0121c	e1cd31b8	 strh        r3, [sp, #0x18]

; 535  :             else

  01220	ea00000d	 b           |$LN16@SendComman|
  01224		 |$LN17@SendComman|

; 536  :                 MMC_CMD |= gwaCMD[Cmd].CMD_TYPE;

  01224	e1dd32b8	 ldrh        r3, [sp, #0x28]
  01228	e1a01003	 mov         r1, r3
  0122c	e3a0300a	 mov         r3, #0xA
  01230	e0020391	 mul         r2, r1, r3
  01234	e59f34ac	 ldr         r3, [pc, #0x4AC]
  01238	e0833002	 add         r3, r3, r2
  0123c	e2833004	 add         r3, r3, #4
  01240	e1d330b0	 ldrh        r3, [r3]
  01244	e1a02003	 mov         r2, r3
  01248	e1dd31b8	 ldrh        r3, [sp, #0x18]
  0124c	e1833002	 orr         r3, r3, r2
  01250	e1a03803	 mov         r3, r3, lsl #16
  01254	e1a03823	 mov         r3, r3, lsr #16
  01258	e1cd31b8	 strh        r3, [sp, #0x18]
  0125c		 |$LN16@SendComman|

; 537  :         }
; 538  :         else

  0125c	ea00002b	 b           |$LN15@SendComman|
  01260		 |$LN18@SendComman|

; 539  :         {
; 540  :             ASSERT( gwaCMD[Cmd].Cmd != 0 || gwaCMD[Cmd].MMCCmd != 0 );

  01260	e1dd32b8	 ldrh        r3, [sp, #0x28]
  01264	e1a01003	 mov         r1, r3
  01268	e3a0300a	 mov         r3, #0xA
  0126c	e0020391	 mul         r2, r1, r3
  01270	e59f3470	 ldr         r3, [pc, #0x470]
  01274	e0833002	 add         r3, r3, r2
  01278	e5d33000	 ldrb        r3, [r3]
  0127c	e3530000	 cmp         r3, #0
  01280	1a000012	 bne         |$LN61@SendComman|
  01284	e1dd32b8	 ldrh        r3, [sp, #0x28]
  01288	e1a01003	 mov         r1, r3
  0128c	e3a0300a	 mov         r3, #0xA
  01290	e0020391	 mul         r2, r1, r3
  01294	e59f344c	 ldr         r3, [pc, #0x44C]
  01298	e0833002	 add         r3, r3, r2
  0129c	e2833002	 add         r3, r3, #2
  012a0	e5d33000	 ldrb        r3, [r3]
  012a4	e3530000	 cmp         r3, #0
  012a8	1a000008	 bne         |$LN61@SendComman|
  012ac	e3a03f87	 mov         r3, #0x87, 30
  012b0	e59f243c	 ldr         r2, [pc, #0x43C]
  012b4	e59f1434	 ldr         r1, [pc, #0x434]
  012b8	e59f042c	 ldr         r0, [pc, #0x42C]
  012bc	eb000000	 bl          NKDbgPrintfW
  012c0	e6000010	 __debugbreak_ce
  012c4	e3a03000	 mov         r3, #0
  012c8	e58d309c	 str         r3, [sp, #0x9C]
  012cc	ea000001	 b           |$LN62@SendComman|
  012d0		 |$LN61@SendComman|
  012d0	e3a03001	 mov         r3, #1
  012d4	e58d309c	 str         r3, [sp, #0x9C]
  012d8		 |$LN62@SendComman|

; 541  :             MMC_CMD |= gwaCMD[Cmd].CMD_TYPE;

  012d8	e1dd32b8	 ldrh        r3, [sp, #0x28]
  012dc	e1a01003	 mov         r1, r3
  012e0	e3a0300a	 mov         r3, #0xA
  012e4	e0020391	 mul         r2, r1, r3
  012e8	e59f33f8	 ldr         r3, [pc, #0x3F8]
  012ec	e0833002	 add         r3, r3, r2
  012f0	e2833004	 add         r3, r3, #4
  012f4	e1d330b0	 ldrh        r3, [r3]
  012f8	e1a02003	 mov         r2, r3
  012fc	e1dd31b8	 ldrh        r3, [sp, #0x18]
  01300	e1833002	 orr         r3, r3, r2
  01304	e1a03803	 mov         r3, r3, lsl #16
  01308	e1a03823	 mov         r3, r3, lsr #16
  0130c	e1cd31b8	 strh        r3, [sp, #0x18]
  01310		 |$LN15@SendComman|
  01310		 |$LN19@SendComman|

; 542  :         }
; 543  :     }
; 544  : 
; 545  :     switch( respType )

  01310	e1dd32b0	 ldrh        r3, [sp, #0x20]
  01314	e58d30a0	 str         r3, [sp, #0xA0]
  01318	e59d30a0	 ldr         r3, [sp, #0xA0]
  0131c	e2433001	 sub         r3, r3, #1
  01320	e58d30a0	 str         r3, [sp, #0xA0]
  01324	e59d30a0	 ldr         r3, [sp, #0xA0]
  01328	e3530006	 cmp         r3, #6
  0132c	8a00003d	 bhi         |$LN13@SendComman|
  01330	e59d20a0	 ldr         r2, [sp, #0xA0]
  01334	e1a03102	 mov         r3, r2, lsl #2
  01338	e083300f	 add         r3, r3, pc
  0133c	e5933004	 ldr         r3, [r3, #4]
  01340	e08ff003	 add         pc, pc, r3
  01344		 |$LN66@SendComman|
  01344		 |$LN65@SendComman|
  01344		 |$LN67@SendComman|
  01344	00000018	 DCD         0x18
  01348		 |$LN68@SendComman|
  01348	00000030	 DCD         0x30
  0134c		 |$LN69@SendComman|
  0134c	00000048	 DCD         0x48
  01350		 |$LN70@SendComman|
  01350	00000060	 DCD         0x60
  01354		 |$LN71@SendComman|
  01354	00000078	 DCD         0x78
  01358		 |$LN72@SendComman|
  01358	000000b4	 DCD         0xb4
  0135c		 |$LN73@SendComman|
  0135c	000000cc	 DCD         0xcc
  01360		 |$LN12@SendComman|

; 546  :     {
; 547  :     case ResponseR1:                // Short response required
; 548  :         MMC_CMD |= 0x100;

  01360	e1dd31b8	 ldrh        r3, [sp, #0x18]
  01364	e3833c01	 orr         r3, r3, #1, 24
  01368	e1a03803	 mov         r3, r3, lsl #16
  0136c	e1a03823	 mov         r3, r3, lsr #16
  01370	e1cd31b8	 strh        r3, [sp, #0x18]

; 549  :         break;

  01374	ea00002b	 b           |$LN13@SendComman|
  01378		 |$LN11@SendComman|

; 550  :     case ResponseR1b:
; 551  :         MMC_CMD |= 0x900;

  01378	e1dd31b8	 ldrh        r3, [sp, #0x18]
  0137c	e3833c09	 orr         r3, r3, #9, 24
  01380	e1a03803	 mov         r3, r3, lsl #16
  01384	e1a03823	 mov         r3, r3, lsr #16
  01388	e1cd31b8	 strh        r3, [sp, #0x18]

; 552  :         break;

  0138c	ea000025	 b           |$LN13@SendComman|
  01390		 |$LN10@SendComman|

; 553  :     case ResponseR2:
; 554  :         MMC_CMD |= 0x200;

  01390	e1dd31b8	 ldrh        r3, [sp, #0x18]
  01394	e3833c02	 orr         r3, r3, #2, 24
  01398	e1a03803	 mov         r3, r3, lsl #16
  0139c	e1a03823	 mov         r3, r3, lsr #16
  013a0	e1cd31b8	 strh        r3, [sp, #0x18]

; 555  :         break;

  013a4	ea00001f	 b           |$LN13@SendComman|
  013a8		 |$LN9@SendComman|

; 556  :     case ResponseR3:
; 557  :         MMC_CMD |= 0x300;

  013a8	e1dd31b8	 ldrh        r3, [sp, #0x18]
  013ac	e3833c03	 orr         r3, r3, #3, 24
  013b0	e1a03803	 mov         r3, r3, lsl #16
  013b4	e1a03823	 mov         r3, r3, lsr #16
  013b8	e1cd31b8	 strh        r3, [sp, #0x18]

; 558  :         break;

  013bc	ea000019	 b           |$LN13@SendComman|
  013c0		 |$LN8@SendComman|

; 559  :     case ResponseR4:
; 560  :         MMC_CMD |= 0x400;

  013c0	e1dd31b8	 ldrh        r3, [sp, #0x18]
  013c4	e3833b01	 orr         r3, r3, #1, 22
  013c8	e1a03803	 mov         r3, r3, lsl #16
  013cc	e1a03823	 mov         r3, r3, lsr #16
  013d0	e1cd31b8	 strh        r3, [sp, #0x18]

; 561  :         Write_MMC_SDIO( Read_MMC_SDIO() | MMC_IE_CTO ); // disable CRC check in R4 response

  013d4	e59d00b8	 ldr         r0, [sp, #0xB8]
  013d8	eb000000	 bl          |?Read_MMC_SDIO@CSDIOControllerBase@@QAAGXZ|
  013dc	e1cd0ab4	 strh        r0, [sp, #0xA4]
  013e0	e1dd3ab4	 ldrh        r3, [sp, #0xA4]
  013e4	e3833080	 orr         r3, r3, #0x80
  013e8	e1a01803	 mov         r1, r3, lsl #16
  013ec	e1a01821	 mov         r1, r1, lsr #16
  013f0	e59d00b8	 ldr         r0, [sp, #0xB8]
  013f4	eb000000	 bl          |?Write_MMC_SDIO@CSDIOControllerBase@@QAAXG@Z|

; 562  :         break;

  013f8	ea00000a	 b           |$LN13@SendComman|
  013fc		 |$LN7@SendComman|

; 563  :     case ResponseR5:                
; 564  :         MMC_CMD |= 0x500;

  013fc	e1dd31b8	 ldrh        r3, [sp, #0x18]
  01400	e3833c05	 orr         r3, r3, #5, 24
  01404	e1a03803	 mov         r3, r3, lsl #16
  01408	e1a03823	 mov         r3, r3, lsr #16
  0140c	e1cd31b8	 strh        r3, [sp, #0x18]

; 565  :         break;

  01410	ea000004	 b           |$LN13@SendComman|
  01414		 |$LN6@SendComman|

; 566  :     case ResponseR6:
; 567  :         MMC_CMD |= 0x600;

  01414	e1dd31b8	 ldrh        r3, [sp, #0x18]
  01418	e3833c06	 orr         r3, r3, #6, 24
  0141c	e1a03803	 mov         r3, r3, lsl #16
  01420	e1a03823	 mov         r3, r3, lsr #16
  01424	e1cd31b8	 strh        r3, [sp, #0x18]
  01428		 |$LN13@SendComman|

; 568  :         break;
; 569  :     }
; 570  : 
; 571  :     if ((Cmd == SD_CMD_IO_RW_DIRECT) || (Cmd == SD_CMD_IO_RW_EXTENDED))

  01428	e1dd32b8	 ldrh        r3, [sp, #0x28]
  0142c	e3530034	 cmp         r3, #0x34
  01430	0a000002	 beq         |$LN4@SendComman|
  01434	e1dd32b8	 ldrh        r3, [sp, #0x28]
  01438	e3530035	 cmp         r3, #0x35
  0143c	1a000010	 bne         |$LN5@SendComman|
  01440		 |$LN4@SendComman|

; 572  :     {
; 573  :         Write_MMC_SDIO( Read_MMC_SDIO() | ( BIT15 | BIT6 ) );

  01440	e59d00b8	 ldr         r0, [sp, #0xB8]
  01444	eb000000	 bl          |?Read_MMC_SDIO@CSDIOControllerBase@@QAAGXZ|
  01448	e1cd0ab6	 strh        r0, [sp, #0xA6]
  0144c	e1dd3ab6	 ldrh        r3, [sp, #0xA6]
  01450	e1a02003	 mov         r2, r3
  01454	e3a03902	 mov         r3, #2, 18
  01458	e3833040	 orr         r3, r3, #0x40
  0145c	e1823003	 orr         r3, r2, r3
  01460	e1a01803	 mov         r1, r3, lsl #16
  01464	e1a01821	 mov         r1, r1, lsr #16
  01468	e59d00b8	 ldr         r0, [sp, #0xB8]
  0146c	eb000000	 bl          |?Write_MMC_SDIO@CSDIOControllerBase@@QAAXG@Z|

; 574  :         MMC_CMD |= 0x0040;

  01470	e1dd31b8	 ldrh        r3, [sp, #0x18]
  01474	e3833040	 orr         r3, r3, #0x40
  01478	e1a03803	 mov         r3, r3, lsl #16
  0147c	e1a03823	 mov         r3, r3, lsr #16
  01480	e1cd31b8	 strh        r3, [sp, #0x18]
  01484		 |$LN5@SendComman|

; 575  :     }
; 576  : 
; 577  :     CLRREG16(&m_vpSDIOReg->MMC_BUF, (MMC_BUF_RXDE|MMC_BUF_TXDE));

  01484	e59d30b8	 ldr         r3, [sp, #0xB8]
  01488	e2833088	 add         r3, r3, #0x88
  0148c	e5933000	 ldr         r3, [r3]
  01490	e283302c	 add         r3, r3, #0x2C
  01494	e1d330b0	 ldrh        r3, [r3]
  01498	e1a02003	 mov         r2, r3
  0149c	e3e03902	 mvn         r3, #2, 18
  014a0	e2233080	 eor         r3, r3, #0x80
  014a4	e0023003	 and         r3, r2, r3
  014a8	e1a02803	 mov         r2, r3, lsl #16
  014ac	e1a02822	 mov         r2, r2, lsr #16
  014b0	e59d30b8	 ldr         r3, [sp, #0xB8]
  014b4	e2833088	 add         r3, r3, #0x88
  014b8	e5933000	 ldr         r3, [r3]
  014bc	e283302c	 add         r3, r3, #0x2C
  014c0	e1c320b0	 strh        r2, [r3]

; 578  : 
; 579  :     if( TransferClass == SD_READ )

  014c4	e1dd30bc	 ldrh        r3, [sp, #0xC]
  014c8	e3530000	 cmp         r3, #0
  014cc	1a000021	 bne         |$LN3@SendComman|

; 580  :     {
; 581  :         MMC_CMD |= 0x8000;

  014d0	e1dd31b8	 ldrh        r3, [sp, #0x18]
  014d4	e3833902	 orr         r3, r3, #2, 18
  014d8	e1a03803	 mov         r3, r3, lsl #16
  014dc	e1a03823	 mov         r3, r3, lsr #16
  014e0	e1cd31b8	 strh        r3, [sp, #0x18]

; 582  :         OUTREG16(&m_vpSDIOReg->MMC_BLEN, ((WORD)(( pRequest->BlockSize - 1 ) & 0x7ff)));

  014e4	e59d30bc	 ldr         r3, [sp, #0xBC]
  014e8	e2833040	 add         r3, r3, #0x40
  014ec	e5933000	 ldr         r3, [r3]
  014f0	e2432001	 sub         r2, r3, #1
  014f4	e3a03c07	 mov         r3, #7, 24
  014f8	e38330ff	 orr         r3, r3, #0xFF
  014fc	e0023003	 and         r3, r2, r3
  01500	e1a02803	 mov         r2, r3, lsl #16
  01504	e1a02822	 mov         r2, r2, lsr #16
  01508	e59d30b8	 ldr         r3, [sp, #0xB8]
  0150c	e2833088	 add         r3, r3, #0x88
  01510	e5933000	 ldr         r3, [r3]
  01514	e2833024	 add         r3, r3, #0x24
  01518	e1c320b0	 strh        r2, [r3]

; 583  :         OUTREG16(&m_vpSDIOReg->MMC_NBLK, ((WORD)(( pRequest->NumBlocks - 1 ) & 0x7ff)));

  0151c	e59d30bc	 ldr         r3, [sp, #0xBC]
  01520	e283303c	 add         r3, r3, #0x3C
  01524	e5933000	 ldr         r3, [r3]
  01528	e2432001	 sub         r2, r3, #1
  0152c	e3a03c07	 mov         r3, #7, 24
  01530	e38330ff	 orr         r3, r3, #0xFF
  01534	e0023003	 and         r3, r2, r3
  01538	e1a02803	 mov         r2, r3, lsl #16
  0153c	e1a02822	 mov         r2, r2, lsr #16
  01540	e59d30b8	 ldr         r3, [sp, #0xB8]
  01544	e2833088	 add         r3, r3, #0x88
  01548	e5933000	 ldr         r3, [r3]
  0154c	e2833028	 add         r3, r3, #0x28
  01550	e1c320b0	 strh        r2, [r3]
  01554	ea000025	 b           |$LN2@SendComman|
  01558		 |$LN3@SendComman|

; 584  :     }
; 585  :     else if( TransferClass == SD_WRITE )

  01558	e1dd30bc	 ldrh        r3, [sp, #0xC]
  0155c	e3530001	 cmp         r3, #1
  01560	1a000022	 bne         |$LN1@SendComman|

; 586  :     {
; 587  :         MMC_CMD &= ~0x8000;

  01564	e1dd31b8	 ldrh        r3, [sp, #0x18]
  01568	e1a02003	 mov         r2, r3
  0156c	e3e03902	 mvn         r3, #2, 18
  01570	e0023003	 and         r3, r2, r3
  01574	e1a03803	 mov         r3, r3, lsl #16
  01578	e1a03823	 mov         r3, r3, lsr #16
  0157c	e1cd31b8	 strh        r3, [sp, #0x18]

; 588  :         OUTREG16(&m_vpSDIOReg->MMC_BLEN, ((WORD)(( pRequest->BlockSize - 1 ) & 0x7ff)));

  01580	e59d30bc	 ldr         r3, [sp, #0xBC]
  01584	e2833040	 add         r3, r3, #0x40
  01588	e5933000	 ldr         r3, [r3]
  0158c	e2432001	 sub         r2, r3, #1
  01590	e3a03c07	 mov         r3, #7, 24
  01594	e38330ff	 orr         r3, r3, #0xFF
  01598	e0023003	 and         r3, r2, r3
  0159c	e1a02803	 mov         r2, r3, lsl #16
  015a0	e1a02822	 mov         r2, r2, lsr #16
  015a4	e59d30b8	 ldr         r3, [sp, #0xB8]
  015a8	e2833088	 add         r3, r3, #0x88
  015ac	e5933000	 ldr         r3, [r3]
  015b0	e2833024	 add         r3, r3, #0x24
  015b4	e1c320b0	 strh        r2, [r3]

; 589  :         OUTREG16(&m_vpSDIOReg->MMC_NBLK, ((WORD)(( pRequest->NumBlocks - 1 ) & 0x7ff)));

  015b8	e59d30bc	 ldr         r3, [sp, #0xBC]
  015bc	e283303c	 add         r3, r3, #0x3C
  015c0	e5933000	 ldr         r3, [r3]
  015c4	e2432001	 sub         r2, r3, #1
  015c8	e3a03c07	 mov         r3, #7, 24
  015cc	e38330ff	 orr         r3, r3, #0xFF
  015d0	e0023003	 and         r3, r2, r3
  015d4	e1a02803	 mov         r2, r3, lsl #16
  015d8	e1a02822	 mov         r2, r2, lsr #16
  015dc	e59d30b8	 ldr         r3, [sp, #0xB8]
  015e0	e2833088	 add         r3, r3, #0x88
  015e4	e5933000	 ldr         r3, [r3]
  015e8	e2833028	 add         r3, r3, #0x28
  015ec	e1c320b0	 strh        r2, [r3]
  015f0		 |$LN1@SendComman|
  015f0		 |$LN2@SendComman|

; 590  :     }
; 591  : 
; 592  :     // Program the argument into the argument registers
; 593  :     OUTREG16(&m_vpSDIOReg->MMC_ARG1, Arg);

  015f0	e59d3010	 ldr         r3, [sp, #0x10]
  015f4	e1a02803	 mov         r2, r3, lsl #16
  015f8	e1a02822	 mov         r2, r2, lsr #16
  015fc	e59d30b8	 ldr         r3, [sp, #0xB8]
  01600	e2833088	 add         r3, r3, #0x88
  01604	e5933000	 ldr         r3, [r3]
  01608	e2833004	 add         r3, r3, #4
  0160c	e1c320b0	 strh        r2, [r3]

; 594  :     OUTREG16(&m_vpSDIOReg->MMC_ARG2, ((WORD)(Arg >> 16)));

  01610	e59d3010	 ldr         r3, [sp, #0x10]
  01614	e1a03823	 mov         r3, r3, lsr #16
  01618	e1a02803	 mov         r2, r3, lsl #16
  0161c	e1a02822	 mov         r2, r2, lsr #16
  01620	e59d30b8	 ldr         r3, [sp, #0xB8]
  01624	e2833088	 add         r3, r3, #0x88
  01628	e5933000	 ldr         r3, [r3]
  0162c	e2833008	 add         r3, r3, #8
  01630	e1c320b0	 strh        r2, [r3]

; 595  : 
; 596  :     DEBUGMSG(SHC_SEND_ZONE, (L"CSDIOControllerBase::SendCommand: "
; 597  :         L"Registers:Command = 0x%x, MMC_ARG1 = 0x%x, MMC_ARG2 = 0x%x\r\n",
; 598  :         MMC_CMD, m_vpSDIOReg->MMC_ARG1 , m_vpSDIOReg->MMC_ARG2
; 599  :     ));

  01634	e59f30a8	 ldr         r3, [pc, #0xA8]
  01638	e5933440	 ldr         r3, [r3, #0x440]
  0163c	e3130002	 tst         r3, #2
  01640	0a00000f	 beq         |$LN63@SendComman|
  01644	e59d30b8	 ldr         r3, [sp, #0xB8]
  01648	e2833088	 add         r3, r3, #0x88
  0164c	e5933000	 ldr         r3, [r3]
  01650	e2833008	 add         r3, r3, #8
  01654	e1d330b0	 ldrh        r3, [r3]
  01658	e59d20b8	 ldr         r2, [sp, #0xB8]
  0165c	e2822088	 add         r2, r2, #0x88
  01660	e5922000	 ldr         r2, [r2]
  01664	e2822004	 add         r2, r2, #4
  01668	e1d220b0	 ldrh        r2, [r2]
  0166c	e1dd11b8	 ldrh        r1, [sp, #0x18]
  01670	e59f0068	 ldr         r0, [pc, #0x68]
  01674	eb000000	 bl          NKDbgPrintfW
  01678	e3a03001	 mov         r3, #1
  0167c	e58d30a8	 str         r3, [sp, #0xA8]
  01680	ea000001	 b           |$LN64@SendComman|
  01684		 |$LN63@SendComman|
  01684	e3a03000	 mov         r3, #0
  01688	e58d30a8	 str         r3, [sp, #0xA8]
  0168c		 |$LN64@SendComman|

; 600  : 
; 601  :     MMC_STAT = Read_MMC_STAT();

  0168c	e59d00b8	 ldr         r0, [sp, #0xB8]
  01690	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|
  01694	e1cd0abc	 strh        r0, [sp, #0xAC]
  01698	e1dd3abc	 ldrh        r3, [sp, #0xAC]
  0169c	e1cd31ba	 strh        r3, [sp, #0x1A]

; 602  : 
; 603  :     // Issue the command.
; 604  :     OUTREG16(&m_vpSDIOReg->MMC_CMD, MMC_CMD);

  016a0	e59d30b8	 ldr         r3, [sp, #0xB8]
  016a4	e2833088	 add         r3, r3, #0x88
  016a8	e5932000	 ldr         r2, [r3]
  016ac	e1dd31b8	 ldrh        r3, [sp, #0x18]
  016b0	e1c230b0	 strh        r3, [r2]

; 605  :     MMC_STAT = Read_MMC_STAT();

  016b4	e59d00b8	 ldr         r0, [sp, #0xB8]
  016b8	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|
  016bc	e1cd0abe	 strh        r0, [sp, #0xAE]
  016c0	e1dd3abe	 ldrh        r3, [sp, #0xAE]
  016c4	e1cd31ba	 strh        r3, [sp, #0x1A]

; 606  : 
; 607  :     return SD_API_STATUS_PENDING;

  016c8	e3a03001	 mov         r3, #1
  016cc	e58d3044	 str         r3, [sp, #0x44]
  016d0		 |$LN31@SendComman|

; 608  : }

  016d0	e59d0044	 ldr         r0, [sp, #0x44]
  016d4	e28dd0b0	 add         sp, sp, #0xB0
  016d8	e89d6000	 ldmia       sp, {sp, lr}
  016dc	e12fff1e	 bx          lr
  016e0		 |$LN77@SendComman|
  016e0		 |$LN78@SendComman|
  016e0	00000000	 DCD         |??_C@_1LO@CGIMODFJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@|
  016e4		 |$LN79@SendComman|
  016e4	00000000	 DCD         |dpCurSettings|
  016e8		 |$LN80@SendComman|
  016e8	00000000	 DCD         |gwaCMD|
  016ec		 |$LN81@SendComman|
  016ec	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  016f0		 |$LN82@SendComman|
  016f0	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  016f4		 |$LN83@SendComman|
  016f4	00000000	 DCD         |??_C@_1JA@LIPKICML@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  016f8		 |$LN84@SendComman|
  016f8	00000000	 DCD         |??_C@_1JG@CIFNDOFH@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@|
  016fc		 |$LN85@SendComman|
  016fc	00000000	 DCD         |??_C@_1IM@LAHDELEP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@|
  01700		 |$LN86@SendComman|
  01700	00000000	 DCD         |??_C@_1JI@NGIDLIDI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@|
  01704		 |$LN87@SendComman|
  01704	00000000	 DCD         |??_C@_1LO@MLNBGAON@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@|
  01708		 |$LN88@SendComman|
  01708	00000000	 DCD         |??_C@_1MO@NNBDGGKC@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@|
  0170c		 |$LN89@SendComman|
  0170c	00000000	 DCD         |??_C@_1LO@GNAMHGME@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@|
  01710		 |$M42504|

			 ENDP  ; |?SendCommand@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z|, CSDIOControllerBase::SendCommand

	EXPORT	|??_C@_1NK@PNFKJANI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAR?$AAe?$AAm?$AAo?$AAv@| [ DATA ] ; `string'
	EXPORT	|?HandleRemoval@CSDIOControllerBase@@QAAXH@Z| ; CSDIOControllerBase::HandleRemoval
	IMPORT	|SDHCDGetAndLockCurrentRequest|

  00050			 AREA	 |.pdata|, PDATA
|$T42526| DCD	|$LN10@HandleRemo|
	DCD	0x40005204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1NK@PNFKJANI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAR?$AAe?$AAm?$AAo?$AAv@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "R", 0x0, "e", 0x0, "m", 0x0, "o"
	DCB	0x0, "v", 0x0, "a", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "a", 0x0, "r", 0x0, "d", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "m", 0x0, "o", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, " "
	DCB	0x0, "D", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "C"
	DCB	0x0, "a", 0x0, "n", 0x0, "c", 0x0, "e", 0x0, "l", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "c", 0x0, "u", 0x0, "r"
	DCB	0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, ":"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  01710			 AREA	 |.text|, CODE, ARM

  01710		 |?HandleRemoval@CSDIOControllerBase@@QAAXH@Z| PROC ; CSDIOControllerBase::HandleRemoval

; 617  : {    

  01710		 |$LN10@HandleRemo|
  01710	e1a0c00d	 mov         r12, sp
  01714	e92d0003	 stmdb       sp!, {r0, r1}
  01718	e92d5000	 stmdb       sp!, {r12, lr}
  0171c	e24dd00c	 sub         sp, sp, #0xC
  01720		 |$M42523|

; 618  :     m_fCardPresent = FALSE;

  01720	e59d3014	 ldr         r3, [sp, #0x14]
  01724	e2832038	 add         r2, r3, #0x38
  01728	e3a03000	 mov         r3, #0
  0172c	e5823000	 str         r3, [r2]

; 619  :     m_fMMCMode = FALSE;

  01730	e59d3014	 ldr         r3, [sp, #0x14]
  01734	e2832040	 add         r2, r3, #0x40
  01738	e3a03000	 mov         r3, #0
  0173c	e5823000	 str         r3, [r2]

; 620  : 
; 621  :     IndicateSlotStateChange(DeviceEjected);

  01740	e3a02001	 mov         r2, #1
  01744	e3a01000	 mov         r1, #0
  01748	e59d3014	 ldr         r3, [sp, #0x14]
  0174c	e2833004	 add         r3, r3, #4
  01750	e5930000	 ldr         r0, [r3]
  01754	eb000000	 bl          SDHCDIndicateSlotStateChange

; 622  : 
; 623  :     // turn clock off and remove power from the slot
; 624  :     ClockOff();

  01758	e59d0014	 ldr         r0, [sp, #0x14]
  0175c	eb000000	 bl          |?ClockOff@CSDIOControllerBase@@QAAXXZ|

; 625  :     TurnCardPowerOff();

  01760	e59d3014	 ldr         r3, [sp, #0x14]
  01764	e5933000	 ldr         r3, [r3]
  01768	e2833020	 add         r3, r3, #0x20
  0176c	e59d0014	 ldr         r0, [sp, #0x14]
  01770	e5933000	 ldr         r3, [r3]
  01774	e1a0e00f	 mov         lr, pc
  01778	e12fff13	 bx          r3

; 626  : 
; 627  :     // turn off SDIO interrupts
; 628  :     if( m_fSDIOInterruptsEnabled )

  0177c	e59d3014	 ldr         r3, [sp, #0x14]
  01780	e283303c	 add         r3, r3, #0x3C
  01784	e5933000	 ldr         r3, [r3]
  01788	e3530000	 cmp         r3, #0
  0178c	0a000001	 beq         |$LN3@HandleRemo|

; 629  :     {
; 630  :         DisableSDIOInterrupts();

  01790	e59d0014	 ldr         r0, [sp, #0x14]
  01794	eb000000	 bl          |?DisableSDIOInterrupts@CSDIOControllerBase@@QAAXXZ|
  01798		 |$LN3@HandleRemo|

; 631  :     }
; 632  : 
; 633  :     if (fCancelRequest) {

  01798	e59d3018	 ldr         r3, [sp, #0x18]
  0179c	e3530000	 cmp         r3, #0
  017a0	0a000027	 beq         |$LN2@HandleRemo|

; 634  :         // get the current request  
; 635  :         PSD_BUS_REQUEST pRequest = GetAndLockCurrentRequest();

  017a4	e3a01000	 mov         r1, #0
  017a8	e59d3014	 ldr         r3, [sp, #0x14]
  017ac	e2833004	 add         r3, r3, #4
  017b0	e5930000	 ldr         r0, [r3]
  017b4	eb000000	 bl          SDHCDGetAndLockCurrentRequest
  017b8	e58d0004	 str         r0, [sp, #4]
  017bc	e59d3004	 ldr         r3, [sp, #4]
  017c0	e58d3000	 str         r3, [sp]

; 636  : 
; 637  :         if (pRequest != NULL) {

  017c4	e59d3000	 ldr         r3, [sp]
  017c8	e3530000	 cmp         r3, #0
  017cc	0a00001c	 beq         |$LN1@HandleRemo|

; 638  :             DEBUGMSG(SDCARD_ZONE_WARN, (L"CSDIOControllerBase::HandleRemoval: "
; 639  :                 L"Card Removal Detected - Canceling current request: 0x%08X, command: %d\r\n", 
; 640  :                 pRequest, pRequest->CommandCode
; 641  :             ));

  017d0	e59f307c	 ldr         r3, [pc, #0x7C]
  017d4	e5933440	 ldr         r3, [r3, #0x440]
  017d8	e3130901	 tst         r3, #1, 18
  017dc	0a000009	 beq         |$LN6@HandleRemo|
  017e0	e59d3000	 ldr         r3, [sp]
  017e4	e2833014	 add         r3, r3, #0x14
  017e8	e5d33000	 ldrb        r3, [r3]
  017ec	e1a02003	 mov         r2, r3
  017f0	e59d1000	 ldr         r1, [sp]
  017f4	e59f0054	 ldr         r0, [pc, #0x54]
  017f8	eb000000	 bl          NKDbgPrintfW
  017fc	e3a03001	 mov         r3, #1
  01800	e58d3008	 str         r3, [sp, #8]
  01804	ea000001	 b           |$LN7@HandleRemo|
  01808		 |$LN6@HandleRemo|
  01808	e3a03000	 mov         r3, #0
  0180c	e58d3008	 str         r3, [sp, #8]
  01810		 |$LN7@HandleRemo|

; 642  :             DumpRequest(pRequest);

  01810	e59d0000	 ldr         r0, [sp]
  01814	eb000000	 bl          |?DumpRequest@@YAXPAU_SD_BUS_REQUEST@@@Z|

; 643  :             IndicateBusRequestComplete(pRequest, SD_API_STATUS_DEVICE_REMOVED);

  01818	e3a02147	 mov         r2, #0x47, 2
  0181c	e59d1000	 ldr         r1, [sp]
  01820	e59d3014	 ldr         r3, [sp, #0x14]
  01824	e5933000	 ldr         r3, [r3]
  01828	e2833004	 add         r3, r3, #4
  0182c	e59d0014	 ldr         r0, [sp, #0x14]
  01830	e5933000	 ldr         r3, [r3]
  01834	e1a0e00f	 mov         lr, pc
  01838	e12fff13	 bx          r3

; 644  :             
; 645  :             ClockOff();

  0183c	e59d0014	 ldr         r0, [sp, #0x14]
  01840	eb000000	 bl          |?ClockOff@CSDIOControllerBase@@QAAXXZ|
  01844		 |$LN1@HandleRemo|
  01844		 |$LN2@HandleRemo|

; 646  :         }
; 647  :     }
; 648  : }

  01844	e28dd00c	 add         sp, sp, #0xC
  01848	e89d6000	 ldmia       sp, {sp, lr}
  0184c	e12fff1e	 bx          lr
  01850		 |$LN11@HandleRemo|
  01850		 |$LN12@HandleRemo|
  01850	00000000	 DCD         |??_C@_1NK@PNFKJANI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAR?$AAe?$AAm?$AAo?$AAv@|
  01854		 |$LN13@HandleRemo|
  01854	00000000	 DCD         |dpCurSettings|
  01858		 |$M42524|

			 ENDP  ; |?HandleRemoval@CSDIOControllerBase@@QAAXH@Z|, CSDIOControllerBase::HandleRemoval

	EXPORT	|??_C@_1CA@DNEINKPE@?$AA?7?$AA?5?$AAH?$AAC?$AAP?$AAa?$AAr?$AAa?$AAm?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@KFDEONKD@?$AA?7?$AA?5?$AAB?$AAl?$AAo?$AAc?$AAk?$AAS?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@PODDKJIC@?$AA?7?$AA?5?$AAN?$AAu?$AAm?$AAB?$AAl?$AAo?$AAc?$AAk?$AAs?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@MGLECOGG@?$AA?7?$AA?5?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@PIELIBDA@?$AA?7?$AA?5?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@KOBHFAMI@?$AAD?$AAu?$AAm?$AAp?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00058			 AREA	 |.pdata|, PDATA
|$T42548| DCD	|$LN19@DumpReques|
	DCD	0x40007104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@DNEINKPE@?$AA?7?$AA?5?$AAH?$AAC?$AAP?$AAa?$AAr?$AAa?$AAm?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, " ", 0x0, "H", 0x0, "C", 0x0, "P", 0x0, "a", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@KFDEONKD@?$AA?7?$AA?5?$AAB?$AAl?$AAo?$AAc?$AAk?$AAS?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, " ", 0x0, "B", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k"
	DCB	0x0, "S", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@PODDKJIC@?$AA?7?$AA?5?$AAN?$AAu?$AAm?$AAB?$AAl?$AAo?$AAc?$AAk?$AAs?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, " ", 0x0, "N", 0x0, "u", 0x0, "m", 0x0, "B", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "k", 0x0, "s", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@MGLECOGG@?$AA?7?$AA?5?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "s", 0x0, "p", 0x0, "o"
	DCB	0x0, "n", 0x0, "s", 0x0, "e", 0x0, "T", 0x0, "y", 0x0, "p"
	DCB	0x0, "e", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@PIELIBDA@?$AA?7?$AA?5?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, " ", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@KOBHFAMI@?$AAD?$AAu?$AAm?$AAp?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "u", 0x0, "m", 0x0, "p", 0x0, "C", 0x0, "u", 0x0, "r"
	DCB	0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "R", 0x0, "e"
	DCB	0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  01858			 AREA	 |.text|, CODE, ARM

  01858		 |?DumpRequest@@YAXPAU_SD_BUS_REQUEST@@@Z| PROC ; DumpRequest

; 66   : {   

  01858		 |$LN19@DumpReques|
  01858	e1a0c00d	 mov         r12, sp
  0185c	e92d0001	 stmdb       sp!, {r0}
  01860	e92d5000	 stmdb       sp!, {r12, lr}
  01864	e24dd01c	 sub         sp, sp, #0x1C
  01868		 |$M42545|

; 67   :     DEBUGCHK(pRequest);

  01868	e59d3024	 ldr         r3, [sp, #0x24]
  0186c	e3530000	 cmp         r3, #0
  01870	0a000002	 beq         |$LN3@DumpReques|
  01874	e3a03001	 mov         r3, #1
  01878	e58d3000	 str         r3, [sp]
  0187c	ea000007	 b           |$LN4@DumpReques|
  01880		 |$LN3@DumpReques|
  01880	e3a03043	 mov         r3, #0x43
  01884	e59f218c	 ldr         r2, [pc, #0x18C]
  01888	e59f116c	 ldr         r1, [pc, #0x16C]
  0188c	e59f0180	 ldr         r0, [pc, #0x180]
  01890	eb000000	 bl          NKDbgPrintfW
  01894	e6000010	 __debugbreak_ce
  01898	e3a03000	 mov         r3, #0
  0189c	e58d3000	 str         r3, [sp]
  018a0		 |$LN4@DumpReques|

; 68   : 
; 69   :     DEBUGMSG(SDCARD_ZONE_INIT, (L"DumpCurrentRequest: 0x%08X\r\n", pRequest)); 

  018a0	e59f3154	 ldr         r3, [pc, #0x154]
  018a4	e5933440	 ldr         r3, [r3, #0x440]
  018a8	e3130a02	 tst         r3, #2, 20
  018ac	0a000005	 beq         |$LN5@DumpReques|
  018b0	e59d1024	 ldr         r1, [sp, #0x24]
  018b4	e59f0154	 ldr         r0, [pc, #0x154]
  018b8	eb000000	 bl          NKDbgPrintfW
  018bc	e3a03001	 mov         r3, #1
  018c0	e58d3004	 str         r3, [sp, #4]
  018c4	ea000001	 b           |$LN6@DumpReques|
  018c8		 |$LN5@DumpReques|
  018c8	e3a03000	 mov         r3, #0
  018cc	e58d3004	 str         r3, [sp, #4]
  018d0		 |$LN6@DumpReques|

; 70   :     DEBUGMSG(SDCARD_ZONE_INIT, (L"\t Command: %d\r\n",  pRequest->CommandCode));

  018d0	e59f3124	 ldr         r3, [pc, #0x124]
  018d4	e5933440	 ldr         r3, [r3, #0x440]
  018d8	e3130a02	 tst         r3, #2, 20
  018dc	0a000008	 beq         |$LN7@DumpReques|
  018e0	e59d3024	 ldr         r3, [sp, #0x24]
  018e4	e2833014	 add         r3, r3, #0x14
  018e8	e5d33000	 ldrb        r3, [r3]
  018ec	e1a01003	 mov         r1, r3
  018f0	e59f0114	 ldr         r0, [pc, #0x114]
  018f4	eb000000	 bl          NKDbgPrintfW
  018f8	e3a03001	 mov         r3, #1
  018fc	e58d3008	 str         r3, [sp, #8]
  01900	ea000001	 b           |$LN8@DumpReques|
  01904		 |$LN7@DumpReques|
  01904	e3a03000	 mov         r3, #0
  01908	e58d3008	 str         r3, [sp, #8]
  0190c		 |$LN8@DumpReques|

; 71   :     DEBUGMSG(SDCARD_ZONE_INIT, (L"\t ResponseType: %d\r\n",  pRequest->CommandResponse.ResponseType)); 

  0190c	e59f30e8	 ldr         r3, [pc, #0xE8]
  01910	e5933440	 ldr         r3, [r3, #0x440]
  01914	e3130a02	 tst         r3, #2, 20
  01918	0a000007	 beq         |$LN9@DumpReques|
  0191c	e59d3024	 ldr         r3, [sp, #0x24]
  01920	e283301c	 add         r3, r3, #0x1C
  01924	e5931000	 ldr         r1, [r3]
  01928	e59f00d8	 ldr         r0, [pc, #0xD8]
  0192c	eb000000	 bl          NKDbgPrintfW
  01930	e3a03001	 mov         r3, #1
  01934	e58d300c	 str         r3, [sp, #0xC]
  01938	ea000001	 b           |$LN10@DumpReques|
  0193c		 |$LN9@DumpReques|
  0193c	e3a03000	 mov         r3, #0
  01940	e58d300c	 str         r3, [sp, #0xC]
  01944		 |$LN10@DumpReques|

; 72   :     DEBUGMSG(SDCARD_ZONE_INIT, (L"\t NumBlocks: %d\r\n",  pRequest->NumBlocks)); 

  01944	e59f30b0	 ldr         r3, [pc, #0xB0]
  01948	e5933440	 ldr         r3, [r3, #0x440]
  0194c	e3130a02	 tst         r3, #2, 20
  01950	0a000007	 beq         |$LN11@DumpReques|
  01954	e59d3024	 ldr         r3, [sp, #0x24]
  01958	e283303c	 add         r3, r3, #0x3C
  0195c	e5931000	 ldr         r1, [r3]
  01960	e59f009c	 ldr         r0, [pc, #0x9C]
  01964	eb000000	 bl          NKDbgPrintfW
  01968	e3a03001	 mov         r3, #1
  0196c	e58d3010	 str         r3, [sp, #0x10]
  01970	ea000001	 b           |$LN12@DumpReques|
  01974		 |$LN11@DumpReques|
  01974	e3a03000	 mov         r3, #0
  01978	e58d3010	 str         r3, [sp, #0x10]
  0197c		 |$LN12@DumpReques|

; 73   :     DEBUGMSG(SDCARD_ZONE_INIT, (L"\t BlockSize: %d\r\n",  pRequest->BlockSize)); 

  0197c	e59f3078	 ldr         r3, [pc, #0x78]
  01980	e5933440	 ldr         r3, [r3, #0x440]
  01984	e3130a02	 tst         r3, #2, 20
  01988	0a000007	 beq         |$LN13@DumpReques|
  0198c	e59d3024	 ldr         r3, [sp, #0x24]
  01990	e2833040	 add         r3, r3, #0x40
  01994	e5931000	 ldr         r1, [r3]
  01998	e59f0060	 ldr         r0, [pc, #0x60]
  0199c	eb000000	 bl          NKDbgPrintfW
  019a0	e3a03001	 mov         r3, #1
  019a4	e58d3014	 str         r3, [sp, #0x14]
  019a8	ea000001	 b           |$LN14@DumpReques|
  019ac		 |$LN13@DumpReques|
  019ac	e3a03000	 mov         r3, #0
  019b0	e58d3014	 str         r3, [sp, #0x14]
  019b4		 |$LN14@DumpReques|

; 74   :     DEBUGMSG(SDCARD_ZONE_INIT, (L"\t HCParam: %d\r\n",    pRequest->HCParam)); 

  019b4	e59f3040	 ldr         r3, [pc, #0x40]
  019b8	e5933440	 ldr         r3, [r3, #0x440]
  019bc	e3130a02	 tst         r3, #2, 20
  019c0	0a000007	 beq         |$LN15@DumpReques|
  019c4	e59d3024	 ldr         r3, [sp, #0x24]
  019c8	e2833044	 add         r3, r3, #0x44
  019cc	e5931000	 ldr         r1, [r3]
  019d0	e59f0020	 ldr         r0, [pc, #0x20]
  019d4	eb000000	 bl          NKDbgPrintfW
  019d8	e3a03001	 mov         r3, #1
  019dc	e58d3018	 str         r3, [sp, #0x18]
  019e0	ea000001	 b           |$LN16@DumpReques|
  019e4		 |$LN15@DumpReques|
  019e4	e3a03000	 mov         r3, #0
  019e8	e58d3018	 str         r3, [sp, #0x18]
  019ec		 |$LN16@DumpReques|

; 75   : 
; 76   : }

  019ec	e28dd01c	 add         sp, sp, #0x1C
  019f0	e89d6000	 ldmia       sp, {sp, lr}
  019f4	e12fff1e	 bx          lr
  019f8		 |$LN20@DumpReques|
  019f8		 |$LN21@DumpReques|
  019f8	00000000	 DCD         |??_C@_1CA@DNEINKPE@?$AA?7?$AA?5?$AAH?$AAC?$AAP?$AAa?$AAr?$AAa?$AAm?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  019fc		 |$LN22@DumpReques|
  019fc	00000000	 DCD         |dpCurSettings|
  01a00		 |$LN23@DumpReques|
  01a00	00000000	 DCD         |??_C@_1CE@KFDEONKD@?$AA?7?$AA?5?$AAB?$AAl?$AAo?$AAc?$AAk?$AAS?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  01a04		 |$LN24@DumpReques|
  01a04	00000000	 DCD         |??_C@_1CE@PODDKJIC@?$AA?7?$AA?5?$AAN?$AAu?$AAm?$AAB?$AAl?$AAo?$AAc?$AAk?$AAs?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  01a08		 |$LN25@DumpReques|
  01a08	00000000	 DCD         |??_C@_1CK@MGLECOGG@?$AA?7?$AA?5?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  01a0c		 |$LN26@DumpReques|
  01a0c	00000000	 DCD         |??_C@_1CA@PIELIBDA@?$AA?7?$AA?5?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  01a10		 |$LN27@DumpReques|
  01a10	00000000	 DCD         |??_C@_1DK@KOBHFAMI@?$AAD?$AAu?$AAm?$AAp?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  01a14		 |$LN28@DumpReques|
  01a14	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  01a18		 |$LN29@DumpReques|
  01a18	00000000	 DCD         |??_C@_1JA@LIPKICML@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  01a1c		 |$M42546|

			 ENDP  ; |?DumpRequest@@YAXPAU_SD_BUS_REQUEST@@@Z|, DumpRequest

	EXPORT	|??_C@_1FA@KPFCKABD@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAI?$AAn?$AAs?$AAe@| [ DATA ] ; `string'
	EXPORT	|?HandleInsertion@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::HandleInsertion

  00060			 AREA	 |.pdata|, PDATA
|$T42565| DCD	|$LN7@HandleInse|
	DCD	0x40002d04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@KPFCKABD@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAI?$AAn?$AAs?$AAe@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s"
	DCB	0x0, "e", 0x0, ":", 0x0, ":", 0x0, "H", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, "l", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "s"
	DCB	0x0, "e", 0x0, "r", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  01a1c			 AREA	 |.text|, CODE, ARM

  01a1c		 |?HandleInsertion@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::HandleInsertion

; 654  : {

  01a1c		 |$LN7@HandleInse|
  01a1c	e1a0c00d	 mov         r12, sp
  01a20	e92d0001	 stmdb       sp!, {r0}
  01a24	e92d5000	 stmdb       sp!, {r12, lr}
  01a28	e24dd008	 sub         sp, sp, #8
  01a2c		 |$M42562|

; 655  :     DWORD dwClockRate = SD_DEFAULT_CARD_ID_CLOCK_RATE;

  01a2c	e3a03b61	 mov         r3, #0x61, 22
  01a30	e3833e2a	 orr         r3, r3, #0x2A, 28
  01a34	e58d3000	 str         r3, [sp]

; 656  : 
; 657  :     m_fCardPresent = TRUE;

  01a38	e59d3010	 ldr         r3, [sp, #0x10]
  01a3c	e2832038	 add         r2, r3, #0x38
  01a40	e3a03001	 mov         r3, #1
  01a44	e5823000	 str         r3, [r2]

; 658  : 
; 659  :     DEBUGMSG(SDCARD_ZONE_FUNC, (L"+CSDIOControllerBase::HandleInsertion\r\n"));

  01a48	e59f307c	 ldr         r3, [pc, #0x7C]
  01a4c	e5933440	 ldr         r3, [r3, #0x440]
  01a50	e3130b02	 tst         r3, #2, 22
  01a54	0a000004	 beq         |$LN3@HandleInse|
  01a58	e59f0068	 ldr         r0, [pc, #0x68]
  01a5c	eb000000	 bl          NKDbgPrintfW
  01a60	e3a03001	 mov         r3, #1
  01a64	e58d3004	 str         r3, [sp, #4]
  01a68	ea000001	 b           |$LN4@HandleInse|
  01a6c		 |$LN3@HandleInse|
  01a6c	e3a03000	 mov         r3, #0
  01a70	e58d3004	 str         r3, [sp, #4]
  01a74		 |$LN4@HandleInse|

; 660  : 
; 661  :     // turn power to the card on
; 662  :     TurnCardPowerOn();

  01a74	e59d3010	 ldr         r3, [sp, #0x10]
  01a78	e5933000	 ldr         r3, [r3]
  01a7c	e283301c	 add         r3, r3, #0x1C
  01a80	e59d0010	 ldr         r0, [sp, #0x10]
  01a84	e5933000	 ldr         r3, [r3]
  01a88	e1a0e00f	 mov         lr, pc
  01a8c	e12fff13	 bx          r3

; 663  : 
; 664  :     SetClockRate(&dwClockRate);

  01a90	e28d1000	 add         r1, sp, #0
  01a94	e59d0010	 ldr         r0, [sp, #0x10]
  01a98	eb000000	 bl          |?SetClockRate@CSDIOControllerBase@@QAAXPAK@Z|

; 665  :     
; 666  :     ClockOn();

  01a9c	e59d0010	 ldr         r0, [sp, #0x10]
  01aa0	eb000000	 bl          |?ClockOn@CSDIOControllerBase@@QAAXXZ|

; 667  : 
; 668  :     // indicate device arrival
; 669  :     IndicateSlotStateChange(DeviceInserted);

  01aa4	e3a02002	 mov         r2, #2
  01aa8	e3a01000	 mov         r1, #0
  01aac	e59d3010	 ldr         r3, [sp, #0x10]
  01ab0	e2833004	 add         r3, r3, #4
  01ab4	e5930000	 ldr         r0, [r3]
  01ab8	eb000000	 bl          SDHCDIndicateSlotStateChange

; 670  : }

  01abc	e28dd008	 add         sp, sp, #8
  01ac0	e89d6000	 ldmia       sp, {sp, lr}
  01ac4	e12fff1e	 bx          lr
  01ac8		 |$LN8@HandleInse|
  01ac8		 |$LN9@HandleInse|
  01ac8	00000000	 DCD         |??_C@_1FA@KPFCKABD@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAI?$AAn?$AAs?$AAe@|
  01acc		 |$LN10@HandleInse|
  01acc	00000000	 DCD         |dpCurSettings|
  01ad0		 |$M42563|

			 ENDP  ; |?HandleInsertion@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::HandleInsertion

	EXPORT	|??_C@_1HC@BANGNOJ@?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAC?$AAa?$AAr?$AAd?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAI?$AAn?$AAt?$AAe?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@DCJMKGLI@?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAC?$AAa?$AAr?$AAd?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAI?$AAn?$AAt?$AAe?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@BJGMENH@?$AA?$CL?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAC?$AAa?$AAr?$AAd?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAI?$AAn?$AAt?$AAe@| [ DATA ] ; `string'
	EXPORT	|?HandleCardDetectInterrupt@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::HandleCardDetectInterrupt

  00068			 AREA	 |.pdata|, PDATA
|$T42579| DCD	|$LN16@HandleCard|
	DCD	0x40005e04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@BANGNOJ@?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAC?$AAa?$AAr?$AAd?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAI?$AAn?$AAt?$AAe?$AAr@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C", 0x0, "S", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, ":", 0x0, ":", 0x0, "H", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "C", 0x0, "a"
	DCB	0x0, "r", 0x0, "d", 0x0, "D", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "C", 0x0, "a", 0x0, "r", 0x0, "d", 0x0, " "
	DCB	0x0, "i", 0x0, "s", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "m"
	DCB	0x0, "o", 0x0, "v", 0x0, "e", 0x0, "d", 0x0, "!", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@DCJMKGLI@?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAC?$AAa?$AAr?$AAd?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAI?$AAn?$AAt?$AAe?$AAr@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C", 0x0, "S", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, ":", 0x0, ":", 0x0, "H", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "C", 0x0, "a"
	DCB	0x0, "r", 0x0, "d", 0x0, "D", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "C", 0x0, "a", 0x0, "r", 0x0, "d", 0x0, " "
	DCB	0x0, "i", 0x0, "s", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "s"
	DCB	0x0, "e", 0x0, "r", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "!"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@BJGMENH@?$AA?$CL?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAC?$AAa?$AAr?$AAd?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAI?$AAn?$AAt?$AAe@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C", 0x0, "S"
	DCB	0x0, "l", 0x0, "o", 0x0, "t", 0x0, ":", 0x0, ":", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "C"
	DCB	0x0, "a", 0x0, "r", 0x0, "d", 0x0, "D", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  01ad0			 AREA	 |.text|, CODE, ARM

  01ad0		 |?HandleCardDetectInterrupt@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::HandleCardDetectInterrupt

; 674  : {

  01ad0		 |$LN16@HandleCard|
  01ad0	e1a0c00d	 mov         r12, sp
  01ad4	e92d0001	 stmdb       sp!, {r0}
  01ad8	e92d5000	 stmdb       sp!, {r12, lr}
  01adc	e24dd010	 sub         sp, sp, #0x10
  01ae0		 |$M42576|

; 675  :     DEBUGMSG(SHC_INTERRUPT_ZONE, (L"+CSDHCSlot::HandleCardDetectInterrupt\r\n"));

  01ae0	e59f3154	 ldr         r3, [pc, #0x154]
  01ae4	e5933440	 ldr         r3, [r3, #0x440]
  01ae8	e3130001	 tst         r3, #1
  01aec	0a000004	 beq         |$LN8@HandleCard|
  01af0	e59f014c	 ldr         r0, [pc, #0x14C]
  01af4	eb000000	 bl          NKDbgPrintfW
  01af8	e3a03001	 mov         r3, #1
  01afc	e58d3000	 str         r3, [sp]
  01b00	ea000001	 b           |$LN9@HandleCard|
  01b04		 |$LN8@HandleCard|
  01b04	e3a03000	 mov         r3, #0
  01b08	e58d3000	 str         r3, [sp]
  01b0c		 |$LN9@HandleCard|

; 676  : 
; 677  :     SDHCDAcquireHCLock(m_pHCContext);

  01b0c	e59d3018	 ldr         r3, [sp, #0x18]
  01b10	e2833004	 add         r3, r3, #4
  01b14	e5933000	 ldr         r3, [r3]
  01b18	e2830024	 add         r0, r3, #0x24
  01b1c	eb000000	 bl          EnterCriticalSection

; 678  : 
; 679  :     if( SDCardDetect() )

  01b20	e59d3018	 ldr         r3, [sp, #0x18]
  01b24	e5933000	 ldr         r3, [r3]
  01b28	e2833014	 add         r3, r3, #0x14
  01b2c	e59d0018	 ldr         r0, [sp, #0x18]
  01b30	e5933000	 ldr         r3, [r3]
  01b34	e1a0e00f	 mov         lr, pc
  01b38	e12fff13	 bx          r3
  01b3c	e58d0004	 str         r0, [sp, #4]
  01b40	e59d3004	 ldr         r3, [sp, #4]
  01b44	e3530000	 cmp         r3, #0
  01b48	0a00001f	 beq         |$LN5@HandleCard|

; 680  :     {
; 681  :         DEBUGMSG(SHC_INTERRUPT_ZONE, (L"CSDHCSlot::HandleCardDetectInterrupt: "
; 682  :             L"Card is Inserted!\r\n"
; 683  :         ));

  01b4c	e59f30e8	 ldr         r3, [pc, #0xE8]
  01b50	e5933440	 ldr         r3, [r3, #0x440]
  01b54	e3130001	 tst         r3, #1
  01b58	0a000004	 beq         |$LN10@HandleCard|
  01b5c	e59f00dc	 ldr         r0, [pc, #0xDC]
  01b60	eb000000	 bl          NKDbgPrintfW
  01b64	e3a03001	 mov         r3, #1
  01b68	e58d3008	 str         r3, [sp, #8]
  01b6c	ea000001	 b           |$LN11@HandleCard|
  01b70		 |$LN10@HandleCard|
  01b70	e3a03000	 mov         r3, #0
  01b74	e58d3008	 str         r3, [sp, #8]
  01b78		 |$LN11@HandleCard|

; 684  :         
; 685  :         if( m_fCardPresent == FALSE || m_bReinsertTheCard ) {

  01b78	e59d3018	 ldr         r3, [sp, #0x18]
  01b7c	e2833038	 add         r3, r3, #0x38
  01b80	e5933000	 ldr         r3, [r3]
  01b84	e3530000	 cmp         r3, #0
  01b88	0a000004	 beq         |$LN3@HandleCard|
  01b8c	e59d3018	 ldr         r3, [sp, #0x18]
  01b90	e283302c	 add         r3, r3, #0x2C
  01b94	e5933000	 ldr         r3, [r3]
  01b98	e3530000	 cmp         r3, #0
  01b9c	0a000009	 beq         |$LN4@HandleCard|
  01ba0		 |$LN3@HandleCard|

; 686  :             m_bReinsertTheCard = FALSE;

  01ba0	e59d3018	 ldr         r3, [sp, #0x18]
  01ba4	e283202c	 add         r2, r3, #0x2C
  01ba8	e3a03000	 mov         r3, #0
  01bac	e5823000	 str         r3, [r2]

; 687  :             m_fFirstTime = TRUE;

  01bb0	e59d3018	 ldr         r3, [sp, #0x18]
  01bb4	e2832080	 add         r2, r3, #0x80
  01bb8	e3a03001	 mov         r3, #1
  01bbc	e5823000	 str         r3, [r2]

; 688  :             HandleInsertion();

  01bc0	e59d0018	 ldr         r0, [sp, #0x18]
  01bc4	eb000000	 bl          |?HandleInsertion@CSDIOControllerBase@@QAAXXZ|
  01bc8		 |$LN4@HandleCard|

; 689  :         }
; 690  :     }

  01bc8	ea000012	 b           |$LN2@HandleCard|
  01bcc		 |$LN5@HandleCard|

; 691  :     else if( m_fCardPresent ) 

  01bcc	e59d3018	 ldr         r3, [sp, #0x18]
  01bd0	e2833038	 add         r3, r3, #0x38
  01bd4	e5933000	 ldr         r3, [r3]
  01bd8	e3530000	 cmp         r3, #0
  01bdc	0a00000d	 beq         |$LN1@HandleCard|

; 692  :     {
; 693  :         DEBUGMSG(SHC_INTERRUPT_ZONE, (L"CSDHCSlot::HandleCardDetectInterrupt: "
; 694  :             L"Card is Removed!\r\n"));

  01be0	e59f3054	 ldr         r3, [pc, #0x54]
  01be4	e5933440	 ldr         r3, [r3, #0x440]
  01be8	e3130001	 tst         r3, #1
  01bec	0a000004	 beq         |$LN12@HandleCard|
  01bf0	e59f0040	 ldr         r0, [pc, #0x40]
  01bf4	eb000000	 bl          NKDbgPrintfW
  01bf8	e3a03001	 mov         r3, #1
  01bfc	e58d300c	 str         r3, [sp, #0xC]
  01c00	ea000001	 b           |$LN13@HandleCard|
  01c04		 |$LN12@HandleCard|
  01c04	e3a03000	 mov         r3, #0
  01c08	e58d300c	 str         r3, [sp, #0xC]
  01c0c		 |$LN13@HandleCard|

; 695  :         HandleRemoval(TRUE);

  01c0c	e3a01001	 mov         r1, #1
  01c10	e59d0018	 ldr         r0, [sp, #0x18]
  01c14	eb000000	 bl          |?HandleRemoval@CSDIOControllerBase@@QAAXH@Z|
  01c18		 |$LN1@HandleCard|
  01c18		 |$LN2@HandleCard|

; 696  :     }
; 697  : 
; 698  :     SDHCDReleaseHCLock(m_pHCContext);

  01c18	e59d3018	 ldr         r3, [sp, #0x18]
  01c1c	e2833004	 add         r3, r3, #4
  01c20	e5933000	 ldr         r3, [r3]
  01c24	e2830024	 add         r0, r3, #0x24
  01c28	eb000000	 bl          LeaveCriticalSection

; 699  : }

  01c2c	e28dd010	 add         sp, sp, #0x10
  01c30	e89d6000	 ldmia       sp, {sp, lr}
  01c34	e12fff1e	 bx          lr
  01c38		 |$LN17@HandleCard|
  01c38		 |$LN18@HandleCard|
  01c38	00000000	 DCD         |??_C@_1HC@BANGNOJ@?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAC?$AAa?$AAr?$AAd?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAI?$AAn?$AAt?$AAe?$AAr@|
  01c3c		 |$LN19@HandleCard|
  01c3c	00000000	 DCD         |dpCurSettings|
  01c40		 |$LN20@HandleCard|
  01c40	00000000	 DCD         |??_C@_1HE@DCJMKGLI@?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAC?$AAa?$AAr?$AAd?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAI?$AAn?$AAt?$AAe?$AAr@|
  01c44		 |$LN21@HandleCard|
  01c44	00000000	 DCD         |??_C@_1FA@BJGMENH@?$AA?$CL?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAC?$AAa?$AAr?$AAd?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAI?$AAn?$AAt?$AAe@|
  01c48		 |$M42577|

			 ENDP  ; |?HandleCardDetectInterrupt@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::HandleCardDetectInterrupt

	IMPORT	|DeleteCriticalSection|

  00070			 AREA	 |.pdata|, PDATA
|$T42589| DCD	|$LN5@CSDIOContr@2|
	DCD	0x40000c03
; Function compile flags: /Odtp

  01c48			 AREA	 |.text|, CODE, ARM

  01c48		 |??1CSDIOControllerBase@@UAA@XZ| PROC	; CSDIOControllerBase::~CSDIOControllerBase

; 742  : {

  01c48		 |$LN5@CSDIOContr@2|
  01c48	e1a0c00d	 mov         r12, sp
  01c4c	e92d0001	 stmdb       sp!, {r0}
  01c50	e92d5000	 stmdb       sp!, {r12, lr}
  01c54		 |$M42586|
  01c54	e59f2018	 ldr         r2, [pc, #0x18]
  01c58	e59d3008	 ldr         r3, [sp, #8]
  01c5c	e5832000	 str         r2, [r3]

; 743  :     DeleteCriticalSection( &m_critSec );

  01c60	e59d3008	 ldr         r3, [sp, #8]
  01c64	e2830014	 add         r0, r3, #0x14
  01c68	eb000000	 bl          DeleteCriticalSection

; 744  : }

  01c6c	e89d6000	 ldmia       sp, {sp, lr}
  01c70	e12fff1e	 bx          lr
  01c74		 |$LN6@CSDIOContr@2|
  01c74		 |$LN7@CSDIOContr@2|
  01c74	00000000	 DCD         |??_7CSDIOControllerBase@@6B@|
  01c78		 |$M42587|

			 ENDP  ; |??1CSDIOControllerBase@@UAA@XZ|, CSDIOControllerBase::~CSDIOControllerBase

	EXPORT	|??1CReg@@QAA@XZ|			; CReg::~CReg
	EXPORT	|??_C@_1DK@LDINONC@?$AA?9?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?FreeHostContext@CSDIOControllerBase@@QAAXHH@Z| ; CSDIOControllerBase::FreeHostContext
	EXPORT	|??_C@_1JA@HAFADDPO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe@| [ DATA ] ; `string'
	EXPORT	|?DumpRegisters@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::DumpRegisters
	EXPORT	|??_C@_1IG@GACGDNLA@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LA@PCECKLLM@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IM@MJDNGFPL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HK@GBDBNDPB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IC@JONGLHBE@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@OHAOMDEK@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe@| [ DATA ] ; `string'
	EXPORT	|?Open@CReg@@QAAHPAUHKEY__@@PBGK@Z|	; CReg::Open
	EXPORT	|??_C@_1GC@PDGHDLBC@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAA?$AAc?$AAt?$AAi@| [ DATA ] ; `string'
	EXPORT	|??0CReg@@QAA@XZ|			; CReg::CReg
	EXPORT	|?Init@CSDIOControllerBase@@QAAHPBG@Z|	; CSDIOControllerBase::Init
	IMPORT	|RegCloseKey|
	IMPORT	|SDHCDRegisterHostController|
	IMPORT	|Sleep|
	IMPORT	|MmMapIoSpace|
	IMPORT	|SDHCDAllocateContext|
	IMPORT	|OpenDeviceKey|

  00078			 AREA	 |.pdata|, PDATA
|$T42616| DCD	|$LN42@Init|
	DCD	0x40013d04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@LDINONC@?$AA?9?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "C", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s"
	DCB	0x0, "e", 0x0, ":", 0x0, ":", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JA@HAFADDPO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "h", 0x0, "o", 0x0, "s"
	DCB	0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "%", 0x0, "0", 0x0, "x", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IG@GACGDNLA@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "C", 0x0, "D", 0x0, "/", 0x0, "R", 0x0, "W"
	DCB	0x0, " ", 0x0, "G", 0x0, "P", 0x0, "I", 0x0, "O", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LA@PCECKLLM@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "s", 0x0, "e", 0x0, "t"
	DCB	0x0, " ", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, " ", 0x0, "C"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " ", 0x0, "M"
	DCB	0x0, "a", 0x0, "n", 0x0, "a", 0x0, "g", 0x0, "m", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IM@MJDNGFPL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "M", 0x0, "M", 0x0, "C", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@GBDBNDPB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "r", 0x0, "y"
	DCB	0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, "t", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@JONGLHBE@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, ":"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@OHAOMDEK@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "o", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, " ", 0x0, "d"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "k", 0x0, "e", 0x0, "y", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@PDGHDLBC@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAA?$AAc?$AAt?$AAi@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s"
	DCB	0x0, "e", 0x0, ":", 0x0, ":", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, ":", 0x0, " ", 0x0, "A", 0x0, "c", 0x0, "t"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "g", 0x0, "P", 0x0, "a", 0x0, "t", 0x0, "h", 0x0, ":"
	DCB	0x0, " ", 0x0, "%", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  01c78			 AREA	 |.text|, CODE, ARM

  01c78		 |?Init@CSDIOControllerBase@@QAAHPBG@Z| PROC ; CSDIOControllerBase::Init

; 747  : {

  01c78		 |$LN42@Init|
  01c78	e1a0c00d	 mov         r12, sp
  01c7c	e92d0003	 stmdb       sp!, {r0, r1}
  01c80	e92d5000	 stmdb       sp!, {r12, lr}
  01c84	e24dd084	 sub         sp, sp, #0x84
  01c88		 |$M42613|

; 748  :     PSDCARD_HC_CONTEXT pHostContext = NULL; // new HC context

  01c88	e3a03000	 mov         r3, #0
  01c8c	e58d3024	 str         r3, [sp, #0x24]

; 749  :     SD_API_STATUS      status;              // SD status
; 750  :     HKEY               hKeyDevice = NULL;   // device key

  01c90	e3a03000	 mov         r3, #0
  01c94	e58d302c	 str         r3, [sp, #0x2C]

; 751  :     CReg               regDevice;           // encapsulated device key

  01c98	e28d0010	 add         r0, sp, #0x10
  01c9c	eb000000	 bl          |??0CReg@@QAA@XZ|
  01ca0	e58d0038	 str         r0, [sp, #0x38]

; 752  :     DWORD              dwRet = 0;           // return value    

  01ca4	e3a03000	 mov         r3, #0
  01ca8	e58d3000	 str         r3, [sp]

; 753  :     BOOL               fRegisteredWithBusDriver = FALSE;

  01cac	e3a03000	 mov         r3, #0
  01cb0	e58d3004	 str         r3, [sp, #4]

; 754  :     BOOL               fHardwareInitialized = FALSE;

  01cb4	e3a03000	 mov         r3, #0
  01cb8	e58d3020	 str         r3, [sp, #0x20]

; 755  :     PHYSICAL_ADDRESS   pa;
; 756  :     
; 757  :     DEBUGMSG(SDCARD_ZONE_INIT, (L"+CSDIOControllerBase::Init: "
; 758  :         L"Active RegPath: %s\r\n", pszActiveKey
; 759  :     ));

  01cbc	e59f3484	 ldr         r3, [pc, #0x484]
  01cc0	e5933440	 ldr         r3, [r3, #0x440]
  01cc4	e3130a02	 tst         r3, #2, 20
  01cc8	0a000005	 beq         |$LN22@Init|
  01ccc	e59d1090	 ldr         r1, [sp, #0x90]
  01cd0	e59f0490	 ldr         r0, [pc, #0x490]
  01cd4	eb000000	 bl          NKDbgPrintfW
  01cd8	e3a03001	 mov         r3, #1
  01cdc	e58d303c	 str         r3, [sp, #0x3C]
  01ce0	ea000001	 b           |$LN23@Init|
  01ce4		 |$LN22@Init|
  01ce4	e3a03000	 mov         r3, #0
  01ce8	e58d303c	 str         r3, [sp, #0x3C]
  01cec		 |$LN23@Init|

; 760  :    
; 761  :     m_pCurrentRequest = NULL;

  01cec	e59d308c	 ldr         r3, [sp, #0x8C]
  01cf0	e2832090	 add         r2, r3, #0x90
  01cf4	e3a03000	 mov         r3, #0
  01cf8	e5823000	 str         r3, [r2]

; 762  :     m_pszActiveKey = pszActiveKey; //save the activity key for power mgt

  01cfc	e59d308c	 ldr         r3, [sp, #0x8C]
  01d00	e283200c	 add         r2, r3, #0xC
  01d04	e59d3090	 ldr         r3, [sp, #0x90]
  01d08	e5823000	 str         r3, [r2]

; 763  :     
; 764  :     hKeyDevice = OpenDeviceKey(pszActiveKey);

  01d0c	e59d0090	 ldr         r0, [sp, #0x90]
  01d10	eb000000	 bl          OpenDeviceKey
  01d14	e58d0040	 str         r0, [sp, #0x40]
  01d18	e59d3040	 ldr         r3, [sp, #0x40]
  01d1c	e58d302c	 str         r3, [sp, #0x2C]

; 765  :     if ( (hKeyDevice == NULL) || !regDevice.Open(hKeyDevice, NULL) ) {

  01d20	e59d302c	 ldr         r3, [sp, #0x2C]
  01d24	e3530000	 cmp         r3, #0
  01d28	0a000009	 beq         |$LN18@Init|
  01d2c	e3a03802	 mov         r3, #2, 16
  01d30	e3833019	 orr         r3, r3, #0x19
  01d34	e3a02000	 mov         r2, #0
  01d38	e59d102c	 ldr         r1, [sp, #0x2C]
  01d3c	e28d0010	 add         r0, sp, #0x10
  01d40	eb000000	 bl          |?Open@CReg@@QAAHPAUHKEY__@@PBGK@Z|
  01d44	e58d0044	 str         r0, [sp, #0x44]
  01d48	e59d3044	 ldr         r3, [sp, #0x44]
  01d4c	e3530000	 cmp         r3, #0
  01d50	1a00000b	 bne         |$LN19@Init|
  01d54		 |$LN18@Init|

; 766  :         DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::Init: "
; 767  :             L"Failed to open device key\r\n"
; 768  :         ));

  01d54	e59f33ec	 ldr         r3, [pc, #0x3EC]
  01d58	e5933440	 ldr         r3, [r3, #0x440]
  01d5c	e3130902	 tst         r3, #2, 18
  01d60	0a000004	 beq         |$LN24@Init|
  01d64	e59f03f8	 ldr         r0, [pc, #0x3F8]
  01d68	eb000000	 bl          NKDbgPrintfW
  01d6c	e3a03001	 mov         r3, #1
  01d70	e58d3048	 str         r3, [sp, #0x48]
  01d74	ea000001	 b           |$LN25@Init|
  01d78		 |$LN24@Init|
  01d78	e3a03000	 mov         r3, #0
  01d7c	e58d3048	 str         r3, [sp, #0x48]
  01d80		 |$LN25@Init|

; 769  :         goto EXIT;

  01d80	ea0000c9	 b           |$EXIT$40477|
  01d84		 |$LN19@Init|

; 770  :     }
; 771  : 
; 772  :     // allocate the context - support for 2 Slots - BUT 1 controller
; 773  :     status = SDHCDAllocateContext(1, &m_pHCContext);

  01d84	e59d308c	 ldr         r3, [sp, #0x8C]
  01d88	e2831004	 add         r1, r3, #4
  01d8c	e3a00001	 mov         r0, #1
  01d90	eb000000	 bl          SDHCDAllocateContext
  01d94	e58d004c	 str         r0, [sp, #0x4C]
  01d98	e59d304c	 ldr         r3, [sp, #0x4C]
  01d9c	e58d3028	 str         r3, [sp, #0x28]

; 774  :     if (!SD_API_SUCCESS(status)) {

  01da0	e59d3028	 ldr         r3, [sp, #0x28]
  01da4	e3530000	 cmp         r3, #0
  01da8	aa00000c	 bge         |$LN16@Init|

; 775  :         DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::Init: "
; 776  :             L"Failed to allocate context : 0x%08X\r\n",
; 777  :             status
; 778  :         ));

  01dac	e59f3394	 ldr         r3, [pc, #0x394]
  01db0	e5933440	 ldr         r3, [r3, #0x440]
  01db4	e3130902	 tst         r3, #2, 18
  01db8	0a000005	 beq         |$LN26@Init|
  01dbc	e59d1028	 ldr         r1, [sp, #0x28]
  01dc0	e59f0398	 ldr         r0, [pc, #0x398]
  01dc4	eb000000	 bl          NKDbgPrintfW
  01dc8	e3a03001	 mov         r3, #1
  01dcc	e58d3050	 str         r3, [sp, #0x50]
  01dd0	ea000001	 b           |$LN27@Init|
  01dd4		 |$LN26@Init|
  01dd4	e3a03000	 mov         r3, #0
  01dd8	e58d3050	 str         r3, [sp, #0x50]
  01ddc		 |$LN27@Init|

; 779  :         goto EXIT;

  01ddc	ea0000b2	 b           |$EXIT$40477|
  01de0		 |$LN16@Init|

; 780  :     }
; 781  : 
; 782  :     // Set our extension
; 783  :     m_pHCContext->pHCSpecificContext = this;

  01de0	e59d308c	 ldr         r3, [sp, #0x8C]
  01de4	e2833004	 add         r3, r3, #4
  01de8	e5933000	 ldr         r3, [r3]
  01dec	e283204c	 add         r2, r3, #0x4C
  01df0	e59d308c	 ldr         r3, [sp, #0x8C]
  01df4	e5823000	 str         r3, [r2]

; 784  : 
; 785  :     if( !GetRegistrySettings(&regDevice) )

  01df8	e28d1010	 add         r1, sp, #0x10
  01dfc	e59d308c	 ldr         r3, [sp, #0x8C]
  01e00	e5933000	 ldr         r3, [r3]
  01e04	e2833024	 add         r3, r3, #0x24
  01e08	e59d008c	 ldr         r0, [sp, #0x8C]
  01e0c	e5933000	 ldr         r3, [r3]
  01e10	e1a0e00f	 mov         lr, pc
  01e14	e12fff13	 bx          r3
  01e18	e58d0054	 str         r0, [sp, #0x54]
  01e1c	e59d3054	 ldr         r3, [sp, #0x54]
  01e20	e3530000	 cmp         r3, #0
  01e24	1a00000d	 bne         |$LN14@Init|

; 786  :     {
; 787  :         DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::Init: "
; 788  :             L"Error reading registry settings\r\n"
; 789  :         ));

  01e28	e59f3318	 ldr         r3, [pc, #0x318]
  01e2c	e5933440	 ldr         r3, [r3, #0x440]
  01e30	e3130902	 tst         r3, #2, 18
  01e34	0a000004	 beq         |$LN28@Init|
  01e38	e59f031c	 ldr         r0, [pc, #0x31C]
  01e3c	eb000000	 bl          NKDbgPrintfW
  01e40	e3a03001	 mov         r3, #1
  01e44	e58d3058	 str         r3, [sp, #0x58]
  01e48	ea000001	 b           |$LN29@Init|
  01e4c		 |$LN28@Init|
  01e4c	e3a03000	 mov         r3, #0
  01e50	e58d3058	 str         r3, [sp, #0x58]
  01e54		 |$LN29@Init|

; 790  :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;

  01e54	e3a0313b	 mov         r3, #0x3B, 2
  01e58	e58d3028	 str         r3, [sp, #0x28]

; 791  :         goto EXIT;

  01e5c	ea000092	 b           |$EXIT$40477|
  01e60		 |$LN14@Init|

; 792  :     }
; 793  : 
; 794  :     // map hardware memory space
; 795  :     pa.QuadPart = OMAP2420_MSDI1_REGS_PA;

  01e60	e3a03312	 mov         r3, #0x12, 6
  01e64	e3833927	 orr         r3, r3, #0x27, 18
  01e68	e58d3008	 str         r3, [sp, #8]
  01e6c	e3a03000	 mov         r3, #0
  01e70	e58d300c	 str         r3, [sp, #0xC]

; 796  :     m_vpSDIOReg = (OMAP2420_SDIO_REGS*)MmMapIoSpace( pa, sizeof(OMAP2420_SDIO_REGS), FALSE );

  01e74	e3a03000	 mov         r3, #0
  01e78	e3a0206a	 mov         r2, #0x6A
  01e7c	e59d0008	 ldr         r0, [sp, #8]
  01e80	e59d100c	 ldr         r1, [sp, #0xC]
  01e84	eb000000	 bl          MmMapIoSpace
  01e88	e58d005c	 str         r0, [sp, #0x5C]
  01e8c	e59d308c	 ldr         r3, [sp, #0x8C]
  01e90	e2832088	 add         r2, r3, #0x88
  01e94	e59d305c	 ldr         r3, [sp, #0x5C]
  01e98	e5823000	 str         r3, [r2]

; 797  :     if ( !m_vpSDIOReg )

  01e9c	e59d308c	 ldr         r3, [sp, #0x8C]
  01ea0	e2833088	 add         r3, r3, #0x88
  01ea4	e5933000	 ldr         r3, [r3]
  01ea8	e3530000	 cmp         r3, #0
  01eac	1a00000d	 bne         |$LN12@Init|

; 798  :     {
; 799  :         DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::Init: "
; 800  :             L"Error allocating MMC controller register\r\n"
; 801  :         ));

  01eb0	e59f3290	 ldr         r3, [pc, #0x290]
  01eb4	e5933440	 ldr         r3, [r3, #0x440]
  01eb8	e3130902	 tst         r3, #2, 18
  01ebc	0a000004	 beq         |$LN30@Init|
  01ec0	e59f0290	 ldr         r0, [pc, #0x290]
  01ec4	eb000000	 bl          NKDbgPrintfW
  01ec8	e3a03001	 mov         r3, #1
  01ecc	e58d3060	 str         r3, [sp, #0x60]
  01ed0	ea000001	 b           |$LN31@Init|
  01ed4		 |$LN30@Init|
  01ed4	e3a03000	 mov         r3, #0
  01ed8	e58d3060	 str         r3, [sp, #0x60]
  01edc		 |$LN31@Init|

; 802  :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;

  01edc	e3a0313b	 mov         r3, #0x3B, 2
  01ee0	e58d3028	 str         r3, [sp, #0x28]

; 803  :         goto EXIT;

  01ee4	ea000070	 b           |$EXIT$40477|
  01ee8		 |$LN12@Init|

; 804  :     }
; 805  : 
; 806  :     pa.QuadPart = OMAP2420_PRCM_REGS_PA;

  01ee8	e3a03312	 mov         r3, #0x12, 6
  01eec	e3833902	 orr         r3, r3, #2, 18
  01ef0	e58d3008	 str         r3, [sp, #8]
  01ef4	e3a03000	 mov         r3, #0
  01ef8	e58d300c	 str         r3, [sp, #0xC]

; 807  :     m_vpPRCMReg = (OMAP2420_PRCM_REGS*)MmMapIoSpace( pa, sizeof(OMAP2420_PRCM_REGS), FALSE );

  01efc	e3a03000	 mov         r3, #0
  01f00	e3a02c09	 mov         r2, #9, 24
  01f04	e59d0008	 ldr         r0, [sp, #8]
  01f08	e59d100c	 ldr         r1, [sp, #0xC]
  01f0c	eb000000	 bl          MmMapIoSpace
  01f10	e58d0064	 str         r0, [sp, #0x64]
  01f14	e59d308c	 ldr         r3, [sp, #0x8C]
  01f18	e283208c	 add         r2, r3, #0x8C
  01f1c	e59d3064	 ldr         r3, [sp, #0x64]
  01f20	e5823000	 str         r3, [r2]

; 808  :     if ( !m_vpPRCMReg )

  01f24	e59d308c	 ldr         r3, [sp, #0x8C]
  01f28	e283308c	 add         r3, r3, #0x8C
  01f2c	e5933000	 ldr         r3, [r3]
  01f30	e3530000	 cmp         r3, #0
  01f34	1a00000d	 bne         |$LN10@Init|

; 809  :     {
; 810  :         DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::Init: "
; 811  :             L"Error allocating Power Reset and Clock Managment Registers\r\n"
; 812  :         ));

  01f38	e59f3208	 ldr         r3, [pc, #0x208]
  01f3c	e5933440	 ldr         r3, [r3, #0x440]
  01f40	e3130902	 tst         r3, #2, 18
  01f44	0a000004	 beq         |$LN32@Init|
  01f48	e59f0204	 ldr         r0, [pc, #0x204]
  01f4c	eb000000	 bl          NKDbgPrintfW
  01f50	e3a03001	 mov         r3, #1
  01f54	e58d3068	 str         r3, [sp, #0x68]
  01f58	ea000001	 b           |$LN33@Init|
  01f5c		 |$LN32@Init|
  01f5c	e3a03000	 mov         r3, #0
  01f60	e58d3068	 str         r3, [sp, #0x68]
  01f64		 |$LN33@Init|

; 813  :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;

  01f64	e3a0313b	 mov         r3, #0x3B, 2
  01f68	e58d3028	 str         r3, [sp, #0x28]

; 814  :         goto EXIT;

  01f6c	ea00004e	 b           |$EXIT$40477|
  01f70		 |$LN10@Init|

; 815  :     }
; 816  : 
; 817  :     
; 818  :     if( !InitializeHardware() )

  01f70	e59d308c	 ldr         r3, [sp, #0x8C]
  01f74	e5933000	 ldr         r3, [r3]
  01f78	e2833008	 add         r3, r3, #8
  01f7c	e59d008c	 ldr         r0, [sp, #0x8C]
  01f80	e5933000	 ldr         r3, [r3]
  01f84	e1a0e00f	 mov         lr, pc
  01f88	e12fff13	 bx          r3
  01f8c	e58d006c	 str         r0, [sp, #0x6C]
  01f90	e59d306c	 ldr         r3, [sp, #0x6C]
  01f94	e3530000	 cmp         r3, #0
  01f98	1a00000d	 bne         |$LN8@Init|

; 819  :     {
; 820  :         DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::Init: "
; 821  :             L"Error allocating CD/RW GPIO registers\r\n"
; 822  :         ));

  01f9c	e59f31a4	 ldr         r3, [pc, #0x1A4]
  01fa0	e5933440	 ldr         r3, [r3, #0x440]
  01fa4	e3130902	 tst         r3, #2, 18
  01fa8	0a000004	 beq         |$LN34@Init|
  01fac	e59f019c	 ldr         r0, [pc, #0x19C]
  01fb0	eb000000	 bl          NKDbgPrintfW
  01fb4	e3a03001	 mov         r3, #1
  01fb8	e58d3070	 str         r3, [sp, #0x70]
  01fbc	ea000001	 b           |$LN35@Init|
  01fc0		 |$LN34@Init|
  01fc0	e3a03000	 mov         r3, #0
  01fc4	e58d3070	 str         r3, [sp, #0x70]
  01fc8		 |$LN35@Init|

; 823  :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;

  01fc8	e3a0313b	 mov         r3, #0x3B, 2
  01fcc	e58d3028	 str         r3, [sp, #0x28]

; 824  :         goto EXIT;

  01fd0	ea000035	 b           |$EXIT$40477|
  01fd4		 |$LN8@Init|

; 825  :     }
; 826  : 
; 827  :     // turn the SDHC controller to fully on!
; 828  :     ClockOn();

  01fd4	e59d008c	 ldr         r0, [sp, #0x8C]
  01fd8	eb000000	 bl          |?ClockOn@CSDIOControllerBase@@QAAXXZ|

; 829  :     this->m_PowerState = D0;

  01fdc	e59d308c	 ldr         r3, [sp, #0x8C]
  01fe0	e2832010	 add         r2, r3, #0x10
  01fe4	e3a03000	 mov         r3, #0
  01fe8	e5823000	 str         r3, [r2]

; 830  : 
; 831  :     fHardwareInitialized = TRUE;

  01fec	e3a03001	 mov         r3, #1
  01ff0	e58d3020	 str         r3, [sp, #0x20]

; 832  : 
; 833  :     // Initialize the slot
; 834  :     SoftwareReset(SOFT_RESET_ALL);

  01ff4	e3a01002	 mov         r1, #2
  01ff8	e59d008c	 ldr         r0, [sp, #0x8C]
  01ffc	eb000000	 bl          |?SoftwareReset@CSDIOControllerBase@@QAAXE@Z|

; 835  :     Sleep(10); // Allow time for card to power down after a device reset

  02000	e3a0000a	 mov         r0, #0xA
  02004	eb000000	 bl          Sleep

; 836  :     DumpRegisters();

  02008	e59d008c	 ldr         r0, [sp, #0x8C]
  0200c	eb000000	 bl          |?DumpRegisters@CSDIOControllerBase@@QAAXXZ|

; 837  : 
; 838  :     // Read SD Host Controller Info from register.
; 839  :     if (!InterpretCapabilities()) 

  02010	e59d308c	 ldr         r3, [sp, #0x8C]
  02014	e5933000	 ldr         r3, [r3]
  02018	e2833028	 add         r3, r3, #0x28
  0201c	e59d008c	 ldr         r0, [sp, #0x8C]
  02020	e5933000	 ldr         r3, [r3]
  02024	e1a0e00f	 mov         lr, pc
  02028	e12fff13	 bx          r3
  0202c	e58d0074	 str         r0, [sp, #0x74]
  02030	e59d3074	 ldr         r3, [sp, #0x74]
  02034	e3530000	 cmp         r3, #0
  02038	1a000000	 bne         |$LN6@Init|

; 840  :     {
; 841  :         goto EXIT;

  0203c	ea00001a	 b           |$EXIT$40477|
  02040		 |$LN6@Init|

; 842  :     }
; 843  : 
; 844  :     // now register the host controller 
; 845  :     status = SDHCDRegisterHostController(m_pHCContext);

  02040	e59d308c	 ldr         r3, [sp, #0x8C]
  02044	e2833004	 add         r3, r3, #4
  02048	e5930000	 ldr         r0, [r3]
  0204c	eb000000	 bl          SDHCDRegisterHostController
  02050	e58d0078	 str         r0, [sp, #0x78]
  02054	e59d3078	 ldr         r3, [sp, #0x78]
  02058	e58d3028	 str         r3, [sp, #0x28]

; 846  : 
; 847  :     if (!SD_API_SUCCESS(status)) {

  0205c	e59d3028	 ldr         r3, [sp, #0x28]
  02060	e3530000	 cmp         r3, #0
  02064	aa00000c	 bge         |$LN4@Init|

; 848  :         DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::Init: "
; 849  :             L"Failed to register host controller: %0x08X\r\n", status
; 850  :         ));

  02068	e59f30d8	 ldr         r3, [pc, #0xD8]
  0206c	e5933440	 ldr         r3, [r3, #0x440]
  02070	e3130902	 tst         r3, #2, 18
  02074	0a000005	 beq         |$LN36@Init|
  02078	e59d1028	 ldr         r1, [sp, #0x28]
  0207c	e59f00c8	 ldr         r0, [pc, #0xC8]
  02080	eb000000	 bl          NKDbgPrintfW
  02084	e3a03001	 mov         r3, #1
  02088	e58d307c	 str         r3, [sp, #0x7C]
  0208c	ea000001	 b           |$LN37@Init|
  02090		 |$LN36@Init|
  02090	e3a03000	 mov         r3, #0
  02094	e58d307c	 str         r3, [sp, #0x7C]
  02098		 |$LN37@Init|

; 851  :         goto EXIT;

  02098	ea000003	 b           |$EXIT$40477|
  0209c		 |$LN4@Init|

; 852  :     }
; 853  : 
; 854  :     fRegisteredWithBusDriver = TRUE;

  0209c	e3a03001	 mov         r3, #1
  020a0	e58d3004	 str         r3, [sp, #4]

; 855  : 
; 856  :     // return the controller context
; 857  :     dwRet = (DWORD) this;

  020a4	e59d308c	 ldr         r3, [sp, #0x8C]
  020a8	e58d3000	 str         r3, [sp]
  020ac		 |$EXIT$40477|

; 858  : 
; 859  : EXIT:
; 860  :     if (hKeyDevice) RegCloseKey(hKeyDevice);

  020ac	e59d302c	 ldr         r3, [sp, #0x2C]
  020b0	e3530000	 cmp         r3, #0
  020b4	0a000001	 beq         |$LN2@Init|
  020b8	e59d002c	 ldr         r0, [sp, #0x2C]
  020bc	eb000000	 bl          RegCloseKey
  020c0		 |$LN2@Init|

; 861  : 
; 862  :     if ( (dwRet == 0) && m_pHCContext ) {

  020c0	e59d3000	 ldr         r3, [sp]
  020c4	e3530000	 cmp         r3, #0
  020c8	1a000008	 bne         |$LN1@Init|
  020cc	e59d308c	 ldr         r3, [sp, #0x8C]
  020d0	e2833004	 add         r3, r3, #4
  020d4	e5933000	 ldr         r3, [r3]
  020d8	e3530000	 cmp         r3, #0
  020dc	0a000003	 beq         |$LN1@Init|

; 863  :         FreeHostContext( fRegisteredWithBusDriver, fHardwareInitialized );

  020e0	e59d2020	 ldr         r2, [sp, #0x20]
  020e4	e59d1004	 ldr         r1, [sp, #4]
  020e8	e59d008c	 ldr         r0, [sp, #0x8C]
  020ec	eb000000	 bl          |?FreeHostContext@CSDIOControllerBase@@QAAXHH@Z|
  020f0		 |$LN1@Init|

; 864  :     }
; 865  : 
; 866  :     DEBUGMSG(SDCARD_ZONE_INIT, (L"-CSDIOControllerBase::Init\r\n"));

  020f0	e59f3050	 ldr         r3, [pc, #0x50]
  020f4	e5933440	 ldr         r3, [r3, #0x440]
  020f8	e3130a02	 tst         r3, #2, 20
  020fc	0a000004	 beq         |$LN38@Init|
  02100	e59f003c	 ldr         r0, [pc, #0x3C]
  02104	eb000000	 bl          NKDbgPrintfW
  02108	e3a03001	 mov         r3, #1
  0210c	e58d3080	 str         r3, [sp, #0x80]
  02110	ea000001	 b           |$LN39@Init|
  02114		 |$LN38@Init|
  02114	e3a03000	 mov         r3, #0
  02118	e58d3080	 str         r3, [sp, #0x80]
  0211c		 |$LN39@Init|

; 867  : 
; 868  :     return dwRet;

  0211c	e59d3000	 ldr         r3, [sp]
  02120	e58d3030	 str         r3, [sp, #0x30]
  02124	e28d0010	 add         r0, sp, #0x10
  02128	eb000000	 bl          |??1CReg@@QAA@XZ|
  0212c	e59d3030	 ldr         r3, [sp, #0x30]
  02130	e58d3034	 str         r3, [sp, #0x34]

; 869  : }

  02134	e59d0034	 ldr         r0, [sp, #0x34]
  02138	e28dd084	 add         sp, sp, #0x84
  0213c	e89d6000	 ldmia       sp, {sp, lr}
  02140	e12fff1e	 bx          lr
  02144		 |$LN43@Init|
  02144		 |$LN44@Init|
  02144	00000000	 DCD         |??_C@_1DK@LDINONC@?$AA?9?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  02148		 |$LN45@Init|
  02148	00000000	 DCD         |dpCurSettings|
  0214c		 |$LN46@Init|
  0214c	00000000	 DCD         |??_C@_1JA@HAFADDPO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe@|
  02150		 |$LN47@Init|
  02150	00000000	 DCD         |??_C@_1IG@GACGDNLA@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@|
  02154		 |$LN48@Init|
  02154	00000000	 DCD         |??_C@_1LA@PCECKLLM@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@|
  02158		 |$LN49@Init|
  02158	00000000	 DCD         |??_C@_1IM@MJDNGFPL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@|
  0215c		 |$LN50@Init|
  0215c	00000000	 DCD         |??_C@_1HK@GBDBNDPB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@|
  02160		 |$LN51@Init|
  02160	00000000	 DCD         |??_C@_1IC@JONGLHBE@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe@|
  02164		 |$LN52@Init|
  02164	00000000	 DCD         |??_C@_1GO@OHAOMDEK@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe@|
  02168		 |$LN53@Init|
  02168	00000000	 DCD         |??_C@_1GC@PDGHDLBC@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAA?$AAc?$AAt?$AAi@|
  0216c		 |$M42614|

			 ENDP  ; |?Init@CSDIOControllerBase@@QAAHPBG@Z|, CSDIOControllerBase::Init

	EXPORT	|?Reset@CReg@@QAAXXZ|			; CReg::Reset
	IMPORT	|RegOpenKeyExW|
; File c:\wince600\public\common\sdk\inc\creg.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T42636| DCD	|$LN7@Open|
	DCD	0x40001c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Open@CReg@@QAAHPAUHKEY__@@PBGK@Z| PROC ; CReg::Open

; 49   : 	BOOL Open(HKEY hkRoot, LPCTSTR pszKey, REGSAM sam=KEY_READ) {

  00000		 |$LN7@Open|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd014	 sub         sp, sp, #0x14
  00010		 |$M42633|

; 50   : 		Reset();

  00010	e59d001c	 ldr         r0, [sp, #0x1C]
  00014	eb000000	 bl          |?Reset@CReg@@QAAXXZ|

; 51   : 		return ERROR_SUCCESS==RegOpenKeyEx(hkRoot, pszKey, 0, sam, &m_hKey);

  00018	e59d301c	 ldr         r3, [sp, #0x1C]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d3028	 ldr         r3, [sp, #0x28]
  00024	e3a02000	 mov         r2, #0
  00028	e59d1024	 ldr         r1, [sp, #0x24]
  0002c	e59d0020	 ldr         r0, [sp, #0x20]
  00030	eb000000	 bl          RegOpenKeyExW
  00034	e58d000c	 str         r0, [sp, #0xC]
  00038	e59d300c	 ldr         r3, [sp, #0xC]
  0003c	e3530000	 cmp         r3, #0
  00040	1a000002	 bne         |$LN3@Open|
  00044	e3a03001	 mov         r3, #1
  00048	e58d3010	 str         r3, [sp, #0x10]
  0004c	ea000001	 b           |$LN4@Open|
  00050		 |$LN3@Open|
  00050	e3a03000	 mov         r3, #0
  00054	e58d3010	 str         r3, [sp, #0x10]
  00058		 |$LN4@Open|
  00058	e59d3010	 ldr         r3, [sp, #0x10]
  0005c	e58d3008	 str         r3, [sp, #8]

; 52   : 	}

  00060	e59d0008	 ldr         r0, [sp, #8]
  00064	e28dd014	 add         sp, sp, #0x14
  00068	e89d6000	 ldmia       sp, {sp, lr}
  0006c	e12fff1e	 bx          lr
  00070		 |$M42634|

			 ENDP  ; |?Open@CReg@@QAAHPAUHKEY__@@PBGK@Z|, CReg::Open

	EXPORT	|?ZeroEntries@CReg@@AAAXXZ|		; CReg::ZeroEntries

  00000			 AREA	 |.pdata|, PDATA
|$T42644| DCD	|$LN5@CReg|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CReg@@QAA@XZ| PROC			; CReg::CReg

; 63   : 	CReg() {

  00000		 |$LN5@CReg|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42641|

; 64   : 		ZeroEntries();

  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |?ZeroEntries@CReg@@AAAXXZ|

; 65   : 	}

  00018	e59d300c	 ldr         r3, [sp, #0xC]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M42642|

			 ENDP  ; |??0CReg@@QAA@XZ|, CReg::CReg


  00000			 AREA	 |.pdata|, PDATA
|$T42651| DCD	|$LN5@ZeroEntrie|
	DCD	0x40001403
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ZeroEntries@CReg@@AAAXXZ| PROC	; CReg::ZeroEntries

; 35   : 	void ZeroEntries() {

  00000		 |$LN5@ZeroEntrie|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42648|

; 36   : 		m_hKey      = NULL;

  0000c	e59d2008	 ldr         r2, [sp, #8]
  00010	e3a03000	 mov         r3, #0
  00014	e5823000	 str         r3, [r2]

; 37   : 		m_Index     = 0;

  00018	e59d3008	 ldr         r3, [sp, #8]
  0001c	e2832004	 add         r2, r3, #4
  00020	e3a03000	 mov         r3, #0
  00024	e5823000	 str         r3, [r2]

; 38   : 		m_lpbValue  = NULL;

  00028	e59d3008	 ldr         r3, [sp, #8]
  0002c	e2832008	 add         r2, r3, #8
  00030	e3a03000	 mov         r3, #0
  00034	e5823000	 str         r3, [r2]

; 39   : 		m_iValueLen = 0;

  00038	e59d3008	 ldr         r3, [sp, #8]
  0003c	e283200c	 add         r2, r3, #0xC
  00040	e3a03000	 mov         r3, #0
  00044	e5823000	 str         r3, [r2]

; 40   : 	}

  00048	e89d6000	 ldmia       sp, {sp, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M42649|

			 ENDP  ; |?ZeroEntries@CReg@@AAAXXZ|, CReg::ZeroEntries

	EXPORT	|??_C@_1FG@JGKPJKKG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo?$AAn?$AA?2?$AAs?$AAd?$AAk?$AA?2?$AAi?$AAn@| [ DATA ] ; `string'
	IMPORT	|LocalFree|

  00000			 AREA	 |.pdata|, PDATA
|$T42660| DCD	|$LN9@CReg@2|
	DCD	0x40002a04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@JGKPJKKG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo?$AAn?$AA?2?$AAs?$AAd?$AAk?$AA?2?$AAi?$AAn@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "p"
	DCB	0x0, "u", 0x0, "b", 0x0, "l", 0x0, "i", 0x0, "c", 0x0, "\\"
	DCB	0x0, "c", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "o", 0x0, "n"
	DCB	0x0, "\\", 0x0, "s", 0x0, "d", 0x0, "k", 0x0, "\\", 0x0, "i"
	DCB	0x0, "n", 0x0, "c", 0x0, "\\", 0x0, "c", 0x0, "r", 0x0, "e"
	DCB	0x0, "g", 0x0, ".", 0x0, "h", 0x0, "x", 0x0, "x", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CReg@@QAA@XZ| PROC			; CReg::~CReg

; 67   : 	~CReg() { 

  00000		 |$LN9@CReg@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42657|

; 68   : 		if(m_hKey) RegCloseKey(m_hKey); 

  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e5933000	 ldr         r3, [r3]
  00018	e3530000	 cmp         r3, #0
  0001c	0a000002	 beq         |$LN2@CReg@2|
  00020	e59d300c	 ldr         r3, [sp, #0xC]
  00024	e5930000	 ldr         r0, [r3]
  00028	eb000000	 bl          RegCloseKey
  0002c		 |$LN2@CReg@2|

; 69   : 		if (m_lpbValue) {

  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e2833008	 add         r3, r3, #8
  00034	e5933000	 ldr         r3, [r3]
  00038	e3530000	 cmp         r3, #0
  0003c	0a000013	 beq         |$LN1@CReg@2|

; 70   : 			ASSERT(m_iValueLen != 0);

  00040	e59d300c	 ldr         r3, [sp, #0xC]
  00044	e283300c	 add         r3, r3, #0xC
  00048	e5933000	 ldr         r3, [r3]
  0004c	e3530000	 cmp         r3, #0
  00050	0a000002	 beq         |$LN5@CReg@2|
  00054	e3a03001	 mov         r3, #1
  00058	e58d3000	 str         r3, [sp]
  0005c	ea000007	 b           |$LN6@CReg@2|
  00060		 |$LN5@CReg@2|
  00060	e3a03046	 mov         r3, #0x46
  00064	e59f2038	 ldr         r2, [pc, #0x38]
  00068	e59f1030	 ldr         r1, [pc, #0x30]
  0006c	e59f0028	 ldr         r0, [pc, #0x28]
  00070	eb000000	 bl          NKDbgPrintfW
  00074	e6000010	 __debugbreak_ce
  00078	e3a03000	 mov         r3, #0
  0007c	e58d3000	 str         r3, [sp]
  00080		 |$LN6@CReg@2|

; 71   : 			LocalFree(m_lpbValue);

  00080	e59d300c	 ldr         r3, [sp, #0xC]
  00084	e2833008	 add         r3, r3, #8
  00088	e5930000	 ldr         r0, [r3]
  0008c	eb000000	 bl          LocalFree
  00090		 |$LN1@CReg@2|

; 72   : 		}
; 73   : 	}

  00090	e28dd004	 add         sp, sp, #4
  00094	e89d6000	 ldmia       sp, {sp, lr}
  00098	e12fff1e	 bx          lr
  0009c		 |$LN10@CReg@2|
  0009c		 |$LN11@CReg@2|
  0009c	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  000a0		 |$LN12@CReg@2|
  000a0	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  000a4		 |$LN13@CReg@2|
  000a4	00000000	 DCD         |??_C@_1FG@JGKPJKKG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo?$AAn?$AA?2?$AAs?$AAd?$AAk?$AA?2?$AAi?$AAn@|
  000a8		 |$M42658|

			 ENDP  ; |??1CReg@@QAA@XZ|, CReg::~CReg


  00000			 AREA	 |.pdata|, PDATA
|$T42671| DCD	|$LN6@Reset|
	DCD	0x40001303
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Reset@CReg@@QAAXXZ| PROC		; CReg::Reset

; 75   : 	void Reset() { 

  00000		 |$LN6@Reset|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42668|

; 76   : 		if(m_hKey) {

  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e5933000	 ldr         r3, [r3]
  00014	e3530000	 cmp         r3, #0
  00018	0a000005	 beq         |$LN1@Reset|

; 77   : 			RegCloseKey(m_hKey); 

  0001c	e59d3008	 ldr         r3, [sp, #8]
  00020	e5930000	 ldr         r0, [r3]
  00024	eb000000	 bl          RegCloseKey

; 78   : 			m_hKey = NULL;

  00028	e59d2008	 ldr         r2, [sp, #8]
  0002c	e3a03000	 mov         r3, #0
  00030	e5823000	 str         r3, [r2]
  00034		 |$LN1@Reset|

; 79   : 		}
; 80   : 		m_Index = 0;

  00034	e59d3008	 ldr         r3, [sp, #8]
  00038	e2832004	 add         r2, r3, #4
  0003c	e3a03000	 mov         r3, #0
  00040	e5823000	 str         r3, [r2]

; 81   : 	}

  00044	e89d6000	 ldmia       sp, {sp, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$M42669|

			 ENDP  ; |?Reset@CReg@@QAAXXZ|, CReg::Reset

; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\sdhc\base\sdhc.h

  00000			 AREA	 |.pdata|, PDATA
|$T42678| DCD	|$LN5@DumpRegist|
	DCD	0x40000503
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DumpRegisters@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::DumpRegisters

; 141  :     VOID DumpRegisters() {}

  00000		 |$LN5@DumpRegist|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42675|
  0000c	e89d6000	 ldmia       sp, {sp, lr}
  00010	e12fff1e	 bx          lr
  00014		 |$M42676|

			 ENDP  ; |?DumpRegisters@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::DumpRegisters

	IMPORT	|SDHCDDeleteContext|
	IMPORT	|MmUnmapIoSpace|
	IMPORT	|SDHCDDeregisterHostController|

  00080			 AREA	 |.pdata|, PDATA
|$T42687| DCD	|$LN10@FreeHostCo|
	DCD	0x40004704
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\sdhc\base\sdhc.cpp

  0216c			 AREA	 |.text|, CODE, ARM

  0216c		 |?FreeHostContext@CSDIOControllerBase@@QAAXHH@Z| PROC ; CSDIOControllerBase::FreeHostContext

; 874  : {

  0216c		 |$LN10@FreeHostCo|
  0216c	e1a0c00d	 mov         r12, sp
  02170	e92d0007	 stmdb       sp!, {r0 - r2}
  02174	e92d5000	 stmdb       sp!, {r12, lr}
  02178	e24dd004	 sub         sp, sp, #4
  0217c		 |$M42684|

; 875  :     DEBUGCHK(m_pHCContext);

  0217c	e59d300c	 ldr         r3, [sp, #0xC]
  02180	e2833004	 add         r3, r3, #4
  02184	e5933000	 ldr         r3, [r3]
  02188	e3530000	 cmp         r3, #0
  0218c	0a000002	 beq         |$LN6@FreeHostCo|
  02190	e3a03001	 mov         r3, #1
  02194	e58d3000	 str         r3, [sp]
  02198	ea000008	 b           |$LN7@FreeHostCo|
  0219c		 |$LN6@FreeHostCo|
  0219c	e3a03c03	 mov         r3, #3, 24
  021a0	e383306b	 orr         r3, r3, #0x6B
  021a4	e59f20d8	 ldr         r2, [pc, #0xD8]
  021a8	e59f10d0	 ldr         r1, [pc, #0xD0]
  021ac	e59f00c8	 ldr         r0, [pc, #0xC8]
  021b0	eb000000	 bl          NKDbgPrintfW
  021b4	e6000010	 __debugbreak_ce
  021b8	e3a03000	 mov         r3, #0
  021bc	e58d3000	 str         r3, [sp]
  021c0		 |$LN7@FreeHostCo|

; 876  :     ClockOff();

  021c0	e59d000c	 ldr         r0, [sp, #0xC]
  021c4	eb000000	 bl          |?ClockOff@CSDIOControllerBase@@QAAXXZ|

; 877  : 
; 878  :     if (fRegisteredWithBusDriver) {

  021c8	e59d3010	 ldr         r3, [sp, #0x10]
  021cc	e3530000	 cmp         r3, #0
  021d0	0a000003	 beq         |$LN3@FreeHostCo|

; 879  :         // deregister the host controller
; 880  :         SDHCDDeregisterHostController(m_pHCContext);

  021d4	e59d300c	 ldr         r3, [sp, #0xC]
  021d8	e2833004	 add         r3, r3, #4
  021dc	e5930000	 ldr         r0, [r3]
  021e0	eb000000	 bl          SDHCDDeregisterHostController
  021e4		 |$LN3@FreeHostCo|

; 881  :     }
; 882  : 
; 883  :     // unmap hardware memory space
; 884  : 
; 885  :     DeinitializeHardware();

  021e4	e59d300c	 ldr         r3, [sp, #0xC]
  021e8	e5933000	 ldr         r3, [r3]
  021ec	e283300c	 add         r3, r3, #0xC
  021f0	e59d000c	 ldr         r0, [sp, #0xC]
  021f4	e5933000	 ldr         r3, [r3]
  021f8	e1a0e00f	 mov         lr, pc
  021fc	e12fff13	 bx          r3

; 886  :     if (m_vpSDIOReg) MmUnmapIoSpace((PVOID)m_vpSDIOReg, sizeof(OMAP2420_SDIO_REGS));

  02200	e59d300c	 ldr         r3, [sp, #0xC]
  02204	e2833088	 add         r3, r3, #0x88
  02208	e5933000	 ldr         r3, [r3]
  0220c	e3530000	 cmp         r3, #0
  02210	0a000004	 beq         |$LN2@FreeHostCo|
  02214	e3a0106a	 mov         r1, #0x6A
  02218	e59d300c	 ldr         r3, [sp, #0xC]
  0221c	e2833088	 add         r3, r3, #0x88
  02220	e5930000	 ldr         r0, [r3]
  02224	eb000000	 bl          MmUnmapIoSpace
  02228		 |$LN2@FreeHostCo|

; 887  :     if (m_vpPRCMReg) MmUnmapIoSpace((PVOID)m_vpPRCMReg, sizeof(OMAP2420_PRCM_REGS));

  02228	e59d300c	 ldr         r3, [sp, #0xC]
  0222c	e283308c	 add         r3, r3, #0x8C
  02230	e5933000	 ldr         r3, [r3]
  02234	e3530000	 cmp         r3, #0
  02238	0a000004	 beq         |$LN1@FreeHostCo|
  0223c	e3a01c09	 mov         r1, #9, 24
  02240	e59d300c	 ldr         r3, [sp, #0xC]
  02244	e283308c	 add         r3, r3, #0x8C
  02248	e5930000	 ldr         r0, [r3]
  0224c	eb000000	 bl          MmUnmapIoSpace
  02250		 |$LN1@FreeHostCo|

; 888  : 
; 889  :     m_PowerState = D4;

  02250	e59d300c	 ldr         r3, [sp, #0xC]
  02254	e2832010	 add         r2, r3, #0x10
  02258	e3a03004	 mov         r3, #4
  0225c	e5823000	 str         r3, [r2]

; 890  :     
; 891  :     // cleanup the host context
; 892  :     SDHCDDeleteContext(m_pHCContext);

  02260	e59d300c	 ldr         r3, [sp, #0xC]
  02264	e2833004	 add         r3, r3, #4
  02268	e5930000	 ldr         r0, [r3]
  0226c	eb000000	 bl          SDHCDDeleteContext

; 893  : }    

  02270	e28dd004	 add         sp, sp, #4
  02274	e89d6000	 ldmia       sp, {sp, lr}
  02278	e12fff1e	 bx          lr
  0227c		 |$LN11@FreeHostCo|
  0227c		 |$LN12@FreeHostCo|
  0227c	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  02280		 |$LN13@FreeHostCo|
  02280	00000000	 DCD         |dpCurSettings|
  02284		 |$LN14@FreeHostCo|
  02284	00000000	 DCD         |??_C@_1JA@LIPKICML@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  02288		 |$M42685|

			 ENDP  ; |?FreeHostContext@CSDIOControllerBase@@QAAXHH@Z|, CSDIOControllerBase::FreeHostContext

	EXPORT	|??_C@_1FG@MGNLGEBC@?$AA?9?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HK@BIJALHOA@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@CAOEMLBJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IK@KFNGHPKO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IO@KIJDLAKP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@JAIDNHGH@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HI@CNEOFDPO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@NIDJFGPI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IK@PGKNKAPE@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JO@CJAFIAOL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@LPLFKHEP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IE@IBJFBKPJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JM@CBEMKEPO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JE@HKICDGN@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI@| [ DATA ] ; `string'
	EXPORT	|?IOControl@CSDIOControllerBase@@QAAHKPAEK0KPAK@Z| ; CSDIOControllerBase::IOControl
	IMPORT	|CeSafeCopyMemory|
	IMPORT	|memset|

  00088			 AREA	 |.pdata|, PDATA
|$T42745| DCD	|$LN72@IOControl|
	DCD	0x40015804

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@MGNLGEBC@?$AA?9?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI@| DCB "-"
	DCB	0x0, "C", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s"
	DCB	0x0, "e", 0x0, ":", 0x0, ":", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@BIJALHOA@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, ":"
	DCB	0x0, " ", 0x0, "U", 0x0, "n", 0x0, "k", 0x0, "n", 0x0, "o"
	DCB	0x0, "w", 0x0, "n", 0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "T", 0x0, "L", 0x0, "_", 0x0, "x", 0x0, "x", 0x0, "x"
	DCB	0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "."
	DCB	0x0, "8", 0x0, "X", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@CAOEMLBJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@KFNGHPKO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IO@KIJDLAKP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R"
	DCB	0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "p", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@JAIDNHGH@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R"
	DCB	0x0, "_", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "U", 0x0, "p"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@CNEOFDPO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R"
	DCB	0x0, "_", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "D", 0x0, "o"
	DCB	0x0, "w", 0x0, "n", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@NIDJFGPI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R"
	DCB	0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@PGKNKAPE@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R"
	DCB	0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JO@CJAFIAOL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R"
	DCB	0x0, "_", 0x0, "Q", 0x0, "U", 0x0, "E", 0x0, "R", 0x0, "Y"
	DCB	0x0, " ", 0x0, "D", 0x0, "e", 0x0, "p", 0x0, "r", 0x0, "e"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "F", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, " ", 0x0, "C", 0x0, "a", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@LPLFKHEP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, ":"
	DCB	0x0, " ", 0x0, "C", 0x0, "e", 0x0, "S", 0x0, "a", 0x0, "f"
	DCB	0x0, "e", 0x0, "C", 0x0, "o", 0x0, "p", 0x0, "y", 0x0, "M"
	DCB	0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " "
	DCB	0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@IBJFBKPJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R"
	DCB	0x0, "_", 0x0, "C", 0x0, "A", 0x0, "P", 0x0, "A", 0x0, "B"
	DCB	0x0, "I", 0x0, "L", 0x0, "I", 0x0, "T", 0x0, "I", 0x0, "E"
	DCB	0x0, "S", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JM@CBEMKEPO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R"
	DCB	0x0, "_", 0x0, "C", 0x0, "A", 0x0, "P", 0x0, "A", 0x0, "B"
	DCB	0x0, "I", 0x0, "L", 0x0, "I", 0x0, "T", 0x0, "I", 0x0, "E"
	DCB	0x0, "S", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "p", 0x0, "a"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JE@HKICDGN@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s"
	DCB	0x0, "e", 0x0, ":", 0x0, ":", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  02288			 AREA	 |.text|, CODE, ARM

  02288		 |?IOControl@CSDIOControllerBase@@QAAHKPAEK0KPAK@Z| PROC ; CSDIOControllerBase::IOControl

; 903  : {

  02288		 |$LN72@IOControl|
  02288	e1a0c00d	 mov         r12, sp
  0228c	e92d000f	 stmdb       sp!, {r0 - r3}
  02290	e92d5000	 stmdb       sp!, {r12, lr}
  02294	e24dd0a0	 sub         sp, sp, #0xA0
  02298		 |$M42742|

; 904  :     BOOL bRetVal = FALSE;

  02298	e3a03000	 mov         r3, #0
  0229c	e58d300c	 str         r3, [sp, #0xC]

; 905  :     
; 906  :     DEBUGMSG(SDCARD_ZONE_FUNC, (L"+CSDIOControllerBase::IOControl(0x%08x, 0x%08x, %d, 0x%08x, %d, 0x%08x)\r\n",
; 907  :         dwCode, pInBuffer, inSize, pOutBuffer, outSize, pOutSize
; 908  :     ));

  022a0	e59f3508	 ldr         r3, [pc, #0x508]
  022a4	e5933440	 ldr         r3, [r3, #0x440]
  022a8	e3130b02	 tst         r3, #2, 22
  022ac	0a00000d	 beq         |$LN25@IOControl|
  022b0	e59d30c0	 ldr         r3, [sp, #0xC0]
  022b4	e58d3008	 str         r3, [sp, #8]
  022b8	e59d30bc	 ldr         r3, [sp, #0xBC]
  022bc	e58d3004	 str         r3, [sp, #4]
  022c0	e59d30b8	 ldr         r3, [sp, #0xB8]
  022c4	e58d3000	 str         r3, [sp]
  022c8	e59d30b4	 ldr         r3, [sp, #0xB4]
  022cc	e59d20b0	 ldr         r2, [sp, #0xB0]
  022d0	e59d10ac	 ldr         r1, [sp, #0xAC]
  022d4	e59f0508	 ldr         r0, [pc, #0x508]
  022d8	eb000000	 bl          NKDbgPrintfW
  022dc	e3a03001	 mov         r3, #1
  022e0	e58d3054	 str         r3, [sp, #0x54]
  022e4	ea000001	 b           |$LN26@IOControl|
  022e8		 |$LN25@IOControl|
  022e8	e3a03000	 mov         r3, #0
  022ec	e58d3054	 str         r3, [sp, #0x54]
  022f0		 |$LN26@IOControl|

; 909  : 
; 910  :     switch (dwCode) {

  022f0	e59d30ac	 ldr         r3, [sp, #0xAC]
  022f4	e58d3058	 str         r3, [sp, #0x58]
  022f8	e59d2058	 ldr         r2, [sp, #0x58]
  022fc	e3a03832	 mov         r3, #0x32, 16
  02300	e3833a01	 orr         r3, r3, #1, 20
  02304	e0423003	 sub         r3, r2, r3
  02308	e58d3058	 str         r3, [sp, #0x58]
  0230c	e59d3058	 ldr         r3, [sp, #0x58]
  02310	e353000c	 cmp         r3, #0xC
  02314	8a000106	 bhi         |$LN1@IOControl|
  02318	e59d2058	 ldr         r2, [sp, #0x58]
  0231c	e1a03102	 mov         r3, r2, lsl #2
  02320	e083300f	 add         r3, r3, pc
  02324	e5933004	 ldr         r3, [r3, #4]
  02328	e08ff003	 add         pc, pc, r3
  0232c		 |$LN56@IOControl|
  0232c		 |$LN55@IOControl|
  0232c		 |$LN57@IOControl|
  0232c	00000030	 DCD         0x30
  02330		 |$LN58@IOControl|
  02330	00000404	 DCD         0x404
  02334		 |$LN59@IOControl|
  02334	00000404	 DCD         0x404
  02338		 |$LN60@IOControl|
  02338	00000404	 DCD         0x404
  0233c		 |$LN61@IOControl|
  0233c	0000030c	 DCD         0x30c
  02340		 |$LN62@IOControl|
  02340	00000404	 DCD         0x404
  02344		 |$LN63@IOControl|
  02344	00000404	 DCD         0x404
  02348		 |$LN64@IOControl|
  02348	00000404	 DCD         0x404
  0234c		 |$LN65@IOControl|
  0234c	00000170	 DCD         0x170
  02350		 |$LN66@IOControl|
  02350	00000404	 DCD         0x404
  02354		 |$LN67@IOControl|
  02354	00000404	 DCD         0x404
  02358		 |$LN68@IOControl|
  02358	00000404	 DCD         0x404
  0235c		 |$LN69@IOControl|
  0235c	00000138	 DCD         0x138
  02360		 |$LN20@IOControl|

; 911  :     // Power management functions.
; 912  :     // Return device specific power capabilities.
; 913  :     case IOCTL_POWER_CAPABILITIES:
; 914  :     {
; 915  :         POWER_CAPABILITIES pc;
; 916  : 
; 917  :         // Check arguments.
; 918  :         if ( pOutBuffer == NULL || outSize < sizeof(POWER_CAPABILITIES))

  02360	e59d30b8	 ldr         r3, [sp, #0xB8]
  02364	e3530000	 cmp         r3, #0
  02368	0a000002	 beq         |$LN18@IOControl|
  0236c	e59d30bc	 ldr         r3, [sp, #0xBC]
  02370	e3530030	 cmp         r3, #0x30
  02374	2a00000b	 bcs         |$LN19@IOControl|
  02378		 |$LN18@IOControl|

; 919  :         {
; 920  :             DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::IOControl: "
; 921  :                 L"IOCTL_POWER_CAPABILITIES Invalid parameter.\r\n"
; 922  :             ));

  02378	e59f3430	 ldr         r3, [pc, #0x430]
  0237c	e5933440	 ldr         r3, [r3, #0x440]
  02380	e3130902	 tst         r3, #2, 18
  02384	0a000004	 beq         |$LN27@IOControl|
  02388	e59f0450	 ldr         r0, [pc, #0x450]
  0238c	eb000000	 bl          NKDbgPrintfW
  02390	e3a03001	 mov         r3, #1
  02394	e58d305c	 str         r3, [sp, #0x5C]
  02398	ea000001	 b           |$LN28@IOControl|
  0239c		 |$LN27@IOControl|
  0239c	e3a03000	 mov         r3, #0
  023a0	e58d305c	 str         r3, [sp, #0x5C]
  023a4		 |$LN28@IOControl|

; 923  :             break;

  023a4	ea0000ee	 b           |$LN21@IOControl|
  023a8		 |$LN19@IOControl|

; 924  :         }
; 925  : 
; 926  :         // Clear capabilities structure.
; 927  :         memset(&pc, 0, sizeof(POWER_CAPABILITIES));

  023a8	e3a02030	 mov         r2, #0x30
  023ac	e3a01000	 mov         r1, #0
  023b0	e28d0010	 add         r0, sp, #0x10
  023b4	eb000000	 bl          memset

; 928  : 
; 929  :         // Set power capabilities. Supports D0 and D4.
; 930  :         pc.DeviceDx = DX_MASK(D0)|DX_MASK(D4);

  023b8	e3a03011	 mov         r3, #0x11
  023bc	e5cd3010	 strb        r3, [sp, #0x10]

; 931  : 
; 932  :         DEBUGMSG(SDCARD_ZONE_POWER, (L"CSDIOControllerBase::IOControl: "
; 933  :             L"IOCTL_POWER_CAPABILITIES = 0x%x\r\n", pc.DeviceDx
; 934  :         ));

  023c0	e59f33e8	 ldr         r3, [pc, #0x3E8]
  023c4	e5933440	 ldr         r3, [r3, #0x440]
  023c8	e3130001	 tst         r3, #1
  023cc	0a000006	 beq         |$LN29@IOControl|
  023d0	e5dd3010	 ldrb        r3, [sp, #0x10]
  023d4	e1a01003	 mov         r1, r3
  023d8	e59f03fc	 ldr         r0, [pc, #0x3FC]
  023dc	eb000000	 bl          NKDbgPrintfW
  023e0	e3a03001	 mov         r3, #1
  023e4	e58d3060	 str         r3, [sp, #0x60]
  023e8	ea000001	 b           |$LN30@IOControl|
  023ec		 |$LN29@IOControl|
  023ec	e3a03000	 mov         r3, #0
  023f0	e58d3060	 str         r3, [sp, #0x60]
  023f4		 |$LN30@IOControl|

; 935  : 
; 936  :         if (CeSafeCopyMemory(pOutBuffer, &pc, sizeof(pc)) == 0)

  023f4	e3a02030	 mov         r2, #0x30
  023f8	e28d1010	 add         r1, sp, #0x10
  023fc	e59d00b8	 ldr         r0, [sp, #0xB8]
  02400	eb000000	 bl          CeSafeCopyMemory
  02404	e58d0064	 str         r0, [sp, #0x64]
  02408	e59d3064	 ldr         r3, [sp, #0x64]
  0240c	e3530000	 cmp         r3, #0
  02410	1a00000b	 bne         |$LN17@IOControl|

; 937  :         {
; 938  :             DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::IOControl: "
; 939  :                 L"CeSafeCopyMemory Failed\r\n"
; 940  :             ));

  02414	e59f3394	 ldr         r3, [pc, #0x394]
  02418	e5933440	 ldr         r3, [r3, #0x440]
  0241c	e3130902	 tst         r3, #2, 18
  02420	0a000004	 beq         |$LN31@IOControl|
  02424	e59f0390	 ldr         r0, [pc, #0x390]
  02428	eb000000	 bl          NKDbgPrintfW
  0242c	e3a03001	 mov         r3, #1
  02430	e58d3068	 str         r3, [sp, #0x68]
  02434	ea000001	 b           |$LN32@IOControl|
  02438		 |$LN31@IOControl|
  02438	e3a03000	 mov         r3, #0
  0243c	e58d3068	 str         r3, [sp, #0x68]
  02440		 |$LN32@IOControl|

; 941  :             break;

  02440	ea0000c7	 b           |$LN21@IOControl|
  02444		 |$LN17@IOControl|

; 942  :         }
; 943  : 
; 944  :         // Update returned data size.
; 945  :         if (pOutSize)

  02444	e59d30c0	 ldr         r3, [sp, #0xC0]
  02448	e3530000	 cmp         r3, #0
  0244c	0a000002	 beq         |$LN16@IOControl|

; 946  :         {
; 947  :             *pOutSize = sizeof(pc);

  02450	e59d20c0	 ldr         r2, [sp, #0xC0]
  02454	e3a03030	 mov         r3, #0x30
  02458	e5823000	 str         r3, [r2]
  0245c		 |$LN16@IOControl|

; 948  :         }
; 949  :         bRetVal = TRUE;

  0245c	e3a03001	 mov         r3, #1
  02460	e58d300c	 str         r3, [sp, #0xC]

; 950  :         break;

  02464	ea0000be	 b           |$LN21@IOControl|
  02468		 |$LN15@IOControl|

; 951  :     }
; 952  : 
; 953  :     // Indicate if the device is ready to enter a new device power state.
; 954  :     case IOCTL_POWER_QUERY:
; 955  :     {
; 956  :         DEBUGMSG(SDCARD_ZONE_POWER, (L"CSDIOControllerBase::IOControl: "
; 957  :             L"IOCTL_POWER_QUERY Deprecated Function Called\r\n"
; 958  :         ));

  02468	e59f3340	 ldr         r3, [pc, #0x340]
  0246c	e5933440	 ldr         r3, [r3, #0x440]
  02470	e3130001	 tst         r3, #1
  02474	0a000004	 beq         |$LN33@IOControl|
  02478	e59f0358	 ldr         r0, [pc, #0x358]
  0247c	eb000000	 bl          NKDbgPrintfW
  02480	e3a03001	 mov         r3, #1
  02484	e58d306c	 str         r3, [sp, #0x6C]
  02488	ea000001	 b           |$LN34@IOControl|
  0248c		 |$LN33@IOControl|
  0248c	e3a03000	 mov         r3, #0
  02490	e58d306c	 str         r3, [sp, #0x6C]
  02494		 |$LN34@IOControl|

; 959  :         bRetVal = FALSE;

  02494	e3a03000	 mov         r3, #0
  02498	e58d300c	 str         r3, [sp, #0xC]

; 960  :         break;

  0249c	ea0000b0	 b           |$LN21@IOControl|
  024a0		 |$LN14@IOControl|

; 961  :     }
; 962  : 
; 963  :     // Request a change from one device power state to another
; 964  :     // This driver self-manages it's internal power state by controlling
; 965  :     // functional and interface clocks as needed in the Read and Write
; 966  :     // functions rather than waiting for PM to tell it to save power
; 967  :     // So the set calls below just update the power state variable
; 968  :     case IOCTL_POWER_SET:
; 969  :     {
; 970  :         CEDEVICE_POWER_STATE dxState;
; 971  : 
; 972  :         // Check arguments.
; 973  :         if (pOutBuffer == NULL || outSize < sizeof(CEDEVICE_POWER_STATE))

  024a0	e59d30b8	 ldr         r3, [sp, #0xB8]
  024a4	e3530000	 cmp         r3, #0
  024a8	0a000002	 beq         |$LN12@IOControl|
  024ac	e59d30bc	 ldr         r3, [sp, #0xBC]
  024b0	e3530004	 cmp         r3, #4
  024b4	2a00000b	 bcs         |$LN13@IOControl|
  024b8		 |$LN12@IOControl|

; 974  :         {
; 975  :             DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::IOControl: "
; 976  :                 L"IOCTL_POWER_SET Invalid parameter.\r\n"
; 977  :             ));

  024b8	e59f32f0	 ldr         r3, [pc, #0x2F0]
  024bc	e5933440	 ldr         r3, [r3, #0x440]
  024c0	e3130902	 tst         r3, #2, 18
  024c4	0a000004	 beq         |$LN35@IOControl|
  024c8	e59f0304	 ldr         r0, [pc, #0x304]
  024cc	eb000000	 bl          NKDbgPrintfW
  024d0	e3a03001	 mov         r3, #1
  024d4	e58d3070	 str         r3, [sp, #0x70]
  024d8	ea000001	 b           |$LN36@IOControl|
  024dc		 |$LN35@IOControl|
  024dc	e3a03000	 mov         r3, #0
  024e0	e58d3070	 str         r3, [sp, #0x70]
  024e4		 |$LN36@IOControl|

; 978  :             break;

  024e4	ea00009e	 b           |$LN21@IOControl|
  024e8		 |$LN13@IOControl|

; 979  :         }
; 980  : 
; 981  :         if (CeSafeCopyMemory(&dxState, pOutBuffer, sizeof(dxState)) == 0) break;

  024e8	e3a02004	 mov         r2, #4
  024ec	e59d10b8	 ldr         r1, [sp, #0xB8]
  024f0	e28d0040	 add         r0, sp, #0x40
  024f4	eb000000	 bl          CeSafeCopyMemory
  024f8	e58d0074	 str         r0, [sp, #0x74]
  024fc	e59d3074	 ldr         r3, [sp, #0x74]
  02500	e3530000	 cmp         r3, #0
  02504	1a000000	 bne         |$LN11@IOControl|
  02508	ea000095	 b           |$LN21@IOControl|
  0250c		 |$LN11@IOControl|

; 982  : 
; 983  :         DEBUGMSG(SDCARD_ZONE_POWER, (L"CSDIOControllerBase::IOControl: "
; 984  :             L"IOCTL_POWER_SET = %d.\r\n", dxState
; 985  :         ));

  0250c	e59f329c	 ldr         r3, [pc, #0x29C]
  02510	e5933440	 ldr         r3, [r3, #0x440]
  02514	e3130001	 tst         r3, #1
  02518	0a000005	 beq         |$LN37@IOControl|
  0251c	e59d1040	 ldr         r1, [sp, #0x40]
  02520	e59f02a8	 ldr         r0, [pc, #0x2A8]
  02524	eb000000	 bl          NKDbgPrintfW
  02528	e3a03001	 mov         r3, #1
  0252c	e58d3078	 str         r3, [sp, #0x78]
  02530	ea000001	 b           |$LN38@IOControl|
  02534		 |$LN37@IOControl|
  02534	e3a03000	 mov         r3, #0
  02538	e58d3078	 str         r3, [sp, #0x78]
  0253c		 |$LN38@IOControl|

; 986  : 
; 987  :         // Check for any valid power state.
; 988  :         if (VALID_DX(dxState))

  0253c	e59d3040	 ldr         r3, [sp, #0x40]
  02540	e3730001	 cmn         r3, #1
  02544	da000030	 ble         |$LN10@IOControl|
  02548	e59d3040	 ldr         r3, [sp, #0x40]
  0254c	e3530005	 cmp         r3, #5
  02550	aa00002d	 bge         |$LN10@IOControl|

; 989  :         {
; 990  :             // Power off
; 991  :             if ( dxState == D4 )

  02554	e59d3040	 ldr         r3, [sp, #0x40]
  02558	e3530004	 cmp         r3, #4
  0255c	1a000013	 bne         |$LN9@IOControl|

; 992  :             {
; 993  :                 DEBUGMSG(SDCARD_ZONE_POWER, (L"CSDIOControllerBase::IOControl: "
; 994  :                     L"IOCTL_POWER_set PowerDown\r\n"
; 995  :                 ));

  02560	e59f3248	 ldr         r3, [pc, #0x248]
  02564	e5933440	 ldr         r3, [r3, #0x440]
  02568	e3130001	 tst         r3, #1
  0256c	0a000004	 beq         |$LN39@IOControl|
  02570	e59f0254	 ldr         r0, [pc, #0x254]
  02574	eb000000	 bl          NKDbgPrintfW
  02578	e3a03001	 mov         r3, #1
  0257c	e58d307c	 str         r3, [sp, #0x7C]
  02580	ea000001	 b           |$LN40@IOControl|
  02584		 |$LN39@IOControl|
  02584	e3a03000	 mov         r3, #0
  02588	e58d307c	 str         r3, [sp, #0x7C]
  0258c		 |$LN40@IOControl|

; 996  :                 
; 997  :                 //SDHCDPowerUpDown(m_pHCContext, FALSE, FALSE, 0);
; 998  :                 this->m_PowerState = dxState;

  0258c	e59d30a8	 ldr         r3, [sp, #0xA8]
  02590	e2832010	 add         r2, r3, #0x10
  02594	e59d3040	 ldr         r3, [sp, #0x40]
  02598	e5823000	 str         r3, [r2]

; 999  :                 this->FreeHostContext(TRUE, TRUE);        

  0259c	e3a02001	 mov         r2, #1
  025a0	e3a01001	 mov         r1, #1
  025a4	e59d00a8	 ldr         r0, [sp, #0xA8]
  025a8	eb000000	 bl          |?FreeHostContext@CSDIOControllerBase@@QAAXHH@Z|

; 1000 :             }
; 1001 :             // Power on.
; 1002 :             else

  025ac	ea000013	 b           |$LN8@IOControl|
  025b0		 |$LN9@IOControl|

; 1003 :             {
; 1004 :                 DEBUGMSG(SDCARD_ZONE_POWER, (L"CSDIOControllerBase::IOControl: "
; 1005 :                     L"IOCTL_POWER_set PowerUp\r\n"
; 1006 :                 ));

  025b0	e59f31f8	 ldr         r3, [pc, #0x1F8]
  025b4	e5933440	 ldr         r3, [r3, #0x440]
  025b8	e3130001	 tst         r3, #1
  025bc	0a000004	 beq         |$LN41@IOControl|
  025c0	e59f0200	 ldr         r0, [pc, #0x200]
  025c4	eb000000	 bl          NKDbgPrintfW
  025c8	e3a03001	 mov         r3, #1
  025cc	e58d3080	 str         r3, [sp, #0x80]
  025d0	ea000001	 b           |$LN42@IOControl|
  025d4		 |$LN41@IOControl|
  025d4	e3a03000	 mov         r3, #0
  025d8	e58d3080	 str         r3, [sp, #0x80]
  025dc		 |$LN42@IOControl|

; 1007 :                 
; 1008 :                 this->m_PowerState = dxState;

  025dc	e59d30a8	 ldr         r3, [sp, #0xA8]
  025e0	e2832010	 add         r2, r3, #0x10
  025e4	e59d3040	 ldr         r3, [sp, #0x40]
  025e8	e5823000	 str         r3, [r2]

; 1009 :                 this->Init(m_pszActiveKey);

  025ec	e59d30a8	 ldr         r3, [sp, #0xA8]
  025f0	e283300c	 add         r3, r3, #0xC
  025f4	e5931000	 ldr         r1, [r3]
  025f8	e59d00a8	 ldr         r0, [sp, #0xA8]
  025fc	eb000000	 bl          |?Init@CSDIOControllerBase@@QAAHPBG@Z|
  02600		 |$LN8@IOControl|

; 1010 :                 
; 1011 :                 // Notify the SD Bus driver of the PowerUp event
; 1012 :                 //SDHCDPowerUpDown(m_pHCContext, TRUE, FALSE, 0);
; 1013 :             }
; 1014 :             bRetVal = TRUE;

  02600	e3a03001	 mov         r3, #1
  02604	e58d300c	 str         r3, [sp, #0xC]

; 1015 :         }
; 1016 :         else

  02608	ea00000a	 b           |$LN7@IOControl|
  0260c		 |$LN10@IOControl|

; 1017 :         {
; 1018 :             DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::IOControl: "
; 1019 :                 L"IOCTL_POWER_SET invalid power state.\r\n"
; 1020 :             ));

  0260c	e59f319c	 ldr         r3, [pc, #0x19C]
  02610	e5933440	 ldr         r3, [r3, #0x440]
  02614	e3130902	 tst         r3, #2, 18
  02618	0a000004	 beq         |$LN43@IOControl|
  0261c	e59f01a0	 ldr         r0, [pc, #0x1A0]
  02620	eb000000	 bl          NKDbgPrintfW
  02624	e3a03001	 mov         r3, #1
  02628	e58d3084	 str         r3, [sp, #0x84]
  0262c	ea000001	 b           |$LN44@IOControl|
  02630		 |$LN43@IOControl|
  02630	e3a03000	 mov         r3, #0
  02634	e58d3084	 str         r3, [sp, #0x84]
  02638		 |$LN44@IOControl|
  02638		 |$LN7@IOControl|

; 1021 :         }
; 1022 :         break;

  02638	ea000049	 b           |$LN21@IOControl|
  0263c		 |$LN6@IOControl|

; 1023 :     }
; 1024 : 
; 1025 :     // Return the current device power state.
; 1026 :     case IOCTL_POWER_GET:
; 1027 :     {
; 1028 :         // Check arguments.
; 1029 :         if (pOutBuffer == NULL || outSize < sizeof(CEDEVICE_POWER_STATE))

  0263c	e59d30b8	 ldr         r3, [sp, #0xB8]
  02640	e3530000	 cmp         r3, #0
  02644	0a000002	 beq         |$LN4@IOControl|
  02648	e59d30bc	 ldr         r3, [sp, #0xBC]
  0264c	e3530004	 cmp         r3, #4
  02650	2a00000b	 bcs         |$LN5@IOControl|
  02654		 |$LN4@IOControl|

; 1030 :         {
; 1031 :             DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::IOControl: "
; 1032 :                 L"IOCTL_POWER_GET Invalid parameter.\r\n"
; 1033 :             ));

  02654	e59f3154	 ldr         r3, [pc, #0x154]
  02658	e5933440	 ldr         r3, [r3, #0x440]
  0265c	e3130902	 tst         r3, #2, 18
  02660	0a000004	 beq         |$LN45@IOControl|
  02664	e59f0154	 ldr         r0, [pc, #0x154]
  02668	eb000000	 bl          NKDbgPrintfW
  0266c	e3a03001	 mov         r3, #1
  02670	e58d3088	 str         r3, [sp, #0x88]
  02674	ea000001	 b           |$LN46@IOControl|
  02678		 |$LN45@IOControl|
  02678	e3a03000	 mov         r3, #0
  0267c	e58d3088	 str         r3, [sp, #0x88]
  02680		 |$LN46@IOControl|

; 1034 :             break;

  02680	ea000037	 b           |$LN21@IOControl|
  02684		 |$LN5@IOControl|

; 1035 :         }
; 1036 : 
; 1037 :         //Copy current state
; 1038 :         if (CeSafeCopyMemory(pOutBuffer, &this->m_PowerState, sizeof(this->m_PowerState)) == 0)

  02684	e3a02004	 mov         r2, #4
  02688	e59d30a8	 ldr         r3, [sp, #0xA8]
  0268c	e2831010	 add         r1, r3, #0x10
  02690	e59d00b8	 ldr         r0, [sp, #0xB8]
  02694	eb000000	 bl          CeSafeCopyMemory
  02698	e58d008c	 str         r0, [sp, #0x8C]
  0269c	e59d308c	 ldr         r3, [sp, #0x8C]
  026a0	e3530000	 cmp         r3, #0
  026a4	1a00000b	 bne         |$LN3@IOControl|

; 1039 :         {
; 1040 :             DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::IOControl: "
; 1041 :                 L"CeSafeCopyMemory Failed\r\n"
; 1042 :             ));

  026a8	e59f3100	 ldr         r3, [pc, #0x100]
  026ac	e5933440	 ldr         r3, [r3, #0x440]
  026b0	e3130902	 tst         r3, #2, 18
  026b4	0a000004	 beq         |$LN47@IOControl|
  026b8	e59f00fc	 ldr         r0, [pc, #0xFC]
  026bc	eb000000	 bl          NKDbgPrintfW
  026c0	e3a03001	 mov         r3, #1
  026c4	e58d3090	 str         r3, [sp, #0x90]
  026c8	ea000001	 b           |$LN48@IOControl|
  026cc		 |$LN47@IOControl|
  026cc	e3a03000	 mov         r3, #0
  026d0	e58d3090	 str         r3, [sp, #0x90]
  026d4		 |$LN48@IOControl|

; 1043 :             break;

  026d4	ea000022	 b           |$LN21@IOControl|
  026d8		 |$LN3@IOControl|

; 1044 :         }
; 1045 : 
; 1046 :         // Update returned data size.
; 1047 :         if (pOutSize)

  026d8	e59d30c0	 ldr         r3, [sp, #0xC0]
  026dc	e3530000	 cmp         r3, #0
  026e0	0a000002	 beq         |$LN2@IOControl|

; 1048 :         {
; 1049 :             *pOutSize = sizeof(this->m_PowerState);

  026e4	e59d20c0	 ldr         r2, [sp, #0xC0]
  026e8	e3a03004	 mov         r3, #4
  026ec	e5823000	 str         r3, [r2]
  026f0		 |$LN2@IOControl|

; 1050 :         }
; 1051 : 
; 1052 :         DEBUGMSG(SDCARD_ZONE_POWER, (L"CSDIOControllerBase::IOControl: "
; 1053 :             L"IOCTL_POWER_GET: %d\r\n", this->m_PowerState
; 1054 :         ));

  026f0	e59f30b8	 ldr         r3, [pc, #0xB8]
  026f4	e5933440	 ldr         r3, [r3, #0x440]
  026f8	e3130001	 tst         r3, #1
  026fc	0a000007	 beq         |$LN49@IOControl|
  02700	e59d30a8	 ldr         r3, [sp, #0xA8]
  02704	e2833010	 add         r3, r3, #0x10
  02708	e5931000	 ldr         r1, [r3]
  0270c	e59f00a4	 ldr         r0, [pc, #0xA4]
  02710	eb000000	 bl          NKDbgPrintfW
  02714	e3a03001	 mov         r3, #1
  02718	e58d3094	 str         r3, [sp, #0x94]
  0271c	ea000001	 b           |$LN50@IOControl|
  02720		 |$LN49@IOControl|
  02720	e3a03000	 mov         r3, #0
  02724	e58d3094	 str         r3, [sp, #0x94]
  02728		 |$LN50@IOControl|

; 1055 :         bRetVal = TRUE;

  02728	e3a03001	 mov         r3, #1
  0272c	e58d300c	 str         r3, [sp, #0xC]

; 1056 :         break;

  02730	ea00000b	 b           |$LN21@IOControl|
  02734		 |$LN1@IOControl|

; 1057 :     }
; 1058 : 
; 1059 :     default:
; 1060 :         DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::IOControl: "
; 1061 :             L"Unknown IOCTL_xxx(0x%0.8X)\r\n", dwCode
; 1062 :         ));

  02734	e59f3074	 ldr         r3, [pc, #0x74]
  02738	e5933440	 ldr         r3, [r3, #0x440]
  0273c	e3130902	 tst         r3, #2, 18
  02740	0a000005	 beq         |$LN51@IOControl|
  02744	e59d10ac	 ldr         r1, [sp, #0xAC]
  02748	e59f0064	 ldr         r0, [pc, #0x64]
  0274c	eb000000	 bl          NKDbgPrintfW
  02750	e3a03001	 mov         r3, #1
  02754	e58d3098	 str         r3, [sp, #0x98]
  02758	ea000001	 b           |$LN52@IOControl|
  0275c		 |$LN51@IOControl|
  0275c	e3a03000	 mov         r3, #0
  02760	e58d3098	 str         r3, [sp, #0x98]
  02764		 |$LN52@IOControl|
  02764		 |$LN21@IOControl|

; 1063 :         break;
; 1064 : 
; 1065 :     }
; 1066 : 
; 1067 :     DEBUGMSG(SDCARD_ZONE_FUNC, (L"-CSDIOControllerBase::IOControl(rc = %d)\r\n", bRetVal));

  02764	e59f3044	 ldr         r3, [pc, #0x44]
  02768	e5933440	 ldr         r3, [r3, #0x440]
  0276c	e3130b02	 tst         r3, #2, 22
  02770	0a000005	 beq         |$LN53@IOControl|
  02774	e59d100c	 ldr         r1, [sp, #0xC]
  02778	e59f002c	 ldr         r0, [pc, #0x2C]
  0277c	eb000000	 bl          NKDbgPrintfW
  02780	e3a03001	 mov         r3, #1
  02784	e58d309c	 str         r3, [sp, #0x9C]
  02788	ea000001	 b           |$LN54@IOControl|
  0278c		 |$LN53@IOControl|
  0278c	e3a03000	 mov         r3, #0
  02790	e58d309c	 str         r3, [sp, #0x9C]
  02794		 |$LN54@IOControl|

; 1068 :     return bRetVal;    

  02794	e59d300c	 ldr         r3, [sp, #0xC]
  02798	e58d3050	 str         r3, [sp, #0x50]

; 1069 : }

  0279c	e59d0050	 ldr         r0, [sp, #0x50]
  027a0	e28dd0a0	 add         sp, sp, #0xA0
  027a4	e89d6000	 ldmia       sp, {sp, lr}
  027a8	e12fff1e	 bx          lr
  027ac		 |$LN73@IOControl|
  027ac		 |$LN74@IOControl|
  027ac	00000000	 DCD         |??_C@_1FG@MGNLGEBC@?$AA?9?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI@|
  027b0		 |$LN75@IOControl|
  027b0	00000000	 DCD         |dpCurSettings|
  027b4		 |$LN76@IOControl|
  027b4	00000000	 DCD         |??_C@_1HK@BIJALHOA@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@|
  027b8		 |$LN77@IOControl|
  027b8	00000000	 DCD         |??_C@_1GM@CAOEMLBJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@|
  027bc		 |$LN78@IOControl|
  027bc	00000000	 DCD         |??_C@_1HE@LPLFKHEP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@|
  027c0		 |$LN79@IOControl|
  027c0	00000000	 DCD         |??_C@_1IK@KFNGHPKO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@|
  027c4		 |$LN80@IOControl|
  027c4	00000000	 DCD         |??_C@_1IO@KIJDLAKP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@|
  027c8		 |$LN81@IOControl|
  027c8	00000000	 DCD         |??_C@_1HE@JAIDNHGH@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@|
  027cc		 |$LN82@IOControl|
  027cc	00000000	 DCD         |??_C@_1HI@CNEOFDPO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@|
  027d0		 |$LN83@IOControl|
  027d0	00000000	 DCD         |??_C@_1HA@NIDJFGPI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@|
  027d4		 |$LN84@IOControl|
  027d4	00000000	 DCD         |??_C@_1IK@PGKNKAPE@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@|
  027d8		 |$LN85@IOControl|
  027d8	00000000	 DCD         |??_C@_1JO@CJAFIAOL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@|
  027dc		 |$LN86@IOControl|
  027dc	00000000	 DCD         |??_C@_1IE@IBJFBKPJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@|
  027e0		 |$LN87@IOControl|
  027e0	00000000	 DCD         |??_C@_1JM@CBEMKEPO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5@|
  027e4		 |$LN88@IOControl|
  027e4	00000000	 DCD         |??_C@_1JE@HKICDGN@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI@|
  027e8		 |$M42743|

			 ENDP  ; |?IOControl@CSDIOControllerBase@@QAAHKPAEK0KPAK@Z|, CSDIOControllerBase::IOControl

	EXPORT	|??_C@_1BM@NNIPIGOJ@?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@LMBBBPNF@?$AAR?$AAe?$AAa?$AAd?$AAW?$AAr?$AAi?$AAt?$AAe?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@OOJEOPHC@?$AAB?$AAa?$AAs?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk?$AAF?$AAr?$AAe?$AAq?$AAu?$AAe?$AAn?$AAc?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@NAMMPMDB@?$AAC?$AAD?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?ValueDW@CReg@@QAAKPBGK@Z|		; CReg::ValueDW
	EXPORT	|??_C@_1BK@KBGNDCFC@?$AAS?$AAD?$AAI?$AAO?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| [ DATA ] ; `string'

  00090			 AREA	 |.pdata|, PDATA
|$T42771| DCD	|$LN11@GetRegistr|
	DCD	0x40007504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@NNIPIGOJ@?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAs?$AA?$AA@| DCB "W"
	DCB	0x0, "a", 0x0, "k", 0x0, "e", 0x0, "u", 0x0, "p", 0x0, "S"
	DCB	0x0, "o", 0x0, "u", 0x0, "r", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@LMBBBPNF@?$AAR?$AAe?$AAa?$AAd?$AAW?$AAr?$AAi?$AAt?$AAe?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, "W", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "e", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@OOJEOPHC@?$AAB?$AAa?$AAs?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk?$AAF?$AAr?$AAe?$AAq?$AAu?$AAe?$AAn?$AAc?$AAy?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "s", 0x0, "e", 0x0, "C", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "k", 0x0, "F", 0x0, "r", 0x0, "e", 0x0, "q"
	DCB	0x0, "u", 0x0, "e", 0x0, "n", 0x0, "c", 0x0, "y", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@NAMMPMDB@?$AAC?$AAD?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| DCB "C"
	DCB	0x0, "D", 0x0, "P", 0x0, "r", 0x0, "i", 0x0, "o", 0x0, "r"
	DCB	0x0, "i", 0x0, "t", 0x0, "y", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@KBGNDCFC@?$AAS?$AAD?$AAI?$AAO?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| DCB "S"
	DCB	0x0, "D", 0x0, "I", 0x0, "O", 0x0, "P", 0x0, "r", 0x0, "i"
	DCB	0x0, "o", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "y", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  027e8			 AREA	 |.text|, CODE, ARM

  027e8		 |?GetRegistrySettings@CSDIOControllerBase@@UAAHPAVCReg@@@Z| PROC ; CSDIOControllerBase::GetRegistrySettings

; 1073 : {

  027e8		 |$LN11@GetRegistr|
  027e8	e1a0c00d	 mov         r12, sp
  027ec	e92d0003	 stmdb       sp!, {r0, r1}
  027f0	e92d5000	 stmdb       sp!, {r12, lr}
  027f4	e24dd024	 sub         sp, sp, #0x24
  027f8		 |$M42768|

; 1074 :     BOOL fRet = TRUE;

  027f8	e3a03001	 mov         r3, #1
  027fc	e58d3000	 str         r3, [sp]

; 1075 : 
; 1076 :     DEBUGCHK(pReg);

  02800	e59d3030	 ldr         r3, [sp, #0x30]
  02804	e3530000	 cmp         r3, #0
  02808	0a000002	 beq         |$LN5@GetRegistr|
  0280c	e3a03001	 mov         r3, #1
  02810	e58d3008	 str         r3, [sp, #8]
  02814	ea000008	 b           |$LN6@GetRegistr|
  02818		 |$LN5@GetRegistr|
  02818	e3a03b01	 mov         r3, #1, 22
  0281c	e3833034	 orr         r3, r3, #0x34
  02820	e59f2190	 ldr         r2, [pc, #0x190]
  02824	e59f1188	 ldr         r1, [pc, #0x188]
  02828	e59f0180	 ldr         r0, [pc, #0x180]
  0282c	eb000000	 bl          NKDbgPrintfW
  02830	e6000010	 __debugbreak_ce
  02834	e3a03000	 mov         r3, #0
  02838	e58d3008	 str         r3, [sp, #8]
  0283c		 |$LN6@GetRegistr|

; 1077 : 
; 1078 :     // get the controller IST thread priority
; 1079 :     m_dwSDIOPriority = pReg->ValueDW(SHC_SDIO_PRIORITY_KEY, SHC_CARD_CONTROLLER_PRIORITY);

  0283c	e3a02097	 mov         r2, #0x97
  02840	e59f1164	 ldr         r1, [pc, #0x164]
  02844	e59d0030	 ldr         r0, [sp, #0x30]
  02848	eb000000	 bl          |?ValueDW@CReg@@QAAKPBGK@Z|
  0284c	e58d000c	 str         r0, [sp, #0xC]
  02850	e59d302c	 ldr         r3, [sp, #0x2C]
  02854	e2832058	 add         r2, r3, #0x58
  02858	e59d300c	 ldr         r3, [sp, #0xC]
  0285c	e5823000	 str         r3, [r2]

; 1080 : 
; 1081 :     // get the card detect IST thread priority
; 1082 :     m_dwCDPriority = pReg->ValueDW(SHC_CD_PRIORITY_KEY, SHC_CARD_DETECT_PRIORITY);

  02860	e3a02098	 mov         r2, #0x98
  02864	e59f113c	 ldr         r1, [pc, #0x13C]
  02868	e59d0030	 ldr         r0, [sp, #0x30]
  0286c	eb000000	 bl          |?ValueDW@CReg@@QAAKPBGK@Z|
  02870	e58d0010	 str         r0, [sp, #0x10]
  02874	e59d302c	 ldr         r3, [sp, #0x2C]
  02878	e283205c	 add         r2, r3, #0x5C
  0287c	e59d3010	 ldr         r3, [sp, #0x10]
  02880	e5823000	 str         r3, [r2]

; 1083 : 
; 1084 :     // get the max clock frequency from the registry (we allow the registry to override)
; 1085 :     m_dwMaxClockRate = pReg->ValueDW(SHC_FREQUENCY_KEY);

  02884	e3a02000	 mov         r2, #0
  02888	e59f1114	 ldr         r1, [pc, #0x114]
  0288c	e59d0030	 ldr         r0, [sp, #0x30]
  02890	eb000000	 bl          |?ValueDW@CReg@@QAAKPBGK@Z|
  02894	e58d0014	 str         r0, [sp, #0x14]
  02898	e59d302c	 ldr         r3, [sp, #0x2C]
  0289c	e2832074	 add         r2, r3, #0x74
  028a0	e59d3014	 ldr         r3, [sp, #0x14]
  028a4	e5823000	 str         r3, [r2]

; 1086 :     if (m_dwMaxClockRate == 0) 

  028a8	e59d302c	 ldr         r3, [sp, #0x2C]
  028ac	e2833074	 add         r3, r3, #0x74
  028b0	e5933000	 ldr         r3, [r3]
  028b4	e3530000	 cmp         r3, #0
  028b8	1a000004	 bne         |$LN2@GetRegistr|

; 1087 :     {
; 1088 :         // No clock frequency specified. Use the highest possible that
; 1089 :         // could have been specified so that a working clock divisor 
; 1090 :         // will be chosen.
; 1091 :         m_dwMaxClockRate = STD_HC_MAX_CLOCK_FREQUENCY;

  028bc	e59d302c	 ldr         r3, [sp, #0x2C]
  028c0	e2832074	 add         r2, r3, #0x74
  028c4	e59f30d4	 ldr         r3, [pc, #0xD4]
  028c8	e5823000	 str         r3, [r2]

; 1092 :     }
; 1093 :     else 

  028cc	ea000010	 b           |$LN1@GetRegistr|
  028d0		 |$LN2@GetRegistr|

; 1094 :     {
; 1095 :         m_dwMaxClockRate = min(m_dwMaxClockRate, 
; 1096 :             STD_HC_MAX_CLOCK_FREQUENCY);

  028d0	e59d302c	 ldr         r3, [sp, #0x2C]
  028d4	e2833074	 add         r3, r3, #0x74
  028d8	e5932000	 ldr         r2, [r3]
  028dc	e59f30bc	 ldr         r3, [pc, #0xBC]
  028e0	e1520003	 cmp         r2, r3
  028e4	2a000004	 bcs         |$LN7@GetRegistr|
  028e8	e59d302c	 ldr         r3, [sp, #0x2C]
  028ec	e2833074	 add         r3, r3, #0x74
  028f0	e5933000	 ldr         r3, [r3]
  028f4	e58d3018	 str         r3, [sp, #0x18]
  028f8	ea000001	 b           |$LN8@GetRegistr|
  028fc		 |$LN7@GetRegistr|
  028fc	e59f309c	 ldr         r3, [pc, #0x9C]
  02900	e58d3018	 str         r3, [sp, #0x18]
  02904		 |$LN8@GetRegistr|
  02904	e59d302c	 ldr         r3, [sp, #0x2C]
  02908	e2832074	 add         r2, r3, #0x74
  0290c	e59d3018	 ldr         r3, [sp, #0x18]
  02910	e5823000	 str         r3, [r2]
  02914		 |$LN1@GetRegistr|

; 1097 :     }
; 1098 : 
; 1099 :     // get the read/write timeout value
; 1100 :     m_dwMaxTimeout = pReg->ValueDW(SHC_RW_TIMEOUT_KEY, DEFAULT_TIMEOUT_VALUE);

  02914	e3a02cea	 mov         r2, #0xEA, 24
  02918	e3822060	 orr         r2, r2, #0x60
  0291c	e59f1078	 ldr         r1, [pc, #0x78]
  02920	e59d0030	 ldr         r0, [sp, #0x30]
  02924	eb000000	 bl          |?ValueDW@CReg@@QAAKPBGK@Z|
  02928	e58d001c	 str         r0, [sp, #0x1C]
  0292c	e59d302c	 ldr         r3, [sp, #0x2C]
  02930	e283207c	 add         r2, r3, #0x7C
  02934	e59d301c	 ldr         r3, [sp, #0x1C]
  02938	e5823000	 str         r3, [r2]

; 1101 : 
; 1102 :     // get the wakeup sources
; 1103 :     m_dwWakeupSources = pReg->ValueDW(SHC_WAKEUP_SOURCES_KEY, 0);

  0293c	e3a02000	 mov         r2, #0
  02940	e59f1050	 ldr         r1, [pc, #0x50]
  02944	e59d0030	 ldr         r0, [sp, #0x30]
  02948	eb000000	 bl          |?ValueDW@CReg@@QAAKPBGK@Z|
  0294c	e58d0020	 str         r0, [sp, #0x20]
  02950	e59d302c	 ldr         r3, [sp, #0x2C]
  02954	e2832030	 add         r2, r3, #0x30
  02958	e59d3020	 ldr         r3, [sp, #0x20]
  0295c	e5823000	 str         r3, [r2]

; 1104 :     m_dwCurrentWakeupSources = m_dwWakeupSources & (~WAKEUP_SDIO);

  02960	e59d302c	 ldr         r3, [sp, #0x2C]
  02964	e2833030	 add         r3, r3, #0x30
  02968	e5932000	 ldr         r2, [r3]
  0296c	e3e03001	 mvn         r3, #1
  02970	e0022003	 and         r2, r2, r3
  02974	e59d302c	 ldr         r3, [sp, #0x2C]
  02978	e2833034	 add         r3, r3, #0x34
  0297c	e5832000	 str         r2, [r3]

; 1105 : 
; 1106 :     return fRet;

  02980	e59d3000	 ldr         r3, [sp]
  02984	e58d3004	 str         r3, [sp, #4]

; 1107 : }

  02988	e59d0004	 ldr         r0, [sp, #4]
  0298c	e28dd024	 add         sp, sp, #0x24
  02990	e89d6000	 ldmia       sp, {sp, lr}
  02994	e12fff1e	 bx          lr
  02998		 |$LN12@GetRegistr|
  02998		 |$LN13@GetRegistr|
  02998	00000000	 DCD         |??_C@_1BM@NNIPIGOJ@?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAs?$AA?$AA@|
  0299c		 |$LN14@GetRegistr|
  0299c	00000000	 DCD         |??_C@_1CC@LMBBBPNF@?$AAR?$AAe?$AAa?$AAd?$AAW?$AAr?$AAi?$AAt?$AAe?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  029a0		 |$LN15@GetRegistr|
  029a0	016e3600	 DCD         0x16e3600
  029a4		 |$LN16@GetRegistr|
  029a4	00000000	 DCD         |??_C@_1CG@OOJEOPHC@?$AAB?$AAa?$AAs?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk?$AAF?$AAr?$AAe?$AAq?$AAu?$AAe?$AAn?$AAc?$AAy?$AA?$AA@|
  029a8		 |$LN17@GetRegistr|
  029a8	00000000	 DCD         |??_C@_1BG@NAMMPMDB@?$AAC?$AAD?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@|
  029ac		 |$LN18@GetRegistr|
  029ac	00000000	 DCD         |??_C@_1BK@KBGNDCFC@?$AAS?$AAD?$AAI?$AAO?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@|
  029b0		 |$LN19@GetRegistr|
  029b0	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  029b4		 |$LN20@GetRegistr|
  029b4	00000000	 DCD         |dpCurSettings|
  029b8		 |$LN21@GetRegistr|
  029b8	00000000	 DCD         |??_C@_1JA@LIPKICML@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  029bc		 |$M42769|

			 ENDP  ; |?GetRegistrySettings@CSDIOControllerBase@@UAAHPAVCReg@@@Z|, CSDIOControllerBase::GetRegistrySettings

	IMPORT	|RegQueryValueExW|
; File c:\wince600\public\common\sdk\inc\creg.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T42789| DCD	|$LN6@ValueDW|
	DCD	0x40001c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ValueDW@CReg@@QAAKPBGK@Z| PROC	; CReg::ValueDW

; 197  : 	DWORD ValueDW(LPCTSTR szName, DWORD dwDefault=0) {

  00000		 |$LN6@ValueDW|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd01c	 sub         sp, sp, #0x1C
  00010		 |$M42786|

; 198  : 		DWORD dwValue = dwDefault;

  00010	e59d302c	 ldr         r3, [sp, #0x2C]
  00014	e58d3008	 str         r3, [sp, #8]

; 199  : 		if(m_hKey) 

  00018	e59d3024	 ldr         r3, [sp, #0x24]
  0001c	e5933000	 ldr         r3, [r3]
  00020	e3530000	 cmp         r3, #0
  00024	0a00000b	 beq         |$LN1@ValueDW|

; 200  : 		{
; 201  : 			DWORD dwLen = sizeof(DWORD);

  00028	e3a03004	 mov         r3, #4
  0002c	e58d300c	 str         r3, [sp, #0xC]

; 202  : 			RegQueryValueEx(m_hKey, szName, NULL, NULL, (LPBYTE)&dwValue, &dwLen);

  00030	e28d300c	 add         r3, sp, #0xC
  00034	e58d3004	 str         r3, [sp, #4]
  00038	e28d3008	 add         r3, sp, #8
  0003c	e58d3000	 str         r3, [sp]
  00040	e3a03000	 mov         r3, #0
  00044	e3a02000	 mov         r2, #0
  00048	e59d1028	 ldr         r1, [sp, #0x28]
  0004c	e59d0024	 ldr         r0, [sp, #0x24]
  00050	e5900000	 ldr         r0, [r0]
  00054	eb000000	 bl          RegQueryValueExW
  00058		 |$LN1@ValueDW|

; 203  : 		}
; 204  : 		return dwValue;

  00058	e59d3008	 ldr         r3, [sp, #8]
  0005c	e58d3018	 str         r3, [sp, #0x18]

; 205  : 	}

  00060	e59d0018	 ldr         r0, [sp, #0x18]
  00064	e28dd01c	 add         sp, sp, #0x1C
  00068	e89d6000	 ldmia       sp, {sp, lr}
  0006c	e12fff1e	 bx          lr
  00070		 |$M42787|

			 ENDP  ; |?ValueDW@CReg@@QAAKPBGK@Z|, CReg::ValueDW

	EXPORT	|?SDHCSlotOptionHandler@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@KW4_SD_SLOT_OPTION_CODE@@PAXK@Z| ; CSDIOControllerBase::SDHCSlotOptionHandler
	EXPORT	|?SDHCCancelIoHandler@CSDIOControllerBase@@SAEPAU_SDCARD_HC_CONTEXT@@KPAU_SD_BUS_REQUEST@@@Z| ; CSDIOControllerBase::SDHCCancelIoHandler
	EXPORT	|?SDHCBusRequestHandler@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@KPAU_SD_BUS_REQUEST@@@Z| ; CSDIOControllerBase::SDHCBusRequestHandler
	EXPORT	|?SDHCDeinitialize@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@@Z| ; CSDIOControllerBase::SDHCDeinitialize
	EXPORT	|?SDHCInitialize@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@@Z| ; CSDIOControllerBase::SDHCInitialize
	EXPORT	|??_C@_19IJCLBJAH@?$AAS?$AAD?$AAH?$AAC?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|wcsncpy|

  00098			 AREA	 |.pdata|, PDATA
|$T42797| DCD	|$LN5@InterpretC|
	DCD	0x40003b04
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\sdhc\base\sdhc.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_19IJCLBJAH@?$AAS?$AAD?$AAH?$AAC?$AA?$AA@| DCB "S", 0x0, "D", 0x0, "H"
	DCB	0x0, "C", 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  029bc			 AREA	 |.text|, CODE, ARM

  029bc		 |?InterpretCapabilities@CSDIOControllerBase@@UAAHXZ| PROC ; CSDIOControllerBase::InterpretCapabilities

; 1111 : {

  029bc		 |$LN5@InterpretC|
  029bc	e1a0c00d	 mov         r12, sp
  029c0	e92d0001	 stmdb       sp!, {r0}
  029c4	e92d5000	 stmdb       sp!, {r12, lr}
  029c8	e24dd008	 sub         sp, sp, #8
  029cc		 |$M42794|

; 1112 :     BOOL fRet = TRUE;

  029cc	e3a03001	 mov         r3, #1
  029d0	e58d3000	 str         r3, [sp]

; 1113 : 
; 1114 :     // set the host controller name
; 1115 :     SDHCDSetHCName(m_pHCContext, L"SDHC");

  029d4	e3a0200f	 mov         r2, #0xF
  029d8	e59f10c4	 ldr         r1, [pc, #0xC4]
  029dc	e59d3010	 ldr         r3, [sp, #0x10]
  029e0	e2833004	 add         r3, r3, #4
  029e4	e5933000	 ldr         r3, [r3]
  029e8	e2830004	 add         r0, r3, #4
  029ec	eb000000	 bl          wcsncpy

; 1116 : 
; 1117 :     // set init handler
; 1118 :     SDHCDSetControllerInitHandler(m_pHCContext, CSDIOControllerBase::SDHCInitialize);

  029f0	e59d3010	 ldr         r3, [sp, #0x10]
  029f4	e2833004	 add         r3, r3, #4
  029f8	e5933000	 ldr         r3, [r3]
  029fc	e2832044	 add         r2, r3, #0x44
  02a00	e59f3098	 ldr         r3, [pc, #0x98]
  02a04	e5823000	 str         r3, [r2]

; 1119 : 
; 1120 :     // set deinit handler    
; 1121 :     SDHCDSetControllerDeinitHandler(m_pHCContext, CSDIOControllerBase::SDHCDeinitialize);

  02a08	e59d3010	 ldr         r3, [sp, #0x10]
  02a0c	e2833004	 add         r3, r3, #4
  02a10	e5933000	 ldr         r3, [r3]
  02a14	e2832048	 add         r2, r3, #0x48
  02a18	e59f307c	 ldr         r3, [pc, #0x7C]
  02a1c	e5823000	 str         r3, [r2]

; 1122 : 
; 1123 :     // set the Send packet handler
; 1124 :     SDHCDSetBusRequestHandler(m_pHCContext, CSDIOControllerBase::SDHCBusRequestHandler);

  02a20	e59d3010	 ldr         r3, [sp, #0x10]
  02a24	e2833004	 add         r3, r3, #4
  02a28	e5933000	 ldr         r3, [r3]
  02a2c	e2832038	 add         r2, r3, #0x38
  02a30	e59f3060	 ldr         r3, [pc, #0x60]
  02a34	e5823000	 str         r3, [r2]

; 1125 : 
; 1126 :     // set the cancel I/O handler
; 1127 :     SDHCDSetCancelIOHandler(m_pHCContext, CSDIOControllerBase::SDHCCancelIoHandler);

  02a38	e59d3010	 ldr         r3, [sp, #0x10]
  02a3c	e2833004	 add         r3, r3, #4
  02a40	e5933000	 ldr         r3, [r3]
  02a44	e2832040	 add         r2, r3, #0x40
  02a48	e59f3044	 ldr         r3, [pc, #0x44]
  02a4c	e5823000	 str         r3, [r2]

; 1128 : 
; 1129 :     // set the slot option handler
; 1130 :     SDHCDSetSlotOptionHandler(m_pHCContext, CSDIOControllerBase::SDHCSlotOptionHandler);

  02a50	e59d3010	 ldr         r3, [sp, #0x10]
  02a54	e2833004	 add         r3, r3, #4
  02a58	e5933000	 ldr         r3, [r3]
  02a5c	e283203c	 add         r2, r3, #0x3C
  02a60	e59f3028	 ldr         r3, [pc, #0x28]
  02a64	e5823000	 str         r3, [r2]

; 1131 : 
; 1132 :     // set maximum block length
; 1133 :     m_usMaxBlockLen = STD_HC_MAX_BLOCK_LENGTH;

  02a68	e59d3010	 ldr         r3, [sp, #0x10]
  02a6c	e2832078	 add         r2, r3, #0x78
  02a70	e3a03b02	 mov         r3, #2, 22
  02a74	e1c230b0	 strh        r3, [r2]

; 1134 : 
; 1135 :     return fRet;

  02a78	e59d3000	 ldr         r3, [sp]
  02a7c	e58d3004	 str         r3, [sp, #4]

; 1136 : }

  02a80	e59d0004	 ldr         r0, [sp, #4]
  02a84	e28dd008	 add         sp, sp, #8
  02a88	e89d6000	 ldmia       sp, {sp, lr}
  02a8c	e12fff1e	 bx          lr
  02a90		 |$LN6@InterpretC|
  02a90		 |$LN7@InterpretC|
  02a90	00000000	 DCD         |?SDHCSlotOptionHandler@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@KW4_SD_SLOT_OPTION_CODE@@PAXK@Z|
  02a94		 |$LN8@InterpretC|
  02a94	00000000	 DCD         |?SDHCCancelIoHandler@CSDIOControllerBase@@SAEPAU_SDCARD_HC_CONTEXT@@KPAU_SD_BUS_REQUEST@@@Z|
  02a98		 |$LN9@InterpretC|
  02a98	00000000	 DCD         |?SDHCBusRequestHandler@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@KPAU_SD_BUS_REQUEST@@@Z|
  02a9c		 |$LN10@InterpretC|
  02a9c	00000000	 DCD         |?SDHCDeinitialize@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@@Z|
  02aa0		 |$LN11@InterpretC|
  02aa0	00000000	 DCD         |?SDHCInitialize@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@@Z|
  02aa4		 |$LN12@InterpretC|
  02aa4	00000000	 DCD         |??_C@_19IJCLBJAH@?$AAS?$AAD?$AAH?$AAC?$AA?$AA@|
  02aa8		 |$M42795|

			 ENDP  ; |?InterpretCapabilities@CSDIOControllerBase@@UAAHXZ|, CSDIOControllerBase::InterpretCapabilities

	EXPORT	|?SDHCControllerIstThreadImpl@CSDIOControllerBase@@QAAKXZ| ; CSDIOControllerBase::SDHCControllerIstThreadImpl
	EXPORT	|?SDHCControllerIstThread@CSDIOControllerBase@@SAKPAX@Z| ; CSDIOControllerBase::SDHCControllerIstThread

  000a0			 AREA	 |.pdata|, PDATA
|$T42810| DCD	|$LN5@SDHCContro|
	DCD	0x40000f04
; Function compile flags: /Odtp

  02aa8			 AREA	 |.text|, CODE, ARM

  02aa8		 |?SDHCControllerIstThread@CSDIOControllerBase@@SAKPAX@Z| PROC ; CSDIOControllerBase::SDHCControllerIstThread

; 1146 : {

  02aa8		 |$LN5@SDHCContro|
  02aa8	e1a0c00d	 mov         r12, sp
  02aac	e92d0001	 stmdb       sp!, {r0}
  02ab0	e92d5000	 stmdb       sp!, {r12, lr}
  02ab4	e24dd00c	 sub         sp, sp, #0xC
  02ab8		 |$M42807|

; 1147 :     CSDIOControllerBase *pController = (CSDIOControllerBase*)lpParameter;

  02ab8	e59d3014	 ldr         r3, [sp, #0x14]
  02abc	e58d3000	 str         r3, [sp]

; 1148 :     return pController->SDHCControllerIstThreadImpl();

  02ac0	e59d0000	 ldr         r0, [sp]
  02ac4	eb000000	 bl          |?SDHCControllerIstThreadImpl@CSDIOControllerBase@@QAAKXZ|
  02ac8	e58d0008	 str         r0, [sp, #8]
  02acc	e59d3008	 ldr         r3, [sp, #8]
  02ad0	e58d3004	 str         r3, [sp, #4]

; 1149 : }

  02ad4	e59d0004	 ldr         r0, [sp, #4]
  02ad8	e28dd00c	 add         sp, sp, #0xC
  02adc	e89d6000	 ldmia       sp, {sp, lr}
  02ae0	e12fff1e	 bx          lr
  02ae4		 |$M42808|

			 ENDP  ; |?SDHCControllerIstThread@CSDIOControllerBase@@SAKPAX@Z|, CSDIOControllerBase::SDHCControllerIstThread

	EXPORT	|??_C@_1GI@NJNFKEDK@?$AA?9?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JK@CCDJFKNG@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| [ DATA ] ; `string'
	EXPORT	|?CommandCompleteHandler@CSDIOControllerBase@@QAAHXZ| ; CSDIOControllerBase::CommandCompleteHandler
	EXPORT	|??_C@_1II@BOFOODJP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IC@NEPKBLAK@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LI@OAPCIBNJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| [ DATA ] ; `string'
	EXPORT	|GetCurrentThread|
	IMPORT	|WaitForSingleObject|
	IMPORT	|InterruptDone|
	IMPORT	|CeSetThreadPriority|

  000a8			 AREA	 |.pdata|, PDATA
|$T42828| DCD	|$LN24@SDHCContro@2|
	DCD	0x4000b604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@NJNFKEDK@?$AA?9?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo@| DCB "-"
	DCB	0x0, "C", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s"
	DCB	0x0, "e", 0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H"
	DCB	0x0, "C", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I"
	DCB	0x0, "s", 0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, "I", 0x0, "m", 0x0, "p", 0x0, "l"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JK@CCDJFKNG@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I", 0x0, "s"
	DCB	0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "I", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, ":"
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i"
	DCB	0x0, "b", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "S", 0x0, "D"
	DCB	0x0, "I", 0x0, "O", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1II@BOFOODJP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I", 0x0, "s"
	DCB	0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "I", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, ":"
	DCB	0x0, " ", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@NEPKBLAK@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I", 0x0, "s"
	DCB	0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "I", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, ":"
	DCB	0x0, " ", 0x0, "W", 0x0, "a", 0x0, "i", 0x0, "t", 0x0, " "
	DCB	0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LI@OAPCIBNJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I", 0x0, "s"
	DCB	0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "I", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, ":"
	DCB	0x0, " ", 0x0, "W", 0x0, "a", 0x0, "r", 0x0, "n", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, ",", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, " "
	DCB	0x0, "C", 0x0, "E", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, "P", 0x0, "r", 0x0, "i", 0x0, "o"
	DCB	0x0, "r", 0x0, "i", 0x0, "t", 0x0, "y", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  02ae4			 AREA	 |.text|, CODE, ARM

  02ae4		 |?SDHCControllerIstThreadImpl@CSDIOControllerBase@@QAAKXZ| PROC ; CSDIOControllerBase::SDHCControllerIstThreadImpl

; 1160 : {

  02ae4		 |$LN24@SDHCContro@2|
  02ae4	e1a0c00d	 mov         r12, sp
  02ae8	e92d0001	 stmdb       sp!, {r0}
  02aec	e92d5000	 stmdb       sp!, {r12, lr}
  02af0	e24dd034	 sub         sp, sp, #0x34
  02af4		 |$M42825|

; 1161 :     DWORD dwWaitTime    = INFINITE;

  02af4	e3e03000	 mvn         r3, #0
  02af8	e58d3000	 str         r3, [sp]

; 1162 : 
; 1163 :     if (!CeSetThreadPriority(GetCurrentThread(), m_dwSDIOPriority)) {

  02afc	eb000000	 bl          GetCurrentThread
  02b00	e58d000c	 str         r0, [sp, #0xC]
  02b04	e59d303c	 ldr         r3, [sp, #0x3C]
  02b08	e2833058	 add         r3, r3, #0x58
  02b0c	e5931000	 ldr         r1, [r3]
  02b10	e59d000c	 ldr         r0, [sp, #0xC]
  02b14	eb000000	 bl          CeSetThreadPriority
  02b18	e58d0010	 str         r0, [sp, #0x10]
  02b1c	e59d3010	 ldr         r3, [sp, #0x10]
  02b20	e3530000	 cmp         r3, #0
  02b24	1a00000a	 bne         |$LN7@SDHCContro@2|

; 1164 :         DEBUGMSG(SDCARD_ZONE_WARN, (L"CSDIOControllerBase::SDHCControllerIstThreadImpl: "
; 1165 :             L"Warning, failed to set CEThreadPriority\r\n"
; 1166 :         ));

  02b28	e59f326c	 ldr         r3, [pc, #0x26C]
  02b2c	e5933440	 ldr         r3, [r3, #0x440]
  02b30	e3130901	 tst         r3, #1, 18
  02b34	0a000004	 beq         |$LN10@SDHCContro@2|
  02b38	e59f0278	 ldr         r0, [pc, #0x278]
  02b3c	eb000000	 bl          NKDbgPrintfW
  02b40	e3a03001	 mov         r3, #1
  02b44	e58d3014	 str         r3, [sp, #0x14]
  02b48	ea000001	 b           |$LN11@SDHCContro@2|
  02b4c		 |$LN10@SDHCContro@2|
  02b4c	e3a03000	 mov         r3, #0
  02b50	e58d3014	 str         r3, [sp, #0x14]
  02b54		 |$LN11@SDHCContro@2|
  02b54		 |$LN7@SDHCContro@2|

; 1167 :     }
; 1168 : 
; 1169 :     InterruptDone( m_dwControllerSysIntr );

  02b54	e59d303c	 ldr         r3, [sp, #0x3C]
  02b58	e283306c	 add         r3, r3, #0x6C
  02b5c	e5930000	 ldr         r0, [r3]
  02b60	eb000000	 bl          InterruptDone
  02b64		 |$LN6@SDHCContro@2|

; 1170 : 
; 1171 :     while (TRUE) {
; 1172 :         // wait for the SDIO/controller interrupt
; 1173 :         if (WAIT_OBJECT_0 != WaitForSingleObject(m_hControllerISTEvent, dwWaitTime)) 

  02b64	e59d1000	 ldr         r1, [sp]
  02b68	e59d303c	 ldr         r3, [sp, #0x3C]
  02b6c	e2833048	 add         r3, r3, #0x48
  02b70	e5930000	 ldr         r0, [r3]
  02b74	eb000000	 bl          WaitForSingleObject
  02b78	e58d0018	 str         r0, [sp, #0x18]
  02b7c	e59d3018	 ldr         r3, [sp, #0x18]
  02b80	e3530000	 cmp         r3, #0
  02b84	0a00000b	 beq         |$LN4@SDHCContro@2|

; 1174 :         {
; 1175 :             DEBUGMSG(SDCARD_ZONE_WARN, (L"CSDIOControllerBase::SDHCControllerIstThreadImpl: "
; 1176 :                 L"Wait Failed!\r\n"
; 1177 :             ));

  02b88	e59f320c	 ldr         r3, [pc, #0x20C]
  02b8c	e5933440	 ldr         r3, [r3, #0x440]
  02b90	e3130901	 tst         r3, #1, 18
  02b94	0a000004	 beq         |$LN12@SDHCContro@2|
  02b98	e59f0214	 ldr         r0, [pc, #0x214]
  02b9c	eb000000	 bl          NKDbgPrintfW
  02ba0	e3a03001	 mov         r3, #1
  02ba4	e58d301c	 str         r3, [sp, #0x1C]
  02ba8	ea000001	 b           |$LN13@SDHCContro@2|
  02bac		 |$LN12@SDHCContro@2|
  02bac	e3a03000	 mov         r3, #0
  02bb0	e58d301c	 str         r3, [sp, #0x1C]
  02bb4		 |$LN13@SDHCContro@2|

; 1178 :             break;

  02bb4	ea000066	 b           |$LN5@SDHCContro@2|
  02bb8		 |$LN4@SDHCContro@2|

; 1179 :         }
; 1180 : 
; 1181 :         if (m_fDriverShutdown) {

  02bb8	e59d303c	 ldr         r3, [sp, #0x3C]
  02bbc	e2833060	 add         r3, r3, #0x60
  02bc0	e5933000	 ldr         r3, [r3]
  02bc4	e3530000	 cmp         r3, #0
  02bc8	0a00000b	 beq         |$LN3@SDHCContro@2|

; 1182 :             DEBUGMSG(SDCARD_ZONE_WARN, (L"CSDIOControllerBase::SDHCControllerIstThreadImpl: "
; 1183 :                 L"Thread exiting!\r\n"
; 1184 :             ));

  02bcc	e59f31c8	 ldr         r3, [pc, #0x1C8]
  02bd0	e5933440	 ldr         r3, [r3, #0x440]
  02bd4	e3130901	 tst         r3, #1, 18
  02bd8	0a000004	 beq         |$LN14@SDHCContro@2|
  02bdc	e59f01cc	 ldr         r0, [pc, #0x1CC]
  02be0	eb000000	 bl          NKDbgPrintfW
  02be4	e3a03001	 mov         r3, #1
  02be8	e58d3020	 str         r3, [sp, #0x20]
  02bec	ea000001	 b           |$LN15@SDHCContro@2|
  02bf0		 |$LN14@SDHCContro@2|
  02bf0	e3a03000	 mov         r3, #0
  02bf4	e58d3020	 str         r3, [sp, #0x20]
  02bf8		 |$LN15@SDHCContro@2|

; 1185 :             break;

  02bf8	ea000055	 b           |$LN5@SDHCContro@2|
  02bfc		 |$LN3@SDHCContro@2|

; 1186 :         }
; 1187 : 
; 1188 :         WORD wStat;
; 1189 : 
; 1190 :         wStat = Read_MMC_STAT() & INREG16(&m_vpSDIOReg->MMC_IE) & 0x7fff;

  02bfc	e59d003c	 ldr         r0, [sp, #0x3C]
  02c00	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|
  02c04	e1cd02b4	 strh        r0, [sp, #0x24]
  02c08	e1dd32b4	 ldrh        r3, [sp, #0x24]
  02c0c	e1a02003	 mov         r2, r3
  02c10	e59d303c	 ldr         r3, [sp, #0x3C]
  02c14	e2833088	 add         r3, r3, #0x88
  02c18	e5933000	 ldr         r3, [r3]
  02c1c	e2833014	 add         r3, r3, #0x14
  02c20	e1d330b0	 ldrh        r3, [r3]
  02c24	e0022003	 and         r2, r2, r3
  02c28	e3a03c7f	 mov         r3, #0x7F, 24
  02c2c	e38330ff	 orr         r3, r3, #0xFF
  02c30	e0023003	 and         r3, r2, r3
  02c34	e1a03803	 mov         r3, r3, lsl #16
  02c38	e1a03823	 mov         r3, r3, lsr #16
  02c3c	e1cd30b4	 strh        r3, [sp, #4]

; 1191 : 
; 1192 :         if( wStat & (MMC_IE_EOC|MMC_STAT_CERR|MMC_STAT_CCRC|MMC_STAT_CTO) )

  02c40	e1dd30b4	 ldrh        r3, [sp, #4]
  02c44	e1a02003	 mov         r2, r3
  02c48	e3a03c41	 mov         r3, #0x41, 24
  02c4c	e3833081	 orr         r3, r3, #0x81
  02c50	e1120003	 tst         r2, r3
  02c54	0a000001	 beq         |$LN2@SDHCContro@2|

; 1193 :         {
; 1194 :             CommandCompleteHandler();

  02c58	e59d003c	 ldr         r0, [sp, #0x3C]
  02c5c	eb000000	 bl          |?CommandCompleteHandler@CSDIOControllerBase@@QAAHXZ|
  02c60		 |$LN2@SDHCContro@2|

; 1195 :         }
; 1196 : 
; 1197 :         if( wStat & MMC_STAT_CIRQ )

  02c60	e1dd30b4	 ldrh        r3, [sp, #4]
  02c64	e3130a02	 tst         r3, #2, 20
  02c68	0a000034	 beq         |$LN1@SDHCContro@2|

; 1198 :         {
; 1199 :             ASSERT( m_fSDIOInterruptsEnabled );

  02c6c	e59d303c	 ldr         r3, [sp, #0x3C]
  02c70	e283303c	 add         r3, r3, #0x3C
  02c74	e5933000	 ldr         r3, [r3]
  02c78	e3530000	 cmp         r3, #0
  02c7c	0a000002	 beq         |$LN16@SDHCContro@2|
  02c80	e3a03001	 mov         r3, #1
  02c84	e58d3028	 str         r3, [sp, #0x28]
  02c88	ea000008	 b           |$LN17@SDHCContro@2|
  02c8c		 |$LN16@SDHCContro@2|
  02c8c	e3a03b01	 mov         r3, #1, 22
  02c90	e38330af	 orr         r3, r3, #0xAF
  02c94	e59f2110	 ldr         r2, [pc, #0x110]
  02c98	e59f1108	 ldr         r1, [pc, #0x108]
  02c9c	e59f0100	 ldr         r0, [pc, #0x100]
  02ca0	eb000000	 bl          NKDbgPrintfW
  02ca4	e6000010	 __debugbreak_ce
  02ca8	e3a03000	 mov         r3, #0
  02cac	e58d3028	 str         r3, [sp, #0x28]
  02cb0		 |$LN17@SDHCContro@2|

; 1200 :             // indicate that the card is interrupting
; 1201 :             DEBUGMSG(SHC_INTERRUPT_ZONE, (L"CSDIOControllerBase::SDHCControllerIstThreadImpl: "
; 1202 :                 L"Receibed SDIO interrupt!\r\n"));

  02cb0	e59f30e4	 ldr         r3, [pc, #0xE4]
  02cb4	e5933440	 ldr         r3, [r3, #0x440]
  02cb8	e3130001	 tst         r3, #1
  02cbc	0a000004	 beq         |$LN18@SDHCContro@2|
  02cc0	e59f00d8	 ldr         r0, [pc, #0xD8]
  02cc4	eb000000	 bl          NKDbgPrintfW
  02cc8	e3a03001	 mov         r3, #1
  02ccc	e58d302c	 str         r3, [sp, #0x2C]
  02cd0	ea000001	 b           |$LN19@SDHCContro@2|
  02cd4		 |$LN18@SDHCContro@2|
  02cd4	e3a03000	 mov         r3, #0
  02cd8	e58d302c	 str         r3, [sp, #0x2C]
  02cdc		 |$LN19@SDHCContro@2|

; 1203 : 
; 1204 :             // disable the SDIO interrupt
; 1205 :             CLRREG16(&m_vpSDIOReg->MMC_IE, MMC_IE_CIRQ);

  02cdc	e59d303c	 ldr         r3, [sp, #0x3C]
  02ce0	e2833088	 add         r3, r3, #0x88
  02ce4	e5933000	 ldr         r3, [r3]
  02ce8	e2833014	 add         r3, r3, #0x14
  02cec	e1d330b0	 ldrh        r3, [r3]
  02cf0	e1a02003	 mov         r2, r3
  02cf4	e3e03a02	 mvn         r3, #2, 20
  02cf8	e0023003	 and         r3, r2, r3
  02cfc	e1a02803	 mov         r2, r3, lsl #16
  02d00	e1a02822	 mov         r2, r2, lsr #16
  02d04	e59d303c	 ldr         r3, [sp, #0x3C]
  02d08	e2833088	 add         r3, r3, #0x88
  02d0c	e5933000	 ldr         r3, [r3]
  02d10	e2833014	 add         r3, r3, #0x14
  02d14	e1c320b0	 strh        r2, [r3]

; 1206 :             // notify the SDBusDriver of the SDIO interrupt
; 1207 :             m_fSDIOInterruptInService = TRUE;

  02d18	e59d303c	 ldr         r3, [sp, #0x3C]
  02d1c	e2832028	 add         r2, r3, #0x28
  02d20	e3a03001	 mov         r3, #1
  02d24	e5823000	 str         r3, [r2]

; 1208 :             SDHCDIndicateSlotStateChange(m_pHCContext, 0, DeviceInterrupting);

  02d28	e3a02003	 mov         r2, #3
  02d2c	e3a01000	 mov         r1, #0
  02d30	e59d303c	 ldr         r3, [sp, #0x3C]
  02d34	e2833004	 add         r3, r3, #4
  02d38	e5930000	 ldr         r0, [r3]
  02d3c	eb000000	 bl          SDHCDIndicateSlotStateChange
  02d40		 |$LN1@SDHCContro@2|

; 1209 :         }
; 1210 : 
; 1211 :         InterruptDone( m_dwControllerSysIntr );

  02d40	e59d303c	 ldr         r3, [sp, #0x3C]
  02d44	e283306c	 add         r3, r3, #0x6C
  02d48	e5930000	 ldr         r0, [r3]
  02d4c	eb000000	 bl          InterruptDone

; 1212 :     }

  02d50	eaffff83	 b           |$LN6@SDHCContro@2|
  02d54		 |$LN5@SDHCContro@2|

; 1213 : 
; 1214 :     DEBUGMSG(SDCARD_ZONE_FUNC, (L"-CSDIOControllerBase::SDHCControllerIstThreadImpl\r\n"));

  02d54	e59f3040	 ldr         r3, [pc, #0x40]
  02d58	e5933440	 ldr         r3, [r3, #0x440]
  02d5c	e3130b02	 tst         r3, #2, 22
  02d60	0a000004	 beq         |$LN20@SDHCContro@2|
  02d64	e59f002c	 ldr         r0, [pc, #0x2C]
  02d68	eb000000	 bl          NKDbgPrintfW
  02d6c	e3a03001	 mov         r3, #1
  02d70	e58d3030	 str         r3, [sp, #0x30]
  02d74	ea000001	 b           |$LN21@SDHCContro@2|
  02d78		 |$LN20@SDHCContro@2|
  02d78	e3a03000	 mov         r3, #0
  02d7c	e58d3030	 str         r3, [sp, #0x30]
  02d80		 |$LN21@SDHCContro@2|

; 1215 :     return 0;

  02d80	e3a03000	 mov         r3, #0
  02d84	e58d3008	 str         r3, [sp, #8]

; 1216 : }

  02d88	e59d0008	 ldr         r0, [sp, #8]
  02d8c	e28dd034	 add         sp, sp, #0x34
  02d90	e89d6000	 ldmia       sp, {sp, lr}
  02d94	e12fff1e	 bx          lr
  02d98		 |$LN25@SDHCContro@2|
  02d98		 |$LN26@SDHCContro@2|
  02d98	00000000	 DCD         |??_C@_1GI@NJNFKEDK@?$AA?9?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo@|
  02d9c		 |$LN27@SDHCContro@2|
  02d9c	00000000	 DCD         |dpCurSettings|
  02da0		 |$LN28@SDHCContro@2|
  02da0	00000000	 DCD         |??_C@_1JK@CCDJFKNG@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  02da4		 |$LN29@SDHCContro@2|
  02da4	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  02da8		 |$LN30@SDHCContro@2|
  02da8	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  02dac		 |$LN31@SDHCContro@2|
  02dac	00000000	 DCD         |??_C@_1JA@LIPKICML@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  02db0		 |$LN32@SDHCContro@2|
  02db0	00000000	 DCD         |??_C@_1II@BOFOODJP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  02db4		 |$LN33@SDHCContro@2|
  02db4	00000000	 DCD         |??_C@_1IC@NEPKBLAK@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  02db8		 |$LN34@SDHCContro@2|
  02db8	00000000	 DCD         |??_C@_1LI@OAPCIBNJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  02dbc		 |$M42826|

			 ENDP  ; |?SDHCControllerIstThreadImpl@CSDIOControllerBase@@QAAKXZ|, CSDIOControllerBase::SDHCControllerIstThreadImpl

; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T42844| DCD	|$LN5@GetCurrent|
	DCD	0x40000601
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentThread| PROC

; 351  : _inline HANDLE GetCurrentThread(void) {

  00000		 |$LN5@GetCurrent|
  00000	e24dd004	 sub         sp, sp, #4
  00004		 |$M42841|

; 352  : 	return ((HANDLE)(SH_CURTHREAD+SYS_HANDLE_BASE));

  00004	e3a03041	 mov         r3, #0x41
  00008	e58d3000	 str         r3, [sp]

; 353  : }

  0000c	e59d0000	 ldr         r0, [sp]
  00010	e28dd004	 add         sp, sp, #4
  00014	e12fff1e	 bx          lr
  00018		 |$M42842|

			 ENDP  ; |GetCurrentThread|

	EXPORT	|?SDHCCardDetectIstThread@CSDIOControllerBase@@SAKPAX@Z| ; CSDIOControllerBase::SDHCCardDetectIstThread

  000b0			 AREA	 |.pdata|, PDATA
|$T42852| DCD	|$LN5@SDHCCardDe|
	DCD	0x40001404
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\sdhc\base\sdhc.cpp

  02dbc			 AREA	 |.text|, CODE, ARM

  02dbc		 |?SDHCCardDetectIstThread@CSDIOControllerBase@@SAKPAX@Z| PROC ; CSDIOControllerBase::SDHCCardDetectIstThread

; 1225 : {

  02dbc		 |$LN5@SDHCCardDe|
  02dbc	e1a0c00d	 mov         r12, sp
  02dc0	e92d0001	 stmdb       sp!, {r0}
  02dc4	e92d5000	 stmdb       sp!, {r12, lr}
  02dc8	e24dd00c	 sub         sp, sp, #0xC
  02dcc		 |$M42849|

; 1226 :     CSDIOControllerBase *pController = (CSDIOControllerBase*)lpParameter;

  02dcc	e59d3014	 ldr         r3, [sp, #0x14]
  02dd0	e58d3000	 str         r3, [sp]

; 1227 :     return pController->SDHCCardDetectIstThreadImpl();

  02dd4	e59d3000	 ldr         r3, [sp]
  02dd8	e5933000	 ldr         r3, [r3]
  02ddc	e2833018	 add         r3, r3, #0x18
  02de0	e59d0000	 ldr         r0, [sp]
  02de4	e5933000	 ldr         r3, [r3]
  02de8	e1a0e00f	 mov         lr, pc
  02dec	e12fff13	 bx          r3
  02df0	e58d0008	 str         r0, [sp, #8]
  02df4	e59d3008	 ldr         r3, [sp, #8]
  02df8	e58d3004	 str         r3, [sp, #4]

; 1228 : }

  02dfc	e59d0004	 ldr         r0, [sp, #4]
  02e00	e28dd00c	 add         sp, sp, #0xC
  02e04	e89d6000	 ldmia       sp, {sp, lr}
  02e08	e12fff1e	 bx          lr
  02e0c		 |$M42850|

			 ENDP  ; |?SDHCCardDetectIstThread@CSDIOControllerBase@@SAKPAX@Z|, CSDIOControllerBase::SDHCCardDetectIstThread

	EXPORT	|TWLClose|
	EXPORT	|TWLIntrDisable|
	EXPORT	|SetEvent|
	EXPORT	|?SDHCDeinitializeImpl@CSDIOControllerBase@@QAAJXZ| ; CSDIOControllerBase::SDHCDeinitializeImpl
	IMPORT	|CloseHandle|
	IMPORT	|InterruptDisable|

  000b8			 AREA	 |.pdata|, PDATA
|$T42862| DCD	|$LN14@SDHCDeinit|
	DCD	0x4000aa04
; Function compile flags: /Odtp

  02e0c			 AREA	 |.text|, CODE, ARM

  02e0c		 |?SDHCDeinitializeImpl@CSDIOControllerBase@@QAAJXZ| PROC ; CSDIOControllerBase::SDHCDeinitializeImpl

; 1240 : {

  02e0c		 |$LN14@SDHCDeinit|
  02e0c	e1a0c00d	 mov         r12, sp
  02e10	e92d0001	 stmdb       sp!, {r0}
  02e14	e92d5000	 stmdb       sp!, {r12, lr}
  02e18	e24dd01c	 sub         sp, sp, #0x1C
  02e1c		 |$M42859|

; 1241 :     // mark for shutdown
; 1242 :     m_fDriverShutdown = TRUE;

  02e1c	e59d3024	 ldr         r3, [sp, #0x24]
  02e20	e2832060	 add         r2, r3, #0x60
  02e24	e3a03001	 mov         r3, #1
  02e28	e5823000	 str         r3, [r2]

; 1243 : 
; 1244 :     if (m_fInitialized) {

  02e2c	e59d3024	 ldr         r3, [sp, #0x24]
  02e30	e2833070	 add         r3, r3, #0x70
  02e34	e5933000	 ldr         r3, [r3]
  02e38	e3530000	 cmp         r3, #0
  02e3c	0a00002d	 beq         |$LN9@SDHCDeinit|

; 1245 :         if( m_dwControllerSysIntr != SYSINTR_UNDEFINED )

  02e40	e59d3024	 ldr         r3, [sp, #0x24]
  02e44	e283306c	 add         r3, r3, #0x6C
  02e48	e5933000	 ldr         r3, [r3]
  02e4c	e3730001	 cmn         r3, #1
  02e50	0a000020	 beq         |$LN8@SDHCDeinit|

; 1246 :         {
; 1247 :             // disable wakeup on SDIO interrupt
; 1248 :             if ( m_dwCurrentWakeupSources & WAKEUP_SDIO )

  02e54	e59d3024	 ldr         r3, [sp, #0x24]
  02e58	e2833034	 add         r3, r3, #0x34
  02e5c	e5933000	 ldr         r3, [r3]
  02e60	e3130001	 tst         r3, #1
  02e64	0a000009	 beq         |$LN7@SDHCDeinit|

; 1249 :             {
; 1250 :                 KernelIoControl( IOCTL_HAL_DISABLE_WAKE,
; 1251 :                     &m_dwControllerSysIntr,
; 1252 :                     sizeof( m_dwControllerSysIntr ),
; 1253 :                     NULL,
; 1254 :                     0,
; 1255 :                     NULL );

  02e68	e3a03000	 mov         r3, #0
  02e6c	e58d3004	 str         r3, [sp, #4]
  02e70	e3a03000	 mov         r3, #0
  02e74	e58d3000	 str         r3, [sp]
  02e78	e3a03000	 mov         r3, #0
  02e7c	e3a02004	 mov         r2, #4
  02e80	e59d1024	 ldr         r1, [sp, #0x24]
  02e84	e281106c	 add         r1, r1, #0x6C
  02e88	e59f0220	 ldr         r0, [pc, #0x220]
  02e8c	eb000000	 bl          KernelIoControl
  02e90		 |$LN7@SDHCDeinit|

; 1256 :             }
; 1257 : 
; 1258 :             // disable controller interrupt
; 1259 :             InterruptDisable(m_dwControllerSysIntr);

  02e90	e59d3024	 ldr         r3, [sp, #0x24]
  02e94	e283306c	 add         r3, r3, #0x6C
  02e98	e5930000	 ldr         r0, [r3]
  02e9c	eb000000	 bl          InterruptDisable

; 1260 : 
; 1261 :             // release the SYSINTR value
; 1262 :             KernelIoControl(IOCTL_HAL_RELEASE_SYSINTR, &m_dwControllerSysIntr, sizeof(DWORD), NULL, 0, NULL);

  02ea0	e3a03000	 mov         r3, #0
  02ea4	e58d3004	 str         r3, [sp, #4]
  02ea8	e3a03000	 mov         r3, #0
  02eac	e58d3000	 str         r3, [sp]
  02eb0	e3a03000	 mov         r3, #0
  02eb4	e3a02004	 mov         r2, #4
  02eb8	e59d1024	 ldr         r1, [sp, #0x24]
  02ebc	e281106c	 add         r1, r1, #0x6C
  02ec0	e59f01e4	 ldr         r0, [pc, #0x1E4]
  02ec4	eb000000	 bl          KernelIoControl

; 1263 :             m_dwControllerSysIntr = SYSINTR_UNDEFINED;

  02ec8	e59d3024	 ldr         r3, [sp, #0x24]
  02ecc	e283206c	 add         r2, r3, #0x6C
  02ed0	e3e03000	 mvn         r3, #0
  02ed4	e5823000	 str         r3, [r2]
  02ed8		 |$LN8@SDHCDeinit|

; 1264 :         }
; 1265 : 
; 1266 :         if (m_fCardPresent) {

  02ed8	e59d3024	 ldr         r3, [sp, #0x24]
  02edc	e2833038	 add         r3, r3, #0x38
  02ee0	e5933000	 ldr         r3, [r3]
  02ee4	e3530000	 cmp         r3, #0
  02ee8	0a000002	 beq         |$LN6@SDHCDeinit|

; 1267 :             // remove device
; 1268 :             HandleRemoval(FALSE);

  02eec	e3a01000	 mov         r1, #0
  02ef0	e59d0024	 ldr         r0, [sp, #0x24]
  02ef4	eb000000	 bl          |?HandleRemoval@CSDIOControllerBase@@QAAXH@Z|
  02ef8		 |$LN6@SDHCDeinit|
  02ef8		 |$LN9@SDHCDeinit|

; 1269 :         }
; 1270 : 
; 1271 :     }
; 1272 : 
; 1273 :     // clean up controller IST
; 1274 :     if (NULL != m_htControllerIST) {

  02ef8	e59d3024	 ldr         r3, [sp, #0x24]
  02efc	e283304c	 add         r3, r3, #0x4C
  02f00	e5933000	 ldr         r3, [r3]
  02f04	e3530000	 cmp         r3, #0
  02f08	0a000010	 beq         |$LN5@SDHCDeinit|

; 1275 :         // wake up the IST
; 1276 :         SetEvent(m_hControllerISTEvent);

  02f0c	e59d3024	 ldr         r3, [sp, #0x24]
  02f10	e2833048	 add         r3, r3, #0x48
  02f14	e5930000	 ldr         r0, [r3]
  02f18	eb000000	 bl          SetEvent

; 1277 :         // wait for the thread to exit
; 1278 :         WaitForSingleObject(m_htControllerIST, INFINITE); 

  02f1c	e3e01000	 mvn         r1, #0
  02f20	e59d3024	 ldr         r3, [sp, #0x24]
  02f24	e283304c	 add         r3, r3, #0x4C
  02f28	e5930000	 ldr         r0, [r3]
  02f2c	eb000000	 bl          WaitForSingleObject

; 1279 :         CloseHandle(m_htControllerIST);

  02f30	e59d3024	 ldr         r3, [sp, #0x24]
  02f34	e283304c	 add         r3, r3, #0x4C
  02f38	e5930000	 ldr         r0, [r3]
  02f3c	eb000000	 bl          CloseHandle

; 1280 :         m_htControllerIST = NULL;

  02f40	e59d3024	 ldr         r3, [sp, #0x24]
  02f44	e283204c	 add         r2, r3, #0x4C
  02f48	e3a03000	 mov         r3, #0
  02f4c	e5823000	 str         r3, [r2]
  02f50		 |$LN5@SDHCDeinit|

; 1281 :     }
; 1282 : 
; 1283 :     // free controller interrupt event
; 1284 :     if (NULL != m_hControllerISTEvent) {

  02f50	e59d3024	 ldr         r3, [sp, #0x24]
  02f54	e2833048	 add         r3, r3, #0x48
  02f58	e5933000	 ldr         r3, [r3]
  02f5c	e3530000	 cmp         r3, #0
  02f60	0a000007	 beq         |$LN4@SDHCDeinit|

; 1285 :         CloseHandle(m_hControllerISTEvent);

  02f64	e59d3024	 ldr         r3, [sp, #0x24]
  02f68	e2833048	 add         r3, r3, #0x48
  02f6c	e5930000	 ldr         r0, [r3]
  02f70	eb000000	 bl          CloseHandle

; 1286 :         m_hControllerISTEvent = NULL;

  02f74	e59d3024	 ldr         r3, [sp, #0x24]
  02f78	e2832048	 add         r2, r3, #0x48
  02f7c	e3a03000	 mov         r3, #0
  02f80	e5823000	 str         r3, [r2]
  02f84		 |$LN4@SDHCDeinit|

; 1287 :     }
; 1288 : 
; 1289 :     // clean up card detect IST
; 1290 :     if (NULL != m_htCardDetectIST) {

  02f84	e59d3024	 ldr         r3, [sp, #0x24]
  02f88	e2833054	 add         r3, r3, #0x54
  02f8c	e5933000	 ldr         r3, [r3]
  02f90	e3530000	 cmp         r3, #0
  02f94	0a000010	 beq         |$LN3@SDHCDeinit|

; 1291 :         // wake up the IST
; 1292 :         SetEvent(m_hCardDetectEvent);

  02f98	e59d3024	 ldr         r3, [sp, #0x24]
  02f9c	e2833050	 add         r3, r3, #0x50
  02fa0	e5930000	 ldr         r0, [r3]
  02fa4	eb000000	 bl          SetEvent

; 1293 :         // wait for the thread to exit
; 1294 :         WaitForSingleObject(m_htCardDetectIST, INFINITE); 

  02fa8	e3e01000	 mvn         r1, #0
  02fac	e59d3024	 ldr         r3, [sp, #0x24]
  02fb0	e2833054	 add         r3, r3, #0x54
  02fb4	e5930000	 ldr         r0, [r3]
  02fb8	eb000000	 bl          WaitForSingleObject

; 1295 :         CloseHandle(m_htCardDetectIST);

  02fbc	e59d3024	 ldr         r3, [sp, #0x24]
  02fc0	e2833054	 add         r3, r3, #0x54
  02fc4	e5930000	 ldr         r0, [r3]
  02fc8	eb000000	 bl          CloseHandle

; 1296 :         m_htCardDetectIST = NULL;

  02fcc	e59d3024	 ldr         r3, [sp, #0x24]
  02fd0	e2832054	 add         r2, r3, #0x54
  02fd4	e3a03000	 mov         r3, #0
  02fd8	e5823000	 str         r3, [r2]
  02fdc		 |$LN3@SDHCDeinit|

; 1297 :     }
; 1298 : 
; 1299 :     if( m_hParentBus != NULL )

  02fdc	e59d3024	 ldr         r3, [sp, #0x24]
  02fe0	e2833008	 add         r3, r3, #8
  02fe4	e5933000	 ldr         r3, [r3]
  02fe8	e3530000	 cmp         r3, #0
  02fec	0a00001b	 beq         |$LN2@SDHCDeinit|

; 1300 :     {
; 1301 :         TWLIntrDisable(m_hParentBus, TWL_INTR_CD1);

  02ff0	e3a01000	 mov         r1, #0
  02ff4	e59d3024	 ldr         r3, [sp, #0x24]
  02ff8	e2833008	 add         r3, r3, #8
  02ffc	e5930000	 ldr         r0, [r3]
  03000	eb000000	 bl          TWLIntrDisable

; 1302 :         TWLIntrDisable(m_hParentBus, TWL_INTR_DL1);

  03004	e3a01002	 mov         r1, #2
  03008	e59d3024	 ldr         r3, [sp, #0x24]
  0300c	e2833008	 add         r3, r3, #8
  03010	e5930000	 ldr         r0, [r3]
  03014	eb000000	 bl          TWLIntrDisable

; 1303 :         TWLIntrDisable(m_hParentBus, TWL_INTR_CD2);

  03018	e3a01001	 mov         r1, #1
  0301c	e59d3024	 ldr         r3, [sp, #0x24]
  03020	e2833008	 add         r3, r3, #8
  03024	e5930000	 ldr         r0, [r3]
  03028	eb000000	 bl          TWLIntrDisable

; 1304 :         TWLIntrDisable(m_hParentBus, TWL_INTR_DL2);

  0302c	e3a01003	 mov         r1, #3
  03030	e59d3024	 ldr         r3, [sp, #0x24]
  03034	e2833008	 add         r3, r3, #8
  03038	e5930000	 ldr         r0, [r3]
  0303c	eb000000	 bl          TWLIntrDisable

; 1305 : 
; 1306 :         TWLClose(m_hParentBus);

  03040	e59d3024	 ldr         r3, [sp, #0x24]
  03044	e2833008	 add         r3, r3, #8
  03048	e5930000	 ldr         r0, [r3]
  0304c	eb000000	 bl          TWLClose

; 1307 :         m_hParentBus = NULL;

  03050	e59d3024	 ldr         r3, [sp, #0x24]
  03054	e2832008	 add         r2, r3, #8
  03058	e3a03000	 mov         r3, #0
  0305c	e5823000	 str         r3, [r2]
  03060		 |$LN2@SDHCDeinit|

; 1308 :     }
; 1309 : 
; 1310 :     // free card detect interrupt event
; 1311 :     if (NULL != m_hCardDetectEvent) {

  03060	e59d3024	 ldr         r3, [sp, #0x24]
  03064	e2833050	 add         r3, r3, #0x50
  03068	e5933000	 ldr         r3, [r3]
  0306c	e3530000	 cmp         r3, #0
  03070	0a000007	 beq         |$LN1@SDHCDeinit|

; 1312 :         CloseHandle(m_hCardDetectEvent);

  03074	e59d3024	 ldr         r3, [sp, #0x24]
  03078	e2833050	 add         r3, r3, #0x50
  0307c	e5930000	 ldr         r0, [r3]
  03080	eb000000	 bl          CloseHandle

; 1313 :         m_hCardDetectEvent = NULL;

  03084	e59d3024	 ldr         r3, [sp, #0x24]
  03088	e2832050	 add         r2, r3, #0x50
  0308c	e3a03000	 mov         r3, #0
  03090	e5823000	 str         r3, [r2]
  03094		 |$LN1@SDHCDeinit|

; 1314 :     }
; 1315 : 
; 1316 :     return SD_API_STATUS_SUCCESS;

  03094	e3a03000	 mov         r3, #0
  03098	e58d3018	 str         r3, [sp, #0x18]

; 1317 : }

  0309c	e59d0018	 ldr         r0, [sp, #0x18]
  030a0	e28dd01c	 add         sp, sp, #0x1C
  030a4	e89d6000	 ldmia       sp, {sp, lr}
  030a8	e12fff1e	 bx          lr
  030ac		 |$LN15@SDHCDeinit|
  030ac		 |$LN16@SDHCDeinit|
  030ac	010100d8	 DCD         0x10100d8
  030b0		 |$LN17@SDHCDeinit|
  030b0	010100a4	 DCD         0x10100a4
  030b4		 |$M42860|

			 ENDP  ; |?SDHCDeinitializeImpl@CSDIOControllerBase@@QAAJXZ|, CSDIOControllerBase::SDHCDeinitializeImpl

	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T42871| DCD	|$LN5@SetEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42868|

; 236  : 	return EventModify(h,EVENT_SET);

  00010	e3a01003	 mov         r1, #3
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 237  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M42869|

			 ENDP  ; |SetEvent|

; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\inc\twl.h

  00000			 AREA	 |.pdata|, PDATA
|$T42878| DCD	|$LN5@TWLClose|
	DCD	0x40000f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |TWLClose| PROC

; 164  : {

  00000		 |$LN5@TWLClose|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42875|

; 165  :     DEVICE_CONTEXT_TWL *pContext = (DEVICE_CONTEXT_TWL*)hContext;

  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e58d3000	 str         r3, [sp]

; 166  :     CloseHandle(pContext->hDevice);

  00018	e59d3000	 ldr         r3, [sp]
  0001c	e283301c	 add         r3, r3, #0x1C
  00020	e5930000	 ldr         r0, [r3]
  00024	eb000000	 bl          CloseHandle

; 167  :     LocalFree(pContext);

  00028	e59d0000	 ldr         r0, [sp]
  0002c	eb000000	 bl          LocalFree

; 168  : }

  00030	e28dd004	 add         sp, sp, #4
  00034	e89d6000	 ldmia       sp, {sp, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M42876|

			 ENDP  ; |TWLClose|


  00000			 AREA	 |.pdata|, PDATA
|$T42886| DCD	|$LN5@TWLIntrDis|
	DCD	0x40001504
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |TWLIntrDisable| PROC

; 231  : {

  00000		 |$LN5@TWLIntrDis|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M42883|

; 232  :     DEVICE_CONTEXT_TWL *pContext = (DEVICE_CONTEXT_TWL*)hContext;

  00010	e59d3014	 ldr         r3, [sp, #0x14]
  00014	e58d3000	 str         r3, [sp]

; 233  :     return pContext->ifc.pfnIntrDisable(pContext->ifc.context, intrId);

  00018	e59d1018	 ldr         r1, [sp, #0x18]
  0001c	e59d3000	 ldr         r3, [sp]
  00020	e5930000	 ldr         r0, [r3]
  00024	e59d3000	 ldr         r3, [sp]
  00028	e2833014	 add         r3, r3, #0x14
  0002c	e5933000	 ldr         r3, [r3]
  00030	e1a0e00f	 mov         lr, pc
  00034	e12fff13	 bx          r3
  00038	e58d0008	 str         r0, [sp, #8]
  0003c	e59d3008	 ldr         r3, [sp, #8]
  00040	e58d3004	 str         r3, [sp, #4]

; 234  : }

  00044	e59d0004	 ldr         r0, [sp, #4]
  00048	e28dd00c	 add         sp, sp, #0xC
  0004c	e89d6000	 ldmia       sp, {sp, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$M42884|

			 ENDP  ; |TWLIntrDisable|

	EXPORT	|TWLIntrEnable|
	EXPORT	|TWLSetIntrEvent|
	EXPORT	|??_C@_1IA@MJBBCBEJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe@| [ DATA ] ; `string'
	EXPORT	|TWLOpen|
	EXPORT	|??_C@_1JO@PAEDMDND@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IG@PCGMDEAC@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl@| [ DATA ] ; `string'
	EXPORT	|?SDHCInitializeImpl@CSDIOControllerBase@@QAAJXZ| ; CSDIOControllerBase::SDHCInitializeImpl
	IMPORT	|CreateThread|
	IMPORT	|InterruptInitialize|
	IMPORT	|CreateEventW|

  000c0			 AREA	 |.pdata|, PDATA
|$T42906| DCD	|$LN43@SDHCInitia|
	DCD	0x40017904
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\sdhc\base\sdhc.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IA@MJBBCBEJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "o", 0x0, "b", 0x0, "t", 0x0, "a", 0x0, "i", 0x0, "n"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "s", 0x0, " "
	DCB	0x0, "h", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JO@PAEDMDND@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, "I", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "r"
	DCB	0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "o", 0x0, "b"
	DCB	0x0, "t", 0x0, "a", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O"
	DCB	0x0, " ", 0x0, "S", 0x0, "Y", 0x0, "S", 0x0, "I", 0x0, "N"
	DCB	0x0, "T", 0x0, "R", 0x0, " ", 0x0, "v", 0x0, "a", 0x0, "l"
	DCB	0x0, "u", 0x0, "e", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IG@PCGMDEAC@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, "I", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "M", 0x0, "M"
	DCB	0x0, "C", 0x0, "1", 0x0, "_", 0x0, "C", 0x0, "O", 0x0, "N"
	DCB	0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "u", 0x0, "e", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  030b4			 AREA	 |.text|, CODE, ARM

  030b4		 |?SDHCInitializeImpl@CSDIOControllerBase@@QAAJXZ| PROC ; CSDIOControllerBase::SDHCInitializeImpl

; 1328 : {

  030b4		 |$LN43@SDHCInitia|
  030b4	e1a0c00d	 mov         r12, sp
  030b8	e92d0001	 stmdb       sp!, {r0}
  030bc	e92d5000	 stmdb       sp!, {r12, lr}
  030c0	e24dd088	 sub         sp, sp, #0x88
  030c4		 |$M42903|

; 1329 :     SD_API_STATUS status = SD_API_STATUS_INSUFFICIENT_RESOURCES; // intermediate status

  030c4	e3a0313b	 mov         r3, #0x3B, 2
  030c8	e58d301c	 str         r3, [sp, #0x1C]

; 1330 :     DWORD         threadID;
; 1331 :     unsigned long  ulLong;
; 1332 :     WORD wRegValue;
; 1333 :     DWORD *pdwSDIOIrq;
; 1334 :     DWORD dwSDIOIrqLen;
; 1335 : 
; 1336 :     m_fDriverShutdown = FALSE;

  030cc	e59d3090	 ldr         r3, [sp, #0x90]
  030d0	e2832060	 add         r2, r3, #0x60
  030d4	e3a03000	 mov         r3, #0
  030d8	e5823000	 str         r3, [r2]

; 1337 :     SoftwareReset(SOFT_RESET_ALL);

  030dc	e3a01002	 mov         r1, #2
  030e0	e59d0090	 ldr         r0, [sp, #0x90]
  030e4	eb000000	 bl          |?SoftwareReset@CSDIOControllerBase@@QAAXE@Z|

; 1338 : 
; 1339 :     // activate the clock
; 1340 :     ClockOn();

  030e8	e59d0090	 ldr         r0, [sp, #0x90]
  030ec	eb000000	 bl          |?ClockOn@CSDIOControllerBase@@QAAXXZ|

; 1341 : 
; 1342 :     // --- Setup MMC config register ---
; 1343 :     // Data Bus width 1 bit - MMC/SD mode - Power Up Up/Normal - Little Endian - Clock Divider
; 1344 :     wRegValue = 0;

  030f0	e3a03000	 mov         r3, #0
  030f4	e1cd32b0	 strh        r3, [sp, #0x20]

; 1345 :     wRegValue |= VALUE_MMC_CON_DW_1BIT | VALUE_MMC_CON_MODE_MMCSD | 
; 1346 :         VALUE_MMC_CON_POWERUP_UP | VALUE_MMC_CON_BE_LITTLEENDIAN;

  030f8	e1dd32b0	 ldrh        r3, [sp, #0x20]
  030fc	e3833b02	 orr         r3, r3, #2, 22
  03100	e1a03803	 mov         r3, r3, lsl #16
  03104	e1a03823	 mov         r3, r3, lsr #16
  03108	e1cd32b0	 strh        r3, [sp, #0x20]

; 1347 : 
; 1348 :     ulLong = (MMCSD_CLOCK_INPUT / MMCSD_CLOCK_INIT);

  0310c	e3a030f0	 mov         r3, #0xF0
  03110	e58d3014	 str         r3, [sp, #0x14]

; 1349 :     if (MMCSD_CLOCK_INPUT % MMCSD_CLOCK_INIT) ulLong++;

  03114	ea000002	 b           |$LN32@SDHCInitia|
  03118	e59d3014	 ldr         r3, [sp, #0x14]
  0311c	e2833001	 add         r3, r3, #1
  03120	e58d3014	 str         r3, [sp, #0x14]
  03124		 |$LN32@SDHCInitia|

; 1350 :     wRegValue |= (ulLong & MASK_MMC_CON_CLKD);

  03124	e59d2014	 ldr         r2, [sp, #0x14]
  03128	e3a03c03	 mov         r3, #3, 24
  0312c	e38330ff	 orr         r3, r3, #0xFF
  03130	e0022003	 and         r2, r2, r3
  03134	e1dd32b0	 ldrh        r3, [sp, #0x20]
  03138	e1833002	 orr         r3, r3, r2
  0313c	e1a03803	 mov         r3, r3, lsl #16
  03140	e1a03823	 mov         r3, r3, lsr #16
  03144	e1cd32b0	 strh        r3, [sp, #0x20]

; 1351 : 
; 1352 :     OUTREG16(&m_vpSDIOReg->MMC_CON, wRegValue);

  03148	e59d3090	 ldr         r3, [sp, #0x90]
  0314c	e2833088	 add         r3, r3, #0x88
  03150	e5933000	 ldr         r3, [r3]
  03154	e283200c	 add         r2, r3, #0xC
  03158	e1dd32b0	 ldrh        r3, [sp, #0x20]
  0315c	e1c230b0	 strh        r3, [r2]

; 1353 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"CSDIOControllerBase::SDHCInitializeImpl: "
; 1354 :         L"MMC1_CON set value = %X\r\n", wRegValue
; 1355 :     ));

  03160	e59f3520	 ldr         r3, [pc, #0x520]
  03164	e5933440	 ldr         r3, [r3, #0x440]
  03168	e3130a02	 tst         r3, #2, 20
  0316c	0a000006	 beq         |$LN35@SDHCInitia|
  03170	e1dd32b0	 ldrh        r3, [sp, #0x20]
  03174	e1a01003	 mov         r1, r3
  03178	e59f0514	 ldr         r0, [pc, #0x514]
  0317c	eb000000	 bl          NKDbgPrintfW
  03180	e3a03001	 mov         r3, #1
  03184	e58d3040	 str         r3, [sp, #0x40]
  03188	ea000001	 b           |$LN36@SDHCInitia|
  0318c		 |$LN35@SDHCInitia|
  0318c	e3a03000	 mov         r3, #0
  03190	e58d3040	 str         r3, [sp, #0x40]
  03194		 |$LN36@SDHCInitia|

; 1356 : 
; 1357 :     OUTREG16(&m_vpSDIOReg->MMC_IE, 0);

  03194	e59d3090	 ldr         r3, [sp, #0x90]
  03198	e2833088	 add         r3, r3, #0x88
  0319c	e5933000	 ldr         r3, [r3]
  031a0	e2832014	 add         r2, r3, #0x14
  031a4	e3a03000	 mov         r3, #0
  031a8	e1c230b0	 strh        r3, [r2]

; 1358 : 
; 1359 :     wRegValue = (SDMMC_DEFAULT_ALMOST_EMPTY - 1) | ((SDMMC_DEFAULT_ALMOST_FULL - 1) << 8);

  031ac	e3a03c1f	 mov         r3, #0x1F, 24
  031b0	e383301f	 orr         r3, r3, #0x1F
  031b4	e1cd32b0	 strh        r3, [sp, #0x20]

; 1360 :     OUTREG16(&m_vpSDIOReg->MMC_BUF, wRegValue);

  031b8	e59d3090	 ldr         r3, [sp, #0x90]
  031bc	e2833088	 add         r3, r3, #0x88
  031c0	e5933000	 ldr         r3, [r3]
  031c4	e283202c	 add         r2, r3, #0x2C
  031c8	e1dd32b0	 ldrh        r3, [sp, #0x20]
  031cc	e1c230b0	 strh        r3, [r2]

; 1361 : 
; 1362 :     Write_MMC_SDIO(0);

  031d0	e3a01000	 mov         r1, #0
  031d4	e59d0090	 ldr         r0, [sp, #0x90]
  031d8	eb000000	 bl          |?Write_MMC_SDIO@CSDIOControllerBase@@QAAXG@Z|

; 1363 : 
; 1364 : 
; 1365 :     // --- Set the timeouts ----
; 1366 :     // Set command timeout of 64 clocks, the max according to OMAP1610 and SD specs
; 1367 :     OUTREG16(&m_vpSDIOReg->MMC_CTO, MMC_CTO_CONTROL_MAX);

  031dc	e59d3090	 ldr         r3, [sp, #0x90]
  031e0	e2833088	 add         r3, r3, #0x88
  031e4	e5933000	 ldr         r3, [r3]
  031e8	e2832018	 add         r2, r3, #0x18
  031ec	e3a030fd	 mov         r3, #0xFD
  031f0	e1c230b0	 strh        r3, [r2]

; 1368 :     OUTREG16(&m_vpSDIOReg->MMC_DTO, MMC_DTO_CONTROL_MAX);

  031f4	e59d3090	 ldr         r3, [sp, #0x90]
  031f8	e2833088	 add         r3, r3, #0x88
  031fc	e5933000	 ldr         r3, [r3]
  03200	e283201c	 add         r2, r3, #0x1C
  03204	e3a03cff	 mov         r3, #0xFF, 24
  03208	e38330fd	 orr         r3, r3, #0xFD
  0320c	e1c230b0	 strh        r3, [r2]

; 1369 : 
; 1370 :     // deactivate the clock
; 1371 :     ClockOff();

  03210	e59d0090	 ldr         r0, [sp, #0x90]
  03214	eb000000	 bl          |?ClockOff@CSDIOControllerBase@@QAAXXZ|

; 1372 : 
; 1373 :     // convert the SDIO hardware IRQ into a logical SYSINTR value
; 1374 :     DWORD rgdwSDIOIrq[] = { IRQ_MMC };

  03218	e3a03053	 mov         r3, #0x53
  0321c	e58d3008	 str         r3, [sp, #8]

; 1375 :     pdwSDIOIrq = rgdwSDIOIrq;

  03220	e28d3008	 add         r3, sp, #8
  03224	e58d300c	 str         r3, [sp, #0xC]

; 1376 :     dwSDIOIrqLen = sizeof(rgdwSDIOIrq);

  03228	e3a03004	 mov         r3, #4
  0322c	e58d3018	 str         r3, [sp, #0x18]

; 1377 : 
; 1378 :     if (!KernelIoControl(IOCTL_HAL_REQUEST_SYSINTR, pdwSDIOIrq, dwSDIOIrqLen, &m_dwControllerSysIntr, sizeof(DWORD), NULL))

  03230	e3a03000	 mov         r3, #0
  03234	e58d3004	 str         r3, [sp, #4]
  03238	e3a03004	 mov         r3, #4
  0323c	e58d3000	 str         r3, [sp]
  03240	e59d3090	 ldr         r3, [sp, #0x90]
  03244	e283306c	 add         r3, r3, #0x6C
  03248	e59d2018	 ldr         r2, [sp, #0x18]
  0324c	e59d100c	 ldr         r1, [sp, #0xC]
  03250	e59f0438	 ldr         r0, [pc, #0x438]
  03254	eb000000	 bl          KernelIoControl
  03258	e58d0044	 str         r0, [sp, #0x44]
  0325c	e59d3044	 ldr         r3, [sp, #0x44]
  03260	e3530000	 cmp         r3, #0
  03264	1a000012	 bne         |$LN31@SDHCInitia|

; 1379 :     {
; 1380 :         // invalid SDIO SYSINTR value!
; 1381 :         DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::SDHCInitializeImpl: "
; 1382 :             L"Error obtaining SDIO SYSINTR value!\r\n"
; 1383 :         ));

  03268	e59f3418	 ldr         r3, [pc, #0x418]
  0326c	e5933440	 ldr         r3, [r3, #0x440]
  03270	e3130902	 tst         r3, #2, 18
  03274	0a000004	 beq         |$LN37@SDHCInitia|
  03278	e59f040c	 ldr         r0, [pc, #0x40C]
  0327c	eb000000	 bl          NKDbgPrintfW
  03280	e3a03001	 mov         r3, #1
  03284	e58d3048	 str         r3, [sp, #0x48]
  03288	ea000001	 b           |$LN38@SDHCInitia|
  0328c		 |$LN37@SDHCInitia|
  0328c	e3a03000	 mov         r3, #0
  03290	e58d3048	 str         r3, [sp, #0x48]
  03294		 |$LN38@SDHCInitia|

; 1384 :         m_dwControllerSysIntr = SYSINTR_UNDEFINED;

  03294	e59d3090	 ldr         r3, [sp, #0x90]
  03298	e283206c	 add         r2, r3, #0x6C
  0329c	e3e03000	 mvn         r3, #0
  032a0	e5823000	 str         r3, [r2]

; 1385 :         status = SD_API_STATUS_UNSUCCESSFUL;

  032a4	e3a0310f	 mov         r3, #0xF, 2
  032a8	e58d301c	 str         r3, [sp, #0x1C]
  032ac	ea0000e7	 b           |$LN30@SDHCInitia|

; 1386 :         goto exitInit;

  032b0	ea0000e6	 b           |$exitInit$40713|
  032b4		 |$LN31@SDHCInitia|

; 1387 :     }
; 1388 : 
; 1389 :     // allocate the interrupt event for the SDIO/controller interrupt
; 1390 :     m_hControllerISTEvent = CreateEvent( NULL, FALSE, FALSE, NULL );

  032b4	e3a03000	 mov         r3, #0
  032b8	e3a02000	 mov         r2, #0
  032bc	e3a01000	 mov         r1, #0
  032c0	e3a00000	 mov         r0, #0
  032c4	eb000000	 bl          CreateEventW
  032c8	e58d004c	 str         r0, [sp, #0x4C]
  032cc	e59d3090	 ldr         r3, [sp, #0x90]
  032d0	e2832048	 add         r2, r3, #0x48
  032d4	e59d304c	 ldr         r3, [sp, #0x4C]
  032d8	e5823000	 str         r3, [r2]

; 1391 : 
; 1392 :     if (NULL == m_hControllerISTEvent) {

  032dc	e59d3090	 ldr         r3, [sp, #0x90]
  032e0	e2833048	 add         r3, r3, #0x48
  032e4	e5933000	 ldr         r3, [r3]
  032e8	e3530000	 cmp         r3, #0
  032ec	1a000003	 bne         |$LN29@SDHCInitia|

; 1393 :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;

  032f0	e3a0313b	 mov         r3, #0x3B, 2
  032f4	e58d301c	 str         r3, [sp, #0x1C]
  032f8	ea0000d4	 b           |$LN28@SDHCInitia|

; 1394 :         goto exitInit;

  032fc	ea0000d3	 b           |$exitInit$40713|
  03300		 |$LN29@SDHCInitia|

; 1395 :     }
; 1396 : 
; 1397 :     if ( !InterruptInitialize( m_dwControllerSysIntr, m_hControllerISTEvent, NULL, 0 ) ) {

  03300	e3a03000	 mov         r3, #0
  03304	e3a02000	 mov         r2, #0
  03308	e59d1090	 ldr         r1, [sp, #0x90]
  0330c	e2811048	 add         r1, r1, #0x48
  03310	e5911000	 ldr         r1, [r1]
  03314	e59d0090	 ldr         r0, [sp, #0x90]
  03318	e280006c	 add         r0, r0, #0x6C
  0331c	e5900000	 ldr         r0, [r0]
  03320	eb000000	 bl          InterruptInitialize
  03324	e58d0050	 str         r0, [sp, #0x50]
  03328	e59d3050	 ldr         r3, [sp, #0x50]
  0332c	e3530000	 cmp         r3, #0
  03330	1a000003	 bne         |$LN27@SDHCInitia|

; 1398 :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;

  03334	e3a0313b	 mov         r3, #0x3B, 2
  03338	e58d301c	 str         r3, [sp, #0x1C]
  0333c	ea0000c3	 b           |$LN26@SDHCInitia|

; 1399 :         goto exitInit;

  03340	ea0000c2	 b           |$exitInit$40713|
  03344		 |$LN27@SDHCInitia|

; 1400 :     }
; 1401 : 
; 1402 :     // allocate the interrupt event for card detection
; 1403 :     m_hCardDetectEvent = CreateEvent(NULL, FALSE, FALSE,NULL);

  03344	e3a03000	 mov         r3, #0
  03348	e3a02000	 mov         r2, #0
  0334c	e3a01000	 mov         r1, #0
  03350	e3a00000	 mov         r0, #0
  03354	eb000000	 bl          CreateEventW
  03358	e58d0054	 str         r0, [sp, #0x54]
  0335c	e59d3090	 ldr         r3, [sp, #0x90]
  03360	e2832050	 add         r2, r3, #0x50
  03364	e59d3054	 ldr         r3, [sp, #0x54]
  03368	e5823000	 str         r3, [r2]

; 1404 : 
; 1405 :     if (NULL == m_hCardDetectEvent) {

  0336c	e59d3090	 ldr         r3, [sp, #0x90]
  03370	e2833050	 add         r3, r3, #0x50
  03374	e5933000	 ldr         r3, [r3]
  03378	e3530000	 cmp         r3, #0
  0337c	1a000003	 bne         |$LN25@SDHCInitia|

; 1406 :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;

  03380	e3a0313b	 mov         r3, #0x3B, 2
  03384	e58d301c	 str         r3, [sp, #0x1C]
  03388	ea0000b0	 b           |$LN24@SDHCInitia|

; 1407 :         goto exitInit;

  0338c	ea0000af	 b           |$exitInit$40713|
  03390		 |$LN25@SDHCInitia|

; 1408 :     }
; 1409 : 
; 1410 :     // Open parent bus - triton
; 1411 :     m_hParentBus = TWLOpen();

  03390	eb000000	 bl          TWLOpen
  03394	e58d0058	 str         r0, [sp, #0x58]
  03398	e59d3090	 ldr         r3, [sp, #0x90]
  0339c	e2832008	 add         r2, r3, #8
  033a0	e59d3058	 ldr         r3, [sp, #0x58]
  033a4	e5823000	 str         r3, [r2]

; 1412 :     if ( m_hParentBus == NULL ) {

  033a8	e59d3090	 ldr         r3, [sp, #0x90]
  033ac	e2833008	 add         r3, r3, #8
  033b0	e5933000	 ldr         r3, [r3]
  033b4	e3530000	 cmp         r3, #0
  033b8	1a00000c	 bne         |$LN23@SDHCInitia|

; 1413 :         DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::Init: "
; 1414 :             L"Failed to obtain parent bus handle\r\n"
; 1415 :         ));

  033bc	e59f32c4	 ldr         r3, [pc, #0x2C4]
  033c0	e5933440	 ldr         r3, [r3, #0x440]
  033c4	e3130902	 tst         r3, #2, 18
  033c8	0a000004	 beq         |$LN39@SDHCInitia|
  033cc	e59f02b0	 ldr         r0, [pc, #0x2B0]
  033d0	eb000000	 bl          NKDbgPrintfW
  033d4	e3a03001	 mov         r3, #1
  033d8	e58d305c	 str         r3, [sp, #0x5C]
  033dc	ea000001	 b           |$LN40@SDHCInitia|
  033e0		 |$LN39@SDHCInitia|
  033e0	e3a03000	 mov         r3, #0
  033e4	e58d305c	 str         r3, [sp, #0x5C]
  033e8		 |$LN40@SDHCInitia|

; 1416 :         goto exitInit;

  033e8	ea000098	 b           |$LN22@SDHCInitia|
  033ec	ea000097	 b           |$exitInit$40713|
  033f0		 |$LN23@SDHCInitia|

; 1417 :     }
; 1418 :  
; 1419 :     // Associate event with TWL TWL_INTR_CD1 interrupt
; 1420 :     if (!TWLSetIntrEvent(m_hParentBus, TWL_INTR_CD1, m_hCardDetectEvent)) {

  033f0	e59d3090	 ldr         r3, [sp, #0x90]
  033f4	e2833050	 add         r3, r3, #0x50
  033f8	e5932000	 ldr         r2, [r3]
  033fc	e3a01000	 mov         r1, #0
  03400	e59d3090	 ldr         r3, [sp, #0x90]
  03404	e2833008	 add         r3, r3, #8
  03408	e5930000	 ldr         r0, [r3]
  0340c	eb000000	 bl          TWLSetIntrEvent
  03410	e58d0060	 str         r0, [sp, #0x60]
  03414	e59d3060	 ldr         r3, [sp, #0x60]
  03418	e3530000	 cmp         r3, #0
  0341c	1a000001	 bne         |$LN21@SDHCInitia|
  03420	ea00008a	 b           |$LN20@SDHCInitia|

; 1421 :         goto exitInit;

  03424	ea000089	 b           |$exitInit$40713|
  03428		 |$LN21@SDHCInitia|

; 1422 :     }
; 1423 : 
; 1424 :     // Associate event with TWL TWL_INTR_DL1 interrupt
; 1425 :     if (!TWLSetIntrEvent(m_hParentBus, TWL_INTR_DL1, m_hCardDetectEvent)) {

  03428	e59d3090	 ldr         r3, [sp, #0x90]
  0342c	e2833050	 add         r3, r3, #0x50
  03430	e5932000	 ldr         r2, [r3]
  03434	e3a01002	 mov         r1, #2
  03438	e59d3090	 ldr         r3, [sp, #0x90]
  0343c	e2833008	 add         r3, r3, #8
  03440	e5930000	 ldr         r0, [r3]
  03444	eb000000	 bl          TWLSetIntrEvent
  03448	e58d0064	 str         r0, [sp, #0x64]
  0344c	e59d3064	 ldr         r3, [sp, #0x64]
  03450	e3530000	 cmp         r3, #0
  03454	1a000001	 bne         |$LN19@SDHCInitia|
  03458	ea00007c	 b           |$LN18@SDHCInitia|

; 1426 :         goto exitInit;

  0345c	ea00007b	 b           |$exitInit$40713|
  03460		 |$LN19@SDHCInitia|

; 1427 :     }
; 1428 : 
; 1429 :     // Associate event with TWL TWL_INTR_CD2 interrupt
; 1430 :     if (!TWLSetIntrEvent(m_hParentBus, TWL_INTR_CD2, m_hCardDetectEvent)) {

  03460	e59d3090	 ldr         r3, [sp, #0x90]
  03464	e2833050	 add         r3, r3, #0x50
  03468	e5932000	 ldr         r2, [r3]
  0346c	e3a01001	 mov         r1, #1
  03470	e59d3090	 ldr         r3, [sp, #0x90]
  03474	e2833008	 add         r3, r3, #8
  03478	e5930000	 ldr         r0, [r3]
  0347c	eb000000	 bl          TWLSetIntrEvent
  03480	e58d0068	 str         r0, [sp, #0x68]
  03484	e59d3068	 ldr         r3, [sp, #0x68]
  03488	e3530000	 cmp         r3, #0
  0348c	1a000001	 bne         |$LN17@SDHCInitia|
  03490	ea00006e	 b           |$LN16@SDHCInitia|

; 1431 :         goto exitInit;

  03494	ea00006d	 b           |$exitInit$40713|
  03498		 |$LN17@SDHCInitia|

; 1432 :     }
; 1433 : 
; 1434 :     // Associate event with TWL TWL_INTR_DL2 interrupt
; 1435 :     if (!TWLSetIntrEvent(m_hParentBus, TWL_INTR_DL2, m_hCardDetectEvent)) {

  03498	e59d3090	 ldr         r3, [sp, #0x90]
  0349c	e2833050	 add         r3, r3, #0x50
  034a0	e5932000	 ldr         r2, [r3]
  034a4	e3a01003	 mov         r1, #3
  034a8	e59d3090	 ldr         r3, [sp, #0x90]
  034ac	e2833008	 add         r3, r3, #8
  034b0	e5930000	 ldr         r0, [r3]
  034b4	eb000000	 bl          TWLSetIntrEvent
  034b8	e58d006c	 str         r0, [sp, #0x6C]
  034bc	e59d306c	 ldr         r3, [sp, #0x6C]
  034c0	e3530000	 cmp         r3, #0
  034c4	1a000001	 bne         |$LN15@SDHCInitia|
  034c8	ea000060	 b           |$LN14@SDHCInitia|

; 1436 :         goto exitInit;

  034cc	ea00005f	 b           |$exitInit$40713|
  034d0		 |$LN15@SDHCInitia|

; 1437 :     }
; 1438 : 
; 1439 :     // Enable TWL_INTR_CD1 event
; 1440 :     if (!TWLIntrEnable(m_hParentBus, TWL_INTR_CD1)) {

  034d0	e3a01000	 mov         r1, #0
  034d4	e59d3090	 ldr         r3, [sp, #0x90]
  034d8	e2833008	 add         r3, r3, #8
  034dc	e5930000	 ldr         r0, [r3]
  034e0	eb000000	 bl          TWLIntrEnable
  034e4	e58d0070	 str         r0, [sp, #0x70]
  034e8	e59d3070	 ldr         r3, [sp, #0x70]
  034ec	e3530000	 cmp         r3, #0
  034f0	1a000001	 bne         |$LN13@SDHCInitia|
  034f4	ea000055	 b           |$LN12@SDHCInitia|

; 1441 :         goto exitInit;

  034f8	ea000054	 b           |$exitInit$40713|
  034fc		 |$LN13@SDHCInitia|

; 1442 :     }
; 1443 : 
; 1444 :     // Enable TWL_INTR_DL1 event
; 1445 :     if (!TWLIntrEnable(m_hParentBus, TWL_INTR_DL1)) {

  034fc	e3a01002	 mov         r1, #2
  03500	e59d3090	 ldr         r3, [sp, #0x90]
  03504	e2833008	 add         r3, r3, #8
  03508	e5930000	 ldr         r0, [r3]
  0350c	eb000000	 bl          TWLIntrEnable
  03510	e58d0074	 str         r0, [sp, #0x74]
  03514	e59d3074	 ldr         r3, [sp, #0x74]
  03518	e3530000	 cmp         r3, #0
  0351c	1a000001	 bne         |$LN11@SDHCInitia|
  03520	ea00004a	 b           |$LN10@SDHCInitia|

; 1446 :         goto exitInit;

  03524	ea000049	 b           |$exitInit$40713|
  03528		 |$LN11@SDHCInitia|

; 1447 :     }
; 1448 : 
; 1449 :     // Enable TWL_INTR_CD2 event
; 1450 :     if (!TWLIntrEnable(m_hParentBus, TWL_INTR_CD2)) {

  03528	e3a01001	 mov         r1, #1
  0352c	e59d3090	 ldr         r3, [sp, #0x90]
  03530	e2833008	 add         r3, r3, #8
  03534	e5930000	 ldr         r0, [r3]
  03538	eb000000	 bl          TWLIntrEnable
  0353c	e58d0078	 str         r0, [sp, #0x78]
  03540	e59d3078	 ldr         r3, [sp, #0x78]
  03544	e3530000	 cmp         r3, #0
  03548	1a000001	 bne         |$LN9@SDHCInitia|
  0354c	ea00003f	 b           |$LN8@SDHCInitia|

; 1451 :         goto exitInit;

  03550	ea00003e	 b           |$exitInit$40713|
  03554		 |$LN9@SDHCInitia|

; 1452 :     }
; 1453 : 
; 1454 :     // Enable TWL_INTR_DL2 event
; 1455 :     if (!TWLIntrEnable(m_hParentBus, TWL_INTR_DL2)) {

  03554	e3a01003	 mov         r1, #3
  03558	e59d3090	 ldr         r3, [sp, #0x90]
  0355c	e2833008	 add         r3, r3, #8
  03560	e5930000	 ldr         r0, [r3]
  03564	eb000000	 bl          TWLIntrEnable
  03568	e58d007c	 str         r0, [sp, #0x7C]
  0356c	e59d307c	 ldr         r3, [sp, #0x7C]
  03570	e3530000	 cmp         r3, #0
  03574	1a000001	 bne         |$LN7@SDHCInitia|
  03578	ea000034	 b           |$LN6@SDHCInitia|

; 1456 :         goto exitInit;

  0357c	ea000033	 b           |$exitInit$40713|
  03580		 |$LN7@SDHCInitia|

; 1457 :     }
; 1458 : 
; 1459 :     // create the Controller IST thread
; 1460 :     m_htControllerIST = CreateThread(NULL,
; 1461 :         0,
; 1462 :         CSDIOControllerBase::SDHCControllerIstThread,
; 1463 :         this,
; 1464 :         0,
; 1465 :         &threadID);

  03580	e28d3010	 add         r3, sp, #0x10
  03584	e58d3004	 str         r3, [sp, #4]
  03588	e3a03000	 mov         r3, #0
  0358c	e58d3000	 str         r3, [sp]
  03590	e59d3090	 ldr         r3, [sp, #0x90]
  03594	e59f20e4	 ldr         r2, [pc, #0xE4]
  03598	e3a01000	 mov         r1, #0
  0359c	e3a00000	 mov         r0, #0
  035a0	eb000000	 bl          CreateThread
  035a4	e58d0080	 str         r0, [sp, #0x80]
  035a8	e59d3090	 ldr         r3, [sp, #0x90]
  035ac	e283204c	 add         r2, r3, #0x4C
  035b0	e59d3080	 ldr         r3, [sp, #0x80]
  035b4	e5823000	 str         r3, [r2]

; 1466 : 
; 1467 :     if (NULL == m_htControllerIST) {

  035b8	e59d3090	 ldr         r3, [sp, #0x90]
  035bc	e283304c	 add         r3, r3, #0x4C
  035c0	e5933000	 ldr         r3, [r3]
  035c4	e3530000	 cmp         r3, #0
  035c8	1a000003	 bne         |$LN5@SDHCInitia|

; 1468 :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;

  035cc	e3a0313b	 mov         r3, #0x3B, 2
  035d0	e58d301c	 str         r3, [sp, #0x1C]
  035d4	ea00001d	 b           |$LN4@SDHCInitia|

; 1469 :         goto exitInit;

  035d8	ea00001c	 b           |$exitInit$40713|
  035dc		 |$LN5@SDHCInitia|

; 1470 :     }
; 1471 : 
; 1472 :     // create the card detect IST thread
; 1473 :     m_htCardDetectIST = CreateThread(NULL,
; 1474 :         0,
; 1475 :         CSDIOControllerBase::SDHCCardDetectIstThread,
; 1476 :         this,
; 1477 :         0,
; 1478 :         &threadID);

  035dc	e28d3010	 add         r3, sp, #0x10
  035e0	e58d3004	 str         r3, [sp, #4]
  035e4	e3a03000	 mov         r3, #0
  035e8	e58d3000	 str         r3, [sp]
  035ec	e59d3090	 ldr         r3, [sp, #0x90]
  035f0	e59f2084	 ldr         r2, [pc, #0x84]
  035f4	e3a01000	 mov         r1, #0
  035f8	e3a00000	 mov         r0, #0
  035fc	eb000000	 bl          CreateThread
  03600	e58d0084	 str         r0, [sp, #0x84]
  03604	e59d3090	 ldr         r3, [sp, #0x90]
  03608	e2832054	 add         r2, r3, #0x54
  0360c	e59d3084	 ldr         r3, [sp, #0x84]
  03610	e5823000	 str         r3, [r2]

; 1479 : 
; 1480 :     if (NULL == m_htCardDetectIST) {

  03614	e59d3090	 ldr         r3, [sp, #0x90]
  03618	e2833054	 add         r3, r3, #0x54
  0361c	e5933000	 ldr         r3, [r3]
  03620	e3530000	 cmp         r3, #0
  03624	1a000003	 bne         |$LN3@SDHCInitia|

; 1481 :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;

  03628	e3a0313b	 mov         r3, #0x3B, 2
  0362c	e58d301c	 str         r3, [sp, #0x1C]
  03630	ea000006	 b           |$LN2@SDHCInitia|

; 1482 :         goto exitInit;

  03634	ea000005	 b           |$exitInit$40713|
  03638		 |$LN3@SDHCInitia|

; 1483 :     }
; 1484 : 
; 1485 :     m_fInitialized = TRUE;

  03638	e59d3090	 ldr         r3, [sp, #0x90]
  0363c	e2832070	 add         r2, r3, #0x70
  03640	e3a03001	 mov         r3, #1
  03644	e5823000	 str         r3, [r2]

; 1486 : 
; 1487 :     // on start we need the IST to check the slot for a card
; 1488 :     // FIXME Menelaus should detect card SetEvent(m_hCardDetectEvent);
; 1489 : 
; 1490 :     status = SD_API_STATUS_SUCCESS;

  03648	e3a03000	 mov         r3, #0
  0364c	e58d301c	 str         r3, [sp, #0x1C]
  03650		 |$LN2@SDHCInitia|
  03650		 |$LN4@SDHCInitia|
  03650		 |$LN6@SDHCInitia|
  03650		 |$LN8@SDHCInitia|
  03650		 |$LN10@SDHCInitia|
  03650		 |$LN12@SDHCInitia|
  03650		 |$LN14@SDHCInitia|
  03650		 |$LN16@SDHCInitia|
  03650		 |$LN18@SDHCInitia|
  03650		 |$LN20@SDHCInitia|
  03650		 |$LN22@SDHCInitia|
  03650		 |$LN24@SDHCInitia|
  03650		 |$LN26@SDHCInitia|
  03650		 |$LN28@SDHCInitia|
  03650		 |$LN30@SDHCInitia|
  03650		 |$exitInit$40713|

; 1491 : 
; 1492 : exitInit:
; 1493 : 
; 1494 :     if (!SD_API_SUCCESS(status)) {

  03650	e59d301c	 ldr         r3, [sp, #0x1C]
  03654	e3530000	 cmp         r3, #0
  03658	aa000001	 bge         |$LN1@SDHCInitia|

; 1495 :         // just call the deinit handler directly to cleanup
; 1496 :         SDHCDeinitializeImpl();

  0365c	e59d0090	 ldr         r0, [sp, #0x90]
  03660	eb000000	 bl          |?SDHCDeinitializeImpl@CSDIOControllerBase@@QAAJXZ|
  03664		 |$LN1@SDHCInitia|

; 1497 :     }
; 1498 : 
; 1499 :     return status;

  03664	e59d301c	 ldr         r3, [sp, #0x1C]
  03668	e58d303c	 str         r3, [sp, #0x3C]

; 1500 : }

  0366c	e59d003c	 ldr         r0, [sp, #0x3C]
  03670	e28dd088	 add         sp, sp, #0x88
  03674	e89d6000	 ldmia       sp, {sp, lr}
  03678	e12fff1e	 bx          lr
  0367c		 |$LN44@SDHCInitia|
  0367c		 |$LN45@SDHCInitia|
  0367c	00000000	 DCD         |?SDHCCardDetectIstThread@CSDIOControllerBase@@SAKPAX@Z|
  03680		 |$LN46@SDHCInitia|
  03680	00000000	 DCD         |?SDHCControllerIstThread@CSDIOControllerBase@@SAKPAX@Z|
  03684		 |$LN47@SDHCInitia|
  03684	00000000	 DCD         |??_C@_1IA@MJBBCBEJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe@|
  03688		 |$LN48@SDHCInitia|
  03688	00000000	 DCD         |dpCurSettings|
  0368c		 |$LN49@SDHCInitia|
  0368c	00000000	 DCD         |??_C@_1JO@PAEDMDND@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl@|
  03690		 |$LN50@SDHCInitia|
  03690	01010098	 DCD         0x1010098
  03694		 |$LN51@SDHCInitia|
  03694	00000000	 DCD         |??_C@_1IG@PCGMDEAC@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl@|
  03698		 |$M42904|

			 ENDP  ; |?SDHCInitializeImpl@CSDIOControllerBase@@QAAJXZ|, CSDIOControllerBase::SDHCInitializeImpl

	EXPORT	|??_C@_1M@MOBNNOLN@?$AAT?$AAW?$AAL?$AA1?$AA?3?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|DeviceIoControl|
	IMPORT	|LocalAlloc|
	IMPORT	|CreateFileW|
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\inc\twl.h

  00000			 AREA	 |.pdata|, PDATA
|$T42927| DCD	|$LN11@TWLOpen|
	DCD	0x40004a02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@MOBNNOLN@?$AAT?$AAW?$AAL?$AA1?$AA?3?$AA?$AA@| DCB "T", 0x0, "W", 0x0
	DCB	"L", 0x0, "1", 0x0, ":", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |TWLOpen| PROC

; 123  : {

  00000		 |$LN11@TWLOpen|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd044	 sub         sp, sp, #0x44
  00008		 |$M42924|

; 124  :     HANDLE hDevice;
; 125  :     DEVICE_CONTEXT_TWL *pContext = NULL;

  00008	e3a03000	 mov         r3, #0
  0000c	e58d3014	 str         r3, [sp, #0x14]

; 126  : 
; 127  :     hDevice = CreateFile(TWL_DEVICE_NAME, 0, 0, NULL, 0, 0, NULL);

  00010	e3a03000	 mov         r3, #0
  00014	e58d3008	 str         r3, [sp, #8]
  00018	e3a03000	 mov         r3, #0
  0001c	e58d3004	 str         r3, [sp, #4]
  00020	e3a03000	 mov         r3, #0
  00024	e58d3000	 str         r3, [sp]
  00028	e3a03000	 mov         r3, #0
  0002c	e3a02000	 mov         r2, #0
  00030	e3a01000	 mov         r1, #0
  00034	e59f00e8	 ldr         r0, [pc, #0xE8]
  00038	eb000000	 bl          CreateFileW
  0003c	e58d0038	 str         r0, [sp, #0x38]
  00040	e59d3038	 ldr         r3, [sp, #0x38]
  00044	e58d3010	 str         r3, [sp, #0x10]

; 128  :     if (hDevice == INVALID_HANDLE_VALUE) goto cleanUp;

  00048	e59d3010	 ldr         r3, [sp, #0x10]
  0004c	e3730001	 cmn         r3, #1
  00050	1a000001	 bne         |$LN6@TWLOpen|
  00054	ea00002b	 b           |$LN5@TWLOpen|
  00058	ea00002a	 b           |$cleanUp$40039|
  0005c		 |$LN6@TWLOpen|

; 129  : 
; 130  :     // Allocate memory for our handler...
; 131  :     pContext = (DEVICE_CONTEXT_TWL*)LocalAlloc(
; 132  :         LPTR, sizeof(DEVICE_CONTEXT_TWL)
; 133  :         );

  0005c	e3a01020	 mov         r1, #0x20
  00060	e3a00040	 mov         r0, #0x40
  00064	eb000000	 bl          LocalAlloc
  00068	e58d003c	 str         r0, [sp, #0x3C]
  0006c	e59d303c	 ldr         r3, [sp, #0x3C]
  00070	e58d3014	 str         r3, [sp, #0x14]

; 134  :     if (pContext == NULL)

  00074	e59d3014	 ldr         r3, [sp, #0x14]
  00078	e3530000	 cmp         r3, #0
  0007c	1a000003	 bne         |$LN4@TWLOpen|

; 135  :         {
; 136  :         CloseHandle(hDevice);

  00080	e59d0010	 ldr         r0, [sp, #0x10]
  00084	eb000000	 bl          CloseHandle
  00088	ea00001e	 b           |$LN3@TWLOpen|

; 137  :         goto cleanUp;

  0008c	ea00001d	 b           |$cleanUp$40039|
  00090		 |$LN4@TWLOpen|

; 138  :         }
; 139  : 
; 140  :     // Get function pointers, fail when IOCTL isn't supported...
; 141  :     if (!DeviceIoControl(
; 142  :             hDevice, IOCTL_DDK_GET_DRIVER_IFC, (VOID*)&DEVICE_IFC_TWL_GUID,
; 143  :             sizeof(DEVICE_IFC_TWL_GUID), &pContext->ifc, sizeof(DEVICE_IFC_TWL),
; 144  :             NULL, NULL))

  00090	e3a03000	 mov         r3, #0
  00094	e58d300c	 str         r3, [sp, #0xC]
  00098	e3a03000	 mov         r3, #0
  0009c	e58d3008	 str         r3, [sp, #8]
  000a0	e3a0301c	 mov         r3, #0x1C
  000a4	e58d3004	 str         r3, [sp, #4]
  000a8	e59d3014	 ldr         r3, [sp, #0x14]
  000ac	e58d3000	 str         r3, [sp]
  000b0	e3a03010	 mov         r3, #0x10
  000b4	e59f2064	 ldr         r2, [pc, #0x64]
  000b8	e3a01822	 mov         r1, #0x22, 16
  000bc	e3811b01	 orr         r1, r1, #1, 22
  000c0	e59d0010	 ldr         r0, [sp, #0x10]
  000c4	eb000000	 bl          DeviceIoControl
  000c8	e58d0040	 str         r0, [sp, #0x40]
  000cc	e59d3040	 ldr         r3, [sp, #0x40]
  000d0	e3530000	 cmp         r3, #0
  000d4	1a000007	 bne         |$LN2@TWLOpen|

; 145  :         {
; 146  :         CloseHandle(hDevice);

  000d8	e59d0010	 ldr         r0, [sp, #0x10]
  000dc	eb000000	 bl          CloseHandle

; 147  :         LocalFree(pContext);

  000e0	e59d0014	 ldr         r0, [sp, #0x14]
  000e4	eb000000	 bl          LocalFree

; 148  :         pContext = NULL;

  000e8	e3a03000	 mov         r3, #0
  000ec	e58d3014	 str         r3, [sp, #0x14]
  000f0	ea000004	 b           |$LN1@TWLOpen|

; 149  :         goto cleanUp;

  000f4	ea000003	 b           |$cleanUp$40039|
  000f8		 |$LN2@TWLOpen|

; 150  :         }
; 151  : 
; 152  :     // Save device handle
; 153  :     pContext->hDevice = hDevice;

  000f8	e59d3014	 ldr         r3, [sp, #0x14]
  000fc	e283201c	 add         r2, r3, #0x1C
  00100	e59d3010	 ldr         r3, [sp, #0x10]
  00104	e5823000	 str         r3, [r2]
  00108		 |$LN1@TWLOpen|
  00108		 |$LN3@TWLOpen|
  00108		 |$LN5@TWLOpen|
  00108		 |$cleanUp$40039|

; 154  : 
; 155  : cleanUp:
; 156  :     return pContext;

  00108	e59d3014	 ldr         r3, [sp, #0x14]
  0010c	e58d3034	 str         r3, [sp, #0x34]

; 157  : }

  00110	e59d0034	 ldr         r0, [sp, #0x34]
  00114	e28dd044	 add         sp, sp, #0x44
  00118	e49de004	 ldr         lr, [sp], #4
  0011c	e12fff1e	 bx          lr
  00120		 |$LN12@TWLOpen|
  00120		 |$LN13@TWLOpen|
  00120	00000000	 DCD         |DEVICE_IFC_TWL_GUID|
  00124		 |$LN14@TWLOpen|
  00124	00000000	 DCD         |??_C@_1M@MOBNNOLN@?$AAT?$AAW?$AAL?$AA1?$AA?3?$AA?$AA@|
  00128		 |$M42925|

			 ENDP  ; |TWLOpen|


  00000			 AREA	 |.pdata|, PDATA
|$T42938| DCD	|$LN5@TWLSetIntr|
	DCD	0x40001604
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |TWLSetIntrEvent| PROC

; 207  : {

  00000		 |$LN5@TWLSetIntr|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M42935|

; 208  :     DEVICE_CONTEXT_TWL *pContext = (DEVICE_CONTEXT_TWL*)hContext;

  00010	e59d3014	 ldr         r3, [sp, #0x14]
  00014	e58d3000	 str         r3, [sp]

; 209  :     return pContext->ifc.pfnSetIntrEvent(
; 210  :         pContext->ifc.context, intrId, hEvent
; 211  :         );

  00018	e59d201c	 ldr         r2, [sp, #0x1C]
  0001c	e59d1018	 ldr         r1, [sp, #0x18]
  00020	e59d3000	 ldr         r3, [sp]
  00024	e5930000	 ldr         r0, [r3]
  00028	e59d3000	 ldr         r3, [sp]
  0002c	e283300c	 add         r3, r3, #0xC
  00030	e5933000	 ldr         r3, [r3]
  00034	e1a0e00f	 mov         lr, pc
  00038	e12fff13	 bx          r3
  0003c	e58d0008	 str         r0, [sp, #8]
  00040	e59d3008	 ldr         r3, [sp, #8]
  00044	e58d3004	 str         r3, [sp, #4]

; 212  : }

  00048	e59d0004	 ldr         r0, [sp, #4]
  0004c	e28dd00c	 add         sp, sp, #0xC
  00050	e89d6000	 ldmia       sp, {sp, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$M42936|

			 ENDP  ; |TWLSetIntrEvent|


  00000			 AREA	 |.pdata|, PDATA
|$T42946| DCD	|$LN5@TWLIntrEna|
	DCD	0x40001504
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |TWLIntrEnable| PROC

; 220  : {

  00000		 |$LN5@TWLIntrEna|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M42943|

; 221  :     DEVICE_CONTEXT_TWL *pContext = (DEVICE_CONTEXT_TWL*)hContext;

  00010	e59d3014	 ldr         r3, [sp, #0x14]
  00014	e58d3000	 str         r3, [sp]

; 222  :     return pContext->ifc.pfnIntrEnable(pContext->ifc.context, intrId);

  00018	e59d1018	 ldr         r1, [sp, #0x18]
  0001c	e59d3000	 ldr         r3, [sp]
  00020	e5930000	 ldr         r0, [r3]
  00024	e59d3000	 ldr         r3, [sp]
  00028	e2833010	 add         r3, r3, #0x10
  0002c	e5933000	 ldr         r3, [r3]
  00030	e1a0e00f	 mov         lr, pc
  00034	e12fff13	 bx          r3
  00038	e58d0008	 str         r0, [sp, #8]
  0003c	e59d3008	 ldr         r3, [sp, #8]
  00040	e58d3004	 str         r3, [sp, #4]

; 223  : }

  00044	e59d0004	 ldr         r0, [sp, #4]
  00048	e28dd00c	 add         sp, sp, #0xC
  0004c	e89d6000	 ldmia       sp, {sp, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$M42944|

			 ENDP  ; |TWLIntrEnable|

	EXPORT	|?SDHCCancelIoHandlerImpl@CSDIOControllerBase@@QAAEEPAU_SD_BUS_REQUEST@@@Z| ; CSDIOControllerBase::SDHCCancelIoHandlerImpl

  000c8			 AREA	 |.pdata|, PDATA
|$T42956| DCD	|$LN7@SDHCCancel|
	DCD	0x40001a04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\sdhc\base\sdhc.cpp

  03698			 AREA	 |.text|, CODE, ARM

  03698		 |?SDHCCancelIoHandlerImpl@CSDIOControllerBase@@QAAEEPAU_SD_BUS_REQUEST@@@Z| PROC ; CSDIOControllerBase::SDHCCancelIoHandlerImpl

; 1515 : {

  03698		 |$LN7@SDHCCancel|
  03698	e1a0c00d	 mov         r12, sp
  0369c	e92d0007	 stmdb       sp!, {r0 - r2}
  036a0	e92d5000	 stmdb       sp!, {r12, lr}
  036a4	e24dd008	 sub         sp, sp, #8
  036a8		 |$M42953|

; 1516 :     // for now, we should never get here because all requests are non-cancelable
; 1517 :     // the hardware supports timeouts so it is impossible for the controller to get stuck
; 1518 :     DEBUGCHK(FALSE);

  036a8	ea000002	 b           |$LN3@SDHCCancel|
  036ac	e3a03001	 mov         r3, #1
  036b0	e58d3004	 str         r3, [sp, #4]
  036b4	ea000008	 b           |$LN4@SDHCCancel|
  036b8		 |$LN3@SDHCCancel|
  036b8	e3a03c05	 mov         r3, #5, 24
  036bc	e38330ee	 orr         r3, r3, #0xEE
  036c0	e59f2034	 ldr         r2, [pc, #0x34]
  036c4	e59f102c	 ldr         r1, [pc, #0x2C]
  036c8	e59f0024	 ldr         r0, [pc, #0x24]
  036cc	eb000000	 bl          NKDbgPrintfW
  036d0	e6000010	 __debugbreak_ce
  036d4	e3a03000	 mov         r3, #0
  036d8	e58d3004	 str         r3, [sp, #4]
  036dc		 |$LN4@SDHCCancel|

; 1519 : 
; 1520 :     return TRUE;

  036dc	e3a03001	 mov         r3, #1
  036e0	e5cd3000	 strb        r3, [sp]

; 1521 : }

  036e4	e5dd0000	 ldrb        r0, [sp]
  036e8	e28dd008	 add         sp, sp, #8
  036ec	e89d6000	 ldmia       sp, {sp, lr}
  036f0	e12fff1e	 bx          lr
  036f4		 |$LN8@SDHCCancel|
  036f4		 |$LN9@SDHCCancel|
  036f4	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  036f8		 |$LN10@SDHCCancel|
  036f8	00000000	 DCD         |dpCurSettings|
  036fc		 |$LN11@SDHCCancel|
  036fc	00000000	 DCD         |??_C@_1JA@LIPKICML@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  03700		 |$M42954|

			 ENDP  ; |?SDHCCancelIoHandlerImpl@CSDIOControllerBase@@QAAEEPAU_SD_BUS_REQUEST@@@Z|, CSDIOControllerBase::SDHCCancelIoHandlerImpl

	EXPORT	|??_C@_1JO@ELDKEBIK@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HI@PGKKCMJO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu@| [ DATA ] ; `string'
	EXPORT	|?SDHCBusRequestHandlerImpl@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z| ; CSDIOControllerBase::SDHCBusRequestHandlerImpl
	IMPORT	|InterruptMask|

  000d0			 AREA	 |.pdata|, PDATA
|$T42974| DCD	|$LN23@SDHCBusReq|
	DCD	0x4000ca04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JO@ELDKEBIK@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "B", 0x0, "u", 0x0, "s", 0x0, "R", 0x0, "e", 0x0, "q"
	DCB	0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, "H", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I"
	DCB	0x0, "m", 0x0, "p", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "E"
	DCB	0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "s"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, ":", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@PGKKCMJO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "B", 0x0, "u", 0x0, "s", 0x0, "R", 0x0, "e", 0x0, "q"
	DCB	0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, "H", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I"
	DCB	0x0, "m", 0x0, "p", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "M", 0x0, "D", 0x0, ":", 0x0, " ", 0x0, "[", 0x0, "%"
	DCB	0x0, "d", 0x0, "]", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  03700			 AREA	 |.text|, CODE, ARM

  03700		 |?SDHCBusRequestHandlerImpl@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z| PROC ; CSDIOControllerBase::SDHCBusRequestHandlerImpl

; 1535 : {

  03700		 |$LN23@SDHCBusReq|
  03700	e1a0c00d	 mov         r12, sp
  03704	e92d0003	 stmdb       sp!, {r0, r1}
  03708	e92d5000	 stmdb       sp!, {r12, lr}
  0370c	e24dd028	 sub         sp, sp, #0x28
  03710		 |$M42971|

; 1536 :     DEBUGCHK(pRequest);

  03710	e59d3034	 ldr         r3, [sp, #0x34]
  03714	e3530000	 cmp         r3, #0
  03718	0a000002	 beq         |$LN13@SDHCBusReq|
  0371c	e3a03001	 mov         r3, #1
  03720	e58d300c	 str         r3, [sp, #0xC]
  03724	ea000007	 b           |$LN14@SDHCBusReq|
  03728		 |$LN13@SDHCBusReq|
  03728	e3a03c06	 mov         r3, #6, 24
  0372c	e59f22ec	 ldr         r2, [pc, #0x2EC]
  03730	e59f12dc	 ldr         r1, [pc, #0x2DC]
  03734	e59f02dc	 ldr         r0, [pc, #0x2DC]
  03738	eb000000	 bl          NKDbgPrintfW
  0373c	e6000010	 __debugbreak_ce
  03740	e3a03000	 mov         r3, #0
  03744	e58d300c	 str         r3, [sp, #0xC]
  03748		 |$LN14@SDHCBusReq|

; 1537 : 
; 1538 :     SD_API_STATUS   status;
; 1539 :     BOOL            fWriteTransferMode = FALSE;

  03748	e3a03000	 mov         r3, #0
  0374c	e58d3004	 str         r3, [sp, #4]

; 1540 : 
; 1541 :     DEBUGMSG(SHC_SEND_ZONE, (L"CSDIOControllerBase::SDHCBusRequestHandlerImpl: "
; 1542 :         L"CMD: [%d]\r\n", pRequest->CommandCode
; 1543 :     ));

  03750	e59f32bc	 ldr         r3, [pc, #0x2BC]
  03754	e5933440	 ldr         r3, [r3, #0x440]
  03758	e3130002	 tst         r3, #2
  0375c	0a000008	 beq         |$LN15@SDHCBusReq|
  03760	e59d3034	 ldr         r3, [sp, #0x34]
  03764	e2833014	 add         r3, r3, #0x14
  03768	e5d33000	 ldrb        r3, [r3]
  0376c	e1a01003	 mov         r1, r3
  03770	e59f02ac	 ldr         r0, [pc, #0x2AC]
  03774	eb000000	 bl          NKDbgPrintfW
  03778	e3a03001	 mov         r3, #1
  0377c	e58d3010	 str         r3, [sp, #0x10]
  03780	ea000001	 b           |$LN16@SDHCBusReq|
  03784		 |$LN15@SDHCBusReq|
  03784	e3a03000	 mov         r3, #0
  03788	e58d3010	 str         r3, [sp, #0x10]
  0378c		 |$LN16@SDHCBusReq|

; 1544 : 
; 1545 :     // acquire the device lock to protect from device removal
; 1546 :     SDHCDAcquireHCLock(m_pHCContext);

  0378c	e59d3030	 ldr         r3, [sp, #0x30]
  03790	e2833004	 add         r3, r3, #4
  03794	e5933000	 ldr         r3, [r3]
  03798	e2830024	 add         r0, r3, #0x24
  0379c	eb000000	 bl          EnterCriticalSection

; 1547 : 
; 1548 :     if ( m_pCurrentRequest) {

  037a0	e59d3030	 ldr         r3, [sp, #0x30]
  037a4	e2833090	 add         r3, r3, #0x90
  037a8	e5933000	 ldr         r3, [r3]
  037ac	e3530000	 cmp         r3, #0
  037b0	0a00000c	 beq         |$LN10@SDHCBusReq|

; 1549 :         IndicateBusRequestComplete(pRequest, SD_API_STATUS_CANCELED);

  037b4	e3a0214f	 mov         r2, #0x4F, 2
  037b8	e59d1034	 ldr         r1, [sp, #0x34]
  037bc	e59d3030	 ldr         r3, [sp, #0x30]
  037c0	e5933000	 ldr         r3, [r3]
  037c4	e2833004	 add         r3, r3, #4
  037c8	e59d0030	 ldr         r0, [sp, #0x30]
  037cc	e5933000	 ldr         r3, [r3]
  037d0	e1a0e00f	 mov         lr, pc
  037d4	e12fff13	 bx          r3

; 1550 :         m_pCurrentRequest = NULL;

  037d8	e59d3030	 ldr         r3, [sp, #0x30]
  037dc	e2832090	 add         r2, r3, #0x90
  037e0	e3a03000	 mov         r3, #0
  037e4	e5823000	 str         r3, [r2]
  037e8		 |$LN10@SDHCBusReq|

; 1551 :     }
; 1552 : 
; 1553 :     m_fCurrentRequestFastPath = FALSE;

  037e8	e59d3030	 ldr         r3, [sp, #0x30]
  037ec	e2832094	 add         r2, r3, #0x94
  037f0	e3a03000	 mov         r3, #0
  037f4	e5823000	 str         r3, [r2]

; 1554 :     m_pCurrentRequest = pRequest ;

  037f8	e59d3030	 ldr         r3, [sp, #0x30]
  037fc	e2832090	 add         r2, r3, #0x90
  03800	e59d3034	 ldr         r3, [sp, #0x34]
  03804	e5823000	 str         r3, [r2]

; 1555 :     // if no data transfer involved, use FAST PATH
; 1556 :     if (pRequest->SystemFlags & SD_FAST_PATH_AVAILABLE && 
; 1557 :             !( SD_COMMAND != pRequest->TransferClass && 
; 1558 :                 pRequest->NumBlocks * pRequest->BlockSize >=  NUM_BYTE_FOR_POLLING_MODE)){   // We do fast path here.

  03808	e59d3034	 ldr         r3, [sp, #0x34]
  0380c	e283300c	 add         r3, r3, #0xC
  03810	e5933000	 ldr         r3, [r3]
  03814	e3130102	 tst         r3, #2, 2
  03818	0a000051	 beq         |$LN9@SDHCBusReq|
  0381c	e59d3034	 ldr         r3, [sp, #0x34]
  03820	e2833010	 add         r3, r3, #0x10
  03824	e5933000	 ldr         r3, [r3]
  03828	e3530002	 cmp         r3, #2
  0382c	0a000008	 beq         |$LN8@SDHCBusReq|
  03830	e59d3034	 ldr         r3, [sp, #0x34]
  03834	e283203c	 add         r2, r3, #0x3C
  03838	e59d3034	 ldr         r3, [sp, #0x34]
  0383c	e2833040	 add         r3, r3, #0x40
  03840	e5922000	 ldr         r2, [r2]
  03844	e5933000	 ldr         r3, [r3]
  03848	e0030392	 mul         r3, r2, r3
  0384c	e3530b02	 cmp         r3, #2, 22
  03850	2a000043	 bcs         |$LN9@SDHCBusReq|
  03854		 |$LN8@SDHCBusReq|

; 1559 :         m_fCurrentRequestFastPath = TRUE;

  03854	e59d3030	 ldr         r3, [sp, #0x30]
  03858	e2832094	 add         r2, r3, #0x94
  0385c	e3a03001	 mov         r3, #1
  03860	e5823000	 str         r3, [r2]

; 1560 :         InterruptMask(m_dwControllerSysIntr,TRUE);

  03864	e3a01001	 mov         r1, #1
  03868	e59d3030	 ldr         r3, [sp, #0x30]
  0386c	e283306c	 add         r3, r3, #0x6C
  03870	e5930000	 ldr         r0, [r3]
  03874	eb000000	 bl          InterruptMask

; 1561 :         status = SendCommand(pRequest);

  03878	e59d1034	 ldr         r1, [sp, #0x34]
  0387c	e59d0030	 ldr         r0, [sp, #0x30]
  03880	eb000000	 bl          |?SendCommand@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z|
  03884	e58d0014	 str         r0, [sp, #0x14]
  03888	e59d3014	 ldr         r3, [sp, #0x14]
  0388c	e58d3000	 str         r3, [sp]

; 1562 :         if ( status == SD_API_STATUS_PENDING ) { // Polling for completion.

  03890	e59d3000	 ldr         r3, [sp]
  03894	e3530001	 cmp         r3, #1
  03898	1a00001a	 bne         |$LN7@SDHCBusReq|
  0389c		 |$LN6@SDHCBusReq|

; 1563 :             while (m_pCurrentRequest) {

  0389c	e59d3030	 ldr         r3, [sp, #0x30]
  038a0	e2833090	 add         r3, r3, #0x90
  038a4	e5933000	 ldr         r3, [r3]
  038a8	e3530000	 cmp         r3, #0
  038ac	0a000011	 beq         |$LN5@SDHCBusReq|

; 1564 :                 if( Read_MMC_STAT() & INREG16(&m_vpSDIOReg->MMC_IE) & (MMC_IE_EOC|MMC_STAT_CERR|MMC_STAT_CCRC|MMC_STAT_CTO)) {

  038b0	e59d0030	 ldr         r0, [sp, #0x30]
  038b4	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|
  038b8	e1cd01b8	 strh        r0, [sp, #0x18]
  038bc	e1dd31b8	 ldrh        r3, [sp, #0x18]
  038c0	e1a02003	 mov         r2, r3
  038c4	e59d3030	 ldr         r3, [sp, #0x30]
  038c8	e2833088	 add         r3, r3, #0x88
  038cc	e5933000	 ldr         r3, [r3]
  038d0	e2833014	 add         r3, r3, #0x14
  038d4	e1d330b0	 ldrh        r3, [r3]
  038d8	e0022003	 and         r2, r2, r3
  038dc	e3a03c41	 mov         r3, #0x41, 24
  038e0	e3833081	 orr         r3, r3, #0x81
  038e4	e1120003	 tst         r2, r3
  038e8	0a000001	 beq         |$LN4@SDHCBusReq|

; 1565 :                     CommandCompleteHandler();

  038ec	e59d0030	 ldr         r0, [sp, #0x30]
  038f0	eb000000	 bl          |?CommandCompleteHandler@CSDIOControllerBase@@QAAHXZ|
  038f4		 |$LN4@SDHCBusReq|

; 1566 :                 }
; 1567 :             }               

  038f4	eaffffe8	 b           |$LN6@SDHCBusReq|
  038f8		 |$LN5@SDHCBusReq|

; 1568 :             status = FastPathStatus;

  038f8	e59d3030	 ldr         r3, [sp, #0x30]
  038fc	e2833098	 add         r3, r3, #0x98
  03900	e5933000	 ldr         r3, [r3]
  03904	e58d3000	 str         r3, [sp]
  03908		 |$LN7@SDHCBusReq|

; 1569 :         }
; 1570 : 
; 1571 :         InterruptMask(m_dwControllerSysIntr,FALSE);

  03908	e3a01000	 mov         r1, #0
  0390c	e59d3030	 ldr         r3, [sp, #0x30]
  03910	e283306c	 add         r3, r3, #0x6C
  03914	e5930000	 ldr         r0, [r3]
  03918	eb000000	 bl          InterruptMask

; 1572 :         ASSERT(m_fCurrentRequestFastPath);

  0391c	e59d3030	 ldr         r3, [sp, #0x30]
  03920	e2833094	 add         r3, r3, #0x94
  03924	e5933000	 ldr         r3, [r3]
  03928	e3530000	 cmp         r3, #0
  0392c	0a000002	 beq         |$LN17@SDHCBusReq|
  03930	e3a03001	 mov         r3, #1
  03934	e58d301c	 str         r3, [sp, #0x1C]
  03938	ea000008	 b           |$LN18@SDHCBusReq|
  0393c		 |$LN17@SDHCBusReq|
  0393c	e3a03c06	 mov         r3, #6, 24
  03940	e3833024	 orr         r3, r3, #0x24
  03944	e59f20d4	 ldr         r2, [pc, #0xD4]
  03948	e59f10cc	 ldr         r1, [pc, #0xCC]
  0394c	e59f00c4	 ldr         r0, [pc, #0xC4]
  03950	eb000000	 bl          NKDbgPrintfW
  03954	e6000010	 __debugbreak_ce
  03958	e3a03000	 mov         r3, #0
  0395c	e58d301c	 str         r3, [sp, #0x1C]
  03960		 |$LN18@SDHCBusReq|

; 1573 :     }
; 1574 :     else 

  03960	ea00001f	 b           |$LN3@SDHCBusReq|
  03964		 |$LN9@SDHCBusReq|

; 1575 :     {
; 1576 :         pRequest->SystemFlags &= ~SD_FAST_PATH_AVAILABLE ;

  03964	e59d3034	 ldr         r3, [sp, #0x34]
  03968	e283300c	 add         r3, r3, #0xC
  0396c	e5932000	 ldr         r2, [r3]
  03970	e3e03102	 mvn         r3, #2, 2
  03974	e0022003	 and         r2, r2, r3
  03978	e59d3034	 ldr         r3, [sp, #0x34]
  0397c	e283300c	 add         r3, r3, #0xC
  03980	e5832000	 str         r2, [r3]

; 1577 :         status = SendCommand(pRequest);

  03984	e59d1034	 ldr         r1, [sp, #0x34]
  03988	e59d0030	 ldr         r0, [sp, #0x30]
  0398c	eb000000	 bl          |?SendCommand@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z|
  03990	e58d0020	 str         r0, [sp, #0x20]
  03994	e59d3020	 ldr         r3, [sp, #0x20]
  03998	e58d3000	 str         r3, [sp]

; 1578 :         if(!SD_API_SUCCESS(status))

  0399c	e59d3000	 ldr         r3, [sp]
  039a0	e3530000	 cmp         r3, #0
  039a4	aa00000e	 bge         |$LN2@SDHCBusReq|

; 1579 :         {
; 1580 :             DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::SDHCBusRequestHandlerImpl: "
; 1581 :                 L"Error sending command:0x%02x\r\n", pRequest->CommandCode
; 1582 :             ));

  039a8	e59f3064	 ldr         r3, [pc, #0x64]
  039ac	e5933440	 ldr         r3, [r3, #0x440]
  039b0	e3130902	 tst         r3, #2, 18
  039b4	0a000008	 beq         |$LN19@SDHCBusReq|
  039b8	e59d3034	 ldr         r3, [sp, #0x34]
  039bc	e2833014	 add         r3, r3, #0x14
  039c0	e5d33000	 ldrb        r3, [r3]
  039c4	e1a01003	 mov         r1, r3
  039c8	e59f0040	 ldr         r0, [pc, #0x40]
  039cc	eb000000	 bl          NKDbgPrintfW
  039d0	e3a03001	 mov         r3, #1
  039d4	e58d3024	 str         r3, [sp, #0x24]
  039d8	ea000001	 b           |$LN20@SDHCBusReq|
  039dc		 |$LN19@SDHCBusReq|
  039dc	e3a03000	 mov         r3, #0
  039e0	e58d3024	 str         r3, [sp, #0x24]
  039e4		 |$LN20@SDHCBusReq|
  039e4		 |$LN2@SDHCBusReq|
  039e4		 |$LN3@SDHCBusReq|
  039e4		 |$EXIT$40789|

; 1583 :             goto EXIT;      
; 1584 :         }
; 1585 :     }
; 1586 : 
; 1587 : 
; 1588 : EXIT:
; 1589 :     SDHCDReleaseHCLock(m_pHCContext);

  039e4	e59d3030	 ldr         r3, [sp, #0x30]
  039e8	e2833004	 add         r3, r3, #4
  039ec	e5933000	 ldr         r3, [r3]
  039f0	e2830024	 add         r0, r3, #0x24
  039f4	eb000000	 bl          LeaveCriticalSection

; 1590 :     return status;

  039f8	e59d3000	 ldr         r3, [sp]
  039fc	e58d3008	 str         r3, [sp, #8]

; 1591 : }

  03a00	e59d0008	 ldr         r0, [sp, #8]
  03a04	e28dd028	 add         sp, sp, #0x28
  03a08	e89d6000	 ldmia       sp, {sp, lr}
  03a0c	e12fff1e	 bx          lr
  03a10		 |$LN24@SDHCBusReq|
  03a10		 |$LN25@SDHCBusReq|
  03a10	00000000	 DCD         |??_C@_1JO@ELDKEBIK@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu@|
  03a14		 |$LN26@SDHCBusReq|
  03a14	00000000	 DCD         |dpCurSettings|
  03a18		 |$LN27@SDHCBusReq|
  03a18	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  03a1c		 |$LN28@SDHCBusReq|
  03a1c	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  03a20		 |$LN29@SDHCBusReq|
  03a20	00000000	 DCD         |??_C@_1JA@LIPKICML@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  03a24		 |$LN30@SDHCBusReq|
  03a24	00000000	 DCD         |??_C@_1HI@PGKKCMJO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu@|
  03a28		 |$M42972|

			 ENDP  ; |?SDHCBusRequestHandlerImpl@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z|, CSDIOControllerBase::SDHCBusRequestHandlerImpl

	EXPORT	|??_C@_1JG@CBKMAJJG@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LK@ECIBEGHL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KC@GKAOMAEO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LM@HOOBBKGP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LI@PHDFMFPF@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JG@ELIIAALB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| [ DATA ] ; `string'
	EXPORT	|?SDITransmit@CSDIOControllerBase@@QAAHPAEK@Z| ; CSDIOControllerBase::SDITransmit
	EXPORT	|??_C@_1JE@IOMKDOFC@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| [ DATA ] ; `string'
	EXPORT	|?SDIReceive@CSDIOControllerBase@@QAAHPAEK@Z| ; CSDIOControllerBase::SDIReceive
	EXPORT	|??_C@_1LC@EFFBBCMD@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| [ DATA ] ; `string'
	EXPORT	|?GetCommandResponse@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z| ; CSDIOControllerBase::GetCommandResponse
	EXPORT	|??_C@_1NE@KBFENPL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JK@BFHHLLAA@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IM@FCKDOCPD@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IO@IKAIBMCO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IE@NFMKHLBJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HK@LGDFNONP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LM@MJDENCHK@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@LEHBJPGO@?$AA?9?$AAD?$AAe?$AAb?$AAu?$AAg?$AAS?$AAD?$AAH?$AAC?$AAR?$AAe?$AAg?$AAs?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@PKFIAIGI@?$AAP?$AAR?$AAC?$AAM?$AA_?$AAP?$AAM?$AA_?$AAI?$AAC?$AAL?$AAK?$AAE?$AAN?$AA1?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@NGEIJKCP@?$AAP?$AAR?$AAC?$AAM?$AA_?$AAP?$AAM?$AA_?$AAF?$AAC?$AAL?$AAK?$AAE?$AAN?$AA1?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@JJDFLGL@?$AAP?$AAR?$AAC?$AAM?$AA_?$AAP?$AAM?$AA_?$AAA?$AAU?$AAT?$AAO?$AAI?$AAD?$AAE?$AAL?$AA1?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@IIHMGPGB@?$AAP?$AAR?$AAC?$AAM?$AA_?$AAP?$AAM?$AA_?$AAW?$AAK?$AAS?$AAT?$AA1?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@HMKOINFE@?$AAP?$AAR?$AAC?$AAM?$AA_?$AAP?$AAM?$AA_?$AAW?$AAK?$AAE?$AAN?$AA1?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@LGIJCMDI@?$AAM?$AAM?$AAC?$AA_?$AAS?$AAI?$AAS?$AAS?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@NCLNICNF@?$AAM?$AAM?$AAC?$AA_?$AAS?$AAY?$AAS?$AAC?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@CELKDEC@?$AAM?$AAM?$AAC?$AA_?$AAI?$AAO?$AAS?$AAR?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@NMCJHLFK@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA7?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@FNAMBOHN@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA6?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@FBCLHFF@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA5?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@IEDHNCHC@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA4?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@LFCPOFAF@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@DEAKIACC@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA2?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@GMBECJAK@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA1?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@ONDBEMCN@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@JFBKMAEL@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAE?$AAV?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@JCBFCNMO@?$AAM?$AAM?$AAC?$AA_?$AAS?$AAD?$AAI?$AAO?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@FLHMDFNO@?$AAM?$AAM?$AAC?$AA_?$AAB?$AAU?$AAF?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@LGFPMALN@?$AAM?$AAM?$AAC?$AA_?$AAN?$AAB?$AAL?$AAK?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@CNKOMEGJ@?$AAM?$AAM?$AAC?$AA_?$AAB?$AAL?$AAE?$AAN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@OKPFMEJO@?$AAM?$AAM?$AAC?$AA_?$AAD?$AAT?$AAO?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@OOPMDHMN@?$AAM?$AAM?$AAC?$AA_?$AAC?$AAT?$AAO?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@BBPNKHNE@?$AAM?$AAM?$AAC?$AA_?$AAI?$AAE?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@CJBLDLAJ@?$AAM?$AAM?$AAC?$AA_?$AAS?$AAT?$AAA?$AAT?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@OFEIKCD@?$AAM?$AAM?$AAC?$AA_?$AAC?$AAO?$AAN?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@HDGDEEHL@?$AAM?$AAM?$AAC?$AA_?$AAA?$AAR?$AAG?$AA2?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@CLHNONFD@?$AAM?$AAM?$AAC?$AA_?$AAA?$AAR?$AAG?$AA1?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@HMIJHCAI@?$AAM?$AAM?$AAC?$AA_?$AAC?$AAM?$AAD?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@LDAJFLIN@?$AA?$CL?$AAD?$AAe?$AAb?$AAu?$AAg?$AAS?$AAD?$AAH?$AAC?$AAR?$AAe?$AAg?$AAs?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KG@DHKMIABF@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JA@CPICLCHH@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| [ DATA ] ; `string'
	IMPORT	|SDProcessException|
	IMPORT	|__C_specific_handler|

  000d8			 AREA	 |.pdata|, PDATA
|$T43114| DCD	|$LN172@CommandCom|
	DCD	0xc0045605
|$T43116| DCD	|$LN161@CommandCom|
	DCD	0x40000a02
|$T43118| DCD	|$LN154@CommandCom|
	DCD	0x40003702

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JG@CBKMAJJG@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "C", 0x0, "a", 0x0, "r", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "c", 0x0, "o", 0x0, "g", 0x0, "n", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "a", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, " ", 0x0, "M", 0x0, "M", 0x0, "C", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LK@ECIBEGHL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "S", 0x0, "w", 0x0, "i", 0x0, "t"
	DCB	0x0, "c", 0x0, "h", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "A", 0x0, "p", 0x0, "p", 0x0, "l"
	DCB	0x0, "i", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, " ", 0x0, "S", 0x0, "p", 0x0, "e", 0x0, "c"
	DCB	0x0, "i", 0x0, "f", 0x0, "i", 0x0, "c", 0x0, " ", 0x0, "C"
	DCB	0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, " ", 0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KC@GKAOMAEO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "S", 0x0, "w", 0x0, "i", 0x0, "t"
	DCB	0x0, "c", 0x0, "h", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, "a", 0x0, "r", 0x0, "d", 0x0, " ", 0x0, "C"
	DCB	0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, " ", 0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LM@HOOBBKGP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "P", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "m", 0x0, "i", 0x0, "t", 0x0, " "
	DCB	0x0, "s", 0x0, "u", 0x0, "c", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "f", 0x0, "u", 0x0, "l", 0x0, "l", 0x0, "y", 0x0, " "
	DCB	0x0, "s", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e"
	DCB	0x0, "s", 0x0, " ", 0x0, "{", 0x0, "%", 0x0, "S", 0x0, "}"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LI@PHDFMFPF@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "P", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "m", 0x0, "i", 0x0, "t", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "s", 0x0, "e"
	DCB	0x0, "n", 0x0, "d", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " "
	DCB	0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, " "
	DCB	0x0, "{", 0x0, "%", 0x0, "S", 0x0, "}", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JG@ELIIAALB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JE@IOMKDOFC@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "R", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v"
	DCB	0x0, "e", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LC@EFFBBCMD@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "g", 0x0, "e", 0x0, "t", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, "e"
	DCB	0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, ":", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1NE@KBFENPL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "C"
	DCB	0x0, "m", 0x0, "d", 0x0, "R", 0x0, "e", 0x0, "s", 0x0, "p"
	DCB	0x0, "o", 0x0, "n", 0x0, "s", 0x0, "e", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n", 0x0, "s"
	DCB	0x0, "e", 0x0, " ", 0x0, "(", 0x0, "n", 0x0, "o", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n"
	DCB	0x0, "s", 0x0, "e", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "p"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JK@BFHHLLAA@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "G", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "c", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "p"
	DCB	0x0, "o", 0x0, "n", 0x0, "s", 0x0, "e", 0x0, " ", 0x0, "t"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IM@FCKDOCPD@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "G", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "c", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, " ", 0x0, "C", 0x0, "R", 0x0, "C", 0x0, " "
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, "!"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IO@IKAIBMCO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "C", 0x0, "a", 0x0, "r", 0x0, "d"
	DCB	0x0, " ", 0x0, "e", 0x0, "x", 0x0, "i", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "s", 0x0, "y"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@NFMKHLBJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "C", 0x0, "a", 0x0, "r", 0x0, "d"
	DCB	0x0, " ", 0x0, "B", 0x0, "U", 0x0, "S", 0x0, "Y", 0x0, " "
	DCB	0x0, "t", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u"
	DCB	0x0, "t", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@LGDFNONP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "C", 0x0, "a", 0x0, "r", 0x0, "d"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "m", 0x0, "o", 0x0, "v"
	DCB	0x0, "e", 0x0, "d", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LM@MJDENCHK@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "C", 0x0, "a", 0x0, "r", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "b", 0x0, "u"
	DCB	0x0, "s", 0x0, "y", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "a", 0x0, "f", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m"
	DCB	0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "!", 0x0, " "
	DCB	0x0, " ", 0x0, "D", 0x0, "e", 0x0, "l", 0x0, "a", 0x0, "y"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, ".", 0x0, ".", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@LEHBJPGO@?$AA?9?$AAD?$AAe?$AAb?$AAu?$AAg?$AAS?$AAD?$AAH?$AAC?$AAR?$AAe?$AAg?$AAs?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@| DCB "-"
	DCB	0x0, "D", 0x0, "e", 0x0, "b", 0x0, "u", 0x0, "g", 0x0, "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "s", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@PKFIAIGI@?$AAP?$AAR?$AAC?$AAM?$AA_?$AAP?$AAM?$AA_?$AAI?$AAC?$AAL?$AAK?$AAE?$AAN?$AA1?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "P"
	DCB	0x0, "R", 0x0, "C", 0x0, "M", 0x0, "_", 0x0, "P", 0x0, "M"
	DCB	0x0, "_", 0x0, "I", 0x0, "C", 0x0, "L", 0x0, "K", 0x0, "E"
	DCB	0x0, "N", 0x0, "1", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "4", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@NGEIJKCP@?$AAP?$AAR?$AAC?$AAM?$AA_?$AAP?$AAM?$AA_?$AAF?$AAC?$AAL?$AAK?$AAE?$AAN?$AA1?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "P"
	DCB	0x0, "R", 0x0, "C", 0x0, "M", 0x0, "_", 0x0, "P", 0x0, "M"
	DCB	0x0, "_", 0x0, "F", 0x0, "C", 0x0, "L", 0x0, "K", 0x0, "E"
	DCB	0x0, "N", 0x0, "1", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "4", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@JJDFLGL@?$AAP?$AAR?$AAC?$AAM?$AA_?$AAP?$AAM?$AA_?$AAA?$AAU?$AAT?$AAO?$AAI?$AAD?$AAE?$AAL?$AA1?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "P"
	DCB	0x0, "R", 0x0, "C", 0x0, "M", 0x0, "_", 0x0, "P", 0x0, "M"
	DCB	0x0, "_", 0x0, "A", 0x0, "U", 0x0, "T", 0x0, "O", 0x0, "I"
	DCB	0x0, "D", 0x0, "E", 0x0, "L", 0x0, "1", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "X", 0x0, " "
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@IIHMGPGB@?$AAP?$AAR?$AAC?$AAM?$AA_?$AAP?$AAM?$AA_?$AAW?$AAK?$AAS?$AAT?$AA1?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "P"
	DCB	0x0, "R", 0x0, "C", 0x0, "M", 0x0, "_", 0x0, "P", 0x0, "M"
	DCB	0x0, "_", 0x0, "W", 0x0, "K", 0x0, "S", 0x0, "T", 0x0, "1"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@HMKOINFE@?$AAP?$AAR?$AAC?$AAM?$AA_?$AAP?$AAM?$AA_?$AAW?$AAK?$AAE?$AAN?$AA1?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "P"
	DCB	0x0, "R", 0x0, "C", 0x0, "M", 0x0, "_", 0x0, "P", 0x0, "M"
	DCB	0x0, "_", 0x0, "W", 0x0, "K", 0x0, "E", 0x0, "N", 0x0, "1"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@LGIJCMDI@?$AAM?$AAM?$AAC?$AA_?$AAS?$AAI?$AAS?$AAS?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "S", 0x0, "I", 0x0, "S"
	DCB	0x0, "S", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "4", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@NCLNICNF@?$AAM?$AAM?$AAC?$AA_?$AAS?$AAY?$AAS?$AAC?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "S", 0x0, "Y", 0x0, "S"
	DCB	0x0, "C", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "4", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@CELKDEC@?$AAM?$AAM?$AAC?$AA_?$AAI?$AAO?$AAS?$AAR?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "S"
	DCB	0x0, "R", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "4", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@NMCJHLFK@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA7?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "R", 0x0, "S", 0x0, "P"
	DCB	0x0, "7", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "4", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@FNAMBOHN@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA6?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "R", 0x0, "S", 0x0, "P"
	DCB	0x0, "6", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "4", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@FBCLHFF@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA5?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "R", 0x0, "S", 0x0, "P"
	DCB	0x0, "5", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "4", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@IEDHNCHC@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA4?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "R", 0x0, "S", 0x0, "P"
	DCB	0x0, "4", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "4", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@LFCPOFAF@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "R", 0x0, "S", 0x0, "P"
	DCB	0x0, "3", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "4", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@DEAKIACC@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA2?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "R", 0x0, "S", 0x0, "P"
	DCB	0x0, "2", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "4", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@GMBECJAK@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA1?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "R", 0x0, "S", 0x0, "P"
	DCB	0x0, "1", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "4", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@ONDBEMCN@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "R", 0x0, "S", 0x0, "P"
	DCB	0x0, "0", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "4", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@JFBKMAEL@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAE?$AAV?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "V"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@JCBFCNMO@?$AAM?$AAM?$AAC?$AA_?$AAS?$AAD?$AAI?$AAO?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "S", 0x0, "D", 0x0, "I"
	DCB	0x0, "O", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "4", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@FLHMDFNO@?$AAM?$AAM?$AAC?$AA_?$AAB?$AAU?$AAF?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "B", 0x0, "U", 0x0, "F"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@LGFPMALN@?$AAM?$AAM?$AAC?$AA_?$AAN?$AAB?$AAL?$AAK?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "N", 0x0, "B", 0x0, "L"
	DCB	0x0, "K", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "4", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@CNKOMEGJ@?$AAM?$AAM?$AAC?$AA_?$AAB?$AAL?$AAE?$AAN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "B", 0x0, "L", 0x0, "E"
	DCB	0x0, "N", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "4", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@OKPFMEJO@?$AAM?$AAM?$AAC?$AA_?$AAD?$AAT?$AAO?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "D", 0x0, "T", 0x0, "O"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@OOPMDHMN@?$AAM?$AAM?$AAC?$AA_?$AAC?$AAT?$AAO?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "C", 0x0, "T", 0x0, "O"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@BBPNKHNE@?$AAM?$AAM?$AAC?$AA_?$AAI?$AAE?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "I", 0x0, "E", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "X"
	DCB	0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@CJBLDLAJ@?$AAM?$AAM?$AAC?$AA_?$AAS?$AAT?$AAA?$AAT?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A"
	DCB	0x0, "T", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "4", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@OFEIKCD@?$AAM?$AAM?$AAC?$AA_?$AAC?$AAO?$AAN?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "C", 0x0, "O", 0x0, "N"
	DCB	0x0, " ", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "4", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@HDGDEEHL@?$AAM?$AAM?$AAC?$AA_?$AAA?$AAR?$AAG?$AA2?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "A", 0x0, "R", 0x0, "G"
	DCB	0x0, "2", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "4", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@CLHNONFD@?$AAM?$AAM?$AAC?$AA_?$AAA?$AAR?$AAG?$AA1?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "A", 0x0, "R", 0x0, "G"
	DCB	0x0, "1", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "4", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@HMIJHCAI@?$AAM?$AAM?$AAC?$AA_?$AAC?$AAM?$AAD?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "C", 0x0, "M", 0x0, "D"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@LDAJFLIN@?$AA?$CL?$AAD?$AAe?$AAb?$AAu?$AAg?$AAS?$AAD?$AAH?$AAC?$AAR?$AAe?$AAg?$AAs?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@| DCB "+"
	DCB	0x0, "D", 0x0, "e", 0x0, "b", 0x0, "u", 0x0, "g", 0x0, "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "s", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KG@DHKMIABF@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "U", 0x0, "n", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "g", 0x0, "e", 0x0, "t", 0x0, "/", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "k", 0x0, " ", 0x0, "c", 0x0, "u", 0x0, "r"
	DCB	0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JA@CPICLCHH@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "G", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "t", 0x0, "h", 0x0, "e", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n"
	DCB	0x0, "s", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.xdata|, DATA
|$T43112| DCD	0x2
	DCD	|$LN165@CommandCom|
	DCD	|$LN166@CommandCom|
	DCD	|$LN161@CommandCom|
	DCD	|$LN162@CommandCom|
	DCD	|$LN158@CommandCom|
	DCD	|$LN159@CommandCom|
	DCD	|$LN154@CommandCom|
	DCD	|$LN155@CommandCom|
; Function compile flags: /Odtp

  03a28			 AREA	 |.text|, CODE, ARM

  03a28	00000000	 DCD         |__C_specific_handler|
  03a2c	00000000	 DCD         |$T43112|

  03a30		 |?CommandCompleteHandler@CSDIOControllerBase@@QAAHXZ| PROC ; CSDIOControllerBase::CommandCompleteHandler

; 1598 : {

  03a30		 |$LN172@CommandCom|
  03a30	e1a0c00d	 mov         r12, sp
  03a34	e92d0001	 stmdb       sp!, {r0}
  03a38	e92d5800	 stmdb       sp!, {r11, r12, lr}
  03a3c	e28db00c	 add         r11, sp, #0xC
  03a40	e24ddf52	 sub         sp, sp, #0x52, 30
  03a44		 |$LN170@CommandCom|

; 1599 :     DWORD               dwCurrentTickCount;
; 1600 :     DWORD               dwTimeout;
; 1601 :     DWORD               dwCountStart;
; 1602 :     BOOL                fTimeoutOverflow = FALSE;

  03a44	e3a03000	 mov         r3, #0
  03a48	e50b3154	 str         r3, [r11, #-0x154]

; 1603 :     PSD_BUS_REQUEST     pRequest = NULL;       // the request to complete

  03a4c	e3a03000	 mov         r3, #0
  03a50	e50b314c	 str         r3, [r11, #-0x14C]

; 1604 :     SD_API_STATUS       status = SD_API_STATUS_PENDING;

  03a54	e3a03001	 mov         r3, #1
  03a58	e50b313c	 str         r3, [r11, #-0x13C]

; 1605 : 
; 1606 :     DEBUGMSG(SHC_INTERRUPT_ZONE, (L"CSDIOControllerBase::CommandCompleteHandler: "
; 1607 :         L"Got the command response\r\n"
; 1608 :     ));

  03a5c	e59f320c	 ldr         r3, [pc, #0x20C]
  03a60	e5933440	 ldr         r3, [r3, #0x440]
  03a64	e3130001	 tst         r3, #1
  03a68	0a000004	 beq         |$LN47@CommandCom|
  03a6c	e59f0218	 ldr         r0, [pc, #0x218]
  03a70	eb000000	 bl          NKDbgPrintfW
  03a74	e3a03001	 mov         r3, #1
  03a78	e50b3120	 str         r3, [r11, #-0x120]
  03a7c	ea000001	 b           |$LN48@CommandCom|
  03a80		 |$LN47@CommandCom|
  03a80	e3a03000	 mov         r3, #0
  03a84	e50b3120	 str         r3, [r11, #-0x120]
  03a88		 |$LN48@CommandCom|

; 1609 :     
; 1610 : #ifdef SDIO_INAB_INTERRUPT_WORKAROUND
; 1611 :     if( m_fINABworkaroundEnabled )
; 1612 :     {
; 1613 :         if( m_CurrentState == SendingINAB )
; 1614 :             goto PROCESS_INAB_STATE;
; 1615 :     }
; 1616 : #endif
; 1617 : 
; 1618 :     // get and lock the current bus request
; 1619 :     if((pRequest = SDHCDGetAndLockCurrentRequest(m_pHCContext, 0)) == NULL)

  03a88	e3a01000	 mov         r1, #0
  03a8c	e59b3000	 ldr         r3, [r11]
  03a90	e2833004	 add         r3, r3, #4
  03a94	e5930000	 ldr         r0, [r3]
  03a98	eb000000	 bl          SDHCDGetAndLockCurrentRequest
  03a9c	e50b011c	 str         r0, [r11, #-0x11C]
  03aa0	e51b311c	 ldr         r3, [r11, #-0x11C]
  03aa4	e50b314c	 str         r3, [r11, #-0x14C]
  03aa8	e51b314c	 ldr         r3, [r11, #-0x14C]
  03aac	e3530000	 cmp         r3, #0
  03ab0	1a00000d	 bne         |$LN44@CommandCom|

; 1620 :     {
; 1621 :         DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::CommandCompleteHandler: "
; 1622 :             L"Unable to get/lock current request!\r\n"
; 1623 :         ));

  03ab4	e59f31b4	 ldr         r3, [pc, #0x1B4]
  03ab8	e5933440	 ldr         r3, [r3, #0x440]
  03abc	e3130902	 tst         r3, #2, 18
  03ac0	0a000004	 beq         |$LN49@CommandCom|
  03ac4	e59f01bc	 ldr         r0, [pc, #0x1BC]
  03ac8	eb000000	 bl          NKDbgPrintfW
  03acc	e3a03001	 mov         r3, #1
  03ad0	e50b3118	 str         r3, [r11, #-0x118]
  03ad4	ea000001	 b           |$LN50@CommandCom|
  03ad8		 |$LN49@CommandCom|
  03ad8	e3a03000	 mov         r3, #0
  03adc	e50b3118	 str         r3, [r11, #-0x118]
  03ae0		 |$LN50@CommandCom|

; 1624 :         status = SD_API_STATUS_INVALID_DEVICE_REQUEST;

  03ae0	e3a03127	 mov         r3, #0x27, 2
  03ae4	e50b313c	 str         r3, [r11, #-0x13C]

; 1625 :         goto TRANSFER_DONE;

  03ae8	ea000393	 b           |$TRANSFER_DONE$40807|
  03aec		 |$LN44@CommandCom|

; 1626 :     } 
; 1627 : 
; 1628 : #ifdef DEBUG
; 1629 :     EnterCriticalSection( &m_critSec );

  03aec	e59b3000	 ldr         r3, [r11]
  03af0	e2830014	 add         r0, r3, #0x14
  03af4	eb000000	 bl          EnterCriticalSection

; 1630 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"+DebugSDHCRegs-------------------------\r\n"));

  03af8	e59f3170	 ldr         r3, [pc, #0x170]
  03afc	e5933440	 ldr         r3, [r3, #0x440]
  03b00	e3130a02	 tst         r3, #2, 20
  03b04	0a000004	 beq         |$LN51@CommandCom|
  03b08	e59f0174	 ldr         r0, [pc, #0x174]
  03b0c	eb000000	 bl          NKDbgPrintfW
  03b10	e3a03001	 mov         r3, #1
  03b14	e50b3114	 str         r3, [r11, #-0x114]
  03b18	ea000001	 b           |$LN52@CommandCom|
  03b1c		 |$LN51@CommandCom|
  03b1c	e3a03000	 mov         r3, #0
  03b20	e50b3114	 str         r3, [r11, #-0x114]
  03b24		 |$LN52@CommandCom|

; 1631 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_CMD 0x%04X \r\n", m_vpSDIOReg->MMC_CMD    ));

  03b24	e59f3144	 ldr         r3, [pc, #0x144]
  03b28	e5933440	 ldr         r3, [r3, #0x440]
  03b2c	e3130a02	 tst         r3, #2, 20
  03b30	0a000009	 beq         |$LN53@CommandCom|
  03b34	e59b3000	 ldr         r3, [r11]
  03b38	e2833088	 add         r3, r3, #0x88
  03b3c	e5933000	 ldr         r3, [r3]
  03b40	e1d330b0	 ldrh        r3, [r3]
  03b44	e1a01003	 mov         r1, r3
  03b48	e59f0130	 ldr         r0, [pc, #0x130]
  03b4c	eb000000	 bl          NKDbgPrintfW
  03b50	e3a03001	 mov         r3, #1
  03b54	e50b3110	 str         r3, [r11, #-0x110]
  03b58	ea000001	 b           |$LN54@CommandCom|
  03b5c		 |$LN53@CommandCom|
  03b5c	e3a03000	 mov         r3, #0
  03b60	e50b3110	 str         r3, [r11, #-0x110]
  03b64		 |$LN54@CommandCom|

; 1632 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_ARG1 0x%04X \r\n", m_vpSDIOReg->MMC_ARG1  ));

  03b64	e59f3104	 ldr         r3, [pc, #0x104]
  03b68	e5933440	 ldr         r3, [r3, #0x440]
  03b6c	e3130a02	 tst         r3, #2, 20
  03b70	0a00000a	 beq         |$LN55@CommandCom|
  03b74	e59b3000	 ldr         r3, [r11]
  03b78	e2833088	 add         r3, r3, #0x88
  03b7c	e5933000	 ldr         r3, [r3]
  03b80	e2833004	 add         r3, r3, #4
  03b84	e1d330b0	 ldrh        r3, [r3]
  03b88	e1a01003	 mov         r1, r3
  03b8c	e59f00e8	 ldr         r0, [pc, #0xE8]
  03b90	eb000000	 bl          NKDbgPrintfW
  03b94	e3a03001	 mov         r3, #1
  03b98	e50b310c	 str         r3, [r11, #-0x10C]
  03b9c	ea000001	 b           |$LN56@CommandCom|
  03ba0		 |$LN55@CommandCom|
  03ba0	e3a03000	 mov         r3, #0
  03ba4	e50b310c	 str         r3, [r11, #-0x10C]
  03ba8		 |$LN56@CommandCom|

; 1633 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_ARG2 0x%04X \r\n", m_vpSDIOReg->MMC_ARG2  ));

  03ba8	e59f30c0	 ldr         r3, [pc, #0xC0]
  03bac	e5933440	 ldr         r3, [r3, #0x440]
  03bb0	e3130a02	 tst         r3, #2, 20
  03bb4	0a00000a	 beq         |$LN57@CommandCom|
  03bb8	e59b3000	 ldr         r3, [r11]
  03bbc	e2833088	 add         r3, r3, #0x88
  03bc0	e5933000	 ldr         r3, [r3]
  03bc4	e2833008	 add         r3, r3, #8
  03bc8	e1d330b0	 ldrh        r3, [r3]
  03bcc	e1a01003	 mov         r1, r3
  03bd0	e59f00a0	 ldr         r0, [pc, #0xA0]
  03bd4	eb000000	 bl          NKDbgPrintfW
  03bd8	e3a03001	 mov         r3, #1
  03bdc	e50b3108	 str         r3, [r11, #-0x108]
  03be0	ea000001	 b           |$LN58@CommandCom|
  03be4		 |$LN57@CommandCom|
  03be4	e3a03000	 mov         r3, #0
  03be8	e50b3108	 str         r3, [r11, #-0x108]
  03bec		 |$LN58@CommandCom|

; 1634 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_CON  0x%04X \r\n", m_vpSDIOReg->MMC_CON   ));

  03bec	e59f307c	 ldr         r3, [pc, #0x7C]
  03bf0	e5933440	 ldr         r3, [r3, #0x440]
  03bf4	e3130a02	 tst         r3, #2, 20
  03bf8	0a00000a	 beq         |$LN59@CommandCom|
  03bfc	e59b3000	 ldr         r3, [r11]
  03c00	e2833088	 add         r3, r3, #0x88
  03c04	e5933000	 ldr         r3, [r3]
  03c08	e283300c	 add         r3, r3, #0xC
  03c0c	e1d330b0	 ldrh        r3, [r3]
  03c10	e1a01003	 mov         r1, r3
  03c14	e59f0058	 ldr         r0, [pc, #0x58]
  03c18	eb000000	 bl          NKDbgPrintfW
  03c1c	e3a03001	 mov         r3, #1
  03c20	e50b3104	 str         r3, [r11, #-0x104]
  03c24	ea000001	 b           |$LN60@CommandCom|
  03c28		 |$LN59@CommandCom|
  03c28	e3a03000	 mov         r3, #0
  03c2c	e50b3104	 str         r3, [r11, #-0x104]
  03c30		 |$LN60@CommandCom|

; 1635 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_STAT 0x%04X \r\n", m_vpSDIOReg->MMC_STAT  ));

  03c30	e59f3038	 ldr         r3, [pc, #0x38]
  03c34	e5933440	 ldr         r3, [r3, #0x440]
  03c38	e3130a02	 tst         r3, #2, 20
  03c3c	0a000013	 beq         |$LN61@CommandCom|
  03c40	e59b3000	 ldr         r3, [r11]
  03c44	e2833088	 add         r3, r3, #0x88
  03c48	e5933000	 ldr         r3, [r3]
  03c4c	e2833010	 add         r3, r3, #0x10
  03c50	e1d330b0	 ldrh        r3, [r3]
  03c54	e1a01003	 mov         r1, r3
  03c58	e59f000c	 ldr         r0, [pc, #0xC]
  03c5c	eb000000	 bl          NKDbgPrintfW
  03c60	e3a03001	 mov         r3, #1
  03c64	e50b3100	 str         r3, [r11, #-0x100]
  03c68	ea00000a	 b           |$LN62@CommandCom|
  03c6c		 |$LN225@CommandCom|
  03c6c		 |$LN226@CommandCom|
  03c6c	00000000	 DCD         |??_C@_1CG@CJBLDLAJ@?$AAM?$AAM?$AAC?$AA_?$AAS?$AAT?$AAA?$AAT?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  03c70		 |$LN227@CommandCom|
  03c70	00000000	 DCD         |dpCurSettings|
  03c74		 |$LN228@CommandCom|
  03c74	00000000	 DCD         |??_C@_1CG@OFEIKCD@?$AAM?$AAM?$AAC?$AA_?$AAC?$AAO?$AAN?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  03c78		 |$LN229@CommandCom|
  03c78	00000000	 DCD         |??_C@_1CG@HDGDEEHL@?$AAM?$AAM?$AAC?$AA_?$AAA?$AAR?$AAG?$AA2?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  03c7c		 |$LN230@CommandCom|
  03c7c	00000000	 DCD         |??_C@_1CG@CLHNONFD@?$AAM?$AAM?$AAC?$AA_?$AAA?$AAR?$AAG?$AA1?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  03c80		 |$LN231@CommandCom|
  03c80	00000000	 DCD         |??_C@_1CE@HMIJHCAI@?$AAM?$AAM?$AAC?$AA_?$AAC?$AAM?$AAD?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  03c84		 |$LN232@CommandCom|
  03c84	00000000	 DCD         |??_C@_1FE@LDAJFLIN@?$AA?$CL?$AAD?$AAe?$AAb?$AAu?$AAg?$AAS?$AAD?$AAH?$AAC?$AAR?$AAe?$AAg?$AAs?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@|
  03c88		 |$LN233@CommandCom|
  03c88	00000000	 DCD         |??_C@_1KG@DHKMIABF@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@|
  03c8c		 |$LN234@CommandCom|
  03c8c	00000000	 DCD         |??_C@_1JA@CPICLCHH@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@|
  03c90		 |$LN61@CommandCom|
  03c90	e3a03000	 mov         r3, #0
  03c94	e50b3100	 str         r3, [r11, #-0x100]
  03c98		 |$LN62@CommandCom|

; 1636 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_IE 0x%04X \r\n", m_vpSDIOReg->MMC_IE  ));

  03c98	e59f3f3c	 ldr         r3, [pc, #0xF3C]
  03c9c	e5933440	 ldr         r3, [r3, #0x440]
  03ca0	e3130a02	 tst         r3, #2, 20
  03ca4	0a00000a	 beq         |$LN63@CommandCom|
  03ca8	e59b3000	 ldr         r3, [r11]
  03cac	e2833088	 add         r3, r3, #0x88
  03cb0	e5933000	 ldr         r3, [r3]
  03cb4	e2833014	 add         r3, r3, #0x14
  03cb8	e1d330b0	 ldrh        r3, [r3]
  03cbc	e1a01003	 mov         r1, r3
  03cc0	e59f0fc0	 ldr         r0, [pc, #0xFC0]
  03cc4	eb000000	 bl          NKDbgPrintfW
  03cc8	e3a03001	 mov         r3, #1
  03ccc	e50b30fc	 str         r3, [r11, #-0xFC]
  03cd0	ea000001	 b           |$LN64@CommandCom|
  03cd4		 |$LN63@CommandCom|
  03cd4	e3a03000	 mov         r3, #0
  03cd8	e50b30fc	 str         r3, [r11, #-0xFC]
  03cdc		 |$LN64@CommandCom|

; 1637 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_CTO 0x%04X \r\n", m_vpSDIOReg->MMC_CTO    ));

  03cdc	e59f3ef8	 ldr         r3, [pc, #0xEF8]
  03ce0	e5933440	 ldr         r3, [r3, #0x440]
  03ce4	e3130a02	 tst         r3, #2, 20
  03ce8	0a00000a	 beq         |$LN65@CommandCom|
  03cec	e59b3000	 ldr         r3, [r11]
  03cf0	e2833088	 add         r3, r3, #0x88
  03cf4	e5933000	 ldr         r3, [r3]
  03cf8	e2833018	 add         r3, r3, #0x18
  03cfc	e1d330b0	 ldrh        r3, [r3]
  03d00	e1a01003	 mov         r1, r3
  03d04	e59f0f78	 ldr         r0, [pc, #0xF78]
  03d08	eb000000	 bl          NKDbgPrintfW
  03d0c	e3a03001	 mov         r3, #1
  03d10	e50b30f8	 str         r3, [r11, #-0xF8]
  03d14	ea000001	 b           |$LN66@CommandCom|
  03d18		 |$LN65@CommandCom|
  03d18	e3a03000	 mov         r3, #0
  03d1c	e50b30f8	 str         r3, [r11, #-0xF8]
  03d20		 |$LN66@CommandCom|

; 1638 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_DTO 0x%04X \r\n", m_vpSDIOReg->MMC_DTO    ));

  03d20	e59f3eb4	 ldr         r3, [pc, #0xEB4]
  03d24	e5933440	 ldr         r3, [r3, #0x440]
  03d28	e3130a02	 tst         r3, #2, 20
  03d2c	0a00000a	 beq         |$LN67@CommandCom|
  03d30	e59b3000	 ldr         r3, [r11]
  03d34	e2833088	 add         r3, r3, #0x88
  03d38	e5933000	 ldr         r3, [r3]
  03d3c	e283301c	 add         r3, r3, #0x1C
  03d40	e1d330b0	 ldrh        r3, [r3]
  03d44	e1a01003	 mov         r1, r3
  03d48	e59f0f30	 ldr         r0, [pc, #0xF30]
  03d4c	eb000000	 bl          NKDbgPrintfW
  03d50	e3a03001	 mov         r3, #1
  03d54	e50b30f4	 str         r3, [r11, #-0xF4]
  03d58	ea000001	 b           |$LN68@CommandCom|
  03d5c		 |$LN67@CommandCom|
  03d5c	e3a03000	 mov         r3, #0
  03d60	e50b30f4	 str         r3, [r11, #-0xF4]
  03d64		 |$LN68@CommandCom|

; 1639 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_BLEN 0x%04X \r\n", m_vpSDIOReg->MMC_BLEN  ));

  03d64	e59f3e70	 ldr         r3, [pc, #0xE70]
  03d68	e5933440	 ldr         r3, [r3, #0x440]
  03d6c	e3130a02	 tst         r3, #2, 20
  03d70	0a00000a	 beq         |$LN69@CommandCom|
  03d74	e59b3000	 ldr         r3, [r11]
  03d78	e2833088	 add         r3, r3, #0x88
  03d7c	e5933000	 ldr         r3, [r3]
  03d80	e2833024	 add         r3, r3, #0x24
  03d84	e1d330b0	 ldrh        r3, [r3]
  03d88	e1a01003	 mov         r1, r3
  03d8c	e59f0ee8	 ldr         r0, [pc, #0xEE8]
  03d90	eb000000	 bl          NKDbgPrintfW
  03d94	e3a03001	 mov         r3, #1
  03d98	e50b30f0	 str         r3, [r11, #-0xF0]
  03d9c	ea000001	 b           |$LN70@CommandCom|
  03da0		 |$LN69@CommandCom|
  03da0	e3a03000	 mov         r3, #0
  03da4	e50b30f0	 str         r3, [r11, #-0xF0]
  03da8		 |$LN70@CommandCom|

; 1640 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_NBLK 0x%04X \r\n", m_vpSDIOReg->MMC_NBLK  ));

  03da8	e59f3e2c	 ldr         r3, [pc, #0xE2C]
  03dac	e5933440	 ldr         r3, [r3, #0x440]
  03db0	e3130a02	 tst         r3, #2, 20
  03db4	0a00000a	 beq         |$LN71@CommandCom|
  03db8	e59b3000	 ldr         r3, [r11]
  03dbc	e2833088	 add         r3, r3, #0x88
  03dc0	e5933000	 ldr         r3, [r3]
  03dc4	e2833028	 add         r3, r3, #0x28
  03dc8	e1d330b0	 ldrh        r3, [r3]
  03dcc	e1a01003	 mov         r1, r3
  03dd0	e59f0ea0	 ldr         r0, [pc, #0xEA0]
  03dd4	eb000000	 bl          NKDbgPrintfW
  03dd8	e3a03001	 mov         r3, #1
  03ddc	e50b30ec	 str         r3, [r11, #-0xEC]
  03de0	ea000001	 b           |$LN72@CommandCom|
  03de4		 |$LN71@CommandCom|
  03de4	e3a03000	 mov         r3, #0
  03de8	e50b30ec	 str         r3, [r11, #-0xEC]
  03dec		 |$LN72@CommandCom|

; 1641 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_BUF 0x%04X \r\n", m_vpSDIOReg->MMC_BUF    ));

  03dec	e59f3de8	 ldr         r3, [pc, #0xDE8]
  03df0	e5933440	 ldr         r3, [r3, #0x440]
  03df4	e3130a02	 tst         r3, #2, 20
  03df8	0a00000a	 beq         |$LN73@CommandCom|
  03dfc	e59b3000	 ldr         r3, [r11]
  03e00	e2833088	 add         r3, r3, #0x88
  03e04	e5933000	 ldr         r3, [r3]
  03e08	e283302c	 add         r3, r3, #0x2C
  03e0c	e1d330b0	 ldrh        r3, [r3]
  03e10	e1a01003	 mov         r1, r3
  03e14	e59f0e58	 ldr         r0, [pc, #0xE58]
  03e18	eb000000	 bl          NKDbgPrintfW
  03e1c	e3a03001	 mov         r3, #1
  03e20	e50b30e8	 str         r3, [r11, #-0xE8]
  03e24	ea000001	 b           |$LN74@CommandCom|
  03e28		 |$LN73@CommandCom|
  03e28	e3a03000	 mov         r3, #0
  03e2c	e50b30e8	 str         r3, [r11, #-0xE8]
  03e30		 |$LN74@CommandCom|

; 1642 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_SDIO 0x%04X \r\n", m_vpSDIOReg->MMC_SDIO  ));

  03e30	e59f3da4	 ldr         r3, [pc, #0xDA4]
  03e34	e5933440	 ldr         r3, [r3, #0x440]
  03e38	e3130a02	 tst         r3, #2, 20
  03e3c	0a00000a	 beq         |$LN75@CommandCom|
  03e40	e59b3000	 ldr         r3, [r11]
  03e44	e2833088	 add         r3, r3, #0x88
  03e48	e5933000	 ldr         r3, [r3]
  03e4c	e2833034	 add         r3, r3, #0x34
  03e50	e1d330b0	 ldrh        r3, [r3]
  03e54	e1a01003	 mov         r1, r3
  03e58	e59f0e10	 ldr         r0, [pc, #0xE10]
  03e5c	eb000000	 bl          NKDbgPrintfW
  03e60	e3a03001	 mov         r3, #1
  03e64	e50b30e4	 str         r3, [r11, #-0xE4]
  03e68	ea000001	 b           |$LN76@CommandCom|
  03e6c		 |$LN75@CommandCom|
  03e6c	e3a03000	 mov         r3, #0
  03e70	e50b30e4	 str         r3, [r11, #-0xE4]
  03e74		 |$LN76@CommandCom|

; 1643 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_REV 0x%04X \r\n", m_vpSDIOReg->MMC_REV    ));

  03e74	e59f3d60	 ldr         r3, [pc, #0xD60]
  03e78	e5933440	 ldr         r3, [r3, #0x440]
  03e7c	e3130a02	 tst         r3, #2, 20
  03e80	0a00000a	 beq         |$LN77@CommandCom|
  03e84	e59b3000	 ldr         r3, [r11]
  03e88	e2833088	 add         r3, r3, #0x88
  03e8c	e5933000	 ldr         r3, [r3]
  03e90	e283303c	 add         r3, r3, #0x3C
  03e94	e1d330b0	 ldrh        r3, [r3]
  03e98	e1a01003	 mov         r1, r3
  03e9c	e59f0dc8	 ldr         r0, [pc, #0xDC8]
  03ea0	eb000000	 bl          NKDbgPrintfW
  03ea4	e3a03001	 mov         r3, #1
  03ea8	e50b30e0	 str         r3, [r11, #-0xE0]
  03eac	ea000001	 b           |$LN78@CommandCom|
  03eb0		 |$LN77@CommandCom|
  03eb0	e3a03000	 mov         r3, #0
  03eb4	e50b30e0	 str         r3, [r11, #-0xE0]
  03eb8		 |$LN78@CommandCom|

; 1644 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_RSP0 0x%04X \r\n", m_vpSDIOReg->MMC_RSP0  ));

  03eb8	e59f3d1c	 ldr         r3, [pc, #0xD1C]
  03ebc	e5933440	 ldr         r3, [r3, #0x440]
  03ec0	e3130a02	 tst         r3, #2, 20
  03ec4	0a00000a	 beq         |$LN79@CommandCom|
  03ec8	e59b3000	 ldr         r3, [r11]
  03ecc	e2833088	 add         r3, r3, #0x88
  03ed0	e5933000	 ldr         r3, [r3]
  03ed4	e2833040	 add         r3, r3, #0x40
  03ed8	e1d330b0	 ldrh        r3, [r3]
  03edc	e1a01003	 mov         r1, r3
  03ee0	e59f0d80	 ldr         r0, [pc, #0xD80]
  03ee4	eb000000	 bl          NKDbgPrintfW
  03ee8	e3a03001	 mov         r3, #1
  03eec	e50b30dc	 str         r3, [r11, #-0xDC]
  03ef0	ea000001	 b           |$LN80@CommandCom|
  03ef4		 |$LN79@CommandCom|
  03ef4	e3a03000	 mov         r3, #0
  03ef8	e50b30dc	 str         r3, [r11, #-0xDC]
  03efc		 |$LN80@CommandCom|

; 1645 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_RSP1 0x%04X \r\n", m_vpSDIOReg->MMC_RSP1  ));

  03efc	e59f3cd8	 ldr         r3, [pc, #0xCD8]
  03f00	e5933440	 ldr         r3, [r3, #0x440]
  03f04	e3130a02	 tst         r3, #2, 20
  03f08	0a00000a	 beq         |$LN81@CommandCom|
  03f0c	e59b3000	 ldr         r3, [r11]
  03f10	e2833088	 add         r3, r3, #0x88
  03f14	e5933000	 ldr         r3, [r3]
  03f18	e2833044	 add         r3, r3, #0x44
  03f1c	e1d330b0	 ldrh        r3, [r3]
  03f20	e1a01003	 mov         r1, r3
  03f24	e59f0d38	 ldr         r0, [pc, #0xD38]
  03f28	eb000000	 bl          NKDbgPrintfW
  03f2c	e3a03001	 mov         r3, #1
  03f30	e50b30d8	 str         r3, [r11, #-0xD8]
  03f34	ea000001	 b           |$LN82@CommandCom|
  03f38		 |$LN81@CommandCom|
  03f38	e3a03000	 mov         r3, #0
  03f3c	e50b30d8	 str         r3, [r11, #-0xD8]
  03f40		 |$LN82@CommandCom|

; 1646 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_RSP2 0x%04X \r\n", m_vpSDIOReg->MMC_RSP2  ));

  03f40	e59f3c94	 ldr         r3, [pc, #0xC94]
  03f44	e5933440	 ldr         r3, [r3, #0x440]
  03f48	e3130a02	 tst         r3, #2, 20
  03f4c	0a00000a	 beq         |$LN83@CommandCom|
  03f50	e59b3000	 ldr         r3, [r11]
  03f54	e2833088	 add         r3, r3, #0x88
  03f58	e5933000	 ldr         r3, [r3]
  03f5c	e2833048	 add         r3, r3, #0x48
  03f60	e1d330b0	 ldrh        r3, [r3]
  03f64	e1a01003	 mov         r1, r3
  03f68	e59f0cf0	 ldr         r0, [pc, #0xCF0]
  03f6c	eb000000	 bl          NKDbgPrintfW
  03f70	e3a03001	 mov         r3, #1
  03f74	e50b30d4	 str         r3, [r11, #-0xD4]
  03f78	ea000001	 b           |$LN84@CommandCom|
  03f7c		 |$LN83@CommandCom|
  03f7c	e3a03000	 mov         r3, #0
  03f80	e50b30d4	 str         r3, [r11, #-0xD4]
  03f84		 |$LN84@CommandCom|

; 1647 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_RSP3 0x%04X \r\n", m_vpSDIOReg->MMC_RSP3  ));

  03f84	e59f3c50	 ldr         r3, [pc, #0xC50]
  03f88	e5933440	 ldr         r3, [r3, #0x440]
  03f8c	e3130a02	 tst         r3, #2, 20
  03f90	0a00000a	 beq         |$LN85@CommandCom|
  03f94	e59b3000	 ldr         r3, [r11]
  03f98	e2833088	 add         r3, r3, #0x88
  03f9c	e5933000	 ldr         r3, [r3]
  03fa0	e283304c	 add         r3, r3, #0x4C
  03fa4	e1d330b0	 ldrh        r3, [r3]
  03fa8	e1a01003	 mov         r1, r3
  03fac	e59f0ca8	 ldr         r0, [pc, #0xCA8]
  03fb0	eb000000	 bl          NKDbgPrintfW
  03fb4	e3a03001	 mov         r3, #1
  03fb8	e50b30d0	 str         r3, [r11, #-0xD0]
  03fbc	ea000001	 b           |$LN86@CommandCom|
  03fc0		 |$LN85@CommandCom|
  03fc0	e3a03000	 mov         r3, #0
  03fc4	e50b30d0	 str         r3, [r11, #-0xD0]
  03fc8		 |$LN86@CommandCom|

; 1648 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_RSP4 0x%04X \r\n", m_vpSDIOReg->MMC_RSP4  ));

  03fc8	e59f3c0c	 ldr         r3, [pc, #0xC0C]
  03fcc	e5933440	 ldr         r3, [r3, #0x440]
  03fd0	e3130a02	 tst         r3, #2, 20
  03fd4	0a00000a	 beq         |$LN87@CommandCom|
  03fd8	e59b3000	 ldr         r3, [r11]
  03fdc	e2833088	 add         r3, r3, #0x88
  03fe0	e5933000	 ldr         r3, [r3]
  03fe4	e2833050	 add         r3, r3, #0x50
  03fe8	e1d330b0	 ldrh        r3, [r3]
  03fec	e1a01003	 mov         r1, r3
  03ff0	e59f0c60	 ldr         r0, [pc, #0xC60]
  03ff4	eb000000	 bl          NKDbgPrintfW
  03ff8	e3a03001	 mov         r3, #1
  03ffc	e50b30cc	 str         r3, [r11, #-0xCC]
  04000	ea000001	 b           |$LN88@CommandCom|
  04004		 |$LN87@CommandCom|
  04004	e3a03000	 mov         r3, #0
  04008	e50b30cc	 str         r3, [r11, #-0xCC]
  0400c		 |$LN88@CommandCom|

; 1649 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_RSP5 0x%04X \r\n", m_vpSDIOReg->MMC_RSP5  ));

  0400c	e59f3bc8	 ldr         r3, [pc, #0xBC8]
  04010	e5933440	 ldr         r3, [r3, #0x440]
  04014	e3130a02	 tst         r3, #2, 20
  04018	0a00000a	 beq         |$LN89@CommandCom|
  0401c	e59b3000	 ldr         r3, [r11]
  04020	e2833088	 add         r3, r3, #0x88
  04024	e5933000	 ldr         r3, [r3]
  04028	e2833054	 add         r3, r3, #0x54
  0402c	e1d330b0	 ldrh        r3, [r3]
  04030	e1a01003	 mov         r1, r3
  04034	e59f0c18	 ldr         r0, [pc, #0xC18]
  04038	eb000000	 bl          NKDbgPrintfW
  0403c	e3a03001	 mov         r3, #1
  04040	e50b30c8	 str         r3, [r11, #-0xC8]
  04044	ea000001	 b           |$LN90@CommandCom|
  04048		 |$LN89@CommandCom|
  04048	e3a03000	 mov         r3, #0
  0404c	e50b30c8	 str         r3, [r11, #-0xC8]
  04050		 |$LN90@CommandCom|

; 1650 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_RSP6 0x%04X \r\n", m_vpSDIOReg->MMC_RSP6  ));

  04050	e59f3b84	 ldr         r3, [pc, #0xB84]
  04054	e5933440	 ldr         r3, [r3, #0x440]
  04058	e3130a02	 tst         r3, #2, 20
  0405c	0a00000a	 beq         |$LN91@CommandCom|
  04060	e59b3000	 ldr         r3, [r11]
  04064	e2833088	 add         r3, r3, #0x88
  04068	e5933000	 ldr         r3, [r3]
  0406c	e2833058	 add         r3, r3, #0x58
  04070	e1d330b0	 ldrh        r3, [r3]
  04074	e1a01003	 mov         r1, r3
  04078	e59f0bd0	 ldr         r0, [pc, #0xBD0]
  0407c	eb000000	 bl          NKDbgPrintfW
  04080	e3a03001	 mov         r3, #1
  04084	e50b30c4	 str         r3, [r11, #-0xC4]
  04088	ea000001	 b           |$LN92@CommandCom|
  0408c		 |$LN91@CommandCom|
  0408c	e3a03000	 mov         r3, #0
  04090	e50b30c4	 str         r3, [r11, #-0xC4]
  04094		 |$LN92@CommandCom|

; 1651 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_RSP7 0x%04X \r\n", m_vpSDIOReg->MMC_RSP7  ));

  04094	e59f3b40	 ldr         r3, [pc, #0xB40]
  04098	e5933440	 ldr         r3, [r3, #0x440]
  0409c	e3130a02	 tst         r3, #2, 20
  040a0	0a00000a	 beq         |$LN93@CommandCom|
  040a4	e59b3000	 ldr         r3, [r11]
  040a8	e2833088	 add         r3, r3, #0x88
  040ac	e5933000	 ldr         r3, [r3]
  040b0	e283305c	 add         r3, r3, #0x5C
  040b4	e1d330b0	 ldrh        r3, [r3]
  040b8	e1a01003	 mov         r1, r3
  040bc	e59f0b88	 ldr         r0, [pc, #0xB88]
  040c0	eb000000	 bl          NKDbgPrintfW
  040c4	e3a03001	 mov         r3, #1
  040c8	e50b30c0	 str         r3, [r11, #-0xC0]
  040cc	ea000001	 b           |$LN94@CommandCom|
  040d0		 |$LN93@CommandCom|
  040d0	e3a03000	 mov         r3, #0
  040d4	e50b30c0	 str         r3, [r11, #-0xC0]
  040d8		 |$LN94@CommandCom|

; 1652 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_IOSR 0x%04X \r\n", m_vpSDIOReg->MMC_IOSR  ));

  040d8	e59f3afc	 ldr         r3, [pc, #0xAFC]
  040dc	e5933440	 ldr         r3, [r3, #0x440]
  040e0	e3130a02	 tst         r3, #2, 20
  040e4	0a00000a	 beq         |$LN95@CommandCom|
  040e8	e59b3000	 ldr         r3, [r11]
  040ec	e2833088	 add         r3, r3, #0x88
  040f0	e5933000	 ldr         r3, [r3]
  040f4	e2833060	 add         r3, r3, #0x60
  040f8	e1d330b0	 ldrh        r3, [r3]
  040fc	e1a01003	 mov         r1, r3
  04100	e59f0b40	 ldr         r0, [pc, #0xB40]
  04104	eb000000	 bl          NKDbgPrintfW
  04108	e3a03001	 mov         r3, #1
  0410c	e50b30bc	 str         r3, [r11, #-0xBC]
  04110	ea000001	 b           |$LN96@CommandCom|
  04114		 |$LN95@CommandCom|
  04114	e3a03000	 mov         r3, #0
  04118	e50b30bc	 str         r3, [r11, #-0xBC]
  0411c		 |$LN96@CommandCom|

; 1653 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_SYSC 0x%04X \r\n", m_vpSDIOReg->MMC_SYSC  ));

  0411c	e59f3ab8	 ldr         r3, [pc, #0xAB8]
  04120	e5933440	 ldr         r3, [r3, #0x440]
  04124	e3130a02	 tst         r3, #2, 20
  04128	0a00000a	 beq         |$LN97@CommandCom|
  0412c	e59b3000	 ldr         r3, [r11]
  04130	e2833088	 add         r3, r3, #0x88
  04134	e5933000	 ldr         r3, [r3]
  04138	e2833064	 add         r3, r3, #0x64
  0413c	e1d330b0	 ldrh        r3, [r3]
  04140	e1a01003	 mov         r1, r3
  04144	e59f0af8	 ldr         r0, [pc, #0xAF8]
  04148	eb000000	 bl          NKDbgPrintfW
  0414c	e3a03001	 mov         r3, #1
  04150	e50b30b8	 str         r3, [r11, #-0xB8]
  04154	ea000001	 b           |$LN98@CommandCom|
  04158		 |$LN97@CommandCom|
  04158	e3a03000	 mov         r3, #0
  0415c	e50b30b8	 str         r3, [r11, #-0xB8]
  04160		 |$LN98@CommandCom|

; 1654 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"MMC_SISS 0x%04X \r\n", m_vpSDIOReg->MMC_SISS  ));

  04160	e59f3a74	 ldr         r3, [pc, #0xA74]
  04164	e5933440	 ldr         r3, [r3, #0x440]
  04168	e3130a02	 tst         r3, #2, 20
  0416c	0a00000a	 beq         |$LN99@CommandCom|
  04170	e59b3000	 ldr         r3, [r11]
  04174	e2833088	 add         r3, r3, #0x88
  04178	e5933000	 ldr         r3, [r3]
  0417c	e2833068	 add         r3, r3, #0x68
  04180	e1d330b0	 ldrh        r3, [r3]
  04184	e1a01003	 mov         r1, r3
  04188	e59f0ab0	 ldr         r0, [pc, #0xAB0]
  0418c	eb000000	 bl          NKDbgPrintfW
  04190	e3a03001	 mov         r3, #1
  04194	e50b30b4	 str         r3, [r11, #-0xB4]
  04198	ea000001	 b           |$LN100@CommandCom|
  0419c		 |$LN99@CommandCom|
  0419c	e3a03000	 mov         r3, #0
  041a0	e50b30b4	 str         r3, [r11, #-0xB4]
  041a4		 |$LN100@CommandCom|

; 1655 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"PRCM_PM_WKEN1 0x%04X \r\n", m_vpPRCMReg->ulPM_WKEN1_CORE));

  041a4	e59f3a30	 ldr         r3, [pc, #0xA30]
  041a8	e5933440	 ldr         r3, [r3, #0x440]
  041ac	e3130a02	 tst         r3, #2, 20
  041b0	0a000009	 beq         |$LN101@CommandCom|
  041b4	e59b3000	 ldr         r3, [r11]
  041b8	e283308c	 add         r3, r3, #0x8C
  041bc	e5933000	 ldr         r3, [r3]
  041c0	e2833e2a	 add         r3, r3, #0x2A, 28
  041c4	e5931000	 ldr         r1, [r3]
  041c8	e59f0a6c	 ldr         r0, [pc, #0xA6C]
  041cc	eb000000	 bl          NKDbgPrintfW
  041d0	e3a03001	 mov         r3, #1
  041d4	e50b30b0	 str         r3, [r11, #-0xB0]
  041d8	ea000001	 b           |$LN102@CommandCom|
  041dc		 |$LN101@CommandCom|
  041dc	e3a03000	 mov         r3, #0
  041e0	e50b30b0	 str         r3, [r11, #-0xB0]
  041e4		 |$LN102@CommandCom|

; 1656 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"PRCM_PM_WKST1 0x%04X \r\n", m_vpPRCMReg->ulPM_WKST1_CORE));

  041e4	e59f39f0	 ldr         r3, [pc, #0x9F0]
  041e8	e5933440	 ldr         r3, [r3, #0x440]
  041ec	e3130a02	 tst         r3, #2, 20
  041f0	0a000009	 beq         |$LN103@CommandCom|
  041f4	e59b3000	 ldr         r3, [r11]
  041f8	e283308c	 add         r3, r3, #0x8C
  041fc	e5933000	 ldr         r3, [r3]
  04200	e2833e2b	 add         r3, r3, #0x2B, 28
  04204	e5931000	 ldr         r1, [r3]
  04208	e59f0a28	 ldr         r0, [pc, #0xA28]
  0420c	eb000000	 bl          NKDbgPrintfW
  04210	e3a03001	 mov         r3, #1
  04214	e50b30ac	 str         r3, [r11, #-0xAC]
  04218	ea000001	 b           |$LN104@CommandCom|
  0421c		 |$LN103@CommandCom|
  0421c	e3a03000	 mov         r3, #0
  04220	e50b30ac	 str         r3, [r11, #-0xAC]
  04224		 |$LN104@CommandCom|

; 1657 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"PRCM_PM_AUTOIDEL1 0x%04X \r\n", m_vpPRCMReg->ulCM_AUTOIDLE1_CORE));

  04224	e59f39b0	 ldr         r3, [pc, #0x9B0]
  04228	e5933440	 ldr         r3, [r3, #0x440]
  0422c	e3130a02	 tst         r3, #2, 20
  04230	0a000009	 beq         |$LN105@CommandCom|
  04234	e59b3000	 ldr         r3, [r11]
  04238	e283308c	 add         r3, r3, #0x8C
  0423c	e5933000	 ldr         r3, [r3]
  04240	e2833e23	 add         r3, r3, #0x23, 28
  04244	e5931000	 ldr         r1, [r3]
  04248	e59f09e4	 ldr         r0, [pc, #0x9E4]
  0424c	eb000000	 bl          NKDbgPrintfW
  04250	e3a03001	 mov         r3, #1
  04254	e50b30a8	 str         r3, [r11, #-0xA8]
  04258	ea000001	 b           |$LN106@CommandCom|
  0425c		 |$LN105@CommandCom|
  0425c	e3a03000	 mov         r3, #0
  04260	e50b30a8	 str         r3, [r11, #-0xA8]
  04264		 |$LN106@CommandCom|

; 1658 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"PRCM_PM_FCLKEN1 0x%04X \r\n", m_vpPRCMReg->ulCM_FCLKEN1_CORE));

  04264	e59f3970	 ldr         r3, [pc, #0x970]
  04268	e5933440	 ldr         r3, [r3, #0x440]
  0426c	e3130a02	 tst         r3, #2, 20
  04270	0a000009	 beq         |$LN107@CommandCom|
  04274	e59b3000	 ldr         r3, [r11]
  04278	e283308c	 add         r3, r3, #0x8C
  0427c	e5933000	 ldr         r3, [r3]
  04280	e2833c02	 add         r3, r3, #2, 24
  04284	e5931000	 ldr         r1, [r3]
  04288	e59f09a0	 ldr         r0, [pc, #0x9A0]
  0428c	eb000000	 bl          NKDbgPrintfW
  04290	e3a03001	 mov         r3, #1
  04294	e50b30a4	 str         r3, [r11, #-0xA4]
  04298	ea000001	 b           |$LN108@CommandCom|
  0429c		 |$LN107@CommandCom|
  0429c	e3a03000	 mov         r3, #0
  042a0	e50b30a4	 str         r3, [r11, #-0xA4]
  042a4		 |$LN108@CommandCom|

; 1659 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"PRCM_PM_ICLKEN1 0x%04X \r\n", m_vpPRCMReg->ulCM_ICLKEN1_CORE));

  042a4	e59f3930	 ldr         r3, [pc, #0x930]
  042a8	e5933440	 ldr         r3, [r3, #0x440]
  042ac	e3130a02	 tst         r3, #2, 20
  042b0	0a000009	 beq         |$LN109@CommandCom|
  042b4	e59b3000	 ldr         r3, [r11]
  042b8	e283308c	 add         r3, r3, #0x8C
  042bc	e5933000	 ldr         r3, [r3]
  042c0	e2833e21	 add         r3, r3, #0x21, 28
  042c4	e5931000	 ldr         r1, [r3]
  042c8	e59f095c	 ldr         r0, [pc, #0x95C]
  042cc	eb000000	 bl          NKDbgPrintfW
  042d0	e3a03001	 mov         r3, #1
  042d4	e50b30a0	 str         r3, [r11, #-0xA0]
  042d8	ea000001	 b           |$LN110@CommandCom|
  042dc		 |$LN109@CommandCom|
  042dc	e3a03000	 mov         r3, #0
  042e0	e50b30a0	 str         r3, [r11, #-0xA0]
  042e4		 |$LN110@CommandCom|

; 1660 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"-DebugSDHCRegs-------------------------\r\n"));

  042e4	e59f38f0	 ldr         r3, [pc, #0x8F0]
  042e8	e5933440	 ldr         r3, [r3, #0x440]
  042ec	e3130a02	 tst         r3, #2, 20
  042f0	0a000004	 beq         |$LN111@CommandCom|
  042f4	e59f092c	 ldr         r0, [pc, #0x92C]
  042f8	eb000000	 bl          NKDbgPrintfW
  042fc	e3a03001	 mov         r3, #1
  04300	e50b309c	 str         r3, [r11, #-0x9C]
  04304	ea000001	 b           |$LN112@CommandCom|
  04308		 |$LN111@CommandCom|
  04308	e3a03000	 mov         r3, #0
  0430c	e50b309c	 str         r3, [r11, #-0x9C]
  04310		 |$LN112@CommandCom|

; 1661 :     LeaveCriticalSection( &m_critSec );

  04310	e59b3000	 ldr         r3, [r11]
  04314	e2830014	 add         r0, r3, #0x14
  04318	eb000000	 bl          LeaveCriticalSection

; 1662 : #endif
; 1663 :     
; 1664 :     WORD MMC_STAT = Read_MMC_STAT();

  0431c	e59b0000	 ldr         r0, [r11]
  04320	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|
  04324	e14b09b8	 strh        r0, [r11, #-0x98]
  04328	e15b39b8	 ldrh        r3, [r11, #-0x98]
  0432c	e24bcc01	 sub         r12, r11, #1, 24
  04330	e14c35b0	 strh        r3, [r12, #-0x50]

; 1665 :     if( MMC_STAT & MMC_STAT_CB )

  04334	e24b3c01	 sub         r3, r11, #1, 24
  04338	e15335b0	 ldrh        r3, [r3, #-0x50]
  0433c	e3130004	 tst         r3, #4
  04340	0a0000a8	 beq         |$LN42@CommandCom|

; 1666 :     {
; 1667 :         ASSERT( pRequest->CommandResponse.ResponseType == ResponseR1b );

  04344	e51b314c	 ldr         r3, [r11, #-0x14C]
  04348	e283301c	 add         r3, r3, #0x1C
  0434c	e5933000	 ldr         r3, [r3]
  04350	e3530002	 cmp         r3, #2
  04354	1a000002	 bne         |$LN113@CommandCom|
  04358	e3a03001	 mov         r3, #1
  0435c	e50b3094	 str         r3, [r11, #-0x94]
  04360	ea000008	 b           |$LN114@CommandCom|
  04364		 |$LN113@CommandCom|
  04364	e3a03c06	 mov         r3, #6, 24
  04368	e3833083	 orr         r3, r3, #0x83
  0436c	e59f28a0	 ldr         r2, [pc, #0x8A0]
  04370	e59f1898	 ldr         r1, [pc, #0x898]
  04374	e59f0890	 ldr         r0, [pc, #0x890]
  04378	eb000000	 bl          NKDbgPrintfW
  0437c	e6000010	 __debugbreak_ce
  04380	e3a03000	 mov         r3, #0
  04384	e50b3094	 str         r3, [r11, #-0x94]
  04388		 |$LN114@CommandCom|

; 1668 : 
; 1669 :         if( pRequest->CommandResponse.ResponseType == ResponseR1b )

  04388	e51b314c	 ldr         r3, [r11, #-0x14C]
  0438c	e283301c	 add         r3, r3, #0x1C
  04390	e5933000	 ldr         r3, [r3]
  04394	e3530002	 cmp         r3, #2
  04398	1a000092	 bne         |$LN41@CommandCom|

; 1670 :         {
; 1671 :             DEBUGMSG(SHC_BUSY_STATE_ZONE, (L"CSDIOControllerBase::CommandCompleteHandler: "
; 1672 :                 L"Card in busy state after command!  Delaying...\r\n"));

  0439c	e59f3838	 ldr         r3, [pc, #0x838]
  043a0	e5933440	 ldr         r3, [r3, #0x440]
  043a4	e3130080	 tst         r3, #0x80
  043a8	0a000004	 beq         |$LN115@CommandCom|
  043ac	e59f0870	 ldr         r0, [pc, #0x870]
  043b0	eb000000	 bl          NKDbgPrintfW
  043b4	e3a03001	 mov         r3, #1
  043b8	e50b3090	 str         r3, [r11, #-0x90]
  043bc	ea000001	 b           |$LN116@CommandCom|
  043c0		 |$LN115@CommandCom|
  043c0	e3a03000	 mov         r3, #0
  043c4	e50b3090	 str         r3, [r11, #-0x90]
  043c8		 |$LN116@CommandCom|

; 1673 : 
; 1674 :             // calculate timeout conditions
; 1675 :             dwCountStart = GetTickCount();

  043c8	eb000000	 bl          GetTickCount
  043cc	e50b008c	 str         r0, [r11, #-0x8C]
  043d0	e51b308c	 ldr         r3, [r11, #-0x8C]
  043d4	e50b3148	 str         r3, [r11, #-0x148]

; 1676 :             dwTimeout = dwCountStart + m_dwMaxTimeout;

  043d8	e59b3000	 ldr         r3, [r11]
  043dc	e283307c	 add         r3, r3, #0x7C
  043e0	e51b2148	 ldr         r2, [r11, #-0x148]
  043e4	e5933000	 ldr         r3, [r3]
  043e8	e0823003	 add         r3, r2, r3
  043ec	e50b3138	 str         r3, [r11, #-0x138]

; 1677 :             if( dwTimeout < dwCountStart )

  043f0	e51b2138	 ldr         r2, [r11, #-0x138]
  043f4	e51b3148	 ldr         r3, [r11, #-0x148]
  043f8	e1520003	 cmp         r2, r3
  043fc	2a000001	 bcs         |$LN40@CommandCom|

; 1678 :                 fTimeoutOverflow = TRUE;

  04400	e3a03001	 mov         r3, #1
  04404	e50b3154	 str         r3, [r11, #-0x154]
  04408		 |$LN40@CommandCom|
  04408		 |$LN39@CommandCom|

; 1679 : 
; 1680 :             do {
; 1681 :                 MMC_STAT = Read_MMC_STAT();

  04408	e59b0000	 ldr         r0, [r11]
  0440c	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|
  04410	e14b08b8	 strh        r0, [r11, #-0x88]
  04414	e15b38b8	 ldrh        r3, [r11, #-0x88]
  04418	e24bcc01	 sub         r12, r11, #1, 24
  0441c	e14c35b0	 strh        r3, [r12, #-0x50]

; 1682 : 
; 1683 :                 // check for card ejection
; 1684 :                 if( !SDCardDetect() )

  04420	e59b3000	 ldr         r3, [r11]
  04424	e5933000	 ldr         r3, [r3]
  04428	e2833014	 add         r3, r3, #0x14
  0442c	e59b0000	 ldr         r0, [r11]
  04430	e5933000	 ldr         r3, [r3]
  04434	e1a0e00f	 mov         lr, pc
  04438	e12fff13	 bx          r3
  0443c	e50b0084	 str         r0, [r11, #-0x84]
  04440	e51b3084	 ldr         r3, [r11, #-0x84]
  04444	e3530000	 cmp         r3, #0
  04448	1a00000d	 bne         |$LN36@CommandCom|

; 1685 :                 { 
; 1686 :                     DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::CommandCompleteHandler: "
; 1687 :                         L"Card removed!\r\n"));

  0444c	e59f3788	 ldr         r3, [pc, #0x788]
  04450	e5933440	 ldr         r3, [r3, #0x440]
  04454	e3130902	 tst         r3, #2, 18
  04458	0a000004	 beq         |$LN117@CommandCom|
  0445c	e59f07bc	 ldr         r0, [pc, #0x7BC]
  04460	eb000000	 bl          NKDbgPrintfW
  04464	e3a03001	 mov         r3, #1
  04468	e50b3080	 str         r3, [r11, #-0x80]
  0446c	ea000001	 b           |$LN118@CommandCom|
  04470		 |$LN117@CommandCom|
  04470	e3a03000	 mov         r3, #0
  04474	e50b3080	 str         r3, [r11, #-0x80]
  04478		 |$LN118@CommandCom|

; 1688 :                     status = SD_API_STATUS_DEVICE_REMOVED;

  04478	e3a03147	 mov         r3, #0x47, 2
  0447c	e50b313c	 str         r3, [r11, #-0x13C]

; 1689 :                     goto TRANSFER_DONE;

  04480	ea00012d	 b           |$TRANSFER_DONE$40807|
  04484		 |$LN36@CommandCom|

; 1690 :                 }
; 1691 : 
; 1692 :                 // check for a timeout
; 1693 :                 dwCurrentTickCount = GetTickCount();

  04484	eb000000	 bl          GetTickCount
  04488	e50b007c	 str         r0, [r11, #-0x7C]
  0448c	e51b307c	 ldr         r3, [r11, #-0x7C]
  04490	e50b3140	 str         r3, [r11, #-0x140]

; 1694 :                 if( fTimeoutOverflow ? ( dwTimeout < dwCurrentTickCount && dwCurrentTickCount < dwCountStart )
; 1695 :                     : ( dwTimeout < dwCurrentTickCount || dwCurrentTickCount < dwCountStart ) )

  04494	e51b3154	 ldr         r3, [r11, #-0x154]
  04498	e3530000	 cmp         r3, #0
  0449c	0a00000f	 beq         |$LN123@CommandCom|
  044a0	e51b2138	 ldr         r2, [r11, #-0x138]
  044a4	e51b3140	 ldr         r3, [r11, #-0x140]
  044a8	e1520003	 cmp         r2, r3
  044ac	2a000006	 bcs         |$LN119@CommandCom|
  044b0	e51b2140	 ldr         r2, [r11, #-0x140]
  044b4	e51b3148	 ldr         r3, [r11, #-0x148]
  044b8	e1520003	 cmp         r2, r3
  044bc	2a000002	 bcs         |$LN119@CommandCom|
  044c0	e3a03001	 mov         r3, #1
  044c4	e50b3078	 str         r3, [r11, #-0x78]
  044c8	ea000001	 b           |$LN122@CommandCom|
  044cc		 |$LN119@CommandCom|
  044cc	e3a03000	 mov         r3, #0
  044d0	e50b3078	 str         r3, [r11, #-0x78]
  044d4		 |$LN122@CommandCom|
  044d4	e51b3078	 ldr         r3, [r11, #-0x78]
  044d8	e50b3074	 str         r3, [r11, #-0x74]
  044dc	ea00000e	 b           |$LN124@CommandCom|
  044e0		 |$LN123@CommandCom|
  044e0	e51b2138	 ldr         r2, [r11, #-0x138]
  044e4	e51b3140	 ldr         r3, [r11, #-0x140]
  044e8	e1520003	 cmp         r2, r3
  044ec	3a000006	 bcc         |$LN120@CommandCom|
  044f0	e51b2140	 ldr         r2, [r11, #-0x140]
  044f4	e51b3148	 ldr         r3, [r11, #-0x148]
  044f8	e1520003	 cmp         r2, r3
  044fc	3a000002	 bcc         |$LN120@CommandCom|
  04500	e3a03000	 mov         r3, #0
  04504	e50b3070	 str         r3, [r11, #-0x70]
  04508	ea000001	 b           |$LN121@CommandCom|
  0450c		 |$LN120@CommandCom|
  0450c	e3a03001	 mov         r3, #1
  04510	e50b3070	 str         r3, [r11, #-0x70]
  04514		 |$LN121@CommandCom|
  04514	e51b3070	 ldr         r3, [r11, #-0x70]
  04518	e50b3074	 str         r3, [r11, #-0x74]
  0451c		 |$LN124@CommandCom|
  0451c	e51b3074	 ldr         r3, [r11, #-0x74]
  04520	e3530000	 cmp         r3, #0
  04524	0a00000d	 beq         |$LN34@CommandCom|

; 1696 :                 {
; 1697 :                     DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::CommandCompleteHandler: "
; 1698 :                         L"Card BUSY timeout!\r\n"));

  04528	e59f36ac	 ldr         r3, [pc, #0x6AC]
  0452c	e5933440	 ldr         r3, [r3, #0x440]
  04530	e3130902	 tst         r3, #2, 18
  04534	0a000004	 beq         |$LN125@CommandCom|
  04538	e59f06dc	 ldr         r0, [pc, #0x6DC]
  0453c	eb000000	 bl          NKDbgPrintfW
  04540	e3a03001	 mov         r3, #1
  04544	e50b306c	 str         r3, [r11, #-0x6C]
  04548	ea000001	 b           |$LN126@CommandCom|
  0454c		 |$LN125@CommandCom|
  0454c	e3a03000	 mov         r3, #0
  04550	e50b306c	 str         r3, [r11, #-0x6C]
  04554		 |$LN126@CommandCom|

; 1699 :                     status = SD_API_STATUS_RESPONSE_TIMEOUT;

  04554	e3a03153	 mov         r3, #0x53, 2
  04558	e50b313c	 str         r3, [r11, #-0x13C]

; 1700 :                     goto TRANSFER_DONE;

  0455c	ea0000f6	 b           |$TRANSFER_DONE$40807|
  04560		 |$LN34@CommandCom|

; 1701 :                 }
; 1702 :             } while( !( MMC_STAT & ( MMC_STAT_EOFB | MMC_STAT_CCRC | MMC_STAT_CTO | MMC_STAT_DCRC | MMC_STAT_DTO ) ) );

  04560	e24b3c01	 sub         r3, r11, #1, 24
  04564	e15335b0	 ldrh        r3, [r3, #-0x50]
  04568	e3130e1f	 tst         r3, #0x1F, 28
  0456c	0affffa5	 beq         |$LN39@CommandCom|

; 1703 : 
; 1704 :             DEBUGMSG(SHC_BUSY_STATE_ZONE, (L"CSDIOControllerBase::CommandCompleteHandler: "
; 1705 :                 L"Card exited busy state.\r\n"));

  04570	e59f3664	 ldr         r3, [pc, #0x664]
  04574	e5933440	 ldr         r3, [r3, #0x440]
  04578	e3130080	 tst         r3, #0x80
  0457c	0a000004	 beq         |$LN127@CommandCom|
  04580	e59f0690	 ldr         r0, [pc, #0x690]
  04584	eb000000	 bl          NKDbgPrintfW
  04588	e3a03001	 mov         r3, #1
  0458c	e50b3068	 str         r3, [r11, #-0x68]
  04590	ea000001	 b           |$LN128@CommandCom|
  04594		 |$LN127@CommandCom|
  04594	e3a03000	 mov         r3, #0
  04598	e50b3068	 str         r3, [r11, #-0x68]
  0459c		 |$LN128@CommandCom|

; 1706 :             ASSERT( MMC_STAT & MMC_STAT_EOFB );

  0459c	e24b3c01	 sub         r3, r11, #1, 24
  045a0	e15335b0	 ldrh        r3, [r3, #-0x50]
  045a4	e3130010	 tst         r3, #0x10
  045a8	0a000002	 beq         |$LN129@CommandCom|
  045ac	e3a03001	 mov         r3, #1
  045b0	e50b3064	 str         r3, [r11, #-0x64]
  045b4	ea000008	 b           |$LN130@CommandCom|
  045b8		 |$LN129@CommandCom|
  045b8	e3a03c06	 mov         r3, #6, 24
  045bc	e38330aa	 orr         r3, r3, #0xAA
  045c0	e59f264c	 ldr         r2, [pc, #0x64C]
  045c4	e59f1644	 ldr         r1, [pc, #0x644]
  045c8	e59f063c	 ldr         r0, [pc, #0x63C]
  045cc	eb000000	 bl          NKDbgPrintfW
  045d0	e6000010	 __debugbreak_ce
  045d4	e3a03000	 mov         r3, #0
  045d8	e50b3064	 str         r3, [r11, #-0x64]
  045dc		 |$LN130@CommandCom|

; 1707 :             Write_MMC_STAT( MMC_STAT_CB | MMC_STAT_EOFB );

  045dc	e3a01014	 mov         r1, #0x14
  045e0	e59b0000	 ldr         r0, [r11]
  045e4	eb000000	 bl          |?Write_MMC_STAT@CSDIOControllerBase@@QAAXG@Z|
  045e8		 |$LN41@CommandCom|
  045e8		 |$LN42@CommandCom|

; 1708 :         }
; 1709 :     }
; 1710 :     //    }
; 1711 : 
; 1712 :     WORD MMC_STAT_OVERWRITE = 0;

  045e8	e3a03000	 mov         r3, #0
  045ec	e24bcc01	 sub         r12, r11, #1, 24
  045f0	e14c34b4	 strh        r3, [r12, #-0x44]

; 1713 :     if( MMC_STAT & MMC_STAT_CCRC ) // command CRC error

  045f4	e24b3c01	 sub         r3, r11, #1, 24
  045f8	e15335b0	 ldrh        r3, [r3, #-0x50]
  045fc	e3130c01	 tst         r3, #1, 24
  04600	0a000013	 beq         |$LN32@CommandCom|

; 1714 :     {
; 1715 :         status = SD_API_STATUS_CRC_ERROR;

  04604	e3a03137	 mov         r3, #0x37, 2
  04608	e50b313c	 str         r3, [r11, #-0x13C]

; 1716 :         MMC_STAT_OVERWRITE |= MMC_STAT_CCRC;

  0460c	e24b3c01	 sub         r3, r11, #1, 24
  04610	e15334b4	 ldrh        r3, [r3, #-0x44]
  04614	e3833c01	 orr         r3, r3, #1, 24
  04618	e1a03803	 mov         r3, r3, lsl #16
  0461c	e1a03823	 mov         r3, r3, lsr #16
  04620	e24bcc01	 sub         r12, r11, #1, 24
  04624	e14c34b4	 strh        r3, [r12, #-0x44]

; 1717 :         DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::CommandCompleteHandler: "
; 1718 :             L"Got command CRC error!\r\n"));

  04628	e59f35ac	 ldr         r3, [pc, #0x5AC]
  0462c	e5933440	 ldr         r3, [r3, #0x440]
  04630	e3130902	 tst         r3, #2, 18
  04634	0a000004	 beq         |$LN131@CommandCom|
  04638	e59f05c8	 ldr         r0, [pc, #0x5C8]
  0463c	eb000000	 bl          NKDbgPrintfW
  04640	e3a03001	 mov         r3, #1
  04644	e50b3060	 str         r3, [r11, #-0x60]
  04648	ea000001	 b           |$LN132@CommandCom|
  0464c		 |$LN131@CommandCom|
  0464c	e3a03000	 mov         r3, #0
  04650	e50b3060	 str         r3, [r11, #-0x60]
  04654		 |$LN132@CommandCom|
  04654		 |$LN32@CommandCom|

; 1719 :     }
; 1720 :     if( MMC_STAT & MMC_STAT_CTO ) // command response timeout

  04654	e24b3c01	 sub         r3, r11, #1, 24
  04658	e15335b0	 ldrh        r3, [r3, #-0x50]
  0465c	e3130080	 tst         r3, #0x80
  04660	0a000013	 beq         |$LN31@CommandCom|

; 1721 :     {
; 1722 :         status = SD_API_STATUS_RESPONSE_TIMEOUT;

  04664	e3a03153	 mov         r3, #0x53, 2
  04668	e50b313c	 str         r3, [r11, #-0x13C]

; 1723 :         MMC_STAT_OVERWRITE |= MMC_STAT_CTO;

  0466c	e24b3c01	 sub         r3, r11, #1, 24
  04670	e15334b4	 ldrh        r3, [r3, #-0x44]
  04674	e3833080	 orr         r3, r3, #0x80
  04678	e1a03803	 mov         r3, r3, lsl #16
  0467c	e1a03823	 mov         r3, r3, lsr #16
  04680	e24bcc01	 sub         r12, r11, #1, 24
  04684	e14c34b4	 strh        r3, [r12, #-0x44]

; 1724 :         DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::CommandCompleteHandler: "
; 1725 :             L"Got command response timeout!\r\n"));

  04688	e59f354c	 ldr         r3, [pc, #0x54C]
  0468c	e5933440	 ldr         r3, [r3, #0x440]
  04690	e3130902	 tst         r3, #2, 18
  04694	0a000004	 beq         |$LN133@CommandCom|
  04698	e59f0564	 ldr         r0, [pc, #0x564]
  0469c	eb000000	 bl          NKDbgPrintfW
  046a0	e3a03001	 mov         r3, #1
  046a4	e50b305c	 str         r3, [r11, #-0x5C]
  046a8	ea000001	 b           |$LN134@CommandCom|
  046ac		 |$LN133@CommandCom|
  046ac	e3a03000	 mov         r3, #0
  046b0	e50b305c	 str         r3, [r11, #-0x5C]
  046b4		 |$LN134@CommandCom|
  046b4		 |$LN31@CommandCom|

; 1726 :     }
; 1727 : 
; 1728 :     if( MMC_STAT_OVERWRITE ) // clear the status error bits

  046b4	e24b3c01	 sub         r3, r11, #1, 24
  046b8	e15334b4	 ldrh        r3, [r3, #-0x44]
  046bc	e3530000	 cmp         r3, #0
  046c0	0a000004	 beq         |$LN30@CommandCom|

; 1729 :     {
; 1730 :         Write_MMC_STAT(MMC_STAT_OVERWRITE);

  046c4	e24b1c01	 sub         r1, r11, #1, 24
  046c8	e15114b4	 ldrh        r1, [r1, #-0x44]
  046cc	e59b0000	 ldr         r0, [r11]
  046d0	eb000000	 bl          |?Write_MMC_STAT@CSDIOControllerBase@@QAAXG@Z|

; 1731 :         goto TRANSFER_DONE;

  046d4	ea000098	 b           |$TRANSFER_DONE$40807|
  046d8		 |$LN30@CommandCom|

; 1732 :     }
; 1733 : 
; 1734 :     // get the response information
; 1735 :     if(pRequest->CommandResponse.ResponseType == NoResponse)

  046d8	e51b314c	 ldr         r3, [r11, #-0x14C]
  046dc	e283301c	 add         r3, r3, #0x1C
  046e0	e5933000	 ldr         r3, [r3]
  046e4	e3530000	 cmp         r3, #0
  046e8	1a00000c	 bne         |$LN28@CommandCom|

; 1736 :     {
; 1737 :         DEBUGMSG (SHC_SDBUS_INTERACT_ZONE,(L"CSDIOControllerBase::CommandCompleteHandler: "
; 1738 :             L"GetCmdResponse returned no response (no response expected)\r\n"));

  046ec	e59f34e8	 ldr         r3, [pc, #0x4E8]
  046f0	e5933440	 ldr         r3, [r3, #0x440]
  046f4	e3130040	 tst         r3, #0x40
  046f8	0a000004	 beq         |$LN135@CommandCom|
  046fc	e59f04fc	 ldr         r0, [pc, #0x4FC]
  04700	eb000000	 bl          NKDbgPrintfW
  04704	e3a03001	 mov         r3, #1
  04708	e50b3058	 str         r3, [r11, #-0x58]
  0470c	ea000001	 b           |$LN136@CommandCom|
  04710		 |$LN135@CommandCom|
  04710	e3a03000	 mov         r3, #0
  04714	e50b3058	 str         r3, [r11, #-0x58]
  04718		 |$LN136@CommandCom|

; 1739 :         goto TRANSFER_DONE;

  04718	ea000087	 b           |$TRANSFER_DONE$40807|

; 1740 :     }
; 1741 :     else{

  0471c	ea000018	 b           |$LN26@CommandCom|
  04720		 |$LN28@CommandCom|

; 1742 : 
; 1743 :         status =  GetCommandResponse(pRequest);

  04720	e51b114c	 ldr         r1, [r11, #-0x14C]
  04724	e59b0000	 ldr         r0, [r11]
  04728	eb000000	 bl          |?GetCommandResponse@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z|
  0472c	e50b0054	 str         r0, [r11, #-0x54]
  04730	e51b3054	 ldr         r3, [r11, #-0x54]
  04734	e50b313c	 str         r3, [r11, #-0x13C]

; 1744 : 
; 1745 :         if(!SD_API_SUCCESS(status))

  04738	e51b313c	 ldr         r3, [r11, #-0x13C]
  0473c	e3530000	 cmp         r3, #0
  04740	aa00000f	 bge         |$LN25@CommandCom|

; 1746 :         {
; 1747 :             DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::CommandCompleteHandler: "
; 1748 :                 L"Error getting response for command:0x%02x\r\n", pRequest->CommandCode
; 1749 :             ));

  04744	e59f3490	 ldr         r3, [pc, #0x490]
  04748	e5933440	 ldr         r3, [r3, #0x440]
  0474c	e3130902	 tst         r3, #2, 18
  04750	0a000008	 beq         |$LN137@CommandCom|
  04754	e51b314c	 ldr         r3, [r11, #-0x14C]
  04758	e2833014	 add         r3, r3, #0x14
  0475c	e5d33000	 ldrb        r3, [r3]
  04760	e1a01003	 mov         r1, r3
  04764	e59f0490	 ldr         r0, [pc, #0x490]
  04768	eb000000	 bl          NKDbgPrintfW
  0476c	e3a03001	 mov         r3, #1
  04770	e50b3050	 str         r3, [r11, #-0x50]
  04774	ea000001	 b           |$LN138@CommandCom|
  04778		 |$LN137@CommandCom|
  04778	e3a03000	 mov         r3, #0
  0477c	e50b3050	 str         r3, [r11, #-0x50]
  04780		 |$LN138@CommandCom|

; 1750 :             goto TRANSFER_DONE;     

  04780	ea00006d	 b           |$TRANSFER_DONE$40807|
  04784		 |$LN25@CommandCom|
  04784		 |$LN26@CommandCom|

; 1751 :         }
; 1752 :     }
; 1753 : 
; 1754 :     if (SD_COMMAND != pRequest->TransferClass) // data transfer

  04784	e51b314c	 ldr         r3, [r11, #-0x14C]
  04788	e2833010	 add         r3, r3, #0x10
  0478c	e5933000	 ldr         r3, [r3]
  04790	e3530002	 cmp         r3, #2
  04794	0a000068	 beq         |$LN23@CommandCom|

; 1755 :     {
; 1756 :         DWORD cbTransfer = TRANSFER_SIZE(pRequest);

  04798	e51b314c	 ldr         r3, [r11, #-0x14C]
  0479c	e2832040	 add         r2, r3, #0x40
  047a0	e51b314c	 ldr         r3, [r11, #-0x14C]
  047a4	e283303c	 add         r3, r3, #0x3C
  047a8	e5922000	 ldr         r2, [r2]
  047ac	e5933000	 ldr         r3, [r3]
  047b0	e0030392	 mul         r3, r2, r3
  047b4	e50b3134	 str         r3, [r11, #-0x134]

; 1757 :         BOOL     fRet;
; 1758 : 
; 1759 :         switch(pRequest->TransferClass)

  047b8	e51b314c	 ldr         r3, [r11, #-0x14C]
  047bc	e2833010	 add         r3, r3, #0x10
  047c0	e5933000	 ldr         r3, [r3]
  047c4	e50b304c	 str         r3, [r11, #-0x4C]
  047c8	e51b304c	 ldr         r3, [r11, #-0x4C]
  047cc	e3530000	 cmp         r3, #0
  047d0	0a000003	 beq         |$LN20@CommandCom|
  047d4	e51b304c	 ldr         r3, [r11, #-0x4C]
  047d8	e3530001	 cmp         r3, #1
  047dc	0a00001d	 beq         |$LN15@CommandCom|
  047e0	ea000053	 b           |$LN21@CommandCom|
  047e4		 |$LN20@CommandCom|
  047e4		 |$LN158@CommandCom|

; 1760 :         {
; 1761 :         case SD_READ:
; 1762 :             __try {
; 1763 :                 fRet = SDIReceive(pRequest->pBlockBuffer, cbTransfer);

  047e4	e51b2134	 ldr         r2, [r11, #-0x134]
  047e8	e51b314c	 ldr         r3, [r11, #-0x14C]
  047ec	e2833048	 add         r3, r3, #0x48
  047f0	e5931000	 ldr         r1, [r3]
  047f4	e59b0000	 ldr         r0, [r11]
  047f8	eb000000	 bl          |?SDIReceive@CSDIOControllerBase@@QAAHPAEK@Z|
  047fc	e50b0048	 str         r0, [r11, #-0x48]
  04800	e51b3048	 ldr         r3, [r11, #-0x48]
  04804	e50b3130	 str         r3, [r11, #-0x130]
  04808		 |$LN159@CommandCom|

; 1764 :             }

  04808	ea000002	 b           |$LN160@CommandCom|
  0480c		 |$LN155@CommandCom|

; 1766 :                 fRet = FALSE;

  0480c	e3a03000	 mov         r3, #0
  04810	e50b3130	 str         r3, [r11, #-0x130]
  04814	eaffffff	 b           |$LN160@CommandCom|
  04818		 |$LN160@CommandCom|

; 1767 :             }
; 1768 : 
; 1769 :             if(!fRet)

  04818	e51b3130	 ldr         r3, [r11, #-0x130]
  0481c	e3530000	 cmp         r3, #0
  04820	1a00000b	 bne         |$LN18@CommandCom|

; 1770 :             {
; 1771 :                 DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::CommandCompleteHandler: "
; 1772 :                     L"SDIPollingReceive() failed\r\n"
; 1773 :                 ));

  04824	e59f33b0	 ldr         r3, [pc, #0x3B0]
  04828	e5933440	 ldr         r3, [r3, #0x440]
  0482c	e3130902	 tst         r3, #2, 18
  04830	0a000004	 beq         |$LN139@CommandCom|
  04834	e59f03bc	 ldr         r0, [pc, #0x3BC]
  04838	eb000000	 bl          NKDbgPrintfW
  0483c	e3a03001	 mov         r3, #1
  04840	e50b303c	 str         r3, [r11, #-0x3C]
  04844	ea000001	 b           |$LN140@CommandCom|
  04848		 |$LN139@CommandCom|
  04848	e3a03000	 mov         r3, #0
  0484c	e50b303c	 str         r3, [r11, #-0x3C]
  04850		 |$LN140@CommandCom|

; 1774 :                 goto TRANSFER_DONE;

  04850	ea000039	 b           |$TRANSFER_DONE$40807|
  04854		 |$LN18@CommandCom|

; 1775 :             }
; 1776 :             else
; 1777 :             {
; 1778 : #ifdef ENABLE_DEBUG
; 1779 :                 DWORD dwTemp = 0;
; 1780 :                 while( dwTemp < cbTransfer && (dwTemp < (HEXBUFSIZE / 2 - 1) ) )
; 1781 :                 {
; 1782 :                     szHexBuf[dwTemp*2] = pRequest->pBlockBuffer[dwTemp] / 16;
; 1783 :                     szHexBuf[dwTemp*2+1] = pRequest->pBlockBuffer[dwTemp] % 16;
; 1784 : 
; 1785 :                     if( szHexBuf[dwTemp*2] < 10 )
; 1786 :                         szHexBuf[dwTemp*2] += '0';
; 1787 :                     else
; 1788 :                         szHexBuf[dwTemp*2] += 'a' - 10;
; 1789 : 
; 1790 :                     if( szHexBuf[dwTemp*2+1] < 10 )
; 1791 :                         szHexBuf[dwTemp*2+1] += '0';
; 1792 :                     else
; 1793 :                         szHexBuf[dwTemp*2+1] += 'a' - 10;
; 1794 : 
; 1795 :                     dwTemp++;
; 1796 :                 }
; 1797 :                 szHexBuf[dwTemp*2] = 0;
; 1798 :                 DEBUGMSG (SHC_SDBUS_INTERACT_ZONE, (L"CSDIOControllerBase::CommandCompleteHandler: "
; 1799 :                     L"PollingReceive succesfully received %d bytes {%S}\r\n", cbTransfer, szHexBuf
; 1800 :                 ));
; 1801 : #endif
; 1802 :             }
; 1803 :             break;

  04854	ea000036	 b           |$LN21@CommandCom|
  04858		 |$LN15@CommandCom|
  04858		 |$LN165@CommandCom|

; 1804 : 
; 1805 :         case SD_WRITE:
; 1806 :             {
; 1807 : #ifdef ENABLE_DEBUG
; 1808 :                 DWORD dwTemp = 0;
; 1809 :                 while( dwTemp < cbTransfer && (dwTemp < (HEXBUFSIZE / 2 - 1) ) )
; 1810 :                 {
; 1811 :                     szHexBuf[dwTemp*2] = pRequest->pBlockBuffer[dwTemp] / 16;
; 1812 :                     szHexBuf[dwTemp*2+1] = pRequest->pBlockBuffer[dwTemp] % 16;
; 1813 : 
; 1814 :                     if( szHexBuf[dwTemp*2] < 10 )
; 1815 :                         szHexBuf[dwTemp*2] += '0';
; 1816 :                     else
; 1817 :                         szHexBuf[dwTemp*2] += 'a' - 10;
; 1818 : 
; 1819 :                     if( szHexBuf[dwTemp*2+1] < 10 )
; 1820 :                         szHexBuf[dwTemp*2+1] += '0';
; 1821 :                     else
; 1822 :                         szHexBuf[dwTemp*2+1] += 'a' - 10;
; 1823 : 
; 1824 :                     dwTemp++;
; 1825 :                 }
; 1826 :                 szHexBuf[dwTemp*2] = 0;
; 1827 : #endif
; 1828 :             }
; 1829 : 
; 1830 :             __try {
; 1831 :                 fRet = SDITransmit(pRequest->pBlockBuffer, cbTransfer);

  04858	e51b2134	 ldr         r2, [r11, #-0x134]
  0485c	e51b314c	 ldr         r3, [r11, #-0x14C]
  04860	e2833048	 add         r3, r3, #0x48
  04864	e5931000	 ldr         r1, [r3]
  04868	e59b0000	 ldr         r0, [r11]
  0486c	eb000000	 bl          |?SDITransmit@CSDIOControllerBase@@QAAHPAEK@Z|
  04870	e50b0038	 str         r0, [r11, #-0x38]
  04874	e51b3038	 ldr         r3, [r11, #-0x38]
  04878	e50b3130	 str         r3, [r11, #-0x130]
  0487c		 |$LN166@CommandCom|

; 1832 :             }

  0487c	ea000002	 b           |$LN167@CommandCom|
  04880		 |$LN162@CommandCom|

; 1834 :                 fRet = FALSE;

  04880	e3a03000	 mov         r3, #0
  04884	e50b3130	 str         r3, [r11, #-0x130]
  04888	eaffffff	 b           |$LN167@CommandCom|
  0488c		 |$LN167@CommandCom|

; 1835 :             }
; 1836 : 
; 1837 :             if( !fRet )

  0488c	e51b3130	 ldr         r3, [r11, #-0x130]
  04890	e3530000	 cmp         r3, #0
  04894	1a000019	 bne         |$LN13@CommandCom|

; 1838 :             {
; 1839 :                 DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::CommandCompleteHandler: "
; 1840 :                     L"SDIPollingTransmit() failed\r\n"));

  04898	e59f333c	 ldr         r3, [pc, #0x33C]
  0489c	e5933440	 ldr         r3, [r3, #0x440]
  048a0	e3130902	 tst         r3, #2, 18
  048a4	0a000004	 beq         |$LN141@CommandCom|
  048a8	e59f0344	 ldr         r0, [pc, #0x344]
  048ac	eb000000	 bl          NKDbgPrintfW
  048b0	e3a03001	 mov         r3, #1
  048b4	e50b302c	 str         r3, [r11, #-0x2C]
  048b8	ea000001	 b           |$LN142@CommandCom|
  048bc		 |$LN141@CommandCom|
  048bc	e3a03000	 mov         r3, #0
  048c0	e50b302c	 str         r3, [r11, #-0x2C]
  048c4		 |$LN142@CommandCom|

; 1841 :                 DEBUGMSG (SHC_SDBUS_INTERACT_ZONE, (L"CSDIOControllerBase::CommandCompleteHandler: "
; 1842 :                     L"PollingTransmit failed to send %d bytes {%S}\r\n", cbTransfer, szHexBuf
; 1843 :                 ));

  048c4	e59f3310	 ldr         r3, [pc, #0x310]
  048c8	e5933440	 ldr         r3, [r3, #0x440]
  048cc	e3130040	 tst         r3, #0x40
  048d0	0a000006	 beq         |$LN143@CommandCom|
  048d4	e59f2310	 ldr         r2, [pc, #0x310]
  048d8	e51b1134	 ldr         r1, [r11, #-0x134]
  048dc	e59f030c	 ldr         r0, [pc, #0x30C]
  048e0	eb000000	 bl          NKDbgPrintfW
  048e4	e3a03001	 mov         r3, #1
  048e8	e50b3028	 str         r3, [r11, #-0x28]
  048ec	ea000001	 b           |$LN144@CommandCom|
  048f0		 |$LN143@CommandCom|
  048f0	e3a03000	 mov         r3, #0
  048f4	e50b3028	 str         r3, [r11, #-0x28]
  048f8		 |$LN144@CommandCom|

; 1844 :                 goto TRANSFER_DONE;

  048f8	ea00000f	 b           |$TRANSFER_DONE$40807|

; 1845 :             }
; 1846 :             else

  048fc	ea00000c	 b           |$LN11@CommandCom|
  04900		 |$LN13@CommandCom|

; 1847 :             {
; 1848 :                 DEBUGMSG (SHC_SDBUS_INTERACT_ZONE, (L"CSDIOControllerBase::CommandCompleteHandler: "
; 1849 :                     L"PollingTransmit succesfully sent %d bytes {%S}\r\n", cbTransfer, szHexBuf
; 1850 :                 ));

  04900	e59f32d4	 ldr         r3, [pc, #0x2D4]
  04904	e5933440	 ldr         r3, [r3, #0x440]
  04908	e3130040	 tst         r3, #0x40
  0490c	0a000006	 beq         |$LN145@CommandCom|
  04910	e59f22d4	 ldr         r2, [pc, #0x2D4]
  04914	e51b1134	 ldr         r1, [r11, #-0x134]
  04918	e59f02c8	 ldr         r0, [pc, #0x2C8]
  0491c	eb000000	 bl          NKDbgPrintfW
  04920	e3a03001	 mov         r3, #1
  04924	e50b3024	 str         r3, [r11, #-0x24]
  04928	ea000001	 b           |$LN146@CommandCom|
  0492c		 |$LN145@CommandCom|
  0492c	e3a03000	 mov         r3, #0
  04930	e50b3024	 str         r3, [r11, #-0x24]
  04934		 |$LN146@CommandCom|
  04934		 |$LN11@CommandCom|
  04934		 |$LN21@CommandCom|

; 1851 :             }
; 1852 : 
; 1853 :             break;
; 1854 :         }
; 1855 :         status = SD_API_STATUS_SUCCESS;

  04934	e3a03000	 mov         r3, #0
  04938	e50b313c	 str         r3, [r11, #-0x13C]
  0493c		 |$LN23@CommandCom|
  0493c		 |$TRANSFER_DONE$40807|

; 1856 :     }
; 1857 : 
; 1858 : TRANSFER_DONE:
; 1859 :     if( pRequest != NULL )

  0493c	e51b314c	 ldr         r3, [r11, #-0x14C]
  04940	e3530000	 cmp         r3, #0
  04944	0a00002a	 beq         |$LN10@CommandCom|

; 1860 :     {
; 1861 :         if ( ( !( m_fAppCmdMode ) ) && 
; 1862 :             ( (pRequest->CommandCode == SD_CMD_IO_RW_DIRECT) || 
; 1863 :             (pRequest->CommandCode == SD_CMD_IO_RW_EXTENDED) ) )

  04948	e59b3000	 ldr         r3, [r11]
  0494c	e2833044	 add         r3, r3, #0x44
  04950	e5933000	 ldr         r3, [r3]
  04954	e3530000	 cmp         r3, #0
  04958	1a000015	 bne         |$LN9@CommandCom|
  0495c	e51b314c	 ldr         r3, [r11, #-0x14C]
  04960	e2833014	 add         r3, r3, #0x14
  04964	e5d33000	 ldrb        r3, [r3]
  04968	e3530034	 cmp         r3, #0x34
  0496c	0a000004	 beq         |$LN8@CommandCom|
  04970	e51b314c	 ldr         r3, [r11, #-0x14C]
  04974	e2833014	 add         r3, r3, #0x14
  04978	e5d33000	 ldrb        r3, [r3]
  0497c	e3530035	 cmp         r3, #0x35
  04980	1a00000b	 bne         |$LN9@CommandCom|
  04984		 |$LN8@CommandCom|

; 1864 :         {
; 1865 :             Write_MMC_SDIO( Read_MMC_SDIO() & ~( BIT15 | BIT6 ) );

  04984	e59b0000	 ldr         r0, [r11]
  04988	eb000000	 bl          |?Read_MMC_SDIO@CSDIOControllerBase@@QAAGXZ|
  0498c	e14b02b0	 strh        r0, [r11, #-0x20]
  04990	e15b32b0	 ldrh        r3, [r11, #-0x20]
  04994	e1a02003	 mov         r2, r3
  04998	e3e03902	 mvn         r3, #2, 18
  0499c	e2233040	 eor         r3, r3, #0x40
  049a0	e0023003	 and         r3, r2, r3
  049a4	e1a01803	 mov         r1, r3, lsl #16
  049a8	e1a01821	 mov         r1, r1, lsr #16
  049ac	e59b0000	 ldr         r0, [r11]
  049b0	eb000000	 bl          |?Write_MMC_SDIO@CSDIOControllerBase@@QAAXG@Z|
  049b4		 |$LN9@CommandCom|

; 1866 :         }
; 1867 : 
; 1868 :         if( pRequest->CommandResponse.ResponseType == ResponseR4 )

  049b4	e51b314c	 ldr         r3, [r11, #-0x14C]
  049b8	e283301c	 add         r3, r3, #0x1C
  049bc	e5933000	 ldr         r3, [r3]
  049c0	e3530005	 cmp         r3, #5
  049c4	1a00000a	 bne         |$LN7@CommandCom|

; 1869 :         {
; 1870 :             Write_MMC_SDIO( Read_MMC_SDIO() & ~( BIT7 ) );

  049c8	e59b0000	 ldr         r0, [r11]
  049cc	eb000000	 bl          |?Read_MMC_SDIO@CSDIOControllerBase@@QAAGXZ|
  049d0	e14b01be	 strh        r0, [r11, #-0x1E]
  049d4	e15b31be	 ldrh        r3, [r11, #-0x1E]
  049d8	e1a02003	 mov         r2, r3
  049dc	e3e03080	 mvn         r3, #0x80
  049e0	e0023003	 and         r3, r2, r3
  049e4	e1a01803	 mov         r1, r3, lsl #16
  049e8	e1a01821	 mov         r1, r1, lsr #16
  049ec	e59b0000	 ldr         r0, [r11]
  049f0	eb000000	 bl          |?Write_MMC_SDIO@CSDIOControllerBase@@QAAXG@Z|
  049f4		 |$LN7@CommandCom|
  049f4		 |$LN10@CommandCom|

; 1871 :         }
; 1872 :     }
; 1873 : 
; 1874 :     if( status == SD_API_STATUS_SUCCESS )

  049f4	e51b313c	 ldr         r3, [r11, #-0x13C]
  049f8	e3530000	 cmp         r3, #0
  049fc	1a000042	 bne         |$LN6@CommandCom|

; 1875 :     {
; 1876 :         if( m_fAppCmdMode )

  04a00	e59b3000	 ldr         r3, [r11]
  04a04	e2833044	 add         r3, r3, #0x44
  04a08	e5933000	 ldr         r3, [r3]
  04a0c	e3530000	 cmp         r3, #0
  04a10	0a00000f	 beq         |$LN5@CommandCom|

; 1877 :         {
; 1878 :             m_fAppCmdMode = FALSE;

  04a14	e59b3000	 ldr         r3, [r11]
  04a18	e2832044	 add         r2, r3, #0x44
  04a1c	e3a03000	 mov         r3, #0
  04a20	e5823000	 str         r3, [r2]

; 1879 :             DEBUGMSG(SHC_SEND_ZONE, (L"CSDIOControllerBase::CommandCompleteHandler: "
; 1880 :                 L"Switched to Standard Command Mode\r\n"));

  04a24	e59f31b0	 ldr         r3, [pc, #0x1B0]
  04a28	e5933440	 ldr         r3, [r3, #0x440]
  04a2c	e3130002	 tst         r3, #2
  04a30	0a000004	 beq         |$LN147@CommandCom|
  04a34	e59f01a8	 ldr         r0, [pc, #0x1A8]
  04a38	eb000000	 bl          NKDbgPrintfW
  04a3c	e3a03001	 mov         r3, #1
  04a40	e50b301c	 str         r3, [r11, #-0x1C]
  04a44	ea000001	 b           |$LN148@CommandCom|
  04a48		 |$LN147@CommandCom|
  04a48	e3a03000	 mov         r3, #0
  04a4c	e50b301c	 str         r3, [r11, #-0x1C]
  04a50		 |$LN148@CommandCom|

; 1881 :         }
; 1882 :         else if( pRequest && pRequest->CommandCode == 55 )

  04a50	ea000016	 b           |$LN4@CommandCom|
  04a54		 |$LN5@CommandCom|
  04a54	e51b314c	 ldr         r3, [r11, #-0x14C]
  04a58	e3530000	 cmp         r3, #0
  04a5c	0a000013	 beq         |$LN3@CommandCom|
  04a60	e51b314c	 ldr         r3, [r11, #-0x14C]
  04a64	e2833014	 add         r3, r3, #0x14
  04a68	e5d33000	 ldrb        r3, [r3]
  04a6c	e3530037	 cmp         r3, #0x37
  04a70	1a00000e	 bne         |$LN3@CommandCom|

; 1883 :         {
; 1884 :             m_fAppCmdMode = TRUE;

  04a74	e59b3000	 ldr         r3, [r11]
  04a78	e2832044	 add         r2, r3, #0x44
  04a7c	e3a03001	 mov         r3, #1
  04a80	e5823000	 str         r3, [r2]

; 1885 :             DEBUGMSG(SHC_SEND_ZONE, (L"CSDIOControllerBase::CommandCompleteHandler: "
; 1886 :                 L"Switched to Application Specific Command Mode\r\n"));

  04a84	e59f3150	 ldr         r3, [pc, #0x150]
  04a88	e5933440	 ldr         r3, [r3, #0x440]
  04a8c	e3130002	 tst         r3, #2
  04a90	0a000004	 beq         |$LN149@CommandCom|
  04a94	e59f0144	 ldr         r0, [pc, #0x144]
  04a98	eb000000	 bl          NKDbgPrintfW
  04a9c	e3a03001	 mov         r3, #1
  04aa0	e50b3018	 str         r3, [r11, #-0x18]
  04aa4	ea000001	 b           |$LN150@CommandCom|
  04aa8		 |$LN149@CommandCom|
  04aa8	e3a03000	 mov         r3, #0
  04aac	e50b3018	 str         r3, [r11, #-0x18]
  04ab0		 |$LN150@CommandCom|
  04ab0		 |$LN3@CommandCom|
  04ab0		 |$LN4@CommandCom|

; 1887 :         }
; 1888 : 
; 1889 :         if( pRequest && pRequest->CommandCode == SD_CMD_MMC_SEND_OPCOND )

  04ab0	e51b314c	 ldr         r3, [r11, #-0x14C]
  04ab4	e3530000	 cmp         r3, #0
  04ab8	0a000013	 beq         |$LN2@CommandCom|
  04abc	e51b314c	 ldr         r3, [r11, #-0x14C]
  04ac0	e2833014	 add         r3, r3, #0x14
  04ac4	e5d33000	 ldrb        r3, [r3]
  04ac8	e3530001	 cmp         r3, #1
  04acc	1a00000e	 bne         |$LN2@CommandCom|

; 1890 :         {
; 1891 :             DEBUGMSG(SHC_SDBUS_INTERACT_ZONE, (L"CSDIOControllerBase::CommandCompleteHandler: "
; 1892 :                 L"Card is recognized as a MMC\r\n"
; 1893 :             ));

  04ad0	e59f3104	 ldr         r3, [pc, #0x104]
  04ad4	e5933440	 ldr         r3, [r3, #0x440]
  04ad8	e3130040	 tst         r3, #0x40
  04adc	0a000004	 beq         |$LN151@CommandCom|
  04ae0	e59f00f0	 ldr         r0, [pc, #0xF0]
  04ae4	eb000000	 bl          NKDbgPrintfW
  04ae8	e3a03001	 mov         r3, #1
  04aec	e50b3014	 str         r3, [r11, #-0x14]
  04af0	ea000001	 b           |$LN152@CommandCom|
  04af4		 |$LN151@CommandCom|
  04af4	e3a03000	 mov         r3, #0
  04af8	e50b3014	 str         r3, [r11, #-0x14]
  04afc		 |$LN152@CommandCom|

; 1894 :             m_fMMCMode = TRUE;

  04afc	e59b3000	 ldr         r3, [r11]
  04b00	e2832040	 add         r2, r3, #0x40
  04b04	e3a03001	 mov         r3, #1
  04b08	e5823000	 str         r3, [r2]
  04b0c		 |$LN2@CommandCom|
  04b0c		 |$LN6@CommandCom|

; 1895 :         }
; 1896 :     }
; 1897 : 
; 1898 :     // Clear the MMC_STAT register
; 1899 :     Write_MMC_STAT( Read_MMC_STAT() & (~MMC_STAT_CIRQ) );

  04b0c	e59b0000	 ldr         r0, [r11]
  04b10	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|
  04b14	e14b01b0	 strh        r0, [r11, #-0x10]
  04b18	e15b31b0	 ldrh        r3, [r11, #-0x10]
  04b1c	e1a02003	 mov         r2, r3
  04b20	e3e03a02	 mvn         r3, #2, 20
  04b24	e0023003	 and         r3, r2, r3
  04b28	e1a01803	 mov         r1, r3, lsl #16
  04b2c	e1a01821	 mov         r1, r1, lsr #16
  04b30	e59b0000	 ldr         r0, [r11]
  04b34	eb000000	 bl          |?Write_MMC_STAT@CSDIOControllerBase@@QAAXG@Z|

; 1900 : 
; 1901 :     ClockOff();

  04b38	e59b0000	 ldr         r0, [r11]
  04b3c	eb000000	 bl          |?ClockOff@CSDIOControllerBase@@QAAXXZ|

; 1902 :     if( pRequest != NULL )

  04b40	e51b314c	 ldr         r3, [r11, #-0x14C]
  04b44	e3530000	 cmp         r3, #0
  04b48	0a000008	 beq         |$LN1@CommandCom|

; 1903 :     {
; 1904 :         IndicateBusRequestComplete(pRequest, status);

  04b4c	e51b213c	 ldr         r2, [r11, #-0x13C]
  04b50	e51b114c	 ldr         r1, [r11, #-0x14C]
  04b54	e59b3000	 ldr         r3, [r11]
  04b58	e5933000	 ldr         r3, [r3]
  04b5c	e2833004	 add         r3, r3, #4
  04b60	e59b0000	 ldr         r0, [r11]
  04b64	e5933000	 ldr         r3, [r3]
  04b68	e1a0e00f	 mov         lr, pc
  04b6c	e12fff13	 bx          r3
  04b70		 |$LN1@CommandCom|

; 1905 :     }
; 1906 :     return TRUE;

  04b70	e3a03001	 mov         r3, #1
  04b74	e50b3124	 str         r3, [r11, #-0x124]
  04b78		 |$LN153@CommandCom|

; 1907 : }

  04b78	e51b0124	 ldr         r0, [r11, #-0x124]
  04b7c	e24bd00c	 sub         sp, r11, #0xC
  04b80	e89d6800	 ldmia       sp, {r11, sp, lr}
  04b84	e12fff1e	 bx          lr

			 ENDP  ; |?CommandCompleteHandler@CSDIOControllerBase@@QAAHXZ|, CSDIOControllerBase::CommandCompleteHandler

  04b88		 |$LN161@CommandCom|
  04b88		 |$LN171@CommandCom|

; 1833 :             __except(SDProcessException(GetExceptionInformation())) {

  04b88	e52de004	 str         lr, [sp, #-4]!
  04b8c	e24bb004	 sub         r11, r11, #4
  04b90		 |$LN164@CommandCom|
  04b90		 |$LN175@CommandCom|
  04b90	e50b0128	 str         r0, [r11, #-0x128]
  04b94	e51b3128	 ldr         r3, [r11, #-0x128]
  04b98	e50b3034	 str         r3, [r11, #-0x34]
  04b9c	e51b0034	 ldr         r0, [r11, #-0x34]
  04ba0	eb000000	 bl          SDProcessException
  04ba4	e50b0030	 str         r0, [r11, #-0x30]
  04ba8	e51b0030	 ldr         r0, [r11, #-0x30]
  04bac		 |$LN163@CommandCom|
  04bac	e49df004	 ldr         pc, [sp], #4
  04bb0		 |$LN176@CommandCom|
  04bb0		 |$LN154@CommandCom|
  04bb0		 |$LN173@CommandCom|

; 1765 :             __except(SDProcessException(GetExceptionInformation())) {

  04bb0	e52de004	 str         lr, [sp, #-4]!
  04bb4	e24bb004	 sub         r11, r11, #4
  04bb8		 |$LN157@CommandCom|
  04bb8		 |$LN177@CommandCom|
  04bb8	e50b012c	 str         r0, [r11, #-0x12C]
  04bbc	e51b312c	 ldr         r3, [r11, #-0x12C]
  04bc0	e50b3044	 str         r3, [r11, #-0x44]
  04bc4	e51b0044	 ldr         r0, [r11, #-0x44]
  04bc8	eb000000	 bl          SDProcessException
  04bcc	e50b0040	 str         r0, [r11, #-0x40]
  04bd0	e51b0040	 ldr         r0, [r11, #-0x40]
  04bd4		 |$LN156@CommandCom|
  04bd4	e49df004	 ldr         pc, [sp], #4
  04bd8		 |$LN179@CommandCom|
  04bd8		 |$LN180@CommandCom|
  04bd8	00000000	 DCD         |??_C@_1JG@CBKMAJJG@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@|
  04bdc		 |$LN181@CommandCom|
  04bdc	00000000	 DCD         |dpCurSettings|
  04be0		 |$LN182@CommandCom|
  04be0	00000000	 DCD         |??_C@_1LK@ECIBEGHL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@|
  04be4		 |$LN183@CommandCom|
  04be4	00000000	 DCD         |??_C@_1KC@GKAOMAEO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@|
  04be8		 |$LN184@CommandCom|
  04be8	00000000	 DCD         |??_C@_1LM@HOOBBKGP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@|
  04bec		 |$LN185@CommandCom|
  04bec	00000000	 DCD         |?szHexBuf@@3PADA|
  04bf0		 |$LN186@CommandCom|
  04bf0	00000000	 DCD         |??_C@_1LI@PHDFMFPF@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@|
  04bf4		 |$LN187@CommandCom|
  04bf4	00000000	 DCD         |??_C@_1JG@ELIIAALB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@|
  04bf8		 |$LN188@CommandCom|
  04bf8	00000000	 DCD         |??_C@_1JE@IOMKDOFC@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@|
  04bfc		 |$LN189@CommandCom|
  04bfc	00000000	 DCD         |??_C@_1LC@EFFBBCMD@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@|
  04c00		 |$LN190@CommandCom|
  04c00	00000000	 DCD         |??_C@_1NE@KBFENPL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@|
  04c04		 |$LN191@CommandCom|
  04c04	00000000	 DCD         |??_C@_1JK@BFHHLLAA@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@|
  04c08		 |$LN192@CommandCom|
  04c08	00000000	 DCD         |??_C@_1IM@FCKDOCPD@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@|
  04c0c		 |$LN193@CommandCom|
  04c0c	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  04c10		 |$LN194@CommandCom|
  04c10	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  04c14		 |$LN195@CommandCom|
  04c14	00000000	 DCD         |??_C@_1JA@LIPKICML@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  04c18		 |$LN196@CommandCom|
  04c18	00000000	 DCD         |??_C@_1IO@IKAIBMCO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@|
  04c1c		 |$LN197@CommandCom|
  04c1c	00000000	 DCD         |??_C@_1IE@NFMKHLBJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@|
  04c20		 |$LN198@CommandCom|
  04c20	00000000	 DCD         |??_C@_1HK@LGDFNONP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@|
  04c24		 |$LN199@CommandCom|
  04c24	00000000	 DCD         |??_C@_1LM@MJDENCHK@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@|
  04c28		 |$LN200@CommandCom|
  04c28	00000000	 DCD         |??_C@_1FE@LEHBJPGO@?$AA?9?$AAD?$AAe?$AAb?$AAu?$AAg?$AAS?$AAD?$AAH?$AAC?$AAR?$AAe?$AAg?$AAs?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@|
  04c2c		 |$LN201@CommandCom|
  04c2c	00000000	 DCD         |??_C@_1DE@PKFIAIGI@?$AAP?$AAR?$AAC?$AAM?$AA_?$AAP?$AAM?$AA_?$AAI?$AAC?$AAL?$AAK?$AAE?$AAN?$AA1?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c30		 |$LN202@CommandCom|
  04c30	00000000	 DCD         |??_C@_1DE@NGEIJKCP@?$AAP?$AAR?$AAC?$AAM?$AA_?$AAP?$AAM?$AA_?$AAF?$AAC?$AAL?$AAK?$AAE?$AAN?$AA1?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c34		 |$LN203@CommandCom|
  04c34	00000000	 DCD         |??_C@_1DI@JJDFLGL@?$AAP?$AAR?$AAC?$AAM?$AA_?$AAP?$AAM?$AA_?$AAA?$AAU?$AAT?$AAO?$AAI?$AAD?$AAE?$AAL?$AA1?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c38		 |$LN204@CommandCom|
  04c38	00000000	 DCD         |??_C@_1DA@IIHMGPGB@?$AAP?$AAR?$AAC?$AAM?$AA_?$AAP?$AAM?$AA_?$AAW?$AAK?$AAS?$AAT?$AA1?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c3c		 |$LN205@CommandCom|
  04c3c	00000000	 DCD         |??_C@_1DA@HMKOINFE@?$AAP?$AAR?$AAC?$AAM?$AA_?$AAP?$AAM?$AA_?$AAW?$AAK?$AAE?$AAN?$AA1?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c40		 |$LN206@CommandCom|
  04c40	00000000	 DCD         |??_C@_1CG@LGIJCMDI@?$AAM?$AAM?$AAC?$AA_?$AAS?$AAI?$AAS?$AAS?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c44		 |$LN207@CommandCom|
  04c44	00000000	 DCD         |??_C@_1CG@NCLNICNF@?$AAM?$AAM?$AAC?$AA_?$AAS?$AAY?$AAS?$AAC?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c48		 |$LN208@CommandCom|
  04c48	00000000	 DCD         |??_C@_1CG@CELKDEC@?$AAM?$AAM?$AAC?$AA_?$AAI?$AAO?$AAS?$AAR?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c4c		 |$LN209@CommandCom|
  04c4c	00000000	 DCD         |??_C@_1CG@NMCJHLFK@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA7?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c50		 |$LN210@CommandCom|
  04c50	00000000	 DCD         |??_C@_1CG@FNAMBOHN@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA6?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c54		 |$LN211@CommandCom|
  04c54	00000000	 DCD         |??_C@_1CG@FBCLHFF@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA5?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c58		 |$LN212@CommandCom|
  04c58	00000000	 DCD         |??_C@_1CG@IEDHNCHC@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA4?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c5c		 |$LN213@CommandCom|
  04c5c	00000000	 DCD         |??_C@_1CG@LFCPOFAF@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c60		 |$LN214@CommandCom|
  04c60	00000000	 DCD         |??_C@_1CG@DEAKIACC@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA2?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c64		 |$LN215@CommandCom|
  04c64	00000000	 DCD         |??_C@_1CG@GMBECJAK@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA1?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c68		 |$LN216@CommandCom|
  04c68	00000000	 DCD         |??_C@_1CG@ONDBEMCN@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAS?$AAP?$AA0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c6c		 |$LN217@CommandCom|
  04c6c	00000000	 DCD         |??_C@_1CE@JFBKMAEL@?$AAM?$AAM?$AAC?$AA_?$AAR?$AAE?$AAV?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c70		 |$LN218@CommandCom|
  04c70	00000000	 DCD         |??_C@_1CG@JCBFCNMO@?$AAM?$AAM?$AAC?$AA_?$AAS?$AAD?$AAI?$AAO?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c74		 |$LN219@CommandCom|
  04c74	00000000	 DCD         |??_C@_1CE@FLHMDFNO@?$AAM?$AAM?$AAC?$AA_?$AAB?$AAU?$AAF?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c78		 |$LN220@CommandCom|
  04c78	00000000	 DCD         |??_C@_1CG@LGFPMALN@?$AAM?$AAM?$AAC?$AA_?$AAN?$AAB?$AAL?$AAK?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c7c		 |$LN221@CommandCom|
  04c7c	00000000	 DCD         |??_C@_1CG@CNKOMEGJ@?$AAM?$AAM?$AAC?$AA_?$AAB?$AAL?$AAE?$AAN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c80		 |$LN222@CommandCom|
  04c80	00000000	 DCD         |??_C@_1CE@OKPFMEJO@?$AAM?$AAM?$AAC?$AA_?$AAD?$AAT?$AAO?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c84		 |$LN223@CommandCom|
  04c84	00000000	 DCD         |??_C@_1CE@OOPMDHMN@?$AAM?$AAM?$AAC?$AA_?$AAC?$AAT?$AAO?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c88		 |$LN224@CommandCom|
  04c88	00000000	 DCD         |??_C@_1CC@BBPNKHNE@?$AAM?$AAM?$AAC?$AA_?$AAI?$AAE?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA4?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  04c8c		 |$LN178@CommandCom|
  04c8c		 |$LN174@CommandCom|
	EXPORT	|??_C@_1JM@FGEPCKID@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAd?$AAi?$AAc?$AAa?$AAt?$AAe?$AAB?$AAu?$AAs@| [ DATA ] ; `string'
	IMPORT	|SDHCDIndicateBusRequestComplete|

  000f0			 AREA	 |.pdata|, PDATA
|$T43185| DCD	|$LN11@IndicateBu|
	DCD	0x40003704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JM@FGEPCKID@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAd?$AAi?$AAc?$AAa?$AAt?$AAe?$AAB?$AAu?$AAs@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "I", 0x0, "n", 0x0, "d", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "B", 0x0, "u"
	DCB	0x0, "s", 0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, ":", 0x0, " "
	DCB	0x0, "p", 0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "u", 0x0, "s", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  04c8c			 AREA	 |.text|, CODE, ARM

  04c8c		 |?IndicateBusRequestComplete@CSDIOControllerBase@@UAAXPAU_SD_BUS_REQUEST@@J@Z| PROC ; CSDIOControllerBase::IndicateBusRequestComplete

; 1913 : {

  04c8c		 |$LN11@IndicateBu|
  04c8c	e1a0c00d	 mov         r12, sp
  04c90	e92d0007	 stmdb       sp!, {r0 - r2}
  04c94	e92d5000	 stmdb       sp!, {r12, lr}
  04c98	e24dd004	 sub         sp, sp, #4
  04c9c		 |$M43182|

; 1914 :     if ( m_pCurrentRequest == pRequest ) {

  04c9c	e59d300c	 ldr         r3, [sp, #0xC]
  04ca0	e2833090	 add         r3, r3, #0x90
  04ca4	e5932000	 ldr         r2, [r3]
  04ca8	e59d3010	 ldr         r3, [sp, #0x10]
  04cac	e1520003	 cmp         r2, r3
  04cb0	1a00001e	 bne         |$LN4@IndicateBu|

; 1915 :         DEBUGMSG (SHC_SDBUS_INTERACT_ZONE,
; 1916 :             (L"CSDIOControllerBase::IndicateBusRequestComplete: "
; 1917 :             L"pRequest = %x, Status = %d\r\n", pRequest,Status)); 

  04cb4	e59f30a8	 ldr         r3, [pc, #0xA8]
  04cb8	e5933440	 ldr         r3, [r3, #0x440]
  04cbc	e3130040	 tst         r3, #0x40
  04cc0	0a000006	 beq         |$LN7@IndicateBu|
  04cc4	e59d2014	 ldr         r2, [sp, #0x14]
  04cc8	e59d1010	 ldr         r1, [sp, #0x10]
  04ccc	e59f008c	 ldr         r0, [pc, #0x8C]
  04cd0	eb000000	 bl          NKDbgPrintfW
  04cd4	e3a03001	 mov         r3, #1
  04cd8	e58d3000	 str         r3, [sp]
  04cdc	ea000001	 b           |$LN8@IndicateBu|
  04ce0		 |$LN7@IndicateBu|
  04ce0	e3a03000	 mov         r3, #0
  04ce4	e58d3000	 str         r3, [sp]
  04ce8		 |$LN8@IndicateBu|

; 1918 :         m_pCurrentRequest = NULL;

  04ce8	e59d300c	 ldr         r3, [sp, #0xC]
  04cec	e2832090	 add         r2, r3, #0x90
  04cf0	e3a03000	 mov         r3, #0
  04cf4	e5823000	 str         r3, [r2]

; 1919 :         if (m_fCurrentRequestFastPath ) {

  04cf8	e59d300c	 ldr         r3, [sp, #0xC]
  04cfc	e2833094	 add         r3, r3, #0x94
  04d00	e5933000	 ldr         r3, [r3]
  04d04	e3530000	 cmp         r3, #0
  04d08	0a000008	 beq         |$LN3@IndicateBu|

; 1920 :             if (Status == SD_API_STATUS_SUCCESS) {

  04d0c	e59d3014	 ldr         r3, [sp, #0x14]
  04d10	e3530000	 cmp         r3, #0
  04d14	1a000001	 bne         |$LN2@IndicateBu|

; 1921 :                 Status = SD_API_STATUS_FAST_PATH_SUCCESS;

  04d18	e3a03002	 mov         r3, #2
  04d1c	e58d3014	 str         r3, [sp, #0x14]
  04d20		 |$LN2@IndicateBu|

; 1922 :             }
; 1923 :             FastPathStatus = Status ;

  04d20	e59d300c	 ldr         r3, [sp, #0xC]
  04d24	e2832098	 add         r2, r3, #0x98
  04d28	e59d3014	 ldr         r3, [sp, #0x14]
  04d2c	e5823000	 str         r3, [r2]
  04d30		 |$LN3@IndicateBu|
  04d30		 |$LN4@IndicateBu|

; 1924 :         }
; 1925 :     }
; 1926 : 
; 1927 :     if ( Status != SD_API_STATUS_FAST_PATH_SUCCESS ) {

  04d30	e59d3014	 ldr         r3, [sp, #0x14]
  04d34	e3530002	 cmp         r3, #2
  04d38	0a000005	 beq         |$LN1@IndicateBu|

; 1928 :         SDHCDIndicateBusRequestComplete(m_pHCContext, pRequest, Status);

  04d3c	e59d2014	 ldr         r2, [sp, #0x14]
  04d40	e59d1010	 ldr         r1, [sp, #0x10]
  04d44	e59d300c	 ldr         r3, [sp, #0xC]
  04d48	e2833004	 add         r3, r3, #4
  04d4c	e5930000	 ldr         r0, [r3]
  04d50	eb000000	 bl          SDHCDIndicateBusRequestComplete
  04d54		 |$LN1@IndicateBu|

; 1929 :     }
; 1930 : }

  04d54	e28dd004	 add         sp, sp, #4
  04d58	e89d6000	 ldmia       sp, {sp, lr}
  04d5c	e12fff1e	 bx          lr
  04d60		 |$LN12@IndicateBu|
  04d60		 |$LN13@IndicateBu|
  04d60	00000000	 DCD         |??_C@_1JM@FGEPCKID@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAI?$AAn?$AAd?$AAi?$AAc?$AAa?$AAt?$AAe?$AAB?$AAu?$AAs@|
  04d64		 |$LN14@IndicateBu|
  04d64	00000000	 DCD         |dpCurSettings|
  04d68		 |$M43183|

			 ENDP  ; |?IndicateBusRequestComplete@CSDIOControllerBase@@UAAXPAU_SD_BUS_REQUEST@@J@Z|, CSDIOControllerBase::IndicateBusRequestComplete

	EXPORT	|??_C@_1LI@HHCFCMI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LE@HEBDEMFP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1MG@CIFPEGDF@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LM@LHFAEJJL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LE@FNMLEOAG@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LE@OEKADIEN@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LK@MJGNHFPL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1MA@JNPKCKAD@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JK@PICFMIBE@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@| [ DATA ] ; `string'
	EXPORT	|?SDHCSlotOptionHandlerImpl@CSDIOControllerBase@@QAAJEW4_SD_SLOT_OPTION_CODE@@PAXK@Z| ; CSDIOControllerBase::SDHCSlotOptionHandlerImpl

  000f8			 AREA	 |.pdata|, PDATA
|$T43226| DCD	|$LN63@SDHCSlotOp|
	DCD	0x40014604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LI@HHCFCMI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "S", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I"
	DCB	0x0, "m", 0x0, "p", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "W"
	DCB	0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "B"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " ", 0x0, "L"
	DCB	0x0, "e", 0x0, "n", 0x0, "g", 0x0, "t", 0x0, "h", 0x0, ":"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, ",", 0x0, " "
	DCB	0x0, "W", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "B", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "s"
	DCB	0x0, ":", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LE@HEBDEMFP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "S", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I"
	DCB	0x0, "m", 0x0, "p", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "R"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "B", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "k", 0x0, " ", 0x0, "L", 0x0, "e"
	DCB	0x0, "n", 0x0, "g", 0x0, "t", 0x0, "h", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, ",", 0x0, " ", 0x0, "R"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "B", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "k", 0x0, "s", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1MG@CIFPEGDF@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "S", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I"
	DCB	0x0, "m", 0x0, "p", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "D", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "W", 0x0, "r"
	DCB	0x0, "i", 0x0, "t", 0x0, "e", 0x0, "P", 0x0, "r", 0x0, "o"
	DCB	0x0, "t", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, " ", 0x0, ":"
	DCB	0x0, " ", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "s", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LM@LHFAEJJL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "S", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I"
	DCB	0x0, "m", 0x0, "p", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a"
	DCB	0x0, "b", 0x0, "l", 0x0, "e", 0x0, "S", 0x0, "D", 0x0, "I"
	DCB	0x0, "O", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "s", 0x0, " "
	DCB	0x0, ":", 0x0, " ", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "s"
	DCB	0x0, "l", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LE@FNMLEOAG@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "S", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I"
	DCB	0x0, "m", 0x0, "p", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "S"
	DCB	0x0, "l", 0x0, "o", 0x0, "t", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "s", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LE@OEKADIEN@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "S", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I"
	DCB	0x0, "m", 0x0, "p", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "S"
	DCB	0x0, "l", 0x0, "o", 0x0, "t", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "s", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LK@MJGNHFPL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "S", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I"
	DCB	0x0, "m", 0x0, "p", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O"
	DCB	0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, "s", 0x0, " ", 0x0, ":"
	DCB	0x0, " ", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "s", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1MA@JNPKCKAD@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "S", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I"
	DCB	0x0, "m", 0x0, "p", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "S"
	DCB	0x0, "l", 0x0, "o", 0x0, "t", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "f", 0x0, "a", 0x0, "c", 0x0, "e"
	DCB	0x0, " ", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "k", 0x0, " ", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JK@PICFMIBE@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "S", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I"
	DCB	0x0, "m", 0x0, "p", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "D", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "S", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  04d68			 AREA	 |.text|, CODE, ARM

  04d68		 |?SDHCSlotOptionHandlerImpl@CSDIOControllerBase@@QAAJEW4_SD_SLOT_OPTION_CODE@@PAXK@Z| PROC ; CSDIOControllerBase::SDHCSlotOptionHandlerImpl

; 1946 : {

  04d68		 |$LN63@SDHCSlotOp|
  04d68	e1a0c00d	 mov         r12, sp
  04d6c	e92d000f	 stmdb       sp!, {r0 - r3}
  04d70	e92d5000	 stmdb       sp!, {r12, lr}
  04d74	e24dd04c	 sub         sp, sp, #0x4C
  04d78		 |$M43223|

; 1947 :     SD_API_STATUS status = SD_API_STATUS_SUCCESS;   // status

  04d78	e3a03000	 mov         r3, #0
  04d7c	e58d3000	 str         r3, [sp]

; 1948 : 
; 1949 :     SDHCDAcquireHCLock(m_pHCContext);

  04d80	e59d3054	 ldr         r3, [sp, #0x54]
  04d84	e2833004	 add         r3, r3, #4
  04d88	e5933000	 ldr         r3, [r3]
  04d8c	e2830024	 add         r0, r3, #0x24
  04d90	eb000000	 bl          EnterCriticalSection

; 1950 : 
; 1951 :     switch (Option) {

  04d94	e59d305c	 ldr         r3, [sp, #0x5C]
  04d98	e58d3020	 str         r3, [sp, #0x20]
  04d9c	e59d3020	 ldr         r3, [sp, #0x20]
  04da0	e353000b	 cmp         r3, #0xB
  04da4	8a00011e	 bhi         |$LN1@SDHCSlotOp|
  04da8	e59d2020	 ldr         r2, [sp, #0x20]
  04dac	e1a03102	 mov         r3, r2, lsl #2
  04db0	e083300f	 add         r3, r3, pc
  04db4	e5933004	 ldr         r3, [r3, #4]
  04db8	e08ff003	 add         pc, pc, r3
  04dbc		 |$LN48@SDHCSlotOp|
  04dbc		 |$LN47@SDHCSlotOp|
  04dbc		 |$LN49@SDHCSlotOp|
  04dbc	0000002c	 DCD         0x2c
  04dc0		 |$LN50@SDHCSlotOp|
  04dc0	0000005c	 DCD         0x5c
  04dc4		 |$LN51@SDHCSlotOp|
  04dc4	000000ac	 DCD         0xac
  04dc8		 |$LN52@SDHCSlotOp|
  04dc8	000001e8	 DCD         0x1e8
  04dcc		 |$LN53@SDHCSlotOp|
  04dcc	000001dc	 DCD         0x1dc
  04dd0		 |$LN54@SDHCSlotOp|
  04dd0	00000220	 DCD         0x220
  04dd4		 |$LN55@SDHCSlotOp|
  04dd4	00000290	 DCD         0x290
  04dd8		 |$LN56@SDHCSlotOp|
  04dd8	00000464	 DCD         0x464
  04ddc		 |$LN57@SDHCSlotOp|
  04ddc	000000ec	 DCD         0xec
  04de0		 |$LN58@SDHCSlotOp|
  04de0	00000164	 DCD         0x164
  04de4		 |$LN59@SDHCSlotOp|
  04de4	00000464	 DCD         0x464
  04de8		 |$LN60@SDHCSlotOp|
  04de8	000003e0	 DCD         0x3e0
  04dec		 |$LN24@SDHCSlotOp|

; 1952 : 
; 1953 : case SDHCDSetSlotPower:
; 1954 :     {
; 1955 :         DEBUGMSG(SDCARD_ZONE_INFO, (L"CSDIOControllerBase::SDHCSlotOptionHandlerImpl: "
; 1956 :             L"Called - SDHCDSetSlotPower\r\n"));

  04dec	e59f3468	 ldr         r3, [pc, #0x468]
  04df0	e5933440	 ldr         r3, [r3, #0x440]
  04df4	e3130a01	 tst         r3, #1, 20
  04df8	0a000004	 beq         |$LN29@SDHCSlotOp|
  04dfc	e59f0478	 ldr         r0, [pc, #0x478]
  04e00	eb000000	 bl          NKDbgPrintfW
  04e04	e3a03001	 mov         r3, #1
  04e08	e58d3024	 str         r3, [sp, #0x24]
  04e0c	ea000001	 b           |$LN30@SDHCSlotOp|
  04e10		 |$LN29@SDHCSlotOp|
  04e10	e3a03000	 mov         r3, #0
  04e14	e58d3024	 str         r3, [sp, #0x24]
  04e18		 |$LN30@SDHCSlotOp|

; 1957 :         // Nothing to do because this system only operates at the reported 3.2V
; 1958 :     }
; 1959 :     break;

  04e18	ea000103	 b           |$LN25@SDHCSlotOp|
  04e1c		 |$LN23@SDHCSlotOp|

; 1960 : 
; 1961 : case SDHCDSetSlotInterface:
; 1962 :     {
; 1963 :         PSD_CARD_INTERFACE pInterface = (PSD_CARD_INTERFACE) pData;

  04e1c	e59d3060	 ldr         r3, [sp, #0x60]
  04e20	e58d3004	 str         r3, [sp, #4]

; 1964 : 
; 1965 :         DEBUGMSG(SDCARD_ZONE_INFO, (L"CSDIOControllerBase::SDHCSlotOptionHandlerImpl: "
; 1966 :             L"Called - SetSlotInterface : Clock Setting: %d\r\n", pInterface->ClockRate
; 1967 :         ));

  04e24	e59f3430	 ldr         r3, [pc, #0x430]
  04e28	e5933440	 ldr         r3, [r3, #0x440]
  04e2c	e3130a01	 tst         r3, #1, 20
  04e30	0a000007	 beq         |$LN31@SDHCSlotOp|
  04e34	e59d3004	 ldr         r3, [sp, #4]
  04e38	e2833004	 add         r3, r3, #4
  04e3c	e5931000	 ldr         r1, [r3]
  04e40	e59f0430	 ldr         r0, [pc, #0x430]
  04e44	eb000000	 bl          NKDbgPrintfW
  04e48	e3a03001	 mov         r3, #1
  04e4c	e58d3028	 str         r3, [sp, #0x28]
  04e50	ea000001	 b           |$LN32@SDHCSlotOp|
  04e54		 |$LN31@SDHCSlotOp|
  04e54	e3a03000	 mov         r3, #0
  04e58	e58d3028	 str         r3, [sp, #0x28]
  04e5c		 |$LN32@SDHCSlotOp|

; 1968 : 
; 1969 :         SetInterface(pInterface);

  04e5c	e59d1004	 ldr         r1, [sp, #4]
  04e60	e59d0054	 ldr         r0, [sp, #0x54]
  04e64	eb000000	 bl          |?SetInterface@CSDIOControllerBase@@QAAXPAU_SD_CARD_INTERFACE@@@Z|

; 1970 :     }
; 1971 :     break;

  04e68	ea0000ef	 b           |$LN25@SDHCSlotOp|
  04e6c		 |$LN22@SDHCSlotOp|

; 1972 : 
; 1973 : case SDHCDEnableSDIOInterrupts:
; 1974 :     DEBUGMSG(SDCARD_ZONE_INFO, (L"CSDIOControllerBase::SDHCSlotOptionHandlerImpl: "
; 1975 :         L"Called - EnableSDIOInterrupts : on slot %d\r\n", SlotNumber
; 1976 :     ));

  04e6c	e59f33e8	 ldr         r3, [pc, #0x3E8]
  04e70	e5933440	 ldr         r3, [r3, #0x440]
  04e74	e3130a01	 tst         r3, #1, 20
  04e78	0a000006	 beq         |$LN33@SDHCSlotOp|
  04e7c	e5dd3058	 ldrb        r3, [sp, #0x58]
  04e80	e1a01003	 mov         r1, r3
  04e84	e59f03e8	 ldr         r0, [pc, #0x3E8]
  04e88	eb000000	 bl          NKDbgPrintfW
  04e8c	e3a03001	 mov         r3, #1
  04e90	e58d302c	 str         r3, [sp, #0x2C]
  04e94	ea000001	 b           |$LN34@SDHCSlotOp|
  04e98		 |$LN33@SDHCSlotOp|
  04e98	e3a03000	 mov         r3, #0
  04e9c	e58d302c	 str         r3, [sp, #0x2C]
  04ea0		 |$LN34@SDHCSlotOp|

; 1977 :     EnableSDIOInterrupts();

  04ea0	e59d0054	 ldr         r0, [sp, #0x54]
  04ea4	eb000000	 bl          |?EnableSDIOInterrupts@CSDIOControllerBase@@QAAXXZ|

; 1978 :     break;

  04ea8	ea0000df	 b           |$LN25@SDHCSlotOp|
  04eac		 |$LN21@SDHCSlotOp|

; 1979 : 
; 1980 : case SDHCDSetSlotPowerState:
; 1981 :     DEBUGMSG(SDCARD_ZONE_INFO, (L"CSDIOControllerBase::SDHCSlotOptionHandlerImpl: "
; 1982 :         L"Called - SetSlotPowerState : on slot %d\r\n", SlotNumber
; 1983 :     ));

  04eac	e59f33a8	 ldr         r3, [pc, #0x3A8]
  04eb0	e5933440	 ldr         r3, [r3, #0x440]
  04eb4	e3130a01	 tst         r3, #1, 20
  04eb8	0a000006	 beq         |$LN35@SDHCSlotOp|
  04ebc	e5dd3058	 ldrb        r3, [sp, #0x58]
  04ec0	e1a01003	 mov         r1, r3
  04ec4	e59f03a4	 ldr         r0, [pc, #0x3A4]
  04ec8	eb000000	 bl          NKDbgPrintfW
  04ecc	e3a03001	 mov         r3, #1
  04ed0	e58d3030	 str         r3, [sp, #0x30]
  04ed4	ea000001	 b           |$LN36@SDHCSlotOp|
  04ed8		 |$LN35@SDHCSlotOp|
  04ed8	e3a03000	 mov         r3, #0
  04edc	e58d3030	 str         r3, [sp, #0x30]
  04ee0		 |$LN36@SDHCSlotOp|

; 1984 :     if( pData == NULL || OptionSize != sizeof(CEDEVICE_POWER_STATE) )

  04ee0	e59d3060	 ldr         r3, [sp, #0x60]
  04ee4	e3530000	 cmp         r3, #0
  04ee8	0a000002	 beq         |$LN19@SDHCSlotOp|
  04eec	e59d3064	 ldr         r3, [sp, #0x64]
  04ef0	e3530004	 cmp         r3, #4
  04ef4	0a000002	 beq         |$LN20@SDHCSlotOp|
  04ef8		 |$LN19@SDHCSlotOp|

; 1985 :     {
; 1986 :         status = SD_API_STATUS_INVALID_PARAMETER;

  04ef8	e3a0311f	 mov         r3, #0x1F, 2
  04efc	e58d3000	 str         r3, [sp]

; 1987 :     }
; 1988 :     else

  04f00	ea000006	 b           |$LN18@SDHCSlotOp|
  04f04		 |$LN20@SDHCSlotOp|

; 1989 :     {
; 1990 :         PCEDEVICE_POWER_STATE pcps = (PCEDEVICE_POWER_STATE) pData;

  04f04	e59d3060	 ldr         r3, [sp, #0x60]
  04f08	e58d3008	 str         r3, [sp, #8]

; 1991 :         this->m_PowerState = *pcps;

  04f0c	e59d3054	 ldr         r3, [sp, #0x54]
  04f10	e2832010	 add         r2, r3, #0x10
  04f14	e59d3008	 ldr         r3, [sp, #8]
  04f18	e5933000	 ldr         r3, [r3]
  04f1c	e5823000	 str         r3, [r2]
  04f20		 |$LN18@SDHCSlotOp|

; 1992 :     }
; 1993 :     break;

  04f20	ea0000c1	 b           |$LN25@SDHCSlotOp|
  04f24		 |$LN17@SDHCSlotOp|

; 1994 : 
; 1995 : case SDHCDGetSlotPowerState:
; 1996 :     DEBUGMSG(SDCARD_ZONE_INFO, (L"CSDIOControllerBase::SDHCSlotOptionHandlerImpl: "
; 1997 :         L"Called - GetSlotPowerState : on slot %d\r\n", SlotNumber
; 1998 :     ));

  04f24	e59f3330	 ldr         r3, [pc, #0x330]
  04f28	e5933440	 ldr         r3, [r3, #0x440]
  04f2c	e3130a01	 tst         r3, #1, 20
  04f30	0a000006	 beq         |$LN37@SDHCSlotOp|
  04f34	e5dd3058	 ldrb        r3, [sp, #0x58]
  04f38	e1a01003	 mov         r1, r3
  04f3c	e59f0328	 ldr         r0, [pc, #0x328]
  04f40	eb000000	 bl          NKDbgPrintfW
  04f44	e3a03001	 mov         r3, #1
  04f48	e58d3034	 str         r3, [sp, #0x34]
  04f4c	ea000001	 b           |$LN38@SDHCSlotOp|
  04f50		 |$LN37@SDHCSlotOp|
  04f50	e3a03000	 mov         r3, #0
  04f54	e58d3034	 str         r3, [sp, #0x34]
  04f58		 |$LN38@SDHCSlotOp|

; 1999 :     if( pData == NULL || OptionSize != sizeof(CEDEVICE_POWER_STATE) )

  04f58	e59d3060	 ldr         r3, [sp, #0x60]
  04f5c	e3530000	 cmp         r3, #0
  04f60	0a000002	 beq         |$LN15@SDHCSlotOp|
  04f64	e59d3064	 ldr         r3, [sp, #0x64]
  04f68	e3530004	 cmp         r3, #4
  04f6c	0a000002	 beq         |$LN16@SDHCSlotOp|
  04f70		 |$LN15@SDHCSlotOp|

; 2000 :     {
; 2001 :         status = SD_API_STATUS_INVALID_PARAMETER;

  04f70	e3a0311f	 mov         r3, #0x1F, 2
  04f74	e58d3000	 str         r3, [sp]

; 2002 :     }
; 2003 :     else

  04f78	ea000006	 b           |$LN14@SDHCSlotOp|
  04f7c		 |$LN16@SDHCSlotOp|

; 2004 :     {
; 2005 :         PCEDEVICE_POWER_STATE pcps = (PCEDEVICE_POWER_STATE) pData;

  04f7c	e59d3060	 ldr         r3, [sp, #0x60]
  04f80	e58d300c	 str         r3, [sp, #0xC]

; 2006 :         *pcps = this->m_PowerState;

  04f84	e59d3054	 ldr         r3, [sp, #0x54]
  04f88	e2833010	 add         r3, r3, #0x10
  04f8c	e5932000	 ldr         r2, [r3]
  04f90	e59d300c	 ldr         r3, [sp, #0xC]
  04f94	e5832000	 str         r2, [r3]
  04f98		 |$LN14@SDHCSlotOp|

; 2007 :     }
; 2008 :     break;

  04f98	ea0000a3	 b           |$LN25@SDHCSlotOp|
  04f9c		 |$LN13@SDHCSlotOp|

; 2009 : 
; 2010 : case SDHCDAckSDIOInterrupt:
; 2011 :     AckSDIOInterrupt();

  04f9c	e59d0054	 ldr         r0, [sp, #0x54]
  04fa0	eb000000	 bl          |?AckSDIOInterrupt@CSDIOControllerBase@@QAAXXZ|

; 2012 :     break;

  04fa4	ea0000a0	 b           |$LN25@SDHCSlotOp|
  04fa8		 |$LN12@SDHCSlotOp|

; 2013 : 
; 2014 : case SDHCDDisableSDIOInterrupts:
; 2015 :     DEBUGMSG(SDCARD_ZONE_INFO, (L"CSDIOControllerBase::SDHCSlotOptionHandlerImpl: "
; 2016 :         L"Called - DisableSDIOInterrupts : on slot %d\r\n", SlotNumber
; 2017 :     ));

  04fa8	e59f32ac	 ldr         r3, [pc, #0x2AC]
  04fac	e5933440	 ldr         r3, [r3, #0x440]
  04fb0	e3130a01	 tst         r3, #1, 20
  04fb4	0a000006	 beq         |$LN39@SDHCSlotOp|
  04fb8	e5dd3058	 ldrb        r3, [sp, #0x58]
  04fbc	e1a01003	 mov         r1, r3
  04fc0	e59f02a0	 ldr         r0, [pc, #0x2A0]
  04fc4	eb000000	 bl          NKDbgPrintfW
  04fc8	e3a03001	 mov         r3, #1
  04fcc	e58d3038	 str         r3, [sp, #0x38]
  04fd0	ea000001	 b           |$LN40@SDHCSlotOp|
  04fd4		 |$LN39@SDHCSlotOp|
  04fd4	e3a03000	 mov         r3, #0
  04fd8	e58d3038	 str         r3, [sp, #0x38]
  04fdc		 |$LN40@SDHCSlotOp|

; 2018 :     break;

  04fdc	ea000092	 b           |$LN25@SDHCSlotOp|
  04fe0		 |$LN11@SDHCSlotOp|

; 2019 : 
; 2020 : case SDHCDGetWriteProtectStatus:
; 2021 :     DEBUGMSG(SDCARD_ZONE_INFO, (L"CSDIOControllerBase::SDHCSlotOptionHandlerImpl: "
; 2022 :         L"Called - SDHCDGetWriteProtectStatus : on slot %d\r\n", SlotNumber
; 2023 :     )); 

  04fe0	e59f3274	 ldr         r3, [pc, #0x274]
  04fe4	e5933440	 ldr         r3, [r3, #0x440]
  04fe8	e3130a01	 tst         r3, #1, 20
  04fec	0a000006	 beq         |$LN41@SDHCSlotOp|
  04ff0	e5dd3058	 ldrb        r3, [sp, #0x58]
  04ff4	e1a01003	 mov         r1, r3
  04ff8	e59f0264	 ldr         r0, [pc, #0x264]
  04ffc	eb000000	 bl          NKDbgPrintfW
  05000	e3a03001	 mov         r3, #1
  05004	e58d303c	 str         r3, [sp, #0x3C]
  05008	ea000001	 b           |$LN42@SDHCSlotOp|
  0500c		 |$LN41@SDHCSlotOp|
  0500c	e3a03000	 mov         r3, #0
  05010	e58d303c	 str         r3, [sp, #0x3C]
  05014		 |$LN42@SDHCSlotOp|

; 2024 :     {
; 2025 :         PSD_CARD_INTERFACE pInterface = (PSD_CARD_INTERFACE) pData;

  05014	e59d3060	 ldr         r3, [sp, #0x60]
  05018	e58d3010	 str         r3, [sp, #0x10]

; 2026 :         pInterface->WriteProtected = IsWriteProtected();

  0501c	e59d3054	 ldr         r3, [sp, #0x54]
  05020	e5933000	 ldr         r3, [r3]
  05024	e2833010	 add         r3, r3, #0x10
  05028	e59d0054	 ldr         r0, [sp, #0x54]
  0502c	e5933000	 ldr         r3, [r3]
  05030	e1a0e00f	 mov         lr, pc
  05034	e12fff13	 bx          r3
  05038	e58d0040	 str         r0, [sp, #0x40]
  0503c	e59d3010	 ldr         r3, [sp, #0x10]
  05040	e2832008	 add         r2, r3, #8
  05044	e59d3040	 ldr         r3, [sp, #0x40]
  05048	e5823000	 str         r3, [r2]

; 2027 :     }
; 2028 : 
; 2029 :     break;

  0504c	ea000076	 b           |$LN25@SDHCSlotOp|
  05050		 |$LN10@SDHCSlotOp|

; 2030 : 
; 2031 : case SDHCDQueryBlockCapability:
; 2032 :     {
; 2033 :         PSD_HOST_BLOCK_CAPABILITY pBlockCaps = 
; 2034 :             (PSD_HOST_BLOCK_CAPABILITY)pData;

  05050	e59d3060	 ldr         r3, [sp, #0x60]
  05054	e58d3014	 str         r3, [sp, #0x14]

; 2035 : 
; 2036 :         DEBUGMSG(SDCARD_ZONE_INFO, (L"CSDIOControllerBase::SDHCSlotOptionHandlerImpl: "
; 2037 :             L"Read Block Length: %d , Read Blocks: %d\r\n", pBlockCaps->ReadBlockSize, pBlockCaps->ReadBlocks
; 2038 :         ));

  05058	e59f31fc	 ldr         r3, [pc, #0x1FC]
  0505c	e5933440	 ldr         r3, [r3, #0x440]
  05060	e3130a01	 tst         r3, #1, 20
  05064	0a00000b	 beq         |$LN43@SDHCSlotOp|
  05068	e59d3014	 ldr         r3, [sp, #0x14]
  0506c	e2833004	 add         r3, r3, #4
  05070	e1d330b0	 ldrh        r3, [r3]
  05074	e1a02003	 mov         r2, r3
  05078	e59d3014	 ldr         r3, [sp, #0x14]
  0507c	e1d330b0	 ldrh        r3, [r3]
  05080	e1a01003	 mov         r1, r3
  05084	e59f01d4	 ldr         r0, [pc, #0x1D4]
  05088	eb000000	 bl          NKDbgPrintfW
  0508c	e3a03001	 mov         r3, #1
  05090	e58d3044	 str         r3, [sp, #0x44]
  05094	ea000001	 b           |$LN44@SDHCSlotOp|
  05098		 |$LN43@SDHCSlotOp|
  05098	e3a03000	 mov         r3, #0
  0509c	e58d3044	 str         r3, [sp, #0x44]
  050a0		 |$LN44@SDHCSlotOp|

; 2039 :         DEBUGMSG(SDCARD_ZONE_INFO, (L"CSDIOControllerBase::SDHCSlotOptionHandlerImpl: "
; 2040 :             L"Write Block Length: %d , Write Blocks: %d\r\n", pBlockCaps->WriteBlockSize, pBlockCaps->WriteBlocks
; 2041 :         ));

  050a0	e59f31b4	 ldr         r3, [pc, #0x1B4]
  050a4	e5933440	 ldr         r3, [r3, #0x440]
  050a8	e3130a01	 tst         r3, #1, 20
  050ac	0a00000c	 beq         |$LN45@SDHCSlotOp|
  050b0	e59d3014	 ldr         r3, [sp, #0x14]
  050b4	e2833006	 add         r3, r3, #6
  050b8	e1d330b0	 ldrh        r3, [r3]
  050bc	e1a02003	 mov         r2, r3
  050c0	e59d3014	 ldr         r3, [sp, #0x14]
  050c4	e2833002	 add         r3, r3, #2
  050c8	e1d330b0	 ldrh        r3, [r3]
  050cc	e1a01003	 mov         r1, r3
  050d0	e59f0180	 ldr         r0, [pc, #0x180]
  050d4	eb000000	 bl          NKDbgPrintfW
  050d8	e3a03001	 mov         r3, #1
  050dc	e58d3048	 str         r3, [sp, #0x48]
  050e0	ea000001	 b           |$LN46@SDHCSlotOp|
  050e4		 |$LN45@SDHCSlotOp|
  050e4	e3a03000	 mov         r3, #0
  050e8	e58d3048	 str         r3, [sp, #0x48]
  050ec		 |$LN46@SDHCSlotOp|

; 2042 : 
; 2043 :         if (pBlockCaps->ReadBlockSize < STD_HC_MIN_BLOCK_LENGTH) {

  050ec	e59d3014	 ldr         r3, [sp, #0x14]
  050f0	e1d330b0	 ldrh        r3, [r3]
  050f4	e3530001	 cmp         r3, #1
  050f8	aa000002	 bge         |$LN9@SDHCSlotOp|

; 2044 :             pBlockCaps->ReadBlockSize = STD_HC_MIN_BLOCK_LENGTH;

  050fc	e59d2014	 ldr         r2, [sp, #0x14]
  05100	e3a03001	 mov         r3, #1
  05104	e1c230b0	 strh        r3, [r2]
  05108		 |$LN9@SDHCSlotOp|

; 2045 :         }
; 2046 : 
; 2047 :         if (pBlockCaps->ReadBlockSize > m_usMaxBlockLen) {

  05108	e59d3014	 ldr         r3, [sp, #0x14]
  0510c	e1d330b0	 ldrh        r3, [r3]
  05110	e1a02003	 mov         r2, r3
  05114	e59d3054	 ldr         r3, [sp, #0x54]
  05118	e2833078	 add         r3, r3, #0x78
  0511c	e1d330b0	 ldrh        r3, [r3]
  05120	e1520003	 cmp         r2, r3
  05124	da000004	 ble         |$LN8@SDHCSlotOp|

; 2048 :             pBlockCaps->ReadBlockSize = m_usMaxBlockLen;

  05128	e59d3054	 ldr         r3, [sp, #0x54]
  0512c	e2833078	 add         r3, r3, #0x78
  05130	e1d320b0	 ldrh        r2, [r3]
  05134	e59d3014	 ldr         r3, [sp, #0x14]
  05138	e1c320b0	 strh        r2, [r3]
  0513c		 |$LN8@SDHCSlotOp|

; 2049 :         }
; 2050 : 
; 2051 :         if (pBlockCaps->WriteBlockSize < STD_HC_MIN_BLOCK_LENGTH) {

  0513c	e59d3014	 ldr         r3, [sp, #0x14]
  05140	e2833002	 add         r3, r3, #2
  05144	e1d330b0	 ldrh        r3, [r3]
  05148	e3530001	 cmp         r3, #1
  0514c	aa000003	 bge         |$LN7@SDHCSlotOp|

; 2052 :             pBlockCaps->WriteBlockSize = STD_HC_MIN_BLOCK_LENGTH;

  05150	e59d3014	 ldr         r3, [sp, #0x14]
  05154	e2832002	 add         r2, r3, #2
  05158	e3a03001	 mov         r3, #1
  0515c	e1c230b0	 strh        r3, [r2]
  05160		 |$LN7@SDHCSlotOp|

; 2053 :         }
; 2054 : 
; 2055 :         if (pBlockCaps->WriteBlockSize > m_usMaxBlockLen) {

  05160	e59d3014	 ldr         r3, [sp, #0x14]
  05164	e2833002	 add         r3, r3, #2
  05168	e1d330b0	 ldrh        r3, [r3]
  0516c	e1a02003	 mov         r2, r3
  05170	e59d3054	 ldr         r3, [sp, #0x54]
  05174	e2833078	 add         r3, r3, #0x78
  05178	e1d330b0	 ldrh        r3, [r3]
  0517c	e1520003	 cmp         r2, r3
  05180	da000005	 ble         |$LN6@SDHCSlotOp|

; 2056 :             pBlockCaps->WriteBlockSize = m_usMaxBlockLen;

  05184	e59d3054	 ldr         r3, [sp, #0x54]
  05188	e2831078	 add         r1, r3, #0x78
  0518c	e59d3014	 ldr         r3, [sp, #0x14]
  05190	e2832002	 add         r2, r3, #2
  05194	e1d130b0	 ldrh        r3, [r1]
  05198	e1c230b0	 strh        r3, [r2]
  0519c		 |$LN6@SDHCSlotOp|

; 2057 :         }
; 2058 :     }
; 2059 :     break;

  0519c	ea000022	 b           |$LN25@SDHCSlotOp|
  051a0		 |$LN5@SDHCSlotOp|

; 2060 : 
; 2061 : case SDHCDGetSlotInfo:
; 2062 :     if( OptionSize != sizeof(SDCARD_HC_SLOT_INFO) || pData == NULL )

  051a0	e59d3064	 ldr         r3, [sp, #0x64]
  051a4	e3530014	 cmp         r3, #0x14
  051a8	1a000002	 bne         |$LN3@SDHCSlotOp|
  051ac	e59d3060	 ldr         r3, [sp, #0x60]
  051b0	e3530000	 cmp         r3, #0
  051b4	1a000002	 bne         |$LN4@SDHCSlotOp|
  051b8		 |$LN3@SDHCSlotOp|

; 2063 :     {
; 2064 :         status = SD_API_STATUS_INVALID_PARAMETER;

  051b8	e3a0311f	 mov         r3, #0x1F, 2
  051bc	e58d3000	 str         r3, [sp]

; 2065 :     }
; 2066 :     else

  051c0	ea000016	 b           |$LN2@SDHCSlotOp|
  051c4		 |$LN4@SDHCSlotOp|

; 2067 :     {
; 2068 :         PSDCARD_HC_SLOT_INFO pSlotInfo = (PSDCARD_HC_SLOT_INFO)pData;

  051c4	e59d3060	 ldr         r3, [sp, #0x60]
  051c8	e58d3018	 str         r3, [sp, #0x18]

; 2069 : 
; 2070 :         // set the slot capabilities
; 2071 :         SDHCDSetSlotCapabilities( pSlotInfo, 
; 2072 :                 SD_SLOT_SD_1BIT_CAPABLE |
; 2073 :                 SD_SLOT_SD_4BIT_CAPABLE |
; 2074 :                 SD_SLOT_SDIO_CAPABLE );

  051cc	e59d2018	 ldr         r2, [sp, #0x18]
  051d0	e3a0302c	 mov         r3, #0x2C
  051d4	e5823000	 str         r3, [r2]

; 2075 : 
; 2076 :         SDHCDSetVoltageWindowMask(pSlotInfo, (SD_VDD_WINDOW_3_0_TO_3_1 | SD_VDD_WINDOW_3_1_TO_3_2)); 

  051d8	e59d3018	 ldr         r3, [sp, #0x18]
  051dc	e2832004	 add         r2, r3, #4
  051e0	e3a03703	 mov         r3, #3, 14
  051e4	e5823000	 str         r3, [r2]

; 2077 : 
; 2078 : 
; 2079 :         // Set optimal voltage
; 2080 :         SDHCDSetDesiredSlotVoltage(pSlotInfo, SD_VDD_WINDOW_3_2_TO_3_3);     

  051e8	e59d3018	 ldr         r3, [sp, #0x18]
  051ec	e2832008	 add         r2, r3, #8
  051f0	e3a03601	 mov         r3, #1, 12
  051f4	e5823000	 str         r3, [r2]

; 2081 : 
; 2082 :         // Set maximum supported clock rate
; 2083 :         SDHCDSetMaxClockRate(pSlotInfo, m_dwMaxClockRate);

  051f8	e59d3054	 ldr         r3, [sp, #0x54]
  051fc	e2831074	 add         r1, r3, #0x74
  05200	e59d3018	 ldr         r3, [sp, #0x18]
  05204	e283200c	 add         r2, r3, #0xC
  05208	e5913000	 ldr         r3, [r1]
  0520c	e5823000	 str         r3, [r2]

; 2084 : 
; 2085 :         // set power up delay
; 2086 :         SDHCDSetPowerUpDelay(pSlotInfo, 100); 

  05210	e59d3018	 ldr         r3, [sp, #0x18]
  05214	e2832010	 add         r2, r3, #0x10
  05218	e3a03064	 mov         r3, #0x64
  0521c	e5823000	 str         r3, [r2]
  05220		 |$LN2@SDHCSlotOp|

; 2087 :     }
; 2088 :     break;

  05220	ea000001	 b           |$LN25@SDHCSlotOp|
  05224		 |$LN1@SDHCSlotOp|

; 2089 : 
; 2090 : default:
; 2091 :     status = SD_API_STATUS_INVALID_PARAMETER;

  05224	e3a0311f	 mov         r3, #0x1F, 2
  05228	e58d3000	 str         r3, [sp]
  0522c		 |$LN25@SDHCSlotOp|

; 2092 : 
; 2093 :     }
; 2094 : 
; 2095 :     SDHCDReleaseHCLock(m_pHCContext);

  0522c	e59d3054	 ldr         r3, [sp, #0x54]
  05230	e2833004	 add         r3, r3, #4
  05234	e5933000	 ldr         r3, [r3]
  05238	e2830024	 add         r0, r3, #0x24
  0523c	eb000000	 bl          LeaveCriticalSection

; 2096 :     return status;

  05240	e59d3000	 ldr         r3, [sp]
  05244	e58d301c	 str         r3, [sp, #0x1C]

; 2097 : }

  05248	e59d001c	 ldr         r0, [sp, #0x1C]
  0524c	e28dd04c	 add         sp, sp, #0x4C
  05250	e89d6000	 ldmia       sp, {sp, lr}
  05254	e12fff1e	 bx          lr
  05258		 |$LN64@SDHCSlotOp|
  05258		 |$LN65@SDHCSlotOp|
  05258	00000000	 DCD         |??_C@_1LI@HHCFCMI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@|
  0525c		 |$LN66@SDHCSlotOp|
  0525c	00000000	 DCD         |dpCurSettings|
  05260		 |$LN67@SDHCSlotOp|
  05260	00000000	 DCD         |??_C@_1LE@HEBDEMFP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@|
  05264		 |$LN68@SDHCSlotOp|
  05264	00000000	 DCD         |??_C@_1MG@CIFPEGDF@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@|
  05268		 |$LN69@SDHCSlotOp|
  05268	00000000	 DCD         |??_C@_1LM@LHFAEJJL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@|
  0526c		 |$LN70@SDHCSlotOp|
  0526c	00000000	 DCD         |??_C@_1LE@FNMLEOAG@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@|
  05270		 |$LN71@SDHCSlotOp|
  05270	00000000	 DCD         |??_C@_1LE@OEKADIEN@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@|
  05274		 |$LN72@SDHCSlotOp|
  05274	00000000	 DCD         |??_C@_1LK@MJGNHFPL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@|
  05278		 |$LN73@SDHCSlotOp|
  05278	00000000	 DCD         |??_C@_1MA@JNPKCKAD@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@|
  0527c		 |$LN74@SDHCSlotOp|
  0527c	00000000	 DCD         |??_C@_1JK@PICFMIBE@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt@|
  05280		 |$M43224|

			 ENDP  ; |?SDHCSlotOptionHandlerImpl@CSDIOControllerBase@@QAAJEW4_SD_SLOT_OPTION_CODE@@PAXK@Z|, CSDIOControllerBase::SDHCSlotOptionHandlerImpl


  00100			 AREA	 |.pdata|, PDATA
|$T43243| DCD	|$LN5@SDHCCancel@2|
	DCD	0x40001404
; Function compile flags: /Odtp

  05280			 AREA	 |.text|, CODE, ARM

  05280		 |?SDHCCancelIoHandler@CSDIOControllerBase@@SAEPAU_SDCARD_HC_CONTEXT@@KPAU_SD_BUS_REQUEST@@@Z| PROC ; CSDIOControllerBase::SDHCCancelIoHandler

; 2104 : {

  05280		 |$LN5@SDHCCancel@2|
  05280	e1a0c00d	 mov         r12, sp
  05284	e92d0007	 stmdb       sp!, {r0 - r2}
  05288	e92d5000	 stmdb       sp!, {r12, lr}
  0528c	e24dd00c	 sub         sp, sp, #0xC
  05290		 |$M43240|

; 2105 :     // get our extension 
; 2106 :     CSDIOControllerBase *pController = GET_PCONTROLLER_FROM_HCD(pHCContext);

  05290	e59d3014	 ldr         r3, [sp, #0x14]
  05294	e283304c	 add         r3, r3, #0x4C
  05298	e5933000	 ldr         r3, [r3]
  0529c	e58d3000	 str         r3, [sp]

; 2107 :     return pController->SDHCCancelIoHandlerImpl((UCHAR)Slot, pRequest);

  052a0	e59d201c	 ldr         r2, [sp, #0x1C]
  052a4	e59d3018	 ldr         r3, [sp, #0x18]
  052a8	e20310ff	 and         r1, r3, #0xFF
  052ac	e59d0000	 ldr         r0, [sp]
  052b0	eb000000	 bl          |?SDHCCancelIoHandlerImpl@CSDIOControllerBase@@QAAEEPAU_SD_BUS_REQUEST@@@Z|
  052b4	e5cd0008	 strb        r0, [sp, #8]
  052b8	e5dd3008	 ldrb        r3, [sp, #8]
  052bc	e5cd3004	 strb        r3, [sp, #4]

; 2108 : }

  052c0	e5dd0004	 ldrb        r0, [sp, #4]
  052c4	e28dd00c	 add         sp, sp, #0xC
  052c8	e89d6000	 ldmia       sp, {sp, lr}
  052cc	e12fff1e	 bx          lr
  052d0		 |$M43241|

			 ENDP  ; |?SDHCCancelIoHandler@CSDIOControllerBase@@SAEPAU_SDCARD_HC_CONTEXT@@KPAU_SD_BUS_REQUEST@@@Z|, CSDIOControllerBase::SDHCCancelIoHandler


  00108			 AREA	 |.pdata|, PDATA
|$T43249| DCD	|$LN5@SDHCBusReq@2|
	DCD	0x40001204
; Function compile flags: /Odtp

  052d0			 AREA	 |.text|, CODE, ARM

  052d0		 |?SDHCBusRequestHandler@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@KPAU_SD_BUS_REQUEST@@@Z| PROC ; CSDIOControllerBase::SDHCBusRequestHandler

; 2114 : {

  052d0		 |$LN5@SDHCBusReq@2|
  052d0	e1a0c00d	 mov         r12, sp
  052d4	e92d0007	 stmdb       sp!, {r0 - r2}
  052d8	e92d5000	 stmdb       sp!, {r12, lr}
  052dc	e24dd00c	 sub         sp, sp, #0xC
  052e0		 |$M43246|

; 2115 :     // get our extension 
; 2116 :     CSDIOControllerBase *pController = GET_PCONTROLLER_FROM_HCD(pHCContext);

  052e0	e59d3014	 ldr         r3, [sp, #0x14]
  052e4	e283304c	 add         r3, r3, #0x4C
  052e8	e5933000	 ldr         r3, [r3]
  052ec	e58d3000	 str         r3, [sp]

; 2117 :     return pController->SDHCBusRequestHandlerImpl(pRequest);

  052f0	e59d101c	 ldr         r1, [sp, #0x1C]
  052f4	e59d0000	 ldr         r0, [sp]
  052f8	eb000000	 bl          |?SDHCBusRequestHandlerImpl@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z|
  052fc	e58d0008	 str         r0, [sp, #8]
  05300	e59d3008	 ldr         r3, [sp, #8]
  05304	e58d3004	 str         r3, [sp, #4]

; 2118 : }

  05308	e59d0004	 ldr         r0, [sp, #4]
  0530c	e28dd00c	 add         sp, sp, #0xC
  05310	e89d6000	 ldmia       sp, {sp, lr}
  05314	e12fff1e	 bx          lr
  05318		 |$M43247|

			 ENDP  ; |?SDHCBusRequestHandler@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@KPAU_SD_BUS_REQUEST@@@Z|, CSDIOControllerBase::SDHCBusRequestHandler


  00110			 AREA	 |.pdata|, PDATA
|$T43256| DCD	|$LN5@SDHCSlotOp@2|
	DCD	0x40001704
; Function compile flags: /Odtp

  05318			 AREA	 |.text|, CODE, ARM

  05318		 |?SDHCSlotOptionHandler@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@KW4_SD_SLOT_OPTION_CODE@@PAXK@Z| PROC ; CSDIOControllerBase::SDHCSlotOptionHandler

; 2126 : {

  05318		 |$LN5@SDHCSlotOp@2|
  05318	e1a0c00d	 mov         r12, sp
  0531c	e92d000f	 stmdb       sp!, {r0 - r3}
  05320	e92d5000	 stmdb       sp!, {r12, lr}
  05324	e24dd014	 sub         sp, sp, #0x14
  05328		 |$M43253|

; 2127 :     // get our extension 
; 2128 :     CSDIOControllerBase *pController = GET_PCONTROLLER_FROM_HCD(pHCContext);

  05328	e59d301c	 ldr         r3, [sp, #0x1C]
  0532c	e283304c	 add         r3, r3, #0x4C
  05330	e5933000	 ldr         r3, [r3]
  05334	e58d3004	 str         r3, [sp, #4]

; 2129 :     return pController->SDHCSlotOptionHandlerImpl((UCHAR)SlotNumber,
; 2130 :         Option,
; 2131 :         pData,
; 2132 :         OptionSize );

  05338	e59d302c	 ldr         r3, [sp, #0x2C]
  0533c	e58d3000	 str         r3, [sp]
  05340	e59d3028	 ldr         r3, [sp, #0x28]
  05344	e59d2024	 ldr         r2, [sp, #0x24]
  05348	e59d1020	 ldr         r1, [sp, #0x20]
  0534c	e20110ff	 and         r1, r1, #0xFF
  05350	e59d0004	 ldr         r0, [sp, #4]
  05354	eb000000	 bl          |?SDHCSlotOptionHandlerImpl@CSDIOControllerBase@@QAAJEW4_SD_SLOT_OPTION_CODE@@PAXK@Z|
  05358	e58d0010	 str         r0, [sp, #0x10]
  0535c	e59d3010	 ldr         r3, [sp, #0x10]
  05360	e58d300c	 str         r3, [sp, #0xC]

; 2133 : }

  05364	e59d000c	 ldr         r0, [sp, #0xC]
  05368	e28dd014	 add         sp, sp, #0x14
  0536c	e89d6000	 ldmia       sp, {sp, lr}
  05370	e12fff1e	 bx          lr
  05374		 |$M43254|

			 ENDP  ; |?SDHCSlotOptionHandler@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@KW4_SD_SLOT_OPTION_CODE@@PAXK@Z|, CSDIOControllerBase::SDHCSlotOptionHandler


  00118			 AREA	 |.pdata|, PDATA
|$T43262| DCD	|$LN5@SDHCDeinit@2|
	DCD	0x40001104
; Function compile flags: /Odtp

  05374			 AREA	 |.text|, CODE, ARM

  05374		 |?SDHCDeinitialize@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@@Z| PROC ; CSDIOControllerBase::SDHCDeinitialize

; 2137 : {

  05374		 |$LN5@SDHCDeinit@2|
  05374	e1a0c00d	 mov         r12, sp
  05378	e92d0001	 stmdb       sp!, {r0}
  0537c	e92d5000	 stmdb       sp!, {r12, lr}
  05380	e24dd00c	 sub         sp, sp, #0xC
  05384		 |$M43259|

; 2138 :     // get our extension 
; 2139 :     CSDIOControllerBase *pController = GET_PCONTROLLER_FROM_HCD(pHCContext);

  05384	e59d3014	 ldr         r3, [sp, #0x14]
  05388	e283304c	 add         r3, r3, #0x4C
  0538c	e5933000	 ldr         r3, [r3]
  05390	e58d3000	 str         r3, [sp]

; 2140 :     return pController->SDHCDeinitializeImpl();

  05394	e59d0000	 ldr         r0, [sp]
  05398	eb000000	 bl          |?SDHCDeinitializeImpl@CSDIOControllerBase@@QAAJXZ|
  0539c	e58d0008	 str         r0, [sp, #8]
  053a0	e59d3008	 ldr         r3, [sp, #8]
  053a4	e58d3004	 str         r3, [sp, #4]

; 2141 : }

  053a8	e59d0004	 ldr         r0, [sp, #4]
  053ac	e28dd00c	 add         sp, sp, #0xC
  053b0	e89d6000	 ldmia       sp, {sp, lr}
  053b4	e12fff1e	 bx          lr
  053b8		 |$M43260|

			 ENDP  ; |?SDHCDeinitialize@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@@Z|, CSDIOControllerBase::SDHCDeinitialize


  00120			 AREA	 |.pdata|, PDATA
|$T43268| DCD	|$LN5@SDHCInitia@2|
	DCD	0x40001104
; Function compile flags: /Odtp

  053b8			 AREA	 |.text|, CODE, ARM

  053b8		 |?SDHCInitialize@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@@Z| PROC ; CSDIOControllerBase::SDHCInitialize

; 2145 : {

  053b8		 |$LN5@SDHCInitia@2|
  053b8	e1a0c00d	 mov         r12, sp
  053bc	e92d0001	 stmdb       sp!, {r0}
  053c0	e92d5000	 stmdb       sp!, {r12, lr}
  053c4	e24dd00c	 sub         sp, sp, #0xC
  053c8		 |$M43265|

; 2146 :     // get our extension 
; 2147 :     CSDIOControllerBase *pController = GET_PCONTROLLER_FROM_HCD(pHCContext);

  053c8	e59d3014	 ldr         r3, [sp, #0x14]
  053cc	e283304c	 add         r3, r3, #0x4C
  053d0	e5933000	 ldr         r3, [r3]
  053d4	e58d3000	 str         r3, [sp]

; 2148 :     return pController->SDHCInitializeImpl();

  053d8	e59d0000	 ldr         r0, [sp]
  053dc	eb000000	 bl          |?SDHCInitializeImpl@CSDIOControllerBase@@QAAJXZ|
  053e0	e58d0008	 str         r0, [sp, #8]
  053e4	e59d3008	 ldr         r3, [sp, #8]
  053e8	e58d3004	 str         r3, [sp, #4]

; 2149 : }

  053ec	e59d0004	 ldr         r0, [sp, #4]
  053f0	e28dd00c	 add         sp, sp, #0xC
  053f4	e89d6000	 ldmia       sp, {sp, lr}
  053f8	e12fff1e	 bx          lr
  053fc		 |$M43266|

			 ENDP  ; |?SDHCInitialize@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@@Z|, CSDIOControllerBase::SDHCInitialize

	EXPORT	|??_C@_1IO@ECGJCGGA@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@| [ DATA ] ; `string'
	EXPORT	|??_C@_1PE@ODEKNAKI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KE@IOEJNFBP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IC@IFEENPAP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IC@EOCDJCEC@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JG@IOHKNEJJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KE@OODPLMID@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@DMOGHJEP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@| [ DATA ] ; `string'

  00128			 AREA	 |.pdata|, PDATA
|$T43332| DCD	|$LN44@GetCommand|
	DCD	0x40025304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IO@ECGJCGGA@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "C"
	DCB	0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "R", 0x0, "e", 0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n"
	DCB	0x0, "s", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "U", 0x0, "n"
	DCB	0x0, "r", 0x0, "e", 0x0, "c", 0x0, "o", 0x0, "g", 0x0, "n"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n", 0x0, "s"
	DCB	0x0, "e", 0x0, " ", 0x0, "t", 0x0, "y", 0x0, "p", 0x0, "e"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1PE@ODEKNAKI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "C"
	DCB	0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "R", 0x0, "e", 0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n"
	DCB	0x0, "s", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "[", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, " ", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, " "
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "x", 0x0, "]", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KE@IOEJNFBP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "C"
	DCB	0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "R", 0x0, "e", 0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n"
	DCB	0x0, "s", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "5"
	DCB	0x0, " ", 0x0, "R", 0x0, "6", 0x0, " ", 0x0, ":", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " "
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@IFEENPAP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "C"
	DCB	0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "R", 0x0, "e", 0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n"
	DCB	0x0, "s", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, "e"
	DCB	0x0, "R", 0x0, "5", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "s"
	DCB	0x0, "p", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, "e", 0x0, "R"
	DCB	0x0, "6", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@EOCDJCEC@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "C"
	DCB	0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "R", 0x0, "e", 0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n"
	DCB	0x0, "s", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, "e"
	DCB	0x0, "R", 0x0, "3", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "s"
	DCB	0x0, "p", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, "e", 0x0, "R"
	DCB	0x0, "4", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JG@IOHKNEJJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "C"
	DCB	0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "R", 0x0, "e", 0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n"
	DCB	0x0, "s", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "[", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "]", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KE@OODPLMID@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "C"
	DCB	0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "R", 0x0, "e", 0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n"
	DCB	0x0, "s", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "1"
	DCB	0x0, " ", 0x0, "R", 0x0, "1", 0x0, "b", 0x0, " ", 0x0, ":"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@DMOGHJEP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "C"
	DCB	0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "R", 0x0, "e", 0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n"
	DCB	0x0, "s", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "M", 0x0, "M"
	DCB	0x0, "C", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "4", 0x0, "X", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  053fc			 AREA	 |.text|, CODE, ARM

  053fc		 |?GetCommandResponse@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z| PROC ; CSDIOControllerBase::GetCommandResponse

; 2158 : {

  053fc		 |$LN44@GetCommand|
  053fc	e1a0c00d	 mov         r12, sp
  05400	e92d0003	 stmdb       sp!, {r0, r1}
  05404	e92d5000	 stmdb       sp!, {r12, lr}
  05408	e24dd0e0	 sub         sp, sp, #0xE0
  0540c		 |$M43329|

; 2159 :     UINT16  dtmp;
; 2160 :     PUCHAR              respBuff;       // response buffer
; 2161 :     WORD wRSP;
; 2162 : 
; 2163 :     dtmp = Read_MMC_STAT();

  0540c	e59d00e8	 ldr         r0, [sp, #0xE8]
  05410	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|
  05414	e1cd0bb0	 strh        r0, [sp, #0xB0]
  05418	e1dd3bb0	 ldrh        r3, [sp, #0xB0]
  0541c	e1cd33b8	 strh        r3, [sp, #0x38]

; 2164 : 
; 2165 :     DEBUGMSG(SHC_RESPONSE_ZONE, (L"CSDIOControllerBase::GetCommandResponse: "
; 2166 :         L"MMC_STAT = 0x%04X.\r\n", dtmp
; 2167 :     ));

  05420	e59f3900	 ldr         r3, [pc, #0x900]
  05424	e5933440	 ldr         r3, [r3, #0x440]
  05428	e3130004	 tst         r3, #4
  0542c	0a000006	 beq         |$LN12@GetCommand|
  05430	e1dd33b8	 ldrh        r3, [sp, #0x38]
  05434	e1a01003	 mov         r1, r3
  05438	e59f0904	 ldr         r0, [pc, #0x904]
  0543c	eb000000	 bl          NKDbgPrintfW
  05440	e3a03001	 mov         r3, #1
  05444	e58d30b4	 str         r3, [sp, #0xB4]
  05448	ea000001	 b           |$LN13@GetCommand|
  0544c		 |$LN12@GetCommand|
  0544c	e3a03000	 mov         r3, #0
  05450	e58d30b4	 str         r3, [sp, #0xB4]
  05454		 |$LN13@GetCommand|

; 2168 : 
; 2169 : 
; 2170 :     if ( dtmp & MMC_STAT_EOC | dtmp & MMC_STAT_CERR | dtmp & MMC_STAT_CCRC) 

  05454	e1dd33b8	 ldrh        r3, [sp, #0x38]
  05458	e2032001	 and         r2, r3, #1
  0545c	e1dd33b8	 ldrh        r3, [sp, #0x38]
  05460	e2033901	 and         r3, r3, #1, 18
  05464	e1822003	 orr         r2, r2, r3
  05468	e1dd33b8	 ldrh        r3, [sp, #0x38]
  0546c	e2033c01	 and         r3, r3, #1, 24
  05470	e1923003	 orrs        r3, r2, r3
  05474	0a000224	 beq         |$LN9@GetCommand|

; 2171 :     {
; 2172 :         respBuff = pRequest->CommandResponse.ResponseBuffer;

  05478	e59d30ec	 ldr         r3, [sp, #0xEC]
  0547c	e2833020	 add         r3, r3, #0x20
  05480	e58d3034	 str         r3, [sp, #0x34]

; 2173 : 
; 2174 :         switch(pRequest->CommandResponse.ResponseType)

  05484	e59d30ec	 ldr         r3, [sp, #0xEC]
  05488	e283301c	 add         r3, r3, #0x1C
  0548c	e5933000	 ldr         r3, [r3]
  05490	e58d30b8	 str         r3, [sp, #0xB8]
  05494	e59d30b8	 ldr         r3, [sp, #0xB8]
  05498	e3530007	 cmp         r3, #7
  0549c	8a00020f	 bhi         |$LN1@GetCommand|
  054a0	e59d20b8	 ldr         r2, [sp, #0xB8]
  054a4	e1a03102	 mov         r3, r2, lsl #2
  054a8	e083300f	 add         r3, r3, pc
  054ac	e5933004	 ldr         r3, [r3, #4]
  054b0	e08ff003	 add         pc, pc, r3
  054b4		 |$LN33@GetCommand|
  054b4		 |$LN32@GetCommand|
  054b4		 |$LN34@GetCommand|
  054b4	0000001c	 DCD         0x1c
  054b8		 |$LN35@GetCommand|
  054b8	00000020	 DCD         0x20
  054bc		 |$LN36@GetCommand|
  054bc	00000020	 DCD         0x20
  054c0		 |$LN37@GetCommand|
  054c0	000004ec	 DCD         0x4ec
  054c4		 |$LN38@GetCommand|
  054c4	000001c8	 DCD         0x1c8
  054c8		 |$LN39@GetCommand|
  054c8	000001c8	 DCD         0x1c8
  054cc		 |$LN40@GetCommand|
  054cc	00000318	 DCD         0x318
  054d0		 |$LN41@GetCommand|
  054d0	00000318	 DCD         0x318
  054d4		 |$LN6@GetCommand|

; 2175 :         {
; 2176 :         case NoResponse:
; 2177 :             break;

  054d4	ea00020c	 b           |$LN7@GetCommand|
  054d8		 |$LN5@GetCommand|

; 2178 : 
; 2179 :         case ResponseR1:                
; 2180 :         case ResponseR1b:
; 2181 :             //--- SHORT RESPONSE (48 bits total)--- 
; 2182 :             // Format: { START_BIT(1) | TRANSMISSION_BIT(1) | COMMAND_INDEX(6) | CARD_STATUS(32) | CRC7(7) | END_BIT(1) }
; 2183 :             // NOTE: START_BIT and TRANSMISSION_BIT = 0, END_BIT = 1
; 2184 :             //
; 2185 :             // Dummy byte needed by calling function.
; 2186 :             *respBuff = (BYTE)(START_BIT | TRANSMISSION_BIT | pRequest->CommandCode);

  054d8	e59d30ec	 ldr         r3, [sp, #0xEC]
  054dc	e2833014	 add         r3, r3, #0x14
  054e0	e5d32000	 ldrb        r2, [r3]
  054e4	e59d3034	 ldr         r3, [sp, #0x34]
  054e8	e5c32000	 strb        r2, [r3]

; 2187 : 
; 2188 :             wRSP = INREG16(&m_vpSDIOReg->MMC_RSP6);

  054ec	e59d30e8	 ldr         r3, [sp, #0xE8]
  054f0	e2833088	 add         r3, r3, #0x88
  054f4	e5933000	 ldr         r3, [r3]
  054f8	e2833058	 add         r3, r3, #0x58
  054fc	e1d330b0	 ldrh        r3, [r3]
  05500	e1cd33ba	 strh        r3, [sp, #0x3A]

; 2189 :             *(respBuff + 1) = (BYTE)wRSP;

  05504	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  05508	e20320ff	 and         r2, r3, #0xFF
  0550c	e59d3034	 ldr         r3, [sp, #0x34]
  05510	e2833001	 add         r3, r3, #1
  05514	e5c32000	 strb        r2, [r3]

; 2190 :             *(respBuff + 2) = (BYTE)(wRSP >> 8);

  05518	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  0551c	e1a03443	 mov         r3, r3, asr #8
  05520	e20320ff	 and         r2, r3, #0xFF
  05524	e59d3034	 ldr         r3, [sp, #0x34]
  05528	e2833002	 add         r3, r3, #2
  0552c	e5c32000	 strb        r2, [r3]

; 2191 : 
; 2192 :             wRSP = INREG16(&m_vpSDIOReg->MMC_RSP7);

  05530	e59d30e8	 ldr         r3, [sp, #0xE8]
  05534	e2833088	 add         r3, r3, #0x88
  05538	e5933000	 ldr         r3, [r3]
  0553c	e283305c	 add         r3, r3, #0x5C
  05540	e1d330b0	 ldrh        r3, [r3]
  05544	e1cd33ba	 strh        r3, [sp, #0x3A]

; 2193 :             *(respBuff + 3) = (BYTE)wRSP;

  05548	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  0554c	e20320ff	 and         r2, r3, #0xFF
  05550	e59d3034	 ldr         r3, [sp, #0x34]
  05554	e2833003	 add         r3, r3, #3
  05558	e5c32000	 strb        r2, [r3]

; 2194 :             *(respBuff + 4) = (BYTE)(wRSP >> 8);

  0555c	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  05560	e1a03443	 mov         r3, r3, asr #8
  05564	e20320ff	 and         r2, r3, #0xFF
  05568	e59d3034	 ldr         r3, [sp, #0x34]
  0556c	e2833004	 add         r3, r3, #4
  05570	e5c32000	 strb        r2, [r3]

; 2195 : 
; 2196 : 
; 2197 :             *(respBuff + 5) = (BYTE)(END_RESERVED | END_BIT);

  05574	e59d3034	 ldr         r3, [sp, #0x34]
  05578	e2832005	 add         r2, r3, #5
  0557c	e3a030ff	 mov         r3, #0xFF
  05580	e5c23000	 strb        r3, [r2]

; 2198 : 
; 2199 :             DEBUGMSG(SHC_RESPONSE_ZONE, (L"CSDIOControllerBase::GetCommandResponse: "
; 2200 :                 L"R1 R1b : 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n", *(respBuff + 0), 
; 2201 :                 *(respBuff + 1), *(respBuff + 2), *(respBuff + 3), *(respBuff + 4), *(respBuff + 5)
; 2202 :             ));

  05584	e59f379c	 ldr         r3, [pc, #0x79C]
  05588	e5933440	 ldr         r3, [r3, #0x440]
  0558c	e3130004	 tst         r3, #4
  05590	0a000018	 beq         |$LN14@GetCommand|
  05594	e59d3034	 ldr         r3, [sp, #0x34]
  05598	e2833005	 add         r3, r3, #5
  0559c	e5d33000	 ldrb        r3, [r3]
  055a0	e58d3008	 str         r3, [sp, #8]
  055a4	e59d3034	 ldr         r3, [sp, #0x34]
  055a8	e2833004	 add         r3, r3, #4
  055ac	e5d33000	 ldrb        r3, [r3]
  055b0	e58d3004	 str         r3, [sp, #4]
  055b4	e59d3034	 ldr         r3, [sp, #0x34]
  055b8	e2833003	 add         r3, r3, #3
  055bc	e5d33000	 ldrb        r3, [r3]
  055c0	e58d3000	 str         r3, [sp]
  055c4	e59d3034	 ldr         r3, [sp, #0x34]
  055c8	e2833002	 add         r3, r3, #2
  055cc	e5d33000	 ldrb        r3, [r3]
  055d0	e59d2034	 ldr         r2, [sp, #0x34]
  055d4	e2822001	 add         r2, r2, #1
  055d8	e5d22000	 ldrb        r2, [r2]
  055dc	e59d1034	 ldr         r1, [sp, #0x34]
  055e0	e5d11000	 ldrb        r1, [r1]
  055e4	e59f0754	 ldr         r0, [pc, #0x754]
  055e8	eb000000	 bl          NKDbgPrintfW
  055ec	e3a03001	 mov         r3, #1
  055f0	e58d30bc	 str         r3, [sp, #0xBC]
  055f4	ea000001	 b           |$LN15@GetCommand|
  055f8		 |$LN14@GetCommand|
  055f8	e3a03000	 mov         r3, #0
  055fc	e58d30bc	 str         r3, [sp, #0xBC]
  05600		 |$LN15@GetCommand|

; 2203 :             DEBUGMSG (SHC_SDBUS_INTERACT_ZONE,(L"CSDIOControllerBase::GetCommandResponse: "
; 2204 :                 L"Returned [%02x%02x%02x%02x%02x]\r\n",
; 2205 :                 respBuff[0], respBuff[1], respBuff[2], respBuff[3], respBuff[4], respBuff[5]
; 2206 :             ));

  05600	e59f3720	 ldr         r3, [pc, #0x720]
  05604	e5933440	 ldr         r3, [r3, #0x440]
  05608	e3130040	 tst         r3, #0x40
  0560c	0a000018	 beq         |$LN16@GetCommand|
  05610	e59d3034	 ldr         r3, [sp, #0x34]
  05614	e2833005	 add         r3, r3, #5
  05618	e5d33000	 ldrb        r3, [r3]
  0561c	e58d3008	 str         r3, [sp, #8]
  05620	e59d3034	 ldr         r3, [sp, #0x34]
  05624	e2833004	 add         r3, r3, #4
  05628	e5d33000	 ldrb        r3, [r3]
  0562c	e58d3004	 str         r3, [sp, #4]
  05630	e59d3034	 ldr         r3, [sp, #0x34]
  05634	e2833003	 add         r3, r3, #3
  05638	e5d33000	 ldrb        r3, [r3]
  0563c	e58d3000	 str         r3, [sp]
  05640	e59d3034	 ldr         r3, [sp, #0x34]
  05644	e2833002	 add         r3, r3, #2
  05648	e5d33000	 ldrb        r3, [r3]
  0564c	e59d2034	 ldr         r2, [sp, #0x34]
  05650	e2822001	 add         r2, r2, #1
  05654	e5d22000	 ldrb        r2, [r2]
  05658	e59d1034	 ldr         r1, [sp, #0x34]
  0565c	e5d11000	 ldrb        r1, [r1]
  05660	e59f06c8	 ldr         r0, [pc, #0x6C8]
  05664	eb000000	 bl          NKDbgPrintfW
  05668	e3a03001	 mov         r3, #1
  0566c	e58d30c0	 str         r3, [sp, #0xC0]
  05670	ea000001	 b           |$LN17@GetCommand|
  05674		 |$LN16@GetCommand|
  05674	e3a03000	 mov         r3, #0
  05678	e58d30c0	 str         r3, [sp, #0xC0]
  0567c		 |$LN17@GetCommand|

; 2207 :             break;

  0567c	ea0001a2	 b           |$LN7@GetCommand|
  05680		 |$LN4@GetCommand|

; 2208 : 
; 2209 :         case ResponseR3:
; 2210 :         case ResponseR4:
; 2211 :             DEBUGMSG(SHC_RESPONSE_ZONE, (L"CSDIOControllerBase::GetCommandResponse: "
; 2212 :                 L"ResponseR3 ResponseR4\r\n"
; 2213 :             ));

  05680	e59f36a0	 ldr         r3, [pc, #0x6A0]
  05684	e5933440	 ldr         r3, [r3, #0x440]
  05688	e3130004	 tst         r3, #4
  0568c	0a000004	 beq         |$LN18@GetCommand|
  05690	e59f06a4	 ldr         r0, [pc, #0x6A4]
  05694	eb000000	 bl          NKDbgPrintfW
  05698	e3a03001	 mov         r3, #1
  0569c	e58d30c4	 str         r3, [sp, #0xC4]
  056a0	ea000001	 b           |$LN19@GetCommand|
  056a4		 |$LN18@GetCommand|
  056a4	e3a03000	 mov         r3, #0
  056a8	e58d30c4	 str         r3, [sp, #0xC4]
  056ac		 |$LN19@GetCommand|

; 2214 :             //--- SHORT RESPONSE (48 bits total)--- 
; 2215 :             // Format: { START_BIT(1) | TRANSMISSION_BIT(1) | RESERVED(6) | CARD_STATUS(32) | RESERVED(7) | END_BIT(1) }
; 2216 :             //
; 2217 :             *respBuff = (BYTE)(START_BIT | TRANSMISSION_BIT | START_RESERVED);

  056ac	e59d2034	 ldr         r2, [sp, #0x34]
  056b0	e3a0303f	 mov         r3, #0x3F
  056b4	e5c23000	 strb        r3, [r2]

; 2218 : 
; 2219 :             wRSP = INREG16(&m_vpSDIOReg->MMC_RSP6);

  056b8	e59d30e8	 ldr         r3, [sp, #0xE8]
  056bc	e2833088	 add         r3, r3, #0x88
  056c0	e5933000	 ldr         r3, [r3]
  056c4	e2833058	 add         r3, r3, #0x58
  056c8	e1d330b0	 ldrh        r3, [r3]
  056cc	e1cd33ba	 strh        r3, [sp, #0x3A]

; 2220 :             *(respBuff + 1) = (BYTE)wRSP;

  056d0	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  056d4	e20320ff	 and         r2, r3, #0xFF
  056d8	e59d3034	 ldr         r3, [sp, #0x34]
  056dc	e2833001	 add         r3, r3, #1
  056e0	e5c32000	 strb        r2, [r3]

; 2221 :             *(respBuff + 2)= (BYTE)(wRSP >> 8);

  056e4	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  056e8	e1a03443	 mov         r3, r3, asr #8
  056ec	e20320ff	 and         r2, r3, #0xFF
  056f0	e59d3034	 ldr         r3, [sp, #0x34]
  056f4	e2833002	 add         r3, r3, #2
  056f8	e5c32000	 strb        r2, [r3]

; 2222 : 
; 2223 : 
; 2224 :             wRSP = INREG16(&m_vpSDIOReg->MMC_RSP7);

  056fc	e59d30e8	 ldr         r3, [sp, #0xE8]
  05700	e2833088	 add         r3, r3, #0x88
  05704	e5933000	 ldr         r3, [r3]
  05708	e283305c	 add         r3, r3, #0x5C
  0570c	e1d330b0	 ldrh        r3, [r3]
  05710	e1cd33ba	 strh        r3, [sp, #0x3A]

; 2225 :             *(respBuff + 3) = (BYTE)wRSP;

  05714	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  05718	e20320ff	 and         r2, r3, #0xFF
  0571c	e59d3034	 ldr         r3, [sp, #0x34]
  05720	e2833003	 add         r3, r3, #3
  05724	e5c32000	 strb        r2, [r3]

; 2226 :             *(respBuff + 4) = (BYTE)(wRSP >> 8);

  05728	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  0572c	e1a03443	 mov         r3, r3, asr #8
  05730	e20320ff	 and         r2, r3, #0xFF
  05734	e59d3034	 ldr         r3, [sp, #0x34]
  05738	e2833004	 add         r3, r3, #4
  0573c	e5c32000	 strb        r2, [r3]

; 2227 : 
; 2228 :             *(respBuff + 5) = (BYTE)(END_RESERVED | END_BIT);

  05740	e59d3034	 ldr         r3, [sp, #0x34]
  05744	e2832005	 add         r2, r3, #5
  05748	e3a030ff	 mov         r3, #0xFF
  0574c	e5c23000	 strb        r3, [r2]

; 2229 : 
; 2230 :             DEBUGMSG (SHC_SDBUS_INTERACT_ZONE,(L"CSDIOControllerBase::GetCommandResponse: "
; 2231 :                 L"Returned [%02x%02x%02x%02x%02x]\r\n", 
; 2232 :                 respBuff[0], respBuff[1], respBuff[2], respBuff[3], respBuff[4], respBuff[5]
; 2233 :             ));

  05750	e59f35d0	 ldr         r3, [pc, #0x5D0]
  05754	e5933440	 ldr         r3, [r3, #0x440]
  05758	e3130040	 tst         r3, #0x40
  0575c	0a000018	 beq         |$LN20@GetCommand|
  05760	e59d3034	 ldr         r3, [sp, #0x34]
  05764	e2833005	 add         r3, r3, #5
  05768	e5d33000	 ldrb        r3, [r3]
  0576c	e58d3008	 str         r3, [sp, #8]
  05770	e59d3034	 ldr         r3, [sp, #0x34]
  05774	e2833004	 add         r3, r3, #4
  05778	e5d33000	 ldrb        r3, [r3]
  0577c	e58d3004	 str         r3, [sp, #4]
  05780	e59d3034	 ldr         r3, [sp, #0x34]
  05784	e2833003	 add         r3, r3, #3
  05788	e5d33000	 ldrb        r3, [r3]
  0578c	e58d3000	 str         r3, [sp]
  05790	e59d3034	 ldr         r3, [sp, #0x34]
  05794	e2833002	 add         r3, r3, #2
  05798	e5d33000	 ldrb        r3, [r3]
  0579c	e59d2034	 ldr         r2, [sp, #0x34]
  057a0	e2822001	 add         r2, r2, #1
  057a4	e5d22000	 ldrb        r2, [r2]
  057a8	e59d1034	 ldr         r1, [sp, #0x34]
  057ac	e5d11000	 ldrb        r1, [r1]
  057b0	e59f0578	 ldr         r0, [pc, #0x578]
  057b4	eb000000	 bl          NKDbgPrintfW
  057b8	e3a03001	 mov         r3, #1
  057bc	e58d30c8	 str         r3, [sp, #0xC8]
  057c0	ea000001	 b           |$LN21@GetCommand|
  057c4		 |$LN20@GetCommand|
  057c4	e3a03000	 mov         r3, #0
  057c8	e58d30c8	 str         r3, [sp, #0xC8]
  057cc		 |$LN21@GetCommand|

; 2234 :             break;

  057cc	ea00014e	 b           |$LN7@GetCommand|
  057d0		 |$LN3@GetCommand|

; 2235 : 
; 2236 :         case ResponseR5:                
; 2237 :         case ResponseR6:
; 2238 :             DEBUGMSG(SHC_RESPONSE_ZONE, (L"CSDIOControllerBase::GetCommandResponse: "
; 2239 :                 L"ResponseR5 ResponseR6\r\n"
; 2240 :             ));

  057d0	e59f3550	 ldr         r3, [pc, #0x550]
  057d4	e5933440	 ldr         r3, [r3, #0x440]
  057d8	e3130004	 tst         r3, #4
  057dc	0a000004	 beq         |$LN22@GetCommand|
  057e0	e59f0550	 ldr         r0, [pc, #0x550]
  057e4	eb000000	 bl          NKDbgPrintfW
  057e8	e3a03001	 mov         r3, #1
  057ec	e58d30cc	 str         r3, [sp, #0xCC]
  057f0	ea000001	 b           |$LN23@GetCommand|
  057f4		 |$LN22@GetCommand|
  057f4	e3a03000	 mov         r3, #0
  057f8	e58d30cc	 str         r3, [sp, #0xCC]
  057fc		 |$LN23@GetCommand|

; 2241 :             //--- SHORT RESPONSE (48 bits total)--- 
; 2242 :             // Format: { START_BIT(1) | TRANSMISSION_BIT(1) | COMMAND_INDEX(6) | RCA(16) | CARD_STATUS(16) | CRC7(7) | END_BIT(1) }
; 2243 :             //
; 2244 :             *respBuff = (BYTE)(START_BIT | TRANSMISSION_BIT | pRequest->CommandCode);

  057fc	e59d30ec	 ldr         r3, [sp, #0xEC]
  05800	e2833014	 add         r3, r3, #0x14
  05804	e5d32000	 ldrb        r2, [r3]
  05808	e59d3034	 ldr         r3, [sp, #0x34]
  0580c	e5c32000	 strb        r2, [r3]

; 2245 : 
; 2246 :             wRSP = INREG16(&m_vpSDIOReg->MMC_RSP6);

  05810	e59d30e8	 ldr         r3, [sp, #0xE8]
  05814	e2833088	 add         r3, r3, #0x88
  05818	e5933000	 ldr         r3, [r3]
  0581c	e2833058	 add         r3, r3, #0x58
  05820	e1d330b0	 ldrh        r3, [r3]
  05824	e1cd33ba	 strh        r3, [sp, #0x3A]

; 2247 :             *(respBuff + 1) = (BYTE)wRSP;

  05828	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  0582c	e20320ff	 and         r2, r3, #0xFF
  05830	e59d3034	 ldr         r3, [sp, #0x34]
  05834	e2833001	 add         r3, r3, #1
  05838	e5c32000	 strb        r2, [r3]

; 2248 :             *(respBuff + 2)= (BYTE)(wRSP >> 8);

  0583c	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  05840	e1a03443	 mov         r3, r3, asr #8
  05844	e20320ff	 and         r2, r3, #0xFF
  05848	e59d3034	 ldr         r3, [sp, #0x34]
  0584c	e2833002	 add         r3, r3, #2
  05850	e5c32000	 strb        r2, [r3]

; 2249 : 
; 2250 : 
; 2251 :             wRSP = INREG16(&m_vpSDIOReg->MMC_RSP7);

  05854	e59d30e8	 ldr         r3, [sp, #0xE8]
  05858	e2833088	 add         r3, r3, #0x88
  0585c	e5933000	 ldr         r3, [r3]
  05860	e283305c	 add         r3, r3, #0x5C
  05864	e1d330b0	 ldrh        r3, [r3]
  05868	e1cd33ba	 strh        r3, [sp, #0x3A]

; 2252 :             *(respBuff + 3) = (BYTE)wRSP;

  0586c	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  05870	e20320ff	 and         r2, r3, #0xFF
  05874	e59d3034	 ldr         r3, [sp, #0x34]
  05878	e2833003	 add         r3, r3, #3
  0587c	e5c32000	 strb        r2, [r3]

; 2253 :             *(respBuff + 4) = (BYTE)(wRSP >> 8);

  05880	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  05884	e1a03443	 mov         r3, r3, asr #8
  05888	e20320ff	 and         r2, r3, #0xFF
  0588c	e59d3034	 ldr         r3, [sp, #0x34]
  05890	e2833004	 add         r3, r3, #4
  05894	e5c32000	 strb        r2, [r3]

; 2254 : 
; 2255 :             *(respBuff + 5) = (BYTE)(END_BIT);

  05898	e59d3034	 ldr         r3, [sp, #0x34]
  0589c	e2832005	 add         r2, r3, #5
  058a0	e3a03001	 mov         r3, #1
  058a4	e5c23000	 strb        r3, [r2]

; 2256 : 
; 2257 :             DEBUGMSG(SHC_RESPONSE_ZONE, (L"CSDIOControllerBase::GetCommandResponse: "
; 2258 : 
; 2259 :                 L"R5 R6 : 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x \r\n", *(respBuff + 0), 
; 2260 :                 *(respBuff + 1), *(respBuff + 2), *(respBuff + 3), *(respBuff + 4), *(respBuff + 5)
; 2261 :             ));

  058a8	e59f3478	 ldr         r3, [pc, #0x478]
  058ac	e5933440	 ldr         r3, [r3, #0x440]
  058b0	e3130004	 tst         r3, #4
  058b4	0a000018	 beq         |$LN24@GetCommand|
  058b8	e59d3034	 ldr         r3, [sp, #0x34]
  058bc	e2833005	 add         r3, r3, #5
  058c0	e5d33000	 ldrb        r3, [r3]
  058c4	e58d3008	 str         r3, [sp, #8]
  058c8	e59d3034	 ldr         r3, [sp, #0x34]
  058cc	e2833004	 add         r3, r3, #4
  058d0	e5d33000	 ldrb        r3, [r3]
  058d4	e58d3004	 str         r3, [sp, #4]
  058d8	e59d3034	 ldr         r3, [sp, #0x34]
  058dc	e2833003	 add         r3, r3, #3
  058e0	e5d33000	 ldrb        r3, [r3]
  058e4	e58d3000	 str         r3, [sp]
  058e8	e59d3034	 ldr         r3, [sp, #0x34]
  058ec	e2833002	 add         r3, r3, #2
  058f0	e5d33000	 ldrb        r3, [r3]
  058f4	e59d2034	 ldr         r2, [sp, #0x34]
  058f8	e2822001	 add         r2, r2, #1
  058fc	e5d22000	 ldrb        r2, [r2]
  05900	e59d1034	 ldr         r1, [sp, #0x34]
  05904	e5d11000	 ldrb        r1, [r1]
  05908	e59f0424	 ldr         r0, [pc, #0x424]
  0590c	eb000000	 bl          NKDbgPrintfW
  05910	e3a03001	 mov         r3, #1
  05914	e58d30d0	 str         r3, [sp, #0xD0]
  05918	ea000001	 b           |$LN25@GetCommand|
  0591c		 |$LN24@GetCommand|
  0591c	e3a03000	 mov         r3, #0
  05920	e58d30d0	 str         r3, [sp, #0xD0]
  05924		 |$LN25@GetCommand|

; 2262 : 
; 2263 :             DEBUGMSG (SHC_SDBUS_INTERACT_ZONE,(L"CSDIOControllerBase::GetCommandResponse: "
; 2264 :                 L"Returned [%02x%02x%02x%02x%02x]\r\n", 
; 2265 :                 respBuff[0], respBuff[1], respBuff[2], respBuff[3], respBuff[4], respBuff[5]
; 2266 :             ));

  05924	e59f33fc	 ldr         r3, [pc, #0x3FC]
  05928	e5933440	 ldr         r3, [r3, #0x440]
  0592c	e3130040	 tst         r3, #0x40
  05930	0a000018	 beq         |$LN26@GetCommand|
  05934	e59d3034	 ldr         r3, [sp, #0x34]
  05938	e2833005	 add         r3, r3, #5
  0593c	e5d33000	 ldrb        r3, [r3]
  05940	e58d3008	 str         r3, [sp, #8]
  05944	e59d3034	 ldr         r3, [sp, #0x34]
  05948	e2833004	 add         r3, r3, #4
  0594c	e5d33000	 ldrb        r3, [r3]
  05950	e58d3004	 str         r3, [sp, #4]
  05954	e59d3034	 ldr         r3, [sp, #0x34]
  05958	e2833003	 add         r3, r3, #3
  0595c	e5d33000	 ldrb        r3, [r3]
  05960	e58d3000	 str         r3, [sp]
  05964	e59d3034	 ldr         r3, [sp, #0x34]
  05968	e2833002	 add         r3, r3, #2
  0596c	e5d33000	 ldrb        r3, [r3]
  05970	e59d2034	 ldr         r2, [sp, #0x34]
  05974	e2822001	 add         r2, r2, #1
  05978	e5d22000	 ldrb        r2, [r2]
  0597c	e59d1034	 ldr         r1, [sp, #0x34]
  05980	e5d11000	 ldrb        r1, [r1]
  05984	e59f03a4	 ldr         r0, [pc, #0x3A4]
  05988	eb000000	 bl          NKDbgPrintfW
  0598c	e3a03001	 mov         r3, #1
  05990	e58d30d4	 str         r3, [sp, #0xD4]
  05994	ea000001	 b           |$LN27@GetCommand|
  05998		 |$LN26@GetCommand|
  05998	e3a03000	 mov         r3, #0
  0599c	e58d30d4	 str         r3, [sp, #0xD4]
  059a0		 |$LN27@GetCommand|

; 2267 :             break;

  059a0	ea0000d9	 b           |$LN7@GetCommand|
  059a4		 |$LN2@GetCommand|

; 2268 : 
; 2269 :         case ResponseR2:
; 2270 : 
; 2271 :             wRSP = INREG16(&m_vpSDIOReg->MMC_RSP0);

  059a4	e59d30e8	 ldr         r3, [sp, #0xE8]
  059a8	e2833088	 add         r3, r3, #0x88
  059ac	e5933000	 ldr         r3, [r3]
  059b0	e2833040	 add         r3, r3, #0x40
  059b4	e1d330b0	 ldrh        r3, [r3]
  059b8	e1cd33ba	 strh        r3, [sp, #0x3A]

; 2272 :             *respBuff       = (BYTE)wRSP;

  059bc	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  059c0	e20320ff	 and         r2, r3, #0xFF
  059c4	e59d3034	 ldr         r3, [sp, #0x34]
  059c8	e5c32000	 strb        r2, [r3]

; 2273 :             *(respBuff + 1) = (BYTE)(wRSP >> 8);

  059cc	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  059d0	e1a03443	 mov         r3, r3, asr #8
  059d4	e20320ff	 and         r2, r3, #0xFF
  059d8	e59d3034	 ldr         r3, [sp, #0x34]
  059dc	e2833001	 add         r3, r3, #1
  059e0	e5c32000	 strb        r2, [r3]

; 2274 : 
; 2275 :             wRSP = INREG16(&m_vpSDIOReg->MMC_RSP1);

  059e4	e59d30e8	 ldr         r3, [sp, #0xE8]
  059e8	e2833088	 add         r3, r3, #0x88
  059ec	e5933000	 ldr         r3, [r3]
  059f0	e2833044	 add         r3, r3, #0x44
  059f4	e1d330b0	 ldrh        r3, [r3]
  059f8	e1cd33ba	 strh        r3, [sp, #0x3A]

; 2276 :             *(respBuff + 2) = (BYTE)wRSP;

  059fc	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  05a00	e20320ff	 and         r2, r3, #0xFF
  05a04	e59d3034	 ldr         r3, [sp, #0x34]
  05a08	e2833002	 add         r3, r3, #2
  05a0c	e5c32000	 strb        r2, [r3]

; 2277 :             *(respBuff + 3) = (BYTE)(wRSP >> 8);

  05a10	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  05a14	e1a03443	 mov         r3, r3, asr #8
  05a18	e20320ff	 and         r2, r3, #0xFF
  05a1c	e59d3034	 ldr         r3, [sp, #0x34]
  05a20	e2833003	 add         r3, r3, #3
  05a24	e5c32000	 strb        r2, [r3]

; 2278 : 
; 2279 :             wRSP = INREG16(&m_vpSDIOReg->MMC_RSP2);

  05a28	e59d30e8	 ldr         r3, [sp, #0xE8]
  05a2c	e2833088	 add         r3, r3, #0x88
  05a30	e5933000	 ldr         r3, [r3]
  05a34	e2833048	 add         r3, r3, #0x48
  05a38	e1d330b0	 ldrh        r3, [r3]
  05a3c	e1cd33ba	 strh        r3, [sp, #0x3A]

; 2280 :             *(respBuff + 4) = (BYTE)wRSP;

  05a40	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  05a44	e20320ff	 and         r2, r3, #0xFF
  05a48	e59d3034	 ldr         r3, [sp, #0x34]
  05a4c	e2833004	 add         r3, r3, #4
  05a50	e5c32000	 strb        r2, [r3]

; 2281 :             *(respBuff + 5) = (BYTE)(wRSP >> 8);

  05a54	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  05a58	e1a03443	 mov         r3, r3, asr #8
  05a5c	e20320ff	 and         r2, r3, #0xFF
  05a60	e59d3034	 ldr         r3, [sp, #0x34]
  05a64	e2833005	 add         r3, r3, #5
  05a68	e5c32000	 strb        r2, [r3]

; 2282 : 
; 2283 :             wRSP = INREG16(&m_vpSDIOReg->MMC_RSP3);

  05a6c	e59d30e8	 ldr         r3, [sp, #0xE8]
  05a70	e2833088	 add         r3, r3, #0x88
  05a74	e5933000	 ldr         r3, [r3]
  05a78	e283304c	 add         r3, r3, #0x4C
  05a7c	e1d330b0	 ldrh        r3, [r3]
  05a80	e1cd33ba	 strh        r3, [sp, #0x3A]

; 2284 :             *(respBuff + 6) = (BYTE)wRSP;

  05a84	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  05a88	e20320ff	 and         r2, r3, #0xFF
  05a8c	e59d3034	 ldr         r3, [sp, #0x34]
  05a90	e2833006	 add         r3, r3, #6
  05a94	e5c32000	 strb        r2, [r3]

; 2285 :             *(respBuff + 7) = (BYTE)(wRSP >> 8);

  05a98	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  05a9c	e1a03443	 mov         r3, r3, asr #8
  05aa0	e20320ff	 and         r2, r3, #0xFF
  05aa4	e59d3034	 ldr         r3, [sp, #0x34]
  05aa8	e2833007	 add         r3, r3, #7
  05aac	e5c32000	 strb        r2, [r3]

; 2286 : 
; 2287 :             wRSP = INREG16(&m_vpSDIOReg->MMC_RSP4);

  05ab0	e59d30e8	 ldr         r3, [sp, #0xE8]
  05ab4	e2833088	 add         r3, r3, #0x88
  05ab8	e5933000	 ldr         r3, [r3]
  05abc	e2833050	 add         r3, r3, #0x50
  05ac0	e1d330b0	 ldrh        r3, [r3]
  05ac4	e1cd33ba	 strh        r3, [sp, #0x3A]

; 2288 :             *(respBuff + 8) = (BYTE)wRSP;

  05ac8	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  05acc	e20320ff	 and         r2, r3, #0xFF
  05ad0	e59d3034	 ldr         r3, [sp, #0x34]
  05ad4	e2833008	 add         r3, r3, #8
  05ad8	e5c32000	 strb        r2, [r3]

; 2289 :             *(respBuff + 9) = (BYTE)(wRSP >> 8);

  05adc	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  05ae0	e1a03443	 mov         r3, r3, asr #8
  05ae4	e20320ff	 and         r2, r3, #0xFF
  05ae8	e59d3034	 ldr         r3, [sp, #0x34]
  05aec	e2833009	 add         r3, r3, #9
  05af0	e5c32000	 strb        r2, [r3]

; 2290 : 
; 2291 :             wRSP = INREG16(&m_vpSDIOReg->MMC_RSP5);

  05af4	e59d30e8	 ldr         r3, [sp, #0xE8]
  05af8	e2833088	 add         r3, r3, #0x88
  05afc	e5933000	 ldr         r3, [r3]
  05b00	e2833054	 add         r3, r3, #0x54
  05b04	e1d330b0	 ldrh        r3, [r3]
  05b08	e1cd33ba	 strh        r3, [sp, #0x3A]

; 2292 :             *(respBuff + 10) = (BYTE)wRSP;

  05b0c	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  05b10	e20320ff	 and         r2, r3, #0xFF
  05b14	e59d3034	 ldr         r3, [sp, #0x34]
  05b18	e283300a	 add         r3, r3, #0xA
  05b1c	e5c32000	 strb        r2, [r3]

; 2293 :             *(respBuff + 11) = (BYTE)(wRSP >> 8);

  05b20	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  05b24	e1a03443	 mov         r3, r3, asr #8
  05b28	e20320ff	 and         r2, r3, #0xFF
  05b2c	e59d3034	 ldr         r3, [sp, #0x34]
  05b30	e283300b	 add         r3, r3, #0xB
  05b34	e5c32000	 strb        r2, [r3]

; 2294 : 
; 2295 :             wRSP = INREG16(&m_vpSDIOReg->MMC_RSP6);

  05b38	e59d30e8	 ldr         r3, [sp, #0xE8]
  05b3c	e2833088	 add         r3, r3, #0x88
  05b40	e5933000	 ldr         r3, [r3]
  05b44	e2833058	 add         r3, r3, #0x58
  05b48	e1d330b0	 ldrh        r3, [r3]
  05b4c	e1cd33ba	 strh        r3, [sp, #0x3A]

; 2296 :             *(respBuff + 12) = (BYTE)wRSP;

  05b50	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  05b54	e20320ff	 and         r2, r3, #0xFF
  05b58	e59d3034	 ldr         r3, [sp, #0x34]
  05b5c	e283300c	 add         r3, r3, #0xC
  05b60	e5c32000	 strb        r2, [r3]

; 2297 :             *(respBuff + 13) = (BYTE)(wRSP >> 8);

  05b64	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  05b68	e1a03443	 mov         r3, r3, asr #8
  05b6c	e20320ff	 and         r2, r3, #0xFF
  05b70	e59d3034	 ldr         r3, [sp, #0x34]
  05b74	e283300d	 add         r3, r3, #0xD
  05b78	e5c32000	 strb        r2, [r3]

; 2298 : 
; 2299 :             wRSP = INREG16(&m_vpSDIOReg->MMC_RSP7);

  05b7c	e59d30e8	 ldr         r3, [sp, #0xE8]
  05b80	e2833088	 add         r3, r3, #0x88
  05b84	e5933000	 ldr         r3, [r3]
  05b88	e283305c	 add         r3, r3, #0x5C
  05b8c	e1d330b0	 ldrh        r3, [r3]
  05b90	e1cd33ba	 strh        r3, [sp, #0x3A]

; 2300 :             *(respBuff + 14) = (BYTE)wRSP;

  05b94	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  05b98	e20320ff	 and         r2, r3, #0xFF
  05b9c	e59d3034	 ldr         r3, [sp, #0x34]
  05ba0	e283300e	 add         r3, r3, #0xE
  05ba4	e5c32000	 strb        r2, [r3]

; 2301 :             *(respBuff + 15) = (BYTE)(wRSP >> 8);

  05ba8	e1dd33ba	 ldrh        r3, [sp, #0x3A]
  05bac	e1a03443	 mov         r3, r3, asr #8
  05bb0	e20320ff	 and         r2, r3, #0xFF
  05bb4	e59d3034	 ldr         r3, [sp, #0x34]
  05bb8	e283300f	 add         r3, r3, #0xF
  05bbc	e5c32000	 strb        r2, [r3]

; 2302 : 
; 2303 :             DEBUGMSG(SHC_SDBUS_INTERACT_ZONE, (L"CSDIOControllerBase::GetCommandResponse: "
; 2304 :                 L"Returned [%02x%02x%02x%02x %02x%02x%02x%02x %02x%02x%02x%02x %02x%02x%02x%02x]\r\n", 
; 2305 :                 respBuff[0], respBuff[1], respBuff[2], respBuff[3], respBuff[4], respBuff[5], respBuff[6], respBuff[7], 
; 2306 :                 respBuff[8], respBuff[9], respBuff[10], respBuff[11], respBuff[12], respBuff[13], respBuff[14], respBuff[15]
; 2307 :             ));

  05bc0	e59f3160	 ldr         r3, [pc, #0x160]
  05bc4	e5933440	 ldr         r3, [r3, #0x440]
  05bc8	e3130040	 tst         r3, #0x40
  05bcc	0a000040	 beq         |$LN28@GetCommand|
  05bd0	e59d3034	 ldr         r3, [sp, #0x34]
  05bd4	e283300f	 add         r3, r3, #0xF
  05bd8	e5d33000	 ldrb        r3, [r3]
  05bdc	e58d3030	 str         r3, [sp, #0x30]
  05be0	e59d3034	 ldr         r3, [sp, #0x34]
  05be4	e283300e	 add         r3, r3, #0xE
  05be8	e5d33000	 ldrb        r3, [r3]
  05bec	e58d302c	 str         r3, [sp, #0x2C]
  05bf0	e59d3034	 ldr         r3, [sp, #0x34]
  05bf4	e283300d	 add         r3, r3, #0xD
  05bf8	e5d33000	 ldrb        r3, [r3]
  05bfc	e58d3028	 str         r3, [sp, #0x28]
  05c00	e59d3034	 ldr         r3, [sp, #0x34]
  05c04	e283300c	 add         r3, r3, #0xC
  05c08	e5d33000	 ldrb        r3, [r3]
  05c0c	e58d3024	 str         r3, [sp, #0x24]
  05c10	e59d3034	 ldr         r3, [sp, #0x34]
  05c14	e283300b	 add         r3, r3, #0xB
  05c18	e5d33000	 ldrb        r3, [r3]
  05c1c	e58d3020	 str         r3, [sp, #0x20]
  05c20	e59d3034	 ldr         r3, [sp, #0x34]
  05c24	e283300a	 add         r3, r3, #0xA
  05c28	e5d33000	 ldrb        r3, [r3]
  05c2c	e58d301c	 str         r3, [sp, #0x1C]
  05c30	e59d3034	 ldr         r3, [sp, #0x34]
  05c34	e2833009	 add         r3, r3, #9
  05c38	e5d33000	 ldrb        r3, [r3]
  05c3c	e58d3018	 str         r3, [sp, #0x18]
  05c40	e59d3034	 ldr         r3, [sp, #0x34]
  05c44	e2833008	 add         r3, r3, #8
  05c48	e5d33000	 ldrb        r3, [r3]
  05c4c	e58d3014	 str         r3, [sp, #0x14]
  05c50	e59d3034	 ldr         r3, [sp, #0x34]
  05c54	e2833007	 add         r3, r3, #7
  05c58	e5d33000	 ldrb        r3, [r3]
  05c5c	e58d3010	 str         r3, [sp, #0x10]
  05c60	e59d3034	 ldr         r3, [sp, #0x34]
  05c64	e2833006	 add         r3, r3, #6
  05c68	e5d33000	 ldrb        r3, [r3]
  05c6c	e58d300c	 str         r3, [sp, #0xC]
  05c70	e59d3034	 ldr         r3, [sp, #0x34]
  05c74	e2833005	 add         r3, r3, #5
  05c78	e5d33000	 ldrb        r3, [r3]
  05c7c	e58d3008	 str         r3, [sp, #8]
  05c80	e59d3034	 ldr         r3, [sp, #0x34]
  05c84	e2833004	 add         r3, r3, #4
  05c88	e5d33000	 ldrb        r3, [r3]
  05c8c	e58d3004	 str         r3, [sp, #4]
  05c90	e59d3034	 ldr         r3, [sp, #0x34]
  05c94	e2833003	 add         r3, r3, #3
  05c98	e5d33000	 ldrb        r3, [r3]
  05c9c	e58d3000	 str         r3, [sp]
  05ca0	e59d3034	 ldr         r3, [sp, #0x34]
  05ca4	e2833002	 add         r3, r3, #2
  05ca8	e5d33000	 ldrb        r3, [r3]
  05cac	e59d2034	 ldr         r2, [sp, #0x34]
  05cb0	e2822001	 add         r2, r2, #1
  05cb4	e5d22000	 ldrb        r2, [r2]
  05cb8	e59d1034	 ldr         r1, [sp, #0x34]
  05cbc	e5d11000	 ldrb        r1, [r1]
  05cc0	e59f0064	 ldr         r0, [pc, #0x64]
  05cc4	eb000000	 bl          NKDbgPrintfW
  05cc8	e3a03001	 mov         r3, #1
  05ccc	e58d30d8	 str         r3, [sp, #0xD8]
  05cd0	ea000001	 b           |$LN29@GetCommand|
  05cd4		 |$LN28@GetCommand|
  05cd4	e3a03000	 mov         r3, #0
  05cd8	e58d30d8	 str         r3, [sp, #0xD8]
  05cdc		 |$LN29@GetCommand|

; 2308 :             break;

  05cdc	ea00000a	 b           |$LN7@GetCommand|
  05ce0		 |$LN1@GetCommand|

; 2309 : 
; 2310 :         default:
; 2311 :             DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::GetCommandResponse: "
; 2312 :                 L"Unrecognized response type!\r\n"
; 2313 :             ));

  05ce0	e59f3040	 ldr         r3, [pc, #0x40]
  05ce4	e5933440	 ldr         r3, [r3, #0x440]
  05ce8	e3130902	 tst         r3, #2, 18
  05cec	0a000004	 beq         |$LN30@GetCommand|
  05cf0	e59f002c	 ldr         r0, [pc, #0x2C]
  05cf4	eb000000	 bl          NKDbgPrintfW
  05cf8	e3a03001	 mov         r3, #1
  05cfc	e58d30dc	 str         r3, [sp, #0xDC]
  05d00	ea000001	 b           |$LN31@GetCommand|
  05d04		 |$LN30@GetCommand|
  05d04	e3a03000	 mov         r3, #0
  05d08	e58d30dc	 str         r3, [sp, #0xDC]
  05d0c		 |$LN31@GetCommand|
  05d0c		 |$LN7@GetCommand|
  05d0c		 |$LN9@GetCommand|

; 2314 :             break;
; 2315 :         }
; 2316 :     }
; 2317 :     return SD_API_STATUS_SUCCESS;

  05d0c	e3a03000	 mov         r3, #0
  05d10	e58d30ac	 str         r3, [sp, #0xAC]

; 2318 : }

  05d14	e59d00ac	 ldr         r0, [sp, #0xAC]
  05d18	e28dd0e0	 add         sp, sp, #0xE0
  05d1c	e89d6000	 ldmia       sp, {sp, lr}
  05d20	e12fff1e	 bx          lr
  05d24		 |$LN45@GetCommand|
  05d24		 |$LN46@GetCommand|
  05d24	00000000	 DCD         |??_C@_1IO@ECGJCGGA@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@|
  05d28		 |$LN47@GetCommand|
  05d28	00000000	 DCD         |dpCurSettings|
  05d2c		 |$LN48@GetCommand|
  05d2c	00000000	 DCD         |??_C@_1PE@ODEKNAKI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@|
  05d30		 |$LN49@GetCommand|
  05d30	00000000	 DCD         |??_C@_1JG@IOHKNEJJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@|
  05d34		 |$LN50@GetCommand|
  05d34	00000000	 DCD         |??_C@_1KE@IOEJNFBP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@|
  05d38		 |$LN51@GetCommand|
  05d38	00000000	 DCD         |??_C@_1IC@IFEENPAP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@|
  05d3c		 |$LN52@GetCommand|
  05d3c	00000000	 DCD         |??_C@_1IC@EOCDJCEC@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@|
  05d40		 |$LN53@GetCommand|
  05d40	00000000	 DCD         |??_C@_1KE@OODPLMID@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@|
  05d44		 |$LN54@GetCommand|
  05d44	00000000	 DCD         |??_C@_1HM@DMOGHJEP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR@|
  05d48		 |$M43330|

			 ENDP  ; |?GetCommandResponse@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z|, CSDIOControllerBase::GetCommandResponse

	EXPORT	|?SDIPollingReceive@CSDIOControllerBase@@QAAHPAEK@Z| ; CSDIOControllerBase::SDIPollingReceive

  00130			 AREA	 |.pdata|, PDATA
|$T43348| DCD	|$LN5@SDIReceive|
	DCD	0x40000f04
; Function compile flags: /Odtp

  05d48			 AREA	 |.text|, CODE, ARM

  05d48		 |?SDIReceive@CSDIOControllerBase@@QAAHPAEK@Z| PROC ; CSDIOControllerBase::SDIReceive

; 2322 : {

  05d48		 |$LN5@SDIReceive|
  05d48	e1a0c00d	 mov         r12, sp
  05d4c	e92d0007	 stmdb       sp!, {r0 - r2}
  05d50	e92d5000	 stmdb       sp!, {r12, lr}
  05d54	e24dd008	 sub         sp, sp, #8
  05d58		 |$M43345|

; 2323 :     return SDIPollingReceive( pBuff, dwLen );

  05d58	e59d2018	 ldr         r2, [sp, #0x18]
  05d5c	e59d1014	 ldr         r1, [sp, #0x14]
  05d60	e59d0010	 ldr         r0, [sp, #0x10]
  05d64	eb000000	 bl          |?SDIPollingReceive@CSDIOControllerBase@@QAAHPAEK@Z|
  05d68	e58d0004	 str         r0, [sp, #4]
  05d6c	e59d3004	 ldr         r3, [sp, #4]
  05d70	e58d3000	 str         r3, [sp]

; 2324 : }

  05d74	e59d0000	 ldr         r0, [sp]
  05d78	e28dd008	 add         sp, sp, #8
  05d7c	e89d6000	 ldmia       sp, {sp, lr}
  05d80	e12fff1e	 bx          lr
  05d84		 |$M43346|

			 ENDP  ; |?SDIReceive@CSDIOControllerBase@@QAAHPAEK@Z|, CSDIOControllerBase::SDIReceive

	EXPORT	|?SDIPollingTransmit@CSDIOControllerBase@@QAAHPAEK@Z| ; CSDIOControllerBase::SDIPollingTransmit

  00138			 AREA	 |.pdata|, PDATA
|$T43354| DCD	|$LN5@SDITransmi|
	DCD	0x40000f04
; Function compile flags: /Odtp

  05d84			 AREA	 |.text|, CODE, ARM

  05d84		 |?SDITransmit@CSDIOControllerBase@@QAAHPAEK@Z| PROC ; CSDIOControllerBase::SDITransmit

; 2327 : {

  05d84		 |$LN5@SDITransmi|
  05d84	e1a0c00d	 mov         r12, sp
  05d88	e92d0007	 stmdb       sp!, {r0 - r2}
  05d8c	e92d5000	 stmdb       sp!, {r12, lr}
  05d90	e24dd008	 sub         sp, sp, #8
  05d94		 |$M43351|

; 2328 :     return SDIPollingTransmit( pBuff, dwLen );

  05d94	e59d2018	 ldr         r2, [sp, #0x18]
  05d98	e59d1014	 ldr         r1, [sp, #0x14]
  05d9c	e59d0010	 ldr         r0, [sp, #0x10]
  05da0	eb000000	 bl          |?SDIPollingTransmit@CSDIOControllerBase@@QAAHPAEK@Z|
  05da4	e58d0004	 str         r0, [sp, #4]
  05da8	e59d3004	 ldr         r3, [sp, #4]
  05dac	e58d3000	 str         r3, [sp]

; 2329 : }

  05db0	e59d0000	 ldr         r0, [sp]
  05db4	e28dd008	 add         sp, sp, #8
  05db8	e89d6000	 ldmia       sp, {sp, lr}
  05dbc	e12fff1e	 bx          lr
  05dc0		 |$M43352|

			 ENDP  ; |?SDITransmit@CSDIOControllerBase@@QAAHPAEK@Z|, CSDIOControllerBase::SDITransmit

	EXPORT	|??_C@_1LM@BPBDAKJM@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IG@PFBJDBDI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR@| [ DATA ] ; `string'
	EXPORT	|??_C@_1II@CFFNLPJP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@OCMMIAHC@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@MOEIJKJM@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LO@HEFAFMJB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@CDHDLJNH@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg@| [ DATA ] ; `string'

  00140			 AREA	 |.pdata|, PDATA
|$T43380| DCD	|$LN49@SDIPolling|
	DCD	0x40015404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LM@BPBDAKJM@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "R", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v"
	DCB	0x0, "e", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "a", 0x0, "r"
	DCB	0x0, "d", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "s", 0x0, "y", 0x0, " ", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "a", 0x0, "f"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "d", 0x0, "a"
	DCB	0x0, "t", 0x0, "a", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "!", 0x0, " "
	DCB	0x0, " ", 0x0, "D", 0x0, "e", 0x0, "l", 0x0, "a", 0x0, "y"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, ".", 0x0, ".", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IG@PFBJDBDI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "R", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v"
	DCB	0x0, "e", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "x", 0x0, "i"
	DCB	0x0, "t", 0x0, ":", 0x0, " ", 0x0, "M", 0x0, "M", 0x0, "C"
	DCB	0x0, "_", 0x0, "T", 0x0, "I", 0x0, "M", 0x0, "E", 0x0, "_"
	DCB	0x0, "O", 0x0, "U", 0x0, "T", 0x0, "_", 0x0, "R", 0x0, "C"
	DCB	0x0, "V", 0x0, "D", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1II@CFFNLPJP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "R", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v"
	DCB	0x0, "e", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "x", 0x0, "i"
	DCB	0x0, "t", 0x0, ":", 0x0, " ", 0x0, "M", 0x0, "M", 0x0, "C"
	DCB	0x0, "_", 0x0, "C", 0x0, "R", 0x0, "C", 0x0, "_", 0x0, "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, "_", 0x0, "R"
	DCB	0x0, "C", 0x0, "V", 0x0, "D", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@OCMMIAHC@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "R", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v"
	DCB	0x0, "e", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "x", 0x0, "i"
	DCB	0x0, "t", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "a", 0x0, "r"
	DCB	0x0, "d", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "m", 0x0, "o"
	DCB	0x0, "v", 0x0, "e", 0x0, "d", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@MOEIJKJM@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "R", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v"
	DCB	0x0, "e", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "x", 0x0, "i"
	DCB	0x0, "t", 0x0, ":", 0x0, " ", 0x0, "T", 0x0, "I", 0x0, "M"
	DCB	0x0, "E", 0x0, "O", 0x0, "U", 0x0, "T", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LO@HEFAFMJB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "R", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v"
	DCB	0x0, "e", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "a", 0x0, "r"
	DCB	0x0, "d", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "s", 0x0, "y", 0x0, " ", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "b", 0x0, "e"
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, "e", 0x0, " ", 0x0, "d"
	DCB	0x0, "a", 0x0, "t", 0x0, "a", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "!"
	DCB	0x0, " ", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "l", 0x0, "a"
	DCB	0x0, "y", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, ".", 0x0, "."
	DCB	0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@CDHDLJNH@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s"
	DCB	0x0, "e", 0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "I"
	DCB	0x0, "P", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, "R", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i"
	DCB	0x0, "v", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "d", 0x0, "w"
	DCB	0x0, "L", 0x0, "e", 0x0, "n", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  05dc0			 AREA	 |.text|, CODE, ARM

  05dc0		 |?SDIPollingReceive@CSDIOControllerBase@@QAAHPAEK@Z| PROC ; CSDIOControllerBase::SDIPollingReceive

; 2338 : {

  05dc0		 |$LN49@SDIPolling|
  05dc0	e1a0c00d	 mov         r12, sp
  05dc4	e92d0007	 stmdb       sp!, {r0 - r2}
  05dc8	e92d5000	 stmdb       sp!, {r12, lr}
  05dcc	e24dd064	 sub         sp, sp, #0x64
  05dd0		 |$M43377|

; 2339 :     WORD wFIFOAlmostFullLevel = (((INREG16(&m_vpSDIOReg->MMC_BUF) >> 8) & 0x1F) + 1) * 2;

  05dd0	e59d306c	 ldr         r3, [sp, #0x6C]
  05dd4	e2833088	 add         r3, r3, #0x88
  05dd8	e5933000	 ldr         r3, [r3]
  05ddc	e283302c	 add         r3, r3, #0x2C
  05de0	e1d330b0	 ldrh        r3, [r3]
  05de4	e1a03443	 mov         r3, r3, asr #8
  05de8	e203301f	 and         r3, r3, #0x1F
  05dec	e2832001	 add         r2, r3, #1
  05df0	e3a03002	 mov         r3, #2
  05df4	e0030392	 mul         r3, r2, r3
  05df8	e1a03803	 mov         r3, r3, lsl #16
  05dfc	e1a03823	 mov         r3, r3, lsr #16
  05e00	e1cd30b4	 strh        r3, [sp, #4]

; 2340 :     BOOL fWaitingForBusyEnd = FALSE;

  05e04	e3a03000	 mov         r3, #0
  05e08	e58d300c	 str         r3, [sp, #0xC]

; 2341 :     DWORD dwCurrentTickCount;
; 2342 :     DWORD dwTimeout;
; 2343 :     DWORD dwCountStart;
; 2344 :     BOOL fTimeoutOverflow = FALSE;

  05e0c	e3a03000	 mov         r3, #0
  05e10	e58d3000	 str         r3, [sp]

; 2345 : 
; 2346 :     DEBUGMSG(SHC_RECEIVE_ZONE, (L"+CSDIOControllerBase::SDIPollingReceive: "
; 2347 :         L"dwLen 0x%x\n", dwLen
; 2348 :     ));

  05e14	e59f34d8	 ldr         r3, [pc, #0x4D8]
  05e18	e5933440	 ldr         r3, [r3, #0x440]
  05e1c	e3130008	 tst         r3, #8
  05e20	0a000005	 beq         |$LN27@SDIPolling|
  05e24	e59d1074	 ldr         r1, [sp, #0x74]
  05e28	e59f04dc	 ldr         r0, [pc, #0x4DC]
  05e2c	eb000000	 bl          NKDbgPrintfW
  05e30	e3a03001	 mov         r3, #1
  05e34	e58d3024	 str         r3, [sp, #0x24]
  05e38	ea000001	 b           |$LN28@SDIPolling|
  05e3c		 |$LN27@SDIPolling|
  05e3c	e3a03000	 mov         r3, #0
  05e40	e58d3024	 str         r3, [sp, #0x24]
  05e44		 |$LN28@SDIPolling|

; 2349 :     //check the parameters
; 2350 : 
; 2351 :     WORD MMC_STAT = Read_MMC_STAT();

  05e44	e59d006c	 ldr         r0, [sp, #0x6C]
  05e48	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|
  05e4c	e1cd02b8	 strh        r0, [sp, #0x28]
  05e50	e1dd32b8	 ldrh        r3, [sp, #0x28]
  05e54	e1cd30b6	 strh        r3, [sp, #6]

; 2352 : 
; 2353 :     if( ( MMC_STAT & MMC_STAT_CB ) && (!(MMC_STAT & MMC_STAT_EOFB)) )

  05e58	e1dd30b6	 ldrh        r3, [sp, #6]
  05e5c	e3130004	 tst         r3, #4
  05e60	0a00000d	 beq         |$LN24@SDIPolling|
  05e64	e1dd30b6	 ldrh        r3, [sp, #6]
  05e68	e3130010	 tst         r3, #0x10
  05e6c	1a00000a	 bne         |$LN24@SDIPolling|

; 2354 :     {
; 2355 :         DEBUGMSG(SHC_BUSY_STATE_ZONE, (L"CSDIOControllerBase::SDIPollingReceive: "
; 2356 :             L"Card in busy state before data receive!  Delaying...\r\n"
; 2357 :         ));

  05e70	e59f347c	 ldr         r3, [pc, #0x47C]
  05e74	e5933440	 ldr         r3, [r3, #0x440]
  05e78	e3130080	 tst         r3, #0x80
  05e7c	0a000004	 beq         |$LN29@SDIPolling|
  05e80	e59f0480	 ldr         r0, [pc, #0x480]
  05e84	eb000000	 bl          NKDbgPrintfW
  05e88	e3a03001	 mov         r3, #1
  05e8c	e58d302c	 str         r3, [sp, #0x2C]
  05e90	ea000001	 b           |$LN30@SDIPolling|
  05e94		 |$LN29@SDIPolling|
  05e94	e3a03000	 mov         r3, #0
  05e98	e58d302c	 str         r3, [sp, #0x2C]
  05e9c		 |$LN30@SDIPolling|
  05e9c		 |$LN24@SDIPolling|

; 2358 :     }
; 2359 : 
; 2360 :     // calculate timeout conditions
; 2361 :     dwCountStart = GetTickCount();

  05e9c	eb000000	 bl          GetTickCount
  05ea0	e58d0030	 str         r0, [sp, #0x30]
  05ea4	e59d3030	 ldr         r3, [sp, #0x30]
  05ea8	e58d3008	 str         r3, [sp, #8]

; 2362 :     dwTimeout = dwCountStart + m_dwMaxTimeout;

  05eac	e59d306c	 ldr         r3, [sp, #0x6C]
  05eb0	e283307c	 add         r3, r3, #0x7C
  05eb4	e59d2008	 ldr         r2, [sp, #8]
  05eb8	e5933000	 ldr         r3, [r3]
  05ebc	e0823003	 add         r3, r2, r3
  05ec0	e58d3014	 str         r3, [sp, #0x14]

; 2363 :     if( dwTimeout < dwCountStart )

  05ec4	e59d2014	 ldr         r2, [sp, #0x14]
  05ec8	e59d3008	 ldr         r3, [sp, #8]
  05ecc	e1520003	 cmp         r2, r3
  05ed0	2a000001	 bcs         |$LN23@SDIPolling|

; 2364 :         fTimeoutOverflow = TRUE;

  05ed4	e3a03001	 mov         r3, #1
  05ed8	e58d3000	 str         r3, [sp]
  05edc		 |$LN23@SDIPolling|
  05edc		 |$LN22@SDIPolling|

; 2365 : 
; 2366 :     while( dwLen > 0 )

  05edc	e59d3074	 ldr         r3, [sp, #0x74]
  05ee0	e3530000	 cmp         r3, #0
  05ee4	9a0000e4	 bls         |$LN21@SDIPolling|

; 2367 :     {
; 2368 :         // check for a timeout
; 2369 :         dwCurrentTickCount = GetTickCount();

  05ee8	eb000000	 bl          GetTickCount
  05eec	e58d0034	 str         r0, [sp, #0x34]
  05ef0	e59d3034	 ldr         r3, [sp, #0x34]
  05ef4	e58d3010	 str         r3, [sp, #0x10]

; 2370 :         if( fTimeoutOverflow ? ( dwTimeout < dwCurrentTickCount && dwCurrentTickCount < dwCountStart )
; 2371 :             : ( dwTimeout < dwCurrentTickCount || dwCurrentTickCount < dwCountStart ) )

  05ef8	e59d3000	 ldr         r3, [sp]
  05efc	e3530000	 cmp         r3, #0
  05f00	0a00000f	 beq         |$LN35@SDIPolling|
  05f04	e59d2014	 ldr         r2, [sp, #0x14]
  05f08	e59d3010	 ldr         r3, [sp, #0x10]
  05f0c	e1520003	 cmp         r2, r3
  05f10	2a000006	 bcs         |$LN31@SDIPolling|
  05f14	e59d2010	 ldr         r2, [sp, #0x10]
  05f18	e59d3008	 ldr         r3, [sp, #8]
  05f1c	e1520003	 cmp         r2, r3
  05f20	2a000002	 bcs         |$LN31@SDIPolling|
  05f24	e3a03001	 mov         r3, #1
  05f28	e58d3038	 str         r3, [sp, #0x38]
  05f2c	ea000001	 b           |$LN34@SDIPolling|
  05f30		 |$LN31@SDIPolling|
  05f30	e3a03000	 mov         r3, #0
  05f34	e58d3038	 str         r3, [sp, #0x38]
  05f38		 |$LN34@SDIPolling|
  05f38	e59d3038	 ldr         r3, [sp, #0x38]
  05f3c	e58d303c	 str         r3, [sp, #0x3C]
  05f40	ea00000e	 b           |$LN36@SDIPolling|
  05f44		 |$LN35@SDIPolling|
  05f44	e59d2014	 ldr         r2, [sp, #0x14]
  05f48	e59d3010	 ldr         r3, [sp, #0x10]
  05f4c	e1520003	 cmp         r2, r3
  05f50	3a000006	 bcc         |$LN32@SDIPolling|
  05f54	e59d2010	 ldr         r2, [sp, #0x10]
  05f58	e59d3008	 ldr         r3, [sp, #8]
  05f5c	e1520003	 cmp         r2, r3
  05f60	3a000002	 bcc         |$LN32@SDIPolling|
  05f64	e3a03000	 mov         r3, #0
  05f68	e58d3040	 str         r3, [sp, #0x40]
  05f6c	ea000001	 b           |$LN33@SDIPolling|
  05f70		 |$LN32@SDIPolling|
  05f70	e3a03001	 mov         r3, #1
  05f74	e58d3040	 str         r3, [sp, #0x40]
  05f78		 |$LN33@SDIPolling|
  05f78	e59d3040	 ldr         r3, [sp, #0x40]
  05f7c	e58d303c	 str         r3, [sp, #0x3C]
  05f80		 |$LN36@SDIPolling|
  05f80	e59d303c	 ldr         r3, [sp, #0x3C]
  05f84	e3530000	 cmp         r3, #0
  05f88	0a00000c	 beq         |$LN20@SDIPolling|

; 2372 :         {
; 2373 :             DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::SDIPollingReceive: "
; 2374 :                 L"Exit: TIMEOUT.\r\n"
; 2375 :             ));

  05f8c	e59f3360	 ldr         r3, [pc, #0x360]
  05f90	e5933440	 ldr         r3, [r3, #0x440]
  05f94	e3130902	 tst         r3, #2, 18
  05f98	0a000004	 beq         |$LN37@SDIPolling|
  05f9c	e59f0360	 ldr         r0, [pc, #0x360]
  05fa0	eb000000	 bl          NKDbgPrintfW
  05fa4	e3a03001	 mov         r3, #1
  05fa8	e58d3044	 str         r3, [sp, #0x44]
  05fac	ea000001	 b           |$LN38@SDIPolling|
  05fb0		 |$LN37@SDIPolling|
  05fb0	e3a03000	 mov         r3, #0
  05fb4	e58d3044	 str         r3, [sp, #0x44]
  05fb8		 |$LN38@SDIPolling|

; 2376 :             goto READ_ERROR;

  05fb8	ea0000c6	 b           |$LN19@SDIPolling|
  05fbc	ea0000c5	 b           |$READ_ERROR$41220|
  05fc0		 |$LN20@SDIPolling|

; 2377 :         }
; 2378 : 
; 2379 :         if( !SDCardDetect() )

  05fc0	e59d306c	 ldr         r3, [sp, #0x6C]
  05fc4	e5933000	 ldr         r3, [r3]
  05fc8	e2833014	 add         r3, r3, #0x14
  05fcc	e59d006c	 ldr         r0, [sp, #0x6C]
  05fd0	e5933000	 ldr         r3, [r3]
  05fd4	e1a0e00f	 mov         lr, pc
  05fd8	e12fff13	 bx          r3
  05fdc	e58d0048	 str         r0, [sp, #0x48]
  05fe0	e59d3048	 ldr         r3, [sp, #0x48]
  05fe4	e3530000	 cmp         r3, #0
  05fe8	1a00000c	 bne         |$LN18@SDIPolling|

; 2380 :         {
; 2381 :             DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::SDIPollingReceive: "
; 2382 :                 L"Exit: Card removed.\r\n"
; 2383 :             ));

  05fec	e59f3300	 ldr         r3, [pc, #0x300]
  05ff0	e5933440	 ldr         r3, [r3, #0x440]
  05ff4	e3130902	 tst         r3, #2, 18
  05ff8	0a000004	 beq         |$LN39@SDIPolling|
  05ffc	e59f02fc	 ldr         r0, [pc, #0x2FC]
  06000	eb000000	 bl          NKDbgPrintfW
  06004	e3a03001	 mov         r3, #1
  06008	e58d304c	 str         r3, [sp, #0x4C]
  0600c	ea000001	 b           |$LN40@SDIPolling|
  06010		 |$LN39@SDIPolling|
  06010	e3a03000	 mov         r3, #0
  06014	e58d304c	 str         r3, [sp, #0x4C]
  06018		 |$LN40@SDIPolling|

; 2384 :             goto READ_ERROR;

  06018	ea0000ae	 b           |$LN17@SDIPolling|
  0601c	ea0000ad	 b           |$READ_ERROR$41220|
  06020		 |$LN18@SDIPolling|

; 2385 :         }
; 2386 : 
; 2387 :         if( MMC_STAT & MMC_STAT_DCRC ) // DATA CRC Error

  06020	e1dd30b6	 ldrh        r3, [sp, #6]
  06024	e3130040	 tst         r3, #0x40
  06028	0a00000c	 beq         |$LN16@SDIPolling|

; 2388 :         {
; 2389 :             DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::SDIPollingReceive: "
; 2390 :                 L"Exit: MMC_CRC_ERROR_RCVD.\r\n"
; 2391 :             ));

  0602c	e59f32c0	 ldr         r3, [pc, #0x2C0]
  06030	e5933440	 ldr         r3, [r3, #0x440]
  06034	e3130902	 tst         r3, #2, 18
  06038	0a000004	 beq         |$LN41@SDIPolling|
  0603c	e59f02b8	 ldr         r0, [pc, #0x2B8]
  06040	eb000000	 bl          NKDbgPrintfW
  06044	e3a03001	 mov         r3, #1
  06048	e58d3050	 str         r3, [sp, #0x50]
  0604c	ea000001	 b           |$LN42@SDIPolling|
  06050		 |$LN41@SDIPolling|
  06050	e3a03000	 mov         r3, #0
  06054	e58d3050	 str         r3, [sp, #0x50]
  06058		 |$LN42@SDIPolling|

; 2392 :             goto READ_ERROR;

  06058	ea00009e	 b           |$LN15@SDIPolling|
  0605c	ea00009d	 b           |$READ_ERROR$41220|
  06060		 |$LN16@SDIPolling|

; 2393 :         }
; 2394 : 
; 2395 :         if( MMC_STAT & MMC_STAT_DTO ) // DATA Response Timeout

  06060	e1dd30b6	 ldrh        r3, [sp, #6]
  06064	e3130020	 tst         r3, #0x20
  06068	0a00000c	 beq         |$LN14@SDIPolling|

; 2396 :         {
; 2397 :             DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::SDIPollingReceive: "
; 2398 :                 L"Exit: MMC_TIME_OUT_RCVD.\r\n"
; 2399 :             ));

  0606c	e59f3280	 ldr         r3, [pc, #0x280]
  06070	e5933440	 ldr         r3, [r3, #0x440]
  06074	e3130902	 tst         r3, #2, 18
  06078	0a000004	 beq         |$LN43@SDIPolling|
  0607c	e59f0274	 ldr         r0, [pc, #0x274]
  06080	eb000000	 bl          NKDbgPrintfW
  06084	e3a03001	 mov         r3, #1
  06088	e58d3054	 str         r3, [sp, #0x54]
  0608c	ea000001	 b           |$LN44@SDIPolling|
  06090		 |$LN43@SDIPolling|
  06090	e3a03000	 mov         r3, #0
  06094	e58d3054	 str         r3, [sp, #0x54]
  06098		 |$LN44@SDIPolling|

; 2400 :             goto READ_ERROR;

  06098	ea00008e	 b           |$LN13@SDIPolling|
  0609c	ea00008d	 b           |$READ_ERROR$41220|
  060a0		 |$LN14@SDIPolling|

; 2401 :         }
; 2402 : 
; 2403 :         if( MMC_STAT & ( MMC_STAT_AF | MMC_STAT_BRS ) ) // buffer almost full or block received

  060a0	e1dd30b6	 ldrh        r3, [sp, #6]
  060a4	e1a02003	 mov         r2, r3
  060a8	e3a03b01	 mov         r3, #1, 22
  060ac	e3833008	 orr         r3, r3, #8
  060b0	e1120003	 tst         r2, r3
  060b4	0a00006a	 beq         |$LN12@SDIPolling|

; 2404 :         {
; 2405 :             Write_MMC_STAT( MMC_STAT_AF );

  060b8	e3a01b01	 mov         r1, #1, 22
  060bc	e59d006c	 ldr         r0, [sp, #0x6C]
  060c0	eb000000	 bl          |?Write_MMC_STAT@CSDIOControllerBase@@QAAXG@Z|

; 2406 :             DWORD dwTransferSize = wFIFOAlmostFullLevel;

  060c4	e1dd30b4	 ldrh        r3, [sp, #4]
  060c8	e58d3018	 str         r3, [sp, #0x18]

; 2407 :             if( dwLen < dwTransferSize )

  060cc	e59d2074	 ldr         r2, [sp, #0x74]
  060d0	e59d3018	 ldr         r3, [sp, #0x18]
  060d4	e1520003	 cmp         r2, r3
  060d8	2a000001	 bcs         |$LN11@SDIPolling|

; 2408 :             {
; 2409 :                 dwTransferSize = dwLen;

  060dc	e59d3074	 ldr         r3, [sp, #0x74]
  060e0	e58d3018	 str         r3, [sp, #0x18]
  060e4		 |$LN11@SDIPolling|

; 2410 :             }
; 2411 : 
; 2412 :             dwLen = dwLen - dwTransferSize;

  060e4	e59d2074	 ldr         r2, [sp, #0x74]
  060e8	e59d3018	 ldr         r3, [sp, #0x18]
  060ec	e0423003	 sub         r3, r2, r3
  060f0	e58d3074	 str         r3, [sp, #0x74]

; 2413 : 
; 2414 :             if( ((DWORD)pBuff) % 2 ) // the data buffer is not aligned

  060f4	e59d1070	 ldr         r1, [sp, #0x70]
  060f8	e3a00002	 mov         r0, #2
  060fc	eb000000	 bl          __rt_udiv
  06100	e3510000	 cmp         r1, #0
  06104	0a000020	 beq         |$LN10@SDIPolling|
  06108		 |$LN9@SDIPolling|

; 2415 :             {
; 2416 :                 while( dwTransferSize > 1)

  06108	e59d3018	 ldr         r3, [sp, #0x18]
  0610c	e3530001	 cmp         r3, #1
  06110	9a00001c	 bls         |$LN8@SDIPolling|

; 2417 :                 {
; 2418 :                     WORD wData = INREG16(&m_vpSDIOReg->MMC_DATA);

  06114	e59d306c	 ldr         r3, [sp, #0x6C]
  06118	e2833088	 add         r3, r3, #0x88
  0611c	e5933000	 ldr         r3, [r3]
  06120	e2833020	 add         r3, r3, #0x20
  06124	e1d330b0	 ldrh        r3, [r3]
  06128	e1cd31bc	 strh        r3, [sp, #0x1C]

; 2419 :                     BYTE bLo = wData & 0xff;

  0612c	e1dd31bc	 ldrh        r3, [sp, #0x1C]
  06130	e20330ff	 and         r3, r3, #0xFF
  06134	e20330ff	 and         r3, r3, #0xFF
  06138	e5cd301e	 strb        r3, [sp, #0x1E]

; 2420 :                     BYTE bHi = ( wData & 0xff00 ) >> 8;

  0613c	e1dd31bc	 ldrh        r3, [sp, #0x1C]
  06140	e2033cff	 and         r3, r3, #0xFF, 24
  06144	e1a03443	 mov         r3, r3, asr #8
  06148	e20330ff	 and         r3, r3, #0xFF
  0614c	e5cd301f	 strb        r3, [sp, #0x1F]

; 2421 :                     *((BYTE*)pBuff) = bLo;

  06150	e5dd201e	 ldrb        r2, [sp, #0x1E]
  06154	e59d3070	 ldr         r3, [sp, #0x70]
  06158	e5c32000	 strb        r2, [r3]

; 2422 :                     *((BYTE*)pBuff+1) = bHi;

  0615c	e59d3070	 ldr         r3, [sp, #0x70]
  06160	e2832001	 add         r2, r3, #1
  06164	e5dd301f	 ldrb        r3, [sp, #0x1F]
  06168	e5c23000	 strb        r3, [r2]

; 2423 :                     dwTransferSize -= 2;

  0616c	e59d3018	 ldr         r3, [sp, #0x18]
  06170	e2433002	 sub         r3, r3, #2
  06174	e58d3018	 str         r3, [sp, #0x18]

; 2424 :                     pBuff += 2;

  06178	e59d3070	 ldr         r3, [sp, #0x70]
  0617c	e2833002	 add         r3, r3, #2
  06180	e58d3070	 str         r3, [sp, #0x70]

; 2425 :                 }

  06184	eaffffdf	 b           |$LN9@SDIPolling|
  06188		 |$LN8@SDIPolling|

; 2426 :             }
; 2427 :             else

  06188	ea000010	 b           |$LN7@SDIPolling|
  0618c		 |$LN10@SDIPolling|
  0618c		 |$LN6@SDIPolling|

; 2428 :             {
; 2429 :                 while( dwTransferSize > 1)

  0618c	e59d3018	 ldr         r3, [sp, #0x18]
  06190	e3530001	 cmp         r3, #1
  06194	9a00000d	 bls         |$LN5@SDIPolling|

; 2430 :                 {
; 2431 :                     *((WORD*)pBuff) = INREG16(&m_vpSDIOReg->MMC_DATA);

  06198	e59d306c	 ldr         r3, [sp, #0x6C]
  0619c	e2833088	 add         r3, r3, #0x88
  061a0	e5933000	 ldr         r3, [r3]
  061a4	e2833020	 add         r3, r3, #0x20
  061a8	e1d320b0	 ldrh        r2, [r3]
  061ac	e59d3070	 ldr         r3, [sp, #0x70]
  061b0	e1c320b0	 strh        r2, [r3]

; 2432 :                     dwTransferSize -= 2;

  061b4	e59d3018	 ldr         r3, [sp, #0x18]
  061b8	e2433002	 sub         r3, r3, #2
  061bc	e58d3018	 str         r3, [sp, #0x18]

; 2433 :                     pBuff += 2;

  061c0	e59d3070	 ldr         r3, [sp, #0x70]
  061c4	e2833002	 add         r3, r3, #2
  061c8	e58d3070	 str         r3, [sp, #0x70]

; 2434 :                 }

  061cc	eaffffee	 b           |$LN6@SDIPolling|
  061d0		 |$LN5@SDIPolling|
  061d0		 |$LN7@SDIPolling|

; 2435 :             }
; 2436 : 
; 2437 :             if (dwTransferSize==1)

  061d0	e59d3018	 ldr         r3, [sp, #0x18]
  061d4	e3530001	 cmp         r3, #1
  061d8	1a00000e	 bne         |$LN4@SDIPolling|

; 2438 :             {
; 2439 :                 *((BYTE*)pBuff) = INREG16(&m_vpSDIOReg->MMC_DATA) & 0xff;

  061dc	e59d306c	 ldr         r3, [sp, #0x6C]
  061e0	e2833088	 add         r3, r3, #0x88
  061e4	e5933000	 ldr         r3, [r3]
  061e8	e2833020	 add         r3, r3, #0x20
  061ec	e1d330b0	 ldrh        r3, [r3]
  061f0	e20330ff	 and         r3, r3, #0xFF
  061f4	e20320ff	 and         r2, r3, #0xFF
  061f8	e59d3070	 ldr         r3, [sp, #0x70]
  061fc	e5c32000	 strb        r2, [r3]

; 2440 :                 dwTransferSize -= 1;

  06200	e59d3018	 ldr         r3, [sp, #0x18]
  06204	e2433001	 sub         r3, r3, #1
  06208	e58d3018	 str         r3, [sp, #0x18]

; 2441 :                 pBuff += 1;

  0620c	e59d3070	 ldr         r3, [sp, #0x70]
  06210	e2833001	 add         r3, r3, #1
  06214	e58d3070	 str         r3, [sp, #0x70]
  06218		 |$LN4@SDIPolling|

; 2442 :             }
; 2443 : 
; 2444 :             // recalculate timeout conditions
; 2445 :             dwCountStart = GetTickCount();

  06218	eb000000	 bl          GetTickCount
  0621c	e58d0058	 str         r0, [sp, #0x58]
  06220	e59d3058	 ldr         r3, [sp, #0x58]
  06224	e58d3008	 str         r3, [sp, #8]

; 2446 :             dwTimeout = dwCountStart + m_dwMaxTimeout;

  06228	e59d306c	 ldr         r3, [sp, #0x6C]
  0622c	e283307c	 add         r3, r3, #0x7C
  06230	e59d2008	 ldr         r2, [sp, #8]
  06234	e5933000	 ldr         r3, [r3]
  06238	e0823003	 add         r3, r2, r3
  0623c	e58d3014	 str         r3, [sp, #0x14]

; 2447 :             if( dwTimeout < dwCountStart )

  06240	e59d2014	 ldr         r2, [sp, #0x14]
  06244	e59d3008	 ldr         r3, [sp, #8]
  06248	e1520003	 cmp         r2, r3
  0624c	2a000002	 bcs         |$LN3@SDIPolling|

; 2448 :                 fTimeoutOverflow = TRUE;

  06250	e3a03001	 mov         r3, #1
  06254	e58d3000	 str         r3, [sp]

; 2449 :             else

  06258	ea000001	 b           |$LN2@SDIPolling|
  0625c		 |$LN3@SDIPolling|

; 2450 :                 fTimeoutOverflow = FALSE;

  0625c	e3a03000	 mov         r3, #0
  06260	e58d3000	 str         r3, [sp]
  06264		 |$LN2@SDIPolling|
  06264		 |$LN12@SDIPolling|

; 2451 :         }
; 2452 : 
; 2453 :         MMC_STAT = Read_MMC_STAT();

  06264	e59d006c	 ldr         r0, [sp, #0x6C]
  06268	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|
  0626c	e1cd05bc	 strh        r0, [sp, #0x5C]
  06270	e1dd35bc	 ldrh        r3, [sp, #0x5C]
  06274	e1cd30b6	 strh        r3, [sp, #6]

; 2454 :     } // while

  06278	eaffff17	 b           |$LN22@SDIPolling|
  0627c		 |$LN21@SDIPolling|

; 2455 : 
; 2456 :     Write_MMC_STAT( MMC_STAT_BRS );

  0627c	e3a01008	 mov         r1, #8
  06280	e59d006c	 ldr         r0, [sp, #0x6C]
  06284	eb000000	 bl          |?Write_MMC_STAT@CSDIOControllerBase@@QAAXG@Z|

; 2457 : 
; 2458 :     if( ( MMC_STAT & MMC_STAT_CB ) && (!(MMC_STAT & MMC_STAT_EOFB)) )

  06288	e1dd30b6	 ldrh        r3, [sp, #6]
  0628c	e3130004	 tst         r3, #4
  06290	0a00000d	 beq         |$LN1@SDIPolling|
  06294	e1dd30b6	 ldrh        r3, [sp, #6]
  06298	e3130010	 tst         r3, #0x10
  0629c	1a00000a	 bne         |$LN1@SDIPolling|

; 2459 :     {
; 2460 :         DEBUGMSG(SHC_BUSY_STATE_ZONE, (L"CSDIOControllerBase::SDIPollingReceive: "
; 2461 :             L"Card in busy state after data receive!  Delaying...\r\n"
; 2462 :         ));

  062a0	e59f304c	 ldr         r3, [pc, #0x4C]
  062a4	e5933440	 ldr         r3, [r3, #0x440]
  062a8	e3130080	 tst         r3, #0x80
  062ac	0a000004	 beq         |$LN45@SDIPolling|
  062b0	e59f0038	 ldr         r0, [pc, #0x38]
  062b4	eb000000	 bl          NKDbgPrintfW
  062b8	e3a03001	 mov         r3, #1
  062bc	e58d3060	 str         r3, [sp, #0x60]
  062c0	ea000001	 b           |$LN46@SDIPolling|
  062c4		 |$LN45@SDIPolling|
  062c4	e3a03000	 mov         r3, #0
  062c8	e58d3060	 str         r3, [sp, #0x60]
  062cc		 |$LN46@SDIPolling|
  062cc		 |$LN1@SDIPolling|

; 2463 :     }
; 2464 : 
; 2465 :     return TRUE;  

  062cc	e3a03001	 mov         r3, #1
  062d0	e58d3020	 str         r3, [sp, #0x20]
  062d4	ea000001	 b           |$LN25@SDIPolling|
  062d8		 |$LN13@SDIPolling|
  062d8		 |$LN15@SDIPolling|
  062d8		 |$LN17@SDIPolling|
  062d8		 |$LN19@SDIPolling|
  062d8		 |$READ_ERROR$41220|

; 2466 : 
; 2467 : READ_ERROR:
; 2468 :     return FALSE;

  062d8	e3a03000	 mov         r3, #0
  062dc	e58d3020	 str         r3, [sp, #0x20]
  062e0		 |$LN25@SDIPolling|

; 2469 : }

  062e0	e59d0020	 ldr         r0, [sp, #0x20]
  062e4	e28dd064	 add         sp, sp, #0x64
  062e8	e89d6000	 ldmia       sp, {sp, lr}
  062ec	e12fff1e	 bx          lr
  062f0		 |$LN50@SDIPolling|
  062f0		 |$LN51@SDIPolling|
  062f0	00000000	 DCD         |??_C@_1LM@BPBDAKJM@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR@|
  062f4		 |$LN52@SDIPolling|
  062f4	00000000	 DCD         |dpCurSettings|
  062f8		 |$LN53@SDIPolling|
  062f8	00000000	 DCD         |??_C@_1IG@PFBJDBDI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR@|
  062fc		 |$LN54@SDIPolling|
  062fc	00000000	 DCD         |??_C@_1II@CFFNLPJP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR@|
  06300		 |$LN55@SDIPolling|
  06300	00000000	 DCD         |??_C@_1HM@OCMMIAHC@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR@|
  06304		 |$LN56@SDIPolling|
  06304	00000000	 DCD         |??_C@_1HC@MOEIJKJM@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR@|
  06308		 |$LN57@SDIPolling|
  06308	00000000	 DCD         |??_C@_1LO@HEFAFMJB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR@|
  0630c		 |$LN58@SDIPolling|
  0630c	00000000	 DCD         |??_C@_1GK@CDHDLJNH@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg@|
  06310		 |$M43378|

			 ENDP  ; |?SDIPollingReceive@CSDIOControllerBase@@QAAHPAEK@Z|, CSDIOControllerBase::SDIPollingReceive

	EXPORT	|??_C@_1IG@KDONLCIN@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1MA@LELOLDHI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HI@MEMMOGBP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IE@FGFFHEIL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IG@HKMNKACB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1MC@NCCIFDPE@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1II@CPNOBFDG@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IK@IHNNKMAH@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@GAKICDKK@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@EHEOPPDJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1MC@PPIPGNCP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@| [ DATA ] ; `string'

  00148			 AREA	 |.pdata|, PDATA
|$T43453| DCD	|$LN112@SDIPolling@2|
	DCD	0x4002cb04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IG@KDONLCIN@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "a"
	DCB	0x0, "r", 0x0, "d", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "i"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "b", 0x0, "u"
	DCB	0x0, "s", 0x0, "y", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1MA@LELOLDHI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "a"
	DCB	0x0, "r", 0x0, "d", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, " "
	DCB	0x0, "b", 0x0, "u", 0x0, "s", 0x0, "y", 0x0, " ", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "a"
	DCB	0x0, "f", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "d"
	DCB	0x0, "a", 0x0, "t", 0x0, "a", 0x0, " ", 0x0, "t", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "!", 0x0, " ", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "l"
	DCB	0x0, "a", 0x0, "y", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, "."
	DCB	0x0, ".", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@MEMMOGBP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "G", 0x0, "o"
	DCB	0x0, "t", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "e", 0x0, " "
	DCB	0x0, "B", 0x0, "R", 0x0, "S", 0x0, " ", 0x0, "b", 0x0, "i"
	DCB	0x0, "t", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@FGFFHEIL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "W", 0x0, "a"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "B", 0x0, "R"
	DCB	0x0, "S", 0x0, " ", 0x0, "b", 0x0, "i", 0x0, "t", 0x0, "."
	DCB	0x0, ".", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IG@HKMNKACB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "a"
	DCB	0x0, "r", 0x0, "d", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "i"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "b", 0x0, "u"
	DCB	0x0, "s", 0x0, "y", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1MC@NCCIFDPE@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "a"
	DCB	0x0, "r", 0x0, "d", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, " "
	DCB	0x0, "b", 0x0, "u", 0x0, "s", 0x0, "y", 0x0, " ", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "d"
	DCB	0x0, "u", 0x0, "r", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "d", 0x0, "a", 0x0, "t", 0x0, "a", 0x0, " ", 0x0, "t"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, "!", 0x0, " ", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "l", 0x0, "a", 0x0, "y", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, ".", 0x0, ".", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1II@CPNOBFDG@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "x"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "M", 0x0, "M"
	DCB	0x0, "C", 0x0, "_", 0x0, "T", 0x0, "I", 0x0, "M", 0x0, "E"
	DCB	0x0, "_", 0x0, "O", 0x0, "U", 0x0, "T", 0x0, "_", 0x0, "R"
	DCB	0x0, "C", 0x0, "V", 0x0, "D", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@IHNNKMAH@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "x"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "M", 0x0, "M"
	DCB	0x0, "C", 0x0, "_", 0x0, "C", 0x0, "R", 0x0, "C", 0x0, "_"
	DCB	0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, "_"
	DCB	0x0, "R", 0x0, "C", 0x0, "V", 0x0, "D", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@GAKICDKK@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "x"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "a"
	DCB	0x0, "r", 0x0, "d", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "m"
	DCB	0x0, "o", 0x0, "v", 0x0, "e", 0x0, "d", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@EHEOPPDJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "x"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "T", 0x0, "I"
	DCB	0x0, "M", 0x0, "E", 0x0, "O", 0x0, "U", 0x0, "T", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1MC@PPIPGNCP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "a"
	DCB	0x0, "r", 0x0, "d", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, " "
	DCB	0x0, "b", 0x0, "u", 0x0, "s", 0x0, "y", 0x0, " ", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "b"
	DCB	0x0, "e", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, "e", 0x0, " "
	DCB	0x0, "d", 0x0, "a", 0x0, "t", 0x0, "a", 0x0, " ", 0x0, "t"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, "!", 0x0, " ", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "l", 0x0, "a", 0x0, "y", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, ".", 0x0, ".", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  06310			 AREA	 |.text|, CODE, ARM

  06310		 |?SDIPollingTransmit@CSDIOControllerBase@@QAAHPAEK@Z| PROC ; CSDIOControllerBase::SDIPollingTransmit

; 2474 : {

  06310		 |$LN112@SDIPolling@2|
  06310	e1a0c00d	 mov         r12, sp
  06314	e92d0007	 stmdb       sp!, {r0 - r2}
  06318	e92d5000	 stmdb       sp!, {r12, lr}
  0631c	e24dd0e0	 sub         sp, sp, #0xE0
  06320		 |$M43450|

; 2475 :     DWORD dwCurrentTickCount;
; 2476 :     DWORD dwTimeout;
; 2477 :     DWORD dwCountStart;
; 2478 :     BOOL fTimeoutOverflow = FALSE;

  06320	e3a03000	 mov         r3, #0
  06324	e58d3000	 str         r3, [sp]

; 2479 : 
; 2480 :     WORD wFIFOAlmostEmptyLevel = ((INREG16(&m_vpSDIOReg->MMC_BUF) & 0x1F) + 1) * 2;

  06328	e59d30e8	 ldr         r3, [sp, #0xE8]
  0632c	e2833088	 add         r3, r3, #0x88
  06330	e5933000	 ldr         r3, [r3]
  06334	e283302c	 add         r3, r3, #0x2C
  06338	e1d330b0	 ldrh        r3, [r3]
  0633c	e203301f	 and         r3, r3, #0x1F
  06340	e2832001	 add         r2, r3, #1
  06344	e3a03002	 mov         r3, #2
  06348	e0030392	 mul         r3, r2, r3
  0634c	e1a03803	 mov         r3, r3, lsl #16
  06350	e1a03823	 mov         r3, r3, lsr #16
  06354	e1cd30b4	 strh        r3, [sp, #4]

; 2481 : 
; 2482 :     WORD MMC_STAT = Read_MMC_STAT();

  06358	e59d00e8	 ldr         r0, [sp, #0xE8]
  0635c	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|
  06360	e1cd02b0	 strh        r0, [sp, #0x20]
  06364	e1dd32b0	 ldrh        r3, [sp, #0x20]
  06368	e1cd30b6	 strh        r3, [sp, #6]

; 2483 : 
; 2484 :     if( ( MMC_STAT & MMC_STAT_CB ) && (!(MMC_STAT & MMC_STAT_EOFB)) )

  0636c	e1dd30b6	 ldrh        r3, [sp, #6]
  06370	e3130004	 tst         r3, #4
  06374	0a00000d	 beq         |$LN49@SDIPolling@2|
  06378	e1dd30b6	 ldrh        r3, [sp, #6]
  0637c	e3130010	 tst         r3, #0x10
  06380	1a00000a	 bne         |$LN49@SDIPolling@2|

; 2485 :     {
; 2486 :         DEBUGMSG(SHC_BUSY_STATE_ZONE, (L"CSDIOControllerBase::SDIPollingTransmit: "
; 2487 :             L"Card in busy state before data transfer!  Delaying...\r\n"
; 2488 :         ));

  06384	e59f3a78	 ldr         r3, [pc, #0xA78]
  06388	e5933440	 ldr         r3, [r3, #0x440]
  0638c	e3130080	 tst         r3, #0x80
  06390	0a000004	 beq         |$LN52@SDIPolling@2|
  06394	e59f0a9c	 ldr         r0, [pc, #0xA9C]
  06398	eb000000	 bl          NKDbgPrintfW
  0639c	e3a03001	 mov         r3, #1
  063a0	e58d3024	 str         r3, [sp, #0x24]
  063a4	ea000001	 b           |$LN53@SDIPolling@2|
  063a8		 |$LN52@SDIPolling@2|
  063a8	e3a03000	 mov         r3, #0
  063ac	e58d3024	 str         r3, [sp, #0x24]
  063b0		 |$LN53@SDIPolling@2|
  063b0		 |$LN49@SDIPolling@2|

; 2489 :     }
; 2490 : 
; 2491 :     ASSERT( ( MMC_STAT & MMC_STAT_BRS ) == 0 );

  063b0	e1dd30b6	 ldrh        r3, [sp, #6]
  063b4	e3130008	 tst         r3, #8
  063b8	1a000002	 bne         |$LN54@SDIPolling@2|
  063bc	e3a03001	 mov         r3, #1
  063c0	e58d3028	 str         r3, [sp, #0x28]
  063c4	ea000008	 b           |$LN55@SDIPolling@2|
  063c8		 |$LN54@SDIPolling@2|
  063c8	e3a03c09	 mov         r3, #9, 24
  063cc	e38330bb	 orr         r3, r3, #0xBB
  063d0	e59f2a48	 ldr         r2, [pc, #0xA48]
  063d4	e59f1a40	 ldr         r1, [pc, #0xA40]
  063d8	e59f0a38	 ldr         r0, [pc, #0xA38]
  063dc	eb000000	 bl          NKDbgPrintfW
  063e0	e6000010	 __debugbreak_ce
  063e4	e3a03000	 mov         r3, #0
  063e8	e58d3028	 str         r3, [sp, #0x28]
  063ec		 |$LN55@SDIPolling@2|

; 2492 : 
; 2493 :     // calculate timeout conditions
; 2494 :     dwCountStart = GetTickCount();

  063ec	eb000000	 bl          GetTickCount
  063f0	e58d002c	 str         r0, [sp, #0x2C]
  063f4	e59d302c	 ldr         r3, [sp, #0x2C]
  063f8	e58d3008	 str         r3, [sp, #8]

; 2495 :     dwTimeout = dwCountStart + m_dwMaxTimeout;

  063fc	e59d30e8	 ldr         r3, [sp, #0xE8]
  06400	e283307c	 add         r3, r3, #0x7C
  06404	e59d2008	 ldr         r2, [sp, #8]
  06408	e5933000	 ldr         r3, [r3]
  0640c	e0823003	 add         r3, r2, r3
  06410	e58d3010	 str         r3, [sp, #0x10]

; 2496 :     if( dwTimeout < dwCountStart )

  06414	e59d2010	 ldr         r2, [sp, #0x10]
  06418	e59d3008	 ldr         r3, [sp, #8]
  0641c	e1520003	 cmp         r2, r3
  06420	2a000001	 bcs         |$LN48@SDIPolling@2|

; 2497 :         fTimeoutOverflow = TRUE;

  06424	e3a03001	 mov         r3, #1
  06428	e58d3000	 str         r3, [sp]
  0642c		 |$LN48@SDIPolling@2|
  0642c		 |$LN47@SDIPolling@2|

; 2498 : 
; 2499 :     while( dwLen > 0 ) 

  0642c	e59d30f0	 ldr         r3, [sp, #0xF0]
  06430	e3530000	 cmp         r3, #0
  06434	9a000171	 bls         |$LN46@SDIPolling@2|

; 2500 :     {
; 2501 :         // check for a timeout
; 2502 :         dwCurrentTickCount = GetTickCount();

  06438	eb000000	 bl          GetTickCount
  0643c	e58d0030	 str         r0, [sp, #0x30]
  06440	e59d3030	 ldr         r3, [sp, #0x30]
  06444	e58d300c	 str         r3, [sp, #0xC]

; 2503 :         if( fTimeoutOverflow ? ( dwTimeout < dwCurrentTickCount && dwCurrentTickCount < dwCountStart )
; 2504 :             : ( dwTimeout < dwCurrentTickCount || dwCurrentTickCount < dwCountStart ) )

  06448	e59d3000	 ldr         r3, [sp]
  0644c	e3530000	 cmp         r3, #0
  06450	0a00000f	 beq         |$LN60@SDIPolling@2|
  06454	e59d2010	 ldr         r2, [sp, #0x10]
  06458	e59d300c	 ldr         r3, [sp, #0xC]
  0645c	e1520003	 cmp         r2, r3
  06460	2a000006	 bcs         |$LN56@SDIPolling@2|
  06464	e59d200c	 ldr         r2, [sp, #0xC]
  06468	e59d3008	 ldr         r3, [sp, #8]
  0646c	e1520003	 cmp         r2, r3
  06470	2a000002	 bcs         |$LN56@SDIPolling@2|
  06474	e3a03001	 mov         r3, #1
  06478	e58d3034	 str         r3, [sp, #0x34]
  0647c	ea000001	 b           |$LN59@SDIPolling@2|
  06480		 |$LN56@SDIPolling@2|
  06480	e3a03000	 mov         r3, #0
  06484	e58d3034	 str         r3, [sp, #0x34]
  06488		 |$LN59@SDIPolling@2|
  06488	e59d3034	 ldr         r3, [sp, #0x34]
  0648c	e58d3038	 str         r3, [sp, #0x38]
  06490	ea00000e	 b           |$LN61@SDIPolling@2|
  06494		 |$LN60@SDIPolling@2|
  06494	e59d2010	 ldr         r2, [sp, #0x10]
  06498	e59d300c	 ldr         r3, [sp, #0xC]
  0649c	e1520003	 cmp         r2, r3
  064a0	3a000006	 bcc         |$LN57@SDIPolling@2|
  064a4	e59d200c	 ldr         r2, [sp, #0xC]
  064a8	e59d3008	 ldr         r3, [sp, #8]
  064ac	e1520003	 cmp         r2, r3
  064b0	3a000002	 bcc         |$LN57@SDIPolling@2|
  064b4	e3a03000	 mov         r3, #0
  064b8	e58d303c	 str         r3, [sp, #0x3C]
  064bc	ea000001	 b           |$LN58@SDIPolling@2|
  064c0		 |$LN57@SDIPolling@2|
  064c0	e3a03001	 mov         r3, #1
  064c4	e58d303c	 str         r3, [sp, #0x3C]
  064c8		 |$LN58@SDIPolling@2|
  064c8	e59d303c	 ldr         r3, [sp, #0x3C]
  064cc	e58d3038	 str         r3, [sp, #0x38]
  064d0		 |$LN61@SDIPolling@2|
  064d0	e59d3038	 ldr         r3, [sp, #0x38]
  064d4	e3530000	 cmp         r3, #0
  064d8	0a00000c	 beq         |$LN45@SDIPolling@2|

; 2505 :         {
; 2506 :             DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::SDIPollingTransmit: "
; 2507 :                 L"Exit: TIMEOUT.\r\n"
; 2508 :             ));

  064dc	e59f3920	 ldr         r3, [pc, #0x920]
  064e0	e5933440	 ldr         r3, [r3, #0x440]
  064e4	e3130902	 tst         r3, #2, 18
  064e8	0a000004	 beq         |$LN62@SDIPolling@2|
  064ec	e59f0914	 ldr         r0, [pc, #0x914]
  064f0	eb000000	 bl          NKDbgPrintfW
  064f4	e3a03001	 mov         r3, #1
  064f8	e58d3040	 str         r3, [sp, #0x40]
  064fc	ea000001	 b           |$LN63@SDIPolling@2|
  06500		 |$LN62@SDIPolling@2|
  06500	e3a03000	 mov         r3, #0
  06504	e58d3040	 str         r3, [sp, #0x40]
  06508		 |$LN63@SDIPolling@2|

; 2509 :             goto WRITE_ERROR;

  06508	ea000236	 b           |$LN44@SDIPolling@2|
  0650c	ea000235	 b           |$WRITE_ERROR$41290|
  06510		 |$LN45@SDIPolling@2|

; 2510 :         }
; 2511 : 
; 2512 :         if( !SDCardDetect() )

  06510	e59d30e8	 ldr         r3, [sp, #0xE8]
  06514	e5933000	 ldr         r3, [r3]
  06518	e2833014	 add         r3, r3, #0x14
  0651c	e59d00e8	 ldr         r0, [sp, #0xE8]
  06520	e5933000	 ldr         r3, [r3]
  06524	e1a0e00f	 mov         lr, pc
  06528	e12fff13	 bx          r3
  0652c	e58d0044	 str         r0, [sp, #0x44]
  06530	e59d3044	 ldr         r3, [sp, #0x44]
  06534	e3530000	 cmp         r3, #0
  06538	1a00000c	 bne         |$LN43@SDIPolling@2|

; 2513 :         {
; 2514 :             DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::SDIPollingTransmit: "
; 2515 :                 L"Exit: Card removed.\r\n"
; 2516 :             ));

  0653c	e59f38c0	 ldr         r3, [pc, #0x8C0]
  06540	e5933440	 ldr         r3, [r3, #0x440]
  06544	e3130902	 tst         r3, #2, 18
  06548	0a000004	 beq         |$LN64@SDIPolling@2|
  0654c	e59f08d4	 ldr         r0, [pc, #0x8D4]
  06550	eb000000	 bl          NKDbgPrintfW
  06554	e3a03001	 mov         r3, #1
  06558	e58d3048	 str         r3, [sp, #0x48]
  0655c	ea000001	 b           |$LN65@SDIPolling@2|
  06560		 |$LN64@SDIPolling@2|
  06560	e3a03000	 mov         r3, #0
  06564	e58d3048	 str         r3, [sp, #0x48]
  06568		 |$LN65@SDIPolling@2|

; 2517 :             goto WRITE_ERROR;

  06568	ea00021e	 b           |$LN42@SDIPolling@2|
  0656c	ea00021d	 b           |$WRITE_ERROR$41290|
  06570		 |$LN43@SDIPolling@2|

; 2518 :         }
; 2519 : 
; 2520 :         if( MMC_STAT & MMC_STAT_DCRC ) // DATA CRC Error

  06570	e1dd30b6	 ldrh        r3, [sp, #6]
  06574	e3130040	 tst         r3, #0x40
  06578	0a00000c	 beq         |$LN41@SDIPolling@2|

; 2521 :         {
; 2522 :             DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::SDIPollingTransmit: "
; 2523 :                 L"Exit: MMC_CRC_ERROR_RCVD.\r\n"
; 2524 :             ));

  0657c	e59f3880	 ldr         r3, [pc, #0x880]
  06580	e5933440	 ldr         r3, [r3, #0x440]
  06584	e3130902	 tst         r3, #2, 18
  06588	0a000004	 beq         |$LN66@SDIPolling@2|
  0658c	e59f08a0	 ldr         r0, [pc, #0x8A0]
  06590	eb000000	 bl          NKDbgPrintfW
  06594	e3a03001	 mov         r3, #1
  06598	e58d304c	 str         r3, [sp, #0x4C]
  0659c	ea000001	 b           |$LN67@SDIPolling@2|
  065a0		 |$LN66@SDIPolling@2|
  065a0	e3a03000	 mov         r3, #0
  065a4	e58d304c	 str         r3, [sp, #0x4C]
  065a8		 |$LN67@SDIPolling@2|

; 2525 :             goto WRITE_ERROR;

  065a8	ea00020e	 b           |$LN40@SDIPolling@2|
  065ac	ea00020d	 b           |$WRITE_ERROR$41290|
  065b0		 |$LN41@SDIPolling@2|

; 2526 :         }
; 2527 : 
; 2528 :         if( MMC_STAT & MMC_STAT_DTO ) // DATA Response Timeout

  065b0	e1dd30b6	 ldrh        r3, [sp, #6]
  065b4	e3130020	 tst         r3, #0x20
  065b8	0a00000c	 beq         |$LN39@SDIPolling@2|

; 2529 :         {
; 2530 :             DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::SDIPollingTransmit: "
; 2531 :                 L"Exit: MMC_TIME_OUT_RCVD.\r\n"
; 2532 :             ));

  065bc	e59f3840	 ldr         r3, [pc, #0x840]
  065c0	e5933440	 ldr         r3, [r3, #0x440]
  065c4	e3130902	 tst         r3, #2, 18
  065c8	0a000004	 beq         |$LN68@SDIPolling@2|
  065cc	e59f085c	 ldr         r0, [pc, #0x85C]
  065d0	eb000000	 bl          NKDbgPrintfW
  065d4	e3a03001	 mov         r3, #1
  065d8	e58d3050	 str         r3, [sp, #0x50]
  065dc	ea000001	 b           |$LN69@SDIPolling@2|
  065e0		 |$LN68@SDIPolling@2|
  065e0	e3a03000	 mov         r3, #0
  065e4	e58d3050	 str         r3, [sp, #0x50]
  065e8		 |$LN69@SDIPolling@2|

; 2533 :             goto WRITE_ERROR;

  065e8	ea0001fe	 b           |$LN38@SDIPolling@2|
  065ec	ea0001fd	 b           |$WRITE_ERROR$41290|
  065f0		 |$LN39@SDIPolling@2|

; 2534 :         }
; 2535 : 
; 2536 :         if( MMC_STAT & MMC_STAT_CB ) // card in BUSY state

  065f0	e1dd30b6	 ldrh        r3, [sp, #6]
  065f4	e3130004	 tst         r3, #4
  065f8	0a000090	 beq         |$LN37@SDIPolling@2|

; 2537 :         {
; 2538 :             DEBUGMSG(SHC_BUSY_STATE_ZONE, (L"CSDIOControllerBase::SDIPollingTransmit: "
; 2539 :                 L"Card in busy state during data transfer!  Delaying...\r\n"
; 2540 :             ));

  065fc	e59f3800	 ldr         r3, [pc, #0x800]
  06600	e5933440	 ldr         r3, [r3, #0x440]
  06604	e3130080	 tst         r3, #0x80
  06608	0a000004	 beq         |$LN70@SDIPolling@2|
  0660c	e59f0818	 ldr         r0, [pc, #0x818]
  06610	eb000000	 bl          NKDbgPrintfW
  06614	e3a03001	 mov         r3, #1
  06618	e58d3054	 str         r3, [sp, #0x54]
  0661c	ea000001	 b           |$LN71@SDIPolling@2|
  06620		 |$LN70@SDIPolling@2|
  06620	e3a03000	 mov         r3, #0
  06624	e58d3054	 str         r3, [sp, #0x54]
  06628		 |$LN71@SDIPolling@2|
  06628		 |$LN36@SDIPolling@2|

; 2541 :             do {
; 2542 :                 MMC_STAT = Read_MMC_STAT();

  06628	e59d00e8	 ldr         r0, [sp, #0xE8]
  0662c	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|
  06630	e1cd05b8	 strh        r0, [sp, #0x58]
  06634	e1dd35b8	 ldrh        r3, [sp, #0x58]
  06638	e1cd30b6	 strh        r3, [sp, #6]

; 2543 : 
; 2544 :                 if( !SDCardDetect() )

  0663c	e59d30e8	 ldr         r3, [sp, #0xE8]
  06640	e5933000	 ldr         r3, [r3]
  06644	e2833014	 add         r3, r3, #0x14
  06648	e59d00e8	 ldr         r0, [sp, #0xE8]
  0664c	e5933000	 ldr         r3, [r3]
  06650	e1a0e00f	 mov         lr, pc
  06654	e12fff13	 bx          r3
  06658	e58d005c	 str         r0, [sp, #0x5C]
  0665c	e59d305c	 ldr         r3, [sp, #0x5C]
  06660	e3530000	 cmp         r3, #0
  06664	1a00000c	 bne         |$LN33@SDIPolling@2|

; 2545 :                 {
; 2546 :                     DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::SDIPollingTransmit: "
; 2547 :                         L"Exit: Card removed.\r\n"
; 2548 :                     ));

  06668	e59f3794	 ldr         r3, [pc, #0x794]
  0666c	e5933440	 ldr         r3, [r3, #0x440]
  06670	e3130902	 tst         r3, #2, 18
  06674	0a000004	 beq         |$LN72@SDIPolling@2|
  06678	e59f07a8	 ldr         r0, [pc, #0x7A8]
  0667c	eb000000	 bl          NKDbgPrintfW
  06680	e3a03001	 mov         r3, #1
  06684	e58d3060	 str         r3, [sp, #0x60]
  06688	ea000001	 b           |$LN73@SDIPolling@2|
  0668c		 |$LN72@SDIPolling@2|
  0668c	e3a03000	 mov         r3, #0
  06690	e58d3060	 str         r3, [sp, #0x60]
  06694		 |$LN73@SDIPolling@2|

; 2549 :                     goto WRITE_ERROR;

  06694	ea0001d3	 b           |$LN32@SDIPolling@2|
  06698	ea0001d2	 b           |$WRITE_ERROR$41290|
  0669c		 |$LN33@SDIPolling@2|

; 2550 :                 }
; 2551 : 
; 2552 :                 // check for a timeout
; 2553 :                 dwCurrentTickCount = GetTickCount();

  0669c	eb000000	 bl          GetTickCount
  066a0	e58d0064	 str         r0, [sp, #0x64]
  066a4	e59d3064	 ldr         r3, [sp, #0x64]
  066a8	e58d300c	 str         r3, [sp, #0xC]

; 2554 :                 if( fTimeoutOverflow ? ( dwTimeout < dwCurrentTickCount && dwCurrentTickCount < dwCountStart )
; 2555 :                     : ( dwTimeout < dwCurrentTickCount || dwCurrentTickCount < dwCountStart ) )

  066ac	e59d3000	 ldr         r3, [sp]
  066b0	e3530000	 cmp         r3, #0
  066b4	0a00000f	 beq         |$LN78@SDIPolling@2|
  066b8	e59d2010	 ldr         r2, [sp, #0x10]
  066bc	e59d300c	 ldr         r3, [sp, #0xC]
  066c0	e1520003	 cmp         r2, r3
  066c4	2a000006	 bcs         |$LN74@SDIPolling@2|
  066c8	e59d200c	 ldr         r2, [sp, #0xC]
  066cc	e59d3008	 ldr         r3, [sp, #8]
  066d0	e1520003	 cmp         r2, r3
  066d4	2a000002	 bcs         |$LN74@SDIPolling@2|
  066d8	e3a03001	 mov         r3, #1
  066dc	e58d3068	 str         r3, [sp, #0x68]
  066e0	ea000001	 b           |$LN77@SDIPolling@2|
  066e4		 |$LN74@SDIPolling@2|
  066e4	e3a03000	 mov         r3, #0
  066e8	e58d3068	 str         r3, [sp, #0x68]
  066ec		 |$LN77@SDIPolling@2|
  066ec	e59d3068	 ldr         r3, [sp, #0x68]
  066f0	e58d306c	 str         r3, [sp, #0x6C]
  066f4	ea00000e	 b           |$LN79@SDIPolling@2|
  066f8		 |$LN78@SDIPolling@2|
  066f8	e59d2010	 ldr         r2, [sp, #0x10]
  066fc	e59d300c	 ldr         r3, [sp, #0xC]
  06700	e1520003	 cmp         r2, r3
  06704	3a000006	 bcc         |$LN75@SDIPolling@2|
  06708	e59d200c	 ldr         r2, [sp, #0xC]
  0670c	e59d3008	 ldr         r3, [sp, #8]
  06710	e1520003	 cmp         r2, r3
  06714	3a000002	 bcc         |$LN75@SDIPolling@2|
  06718	e3a03000	 mov         r3, #0
  0671c	e58d3070	 str         r3, [sp, #0x70]
  06720	ea000001	 b           |$LN76@SDIPolling@2|
  06724		 |$LN75@SDIPolling@2|
  06724	e3a03001	 mov         r3, #1
  06728	e58d3070	 str         r3, [sp, #0x70]
  0672c		 |$LN76@SDIPolling@2|
  0672c	e59d3070	 ldr         r3, [sp, #0x70]
  06730	e58d306c	 str         r3, [sp, #0x6C]
  06734		 |$LN79@SDIPolling@2|
  06734	e59d306c	 ldr         r3, [sp, #0x6C]
  06738	e3530000	 cmp         r3, #0
  0673c	0a00000c	 beq         |$LN31@SDIPolling@2|

; 2556 :                 {
; 2557 :                     DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::SDIPollingTransmit: "
; 2558 :                         L"Exit: TIMEOUT.\r\n"
; 2559 :                     ));

  06740	e59f36bc	 ldr         r3, [pc, #0x6BC]
  06744	e5933440	 ldr         r3, [r3, #0x440]
  06748	e3130902	 tst         r3, #2, 18
  0674c	0a000004	 beq         |$LN80@SDIPolling@2|
  06750	e59f06b0	 ldr         r0, [pc, #0x6B0]
  06754	eb000000	 bl          NKDbgPrintfW
  06758	e3a03001	 mov         r3, #1
  0675c	e58d3074	 str         r3, [sp, #0x74]
  06760	ea000001	 b           |$LN81@SDIPolling@2|
  06764		 |$LN80@SDIPolling@2|
  06764	e3a03000	 mov         r3, #0
  06768	e58d3074	 str         r3, [sp, #0x74]
  0676c		 |$LN81@SDIPolling@2|

; 2560 :                     goto WRITE_ERROR;

  0676c	ea00019d	 b           |$LN30@SDIPolling@2|
  06770	ea00019c	 b           |$WRITE_ERROR$41290|
  06774		 |$LN31@SDIPolling@2|

; 2561 :                 }
; 2562 : 
; 2563 :             } while( !( MMC_STAT & ( MMC_STAT_EOFB | MMC_STAT_DCRC | MMC_STAT_DTO ) ) );

  06774	e1dd30b6	 ldrh        r3, [sp, #6]
  06778	e3130070	 tst         r3, #0x70
  0677c	0affffa9	 beq         |$LN36@SDIPolling@2|

; 2564 : 
; 2565 :             DEBUGMSG(SHC_BUSY_STATE_ZONE, (L"CSDIOControllerBase::SDIPollingTransmit: "
; 2566 :                 L"Card exited busy state.\r\n"
; 2567 :             ));

  06780	e59f367c	 ldr         r3, [pc, #0x67C]
  06784	e5933440	 ldr         r3, [r3, #0x440]
  06788	e3130080	 tst         r3, #0x80
  0678c	0a000004	 beq         |$LN82@SDIPolling@2|
  06790	e59f068c	 ldr         r0, [pc, #0x68C]
  06794	eb000000	 bl          NKDbgPrintfW
  06798	e3a03001	 mov         r3, #1
  0679c	e58d3078	 str         r3, [sp, #0x78]
  067a0	ea000001	 b           |$LN83@SDIPolling@2|
  067a4		 |$LN82@SDIPolling@2|
  067a4	e3a03000	 mov         r3, #0
  067a8	e58d3078	 str         r3, [sp, #0x78]
  067ac		 |$LN83@SDIPolling@2|

; 2568 :             ASSERT( MMC_STAT & MMC_STAT_EOFB );

  067ac	e1dd30b6	 ldrh        r3, [sp, #6]
  067b0	e3130010	 tst         r3, #0x10
  067b4	0a000002	 beq         |$LN84@SDIPolling@2|
  067b8	e3a03001	 mov         r3, #1
  067bc	e58d307c	 str         r3, [sp, #0x7C]
  067c0	ea000008	 b           |$LN85@SDIPolling@2|
  067c4		 |$LN84@SDIPolling@2|
  067c4	e3a03c0a	 mov         r3, #0xA, 24
  067c8	e3833008	 orr         r3, r3, #8
  067cc	e59f264c	 ldr         r2, [pc, #0x64C]
  067d0	e59f1644	 ldr         r1, [pc, #0x644]
  067d4	e59f063c	 ldr         r0, [pc, #0x63C]
  067d8	eb000000	 bl          NKDbgPrintfW
  067dc	e6000010	 __debugbreak_ce
  067e0	e3a03000	 mov         r3, #0
  067e4	e58d307c	 str         r3, [sp, #0x7C]
  067e8		 |$LN85@SDIPolling@2|

; 2569 :             Write_MMC_STAT( MMC_STAT_CB | MMC_STAT_EOFB );

  067e8	e3a01014	 mov         r1, #0x14
  067ec	e59d00e8	 ldr         r0, [sp, #0xE8]
  067f0	eb000000	 bl          |?Write_MMC_STAT@CSDIOControllerBase@@QAAXG@Z|

; 2570 : 
; 2571 :             // recalculate timeout conditions
; 2572 :             dwCountStart = GetTickCount();

  067f4	eb000000	 bl          GetTickCount
  067f8	e58d0080	 str         r0, [sp, #0x80]
  067fc	e59d3080	 ldr         r3, [sp, #0x80]
  06800	e58d3008	 str         r3, [sp, #8]

; 2573 :             dwTimeout = dwCountStart + m_dwMaxTimeout;

  06804	e59d30e8	 ldr         r3, [sp, #0xE8]
  06808	e283307c	 add         r3, r3, #0x7C
  0680c	e59d2008	 ldr         r2, [sp, #8]
  06810	e5933000	 ldr         r3, [r3]
  06814	e0823003	 add         r3, r2, r3
  06818	e58d3010	 str         r3, [sp, #0x10]

; 2574 :             if( dwTimeout < dwCountStart )

  0681c	e59d2010	 ldr         r2, [sp, #0x10]
  06820	e59d3008	 ldr         r3, [sp, #8]
  06824	e1520003	 cmp         r2, r3
  06828	2a000002	 bcs         |$LN29@SDIPolling@2|

; 2575 :                 fTimeoutOverflow = TRUE;

  0682c	e3a03001	 mov         r3, #1
  06830	e58d3000	 str         r3, [sp]

; 2576 :             else

  06834	ea000001	 b           |$LN28@SDIPolling@2|
  06838		 |$LN29@SDIPolling@2|

; 2577 :                 fTimeoutOverflow = FALSE;

  06838	e3a03000	 mov         r3, #0
  0683c	e58d3000	 str         r3, [sp]
  06840		 |$LN28@SDIPolling@2|
  06840		 |$LN37@SDIPolling@2|

; 2578 :         }
; 2579 : 
; 2580 :         if( MMC_STAT & MMC_STAT_AE ) // Almost empty

  06840	e1dd30b6	 ldrh        r3, [sp, #6]
  06844	e3130b02	 tst         r3, #2, 22
  06848	0a000066	 beq         |$LN27@SDIPolling@2|

; 2581 :         {
; 2582 :             Write_MMC_STAT(MMC_STAT_AE);

  0684c	e3a01b02	 mov         r1, #2, 22
  06850	e59d00e8	 ldr         r0, [sp, #0xE8]
  06854	eb000000	 bl          |?Write_MMC_STAT@CSDIOControllerBase@@QAAXG@Z|

; 2583 : 
; 2584 :             DWORD dwTransferSize = wFIFOAlmostEmptyLevel;

  06858	e1dd30b4	 ldrh        r3, [sp, #4]
  0685c	e58d3014	 str         r3, [sp, #0x14]

; 2585 :             if( dwLen < dwTransferSize )

  06860	e59d20f0	 ldr         r2, [sp, #0xF0]
  06864	e59d3014	 ldr         r3, [sp, #0x14]
  06868	e1520003	 cmp         r2, r3
  0686c	2a000001	 bcs         |$LN26@SDIPolling@2|

; 2586 :             {
; 2587 :                 dwTransferSize = dwLen;

  06870	e59d30f0	 ldr         r3, [sp, #0xF0]
  06874	e58d3014	 str         r3, [sp, #0x14]
  06878		 |$LN26@SDIPolling@2|

; 2588 :             }
; 2589 : 
; 2590 :             dwLen = dwLen - dwTransferSize;

  06878	e59d20f0	 ldr         r2, [sp, #0xF0]
  0687c	e59d3014	 ldr         r3, [sp, #0x14]
  06880	e0423003	 sub         r3, r2, r3
  06884	e58d30f0	 str         r3, [sp, #0xF0]

; 2591 : 
; 2592 :             if( ((DWORD)pBuff) % 2 ) // if the data buffer is not aligned

  06888	e59d10ec	 ldr         r1, [sp, #0xEC]
  0688c	e3a00002	 mov         r0, #2
  06890	eb000000	 bl          __rt_udiv
  06894	e3510000	 cmp         r1, #0
  06898	0a00001e	 beq         |$LN25@SDIPolling@2|
  0689c		 |$LN24@SDIPolling@2|

; 2593 :             {
; 2594 :                 while( dwTransferSize > 1)

  0689c	e59d3014	 ldr         r3, [sp, #0x14]
  068a0	e3530001	 cmp         r3, #1
  068a4	9a00001a	 bls         |$LN23@SDIPolling@2|

; 2595 :                 {
; 2596 :                     BYTE bLo = *((BYTE*)pBuff);

  068a8	e59d30ec	 ldr         r3, [sp, #0xEC]
  068ac	e5d33000	 ldrb        r3, [r3]
  068b0	e5cd301a	 strb        r3, [sp, #0x1A]

; 2597 :                     BYTE bHi = *((BYTE*)pBuff + 1);

  068b4	e59d30ec	 ldr         r3, [sp, #0xEC]
  068b8	e2833001	 add         r3, r3, #1
  068bc	e5d33000	 ldrb        r3, [r3]
  068c0	e5cd301b	 strb        r3, [sp, #0x1B]

; 2598 :                     WORD wData = ( bHi << 8 ) | bLo; // assume little endian

  068c4	e5dd301b	 ldrb        r3, [sp, #0x1B]
  068c8	e1a02403	 mov         r2, r3, lsl #8
  068cc	e5dd301a	 ldrb        r3, [sp, #0x1A]
  068d0	e1823003	 orr         r3, r2, r3
  068d4	e1a03803	 mov         r3, r3, lsl #16
  068d8	e1a03823	 mov         r3, r3, lsr #16
  068dc	e1cd31b8	 strh        r3, [sp, #0x18]

; 2599 :                     OUTREG16(&m_vpSDIOReg->MMC_DATA, wData);

  068e0	e59d30e8	 ldr         r3, [sp, #0xE8]
  068e4	e2833088	 add         r3, r3, #0x88
  068e8	e5933000	 ldr         r3, [r3]
  068ec	e2832020	 add         r2, r3, #0x20
  068f0	e1dd31b8	 ldrh        r3, [sp, #0x18]
  068f4	e1c230b0	 strh        r3, [r2]

; 2600 :                     dwTransferSize -= 2;

  068f8	e59d3014	 ldr         r3, [sp, #0x14]
  068fc	e2433002	 sub         r3, r3, #2
  06900	e58d3014	 str         r3, [sp, #0x14]

; 2601 :                     pBuff += 2;

  06904	e59d30ec	 ldr         r3, [sp, #0xEC]
  06908	e2833002	 add         r3, r3, #2
  0690c	e58d30ec	 str         r3, [sp, #0xEC]

; 2602 :                 } // while

  06910	eaffffe1	 b           |$LN24@SDIPolling@2|
  06914		 |$LN23@SDIPolling@2|

; 2603 :             }
; 2604 :             else

  06914	ea000010	 b           |$LN22@SDIPolling@2|
  06918		 |$LN25@SDIPolling@2|
  06918		 |$LN21@SDIPolling@2|

; 2605 :             {
; 2606 :                 while( dwTransferSize > 1)

  06918	e59d3014	 ldr         r3, [sp, #0x14]
  0691c	e3530001	 cmp         r3, #1
  06920	9a00000d	 bls         |$LN20@SDIPolling@2|

; 2607 :                 {
; 2608 :                     OUTREG16(&m_vpSDIOReg->MMC_DATA,*((WORD*)pBuff));

  06924	e59d30e8	 ldr         r3, [sp, #0xE8]
  06928	e2833088	 add         r3, r3, #0x88
  0692c	e5933000	 ldr         r3, [r3]
  06930	e2832020	 add         r2, r3, #0x20
  06934	e59d30ec	 ldr         r3, [sp, #0xEC]
  06938	e1d330b0	 ldrh        r3, [r3]
  0693c	e1c230b0	 strh        r3, [r2]

; 2609 :                     dwTransferSize -= 2;

  06940	e59d3014	 ldr         r3, [sp, #0x14]
  06944	e2433002	 sub         r3, r3, #2
  06948	e58d3014	 str         r3, [sp, #0x14]

; 2610 :                     pBuff += 2;

  0694c	e59d30ec	 ldr         r3, [sp, #0xEC]
  06950	e2833002	 add         r3, r3, #2
  06954	e58d30ec	 str         r3, [sp, #0xEC]

; 2611 :                 } // while

  06958	eaffffee	 b           |$LN21@SDIPolling@2|
  0695c		 |$LN20@SDIPolling@2|
  0695c		 |$LN22@SDIPolling@2|

; 2612 :             }
; 2613 :             if( dwTransferSize == 1 )

  0695c	e59d3014	 ldr         r3, [sp, #0x14]
  06960	e3530001	 cmp         r3, #1
  06964	1a00000c	 bne         |$LN19@SDIPolling@2|

; 2614 :             {
; 2615 :                 OUTREG16(&m_vpSDIOReg->MMC_DATA, (WORD)(*((BYTE*)pBuff)));

  06968	e59d30ec	 ldr         r3, [sp, #0xEC]
  0696c	e5d32000	 ldrb        r2, [r3]
  06970	e59d30e8	 ldr         r3, [sp, #0xE8]
  06974	e2833088	 add         r3, r3, #0x88
  06978	e5933000	 ldr         r3, [r3]
  0697c	e2833020	 add         r3, r3, #0x20
  06980	e1c320b0	 strh        r2, [r3]

; 2616 :                 dwTransferSize -= 1;

  06984	e59d3014	 ldr         r3, [sp, #0x14]
  06988	e2433001	 sub         r3, r3, #1
  0698c	e58d3014	 str         r3, [sp, #0x14]

; 2617 :                 pBuff += 1;

  06990	e59d30ec	 ldr         r3, [sp, #0xEC]
  06994	e2833001	 add         r3, r3, #1
  06998	e58d30ec	 str         r3, [sp, #0xEC]
  0699c		 |$LN19@SDIPolling@2|

; 2618 :             }
; 2619 : 
; 2620 :             // recalculate timeout conditions
; 2621 :             dwCountStart = GetTickCount();

  0699c	eb000000	 bl          GetTickCount
  069a0	e58d0084	 str         r0, [sp, #0x84]
  069a4	e59d3084	 ldr         r3, [sp, #0x84]
  069a8	e58d3008	 str         r3, [sp, #8]

; 2622 :             dwTimeout = dwCountStart + m_dwMaxTimeout;

  069ac	e59d30e8	 ldr         r3, [sp, #0xE8]
  069b0	e283307c	 add         r3, r3, #0x7C
  069b4	e59d2008	 ldr         r2, [sp, #8]
  069b8	e5933000	 ldr         r3, [r3]
  069bc	e0823003	 add         r3, r2, r3
  069c0	e58d3010	 str         r3, [sp, #0x10]

; 2623 :             if( dwTimeout < dwCountStart )

  069c4	e59d2010	 ldr         r2, [sp, #0x10]
  069c8	e59d3008	 ldr         r3, [sp, #8]
  069cc	e1520003	 cmp         r2, r3
  069d0	2a000002	 bcs         |$LN18@SDIPolling@2|

; 2624 :                 fTimeoutOverflow = TRUE;

  069d4	e3a03001	 mov         r3, #1
  069d8	e58d3000	 str         r3, [sp]

; 2625 :             else

  069dc	ea000001	 b           |$LN17@SDIPolling@2|
  069e0		 |$LN18@SDIPolling@2|

; 2626 :                 fTimeoutOverflow = FALSE;

  069e0	e3a03000	 mov         r3, #0
  069e4	e58d3000	 str         r3, [sp]
  069e8		 |$LN17@SDIPolling@2|
  069e8		 |$LN27@SDIPolling@2|

; 2627 :         }
; 2628 : 
; 2629 :         MMC_STAT = Read_MMC_STAT();

  069e8	e59d00e8	 ldr         r0, [sp, #0xE8]
  069ec	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|
  069f0	e1cd08b8	 strh        r0, [sp, #0x88]
  069f4	e1dd38b8	 ldrh        r3, [sp, #0x88]
  069f8	e1cd30b6	 strh        r3, [sp, #6]

; 2630 :     } // while

  069fc	eafffe8a	 b           |$LN47@SDIPolling@2|
  06a00		 |$LN46@SDIPolling@2|

; 2631 : 
; 2632 :     // recalculate timeout conditions
; 2633 :     dwCountStart = GetTickCount();

  06a00	eb000000	 bl          GetTickCount
  06a04	e58d008c	 str         r0, [sp, #0x8C]
  06a08	e59d308c	 ldr         r3, [sp, #0x8C]
  06a0c	e58d3008	 str         r3, [sp, #8]

; 2634 :     dwTimeout = dwCountStart + m_dwMaxTimeout;

  06a10	e59d30e8	 ldr         r3, [sp, #0xE8]
  06a14	e283307c	 add         r3, r3, #0x7C
  06a18	e59d2008	 ldr         r2, [sp, #8]
  06a1c	e5933000	 ldr         r3, [r3]
  06a20	e0823003	 add         r3, r2, r3
  06a24	e58d3010	 str         r3, [sp, #0x10]

; 2635 :     if( dwTimeout < dwCountStart )

  06a28	e59d2010	 ldr         r2, [sp, #0x10]
  06a2c	e59d3008	 ldr         r3, [sp, #8]
  06a30	e1520003	 cmp         r2, r3
  06a34	2a000002	 bcs         |$LN16@SDIPolling@2|

; 2636 :         fTimeoutOverflow = TRUE;

  06a38	e3a03001	 mov         r3, #1
  06a3c	e58d3000	 str         r3, [sp]

; 2637 :     else

  06a40	ea000001	 b           |$LN15@SDIPolling@2|
  06a44		 |$LN16@SDIPolling@2|

; 2638 :         fTimeoutOverflow = FALSE;

  06a44	e3a03000	 mov         r3, #0
  06a48	e58d3000	 str         r3, [sp]
  06a4c		 |$LN15@SDIPolling@2|

; 2639 : 
; 2640 :     // Wait for data to be transmitted to the card
; 2641 :     MMC_STAT = Read_MMC_STAT();

  06a4c	e59d00e8	 ldr         r0, [sp, #0xE8]
  06a50	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|
  06a54	e1cd09b0	 strh        r0, [sp, #0x90]
  06a58	e1dd39b0	 ldrh        r3, [sp, #0x90]
  06a5c	e1cd30b6	 strh        r3, [sp, #6]

; 2642 :     if( !( MMC_STAT & MMC_STAT_BRS ) )

  06a60	e1dd30b6	 ldrh        r3, [sp, #6]
  06a64	e3130008	 tst         r3, #8
  06a68	1a000062	 bne         |$LN14@SDIPolling@2|

; 2643 :     {
; 2644 :         DEBUGMSG(SHC_SDBUS_INTERACT_ZONE, (L"CSDIOControllerBase::SDIPollingTransmit: "
; 2645 :             L"Waiting for BRS bit...\r\n"
; 2646 :         ));

  06a6c	e59f3390	 ldr         r3, [pc, #0x390]
  06a70	e5933440	 ldr         r3, [r3, #0x440]
  06a74	e3130040	 tst         r3, #0x40
  06a78	0a000004	 beq         |$LN86@SDIPolling@2|
  06a7c	e59f0390	 ldr         r0, [pc, #0x390]
  06a80	eb000000	 bl          NKDbgPrintfW
  06a84	e3a03001	 mov         r3, #1
  06a88	e58d3094	 str         r3, [sp, #0x94]
  06a8c	ea000001	 b           |$LN87@SDIPolling@2|
  06a90		 |$LN86@SDIPolling@2|
  06a90	e3a03000	 mov         r3, #0
  06a94	e58d3094	 str         r3, [sp, #0x94]
  06a98		 |$LN87@SDIPolling@2|
  06a98		 |$LN13@SDIPolling@2|

; 2647 : 
; 2648 :         while( !( MMC_STAT & MMC_STAT_BRS ) )

  06a98	e1dd30b6	 ldrh        r3, [sp, #6]
  06a9c	e3130008	 tst         r3, #8
  06aa0	1a000049	 bne         |$LN12@SDIPolling@2|

; 2649 :         {
; 2650 :             if( !SDCardDetect() )

  06aa4	e59d30e8	 ldr         r3, [sp, #0xE8]
  06aa8	e5933000	 ldr         r3, [r3]
  06aac	e2833014	 add         r3, r3, #0x14
  06ab0	e59d00e8	 ldr         r0, [sp, #0xE8]
  06ab4	e5933000	 ldr         r3, [r3]
  06ab8	e1a0e00f	 mov         lr, pc
  06abc	e12fff13	 bx          r3
  06ac0	e58d0098	 str         r0, [sp, #0x98]
  06ac4	e59d3098	 ldr         r3, [sp, #0x98]
  06ac8	e3530000	 cmp         r3, #0
  06acc	1a000000	 bne         |$LN11@SDIPolling@2|

; 2651 :             {
; 2652 :                 break;

  06ad0	ea00003d	 b           |$LN12@SDIPolling@2|
  06ad4		 |$LN11@SDIPolling@2|

; 2653 :             }
; 2654 : 
; 2655 :             // check for a timeout
; 2656 :             dwCurrentTickCount = GetTickCount();

  06ad4	eb000000	 bl          GetTickCount
  06ad8	e58d009c	 str         r0, [sp, #0x9C]
  06adc	e59d309c	 ldr         r3, [sp, #0x9C]
  06ae0	e58d300c	 str         r3, [sp, #0xC]

; 2657 :             if( fTimeoutOverflow ? ( dwTimeout < dwCurrentTickCount && dwCurrentTickCount < dwCountStart )
; 2658 :                 : ( dwTimeout < dwCurrentTickCount || dwCurrentTickCount < dwCountStart ) )

  06ae4	e59d3000	 ldr         r3, [sp]
  06ae8	e3530000	 cmp         r3, #0
  06aec	0a00000f	 beq         |$LN92@SDIPolling@2|
  06af0	e59d2010	 ldr         r2, [sp, #0x10]
  06af4	e59d300c	 ldr         r3, [sp, #0xC]
  06af8	e1520003	 cmp         r2, r3
  06afc	2a000006	 bcs         |$LN88@SDIPolling@2|
  06b00	e59d200c	 ldr         r2, [sp, #0xC]
  06b04	e59d3008	 ldr         r3, [sp, #8]
  06b08	e1520003	 cmp         r2, r3
  06b0c	2a000002	 bcs         |$LN88@SDIPolling@2|
  06b10	e3a03001	 mov         r3, #1
  06b14	e58d30a0	 str         r3, [sp, #0xA0]
  06b18	ea000001	 b           |$LN91@SDIPolling@2|
  06b1c		 |$LN88@SDIPolling@2|
  06b1c	e3a03000	 mov         r3, #0
  06b20	e58d30a0	 str         r3, [sp, #0xA0]
  06b24		 |$LN91@SDIPolling@2|
  06b24	e59d30a0	 ldr         r3, [sp, #0xA0]
  06b28	e58d30a4	 str         r3, [sp, #0xA4]
  06b2c	ea00000e	 b           |$LN93@SDIPolling@2|
  06b30		 |$LN92@SDIPolling@2|
  06b30	e59d2010	 ldr         r2, [sp, #0x10]
  06b34	e59d300c	 ldr         r3, [sp, #0xC]
  06b38	e1520003	 cmp         r2, r3
  06b3c	3a000006	 bcc         |$LN89@SDIPolling@2|
  06b40	e59d200c	 ldr         r2, [sp, #0xC]
  06b44	e59d3008	 ldr         r3, [sp, #8]
  06b48	e1520003	 cmp         r2, r3
  06b4c	3a000002	 bcc         |$LN89@SDIPolling@2|
  06b50	e3a03000	 mov         r3, #0
  06b54	e58d30a8	 str         r3, [sp, #0xA8]
  06b58	ea000001	 b           |$LN90@SDIPolling@2|
  06b5c		 |$LN89@SDIPolling@2|
  06b5c	e3a03001	 mov         r3, #1
  06b60	e58d30a8	 str         r3, [sp, #0xA8]
  06b64		 |$LN90@SDIPolling@2|
  06b64	e59d30a8	 ldr         r3, [sp, #0xA8]
  06b68	e58d30a4	 str         r3, [sp, #0xA4]
  06b6c		 |$LN93@SDIPolling@2|
  06b6c	e59d30a4	 ldr         r3, [sp, #0xA4]
  06b70	e3530000	 cmp         r3, #0
  06b74	0a00000c	 beq         |$LN10@SDIPolling@2|

; 2659 :             {
; 2660 :                 DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::SDIPollingTransmit: "
; 2661 :                     L"Exit: TIMEOUT.\r\n"
; 2662 :                 ));

  06b78	e59f3284	 ldr         r3, [pc, #0x284]
  06b7c	e5933440	 ldr         r3, [r3, #0x440]
  06b80	e3130902	 tst         r3, #2, 18
  06b84	0a000004	 beq         |$LN94@SDIPolling@2|
  06b88	e59f0278	 ldr         r0, [pc, #0x278]
  06b8c	eb000000	 bl          NKDbgPrintfW
  06b90	e3a03001	 mov         r3, #1
  06b94	e58d30ac	 str         r3, [sp, #0xAC]
  06b98	ea000001	 b           |$LN95@SDIPolling@2|
  06b9c		 |$LN94@SDIPolling@2|
  06b9c	e3a03000	 mov         r3, #0
  06ba0	e58d30ac	 str         r3, [sp, #0xAC]
  06ba4		 |$LN95@SDIPolling@2|

; 2663 :                 goto WRITE_ERROR;

  06ba4	ea00008f	 b           |$LN9@SDIPolling@2|
  06ba8	ea00008e	 b           |$WRITE_ERROR$41290|
  06bac		 |$LN10@SDIPolling@2|

; 2664 :             }
; 2665 : 
; 2666 :             Sleep(1);

  06bac	e3a00001	 mov         r0, #1
  06bb0	eb000000	 bl          Sleep

; 2667 :             MMC_STAT = Read_MMC_STAT();

  06bb4	e59d00e8	 ldr         r0, [sp, #0xE8]
  06bb8	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|
  06bbc	e1cd0bb0	 strh        r0, [sp, #0xB0]
  06bc0	e1dd3bb0	 ldrh        r3, [sp, #0xB0]
  06bc4	e1cd30b6	 strh        r3, [sp, #6]

; 2668 :         }

  06bc8	eaffffb2	 b           |$LN13@SDIPolling@2|
  06bcc		 |$LN12@SDIPolling@2|

; 2669 :         DEBUGMSG(SHC_SDBUS_INTERACT_ZONE, (L"CSDIOControllerBase::SDIPollingTransmit: "
; 2670 :             L"Got the BRS bit.\r\n"
; 2671 :         ));

  06bcc	e59f3230	 ldr         r3, [pc, #0x230]
  06bd0	e5933440	 ldr         r3, [r3, #0x440]
  06bd4	e3130040	 tst         r3, #0x40
  06bd8	0a000004	 beq         |$LN96@SDIPolling@2|
  06bdc	e59f022c	 ldr         r0, [pc, #0x22C]
  06be0	eb000000	 bl          NKDbgPrintfW
  06be4	e3a03001	 mov         r3, #1
  06be8	e58d30b4	 str         r3, [sp, #0xB4]
  06bec	ea000001	 b           |$LN97@SDIPolling@2|
  06bf0		 |$LN96@SDIPolling@2|
  06bf0	e3a03000	 mov         r3, #0
  06bf4	e58d30b4	 str         r3, [sp, #0xB4]
  06bf8		 |$LN97@SDIPolling@2|
  06bf8		 |$LN14@SDIPolling@2|

; 2672 :     }
; 2673 : 
; 2674 :     // recalculate timeout conditions
; 2675 :     dwCountStart = GetTickCount();

  06bf8	eb000000	 bl          GetTickCount
  06bfc	e58d00b8	 str         r0, [sp, #0xB8]
  06c00	e59d30b8	 ldr         r3, [sp, #0xB8]
  06c04	e58d3008	 str         r3, [sp, #8]

; 2676 :     dwTimeout = dwCountStart + m_dwMaxTimeout;

  06c08	e59d30e8	 ldr         r3, [sp, #0xE8]
  06c0c	e283307c	 add         r3, r3, #0x7C
  06c10	e59d2008	 ldr         r2, [sp, #8]
  06c14	e5933000	 ldr         r3, [r3]
  06c18	e0823003	 add         r3, r2, r3
  06c1c	e58d3010	 str         r3, [sp, #0x10]

; 2677 :     if( dwTimeout < dwCountStart )

  06c20	e59d2010	 ldr         r2, [sp, #0x10]
  06c24	e59d3008	 ldr         r3, [sp, #8]
  06c28	e1520003	 cmp         r2, r3
  06c2c	2a000002	 bcs         |$LN8@SDIPolling@2|

; 2678 :         fTimeoutOverflow = TRUE;

  06c30	e3a03001	 mov         r3, #1
  06c34	e58d3000	 str         r3, [sp]

; 2679 :     else

  06c38	ea000001	 b           |$LN7@SDIPolling@2|
  06c3c		 |$LN8@SDIPolling@2|

; 2680 :         fTimeoutOverflow = FALSE;

  06c3c	e3a03000	 mov         r3, #0
  06c40	e58d3000	 str         r3, [sp]
  06c44		 |$LN7@SDIPolling@2|

; 2681 : 
; 2682 :     // Wait for card if it is busy?
; 2683 :     if( MMC_STAT & MMC_STAT_CB )

  06c44	e1dd30b6	 ldrh        r3, [sp, #6]
  06c48	e3130004	 tst         r3, #4
  06c4c	0a000062	 beq         |$LN6@SDIPolling@2|

; 2684 :     {
; 2685 :         DEBUGMSG(SHC_BUSY_STATE_ZONE, (L"CSDIOControllerBase::SDIPollingTransmit: "
; 2686 :             L"Card in busy state after data transfer!  Delaying...\r\n"
; 2687 :         ));

  06c50	e59f31ac	 ldr         r3, [pc, #0x1AC]
  06c54	e5933440	 ldr         r3, [r3, #0x440]
  06c58	e3130080	 tst         r3, #0x80
  06c5c	0a000004	 beq         |$LN98@SDIPolling@2|
  06c60	e59f01a4	 ldr         r0, [pc, #0x1A4]
  06c64	eb000000	 bl          NKDbgPrintfW
  06c68	e3a03001	 mov         r3, #1
  06c6c	e58d30bc	 str         r3, [sp, #0xBC]
  06c70	ea000001	 b           |$LN99@SDIPolling@2|
  06c74		 |$LN98@SDIPolling@2|
  06c74	e3a03000	 mov         r3, #0
  06c78	e58d30bc	 str         r3, [sp, #0xBC]
  06c7c		 |$LN99@SDIPolling@2|
  06c7c		 |$LN5@SDIPolling@2|

; 2688 : 
; 2689 :         while( !(MMC_STAT & MMC_STAT_EOFB) )

  06c7c	e1dd30b6	 ldrh        r3, [sp, #6]
  06c80	e3130010	 tst         r3, #0x10
  06c84	1a000049	 bne         |$LN4@SDIPolling@2|

; 2690 :         {
; 2691 :             if( !SDCardDetect() )

  06c88	e59d30e8	 ldr         r3, [sp, #0xE8]
  06c8c	e5933000	 ldr         r3, [r3]
  06c90	e2833014	 add         r3, r3, #0x14
  06c94	e59d00e8	 ldr         r0, [sp, #0xE8]
  06c98	e5933000	 ldr         r3, [r3]
  06c9c	e1a0e00f	 mov         lr, pc
  06ca0	e12fff13	 bx          r3
  06ca4	e58d00c0	 str         r0, [sp, #0xC0]
  06ca8	e59d30c0	 ldr         r3, [sp, #0xC0]
  06cac	e3530000	 cmp         r3, #0
  06cb0	1a000000	 bne         |$LN3@SDIPolling@2|

; 2692 :             {
; 2693 :                 break;

  06cb4	ea00003d	 b           |$LN4@SDIPolling@2|
  06cb8		 |$LN3@SDIPolling@2|

; 2694 :             }
; 2695 : 
; 2696 :             // check for a timeout
; 2697 :             dwCurrentTickCount = GetTickCount();

  06cb8	eb000000	 bl          GetTickCount
  06cbc	e58d00c4	 str         r0, [sp, #0xC4]
  06cc0	e59d30c4	 ldr         r3, [sp, #0xC4]
  06cc4	e58d300c	 str         r3, [sp, #0xC]

; 2698 :             if( fTimeoutOverflow ? ( dwTimeout < dwCurrentTickCount && dwCurrentTickCount < dwCountStart )
; 2699 :                 : ( dwTimeout < dwCurrentTickCount || dwCurrentTickCount < dwCountStart ) )

  06cc8	e59d3000	 ldr         r3, [sp]
  06ccc	e3530000	 cmp         r3, #0
  06cd0	0a00000f	 beq         |$LN104@SDIPolling@2|
  06cd4	e59d2010	 ldr         r2, [sp, #0x10]
  06cd8	e59d300c	 ldr         r3, [sp, #0xC]
  06cdc	e1520003	 cmp         r2, r3
  06ce0	2a000006	 bcs         |$LN100@SDIPolling@2|
  06ce4	e59d200c	 ldr         r2, [sp, #0xC]
  06ce8	e59d3008	 ldr         r3, [sp, #8]
  06cec	e1520003	 cmp         r2, r3
  06cf0	2a000002	 bcs         |$LN100@SDIPolling@2|
  06cf4	e3a03001	 mov         r3, #1
  06cf8	e58d30c8	 str         r3, [sp, #0xC8]
  06cfc	ea000001	 b           |$LN103@SDIPolling@2|
  06d00		 |$LN100@SDIPolling@2|
  06d00	e3a03000	 mov         r3, #0
  06d04	e58d30c8	 str         r3, [sp, #0xC8]
  06d08		 |$LN103@SDIPolling@2|
  06d08	e59d30c8	 ldr         r3, [sp, #0xC8]
  06d0c	e58d30cc	 str         r3, [sp, #0xCC]
  06d10	ea00000e	 b           |$LN105@SDIPolling@2|
  06d14		 |$LN104@SDIPolling@2|
  06d14	e59d2010	 ldr         r2, [sp, #0x10]
  06d18	e59d300c	 ldr         r3, [sp, #0xC]
  06d1c	e1520003	 cmp         r2, r3
  06d20	3a000006	 bcc         |$LN101@SDIPolling@2|
  06d24	e59d200c	 ldr         r2, [sp, #0xC]
  06d28	e59d3008	 ldr         r3, [sp, #8]
  06d2c	e1520003	 cmp         r2, r3
  06d30	3a000002	 bcc         |$LN101@SDIPolling@2|
  06d34	e3a03000	 mov         r3, #0
  06d38	e58d30d0	 str         r3, [sp, #0xD0]
  06d3c	ea000001	 b           |$LN102@SDIPolling@2|
  06d40		 |$LN101@SDIPolling@2|
  06d40	e3a03001	 mov         r3, #1
  06d44	e58d30d0	 str         r3, [sp, #0xD0]
  06d48		 |$LN102@SDIPolling@2|
  06d48	e59d30d0	 ldr         r3, [sp, #0xD0]
  06d4c	e58d30cc	 str         r3, [sp, #0xCC]
  06d50		 |$LN105@SDIPolling@2|
  06d50	e59d30cc	 ldr         r3, [sp, #0xCC]
  06d54	e3530000	 cmp         r3, #0
  06d58	0a00000c	 beq         |$LN2@SDIPolling@2|

; 2700 :             {
; 2701 :                 DEBUGMSG(SDCARD_ZONE_ERROR, (L"CSDIOControllerBase::SDIPollingTransmit: "
; 2702 :                     L"Exit: TIMEOUT.\r\n"
; 2703 :                 ));

  06d5c	e59f30a0	 ldr         r3, [pc, #0xA0]
  06d60	e5933440	 ldr         r3, [r3, #0x440]
  06d64	e3130902	 tst         r3, #2, 18
  06d68	0a000004	 beq         |$LN106@SDIPolling@2|
  06d6c	e59f0094	 ldr         r0, [pc, #0x94]
  06d70	eb000000	 bl          NKDbgPrintfW
  06d74	e3a03001	 mov         r3, #1
  06d78	e58d30d4	 str         r3, [sp, #0xD4]
  06d7c	ea000001	 b           |$LN107@SDIPolling@2|
  06d80		 |$LN106@SDIPolling@2|
  06d80	e3a03000	 mov         r3, #0
  06d84	e58d30d4	 str         r3, [sp, #0xD4]
  06d88		 |$LN107@SDIPolling@2|

; 2704 :                 goto WRITE_ERROR;

  06d88	ea000016	 b           |$LN1@SDIPolling@2|
  06d8c	ea000015	 b           |$WRITE_ERROR$41290|
  06d90		 |$LN2@SDIPolling@2|

; 2705 :             }
; 2706 : 
; 2707 :             Sleep(1);

  06d90	e3a00001	 mov         r0, #1
  06d94	eb000000	 bl          Sleep

; 2708 :             MMC_STAT = Read_MMC_STAT();

  06d98	e59d00e8	 ldr         r0, [sp, #0xE8]
  06d9c	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAGXZ|
  06da0	e1cd0db8	 strh        r0, [sp, #0xD8]
  06da4	e1dd3db8	 ldrh        r3, [sp, #0xD8]
  06da8	e1cd30b6	 strh        r3, [sp, #6]

; 2709 :         } 

  06dac	eaffffb2	 b           |$LN5@SDIPolling@2|
  06db0		 |$LN4@SDIPolling@2|

; 2710 :         DEBUGMSG(SHC_BUSY_STATE_ZONE, (L"CSDIOControllerBase::SDIPollingTransmit: "
; 2711 :             L"Card exited busy state!\r\n"
; 2712 :         ));

  06db0	e59f304c	 ldr         r3, [pc, #0x4C]
  06db4	e5933440	 ldr         r3, [r3, #0x440]
  06db8	e3130080	 tst         r3, #0x80
  06dbc	0a000004	 beq         |$LN108@SDIPolling@2|
  06dc0	e59f0038	 ldr         r0, [pc, #0x38]
  06dc4	eb000000	 bl          NKDbgPrintfW
  06dc8	e3a03001	 mov         r3, #1
  06dcc	e58d30dc	 str         r3, [sp, #0xDC]
  06dd0	ea000001	 b           |$LN109@SDIPolling@2|
  06dd4		 |$LN108@SDIPolling@2|
  06dd4	e3a03000	 mov         r3, #0
  06dd8	e58d30dc	 str         r3, [sp, #0xDC]
  06ddc		 |$LN109@SDIPolling@2|
  06ddc		 |$LN6@SDIPolling@2|

; 2713 :     }
; 2714 : 
; 2715 :     return TRUE;

  06ddc	e3a03001	 mov         r3, #1
  06de0	e58d301c	 str         r3, [sp, #0x1C]
  06de4	ea000001	 b           |$LN50@SDIPolling@2|
  06de8		 |$LN1@SDIPolling@2|
  06de8		 |$LN9@SDIPolling@2|
  06de8		 |$LN30@SDIPolling@2|
  06de8		 |$LN32@SDIPolling@2|
  06de8		 |$LN38@SDIPolling@2|
  06de8		 |$LN40@SDIPolling@2|
  06de8		 |$LN42@SDIPolling@2|
  06de8		 |$LN44@SDIPolling@2|
  06de8		 |$WRITE_ERROR$41290|

; 2716 : 
; 2717 : WRITE_ERROR:
; 2718 :     return FALSE;

  06de8	e3a03000	 mov         r3, #0
  06dec	e58d301c	 str         r3, [sp, #0x1C]
  06df0		 |$LN50@SDIPolling@2|

; 2719 : }

  06df0	e59d001c	 ldr         r0, [sp, #0x1C]
  06df4	e28dd0e0	 add         sp, sp, #0xE0
  06df8	e89d6000	 ldmia       sp, {sp, lr}
  06dfc	e12fff1e	 bx          lr
  06e00		 |$LN113@SDIPolling@2|
  06e00		 |$LN114@SDIPolling@2|
  06e00	00000000	 DCD         |??_C@_1IG@KDONLCIN@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@|
  06e04		 |$LN115@SDIPolling@2|
  06e04	00000000	 DCD         |dpCurSettings|
  06e08		 |$LN116@SDIPolling@2|
  06e08	00000000	 DCD         |??_C@_1HE@EHEOPPDJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@|
  06e0c		 |$LN117@SDIPolling@2|
  06e0c	00000000	 DCD         |??_C@_1MA@LELOLDHI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@|
  06e10		 |$LN118@SDIPolling@2|
  06e10	00000000	 DCD         |??_C@_1HI@MEMMOGBP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@|
  06e14		 |$LN119@SDIPolling@2|
  06e14	00000000	 DCD         |??_C@_1IE@FGFFHEIL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@|
  06e18		 |$LN120@SDIPolling@2|
  06e18	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  06e1c		 |$LN121@SDIPolling@2|
  06e1c	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  06e20		 |$LN122@SDIPolling@2|
  06e20	00000000	 DCD         |??_C@_1JA@LIPKICML@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  06e24		 |$LN123@SDIPolling@2|
  06e24	00000000	 DCD         |??_C@_1IG@HKMNKACB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@|
  06e28		 |$LN124@SDIPolling@2|
  06e28	00000000	 DCD         |??_C@_1HO@GAKICDKK@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@|
  06e2c		 |$LN125@SDIPolling@2|
  06e2c	00000000	 DCD         |??_C@_1MC@NCCIFDPE@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@|
  06e30		 |$LN126@SDIPolling@2|
  06e30	00000000	 DCD         |??_C@_1II@CPNOBFDG@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@|
  06e34		 |$LN127@SDIPolling@2|
  06e34	00000000	 DCD         |??_C@_1IK@IHNNKMAH@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@|
  06e38		 |$LN128@SDIPolling@2|
  06e38	00000000	 DCD         |??_C@_1MC@PPIPGNCP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT@|
  06e3c		 |$M43451|

			 ENDP  ; |?SDIPollingTransmit@CSDIOControllerBase@@QAAHPAEK@Z|, CSDIOControllerBase::SDIPollingTransmit

	END
