; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\OMAP2420_MS_V1\HDQ\hdq.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1BE@DIEKGMHP@?$AAR?$AAx?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@LMGJPBKK@?$AAT?$AAx?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@KPFHKDCL@?$AAB?$AAr?$AAe?$AAa?$AAk?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_17DJGGJCGD@?$AAI?$AAr?$AAq?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@LBBNFMDB@?$AAM?$AAe?$AAm?$AAL?$AAe?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@INLDIDEN@?$AAM?$AAe?$AAm?$AAB?$AAa?$AAs?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|cliDelay1| [ DATA ]
	EXPORT	|cliDelay2| [ DATA ]
	EXPORT	|cliDelay2A| [ DATA ]
	EXPORT	|cliDelay3| [ DATA ]
	EXPORT	|dpCurSettings| [ DATA ]

  00000			 AREA	 |.data|, DATA
	 COMMON	|DEVICE_IFC_HDQ_GUID|, 0x10


  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@DIEKGMHP@?$AAR?$AAx?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "R"
	DCB	0x0, "x", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o"
	DCB	0x0, "u", 0x0, "t", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@LMGJPBKK@?$AAT?$AAx?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "T"
	DCB	0x0, "x", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o"
	DCB	0x0, "u", 0x0, "t", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@KPFHKDCL@?$AAB?$AAr?$AAe?$AAa?$AAk?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "B"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "k", 0x0, "T", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17DJGGJCGD@?$AAI?$AAr?$AAq?$AA?$AA@| DCB "I", 0x0, "r", 0x0, "q", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@LBBNFMDB@?$AAM?$AAe?$AAm?$AAL?$AAe?$AAn?$AA?$AA@| DCB "M", 0x0, "e"
	DCB	0x0, "m", 0x0, "L", 0x0, "e", 0x0, "n", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@INLDIDEN@?$AAM?$AAe?$AAm?$AAB?$AAa?$AAs?$AAe?$AA?$AA@| DCB "M", 0x0
	DCB	"e", 0x0, "m", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.data|, DATA
|dpCurSettings| DCB "S", 0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0
	DCB	" ", 0x0, "B", 0x0, "u", 0x0, "s", 0x0, "e", 0x0, "s", 0x0
	DCB	0x0, 0x0
	%	38
	DCB	"E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, "s", 0x0
	DCB	0x0, 0x0
	%	50
	DCB	"W", 0x0, "a", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0
	DCB	"g", 0x0, "s", 0x0, 0x0, 0x0
	%	46
	DCB	"F", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i", 0x0
	DCB	"o", 0x0, "n", 0x0, 0x0, 0x0
	%	46
	DCB	"I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0x0, 0x0
	%	54
	DCB	"I", 0x0, "n", 0x0, "f", 0x0, "o", 0x0, 0x0, 0x0
	%	54
	DCB	"I", 0x0, "S", 0x0, "T", 0x0, 0x0, 0x0
	%	56
	DCB	"P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, 0x0, 0x0
	%	52
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"H", 0x0, "D", 0x0, "Q", 0x0, 0x0, 0x0
	%	56
	DCB	"I", 0x0, "2", 0x0, "C", 0x0, 0x0, 0x0
	%	56
	DCB	"G", 0x0, "P", 0x0, "I", 0x0, "O", 0x0, 0x0, 0x0
	%	54
	DCB	"B", 0x0, "U", 0x0, "S", 0x0, 0x0, 0x0
	%	56
	DCD	0x3

  00000			 AREA	 |.rdata|, DATA, READONLY
|cliDelay1| DCD	0x64
|cliDelay2| DCD	0x64
|cliDelay2A| DCD 0x64
|cliDelay3| DCD	0x64
|g_deviceRegParams| DCD |??_C@_1BA@INLDIDEN@?$AAM?$AAe?$AAm?$AAB?$AAa?$AAs?$AAe?$AA?$AA@|
	DCD	0x1
	DCD	0x1
	DCD	0x4
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1O@LBBNFMDB@?$AAM?$AAe?$AAm?$AAL?$AAe?$AAn?$AA?$AA@|
	DCD	0x1
	DCD	0x1
	DCD	0x8
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_17DJGGJCGD@?$AAI?$AAr?$AAq?$AA?$AA@|
	DCD	0x1
	DCD	0x1
	DCD	0xc
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1BK@KPFHKDCL@?$AAB?$AAr?$AAe?$AAa?$AAk?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x10
	DCD	0x4
	DCD	0x1
	DCD	|??_C@_1BE@LMGJPBKK@?$AAT?$AAx?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x14
	DCD	0x4
	DCD	0x5
	DCD	|??_C@_1BE@DIEKGMHP@?$AAR?$AAx?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x18
	DCD	0x4
	DCD	0x5
	EXPORT	|DllMain|
	IMPORT	|DisableThreadLibraryCalls|
	IMPORT	|RegisterDbgZones|

  00000			 AREA	 |.pdata|, PDATA
|$T43531| DCD	|$LN8@DllMain|
	DCD	0x40001404
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\hdq\hdq.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DllMain| PROC

; 210  : {

  00000		 |$LN8@DllMain|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M43528|

; 211  :     switch (reason) {

  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e3530001	 cmp         r3, #1
  00018	0a000000	 beq         |$LN1@DllMain|
  0001c	ea000004	 b           |$LN2@DllMain|
  00020		 |$LN1@DllMain|

; 212  :     case DLL_PROCESS_ATTACH:
; 213  :         DEBUGREGISTER(hDLL);

  00020	e59f1024	 ldr         r1, [pc, #0x24]
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          RegisterDbgZones

; 214  :         DisableThreadLibraryCalls((HMODULE)hDLL);

  0002c	e59d000c	 ldr         r0, [sp, #0xC]
  00030	eb000000	 bl          DisableThreadLibraryCalls
  00034		 |$LN2@DllMain|

; 215  :         break;
; 216  :     }
; 217  :     return TRUE;

  00034	e3a03001	 mov         r3, #1
  00038	e58d3000	 str         r3, [sp]

; 218  : }

  0003c	e59d0000	 ldr         r0, [sp]
  00040	e28dd004	 add         sp, sp, #4
  00044	e89d6000	 ldmia       sp, {sp, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$LN9@DllMain|
  0004c		 |$LN10@DllMain|
  0004c	00000000	 DCD         |dpCurSettings|
  00050		 |$M43529|

			 ENDP  ; |DllMain|

	EXPORT	|??_C@_1GC@KPBDKADH@?$AA?9?$AA?9?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAH?$AAD?$AAQ?$AA?5?$AAp?$AAo?$AAw@| [ DATA ] ; `string'
	EXPORT	|HDQ_Deinit|
	EXPORT	|bDumpOmapHdqRegs|
	EXPORT	|??_C@_1FE@NDGMMIEK@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAO?$AAM?$AAA?$AAP?$AA?5?$AAH?$AAD?$AAQ?$AA?5?$AAm?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@NIFBDGAK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@EMLNJMED@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HK@KKEFJMCD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAH?$AAD?$AAQ?$AA?1@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@DNKNIELJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAH?$AAD?$AAQ?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@KNEONKGA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAP@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@KICBKBMF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAp?$AAa?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@KFDBANDB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAH?$AAD?$AAQ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IA@OEGOGHJG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?$CF?$AAl?$AAu?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@CKFFDCLA@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CF?$AAs?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|HDQ_Init|
	IMPORT	|InterruptInitialize|
	IMPORT	|CreateEventW|
	IMPORT	|KernelIoControl|
	IMPORT	|MmMapIoSpace|
	IMPORT	|SetDevicePowerState|
	IMPORT	|CreateBusAccessHandle|
	IMPORT	|GetDeviceRegistryParams|
	IMPORT	|InitializeCriticalSection|
	IMPORT	|GetLastError|
	IMPORT	|LocalAlloc|
	IMPORT	|NKDbgPrintfW|

  00008			 AREA	 |.pdata|, PDATA
|$T43563| DCD	|$LN36@HDQ_Init|
	DCD	0x40017304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@KPBDKADH@?$AA?9?$AA?9?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAH?$AAD?$AAQ?$AA?5?$AAp?$AAo?$AAw@| DCB "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, "r"
	DCB	0x0, "c", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, " ", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, " ", 0x0, "p", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "i", 0x0, "s"
	DCB	0x0, " ", 0x0, "O", 0x0, "F", 0x0, "F", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, "w", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@NDGMMIEK@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAO?$AAM?$AAA?$AAP?$AA?5?$AAH?$AAD?$AAQ?$AA?5?$AAm?$AAo@| DCB 0x9
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "s", 0x0, "e", 0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "O", 0x0, "M", 0x0, "A", 0x0, "P"
	DCB	0x0, " ", 0x0, "H", 0x0, "D", 0x0, "Q", 0x0, " ", 0x0, "m"
	DCB	0x0, "o", 0x0, "d", 0x0, "u", 0x0, "l", 0x0, "e", 0x0, "."
	DCB	0x0, ".", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@NIFBDGAK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@EMLNJMED@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAi@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "c"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, " ", 0x0, "e", 0x0, "v"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@KKEFJMCD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAH?$AAD?$AAQ?$AA?1@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "m"
	DCB	0x0, "a", 0x0, "p", 0x0, " ", 0x0, "H", 0x0, "D", 0x0, "Q"
	DCB	0x0, "/", 0x0, "1", 0x0, "W", 0x0, "I", 0x0, "R", 0x0, "E"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@DNKNIELJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAH?$AAD?$AAQ?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "m"
	DCB	0x0, "a", 0x0, "p", 0x0, " ", 0x0, "H", 0x0, "D", 0x0, "Q"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@KNEONKGA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAP@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, " "
	DCB	0x0, "P", 0x0, "R", 0x0, "C", 0x0, "M", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "s", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@KICBKBMF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAp?$AAa?$AAr@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "o"
	DCB	0x0, "p", 0x0, "e", 0x0, "n", 0x0, " ", 0x0, "p", 0x0, "a"
	DCB	0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "s", 0x0, " ", 0x0, "d", 0x0, "r", 0x0, "i"
	DCB	0x0, "v", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@KFDBANDB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAH?$AAD?$AAQ@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "H", 0x0, "D"
	DCB	0x0, "Q", 0x0, " ", 0x0, "d", 0x0, "r", 0x0, "i", 0x0, "v"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "r", 0x0, "y", 0x0, " "
	DCB	0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IA@OEGOGHJG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?$CF?$AAl?$AAu?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "%"
	DCB	0x0, "l", 0x0, "u", 0x0, ":", 0x0, " ", 0x0, "H", 0x0, "D"
	DCB	0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "r"
	DCB	0x0, "u", 0x0, "c", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@CKFFDCLA@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CF?$AAs?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "(", 0x0, "%", 0x0, "s", 0x0, ","
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00050			 AREA	 |.text|, CODE, ARM

  00050		 |HDQ_Init| PROC

; 228  : {

  00050		 |$LN36@HDQ_Init|
  00050	e1a0c00d	 mov         r12, sp
  00054	e92d0003	 stmdb       sp!, {r0, r1}
  00058	e92d5000	 stmdb       sp!, {r12, lr}
  0005c	e24dd080	 sub         sp, sp, #0x80
  00060		 |$M43560|

; 229  :     DWORD rc=(DWORD)NULL;

  00060	e3a03000	 mov         r3, #0
  00064	e58d300c	 str         r3, [sp, #0xC]

; 230  :     HDQ_DEVICE* pDevice=NULL;

  00068	e3a03000	 mov         r3, #0
  0006c	e58d3008	 str         r3, [sp, #8]

; 231  :     PHYSICAL_ADDRESS pa;
; 232  :     int i=0;

  00070	e3a03000	 mov         r3, #0
  00074	e58d3010	 str         r3, [sp, #0x10]

; 233  : 
; 234  :     DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_FUNCTION, (L"+HDQ_Init(%s, 0x%08x)\r\n", szContext, pBusContext));

  00078	e59f3564	 ldr         r3, [pc, #0x564]
  0007c	e5933440	 ldr         r3, [r3, #0x440]
  00080	e2032a01	 and         r2, r3, #1, 20
  00084	e59f3558	 ldr         r3, [pc, #0x558]
  00088	e5933440	 ldr         r3, [r3, #0x440]
  0008c	e2033004	 and         r3, r3, #4
  00090	e1923003	 orrs        r3, r2, r3
  00094	0a000006	 beq         |$LN12@HDQ_Init|
  00098	e59d208c	 ldr         r2, [sp, #0x8C]
  0009c	e59d1088	 ldr         r1, [sp, #0x88]
  000a0	e59f0570	 ldr         r0, [pc, #0x570]
  000a4	eb000000	 bl          NKDbgPrintfW
  000a8	e3a03001	 mov         r3, #1
  000ac	e58d302c	 str         r3, [sp, #0x2C]
  000b0	ea000001	 b           |$LN13@HDQ_Init|
  000b4		 |$LN12@HDQ_Init|
  000b4	e3a03000	 mov         r3, #0
  000b8	e58d302c	 str         r3, [sp, #0x2C]
  000bc		 |$LN13@HDQ_Init|

; 235  : 
; 236  : // Create device structure
; 237  :     pDevice=(HDQ_DEVICE*)LocalAlloc(LPTR, sizeof(HDQ_DEVICE));

  000bc	e3a01050	 mov         r1, #0x50
  000c0	e3a00040	 mov         r0, #0x40
  000c4	eb000000	 bl          LocalAlloc
  000c8	e58d0030	 str         r0, [sp, #0x30]
  000cc	e59d3030	 ldr         r3, [sp, #0x30]
  000d0	e58d3008	 str         r3, [sp, #8]

; 238  :     if(pDevice==NULL)

  000d4	e59d3008	 ldr         r3, [sp, #8]
  000d8	e3530000	 cmp         r3, #0
  000dc	1a000010	 bne         |$LN9@HDQ_Init|

; 239  :     {
; 240  :         DWORD dwEr=GetLastError();

  000e0	eb000000	 bl          GetLastError
  000e4	e58d0034	 str         r0, [sp, #0x34]
  000e8	e59d3034	 ldr         r3, [sp, #0x34]
  000ec	e58d301c	 str         r3, [sp, #0x1C]

; 241  :         DEBUGMSG(ZONE_ERROR, (L"ERROR %lu: HDQ_Init: "
; 242  :             L"Failed allocate HDQ controller structure\r\n",dwEr
; 243  :         ));

  000f0	e59f34ec	 ldr         r3, [pc, #0x4EC]
  000f4	e5933440	 ldr         r3, [r3, #0x440]
  000f8	e3130001	 tst         r3, #1
  000fc	0a000005	 beq         |$LN14@HDQ_Init|
  00100	e59d101c	 ldr         r1, [sp, #0x1C]
  00104	e59f0508	 ldr         r0, [pc, #0x508]
  00108	eb000000	 bl          NKDbgPrintfW
  0010c	e3a03001	 mov         r3, #1
  00110	e58d3038	 str         r3, [sp, #0x38]
  00114	ea000001	 b           |$LN15@HDQ_Init|
  00118		 |$LN14@HDQ_Init|
  00118	e3a03000	 mov         r3, #0
  0011c	e58d3038	 str         r3, [sp, #0x38]
  00120		 |$LN15@HDQ_Init|

; 244  :         goto cleanUp;

  00120	ea000113	 b           |$cleanUp$42905|
  00124		 |$LN9@HDQ_Init|

; 245  :     };
; 246  : 
; 247  : // Set cookie
; 248  :     pDevice->cookie=HDQ_DEVICE_COOKIE;

  00124	e59d2008	 ldr         r2, [sp, #8]
  00128	e59f34e0	 ldr         r3, [pc, #0x4E0]
  0012c	e5823000	 str         r3, [r2]

; 249  : 
; 250  : // Initalize critical section
; 251  :     InitializeCriticalSection(&pDevice->cs);

  00130	e59d3008	 ldr         r3, [sp, #8]
  00134	e283002c	 add         r0, r3, #0x2C
  00138	eb000000	 bl          InitializeCriticalSection

; 252  : 
; 253  : // Read device parameters
; 254  :     if(GetDeviceRegistryParams(szContext, pDevice, 
; 255  :             dimof(g_deviceRegParams), g_deviceRegParams) != ERROR_SUCCESS)

  0013c	e59f34c8	 ldr         r3, [pc, #0x4C8]
  00140	e3a02006	 mov         r2, #6
  00144	e59d1008	 ldr         r1, [sp, #8]
  00148	e59d0088	 ldr         r0, [sp, #0x88]
  0014c	eb000000	 bl          GetDeviceRegistryParams
  00150	e58d003c	 str         r0, [sp, #0x3C]
  00154	e59d303c	 ldr         r3, [sp, #0x3C]
  00158	e3530000	 cmp         r3, #0
  0015c	0a00000b	 beq         |$LN8@HDQ_Init|

; 256  :     {
; 257  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: HDQ_Init: "
; 258  :             L"Failed read HDQ driver registry parameters\r\n"
; 259  :         ));

  00160	e59f347c	 ldr         r3, [pc, #0x47C]
  00164	e5933440	 ldr         r3, [r3, #0x440]
  00168	e3130001	 tst         r3, #1
  0016c	0a000004	 beq         |$LN16@HDQ_Init|
  00170	e59f0490	 ldr         r0, [pc, #0x490]
  00174	eb000000	 bl          NKDbgPrintfW
  00178	e3a03001	 mov         r3, #1
  0017c	e58d3040	 str         r3, [sp, #0x40]
  00180	ea000001	 b           |$LN17@HDQ_Init|
  00184		 |$LN16@HDQ_Init|
  00184	e3a03000	 mov         r3, #0
  00188	e58d3040	 str         r3, [sp, #0x40]
  0018c		 |$LN17@HDQ_Init|

; 260  :         goto cleanUp;

  0018c	ea0000f8	 b           |$cleanUp$42905|
  00190		 |$LN8@HDQ_Init|

; 261  :     };
; 262  : 
; 263  : // Open parent bus
; 264  :     pDevice->hParentBus=CreateBusAccessHandle(szContext);

  00190	e59d0088	 ldr         r0, [sp, #0x88]
  00194	eb000000	 bl          CreateBusAccessHandle
  00198	e58d0044	 str         r0, [sp, #0x44]
  0019c	e59d3008	 ldr         r3, [sp, #8]
  001a0	e2832024	 add         r2, r3, #0x24
  001a4	e59d3044	 ldr         r3, [sp, #0x44]
  001a8	e5823000	 str         r3, [r2]

; 265  :     if(pDevice->hParentBus==NULL)

  001ac	e59d3008	 ldr         r3, [sp, #8]
  001b0	e2833024	 add         r3, r3, #0x24
  001b4	e5933000	 ldr         r3, [r3]
  001b8	e3530000	 cmp         r3, #0
  001bc	1a00000b	 bne         |$LN7@HDQ_Init|

; 266  :     {
; 267  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: HDQ_Init: "
; 268  :             L"Failed open parent bus driver\r\n"
; 269  :         ));

  001c0	e59f341c	 ldr         r3, [pc, #0x41C]
  001c4	e5933440	 ldr         r3, [r3, #0x440]
  001c8	e3130001	 tst         r3, #1
  001cc	0a000004	 beq         |$LN18@HDQ_Init|
  001d0	e59f042c	 ldr         r0, [pc, #0x42C]
  001d4	eb000000	 bl          NKDbgPrintfW
  001d8	e3a03001	 mov         r3, #1
  001dc	e58d3048	 str         r3, [sp, #0x48]
  001e0	ea000001	 b           |$LN19@HDQ_Init|
  001e4		 |$LN18@HDQ_Init|
  001e4	e3a03000	 mov         r3, #0
  001e8	e58d3048	 str         r3, [sp, #0x48]
  001ec		 |$LN19@HDQ_Init|

; 270  :         goto cleanUp;

  001ec	ea0000e0	 b           |$cleanUp$42905|
  001f0		 |$LN7@HDQ_Init|

; 271  :     };
; 272  : 
; 273  : // Set hardware to full power
; 274  :     SetDevicePowerState(pDevice->hParentBus, D0, NULL);

  001f0	e3a02000	 mov         r2, #0
  001f4	e3a01000	 mov         r1, #0
  001f8	e59d3008	 ldr         r3, [sp, #8]
  001fc	e2833024	 add         r3, r3, #0x24
  00200	e5930000	 ldr         r0, [r3]
  00204	eb000000	 bl          SetDevicePowerState

; 275  : 
; 276  : // Map the PRCM registers
; 277  :     pa.LowPart=OMAP2420_PRCM_REGS_PA;

  00208	e3a03312	 mov         r3, #0x12, 6
  0020c	e3833902	 orr         r3, r3, #2, 18
  00210	e58d3014	 str         r3, [sp, #0x14]

; 278  :     pDevice->pPRCMRegs=(OMAP2420_PRCM_REGS*)MmMapIoSpace(pa,
; 279  :         sizeof(OMAP2420_PRCM_REGS), FALSE);

  00214	e3a03000	 mov         r3, #0
  00218	e3a02c09	 mov         r2, #9, 24
  0021c	e59d0014	 ldr         r0, [sp, #0x14]
  00220	e59d1018	 ldr         r1, [sp, #0x18]
  00224	eb000000	 bl          MmMapIoSpace
  00228	e58d004c	 str         r0, [sp, #0x4C]
  0022c	e59d3008	 ldr         r3, [sp, #8]
  00230	e283201c	 add         r2, r3, #0x1C
  00234	e59d304c	 ldr         r3, [sp, #0x4C]
  00238	e5823000	 str         r3, [r2]

; 280  :     if(pDevice->pPRCMRegs==NULL)

  0023c	e59d3008	 ldr         r3, [sp, #8]
  00240	e283301c	 add         r3, r3, #0x1C
  00244	e5933000	 ldr         r3, [r3]
  00248	e3530000	 cmp         r3, #0
  0024c	1a00000b	 bne         |$LN6@HDQ_Init|

; 281  :     {
; 282  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: HDQ_Init: "
; 283  :             L"Failed to map PRCM registers\n"
; 284  :         ));

  00250	e59f338c	 ldr         r3, [pc, #0x38C]
  00254	e5933440	 ldr         r3, [r3, #0x440]
  00258	e3130001	 tst         r3, #1
  0025c	0a000004	 beq         |$LN20@HDQ_Init|
  00260	e59f0398	 ldr         r0, [pc, #0x398]
  00264	eb000000	 bl          NKDbgPrintfW
  00268	e3a03001	 mov         r3, #1
  0026c	e58d3050	 str         r3, [sp, #0x50]
  00270	ea000001	 b           |$LN21@HDQ_Init|
  00274		 |$LN20@HDQ_Init|
  00274	e3a03000	 mov         r3, #0
  00278	e58d3050	 str         r3, [sp, #0x50]
  0027c		 |$LN21@HDQ_Init|

; 285  :         goto cleanUp;

  0027c	ea0000bc	 b           |$cleanUp$42905|
  00280		 |$LN6@HDQ_Init|

; 286  :     };
; 287  : 
; 288  : // Map the HDQ registers
; 289  :     pa.QuadPart=pDevice->memBase;

  00280	e59d3008	 ldr         r3, [sp, #8]
  00284	e2833004	 add         r3, r3, #4
  00288	e5933000	 ldr         r3, [r3]
  0028c	e58d3014	 str         r3, [sp, #0x14]
  00290	e3a03000	 mov         r3, #0
  00294	e58d3018	 str         r3, [sp, #0x18]

; 290  :     pDevice->pHDQRegs=(OMAP2420_HDQ_REGS*)MmMapIoSpace(pa, 
; 291  :         sizeof(OMAP2420_HDQ_REGS), FALSE);

  00298	e3a03000	 mov         r3, #0
  0029c	e3a0201c	 mov         r2, #0x1C
  002a0	e59d0014	 ldr         r0, [sp, #0x14]
  002a4	e59d1018	 ldr         r1, [sp, #0x18]
  002a8	eb000000	 bl          MmMapIoSpace
  002ac	e58d0054	 str         r0, [sp, #0x54]
  002b0	e59d3008	 ldr         r3, [sp, #8]
  002b4	e2832020	 add         r2, r3, #0x20
  002b8	e59d3054	 ldr         r3, [sp, #0x54]
  002bc	e5823000	 str         r3, [r2]

; 292  :     if(pDevice->pHDQRegs==NULL)

  002c0	e59d3008	 ldr         r3, [sp, #8]
  002c4	e2833020	 add         r3, r3, #0x20
  002c8	e5933000	 ldr         r3, [r3]
  002cc	e3530000	 cmp         r3, #0
  002d0	1a00000b	 bne         |$LN5@HDQ_Init|

; 293  :     {
; 294  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: HDQ_Init: "
; 295  :             L"Failed map HDQ controller registers\r\n"
; 296  :         ));

  002d4	e59f3308	 ldr         r3, [pc, #0x308]
  002d8	e5933440	 ldr         r3, [r3, #0x440]
  002dc	e3130001	 tst         r3, #1
  002e0	0a000004	 beq         |$LN22@HDQ_Init|
  002e4	e59f0310	 ldr         r0, [pc, #0x310]
  002e8	eb000000	 bl          NKDbgPrintfW
  002ec	e3a03001	 mov         r3, #1
  002f0	e58d3058	 str         r3, [sp, #0x58]
  002f4	ea000001	 b           |$LN23@HDQ_Init|
  002f8		 |$LN22@HDQ_Init|
  002f8	e3a03000	 mov         r3, #0
  002fc	e58d3058	 str         r3, [sp, #0x58]
  00300		 |$LN23@HDQ_Init|

; 297  :         goto cleanUp;

  00300	ea00009b	 b           |$cleanUp$42905|
  00304		 |$LN5@HDQ_Init|

; 298  :     };
; 299  : 
; 300  : // Map HDQ_1WIRE interrupt
; 301  :     if(KernelIoControl(IOCTL_HAL_REQUEST_SYSINTR, &pDevice->irq, 
; 302  :         sizeof(pDevice->irq), &pDevice->sysIntr,
; 303  :         sizeof(pDevice->sysIntr), NULL)==0)

  00304	e3a03000	 mov         r3, #0
  00308	e58d3004	 str         r3, [sp, #4]
  0030c	e3a03004	 mov         r3, #4
  00310	e58d3000	 str         r3, [sp]
  00314	e59d3008	 ldr         r3, [sp, #8]
  00318	e2833040	 add         r3, r3, #0x40
  0031c	e3a02004	 mov         r2, #4
  00320	e59d1008	 ldr         r1, [sp, #8]
  00324	e281100c	 add         r1, r1, #0xC
  00328	e59f02c8	 ldr         r0, [pc, #0x2C8]
  0032c	eb000000	 bl          KernelIoControl
  00330	e58d005c	 str         r0, [sp, #0x5C]
  00334	e59d305c	 ldr         r3, [sp, #0x5C]
  00338	e3530000	 cmp         r3, #0
  0033c	1a00000b	 bne         |$LN4@HDQ_Init|

; 304  :     {
; 305  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: HDQ_Init: "
; 306  :             L"Failed map HDQ/1WIRE controller interrupt\r\n"
; 307  :         ));

  00340	e59f329c	 ldr         r3, [pc, #0x29C]
  00344	e5933440	 ldr         r3, [r3, #0x440]
  00348	e3130001	 tst         r3, #1
  0034c	0a000004	 beq         |$LN24@HDQ_Init|
  00350	e59f029c	 ldr         r0, [pc, #0x29C]
  00354	eb000000	 bl          NKDbgPrintfW
  00358	e3a03001	 mov         r3, #1
  0035c	e58d3060	 str         r3, [sp, #0x60]
  00360	ea000001	 b           |$LN25@HDQ_Init|
  00364		 |$LN24@HDQ_Init|
  00364	e3a03000	 mov         r3, #0
  00368	e58d3060	 str         r3, [sp, #0x60]
  0036c		 |$LN25@HDQ_Init|

; 308  :         goto cleanUp;

  0036c	ea000080	 b           |$cleanUp$42905|
  00370		 |$LN4@HDQ_Init|

; 309  :     };
; 310  : 
; 311  : // Create interrupt event
; 312  :     pDevice->hIntrEvent=CreateEvent(NULL, FALSE, FALSE, NULL);

  00370	e3a03000	 mov         r3, #0
  00374	e3a02000	 mov         r2, #0
  00378	e3a01000	 mov         r1, #0
  0037c	e3a00000	 mov         r0, #0
  00380	eb000000	 bl          CreateEventW
  00384	e58d0064	 str         r0, [sp, #0x64]
  00388	e59d3008	 ldr         r3, [sp, #8]
  0038c	e2832044	 add         r2, r3, #0x44
  00390	e59d3064	 ldr         r3, [sp, #0x64]
  00394	e5823000	 str         r3, [r2]

; 313  :     if(pDevice->hIntrEvent==NULL)

  00398	e59d3008	 ldr         r3, [sp, #8]
  0039c	e2833044	 add         r3, r3, #0x44
  003a0	e5933000	 ldr         r3, [r3]
  003a4	e3530000	 cmp         r3, #0
  003a8	1a00000b	 bne         |$LN3@HDQ_Init|

; 314  :     {
; 315  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: HDQ_Init: "
; 316  :             L"Failed create interrupt event\r\n"
; 317  :         ));

  003ac	e59f3230	 ldr         r3, [pc, #0x230]
  003b0	e5933440	 ldr         r3, [r3, #0x440]
  003b4	e3130001	 tst         r3, #1
  003b8	0a000004	 beq         |$LN26@HDQ_Init|
  003bc	e59f022c	 ldr         r0, [pc, #0x22C]
  003c0	eb000000	 bl          NKDbgPrintfW
  003c4	e3a03001	 mov         r3, #1
  003c8	e58d3068	 str         r3, [sp, #0x68]
  003cc	ea000001	 b           |$LN27@HDQ_Init|
  003d0		 |$LN26@HDQ_Init|
  003d0	e3a03000	 mov         r3, #0
  003d4	e58d3068	 str         r3, [sp, #0x68]
  003d8		 |$LN27@HDQ_Init|

; 318  :         goto cleanUp;

  003d8	ea000065	 b           |$cleanUp$42905|
  003dc		 |$LN3@HDQ_Init|

; 319  :     };
; 320  : 
; 321  : // Initialize interrupt
; 322  :     if(InterruptInitialize(pDevice->sysIntr, 
; 323  :         pDevice->hIntrEvent, NULL, 0)==0)

  003dc	e3a03000	 mov         r3, #0
  003e0	e3a02000	 mov         r2, #0
  003e4	e59d1008	 ldr         r1, [sp, #8]
  003e8	e2811044	 add         r1, r1, #0x44
  003ec	e5911000	 ldr         r1, [r1]
  003f0	e59d0008	 ldr         r0, [sp, #8]
  003f4	e2800040	 add         r0, r0, #0x40
  003f8	e5900000	 ldr         r0, [r0]
  003fc	eb000000	 bl          InterruptInitialize
  00400	e58d006c	 str         r0, [sp, #0x6C]
  00404	e59d306c	 ldr         r3, [sp, #0x6C]
  00408	e3530000	 cmp         r3, #0
  0040c	1a00000b	 bne         |$LN2@HDQ_Init|

; 324  :     {
; 325  :         DEBUGMSG (ZONE_ERROR, (L"ERROR: HDQ_Init: "
; 326  :             L"InterruptInitialize failed\r\n"
; 327  :         ));

  00410	e59f31cc	 ldr         r3, [pc, #0x1CC]
  00414	e5933440	 ldr         r3, [r3, #0x440]
  00418	e3130001	 tst         r3, #1
  0041c	0a000004	 beq         |$LN28@HDQ_Init|
  00420	e59f01c4	 ldr         r0, [pc, #0x1C4]
  00424	eb000000	 bl          NKDbgPrintfW
  00428	e3a03001	 mov         r3, #1
  0042c	e58d3070	 str         r3, [sp, #0x70]
  00430	ea000001	 b           |$LN29@HDQ_Init|
  00434		 |$LN28@HDQ_Init|
  00434	e3a03000	 mov         r3, #0
  00438	e58d3070	 str         r3, [sp, #0x70]
  0043c		 |$LN29@HDQ_Init|

; 328  :         goto cleanUp;

  0043c	ea00004c	 b           |$cleanUp$42905|
  00440		 |$LN2@HDQ_Init|

; 329  :     };
; 330  : 
; 331  :     DEBUGMSG(ZONE_ERROR, (L"\tHDQ_Init: "
; 332  :         L"Resetting OMAP HDQ module...\r\n"
; 333  :     ));

  00440	e59f319c	 ldr         r3, [pc, #0x19C]
  00444	e5933440	 ldr         r3, [r3, #0x440]
  00448	e3130001	 tst         r3, #1
  0044c	0a000004	 beq         |$LN30@HDQ_Init|
  00450	e59f0190	 ldr         r0, [pc, #0x190]
  00454	eb000000	 bl          NKDbgPrintfW
  00458	e3a03001	 mov         r3, #1
  0045c	e58d3074	 str         r3, [sp, #0x74]
  00460	ea000001	 b           |$LN31@HDQ_Init|
  00464		 |$LN30@HDQ_Init|
  00464	e3a03000	 mov         r3, #0
  00468	e58d3074	 str         r3, [sp, #0x74]
  0046c		 |$LN31@HDQ_Init|

; 334  : // reset the hdq device
; 335  : /*  SETREG32(&pDevice->pHDQRegs->ulHDQ_SYSCONFIG,HDQ_SYSCONFIG_SOFTRESET);
; 336  : // wait for the reset to be completed
; 337  :     for(; i<50; i++)
; 338  :     {
; 339  :         Sleep(10);
; 340  :         if( INREG32(&pDevice->pHDQRegs->ulHDQ_SYSSTATUS) & HDQ_SYSSTATUS_RESETDONE)
; 341  :         break;
; 342  :     };
; 343  :     if(i>=50)
; 344  :         DEBUGMSG(ZONE_HDQ_1WIRE, (L"\tHDQ_Init: "
; 345  :             L"Reset of OMAP HDQ module failed !!\r\n"
; 346  :         ));
; 347  :     else
; 348  :         DEBUGMSG(ZONE_HDQ_1WIRE, (L"\tHDQ_Init: "
; 349  :             L"Reset of OMAP HDQ module done. Dur=%ld\r\n", i*10
; 350  :         ));
; 351  : */
; 352  : // set the HDQ mode of operation - it is the default for OMAP HDQ, but must be sure
; 353  :     CLRREG32(&pDevice->pHDQRegs->ulHDQ_CTRL_STATUS,HDQ_CTRL_STATUS_1_WIRE_SINGLE_BIT);

  0046c	e59d3008	 ldr         r3, [sp, #8]
  00470	e2833020	 add         r3, r3, #0x20
  00474	e5933000	 ldr         r3, [r3]
  00478	e283300c	 add         r3, r3, #0xC
  0047c	e5932000	 ldr         r2, [r3]
  00480	e3e03080	 mvn         r3, #0x80
  00484	e0022003	 and         r2, r2, r3
  00488	e59d3008	 ldr         r3, [sp, #8]
  0048c	e2833020	 add         r3, r3, #0x20
  00490	e5933000	 ldr         r3, [r3]
  00494	e283300c	 add         r3, r3, #0xC
  00498	e5832000	 str         r2, [r3]

; 354  : // Enable the clock and set the mode
; 355  :     SETREG32(&pDevice->pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_CLOCKENABLE);

  0049c	e59d3008	 ldr         r3, [sp, #8]
  004a0	e2833020	 add         r3, r3, #0x20
  004a4	e5933000	 ldr         r3, [r3]
  004a8	e283300c	 add         r3, r3, #0xC
  004ac	e5933000	 ldr         r3, [r3]
  004b0	e3832020	 orr         r2, r3, #0x20
  004b4	e59d3008	 ldr         r3, [sp, #8]
  004b8	e2833020	 add         r3, r3, #0x20
  004bc	e5933000	 ldr         r3, [r3]
  004c0	e283300c	 add         r3, r3, #0xC
  004c4	e5832000	 str         r2, [r3]

; 356  :     CLRREG32(&pDevice->pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_MODE);

  004c8	e59d3008	 ldr         r3, [sp, #8]
  004cc	e2833020	 add         r3, r3, #0x20
  004d0	e5933000	 ldr         r3, [r3]
  004d4	e283300c	 add         r3, r3, #0xC
  004d8	e5932000	 ldr         r2, [r3]
  004dc	e3e03001	 mvn         r3, #1
  004e0	e0022003	 and         r2, r2, r3
  004e4	e59d3008	 ldr         r3, [sp, #8]
  004e8	e2833020	 add         r3, r3, #0x20
  004ec	e5933000	 ldr         r3, [r3]
  004f0	e283300c	 add         r3, r3, #0xC
  004f4	e5832000	 str         r2, [r3]

; 357  :     pDevice->mode=HDQ_MODE_HDQ8;

  004f8	e59d3008	 ldr         r3, [sp, #8]
  004fc	e2832048	 add         r2, r3, #0x48
  00500	e3a03000	 mov         r3, #0
  00504	e5823000	 str         r3, [r2]

; 358  : 
; 359  : // Clear and enable interrupts
; 360  :     INREG32(&pDevice->pHDQRegs->ulHDQ_INT_STATUS);

  00508	e59d3008	 ldr         r3, [sp, #8]
  0050c	e2833020	 add         r3, r3, #0x20
  00510	e5933000	 ldr         r3, [r3]
  00514	e2833010	 add         r3, r3, #0x10
  00518	e5933000	 ldr         r3, [r3]
  0051c	e58d3078	 str         r3, [sp, #0x78]

; 361  :     SETREG32(&pDevice->pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_INTERRUPTMASK);

  00520	e59d3008	 ldr         r3, [sp, #8]
  00524	e2833020	 add         r3, r3, #0x20
  00528	e5933000	 ldr         r3, [r3]
  0052c	e283300c	 add         r3, r3, #0xC
  00530	e5933000	 ldr         r3, [r3]
  00534	e3832040	 orr         r2, r3, #0x40
  00538	e59d3008	 ldr         r3, [sp, #8]
  0053c	e2833020	 add         r3, r3, #0x20
  00540	e5933000	 ldr         r3, [r3]
  00544	e283300c	 add         r3, r3, #0xC
  00548	e5832000	 str         r2, [r3]

; 362  : 
; 363  : // Set hardware to power-off
; 364  :     SetDevicePowerState(pDevice->hParentBus, D4, NULL);

  0054c	e3a02000	 mov         r2, #0
  00550	e3a01004	 mov         r1, #4
  00554	e59d3008	 ldr         r3, [sp, #8]
  00558	e2833024	 add         r3, r3, #0x24
  0055c	e5930000	 ldr         r0, [r3]
  00560	eb000000	 bl          SetDevicePowerState

; 365  : 
; 366  : // Return non-null value - hdq init completed successfully
; 367  :     rc=(DWORD)pDevice;

  00564	e59d3008	 ldr         r3, [sp, #8]
  00568	e58d300c	 str         r3, [sp, #0xC]

; 368  : // sr dump hdq registers
; 369  :     bDumpOmapHdqRegs(pDevice);

  0056c	e59d0008	 ldr         r0, [sp, #8]
  00570	eb000000	 bl          bDumpOmapHdqRegs
  00574		 |$cleanUp$42905|

; 370  : cleanUp:
; 371  :     if(rc==0)

  00574	e59d300c	 ldr         r3, [sp, #0xC]
  00578	e3530000	 cmp         r3, #0
  0057c	1a000001	 bne         |$LN1@HDQ_Init|

; 372  :     {
; 373  :         HDQ_Deinit((DWORD)pDevice);

  00580	e59d0008	 ldr         r0, [sp, #8]
  00584	eb000000	 bl          HDQ_Deinit
  00588		 |$LN1@HDQ_Init|

; 374  :     };    
; 375  :     DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_FUNCTION, (L"---HDQ_Init(rc=0x%x) and HDQ power is OFF now.\r\n", rc));

  00588	e59f3054	 ldr         r3, [pc, #0x54]
  0058c	e5933440	 ldr         r3, [r3, #0x440]
  00590	e2032a01	 and         r2, r3, #1, 20
  00594	e59f3048	 ldr         r3, [pc, #0x48]
  00598	e5933440	 ldr         r3, [r3, #0x440]
  0059c	e2033004	 and         r3, r3, #4
  005a0	e1923003	 orrs        r3, r2, r3
  005a4	0a000005	 beq         |$LN32@HDQ_Init|
  005a8	e59d100c	 ldr         r1, [sp, #0xC]
  005ac	e59f002c	 ldr         r0, [pc, #0x2C]
  005b0	eb000000	 bl          NKDbgPrintfW
  005b4	e3a03001	 mov         r3, #1
  005b8	e58d307c	 str         r3, [sp, #0x7C]
  005bc	ea000001	 b           |$LN33@HDQ_Init|
  005c0		 |$LN32@HDQ_Init|
  005c0	e3a03000	 mov         r3, #0
  005c4	e58d307c	 str         r3, [sp, #0x7C]
  005c8		 |$LN33@HDQ_Init|

; 376  :     return rc;

  005c8	e59d300c	 ldr         r3, [sp, #0xC]
  005cc	e58d3028	 str         r3, [sp, #0x28]

; 377  : }

  005d0	e59d0028	 ldr         r0, [sp, #0x28]
  005d4	e28dd080	 add         sp, sp, #0x80
  005d8	e89d6000	 ldmia       sp, {sp, lr}
  005dc	e12fff1e	 bx          lr
  005e0		 |$LN37@HDQ_Init|
  005e0		 |$LN38@HDQ_Init|
  005e0	00000000	 DCD         |??_C@_1GC@KPBDKADH@?$AA?9?$AA?9?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAH?$AAD?$AAQ?$AA?5?$AAp?$AAo?$AAw@|
  005e4		 |$LN39@HDQ_Init|
  005e4	00000000	 DCD         |dpCurSettings|
  005e8		 |$LN40@HDQ_Init|
  005e8	00000000	 DCD         |??_C@_1FE@NDGMMIEK@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAO?$AAM?$AAA?$AAP?$AA?5?$AAH?$AAD?$AAQ?$AA?5?$AAm?$AAo@|
  005ec		 |$LN41@HDQ_Init|
  005ec	00000000	 DCD         |??_C@_1FM@NIFBDGAK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa@|
  005f0		 |$LN42@HDQ_Init|
  005f0	00000000	 DCD         |??_C@_1GC@EMLNJMED@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAi@|
  005f4		 |$LN43@HDQ_Init|
  005f4	00000000	 DCD         |??_C@_1HK@KKEFJMCD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAH?$AAD?$AAQ?$AA?1@|
  005f8		 |$LN44@HDQ_Init|
  005f8	01010098	 DCD         0x1010098
  005fc		 |$LN45@HDQ_Init|
  005fc	00000000	 DCD         |??_C@_1GO@DNKNIELJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAH?$AAD?$AAQ?$AA?5@|
  00600		 |$LN46@HDQ_Init|
  00600	00000000	 DCD         |??_C@_1FO@KNEONKGA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAP@|
  00604		 |$LN47@HDQ_Init|
  00604	00000000	 DCD         |??_C@_1GC@KICBKBMF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAp?$AAa?$AAr@|
  00608		 |$LN48@HDQ_Init|
  00608	00000000	 DCD         |??_C@_1HM@KFDBANDB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAH?$AAD?$AAQ@|
  0060c		 |$LN49@HDQ_Init|
  0060c	00000000	 DCD         |g_deviceRegParams|
  00610		 |$LN50@HDQ_Init|
  00610	68647144	 DCD         0x68647144
  00614		 |$LN51@HDQ_Init|
  00614	00000000	 DCD         |??_C@_1IA@OEGOGHJG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?$CF?$AAl?$AAu?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo@|
  00618		 |$LN52@HDQ_Init|
  00618	00000000	 DCD         |??_C@_1DA@CKFFDCLA@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CF?$AAs?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0061c		 |$M43561|

			 ENDP  ; |HDQ_Init|

	EXPORT	|??_C@_1DA@HFPOJGEL@?$AA?9?$AA?9?$AA?9?$AAb?$AAD?$AAu?$AAm?$AAp?$AAO?$AAm?$AAa?$AAp?$AAH?$AAd?$AAq?$AAR?$AAe?$AAg?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@DBBGOBFC@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAY?$AAS?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?$DN?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AAh?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@KHPMIHJB@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?$DN?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AAh?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@GOKHFAEF@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAN?$AAT?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?$DN?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AAh?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@KGPAAHBG@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAC?$AAT?$AAR?$AAL?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?$DN?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AAh?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@KLNPPCKH@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAX?$AA_?$AAD?$AAA?$AAT?$AAA?$AA?$DN?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AAh?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@HANCBEBD@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAT?$AAX?$AA_?$AAD?$AAA?$AAT?$AAA?$AA?$DN?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AAh?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@MMMHOOMH@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAE?$AAV?$AAI?$AAS?$AAI?$AAO?$AAN?$AA?$DN?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AAh?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IG@PAKADFBE@?$AA?$CL?$AA?$CL?$AA?$CL?$AAb?$AAD?$AAu?$AAm?$AAp?$AAO?$AAm?$AAa?$AAp?$AAH?$AAd?$AAq?$AAR?$AAe?$AAg?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?9?$AA?5?$AA?9?$AA?5?$AA?9?$AA?5?$AA?9?$AA?5?$AA?9@| [ DATA ] ; `string'

  00010			 AREA	 |.pdata|, PDATA
|$T43603| DCD	|$LN23@bDumpOmapH|
	DCD	0x4000a904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@HFPOJGEL@?$AA?9?$AA?9?$AA?9?$AAb?$AAD?$AAu?$AAm?$AAp?$AAO?$AAm?$AAa?$AAp?$AAH?$AAd?$AAq?$AAR?$AAe?$AAg?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "b", 0x0, "D", 0x0, "u", 0x0, "m"
	DCB	0x0, "p", 0x0, "O", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "H"
	DCB	0x0, "d", 0x0, "q", 0x0, "R", 0x0, "e", 0x0, "g", 0x0, "s"
	DCB	0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@DBBGOBFC@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAY?$AAS?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?$DN?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AAh?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "S", 0x0, "Y"
	DCB	0x0, "S", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "=", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "l"
	DCB	0x0, "X", 0x0, "h", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@KHPMIHJB@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?$DN?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AAh?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "S", 0x0, "Y"
	DCB	0x0, "S", 0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I"
	DCB	0x0, "G", 0x0, "=", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "l"
	DCB	0x0, "X", 0x0, "h", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@GOKHFAEF@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAN?$AAT?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?$DN?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AAh?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "N"
	DCB	0x0, "T", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T"
	DCB	0x0, "U", 0x0, "S", 0x0, "=", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "l", 0x0, "X", 0x0, "h", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@KGPAAHBG@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAC?$AAT?$AAR?$AAL?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?$DN?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AAh?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "C", 0x0, "T"
	DCB	0x0, "R", 0x0, "L", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A"
	DCB	0x0, "T", 0x0, "U", 0x0, "S", 0x0, "=", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "l", 0x0, "X", 0x0, "h", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@KLNPPCKH@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAX?$AA_?$AAD?$AAA?$AAT?$AAA?$AA?$DN?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AAh?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "R", 0x0, "X"
	DCB	0x0, "_", 0x0, "D", 0x0, "A", 0x0, "T", 0x0, "A", 0x0, "="
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "l", 0x0, "X", 0x0, "h"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@HANCBEBD@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAT?$AAX?$AA_?$AAD?$AAA?$AAT?$AAA?$AA?$DN?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AAh?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "T", 0x0, "X"
	DCB	0x0, "_", 0x0, "D", 0x0, "A", 0x0, "T", 0x0, "A", 0x0, "="
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "l", 0x0, "X", 0x0, "h"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@MMMHOOMH@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAE?$AAV?$AAI?$AAS?$AAI?$AAO?$AAN?$AA?$DN?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AAh?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "R", 0x0, "E"
	DCB	0x0, "V", 0x0, "I", 0x0, "S", 0x0, "I", 0x0, "O", 0x0, "N"
	DCB	0x0, "=", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "l", 0x0, "X"
	DCB	0x0, "h", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IG@PAKADFBE@?$AA?$CL?$AA?$CL?$AA?$CL?$AAb?$AAD?$AAu?$AAm?$AAp?$AAO?$AAm?$AAa?$AAp?$AAH?$AAd?$AAq?$AAR?$AAe?$AAg?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?9?$AA?5?$AA?9?$AA?5?$AA?9?$AA?5?$AA?9?$AA?5?$AA?9@| DCB "+"
	DCB	0x0, "+", 0x0, "+", 0x0, "b", 0x0, "D", 0x0, "u", 0x0, "m"
	DCB	0x0, "p", 0x0, "O", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "H"
	DCB	0x0, "d", 0x0, "q", 0x0, "R", 0x0, "e", 0x0, "g", 0x0, "s"
	DCB	0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, "-", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "H", 0x0, "d"
	DCB	0x0, "q", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "-", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  0061c			 AREA	 |.text|, CODE, ARM

  0061c		 |bDumpOmapHdqRegs| PROC

; 380  : {

  0061c		 |$LN23@bDumpOmapH|
  0061c	e1a0c00d	 mov         r12, sp
  00620	e92d0001	 stmdb       sp!, {r0}
  00624	e92d5000	 stmdb       sp!, {r12, lr}
  00628	e24dd02c	 sub         sp, sp, #0x2C
  0062c		 |$M43600|

; 381  :     DWORD dwReg=0;

  0062c	e3a03000	 mov         r3, #0
  00630	e58d3000	 str         r3, [sp]

; 382  :     DEBUGMSG(ZONE_INFO, (L"+++bDumpOmapHdqRegs()\r\n- - - - - - Hdq Registers - - - - - - - -\r\n"));

  00634	e59f3260	 ldr         r3, [pc, #0x260]
  00638	e5933440	 ldr         r3, [r3, #0x440]
  0063c	e3130010	 tst         r3, #0x10
  00640	0a000004	 beq         |$LN3@bDumpOmapH|
  00644	e59f0270	 ldr         r0, [pc, #0x270]
  00648	eb000000	 bl          NKDbgPrintfW
  0064c	e3a03001	 mov         r3, #1
  00650	e58d3008	 str         r3, [sp, #8]
  00654	ea000001	 b           |$LN4@bDumpOmapH|
  00658		 |$LN3@bDumpOmapH|
  00658	e3a03000	 mov         r3, #0
  0065c	e58d3008	 str         r3, [sp, #8]
  00660		 |$LN4@bDumpOmapH|

; 383  : 
; 384  :     dwReg=INREG32(&pDevice->pHDQRegs->ulHDQ_REVISION);

  00660	e59d3034	 ldr         r3, [sp, #0x34]
  00664	e2833020	 add         r3, r3, #0x20
  00668	e5933000	 ldr         r3, [r3]
  0066c	e5933000	 ldr         r3, [r3]
  00670	e58d3000	 str         r3, [sp]

; 385  :     DEBUGMSG(ZONE_INFO, (L"\tHDQ_REVISION=%08lXh\r\n",dwReg));

  00674	e59f3220	 ldr         r3, [pc, #0x220]
  00678	e5933440	 ldr         r3, [r3, #0x440]
  0067c	e3130010	 tst         r3, #0x10
  00680	0a000005	 beq         |$LN5@bDumpOmapH|
  00684	e59d1000	 ldr         r1, [sp]
  00688	e59f0228	 ldr         r0, [pc, #0x228]
  0068c	eb000000	 bl          NKDbgPrintfW
  00690	e3a03001	 mov         r3, #1
  00694	e58d300c	 str         r3, [sp, #0xC]
  00698	ea000001	 b           |$LN6@bDumpOmapH|
  0069c		 |$LN5@bDumpOmapH|
  0069c	e3a03000	 mov         r3, #0
  006a0	e58d300c	 str         r3, [sp, #0xC]
  006a4		 |$LN6@bDumpOmapH|

; 386  :     dwReg=INREG32(&pDevice->pHDQRegs->ulHDQ_TX_DATA);

  006a4	e59d3034	 ldr         r3, [sp, #0x34]
  006a8	e2833020	 add         r3, r3, #0x20
  006ac	e5933000	 ldr         r3, [r3]
  006b0	e2833004	 add         r3, r3, #4
  006b4	e5933000	 ldr         r3, [r3]
  006b8	e58d3000	 str         r3, [sp]

; 387  :     DEBUGMSG(ZONE_INFO, (L"\tHDQ_TX_DATA=%08lXh\r\n",dwReg));

  006bc	e59f31d8	 ldr         r3, [pc, #0x1D8]
  006c0	e5933440	 ldr         r3, [r3, #0x440]
  006c4	e3130010	 tst         r3, #0x10
  006c8	0a000005	 beq         |$LN7@bDumpOmapH|
  006cc	e59d1000	 ldr         r1, [sp]
  006d0	e59f01dc	 ldr         r0, [pc, #0x1DC]
  006d4	eb000000	 bl          NKDbgPrintfW
  006d8	e3a03001	 mov         r3, #1
  006dc	e58d3010	 str         r3, [sp, #0x10]
  006e0	ea000001	 b           |$LN8@bDumpOmapH|
  006e4		 |$LN7@bDumpOmapH|
  006e4	e3a03000	 mov         r3, #0
  006e8	e58d3010	 str         r3, [sp, #0x10]
  006ec		 |$LN8@bDumpOmapH|

; 388  :     dwReg=INREG32(&pDevice->pHDQRegs->ulHDQ_RX_DATA);

  006ec	e59d3034	 ldr         r3, [sp, #0x34]
  006f0	e2833020	 add         r3, r3, #0x20
  006f4	e5933000	 ldr         r3, [r3]
  006f8	e2833008	 add         r3, r3, #8
  006fc	e5933000	 ldr         r3, [r3]
  00700	e58d3000	 str         r3, [sp]

; 389  :     DEBUGMSG(ZONE_INFO, (L"\tHDQ_RX_DATA=%08lXh\r\n",dwReg));

  00704	e59f3190	 ldr         r3, [pc, #0x190]
  00708	e5933440	 ldr         r3, [r3, #0x440]
  0070c	e3130010	 tst         r3, #0x10
  00710	0a000005	 beq         |$LN9@bDumpOmapH|
  00714	e59d1000	 ldr         r1, [sp]
  00718	e59f0190	 ldr         r0, [pc, #0x190]
  0071c	eb000000	 bl          NKDbgPrintfW
  00720	e3a03001	 mov         r3, #1
  00724	e58d3014	 str         r3, [sp, #0x14]
  00728	ea000001	 b           |$LN10@bDumpOmapH|
  0072c		 |$LN9@bDumpOmapH|
  0072c	e3a03000	 mov         r3, #0
  00730	e58d3014	 str         r3, [sp, #0x14]
  00734		 |$LN10@bDumpOmapH|

; 390  :     dwReg=INREG32(&pDevice->pHDQRegs->ulHDQ_CTRL_STATUS);

  00734	e59d3034	 ldr         r3, [sp, #0x34]
  00738	e2833020	 add         r3, r3, #0x20
  0073c	e5933000	 ldr         r3, [r3]
  00740	e283300c	 add         r3, r3, #0xC
  00744	e5933000	 ldr         r3, [r3]
  00748	e58d3000	 str         r3, [sp]

; 391  :     DEBUGMSG(ZONE_INFO, (L"\tHDQ_CTRL_STATUS=%08lXh\r\n",dwReg));

  0074c	e59f3148	 ldr         r3, [pc, #0x148]
  00750	e5933440	 ldr         r3, [r3, #0x440]
  00754	e3130010	 tst         r3, #0x10
  00758	0a000005	 beq         |$LN11@bDumpOmapH|
  0075c	e59d1000	 ldr         r1, [sp]
  00760	e59f0144	 ldr         r0, [pc, #0x144]
  00764	eb000000	 bl          NKDbgPrintfW
  00768	e3a03001	 mov         r3, #1
  0076c	e58d3018	 str         r3, [sp, #0x18]
  00770	ea000001	 b           |$LN12@bDumpOmapH|
  00774		 |$LN11@bDumpOmapH|
  00774	e3a03000	 mov         r3, #0
  00778	e58d3018	 str         r3, [sp, #0x18]
  0077c		 |$LN12@bDumpOmapH|

; 392  :     dwReg=INREG32(&pDevice->pHDQRegs->ulHDQ_INT_STATUS);

  0077c	e59d3034	 ldr         r3, [sp, #0x34]
  00780	e2833020	 add         r3, r3, #0x20
  00784	e5933000	 ldr         r3, [r3]
  00788	e2833010	 add         r3, r3, #0x10
  0078c	e5933000	 ldr         r3, [r3]
  00790	e58d3000	 str         r3, [sp]

; 393  :     DEBUGMSG(ZONE_INFO, (L"\tHDQ_INT_STATUS=%08lXh\r\n",dwReg));

  00794	e59f3100	 ldr         r3, [pc, #0x100]
  00798	e5933440	 ldr         r3, [r3, #0x440]
  0079c	e3130010	 tst         r3, #0x10
  007a0	0a000005	 beq         |$LN13@bDumpOmapH|
  007a4	e59d1000	 ldr         r1, [sp]
  007a8	e59f00f8	 ldr         r0, [pc, #0xF8]
  007ac	eb000000	 bl          NKDbgPrintfW
  007b0	e3a03001	 mov         r3, #1
  007b4	e58d301c	 str         r3, [sp, #0x1C]
  007b8	ea000001	 b           |$LN14@bDumpOmapH|
  007bc		 |$LN13@bDumpOmapH|
  007bc	e3a03000	 mov         r3, #0
  007c0	e58d301c	 str         r3, [sp, #0x1C]
  007c4		 |$LN14@bDumpOmapH|

; 394  :     dwReg=INREG32(&pDevice->pHDQRegs->ulHDQ_SYSCONFIG);

  007c4	e59d3034	 ldr         r3, [sp, #0x34]
  007c8	e2833020	 add         r3, r3, #0x20
  007cc	e5933000	 ldr         r3, [r3]
  007d0	e2833014	 add         r3, r3, #0x14
  007d4	e5933000	 ldr         r3, [r3]
  007d8	e58d3000	 str         r3, [sp]

; 395  :     DEBUGMSG(ZONE_INFO, (L"\tHDQ_SYSCONFIG=%08lXh\r\n",dwReg));

  007dc	e59f30b8	 ldr         r3, [pc, #0xB8]
  007e0	e5933440	 ldr         r3, [r3, #0x440]
  007e4	e3130010	 tst         r3, #0x10
  007e8	0a000005	 beq         |$LN15@bDumpOmapH|
  007ec	e59d1000	 ldr         r1, [sp]
  007f0	e59f00ac	 ldr         r0, [pc, #0xAC]
  007f4	eb000000	 bl          NKDbgPrintfW
  007f8	e3a03001	 mov         r3, #1
  007fc	e58d3020	 str         r3, [sp, #0x20]
  00800	ea000001	 b           |$LN16@bDumpOmapH|
  00804		 |$LN15@bDumpOmapH|
  00804	e3a03000	 mov         r3, #0
  00808	e58d3020	 str         r3, [sp, #0x20]
  0080c		 |$LN16@bDumpOmapH|

; 396  :     dwReg=INREG32(&pDevice->pHDQRegs->ulHDQ_SYSSTATUS);

  0080c	e59d3034	 ldr         r3, [sp, #0x34]
  00810	e2833020	 add         r3, r3, #0x20
  00814	e5933000	 ldr         r3, [r3]
  00818	e2833018	 add         r3, r3, #0x18
  0081c	e5933000	 ldr         r3, [r3]
  00820	e58d3000	 str         r3, [sp]

; 397  :     DEBUGMSG(ZONE_INFO, (L"\tHDQ_SYSSTATUS=%08lXh\r\n",dwReg));

  00824	e59f3070	 ldr         r3, [pc, #0x70]
  00828	e5933440	 ldr         r3, [r3, #0x440]
  0082c	e3130010	 tst         r3, #0x10
  00830	0a000005	 beq         |$LN17@bDumpOmapH|
  00834	e59d1000	 ldr         r1, [sp]
  00838	e59f0060	 ldr         r0, [pc, #0x60]
  0083c	eb000000	 bl          NKDbgPrintfW
  00840	e3a03001	 mov         r3, #1
  00844	e58d3024	 str         r3, [sp, #0x24]
  00848	ea000001	 b           |$LN18@bDumpOmapH|
  0084c		 |$LN17@bDumpOmapH|
  0084c	e3a03000	 mov         r3, #0
  00850	e58d3024	 str         r3, [sp, #0x24]
  00854		 |$LN18@bDumpOmapH|

; 398  : 
; 399  :     DEBUGMSG(ZONE_INFO, (L"---bDumpOmapHdqRegs()\r\n"));

  00854	e59f3040	 ldr         r3, [pc, #0x40]
  00858	e5933440	 ldr         r3, [r3, #0x440]
  0085c	e3130010	 tst         r3, #0x10
  00860	0a000004	 beq         |$LN19@bDumpOmapH|
  00864	e59f002c	 ldr         r0, [pc, #0x2C]
  00868	eb000000	 bl          NKDbgPrintfW
  0086c	e3a03001	 mov         r3, #1
  00870	e58d3028	 str         r3, [sp, #0x28]
  00874	ea000001	 b           |$LN20@bDumpOmapH|
  00878		 |$LN19@bDumpOmapH|
  00878	e3a03000	 mov         r3, #0
  0087c	e58d3028	 str         r3, [sp, #0x28]
  00880		 |$LN20@bDumpOmapH|

; 400  :     return TRUE;

  00880	e3a03001	 mov         r3, #1
  00884	e58d3004	 str         r3, [sp, #4]

; 401  : }

  00888	e59d0004	 ldr         r0, [sp, #4]
  0088c	e28dd02c	 add         sp, sp, #0x2C
  00890	e89d6000	 ldmia       sp, {sp, lr}
  00894	e12fff1e	 bx          lr
  00898		 |$LN24@bDumpOmapH|
  00898		 |$LN25@bDumpOmapH|
  00898	00000000	 DCD         |??_C@_1DA@HFPOJGEL@?$AA?9?$AA?9?$AA?9?$AAb?$AAD?$AAu?$AAm?$AAp?$AAO?$AAm?$AAa?$AAp?$AAH?$AAd?$AAq?$AAR?$AAe?$AAg?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0089c		 |$LN26@bDumpOmapH|
  0089c	00000000	 DCD         |dpCurSettings|
  008a0		 |$LN27@bDumpOmapH|
  008a0	00000000	 DCD         |??_C@_1DA@DBBGOBFC@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAY?$AAS?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?$DN?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AAh?$AA?$AN?$AA?6?$AA?$AA@|
  008a4		 |$LN28@bDumpOmapH|
  008a4	00000000	 DCD         |??_C@_1DA@KHPMIHJB@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?$DN?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AAh?$AA?$AN?$AA?6?$AA?$AA@|
  008a8		 |$LN29@bDumpOmapH|
  008a8	00000000	 DCD         |??_C@_1DC@GOKHFAEF@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAN?$AAT?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?$DN?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AAh?$AA?$AN?$AA?6?$AA?$AA@|
  008ac		 |$LN30@bDumpOmapH|
  008ac	00000000	 DCD         |??_C@_1DE@KGPAAHBG@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAC?$AAT?$AAR?$AAL?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?$DN?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AAh?$AA?$AN?$AA?6?$AA?$AA@|
  008b0		 |$LN31@bDumpOmapH|
  008b0	00000000	 DCD         |??_C@_1CM@KLNPPCKH@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAX?$AA_?$AAD?$AAA?$AAT?$AAA?$AA?$DN?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AAh?$AA?$AN?$AA?6?$AA?$AA@|
  008b4		 |$LN32@bDumpOmapH|
  008b4	00000000	 DCD         |??_C@_1CM@HANCBEBD@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAT?$AAX?$AA_?$AAD?$AAA?$AAT?$AAA?$AA?$DN?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AAh?$AA?$AN?$AA?6?$AA?$AA@|
  008b8		 |$LN33@bDumpOmapH|
  008b8	00000000	 DCD         |??_C@_1CO@MMMHOOMH@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAE?$AAV?$AAI?$AAS?$AAI?$AAO?$AAN?$AA?$DN?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AAh?$AA?$AN?$AA?6?$AA?$AA@|
  008bc		 |$LN34@bDumpOmapH|
  008bc	00000000	 DCD         |??_C@_1IG@PAKADFBE@?$AA?$CL?$AA?$CL?$AA?$CL?$AAb?$AAD?$AAu?$AAm?$AAp?$AAO?$AAm?$AAa?$AAp?$AAH?$AAd?$AAq?$AAR?$AAe?$AAg?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?9?$AA?5?$AA?9?$AA?5?$AA?9?$AA?5?$AA?9?$AA?5?$AA?9@|
  008c0		 |$M43601|

			 ENDP  ; |bDumpOmapHdqRegs|

	EXPORT	|??_C@_1DC@MCALIFEN@?$AA?9?$AA?9?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@DDEPBKDF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@DLCGNLL@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|LocalFree|
	IMPORT	|CloseHandle|
	IMPORT	|InterruptDisable|
	IMPORT	|MmUnmapIoSpace|
	IMPORT	|DeleteCriticalSection|
	IMPORT	|CloseBusAccessHandle|

  00018			 AREA	 |.pdata|, PDATA
|$T43628| DCD	|$LN18@HDQ_Deinit|
	DCD	0x4000a204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@MCALIFEN@?$AA?9?$AA?9?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_"
	DCB	0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "(", 0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@DDEPBKDF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "D", 0x0, "e"
	DCB	0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, " "
	DCB	0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@DLCGNLL@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "D", 0x0, "e"
	DCB	0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  008c0			 AREA	 |.text|, CODE, ARM

  008c0		 |HDQ_Deinit| PROC

; 410  : {

  008c0		 |$LN18@HDQ_Deinit|
  008c0	e1a0c00d	 mov         r12, sp
  008c4	e92d0001	 stmdb       sp!, {r0}
  008c8	e92d5000	 stmdb       sp!, {r12, lr}
  008cc	e24dd02c	 sub         sp, sp, #0x2C
  008d0		 |$M43625|

; 411  :     BOOL rc=FALSE;

  008d0	e3a03000	 mov         r3, #0
  008d4	e58d300c	 str         r3, [sp, #0xC]

; 412  :     HDQ_DEVICE* pDevice=(HDQ_DEVICE*)context;

  008d8	e59d3034	 ldr         r3, [sp, #0x34]
  008dc	e58d3008	 str         r3, [sp, #8]

; 413  : 
; 414  :     DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_FUNCTION, (L"+HDQ_Deinit(0x%08x)\r\n", context));

  008e0	e59f324c	 ldr         r3, [pc, #0x24C]
  008e4	e5933440	 ldr         r3, [r3, #0x440]
  008e8	e2032a01	 and         r2, r3, #1, 20
  008ec	e59f3240	 ldr         r3, [pc, #0x240]
  008f0	e5933440	 ldr         r3, [r3, #0x440]
  008f4	e2033004	 and         r3, r3, #4
  008f8	e1923003	 orrs        r3, r2, r3
  008fc	0a000005	 beq         |$LN10@HDQ_Deinit|
  00900	e59d1034	 ldr         r1, [sp, #0x34]
  00904	e59f0238	 ldr         r0, [pc, #0x238]
  00908	eb000000	 bl          NKDbgPrintfW
  0090c	e3a03001	 mov         r3, #1
  00910	e58d301c	 str         r3, [sp, #0x1C]
  00914	ea000001	 b           |$LN11@HDQ_Deinit|
  00918		 |$LN10@HDQ_Deinit|
  00918	e3a03000	 mov         r3, #0
  0091c	e58d301c	 str         r3, [sp, #0x1C]
  00920		 |$LN11@HDQ_Deinit|

; 415  : 
; 416  : // Check if we get correct context
; 417  :     if(pDevice == NULL || pDevice->cookie != HDQ_DEVICE_COOKIE)

  00920	e59d3008	 ldr         r3, [sp, #8]
  00924	e3530000	 cmp         r3, #0
  00928	0a000004	 beq         |$LN6@HDQ_Deinit|
  0092c	e59d3008	 ldr         r3, [sp, #8]
  00930	e5932000	 ldr         r2, [r3]
  00934	e59f3204	 ldr         r3, [pc, #0x204]
  00938	e1520003	 cmp         r2, r3
  0093c	0a00000b	 beq         |$LN7@HDQ_Deinit|
  00940		 |$LN6@HDQ_Deinit|

; 418  :     {
; 419  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: HDQ_Deinit: "
; 420  :             L"Incorrect context paramer\r\n"));

  00940	e59f31ec	 ldr         r3, [pc, #0x1EC]
  00944	e5933440	 ldr         r3, [r3, #0x440]
  00948	e3130001	 tst         r3, #1
  0094c	0a000004	 beq         |$LN12@HDQ_Deinit|
  00950	e59f01e4	 ldr         r0, [pc, #0x1E4]
  00954	eb000000	 bl          NKDbgPrintfW
  00958	e3a03001	 mov         r3, #1
  0095c	e58d3020	 str         r3, [sp, #0x20]
  00960	ea000001	 b           |$LN13@HDQ_Deinit|
  00964		 |$LN12@HDQ_Deinit|
  00964	e3a03000	 mov         r3, #0
  00968	e58d3020	 str         r3, [sp, #0x20]
  0096c		 |$LN13@HDQ_Deinit|

; 421  :         goto cleanUp;

  0096c	ea000059	 b           |$cleanUp$43019|
  00970		 |$LN7@HDQ_Deinit|

; 422  :     };
; 423  : 
; 424  : // Disable and clear the interrupt
; 425  :     CLRREG32(&pDevice->pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_INTERRUPTMASK);

  00970	e59d3008	 ldr         r3, [sp, #8]
  00974	e2833020	 add         r3, r3, #0x20
  00978	e5933000	 ldr         r3, [r3]
  0097c	e283300c	 add         r3, r3, #0xC
  00980	e5932000	 ldr         r2, [r3]
  00984	e3e03040	 mvn         r3, #0x40
  00988	e0022003	 and         r2, r2, r3
  0098c	e59d3008	 ldr         r3, [sp, #8]
  00990	e2833020	 add         r3, r3, #0x20
  00994	e5933000	 ldr         r3, [r3]
  00998	e283300c	 add         r3, r3, #0xC
  0099c	e5832000	 str         r2, [r3]

; 426  :     INREG32(&pDevice->pHDQRegs->ulHDQ_INT_STATUS);

  009a0	e59d3008	 ldr         r3, [sp, #8]
  009a4	e2833020	 add         r3, r3, #0x20
  009a8	e5933000	 ldr         r3, [r3]
  009ac	e2833010	 add         r3, r3, #0x10
  009b0	e5933000	 ldr         r3, [r3]
  009b4	e58d3024	 str         r3, [sp, #0x24]

; 427  : 
; 428  : // Set hardware to D4 and close parent bus driver
; 429  :     if(pDevice->hParentBus!=NULL)

  009b8	e59d3008	 ldr         r3, [sp, #8]
  009bc	e2833024	 add         r3, r3, #0x24
  009c0	e5933000	 ldr         r3, [r3]
  009c4	e3530000	 cmp         r3, #0
  009c8	0a000009	 beq         |$LN5@HDQ_Deinit|

; 430  :     {
; 431  :         SetDevicePowerState(pDevice->hParentBus, D4, NULL);

  009cc	e3a02000	 mov         r2, #0
  009d0	e3a01004	 mov         r1, #4
  009d4	e59d3008	 ldr         r3, [sp, #8]
  009d8	e2833024	 add         r3, r3, #0x24
  009dc	e5930000	 ldr         r0, [r3]
  009e0	eb000000	 bl          SetDevicePowerState

; 432  :         CloseBusAccessHandle(pDevice->hParentBus);

  009e4	e59d3008	 ldr         r3, [sp, #8]
  009e8	e2833024	 add         r3, r3, #0x24
  009ec	e5930000	 ldr         r0, [r3]
  009f0	eb000000	 bl          CloseBusAccessHandle
  009f4		 |$LN5@HDQ_Deinit|

; 433  :     };
; 434  : 
; 435  : // Delete critical section
; 436  :     DeleteCriticalSection(&pDevice->cs);

  009f4	e59d3008	 ldr         r3, [sp, #8]
  009f8	e283002c	 add         r0, r3, #0x2C
  009fc	eb000000	 bl          DeleteCriticalSection

; 437  : 
; 438  : // Unmap PRCM controller registers
; 439  :     if(pDevice->pPRCMRegs!=NULL)

  00a00	e59d3008	 ldr         r3, [sp, #8]
  00a04	e283301c	 add         r3, r3, #0x1C
  00a08	e5933000	 ldr         r3, [r3]
  00a0c	e3530000	 cmp         r3, #0
  00a10	0a000004	 beq         |$LN4@HDQ_Deinit|

; 440  :     {
; 441  :         MmUnmapIoSpace((VOID*)pDevice->pPRCMRegs, sizeof(OMAP2420_PRCM_REGS));

  00a14	e3a01c09	 mov         r1, #9, 24
  00a18	e59d3008	 ldr         r3, [sp, #8]
  00a1c	e283301c	 add         r3, r3, #0x1C
  00a20	e5930000	 ldr         r0, [r3]
  00a24	eb000000	 bl          MmUnmapIoSpace
  00a28		 |$LN4@HDQ_Deinit|

; 442  :     };
; 443  : 
; 444  : // Unmap HDQ_1Wire controller registers
; 445  :     if(pDevice->pHDQRegs != NULL)

  00a28	e59d3008	 ldr         r3, [sp, #8]
  00a2c	e2833020	 add         r3, r3, #0x20
  00a30	e5933000	 ldr         r3, [r3]
  00a34	e3530000	 cmp         r3, #0
  00a38	0a000006	 beq         |$LN3@HDQ_Deinit|

; 446  :     {
; 447  :         MmUnmapIoSpace((VOID*)pDevice->pHDQRegs, pDevice->memLen);

  00a3c	e59d3008	 ldr         r3, [sp, #8]
  00a40	e2833008	 add         r3, r3, #8
  00a44	e5931000	 ldr         r1, [r3]
  00a48	e59d3008	 ldr         r3, [sp, #8]
  00a4c	e2833020	 add         r3, r3, #0x20
  00a50	e5930000	 ldr         r0, [r3]
  00a54	eb000000	 bl          MmUnmapIoSpace
  00a58		 |$LN3@HDQ_Deinit|

; 448  :     };
; 449  : 
; 450  : // Release HDQ_1Wire controller interrupt
; 451  :     if(pDevice->sysIntr != 0)

  00a58	e59d3008	 ldr         r3, [sp, #8]
  00a5c	e2833040	 add         r3, r3, #0x40
  00a60	e5933000	 ldr         r3, [r3]
  00a64	e3530000	 cmp         r3, #0
  00a68	0a00000d	 beq         |$LN2@HDQ_Deinit|

; 452  :     {
; 453  :         InterruptDisable(pDevice->sysIntr);

  00a6c	e59d3008	 ldr         r3, [sp, #8]
  00a70	e2833040	 add         r3, r3, #0x40
  00a74	e5930000	 ldr         r0, [r3]
  00a78	eb000000	 bl          InterruptDisable

; 454  :         KernelIoControl(IOCTL_HAL_RELEASE_SYSINTR, &pDevice->sysIntr,sizeof(pDevice->sysIntr), NULL, 0, NULL);

  00a7c	e3a03000	 mov         r3, #0
  00a80	e58d3004	 str         r3, [sp, #4]
  00a84	e3a03000	 mov         r3, #0
  00a88	e58d3000	 str         r3, [sp]
  00a8c	e3a03000	 mov         r3, #0
  00a90	e3a02004	 mov         r2, #4
  00a94	e59d1008	 ldr         r1, [sp, #8]
  00a98	e2811040	 add         r1, r1, #0x40
  00a9c	e59f0094	 ldr         r0, [pc, #0x94]
  00aa0	eb000000	 bl          KernelIoControl
  00aa4		 |$LN2@HDQ_Deinit|

; 455  :     };
; 456  : 
; 457  : // Close interrupt handler
; 458  :     if(pDevice->hIntrEvent!=NULL)

  00aa4	e59d3008	 ldr         r3, [sp, #8]
  00aa8	e2833044	 add         r3, r3, #0x44
  00aac	e5933000	 ldr         r3, [r3]
  00ab0	e3530000	 cmp         r3, #0
  00ab4	0a000003	 beq         |$LN1@HDQ_Deinit|

; 459  :     {
; 460  :         CloseHandle(pDevice->hIntrEvent);

  00ab8	e59d3008	 ldr         r3, [sp, #8]
  00abc	e2833044	 add         r3, r3, #0x44
  00ac0	e5930000	 ldr         r0, [r3]
  00ac4	eb000000	 bl          CloseHandle
  00ac8		 |$LN1@HDQ_Deinit|

; 461  :     };
; 462  : 
; 463  : // Free device structure
; 464  :     LocalFree(pDevice);

  00ac8	e59d0008	 ldr         r0, [sp, #8]
  00acc	eb000000	 bl          LocalFree

; 465  : 
; 466  : // Done
; 467  :     rc=TRUE;

  00ad0	e3a03001	 mov         r3, #1
  00ad4	e58d300c	 str         r3, [sp, #0xC]
  00ad8		 |$cleanUp$43019|

; 468  : 
; 469  : cleanUp:
; 470  :     DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_FUNCTION, (L"---HDQ_Deinit(rc = %d)\r\n", rc));

  00ad8	e59f3054	 ldr         r3, [pc, #0x54]
  00adc	e5933440	 ldr         r3, [r3, #0x440]
  00ae0	e2032a01	 and         r2, r3, #1, 20
  00ae4	e59f3048	 ldr         r3, [pc, #0x48]
  00ae8	e5933440	 ldr         r3, [r3, #0x440]
  00aec	e2033004	 and         r3, r3, #4
  00af0	e1923003	 orrs        r3, r2, r3
  00af4	0a000005	 beq         |$LN14@HDQ_Deinit|
  00af8	e59d100c	 ldr         r1, [sp, #0xC]
  00afc	e59f002c	 ldr         r0, [pc, #0x2C]
  00b00	eb000000	 bl          NKDbgPrintfW
  00b04	e3a03001	 mov         r3, #1
  00b08	e58d3028	 str         r3, [sp, #0x28]
  00b0c	ea000001	 b           |$LN15@HDQ_Deinit|
  00b10		 |$LN14@HDQ_Deinit|
  00b10	e3a03000	 mov         r3, #0
  00b14	e58d3028	 str         r3, [sp, #0x28]
  00b18		 |$LN15@HDQ_Deinit|

; 471  :     return rc;

  00b18	e59d300c	 ldr         r3, [sp, #0xC]
  00b1c	e58d3018	 str         r3, [sp, #0x18]

; 472  : }

  00b20	e59d0018	 ldr         r0, [sp, #0x18]
  00b24	e28dd02c	 add         sp, sp, #0x2C
  00b28	e89d6000	 ldmia       sp, {sp, lr}
  00b2c	e12fff1e	 bx          lr
  00b30		 |$LN19@HDQ_Deinit|
  00b30		 |$LN20@HDQ_Deinit|
  00b30	00000000	 DCD         |??_C@_1DC@MCALIFEN@?$AA?9?$AA?9?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00b34		 |$LN21@HDQ_Deinit|
  00b34	00000000	 DCD         |dpCurSettings|
  00b38		 |$LN22@HDQ_Deinit|
  00b38	010100d8	 DCD         0x10100d8
  00b3c		 |$LN23@HDQ_Deinit|
  00b3c	00000000	 DCD         |??_C@_1FO@DDEPBKDF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn@|
  00b40		 |$LN24@HDQ_Deinit|
  00b40	68647144	 DCD         0x68647144
  00b44		 |$LN25@HDQ_Deinit|
  00b44	00000000	 DCD         |??_C@_1CM@DLCGNLL@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00b48		 |$M43626|

			 ENDP  ; |HDQ_Deinit|

	EXPORT	|??_C@_1CA@KHDMLPNJ@?$AA?9?$AA?9?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@GCIGKCGE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@HLKFGIAJ@?$AA?$CL?$AA?$CL?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@| [ DATA ] ; `string'
	EXPORT	|HDQ_Open|

  00020			 AREA	 |.pdata|, PDATA
|$T43647| DCD	|$LN13@HDQ_Open|
	DCD	0x40004a04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@KHDMLPNJ@?$AA?9?$AA?9?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_"
	DCB	0x0, "O", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "(", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@GCIGKCGE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "O", 0x0, "p"
	DCB	0x0, "e", 0x0, "n", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "p", 0x0, "a"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "r", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@HLKFGIAJ@?$AA?$CL?$AA?$CL?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@| DCB "+"
	DCB	0x0, "+", 0x0, "+", 0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_"
	DCB	0x0, "O", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ","
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  00b48			 AREA	 |.text|, CODE, ARM

  00b48		 |HDQ_Open| PROC

; 481  : {

  00b48		 |$LN13@HDQ_Open|
  00b48	e1a0c00d	 mov         r12, sp
  00b4c	e92d0007	 stmdb       sp!, {r0 - r2}
  00b50	e92d5000	 stmdb       sp!, {r12, lr}
  00b54	e24dd018	 sub         sp, sp, #0x18
  00b58		 |$M43644|

; 482  :     DWORD rc=(DWORD)-1;

  00b58	e3e03000	 mvn         r3, #0
  00b5c	e58d3004	 str         r3, [sp, #4]

; 483  :     HDQ_DEVICE* pDevice=(HDQ_DEVICE*)context;

  00b60	e59d3020	 ldr         r3, [sp, #0x20]
  00b64	e58d3000	 str         r3, [sp]

; 484  : 
; 485  :     DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_FUNCTION, (L"+++HDQ_Open(0x%08x, 0x%08x, 0x%08x\r\n", context, accessCode, shareMode));

  00b68	e59f30f0	 ldr         r3, [pc, #0xF0]
  00b6c	e5933440	 ldr         r3, [r3, #0x440]
  00b70	e2032a01	 and         r2, r3, #1, 20
  00b74	e59f30e4	 ldr         r3, [pc, #0xE4]
  00b78	e5933440	 ldr         r3, [r3, #0x440]
  00b7c	e2033004	 and         r3, r3, #4
  00b80	e1923003	 orrs        r3, r2, r3
  00b84	0a000007	 beq         |$LN5@HDQ_Open|
  00b88	e59d3028	 ldr         r3, [sp, #0x28]
  00b8c	e59d2024	 ldr         r2, [sp, #0x24]
  00b90	e59d1020	 ldr         r1, [sp, #0x20]
  00b94	e59f00d0	 ldr         r0, [pc, #0xD0]
  00b98	eb000000	 bl          NKDbgPrintfW
  00b9c	e3a03001	 mov         r3, #1
  00ba0	e58d300c	 str         r3, [sp, #0xC]
  00ba4	ea000001	 b           |$LN6@HDQ_Open|
  00ba8		 |$LN5@HDQ_Open|
  00ba8	e3a03000	 mov         r3, #0
  00bac	e58d300c	 str         r3, [sp, #0xC]
  00bb0		 |$LN6@HDQ_Open|

; 486  : 
; 487  : // Check if we get correct context
; 488  :     if(pDevice==NULL || pDevice->cookie!=HDQ_DEVICE_COOKIE)

  00bb0	e59d3000	 ldr         r3, [sp]
  00bb4	e3530000	 cmp         r3, #0
  00bb8	0a000004	 beq         |$LN1@HDQ_Open|
  00bbc	e59d3000	 ldr         r3, [sp]
  00bc0	e5932000	 ldr         r2, [r3]
  00bc4	e59f309c	 ldr         r3, [pc, #0x9C]
  00bc8	e1520003	 cmp         r2, r3
  00bcc	0a00000b	 beq         |$LN2@HDQ_Open|
  00bd0		 |$LN1@HDQ_Open|

; 489  :     {
; 490  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: HDQ_Open: "
; 491  :             L"Incorrect context paramer\r\n"));

  00bd0	e59f3088	 ldr         r3, [pc, #0x88]
  00bd4	e5933440	 ldr         r3, [r3, #0x440]
  00bd8	e3130001	 tst         r3, #1
  00bdc	0a000004	 beq         |$LN7@HDQ_Open|
  00be0	e59f007c	 ldr         r0, [pc, #0x7C]
  00be4	eb000000	 bl          NKDbgPrintfW
  00be8	e3a03001	 mov         r3, #1
  00bec	e58d3010	 str         r3, [sp, #0x10]
  00bf0	ea000001	 b           |$LN8@HDQ_Open|
  00bf4		 |$LN7@HDQ_Open|
  00bf4	e3a03000	 mov         r3, #0
  00bf8	e58d3010	 str         r3, [sp, #0x10]
  00bfc		 |$LN8@HDQ_Open|

; 492  :         goto cleanUp;

  00bfc	ea000001	 b           |$cleanUp$43063|
  00c00		 |$LN2@HDQ_Open|

; 493  :     };
; 494  : 
; 495  : // Return device context
; 496  :     rc=context;

  00c00	e59d3020	 ldr         r3, [sp, #0x20]
  00c04	e58d3004	 str         r3, [sp, #4]
  00c08		 |$cleanUp$43063|

; 497  : 
; 498  : cleanUp:
; 499  :     DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_FUNCTION, (L"---HDQ_Open()\r\n"));

  00c08	e59f3050	 ldr         r3, [pc, #0x50]
  00c0c	e5933440	 ldr         r3, [r3, #0x440]
  00c10	e2032a01	 and         r2, r3, #1, 20
  00c14	e59f3044	 ldr         r3, [pc, #0x44]
  00c18	e5933440	 ldr         r3, [r3, #0x440]
  00c1c	e2033004	 and         r3, r3, #4
  00c20	e1923003	 orrs        r3, r2, r3
  00c24	0a000004	 beq         |$LN9@HDQ_Open|
  00c28	e59f002c	 ldr         r0, [pc, #0x2C]
  00c2c	eb000000	 bl          NKDbgPrintfW
  00c30	e3a03001	 mov         r3, #1
  00c34	e58d3014	 str         r3, [sp, #0x14]
  00c38	ea000001	 b           |$LN10@HDQ_Open|
  00c3c		 |$LN9@HDQ_Open|
  00c3c	e3a03000	 mov         r3, #0
  00c40	e58d3014	 str         r3, [sp, #0x14]
  00c44		 |$LN10@HDQ_Open|

; 500  :     return context;

  00c44	e59d3020	 ldr         r3, [sp, #0x20]
  00c48	e58d3008	 str         r3, [sp, #8]

; 501  : }

  00c4c	e59d0008	 ldr         r0, [sp, #8]
  00c50	e28dd018	 add         sp, sp, #0x18
  00c54	e89d6000	 ldmia       sp, {sp, lr}
  00c58	e12fff1e	 bx          lr
  00c5c		 |$LN14@HDQ_Open|
  00c5c		 |$LN15@HDQ_Open|
  00c5c	00000000	 DCD         |??_C@_1CA@KHDMLPNJ@?$AA?9?$AA?9?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00c60		 |$LN16@HDQ_Open|
  00c60	00000000	 DCD         |dpCurSettings|
  00c64		 |$LN17@HDQ_Open|
  00c64	00000000	 DCD         |??_C@_1FK@GCIGKCGE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe@|
  00c68		 |$LN18@HDQ_Open|
  00c68	68647144	 DCD         0x68647144
  00c6c		 |$LN19@HDQ_Open|
  00c6c	00000000	 DCD         |??_C@_1EK@HLKFGIAJ@?$AA?$CL?$AA?$CL?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@|
  00c70		 |$M43645|

			 ENDP  ; |HDQ_Open|

	EXPORT	|??_C@_1DA@PLBEMDAO@?$AA?9?$AA?9?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@KBIPDDIK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@IMMGKIIK@?$AA?$CL?$AA?$CL?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|HDQ_Close|

  00028			 AREA	 |.pdata|, PDATA
|$T43665| DCD	|$LN13@HDQ_Close|
	DCD	0x40004904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@PLBEMDAO@?$AA?9?$AA?9?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_"
	DCB	0x0, "C", 0x0, "l", 0x0, "o", 0x0, "s", 0x0, "e", 0x0, "("
	DCB	0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@KBIPDDIK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "C", 0x0, "l"
	DCB	0x0, "o", 0x0, "s", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "p"
	DCB	0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "r"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@IMMGKIIK@?$AA?$CL?$AA?$CL?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "+", 0x0, "+", 0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_"
	DCB	0x0, "C", 0x0, "l", 0x0, "o", 0x0, "s", 0x0, "e", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00c70			 AREA	 |.text|, CODE, ARM

  00c70		 |HDQ_Close| PROC

; 510  : {

  00c70		 |$LN13@HDQ_Close|
  00c70	e1a0c00d	 mov         r12, sp
  00c74	e92d0001	 stmdb       sp!, {r0}
  00c78	e92d5000	 stmdb       sp!, {r12, lr}
  00c7c	e24dd018	 sub         sp, sp, #0x18
  00c80		 |$M43662|

; 511  :     BOOL rc=FALSE;

  00c80	e3a03000	 mov         r3, #0
  00c84	e58d3004	 str         r3, [sp, #4]

; 512  :     HDQ_DEVICE* pDevice=(HDQ_DEVICE*)context;

  00c88	e59d3020	 ldr         r3, [sp, #0x20]
  00c8c	e58d3000	 str         r3, [sp]

; 513  : 
; 514  :     DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_FUNCTION, (L"+++HDQ_Close(0x%08x)\r\n", context));

  00c90	e59f30ec	 ldr         r3, [pc, #0xEC]
  00c94	e5933440	 ldr         r3, [r3, #0x440]
  00c98	e2032a01	 and         r2, r3, #1, 20
  00c9c	e59f30e0	 ldr         r3, [pc, #0xE0]
  00ca0	e5933440	 ldr         r3, [r3, #0x440]
  00ca4	e2033004	 and         r3, r3, #4
  00ca8	e1923003	 orrs        r3, r2, r3
  00cac	0a000005	 beq         |$LN5@HDQ_Close|
  00cb0	e59d1020	 ldr         r1, [sp, #0x20]
  00cb4	e59f00d4	 ldr         r0, [pc, #0xD4]
  00cb8	eb000000	 bl          NKDbgPrintfW
  00cbc	e3a03001	 mov         r3, #1
  00cc0	e58d300c	 str         r3, [sp, #0xC]
  00cc4	ea000001	 b           |$LN6@HDQ_Close|
  00cc8		 |$LN5@HDQ_Close|
  00cc8	e3a03000	 mov         r3, #0
  00ccc	e58d300c	 str         r3, [sp, #0xC]
  00cd0		 |$LN6@HDQ_Close|

; 515  : 
; 516  : // Check if we get correct context
; 517  :     if(pDevice==NULL || pDevice->cookie!=HDQ_DEVICE_COOKIE)

  00cd0	e59d3000	 ldr         r3, [sp]
  00cd4	e3530000	 cmp         r3, #0
  00cd8	0a000004	 beq         |$LN1@HDQ_Close|
  00cdc	e59d3000	 ldr         r3, [sp]
  00ce0	e5932000	 ldr         r2, [r3]
  00ce4	e59f30a0	 ldr         r3, [pc, #0xA0]
  00ce8	e1520003	 cmp         r2, r3
  00cec	0a00000b	 beq         |$LN2@HDQ_Close|
  00cf0		 |$LN1@HDQ_Close|

; 518  :     {
; 519  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: HDQ_Close: "
; 520  :             L"Incorrect context paramer\r\n"));

  00cf0	e59f308c	 ldr         r3, [pc, #0x8C]
  00cf4	e5933440	 ldr         r3, [r3, #0x440]
  00cf8	e3130001	 tst         r3, #1
  00cfc	0a000004	 beq         |$LN7@HDQ_Close|
  00d00	e59f0080	 ldr         r0, [pc, #0x80]
  00d04	eb000000	 bl          NKDbgPrintfW
  00d08	e3a03001	 mov         r3, #1
  00d0c	e58d3010	 str         r3, [sp, #0x10]
  00d10	ea000001	 b           |$LN8@HDQ_Close|
  00d14		 |$LN7@HDQ_Close|
  00d14	e3a03000	 mov         r3, #0
  00d18	e58d3010	 str         r3, [sp, #0x10]
  00d1c		 |$LN8@HDQ_Close|

; 521  :         goto cleanUp;

  00d1c	ea000001	 b           |$cleanUp$43080|
  00d20		 |$LN2@HDQ_Close|

; 522  :     };
; 523  : 
; 524  : // Done
; 525  :     rc=TRUE;

  00d20	e3a03001	 mov         r3, #1
  00d24	e58d3004	 str         r3, [sp, #4]
  00d28		 |$cleanUp$43080|

; 526  : 
; 527  : cleanUp:
; 528  :     DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_FUNCTION, (L"---HDQ_Close(rc = %d)\r\n", rc));

  00d28	e59f3054	 ldr         r3, [pc, #0x54]
  00d2c	e5933440	 ldr         r3, [r3, #0x440]
  00d30	e2032a01	 and         r2, r3, #1, 20
  00d34	e59f3048	 ldr         r3, [pc, #0x48]
  00d38	e5933440	 ldr         r3, [r3, #0x440]
  00d3c	e2033004	 and         r3, r3, #4
  00d40	e1923003	 orrs        r3, r2, r3
  00d44	0a000005	 beq         |$LN9@HDQ_Close|
  00d48	e59d1004	 ldr         r1, [sp, #4]
  00d4c	e59f002c	 ldr         r0, [pc, #0x2C]
  00d50	eb000000	 bl          NKDbgPrintfW
  00d54	e3a03001	 mov         r3, #1
  00d58	e58d3014	 str         r3, [sp, #0x14]
  00d5c	ea000001	 b           |$LN10@HDQ_Close|
  00d60		 |$LN9@HDQ_Close|
  00d60	e3a03000	 mov         r3, #0
  00d64	e58d3014	 str         r3, [sp, #0x14]
  00d68		 |$LN10@HDQ_Close|

; 529  :     return rc;

  00d68	e59d3004	 ldr         r3, [sp, #4]
  00d6c	e58d3008	 str         r3, [sp, #8]

; 530  : }

  00d70	e59d0008	 ldr         r0, [sp, #8]
  00d74	e28dd018	 add         sp, sp, #0x18
  00d78	e89d6000	 ldmia       sp, {sp, lr}
  00d7c	e12fff1e	 bx          lr
  00d80		 |$LN14@HDQ_Close|
  00d80		 |$LN15@HDQ_Close|
  00d80	00000000	 DCD         |??_C@_1DA@PLBEMDAO@?$AA?9?$AA?9?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00d84		 |$LN16@HDQ_Close|
  00d84	00000000	 DCD         |dpCurSettings|
  00d88		 |$LN17@HDQ_Close|
  00d88	00000000	 DCD         |??_C@_1FM@KBIPDDIK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt@|
  00d8c		 |$LN18@HDQ_Close|
  00d8c	68647144	 DCD         0x68647144
  00d90		 |$LN19@HDQ_Close|
  00d90	00000000	 DCD         |??_C@_1CO@IMMGKIIK@?$AA?$CL?$AA?$CL?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00d94		 |$M43663|

			 ENDP  ; |HDQ_Close|

	EXPORT	|??_C@_1DI@PPAOLJCE@?$AA?9?$AA?9?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@CEKHJNGB@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd@| [ DATA ] ; `string'
	EXPORT	|HDQ_SetMode|
	EXPORT	|HDQ_Read|
	EXPORT	|HDQ_Write|
	EXPORT	|??_C@_1OG@GMNKDBNG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAD?$AAD?$AAK?$AA_@| [ DATA ] ; `string'
	EXPORT	|GetCurrentProcessId|
	EXPORT	|??_C@_1GE@HFALDCNA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IG@NFOJOPGH@?$AA?$CL?$AA?$CL?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0@| [ DATA ] ; `string'
	EXPORT	|HDQ_IOControl|
	IMPORT	|CeSafeCopyMemory|
	IMPORT	|memcmp|
	IMPORT	|SetLastError|
	IMPORT	|GetCallerProcess|

  00030			 AREA	 |.pdata|, PDATA
|$T43691| DCD	|$LN29@HDQ_IOCont|
	DCD	0x4000bd04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@PPAOLJCE@?$AA?9?$AA?9?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_"
	DCB	0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "(", 0x0, "r", 0x0, "c"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@CEKHJNGB@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd@| DCB "W"
	DCB	0x0, "A", 0x0, "R", 0x0, "N", 0x0, ":", 0x0, " ", 0x0, "H"
	DCB	0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, ":", 0x0, " ", 0x0, "U", 0x0, "n", 0x0, "s", 0x0, "u"
	DCB	0x0, "p", 0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "d", 0x0, "e"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1OG@GMNKDBNG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAD?$AAD?$AAK?$AA_@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "O"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "T", 0x0, "L", 0x0, "_", 0x0, "D", 0x0, "D", 0x0, "K"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D"
	DCB	0x0, "R", 0x0, "I", 0x0, "V", 0x0, "E", 0x0, "R", 0x0, "_"
	DCB	0x0, "I", 0x0, "F", 0x0, "C", 0x0, " ", 0x0, "c", 0x0, "a"
	DCB	0x0, "n", 0x0, " ", 0x0, "b", 0x0, "e", 0x0, " ", 0x0, "c"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "o", 0x0, "n", 0x0, "l", 0x0, "y", 0x0, " ", 0x0, "f"
	DCB	0x0, "r", 0x0, "o", 0x0, "m", 0x0, " ", 0x0, "d", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "p"
	DCB	0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, " ", 0x0, "(", 0x0, "c", 0x0, "a", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "p", 0x0, "r", 0x0, "o"
	DCB	0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, " ", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@HFALDCNA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "O"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "c"
	DCB	0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "x", 0x0, "t", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IG@NFOJOPGH@?$AA?$CL?$AA?$CL?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0@| DCB "+"
	DCB	0x0, "+", 0x0, "+", 0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_"
	DCB	0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "(", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  00d94			 AREA	 |.text|, CODE, ARM

  00d94		 |HDQ_IOControl| PROC

; 539  : {

  00d94		 |$LN29@HDQ_IOCont|
  00d94	e1a0c00d	 mov         r12, sp
  00d98	e92d000f	 stmdb       sp!, {r0 - r3}
  00d9c	e92d5000	 stmdb       sp!, {r12, lr}
  00da0	e24dd064	 sub         sp, sp, #0x64
  00da4		 |$M43688|

; 540  :     BOOL rc=FALSE;

  00da4	e3a03000	 mov         r3, #0
  00da8	e58d3014	 str         r3, [sp, #0x14]

; 541  :     HDQ_DEVICE* pDevice=(HDQ_DEVICE*)context;

  00dac	e59d306c	 ldr         r3, [sp, #0x6C]
  00db0	e58d3010	 str         r3, [sp, #0x10]

; 542  :     DEVICE_IFC_HDQ ifc;
; 543  : 
; 544  :     DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_FUNCTION, (L"+++HDQ_IOControl(0x%08x, 0x%08x, 0x%08x, %d, 0x%08x, %d, 0x%08x)\r\n",
; 545  :         context, code, pInBuffer, inSize, pOutBuffer, outSize, pOutSize));

  00db4	e59f32a4	 ldr         r3, [pc, #0x2A4]
  00db8	e5933440	 ldr         r3, [r3, #0x440]
  00dbc	e2032a01	 and         r2, r3, #1, 20
  00dc0	e59f3298	 ldr         r3, [pc, #0x298]
  00dc4	e5933440	 ldr         r3, [r3, #0x440]
  00dc8	e2033004	 and         r3, r3, #4
  00dcc	e1923003	 orrs        r3, r2, r3
  00dd0	0a00000f	 beq         |$LN17@HDQ_IOCont|
  00dd4	e59d3084	 ldr         r3, [sp, #0x84]
  00dd8	e58d300c	 str         r3, [sp, #0xC]
  00ddc	e59d3080	 ldr         r3, [sp, #0x80]
  00de0	e58d3008	 str         r3, [sp, #8]
  00de4	e59d307c	 ldr         r3, [sp, #0x7C]
  00de8	e58d3004	 str         r3, [sp, #4]
  00dec	e59d3078	 ldr         r3, [sp, #0x78]
  00df0	e58d3000	 str         r3, [sp]
  00df4	e59d3074	 ldr         r3, [sp, #0x74]
  00df8	e59d2070	 ldr         r2, [sp, #0x70]
  00dfc	e59d106c	 ldr         r1, [sp, #0x6C]
  00e00	e59f027c	 ldr         r0, [pc, #0x27C]
  00e04	eb000000	 bl          NKDbgPrintfW
  00e08	e3a03001	 mov         r3, #1
  00e0c	e58d303c	 str         r3, [sp, #0x3C]
  00e10	ea000001	 b           |$LN18@HDQ_IOCont|
  00e14		 |$LN17@HDQ_IOCont|
  00e14	e3a03000	 mov         r3, #0
  00e18	e58d303c	 str         r3, [sp, #0x3C]
  00e1c		 |$LN18@HDQ_IOCont|

; 546  : 
; 547  : // Check if we get correct context
; 548  :     if(pDevice==NULL || pDevice->cookie!=HDQ_DEVICE_COOKIE)

  00e1c	e59d3010	 ldr         r3, [sp, #0x10]
  00e20	e3530000	 cmp         r3, #0
  00e24	0a000004	 beq         |$LN13@HDQ_IOCont|
  00e28	e59d3010	 ldr         r3, [sp, #0x10]
  00e2c	e5932000	 ldr         r2, [r3]
  00e30	e59f3248	 ldr         r3, [pc, #0x248]
  00e34	e1520003	 cmp         r2, r3
  00e38	0a00000b	 beq         |$LN14@HDQ_IOCont|
  00e3c		 |$LN13@HDQ_IOCont|

; 549  :     {
; 550  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: HDQ_IOControl: "
; 551  :             L"Incorrect context paramer\r\n"));

  00e3c	e59f321c	 ldr         r3, [pc, #0x21C]
  00e40	e5933440	 ldr         r3, [r3, #0x440]
  00e44	e3130001	 tst         r3, #1
  00e48	0a000004	 beq         |$LN19@HDQ_IOCont|
  00e4c	e59f0228	 ldr         r0, [pc, #0x228]
  00e50	eb000000	 bl          NKDbgPrintfW
  00e54	e3a03001	 mov         r3, #1
  00e58	e58d3040	 str         r3, [sp, #0x40]
  00e5c	ea000001	 b           |$LN20@HDQ_IOCont|
  00e60		 |$LN19@HDQ_IOCont|
  00e60	e3a03000	 mov         r3, #0
  00e64	e58d3040	 str         r3, [sp, #0x40]
  00e68		 |$LN20@HDQ_IOCont|

; 552  :         goto cleanUp;

  00e68	ea000065	 b           |$cleanUp$43110|
  00e6c		 |$LN14@HDQ_IOCont|

; 553  :     };
; 554  : 
; 555  :     switch (code)

  00e6c	e59d2070	 ldr         r2, [sp, #0x70]
  00e70	e3a03822	 mov         r3, #0x22, 16
  00e74	e3833b01	 orr         r3, r3, #1, 22
  00e78	e1520003	 cmp         r2, r3
  00e7c	0a000000	 beq         |$LN10@HDQ_IOCont|
  00e80	ea000051	 b           |$LN1@HDQ_IOCont|
  00e84		 |$LN10@HDQ_IOCont|

; 556  :     {
; 557  :     case IOCTL_DDK_GET_DRIVER_IFC:
; 558  : // We can give interface only to our peer in device process
; 559  :         if(GetCurrentProcessId()!=(DWORD)GetCallerProcess())

  00e84	eb000000	 bl          GetCurrentProcessId
  00e88	e58d0044	 str         r0, [sp, #0x44]
  00e8c	eb000000	 bl          GetCallerProcess
  00e90	e58d0048	 str         r0, [sp, #0x48]
  00e94	e59d2044	 ldr         r2, [sp, #0x44]
  00e98	e59d3048	 ldr         r3, [sp, #0x48]
  00e9c	e1520003	 cmp         r2, r3
  00ea0	0a000010	 beq         |$LN9@HDQ_IOCont|

; 560  :         {
; 561  :             DEBUGMSG(ZONE_ERROR, (L"ERROR: HDQ_IOControl: IOCTL_DDK_GET_DRIVER_IFC can be called only from "
; 562  :                 L"device process (caller process id 0x%08x)\r\n", GetCallerProcess()));

  00ea4	e59f31b4	 ldr         r3, [pc, #0x1B4]
  00ea8	e5933440	 ldr         r3, [r3, #0x440]
  00eac	e3130001	 tst         r3, #1
  00eb0	0a000007	 beq         |$LN21@HDQ_IOCont|
  00eb4	eb000000	 bl          GetCallerProcess
  00eb8	e58d004c	 str         r0, [sp, #0x4C]
  00ebc	e59d104c	 ldr         r1, [sp, #0x4C]
  00ec0	e59f01b0	 ldr         r0, [pc, #0x1B0]
  00ec4	eb000000	 bl          NKDbgPrintfW
  00ec8	e3a03001	 mov         r3, #1
  00ecc	e58d3050	 str         r3, [sp, #0x50]
  00ed0	ea000001	 b           |$LN22@HDQ_IOCont|
  00ed4		 |$LN21@HDQ_IOCont|
  00ed4	e3a03000	 mov         r3, #0
  00ed8	e58d3050	 str         r3, [sp, #0x50]
  00edc		 |$LN22@HDQ_IOCont|

; 563  :             SetLastError(ERROR_ACCESS_DENIED);

  00edc	e3a00005	 mov         r0, #5
  00ee0	eb000000	 bl          SetLastError

; 564  :             break;

  00ee4	ea000046	 b           |$LN11@HDQ_IOCont|
  00ee8		 |$LN9@HDQ_IOCont|

; 565  :         }
; 566  :         if(pInBuffer==NULL || inSize < sizeof(GUID))

  00ee8	e59d3074	 ldr         r3, [sp, #0x74]
  00eec	e3530000	 cmp         r3, #0
  00ef0	0a000002	 beq         |$LN7@HDQ_IOCont|
  00ef4	e59d3078	 ldr         r3, [sp, #0x78]
  00ef8	e3530010	 cmp         r3, #0x10
  00efc	2a000002	 bcs         |$LN8@HDQ_IOCont|
  00f00		 |$LN7@HDQ_IOCont|

; 567  :         {
; 568  :             SetLastError(ERROR_INVALID_PARAMETER);

  00f00	e3a00057	 mov         r0, #0x57
  00f04	eb000000	 bl          SetLastError

; 569  :             break;

  00f08	ea00003d	 b           |$LN11@HDQ_IOCont|
  00f0c		 |$LN8@HDQ_IOCont|

; 570  :         };
; 571  :         if(IsEqualGUID(pInBuffer, &DEVICE_IFC_HDQ_GUID))

  00f0c	e3a02010	 mov         r2, #0x10
  00f10	e59f115c	 ldr         r1, [pc, #0x15C]
  00f14	e59d0074	 ldr         r0, [sp, #0x74]
  00f18	eb000000	 bl          memcmp
  00f1c	e58d0054	 str         r0, [sp, #0x54]
  00f20	e59d3054	 ldr         r3, [sp, #0x54]
  00f24	e3530000	 cmp         r3, #0
  00f28	1a000024	 bne         |$LN6@HDQ_IOCont|

; 572  :         {
; 573  :             if(pOutSize!=NULL)

  00f2c	e59d3084	 ldr         r3, [sp, #0x84]
  00f30	e3530000	 cmp         r3, #0
  00f34	0a000002	 beq         |$LN5@HDQ_IOCont|

; 574  :             {
; 575  :                 *pOutSize=sizeof(DEVICE_IFC_HDQ);

  00f38	e59d2084	 ldr         r2, [sp, #0x84]
  00f3c	e3a03010	 mov         r3, #0x10
  00f40	e5823000	 str         r3, [r2]
  00f44		 |$LN5@HDQ_IOCont|

; 576  :             }
; 577  :             if(pOutBuffer==NULL || outSize < sizeof(DEVICE_IFC_HDQ))

  00f44	e59d307c	 ldr         r3, [sp, #0x7C]
  00f48	e3530000	 cmp         r3, #0
  00f4c	0a000002	 beq         |$LN3@HDQ_IOCont|
  00f50	e59d3080	 ldr         r3, [sp, #0x80]
  00f54	e3530010	 cmp         r3, #0x10
  00f58	2a000002	 bcs         |$LN4@HDQ_IOCont|
  00f5c		 |$LN3@HDQ_IOCont|

; 578  :             {
; 579  :                 SetLastError(ERROR_INVALID_PARAMETER);

  00f5c	e3a00057	 mov         r0, #0x57
  00f60	eb000000	 bl          SetLastError

; 580  :                 break;

  00f64	ea000026	 b           |$LN11@HDQ_IOCont|
  00f68		 |$LN4@HDQ_IOCont|

; 581  :             }
; 582  :             ifc.context=context;

  00f68	e59d306c	 ldr         r3, [sp, #0x6C]
  00f6c	e58d3018	 str         r3, [sp, #0x18]

; 583  :             ifc.pfnWrite=HDQ_Write;

  00f70	e59f30f8	 ldr         r3, [pc, #0xF8]
  00f74	e58d301c	 str         r3, [sp, #0x1C]

; 584  :             ifc.pfnRead=HDQ_Read;

  00f78	e59f30ec	 ldr         r3, [pc, #0xEC]
  00f7c	e58d3020	 str         r3, [sp, #0x20]

; 585  :             ifc.pfnSetMode=HDQ_SetMode;

  00f80	e59f30e0	 ldr         r3, [pc, #0xE0]
  00f84	e58d3024	 str         r3, [sp, #0x24]

; 586  :             if(!CeSafeCopyMemory(pOutBuffer, &ifc, sizeof(DEVICE_IFC_HDQ)))

  00f88	e3a02010	 mov         r2, #0x10
  00f8c	e28d1018	 add         r1, sp, #0x18
  00f90	e59d007c	 ldr         r0, [sp, #0x7C]
  00f94	eb000000	 bl          CeSafeCopyMemory
  00f98	e58d0058	 str         r0, [sp, #0x58]
  00f9c	e59d3058	 ldr         r3, [sp, #0x58]
  00fa0	e3530000	 cmp         r3, #0
  00fa4	1a000002	 bne         |$LN2@HDQ_IOCont|

; 587  :             {
; 588  :                 SetLastError(ERROR_INVALID_PARAMETER);

  00fa8	e3a00057	 mov         r0, #0x57
  00fac	eb000000	 bl          SetLastError

; 589  :                 break;

  00fb0	ea000013	 b           |$LN11@HDQ_IOCont|
  00fb4		 |$LN2@HDQ_IOCont|

; 590  :             }
; 591  :             rc=TRUE;

  00fb4	e3a03001	 mov         r3, #1
  00fb8	e58d3014	 str         r3, [sp, #0x14]

; 592  :             break;

  00fbc	ea000010	 b           |$LN11@HDQ_IOCont|
  00fc0		 |$LN6@HDQ_IOCont|

; 593  :         };
; 594  :         SetLastError(ERROR_INVALID_PARAMETER);

  00fc0	e3a00057	 mov         r0, #0x57
  00fc4	eb000000	 bl          SetLastError

; 595  :         break;

  00fc8	ea00000d	 b           |$LN11@HDQ_IOCont|
  00fcc		 |$LN1@HDQ_IOCont|

; 596  :     default:
; 597  :         DEBUGMSG(ZONE_WARN, (L"WARN: HDQ_IOControl: "
; 598  :             L"Unsupported code 0x%08x\r\n", code));

  00fcc	e59f308c	 ldr         r3, [pc, #0x8C]
  00fd0	e5933440	 ldr         r3, [r3, #0x440]
  00fd4	e3130002	 tst         r3, #2
  00fd8	0a000005	 beq         |$LN23@HDQ_IOCont|
  00fdc	e59d1070	 ldr         r1, [sp, #0x70]
  00fe0	e59f007c	 ldr         r0, [pc, #0x7C]
  00fe4	eb000000	 bl          NKDbgPrintfW
  00fe8	e3a03001	 mov         r3, #1
  00fec	e58d305c	 str         r3, [sp, #0x5C]
  00ff0	ea000001	 b           |$LN24@HDQ_IOCont|
  00ff4		 |$LN23@HDQ_IOCont|
  00ff4	e3a03000	 mov         r3, #0
  00ff8	e58d305c	 str         r3, [sp, #0x5C]
  00ffc		 |$LN24@HDQ_IOCont|

; 599  :         SetLastError(ERROR_INVALID_PARAMETER);

  00ffc	e3a00057	 mov         r0, #0x57
  01000	eb000000	 bl          SetLastError
  01004		 |$LN11@HDQ_IOCont|
  01004		 |$cleanUp$43110|

; 600  :         break;
; 601  :     };
; 602  : 
; 603  : cleanUp:
; 604  :     DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_FUNCTION, (L"---HDQ_IOControl(rc = %d)\r\n", rc));

  01004	e59f3054	 ldr         r3, [pc, #0x54]
  01008	e5933440	 ldr         r3, [r3, #0x440]
  0100c	e2032a01	 and         r2, r3, #1, 20
  01010	e59f3048	 ldr         r3, [pc, #0x48]
  01014	e5933440	 ldr         r3, [r3, #0x440]
  01018	e2033004	 and         r3, r3, #4
  0101c	e1923003	 orrs        r3, r2, r3
  01020	0a000005	 beq         |$LN25@HDQ_IOCont|
  01024	e59d1014	 ldr         r1, [sp, #0x14]
  01028	e59f002c	 ldr         r0, [pc, #0x2C]
  0102c	eb000000	 bl          NKDbgPrintfW
  01030	e3a03001	 mov         r3, #1
  01034	e58d3060	 str         r3, [sp, #0x60]
  01038	ea000001	 b           |$LN26@HDQ_IOCont|
  0103c		 |$LN25@HDQ_IOCont|
  0103c	e3a03000	 mov         r3, #0
  01040	e58d3060	 str         r3, [sp, #0x60]
  01044		 |$LN26@HDQ_IOCont|

; 605  :     return rc;

  01044	e59d3014	 ldr         r3, [sp, #0x14]
  01048	e58d3038	 str         r3, [sp, #0x38]

; 606  : }

  0104c	e59d0038	 ldr         r0, [sp, #0x38]
  01050	e28dd064	 add         sp, sp, #0x64
  01054	e89d6000	 ldmia       sp, {sp, lr}
  01058	e12fff1e	 bx          lr
  0105c		 |$LN30@HDQ_IOCont|
  0105c		 |$LN31@HDQ_IOCont|
  0105c	00000000	 DCD         |??_C@_1DI@PPAOLJCE@?$AA?9?$AA?9?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01060		 |$LN32@HDQ_IOCont|
  01060	00000000	 DCD         |dpCurSettings|
  01064		 |$LN33@HDQ_IOCont|
  01064	00000000	 DCD         |??_C@_1FO@CEKHJNGB@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd@|
  01068		 |$LN34@HDQ_IOCont|
  01068	00000000	 DCD         |HDQ_SetMode|
  0106c		 |$LN35@HDQ_IOCont|
  0106c	00000000	 DCD         |HDQ_Read|
  01070		 |$LN36@HDQ_IOCont|
  01070	00000000	 DCD         |HDQ_Write|
  01074		 |$LN37@HDQ_IOCont|
  01074	00000000	 DCD         |DEVICE_IFC_HDQ_GUID|
  01078		 |$LN38@HDQ_IOCont|
  01078	00000000	 DCD         |??_C@_1OG@GMNKDBNG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAD?$AAD?$AAK?$AA_@|
  0107c		 |$LN39@HDQ_IOCont|
  0107c	00000000	 DCD         |??_C@_1GE@HFALDCNA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5@|
  01080		 |$LN40@HDQ_IOCont|
  01080	68647144	 DCD         0x68647144
  01084		 |$LN41@HDQ_IOCont|
  01084	00000000	 DCD         |??_C@_1IG@NFOJOPGH@?$AA?$CL?$AA?$CL?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0@|
  01088		 |$M43689|

			 ENDP  ; |HDQ_IOControl|

	IMPORT	|__GetUserKData|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T43709| DCD	|$LN5@GetCurrent|
	DCD	0x40000b02
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentProcessId| PROC

; 373  : _inline DWORD GetCurrentProcessId(void) {

  00000		 |$LN5@GetCurrent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M43706|

; 374  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURPROC * sizeof(HANDLE)));

  00008	e3a0000c	 mov         r0, #0xC
  0000c	eb000000	 bl          __GetUserKData
  00010	e58d0004	 str         r0, [sp, #4]
  00014	e59d3004	 ldr         r3, [sp, #4]
  00018	e58d3000	 str         r3, [sp]

; 375  : }

  0001c	e59d0000	 ldr         r0, [sp]
  00020	e28dd008	 add         sp, sp, #8
  00024	e49de004	 ldr         lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$M43707|

			 ENDP  ; |GetCurrentProcessId|

	EXPORT	|HDQ_PowerUp|

  00038			 AREA	 |.pdata|, PDATA
|$T43720| DCD	|$LN5@HDQ_PowerU|
	DCD	0x40004104
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\hdq\hdq.c

  01088			 AREA	 |.text|, CODE, ARM

  01088		 |HDQ_PowerUp| PROC

; 615  : {

  01088		 |$LN5@HDQ_PowerU|
  01088	e1a0c00d	 mov         r12, sp
  0108c	e92d0001	 stmdb       sp!, {r0}
  01090	e92d5000	 stmdb       sp!, {r12, lr}
  01094	e24dd028	 sub         sp, sp, #0x28
  01098		 |$M43717|

; 616  :     HDQ_DEVICE* pDevice=(HDQ_DEVICE*)context;

  01098	e59d3030	 ldr         r3, [sp, #0x30]
  0109c	e58d3008	 str         r3, [sp, #8]

; 617  :     DWORD dwRegValue=0;

  010a0	e3a03000	 mov         r3, #0
  010a4	e58d3010	 str         r3, [sp, #0x10]

; 618  :     DWORD cbRet=0;

  010a8	e3a03000	 mov         r3, #0
  010ac	e58d300c	 str         r3, [sp, #0xC]

; 619  : // enable the HDQ clocks
; 620  : #if 0
; 621  :     SETREG32(&pDevice->pPRCMRegs->ulCM_FCLKEN1_CORE, PRCM_FCLKEN1_CORE_EN_HDQ);
; 622  :     SETREG32(&pDevice->pPRCMRegs->ulCM_ICLKEN1_CORE, PRCM_ICLKEN1_CORE_EN_HDQ);
; 623  : #else
; 624  : // Enable the 1WIRE functional and interface clocks.
; 625  :     dwRegValue=PRCM_FCLKEN1_CORE_EN_HDQ;

  010b0	e3a03502	 mov         r3, #2, 10
  010b4	e58d3010	 str         r3, [sp, #0x10]

; 626  :     KernelIoControl(IOCTL_FCLK1_ENB, (VOID*)&dwRegValue, sizeof(DWORD), NULL, 0, &cbRet);

  010b8	e28d300c	 add         r3, sp, #0xC
  010bc	e58d3004	 str         r3, [sp, #4]
  010c0	e3a03000	 mov         r3, #0
  010c4	e58d3000	 str         r3, [sp]
  010c8	e3a03000	 mov         r3, #0
  010cc	e3a02004	 mov         r2, #4
  010d0	e28d1010	 add         r1, sp, #0x10
  010d4	e59f00ac	 ldr         r0, [pc, #0xAC]
  010d8	eb000000	 bl          KernelIoControl

; 627  : 
; 628  :     dwRegValue=PRCM_ICLKEN1_CORE_EN_HDQ;

  010dc	e3a03502	 mov         r3, #2, 10
  010e0	e58d3010	 str         r3, [sp, #0x10]

; 629  :     KernelIoControl(IOCTL_ICLK1_ENB, (VOID*)&dwRegValue, sizeof(DWORD), NULL, 0, &cbRet);

  010e4	e28d300c	 add         r3, sp, #0xC
  010e8	e58d3004	 str         r3, [sp, #4]
  010ec	e3a03000	 mov         r3, #0
  010f0	e58d3000	 str         r3, [sp]
  010f4	e3a03000	 mov         r3, #0
  010f8	e3a02004	 mov         r2, #4
  010fc	e28d1010	 add         r1, sp, #0x10
  01100	e59f007c	 ldr         r0, [pc, #0x7C]
  01104	eb000000	 bl          KernelIoControl

; 630  : #endif
; 631  : // enable the HDQ
; 632  :     SETREG32(&pDevice->pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_CLOCKENABLE);

  01108	e59d3008	 ldr         r3, [sp, #8]
  0110c	e2833020	 add         r3, r3, #0x20
  01110	e5933000	 ldr         r3, [r3]
  01114	e283300c	 add         r3, r3, #0xC
  01118	e5933000	 ldr         r3, [r3]
  0111c	e3832020	 orr         r2, r3, #0x20
  01120	e59d3008	 ldr         r3, [sp, #8]
  01124	e2833020	 add         r3, r3, #0x20
  01128	e5933000	 ldr         r3, [r3]
  0112c	e283300c	 add         r3, r3, #0xC
  01130	e5832000	 str         r2, [r3]

; 633  : 
; 634  : // clear and enable interrupts
; 635  :     INREG32(&pDevice->pHDQRegs->ulHDQ_INT_STATUS);

  01134	e59d3008	 ldr         r3, [sp, #8]
  01138	e2833020	 add         r3, r3, #0x20
  0113c	e5933000	 ldr         r3, [r3]
  01140	e2833010	 add         r3, r3, #0x10
  01144	e5933000	 ldr         r3, [r3]
  01148	e58d3024	 str         r3, [sp, #0x24]

; 636  :     SETREG32(&pDevice->pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_INTERRUPTMASK);

  0114c	e59d3008	 ldr         r3, [sp, #8]
  01150	e2833020	 add         r3, r3, #0x20
  01154	e5933000	 ldr         r3, [r3]
  01158	e283300c	 add         r3, r3, #0xC
  0115c	e5933000	 ldr         r3, [r3]
  01160	e3832040	 orr         r2, r3, #0x40
  01164	e59d3008	 ldr         r3, [sp, #8]
  01168	e2833020	 add         r3, r3, #0x20
  0116c	e5933000	 ldr         r3, [r3]
  01170	e283300c	 add         r3, r3, #0xC
  01174	e5832000	 str         r2, [r3]

; 637  : }

  01178	e28dd028	 add         sp, sp, #0x28
  0117c	e89d6000	 ldmia       sp, {sp, lr}
  01180	e12fff1e	 bx          lr
  01184		 |$LN6@HDQ_PowerU|
  01184		 |$LN7@HDQ_PowerU|
  01184	0022040c	 DCD         0x22040c
  01188		 |$LN8@HDQ_PowerU|
  01188	0022041c	 DCD         0x22041c
  0118c		 |$M43718|

			 ENDP  ; |HDQ_PowerUp|

	EXPORT	|HDQ_PowerDown|

  00040			 AREA	 |.pdata|, PDATA
|$T43732| DCD	|$LN5@HDQ_PowerD|
	DCD	0x40004304
; Function compile flags: /Odtp

  0118c			 AREA	 |.text|, CODE, ARM

  0118c		 |HDQ_PowerDown| PROC

; 646  : {

  0118c		 |$LN5@HDQ_PowerD|
  0118c	e1a0c00d	 mov         r12, sp
  01190	e92d0001	 stmdb       sp!, {r0}
  01194	e92d5000	 stmdb       sp!, {r12, lr}
  01198	e24dd028	 sub         sp, sp, #0x28
  0119c		 |$M43729|

; 647  :     HDQ_DEVICE* pDevice=(HDQ_DEVICE*)context;

  0119c	e59d3030	 ldr         r3, [sp, #0x30]
  011a0	e58d3008	 str         r3, [sp, #8]

; 648  :     DWORD dwRegValue=0;

  011a4	e3a03000	 mov         r3, #0
  011a8	e58d3010	 str         r3, [sp, #0x10]

; 649  :     DWORD cbRet=0;

  011ac	e3a03000	 mov         r3, #0
  011b0	e58d300c	 str         r3, [sp, #0xC]

; 650  : 
; 651  : // disable and clear interrupts
; 652  :     CLRREG32(&pDevice->pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_INTERRUPTMASK);

  011b4	e59d3008	 ldr         r3, [sp, #8]
  011b8	e2833020	 add         r3, r3, #0x20
  011bc	e5933000	 ldr         r3, [r3]
  011c0	e283300c	 add         r3, r3, #0xC
  011c4	e5932000	 ldr         r2, [r3]
  011c8	e3e03040	 mvn         r3, #0x40
  011cc	e0022003	 and         r2, r2, r3
  011d0	e59d3008	 ldr         r3, [sp, #8]
  011d4	e2833020	 add         r3, r3, #0x20
  011d8	e5933000	 ldr         r3, [r3]
  011dc	e283300c	 add         r3, r3, #0xC
  011e0	e5832000	 str         r2, [r3]

; 653  :     INREG32(&pDevice->pHDQRegs->ulHDQ_INT_STATUS);

  011e4	e59d3008	 ldr         r3, [sp, #8]
  011e8	e2833020	 add         r3, r3, #0x20
  011ec	e5933000	 ldr         r3, [r3]
  011f0	e2833010	 add         r3, r3, #0x10
  011f4	e5933000	 ldr         r3, [r3]
  011f8	e58d3024	 str         r3, [sp, #0x24]

; 654  : 
; 655  : // disable the HDQ
; 656  :     CLRREG32(&pDevice->pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_CLOCKENABLE);

  011fc	e59d3008	 ldr         r3, [sp, #8]
  01200	e2833020	 add         r3, r3, #0x20
  01204	e5933000	 ldr         r3, [r3]
  01208	e283300c	 add         r3, r3, #0xC
  0120c	e5932000	 ldr         r2, [r3]
  01210	e3e03020	 mvn         r3, #0x20
  01214	e0022003	 and         r2, r2, r3
  01218	e59d3008	 ldr         r3, [sp, #8]
  0121c	e2833020	 add         r3, r3, #0x20
  01220	e5933000	 ldr         r3, [r3]
  01224	e283300c	 add         r3, r3, #0xC
  01228	e5832000	 str         r2, [r3]

; 657  : 
; 658  : // disable the HDQ clocks
; 659  : #if 0
; 660  :     CLRREG32(&pDevice->pPRCMRegs->ulCM_FCLKEN1_CORE, PRCM_FCLKEN1_CORE_EN_HDQ);
; 661  :     CLRREG32(&pDevice->pPRCMRegs->ulCM_ICLKEN1_CORE, PRCM_ICLKEN1_CORE_EN_HDQ); 
; 662  : #else
; 663  : // Disable the 1WIRE functional and interface clocks.
; 664  :     dwRegValue=PRCM_FCLKEN1_CORE_EN_HDQ;

  0122c	e3a03502	 mov         r3, #2, 10
  01230	e58d3010	 str         r3, [sp, #0x10]

; 665  :     KernelIoControl(IOCTL_FCLK1_DIS, (VOID*)&dwRegValue, sizeof(DWORD), NULL, 0, &cbRet);

  01234	e28d300c	 add         r3, sp, #0xC
  01238	e58d3004	 str         r3, [sp, #4]
  0123c	e3a03000	 mov         r3, #0
  01240	e58d3000	 str         r3, [sp]
  01244	e3a03000	 mov         r3, #0
  01248	e3a02004	 mov         r2, #4
  0124c	e28d1010	 add         r1, sp, #0x10
  01250	e3a00822	 mov         r0, #0x22, 16
  01254	e3800e42	 orr         r0, r0, #0x42, 28
  01258	eb000000	 bl          KernelIoControl

; 666  : 
; 667  :     dwRegValue=PRCM_ICLKEN1_CORE_EN_HDQ;

  0125c	e3a03502	 mov         r3, #2, 10
  01260	e58d3010	 str         r3, [sp, #0x10]

; 668  :     KernelIoControl(IOCTL_ICLK1_DIS, (VOID*)&dwRegValue, sizeof(DWORD), NULL, 0, &cbRet);

  01264	e28d300c	 add         r3, sp, #0xC
  01268	e58d3004	 str         r3, [sp, #4]
  0126c	e3a03000	 mov         r3, #0
  01270	e58d3000	 str         r3, [sp]
  01274	e3a03000	 mov         r3, #0
  01278	e3a02004	 mov         r2, #4
  0127c	e28d1010	 add         r1, sp, #0x10
  01280	e3a00822	 mov         r0, #0x22, 16
  01284	e3800e41	 orr         r0, r0, #0x41, 28
  01288	eb000000	 bl          KernelIoControl

; 669  : #endif
; 670  :     return;
; 671  : }

  0128c	e28dd028	 add         sp, sp, #0x28
  01290	e89d6000	 ldmia       sp, {sp, lr}
  01294	e12fff1e	 bx          lr
  01298		 |$M43730|

			 ENDP  ; |HDQ_PowerDown|

	EXPORT	|??_C@_1DA@HGOCGKJE@?$AA?9?$AA?9?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@FONCJPAC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAT?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?5?$AAe?$AAx@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@DGMHCICA@?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@NIJJBKAI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAi?$AAn?$AA?5?$AAT?$AAx?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@IIKDHJI@?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA2?$AA?$CJ?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@MFNDONKP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAi?$AAn?$AA?5?$AAi?$AAn?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@MBJFDPCH@?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA1?$AA?$CJ?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@JCBIABAG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@BBLNLFKB@?$AA?$CL?$AA?$CL?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF@| [ DATA ] ; `string'
	IMPORT	|LeaveCriticalSection|
	IMPORT	|WaitForSingleObject|
	IMPORT	|InterruptDone|
	IMPORT	|EnterCriticalSection|

  00048			 AREA	 |.pdata|, PDATA
|$T43756| DCD	|$LN35@HDQ_Write|
	DCD	0x40015c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@HGOCGKJE@?$AA?9?$AA?9?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_"
	DCB	0x0, "W", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e", 0x0, "("
	DCB	0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@FONCJPAC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAT?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?5?$AAe?$AAx@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "W", 0x0, "r"
	DCB	0x0, "i", 0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "T"
	DCB	0x0, "X", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "e"
	DCB	0x0, "x", 0x0, "p", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@DGMHCICA@?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ@| DCB "H"
	DCB	0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "W", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "u", 0x0, "s", 0x0, " ", 0x0, "(", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, " ", 0x0, "w", 0x0, "a", 0x0, "s", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@NIJJBKAI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAi?$AAn?$AA?5?$AAT?$AAx?$AA?$AN@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "W", 0x0, "r"
	DCB	0x0, "i", 0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "T"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "T", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@IIKDHJI@?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA2?$AA?$CJ?$AA?5@| DCB "H"
	DCB	0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "W", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "u", 0x0, "s", 0x0, " ", 0x0, "(", 0x0, "2", 0x0, ")"
	DCB	0x0, " ", 0x0, "w", 0x0, "a", 0x0, "s", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@MFNDONKP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAi?$AAn?$AA?5?$AAi?$AAn?$AAi@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "W", 0x0, "r"
	DCB	0x0, "i", 0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "T"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, " ", 0x0, "p", 0x0, "u", 0x0, "l"
	DCB	0x0, "s", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@MBJFDPCH@?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA1?$AA?$CJ?$AA?5@| DCB "H"
	DCB	0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "W", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "u", 0x0, "s", 0x0, " ", 0x0, "(", 0x0, "1", 0x0, ")"
	DCB	0x0, " ", 0x0, "w", 0x0, "a", 0x0, "s", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@JCBIABAG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "W", 0x0, "r"
	DCB	0x0, "i", 0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "p"
	DCB	0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@BBLNLFKB@?$AA?$CL?$AA?$CL?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF@| DCB "+"
	DCB	0x0, "+", 0x0, "+", 0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_"
	DCB	0x0, "W", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  01298			 AREA	 |.text|, CODE, ARM

  01298		 |HDQ_Write| PROC

; 680  : {

  01298		 |$LN35@HDQ_Write|
  01298	e1a0c00d	 mov         r12, sp
  0129c	e92d0007	 stmdb       sp!, {r0 - r2}
  012a0	e92d5000	 stmdb       sp!, {r12, lr}
  012a4	e24dd050	 sub         sp, sp, #0x50
  012a8		 |$M43753|

; 681  :     BOOL rc=FALSE;

  012a8	e3a03000	 mov         r3, #0
  012ac	e58d3008	 str         r3, [sp, #8]

; 682  :     HDQ_DEVICE* pDevice=(HDQ_DEVICE*)context;

  012b0	e59d3058	 ldr         r3, [sp, #0x58]
  012b4	e58d3000	 str         r3, [sp]

; 683  :     OMAP2420_HDQ_REGS* pHDQRegs;
; 684  :     DWORD status, i, count;
; 685  :     UCHAR buffer[3];
; 686  : 
; 687  :     DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_FUNCTION, (L"+++HDQ_Write(0x%08x, 0x%02x, 0x%x)\r\n", context, address, data));

  012b8	e59f3520	 ldr         r3, [pc, #0x520]
  012bc	e5933440	 ldr         r3, [r3, #0x440]
  012c0	e2032a01	 and         r2, r3, #1, 20
  012c4	e59f3514	 ldr         r3, [pc, #0x514]
  012c8	e5933440	 ldr         r3, [r3, #0x440]
  012cc	e2033004	 and         r3, r3, #4
  012d0	e1923003	 orrs        r3, r2, r3
  012d4	0a000007	 beq         |$LN15@HDQ_Write|
  012d8	e1dd36b0	 ldrh        r3, [sp, #0x60]
  012dc	e5dd205c	 ldrb        r2, [sp, #0x5C]
  012e0	e59d1058	 ldr         r1, [sp, #0x58]
  012e4	e59f0518	 ldr         r0, [pc, #0x518]
  012e8	eb000000	 bl          NKDbgPrintfW
  012ec	e3a03001	 mov         r3, #1
  012f0	e58d3020	 str         r3, [sp, #0x20]
  012f4	ea000001	 b           |$LN16@HDQ_Write|
  012f8		 |$LN15@HDQ_Write|
  012f8	e3a03000	 mov         r3, #0
  012fc	e58d3020	 str         r3, [sp, #0x20]
  01300		 |$LN16@HDQ_Write|

; 688  : 
; 689  : // Check if we get correct context
; 690  :     if(pDevice==NULL || pDevice->cookie!=HDQ_DEVICE_COOKIE)

  01300	e59d3000	 ldr         r3, [sp]
  01304	e3530000	 cmp         r3, #0
  01308	0a000004	 beq         |$LN11@HDQ_Write|
  0130c	e59d3000	 ldr         r3, [sp]
  01310	e5932000	 ldr         r2, [r3]
  01314	e59f34e4	 ldr         r3, [pc, #0x4E4]
  01318	e1520003	 cmp         r2, r3
  0131c	0a00000f	 beq         |$LN12@HDQ_Write|
  01320		 |$LN11@HDQ_Write|

; 691  :     {
; 692  :         DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_ERROR, (L"ERROR: HDQ_Write: "
; 693  :             L"Incorrect context parameter\r\n"));

  01320	e59f34b8	 ldr         r3, [pc, #0x4B8]
  01324	e5933440	 ldr         r3, [r3, #0x440]
  01328	e2032a01	 and         r2, r3, #1, 20
  0132c	e59f34ac	 ldr         r3, [pc, #0x4AC]
  01330	e5933440	 ldr         r3, [r3, #0x440]
  01334	e2033001	 and         r3, r3, #1
  01338	e1923003	 orrs        r3, r2, r3
  0133c	0a000004	 beq         |$LN17@HDQ_Write|
  01340	e59f04b4	 ldr         r0, [pc, #0x4B4]
  01344	eb000000	 bl          NKDbgPrintfW
  01348	e3a03001	 mov         r3, #1
  0134c	e58d3024	 str         r3, [sp, #0x24]
  01350	ea000001	 b           |$LN18@HDQ_Write|
  01354		 |$LN17@HDQ_Write|
  01354	e3a03000	 mov         r3, #0
  01358	e58d3024	 str         r3, [sp, #0x24]
  0135c		 |$LN18@HDQ_Write|

; 694  :         goto exit;

  0135c	ea000108	 b           |$exit$43214|
  01360		 |$LN12@HDQ_Write|

; 695  :     };
; 696  : 
; 697  : // Get hardware
; 698  :     pHDQRegs=pDevice->pHDQRegs;

  01360	e59d3000	 ldr         r3, [sp]
  01364	e2833020	 add         r3, r3, #0x20
  01368	e5933000	 ldr         r3, [r3]
  0136c	e58d3014	 str         r3, [sp, #0x14]

; 699  :     EnterCriticalSection(&pDevice->cs);

  01370	e59d3000	 ldr         r3, [sp]
  01374	e283002c	 add         r0, r3, #0x2C
  01378	eb000000	 bl          EnterCriticalSection

; 700  : 
; 701  : // Make sure that clock is present
; 702  :     SetDevicePowerState(pDevice->hParentBus, D0, NULL);

  0137c	e3a02000	 mov         r2, #0
  01380	e3a01000	 mov         r1, #0
  01384	e59d3000	 ldr         r3, [sp]
  01388	e2833024	 add         r3, r3, #0x24
  0138c	e5930000	 ldr         r0, [r3]
  01390	eb000000	 bl          SetDevicePowerState

; 703  :     HDQ_PowerUp(context);

  01394	e59d0058	 ldr         r0, [sp, #0x58]
  01398	eb000000	 bl          HDQ_PowerUp

; 704  : 
; 705  : // Clear the interrupt
; 706  :     status=INREG32(&pHDQRegs->ulHDQ_INT_STATUS);

  0139c	e59d3014	 ldr         r3, [sp, #0x14]
  013a0	e2833010	 add         r3, r3, #0x10
  013a4	e5933000	 ldr         r3, [r3]
  013a8	e58d3010	 str         r3, [sp, #0x10]

; 707  :     DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_INFO, (L"HDQ_Write: "
; 708  :         L"Interrupt status (1) was 0x%02x\r\n", status));

  013ac	e59f342c	 ldr         r3, [pc, #0x42C]
  013b0	e5933440	 ldr         r3, [r3, #0x440]
  013b4	e2032a01	 and         r2, r3, #1, 20
  013b8	e59f3420	 ldr         r3, [pc, #0x420]
  013bc	e5933440	 ldr         r3, [r3, #0x440]
  013c0	e2033010	 and         r3, r3, #0x10
  013c4	e1923003	 orrs        r3, r2, r3
  013c8	0a000005	 beq         |$LN19@HDQ_Write|
  013cc	e59d1010	 ldr         r1, [sp, #0x10]
  013d0	e59f0420	 ldr         r0, [pc, #0x420]
  013d4	eb000000	 bl          NKDbgPrintfW
  013d8	e3a03001	 mov         r3, #1
  013dc	e58d3028	 str         r3, [sp, #0x28]
  013e0	ea000001	 b           |$LN20@HDQ_Write|
  013e4		 |$LN19@HDQ_Write|
  013e4	e3a03000	 mov         r3, #0
  013e8	e58d3028	 str         r3, [sp, #0x28]
  013ec		 |$LN20@HDQ_Write|

; 709  : 
; 710  : // Need to notify InterruptDone right away
; 711  :     InterruptDone(pDevice->sysIntr);

  013ec	e59d3000	 ldr         r3, [sp]
  013f0	e2833040	 add         r3, r3, #0x40
  013f4	e5930000	 ldr         r0, [r3]
  013f8	eb000000	 bl          InterruptDone

; 712  : 
; 713  : // Send initialization pulse in 1-wire mode
; 714  :     SETREG32(&pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_MODE);

  013fc	e59d3014	 ldr         r3, [sp, #0x14]
  01400	e283300c	 add         r3, r3, #0xC
  01404	e5933000	 ldr         r3, [r3]
  01408	e3832001	 orr         r2, r3, #1
  0140c	e59d3014	 ldr         r3, [sp, #0x14]
  01410	e283300c	 add         r3, r3, #0xC
  01414	e5832000	 str         r2, [r3]

; 715  :     SETREG32(&pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_INITIALIZATION);

  01418	e59d3014	 ldr         r3, [sp, #0x14]
  0141c	e283300c	 add         r3, r3, #0xC
  01420	e5933000	 ldr         r3, [r3]
  01424	e3832004	 orr         r2, r3, #4
  01428	e59d3014	 ldr         r3, [sp, #0x14]
  0142c	e283300c	 add         r3, r3, #0xC
  01430	e5832000	 str         r2, [r3]

; 716  :     SETREG32(&pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_GO);

  01434	e59d3014	 ldr         r3, [sp, #0x14]
  01438	e283300c	 add         r3, r3, #0xC
  0143c	e5933000	 ldr         r3, [r3]
  01440	e3832010	 orr         r2, r3, #0x10
  01444	e59d3014	 ldr         r3, [sp, #0x14]
  01448	e283300c	 add         r3, r3, #0xC
  0144c	e5832000	 str         r2, [r3]

; 717  : 
; 718  : // Wait on completion interrupt (not documented)
; 719  :     if(WaitForSingleObject(pDevice->hIntrEvent, pDevice->breakTimeout) == WAIT_TIMEOUT)

  01450	e59d3000	 ldr         r3, [sp]
  01454	e2833010	 add         r3, r3, #0x10
  01458	e5931000	 ldr         r1, [r3]
  0145c	e59d3000	 ldr         r3, [sp]
  01460	e2833044	 add         r3, r3, #0x44
  01464	e5930000	 ldr         r0, [r3]
  01468	eb000000	 bl          WaitForSingleObject
  0146c	e58d002c	 str         r0, [sp, #0x2C]
  01470	e59d202c	 ldr         r2, [sp, #0x2C]
  01474	e3a03c01	 mov         r3, #1, 24
  01478	e3833002	 orr         r3, r3, #2
  0147c	e1520003	 cmp         r2, r3
  01480	1a00000e	 bne         |$LN10@HDQ_Write|

; 720  :     {
; 721  :         DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_ERROR, (L"ERROR: HDQ_Write: "
; 722  :             L"Timeout in init pulse\r\n"));

  01484	e59f3354	 ldr         r3, [pc, #0x354]
  01488	e5933440	 ldr         r3, [r3, #0x440]
  0148c	e2032a01	 and         r2, r3, #1, 20
  01490	e59f3348	 ldr         r3, [pc, #0x348]
  01494	e5933440	 ldr         r3, [r3, #0x440]
  01498	e2033001	 and         r3, r3, #1
  0149c	e1923003	 orrs        r3, r2, r3
  014a0	0a000004	 beq         |$LN21@HDQ_Write|
  014a4	e59f0348	 ldr         r0, [pc, #0x348]
  014a8	eb000000	 bl          NKDbgPrintfW
  014ac	e3a03001	 mov         r3, #1
  014b0	e58d3030	 str         r3, [sp, #0x30]
  014b4	ea000001	 b           |$LN22@HDQ_Write|
  014b8		 |$LN21@HDQ_Write|
  014b8	e3a03000	 mov         r3, #0
  014bc	e58d3030	 str         r3, [sp, #0x30]
  014c0		 |$LN22@HDQ_Write|
  014c0		 |$LN10@HDQ_Write|

; 723  :     }
; 724  : 
; 725  : // Clear the interrupt
; 726  :     status=INREG32(&pHDQRegs->ulHDQ_INT_STATUS);

  014c0	e59d3014	 ldr         r3, [sp, #0x14]
  014c4	e2833010	 add         r3, r3, #0x10
  014c8	e5933000	 ldr         r3, [r3]
  014cc	e58d3010	 str         r3, [sp, #0x10]

; 727  :     DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_INFO, (L"HDQ_Write: "
; 728  :         L"Interrupt status (2) was 0x%02x\r\n", status));

  014d0	e59f3308	 ldr         r3, [pc, #0x308]
  014d4	e5933440	 ldr         r3, [r3, #0x440]
  014d8	e2032a01	 and         r2, r3, #1, 20
  014dc	e59f32fc	 ldr         r3, [pc, #0x2FC]
  014e0	e5933440	 ldr         r3, [r3, #0x440]
  014e4	e2033010	 and         r3, r3, #0x10
  014e8	e1923003	 orrs        r3, r2, r3
  014ec	0a000005	 beq         |$LN23@HDQ_Write|
  014f0	e59d1010	 ldr         r1, [sp, #0x10]
  014f4	e59f02f4	 ldr         r0, [pc, #0x2F4]
  014f8	eb000000	 bl          NKDbgPrintfW
  014fc	e3a03001	 mov         r3, #1
  01500	e58d3034	 str         r3, [sp, #0x34]
  01504	ea000001	 b           |$LN24@HDQ_Write|
  01508		 |$LN23@HDQ_Write|
  01508	e3a03000	 mov         r3, #0
  0150c	e58d3034	 str         r3, [sp, #0x34]
  01510		 |$LN24@HDQ_Write|

; 729  : 
; 730  : // Need to notify InterruptDone right away
; 731  :     InterruptDone(pDevice->sysIntr);

  01510	e59d3000	 ldr         r3, [sp]
  01514	e2833040	 add         r3, r3, #0x40
  01518	e5930000	 ldr         r0, [r3]
  0151c	eb000000	 bl          InterruptDone

; 732  : 
; 733  : // Back to HDQ mode.
; 734  :     CLRREG32(&pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_MODE);

  01520	e59d3014	 ldr         r3, [sp, #0x14]
  01524	e283300c	 add         r3, r3, #0xC
  01528	e5932000	 ldr         r2, [r3]
  0152c	e3e03001	 mvn         r3, #1
  01530	e0022003	 and         r2, r2, r3
  01534	e59d3014	 ldr         r3, [sp, #0x14]
  01538	e283300c	 add         r3, r3, #0xC
  0153c	e5832000	 str         r2, [r3]

; 735  : 
; 736  : // We are going to do a write so set write bit in the address
; 737  :     buffer[0]=address|0x80;

  01540	e5dd305c	 ldrb        r3, [sp, #0x5C]
  01544	e3833080	 orr         r3, r3, #0x80
  01548	e20330ff	 and         r3, r3, #0xFF
  0154c	e5cd3018	 strb        r3, [sp, #0x18]

; 738  :     buffer[1]=(UCHAR)data;

  01550	e1dd36b0	 ldrh        r3, [sp, #0x60]
  01554	e20330ff	 and         r3, r3, #0xFF
  01558	e5cd3019	 strb        r3, [sp, #0x19]

; 739  :     switch(pDevice->mode)

  0155c	e59d3000	 ldr         r3, [sp]
  01560	e2833048	 add         r3, r3, #0x48
  01564	e5933000	 ldr         r3, [r3]
  01568	e58d3038	 str         r3, [sp, #0x38]
  0156c	e59d3038	 ldr         r3, [sp, #0x38]
  01570	e3530000	 cmp         r3, #0
  01574	0a000003	 beq         |$LN7@HDQ_Write|
  01578	e59d3038	 ldr         r3, [sp, #0x38]
  0157c	e3530001	 cmp         r3, #1
  01580	0a000003	 beq         |$LN6@HDQ_Write|
  01584	ea000008	 b           |$LN8@HDQ_Write|
  01588		 |$LN7@HDQ_Write|

; 740  :     {
; 741  :     case HDQ_MODE_HDQ8:
; 742  :         count=2;

  01588	e3a03002	 mov         r3, #2
  0158c	e58d3004	 str         r3, [sp, #4]

; 743  :         break;

  01590	ea000005	 b           |$LN8@HDQ_Write|
  01594		 |$LN6@HDQ_Write|

; 744  :     case HDQ_MODE_HDQ16:
; 745  :         buffer[2]=(UCHAR)(data >> 8);

  01594	e1dd36b0	 ldrh        r3, [sp, #0x60]
  01598	e1a03443	 mov         r3, r3, asr #8
  0159c	e20330ff	 and         r3, r3, #0xFF
  015a0	e5cd301a	 strb        r3, [sp, #0x1A]

; 746  :         count=3;

  015a4	e3a03003	 mov         r3, #3
  015a8	e58d3004	 str         r3, [sp, #4]
  015ac		 |$LN8@HDQ_Write|

; 747  :         break;
; 748  :     }
; 749  : // Two write cycles required
; 750  :     for(i=0; i < count; i++)

  015ac	e3a03000	 mov         r3, #0
  015b0	e58d300c	 str         r3, [sp, #0xC]
  015b4	ea000002	 b           |$LN5@HDQ_Write|
  015b8		 |$LN4@HDQ_Write|
  015b8	e59d300c	 ldr         r3, [sp, #0xC]
  015bc	e2833001	 add         r3, r3, #1
  015c0	e58d300c	 str         r3, [sp, #0xC]
  015c4		 |$LN5@HDQ_Write|
  015c4	e59d200c	 ldr         r2, [sp, #0xC]
  015c8	e59d3004	 ldr         r3, [sp, #4]
  015cc	e1520003	 cmp         r2, r3
  015d0	2a000060	 bcs         |$LN3@HDQ_Write|

; 751  :     {
; 752  : // Write the value, set the direction and go
; 753  :         OUTREG32(&pHDQRegs->ulHDQ_TX_DATA, buffer[i]);

  015d4	e28d2018	 add         r2, sp, #0x18
  015d8	e59d300c	 ldr         r3, [sp, #0xC]
  015dc	e0823003	 add         r3, r2, r3
  015e0	e5d32000	 ldrb        r2, [r3]
  015e4	e59d3014	 ldr         r3, [sp, #0x14]
  015e8	e2833004	 add         r3, r3, #4
  015ec	e5832000	 str         r2, [r3]

; 754  :         SETREG32(&pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_DIR); //sr

  015f0	e59d3014	 ldr         r3, [sp, #0x14]
  015f4	e283300c	 add         r3, r3, #0xC
  015f8	e5933000	 ldr         r3, [r3]
  015fc	e3832002	 orr         r2, r3, #2
  01600	e59d3014	 ldr         r3, [sp, #0x14]
  01604	e283300c	 add         r3, r3, #0xC
  01608	e5832000	 str         r2, [r3]

; 755  :         SETREG32(&pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_GO);

  0160c	e59d3014	 ldr         r3, [sp, #0x14]
  01610	e283300c	 add         r3, r3, #0xC
  01614	e5933000	 ldr         r3, [r3]
  01618	e3832010	 orr         r2, r3, #0x10
  0161c	e59d3014	 ldr         r3, [sp, #0x14]
  01620	e283300c	 add         r3, r3, #0xC
  01624	e5832000	 str         r2, [r3]

; 756  : 
; 757  : // Wait on TX complete interrupt.
; 758  :         if (WaitForSingleObject(pDevice->hIntrEvent, pDevice->txTimeout)==WAIT_TIMEOUT)

  01628	e59d3000	 ldr         r3, [sp]
  0162c	e2833014	 add         r3, r3, #0x14
  01630	e5931000	 ldr         r1, [r3]
  01634	e59d3000	 ldr         r3, [sp]
  01638	e2833044	 add         r3, r3, #0x44
  0163c	e5930000	 ldr         r0, [r3]
  01640	eb000000	 bl          WaitForSingleObject
  01644	e58d003c	 str         r0, [sp, #0x3C]
  01648	e59d203c	 ldr         r2, [sp, #0x3C]
  0164c	e3a03c01	 mov         r3, #1, 24
  01650	e3833002	 orr         r3, r3, #2
  01654	e1520003	 cmp         r2, r3
  01658	1a00000f	 bne         |$LN2@HDQ_Write|

; 759  :         {
; 760  :             DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_ERROR, (L"ERROR: HDQ_Write: "
; 761  :                 L"Timeout in Tx\r\n"));

  0165c	e59f317c	 ldr         r3, [pc, #0x17C]
  01660	e5933440	 ldr         r3, [r3, #0x440]
  01664	e2032a01	 and         r2, r3, #1, 20
  01668	e59f3170	 ldr         r3, [pc, #0x170]
  0166c	e5933440	 ldr         r3, [r3, #0x440]
  01670	e2033001	 and         r3, r3, #1
  01674	e1923003	 orrs        r3, r2, r3
  01678	0a000004	 beq         |$LN25@HDQ_Write|
  0167c	e59f0168	 ldr         r0, [pc, #0x168]
  01680	eb000000	 bl          NKDbgPrintfW
  01684	e3a03001	 mov         r3, #1
  01688	e58d3040	 str         r3, [sp, #0x40]
  0168c	ea000001	 b           |$LN26@HDQ_Write|
  01690		 |$LN25@HDQ_Write|
  01690	e3a03000	 mov         r3, #0
  01694	e58d3040	 str         r3, [sp, #0x40]
  01698		 |$LN26@HDQ_Write|

; 762  :             goto cleanUp;

  01698	ea000030	 b           |$cleanUp$43274|
  0169c		 |$LN2@HDQ_Write|

; 763  :         }
; 764  : 
; 765  : // Clear the interrupt
; 766  :         status=INREG32(&pHDQRegs->ulHDQ_INT_STATUS);

  0169c	e59d3014	 ldr         r3, [sp, #0x14]
  016a0	e2833010	 add         r3, r3, #0x10
  016a4	e5933000	 ldr         r3, [r3]
  016a8	e58d3010	 str         r3, [sp, #0x10]

; 767  :         InterruptDone(pDevice->sysIntr);

  016ac	e59d3000	 ldr         r3, [sp]
  016b0	e2833040	 add         r3, r3, #0x40
  016b4	e5930000	 ldr         r0, [r3]
  016b8	eb000000	 bl          InterruptDone

; 768  :         DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_INFO, (L"HDQ_Write: "
; 769  :             L"Interrupt status (%d) was 0x%x\r\n", 3 + i, status));

  016bc	e59f311c	 ldr         r3, [pc, #0x11C]
  016c0	e5933440	 ldr         r3, [r3, #0x440]
  016c4	e2032a01	 and         r2, r3, #1, 20
  016c8	e59f3110	 ldr         r3, [pc, #0x110]
  016cc	e5933440	 ldr         r3, [r3, #0x440]
  016d0	e2033010	 and         r3, r3, #0x10
  016d4	e1923003	 orrs        r3, r2, r3
  016d8	0a000007	 beq         |$LN27@HDQ_Write|
  016dc	e59d2010	 ldr         r2, [sp, #0x10]
  016e0	e59d300c	 ldr         r3, [sp, #0xC]
  016e4	e2831003	 add         r1, r3, #3
  016e8	e59f00f8	 ldr         r0, [pc, #0xF8]
  016ec	eb000000	 bl          NKDbgPrintfW
  016f0	e3a03001	 mov         r3, #1
  016f4	e58d3044	 str         r3, [sp, #0x44]
  016f8	ea000001	 b           |$LN28@HDQ_Write|
  016fc		 |$LN27@HDQ_Write|
  016fc	e3a03000	 mov         r3, #0
  01700	e58d3044	 str         r3, [sp, #0x44]
  01704		 |$LN28@HDQ_Write|

; 770  : 
; 771  : // Verify interrupt source
; 772  :         if((status & HDQ_INT_STATUS_TXCOMPLETE)==0)

  01704	e59d3010	 ldr         r3, [sp, #0x10]
  01708	e3130004	 tst         r3, #4
  0170c	1a000010	 bne         |$LN1@HDQ_Write|

; 773  :         {
; 774  :             DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_ERROR, (L"ERROR: HDQ_Write: "
; 775  :                 L"TX complete expected (0x%x)\r\n", status));

  01710	e59f30c8	 ldr         r3, [pc, #0xC8]
  01714	e5933440	 ldr         r3, [r3, #0x440]
  01718	e2032a01	 and         r2, r3, #1, 20
  0171c	e59f30bc	 ldr         r3, [pc, #0xBC]
  01720	e5933440	 ldr         r3, [r3, #0x440]
  01724	e2033001	 and         r3, r3, #1
  01728	e1923003	 orrs        r3, r2, r3
  0172c	0a000005	 beq         |$LN29@HDQ_Write|
  01730	e59d1010	 ldr         r1, [sp, #0x10]
  01734	e59f00a8	 ldr         r0, [pc, #0xA8]
  01738	eb000000	 bl          NKDbgPrintfW
  0173c	e3a03001	 mov         r3, #1
  01740	e58d3048	 str         r3, [sp, #0x48]
  01744	ea000001	 b           |$LN30@HDQ_Write|
  01748		 |$LN29@HDQ_Write|
  01748	e3a03000	 mov         r3, #0
  0174c	e58d3048	 str         r3, [sp, #0x48]
  01750		 |$LN30@HDQ_Write|

; 776  :             goto cleanUp;

  01750	ea000002	 b           |$cleanUp$43274|
  01754		 |$LN1@HDQ_Write|

; 777  :         }
; 778  :     };

  01754	eaffff97	 b           |$LN4@HDQ_Write|
  01758		 |$LN3@HDQ_Write|

; 779  : 
; 780  : // Done
; 781  :     rc=TRUE;

  01758	e3a03001	 mov         r3, #1
  0175c	e58d3008	 str         r3, [sp, #8]
  01760		 |$cleanUp$43274|

; 782  : 
; 783  : cleanUp:
; 784  :     SetDevicePowerState(pDevice->hParentBus, D4, NULL);

  01760	e3a02000	 mov         r2, #0
  01764	e3a01004	 mov         r1, #4
  01768	e59d3000	 ldr         r3, [sp]
  0176c	e2833024	 add         r3, r3, #0x24
  01770	e5930000	 ldr         r0, [r3]
  01774	eb000000	 bl          SetDevicePowerState

; 785  :     LeaveCriticalSection(&pDevice->cs);

  01778	e59d3000	 ldr         r3, [sp]
  0177c	e283002c	 add         r0, r3, #0x2C
  01780	eb000000	 bl          LeaveCriticalSection
  01784		 |$exit$43214|

; 786  : 
; 787  : exit:    
; 788  :     DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_FUNCTION, (L"---HDQ_Write(rc = %d)\r\n", rc));

  01784	e59f3054	 ldr         r3, [pc, #0x54]
  01788	e5933440	 ldr         r3, [r3, #0x440]
  0178c	e2032a01	 and         r2, r3, #1, 20
  01790	e59f3048	 ldr         r3, [pc, #0x48]
  01794	e5933440	 ldr         r3, [r3, #0x440]
  01798	e2033004	 and         r3, r3, #4
  0179c	e1923003	 orrs        r3, r2, r3
  017a0	0a000005	 beq         |$LN31@HDQ_Write|
  017a4	e59d1008	 ldr         r1, [sp, #8]
  017a8	e59f002c	 ldr         r0, [pc, #0x2C]
  017ac	eb000000	 bl          NKDbgPrintfW
  017b0	e3a03001	 mov         r3, #1
  017b4	e58d304c	 str         r3, [sp, #0x4C]
  017b8	ea000001	 b           |$LN32@HDQ_Write|
  017bc		 |$LN31@HDQ_Write|
  017bc	e3a03000	 mov         r3, #0
  017c0	e58d304c	 str         r3, [sp, #0x4C]
  017c4		 |$LN32@HDQ_Write|

; 789  :     return rc;

  017c4	e59d3008	 ldr         r3, [sp, #8]
  017c8	e58d301c	 str         r3, [sp, #0x1C]

; 790  : }

  017cc	e59d001c	 ldr         r0, [sp, #0x1C]
  017d0	e28dd050	 add         sp, sp, #0x50
  017d4	e89d6000	 ldmia       sp, {sp, lr}
  017d8	e12fff1e	 bx          lr
  017dc		 |$LN36@HDQ_Write|
  017dc		 |$LN37@HDQ_Write|
  017dc	00000000	 DCD         |??_C@_1DA@HGOCGKJE@?$AA?9?$AA?9?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  017e0		 |$LN38@HDQ_Write|
  017e0	00000000	 DCD         |dpCurSettings|
  017e4		 |$LN39@HDQ_Write|
  017e4	00000000	 DCD         |??_C@_1GA@FONCJPAC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAT?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?5?$AAe?$AAx@|
  017e8		 |$LN40@HDQ_Write|
  017e8	00000000	 DCD         |??_C@_1FI@DGMHCICA@?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ@|
  017ec		 |$LN41@HDQ_Write|
  017ec	00000000	 DCD         |??_C@_1EE@NIJJBKAI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAi?$AAn?$AA?5?$AAT?$AAx?$AA?$AN@|
  017f0		 |$LN42@HDQ_Write|
  017f0	00000000	 DCD         |??_C@_1FK@IIKDHJI@?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA2?$AA?$CJ?$AA?5@|
  017f4		 |$LN43@HDQ_Write|
  017f4	00000000	 DCD         |??_C@_1FE@MFNDONKP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAi?$AAn?$AA?5?$AAi?$AAn?$AAi@|
  017f8		 |$LN44@HDQ_Write|
  017f8	00000000	 DCD         |??_C@_1FK@MBJFDPCH@?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA1?$AA?$CJ?$AA?5@|
  017fc		 |$LN45@HDQ_Write|
  017fc	00000000	 DCD         |??_C@_1GA@JCBIABAG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt@|
  01800		 |$LN46@HDQ_Write|
  01800	68647144	 DCD         0x68647144
  01804		 |$LN47@HDQ_Write|
  01804	00000000	 DCD         |??_C@_1EK@BBLNLFKB@?$AA?$CL?$AA?$CL?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF@|
  01808		 |$M43754|

			 ENDP  ; |HDQ_Write|

	EXPORT	|??_C@_1DA@IBKJNOCI@?$AA?9?$AA?9?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?$CI?$AAr?$AAc?$AA?$DN?$AA?$CF?$AA0?$AA1?$AAl?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@NPOPBEKL@?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?0?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?3@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@GGPAELDP@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAR?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AAd?$AA?5?$AAd?$AAa?$AAt?$AAa?$AA?$DN?$AA0?$AAx?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@KJINGCIC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAR?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?5?$AAe?$AAx?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@JAFJNKLA@?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA5?$AA?$CJ?$AA?5?$AAw@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@JPLGDBKC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAn?$AA?5?$AAR?$AAX?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@PAPAPAMD@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAT?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AAd?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?$CJ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@DNNBIDHO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAT?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?5?$AAe?$AAx?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@NJBGMNIP@?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA3?$AA?$CJ?$AA?5?$AAw@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@FAGKBEDD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?$CB?$AA?$CB?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAi?$AAn?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@OBNDMAJK@?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA1?$AA?$CJ?$AA?5?$AAw@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@EFNENMIL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@PBFGDDMO@?$AA?$CL?$AA?$CL?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@| [ DATA ] ; `string'
	IMPORT	|Sleep|

  00050			 AREA	 |.pdata|, PDATA
|$T43800| DCD	|$LN50@HDQ_Read|
	DCD	0x4001d604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@IBKJNOCI@?$AA?9?$AA?9?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?$CI?$AAr?$AAc?$AA?$DN?$AA?$CF?$AA0?$AA1?$AAl?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_"
	DCB	0x0, "R", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "(", 0x0, "r"
	DCB	0x0, "c", 0x0, "=", 0x0, "%", 0x0, "0", 0x0, "1", 0x0, "l"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@NPOPBEKL@?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?0?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?3@| DCB "H"
	DCB	0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "R", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, ":", 0x0, " ", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, ":", 0x0, "="
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "D", 0x0, "a", 0x0, "t", 0x0, "a"
	DCB	0x0, ":", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@GGPAELDP@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAR?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AAd?$AA?5?$AAd?$AAa?$AAt?$AAa?$AA?$DN?$AA0?$AAx?$AA?$CF@| DCB 0x9
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "R", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "X"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "d"
	DCB	0x0, "a", 0x0, "t", 0x0, "a", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@KJINGCIC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAR?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?5?$AAe?$AAx?$AAp@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "R", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "X"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "e", 0x0, "x"
	DCB	0x0, "p", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@JAFJNKLA@?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA5?$AA?$CJ?$AA?5?$AAw@| DCB "H"
	DCB	0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "R", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "s", 0x0, " ", 0x0, "(", 0x0, "5", 0x0, ")", 0x0, " "
	DCB	0x0, "w", 0x0, "a", 0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@JPLGDBKC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAn?$AA?5?$AAR?$AAX?$AA?5?$AAa@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "R", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "T", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, " "
	DCB	0x0, "o", 0x0, "n", 0x0, " ", 0x0, "R", 0x0, "X", 0x0, " "
	DCB	0x0, "a", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "l", 0x0, "d"
	DCB	0x0, " ", 0x0, "m", 0x0, "s", 0x0, "e", 0x0, "c", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@PAPAPAMD@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAT?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AAd?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?$CJ@| DCB 0x9
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "R", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "T", 0x0, "X"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, ")", 0x0, " ", 0x0, "o", 0x0, "k", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@DNNBIDHO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAT?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?5?$AAe?$AAx?$AAp@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "R", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "T", 0x0, "X"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "e", 0x0, "x"
	DCB	0x0, "p", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@NJBGMNIP@?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA3?$AA?$CJ?$AA?5?$AAw@| DCB "H"
	DCB	0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "R", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "s", 0x0, " ", 0x0, "(", 0x0, "3", 0x0, ")", 0x0, " "
	DCB	0x0, "w", 0x0, "a", 0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@FAGKBEDD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?$CB?$AA?$CB?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAi?$AAn?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "!"
	DCB	0x0, "!", 0x0, " ", 0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_"
	DCB	0x0, "R", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "(", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, " ", 0x0, "T", 0x0, "X", 0x0, " ", 0x0, "f", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "%", 0x0, "l", 0x0, "d", 0x0, " "
	DCB	0x0, "m", 0x0, "s", 0x0, "e", 0x0, "c", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@OBNDMAJK@?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA1?$AA?$CJ?$AA?5?$AAw@| DCB "H"
	DCB	0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "R", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "s", 0x0, " ", 0x0, "(", 0x0, "1", 0x0, ")", 0x0, " "
	DCB	0x0, "w", 0x0, "a", 0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@EFNENMIL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "R", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "p", 0x0, "a"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@PBFGDDMO@?$AA?$CL?$AA?$CL?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@| DCB "+"
	DCB	0x0, "+", 0x0, "+", 0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_"
	DCB	0x0, "R", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ","
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  01808			 AREA	 |.text|, CODE, ARM

  01808		 |HDQ_Read| PROC

; 799  : {

  01808		 |$LN50@HDQ_Read|
  01808	e1a0c00d	 mov         r12, sp
  0180c	e92d0007	 stmdb       sp!, {r0 - r2}
  01810	e92d5000	 stmdb       sp!, {r12, lr}
  01814	e24dd064	 sub         sp, sp, #0x64
  01818		 |$M43797|

; 800  :     BOOL rc=FALSE;

  01818	e3a03000	 mov         r3, #0
  0181c	e58d3008	 str         r3, [sp, #8]

; 801  :     HDQ_DEVICE* pDevice=(HDQ_DEVICE*)context;

  01820	e59d306c	 ldr         r3, [sp, #0x6C]
  01824	e58d3000	 str         r3, [sp]

; 802  :     OMAP2420_HDQ_REGS* pHDQRegs=NULL;

  01828	e3a03000	 mov         r3, #0
  0182c	e58d3014	 str         r3, [sp, #0x14]

; 803  :     DWORD status, count, i;
; 804  :     UCHAR buffer[2];
; 805  : //
; 806  : 
; 807  :     DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_FUNCTION, (L"+++HDQ_Read(0x%08x, 0x%02x, 0x%08x)\r\n", context, address, pData));

  01830	e59f36e4	 ldr         r3, [pc, #0x6E4]
  01834	e5933440	 ldr         r3, [r3, #0x440]
  01838	e2032a01	 and         r2, r3, #1, 20
  0183c	e59f36d8	 ldr         r3, [pc, #0x6D8]
  01840	e5933440	 ldr         r3, [r3, #0x440]
  01844	e2033004	 and         r3, r3, #4
  01848	e1923003	 orrs        r3, r2, r3
  0184c	0a000007	 beq         |$LN22@HDQ_Read|
  01850	e59d3074	 ldr         r3, [sp, #0x74]
  01854	e5dd2070	 ldrb        r2, [sp, #0x70]
  01858	e59d106c	 ldr         r1, [sp, #0x6C]
  0185c	e59f06f8	 ldr         r0, [pc, #0x6F8]
  01860	eb000000	 bl          NKDbgPrintfW
  01864	e3a03001	 mov         r3, #1
  01868	e58d3020	 str         r3, [sp, #0x20]
  0186c	ea000001	 b           |$LN23@HDQ_Read|
  01870		 |$LN22@HDQ_Read|
  01870	e3a03000	 mov         r3, #0
  01874	e58d3020	 str         r3, [sp, #0x20]
  01878		 |$LN23@HDQ_Read|

; 808  : 
; 809  :     Sleep(cliDelay1); // tentaive

  01878	e59f36d8	 ldr         r3, [pc, #0x6D8]
  0187c	e5930000	 ldr         r0, [r3]
  01880	eb000000	 bl          Sleep

; 810  : // Check if we get correct context
; 811  :     if(pDevice==NULL || pDevice->cookie!=HDQ_DEVICE_COOKIE)

  01884	e59d3000	 ldr         r3, [sp]
  01888	e3530000	 cmp         r3, #0
  0188c	0a000004	 beq         |$LN18@HDQ_Read|
  01890	e59d3000	 ldr         r3, [sp]
  01894	e5932000	 ldr         r2, [r3]
  01898	e59f36b4	 ldr         r3, [pc, #0x6B4]
  0189c	e1520003	 cmp         r2, r3
  018a0	0a00000f	 beq         |$LN19@HDQ_Read|
  018a4		 |$LN18@HDQ_Read|

; 812  :     {
; 813  :         DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_ERROR, (L"ERROR: HDQ_Read: "
; 814  :             L"Incorrect context parameter\r\n"));

  018a4	e59f3670	 ldr         r3, [pc, #0x670]
  018a8	e5933440	 ldr         r3, [r3, #0x440]
  018ac	e2032a01	 and         r2, r3, #1, 20
  018b0	e59f3664	 ldr         r3, [pc, #0x664]
  018b4	e5933440	 ldr         r3, [r3, #0x440]
  018b8	e2033001	 and         r3, r3, #1
  018bc	e1923003	 orrs        r3, r2, r3
  018c0	0a000004	 beq         |$LN24@HDQ_Read|
  018c4	e59f0684	 ldr         r0, [pc, #0x684]
  018c8	eb000000	 bl          NKDbgPrintfW
  018cc	e3a03001	 mov         r3, #1
  018d0	e58d3024	 str         r3, [sp, #0x24]
  018d4	ea000001	 b           |$LN25@HDQ_Read|
  018d8		 |$LN24@HDQ_Read|
  018d8	e3a03000	 mov         r3, #0
  018dc	e58d3024	 str         r3, [sp, #0x24]
  018e0		 |$LN25@HDQ_Read|

; 815  :         goto exit;

  018e0	ea000176	 b           |$exit$43308|
  018e4		 |$LN19@HDQ_Read|

; 816  :     }
; 817  : 
; 818  : // Get hardware
; 819  :     pHDQRegs=pDevice->pHDQRegs;

  018e4	e59d3000	 ldr         r3, [sp]
  018e8	e2833020	 add         r3, r3, #0x20
  018ec	e5933000	 ldr         r3, [r3]
  018f0	e58d3014	 str         r3, [sp, #0x14]

; 820  :     EnterCriticalSection(&pDevice->cs);

  018f4	e59d3000	 ldr         r3, [sp]
  018f8	e283002c	 add         r0, r3, #0x2C
  018fc	eb000000	 bl          EnterCriticalSection

; 821  : 
; 822  : // Make sure that clock is present
; 823  :     SetDevicePowerState(pDevice->hParentBus, D0, NULL);

  01900	e3a02000	 mov         r2, #0
  01904	e3a01000	 mov         r1, #0
  01908	e59d3000	 ldr         r3, [sp]
  0190c	e2833024	 add         r3, r3, #0x24
  01910	e5930000	 ldr         r0, [r3]
  01914	eb000000	 bl          SetDevicePowerState

; 824  :     HDQ_PowerUp(context);

  01918	e59d006c	 ldr         r0, [sp, #0x6C]
  0191c	eb000000	 bl          HDQ_PowerUp

; 825  : 
; 826  :     switch(pDevice->mode)

  01920	e59d3000	 ldr         r3, [sp]
  01924	e2833048	 add         r3, r3, #0x48
  01928	e5933000	 ldr         r3, [r3]
  0192c	e58d3028	 str         r3, [sp, #0x28]
  01930	e59d3028	 ldr         r3, [sp, #0x28]
  01934	e3530000	 cmp         r3, #0
  01938	0a000003	 beq         |$LN15@HDQ_Read|
  0193c	e59d3028	 ldr         r3, [sp, #0x28]
  01940	e3530001	 cmp         r3, #1
  01944	0a000003	 beq         |$LN14@HDQ_Read|
  01948	ea000004	 b           |$LN16@HDQ_Read|
  0194c		 |$LN15@HDQ_Read|

; 827  :     {
; 828  :     case HDQ_MODE_HDQ8:
; 829  :         count=1;

  0194c	e3a03001	 mov         r3, #1
  01950	e58d3004	 str         r3, [sp, #4]

; 830  :         break;

  01954	ea000001	 b           |$LN16@HDQ_Read|
  01958		 |$LN14@HDQ_Read|

; 831  :     case HDQ_MODE_HDQ16:
; 832  :         count=2;

  01958	e3a03002	 mov         r3, #2
  0195c	e58d3004	 str         r3, [sp, #4]
  01960		 |$LN16@HDQ_Read|

; 833  :         break;
; 834  :     };
; 835  : 
; 836  : // Clear the interrupt.
; 837  :     status=INREG32(&pHDQRegs->ulHDQ_INT_STATUS);

  01960	e59d3014	 ldr         r3, [sp, #0x14]
  01964	e2833010	 add         r3, r3, #0x10
  01968	e5933000	 ldr         r3, [r3]
  0196c	e58d3010	 str         r3, [sp, #0x10]

; 838  :     DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_INFO, (L"HDQ_Read: "
; 839  :         L"Interrupt status (1) was 0x%02x\r\n", status));

  01970	e59f35a4	 ldr         r3, [pc, #0x5A4]
  01974	e5933440	 ldr         r3, [r3, #0x440]
  01978	e2032a01	 and         r2, r3, #1, 20
  0197c	e59f3598	 ldr         r3, [pc, #0x598]
  01980	e5933440	 ldr         r3, [r3, #0x440]
  01984	e2033010	 and         r3, r3, #0x10
  01988	e1923003	 orrs        r3, r2, r3
  0198c	0a000005	 beq         |$LN26@HDQ_Read|
  01990	e59d1010	 ldr         r1, [sp, #0x10]
  01994	e59f05b0	 ldr         r0, [pc, #0x5B0]
  01998	eb000000	 bl          NKDbgPrintfW
  0199c	e3a03001	 mov         r3, #1
  019a0	e58d302c	 str         r3, [sp, #0x2C]
  019a4	ea000001	 b           |$LN27@HDQ_Read|
  019a8		 |$LN26@HDQ_Read|
  019a8	e3a03000	 mov         r3, #0
  019ac	e58d302c	 str         r3, [sp, #0x2C]
  019b0		 |$LN27@HDQ_Read|

; 840  : 
; 841  : // Need to notify InterruptDone right away
; 842  :     InterruptDone(pDevice->sysIntr);

  019b0	e59d3000	 ldr         r3, [sp]
  019b4	e2833040	 add         r3, r3, #0x40
  019b8	e5930000	 ldr         r0, [r3]
  019bc	eb000000	 bl          InterruptDone

; 843  : // Step 0: send break pulse
; 844  : // get into status mode; Send break pulse in HDQ mode
; 845  :     SETREG32(&pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_MODE);

  019c0	e59d3014	 ldr         r3, [sp, #0x14]
  019c4	e283300c	 add         r3, r3, #0xC
  019c8	e5933000	 ldr         r3, [r3]
  019cc	e3832001	 orr         r2, r3, #1
  019d0	e59d3014	 ldr         r3, [sp, #0x14]
  019d4	e283300c	 add         r3, r3, #0xC
  019d8	e5832000	 str         r2, [r3]

; 846  :     SETREG32(&pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_INITIALIZATION);

  019dc	e59d3014	 ldr         r3, [sp, #0x14]
  019e0	e283300c	 add         r3, r3, #0xC
  019e4	e5933000	 ldr         r3, [r3]
  019e8	e3832004	 orr         r2, r3, #4
  019ec	e59d3014	 ldr         r3, [sp, #0x14]
  019f0	e283300c	 add         r3, r3, #0xC
  019f4	e5832000	 str         r2, [r3]

; 847  : //    DEBUGMSG(ZONE_HDQ_1WIRE, (L"\tHDQ_Read: 1) Will Send out the break pulse and wait for %ld msec.\r\n",pDevice->breakTimeout));
; 848  : //    DEBUGMSG(ZONE_HDQ_1WIRE, (L"\tHDQ_Read: 2) Next switch to Write mode, send out register Nr and wait for %ld msec.\r\n",pDevice->txTimeout));
; 849  : //    DEBUGMSG(ZONE_HDQ_1WIRE, (L"\tHDQ_Read: 3) Then switch to Read mode and wait for %ld msec.\r\n",pDevice->rxTimeout));
; 850  : // switch to go mode
; 851  :     SETREG32(&pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_GO);

  019f8	e59d3014	 ldr         r3, [sp, #0x14]
  019fc	e283300c	 add         r3, r3, #0xC
  01a00	e5933000	 ldr         r3, [r3]
  01a04	e3832010	 orr         r2, r3, #0x10
  01a08	e59d3014	 ldr         r3, [sp, #0x14]
  01a0c	e283300c	 add         r3, r3, #0xC
  01a10	e5832000	 str         r2, [r3]

; 852  : 
; 853  : // Wait for completion of break pulse to be sent out
; 854  : // there are no interrupts set on break pulse, so just wait for it to be sent out
; 855  :     Sleep(cliDelay2); // was Sleep(pDevice->breakTimeout);  0.32 msec or so

  01a14	e59f352c	 ldr         r3, [pc, #0x52C]
  01a18	e5930000	 ldr         r0, [r3]
  01a1c	eb000000	 bl          Sleep

; 856  : // Back to HDQ mode.
; 857  :     CLRREG32(&pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_MODE);

  01a20	e59d3014	 ldr         r3, [sp, #0x14]
  01a24	e283300c	 add         r3, r3, #0xC
  01a28	e5932000	 ldr         r2, [r3]
  01a2c	e3e03001	 mvn         r3, #1
  01a30	e0022003	 and         r2, r2, r3
  01a34	e59d3014	 ldr         r3, [sp, #0x14]
  01a38	e283300c	 add         r3, r3, #0xC
  01a3c	e5832000	 str         r2, [r3]

; 858  : // Step 1:
; 859  : // Write the value, 
; 860  :     OUTREG32(&pHDQRegs->ulHDQ_TX_DATA, address); // 

  01a40	e5dd2070	 ldrb        r2, [sp, #0x70]
  01a44	e59d3014	 ldr         r3, [sp, #0x14]
  01a48	e2833004	 add         r3, r3, #4
  01a4c	e5832000	 str         r2, [r3]

; 861  : // Step 2: set the direction as Write and go
; 862  :     CLRREG32(&pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_DIR); // was SET

  01a50	e59d3014	 ldr         r3, [sp, #0x14]
  01a54	e283300c	 add         r3, r3, #0xC
  01a58	e5932000	 ldr         r2, [r3]
  01a5c	e3e03002	 mvn         r3, #2
  01a60	e0022003	 and         r2, r2, r3
  01a64	e59d3014	 ldr         r3, [sp, #0x14]
  01a68	e283300c	 add         r3, r3, #0xC
  01a6c	e5832000	 str         r2, [r3]

; 863  :     SETREG32(&pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_GO);

  01a70	e59d3014	 ldr         r3, [sp, #0x14]
  01a74	e283300c	 add         r3, r3, #0xC
  01a78	e5933000	 ldr         r3, [r3]
  01a7c	e3832010	 orr         r2, r3, #0x10
  01a80	e59d3014	 ldr         r3, [sp, #0x14]
  01a84	e283300c	 add         r3, r3, #0xC
  01a88	e5832000	 str         r2, [r3]

; 864  : //
; 865  : // Wait on completion on transmit data 
; 866  :     if(WaitForSingleObject(pDevice->hIntrEvent, pDevice->txTimeout)==WAIT_TIMEOUT)

  01a8c	e59d3000	 ldr         r3, [sp]
  01a90	e2833014	 add         r3, r3, #0x14
  01a94	e5931000	 ldr         r1, [r3]
  01a98	e59d3000	 ldr         r3, [sp]
  01a9c	e2833044	 add         r3, r3, #0x44
  01aa0	e5930000	 ldr         r0, [r3]
  01aa4	eb000000	 bl          WaitForSingleObject
  01aa8	e58d0030	 str         r0, [sp, #0x30]
  01aac	e59d2030	 ldr         r2, [sp, #0x30]
  01ab0	e3a03c01	 mov         r3, #1, 24
  01ab4	e3833002	 orr         r3, r3, #2
  01ab8	e1520003	 cmp         r2, r3
  01abc	1a000011	 bne         |$LN13@HDQ_Read|

; 867  :     {
; 868  :         DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_INFO, (L"ERROR !! HDQ_Read(): "
; 869  :             L"Timeout in TX for %ld msec.\r\n",pDevice->txTimeout));

  01ac0	e59f3454	 ldr         r3, [pc, #0x454]
  01ac4	e5933440	 ldr         r3, [r3, #0x440]
  01ac8	e2032a01	 and         r2, r3, #1, 20
  01acc	e59f3448	 ldr         r3, [pc, #0x448]
  01ad0	e5933440	 ldr         r3, [r3, #0x440]
  01ad4	e2033010	 and         r3, r3, #0x10
  01ad8	e1923003	 orrs        r3, r2, r3
  01adc	0a000007	 beq         |$LN28@HDQ_Read|
  01ae0	e59d3000	 ldr         r3, [sp]
  01ae4	e2833014	 add         r3, r3, #0x14
  01ae8	e5931000	 ldr         r1, [r3]
  01aec	e59f0450	 ldr         r0, [pc, #0x450]
  01af0	eb000000	 bl          NKDbgPrintfW
  01af4	e3a03001	 mov         r3, #1
  01af8	e58d3034	 str         r3, [sp, #0x34]
  01afc	ea000001	 b           |$LN29@HDQ_Read|
  01b00		 |$LN28@HDQ_Read|
  01b00	e3a03000	 mov         r3, #0
  01b04	e58d3034	 str         r3, [sp, #0x34]
  01b08		 |$LN29@HDQ_Read|
  01b08		 |$LN13@HDQ_Read|

; 870  : //      goto cleanUp;
; 871  :     }
; 872  : 
; 873  : // Clear interrupt
; 874  :     status=INREG32(&pHDQRegs->ulHDQ_INT_STATUS);

  01b08	e59d3014	 ldr         r3, [sp, #0x14]
  01b0c	e2833010	 add         r3, r3, #0x10
  01b10	e5933000	 ldr         r3, [r3]
  01b14	e58d3010	 str         r3, [sp, #0x10]

; 875  :     DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_INFO, (L"HDQ_Read: "
; 876  :         L"Interrupt status (3) was 0x%02x\r\n", status));

  01b18	e59f33fc	 ldr         r3, [pc, #0x3FC]
  01b1c	e5933440	 ldr         r3, [r3, #0x440]
  01b20	e2032a01	 and         r2, r3, #1, 20
  01b24	e59f33f0	 ldr         r3, [pc, #0x3F0]
  01b28	e5933440	 ldr         r3, [r3, #0x440]
  01b2c	e2033010	 and         r3, r3, #0x10
  01b30	e1923003	 orrs        r3, r2, r3
  01b34	0a000005	 beq         |$LN30@HDQ_Read|
  01b38	e59d1010	 ldr         r1, [sp, #0x10]
  01b3c	e59f03fc	 ldr         r0, [pc, #0x3FC]
  01b40	eb000000	 bl          NKDbgPrintfW
  01b44	e3a03001	 mov         r3, #1
  01b48	e58d3038	 str         r3, [sp, #0x38]
  01b4c	ea000001	 b           |$LN31@HDQ_Read|
  01b50		 |$LN30@HDQ_Read|
  01b50	e3a03000	 mov         r3, #0
  01b54	e58d3038	 str         r3, [sp, #0x38]
  01b58		 |$LN31@HDQ_Read|

; 877  : 
; 878  : // Need to notify InterruptDone right away
; 879  :     InterruptDone(pDevice->sysIntr);

  01b58	e59d3000	 ldr         r3, [sp]
  01b5c	e2833040	 add         r3, r3, #0x40
  01b60	e5930000	 ldr         r0, [r3]
  01b64	eb000000	 bl          InterruptDone

; 880  : 
; 881  : // Verify that register address was sent out completely.
; 882  :     if((status & HDQ_INT_STATUS_TXCOMPLETE)==0)

  01b68	e59d3010	 ldr         r3, [sp, #0x10]
  01b6c	e3130004	 tst         r3, #4
  01b70	1a00000c	 bne         |$LN12@HDQ_Read|

; 883  :     { // sr further timing adjustment may be helpful. It works with current settings well so disregard this msg
; 884  :         DEBUGMSG(ZONE_HDQ_1WIRE, (L"ERROR: HDQ_Read: "
; 885  :             L"TX complete expected (0x%02x)\r\n", status));

  01b74	e59f33a0	 ldr         r3, [pc, #0x3A0]
  01b78	e5933440	 ldr         r3, [r3, #0x440]
  01b7c	e3130a01	 tst         r3, #1, 20
  01b80	0a000005	 beq         |$LN32@HDQ_Read|
  01b84	e59d1010	 ldr         r1, [sp, #0x10]
  01b88	e59f03ac	 ldr         r0, [pc, #0x3AC]
  01b8c	eb000000	 bl          NKDbgPrintfW
  01b90	e3a03001	 mov         r3, #1
  01b94	e58d303c	 str         r3, [sp, #0x3C]
  01b98	ea000001	 b           |$LN33@HDQ_Read|
  01b9c		 |$LN32@HDQ_Read|
  01b9c	e3a03000	 mov         r3, #0
  01ba0	e58d303c	 str         r3, [sp, #0x3C]
  01ba4		 |$LN33@HDQ_Read|

; 886  : //        goto cleanUp;
; 887  :     }
; 888  :     else

  01ba4	ea00000f	 b           |$LN11@HDQ_Read|
  01ba8		 |$LN12@HDQ_Read|

; 889  :         DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_INFO, (L"\tHDQ_Read: "
; 890  :         L"TX completed (0x%02x) ok.\r\n", status));

  01ba8	e59f336c	 ldr         r3, [pc, #0x36C]
  01bac	e5933440	 ldr         r3, [r3, #0x440]
  01bb0	e2032a01	 and         r2, r3, #1, 20
  01bb4	e59f3360	 ldr         r3, [pc, #0x360]
  01bb8	e5933440	 ldr         r3, [r3, #0x440]
  01bbc	e2033010	 and         r3, r3, #0x10
  01bc0	e1923003	 orrs        r3, r2, r3
  01bc4	0a000005	 beq         |$LN34@HDQ_Read|
  01bc8	e59d1010	 ldr         r1, [sp, #0x10]
  01bcc	e59f0364	 ldr         r0, [pc, #0x364]
  01bd0	eb000000	 bl          NKDbgPrintfW
  01bd4	e3a03001	 mov         r3, #1
  01bd8	e58d3040	 str         r3, [sp, #0x40]
  01bdc	ea000001	 b           |$LN35@HDQ_Read|
  01be0		 |$LN34@HDQ_Read|
  01be0	e3a03000	 mov         r3, #0
  01be4	e58d3040	 str         r3, [sp, #0x40]
  01be8		 |$LN35@HDQ_Read|
  01be8		 |$LN11@HDQ_Read|

; 891  : // pre-Step 3:
; 892  :     status=0; // INREG32(&pHDQRegs->ulHDQ_INT_STATUS);

  01be8	e3a03000	 mov         r3, #0
  01bec	e58d3010	 str         r3, [sp, #0x10]

; 893  : 
; 894  :     for(i=0; i<count; i++)

  01bf0	e3a03000	 mov         r3, #0
  01bf4	e58d300c	 str         r3, [sp, #0xC]
  01bf8	ea000002	 b           |$LN10@HDQ_Read|
  01bfc		 |$LN9@HDQ_Read|
  01bfc	e59d300c	 ldr         r3, [sp, #0xC]
  01c00	e2833001	 add         r3, r3, #1
  01c04	e58d300c	 str         r3, [sp, #0xC]
  01c08		 |$LN10@HDQ_Read|
  01c08	e59d200c	 ldr         r2, [sp, #0xC]
  01c0c	e59d3004	 ldr         r3, [sp, #4]
  01c10	e1520003	 cmp         r2, r3
  01c14	2a000074	 bcs         |$LN8@HDQ_Read|

; 895  :     {
; 896  : // The RX is slave driven, if we are slow byte can be already done.
; 897  :         if((status & HDQ_INT_STATUS_RXCOMPLETE)==0)

  01c18	e59d3010	 ldr         r3, [sp, #0x10]
  01c1c	e3130002	 tst         r3, #2
  01c20	1a000044	 bne         |$LN7@HDQ_Read|

; 898  :         {
; 899  : // Indicate read & go: 0 to Read bit, 1 to GO bit
; 900  : // Step 3:
; 901  :             SETREG32(&pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_DIR); // was CLR

  01c24	e59d3014	 ldr         r3, [sp, #0x14]
  01c28	e283300c	 add         r3, r3, #0xC
  01c2c	e5933000	 ldr         r3, [r3]
  01c30	e3832002	 orr         r2, r3, #2
  01c34	e59d3014	 ldr         r3, [sp, #0x14]
  01c38	e283300c	 add         r3, r3, #0xC
  01c3c	e5832000	 str         r2, [r3]

; 902  :             SETREG32(&pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_GO);

  01c40	e59d3014	 ldr         r3, [sp, #0x14]
  01c44	e283300c	 add         r3, r3, #0xC
  01c48	e5933000	 ldr         r3, [r3]
  01c4c	e3832010	 orr         r2, r3, #0x10
  01c50	e59d3014	 ldr         r3, [sp, #0x14]
  01c54	e283300c	 add         r3, r3, #0xC
  01c58	e5832000	 str         r2, [r3]

; 903  :             Sleep(cliDelay3);

  01c5c	e59f32d0	 ldr         r3, [pc, #0x2D0]
  01c60	e5930000	 ldr         r0, [r3]
  01c64	eb000000	 bl          Sleep

; 904  : // Wait on RX complete interrupt
; 905  :             if(WaitForSingleObject(pDevice->hIntrEvent, pDevice->rxTimeout)==WAIT_TIMEOUT)

  01c68	e59d3000	 ldr         r3, [sp]
  01c6c	e2833018	 add         r3, r3, #0x18
  01c70	e5931000	 ldr         r1, [r3]
  01c74	e59d3000	 ldr         r3, [sp]
  01c78	e2833044	 add         r3, r3, #0x44
  01c7c	e5930000	 ldr         r0, [r3]
  01c80	eb000000	 bl          WaitForSingleObject
  01c84	e58d0044	 str         r0, [sp, #0x44]
  01c88	e59d2044	 ldr         r2, [sp, #0x44]
  01c8c	e3a03c01	 mov         r3, #1, 24
  01c90	e3833002	 orr         r3, r3, #2
  01c94	e1520003	 cmp         r2, r3
  01c98	1a00000e	 bne         |$LN6@HDQ_Read|

; 906  :             {
; 907  :                 DEBUGMSG(ZONE_ERROR, (L"ERROR: HDQ_Read: "
; 908  :                     L"Timeout on RX at %ld msec\r\n",pDevice->rxTimeout));

  01c9c	e59f3278	 ldr         r3, [pc, #0x278]
  01ca0	e5933440	 ldr         r3, [r3, #0x440]
  01ca4	e3130001	 tst         r3, #1
  01ca8	0a000007	 beq         |$LN36@HDQ_Read|
  01cac	e59d3000	 ldr         r3, [sp]
  01cb0	e2833018	 add         r3, r3, #0x18
  01cb4	e5931000	 ldr         r1, [r3]
  01cb8	e59f0270	 ldr         r0, [pc, #0x270]
  01cbc	eb000000	 bl          NKDbgPrintfW
  01cc0	e3a03001	 mov         r3, #1
  01cc4	e58d3048	 str         r3, [sp, #0x48]
  01cc8	ea000001	 b           |$LN37@HDQ_Read|
  01ccc		 |$LN36@HDQ_Read|
  01ccc	e3a03000	 mov         r3, #0
  01cd0	e58d3048	 str         r3, [sp, #0x48]
  01cd4		 |$LN37@HDQ_Read|

; 909  :                 goto cleanUp;

  01cd4	ea000070	 b           |$cleanUp$43383|
  01cd8		 |$LN6@HDQ_Read|

; 910  :             }
; 911  : // Clear interrupt
; 912  :             status=INREG32(&pHDQRegs->ulHDQ_INT_STATUS);

  01cd8	e59d3014	 ldr         r3, [sp, #0x14]
  01cdc	e2833010	 add         r3, r3, #0x10
  01ce0	e5933000	 ldr         r3, [r3]
  01ce4	e58d3010	 str         r3, [sp, #0x10]

; 913  :             DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_INFO, (L"HDQ_Read: "
; 914  :                 L"Interrupt status (5) was 0x%02x\r\n", status));

  01ce8	e59f322c	 ldr         r3, [pc, #0x22C]
  01cec	e5933440	 ldr         r3, [r3, #0x440]
  01cf0	e2032a01	 and         r2, r3, #1, 20
  01cf4	e59f3220	 ldr         r3, [pc, #0x220]
  01cf8	e5933440	 ldr         r3, [r3, #0x440]
  01cfc	e2033010	 and         r3, r3, #0x10
  01d00	e1923003	 orrs        r3, r2, r3
  01d04	0a000005	 beq         |$LN38@HDQ_Read|
  01d08	e59d1010	 ldr         r1, [sp, #0x10]
  01d0c	e59f0218	 ldr         r0, [pc, #0x218]
  01d10	eb000000	 bl          NKDbgPrintfW
  01d14	e3a03001	 mov         r3, #1
  01d18	e58d304c	 str         r3, [sp, #0x4C]
  01d1c	ea000001	 b           |$LN39@HDQ_Read|
  01d20		 |$LN38@HDQ_Read|
  01d20	e3a03000	 mov         r3, #0
  01d24	e58d304c	 str         r3, [sp, #0x4C]
  01d28		 |$LN39@HDQ_Read|

; 915  : 
; 916  : // Reenable interrupt
; 917  :             InterruptDone(pDevice->sysIntr);

  01d28	e59d3000	 ldr         r3, [sp]
  01d2c	e2833040	 add         r3, r3, #0x40
  01d30	e5930000	 ldr         r0, [r3]
  01d34	eb000000	 bl          InterruptDone
  01d38		 |$LN7@HDQ_Read|

; 918  :         }
; 919  : 
; 920  : // Verify interrupt source
; 921  :         if((status & HDQ_INT_STATUS_RXCOMPLETE)==0)

  01d38	e59d3010	 ldr         r3, [sp, #0x10]
  01d3c	e3130002	 tst         r3, #2
  01d40	1a00000b	 bne         |$LN5@HDQ_Read|

; 922  :         {
; 923  :             DEBUGMSG(ZONE_HDQ_1WIRE, (L"ERROR: HDQ_Read: "
; 924  :                 L"RX complete expected (0x%02x)\r\n", status));

  01d44	e59f31d0	 ldr         r3, [pc, #0x1D0]
  01d48	e5933440	 ldr         r3, [r3, #0x440]
  01d4c	e3130a01	 tst         r3, #1, 20
  01d50	0a000005	 beq         |$LN40@HDQ_Read|
  01d54	e59d1010	 ldr         r1, [sp, #0x10]
  01d58	e59f01c8	 ldr         r0, [pc, #0x1C8]
  01d5c	eb000000	 bl          NKDbgPrintfW
  01d60	e3a03001	 mov         r3, #1
  01d64	e58d3050	 str         r3, [sp, #0x50]
  01d68	ea000001	 b           |$LN41@HDQ_Read|
  01d6c		 |$LN40@HDQ_Read|
  01d6c	e3a03000	 mov         r3, #0
  01d70	e58d3050	 str         r3, [sp, #0x50]
  01d74		 |$LN41@HDQ_Read|
  01d74		 |$LN5@HDQ_Read|

; 925  : //            goto cleanUp;
; 926  :         }
; 927  : // Get data
; 928  :         buffer[i]=(UCHAR)INREG32(&pHDQRegs->ulHDQ_RX_DATA);

  01d74	e59d3014	 ldr         r3, [sp, #0x14]
  01d78	e2833008	 add         r3, r3, #8
  01d7c	e5933000	 ldr         r3, [r3]
  01d80	e20310ff	 and         r1, r3, #0xFF
  01d84	e28d2018	 add         r2, sp, #0x18
  01d88	e59d300c	 ldr         r3, [sp, #0xC]
  01d8c	e0823003	 add         r3, r2, r3
  01d90	e5c31000	 strb        r1, [r3]

; 929  :         DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_INFO, (L"\tHDQ_Read: "
; 930  :             L"RX completed data=0x%02x\r\n", buffer[i]));

  01d94	e59f3180	 ldr         r3, [pc, #0x180]
  01d98	e5933440	 ldr         r3, [r3, #0x440]
  01d9c	e2032a01	 and         r2, r3, #1, 20
  01da0	e59f3174	 ldr         r3, [pc, #0x174]
  01da4	e5933440	 ldr         r3, [r3, #0x440]
  01da8	e2033010	 and         r3, r3, #0x10
  01dac	e1923003	 orrs        r3, r2, r3
  01db0	0a000008	 beq         |$LN42@HDQ_Read|
  01db4	e28d2018	 add         r2, sp, #0x18
  01db8	e59d300c	 ldr         r3, [sp, #0xC]
  01dbc	e0823003	 add         r3, r2, r3
  01dc0	e5d31000	 ldrb        r1, [r3]
  01dc4	e59f0158	 ldr         r0, [pc, #0x158]
  01dc8	eb000000	 bl          NKDbgPrintfW
  01dcc	e3a03001	 mov         r3, #1
  01dd0	e58d3054	 str         r3, [sp, #0x54]
  01dd4	ea000001	 b           |$LN43@HDQ_Read|
  01dd8		 |$LN42@HDQ_Read|
  01dd8	e3a03000	 mov         r3, #0
  01ddc	e58d3054	 str         r3, [sp, #0x54]
  01de0		 |$LN43@HDQ_Read|

; 931  : // Make sure we set GO bit on next byte
; 932  :         status=0;

  01de0	e3a03000	 mov         r3, #0
  01de4	e58d3010	 str         r3, [sp, #0x10]

; 933  :     };

  01de8	eaffff83	 b           |$LN9@HDQ_Read|
  01dec		 |$LN8@HDQ_Read|

; 934  : 
; 935  :     switch (pDevice->mode)

  01dec	e59d3000	 ldr         r3, [sp]
  01df0	e2833048	 add         r3, r3, #0x48
  01df4	e5933000	 ldr         r3, [r3]
  01df8	e58d3058	 str         r3, [sp, #0x58]
  01dfc	e59d3058	 ldr         r3, [sp, #0x58]
  01e00	e3530000	 cmp         r3, #0
  01e04	0a000003	 beq         |$LN2@HDQ_Read|
  01e08	e59d3058	 ldr         r3, [sp, #0x58]
  01e0c	e3530001	 cmp         r3, #1
  01e10	0a000004	 beq         |$LN1@HDQ_Read|
  01e14	ea00000c	 b           |$LN3@HDQ_Read|
  01e18		 |$LN2@HDQ_Read|

; 936  :     {
; 937  :     case HDQ_MODE_HDQ8:
; 938  :         *pData=buffer[0];

  01e18	e5dd2018	 ldrb        r2, [sp, #0x18]
  01e1c	e59d3074	 ldr         r3, [sp, #0x74]
  01e20	e1c320b0	 strh        r2, [r3]

; 939  :         break;

  01e24	ea000008	 b           |$LN3@HDQ_Read|
  01e28		 |$LN1@HDQ_Read|

; 940  :     case HDQ_MODE_HDQ16:
; 941  :         *pData=buffer[0]|(buffer[1] << 8);

  01e28	e5dd3018	 ldrb        r3, [sp, #0x18]
  01e2c	e1a02003	 mov         r2, r3
  01e30	e5dd3019	 ldrb        r3, [sp, #0x19]
  01e34	e1a03403	 mov         r3, r3, lsl #8
  01e38	e1823003	 orr         r3, r2, r3
  01e3c	e1a02803	 mov         r2, r3, lsl #16
  01e40	e1a02822	 mov         r2, r2, lsr #16
  01e44	e59d3074	 ldr         r3, [sp, #0x74]
  01e48	e1c320b0	 strh        r2, [r3]
  01e4c		 |$LN3@HDQ_Read|

; 942  :         break;
; 943  :     }
; 944  : 
; 945  :     DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_INFO, (L"HDQ_Read: "
; 946  :         L"Address:=0x%02x, Data:=0x%02x\r\n", address, *pData));

  01e4c	e59f30c8	 ldr         r3, [pc, #0xC8]
  01e50	e5933440	 ldr         r3, [r3, #0x440]
  01e54	e2032a01	 and         r2, r3, #1, 20
  01e58	e59f30bc	 ldr         r3, [pc, #0xBC]
  01e5c	e5933440	 ldr         r3, [r3, #0x440]
  01e60	e2033010	 and         r3, r3, #0x10
  01e64	e1923003	 orrs        r3, r2, r3
  01e68	0a000007	 beq         |$LN44@HDQ_Read|
  01e6c	e59d3074	 ldr         r3, [sp, #0x74]
  01e70	e1d320b0	 ldrh        r2, [r3]
  01e74	e5dd1070	 ldrb        r1, [sp, #0x70]
  01e78	e59f00a0	 ldr         r0, [pc, #0xA0]
  01e7c	eb000000	 bl          NKDbgPrintfW
  01e80	e3a03001	 mov         r3, #1
  01e84	e58d305c	 str         r3, [sp, #0x5C]
  01e88	ea000001	 b           |$LN45@HDQ_Read|
  01e8c		 |$LN44@HDQ_Read|
  01e8c	e3a03000	 mov         r3, #0
  01e90	e58d305c	 str         r3, [sp, #0x5C]
  01e94		 |$LN45@HDQ_Read|

; 947  : 
; 948  : // Done
; 949  :     rc=TRUE;

  01e94	e3a03001	 mov         r3, #1
  01e98	e58d3008	 str         r3, [sp, #8]
  01e9c		 |$cleanUp$43383|

; 950  : //
; 951  : cleanUp:
; 952  :     SetDevicePowerState(pDevice->hParentBus, D4, NULL); // power off the hdq device

  01e9c	e3a02000	 mov         r2, #0
  01ea0	e3a01004	 mov         r1, #4
  01ea4	e59d3000	 ldr         r3, [sp]
  01ea8	e2833024	 add         r3, r3, #0x24
  01eac	e5930000	 ldr         r0, [r3]
  01eb0	eb000000	 bl          SetDevicePowerState

; 953  :     LeaveCriticalSection(&pDevice->cs);

  01eb4	e59d3000	 ldr         r3, [sp]
  01eb8	e283002c	 add         r0, r3, #0x2C
  01ebc	eb000000	 bl          LeaveCriticalSection
  01ec0		 |$exit$43308|

; 954  : //
; 955  : exit:    
; 956  :     DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_FUNCTION, (L"---HDQ_Read(rc=%01ld)\r\n", rc));

  01ec0	e59f3054	 ldr         r3, [pc, #0x54]
  01ec4	e5933440	 ldr         r3, [r3, #0x440]
  01ec8	e2032a01	 and         r2, r3, #1, 20
  01ecc	e59f3048	 ldr         r3, [pc, #0x48]
  01ed0	e5933440	 ldr         r3, [r3, #0x440]
  01ed4	e2033004	 and         r3, r3, #4
  01ed8	e1923003	 orrs        r3, r2, r3
  01edc	0a000005	 beq         |$LN46@HDQ_Read|
  01ee0	e59d1008	 ldr         r1, [sp, #8]
  01ee4	e59f002c	 ldr         r0, [pc, #0x2C]
  01ee8	eb000000	 bl          NKDbgPrintfW
  01eec	e3a03001	 mov         r3, #1
  01ef0	e58d3060	 str         r3, [sp, #0x60]
  01ef4	ea000001	 b           |$LN47@HDQ_Read|
  01ef8		 |$LN46@HDQ_Read|
  01ef8	e3a03000	 mov         r3, #0
  01efc	e58d3060	 str         r3, [sp, #0x60]
  01f00		 |$LN47@HDQ_Read|

; 957  :     return rc;

  01f00	e59d3008	 ldr         r3, [sp, #8]
  01f04	e58d301c	 str         r3, [sp, #0x1C]

; 958  : }

  01f08	e59d001c	 ldr         r0, [sp, #0x1C]
  01f0c	e28dd064	 add         sp, sp, #0x64
  01f10	e89d6000	 ldmia       sp, {sp, lr}
  01f14	e12fff1e	 bx          lr
  01f18		 |$LN51@HDQ_Read|
  01f18		 |$LN52@HDQ_Read|
  01f18	00000000	 DCD         |??_C@_1DA@IBKJNOCI@?$AA?9?$AA?9?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?$CI?$AAr?$AAc?$AA?$DN?$AA?$CF?$AA0?$AA1?$AAl?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01f1c		 |$LN53@HDQ_Read|
  01f1c	00000000	 DCD         |dpCurSettings|
  01f20		 |$LN54@HDQ_Read|
  01f20	00000000	 DCD         |??_C@_1FE@NPOPBEKL@?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?0?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?3@|
  01f24		 |$LN55@HDQ_Read|
  01f24	00000000	 DCD         |??_C@_1EM@GGPAELDP@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAR?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AAd?$AA?5?$AAd?$AAa?$AAt?$AAa?$AA?$DN?$AA0?$AAx?$AA?$CF@|
  01f28		 |$LN56@HDQ_Read|
  01f28	00000000	 DCD         |??_C@_1GC@KJINGCIC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAR?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?5?$AAe?$AAx?$AAp@|
  01f2c		 |$LN57@HDQ_Read|
  01f2c	00000000	 DCD         |??_C@_1FI@JAFJNKLA@?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA5?$AA?$CJ?$AA?5?$AAw@|
  01f30		 |$LN58@HDQ_Read|
  01f30	00000000	 DCD         |??_C@_1FK@JPLGDBKC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAn?$AA?5?$AAR?$AAX?$AA?5?$AAa@|
  01f34		 |$LN59@HDQ_Read|
  01f34	00000000	 DCD         |cliDelay3|
  01f38		 |$LN60@HDQ_Read|
  01f38	00000000	 DCD         |??_C@_1EO@PAPAPAMD@?$AA?7?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAT?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AAd?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?$CJ@|
  01f3c		 |$LN61@HDQ_Read|
  01f3c	00000000	 DCD         |??_C@_1GC@DNNBIDHO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAT?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?5?$AAe?$AAx?$AAp@|
  01f40		 |$LN62@HDQ_Read|
  01f40	00000000	 DCD         |??_C@_1FI@NJBGMNIP@?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA3?$AA?$CJ?$AA?5?$AAw@|
  01f44		 |$LN63@HDQ_Read|
  01f44	00000000	 DCD         |??_C@_1GG@FAGKBEDD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?$CB?$AA?$CB?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAi?$AAn?$AA?5@|
  01f48		 |$LN64@HDQ_Read|
  01f48	00000000	 DCD         |cliDelay2|
  01f4c		 |$LN65@HDQ_Read|
  01f4c	00000000	 DCD         |??_C@_1FI@OBNDMAJK@?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA1?$AA?$CJ?$AA?5?$AAw@|
  01f50		 |$LN66@HDQ_Read|
  01f50	00000000	 DCD         |??_C@_1FO@EFNENMIL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe@|
  01f54		 |$LN67@HDQ_Read|
  01f54	68647144	 DCD         0x68647144
  01f58		 |$LN68@HDQ_Read|
  01f58	00000000	 DCD         |cliDelay1|
  01f5c		 |$LN69@HDQ_Read|
  01f5c	00000000	 DCD         |??_C@_1EM@PBFGDDMO@?$AA?$CL?$AA?$CL?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@|
  01f60		 |$M43798|

			 ENDP  ; |HDQ_Read|

	EXPORT	|??_C@_1DE@LAMFGMHF@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@FNLIEOP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?3?$AA?5?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@OBEPAFCL@?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?3?$AA?5?$AAN?$AAe?$AAw?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?5?$AAH?$AAD?$AAQ?$AA1?$AA6?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@IPIDBHNN@?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?3?$AA?5?$AAN?$AAe?$AAw?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?5?$AAH?$AAD?$AAQ?$AA8?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@FHDCIJPH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@OEFOMLLI@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00058			 AREA	 |.pdata|, PDATA
|$T43837| DCD	|$LN24@HDQ_SetMod|
	DCD	0x4000a804

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@LAMFGMHF@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, "("
	DCB	0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@FNLIEOP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?3?$AA?5?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, ":"
	DCB	0x0, " ", 0x0, "U", 0x0, "n", 0x0, "s", 0x0, "u", 0x0, "p"
	DCB	0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "m", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "(", 0x0, "m"
	DCB	0x0, "o", 0x0, "d", 0x0, "e", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@OBEPAFCL@?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?3?$AA?5?$AAN?$AAe?$AAw?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?5?$AAH?$AAD?$AAQ?$AA1?$AA6?$AA?$AN?$AA?6?$AA?$AA@| DCB "H"
	DCB	0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, ":", 0x0, " "
	DCB	0x0, "N", 0x0, "e", 0x0, "w", 0x0, " ", 0x0, "m", 0x0, "o"
	DCB	0x0, "d", 0x0, "e", 0x0, " ", 0x0, "H", 0x0, "D", 0x0, "Q"
	DCB	0x0, "1", 0x0, "6", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@IPIDBHNN@?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?3?$AA?5?$AAN?$AAe?$AAw?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?5?$AAH?$AAD?$AAQ?$AA8?$AA?$AN?$AA?6?$AA?$AA@| DCB "H"
	DCB	0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, ":", 0x0, " "
	DCB	0x0, "N", 0x0, "e", 0x0, "w", 0x0, " ", 0x0, "m", 0x0, "o"
	DCB	0x0, "d", 0x0, "e", 0x0, " ", 0x0, "H", 0x0, "D", 0x0, "Q"
	DCB	0x0, "8", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@FHDCIJPH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "c", 0x0, "o", 0x0, "r"
	DCB	0x0, "r", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@OEFOMLLI@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  01f60			 AREA	 |.text|, CODE, ARM

  01f60		 |HDQ_SetMode| PROC

; 965  : {

  01f60		 |$LN24@HDQ_SetMod|
  01f60	e1a0c00d	 mov         r12, sp
  01f64	e92d0003	 stmdb       sp!, {r0, r1}
  01f68	e92d5000	 stmdb       sp!, {r12, lr}
  01f6c	e24dd02c	 sub         sp, sp, #0x2C
  01f70		 |$M43834|

; 966  :     BOOL rc = FALSE;

  01f70	e3a03000	 mov         r3, #0
  01f74	e58d3004	 str         r3, [sp, #4]

; 967  :     HDQ_DEVICE *pDevice = (HDQ_DEVICE*)context;

  01f78	e59d3034	 ldr         r3, [sp, #0x34]
  01f7c	e58d3000	 str         r3, [sp]

; 968  :     OMAP2420_HDQ_REGS *pHDQRegs;
; 969  : 
; 970  :     DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_FUNCTION, (L"+HDQ_SetMode(0x%08x, %d)\r\n", context, mode));

  01f80	e59f325c	 ldr         r3, [pc, #0x25C]
  01f84	e5933440	 ldr         r3, [r3, #0x440]
  01f88	e2032a01	 and         r2, r3, #1, 20
  01f8c	e59f3250	 ldr         r3, [pc, #0x250]
  01f90	e5933440	 ldr         r3, [r3, #0x440]
  01f94	e2033004	 and         r3, r3, #4
  01f98	e1923003	 orrs        r3, r2, r3
  01f9c	0a000006	 beq         |$LN10@HDQ_SetMod|
  01fa0	e59d2038	 ldr         r2, [sp, #0x38]
  01fa4	e59d1034	 ldr         r1, [sp, #0x34]
  01fa8	e59f024c	 ldr         r0, [pc, #0x24C]
  01fac	eb000000	 bl          NKDbgPrintfW
  01fb0	e3a03001	 mov         r3, #1
  01fb4	e58d3010	 str         r3, [sp, #0x10]
  01fb8	ea000001	 b           |$LN11@HDQ_SetMod|
  01fbc		 |$LN10@HDQ_SetMod|
  01fbc	e3a03000	 mov         r3, #0
  01fc0	e58d3010	 str         r3, [sp, #0x10]
  01fc4		 |$LN11@HDQ_SetMod|

; 971  : 
; 972  : // Check if we get correct context
; 973  :     if (pDevice == NULL || pDevice->cookie != HDQ_DEVICE_COOKIE)

  01fc4	e59d3000	 ldr         r3, [sp]
  01fc8	e3530000	 cmp         r3, #0
  01fcc	0a000004	 beq         |$LN6@HDQ_SetMod|
  01fd0	e59d3000	 ldr         r3, [sp]
  01fd4	e5932000	 ldr         r2, [r3]
  01fd8	e59f3218	 ldr         r3, [pc, #0x218]
  01fdc	e1520003	 cmp         r2, r3
  01fe0	0a00000f	 beq         |$LN7@HDQ_SetMod|
  01fe4		 |$LN6@HDQ_SetMod|

; 974  :     {
; 975  :         DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_ERROR, (L"ERROR: HDQ_SetMode: "
; 976  :             L"Incorrect context paramer\r\n"));

  01fe4	e59f31f8	 ldr         r3, [pc, #0x1F8]
  01fe8	e5933440	 ldr         r3, [r3, #0x440]
  01fec	e2032a01	 and         r2, r3, #1, 20
  01ff0	e59f31ec	 ldr         r3, [pc, #0x1EC]
  01ff4	e5933440	 ldr         r3, [r3, #0x440]
  01ff8	e2033001	 and         r3, r3, #1
  01ffc	e1923003	 orrs        r3, r2, r3
  02000	0a000004	 beq         |$LN12@HDQ_SetMod|
  02004	e59f01e8	 ldr         r0, [pc, #0x1E8]
  02008	eb000000	 bl          NKDbgPrintfW
  0200c	e3a03001	 mov         r3, #1
  02010	e58d3014	 str         r3, [sp, #0x14]
  02014	ea000001	 b           |$LN13@HDQ_SetMod|
  02018		 |$LN12@HDQ_SetMod|
  02018	e3a03000	 mov         r3, #0
  0201c	e58d3014	 str         r3, [sp, #0x14]
  02020		 |$LN13@HDQ_SetMod|

; 977  :         goto cleanUp;

  02020	ea000058	 b           |$cleanUp$43423|
  02024		 |$LN7@HDQ_SetMod|

; 978  :     };
; 979  :     pHDQRegs = pDevice->pHDQRegs;

  02024	e59d3000	 ldr         r3, [sp]
  02028	e2833020	 add         r3, r3, #0x20
  0202c	e5933000	 ldr         r3, [r3]
  02030	e58d3008	 str         r3, [sp, #8]

; 980  : 
; 981  :     switch (mode)

  02034	e59d3038	 ldr         r3, [sp, #0x38]
  02038	e58d3018	 str         r3, [sp, #0x18]
  0203c	e59d3018	 ldr         r3, [sp, #0x18]
  02040	e3530000	 cmp         r3, #0
  02044	0a000003	 beq         |$LN3@HDQ_SetMod|
  02048	e59d3018	 ldr         r3, [sp, #0x18]
  0204c	e3530001	 cmp         r3, #1
  02050	0a00001e	 beq         |$LN2@HDQ_SetMod|
  02054	ea00003b	 b           |$LN1@HDQ_SetMod|
  02058		 |$LN3@HDQ_SetMod|

; 982  :     {
; 983  :     case HDQ_MODE_HDQ8:
; 984  :         CLRREG32(&pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_MODE);

  02058	e59d3008	 ldr         r3, [sp, #8]
  0205c	e283300c	 add         r3, r3, #0xC
  02060	e5932000	 ldr         r2, [r3]
  02064	e3e03001	 mvn         r3, #1
  02068	e0022003	 and         r2, r2, r3
  0206c	e59d3008	 ldr         r3, [sp, #8]
  02070	e283300c	 add         r3, r3, #0xC
  02074	e5832000	 str         r2, [r3]

; 985  :         pDevice->mode = HDQ_MODE_HDQ8;

  02078	e59d3000	 ldr         r3, [sp]
  0207c	e2832048	 add         r2, r3, #0x48
  02080	e3a03000	 mov         r3, #0
  02084	e5823000	 str         r3, [r2]

; 986  :         DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_INFO, (L"HDQ_SetMode: "
; 987  :             L"New mode HDQ8\r\n"));

  02088	e59f3154	 ldr         r3, [pc, #0x154]
  0208c	e5933440	 ldr         r3, [r3, #0x440]
  02090	e2032a01	 and         r2, r3, #1, 20
  02094	e59f3148	 ldr         r3, [pc, #0x148]
  02098	e5933440	 ldr         r3, [r3, #0x440]
  0209c	e2033010	 and         r3, r3, #0x10
  020a0	e1923003	 orrs        r3, r2, r3
  020a4	0a000004	 beq         |$LN14@HDQ_SetMod|
  020a8	e59f0140	 ldr         r0, [pc, #0x140]
  020ac	eb000000	 bl          NKDbgPrintfW
  020b0	e3a03001	 mov         r3, #1
  020b4	e58d301c	 str         r3, [sp, #0x1C]
  020b8	ea000001	 b           |$LN15@HDQ_SetMod|
  020bc		 |$LN14@HDQ_SetMod|
  020bc	e3a03000	 mov         r3, #0
  020c0	e58d301c	 str         r3, [sp, #0x1C]
  020c4		 |$LN15@HDQ_SetMod|

; 988  :         rc = TRUE;

  020c4	e3a03001	 mov         r3, #1
  020c8	e58d3004	 str         r3, [sp, #4]

; 989  :         break;

  020cc	ea00002d	 b           |$LN4@HDQ_SetMod|
  020d0		 |$LN2@HDQ_SetMod|

; 990  :     case HDQ_MODE_HDQ16:
; 991  :         CLRREG32(&pHDQRegs->ulHDQ_CTRL_STATUS, HDQ_CTRL_STATUS_MODE);

  020d0	e59d3008	 ldr         r3, [sp, #8]
  020d4	e283300c	 add         r3, r3, #0xC
  020d8	e5932000	 ldr         r2, [r3]
  020dc	e3e03001	 mvn         r3, #1
  020e0	e0022003	 and         r2, r2, r3
  020e4	e59d3008	 ldr         r3, [sp, #8]
  020e8	e283300c	 add         r3, r3, #0xC
  020ec	e5832000	 str         r2, [r3]

; 992  :         pDevice->mode = HDQ_MODE_HDQ16;

  020f0	e59d3000	 ldr         r3, [sp]
  020f4	e2832048	 add         r2, r3, #0x48
  020f8	e3a03001	 mov         r3, #1
  020fc	e5823000	 str         r3, [r2]

; 993  :         DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_INFO, (L"HDQ_SetMode: "
; 994  :             L"New mode HDQ16\r\n"));

  02100	e59f30dc	 ldr         r3, [pc, #0xDC]
  02104	e5933440	 ldr         r3, [r3, #0x440]
  02108	e2032a01	 and         r2, r3, #1, 20
  0210c	e59f30d0	 ldr         r3, [pc, #0xD0]
  02110	e5933440	 ldr         r3, [r3, #0x440]
  02114	e2033010	 and         r3, r3, #0x10
  02118	e1923003	 orrs        r3, r2, r3
  0211c	0a000004	 beq         |$LN16@HDQ_SetMod|
  02120	e59f00c4	 ldr         r0, [pc, #0xC4]
  02124	eb000000	 bl          NKDbgPrintfW
  02128	e3a03001	 mov         r3, #1
  0212c	e58d3020	 str         r3, [sp, #0x20]
  02130	ea000001	 b           |$LN17@HDQ_SetMod|
  02134		 |$LN16@HDQ_SetMod|
  02134	e3a03000	 mov         r3, #0
  02138	e58d3020	 str         r3, [sp, #0x20]
  0213c		 |$LN17@HDQ_SetMod|

; 995  :         rc = TRUE;

  0213c	e3a03001	 mov         r3, #1
  02140	e58d3004	 str         r3, [sp, #4]

; 996  :         break;

  02144	ea00000f	 b           |$LN4@HDQ_SetMod|
  02148		 |$LN1@HDQ_SetMod|

; 997  :     default:
; 998  :         DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_ERROR, (L"ERROR: HDQ_SetMode: "
; 999  :             L"Unsupported mode requested (mode = 0x%x)\r\n", mode));

  02148	e59f3094	 ldr         r3, [pc, #0x94]
  0214c	e5933440	 ldr         r3, [r3, #0x440]
  02150	e2032a01	 and         r2, r3, #1, 20
  02154	e59f3088	 ldr         r3, [pc, #0x88]
  02158	e5933440	 ldr         r3, [r3, #0x440]
  0215c	e2033001	 and         r3, r3, #1
  02160	e1923003	 orrs        r3, r2, r3
  02164	0a000005	 beq         |$LN18@HDQ_SetMod|
  02168	e59d1038	 ldr         r1, [sp, #0x38]
  0216c	e59f0074	 ldr         r0, [pc, #0x74]
  02170	eb000000	 bl          NKDbgPrintfW
  02174	e3a03001	 mov         r3, #1
  02178	e58d3024	 str         r3, [sp, #0x24]
  0217c	ea000001	 b           |$LN19@HDQ_SetMod|
  02180		 |$LN18@HDQ_SetMod|
  02180	e3a03000	 mov         r3, #0
  02184	e58d3024	 str         r3, [sp, #0x24]
  02188		 |$LN19@HDQ_SetMod|
  02188		 |$LN4@HDQ_SetMod|
  02188		 |$cleanUp$43423|

; 1000 :     }
; 1001 : 
; 1002 : cleanUp:
; 1003 :     DEBUGMSG(ZONE_HDQ_1WIRE | ZONE_FUNCTION, (L"-HDQ_SetMode(rc = 0x%x)\r\n", rc));

  02188	e59f3054	 ldr         r3, [pc, #0x54]
  0218c	e5933440	 ldr         r3, [r3, #0x440]
  02190	e2032a01	 and         r2, r3, #1, 20
  02194	e59f3048	 ldr         r3, [pc, #0x48]
  02198	e5933440	 ldr         r3, [r3, #0x440]
  0219c	e2033004	 and         r3, r3, #4
  021a0	e1923003	 orrs        r3, r2, r3
  021a4	0a000005	 beq         |$LN20@HDQ_SetMod|
  021a8	e59d1004	 ldr         r1, [sp, #4]
  021ac	e59f002c	 ldr         r0, [pc, #0x2C]
  021b0	eb000000	 bl          NKDbgPrintfW
  021b4	e3a03001	 mov         r3, #1
  021b8	e58d3028	 str         r3, [sp, #0x28]
  021bc	ea000001	 b           |$LN21@HDQ_SetMod|
  021c0		 |$LN20@HDQ_SetMod|
  021c0	e3a03000	 mov         r3, #0
  021c4	e58d3028	 str         r3, [sp, #0x28]
  021c8		 |$LN21@HDQ_SetMod|

; 1004 :     return rc;

  021c8	e59d3004	 ldr         r3, [sp, #4]
  021cc	e58d300c	 str         r3, [sp, #0xC]

; 1005 : }

  021d0	e59d000c	 ldr         r0, [sp, #0xC]
  021d4	e28dd02c	 add         sp, sp, #0x2C
  021d8	e89d6000	 ldmia       sp, {sp, lr}
  021dc	e12fff1e	 bx          lr
  021e0		 |$LN25@HDQ_SetMod|
  021e0		 |$LN26@HDQ_SetMod|
  021e0	00000000	 DCD         |??_C@_1DE@LAMFGMHF@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  021e4		 |$LN27@HDQ_SetMod|
  021e4	00000000	 DCD         |dpCurSettings|
  021e8		 |$LN28@HDQ_SetMod|
  021e8	00000000	 DCD         |??_C@_1HO@FNLIEOP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?3?$AA?5?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5@|
  021ec		 |$LN29@HDQ_SetMod|
  021ec	00000000	 DCD         |??_C@_1DM@OBEPAFCL@?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?3?$AA?5?$AAN?$AAe?$AAw?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?5?$AAH?$AAD?$AAQ?$AA1?$AA6?$AA?$AN?$AA?6?$AA?$AA@|
  021f0		 |$LN30@HDQ_SetMod|
  021f0	00000000	 DCD         |??_C@_1DK@IPIDBHNN@?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?3?$AA?5?$AAN?$AAe?$AAw?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?5?$AAH?$AAD?$AAQ?$AA8?$AA?$AN?$AA?6?$AA?$AA@|
  021f4		 |$LN31@HDQ_SetMod|
  021f4	00000000	 DCD         |??_C@_1GA@FHDCIJPH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo@|
  021f8		 |$LN32@HDQ_SetMod|
  021f8	68647144	 DCD         0x68647144
  021fc		 |$LN33@HDQ_SetMod|
  021fc	00000000	 DCD         |??_C@_1DG@OEFOMLLI@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAS?$AAe?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  02200		 |$M43835|

			 ENDP  ; |HDQ_SetMode|

	END
