; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\OMAP2420_MS_V1\DMA\PRIVATE\dmasys.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?gpSysDMACont@@3PAVSysStandardDMAController@@A| [ DATA ] ; gpSysDMACont
	EXPORT	|?gpDSPDMACont@@3PAVDSPStandardDMAController@@A| [ DATA ] ; gpDSPDMACont
	EXPORT	|?gpCamDMACont@@3PAVCamStandardDMAController@@A| [ DATA ] ; gpCamDMACont

  00000			 AREA	 |.bss|, NOINIT
|?gpSysDMACont@@3PAVSysStandardDMAController@@A| % 0x4	; gpSysDMACont
|?gpDSPDMACont@@3PAVDSPStandardDMAController@@A| % 0x4	; gpDSPDMACont
|?gpCamDMACont@@3PAVCamStandardDMAController@@A| % 0x4	; gpCamDMACont

  00000			 AREA	 |.data|, DATA
|sgControllerIdMap| DCD 0x1
	DCB	"System", 0x0
	%	25
	DCD	0x0
	DCD	|?gpSysDMACont@@3PAVSysStandardDMAController@@A|
	DCD	0x2
	DCB	"DSP", 0x0
	%	28
	DCD	0x1
	DCD	|?gpDSPDMACont@@3PAVDSPStandardDMAController@@A|
	DCD	0x3
	DCB	"Camera", 0x0
	%	25
	DCD	0x2
	DCD	|?gpCamDMACont@@3PAVCamStandardDMAController@@A|
	EXPORT	|??0DMASystem@@AAA@PAUHKEY__@@@Z|	; DMASystem::DMASystem
	EXPORT	|?Create@DMASystem@@SAPAV1@PBG@Z|	; DMASystem::Create
	IMPORT	|??2@YAPAXI@Z|				; operator new
	IMPORT	|RegOpenKeyExW|

  00000			 AREA	 |.pdata|, PDATA
|$T36762| DCD	|$LN8@Create|
	DCD	0x40002b04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\dma\private\dmasys.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Create@DMASystem@@SAPAV1@PBG@Z| PROC	; DMASystem::Create

; 58   : {

  00000		 |$LN8@Create|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd028	 sub         sp, sp, #0x28
  00010		 |$M36759|

; 59   :     HKEY hActiveKey;
; 60   :     DWORD dwRes = RegOpenKeyEx(HKEY_LOCAL_MACHINE,szActiveKey,0,0,&hActiveKey);

  00010	e28d3008	 add         r3, sp, #8
  00014	e58d3000	 str         r3, [sp]
  00018	e3a03000	 mov         r3, #0
  0001c	e3a02000	 mov         r2, #0
  00020	e59d1030	 ldr         r1, [sp, #0x30]
  00024	e3a0010a	 mov         r0, #0xA, 2
  00028	eb000000	 bl          RegOpenKeyExW
  0002c	e58d0018	 str         r0, [sp, #0x18]
  00030	e59d3018	 ldr         r3, [sp, #0x18]
  00034	e58d3004	 str         r3, [sp, #4]

; 61   :     if (FAILED(dwRes))

  00038	e59d3004	 ldr         r3, [sp, #4]
  0003c	e3530000	 cmp         r3, #0
  00040	aa000002	 bge         |$LN1@Create|

; 62   :         return NULL;

  00044	e3a03000	 mov         r3, #0
  00048	e58d3014	 str         r3, [sp, #0x14]
  0004c	ea000012	 b           |$LN2@Create|
  00050		 |$LN1@Create|

; 63   :     return new DMASystem(hActiveKey);

  00050	e3a00020	 mov         r0, #0x20
  00054	eb000000	 bl          |??2@YAPAXI@Z|
  00058	e58d001c	 str         r0, [sp, #0x1C]
  0005c	e59d301c	 ldr         r3, [sp, #0x1C]
  00060	e58d300c	 str         r3, [sp, #0xC]
  00064	e59d300c	 ldr         r3, [sp, #0xC]
  00068	e3530000	 cmp         r3, #0
  0006c	0a000006	 beq         |$LN4@Create|
  00070	e59d1008	 ldr         r1, [sp, #8]
  00074	e59d000c	 ldr         r0, [sp, #0xC]
  00078	eb000000	 bl          |??0DMASystem@@AAA@PAUHKEY__@@@Z|
  0007c	e58d0020	 str         r0, [sp, #0x20]
  00080	e59d3020	 ldr         r3, [sp, #0x20]
  00084	e58d3024	 str         r3, [sp, #0x24]
  00088	ea000001	 b           |$LN5@Create|
  0008c		 |$LN4@Create|
  0008c	e3a03000	 mov         r3, #0
  00090	e58d3024	 str         r3, [sp, #0x24]
  00094		 |$LN5@Create|
  00094	e59d3024	 ldr         r3, [sp, #0x24]
  00098	e58d3014	 str         r3, [sp, #0x14]
  0009c		 |$LN2@Create|

; 64   : }

  0009c	e59d0014	 ldr         r0, [sp, #0x14]
  000a0	e28dd028	 add         sp, sp, #0x28
  000a4	e89d6000	 ldmia       sp, {sp, lr}
  000a8	e12fff1e	 bx          lr
  000ac		 |$M36760|

			 ENDP  ; |?Create@DMASystem@@SAPAV1@PBG@Z|, DMASystem::Create

	IMPORT	|InitializeCriticalSection|

  00008			 AREA	 |.pdata|, PDATA
|$T36768| DCD	|$LN5@DMASystem|
	DCD	0x40001804
; Function compile flags: /Odtp

  000ac			 AREA	 |.text|, CODE, ARM

  000ac		 |??0DMASystem@@AAA@PAUHKEY__@@@Z| PROC	; DMASystem::DMASystem

; 67   : {

  000ac		 |$LN5@DMASystem|
  000ac	e1a0c00d	 mov         r12, sp
  000b0	e92d0003	 stmdb       sp!, {r0, r1}
  000b4	e92d5000	 stmdb       sp!, {r12, lr}
  000b8	e24dd004	 sub         sp, sp, #4
  000bc		 |$M36765|

; 68   :     InitializeCriticalSection(&mSec);

  000bc	e59d300c	 ldr         r3, [sp, #0xC]
  000c0	e283000c	 add         r0, r3, #0xC
  000c4	eb000000	 bl          InitializeCriticalSection

; 69   :     mOpenContextUserId = 1;

  000c8	e59d200c	 ldr         r2, [sp, #0xC]
  000cc	e3a03001	 mov         r3, #1
  000d0	e5823000	 str         r3, [r2]

; 70   :     mhRegKey = hActiveRegKey;

  000d4	e59d300c	 ldr         r3, [sp, #0xC]
  000d8	e2832008	 add         r2, r3, #8
  000dc	e59d3010	 ldr         r3, [sp, #0x10]
  000e0	e5823000	 str         r3, [r2]

; 71   :     /* initialize defaults here */
; 72   : 	mpUserList = NULL;

  000e4	e59d300c	 ldr         r3, [sp, #0xC]
  000e8	e2832004	 add         r2, r3, #4
  000ec	e3a03000	 mov         r3, #0
  000f0	e5823000	 str         r3, [r2]

; 73   : }

  000f4	e59d300c	 ldr         r3, [sp, #0xC]
  000f8	e58d3000	 str         r3, [sp]
  000fc	e59d0000	 ldr         r0, [sp]
  00100	e28dd004	 add         sp, sp, #4
  00104	e89d6000	 ldmia       sp, {sp, lr}
  00108	e12fff1e	 bx          lr
  0010c		 |$M36766|

			 ENDP  ; |??0DMASystem@@AAA@PAUHKEY__@@@Z|, DMASystem::DMASystem

	EXPORT	|??1DMASystem@@QAA@XZ|			; DMASystem::~DMASystem
	IMPORT	|DeleteCriticalSection|
	IMPORT	|RegCloseKey|

  00010			 AREA	 |.pdata|, PDATA
|$T36773| DCD	|$LN5@DMASystem@2|
	DCD	0x40001003
; Function compile flags: /Odtp

  0010c			 AREA	 |.text|, CODE, ARM

  0010c		 |??1DMASystem@@QAA@XZ| PROC		; DMASystem::~DMASystem

; 76   : {

  0010c		 |$LN5@DMASystem@2|
  0010c	e1a0c00d	 mov         r12, sp
  00110	e92d0001	 stmdb       sp!, {r0}
  00114	e92d5000	 stmdb       sp!, {r12, lr}
  00118		 |$M36770|

; 77   :     RegCloseKey(mhRegKey);

  00118	e59d3008	 ldr         r3, [sp, #8]
  0011c	e2833008	 add         r3, r3, #8
  00120	e5930000	 ldr         r0, [r3]
  00124	eb000000	 bl          RegCloseKey

; 78   :     mhRegKey = NULL;

  00128	e59d3008	 ldr         r3, [sp, #8]
  0012c	e2832008	 add         r2, r3, #8
  00130	e3a03000	 mov         r3, #0
  00134	e5823000	 str         r3, [r2]

; 79   :     DeleteCriticalSection(&mSec);

  00138	e59d3008	 ldr         r3, [sp, #8]
  0013c	e283000c	 add         r0, r3, #0xC
  00140	eb000000	 bl          DeleteCriticalSection

; 80   : }

  00144	e89d6000	 ldmia       sp, {sp, lr}
  00148	e12fff1e	 bx          lr
  0014c		 |$M36771|

			 ENDP  ; |??1DMASystem@@QAA@XZ|, DMASystem::~DMASystem

	EXPORT	|??_C@_1IM@MHLJDDIH@?$AAD?$AAM?$AAA?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?5?$AAi?$AAd@| [ DATA ] ; `string'
	EXPORT	|??0DSPStandardDMAController@@QAA@XZ|	; DSPStandardDMAController::DSPStandardDMAController
	EXPORT	|?Init@DMASystem@@QAAIXZ|		; DMASystem::Init
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
	IMPORT	|??0CamStandardDMAController@@QAA@XZ|	; CamStandardDMAController::CamStandardDMAController
	IMPORT	|??0SysStandardDMAController@@QAA@XZ|	; SysStandardDMAController::SysStandardDMAController

  00018			 AREA	 |.pdata|, PDATA
|$T36798| DCD	|$LN31@Init|
	DCD	0x40013c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IM@MHLJDDIH@?$AAD?$AAM?$AAA?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?5?$AAi?$AAd@| DCB "D"
	DCB	0x0, "M", 0x0, "A", 0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "m", 0x0, ":", 0x0, ":", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")", 0x0, ":", 0x0, " "
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  0014c			 AREA	 |.text|, CODE, ARM

  0014c		 |?Init@DMASystem@@QAAIXZ| PROC		; DMASystem::Init

; 83   : {

  0014c		 |$LN31@Init|
  0014c	e1a0c00d	 mov         r12, sp
  00150	e92d0001	 stmdb       sp!, {r0}
  00154	e92d5000	 stmdb       sp!, {r12, lr}
  00158	e24dd06c	 sub         sp, sp, #0x6C
  0015c		 |$M36795|

; 84   : //    RETAILMSG(1, (TEXT("DMASystem::Init()\r\n")));
; 85   : 
; 86   :     uint err = 0;

  0015c	e3a03000	 mov         r3, #0
  00160	e58d3004	 str         r3, [sp, #4]

; 87   : 
; 88   :     /* read stuff from registry here at mhRegKey  */
; 89   : 
; 90   :     /* do init here based on configured parameters (if any) */
; 91   :     uint i;
; 92   :     uint numEntries = sizeof(sgControllerIdMap)/sizeof(DMAControllerIdMapping);

  00164	e3a03003	 mov         r3, #3
  00168	e58d3008	 str         r3, [sp, #8]

; 93   :     for(i=0;i<numEntries;i++)

  0016c	e3a03000	 mov         r3, #0
  00170	e58d3000	 str         r3, [sp]
  00174	ea000002	 b           |$LN14@Init|
  00178		 |$LN13@Init|
  00178	e59d3000	 ldr         r3, [sp]
  0017c	e2833001	 add         r3, r3, #1
  00180	e58d3000	 str         r3, [sp]
  00184		 |$LN14@Init|
  00184	e59d2000	 ldr         r2, [sp]
  00188	e59d3008	 ldr         r3, [sp, #8]
  0018c	e1520003	 cmp         r2, r3
  00190	2a0000cf	 bcs         |$LN12@Init|

; 94   :     {
; 95   :         switch (sgControllerIdMap[i].mControllerType)

  00194	e59d1000	 ldr         r1, [sp]
  00198	e3a0302c	 mov         r3, #0x2C
  0019c	e0020391	 mul         r2, r1, r3
  001a0	e59f3488	 ldr         r3, [pc, #0x488]
  001a4	e0833002	 add         r3, r3, r2
  001a8	e2833024	 add         r3, r3, #0x24
  001ac	e5933000	 ldr         r3, [r3]
  001b0	e58d302c	 str         r3, [sp, #0x2C]
  001b4	e59d302c	 ldr         r3, [sp, #0x2C]
  001b8	e3530000	 cmp         r3, #0
  001bc	0a000006	 beq         |$LN9@Init|
  001c0	e59d302c	 ldr         r3, [sp, #0x2C]
  001c4	e3530001	 cmp         r3, #1
  001c8	0a00001d	 beq         |$LN8@Init|
  001cc	e59d302c	 ldr         r3, [sp, #0x2C]
  001d0	e3530002	 cmp         r3, #2
  001d4	0a000034	 beq         |$LN7@Init|
  001d8	ea00004d	 b           |$LN6@Init|
  001dc		 |$LN9@Init|

; 96   :         {
; 97   :         case DCT_StandardSystem:
; 98   :             *sgControllerIdMap[i].mppCont = new SysStandardDMAController;

  001dc	e3a00010	 mov         r0, #0x10
  001e0	eb000000	 bl          |??2@YAPAXI@Z|
  001e4	e58d0030	 str         r0, [sp, #0x30]
  001e8	e59d3030	 ldr         r3, [sp, #0x30]
  001ec	e58d300c	 str         r3, [sp, #0xC]
  001f0	e59d300c	 ldr         r3, [sp, #0xC]
  001f4	e3530000	 cmp         r3, #0
  001f8	0a000005	 beq         |$LN17@Init|
  001fc	e59d000c	 ldr         r0, [sp, #0xC]
  00200	eb000000	 bl          |??0SysStandardDMAController@@QAA@XZ|
  00204	e58d0034	 str         r0, [sp, #0x34]
  00208	e59d3034	 ldr         r3, [sp, #0x34]
  0020c	e58d3038	 str         r3, [sp, #0x38]
  00210	ea000001	 b           |$LN18@Init|
  00214		 |$LN17@Init|
  00214	e3a03000	 mov         r3, #0
  00218	e58d3038	 str         r3, [sp, #0x38]
  0021c		 |$LN18@Init|
  0021c	e59d1000	 ldr         r1, [sp]
  00220	e3a0302c	 mov         r3, #0x2C
  00224	e0020391	 mul         r2, r1, r3
  00228	e59f3400	 ldr         r3, [pc, #0x400]
  0022c	e0833002	 add         r3, r3, r2
  00230	e2833028	 add         r3, r3, #0x28
  00234	e5932000	 ldr         r2, [r3]
  00238	e59d3038	 ldr         r3, [sp, #0x38]
  0023c	e5823000	 str         r3, [r2]

; 99   :             break;

  00240	ea00003c	 b           |$LN10@Init|
  00244		 |$LN8@Init|

; 100  :         case DCT_StandardDSP:
; 101  :             *sgControllerIdMap[i].mppCont = new DSPStandardDMAController;

  00244	e3a0000c	 mov         r0, #0xC
  00248	eb000000	 bl          |??2@YAPAXI@Z|
  0024c	e58d003c	 str         r0, [sp, #0x3C]
  00250	e59d303c	 ldr         r3, [sp, #0x3C]
  00254	e58d3010	 str         r3, [sp, #0x10]
  00258	e59d3010	 ldr         r3, [sp, #0x10]
  0025c	e3530000	 cmp         r3, #0
  00260	0a000005	 beq         |$LN19@Init|
  00264	e59d0010	 ldr         r0, [sp, #0x10]
  00268	eb000000	 bl          |??0DSPStandardDMAController@@QAA@XZ|
  0026c	e58d0040	 str         r0, [sp, #0x40]
  00270	e59d3040	 ldr         r3, [sp, #0x40]
  00274	e58d3044	 str         r3, [sp, #0x44]
  00278	ea000001	 b           |$LN20@Init|
  0027c		 |$LN19@Init|
  0027c	e3a03000	 mov         r3, #0
  00280	e58d3044	 str         r3, [sp, #0x44]
  00284		 |$LN20@Init|
  00284	e59d1000	 ldr         r1, [sp]
  00288	e3a0302c	 mov         r3, #0x2C
  0028c	e0020391	 mul         r2, r1, r3
  00290	e59f3398	 ldr         r3, [pc, #0x398]
  00294	e0833002	 add         r3, r3, r2
  00298	e2833028	 add         r3, r3, #0x28
  0029c	e5932000	 ldr         r2, [r3]
  002a0	e59d3044	 ldr         r3, [sp, #0x44]
  002a4	e5823000	 str         r3, [r2]

; 102  :             break;

  002a8	ea000022	 b           |$LN10@Init|
  002ac		 |$LN7@Init|

; 103  :         case DCT_StandardCamera:
; 104  :             *sgControllerIdMap[i].mppCont = new CamStandardDMAController;

  002ac	e3a00010	 mov         r0, #0x10
  002b0	eb000000	 bl          |??2@YAPAXI@Z|
  002b4	e58d0048	 str         r0, [sp, #0x48]
  002b8	e59d3048	 ldr         r3, [sp, #0x48]
  002bc	e58d3014	 str         r3, [sp, #0x14]
  002c0	e59d3014	 ldr         r3, [sp, #0x14]
  002c4	e3530000	 cmp         r3, #0
  002c8	0a000005	 beq         |$LN21@Init|
  002cc	e59d0014	 ldr         r0, [sp, #0x14]
  002d0	eb000000	 bl          |??0CamStandardDMAController@@QAA@XZ|
  002d4	e58d004c	 str         r0, [sp, #0x4C]
  002d8	e59d304c	 ldr         r3, [sp, #0x4C]
  002dc	e58d3050	 str         r3, [sp, #0x50]
  002e0	ea000001	 b           |$LN22@Init|
  002e4		 |$LN21@Init|
  002e4	e3a03000	 mov         r3, #0
  002e8	e58d3050	 str         r3, [sp, #0x50]
  002ec		 |$LN22@Init|
  002ec	e59d1000	 ldr         r1, [sp]
  002f0	e3a0302c	 mov         r3, #0x2C
  002f4	e0020391	 mul         r2, r1, r3
  002f8	e59f3330	 ldr         r3, [pc, #0x330]
  002fc	e0833002	 add         r3, r3, r2
  00300	e2833028	 add         r3, r3, #0x28
  00304	e5932000	 ldr         r2, [r3]
  00308	e59d3050	 ldr         r3, [sp, #0x50]
  0030c	e5823000	 str         r3, [r2]

; 105  :             break;

  00310	ea000008	 b           |$LN10@Init|
  00314		 |$LN6@Init|

; 106  :         default:
; 107  :             *sgControllerIdMap[i].mppCont = NULL;

  00314	e59d1000	 ldr         r1, [sp]
  00318	e3a0302c	 mov         r3, #0x2C
  0031c	e0020391	 mul         r2, r1, r3
  00320	e59f3308	 ldr         r3, [pc, #0x308]
  00324	e0833002	 add         r3, r3, r2
  00328	e2833028	 add         r3, r3, #0x28
  0032c	e5932000	 ldr         r2, [r3]
  00330	e3a03000	 mov         r3, #0
  00334	e5823000	 str         r3, [r2]
  00338		 |$LN10@Init|

; 108  :         }
; 109  :         if (!(*sgControllerIdMap[i].mppCont))

  00338	e59d1000	 ldr         r1, [sp]
  0033c	e3a0302c	 mov         r3, #0x2C
  00340	e0020391	 mul         r2, r1, r3
  00344	e59f32e4	 ldr         r3, [pc, #0x2E4]
  00348	e0833002	 add         r3, r3, r2
  0034c	e2833028	 add         r3, r3, #0x28
  00350	e5933000	 ldr         r3, [r3]
  00354	e5933000	 ldr         r3, [r3]
  00358	e3530000	 cmp         r3, #0
  0035c	1a000000	 bne         |$LN5@Init|

; 110  :             break;

  00360	ea00005b	 b           |$LN12@Init|
  00364		 |$LN5@Init|

; 111  :         err = ((DMAController *)(*sgControllerIdMap[i].mppCont))->Init(); 

  00364	e59d1000	 ldr         r1, [sp]
  00368	e3a0302c	 mov         r3, #0x2C
  0036c	e0020391	 mul         r2, r1, r3
  00370	e59f32b8	 ldr         r3, [pc, #0x2B8]
  00374	e0833002	 add         r3, r3, r2
  00378	e2833028	 add         r3, r3, #0x28
  0037c	e5933000	 ldr         r3, [r3]
  00380	e593e000	 ldr         lr, [r3]
  00384	e59d1000	 ldr         r1, [sp]
  00388	e3a0302c	 mov         r3, #0x2C
  0038c	e0020391	 mul         r2, r1, r3
  00390	e59f3298	 ldr         r3, [pc, #0x298]
  00394	e0833002	 add         r3, r3, r2
  00398	e2833028	 add         r3, r3, #0x28
  0039c	e5933000	 ldr         r3, [r3]
  003a0	e5930000	 ldr         r0, [r3]
  003a4	e1de30d3	 ldrsb       r3, [lr, #3]
  003a8	e1a02403	 mov         r2, r3, lsl #8
  003ac	e5de3002	 ldrb        r3, [lr, #2]
  003b0	e1833002	 orr         r3, r3, r2
  003b4	e1a02403	 mov         r2, r3, lsl #8
  003b8	e5de3001	 ldrb        r3, [lr, #1]
  003bc	e1833002	 orr         r3, r3, r2
  003c0	e1a02403	 mov         r2, r3, lsl #8
  003c4	e5de3000	 ldrb        r3, [lr]
  003c8	e1833002	 orr         r3, r3, r2
  003cc	e2833004	 add         r3, r3, #4
  003d0	e5933000	 ldr         r3, [r3]
  003d4	e1a0e00f	 mov         lr, pc
  003d8	e12fff13	 bx          r3
  003dc	e58d0054	 str         r0, [sp, #0x54]
  003e0	e59d3054	 ldr         r3, [sp, #0x54]
  003e4	e58d3004	 str         r3, [sp, #4]

; 112  :         if (err)

  003e8	e59d3004	 ldr         r3, [sp, #4]
  003ec	e3530000	 cmp         r3, #0
  003f0	0a000036	 beq         |$LN4@Init|

; 113  :         {
; 114  :             DEBUGMSG(ZONE_ERROR, (L"DMASystem::Init(): "
; 115  :                 L"Controller id %d init returned error code 0x%08X\r\n", sgControllerIdMap[i].mEntry.mSysId, err
; 116  :             ));

  003f4	e59f323c	 ldr         r3, [pc, #0x23C]
  003f8	e5933440	 ldr         r3, [r3, #0x440]
  003fc	e3130001	 tst         r3, #1
  00400	0a00000b	 beq         |$LN23@Init|
  00404	e59d2004	 ldr         r2, [sp, #4]
  00408	e59d0000	 ldr         r0, [sp]
  0040c	e3a0302c	 mov         r3, #0x2C
  00410	e0010390	 mul         r1, r0, r3
  00414	e59f3214	 ldr         r3, [pc, #0x214]
  00418	e0833001	 add         r3, r3, r1
  0041c	e5931000	 ldr         r1, [r3]
  00420	e59f020c	 ldr         r0, [pc, #0x20C]
  00424	eb000000	 bl          NKDbgPrintfW
  00428	e3a03001	 mov         r3, #1
  0042c	e58d3058	 str         r3, [sp, #0x58]
  00430	ea000001	 b           |$LN24@Init|
  00434		 |$LN23@Init|
  00434	e3a03000	 mov         r3, #0
  00438	e58d3058	 str         r3, [sp, #0x58]
  0043c		 |$LN24@Init|

; 117  :             
; 118  :             delete (DMAController *)(*sgControllerIdMap[i].mppCont);

  0043c	e59d1000	 ldr         r1, [sp]
  00440	e3a0302c	 mov         r3, #0x2C
  00444	e0020391	 mul         r2, r1, r3
  00448	e59f31e0	 ldr         r3, [pc, #0x1E0]
  0044c	e0833002	 add         r3, r3, r2
  00450	e2833028	 add         r3, r3, #0x28
  00454	e5933000	 ldr         r3, [r3]
  00458	e5933000	 ldr         r3, [r3]
  0045c	e58d301c	 str         r3, [sp, #0x1C]
  00460	e59d301c	 ldr         r3, [sp, #0x1C]
  00464	e58d3018	 str         r3, [sp, #0x18]
  00468	e59d3018	 ldr         r3, [sp, #0x18]
  0046c	e3530000	 cmp         r3, #0
  00470	0a00000a	 beq         |$LN25@Init|
  00474	e3a01001	 mov         r1, #1
  00478	e59d3018	 ldr         r3, [sp, #0x18]
  0047c	e5933000	 ldr         r3, [r3]
  00480	e59d0018	 ldr         r0, [sp, #0x18]
  00484	e5933000	 ldr         r3, [r3]
  00488	e1a0e00f	 mov         lr, pc
  0048c	e12fff13	 bx          r3
  00490	e58d005c	 str         r0, [sp, #0x5C]
  00494	e59d305c	 ldr         r3, [sp, #0x5C]
  00498	e58d3060	 str         r3, [sp, #0x60]
  0049c	ea000001	 b           |$LN26@Init|
  004a0		 |$LN25@Init|
  004a0	e3a03000	 mov         r3, #0
  004a4	e58d3060	 str         r3, [sp, #0x60]
  004a8		 |$LN26@Init|

; 119  :             *sgControllerIdMap[i].mppCont = NULL;

  004a8	e59d1000	 ldr         r1, [sp]
  004ac	e3a0302c	 mov         r3, #0x2C
  004b0	e0020391	 mul         r2, r1, r3
  004b4	e59f3174	 ldr         r3, [pc, #0x174]
  004b8	e0833002	 add         r3, r3, r2
  004bc	e2833028	 add         r3, r3, #0x28
  004c0	e5932000	 ldr         r2, [r3]
  004c4	e3a03000	 mov         r3, #0
  004c8	e5823000	 str         r3, [r2]

; 120  :             
; 121  :             break;

  004cc	ea000000	 b           |$LN12@Init|
  004d0		 |$LN4@Init|

; 122  :         }
; 123  :     }

  004d0	eaffff28	 b           |$LN13@Init|
  004d4		 |$LN12@Init|

; 124  :     if (i!=numEntries)

  004d4	e59d2000	 ldr         r2, [sp]
  004d8	e59d3008	 ldr         r3, [sp, #8]
  004dc	e1520003	 cmp         r2, r3
  004e0	0a00004c	 beq         |$LN3@Init|
  004e4		 |$LN2@Init|

; 125  :     {
; 126  :         /* failed to make all controllers.  clean up */
; 127  :         while (i>0)

  004e4	e59d3000	 ldr         r3, [sp]
  004e8	e3530000	 cmp         r3, #0
  004ec	9a000045	 bls         |$LN1@Init|

; 128  :         {
; 129  :             i--;

  004f0	e59d3000	 ldr         r3, [sp]
  004f4	e2433001	 sub         r3, r3, #1
  004f8	e58d3000	 str         r3, [sp]

; 130  :             ((DMAController *)(*sgControllerIdMap[i].mppCont))->ShutDown();

  004fc	e59d1000	 ldr         r1, [sp]
  00500	e3a0302c	 mov         r3, #0x2C
  00504	e0020391	 mul         r2, r1, r3
  00508	e59f3120	 ldr         r3, [pc, #0x120]
  0050c	e0833002	 add         r3, r3, r2
  00510	e2833028	 add         r3, r3, #0x28
  00514	e5933000	 ldr         r3, [r3]
  00518	e593e000	 ldr         lr, [r3]
  0051c	e59d1000	 ldr         r1, [sp]
  00520	e3a0302c	 mov         r3, #0x2C
  00524	e0020391	 mul         r2, r1, r3
  00528	e59f3100	 ldr         r3, [pc, #0x100]
  0052c	e0833002	 add         r3, r3, r2
  00530	e2833028	 add         r3, r3, #0x28
  00534	e5933000	 ldr         r3, [r3]
  00538	e5930000	 ldr         r0, [r3]
  0053c	e1de30d3	 ldrsb       r3, [lr, #3]
  00540	e1a02403	 mov         r2, r3, lsl #8
  00544	e5de3002	 ldrb        r3, [lr, #2]
  00548	e1833002	 orr         r3, r3, r2
  0054c	e1a02403	 mov         r2, r3, lsl #8
  00550	e5de3001	 ldrb        r3, [lr, #1]
  00554	e1833002	 orr         r3, r3, r2
  00558	e1a02403	 mov         r2, r3, lsl #8
  0055c	e5de3000	 ldrb        r3, [lr]
  00560	e1833002	 orr         r3, r3, r2
  00564	e2833008	 add         r3, r3, #8
  00568	e5933000	 ldr         r3, [r3]
  0056c	e1a0e00f	 mov         lr, pc
  00570	e12fff13	 bx          r3

; 131  :             delete (DMAController *)(*sgControllerIdMap[i].mppCont);

  00574	e59d1000	 ldr         r1, [sp]
  00578	e3a0302c	 mov         r3, #0x2C
  0057c	e0020391	 mul         r2, r1, r3
  00580	e59f30a8	 ldr         r3, [pc, #0xA8]
  00584	e0833002	 add         r3, r3, r2
  00588	e2833028	 add         r3, r3, #0x28
  0058c	e5933000	 ldr         r3, [r3]
  00590	e5933000	 ldr         r3, [r3]
  00594	e58d3024	 str         r3, [sp, #0x24]
  00598	e59d3024	 ldr         r3, [sp, #0x24]
  0059c	e58d3020	 str         r3, [sp, #0x20]
  005a0	e59d3020	 ldr         r3, [sp, #0x20]
  005a4	e3530000	 cmp         r3, #0
  005a8	0a00000a	 beq         |$LN27@Init|
  005ac	e3a01001	 mov         r1, #1
  005b0	e59d3020	 ldr         r3, [sp, #0x20]
  005b4	e5933000	 ldr         r3, [r3]
  005b8	e59d0020	 ldr         r0, [sp, #0x20]
  005bc	e5933000	 ldr         r3, [r3]
  005c0	e1a0e00f	 mov         lr, pc
  005c4	e12fff13	 bx          r3
  005c8	e58d0064	 str         r0, [sp, #0x64]
  005cc	e59d3064	 ldr         r3, [sp, #0x64]
  005d0	e58d3068	 str         r3, [sp, #0x68]
  005d4	ea000001	 b           |$LN28@Init|
  005d8		 |$LN27@Init|
  005d8	e3a03000	 mov         r3, #0
  005dc	e58d3068	 str         r3, [sp, #0x68]
  005e0		 |$LN28@Init|

; 132  :             *sgControllerIdMap[i].mppCont = NULL;

  005e0	e59d1000	 ldr         r1, [sp]
  005e4	e3a0302c	 mov         r3, #0x2C
  005e8	e0020391	 mul         r2, r1, r3
  005ec	e59f303c	 ldr         r3, [pc, #0x3C]
  005f0	e0833002	 add         r3, r3, r2
  005f4	e2833028	 add         r3, r3, #0x28
  005f8	e5932000	 ldr         r2, [r3]
  005fc	e3a03000	 mov         r3, #0
  00600	e5823000	 str         r3, [r2]

; 133  :         }

  00604	eaffffb6	 b           |$LN2@Init|
  00608		 |$LN1@Init|

; 134  :         return DMADRVERR_INIT_FAILURE;

  00608	e3a0312a	 mov         r3, #0x2A, 2
  0060c	e3833712	 orr         r3, r3, #0x12, 14
  00610	e58d3028	 str         r3, [sp, #0x28]
  00614	ea000001	 b           |$LN15@Init|
  00618		 |$LN3@Init|

; 135  :     }
; 136  : 
; 137  :     return err;

  00618	e59d3004	 ldr         r3, [sp, #4]
  0061c	e58d3028	 str         r3, [sp, #0x28]
  00620		 |$LN15@Init|

; 138  : }

  00620	e59d0028	 ldr         r0, [sp, #0x28]
  00624	e28dd06c	 add         sp, sp, #0x6C
  00628	e89d6000	 ldmia       sp, {sp, lr}
  0062c	e12fff1e	 bx          lr
  00630		 |$LN32@Init|
  00630		 |$LN33@Init|
  00630	00000000	 DCD         |sgControllerIdMap|
  00634		 |$LN34@Init|
  00634	00000000	 DCD         |??_C@_1IM@MHLJDDIH@?$AAD?$AAM?$AAA?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?5?$AAi?$AAd@|
  00638		 |$LN35@Init|
  00638	00000000	 DCD         |dpCurSettings|
  0063c		 |$M36796|

			 ENDP  ; |?Init@DMASystem@@QAAIXZ|, DMASystem::Init

	EXPORT	|??_7DSPStandardDMAController@@6B@| [ DATA ] ; DSPStandardDMAController::`vftable'
	EXPORT	|?Init@DSPStandardDMAController@@UAAIXZ| ; DSPStandardDMAController::Init
	EXPORT	|?ShutDown@DSPStandardDMAController@@UAAXXZ| ; DSPStandardDMAController::ShutDown
	EXPORT	|?Set@DSPStandardDMAController@@UAAIIW4DMA_seqProperty@@I@Z| ; DSPStandardDMAController::Set
	EXPORT	|?Get@DSPStandardDMAController@@UAAIIW4DMA_seqProperty@@PAI@Z| ; DSPStandardDMAController::Get
	IMPORT	|??0StandardDMAController@@QAA@I@Z|	; StandardDMAController::StandardDMAController
	IMPORT	|??_EDSPStandardDMAController@@UAAPAXI@Z|, WEAK |??_GDSPStandardDMAController@@UAAPAXI@Z| ; DSPStandardDMAController::`vector deleting destructor', DSPStandardDMAController::`scalar deleting destructor'
	IMPORT	|?AllocChannels@StandardDMAController@@UAAIIAAI@Z| ; StandardDMAController::AllocChannels
	IMPORT	|?FreeChannels@StandardDMAController@@UAAII@Z| ; StandardDMAController::FreeChannels
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\dma\private\dmasys.h

  00000			 AREA	 |.pdata|, PDATA
|$T36808| DCD	|$LN5@DSPStandar|
	DCD	0x40001204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7DSPStandardDMAController@@6B@| DCD |??_EDSPStandardDMAController@@UAAPAXI@Z| ; DSPStandardDMAController::`vftable'
	DCD	|?Init@DSPStandardDMAController@@UAAIXZ|
	DCD	|?ShutDown@DSPStandardDMAController@@UAAXXZ|
	DCD	|?Set@DSPStandardDMAController@@UAAIIW4DMA_seqProperty@@I@Z|
	DCD	|?Get@DSPStandardDMAController@@UAAIIW4DMA_seqProperty@@PAI@Z|
	DCD	|?AllocChannels@StandardDMAController@@UAAIIAAI@Z|
	DCD	|?FreeChannels@StandardDMAController@@UAAII@Z|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0DSPStandardDMAController@@QAA@XZ| PROC ; DSPStandardDMAController::DSPStandardDMAController

; 143  :     DSPStandardDMAController(void) : StandardDMAController(0) {}

  00000		 |$LN5@DSPStandar|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36805|
  00010	e3a01000	 mov         r1, #0
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          |??0StandardDMAController@@QAA@I@Z|
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59f201c	 ldr         r2, [pc, #0x1C]
  00024	e59d3010	 ldr         r3, [sp, #0x10]
  00028	e5832000	 str         r2, [r3]
  0002c	e59d3010	 ldr         r3, [sp, #0x10]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd008	 add         sp, sp, #8
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$LN6@DSPStandar|
  00044		 |$LN7@DSPStandar|
  00044	00000000	 DCD         |??_7DSPStandardDMAController@@6B@|
  00048		 |$M36806|

			 ENDP  ; |??0DSPStandardDMAController@@QAA@XZ|, DSPStandardDMAController::DSPStandardDMAController


  00000			 AREA	 |.pdata|, PDATA
|$T36818| DCD	|$LN5@Init@2|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Init@DSPStandardDMAController@@UAAIXZ| PROC ; DSPStandardDMAController::Init

; 145  :     uint Init(void) { return 0; }

  00000		 |$LN5@Init@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36815|
  00010	e3a03000	 mov         r3, #0
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M36816|

			 ENDP  ; |?Init@DSPStandardDMAController@@UAAIXZ|, DSPStandardDMAController::Init


  00000			 AREA	 |.pdata|, PDATA
|$T36825| DCD	|$LN5@ShutDown|
	DCD	0x40000503
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ShutDown@DSPStandardDMAController@@UAAXXZ| PROC ; DSPStandardDMAController::ShutDown

; 146  :     void ShutDown(void) {}

  00000		 |$LN5@ShutDown|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36822|
  0000c	e89d6000	 ldmia       sp, {sp, lr}
  00010	e12fff1e	 bx          lr
  00014		 |$M36823|

			 ENDP  ; |?ShutDown@DSPStandardDMAController@@UAAXXZ|, DSPStandardDMAController::ShutDown


  00000			 AREA	 |.pdata|, PDATA
|$T36833| DCD	|$LN5@Set|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Set@DSPStandardDMAController@@UAAIIW4DMA_seqProperty@@I@Z| PROC ; DSPStandardDMAController::Set

; 147  :     uint Set(uint aChanMask, DMA_CONT_PROPERTY aProp, uint aValue) { return 0; }

  00000		 |$LN5@Set|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36830|
  00010	e3a03000	 mov         r3, #0
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M36831|

			 ENDP  ; |?Set@DSPStandardDMAController@@UAAIIW4DMA_seqProperty@@I@Z|, DSPStandardDMAController::Set


  00000			 AREA	 |.pdata|, PDATA
|$T36841| DCD	|$LN5@Get|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Get@DSPStandardDMAController@@UAAIIW4DMA_seqProperty@@PAI@Z| PROC ; DSPStandardDMAController::Get

; 148  :     uint Get(uint aChanMask, DMA_CONT_PROPERTY aProp, uint *apRetValue) { return 0; }

  00000		 |$LN5@Get|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36838|
  00010	e3a03000	 mov         r3, #0
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M36839|

			 ENDP  ; |?Get@DSPStandardDMAController@@UAAIIW4DMA_seqProperty@@PAI@Z|, DSPStandardDMAController::Get

	EXPORT	|??1DSPStandardDMAController@@UAA@XZ|	; DSPStandardDMAController::~DSPStandardDMAController
	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T36849| DCD	|$LN6@scalar|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GDSPStandardDMAController@@UAAPAXI@Z| PROC ; DSPStandardDMAController::`scalar deleting destructor'
  00000		 |$LN6@scalar|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36846|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1DSPStandardDMAController@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M36847|

			 ENDP  ; |??_GDSPStandardDMAController@@UAAPAXI@Z|, DSPStandardDMAController::`scalar deleting destructor'

	EXPORT	|??1StandardDMAController@@UAA@XZ|	; StandardDMAController::~StandardDMAController

  00000			 AREA	 |.pdata|, PDATA
|$T36856| DCD	|$LN5@DSPStandar@2|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1DSPStandardDMAController@@UAA@XZ| PROC ; DSPStandardDMAController::~DSPStandardDMAController
  00000		 |$LN5@DSPStandar@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36853|
  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          |??1StandardDMAController@@UAA@XZ|
  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M36854|

			 ENDP  ; |??1DSPStandardDMAController@@UAA@XZ|, DSPStandardDMAController::~DSPStandardDMAController

	EXPORT	|??1DMAController@@UAA@XZ|		; DMAController::~DMAController

  00000			 AREA	 |.pdata|, PDATA
|$T36863| DCD	|$LN5@StandardDM|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1StandardDMAController@@UAA@XZ| PROC ; StandardDMAController::~StandardDMAController
  00000		 |$LN5@StandardDM|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36860|
  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          |??1DMAController@@UAA@XZ|
  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M36861|

			 ENDP  ; |??1StandardDMAController@@UAA@XZ|, StandardDMAController::~StandardDMAController

	EXPORT	|??_7DMAController@@6B@| [ DATA ]	; DMAController::`vftable'
	IMPORT	|??_EDMAController@@UAAPAXI@Z|, WEAK |??_GDMAController@@UAAPAXI@Z| ; DMAController::`vector deleting destructor', DMAController::`scalar deleting destructor'
	IMPORT	|_purecall|

  00000			 AREA	 |.pdata|, PDATA
|$T36870| DCD	|$LN5@DMAControl|
	DCD	0x40000903

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7DMAController@@6B@| DCD |??_EDMAController@@UAAPAXI@Z| ; DMAController::`vftable'
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1DMAController@@UAA@XZ| PROC	; DMAController::~DMAController

; 95   :     virtual ~DMAController(void) {}

  00000		 |$LN5@DMAControl|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36867|
  0000c	e59f200c	 ldr         r2, [pc, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e5832000	 str         r2, [r3]
  00018	e89d6000	 ldmia       sp, {sp, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$LN6@DMAControl|
  00020		 |$LN7@DMAControl|
  00020	00000000	 DCD         |??_7DMAController@@6B@|
  00024		 |$M36868|

			 ENDP  ; |??1DMAController@@UAA@XZ|, DMAController::~DMAController


  00000			 AREA	 |.pdata|, PDATA
|$T36880| DCD	|$LN6@scalar@2|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GDMAController@@UAAPAXI@Z| PROC	; DMAController::`scalar deleting destructor'
  00000		 |$LN6@scalar@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36877|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1DMAController@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar@2|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar@2|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M36878|

			 ENDP  ; |??_GDMAController@@UAAPAXI@Z|, DMAController::`scalar deleting destructor'

	EXPORT	|?Close@DMASystem@@QAAIK@Z|		; DMASystem::Close
	EXPORT	|?Deinit@DMASystem@@QAAIXZ|		; DMASystem::Deinit

  00020			 AREA	 |.pdata|, PDATA
|$T36892| DCD	|$LN13@Deinit|
	DCD	0x40005b04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\dma\private\dmasys.cpp

  0063c			 AREA	 |.text|, CODE, ARM

  0063c		 |?Deinit@DMASystem@@QAAIXZ| PROC	; DMASystem::Deinit

; 141  : {

  0063c		 |$LN13@Deinit|
  0063c	e1a0c00d	 mov         r12, sp
  00640	e92d0001	 stmdb       sp!, {r0}
  00644	e92d5000	 stmdb       sp!, {r12, lr}
  00648	e24dd020	 sub         sp, sp, #0x20
  0064c		 |$M36889|
  0064c		 |$LN6@Deinit|

; 142  : //    RETAILMSG(1, (TEXT("DMASystem::Deinit()\r\n")));
; 143  : 
; 144  :     /* do deinit here */
; 145  :     while (mpUserList)

  0064c	e59d3028	 ldr         r3, [sp, #0x28]
  00650	e2833004	 add         r3, r3, #4
  00654	e5933000	 ldr         r3, [r3]
  00658	e3530000	 cmp         r3, #0
  0065c	0a000006	 beq         |$LN5@Deinit|

; 146  :     {
; 147  :         Close(mpUserList->mUserKey);

  00660	e59d3028	 ldr         r3, [sp, #0x28]
  00664	e2833004	 add         r3, r3, #4
  00668	e5933000	 ldr         r3, [r3]
  0066c	e5931000	 ldr         r1, [r3]
  00670	e59d0028	 ldr         r0, [sp, #0x28]
  00674	eb000000	 bl          |?Close@DMASystem@@QAAIK@Z|

; 148  :         /* mpUserList will have changed here inside Close() call */
; 149  :     }

  00678	eafffff3	 b           |$LN6@Deinit|
  0067c		 |$LN5@Deinit|

; 150  : 
; 151  :     uint i;
; 152  :     uint numEntries = sizeof(sgControllerIdMap)/sizeof(DMAControllerIdMapping);

  0067c	e3a03003	 mov         r3, #3
  00680	e58d3004	 str         r3, [sp, #4]

; 153  :     for(i=0;i<numEntries;i++)

  00684	e3a03000	 mov         r3, #0
  00688	e58d3000	 str         r3, [sp]
  0068c	ea000002	 b           |$LN4@Deinit|
  00690		 |$LN3@Deinit|
  00690	e59d3000	 ldr         r3, [sp]
  00694	e2833001	 add         r3, r3, #1
  00698	e58d3000	 str         r3, [sp]
  0069c		 |$LN4@Deinit|
  0069c	e59d2000	 ldr         r2, [sp]
  006a0	e59d3004	 ldr         r3, [sp, #4]
  006a4	e1520003	 cmp         r2, r3
  006a8	2a000037	 bcs         |$LN2@Deinit|

; 154  :     {
; 155  :         if (*sgControllerIdMap[i].mppCont)

  006ac	e59d1000	 ldr         r1, [sp]
  006b0	e3a0302c	 mov         r3, #0x2C
  006b4	e0020391	 mul         r2, r1, r3
  006b8	e59f30e4	 ldr         r3, [pc, #0xE4]
  006bc	e0833002	 add         r3, r3, r2
  006c0	e2833028	 add         r3, r3, #0x28
  006c4	e5933000	 ldr         r3, [r3]
  006c8	e5933000	 ldr         r3, [r3]
  006cc	e3530000	 cmp         r3, #0
  006d0	0a00002c	 beq         |$LN1@Deinit|

; 156  :         {
; 157  :             DMAController *pCont = (DMAController *)(*sgControllerIdMap[i].mppCont);

  006d4	e59d1000	 ldr         r1, [sp]
  006d8	e3a0302c	 mov         r3, #0x2C
  006dc	e0020391	 mul         r2, r1, r3
  006e0	e59f30bc	 ldr         r3, [pc, #0xBC]
  006e4	e0833002	 add         r3, r3, r2
  006e8	e2833028	 add         r3, r3, #0x28
  006ec	e5933000	 ldr         r3, [r3]
  006f0	e5933000	 ldr         r3, [r3]
  006f4	e58d3008	 str         r3, [sp, #8]

; 158  :             pCont->ShutDown();

  006f8	e59d3008	 ldr         r3, [sp, #8]
  006fc	e5933000	 ldr         r3, [r3]
  00700	e2833008	 add         r3, r3, #8
  00704	e59d0008	 ldr         r0, [sp, #8]
  00708	e5933000	 ldr         r3, [r3]
  0070c	e1a0e00f	 mov         lr, pc
  00710	e12fff13	 bx          r3

; 159  :             delete pCont;

  00714	e59d3008	 ldr         r3, [sp, #8]
  00718	e58d3010	 str         r3, [sp, #0x10]
  0071c	e59d3010	 ldr         r3, [sp, #0x10]
  00720	e58d300c	 str         r3, [sp, #0xC]
  00724	e59d300c	 ldr         r3, [sp, #0xC]
  00728	e3530000	 cmp         r3, #0
  0072c	0a00000a	 beq         |$LN9@Deinit|
  00730	e3a01001	 mov         r1, #1
  00734	e59d300c	 ldr         r3, [sp, #0xC]
  00738	e5933000	 ldr         r3, [r3]
  0073c	e59d000c	 ldr         r0, [sp, #0xC]
  00740	e5933000	 ldr         r3, [r3]
  00744	e1a0e00f	 mov         lr, pc
  00748	e12fff13	 bx          r3
  0074c	e58d0018	 str         r0, [sp, #0x18]
  00750	e59d3018	 ldr         r3, [sp, #0x18]
  00754	e58d301c	 str         r3, [sp, #0x1C]
  00758	ea000001	 b           |$LN10@Deinit|
  0075c		 |$LN9@Deinit|
  0075c	e3a03000	 mov         r3, #0
  00760	e58d301c	 str         r3, [sp, #0x1C]
  00764		 |$LN10@Deinit|

; 160  :             *sgControllerIdMap[i].mppCont = NULL;

  00764	e59d1000	 ldr         r1, [sp]
  00768	e3a0302c	 mov         r3, #0x2C
  0076c	e0020391	 mul         r2, r1, r3
  00770	e59f302c	 ldr         r3, [pc, #0x2C]
  00774	e0833002	 add         r3, r3, r2
  00778	e2833028	 add         r3, r3, #0x28
  0077c	e5932000	 ldr         r2, [r3]
  00780	e3a03000	 mov         r3, #0
  00784	e5823000	 str         r3, [r2]
  00788		 |$LN1@Deinit|

; 161  :         }
; 162  :     }

  00788	eaffffc0	 b           |$LN3@Deinit|
  0078c		 |$LN2@Deinit|

; 163  : 
; 164  :     return 0;

  0078c	e3a03000	 mov         r3, #0
  00790	e58d3014	 str         r3, [sp, #0x14]

; 165  : }

  00794	e59d0014	 ldr         r0, [sp, #0x14]
  00798	e28dd020	 add         sp, sp, #0x20
  0079c	e89d6000	 ldmia       sp, {sp, lr}
  007a0	e12fff1e	 bx          lr
  007a4		 |$LN14@Deinit|
  007a4		 |$LN15@Deinit|
  007a4	00000000	 DCD         |sgControllerIdMap|
  007a8		 |$M36890|

			 ENDP  ; |?Deinit@DMASystem@@QAAIXZ|, DMASystem::Deinit

	EXPORT	|?Open@DMASystem@@QAAIKKPAK@Z|		; DMASystem::Open

  00028			 AREA	 |.pdata|, PDATA
|$T36900| DCD	|$LN5@Open|
	DCD	0x40001304
; Function compile flags: /Odtp

  007a8			 AREA	 |.text|, CODE, ARM

  007a8		 |?Open@DMASystem@@QAAIKKPAK@Z| PROC	; DMASystem::Open

; 168  : {

  007a8		 |$LN5@Open|
  007a8	e1a0c00d	 mov         r12, sp
  007ac	e92d000f	 stmdb       sp!, {r0 - r3}
  007b0	e92d5000	 stmdb       sp!, {r12, lr}
  007b4	e24dd004	 sub         sp, sp, #4
  007b8		 |$M36897|

; 169  :     /* do open here */
; 170  : //    RETAILMSG(1, (TEXT("DMASystem::Open()\r\n")));
; 171  :     *retOpenContext = mOpenContextUserId++;

  007b8	e59d300c	 ldr         r3, [sp, #0xC]
  007bc	e5932000	 ldr         r2, [r3]
  007c0	e59d3018	 ldr         r3, [sp, #0x18]
  007c4	e5832000	 str         r2, [r3]
  007c8	e59d300c	 ldr         r3, [sp, #0xC]
  007cc	e5933000	 ldr         r3, [r3]
  007d0	e2832001	 add         r2, r3, #1
  007d4	e59d300c	 ldr         r3, [sp, #0xC]
  007d8	e5832000	 str         r2, [r3]

; 172  :     return 0;

  007dc	e3a03000	 mov         r3, #0
  007e0	e58d3000	 str         r3, [sp]

; 173  : }

  007e4	e59d0000	 ldr         r0, [sp]
  007e8	e28dd004	 add         sp, sp, #4
  007ec	e89d6000	 ldmia       sp, {sp, lr}
  007f0	e12fff1e	 bx          lr
  007f4		 |$M36898|

			 ENDP  ; |?Open@DMASystem@@QAAIKKPAK@Z|, DMASystem::Open


  00030			 AREA	 |.pdata|, PDATA
|$T36907| DCD	|$LN13@Close|
	DCD	0x40005904
; Function compile flags: /Odtp

  007f4			 AREA	 |.text|, CODE, ARM

  007f4		 |?Close@DMASystem@@QAAIK@Z| PROC	; DMASystem::Close

; 176  : {

  007f4		 |$LN13@Close|
  007f4	e1a0c00d	 mov         r12, sp
  007f8	e92d0003	 stmdb       sp!, {r0, r1}
  007fc	e92d5000	 stmdb       sp!, {r12, lr}
  00800	e24dd020	 sub         sp, sp, #0x20
  00804		 |$M36904|

; 177  :     if (!dwOpenContext)

  00804	e59d302c	 ldr         r3, [sp, #0x2C]
  00808	e3530000	 cmp         r3, #0
  0080c	1a000003	 bne         |$LN8@Close|

; 178  :         return DMADRVERR_NOTOPEN;

  00810	e3a03116	 mov         r3, #0x16, 2
  00814	e3833712	 orr         r3, r3, #0x12, 14
  00818	e58d3018	 str         r3, [sp, #0x18]
  0081c	ea000049	 b           |$LN9@Close|
  00820		 |$LN8@Close|

; 179  : 
; 180  :     /* do close here */
; 181  : //    RETAILMSG(1, (TEXT("DMASystem::Close(%d)\r\n"),dwOpenContext));
; 182  : 
; 183  :     DMAUser *pChk = mpUserList;

  00820	e59d3028	 ldr         r3, [sp, #0x28]
  00824	e2833004	 add         r3, r3, #4
  00828	e5933000	 ldr         r3, [r3]
  0082c	e58d3004	 str         r3, [sp, #4]

; 184  :     DMAUser *pPrev = NULL;

  00830	e3a03000	 mov         r3, #0
  00834	e58d3000	 str         r3, [sp]

; 185  : 
; 186  :     uint err = 0;

  00838	e3a03000	 mov         r3, #0
  0083c	e58d3008	 str         r3, [sp, #8]
  00840		 |$LN7@Close|

; 187  :     while (pChk)

  00840	e59d3004	 ldr         r3, [sp, #4]
  00844	e3530000	 cmp         r3, #0
  00848	0a00003c	 beq         |$LN6@Close|

; 188  :     {
; 189  :         if (pChk->mUserKey==dwOpenContext)

  0084c	e59d3004	 ldr         r3, [sp, #4]
  00850	e5932000	 ldr         r2, [r3]
  00854	e59d302c	 ldr         r3, [sp, #0x2C]
  00858	e1520003	 cmp         r2, r3
  0085c	1a000030	 bne         |$LN5@Close|

; 190  :         {
; 191  :             /* remove pChk from dmauserlist */
; 192  :             if (pPrev)

  00860	e59d3000	 ldr         r3, [sp]
  00864	e3530000	 cmp         r3, #0
  00868	0a000006	 beq         |$LN4@Close|

; 193  :                 pPrev->mpNext = pChk->mpNext;

  0086c	e59d3004	 ldr         r3, [sp, #4]
  00870	e283100c	 add         r1, r3, #0xC
  00874	e59d3000	 ldr         r3, [sp]
  00878	e283200c	 add         r2, r3, #0xC
  0087c	e5913000	 ldr         r3, [r1]
  00880	e5823000	 str         r3, [r2]

; 194  :             else

  00884	ea000005	 b           |$LN3@Close|
  00888		 |$LN4@Close|

; 195  :                 mpUserList = pChk->mpNext;

  00888	e59d3004	 ldr         r3, [sp, #4]
  0088c	e283100c	 add         r1, r3, #0xC
  00890	e59d3028	 ldr         r3, [sp, #0x28]
  00894	e2832004	 add         r2, r3, #4
  00898	e5913000	 ldr         r3, [r1]
  0089c	e5823000	 str         r3, [r2]
  008a0		 |$LN3@Close|

; 196  :             DMAUser *pKill = pChk;

  008a0	e59d3004	 ldr         r3, [sp, #4]
  008a4	e58d300c	 str         r3, [sp, #0xC]

; 197  :             pChk = pChk->mpNext;

  008a8	e59d3004	 ldr         r3, [sp, #4]
  008ac	e283300c	 add         r3, r3, #0xC
  008b0	e5933000	 ldr         r3, [r3]
  008b4	e58d3004	 str         r3, [sp, #4]

; 198  :             
; 199  :             /* now release the channels it was using */
; 200  :             uint newErr = pKill->mpCont->FreeChannels(pKill->mChanMask);

  008b8	e59d300c	 ldr         r3, [sp, #0xC]
  008bc	e2833004	 add         r3, r3, #4
  008c0	e5931000	 ldr         r1, [r3]
  008c4	e59d300c	 ldr         r3, [sp, #0xC]
  008c8	e2833008	 add         r3, r3, #8
  008cc	e5932000	 ldr         r2, [r3]
  008d0	e59d300c	 ldr         r3, [sp, #0xC]
  008d4	e2833008	 add         r3, r3, #8
  008d8	e5930000	 ldr         r0, [r3]
  008dc	e5923000	 ldr         r3, [r2]
  008e0	e2833018	 add         r3, r3, #0x18
  008e4	e5933000	 ldr         r3, [r3]
  008e8	e1a0e00f	 mov         lr, pc
  008ec	e12fff13	 bx          r3
  008f0	e58d001c	 str         r0, [sp, #0x1C]
  008f4	e59d301c	 ldr         r3, [sp, #0x1C]
  008f8	e58d3010	 str         r3, [sp, #0x10]

; 201  :             if (!err)

  008fc	e59d3008	 ldr         r3, [sp, #8]
  00900	e3530000	 cmp         r3, #0
  00904	1a000001	 bne         |$LN2@Close|

; 202  :                 err = newErr;

  00908	e59d3010	 ldr         r3, [sp, #0x10]
  0090c	e58d3008	 str         r3, [sp, #8]
  00910		 |$LN2@Close|

; 203  : 
; 204  :             delete pKill;

  00910	e59d300c	 ldr         r3, [sp, #0xC]
  00914	e58d3014	 str         r3, [sp, #0x14]
  00918	e59d0014	 ldr         r0, [sp, #0x14]
  0091c	eb000000	 bl          |??3@YAXPAX@Z|

; 205  :         }
; 206  :         else

  00920	ea000005	 b           |$LN1@Close|
  00924		 |$LN5@Close|

; 207  :         {
; 208  :             pPrev = pChk;

  00924	e59d3004	 ldr         r3, [sp, #4]
  00928	e58d3000	 str         r3, [sp]

; 209  :             pChk = pChk->mpNext;

  0092c	e59d3004	 ldr         r3, [sp, #4]
  00930	e283300c	 add         r3, r3, #0xC
  00934	e5933000	 ldr         r3, [r3]
  00938	e58d3004	 str         r3, [sp, #4]
  0093c		 |$LN1@Close|

; 210  :         }
; 211  :     }

  0093c	eaffffbf	 b           |$LN7@Close|
  00940		 |$LN6@Close|

; 212  : 
; 213  :     return err;

  00940	e59d3008	 ldr         r3, [sp, #8]
  00944	e58d3018	 str         r3, [sp, #0x18]
  00948		 |$LN9@Close|

; 214  : }

  00948	e59d0018	 ldr         r0, [sp, #0x18]
  0094c	e28dd020	 add         sp, sp, #0x20
  00950	e89d6000	 ldmia       sp, {sp, lr}
  00954	e12fff1e	 bx          lr
  00958		 |$M36905|

			 ENDP  ; |?Close@DMASystem@@QAAIK@Z|, DMASystem::Close

	EXPORT	|?Ioctl_Close@DMASystem@@AAAIAAU_dmaIOCTL@@0@Z| ; DMASystem::Ioctl_Close
	EXPORT	|?Ioctl_Get@DMASystem@@AAAIAAU_dmaIOCTL@@0@Z| ; DMASystem::Ioctl_Get
	EXPORT	|?Ioctl_Set@DMASystem@@AAAIAAU_dmaIOCTL@@0@Z| ; DMASystem::Ioctl_Set
	EXPORT	|?Ioctl_Free@DMASystem@@AAAIAAU_dmaIOCTL@@0@Z| ; DMASystem::Ioctl_Free
	EXPORT	|?Ioctl_Acq@DMASystem@@AAAIAAU_dmaIOCTL@@0@Z| ; DMASystem::Ioctl_Acq
	EXPORT	|?Ioctl_Open@DMASystem@@AAAIKAAU_dmaIOCTL@@0@Z| ; DMASystem::Ioctl_Open
	EXPORT	|?Ioctl_GetEnum@DMASystem@@AAAIPAEKPAK@Z| ; DMASystem::Ioctl_GetEnum
	EXPORT	|?Ioctl_GetSize@DMASystem@@AAAIPAEKPAK@Z| ; DMASystem::Ioctl_GetSize
	EXPORT	|?Command@DMASystem@@QAAIKKPAEK0KPAK@Z|	; DMASystem::Command

  00038			 AREA	 |.pdata|, PDATA
|$T36937| DCD	|$LN53@Command|
	DCD	0x4000d304
; Function compile flags: /Odtp

  00958			 AREA	 |.text|, CODE, ARM

  00958		 |?Command@DMASystem@@QAAIKKPAEK0KPAK@Z| PROC ; DMASystem::Command

; 221  : {

  00958		 |$LN53@Command|
  00958	e1a0c00d	 mov         r12, sp
  0095c	e92d000f	 stmdb       sp!, {r0 - r3}
  00960	e92d5000	 stmdb       sp!, {r12, lr}
  00964	e24dd038	 sub         sp, sp, #0x38
  00968		 |$M36934|

; 222  :     if (!dwOpenContext)

  00968	e59d3044	 ldr         r3, [sp, #0x44]
  0096c	e3530000	 cmp         r3, #0
  00970	1a000003	 bne         |$LN24@Command|

; 223  :         return DMADRVERR_NOTOPEN;

  00974	e3a03116	 mov         r3, #0x16, 2
  00978	e3833712	 orr         r3, r3, #0x12, 14
  0097c	e58d300c	 str         r3, [sp, #0xC]
  00980	ea0000c3	 b           |$LN25@Command|
  00984		 |$LN24@Command|

; 224  : 
; 225  :     /* do command here */
; 226  : //    RETAILMSG(1, (TEXT("DMASystem::Command(%d)\r\n"),code));
; 227  : 
; 228  :     bool getUser = false;

  00984	e3a03000	 mov         r3, #0
  00988	e5cd3004	 strb        r3, [sp, #4]

; 229  :     switch (code)

  0098c	e59d3048	 ldr         r3, [sp, #0x48]
  00990	e58d3010	 str         r3, [sp, #0x10]
  00994	e59d3010	 ldr         r3, [sp, #0x10]
  00998	e2433001	 sub         r3, r3, #1
  0099c	e58d3010	 str         r3, [sp, #0x10]
  009a0	e59d3010	 ldr         r3, [sp, #0x10]
  009a4	e3530009	 cmp         r3, #9
  009a8	8a00001d	 bhi         |$LN15@Command|
  009ac	e59d2010	 ldr         r2, [sp, #0x10]
  009b0	e1a03102	 mov         r3, r2, lsl #2
  009b4	e083300f	 add         r3, r3, pc
  009b8	e5933004	 ldr         r3, [r3, #4]
  009bc	e08ff003	 add         pc, pc, r3
  009c0		 |$LN28@Command|
  009c0		 |$LN27@Command|
  009c0		 |$LN29@Command|
  009c0	00000024	 DCD         0x24
  009c4		 |$LN30@Command|
  009c4	00000028	 DCD         0x28
  009c8		 |$LN31@Command|
  009c8	00000034	 DCD         0x34
  009cc		 |$LN32@Command|
  009cc	0000002c	 DCD         0x2c
  009d0		 |$LN33@Command|
  009d0	0000002c	 DCD         0x2c
  009d4		 |$LN34@Command|
  009d4	0000002c	 DCD         0x2c
  009d8		 |$LN35@Command|
  009d8	0000002c	 DCD         0x2c
  009dc		 |$LN36@Command|
  009dc	00000060	 DCD         0x60
  009e0		 |$LN37@Command|
  009e0	00000060	 DCD         0x60
  009e4		 |$LN38@Command|
  009e4	0000002c	 DCD         0x2c
  009e8		 |$LN21@Command|

; 230  :     {
; 231  :     case DMA_IOCTL_ENUM_GETSIZE:
; 232  :         break;

  009e8	ea000011	 b           |$LN22@Command|
  009ec		 |$LN20@Command|

; 233  :     case DMA_IOCTL_ENUM_GETDATA:
; 234  :         break;

  009ec	ea000010	 b           |$LN22@Command|
  009f0		 |$LN19@Command|

; 235  :     case DMA_IOCTL_ACQ:         
; 236  :     case DMA_IOCTL_FREE:        
; 237  :     case DMA_IOCTL_SET:         
; 238  :     case DMA_IOCTL_GET:         
; 239  :     case DMA_IOCTL_CLOSE:       
; 240  :         getUser = true;

  009f0	e3a03001	 mov         r3, #1
  009f4	e5cd3004	 strb        r3, [sp, #4]
  009f8		 |$LN18@Command|

; 241  :         /* fall thru */
; 242  :     case DMA_IOCTL_OPEN:        
; 243  :         if ((inSize<sizeof(DMAIOCTL)) ||
; 244  :             (outSize<sizeof(DMAIOCTL)))

  009f8	e59d3050	 ldr         r3, [sp, #0x50]
  009fc	e3530010	 cmp         r3, #0x10
  00a00	3a000002	 bcc         |$LN16@Command|
  00a04	e59d3058	 ldr         r3, [sp, #0x58]
  00a08	e3530010	 cmp         r3, #0x10
  00a0c	2a000003	 bcs         |$LN17@Command|
  00a10		 |$LN16@Command|

; 245  :             return DMADRVERR_PARAM_SIZE_INVALID;

  00a10	e3a03132	 mov         r3, #0x32, 2
  00a14	e3833712	 orr         r3, r3, #0x12, 14
  00a18	e58d300c	 str         r3, [sp, #0xC]
  00a1c	ea00009c	 b           |$LN25@Command|
  00a20		 |$LN17@Command|

; 246  :         break;

  00a20	ea000003	 b           |$LN22@Command|
  00a24		 |$LN15@Command|

; 247  :     default:
; 248  :         return DMADRVERR_UNKNOWNIOCTL;

  00a24	e3a03126	 mov         r3, #0x26, 2
  00a28	e3833712	 orr         r3, r3, #0x12, 14
  00a2c	e58d300c	 str         r3, [sp, #0xC]
  00a30	ea000097	 b           |$LN25@Command|
  00a34		 |$LN22@Command|

; 249  :     };
; 250  : 
; 251  :     DMAUser *pUser = NULL;

  00a34	e3a03000	 mov         r3, #0
  00a38	e58d3000	 str         r3, [sp]

; 252  :     if (getUser)

  00a3c	e5dd3004	 ldrb        r3, [sp, #4]
  00a40	e3530000	 cmp         r3, #0
  00a44	0a000017	 beq         |$LN14@Command|

; 253  :     {
; 254  :         /* find DMAUser for this command */
; 255  :         pUser = mpUserList;

  00a48	e59d3040	 ldr         r3, [sp, #0x40]
  00a4c	e2833004	 add         r3, r3, #4
  00a50	e5933000	 ldr         r3, [r3]
  00a54	e58d3000	 str         r3, [sp]
  00a58		 |$LN13@Command|

; 256  :         while ((pUser) && (((DMAIOCTL *)pInBuffer)->mParam[0]!=(DWORD)pUser))

  00a58	e59d3000	 ldr         r3, [sp]
  00a5c	e3530000	 cmp         r3, #0
  00a60	0a000009	 beq         |$LN12@Command|
  00a64	e59d304c	 ldr         r3, [sp, #0x4C]
  00a68	e5932000	 ldr         r2, [r3]
  00a6c	e59d3000	 ldr         r3, [sp]
  00a70	e1520003	 cmp         r2, r3
  00a74	0a000004	 beq         |$LN12@Command|

; 257  :             pUser = pUser->mpNext;

  00a78	e59d3000	 ldr         r3, [sp]
  00a7c	e283300c	 add         r3, r3, #0xC
  00a80	e5933000	 ldr         r3, [r3]
  00a84	e58d3000	 str         r3, [sp]
  00a88	eafffff2	 b           |$LN13@Command|
  00a8c		 |$LN12@Command|

; 258  :         if (!pUser)

  00a8c	e59d3000	 ldr         r3, [sp]
  00a90	e3530000	 cmp         r3, #0
  00a94	1a000003	 bne         |$LN11@Command|

; 259  :             return DMADRVERR_INVALIDHANDLE;

  00a98	e3a0311a	 mov         r3, #0x1A, 2
  00a9c	e3833712	 orr         r3, r3, #0x12, 14
  00aa0	e58d300c	 str         r3, [sp, #0xC]
  00aa4	ea00007a	 b           |$LN25@Command|
  00aa8		 |$LN11@Command|
  00aa8		 |$LN14@Command|

; 260  :     }
; 261  : 
; 262  :     /* io validated.  do action */
; 263  :     uint err = 0;

  00aa8	e3a03000	 mov         r3, #0
  00aac	e58d3008	 str         r3, [sp, #8]

; 264  :     switch (code)

  00ab0	e59d3048	 ldr         r3, [sp, #0x48]
  00ab4	e58d3014	 str         r3, [sp, #0x14]
  00ab8	e59d3014	 ldr         r3, [sp, #0x14]
  00abc	e2433001	 sub         r3, r3, #1
  00ac0	e58d3014	 str         r3, [sp, #0x14]
  00ac4	e59d3014	 ldr         r3, [sp, #0x14]
  00ac8	e3530009	 cmp         r3, #9
  00acc	8a00006e	 bhi         |$LN9@Command|
  00ad0	e59d2014	 ldr         r2, [sp, #0x14]
  00ad4	e1a03102	 mov         r3, r2, lsl #2
  00ad8	e083300f	 add         r3, r3, pc
  00adc	e5933004	 ldr         r3, [r3, #4]
  00ae0	e08ff003	 add         pc, pc, r3
  00ae4		 |$LN40@Command|
  00ae4		 |$LN39@Command|
  00ae4		 |$LN41@Command|
  00ae4	00000024	 DCD         0x24
  00ae8		 |$LN42@Command|
  00ae8	00000048	 DCD         0x48
  00aec		 |$LN43@Command|
  00aec	0000006c	 DCD         0x6c
  00af0		 |$LN44@Command|
  00af0	000000a4	 DCD         0xa4
  00af4		 |$LN45@Command|
  00af4	000000d8	 DCD         0xd8
  00af8		 |$LN46@Command|
  00af8	0000010c	 DCD         0x10c
  00afc		 |$LN47@Command|
  00afc	00000140	 DCD         0x140
  00b00		 |$LN48@Command|
  00b00	000001a4	 DCD         0x1a4
  00b04		 |$LN49@Command|
  00b04	000001a4	 DCD         0x1a4
  00b08		 |$LN50@Command|
  00b08	00000174	 DCD         0x174
  00b0c		 |$LN8@Command|

; 265  :     {
; 266  :     case DMA_IOCTL_ENUM_GETSIZE:
; 267  :         return Ioctl_GetSize(pOutBuffer,outSize,pOutSize);

  00b0c	e59d305c	 ldr         r3, [sp, #0x5C]
  00b10	e59d2058	 ldr         r2, [sp, #0x58]
  00b14	e59d1054	 ldr         r1, [sp, #0x54]
  00b18	e59d0040	 ldr         r0, [sp, #0x40]
  00b1c	eb000000	 bl          |?Ioctl_GetSize@DMASystem@@AAAIPAEKPAK@Z|
  00b20	e58d0018	 str         r0, [sp, #0x18]
  00b24	e59d3018	 ldr         r3, [sp, #0x18]
  00b28	e58d300c	 str         r3, [sp, #0xC]
  00b2c	ea000058	 b           |$LN25@Command|
  00b30		 |$LN7@Command|

; 268  :     case DMA_IOCTL_ENUM_GETDATA:
; 269  :         return Ioctl_GetEnum(pOutBuffer,outSize,pOutSize);

  00b30	e59d305c	 ldr         r3, [sp, #0x5C]
  00b34	e59d2058	 ldr         r2, [sp, #0x58]
  00b38	e59d1054	 ldr         r1, [sp, #0x54]
  00b3c	e59d0040	 ldr         r0, [sp, #0x40]
  00b40	eb000000	 bl          |?Ioctl_GetEnum@DMASystem@@AAAIPAEKPAK@Z|
  00b44	e58d001c	 str         r0, [sp, #0x1C]
  00b48	e59d301c	 ldr         r3, [sp, #0x1C]
  00b4c	e58d300c	 str         r3, [sp, #0xC]
  00b50	ea00004f	 b           |$LN25@Command|
  00b54		 |$LN6@Command|

; 270  :     case DMA_IOCTL_OPEN:        
; 271  :         *pOutSize = sizeof(DMAIOCTL);

  00b54	e59d205c	 ldr         r2, [sp, #0x5C]
  00b58	e3a03010	 mov         r3, #0x10
  00b5c	e5823000	 str         r3, [r2]

; 272  :         ((DMAIOCTL *)pOutBuffer)->mParam[3] = Ioctl_Open(dwOpenContext, *(DMAIOCTL *)pInBuffer,*(DMAIOCTL *)pOutBuffer);

  00b60	e59d3054	 ldr         r3, [sp, #0x54]
  00b64	e59d204c	 ldr         r2, [sp, #0x4C]
  00b68	e59d1044	 ldr         r1, [sp, #0x44]
  00b6c	e59d0040	 ldr         r0, [sp, #0x40]
  00b70	eb000000	 bl          |?Ioctl_Open@DMASystem@@AAAIKAAU_dmaIOCTL@@0@Z|
  00b74	e58d0020	 str         r0, [sp, #0x20]
  00b78	e59d3054	 ldr         r3, [sp, #0x54]
  00b7c	e283200c	 add         r2, r3, #0xC
  00b80	e59d3020	 ldr         r3, [sp, #0x20]
  00b84	e5823000	 str         r3, [r2]

; 273  :         break;

  00b88	ea00003f	 b           |$LN9@Command|
  00b8c		 |$LN5@Command|

; 274  :     case DMA_IOCTL_ACQ:         
; 275  :         *pOutSize = sizeof(DMAIOCTL);

  00b8c	e59d205c	 ldr         r2, [sp, #0x5C]
  00b90	e3a03010	 mov         r3, #0x10
  00b94	e5823000	 str         r3, [r2]

; 276  :         ((DMAIOCTL *)pOutBuffer)->mParam[3] = Ioctl_Acq(*(DMAIOCTL *)pInBuffer,*(DMAIOCTL *)pOutBuffer);

  00b98	e59d2054	 ldr         r2, [sp, #0x54]
  00b9c	e59d104c	 ldr         r1, [sp, #0x4C]
  00ba0	e59d0040	 ldr         r0, [sp, #0x40]
  00ba4	eb000000	 bl          |?Ioctl_Acq@DMASystem@@AAAIAAU_dmaIOCTL@@0@Z|
  00ba8	e58d0024	 str         r0, [sp, #0x24]
  00bac	e59d3054	 ldr         r3, [sp, #0x54]
  00bb0	e283200c	 add         r2, r3, #0xC
  00bb4	e59d3024	 ldr         r3, [sp, #0x24]
  00bb8	e5823000	 str         r3, [r2]

; 277  :         break;

  00bbc	ea000032	 b           |$LN9@Command|
  00bc0		 |$LN4@Command|

; 278  :     case DMA_IOCTL_FREE:        
; 279  :         *pOutSize = sizeof(DMAIOCTL);

  00bc0	e59d205c	 ldr         r2, [sp, #0x5C]
  00bc4	e3a03010	 mov         r3, #0x10
  00bc8	e5823000	 str         r3, [r2]

; 280  :         ((DMAIOCTL *)pOutBuffer)->mParam[3] = Ioctl_Free(*(DMAIOCTL *)pInBuffer,*(DMAIOCTL *)pOutBuffer);

  00bcc	e59d2054	 ldr         r2, [sp, #0x54]
  00bd0	e59d104c	 ldr         r1, [sp, #0x4C]
  00bd4	e59d0040	 ldr         r0, [sp, #0x40]
  00bd8	eb000000	 bl          |?Ioctl_Free@DMASystem@@AAAIAAU_dmaIOCTL@@0@Z|
  00bdc	e58d0028	 str         r0, [sp, #0x28]
  00be0	e59d3054	 ldr         r3, [sp, #0x54]
  00be4	e283200c	 add         r2, r3, #0xC
  00be8	e59d3028	 ldr         r3, [sp, #0x28]
  00bec	e5823000	 str         r3, [r2]

; 281  :         break;

  00bf0	ea000025	 b           |$LN9@Command|
  00bf4		 |$LN3@Command|

; 282  :     case DMA_IOCTL_SET:         
; 283  :         *pOutSize = sizeof(DMAIOCTL);

  00bf4	e59d205c	 ldr         r2, [sp, #0x5C]
  00bf8	e3a03010	 mov         r3, #0x10
  00bfc	e5823000	 str         r3, [r2]

; 284  :         ((DMAIOCTL *)pOutBuffer)->mParam[3] = Ioctl_Set(*(DMAIOCTL *)pInBuffer,*(DMAIOCTL *)pOutBuffer);

  00c00	e59d2054	 ldr         r2, [sp, #0x54]
  00c04	e59d104c	 ldr         r1, [sp, #0x4C]
  00c08	e59d0040	 ldr         r0, [sp, #0x40]
  00c0c	eb000000	 bl          |?Ioctl_Set@DMASystem@@AAAIAAU_dmaIOCTL@@0@Z|
  00c10	e58d002c	 str         r0, [sp, #0x2C]
  00c14	e59d3054	 ldr         r3, [sp, #0x54]
  00c18	e283200c	 add         r2, r3, #0xC
  00c1c	e59d302c	 ldr         r3, [sp, #0x2C]
  00c20	e5823000	 str         r3, [r2]

; 285  :         break;

  00c24	ea000018	 b           |$LN9@Command|
  00c28		 |$LN2@Command|

; 286  :     case DMA_IOCTL_GET:         
; 287  :         *pOutSize = sizeof(DMAIOCTL);

  00c28	e59d205c	 ldr         r2, [sp, #0x5C]
  00c2c	e3a03010	 mov         r3, #0x10
  00c30	e5823000	 str         r3, [r2]

; 288  :         ((DMAIOCTL *)pOutBuffer)->mParam[3] = Ioctl_Get(*(DMAIOCTL *)pInBuffer,*(DMAIOCTL *)pOutBuffer);

  00c34	e59d2054	 ldr         r2, [sp, #0x54]
  00c38	e59d104c	 ldr         r1, [sp, #0x4C]
  00c3c	e59d0040	 ldr         r0, [sp, #0x40]
  00c40	eb000000	 bl          |?Ioctl_Get@DMASystem@@AAAIAAU_dmaIOCTL@@0@Z|
  00c44	e58d0030	 str         r0, [sp, #0x30]
  00c48	e59d3054	 ldr         r3, [sp, #0x54]
  00c4c	e283200c	 add         r2, r3, #0xC
  00c50	e59d3030	 ldr         r3, [sp, #0x30]
  00c54	e5823000	 str         r3, [r2]

; 289  :         break;

  00c58	ea00000b	 b           |$LN9@Command|
  00c5c		 |$LN1@Command|

; 290  :     case DMA_IOCTL_CLOSE:       
; 291  :         *pOutSize = sizeof(DMAIOCTL);

  00c5c	e59d205c	 ldr         r2, [sp, #0x5C]
  00c60	e3a03010	 mov         r3, #0x10
  00c64	e5823000	 str         r3, [r2]

; 292  :         ((DMAIOCTL *)pOutBuffer)->mParam[3] = Ioctl_Close(*(DMAIOCTL *)pInBuffer,*(DMAIOCTL *)pOutBuffer);

  00c68	e59d2054	 ldr         r2, [sp, #0x54]
  00c6c	e59d104c	 ldr         r1, [sp, #0x4C]
  00c70	e59d0040	 ldr         r0, [sp, #0x40]
  00c74	eb000000	 bl          |?Ioctl_Close@DMASystem@@AAAIAAU_dmaIOCTL@@0@Z|
  00c78	e58d0034	 str         r0, [sp, #0x34]
  00c7c	e59d3054	 ldr         r3, [sp, #0x54]
  00c80	e283200c	 add         r2, r3, #0xC
  00c84	e59d3034	 ldr         r3, [sp, #0x34]
  00c88	e5823000	 str         r3, [r2]
  00c8c		 |$LN9@Command|

; 293  :         break;
; 294  :     };
; 295  : 
; 296  :     return 0;

  00c8c	e3a03000	 mov         r3, #0
  00c90	e58d300c	 str         r3, [sp, #0xC]
  00c94		 |$LN25@Command|

; 297  : }

  00c94	e59d000c	 ldr         r0, [sp, #0xC]
  00c98	e28dd038	 add         sp, sp, #0x38
  00c9c	e89d6000	 ldmia       sp, {sp, lr}
  00ca0	e12fff1e	 bx          lr
  00ca4		 |$M36935|

			 ENDP  ; |?Command@DMASystem@@QAAIKKPAEK0KPAK@Z|, DMASystem::Command


  00040			 AREA	 |.pdata|, PDATA
|$T36943| DCD	|$LN7@Ioctl_GetS|
	DCD	0x40002204
; Function compile flags: /Odtp

  00ca4			 AREA	 |.text|, CODE, ARM

  00ca4		 |?Ioctl_GetSize@DMASystem@@AAAIPAEKPAK@Z| PROC ; DMASystem::Ioctl_GetSize

; 300  : {

  00ca4		 |$LN7@Ioctl_GetS|
  00ca4	e1a0c00d	 mov         r12, sp
  00ca8	e92d000f	 stmdb       sp!, {r0 - r3}
  00cac	e92d5000	 stmdb       sp!, {r12, lr}
  00cb0	e24dd008	 sub         sp, sp, #8
  00cb4		 |$M36940|

; 301  :     if (outSize<sizeof(DWORD))

  00cb4	e59d3018	 ldr         r3, [sp, #0x18]
  00cb8	e3530004	 cmp         r3, #4
  00cbc	2a000003	 bcs         |$LN2@Ioctl_GetS|

; 302  :         return DMADRVERR_PARAM_SIZE_INVALID;

  00cc0	e3a03132	 mov         r3, #0x32, 2
  00cc4	e3833712	 orr         r3, r3, #0x12, 14
  00cc8	e58d3004	 str         r3, [sp, #4]
  00ccc	ea000012	 b           |$LN3@Ioctl_GetS|
  00cd0		 |$LN2@Ioctl_GetS|

; 303  :     if (outSize!=sizeof(DWORD))

  00cd0	e59d3018	 ldr         r3, [sp, #0x18]
  00cd4	e3530004	 cmp         r3, #4
  00cd8	0a000003	 beq         |$LN1@Ioctl_GetS|

; 304  :         return DMADRVERR_PARAM_INVALID;

  00cdc	e3a0312e	 mov         r3, #0x2E, 2
  00ce0	e3833712	 orr         r3, r3, #0x12, 14
  00ce4	e58d3004	 str         r3, [sp, #4]
  00ce8	ea00000b	 b           |$LN3@Ioctl_GetS|
  00cec		 |$LN1@Ioctl_GetS|

; 305  :     uint numEntries = sizeof(sgControllerIdMap)/sizeof(DMAControllerIdMapping);

  00cec	e3a03003	 mov         r3, #3
  00cf0	e58d3000	 str         r3, [sp]

; 306  :     (*(DWORD *)pOutBuffer) = numEntries*sizeof(DMACONTROLLER);

  00cf4	e59d1000	 ldr         r1, [sp]
  00cf8	e3a03024	 mov         r3, #0x24
  00cfc	e0020391	 mul         r2, r1, r3
  00d00	e59d3014	 ldr         r3, [sp, #0x14]
  00d04	e5832000	 str         r2, [r3]

; 307  :     *pOutSize = sizeof(DWORD);

  00d08	e59d201c	 ldr         r2, [sp, #0x1C]
  00d0c	e3a03004	 mov         r3, #4
  00d10	e5823000	 str         r3, [r2]

; 308  :     return 0;

  00d14	e3a03000	 mov         r3, #0
  00d18	e58d3004	 str         r3, [sp, #4]
  00d1c		 |$LN3@Ioctl_GetS|

; 309  : }

  00d1c	e59d0004	 ldr         r0, [sp, #4]
  00d20	e28dd008	 add         sp, sp, #8
  00d24	e89d6000	 ldmia       sp, {sp, lr}
  00d28	e12fff1e	 bx          lr
  00d2c		 |$M36941|

			 ENDP  ; |?Ioctl_GetSize@DMASystem@@AAAIPAEKPAK@Z|, DMASystem::Ioctl_GetSize

	IMPORT	|memcpy|

  00048			 AREA	 |.pdata|, PDATA
|$T36950| DCD	|$LN9@Ioctl_GetE|
	DCD	0x40003404
; Function compile flags: /Odtp

  00d2c			 AREA	 |.text|, CODE, ARM

  00d2c		 |?Ioctl_GetEnum@DMASystem@@AAAIPAEKPAK@Z| PROC ; DMASystem::Ioctl_GetEnum

; 312  : {

  00d2c		 |$LN9@Ioctl_GetE|
  00d2c	e1a0c00d	 mov         r12, sp
  00d30	e92d000f	 stmdb       sp!, {r0 - r3}
  00d34	e92d5000	 stmdb       sp!, {r12, lr}
  00d38	e24dd010	 sub         sp, sp, #0x10
  00d3c		 |$M36947|

; 313  :     uint numEntries = sizeof(sgControllerIdMap)/sizeof(DMAControllerIdMapping);

  00d3c	e3a03003	 mov         r3, #3
  00d40	e58d3008	 str         r3, [sp, #8]

; 314  :     if (outSize<numEntries*sizeof(DMACONTROLLER))

  00d44	e59d1008	 ldr         r1, [sp, #8]
  00d48	e3a03024	 mov         r3, #0x24
  00d4c	e0020391	 mul         r2, r1, r3
  00d50	e59d3020	 ldr         r3, [sp, #0x20]
  00d54	e1530002	 cmp         r3, r2
  00d58	2a000003	 bcs         |$LN4@Ioctl_GetE|

; 315  :         return DMADRVERR_PARAM_SIZE_INVALID;

  00d5c	e3a03132	 mov         r3, #0x32, 2
  00d60	e3833712	 orr         r3, r3, #0x12, 14
  00d64	e58d300c	 str         r3, [sp, #0xC]
  00d68	ea00001e	 b           |$LN5@Ioctl_GetE|
  00d6c		 |$LN4@Ioctl_GetE|

; 316  :     DMACONTROLLER *pTarg = (DMACONTROLLER *)pOutBuffer;

  00d6c	e59d301c	 ldr         r3, [sp, #0x1C]
  00d70	e58d3004	 str         r3, [sp, #4]

; 317  :     uint i;
; 318  :     for(i=0;i<numEntries;i++)

  00d74	e3a03000	 mov         r3, #0
  00d78	e58d3000	 str         r3, [sp]
  00d7c	ea000002	 b           |$LN3@Ioctl_GetE|
  00d80		 |$LN2@Ioctl_GetE|
  00d80	e59d3000	 ldr         r3, [sp]
  00d84	e2833001	 add         r3, r3, #1
  00d88	e58d3000	 str         r3, [sp]
  00d8c		 |$LN3@Ioctl_GetE|
  00d8c	e59d2000	 ldr         r2, [sp]
  00d90	e59d3008	 ldr         r3, [sp, #8]
  00d94	e1520003	 cmp         r2, r3
  00d98	2a00000b	 bcs         |$LN1@Ioctl_GetE|

; 319  :     {
; 320  :         *pTarg = sgControllerIdMap[i].mEntry;

  00d9c	e59d1000	 ldr         r1, [sp]
  00da0	e3a0302c	 mov         r3, #0x2C
  00da4	e0020391	 mul         r2, r1, r3
  00da8	e59f3048	 ldr         r3, [pc, #0x48]
  00dac	e0831002	 add         r1, r3, r2
  00db0	e59d0004	 ldr         r0, [sp, #4]
  00db4	e3a02024	 mov         r2, #0x24
  00db8	eb000000	 bl          memcpy

; 321  :         pTarg++;

  00dbc	e59d3004	 ldr         r3, [sp, #4]
  00dc0	e2833024	 add         r3, r3, #0x24
  00dc4	e58d3004	 str         r3, [sp, #4]

; 322  :     }

  00dc8	eaffffec	 b           |$LN2@Ioctl_GetE|
  00dcc		 |$LN1@Ioctl_GetE|

; 323  :     *pOutSize = numEntries*sizeof(DMACONTROLLER);

  00dcc	e59d1008	 ldr         r1, [sp, #8]
  00dd0	e3a03024	 mov         r3, #0x24
  00dd4	e0020391	 mul         r2, r1, r3
  00dd8	e59d3024	 ldr         r3, [sp, #0x24]
  00ddc	e5832000	 str         r2, [r3]

; 324  :     return 0;

  00de0	e3a03000	 mov         r3, #0
  00de4	e58d300c	 str         r3, [sp, #0xC]
  00de8		 |$LN5@Ioctl_GetE|

; 325  : }

  00de8	e59d000c	 ldr         r0, [sp, #0xC]
  00dec	e28dd010	 add         sp, sp, #0x10
  00df0	e89d6000	 ldmia       sp, {sp, lr}
  00df4	e12fff1e	 bx          lr
  00df8		 |$LN10@Ioctl_GetE|
  00df8		 |$LN11@Ioctl_GetE|
  00df8	00000000	 DCD         |sgControllerIdMap|
  00dfc		 |$M36948|

			 ENDP  ; |?Ioctl_GetEnum@DMASystem@@AAAIPAEKPAK@Z|, DMASystem::Ioctl_GetEnum

	EXPORT	|??0DMAUser@@QAA@XZ|			; DMAUser::DMAUser

  00050			 AREA	 |.pdata|, PDATA
|$T36963| DCD	|$LN17@Ioctl_Open|
	DCD	0x4000a304
; Function compile flags: /Odtp

  00dfc			 AREA	 |.text|, CODE, ARM

  00dfc		 |?Ioctl_Open@DMASystem@@AAAIKAAU_dmaIOCTL@@0@Z| PROC ; DMASystem::Ioctl_Open

; 328  : {

  00dfc		 |$LN17@Ioctl_Open|
  00dfc	e1a0c00d	 mov         r12, sp
  00e00	e92d000f	 stmdb       sp!, {r0 - r3}
  00e04	e92d5000	 stmdb       sp!, {r12, lr}
  00e08	e24dd030	 sub         sp, sp, #0x30
  00e0c		 |$M36960|

; 329  :     /* 
; 330  :     input:  0 - sysid of controller to open
; 331  :             1 - d/c
; 332  :             2 - d/c
; 333  :             3 - d/c
; 334  :     output: 0 - pUser pointer for this open or 0 if error
; 335  :             1 - 0
; 336  :             2 - 0
; 337  :             3 - 0
; 338  :     */
; 339  :     parmOut.mParam[0] = 0;

  00e0c	e59d2044	 ldr         r2, [sp, #0x44]
  00e10	e3a03000	 mov         r3, #0
  00e14	e5823000	 str         r3, [r2]

; 340  :     parmOut.mParam[1] = 0;

  00e18	e59d3044	 ldr         r3, [sp, #0x44]
  00e1c	e2832004	 add         r2, r3, #4
  00e20	e3a03000	 mov         r3, #0
  00e24	e5823000	 str         r3, [r2]

; 341  :     parmOut.mParam[2] = 0;

  00e28	e59d3044	 ldr         r3, [sp, #0x44]
  00e2c	e2832008	 add         r2, r3, #8
  00e30	e3a03000	 mov         r3, #0
  00e34	e5823000	 str         r3, [r2]

; 342  :     parmOut.mParam[3] = 0;

  00e38	e59d3044	 ldr         r3, [sp, #0x44]
  00e3c	e283200c	 add         r2, r3, #0xC
  00e40	e3a03000	 mov         r3, #0
  00e44	e5823000	 str         r3, [r2]

; 343  : 
; 344  :     DMAUser *pNewUser = new DMAUser;

  00e48	e3a00010	 mov         r0, #0x10
  00e4c	eb000000	 bl          |??2@YAPAXI@Z|
  00e50	e58d0024	 str         r0, [sp, #0x24]
  00e54	e59d3024	 ldr         r3, [sp, #0x24]
  00e58	e58d3014	 str         r3, [sp, #0x14]
  00e5c	e59d3014	 ldr         r3, [sp, #0x14]
  00e60	e3530000	 cmp         r3, #0
  00e64	0a000005	 beq         |$LN13@Ioctl_Open|
  00e68	e59d0014	 ldr         r0, [sp, #0x14]
  00e6c	eb000000	 bl          |??0DMAUser@@QAA@XZ|
  00e70	e58d0028	 str         r0, [sp, #0x28]
  00e74	e59d3028	 ldr         r3, [sp, #0x28]
  00e78	e58d302c	 str         r3, [sp, #0x2C]
  00e7c	ea000001	 b           |$LN14@Ioctl_Open|
  00e80		 |$LN13@Ioctl_Open|
  00e80	e3a03000	 mov         r3, #0
  00e84	e58d302c	 str         r3, [sp, #0x2C]
  00e88		 |$LN14@Ioctl_Open|
  00e88	e59d302c	 ldr         r3, [sp, #0x2C]
  00e8c	e58d300c	 str         r3, [sp, #0xC]

; 345  :     if (!pNewUser)

  00e90	e59d300c	 ldr         r3, [sp, #0xC]
  00e94	e3530000	 cmp         r3, #0
  00e98	1a000003	 bne         |$LN10@Ioctl_Open|

; 346  :         return DMADRVERR_RESOURCES;

  00e9c	e3a03136	 mov         r3, #0x36, 2
  00ea0	e3833712	 orr         r3, r3, #0x12, 14
  00ea4	e58d3020	 str         r3, [sp, #0x20]
  00ea8	ea000071	 b           |$LN11@Ioctl_Open|
  00eac		 |$LN10@Ioctl_Open|

; 347  : 
; 348  :     //parmIn.mParam[0] is id of controller to open
; 349  :     uint i;
; 350  :     uint numEntries = sizeof(sgControllerIdMap)/sizeof(DMAControllerIdMapping);

  00eac	e3a03003	 mov         r3, #3
  00eb0	e58d3010	 str         r3, [sp, #0x10]

; 351  : 
; 352  :     for(i=0;i<numEntries;i++)

  00eb4	e3a03000	 mov         r3, #0
  00eb8	e58d3000	 str         r3, [sp]
  00ebc	ea000002	 b           |$LN9@Ioctl_Open|
  00ec0		 |$LN8@Ioctl_Open|
  00ec0	e59d3000	 ldr         r3, [sp]
  00ec4	e2833001	 add         r3, r3, #1
  00ec8	e58d3000	 str         r3, [sp]
  00ecc		 |$LN9@Ioctl_Open|
  00ecc	e59d2000	 ldr         r2, [sp]
  00ed0	e59d3010	 ldr         r3, [sp, #0x10]
  00ed4	e1520003	 cmp         r2, r3
  00ed8	2a00000b	 bcs         |$LN7@Ioctl_Open|

; 353  :     {
; 354  :         if (sgControllerIdMap[i].mEntry.mSysId==parmIn.mParam[0])

  00edc	e59d1000	 ldr         r1, [sp]
  00ee0	e3a0302c	 mov         r3, #0x2C
  00ee4	e0020391	 mul         r2, r1, r3
  00ee8	e59f3194	 ldr         r3, [pc, #0x194]
  00eec	e0833002	 add         r3, r3, r2
  00ef0	e5932000	 ldr         r2, [r3]
  00ef4	e59d3040	 ldr         r3, [sp, #0x40]
  00ef8	e5933000	 ldr         r3, [r3]
  00efc	e1520003	 cmp         r2, r3
  00f00	1a000000	 bne         |$LN6@Ioctl_Open|

; 355  :             break;

  00f04	ea000000	 b           |$LN7@Ioctl_Open|
  00f08		 |$LN6@Ioctl_Open|

; 356  :     }

  00f08	eaffffec	 b           |$LN8@Ioctl_Open|
  00f0c		 |$LN7@Ioctl_Open|

; 357  :     if (i==numEntries)

  00f0c	e59d2000	 ldr         r2, [sp]
  00f10	e59d3010	 ldr         r3, [sp, #0x10]
  00f14	e1520003	 cmp         r2, r3
  00f18	1a000007	 bne         |$LN5@Ioctl_Open|

; 358  :     {
; 359  :         delete pNewUser;

  00f1c	e59d300c	 ldr         r3, [sp, #0xC]
  00f20	e58d3018	 str         r3, [sp, #0x18]
  00f24	e59d0018	 ldr         r0, [sp, #0x18]
  00f28	eb000000	 bl          |??3@YAXPAX@Z|

; 360  :         return DMADRVERR_UNKNOWNCONTROLLER;

  00f2c	e3a0313a	 mov         r3, #0x3A, 2
  00f30	e3833712	 orr         r3, r3, #0x12, 14
  00f34	e58d3020	 str         r3, [sp, #0x20]
  00f38	ea00004d	 b           |$LN11@Ioctl_Open|
  00f3c		 |$LN5@Ioctl_Open|

; 361  :     }
; 362  : 
; 363  :     DMAController *pCont = (DMAController *)(*sgControllerIdMap[i].mppCont);

  00f3c	e59d1000	 ldr         r1, [sp]
  00f40	e3a0302c	 mov         r3, #0x2C
  00f44	e0020391	 mul         r2, r1, r3
  00f48	e59f3134	 ldr         r3, [pc, #0x134]
  00f4c	e0833002	 add         r3, r3, r2
  00f50	e2833028	 add         r3, r3, #0x28
  00f54	e5933000	 ldr         r3, [r3]
  00f58	e5933000	 ldr         r3, [r3]
  00f5c	e58d3004	 str         r3, [sp, #4]

; 364  : 
; 365  :     /* look for existing dwOpenContext/pCont mapping for this user */
; 366  :     DMAUser *pUser = mpUserList;

  00f60	e59d3038	 ldr         r3, [sp, #0x38]
  00f64	e2833004	 add         r3, r3, #4
  00f68	e5933000	 ldr         r3, [r3]
  00f6c	e58d3008	 str         r3, [sp, #8]
  00f70		 |$LN4@Ioctl_Open|

; 367  :     while (pUser)

  00f70	e59d3008	 ldr         r3, [sp, #8]
  00f74	e3530000	 cmp         r3, #0
  00f78	0a000010	 beq         |$LN3@Ioctl_Open|

; 368  :     {
; 369  :         if ((pUser->mUserKey==dwOpenContext) &&
; 370  :             (pUser->mpCont==pCont))

  00f7c	e59d3008	 ldr         r3, [sp, #8]
  00f80	e5932000	 ldr         r2, [r3]
  00f84	e59d303c	 ldr         r3, [sp, #0x3C]
  00f88	e1520003	 cmp         r2, r3
  00f8c	1a000006	 bne         |$LN2@Ioctl_Open|
  00f90	e59d3008	 ldr         r3, [sp, #8]
  00f94	e2833008	 add         r3, r3, #8
  00f98	e5932000	 ldr         r2, [r3]
  00f9c	e59d3004	 ldr         r3, [sp, #4]
  00fa0	e1520003	 cmp         r2, r3
  00fa4	1a000000	 bne         |$LN2@Ioctl_Open|

; 371  :             break;

  00fa8	ea000004	 b           |$LN3@Ioctl_Open|
  00fac		 |$LN2@Ioctl_Open|

; 372  :         pUser = pUser->mpNext;

  00fac	e59d3008	 ldr         r3, [sp, #8]
  00fb0	e283300c	 add         r3, r3, #0xC
  00fb4	e5933000	 ldr         r3, [r3]
  00fb8	e58d3008	 str         r3, [sp, #8]

; 373  :     }

  00fbc	eaffffeb	 b           |$LN4@Ioctl_Open|
  00fc0		 |$LN3@Ioctl_Open|

; 374  :     if (pUser)

  00fc0	e59d3008	 ldr         r3, [sp, #8]
  00fc4	e3530000	 cmp         r3, #0
  00fc8	0a000007	 beq         |$LN1@Ioctl_Open|

; 375  :     {
; 376  :         delete pNewUser;

  00fcc	e59d300c	 ldr         r3, [sp, #0xC]
  00fd0	e58d301c	 str         r3, [sp, #0x1C]
  00fd4	e59d001c	 ldr         r0, [sp, #0x1C]
  00fd8	eb000000	 bl          |??3@YAXPAX@Z|

; 377  :         return DMADRVERR_ALREADYOPEN;

  00fdc	e3a0311e	 mov         r3, #0x1E, 2
  00fe0	e3833712	 orr         r3, r3, #0x12, 14
  00fe4	e58d3020	 str         r3, [sp, #0x20]
  00fe8	ea000021	 b           |$LN11@Ioctl_Open|
  00fec		 |$LN1@Ioctl_Open|

; 378  :     }
; 379  : 
; 380  :     /* ok.  we have a valid new open context for the controller for this user */
; 381  :     pNewUser->mUserKey = dwOpenContext;

  00fec	e59d203c	 ldr         r2, [sp, #0x3C]
  00ff0	e59d300c	 ldr         r3, [sp, #0xC]
  00ff4	e5832000	 str         r2, [r3]

; 382  :     pNewUser->mpCont = pCont;

  00ff8	e59d300c	 ldr         r3, [sp, #0xC]
  00ffc	e2832008	 add         r2, r3, #8
  01000	e59d3004	 ldr         r3, [sp, #4]
  01004	e5823000	 str         r3, [r2]

; 383  :     pNewUser->mpNext = mpUserList;

  01008	e59d3038	 ldr         r3, [sp, #0x38]
  0100c	e2831004	 add         r1, r3, #4
  01010	e59d300c	 ldr         r3, [sp, #0xC]
  01014	e283200c	 add         r2, r3, #0xC
  01018	e5913000	 ldr         r3, [r1]
  0101c	e5823000	 str         r3, [r2]

; 384  :     mpUserList = pNewUser;

  01020	e59d3038	 ldr         r3, [sp, #0x38]
  01024	e2832004	 add         r2, r3, #4
  01028	e59d300c	 ldr         r3, [sp, #0xC]
  0102c	e5823000	 str         r3, [r2]

; 385  : 
; 386  :     parmOut.mParam[0] = (uint)pNewUser;

  01030	e59d200c	 ldr         r2, [sp, #0xC]
  01034	e59d3044	 ldr         r3, [sp, #0x44]
  01038	e5832000	 str         r2, [r3]

; 387  :     parmOut.mParam[1] = 0;

  0103c	e59d3044	 ldr         r3, [sp, #0x44]
  01040	e2832004	 add         r2, r3, #4
  01044	e3a03000	 mov         r3, #0
  01048	e5823000	 str         r3, [r2]

; 388  :     parmOut.mParam[2] = 0;

  0104c	e59d3044	 ldr         r3, [sp, #0x44]
  01050	e2832008	 add         r2, r3, #8
  01054	e3a03000	 mov         r3, #0
  01058	e5823000	 str         r3, [r2]

; 389  :     parmOut.mParam[3] = 0;

  0105c	e59d3044	 ldr         r3, [sp, #0x44]
  01060	e283200c	 add         r2, r3, #0xC
  01064	e3a03000	 mov         r3, #0
  01068	e5823000	 str         r3, [r2]

; 390  : 
; 391  :     return 0;

  0106c	e3a03000	 mov         r3, #0
  01070	e58d3020	 str         r3, [sp, #0x20]
  01074		 |$LN11@Ioctl_Open|

; 392  : }

  01074	e59d0020	 ldr         r0, [sp, #0x20]
  01078	e28dd030	 add         sp, sp, #0x30
  0107c	e89d6000	 ldmia       sp, {sp, lr}
  01080	e12fff1e	 bx          lr
  01084		 |$LN18@Ioctl_Open|
  01084		 |$LN19@Ioctl_Open|
  01084	00000000	 DCD         |sgControllerIdMap|
  01088		 |$M36961|

			 ENDP  ; |?Ioctl_Open@DMASystem@@AAAIKAAU_dmaIOCTL@@0@Z|, DMASystem::Ioctl_Open

; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\dma\private\dmasys.h

  00000			 AREA	 |.pdata|, PDATA
|$T36971| DCD	|$LN5@DMAUser|
	DCD	0x40001904
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0DMAUser@@QAA@XZ| PROC		; DMAUser::DMAUser

; 77   :     DMAUser(void)

  00000		 |$LN5@DMAUser|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36968|

; 78   :     {
; 79   :         mUserKey = 0;

  00010	e59d200c	 ldr         r2, [sp, #0xC]
  00014	e3a03000	 mov         r3, #0
  00018	e5823000	 str         r3, [r2]

; 80   :         mChanMask = 0;

  0001c	e59d300c	 ldr         r3, [sp, #0xC]
  00020	e2832004	 add         r2, r3, #4
  00024	e3a03000	 mov         r3, #0
  00028	e5823000	 str         r3, [r2]

; 81   :         mpCont = NULL;

  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e2832008	 add         r2, r3, #8
  00034	e3a03000	 mov         r3, #0
  00038	e5823000	 str         r3, [r2]

; 82   :         mpNext = NULL;

  0003c	e59d300c	 ldr         r3, [sp, #0xC]
  00040	e283200c	 add         r2, r3, #0xC
  00044	e3a03000	 mov         r3, #0
  00048	e5823000	 str         r3, [r2]

; 83   :     }

  0004c	e59d300c	 ldr         r3, [sp, #0xC]
  00050	e58d3000	 str         r3, [sp]
  00054	e59d0000	 ldr         r0, [sp]
  00058	e28dd004	 add         sp, sp, #4
  0005c	e89d6000	 ldmia       sp, {sp, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M36969|

			 ENDP  ; |??0DMAUser@@QAA@XZ|, DMAUser::DMAUser


  00058			 AREA	 |.pdata|, PDATA
|$T36979| DCD	|$LN6@Ioctl_Acq|
	DCD	0x40004204
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\dma\private\dmasys.cpp

  01088			 AREA	 |.text|, CODE, ARM

  01088		 |?Ioctl_Acq@DMASystem@@AAAIAAU_dmaIOCTL@@0@Z| PROC ; DMASystem::Ioctl_Acq

; 395  : {

  01088		 |$LN6@Ioctl_Acq|
  01088	e1a0c00d	 mov         r12, sp
  0108c	e92d0007	 stmdb       sp!, {r0 - r2}
  01090	e92d5000	 stmdb       sp!, {r12, lr}
  01094	e24dd010	 sub         sp, sp, #0x10
  01098		 |$M36976|

; 396  :     /* 
; 397  :     input:  0 - already-validated pUser pointer
; 398  :             1 - # of channels to alloc
; 399  :             2 - mask of required channels
; 400  :             3 - d/c
; 401  :     output: 0 - mask of allocated channels or 0 if error
; 402  :             1 - 0
; 403  :             2 - 0
; 404  :             3 - result code on error
; 405  :     */
; 406  :     DMAUser *pUser = (DMAUser *)parmIn.mParam[0];

  01098	e59d301c	 ldr         r3, [sp, #0x1C]
  0109c	e5933000	 ldr         r3, [r3]
  010a0	e58d3004	 str         r3, [sp, #4]

; 407  : 
; 408  :     uint maskIO = parmIn.mParam[2];

  010a4	e59d301c	 ldr         r3, [sp, #0x1C]
  010a8	e2833008	 add         r3, r3, #8
  010ac	e5933000	 ldr         r3, [r3]
  010b0	e58d3000	 str         r3, [sp]

; 409  :     parmOut.mParam[0] = 0;

  010b4	e59d2020	 ldr         r2, [sp, #0x20]
  010b8	e3a03000	 mov         r3, #0
  010bc	e5823000	 str         r3, [r2]

; 410  :     parmOut.mParam[1] = 0;

  010c0	e59d3020	 ldr         r3, [sp, #0x20]
  010c4	e2832004	 add         r2, r3, #4
  010c8	e3a03000	 mov         r3, #0
  010cc	e5823000	 str         r3, [r2]

; 411  :     parmOut.mParam[2] = 0;

  010d0	e59d3020	 ldr         r3, [sp, #0x20]
  010d4	e2832008	 add         r2, r3, #8
  010d8	e3a03000	 mov         r3, #0
  010dc	e5823000	 str         r3, [r2]

; 412  :     parmOut.mParam[3] = pUser->mpCont->AllocChannels(parmIn.mParam[1],maskIO);

  010e0	e28d2000	 add         r2, sp, #0
  010e4	e59d301c	 ldr         r3, [sp, #0x1C]
  010e8	e2833004	 add         r3, r3, #4
  010ec	e5931000	 ldr         r1, [r3]
  010f0	e59d3004	 ldr         r3, [sp, #4]
  010f4	e2833008	 add         r3, r3, #8
  010f8	e593e000	 ldr         lr, [r3]
  010fc	e59d3004	 ldr         r3, [sp, #4]
  01100	e2833008	 add         r3, r3, #8
  01104	e5930000	 ldr         r0, [r3]
  01108	e59e3000	 ldr         r3, [lr]
  0110c	e2833014	 add         r3, r3, #0x14
  01110	e5933000	 ldr         r3, [r3]
  01114	e1a0e00f	 mov         lr, pc
  01118	e12fff13	 bx          r3
  0111c	e58d000c	 str         r0, [sp, #0xC]
  01120	e59d3020	 ldr         r3, [sp, #0x20]
  01124	e283200c	 add         r2, r3, #0xC
  01128	e59d300c	 ldr         r3, [sp, #0xC]
  0112c	e5823000	 str         r3, [r2]

; 413  :     if (!parmOut.mParam[3])

  01130	e59d3020	 ldr         r3, [sp, #0x20]
  01134	e283300c	 add         r3, r3, #0xC
  01138	e5933000	 ldr         r3, [r3]
  0113c	e3530000	 cmp         r3, #0
  01140	1a00000a	 bne         |$LN1@Ioctl_Acq|

; 414  :     {
; 415  :         parmOut.mParam[0] = maskIO;

  01144	e59d2000	 ldr         r2, [sp]
  01148	e59d3020	 ldr         r3, [sp, #0x20]
  0114c	e5832000	 str         r2, [r3]

; 416  :         pUser->mChanMask |= maskIO;

  01150	e59d3004	 ldr         r3, [sp, #4]
  01154	e2833004	 add         r3, r3, #4
  01158	e5932000	 ldr         r2, [r3]
  0115c	e59d3000	 ldr         r3, [sp]
  01160	e1822003	 orr         r2, r2, r3
  01164	e59d3004	 ldr         r3, [sp, #4]
  01168	e2833004	 add         r3, r3, #4
  0116c	e5832000	 str         r2, [r3]
  01170		 |$LN1@Ioctl_Acq|

; 417  :     }
; 418  :     return parmOut.mParam[3];

  01170	e59d3020	 ldr         r3, [sp, #0x20]
  01174	e283300c	 add         r3, r3, #0xC
  01178	e5933000	 ldr         r3, [r3]
  0117c	e58d3008	 str         r3, [sp, #8]

; 419  : }

  01180	e59d0008	 ldr         r0, [sp, #8]
  01184	e28dd010	 add         sp, sp, #0x10
  01188	e89d6000	 ldmia       sp, {sp, lr}
  0118c	e12fff1e	 bx          lr
  01190		 |$M36977|

			 ENDP  ; |?Ioctl_Acq@DMASystem@@AAAIAAU_dmaIOCTL@@0@Z|, DMASystem::Ioctl_Acq


  00060			 AREA	 |.pdata|, PDATA
|$T36985| DCD	|$LN6@Ioctl_Free|
	DCD	0x40004004
; Function compile flags: /Odtp

  01190			 AREA	 |.text|, CODE, ARM

  01190		 |?Ioctl_Free@DMASystem@@AAAIAAU_dmaIOCTL@@0@Z| PROC ; DMASystem::Ioctl_Free

; 422  : {

  01190		 |$LN6@Ioctl_Free|
  01190	e1a0c00d	 mov         r12, sp
  01194	e92d0007	 stmdb       sp!, {r0 - r2}
  01198	e92d5000	 stmdb       sp!, {r12, lr}
  0119c	e24dd00c	 sub         sp, sp, #0xC
  011a0		 |$M36982|

; 423  :     /* 
; 424  :     input:  0 - already-validated pUser pointer
; 425  :             1 - mask of allocated channels to free
; 426  :             2 - d/c
; 427  :             3 - d/c
; 428  :     output: 0 - 0
; 429  :             1 - 0
; 430  :             2 - 0
; 431  :             3 - result code of operation
; 432  :     */
; 433  :     DMAUser *pUser = (DMAUser *)parmIn.mParam[0];

  011a0	e59d3018	 ldr         r3, [sp, #0x18]
  011a4	e5933000	 ldr         r3, [r3]
  011a8	e58d3000	 str         r3, [sp]

; 434  : 
; 435  :     parmIn.mParam[1] &= pUser->mChanMask;

  011ac	e59d3018	 ldr         r3, [sp, #0x18]
  011b0	e2832004	 add         r2, r3, #4
  011b4	e59d3000	 ldr         r3, [sp]
  011b8	e2833004	 add         r3, r3, #4
  011bc	e5922000	 ldr         r2, [r2]
  011c0	e5933000	 ldr         r3, [r3]
  011c4	e0022003	 and         r2, r2, r3
  011c8	e59d3018	 ldr         r3, [sp, #0x18]
  011cc	e2833004	 add         r3, r3, #4
  011d0	e5832000	 str         r2, [r3]

; 436  :     if (!parmIn.mParam[1])

  011d4	e59d3018	 ldr         r3, [sp, #0x18]
  011d8	e2833004	 add         r3, r3, #4
  011dc	e5933000	 ldr         r3, [r3]
  011e0	e3530000	 cmp         r3, #0
  011e4	1a000003	 bne         |$LN1@Ioctl_Free|

; 437  :         return DMADRVERR_PARAM_INVALID;

  011e8	e3a0312e	 mov         r3, #0x2E, 2
  011ec	e3833712	 orr         r3, r3, #0x12, 14
  011f0	e58d3004	 str         r3, [sp, #4]
  011f4	ea000021	 b           |$LN2@Ioctl_Free|
  011f8		 |$LN1@Ioctl_Free|

; 438  : 
; 439  :     parmOut.mParam[0] = 0;

  011f8	e59d201c	 ldr         r2, [sp, #0x1C]
  011fc	e3a03000	 mov         r3, #0
  01200	e5823000	 str         r3, [r2]

; 440  :     parmOut.mParam[1] = 0;

  01204	e59d301c	 ldr         r3, [sp, #0x1C]
  01208	e2832004	 add         r2, r3, #4
  0120c	e3a03000	 mov         r3, #0
  01210	e5823000	 str         r3, [r2]

; 441  :     parmOut.mParam[2] = 0;

  01214	e59d301c	 ldr         r3, [sp, #0x1C]
  01218	e2832008	 add         r2, r3, #8
  0121c	e3a03000	 mov         r3, #0
  01220	e5823000	 str         r3, [r2]

; 442  :     parmOut.mParam[3] = pUser->mpCont->FreeChannels(parmIn.mParam[1]);

  01224	e59d3018	 ldr         r3, [sp, #0x18]
  01228	e2833004	 add         r3, r3, #4
  0122c	e5931000	 ldr         r1, [r3]
  01230	e59d3000	 ldr         r3, [sp]
  01234	e2833008	 add         r3, r3, #8
  01238	e5932000	 ldr         r2, [r3]
  0123c	e59d3000	 ldr         r3, [sp]
  01240	e2833008	 add         r3, r3, #8
  01244	e5930000	 ldr         r0, [r3]
  01248	e5923000	 ldr         r3, [r2]
  0124c	e2833018	 add         r3, r3, #0x18
  01250	e5933000	 ldr         r3, [r3]
  01254	e1a0e00f	 mov         lr, pc
  01258	e12fff13	 bx          r3
  0125c	e58d0008	 str         r0, [sp, #8]
  01260	e59d301c	 ldr         r3, [sp, #0x1C]
  01264	e283200c	 add         r2, r3, #0xC
  01268	e59d3008	 ldr         r3, [sp, #8]
  0126c	e5823000	 str         r3, [r2]

; 443  : 
; 444  :     return parmOut.mParam[3];

  01270	e59d301c	 ldr         r3, [sp, #0x1C]
  01274	e283300c	 add         r3, r3, #0xC
  01278	e5933000	 ldr         r3, [r3]
  0127c	e58d3004	 str         r3, [sp, #4]
  01280		 |$LN2@Ioctl_Free|

; 445  : }

  01280	e59d0004	 ldr         r0, [sp, #4]
  01284	e28dd00c	 add         sp, sp, #0xC
  01288	e89d6000	 ldmia       sp, {sp, lr}
  0128c	e12fff1e	 bx          lr
  01290		 |$M36983|

			 ENDP  ; |?Ioctl_Free@DMASystem@@AAAIAAU_dmaIOCTL@@0@Z|, DMASystem::Ioctl_Free


  00068			 AREA	 |.pdata|, PDATA
|$T36991| DCD	|$LN5@Ioctl_Set|
	DCD	0x40003404
; Function compile flags: /Odtp

  01290			 AREA	 |.text|, CODE, ARM

  01290		 |?Ioctl_Set@DMASystem@@AAAIAAU_dmaIOCTL@@0@Z| PROC ; DMASystem::Ioctl_Set

; 448  : {

  01290		 |$LN5@Ioctl_Set|
  01290	e1a0c00d	 mov         r12, sp
  01294	e92d0007	 stmdb       sp!, {r0 - r2}
  01298	e92d5010	 stmdb       sp!, {r4, r12, lr}
  0129c	e24dd00c	 sub         sp, sp, #0xC
  012a0		 |$M36988|

; 449  :     /* 
; 450  :     input:  0 - already-validated pUser pointer
; 451  :             1 - id of property to set
; 452  :             2 - value to set for property
; 453  :             3 - d/c
; 454  :     output: 0 - 0
; 455  :             1 - 0
; 456  :             2 - 0
; 457  :             3 - result code of operation
; 458  :     */
; 459  :     DMAUser *pUser = (DMAUser *)parmIn.mParam[0];

  012a0	e59d301c	 ldr         r3, [sp, #0x1C]
  012a4	e5933000	 ldr         r3, [r3]
  012a8	e58d3000	 str         r3, [sp]

; 460  : 
; 461  :     parmOut.mParam[0] = 0;

  012ac	e59d2020	 ldr         r2, [sp, #0x20]
  012b0	e3a03000	 mov         r3, #0
  012b4	e5823000	 str         r3, [r2]

; 462  :     parmOut.mParam[1] = 0;

  012b8	e59d3020	 ldr         r3, [sp, #0x20]
  012bc	e2832004	 add         r2, r3, #4
  012c0	e3a03000	 mov         r3, #0
  012c4	e5823000	 str         r3, [r2]

; 463  :     parmOut.mParam[2] = 0;

  012c8	e59d3020	 ldr         r3, [sp, #0x20]
  012cc	e2832008	 add         r2, r3, #8
  012d0	e3a03000	 mov         r3, #0
  012d4	e5823000	 str         r3, [r2]

; 464  :     parmOut.mParam[3] = pUser->mpCont->Set(pUser->mChanMask,(DMA_CONT_PROPERTY)parmIn.mParam[1],parmIn.mParam[2]);

  012d8	e59d301c	 ldr         r3, [sp, #0x1C]
  012dc	e2833008	 add         r3, r3, #8
  012e0	e5933000	 ldr         r3, [r3]
  012e4	e59d201c	 ldr         r2, [sp, #0x1C]
  012e8	e2822004	 add         r2, r2, #4
  012ec	e5922000	 ldr         r2, [r2]
  012f0	e59d1000	 ldr         r1, [sp]
  012f4	e2811004	 add         r1, r1, #4
  012f8	e5911000	 ldr         r1, [r1]
  012fc	e59d0000	 ldr         r0, [sp]
  01300	e2800008	 add         r0, r0, #8
  01304	e590e000	 ldr         lr, [r0]
  01308	e59d0000	 ldr         r0, [sp]
  0130c	e2800008	 add         r0, r0, #8
  01310	e5904000	 ldr         r4, [r0]
  01314	e59e0000	 ldr         r0, [lr]
  01318	e280e00c	 add         lr, r0, #0xC
  0131c	e1a00004	 mov         r0, r4
  01320	e59e4000	 ldr         r4, [lr]
  01324	e1a0e00f	 mov         lr, pc
  01328	e12fff14	 bx          r4
  0132c	e58d0008	 str         r0, [sp, #8]
  01330	e59d3020	 ldr         r3, [sp, #0x20]
  01334	e283200c	 add         r2, r3, #0xC
  01338	e59d3008	 ldr         r3, [sp, #8]
  0133c	e5823000	 str         r3, [r2]

; 465  : 
; 466  :     return parmOut.mParam[3];

  01340	e59d3020	 ldr         r3, [sp, #0x20]
  01344	e283300c	 add         r3, r3, #0xC
  01348	e5933000	 ldr         r3, [r3]
  0134c	e58d3004	 str         r3, [sp, #4]

; 467  : }

  01350	e59d0004	 ldr         r0, [sp, #4]
  01354	e28dd00c	 add         sp, sp, #0xC
  01358	e89d6010	 ldmia       sp, {r4, sp, lr}
  0135c	e12fff1e	 bx          lr
  01360		 |$M36989|

			 ENDP  ; |?Ioctl_Set@DMASystem@@AAAIAAU_dmaIOCTL@@0@Z|, DMASystem::Ioctl_Set


  00070			 AREA	 |.pdata|, PDATA
|$T36997| DCD	|$LN5@Ioctl_Get|
	DCD	0x40003304
; Function compile flags: /Odtp

  01360			 AREA	 |.text|, CODE, ARM

  01360		 |?Ioctl_Get@DMASystem@@AAAIAAU_dmaIOCTL@@0@Z| PROC ; DMASystem::Ioctl_Get

; 470  : {

  01360		 |$LN5@Ioctl_Get|
  01360	e1a0c00d	 mov         r12, sp
  01364	e92d0007	 stmdb       sp!, {r0 - r2}
  01368	e92d5010	 stmdb       sp!, {r4, r12, lr}
  0136c	e24dd00c	 sub         sp, sp, #0xC
  01370		 |$M36994|

; 471  :     /* 
; 472  :     input:  0 - already-validated pUser pointer
; 473  :             1 - id of property to get
; 474  :             2 - d/c
; 475  :             3 - d/c
; 476  :     output: 0 - 0
; 477  :             1 - 0
; 478  :             2 - value retrieved for property
; 479  :             3 - result code of operation
; 480  :     */
; 481  :     DMAUser *pUser = (DMAUser *)parmIn.mParam[0];

  01370	e59d301c	 ldr         r3, [sp, #0x1C]
  01374	e5933000	 ldr         r3, [r3]
  01378	e58d3000	 str         r3, [sp]

; 482  : 
; 483  :     parmOut.mParam[0] = 0;

  0137c	e59d2020	 ldr         r2, [sp, #0x20]
  01380	e3a03000	 mov         r3, #0
  01384	e5823000	 str         r3, [r2]

; 484  :     parmOut.mParam[1] = 0;

  01388	e59d3020	 ldr         r3, [sp, #0x20]
  0138c	e2832004	 add         r2, r3, #4
  01390	e3a03000	 mov         r3, #0
  01394	e5823000	 str         r3, [r2]

; 485  :     parmOut.mParam[2] = 0;

  01398	e59d3020	 ldr         r3, [sp, #0x20]
  0139c	e2832008	 add         r2, r3, #8
  013a0	e3a03000	 mov         r3, #0
  013a4	e5823000	 str         r3, [r2]

; 486  :     parmOut.mParam[3] = pUser->mpCont->Get(pUser->mChanMask,(DMA_CONT_PROPERTY)parmIn.mParam[1],&parmOut.mParam[2]);

  013a8	e59d3020	 ldr         r3, [sp, #0x20]
  013ac	e2833008	 add         r3, r3, #8
  013b0	e59d201c	 ldr         r2, [sp, #0x1C]
  013b4	e2822004	 add         r2, r2, #4
  013b8	e5922000	 ldr         r2, [r2]
  013bc	e59d1000	 ldr         r1, [sp]
  013c0	e2811004	 add         r1, r1, #4
  013c4	e5911000	 ldr         r1, [r1]
  013c8	e59d0000	 ldr         r0, [sp]
  013cc	e2800008	 add         r0, r0, #8
  013d0	e590e000	 ldr         lr, [r0]
  013d4	e59d0000	 ldr         r0, [sp]
  013d8	e2800008	 add         r0, r0, #8
  013dc	e5904000	 ldr         r4, [r0]
  013e0	e59e0000	 ldr         r0, [lr]
  013e4	e280e010	 add         lr, r0, #0x10
  013e8	e1a00004	 mov         r0, r4
  013ec	e59e4000	 ldr         r4, [lr]
  013f0	e1a0e00f	 mov         lr, pc
  013f4	e12fff14	 bx          r4
  013f8	e58d0008	 str         r0, [sp, #8]
  013fc	e59d3020	 ldr         r3, [sp, #0x20]
  01400	e283200c	 add         r2, r3, #0xC
  01404	e59d3008	 ldr         r3, [sp, #8]
  01408	e5823000	 str         r3, [r2]

; 487  : 
; 488  :     return parmOut.mParam[3];

  0140c	e59d3020	 ldr         r3, [sp, #0x20]
  01410	e283300c	 add         r3, r3, #0xC
  01414	e5933000	 ldr         r3, [r3]
  01418	e58d3004	 str         r3, [sp, #4]

; 489  : }

  0141c	e59d0004	 ldr         r0, [sp, #4]
  01420	e28dd00c	 add         sp, sp, #0xC
  01424	e89d6010	 ldmia       sp, {r4, sp, lr}
  01428	e12fff1e	 bx          lr
  0142c		 |$M36995|

			 ENDP  ; |?Ioctl_Get@DMASystem@@AAAIAAU_dmaIOCTL@@0@Z|, DMASystem::Ioctl_Get


  00078			 AREA	 |.pdata|, PDATA
|$T37004| DCD	|$LN11@Ioctl_Clos|
	DCD	0x40005d04
; Function compile flags: /Odtp

  0142c			 AREA	 |.text|, CODE, ARM

  0142c		 |?Ioctl_Close@DMASystem@@AAAIAAU_dmaIOCTL@@0@Z| PROC ; DMASystem::Ioctl_Close

; 492  : {

  0142c		 |$LN11@Ioctl_Clos|
  0142c	e1a0c00d	 mov         r12, sp
  01430	e92d0007	 stmdb       sp!, {r0 - r2}
  01434	e92d5000	 stmdb       sp!, {r12, lr}
  01438	e24dd014	 sub         sp, sp, #0x14
  0143c		 |$M37001|

; 493  :     DMAUser *pUser = (DMAUser *)parmIn.mParam[0];

  0143c	e59d3020	 ldr         r3, [sp, #0x20]
  01440	e5933000	 ldr         r3, [r3]
  01444	e58d3008	 str         r3, [sp, #8]

; 494  :     DMAUser *pPrev = NULL;

  01448	e3a03000	 mov         r3, #0
  0144c	e58d3000	 str         r3, [sp]

; 495  :     DMAUser *pChk = mpUserList;

  01450	e59d301c	 ldr         r3, [sp, #0x1C]
  01454	e2833004	 add         r3, r3, #4
  01458	e5933000	 ldr         r3, [r3]
  0145c	e58d3004	 str         r3, [sp, #4]

; 496  : 
; 497  :     parmOut.mParam[0] = 0;

  01460	e59d2024	 ldr         r2, [sp, #0x24]
  01464	e3a03000	 mov         r3, #0
  01468	e5823000	 str         r3, [r2]

; 498  :     parmOut.mParam[1] = 0;

  0146c	e59d3024	 ldr         r3, [sp, #0x24]
  01470	e2832004	 add         r2, r3, #4
  01474	e3a03000	 mov         r3, #0
  01478	e5823000	 str         r3, [r2]

; 499  :     parmOut.mParam[2] = 0;

  0147c	e59d3024	 ldr         r3, [sp, #0x24]
  01480	e2832008	 add         r2, r3, #8
  01484	e3a03000	 mov         r3, #0
  01488	e5823000	 str         r3, [r2]

; 500  :     parmOut.mParam[3] = 0;

  0148c	e59d3024	 ldr         r3, [sp, #0x24]
  01490	e283200c	 add         r2, r3, #0xC
  01494	e3a03000	 mov         r3, #0
  01498	e5823000	 str         r3, [r2]
  0149c		 |$LN6@Ioctl_Clos|

; 501  : 
; 502  :     while ((pChk) && (pChk!=pUser))

  0149c	e59d3004	 ldr         r3, [sp, #4]
  014a0	e3530000	 cmp         r3, #0
  014a4	0a00000a	 beq         |$LN5@Ioctl_Clos|
  014a8	e59d2004	 ldr         r2, [sp, #4]
  014ac	e59d3008	 ldr         r3, [sp, #8]
  014b0	e1520003	 cmp         r2, r3
  014b4	0a000006	 beq         |$LN5@Ioctl_Clos|

; 503  :     {
; 504  :         pPrev = pChk;

  014b8	e59d3004	 ldr         r3, [sp, #4]
  014bc	e58d3000	 str         r3, [sp]

; 505  :         pChk = pChk->mpNext;

  014c0	e59d3004	 ldr         r3, [sp, #4]
  014c4	e283300c	 add         r3, r3, #0xC
  014c8	e5933000	 ldr         r3, [r3]
  014cc	e58d3004	 str         r3, [sp, #4]

; 506  :     }

  014d0	eafffff1	 b           |$LN6@Ioctl_Clos|
  014d4		 |$LN5@Ioctl_Clos|

; 507  :     if (!pChk)

  014d4	e59d3004	 ldr         r3, [sp, #4]
  014d8	e3530000	 cmp         r3, #0
  014dc	1a000005	 bne         |$LN4@Ioctl_Clos|

; 508  :         parmOut.mParam[3] = DMADRVERR_INVALIDHANDLE;

  014e0	e59d3024	 ldr         r3, [sp, #0x24]
  014e4	e283200c	 add         r2, r3, #0xC
  014e8	e3a0311a	 mov         r3, #0x1A, 2
  014ec	e3833712	 orr         r3, r3, #0x12, 14
  014f0	e5823000	 str         r3, [r2]

; 509  :     else

  014f4	ea000021	 b           |$LN3@Ioctl_Clos|
  014f8		 |$LN4@Ioctl_Clos|

; 510  :     {
; 511  :         if (!pPrev)

  014f8	e59d3000	 ldr         r3, [sp]
  014fc	e3530000	 cmp         r3, #0
  01500	1a000006	 bne         |$LN2@Ioctl_Clos|

; 512  :             mpUserList = pUser->mpNext;

  01504	e59d3008	 ldr         r3, [sp, #8]
  01508	e283100c	 add         r1, r3, #0xC
  0150c	e59d301c	 ldr         r3, [sp, #0x1C]
  01510	e2832004	 add         r2, r3, #4
  01514	e5913000	 ldr         r3, [r1]
  01518	e5823000	 str         r3, [r2]

; 513  :         else

  0151c	ea000005	 b           |$LN1@Ioctl_Clos|
  01520		 |$LN2@Ioctl_Clos|

; 514  :             pPrev->mpNext = pUser->mpNext;

  01520	e59d3008	 ldr         r3, [sp, #8]
  01524	e283100c	 add         r1, r3, #0xC
  01528	e59d3000	 ldr         r3, [sp]
  0152c	e283200c	 add         r2, r3, #0xC
  01530	e5913000	 ldr         r3, [r1]
  01534	e5823000	 str         r3, [r2]
  01538		 |$LN1@Ioctl_Clos|

; 515  : 
; 516  :         pUser->mpCont->FreeChannels(pUser->mChanMask);

  01538	e59d3008	 ldr         r3, [sp, #8]
  0153c	e2833004	 add         r3, r3, #4
  01540	e5931000	 ldr         r1, [r3]
  01544	e59d3008	 ldr         r3, [sp, #8]
  01548	e2833008	 add         r3, r3, #8
  0154c	e5932000	 ldr         r2, [r3]
  01550	e59d3008	 ldr         r3, [sp, #8]
  01554	e2833008	 add         r3, r3, #8
  01558	e5930000	 ldr         r0, [r3]
  0155c	e5923000	 ldr         r3, [r2]
  01560	e2833018	 add         r3, r3, #0x18
  01564	e5933000	 ldr         r3, [r3]
  01568	e1a0e00f	 mov         lr, pc
  0156c	e12fff13	 bx          r3

; 517  : 
; 518  :         delete pUser;

  01570	e59d3008	 ldr         r3, [sp, #8]
  01574	e58d300c	 str         r3, [sp, #0xC]
  01578	e59d000c	 ldr         r0, [sp, #0xC]
  0157c	eb000000	 bl          |??3@YAXPAX@Z|
  01580		 |$LN3@Ioctl_Clos|

; 519  :     }
; 520  : 
; 521  :     return parmOut.mParam[3];

  01580	e59d3024	 ldr         r3, [sp, #0x24]
  01584	e283300c	 add         r3, r3, #0xC
  01588	e5933000	 ldr         r3, [r3]
  0158c	e58d3010	 str         r3, [sp, #0x10]

; 522  : }

  01590	e59d0010	 ldr         r0, [sp, #0x10]
  01594	e28dd014	 add         sp, sp, #0x14
  01598	e89d6000	 ldmia       sp, {sp, lr}
  0159c	e12fff1e	 bx          lr
  015a0		 |$M37002|

			 ENDP  ; |?Ioctl_Close@DMASystem@@AAAIAAU_dmaIOCTL@@0@Z|, DMASystem::Ioctl_Close

	END
