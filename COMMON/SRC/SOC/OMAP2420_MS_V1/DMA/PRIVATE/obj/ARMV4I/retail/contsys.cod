; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\OMAP2420_MS_V1\DMA\PRIVATE\contsys.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??1DMAController@@UAA@XZ|		; DMAController::~DMAController
	EXPORT	|??_7DMAController@@6B@| [ DATA ]	; DMAController::`vftable'
	IMPORT	|??_EDMAController@@UAAPAXI@Z|, WEAK |??_GDMAController@@UAAPAXI@Z| ; DMAController::`vector deleting destructor', DMAController::`scalar deleting destructor'
	IMPORT	|_purecall|
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\dma\private\dmasys.h

  00000			 AREA	 |.pdata|, PDATA
|$T36589| DCD	|$LN5@DMAControl|
	DCD	0x40000400

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7DMAController@@6B@| DCD |??_EDMAController@@UAAPAXI@Z| ; DMAController::`vftable'
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1DMAController@@UAA@XZ| PROC	; DMAController::~DMAController

; 95   :     virtual ~DMAController(void) {}

  00000		 |$LN5@DMAControl|
  00000		 |$M36586|
  00000	e59f3004	 ldr         r3, [pc, #4]
  00004	e5803000	 str         r3, [r0]
  00008	e12fff1e	 bx          lr
  0000c		 |$LN6@DMAControl|
  0000c		 |$LN7@DMAControl|
  0000c	00000000	 DCD         |??_7DMAController@@6B@|
  00010		 |$M36587|

			 ENDP  ; |??1DMAController@@UAA@XZ|, DMAController::~DMAController

	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T36605| DCD	|$LN8@scalar|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GDMAController@@UAAPAXI@Z| PROC	; DMAController::`scalar deleting destructor'
  00000		 |$LN8@scalar|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M36602|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3014	 ldr         r3, [pc, #0x14]
  0000c	e3110001	 tst         r1, #1
  00010	e5843000	 str         r3, [r4]
  00014	1b000000	 blne        |??3@YAXPAX@Z|
  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN9@scalar|
  00024		 |$LN10@scalar|
  00024	00000000	 DCD         |??_7DMAController@@6B@|
  00028		 |$M36603|

			 ENDP  ; |??_GDMAController@@UAAPAXI@Z|, DMAController::`scalar deleting destructor'

	EXPORT	|??1StandardDMAController@@UAA@XZ|	; StandardDMAController::~StandardDMAController

  00000			 AREA	 |.pdata|, PDATA
|$T36618| DCD	|$LN7@StandardDM|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1StandardDMAController@@UAA@XZ| PROC ; StandardDMAController::~StandardDMAController
  00000		 |$LN7@StandardDM|
  00000		 |$M36615|
  00000	e59f3004	 ldr         r3, [pc, #4]
  00004	e5803000	 str         r3, [r0]
  00008	e12fff1e	 bx          lr
  0000c		 |$LN8@StandardDM|
  0000c		 |$LN9@StandardDM|
  0000c	00000000	 DCD         |??_7DMAController@@6B@|
  00010		 |$M36616|

			 ENDP  ; |??1StandardDMAController@@UAA@XZ|, StandardDMAController::~StandardDMAController

	EXPORT	|??0SysStandardDMAController@@QAA@XZ|	; SysStandardDMAController::SysStandardDMAController
	EXPORT	|??_7SysStandardDMAController@@6B@| [ DATA ] ; SysStandardDMAController::`vftable'
	EXPORT	|?Init@SysStandardDMAController@@UAAIXZ| ; SysStandardDMAController::Init
	EXPORT	|?ShutDown@SysStandardDMAController@@UAAXXZ| ; SysStandardDMAController::ShutDown
	EXPORT	|?Set@SysStandardDMAController@@UAAIIW4DMA_seqProperty@@I@Z| ; SysStandardDMAController::Set
	EXPORT	|?Get@SysStandardDMAController@@UAAIIW4DMA_seqProperty@@PAI@Z| ; SysStandardDMAController::Get
	IMPORT	|??0StandardDMAController@@QAA@I@Z|	; StandardDMAController::StandardDMAController
	IMPORT	|??_ESysStandardDMAController@@UAAPAXI@Z|, WEAK |??_GSysStandardDMAController@@UAAPAXI@Z| ; SysStandardDMAController::`vector deleting destructor', SysStandardDMAController::`scalar deleting destructor'
	IMPORT	|?AllocChannels@StandardDMAController@@UAAIIAAI@Z| ; StandardDMAController::AllocChannels
	IMPORT	|?FreeChannels@StandardDMAController@@UAAII@Z| ; StandardDMAController::FreeChannels
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\dma\private\contsys.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T36630| DCD	|$LN5@SysStandar|
	DCD	0x40000c01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7SysStandardDMAController@@6B@| DCD |??_ESysStandardDMAController@@UAAPAXI@Z| ; SysStandardDMAController::`vftable'
	DCD	|?Init@SysStandardDMAController@@UAAIXZ|
	DCD	|?ShutDown@SysStandardDMAController@@UAAXXZ|
	DCD	|?Set@SysStandardDMAController@@UAAIIW4DMA_seqProperty@@I@Z|
	DCD	|?Get@SysStandardDMAController@@UAAIIW4DMA_seqProperty@@PAI@Z|
	DCD	|?AllocChannels@StandardDMAController@@UAAIIAAI@Z|
	DCD	|?FreeChannels@StandardDMAController@@UAAII@Z|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0SysStandardDMAController@@QAA@XZ| PROC ; SysStandardDMAController::SysStandardDMAController

; 25   : {

  00000		 |$LN5@SysStandar|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M36627|
  00004	e1a04000	 mov         r4, r0
  00008	e3a01020	 mov         r1, #0x20
  0000c	eb000000	 bl          |??0StandardDMAController@@QAA@I@Z|
  00010	e59f3014	 ldr         r3, [pc, #0x14]

; 26   :     mpDMARegs = NULL;

  00014	e3a02000	 mov         r2, #0
  00018	e584200c	 str         r2, [r4, #0xC]
  0001c	e5843000	 str         r3, [r4]

; 27   : }

  00020	e1a00004	 mov         r0, r4
  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$LN6@SysStandar|
  0002c		 |$LN7@SysStandar|
  0002c	00000000	 DCD         |??_7SysStandardDMAController@@6B@|
  00030		 |$M36628|

			 ENDP  ; |??0SysStandardDMAController@@QAA@XZ|, SysStandardDMAController::SysStandardDMAController

	EXPORT	|??_C@_1JK@EMOMAFGL@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IK@KIKBAHBO@?$AAD?$AAM?$AAA?$AA?2?$AAS?$AAy?$AAs?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn@| [ DATA ] ; `string'
	IMPORT	|?Reset@StandardDMAController@@IAAXPCX@Z| ; StandardDMAController::Reset
	IMPORT	|MmUnmapIoSpace|
	IMPORT	|?GetRevision@StandardDMAController@@IAA_NPCXAAI1@Z| ; StandardDMAController::GetRevision
	IMPORT	|NKDbgPrintfW|
	IMPORT	|MmMapIoSpace|

  00000			 AREA	 |.pdata|, PDATA
|$T36646| DCD	|$LN9@Init|
	DCD	0x40002e02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JK@EMOMAFGL@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "_", 0x0, "M", 0x0, "S", 0x0, "_", 0x0, "V"
	DCB	0x0, "1", 0x0, "\\", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "\\"
	DCB	0x0, "P", 0x0, "R", 0x0, "I", 0x0, "V", 0x0, "A", 0x0, "T"
	DCB	0x0, "E", 0x0, "\\", 0x0, ".", 0x0, "\\", 0x0, "c", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "s", 0x0, "y", 0x0, "s", 0x0, "."
	DCB	0x0, "c", 0x0, "p", 0x0, "p", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ":", 0x0, " "
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@KIKBAHBO@?$AAD?$AAM?$AAA?$AA?2?$AAS?$AAy?$AAs?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn@| DCB "D"
	DCB	0x0, "M", 0x0, "A", 0x0, "\\", 0x0, "S", 0x0, "y", 0x0, "s"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "a"
	DCB	0x0, "r", 0x0, "d", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R"
	DCB	0x0, " ", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "p", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Init@SysStandardDMAController@@UAAIXZ| PROC ; SysStandardDMAController::Init

; 36   : {

  00000		 |$LN9@Init|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M36643|
  00008	e1a04000	 mov         r4, r0
  0000c	e3a03312	 mov         r3, #0x12, 6

; 37   :     PHYSICAL_ADDRESS pa;
; 38   : 
; 39   :     // map standard controller DMA registers into driver address space
; 40   :     pa.HighPart= 0;
; 41   :     pa.LowPart = OMAP2420_SDMA_REGS_PA;

  00010	e3830a56	 orr         r0, r3, #0x56, 20

; 42   :     mpDMARegs = (OMAP2420_SDMA_REGS *)MmMapIoSpace(pa, sizeof(OMAP2420_SDMA_REGS), FALSE);

  00014	e3a03000	 mov         r3, #0
  00018	e3a01000	 mov         r1, #0
  0001c	e3a02d32	 mov         r2, #0x32, 26
  00020	eb000000	 bl          MmMapIoSpace
  00024	e3500000	 cmp         r0, #0
  00028	e584000c	 str         r0, [r4, #0xC]

; 43   :     if (!mpDMARegs)

  0002c	1a000008	 bne         |$LN2@Init|

; 44   :     {
; 45   :         ERRORMSG(TRUE, (L"DMA\\SysStandardDMAController::Init(): ERROR mapping DMA registers.\r\n"));

  00030	e59f107c	 ldr         r1, [pc, #0x7C]
  00034	e59f0074	 ldr         r0, [pc, #0x74]
  00038	e3a0202d	 mov         r2, #0x2D
  0003c	eb000000	 bl          NKDbgPrintfW
  00040	e59f0064	 ldr         r0, [pc, #0x64]
  00044	eb000000	 bl          NKDbgPrintfW
  00048	e3a0312a	 mov         r3, #0x2A, 2

; 46   :         return DMADRVERR_INIT_FAILURE;

  0004c	e3830712	 orr         r0, r3, #0x12, 14
  00050	ea000012	 b           |$LN3@Init|
  00054		 |$LN2@Init|

; 47   :     }
; 48   : 
; 49   :     /* try to retrieve the DMA controller revision here */
; 50   :     uint major, minor;
; 51   :     if (!GetRevision(mpDMARegs,major,minor))

  00054	e1a01000	 mov         r1, r0
  00058	e1a00004	 mov         r0, r4
  0005c	e28d3000	 add         r3, sp, #0
  00060	e28d2004	 add         r2, sp, #4
  00064	eb000000	 bl          |?GetRevision@StandardDMAController@@IAA_NPCXAAI1@Z|
  00068	e3500000	 cmp         r0, #0
  0006c	1a000007	 bne         |$LN1@Init|

; 52   :     {
; 53   :         MmUnmapIoSpace((PVOID)mpDMARegs,sizeof(OMAP2420_SDMA_REGS));

  00070	e594000c	 ldr         r0, [r4, #0xC]
  00074	e3a01d32	 mov         r1, #0x32, 26
  00078	eb000000	 bl          MmUnmapIoSpace

; 54   :         mpDMARegs = NULL;

  0007c	e3a03000	 mov         r3, #0
  00080	e3a0212a	 mov         r2, #0x2A, 2
  00084	e584300c	 str         r3, [r4, #0xC]

; 55   :         return DMADRVERR_INIT_FAILURE;

  00088	e3820712	 orr         r0, r2, #0x12, 14
  0008c	ea000003	 b           |$LN3@Init|
  00090		 |$LN1@Init|

; 56   :     }
; 57   :     DEBUGMSG(ZONE_INIT, (L"DMA\\SysStandardDMAController::Init() "
; 58   :         L"Revision %d.%d\r\n", major, minor
; 59   :     ));
; 60   : 
; 61   :     Reset(mpDMARegs);

  00090	e594100c	 ldr         r1, [r4, #0xC]
  00094	e1a00004	 mov         r0, r4
  00098	eb000000	 bl          |?Reset@StandardDMAController@@IAAXPCX@Z|

; 62   :     return 0;

  0009c	e3a00000	 mov         r0, #0
  000a0		 |$LN3@Init|

; 63   : }

  000a0	e28dd008	 add         sp, sp, #8
  000a4	e8bd4010	 ldmia       sp!, {r4, lr}
  000a8	e12fff1e	 bx          lr
  000ac		 |$LN10@Init|
  000ac		 |$LN11@Init|
  000ac	00000000	 DCD         |??_C@_1IK@KIKBAHBO@?$AAD?$AAM?$AAA?$AA?2?$AAS?$AAy?$AAs?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn@|
  000b0		 |$LN12@Init|
  000b0	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  000b4		 |$LN13@Init|
  000b4	00000000	 DCD         |??_C@_1JK@EMOMAFGL@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  000b8		 |$M36644|

			 ENDP  ; |?Init@SysStandardDMAController@@UAAIXZ|, SysStandardDMAController::Init


  00000			 AREA	 |.pdata|, PDATA
|$T36658| DCD	|$LN6@ShutDown|
	DCD	0x40000e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ShutDown@SysStandardDMAController@@UAAXXZ| PROC ; SysStandardDMAController::ShutDown

; 66   : {

  00000		 |$LN6@ShutDown|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M36655|
  00004	e1a04000	 mov         r4, r0

; 67   :     if (mpDMARegs)

  00008	e594300c	 ldr         r3, [r4, #0xC]
  0000c	e3530000	 cmp         r3, #0
  00010	0a000006	 beq         |$LN1@ShutDown|

; 68   :     {
; 69   :         Reset(mpDMARegs);

  00014	e1a01003	 mov         r1, r3
  00018	eb000000	 bl          |?Reset@StandardDMAController@@IAAXPCX@Z|

; 70   :         /* unmap the controller */
; 71   :         MmUnmapIoSpace((PVOID)mpDMARegs,sizeof(OMAP2420_SDMA_REGS));

  0001c	e594000c	 ldr         r0, [r4, #0xC]
  00020	e3a01d32	 mov         r1, #0x32, 26
  00024	eb000000	 bl          MmUnmapIoSpace

; 72   :         mpDMARegs = NULL;

  00028	e3a03000	 mov         r3, #0
  0002c	e584300c	 str         r3, [r4, #0xC]
  00030		 |$LN1@ShutDown|

; 73   :     }
; 74   : }

  00030	e8bd4010	 ldmia       sp!, {r4, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M36656|

			 ENDP  ; |?ShutDown@SysStandardDMAController@@UAAXXZ|, SysStandardDMAController::ShutDown


  00000			 AREA	 |.pdata|, PDATA
|$T36696| DCD	|$LN42@Set|
	DCD	0x40005b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Set@SysStandardDMAController@@UAAIIW4DMA_seqProperty@@I@Z| PROC ; SysStandardDMAController::Set

; 77   : {

  00000		 |$LN42@Set|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36693|

; 78   :     switch (aProp)

  00004	e242e001	 sub         lr, r2, #1
  00008	e35e0008	 cmp         lr, #8
  0000c	8a000052	 bhi         |$LN1@Set|
  00010	e1a0208e	 mov         r2, lr, lsl #1
  00014	e082200f	 add         r2, r2, pc
  00018	e1d220b4	 ldrh        r2, [r2, #4]
  0001c	e08ff002	 add         pc, pc, r2
  00020		 |$LN30@Set|
  00020		 |$LN29@Set|
  00020		 |$LN31@Set|
  00020	0078		 DCW         0x78
  00022		 |$LN32@Set|
  00022	009c		 DCW         0x9c
  00024		 |$LN33@Set|
  00024	00b4		 DCW         0xb4
  00026		 |$LN34@Set|
  00026	00d8		 DCW         0xd8
  00028		 |$LN35@Set|
  00028	00fc		 DCW         0xfc
  0002a		 |$LN36@Set|
  0002a	0114		 DCW         0x114
  0002c		 |$LN37@Set|
  0002c	0010		 DCW         0x10
  0002e		 |$LN38@Set|
  0002e	003c		 DCW         0x3c
  00030		 |$LN39@Set|
  00030	0054		 DCW         0x54
  00032		 |$LN43@Set|

; 142  : }

  00032	0054		 DCW         0x54
  00034		 |$LN19@Set|

; 79   :     {
; 80   :         case DMACP_L0IntEnb:
; 81   :             aValue &= aChanMask;

  00034	e0111003	 ands        r1, r1, r3

; 82   :             if (!aValue)

  00038	1a000001	 bne         |$LN18@Set|
  0003c		 |$LN28@Set|
  0003c	e3a0312e	 mov         r3, #0x2E, 2

; 83   :                 return DMADRVERR_PARAM_INVALID;

  00040	ea000046	 b           |$LN24@Set|
  00044		 |$LN18@Set|

; 84   :             SETREG32(&mpDMARegs->DMA4_IRQENABLE_L0, aValue);

  00044	e590200c	 ldr         r2, [r0, #0xC]
  00048	e5923018	 ldr         r3, [r2, #0x18]
  0004c	e1833001	 orr         r3, r3, r1
  00050		 |$LN25@Set|
  00050	e5823018	 str         r3, [r2, #0x18]

; 139  :     }
; 140  : 
; 141  :     return 0;

  00054	e3a00000	 mov         r0, #0

; 142  : }

  00058	e49de004	 ldr         lr, [sp], #4
  0005c	e12fff1e	 bx          lr
  00060		 |$LN17@Set|

; 85   :             break;
; 86   :         case DMACP_L0IntDis:
; 87   :             aValue &= aChanMask;

  00060	e0111003	 ands        r1, r1, r3

; 88   :             if (!aValue)
; 89   :                 return DMADRVERR_PARAM_INVALID;

  00064	0afffff4	 beq         |$LN28@Set|

; 90   :             CLRREG32(&mpDMARegs->DMA4_IRQENABLE_L0, aValue);

  00068	e590200c	 ldr         r2, [r0, #0xC]
  0006c	e5923018	 ldr         r3, [r2, #0x18]
  00070	e1c33001	 bic         r3, r3, r1

; 91   :             break;

  00074	eafffff5	 b           |$LN25@Set|
  00078		 |$LN15@Set|

; 92   :         case DMACP_L0IntAck:
; 93   :             aValue &= aChanMask;

  00078	e0111003	 ands        r1, r1, r3

; 94   :             if (!aValue)
; 95   :                 return DMADRVERR_PARAM_INVALID;

  0007c	0affffee	 beq         |$LN28@Set|

; 96   :             SETREG32(&mpDMARegs->DMA4_IRQSTATUS_L0, aValue);

  00080	e590200c	 ldr         r2, [r0, #0xC]

; 139  :     }
; 140  : 
; 141  :     return 0;

  00084	e3a00000	 mov         r0, #0
  00088	e5923008	 ldr         r3, [r2, #8]
  0008c	e1833001	 orr         r3, r3, r1
  00090	e5823008	 str         r3, [r2, #8]

; 142  : }

  00094	e49de004	 ldr         lr, [sp], #4
  00098	e12fff1e	 bx          lr
  0009c		 |$LN13@Set|

; 97   :             break; 
; 98   :             
; 99   :         case DMACP_L3IntEnb:
; 100  :             aValue &= aChanMask;

  0009c	e0111003	 ands        r1, r1, r3

; 101  :             if (!aValue)
; 102  :                 return DMADRVERR_PARAM_INVALID;

  000a0	0affffe5	 beq         |$LN28@Set|

; 103  :             SETREG32(&mpDMARegs->DMA4_IRQENABLE_L3, aValue);

  000a4	e590200c	 ldr         r2, [r0, #0xC]
  000a8	e5923024	 ldr         r3, [r2, #0x24]
  000ac	e1833001	 orr         r3, r3, r1
  000b0		 |$LN26@Set|
  000b0	e5823024	 str         r3, [r2, #0x24]

; 139  :     }
; 140  : 
; 141  :     return 0;

  000b4	e3a00000	 mov         r0, #0

; 142  : }

  000b8	e49de004	 ldr         lr, [sp], #4
  000bc	e12fff1e	 bx          lr
  000c0		 |$LN11@Set|

; 104  :             break;
; 105  :         case DMACP_L3IntDis:
; 106  :             aValue &= aChanMask;

  000c0	e0111003	 ands        r1, r1, r3

; 107  :             if (!aValue)
; 108  :                 return DMADRVERR_PARAM_INVALID;

  000c4	0affffdc	 beq         |$LN28@Set|

; 109  :             CLRREG32(&mpDMARegs->DMA4_IRQENABLE_L3, aValue);

  000c8	e590200c	 ldr         r2, [r0, #0xC]
  000cc	e5923024	 ldr         r3, [r2, #0x24]
  000d0	e1c33001	 bic         r3, r3, r1

; 110  :             break;

  000d4	eafffff5	 b           |$LN26@Set|
  000d8		 |$LN9@Set|

; 111  :         case DMACP_L3IntAck:
; 112  :             aValue &= aChanMask;

  000d8	e0111003	 ands        r1, r1, r3

; 113  :             if (!aValue)
; 114  :                 return DMADRVERR_PARAM_INVALID;

  000dc	0affffd6	 beq         |$LN28@Set|

; 115  :             SETREG32(&mpDMARegs->DMA4_IRQSTATUS_L3, aValue);

  000e0	e590200c	 ldr         r2, [r0, #0xC]

; 139  :     }
; 140  : 
; 141  :     return 0;

  000e4	e3a00000	 mov         r0, #0
  000e8	e5923014	 ldr         r3, [r2, #0x14]
  000ec	e1833001	 orr         r3, r3, r1
  000f0	e5823014	 str         r3, [r2, #0x14]

; 142  : }

  000f4	e49de004	 ldr         lr, [sp], #4
  000f8	e12fff1e	 bx          lr
  000fc		 |$LN7@Set|

; 116  :             break;
; 117  : 
; 118  :         case DMACP_L2IntEnb:
; 119  :             aValue &= aChanMask;

  000fc	e0111003	 ands        r1, r1, r3

; 120  :             if (!aValue)
; 121  :                 return DMADRVERR_PARAM_INVALID;

  00100	0affffcd	 beq         |$LN28@Set|

; 122  :             SETREG32(&mpDMARegs->DMA4_IRQENABLE_L2, aValue);

  00104	e590200c	 ldr         r2, [r0, #0xC]
  00108	e5923020	 ldr         r3, [r2, #0x20]
  0010c	e1833001	 orr         r3, r3, r1
  00110		 |$LN27@Set|
  00110	e5823020	 str         r3, [r2, #0x20]

; 139  :     }
; 140  : 
; 141  :     return 0;

  00114	e3a00000	 mov         r0, #0

; 142  : }

  00118	e49de004	 ldr         lr, [sp], #4
  0011c	e12fff1e	 bx          lr
  00120		 |$LN5@Set|

; 123  :             break;
; 124  :         case DMACP_L2IntDis:
; 125  :             aValue &= aChanMask;

  00120	e0111003	 ands        r1, r1, r3

; 126  :             if (!aValue)
; 127  :                 return DMADRVERR_PARAM_INVALID;

  00124	0affffc4	 beq         |$LN28@Set|

; 128  :             CLRREG32(&mpDMARegs->DMA4_IRQENABLE_L2, aValue);

  00128	e590200c	 ldr         r2, [r0, #0xC]
  0012c	e5923020	 ldr         r3, [r2, #0x20]
  00130	e1c33001	 bic         r3, r3, r1

; 129  :             break;

  00134	eafffff5	 b           |$LN27@Set|
  00138		 |$LN3@Set|

; 130  :         case DMACP_L2IntAck:
; 131  :             aValue &= aChanMask;

  00138	e0111003	 ands        r1, r1, r3

; 132  :             if (!aValue)
; 133  :                 return DMADRVERR_PARAM_INVALID;

  0013c	0affffbe	 beq         |$LN28@Set|

; 134  :             SETREG32(&mpDMARegs->DMA4_IRQSTATUS_L2, aValue);

  00140	e590200c	 ldr         r2, [r0, #0xC]

; 139  :     }
; 140  : 
; 141  :     return 0;

  00144	e3a00000	 mov         r0, #0
  00148	e5923010	 ldr         r3, [r2, #0x10]
  0014c	e1833001	 orr         r3, r3, r1
  00150	e5823010	 str         r3, [r2, #0x10]

; 142  : }

  00154	e49de004	 ldr         lr, [sp], #4
  00158	e12fff1e	 bx          lr
  0015c		 |$LN1@Set|

; 139  :     }
; 140  : 
; 141  :     return 0;

  0015c	e3a0313e	 mov         r3, #0x3E, 2
  00160		 |$LN24@Set|

; 135  :             break;
; 136  :             
; 137  :         default:
; 138  :             return DMADRVERR_UNKNOWNPROPERTY;

  00160	e3830712	 orr         r0, r3, #0x12, 14

; 142  : }

  00164	e49de004	 ldr         lr, [sp], #4
  00168	e12fff1e	 bx          lr
  0016c		 |$M36694|

			 ENDP  ; |?Set@SysStandardDMAController@@UAAIIW4DMA_seqProperty@@I@Z|, SysStandardDMAController::Set


  00000			 AREA	 |.pdata|, PDATA
|$T36708| DCD	|$LN9@Get|
	DCD	0x40000900
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Get@SysStandardDMAController@@UAAIIW4DMA_seqProperty@@PAI@Z| PROC ; SysStandardDMAController::Get

; 145  : {

  00000		 |$LN9@Get|
  00000		 |$M36705|

; 146  :     switch (aProp)

  00000	e3520000	 cmp         r2, #0
  00004	da000003	 ble         |$LN2@Get|
  00008	e3520009	 cmp         r2, #9
  0000c	d3a03142	 movle       r3, #0x42, 2

; 158  :     }
; 159  :     return DMADRVERR_UNKNOWNPROPERTY;

  00010	d3830712	 orrle       r0, r3, #0x12, 14

; 160  : }

  00014	d12fff1e	 bxle        lr
  00018		 |$LN2@Get|

; 147  :     {
; 148  :         case DMACP_L0IntEnb:
; 149  :         case DMACP_L0IntDis:
; 150  :         case DMACP_L0IntAck:
; 151  :         case DMACP_L3IntEnb:
; 152  :         case DMACP_L3IntDis:
; 153  :         case DMACP_L3IntAck:
; 154  :         case DMACP_L2IntEnb:
; 155  :         case DMACP_L2IntDis:
; 156  :         case DMACP_L2IntAck:
; 157  :             return DMADRVERR_PROP_WRITEONLY;

  00018	e3a0313e	 mov         r3, #0x3E, 2

; 158  :     }
; 159  :     return DMADRVERR_UNKNOWNPROPERTY;

  0001c	e3830712	 orr         r0, r3, #0x12, 14

; 160  : }

  00020	e12fff1e	 bx          lr
  00024		 |$M36706|

			 ENDP  ; |?Get@SysStandardDMAController@@UAAIIW4DMA_seqProperty@@PAI@Z|, SysStandardDMAController::Get

	EXPORT	|??1SysStandardDMAController@@UAA@XZ|	; SysStandardDMAController::~SysStandardDMAController
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\dma\private\dmasys.h

  00000			 AREA	 |.pdata|, PDATA
|$T36724| DCD	|$LN10@SysStandar@2|
	DCD	0x40000d01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\dma\private\contsys.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1SysStandardDMAController@@UAA@XZ| PROC ; SysStandardDMAController::~SysStandardDMAController

; 30   : {

  00000		 |$LN10@SysStandar@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M36721|
  00004	e1a04000	 mov         r4, r0

; 31   :     if (mpDMARegs)

  00008	e594200c	 ldr         r2, [r4, #0xC]
  0000c	e59f301c	 ldr         r3, [pc, #0x1C]
  00010	e3520000	 cmp         r2, #0
  00014	e5843000	 str         r3, [r4]

; 32   :         ShutDown();

  00018	1b000000	 blne        |?ShutDown@SysStandardDMAController@@UAAXXZ|

; 33   : }

  0001c	e59f3008	 ldr         r3, [pc, #8]
  00020	e5843000	 str         r3, [r4]
  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$LN11@SysStandar@2|
  0002c		 |$LN12@SysStandar@2|
  0002c	00000000	 DCD         |??_7DMAController@@6B@|
  00030		 |$LN13@SysStandar@2|
  00030	00000000	 DCD         |??_7SysStandardDMAController@@6B@|
  00034		 |$M36722|

			 ENDP  ; |??1SysStandardDMAController@@UAA@XZ|, SysStandardDMAController::~SysStandardDMAController


  00000			 AREA	 |.pdata|, PDATA
|$T36738| DCD	|$LN6@scalar@2|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GSysStandardDMAController@@UAAPAXI@Z| PROC ; SysStandardDMAController::`scalar deleting destructor'
  00000		 |$LN6@scalar@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M36735|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |??1SysStandardDMAController@@UAA@XZ|
  00010	e3140001	 tst         r4, #1
  00014	11a00005	 movne       r0, r5
  00018	1b000000	 blne        |??3@YAXPAX@Z|
  0001c	e1a00005	 mov         r0, r5
  00020	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M36736|

			 ENDP  ; |??_GSysStandardDMAController@@UAAPAXI@Z|, SysStandardDMAController::`scalar deleting destructor'

	END
