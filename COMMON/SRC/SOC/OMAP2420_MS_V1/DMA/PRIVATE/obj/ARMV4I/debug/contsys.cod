; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\OMAP2420_MS_V1\DMA\PRIVATE\contsys.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_7SysStandardDMAController@@6B@| [ DATA ] ; SysStandardDMAController::`vftable'
	EXPORT	|??0SysStandardDMAController@@QAA@XZ|	; SysStandardDMAController::SysStandardDMAController
	EXPORT	|?Init@SysStandardDMAController@@UAAIXZ| ; SysStandardDMAController::Init
	EXPORT	|?ShutDown@SysStandardDMAController@@UAAXXZ| ; SysStandardDMAController::ShutDown
	EXPORT	|?Set@SysStandardDMAController@@UAAIIW4DMA_seqProperty@@I@Z| ; SysStandardDMAController::Set
	EXPORT	|?Get@SysStandardDMAController@@UAAIIW4DMA_seqProperty@@PAI@Z| ; SysStandardDMAController::Get
	IMPORT	|??0StandardDMAController@@QAA@I@Z|	; StandardDMAController::StandardDMAController
	IMPORT	|??_ESysStandardDMAController@@UAAPAXI@Z|, WEAK |??_GSysStandardDMAController@@UAAPAXI@Z| ; SysStandardDMAController::`vector deleting destructor', SysStandardDMAController::`scalar deleting destructor'
	IMPORT	|?AllocChannels@StandardDMAController@@UAAIIAAI@Z| ; StandardDMAController::AllocChannels
	IMPORT	|?FreeChannels@StandardDMAController@@UAAII@Z| ; StandardDMAController::FreeChannels

  00000			 AREA	 |.pdata|, PDATA
|$T36572| DCD	|$LN5@SysStandar|
	DCD	0x40001604
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\dma\private\contsys.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7SysStandardDMAController@@6B@| DCD |??_ESysStandardDMAController@@UAAPAXI@Z| ; SysStandardDMAController::`vftable'
	DCD	|?Init@SysStandardDMAController@@UAAIXZ|
	DCD	|?ShutDown@SysStandardDMAController@@UAAXXZ|
	DCD	|?Set@SysStandardDMAController@@UAAIIW4DMA_seqProperty@@I@Z|
	DCD	|?Get@SysStandardDMAController@@UAAIIW4DMA_seqProperty@@PAI@Z|
	DCD	|?AllocChannels@StandardDMAController@@UAAIIAAI@Z|
	DCD	|?FreeChannels@StandardDMAController@@UAAII@Z|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0SysStandardDMAController@@QAA@XZ| PROC ; SysStandardDMAController::SysStandardDMAController

; 25   : {

  00000		 |$LN5@SysStandar|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36569|
  00010	e3a01020	 mov         r1, #0x20
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          |??0StandardDMAController@@QAA@I@Z|
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59f202c	 ldr         r2, [pc, #0x2C]
  00024	e59d3010	 ldr         r3, [sp, #0x10]
  00028	e5832000	 str         r2, [r3]

; 26   :     mpDMARegs = NULL;

  0002c	e59d3010	 ldr         r3, [sp, #0x10]
  00030	e283200c	 add         r2, r3, #0xC
  00034	e3a03000	 mov         r3, #0
  00038	e5823000	 str         r3, [r2]

; 27   : }

  0003c	e59d3010	 ldr         r3, [sp, #0x10]
  00040	e58d3000	 str         r3, [sp]
  00044	e59d0000	 ldr         r0, [sp]
  00048	e28dd008	 add         sp, sp, #8
  0004c	e89d6000	 ldmia       sp, {sp, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$LN6@SysStandar|
  00054		 |$LN7@SysStandar|
  00054	00000000	 DCD         |??_7SysStandardDMAController@@6B@|
  00058		 |$M36570|

			 ENDP  ; |??0SysStandardDMAController@@QAA@XZ|, SysStandardDMAController::SysStandardDMAController

	EXPORT	|??1SysStandardDMAController@@UAA@XZ|	; SysStandardDMAController::~SysStandardDMAController
	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T36580| DCD	|$LN6@scalar|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GSysStandardDMAController@@UAAPAXI@Z| PROC ; SysStandardDMAController::`scalar deleting destructor'
  00000		 |$LN6@scalar|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36577|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1SysStandardDMAController@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M36578|

			 ENDP  ; |??_GSysStandardDMAController@@UAAPAXI@Z|, SysStandardDMAController::`scalar deleting destructor'

	EXPORT	|??1StandardDMAController@@UAA@XZ|	; StandardDMAController::~StandardDMAController

  00008			 AREA	 |.pdata|, PDATA
|$T36587| DCD	|$LN6@SysStandar@2|
	DCD	0x40001203
; Function compile flags: /Odtp

  00058			 AREA	 |.text|, CODE, ARM

  00058		 |??1SysStandardDMAController@@UAA@XZ| PROC ; SysStandardDMAController::~SysStandardDMAController

; 30   : {

  00058		 |$LN6@SysStandar@2|
  00058	e1a0c00d	 mov         r12, sp
  0005c	e92d0001	 stmdb       sp!, {r0}
  00060	e92d5000	 stmdb       sp!, {r12, lr}
  00064		 |$M36584|
  00064	e59f2030	 ldr         r2, [pc, #0x30]
  00068	e59d3008	 ldr         r3, [sp, #8]
  0006c	e5832000	 str         r2, [r3]

; 31   :     if (mpDMARegs)

  00070	e59d3008	 ldr         r3, [sp, #8]
  00074	e283300c	 add         r3, r3, #0xC
  00078	e5933000	 ldr         r3, [r3]
  0007c	e3530000	 cmp         r3, #0
  00080	0a000001	 beq         |$LN1@SysStandar@2|

; 32   :         ShutDown();

  00084	e59d0008	 ldr         r0, [sp, #8]
  00088	eb000000	 bl          |?ShutDown@SysStandardDMAController@@UAAXXZ|
  0008c		 |$LN1@SysStandar@2|

; 33   : }

  0008c	e59d0008	 ldr         r0, [sp, #8]
  00090	eb000000	 bl          |??1StandardDMAController@@UAA@XZ|
  00094	e89d6000	 ldmia       sp, {sp, lr}
  00098	e12fff1e	 bx          lr
  0009c		 |$LN7@SysStandar@2|
  0009c		 |$LN8@SysStandar@2|
  0009c	00000000	 DCD         |??_7SysStandardDMAController@@6B@|
  000a0		 |$M36585|

			 ENDP  ; |??1SysStandardDMAController@@UAA@XZ|, SysStandardDMAController::~SysStandardDMAController

	EXPORT	|??1DMAController@@UAA@XZ|		; DMAController::~DMAController

  00000			 AREA	 |.pdata|, PDATA
|$T36594| DCD	|$LN5@StandardDM|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1StandardDMAController@@UAA@XZ| PROC ; StandardDMAController::~StandardDMAController
  00000		 |$LN5@StandardDM|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36591|
  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          |??1DMAController@@UAA@XZ|
  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M36592|

			 ENDP  ; |??1StandardDMAController@@UAA@XZ|, StandardDMAController::~StandardDMAController

	EXPORT	|??_7DMAController@@6B@| [ DATA ]	; DMAController::`vftable'
	IMPORT	|??_EDMAController@@UAAPAXI@Z|, WEAK |??_GDMAController@@UAAPAXI@Z| ; DMAController::`vector deleting destructor', DMAController::`scalar deleting destructor'
	IMPORT	|_purecall|
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\dma\private\dmasys.h

  00000			 AREA	 |.pdata|, PDATA
|$T36601| DCD	|$LN5@DMAControl|
	DCD	0x40000903

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7DMAController@@6B@| DCD |??_EDMAController@@UAAPAXI@Z| ; DMAController::`vftable'
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1DMAController@@UAA@XZ| PROC	; DMAController::~DMAController

; 95   :     virtual ~DMAController(void) {}

  00000		 |$LN5@DMAControl|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M36598|
  0000c	e59f200c	 ldr         r2, [pc, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e5832000	 str         r2, [r3]
  00018	e89d6000	 ldmia       sp, {sp, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$LN6@DMAControl|
  00020		 |$LN7@DMAControl|
  00020	00000000	 DCD         |??_7DMAController@@6B@|
  00024		 |$M36599|

			 ENDP  ; |??1DMAController@@UAA@XZ|, DMAController::~DMAController


  00000			 AREA	 |.pdata|, PDATA
|$T36611| DCD	|$LN6@scalar@2|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GDMAController@@UAAPAXI@Z| PROC	; DMAController::`scalar deleting destructor'
  00000		 |$LN6@scalar@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M36608|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1DMAController@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar@2|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar@2|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M36609|

			 ENDP  ; |??_GDMAController@@UAAPAXI@Z|, DMAController::`scalar deleting destructor'

	EXPORT	|??_C@_1GM@IAEGFHGK@?$AAD?$AAM?$AAA?$AA?2?$AAS?$AAy?$AAs?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IK@KIKBAHBO@?$AAD?$AAM?$AAA?$AA?2?$AAS?$AAy?$AAs?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JK@EMOMAFGL@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	IMPORT	|?Reset@StandardDMAController@@IAAXPCX@Z| ; StandardDMAController::Reset
	IMPORT	|dpCurSettings|
	IMPORT	|MmUnmapIoSpace|
	IMPORT	|?GetRevision@StandardDMAController@@IAA_NPCXAAI1@Z| ; StandardDMAController::GetRevision
	IMPORT	|NKDbgPrintfW|
	IMPORT	|MmMapIoSpace|

  00010			 AREA	 |.pdata|, PDATA
|$T36623| DCD	|$LN11@Init|
	DCD	0x40005c04
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\dma\private\contsys.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@IAEGFHGK@?$AAD?$AAM?$AAA?$AA?2?$AAS?$AAy?$AAs?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn@| DCB "D"
	DCB	0x0, "M", 0x0, "A", 0x0, "\\", 0x0, "S", 0x0, "y", 0x0, "s"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "a"
	DCB	0x0, "r", 0x0, "d", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")", 0x0, " "
	DCB	0x0, "R", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "s", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, "."
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@KIKBAHBO@?$AAD?$AAM?$AAA?$AA?2?$AAS?$AAy?$AAs?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn@| DCB "D"
	DCB	0x0, "M", 0x0, "A", 0x0, "\\", 0x0, "S", 0x0, "y", 0x0, "s"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "a"
	DCB	0x0, "r", 0x0, "d", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R"
	DCB	0x0, " ", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "p", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ":", 0x0, " "
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JK@EMOMAFGL@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "2", 0x0, "4", 0x0, "2"
	DCB	0x0, "0", 0x0, "_", 0x0, "M", 0x0, "S", 0x0, "_", 0x0, "V"
	DCB	0x0, "1", 0x0, "\\", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "\\"
	DCB	0x0, "P", 0x0, "R", 0x0, "I", 0x0, "V", 0x0, "A", 0x0, "T"
	DCB	0x0, "E", 0x0, "\\", 0x0, ".", 0x0, "\\", 0x0, "c", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "s", 0x0, "y", 0x0, "s", 0x0, "."
	DCB	0x0, "c", 0x0, "p", 0x0, "p", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  000a0			 AREA	 |.text|, CODE, ARM

  000a0		 |?Init@SysStandardDMAController@@UAAIXZ| PROC ; SysStandardDMAController::Init

; 36   : {

  000a0		 |$LN11@Init|
  000a0	e1a0c00d	 mov         r12, sp
  000a4	e92d0001	 stmdb       sp!, {r0}
  000a8	e92d5000	 stmdb       sp!, {r12, lr}
  000ac	e24dd024	 sub         sp, sp, #0x24
  000b0		 |$M36620|

; 37   :     PHYSICAL_ADDRESS pa;
; 38   : 
; 39   :     // map standard controller DMA registers into driver address space
; 40   :     pa.HighPart= 0;

  000b0	e3a03000	 mov         r3, #0
  000b4	e58d3008	 str         r3, [sp, #8]

; 41   :     pa.LowPart = OMAP2420_SDMA_REGS_PA;

  000b8	e3a03312	 mov         r3, #0x12, 6
  000bc	e3833a56	 orr         r3, r3, #0x56, 20
  000c0	e58d3004	 str         r3, [sp, #4]

; 42   :     mpDMARegs = (OMAP2420_SDMA_REGS *)MmMapIoSpace(pa, sizeof(OMAP2420_SDMA_REGS), FALSE);

  000c4	e3a03000	 mov         r3, #0
  000c8	e3a02d32	 mov         r2, #0x32, 26
  000cc	e59d0004	 ldr         r0, [sp, #4]
  000d0	e59d1008	 ldr         r1, [sp, #8]
  000d4	eb000000	 bl          MmMapIoSpace
  000d8	e58d0014	 str         r0, [sp, #0x14]
  000dc	e59d302c	 ldr         r3, [sp, #0x2C]
  000e0	e283200c	 add         r2, r3, #0xC
  000e4	e59d3014	 ldr         r3, [sp, #0x14]
  000e8	e5823000	 str         r3, [r2]

; 43   :     if (!mpDMARegs)

  000ec	e59d302c	 ldr         r3, [sp, #0x2C]
  000f0	e283300c	 add         r3, r3, #0xC
  000f4	e5933000	 ldr         r3, [r3]
  000f8	e3530000	 cmp         r3, #0
  000fc	1a00000e	 bne         |$LN2@Init|

; 44   :     {
; 45   :         ERRORMSG(TRUE, (L"DMA\\SysStandardDMAController::Init(): ERROR mapping DMA registers.\r\n"));

  00100	e3a0202d	 mov         r2, #0x2D
  00104	e59f1100	 ldr         r1, [pc, #0x100]
  00108	e59f00f8	 ldr         r0, [pc, #0xF8]
  0010c	eb000000	 bl          NKDbgPrintfW
  00110	e59f00ec	 ldr         r0, [pc, #0xEC]
  00114	eb000000	 bl          NKDbgPrintfW
  00118	e3a03001	 mov         r3, #1
  0011c	e58d3018	 str         r3, [sp, #0x18]
  00120	ea000001	 b           |$LN6@Init|
  00124	e3a03000	 mov         r3, #0
  00128	e58d3018	 str         r3, [sp, #0x18]
  0012c		 |$LN6@Init|

; 46   :         return DMADRVERR_INIT_FAILURE;

  0012c	e3a0312a	 mov         r3, #0x2A, 2
  00130	e3833712	 orr         r3, r3, #0x12, 14
  00134	e58d3010	 str         r3, [sp, #0x10]
  00138	ea00002b	 b           |$LN3@Init|
  0013c		 |$LN2@Init|

; 47   :     }
; 48   : 
; 49   :     /* try to retrieve the DMA controller revision here */
; 50   :     uint major, minor;
; 51   :     if (!GetRevision(mpDMARegs,major,minor))

  0013c	e28d3000	 add         r3, sp, #0
  00140	e28d200c	 add         r2, sp, #0xC
  00144	e59d102c	 ldr         r1, [sp, #0x2C]
  00148	e281100c	 add         r1, r1, #0xC
  0014c	e5911000	 ldr         r1, [r1]
  00150	e59d002c	 ldr         r0, [sp, #0x2C]
  00154	eb000000	 bl          |?GetRevision@StandardDMAController@@IAA_NPCXAAI1@Z|
  00158	e5cd001c	 strb        r0, [sp, #0x1C]
  0015c	e5dd301c	 ldrb        r3, [sp, #0x1C]
  00160	e3530000	 cmp         r3, #0
  00164	1a00000c	 bne         |$LN1@Init|

; 52   :     {
; 53   :         MmUnmapIoSpace((PVOID)mpDMARegs,sizeof(OMAP2420_SDMA_REGS));

  00168	e3a01d32	 mov         r1, #0x32, 26
  0016c	e59d302c	 ldr         r3, [sp, #0x2C]
  00170	e283300c	 add         r3, r3, #0xC
  00174	e5930000	 ldr         r0, [r3]
  00178	eb000000	 bl          MmUnmapIoSpace

; 54   :         mpDMARegs = NULL;

  0017c	e59d302c	 ldr         r3, [sp, #0x2C]
  00180	e283200c	 add         r2, r3, #0xC
  00184	e3a03000	 mov         r3, #0
  00188	e5823000	 str         r3, [r2]

; 55   :         return DMADRVERR_INIT_FAILURE;

  0018c	e3a0312a	 mov         r3, #0x2A, 2
  00190	e3833712	 orr         r3, r3, #0x12, 14
  00194	e58d3010	 str         r3, [sp, #0x10]
  00198	ea000013	 b           |$LN3@Init|
  0019c		 |$LN1@Init|

; 56   :     }
; 57   :     DEBUGMSG(ZONE_INIT, (L"DMA\\SysStandardDMAController::Init() "
; 58   :         L"Revision %d.%d\r\n", major, minor
; 59   :     ));

  0019c	e59f305c	 ldr         r3, [pc, #0x5C]
  001a0	e5933440	 ldr         r3, [r3, #0x440]
  001a4	e3130008	 tst         r3, #8
  001a8	0a000006	 beq         |$LN7@Init|
  001ac	e59d2000	 ldr         r2, [sp]
  001b0	e59d100c	 ldr         r1, [sp, #0xC]
  001b4	e59f0040	 ldr         r0, [pc, #0x40]
  001b8	eb000000	 bl          NKDbgPrintfW
  001bc	e3a03001	 mov         r3, #1
  001c0	e58d3020	 str         r3, [sp, #0x20]
  001c4	ea000001	 b           |$LN8@Init|
  001c8		 |$LN7@Init|
  001c8	e3a03000	 mov         r3, #0
  001cc	e58d3020	 str         r3, [sp, #0x20]
  001d0		 |$LN8@Init|

; 60   : 
; 61   :     Reset(mpDMARegs);

  001d0	e59d302c	 ldr         r3, [sp, #0x2C]
  001d4	e283300c	 add         r3, r3, #0xC
  001d8	e5931000	 ldr         r1, [r3]
  001dc	e59d002c	 ldr         r0, [sp, #0x2C]
  001e0	eb000000	 bl          |?Reset@StandardDMAController@@IAAXPCX@Z|

; 62   :     return 0;

  001e4	e3a03000	 mov         r3, #0
  001e8	e58d3010	 str         r3, [sp, #0x10]
  001ec		 |$LN3@Init|

; 63   : }

  001ec	e59d0010	 ldr         r0, [sp, #0x10]
  001f0	e28dd024	 add         sp, sp, #0x24
  001f4	e89d6000	 ldmia       sp, {sp, lr}
  001f8	e12fff1e	 bx          lr
  001fc		 |$LN12@Init|
  001fc		 |$LN13@Init|
  001fc	00000000	 DCD         |??_C@_1GM@IAEGFHGK@?$AAD?$AAM?$AAA?$AA?2?$AAS?$AAy?$AAs?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn@|
  00200		 |$LN14@Init|
  00200	00000000	 DCD         |dpCurSettings|
  00204		 |$LN15@Init|
  00204	00000000	 DCD         |??_C@_1IK@KIKBAHBO@?$AAD?$AAM?$AAA?$AA?2?$AAS?$AAy?$AAs?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AAD?$AAM?$AAA?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn@|
  00208		 |$LN16@Init|
  00208	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  0020c		 |$LN17@Init|
  0020c	00000000	 DCD         |??_C@_1JK@EMOMAFGL@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  00210		 |$M36621|

			 ENDP  ; |?Init@SysStandardDMAController@@UAAIXZ|, SysStandardDMAController::Init


  00018			 AREA	 |.pdata|, PDATA
|$T36634| DCD	|$LN6@ShutDown|
	DCD	0x40001803
; Function compile flags: /Odtp

  00210			 AREA	 |.text|, CODE, ARM

  00210		 |?ShutDown@SysStandardDMAController@@UAAXXZ| PROC ; SysStandardDMAController::ShutDown

; 66   : {

  00210		 |$LN6@ShutDown|
  00210	e1a0c00d	 mov         r12, sp
  00214	e92d0001	 stmdb       sp!, {r0}
  00218	e92d5000	 stmdb       sp!, {r12, lr}
  0021c		 |$M36631|

; 67   :     if (mpDMARegs)

  0021c	e59d3008	 ldr         r3, [sp, #8]
  00220	e283300c	 add         r3, r3, #0xC
  00224	e5933000	 ldr         r3, [r3]
  00228	e3530000	 cmp         r3, #0
  0022c	0a00000d	 beq         |$LN1@ShutDown|

; 68   :     {
; 69   :         Reset(mpDMARegs);

  00230	e59d3008	 ldr         r3, [sp, #8]
  00234	e283300c	 add         r3, r3, #0xC
  00238	e5931000	 ldr         r1, [r3]
  0023c	e59d0008	 ldr         r0, [sp, #8]
  00240	eb000000	 bl          |?Reset@StandardDMAController@@IAAXPCX@Z|

; 70   :         /* unmap the controller */
; 71   :         MmUnmapIoSpace((PVOID)mpDMARegs,sizeof(OMAP2420_SDMA_REGS));

  00244	e3a01d32	 mov         r1, #0x32, 26
  00248	e59d3008	 ldr         r3, [sp, #8]
  0024c	e283300c	 add         r3, r3, #0xC
  00250	e5930000	 ldr         r0, [r3]
  00254	eb000000	 bl          MmUnmapIoSpace

; 72   :         mpDMARegs = NULL;

  00258	e59d3008	 ldr         r3, [sp, #8]
  0025c	e283200c	 add         r2, r3, #0xC
  00260	e3a03000	 mov         r3, #0
  00264	e5823000	 str         r3, [r2]
  00268		 |$LN1@ShutDown|

; 73   :     }
; 74   : }

  00268	e89d6000	 ldmia       sp, {sp, lr}
  0026c	e12fff1e	 bx          lr
  00270		 |$M36632|

			 ENDP  ; |?ShutDown@SysStandardDMAController@@UAAXXZ|, SysStandardDMAController::ShutDown


  00020			 AREA	 |.pdata|, PDATA
|$T36651| DCD	|$LN37@Set|
	DCD	0x4000ff04
; Function compile flags: /Odtp

  00270			 AREA	 |.text|, CODE, ARM

  00270		 |?Set@SysStandardDMAController@@UAAIIW4DMA_seqProperty@@I@Z| PROC ; SysStandardDMAController::Set

; 77   : {

  00270		 |$LN37@Set|
  00270	e1a0c00d	 mov         r12, sp
  00274	e92d000f	 stmdb       sp!, {r0 - r3}
  00278	e92d5000	 stmdb       sp!, {r12, lr}
  0027c	e24dd008	 sub         sp, sp, #8
  00280		 |$M36648|

; 78   :     switch (aProp)

  00280	e59d3018	 ldr         r3, [sp, #0x18]
  00284	e58d3004	 str         r3, [sp, #4]
  00288	e59d3004	 ldr         r3, [sp, #4]
  0028c	e2433001	 sub         r3, r3, #1
  00290	e58d3004	 str         r3, [sp, #4]
  00294	e59d3004	 ldr         r3, [sp, #4]
  00298	e3530008	 cmp         r3, #8
  0029c	8a0000e8	 bhi         |$LN1@Set|
  002a0	e59d2004	 ldr         r2, [sp, #4]
  002a4	e1a03102	 mov         r3, r2, lsl #2
  002a8	e083300f	 add         r3, r3, pc
  002ac	e5933004	 ldr         r3, [r3, #4]
  002b0	e08ff003	 add         pc, pc, r3
  002b4		 |$LN25@Set|
  002b4		 |$LN24@Set|
  002b4		 |$LN26@Set|
  002b4	00000144	 DCD         0x144
  002b8		 |$LN27@Set|
  002b8	000001a4	 DCD         0x1a4
  002bc		 |$LN28@Set|
  002bc	00000208	 DCD         0x208
  002c0		 |$LN29@Set|
  002c0	00000268	 DCD         0x268
  002c4		 |$LN30@Set|
  002c4	000002c8	 DCD         0x2c8
  002c8		 |$LN31@Set|
  002c8	0000032c	 DCD         0x32c
  002cc		 |$LN32@Set|
  002cc	00000020	 DCD         0x20
  002d0		 |$LN33@Set|
  002d0	00000080	 DCD         0x80
  002d4		 |$LN34@Set|
  002d4	000000e4	 DCD         0xe4
  002d8		 |$LN19@Set|

; 79   :     {
; 80   :         case DMACP_L0IntEnb:
; 81   :             aValue &= aChanMask;

  002d8	e59d201c	 ldr         r2, [sp, #0x1C]
  002dc	e59d3014	 ldr         r3, [sp, #0x14]
  002e0	e0023003	 and         r3, r2, r3
  002e4	e58d301c	 str         r3, [sp, #0x1C]

; 82   :             if (!aValue)

  002e8	e59d301c	 ldr         r3, [sp, #0x1C]
  002ec	e3530000	 cmp         r3, #0
  002f0	1a000003	 bne         |$LN18@Set|

; 83   :                 return DMADRVERR_PARAM_INVALID;

  002f4	e3a0312e	 mov         r3, #0x2E, 2
  002f8	e3833712	 orr         r3, r3, #0x12, 14
  002fc	e58d3000	 str         r3, [sp]
  00300	ea0000d5	 b           |$LN22@Set|
  00304		 |$LN18@Set|

; 84   :             SETREG32(&mpDMARegs->DMA4_IRQENABLE_L0, aValue);

  00304	e59d3010	 ldr         r3, [sp, #0x10]
  00308	e283300c	 add         r3, r3, #0xC
  0030c	e5933000	 ldr         r3, [r3]
  00310	e2833018	 add         r3, r3, #0x18
  00314	e5932000	 ldr         r2, [r3]
  00318	e59d301c	 ldr         r3, [sp, #0x1C]
  0031c	e1822003	 orr         r2, r2, r3
  00320	e59d3010	 ldr         r3, [sp, #0x10]
  00324	e283300c	 add         r3, r3, #0xC
  00328	e5933000	 ldr         r3, [r3]
  0032c	e2833018	 add         r3, r3, #0x18
  00330	e5832000	 str         r2, [r3]

; 85   :             break;

  00334	ea0000c6	 b           |$LN20@Set|
  00338		 |$LN17@Set|

; 86   :         case DMACP_L0IntDis:
; 87   :             aValue &= aChanMask;

  00338	e59d201c	 ldr         r2, [sp, #0x1C]
  0033c	e59d3014	 ldr         r3, [sp, #0x14]
  00340	e0023003	 and         r3, r2, r3
  00344	e58d301c	 str         r3, [sp, #0x1C]

; 88   :             if (!aValue)

  00348	e59d301c	 ldr         r3, [sp, #0x1C]
  0034c	e3530000	 cmp         r3, #0
  00350	1a000003	 bne         |$LN16@Set|

; 89   :                 return DMADRVERR_PARAM_INVALID;

  00354	e3a0312e	 mov         r3, #0x2E, 2
  00358	e3833712	 orr         r3, r3, #0x12, 14
  0035c	e58d3000	 str         r3, [sp]
  00360	ea0000bd	 b           |$LN22@Set|
  00364		 |$LN16@Set|

; 90   :             CLRREG32(&mpDMARegs->DMA4_IRQENABLE_L0, aValue);

  00364	e59d3010	 ldr         r3, [sp, #0x10]
  00368	e283300c	 add         r3, r3, #0xC
  0036c	e5933000	 ldr         r3, [r3]
  00370	e2831018	 add         r1, r3, #0x18
  00374	e59d301c	 ldr         r3, [sp, #0x1C]
  00378	e1e02003	 mvn         r2, r3
  0037c	e5913000	 ldr         r3, [r1]
  00380	e0032002	 and         r2, r3, r2
  00384	e59d3010	 ldr         r3, [sp, #0x10]
  00388	e283300c	 add         r3, r3, #0xC
  0038c	e5933000	 ldr         r3, [r3]
  00390	e2833018	 add         r3, r3, #0x18
  00394	e5832000	 str         r2, [r3]

; 91   :             break;

  00398	ea0000ad	 b           |$LN20@Set|
  0039c		 |$LN15@Set|

; 92   :         case DMACP_L0IntAck:
; 93   :             aValue &= aChanMask;

  0039c	e59d201c	 ldr         r2, [sp, #0x1C]
  003a0	e59d3014	 ldr         r3, [sp, #0x14]
  003a4	e0023003	 and         r3, r2, r3
  003a8	e58d301c	 str         r3, [sp, #0x1C]

; 94   :             if (!aValue)

  003ac	e59d301c	 ldr         r3, [sp, #0x1C]
  003b0	e3530000	 cmp         r3, #0
  003b4	1a000003	 bne         |$LN14@Set|

; 95   :                 return DMADRVERR_PARAM_INVALID;

  003b8	e3a0312e	 mov         r3, #0x2E, 2
  003bc	e3833712	 orr         r3, r3, #0x12, 14
  003c0	e58d3000	 str         r3, [sp]
  003c4	ea0000a4	 b           |$LN22@Set|
  003c8		 |$LN14@Set|

; 96   :             SETREG32(&mpDMARegs->DMA4_IRQSTATUS_L0, aValue);

  003c8	e59d3010	 ldr         r3, [sp, #0x10]
  003cc	e283300c	 add         r3, r3, #0xC
  003d0	e5933000	 ldr         r3, [r3]
  003d4	e2833008	 add         r3, r3, #8
  003d8	e5932000	 ldr         r2, [r3]
  003dc	e59d301c	 ldr         r3, [sp, #0x1C]
  003e0	e1822003	 orr         r2, r2, r3
  003e4	e59d3010	 ldr         r3, [sp, #0x10]
  003e8	e283300c	 add         r3, r3, #0xC
  003ec	e5933000	 ldr         r3, [r3]
  003f0	e2833008	 add         r3, r3, #8
  003f4	e5832000	 str         r2, [r3]

; 97   :             break; 

  003f8	ea000095	 b           |$LN20@Set|
  003fc		 |$LN13@Set|

; 98   :             
; 99   :         case DMACP_L3IntEnb:
; 100  :             aValue &= aChanMask;

  003fc	e59d201c	 ldr         r2, [sp, #0x1C]
  00400	e59d3014	 ldr         r3, [sp, #0x14]
  00404	e0023003	 and         r3, r2, r3
  00408	e58d301c	 str         r3, [sp, #0x1C]

; 101  :             if (!aValue)

  0040c	e59d301c	 ldr         r3, [sp, #0x1C]
  00410	e3530000	 cmp         r3, #0
  00414	1a000003	 bne         |$LN12@Set|

; 102  :                 return DMADRVERR_PARAM_INVALID;

  00418	e3a0312e	 mov         r3, #0x2E, 2
  0041c	e3833712	 orr         r3, r3, #0x12, 14
  00420	e58d3000	 str         r3, [sp]
  00424	ea00008c	 b           |$LN22@Set|
  00428		 |$LN12@Set|

; 103  :             SETREG32(&mpDMARegs->DMA4_IRQENABLE_L3, aValue);

  00428	e59d3010	 ldr         r3, [sp, #0x10]
  0042c	e283300c	 add         r3, r3, #0xC
  00430	e5933000	 ldr         r3, [r3]
  00434	e2833024	 add         r3, r3, #0x24
  00438	e5932000	 ldr         r2, [r3]
  0043c	e59d301c	 ldr         r3, [sp, #0x1C]
  00440	e1822003	 orr         r2, r2, r3
  00444	e59d3010	 ldr         r3, [sp, #0x10]
  00448	e283300c	 add         r3, r3, #0xC
  0044c	e5933000	 ldr         r3, [r3]
  00450	e2833024	 add         r3, r3, #0x24
  00454	e5832000	 str         r2, [r3]

; 104  :             break;

  00458	ea00007d	 b           |$LN20@Set|
  0045c		 |$LN11@Set|

; 105  :         case DMACP_L3IntDis:
; 106  :             aValue &= aChanMask;

  0045c	e59d201c	 ldr         r2, [sp, #0x1C]
  00460	e59d3014	 ldr         r3, [sp, #0x14]
  00464	e0023003	 and         r3, r2, r3
  00468	e58d301c	 str         r3, [sp, #0x1C]

; 107  :             if (!aValue)

  0046c	e59d301c	 ldr         r3, [sp, #0x1C]
  00470	e3530000	 cmp         r3, #0
  00474	1a000003	 bne         |$LN10@Set|

; 108  :                 return DMADRVERR_PARAM_INVALID;

  00478	e3a0312e	 mov         r3, #0x2E, 2
  0047c	e3833712	 orr         r3, r3, #0x12, 14
  00480	e58d3000	 str         r3, [sp]
  00484	ea000074	 b           |$LN22@Set|
  00488		 |$LN10@Set|

; 109  :             CLRREG32(&mpDMARegs->DMA4_IRQENABLE_L3, aValue);

  00488	e59d3010	 ldr         r3, [sp, #0x10]
  0048c	e283300c	 add         r3, r3, #0xC
  00490	e5933000	 ldr         r3, [r3]
  00494	e2831024	 add         r1, r3, #0x24
  00498	e59d301c	 ldr         r3, [sp, #0x1C]
  0049c	e1e02003	 mvn         r2, r3
  004a0	e5913000	 ldr         r3, [r1]
  004a4	e0032002	 and         r2, r3, r2
  004a8	e59d3010	 ldr         r3, [sp, #0x10]
  004ac	e283300c	 add         r3, r3, #0xC
  004b0	e5933000	 ldr         r3, [r3]
  004b4	e2833024	 add         r3, r3, #0x24
  004b8	e5832000	 str         r2, [r3]

; 110  :             break;

  004bc	ea000064	 b           |$LN20@Set|
  004c0		 |$LN9@Set|

; 111  :         case DMACP_L3IntAck:
; 112  :             aValue &= aChanMask;

  004c0	e59d201c	 ldr         r2, [sp, #0x1C]
  004c4	e59d3014	 ldr         r3, [sp, #0x14]
  004c8	e0023003	 and         r3, r2, r3
  004cc	e58d301c	 str         r3, [sp, #0x1C]

; 113  :             if (!aValue)

  004d0	e59d301c	 ldr         r3, [sp, #0x1C]
  004d4	e3530000	 cmp         r3, #0
  004d8	1a000003	 bne         |$LN8@Set|

; 114  :                 return DMADRVERR_PARAM_INVALID;

  004dc	e3a0312e	 mov         r3, #0x2E, 2
  004e0	e3833712	 orr         r3, r3, #0x12, 14
  004e4	e58d3000	 str         r3, [sp]
  004e8	ea00005b	 b           |$LN22@Set|
  004ec		 |$LN8@Set|

; 115  :             SETREG32(&mpDMARegs->DMA4_IRQSTATUS_L3, aValue);

  004ec	e59d3010	 ldr         r3, [sp, #0x10]
  004f0	e283300c	 add         r3, r3, #0xC
  004f4	e5933000	 ldr         r3, [r3]
  004f8	e2833014	 add         r3, r3, #0x14
  004fc	e5932000	 ldr         r2, [r3]
  00500	e59d301c	 ldr         r3, [sp, #0x1C]
  00504	e1822003	 orr         r2, r2, r3
  00508	e59d3010	 ldr         r3, [sp, #0x10]
  0050c	e283300c	 add         r3, r3, #0xC
  00510	e5933000	 ldr         r3, [r3]
  00514	e2833014	 add         r3, r3, #0x14
  00518	e5832000	 str         r2, [r3]

; 116  :             break;

  0051c	ea00004c	 b           |$LN20@Set|
  00520		 |$LN7@Set|

; 117  : 
; 118  :         case DMACP_L2IntEnb:
; 119  :             aValue &= aChanMask;

  00520	e59d201c	 ldr         r2, [sp, #0x1C]
  00524	e59d3014	 ldr         r3, [sp, #0x14]
  00528	e0023003	 and         r3, r2, r3
  0052c	e58d301c	 str         r3, [sp, #0x1C]

; 120  :             if (!aValue)

  00530	e59d301c	 ldr         r3, [sp, #0x1C]
  00534	e3530000	 cmp         r3, #0
  00538	1a000003	 bne         |$LN6@Set|

; 121  :                 return DMADRVERR_PARAM_INVALID;

  0053c	e3a0312e	 mov         r3, #0x2E, 2
  00540	e3833712	 orr         r3, r3, #0x12, 14
  00544	e58d3000	 str         r3, [sp]
  00548	ea000043	 b           |$LN22@Set|
  0054c		 |$LN6@Set|

; 122  :             SETREG32(&mpDMARegs->DMA4_IRQENABLE_L2, aValue);

  0054c	e59d3010	 ldr         r3, [sp, #0x10]
  00550	e283300c	 add         r3, r3, #0xC
  00554	e5933000	 ldr         r3, [r3]
  00558	e2833020	 add         r3, r3, #0x20
  0055c	e5932000	 ldr         r2, [r3]
  00560	e59d301c	 ldr         r3, [sp, #0x1C]
  00564	e1822003	 orr         r2, r2, r3
  00568	e59d3010	 ldr         r3, [sp, #0x10]
  0056c	e283300c	 add         r3, r3, #0xC
  00570	e5933000	 ldr         r3, [r3]
  00574	e2833020	 add         r3, r3, #0x20
  00578	e5832000	 str         r2, [r3]

; 123  :             break;

  0057c	ea000034	 b           |$LN20@Set|
  00580		 |$LN5@Set|

; 124  :         case DMACP_L2IntDis:
; 125  :             aValue &= aChanMask;

  00580	e59d201c	 ldr         r2, [sp, #0x1C]
  00584	e59d3014	 ldr         r3, [sp, #0x14]
  00588	e0023003	 and         r3, r2, r3
  0058c	e58d301c	 str         r3, [sp, #0x1C]

; 126  :             if (!aValue)

  00590	e59d301c	 ldr         r3, [sp, #0x1C]
  00594	e3530000	 cmp         r3, #0
  00598	1a000003	 bne         |$LN4@Set|

; 127  :                 return DMADRVERR_PARAM_INVALID;

  0059c	e3a0312e	 mov         r3, #0x2E, 2
  005a0	e3833712	 orr         r3, r3, #0x12, 14
  005a4	e58d3000	 str         r3, [sp]
  005a8	ea00002b	 b           |$LN22@Set|
  005ac		 |$LN4@Set|

; 128  :             CLRREG32(&mpDMARegs->DMA4_IRQENABLE_L2, aValue);

  005ac	e59d3010	 ldr         r3, [sp, #0x10]
  005b0	e283300c	 add         r3, r3, #0xC
  005b4	e5933000	 ldr         r3, [r3]
  005b8	e2831020	 add         r1, r3, #0x20
  005bc	e59d301c	 ldr         r3, [sp, #0x1C]
  005c0	e1e02003	 mvn         r2, r3
  005c4	e5913000	 ldr         r3, [r1]
  005c8	e0032002	 and         r2, r3, r2
  005cc	e59d3010	 ldr         r3, [sp, #0x10]
  005d0	e283300c	 add         r3, r3, #0xC
  005d4	e5933000	 ldr         r3, [r3]
  005d8	e2833020	 add         r3, r3, #0x20
  005dc	e5832000	 str         r2, [r3]

; 129  :             break;

  005e0	ea00001b	 b           |$LN20@Set|
  005e4		 |$LN3@Set|

; 130  :         case DMACP_L2IntAck:
; 131  :             aValue &= aChanMask;

  005e4	e59d201c	 ldr         r2, [sp, #0x1C]
  005e8	e59d3014	 ldr         r3, [sp, #0x14]
  005ec	e0023003	 and         r3, r2, r3
  005f0	e58d301c	 str         r3, [sp, #0x1C]

; 132  :             if (!aValue)

  005f4	e59d301c	 ldr         r3, [sp, #0x1C]
  005f8	e3530000	 cmp         r3, #0
  005fc	1a000003	 bne         |$LN2@Set|

; 133  :                 return DMADRVERR_PARAM_INVALID;

  00600	e3a0312e	 mov         r3, #0x2E, 2
  00604	e3833712	 orr         r3, r3, #0x12, 14
  00608	e58d3000	 str         r3, [sp]
  0060c	ea000012	 b           |$LN22@Set|
  00610		 |$LN2@Set|

; 134  :             SETREG32(&mpDMARegs->DMA4_IRQSTATUS_L2, aValue);

  00610	e59d3010	 ldr         r3, [sp, #0x10]
  00614	e283300c	 add         r3, r3, #0xC
  00618	e5933000	 ldr         r3, [r3]
  0061c	e2833010	 add         r3, r3, #0x10
  00620	e5932000	 ldr         r2, [r3]
  00624	e59d301c	 ldr         r3, [sp, #0x1C]
  00628	e1822003	 orr         r2, r2, r3
  0062c	e59d3010	 ldr         r3, [sp, #0x10]
  00630	e283300c	 add         r3, r3, #0xC
  00634	e5933000	 ldr         r3, [r3]
  00638	e2833010	 add         r3, r3, #0x10
  0063c	e5832000	 str         r2, [r3]

; 135  :             break;

  00640	ea000003	 b           |$LN20@Set|
  00644		 |$LN1@Set|

; 136  :             
; 137  :         default:
; 138  :             return DMADRVERR_UNKNOWNPROPERTY;

  00644	e3a0313e	 mov         r3, #0x3E, 2
  00648	e3833712	 orr         r3, r3, #0x12, 14
  0064c	e58d3000	 str         r3, [sp]
  00650	ea000001	 b           |$LN22@Set|
  00654		 |$LN20@Set|

; 139  :     }
; 140  : 
; 141  :     return 0;

  00654	e3a03000	 mov         r3, #0
  00658	e58d3000	 str         r3, [sp]
  0065c		 |$LN22@Set|

; 142  : }

  0065c	e59d0000	 ldr         r0, [sp]
  00660	e28dd008	 add         sp, sp, #8
  00664	e89d6000	 ldmia       sp, {sp, lr}
  00668	e12fff1e	 bx          lr
  0066c		 |$M36649|

			 ENDP  ; |?Set@SysStandardDMAController@@UAAIIW4DMA_seqProperty@@I@Z|, SysStandardDMAController::Set


  00028			 AREA	 |.pdata|, PDATA
|$T36657| DCD	|$LN8@Get|
	DCD	0x40001804
; Function compile flags: /Odtp

  0066c			 AREA	 |.text|, CODE, ARM

  0066c		 |?Get@SysStandardDMAController@@UAAIIW4DMA_seqProperty@@PAI@Z| PROC ; SysStandardDMAController::Get

; 145  : {

  0066c		 |$LN8@Get|
  0066c	e1a0c00d	 mov         r12, sp
  00670	e92d000f	 stmdb       sp!, {r0 - r3}
  00674	e92d5000	 stmdb       sp!, {r12, lr}
  00678	e24dd008	 sub         sp, sp, #8
  0067c		 |$M36654|

; 146  :     switch (aProp)

  0067c	e59d3018	 ldr         r3, [sp, #0x18]
  00680	e58d3004	 str         r3, [sp, #4]
  00684	e59d3004	 ldr         r3, [sp, #4]
  00688	e3530000	 cmp         r3, #0
  0068c	da000007	 ble         |$LN2@Get|
  00690	e59d3004	 ldr         r3, [sp, #4]
  00694	e3530009	 cmp         r3, #9
  00698	da000000	 ble         |$LN1@Get|
  0069c	ea000003	 b           |$LN2@Get|
  006a0		 |$LN1@Get|

; 147  :     {
; 148  :         case DMACP_L0IntEnb:
; 149  :         case DMACP_L0IntDis:
; 150  :         case DMACP_L0IntAck:
; 151  :         case DMACP_L3IntEnb:
; 152  :         case DMACP_L3IntDis:
; 153  :         case DMACP_L3IntAck:
; 154  :         case DMACP_L2IntEnb:
; 155  :         case DMACP_L2IntDis:
; 156  :         case DMACP_L2IntAck:
; 157  :             return DMADRVERR_PROP_WRITEONLY;

  006a0	e3a03142	 mov         r3, #0x42, 2
  006a4	e3833712	 orr         r3, r3, #0x12, 14
  006a8	e58d3000	 str         r3, [sp]
  006ac	ea000002	 b           |$LN4@Get|
  006b0		 |$LN2@Get|

; 158  :     }
; 159  :     return DMADRVERR_UNKNOWNPROPERTY;

  006b0	e3a0313e	 mov         r3, #0x3E, 2
  006b4	e3833712	 orr         r3, r3, #0x12, 14
  006b8	e58d3000	 str         r3, [sp]
  006bc		 |$LN4@Get|

; 160  : }

  006bc	e59d0000	 ldr         r0, [sp]
  006c0	e28dd008	 add         sp, sp, #8
  006c4	e89d6000	 ldmia       sp, {sp, lr}
  006c8	e12fff1e	 bx          lr
  006cc		 |$M36655|

			 ENDP  ; |?Get@SysStandardDMAController@@UAAIIW4DMA_seqProperty@@PAI@Z|, SysStandardDMAController::Get

	END
