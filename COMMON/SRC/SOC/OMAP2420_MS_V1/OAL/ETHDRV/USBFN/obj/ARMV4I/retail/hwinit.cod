; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\OMAP2420_MS_V1\OAL\ETHDRV\USBFN\hwinit.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|InitSystemControl|
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\oal\ethdrv\usbfn\hwinit.c

  00000			 AREA	 |.pdata|, PDATA
|$T45542| DCD	|$LN5@InitSystem|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |InitSystemControl| PROC

; 38   : {

  00000		 |$LN5@InitSystem|
  00000		 |$M45539|

; 39   : #if 0
; 40   :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"+USBFN:: Initialize System Control\r\n"));
; 41   :     {
; 42   :         DWORD temp, mode;
; 43   :         OMAP2420_SYSC1_REGS *pSysConRegs = OALPAtoUA(OMAP2420_SYSC1_REGS_PA);
; 44   :     
; 45   :         temp = INREG32(&pSysConRegs->ulCONTROL_DEVCONF);
; 46   : 
; 47   :         mode = USBX_TRX_MODE;
; 48   : 
; 49   :         // Clear USBT0WRIMODEI. This places the USB Controls in Unidirectional Mode
; 50   :         temp &= 0xFF3FFFFF;
; 51   : 
; 52   :         // Set the Transceiver Interface Mode for USB Port 0
; 53   :         if ((mode == 0x01) || (mode == 0x02))
; 54   :         {
; 55   :             // Change the mode to Bidirectional.
; 56   :             temp |= 0x00800000;
; 57   :         }
; 58   : 
; 59   :         // Make sure the USB Enable signal is being used as an Active-High signal
; 60   :         temp &= 0xFFFEFFFF;
; 61   : 
; 62   :         // Make sure the USB module standby signal is not asserted
; 63   :         temp &= 0xFFFF7FFF;
; 64   : 
; 65   :         OUTREG32(&pSysConRegs->ulCONTROL_DEVCONF, temp);
; 66   :     
; 67   :     }
; 68   :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"-USBFN:: Initialize System Control\r\n"));
; 69   : #endif
; 70   :     return TRUE;

  00000	e3a00001	 mov         r0, #1

; 71   : }

  00004	e12fff1e	 bx          lr
  00008		 |$M45540|

			 ENDP  ; |InitSystemControl|

	EXPORT	|InitOTGController|
	EXPORT	|??_C@_1EK@LOAOAFDM@?$AA?9?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAO?$AAT?$AAG?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@IADNEICF@?$AA?$CL?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAO?$AAT?$AAG?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl@| [ DATA ] ; `string'
	IMPORT	|OALPAtoVA|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|

  00000			 AREA	 |.pdata|, PDATA
|$T45557| DCD	|$LN12@InitOTGCon|
	DCD	0x40002401

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@LOAOAFDM@?$AA?9?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAO?$AAT?$AAG?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl@| DCB "-"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "F", 0x0, "N", 0x0, ":"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, " ", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, " ", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@IADNEICF@?$AA?$CL?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAO?$AAT?$AAG?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl@| DCB "+"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "F", 0x0, "N", 0x0, ":"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, " ", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, " ", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |InitOTGController| PROC

; 76   : {

  00000		 |$LN12@InitOTGCon|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M45554|

; 77   :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"+USBFN:: Initialize OTG Controller\r\n"));

  00004	e59f4080	 ldr         r4, [pc, #0x80]
  00008	e5943440	 ldr         r3, [r4, #0x440]
  0000c	e3130a02	 tst         r3, #2, 20
  00010	13130004	 tstne       r3, #4
  00014	159f006c	 ldrne       r0, [pc, #0x6C]
  00018	1b000000	 blne        NKDbgPrintfW

; 78   :     {
; 79   :         DWORD temp;
; 80   :         OMAP2420_OTG_REGS *pOTGRegs = OALPAtoUA(OMAP2420_OTG_REGS_PA);

  0001c	e59f0060	 ldr         r0, [pc, #0x60]
  00020	e3a01000	 mov         r1, #0
  00024	eb000000	 bl          OALPAtoVA

; 81   :     
; 82   :         // Reset all USB controllers
; 83   :         OUTREG32(&pOTGRegs->SYSCON_1, OTG_SYSCON_1_SOFT_RESET);    

  00028	e3a03002	 mov         r3, #2
  0002c	e5803004	 str         r3, [r0, #4]
  00030		 |$LL2@InitOTGCon|

; 84   :         
; 85   :         // Wait for the reset to complete.
; 86   :         while ((INREG32(&pOTGRegs->SYSCON_1) & OTG_SYSCON_1_RESET_DONE) == 0);

  00030	e5903004	 ldr         r3, [r0, #4]
  00034	e3130004	 tst         r3, #4
  00038	0afffffc	 beq         |$LL2@InitOTGCon|
  0003c	e3a03633	 mov         r3, #0x33, 12

; 87   :         
; 88   :         // Set USBx_TRX_MODE
; 89   :         // Note that the H4 System's two USB transceivers will only work in
; 90   :         // one of the three available transceiver modes. The USB OTG transceiver
; 91   :         // (ISP1301BS) will only work in the 3-pin bidirectional mode. The USB
; 92   :         // Device Transceiver will only work in the 6-pin unidirectional mode.
; 93   :         temp= (USBX_TRX_MODE << 24) | (USBX_TRX_MODE << 20) | (USBX_TRX_MODE << 16); 
; 94   :         OUTREG32(&pOTGRegs->SYSCON_1, temp);
; 95   :         {
; 96   :             temp = INREG32(&pOTGRegs->SYSCON_2);
; 97   :             OUTREG32(&pOTGRegs->SYSCON_2, 0x5B240080);      // USB_DET is not connect correctly, so try OTG for BSESSVLD

  00040	e59f2038	 ldr         r2, [pc, #0x38]
  00044	e3833803	 orr         r3, r3, #3, 16
  00048	e5803004	 str         r3, [r0, #4]
  0004c	e5903008	 ldr         r3, [r0, #8]
  00050	e5802008	 str         r2, [r0, #8]

; 98   :         
; 99   :             // We don't get any interrupts from the USB Device unless this bit
; 100  :             // is set. Unfortunately, setting this bit also sets the "USB
; 101  :             // Cable Attached" bit, which remains set regardless of whether or
; 102  :             // not a cable is actually attached, and thus prevents us from
; 103  :             // being able to properly tell when a USB cable is connected to or
; 104  :             // disconnected from the device.
; 105  :             // The OMAP2420 TRM suggest having an additional hardware mechanism
; 106  :             // that would allow the driver to detect when a cable is connected
; 107  :             // and then set the BSESSVLD bit as appropriate. The H4 System
; 108  :             // design lacks this feature, so we'll have to use a workaround in
; 109  :             // the USB Driver PDD to compensate for this.        
; 110  :             OUTREG32(&pOTGRegs->CTRL, OTG_CTRL_BSESSVLD);

  00054	e3a02701	 mov         r2, #1, 14
  00058	e580200c	 str         r2, [r0, #0xC]

; 111  :         }   
; 112  :     }
; 113  :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"-USBFN:: Initialize OTG Controller\r\n"));

  0005c	e5942440	 ldr         r2, [r4, #0x440]
  00060	e3120a02	 tst         r2, #2, 20
  00064	13120004	 tstne       r2, #4
  00068	159f000c	 ldrne       r0, [pc, #0xC]
  0006c	1b000000	 blne        NKDbgPrintfW

; 114  :     return TRUE;

  00070	e3a00001	 mov         r0, #1

; 115  : }

  00074	e8bd4010	 ldmia       sp!, {r4, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$LN13@InitOTGCon|
  0007c		 |$LN14@InitOTGCon|
  0007c	00000000	 DCD         |??_C@_1EK@LOAOAFDM@?$AA?9?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAO?$AAT?$AAG?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl@|
  00080		 |$LN15@InitOTGCon|
  00080	5b240080	 DCD         0x5b240080
  00084		 |$LN16@InitOTGCon|
  00084	4805e300	 DCD         0x4805e300
  00088		 |$LN17@InitOTGCon|
  00088	00000000	 DCD         |??_C@_1EK@IADNEICF@?$AA?$CL?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAO?$AAT?$AAG?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl@|
  0008c		 |$LN18@InitOTGCon|
  0008c	00000000	 DCD         |dpCurSettings|
  00090		 |$M45555|

			 ENDP  ; |InitOTGController|

	EXPORT	|InitClockController|
	EXPORT	|??_C@_1EI@EOBGBOHG@?$AA?9?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAM?$AAg@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@BMMPPLIM@?$AA?$CL?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAM?$AAg@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T45577| DCD	|$LN9@InitClockC|
	DCD	0x40001c01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@EOBGBOHG@?$AA?9?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAM?$AAg@| DCB "-"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "F", 0x0, "N", 0x0, ":"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, " ", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, " ", 0x0, "C"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " ", 0x0, "M"
	DCB	0x0, "g", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@BMMPPLIM@?$AA?$CL?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAM?$AAg@| DCB "+"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "F", 0x0, "N", 0x0, ":"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, " ", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, " ", 0x0, "C"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " ", 0x0, "M"
	DCB	0x0, "g", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |InitClockController| PROC

; 120  : {

  00000		 |$LN9@InitClockC|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M45574|

; 121  :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"+USBFN:: Initialize USB Clock Mgr\r\n"));

  00004	e59f4060	 ldr         r4, [pc, #0x60]
  00008	e5943440	 ldr         r3, [r4, #0x440]
  0000c	e3130a02	 tst         r3, #2, 20
  00010	13130004	 tstne       r3, #4
  00014	159f004c	 ldrne       r0, [pc, #0x4C]
  00018	1b000000	 blne        NKDbgPrintfW
  0001c	e3a03312	 mov         r3, #0x12, 6

; 122  :     {
; 123  :         OMAP2420_PRCM_REGS * pPRCMRegs = OALPAtoUA(OMAP2420_PRCM_REGS_PA);

  00020	e3830902	 orr         r0, r3, #2, 18
  00024	e3a01000	 mov         r1, #0
  00028	eb000000	 bl          OALPAtoVA

; 124  :         
; 125  : #if 0
; 126  :         // Disable the USB Interface clock
; 127  :         CLRREG32(&pPRCMRegs->ulCM_ICLKEN2_CORE,   0x00000001);    // Clear EN_USB
; 128  : #endif    
; 129  :         // Configure the USB Interface Clock Speed
; 130  :         CLRREG32(&pPRCMRegs->ulCM_CLKSEL1_CORE,   0x0E000000);    // Clear clk = L3_CLK/1 (boot mode only)

  0002c	e5903240	 ldr         r3, [r0, #0x240]
  00030	e3c3340e	 bic         r3, r3, #0xE, 8
  00034	e5803240	 str         r3, [r0, #0x240]

; 131  :         SETREG32(&pPRCMRegs->ulCM_CLKSEL1_CORE,   0x08000000);    // Set   clk = L3_CLK/3

  00038	e5903240	 ldr         r3, [r0, #0x240]
  0003c	e3833302	 orr         r3, r3, #2, 6
  00040	e5803240	 str         r3, [r0, #0x240]

; 132  :     
; 133  : #if 0    
; 134  :         // Ensure that the USB Interface clock remains active when the MPU enters Idle Mode.
; 135  :         CLRREG32(&pPRCMRegs->ulCM_AUTOIDLE2_CORE, 0x00000001);    // Clear AUTO_USB
; 136  :     
; 137  :         // Enable the USB Interface clock
; 138  :         SETREG32(&pPRCMRegs->ulCM_ICLKEN2_CORE,   0x00000001);    // Set   EN_USB
; 139  :     
; 140  :         // Enable the USB Functional clock
; 141  :         SETREG32(&pPRCMRegs->ulCM_FCLKEN2_CORE,   0x00000001);    // Set   EN_USB
; 142  :     
; 143  :         // Enable USB Wake-Up
; 144  :         SETREG32(&pPRCMRegs->ulPM_WKEN2_CORE,     0x00000001);    // Set   EN_USB
; 145  : #endif        
; 146  :     }
; 147  :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"-USBFN:: Initialize USB Clock Mgr\r\n"));

  00044	e5943440	 ldr         r3, [r4, #0x440]
  00048	e3130a02	 tst         r3, #2, 20
  0004c	13130004	 tstne       r3, #4
  00050	159f000c	 ldrne       r0, [pc, #0xC]
  00054	1b000000	 blne        NKDbgPrintfW

; 148  :     return TRUE;

  00058	e3a00001	 mov         r0, #1

; 149  : }

  0005c	e8bd4010	 ldmia       sp!, {r4, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$LN10@InitClockC|
  00064		 |$LN11@InitClockC|
  00064	00000000	 DCD         |??_C@_1EI@EOBGBOHG@?$AA?9?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAM?$AAg@|
  00068		 |$LN12@InitClockC|
  00068	00000000	 DCD         |??_C@_1EI@BMMPPLIM@?$AA?$CL?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAM?$AAg@|
  0006c		 |$LN13@InitClockC|
  0006c	00000000	 DCD         |dpCurSettings|
  00070		 |$M45575|

			 ENDP  ; |InitClockController|

	EXPORT	|InitializeHardware|
	EXPORT	|??_C@_1DO@GLBGAPLB@?$AA?9?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@GJKMECBD@?$AA?$CL?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T45597| DCD	|$LN11@Initialize|
	DCD	0x40001401

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@GLBGAPLB@?$AA?9?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "F", 0x0, "N", 0x0, ":"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, " ", 0x0, "H", 0x0, "a", 0x0, "r", 0x0, "d", 0x0, "w"
	DCB	0x0, "a", 0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@GJKMECBD@?$AA?$CL?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "F", 0x0, "N", 0x0, ":"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, " ", 0x0, "H", 0x0, "a", 0x0, "r", 0x0, "d", 0x0, "w"
	DCB	0x0, "a", 0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |InitializeHardware| PROC

; 154  : {

  00000		 |$LN11@Initialize|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M45594|

; 155  :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"+USBFN:: Initialize Hardware\r\n"));

  00004	e59f4040	 ldr         r4, [pc, #0x40]
  00008	e5943440	 ldr         r3, [r4, #0x440]
  0000c	e3130a02	 tst         r3, #2, 20
  00010	13130004	 tstne       r3, #4
  00014	159f002c	 ldrne       r0, [pc, #0x2C]
  00018	1b000000	 blne        NKDbgPrintfW

; 156  :     // Configure clock controller
; 157  :     InitClockController();

  0001c	eb000000	 bl          InitClockController

; 158  :     // Configure OTG controller
; 159  :     InitOTGController();

  00020	eb000000	 bl          InitOTGController

; 160  :     // Configure System
; 161  :     InitSystemControl();
; 162  :     // Done
; 163  :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"-USBFN:: Initialize Hardware\r\n"));

  00024	e5943440	 ldr         r3, [r4, #0x440]
  00028	e3130a02	 tst         r3, #2, 20
  0002c	13130004	 tstne       r3, #4
  00030	159f000c	 ldrne       r0, [pc, #0xC]
  00034	1b000000	 blne        NKDbgPrintfW

; 164  :     return TRUE;

  00038	e3a00001	 mov         r0, #1

; 165  : }

  0003c	e8bd4010	 ldmia       sp!, {r4, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$LN12@Initialize|
  00044		 |$LN13@Initialize|
  00044	00000000	 DCD         |??_C@_1DO@GLBGAPLB@?$AA?9?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  00048		 |$LN14@Initialize|
  00048	00000000	 DCD         |??_C@_1DO@GJKMECBD@?$AA?$CL?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  0004c		 |$LN15@Initialize|
  0004c	00000000	 DCD         |dpCurSettings|
  00050		 |$M45595|

			 ENDP  ; |InitializeHardware|

	EXPORT	|GetUniqueDeviceID|

  00000			 AREA	 |.pdata|, PDATA
|$T45610| DCD	|$LN5@GetUniqueD|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetUniqueDeviceID| PROC

; 170  : {

  00000		 |$LN5@GetUniqueD|
  00000		 |$M45607|

; 171  :     /* TODO : need to find unique silicon id
; 172  :     DWORD dwID0 = 0;
; 173  : 
; 174  :     OMAP2420_DEVICE_ID_REGS *pDeviceIDRegs = OALPAtoUA(OMAP2420_DEVICE_ID_REGS_PA);
; 175  : 
; 176  :     dwID0 = INREG32(&pDeviceIDRegs->OMAP_DIE_ID_0);
; 177  :     dwID1 = INREG32(&pDeviceIDRegs->OMAP_DIE_ID_1);
; 178  :     
; 179  :     return dwID0 ^ dwID1;
; 180  :     */
; 181  :     
; 182  :     return 0x0B5D902F;  // hardcoded id

  00000	e59f0000	 ldr         r0, [pc]

; 183  : }

  00004	e12fff1e	 bx          lr
  00008		 |$LN6@GetUniqueD|
  00008		 |$LN7@GetUniqueD|
  00008	0b5d902f	 DCD         0xb5d902f
  0000c		 |$M45608|

			 ENDP  ; |GetUniqueDeviceID|

	END
