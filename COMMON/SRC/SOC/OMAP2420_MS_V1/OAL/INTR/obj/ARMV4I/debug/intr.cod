; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\OMAP2420_MS_V1\OAL\INTR\intr.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|g_oalTimerIrq| [ DATA ]

  00000			 AREA	 |.bss|, NOINIT
|g_GPIO_LEVELDETECT1| % 0x10
|g_GPIO_RISINGDETECT| % 0x10

  00000			 AREA	 |.data|, DATA
|g_oalTimerIrq| DCD 0xffffffff
	%	4
|g_intcPriorityLevel| DCD 0x41
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
|g_GPIO_LEVELDETECT0| DCD 0x0
	DCD	0x0
	DCD	0x10000000
	DCD	0x0
|g_GPIO_FALLINGDETECT| DCD 0x840
	DCD	0x0
	DCD	0x23000000
	DCD	0x10000000

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|??_C@_1DK@JEFKKIKI@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@LJHDCJDG@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|OALIntrInit|
	IMPORT	|BSPIntrInit|
	IMPORT	|OEMInterruptEnable|
	IMPORT	|OALIntrStaticTranslate|
	IMPORT	|INTERRUPTS_ON|
	IMPORT	|OALPAtoVA|
	IMPORT	|OALIntrMapInit|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|

  00020			 AREA	 |.bss|, NOINIT
|g_pGPIORegs| %	0x10
|g_pIntcRegs| %	0x4

  00000			 AREA	 |.pdata|, PDATA
|$T45976| DCD	|$LN17@OALIntrIni|
	DCD	0x40010502
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\oal\intr\intr.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@JEFKKIKI@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, "r"
	DCB	0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@LJHDCJDG@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIntrInit| PROC

; 164  : {

  00000		 |$LN17@OALIntrIni|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd02c	 sub         sp, sp, #0x2C
  00008		 |$M45973|

; 165  :     BOOL rc = FALSE;

  00008	e3a03000	 mov         r3, #0
  0000c	e58d3000	 str         r3, [sp]

; 166  :     UINT32 i;
; 167  : 
; 168  :     OALMSG(OAL_INTR&&OAL_FUNC, (L"+OALInterruptInit\r\n"));

  00010	e59f33d8	 ldr         r3, [pc, #0x3D8]
  00014	e5933440	 ldr         r3, [r3, #0x440]
  00018	e3130901	 tst         r3, #1, 18
  0001c	0a000008	 beq         |$LN11@OALIntrIni|
  00020	e59f33c8	 ldr         r3, [pc, #0x3C8]
  00024	e5933440	 ldr         r3, [r3, #0x440]
  00028	e3130004	 tst         r3, #4
  0002c	0a000004	 beq         |$LN11@OALIntrIni|
  00030	e59f03d8	 ldr         r0, [pc, #0x3D8]
  00034	eb000000	 bl          NKDbgPrintfW
  00038	e3a03001	 mov         r3, #1
  0003c	e58d300c	 str         r3, [sp, #0xC]
  00040	ea000001	 b           |$LN12@OALIntrIni|
  00044		 |$LN11@OALIntrIni|
  00044	e3a03000	 mov         r3, #0
  00048	e58d300c	 str         r3, [sp, #0xC]
  0004c		 |$LN12@OALIntrIni|

; 169  : 
; 170  :     // Initialize interrupt mapping
; 171  :     OALIntrMapInit();

  0004c	eb000000	 bl          OALIntrMapInit

; 172  : 
; 173  :     // Get interrupt controller and GPIO registers' virtual uncached addresses
; 174  :     g_pIntcRegs = OALPAtoUA(OMAP2420_INTC_MPU_REGS_PA);

  00050	e3a01000	 mov         r1, #0
  00054	e3a00312	 mov         r0, #0x12, 6
  00058	e3800afe	 orr         r0, r0, #0xFE, 20
  0005c	eb000000	 bl          OALPAtoVA
  00060	e58d0010	 str         r0, [sp, #0x10]
  00064	e59d2010	 ldr         r2, [sp, #0x10]
  00068	e59f3384	 ldr         r3, [pc, #0x384]
  0006c	e5832000	 str         r2, [r3]

; 175  :     g_pGPIORegs[0] = OALPAtoUA(OMAP2420_GPIO1_REGS_PA);

  00070	e3a01000	 mov         r1, #0
  00074	e3a00312	 mov         r0, #0x12, 6
  00078	e3800906	 orr         r0, r0, #6, 18
  0007c	eb000000	 bl          OALPAtoVA
  00080	e58d0014	 str         r0, [sp, #0x14]
  00084	e59d2014	 ldr         r2, [sp, #0x14]
  00088	e59f336c	 ldr         r3, [pc, #0x36C]
  0008c	e5832000	 str         r2, [r3]

; 176  :     g_pGPIORegs[1] = OALPAtoUA(OMAP2420_GPIO2_REGS_PA);

  00090	e3a01000	 mov         r1, #0
  00094	e3a00312	 mov         r0, #0x12, 6
  00098	e3800a1a	 orr         r0, r0, #0x1A, 20
  0009c	eb000000	 bl          OALPAtoVA
  000a0	e58d0018	 str         r0, [sp, #0x18]
  000a4	e59d2018	 ldr         r2, [sp, #0x18]
  000a8	e59f334c	 ldr         r3, [pc, #0x34C]
  000ac	e5832004	 str         r2, [r3, #4]

; 177  :     g_pGPIORegs[2] = OALPAtoUA(OMAP2420_GPIO3_REGS_PA);

  000b0	e3a01000	 mov         r1, #0
  000b4	e3a00312	 mov         r0, #0x12, 6
  000b8	e3800907	 orr         r0, r0, #7, 18
  000bc	eb000000	 bl          OALPAtoVA
  000c0	e58d001c	 str         r0, [sp, #0x1C]
  000c4	e59d201c	 ldr         r2, [sp, #0x1C]
  000c8	e59f332c	 ldr         r3, [pc, #0x32C]
  000cc	e5832008	 str         r2, [r3, #8]

; 178  :     g_pGPIORegs[3] = OALPAtoUA(OMAP2420_GPIO4_REGS_PA);

  000d0	e3a01000	 mov         r1, #0
  000d4	e3a00312	 mov         r0, #0x12, 6
  000d8	e3800a1e	 orr         r0, r0, #0x1E, 20
  000dc	eb000000	 bl          OALPAtoVA
  000e0	e58d0020	 str         r0, [sp, #0x20]
  000e4	e59d2020	 ldr         r2, [sp, #0x20]
  000e8	e59f330c	 ldr         r3, [pc, #0x30C]
  000ec	e583200c	 str         r2, [r3, #0xC]

; 179  : 
; 180  :     //Reset the MPU INTC and wait until reset is complete
; 181  :     SETREG32(&g_pIntcRegs->ulINTC_SYSCONFIG, OMAP2420_MPUINTC_RESETBIT);

  000f0	e59f32fc	 ldr         r3, [pc, #0x2FC]
  000f4	e5933000	 ldr         r3, [r3]
  000f8	e2833010	 add         r3, r3, #0x10
  000fc	e5933000	 ldr         r3, [r3]
  00100	e3832002	 orr         r2, r3, #2
  00104	e59f32e8	 ldr         r3, [pc, #0x2E8]
  00108	e5933000	 ldr         r3, [r3]
  0010c	e2833010	 add         r3, r3, #0x10
  00110	e5832000	 str         r2, [r3]
  00114		 |$LN8@OALIntrIni|

; 182  :     while ((INREG32(&g_pIntcRegs->ulINTC_SYSSTATUS)& OMAP2420_MPUINTC_RESETSTATUS) == 0);

  00114	e59f32d8	 ldr         r3, [pc, #0x2D8]
  00118	e5933000	 ldr         r3, [r3]
  0011c	e2833014	 add         r3, r3, #0x14
  00120	e5933000	 ldr         r3, [r3]
  00124	e3130001	 tst         r3, #1
  00128	1a000000	 bne         |$LN7@OALIntrIni|
  0012c	eafffff8	 b           |$LN8@OALIntrIni|
  00130		 |$LN7@OALIntrIni|

; 183  : 
; 184  :     // Disable all interrupts and clear the ISR - for all for GPIO banks, too.
; 185  :     OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET0, OMAP2420_MPUINTC_MASKALL);

  00130	e59f32bc	 ldr         r3, [pc, #0x2BC]
  00134	e5933000	 ldr         r3, [r3]
  00138	e283208c	 add         r2, r3, #0x8C
  0013c	e3e03000	 mvn         r3, #0
  00140	e5823000	 str         r3, [r2]

; 186  :     OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET1, OMAP2420_MPUINTC_MASKALL);

  00144	e59f32a8	 ldr         r3, [pc, #0x2A8]
  00148	e5933000	 ldr         r3, [r3]
  0014c	e28320ac	 add         r2, r3, #0xAC
  00150	e3e03000	 mvn         r3, #0
  00154	e5823000	 str         r3, [r2]

; 187  :     OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET2, OMAP2420_MPUINTC_MASKALL);

  00158	e59f3294	 ldr         r3, [pc, #0x294]
  0015c	e5933000	 ldr         r3, [r3]
  00160	e28320cc	 add         r2, r3, #0xCC
  00164	e3e03000	 mvn         r3, #0
  00168	e5823000	 str         r3, [r2]

; 188  : 
; 189  :     for (i = 0; i < 4; i++) {

  0016c	e3a03000	 mov         r3, #0
  00170	e58d3004	 str         r3, [sp, #4]
  00174	ea000002	 b           |$LN6@OALIntrIni|
  00178		 |$LN5@OALIntrIni|
  00178	e59d3004	 ldr         r3, [sp, #4]
  0017c	e2833001	 add         r3, r3, #1
  00180	e58d3004	 str         r3, [sp, #4]
  00184		 |$LN6@OALIntrIni|
  00184	e59d3004	 ldr         r3, [sp, #4]
  00188	e3530004	 cmp         r3, #4
  0018c	2a00005c	 bcs         |$LN4@OALIntrIni|

; 190  :         OUTREG32(&g_pGPIORegs[i]->ulGPIO_CLEARIRQENABLE1, 0xFFFFFFFF);

  00190	e59d1004	 ldr         r1, [sp, #4]
  00194	e3a03004	 mov         r3, #4
  00198	e0020391	 mul         r2, r1, r3
  0019c	e59f3258	 ldr         r3, [pc, #0x258]
  001a0	e0833002	 add         r3, r3, r2
  001a4	e5933000	 ldr         r3, [r3]
  001a8	e2832060	 add         r2, r3, #0x60
  001ac	e3e03000	 mvn         r3, #0
  001b0	e5823000	 str         r3, [r2]

; 191  :         OUTREG32(&g_pGPIORegs[i]->ulGPIO_CLEARIRQENABLE2, 0xFFFFFFFF);

  001b4	e59d1004	 ldr         r1, [sp, #4]
  001b8	e3a03004	 mov         r3, #4
  001bc	e0020391	 mul         r2, r1, r3
  001c0	e59f3234	 ldr         r3, [pc, #0x234]
  001c4	e0833002	 add         r3, r3, r2
  001c8	e5933000	 ldr         r3, [r3]
  001cc	e2832070	 add         r2, r3, #0x70
  001d0	e3e03000	 mvn         r3, #0
  001d4	e5823000	 str         r3, [r2]

; 192  : 		OUTREG32(&g_pGPIORegs[i]->ulGPIO_IRQSTATUS1, 0xFFFFFFFF);     

  001d8	e59d1004	 ldr         r1, [sp, #4]
  001dc	e3a03004	 mov         r3, #4
  001e0	e0020391	 mul         r2, r1, r3
  001e4	e59f3210	 ldr         r3, [pc, #0x210]
  001e8	e0833002	 add         r3, r3, r2
  001ec	e5933000	 ldr         r3, [r3]
  001f0	e2832018	 add         r2, r3, #0x18
  001f4	e3e03000	 mvn         r3, #0
  001f8	e5823000	 str         r3, [r2]

; 193  : 		OUTREG32(&g_pGPIORegs[i]->ulGPIO_IRQSTATUS2, 0xFFFFFFFF);    

  001fc	e59d1004	 ldr         r1, [sp, #4]
  00200	e3a03004	 mov         r3, #4
  00204	e0020391	 mul         r2, r1, r3
  00208	e59f31ec	 ldr         r3, [pc, #0x1EC]
  0020c	e0833002	 add         r3, r3, r2
  00210	e5933000	 ldr         r3, [r3]
  00214	e2832028	 add         r2, r3, #0x28
  00218	e3e03000	 mvn         r3, #0
  0021c	e5823000	 str         r3, [r2]

; 194  :         OUTREG32(&g_pGPIORegs[i]->ulGPIO_LEVELDETECT0, g_GPIO_LEVELDETECT0[i]);

  00220	e59d1004	 ldr         r1, [sp, #4]
  00224	e3a03004	 mov         r3, #4
  00228	e0020391	 mul         r2, r1, r3
  0022c	e59f31d8	 ldr         r3, [pc, #0x1D8]
  00230	e0830002	 add         r0, r3, r2
  00234	e59d1004	 ldr         r1, [sp, #4]
  00238	e3a03004	 mov         r3, #4
  0023c	e0020391	 mul         r2, r1, r3
  00240	e59f31b4	 ldr         r3, [pc, #0x1B4]
  00244	e0833002	 add         r3, r3, r2
  00248	e5933000	 ldr         r3, [r3]
  0024c	e2832040	 add         r2, r3, #0x40
  00250	e5903000	 ldr         r3, [r0]
  00254	e5823000	 str         r3, [r2]

; 195  :         OUTREG32(&g_pGPIORegs[i]->ulGPIO_LEVELDETECT1, g_GPIO_LEVELDETECT1[i]);

  00258	e59d1004	 ldr         r1, [sp, #4]
  0025c	e3a03004	 mov         r3, #4
  00260	e0020391	 mul         r2, r1, r3
  00264	e59f319c	 ldr         r3, [pc, #0x19C]
  00268	e0830002	 add         r0, r3, r2
  0026c	e59d1004	 ldr         r1, [sp, #4]
  00270	e3a03004	 mov         r3, #4
  00274	e0020391	 mul         r2, r1, r3
  00278	e59f317c	 ldr         r3, [pc, #0x17C]
  0027c	e0833002	 add         r3, r3, r2
  00280	e5933000	 ldr         r3, [r3]
  00284	e2832044	 add         r2, r3, #0x44
  00288	e5903000	 ldr         r3, [r0]
  0028c	e5823000	 str         r3, [r2]

; 196  : 		OUTREG32(&g_pGPIORegs[i]->ulGPIO_RISINGDETECT, g_GPIO_RISINGDETECT[i]);     

  00290	e59d1004	 ldr         r1, [sp, #4]
  00294	e3a03004	 mov         r3, #4
  00298	e0020391	 mul         r2, r1, r3
  0029c	e59f3160	 ldr         r3, [pc, #0x160]
  002a0	e0830002	 add         r0, r3, r2
  002a4	e59d1004	 ldr         r1, [sp, #4]
  002a8	e3a03004	 mov         r3, #4
  002ac	e0020391	 mul         r2, r1, r3
  002b0	e59f3144	 ldr         r3, [pc, #0x144]
  002b4	e0833002	 add         r3, r3, r2
  002b8	e5933000	 ldr         r3, [r3]
  002bc	e2832048	 add         r2, r3, #0x48
  002c0	e5903000	 ldr         r3, [r0]
  002c4	e5823000	 str         r3, [r2]

; 197  : 		OUTREG32(&g_pGPIORegs[i]->ulGPIO_FALLINGDETECT, g_GPIO_FALLINGDETECT[i]);    

  002c8	e59d1004	 ldr         r1, [sp, #4]
  002cc	e3a03004	 mov         r3, #4
  002d0	e0020391	 mul         r2, r1, r3
  002d4	e59f3124	 ldr         r3, [pc, #0x124]
  002d8	e0830002	 add         r0, r3, r2
  002dc	e59d1004	 ldr         r1, [sp, #4]
  002e0	e3a03004	 mov         r3, #4
  002e4	e0020391	 mul         r2, r1, r3
  002e8	e59f310c	 ldr         r3, [pc, #0x10C]
  002ec	e0833002	 add         r3, r3, r2
  002f0	e5933000	 ldr         r3, [r3]
  002f4	e283204c	 add         r2, r3, #0x4C
  002f8	e5903000	 ldr         r3, [r0]
  002fc	e5823000	 str         r3, [r2]

; 198  :     }

  00300	eaffff9c	 b           |$LN5@OALIntrIni|
  00304		 |$LN4@OALIntrIni|

; 199  : 
; 200  :     // Initialize interrupt routing and priority
; 201  :     for (i = 0; i < 96; i++) {

  00304	e3a03000	 mov         r3, #0
  00308	e58d3004	 str         r3, [sp, #4]
  0030c	ea000002	 b           |$LN3@OALIntrIni|
  00310		 |$LN2@OALIntrIni|
  00310	e59d3004	 ldr         r3, [sp, #4]
  00314	e2833001	 add         r3, r3, #1
  00318	e58d3004	 str         r3, [sp, #4]
  0031c		 |$LN3@OALIntrIni|
  0031c	e59d3004	 ldr         r3, [sp, #4]
  00320	e3530060	 cmp         r3, #0x60
  00324	2a00000e	 bcs         |$LN1@OALIntrIni|

; 202  :         OUTREG32(&g_pIntcRegs->ulINTC_ILR[i], g_intcPriorityLevel[i]);

  00328	e59d1004	 ldr         r1, [sp, #4]
  0032c	e3a03004	 mov         r3, #4
  00330	e0020391	 mul         r2, r1, r3
  00334	e59f30bc	 ldr         r3, [pc, #0xBC]
  00338	e0830002	 add         r0, r3, r2
  0033c	e59f30b0	 ldr         r3, [pc, #0xB0]
  00340	e5933000	 ldr         r3, [r3]
  00344	e2831c01	 add         r1, r3, #1, 24
  00348	e59d2004	 ldr         r2, [sp, #4]
  0034c	e3a03004	 mov         r3, #4
  00350	e0030392	 mul         r3, r2, r3
  00354	e0812003	 add         r2, r1, r3
  00358	e5903000	 ldr         r3, [r0]
  0035c	e5823000	 str         r3, [r2]

; 203  :     }

  00360	eaffffea	 b           |$LN2@OALIntrIni|
  00364		 |$LN1@OALIntrIni|

; 204  : 
; 205  :     // Allow interrupts 
; 206  :     INTERRUPTS_ON();

  00364	eb000000	 bl          INTERRUPTS_ON

; 207  : 
; 208  :     //  Allocate SYSINTR_RESCHED to a timer for the system tick
; 209  :     OALIntrStaticTranslate( SYSINTR_RESCHED, IRQ_GPT1 );

  00368	e3a01025	 mov         r1, #0x25
  0036c	e3a00001	 mov         r0, #1
  00370	eb000000	 bl          OALIntrStaticTranslate

; 210  :     OEMInterruptEnable( SYSINTR_RESCHED, NULL, 0 );

  00374	e3a02000	 mov         r2, #0
  00378	e3a01000	 mov         r1, #0
  0037c	e3a00001	 mov         r0, #1
  00380	eb000000	 bl          OEMInterruptEnable

; 211  : 
; 212  :     // Call board specific initialization
; 213  :     rc = BSPIntrInit();

  00384	eb000000	 bl          BSPIntrInit
  00388	e58d0024	 str         r0, [sp, #0x24]
  0038c	e59d3024	 ldr         r3, [sp, #0x24]
  00390	e58d3000	 str         r3, [sp]

; 214  : 
; 215  : 
; 216  :     OALMSG(OAL_INTR&&OAL_FUNC, (L"-OALInterruptInit(rc = %d)\r\n", rc));

  00394	e59f3054	 ldr         r3, [pc, #0x54]
  00398	e5933440	 ldr         r3, [r3, #0x440]
  0039c	e3130901	 tst         r3, #1, 18
  003a0	0a000009	 beq         |$LN13@OALIntrIni|
  003a4	e59f3044	 ldr         r3, [pc, #0x44]
  003a8	e5933440	 ldr         r3, [r3, #0x440]
  003ac	e3130004	 tst         r3, #4
  003b0	0a000005	 beq         |$LN13@OALIntrIni|
  003b4	e59d1000	 ldr         r1, [sp]
  003b8	e59f002c	 ldr         r0, [pc, #0x2C]
  003bc	eb000000	 bl          NKDbgPrintfW
  003c0	e3a03001	 mov         r3, #1
  003c4	e58d3028	 str         r3, [sp, #0x28]
  003c8	ea000001	 b           |$LN14@OALIntrIni|
  003cc		 |$LN13@OALIntrIni|
  003cc	e3a03000	 mov         r3, #0
  003d0	e58d3028	 str         r3, [sp, #0x28]
  003d4		 |$LN14@OALIntrIni|

; 217  :     return rc;

  003d4	e59d3000	 ldr         r3, [sp]
  003d8	e58d3008	 str         r3, [sp, #8]

; 218  : }

  003dc	e59d0008	 ldr         r0, [sp, #8]
  003e0	e28dd02c	 add         sp, sp, #0x2C
  003e4	e49de004	 ldr         lr, [sp], #4
  003e8	e12fff1e	 bx          lr
  003ec		 |$LN18@OALIntrIni|
  003ec		 |$LN19@OALIntrIni|
  003ec	00000000	 DCD         |??_C@_1DK@JEFKKIKI@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  003f0		 |$LN20@OALIntrIni|
  003f0	00000000	 DCD         |dpCurSettings|
  003f4		 |$LN21@OALIntrIni|
  003f4	00000000	 DCD         |g_pIntcRegs|
  003f8		 |$LN22@OALIntrIni|
  003f8	00000000	 DCD         |g_intcPriorityLevel|
  003fc		 |$LN23@OALIntrIni|
  003fc	00000000	 DCD         |g_pGPIORegs|
  00400		 |$LN24@OALIntrIni|
  00400	00000000	 DCD         |g_GPIO_FALLINGDETECT|
  00404		 |$LN25@OALIntrIni|
  00404	00000000	 DCD         |g_GPIO_RISINGDETECT|
  00408		 |$LN26@OALIntrIni|
  00408	00000000	 DCD         |g_GPIO_LEVELDETECT1|
  0040c		 |$LN27@OALIntrIni|
  0040c	00000000	 DCD         |g_GPIO_LEVELDETECT0|
  00410		 |$LN28@OALIntrIni|
  00410	00000000	 DCD         |??_C@_1CI@LJHDCJDG@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  00414		 |$M45974|

			 ENDP  ; |OALIntrInit|

	EXPORT	|??_C@_1DO@NDIEKHNP@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@EBPJKEJJ@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?9?$AA?$DO?$AA?$CF?$AAd?$AA?1?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|OALIntrRequestIrqs|
	IMPORT	|BSPIntrRequestIrqs|

  00008			 AREA	 |.pdata|, PDATA
|$T46001| DCD	|$LN11@OALIntrReq|
	DCD	0x40004f04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@NDIEKHNP@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s"
	DCB	0x0, "(", 0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@EBPJKEJJ@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?9?$AA?$DO?$AA?$CF?$AAd?$AA?1?$AA?$CF@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s"
	DCB	0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, "-", 0x0, ">", 0x0, "%", 0x0, "d", 0x0, "/"
	DCB	0x0, "%", 0x0, "d", 0x0, "/", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, "/", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  00414			 AREA	 |.text|, CODE, ARM

  00414		 |OALIntrRequestIrqs| PROC

; 228  : {

  00414		 |$LN11@OALIntrReq|
  00414	e1a0c00d	 mov         r12, sp
  00418	e92d0007	 stmdb       sp!, {r0 - r2}
  0041c	e92d5000	 stmdb       sp!, {r12, lr}
  00420	e24dd034	 sub         sp, sp, #0x34
  00424		 |$M45998|

; 229  :     BOOL rc = FALSE;

  00424	e3a03000	 mov         r3, #0
  00428	e58d3010	 str         r3, [sp, #0x10]

; 230  : 
; 231  :     OALMSG(OAL_INTR&&OAL_FUNC, (
; 232  :         L"+OALIntrRequestIrqs(0x%08x->%d/%d/0x%08x/%d, 0x%08x, 0x%08x)\r\n",
; 233  :         pDevLoc, pDevLoc->IfcType, pDevLoc->BusNumber, pDevLoc->LogicalLoc,
; 234  :         pDevLoc->Pin, pCount, pIrqs
; 235  :     ));

  0042c	e59f3114	 ldr         r3, [pc, #0x114]
  00430	e5933440	 ldr         r3, [r3, #0x440]
  00434	e3130901	 tst         r3, #1, 18
  00438	0a00001a	 beq         |$LN5@OALIntrReq|
  0043c	e59f3104	 ldr         r3, [pc, #0x104]
  00440	e5933440	 ldr         r3, [r3, #0x440]
  00444	e3130004	 tst         r3, #4
  00448	0a000016	 beq         |$LN5@OALIntrReq|
  0044c	e59d3044	 ldr         r3, [sp, #0x44]
  00450	e58d300c	 str         r3, [sp, #0xC]
  00454	e59d3040	 ldr         r3, [sp, #0x40]
  00458	e58d3008	 str         r3, [sp, #8]
  0045c	e59d303c	 ldr         r3, [sp, #0x3C]
  00460	e2833010	 add         r3, r3, #0x10
  00464	e5933000	 ldr         r3, [r3]
  00468	e58d3004	 str         r3, [sp, #4]
  0046c	e59d303c	 ldr         r3, [sp, #0x3C]
  00470	e2833008	 add         r3, r3, #8
  00474	e5933000	 ldr         r3, [r3]
  00478	e58d3000	 str         r3, [sp]
  0047c	e59d303c	 ldr         r3, [sp, #0x3C]
  00480	e2833004	 add         r3, r3, #4
  00484	e5933000	 ldr         r3, [r3]
  00488	e59d203c	 ldr         r2, [sp, #0x3C]
  0048c	e5922000	 ldr         r2, [r2]
  00490	e59d103c	 ldr         r1, [sp, #0x3C]
  00494	e59f00b0	 ldr         r0, [pc, #0xB0]
  00498	eb000000	 bl          NKDbgPrintfW
  0049c	e3a03001	 mov         r3, #1
  004a0	e58d3028	 str         r3, [sp, #0x28]
  004a4	ea000001	 b           |$LN6@OALIntrReq|
  004a8		 |$LN5@OALIntrReq|
  004a8	e3a03000	 mov         r3, #0
  004ac	e58d3028	 str         r3, [sp, #0x28]
  004b0		 |$LN6@OALIntrReq|

; 236  : 
; 237  :     // This shouldn't happen
; 238  :     if (*pCount < 1) goto cleanUp;

  004b0	e59d3040	 ldr         r3, [sp, #0x40]
  004b4	e5933000	 ldr         r3, [r3]
  004b8	e3530001	 cmp         r3, #1
  004bc	2a000000	 bcs         |$LN2@OALIntrReq|
  004c0	ea000009	 b           |$cleanUp$45597|
  004c4		 |$LN2@OALIntrReq|

; 239  : #if 0
; 240  :     switch (pDevLoc->IfcType) {
; 241  :     case Internal:
; 242  :         switch ((ULONG)pDevLoc->LogicalLoc) {
; 243  :         case OMAP2420_USBD_REGS_PA:
; 244  :             *pCount = 1;
; 245  :             pIrqs[0] = IRQ_USB_GENI;
; 246  :             rc = TRUE;
; 247  :             break;
; 248  :         }
; 249  :         break;
; 250  :     }
; 251  : #endif            
; 252  : #ifdef OAL_BSP_CALLBACKS
; 253  :     if (!rc) rc = BSPIntrRequestIrqs(pDevLoc, pCount, pIrqs);

  004c4	e59d3010	 ldr         r3, [sp, #0x10]
  004c8	e3530000	 cmp         r3, #0
  004cc	1a000006	 bne         |$LN1@OALIntrReq|
  004d0	e59d2044	 ldr         r2, [sp, #0x44]
  004d4	e59d1040	 ldr         r1, [sp, #0x40]
  004d8	e59d003c	 ldr         r0, [sp, #0x3C]
  004dc	eb000000	 bl          BSPIntrRequestIrqs
  004e0	e58d002c	 str         r0, [sp, #0x2C]
  004e4	e59d302c	 ldr         r3, [sp, #0x2C]
  004e8	e58d3010	 str         r3, [sp, #0x10]
  004ec		 |$LN1@OALIntrReq|
  004ec		 |$cleanUp$45597|

; 254  : #endif
; 255  : 
; 256  : cleanUp:
; 257  :     OALMSG(OAL_INTR&&OAL_FUNC, (L"-OALIntrRequestIrqs(rc = %d)\r\n", rc));

  004ec	e59f3054	 ldr         r3, [pc, #0x54]
  004f0	e5933440	 ldr         r3, [r3, #0x440]
  004f4	e3130901	 tst         r3, #1, 18
  004f8	0a000009	 beq         |$LN7@OALIntrReq|
  004fc	e59f3044	 ldr         r3, [pc, #0x44]
  00500	e5933440	 ldr         r3, [r3, #0x440]
  00504	e3130004	 tst         r3, #4
  00508	0a000005	 beq         |$LN7@OALIntrReq|
  0050c	e59d1010	 ldr         r1, [sp, #0x10]
  00510	e59f002c	 ldr         r0, [pc, #0x2C]
  00514	eb000000	 bl          NKDbgPrintfW
  00518	e3a03001	 mov         r3, #1
  0051c	e58d3030	 str         r3, [sp, #0x30]
  00520	ea000001	 b           |$LN8@OALIntrReq|
  00524		 |$LN7@OALIntrReq|
  00524	e3a03000	 mov         r3, #0
  00528	e58d3030	 str         r3, [sp, #0x30]
  0052c		 |$LN8@OALIntrReq|

; 258  :     return rc;

  0052c	e59d3010	 ldr         r3, [sp, #0x10]
  00530	e58d3024	 str         r3, [sp, #0x24]

; 259  : }

  00534	e59d0024	 ldr         r0, [sp, #0x24]
  00538	e28dd034	 add         sp, sp, #0x34
  0053c	e89d6000	 ldmia       sp, {sp, lr}
  00540	e12fff1e	 bx          lr
  00544		 |$LN12@OALIntrReq|
  00544		 |$LN13@OALIntrReq|
  00544	00000000	 DCD         |??_C@_1DO@NDIEKHNP@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00548		 |$LN14@OALIntrReq|
  00548	00000000	 DCD         |dpCurSettings|
  0054c		 |$LN15@OALIntrReq|
  0054c	00000000	 DCD         |??_C@_1HO@EBPJKEJJ@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?9?$AA?$DO?$AA?$CF?$AAd?$AA?1?$AA?$CF@|
  00550		 |$M45999|

			 ENDP  ; |OALIntrRequestIrqs|

	EXPORT	|??_C@_1DM@INNHDHDJ@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@DLCPCDNN@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@MGNGNLKI@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@GILOEKDJ@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@EBHGPOML@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@MDFPIGAB@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|OALIntrEnableIrqs|

  00010			 AREA	 |.pdata|, PDATA
|$T46023| DCD	|$LN35@OALIntrEna|
	DCD	0x40011804

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@INNHDHDJ@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s", 0x0, "("
	DCB	0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@DLCPCDNN@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s", 0x0, "(", 0x0, "I"
	DCB	0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G", 0x0, "P", 0x0, "I"
	DCB	0x0, "O", 0x0, "4", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@MGNGNLKI@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s", 0x0, "(", 0x0, "I"
	DCB	0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G", 0x0, "P", 0x0, "I"
	DCB	0x0, "O", 0x0, "3", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@GILOEKDJ@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s", 0x0, "(", 0x0, "I"
	DCB	0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G", 0x0, "P", 0x0, "I"
	DCB	0x0, "O", 0x0, "2", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@EBHGPOML@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s", 0x0, "(", 0x0, "I"
	DCB	0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G", 0x0, "P", 0x0, "I"
	DCB	0x0, "O", 0x0, "1", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@MDFPIGAB@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s", 0x0, "("
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  00550			 AREA	 |.text|, CODE, ARM

  00550		 |OALIntrEnableIrqs| PROC

; 266  : {

  00550		 |$LN35@OALIntrEna|
  00550	e1a0c00d	 mov         r12, sp
  00554	e92d0003	 stmdb       sp!, {r0, r1}
  00558	e92d5000	 stmdb       sp!, {r12, lr}
  0055c	e24dd028	 sub         sp, sp, #0x28
  00560		 |$M46020|

; 267  :     BOOL rc = TRUE;

  00560	e3a03001	 mov         r3, #1
  00564	e58d3000	 str         r3, [sp]

; 268  :     UINT32 irq, i;
; 269  : 
; 270  :     OALMSG(OAL_INTR, (L"+OALIntrEnableIrqs(%d, 0x%08x)\r\n", count, pIrqs));

  00568	e59f3420	 ldr         r3, [pc, #0x420]
  0056c	e5933440	 ldr         r3, [r3, #0x440]
  00570	e3130901	 tst         r3, #1, 18
  00574	0a000006	 beq         |$LN21@OALIntrEna|
  00578	e59d2034	 ldr         r2, [sp, #0x34]
  0057c	e59d1030	 ldr         r1, [sp, #0x30]
  00580	e59f0424	 ldr         r0, [pc, #0x424]
  00584	eb000000	 bl          NKDbgPrintfW
  00588	e3a03001	 mov         r3, #1
  0058c	e58d3010	 str         r3, [sp, #0x10]
  00590	ea000001	 b           |$LN22@OALIntrEna|
  00594		 |$LN21@OALIntrEna|
  00594	e3a03000	 mov         r3, #0
  00598	e58d3010	 str         r3, [sp, #0x10]
  0059c		 |$LN22@OALIntrEna|

; 271  : 
; 272  :     for (i = 0; i < count; i++) {

  0059c	e3a03000	 mov         r3, #0
  005a0	e58d3004	 str         r3, [sp, #4]
  005a4	ea000002	 b           |$LN18@OALIntrEna|
  005a8		 |$LN17@OALIntrEna|
  005a8	e59d3004	 ldr         r3, [sp, #4]
  005ac	e2833001	 add         r3, r3, #1
  005b0	e58d3004	 str         r3, [sp, #4]
  005b4		 |$LN18@OALIntrEna|
  005b4	e59d2004	 ldr         r2, [sp, #4]
  005b8	e59d3030	 ldr         r3, [sp, #0x30]
  005bc	e1520003	 cmp         r2, r3
  005c0	2a0000db	 bcs         |$LN16@OALIntrEna|

; 273  :         irq = pIrqs[i];

  005c4	e59d1004	 ldr         r1, [sp, #4]
  005c8	e3a03004	 mov         r3, #4
  005cc	e0020391	 mul         r2, r1, r3
  005d0	e59d3034	 ldr         r3, [sp, #0x34]
  005d4	e0833002	 add         r3, r3, r2
  005d8	e5933000	 ldr         r3, [r3]
  005dc	e58d3008	 str         r3, [sp, #8]

; 274  :         if (irq < 32) {

  005e0	e59d3008	 ldr         r3, [sp, #8]
  005e4	e3530020	 cmp         r3, #0x20
  005e8	2a000007	 bcs         |$LN15@OALIntrEna|

; 275  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR0, 1 << irq);

  005ec	e59d2008	 ldr         r2, [sp, #8]
  005f0	e3a03001	 mov         r3, #1
  005f4	e1a02213	 mov         r2, r3, lsl r2
  005f8	e59f3398	 ldr         r3, [pc, #0x398]
  005fc	e5933000	 ldr         r3, [r3]
  00600	e2833088	 add         r3, r3, #0x88
  00604	e5832000	 str         r2, [r3]
  00608	ea0000c8	 b           |$LN14@OALIntrEna|
  0060c		 |$LN15@OALIntrEna|

; 276  :         } else if (irq < 64) {

  0060c	e59d3008	 ldr         r3, [sp, #8]
  00610	e3530040	 cmp         r3, #0x40
  00614	2a000008	 bcs         |$LN13@OALIntrEna|

; 277  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR1, 1 << (irq - 32));

  00618	e59d3008	 ldr         r3, [sp, #8]
  0061c	e2432020	 sub         r2, r3, #0x20
  00620	e3a03001	 mov         r3, #1
  00624	e1a02213	 mov         r2, r3, lsl r2
  00628	e59f3368	 ldr         r3, [pc, #0x368]
  0062c	e5933000	 ldr         r3, [r3]
  00630	e28330a8	 add         r3, r3, #0xA8
  00634	e5832000	 str         r2, [r3]
  00638	ea0000bc	 b           |$LN12@OALIntrEna|
  0063c		 |$LN13@OALIntrEna|

; 278  :         } else if (irq < 96) {

  0063c	e59d3008	 ldr         r3, [sp, #8]
  00640	e3530060	 cmp         r3, #0x60
  00644	2a000008	 bcs         |$LN11@OALIntrEna|

; 279  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR2, 1 << (irq - 64));

  00648	e59d3008	 ldr         r3, [sp, #8]
  0064c	e2432040	 sub         r2, r3, #0x40
  00650	e3a03001	 mov         r3, #1
  00654	e1a02213	 mov         r2, r3, lsl r2
  00658	e59f3338	 ldr         r3, [pc, #0x338]
  0065c	e5933000	 ldr         r3, [r3]
  00660	e28330c8	 add         r3, r3, #0xC8
  00664	e5832000	 str         r2, [r3]
  00668	ea0000b0	 b           |$LN10@OALIntrEna|
  0066c		 |$LN11@OALIntrEna|

; 280  : 		} else if (irq < IRQ_GPIO_32) {

  0066c	e59d3008	 ldr         r3, [sp, #8]
  00670	e35300c0	 cmp         r3, #0xC0
  00674	2a000027	 bcs         |$LN9@OALIntrEna|

; 281  : 			OALMSG(OAL_INTR, (L"OALIntrEnableIrqs(Irq GPIO1 %d)\r\n", irq - IRQ_GPIO_0));

  00678	e59f3310	 ldr         r3, [pc, #0x310]
  0067c	e5933440	 ldr         r3, [r3, #0x440]
  00680	e3130901	 tst         r3, #1, 18
  00684	0a000006	 beq         |$LN23@OALIntrEna|
  00688	e59d3008	 ldr         r3, [sp, #8]
  0068c	e24310a0	 sub         r1, r3, #0xA0
  00690	e59f0310	 ldr         r0, [pc, #0x310]
  00694	eb000000	 bl          NKDbgPrintfW
  00698	e3a03001	 mov         r3, #1
  0069c	e58d3014	 str         r3, [sp, #0x14]
  006a0	ea000001	 b           |$LN24@OALIntrEna|
  006a4		 |$LN23@OALIntrEna|
  006a4	e3a03000	 mov         r3, #0
  006a8	e58d3014	 str         r3, [sp, #0x14]
  006ac		 |$LN24@OALIntrEna|

; 282  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR0, 1 << IRQ_GPIO1_MPU);

  006ac	e59f32e4	 ldr         r3, [pc, #0x2E4]
  006b0	e5933000	 ldr         r3, [r3]
  006b4	e2832088	 add         r2, r3, #0x88
  006b8	e3a03202	 mov         r3, #2, 4
  006bc	e5823000	 str         r3, [r2]

; 283  : 			OUTREG32(&g_pGPIORegs[0]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_0));  // clear IRQ

  006c0	e59d3008	 ldr         r3, [sp, #8]
  006c4	e24320a0	 sub         r2, r3, #0xA0
  006c8	e3a03001	 mov         r3, #1
  006cc	e1a02213	 mov         r2, r3, lsl r2
  006d0	e59f32bc	 ldr         r3, [pc, #0x2BC]
  006d4	e5933000	 ldr         r3, [r3]
  006d8	e2833018	 add         r3, r3, #0x18
  006dc	e5832000	 str         r2, [r3]

; 284  : 			SETREG32(&g_pGPIORegs[0]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_0));  // unmask IRQ

  006e0	e59f32ac	 ldr         r3, [pc, #0x2AC]
  006e4	e5933000	 ldr         r3, [r3]
  006e8	e283101c	 add         r1, r3, #0x1C
  006ec	e59d3008	 ldr         r3, [sp, #8]
  006f0	e24320a0	 sub         r2, r3, #0xA0
  006f4	e3a03001	 mov         r3, #1
  006f8	e1a02213	 mov         r2, r3, lsl r2
  006fc	e5913000	 ldr         r3, [r1]
  00700	e1832002	 orr         r2, r3, r2
  00704	e59f3288	 ldr         r3, [pc, #0x288]
  00708	e5933000	 ldr         r3, [r3]
  0070c	e283301c	 add         r3, r3, #0x1C
  00710	e5832000	 str         r2, [r3]
  00714	ea000085	 b           |$LN8@OALIntrEna|
  00718		 |$LN9@OALIntrEna|

; 285  :         } else if (irq < IRQ_GPIO_64) {

  00718	e59d3008	 ldr         r3, [sp, #8]
  0071c	e35300e0	 cmp         r3, #0xE0
  00720	2a000027	 bcs         |$LN7@OALIntrEna|

; 286  : 			OALMSG(OAL_INTR, (L"OALIntrEnableIrqs(Irq GPIO2 %d)\r\n", irq - IRQ_GPIO_32));

  00724	e59f3264	 ldr         r3, [pc, #0x264]
  00728	e5933440	 ldr         r3, [r3, #0x440]
  0072c	e3130901	 tst         r3, #1, 18
  00730	0a000006	 beq         |$LN25@OALIntrEna|
  00734	e59d3008	 ldr         r3, [sp, #8]
  00738	e24310c0	 sub         r1, r3, #0xC0
  0073c	e59f0260	 ldr         r0, [pc, #0x260]
  00740	eb000000	 bl          NKDbgPrintfW
  00744	e3a03001	 mov         r3, #1
  00748	e58d3018	 str         r3, [sp, #0x18]
  0074c	ea000001	 b           |$LN26@OALIntrEna|
  00750		 |$LN25@OALIntrEna|
  00750	e3a03000	 mov         r3, #0
  00754	e58d3018	 str         r3, [sp, #0x18]
  00758		 |$LN26@OALIntrEna|

; 287  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR0, 1 << IRQ_GPIO2_MPU);

  00758	e59f3238	 ldr         r3, [pc, #0x238]
  0075c	e5933000	 ldr         r3, [r3]
  00760	e2832088	 add         r2, r3, #0x88
  00764	e3a03101	 mov         r3, #1, 2
  00768	e5823000	 str         r3, [r2]

; 288  : 			OUTREG32(&g_pGPIORegs[1]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_32));  // clear IRQ

  0076c	e59d3008	 ldr         r3, [sp, #8]
  00770	e24320c0	 sub         r2, r3, #0xC0
  00774	e3a03001	 mov         r3, #1
  00778	e1a02213	 mov         r2, r3, lsl r2
  0077c	e59f3210	 ldr         r3, [pc, #0x210]
  00780	e5933004	 ldr         r3, [r3, #4]
  00784	e2833018	 add         r3, r3, #0x18
  00788	e5832000	 str         r2, [r3]

; 289  : 			SETREG32(&g_pGPIORegs[1]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_32));  // unmask IRQ

  0078c	e59f3200	 ldr         r3, [pc, #0x200]
  00790	e5933004	 ldr         r3, [r3, #4]
  00794	e283101c	 add         r1, r3, #0x1C
  00798	e59d3008	 ldr         r3, [sp, #8]
  0079c	e24320c0	 sub         r2, r3, #0xC0
  007a0	e3a03001	 mov         r3, #1
  007a4	e1a02213	 mov         r2, r3, lsl r2
  007a8	e5913000	 ldr         r3, [r1]
  007ac	e1832002	 orr         r2, r3, r2
  007b0	e59f31dc	 ldr         r3, [pc, #0x1DC]
  007b4	e5933004	 ldr         r3, [r3, #4]
  007b8	e283301c	 add         r3, r3, #0x1C
  007bc	e5832000	 str         r2, [r3]
  007c0	ea00005a	 b           |$LN6@OALIntrEna|
  007c4		 |$LN7@OALIntrEna|

; 290  :         } else if (irq < IRQ_GPIO_96) {

  007c4	e59d3008	 ldr         r3, [sp, #8]
  007c8	e3530c01	 cmp         r3, #1, 24
  007cc	2a000027	 bcs         |$LN5@OALIntrEna|

; 291  : 			OALMSG(OAL_INTR, (L"OALIntrEnableIrqs(Irq GPIO3 %d)\r\n", irq - IRQ_GPIO_64));

  007d0	e59f31b8	 ldr         r3, [pc, #0x1B8]
  007d4	e5933440	 ldr         r3, [r3, #0x440]
  007d8	e3130901	 tst         r3, #1, 18
  007dc	0a000006	 beq         |$LN27@OALIntrEna|
  007e0	e59d3008	 ldr         r3, [sp, #8]
  007e4	e24310e0	 sub         r1, r3, #0xE0
  007e8	e59f01b0	 ldr         r0, [pc, #0x1B0]
  007ec	eb000000	 bl          NKDbgPrintfW
  007f0	e3a03001	 mov         r3, #1
  007f4	e58d301c	 str         r3, [sp, #0x1C]
  007f8	ea000001	 b           |$LN28@OALIntrEna|
  007fc		 |$LN27@OALIntrEna|
  007fc	e3a03000	 mov         r3, #0
  00800	e58d301c	 str         r3, [sp, #0x1C]
  00804		 |$LN28@OALIntrEna|

; 292  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR0, 1 << IRQ_GPIO3_MPU);

  00804	e59f318c	 ldr         r3, [pc, #0x18C]
  00808	e5933000	 ldr         r3, [r3]
  0080c	e2832088	 add         r2, r3, #0x88
  00810	e3a03102	 mov         r3, #2, 2
  00814	e5823000	 str         r3, [r2]

; 293  : 			OUTREG32(&g_pGPIORegs[2]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_64));  // clear IRQ

  00818	e59d3008	 ldr         r3, [sp, #8]
  0081c	e24320e0	 sub         r2, r3, #0xE0
  00820	e3a03001	 mov         r3, #1
  00824	e1a02213	 mov         r2, r3, lsl r2
  00828	e59f3164	 ldr         r3, [pc, #0x164]
  0082c	e5933008	 ldr         r3, [r3, #8]
  00830	e2833018	 add         r3, r3, #0x18
  00834	e5832000	 str         r2, [r3]

; 294  : 			SETREG32(&g_pGPIORegs[2]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_64));  // unmask IRQ

  00838	e59f3154	 ldr         r3, [pc, #0x154]
  0083c	e5933008	 ldr         r3, [r3, #8]
  00840	e283101c	 add         r1, r3, #0x1C
  00844	e59d3008	 ldr         r3, [sp, #8]
  00848	e24320e0	 sub         r2, r3, #0xE0
  0084c	e3a03001	 mov         r3, #1
  00850	e1a02213	 mov         r2, r3, lsl r2
  00854	e5913000	 ldr         r3, [r1]
  00858	e1832002	 orr         r2, r3, r2
  0085c	e59f3130	 ldr         r3, [pc, #0x130]
  00860	e5933008	 ldr         r3, [r3, #8]
  00864	e283301c	 add         r3, r3, #0x1C
  00868	e5832000	 str         r2, [r3]
  0086c	ea00002f	 b           |$LN4@OALIntrEna|
  00870		 |$LN5@OALIntrEna|

; 295  :         } else if (irq < IRQ_GPIO_128) {

  00870	e59d3008	 ldr         r3, [sp, #8]
  00874	e3530e12	 cmp         r3, #0x12, 28
  00878	2a000027	 bcs         |$LN3@OALIntrEna|

; 296  : 			OALMSG(OAL_INTR, (L"OALIntrEnableIrqs(Irq GPIO4 %d)\r\n", irq - IRQ_GPIO_96));

  0087c	e59f310c	 ldr         r3, [pc, #0x10C]
  00880	e5933440	 ldr         r3, [r3, #0x440]
  00884	e3130901	 tst         r3, #1, 18
  00888	0a000006	 beq         |$LN29@OALIntrEna|
  0088c	e59d3008	 ldr         r3, [sp, #8]
  00890	e2431c01	 sub         r1, r3, #1, 24
  00894	e59f0100	 ldr         r0, [pc, #0x100]
  00898	eb000000	 bl          NKDbgPrintfW
  0089c	e3a03001	 mov         r3, #1
  008a0	e58d3020	 str         r3, [sp, #0x20]
  008a4	ea000001	 b           |$LN30@OALIntrEna|
  008a8		 |$LN29@OALIntrEna|
  008a8	e3a03000	 mov         r3, #0
  008ac	e58d3020	 str         r3, [sp, #0x20]
  008b0		 |$LN30@OALIntrEna|

; 297  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR1, 1<<(IRQ_GPIO4_MPU-32));

  008b0	e59f30e0	 ldr         r3, [pc, #0xE0]
  008b4	e5933000	 ldr         r3, [r3]
  008b8	e28320a8	 add         r2, r3, #0xA8
  008bc	e3a03001	 mov         r3, #1
  008c0	e5823000	 str         r3, [r2]

; 298  : 			OUTREG32(&g_pGPIORegs[3]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_96));  // clear IRQ

  008c4	e59d3008	 ldr         r3, [sp, #8]
  008c8	e2432c01	 sub         r2, r3, #1, 24
  008cc	e3a03001	 mov         r3, #1
  008d0	e1a02213	 mov         r2, r3, lsl r2
  008d4	e59f30b8	 ldr         r3, [pc, #0xB8]
  008d8	e593300c	 ldr         r3, [r3, #0xC]
  008dc	e2833018	 add         r3, r3, #0x18
  008e0	e5832000	 str         r2, [r3]

; 299  : 			SETREG32(&g_pGPIORegs[3]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_96));  // unmask IRQ

  008e4	e59f30a8	 ldr         r3, [pc, #0xA8]
  008e8	e593300c	 ldr         r3, [r3, #0xC]
  008ec	e283101c	 add         r1, r3, #0x1C
  008f0	e59d3008	 ldr         r3, [sp, #8]
  008f4	e2432c01	 sub         r2, r3, #1, 24
  008f8	e3a03001	 mov         r3, #1
  008fc	e1a02213	 mov         r2, r3, lsl r2
  00900	e5913000	 ldr         r3, [r1]
  00904	e1832002	 orr         r2, r3, r2
  00908	e59f3084	 ldr         r3, [pc, #0x84]
  0090c	e593300c	 ldr         r3, [r3, #0xC]
  00910	e283301c	 add         r3, r3, #0x1C
  00914	e5832000	 str         r2, [r3]
  00918	ea000004	 b           |$LN2@OALIntrEna|
  0091c		 |$LN3@OALIntrEna|

; 300  :         } else if (irq != OAL_INTR_IRQ_UNDEFINED) {

  0091c	e59d3008	 ldr         r3, [sp, #8]
  00920	e3730001	 cmn         r3, #1
  00924	0a000001	 beq         |$LN1@OALIntrEna|

; 301  :             rc = FALSE;

  00928	e3a03000	 mov         r3, #0
  0092c	e58d3000	 str         r3, [sp]
  00930		 |$LN1@OALIntrEna|
  00930		 |$LN2@OALIntrEna|
  00930		 |$LN4@OALIntrEna|
  00930		 |$LN6@OALIntrEna|
  00930		 |$LN8@OALIntrEna|
  00930		 |$LN10@OALIntrEna|
  00930		 |$LN12@OALIntrEna|
  00930		 |$LN14@OALIntrEna|

; 302  :         }
; 303  : 
; 304  :     }

  00930	eaffff1c	 b           |$LN17@OALIntrEna|
  00934		 |$LN16@OALIntrEna|

; 305  : 
; 306  :     OALMSG(OAL_INTR&&OAL_VERBOSE, (L"-OALIntrEnableIrqs(rc = %d)\r\n", rc));

  00934	e59f3054	 ldr         r3, [pc, #0x54]
  00938	e5933440	 ldr         r3, [r3, #0x440]
  0093c	e3130901	 tst         r3, #1, 18
  00940	0a000009	 beq         |$LN31@OALIntrEna|
  00944	e59f3044	 ldr         r3, [pc, #0x44]
  00948	e5933440	 ldr         r3, [r3, #0x440]
  0094c	e3130902	 tst         r3, #2, 18
  00950	0a000005	 beq         |$LN31@OALIntrEna|
  00954	e59d1000	 ldr         r1, [sp]
  00958	e59f002c	 ldr         r0, [pc, #0x2C]
  0095c	eb000000	 bl          NKDbgPrintfW
  00960	e3a03001	 mov         r3, #1
  00964	e58d3024	 str         r3, [sp, #0x24]
  00968	ea000001	 b           |$LN32@OALIntrEna|
  0096c		 |$LN31@OALIntrEna|
  0096c	e3a03000	 mov         r3, #0
  00970	e58d3024	 str         r3, [sp, #0x24]
  00974		 |$LN32@OALIntrEna|

; 307  :     return rc;

  00974	e59d3000	 ldr         r3, [sp]
  00978	e58d300c	 str         r3, [sp, #0xC]

; 308  : }

  0097c	e59d000c	 ldr         r0, [sp, #0xC]
  00980	e28dd028	 add         sp, sp, #0x28
  00984	e89d6000	 ldmia       sp, {sp, lr}
  00988	e12fff1e	 bx          lr
  0098c		 |$LN36@OALIntrEna|
  0098c		 |$LN37@OALIntrEna|
  0098c	00000000	 DCD         |??_C@_1DM@INNHDHDJ@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00990		 |$LN38@OALIntrEna|
  00990	00000000	 DCD         |dpCurSettings|
  00994		 |$LN39@OALIntrEna|
  00994	00000000	 DCD         |g_pGPIORegs|
  00998		 |$LN40@OALIntrEna|
  00998	00000000	 DCD         |g_pIntcRegs|
  0099c		 |$LN41@OALIntrEna|
  0099c	00000000	 DCD         |??_C@_1EE@DLCPCDNN@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@|
  009a0		 |$LN42@OALIntrEna|
  009a0	00000000	 DCD         |??_C@_1EE@MGNGNLKI@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@|
  009a4		 |$LN43@OALIntrEna|
  009a4	00000000	 DCD         |??_C@_1EE@GILOEKDJ@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@|
  009a8		 |$LN44@OALIntrEna|
  009a8	00000000	 DCD         |??_C@_1EE@EBHGPOML@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@|
  009ac		 |$LN45@OALIntrEna|
  009ac	00000000	 DCD         |??_C@_1EC@MDFPIGAB@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6@|
  009b0		 |$M46021|

			 ENDP  ; |OALIntrEnableIrqs|

	EXPORT	|??_C@_1CM@GPENGBBP@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@DGAOCPAC@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?5?$AA?$CF?$AAd?$AA?$CJ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@MLPHNHHH@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?5?$AA?$CF?$AAd?$AA?$CJ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@GFJPEGOG@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?5?$AA?$CF?$AAd?$AA?$CJ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@EMFHPCBE@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?5?$AA?$CF?$AAd?$AA?$CJ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@NGMPKPHC@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAM?$AAE?$AAN?$AAE?$AAL?$AAA?$AAU?$AAS?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@NIPMEMC@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|OALIntrDisableIrqs|

  00018			 AREA	 |.pdata|, PDATA
|$T46052| DCD	|$LN37@OALIntrDis|
	DCD	0x40012b04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@GPENGBBP@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@DGAOCPAC@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?5?$AA?$CF?$AAd?$AA?$CJ@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s", 0x0, "("
	DCB	0x0, "I", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G", 0x0, "P"
	DCB	0x0, "I", 0x0, "O", 0x0, "4", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@MLPHNHHH@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?5?$AA?$CF?$AAd?$AA?$CJ@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s", 0x0, "("
	DCB	0x0, "I", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G", 0x0, "P"
	DCB	0x0, "I", 0x0, "O", 0x0, "3", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@GFJPEGOG@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?5?$AA?$CF?$AAd?$AA?$CJ@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s", 0x0, "("
	DCB	0x0, "I", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G", 0x0, "P"
	DCB	0x0, "I", 0x0, "O", 0x0, "2", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@EMFHPCBE@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?5?$AA?$CF?$AAd?$AA?$CJ@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s", 0x0, "("
	DCB	0x0, "I", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G", 0x0, "P"
	DCB	0x0, "I", 0x0, "O", 0x0, "1", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@NGMPKPHC@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAM?$AAE?$AAN?$AAE?$AAL?$AAA?$AAU?$AAS?$AA?5@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s", 0x0, "("
	DCB	0x0, "I", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "M", 0x0, "E"
	DCB	0x0, "N", 0x0, "E", 0x0, "L", 0x0, "A", 0x0, "U", 0x0, "S"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@NIPMEMC@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s"
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  009b0			 AREA	 |.text|, CODE, ARM

  009b0		 |OALIntrDisableIrqs| PROC

; 315  : {

  009b0		 |$LN37@OALIntrDis|
  009b0	e1a0c00d	 mov         r12, sp
  009b4	e92d0003	 stmdb       sp!, {r0, r1}
  009b8	e92d5000	 stmdb       sp!, {r12, lr}
  009bc	e24dd024	 sub         sp, sp, #0x24
  009c0		 |$M46049|

; 316  :     UINT32 irq, i;
; 317  :     
; 318  :     OALMSG(OAL_INTR&&OAL_FUNC, (
; 319  :         L"+OALIntrDisableIrqs(%d, 0x%08x)\r\n", count, pIrqs
; 320  :     ));

  009c0	e59f3470	 ldr         r3, [pc, #0x470]
  009c4	e5933440	 ldr         r3, [r3, #0x440]
  009c8	e3130901	 tst         r3, #1, 18
  009cc	0a00000a	 beq         |$LN21@OALIntrDis|
  009d0	e59f3460	 ldr         r3, [pc, #0x460]
  009d4	e5933440	 ldr         r3, [r3, #0x440]
  009d8	e3130004	 tst         r3, #4
  009dc	0a000006	 beq         |$LN21@OALIntrDis|
  009e0	e59d2030	 ldr         r2, [sp, #0x30]
  009e4	e59d102c	 ldr         r1, [sp, #0x2C]
  009e8	e59f0468	 ldr         r0, [pc, #0x468]
  009ec	eb000000	 bl          NKDbgPrintfW
  009f0	e3a03001	 mov         r3, #1
  009f4	e58d3008	 str         r3, [sp, #8]
  009f8	ea000001	 b           |$LN22@OALIntrDis|
  009fc		 |$LN21@OALIntrDis|
  009fc	e3a03000	 mov         r3, #0
  00a00	e58d3008	 str         r3, [sp, #8]
  00a04		 |$LN22@OALIntrDis|

; 321  : 
; 322  :     for (i = 0; i < count; i++) {

  00a04	e3a03000	 mov         r3, #0
  00a08	e58d3000	 str         r3, [sp]
  00a0c	ea000002	 b           |$LN18@OALIntrDis|
  00a10		 |$LN17@OALIntrDis|
  00a10	e59d3000	 ldr         r3, [sp]
  00a14	e2833001	 add         r3, r3, #1
  00a18	e58d3000	 str         r3, [sp]
  00a1c		 |$LN18@OALIntrDis|
  00a1c	e59d2000	 ldr         r2, [sp]
  00a20	e59d302c	 ldr         r3, [sp, #0x2C]
  00a24	e1520003	 cmp         r2, r3
  00a28	2a0000ef	 bcs         |$LN16@OALIntrDis|

; 323  :         irq = pIrqs[i];

  00a2c	e59d1000	 ldr         r1, [sp]
  00a30	e3a03004	 mov         r3, #4
  00a34	e0020391	 mul         r2, r1, r3
  00a38	e59d3030	 ldr         r3, [sp, #0x30]
  00a3c	e0833002	 add         r3, r3, r2
  00a40	e5933000	 ldr         r3, [r3]
  00a44	e58d3004	 str         r3, [sp, #4]

; 324  :         if (irq < 32) {

  00a48	e59d3004	 ldr         r3, [sp, #4]
  00a4c	e3530020	 cmp         r3, #0x20
  00a50	2a000007	 bcs         |$LN15@OALIntrDis|

; 325  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET0, 1 << irq);

  00a54	e59d2004	 ldr         r2, [sp, #4]
  00a58	e3a03001	 mov         r3, #1
  00a5c	e1a02213	 mov         r2, r3, lsl r2
  00a60	e59f33d8	 ldr         r3, [pc, #0x3D8]
  00a64	e5933000	 ldr         r3, [r3]
  00a68	e283308c	 add         r3, r3, #0x8C
  00a6c	e5832000	 str         r2, [r3]
  00a70	ea0000dc	 b           |$LN14@OALIntrDis|
  00a74		 |$LN15@OALIntrDis|

; 326  :         } else if (irq < 64) {

  00a74	e59d3004	 ldr         r3, [sp, #4]
  00a78	e3530040	 cmp         r3, #0x40
  00a7c	2a000008	 bcs         |$LN13@OALIntrDis|

; 327  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET1, 1 << (irq - 32));

  00a80	e59d3004	 ldr         r3, [sp, #4]
  00a84	e2432020	 sub         r2, r3, #0x20
  00a88	e3a03001	 mov         r3, #1
  00a8c	e1a02213	 mov         r2, r3, lsl r2
  00a90	e59f33a8	 ldr         r3, [pc, #0x3A8]
  00a94	e5933000	 ldr         r3, [r3]
  00a98	e28330ac	 add         r3, r3, #0xAC
  00a9c	e5832000	 str         r2, [r3]
  00aa0	ea0000d0	 b           |$LN12@OALIntrDis|
  00aa4		 |$LN13@OALIntrDis|

; 328  :         } else if (irq < 96) {

  00aa4	e59d3004	 ldr         r3, [sp, #4]
  00aa8	e3530060	 cmp         r3, #0x60
  00aac	2a000008	 bcs         |$LN11@OALIntrDis|

; 329  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET2, 1 << (irq - 64));

  00ab0	e59d3004	 ldr         r3, [sp, #4]
  00ab4	e2432040	 sub         r2, r3, #0x40
  00ab8	e3a03001	 mov         r3, #1
  00abc	e1a02213	 mov         r2, r3, lsl r2
  00ac0	e59f3378	 ldr         r3, [pc, #0x378]
  00ac4	e5933000	 ldr         r3, [r3]
  00ac8	e28330cc	 add         r3, r3, #0xCC
  00acc	e5832000	 str         r2, [r3]
  00ad0	ea0000c4	 b           |$LN10@OALIntrDis|
  00ad4		 |$LN11@OALIntrDis|

; 330  :         } else if (irq <= IRQ_MENELAUS_PSHBTN) {

  00ad4	e59d3004	 ldr         r3, [sp, #4]
  00ad8	e353006f	 cmp         r3, #0x6F
  00adc	8a000012	 bhi         |$LN9@OALIntrDis|

; 331  : 		    OALMSG(OAL_INTR, (L"OALIntrDisableIrqs(Irq MENELAUS %d)\r\n", irq - IRQ_MENELAUS_CD1));

  00ae0	e59f3350	 ldr         r3, [pc, #0x350]
  00ae4	e5933440	 ldr         r3, [r3, #0x440]
  00ae8	e3130901	 tst         r3, #1, 18
  00aec	0a000006	 beq         |$LN23@OALIntrDis|
  00af0	e59d3004	 ldr         r3, [sp, #4]
  00af4	e2431064	 sub         r1, r3, #0x64
  00af8	e59f0354	 ldr         r0, [pc, #0x354]
  00afc	eb000000	 bl          NKDbgPrintfW
  00b00	e3a03001	 mov         r3, #1
  00b04	e58d300c	 str         r3, [sp, #0xC]
  00b08	ea000001	 b           |$LN24@OALIntrDis|
  00b0c		 |$LN23@OALIntrDis|
  00b0c	e3a03000	 mov         r3, #0
  00b10	e58d300c	 str         r3, [sp, #0xC]
  00b14		 |$LN24@OALIntrDis|

; 332  : 			OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET0, 1 << IRQ_SYS_NIRQ);

  00b14	e59f3324	 ldr         r3, [pc, #0x324]
  00b18	e5933000	 ldr         r3, [r3]
  00b1c	e283208c	 add         r2, r3, #0x8C
  00b20	e3a03080	 mov         r3, #0x80
  00b24	e5823000	 str         r3, [r2]
  00b28	ea0000ae	 b           |$LN8@OALIntrDis|
  00b2c		 |$LN9@OALIntrDis|

; 333  : 
; 334  :         } else if (irq < IRQ_GPIO_32) {

  00b2c	e59d3004	 ldr         r3, [sp, #4]
  00b30	e35300c0	 cmp         r3, #0xC0
  00b34	2a000028	 bcs         |$LN7@OALIntrDis|

; 335  : 			OALMSG(OAL_INTR, (
; 336  : 				L"OALIntrDisableIrqs(Irq GPIO1 %d)\r\n", irq - IRQ_GPIO_0));

  00b38	e59f32f8	 ldr         r3, [pc, #0x2F8]
  00b3c	e5933440	 ldr         r3, [r3, #0x440]
  00b40	e3130901	 tst         r3, #1, 18
  00b44	0a000006	 beq         |$LN25@OALIntrDis|
  00b48	e59d3004	 ldr         r3, [sp, #4]
  00b4c	e24310a0	 sub         r1, r3, #0xA0
  00b50	e59f02f8	 ldr         r0, [pc, #0x2F8]
  00b54	eb000000	 bl          NKDbgPrintfW
  00b58	e3a03001	 mov         r3, #1
  00b5c	e58d3010	 str         r3, [sp, #0x10]
  00b60	ea000001	 b           |$LN26@OALIntrDis|
  00b64		 |$LN25@OALIntrDis|
  00b64	e3a03000	 mov         r3, #0
  00b68	e58d3010	 str         r3, [sp, #0x10]
  00b6c		 |$LN26@OALIntrDis|

; 337  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET0, 1 << IRQ_GPIO1_MPU);

  00b6c	e59f32cc	 ldr         r3, [pc, #0x2CC]
  00b70	e5933000	 ldr         r3, [r3]
  00b74	e283208c	 add         r2, r3, #0x8C
  00b78	e3a03202	 mov         r3, #2, 4
  00b7c	e5823000	 str         r3, [r2]

; 338  : 			CLRREG32(&g_pGPIORegs[0]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_0));  // mask IRQ

  00b80	e59f32b4	 ldr         r3, [pc, #0x2B4]
  00b84	e5933000	 ldr         r3, [r3]
  00b88	e283101c	 add         r1, r3, #0x1C
  00b8c	e59d3004	 ldr         r3, [sp, #4]
  00b90	e24320a0	 sub         r2, r3, #0xA0
  00b94	e3a03001	 mov         r3, #1
  00b98	e1a03213	 mov         r3, r3, lsl r2
  00b9c	e1e02003	 mvn         r2, r3
  00ba0	e5913000	 ldr         r3, [r1]
  00ba4	e0032002	 and         r2, r3, r2
  00ba8	e59f328c	 ldr         r3, [pc, #0x28C]
  00bac	e5933000	 ldr         r3, [r3]
  00bb0	e283301c	 add         r3, r3, #0x1C
  00bb4	e5832000	 str         r2, [r3]

; 339  : 			OUTREG32(&g_pGPIORegs[0]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_0));  // clear IRQ

  00bb8	e59d3004	 ldr         r3, [sp, #4]
  00bbc	e24320a0	 sub         r2, r3, #0xA0
  00bc0	e3a03001	 mov         r3, #1
  00bc4	e1a02213	 mov         r2, r3, lsl r2
  00bc8	e59f326c	 ldr         r3, [pc, #0x26C]
  00bcc	e5933000	 ldr         r3, [r3]
  00bd0	e2833018	 add         r3, r3, #0x18
  00bd4	e5832000	 str         r2, [r3]
  00bd8	ea000082	 b           |$LN6@OALIntrDis|
  00bdc		 |$LN7@OALIntrDis|

; 340  :         } else if (irq < IRQ_GPIO_64) {

  00bdc	e59d3004	 ldr         r3, [sp, #4]
  00be0	e35300e0	 cmp         r3, #0xE0
  00be4	2a000028	 bcs         |$LN5@OALIntrDis|

; 341  : 			OALMSG(OAL_INTR, (
; 342  : 				L"OALIntrDisableIrqs(Irq GPIO2 %d)\r\n", irq - IRQ_GPIO_32));

  00be8	e59f3248	 ldr         r3, [pc, #0x248]
  00bec	e5933440	 ldr         r3, [r3, #0x440]
  00bf0	e3130901	 tst         r3, #1, 18
  00bf4	0a000006	 beq         |$LN27@OALIntrDis|
  00bf8	e59d3004	 ldr         r3, [sp, #4]
  00bfc	e24310c0	 sub         r1, r3, #0xC0
  00c00	e59f0244	 ldr         r0, [pc, #0x244]
  00c04	eb000000	 bl          NKDbgPrintfW
  00c08	e3a03001	 mov         r3, #1
  00c0c	e58d3014	 str         r3, [sp, #0x14]
  00c10	ea000001	 b           |$LN28@OALIntrDis|
  00c14		 |$LN27@OALIntrDis|
  00c14	e3a03000	 mov         r3, #0
  00c18	e58d3014	 str         r3, [sp, #0x14]
  00c1c		 |$LN28@OALIntrDis|

; 343  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET0, 1 << IRQ_GPIO2_MPU);

  00c1c	e59f321c	 ldr         r3, [pc, #0x21C]
  00c20	e5933000	 ldr         r3, [r3]
  00c24	e283208c	 add         r2, r3, #0x8C
  00c28	e3a03101	 mov         r3, #1, 2
  00c2c	e5823000	 str         r3, [r2]

; 344  : 			CLRREG32(&g_pGPIORegs[1]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_32));  // mask IRQ

  00c30	e59f3204	 ldr         r3, [pc, #0x204]
  00c34	e5933004	 ldr         r3, [r3, #4]
  00c38	e283101c	 add         r1, r3, #0x1C
  00c3c	e59d3004	 ldr         r3, [sp, #4]
  00c40	e24320c0	 sub         r2, r3, #0xC0
  00c44	e3a03001	 mov         r3, #1
  00c48	e1a03213	 mov         r3, r3, lsl r2
  00c4c	e1e02003	 mvn         r2, r3
  00c50	e5913000	 ldr         r3, [r1]
  00c54	e0032002	 and         r2, r3, r2
  00c58	e59f31dc	 ldr         r3, [pc, #0x1DC]
  00c5c	e5933004	 ldr         r3, [r3, #4]
  00c60	e283301c	 add         r3, r3, #0x1C
  00c64	e5832000	 str         r2, [r3]

; 345  : 			OUTREG32(&g_pGPIORegs[1]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_32));  // clear IRQ

  00c68	e59d3004	 ldr         r3, [sp, #4]
  00c6c	e24320c0	 sub         r2, r3, #0xC0
  00c70	e3a03001	 mov         r3, #1
  00c74	e1a02213	 mov         r2, r3, lsl r2
  00c78	e59f31bc	 ldr         r3, [pc, #0x1BC]
  00c7c	e5933004	 ldr         r3, [r3, #4]
  00c80	e2833018	 add         r3, r3, #0x18
  00c84	e5832000	 str         r2, [r3]
  00c88	ea000056	 b           |$LN4@OALIntrDis|
  00c8c		 |$LN5@OALIntrDis|

; 346  :         } else if (irq < IRQ_GPIO_96) {

  00c8c	e59d3004	 ldr         r3, [sp, #4]
  00c90	e3530c01	 cmp         r3, #1, 24
  00c94	2a000028	 bcs         |$LN3@OALIntrDis|

; 347  : 			OALMSG(OAL_INTR, (
; 348  : 				L"OALIntrDisableIrqs(Irq GPIO3 %d)\r\n", irq - IRQ_GPIO_64));

  00c98	e59f3198	 ldr         r3, [pc, #0x198]
  00c9c	e5933440	 ldr         r3, [r3, #0x440]
  00ca0	e3130901	 tst         r3, #1, 18
  00ca4	0a000006	 beq         |$LN29@OALIntrDis|
  00ca8	e59d3004	 ldr         r3, [sp, #4]
  00cac	e24310e0	 sub         r1, r3, #0xE0
  00cb0	e59f0190	 ldr         r0, [pc, #0x190]
  00cb4	eb000000	 bl          NKDbgPrintfW
  00cb8	e3a03001	 mov         r3, #1
  00cbc	e58d3018	 str         r3, [sp, #0x18]
  00cc0	ea000001	 b           |$LN30@OALIntrDis|
  00cc4		 |$LN29@OALIntrDis|
  00cc4	e3a03000	 mov         r3, #0
  00cc8	e58d3018	 str         r3, [sp, #0x18]
  00ccc		 |$LN30@OALIntrDis|

; 349  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET0, 1 << IRQ_GPIO3_MPU);

  00ccc	e59f316c	 ldr         r3, [pc, #0x16C]
  00cd0	e5933000	 ldr         r3, [r3]
  00cd4	e283208c	 add         r2, r3, #0x8C
  00cd8	e3a03102	 mov         r3, #2, 2
  00cdc	e5823000	 str         r3, [r2]

; 350  : 			CLRREG32(&g_pGPIORegs[2]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_64));  // mask IRQ

  00ce0	e59f3154	 ldr         r3, [pc, #0x154]
  00ce4	e5933008	 ldr         r3, [r3, #8]
  00ce8	e283101c	 add         r1, r3, #0x1C
  00cec	e59d3004	 ldr         r3, [sp, #4]
  00cf0	e24320e0	 sub         r2, r3, #0xE0
  00cf4	e3a03001	 mov         r3, #1
  00cf8	e1a03213	 mov         r3, r3, lsl r2
  00cfc	e1e02003	 mvn         r2, r3
  00d00	e5913000	 ldr         r3, [r1]
  00d04	e0032002	 and         r2, r3, r2
  00d08	e59f312c	 ldr         r3, [pc, #0x12C]
  00d0c	e5933008	 ldr         r3, [r3, #8]
  00d10	e283301c	 add         r3, r3, #0x1C
  00d14	e5832000	 str         r2, [r3]

; 351  : 			OUTREG32(&g_pGPIORegs[2]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_64));  // clear IRQ

  00d18	e59d3004	 ldr         r3, [sp, #4]
  00d1c	e24320e0	 sub         r2, r3, #0xE0
  00d20	e3a03001	 mov         r3, #1
  00d24	e1a02213	 mov         r2, r3, lsl r2
  00d28	e59f310c	 ldr         r3, [pc, #0x10C]
  00d2c	e5933008	 ldr         r3, [r3, #8]
  00d30	e2833018	 add         r3, r3, #0x18
  00d34	e5832000	 str         r2, [r3]
  00d38	ea00002a	 b           |$LN2@OALIntrDis|
  00d3c		 |$LN3@OALIntrDis|

; 352  :         } else if (irq < IRQ_GPIO_128) {

  00d3c	e59d3004	 ldr         r3, [sp, #4]
  00d40	e3530e12	 cmp         r3, #0x12, 28
  00d44	2a000027	 bcs         |$LN1@OALIntrDis|

; 353  : 			OALMSG(OAL_INTR, (
; 354  : 				L"OALIntrDisableIrqs(Irq GPIO4 %d)\r\n", irq - IRQ_GPIO_96));

  00d48	e59f30e8	 ldr         r3, [pc, #0xE8]
  00d4c	e5933440	 ldr         r3, [r3, #0x440]
  00d50	e3130901	 tst         r3, #1, 18
  00d54	0a000006	 beq         |$LN31@OALIntrDis|
  00d58	e59d3004	 ldr         r3, [sp, #4]
  00d5c	e2431c01	 sub         r1, r3, #1, 24
  00d60	e59f00dc	 ldr         r0, [pc, #0xDC]
  00d64	eb000000	 bl          NKDbgPrintfW
  00d68	e3a03001	 mov         r3, #1
  00d6c	e58d301c	 str         r3, [sp, #0x1C]
  00d70	ea000001	 b           |$LN32@OALIntrDis|
  00d74		 |$LN31@OALIntrDis|
  00d74	e3a03000	 mov         r3, #0
  00d78	e58d301c	 str         r3, [sp, #0x1C]
  00d7c		 |$LN32@OALIntrDis|

; 355  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET1, 1 << (IRQ_GPIO4_MPU-32));

  00d7c	e59f30bc	 ldr         r3, [pc, #0xBC]
  00d80	e5933000	 ldr         r3, [r3]
  00d84	e28320ac	 add         r2, r3, #0xAC
  00d88	e3a03001	 mov         r3, #1
  00d8c	e5823000	 str         r3, [r2]

; 356  : 			CLRREG32(&g_pGPIORegs[3]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_96));  // mask IRQ

  00d90	e59f30a4	 ldr         r3, [pc, #0xA4]
  00d94	e593300c	 ldr         r3, [r3, #0xC]
  00d98	e283101c	 add         r1, r3, #0x1C
  00d9c	e59d3004	 ldr         r3, [sp, #4]
  00da0	e2432c01	 sub         r2, r3, #1, 24
  00da4	e3a03001	 mov         r3, #1
  00da8	e1a03213	 mov         r3, r3, lsl r2
  00dac	e1e02003	 mvn         r2, r3
  00db0	e5913000	 ldr         r3, [r1]
  00db4	e0032002	 and         r2, r3, r2
  00db8	e59f307c	 ldr         r3, [pc, #0x7C]
  00dbc	e593300c	 ldr         r3, [r3, #0xC]
  00dc0	e283301c	 add         r3, r3, #0x1C
  00dc4	e5832000	 str         r2, [r3]

; 357  : 			OUTREG32(&g_pGPIORegs[3]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_96));  // clear IRQ

  00dc8	e59d3004	 ldr         r3, [sp, #4]
  00dcc	e2432c01	 sub         r2, r3, #1, 24
  00dd0	e3a03001	 mov         r3, #1
  00dd4	e1a02213	 mov         r2, r3, lsl r2
  00dd8	e59f305c	 ldr         r3, [pc, #0x5C]
  00ddc	e593300c	 ldr         r3, [r3, #0xC]
  00de0	e2833018	 add         r3, r3, #0x18
  00de4	e5832000	 str         r2, [r3]
  00de8		 |$LN1@OALIntrDis|
  00de8		 |$LN2@OALIntrDis|
  00de8		 |$LN4@OALIntrDis|
  00de8		 |$LN6@OALIntrDis|
  00de8		 |$LN8@OALIntrDis|
  00de8		 |$LN10@OALIntrDis|
  00de8		 |$LN12@OALIntrDis|
  00de8		 |$LN14@OALIntrDis|

; 358  :         } 
; 359  :     }

  00de8	eaffff08	 b           |$LN17@OALIntrDis|
  00dec		 |$LN16@OALIntrDis|

; 360  :     OALMSG(OAL_INTR&&OAL_FUNC, (L"-OALIntrDisableIrqs\r\n"));

  00dec	e59f3044	 ldr         r3, [pc, #0x44]
  00df0	e5933440	 ldr         r3, [r3, #0x440]
  00df4	e3130901	 tst         r3, #1, 18
  00df8	0a000008	 beq         |$LN33@OALIntrDis|
  00dfc	e59f3034	 ldr         r3, [pc, #0x34]
  00e00	e5933440	 ldr         r3, [r3, #0x440]
  00e04	e3130004	 tst         r3, #4
  00e08	0a000004	 beq         |$LN33@OALIntrDis|
  00e0c	e59f0020	 ldr         r0, [pc, #0x20]
  00e10	eb000000	 bl          NKDbgPrintfW
  00e14	e3a03001	 mov         r3, #1
  00e18	e58d3020	 str         r3, [sp, #0x20]
  00e1c	ea000001	 b           |$LN34@OALIntrDis|
  00e20		 |$LN33@OALIntrDis|
  00e20	e3a03000	 mov         r3, #0
  00e24	e58d3020	 str         r3, [sp, #0x20]
  00e28		 |$LN34@OALIntrDis|

; 361  : }

  00e28	e28dd024	 add         sp, sp, #0x24
  00e2c	e89d6000	 ldmia       sp, {sp, lr}
  00e30	e12fff1e	 bx          lr
  00e34		 |$LN38@OALIntrDis|
  00e34		 |$LN39@OALIntrDis|
  00e34	00000000	 DCD         |??_C@_1CM@GPENGBBP@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00e38		 |$LN40@OALIntrDis|
  00e38	00000000	 DCD         |dpCurSettings|
  00e3c		 |$LN41@OALIntrDis|
  00e3c	00000000	 DCD         |g_pGPIORegs|
  00e40		 |$LN42@OALIntrDis|
  00e40	00000000	 DCD         |g_pIntcRegs|
  00e44		 |$LN43@OALIntrDis|
  00e44	00000000	 DCD         |??_C@_1EG@DGAOCPAC@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?5?$AA?$CF?$AAd?$AA?$CJ@|
  00e48		 |$LN44@OALIntrDis|
  00e48	00000000	 DCD         |??_C@_1EG@MLPHNHHH@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?5?$AA?$CF?$AAd?$AA?$CJ@|
  00e4c		 |$LN45@OALIntrDis|
  00e4c	00000000	 DCD         |??_C@_1EG@GFJPEGOG@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?5?$AA?$CF?$AAd?$AA?$CJ@|
  00e50		 |$LN46@OALIntrDis|
  00e50	00000000	 DCD         |??_C@_1EG@EMFHPCBE@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?5?$AA?$CF?$AAd?$AA?$CJ@|
  00e54		 |$LN47@OALIntrDis|
  00e54	00000000	 DCD         |??_C@_1EM@NGMPKPHC@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAM?$AAE?$AAN?$AAE?$AAL?$AAA?$AAU?$AAS?$AA?5@|
  00e58		 |$LN48@OALIntrDis|
  00e58	00000000	 DCD         |??_C@_1EE@NIPMEMC@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN@|
  00e5c		 |$M46050|

			 ENDP  ; |OALIntrDisableIrqs|

	EXPORT	|??_C@_1CE@EOLKJDEL@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@KCEDHCMK@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@FPLKIKLP@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@PBNCBLCO@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@NIBKKPNM@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|OALIntrDoneIrqs|

  00020			 AREA	 |.pdata|, PDATA
|$T46078| DCD	|$LN31@OALIntrDon|
	DCD	0x4000fe04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@EOLKJDEL@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "D", 0x0, "o", 0x0, "n", 0x0, "e", 0x0, "I"
	DCB	0x0, "r", 0x0, "q", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@KCEDHCMK@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "D", 0x0, "o", 0x0, "n", 0x0, "e", 0x0, "I", 0x0, "r"
	DCB	0x0, "q", 0x0, "s", 0x0, "(", 0x0, "I", 0x0, "r", 0x0, "q"
	DCB	0x0, " ", 0x0, "G", 0x0, "P", 0x0, "I", 0x0, "O", 0x0, "4"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@FPLKIKLP@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "D", 0x0, "o", 0x0, "n", 0x0, "e", 0x0, "I", 0x0, "r"
	DCB	0x0, "q", 0x0, "s", 0x0, "(", 0x0, "I", 0x0, "r", 0x0, "q"
	DCB	0x0, " ", 0x0, "G", 0x0, "P", 0x0, "I", 0x0, "O", 0x0, "3"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@PBNCBLCO@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "D", 0x0, "o", 0x0, "n", 0x0, "e", 0x0, "I", 0x0, "r"
	DCB	0x0, "q", 0x0, "s", 0x0, "(", 0x0, "I", 0x0, "r", 0x0, "q"
	DCB	0x0, " ", 0x0, "G", 0x0, "P", 0x0, "I", 0x0, "O", 0x0, "2"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@NIBKKPNM@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "D", 0x0, "o", 0x0, "n", 0x0, "e", 0x0, "I", 0x0, "r"
	DCB	0x0, "q", 0x0, "s", 0x0, "(", 0x0, "I", 0x0, "r", 0x0, "q"
	DCB	0x0, " ", 0x0, "G", 0x0, "P", 0x0, "I", 0x0, "O", 0x0, "1"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00e5c			 AREA	 |.text|, CODE, ARM

  00e5c		 |OALIntrDoneIrqs| PROC

; 368  : {

  00e5c		 |$LN31@OALIntrDon|
  00e5c	e1a0c00d	 mov         r12, sp
  00e60	e92d0003	 stmdb       sp!, {r0, r1}
  00e64	e92d5000	 stmdb       sp!, {r12, lr}
  00e68	e24dd01c	 sub         sp, sp, #0x1C
  00e6c		 |$M46075|

; 369  :     UINT32 irq, i;
; 370  : 
; 371  :     for (i = 0; i < count; i++) {

  00e6c	e3a03000	 mov         r3, #0
  00e70	e58d3000	 str         r3, [sp]
  00e74	ea000002	 b           |$LN16@OALIntrDon|
  00e78		 |$LN15@OALIntrDon|
  00e78	e59d3000	 ldr         r3, [sp]
  00e7c	e2833001	 add         r3, r3, #1
  00e80	e58d3000	 str         r3, [sp]
  00e84		 |$LN16@OALIntrDon|
  00e84	e59d2000	 ldr         r2, [sp]
  00e88	e59d3024	 ldr         r3, [sp, #0x24]
  00e8c	e1520003	 cmp         r2, r3
  00e90	2a0000d5	 bcs         |$LN14@OALIntrDon|

; 372  :         irq = pIrqs[i];

  00e94	e59d1000	 ldr         r1, [sp]
  00e98	e3a03004	 mov         r3, #4
  00e9c	e0020391	 mul         r2, r1, r3
  00ea0	e59d3028	 ldr         r3, [sp, #0x28]
  00ea4	e0833002	 add         r3, r3, r2
  00ea8	e5933000	 ldr         r3, [r3]
  00eac	e58d3004	 str         r3, [sp, #4]

; 373  :         if (irq < 32) {

  00eb0	e59d3004	 ldr         r3, [sp, #4]
  00eb4	e3530020	 cmp         r3, #0x20
  00eb8	2a000007	 bcs         |$LN13@OALIntrDon|

; 374  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR0, 1 << irq);

  00ebc	e59d2004	 ldr         r2, [sp, #4]
  00ec0	e3a03001	 mov         r3, #1
  00ec4	e1a02213	 mov         r2, r3, lsl r2
  00ec8	e59f3370	 ldr         r3, [pc, #0x370]
  00ecc	e5933000	 ldr         r3, [r3]
  00ed0	e2833088	 add         r3, r3, #0x88
  00ed4	e5832000	 str         r2, [r3]
  00ed8	ea0000c2	 b           |$LN12@OALIntrDon|
  00edc		 |$LN13@OALIntrDon|

; 375  :         } else if (irq < 64) {

  00edc	e59d3004	 ldr         r3, [sp, #4]
  00ee0	e3530040	 cmp         r3, #0x40
  00ee4	2a000008	 bcs         |$LN11@OALIntrDon|

; 376  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR1, 1 << (irq - 32));

  00ee8	e59d3004	 ldr         r3, [sp, #4]
  00eec	e2432020	 sub         r2, r3, #0x20
  00ef0	e3a03001	 mov         r3, #1
  00ef4	e1a02213	 mov         r2, r3, lsl r2
  00ef8	e59f3340	 ldr         r3, [pc, #0x340]
  00efc	e5933000	 ldr         r3, [r3]
  00f00	e28330a8	 add         r3, r3, #0xA8
  00f04	e5832000	 str         r2, [r3]
  00f08	ea0000b6	 b           |$LN10@OALIntrDon|
  00f0c		 |$LN11@OALIntrDon|

; 377  :         } else if (irq < 96) {

  00f0c	e59d3004	 ldr         r3, [sp, #4]
  00f10	e3530060	 cmp         r3, #0x60
  00f14	2a000008	 bcs         |$LN9@OALIntrDon|

; 378  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR2, 1 << (irq - 64));

  00f18	e59d3004	 ldr         r3, [sp, #4]
  00f1c	e2432040	 sub         r2, r3, #0x40
  00f20	e3a03001	 mov         r3, #1
  00f24	e1a02213	 mov         r2, r3, lsl r2
  00f28	e59f3310	 ldr         r3, [pc, #0x310]
  00f2c	e5933000	 ldr         r3, [r3]
  00f30	e28330c8	 add         r3, r3, #0xC8
  00f34	e5832000	 str         r2, [r3]
  00f38	ea0000aa	 b           |$LN8@OALIntrDon|
  00f3c		 |$LN9@OALIntrDon|

; 379  :         } else if (irq < IRQ_GPIO_32) {

  00f3c	e59d3004	 ldr         r3, [sp, #4]
  00f40	e35300c0	 cmp         r3, #0xC0
  00f44	2a000027	 bcs         |$LN7@OALIntrDon|

; 380  : 			OALMSG(OAL_INTR, (L"OALIntrDoneIrqs(Irq GPIO1 %d)\r\n", irq - IRQ_GPIO_0));

  00f48	e59f32e8	 ldr         r3, [pc, #0x2E8]
  00f4c	e5933440	 ldr         r3, [r3, #0x440]
  00f50	e3130901	 tst         r3, #1, 18
  00f54	0a000006	 beq         |$LN19@OALIntrDon|
  00f58	e59d3004	 ldr         r3, [sp, #4]
  00f5c	e24310a0	 sub         r1, r3, #0xA0
  00f60	e59f02e8	 ldr         r0, [pc, #0x2E8]
  00f64	eb000000	 bl          NKDbgPrintfW
  00f68	e3a03001	 mov         r3, #1
  00f6c	e58d3008	 str         r3, [sp, #8]
  00f70	ea000001	 b           |$LN20@OALIntrDon|
  00f74		 |$LN19@OALIntrDon|
  00f74	e3a03000	 mov         r3, #0
  00f78	e58d3008	 str         r3, [sp, #8]
  00f7c		 |$LN20@OALIntrDon|

; 381  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR0, 1 << IRQ_GPIO1_MPU);

  00f7c	e59f32bc	 ldr         r3, [pc, #0x2BC]
  00f80	e5933000	 ldr         r3, [r3]
  00f84	e2832088	 add         r2, r3, #0x88
  00f88	e3a03202	 mov         r3, #2, 4
  00f8c	e5823000	 str         r3, [r2]

; 382  : 			OUTREG32(&g_pGPIORegs[0]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_0));  // clear IRQ

  00f90	e59d3004	 ldr         r3, [sp, #4]
  00f94	e24320a0	 sub         r2, r3, #0xA0
  00f98	e3a03001	 mov         r3, #1
  00f9c	e1a02213	 mov         r2, r3, lsl r2
  00fa0	e59f3294	 ldr         r3, [pc, #0x294]
  00fa4	e5933000	 ldr         r3, [r3]
  00fa8	e2833018	 add         r3, r3, #0x18
  00fac	e5832000	 str         r2, [r3]

; 383  : 			SETREG32(&g_pGPIORegs[0]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_0));  // unmask IRQ

  00fb0	e59f3284	 ldr         r3, [pc, #0x284]
  00fb4	e5933000	 ldr         r3, [r3]
  00fb8	e283101c	 add         r1, r3, #0x1C
  00fbc	e59d3004	 ldr         r3, [sp, #4]
  00fc0	e24320a0	 sub         r2, r3, #0xA0
  00fc4	e3a03001	 mov         r3, #1
  00fc8	e1a02213	 mov         r2, r3, lsl r2
  00fcc	e5913000	 ldr         r3, [r1]
  00fd0	e1832002	 orr         r2, r3, r2
  00fd4	e59f3260	 ldr         r3, [pc, #0x260]
  00fd8	e5933000	 ldr         r3, [r3]
  00fdc	e283301c	 add         r3, r3, #0x1C
  00fe0	e5832000	 str         r2, [r3]
  00fe4	ea00007f	 b           |$LN6@OALIntrDon|
  00fe8		 |$LN7@OALIntrDon|

; 384  :         } else if (irq < IRQ_GPIO_64) {

  00fe8	e59d3004	 ldr         r3, [sp, #4]
  00fec	e35300e0	 cmp         r3, #0xE0
  00ff0	2a000027	 bcs         |$LN5@OALIntrDon|

; 385  : 			OALMSG(OAL_INTR, (L"OALIntrDoneIrqs(Irq GPIO2 %d)\r\n", irq - IRQ_GPIO_32));

  00ff4	e59f323c	 ldr         r3, [pc, #0x23C]
  00ff8	e5933440	 ldr         r3, [r3, #0x440]
  00ffc	e3130901	 tst         r3, #1, 18
  01000	0a000006	 beq         |$LN21@OALIntrDon|
  01004	e59d3004	 ldr         r3, [sp, #4]
  01008	e24310c0	 sub         r1, r3, #0xC0
  0100c	e59f0238	 ldr         r0, [pc, #0x238]
  01010	eb000000	 bl          NKDbgPrintfW
  01014	e3a03001	 mov         r3, #1
  01018	e58d300c	 str         r3, [sp, #0xC]
  0101c	ea000001	 b           |$LN22@OALIntrDon|
  01020		 |$LN21@OALIntrDon|
  01020	e3a03000	 mov         r3, #0
  01024	e58d300c	 str         r3, [sp, #0xC]
  01028		 |$LN22@OALIntrDon|

; 386  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR0, 1 << IRQ_GPIO2_MPU);

  01028	e59f3210	 ldr         r3, [pc, #0x210]
  0102c	e5933000	 ldr         r3, [r3]
  01030	e2832088	 add         r2, r3, #0x88
  01034	e3a03101	 mov         r3, #1, 2
  01038	e5823000	 str         r3, [r2]

; 387  : 			OUTREG32(&g_pGPIORegs[1]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_32));  // clear IRQ

  0103c	e59d3004	 ldr         r3, [sp, #4]
  01040	e24320c0	 sub         r2, r3, #0xC0
  01044	e3a03001	 mov         r3, #1
  01048	e1a02213	 mov         r2, r3, lsl r2
  0104c	e59f31e8	 ldr         r3, [pc, #0x1E8]
  01050	e5933004	 ldr         r3, [r3, #4]
  01054	e2833018	 add         r3, r3, #0x18
  01058	e5832000	 str         r2, [r3]

; 388  : 			SETREG32(&g_pGPIORegs[1]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_32));  // unmask IRQ

  0105c	e59f31d8	 ldr         r3, [pc, #0x1D8]
  01060	e5933004	 ldr         r3, [r3, #4]
  01064	e283101c	 add         r1, r3, #0x1C
  01068	e59d3004	 ldr         r3, [sp, #4]
  0106c	e24320c0	 sub         r2, r3, #0xC0
  01070	e3a03001	 mov         r3, #1
  01074	e1a02213	 mov         r2, r3, lsl r2
  01078	e5913000	 ldr         r3, [r1]
  0107c	e1832002	 orr         r2, r3, r2
  01080	e59f31b4	 ldr         r3, [pc, #0x1B4]
  01084	e5933004	 ldr         r3, [r3, #4]
  01088	e283301c	 add         r3, r3, #0x1C
  0108c	e5832000	 str         r2, [r3]
  01090	ea000054	 b           |$LN4@OALIntrDon|
  01094		 |$LN5@OALIntrDon|

; 389  :         } else if (irq < IRQ_GPIO_96) {

  01094	e59d3004	 ldr         r3, [sp, #4]
  01098	e3530c01	 cmp         r3, #1, 24
  0109c	2a000027	 bcs         |$LN3@OALIntrDon|

; 390  : 			OALMSG(OAL_INTR, (L"OALIntrDoneIrqs(Irq GPIO3 %d)\r\n", irq - IRQ_GPIO_64));

  010a0	e59f3190	 ldr         r3, [pc, #0x190]
  010a4	e5933440	 ldr         r3, [r3, #0x440]
  010a8	e3130901	 tst         r3, #1, 18
  010ac	0a000006	 beq         |$LN23@OALIntrDon|
  010b0	e59d3004	 ldr         r3, [sp, #4]
  010b4	e24310e0	 sub         r1, r3, #0xE0
  010b8	e59f0188	 ldr         r0, [pc, #0x188]
  010bc	eb000000	 bl          NKDbgPrintfW
  010c0	e3a03001	 mov         r3, #1
  010c4	e58d3010	 str         r3, [sp, #0x10]
  010c8	ea000001	 b           |$LN24@OALIntrDon|
  010cc		 |$LN23@OALIntrDon|
  010cc	e3a03000	 mov         r3, #0
  010d0	e58d3010	 str         r3, [sp, #0x10]
  010d4		 |$LN24@OALIntrDon|

; 391  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR0, 1 << IRQ_GPIO3_MPU);

  010d4	e59f3164	 ldr         r3, [pc, #0x164]
  010d8	e5933000	 ldr         r3, [r3]
  010dc	e2832088	 add         r2, r3, #0x88
  010e0	e3a03102	 mov         r3, #2, 2
  010e4	e5823000	 str         r3, [r2]

; 392  : 			OUTREG32(&g_pGPIORegs[2]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_64));  // clear IRQ

  010e8	e59d3004	 ldr         r3, [sp, #4]
  010ec	e24320e0	 sub         r2, r3, #0xE0
  010f0	e3a03001	 mov         r3, #1
  010f4	e1a02213	 mov         r2, r3, lsl r2
  010f8	e59f313c	 ldr         r3, [pc, #0x13C]
  010fc	e5933008	 ldr         r3, [r3, #8]
  01100	e2833018	 add         r3, r3, #0x18
  01104	e5832000	 str         r2, [r3]

; 393  : 			SETREG32(&g_pGPIORegs[2]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_64));  // unmask IRQ

  01108	e59f312c	 ldr         r3, [pc, #0x12C]
  0110c	e5933008	 ldr         r3, [r3, #8]
  01110	e283101c	 add         r1, r3, #0x1C
  01114	e59d3004	 ldr         r3, [sp, #4]
  01118	e24320e0	 sub         r2, r3, #0xE0
  0111c	e3a03001	 mov         r3, #1
  01120	e1a02213	 mov         r2, r3, lsl r2
  01124	e5913000	 ldr         r3, [r1]
  01128	e1832002	 orr         r2, r3, r2
  0112c	e59f3108	 ldr         r3, [pc, #0x108]
  01130	e5933008	 ldr         r3, [r3, #8]
  01134	e283301c	 add         r3, r3, #0x1C
  01138	e5832000	 str         r2, [r3]
  0113c	ea000029	 b           |$LN2@OALIntrDon|
  01140		 |$LN3@OALIntrDon|

; 394  :         } else if (irq < IRQ_GPIO_128) {

  01140	e59d3004	 ldr         r3, [sp, #4]
  01144	e3530e12	 cmp         r3, #0x12, 28
  01148	2a000026	 bcs         |$LN1@OALIntrDon|

; 395  : 			OALMSG(OAL_INTR, (L"OALIntrDoneIrqs(Irq GPIO4 %d)\r\n", irq - IRQ_GPIO_96));

  0114c	e59f30e4	 ldr         r3, [pc, #0xE4]
  01150	e5933440	 ldr         r3, [r3, #0x440]
  01154	e3130901	 tst         r3, #1, 18
  01158	0a000006	 beq         |$LN25@OALIntrDon|
  0115c	e59d3004	 ldr         r3, [sp, #4]
  01160	e2431c01	 sub         r1, r3, #1, 24
  01164	e59f00d8	 ldr         r0, [pc, #0xD8]
  01168	eb000000	 bl          NKDbgPrintfW
  0116c	e3a03001	 mov         r3, #1
  01170	e58d3014	 str         r3, [sp, #0x14]
  01174	ea000001	 b           |$LN26@OALIntrDon|
  01178		 |$LN25@OALIntrDon|
  01178	e3a03000	 mov         r3, #0
  0117c	e58d3014	 str         r3, [sp, #0x14]
  01180		 |$LN26@OALIntrDon|

; 396  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR1, 1 << (IRQ_GPIO4_MPU-32));

  01180	e59f30b8	 ldr         r3, [pc, #0xB8]
  01184	e5933000	 ldr         r3, [r3]
  01188	e28320a8	 add         r2, r3, #0xA8
  0118c	e3a03001	 mov         r3, #1
  01190	e5823000	 str         r3, [r2]

; 397  : 			OUTREG32(&g_pGPIORegs[3]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_96));  // clear IRQ

  01194	e59d3004	 ldr         r3, [sp, #4]
  01198	e2432c01	 sub         r2, r3, #1, 24
  0119c	e3a03001	 mov         r3, #1
  011a0	e1a02213	 mov         r2, r3, lsl r2
  011a4	e59f3090	 ldr         r3, [pc, #0x90]
  011a8	e593300c	 ldr         r3, [r3, #0xC]
  011ac	e2833018	 add         r3, r3, #0x18
  011b0	e5832000	 str         r2, [r3]

; 398  : 			SETREG32(&g_pGPIORegs[3]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_96));  // unmask IRQ

  011b4	e59f3080	 ldr         r3, [pc, #0x80]
  011b8	e593300c	 ldr         r3, [r3, #0xC]
  011bc	e283101c	 add         r1, r3, #0x1C
  011c0	e59d3004	 ldr         r3, [sp, #4]
  011c4	e2432c01	 sub         r2, r3, #1, 24
  011c8	e3a03001	 mov         r3, #1
  011cc	e1a02213	 mov         r2, r3, lsl r2
  011d0	e5913000	 ldr         r3, [r1]
  011d4	e1832002	 orr         r2, r3, r2
  011d8	e59f305c	 ldr         r3, [pc, #0x5C]
  011dc	e593300c	 ldr         r3, [r3, #0xC]
  011e0	e283301c	 add         r3, r3, #0x1C
  011e4	e5832000	 str         r2, [r3]
  011e8		 |$LN1@OALIntrDon|
  011e8		 |$LN2@OALIntrDon|
  011e8		 |$LN4@OALIntrDon|
  011e8		 |$LN6@OALIntrDon|
  011e8		 |$LN8@OALIntrDon|
  011e8		 |$LN10@OALIntrDon|
  011e8		 |$LN12@OALIntrDon|

; 399  :         } 
; 400  :     }

  011e8	eaffff22	 b           |$LN15@OALIntrDon|
  011ec		 |$LN14@OALIntrDon|

; 401  :     OALMSG(OAL_INTR&&OAL_VERBOSE, (L"-OALIntrDoneIrq\r\n"));

  011ec	e59f3044	 ldr         r3, [pc, #0x44]
  011f0	e5933440	 ldr         r3, [r3, #0x440]
  011f4	e3130901	 tst         r3, #1, 18
  011f8	0a000008	 beq         |$LN27@OALIntrDon|
  011fc	e59f3034	 ldr         r3, [pc, #0x34]
  01200	e5933440	 ldr         r3, [r3, #0x440]
  01204	e3130902	 tst         r3, #2, 18
  01208	0a000004	 beq         |$LN27@OALIntrDon|
  0120c	e59f0020	 ldr         r0, [pc, #0x20]
  01210	eb000000	 bl          NKDbgPrintfW
  01214	e3a03001	 mov         r3, #1
  01218	e58d3018	 str         r3, [sp, #0x18]
  0121c	ea000001	 b           |$LN28@OALIntrDon|
  01220		 |$LN27@OALIntrDon|
  01220	e3a03000	 mov         r3, #0
  01224	e58d3018	 str         r3, [sp, #0x18]
  01228		 |$LN28@OALIntrDon|

; 402  : }

  01228	e28dd01c	 add         sp, sp, #0x1C
  0122c	e89d6000	 ldmia       sp, {sp, lr}
  01230	e12fff1e	 bx          lr
  01234		 |$LN32@OALIntrDon|
  01234		 |$LN33@OALIntrDon|
  01234	00000000	 DCD         |??_C@_1CE@EOLKJDEL@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AA?$AN?$AA?6?$AA?$AA@|
  01238		 |$LN34@OALIntrDon|
  01238	00000000	 DCD         |dpCurSettings|
  0123c		 |$LN35@OALIntrDon|
  0123c	00000000	 DCD         |g_pGPIORegs|
  01240		 |$LN36@OALIntrDon|
  01240	00000000	 DCD         |g_pIntcRegs|
  01244		 |$LN37@OALIntrDon|
  01244	00000000	 DCD         |??_C@_1EA@KCEDHCMK@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01248		 |$LN38@OALIntrDon|
  01248	00000000	 DCD         |??_C@_1EA@FPLKIKLP@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0124c		 |$LN39@OALIntrDon|
  0124c	00000000	 DCD         |??_C@_1EA@PBNCBLCO@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01250		 |$LN40@OALIntrDon|
  01250	00000000	 DCD         |??_C@_1EA@NIBKKPNM@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01254		 |$M46076|

			 ENDP  ; |OALIntrDoneIrqs|

	EXPORT	|??_C@_1DO@PPLILHPG@?$AAu?$AAn?$AAd?$AAe?$AAf?$AAi?$AAn?$AAe?$AAd?$AA?5?$AAI?$AAR?$AAQ?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AA?9?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@PAAKOGNH@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAT?$AAr?$AAa?$AAn?$AAs?$AAl?$AAa?$AAt?$AAe?$AAI?$AAr?$AAq?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@HFDCNIPJ@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAU?$AAN?$AAK?$AAN?$AAO?$AAW?$AAN?$AAN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@NLILHIEP@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@FILLMMOB@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@LKGHNHJI@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@FFKFLMKG@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@KMJGDKHO@?$AAG?$AAP?$AAI?$AAO?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAi?$AAr?$AAq?$AA?5?$AA?9?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@LOJCAHKF@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|OEMInterruptHandler|
	IMPORT	|OALIntrTranslateIrq|
	IMPORT	|OALTimerIntrHandler|

  00028			 AREA	 |.pdata|, PDATA
|$T46119| DCD	|$LN69@OEMInterru|
	DCD	0x4001b302

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@PPLILHPG@?$AAu?$AAn?$AAd?$AAe?$AAf?$AAi?$AAn?$AAe?$AAd?$AA?5?$AAI?$AAR?$AAQ?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AA?9?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "u"
	DCB	0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "I", 0x0, "R", 0x0, "Q"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@PAAKOGNH@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAT?$AAr?$AAa?$AAn?$AAs?$AAl?$AAa?$AAt?$AAe?$AAI?$AAr?$AAq?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "l"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "I", 0x0, "r", 0x0, "q"
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, "=", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@HFDCNIPJ@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAU?$AAN?$AAK?$AAN?$AAO?$AAW?$AAN?$AAN@| DCB "O"
	DCB	0x0, "E", 0x0, "M", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, "(", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "U"
	DCB	0x0, "N", 0x0, "K", 0x0, "N", 0x0, "O", 0x0, "W", 0x0, "N"
	DCB	0x0, "N", 0x0, "O", 0x0, "N", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@NLILHIEP@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "E", 0x0, "M", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, "(", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@FILLMMOB@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?$CJ?$AA?$AN?$AA?6@| DCB "O"
	DCB	0x0, "E", 0x0, "M", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, "(", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G"
	DCB	0x0, "P", 0x0, "I", 0x0, "O", 0x0, "4", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@LKGHNHJI@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?$CJ?$AA?$AN?$AA?6@| DCB "O"
	DCB	0x0, "E", 0x0, "M", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, "(", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G"
	DCB	0x0, "P", 0x0, "I", 0x0, "O", 0x0, "3", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@FFKFLMKG@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?$CJ?$AA?$AN?$AA?6@| DCB "O"
	DCB	0x0, "E", 0x0, "M", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, "(", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G"
	DCB	0x0, "P", 0x0, "I", 0x0, "O", 0x0, "2", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@KMJGDKHO@?$AAG?$AAP?$AAI?$AAO?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAi?$AAr?$AAq?$AA?5?$AA?9?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "G"
	DCB	0x0, "P", 0x0, "I", 0x0, "O", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, " ", 0x0, "i", 0x0, "r", 0x0, "q", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@LOJCAHKF@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?$CJ?$AA?$AN?$AA?6@| DCB "O"
	DCB	0x0, "E", 0x0, "M", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, "(", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G"
	DCB	0x0, "P", 0x0, "I", 0x0, "O", 0x0, "1", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  01254			 AREA	 |.text|, CODE, ARM

  01254		 |OEMInterruptHandler| PROC

; 411  : {

  01254		 |$LN69@OEMInterru|
  01254	e52de004	 str         lr, [sp, #-4]!
  01258	e24dd050	 sub         sp, sp, #0x50
  0125c		 |$M46116|

; 412  :     UINT32 irq = OAL_INTR_IRQ_UNDEFINED;

  0125c	e3e03000	 mvn         r3, #0
  01260	e58d3008	 str         r3, [sp, #8]

; 413  :     UINT32 sysIntr = SYSINTR_NOP;

  01264	e3a03000	 mov         r3, #0
  01268	e58d3000	 str         r3, [sp]

; 414  :     UINT32 data, mask;
; 415  :     
; 416  :     // Get pending interrupt
; 417  :     irq = INREG32(&g_pIntcRegs->ulINTC_SIR_IRQ);

  0126c	e59f3678	 ldr         r3, [pc, #0x678]
  01270	e5933000	 ldr         r3, [r3]
  01274	e2833040	 add         r3, r3, #0x40
  01278	e5933000	 ldr         r3, [r3]
  0127c	e58d3008	 str         r3, [sp, #8]

; 418  : 
; 419  :     // Check if this is timer IRQ
; 420  :     if (irq == g_oalTimerIrq) {

  01280	e59d2008	 ldr         r2, [sp, #8]
  01284	e59f3690	 ldr         r3, [pc, #0x690]
  01288	e5933000	 ldr         r3, [r3]
  0128c	e1520003	 cmp         r2, r3
  01290	1a000007	 bne         |$LN38@OEMInterru|

; 421  :         // Call timer interrupt handler
; 422  :         sysIntr = OALTimerIntrHandler();

  01294	eb000000	 bl          OALTimerIntrHandler
  01298	e58d0014	 str         r0, [sp, #0x14]
  0129c	e59d3014	 ldr         r3, [sp, #0x14]
  012a0	e58d3000	 str         r3, [sp]

; 423  :         // We are done with interrupt
; 424  :         OALIntrDoneIrqs(1, &irq);

  012a4	e28d1008	 add         r1, sp, #8
  012a8	e3a00001	 mov         r0, #1
  012ac	eb000000	 bl          OALIntrDoneIrqs
  012b0	ea00017e	 b           |$LN37@OEMInterru|
  012b4		 |$LN38@OEMInterru|

; 425  : 
; 426  :     } 
; 427  : 	else if (irq != OAL_INTR_IRQ_UNDEFINED) 

  012b4	e59d3008	 ldr         r3, [sp, #8]
  012b8	e3730001	 cmn         r3, #1
  012bc	0a000178	 beq         |$LN36@OEMInterru|

; 428  : 	{
; 429  : #ifdef OAL_ILTIMING
; 430  :     if (g_oalILT.active) g_oalILT.interrupts++;
; 431  : #endif
; 432  : 
; 433  :         if (irq == IRQ_GPIO1_MPU) {

  012c0	e59d3008	 ldr         r3, [sp, #8]
  012c4	e353001d	 cmp         r3, #0x1D
  012c8	1a00003d	 bne         |$LN35@OEMInterru|

; 434  : 			OALMSG(OAL_INTR, (L"OEMInterruptHandler(Irq GPIO1)\r\n"));

  012cc	e59f3624	 ldr         r3, [pc, #0x624]
  012d0	e5933440	 ldr         r3, [r3, #0x440]
  012d4	e3130901	 tst         r3, #1, 18
  012d8	0a000004	 beq         |$LN41@OEMInterru|
  012dc	e59f0634	 ldr         r0, [pc, #0x634]
  012e0	eb000000	 bl          NKDbgPrintfW
  012e4	e3a03001	 mov         r3, #1
  012e8	e58d3018	 str         r3, [sp, #0x18]
  012ec	ea000001	 b           |$LN42@OEMInterru|
  012f0		 |$LN41@OEMInterru|
  012f0	e3a03000	 mov         r3, #0
  012f4	e58d3018	 str         r3, [sp, #0x18]
  012f8		 |$LN42@OEMInterru|

; 435  : 			irq = IRQ_GPIO_0;

  012f8	e3a030a0	 mov         r3, #0xA0
  012fc	e58d3008	 str         r3, [sp, #8]

; 436  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET0, 1 << IRQ_GPIO1_MPU);

  01300	e59f35e4	 ldr         r3, [pc, #0x5E4]
  01304	e5933000	 ldr         r3, [r3]
  01308	e283208c	 add         r2, r3, #0x8C
  0130c	e3a03202	 mov         r3, #2, 4
  01310	e5823000	 str         r3, [r2]

; 437  : 			// If it is interrupt from GPIOx, find which one, mask and clear it..
; 438  : 			if ((data = INREG32(&g_pGPIORegs[0]->ulGPIO_IRQSTATUS1)) != 0) {

  01314	e59f35ec	 ldr         r3, [pc, #0x5EC]
  01318	e5933000	 ldr         r3, [r3]
  0131c	e2833018	 add         r3, r3, #0x18
  01320	e5933000	 ldr         r3, [r3]
  01324	e58d300c	 str         r3, [sp, #0xC]
  01328	e59d300c	 ldr         r3, [sp, #0xC]
  0132c	e3530000	 cmp         r3, #0
  01330	0a000022	 beq         |$LN34@OEMInterru|

; 439  : 				for (mask = 1; mask != 0; mask <<= 1, irq++) {

  01334	e3a03001	 mov         r3, #1
  01338	e58d3004	 str         r3, [sp, #4]
  0133c	ea000005	 b           |$LN33@OEMInterru|
  01340		 |$LN32@OEMInterru|
  01340	e59d3004	 ldr         r3, [sp, #4]
  01344	e1a03083	 mov         r3, r3, lsl #1
  01348	e58d3004	 str         r3, [sp, #4]
  0134c	e59d3008	 ldr         r3, [sp, #8]
  01350	e2833001	 add         r3, r3, #1
  01354	e58d3008	 str         r3, [sp, #8]
  01358		 |$LN33@OEMInterru|
  01358	e59d3004	 ldr         r3, [sp, #4]
  0135c	e3530000	 cmp         r3, #0
  01360	0a000005	 beq         |$LN31@OEMInterru|

; 440  : 					if ((mask & data) != 0) break;

  01364	e59d2004	 ldr         r2, [sp, #4]
  01368	e59d300c	 ldr         r3, [sp, #0xC]
  0136c	e1120003	 tst         r2, r3
  01370	0a000000	 beq         |$LN30@OEMInterru|
  01374	ea000000	 b           |$LN31@OEMInterru|
  01378		 |$LN30@OEMInterru|

; 441  : 				}

  01378	eafffff0	 b           |$LN32@OEMInterru|
  0137c		 |$LN31@OEMInterru|

; 442  : 				OUTREG32(&g_pGPIORegs[0]->ulGPIO_CLEARIRQENABLE1, mask);  // mask IRQ

  0137c	e59f3584	 ldr         r3, [pc, #0x584]
  01380	e5933000	 ldr         r3, [r3]
  01384	e2832060	 add         r2, r3, #0x60
  01388	e59d3004	 ldr         r3, [sp, #4]
  0138c	e5823000	 str         r3, [r2]

; 443  : 				OALMSG(OAL_INTR, (L"GPIO Interrupt irq - %d\r\n",irq ));

  01390	e59f3560	 ldr         r3, [pc, #0x560]
  01394	e5933440	 ldr         r3, [r3, #0x440]
  01398	e3130901	 tst         r3, #1, 18
  0139c	0a000005	 beq         |$LN43@OEMInterru|
  013a0	e59d1008	 ldr         r1, [sp, #8]
  013a4	e59f0558	 ldr         r0, [pc, #0x558]
  013a8	eb000000	 bl          NKDbgPrintfW
  013ac	e3a03001	 mov         r3, #1
  013b0	e58d301c	 str         r3, [sp, #0x1C]
  013b4	ea000001	 b           |$LN44@OEMInterru|
  013b8		 |$LN43@OEMInterru|
  013b8	e3a03000	 mov         r3, #0
  013bc	e58d301c	 str         r3, [sp, #0x1C]
  013c0		 |$LN44@OEMInterru|
  013c0		 |$LN34@OEMInterru|

; 444  : 			}

  013c0	ea000124	 b           |$LN29@OEMInterru|
  013c4		 |$LN35@OEMInterru|

; 445  :         } else if (irq == IRQ_GPIO2_MPU) {

  013c4	e59d3008	 ldr         r3, [sp, #8]
  013c8	e353001e	 cmp         r3, #0x1E
  013cc	1a00003d	 bne         |$LN28@OEMInterru|

; 446  : 			OALMSG(OAL_INTR, (L"OEMInterruptHandler(Irq GPIO2)\r\n"));

  013d0	e59f3520	 ldr         r3, [pc, #0x520]
  013d4	e5933440	 ldr         r3, [r3, #0x440]
  013d8	e3130901	 tst         r3, #1, 18
  013dc	0a000004	 beq         |$LN45@OEMInterru|
  013e0	e59f052c	 ldr         r0, [pc, #0x52C]
  013e4	eb000000	 bl          NKDbgPrintfW
  013e8	e3a03001	 mov         r3, #1
  013ec	e58d3020	 str         r3, [sp, #0x20]
  013f0	ea000001	 b           |$LN46@OEMInterru|
  013f4		 |$LN45@OEMInterru|
  013f4	e3a03000	 mov         r3, #0
  013f8	e58d3020	 str         r3, [sp, #0x20]
  013fc		 |$LN46@OEMInterru|

; 447  : 			irq = IRQ_GPIO_32;

  013fc	e3a030c0	 mov         r3, #0xC0
  01400	e58d3008	 str         r3, [sp, #8]

; 448  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET0, 1 << IRQ_GPIO2_MPU);

  01404	e59f34e0	 ldr         r3, [pc, #0x4E0]
  01408	e5933000	 ldr         r3, [r3]
  0140c	e283208c	 add         r2, r3, #0x8C
  01410	e3a03101	 mov         r3, #1, 2
  01414	e5823000	 str         r3, [r2]

; 449  : 			// If it is interrupt from GPIOx, find which one, mask  it..
; 450  : 			if ((data = INREG32(&g_pGPIORegs[1]->ulGPIO_IRQSTATUS1)) != 0) {

  01418	e59f34e8	 ldr         r3, [pc, #0x4E8]
  0141c	e5933004	 ldr         r3, [r3, #4]
  01420	e2833018	 add         r3, r3, #0x18
  01424	e5933000	 ldr         r3, [r3]
  01428	e58d300c	 str         r3, [sp, #0xC]
  0142c	e59d300c	 ldr         r3, [sp, #0xC]
  01430	e3530000	 cmp         r3, #0
  01434	0a000022	 beq         |$LN27@OEMInterru|

; 451  : 				for (mask = 1; mask != 0; mask <<= 1, irq++) {

  01438	e3a03001	 mov         r3, #1
  0143c	e58d3004	 str         r3, [sp, #4]
  01440	ea000005	 b           |$LN26@OEMInterru|
  01444		 |$LN25@OEMInterru|
  01444	e59d3004	 ldr         r3, [sp, #4]
  01448	e1a03083	 mov         r3, r3, lsl #1
  0144c	e58d3004	 str         r3, [sp, #4]
  01450	e59d3008	 ldr         r3, [sp, #8]
  01454	e2833001	 add         r3, r3, #1
  01458	e58d3008	 str         r3, [sp, #8]
  0145c		 |$LN26@OEMInterru|
  0145c	e59d3004	 ldr         r3, [sp, #4]
  01460	e3530000	 cmp         r3, #0
  01464	0a000005	 beq         |$LN24@OEMInterru|

; 452  : 					if ((mask & data) != 0) break;

  01468	e59d2004	 ldr         r2, [sp, #4]
  0146c	e59d300c	 ldr         r3, [sp, #0xC]
  01470	e1120003	 tst         r2, r3
  01474	0a000000	 beq         |$LN23@OEMInterru|
  01478	ea000000	 b           |$LN24@OEMInterru|
  0147c		 |$LN23@OEMInterru|

; 453  : 				}

  0147c	eafffff0	 b           |$LN25@OEMInterru|
  01480		 |$LN24@OEMInterru|

; 454  : 				OUTREG32(&g_pGPIORegs[1]->ulGPIO_CLEARIRQENABLE1, mask);  // mask IRQ

  01480	e59f3480	 ldr         r3, [pc, #0x480]
  01484	e5933004	 ldr         r3, [r3, #4]
  01488	e2832060	 add         r2, r3, #0x60
  0148c	e59d3004	 ldr         r3, [sp, #4]
  01490	e5823000	 str         r3, [r2]

; 455  : 				OALMSG(OAL_INTR, (L"GPIO Interrupt irq - %d\r\n",irq ));

  01494	e59f345c	 ldr         r3, [pc, #0x45C]
  01498	e5933440	 ldr         r3, [r3, #0x440]
  0149c	e3130901	 tst         r3, #1, 18
  014a0	0a000005	 beq         |$LN47@OEMInterru|
  014a4	e59d1008	 ldr         r1, [sp, #8]
  014a8	e59f0454	 ldr         r0, [pc, #0x454]
  014ac	eb000000	 bl          NKDbgPrintfW
  014b0	e3a03001	 mov         r3, #1
  014b4	e58d3024	 str         r3, [sp, #0x24]
  014b8	ea000001	 b           |$LN48@OEMInterru|
  014bc		 |$LN47@OEMInterru|
  014bc	e3a03000	 mov         r3, #0
  014c0	e58d3024	 str         r3, [sp, #0x24]
  014c4		 |$LN48@OEMInterru|
  014c4		 |$LN27@OEMInterru|

; 456  : 			}

  014c4	ea0000e3	 b           |$LN22@OEMInterru|
  014c8		 |$LN28@OEMInterru|

; 457  :         } else if (irq == IRQ_GPIO3_MPU) {

  014c8	e59d3008	 ldr         r3, [sp, #8]
  014cc	e353001f	 cmp         r3, #0x1F
  014d0	1a00003d	 bne         |$LN21@OEMInterru|

; 458  : 			OALMSG(OAL_INTR, (L"OEMInterruptHandler(Irq GPIO3)\r\n"));

  014d4	e59f341c	 ldr         r3, [pc, #0x41C]
  014d8	e5933440	 ldr         r3, [r3, #0x440]
  014dc	e3130901	 tst         r3, #1, 18
  014e0	0a000004	 beq         |$LN49@OEMInterru|
  014e4	e59f0424	 ldr         r0, [pc, #0x424]
  014e8	eb000000	 bl          NKDbgPrintfW
  014ec	e3a03001	 mov         r3, #1
  014f0	e58d3028	 str         r3, [sp, #0x28]
  014f4	ea000001	 b           |$LN50@OEMInterru|
  014f8		 |$LN49@OEMInterru|
  014f8	e3a03000	 mov         r3, #0
  014fc	e58d3028	 str         r3, [sp, #0x28]
  01500		 |$LN50@OEMInterru|

; 459  : 			irq = IRQ_GPIO_64;

  01500	e3a030e0	 mov         r3, #0xE0
  01504	e58d3008	 str         r3, [sp, #8]

; 460  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET0, 1 << IRQ_GPIO3_MPU);

  01508	e59f33dc	 ldr         r3, [pc, #0x3DC]
  0150c	e5933000	 ldr         r3, [r3]
  01510	e283208c	 add         r2, r3, #0x8C
  01514	e3a03102	 mov         r3, #2, 2
  01518	e5823000	 str         r3, [r2]

; 461  : 			// If it is interrupt from GPIOx, find which one, mask  it..
; 462  : 			if ((data = INREG32(&g_pGPIORegs[2]->ulGPIO_IRQSTATUS1)) != 0) {

  0151c	e59f33e4	 ldr         r3, [pc, #0x3E4]
  01520	e5933008	 ldr         r3, [r3, #8]
  01524	e2833018	 add         r3, r3, #0x18
  01528	e5933000	 ldr         r3, [r3]
  0152c	e58d300c	 str         r3, [sp, #0xC]
  01530	e59d300c	 ldr         r3, [sp, #0xC]
  01534	e3530000	 cmp         r3, #0
  01538	0a000022	 beq         |$LN20@OEMInterru|

; 463  : 				for (mask = 1; mask != 0; mask <<= 1, irq++) {

  0153c	e3a03001	 mov         r3, #1
  01540	e58d3004	 str         r3, [sp, #4]
  01544	ea000005	 b           |$LN19@OEMInterru|
  01548		 |$LN18@OEMInterru|
  01548	e59d3004	 ldr         r3, [sp, #4]
  0154c	e1a03083	 mov         r3, r3, lsl #1
  01550	e58d3004	 str         r3, [sp, #4]
  01554	e59d3008	 ldr         r3, [sp, #8]
  01558	e2833001	 add         r3, r3, #1
  0155c	e58d3008	 str         r3, [sp, #8]
  01560		 |$LN19@OEMInterru|
  01560	e59d3004	 ldr         r3, [sp, #4]
  01564	e3530000	 cmp         r3, #0
  01568	0a000005	 beq         |$LN17@OEMInterru|

; 464  : 					if ((mask & data) != 0) break;

  0156c	e59d2004	 ldr         r2, [sp, #4]
  01570	e59d300c	 ldr         r3, [sp, #0xC]
  01574	e1120003	 tst         r2, r3
  01578	0a000000	 beq         |$LN16@OEMInterru|
  0157c	ea000000	 b           |$LN17@OEMInterru|
  01580		 |$LN16@OEMInterru|

; 465  : 				}

  01580	eafffff0	 b           |$LN18@OEMInterru|
  01584		 |$LN17@OEMInterru|

; 466  : 				OUTREG32(&g_pGPIORegs[2]->ulGPIO_CLEARIRQENABLE1, mask);  // mask IRQ

  01584	e59f337c	 ldr         r3, [pc, #0x37C]
  01588	e5933008	 ldr         r3, [r3, #8]
  0158c	e2832060	 add         r2, r3, #0x60
  01590	e59d3004	 ldr         r3, [sp, #4]
  01594	e5823000	 str         r3, [r2]

; 467  : 				OALMSG(OAL_INTR, (L"GPIO Interrupt irq - %d\r\n",irq ));

  01598	e59f3358	 ldr         r3, [pc, #0x358]
  0159c	e5933440	 ldr         r3, [r3, #0x440]
  015a0	e3130901	 tst         r3, #1, 18
  015a4	0a000005	 beq         |$LN51@OEMInterru|
  015a8	e59d1008	 ldr         r1, [sp, #8]
  015ac	e59f0350	 ldr         r0, [pc, #0x350]
  015b0	eb000000	 bl          NKDbgPrintfW
  015b4	e3a03001	 mov         r3, #1
  015b8	e58d302c	 str         r3, [sp, #0x2C]
  015bc	ea000001	 b           |$LN52@OEMInterru|
  015c0		 |$LN51@OEMInterru|
  015c0	e3a03000	 mov         r3, #0
  015c4	e58d302c	 str         r3, [sp, #0x2C]
  015c8		 |$LN52@OEMInterru|
  015c8		 |$LN20@OEMInterru|

; 468  : 			}

  015c8	ea0000a2	 b           |$LN15@OEMInterru|
  015cc		 |$LN21@OEMInterru|

; 469  :         } else if (irq == IRQ_GPIO4_MPU) {

  015cc	e59d3008	 ldr         r3, [sp, #8]
  015d0	e3530020	 cmp         r3, #0x20
  015d4	1a00003d	 bne         |$LN14@OEMInterru|

; 470  : 			OALMSG(OAL_INTR, (L"OEMInterruptHandler(Irq GPIO4)\r\n"));

  015d8	e59f3318	 ldr         r3, [pc, #0x318]
  015dc	e5933440	 ldr         r3, [r3, #0x440]
  015e0	e3130901	 tst         r3, #1, 18
  015e4	0a000004	 beq         |$LN53@OEMInterru|
  015e8	e59f031c	 ldr         r0, [pc, #0x31C]
  015ec	eb000000	 bl          NKDbgPrintfW
  015f0	e3a03001	 mov         r3, #1
  015f4	e58d3030	 str         r3, [sp, #0x30]
  015f8	ea000001	 b           |$LN54@OEMInterru|
  015fc		 |$LN53@OEMInterru|
  015fc	e3a03000	 mov         r3, #0
  01600	e58d3030	 str         r3, [sp, #0x30]
  01604		 |$LN54@OEMInterru|

; 471  : 			irq = IRQ_GPIO_96;

  01604	e3a03c01	 mov         r3, #1, 24
  01608	e58d3008	 str         r3, [sp, #8]

; 472  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET1, 1 << (IRQ_GPIO4_MPU - 32));

  0160c	e59f32d8	 ldr         r3, [pc, #0x2D8]
  01610	e5933000	 ldr         r3, [r3]
  01614	e28320ac	 add         r2, r3, #0xAC
  01618	e3a03001	 mov         r3, #1
  0161c	e5823000	 str         r3, [r2]

; 473  : 			// If it is interrupt from GPIOx, find which one, mask it..
; 474  : 			if ((data = INREG32(&g_pGPIORegs[3]->ulGPIO_IRQSTATUS1)) != 0) {

  01620	e59f32e0	 ldr         r3, [pc, #0x2E0]
  01624	e593300c	 ldr         r3, [r3, #0xC]
  01628	e2833018	 add         r3, r3, #0x18
  0162c	e5933000	 ldr         r3, [r3]
  01630	e58d300c	 str         r3, [sp, #0xC]
  01634	e59d300c	 ldr         r3, [sp, #0xC]
  01638	e3530000	 cmp         r3, #0
  0163c	0a000022	 beq         |$LN13@OEMInterru|

; 475  : 				for (mask = 1; mask != 0; mask <<= 1, irq++) {

  01640	e3a03001	 mov         r3, #1
  01644	e58d3004	 str         r3, [sp, #4]
  01648	ea000005	 b           |$LN12@OEMInterru|
  0164c		 |$LN11@OEMInterru|
  0164c	e59d3004	 ldr         r3, [sp, #4]
  01650	e1a03083	 mov         r3, r3, lsl #1
  01654	e58d3004	 str         r3, [sp, #4]
  01658	e59d3008	 ldr         r3, [sp, #8]
  0165c	e2833001	 add         r3, r3, #1
  01660	e58d3008	 str         r3, [sp, #8]
  01664		 |$LN12@OEMInterru|
  01664	e59d3004	 ldr         r3, [sp, #4]
  01668	e3530000	 cmp         r3, #0
  0166c	0a000005	 beq         |$LN10@OEMInterru|

; 476  : 					if ((mask & data) != 0) break;

  01670	e59d2004	 ldr         r2, [sp, #4]
  01674	e59d300c	 ldr         r3, [sp, #0xC]
  01678	e1120003	 tst         r2, r3
  0167c	0a000000	 beq         |$LN9@OEMInterru|
  01680	ea000000	 b           |$LN10@OEMInterru|
  01684		 |$LN9@OEMInterru|

; 477  : 				}

  01684	eafffff0	 b           |$LN11@OEMInterru|
  01688		 |$LN10@OEMInterru|

; 478  : 				OUTREG32(&g_pGPIORegs[3]->ulGPIO_CLEARIRQENABLE1, mask);  // mask IRQ

  01688	e59f3278	 ldr         r3, [pc, #0x278]
  0168c	e593300c	 ldr         r3, [r3, #0xC]
  01690	e2832060	 add         r2, r3, #0x60
  01694	e59d3004	 ldr         r3, [sp, #4]
  01698	e5823000	 str         r3, [r2]

; 479  : 				OALMSG(OAL_INTR, (L"GPIO Interrupt irq - %d\r\n",irq ));

  0169c	e59f3254	 ldr         r3, [pc, #0x254]
  016a0	e5933440	 ldr         r3, [r3, #0x440]
  016a4	e3130901	 tst         r3, #1, 18
  016a8	0a000005	 beq         |$LN55@OEMInterru|
  016ac	e59d1008	 ldr         r1, [sp, #8]
  016b0	e59f024c	 ldr         r0, [pc, #0x24C]
  016b4	eb000000	 bl          NKDbgPrintfW
  016b8	e3a03001	 mov         r3, #1
  016bc	e58d3034	 str         r3, [sp, #0x34]
  016c0	ea000001	 b           |$LN56@OEMInterru|
  016c4		 |$LN55@OEMInterru|
  016c4	e3a03000	 mov         r3, #0
  016c8	e58d3034	 str         r3, [sp, #0x34]
  016cc		 |$LN56@OEMInterru|
  016cc		 |$LN13@OEMInterru|

; 480  : 			}

  016cc	ea000061	 b           |$LN8@OEMInterru|
  016d0		 |$LN14@OEMInterru|

; 481  :         } else if (irq < 32) {

  016d0	e59d3008	 ldr         r3, [sp, #8]
  016d4	e3530020	 cmp         r3, #0x20
  016d8	2a000018	 bcs         |$LN7@OEMInterru|

; 482  : 			OALMSG(OAL_INTR, (L"OEMInterruptHandler(Irq %d)\r\n", irq));

  016dc	e59f3214	 ldr         r3, [pc, #0x214]
  016e0	e5933440	 ldr         r3, [r3, #0x440]
  016e4	e3130901	 tst         r3, #1, 18
  016e8	0a000005	 beq         |$LN57@OEMInterru|
  016ec	e59d1008	 ldr         r1, [sp, #8]
  016f0	e59f0208	 ldr         r0, [pc, #0x208]
  016f4	eb000000	 bl          NKDbgPrintfW
  016f8	e3a03001	 mov         r3, #1
  016fc	e58d3038	 str         r3, [sp, #0x38]
  01700	ea000001	 b           |$LN58@OEMInterru|
  01704		 |$LN57@OEMInterru|
  01704	e3a03000	 mov         r3, #0
  01708	e58d3038	 str         r3, [sp, #0x38]
  0170c		 |$LN58@OEMInterru|

; 483  : 			SETPORT32(&g_pIntcRegs->ulINTC_MIR0, 1 << irq);

  0170c	e59f31d8	 ldr         r3, [pc, #0x1D8]
  01710	e5933000	 ldr         r3, [r3]
  01714	e2831084	 add         r1, r3, #0x84
  01718	e59d2008	 ldr         r2, [sp, #8]
  0171c	e3a03001	 mov         r3, #1
  01720	e1a02213	 mov         r2, r3, lsl r2
  01724	e5913000	 ldr         r3, [r1]
  01728	e1832002	 orr         r2, r3, r2
  0172c	e59f31b8	 ldr         r3, [pc, #0x1B8]
  01730	e5933000	 ldr         r3, [r3]
  01734	e2833084	 add         r3, r3, #0x84
  01738	e5832000	 str         r2, [r3]
  0173c	ea000045	 b           |$LN6@OEMInterru|
  01740		 |$LN7@OEMInterru|

; 484  : 		} else if (irq < 64) {

  01740	e59d3008	 ldr         r3, [sp, #8]
  01744	e3530040	 cmp         r3, #0x40
  01748	2a000019	 bcs         |$LN5@OEMInterru|

; 485  : 			OALMSG(OAL_INTR, (L"OEMInterruptHandler(Irq %d)\r\n", irq));

  0174c	e59f31a4	 ldr         r3, [pc, #0x1A4]
  01750	e5933440	 ldr         r3, [r3, #0x440]
  01754	e3130901	 tst         r3, #1, 18
  01758	0a000005	 beq         |$LN59@OEMInterru|
  0175c	e59d1008	 ldr         r1, [sp, #8]
  01760	e59f0198	 ldr         r0, [pc, #0x198]
  01764	eb000000	 bl          NKDbgPrintfW
  01768	e3a03001	 mov         r3, #1
  0176c	e58d303c	 str         r3, [sp, #0x3C]
  01770	ea000001	 b           |$LN60@OEMInterru|
  01774		 |$LN59@OEMInterru|
  01774	e3a03000	 mov         r3, #0
  01778	e58d303c	 str         r3, [sp, #0x3C]
  0177c		 |$LN60@OEMInterru|

; 486  : 			SETPORT32(&g_pIntcRegs->ulINTC_MIR1, 1 << (irq - 32));

  0177c	e59f3168	 ldr         r3, [pc, #0x168]
  01780	e5933000	 ldr         r3, [r3]
  01784	e28310a4	 add         r1, r3, #0xA4
  01788	e59d3008	 ldr         r3, [sp, #8]
  0178c	e2432020	 sub         r2, r3, #0x20
  01790	e3a03001	 mov         r3, #1
  01794	e1a02213	 mov         r2, r3, lsl r2
  01798	e5913000	 ldr         r3, [r1]
  0179c	e1832002	 orr         r2, r3, r2
  017a0	e59f3144	 ldr         r3, [pc, #0x144]
  017a4	e5933000	 ldr         r3, [r3]
  017a8	e28330a4	 add         r3, r3, #0xA4
  017ac	e5832000	 str         r2, [r3]
  017b0	ea000028	 b           |$LN4@OEMInterru|
  017b4		 |$LN5@OEMInterru|

; 487  : 		} else if (irq < 96) {

  017b4	e59d3008	 ldr         r3, [sp, #8]
  017b8	e3530060	 cmp         r3, #0x60
  017bc	2a000019	 bcs         |$LN3@OEMInterru|

; 488  : 			OALMSG(OAL_INTR, (L"OEMInterruptHandler(Irq %d)\r\n", irq));

  017c0	e59f3130	 ldr         r3, [pc, #0x130]
  017c4	e5933440	 ldr         r3, [r3, #0x440]
  017c8	e3130901	 tst         r3, #1, 18
  017cc	0a000005	 beq         |$LN61@OEMInterru|
  017d0	e59d1008	 ldr         r1, [sp, #8]
  017d4	e59f0124	 ldr         r0, [pc, #0x124]
  017d8	eb000000	 bl          NKDbgPrintfW
  017dc	e3a03001	 mov         r3, #1
  017e0	e58d3040	 str         r3, [sp, #0x40]
  017e4	ea000001	 b           |$LN62@OEMInterru|
  017e8		 |$LN61@OEMInterru|
  017e8	e3a03000	 mov         r3, #0
  017ec	e58d3040	 str         r3, [sp, #0x40]
  017f0		 |$LN62@OEMInterru|

; 489  : 			SETPORT32(&g_pIntcRegs->ulINTC_MIR2, 1 << (irq - 64));

  017f0	e59f30f4	 ldr         r3, [pc, #0xF4]
  017f4	e5933000	 ldr         r3, [r3]
  017f8	e28310c4	 add         r1, r3, #0xC4
  017fc	e59d3008	 ldr         r3, [sp, #8]
  01800	e2432040	 sub         r2, r3, #0x40
  01804	e3a03001	 mov         r3, #1
  01808	e1a02213	 mov         r2, r3, lsl r2
  0180c	e5913000	 ldr         r3, [r1]
  01810	e1832002	 orr         r2, r3, r2
  01814	e59f30d0	 ldr         r3, [pc, #0xD0]
  01818	e5933000	 ldr         r3, [r3]
  0181c	e28330c4	 add         r3, r3, #0xC4
  01820	e5832000	 str         r2, [r3]

; 490  : 		} else {

  01824	ea00000b	 b           |$LN2@OEMInterru|
  01828		 |$LN3@OEMInterru|

; 491  : 			OALMSG(OAL_INTR, (L"OEMInterruptHandler(Irq UNKNOWNNON %d)\r\n", irq));

  01828	e59f30c8	 ldr         r3, [pc, #0xC8]
  0182c	e5933440	 ldr         r3, [r3, #0x440]
  01830	e3130901	 tst         r3, #1, 18
  01834	0a000005	 beq         |$LN63@OEMInterru|
  01838	e59d1008	 ldr         r1, [sp, #8]
  0183c	e59f00b8	 ldr         r0, [pc, #0xB8]
  01840	eb000000	 bl          NKDbgPrintfW
  01844	e3a03001	 mov         r3, #1
  01848	e58d3044	 str         r3, [sp, #0x44]
  0184c	ea000001	 b           |$LN64@OEMInterru|
  01850		 |$LN63@OEMInterru|
  01850	e3a03000	 mov         r3, #0
  01854	e58d3044	 str         r3, [sp, #0x44]
  01858		 |$LN64@OEMInterru|
  01858		 |$LN2@OEMInterru|
  01858		 |$LN4@OEMInterru|
  01858		 |$LN6@OEMInterru|
  01858		 |$LN8@OEMInterru|
  01858		 |$LN15@OEMInterru|
  01858		 |$LN22@OEMInterru|
  01858		 |$LN29@OEMInterru|

; 492  : 		}
; 493  : 	
; 494  :         // We don't assume IRQ sharing, use static mapping
; 495  :         sysIntr = OALIntrTranslateIrq(irq);

  01858	e59d0008	 ldr         r0, [sp, #8]
  0185c	eb000000	 bl          OALIntrTranslateIrq
  01860	e58d0048	 str         r0, [sp, #0x48]
  01864	e59d3048	 ldr         r3, [sp, #0x48]
  01868	e58d3000	 str         r3, [sp]

; 496  :         OALMSG(OAL_INTR, (L"OALIntrTranslateIrq(%d)=%d\r\n",irq,sysIntr));

  0186c	e59f3084	 ldr         r3, [pc, #0x84]
  01870	e5933440	 ldr         r3, [r3, #0x440]
  01874	e3130901	 tst         r3, #1, 18
  01878	0a000006	 beq         |$LN65@OEMInterru|
  0187c	e59d2000	 ldr         r2, [sp]
  01880	e59d1008	 ldr         r1, [sp, #8]
  01884	e59f0068	 ldr         r0, [pc, #0x68]
  01888	eb000000	 bl          NKDbgPrintfW
  0188c	e3a03001	 mov         r3, #1
  01890	e58d304c	 str         r3, [sp, #0x4C]
  01894	ea000001	 b           |$LN66@OEMInterru|
  01898		 |$LN65@OEMInterru|
  01898	e3a03000	 mov         r3, #0
  0189c	e58d304c	 str         r3, [sp, #0x4C]
  018a0		 |$LN66@OEMInterru|

; 497  :     }
; 498  : 	else  

  018a0	ea000002	 b           |$LN1@OEMInterru|
  018a4		 |$LN36@OEMInterru|

; 499  : 	{
; 500  :         OALMSG( 1, (L"undefined IRQ interrupt - %d\r\n",irq));

  018a4	e59d1008	 ldr         r1, [sp, #8]
  018a8	e59f0040	 ldr         r0, [pc, #0x40]
  018ac	eb000000	 bl          NKDbgPrintfW
  018b0		 |$LN1@OEMInterru|
  018b0		 |$LN37@OEMInterru|

; 501  :     }
; 502  :     //Acknowledge the existing IRQ and set the INTC for receiving new IRQ interrupts
; 503  :     SETREG32(&g_pIntcRegs->ulINTC_CONTROL,1);

  018b0	e59f3034	 ldr         r3, [pc, #0x34]
  018b4	e5933000	 ldr         r3, [r3]
  018b8	e2833048	 add         r3, r3, #0x48
  018bc	e5933000	 ldr         r3, [r3]
  018c0	e3832001	 orr         r2, r3, #1
  018c4	e59f3020	 ldr         r3, [pc, #0x20]
  018c8	e5933000	 ldr         r3, [r3]
  018cc	e2833048	 add         r3, r3, #0x48
  018d0	e5832000	 str         r2, [r3]

; 504  : 
; 505  :     return sysIntr;

  018d4	e59d3000	 ldr         r3, [sp]
  018d8	e58d3010	 str         r3, [sp, #0x10]

; 506  : }

  018dc	e59d0010	 ldr         r0, [sp, #0x10]
  018e0	e28dd050	 add         sp, sp, #0x50
  018e4	e49de004	 ldr         lr, [sp], #4
  018e8	e12fff1e	 bx          lr
  018ec		 |$LN70@OEMInterru|
  018ec		 |$LN71@OEMInterru|
  018ec	00000000	 DCD         |g_pIntcRegs|
  018f0		 |$LN72@OEMInterru|
  018f0	00000000	 DCD         |??_C@_1DO@PPLILHPG@?$AAu?$AAn?$AAd?$AAe?$AAf?$AAi?$AAn?$AAe?$AAd?$AA?5?$AAI?$AAR?$AAQ?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AA?9?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  018f4		 |$LN73@OEMInterru|
  018f4	00000000	 DCD         |??_C@_1DK@PAAKOGNH@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAT?$AAr?$AAa?$AAn?$AAs?$AAl?$AAa?$AAt?$AAe?$AAI?$AAr?$AAq?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  018f8		 |$LN74@OEMInterru|
  018f8	00000000	 DCD         |dpCurSettings|
  018fc		 |$LN75@OEMInterru|
  018fc	00000000	 DCD         |??_C@_1FC@HFDCNIPJ@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAU?$AAN?$AAK?$AAN?$AAO?$AAW?$AAN?$AAN@|
  01900		 |$LN76@OEMInterru|
  01900	00000000	 DCD         |??_C@_1DM@NLILHIEP@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01904		 |$LN77@OEMInterru|
  01904	00000000	 DCD         |??_C@_1DE@KMJGDKHO@?$AAG?$AAP?$AAI?$AAO?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAi?$AAr?$AAq?$AA?5?$AA?9?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  01908		 |$LN78@OEMInterru|
  01908	00000000	 DCD         |g_pGPIORegs|
  0190c		 |$LN79@OEMInterru|
  0190c	00000000	 DCD         |??_C@_1EC@FILLMMOB@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?$CJ?$AA?$AN?$AA?6@|
  01910		 |$LN80@OEMInterru|
  01910	00000000	 DCD         |??_C@_1EC@LKGHNHJI@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?$CJ?$AA?$AN?$AA?6@|
  01914		 |$LN81@OEMInterru|
  01914	00000000	 DCD         |??_C@_1EC@FFKFLMKG@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?$CJ?$AA?$AN?$AA?6@|
  01918		 |$LN82@OEMInterru|
  01918	00000000	 DCD         |??_C@_1EC@LOJCAHKF@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?$CJ?$AA?$AN?$AA?6@|
  0191c		 |$LN83@OEMInterru|
  0191c	00000000	 DCD         |g_oalTimerIrq|
  01920		 |$M46117|

			 ENDP  ; |OEMInterruptHandler|

	EXPORT	|OALIntrIsIrqPending|

  00030			 AREA	 |.pdata|, PDATA
|$T46141| DCD	|$LN12@OALIntrIsI|
	DCD	0x40003d04
; Function compile flags: /Odtp

  01920			 AREA	 |.text|, CODE, ARM

  01920		 |OALIntrIsIrqPending| PROC

; 516  : {

  01920		 |$LN12@OALIntrIsI|
  01920	e1a0c00d	 mov         r12, sp
  01924	e92d0001	 stmdb       sp!, {r0}
  01928	e92d5000	 stmdb       sp!, {r12, lr}
  0192c	e24dd00c	 sub         sp, sp, #0xC
  01930		 |$M46138|

; 517  :     BOOL rc = FALSE;

  01930	e3a03000	 mov         r3, #0
  01934	e58d3000	 str         r3, [sp]

; 518  : 
; 519  :     if (irq < 32) {

  01938	e59d3014	 ldr         r3, [sp, #0x14]
  0193c	e3530020	 cmp         r3, #0x20
  01940	2a000009	 bcs         |$LN5@OALIntrIsI|

; 520  :         rc = INREG32(&g_pIntcRegs->ulINTC_ITR0) & (1 << irq);

  01944	e59f30c4	 ldr         r3, [pc, #0xC4]
  01948	e5933000	 ldr         r3, [r3]
  0194c	e2831080	 add         r1, r3, #0x80
  01950	e59d2014	 ldr         r2, [sp, #0x14]
  01954	e3a03001	 mov         r3, #1
  01958	e1a02213	 mov         r2, r3, lsl r2
  0195c	e5913000	 ldr         r3, [r1]
  01960	e0033002	 and         r3, r3, r2
  01964	e58d3000	 str         r3, [sp]
  01968	ea00001a	 b           |$LN4@OALIntrIsI|
  0196c		 |$LN5@OALIntrIsI|

; 521  :     } else if (irq < 64) {

  0196c	e59d3014	 ldr         r3, [sp, #0x14]
  01970	e3530040	 cmp         r3, #0x40
  01974	2a00000a	 bcs         |$LN3@OALIntrIsI|

; 522  :         rc = INREG32(&g_pIntcRegs->ulINTC_ITR1) & (1 << (irq - 32));

  01978	e59f3090	 ldr         r3, [pc, #0x90]
  0197c	e5933000	 ldr         r3, [r3]
  01980	e28310a0	 add         r1, r3, #0xA0
  01984	e59d3014	 ldr         r3, [sp, #0x14]
  01988	e2432020	 sub         r2, r3, #0x20
  0198c	e3a03001	 mov         r3, #1
  01990	e1a02213	 mov         r2, r3, lsl r2
  01994	e5913000	 ldr         r3, [r1]
  01998	e0033002	 and         r3, r3, r2
  0199c	e58d3000	 str         r3, [sp]
  019a0	ea00000c	 b           |$LN2@OALIntrIsI|
  019a4		 |$LN3@OALIntrIsI|

; 523  :     } else if (irq < 96) {

  019a4	e59d3014	 ldr         r3, [sp, #0x14]
  019a8	e3530060	 cmp         r3, #0x60
  019ac	2a000009	 bcs         |$LN1@OALIntrIsI|

; 524  :         rc = INREG32(&g_pIntcRegs->ulINTC_ITR2) & (1 << (irq - 64));

  019b0	e59f3058	 ldr         r3, [pc, #0x58]
  019b4	e5933000	 ldr         r3, [r3]
  019b8	e28310c0	 add         r1, r3, #0xC0
  019bc	e59d3014	 ldr         r3, [sp, #0x14]
  019c0	e2432040	 sub         r2, r3, #0x40
  019c4	e3a03001	 mov         r3, #1
  019c8	e1a02213	 mov         r2, r3, lsl r2
  019cc	e5913000	 ldr         r3, [r1]
  019d0	e0033002	 and         r3, r3, r2
  019d4	e58d3000	 str         r3, [sp]
  019d8		 |$LN1@OALIntrIsI|
  019d8		 |$LN2@OALIntrIsI|
  019d8		 |$LN4@OALIntrIsI|

; 525  :     } 
; 526  :     return (rc != 0);

  019d8	e59d3000	 ldr         r3, [sp]
  019dc	e3530000	 cmp         r3, #0
  019e0	0a000002	 beq         |$LN8@OALIntrIsI|
  019e4	e3a03001	 mov         r3, #1
  019e8	e58d3008	 str         r3, [sp, #8]
  019ec	ea000001	 b           |$LN9@OALIntrIsI|
  019f0		 |$LN8@OALIntrIsI|
  019f0	e3a03000	 mov         r3, #0
  019f4	e58d3008	 str         r3, [sp, #8]
  019f8		 |$LN9@OALIntrIsI|
  019f8	e59d3008	 ldr         r3, [sp, #8]
  019fc	e58d3004	 str         r3, [sp, #4]

; 527  : }

  01a00	e59d0004	 ldr         r0, [sp, #4]
  01a04	e28dd00c	 add         sp, sp, #0xC
  01a08	e89d6000	 ldmia       sp, {sp, lr}
  01a0c	e12fff1e	 bx          lr
  01a10		 |$LN13@OALIntrIsI|
  01a10		 |$LN14@OALIntrIsI|
  01a10	00000000	 DCD         |g_pIntcRegs|
  01a14		 |$M46139|

			 ENDP  ; |OALIntrIsIrqPending|

	END
