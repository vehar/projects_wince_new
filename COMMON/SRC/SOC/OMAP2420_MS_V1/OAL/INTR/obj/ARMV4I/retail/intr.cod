; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\OMAP2420_MS_V1\OAL\INTR\intr.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|g_oalTimerIrq| [ DATA ]

  00000			 AREA	 |.bss|, NOINIT
|g_GPIO_LEVELDETECT1| % 0x10
|g_GPIO_RISINGDETECT| % 0x10

  00000			 AREA	 |.data|, DATA
|g_oalTimerIrq| DCD 0xffffffff
	%	4
|g_intcPriorityLevel| DCD 0x41
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
|g_GPIO_LEVELDETECT0| DCD 0x0
	DCD	0x0
	DCD	0x10000000
	DCD	0x0
|g_GPIO_FALLINGDETECT| DCD 0x840
	DCD	0x0
	DCD	0x23000000
	DCD	0x10000000

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|OALIntrInit|
	EXPORT	|??_C@_1DK@JEFKKIKI@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@LJHDCJDG@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|BSPIntrInit|
	IMPORT	|OEMInterruptEnable|
	IMPORT	|OALIntrStaticTranslate|
	IMPORT	|INTERRUPTS_ON|
	IMPORT	|OALPAtoVA|
	IMPORT	|OALIntrMapInit|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|

  00020			 AREA	 |.bss|, NOINIT
|g_pIntcRegs| %	0x4
|g_pIntcRegs| %	0x4
|g_pGPIORegs| %	0x10
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\oal\intr\intr.c

  00000			 AREA	 |.pdata|, PDATA
|$T46030| DCD	|$LN22@OALIntrIni|
	DCD	0x40006901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@JEFKKIKI@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, "r"
	DCB	0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@LJHDCJDG@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIntrInit| PROC

; 164  : {

  00000		 |$LN22@OALIntrIni|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004		 |$M46027|

; 165  :     BOOL rc = FALSE;
; 166  :     UINT32 i;
; 167  : 
; 168  :     OALMSG(OAL_INTR&&OAL_FUNC, (L"+OALInterruptInit\r\n"));

  00004	e59f5194	 ldr         r5, [pc, #0x194]
  00008	e5953440	 ldr         r3, [r5, #0x440]
  0000c	e3130901	 tst         r3, #1, 18
  00010	13130004	 tstne       r3, #4
  00014	159f0180	 ldrne       r0, [pc, #0x180]
  00018	1b000000	 blne        NKDbgPrintfW

; 169  : 
; 170  :     // Initialize interrupt mapping
; 171  :     OALIntrMapInit();

  0001c	eb000000	 bl          OALIntrMapInit
  00020	e3a06312	 mov         r6, #0x12, 6

; 172  : 
; 173  :     // Get interrupt controller and GPIO registers' virtual uncached addresses
; 174  :     g_pIntcRegs = OALPAtoUA(OMAP2420_INTC_MPU_REGS_PA);

  00024	e3860afe	 orr         r0, r6, #0xFE, 20
  00028	e3a01000	 mov         r1, #0
  0002c	eb000000	 bl          OALPAtoVA
  00030	e59f4160	 ldr         r4, [pc, #0x160]

; 175  :     g_pGPIORegs[0] = OALPAtoUA(OMAP2420_GPIO1_REGS_PA);

  00034	e3a01000	 mov         r1, #0
  00038	e5840000	 str         r0, [r4]
  0003c	e3860906	 orr         r0, r6, #6, 18
  00040	eb000000	 bl          OALPAtoVA
  00044	e1a03000	 mov         r3, r0

; 176  :     g_pGPIORegs[1] = OALPAtoUA(OMAP2420_GPIO2_REGS_PA);

  00048	e3860a1a	 orr         r0, r6, #0x1A, 20
  0004c	e3a01000	 mov         r1, #0
  00050	e5843004	 str         r3, [r4, #4]
  00054	eb000000	 bl          OALPAtoVA
  00058	e1a03000	 mov         r3, r0

; 177  :     g_pGPIORegs[2] = OALPAtoUA(OMAP2420_GPIO3_REGS_PA);

  0005c	e3860907	 orr         r0, r6, #7, 18
  00060	e3a01000	 mov         r1, #0
  00064	e5843008	 str         r3, [r4, #8]
  00068	eb000000	 bl          OALPAtoVA
  0006c	e1a03000	 mov         r3, r0

; 178  :     g_pGPIORegs[3] = OALPAtoUA(OMAP2420_GPIO4_REGS_PA);

  00070	e3860a1e	 orr         r0, r6, #0x1E, 20
  00074	e3a01000	 mov         r1, #0
  00078	e584300c	 str         r3, [r4, #0xC]
  0007c	eb000000	 bl          OALPAtoVA

; 179  : 
; 180  :     //Reset the MPU INTC and wait until reset is complete
; 181  :     SETREG32(&g_pIntcRegs->ulINTC_SYSCONFIG, OMAP2420_MPUINTC_RESETBIT);

  00080	e594e000	 ldr         lr, [r4]
  00084	e5840010	 str         r0, [r4, #0x10]
  00088	e59e3010	 ldr         r3, [lr, #0x10]
  0008c	e3833002	 orr         r3, r3, #2
  00090	e58e3010	 str         r3, [lr, #0x10]
  00094		 |$LL8@OALIntrIni|

; 182  :     while ((INREG32(&g_pIntcRegs->ulINTC_SYSSTATUS)& OMAP2420_MPUINTC_RESETSTATUS) == 0);

  00094	e59e3014	 ldr         r3, [lr, #0x14]
  00098	e3130001	 tst         r3, #1
  0009c	0afffffc	 beq         |$LL8@OALIntrIni|

; 183  : 
; 184  :     // Disable all interrupts and clear the ISR - for all for GPIO banks, too.
; 185  :     OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET0, OMAP2420_MPUINTC_MASKALL);
; 186  :     OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET1, OMAP2420_MPUINTC_MASKALL);
; 187  :     OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET2, OMAP2420_MPUINTC_MASKALL);
; 188  : 
; 189  :     for (i = 0; i < 4; i++) {

  000a0	e59f00ec	 ldr         r0, [pc, #0xEC]
  000a4	e3e0b000	 mvn         r11, #0
  000a8	e58eb08c	 str         r11, [lr, #0x8C]
  000ac	e58eb0ac	 str         r11, [lr, #0xAC]
  000b0	e2847004	 add         r7, r4, #4
  000b4	e2849014	 add         r9, r4, #0x14
  000b8	e58eb0cc	 str         r11, [lr, #0xCC]
  000bc	e2808d06	 add         r8, r0, #6, 26
  000c0	e280ae19	 add         r10, r0, #0x19, 28
  000c4	e3a06000	 mov         r6, #0
  000c8	e2844024	 add         r4, r4, #0x24
  000cc		 |$LL6@OALIntrIni|

; 190  :         OUTREG32(&g_pGPIORegs[i]->ulGPIO_CLEARIRQENABLE1, 0xFFFFFFFF);

  000cc	e1a01006	 mov         r1, r6
  000d0	e7b13007	 ldr         r3, [r1, +r7]!
  000d4	e583b060	 str         r11, [r3, #0x60]

; 191  :         OUTREG32(&g_pGPIORegs[i]->ulGPIO_CLEARIRQENABLE2, 0xFFFFFFFF);

  000d8	e5913000	 ldr         r3, [r1]
  000dc	e583b070	 str         r11, [r3, #0x70]

; 192  : 		OUTREG32(&g_pGPIORegs[i]->ulGPIO_IRQSTATUS1, 0xFFFFFFFF);     

  000e0	e5913000	 ldr         r3, [r1]
  000e4	e583b018	 str         r11, [r3, #0x18]

; 193  : 		OUTREG32(&g_pGPIORegs[i]->ulGPIO_IRQSTATUS2, 0xFFFFFFFF);    

  000e8	e5913000	 ldr         r3, [r1]
  000ec	e583b028	 str         r11, [r3, #0x28]

; 194  :         OUTREG32(&g_pGPIORegs[i]->ulGPIO_LEVELDETECT0, g_GPIO_LEVELDETECT0[i]);

  000f0	e5912000	 ldr         r2, [r1]
  000f4	e7963008	 ldr         r3, [r6, +r8]
  000f8	e5823040	 str         r3, [r2, #0x40]

; 195  :         OUTREG32(&g_pGPIORegs[i]->ulGPIO_LEVELDETECT1, g_GPIO_LEVELDETECT1[i]);

  000fc	e5912000	 ldr         r2, [r1]
  00100	e7963009	 ldr         r3, [r6, +r9]
  00104	e5823044	 str         r3, [r2, #0x44]

; 196  : 		OUTREG32(&g_pGPIORegs[i]->ulGPIO_RISINGDETECT, g_GPIO_RISINGDETECT[i]);     

  00108	e5912000	 ldr         r2, [r1]
  0010c	e7963004	 ldr         r3, [r6, +r4]
  00110	e5823048	 str         r3, [r2, #0x48]

; 197  : 		OUTREG32(&g_pGPIORegs[i]->ulGPIO_FALLINGDETECT, g_GPIO_FALLINGDETECT[i]);    

  00114	e5912000	 ldr         r2, [r1]
  00118	e796300a	 ldr         r3, [r6, +r10]
  0011c	e2866004	 add         r6, r6, #4
  00120	e3560010	 cmp         r6, #0x10
  00124	e582304c	 str         r3, [r2, #0x4C]
  00128	3affffe7	 bcc         |$LL6@OALIntrIni|

; 198  :     }
; 199  : 
; 200  :     // Initialize interrupt routing and priority
; 201  :     for (i = 0; i < 96; i++) {

  0012c	e28e2c01	 add         r2, lr, #1, 24
  00130	e3a01060	 mov         r1, #0x60
  00134		 |$LL3@OALIntrIni|

; 202  :         OUTREG32(&g_pIntcRegs->ulINTC_ILR[i], g_intcPriorityLevel[i]);

  00134	e4903004	 ldr         r3, [r0], #4
  00138	e2511001	 subs        r1, r1, #1
  0013c	e4823004	 str         r3, [r2], #4
  00140	1afffffb	 bne         |$LL3@OALIntrIni|

; 203  :     }
; 204  : 
; 205  :     // Allow interrupts 
; 206  :     INTERRUPTS_ON();

  00144	eb000000	 bl          INTERRUPTS_ON

; 207  : 
; 208  :     //  Allocate SYSINTR_RESCHED to a timer for the system tick
; 209  :     OALIntrStaticTranslate( SYSINTR_RESCHED, IRQ_GPT1 );

  00148	e3a01025	 mov         r1, #0x25
  0014c	e3a00001	 mov         r0, #1
  00150	eb000000	 bl          OALIntrStaticTranslate

; 210  :     OEMInterruptEnable( SYSINTR_RESCHED, NULL, 0 );

  00154	e3a02000	 mov         r2, #0
  00158	e3a01000	 mov         r1, #0
  0015c	e3a00001	 mov         r0, #1
  00160	eb000000	 bl          OEMInterruptEnable

; 211  : 
; 212  :     // Call board specific initialization
; 213  :     rc = BSPIntrInit();

  00164	eb000000	 bl          BSPIntrInit

; 214  : 
; 215  : 
; 216  :     OALMSG(OAL_INTR&&OAL_FUNC, (L"-OALInterruptInit(rc = %d)\r\n", rc));

  00168	e5953440	 ldr         r3, [r5, #0x440]
  0016c	e1a04000	 mov         r4, r0
  00170	e3130901	 tst         r3, #1, 18
  00174	13130004	 tstne       r3, #4
  00178	159f0010	 ldrne       r0, [pc, #0x10]
  0017c	11a01004	 movne       r1, r4
  00180	1b000000	 blne        NKDbgPrintfW

; 217  :     return rc;
; 218  : }

  00184	e1a00004	 mov         r0, r4
  00188	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  0018c	e12fff1e	 bx          lr
  00190		 |$LN23@OALIntrIni|
  00190		 |$LN24@OALIntrIni|
  00190	00000000	 DCD         |??_C@_1DK@JEFKKIKI@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00194		 |$LN25@OALIntrIni|
  00194	00000000	 DCD         |g_intcPriorityLevel|
  00198		 |$LN26@OALIntrIni|
  00198	00000000	 DCD         |g_pIntcRegs|
  0019c		 |$LN27@OALIntrIni|
  0019c	00000000	 DCD         |??_C@_1CI@LJHDCJDG@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  001a0		 |$LN28@OALIntrIni|
  001a0	00000000	 DCD         |dpCurSettings|
  001a4		 |$M46028|

			 ENDP  ; |OALIntrInit|

	EXPORT	|OALIntrRequestIrqs|
	EXPORT	|??_C@_1DO@NDIEKHNP@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@EBPJKEJJ@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?9?$AA?$DO?$AA?$CF?$AAd?$AA?1?$AA?$CF@| [ DATA ] ; `string'
	IMPORT	|BSPIntrRequestIrqs|

  00000			 AREA	 |.pdata|, PDATA
|$T46053| DCD	|$LN11@OALIntrReq|
	DCD	0x40002d02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@NDIEKHNP@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s"
	DCB	0x0, "(", 0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@EBPJKEJJ@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?9?$AA?$DO?$AA?$CF?$AAd?$AA?1?$AA?$CF@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s"
	DCB	0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, "-", 0x0, ">", 0x0, "%", 0x0, "d", 0x0, "/"
	DCB	0x0, "%", 0x0, "d", 0x0, "/", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, "/", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIntrRequestIrqs| PROC

; 228  : {

  00000		 |$LN11@OALIntrReq|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd010	 sub         sp, sp, #0x10
  00008		 |$M46050|
  00008	e1a09002	 mov         r9, r2
  0000c	e1a06001	 mov         r6, r1
  00010	e1a07000	 mov         r7, r0

; 229  :     BOOL rc = FALSE;
; 230  : 
; 231  :     OALMSG(OAL_INTR&&OAL_FUNC, (
; 232  :         L"+OALIntrRequestIrqs(0x%08x->%d/%d/0x%08x/%d, 0x%08x, 0x%08x)\r\n",
; 233  :         pDevLoc, pDevLoc->IfcType, pDevLoc->BusNumber, pDevLoc->LogicalLoc,
; 234  :         pDevLoc->Pin, pCount, pIrqs
; 235  :     ));

  00014	e59f8094	 ldr         r8, [pc, #0x94]
  00018	e3a05000	 mov         r5, #0
  0001c	e598e440	 ldr         lr, [r8, #0x440]
  00020	e31e0901	 tst         lr, #1, 18
  00024	0a00000d	 beq         |$LN5@OALIntrReq|
  00028	e31e0004	 tst         lr, #4
  0002c	0a00000b	 beq         |$LN5@OALIntrReq|
  00030	e597e010	 ldr         lr, [r7, #0x10]
  00034	e5974008	 ldr         r4, [r7, #8]
  00038	e5973004	 ldr         r3, [r7, #4]
  0003c	e5972000	 ldr         r2, [r7]
  00040	e59f0064	 ldr         r0, [pc, #0x64]
  00044	e1a01007	 mov         r1, r7
  00048	e58de004	 str         lr, [sp, #4]
  0004c	e58d4000	 str         r4, [sp]
  00050	e58d900c	 str         r9, [sp, #0xC]
  00054	e58d6008	 str         r6, [sp, #8]
  00058	eb000000	 bl          NKDbgPrintfW
  0005c	e598e440	 ldr         lr, [r8, #0x440]
  00060		 |$LN5@OALIntrReq|

; 236  : 
; 237  :     // This shouldn't happen
; 238  :     if (*pCount < 1) goto cleanUp;

  00060	e5963000	 ldr         r3, [r6]
  00064	e3530001	 cmp         r3, #1
  00068	3a000005	 bcc         |$cleanUp$45621|

; 239  : #if 0
; 240  :     switch (pDevLoc->IfcType) {
; 241  :     case Internal:
; 242  :         switch ((ULONG)pDevLoc->LogicalLoc) {
; 243  :         case OMAP2420_USBD_REGS_PA:
; 244  :             *pCount = 1;
; 245  :             pIrqs[0] = IRQ_USB_GENI;
; 246  :             rc = TRUE;
; 247  :             break;
; 248  :         }
; 249  :         break;
; 250  :     }
; 251  : #endif            
; 252  : #ifdef OAL_BSP_CALLBACKS
; 253  :     if (!rc) rc = BSPIntrRequestIrqs(pDevLoc, pCount, pIrqs);

  0006c	e1a02009	 mov         r2, r9
  00070	e1a01006	 mov         r1, r6
  00074	e1a00007	 mov         r0, r7
  00078	eb000000	 bl          BSPIntrRequestIrqs
  0007c	e598e440	 ldr         lr, [r8, #0x440]
  00080	e1a05000	 mov         r5, r0
  00084		 |$cleanUp$45621|

; 254  : #endif
; 255  : 
; 256  : cleanUp:
; 257  :     OALMSG(OAL_INTR&&OAL_FUNC, (L"-OALIntrRequestIrqs(rc = %d)\r\n", rc));

  00084	e31e0901	 tst         lr, #1, 18
  00088	131e0004	 tstne       lr, #4
  0008c	159f0014	 ldrne       r0, [pc, #0x14]
  00090	11a01005	 movne       r1, r5
  00094	1b000000	 blne        NKDbgPrintfW

; 258  :     return rc;
; 259  : }

  00098	e1a00005	 mov         r0, r5
  0009c	e28dd010	 add         sp, sp, #0x10
  000a0	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  000a4	e12fff1e	 bx          lr
  000a8		 |$LN12@OALIntrReq|
  000a8		 |$LN13@OALIntrReq|
  000a8	00000000	 DCD         |??_C@_1DO@NDIEKHNP@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  000ac		 |$LN14@OALIntrReq|
  000ac	00000000	 DCD         |??_C@_1HO@EBPJKEJJ@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?9?$AA?$DO?$AA?$CF?$AAd?$AA?1?$AA?$CF@|
  000b0		 |$LN15@OALIntrReq|
  000b0	00000000	 DCD         |dpCurSettings|
  000b4		 |$M46051|

			 ENDP  ; |OALIntrRequestIrqs|

	EXPORT	|OALIntrEnableIrqs|
	EXPORT	|??_C@_1DM@INNHDHDJ@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@DLCPCDNN@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@MGNGNLKI@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@GILOEKDJ@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@EBHGPOML@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@MDFPIGAB@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T46085| DCD	|$LN38@OALIntrEna|
	DCD	0x40008301

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@INNHDHDJ@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s", 0x0, "("
	DCB	0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@DLCPCDNN@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s", 0x0, "(", 0x0, "I"
	DCB	0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G", 0x0, "P", 0x0, "I"
	DCB	0x0, "O", 0x0, "4", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@MGNGNLKI@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s", 0x0, "(", 0x0, "I"
	DCB	0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G", 0x0, "P", 0x0, "I"
	DCB	0x0, "O", 0x0, "3", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@GILOEKDJ@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s", 0x0, "(", 0x0, "I"
	DCB	0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G", 0x0, "P", 0x0, "I"
	DCB	0x0, "O", 0x0, "2", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@EBHGPOML@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s", 0x0, "(", 0x0, "I"
	DCB	0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G", 0x0, "P", 0x0, "I"
	DCB	0x0, "O", 0x0, "1", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@MDFPIGAB@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s", 0x0, "("
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIntrEnableIrqs| PROC

; 266  : {

  00000		 |$LN38@OALIntrEna|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004		 |$M46082|
  00004	e1a09001	 mov         r9, r1
  00008	e1a06000	 mov         r6, r0

; 267  :     BOOL rc = TRUE;
; 268  :     UINT32 irq, i;
; 269  : 
; 270  :     OALMSG(OAL_INTR, (L"+OALIntrEnableIrqs(%d, 0x%08x)\r\n", count, pIrqs));

  0000c	e59f51f4	 ldr         r5, [pc, #0x1F4]
  00010	e3a08001	 mov         r8, #1
  00014	e5953440	 ldr         r3, [r5, #0x440]
  00018	e3130901	 tst         r3, #1, 18
  0001c	159f01e0	 ldrne       r0, [pc, #0x1E0]
  00020	11a02009	 movne       r2, r9
  00024	11a01006	 movne       r1, r6
  00028	1b000000	 blne        NKDbgPrintfW

; 271  : 
; 272  :     for (i = 0; i < count; i++) {

  0002c	e3560000	 cmp         r6, #0
  00030	0a000064	 beq         |$LN16@OALIntrEna|
  00034	e59f71c4	 ldr         r7, [pc, #0x1C4]
  00038	e3a0a001	 mov         r10, #1
  0003c	e3a0b001	 mov         r11, #1
  00040	e597e000	 ldr         lr, [r7]
  00044	e3a02001	 mov         r2, #1
  00048		 |$LL18@OALIntrEna|

; 273  :         irq = pIrqs[i];

  00048	e5994000	 ldr         r4, [r9]

; 274  :         if (irq < 32) {

  0004c	e3540020	 cmp         r4, #0x20

; 275  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR0, 1 << irq);

  00050	31a0341a	 movcc       r3, r10, lsl r4
  00054	358e3088	 strcc       r3, [lr, #0x88]
  00058	3a000057	 bcc         |$LN17@OALIntrEna|

; 276  :         } else if (irq < 64) {

  0005c	e3540040	 cmp         r4, #0x40

; 277  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR1, 1 << (irq - 32));

  00060	32443020	 subcc       r3, r4, #0x20
  00064	31a0331b	 movcc       r3, r11, lsl r3
  00068	358e30a8	 strcc       r3, [lr, #0xA8]
  0006c	3a000052	 bcc         |$LN17@OALIntrEna|

; 278  :         } else if (irq < 96) {

  00070	e3540060	 cmp         r4, #0x60

; 279  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR2, 1 << (irq - 64));

  00074	32443040	 subcc       r3, r4, #0x40
  00078	31a03312	 movcc       r3, r2, lsl r3
  0007c	358e30c8	 strcc       r3, [lr, #0xC8]
  00080	3a00004d	 bcc         |$LN17@OALIntrEna|

; 280  : 		} else if (irq < IRQ_GPIO_32) {

  00084	e35400c0	 cmp         r4, #0xC0
  00088	2a00000f	 bcs         |$LN9@OALIntrEna|
  0008c	e5953440	 ldr         r3, [r5, #0x440]

; 281  : 			OALMSG(OAL_INTR, (L"OALIntrEnableIrqs(Irq GPIO1 %d)\r\n", irq - IRQ_GPIO_0));

  00090	e3130901	 tst         r3, #1, 18
  00094	0a000003	 beq         |$LN23@OALIntrEna|
  00098	e59f015c	 ldr         r0, [pc, #0x15C]
  0009c	e24410a0	 sub         r1, r4, #0xA0
  000a0	eb000000	 bl          NKDbgPrintfW
  000a4	e597e000	 ldr         lr, [r7]
  000a8		 |$LN23@OALIntrEna|

; 282  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR0, 1 << IRQ_GPIO1_MPU);

  000a8	e3a03202	 mov         r3, #2, 4
  000ac	e58e3088	 str         r3, [lr, #0x88]

; 283  : 			OUTREG32(&g_pGPIORegs[0]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_0));  // clear IRQ

  000b0	e5972004	 ldr         r2, [r7, #4]
  000b4	e24410a0	 sub         r1, r4, #0xA0
  000b8	e3a00001	 mov         r0, #1
  000bc	e1a03110	 mov         r3, r0, lsl r1
  000c0	e5823018	 str         r3, [r2, #0x18]

; 284  : 			SETREG32(&g_pGPIORegs[0]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_0));  // unmask IRQ

  000c4	e5972004	 ldr         r2, [r7, #4]
  000c8	ea000034	 b           |$LN35@OALIntrEna|
  000cc		 |$LN9@OALIntrEna|

; 285  :         } else if (irq < IRQ_GPIO_64) {

  000cc	e35400e0	 cmp         r4, #0xE0
  000d0	2a00000f	 bcs         |$LN7@OALIntrEna|
  000d4	e5953440	 ldr         r3, [r5, #0x440]

; 286  : 			OALMSG(OAL_INTR, (L"OALIntrEnableIrqs(Irq GPIO2 %d)\r\n", irq - IRQ_GPIO_32));

  000d8	e3130901	 tst         r3, #1, 18
  000dc	0a000003	 beq         |$LN25@OALIntrEna|
  000e0	e59f0110	 ldr         r0, [pc, #0x110]
  000e4	e24410c0	 sub         r1, r4, #0xC0
  000e8	eb000000	 bl          NKDbgPrintfW
  000ec	e597e000	 ldr         lr, [r7]
  000f0		 |$LN25@OALIntrEna|

; 287  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR0, 1 << IRQ_GPIO2_MPU);

  000f0	e3a03101	 mov         r3, #1, 2
  000f4	e58e3088	 str         r3, [lr, #0x88]

; 288  : 			OUTREG32(&g_pGPIORegs[1]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_32));  // clear IRQ

  000f8	e5972008	 ldr         r2, [r7, #8]
  000fc	e24410c0	 sub         r1, r4, #0xC0
  00100	e3a00001	 mov         r0, #1
  00104	e1a03110	 mov         r3, r0, lsl r1
  00108	e5823018	 str         r3, [r2, #0x18]

; 289  : 			SETREG32(&g_pGPIORegs[1]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_32));  // unmask IRQ

  0010c	e5972008	 ldr         r2, [r7, #8]
  00110	ea000022	 b           |$LN35@OALIntrEna|
  00114		 |$LN7@OALIntrEna|

; 290  :         } else if (irq < IRQ_GPIO_96) {

  00114	e3540c01	 cmp         r4, #1, 24
  00118	2a00000f	 bcs         |$LN5@OALIntrEna|
  0011c	e5953440	 ldr         r3, [r5, #0x440]

; 291  : 			OALMSG(OAL_INTR, (L"OALIntrEnableIrqs(Irq GPIO3 %d)\r\n", irq - IRQ_GPIO_64));

  00120	e3130901	 tst         r3, #1, 18
  00124	0a000003	 beq         |$LN27@OALIntrEna|
  00128	e59f00c4	 ldr         r0, [pc, #0xC4]
  0012c	e24410e0	 sub         r1, r4, #0xE0
  00130	eb000000	 bl          NKDbgPrintfW
  00134	e597e000	 ldr         lr, [r7]
  00138		 |$LN27@OALIntrEna|

; 292  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR0, 1 << IRQ_GPIO3_MPU);

  00138	e3a03102	 mov         r3, #2, 2
  0013c	e58e3088	 str         r3, [lr, #0x88]

; 293  : 			OUTREG32(&g_pGPIORegs[2]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_64));  // clear IRQ

  00140	e597200c	 ldr         r2, [r7, #0xC]
  00144	e24410e0	 sub         r1, r4, #0xE0
  00148	e3a00001	 mov         r0, #1
  0014c	e1a03110	 mov         r3, r0, lsl r1
  00150	e5823018	 str         r3, [r2, #0x18]

; 294  : 			SETREG32(&g_pGPIORegs[2]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_64));  // unmask IRQ

  00154	e597200c	 ldr         r2, [r7, #0xC]
  00158	ea000010	 b           |$LN35@OALIntrEna|
  0015c		 |$LN5@OALIntrEna|

; 295  :         } else if (irq < IRQ_GPIO_128) {

  0015c	e3540e12	 cmp         r4, #0x12, 28
  00160	2a000013	 bcs         |$LN3@OALIntrEna|
  00164	e5953440	 ldr         r3, [r5, #0x440]

; 296  : 			OALMSG(OAL_INTR, (L"OALIntrEnableIrqs(Irq GPIO4 %d)\r\n", irq - IRQ_GPIO_96));

  00168	e3130901	 tst         r3, #1, 18
  0016c	0a000003	 beq         |$LN29@OALIntrEna|
  00170	e59f0078	 ldr         r0, [pc, #0x78]
  00174	e2441c01	 sub         r1, r4, #1, 24
  00178	eb000000	 bl          NKDbgPrintfW
  0017c	e597e000	 ldr         lr, [r7]
  00180		 |$LN29@OALIntrEna|

; 297  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR1, 1<<(IRQ_GPIO4_MPU-32));

  00180	e3a03001	 mov         r3, #1
  00184	e58e30a8	 str         r3, [lr, #0xA8]

; 298  : 			OUTREG32(&g_pGPIORegs[3]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_96));  // clear IRQ

  00188	e5972010	 ldr         r2, [r7, #0x10]
  0018c	e2441c01	 sub         r1, r4, #1, 24
  00190	e3a00001	 mov         r0, #1
  00194	e1a03110	 mov         r3, r0, lsl r1
  00198	e5823018	 str         r3, [r2, #0x18]

; 299  : 			SETREG32(&g_pGPIORegs[3]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_96));  // unmask IRQ

  0019c	e5972010	 ldr         r2, [r7, #0x10]
  001a0		 |$LN35@OALIntrEna|
  001a0	e592301c	 ldr         r3, [r2, #0x1C]
  001a4	e1833110	 orr         r3, r3, r0, lsl r1
  001a8	e582301c	 str         r3, [r2, #0x1C]
  001ac	e3a02001	 mov         r2, #1
  001b0	ea000001	 b           |$LN17@OALIntrEna|
  001b4		 |$LN3@OALIntrEna|

; 300  :         } else if (irq != OAL_INTR_IRQ_UNDEFINED) {

  001b4	e3740001	 cmn         r4, #1

; 301  :             rc = FALSE;

  001b8	13a08000	 movne       r8, #0
  001bc		 |$LN17@OALIntrEna|
  001bc	e2899004	 add         r9, r9, #4
  001c0	e2566001	 subs        r6, r6, #1
  001c4	1affff9f	 bne         |$LL18@OALIntrEna|
  001c8		 |$LN16@OALIntrEna|

; 267  :     BOOL rc = TRUE;
; 268  :     UINT32 irq, i;
; 269  : 
; 270  :     OALMSG(OAL_INTR, (L"+OALIntrEnableIrqs(%d, 0x%08x)\r\n", count, pIrqs));

  001c8	e5953440	 ldr         r3, [r5, #0x440]

; 302  :         }
; 303  : 
; 304  :     }
; 305  : 
; 306  :     OALMSG(OAL_INTR&&OAL_VERBOSE, (L"-OALIntrEnableIrqs(rc = %d)\r\n", rc));

  001cc	e3130901	 tst         r3, #1, 18
  001d0	13130902	 tstne       r3, #2, 18
  001d4	159f0010	 ldrne       r0, [pc, #0x10]
  001d8	11a01008	 movne       r1, r8
  001dc	1b000000	 blne        NKDbgPrintfW

; 307  :     return rc;
; 308  : }

  001e0	e1a00008	 mov         r0, r8
  001e4	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  001e8	e12fff1e	 bx          lr
  001ec		 |$LN39@OALIntrEna|
  001ec		 |$LN40@OALIntrEna|
  001ec	00000000	 DCD         |??_C@_1DM@INNHDHDJ@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  001f0		 |$LN41@OALIntrEna|
  001f0	00000000	 DCD         |??_C@_1EE@DLCPCDNN@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@|
  001f4		 |$LN42@OALIntrEna|
  001f4	00000000	 DCD         |??_C@_1EE@MGNGNLKI@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@|
  001f8		 |$LN43@OALIntrEna|
  001f8	00000000	 DCD         |??_C@_1EE@GILOEKDJ@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@|
  001fc		 |$LN44@OALIntrEna|
  001fc	00000000	 DCD         |??_C@_1EE@EBHGPOML@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@|
  00200		 |$LN45@OALIntrEna|
  00200	00000000	 DCD         |g_pIntcRegs|
  00204		 |$LN46@OALIntrEna|
  00204	00000000	 DCD         |??_C@_1EC@MDFPIGAB@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6@|
  00208		 |$LN47@OALIntrEna|
  00208	00000000	 DCD         |dpCurSettings|
  0020c		 |$M46083|

			 ENDP  ; |OALIntrEnableIrqs|

	EXPORT	|OALIntrDisableIrqs|
	EXPORT	|??_C@_1CM@GPENGBBP@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@DGAOCPAC@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?5?$AA?$CF?$AAd?$AA?$CJ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@MLPHNHHH@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?5?$AA?$CF?$AAd?$AA?$CJ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@GFJPEGOG@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?5?$AA?$CF?$AAd?$AA?$CJ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@EMFHPCBE@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?5?$AA?$CF?$AAd?$AA?$CJ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@NGMPKPHC@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAM?$AAE?$AAN?$AAE?$AAL?$AAA?$AAU?$AAS?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@NIPMEMC@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T46121| DCD	|$LN40@OALIntrDis|
	DCD	0x40008e01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@GPENGBBP@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@DGAOCPAC@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?5?$AA?$CF?$AAd?$AA?$CJ@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s", 0x0, "("
	DCB	0x0, "I", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G", 0x0, "P"
	DCB	0x0, "I", 0x0, "O", 0x0, "4", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@MLPHNHHH@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?5?$AA?$CF?$AAd?$AA?$CJ@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s", 0x0, "("
	DCB	0x0, "I", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G", 0x0, "P"
	DCB	0x0, "I", 0x0, "O", 0x0, "3", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@GFJPEGOG@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?5?$AA?$CF?$AAd?$AA?$CJ@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s", 0x0, "("
	DCB	0x0, "I", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G", 0x0, "P"
	DCB	0x0, "I", 0x0, "O", 0x0, "2", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@EMFHPCBE@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?5?$AA?$CF?$AAd?$AA?$CJ@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s", 0x0, "("
	DCB	0x0, "I", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G", 0x0, "P"
	DCB	0x0, "I", 0x0, "O", 0x0, "1", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@NGMPKPHC@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAM?$AAE?$AAN?$AAE?$AAL?$AAA?$AAU?$AAS?$AA?5@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s", 0x0, "("
	DCB	0x0, "I", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "M", 0x0, "E"
	DCB	0x0, "N", 0x0, "E", 0x0, "L", 0x0, "A", 0x0, "U", 0x0, "S"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@NIPMEMC@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, "s"
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIntrDisableIrqs| PROC

; 315  : {

  00000		 |$LN40@OALIntrDis|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004		 |$M46118|
  00004	e1a08001	 mov         r8, r1
  00008	e1a07000	 mov         r7, r0

; 316  :     UINT32 irq, i;
; 317  :     
; 318  :     OALMSG(OAL_INTR&&OAL_FUNC, (
; 319  :         L"+OALIntrDisableIrqs(%d, 0x%08x)\r\n", count, pIrqs
; 320  :     ));

  0000c	e59f5220	 ldr         r5, [pc, #0x220]
  00010	e5953440	 ldr         r3, [r5, #0x440]
  00014	e3130901	 tst         r3, #1, 18
  00018	13130004	 tstne       r3, #4
  0001c	159f020c	 ldrne       r0, [pc, #0x20C]
  00020	11a02008	 movne       r2, r8
  00024	11a01007	 movne       r1, r7
  00028	1b000000	 blne        NKDbgPrintfW

; 321  : 
; 322  :     for (i = 0; i < count; i++) {

  0002c	e3570000	 cmp         r7, #0
  00030	0a000070	 beq         |$LN16@OALIntrDis|
  00034	e59f61f0	 ldr         r6, [pc, #0x1F0]
  00038	e3a0a001	 mov         r10, #1
  0003c	e3a0b001	 mov         r11, #1
  00040	e596e000	 ldr         lr, [r6]
  00044	e3a02001	 mov         r2, #1
  00048	e3a09080	 mov         r9, #0x80
  0004c		 |$LL18@OALIntrDis|

; 323  :         irq = pIrqs[i];

  0004c	e5984000	 ldr         r4, [r8]

; 324  :         if (irq < 32) {

  00050	e3540020	 cmp         r4, #0x20

; 325  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET0, 1 << irq);

  00054	31a0341a	 movcc       r3, r10, lsl r4
  00058	358e308c	 strcc       r3, [lr, #0x8C]
  0005c	3a000061	 bcc         |$LN17@OALIntrDis|

; 326  :         } else if (irq < 64) {

  00060	e3540040	 cmp         r4, #0x40

; 327  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET1, 1 << (irq - 32));

  00064	32443020	 subcc       r3, r4, #0x20
  00068	31a0331b	 movcc       r3, r11, lsl r3
  0006c	358e30ac	 strcc       r3, [lr, #0xAC]
  00070	3a00005c	 bcc         |$LN17@OALIntrDis|

; 328  :         } else if (irq < 96) {

  00074	e3540060	 cmp         r4, #0x60

; 329  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET2, 1 << (irq - 64));

  00078	32443040	 subcc       r3, r4, #0x40
  0007c	31a03312	 movcc       r3, r2, lsl r3
  00080	358e30cc	 strcc       r3, [lr, #0xCC]
  00084	3a000057	 bcc         |$LN17@OALIntrDis|

; 330  :         } else if (irq <= IRQ_MENELAUS_PSHBTN) {

  00088	e354006f	 cmp         r4, #0x6F
  0008c	8a000008	 bhi         |$LN9@OALIntrDis|
  00090	e5953440	 ldr         r3, [r5, #0x440]

; 331  : 		    OALMSG(OAL_INTR, (L"OALIntrDisableIrqs(Irq MENELAUS %d)\r\n", irq - IRQ_MENELAUS_CD1));

  00094	e3130901	 tst         r3, #1, 18
  00098	0a000003	 beq         |$LN23@OALIntrDis|
  0009c	e59f0184	 ldr         r0, [pc, #0x184]
  000a0	e2441064	 sub         r1, r4, #0x64
  000a4	eb000000	 bl          NKDbgPrintfW
  000a8	e596e000	 ldr         lr, [r6]
  000ac		 |$LN23@OALIntrDis|

; 332  : 			OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET0, 1 << IRQ_SYS_NIRQ);

  000ac	e58e908c	 str         r9, [lr, #0x8C]
  000b0	ea00004c	 b           |$LN17@OALIntrDis|
  000b4		 |$LN9@OALIntrDis|

; 333  : 
; 334  :         } else if (irq < IRQ_GPIO_32) {

  000b4	e35400c0	 cmp         r4, #0xC0
  000b8	2a000010	 bcs         |$LN7@OALIntrDis|
  000bc	e5953440	 ldr         r3, [r5, #0x440]

; 335  : 			OALMSG(OAL_INTR, (
; 336  : 				L"OALIntrDisableIrqs(Irq GPIO1 %d)\r\n", irq - IRQ_GPIO_0));

  000c0	e3130901	 tst         r3, #1, 18
  000c4	0a000003	 beq         |$LN25@OALIntrDis|
  000c8	e59f0154	 ldr         r0, [pc, #0x154]
  000cc	e24410a0	 sub         r1, r4, #0xA0
  000d0	eb000000	 bl          NKDbgPrintfW
  000d4	e596e000	 ldr         lr, [r6]
  000d8		 |$LN25@OALIntrDis|

; 337  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET0, 1 << IRQ_GPIO1_MPU);

  000d8	e3a03202	 mov         r3, #2, 4
  000dc	e58e308c	 str         r3, [lr, #0x8C]

; 338  : 			CLRREG32(&g_pGPIORegs[0]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_0));  // mask IRQ

  000e0	e5960004	 ldr         r0, [r6, #4]
  000e4	e24420a0	 sub         r2, r4, #0xA0
  000e8	e3a04001	 mov         r4, #1
  000ec	e590301c	 ldr         r3, [r0, #0x1C]
  000f0	e1c33214	 bic         r3, r3, r4, lsl r2
  000f4	e580301c	 str         r3, [r0, #0x1C]

; 339  : 			OUTREG32(&g_pGPIORegs[0]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_0));  // clear IRQ

  000f8	e5963004	 ldr         r3, [r6, #4]
  000fc	ea000037	 b           |$LN37@OALIntrDis|
  00100		 |$LN7@OALIntrDis|

; 340  :         } else if (irq < IRQ_GPIO_64) {

  00100	e35400e0	 cmp         r4, #0xE0
  00104	2a000010	 bcs         |$LN5@OALIntrDis|
  00108	e5953440	 ldr         r3, [r5, #0x440]

; 341  : 			OALMSG(OAL_INTR, (
; 342  : 				L"OALIntrDisableIrqs(Irq GPIO2 %d)\r\n", irq - IRQ_GPIO_32));

  0010c	e3130901	 tst         r3, #1, 18
  00110	0a000003	 beq         |$LN27@OALIntrDis|
  00114	e59f0104	 ldr         r0, [pc, #0x104]
  00118	e24410c0	 sub         r1, r4, #0xC0
  0011c	eb000000	 bl          NKDbgPrintfW
  00120	e596e000	 ldr         lr, [r6]
  00124		 |$LN27@OALIntrDis|

; 343  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET0, 1 << IRQ_GPIO2_MPU);

  00124	e3a03101	 mov         r3, #1, 2
  00128	e58e308c	 str         r3, [lr, #0x8C]

; 344  : 			CLRREG32(&g_pGPIORegs[1]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_32));  // mask IRQ

  0012c	e5960008	 ldr         r0, [r6, #8]
  00130	e24420c0	 sub         r2, r4, #0xC0
  00134	e3a04001	 mov         r4, #1
  00138	e590301c	 ldr         r3, [r0, #0x1C]
  0013c	e1c33214	 bic         r3, r3, r4, lsl r2
  00140	e580301c	 str         r3, [r0, #0x1C]

; 345  : 			OUTREG32(&g_pGPIORegs[1]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_32));  // clear IRQ

  00144	e5963008	 ldr         r3, [r6, #8]
  00148	ea000024	 b           |$LN37@OALIntrDis|
  0014c		 |$LN5@OALIntrDis|

; 346  :         } else if (irq < IRQ_GPIO_96) {

  0014c	e3540c01	 cmp         r4, #1, 24
  00150	2a000010	 bcs         |$LN3@OALIntrDis|
  00154	e5953440	 ldr         r3, [r5, #0x440]

; 347  : 			OALMSG(OAL_INTR, (
; 348  : 				L"OALIntrDisableIrqs(Irq GPIO3 %d)\r\n", irq - IRQ_GPIO_64));

  00158	e3130901	 tst         r3, #1, 18
  0015c	0a000003	 beq         |$LN29@OALIntrDis|
  00160	e59f00b4	 ldr         r0, [pc, #0xB4]
  00164	e24410e0	 sub         r1, r4, #0xE0
  00168	eb000000	 bl          NKDbgPrintfW
  0016c	e596e000	 ldr         lr, [r6]
  00170		 |$LN29@OALIntrDis|

; 349  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET0, 1 << IRQ_GPIO3_MPU);

  00170	e3a03102	 mov         r3, #2, 2
  00174	e58e308c	 str         r3, [lr, #0x8C]

; 350  : 			CLRREG32(&g_pGPIORegs[2]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_64));  // mask IRQ

  00178	e596000c	 ldr         r0, [r6, #0xC]
  0017c	e24420e0	 sub         r2, r4, #0xE0
  00180	e3a04001	 mov         r4, #1
  00184	e590301c	 ldr         r3, [r0, #0x1C]
  00188	e1c33214	 bic         r3, r3, r4, lsl r2
  0018c	e580301c	 str         r3, [r0, #0x1C]

; 351  : 			OUTREG32(&g_pGPIORegs[2]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_64));  // clear IRQ

  00190	e596300c	 ldr         r3, [r6, #0xC]
  00194	ea000011	 b           |$LN37@OALIntrDis|
  00198		 |$LN3@OALIntrDis|

; 352  :         } else if (irq < IRQ_GPIO_128) {

  00198	e3540e12	 cmp         r4, #0x12, 28
  0019c	2a000011	 bcs         |$LN17@OALIntrDis|
  001a0	e5953440	 ldr         r3, [r5, #0x440]

; 353  : 			OALMSG(OAL_INTR, (
; 354  : 				L"OALIntrDisableIrqs(Irq GPIO4 %d)\r\n", irq - IRQ_GPIO_96));

  001a4	e3130901	 tst         r3, #1, 18
  001a8	0a000003	 beq         |$LN31@OALIntrDis|
  001ac	e59f0064	 ldr         r0, [pc, #0x64]
  001b0	e2441c01	 sub         r1, r4, #1, 24
  001b4	eb000000	 bl          NKDbgPrintfW
  001b8	e596e000	 ldr         lr, [r6]
  001bc		 |$LN31@OALIntrDis|

; 355  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET1, 1 << (IRQ_GPIO4_MPU-32));

  001bc	e3a03001	 mov         r3, #1
  001c0	e58e30ac	 str         r3, [lr, #0xAC]

; 356  : 			CLRREG32(&g_pGPIORegs[3]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_96));  // mask IRQ

  001c4	e5960010	 ldr         r0, [r6, #0x10]
  001c8	e2442c01	 sub         r2, r4, #1, 24
  001cc	e3a04001	 mov         r4, #1
  001d0	e590301c	 ldr         r3, [r0, #0x1C]
  001d4	e1c33214	 bic         r3, r3, r4, lsl r2
  001d8	e580301c	 str         r3, [r0, #0x1C]

; 357  : 			OUTREG32(&g_pGPIORegs[3]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_96));  // clear IRQ

  001dc	e5963010	 ldr         r3, [r6, #0x10]
  001e0		 |$LN37@OALIntrDis|
  001e0	e1a01214	 mov         r1, r4, lsl r2
  001e4	e5831018	 str         r1, [r3, #0x18]
  001e8		 |$LN17@OALIntrDis|
  001e8	e2888004	 add         r8, r8, #4
  001ec	e2577001	 subs        r7, r7, #1
  001f0	e3a02001	 mov         r2, #1
  001f4	1affff94	 bne         |$LL18@OALIntrDis|
  001f8		 |$LN16@OALIntrDis|

; 316  :     UINT32 irq, i;
; 317  :     
; 318  :     OALMSG(OAL_INTR&&OAL_FUNC, (
; 319  :         L"+OALIntrDisableIrqs(%d, 0x%08x)\r\n", count, pIrqs
; 320  :     ));

  001f8	e5953440	 ldr         r3, [r5, #0x440]

; 358  :         } 
; 359  :     }
; 360  :     OALMSG(OAL_INTR&&OAL_FUNC, (L"-OALIntrDisableIrqs\r\n"));

  001fc	e3130901	 tst         r3, #1, 18
  00200	13130004	 tstne       r3, #4
  00204	159f0008	 ldrne       r0, [pc, #8]
  00208	1b000000	 blne        NKDbgPrintfW

; 361  : }

  0020c	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00210	e12fff1e	 bx          lr
  00214		 |$LN41@OALIntrDis|
  00214		 |$LN42@OALIntrDis|
  00214	00000000	 DCD         |??_C@_1CM@GPENGBBP@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00218		 |$LN43@OALIntrDis|
  00218	00000000	 DCD         |??_C@_1EG@DGAOCPAC@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?5?$AA?$CF?$AAd?$AA?$CJ@|
  0021c		 |$LN44@OALIntrDis|
  0021c	00000000	 DCD         |??_C@_1EG@MLPHNHHH@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?5?$AA?$CF?$AAd?$AA?$CJ@|
  00220		 |$LN45@OALIntrDis|
  00220	00000000	 DCD         |??_C@_1EG@GFJPEGOG@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?5?$AA?$CF?$AAd?$AA?$CJ@|
  00224		 |$LN46@OALIntrDis|
  00224	00000000	 DCD         |??_C@_1EG@EMFHPCBE@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?5?$AA?$CF?$AAd?$AA?$CJ@|
  00228		 |$LN47@OALIntrDis|
  00228	00000000	 DCD         |??_C@_1EM@NGMPKPHC@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAM?$AAE?$AAN?$AAE?$AAL?$AAA?$AAU?$AAS?$AA?5@|
  0022c		 |$LN48@OALIntrDis|
  0022c	00000000	 DCD         |g_pIntcRegs|
  00230		 |$LN49@OALIntrDis|
  00230	00000000	 DCD         |??_C@_1EE@NIPMEMC@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN@|
  00234		 |$LN50@OALIntrDis|
  00234	00000000	 DCD         |dpCurSettings|
  00238		 |$M46119|

			 ENDP  ; |OALIntrDisableIrqs|

	EXPORT	|OALIntrDoneIrqs|
	EXPORT	|??_C@_1CE@EOLKJDEL@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@KCEDHCMK@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@FPLKIKLP@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@PBNCBLCO@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@NIBKKPNM@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T46154| DCD	|$LN34@OALIntrDon|
	DCD	0x40007401

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@EOLKJDEL@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "D", 0x0, "o", 0x0, "n", 0x0, "e", 0x0, "I"
	DCB	0x0, "r", 0x0, "q", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@KCEDHCMK@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "D", 0x0, "o", 0x0, "n", 0x0, "e", 0x0, "I", 0x0, "r"
	DCB	0x0, "q", 0x0, "s", 0x0, "(", 0x0, "I", 0x0, "r", 0x0, "q"
	DCB	0x0, " ", 0x0, "G", 0x0, "P", 0x0, "I", 0x0, "O", 0x0, "4"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@FPLKIKLP@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "D", 0x0, "o", 0x0, "n", 0x0, "e", 0x0, "I", 0x0, "r"
	DCB	0x0, "q", 0x0, "s", 0x0, "(", 0x0, "I", 0x0, "r", 0x0, "q"
	DCB	0x0, " ", 0x0, "G", 0x0, "P", 0x0, "I", 0x0, "O", 0x0, "3"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@PBNCBLCO@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "D", 0x0, "o", 0x0, "n", 0x0, "e", 0x0, "I", 0x0, "r"
	DCB	0x0, "q", 0x0, "s", 0x0, "(", 0x0, "I", 0x0, "r", 0x0, "q"
	DCB	0x0, " ", 0x0, "G", 0x0, "P", 0x0, "I", 0x0, "O", 0x0, "2"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@NIBKKPNM@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "D", 0x0, "o", 0x0, "n", 0x0, "e", 0x0, "I", 0x0, "r"
	DCB	0x0, "q", 0x0, "s", 0x0, "(", 0x0, "I", 0x0, "r", 0x0, "q"
	DCB	0x0, " ", 0x0, "G", 0x0, "P", 0x0, "I", 0x0, "O", 0x0, "1"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIntrDoneIrqs| PROC

; 368  : {

  00000		 |$LN34@OALIntrDon|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004		 |$M46151|
  00004	e1a07001	 mov         r7, r1
  00008	e1b08000	 movs        r8, r0

; 369  :     UINT32 irq, i;
; 370  : 
; 371  :     for (i = 0; i < count; i++) {

  0000c	e59f51b8	 ldr         r5, [pc, #0x1B8]
  00010	0a000060	 beq         |$LN14@OALIntrDon|
  00014	e59f61ac	 ldr         r6, [pc, #0x1AC]
  00018	e3a09001	 mov         r9, #1
  0001c	e3a0a001	 mov         r10, #1
  00020	e596e000	 ldr         lr, [r6]
  00024	e3a0b001	 mov         r11, #1
  00028		 |$LL16@OALIntrDon|

; 372  :         irq = pIrqs[i];

  00028	e5974000	 ldr         r4, [r7]

; 373  :         if (irq < 32) {

  0002c	e3540020	 cmp         r4, #0x20

; 374  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR0, 1 << irq);

  00030	31a03419	 movcc       r3, r9, lsl r4
  00034	358e3088	 strcc       r3, [lr, #0x88]
  00038	3a000053	 bcc         |$LN15@OALIntrDon|

; 375  :         } else if (irq < 64) {

  0003c	e3540040	 cmp         r4, #0x40

; 376  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR1, 1 << (irq - 32));

  00040	32443020	 subcc       r3, r4, #0x20
  00044	31a0331a	 movcc       r3, r10, lsl r3
  00048	358e30a8	 strcc       r3, [lr, #0xA8]
  0004c	3a00004e	 bcc         |$LN15@OALIntrDon|

; 377  :         } else if (irq < 96) {

  00050	e3540060	 cmp         r4, #0x60

; 378  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR2, 1 << (irq - 64));

  00054	32443040	 subcc       r3, r4, #0x40
  00058	31a0331b	 movcc       r3, r11, lsl r3
  0005c	358e30c8	 strcc       r3, [lr, #0xC8]
  00060	3a000049	 bcc         |$LN15@OALIntrDon|

; 379  :         } else if (irq < IRQ_GPIO_32) {

  00064	e35400c0	 cmp         r4, #0xC0
  00068	2a00000f	 bcs         |$LN7@OALIntrDon|

; 380  : 			OALMSG(OAL_INTR, (L"OALIntrDoneIrqs(Irq GPIO1 %d)\r\n", irq - IRQ_GPIO_0));

  0006c	e5953440	 ldr         r3, [r5, #0x440]
  00070	e3130901	 tst         r3, #1, 18
  00074	0a000003	 beq         |$LN19@OALIntrDon|
  00078	e59f0144	 ldr         r0, [pc, #0x144]
  0007c	e24410a0	 sub         r1, r4, #0xA0
  00080	eb000000	 bl          NKDbgPrintfW
  00084	e596e000	 ldr         lr, [r6]
  00088		 |$LN19@OALIntrDon|

; 381  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR0, 1 << IRQ_GPIO1_MPU);

  00088	e3a03202	 mov         r3, #2, 4
  0008c	e58e3088	 str         r3, [lr, #0x88]

; 382  : 			OUTREG32(&g_pGPIORegs[0]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_0));  // clear IRQ

  00090	e5962004	 ldr         r2, [r6, #4]
  00094	e24410a0	 sub         r1, r4, #0xA0
  00098	e3a00001	 mov         r0, #1
  0009c	e1a03110	 mov         r3, r0, lsl r1
  000a0	e5823018	 str         r3, [r2, #0x18]

; 383  : 			SETREG32(&g_pGPIORegs[0]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_0));  // unmask IRQ

  000a4	e5962004	 ldr         r2, [r6, #4]
  000a8	ea000034	 b           |$LN31@OALIntrDon|
  000ac		 |$LN7@OALIntrDon|

; 384  :         } else if (irq < IRQ_GPIO_64) {

  000ac	e35400e0	 cmp         r4, #0xE0
  000b0	2a00000f	 bcs         |$LN5@OALIntrDon|

; 385  : 			OALMSG(OAL_INTR, (L"OALIntrDoneIrqs(Irq GPIO2 %d)\r\n", irq - IRQ_GPIO_32));

  000b4	e5953440	 ldr         r3, [r5, #0x440]
  000b8	e3130901	 tst         r3, #1, 18
  000bc	0a000003	 beq         |$LN21@OALIntrDon|
  000c0	e59f00f8	 ldr         r0, [pc, #0xF8]
  000c4	e24410c0	 sub         r1, r4, #0xC0
  000c8	eb000000	 bl          NKDbgPrintfW
  000cc	e596e000	 ldr         lr, [r6]
  000d0		 |$LN21@OALIntrDon|

; 386  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR0, 1 << IRQ_GPIO2_MPU);

  000d0	e3a03101	 mov         r3, #1, 2
  000d4	e58e3088	 str         r3, [lr, #0x88]

; 387  : 			OUTREG32(&g_pGPIORegs[1]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_32));  // clear IRQ

  000d8	e5962008	 ldr         r2, [r6, #8]
  000dc	e24410c0	 sub         r1, r4, #0xC0
  000e0	e3a00001	 mov         r0, #1
  000e4	e1a03110	 mov         r3, r0, lsl r1
  000e8	e5823018	 str         r3, [r2, #0x18]

; 388  : 			SETREG32(&g_pGPIORegs[1]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_32));  // unmask IRQ

  000ec	e5962008	 ldr         r2, [r6, #8]
  000f0	ea000022	 b           |$LN31@OALIntrDon|
  000f4		 |$LN5@OALIntrDon|

; 389  :         } else if (irq < IRQ_GPIO_96) {

  000f4	e3540c01	 cmp         r4, #1, 24
  000f8	2a00000f	 bcs         |$LN3@OALIntrDon|

; 390  : 			OALMSG(OAL_INTR, (L"OALIntrDoneIrqs(Irq GPIO3 %d)\r\n", irq - IRQ_GPIO_64));

  000fc	e5953440	 ldr         r3, [r5, #0x440]
  00100	e3130901	 tst         r3, #1, 18
  00104	0a000003	 beq         |$LN23@OALIntrDon|
  00108	e59f00ac	 ldr         r0, [pc, #0xAC]
  0010c	e24410e0	 sub         r1, r4, #0xE0
  00110	eb000000	 bl          NKDbgPrintfW
  00114	e596e000	 ldr         lr, [r6]
  00118		 |$LN23@OALIntrDon|

; 391  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR0, 1 << IRQ_GPIO3_MPU);

  00118	e3a03102	 mov         r3, #2, 2
  0011c	e58e3088	 str         r3, [lr, #0x88]

; 392  : 			OUTREG32(&g_pGPIORegs[2]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_64));  // clear IRQ

  00120	e596200c	 ldr         r2, [r6, #0xC]
  00124	e24410e0	 sub         r1, r4, #0xE0
  00128	e3a00001	 mov         r0, #1
  0012c	e1a03110	 mov         r3, r0, lsl r1
  00130	e5823018	 str         r3, [r2, #0x18]

; 393  : 			SETREG32(&g_pGPIORegs[2]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_64));  // unmask IRQ

  00134	e596200c	 ldr         r2, [r6, #0xC]
  00138	ea000010	 b           |$LN31@OALIntrDon|
  0013c		 |$LN3@OALIntrDon|

; 394  :         } else if (irq < IRQ_GPIO_128) {

  0013c	e3540e12	 cmp         r4, #0x12, 28
  00140	2a000011	 bcs         |$LN15@OALIntrDon|

; 395  : 			OALMSG(OAL_INTR, (L"OALIntrDoneIrqs(Irq GPIO4 %d)\r\n", irq - IRQ_GPIO_96));

  00144	e5953440	 ldr         r3, [r5, #0x440]
  00148	e3130901	 tst         r3, #1, 18
  0014c	0a000003	 beq         |$LN25@OALIntrDon|
  00150	e59f0060	 ldr         r0, [pc, #0x60]
  00154	e2441c01	 sub         r1, r4, #1, 24
  00158	eb000000	 bl          NKDbgPrintfW
  0015c	e596e000	 ldr         lr, [r6]
  00160		 |$LN25@OALIntrDon|

; 396  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_CLEAR1, 1 << (IRQ_GPIO4_MPU-32));

  00160	e3a03001	 mov         r3, #1
  00164	e58e30a8	 str         r3, [lr, #0xA8]

; 397  : 			OUTREG32(&g_pGPIORegs[3]->ulGPIO_IRQSTATUS1, 1<<(irq - IRQ_GPIO_96));  // clear IRQ

  00168	e5962010	 ldr         r2, [r6, #0x10]
  0016c	e2441c01	 sub         r1, r4, #1, 24
  00170	e3a00001	 mov         r0, #1
  00174	e1a03110	 mov         r3, r0, lsl r1
  00178	e5823018	 str         r3, [r2, #0x18]

; 398  : 			SETREG32(&g_pGPIORegs[3]->ulGPIO_IRQENABLE1, 1<<(irq - IRQ_GPIO_96));  // unmask IRQ

  0017c	e5962010	 ldr         r2, [r6, #0x10]
  00180		 |$LN31@OALIntrDon|
  00180	e592301c	 ldr         r3, [r2, #0x1C]
  00184	e1833110	 orr         r3, r3, r0, lsl r1
  00188	e582301c	 str         r3, [r2, #0x1C]
  0018c		 |$LN15@OALIntrDon|
  0018c	e2877004	 add         r7, r7, #4
  00190	e2588001	 subs        r8, r8, #1
  00194	1affffa3	 bne         |$LL16@OALIntrDon|
  00198		 |$LN14@OALIntrDon|

; 399  :         } 
; 400  :     }
; 401  :     OALMSG(OAL_INTR&&OAL_VERBOSE, (L"-OALIntrDoneIrq\r\n"));

  00198	e5953440	 ldr         r3, [r5, #0x440]
  0019c	e3130901	 tst         r3, #1, 18
  001a0	13130902	 tstne       r3, #2, 18
  001a4	159f0008	 ldrne       r0, [pc, #8]
  001a8	1b000000	 blne        NKDbgPrintfW

; 402  : }

  001ac	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  001b0	e12fff1e	 bx          lr
  001b4		 |$LN35@OALIntrDon|
  001b4		 |$LN36@OALIntrDon|
  001b4	00000000	 DCD         |??_C@_1CE@EOLKJDEL@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AA?$AN?$AA?6?$AA?$AA@|
  001b8		 |$LN37@OALIntrDon|
  001b8	00000000	 DCD         |??_C@_1EA@KCEDHCMK@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  001bc		 |$LN38@OALIntrDon|
  001bc	00000000	 DCD         |??_C@_1EA@FPLKIKLP@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  001c0		 |$LN39@OALIntrDon|
  001c0	00000000	 DCD         |??_C@_1EA@PBNCBLCO@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  001c4		 |$LN40@OALIntrDon|
  001c4	00000000	 DCD         |??_C@_1EA@NIBKKPNM@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAD?$AAo?$AAn?$AAe?$AAI?$AAr?$AAq?$AAs?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  001c8		 |$LN41@OALIntrDon|
  001c8	00000000	 DCD         |g_pIntcRegs|
  001cc		 |$LN42@OALIntrDon|
  001cc	00000000	 DCD         |dpCurSettings|
  001d0		 |$M46152|

			 ENDP  ; |OALIntrDoneIrqs|

	EXPORT	|OEMInterruptHandler|
	EXPORT	|??_C@_1DO@PPLILHPG@?$AAu?$AAn?$AAd?$AAe?$AAf?$AAi?$AAn?$AAe?$AAd?$AA?5?$AAI?$AAR?$AAQ?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AA?9?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@PAAKOGNH@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAT?$AAr?$AAa?$AAn?$AAs?$AAl?$AAa?$AAt?$AAe?$AAI?$AAr?$AAq?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@HFDCNIPJ@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAU?$AAN?$AAK?$AAN?$AAO?$AAW?$AAN?$AAN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@NLILHIEP@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@FILLMMOB@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@LKGHNHJI@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@FFKFLMKG@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@KMJGDKHO@?$AAG?$AAP?$AAI?$AAO?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAi?$AAr?$AAq?$AA?5?$AA?9?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@LOJCAHKF@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	IMPORT	|OALIntrTranslateIrq|
	IMPORT	|OALTimerIntrHandler|

  00000			 AREA	 |.pdata|, PDATA
|$T46221| DCD	|$LN83@OEMInterru|
	DCD	0x4000bd02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@PPLILHPG@?$AAu?$AAn?$AAd?$AAe?$AAf?$AAi?$AAn?$AAe?$AAd?$AA?5?$AAI?$AAR?$AAQ?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AA?9?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "u"
	DCB	0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "I", 0x0, "R", 0x0, "Q"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@PAAKOGNH@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAT?$AAr?$AAa?$AAn?$AAs?$AAl?$AAa?$AAt?$AAe?$AAI?$AAr?$AAq?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "l"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "I", 0x0, "r", 0x0, "q"
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, "=", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@HFDCNIPJ@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAU?$AAN?$AAK?$AAN?$AAO?$AAW?$AAN?$AAN@| DCB "O"
	DCB	0x0, "E", 0x0, "M", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, "(", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "U"
	DCB	0x0, "N", 0x0, "K", 0x0, "N", 0x0, "O", 0x0, "W", 0x0, "N"
	DCB	0x0, "N", 0x0, "O", 0x0, "N", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@NLILHIEP@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "E", 0x0, "M", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, "(", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@FILLMMOB@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?$CJ?$AA?$AN?$AA?6@| DCB "O"
	DCB	0x0, "E", 0x0, "M", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, "(", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G"
	DCB	0x0, "P", 0x0, "I", 0x0, "O", 0x0, "4", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@LKGHNHJI@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?$CJ?$AA?$AN?$AA?6@| DCB "O"
	DCB	0x0, "E", 0x0, "M", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, "(", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G"
	DCB	0x0, "P", 0x0, "I", 0x0, "O", 0x0, "3", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@FFKFLMKG@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?$CJ?$AA?$AN?$AA?6@| DCB "O"
	DCB	0x0, "E", 0x0, "M", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, "(", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G"
	DCB	0x0, "P", 0x0, "I", 0x0, "O", 0x0, "2", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@KMJGDKHO@?$AAG?$AAP?$AAI?$AAO?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAi?$AAr?$AAq?$AA?5?$AA?9?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "G"
	DCB	0x0, "P", 0x0, "I", 0x0, "O", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, " ", 0x0, "i", 0x0, "r", 0x0, "q", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@LOJCAHKF@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?$CJ?$AA?$AN?$AA?6@| DCB "O"
	DCB	0x0, "E", 0x0, "M", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, "(", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "G"
	DCB	0x0, "P", 0x0, "I", 0x0, "O", 0x0, "1", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMInterruptHandler| PROC

; 411  : {

  00000		 |$LN83@OEMInterru|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M46218|

; 412  :     UINT32 irq = OAL_INTR_IRQ_UNDEFINED;
; 413  :     UINT32 sysIntr = SYSINTR_NOP;
; 414  :     UINT32 data, mask;
; 415  :     
; 416  :     // Get pending interrupt
; 417  :     irq = INREG32(&g_pIntcRegs->ulINTC_SIR_IRQ);

  00008	e59f62e0	 ldr         r6, [pc, #0x2E0]

; 418  : 
; 419  :     // Check if this is timer IRQ
; 420  :     if (irq == g_oalTimerIrq) {

  0000c	e59f32d8	 ldr         r3, [pc, #0x2D8]
  00010	e3a05000	 mov         r5, #0
  00014	e5961000	 ldr         r1, [r6]
  00018	e5933000	 ldr         r3, [r3]
  0001c	e5914040	 ldr         r4, [r1, #0x40]
  00020	e58d4000	 str         r4, [sp]
  00024	e1540003	 cmp         r4, r3
  00028	1a000005	 bne         |$LN38@OEMInterru|

; 421  :         // Call timer interrupt handler
; 422  :         sysIntr = OALTimerIntrHandler();

  0002c	eb000000	 bl          OALTimerIntrHandler
  00030	e1a05000	 mov         r5, r0

; 423  :         // We are done with interrupt
; 424  :         OALIntrDoneIrqs(1, &irq);

  00034	e3a00001	 mov         r0, #1
  00038	e28d1000	 add         r1, sp, #0
  0003c	eb000000	 bl          OALIntrDoneIrqs
  00040	ea000097	 b           |$LN1@OEMInterru|
  00044		 |$LN38@OEMInterru|

; 425  : 
; 426  :     } 
; 427  : 	else if (irq != OAL_INTR_IRQ_UNDEFINED) 

  00044	e3740001	 cmn         r4, #1
  00048	0a000092	 beq         |$LN36@OEMInterru|

; 428  : 	{
; 429  : #ifdef OAL_ILTIMING
; 430  :     if (g_oalILT.active) g_oalILT.interrupts++;
; 431  : #endif
; 432  : 
; 433  :         if (irq == IRQ_GPIO1_MPU) {
; 434  : 			OALMSG(OAL_INTR, (L"OEMInterruptHandler(Irq GPIO1)\r\n"));

  0004c	e59f5294	 ldr         r5, [pc, #0x294]
  00050	e354001d	 cmp         r4, #0x1D
  00054	e5953440	 ldr         r3, [r5, #0x440]
  00058	1a000017	 bne         |$LN35@OEMInterru|
  0005c	e3130901	 tst         r3, #1, 18
  00060	0a000002	 beq         |$LN41@OEMInterru|
  00064	e59f0278	 ldr         r0, [pc, #0x278]
  00068	eb000000	 bl          NKDbgPrintfW
  0006c	e5961000	 ldr         r1, [r6]
  00070		 |$LN41@OEMInterru|

; 435  : 			irq = IRQ_GPIO_0;
; 436  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET0, 1 << IRQ_GPIO1_MPU);

  00070	e3a03202	 mov         r3, #2, 4
  00074	e581308c	 str         r3, [r1, #0x8C]

; 437  : 			// If it is interrupt from GPIOx, find which one, mask and clear it..
; 438  : 			if ((data = INREG32(&g_pGPIORegs[0]->ulGPIO_IRQSTATUS1)) != 0) {

  00078	e5961004	 ldr         r1, [r6, #4]
  0007c	e3a040a0	 mov         r4, #0xA0
  00080	e5913018	 ldr         r3, [r1, #0x18]
  00084	e1b02003	 movs        r2, r3
  00088	0a000077	 beq         |$LN63@OEMInterru|

; 439  : 				for (mask = 1; mask != 0; mask <<= 1, irq++) {

  0008c	e3a03001	 mov         r3, #1
  00090		 |$LL33@OEMInterru|

; 440  : 					if ((mask & data) != 0) break;

  00090	e1130002	 tst         r3, r2
  00094	1a000002	 bne         |$LN71@OEMInterru|
  00098	e1b03083	 movs        r3, r3, lsl #1
  0009c	e2844001	 add         r4, r4, #1
  000a0	1afffffa	 bne         |$LL33@OEMInterru|
  000a4		 |$LN71@OEMInterru|

; 441  : 				}
; 442  : 				OUTREG32(&g_pGPIORegs[0]->ulGPIO_CLEARIRQENABLE1, mask);  // mask IRQ

  000a4	e5813060	 str         r3, [r1, #0x60]

; 443  : 				OALMSG(OAL_INTR, (L"GPIO Interrupt irq - %d\r\n",irq ));

  000a8	e5953440	 ldr         r3, [r5, #0x440]
  000ac	e3130901	 tst         r3, #1, 18
  000b0	0a00006d	 beq         |$LN63@OEMInterru|
  000b4	e59f0224	 ldr         r0, [pc, #0x224]

; 444  : 			}

  000b8	ea000069	 b           |$LN79@OEMInterru|
  000bc		 |$LN35@OEMInterru|

; 445  :         } else if (irq == IRQ_GPIO2_MPU) {

  000bc	e354001e	 cmp         r4, #0x1E
  000c0	1a000012	 bne         |$LN28@OEMInterru|

; 446  : 			OALMSG(OAL_INTR, (L"OEMInterruptHandler(Irq GPIO2)\r\n"));

  000c4	e3130901	 tst         r3, #1, 18
  000c8	0a000002	 beq         |$LN45@OEMInterru|
  000cc	e59f0208	 ldr         r0, [pc, #0x208]
  000d0	eb000000	 bl          NKDbgPrintfW
  000d4	e5961000	 ldr         r1, [r6]
  000d8		 |$LN45@OEMInterru|

; 447  : 			irq = IRQ_GPIO_32;
; 448  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET0, 1 << IRQ_GPIO2_MPU);

  000d8	e3a03101	 mov         r3, #1, 2
  000dc	e581308c	 str         r3, [r1, #0x8C]

; 449  : 			// If it is interrupt from GPIOx, find which one, mask  it..
; 450  : 			if ((data = INREG32(&g_pGPIORegs[1]->ulGPIO_IRQSTATUS1)) != 0) {

  000e0	e5961008	 ldr         r1, [r6, #8]
  000e4	e3a040c0	 mov         r4, #0xC0
  000e8	e5913018	 ldr         r3, [r1, #0x18]
  000ec	e1b02003	 movs        r2, r3
  000f0	0a00005d	 beq         |$LN63@OEMInterru|

; 451  : 				for (mask = 1; mask != 0; mask <<= 1, irq++) {

  000f4	e3a03001	 mov         r3, #1
  000f8		 |$LL26@OEMInterru|

; 452  : 					if ((mask & data) != 0) break;

  000f8	e1130002	 tst         r3, r2
  000fc	1affffe8	 bne         |$LN71@OEMInterru|
  00100	e1b03083	 movs        r3, r3, lsl #1
  00104	e2844001	 add         r4, r4, #1
  00108	1afffffa	 bne         |$LL26@OEMInterru|

; 453  : 				}
; 454  : 				OUTREG32(&g_pGPIORegs[1]->ulGPIO_CLEARIRQENABLE1, mask);  // mask IRQ
; 455  : 				OALMSG(OAL_INTR, (L"GPIO Interrupt irq - %d\r\n",irq ));
; 456  : 			}

  0010c	eaffffe4	 b           |$LN71@OEMInterru|
  00110		 |$LN28@OEMInterru|

; 457  :         } else if (irq == IRQ_GPIO3_MPU) {

  00110	e354001f	 cmp         r4, #0x1F
  00114	1a000012	 bne         |$LN21@OEMInterru|

; 458  : 			OALMSG(OAL_INTR, (L"OEMInterruptHandler(Irq GPIO3)\r\n"));

  00118	e3130901	 tst         r3, #1, 18
  0011c	0a000002	 beq         |$LN49@OEMInterru|
  00120	e59f01b0	 ldr         r0, [pc, #0x1B0]
  00124	eb000000	 bl          NKDbgPrintfW
  00128	e5961000	 ldr         r1, [r6]
  0012c		 |$LN49@OEMInterru|

; 459  : 			irq = IRQ_GPIO_64;
; 460  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET0, 1 << IRQ_GPIO3_MPU);

  0012c	e3a03102	 mov         r3, #2, 2
  00130	e581308c	 str         r3, [r1, #0x8C]

; 461  : 			// If it is interrupt from GPIOx, find which one, mask  it..
; 462  : 			if ((data = INREG32(&g_pGPIORegs[2]->ulGPIO_IRQSTATUS1)) != 0) {

  00134	e596100c	 ldr         r1, [r6, #0xC]
  00138	e3a040e0	 mov         r4, #0xE0
  0013c	e5913018	 ldr         r3, [r1, #0x18]
  00140	e1b02003	 movs        r2, r3
  00144	0a000048	 beq         |$LN63@OEMInterru|

; 463  : 				for (mask = 1; mask != 0; mask <<= 1, irq++) {

  00148	e3a03001	 mov         r3, #1
  0014c		 |$LL19@OEMInterru|

; 464  : 					if ((mask & data) != 0) break;

  0014c	e1130002	 tst         r3, r2
  00150	1affffd3	 bne         |$LN71@OEMInterru|
  00154	e1b03083	 movs        r3, r3, lsl #1
  00158	e2844001	 add         r4, r4, #1
  0015c	1afffffa	 bne         |$LL19@OEMInterru|

; 465  : 				}
; 466  : 				OUTREG32(&g_pGPIORegs[2]->ulGPIO_CLEARIRQENABLE1, mask);  // mask IRQ
; 467  : 				OALMSG(OAL_INTR, (L"GPIO Interrupt irq - %d\r\n",irq ));
; 468  : 			}

  00160	eaffffcf	 b           |$LN71@OEMInterru|
  00164		 |$LN21@OEMInterru|

; 469  :         } else if (irq == IRQ_GPIO4_MPU) {

  00164	e3540020	 cmp         r4, #0x20
  00168	1a000012	 bne         |$LN80@OEMInterru|

; 470  : 			OALMSG(OAL_INTR, (L"OEMInterruptHandler(Irq GPIO4)\r\n"));

  0016c	e3130901	 tst         r3, #1, 18
  00170	0a000002	 beq         |$LN53@OEMInterru|
  00174	e59f0158	 ldr         r0, [pc, #0x158]
  00178	eb000000	 bl          NKDbgPrintfW
  0017c	e5961000	 ldr         r1, [r6]
  00180		 |$LN53@OEMInterru|

; 471  : 			irq = IRQ_GPIO_96;
; 472  :             OUTREG32(&g_pIntcRegs->ulINTC_MIR_SET1, 1 << (IRQ_GPIO4_MPU - 32));

  00180	e3a03001	 mov         r3, #1
  00184	e58130ac	 str         r3, [r1, #0xAC]

; 473  : 			// If it is interrupt from GPIOx, find which one, mask it..
; 474  : 			if ((data = INREG32(&g_pGPIORegs[3]->ulGPIO_IRQSTATUS1)) != 0) {

  00188	e5961010	 ldr         r1, [r6, #0x10]
  0018c	e3a04c01	 mov         r4, #1, 24
  00190	e5913018	 ldr         r3, [r1, #0x18]
  00194	e1b02003	 movs        r2, r3
  00198	0a000033	 beq         |$LN63@OEMInterru|

; 475  : 				for (mask = 1; mask != 0; mask <<= 1, irq++) {

  0019c	e3a03001	 mov         r3, #1
  001a0		 |$LL12@OEMInterru|

; 476  : 					if ((mask & data) != 0) break;

  001a0	e1130002	 tst         r3, r2
  001a4	1affffbe	 bne         |$LN71@OEMInterru|
  001a8	e1b03083	 movs        r3, r3, lsl #1
  001ac	e2844001	 add         r4, r4, #1
  001b0	1afffffa	 bne         |$LL12@OEMInterru|

; 477  : 				}
; 478  : 				OUTREG32(&g_pGPIORegs[3]->ulGPIO_CLEARIRQENABLE1, mask);  // mask IRQ
; 479  : 				OALMSG(OAL_INTR, (L"GPIO Interrupt irq - %d\r\n",irq ));
; 480  : 			}

  001b4	eaffffba	 b           |$LN71@OEMInterru|
  001b8		 |$LN80@OEMInterru|

; 481  :         } else if (irq < 32) {

  001b8	2a00000a	 bcs         |$LN7@OEMInterru|

; 482  : 			OALMSG(OAL_INTR, (L"OEMInterruptHandler(Irq %d)\r\n", irq));

  001bc	e3130901	 tst         r3, #1, 18
  001c0	0a000003	 beq         |$LN57@OEMInterru|
  001c4	e59f0104	 ldr         r0, [pc, #0x104]
  001c8	e1a01004	 mov         r1, r4
  001cc	eb000000	 bl          NKDbgPrintfW
  001d0	e5961000	 ldr         r1, [r6]
  001d4		 |$LN57@OEMInterru|

; 483  : 			SETPORT32(&g_pIntcRegs->ulINTC_MIR0, 1 << irq);

  001d4	e5913084	 ldr         r3, [r1, #0x84]
  001d8	e3a02001	 mov         r2, #1
  001dc	e1833412	 orr         r3, r3, r2, lsl r4
  001e0	e5813084	 str         r3, [r1, #0x84]
  001e4	ea000020	 b           |$LN63@OEMInterru|
  001e8		 |$LN7@OEMInterru|

; 484  : 		} else if (irq < 64) {

  001e8	e3540040	 cmp         r4, #0x40
  001ec	2a00000b	 bcs         |$LN5@OEMInterru|

; 485  : 			OALMSG(OAL_INTR, (L"OEMInterruptHandler(Irq %d)\r\n", irq));

  001f0	e3130901	 tst         r3, #1, 18
  001f4	0a000003	 beq         |$LN59@OEMInterru|
  001f8	e59f00d0	 ldr         r0, [pc, #0xD0]
  001fc	e1a01004	 mov         r1, r4
  00200	eb000000	 bl          NKDbgPrintfW
  00204	e5961000	 ldr         r1, [r6]
  00208		 |$LN59@OEMInterru|

; 486  : 			SETPORT32(&g_pIntcRegs->ulINTC_MIR1, 1 << (irq - 32));

  00208	e59120a4	 ldr         r2, [r1, #0xA4]
  0020c	e2443020	 sub         r3, r4, #0x20
  00210	e3a00001	 mov         r0, #1
  00214	e1823310	 orr         r3, r2, r0, lsl r3
  00218	e58130a4	 str         r3, [r1, #0xA4]
  0021c	ea000012	 b           |$LN63@OEMInterru|
  00220		 |$LN5@OEMInterru|

; 487  : 		} else if (irq < 96) {

  00220	e3540060	 cmp         r4, #0x60
  00224	2a00000b	 bcs         |$LN3@OEMInterru|

; 488  : 			OALMSG(OAL_INTR, (L"OEMInterruptHandler(Irq %d)\r\n", irq));

  00228	e3130901	 tst         r3, #1, 18
  0022c	0a000003	 beq         |$LN61@OEMInterru|
  00230	e59f0098	 ldr         r0, [pc, #0x98]
  00234	e1a01004	 mov         r1, r4
  00238	eb000000	 bl          NKDbgPrintfW
  0023c	e5961000	 ldr         r1, [r6]
  00240		 |$LN61@OEMInterru|

; 489  : 			SETPORT32(&g_pIntcRegs->ulINTC_MIR2, 1 << (irq - 64));

  00240	e59120c4	 ldr         r2, [r1, #0xC4]
  00244	e2443040	 sub         r3, r4, #0x40
  00248	e3a00001	 mov         r0, #1
  0024c	e1823310	 orr         r3, r2, r0, lsl r3
  00250	e58130c4	 str         r3, [r1, #0xC4]

; 490  : 		} else {

  00254	ea000004	 b           |$LN63@OEMInterru|
  00258		 |$LN3@OEMInterru|

; 491  : 			OALMSG(OAL_INTR, (L"OEMInterruptHandler(Irq UNKNOWNNON %d)\r\n", irq));

  00258	e3130901	 tst         r3, #1, 18
  0025c	0a000002	 beq         |$LN63@OEMInterru|
  00260	e59f0064	 ldr         r0, [pc, #0x64]
  00264		 |$LN79@OEMInterru|
  00264	e1a01004	 mov         r1, r4
  00268	eb000000	 bl          NKDbgPrintfW
  0026c		 |$LN63@OEMInterru|

; 492  : 		}
; 493  : 	
; 494  :         // We don't assume IRQ sharing, use static mapping
; 495  :         sysIntr = OALIntrTranslateIrq(irq);

  0026c	e1a00004	 mov         r0, r4
  00270	eb000000	 bl          OALIntrTranslateIrq

; 496  :         OALMSG(OAL_INTR, (L"OALIntrTranslateIrq(%d)=%d\r\n",irq,sysIntr));

  00274	e5953440	 ldr         r3, [r5, #0x440]
  00278	e1a05000	 mov         r5, r0
  0027c	e3130901	 tst         r3, #1, 18
  00280	0a000007	 beq         |$LN1@OEMInterru|
  00284	e59f003c	 ldr         r0, [pc, #0x3C]
  00288	e1a02005	 mov         r2, r5
  0028c	e1a01004	 mov         r1, r4
  00290	eb000000	 bl          NKDbgPrintfW

; 497  :     }
; 498  : 	else  

  00294	ea000002	 b           |$LN1@OEMInterru|
  00298		 |$LN36@OEMInterru|

; 499  : 	{
; 500  :         OALMSG( 1, (L"undefined IRQ interrupt - %d\r\n",irq));

  00298	e59f0024	 ldr         r0, [pc, #0x24]
  0029c	e3e01000	 mvn         r1, #0
  002a0	eb000000	 bl          NKDbgPrintfW
  002a4		 |$LN1@OEMInterru|

; 501  :     }
; 502  :     //Acknowledge the existing IRQ and set the INTC for receiving new IRQ interrupts
; 503  :     SETREG32(&g_pIntcRegs->ulINTC_CONTROL,1);

  002a4	e5962000	 ldr         r2, [r6]

; 504  : 
; 505  :     return sysIntr;
; 506  : }

  002a8	e1a00005	 mov         r0, r5
  002ac	e5923048	 ldr         r3, [r2, #0x48]
  002b0	e3833001	 orr         r3, r3, #1
  002b4	e5823048	 str         r3, [r2, #0x48]
  002b8	e28dd004	 add         sp, sp, #4
  002bc	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  002c0	e12fff1e	 bx          lr
  002c4		 |$LN84@OEMInterru|
  002c4		 |$LN85@OEMInterru|
  002c4	00000000	 DCD         |??_C@_1DO@PPLILHPG@?$AAu?$AAn?$AAd?$AAe?$AAf?$AAi?$AAn?$AAe?$AAd?$AA?5?$AAI?$AAR?$AAQ?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AA?9?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  002c8		 |$LN86@OEMInterru|
  002c8	00000000	 DCD         |??_C@_1DK@PAAKOGNH@?$AAO?$AAA?$AAL?$AAI?$AAn?$AAt?$AAr?$AAT?$AAr?$AAa?$AAn?$AAs?$AAl?$AAa?$AAt?$AAe?$AAI?$AAr?$AAq?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  002cc		 |$LN87@OEMInterru|
  002cc	00000000	 DCD         |??_C@_1FC@HFDCNIPJ@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAU?$AAN?$AAK?$AAN?$AAO?$AAW?$AAN?$AAN@|
  002d0		 |$LN88@OEMInterru|
  002d0	00000000	 DCD         |??_C@_1DM@NLILHIEP@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  002d4		 |$LN89@OEMInterru|
  002d4	00000000	 DCD         |??_C@_1EC@FILLMMOB@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA4?$AA?$CJ?$AA?$AN?$AA?6@|
  002d8		 |$LN90@OEMInterru|
  002d8	00000000	 DCD         |??_C@_1EC@LKGHNHJI@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA3?$AA?$CJ?$AA?$AN?$AA?6@|
  002dc		 |$LN91@OEMInterru|
  002dc	00000000	 DCD         |??_C@_1EC@FFKFLMKG@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA2?$AA?$CJ?$AA?$AN?$AA?6@|
  002e0		 |$LN92@OEMInterru|
  002e0	00000000	 DCD         |??_C@_1DE@KMJGDKHO@?$AAG?$AAP?$AAI?$AAO?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAi?$AAr?$AAq?$AA?5?$AA?9?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  002e4		 |$LN93@OEMInterru|
  002e4	00000000	 DCD         |??_C@_1EC@LOJCAHKF@?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AAI?$AAr?$AAq?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA1?$AA?$CJ?$AA?$AN?$AA?6@|
  002e8		 |$LN94@OEMInterru|
  002e8	00000000	 DCD         |dpCurSettings|
  002ec		 |$LN95@OEMInterru|
  002ec	00000000	 DCD         |g_oalTimerIrq|
  002f0		 |$LN96@OEMInterru|
  002f0	00000000	 DCD         |g_pIntcRegs|
  002f4		 |$M46219|

			 ENDP  ; |OEMInterruptHandler|

	EXPORT	|OALIntrIsIrqPending|

  00000			 AREA	 |.pdata|, PDATA
|$T46248| DCD	|$LN13@OALIntrIsI|
	DCD	0x40001b00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIntrIsIrqPending| PROC

; 516  : {

  00000		 |$LN13@OALIntrIsI|
  00000		 |$M46245|

; 517  :     BOOL rc = FALSE;
; 518  : 
; 519  :     if (irq < 32) {

  00000	e3500020	 cmp         r0, #0x20

; 520  :         rc = INREG32(&g_pIntcRegs->ulINTC_ITR0) & (1 << irq);

  00004	359f305c	 ldrcc       r3, [pc, #0x5C]
  00008	33a02001	 movcc       r2, #1
  0000c	35933000	 ldrcc       r3, [r3]
  00010	35933080	 ldrcc       r3, [r3, #0x80]
  00014	30033012	 andcc       r3, r3, r2, lsl r0
  00018	3a00000d	 bcc         |$LN1@OALIntrIsI|

; 521  :     } else if (irq < 64) {

  0001c	e3500040	 cmp         r0, #0x40

; 522  :         rc = INREG32(&g_pIntcRegs->ulINTC_ITR1) & (1 << (irq - 32));

  00020	359f3040	 ldrcc       r3, [pc, #0x40]
  00024	32402020	 subcc       r2, r0, #0x20
  00028	35933000	 ldrcc       r3, [r3]
  0002c	359330a0	 ldrcc       r3, [r3, #0xA0]
  00030	3a000005	 bcc         |$LN10@OALIntrIsI|

; 523  :     } else if (irq < 96) {

  00034	e3500060	 cmp         r0, #0x60
  00038	2a000008	 bcs         |$LN8@OALIntrIsI|

; 524  :         rc = INREG32(&g_pIntcRegs->ulINTC_ITR2) & (1 << (irq - 64));

  0003c	e59f3024	 ldr         r3, [pc, #0x24]
  00040	e2402040	 sub         r2, r0, #0x40
  00044	e5933000	 ldr         r3, [r3]
  00048	e59330c0	 ldr         r3, [r3, #0xC0]
  0004c		 |$LN10@OALIntrIsI|
  0004c	e3a01001	 mov         r1, #1
  00050	e0033211	 and         r3, r3, r1, lsl r2
  00054		 |$LN1@OALIntrIsI|

; 525  :     } 
; 526  :     return (rc != 0);

  00054	e3530000	 cmp         r3, #0
  00058	13a00001	 movne       r0, #1

; 527  : }

  0005c	112fff1e	 bxne        lr
  00060		 |$LN8@OALIntrIsI|

; 525  :     } 
; 526  :     return (rc != 0);

  00060	e3a00000	 mov         r0, #0

; 527  : }

  00064	e12fff1e	 bx          lr
  00068		 |$LN14@OALIntrIsI|
  00068		 |$LN15@OALIntrIsI|
  00068	00000000	 DCD         |g_pIntcRegs|
  0006c		 |$M46246|

			 ENDP  ; |OALIntrIsIrqPending|

	END
