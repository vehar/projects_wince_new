; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\OMAP2420_MS_V1\DISPLAY\halsurf.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|FourCCDescriptionTable| DCD 0x32595559
	DCD	0x10
	DCD	0xff00ff
	DCD	0xff00
	DCD	0xff000000
	DCD	0x56595559
	DCD	0x10
	DCD	0xff00ff
	DCD	0xff00
	DCD	0xff000000
	DCD	0x55595659
	DCD	0x10
	DCD	0xff00ff00
	DCD	0xff
	DCD	0xff0000
	DCD	0x59565955
	DCD	0x10
	DCD	0xff00ff00
	DCD	0xff
	DCD	0xff0000
	DCD	0x36315659
	DCD	0x10
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0x32315659
	DCD	0xc
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0x3231564e
	DCD	0xc
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0x30323449
	DCD	0xc
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0x56555949
	DCD	0xc
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0xffffffff
	EXPORT	|??_C@_1CC@LNLAFPEJ@?$AA?9?$AAH?$AAA?$AAl?$AAL?$AAo?$AAc?$AAk?$AA?3?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?Stride@GPESurf@@QAAHXZ|		; GPESurf::Stride
	EXPORT	|?Buffer@GPESurf@@QAAPAXXZ|		; GPESurf::Buffer
	EXPORT	|??_C@_1CC@GGLNLJPN@?$AA?$CL?$AAH?$AAA?$AAl?$AAL?$AAo?$AAc?$AAk?$AA?3?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?HalLock@@YAKPAU_DDHAL_LOCKDATA@@@Z|	; HalLock
	IMPORT	|Sleep|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
	IMPORT	|?GetDDGPESurf@DDGPESurf@@SAPAV1@PAU_DDRAWI_DDRAWSURFACE_LCL@@@Z| ; DDGPESurf::GetDDGPESurf
	IMPORT	|?GetDDGPE@@YAPAVDDGPE@@XZ|		; GetDDGPE

  00000			 AREA	 |.pdata|, PDATA
|$T40352| DCD	|$LN17@HalLock|
	DCD	0x40009c04
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\display\halsurf.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@LNLAFPEJ@?$AA?9?$AAH?$AAA?$AAl?$AAL?$AAo?$AAc?$AAk?$AA?3?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "H", 0x0, "A", 0x0, "l", 0x0, "L", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@GGLNLJPN@?$AA?$CL?$AAH?$AAA?$AAl?$AAL?$AAo?$AAc?$AAk?$AA?3?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "H", 0x0, "A", 0x0, "l", 0x0, "L", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HalLock@@YAKPAU_DDHAL_LOCKDATA@@@Z| PROC ; HalLock

; 22   : {

  00000		 |$LN17@HalLock|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd038	 sub         sp, sp, #0x38
  00010		 |$M40349|

; 23   :     DWORD       dwAddr;
; 24   :     DDGPE       *pDDGPE = GetDDGPE();

  00010	eb000000	 bl          |?GetDDGPE@@YAPAVDDGPE@@XZ|
  00014	e58d0010	 str         r0, [sp, #0x10]
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e58d3004	 str         r3, [sp, #4]

; 25   :     DDGPESurf   *pSurf = DDGPESurf::GetDDGPESurf(pd->lpDDSurface);

  00020	e59d3040	 ldr         r3, [sp, #0x40]
  00024	e2833004	 add         r3, r3, #4
  00028	e5930000	 ldr         r0, [r3]
  0002c	eb000000	 bl          |?GetDDGPESurf@DDGPESurf@@SAPAV1@PAU_DDRAWI_DDRAWSURFACE_LCL@@@Z|
  00030	e58d0014	 str         r0, [sp, #0x14]
  00034	e59d3014	 ldr         r3, [sp, #0x14]
  00038	e58d3008	 str         r3, [sp, #8]

; 26   : 
; 27   :     DEBUGMSG(GPE_ZONE_ENTER, (L"+HAlLock: %08X\r\n", pd->dwFlags));

  0003c	e59f3220	 ldr         r3, [pc, #0x220]
  00040	e5933440	 ldr         r3, [r3, #0x440]
  00044	e3130010	 tst         r3, #0x10
  00048	0a000007	 beq         |$LN11@HalLock|
  0004c	e59d3040	 ldr         r3, [sp, #0x40]
  00050	e283301c	 add         r3, r3, #0x1C
  00054	e5931000	 ldr         r1, [r3]
  00058	e59f020c	 ldr         r0, [pc, #0x20C]
  0005c	eb000000	 bl          NKDbgPrintfW
  00060	e3a03001	 mov         r3, #1
  00064	e58d3018	 str         r3, [sp, #0x18]
  00068	ea000001	 b           |$LN12@HalLock|
  0006c		 |$LN11@HalLock|
  0006c	e3a03000	 mov         r3, #0
  00070	e58d3018	 str         r3, [sp, #0x18]
  00074		 |$LN12@HalLock|

; 28   : 
; 29   :     if (pd->dwFlags & DDLOCK_WAITNOTBUSY)

  00074	e59d3040	 ldr         r3, [sp, #0x40]
  00078	e283301c	 add         r3, r3, #0x1C
  0007c	e5933000	 ldr         r3, [r3]
  00080	e3130008	 tst         r3, #8
  00084	0a000016	 beq         |$LN8@HalLock|
  00088		 |$LN7@HalLock|

; 30   :     {
; 31   :         while (pDDGPE->SurfaceBusyFlipping(pSurf)) Sleep(0);

  00088	e59d1008	 ldr         r1, [sp, #8]
  0008c	e59d3004	 ldr         r3, [sp, #4]
  00090	e5933000	 ldr         r3, [r3]
  00094	e2833058	 add         r3, r3, #0x58
  00098	e59d0004	 ldr         r0, [sp, #4]
  0009c	e5933000	 ldr         r3, [r3]
  000a0	e1a0e00f	 mov         lr, pc
  000a4	e12fff13	 bx          r3
  000a8	e58d001c	 str         r0, [sp, #0x1C]
  000ac	e59d301c	 ldr         r3, [sp, #0x1C]
  000b0	e3530000	 cmp         r3, #0
  000b4	0a000002	 beq         |$LN6@HalLock|
  000b8	e3a00000	 mov         r0, #0
  000bc	eb000000	 bl          Sleep
  000c0	eafffff0	 b           |$LN7@HalLock|
  000c4		 |$LN6@HalLock|

; 32   :         pDDGPE->WaitForNotBusy();

  000c4	e59d3004	 ldr         r3, [sp, #4]
  000c8	e5933000	 ldr         r3, [r3]
  000cc	e2833060	 add         r3, r3, #0x60
  000d0	e59d0004	 ldr         r0, [sp, #4]
  000d4	e5933000	 ldr         r3, [r3]
  000d8	e1a0e00f	 mov         lr, pc
  000dc	e12fff13	 bx          r3
  000e0	ea00001c	 b           |$LN5@HalLock|
  000e4		 |$LN8@HalLock|

; 33   :     } 
; 34   :     else if (pDDGPE->SurfaceBusyFlipping(pSurf) || pDDGPE->IsBusy())

  000e4	e59d1008	 ldr         r1, [sp, #8]
  000e8	e59d3004	 ldr         r3, [sp, #4]
  000ec	e5933000	 ldr         r3, [r3]
  000f0	e2833058	 add         r3, r3, #0x58
  000f4	e59d0004	 ldr         r0, [sp, #4]
  000f8	e5933000	 ldr         r3, [r3]
  000fc	e1a0e00f	 mov         lr, pc
  00100	e12fff13	 bx          r3
  00104	e58d0020	 str         r0, [sp, #0x20]
  00108	e59d3020	 ldr         r3, [sp, #0x20]
  0010c	e3530000	 cmp         r3, #0
  00110	1a00000a	 bne         |$LN3@HalLock|
  00114	e59d3004	 ldr         r3, [sp, #4]
  00118	e5933000	 ldr         r3, [r3]
  0011c	e283305c	 add         r3, r3, #0x5C
  00120	e59d0004	 ldr         r0, [sp, #4]
  00124	e5933000	 ldr         r3, [r3]
  00128	e1a0e00f	 mov         lr, pc
  0012c	e12fff13	 bx          r3
  00130	e58d0024	 str         r0, [sp, #0x24]
  00134	e59d3024	 ldr         r3, [sp, #0x24]
  00138	e3530000	 cmp         r3, #0
  0013c	0a000005	 beq         |$LN4@HalLock|
  00140		 |$LN3@HalLock|

; 35   :     {
; 36   :         pd->ddRVal = DDERR_WASSTILLDRAWING;

  00140	e59d3040	 ldr         r3, [sp, #0x40]
  00144	e2832024	 add         r2, r3, #0x24
  00148	e59f3118	 ldr         r3, [pc, #0x118]
  0014c	e5823000	 str         r3, [r2]
  00150	ea00002e	 b           |$LN2@HalLock|

; 37   :         goto cleanUp;

  00154	ea00002d	 b           |$cleanUp$40224|
  00158		 |$LN4@HalLock|
  00158		 |$LN5@HalLock|

; 38   :     }
; 39   : 
; 40   :     dwAddr = (DWORD)pSurf->Buffer();

  00158	e59d0008	 ldr         r0, [sp, #8]
  0015c	eb000000	 bl          |?Buffer@GPESurf@@QAAPAXXZ|
  00160	e58d0028	 str         r0, [sp, #0x28]
  00164	e59d3028	 ldr         r3, [sp, #0x28]
  00168	e58d3000	 str         r3, [sp]

; 41   :     if (pd->bHasRect)

  0016c	e59d3040	 ldr         r3, [sp, #0x40]
  00170	e2833008	 add         r3, r3, #8
  00174	e5933000	 ldr         r3, [r3]
  00178	e3530000	 cmp         r3, #0
  0017c	0a00001b	 beq         |$LN1@HalLock|

; 42   :     {
; 43   :         //dwAddr = (DWORD)pSurf->GetPtr(pd->rArea.left, pd->rArea.top);
; 44   :         dwAddr += pd->rArea.top * pSurf->Stride();

  00180	e59d0008	 ldr         r0, [sp, #8]
  00184	eb000000	 bl          |?Stride@GPESurf@@QAAHXZ|
  00188	e58d002c	 str         r0, [sp, #0x2C]
  0018c	e59d3040	 ldr         r3, [sp, #0x40]
  00190	e2833010	 add         r3, r3, #0x10
  00194	e5931000	 ldr         r1, [r3]
  00198	e59d302c	 ldr         r3, [sp, #0x2C]
  0019c	e0020391	 mul         r2, r1, r3
  001a0	e59d3000	 ldr         r3, [sp]
  001a4	e0833002	 add         r3, r3, r2
  001a8	e58d3000	 str         r3, [sp]

; 45   :         dwAddr += (pd->rArea.left * pSurf->Bpp()) >> 3;

  001ac	e59d3008	 ldr         r3, [sp, #8]
  001b0	e5933000	 ldr         r3, [r3]
  001b4	e283300c	 add         r3, r3, #0xC
  001b8	e59d0008	 ldr         r0, [sp, #8]
  001bc	e5933000	 ldr         r3, [r3]
  001c0	e1a0e00f	 mov         lr, pc
  001c4	e12fff13	 bx          r3
  001c8	e58d0030	 str         r0, [sp, #0x30]
  001cc	e59d3040	 ldr         r3, [sp, #0x40]
  001d0	e283300c	 add         r3, r3, #0xC
  001d4	e5932000	 ldr         r2, [r3]
  001d8	e59d3030	 ldr         r3, [sp, #0x30]
  001dc	e0030392	 mul         r3, r2, r3
  001e0	e1a021a3	 mov         r2, r3, lsr #3
  001e4	e59d3000	 ldr         r3, [sp]
  001e8	e0833002	 add         r3, r3, r2
  001ec	e58d3000	 str         r3, [sp]
  001f0		 |$LN1@HalLock|

; 46   :     }
; 47   : 
; 48   :     pd->lpSurfData = (PVOID)dwAddr;

  001f0	e59d3040	 ldr         r3, [sp, #0x40]
  001f4	e2832020	 add         r2, r3, #0x20
  001f8	e59d3000	 ldr         r3, [sp]
  001fc	e5823000	 str         r3, [r2]

; 49   :     pd->ddRVal = DD_OK;

  00200	e59d3040	 ldr         r3, [sp, #0x40]
  00204	e2832024	 add         r2, r3, #0x24
  00208	e3a03000	 mov         r3, #0
  0020c	e5823000	 str         r3, [r2]
  00210		 |$LN2@HalLock|
  00210		 |$cleanUp$40224|

; 50   : 
; 51   : cleanUp:
; 52   :     
; 53   :     DEBUGMSG(GPE_ZONE_ENTER, (L"-HAlLock: %08X\r\n", pd->ddRVal));

  00210	e59f304c	 ldr         r3, [pc, #0x4C]
  00214	e5933440	 ldr         r3, [r3, #0x440]
  00218	e3130010	 tst         r3, #0x10
  0021c	0a000007	 beq         |$LN13@HalLock|
  00220	e59d3040	 ldr         r3, [sp, #0x40]
  00224	e2833024	 add         r3, r3, #0x24
  00228	e5931000	 ldr         r1, [r3]
  0022c	e59f002c	 ldr         r0, [pc, #0x2C]
  00230	eb000000	 bl          NKDbgPrintfW
  00234	e3a03001	 mov         r3, #1
  00238	e58d3034	 str         r3, [sp, #0x34]
  0023c	ea000001	 b           |$LN14@HalLock|
  00240		 |$LN13@HalLock|
  00240	e3a03000	 mov         r3, #0
  00244	e58d3034	 str         r3, [sp, #0x34]
  00248		 |$LN14@HalLock|

; 54   :     return DDHAL_DRIVER_HANDLED;

  00248	e3a03001	 mov         r3, #1
  0024c	e58d300c	 str         r3, [sp, #0xC]

; 55   : }

  00250	e59d000c	 ldr         r0, [sp, #0xC]
  00254	e28dd038	 add         sp, sp, #0x38
  00258	e89d6000	 ldmia       sp, {sp, lr}
  0025c	e12fff1e	 bx          lr
  00260		 |$LN18@HalLock|
  00260		 |$LN19@HalLock|
  00260	00000000	 DCD         |??_C@_1CC@LNLAFPEJ@?$AA?9?$AAH?$AAA?$AAl?$AAL?$AAo?$AAc?$AAk?$AA?3?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  00264		 |$LN20@HalLock|
  00264	00000000	 DCD         |dpCurSettings|
  00268		 |$LN21@HalLock|
  00268	8876021c	 DCD         0x8876021c
  0026c		 |$LN22@HalLock|
  0026c	00000000	 DCD         |??_C@_1CC@GGLNLJPN@?$AA?$CL?$AAH?$AAA?$AAl?$AAL?$AAo?$AAc?$AAk?$AA?3?$AA?5?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  00270		 |$M40350|

			 ENDP  ; |?HalLock@@YAKPAU_DDHAL_LOCKDATA@@@Z|, HalLock

; File c:\wince600\public\common\oak\inc\gpe.h

  00000			 AREA	 |.pdata|, PDATA
|$T40363| DCD	|$LN5@Stride|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Stride@GPESurf@@QAAHXZ| PROC		; GPESurf::Stride

; 177  :     {

  00000		 |$LN5@Stride|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M40360|

; 178  :         return m_nStrideBytes;

  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833008	 add         r3, r3, #8
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]

; 179  :     }

  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M40361|

			 ENDP  ; |?Stride@GPESurf@@QAAHXZ|, GPESurf::Stride


  00000			 AREA	 |.pdata|, PDATA
|$T40371| DCD	|$LN5@Buffer|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Buffer@GPESurf@@QAAPAXXZ| PROC	; GPESurf::Buffer

; 201  :     {

  00000		 |$LN5@Buffer|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M40368|

; 202  :         return (void *)m_pVirtAddr;

  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833004	 add         r3, r3, #4
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]

; 203  :     }

  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M40369|

			 ENDP  ; |?Buffer@GPESurf@@QAAPAXXZ|, GPESurf::Buffer

	EXPORT	|??_C@_1BK@GDGIILJJ@?$AA?9?$AAH?$AAA?$AAl?$AAU?$AAn?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@FMLGFGCI@?$AA?$CL?$AAH?$AAA?$AAl?$AAU?$AAn?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?HalUnlock@@YAKPAU_DDHAL_UNLOCKDATA@@@Z| ; HalUnlock
	IMPORT	|?WriteBack@OMAP2420Surf@@QAAXXZ|	; OMAP2420Surf::WriteBack

  00008			 AREA	 |.pdata|, PDATA
|$T40383| DCD	|$LN9@HalUnlock|
	DCD	0x40003204
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\display\halsurf.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@GDGIILJJ@?$AA?9?$AAH?$AAA?$AAl?$AAU?$AAn?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "H", 0x0, "A", 0x0, "l", 0x0, "U", 0x0, "n", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "k", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@FMLGFGCI@?$AA?$CL?$AAH?$AAA?$AAl?$AAU?$AAn?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "H", 0x0, "A", 0x0, "l", 0x0, "U", 0x0, "n", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "k", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  00270			 AREA	 |.text|, CODE, ARM

  00270		 |?HalUnlock@@YAKPAU_DDHAL_UNLOCKDATA@@@Z| PROC ; HalUnlock

; 60   : {

  00270		 |$LN9@HalUnlock|
  00270	e1a0c00d	 mov         r12, sp
  00274	e92d0001	 stmdb       sp!, {r0}
  00278	e92d5000	 stmdb       sp!, {r12, lr}
  0027c	e24dd018	 sub         sp, sp, #0x18
  00280		 |$M40380|

; 61   :     DDGPESurf       *pSurf = DDGPESurf::GetDDGPESurf(pd->lpDDSurface);

  00280	e59d3020	 ldr         r3, [sp, #0x20]
  00284	e2833004	 add         r3, r3, #4
  00288	e5930000	 ldr         r0, [r3]
  0028c	eb000000	 bl          |?GetDDGPESurf@DDGPESurf@@SAPAV1@PAU_DDRAWI_DDRAWSURFACE_LCL@@@Z|
  00290	e58d000c	 str         r0, [sp, #0xC]
  00294	e59d300c	 ldr         r3, [sp, #0xC]
  00298	e58d3000	 str         r3, [sp]

; 62   :     OMAP2420Surf    *pOMAP2420Surf = static_cast<OMAP2420Surf*>(pSurf);

  0029c	e59d3000	 ldr         r3, [sp]
  002a0	e58d3004	 str         r3, [sp, #4]

; 63   : 
; 64   :     DEBUGMSG(GPE_ZONE_ENTER, (L"+HAlUnlock\r\n"));

  002a4	e59f3084	 ldr         r3, [pc, #0x84]
  002a8	e5933440	 ldr         r3, [r3, #0x440]
  002ac	e3130010	 tst         r3, #0x10
  002b0	0a000004	 beq         |$LN3@HalUnlock|
  002b4	e59f0078	 ldr         r0, [pc, #0x78]
  002b8	eb000000	 bl          NKDbgPrintfW
  002bc	e3a03001	 mov         r3, #1
  002c0	e58d3010	 str         r3, [sp, #0x10]
  002c4	ea000001	 b           |$LN4@HalUnlock|
  002c8		 |$LN3@HalUnlock|
  002c8	e3a03000	 mov         r3, #0
  002cc	e58d3010	 str         r3, [sp, #0x10]
  002d0		 |$LN4@HalUnlock|

; 65   : 
; 66   :     // flush the surface memory from cache
; 67   :     pOMAP2420Surf->WriteBack();

  002d0	e59d0004	 ldr         r0, [sp, #4]
  002d4	eb000000	 bl          |?WriteBack@OMAP2420Surf@@QAAXXZ|

; 68   :     pd->ddRVal = DD_OK;

  002d8	e59d3020	 ldr         r3, [sp, #0x20]
  002dc	e2832008	 add         r2, r3, #8
  002e0	e3a03000	 mov         r3, #0
  002e4	e5823000	 str         r3, [r2]

; 69   : 
; 70   :     DEBUGMSG(GPE_ZONE_ENTER, (L"-HAlUnlock\r\n"));

  002e8	e59f3040	 ldr         r3, [pc, #0x40]
  002ec	e5933440	 ldr         r3, [r3, #0x440]
  002f0	e3130010	 tst         r3, #0x10
  002f4	0a000004	 beq         |$LN5@HalUnlock|
  002f8	e59f002c	 ldr         r0, [pc, #0x2C]
  002fc	eb000000	 bl          NKDbgPrintfW
  00300	e3a03001	 mov         r3, #1
  00304	e58d3014	 str         r3, [sp, #0x14]
  00308	ea000001	 b           |$LN6@HalUnlock|
  0030c		 |$LN5@HalUnlock|
  0030c	e3a03000	 mov         r3, #0
  00310	e58d3014	 str         r3, [sp, #0x14]
  00314		 |$LN6@HalUnlock|

; 71   :     return DDHAL_DRIVER_HANDLED;

  00314	e3a03001	 mov         r3, #1
  00318	e58d3008	 str         r3, [sp, #8]

; 72   : }

  0031c	e59d0008	 ldr         r0, [sp, #8]
  00320	e28dd018	 add         sp, sp, #0x18
  00324	e89d6000	 ldmia       sp, {sp, lr}
  00328	e12fff1e	 bx          lr
  0032c		 |$LN10@HalUnlock|
  0032c		 |$LN11@HalUnlock|
  0032c	00000000	 DCD         |??_C@_1BK@GDGIILJJ@?$AA?9?$AAH?$AAA?$AAl?$AAU?$AAn?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@|
  00330		 |$LN12@HalUnlock|
  00330	00000000	 DCD         |dpCurSettings|
  00334		 |$LN13@HalUnlock|
  00334	00000000	 DCD         |??_C@_1BK@FMLGFGCI@?$AA?$CL?$AAH?$AAA?$AAl?$AAU?$AAn?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@|
  00338		 |$M40381|

			 ENDP  ; |?HalUnlock@@YAKPAU_DDHAL_UNLOCKDATA@@@Z|, HalUnlock

	EXPORT	|??_C@_1CM@JGLFDINH@?$AAL?$AAe?$AAa?$AAv?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@ENKLBDPK@?$AAE?$AAn?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@CCIHKONE@?$AAH?$AAa?$AAl?$AAF?$AAl?$AAi?$AAp?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?HalFlip@@YAKPAU_DDHAL_FLIPDATA@@@Z|	; HalFlip
	IMPORT	|DDGPEFlip|

  00010			 AREA	 |.pdata|, PDATA
|$T40397| DCD	|$LN16@HalFlip|
	DCD	0x40006d04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@JGLFDINH@?$AAL?$AAe?$AAa?$AAv?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "L"
	DCB	0x0, "e", 0x0, "a", 0x0, "v", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "f", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "%", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@ENKLBDPK@?$AAE?$AAn?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "f", 0x0, "u", 0x0, "n", 0x0, "c"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "%"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@CCIHKONE@?$AAH?$AAa?$AAl?$AAF?$AAl?$AAi?$AAp?$AA?$AA@| DCB "H", 0x0
	DCB	"a", 0x0, "l", 0x0, "F", 0x0, "l", 0x0, "i", 0x0, "p", 0x0
	DCB	0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00338			 AREA	 |.text|, CODE, ARM

  00338		 |?HalFlip@@YAKPAU_DDHAL_FLIPDATA@@@Z| PROC ; HalFlip

; 77   : {

  00338		 |$LN16@HalFlip|
  00338	e1a0c00d	 mov         r12, sp
  0033c	e92d0001	 stmdb       sp!, {r0}
  00340	e92d5000	 stmdb       sp!, {r12, lr}
  00344	e24dd028	 sub         sp, sp, #0x28
  00348		 |$M40394|

; 78   :     DEBUGENTER(HalFlip);

  00348	e59f3190	 ldr         r3, [pc, #0x190]
  0034c	e5933440	 ldr         r3, [r3, #0x440]
  00350	e3130010	 tst         r3, #0x10
  00354	0a000005	 beq         |$LN10@HalFlip|
  00358	e59f117c	 ldr         r1, [pc, #0x17C]
  0035c	e59f0184	 ldr         r0, [pc, #0x184]
  00360	eb000000	 bl          NKDbgPrintfW
  00364	e3a03001	 mov         r3, #1
  00368	e58d300c	 str         r3, [sp, #0xC]
  0036c	ea000001	 b           |$LN11@HalFlip|
  00370		 |$LN10@HalFlip|
  00370	e3a03000	 mov         r3, #0
  00374	e58d300c	 str         r3, [sp, #0xC]
  00378		 |$LN11@HalFlip|

; 79   :     DDGPE* pDDGPE = GetDDGPE();

  00378	eb000000	 bl          |?GetDDGPE@@YAPAVDDGPE@@XZ|
  0037c	e58d0010	 str         r0, [sp, #0x10]
  00380	e59d3010	 ldr         r3, [sp, #0x10]
  00384	e58d3000	 str         r3, [sp]

; 80   :     DDGPESurf* pSurf = DDGPESurf::GetDDGPESurf(pd->lpSurfTarg);

  00388	e59d3030	 ldr         r3, [sp, #0x30]
  0038c	e2833008	 add         r3, r3, #8
  00390	e5930000	 ldr         r0, [r3]
  00394	eb000000	 bl          |?GetDDGPESurf@DDGPESurf@@SAPAV1@PAU_DDRAWI_DDRAWSURFACE_LCL@@@Z|
  00398	e58d0014	 str         r0, [sp, #0x14]
  0039c	e59d3014	 ldr         r3, [sp, #0x14]
  003a0	e58d3004	 str         r3, [sp, #4]

; 81   : 
; 82   :     // Wait for engine...
; 83   :     if ((pd->dwFlags & DDFLIP_WAITNOTBUSY) != 0) {

  003a4	e59d3030	 ldr         r3, [sp, #0x30]
  003a8	e283300c	 add         r3, r3, #0xC
  003ac	e5933000	 ldr         r3, [r3]
  003b0	e3130008	 tst         r3, #8
  003b4	0a000016	 beq         |$LN7@HalFlip|
  003b8		 |$LN6@HalFlip|

; 84   :         while (pDDGPE->SurfaceBusyFlipping(pSurf)) Sleep(0);

  003b8	e59d1004	 ldr         r1, [sp, #4]
  003bc	e59d3000	 ldr         r3, [sp]
  003c0	e5933000	 ldr         r3, [r3]
  003c4	e2833058	 add         r3, r3, #0x58
  003c8	e59d0000	 ldr         r0, [sp]
  003cc	e5933000	 ldr         r3, [r3]
  003d0	e1a0e00f	 mov         lr, pc
  003d4	e12fff13	 bx          r3
  003d8	e58d0018	 str         r0, [sp, #0x18]
  003dc	e59d3018	 ldr         r3, [sp, #0x18]
  003e0	e3530000	 cmp         r3, #0
  003e4	0a000002	 beq         |$LN5@HalFlip|
  003e8	e3a00000	 mov         r0, #0
  003ec	eb000000	 bl          Sleep
  003f0	eafffff0	 b           |$LN6@HalFlip|
  003f4		 |$LN5@HalFlip|

; 85   :         pDDGPE->WaitForNotBusy();

  003f4	e59d3000	 ldr         r3, [sp]
  003f8	e5933000	 ldr         r3, [r3]
  003fc	e2833060	 add         r3, r3, #0x60
  00400	e59d0000	 ldr         r0, [sp]
  00404	e5933000	 ldr         r3, [r3]
  00408	e1a0e00f	 mov         lr, pc
  0040c	e12fff13	 bx          r3
  00410	ea00001c	 b           |$LN4@HalFlip|
  00414		 |$LN7@HalFlip|

; 86   :     }
; 87   :     else if (pDDGPE->SurfaceBusyFlipping(pSurf) || pDDGPE->IsBusy()) {

  00414	e59d1004	 ldr         r1, [sp, #4]
  00418	e59d3000	 ldr         r3, [sp]
  0041c	e5933000	 ldr         r3, [r3]
  00420	e2833058	 add         r3, r3, #0x58
  00424	e59d0000	 ldr         r0, [sp]
  00428	e5933000	 ldr         r3, [r3]
  0042c	e1a0e00f	 mov         lr, pc
  00430	e12fff13	 bx          r3
  00434	e58d001c	 str         r0, [sp, #0x1C]
  00438	e59d301c	 ldr         r3, [sp, #0x1C]
  0043c	e3530000	 cmp         r3, #0
  00440	1a00000a	 bne         |$LN2@HalFlip|
  00444	e59d3000	 ldr         r3, [sp]
  00448	e5933000	 ldr         r3, [r3]
  0044c	e283305c	 add         r3, r3, #0x5C
  00450	e59d0000	 ldr         r0, [sp]
  00454	e5933000	 ldr         r3, [r3]
  00458	e1a0e00f	 mov         lr, pc
  0045c	e12fff13	 bx          r3
  00460	e58d0020	 str         r0, [sp, #0x20]
  00464	e59d3020	 ldr         r3, [sp, #0x20]
  00468	e3530000	 cmp         r3, #0
  0046c	0a000005	 beq         |$LN3@HalFlip|
  00470		 |$LN2@HalFlip|

; 88   :         pd->ddRVal = DDERR_WASSTILLDRAWING;

  00470	e59d3030	 ldr         r3, [sp, #0x30]
  00474	e2832010	 add         r2, r3, #0x10
  00478	e59f3064	 ldr         r3, [pc, #0x64]
  0047c	e5823000	 str         r3, [r2]
  00480	ea000002	 b           |$LN1@HalFlip|

; 89   :         goto cleanUp;

  00484	ea000001	 b           |$cleanUp$40260|
  00488		 |$LN3@HalFlip|
  00488		 |$LN4@HalFlip|

; 90   :     }
; 91   : 
; 92   :     // Flip
; 93   :     DDGPEFlip(pd);

  00488	e59d0030	 ldr         r0, [sp, #0x30]
  0048c	eb000000	 bl          DDGPEFlip
  00490		 |$LN1@HalFlip|
  00490		 |$cleanUp$40260|

; 94   : 
; 95   : cleanUp:
; 96   :     DEBUGLEAVE(HalFlip);

  00490	e59f3048	 ldr         r3, [pc, #0x48]
  00494	e5933440	 ldr         r3, [r3, #0x440]
  00498	e3130010	 tst         r3, #0x10
  0049c	0a000005	 beq         |$LN12@HalFlip|
  004a0	e59f1034	 ldr         r1, [pc, #0x34]
  004a4	e59f002c	 ldr         r0, [pc, #0x2C]
  004a8	eb000000	 bl          NKDbgPrintfW
  004ac	e3a03001	 mov         r3, #1
  004b0	e58d3024	 str         r3, [sp, #0x24]
  004b4	ea000001	 b           |$LN13@HalFlip|
  004b8		 |$LN12@HalFlip|
  004b8	e3a03000	 mov         r3, #0
  004bc	e58d3024	 str         r3, [sp, #0x24]
  004c0		 |$LN13@HalFlip|

; 97   :     return DDHAL_DRIVER_HANDLED;

  004c0	e3a03001	 mov         r3, #1
  004c4	e58d3008	 str         r3, [sp, #8]

; 98   : }

  004c8	e59d0008	 ldr         r0, [sp, #8]
  004cc	e28dd028	 add         sp, sp, #0x28
  004d0	e89d6000	 ldmia       sp, {sp, lr}
  004d4	e12fff1e	 bx          lr
  004d8		 |$LN17@HalFlip|
  004d8		 |$LN18@HalFlip|
  004d8	00000000	 DCD         |??_C@_1CM@JGLFDINH@?$AAL?$AAe?$AAa?$AAv?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  004dc		 |$LN19@HalFlip|
  004dc	00000000	 DCD         |??_C@_1BA@CCIHKONE@?$AAH?$AAa?$AAl?$AAF?$AAl?$AAi?$AAp?$AA?$AA@|
  004e0		 |$LN20@HalFlip|
  004e0	00000000	 DCD         |dpCurSettings|
  004e4		 |$LN21@HalFlip|
  004e4	8876021c	 DCD         0x8876021c
  004e8		 |$LN22@HalFlip|
  004e8	00000000	 DCD         |??_C@_1CO@ENKLBDPK@?$AAE?$AAn?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  004ec		 |$M40395|

			 ENDP  ; |?HalFlip@@YAKPAU_DDHAL_FLIPDATA@@@Z|, HalFlip

	EXPORT	|??_C@_1CG@JAPNNNJG@?$AA?9?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAB?$AAl?$AAt?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@LCNNNFI@?$AA?$CL?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAB?$AAl?$AAt?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?HalGetBltStatus@@YAKPAU_DDHAL_GETBLTSTATUSDATA@@@Z| ; HalGetBltStatus

  00018			 AREA	 |.pdata|, PDATA
|$T40413| DCD	|$LN15@HalGetBltS|
	DCD	0x40006804

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@JAPNNNJG@?$AA?9?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAB?$AAl?$AAt?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G", 0x0, "e", 0x0, "t"
	DCB	0x0, "B", 0x0, "l", 0x0, "t", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "u", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@LCNNNFI@?$AA?$CL?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAB?$AAl?$AAt?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G", 0x0, "e", 0x0, "t"
	DCB	0x0, "B", 0x0, "l", 0x0, "t", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "u", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  004ec			 AREA	 |.text|, CODE, ARM

  004ec		 |?HalGetBltStatus@@YAKPAU_DDHAL_GETBLTSTATUSDATA@@@Z| PROC ; HalGetBltStatus

; 103  : {

  004ec		 |$LN15@HalGetBltS|
  004ec	e1a0c00d	 mov         r12, sp
  004f0	e92d0001	 stmdb       sp!, {r0}
  004f4	e92d5000	 stmdb       sp!, {r12, lr}
  004f8	e24dd028	 sub         sp, sp, #0x28
  004fc		 |$M40410|

; 104  :     DDGPE       *pDDGPE = GetDDGPE();

  004fc	eb000000	 bl          |?GetDDGPE@@YAPAVDDGPE@@XZ|
  00500	e58d000c	 str         r0, [sp, #0xC]
  00504	e59d300c	 ldr         r3, [sp, #0xC]
  00508	e58d3000	 str         r3, [sp]

; 105  :     DDGPESurf   *pSurf = DDGPESurf::GetDDGPESurf(pd->lpDDSurface);

  0050c	e59d3030	 ldr         r3, [sp, #0x30]
  00510	e2833004	 add         r3, r3, #4
  00514	e5930000	 ldr         r0, [r3]
  00518	eb000000	 bl          |?GetDDGPESurf@DDGPESurf@@SAPAV1@PAU_DDRAWI_DDRAWSURFACE_LCL@@@Z|
  0051c	e58d0010	 str         r0, [sp, #0x10]
  00520	e59d3010	 ldr         r3, [sp, #0x10]
  00524	e58d3004	 str         r3, [sp, #4]

; 106  : 
; 107  :     DEBUGMSG(GPE_ZONE_ENTER, (L"+HalGetBltStatus\r\n"));

  00528	e59f3150	 ldr         r3, [pc, #0x150]
  0052c	e5933440	 ldr         r3, [r3, #0x440]
  00530	e3130010	 tst         r3, #0x10
  00534	0a000004	 beq         |$LN9@HalGetBltS|
  00538	e59f0148	 ldr         r0, [pc, #0x148]
  0053c	eb000000	 bl          NKDbgPrintfW
  00540	e3a03001	 mov         r3, #1
  00544	e58d3014	 str         r3, [sp, #0x14]
  00548	ea000001	 b           |$LN10@HalGetBltS|
  0054c		 |$LN9@HalGetBltS|
  0054c	e3a03000	 mov         r3, #0
  00550	e58d3014	 str         r3, [sp, #0x14]
  00554		 |$LN10@HalGetBltS|

; 108  : 
; 109  :     pd->ddRVal = DD_OK;

  00554	e59d3030	 ldr         r3, [sp, #0x30]
  00558	e283200c	 add         r2, r3, #0xC
  0055c	e3a03000	 mov         r3, #0
  00560	e5823000	 str         r3, [r2]

; 110  :     if (pd->dwFlags & DDGBS_CANBLT)

  00564	e59d3030	 ldr         r3, [sp, #0x30]
  00568	e2833008	 add         r3, r3, #8
  0056c	e5933000	 ldr         r3, [r3]
  00570	e3130001	 tst         r3, #1
  00574	0a00001b	 beq         |$LN6@HalGetBltS|

; 111  :     {
; 112  :         if (pDDGPE->SurfaceBusyFlipping(pSurf) || pDDGPE->IsBusy())

  00578	e59d1004	 ldr         r1, [sp, #4]
  0057c	e59d3000	 ldr         r3, [sp]
  00580	e5933000	 ldr         r3, [r3]
  00584	e2833058	 add         r3, r3, #0x58
  00588	e59d0000	 ldr         r0, [sp]
  0058c	e5933000	 ldr         r3, [r3]
  00590	e1a0e00f	 mov         lr, pc
  00594	e12fff13	 bx          r3
  00598	e58d0018	 str         r0, [sp, #0x18]
  0059c	e59d3018	 ldr         r3, [sp, #0x18]
  005a0	e3530000	 cmp         r3, #0
  005a4	1a00000a	 bne         |$LN4@HalGetBltS|
  005a8	e59d3000	 ldr         r3, [sp]
  005ac	e5933000	 ldr         r3, [r3]
  005b0	e283305c	 add         r3, r3, #0x5C
  005b4	e59d0000	 ldr         r0, [sp]
  005b8	e5933000	 ldr         r3, [r3]
  005bc	e1a0e00f	 mov         lr, pc
  005c0	e12fff13	 bx          r3
  005c4	e58d001c	 str         r0, [sp, #0x1C]
  005c8	e59d301c	 ldr         r3, [sp, #0x1C]
  005cc	e3530000	 cmp         r3, #0
  005d0	0a000003	 beq         |$LN5@HalGetBltS|
  005d4		 |$LN4@HalGetBltS|

; 113  :         {
; 114  :             pd->ddRVal = DDERR_WASSTILLDRAWING;

  005d4	e59d3030	 ldr         r3, [sp, #0x30]
  005d8	e283200c	 add         r2, r3, #0xC
  005dc	e59f30a0	 ldr         r3, [pc, #0xA0]
  005e0	e5823000	 str         r3, [r2]
  005e4		 |$LN5@HalGetBltS|

; 115  :         }            
; 116  :     }

  005e4	ea000013	 b           |$LN3@HalGetBltS|
  005e8		 |$LN6@HalGetBltS|

; 117  :     else if (pd->dwFlags & DDGBS_ISBLTDONE)

  005e8	e59d3030	 ldr         r3, [sp, #0x30]
  005ec	e2833008	 add         r3, r3, #8
  005f0	e5933000	 ldr         r3, [r3]
  005f4	e3130002	 tst         r3, #2
  005f8	0a00000e	 beq         |$LN2@HalGetBltS|

; 118  :     {
; 119  :         if (pDDGPE->IsBusy())

  005fc	e59d3000	 ldr         r3, [sp]
  00600	e5933000	 ldr         r3, [r3]
  00604	e283305c	 add         r3, r3, #0x5C
  00608	e59d0000	 ldr         r0, [sp]
  0060c	e5933000	 ldr         r3, [r3]
  00610	e1a0e00f	 mov         lr, pc
  00614	e12fff13	 bx          r3
  00618	e58d0020	 str         r0, [sp, #0x20]
  0061c	e59d3020	 ldr         r3, [sp, #0x20]
  00620	e3530000	 cmp         r3, #0
  00624	0a000003	 beq         |$LN1@HalGetBltS|

; 120  :         {
; 121  :             pd->ddRVal = DDERR_WASSTILLDRAWING;

  00628	e59d3030	 ldr         r3, [sp, #0x30]
  0062c	e283200c	 add         r2, r3, #0xC
  00630	e59f304c	 ldr         r3, [pc, #0x4C]
  00634	e5823000	 str         r3, [r2]
  00638		 |$LN1@HalGetBltS|
  00638		 |$LN2@HalGetBltS|
  00638		 |$LN3@HalGetBltS|

; 122  :         }            
; 123  :     }
; 124  : 
; 125  :     DEBUGMSG(GPE_ZONE_ENTER, (L"-HalGetBltStatus\r\n"));

  00638	e59f3040	 ldr         r3, [pc, #0x40]
  0063c	e5933440	 ldr         r3, [r3, #0x440]
  00640	e3130010	 tst         r3, #0x10
  00644	0a000004	 beq         |$LN11@HalGetBltS|
  00648	e59f002c	 ldr         r0, [pc, #0x2C]
  0064c	eb000000	 bl          NKDbgPrintfW
  00650	e3a03001	 mov         r3, #1
  00654	e58d3024	 str         r3, [sp, #0x24]
  00658	ea000001	 b           |$LN12@HalGetBltS|
  0065c		 |$LN11@HalGetBltS|
  0065c	e3a03000	 mov         r3, #0
  00660	e58d3024	 str         r3, [sp, #0x24]
  00664		 |$LN12@HalGetBltS|

; 126  :     return DDHAL_DRIVER_HANDLED;

  00664	e3a03001	 mov         r3, #1
  00668	e58d3008	 str         r3, [sp, #8]

; 127  : }

  0066c	e59d0008	 ldr         r0, [sp, #8]
  00670	e28dd028	 add         sp, sp, #0x28
  00674	e89d6000	 ldmia       sp, {sp, lr}
  00678	e12fff1e	 bx          lr
  0067c		 |$LN16@HalGetBltS|
  0067c		 |$LN17@HalGetBltS|
  0067c	00000000	 DCD         |??_C@_1CG@JAPNNNJG@?$AA?9?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAB?$AAl?$AAt?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00680		 |$LN18@HalGetBltS|
  00680	00000000	 DCD         |dpCurSettings|
  00684		 |$LN19@HalGetBltS|
  00684	8876021c	 DCD         0x8876021c
  00688		 |$LN20@HalGetBltS|
  00688	00000000	 DCD         |??_C@_1CG@LCNNNFI@?$AA?$CL?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAB?$AAl?$AAt?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  0068c		 |$M40411|

			 ENDP  ; |?HalGetBltStatus@@YAKPAU_DDHAL_GETBLTSTATUSDATA@@@Z|, HalGetBltStatus

	EXPORT	|??_C@_1CC@LEBMFDIB@?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAF?$AAl?$AAi?$AAp?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?HalGetFlipStatus@@YAKPAU_DDHAL_GETFLIPSTATUSDATA@@@Z| ; HalGetFlipStatus

  00020			 AREA	 |.pdata|, PDATA
|$T40428| DCD	|$LN11@HalGetFlip|
	DCD	0x40004704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@LEBMFDIB@?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAF?$AAl?$AAi?$AAp?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$AA@| DCB "H"
	DCB	0x0, "a", 0x0, "l", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "F"
	DCB	0x0, "l", 0x0, "i", 0x0, "p", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "u", 0x0, "s", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  0068c			 AREA	 |.text|, CODE, ARM

  0068c		 |?HalGetFlipStatus@@YAKPAU_DDHAL_GETFLIPSTATUSDATA@@@Z| PROC ; HalGetFlipStatus

; 132  : {

  0068c		 |$LN11@HalGetFlip|
  0068c	e1a0c00d	 mov         r12, sp
  00690	e92d0001	 stmdb       sp!, {r0}
  00694	e92d5000	 stmdb       sp!, {r12, lr}
  00698	e24dd020	 sub         sp, sp, #0x20
  0069c		 |$M40425|

; 133  :     DEBUGENTER(HalGetFlipStatus);

  0069c	e59f30f8	 ldr         r3, [pc, #0xF8]
  006a0	e5933440	 ldr         r3, [r3, #0x440]
  006a4	e3130010	 tst         r3, #0x10
  006a8	0a000005	 beq         |$LN5@HalGetFlip|
  006ac	e59f10e4	 ldr         r1, [pc, #0xE4]
  006b0	e59f00ec	 ldr         r0, [pc, #0xEC]
  006b4	eb000000	 bl          NKDbgPrintfW
  006b8	e3a03001	 mov         r3, #1
  006bc	e58d300c	 str         r3, [sp, #0xC]
  006c0	ea000001	 b           |$LN6@HalGetFlip|
  006c4		 |$LN5@HalGetFlip|
  006c4	e3a03000	 mov         r3, #0
  006c8	e58d300c	 str         r3, [sp, #0xC]
  006cc		 |$LN6@HalGetFlip|

; 134  :     DDGPE* pDDGPE = GetDDGPE();

  006cc	eb000000	 bl          |?GetDDGPE@@YAPAVDDGPE@@XZ|
  006d0	e58d0010	 str         r0, [sp, #0x10]
  006d4	e59d3010	 ldr         r3, [sp, #0x10]
  006d8	e58d3000	 str         r3, [sp]

; 135  :     DDGPESurf* pSurf = DDGPESurf::GetDDGPESurf(pd->lpDDSurface);

  006dc	e59d3028	 ldr         r3, [sp, #0x28]
  006e0	e2833004	 add         r3, r3, #4
  006e4	e5930000	 ldr         r0, [r3]
  006e8	eb000000	 bl          |?GetDDGPESurf@DDGPESurf@@SAPAV1@PAU_DDRAWI_DDRAWSURFACE_LCL@@@Z|
  006ec	e58d0014	 str         r0, [sp, #0x14]
  006f0	e59d3014	 ldr         r3, [sp, #0x14]
  006f4	e58d3004	 str         r3, [sp, #4]

; 136  : 
; 137  :     if (pDDGPE->SurfaceBusyFlipping(pSurf))

  006f8	e59d1004	 ldr         r1, [sp, #4]
  006fc	e59d3000	 ldr         r3, [sp]
  00700	e5933000	 ldr         r3, [r3]
  00704	e2833058	 add         r3, r3, #0x58
  00708	e59d0000	 ldr         r0, [sp]
  0070c	e5933000	 ldr         r3, [r3]
  00710	e1a0e00f	 mov         lr, pc
  00714	e12fff13	 bx          r3
  00718	e58d0018	 str         r0, [sp, #0x18]
  0071c	e59d3018	 ldr         r3, [sp, #0x18]
  00720	e3530000	 cmp         r3, #0
  00724	0a000004	 beq         |$LN2@HalGetFlip|

; 138  :         {
; 139  :         pd->ddRVal = DDERR_WASSTILLDRAWING;

  00728	e59d3028	 ldr         r3, [sp, #0x28]
  0072c	e283200c	 add         r2, r3, #0xC
  00730	e59f3068	 ldr         r3, [pc, #0x68]
  00734	e5823000	 str         r3, [r2]

; 140  :         }
; 141  :     else 

  00738	ea000003	 b           |$LN1@HalGetFlip|
  0073c		 |$LN2@HalGetFlip|

; 142  :         {
; 143  :         pd->ddRVal = DD_OK;

  0073c	e59d3028	 ldr         r3, [sp, #0x28]
  00740	e283200c	 add         r2, r3, #0xC
  00744	e3a03000	 mov         r3, #0
  00748	e5823000	 str         r3, [r2]
  0074c		 |$LN1@HalGetFlip|

; 144  :         }
; 145  : 
; 146  :     DEBUGLEAVE(HalGetFlipStatus);

  0074c	e59f3048	 ldr         r3, [pc, #0x48]
  00750	e5933440	 ldr         r3, [r3, #0x440]
  00754	e3130010	 tst         r3, #0x10
  00758	0a000005	 beq         |$LN7@HalGetFlip|
  0075c	e59f1034	 ldr         r1, [pc, #0x34]
  00760	e59f002c	 ldr         r0, [pc, #0x2C]
  00764	eb000000	 bl          NKDbgPrintfW
  00768	e3a03001	 mov         r3, #1
  0076c	e58d301c	 str         r3, [sp, #0x1C]
  00770	ea000001	 b           |$LN8@HalGetFlip|
  00774		 |$LN7@HalGetFlip|
  00774	e3a03000	 mov         r3, #0
  00778	e58d301c	 str         r3, [sp, #0x1C]
  0077c		 |$LN8@HalGetFlip|

; 147  :     return DDHAL_DRIVER_HANDLED;

  0077c	e3a03001	 mov         r3, #1
  00780	e58d3008	 str         r3, [sp, #8]

; 148  : }

  00784	e59d0008	 ldr         r0, [sp, #8]
  00788	e28dd020	 add         sp, sp, #0x20
  0078c	e89d6000	 ldmia       sp, {sp, lr}
  00790	e12fff1e	 bx          lr
  00794		 |$LN12@HalGetFlip|
  00794		 |$LN13@HalGetFlip|
  00794	00000000	 DCD         |??_C@_1CM@JGLFDINH@?$AAL?$AAe?$AAa?$AAv?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00798		 |$LN14@HalGetFlip|
  00798	00000000	 DCD         |??_C@_1CC@LEBMFDIB@?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAF?$AAl?$AAi?$AAp?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$AA@|
  0079c		 |$LN15@HalGetFlip|
  0079c	00000000	 DCD         |dpCurSettings|
  007a0		 |$LN16@HalGetFlip|
  007a0	8876021c	 DCD         0x8876021c
  007a4		 |$LN17@HalGetFlip|
  007a4	00000000	 DCD         |??_C@_1CO@ENKLBDPK@?$AAE?$AAn?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  007a8		 |$M40426|

			 ENDP  ; |?HalGetFlipStatus@@YAKPAU_DDHAL_GETFLIPSTATUSDATA@@@Z|, HalGetFlipStatus

	EXPORT	|?HalUpdateOverlay@@YAKPAU_DDHAL_UPDATEOVERLAYDATA@@@Z| ; HalUpdateOverlay
	IMPORT	|?UpdateOverlay@OMAP2420GPE@@QAAKPAU_DDHAL_UPDATEOVERLAYDATA@@@Z| ; OMAP2420GPE::UpdateOverlay

  00028			 AREA	 |.pdata|, PDATA
|$T40440| DCD	|$LN5@HalUpdateO|
	DCD	0x40001004
; Function compile flags: /Odtp

  007a8			 AREA	 |.text|, CODE, ARM

  007a8		 |?HalUpdateOverlay@@YAKPAU_DDHAL_UPDATEOVERLAYDATA@@@Z| PROC ; HalUpdateOverlay

; 153  : {

  007a8		 |$LN5@HalUpdateO|
  007a8	e1a0c00d	 mov         r12, sp
  007ac	e92d0001	 stmdb       sp!, {r0}
  007b0	e92d5000	 stmdb       sp!, {r12, lr}
  007b4	e24dd00c	 sub         sp, sp, #0xC
  007b8		 |$M40437|

; 154  :     return ((OMAP2420GPE *)GetDDGPE())->UpdateOverlay(pUpdateOverlay);

  007b8	eb000000	 bl          |?GetDDGPE@@YAPAVDDGPE@@XZ|
  007bc	e58d0004	 str         r0, [sp, #4]
  007c0	e59d1014	 ldr         r1, [sp, #0x14]
  007c4	e59d0004	 ldr         r0, [sp, #4]
  007c8	eb000000	 bl          |?UpdateOverlay@OMAP2420GPE@@QAAKPAU_DDHAL_UPDATEOVERLAYDATA@@@Z|
  007cc	e58d0008	 str         r0, [sp, #8]
  007d0	e59d3008	 ldr         r3, [sp, #8]
  007d4	e58d3000	 str         r3, [sp]

; 155  : }

  007d8	e59d0000	 ldr         r0, [sp]
  007dc	e28dd00c	 add         sp, sp, #0xC
  007e0	e89d6000	 ldmia       sp, {sp, lr}
  007e4	e12fff1e	 bx          lr
  007e8		 |$M40438|

			 ENDP  ; |?HalUpdateOverlay@@YAKPAU_DDHAL_UPDATEOVERLAYDATA@@@Z|, HalUpdateOverlay

	EXPORT	|?HalSetOverlayPosition@@YAKPAU_DDHAL_SETOVERLAYPOSITIONDATA@@@Z| ; HalSetOverlayPosition
	IMPORT	|?SetOverlayPosition@OMAP2420GPE@@QAAKPAU_DDHAL_SETOVERLAYPOSITIONDATA@@@Z| ; OMAP2420GPE::SetOverlayPosition

  00030			 AREA	 |.pdata|, PDATA
|$T40446| DCD	|$LN5@HalSetOver|
	DCD	0x40001004
; Function compile flags: /Odtp

  007e8			 AREA	 |.text|, CODE, ARM

  007e8		 |?HalSetOverlayPosition@@YAKPAU_DDHAL_SETOVERLAYPOSITIONDATA@@@Z| PROC ; HalSetOverlayPosition

; 160  : {

  007e8		 |$LN5@HalSetOver|
  007e8	e1a0c00d	 mov         r12, sp
  007ec	e92d0001	 stmdb       sp!, {r0}
  007f0	e92d5000	 stmdb       sp!, {r12, lr}
  007f4	e24dd00c	 sub         sp, sp, #0xC
  007f8		 |$M40443|

; 161  :     return ((OMAP2420GPE *)GetDDGPE())->SetOverlayPosition(pSetPos);

  007f8	eb000000	 bl          |?GetDDGPE@@YAPAVDDGPE@@XZ|
  007fc	e58d0004	 str         r0, [sp, #4]
  00800	e59d1014	 ldr         r1, [sp, #0x14]
  00804	e59d0004	 ldr         r0, [sp, #4]
  00808	eb000000	 bl          |?SetOverlayPosition@OMAP2420GPE@@QAAKPAU_DDHAL_SETOVERLAYPOSITIONDATA@@@Z|
  0080c	e58d0008	 str         r0, [sp, #8]
  00810	e59d3008	 ldr         r3, [sp, #8]
  00814	e58d3000	 str         r3, [sp]

; 162  : }

  00818	e59d0000	 ldr         r0, [sp]
  0081c	e28dd00c	 add         sp, sp, #0xC
  00820	e89d6000	 ldmia       sp, {sp, lr}
  00824	e12fff1e	 bx          lr
  00828		 |$M40444|

			 ENDP  ; |?HalSetOverlayPosition@@YAKPAU_DDHAL_SETOVERLAYPOSITIONDATA@@@Z|, HalSetOverlayPosition

	END
