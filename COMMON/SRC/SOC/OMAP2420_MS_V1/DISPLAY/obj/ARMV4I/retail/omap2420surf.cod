; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\OMAP2420_MS_V1\DISPLAY\omap2420surf.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|FourCCDescriptionTable| DCD 0x32595559
	DCD	0x10
	DCD	0xff00ff
	DCD	0xff00
	DCD	0xff000000
	DCD	0x56595559
	DCD	0x10
	DCD	0xff00ff
	DCD	0xff00
	DCD	0xff000000
	DCD	0x55595659
	DCD	0x10
	DCD	0xff00ff00
	DCD	0xff
	DCD	0xff0000
	DCD	0x59565955
	DCD	0x10
	DCD	0xff00ff00
	DCD	0xff
	DCD	0xff0000
	DCD	0x36315659
	DCD	0x10
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0x32315659
	DCD	0xc
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0x3231564e
	DCD	0xc
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0x30323449
	DCD	0xc
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0x56555949
	DCD	0xc
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0xffffffff
	EXPORT	|??0OMAP2420Surf@@QAA@HHKPAXHW4EGPEFormat@@@Z| ; OMAP2420Surf::OMAP2420Surf
	EXPORT	|??_7OMAP2420Surf@@6B@| [ DATA ]	; OMAP2420Surf::`vftable'
	EXPORT	|?GetDriverData@DDGPESurf@@UAAPAUDDGPEDriverData@@XZ| ; DDGPESurf::GetDriverData
	EXPORT	|?SetDriverData@DDGPESurf@@UAAXPAUDDGPEDriverData@@@Z| ; DDGPESurf::SetDriverData
	EXPORT	|?SurfaceSize@DDGPESurf@@UAAHXZ|	; DDGPESurf::SurfaceSize
	IMPORT	|UnmapViewOfFile|
	IMPORT	|VirtualCopy|
	IMPORT	|MapViewOfFile|
	IMPORT	|CreateFileMappingW|
	IMPORT	|??0DDGPESurf@@QAA@HHPAXHW4EGPEFormat@@@Z| ; DDGPESurf::DDGPESurf
	IMPORT	|??_EOMAP2420Surf@@UAAPAXI@Z|, WEAK |??_GOMAP2420Surf@@UAAPAXI@Z| ; OMAP2420Surf::`vector deleting destructor', OMAP2420Surf::`scalar deleting destructor'
	IMPORT	|?Init@DDGPESurf@@UAAXHHPAXHW4EGPEFormat@@W4EDDGPEPixelFormat@@@Z| ; DDGPESurf::Init
	IMPORT	|?SetDDGPESurf@DDGPESurf@@UAAXPAU_DDRAWI_DDRAWSURFACE_LCL@@@Z| ; DDGPESurf::SetDDGPESurf
	IMPORT	|?Bpp@DDGPESurf@@UAAKXZ|		; DDGPESurf::Bpp
	IMPORT	|?AlignedWidth@DDGPESurf@@UAAKXZ|	; DDGPESurf::AlignedWidth
	IMPORT	|?SetColorKey@DDGPESurf@@UAAXK@Z|	; DDGPESurf::SetColorKey
	IMPORT	|?ColorKey@DDGPESurf@@UAAKXZ|		; DDGPESurf::ColorKey
	IMPORT	|?SetColorKeyMask@DDGPESurf@@UAAXK@Z|	; DDGPESurf::SetColorKeyMask
	IMPORT	|?ColorKeyMask@DDGPESurf@@UAAKXZ|	; DDGPESurf::ColorKeyMask
	IMPORT	|?SetColorKeyLow@DDGPESurf@@UAAXK@Z|	; DDGPESurf::SetColorKeyLow
	IMPORT	|?ColorKeyLow@DDGPESurf@@UAAKXZ|	; DDGPESurf::ColorKeyLow
	IMPORT	|?SetColorKeyHigh@DDGPESurf@@UAAXK@Z|	; DDGPESurf::SetColorKeyHigh
	IMPORT	|?ColorKeyHigh@DDGPESurf@@UAAKXZ|	; DDGPESurf::ColorKeyHigh
	IMPORT	|?PixelFormat@DDGPESurf@@UAA?AW4EDDGPEPixelFormat@@XZ| ; DDGPESurf::PixelFormat
	IMPORT	|?HasAlpha@DDGPESurf@@UAAHXZ|		; DDGPESurf::HasAlpha
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\display\omap2420surf.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T40349| DCD	|$LN16@OMAP2420Su|
	DCD	0x40004902

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7OMAP2420Surf@@6B@| DCD |??_EOMAP2420Surf@@UAAPAXI@Z| ; OMAP2420Surf::`vftable'
	DCD	|?Init@DDGPESurf@@UAAXHHPAXHW4EGPEFormat@@W4EDDGPEPixelFormat@@@Z|
	DCD	|?SetDDGPESurf@DDGPESurf@@UAAXPAU_DDRAWI_DDRAWSURFACE_LCL@@@Z|
	DCD	|?Bpp@DDGPESurf@@UAAKXZ|
	DCD	|?AlignedWidth@DDGPESurf@@UAAKXZ|
	DCD	|?SetColorKey@DDGPESurf@@UAAXK@Z|
	DCD	|?ColorKey@DDGPESurf@@UAAKXZ|
	DCD	|?SetColorKeyMask@DDGPESurf@@UAAXK@Z|
	DCD	|?ColorKeyMask@DDGPESurf@@UAAKXZ|
	DCD	|?SetColorKeyLow@DDGPESurf@@UAAXK@Z|
	DCD	|?ColorKeyLow@DDGPESurf@@UAAKXZ|
	DCD	|?SetColorKeyHigh@DDGPESurf@@UAAXK@Z|
	DCD	|?ColorKeyHigh@DDGPESurf@@UAAKXZ|
	DCD	|?PixelFormat@DDGPESurf@@UAA?AW4EDDGPEPixelFormat@@XZ|
	DCD	|?HasAlpha@DDGPESurf@@UAAHXZ|
	DCD	|?GetDriverData@DDGPESurf@@UAAPAUDDGPEDriverData@@XZ|
	DCD	|?SetDriverData@DDGPESurf@@UAAXPAUDDGPEDriverData@@@Z|
	DCD	|?SurfaceSize@DDGPESurf@@UAAHXZ|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0OMAP2420Surf@@QAA@HHKPAXHW4EGPEFormat@@@Z| PROC ; OMAP2420Surf::OMAP2420Surf

; 30   : {

  00000		 |$LN16@OMAP2420Su|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M40346|
  00008	e1a05003	 mov         r5, r3
  0000c	e1a08002	 mov         r8, r2
  00010	e1a04000	 mov         r4, r0
  00014	e59de030	 ldr         lr, [sp, #0x30]
  00018	e59d902c	 ldr         r9, [sp, #0x2C]
  0001c	e59d3028	 ldr         r3, [sp, #0x28]
  00020	e58de004	 str         lr, [sp, #4]
  00024	e58d9000	 str         r9, [sp]
  00028	eb000000	 bl          |??0DDGPESurf@@QAA@HHPAXHW4EGPEFormat@@@Z|
  0002c	e59f10ec	 ldr         r1, [pc, #0xEC]

; 31   :     BOOL rc = FALSE;
; 32   :     UCHAR *pSurface = NULL;
; 33   :     m_nOffsetInVideoMemory = pa;
; 34   :     m_fInVideoMemory = (pa != 0);

  00030	e3550000	 cmp         r5, #0

; 35   :     m_hSurface = NULL;

  00034	e3a0a000	 mov         r10, #0
  00038	e5841000	 str         r1, [r4]
  0003c	13a01001	 movne       r1, #1
  00040	03a01000	 moveq       r1, #0

; 36   :     m_pSurface = NULL;
; 37   :     m_inCache = FALSE;
; 38   :     m_pVidRegs = NULL;

  00044	e5841020	 str         r1, [r4, #0x20]

; 39   : 
; 40   :     // Create external mapping when surface is in video memory. We get to
; 41   :     // preblems with MapViewOfFile/VirtualAlloc. For whichever reason
; 42   :     // somebody allocates first page in mapped view. To workaround this
; 43   :     // issue we reserve one more page and ignore first one in virtual alloc.
; 44   :     if (m_fInVideoMemory)

  00048	e3510000	 cmp         r1, #0
  0004c	e5845034	 str         r5, [r4, #0x34]
  00050	e584a07c	 str         r10, [r4, #0x7C]
  00054	e584a080	 str         r10, [r4, #0x80]
  00058	e584a084	 str         r10, [r4, #0x84]
  0005c	e584a088	 str         r10, [r4, #0x88]
  00060	0a00002a	 beq         |$LN1@OMAP2420Su|

; 45   :         {
; 46   :         // Get surface size
; 47   :         ULONG size = stride * height;
; 48   : 
; 49   :         // We have to align on page boundary
; 50   :         DWORD offset = pa  & (PAGE_SIZE - 1);

  00064	e3e03b0d	 mvn         r3, #0xD, 22
  00068	e22360fb	 eor         r6, r3, #0xFB
  0006c	e5962000	 ldr         r2, [r6]

; 51   :         pa &= ~(PAGE_SIZE - 1);
; 52   :         size += offset;
; 53   : 
; 54   :         // Create file mapping
; 55   :         m_hSurface = CreateFileMapping(
; 56   :             INVALID_HANDLE_VALUE, NULL, PAGE_READWRITE, 0, size + PAGE_SIZE,
; 57   :             NULL
; 58   :             );

  00070	e3a03000	 mov         r3, #0
  00074	e3e00000	 mvn         r0, #0
  00078	e242e001	 sub         lr, r2, #1
  0007c	e00e7005	 and         r7, lr, r5
  00080	e0297998	 mla         r9, r8, r9, r7
  00084	e1a01002	 mov         r1, r2
  00088	e0811009	 add         r1, r1, r9
  0008c	e3a02004	 mov         r2, #4
  00090	e58d1000	 str         r1, [sp]
  00094	e3a01000	 mov         r1, #0
  00098	e1c5800e	 bic         r8, r5, lr
  0009c	e58da004	 str         r10, [sp, #4]
  000a0	eb000000	 bl          CreateFileMappingW
  000a4	e3500000	 cmp         r0, #0
  000a8	e584007c	 str         r0, [r4, #0x7C]

; 59   :         if (m_hSurface == NULL)

  000ac	0a000017	 beq         |$LN1@OMAP2420Su|

; 60   :             {
; 61   :             DEBUGMSG(GPE_ZONE_ERROR, (L"ERROR: OMAP2420Surf::OMAP2420Surf: "
; 62   :                 L"CreateFileMapping failed!\r\n"
; 63   :                 ));
; 64   :             goto cleanUp;
; 65   :             }
; 66   : 
; 67   :         pSurface = (UCHAR*)MapViewOfFile(m_hSurface, FILE_MAP_WRITE, 0, 0, 0);

  000b0	e3a03000	 mov         r3, #0
  000b4	e3a02000	 mov         r2, #0
  000b8	e3a01002	 mov         r1, #2
  000bc	e58da000	 str         r10, [sp]
  000c0	eb000000	 bl          MapViewOfFile
  000c4	e1b05000	 movs        r5, r0

; 68   :         if (pSurface == NULL)

  000c8	0a000010	 beq         |$LN1@OMAP2420Su|

; 69   :             {
; 70   :             DEBUGMSG(GPE_ZONE_ERROR, (L"ERROR: OMAP2420Surf::OMAP730Surf: "
; 71   :                 L"MapViewOfFile failed!\r\n"
; 72   :                 ));
; 73   :             goto cleanUp;
; 74   :             }
; 75   : 
; 76   :         if (!VirtualCopy(
; 77   :                 pSurface + PAGE_SIZE, (VOID*)(pa >> 8), size, 
; 78   :                 PAGE_READWRITE|PAGE_PHYSICAL|PAGE_NOCACHE
; 79   :                 ))

  000cc	e5961000	 ldr         r1, [r6]
  000d0	e3a03c06	 mov         r3, #6, 24
  000d4	e3833004	 orr         r3, r3, #4
  000d8	e0810005	 add         r0, r1, r5
  000dc	e1a01428	 mov         r1, r8, lsr #8
  000e0	e1a02009	 mov         r2, r9
  000e4	eb000000	 bl          VirtualCopy

; 80   :             {
; 81   :             DEBUGMSG(GPE_ZONE_ERROR, (L"ERROR: OMAPV1030GPE::MapFrameBuffer: "
; 82   :                 L"VirtualCopy failed (0x%08x, 0x%08x, 0x%08x, 0x%08x)\r\n",
; 83   :                 m_pSurface, pa >> 8, size, PAGE_READWRITE | PAGE_PHYSICAL
; 84   :                 ));
; 85   :             goto cleanUp;
; 86   :             }
; 87   : 
; 88   :         // Adjust frame offset
; 89   :         pSurface += offset + PAGE_SIZE;

  000e8	e5963000	 ldr         r3, [r6]
  000ec	e3500000	 cmp         r0, #0

; 90   :         
; 91   :         // Save original surface address
; 92   :         m_pSurface = (UCHAR*)m_pVirtAddr;

  000f0	15942004	 ldrne       r2, [r4, #4]
  000f4	10833007	 addne       r3, r3, r7
  000f8	10853003	 addne       r3, r5, r3

; 93   : 
; 94   :         // And replace it with mapped one...
; 95   :         m_pVirtAddr = (ADDRESS)pSurface;

  000fc	15843004	 strne       r3, [r4, #4]

; 96   :         }
; 97   : 
; 98   :     rc = TRUE;
; 99   : 
; 100  : cleanUp:
; 101  :     if (!rc && (pSurface != NULL))
; 102  :         {
; 103  :         ADDRESS address = (ADDRESS)pSurface;
; 104  :         address &= ~(PAGE_SIZE - 1);

  00100	02433001	 subeq       r3, r3, #1
  00104	01c50003	 biceq       r0, r5, r3
  00108		 |$cleanUp$40223|
  00108	15842080	 strne       r2, [r4, #0x80]

; 105  :         UnmapViewOfFile((VOID*)address);

  0010c	0b000000	 bleq        UnmapViewOfFile
  00110		 |$LN1@OMAP2420Su|

; 106  :         }
; 107  : }

  00110	e1a00004	 mov         r0, r4
  00114	e28dd008	 add         sp, sp, #8
  00118	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  0011c	e12fff1e	 bx          lr
  00120		 |$LN17@OMAP2420Su|
  00120		 |$LN18@OMAP2420Su|
  00120	00000000	 DCD         |??_7OMAP2420Surf@@6B@|
  00124		 |$M40347|

			 ENDP  ; |??0OMAP2420Surf@@QAA@HHKPAXHW4EGPEFormat@@@Z|, OMAP2420Surf::OMAP2420Surf

; File c:\wince600\public\common\oak\inc\ddgpe.h

  00000			 AREA	 |.pdata|, PDATA
|$T40361| DCD	|$LN5@GetDriverD|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDriverData@DDGPESurf@@UAAPAUDDGPEDriverData@@XZ| PROC ; DDGPESurf::GetDriverData

; 302  : 	virtual DDGPEDriverData*		GetDriverData(void) { return m_pDriverData; }

  00000		 |$LN5@GetDriverD|
  00000		 |$M40358|
  00000	e5900068	 ldr         r0, [r0, #0x68]
  00004	e12fff1e	 bx          lr
  00008		 |$M40359|

			 ENDP  ; |?GetDriverData@DDGPESurf@@UAAPAUDDGPEDriverData@@XZ|, DDGPESurf::GetDriverData


  00000			 AREA	 |.pdata|, PDATA
|$T40370| DCD	|$LN5@SetDriverD|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetDriverData@DDGPESurf@@UAAXPAUDDGPEDriverData@@@Z| PROC ; DDGPESurf::SetDriverData

; 303  : 	virtual void					SetDriverData(DDGPEDriverData* pDriverData) { m_pDriverData = pDriverData; }

  00000		 |$LN5@SetDriverD|
  00000		 |$M40367|
  00000	e5801068	 str         r1, [r0, #0x68]
  00004	e12fff1e	 bx          lr
  00008		 |$M40368|

			 ENDP  ; |?SetDriverData@DDGPESurf@@UAAXPAUDDGPEDriverData@@@Z|, DDGPESurf::SetDriverData


  00000			 AREA	 |.pdata|, PDATA
|$T40380| DCD	|$LN5@SurfaceSiz|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SurfaceSize@DDGPESurf@@UAAHXZ| PROC	; DDGPESurf::SurfaceSize

; 304  : 	virtual int						SurfaceSize (void) { return m_dwSurfaceSize; }

  00000		 |$LN5@SurfaceSiz|
  00000		 |$M40377|
  00000	e590005c	 ldr         r0, [r0, #0x5C]
  00004	e12fff1e	 bx          lr
  00008		 |$M40378|

			 ENDP  ; |?SurfaceSize@DDGPESurf@@UAAHXZ|, DDGPESurf::SurfaceSize

	EXPORT	|??1OMAP2420Surf@@UAA@XZ|		; OMAP2420Surf::~OMAP2420Surf
	IMPORT	|??1DDGPESurf@@UAA@XZ|			; DDGPESurf::~DDGPESurf
	IMPORT	|CloseHandle|
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\display\omap2420surf.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T40388| DCD	|$LN7@OMAP2420Su@2|
	DCD	0x40001a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1OMAP2420Surf@@UAA@XZ| PROC		; OMAP2420Surf::~OMAP2420Surf

; 114  : {

  00000		 |$LN7@OMAP2420Su@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40385|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3054	 ldr         r3, [pc, #0x54]

; 115  :     // Delete surface mapping if exists
; 116  :     if (m_pSurface != NULL)

  0000c	e5942080	 ldr         r2, [r4, #0x80]
  00010	e5843000	 str         r3, [r4]
  00014	e3520000	 cmp         r2, #0
  00018	0a000009	 beq         |$LN2@OMAP2420Su@2|
  0001c	e3e03b0d	 mvn         r3, #0xD, 22

; 117  :         {
; 118  :         ADDRESS address = m_pVirtAddr;
; 119  :         address -= PAGE_SIZE;

  00020	e22330fb	 eor         r3, r3, #0xFB
  00024	e5931000	 ldr         r1, [r3]
  00028	e5943004	 ldr         r3, [r4, #4]

; 120  :         address &= ~(PAGE_SIZE - 1);

  0002c	e2412001	 sub         r2, r1, #1
  00030	e0433001	 sub         r3, r3, r1
  00034	e1c30002	 bic         r0, r3, r2

; 121  :         UnmapViewOfFile((VOID*)address);

  00038	eb000000	 bl          UnmapViewOfFile

; 122  :         m_pVirtAddr = (ADDRESS)m_pSurface;

  0003c	e5943080	 ldr         r3, [r4, #0x80]
  00040	e5843004	 str         r3, [r4, #4]
  00044		 |$LN2@OMAP2420Su@2|

; 123  :         }
; 124  : 
; 125  :     if (m_hSurface != NULL) CloseHandle(m_hSurface);

  00044	e594307c	 ldr         r3, [r4, #0x7C]
  00048	e3530000	 cmp         r3, #0
  0004c	11a00003	 movne       r0, r3
  00050	1b000000	 blne        CloseHandle

; 126  : }

  00054	e1a00004	 mov         r0, r4
  00058	eb000000	 bl          |??1DDGPESurf@@UAA@XZ|
  0005c	e8bd4010	 ldmia       sp!, {r4, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$LN8@OMAP2420Su@2|
  00064		 |$LN9@OMAP2420Su@2|
  00064	00000000	 DCD         |??_7OMAP2420Surf@@6B@|
  00068		 |$M40386|

			 ENDP  ; |??1OMAP2420Surf@@UAA@XZ|, OMAP2420Surf::~OMAP2420Surf

	EXPORT	|?SurfaceOk@OMAP2420Surf@@QAAHXZ|	; OMAP2420Surf::SurfaceOk

  00000			 AREA	 |.pdata|, PDATA
|$T40402| DCD	|$LN7@SurfaceOk|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SurfaceOk@OMAP2420Surf@@QAAHXZ| PROC	; OMAP2420Surf::SurfaceOk

; 139  : {

  00000		 |$LN7@SurfaceOk|
  00000		 |$M40399|

; 140  :     return (m_pSurface != NULL); 

  00000	e5903080	 ldr         r3, [r0, #0x80]
  00004	e3530000	 cmp         r3, #0
  00008	13a00001	 movne       r0, #1
  0000c	03a00000	 moveq       r0, #0

; 141  : }

  00010	e12fff1e	 bx          lr
  00014		 |$M40400|

			 ENDP  ; |?SurfaceOk@OMAP2420Surf@@QAAHXZ|, OMAP2420Surf::SurfaceOk

	EXPORT	|?InCache@OMAP2420Surf@@QAAXXZ|		; OMAP2420Surf::InCache

  00000			 AREA	 |.pdata|, PDATA
|$T40410| DCD	|$LN5@InCache|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InCache@OMAP2420Surf@@QAAXXZ| PROC	; OMAP2420Surf::InCache

; 152  :     ) {

  00000		 |$LN5@InCache|
  00000		 |$M40407|

; 153  :     m_inCache = TRUE; 

  00000	e3a03001	 mov         r3, #1
  00004	e5803084	 str         r3, [r0, #0x84]

; 154  :     }

  00008	e12fff1e	 bx          lr
  0000c		 |$M40408|

			 ENDP  ; |?InCache@OMAP2420Surf@@QAAXXZ|, OMAP2420Surf::InCache

	EXPORT	|?WriteBack@OMAP2420Surf@@QAAXXZ|	; OMAP2420Surf::WriteBack
	IMPORT	|CacheRangeFlush|

  00000			 AREA	 |.pdata|, PDATA
|$T40418| DCD	|$LN6@WriteBack|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?WriteBack@OMAP2420Surf@@QAAXXZ| PROC	; OMAP2420Surf::WriteBack

; 166  : {

  00000		 |$LN6@WriteBack|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M40415|

; 167  :     ASSERT(m_pSurface != NULL);
; 168  :     if (m_pSurface != NULL)

  00004	e5903080	 ldr         r3, [r0, #0x80]
  00008	e1b01003	 movs        r1, r3

; 169  :         {
; 170  :         CacheRangeFlush(
; 171  :             (VOID*)m_pSurface, m_nStrideBytes * m_nHeight, CACHE_SYNC_WRITEBACK
; 172  :             );

  0000c	1590e030	 ldrne       lr, [r0, #0x30]
  00010	15903008	 ldrne       r3, [r0, #8]
  00014	11a00001	 movne       r0, r1
  00018	13a02004	 movne       r2, #4
  0001c	1001039e	 mulne       r1, lr, r3
  00020	1b000000	 blne        CacheRangeFlush

; 173  :         }
; 174  : }

  00024	e49de004	 ldr         lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$M40416|

			 ENDP  ; |?WriteBack@OMAP2420Surf@@QAAXXZ|, OMAP2420Surf::WriteBack

	EXPORT	|?Discard@OMAP2420Surf@@QAAXXZ|		; OMAP2420Surf::Discard

  00000			 AREA	 |.pdata|, PDATA
|$T40426| DCD	|$LN6@Discard|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Discard@OMAP2420Surf@@QAAXXZ| PROC	; OMAP2420Surf::Discard

; 186  : {

  00000		 |$LN6@Discard|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40423|
  00004	e1a04000	 mov         r4, r0

; 187  :     ASSERT(m_pSurface != NULL);
; 188  :     if ((m_inCache) && (m_pSurface != NULL))

  00008	e5943084	 ldr         r3, [r4, #0x84]
  0000c	e3530000	 cmp         r3, #0
  00010	15943080	 ldrne       r3, [r4, #0x80]
  00014	11b00003	 movnes      r0, r3

; 189  :         {
; 190  :         CacheRangeFlush(
; 191  :             (VOID*)m_pSurface, m_nStrideBytes * m_nHeight, CACHE_SYNC_DISCARD
; 192  :             );

  00018	1594e030	 ldrne       lr, [r4, #0x30]
  0001c	15943008	 ldrne       r3, [r4, #8]
  00020	13a02001	 movne       r2, #1
  00024	1001039e	 mulne       r1, lr, r3
  00028	1b000000	 blne        CacheRangeFlush

; 193  :         }
; 194  :     m_inCache = FALSE;

  0002c	e3a03000	 mov         r3, #0
  00030	e5843084	 str         r3, [r4, #0x84]

; 195  : }

  00034	e8bd4010	 ldmia       sp!, {r4, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M40424|

			 ENDP  ; |?Discard@OMAP2420Surf@@QAAXXZ|, OMAP2420Surf::Discard

	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T40437| DCD	|$LN6@scalar|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GOMAP2420Surf@@UAAPAXI@Z| PROC	; OMAP2420Surf::`scalar deleting destructor'
  00000		 |$LN6@scalar|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40434|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |??1OMAP2420Surf@@UAA@XZ|
  00010	e3140001	 tst         r4, #1
  00014	11a00005	 movne       r0, r5
  00018	1b000000	 blne        |??3@YAXPAX@Z|
  0001c	e1a00005	 mov         r0, r5
  00020	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M40435|

			 ENDP  ; |??_GOMAP2420Surf@@UAAPAXI@Z|, OMAP2420Surf::`scalar deleting destructor'

	END
