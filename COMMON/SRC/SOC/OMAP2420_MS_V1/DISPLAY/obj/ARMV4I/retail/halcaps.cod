; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\OMAP2420_MS_V1\DISPLAY\halcaps.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?aFourCC@@3PAKA| [ DATA ]		; aFourCC
	IMPORT	|DDGPESetPalette|
	IMPORT	|?HalSetOverlayPosition@@YAKPAU_DDHAL_SETOVERLAYPOSITIONDATA@@@Z| ; HalSetOverlayPosition
	IMPORT	|?HalUpdateOverlay@@YAKPAU_DDHAL_UPDATEOVERLAYDATA@@@Z| ; HalUpdateOverlay
	IMPORT	|?HalGetFlipStatus@@YAKPAU_DDHAL_GETFLIPSTATUSDATA@@@Z| ; HalGetFlipStatus
	IMPORT	|?HalGetBltStatus@@YAKPAU_DDHAL_GETBLTSTATUSDATA@@@Z| ; HalGetBltStatus
	IMPORT	|DDGPESetColorKey|
	IMPORT	|?HalUnlock@@YAKPAU_DDHAL_UNLOCKDATA@@@Z| ; HalUnlock
	IMPORT	|?HalLock@@YAKPAU_DDHAL_LOCKDATA@@@Z|	; HalLock
	IMPORT	|?HalFlip@@YAKPAU_DDHAL_FLIPDATA@@@Z|	; HalFlip
	IMPORT	|DDGPEDestroySurface|
	IMPORT	|DDGPESetEntries|
	IMPORT	|DDGPEDestroyPalette|
	IMPORT	|DDGPECreatePalette|
	IMPORT	|DDGPECanCreateSurface|
	IMPORT	|DDGPECreateSurface|

  00000			 AREA	 |.data|, DATA
|?aFourCC@@3PAKA| DCD 0x59565955			; aFourCC
|cbDDCallbacks| DCD 0x1c
	DCD	0xd
	DCD	|DDGPECreateSurface|
	DCD	0x0
	DCD	|DDGPECanCreateSurface|
	DCD	|DDGPECreatePalette|
	DCD	0x0
|MiscellaneousCallbacks| DCD 0x10
	DCD	0x0
	DCD	0x0
	DCD	0x0
|cbDDPaletteCallbacks| DCD 0x10
	DCD	0x3
	DCD	|DDGPEDestroyPalette|
	DCD	|DDGPESetEntries|
|cbDDSurfaceCallbacks| DCD 0x30
	DCD	0x3ff
	DCD	|DDGPEDestroySurface|
	DCD	|?HalFlip@@YAKPAU_DDHAL_FLIPDATA@@@Z|
	DCD	|?HalLock@@YAKPAU_DDHAL_LOCKDATA@@@Z|
	DCD	|?HalUnlock@@YAKPAU_DDHAL_UNLOCKDATA@@@Z|
	DCD	|DDGPESetColorKey|
	DCD	|?HalGetBltStatus@@YAKPAU_DDHAL_GETBLTSTATUSDATA@@@Z|
	DCD	|?HalGetFlipStatus@@YAKPAU_DDHAL_GETFLIPSTATUSDATA@@@Z|
	DCD	|?HalUpdateOverlay@@YAKPAU_DDHAL_UPDATEOVERLAYDATA@@@Z|
	DCD	|?HalSetOverlayPosition@@YAKPAU_DDHAL_SETOVERLAYPOSITIONDATA@@@Z|
	DCD	|DDGPESetPalette|

  00000			 AREA	 |.rdata|, DATA, READONLY
|FourCCDescriptionTable| DCD 0x32595559
	DCD	0x10
	DCD	0xff00ff
	DCD	0xff00
	DCD	0xff000000
	DCD	0x56595559
	DCD	0x10
	DCD	0xff00ff
	DCD	0xff00
	DCD	0xff000000
	DCD	0x55595659
	DCD	0x10
	DCD	0xff00ff00
	DCD	0xff
	DCD	0xff0000
	DCD	0x59565955
	DCD	0x10
	DCD	0xff00ff00
	DCD	0xff
	DCD	0xff0000
	DCD	0x36315659
	DCD	0x10
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0x32315659
	DCD	0xc
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0x3231564e
	DCD	0xc
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0x30323449
	DCD	0xc
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0x56555949
	DCD	0xc
	DCD	0xffffffff
	DCD	0xffffffff
	DCD	0xffffffff
	EXPORT	|?BuildDDHALInfo@OMAP2420GPE@@QAAXPAU_DDHALINFO@@K@Z| ; OMAP2420GPE::BuildDDHALInfo
	IMPORT	|?HalGetDriverInfo@@YAKPAU_DDHAL_GETDRIVERINFODATA@@@Z| ; HalGetDriverInfo
	IMPORT	|memset|
; File c:\wince600\platform\common\src\soc\omap2420_ms_v1\display\halcaps.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T40268| DCD	|$LN5@BuildDDHAL|
	DCD	0x40003301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?BuildDDHALInfo@OMAP2420GPE@@QAAXPAU_DDHALINFO@@K@Z| PROC ; OMAP2420GPE::BuildDDHALInfo

; 111  : {

  00000		 |$LN5@BuildDDHAL|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004		 |$M40265|
  00004	e1a08001	 mov         r8, r1

; 112  :     // clear the DDHALINFO structure and set the sizes
; 113  :     memset(pInfo, 0, sizeof(DDHALINFO));

  00008	e3a02f47	 mov         r2, #0x47, 30
  0000c	e3a01000	 mov         r1, #0
  00010	e1a00008	 mov         r0, r8
  00014	eb000000	 bl          memset

; 114  :     pInfo->dwSize = sizeof(DDHALINFO);
; 115  :     pInfo->ddCaps.dwSize = sizeof(DDCAPS);
; 116  : 
; 117  :     // set the callback pointers
; 118  :     pInfo->lpDDCallbacks = &cbDDCallbacks;
; 119  :     pInfo->lpDDSurfaceCallbacks = &cbDDSurfaceCallbacks;
; 120  :     pInfo->lpDDPaletteCallbacks = &cbDDPaletteCallbacks;
; 121  :     pInfo->GetDriverInfo = HalGetDriverInfo;
; 122  : 
; 123  :     // set the video memory sizes
; 124  :     pInfo->ddCaps.dwVidMemTotal = VIDEO_MEMORY_SIZE;
; 125  :     pInfo->ddCaps.dwVidMemFree = VIDEO_MEMORY_SIZE;
; 126  : 
; 127  :     // set the overlay info
; 128  : //    pInfo->ddCaps.dwMaxVisibleOverlays = 1;
; 129  :     pInfo->ddCaps.dwCurrVisibleOverlays = 0;
; 130  :     //	pInfo->ddCaps.dwMinOverlayStretch = 500;
; 131  :     //	pInfo->ddCaps.dwMaxOverlayStretch = 8000;
; 132  :     pInfo->ddCaps.dwMinOverlayStretch = 1000;
; 133  :     pInfo->ddCaps.dwMaxOverlayStretch = 1000;
; 134  : 
; 135  :     // set some misc info
; 136  :     pInfo->ddCaps.dwNumFourCCCodes = 0; //NUM_FOURCC_CODES;
; 137  :     pInfo->ddCaps.dwAlignBoundarySrc = 0;
; 138  :     pInfo->ddCaps.dwAlignSizeSrc = 0;
; 139  : //    pInfo->lpdwFourCC = aFourCC;
; 140  :     pInfo->dwFlags = 0;
; 141  :     
; 142  :     // set the general surface capabilities
; 143  :     pInfo->ddCaps.ddsCaps.dwCaps = (DDSCAPS_BACKBUFFER|
; 144  :                                     DDSCAPS_FLIP|
; 145  :                                     DDSCAPS_FRONTBUFFER|
; 146  : //                                    DDSCAPS_OVERLAY|
; 147  :                                     DDSCAPS_PRIMARYSURFACE|
; 148  :                                     DDSCAPS_SYSTEMMEMORY|
; 149  :                                     DDSCAPS_VIDEOMEMORY|
; 150  :                                     0);
; 151  : 
; 152  :     // set the color key capabilities of the surface
; 153  :     pInfo->ddCaps.dwCKeyCaps = DDCKEYCAPS_SRCBLT|
; 154  :                                //DDCKEYCAPS_DESTBLT|
; 155  :                                0;
; 156  : 
; 157  :     // set the palette capabilities
; 158  :     pInfo->ddCaps.dwPalCaps = 0; // DDPCAPS_PRIMARYSURFACE
; 159  : 
; 160  :     // set the BLT capabilities
; 161  :     pInfo->ddCaps.dwBltCaps = DDBLTCAPS_READSYSMEM | DDBLTCAPS_WRITESYSMEM;
; 162  : 
; 163  :     // set the overlay capabilities
; 164  :     //pInfo->ddCaps.dwOverlayCaps = DDOVERLAYCAPS_OVERLAYSUPPORT|DDOVERLAYCAPS_FLIP|DDOVERLAYCAPS_CKEYSRC|DDOVERLAYCAPS_CKEYDEST;
; 165  : 
; 166  :     // set the supported ROPS
; 167  :     SETROPBIT(pInfo->ddCaps.dwRops, SRCCOPY);
; 168  :     SETROPBIT(pInfo->ddCaps.dwRops, PATCOPY);
; 169  :     SETROPBIT(pInfo->ddCaps.dwRops, BLACKNESS);
; 170  :     SETROPBIT(pInfo->ddCaps.dwRops, WHITENESS);

  00018	e598e05c	 ldr         lr, [r8, #0x5C]
  0001c	e59f70a4	 ldr         r7, [pc, #0xA4]
  00020	e3a03102	 mov         r3, #2, 2
  00024	e59f6098	 ldr         r6, [pc, #0x98]
  00028	e5982058	 ldr         r2, [r8, #0x58]
  0002c	e5980040	 ldr         r0, [r8, #0x40]
  00030	e3833801	 orr         r3, r3, #1, 16
  00034	e18e3003	 orr         r3, lr, r3
  00038	e3a01c01	 mov         r1, #1, 24
  0003c	e287403c	 add         r4, r7, #0x3C
  00040	e287502c	 add         r5, r7, #0x2C
  00044	e3a0a080	 mov         r10, #0x80
  00048	e588305c	 str         r3, [r8, #0x5C]
  0004c	e381e0ce	 orr         lr, r1, #0xCE
  00050	e288c00c	 add         r12, r8, #0xC
  00054	e88c0470	 stmia       r12, {r4 - r6, r10}
  00058	e3a03003	 mov         r3, #3
  0005c	e3822a01	 orr         r2, r2, #1, 20
  00060	e3800001	 orr         r0, r0, #1
  00064	e3a09f47	 mov         r9, #0x47, 30
  00068	e3a0bc02	 mov         r11, #2, 24
  0006c	e3a01401	 mov         r1, #1, 8
  00070	e3a05000	 mov         r5, #0
  00074	e3a04ffa	 mov         r4, #0xFA, 30
  00078	e288c034	 add         r12, r8, #0x34
  0007c	e88c0808	 stmia       r12, {r3, r11}
  00080	e5882058	 str         r2, [r8, #0x58]
  00084	e5880040	 str         r0, [r8, #0x40]
  00088	e5889000	 str         r9, [r8]
  0008c	e588101c	 str         r1, [r8, #0x1C]
  00090	e5881020	 str         r1, [r8, #0x20]
  00094	e5885068	 str         r5, [r8, #0x68]
  00098	e588407c	 str         r4, [r8, #0x7C]
  0009c	e5884080	 str         r4, [r8, #0x80]
  000a0	e588502c	 str         r5, [r8, #0x2C]
  000a4	e588506c	 str         r5, [r8, #0x6C]
  000a8	e5885070	 str         r5, [r8, #0x70]
  000ac	e288c004	 add         r12, r8, #4
  000b0	e88c00a0	 stmia       r12, {r5, r7}
  000b4	e588e028	 str         lr, [r8, #0x28]
  000b8	e5885030	 str         r5, [r8, #0x30]

; 171  : }

  000bc	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  000c0	e12fff1e	 bx          lr
  000c4		 |$LN6@BuildDDHAL|
  000c4		 |$LN7@BuildDDHAL|
  000c4	00000000	 DCD         |?HalGetDriverInfo@@YAKPAU_DDHAL_GETDRIVERINFODATA@@@Z|
  000c8		 |$LN8@BuildDDHAL|
  000c8	00000000	 DCD         |cbDDCallbacks|
  000cc		 |$M40266|

			 ENDP  ; |?BuildDDHALInfo@OMAP2420GPE@@QAAXPAU_DDHALINFO@@K@Z|, OMAP2420GPE::BuildDDHALInfo

	EXPORT	|buildDDHALInfo|
	IMPORT	|?GetDDGPE@@YAPAVDDGPE@@XZ|		; GetDDGPE

  00000			 AREA	 |.pdata|, PDATA
|$T40281| DCD	|$LN5@buildDDHAL|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |buildDDHALInfo| PROC

; 101  : {

  00000		 |$LN5@buildDDHAL|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40278|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 102  :     OMAP2420GPE *pOMAP2420GPE = static_cast<OMAP2420GPE*>(GetDDGPE());

  0000c	eb000000	 bl          |?GetDDGPE@@YAPAVDDGPE@@XZ|

; 103  :     pOMAP2420GPE->BuildDDHALInfo(lpddhi, modeIdx);

  00010	e1a02004	 mov         r2, r4
  00014	e1a01005	 mov         r1, r5
  00018	eb000000	 bl          |?BuildDDHALInfo@OMAP2420GPE@@QAAXPAU_DDHALINFO@@K@Z|

; 104  : }

  0001c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$M40279|

			 ENDP  ; |buildDDHALInfo|

	END
