; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\TPS659XX\GPIO\tps659xx_gpio.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?csGpio@@3UCRITICAL_SECTION@@A| [ DATA ] ; csGpio
	EXPORT	|DEVICE_IFC_TWL_GUID| [ DATA ]
	EXPORT	|?g_fGpioPostInit@@3HA| [ DATA ]	; g_fGpioPostInit
	EXPORT	|Tps659xx_Gpio| [ DATA ]

  00000			 AREA	 |.bss|, NOINIT
|?csGpio@@3UCRITICAL_SECTION@@A| % 0x14			; csGpio
|s_hTritonDriver| % 0x4
|?g_fGpioPostInit@@3HA| % 0x4				; g_fGpioPostInit

  00000			 AREA	 |.data|, DATA
|s_rgGpioRegs| DCD 0x10098
	DCD	0x1009b
	DCD	0x1009e
	DCD	0x100a1
	DCD	0x100a4
	DCD	0x100a7
	DCD	0x100ab
	DCD	0x100c0
	DCD	0x100ac
	DCD	0x100c1
	DCD	0x10099
	DCD	0x1009c
	DCD	0x1009f
	DCD	0x100a2
	DCD	0x100a5
	DCD	0x100a8
	DCD	0x100ad
	DCD	0x100c2
	DCD	0x100ae
	DCD	0x100c3
	DCD	0x1009a
	DCD	0x1009d
	DCD	0x100a0
	DCD	0x100a3
	DCD	0x100a6
	DCD	0x100a9
	DCD	0x100af
	DCD	0x100c4
	DCD	0x0
	DCD	0x0
|s_TritonIntrIdMap| DCD 0x18
	DCD	0x1000019
	DCD	0x200001a
	DCD	0x300001b
	DCD	0x400001c
	DCD	0x500001d
	DCD	0x600001e
	DCD	0x700001f
	DCD	0x10020
	DCD	0x1010021
	DCD	0x2010022
	DCD	0x3010023
	DCD	0x4010024
	DCD	0x5010025
	DCD	0x6010026
	DCD	0x7010027
	DCD	0x20028
	DCD	0x1020029
|Tps659xx_Gpio| DCD 0x0
	DCD	|?Tps659xxGpioInit@@YAHPBGPAPAXPAI@Z|
	DCD	|?Tps659xxGpioPostInit@@YAHPAX@Z|
	DCD	|?Tps659xxGpioDeinit@@YAHPAX@Z|
	DCD	|?Tps659xxGpioSetBit@@YAHPAXI@Z|
	DCD	|?Tps659xxGpioClrBit@@YAHPAXI@Z|
	DCD	|?Tps659xxGpioGetBit@@YAKPAXI@Z|
	DCD	|?Tps659xxGpioSetMode@@YAHPAXII@Z|
	DCD	|?Tps659xxGpioGetMode@@YAKPAXI@Z|
	DCD	|?Tps659xxGpioPullup@@YAHPAXII@Z|
	DCD	|?Tps659xxGpioPulldown@@YAHPAXII@Z|
	DCD	|?Tps659xxGpioIoControl@@YAHPAXIPAEI1IPAK@Z|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	%	8

  00000			 AREA	 |.rdata|, DATA, READONLY
|DEVICE_IFC_TWL_GUID| DCD 0xdef0a04b
	DCW	0xb967
	DCW	0x43db
	DCB	0x95
	DCB	0x9e
	DCB	0xd9
	DCB	0xfc
	DCB	0x62
	DCB	0x25
	DCB	0xcd
	DCB	0xeb
	EXPORT	|??_C@_1CM@MEGPAFAD@?$AA?9?$AAT?$AAp?$AAs?$AA6?$AA5?$AA9?$AAx?$AAx?$AAG?$AAp?$AAi?$AAo?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@KOOGBIKJ@?$AA?$CL?$AAT?$AAp?$AAs?$AA6?$AA5?$AA9?$AAx?$AAx?$AAG?$AAp?$AAi?$AAo?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|

  00000			 AREA	 |.pdata|, PDATA
|$T37386| DCD	|$LN9@Tps659xxGp|
	DCD	0x40002704
; File c:\wince600\platform\common\src\soc\common_ti_v1\tps659xx\gpio\tps659xx_gpio.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@MEGPAFAD@?$AA?9?$AAT?$AAp?$AAs?$AA6?$AA5?$AA9?$AAx?$AAx?$AAG?$AAp?$AAi?$AAo?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "T", 0x0, "p", 0x0, "s", 0x0, "6", 0x0, "5", 0x0, "9"
	DCB	0x0, "x", 0x0, "x", 0x0, "G", 0x0, "p", 0x0, "i", 0x0, "o"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@KOOGBIKJ@?$AA?$CL?$AAT?$AAp?$AAs?$AA6?$AA5?$AA9?$AAx?$AAx?$AAG?$AAp?$AAi?$AAo?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "T", 0x0, "p", 0x0, "s", 0x0, "6", 0x0, "5", 0x0, "9"
	DCB	0x0, "x", 0x0, "x", 0x0, "G", 0x0, "p", 0x0, "i", 0x0, "o"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, "%"
	DCB	0x0, "s", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tps659xxGpioInit@@YAHPBGPAPAXPAI@Z| PROC ; Tps659xxGpioInit

; 316  : {

  00000		 |$LN9@Tps659xxGp|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M37383|

; 317  : 
; 318  :     UNREFERENCED_PARAMETER(szContext);
; 319  :     UNREFERENCED_PARAMETER(phContext);
; 320  : 
; 321  :     DEBUGMSG(ZONE_FUNCTION, (
; 322  :         L"+Tps659xxGpioInit(%s)\r\n", szContext
; 323  :         ));

  00010	e59f307c	 ldr         r3, [pc, #0x7C]
  00014	e5933440	 ldr         r3, [r3, #0x440]
  00018	e3130004	 tst         r3, #4
  0001c	0a000005	 beq         |$LN3@Tps659xxGp|
  00020	e59d1014	 ldr         r1, [sp, #0x14]
  00024	e59f006c	 ldr         r0, [pc, #0x6C]
  00028	eb000000	 bl          NKDbgPrintfW
  0002c	e3a03001	 mov         r3, #1
  00030	e58d3004	 str         r3, [sp, #4]
  00034	ea000001	 b           |$LN4@Tps659xxGp|
  00038		 |$LN3@Tps659xxGp|
  00038	e3a03000	 mov         r3, #0
  0003c	e58d3004	 str         r3, [sp, #4]
  00040		 |$LN4@Tps659xxGp|

; 324  : 
; 325  :     *pGpioCount = TPS659XX_MAX_GPIO_COUNT;

  00040	e59d201c	 ldr         r2, [sp, #0x1C]
  00044	e3a03012	 mov         r3, #0x12
  00048	e5823000	 str         r3, [r2]

; 326  : 
; 327  :     DEBUGMSG(ZONE_FUNCTION, (L"-Tps659xxGpioInit()\r\n"));

  0004c	e59f3040	 ldr         r3, [pc, #0x40]
  00050	e5933440	 ldr         r3, [r3, #0x440]
  00054	e3130004	 tst         r3, #4
  00058	0a000004	 beq         |$LN5@Tps659xxGp|
  0005c	e59f002c	 ldr         r0, [pc, #0x2C]
  00060	eb000000	 bl          NKDbgPrintfW
  00064	e3a03001	 mov         r3, #1
  00068	e58d3008	 str         r3, [sp, #8]
  0006c	ea000001	 b           |$LN6@Tps659xxGp|
  00070		 |$LN5@Tps659xxGp|
  00070	e3a03000	 mov         r3, #0
  00074	e58d3008	 str         r3, [sp, #8]
  00078		 |$LN6@Tps659xxGp|

; 328  :     return TRUE;

  00078	e3a03001	 mov         r3, #1
  0007c	e58d3000	 str         r3, [sp]

; 329  : }

  00080	e59d0000	 ldr         r0, [sp]
  00084	e28dd00c	 add         sp, sp, #0xC
  00088	e89d6000	 ldmia       sp, {sp, lr}
  0008c	e12fff1e	 bx          lr
  00090		 |$LN10@Tps659xxGp|
  00090		 |$LN11@Tps659xxGp|
  00090	00000000	 DCD         |??_C@_1CM@MEGPAFAD@?$AA?9?$AAT?$AAp?$AAs?$AA6?$AA5?$AA9?$AAx?$AAx?$AAG?$AAp?$AAi?$AAo?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00094		 |$LN12@Tps659xxGp|
  00094	00000000	 DCD         |dpCurSettings|
  00098		 |$LN13@Tps659xxGp|
  00098	00000000	 DCD         |??_C@_1DA@KOOGBIKJ@?$AA?$CL?$AAT?$AAp?$AAs?$AA6?$AA5?$AA9?$AAx?$AAx?$AAG?$AAp?$AAi?$AAo?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0009c		 |$M37384|

			 ENDP  ; |?Tps659xxGpioInit@@YAHPBGPAPAXPAI@Z|, Tps659xxGpioInit

	IMPORT	|InitializeCriticalSection|

  00008			 AREA	 |.pdata|, PDATA
|$T37396| DCD	|$LN5@Tps659xxGp@2|
	DCD	0x40001104
; Function compile flags: /Odtp

  0009c			 AREA	 |.text|, CODE, ARM

  0009c		 |?Tps659xxGpioPostInit@@YAHPAX@Z| PROC	; Tps659xxGpioPostInit

; 342  : {

  0009c		 |$LN5@Tps659xxGp@2|
  0009c	e1a0c00d	 mov         r12, sp
  000a0	e92d0001	 stmdb       sp!, {r0}
  000a4	e92d5000	 stmdb       sp!, {r12, lr}
  000a8	e24dd004	 sub         sp, sp, #4
  000ac		 |$M37393|

; 343  : 
; 344  :     UNREFERENCED_PARAMETER(context);
; 345  :     InitializeCriticalSection(&csGpio);

  000ac	e59f0028	 ldr         r0, [pc, #0x28]
  000b0	eb000000	 bl          InitializeCriticalSection

; 346  :     g_fGpioPostInit = TRUE;

  000b4	e59f201c	 ldr         r2, [pc, #0x1C]
  000b8	e3a03001	 mov         r3, #1
  000bc	e5823000	 str         r3, [r2]

; 347  : 
; 348  :     return TRUE;

  000c0	e3a03001	 mov         r3, #1
  000c4	e58d3000	 str         r3, [sp]

; 349  : }

  000c8	e59d0000	 ldr         r0, [sp]
  000cc	e28dd004	 add         sp, sp, #4
  000d0	e89d6000	 ldmia       sp, {sp, lr}
  000d4	e12fff1e	 bx          lr
  000d8		 |$LN6@Tps659xxGp@2|
  000d8		 |$LN7@Tps659xxGp@2|
  000d8	00000000	 DCD         |?g_fGpioPostInit@@3HA|
  000dc		 |$LN8@Tps659xxGp@2|
  000dc	00000000	 DCD         |?csGpio@@3UCRITICAL_SECTION@@A|
  000e0		 |$M37394|

			 ENDP  ; |?Tps659xxGpioPostInit@@YAHPAX@Z|, Tps659xxGpioPostInit

	EXPORT	|??_C@_1DA@MLPCMBDA@?$AA?9?$AAT?$AAp?$AAs?$AA6?$AA5?$AA9?$AAx?$AAx?$AAG?$AAp?$AAi?$AAo?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@EMBFMNLI@?$AA?$CL?$AAT?$AAp?$AAs?$AA6?$AA5?$AA9?$AAx?$AAx?$AAG?$AAp?$AAi?$AAo?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|DeleteCriticalSection|

  00010			 AREA	 |.pdata|, PDATA
|$T37409| DCD	|$LN10@Tps659xxGp@3|
	DCD	0x40002d04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@MLPCMBDA@?$AA?9?$AAT?$AAp?$AAs?$AA6?$AA5?$AA9?$AAx?$AAx?$AAG?$AAp?$AAi?$AAo?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "T", 0x0, "p", 0x0, "s", 0x0, "6", 0x0, "5", 0x0, "9"
	DCB	0x0, "x", 0x0, "x", 0x0, "G", 0x0, "p", 0x0, "i", 0x0, "o"
	DCB	0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@EMBFMNLI@?$AA?$CL?$AAT?$AAp?$AAs?$AA6?$AA5?$AA9?$AAx?$AAx?$AAG?$AAp?$AAi?$AAo?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "T", 0x0, "p", 0x0, "s", 0x0, "6", 0x0, "5", 0x0, "9"
	DCB	0x0, "x", 0x0, "x", 0x0, "G", 0x0, "p", 0x0, "i", 0x0, "o"
	DCB	0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  000e0			 AREA	 |.text|, CODE, ARM

  000e0		 |?Tps659xxGpioDeinit@@YAHPAX@Z| PROC	; Tps659xxGpioDeinit

; 361  : {    

  000e0		 |$LN10@Tps659xxGp@3|
  000e0	e1a0c00d	 mov         r12, sp
  000e4	e92d0001	 stmdb       sp!, {r0}
  000e8	e92d5000	 stmdb       sp!, {r12, lr}
  000ec	e24dd00c	 sub         sp, sp, #0xC
  000f0		 |$M37406|

; 362  :     UNREFERENCED_PARAMETER(context);
; 363  :     DEBUGMSG(ZONE_FUNCTION, (L"+Tps659xxGpioDeinit(0x%08x)\r\n", context));

  000f0	e59f308c	 ldr         r3, [pc, #0x8C]
  000f4	e5933440	 ldr         r3, [r3, #0x440]
  000f8	e3130004	 tst         r3, #4
  000fc	0a000005	 beq         |$LN4@Tps659xxGp@3|
  00100	e59d1014	 ldr         r1, [sp, #0x14]
  00104	e59f0084	 ldr         r0, [pc, #0x84]
  00108	eb000000	 bl          NKDbgPrintfW
  0010c	e3a03001	 mov         r3, #1
  00110	e58d3004	 str         r3, [sp, #4]
  00114	ea000001	 b           |$LN5@Tps659xxGp@3|
  00118		 |$LN4@Tps659xxGp@3|
  00118	e3a03000	 mov         r3, #0
  0011c	e58d3004	 str         r3, [sp, #4]
  00120		 |$LN5@Tps659xxGp@3|

; 364  : 
; 365  :     CloseTwl();

  00120	eb000000	 bl          |?CloseTwl@@YAXXZ|

; 366  :     if (g_fGpioPostInit) DeleteCriticalSection(&csGpio);

  00124	e59f3060	 ldr         r3, [pc, #0x60]
  00128	e5933000	 ldr         r3, [r3]
  0012c	e3530000	 cmp         r3, #0
  00130	0a000001	 beq         |$LN1@Tps659xxGp@3|
  00134	e59f004c	 ldr         r0, [pc, #0x4C]
  00138	eb000000	 bl          DeleteCriticalSection
  0013c		 |$LN1@Tps659xxGp@3|

; 367  : 
; 368  :     DEBUGMSG(ZONE_FUNCTION, (L"-Tps659xxGpioDeinit()\r\n"));

  0013c	e59f3040	 ldr         r3, [pc, #0x40]
  00140	e5933440	 ldr         r3, [r3, #0x440]
  00144	e3130004	 tst         r3, #4
  00148	0a000004	 beq         |$LN6@Tps659xxGp@3|
  0014c	e59f002c	 ldr         r0, [pc, #0x2C]
  00150	eb000000	 bl          NKDbgPrintfW
  00154	e3a03001	 mov         r3, #1
  00158	e58d3008	 str         r3, [sp, #8]
  0015c	ea000001	 b           |$LN7@Tps659xxGp@3|
  00160		 |$LN6@Tps659xxGp@3|
  00160	e3a03000	 mov         r3, #0
  00164	e58d3008	 str         r3, [sp, #8]
  00168		 |$LN7@Tps659xxGp@3|

; 369  :     return TRUE;

  00168	e3a03001	 mov         r3, #1
  0016c	e58d3000	 str         r3, [sp]

; 370  : }

  00170	e59d0000	 ldr         r0, [sp]
  00174	e28dd00c	 add         sp, sp, #0xC
  00178	e89d6000	 ldmia       sp, {sp, lr}
  0017c	e12fff1e	 bx          lr
  00180		 |$LN11@Tps659xxGp@3|
  00180		 |$LN12@Tps659xxGp@3|
  00180	00000000	 DCD         |??_C@_1DA@MLPCMBDA@?$AA?9?$AAT?$AAp?$AAs?$AA6?$AA5?$AA9?$AAx?$AAx?$AAG?$AAp?$AAi?$AAo?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00184		 |$LN13@Tps659xxGp@3|
  00184	00000000	 DCD         |dpCurSettings|
  00188		 |$LN14@Tps659xxGp@3|
  00188	00000000	 DCD         |?csGpio@@3UCRITICAL_SECTION@@A|
  0018c		 |$LN15@Tps659xxGp@3|
  0018c	00000000	 DCD         |?g_fGpioPostInit@@3HA|
  00190		 |$LN16@Tps659xxGp@3|
  00190	00000000	 DCD         |??_C@_1DM@EMBFMNLI@?$AA?$CL?$AAT?$AAp?$AAs?$AA6?$AA5?$AA9?$AAx?$AAx?$AAG?$AAp?$AAi?$AAo?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00194		 |$M37407|

			 ENDP  ; |?Tps659xxGpioDeinit@@YAHPAX@Z|, Tps659xxGpioDeinit

	IMPORT	|TWLClose|

  00018			 AREA	 |.pdata|, PDATA
|$T37420| DCD	|$LN6@CloseTwl|
	DCD	0x40000e01
; Function compile flags: /Odtp

  00194			 AREA	 |.text|, CODE, ARM

  00194		 |?CloseTwl@@YAXXZ| PROC		; CloseTwl

; 222  : {

  00194		 |$LN6@CloseTwl|
  00194	e52de004	 str         lr, [sp, #-4]!
  00198		 |$M37417|

; 223  :     if (s_hTritonDriver != NULL)

  00198	e59f3028	 ldr         r3, [pc, #0x28]
  0019c	e5933000	 ldr         r3, [r3]
  001a0	e3530000	 cmp         r3, #0
  001a4	0a000005	 beq         |$LN1@CloseTwl|

; 224  :         {
; 225  :         TWLClose(s_hTritonDriver);

  001a8	e59f3018	 ldr         r3, [pc, #0x18]
  001ac	e5930000	 ldr         r0, [r3]
  001b0	eb000000	 bl          TWLClose

; 226  :         s_hTritonDriver = NULL;

  001b4	e59f200c	 ldr         r2, [pc, #0xC]
  001b8	e3a03000	 mov         r3, #0
  001bc	e5823000	 str         r3, [r2]
  001c0		 |$LN1@CloseTwl|

; 227  :         }
; 228  : }

  001c0	e49de004	 ldr         lr, [sp], #4
  001c4	e12fff1e	 bx          lr
  001c8		 |$LN7@CloseTwl|
  001c8		 |$LN8@CloseTwl|
  001c8	00000000	 DCD         |s_hTritonDriver|
  001cc		 |$M37418|

			 ENDP  ; |?CloseTwl@@YAXXZ|, CloseTwl

	EXPORT	|?Unlock@@YAXXZ|			; Unlock
	EXPORT	|?Lock@@YAXXZ|				; Lock

  00020			 AREA	 |.pdata|, PDATA
|$T37428| DCD	|$LN12@Tps659xxGp@4|
	DCD	0x4000de04
; Function compile flags: /Odtp

  001cc			 AREA	 |.text|, CODE, ARM

  001cc		 |?Tps659xxGpioSetMode@@YAHPAXII@Z| PROC ; Tps659xxGpioSetMode

; 382  : {

  001cc		 |$LN12@Tps659xxGp@4|
  001cc	e1a0c00d	 mov         r12, sp
  001d0	e92d0007	 stmdb       sp!, {r0 - r2}
  001d4	e92d5000	 stmdb       sp!, {r12, lr}
  001d8	e24dd01c	 sub         sp, sp, #0x1C
  001dc		 |$M37425|

; 383  :     BOOL rc = FALSE;

  001dc	e3a03000	 mov         r3, #0
  001e0	e58d3000	 str         r3, [sp]

; 384  :     UINT bit = GPIO_BIT(id);

  001e4	e59d3028	 ldr         r3, [sp, #0x28]
  001e8	e2033007	 and         r3, r3, #7
  001ec	e58d3010	 str         r3, [sp, #0x10]

; 385  :     UINT bank = GPIO_BANK(id);

  001f0	e59d3028	 ldr         r3, [sp, #0x28]
  001f4	e1a031a3	 mov         r3, r3, lsr #3
  001f8	e58d3008	 str         r3, [sp, #8]

; 386  :     UINT subGroup = GPIO_SUBGROUP(id);

  001fc	e59d3028	 ldr         r3, [sp, #0x28]
  00200	e2033007	 and         r3, r3, #7
  00204	e1a03123	 mov         r3, r3, lsr #2
  00208	e58d3004	 str         r3, [sp, #4]

; 387  :     UINT subIndex = GPIO_SUBINDEX(id);

  0020c	e59d3028	 ldr         r3, [sp, #0x28]
  00210	e2033007	 and         r3, r3, #7
  00214	e2032003	 and         r2, r3, #3
  00218	e3a03002	 mov         r3, #2
  0021c	e0030392	 mul         r3, r2, r3
  00220	e58d300c	 str         r3, [sp, #0xC]

; 388  : 
; 389  :     UNREFERENCED_PARAMETER(context);
; 390  : 
; 391  : //    RETAILMSG(1,(TEXT("+Tps659xxGpioSetMode  %d\r\n"),id));
; 392  :     if (id < TPS659XX_MAX_GPIO_COUNT)

  00224	e59d3028	 ldr         r3, [sp, #0x28]
  00228	e3530012	 cmp         r3, #0x12
  0022c	2a0000bd	 bcs         |$LN7@Tps659xxGp@4|

; 393  :         {
; 394  :         UINT8 val;
; 395  :         UINT8 edgeMode = 0;

  00230	e3a03000	 mov         r3, #0
  00234	e5cd3014	 strb        r3, [sp, #0x14]

; 396  : 
; 397  :         Lock();

  00238	eb000000	 bl          |?Lock@@YAXXZ|

; 398  :         SetGpioBankPowerState(id, D0);

  0023c	e3a01000	 mov         r1, #0
  00240	e59d0028	 ldr         r0, [sp, #0x28]
  00244	eb000000	 bl          |?SetGpioBankPowerState@@YAXIW4_CEDEVICE_POWER_STATE@@@Z|

; 399  : 
; 400  :         // set direction
; 401  :         if ((mode & GPIO_DIR_INPUT) != 0)

  00248	e59d302c	 ldr         r3, [sp, #0x2C]
  0024c	e3130001	 tst         r3, #1
  00250	0a00001c	 beq         |$LN6@Tps659xxGp@4|

; 402  :             {
; 403  :             ReadTwlReg(s_rgGpioRegs[bank].GPIODATADIR, &val, sizeof(val));

  00254	e3a02001	 mov         r2, #1
  00258	e28d1015	 add         r1, sp, #0x15
  0025c	e59de008	 ldr         lr, [sp, #8]
  00260	e3a03028	 mov         r3, #0x28
  00264	e000039e	 mul         r0, lr, r3
  00268	e59f32d0	 ldr         r3, [pc, #0x2D0]
  0026c	e0833000	 add         r3, r3, r0
  00270	e2833004	 add         r3, r3, #4
  00274	e5930000	 ldr         r0, [r3]
  00278	eb000000	 bl          |?ReadTwlReg@@YAHKPAEI@Z|

; 404  :             val &= ~(1 << bit);

  0027c	e59d2010	 ldr         r2, [sp, #0x10]
  00280	e3a03001	 mov         r3, #1
  00284	e1a03213	 mov         r3, r3, lsl r2
  00288	e1e02003	 mvn         r2, r3
  0028c	e5dd3015	 ldrb        r3, [sp, #0x15]
  00290	e0033002	 and         r3, r3, r2
  00294	e20330ff	 and         r3, r3, #0xFF
  00298	e5cd3015	 strb        r3, [sp, #0x15]

; 405  :             WriteTwlReg(s_rgGpioRegs[bank].GPIODATADIR, &val, sizeof(val));

  0029c	e3a02001	 mov         r2, #1
  002a0	e28d1015	 add         r1, sp, #0x15
  002a4	e59de008	 ldr         lr, [sp, #8]
  002a8	e3a03028	 mov         r3, #0x28
  002ac	e000039e	 mul         r0, lr, r3
  002b0	e59f3288	 ldr         r3, [pc, #0x288]
  002b4	e0833000	 add         r3, r3, r0
  002b8	e2833004	 add         r3, r3, #4
  002bc	e5930000	 ldr         r0, [r3]
  002c0	eb000000	 bl          |?WriteTwlReg@@YAHKPAEI@Z|

; 406  :             }
; 407  :         else

  002c4	ea00001a	 b           |$LN5@Tps659xxGp@4|
  002c8		 |$LN6@Tps659xxGp@4|

; 408  :             {
; 409  :             ReadTwlReg(s_rgGpioRegs[bank].GPIODATADIR, &val, sizeof(val));

  002c8	e3a02001	 mov         r2, #1
  002cc	e28d1015	 add         r1, sp, #0x15
  002d0	e59de008	 ldr         lr, [sp, #8]
  002d4	e3a03028	 mov         r3, #0x28
  002d8	e000039e	 mul         r0, lr, r3
  002dc	e59f325c	 ldr         r3, [pc, #0x25C]
  002e0	e0833000	 add         r3, r3, r0
  002e4	e2833004	 add         r3, r3, #4
  002e8	e5930000	 ldr         r0, [r3]
  002ec	eb000000	 bl          |?ReadTwlReg@@YAHKPAEI@Z|

; 410  :             val |= (1 << bit);

  002f0	e59d2010	 ldr         r2, [sp, #0x10]
  002f4	e3a03001	 mov         r3, #1
  002f8	e1a02213	 mov         r2, r3, lsl r2
  002fc	e5dd3015	 ldrb        r3, [sp, #0x15]
  00300	e1833002	 orr         r3, r3, r2
  00304	e20330ff	 and         r3, r3, #0xFF
  00308	e5cd3015	 strb        r3, [sp, #0x15]

; 411  :             WriteTwlReg(s_rgGpioRegs[bank].GPIODATADIR, &val, sizeof(val));

  0030c	e3a02001	 mov         r2, #1
  00310	e28d1015	 add         r1, sp, #0x15
  00314	e59de008	 ldr         lr, [sp, #8]
  00318	e3a03028	 mov         r3, #0x28
  0031c	e000039e	 mul         r0, lr, r3
  00320	e59f3218	 ldr         r3, [pc, #0x218]
  00324	e0833000	 add         r3, r3, r0
  00328	e2833004	 add         r3, r3, #4
  0032c	e5930000	 ldr         r0, [r3]
  00330	eb000000	 bl          |?WriteTwlReg@@YAHKPAEI@Z|
  00334		 |$LN5@Tps659xxGp@4|

; 412  :             }
; 413  : 
; 414  :         // enable debouncing
; 415  :         if ((mode & GPIO_DEBOUNCE_ENABLE) != 0)

  00334	e59d302c	 ldr         r3, [sp, #0x2C]
  00338	e3130020	 tst         r3, #0x20
  0033c	0a00001b	 beq         |$LN4@Tps659xxGp@4|

; 416  :             {
; 417  :             ReadTwlReg(s_rgGpioRegs[bank].GPIO_DEBEN, &val, sizeof(val));

  00340	e3a02001	 mov         r2, #1
  00344	e28d1015	 add         r1, sp, #0x15
  00348	e59de008	 ldr         lr, [sp, #8]
  0034c	e3a03028	 mov         r3, #0x28
  00350	e000039e	 mul         r0, lr, r3
  00354	e59f31e4	 ldr         r3, [pc, #0x1E4]
  00358	e0833000	 add         r3, r3, r0
  0035c	e2833014	 add         r3, r3, #0x14
  00360	e5930000	 ldr         r0, [r3]
  00364	eb000000	 bl          |?ReadTwlReg@@YAHKPAEI@Z|

; 418  :             val |= (1 << bit);

  00368	e59d2010	 ldr         r2, [sp, #0x10]
  0036c	e3a03001	 mov         r3, #1
  00370	e1a02213	 mov         r2, r3, lsl r2
  00374	e5dd3015	 ldrb        r3, [sp, #0x15]
  00378	e1833002	 orr         r3, r3, r2
  0037c	e20330ff	 and         r3, r3, #0xFF
  00380	e5cd3015	 strb        r3, [sp, #0x15]

; 419  :             WriteTwlReg(s_rgGpioRegs[bank].GPIO_DEBEN, &val, sizeof(val));

  00384	e3a02001	 mov         r2, #1
  00388	e28d1015	 add         r1, sp, #0x15
  0038c	e59de008	 ldr         lr, [sp, #8]
  00390	e3a03028	 mov         r3, #0x28
  00394	e000039e	 mul         r0, lr, r3
  00398	e59f31a0	 ldr         r3, [pc, #0x1A0]
  0039c	e0833000	 add         r3, r3, r0
  003a0	e2833014	 add         r3, r3, #0x14
  003a4	e5930000	 ldr         r0, [r3]
  003a8	eb000000	 bl          |?WriteTwlReg@@YAHKPAEI@Z|

; 420  :             }
; 421  :         else

  003ac	ea00001b	 b           |$LN3@Tps659xxGp@4|
  003b0		 |$LN4@Tps659xxGp@4|

; 422  :             {
; 423  :             ReadTwlReg(s_rgGpioRegs[bank].GPIO_DEBEN, &val, sizeof(val));

  003b0	e3a02001	 mov         r2, #1
  003b4	e28d1015	 add         r1, sp, #0x15
  003b8	e59de008	 ldr         lr, [sp, #8]
  003bc	e3a03028	 mov         r3, #0x28
  003c0	e000039e	 mul         r0, lr, r3
  003c4	e59f3174	 ldr         r3, [pc, #0x174]
  003c8	e0833000	 add         r3, r3, r0
  003cc	e2833014	 add         r3, r3, #0x14
  003d0	e5930000	 ldr         r0, [r3]
  003d4	eb000000	 bl          |?ReadTwlReg@@YAHKPAEI@Z|

; 424  :             val &= ~(1 << bit);

  003d8	e59d2010	 ldr         r2, [sp, #0x10]
  003dc	e3a03001	 mov         r3, #1
  003e0	e1a03213	 mov         r3, r3, lsl r2
  003e4	e1e02003	 mvn         r2, r3
  003e8	e5dd3015	 ldrb        r3, [sp, #0x15]
  003ec	e0033002	 and         r3, r3, r2
  003f0	e20330ff	 and         r3, r3, #0xFF
  003f4	e5cd3015	 strb        r3, [sp, #0x15]

; 425  :             WriteTwlReg(s_rgGpioRegs[bank].GPIO_DEBEN, &val, sizeof(val));

  003f8	e3a02001	 mov         r2, #1
  003fc	e28d1015	 add         r1, sp, #0x15
  00400	e59de008	 ldr         lr, [sp, #8]
  00404	e3a03028	 mov         r3, #0x28
  00408	e000039e	 mul         r0, lr, r3
  0040c	e59f312c	 ldr         r3, [pc, #0x12C]
  00410	e0833000	 add         r3, r3, r0
  00414	e2833014	 add         r3, r3, #0x14
  00418	e5930000	 ldr         r0, [r3]
  0041c	eb000000	 bl          |?WriteTwlReg@@YAHKPAEI@Z|
  00420		 |$LN3@Tps659xxGp@4|

; 426  :             }
; 427  : 
; 428  :         // set edge interrupt type
; 429  :         if (mode & GPIO_INT_HIGH_LOW) edgeMode |= DETECT_FALLING;

  00420	e59d302c	 ldr         r3, [sp, #0x2C]
  00424	e3130004	 tst         r3, #4
  00428	0a000003	 beq         |$LN2@Tps659xxGp@4|
  0042c	e5dd3014	 ldrb        r3, [sp, #0x14]
  00430	e3833002	 orr         r3, r3, #2
  00434	e20330ff	 and         r3, r3, #0xFF
  00438	e5cd3014	 strb        r3, [sp, #0x14]
  0043c		 |$LN2@Tps659xxGp@4|

; 430  :         if (mode & GPIO_INT_LOW_HIGH) edgeMode |= DETECT_RISING;

  0043c	e59d302c	 ldr         r3, [sp, #0x2C]
  00440	e3130002	 tst         r3, #2
  00444	0a000003	 beq         |$LN1@Tps659xxGp@4|
  00448	e5dd3014	 ldrb        r3, [sp, #0x14]
  0044c	e3833001	 orr         r3, r3, #1
  00450	e20330ff	 and         r3, r3, #0xFF
  00454	e5cd3014	 strb        r3, [sp, #0x14]
  00458		 |$LN1@Tps659xxGp@4|

; 431  : 
; 432  :         ReadTwlReg(s_rgGpioRegs[bank].rgSubGroup[subGroup].GPIO_EDR, &val, sizeof(val));

  00458	e3a02001	 mov         r2, #1
  0045c	e28d1015	 add         r1, sp, #0x15
  00460	e59de008	 ldr         lr, [sp, #8]
  00464	e3a03028	 mov         r3, #0x28
  00468	e000039e	 mul         r0, lr, r3
  0046c	e59f30cc	 ldr         r3, [pc, #0xCC]
  00470	e0833000	 add         r3, r3, r0
  00474	e283e018	 add         lr, r3, #0x18
  00478	e59d0004	 ldr         r0, [sp, #4]
  0047c	e3a03008	 mov         r3, #8
  00480	e0030390	 mul         r3, r0, r3
  00484	e08e3003	 add         r3, lr, r3
  00488	e2833004	 add         r3, r3, #4
  0048c	e5930000	 ldr         r0, [r3]
  00490	eb000000	 bl          |?ReadTwlReg@@YAHKPAEI@Z|

; 433  :         val &= ~(DETECT_MASK << subIndex);

  00494	e59d200c	 ldr         r2, [sp, #0xC]
  00498	e3a03003	 mov         r3, #3
  0049c	e1a03213	 mov         r3, r3, lsl r2
  004a0	e1e02003	 mvn         r2, r3
  004a4	e5dd3015	 ldrb        r3, [sp, #0x15]
  004a8	e0033002	 and         r3, r3, r2
  004ac	e20330ff	 and         r3, r3, #0xFF
  004b0	e5cd3015	 strb        r3, [sp, #0x15]

; 434  :         val |= (edgeMode << subIndex);

  004b4	e5dd3014	 ldrb        r3, [sp, #0x14]
  004b8	e1a02003	 mov         r2, r3
  004bc	e59d300c	 ldr         r3, [sp, #0xC]
  004c0	e1a02312	 mov         r2, r2, lsl r3
  004c4	e5dd3015	 ldrb        r3, [sp, #0x15]
  004c8	e1833002	 orr         r3, r3, r2
  004cc	e20330ff	 and         r3, r3, #0xFF
  004d0	e5cd3015	 strb        r3, [sp, #0x15]

; 435  :         WriteTwlReg(s_rgGpioRegs[bank].rgSubGroup[subGroup].GPIO_EDR, &val, sizeof(val));

  004d4	e3a02001	 mov         r2, #1
  004d8	e28d1015	 add         r1, sp, #0x15
  004dc	e59de008	 ldr         lr, [sp, #8]
  004e0	e3a03028	 mov         r3, #0x28
  004e4	e000039e	 mul         r0, lr, r3
  004e8	e59f3050	 ldr         r3, [pc, #0x50]
  004ec	e0833000	 add         r3, r3, r0
  004f0	e283e018	 add         lr, r3, #0x18
  004f4	e59d0004	 ldr         r0, [sp, #4]
  004f8	e3a03008	 mov         r3, #8
  004fc	e0030390	 mul         r3, r0, r3
  00500	e08e3003	 add         r3, lr, r3
  00504	e2833004	 add         r3, r3, #4
  00508	e5930000	 ldr         r0, [r3]
  0050c	eb000000	 bl          |?WriteTwlReg@@YAHKPAEI@Z|

; 436  : 
; 437  :         SetGpioBankPowerState(id, D4);

  00510	e3a01004	 mov         r1, #4
  00514	e59d0028	 ldr         r0, [sp, #0x28]
  00518	eb000000	 bl          |?SetGpioBankPowerState@@YAXIW4_CEDEVICE_POWER_STATE@@@Z|

; 438  :         Unlock();

  0051c	eb000000	 bl          |?Unlock@@YAXXZ|

; 439  :         rc = TRUE;

  00520	e3a03001	 mov         r3, #1
  00524	e58d3000	 str         r3, [sp]
  00528		 |$LN7@Tps659xxGp@4|

; 440  :         }
; 441  :     return rc;

  00528	e59d3000	 ldr         r3, [sp]
  0052c	e58d3018	 str         r3, [sp, #0x18]

; 442  : }

  00530	e59d0018	 ldr         r0, [sp, #0x18]
  00534	e28dd01c	 add         sp, sp, #0x1C
  00538	e89d6000	 ldmia       sp, {sp, lr}
  0053c	e12fff1e	 bx          lr
  00540		 |$LN13@Tps659xxGp@4|
  00540		 |$LN14@Tps659xxGp@4|
  00540	00000000	 DCD         |s_rgGpioRegs|
  00544		 |$M37426|

			 ENDP  ; |?Tps659xxGpioSetMode@@YAHPAXII@Z|, Tps659xxGpioSetMode

	IMPORT	|TWLWriteRegs|

  00028			 AREA	 |.pdata|, PDATA
|$T37436| DCD	|$LN7@WriteTwlRe|
	DCD	0x40002104
; Function compile flags: /Odtp

  00544			 AREA	 |.text|, CODE, ARM

  00544		 |?WriteTwlReg@@YAHKPAEI@Z| PROC	; WriteTwlReg

; 238  : {

  00544		 |$LN7@WriteTwlRe|
  00544	e1a0c00d	 mov         r12, sp
  00548	e92d0007	 stmdb       sp!, {r0 - r2}
  0054c	e92d5000	 stmdb       sp!, {r12, lr}
  00550	e24dd010	 sub         sp, sp, #0x10
  00554		 |$M37433|

; 239  :     BOOL rc = FALSE;

  00554	e3a03000	 mov         r3, #0
  00558	e58d3000	 str         r3, [sp]

; 240  : 
; 241  :     // If TWL isn't open, try to open it...
; 242  :     if ((s_hTritonDriver == NULL) && !OpenTwl()) goto cleanUp;

  0055c	e59f3060	 ldr         r3, [pc, #0x60]
  00560	e5933000	 ldr         r3, [r3]
  00564	e3530000	 cmp         r3, #0
  00568	1a000006	 bne         |$LN2@WriteTwlRe|
  0056c	eb000000	 bl          |?OpenTwl@@YAHXZ|
  00570	e58d0008	 str         r0, [sp, #8]
  00574	e59d3008	 ldr         r3, [sp, #8]
  00578	e3530000	 cmp         r3, #0
  0057c	1a000001	 bne         |$LN2@WriteTwlRe|
  00580	ea000009	 b           |$LN1@WriteTwlRe|
  00584	ea000008	 b           |$cleanUp$37216|
  00588		 |$LN2@WriteTwlRe|

; 243  : 
; 244  :     // Call driver
; 245  :     rc = TWLWriteRegs(s_hTritonDriver, address, pdata, dataSize);

  00588	e59d3020	 ldr         r3, [sp, #0x20]
  0058c	e59d201c	 ldr         r2, [sp, #0x1C]
  00590	e59d1018	 ldr         r1, [sp, #0x18]
  00594	e59f0028	 ldr         r0, [pc, #0x28]
  00598	e5900000	 ldr         r0, [r0]
  0059c	eb000000	 bl          TWLWriteRegs
  005a0	e58d000c	 str         r0, [sp, #0xC]
  005a4	e59d300c	 ldr         r3, [sp, #0xC]
  005a8	e58d3000	 str         r3, [sp]
  005ac		 |$LN1@WriteTwlRe|
  005ac		 |$cleanUp$37216|

; 246  : 
; 247  : cleanUp:
; 248  :     return rc;

  005ac	e59d3000	 ldr         r3, [sp]
  005b0	e58d3004	 str         r3, [sp, #4]

; 249  : }

  005b4	e59d0004	 ldr         r0, [sp, #4]
  005b8	e28dd010	 add         sp, sp, #0x10
  005bc	e89d6000	 ldmia       sp, {sp, lr}
  005c0	e12fff1e	 bx          lr
  005c4		 |$LN8@WriteTwlRe|
  005c4		 |$LN9@WriteTwlRe|
  005c4	00000000	 DCD         |s_hTritonDriver|
  005c8		 |$M37434|

			 ENDP  ; |?WriteTwlReg@@YAHKPAEI@Z|, WriteTwlReg

	IMPORT	|TWLOpen|

  00030			 AREA	 |.pdata|, PDATA
|$T37446| DCD	|$LN7@OpenTwl|
	DCD	0x40001702
; Function compile flags: /Odtp

  005c8			 AREA	 |.text|, CODE, ARM

  005c8		 |?OpenTwl@@YAHXZ| PROC			; OpenTwl

; 209  : {

  005c8		 |$LN7@OpenTwl|
  005c8	e52de004	 str         lr, [sp, #-4]!
  005cc	e24dd00c	 sub         sp, sp, #0xC
  005d0		 |$M37443|

; 210  :     // Try open TWL device driver
; 211  :     s_hTritonDriver = TWLOpen();

  005d0	eb000000	 bl          TWLOpen
  005d4	e58d0004	 str         r0, [sp, #4]
  005d8	e59d2004	 ldr         r2, [sp, #4]
  005dc	e59f303c	 ldr         r3, [pc, #0x3C]
  005e0	e5832000	 str         r2, [r3]

; 212  : 
; 213  :     // If we get handle, we succeded
; 214  :     return (s_hTritonDriver != NULL);

  005e4	e59f3034	 ldr         r3, [pc, #0x34]
  005e8	e5933000	 ldr         r3, [r3]
  005ec	e3530000	 cmp         r3, #0
  005f0	0a000002	 beq         |$LN3@OpenTwl|
  005f4	e3a03001	 mov         r3, #1
  005f8	e58d3008	 str         r3, [sp, #8]
  005fc	ea000001	 b           |$LN4@OpenTwl|
  00600		 |$LN3@OpenTwl|
  00600	e3a03000	 mov         r3, #0
  00604	e58d3008	 str         r3, [sp, #8]
  00608		 |$LN4@OpenTwl|
  00608	e59d3008	 ldr         r3, [sp, #8]
  0060c	e58d3000	 str         r3, [sp]

; 215  : }

  00610	e59d0000	 ldr         r0, [sp]
  00614	e28dd00c	 add         sp, sp, #0xC
  00618	e49de004	 ldr         lr, [sp], #4
  0061c	e12fff1e	 bx          lr
  00620		 |$LN8@OpenTwl|
  00620		 |$LN9@OpenTwl|
  00620	00000000	 DCD         |s_hTritonDriver|
  00624		 |$M37444|

			 ENDP  ; |?OpenTwl@@YAHXZ|, OpenTwl

	IMPORT	|TWLReadRegs|

  00038			 AREA	 |.pdata|, PDATA
|$T37454| DCD	|$LN7@ReadTwlReg|
	DCD	0x40002104
; Function compile flags: /Odtp

  00624			 AREA	 |.text|, CODE, ARM

  00624		 |?ReadTwlReg@@YAHKPAEI@Z| PROC		; ReadTwlReg

; 259  : {

  00624		 |$LN7@ReadTwlReg|
  00624	e1a0c00d	 mov         r12, sp
  00628	e92d0007	 stmdb       sp!, {r0 - r2}
  0062c	e92d5000	 stmdb       sp!, {r12, lr}
  00630	e24dd010	 sub         sp, sp, #0x10
  00634		 |$M37451|

; 260  :     BOOL rc = FALSE;

  00634	e3a03000	 mov         r3, #0
  00638	e58d3000	 str         r3, [sp]

; 261  : 
; 262  :     // If TWL isn't open, try to open it...
; 263  :     if ((s_hTritonDriver == NULL) && !OpenTwl()) goto cleanUp;

  0063c	e59f3060	 ldr         r3, [pc, #0x60]
  00640	e5933000	 ldr         r3, [r3]
  00644	e3530000	 cmp         r3, #0
  00648	1a000006	 bne         |$LN2@ReadTwlReg|
  0064c	eb000000	 bl          |?OpenTwl@@YAHXZ|
  00650	e58d0008	 str         r0, [sp, #8]
  00654	e59d3008	 ldr         r3, [sp, #8]
  00658	e3530000	 cmp         r3, #0
  0065c	1a000001	 bne         |$LN2@ReadTwlReg|
  00660	ea000009	 b           |$LN1@ReadTwlReg|
  00664	ea000008	 b           |$cleanUp$37225|
  00668		 |$LN2@ReadTwlReg|

; 264  : 
; 265  :     // Call driver
; 266  :     rc = TWLReadRegs(s_hTritonDriver, address, pdata, dataSize);

  00668	e59d3020	 ldr         r3, [sp, #0x20]
  0066c	e59d201c	 ldr         r2, [sp, #0x1C]
  00670	e59d1018	 ldr         r1, [sp, #0x18]
  00674	e59f0028	 ldr         r0, [pc, #0x28]
  00678	e5900000	 ldr         r0, [r0]
  0067c	eb000000	 bl          TWLReadRegs
  00680	e58d000c	 str         r0, [sp, #0xC]
  00684	e59d300c	 ldr         r3, [sp, #0xC]
  00688	e58d3000	 str         r3, [sp]
  0068c		 |$LN1@ReadTwlReg|
  0068c		 |$cleanUp$37225|

; 267  : 
; 268  : cleanUp:
; 269  :     return rc;

  0068c	e59d3000	 ldr         r3, [sp]
  00690	e58d3004	 str         r3, [sp, #4]

; 270  : }

  00694	e59d0004	 ldr         r0, [sp, #4]
  00698	e28dd010	 add         sp, sp, #0x10
  0069c	e89d6000	 ldmia       sp, {sp, lr}
  006a0	e12fff1e	 bx          lr
  006a4		 |$LN8@ReadTwlReg|
  006a4		 |$LN9@ReadTwlReg|
  006a4	00000000	 DCD         |s_hTritonDriver|
  006a8		 |$M37452|

			 ENDP  ; |?ReadTwlReg@@YAHKPAEI@Z|, ReadTwlReg

	IMPORT	|EnterCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37461| DCD	|$LN6@Lock|
	DCD	0x40000b01
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Lock@@YAXXZ| PROC			; Lock

; 276  : {

  00000		 |$LN6@Lock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37458|

; 277  :     if (g_fGpioPostInit)

  00004	e59f301c	 ldr         r3, [pc, #0x1C]
  00008	e5933000	 ldr         r3, [r3]
  0000c	e3530000	 cmp         r3, #0
  00010	0a000001	 beq         |$LN1@Lock|

; 278  :         EnterCriticalSection(&csGpio);

  00014	e59f0008	 ldr         r0, [pc, #8]
  00018	eb000000	 bl          EnterCriticalSection
  0001c		 |$LN1@Lock|

; 279  : }

  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$LN7@Lock|
  00024		 |$LN8@Lock|
  00024	00000000	 DCD         |?csGpio@@3UCRITICAL_SECTION@@A|
  00028		 |$LN9@Lock|
  00028	00000000	 DCD         |?g_fGpioPostInit@@3HA|
  0002c		 |$M37459|

			 ENDP  ; |?Lock@@YAXXZ|, Lock

	IMPORT	|LeaveCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37471| DCD	|$LN6@Unlock|
	DCD	0x40000b01
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Unlock@@YAXXZ| PROC			; Unlock

; 285  : {

  00000		 |$LN6@Unlock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37468|

; 286  :     if (g_fGpioPostInit)

  00004	e59f301c	 ldr         r3, [pc, #0x1C]
  00008	e5933000	 ldr         r3, [r3]
  0000c	e3530000	 cmp         r3, #0
  00010	0a000001	 beq         |$LN1@Unlock|

; 287  :         LeaveCriticalSection(&csGpio);

  00014	e59f0008	 ldr         r0, [pc, #8]
  00018	eb000000	 bl          LeaveCriticalSection
  0001c		 |$LN1@Unlock|

; 288  : }

  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$LN7@Unlock|
  00024		 |$LN8@Unlock|
  00024	00000000	 DCD         |?csGpio@@3UCRITICAL_SECTION@@A|
  00028		 |$LN9@Unlock|
  00028	00000000	 DCD         |?g_fGpioPostInit@@3HA|
  0002c		 |$M37469|

			 ENDP  ; |?Unlock@@YAXXZ|, Unlock


  00040			 AREA	 |.pdata|, PDATA
|$T37481| DCD	|$LN5@SetGpioBan|
	DCD	0x40000503
; Function compile flags: /Odtp

  006a8			 AREA	 |.text|, CODE, ARM

  006a8		 |?SetGpioBankPowerState@@YAXIW4_CEDEVICE_POWER_STATE@@@Z| PROC ; SetGpioBankPowerState

; 297  : {

  006a8		 |$LN5@SetGpioBan|
  006a8	e1a0c00d	 mov         r12, sp
  006ac	e92d0003	 stmdb       sp!, {r0, r1}
  006b0	e92d5000	 stmdb       sp!, {r12, lr}
  006b4		 |$M37478|

; 298  :     UNREFERENCED_PARAMETER(id);
; 299  :     UNREFERENCED_PARAMETER(state);
; 300  : }

  006b4	e89d6000	 ldmia       sp, {sp, lr}
  006b8	e12fff1e	 bx          lr
  006bc		 |$M37479|

			 ENDP  ; |?SetGpioBankPowerState@@YAXIW4_CEDEVICE_POWER_STATE@@@Z|, SetGpioBankPowerState


  00048			 AREA	 |.pdata|, PDATA
|$T37491| DCD	|$LN12@Tps659xxGp@5|
	DCD	0x40007a04
; Function compile flags: /Odtp

  006bc			 AREA	 |.text|, CODE, ARM

  006bc		 |?Tps659xxGpioGetMode@@YAKPAXI@Z| PROC	; Tps659xxGpioGetMode

; 453  : { 

  006bc		 |$LN12@Tps659xxGp@5|
  006bc	e1a0c00d	 mov         r12, sp
  006c0	e92d0003	 stmdb       sp!, {r0, r1}
  006c4	e92d5000	 stmdb       sp!, {r12, lr}
  006c8	e24dd024	 sub         sp, sp, #0x24
  006cc		 |$M37488|

; 454  :     UINT bit = GPIO_BIT(id);

  006cc	e59d3030	 ldr         r3, [sp, #0x30]
  006d0	e2033007	 and         r3, r3, #7
  006d4	e58d3010	 str         r3, [sp, #0x10]

; 455  :     UINT bank = GPIO_BANK(id);

  006d8	e59d3030	 ldr         r3, [sp, #0x30]
  006dc	e1a031a3	 mov         r3, r3, lsr #3
  006e0	e58d3008	 str         r3, [sp, #8]

; 456  :     UINT subGroup = GPIO_SUBGROUP(id);

  006e4	e59d3030	 ldr         r3, [sp, #0x30]
  006e8	e2033007	 and         r3, r3, #7
  006ec	e1a03123	 mov         r3, r3, lsr #2
  006f0	e58d3004	 str         r3, [sp, #4]

; 457  :     UINT subIndex = GPIO_SUBINDEX(id);

  006f4	e59d3030	 ldr         r3, [sp, #0x30]
  006f8	e2033007	 and         r3, r3, #7
  006fc	e2032003	 and         r2, r3, #3
  00700	e3a03002	 mov         r3, #2
  00704	e0030392	 mul         r3, r2, r3
  00708	e58d300c	 str         r3, [sp, #0xC]

; 458  :     DWORD mode =(DWORD) -1;;

  0070c	e3e03000	 mvn         r3, #0
  00710	e58d3000	 str         r3, [sp]

; 459  : 
; 460  :     UNREFERENCED_PARAMETER(hContext);
; 461  : 
; 462  : 
; 463  :     if (id < TPS659XX_MAX_GPIO_COUNT)

  00714	e59d3030	 ldr         r3, [sp, #0x30]
  00718	e3530012	 cmp         r3, #0x12
  0071c	2a000059	 bcs         |$LN3@Tps659xxGp@5|

; 464  :         {
; 465  :         UINT8 val;
; 466  :         SetGpioBankPowerState(id, D0);

  00720	e3a01000	 mov         r1, #0
  00724	e59d0030	 ldr         r0, [sp, #0x30]
  00728	eb000000	 bl          |?SetGpioBankPowerState@@YAXIW4_CEDEVICE_POWER_STATE@@@Z|

; 467  : 
; 468  :         // get direction
; 469  :         ReadTwlReg(s_rgGpioRegs[bank].GPIODATADIR, &val, sizeof(val));

  0072c	e3a02001	 mov         r2, #1
  00730	e28d1014	 add         r1, sp, #0x14
  00734	e59de008	 ldr         lr, [sp, #8]
  00738	e3a03028	 mov         r3, #0x28
  0073c	e000039e	 mul         r0, lr, r3
  00740	e59f3158	 ldr         r3, [pc, #0x158]
  00744	e0833000	 add         r3, r3, r0
  00748	e2833004	 add         r3, r3, #4
  0074c	e5930000	 ldr         r0, [r3]
  00750	eb000000	 bl          |?ReadTwlReg@@YAHKPAEI@Z|

; 470  :         mode = (val & (1 << bit)) ? GPIO_DIR_OUTPUT : GPIO_DIR_INPUT;

  00754	e5dd3014	 ldrb        r3, [sp, #0x14]
  00758	e1a01003	 mov         r1, r3
  0075c	e59d2010	 ldr         r2, [sp, #0x10]
  00760	e3a03001	 mov         r3, #1
  00764	e1a03213	 mov         r3, r3, lsl r2
  00768	e1110003	 tst         r1, r3
  0076c	0a000002	 beq         |$LN6@Tps659xxGp@5|
  00770	e3a03000	 mov         r3, #0
  00774	e58d301c	 str         r3, [sp, #0x1C]
  00778	ea000001	 b           |$LN7@Tps659xxGp@5|
  0077c		 |$LN6@Tps659xxGp@5|
  0077c	e3a03001	 mov         r3, #1
  00780	e58d301c	 str         r3, [sp, #0x1C]
  00784		 |$LN7@Tps659xxGp@5|
  00784	e59d301c	 ldr         r3, [sp, #0x1C]
  00788	e58d3000	 str         r3, [sp]

; 471  : 
; 472  :         // get debounce state
; 473  :         ReadTwlReg(s_rgGpioRegs[bank].GPIO_DEBEN, &val, sizeof(val));

  0078c	e3a02001	 mov         r2, #1
  00790	e28d1014	 add         r1, sp, #0x14
  00794	e59de008	 ldr         lr, [sp, #8]
  00798	e3a03028	 mov         r3, #0x28
  0079c	e000039e	 mul         r0, lr, r3
  007a0	e59f30f8	 ldr         r3, [pc, #0xF8]
  007a4	e0833000	 add         r3, r3, r0
  007a8	e2833014	 add         r3, r3, #0x14
  007ac	e5930000	 ldr         r0, [r3]
  007b0	eb000000	 bl          |?ReadTwlReg@@YAHKPAEI@Z|

; 474  :         mode |= (val & (1 << bit)) ? GPIO_DEBOUNCE_ENABLE : 0;

  007b4	e5dd3014	 ldrb        r3, [sp, #0x14]
  007b8	e1a01003	 mov         r1, r3
  007bc	e59d2010	 ldr         r2, [sp, #0x10]
  007c0	e3a03001	 mov         r3, #1
  007c4	e1a03213	 mov         r3, r3, lsl r2
  007c8	e1110003	 tst         r1, r3
  007cc	0a000002	 beq         |$LN8@Tps659xxGp@5|
  007d0	e3a03020	 mov         r3, #0x20
  007d4	e58d3020	 str         r3, [sp, #0x20]
  007d8	ea000001	 b           |$LN9@Tps659xxGp@5|
  007dc		 |$LN8@Tps659xxGp@5|
  007dc	e3a03000	 mov         r3, #0
  007e0	e58d3020	 str         r3, [sp, #0x20]
  007e4		 |$LN9@Tps659xxGp@5|
  007e4	e59d2000	 ldr         r2, [sp]
  007e8	e59d3020	 ldr         r3, [sp, #0x20]
  007ec	e1823003	 orr         r3, r2, r3
  007f0	e58d3000	 str         r3, [sp]

; 475  : 
; 476  :         // get edge detection mode
; 477  :         ReadTwlReg(s_rgGpioRegs[bank].rgSubGroup[subGroup].GPIO_EDR, &val, sizeof(val));

  007f4	e3a02001	 mov         r2, #1
  007f8	e28d1014	 add         r1, sp, #0x14
  007fc	e59de008	 ldr         lr, [sp, #8]
  00800	e3a03028	 mov         r3, #0x28
  00804	e000039e	 mul         r0, lr, r3
  00808	e59f3090	 ldr         r3, [pc, #0x90]
  0080c	e0833000	 add         r3, r3, r0
  00810	e283e018	 add         lr, r3, #0x18
  00814	e59d0004	 ldr         r0, [sp, #4]
  00818	e3a03008	 mov         r3, #8
  0081c	e0030390	 mul         r3, r0, r3
  00820	e08e3003	 add         r3, lr, r3
  00824	e2833004	 add         r3, r3, #4
  00828	e5930000	 ldr         r0, [r3]
  0082c	eb000000	 bl          |?ReadTwlReg@@YAHKPAEI@Z|

; 478  :         val = (UINT8) ((val >> subIndex) & DETECT_MASK);

  00830	e5dd3014	 ldrb        r3, [sp, #0x14]
  00834	e1a02003	 mov         r2, r3
  00838	e59d300c	 ldr         r3, [sp, #0xC]
  0083c	e1a03352	 mov         r3, r2, asr r3
  00840	e2033003	 and         r3, r3, #3
  00844	e20330ff	 and         r3, r3, #0xFF
  00848	e5cd3014	 strb        r3, [sp, #0x14]

; 479  : 
; 480  :         if (val & DETECT_FALLING) mode |= GPIO_INT_HIGH_LOW;

  0084c	e5dd3014	 ldrb        r3, [sp, #0x14]
  00850	e3130002	 tst         r3, #2
  00854	0a000002	 beq         |$LN2@Tps659xxGp@5|
  00858	e59d3000	 ldr         r3, [sp]
  0085c	e3833004	 orr         r3, r3, #4
  00860	e58d3000	 str         r3, [sp]
  00864		 |$LN2@Tps659xxGp@5|

; 481  :         if (val & DETECT_RISING) mode |= GPIO_INT_LOW_HIGH;

  00864	e5dd3014	 ldrb        r3, [sp, #0x14]
  00868	e3130001	 tst         r3, #1
  0086c	0a000002	 beq         |$LN1@Tps659xxGp@5|
  00870	e59d3000	 ldr         r3, [sp]
  00874	e3833002	 orr         r3, r3, #2
  00878	e58d3000	 str         r3, [sp]
  0087c		 |$LN1@Tps659xxGp@5|

; 482  : 
; 483  :         SetGpioBankPowerState(id, D4);        

  0087c	e3a01004	 mov         r1, #4
  00880	e59d0030	 ldr         r0, [sp, #0x30]
  00884	eb000000	 bl          |?SetGpioBankPowerState@@YAXIW4_CEDEVICE_POWER_STATE@@@Z|
  00888		 |$LN3@Tps659xxGp@5|

; 484  :         }
; 485  : 
; 486  :     return mode;

  00888	e59d3000	 ldr         r3, [sp]
  0088c	e58d3018	 str         r3, [sp, #0x18]

; 487  : }

  00890	e59d0018	 ldr         r0, [sp, #0x18]
  00894	e28dd024	 add         sp, sp, #0x24
  00898	e89d6000	 ldmia       sp, {sp, lr}
  0089c	e12fff1e	 bx          lr
  008a0		 |$LN13@Tps659xxGp@5|
  008a0		 |$LN14@Tps659xxGp@5|
  008a0	00000000	 DCD         |s_rgGpioRegs|
  008a4		 |$M37489|

			 ENDP  ; |?Tps659xxGpioGetMode@@YAKPAXI@Z|, Tps659xxGpioGetMode


  00050			 AREA	 |.pdata|, PDATA
|$T37499| DCD	|$LN7@Tps659xxGp@6|
	DCD	0x40005904
; Function compile flags: /Odtp

  008a4			 AREA	 |.text|, CODE, ARM

  008a4		 |?Tps659xxGpioPullup@@YAHPAXII@Z| PROC	; Tps659xxGpioPullup

; 501  : {

  008a4		 |$LN7@Tps659xxGp@6|
  008a4	e1a0c00d	 mov         r12, sp
  008a8	e92d0007	 stmdb       sp!, {r0 - r2}
  008ac	e92d5000	 stmdb       sp!, {r12, lr}
  008b0	e24dd01c	 sub         sp, sp, #0x1C
  008b4		 |$M37496|

; 502  :     BOOL rc = FALSE;

  008b4	e3a03000	 mov         r3, #0
  008b8	e58d3000	 str         r3, [sp]

; 503  :     UINT bank = GPIO_BANK(id);

  008bc	e59d3028	 ldr         r3, [sp, #0x28]
  008c0	e1a031a3	 mov         r3, r3, lsr #3
  008c4	e58d3008	 str         r3, [sp, #8]

; 504  :     UINT subGroup = GPIO_SUBGROUP(id);

  008c8	e59d3028	 ldr         r3, [sp, #0x28]
  008cc	e2033007	 and         r3, r3, #7
  008d0	e1a03123	 mov         r3, r3, lsr #2
  008d4	e58d3004	 str         r3, [sp, #4]

; 505  :     UINT subIndex = GPIO_SUBINDEX(id);

  008d8	e59d3028	 ldr         r3, [sp, #0x28]
  008dc	e2033007	 and         r3, r3, #7
  008e0	e2032003	 and         r2, r3, #3
  008e4	e3a03002	 mov         r3, #2
  008e8	e0030392	 mul         r3, r2, r3
  008ec	e58d300c	 str         r3, [sp, #0xC]

; 506  : 
; 507  :     UNREFERENCED_PARAMETER(context);
; 508  : 
; 509  :     if (id < TPS659XX_MAX_GPIO_COUNT)

  008f0	e59d3028	 ldr         r3, [sp, #0x28]
  008f4	e3530012	 cmp         r3, #0x12
  008f8	2a00003b	 bcs         |$LN2@Tps659xxGp@6|

; 510  :         {
; 511  :         UINT8 val;
; 512  :         UINT pullupState = 0;

  008fc	e3a03000	 mov         r3, #0
  00900	e58d3014	 str         r3, [sp, #0x14]

; 513  : 
; 514  :         Lock();

  00904	eb000000	 bl          |?Lock@@YAXXZ|

; 515  :         SetGpioBankPowerState(id, D0);

  00908	e3a01000	 mov         r1, #0
  0090c	e59d0028	 ldr         r0, [sp, #0x28]
  00910	eb000000	 bl          |?SetGpioBankPowerState@@YAXIW4_CEDEVICE_POWER_STATE@@@Z|

; 516  : 
; 517  :         // set pullup state
; 518  :         if (enable) pullupState = PULLUP_ENABLE;

  00914	e59d302c	 ldr         r3, [sp, #0x2C]
  00918	e3530000	 cmp         r3, #0
  0091c	0a000001	 beq         |$LN1@Tps659xxGp@6|
  00920	e3a03002	 mov         r3, #2
  00924	e58d3014	 str         r3, [sp, #0x14]
  00928		 |$LN1@Tps659xxGp@6|

; 519  : 
; 520  :         ReadTwlReg(s_rgGpioRegs[bank].rgSubGroup[subGroup].GPIOPUPDCTR, &val, sizeof(val));

  00928	e3a02001	 mov         r2, #1
  0092c	e28d1010	 add         r1, sp, #0x10
  00930	e59de008	 ldr         lr, [sp, #8]
  00934	e3a03028	 mov         r3, #0x28
  00938	e000039e	 mul         r0, lr, r3
  0093c	e59f30c0	 ldr         r3, [pc, #0xC0]
  00940	e0833000	 add         r3, r3, r0
  00944	e283e018	 add         lr, r3, #0x18
  00948	e59d0004	 ldr         r0, [sp, #4]
  0094c	e3a03008	 mov         r3, #8
  00950	e0030390	 mul         r3, r0, r3
  00954	e08e3003	 add         r3, lr, r3
  00958	e5930000	 ldr         r0, [r3]
  0095c	eb000000	 bl          |?ReadTwlReg@@YAHKPAEI@Z|

; 521  :         val &= ~(PULLUP_ENABLE << subIndex);

  00960	e59d200c	 ldr         r2, [sp, #0xC]
  00964	e3a03002	 mov         r3, #2
  00968	e1a03213	 mov         r3, r3, lsl r2
  0096c	e1e02003	 mvn         r2, r3
  00970	e5dd3010	 ldrb        r3, [sp, #0x10]
  00974	e0033002	 and         r3, r3, r2
  00978	e20330ff	 and         r3, r3, #0xFF
  0097c	e5cd3010	 strb        r3, [sp, #0x10]

; 522  :         val |= (pullupState << subIndex);

  00980	e59d2014	 ldr         r2, [sp, #0x14]
  00984	e59d300c	 ldr         r3, [sp, #0xC]
  00988	e1a02312	 mov         r2, r2, lsl r3
  0098c	e5dd3010	 ldrb        r3, [sp, #0x10]
  00990	e1833002	 orr         r3, r3, r2
  00994	e20330ff	 and         r3, r3, #0xFF
  00998	e5cd3010	 strb        r3, [sp, #0x10]

; 523  :         WriteTwlReg(s_rgGpioRegs[bank].rgSubGroup[subGroup].GPIOPUPDCTR, &val, sizeof(val));

  0099c	e3a02001	 mov         r2, #1
  009a0	e28d1010	 add         r1, sp, #0x10
  009a4	e59de008	 ldr         lr, [sp, #8]
  009a8	e3a03028	 mov         r3, #0x28
  009ac	e000039e	 mul         r0, lr, r3
  009b0	e59f304c	 ldr         r3, [pc, #0x4C]
  009b4	e0833000	 add         r3, r3, r0
  009b8	e283e018	 add         lr, r3, #0x18
  009bc	e59d0004	 ldr         r0, [sp, #4]
  009c0	e3a03008	 mov         r3, #8
  009c4	e0030390	 mul         r3, r0, r3
  009c8	e08e3003	 add         r3, lr, r3
  009cc	e5930000	 ldr         r0, [r3]
  009d0	eb000000	 bl          |?WriteTwlReg@@YAHKPAEI@Z|

; 524  : 
; 525  :         SetGpioBankPowerState(id, D4);

  009d4	e3a01004	 mov         r1, #4
  009d8	e59d0028	 ldr         r0, [sp, #0x28]
  009dc	eb000000	 bl          |?SetGpioBankPowerState@@YAXIW4_CEDEVICE_POWER_STATE@@@Z|

; 526  :         Unlock();

  009e0	eb000000	 bl          |?Unlock@@YAXXZ|

; 527  :         rc = TRUE;

  009e4	e3a03001	 mov         r3, #1
  009e8	e58d3000	 str         r3, [sp]
  009ec		 |$LN2@Tps659xxGp@6|

; 528  :         }
; 529  : 
; 530  :     return rc;

  009ec	e59d3000	 ldr         r3, [sp]
  009f0	e58d3018	 str         r3, [sp, #0x18]

; 531  : }

  009f4	e59d0018	 ldr         r0, [sp, #0x18]
  009f8	e28dd01c	 add         sp, sp, #0x1C
  009fc	e89d6000	 ldmia       sp, {sp, lr}
  00a00	e12fff1e	 bx          lr
  00a04		 |$LN8@Tps659xxGp@6|
  00a04		 |$LN9@Tps659xxGp@6|
  00a04	00000000	 DCD         |s_rgGpioRegs|
  00a08		 |$M37497|

			 ENDP  ; |?Tps659xxGpioPullup@@YAHPAXII@Z|, Tps659xxGpioPullup


  00058			 AREA	 |.pdata|, PDATA
|$T37507| DCD	|$LN7@Tps659xxGp@7|
	DCD	0x40005904
; Function compile flags: /Odtp

  00a08			 AREA	 |.text|, CODE, ARM

  00a08		 |?Tps659xxGpioPulldown@@YAHPAXII@Z| PROC ; Tps659xxGpioPulldown

; 544  : {

  00a08		 |$LN7@Tps659xxGp@7|
  00a08	e1a0c00d	 mov         r12, sp
  00a0c	e92d0007	 stmdb       sp!, {r0 - r2}
  00a10	e92d5000	 stmdb       sp!, {r12, lr}
  00a14	e24dd01c	 sub         sp, sp, #0x1C
  00a18		 |$M37504|

; 545  :     BOOL rc = FALSE;

  00a18	e3a03000	 mov         r3, #0
  00a1c	e58d3000	 str         r3, [sp]

; 546  :     UINT bank = GPIO_BANK(id);

  00a20	e59d3028	 ldr         r3, [sp, #0x28]
  00a24	e1a031a3	 mov         r3, r3, lsr #3
  00a28	e58d3008	 str         r3, [sp, #8]

; 547  :     UINT subGroup = GPIO_SUBGROUP(id);

  00a2c	e59d3028	 ldr         r3, [sp, #0x28]
  00a30	e2033007	 and         r3, r3, #7
  00a34	e1a03123	 mov         r3, r3, lsr #2
  00a38	e58d3004	 str         r3, [sp, #4]

; 548  :     UINT subIndex = GPIO_SUBINDEX(id);

  00a3c	e59d3028	 ldr         r3, [sp, #0x28]
  00a40	e2033007	 and         r3, r3, #7
  00a44	e2032003	 and         r2, r3, #3
  00a48	e3a03002	 mov         r3, #2
  00a4c	e0030392	 mul         r3, r2, r3
  00a50	e58d300c	 str         r3, [sp, #0xC]

; 549  : 
; 550  :     UNREFERENCED_PARAMETER(context);
; 551  : 
; 552  :     if (id < TPS659XX_MAX_GPIO_COUNT)

  00a54	e59d3028	 ldr         r3, [sp, #0x28]
  00a58	e3530012	 cmp         r3, #0x12
  00a5c	2a00003b	 bcs         |$LN2@Tps659xxGp@7|

; 553  :         {
; 554  :         UINT8 val;
; 555  :         UINT pulldownState = 0;

  00a60	e3a03000	 mov         r3, #0
  00a64	e58d3010	 str         r3, [sp, #0x10]

; 556  : 
; 557  :         Lock();

  00a68	eb000000	 bl          |?Lock@@YAXXZ|

; 558  :         SetGpioBankPowerState(id, D0);

  00a6c	e3a01000	 mov         r1, #0
  00a70	e59d0028	 ldr         r0, [sp, #0x28]
  00a74	eb000000	 bl          |?SetGpioBankPowerState@@YAXIW4_CEDEVICE_POWER_STATE@@@Z|

; 559  : 
; 560  :         // set pullup state
; 561  :         if (enable) pulldownState = PULLDOWN_ENABLE;

  00a78	e59d302c	 ldr         r3, [sp, #0x2C]
  00a7c	e3530000	 cmp         r3, #0
  00a80	0a000001	 beq         |$LN1@Tps659xxGp@7|
  00a84	e3a03001	 mov         r3, #1
  00a88	e58d3010	 str         r3, [sp, #0x10]
  00a8c		 |$LN1@Tps659xxGp@7|

; 562  : 
; 563  :         ReadTwlReg(s_rgGpioRegs[bank].rgSubGroup[subGroup].GPIOPUPDCTR, &val, sizeof(val));

  00a8c	e3a02001	 mov         r2, #1
  00a90	e28d1014	 add         r1, sp, #0x14
  00a94	e59de008	 ldr         lr, [sp, #8]
  00a98	e3a03028	 mov         r3, #0x28
  00a9c	e000039e	 mul         r0, lr, r3
  00aa0	e59f30c0	 ldr         r3, [pc, #0xC0]
  00aa4	e0833000	 add         r3, r3, r0
  00aa8	e283e018	 add         lr, r3, #0x18
  00aac	e59d0004	 ldr         r0, [sp, #4]
  00ab0	e3a03008	 mov         r3, #8
  00ab4	e0030390	 mul         r3, r0, r3
  00ab8	e08e3003	 add         r3, lr, r3
  00abc	e5930000	 ldr         r0, [r3]
  00ac0	eb000000	 bl          |?ReadTwlReg@@YAHKPAEI@Z|

; 564  :         val &= ~(PULLDOWN_ENABLE << subIndex);

  00ac4	e59d200c	 ldr         r2, [sp, #0xC]
  00ac8	e3a03001	 mov         r3, #1
  00acc	e1a03213	 mov         r3, r3, lsl r2
  00ad0	e1e02003	 mvn         r2, r3
  00ad4	e5dd3014	 ldrb        r3, [sp, #0x14]
  00ad8	e0033002	 and         r3, r3, r2
  00adc	e20330ff	 and         r3, r3, #0xFF
  00ae0	e5cd3014	 strb        r3, [sp, #0x14]

; 565  :         val |= (pulldownState << subIndex);

  00ae4	e59d2010	 ldr         r2, [sp, #0x10]
  00ae8	e59d300c	 ldr         r3, [sp, #0xC]
  00aec	e1a02312	 mov         r2, r2, lsl r3
  00af0	e5dd3014	 ldrb        r3, [sp, #0x14]
  00af4	e1833002	 orr         r3, r3, r2
  00af8	e20330ff	 and         r3, r3, #0xFF
  00afc	e5cd3014	 strb        r3, [sp, #0x14]

; 566  :         WriteTwlReg(s_rgGpioRegs[bank].rgSubGroup[subGroup].GPIOPUPDCTR, &val, sizeof(val));

  00b00	e3a02001	 mov         r2, #1
  00b04	e28d1014	 add         r1, sp, #0x14
  00b08	e59de008	 ldr         lr, [sp, #8]
  00b0c	e3a03028	 mov         r3, #0x28
  00b10	e000039e	 mul         r0, lr, r3
  00b14	e59f304c	 ldr         r3, [pc, #0x4C]
  00b18	e0833000	 add         r3, r3, r0
  00b1c	e283e018	 add         lr, r3, #0x18
  00b20	e59d0004	 ldr         r0, [sp, #4]
  00b24	e3a03008	 mov         r3, #8
  00b28	e0030390	 mul         r3, r0, r3
  00b2c	e08e3003	 add         r3, lr, r3
  00b30	e5930000	 ldr         r0, [r3]
  00b34	eb000000	 bl          |?WriteTwlReg@@YAHKPAEI@Z|

; 567  : 
; 568  :         SetGpioBankPowerState(id, D4);

  00b38	e3a01004	 mov         r1, #4
  00b3c	e59d0028	 ldr         r0, [sp, #0x28]
  00b40	eb000000	 bl          |?SetGpioBankPowerState@@YAXIW4_CEDEVICE_POWER_STATE@@@Z|

; 569  :         Unlock();

  00b44	eb000000	 bl          |?Unlock@@YAXXZ|

; 570  :         rc = TRUE;

  00b48	e3a03001	 mov         r3, #1
  00b4c	e58d3000	 str         r3, [sp]
  00b50		 |$LN2@Tps659xxGp@7|

; 571  :         }
; 572  : 
; 573  :     return rc;

  00b50	e59d3000	 ldr         r3, [sp]
  00b54	e58d3018	 str         r3, [sp, #0x18]

; 574  : }

  00b58	e59d0018	 ldr         r0, [sp, #0x18]
  00b5c	e28dd01c	 add         sp, sp, #0x1C
  00b60	e89d6000	 ldmia       sp, {sp, lr}
  00b64	e12fff1e	 bx          lr
  00b68		 |$LN8@Tps659xxGp@7|
  00b68		 |$LN9@Tps659xxGp@7|
  00b68	00000000	 DCD         |s_rgGpioRegs|
  00b6c		 |$M37505|

			 ENDP  ; |?Tps659xxGpioPulldown@@YAHPAXII@Z|, Tps659xxGpioPulldown


  00060			 AREA	 |.pdata|, PDATA
|$T37515| DCD	|$LN6@Tps659xxGp@8|
	DCD	0x40002d04
; Function compile flags: /Odtp

  00b6c			 AREA	 |.text|, CODE, ARM

  00b6c		 |?Tps659xxGpioSetBit@@YAHPAXI@Z| PROC	; Tps659xxGpioSetBit

; 728  : {

  00b6c		 |$LN6@Tps659xxGp@8|
  00b6c	e1a0c00d	 mov         r12, sp
  00b70	e92d0003	 stmdb       sp!, {r0, r1}
  00b74	e92d5000	 stmdb       sp!, {r12, lr}
  00b78	e24dd014	 sub         sp, sp, #0x14
  00b7c		 |$M37512|

; 729  :     BOOL rc = FALSE;

  00b7c	e3a03000	 mov         r3, #0
  00b80	e58d3000	 str         r3, [sp]

; 730  :     UINT bit = GPIO_BIT(id);

  00b84	e59d3020	 ldr         r3, [sp, #0x20]
  00b88	e2033007	 and         r3, r3, #7
  00b8c	e58d3008	 str         r3, [sp, #8]

; 731  :     UINT bank = GPIO_BANK(id);

  00b90	e59d3020	 ldr         r3, [sp, #0x20]
  00b94	e1a031a3	 mov         r3, r3, lsr #3
  00b98	e58d3004	 str         r3, [sp, #4]

; 732  : 
; 733  :     UNREFERENCED_PARAMETER(context);
; 734  : 
; 735  : //    RETAILMSG(1,(TEXT("+Tps659xxGpioSetBit %d\r\n"),id));
; 736  :     if (id < TPS659XX_MAX_GPIO_COUNT)

  00b9c	e59d3020	 ldr         r3, [sp, #0x20]
  00ba0	e3530012	 cmp         r3, #0x12
  00ba4	2a000016	 bcs         |$LN1@Tps659xxGp@8|

; 737  :         {
; 738  :         UINT8 val;
; 739  : 
; 740  :         SetGpioBankPowerState(id, D0);

  00ba8	e3a01000	 mov         r1, #0
  00bac	e59d0020	 ldr         r0, [sp, #0x20]
  00bb0	eb000000	 bl          |?SetGpioBankPowerState@@YAXIW4_CEDEVICE_POWER_STATE@@@Z|

; 741  :         val = (UINT8) ((1 << bit));

  00bb4	e59d2008	 ldr         r2, [sp, #8]
  00bb8	e3a03001	 mov         r3, #1
  00bbc	e1a03213	 mov         r3, r3, lsl r2
  00bc0	e20330ff	 and         r3, r3, #0xFF
  00bc4	e5cd300c	 strb        r3, [sp, #0xC]

; 742  :         WriteTwlReg(s_rgGpioRegs[bank].SETGPIODATAOUT, &val, sizeof(val));

  00bc8	e3a02001	 mov         r2, #1
  00bcc	e28d100c	 add         r1, sp, #0xC
  00bd0	e59de004	 ldr         lr, [sp, #4]
  00bd4	e3a03028	 mov         r3, #0x28
  00bd8	e000039e	 mul         r0, lr, r3
  00bdc	e59f3038	 ldr         r3, [pc, #0x38]
  00be0	e0833000	 add         r3, r3, r0
  00be4	e2833010	 add         r3, r3, #0x10
  00be8	e5930000	 ldr         r0, [r3]
  00bec	eb000000	 bl          |?WriteTwlReg@@YAHKPAEI@Z|

; 743  :         SetGpioBankPowerState(id, D4);

  00bf0	e3a01004	 mov         r1, #4
  00bf4	e59d0020	 ldr         r0, [sp, #0x20]
  00bf8	eb000000	 bl          |?SetGpioBankPowerState@@YAXIW4_CEDEVICE_POWER_STATE@@@Z|

; 744  :         rc = TRUE;

  00bfc	e3a03001	 mov         r3, #1
  00c00	e58d3000	 str         r3, [sp]
  00c04		 |$LN1@Tps659xxGp@8|

; 745  :         }
; 746  :     return rc;

  00c04	e59d3000	 ldr         r3, [sp]
  00c08	e58d3010	 str         r3, [sp, #0x10]

; 747  : }

  00c0c	e59d0010	 ldr         r0, [sp, #0x10]
  00c10	e28dd014	 add         sp, sp, #0x14
  00c14	e89d6000	 ldmia       sp, {sp, lr}
  00c18	e12fff1e	 bx          lr
  00c1c		 |$LN7@Tps659xxGp@8|
  00c1c		 |$LN8@Tps659xxGp@8|
  00c1c	00000000	 DCD         |s_rgGpioRegs|
  00c20		 |$M37513|

			 ENDP  ; |?Tps659xxGpioSetBit@@YAHPAXI@Z|, Tps659xxGpioSetBit


  00068			 AREA	 |.pdata|, PDATA
|$T37523| DCD	|$LN6@Tps659xxGp@9|
	DCD	0x40002d04
; Function compile flags: /Odtp

  00c20			 AREA	 |.text|, CODE, ARM

  00c20		 |?Tps659xxGpioClrBit@@YAHPAXI@Z| PROC	; Tps659xxGpioClrBit

; 761  : {

  00c20		 |$LN6@Tps659xxGp@9|
  00c20	e1a0c00d	 mov         r12, sp
  00c24	e92d0003	 stmdb       sp!, {r0, r1}
  00c28	e92d5000	 stmdb       sp!, {r12, lr}
  00c2c	e24dd014	 sub         sp, sp, #0x14
  00c30		 |$M37520|

; 762  :     BOOL rc = FALSE;

  00c30	e3a03000	 mov         r3, #0
  00c34	e58d3000	 str         r3, [sp]

; 763  :     UINT bit = GPIO_BIT(id);

  00c38	e59d3020	 ldr         r3, [sp, #0x20]
  00c3c	e2033007	 and         r3, r3, #7
  00c40	e58d3008	 str         r3, [sp, #8]

; 764  :     UINT bank = GPIO_BANK(id);

  00c44	e59d3020	 ldr         r3, [sp, #0x20]
  00c48	e1a031a3	 mov         r3, r3, lsr #3
  00c4c	e58d3004	 str         r3, [sp, #4]

; 765  : 
; 766  :     UNREFERENCED_PARAMETER(context);
; 767  : 
; 768  :     if (id < TPS659XX_MAX_GPIO_COUNT)

  00c50	e59d3020	 ldr         r3, [sp, #0x20]
  00c54	e3530012	 cmp         r3, #0x12
  00c58	2a000016	 bcs         |$LN1@Tps659xxGp@9|

; 769  :         {
; 770  :         UINT8 val;
; 771  : 
; 772  :         SetGpioBankPowerState(id, D0);

  00c5c	e3a01000	 mov         r1, #0
  00c60	e59d0020	 ldr         r0, [sp, #0x20]
  00c64	eb000000	 bl          |?SetGpioBankPowerState@@YAXIW4_CEDEVICE_POWER_STATE@@@Z|

; 773  :         val = (UINT8) ((1 << bit));

  00c68	e59d2008	 ldr         r2, [sp, #8]
  00c6c	e3a03001	 mov         r3, #1
  00c70	e1a03213	 mov         r3, r3, lsl r2
  00c74	e20330ff	 and         r3, r3, #0xFF
  00c78	e5cd300c	 strb        r3, [sp, #0xC]

; 774  :         WriteTwlReg(s_rgGpioRegs[bank].CLEARGPIODATAOUT, &val, sizeof(val));

  00c7c	e3a02001	 mov         r2, #1
  00c80	e28d100c	 add         r1, sp, #0xC
  00c84	e59de004	 ldr         lr, [sp, #4]
  00c88	e3a03028	 mov         r3, #0x28
  00c8c	e000039e	 mul         r0, lr, r3
  00c90	e59f3038	 ldr         r3, [pc, #0x38]
  00c94	e0833000	 add         r3, r3, r0
  00c98	e283300c	 add         r3, r3, #0xC
  00c9c	e5930000	 ldr         r0, [r3]
  00ca0	eb000000	 bl          |?WriteTwlReg@@YAHKPAEI@Z|

; 775  :         SetGpioBankPowerState(id, D4);

  00ca4	e3a01004	 mov         r1, #4
  00ca8	e59d0020	 ldr         r0, [sp, #0x20]
  00cac	eb000000	 bl          |?SetGpioBankPowerState@@YAXIW4_CEDEVICE_POWER_STATE@@@Z|

; 776  :         rc = TRUE;

  00cb0	e3a03001	 mov         r3, #1
  00cb4	e58d3000	 str         r3, [sp]
  00cb8		 |$LN1@Tps659xxGp@9|

; 777  :         }
; 778  : 
; 779  :     return rc;

  00cb8	e59d3000	 ldr         r3, [sp]
  00cbc	e58d3010	 str         r3, [sp, #0x10]

; 780  : }

  00cc0	e59d0010	 ldr         r0, [sp, #0x10]
  00cc4	e28dd014	 add         sp, sp, #0x14
  00cc8	e89d6000	 ldmia       sp, {sp, lr}
  00ccc	e12fff1e	 bx          lr
  00cd0		 |$LN7@Tps659xxGp@9|
  00cd0		 |$LN8@Tps659xxGp@9|
  00cd0	00000000	 DCD         |s_rgGpioRegs|
  00cd4		 |$M37521|

			 ENDP  ; |?Tps659xxGpioClrBit@@YAHPAXI@Z|, Tps659xxGpioClrBit


  00070			 AREA	 |.pdata|, PDATA
|$T37533| DCD	|$LN8@Tps659xxGp@10|
	DCD	0x40003304
; Function compile flags: /Odtp

  00cd4			 AREA	 |.text|, CODE, ARM

  00cd4		 |?Tps659xxGpioGetBit@@YAKPAXI@Z| PROC	; Tps659xxGpioGetBit

; 791  : {    

  00cd4		 |$LN8@Tps659xxGp@10|
  00cd4	e1a0c00d	 mov         r12, sp
  00cd8	e92d0003	 stmdb       sp!, {r0, r1}
  00cdc	e92d5000	 stmdb       sp!, {r12, lr}
  00ce0	e24dd018	 sub         sp, sp, #0x18
  00ce4		 |$M37530|

; 792  :     DWORD value = (DWORD) -1;

  00ce4	e3e03000	 mvn         r3, #0
  00ce8	e58d3000	 str         r3, [sp]

; 793  :     UINT bit = GPIO_BIT(id);

  00cec	e59d3024	 ldr         r3, [sp, #0x24]
  00cf0	e2033007	 and         r3, r3, #7
  00cf4	e58d3008	 str         r3, [sp, #8]

; 794  :     UINT bank = GPIO_BANK(id);

  00cf8	e59d3024	 ldr         r3, [sp, #0x24]
  00cfc	e1a031a3	 mov         r3, r3, lsr #3
  00d00	e58d3004	 str         r3, [sp, #4]

; 795  : 
; 796  :     UNREFERENCED_PARAMETER(context);
; 797  :     if (id < TPS659XX_MAX_GPIO_COUNT)

  00d04	e59d3024	 ldr         r3, [sp, #0x24]
  00d08	e3530012	 cmp         r3, #0x12
  00d0c	2a00001c	 bcs         |$LN1@Tps659xxGp@10|

; 798  :         {
; 799  :         UINT8 val;
; 800  :         SetGpioBankPowerState(id, D0);

  00d10	e3a01000	 mov         r1, #0
  00d14	e59d0024	 ldr         r0, [sp, #0x24]
  00d18	eb000000	 bl          |?SetGpioBankPowerState@@YAXIW4_CEDEVICE_POWER_STATE@@@Z|

; 801  :         ReadTwlReg(s_rgGpioRegs[bank].GPIODATAIN, &val, sizeof(val));

  00d1c	e3a02001	 mov         r2, #1
  00d20	e28d100c	 add         r1, sp, #0xC
  00d24	e59de004	 ldr         lr, [sp, #4]
  00d28	e3a03028	 mov         r3, #0x28
  00d2c	e000039e	 mul         r0, lr, r3
  00d30	e59f3064	 ldr         r3, [pc, #0x64]
  00d34	e0833000	 add         r3, r3, r0
  00d38	e5930000	 ldr         r0, [r3]
  00d3c	eb000000	 bl          |?ReadTwlReg@@YAHKPAEI@Z|

; 802  :         value = (val & (1 << bit)) ? 1 : 0;

  00d40	e5dd300c	 ldrb        r3, [sp, #0xC]
  00d44	e1a01003	 mov         r1, r3
  00d48	e59d2008	 ldr         r2, [sp, #8]
  00d4c	e3a03001	 mov         r3, #1
  00d50	e1a03213	 mov         r3, r3, lsl r2
  00d54	e1110003	 tst         r1, r3
  00d58	0a000002	 beq         |$LN4@Tps659xxGp@10|
  00d5c	e3a03001	 mov         r3, #1
  00d60	e58d3014	 str         r3, [sp, #0x14]
  00d64	ea000001	 b           |$LN5@Tps659xxGp@10|
  00d68		 |$LN4@Tps659xxGp@10|
  00d68	e3a03000	 mov         r3, #0
  00d6c	e58d3014	 str         r3, [sp, #0x14]
  00d70		 |$LN5@Tps659xxGp@10|
  00d70	e59d3014	 ldr         r3, [sp, #0x14]
  00d74	e58d3000	 str         r3, [sp]

; 803  :         SetGpioBankPowerState(id, D4);        

  00d78	e3a01004	 mov         r1, #4
  00d7c	e59d0024	 ldr         r0, [sp, #0x24]
  00d80	eb000000	 bl          |?SetGpioBankPowerState@@YAXIW4_CEDEVICE_POWER_STATE@@@Z|
  00d84		 |$LN1@Tps659xxGp@10|

; 804  :         }
; 805  : 
; 806  :     return value;

  00d84	e59d3000	 ldr         r3, [sp]
  00d88	e58d3010	 str         r3, [sp, #0x10]

; 807  : }

  00d8c	e59d0010	 ldr         r0, [sp, #0x10]
  00d90	e28dd018	 add         sp, sp, #0x18
  00d94	e89d6000	 ldmia       sp, {sp, lr}
  00d98	e12fff1e	 bx          lr
  00d9c		 |$LN9@Tps659xxGp@10|
  00d9c		 |$LN10@Tps659xxGp@10|
  00d9c	00000000	 DCD         |s_rgGpioRegs|
  00da0		 |$M37531|

			 ENDP  ; |?Tps659xxGpioGetBit@@YAKPAXI@Z|, Tps659xxGpioGetBit


  00078			 AREA	 |.pdata|, PDATA
|$T37541| DCD	|$LN5@Tps659xxGp@11|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00da0			 AREA	 |.text|, CODE, ARM

  00da0		 |?Tps659xxGpioIoControl@@YAHPAXIPAEI1IPAK@Z| PROC ; Tps659xxGpioIoControl

; 825  : {

  00da0		 |$LN5@Tps659xxGp@11|
  00da0	e1a0c00d	 mov         r12, sp
  00da4	e92d000f	 stmdb       sp!, {r0 - r3}
  00da8	e92d5000	 stmdb       sp!, {r12, lr}
  00dac	e24dd004	 sub         sp, sp, #4
  00db0		 |$M37538|

; 826  : #ifdef DEVICE
; 827  :     UINT id;
; 828  :     DWORD value,mode;
; 829  :     DEVICE_IFC_GPIO ifc;
; 830  :     BOOL rc = FALSE;
; 831  : //    Tps659xxGpioDevice_t *pDevice = (Tps659xxGpioDevice_t*)context;
; 832  : 
; 833  :     UNREFERENCED_PARAMETER(pOutSize);
; 834  : 
; 835  :     DEBUGMSG(ZONE_FUNCTION, (
; 836  :         L"+Tps659xxGpioIOControl(0x%08x, 0x%08x, 0x%08x, %d, 0x%08x, %d, 0x%08x)\r\n",
; 837  :         context, code, pInBuffer, inSize, pOutBuffer, outSize, pOutSize
; 838  :         ));
; 839  : 
; 840  :     // Check if we get correct context
; 841  :     /*if ((pDevice == NULL) || (pDevice->cookie != GPIO_DEVICE_COOKIE))
; 842  :     {
; 843  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: Tps659xxGpioIOControl: "
; 844  :             L"Incorrect context parameter\r\n"
; 845  :             ));
; 846  :         goto cleanUp;
; 847  :     }*/
; 848  :     switch (code)
; 849  :     {
; 850  :     case IOCTL_DDK_GET_DRIVER_IFC:
; 851  :         // We can give interface only to our peer in device process
; 852  :         if (GetCurrentProcessId() != (DWORD)GetCallerProcess())
; 853  :         {
; 854  :             DEBUGMSG(ZONE_ERROR, (L"ERROR: GIO_IOControl: "
; 855  :                 L"IOCTL_DDK_GET_DRIVER_IFC can be called only from "
; 856  :                 L"device process (caller process id 0x%08x)\r\n",
; 857  :                 GetCurrentProcessId()
; 858  :                 ));
; 859  :             SetLastError(ERROR_ACCESS_DENIED);
; 860  :             goto cleanUp;
; 861  :         }
; 862  :         if ((pInBuffer == NULL) || (inSize < sizeof(GUID)))
; 863  :         {
; 864  :             SetLastError(ERROR_INVALID_PARAMETER);
; 865  :             break;
; 866  :         }
; 867  :         if (IsEqualGUID(*(GUID*)pInBuffer, DEVICE_IFC_GPIO_GUID))
; 868  :         {
; 869  :             if (pOutSize != NULL) *pOutSize = sizeof(DEVICE_IFC_GPIO);
; 870  :             if ((pOutBuffer == NULL) || (outSize < sizeof(DEVICE_IFC_GPIO)))
; 871  :             {
; 872  :                 SetLastError(ERROR_INVALID_PARAMETER);
; 873  :                 break;
; 874  :             }
; 875  :             ifc.context                 = context;
; 876  :             ifc.pfnSetBit               = Tps659xxGpioSetBit;
; 877  :             ifc.pfnClrBit               = Tps659xxGpioClrBit;
; 878  :             ifc.pfnGetBit               = Tps659xxGpioGetBit;
; 879  :             ifc.pfnSetMode              = Tps659xxGpioSetMode;
; 880  :             ifc.pfnGetMode              = Tps659xxGpioGetMode;
; 881  :             ifc.pfnPullup               = Tps659xxGpioPullup;
; 882  :             ifc.pfnPulldown             = Tps659xxGpioPulldown;
; 883  :             ifc.pfnInterruptInitialize  = Tps659xxGpioInterruptInitialize;
; 884  :             ifc.pfnInterruptMask        = Tps659xxGpioInterruptMask;
; 885  :             ifc.pfnInterruptDisable     = Tps659xxGpioInterruptDisable;
; 886  :             ifc.pfnInterruptDone        = Tps659xxGpioInterruptDone;
; 887  : 			ifc.pfnGetSystemIrq			= NULL;
; 888  :             ifc.pfnInterruptWakeUp      = Tps659xxGpioWakeEnable;
; 889  :             ifc.pfnIoControl            = Tps659xxGpioIoControl;
; 890  : 
; 891  :             if (!CeSafeCopyMemory(pOutBuffer, &ifc, sizeof(ifc))) break;
; 892  :             rc = TRUE;
; 893  :             break;
; 894  :         }
; 895  :         SetLastError(ERROR_INVALID_PARAMETER);
; 896  :         break;
; 897  : 
; 898  :     case IOCTL_GPIO_SETBIT:
; 899  :         if (pOutSize != 0) *pOutSize = 0;
; 900  :         if ((pInBuffer == NULL) || (inSize < sizeof(DWORD)) ||
; 901  :             !CeSafeCopyMemory(&id, pInBuffer, sizeof(DWORD)))
; 902  :         {
; 903  :             SetLastError(ERROR_INVALID_PARAMETER);
; 904  :             break;
; 905  :         }
; 906  :         Tps659xxGpioSetBit(context, id);
; 907  :         rc = TRUE;
; 908  :         break;
; 909  : 
; 910  :     case IOCTL_GPIO_CLRBIT:
; 911  :         if (pOutSize != 0) *pOutSize = 0;
; 912  :         if ((pInBuffer == NULL) || (inSize < sizeof(DWORD)) ||
; 913  :             !CeSafeCopyMemory(&id, pInBuffer, sizeof(DWORD)))
; 914  :         {
; 915  :             SetLastError(ERROR_INVALID_PARAMETER);
; 916  :             break;
; 917  :         }
; 918  :         Tps659xxGpioClrBit(context, id);
; 919  :         rc = TRUE;
; 920  :         break;
; 921  : 
; 922  :     case IOCTL_GPIO_GETBIT:
; 923  :         if (pOutSize != 0) *pOutSize = sizeof(DWORD);
; 924  :         if ((pInBuffer == NULL) || (inSize < sizeof(DWORD)) ||
; 925  :             !CeSafeCopyMemory(&id, pInBuffer, sizeof(DWORD)) ||
; 926  :             (pOutBuffer == NULL) || (outSize < sizeof(DWORD)))
; 927  :         {
; 928  :             SetLastError(ERROR_INVALID_PARAMETER);
; 929  :             break;
; 930  :         }
; 931  :         value = Tps659xxGpioGetBit(context, id);
; 932  :         if (!CeSafeCopyMemory(pOutBuffer, &value, sizeof(value)))
; 933  :         {
; 934  :             SetLastError(ERROR_INVALID_PARAMETER);
; 935  :             break;
; 936  :         }
; 937  :         rc = TRUE;
; 938  :         break;
; 939  : 
; 940  :     case IOCTL_GPIO_SETMODE:
; 941  :         if (pOutSize != 0) *pOutSize = 0;
; 942  :         if ((pInBuffer == NULL) || (inSize < 2 * sizeof(DWORD)) ||
; 943  :             !CeSafeCopyMemory(
; 944  :             &id, &((DWORD*)pInBuffer)[0], sizeof(DWORD)
; 945  :             ) ||
; 946  :             !CeSafeCopyMemory(
; 947  :             &mode, &((DWORD*)pInBuffer)[1], sizeof(DWORD)
; 948  :             ))
; 949  :         {
; 950  :             SetLastError(ERROR_INVALID_PARAMETER);
; 951  :             break;
; 952  :         }
; 953  :         Tps659xxGpioSetMode(context, id, mode);
; 954  :         rc = TRUE;
; 955  :         break;
; 956  : 
; 957  :     case IOCTL_GPIO_GETMODE:
; 958  :         if (pOutSize != 0) *pOutSize = sizeof(DWORD);
; 959  :         if ((pInBuffer == NULL) || (inSize < sizeof(DWORD)) ||
; 960  :             !CeSafeCopyMemory(&id, pInBuffer, sizeof(DWORD)) ||
; 961  :             (pOutBuffer == NULL) || (outSize < sizeof(DWORD)))
; 962  :         {
; 963  :             SetLastError(ERROR_INVALID_PARAMETER);
; 964  :             break;
; 965  :         }
; 966  :         mode = Tps659xxGpioGetMode(context, id);
; 967  :         if (!CeSafeCopyMemory(pOutBuffer, &mode, sizeof(mode)))
; 968  :         {
; 969  :             SetLastError(ERROR_INVALID_PARAMETER);
; 970  :             break;
; 971  :         }
; 972  :         rc = TRUE;
; 973  :         break;
; 974  :     }
; 975  : 
; 976  : cleanUp:
; 977  :     DEBUGMSG(ZONE_FUNCTION, (L"-Tps659xxGpioIOControl(rc = %d)\r\n", rc));
; 978  :     return rc;
; 979  : #endif
; 980  : 
; 981  : #ifdef OAL
; 982  :     UNREFERENCED_PARAMETER(context);
; 983  :     UNREFERENCED_PARAMETER(code);
; 984  :     UNREFERENCED_PARAMETER(pInBuffer);
; 985  :     UNREFERENCED_PARAMETER(inSize);
; 986  :     UNREFERENCED_PARAMETER(pOutBuffer);
; 987  :     UNREFERENCED_PARAMETER(outSize);
; 988  :     UNREFERENCED_PARAMETER(pOutSize);        
; 989  :     return FALSE;

  00db0	e3a03000	 mov         r3, #0
  00db4	e58d3000	 str         r3, [sp]

; 990  : #endif
; 991  : }

  00db8	e59d0000	 ldr         r0, [sp]
  00dbc	e28dd004	 add         sp, sp, #4
  00dc0	e89d6000	 ldmia       sp, {sp, lr}
  00dc4	e12fff1e	 bx          lr
  00dc8		 |$M37539|

			 ENDP  ; |?Tps659xxGpioIoControl@@YAHPAXIPAEI1IPAK@Z|, Tps659xxGpioIoControl

	END
