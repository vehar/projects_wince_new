; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\TPS659XX\BCI\bci.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|DEVICE_IFC_MADC_GUID| [ DATA ]
	EXPORT	|DEVICE_IFC_TWL_GUID| [ DATA ]
	EXPORT	|hHotDieTriggerEvent_Test| [ DATA ]

  00000			 AREA	 |.bss|, NOINIT
|hHotDieTriggerEvent_Test| % 0x4

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
|DEVICE_IFC_MADC_GUID| DCD 0xe61ca799
	DCW	0x8ef5
	DCW	0x41e3
	DCB	0x82
	DCB	0x37
	DCB	0x2b
	DCB	0xd8
	DCB	0x87
	DCB	0x9b
	DCB	0xa4
	DCB	0xaf
|DEVICE_IFC_TWL_GUID| DCD 0xdef0a04b
	DCW	0xb967
	DCW	0x43db
	DCB	0x95
	DCB	0x9e
	DCB	0xd9
	DCB	0xfc
	DCB	0x62
	DCB	0x25
	DCB	0xcd
	DCB	0xeb
|_rgACCHGOVTH| DCD 0x157c
	DCD	0x1770
	DCD	0x1964
	DCD	0x1a90
|_rgVBATOVTH| DCD 0x11c6
	DCD	0x128e
	DCD	0x1356
	DCD	0x13ba
|_rgVBUSOVTH| DCD 0x157c
	DCD	0x1770
	DCD	0x1964
	DCD	0x1a90
	EXPORT	|??_C@_1CI@FDBBBNAG@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|BCI_Uninitialize|
	EXPORT	|PulseEvent|
	EXPORT	|??_C@_1HA@NOHBJKLB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAc?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IO@CNEJLJML@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JK@MMGJDJGF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAR?$AAT?$AAC?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAs?$AAs?$AAo?$AAc?$AAi?$AAa?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JA@OFPOJJMP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAc?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@IPMNAFIC@?$AAH?$AAo?$AAt?$AAD?$AAi?$AAe?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IO@EPJCJJGB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAc?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LC@JAINGOGC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@PDHJOICM@?$AAH?$AAo?$AAt?$AAD?$AAi?$AAe?$AAT?$AAe?$AAm?$AAp?$AAS?$AAe?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@OHGNNGGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@LPGHDBOE@?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?2?$AAB?$AAu?$AAi?$AAl?$AAt?$AAI?$AAn?$AA?2?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HI@DGOKHBPG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IO@NMAOCDDC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@IPEGJDBO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JC@GDJMCNBP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@OPCJPNIN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAc?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HK@FFGFCEBJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAc?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@DHEFNOFN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@IEEIFNBO@?$AAS?$AAS?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@EDHDJAEL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo@| [ DATA ] ; `string'
	EXPORT	|MADCOpen|
	EXPORT	|??_C@_1HE@ONEELLOE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAp@| [ DATA ] ; `string'
	EXPORT	|BCI_SetChargeCurrent|
	EXPORT	|??_C@_1GO@CKLNOEDL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@GGIHMBG@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|BCI_Initialize|
	IMPORT	|CeSetThreadPriority|
	IMPORT	|CreateThread|
	IMPORT	|TWLWriteRegs|
	IMPORT	|TWLReadRegs|
	IMPORT	|RegCloseKey|
	IMPORT	|RegQueryValueExW|
	IMPORT	|RegOpenKeyExW|
	IMPORT	|TWLInterruptMask|
	IMPORT	|TWLInterruptInitialize|
	IMPORT	|CreateEventW|
	IMPORT	|TWLOpen|
	IMPORT	|InitializeCriticalSection|
	IMPORT	|memset|
	IMPORT	|LocalAlloc|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|

  00000			 AREA	 |.pdata|, PDATA
|$T44873| DCD	|$LN62@BCI_Initia|
	DCD	0x40035d04
; File c:\wince600\platform\common\src\soc\common_ti_v1\tps659xx\bci\bci.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@FDBBBNAG@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@NOHBJKLB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAc?$AAr@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "c"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IO@CNEJLJML@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "e", 0x0, "n", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "T", 0x0, "W", 0x0, "L"
	DCB	0x0, " ", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R"
	DCB	0x0, " ", 0x0, "(", 0x0, "H", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "d", 0x0, "i", 0x0, "e", 0x0, ")", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JK@MMGJDJGF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAR?$AAT?$AAC?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAs?$AAs?$AAo?$AAc?$AAi?$AAa?$AAt@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "R", 0x0, "T", 0x0, "C", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "a"
	DCB	0x0, "s", 0x0, "s", 0x0, "o", 0x0, "c", 0x0, "i", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "e", 0x0, "v", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, " ", 0x0, "w", 0x0, "i", 0x0, "t"
	DCB	0x0, "h", 0x0, " ", 0x0, "T", 0x0, "W", 0x0, "L", 0x0, " "
	DCB	0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R", 0x0, " "
	DCB	0x0, "(", 0x0, "H", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "d"
	DCB	0x0, "i", 0x0, "e", 0x0, ")", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JA@OFPOJJMP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAc?$AAr@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "c"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, " ", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "(", 0x0, "H"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "d", 0x0, "i", 0x0, "e"
	DCB	0x0, ")", 0x0, " ", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@IPMNAFIC@?$AAH?$AAo?$AAt?$AAD?$AAi?$AAe?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AA?$AA@| DCB "H"
	DCB	0x0, "o", 0x0, "t", 0x0, "D", 0x0, "i", 0x0, "e", 0x0, "D"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IO@EPJCJJGB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAc?$AAr@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "c"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, " ", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "(", 0x0, "H"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "d", 0x0, "i", 0x0, "e"
	DCB	0x0, ")", 0x0, " ", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LC@JAINGOGC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, " ", 0x0, "H", 0x0, "o", 0x0, "t", 0x0, "D", 0x0, "i"
	DCB	0x0, "e", 0x0, "T", 0x0, "e", 0x0, "m", 0x0, "p", 0x0, "S"
	DCB	0x0, "e", 0x0, "l", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "f", 0x0, "i", 0x0, "g", 0x0, "u", 0x0, "r", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, " ", 0x0, "B", 0x0, "a", 0x0, "t", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "r", 0x0, "y"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@PDHJOICM@?$AAH?$AAo?$AAt?$AAD?$AAi?$AAe?$AAT?$AAe?$AAm?$AAp?$AAS?$AAe?$AAl?$AA?$AA@| DCB "H"
	DCB	0x0, "o", 0x0, "t", 0x0, "D", 0x0, "i", 0x0, "e", 0x0, "T"
	DCB	0x0, "e", 0x0, "m", 0x0, "p", 0x0, "S", 0x0, "e", 0x0, "l"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@OHGNNGGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "o", 0x0, "p", 0x0, "e", 0x0, "n"
	DCB	0x0, " ", 0x0, "B", 0x0, "a", 0x0, "t", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "y", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "r", 0x0, "y", 0x0, "!"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@LPGHDBOE@?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?2?$AAB?$AAu?$AAi?$AAl?$AAt?$AAI?$AAn?$AA?2?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AA?$AA@| DCB "D"
	DCB	0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, "s"
	DCB	0x0, "\\", 0x0, "B", 0x0, "u", 0x0, "i", 0x0, "l", 0x0, "t"
	DCB	0x0, "I", 0x0, "n", 0x0, "\\", 0x0, "B", 0x0, "a", 0x0, "t"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "y", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@DGOKHBPG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "e", 0x0, "n", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "T", 0x0, "W", 0x0, "L"
	DCB	0x0, " ", 0x0, "B", 0x0, "C", 0x0, "I", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u"
	DCB	0x0, "p", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IO@NMAOCDDC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAs@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "a"
	DCB	0x0, "s", 0x0, "s", 0x0, "o", 0x0, "c", 0x0, "i", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "e", 0x0, "v", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, " ", 0x0, "w", 0x0, "i", 0x0, "t"
	DCB	0x0, "h", 0x0, " ", 0x0, "T", 0x0, "W", 0x0, "L", 0x0, " "
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@IPEGJDBO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "e", 0x0, "n", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "T", 0x0, "W", 0x0, "L"
	DCB	0x0, " ", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JC@GDJMCNBP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAs@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "a"
	DCB	0x0, "s", 0x0, "s", 0x0, "o", 0x0, "c", 0x0, "i", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "e", 0x0, "v", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, " ", 0x0, "w", 0x0, "i", 0x0, "t"
	DCB	0x0, "h", 0x0, " ", 0x0, "T", 0x0, "W", 0x0, "L", 0x0, " "
	DCB	0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@OPCJPNIN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAc?$AAr@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "c"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, " ", 0x0, "B", 0x0, "C"
	DCB	0x0, "I", 0x0, " ", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@FFGFCEBJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAc?$AAr@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "c"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, " ", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "e", 0x0, "v"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@DHEFNOFN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "o", 0x0, "p", 0x0, "e", 0x0, "n"
	DCB	0x0, " ", 0x0, "b", 0x0, "a", 0x0, "t", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "y", 0x0, " ", 0x0, "n", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "e", 0x0, "v", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, " ", 0x0, "(", 0x0, "%", 0x0, "s"
	DCB	0x0, ")", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@IEEIFNBO@?$AAS?$AAS?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@| DCB "S"
	DCB	0x0, "S", 0x0, "U", 0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@EDHDJAEL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "o", 0x0, "p", 0x0, "e", 0x0, "n"
	DCB	0x0, " ", 0x0, "M", 0x0, "A", 0x0, "D", 0x0, "C", 0x0, " "
	DCB	0x0, "d", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, " ", 0x0, "d", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@ONEELLOE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAp@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "o"
	DCB	0x0, "p", 0x0, "e", 0x0, "n", 0x0, " ", 0x0, "T", 0x0, "r"
	DCB	0x0, "i", 0x0, "t", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "d"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "d", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@CKLNOEDL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, " ", 0x0, "B", 0x0, "C", 0x0, "I", 0x0, " "
	DCB	0x0, "s", 0x0, "t", 0x0, "r", 0x0, "u", 0x0, "c", 0x0, "t"
	DCB	0x0, "u", 0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@GGIHMBG@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BCI_Initialize| PROC

; 1093 : {

  00000		 |$LN62@BCI_Initia|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24ddf45	 sub         sp, sp, #0x45, 30
  00010		 |$M44870|

; 1094 :     Device_t *pDevice;
; 1095 :     BOOL bSuccess = FALSE;

  00010	e3a03000	 mov         r3, #0
  00014	e58d3018	 str         r3, [sp, #0x18]

; 1096 :     HKEY hKey;
; 1097 :     DWORD m_dwTempSel;
; 1098 :     DWORD size;
; 1099 :     DWORD dwType = REG_DWORD;

  00018	e3a03004	 mov         r3, #4
  0001c	e58d300c	 str         r3, [sp, #0xC]

; 1100 :     UINT8 regval;
; 1101 :     DEBUGMSG(ZONE_FUNCTION, (L"+BCI_Initialize()\r\n"));

  00020	e59f3cb0	 ldr         r3, [pc, #0xCB0]
  00024	e5933440	 ldr         r3, [r3, #0x440]
  00028	e3130080	 tst         r3, #0x80
  0002c	0a000004	 beq         |$LN22@BCI_Initia|
  00030	e59f0d38	 ldr         r0, [pc, #0xD38]
  00034	eb000000	 bl          NKDbgPrintfW
  00038	e3a03001	 mov         r3, #1
  0003c	e58d303c	 str         r3, [sp, #0x3C]
  00040	ea000001	 b           |$LN23@BCI_Initia|
  00044		 |$LN22@BCI_Initia|
  00044	e3a03000	 mov         r3, #0
  00048	e58d303c	 str         r3, [sp, #0x3C]
  0004c		 |$LN23@BCI_Initia|

; 1102 :     UNREFERENCED_PARAMETER(nOverVoltageTimeout);
; 1103 :     
; 1104 :     // Create device structure
; 1105 :     pDevice = (Device_t *)LocalAlloc(LPTR, sizeof(Device_t));

  0004c	e3a01068	 mov         r1, #0x68
  00050	e3a00040	 mov         r0, #0x40
  00054	eb000000	 bl          LocalAlloc
  00058	e58d0040	 str         r0, [sp, #0x40]
  0005c	e59d3040	 ldr         r3, [sp, #0x40]
  00060	e58d3008	 str         r3, [sp, #8]

; 1106 :     if (pDevice == NULL)

  00064	e59d3008	 ldr         r3, [sp, #8]
  00068	e3530000	 cmp         r3, #0
  0006c	1a00000b	 bne         |$LN19@BCI_Initia|

; 1107 :         {
; 1108 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: BCI_Initialize: "
; 1109 :             L"Failed allocate BCI structure\r\n"
; 1110 :             ));

  00070	e59f3c60	 ldr         r3, [pc, #0xC60]
  00074	e5933440	 ldr         r3, [r3, #0x440]
  00078	e3130001	 tst         r3, #1
  0007c	0a000004	 beq         |$LN24@BCI_Initia|
  00080	e59f0ce4	 ldr         r0, [pc, #0xCE4]
  00084	eb000000	 bl          NKDbgPrintfW
  00088	e3a03001	 mov         r3, #1
  0008c	e58d3044	 str         r3, [sp, #0x44]
  00090	ea000001	 b           |$LN25@BCI_Initia|
  00094		 |$LN24@BCI_Initia|
  00094	e3a03000	 mov         r3, #0
  00098	e58d3044	 str         r3, [sp, #0x44]
  0009c		 |$LN25@BCI_Initia|

; 1111 :         goto cleanUp;

  0009c	ea0002f4	 b           |$cleanUp$44172|
  000a0		 |$LN19@BCI_Initia|

; 1112 :         }
; 1113 : 
; 1114 :     // initialize memory
; 1115 :     memset(pDevice, 0, sizeof(Device_t));

  000a0	e3a02068	 mov         r2, #0x68
  000a4	e3a01000	 mov         r1, #0
  000a8	e59d0008	 ldr         r0, [sp, #8]
  000ac	eb000000	 bl          memset

; 1116 : 
; 1117 :     // copy timeout values
; 1118 :     pDevice->nEndOfChargeTimeout = nEOCTimeout;

  000b0	e59d3008	 ldr         r3, [sp, #8]
  000b4	e2832050	 add         r2, r3, #0x50
  000b8	e59d311c	 ldr         r3, [sp, #0x11C]
  000bc	e5823000	 str         r3, [r2]

; 1119 :     pDevice->nOverChargeTimeout = nOverChargeTimeout;

  000c0	e59d3008	 ldr         r3, [sp, #8]
  000c4	e283205c	 add         r2, r3, #0x5C
  000c8	e59d3120	 ldr         r3, [sp, #0x120]
  000cc	e5823000	 str         r3, [r2]

; 1120 :     pDevice->nOOBTemperatureTimeout = nOOBTemperatureTimeout;

  000d0	e59d3008	 ldr         r3, [sp, #8]
  000d4	e2832058	 add         r2, r3, #0x58
  000d8	e59d3128	 ldr         r3, [sp, #0x128]
  000dc	e5823000	 str         r3, [r2]

; 1121 :     pDevice->nOverVoltageTimeout = nOverChargeTimeout;

  000e0	e59d3008	 ldr         r3, [sp, #8]
  000e4	e2832054	 add         r2, r3, #0x54
  000e8	e59d3120	 ldr         r3, [sp, #0x120]
  000ec	e5823000	 str         r3, [r2]

; 1122 :     
; 1123 :     // initialize data structure
; 1124 :     InitializeCriticalSection(&pDevice->cs);

  000f0	e59d0008	 ldr         r0, [sp, #8]
  000f4	eb000000	 bl          InitializeCriticalSection

; 1125 :     pDevice->currentMode = kBCI_Unknown;

  000f8	e59d3008	 ldr         r3, [sp, #8]
  000fc	e2832014	 add         r2, r3, #0x14
  00100	e3a03005	 mov         r3, #5
  00104	e5823000	 str         r3, [r2]

; 1126 : 
; 1127 :     // set to default charge current levels (mA)
; 1128 :     pDevice->preScale = 1;

  00108	e59d3008	 ldr         r3, [sp, #8]
  0010c	e2832034	 add         r2, r3, #0x34
  00110	e3a03001	 mov         r3, #1
  00114	e5823000	 str         r3, [r2]

; 1129 :     BCI_SetChargeCurrent(pDevice, kBCI_AC, BCI_DEFAULT_ACCHARGECURRENT);

  00118	e3a02f96	 mov         r2, #0x96, 30
  0011c	e3a01001	 mov         r1, #1
  00120	e59d0008	 ldr         r0, [sp, #8]
  00124	eb000000	 bl          BCI_SetChargeCurrent

; 1130 :     BCI_SetChargeCurrent(pDevice, kBCI_USBHost, BCI_DEFAULT_USBCHARGECURRENT);

  00128	e3a02f7d	 mov         r2, #0x7D, 30
  0012c	e3a01002	 mov         r1, #2
  00130	e59d0008	 ldr         r0, [sp, #8]
  00134	eb000000	 bl          BCI_SetChargeCurrent

; 1131 : 
; 1132 :     // open handle to Triton driver
; 1133 :     pDevice->hTwl = TWLOpen();

  00138	eb000000	 bl          TWLOpen
  0013c	e58d0048	 str         r0, [sp, #0x48]
  00140	e59d3008	 ldr         r3, [sp, #8]
  00144	e2832018	 add         r2, r3, #0x18
  00148	e59d3048	 ldr         r3, [sp, #0x48]
  0014c	e5823000	 str         r3, [r2]

; 1134 :     if ( pDevice->hTwl == NULL )

  00150	e59d3008	 ldr         r3, [sp, #8]
  00154	e2833018	 add         r3, r3, #0x18
  00158	e5933000	 ldr         r3, [r3]
  0015c	e3530000	 cmp         r3, #0
  00160	1a00000b	 bne         |$LN18@BCI_Initia|

; 1135 :         {
; 1136 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: BCI_Initialize: "
; 1137 :             L"Failed open Triton device driver\r\n"
; 1138 :             ));

  00164	e59f3b6c	 ldr         r3, [pc, #0xB6C]
  00168	e5933440	 ldr         r3, [r3, #0x440]
  0016c	e3130001	 tst         r3, #1
  00170	0a000004	 beq         |$LN26@BCI_Initia|
  00174	e59f0bec	 ldr         r0, [pc, #0xBEC]
  00178	eb000000	 bl          NKDbgPrintfW
  0017c	e3a03001	 mov         r3, #1
  00180	e58d304c	 str         r3, [sp, #0x4C]
  00184	ea000001	 b           |$LN27@BCI_Initia|
  00188		 |$LN26@BCI_Initia|
  00188	e3a03000	 mov         r3, #0
  0018c	e58d304c	 str         r3, [sp, #0x4C]
  00190		 |$LN27@BCI_Initia|

; 1139 :         goto cleanUp;

  00190	ea0002b7	 b           |$cleanUp$44172|
  00194		 |$LN18@BCI_Initia|

; 1140 :         }
; 1141 :     
; 1142 :     // open handle to Triton driver
; 1143 :     pDevice->hMadc = MADCOpen();

  00194	eb000000	 bl          MADCOpen
  00198	e58d0050	 str         r0, [sp, #0x50]
  0019c	e59d3008	 ldr         r3, [sp, #8]
  001a0	e283201c	 add         r2, r3, #0x1C
  001a4	e59d3050	 ldr         r3, [sp, #0x50]
  001a8	e5823000	 str         r3, [r2]

; 1144 :     if ( pDevice->hMadc == NULL )

  001ac	e59d3008	 ldr         r3, [sp, #8]
  001b0	e283301c	 add         r3, r3, #0x1C
  001b4	e5933000	 ldr         r3, [r3]
  001b8	e3530000	 cmp         r3, #0
  001bc	1a00000b	 bne         |$LN17@BCI_Initia|

; 1145 :         {
; 1146 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: BCI_Initialize: "
; 1147 :             L"Failed to open MADC device driver\r\n"
; 1148 :             ));

  001c0	e59f3b10	 ldr         r3, [pc, #0xB10]
  001c4	e5933440	 ldr         r3, [r3, #0x440]
  001c8	e3130001	 tst         r3, #1
  001cc	0a000004	 beq         |$LN28@BCI_Initia|
  001d0	e59f0b8c	 ldr         r0, [pc, #0xB8C]
  001d4	eb000000	 bl          NKDbgPrintfW
  001d8	e3a03001	 mov         r3, #1
  001dc	e58d3054	 str         r3, [sp, #0x54]
  001e0	ea000001	 b           |$LN29@BCI_Initia|
  001e4		 |$LN28@BCI_Initia|
  001e4	e3a03000	 mov         r3, #0
  001e8	e58d3054	 str         r3, [sp, #0x54]
  001ec		 |$LN29@BCI_Initia|

; 1149 :         goto cleanUp;

  001ec	ea0002a0	 b           |$cleanUp$44172|
  001f0		 |$LN17@BCI_Initia|

; 1150 :         }
; 1151 : 
; 1152 :     // create a named event to signal battery of state change
; 1153 :     pDevice->hBattSignal = CreateEvent(NULL, FALSE, FALSE, BATTERYSINGAL_NAMED_EVENT);

  001f0	e59f3b68	 ldr         r3, [pc, #0xB68]
  001f4	e3a02000	 mov         r2, #0
  001f8	e3a01000	 mov         r1, #0
  001fc	e3a00000	 mov         r0, #0
  00200	eb000000	 bl          CreateEventW
  00204	e58d0058	 str         r0, [sp, #0x58]
  00208	e59d3008	 ldr         r3, [sp, #8]
  0020c	e2832020	 add         r2, r3, #0x20
  00210	e59d3058	 ldr         r3, [sp, #0x58]
  00214	e5823000	 str         r3, [r2]

; 1154 :     DEBUGMSG(pDevice->hBattSignal == NULL, (L"ERROR: BCI_Initialize: "
; 1155 :         L"Failed to open battery named event (%s)", BATTERYSINGAL_NAMED_EVENT)
; 1156 :         );

  00218	e59d3008	 ldr         r3, [sp, #8]
  0021c	e2833020	 add         r3, r3, #0x20
  00220	e5933000	 ldr         r3, [r3]
  00224	e3530000	 cmp         r3, #0
  00228	1a000005	 bne         |$LN30@BCI_Initia|
  0022c	e59f1b2c	 ldr         r1, [pc, #0xB2C]
  00230	e59f0b24	 ldr         r0, [pc, #0xB24]
  00234	eb000000	 bl          NKDbgPrintfW
  00238	e3a03001	 mov         r3, #1
  0023c	e58d305c	 str         r3, [sp, #0x5C]
  00240	ea000001	 b           |$LN31@BCI_Initia|
  00244		 |$LN30@BCI_Initia|
  00244	e3a03000	 mov         r3, #0
  00248	e58d305c	 str         r3, [sp, #0x5C]
  0024c		 |$LN31@BCI_Initia|

; 1157 : 
; 1158 : 
; 1159 :     // Create interrupt event
; 1160 :     pDevice->rgIntrEvents[EVENT_POWER] = CreateEvent(NULL, FALSE, FALSE, NULL);

  0024c	e3a03000	 mov         r3, #0
  00250	e3a02000	 mov         r2, #0
  00254	e3a01000	 mov         r1, #0
  00258	e3a00000	 mov         r0, #0
  0025c	eb000000	 bl          CreateEventW
  00260	e58d0060	 str         r0, [sp, #0x60]
  00264	e59d3008	 ldr         r3, [sp, #8]
  00268	e2832028	 add         r2, r3, #0x28
  0026c	e59d3060	 ldr         r3, [sp, #0x60]
  00270	e5823000	 str         r3, [r2]

; 1161 :     if (pDevice->rgIntrEvents[EVENT_POWER] == NULL)

  00274	e59d3008	 ldr         r3, [sp, #8]
  00278	e2833028	 add         r3, r3, #0x28
  0027c	e5933000	 ldr         r3, [r3]
  00280	e3530000	 cmp         r3, #0
  00284	1a00000b	 bne         |$LN16@BCI_Initia|

; 1162 :         {
; 1163 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: BCI_Initialize: "
; 1164 :             L"Failed create interrupt Power event\r\n"
; 1165 :             ));

  00288	e59f3a48	 ldr         r3, [pc, #0xA48]
  0028c	e5933440	 ldr         r3, [r3, #0x440]
  00290	e3130001	 tst         r3, #1
  00294	0a000004	 beq         |$LN32@BCI_Initia|
  00298	e59f0ab8	 ldr         r0, [pc, #0xAB8]
  0029c	eb000000	 bl          NKDbgPrintfW
  002a0	e3a03001	 mov         r3, #1
  002a4	e58d3064	 str         r3, [sp, #0x64]
  002a8	ea000001	 b           |$LN33@BCI_Initia|
  002ac		 |$LN32@BCI_Initia|
  002ac	e3a03000	 mov         r3, #0
  002b0	e58d3064	 str         r3, [sp, #0x64]
  002b4		 |$LN33@BCI_Initia|

; 1166 :         goto cleanUp;

  002b4	ea00026e	 b           |$cleanUp$44172|
  002b8		 |$LN16@BCI_Initia|

; 1167 :         }
; 1168 : 
; 1169 :     // Create interrupt event
; 1170 :     pDevice->rgIntrEvents[EVENT_BCI] = CreateEvent(NULL, FALSE, FALSE, NULL);

  002b8	e3a03000	 mov         r3, #0
  002bc	e3a02000	 mov         r2, #0
  002c0	e3a01000	 mov         r1, #0
  002c4	e3a00000	 mov         r0, #0
  002c8	eb000000	 bl          CreateEventW
  002cc	e58d0068	 str         r0, [sp, #0x68]
  002d0	e59d3008	 ldr         r3, [sp, #8]
  002d4	e283202c	 add         r2, r3, #0x2C
  002d8	e59d3068	 ldr         r3, [sp, #0x68]
  002dc	e5823000	 str         r3, [r2]

; 1171 :     if (pDevice->rgIntrEvents[EVENT_BCI] == NULL)

  002e0	e59d3008	 ldr         r3, [sp, #8]
  002e4	e283302c	 add         r3, r3, #0x2C
  002e8	e5933000	 ldr         r3, [r3]
  002ec	e3530000	 cmp         r3, #0
  002f0	1a00000b	 bne         |$LN15@BCI_Initia|

; 1172 :         {
; 1173 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: BCI_Initialize: "
; 1174 :             L"Failed create interrupt BCI event\r\n"
; 1175 :             ));

  002f4	e59f39dc	 ldr         r3, [pc, #0x9DC]
  002f8	e5933440	 ldr         r3, [r3, #0x440]
  002fc	e3130001	 tst         r3, #1
  00300	0a000004	 beq         |$LN34@BCI_Initia|
  00304	e59f0a48	 ldr         r0, [pc, #0xA48]
  00308	eb000000	 bl          NKDbgPrintfW
  0030c	e3a03001	 mov         r3, #1
  00310	e58d306c	 str         r3, [sp, #0x6C]
  00314	ea000001	 b           |$LN35@BCI_Initia|
  00318		 |$LN34@BCI_Initia|
  00318	e3a03000	 mov         r3, #0
  0031c	e58d306c	 str         r3, [sp, #0x6C]
  00320		 |$LN35@BCI_Initia|

; 1176 :         goto cleanUp;

  00320	ea000253	 b           |$cleanUp$44172|
  00324		 |$LN15@BCI_Initia|

; 1177 :         }
; 1178 : 
; 1179 :     // register for AC charger interrupts
; 1180 :     if (!TWLInterruptInitialize(pDevice->hTwl, TWL_INTR_CHG_PRES, 
; 1181 :         pDevice->rgIntrEvents[EVENT_POWER]))

  00324	e59d3008	 ldr         r3, [sp, #8]
  00328	e2833028	 add         r3, r3, #0x28
  0032c	e5932000	 ldr         r2, [r3]
  00330	e59f1a14	 ldr         r1, [pc, #0xA14]
  00334	e59d3008	 ldr         r3, [sp, #8]
  00338	e2833018	 add         r3, r3, #0x18
  0033c	e5930000	 ldr         r0, [r3]
  00340	eb000000	 bl          TWLInterruptInitialize
  00344	e58d0070	 str         r0, [sp, #0x70]
  00348	e59d3070	 ldr         r3, [sp, #0x70]
  0034c	e3530000	 cmp         r3, #0
  00350	1a00000b	 bne         |$LN14@BCI_Initia|

; 1182 :         {
; 1183 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: BCI_Initialize: "
; 1184 :             L"Failed associate event with TWL POWER interrupt\r\n"
; 1185 :             ));

  00354	e59f397c	 ldr         r3, [pc, #0x97C]
  00358	e5933440	 ldr         r3, [r3, #0x440]
  0035c	e3130001	 tst         r3, #1
  00360	0a000004	 beq         |$LN36@BCI_Initia|
  00364	e59f09e4	 ldr         r0, [pc, #0x9E4]
  00368	eb000000	 bl          NKDbgPrintfW
  0036c	e3a03001	 mov         r3, #1
  00370	e58d3074	 str         r3, [sp, #0x74]
  00374	ea000001	 b           |$LN37@BCI_Initia|
  00378		 |$LN36@BCI_Initia|
  00378	e3a03000	 mov         r3, #0
  0037c	e58d3074	 str         r3, [sp, #0x74]
  00380		 |$LN37@BCI_Initia|

; 1186 :         goto cleanUp;

  00380	ea00023b	 b           |$cleanUp$44172|
  00384		 |$LN14@BCI_Initia|

; 1187 :         }
; 1188 :   
; 1189 :     // Enable AC charger event
; 1190 :     if (!TWLInterruptMask(pDevice->hTwl, TWL_INTR_CHG_PRES, FALSE))

  00384	e3a02000	 mov         r2, #0
  00388	e59f19bc	 ldr         r1, [pc, #0x9BC]
  0038c	e59d3008	 ldr         r3, [sp, #8]
  00390	e2833018	 add         r3, r3, #0x18
  00394	e5930000	 ldr         r0, [r3]
  00398	eb000000	 bl          TWLInterruptMask
  0039c	e58d0078	 str         r0, [sp, #0x78]
  003a0	e59d3078	 ldr         r3, [sp, #0x78]
  003a4	e3530000	 cmp         r3, #0
  003a8	1a00000b	 bne         |$LN13@BCI_Initia|

; 1191 :         {
; 1192 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: BCI_Initialize: "
; 1193 :             L"Failed to enable TWL POWER interrupt\r\n"
; 1194 :             ));

  003ac	e59f3924	 ldr         r3, [pc, #0x924]
  003b0	e5933440	 ldr         r3, [r3, #0x440]
  003b4	e3130001	 tst         r3, #1
  003b8	0a000004	 beq         |$LN38@BCI_Initia|
  003bc	e59f0984	 ldr         r0, [pc, #0x984]
  003c0	eb000000	 bl          NKDbgPrintfW
  003c4	e3a03001	 mov         r3, #1
  003c8	e58d307c	 str         r3, [sp, #0x7C]
  003cc	ea000001	 b           |$LN39@BCI_Initia|
  003d0		 |$LN38@BCI_Initia|
  003d0	e3a03000	 mov         r3, #0
  003d4	e58d307c	 str         r3, [sp, #0x7C]
  003d8		 |$LN39@BCI_Initia|

; 1195 :         goto cleanUp;

  003d8	ea000225	 b           |$cleanUp$44172|
  003dc		 |$LN13@BCI_Initia|

; 1196 :         }
; 1197 : 
; 1198 :     // register for bci interrupts
; 1199 :     if (!TWLInterruptInitialize(pDevice->hTwl, TWL_INTR_ICHGHIGH, pDevice->rgIntrEvents[EVENT_BCI]) ||
; 1200 :         !TWLInterruptInitialize(pDevice->hTwl, TWL_INTR_ICHGLOW, pDevice->rgIntrEvents[EVENT_BCI]) ||
; 1201 :         !TWLInterruptInitialize(pDevice->hTwl, TWL_INTR_ICHGEOC, pDevice->rgIntrEvents[EVENT_BCI]) ||
; 1202 :         !TWLInterruptInitialize(pDevice->hTwl, TWL_INTR_TBATOR2, pDevice->rgIntrEvents[EVENT_BCI]) ||
; 1203 :         !TWLInterruptInitialize(pDevice->hTwl, TWL_INTR_TBATOR1, pDevice->rgIntrEvents[EVENT_BCI]) ||
; 1204 :         !TWLInterruptInitialize(pDevice->hTwl, TWL_INTR_BATSTS, pDevice->rgIntrEvents[EVENT_BCI]) ||
; 1205 :         !TWLInterruptInitialize(pDevice->hTwl, TWL_INTR_VBATLVL, pDevice->rgIntrEvents[EVENT_BCI]) ||
; 1206 :         !TWLInterruptInitialize(pDevice->hTwl, TWL_INTR_VBATOV, pDevice->rgIntrEvents[EVENT_BCI]) ||
; 1207 :         !TWLInterruptInitialize(pDevice->hTwl, TWL_INTR_VBUSOV, pDevice->rgIntrEvents[EVENT_BCI]) ||
; 1208 :         !TWLInterruptInitialize(pDevice->hTwl, TWL_INTR_ACCHGOV, pDevice->rgIntrEvents[EVENT_BCI])
; 1209 :         )

  003dc	e59d3008	 ldr         r3, [sp, #8]
  003e0	e283302c	 add         r3, r3, #0x2C
  003e4	e5932000	 ldr         r2, [r3]
  003e8	e59f1950	 ldr         r1, [pc, #0x950]
  003ec	e59d3008	 ldr         r3, [sp, #8]
  003f0	e2833018	 add         r3, r3, #0x18
  003f4	e5930000	 ldr         r0, [r3]
  003f8	eb000000	 bl          TWLInterruptInitialize
  003fc	e58d0080	 str         r0, [sp, #0x80]
  00400	e59d3080	 ldr         r3, [sp, #0x80]
  00404	e3530000	 cmp         r3, #0
  00408	0a00006c	 beq         |$LN11@BCI_Initia|
  0040c	e59d3008	 ldr         r3, [sp, #8]
  00410	e283302c	 add         r3, r3, #0x2C
  00414	e5932000	 ldr         r2, [r3]
  00418	e59f191c	 ldr         r1, [pc, #0x91C]
  0041c	e59d3008	 ldr         r3, [sp, #8]
  00420	e2833018	 add         r3, r3, #0x18
  00424	e5930000	 ldr         r0, [r3]
  00428	eb000000	 bl          TWLInterruptInitialize
  0042c	e58d0084	 str         r0, [sp, #0x84]
  00430	e59d3084	 ldr         r3, [sp, #0x84]
  00434	e3530000	 cmp         r3, #0
  00438	0a000060	 beq         |$LN11@BCI_Initia|
  0043c	e59d3008	 ldr         r3, [sp, #8]
  00440	e283302c	 add         r3, r3, #0x2C
  00444	e5932000	 ldr         r2, [r3]
  00448	e59f18e8	 ldr         r1, [pc, #0x8E8]
  0044c	e59d3008	 ldr         r3, [sp, #8]
  00450	e2833018	 add         r3, r3, #0x18
  00454	e5930000	 ldr         r0, [r3]
  00458	eb000000	 bl          TWLInterruptInitialize
  0045c	e58d0088	 str         r0, [sp, #0x88]
  00460	e59d3088	 ldr         r3, [sp, #0x88]
  00464	e3530000	 cmp         r3, #0
  00468	0a000054	 beq         |$LN11@BCI_Initia|
  0046c	e59d3008	 ldr         r3, [sp, #8]
  00470	e283302c	 add         r3, r3, #0x2C
  00474	e5932000	 ldr         r2, [r3]
  00478	e59f18b4	 ldr         r1, [pc, #0x8B4]
  0047c	e59d3008	 ldr         r3, [sp, #8]
  00480	e2833018	 add         r3, r3, #0x18
  00484	e5930000	 ldr         r0, [r3]
  00488	eb000000	 bl          TWLInterruptInitialize
  0048c	e58d008c	 str         r0, [sp, #0x8C]
  00490	e59d308c	 ldr         r3, [sp, #0x8C]
  00494	e3530000	 cmp         r3, #0
  00498	0a000048	 beq         |$LN11@BCI_Initia|
  0049c	e59d3008	 ldr         r3, [sp, #8]
  004a0	e283302c	 add         r3, r3, #0x2C
  004a4	e5932000	 ldr         r2, [r3]
  004a8	e59f1880	 ldr         r1, [pc, #0x880]
  004ac	e59d3008	 ldr         r3, [sp, #8]
  004b0	e2833018	 add         r3, r3, #0x18
  004b4	e5930000	 ldr         r0, [r3]
  004b8	eb000000	 bl          TWLInterruptInitialize
  004bc	e58d0090	 str         r0, [sp, #0x90]
  004c0	e59d3090	 ldr         r3, [sp, #0x90]
  004c4	e3530000	 cmp         r3, #0
  004c8	0a00003c	 beq         |$LN11@BCI_Initia|
  004cc	e59d3008	 ldr         r3, [sp, #8]
  004d0	e283302c	 add         r3, r3, #0x2C
  004d4	e5932000	 ldr         r2, [r3]
  004d8	e59f184c	 ldr         r1, [pc, #0x84C]
  004dc	e59d3008	 ldr         r3, [sp, #8]
  004e0	e2833018	 add         r3, r3, #0x18
  004e4	e5930000	 ldr         r0, [r3]
  004e8	eb000000	 bl          TWLInterruptInitialize
  004ec	e58d0094	 str         r0, [sp, #0x94]
  004f0	e59d3094	 ldr         r3, [sp, #0x94]
  004f4	e3530000	 cmp         r3, #0
  004f8	0a000030	 beq         |$LN11@BCI_Initia|
  004fc	e59d3008	 ldr         r3, [sp, #8]
  00500	e283302c	 add         r3, r3, #0x2C
  00504	e5932000	 ldr         r2, [r3]
  00508	e3a01a12	 mov         r1, #0x12, 20
  0050c	e3811010	 orr         r1, r1, #0x10
  00510	e59d3008	 ldr         r3, [sp, #8]
  00514	e2833018	 add         r3, r3, #0x18
  00518	e5930000	 ldr         r0, [r3]
  0051c	eb000000	 bl          TWLInterruptInitialize
  00520	e58d0098	 str         r0, [sp, #0x98]
  00524	e59d3098	 ldr         r3, [sp, #0x98]
  00528	e3530000	 cmp         r3, #0
  0052c	0a000023	 beq         |$LN11@BCI_Initia|
  00530	e59d3008	 ldr         r3, [sp, #8]
  00534	e283302c	 add         r3, r3, #0x2C
  00538	e5932000	 ldr         r2, [r3]
  0053c	e59f17e4	 ldr         r1, [pc, #0x7E4]
  00540	e59d3008	 ldr         r3, [sp, #8]
  00544	e2833018	 add         r3, r3, #0x18
  00548	e5930000	 ldr         r0, [r3]
  0054c	eb000000	 bl          TWLInterruptInitialize
  00550	e58d009c	 str         r0, [sp, #0x9C]
  00554	e59d309c	 ldr         r3, [sp, #0x9C]
  00558	e3530000	 cmp         r3, #0
  0055c	0a000017	 beq         |$LN11@BCI_Initia|
  00560	e59d3008	 ldr         r3, [sp, #8]
  00564	e283302c	 add         r3, r3, #0x2C
  00568	e5932000	 ldr         r2, [r3]
  0056c	e59f17b0	 ldr         r1, [pc, #0x7B0]
  00570	e59d3008	 ldr         r3, [sp, #8]
  00574	e2833018	 add         r3, r3, #0x18
  00578	e5930000	 ldr         r0, [r3]
  0057c	eb000000	 bl          TWLInterruptInitialize
  00580	e58d00a0	 str         r0, [sp, #0xA0]
  00584	e59d30a0	 ldr         r3, [sp, #0xA0]
  00588	e3530000	 cmp         r3, #0
  0058c	0a00000b	 beq         |$LN11@BCI_Initia|
  00590	e59d3008	 ldr         r3, [sp, #8]
  00594	e283302c	 add         r3, r3, #0x2C
  00598	e5932000	 ldr         r2, [r3]
  0059c	e59f177c	 ldr         r1, [pc, #0x77C]
  005a0	e59d3008	 ldr         r3, [sp, #8]
  005a4	e2833018	 add         r3, r3, #0x18
  005a8	e5930000	 ldr         r0, [r3]
  005ac	eb000000	 bl          TWLInterruptInitialize
  005b0	e58d00a4	 str         r0, [sp, #0xA4]
  005b4	e59d30a4	 ldr         r3, [sp, #0xA4]
  005b8	e3530000	 cmp         r3, #0
  005bc	1a00000b	 bne         |$LN12@BCI_Initia|
  005c0		 |$LN11@BCI_Initia|

; 1210 :         {
; 1211 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: BCI_Initialize: "
; 1212 :             L"Failed associate event with TWL BCI interrupt\r\n"
; 1213 :             ));

  005c0	e59f3710	 ldr         r3, [pc, #0x710]
  005c4	e5933440	 ldr         r3, [r3, #0x440]
  005c8	e3130001	 tst         r3, #1
  005cc	0a000004	 beq         |$LN40@BCI_Initia|
  005d0	e59f076c	 ldr         r0, [pc, #0x76C]
  005d4	eb000000	 bl          NKDbgPrintfW
  005d8	e3a03001	 mov         r3, #1
  005dc	e58d30a8	 str         r3, [sp, #0xA8]
  005e0	ea000001	 b           |$LN41@BCI_Initia|
  005e4		 |$LN40@BCI_Initia|
  005e4	e3a03000	 mov         r3, #0
  005e8	e58d30a8	 str         r3, [sp, #0xA8]
  005ec		 |$LN41@BCI_Initia|

; 1214 :         goto cleanUp;

  005ec	ea0001a0	 b           |$cleanUp$44172|
  005f0		 |$LN12@BCI_Initia|

; 1215 :         }
; 1216 :   
; 1217 :     // Enable BCI events
; 1218 :     if (!TWLInterruptMask(pDevice->hTwl, TWL_INTR_ICHGHIGH, FALSE) ||
; 1219 :         !TWLInterruptMask(pDevice->hTwl, TWL_INTR_ICHGLOW, FALSE) ||
; 1220 :         !TWLInterruptMask(pDevice->hTwl, TWL_INTR_ICHGEOC, FALSE) ||
; 1221 :         !TWLInterruptMask(pDevice->hTwl, TWL_INTR_TBATOR2, FALSE) ||
; 1222 :         !TWLInterruptMask(pDevice->hTwl, TWL_INTR_TBATOR1, FALSE) ||
; 1223 :         !TWLInterruptMask(pDevice->hTwl, TWL_INTR_BATSTS, FALSE) ||
; 1224 :         !TWLInterruptMask(pDevice->hTwl, TWL_INTR_VBATLVL, FALSE) ||
; 1225 :         !TWLInterruptMask(pDevice->hTwl, TWL_INTR_VBATOV, FALSE) ||
; 1226 :         !TWLInterruptMask(pDevice->hTwl, TWL_INTR_VBUSOV, FALSE) ||
; 1227 :         !TWLInterruptMask(pDevice->hTwl, TWL_INTR_ACCHGOV, FALSE))

  005f0	e3a02000	 mov         r2, #0
  005f4	e59f1744	 ldr         r1, [pc, #0x744]
  005f8	e59d3008	 ldr         r3, [sp, #8]
  005fc	e2833018	 add         r3, r3, #0x18
  00600	e5930000	 ldr         r0, [r3]
  00604	eb000000	 bl          TWLInterruptMask
  00608	e58d00ac	 str         r0, [sp, #0xAC]
  0060c	e59d30ac	 ldr         r3, [sp, #0xAC]
  00610	e3530000	 cmp         r3, #0
  00614	0a00005a	 beq         |$LN9@BCI_Initia|
  00618	e3a02000	 mov         r2, #0
  0061c	e59f1718	 ldr         r1, [pc, #0x718]
  00620	e59d3008	 ldr         r3, [sp, #8]
  00624	e2833018	 add         r3, r3, #0x18
  00628	e5930000	 ldr         r0, [r3]
  0062c	eb000000	 bl          TWLInterruptMask
  00630	e58d00b0	 str         r0, [sp, #0xB0]
  00634	e59d30b0	 ldr         r3, [sp, #0xB0]
  00638	e3530000	 cmp         r3, #0
  0063c	0a000050	 beq         |$LN9@BCI_Initia|
  00640	e3a02000	 mov         r2, #0
  00644	e59f16ec	 ldr         r1, [pc, #0x6EC]
  00648	e59d3008	 ldr         r3, [sp, #8]
  0064c	e2833018	 add         r3, r3, #0x18
  00650	e5930000	 ldr         r0, [r3]
  00654	eb000000	 bl          TWLInterruptMask
  00658	e58d00b4	 str         r0, [sp, #0xB4]
  0065c	e59d30b4	 ldr         r3, [sp, #0xB4]
  00660	e3530000	 cmp         r3, #0
  00664	0a000046	 beq         |$LN9@BCI_Initia|
  00668	e3a02000	 mov         r2, #0
  0066c	e59f16c0	 ldr         r1, [pc, #0x6C0]
  00670	e59d3008	 ldr         r3, [sp, #8]
  00674	e2833018	 add         r3, r3, #0x18
  00678	e5930000	 ldr         r0, [r3]
  0067c	eb000000	 bl          TWLInterruptMask
  00680	e58d00b8	 str         r0, [sp, #0xB8]
  00684	e59d30b8	 ldr         r3, [sp, #0xB8]
  00688	e3530000	 cmp         r3, #0
  0068c	0a00003c	 beq         |$LN9@BCI_Initia|
  00690	e3a02000	 mov         r2, #0
  00694	e59f1694	 ldr         r1, [pc, #0x694]
  00698	e59d3008	 ldr         r3, [sp, #8]
  0069c	e2833018	 add         r3, r3, #0x18
  006a0	e5930000	 ldr         r0, [r3]
  006a4	eb000000	 bl          TWLInterruptMask
  006a8	e58d00bc	 str         r0, [sp, #0xBC]
  006ac	e59d30bc	 ldr         r3, [sp, #0xBC]
  006b0	e3530000	 cmp         r3, #0
  006b4	0a000032	 beq         |$LN9@BCI_Initia|
  006b8	e3a02000	 mov         r2, #0
  006bc	e59f1668	 ldr         r1, [pc, #0x668]
  006c0	e59d3008	 ldr         r3, [sp, #8]
  006c4	e2833018	 add         r3, r3, #0x18
  006c8	e5930000	 ldr         r0, [r3]
  006cc	eb000000	 bl          TWLInterruptMask
  006d0	e58d00c0	 str         r0, [sp, #0xC0]
  006d4	e59d30c0	 ldr         r3, [sp, #0xC0]
  006d8	e3530000	 cmp         r3, #0
  006dc	0a000028	 beq         |$LN9@BCI_Initia|
  006e0	e3a02000	 mov         r2, #0
  006e4	e3a01a12	 mov         r1, #0x12, 20
  006e8	e3811010	 orr         r1, r1, #0x10
  006ec	e59d3008	 ldr         r3, [sp, #8]
  006f0	e2833018	 add         r3, r3, #0x18
  006f4	e5930000	 ldr         r0, [r3]
  006f8	eb000000	 bl          TWLInterruptMask
  006fc	e58d00c4	 str         r0, [sp, #0xC4]
  00700	e59d30c4	 ldr         r3, [sp, #0xC4]
  00704	e3530000	 cmp         r3, #0
  00708	0a00001d	 beq         |$LN9@BCI_Initia|
  0070c	e3a02000	 mov         r2, #0
  00710	e59f1610	 ldr         r1, [pc, #0x610]
  00714	e59d3008	 ldr         r3, [sp, #8]
  00718	e2833018	 add         r3, r3, #0x18
  0071c	e5930000	 ldr         r0, [r3]
  00720	eb000000	 bl          TWLInterruptMask
  00724	e58d00c8	 str         r0, [sp, #0xC8]
  00728	e59d30c8	 ldr         r3, [sp, #0xC8]
  0072c	e3530000	 cmp         r3, #0
  00730	0a000013	 beq         |$LN9@BCI_Initia|
  00734	e3a02000	 mov         r2, #0
  00738	e59f15e4	 ldr         r1, [pc, #0x5E4]
  0073c	e59d3008	 ldr         r3, [sp, #8]
  00740	e2833018	 add         r3, r3, #0x18
  00744	e5930000	 ldr         r0, [r3]
  00748	eb000000	 bl          TWLInterruptMask
  0074c	e58d00cc	 str         r0, [sp, #0xCC]
  00750	e59d30cc	 ldr         r3, [sp, #0xCC]
  00754	e3530000	 cmp         r3, #0
  00758	0a000009	 beq         |$LN9@BCI_Initia|
  0075c	e3a02000	 mov         r2, #0
  00760	e59f15b8	 ldr         r1, [pc, #0x5B8]
  00764	e59d3008	 ldr         r3, [sp, #8]
  00768	e2833018	 add         r3, r3, #0x18
  0076c	e5930000	 ldr         r0, [r3]
  00770	eb000000	 bl          TWLInterruptMask
  00774	e58d00d0	 str         r0, [sp, #0xD0]
  00778	e59d30d0	 ldr         r3, [sp, #0xD0]
  0077c	e3530000	 cmp         r3, #0
  00780	1a00000b	 bne         |$LN10@BCI_Initia|
  00784		 |$LN9@BCI_Initia|

; 1228 :         {
; 1229 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: BCI_Initialize: "
; 1230 :             L"Failed to enable TWL BCI interrupt\r\n"
; 1231 :             ));

  00784	e59f354c	 ldr         r3, [pc, #0x54C]
  00788	e5933440	 ldr         r3, [r3, #0x440]
  0078c	e3130001	 tst         r3, #1
  00790	0a000004	 beq         |$LN42@BCI_Initia|
  00794	e59f0580	 ldr         r0, [pc, #0x580]
  00798	eb000000	 bl          NKDbgPrintfW
  0079c	e3a03001	 mov         r3, #1
  007a0	e58d30d4	 str         r3, [sp, #0xD4]
  007a4	ea000001	 b           |$LN43@BCI_Initia|
  007a8		 |$LN42@BCI_Initia|
  007a8	e3a03000	 mov         r3, #0
  007ac	e58d30d4	 str         r3, [sp, #0xD4]
  007b0		 |$LN43@BCI_Initia|

; 1232 :         goto cleanUp;

  007b0	ea00012f	 b           |$cleanUp$44172|
  007b4		 |$LN10@BCI_Initia|

; 1233 :         }
; 1234 : 
; 1235 :     //Open registry to read the configuration of Hot-die interrupt temperature selection
; 1236 :     if (ERROR_SUCCESS != RegOpenKeyEx(HKEY_LOCAL_MACHINE, (LPWSTR)REG_BATTERY_DRV_PATH, 0, 0, &hKey))

  007b4	e28d3014	 add         r3, sp, #0x14
  007b8	e58d3000	 str         r3, [sp]
  007bc	e3a03000	 mov         r3, #0
  007c0	e3a02000	 mov         r2, #0
  007c4	e59f154c	 ldr         r1, [pc, #0x54C]
  007c8	e3a0010a	 mov         r0, #0xA, 2
  007cc	eb000000	 bl          RegOpenKeyExW
  007d0	e58d00d8	 str         r0, [sp, #0xD8]
  007d4	e59d30d8	 ldr         r3, [sp, #0xD8]
  007d8	e3530000	 cmp         r3, #0
  007dc	0a00000b	 beq         |$LN8@BCI_Initia|

; 1237 :         {
; 1238 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: BCI_Initialize: "
; 1239 :             L"Failed to open Battery registry!\r\n"
; 1240 :             ));

  007e0	e59f34f0	 ldr         r3, [pc, #0x4F0]
  007e4	e5933440	 ldr         r3, [r3, #0x440]
  007e8	e3130001	 tst         r3, #1
  007ec	0a000004	 beq         |$LN44@BCI_Initia|
  007f0	e59f051c	 ldr         r0, [pc, #0x51C]
  007f4	eb000000	 bl          NKDbgPrintfW
  007f8	e3a03001	 mov         r3, #1
  007fc	e58d30dc	 str         r3, [sp, #0xDC]
  00800	ea000001	 b           |$LN45@BCI_Initia|
  00804		 |$LN44@BCI_Initia|
  00804	e3a03000	 mov         r3, #0
  00808	e58d30dc	 str         r3, [sp, #0xDC]
  0080c		 |$LN45@BCI_Initia|

; 1241 :         goto cleanUp;

  0080c	ea000118	 b           |$cleanUp$44172|
  00810		 |$LN8@BCI_Initia|

; 1242 :         }
; 1243 :  
; 1244 :     size=sizeof(m_dwTempSel);

  00810	e3a03004	 mov         r3, #4
  00814	e58d301c	 str         r3, [sp, #0x1C]

; 1245 :     if (ERROR_SUCCESS != RegQueryValueEx(hKey, L"HotDieTempSel", 0, &dwType, (BYTE*)&m_dwTempSel, &size))

  00818	e28d301c	 add         r3, sp, #0x1C
  0081c	e58d3004	 str         r3, [sp, #4]
  00820	e28d3020	 add         r3, sp, #0x20
  00824	e58d3000	 str         r3, [sp]
  00828	e28d300c	 add         r3, sp, #0xC
  0082c	e3a02000	 mov         r2, #0
  00830	e59f14d8	 ldr         r1, [pc, #0x4D8]
  00834	e59d0014	 ldr         r0, [sp, #0x14]
  00838	eb000000	 bl          RegQueryValueExW
  0083c	e58d00e0	 str         r0, [sp, #0xE0]
  00840	e59d30e0	 ldr         r3, [sp, #0xE0]
  00844	e3530000	 cmp         r3, #0
  00848	0a00000d	 beq         |$LN7@BCI_Initia|

; 1246 :         {
; 1247 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: BCI_Initialize: "
; 1248 :             L"Failed to read HotDieTempSel configuration in Battery registry!\r\n"
; 1249 :             ));

  0084c	e59f3484	 ldr         r3, [pc, #0x484]
  00850	e5933440	 ldr         r3, [r3, #0x440]
  00854	e3130001	 tst         r3, #1
  00858	0a000004	 beq         |$LN46@BCI_Initia|
  0085c	e59f04a8	 ldr         r0, [pc, #0x4A8]
  00860	eb000000	 bl          NKDbgPrintfW
  00864	e3a03001	 mov         r3, #1
  00868	e58d30e4	 str         r3, [sp, #0xE4]
  0086c	ea000001	 b           |$LN47@BCI_Initia|
  00870		 |$LN46@BCI_Initia|
  00870	e3a03000	 mov         r3, #0
  00874	e58d30e4	 str         r3, [sp, #0xE4]
  00878		 |$LN47@BCI_Initia|

; 1250 :         RegCloseKey(hKey);

  00878	e59d0014	 ldr         r0, [sp, #0x14]
  0087c	eb000000	 bl          RegCloseKey

; 1251 :         goto cleanUp;

  00880	ea0000fb	 b           |$cleanUp$44172|
  00884		 |$LN7@BCI_Initia|

; 1252 :         }
; 1253 :         RegCloseKey(hKey);

  00884	e59d0014	 ldr         r0, [sp, #0x14]
  00888	eb000000	 bl          RegCloseKey

; 1254 :     
; 1255 :     //Configure the hot-die detector for operation in its lowest temperature range
; 1256 :     TWLReadRegs(pDevice->hTwl, TWL_MISC_CFG , &regval, sizeof(regval));

  0088c	e3a03001	 mov         r3, #1
  00890	e28d2010	 add         r2, sp, #0x10
  00894	e3a01803	 mov         r1, #3, 16
  00898	e3811068	 orr         r1, r1, #0x68
  0089c	e59d0008	 ldr         r0, [sp, #8]
  008a0	e2800018	 add         r0, r0, #0x18
  008a4	e5900000	 ldr         r0, [r0]
  008a8	eb000000	 bl          TWLReadRegs

; 1257 :     regval |=(((UINT8)m_dwTempSel)<<6);

  008ac	e59d3020	 ldr         r3, [sp, #0x20]
  008b0	e20330ff	 and         r3, r3, #0xFF
  008b4	e1a02303	 mov         r2, r3, lsl #6
  008b8	e5dd3010	 ldrb        r3, [sp, #0x10]
  008bc	e1833002	 orr         r3, r3, r2
  008c0	e20330ff	 and         r3, r3, #0xFF
  008c4	e5cd3010	 strb        r3, [sp, #0x10]

; 1258 :     TWLWriteRegs(pDevice->hTwl, TWL_MISC_CFG , &regval, sizeof(regval));

  008c8	e3a03001	 mov         r3, #1
  008cc	e28d2010	 add         r2, sp, #0x10
  008d0	e3a01803	 mov         r1, #3, 16
  008d4	e3811068	 orr         r1, r1, #0x68
  008d8	e59d0008	 ldr         r0, [sp, #8]
  008dc	e2800018	 add         r0, r0, #0x18
  008e0	e5900000	 ldr         r0, [r0]
  008e4	eb000000	 bl          TWLWriteRegs

; 1259 : 
; 1260 :     //Ensure that the hot-die interrupt in _int1  is not masked
; 1261 :     TWLReadRegs(pDevice->hTwl, TWL_PWR_IMR1 , &regval, sizeof(regval)); 

  008e8	e3a03001	 mov         r3, #1
  008ec	e28d2010	 add         r2, sp, #0x10
  008f0	e3a01803	 mov         r1, #3, 16
  008f4	e381102f	 orr         r1, r1, #0x2F
  008f8	e59d0008	 ldr         r0, [sp, #8]
  008fc	e2800018	 add         r0, r0, #0x18
  00900	e5900000	 ldr         r0, [r0]
  00904	eb000000	 bl          TWLReadRegs

; 1262 :     regval &=~(HOT_DIE_MASK_INT);

  00908	e5dd3010	 ldrb        r3, [sp, #0x10]
  0090c	e1a02003	 mov         r2, r3
  00910	e3e03010	 mvn         r3, #0x10
  00914	e0023003	 and         r3, r2, r3
  00918	e20330ff	 and         r3, r3, #0xFF
  0091c	e5cd3010	 strb        r3, [sp, #0x10]

; 1263 :     TWLWriteRegs(pDevice->hTwl, TWL_PWR_IMR1 , &regval, sizeof(regval));

  00920	e3a03001	 mov         r3, #1
  00924	e28d2010	 add         r2, sp, #0x10
  00928	e3a01803	 mov         r1, #3, 16
  0092c	e381102f	 orr         r1, r1, #0x2F
  00930	e59d0008	 ldr         r0, [sp, #8]
  00934	e2800018	 add         r0, r0, #0x18
  00938	e5900000	 ldr         r0, [r0]
  0093c	eb000000	 bl          TWLWriteRegs

; 1264 : 
; 1265 :     //Ensure that the hot-die interrupt in _int2 is masked
; 1266 :     TWLReadRegs(pDevice->hTwl, TWL_PWR_IMR2 , &regval, sizeof(regval)); 

  00940	e3a03001	 mov         r3, #1
  00944	e28d2010	 add         r2, sp, #0x10
  00948	e3a01803	 mov         r1, #3, 16
  0094c	e3811031	 orr         r1, r1, #0x31
  00950	e59d0008	 ldr         r0, [sp, #8]
  00954	e2800018	 add         r0, r0, #0x18
  00958	e5900000	 ldr         r0, [r0]
  0095c	eb000000	 bl          TWLReadRegs

; 1267 :     regval |=HOT_DIE_MASK_INT;

  00960	e5dd3010	 ldrb        r3, [sp, #0x10]
  00964	e3833010	 orr         r3, r3, #0x10
  00968	e20330ff	 and         r3, r3, #0xFF
  0096c	e5cd3010	 strb        r3, [sp, #0x10]

; 1268 :     TWLWriteRegs(pDevice->hTwl, TWL_PWR_IMR2 , &regval, sizeof(regval));

  00970	e3a03001	 mov         r3, #1
  00974	e28d2010	 add         r2, sp, #0x10
  00978	e3a01803	 mov         r1, #3, 16
  0097c	e3811031	 orr         r1, r1, #0x31
  00980	e59d0008	 ldr         r0, [sp, #8]
  00984	e2800018	 add         r0, r0, #0x18
  00988	e5900000	 ldr         r0, [r0]
  0098c	eb000000	 bl          TWLWriteRegs

; 1269 : 
; 1270 :     //Ensure that the hot-die detector rising and falling threshold is active
; 1271 :     TWLReadRegs(pDevice->hTwl, TWL_PWR_EDR2 , &regval, sizeof(regval));

  00990	e3a03001	 mov         r3, #1
  00994	e28d2010	 add         r2, sp, #0x10
  00998	e3a01803	 mov         r1, #3, 16
  0099c	e3811034	 orr         r1, r1, #0x34
  009a0	e59d0008	 ldr         r0, [sp, #8]
  009a4	e2800018	 add         r0, r0, #0x18
  009a8	e5900000	 ldr         r0, [r0]
  009ac	eb000000	 bl          TWLReadRegs

; 1272 :     regval |=HOT_DIE_RISING | HOT_DIE_FALLING;

  009b0	e5dd3010	 ldrb        r3, [sp, #0x10]
  009b4	e3833003	 orr         r3, r3, #3
  009b8	e20330ff	 and         r3, r3, #0xFF
  009bc	e5cd3010	 strb        r3, [sp, #0x10]

; 1273 :     TWLWriteRegs(pDevice->hTwl, TWL_PWR_EDR2 , &regval, sizeof(regval));

  009c0	e3a03001	 mov         r3, #1
  009c4	e28d2010	 add         r2, sp, #0x10
  009c8	e3a01803	 mov         r1, #3, 16
  009cc	e3811034	 orr         r1, r1, #0x34
  009d0	e59d0008	 ldr         r0, [sp, #8]
  009d4	e2800018	 add         r0, r0, #0x18
  009d8	e5900000	 ldr         r0, [r0]
  009dc	eb000000	 bl          TWLWriteRegs

; 1274 : 
; 1275 :     // Create interrupt event
; 1276 :     pDevice->rgIntrEvents[EVENT_HOTDIE]=CreateEvent(NULL, FALSE, FALSE, NULL);

  009e0	e3a03000	 mov         r3, #0
  009e4	e3a02000	 mov         r2, #0
  009e8	e3a01000	 mov         r1, #0
  009ec	e3a00000	 mov         r0, #0
  009f0	eb000000	 bl          CreateEventW
  009f4	e58d00e8	 str         r0, [sp, #0xE8]
  009f8	e59d3008	 ldr         r3, [sp, #8]
  009fc	e2832030	 add         r2, r3, #0x30
  00a00	e59d30e8	 ldr         r3, [sp, #0xE8]
  00a04	e5823000	 str         r3, [r2]

; 1277 :     if (pDevice->rgIntrEvents[EVENT_HOTDIE]== NULL)

  00a08	e59d3008	 ldr         r3, [sp, #8]
  00a0c	e2833030	 add         r3, r3, #0x30
  00a10	e5933000	 ldr         r3, [r3]
  00a14	e3530000	 cmp         r3, #0
  00a18	1a00000b	 bne         |$LN6@BCI_Initia|

; 1278 :         {
; 1279 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: BCI_Initialize: "
; 1280 :             L"Failed create interrupt Power (Hot die) event\r\n"
; 1281 :             ));

  00a1c	e59f32b4	 ldr         r3, [pc, #0x2B4]
  00a20	e5933440	 ldr         r3, [r3, #0x440]
  00a24	e3130001	 tst         r3, #1
  00a28	0a000004	 beq         |$LN48@BCI_Initia|
  00a2c	e59f02d4	 ldr         r0, [pc, #0x2D4]
  00a30	eb000000	 bl          NKDbgPrintfW
  00a34	e3a03001	 mov         r3, #1
  00a38	e58d30ec	 str         r3, [sp, #0xEC]
  00a3c	ea000001	 b           |$LN49@BCI_Initia|
  00a40		 |$LN48@BCI_Initia|
  00a40	e3a03000	 mov         r3, #0
  00a44	e58d30ec	 str         r3, [sp, #0xEC]
  00a48		 |$LN49@BCI_Initia|

; 1282 :         
; 1283 :         goto cleanUp;

  00a48	ea000089	 b           |$cleanUp$44172|
  00a4c		 |$LN6@BCI_Initia|

; 1284 :         }
; 1285 : 
; 1286 :     // Create interrupt event
; 1287 :     hHotDieTriggerEvent_Test=CreateEvent(NULL, FALSE, FALSE, HOTDIETESTSIGNAL_NAMED_EVENT);

  00a4c	e59f32b0	 ldr         r3, [pc, #0x2B0]
  00a50	e3a02000	 mov         r2, #0
  00a54	e3a01000	 mov         r1, #0
  00a58	e3a00000	 mov         r0, #0
  00a5c	eb000000	 bl          CreateEventW
  00a60	e58d00f0	 str         r0, [sp, #0xF0]
  00a64	e59d20f0	 ldr         r2, [sp, #0xF0]
  00a68	e59f3290	 ldr         r3, [pc, #0x290]
  00a6c	e5832000	 str         r2, [r3]

; 1288 :     if (hHotDieTriggerEvent_Test== NULL)

  00a70	e59f3288	 ldr         r3, [pc, #0x288]
  00a74	e5933000	 ldr         r3, [r3]
  00a78	e3530000	 cmp         r3, #0
  00a7c	1a00000b	 bne         |$LN5@BCI_Initia|

; 1289 :         {
; 1290 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: BCI_Initialize: "
; 1291 :             L"Failed create interrupt Power (Hot die) event \r\n"
; 1292 :             ));

  00a80	e59f3250	 ldr         r3, [pc, #0x250]
  00a84	e5933440	 ldr         r3, [r3, #0x440]
  00a88	e3130001	 tst         r3, #1
  00a8c	0a000004	 beq         |$LN50@BCI_Initia|
  00a90	e59f0264	 ldr         r0, [pc, #0x264]
  00a94	eb000000	 bl          NKDbgPrintfW
  00a98	e3a03001	 mov         r3, #1
  00a9c	e58d30f4	 str         r3, [sp, #0xF4]
  00aa0	ea000001	 b           |$LN51@BCI_Initia|
  00aa4		 |$LN50@BCI_Initia|
  00aa4	e3a03000	 mov         r3, #0
  00aa8	e58d30f4	 str         r3, [sp, #0xF4]
  00aac		 |$LN51@BCI_Initia|

; 1293 :        
; 1294 :         goto cleanUp;

  00aac	ea000070	 b           |$cleanUp$44172|
  00ab0		 |$LN5@BCI_Initia|

; 1295 :         }
; 1296 :  
; 1297 :     // register for hot die interrupts
; 1298 :     if (!TWLInterruptInitialize(pDevice->hTwl, TWL_INTR_HOT_DIE, 
; 1299 :         pDevice->rgIntrEvents[EVENT_HOTDIE]))

  00ab0	e59d3008	 ldr         r3, [sp, #8]
  00ab4	e2833030	 add         r3, r3, #0x30
  00ab8	e5932000	 ldr         r2, [r3]
  00abc	e59f1230	 ldr         r1, [pc, #0x230]
  00ac0	e59d3008	 ldr         r3, [sp, #8]
  00ac4	e2833018	 add         r3, r3, #0x18
  00ac8	e5930000	 ldr         r0, [r3]
  00acc	eb000000	 bl          TWLInterruptInitialize
  00ad0	e58d00f8	 str         r0, [sp, #0xF8]
  00ad4	e59d30f8	 ldr         r3, [sp, #0xF8]
  00ad8	e3530000	 cmp         r3, #0
  00adc	1a00000b	 bne         |$LN4@BCI_Initia|

; 1300 :         {
; 1301 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: RTC_Init: "
; 1302 :             L"Failed associate event with TWL POWER (Hot die) interrupt\r\n"
; 1303 :             ));

  00ae0	e59f31f0	 ldr         r3, [pc, #0x1F0]
  00ae4	e5933440	 ldr         r3, [r3, #0x440]
  00ae8	e3130001	 tst         r3, #1
  00aec	0a000004	 beq         |$LN52@BCI_Initia|
  00af0	e59f0200	 ldr         r0, [pc, #0x200]
  00af4	eb000000	 bl          NKDbgPrintfW
  00af8	e3a03001	 mov         r3, #1
  00afc	e58d30fc	 str         r3, [sp, #0xFC]
  00b00	ea000001	 b           |$LN53@BCI_Initia|
  00b04		 |$LN52@BCI_Initia|
  00b04	e3a03000	 mov         r3, #0
  00b08	e58d30fc	 str         r3, [sp, #0xFC]
  00b0c		 |$LN53@BCI_Initia|

; 1304 :         goto cleanUp;

  00b0c	ea000058	 b           |$cleanUp$44172|
  00b10		 |$LN4@BCI_Initia|

; 1305 :         }
; 1306 :      
; 1307 :     // Enable RTC event
; 1308 :     if (!TWLInterruptMask(pDevice->hTwl, TWL_INTR_HOT_DIE, FALSE))

  00b10	e3a02000	 mov         r2, #0
  00b14	e59f11d8	 ldr         r1, [pc, #0x1D8]
  00b18	e59d3008	 ldr         r3, [sp, #8]
  00b1c	e2833018	 add         r3, r3, #0x18
  00b20	e5930000	 ldr         r0, [r3]
  00b24	eb000000	 bl          TWLInterruptMask
  00b28	e58d0100	 str         r0, [sp, #0x100]
  00b2c	e59d3100	 ldr         r3, [sp, #0x100]
  00b30	e3530000	 cmp         r3, #0
  00b34	1a00000b	 bne         |$LN3@BCI_Initia|

; 1309 :         {
; 1310 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: BCI_Initialize: "
; 1311 :             L"Failed to enable TWL POWER (Hot die)interrupt\r\n"
; 1312 :             ));

  00b38	e59f3198	 ldr         r3, [pc, #0x198]
  00b3c	e5933440	 ldr         r3, [r3, #0x440]
  00b40	e3130001	 tst         r3, #1
  00b44	0a000004	 beq         |$LN54@BCI_Initia|
  00b48	e59f01a0	 ldr         r0, [pc, #0x1A0]
  00b4c	eb000000	 bl          NKDbgPrintfW
  00b50	e3a03001	 mov         r3, #1
  00b54	e58d3104	 str         r3, [sp, #0x104]
  00b58	ea000001	 b           |$LN55@BCI_Initia|
  00b5c		 |$LN54@BCI_Initia|
  00b5c	e3a03000	 mov         r3, #0
  00b60	e58d3104	 str         r3, [sp, #0x104]
  00b64		 |$LN55@BCI_Initia|

; 1313 :         goto cleanUp;

  00b64	ea000042	 b           |$cleanUp$44172|
  00b68		 |$LN3@BCI_Initia|

; 1314 :         }   
; 1315 : 
; 1316 : 
; 1317 :     // Start interrupt service thread
; 1318 :     pDevice->threadsExit = FALSE;

  00b68	e59d3008	 ldr         r3, [sp, #8]
  00b6c	e283203c	 add         r2, r3, #0x3C
  00b70	e3a03000	 mov         r3, #0
  00b74	e5823000	 str         r3, [r2]

; 1319 :     pDevice->hIntrThread = CreateThread(
; 1320 :         NULL, 0, IntrThread, pDevice, 0,NULL
; 1321 :         );

  00b78	e3a03000	 mov         r3, #0
  00b7c	e58d3004	 str         r3, [sp, #4]
  00b80	e3a03000	 mov         r3, #0
  00b84	e58d3000	 str         r3, [sp]
  00b88	e59d3008	 ldr         r3, [sp, #8]
  00b8c	e59f2158	 ldr         r2, [pc, #0x158]
  00b90	e3a01000	 mov         r1, #0
  00b94	e3a00000	 mov         r0, #0
  00b98	eb000000	 bl          CreateThread
  00b9c	e58d0108	 str         r0, [sp, #0x108]
  00ba0	e59d3008	 ldr         r3, [sp, #8]
  00ba4	e2832024	 add         r2, r3, #0x24
  00ba8	e59d3108	 ldr         r3, [sp, #0x108]
  00bac	e5823000	 str         r3, [r2]

; 1322 :     if (!pDevice->hIntrThread)

  00bb0	e59d3008	 ldr         r3, [sp, #8]
  00bb4	e2833024	 add         r3, r3, #0x24
  00bb8	e5933000	 ldr         r3, [r3]
  00bbc	e3530000	 cmp         r3, #0
  00bc0	1a00000b	 bne         |$LN2@BCI_Initia|

; 1323 :         {
; 1324 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: BCI_Initialize: "
; 1325 :             L"Failed create interrupt thread\r\n"
; 1326 :             ));

  00bc4	e59f310c	 ldr         r3, [pc, #0x10C]
  00bc8	e5933440	 ldr         r3, [r3, #0x440]
  00bcc	e3130001	 tst         r3, #1
  00bd0	0a000004	 beq         |$LN56@BCI_Initia|
  00bd4	e59f010c	 ldr         r0, [pc, #0x10C]
  00bd8	eb000000	 bl          NKDbgPrintfW
  00bdc	e3a03001	 mov         r3, #1
  00be0	e58d310c	 str         r3, [sp, #0x10C]
  00be4	ea000001	 b           |$LN57@BCI_Initia|
  00be8		 |$LN56@BCI_Initia|
  00be8	e3a03000	 mov         r3, #0
  00bec	e58d310c	 str         r3, [sp, #0x10C]
  00bf0		 |$LN57@BCI_Initia|

; 1327 :         goto cleanUp;

  00bf0	ea00001f	 b           |$cleanUp$44172|
  00bf4		 |$LN2@BCI_Initia|

; 1328 :         }
; 1329 : 
; 1330 :     // Set thread priority
; 1331 :     pDevice->priority256 = 130;

  00bf4	e59d3008	 ldr         r3, [sp, #8]
  00bf8	e2832040	 add         r2, r3, #0x40
  00bfc	e3a03082	 mov         r3, #0x82
  00c00	e5823000	 str         r3, [r2]

; 1332 :     CeSetThreadPriority(pDevice->hIntrThread, pDevice->priority256); 

  00c04	e59d3008	 ldr         r3, [sp, #8]
  00c08	e2833040	 add         r3, r3, #0x40
  00c0c	e5931000	 ldr         r1, [r3]
  00c10	e59d3008	 ldr         r3, [sp, #8]
  00c14	e2833024	 add         r3, r3, #0x24
  00c18	e5930000	 ldr         r0, [r3]
  00c1c	eb000000	 bl          CeSetThreadPriority

; 1333 : 
; 1334 :     // set threshold values to default
; 1335 :     pDevice->dwACCHGOVTH = _rgACCHGOVTH[ACCHGOVTH_DEFAULT];

  00c20	e59d3008	 ldr         r3, [sp, #8]
  00c24	e2832044	 add         r2, r3, #0x44
  00c28	e59f30b4	 ldr         r3, [pc, #0xB4]
  00c2c	e5933008	 ldr         r3, [r3, #8]
  00c30	e5823000	 str         r3, [r2]

; 1336 :     pDevice->dwVBATOVTH = _rgVBATOVTH[VBATOVTH_DEFAULT];

  00c34	e59d3008	 ldr         r3, [sp, #8]
  00c38	e2832048	 add         r2, r3, #0x48
  00c3c	e59f309c	 ldr         r3, [pc, #0x9C]
  00c40	e5933000	 ldr         r3, [r3]
  00c44	e5823000	 str         r3, [r2]

; 1337 :     pDevice->dwVBUSOVTH = _rgVBUSOVTH[VBUSOVTH_DEFAULT];

  00c48	e59d3008	 ldr         r3, [sp, #8]
  00c4c	e283204c	 add         r2, r3, #0x4C
  00c50	e59f3084	 ldr         r3, [pc, #0x84]
  00c54	e5933000	 ldr         r3, [r3]
  00c58	e5823000	 str         r3, [r2]

; 1338 : 
; 1339 :     // force update of battery state
; 1340 :     PulseEvent(pDevice->rgIntrEvents[EVENT_BCI]); 

  00c5c	e59d3008	 ldr         r3, [sp, #8]
  00c60	e283302c	 add         r3, r3, #0x2C
  00c64	e5930000	 ldr         r0, [r3]
  00c68	eb000000	 bl          PulseEvent

; 1341 : 
; 1342 :     bSuccess = TRUE;

  00c6c	e3a03001	 mov         r3, #1
  00c70	e58d3018	 str         r3, [sp, #0x18]
  00c74		 |$cleanUp$44172|

; 1343 : 
; 1344 : cleanUp:
; 1345 : 
; 1346 :     if (bSuccess == FALSE) 

  00c74	e59d3018	 ldr         r3, [sp, #0x18]
  00c78	e3530000	 cmp         r3, #0
  00c7c	1a000003	 bne         |$LN1@BCI_Initia|

; 1347 :         {
; 1348 :         BCI_Uninitialize(pDevice);

  00c80	e59d0008	 ldr         r0, [sp, #8]
  00c84	eb000000	 bl          BCI_Uninitialize

; 1349 :         pDevice = NULL;

  00c88	e3a03000	 mov         r3, #0
  00c8c	e58d3008	 str         r3, [sp, #8]
  00c90		 |$LN1@BCI_Initia|

; 1350 :         }
; 1351 : 
; 1352 :     DEBUGMSG(ZONE_FUNCTION, (L"-BCI_Initialize()\r\n"));    

  00c90	e59f3040	 ldr         r3, [pc, #0x40]
  00c94	e5933440	 ldr         r3, [r3, #0x440]
  00c98	e3130080	 tst         r3, #0x80
  00c9c	0a000004	 beq         |$LN58@BCI_Initia|
  00ca0	e59f002c	 ldr         r0, [pc, #0x2C]
  00ca4	eb000000	 bl          NKDbgPrintfW
  00ca8	e3a03001	 mov         r3, #1
  00cac	e58d3110	 str         r3, [sp, #0x110]
  00cb0	ea000001	 b           |$LN59@BCI_Initia|
  00cb4		 |$LN58@BCI_Initia|
  00cb4	e3a03000	 mov         r3, #0
  00cb8	e58d3110	 str         r3, [sp, #0x110]
  00cbc		 |$LN59@BCI_Initia|

; 1353 :     return (HANDLE)pDevice;

  00cbc	e59d3008	 ldr         r3, [sp, #8]
  00cc0	e58d3038	 str         r3, [sp, #0x38]

; 1354 : }

  00cc4	e59d0038	 ldr         r0, [sp, #0x38]
  00cc8	e28ddf45	 add         sp, sp, #0x45, 30
  00ccc	e89d6000	 ldmia       sp, {sp, lr}
  00cd0	e12fff1e	 bx          lr
  00cd4		 |$LN63@BCI_Initia|
  00cd4		 |$LN64@BCI_Initia|
  00cd4	00000000	 DCD         |??_C@_1CI@FDBBBNAG@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00cd8		 |$LN65@BCI_Initia|
  00cd8	00000000	 DCD         |dpCurSettings|
  00cdc		 |$LN66@BCI_Initia|
  00cdc	00000000	 DCD         |_rgVBUSOVTH|
  00ce0		 |$LN67@BCI_Initia|
  00ce0	00000000	 DCD         |_rgVBATOVTH|
  00ce4		 |$LN68@BCI_Initia|
  00ce4	00000000	 DCD         |_rgACCHGOVTH|
  00ce8		 |$LN69@BCI_Initia|
  00ce8	00000000	 DCD         |??_C@_1HA@NOHBJKLB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAc?$AAr@|
  00cec		 |$LN70@BCI_Initia|
  00cec	00000000	 DCD         |IntrThread|
  00cf0		 |$LN71@BCI_Initia|
  00cf0	00000000	 DCD         |??_C@_1IO@CNEJLJML@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo@|
  00cf4		 |$LN72@BCI_Initia|
  00cf4	04005004	 DCD         0x4005004
  00cf8		 |$LN73@BCI_Initia|
  00cf8	00000000	 DCD         |??_C@_1JK@MMGJDJGF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAR?$AAT?$AAC?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAs?$AAs?$AAo?$AAc?$AAi?$AAa?$AAt@|
  00cfc		 |$LN74@BCI_Initia|
  00cfc	00000000	 DCD         |??_C@_1JA@OFPOJJMP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAc?$AAr@|
  00d00		 |$LN75@BCI_Initia|
  00d00	00000000	 DCD         |hHotDieTriggerEvent_Test|
  00d04		 |$LN76@BCI_Initia|
  00d04	00000000	 DCD         |??_C@_1BK@IPMNAFIC@?$AAH?$AAo?$AAt?$AAD?$AAi?$AAe?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AA?$AA@|
  00d08		 |$LN77@BCI_Initia|
  00d08	00000000	 DCD         |??_C@_1IO@EPJCJJGB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAc?$AAr@|
  00d0c		 |$LN78@BCI_Initia|
  00d0c	00000000	 DCD         |??_C@_1LC@JAINGOGC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo@|
  00d10		 |$LN79@BCI_Initia|
  00d10	00000000	 DCD         |??_C@_1BM@PDHJOICM@?$AAH?$AAo?$AAt?$AAD?$AAi?$AAe?$AAT?$AAe?$AAm?$AAp?$AAS?$AAe?$AAl?$AA?$AA@|
  00d14		 |$LN80@BCI_Initia|
  00d14	00000000	 DCD         |??_C@_1HE@OHGNNGGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo@|
  00d18		 |$LN81@BCI_Initia|
  00d18	00000000	 DCD         |??_C@_1DA@LPGHDBOE@?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?2?$AAB?$AAu?$AAi?$AAl?$AAt?$AAI?$AAn?$AA?2?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AA?$AA@|
  00d1c		 |$LN82@BCI_Initia|
  00d1c	00000000	 DCD         |??_C@_1HI@DGOKHBPG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo@|
  00d20		 |$LN83@BCI_Initia|
  00d20	03012013	 DCD         0x3012013
  00d24		 |$LN84@BCI_Initia|
  00d24	02012012	 DCD         0x2012012
  00d28		 |$LN85@BCI_Initia|
  00d28	01012011	 DCD         0x1012011
  00d2c		 |$LN86@BCI_Initia|
  00d2c	0700200f	 DCD         0x700200f
  00d30		 |$LN87@BCI_Initia|
  00d30	0600200e	 DCD         0x600200e
  00d34		 |$LN88@BCI_Initia|
  00d34	0500200d	 DCD         0x500200d
  00d38		 |$LN89@BCI_Initia|
  00d38	0400200c	 DCD         0x400200c
  00d3c		 |$LN90@BCI_Initia|
  00d3c	0300200b	 DCD         0x300200b
  00d40		 |$LN91@BCI_Initia|
  00d40	0200200a	 DCD         0x200200a
  00d44		 |$LN92@BCI_Initia|
  00d44	00000000	 DCD         |??_C@_1IO@NMAOCDDC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAs@|
  00d48		 |$LN93@BCI_Initia|
  00d48	00000000	 DCD         |??_C@_1HM@IPEGJDBO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo@|
  00d4c		 |$LN94@BCI_Initia|
  00d4c	01005001	 DCD         0x1005001
  00d50		 |$LN95@BCI_Initia|
  00d50	00000000	 DCD         |??_C@_1JC@GDJMCNBP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAs@|
  00d54		 |$LN96@BCI_Initia|
  00d54	00000000	 DCD         |??_C@_1HG@OPCJPNIN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAc?$AAr@|
  00d58		 |$LN97@BCI_Initia|
  00d58	00000000	 DCD         |??_C@_1HK@FFGFCEBJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAc?$AAr@|
  00d5c		 |$LN98@BCI_Initia|
  00d5c	00000000	 DCD         |??_C@_1HO@DHEFNOFN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo@|
  00d60		 |$LN99@BCI_Initia|
  00d60	00000000	 DCD         |??_C@_1BM@IEEIFNBO@?$AAS?$AAS?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@|
  00d64		 |$LN100@BCI_Initia|
  00d64	00000000	 DCD         |??_C@_1HG@EDHDJAEL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo@|
  00d68		 |$LN101@BCI_Initia|
  00d68	00000000	 DCD         |??_C@_1HE@ONEELLOE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAp@|
  00d6c		 |$LN102@BCI_Initia|
  00d6c	00000000	 DCD         |??_C@_1GO@CKLNOEDL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl@|
  00d70		 |$LN103@BCI_Initia|
  00d70	00000000	 DCD         |??_C@_1CI@GGIHMBG@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00d74		 |$M44871|

			 ENDP  ; |BCI_Initialize|

	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T44920| DCD	|$LN5@PulseEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PulseEvent| PROC

; 211  : _inline BOOL PulseEvent(HANDLE h) {

  00000		 |$LN5@PulseEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M44917|

; 212  : 	return EventModify(h,EVENT_PULSE);

  00010	e3a01001	 mov         r1, #1
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 213  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M44918|

			 ENDP  ; |PulseEvent|

	EXPORT	|??_C@_1M@EPBPGMBG@?$AAA?$AAD?$AAC?$AA1?$AA?3?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|LocalFree|
	IMPORT	|DeviceIoControl|
	IMPORT	|CloseHandle|
	IMPORT	|CreateFileW|
; File c:\wince600\platform\common\src\soc\common_ti_v1\tps659xx\inc\madc.h

  00000			 AREA	 |.pdata|, PDATA
|$T44935| DCD	|$LN8@MADCOpen|
	DCD	0x40004702

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@EPBPGMBG@?$AAA?$AAD?$AAC?$AA1?$AA?3?$AA?$AA@| DCB "A", 0x0, "D", 0x0
	DCB	"C", 0x0, "1", 0x0, ":", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |MADCOpen| PROC

; 111  : {

  00000		 |$LN8@MADCOpen|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd044	 sub         sp, sp, #0x44
  00008		 |$M44932|

; 112  :     HANDLE hDevice;
; 113  :     DEVICE_CONTEXT_MADC *pContext = NULL;

  00008	e3a03000	 mov         r3, #0
  0000c	e58d3014	 str         r3, [sp, #0x14]

; 114  : 
; 115  :     hDevice = CreateFile(MADC_DEVICE_NAME, 0, 0, NULL, 0, 0, NULL);

  00010	e3a03000	 mov         r3, #0
  00014	e58d3008	 str         r3, [sp, #8]
  00018	e3a03000	 mov         r3, #0
  0001c	e58d3004	 str         r3, [sp, #4]
  00020	e3a03000	 mov         r3, #0
  00024	e58d3000	 str         r3, [sp]
  00028	e3a03000	 mov         r3, #0
  0002c	e3a02000	 mov         r2, #0
  00030	e3a01000	 mov         r1, #0
  00034	e59f00dc	 ldr         r0, [pc, #0xDC]
  00038	eb000000	 bl          CreateFileW
  0003c	e58d0038	 str         r0, [sp, #0x38]
  00040	e59d3038	 ldr         r3, [sp, #0x38]
  00044	e58d3010	 str         r3, [sp, #0x10]

; 116  :     if (hDevice == INVALID_HANDLE_VALUE) goto cleanUp;

  00048	e59d3010	 ldr         r3, [sp, #0x10]
  0004c	e3730001	 cmn         r3, #1
  00050	1a000000	 bne         |$LN3@MADCOpen|
  00054	ea000028	 b           |$cleanUp$43608|
  00058		 |$LN3@MADCOpen|

; 117  : 
; 118  :     // Allocate memory for our handler...
; 119  :     pContext = (DEVICE_CONTEXT_MADC*)LocalAlloc(
; 120  :         LPTR, sizeof(DEVICE_CONTEXT_MADC)
; 121  :         );

  00058	e3a01010	 mov         r1, #0x10
  0005c	e3a00040	 mov         r0, #0x40
  00060	eb000000	 bl          LocalAlloc
  00064	e58d003c	 str         r0, [sp, #0x3C]
  00068	e59d303c	 ldr         r3, [sp, #0x3C]
  0006c	e58d3014	 str         r3, [sp, #0x14]

; 122  :     if (pContext == NULL)

  00070	e59d3014	 ldr         r3, [sp, #0x14]
  00074	e3530000	 cmp         r3, #0
  00078	1a000002	 bne         |$LN2@MADCOpen|

; 123  :         {
; 124  :         CloseHandle(hDevice);

  0007c	e59d0010	 ldr         r0, [sp, #0x10]
  00080	eb000000	 bl          CloseHandle

; 125  :         goto cleanUp;

  00084	ea00001c	 b           |$cleanUp$43608|
  00088		 |$LN2@MADCOpen|

; 126  :         }
; 127  : 
; 128  :     // Get function pointers, fail when IOCTL isn't supported...
; 129  :     if (!DeviceIoControl(
; 130  :             hDevice, IOCTL_DDK_GET_DRIVER_IFC, (VOID*)&DEVICE_IFC_MADC_GUID,
; 131  :             sizeof(DEVICE_IFC_MADC_GUID), &pContext->ifc, sizeof(DEVICE_IFC_MADC),
; 132  :             NULL, NULL))

  00088	e3a03000	 mov         r3, #0
  0008c	e58d300c	 str         r3, [sp, #0xC]
  00090	e3a03000	 mov         r3, #0
  00094	e58d3008	 str         r3, [sp, #8]
  00098	e3a0300c	 mov         r3, #0xC
  0009c	e58d3004	 str         r3, [sp, #4]
  000a0	e59d3014	 ldr         r3, [sp, #0x14]
  000a4	e58d3000	 str         r3, [sp]
  000a8	e3a03010	 mov         r3, #0x10
  000ac	e59f2060	 ldr         r2, [pc, #0x60]
  000b0	e3a01822	 mov         r1, #0x22, 16
  000b4	e3811b01	 orr         r1, r1, #1, 22
  000b8	e59d0010	 ldr         r0, [sp, #0x10]
  000bc	eb000000	 bl          DeviceIoControl
  000c0	e58d0040	 str         r0, [sp, #0x40]
  000c4	e59d3040	 ldr         r3, [sp, #0x40]
  000c8	e3530000	 cmp         r3, #0
  000cc	1a000006	 bne         |$LN1@MADCOpen|

; 133  :         {
; 134  :         CloseHandle(hDevice);

  000d0	e59d0010	 ldr         r0, [sp, #0x10]
  000d4	eb000000	 bl          CloseHandle

; 135  :         LocalFree(pContext);

  000d8	e59d0014	 ldr         r0, [sp, #0x14]
  000dc	eb000000	 bl          LocalFree

; 136  :         pContext = NULL;

  000e0	e3a03000	 mov         r3, #0
  000e4	e58d3014	 str         r3, [sp, #0x14]

; 137  :         goto cleanUp;

  000e8	ea000003	 b           |$cleanUp$43608|
  000ec		 |$LN1@MADCOpen|

; 138  :         }
; 139  : 
; 140  :     // Save device handle
; 141  :     pContext->hDevice = hDevice;

  000ec	e59d3014	 ldr         r3, [sp, #0x14]
  000f0	e283200c	 add         r2, r3, #0xC
  000f4	e59d3010	 ldr         r3, [sp, #0x10]
  000f8	e5823000	 str         r3, [r2]
  000fc		 |$cleanUp$43608|

; 142  : 
; 143  : cleanUp:
; 144  :     return pContext;

  000fc	e59d3014	 ldr         r3, [sp, #0x14]
  00100	e58d3034	 str         r3, [sp, #0x34]

; 145  : }

  00104	e59d0034	 ldr         r0, [sp, #0x34]
  00108	e28dd044	 add         sp, sp, #0x44
  0010c	e49de004	 ldr         lr, [sp], #4
  00110	e12fff1e	 bx          lr
  00114		 |$LN9@MADCOpen|
  00114		 |$LN10@MADCOpen|
  00114	00000000	 DCD         |DEVICE_IFC_MADC_GUID|
  00118		 |$LN11@MADCOpen|
  00118	00000000	 DCD         |??_C@_1M@EPBPGMBG@?$AAA?$AAD?$AAC?$AA1?$AA?3?$AA?$AA@|
  0011c		 |$M44933|

			 ENDP  ; |MADCOpen|

	EXPORT	|??_C@_1CM@PFCMGAJB@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAU?$AAn?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|SetEvent|
	EXPORT	|??_C@_1EC@BHAPFGLA@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAU?$AAn?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?$CI?$AAh?$AAB?$AAC?$AAI?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	IMPORT	|DeleteCriticalSection|
	IMPORT	|TWLInterruptDisable|
	IMPORT	|WaitForSingleObject|

  00008			 AREA	 |.pdata|, PDATA
|$T44949| DCD	|$LN16@BCI_Uninit|
	DCD	0x4000c004
; File c:\wince600\platform\common\src\soc\common_ti_v1\tps659xx\bci\bci.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@PFCMGAJB@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAU?$AAn?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "U", 0x0, "n"
	DCB	0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, "(", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@BHAPFGLA@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAU?$AAn?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?$CI?$AAh?$AAB?$AAC?$AAI?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$CJ?$AA?$AN?$AA?6@| DCB "+"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "U", 0x0, "n"
	DCB	0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, "(", 0x0, "h"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  00d74			 AREA	 |.text|, CODE, ARM

  00d74		 |BCI_Uninitialize| PROC

; 1366 : {

  00d74		 |$LN16@BCI_Uninit|
  00d74	e1a0c00d	 mov         r12, sp
  00d78	e92d0001	 stmdb       sp!, {r0}
  00d7c	e92d5000	 stmdb       sp!, {r12, lr}
  00d80	e24dd00c	 sub         sp, sp, #0xC
  00d84		 |$M44946|

; 1367 :     Device_t *pDevice;
; 1368 :     DEBUGMSG(ZONE_FUNCTION, (L"+BCI_Uninitialize(hBCI=0x%08X)\r\n", hBCI));

  00d84	e59f32b0	 ldr         r3, [pc, #0x2B0]
  00d88	e5933440	 ldr         r3, [r3, #0x440]
  00d8c	e3130080	 tst         r3, #0x80
  00d90	0a000005	 beq         |$LN10@BCI_Uninit|
  00d94	e59d1014	 ldr         r1, [sp, #0x14]
  00d98	e59f02d0	 ldr         r0, [pc, #0x2D0]
  00d9c	eb000000	 bl          NKDbgPrintfW
  00da0	e3a03001	 mov         r3, #1
  00da4	e58d3004	 str         r3, [sp, #4]
  00da8	ea000001	 b           |$LN11@BCI_Uninit|
  00dac		 |$LN10@BCI_Uninit|
  00dac	e3a03000	 mov         r3, #0
  00db0	e58d3004	 str         r3, [sp, #4]
  00db4		 |$LN11@BCI_Uninit|

; 1369 : 
; 1370 :     // check for valid parameter
; 1371 :     if (hBCI == NULL) return;

  00db4	e59d3014	 ldr         r3, [sp, #0x14]
  00db8	e3530000	 cmp         r3, #0
  00dbc	1a000000	 bne         |$LN7@BCI_Uninit|
  00dc0	ea000099	 b           |$LN8@BCI_Uninit|
  00dc4		 |$LN7@BCI_Uninit|

; 1372 :     pDevice = (Device_t*)hBCI;

  00dc4	e59d3014	 ldr         r3, [sp, #0x14]
  00dc8	e58d3000	 str         r3, [sp]

; 1373 : 
; 1374 :     // Signal stop to threads
; 1375 :     pDevice->threadsExit = TRUE;

  00dcc	e59d3000	 ldr         r3, [sp]
  00dd0	e283203c	 add         r2, r3, #0x3C
  00dd4	e3a03001	 mov         r3, #1
  00dd8	e5823000	 str         r3, [r2]

; 1376 : 
; 1377 :     // Close interrupt thread
; 1378 :     if (pDevice->hIntrThread != NULL)

  00ddc	e59d3000	 ldr         r3, [sp]
  00de0	e2833024	 add         r3, r3, #0x24
  00de4	e5933000	 ldr         r3, [r3]
  00de8	e3530000	 cmp         r3, #0
  00dec	0a00000c	 beq         |$LN6@BCI_Uninit|

; 1379 :         {
; 1380 :         // Set event to wake it
; 1381 :         SetEvent(pDevice->rgIntrEvents[EVENT_BCI]);

  00df0	e59d3000	 ldr         r3, [sp]
  00df4	e283302c	 add         r3, r3, #0x2C
  00df8	e5930000	 ldr         r0, [r3]
  00dfc	eb000000	 bl          SetEvent

; 1382 :         // Wait until thread exits
; 1383 :         WaitForSingleObject(pDevice->hIntrThread, INFINITE);

  00e00	e3e01000	 mvn         r1, #0
  00e04	e59d3000	 ldr         r3, [sp]
  00e08	e2833024	 add         r3, r3, #0x24
  00e0c	e5930000	 ldr         r0, [r3]
  00e10	eb000000	 bl          WaitForSingleObject

; 1384 :         // Close handle
; 1385 :         CloseHandle(pDevice->hIntrThread);

  00e14	e59d3000	 ldr         r3, [sp]
  00e18	e2833024	 add         r3, r3, #0x24
  00e1c	e5930000	 ldr         r0, [r3]
  00e20	eb000000	 bl          CloseHandle
  00e24		 |$LN6@BCI_Uninit|

; 1386 :         }
; 1387 : 
; 1388 :     if (pDevice->hBattSignal != NULL)

  00e24	e59d3000	 ldr         r3, [sp]
  00e28	e2833020	 add         r3, r3, #0x20
  00e2c	e5933000	 ldr         r3, [r3]
  00e30	e3530000	 cmp         r3, #0
  00e34	0a000003	 beq         |$LN5@BCI_Uninit|

; 1389 :         {
; 1390 :         CloseHandle(pDevice->hBattSignal);

  00e38	e59d3000	 ldr         r3, [sp]
  00e3c	e2833020	 add         r3, r3, #0x20
  00e40	e5930000	 ldr         r0, [r3]
  00e44	eb000000	 bl          CloseHandle
  00e48		 |$LN5@BCI_Uninit|

; 1391 :         }
; 1392 : 
; 1393 :     // release allocated resources
; 1394 :     if (pDevice->rgIntrEvents[EVENT_BCI] != NULL)

  00e48	e59d3000	 ldr         r3, [sp]
  00e4c	e283302c	 add         r3, r3, #0x2C
  00e50	e5933000	 ldr         r3, [r3]
  00e54	e3530000	 cmp         r3, #0
  00e58	0a000036	 beq         |$LN4@BCI_Uninit|

; 1395 :         {
; 1396 :         // register for bci interrupts
; 1397 :         TWLInterruptDisable(pDevice->hTwl, TWL_INTR_ICHGHIGH);

  00e5c	e59f1208	 ldr         r1, [pc, #0x208]
  00e60	e59d3000	 ldr         r3, [sp]
  00e64	e2833018	 add         r3, r3, #0x18
  00e68	e5930000	 ldr         r0, [r3]
  00e6c	eb000000	 bl          TWLInterruptDisable

; 1398 :         TWLInterruptDisable(pDevice->hTwl, TWL_INTR_ICHGLOW);

  00e70	e59f11f0	 ldr         r1, [pc, #0x1F0]
  00e74	e59d3000	 ldr         r3, [sp]
  00e78	e2833018	 add         r3, r3, #0x18
  00e7c	e5930000	 ldr         r0, [r3]
  00e80	eb000000	 bl          TWLInterruptDisable

; 1399 :         TWLInterruptDisable(pDevice->hTwl, TWL_INTR_ICHGEOC);

  00e84	e59f11d8	 ldr         r1, [pc, #0x1D8]
  00e88	e59d3000	 ldr         r3, [sp]
  00e8c	e2833018	 add         r3, r3, #0x18
  00e90	e5930000	 ldr         r0, [r3]
  00e94	eb000000	 bl          TWLInterruptDisable

; 1400 :         TWLInterruptDisable(pDevice->hTwl, TWL_INTR_TBATOR2);

  00e98	e59f11c0	 ldr         r1, [pc, #0x1C0]
  00e9c	e59d3000	 ldr         r3, [sp]
  00ea0	e2833018	 add         r3, r3, #0x18
  00ea4	e5930000	 ldr         r0, [r3]
  00ea8	eb000000	 bl          TWLInterruptDisable

; 1401 :         TWLInterruptDisable(pDevice->hTwl, TWL_INTR_TBATOR1);

  00eac	e59f11a8	 ldr         r1, [pc, #0x1A8]
  00eb0	e59d3000	 ldr         r3, [sp]
  00eb4	e2833018	 add         r3, r3, #0x18
  00eb8	e5930000	 ldr         r0, [r3]
  00ebc	eb000000	 bl          TWLInterruptDisable

; 1402 :         TWLInterruptDisable(pDevice->hTwl, TWL_INTR_BATSTS);

  00ec0	e59f1190	 ldr         r1, [pc, #0x190]
  00ec4	e59d3000	 ldr         r3, [sp]
  00ec8	e2833018	 add         r3, r3, #0x18
  00ecc	e5930000	 ldr         r0, [r3]
  00ed0	eb000000	 bl          TWLInterruptDisable

; 1403 :         TWLInterruptDisable(pDevice->hTwl, TWL_INTR_VBATLVL);

  00ed4	e3a01a12	 mov         r1, #0x12, 20
  00ed8	e3811010	 orr         r1, r1, #0x10
  00edc	e59d3000	 ldr         r3, [sp]
  00ee0	e2833018	 add         r3, r3, #0x18
  00ee4	e5930000	 ldr         r0, [r3]
  00ee8	eb000000	 bl          TWLInterruptDisable

; 1404 :         TWLInterruptDisable(pDevice->hTwl, TWL_INTR_VBATOV);

  00eec	e59f1160	 ldr         r1, [pc, #0x160]
  00ef0	e59d3000	 ldr         r3, [sp]
  00ef4	e2833018	 add         r3, r3, #0x18
  00ef8	e5930000	 ldr         r0, [r3]
  00efc	eb000000	 bl          TWLInterruptDisable

; 1405 :         TWLInterruptDisable(pDevice->hTwl, TWL_INTR_VBUSOV);

  00f00	e59f1148	 ldr         r1, [pc, #0x148]
  00f04	e59d3000	 ldr         r3, [sp]
  00f08	e2833018	 add         r3, r3, #0x18
  00f0c	e5930000	 ldr         r0, [r3]
  00f10	eb000000	 bl          TWLInterruptDisable

; 1406 :         TWLInterruptDisable(pDevice->hTwl, TWL_INTR_ACCHGOV);

  00f14	e59f1130	 ldr         r1, [pc, #0x130]
  00f18	e59d3000	 ldr         r3, [sp]
  00f1c	e2833018	 add         r3, r3, #0x18
  00f20	e5930000	 ldr         r0, [r3]
  00f24	eb000000	 bl          TWLInterruptDisable

; 1407 :         CloseHandle(pDevice->rgIntrEvents[EVENT_BCI]);

  00f28	e59d3000	 ldr         r3, [sp]
  00f2c	e283302c	 add         r3, r3, #0x2C
  00f30	e5930000	 ldr         r0, [r3]
  00f34	eb000000	 bl          CloseHandle
  00f38		 |$LN4@BCI_Uninit|

; 1408 :         }
; 1409 : 
; 1410 :     if (pDevice->rgIntrEvents[EVENT_POWER] != NULL)

  00f38	e59d3000	 ldr         r3, [sp]
  00f3c	e2833028	 add         r3, r3, #0x28
  00f40	e5933000	 ldr         r3, [r3]
  00f44	e3530000	 cmp         r3, #0
  00f48	0a000009	 beq         |$LN3@BCI_Uninit|

; 1411 :         {
; 1412 :         TWLInterruptMask(pDevice->hTwl, TWL_INTR_CHG_PRES, TRUE);        

  00f4c	e3a02001	 mov         r2, #1
  00f50	e59f10f0	 ldr         r1, [pc, #0xF0]
  00f54	e59d3000	 ldr         r3, [sp]
  00f58	e2833018	 add         r3, r3, #0x18
  00f5c	e5930000	 ldr         r0, [r3]
  00f60	eb000000	 bl          TWLInterruptMask

; 1413 :         CloseHandle(pDevice->rgIntrEvents[EVENT_POWER]);

  00f64	e59d3000	 ldr         r3, [sp]
  00f68	e2833028	 add         r3, r3, #0x28
  00f6c	e5930000	 ldr         r0, [r3]
  00f70	eb000000	 bl          CloseHandle
  00f74		 |$LN3@BCI_Uninit|

; 1414 :         }
; 1415 : 
; 1416 :     if (pDevice->rgIntrEvents[EVENT_HOTDIE] != NULL)

  00f74	e59d3000	 ldr         r3, [sp]
  00f78	e2833030	 add         r3, r3, #0x30
  00f7c	e5933000	 ldr         r3, [r3]
  00f80	e3530000	 cmp         r3, #0
  00f84	0a00000e	 beq         |$LN2@BCI_Uninit|

; 1417 :         {
; 1418 :         TWLInterruptMask(pDevice->hTwl, TWL_INTR_HOT_DIE, TRUE);

  00f88	e3a02001	 mov         r2, #1
  00f8c	e59f10b0	 ldr         r1, [pc, #0xB0]
  00f90	e59d3000	 ldr         r3, [sp]
  00f94	e2833018	 add         r3, r3, #0x18
  00f98	e5930000	 ldr         r0, [r3]
  00f9c	eb000000	 bl          TWLInterruptMask

; 1419 :         // Unregister for Hot-Die detector interrupts
; 1420 :         TWLInterruptDisable(pDevice->hTwl, TWL_INTR_HOT_DIE);

  00fa0	e59f109c	 ldr         r1, [pc, #0x9C]
  00fa4	e59d3000	 ldr         r3, [sp]
  00fa8	e2833018	 add         r3, r3, #0x18
  00fac	e5930000	 ldr         r0, [r3]
  00fb0	eb000000	 bl          TWLInterruptDisable

; 1421 :         CloseHandle(pDevice->rgIntrEvents[EVENT_HOTDIE]);

  00fb4	e59d3000	 ldr         r3, [sp]
  00fb8	e2833030	 add         r3, r3, #0x30
  00fbc	e5930000	 ldr         r0, [r3]
  00fc0	eb000000	 bl          CloseHandle
  00fc4		 |$LN2@BCI_Uninit|

; 1422 :         }
; 1423 :     if (hHotDieTriggerEvent_Test!=NULL)

  00fc4	e59f3074	 ldr         r3, [pc, #0x74]
  00fc8	e5933000	 ldr         r3, [r3]
  00fcc	e3530000	 cmp         r3, #0
  00fd0	0a000002	 beq         |$LN1@BCI_Uninit|

; 1424 :         {
; 1425 :         CloseHandle(hHotDieTriggerEvent_Test);

  00fd4	e59f3064	 ldr         r3, [pc, #0x64]
  00fd8	e5930000	 ldr         r0, [r3]
  00fdc	eb000000	 bl          CloseHandle
  00fe0		 |$LN1@BCI_Uninit|

; 1426 :         }
; 1427 :     
; 1428 :     // close all handles
; 1429 :     CloseHandle(pDevice->hTwl);

  00fe0	e59d3000	 ldr         r3, [sp]
  00fe4	e2833018	 add         r3, r3, #0x18
  00fe8	e5930000	 ldr         r0, [r3]
  00fec	eb000000	 bl          CloseHandle

; 1430 : 
; 1431 :     // Delete critical section
; 1432 :     DeleteCriticalSection(&pDevice->cs);

  00ff0	e59d0000	 ldr         r0, [sp]
  00ff4	eb000000	 bl          DeleteCriticalSection

; 1433 : 
; 1434 :     LocalFree(pDevice);

  00ff8	e59d0000	 ldr         r0, [sp]
  00ffc	eb000000	 bl          LocalFree

; 1435 :     
; 1436 :     DEBUGMSG(ZONE_FUNCTION, (L"-BCI_Uninitialize()\r\n"));

  01000	e59f3034	 ldr         r3, [pc, #0x34]
  01004	e5933440	 ldr         r3, [r3, #0x440]
  01008	e3130080	 tst         r3, #0x80
  0100c	0a000004	 beq         |$LN12@BCI_Uninit|
  01010	e59f0020	 ldr         r0, [pc, #0x20]
  01014	eb000000	 bl          NKDbgPrintfW
  01018	e3a03001	 mov         r3, #1
  0101c	e58d3008	 str         r3, [sp, #8]
  01020	ea000001	 b           |$LN13@BCI_Uninit|
  01024		 |$LN12@BCI_Uninit|
  01024	e3a03000	 mov         r3, #0
  01028	e58d3008	 str         r3, [sp, #8]
  0102c		 |$LN13@BCI_Uninit|
  0102c		 |$LN8@BCI_Uninit|

; 1437 : }

  0102c	e28dd00c	 add         sp, sp, #0xC
  01030	e89d6000	 ldmia       sp, {sp, lr}
  01034	e12fff1e	 bx          lr
  01038		 |$LN17@BCI_Uninit|
  01038		 |$LN18@BCI_Uninit|
  01038	00000000	 DCD         |??_C@_1CM@PFCMGAJB@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAU?$AAn?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0103c		 |$LN19@BCI_Uninit|
  0103c	00000000	 DCD         |dpCurSettings|
  01040		 |$LN20@BCI_Uninit|
  01040	00000000	 DCD         |hHotDieTriggerEvent_Test|
  01044		 |$LN21@BCI_Uninit|
  01044	04005004	 DCD         0x4005004
  01048		 |$LN22@BCI_Uninit|
  01048	01005001	 DCD         0x1005001
  0104c		 |$LN23@BCI_Uninit|
  0104c	03012013	 DCD         0x3012013
  01050		 |$LN24@BCI_Uninit|
  01050	02012012	 DCD         0x2012012
  01054		 |$LN25@BCI_Uninit|
  01054	01012011	 DCD         0x1012011
  01058		 |$LN26@BCI_Uninit|
  01058	0700200f	 DCD         0x700200f
  0105c		 |$LN27@BCI_Uninit|
  0105c	0600200e	 DCD         0x600200e
  01060		 |$LN28@BCI_Uninit|
  01060	0500200d	 DCD         0x500200d
  01064		 |$LN29@BCI_Uninit|
  01064	0400200c	 DCD         0x400200c
  01068		 |$LN30@BCI_Uninit|
  01068	0300200b	 DCD         0x300200b
  0106c		 |$LN31@BCI_Uninit|
  0106c	0200200a	 DCD         0x200200a
  01070		 |$LN32@BCI_Uninit|
  01070	00000000	 DCD         |??_C@_1EC@BHAPFGLA@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAU?$AAn?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?$CI?$AAh?$AAB?$AAC?$AAI?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$CJ?$AA?$AN?$AA?6@|
  01074		 |$M44947|

			 ENDP  ; |BCI_Uninitialize|

; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T44971| DCD	|$LN5@SetEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M44968|

; 236  : 	return EventModify(h,EVENT_SET);

  00010	e3a01003	 mov         r1, #3
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 237  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M44969|

			 ENDP  ; |SetEvent|

	EXPORT	|MADCConvertToVolts|
	EXPORT	|MADCReadValue|
	EXPORT	|BCI_GetBatteryVoltage|

  00010			 AREA	 |.pdata|, PDATA
|$T44980| DCD	|$LN5@BCI_GetBat|
	DCD	0x40001e04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\tps659xx\bci\bci.c

  01074			 AREA	 |.text|, CODE, ARM

  01074		 |BCI_GetBatteryVoltage| PROC

; 1448 : {

  01074		 |$LN5@BCI_GetBat|
  01074	e1a0c00d	 mov         r12, sp
  01078	e92d0001	 stmdb       sp!, {r0}
  0107c	e92d5000	 stmdb       sp!, {r12, lr}
  01080	e24dd018	 sub         sp, sp, #0x18
  01084		 |$M44977|

; 1449 :     DWORD data = 0;

  01084	e3a03000	 mov         r3, #0
  01088	e58d300c	 str         r3, [sp, #0xC]

; 1450 :     DWORD volts;
; 1451 :     Device_t *pDevice = (Device_t*)hBCI;

  0108c	e59d3020	 ldr         r3, [sp, #0x20]
  01090	e58d3004	 str         r3, [sp, #4]

; 1452 :     
; 1453 :     // return current battery voltage
; 1454 :     MADCReadValue(pDevice->hMadc, MADC_CHANNEL_BCI4, &data, 1);

  01094	e3a03001	 mov         r3, #1
  01098	e28d200c	 add         r2, sp, #0xC
  0109c	e3a01601	 mov         r1, #1, 12
  010a0	e59d0004	 ldr         r0, [sp, #4]
  010a4	e280001c	 add         r0, r0, #0x1C
  010a8	e5900000	 ldr         r0, [r0]
  010ac	eb000000	 bl          MADCReadValue

; 1455 :     MADCConvertToVolts(pDevice->hMadc, MADC_CHANNEL_BCI4, &data, &volts, 1);

  010b0	e3a03001	 mov         r3, #1
  010b4	e58d3000	 str         r3, [sp]
  010b8	e28d3008	 add         r3, sp, #8
  010bc	e28d200c	 add         r2, sp, #0xC
  010c0	e3a01601	 mov         r1, #1, 12
  010c4	e59d0004	 ldr         r0, [sp, #4]
  010c8	e280001c	 add         r0, r0, #0x1C
  010cc	e5900000	 ldr         r0, [r0]
  010d0	eb000000	 bl          MADCConvertToVolts

; 1456 : 
; 1457 :     return volts;

  010d4	e59d3008	 ldr         r3, [sp, #8]
  010d8	e58d3014	 str         r3, [sp, #0x14]

; 1458 : }

  010dc	e59d0014	 ldr         r0, [sp, #0x14]
  010e0	e28dd018	 add         sp, sp, #0x18
  010e4	e89d6000	 ldmia       sp, {sp, lr}
  010e8	e12fff1e	 bx          lr
  010ec		 |$M44978|

			 ENDP  ; |BCI_GetBatteryVoltage|

; File c:\wince600\platform\common\src\soc\common_ti_v1\tps659xx\inc\madc.h

  00000			 AREA	 |.pdata|, PDATA
|$T44986| DCD	|$LN5@MADCReadVa|
	DCD	0x40001704
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |MADCReadValue| PROC

; 166  : {

  00000		 |$LN5@MADCReadVa|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5010	 stmdb       sp!, {r4, r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M44983|

; 167  :     DEVICE_CONTEXT_MADC *pContext = (DEVICE_CONTEXT_MADC*)hContext;

  00010	e59d3018	 ldr         r3, [sp, #0x18]
  00014	e58d3000	 str         r3, [sp]

; 168  :     return pContext->ifc.pfnReadValue(
; 169  :         pContext->ifc.context, mask, pdwResults, size
; 170  :         );

  00018	e59d3024	 ldr         r3, [sp, #0x24]
  0001c	e59d2020	 ldr         r2, [sp, #0x20]
  00020	e59d101c	 ldr         r1, [sp, #0x1C]
  00024	e59d0000	 ldr         r0, [sp]
  00028	e5900000	 ldr         r0, [r0]
  0002c	e59de000	 ldr         lr, [sp]
  00030	e28ee004	 add         lr, lr, #4
  00034	e59e4000	 ldr         r4, [lr]
  00038	e1a0e00f	 mov         lr, pc
  0003c	e12fff14	 bx          r4
  00040	e58d0008	 str         r0, [sp, #8]
  00044	e59d3008	 ldr         r3, [sp, #8]
  00048	e58d3004	 str         r3, [sp, #4]

; 171  : }

  0004c	e59d0004	 ldr         r0, [sp, #4]
  00050	e28dd00c	 add         sp, sp, #0xC
  00054	e89d6010	 ldmia       sp, {r4, sp, lr}
  00058	e12fff1e	 bx          lr
  0005c		 |$M44984|

			 ENDP  ; |MADCReadValue|


  00000			 AREA	 |.pdata|, PDATA
|$T44995| DCD	|$LN5@MADCConver|
	DCD	0x40001904
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |MADCConvertToVolts| PROC

; 183  : {

  00000		 |$LN5@MADCConver|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5010	 stmdb       sp!, {r4, r12, lr}
  0000c	e24dd014	 sub         sp, sp, #0x14
  00010		 |$M44992|

; 184  :     DEVICE_CONTEXT_MADC *pContext = (DEVICE_CONTEXT_MADC*)hContext;

  00010	e59d3020	 ldr         r3, [sp, #0x20]
  00014	e58d3004	 str         r3, [sp, #4]

; 185  :     return pContext->ifc.pfnConvertToVolts(
; 186  :         pContext->ifc.context, channel, pdwValues, pResults, count
; 187  :         );

  00018	e59d3030	 ldr         r3, [sp, #0x30]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d302c	 ldr         r3, [sp, #0x2C]
  00024	e59d2028	 ldr         r2, [sp, #0x28]
  00028	e59d1024	 ldr         r1, [sp, #0x24]
  0002c	e59d0004	 ldr         r0, [sp, #4]
  00030	e5900000	 ldr         r0, [r0]
  00034	e59de004	 ldr         lr, [sp, #4]
  00038	e28ee008	 add         lr, lr, #8
  0003c	e59e4000	 ldr         r4, [lr]
  00040	e1a0e00f	 mov         lr, pc
  00044	e12fff14	 bx          r4
  00048	e58d0010	 str         r0, [sp, #0x10]
  0004c	e59d3010	 ldr         r3, [sp, #0x10]
  00050	e58d300c	 str         r3, [sp, #0xC]

; 188  : }

  00054	e59d000c	 ldr         r0, [sp, #0xC]
  00058	e28dd014	 add         sp, sp, #0x14
  0005c	e89d6010	 ldmia       sp, {r4, sp, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M44993|

			 ENDP  ; |MADCConvertToVolts|

	EXPORT	|BCI_GetBatteryTemperature|

  00018			 AREA	 |.pdata|, PDATA
|$T45004| DCD	|$LN5@BCI_GetBat@2|
	DCD	0x40001e04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\tps659xx\bci\bci.c

  010ec			 AREA	 |.text|, CODE, ARM

  010ec		 |BCI_GetBatteryTemperature| PROC

; 1469 : {

  010ec		 |$LN5@BCI_GetBat@2|
  010ec	e1a0c00d	 mov         r12, sp
  010f0	e92d0001	 stmdb       sp!, {r0}
  010f4	e92d5000	 stmdb       sp!, {r12, lr}
  010f8	e24dd018	 sub         sp, sp, #0x18
  010fc		 |$M45001|

; 1470 :     DWORD data = 0;

  010fc	e3a03000	 mov         r3, #0
  01100	e58d300c	 str         r3, [sp, #0xC]

; 1471 :     DWORD temp;
; 1472 :     Device_t *pDevice = (Device_t*)hBCI;

  01104	e59d3020	 ldr         r3, [sp, #0x20]
  01108	e58d3004	 str         r3, [sp, #4]

; 1473 :     
; 1474 :     // return current battery voltage
; 1475 :     MADCReadValue(pDevice->hMadc, MADC_CHANNEL_BCI0, &data, 1);

  0110c	e3a03001	 mov         r3, #1
  01110	e28d200c	 add         r2, sp, #0xC
  01114	e3a01801	 mov         r1, #1, 16
  01118	e59d0004	 ldr         r0, [sp, #4]
  0111c	e280001c	 add         r0, r0, #0x1C
  01120	e5900000	 ldr         r0, [r0]
  01124	eb000000	 bl          MADCReadValue

; 1476 :     MADCConvertToVolts(pDevice->hMadc, MADC_CHANNEL_BCI0, &data, &temp, 1);

  01128	e3a03001	 mov         r3, #1
  0112c	e58d3000	 str         r3, [sp]
  01130	e28d3008	 add         r3, sp, #8
  01134	e28d200c	 add         r2, sp, #0xC
  01138	e3a01801	 mov         r1, #1, 16
  0113c	e59d0004	 ldr         r0, [sp, #4]
  01140	e280001c	 add         r0, r0, #0x1C
  01144	e5900000	 ldr         r0, [r0]
  01148	eb000000	 bl          MADCConvertToVolts

; 1477 : 
; 1478 :     return temp;

  0114c	e59d3008	 ldr         r3, [sp, #8]
  01150	e58d3014	 str         r3, [sp, #0x14]

; 1479 : }

  01154	e59d0014	 ldr         r0, [sp, #0x14]
  01158	e28dd018	 add         sp, sp, #0x18
  0115c	e89d6000	 ldmia       sp, {sp, lr}
  01160	e12fff1e	 bx          lr
  01164		 |$M45002|

			 ENDP  ; |BCI_GetBatteryTemperature|

	EXPORT	|??_C@_1CK@NKJOADAC@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1NI@NKDCOFGF@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AAs?$AA?$CI?$AAn?$AAE?$AAO?$AAC?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$DN?$AA?$CF?$AAd?$AA?0@| [ DATA ] ; `string'
	EXPORT	|BCI_SetTimeouts|

  00020			 AREA	 |.pdata|, PDATA
|$T45015| DCD	|$LN10@BCI_SetTim|
	DCD	0x40004204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@NKJOADAC@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o"
	DCB	0x0, "u", 0x0, "t", 0x0, "s", 0x0, "(", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1NI@NKDCOFGF@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AAs?$AA?$CI?$AAn?$AAE?$AAO?$AAC?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$DN?$AA?$CF?$AAd?$AA?0@| DCB "+"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o"
	DCB	0x0, "u", 0x0, "t", 0x0, "s", 0x0, "(", 0x0, "n", 0x0, "E"
	DCB	0x0, "O", 0x0, "C", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, "=", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "n", 0x0, "O", 0x0, "v", 0x0, "e"
	DCB	0x0, "r", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "r", 0x0, "g"
	DCB	0x0, "e", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o"
	DCB	0x0, "u", 0x0, "t", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "n", 0x0, "O", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, "V", 0x0, "o", 0x0, "l", 0x0, "t", 0x0, "a", 0x0, "g"
	DCB	0x0, "e", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o"
	DCB	0x0, "u", 0x0, "t", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, " "
	DCB	0x0, "n", 0x0, "O", 0x0, "O", 0x0, "B", 0x0, "T", 0x0, "e"
	DCB	0x0, "m", 0x0, "p", 0x0, "e", 0x0, "r", 0x0, "a", 0x0, "t"
	DCB	0x0, "u", 0x0, "r", 0x0, "e", 0x0, "T", 0x0, "i", 0x0, "m"
	DCB	0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, "=", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  01164			 AREA	 |.text|, CODE, ARM

  01164		 |BCI_SetTimeouts| PROC

; 1494 : {

  01164		 |$LN10@BCI_SetTim|
  01164	e1a0c00d	 mov         r12, sp
  01168	e92d000f	 stmdb       sp!, {r0 - r3}
  0116c	e92d5000	 stmdb       sp!, {r12, lr}
  01170	e24dd01c	 sub         sp, sp, #0x1C
  01174		 |$M45012|

; 1495 :     BOOL bResult = FALSE;

  01174	e3a03000	 mov         r3, #0
  01178	e58d3008	 str         r3, [sp, #8]

; 1496 :     Device_t *pDevice = (Device_t*)hBCI;

  0117c	e59d3024	 ldr         r3, [sp, #0x24]
  01180	e58d3004	 str         r3, [sp, #4]

; 1497 :     DEBUGMSG(ZONE_FUNCTION, (L"+BCI_SetTimeouts("
; 1498 :         L"nEOCTimeout=%d, nOverChargeTimeout=%d, nOverVoltageTimeout=%d"
; 1499 :         L" nOOBTemperatureTimeout=%d)\r\n", nEOCTimeout, nOverChargeTimeout,
; 1500 :         nOverVoltageTimeout, nOOBTemperatureTimeout)
; 1501 :         );

  01184	e59f30d8	 ldr         r3, [pc, #0xD8]
  01188	e5933440	 ldr         r3, [r3, #0x440]
  0118c	e3130080	 tst         r3, #0x80
  01190	0a000009	 beq         |$LN4@BCI_SetTim|
  01194	e59d3034	 ldr         r3, [sp, #0x34]
  01198	e58d3000	 str         r3, [sp]
  0119c	e59d3030	 ldr         r3, [sp, #0x30]
  011a0	e59d202c	 ldr         r2, [sp, #0x2C]
  011a4	e59d1028	 ldr         r1, [sp, #0x28]
  011a8	e59f00b8	 ldr         r0, [pc, #0xB8]
  011ac	eb000000	 bl          NKDbgPrintfW
  011b0	e3a03001	 mov         r3, #1
  011b4	e58d3014	 str         r3, [sp, #0x14]
  011b8	ea000001	 b           |$LN5@BCI_SetTim|
  011bc		 |$LN4@BCI_SetTim|
  011bc	e3a03000	 mov         r3, #0
  011c0	e58d3014	 str         r3, [sp, #0x14]
  011c4		 |$LN5@BCI_SetTim|

; 1502 : 
; 1503 :     // check for valid parameter
; 1504 :     if (pDevice == NULL) goto cleanUp;

  011c4	e59d3004	 ldr         r3, [sp, #4]
  011c8	e3530000	 cmp         r3, #0
  011cc	1a000000	 bne         |$LN1@BCI_SetTim|
  011d0	ea000011	 b           |$cleanUp$44309|
  011d4		 |$LN1@BCI_SetTim|

; 1505 : 
; 1506 :     pDevice->nEndOfChargeTimeout = nEOCTimeout;

  011d4	e59d3004	 ldr         r3, [sp, #4]
  011d8	e2832050	 add         r2, r3, #0x50
  011dc	e59d3028	 ldr         r3, [sp, #0x28]
  011e0	e5823000	 str         r3, [r2]

; 1507 :     pDevice->nOverChargeTimeout = nOverChargeTimeout;

  011e4	e59d3004	 ldr         r3, [sp, #4]
  011e8	e283205c	 add         r2, r3, #0x5C
  011ec	e59d302c	 ldr         r3, [sp, #0x2C]
  011f0	e5823000	 str         r3, [r2]

; 1508 :     pDevice->nOverVoltageTimeout = nOverVoltageTimeout;

  011f4	e59d3004	 ldr         r3, [sp, #4]
  011f8	e2832054	 add         r2, r3, #0x54
  011fc	e59d3030	 ldr         r3, [sp, #0x30]
  01200	e5823000	 str         r3, [r2]

; 1509 :     pDevice->nOOBTemperatureTimeout = nOOBTemperatureTimeout;

  01204	e59d3004	 ldr         r3, [sp, #4]
  01208	e2832058	 add         r2, r3, #0x58
  0120c	e59d3034	 ldr         r3, [sp, #0x34]
  01210	e5823000	 str         r3, [r2]

; 1510 : 
; 1511 :     bResult = TRUE;

  01214	e3a03001	 mov         r3, #1
  01218	e58d3008	 str         r3, [sp, #8]
  0121c		 |$cleanUp$44309|

; 1512 :        
; 1513 : cleanUp:    
; 1514 :     DEBUGMSG(ZONE_FUNCTION, (L"-BCI_SetTimeouts()\r\n"));

  0121c	e59f3040	 ldr         r3, [pc, #0x40]
  01220	e5933440	 ldr         r3, [r3, #0x440]
  01224	e3130080	 tst         r3, #0x80
  01228	0a000004	 beq         |$LN6@BCI_SetTim|
  0122c	e59f002c	 ldr         r0, [pc, #0x2C]
  01230	eb000000	 bl          NKDbgPrintfW
  01234	e3a03001	 mov         r3, #1
  01238	e58d3018	 str         r3, [sp, #0x18]
  0123c	ea000001	 b           |$LN7@BCI_SetTim|
  01240		 |$LN6@BCI_SetTim|
  01240	e3a03000	 mov         r3, #0
  01244	e58d3018	 str         r3, [sp, #0x18]
  01248		 |$LN7@BCI_SetTim|

; 1515 :     return bResult;

  01248	e59d3008	 ldr         r3, [sp, #8]
  0124c	e58d3010	 str         r3, [sp, #0x10]

; 1516 : }

  01250	e59d0010	 ldr         r0, [sp, #0x10]
  01254	e28dd01c	 add         sp, sp, #0x1C
  01258	e89d6000	 ldmia       sp, {sp, lr}
  0125c	e12fff1e	 bx          lr
  01260		 |$LN11@BCI_SetTim|
  01260		 |$LN12@BCI_SetTim|
  01260	00000000	 DCD         |??_C@_1CK@NKJOADAC@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01264		 |$LN13@BCI_SetTim|
  01264	00000000	 DCD         |dpCurSettings|
  01268		 |$LN14@BCI_SetTim|
  01268	00000000	 DCD         |??_C@_1NI@NKDCOFGF@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AAs?$AA?$CI?$AAn?$AAE?$AAO?$AAC?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$DN?$AA?$CF?$AAd?$AA?0@|
  0126c		 |$M45013|

			 ENDP  ; |BCI_SetTimeouts|

	EXPORT	|??_C@_1CK@EAPFAONC@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAP?$AAr?$AAe?$AAs?$AAc?$AAa?$AAl?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@EPJOEDBN@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAP?$AAr?$AAe?$AAs?$AAc?$AAa?$AAl?$AAe?$AA?$CI?$AAp?$AAr?$AAe?$AAS?$AAc?$AAa?$AAl?$AAe?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$CJ?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|BCI_SetPrescale|

  00028			 AREA	 |.pdata|, PDATA
|$T45029| DCD	|$LN10@BCI_SetPre|
	DCD	0x40003104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@EAPFAONC@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAP?$AAr?$AAe?$AAs?$AAc?$AAa?$AAl?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "P", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "c"
	DCB	0x0, "a", 0x0, "l", 0x0, "e", 0x0, "(", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@EPJOEDBN@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAP?$AAr?$AAe?$AAs?$AAc?$AAa?$AAl?$AAe?$AA?$CI?$AAp?$AAr?$AAe?$AAS?$AAc?$AAa?$AAl?$AAe?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$CJ?$AA?$AA@| DCB "+"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "P", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "c"
	DCB	0x0, "a", 0x0, "l", 0x0, "e", 0x0, "(", 0x0, "p", 0x0, "r"
	DCB	0x0, "e", 0x0, "S", 0x0, "c", 0x0, "a", 0x0, "l", 0x0, "e"
	DCB	0x0, "=", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, ")"
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  0126c			 AREA	 |.text|, CODE, ARM

  0126c		 |BCI_SetPrescale| PROC

; 1528 : {

  0126c		 |$LN10@BCI_SetPre|
  0126c	e1a0c00d	 mov         r12, sp
  01270	e92d0003	 stmdb       sp!, {r0, r1}
  01274	e92d5000	 stmdb       sp!, {r12, lr}
  01278	e24dd014	 sub         sp, sp, #0x14
  0127c		 |$M45026|

; 1529 :     BOOL bResult = FALSE;

  0127c	e3a03000	 mov         r3, #0
  01280	e58d3004	 str         r3, [sp, #4]

; 1530 :     Device_t *pDevice = (Device_t*)hBCI;

  01284	e59d301c	 ldr         r3, [sp, #0x1C]
  01288	e58d3000	 str         r3, [sp]

; 1531 :     DEBUGMSG(ZONE_FUNCTION, (L"+BCI_SetPrescale("L"preScale=%d\r\n)", 
; 1532 :         preScale)
; 1533 :         );

  0128c	e59f3094	 ldr         r3, [pc, #0x94]
  01290	e5933440	 ldr         r3, [r3, #0x440]
  01294	e3130080	 tst         r3, #0x80
  01298	0a000005	 beq         |$LN4@BCI_SetPre|
  0129c	e59d1020	 ldr         r1, [sp, #0x20]
  012a0	e59f0084	 ldr         r0, [pc, #0x84]
  012a4	eb000000	 bl          NKDbgPrintfW
  012a8	e3a03001	 mov         r3, #1
  012ac	e58d300c	 str         r3, [sp, #0xC]
  012b0	ea000001	 b           |$LN5@BCI_SetPre|
  012b4		 |$LN4@BCI_SetPre|
  012b4	e3a03000	 mov         r3, #0
  012b8	e58d300c	 str         r3, [sp, #0xC]
  012bc		 |$LN5@BCI_SetPre|

; 1534 : 
; 1535 :     // check for valid parameter
; 1536 :     if (pDevice == NULL) goto cleanUp;

  012bc	e59d3000	 ldr         r3, [sp]
  012c0	e3530000	 cmp         r3, #0
  012c4	1a000000	 bne         |$LN1@BCI_SetPre|
  012c8	ea000004	 b           |$cleanUp$44324|
  012cc		 |$LN1@BCI_SetPre|

; 1537 : 
; 1538 :     SetPrescale(pDevice, preScale);

  012cc	e59d1020	 ldr         r1, [sp, #0x20]
  012d0	e59d0000	 ldr         r0, [sp]
  012d4	eb000000	 bl          SetPrescale

; 1539 : 
; 1540 :     bResult = TRUE;

  012d8	e3a03001	 mov         r3, #1
  012dc	e58d3004	 str         r3, [sp, #4]
  012e0		 |$cleanUp$44324|

; 1541 :        
; 1542 : cleanUp:    
; 1543 :     DEBUGMSG(ZONE_FUNCTION, (L"-BCI_SetPrescale()\r\n"));

  012e0	e59f3040	 ldr         r3, [pc, #0x40]
  012e4	e5933440	 ldr         r3, [r3, #0x440]
  012e8	e3130080	 tst         r3, #0x80
  012ec	0a000004	 beq         |$LN6@BCI_SetPre|
  012f0	e59f002c	 ldr         r0, [pc, #0x2C]
  012f4	eb000000	 bl          NKDbgPrintfW
  012f8	e3a03001	 mov         r3, #1
  012fc	e58d3010	 str         r3, [sp, #0x10]
  01300	ea000001	 b           |$LN7@BCI_SetPre|
  01304		 |$LN6@BCI_SetPre|
  01304	e3a03000	 mov         r3, #0
  01308	e58d3010	 str         r3, [sp, #0x10]
  0130c		 |$LN7@BCI_SetPre|

; 1544 :     return bResult;

  0130c	e59d3004	 ldr         r3, [sp, #4]
  01310	e58d3008	 str         r3, [sp, #8]

; 1545 : }

  01314	e59d0008	 ldr         r0, [sp, #8]
  01318	e28dd014	 add         sp, sp, #0x14
  0131c	e89d6000	 ldmia       sp, {sp, lr}
  01320	e12fff1e	 bx          lr
  01324		 |$LN11@BCI_SetPre|
  01324		 |$LN12@BCI_SetPre|
  01324	00000000	 DCD         |??_C@_1CK@EAPFAONC@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAP?$AAr?$AAe?$AAs?$AAc?$AAa?$AAl?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01328		 |$LN13@BCI_SetPre|
  01328	00000000	 DCD         |dpCurSettings|
  0132c		 |$LN14@BCI_SetPre|
  0132c	00000000	 DCD         |??_C@_1EA@EPJOEDBN@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAP?$AAr?$AAe?$AAs?$AAc?$AAa?$AAl?$AAe?$AA?$CI?$AAp?$AAr?$AAe?$AAS?$AAc?$AAa?$AAl?$AAe?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$CJ?$AA?$AA@|
  01330		 |$M45027|

			 ENDP  ; |BCI_SetPrescale|

	EXPORT	|??_C@_1CC@PDFHNJBE@?$AA?9?$AAS?$AAe?$AAt?$AAP?$AAr?$AAe?$AAs?$AAc?$AAa?$AAl?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@NAAHLGFF@?$AA?$CL?$AAS?$AAe?$AAt?$AAP?$AAr?$AAe?$AAs?$AAc?$AAa?$AAl?$AAe?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?0?$AA?5?$AAp?$AAr?$AAe@| [ DATA ] ; `string'

  00030			 AREA	 |.pdata|, PDATA
|$T45044| DCD	|$LN11@SetPrescal|
	DCD	0x40005904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@PDFHNJBE@?$AA?9?$AAS?$AAe?$AAt?$AAP?$AAr?$AAe?$AAs?$AAc?$AAa?$AAl?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "P", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "c", 0x0, "a", 0x0, "l", 0x0, "e", 0x0, "("
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@NAAHLGFF@?$AA?$CL?$AAS?$AAe?$AAt?$AAP?$AAr?$AAe?$AAs?$AAc?$AAa?$AAl?$AAe?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?0?$AA?5?$AAp?$AAr?$AAe@| DCB "+"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "P", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "c", 0x0, "a", 0x0, "l", 0x0, "e", 0x0, "("
	DCB	0x0, "p", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c"
	DCB	0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "p", 0x0, "r"
	DCB	0x0, "e", 0x0, "S", 0x0, "c", 0x0, "a", 0x0, "l", 0x0, "e"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  01330			 AREA	 |.text|, CODE, ARM

  01330		 |SetPrescale| PROC

; 739  : {   

  01330		 |$LN11@SetPrescal|
  01330	e1a0c00d	 mov         r12, sp
  01334	e92d0003	 stmdb       sp!, {r0, r1}
  01338	e92d5000	 stmdb       sp!, {r12, lr}
  0133c	e24dd010	 sub         sp, sp, #0x10
  01340		 |$M45041|

; 740  :     UINT8 data;
; 741  :     UINT8 bcictl1;
; 742  :     DEBUGMSG(ZONE_FUNCTION, (L"+SetPrescale("
; 743  :         L"pDevice=0x%08X, preScale)\r\n",
; 744  :         pDevice, preScale
; 745  :         ));

  01340	e59f3144	 ldr         r3, [pc, #0x144]
  01344	e5933440	 ldr         r3, [r3, #0x440]
  01348	e3130080	 tst         r3, #0x80
  0134c	0a000006	 beq         |$LN3@SetPrescal|
  01350	e59d201c	 ldr         r2, [sp, #0x1C]
  01354	e59d1018	 ldr         r1, [sp, #0x18]
  01358	e59f0130	 ldr         r0, [pc, #0x130]
  0135c	eb000000	 bl          NKDbgPrintfW
  01360	e3a03001	 mov         r3, #1
  01364	e58d3004	 str         r3, [sp, #4]
  01368	ea000001	 b           |$LN4@SetPrescal|
  0136c		 |$LN3@SetPrescal|
  0136c	e3a03000	 mov         r3, #0
  01370	e58d3004	 str         r3, [sp, #4]
  01374		 |$LN4@SetPrescal|

; 746  : 
; 747  :     // update charge current scaler
; 748  :     TWLReadRegs(pDevice->hTwl, TWL_BCICTL1, &bcictl1, 1);

  01374	e3a03001	 mov         r3, #1
  01378	e28d2001	 add         r2, sp, #1
  0137c	e3a01802	 mov         r1, #2, 16
  01380	e3811097	 orr         r1, r1, #0x97
  01384	e59d0018	 ldr         r0, [sp, #0x18]
  01388	e2800018	 add         r0, r0, #0x18
  0138c	e5900000	 ldr         r0, [r0]
  01390	eb000000	 bl          TWLReadRegs

; 749  :     bcictl1 = (preScale > 1) ? bcictl1 | CGAIN : bcictl1 & ~CGAIN;

  01394	e59d301c	 ldr         r3, [sp, #0x1C]
  01398	e3530001	 cmp         r3, #1
  0139c	9a000003	 bls         |$LN5@SetPrescal|
  013a0	e5dd3001	 ldrb        r3, [sp, #1]
  013a4	e3833020	 orr         r3, r3, #0x20
  013a8	e58d3008	 str         r3, [sp, #8]
  013ac	ea000004	 b           |$LN6@SetPrescal|
  013b0		 |$LN5@SetPrescal|
  013b0	e5dd3001	 ldrb        r3, [sp, #1]
  013b4	e1a02003	 mov         r2, r3
  013b8	e3e03020	 mvn         r3, #0x20
  013bc	e0023003	 and         r3, r2, r3
  013c0	e58d3008	 str         r3, [sp, #8]
  013c4		 |$LN6@SetPrescal|
  013c4	e59d3008	 ldr         r3, [sp, #8]
  013c8	e20330ff	 and         r3, r3, #0xFF
  013cc	e5cd3001	 strb        r3, [sp, #1]

; 750  :     
; 751  :     // need to pull the BCI module out of autoac mode before 
; 752  :     // setting prescale value    
; 753  :     data = KEY_BCIOFF;

  013d0	e3a0302a	 mov         r3, #0x2A
  013d4	e5cd3000	 strb        r3, [sp]

; 754  :     TWLWriteRegs(pDevice->hTwl, TWL_BCIMDKEY, &data, 1);

  013d8	e3a03001	 mov         r3, #1
  013dc	e28d2000	 add         r2, sp, #0
  013e0	e3a01802	 mov         r1, #2, 16
  013e4	e3811075	 orr         r1, r1, #0x75
  013e8	e59d0018	 ldr         r0, [sp, #0x18]
  013ec	e2800018	 add         r0, r0, #0x18
  013f0	e5900000	 ldr         r0, [r0]
  013f4	eb000000	 bl          TWLWriteRegs

; 755  :         
; 756  :     // update scaling mode
; 757  :     TWLWriteRegs(pDevice->hTwl, TWL_BCICTL1, &bcictl1, 1);

  013f8	e3a03001	 mov         r3, #1
  013fc	e28d2001	 add         r2, sp, #1
  01400	e3a01802	 mov         r1, #2, 16
  01404	e3811097	 orr         r1, r1, #0x97
  01408	e59d0018	 ldr         r0, [sp, #0x18]
  0140c	e2800018	 add         r0, r0, #0x18
  01410	e5900000	 ldr         r0, [r0]
  01414	eb000000	 bl          TWLWriteRegs

; 758  : 
; 759  :     // enable auto charge
; 760  :     data = CONFIG_DONE | BCIAUTOAC;

  01418	e3a03011	 mov         r3, #0x11
  0141c	e5cd3000	 strb        r3, [sp]

; 761  :     TWLWriteRegs(pDevice->hTwl, TWL_BOOT_BCI, &data, 1);

  01420	e3a03001	 mov         r3, #1
  01424	e28d2000	 add         r2, sp, #0
  01428	e3a01803	 mov         r1, #3, 16
  0142c	e381103d	 orr         r1, r1, #0x3D
  01430	e59d0018	 ldr         r0, [sp, #0x18]
  01434	e2800018	 add         r0, r0, #0x18
  01438	e5900000	 ldr         r0, [r0]
  0143c	eb000000	 bl          TWLWriteRegs

; 762  : 
; 763  :     pDevice->preScale = preScale;

  01440	e59d3018	 ldr         r3, [sp, #0x18]
  01444	e2832034	 add         r2, r3, #0x34
  01448	e59d301c	 ldr         r3, [sp, #0x1C]
  0144c	e5823000	 str         r3, [r2]

; 764  : 
; 765  :     DEBUGMSG(ZONE_FUNCTION, (L"-SetPrescale()\r\n"));

  01450	e59f3034	 ldr         r3, [pc, #0x34]
  01454	e5933440	 ldr         r3, [r3, #0x440]
  01458	e3130080	 tst         r3, #0x80
  0145c	0a000004	 beq         |$LN7@SetPrescal|
  01460	e59f0020	 ldr         r0, [pc, #0x20]
  01464	eb000000	 bl          NKDbgPrintfW
  01468	e3a03001	 mov         r3, #1
  0146c	e58d300c	 str         r3, [sp, #0xC]
  01470	ea000001	 b           |$LN8@SetPrescal|
  01474		 |$LN7@SetPrescal|
  01474	e3a03000	 mov         r3, #0
  01478	e58d300c	 str         r3, [sp, #0xC]
  0147c		 |$LN8@SetPrescal|

; 766  : }

  0147c	e28dd010	 add         sp, sp, #0x10
  01480	e89d6000	 ldmia       sp, {sp, lr}
  01484	e12fff1e	 bx          lr
  01488		 |$LN12@SetPrescal|
  01488		 |$LN13@SetPrescal|
  01488	00000000	 DCD         |??_C@_1CC@PDFHNJBE@?$AA?9?$AAS?$AAe?$AAt?$AAP?$AAr?$AAe?$AAs?$AAc?$AAa?$AAl?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0148c		 |$LN14@SetPrescal|
  0148c	00000000	 DCD         |dpCurSettings|
  01490		 |$LN15@SetPrescal|
  01490	00000000	 DCD         |??_C@_1FC@NAAHLGFF@?$AA?$CL?$AAS?$AAe?$AAt?$AAP?$AAr?$AAe?$AAs?$AAc?$AAa?$AAl?$AAe?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?0?$AA?5?$AAp?$AAr?$AAe@|
  01494		 |$M45042|

			 ENDP  ; |SetPrescale|

	EXPORT	|??_C@_1DE@NJGGHHNO@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JM@JLHGOIJL@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAh?$AAa?$AAr?$AAg?$AAe?$AA?5?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAe?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@LJEKEGJ@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?$CI?$AAm?$AAo?$AAd?$AAe?$AA?$DN?$AA?$CF?$AAd?$AA?0?$AA?5?$AAc@| [ DATA ] ; `string'
	IMPORT	|__utos|
	IMPORT	|__divs|
	IMPORT	|__stou|

  00038			 AREA	 |.pdata|, PDATA
|$T45063| DCD	|$LN22@BCI_SetCha|
	DCD	0x40008b04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@NJGGHHNO@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "r", 0x0, "g"
	DCB	0x0, "e", 0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JM@JLHGOIJL@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAh?$AAa?$AAr?$AAg?$AAe?$AA?5?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAe?$AAt@| DCB "W"
	DCB	0x0, "A", 0x0, "R", 0x0, "N", 0x0, ":", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "c", 0x0, "h", 0x0, "a", 0x0, "r", 0x0, "g"
	DCB	0x0, "e", 0x0, " ", 0x0, "c", 0x0, "u", 0x0, "r", 0x0, "r"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "s", 0x0, "e"
	DCB	0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, "s"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "m", 0x0, "A"
	DCB	0x0, ",", 0x0, " ", 0x0, "m", 0x0, "u", 0x0, "s", 0x0, "t"
	DCB	0x0, " ", 0x0, "b", 0x0, "e", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, " ", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "g", 0x0, "e"
	DCB	0x0, " ", 0x0, "o", 0x0, "f", 0x0, " ", 0x0, "[", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, "]"
	DCB	0x0, "m", 0x0, "A", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@LJEKEGJ@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?$CI?$AAm?$AAo?$AAd?$AAe?$AA?$DN?$AA?$CF?$AAd?$AA?0?$AA?5?$AAc@| DCB "+"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "r", 0x0, "g"
	DCB	0x0, "e", 0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "(", 0x0, "m", 0x0, "o", 0x0, "d"
	DCB	0x0, "e", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "c", 0x0, "h", 0x0, "a", 0x0, "r", 0x0, "g", 0x0, "e"
	DCB	0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  01494			 AREA	 |.text|, CODE, ARM

  01494		 |BCI_SetChargeCurrent| PROC

; 1559 : {

  01494		 |$LN22@BCI_SetCha|
  01494	e1a0c00d	 mov         r12, sp
  01498	e92d0007	 stmdb       sp!, {r0 - r2}
  0149c	e92d5000	 stmdb       sp!, {r12, lr}
  014a0	e24dd024	 sub         sp, sp, #0x24
  014a4		 |$M45060|

; 1560 :     UINT16 bciiref1;
; 1561 :     BOOL bResult = FALSE;

  014a4	e3a03000	 mov         r3, #0
  014a8	e58d3008	 str         r3, [sp, #8]

; 1562 :     Device_t *pDevice = (Device_t*)hBCI;

  014ac	e59d302c	 ldr         r3, [sp, #0x2C]
  014b0	e58d3000	 str         r3, [sp]

; 1563 :     DWORD maxChargeCurrent = BCI_MAX_CHARGECURRENT;

  014b4	e3a03c06	 mov         r3, #6, 24
  014b8	e38330a8	 orr         r3, r3, #0xA8
  014bc	e58d300c	 str         r3, [sp, #0xC]

; 1564 :     DEBUGMSG(ZONE_FUNCTION, (L"+BCI_SetChargeCurrent("
; 1565 :         L"mode=%d, chargeCurrent=%d)\r\n", mode, chargeCurrent)
; 1566 :         );

  014c0	e59f31e8	 ldr         r3, [pc, #0x1E8]
  014c4	e5933440	 ldr         r3, [r3, #0x440]
  014c8	e3130080	 tst         r3, #0x80
  014cc	0a000006	 beq         |$LN14@BCI_SetCha|
  014d0	e59d2034	 ldr         r2, [sp, #0x34]
  014d4	e59d1030	 ldr         r1, [sp, #0x30]
  014d8	e59f01dc	 ldr         r0, [pc, #0x1DC]
  014dc	eb000000	 bl          NKDbgPrintfW
  014e0	e3a03001	 mov         r3, #1
  014e4	e58d3014	 str         r3, [sp, #0x14]
  014e8	ea000001	 b           |$LN15@BCI_SetCha|
  014ec		 |$LN14@BCI_SetCha|
  014ec	e3a03000	 mov         r3, #0
  014f0	e58d3014	 str         r3, [sp, #0x14]
  014f4		 |$LN15@BCI_SetCha|

; 1567 : 
; 1568 :     // check for valid parameter
; 1569 :     if (pDevice == NULL) goto cleanUp;

  014f4	e59d3000	 ldr         r3, [sp]
  014f8	e3530000	 cmp         r3, #0
  014fc	1a000000	 bne         |$LN11@BCI_SetCha|
  01500	ea000058	 b           |$cleanUp$44343|
  01504		 |$LN11@BCI_SetCha|

; 1570 : 
; 1571 :     // check if prescalar is disabled, adjust max current accordingly
; 1572 :     if (pDevice->preScale < 2)

  01504	e59d3000	 ldr         r3, [sp]
  01508	e2833034	 add         r3, r3, #0x34
  0150c	e5933000	 ldr         r3, [r3]
  01510	e3530002	 cmp         r3, #2
  01514	2a000002	 bcs         |$LN10@BCI_SetCha|

; 1573 :         {
; 1574 :         maxChargeCurrent >>= 1;

  01518	e59d300c	 ldr         r3, [sp, #0xC]
  0151c	e1a030a3	 mov         r3, r3, lsr #1
  01520	e58d300c	 str         r3, [sp, #0xC]
  01524		 |$LN10@BCI_SetCha|

; 1575 :         }
; 1576 :     
; 1577 :     if (chargeCurrent > maxChargeCurrent)

  01524	e59d2034	 ldr         r2, [sp, #0x34]
  01528	e59d300c	 ldr         r3, [sp, #0xC]
  0152c	e1520003	 cmp         r2, r3
  01530	9a00000e	 bls         |$LN9@BCI_SetCha|

; 1578 :         {
; 1579 :         DEBUGMSG(ZONE_WARN, (L"WARN: invalid charge current settings "
; 1580 :             L"%d mA, must be in range of [%d, %d]mA\r\n", chargeCurrent,
; 1581 :             0, maxChargeCurrent)
; 1582 :             );

  01534	e59f3174	 ldr         r3, [pc, #0x174]
  01538	e5933440	 ldr         r3, [r3, #0x440]
  0153c	e3130002	 tst         r3, #2
  01540	0a000007	 beq         |$LN16@BCI_SetCha|
  01544	e59d300c	 ldr         r3, [sp, #0xC]
  01548	e3a02000	 mov         r2, #0
  0154c	e59d1034	 ldr         r1, [sp, #0x34]
  01550	e59f0160	 ldr         r0, [pc, #0x160]
  01554	eb000000	 bl          NKDbgPrintfW
  01558	e3a03001	 mov         r3, #1
  0155c	e58d3018	 str         r3, [sp, #0x18]
  01560	ea000001	 b           |$LN17@BCI_SetCha|
  01564		 |$LN16@BCI_SetCha|
  01564	e3a03000	 mov         r3, #0
  01568	e58d3018	 str         r3, [sp, #0x18]
  0156c		 |$LN17@BCI_SetCha|

; 1583 :         goto cleanUp;

  0156c	ea00003d	 b           |$cleanUp$44343|
  01570		 |$LN9@BCI_SetCha|

; 1584 :         }
; 1585 : 
; 1586 :     // calculate new charge current
; 1587 :     bciiref1 = (UINT16)((float)chargeCurrent/BCI_DEFAULT_CHARGECURRENT_STEPS);

  01570	e59d0034	 ldr         r0, [sp, #0x34]
  01574	eb000000	 bl          __utos
  01578	e59f1134	 ldr         r1, [pc, #0x134]
  0157c	eb000000	 bl          __divs
  01580	eb000000	 bl          __stou
  01584	e1a03800	 mov         r3, r0, lsl #16
  01588	e1a03823	 mov         r3, r3, lsr #16
  0158c	e1cd30b4	 strh        r3, [sp, #4]

; 1588 : 
; 1589 :     // check for scaled values
; 1590 :     if (pDevice->preScale > 1)

  01590	e59d3000	 ldr         r3, [sp]
  01594	e2833034	 add         r3, r3, #0x34
  01598	e5933000	 ldr         r3, [r3]
  0159c	e3530001	 cmp         r3, #1
  015a0	9a000004	 bls         |$LN8@BCI_SetCha|

; 1591 :         {
; 1592 :         bciiref1 >>= 1;

  015a4	e1dd30b4	 ldrh        r3, [sp, #4]
  015a8	e1a030a3	 mov         r3, r3, lsr #1
  015ac	e1a03803	 mov         r3, r3, lsl #16
  015b0	e1a03823	 mov         r3, r3, lsr #16
  015b4	e1cd30b4	 strh        r3, [sp, #4]
  015b8		 |$LN8@BCI_SetCha|

; 1593 :         }
; 1594 : 
; 1595 :     // account for maximas
; 1596 :     if (bciiref1 == BCI_MAX_BCIIREF1)

  015b8	e1dd30b4	 ldrh        r3, [sp, #4]
  015bc	e3530c02	 cmp         r3, #2, 24
  015c0	1a000004	 bne         |$LN7@BCI_SetCha|

; 1597 :         {
; 1598 :         bciiref1 -= 1;

  015c4	e1dd30b4	 ldrh        r3, [sp, #4]
  015c8	e2433001	 sub         r3, r3, #1
  015cc	e1a03803	 mov         r3, r3, lsl #16
  015d0	e1a03823	 mov         r3, r3, lsr #16
  015d4	e1cd30b4	 strh        r3, [sp, #4]
  015d8		 |$LN7@BCI_SetCha|

; 1599 :         }
; 1600 : 
; 1601 :     // always set high bit of BCIIREF1
; 1602 :     bciiref1 |= BCIREF1_HBIT;

  015d8	e1dd30b4	 ldrh        r3, [sp, #4]
  015dc	e3833c02	 orr         r3, r3, #2, 24
  015e0	e1a03803	 mov         r3, r3, lsl #16
  015e4	e1a03823	 mov         r3, r3, lsr #16
  015e8	e1cd30b4	 strh        r3, [sp, #4]

; 1603 : 
; 1604 :     // save charge current info
; 1605 :     switch (mode)

  015ec	e59d3030	 ldr         r3, [sp, #0x30]
  015f0	e58d301c	 str         r3, [sp, #0x1C]
  015f4	e59d301c	 ldr         r3, [sp, #0x1C]
  015f8	e3530001	 cmp         r3, #1
  015fc	0a000003	 beq         |$LN4@BCI_SetCha|
  01600	e59d301c	 ldr         r3, [sp, #0x1C]
  01604	e3530002	 cmp         r3, #2
  01608	0a000005	 beq         |$LN3@BCI_SetCha|
  0160c	ea000009	 b           |$LN2@BCI_SetCha|
  01610		 |$LN4@BCI_SetCha|

; 1606 :         {
; 1607 :         case kBCI_AC:
; 1608 :             pDevice->acChargeCurrent = bciiref1;

  01610	e59d3000	 ldr         r3, [sp]
  01614	e283203a	 add         r2, r3, #0x3A
  01618	e1dd30b4	 ldrh        r3, [sp, #4]
  0161c	e1c230b0	 strh        r3, [r2]

; 1609 :             break;

  01620	ea000005	 b           |$LN5@BCI_SetCha|
  01624		 |$LN3@BCI_SetCha|

; 1610 : 
; 1611 :         case kBCI_USBHost:
; 1612 :             pDevice->usbChargeCurrent = bciiref1;

  01624	e59d3000	 ldr         r3, [sp]
  01628	e2832038	 add         r2, r3, #0x38
  0162c	e1dd30b4	 ldrh        r3, [sp, #4]
  01630	e1c230b0	 strh        r3, [r2]

; 1613 :             break;

  01634	ea000000	 b           |$LN5@BCI_SetCha|
  01638		 |$LN2@BCI_SetCha|

; 1614 : 
; 1615 :         default:
; 1616 :             goto cleanUp;

  01638	ea00000a	 b           |$cleanUp$44343|
  0163c		 |$LN5@BCI_SetCha|

; 1617 :         }
; 1618 : 
; 1619 :     // check current charge mode and apply new settings if applicable
; 1620 :     if (pDevice->currentMode == mode)

  0163c	e59d3000	 ldr         r3, [sp]
  01640	e2833014	 add         r3, r3, #0x14
  01644	e5932000	 ldr         r2, [r3]
  01648	e59d3030	 ldr         r3, [sp, #0x30]
  0164c	e1520003	 cmp         r2, r3
  01650	1a000002	 bne         |$LN1@BCI_SetCha|

; 1621 :         {
; 1622 :         UpdateChargeCurrent(pDevice, bciiref1);

  01654	e1dd10b4	 ldrh        r1, [sp, #4]
  01658	e59d0000	 ldr         r0, [sp]
  0165c	eb000000	 bl          UpdateChargeCurrent
  01660		 |$LN1@BCI_SetCha|

; 1623 :         }
; 1624 : 
; 1625 :     bResult = TRUE;

  01660	e3a03001	 mov         r3, #1
  01664	e58d3008	 str         r3, [sp, #8]
  01668		 |$cleanUp$44343|

; 1626 :        
; 1627 : cleanUp:    
; 1628 :     DEBUGMSG(ZONE_FUNCTION, (L"-BCI_SetChargeCurrent()\r\n"));

  01668	e59f3040	 ldr         r3, [pc, #0x40]
  0166c	e5933440	 ldr         r3, [r3, #0x440]
  01670	e3130080	 tst         r3, #0x80
  01674	0a000004	 beq         |$LN18@BCI_SetCha|
  01678	e59f002c	 ldr         r0, [pc, #0x2C]
  0167c	eb000000	 bl          NKDbgPrintfW
  01680	e3a03001	 mov         r3, #1
  01684	e58d3020	 str         r3, [sp, #0x20]
  01688	ea000001	 b           |$LN19@BCI_SetCha|
  0168c		 |$LN18@BCI_SetCha|
  0168c	e3a03000	 mov         r3, #0
  01690	e58d3020	 str         r3, [sp, #0x20]
  01694		 |$LN19@BCI_SetCha|

; 1629 :     return bResult;

  01694	e59d3008	 ldr         r3, [sp, #8]
  01698	e58d3010	 str         r3, [sp, #0x10]

; 1630 : }

  0169c	e59d0010	 ldr         r0, [sp, #0x10]
  016a0	e28dd024	 add         sp, sp, #0x24
  016a4	e89d6000	 ldmia       sp, {sp, lr}
  016a8	e12fff1e	 bx          lr
  016ac		 |$LN23@BCI_SetCha|
  016ac		 |$LN24@BCI_SetCha|
  016ac	00000000	 DCD         |??_C@_1DE@NJGGHHNO@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  016b0		 |$LN25@BCI_SetCha|
  016b0	00000000	 DCD         |dpCurSettings|
  016b4		 |$LN26@BCI_SetCha|
  016b4	3fd4ff04	 DCD         0x3fd4ff04
  016b8		 |$LN27@BCI_SetCha|
  016b8	00000000	 DCD         |??_C@_1JM@JLHGOIJL@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAh?$AAa?$AAr?$AAg?$AAe?$AA?5?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAe?$AAt@|
  016bc		 |$LN28@BCI_SetCha|
  016bc	00000000	 DCD         |??_C@_1GG@LJEKEGJ@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?$CI?$AAm?$AAo?$AAd?$AAe?$AA?$DN?$AA?$CF?$AAd?$AA?0?$AA?5?$AAc@|
  016c0		 |$M45061|

			 ENDP  ; |BCI_SetChargeCurrent|

	EXPORT	|??_C@_1HC@LMLJIBBF@?$AA?$CL?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF@| [ DATA ] ; `string'

  00040			 AREA	 |.pdata|, PDATA
|$T45077| DCD	|$LN11@UpdateChar|
	DCD	0x40005d04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@LMLJIBBF@?$AA?$CL?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF@| DCB "+"
	DCB	0x0, "U", 0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, "C", 0x0, "h", 0x0, "a", 0x0, "r", 0x0, "g", 0x0, "e"
	DCB	0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, "(", 0x0, "p", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " "
	DCB	0x0, "c", 0x0, "h", 0x0, "a", 0x0, "r", 0x0, "g", 0x0, "e"
	DCB	0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  016c0			 AREA	 |.text|, CODE, ARM

  016c0		 |UpdateChargeCurrent| PROC

; 825  : {

  016c0		 |$LN11@UpdateChar|
  016c0	e1a0c00d	 mov         r12, sp
  016c4	e92d0003	 stmdb       sp!, {r0, r1}
  016c8	e92d5000	 stmdb       sp!, {r12, lr}
  016cc	e24dd024	 sub         sp, sp, #0x24
  016d0		 |$M45074|

; 826  :     UCHAR bcimfkey = KEY_BCIMFTH9;

  016d0	e3a030e7	 mov         r3, #0xE7
  016d4	e5cd3000	 strb        r3, [sp]

; 827  :     UINT8 regVal=0;

  016d8	e3a03000	 mov         r3, #0
  016dc	e5cd3008	 strb        r3, [sp, #8]

; 828  :     BOOL bSuccess = FALSE;

  016e0	e3a03000	 mov         r3, #0
  016e4	e58d3004	 str         r3, [sp, #4]

; 829  : 
; 830  :     DEBUGMSG(ZONE_FUNCTION, (L"+UpdateChargeCurrent("
; 831  :         L"pDevice=0x%08X, chargeCurrent=%d)\r\n",
; 832  :         pDevice, chargeCurrent
; 833  :         ));

  016e8	e59f3140	 ldr         r3, [pc, #0x140]
  016ec	e5933440	 ldr         r3, [r3, #0x440]
  016f0	e3130080	 tst         r3, #0x80
  016f4	0a000006	 beq         |$LN7@UpdateChar|
  016f8	e1dd23b0	 ldrh        r2, [sp, #0x30]
  016fc	e59d102c	 ldr         r1, [sp, #0x2C]
  01700	e59f0124	 ldr         r0, [pc, #0x124]
  01704	eb000000	 bl          NKDbgPrintfW
  01708	e3a03001	 mov         r3, #1
  0170c	e58d3010	 str         r3, [sp, #0x10]
  01710	ea000001	 b           |$LN8@UpdateChar|
  01714		 |$LN7@UpdateChar|
  01714	e3a03000	 mov         r3, #0
  01718	e58d3010	 str         r3, [sp, #0x10]
  0171c		 |$LN8@UpdateChar|

; 834  : 
; 835  :     // update charge current
; 836  :     //
; 837  :     if (TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &bcimfkey, 1) == FALSE)

  0171c	e3a03001	 mov         r3, #1
  01720	e28d2000	 add         r2, sp, #0
  01724	e3a01802	 mov         r1, #2, 16
  01728	e3811085	 orr         r1, r1, #0x85
  0172c	e59d002c	 ldr         r0, [sp, #0x2C]
  01730	e2800018	 add         r0, r0, #0x18
  01734	e5900000	 ldr         r0, [r0]
  01738	eb000000	 bl          TWLWriteRegs
  0173c	e58d0014	 str         r0, [sp, #0x14]
  01740	e59d3014	 ldr         r3, [sp, #0x14]
  01744	e3530000	 cmp         r3, #0
  01748	1a000000	 bne         |$LN4@UpdateChar|

; 838  :         {
; 839  :         goto cleanUp;

  0174c	ea000030	 b           |$cleanUp$44083|
  01750		 |$LN4@UpdateChar|

; 840  :         }
; 841  :     
; 842  :     regVal = (UINT8) (chargeCurrent & 0xFF);

  01750	e1dd33b0	 ldrh        r3, [sp, #0x30]
  01754	e20330ff	 and         r3, r3, #0xFF
  01758	e20330ff	 and         r3, r3, #0xFF
  0175c	e5cd3008	 strb        r3, [sp, #8]

; 843  :     if (TWLWriteRegs(pDevice->hTwl, TWL_BCIIREF1, &regVal, 1) == FALSE)

  01760	e3a03001	 mov         r3, #1
  01764	e28d2008	 add         r2, sp, #8
  01768	e3a01802	 mov         r1, #2, 16
  0176c	e381109b	 orr         r1, r1, #0x9B
  01770	e59d002c	 ldr         r0, [sp, #0x2C]
  01774	e2800018	 add         r0, r0, #0x18
  01778	e5900000	 ldr         r0, [r0]
  0177c	eb000000	 bl          TWLWriteRegs
  01780	e58d0018	 str         r0, [sp, #0x18]
  01784	e59d3018	 ldr         r3, [sp, #0x18]
  01788	e3530000	 cmp         r3, #0
  0178c	1a000000	 bne         |$LN3@UpdateChar|

; 844  :         {
; 845  :         goto cleanUp;

  01790	ea00001f	 b           |$cleanUp$44083|
  01794		 |$LN3@UpdateChar|

; 846  :         }
; 847  : 
; 848  : 
; 849  :     if (TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &bcimfkey, 1) == FALSE)

  01794	e3a03001	 mov         r3, #1
  01798	e28d2000	 add         r2, sp, #0
  0179c	e3a01802	 mov         r1, #2, 16
  017a0	e3811085	 orr         r1, r1, #0x85
  017a4	e59d002c	 ldr         r0, [sp, #0x2C]
  017a8	e2800018	 add         r0, r0, #0x18
  017ac	e5900000	 ldr         r0, [r0]
  017b0	eb000000	 bl          TWLWriteRegs
  017b4	e58d001c	 str         r0, [sp, #0x1C]
  017b8	e59d301c	 ldr         r3, [sp, #0x1C]
  017bc	e3530000	 cmp         r3, #0
  017c0	1a000000	 bne         |$LN2@UpdateChar|

; 850  :         {
; 851  :         goto cleanUp;

  017c4	ea000012	 b           |$cleanUp$44083|
  017c8		 |$LN2@UpdateChar|

; 852  :         }
; 853  : 
; 854  :     regVal = (UINT8) (chargeCurrent >> 8);

  017c8	e1dd33b0	 ldrh        r3, [sp, #0x30]
  017cc	e1a03443	 mov         r3, r3, asr #8
  017d0	e20330ff	 and         r3, r3, #0xFF
  017d4	e5cd3008	 strb        r3, [sp, #8]

; 855  :     if (TWLWriteRegs(pDevice->hTwl, TWL_BCIIREF2, &regVal, 1) == FALSE)

  017d8	e3a03001	 mov         r3, #1
  017dc	e28d2008	 add         r2, sp, #8
  017e0	e3a01802	 mov         r1, #2, 16
  017e4	e381109c	 orr         r1, r1, #0x9C
  017e8	e59d002c	 ldr         r0, [sp, #0x2C]
  017ec	e2800018	 add         r0, r0, #0x18
  017f0	e5900000	 ldr         r0, [r0]
  017f4	eb000000	 bl          TWLWriteRegs
  017f8	e58d0020	 str         r0, [sp, #0x20]
  017fc	e59d3020	 ldr         r3, [sp, #0x20]
  01800	e3530000	 cmp         r3, #0
  01804	1a000000	 bne         |$LN1@UpdateChar|

; 856  :         {
; 857  :         goto cleanUp;

  01808	ea000001	 b           |$cleanUp$44083|
  0180c		 |$LN1@UpdateChar|

; 858  :         }
; 859  : 
; 860  :     bSuccess = TRUE;

  0180c	e3a03001	 mov         r3, #1
  01810	e58d3004	 str         r3, [sp, #4]
  01814		 |$cleanUp$44083|

; 861  : 
; 862  : cleanUp:
; 863  :     return bSuccess;

  01814	e59d3004	 ldr         r3, [sp, #4]
  01818	e58d300c	 str         r3, [sp, #0xC]

; 864  : }

  0181c	e59d000c	 ldr         r0, [sp, #0xC]
  01820	e28dd024	 add         sp, sp, #0x24
  01824	e89d6000	 ldmia       sp, {sp, lr}
  01828	e12fff1e	 bx          lr
  0182c		 |$LN12@UpdateChar|
  0182c		 |$LN13@UpdateChar|
  0182c	00000000	 DCD         |??_C@_1HC@LMLJIBBF@?$AA?$CL?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF@|
  01830		 |$LN14@UpdateChar|
  01830	00000000	 DCD         |dpCurSettings|
  01834		 |$M45075|

			 ENDP  ; |UpdateChargeCurrent|

	EXPORT	|??_C@_1DM@KGIGNPEC@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@HFPMPCKD@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|BCI_QueryVoltageMonitors|
	IMPORT	|LeaveCriticalSection|
	IMPORT	|EnterCriticalSection|

  00048			 AREA	 |.pdata|, PDATA
|$T45090| DCD	|$LN10@BCI_QueryV|
	DCD	0x40003404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@KGIGNPEC@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "Q", 0x0, "u"
	DCB	0x0, "e", 0x0, "r", 0x0, "y", 0x0, "V", 0x0, "o", 0x0, "l"
	DCB	0x0, "t", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "M", 0x0, "o"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "o", 0x0, "r", 0x0, "s"
	DCB	0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@HFPMPCKD@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "Q", 0x0, "u"
	DCB	0x0, "e", 0x0, "r", 0x0, "y", 0x0, "V", 0x0, "o", 0x0, "l"
	DCB	0x0, "t", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "M", 0x0, "o"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "o", 0x0, "r", 0x0, "s"
	DCB	0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  01834			 AREA	 |.text|, CODE, ARM

  01834		 |BCI_QueryVoltageMonitors| PROC

; 1641 : {   

  01834		 |$LN10@BCI_QueryV|
  01834	e1a0c00d	 mov         r12, sp
  01838	e92d0001	 stmdb       sp!, {r0}
  0183c	e92d5000	 stmdb       sp!, {r12, lr}
  01840	e24dd018	 sub         sp, sp, #0x18
  01844		 |$M45087|

; 1642 :     DWORD dwResult = 0;

  01844	e3a03000	 mov         r3, #0
  01848	e58d3004	 str         r3, [sp, #4]

; 1643 :     Device_t *pDevice = (Device_t*)hBCI;

  0184c	e59d3020	 ldr         r3, [sp, #0x20]
  01850	e58d3000	 str         r3, [sp]

; 1644 :     
; 1645 :     DEBUGMSG(ZONE_FUNCTION, (L"+BCI_QueryVoltageMonitors()\r\n"));

  01854	e59f30a0	 ldr         r3, [pc, #0xA0]
  01858	e5933440	 ldr         r3, [r3, #0x440]
  0185c	e3130080	 tst         r3, #0x80
  01860	0a000004	 beq         |$LN4@BCI_QueryV|
  01864	e59f0094	 ldr         r0, [pc, #0x94]
  01868	eb000000	 bl          NKDbgPrintfW
  0186c	e3a03001	 mov         r3, #1
  01870	e58d300c	 str         r3, [sp, #0xC]
  01874	ea000001	 b           |$LN5@BCI_QueryV|
  01878		 |$LN4@BCI_QueryV|
  01878	e3a03000	 mov         r3, #0
  0187c	e58d300c	 str         r3, [sp, #0xC]
  01880		 |$LN5@BCI_QueryV|

; 1646 : 
; 1647 :     // check for valid parameter
; 1648 :     if (pDevice == NULL) goto cleanUp;

  01880	e59d3000	 ldr         r3, [sp]
  01884	e3530000	 cmp         r3, #0
  01888	1a000000	 bne         |$LN1@BCI_QueryV|
  0188c	ea000008	 b           |$cleanUp$44372|
  01890		 |$LN1@BCI_QueryV|

; 1649 : 
; 1650 :     EnterCriticalSection(&pDevice->cs);    

  01890	e59d0000	 ldr         r0, [sp]
  01894	eb000000	 bl          EnterCriticalSection

; 1651 :     dwResult = QueryVoltageMonitors(pDevice);    

  01898	e59d0000	 ldr         r0, [sp]
  0189c	eb000000	 bl          QueryVoltageMonitors
  018a0	e58d0010	 str         r0, [sp, #0x10]
  018a4	e59d3010	 ldr         r3, [sp, #0x10]
  018a8	e58d3004	 str         r3, [sp, #4]

; 1652 :     LeaveCriticalSection(&pDevice->cs);

  018ac	e59d0000	 ldr         r0, [sp]
  018b0	eb000000	 bl          LeaveCriticalSection
  018b4		 |$cleanUp$44372|

; 1653 :     
; 1654 : cleanUp:
; 1655 :     DEBUGMSG(ZONE_FUNCTION, (L"-BCI_QueryVoltageMonitors()\r\n"));

  018b4	e59f3040	 ldr         r3, [pc, #0x40]
  018b8	e5933440	 ldr         r3, [r3, #0x440]
  018bc	e3130080	 tst         r3, #0x80
  018c0	0a000004	 beq         |$LN6@BCI_QueryV|
  018c4	e59f002c	 ldr         r0, [pc, #0x2C]
  018c8	eb000000	 bl          NKDbgPrintfW
  018cc	e3a03001	 mov         r3, #1
  018d0	e58d3014	 str         r3, [sp, #0x14]
  018d4	ea000001	 b           |$LN7@BCI_QueryV|
  018d8		 |$LN6@BCI_QueryV|
  018d8	e3a03000	 mov         r3, #0
  018dc	e58d3014	 str         r3, [sp, #0x14]
  018e0		 |$LN7@BCI_QueryV|

; 1656 :     return dwResult;

  018e0	e59d3004	 ldr         r3, [sp, #4]
  018e4	e58d3008	 str         r3, [sp, #8]

; 1657 : }

  018e8	e59d0008	 ldr         r0, [sp, #8]
  018ec	e28dd018	 add         sp, sp, #0x18
  018f0	e89d6000	 ldmia       sp, {sp, lr}
  018f4	e12fff1e	 bx          lr
  018f8		 |$LN11@BCI_QueryV|
  018f8		 |$LN12@BCI_QueryV|
  018f8	00000000	 DCD         |??_C@_1DM@KGIGNPEC@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  018fc		 |$LN13@BCI_QueryV|
  018fc	00000000	 DCD         |dpCurSettings|
  01900		 |$LN14@BCI_QueryV|
  01900	00000000	 DCD         |??_C@_1DM@HFPMPCKD@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01904		 |$M45088|

			 ENDP  ; |BCI_QueryVoltageMonitors|

	EXPORT	|??_C@_1DE@DDCKDGPF@?$AA?9?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@JFJMNLDE@?$AA?$CL?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx@| [ DATA ] ; `string'

  00050			 AREA	 |.pdata|, PDATA
|$T45104| DCD	|$LN12@QueryVolta|
	DCD	0x40005c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@DDCKDGPF@?$AA?9?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "Q", 0x0, "u", 0x0, "e", 0x0, "r", 0x0, "y", 0x0, "V"
	DCB	0x0, "o", 0x0, "l", 0x0, "t", 0x0, "a", 0x0, "g", 0x0, "e"
	DCB	0x0, "M", 0x0, "o", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "o"
	DCB	0x0, "r", 0x0, "s", 0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@JFJMNLDE@?$AA?$CL?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx@| DCB "+"
	DCB	0x0, "Q", 0x0, "u", 0x0, "e", 0x0, "r", 0x0, "y", 0x0, "V"
	DCB	0x0, "o", 0x0, "l", 0x0, "t", 0x0, "a", 0x0, "g", 0x0, "e"
	DCB	0x0, "M", 0x0, "o", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "o"
	DCB	0x0, "r", 0x0, "s", 0x0, "(", 0x0, "p", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "=", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  01904			 AREA	 |.text|, CODE, ARM

  01904		 |QueryVoltageMonitors| PROC

; 121  : {

  01904		 |$LN12@QueryVolta|
  01904	e1a0c00d	 mov         r12, sp
  01908	e92d0001	 stmdb       sp!, {r0}
  0190c	e92d5000	 stmdb       sp!, {r12, lr}
  01910	e24dd014	 sub         sp, sp, #0x14
  01914		 |$M45101|

; 122  :     UINT8 data;
; 123  :     DWORD dwResult = 0;

  01914	e3a03000	 mov         r3, #0
  01918	e58d3000	 str         r3, [sp]

; 124  :     DEBUGMSG(ZONE_FUNCTION, (L"+QueryVoltageMonitors(pDevice=0x%08X)\r\n",
; 125  :         pDevice
; 126  :         ));

  0191c	e59f3148	 ldr         r3, [pc, #0x148]
  01920	e5933440	 ldr         r3, [r3, #0x440]
  01924	e3130080	 tst         r3, #0x80
  01928	0a000005	 beq         |$LN6@QueryVolta|
  0192c	e59d101c	 ldr         r1, [sp, #0x1C]
  01930	e59f0138	 ldr         r0, [pc, #0x138]
  01934	eb000000	 bl          NKDbgPrintfW
  01938	e3a03001	 mov         r3, #1
  0193c	e58d300c	 str         r3, [sp, #0xC]
  01940	ea000001	 b           |$LN7@QueryVolta|
  01944		 |$LN6@QueryVolta|
  01944	e3a03000	 mov         r3, #0
  01948	e58d300c	 str         r3, [sp, #0xC]
  0194c		 |$LN7@QueryVolta|

; 127  : 
; 128  :     // get access to BCIMFEN2
; 129  :     data = KEY_BCIMFEN2;

  0194c	e3a03073	 mov         r3, #0x73
  01950	e5cd3004	 strb        r3, [sp, #4]

; 130  :     TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  01954	e3a03001	 mov         r3, #1
  01958	e28d2004	 add         r2, sp, #4
  0195c	e3a01802	 mov         r1, #2, 16
  01960	e3811085	 orr         r1, r1, #0x85
  01964	e59d001c	 ldr         r0, [sp, #0x1C]
  01968	e2800018	 add         r0, r0, #0x18
  0196c	e5900000	 ldr         r0, [r0]
  01970	eb000000	 bl          TWLWriteRegs

; 131  : 
; 132  :     // update over-charge monitors
; 133  :     TWLReadRegs(pDevice->hTwl, TWL_BCIMFEN2, &data, 1);

  01974	e3a03001	 mov         r3, #1
  01978	e28d2004	 add         r2, sp, #4
  0197c	e3a01802	 mov         r1, #2, 16
  01980	e3811087	 orr         r1, r1, #0x87
  01984	e59d001c	 ldr         r0, [sp, #0x1C]
  01988	e2800018	 add         r0, r0, #0x18
  0198c	e5900000	 ldr         r0, [r0]
  01990	eb000000	 bl          TWLReadRegs

; 134  :     if (data & ACCHGOVEN) dwResult |= BCI_OV_VAC;

  01994	e5dd3004	 ldrb        r3, [sp, #4]
  01998	e3130080	 tst         r3, #0x80
  0199c	0a000002	 beq         |$LN3@QueryVolta|
  019a0	e59d3000	 ldr         r3, [sp]
  019a4	e3833004	 orr         r3, r3, #4
  019a8	e58d3000	 str         r3, [sp]
  019ac		 |$LN3@QueryVolta|

; 135  :     if (data & VBUSOVEN) dwResult |= BCI_OV_VBUS;

  019ac	e5dd3004	 ldrb        r3, [sp, #4]
  019b0	e3130020	 tst         r3, #0x20
  019b4	0a000002	 beq         |$LN2@QueryVolta|
  019b8	e59d3000	 ldr         r3, [sp]
  019bc	e3833002	 orr         r3, r3, #2
  019c0	e58d3000	 str         r3, [sp]
  019c4		 |$LN2@QueryVolta|

; 136  : 
; 137  :     // get access to BCIMFEN4
; 138  :     data = KEY_BCIMFEN4;

  019c4	e3a0303e	 mov         r3, #0x3E
  019c8	e5cd3004	 strb        r3, [sp, #4]

; 139  :     TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  019cc	e3a03001	 mov         r3, #1
  019d0	e28d2004	 add         r2, sp, #4
  019d4	e3a01802	 mov         r1, #2, 16
  019d8	e3811085	 orr         r1, r1, #0x85
  019dc	e59d001c	 ldr         r0, [sp, #0x1C]
  019e0	e2800018	 add         r0, r0, #0x18
  019e4	e5900000	 ldr         r0, [r0]
  019e8	eb000000	 bl          TWLWriteRegs

; 140  : 
; 141  :     // update over-charge monitors
; 142  :     TWLReadRegs(pDevice->hTwl, TWL_BCIMFEN4, &data, 1);

  019ec	e3a03001	 mov         r3, #1
  019f0	e28d2004	 add         r2, sp, #4
  019f4	e3a01802	 mov         r1, #2, 16
  019f8	e3811089	 orr         r1, r1, #0x89
  019fc	e59d001c	 ldr         r0, [sp, #0x1C]
  01a00	e2800018	 add         r0, r0, #0x18
  01a04	e5900000	 ldr         r0, [r0]
  01a08	eb000000	 bl          TWLReadRegs

; 143  :     if (data & VBATOVEN) dwResult |= BCI_OV_VBAT;

  01a0c	e5dd3004	 ldrb        r3, [sp, #4]
  01a10	e3130002	 tst         r3, #2
  01a14	0a000002	 beq         |$LN1@QueryVolta|
  01a18	e59d3000	 ldr         r3, [sp]
  01a1c	e3833001	 orr         r3, r3, #1
  01a20	e58d3000	 str         r3, [sp]
  01a24		 |$LN1@QueryVolta|

; 144  : 
; 145  :     DEBUGMSG(ZONE_FUNCTION, (L"-QueryVoltageMonitors()\r\n"));

  01a24	e59f3040	 ldr         r3, [pc, #0x40]
  01a28	e5933440	 ldr         r3, [r3, #0x440]
  01a2c	e3130080	 tst         r3, #0x80
  01a30	0a000004	 beq         |$LN8@QueryVolta|
  01a34	e59f002c	 ldr         r0, [pc, #0x2C]
  01a38	eb000000	 bl          NKDbgPrintfW
  01a3c	e3a03001	 mov         r3, #1
  01a40	e58d3010	 str         r3, [sp, #0x10]
  01a44	ea000001	 b           |$LN9@QueryVolta|
  01a48		 |$LN8@QueryVolta|
  01a48	e3a03000	 mov         r3, #0
  01a4c	e58d3010	 str         r3, [sp, #0x10]
  01a50		 |$LN9@QueryVolta|

; 146  :     return dwResult;

  01a50	e59d3000	 ldr         r3, [sp]
  01a54	e58d3008	 str         r3, [sp, #8]

; 147  : }

  01a58	e59d0008	 ldr         r0, [sp, #8]
  01a5c	e28dd014	 add         sp, sp, #0x14
  01a60	e89d6000	 ldmia       sp, {sp, lr}
  01a64	e12fff1e	 bx          lr
  01a68		 |$LN13@QueryVolta|
  01a68		 |$LN14@QueryVolta|
  01a68	00000000	 DCD         |??_C@_1DE@DDCKDGPF@?$AA?9?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01a6c		 |$LN15@QueryVolta|
  01a6c	00000000	 DCD         |dpCurSettings|
  01a70		 |$LN16@QueryVolta|
  01a70	00000000	 DCD         |??_C@_1FA@JFJMNLDE@?$AA?$CL?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx@|
  01a74		 |$M45102|

			 ENDP  ; |QueryVoltageMonitors|

	EXPORT	|??_C@_1EE@LBPCOGAK@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@NHMHJDCL@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD@| [ DATA ] ; `string'
	EXPORT	|BCI_QueryTemperatureMonitors|

  00058			 AREA	 |.pdata|, PDATA
|$T45118| DCD	|$LN10@BCI_QueryT|
	DCD	0x40003504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@LBPCOGAK@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN@| DCB "-"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "Q", 0x0, "u"
	DCB	0x0, "e", 0x0, "r", 0x0, "y", 0x0, "T", 0x0, "e", 0x0, "m"
	DCB	0x0, "p", 0x0, "e", 0x0, "r", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "r", 0x0, "e", 0x0, "M", 0x0, "o", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "o", 0x0, "r", 0x0, "s", 0x0, "(", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@NHMHJDCL@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD@| DCB "+"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "Q", 0x0, "u"
	DCB	0x0, "e", 0x0, "r", 0x0, "y", 0x0, "T", 0x0, "e", 0x0, "m"
	DCB	0x0, "p", 0x0, "e", 0x0, "r", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "r", 0x0, "e", 0x0, "M", 0x0, "o", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "o", 0x0, "r", 0x0, "s", 0x0, "(", 0x0, "p"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  01a74			 AREA	 |.text|, CODE, ARM

  01a74		 |BCI_QueryTemperatureMonitors| PROC

; 1669 : {

  01a74		 |$LN10@BCI_QueryT|
  01a74	e1a0c00d	 mov         r12, sp
  01a78	e92d0001	 stmdb       sp!, {r0}
  01a7c	e92d5000	 stmdb       sp!, {r12, lr}
  01a80	e24dd018	 sub         sp, sp, #0x18
  01a84		 |$M45115|

; 1670 :     DWORD dwResult = 0;

  01a84	e3a03000	 mov         r3, #0
  01a88	e58d3004	 str         r3, [sp, #4]

; 1671 :     Device_t *pDevice = (Device_t*)hBCI;

  01a8c	e59d3020	 ldr         r3, [sp, #0x20]
  01a90	e58d3000	 str         r3, [sp]

; 1672 :     DEBUGMSG(ZONE_FUNCTION, (L"+BCI_QueryTemperatureMonitors(pDevice=0x%08X)\r\n",
; 1673 :         pDevice
; 1674 :         ));

  01a94	e59f30a4	 ldr         r3, [pc, #0xA4]
  01a98	e5933440	 ldr         r3, [r3, #0x440]
  01a9c	e3130080	 tst         r3, #0x80
  01aa0	0a000005	 beq         |$LN4@BCI_QueryT|
  01aa4	e59d1000	 ldr         r1, [sp]
  01aa8	e59f0094	 ldr         r0, [pc, #0x94]
  01aac	eb000000	 bl          NKDbgPrintfW
  01ab0	e3a03001	 mov         r3, #1
  01ab4	e58d300c	 str         r3, [sp, #0xC]
  01ab8	ea000001	 b           |$LN5@BCI_QueryT|
  01abc		 |$LN4@BCI_QueryT|
  01abc	e3a03000	 mov         r3, #0
  01ac0	e58d300c	 str         r3, [sp, #0xC]
  01ac4		 |$LN5@BCI_QueryT|

; 1675 : 
; 1676 :     // check for valid parameter
; 1677 :     if (pDevice == NULL) goto cleanUp;

  01ac4	e59d3000	 ldr         r3, [sp]
  01ac8	e3530000	 cmp         r3, #0
  01acc	1a000000	 bne         |$LN1@BCI_QueryT|
  01ad0	ea000008	 b           |$cleanUp$44385|
  01ad4		 |$LN1@BCI_QueryT|

; 1678 : 
; 1679 :     EnterCriticalSection(&pDevice->cs);    

  01ad4	e59d0000	 ldr         r0, [sp]
  01ad8	eb000000	 bl          EnterCriticalSection

; 1680 :     dwResult = QueryTemperatureMonitors(pDevice);    

  01adc	e59d0000	 ldr         r0, [sp]
  01ae0	eb000000	 bl          QueryTemperatureMonitors
  01ae4	e58d0010	 str         r0, [sp, #0x10]
  01ae8	e59d3010	 ldr         r3, [sp, #0x10]
  01aec	e58d3004	 str         r3, [sp, #4]

; 1681 :     LeaveCriticalSection(&pDevice->cs);

  01af0	e59d0000	 ldr         r0, [sp]
  01af4	eb000000	 bl          LeaveCriticalSection
  01af8		 |$cleanUp$44385|

; 1682 : 
; 1683 : cleanUp:
; 1684 :     DEBUGMSG(ZONE_FUNCTION, (L"-BCI_QueryTemperatureMonitors()\r\n"));

  01af8	e59f3040	 ldr         r3, [pc, #0x40]
  01afc	e5933440	 ldr         r3, [r3, #0x440]
  01b00	e3130080	 tst         r3, #0x80
  01b04	0a000004	 beq         |$LN6@BCI_QueryT|
  01b08	e59f002c	 ldr         r0, [pc, #0x2C]
  01b0c	eb000000	 bl          NKDbgPrintfW
  01b10	e3a03001	 mov         r3, #1
  01b14	e58d3014	 str         r3, [sp, #0x14]
  01b18	ea000001	 b           |$LN7@BCI_QueryT|
  01b1c		 |$LN6@BCI_QueryT|
  01b1c	e3a03000	 mov         r3, #0
  01b20	e58d3014	 str         r3, [sp, #0x14]
  01b24		 |$LN7@BCI_QueryT|

; 1685 :     return dwResult;

  01b24	e59d3004	 ldr         r3, [sp, #4]
  01b28	e58d3008	 str         r3, [sp, #8]

; 1686 : }

  01b2c	e59d0008	 ldr         r0, [sp, #8]
  01b30	e28dd018	 add         sp, sp, #0x18
  01b34	e89d6000	 ldmia       sp, {sp, lr}
  01b38	e12fff1e	 bx          lr
  01b3c		 |$LN11@BCI_QueryT|
  01b3c		 |$LN12@BCI_QueryT|
  01b3c	00000000	 DCD         |??_C@_1EE@LBPCOGAK@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN@|
  01b40		 |$LN13@BCI_QueryT|
  01b40	00000000	 DCD         |dpCurSettings|
  01b44		 |$LN14@BCI_QueryT|
  01b44	00000000	 DCD         |??_C@_1GA@NHMHJDCL@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD@|
  01b48		 |$M45116|

			 ENDP  ; |BCI_QueryTemperatureMonitors|

	EXPORT	|??_C@_1DM@IMMBKDIF@?$AA?9?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@GAEPGLJI@?$AA?$CL?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc@| [ DATA ] ; `string'

  00060			 AREA	 |.pdata|, PDATA
|$T45132| DCD	|$LN11@QueryTempe|
	DCD	0x40004404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@IMMBKDIF@?$AA?9?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "Q", 0x0, "u", 0x0, "e", 0x0, "r", 0x0, "y", 0x0, "T"
	DCB	0x0, "e", 0x0, "m", 0x0, "p", 0x0, "e", 0x0, "r", 0x0, "a"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "e", 0x0, "M", 0x0, "o"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "o", 0x0, "r", 0x0, "s"
	DCB	0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@GAEPGLJI@?$AA?$CL?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc@| DCB "+"
	DCB	0x0, "Q", 0x0, "u", 0x0, "e", 0x0, "r", 0x0, "y", 0x0, "T"
	DCB	0x0, "e", 0x0, "m", 0x0, "p", 0x0, "e", 0x0, "r", 0x0, "a"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "e", 0x0, "M", 0x0, "o"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "o", 0x0, "r", 0x0, "s"
	DCB	0x0, "(", 0x0, "p", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  01b48			 AREA	 |.text|, CODE, ARM

  01b48		 |QueryTemperatureMonitors| PROC

; 159  : {

  01b48		 |$LN11@QueryTempe|
  01b48	e1a0c00d	 mov         r12, sp
  01b4c	e92d0001	 stmdb       sp!, {r0}
  01b50	e92d5000	 stmdb       sp!, {r12, lr}
  01b54	e24dd014	 sub         sp, sp, #0x14
  01b58		 |$M45129|

; 160  :     UINT8 data;
; 161  :     DWORD dwResult = 0;

  01b58	e3a03000	 mov         r3, #0
  01b5c	e58d3000	 str         r3, [sp]

; 162  :     DEBUGMSG(ZONE_FUNCTION, (L"+QueryTemperatureMonitors(pDevice=0x%08X)\r\n",
; 163  :         pDevice
; 164  :         ));

  01b60	e59f30e8	 ldr         r3, [pc, #0xE8]
  01b64	e5933440	 ldr         r3, [r3, #0x440]
  01b68	e3130080	 tst         r3, #0x80
  01b6c	0a000005	 beq         |$LN5@QueryTempe|
  01b70	e59d101c	 ldr         r1, [sp, #0x1C]
  01b74	e59f00d8	 ldr         r0, [pc, #0xD8]
  01b78	eb000000	 bl          NKDbgPrintfW
  01b7c	e3a03001	 mov         r3, #1
  01b80	e58d300c	 str         r3, [sp, #0xC]
  01b84	ea000001	 b           |$LN6@QueryTempe|
  01b88		 |$LN5@QueryTempe|
  01b88	e3a03000	 mov         r3, #0
  01b8c	e58d300c	 str         r3, [sp, #0xC]
  01b90		 |$LN6@QueryTempe|

; 165  : 
; 166  :     // get access to BCIMFEN2
; 167  :     data = KEY_BCIMFEN2;

  01b90	e3a03073	 mov         r3, #0x73
  01b94	e5cd3004	 strb        r3, [sp, #4]

; 168  :     TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  01b98	e3a03001	 mov         r3, #1
  01b9c	e28d2004	 add         r2, sp, #4
  01ba0	e3a01802	 mov         r1, #2, 16
  01ba4	e3811085	 orr         r1, r1, #0x85
  01ba8	e59d001c	 ldr         r0, [sp, #0x1C]
  01bac	e2800018	 add         r0, r0, #0x18
  01bb0	e5900000	 ldr         r0, [r0]
  01bb4	eb000000	 bl          TWLWriteRegs

; 169  : 
; 170  :     // check temperature monitors
; 171  :     TWLReadRegs(pDevice->hTwl, TWL_BCIMFEN2, &data, 1);

  01bb8	e3a03001	 mov         r3, #1
  01bbc	e28d2004	 add         r2, sp, #4
  01bc0	e3a01802	 mov         r1, #2, 16
  01bc4	e3811087	 orr         r1, r1, #0x87
  01bc8	e59d001c	 ldr         r0, [sp, #0x1C]
  01bcc	e2800018	 add         r0, r0, #0x18
  01bd0	e5900000	 ldr         r0, [r0]
  01bd4	eb000000	 bl          TWLReadRegs

; 172  :     if (data & TBATOR1EN) dwResult |= BCI_TEMP_VBAT1;

  01bd8	e5dd3004	 ldrb        r3, [sp, #4]
  01bdc	e3130008	 tst         r3, #8
  01be0	0a000002	 beq         |$LN2@QueryTempe|
  01be4	e59d3000	 ldr         r3, [sp]
  01be8	e3833001	 orr         r3, r3, #1
  01bec	e58d3000	 str         r3, [sp]
  01bf0		 |$LN2@QueryTempe|

; 173  :     if (data & TBATOR2EN) dwResult |= BCI_TEMP_VBAT2;

  01bf0	e5dd3004	 ldrb        r3, [sp, #4]
  01bf4	e3130002	 tst         r3, #2
  01bf8	0a000002	 beq         |$LN1@QueryTempe|
  01bfc	e59d3000	 ldr         r3, [sp]
  01c00	e3833002	 orr         r3, r3, #2
  01c04	e58d3000	 str         r3, [sp]
  01c08		 |$LN1@QueryTempe|

; 174  : 
; 175  :     DEBUGMSG(ZONE_FUNCTION, (L"-QueryTemperatureMonitors()\r\n"));

  01c08	e59f3040	 ldr         r3, [pc, #0x40]
  01c0c	e5933440	 ldr         r3, [r3, #0x440]
  01c10	e3130080	 tst         r3, #0x80
  01c14	0a000004	 beq         |$LN7@QueryTempe|
  01c18	e59f002c	 ldr         r0, [pc, #0x2C]
  01c1c	eb000000	 bl          NKDbgPrintfW
  01c20	e3a03001	 mov         r3, #1
  01c24	e58d3010	 str         r3, [sp, #0x10]
  01c28	ea000001	 b           |$LN8@QueryTempe|
  01c2c		 |$LN7@QueryTempe|
  01c2c	e3a03000	 mov         r3, #0
  01c30	e58d3010	 str         r3, [sp, #0x10]
  01c34		 |$LN8@QueryTempe|

; 176  :     return dwResult;

  01c34	e59d3000	 ldr         r3, [sp]
  01c38	e58d3008	 str         r3, [sp, #8]

; 177  : }

  01c3c	e59d0008	 ldr         r0, [sp, #8]
  01c40	e28dd014	 add         sp, sp, #0x14
  01c44	e89d6000	 ldmia       sp, {sp, lr}
  01c48	e12fff1e	 bx          lr
  01c4c		 |$LN12@QueryTempe|
  01c4c		 |$LN13@QueryTempe|
  01c4c	00000000	 DCD         |??_C@_1DM@IMMBKDIF@?$AA?9?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01c50		 |$LN14@QueryTempe|
  01c50	00000000	 DCD         |dpCurSettings|
  01c54		 |$LN15@QueryTempe|
  01c54	00000000	 DCD         |??_C@_1FI@GAEPGLJI@?$AA?$CL?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc@|
  01c58		 |$M45130|

			 ENDP  ; |QueryTemperatureMonitors|

	EXPORT	|??_C@_1DM@DENPAIO@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@ECHEIEBN@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc@| [ DATA ] ; `string'
	EXPORT	|BCI_QueryCurrentMonitors|

  00068			 AREA	 |.pdata|, PDATA
|$T45146| DCD	|$LN10@BCI_QueryC|
	DCD	0x40003504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@DENPAIO@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "Q", 0x0, "u"
	DCB	0x0, "e", 0x0, "r", 0x0, "y", 0x0, "C", 0x0, "u", 0x0, "r"
	DCB	0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "M", 0x0, "o"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "o", 0x0, "r", 0x0, "s"
	DCB	0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@ECHEIEBN@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc@| DCB "+"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "Q", 0x0, "u"
	DCB	0x0, "e", 0x0, "r", 0x0, "y", 0x0, "C", 0x0, "u", 0x0, "r"
	DCB	0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "M", 0x0, "o"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "o", 0x0, "r", 0x0, "s"
	DCB	0x0, "(", 0x0, "p", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  01c58			 AREA	 |.text|, CODE, ARM

  01c58		 |BCI_QueryCurrentMonitors| PROC

; 1698 : {

  01c58		 |$LN10@BCI_QueryC|
  01c58	e1a0c00d	 mov         r12, sp
  01c5c	e92d0001	 stmdb       sp!, {r0}
  01c60	e92d5000	 stmdb       sp!, {r12, lr}
  01c64	e24dd018	 sub         sp, sp, #0x18
  01c68		 |$M45143|

; 1699 :     DWORD dwResult = 0;

  01c68	e3a03000	 mov         r3, #0
  01c6c	e58d3004	 str         r3, [sp, #4]

; 1700 :     Device_t *pDevice = (Device_t*)hBCI;

  01c70	e59d3020	 ldr         r3, [sp, #0x20]
  01c74	e58d3000	 str         r3, [sp]

; 1701 :     DEBUGMSG(ZONE_FUNCTION, (L"+BCI_QueryCurrentMonitors(pDevice=0x%08X)\r\n",
; 1702 :         pDevice
; 1703 :         ));

  01c78	e59f30a4	 ldr         r3, [pc, #0xA4]
  01c7c	e5933440	 ldr         r3, [r3, #0x440]
  01c80	e3130080	 tst         r3, #0x80
  01c84	0a000005	 beq         |$LN4@BCI_QueryC|
  01c88	e59d1000	 ldr         r1, [sp]
  01c8c	e59f0094	 ldr         r0, [pc, #0x94]
  01c90	eb000000	 bl          NKDbgPrintfW
  01c94	e3a03001	 mov         r3, #1
  01c98	e58d300c	 str         r3, [sp, #0xC]
  01c9c	ea000001	 b           |$LN5@BCI_QueryC|
  01ca0		 |$LN4@BCI_QueryC|
  01ca0	e3a03000	 mov         r3, #0
  01ca4	e58d300c	 str         r3, [sp, #0xC]
  01ca8		 |$LN5@BCI_QueryC|

; 1704 : 
; 1705 :     // check for valid parameter
; 1706 :     if (pDevice == NULL) goto cleanUp;

  01ca8	e59d3000	 ldr         r3, [sp]
  01cac	e3530000	 cmp         r3, #0
  01cb0	1a000000	 bne         |$LN1@BCI_QueryC|
  01cb4	ea000008	 b           |$cleanUp$44398|
  01cb8		 |$LN1@BCI_QueryC|

; 1707 : 
; 1708 :     EnterCriticalSection(&pDevice->cs);    

  01cb8	e59d0000	 ldr         r0, [sp]
  01cbc	eb000000	 bl          EnterCriticalSection

; 1709 :     dwResult = QueryCurrentMonitors(pDevice);    

  01cc0	e59d0000	 ldr         r0, [sp]
  01cc4	eb000000	 bl          QueryCurrentMonitors
  01cc8	e58d0010	 str         r0, [sp, #0x10]
  01ccc	e59d3010	 ldr         r3, [sp, #0x10]
  01cd0	e58d3004	 str         r3, [sp, #4]

; 1710 :     LeaveCriticalSection(&pDevice->cs);

  01cd4	e59d0000	 ldr         r0, [sp]
  01cd8	eb000000	 bl          LeaveCriticalSection
  01cdc		 |$cleanUp$44398|

; 1711 : 
; 1712 : cleanUp:
; 1713 :     DEBUGMSG(ZONE_FUNCTION, (L"-BCI_QueryCurrentMonitors()\r\n"));

  01cdc	e59f3040	 ldr         r3, [pc, #0x40]
  01ce0	e5933440	 ldr         r3, [r3, #0x440]
  01ce4	e3130080	 tst         r3, #0x80
  01ce8	0a000004	 beq         |$LN6@BCI_QueryC|
  01cec	e59f002c	 ldr         r0, [pc, #0x2C]
  01cf0	eb000000	 bl          NKDbgPrintfW
  01cf4	e3a03001	 mov         r3, #1
  01cf8	e58d3014	 str         r3, [sp, #0x14]
  01cfc	ea000001	 b           |$LN7@BCI_QueryC|
  01d00		 |$LN6@BCI_QueryC|
  01d00	e3a03000	 mov         r3, #0
  01d04	e58d3014	 str         r3, [sp, #0x14]
  01d08		 |$LN7@BCI_QueryC|

; 1714 :     return dwResult;

  01d08	e59d3004	 ldr         r3, [sp, #4]
  01d0c	e58d3008	 str         r3, [sp, #8]

; 1715 : }

  01d10	e59d0008	 ldr         r0, [sp, #8]
  01d14	e28dd018	 add         sp, sp, #0x18
  01d18	e89d6000	 ldmia       sp, {sp, lr}
  01d1c	e12fff1e	 bx          lr
  01d20		 |$LN11@BCI_QueryC|
  01d20		 |$LN12@BCI_QueryC|
  01d20	00000000	 DCD         |??_C@_1DM@DENPAIO@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01d24		 |$LN13@BCI_QueryC|
  01d24	00000000	 DCD         |dpCurSettings|
  01d28		 |$LN14@BCI_QueryC|
  01d28	00000000	 DCD         |??_C@_1FI@ECHEIEBN@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc@|
  01d2c		 |$M45144|

			 ENDP  ; |BCI_QueryCurrentMonitors|

	EXPORT	|??_C@_1DC@BBFCBJGP@?$AA?9?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@EKPDLHKE@?$AA?$CL?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF@| [ DATA ] ; `string'

  00070			 AREA	 |.pdata|, PDATA
|$T45160| DCD	|$LN12@QueryCurre|
	DCD	0x40005204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@BBFCBJGP@?$AA?9?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "Q", 0x0, "u", 0x0, "e", 0x0, "r", 0x0, "y", 0x0, "C"
	DCB	0x0, "h", 0x0, "a", 0x0, "r", 0x0, "g", 0x0, "e", 0x0, "M"
	DCB	0x0, "o", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "o", 0x0, "r"
	DCB	0x0, "s", 0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@EKPDLHKE@?$AA?$CL?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF@| DCB "+"
	DCB	0x0, "Q", 0x0, "u", 0x0, "e", 0x0, "r", 0x0, "y", 0x0, "C"
	DCB	0x0, "h", 0x0, "a", 0x0, "r", 0x0, "g", 0x0, "e", 0x0, "M"
	DCB	0x0, "o", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "o", 0x0, "r"
	DCB	0x0, "s", 0x0, "(", 0x0, "p", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  01d2c			 AREA	 |.text|, CODE, ARM

  01d2c		 |QueryCurrentMonitors| PROC

; 189  : {

  01d2c		 |$LN12@QueryCurre|
  01d2c	e1a0c00d	 mov         r12, sp
  01d30	e92d0001	 stmdb       sp!, {r0}
  01d34	e92d5000	 stmdb       sp!, {r12, lr}
  01d38	e24dd014	 sub         sp, sp, #0x14
  01d3c		 |$M45157|

; 190  :     UINT8 data;
; 191  :     DWORD dwResult = 0;

  01d3c	e3a03000	 mov         r3, #0
  01d40	e58d3000	 str         r3, [sp]

; 192  :     DEBUGMSG(ZONE_FUNCTION, (L"+QueryChargeMonitors(pDevice=0x%08X)\r\n",
; 193  :         pDevice
; 194  :         ));

  01d44	e59f3120	 ldr         r3, [pc, #0x120]
  01d48	e5933440	 ldr         r3, [r3, #0x440]
  01d4c	e3130080	 tst         r3, #0x80
  01d50	0a000005	 beq         |$LN6@QueryCurre|
  01d54	e59d101c	 ldr         r1, [sp, #0x1C]
  01d58	e59f0110	 ldr         r0, [pc, #0x110]
  01d5c	eb000000	 bl          NKDbgPrintfW
  01d60	e3a03001	 mov         r3, #1
  01d64	e58d300c	 str         r3, [sp, #0xC]
  01d68	ea000001	 b           |$LN7@QueryCurre|
  01d6c		 |$LN6@QueryCurre|
  01d6c	e3a03000	 mov         r3, #0
  01d70	e58d300c	 str         r3, [sp, #0xC]
  01d74		 |$LN7@QueryCurre|

; 195  : 
; 196  :     // get access to BCIMFEN2
; 197  :     data = KEY_BCIMFEN3;

  01d74	e3a0309c	 mov         r3, #0x9C
  01d78	e5cd3004	 strb        r3, [sp, #4]

; 198  :     TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  01d7c	e3a03001	 mov         r3, #1
  01d80	e28d2004	 add         r2, sp, #4
  01d84	e3a01802	 mov         r1, #2, 16
  01d88	e3811085	 orr         r1, r1, #0x85
  01d8c	e59d001c	 ldr         r0, [sp, #0x1C]
  01d90	e2800018	 add         r0, r0, #0x18
  01d94	e5900000	 ldr         r0, [r0]
  01d98	eb000000	 bl          TWLWriteRegs

; 199  : 
; 200  :     // check charging monitors
; 201  :     TWLReadRegs(pDevice->hTwl, TWL_BCIMFEN3, &data, 1);

  01d9c	e3a03001	 mov         r3, #1
  01da0	e28d2004	 add         r2, sp, #4
  01da4	e3a01802	 mov         r1, #2, 16
  01da8	e3811088	 orr         r1, r1, #0x88
  01dac	e59d001c	 ldr         r0, [sp, #0x1C]
  01db0	e2800018	 add         r0, r0, #0x18
  01db4	e5900000	 ldr         r0, [r0]
  01db8	eb000000	 bl          TWLReadRegs

; 202  :     if (data & ICHGHIGHEN) dwResult |= BCI_OC_VBAT;

  01dbc	e5dd3004	 ldrb        r3, [sp, #4]
  01dc0	e3130008	 tst         r3, #8
  01dc4	0a000002	 beq         |$LN3@QueryCurre|
  01dc8	e59d3000	 ldr         r3, [sp]
  01dcc	e3833001	 orr         r3, r3, #1
  01dd0	e58d3000	 str         r3, [sp]
  01dd4		 |$LN3@QueryCurre|

; 203  :     if (data & ICHGEOCEN) dwResult |= BCI_EOC_VBAT;

  01dd4	e5dd3004	 ldrb        r3, [sp, #4]
  01dd8	e3130080	 tst         r3, #0x80
  01ddc	0a000002	 beq         |$LN2@QueryCurre|
  01de0	e59d3000	 ldr         r3, [sp]
  01de4	e3833002	 orr         r3, r3, #2
  01de8	e58d3000	 str         r3, [sp]
  01dec		 |$LN2@QueryCurre|

; 204  : 
; 205  :     // check current gain settings
; 206  :     TWLReadRegs(pDevice->hTwl, TWL_BCICTL1, &data, 1);

  01dec	e3a03001	 mov         r3, #1
  01df0	e28d2004	 add         r2, sp, #4
  01df4	e3a01802	 mov         r1, #2, 16
  01df8	e3811097	 orr         r1, r1, #0x97
  01dfc	e59d001c	 ldr         r0, [sp, #0x1C]
  01e00	e2800018	 add         r0, r0, #0x18
  01e04	e5900000	 ldr         r0, [r0]
  01e08	eb000000	 bl          TWLReadRegs

; 207  :     if (data & CGAIN) dwResult |= BCI_CGAIN_VBAT;

  01e0c	e5dd3004	 ldrb        r3, [sp, #4]
  01e10	e3130020	 tst         r3, #0x20
  01e14	0a000002	 beq         |$LN1@QueryCurre|
  01e18	e59d3000	 ldr         r3, [sp]
  01e1c	e3833003	 orr         r3, r3, #3
  01e20	e58d3000	 str         r3, [sp]
  01e24		 |$LN1@QueryCurre|

; 208  : 
; 209  :     DEBUGMSG(ZONE_FUNCTION, (L"-QueryChargeMonitors()\r\n"));

  01e24	e59f3040	 ldr         r3, [pc, #0x40]
  01e28	e5933440	 ldr         r3, [r3, #0x440]
  01e2c	e3130080	 tst         r3, #0x80
  01e30	0a000004	 beq         |$LN8@QueryCurre|
  01e34	e59f002c	 ldr         r0, [pc, #0x2C]
  01e38	eb000000	 bl          NKDbgPrintfW
  01e3c	e3a03001	 mov         r3, #1
  01e40	e58d3010	 str         r3, [sp, #0x10]
  01e44	ea000001	 b           |$LN9@QueryCurre|
  01e48		 |$LN8@QueryCurre|
  01e48	e3a03000	 mov         r3, #0
  01e4c	e58d3010	 str         r3, [sp, #0x10]
  01e50		 |$LN9@QueryCurre|

; 210  :     return dwResult;

  01e50	e59d3000	 ldr         r3, [sp]
  01e54	e58d3008	 str         r3, [sp, #8]

; 211  : }

  01e58	e59d0008	 ldr         r0, [sp, #8]
  01e5c	e28dd014	 add         sp, sp, #0x14
  01e60	e89d6000	 ldmia       sp, {sp, lr}
  01e64	e12fff1e	 bx          lr
  01e68		 |$LN13@QueryCurre|
  01e68		 |$LN14@QueryCurre|
  01e68	00000000	 DCD         |??_C@_1DC@BBFCBJGP@?$AA?9?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01e6c		 |$LN15@QueryCurre|
  01e6c	00000000	 DCD         |dpCurSettings|
  01e70		 |$LN16@QueryCurre|
  01e70	00000000	 DCD         |??_C@_1EO@EKPDLHKE@?$AA?$CL?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF@|
  01e74		 |$M45158|

			 ENDP  ; |QueryCurrentMonitors|

	EXPORT	|??_C@_1DI@MGCLFDFN@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@ILFFDLKP@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|BCI_SetVoltageMonitors|

  00078			 AREA	 |.pdata|, PDATA
|$T45174| DCD	|$LN10@BCI_SetVol|
	DCD	0x40003604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@MGCLFDFN@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "V", 0x0, "o", 0x0, "l", 0x0, "t", 0x0, "a"
	DCB	0x0, "g", 0x0, "e", 0x0, "M", 0x0, "o", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "o", 0x0, "r", 0x0, "s", 0x0, "(", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@ILFFDLKP@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "V", 0x0, "o", 0x0, "l", 0x0, "t", 0x0, "a"
	DCB	0x0, "g", 0x0, "e", 0x0, "M", 0x0, "o", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "o", 0x0, "r", 0x0, "s", 0x0, "(", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  01e74			 AREA	 |.text|, CODE, ARM

  01e74		 |BCI_SetVoltageMonitors| PROC

; 1729 : {   

  01e74		 |$LN10@BCI_SetVol|
  01e74	e1a0c00d	 mov         r12, sp
  01e78	e92d0007	 stmdb       sp!, {r0 - r2}
  01e7c	e92d5000	 stmdb       sp!, {r12, lr}
  01e80	e24dd018	 sub         sp, sp, #0x18
  01e84		 |$M45171|

; 1730 :     BOOL bSuccess = FALSE;

  01e84	e3a03000	 mov         r3, #0
  01e88	e58d3004	 str         r3, [sp, #4]

; 1731 :     Device_t *pDevice = (Device_t*)hBCI;;

  01e8c	e59d3020	 ldr         r3, [sp, #0x20]
  01e90	e58d3000	 str         r3, [sp]

; 1732 :     
; 1733 :     DEBUGMSG(ZONE_FUNCTION, (L"+BCI_SetVoltageMonitors()\r\n"));

  01e94	e59f30a8	 ldr         r3, [pc, #0xA8]
  01e98	e5933440	 ldr         r3, [r3, #0x440]
  01e9c	e3130080	 tst         r3, #0x80
  01ea0	0a000004	 beq         |$LN4@BCI_SetVol|
  01ea4	e59f009c	 ldr         r0, [pc, #0x9C]
  01ea8	eb000000	 bl          NKDbgPrintfW
  01eac	e3a03001	 mov         r3, #1
  01eb0	e58d300c	 str         r3, [sp, #0xC]
  01eb4	ea000001	 b           |$LN5@BCI_SetVol|
  01eb8		 |$LN4@BCI_SetVol|
  01eb8	e3a03000	 mov         r3, #0
  01ebc	e58d300c	 str         r3, [sp, #0xC]
  01ec0		 |$LN5@BCI_SetVol|

; 1734 : 
; 1735 :     // check for valid parameter
; 1736 :     if (pDevice == NULL) goto cleanUp;

  01ec0	e59d3000	 ldr         r3, [sp]
  01ec4	e3530000	 cmp         r3, #0
  01ec8	1a000000	 bne         |$LN1@BCI_SetVol|
  01ecc	ea00000a	 b           |$cleanUp$44415|
  01ed0		 |$LN1@BCI_SetVol|

; 1737 : 
; 1738 :     EnterCriticalSection(&pDevice->cs);    

  01ed0	e59d0000	 ldr         r0, [sp]
  01ed4	eb000000	 bl          EnterCriticalSection

; 1739 :     bSuccess = SetVoltageMonitors(pDevice, ffEnable, ffMask);    

  01ed8	e59d2028	 ldr         r2, [sp, #0x28]
  01edc	e59d1024	 ldr         r1, [sp, #0x24]
  01ee0	e59d0000	 ldr         r0, [sp]
  01ee4	eb000000	 bl          SetVoltageMonitors
  01ee8	e58d0010	 str         r0, [sp, #0x10]
  01eec	e59d3010	 ldr         r3, [sp, #0x10]
  01ef0	e58d3004	 str         r3, [sp, #4]

; 1740 :     LeaveCriticalSection(&pDevice->cs);

  01ef4	e59d0000	 ldr         r0, [sp]
  01ef8	eb000000	 bl          LeaveCriticalSection
  01efc		 |$cleanUp$44415|

; 1741 :     
; 1742 : cleanUp:
; 1743 :     DEBUGMSG(ZONE_FUNCTION, (L"-BCI_SetVoltageMonitors()\r\n"));

  01efc	e59f3040	 ldr         r3, [pc, #0x40]
  01f00	e5933440	 ldr         r3, [r3, #0x440]
  01f04	e3130080	 tst         r3, #0x80
  01f08	0a000004	 beq         |$LN6@BCI_SetVol|
  01f0c	e59f002c	 ldr         r0, [pc, #0x2C]
  01f10	eb000000	 bl          NKDbgPrintfW
  01f14	e3a03001	 mov         r3, #1
  01f18	e58d3014	 str         r3, [sp, #0x14]
  01f1c	ea000001	 b           |$LN7@BCI_SetVol|
  01f20		 |$LN6@BCI_SetVol|
  01f20	e3a03000	 mov         r3, #0
  01f24	e58d3014	 str         r3, [sp, #0x14]
  01f28		 |$LN7@BCI_SetVol|

; 1744 :     return bSuccess;

  01f28	e59d3004	 ldr         r3, [sp, #4]
  01f2c	e58d3008	 str         r3, [sp, #8]

; 1745 : }

  01f30	e59d0008	 ldr         r0, [sp, #8]
  01f34	e28dd018	 add         sp, sp, #0x18
  01f38	e89d6000	 ldmia       sp, {sp, lr}
  01f3c	e12fff1e	 bx          lr
  01f40		 |$LN11@BCI_SetVol|
  01f40		 |$LN12@BCI_SetVol|
  01f40	00000000	 DCD         |??_C@_1DI@MGCLFDFN@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01f44		 |$LN13@BCI_SetVol|
  01f44	00000000	 DCD         |dpCurSettings|
  01f48		 |$LN14@BCI_SetVol|
  01f48	00000000	 DCD         |??_C@_1DI@ILFFDLKP@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01f4c		 |$M45172|

			 ENDP  ; |BCI_SetVoltageMonitors|

	EXPORT	|??_C@_1DA@HKBECGMD@?$AA?9?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@LCPLCBDD@?$AA?$CL?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0@| [ DATA ] ; `string'

  00080			 AREA	 |.pdata|, PDATA
|$T45188| DCD	|$LN19@SetVoltage|
	DCD	0x4000c104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@HKBECGMD@?$AA?9?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "V", 0x0, "o", 0x0, "l"
	DCB	0x0, "t", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "M", 0x0, "o"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "o", 0x0, "r", 0x0, "s"
	DCB	0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@LCPLCBDD@?$AA?$CL?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0@| DCB "+"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "V", 0x0, "o", 0x0, "l"
	DCB	0x0, "t", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "M", 0x0, "o"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "o", 0x0, "r", 0x0, "s"
	DCB	0x0, "(", 0x0, "p", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "f"
	DCB	0x0, "f", 0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "f", 0x0, "f", 0x0, "M", 0x0, "a", 0x0, "s", 0x0, "k"
	DCB	0x0, "=", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  01f4c			 AREA	 |.text|, CODE, ARM

  01f4c		 |SetVoltageMonitors| PROC

; 880  : {

  01f4c		 |$LN19@SetVoltage|
  01f4c	e1a0c00d	 mov         r12, sp
  01f50	e92d0007	 stmdb       sp!, {r0 - r2}
  01f54	e92d5000	 stmdb       sp!, {r12, lr}
  01f58	e24dd014	 sub         sp, sp, #0x14
  01f5c		 |$M45185|

; 881  :     UINT8 data;
; 882  :     BOOL bResult = FALSE;

  01f5c	e3a03000	 mov         r3, #0
  01f60	e58d3000	 str         r3, [sp]

; 883  :     DEBUGMSG(ZONE_FUNCTION, (L"+SetVoltageMonitors("
; 884  :         L"pDevice=0x%08X, ffEnable=%d, ffMask=%d)\r\n",
; 885  :         pDevice, ffEnable, ffMask
; 886  :         ));

  01f64	e59f32dc	 ldr         r3, [pc, #0x2DC]
  01f68	e5933440	 ldr         r3, [r3, #0x440]
  01f6c	e3130080	 tst         r3, #0x80
  01f70	0a000007	 beq         |$LN13@SetVoltage|
  01f74	e59d3024	 ldr         r3, [sp, #0x24]
  01f78	e59d2020	 ldr         r2, [sp, #0x20]
  01f7c	e59d101c	 ldr         r1, [sp, #0x1C]
  01f80	e59f02c4	 ldr         r0, [pc, #0x2C4]
  01f84	eb000000	 bl          NKDbgPrintfW
  01f88	e3a03001	 mov         r3, #1
  01f8c	e58d300c	 str         r3, [sp, #0xC]
  01f90	ea000001	 b           |$LN14@SetVoltage|
  01f94		 |$LN13@SetVoltage|
  01f94	e3a03000	 mov         r3, #0
  01f98	e58d300c	 str         r3, [sp, #0xC]
  01f9c		 |$LN14@SetVoltage|

; 887  : 
; 888  :     // over-charge monitoring for usb and ac
; 889  :     if (ffMask & (BCI_OV_VAC | BCI_OV_VBUS))

  01f9c	e59d3024	 ldr         r3, [sp, #0x24]
  01fa0	e3130006	 tst         r3, #6
  01fa4	0a000059	 beq         |$LN10@SetVoltage|

; 890  :         {
; 891  :         // get access to BCIMFEN2
; 892  :         data = KEY_BCIMFEN2;

  01fa8	e3a03073	 mov         r3, #0x73
  01fac	e5cd3004	 strb        r3, [sp, #4]

; 893  :         TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  01fb0	e3a03001	 mov         r3, #1
  01fb4	e28d2004	 add         r2, sp, #4
  01fb8	e3a01802	 mov         r1, #2, 16
  01fbc	e3811085	 orr         r1, r1, #0x85
  01fc0	e59d001c	 ldr         r0, [sp, #0x1C]
  01fc4	e2800018	 add         r0, r0, #0x18
  01fc8	e5900000	 ldr         r0, [r0]
  01fcc	eb000000	 bl          TWLWriteRegs

; 894  : 
; 895  :         // update over-charge monitors
; 896  :         TWLReadRegs(pDevice->hTwl, TWL_BCIMFEN2, &data, 1);

  01fd0	e3a03001	 mov         r3, #1
  01fd4	e28d2004	 add         r2, sp, #4
  01fd8	e3a01802	 mov         r1, #2, 16
  01fdc	e3811087	 orr         r1, r1, #0x87
  01fe0	e59d001c	 ldr         r0, [sp, #0x1C]
  01fe4	e2800018	 add         r0, r0, #0x18
  01fe8	e5900000	 ldr         r0, [r0]
  01fec	eb000000	 bl          TWLReadRegs

; 897  :         if (ffMask & BCI_OV_VAC)

  01ff0	e59d3024	 ldr         r3, [sp, #0x24]
  01ff4	e3130004	 tst         r3, #4
  01ff8	0a00001c	 beq         |$LN9@SetVoltage|

; 898  :             {
; 899  :             if (ffEnable & BCI_OV_VAC)

  01ffc	e59d3020	 ldr         r3, [sp, #0x20]
  02000	e3130004	 tst         r3, #4
  02004	0a00000c	 beq         |$LN8@SetVoltage|

; 900  :                 {
; 901  :                 data |= ACCHGOVEN;

  02008	e5dd3004	 ldrb        r3, [sp, #4]
  0200c	e3833080	 orr         r3, r3, #0x80
  02010	e20330ff	 and         r3, r3, #0xFF
  02014	e5cd3004	 strb        r3, [sp, #4]

; 902  :                 pDevice->dwACCHGOVTH &= ~THRESHOLD_DISABLED;

  02018	e59d301c	 ldr         r3, [sp, #0x1C]
  0201c	e2833044	 add         r3, r3, #0x44
  02020	e5932000	 ldr         r2, [r3]
  02024	e3e03102	 mvn         r3, #2, 2
  02028	e0022003	 and         r2, r2, r3
  0202c	e59d301c	 ldr         r3, [sp, #0x1C]
  02030	e2833044	 add         r3, r3, #0x44
  02034	e5832000	 str         r2, [r3]

; 903  :                 }
; 904  :             else

  02038	ea00000c	 b           |$LN7@SetVoltage|
  0203c		 |$LN8@SetVoltage|

; 905  :                 {
; 906  :                 data &= ~ACCHGOVEN;

  0203c	e5dd3004	 ldrb        r3, [sp, #4]
  02040	e1a02003	 mov         r2, r3
  02044	e3e03080	 mvn         r3, #0x80
  02048	e0023003	 and         r3, r2, r3
  0204c	e20330ff	 and         r3, r3, #0xFF
  02050	e5cd3004	 strb        r3, [sp, #4]

; 907  :                 pDevice->dwACCHGOVTH |= THRESHOLD_DISABLED;

  02054	e59d301c	 ldr         r3, [sp, #0x1C]
  02058	e2833044	 add         r3, r3, #0x44
  0205c	e5933000	 ldr         r3, [r3]
  02060	e3832102	 orr         r2, r3, #2, 2
  02064	e59d301c	 ldr         r3, [sp, #0x1C]
  02068	e2833044	 add         r3, r3, #0x44
  0206c	e5832000	 str         r2, [r3]
  02070		 |$LN7@SetVoltage|
  02070		 |$LN9@SetVoltage|

; 908  :                 }
; 909  :             }
; 910  : 
; 911  :         if (ffMask & BCI_OV_VBUS)

  02070	e59d3024	 ldr         r3, [sp, #0x24]
  02074	e3130002	 tst         r3, #2
  02078	0a00001c	 beq         |$LN6@SetVoltage|

; 912  :             {
; 913  :             if (ffEnable & BCI_OV_VBUS)

  0207c	e59d3020	 ldr         r3, [sp, #0x20]
  02080	e3130002	 tst         r3, #2
  02084	0a00000c	 beq         |$LN5@SetVoltage|

; 914  :                 {
; 915  :                 data |= VBUSOVEN;

  02088	e5dd3004	 ldrb        r3, [sp, #4]
  0208c	e3833020	 orr         r3, r3, #0x20
  02090	e20330ff	 and         r3, r3, #0xFF
  02094	e5cd3004	 strb        r3, [sp, #4]

; 916  :                 pDevice->dwVBUSOVTH &= ~THRESHOLD_DISABLED;

  02098	e59d301c	 ldr         r3, [sp, #0x1C]
  0209c	e283304c	 add         r3, r3, #0x4C
  020a0	e5932000	 ldr         r2, [r3]
  020a4	e3e03102	 mvn         r3, #2, 2
  020a8	e0022003	 and         r2, r2, r3
  020ac	e59d301c	 ldr         r3, [sp, #0x1C]
  020b0	e283304c	 add         r3, r3, #0x4C
  020b4	e5832000	 str         r2, [r3]

; 917  :                 }
; 918  :             else

  020b8	ea00000c	 b           |$LN4@SetVoltage|
  020bc		 |$LN5@SetVoltage|

; 919  :                 {
; 920  :                 data &= ~VBUSOVEN;

  020bc	e5dd3004	 ldrb        r3, [sp, #4]
  020c0	e1a02003	 mov         r2, r3
  020c4	e3e03020	 mvn         r3, #0x20
  020c8	e0023003	 and         r3, r2, r3
  020cc	e20330ff	 and         r3, r3, #0xFF
  020d0	e5cd3004	 strb        r3, [sp, #4]

; 921  :                 pDevice->dwVBUSOVTH |= THRESHOLD_DISABLED;

  020d4	e59d301c	 ldr         r3, [sp, #0x1C]
  020d8	e283304c	 add         r3, r3, #0x4C
  020dc	e5933000	 ldr         r3, [r3]
  020e0	e3832102	 orr         r2, r3, #2, 2
  020e4	e59d301c	 ldr         r3, [sp, #0x1C]
  020e8	e283304c	 add         r3, r3, #0x4C
  020ec	e5832000	 str         r2, [r3]
  020f0		 |$LN4@SetVoltage|
  020f0		 |$LN6@SetVoltage|

; 922  :                 }
; 923  :             }
; 924  : 
; 925  :         TWLWriteRegs(pDevice->hTwl, TWL_BCIMFEN2, &data, 1);

  020f0	e3a03001	 mov         r3, #1
  020f4	e28d2004	 add         r2, sp, #4
  020f8	e3a01802	 mov         r1, #2, 16
  020fc	e3811087	 orr         r1, r1, #0x87
  02100	e59d001c	 ldr         r0, [sp, #0x1C]
  02104	e2800018	 add         r0, r0, #0x18
  02108	e5900000	 ldr         r0, [r0]
  0210c	eb000000	 bl          TWLWriteRegs
  02110		 |$LN10@SetVoltage|

; 926  :         }
; 927  : 
; 928  :     // over-charge monitoring for battery
; 929  :     if (ffMask & BCI_OV_VBAT)

  02110	e59d3024	 ldr         r3, [sp, #0x24]
  02114	e3130001	 tst         r3, #1
  02118	0a000036	 beq         |$LN3@SetVoltage|

; 930  :         {
; 931  :         // get access to BCIMFEN4
; 932  :         data = KEY_BCIMFEN4;

  0211c	e3a0303e	 mov         r3, #0x3E
  02120	e5cd3004	 strb        r3, [sp, #4]

; 933  :         TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  02124	e3a03001	 mov         r3, #1
  02128	e28d2004	 add         r2, sp, #4
  0212c	e3a01802	 mov         r1, #2, 16
  02130	e3811085	 orr         r1, r1, #0x85
  02134	e59d001c	 ldr         r0, [sp, #0x1C]
  02138	e2800018	 add         r0, r0, #0x18
  0213c	e5900000	 ldr         r0, [r0]
  02140	eb000000	 bl          TWLWriteRegs

; 934  : 
; 935  :         // update over-charge monitors
; 936  :         TWLReadRegs(pDevice->hTwl, TWL_BCIMFEN4, &data, 1);

  02144	e3a03001	 mov         r3, #1
  02148	e28d2004	 add         r2, sp, #4
  0214c	e3a01802	 mov         r1, #2, 16
  02150	e3811089	 orr         r1, r1, #0x89
  02154	e59d001c	 ldr         r0, [sp, #0x1C]
  02158	e2800018	 add         r0, r0, #0x18
  0215c	e5900000	 ldr         r0, [r0]
  02160	eb000000	 bl          TWLReadRegs

; 937  :         if (ffEnable & BCI_OV_VBAT)

  02164	e59d3020	 ldr         r3, [sp, #0x20]
  02168	e3130001	 tst         r3, #1
  0216c	0a00000c	 beq         |$LN2@SetVoltage|

; 938  :             {
; 939  :             data |= VBATOVEN;

  02170	e5dd3004	 ldrb        r3, [sp, #4]
  02174	e3833002	 orr         r3, r3, #2
  02178	e20330ff	 and         r3, r3, #0xFF
  0217c	e5cd3004	 strb        r3, [sp, #4]

; 940  :             pDevice->dwVBATOVTH &= ~THRESHOLD_DISABLED;

  02180	e59d301c	 ldr         r3, [sp, #0x1C]
  02184	e2833048	 add         r3, r3, #0x48
  02188	e5932000	 ldr         r2, [r3]
  0218c	e3e03102	 mvn         r3, #2, 2
  02190	e0022003	 and         r2, r2, r3
  02194	e59d301c	 ldr         r3, [sp, #0x1C]
  02198	e2833048	 add         r3, r3, #0x48
  0219c	e5832000	 str         r2, [r3]

; 941  :             }
; 942  :         else

  021a0	ea00000c	 b           |$LN1@SetVoltage|
  021a4		 |$LN2@SetVoltage|

; 943  :             {
; 944  :             data &= ~VBATOVEN;

  021a4	e5dd3004	 ldrb        r3, [sp, #4]
  021a8	e1a02003	 mov         r2, r3
  021ac	e3e03002	 mvn         r3, #2
  021b0	e0023003	 and         r3, r2, r3
  021b4	e20330ff	 and         r3, r3, #0xFF
  021b8	e5cd3004	 strb        r3, [sp, #4]

; 945  :             pDevice->dwVBATOVTH |= THRESHOLD_DISABLED;

  021bc	e59d301c	 ldr         r3, [sp, #0x1C]
  021c0	e2833048	 add         r3, r3, #0x48
  021c4	e5933000	 ldr         r3, [r3]
  021c8	e3832102	 orr         r2, r3, #2, 2
  021cc	e59d301c	 ldr         r3, [sp, #0x1C]
  021d0	e2833048	 add         r3, r3, #0x48
  021d4	e5832000	 str         r2, [r3]
  021d8		 |$LN1@SetVoltage|

; 946  :             }
; 947  :                                           
; 948  :         TWLWriteRegs(pDevice->hTwl, TWL_BCIMFEN4, &data, 1);

  021d8	e3a03001	 mov         r3, #1
  021dc	e28d2004	 add         r2, sp, #4
  021e0	e3a01802	 mov         r1, #2, 16
  021e4	e3811089	 orr         r1, r1, #0x89
  021e8	e59d001c	 ldr         r0, [sp, #0x1C]
  021ec	e2800018	 add         r0, r0, #0x18
  021f0	e5900000	 ldr         r0, [r0]
  021f4	eb000000	 bl          TWLWriteRegs
  021f8		 |$LN3@SetVoltage|

; 949  :         }
; 950  : 
; 951  :     bResult = TRUE;

  021f8	e3a03001	 mov         r3, #1
  021fc	e58d3000	 str         r3, [sp]

; 952  :             
; 953  :     DEBUGMSG(ZONE_FUNCTION, (L"-SetVoltageMonitors()\r\n"));

  02200	e59f3040	 ldr         r3, [pc, #0x40]
  02204	e5933440	 ldr         r3, [r3, #0x440]
  02208	e3130080	 tst         r3, #0x80
  0220c	0a000004	 beq         |$LN15@SetVoltage|
  02210	e59f002c	 ldr         r0, [pc, #0x2C]
  02214	eb000000	 bl          NKDbgPrintfW
  02218	e3a03001	 mov         r3, #1
  0221c	e58d3010	 str         r3, [sp, #0x10]
  02220	ea000001	 b           |$LN16@SetVoltage|
  02224		 |$LN15@SetVoltage|
  02224	e3a03000	 mov         r3, #0
  02228	e58d3010	 str         r3, [sp, #0x10]
  0222c		 |$LN16@SetVoltage|

; 954  :     return bResult;

  0222c	e59d3000	 ldr         r3, [sp]
  02230	e58d3008	 str         r3, [sp, #8]

; 955  : }

  02234	e59d0008	 ldr         r0, [sp, #8]
  02238	e28dd014	 add         sp, sp, #0x14
  0223c	e89d6000	 ldmia       sp, {sp, lr}
  02240	e12fff1e	 bx          lr
  02244		 |$LN20@SetVoltage|
  02244		 |$LN21@SetVoltage|
  02244	00000000	 DCD         |??_C@_1DA@HKBECGMD@?$AA?9?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  02248		 |$LN22@SetVoltage|
  02248	00000000	 DCD         |dpCurSettings|
  0224c		 |$LN23@SetVoltage|
  0224c	00000000	 DCD         |??_C@_1HM@LCPLCBDD@?$AA?$CL?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0@|
  02250		 |$M45186|

			 ENDP  ; |SetVoltageMonitors|

	EXPORT	|??_C@_1CO@BENDCPAD@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@MPBHHACI@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|BCI_SetChargeMode|

  00088			 AREA	 |.pdata|, PDATA
|$T45202| DCD	|$LN17@BCI_SetCha@2|
	DCD	0x40007d04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@BENDCPAD@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "r", 0x0, "g"
	DCB	0x0, "e", 0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, "("
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@MPBHHACI@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "r", 0x0, "g"
	DCB	0x0, "e", 0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, "("
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  02250			 AREA	 |.text|, CODE, ARM

  02250		 |BCI_SetChargeMode| PROC

; 1759 : {   

  02250		 |$LN17@BCI_SetCha@2|
  02250	e1a0c00d	 mov         r12, sp
  02254	e92d0007	 stmdb       sp!, {r0 - r2}
  02258	e92d5000	 stmdb       sp!, {r12, lr}
  0225c	e24dd01c	 sub         sp, sp, #0x1C
  02260		 |$M45199|

; 1760 :     UINT8 data;
; 1761 :     BOOL bSuccess = FALSE;

  02260	e3a03000	 mov         r3, #0
  02264	e58d3004	 str         r3, [sp, #4]

; 1762 :     Device_t *pDevice = (Device_t*)hBCI;;

  02268	e59d3024	 ldr         r3, [sp, #0x24]
  0226c	e58d3000	 str         r3, [sp]

; 1763 :     
; 1764 :     DEBUGMSG(ZONE_FUNCTION, (L"+BCI_SetChargeMode()\r\n"));

  02270	e59f31c4	 ldr         r3, [pc, #0x1C4]
  02274	e5933440	 ldr         r3, [r3, #0x440]
  02278	e3130080	 tst         r3, #0x80
  0227c	0a000004	 beq         |$LN11@BCI_SetCha@2|
  02280	e59f01b8	 ldr         r0, [pc, #0x1B8]
  02284	eb000000	 bl          NKDbgPrintfW
  02288	e3a03001	 mov         r3, #1
  0228c	e58d3010	 str         r3, [sp, #0x10]
  02290	ea000001	 b           |$LN12@BCI_SetCha@2|
  02294		 |$LN11@BCI_SetCha@2|
  02294	e3a03000	 mov         r3, #0
  02298	e58d3010	 str         r3, [sp, #0x10]
  0229c		 |$LN12@BCI_SetCha@2|

; 1765 : 
; 1766 :     // check for valid parameter
; 1767 :     if (pDevice == NULL) goto cleanUp;

  0229c	e59d3000	 ldr         r3, [sp]
  022a0	e3530000	 cmp         r3, #0
  022a4	1a000000	 bne         |$LN8@BCI_SetCha@2|
  022a8	ea000051	 b           |$cleanUp$44433|
  022ac		 |$LN8@BCI_SetCha@2|

; 1768 : 
; 1769 :     EnterCriticalSection(&pDevice->cs);

  022ac	e59d0000	 ldr         r0, [sp]
  022b0	eb000000	 bl          EnterCriticalSection

; 1770 :     
; 1771 :     // look at requested mode and call correlating function
; 1772 :     switch (mode)

  022b4	e59d3028	 ldr         r3, [sp, #0x28]
  022b8	e58d3014	 str         r3, [sp, #0x14]
  022bc	e59d3014	 ldr         r3, [sp, #0x14]
  022c0	e3530000	 cmp         r3, #0
  022c4	ba000046	 blt         |$LN1@BCI_SetCha@2|
  022c8	e59d3014	 ldr         r3, [sp, #0x14]
  022cc	e3530001	 cmp         r3, #1
  022d0	da00003e	 ble         |$LN2@BCI_SetCha@2|
  022d4	e59d3014	 ldr         r3, [sp, #0x14]
  022d8	e3530002	 cmp         r3, #2
  022dc	0a000000	 beq         |$LN5@BCI_SetCha@2|
  022e0	ea00003f	 b           |$LN1@BCI_SetCha@2|
  022e4		 |$LN5@BCI_SetCha@2|

; 1773 :         {
; 1774 :         case kBCI_USBHost:
; 1775 :             if (bAttached != FALSE)

  022e4	e59d302c	 ldr         r3, [sp, #0x2C]
  022e8	e3530000	 cmp         r3, #0
  022ec	0a000018	 beq         |$LN4@BCI_SetCha@2|

; 1776 :                 {
; 1777 :                 pDevice->bAttached_USBHost = TRUE;

  022f0	e59d3000	 ldr         r3, [sp]
  022f4	e2832064	 add         r2, r3, #0x64
  022f8	e3a03001	 mov         r3, #1
  022fc	e5823000	 str         r3, [r2]

; 1778 : 
; 1779 :                 // enable resistive divide for usb
; 1780 :                 TWLReadRegs(pDevice->hTwl, TWL_BCICTL1, &data, 1);

  02300	e3a03001	 mov         r3, #1
  02304	e28d2008	 add         r2, sp, #8
  02308	e3a01802	 mov         r1, #2, 16
  0230c	e3811097	 orr         r1, r1, #0x97
  02310	e59d0000	 ldr         r0, [sp]
  02314	e2800018	 add         r0, r0, #0x18
  02318	e5900000	 ldr         r0, [r0]
  0231c	eb000000	 bl          TWLReadRegs

; 1781 :                 data |= MESVBUS;

  02320	e5dd3008	 ldrb        r3, [sp, #8]
  02324	e3833004	 orr         r3, r3, #4
  02328	e20330ff	 and         r3, r3, #0xFF
  0232c	e5cd3008	 strb        r3, [sp, #8]

; 1782 :                 TWLWriteRegs(pDevice->hTwl, TWL_BCICTL1, &data, 1);

  02330	e3a03001	 mov         r3, #1
  02334	e28d2008	 add         r2, sp, #8
  02338	e3a01802	 mov         r1, #2, 16
  0233c	e3811097	 orr         r1, r1, #0x97
  02340	e59d0000	 ldr         r0, [sp]
  02344	e2800018	 add         r0, r0, #0x18
  02348	e5900000	 ldr         r0, [r0]
  0234c	eb000000	 bl          TWLWriteRegs

; 1783 :                 }
; 1784 :             else

  02350	ea000019	 b           |$LN3@BCI_SetCha@2|
  02354		 |$LN4@BCI_SetCha@2|

; 1785 :                 {
; 1786 :                 pDevice->bAttached_USBHost = FALSE;

  02354	e59d3000	 ldr         r3, [sp]
  02358	e2832064	 add         r2, r3, #0x64
  0235c	e3a03000	 mov         r3, #0
  02360	e5823000	 str         r3, [r2]

; 1787 :                 
; 1788 :                 // disable resistive divide for usb
; 1789 :                 TWLReadRegs(pDevice->hTwl, TWL_BCICTL1, &data, 1);

  02364	e3a03001	 mov         r3, #1
  02368	e28d2008	 add         r2, sp, #8
  0236c	e3a01802	 mov         r1, #2, 16
  02370	e3811097	 orr         r1, r1, #0x97
  02374	e59d0000	 ldr         r0, [sp]
  02378	e2800018	 add         r0, r0, #0x18
  0237c	e5900000	 ldr         r0, [r0]
  02380	eb000000	 bl          TWLReadRegs

; 1790 :                 data &= ~MESVBUS;

  02384	e5dd3008	 ldrb        r3, [sp, #8]
  02388	e1a02003	 mov         r2, r3
  0238c	e3e03004	 mvn         r3, #4
  02390	e0023003	 and         r3, r2, r3
  02394	e20330ff	 and         r3, r3, #0xFF
  02398	e5cd3008	 strb        r3, [sp, #8]

; 1791 :                 TWLWriteRegs(pDevice->hTwl, TWL_BCICTL1, &data, 1);

  0239c	e3a03001	 mov         r3, #1
  023a0	e28d2008	 add         r2, sp, #8
  023a4	e3a01802	 mov         r1, #2, 16
  023a8	e3811097	 orr         r1, r1, #0x97
  023ac	e59d0000	 ldr         r0, [sp]
  023b0	e2800018	 add         r0, r0, #0x18
  023b4	e5900000	 ldr         r0, [r0]
  023b8	eb000000	 bl          TWLWriteRegs
  023bc		 |$LN3@BCI_SetCha@2|

; 1792 :                 }
; 1793 :             SetEvent(pDevice->rgIntrEvents[EVENT_POWER]);

  023bc	e59d3000	 ldr         r3, [sp]
  023c0	e2833028	 add         r3, r3, #0x28
  023c4	e5930000	 ldr         r0, [r3]
  023c8	eb000000	 bl          SetEvent

; 1794 :             break;

  023cc	ea000006	 b           |$LN6@BCI_SetCha@2|
  023d0		 |$LN2@BCI_SetCha@2|

; 1795 :         
; 1796 :         case kBCI_AC:
; 1797 :         case kBCI_Battery:
; 1798 :             // We update based on AC voltage readings
; 1799 :             SetEvent(pDevice->rgIntrEvents[EVENT_POWER]);

  023d0	e59d3000	 ldr         r3, [sp]
  023d4	e2833028	 add         r3, r3, #0x28
  023d8	e5930000	 ldr         r0, [r3]
  023dc	eb000000	 bl          SetEvent

; 1800 :             break;

  023e0	ea000001	 b           |$LN6@BCI_SetCha@2|
  023e4		 |$LN1@BCI_SetCha@2|

; 1801 : 
; 1802 :         default:
; 1803 :             bSuccess = FALSE;

  023e4	e3a03000	 mov         r3, #0
  023e8	e58d3004	 str         r3, [sp, #4]
  023ec		 |$LN6@BCI_SetCha@2|

; 1804 :         }
; 1805 : 
; 1806 :     LeaveCriticalSection(&pDevice->cs);

  023ec	e59d0000	 ldr         r0, [sp]
  023f0	eb000000	 bl          LeaveCriticalSection
  023f4		 |$cleanUp$44433|

; 1807 : cleanUp:
; 1808 :     DEBUGMSG(ZONE_FUNCTION, (L"-BCI_SetChargeMode()\r\n"));

  023f4	e59f3040	 ldr         r3, [pc, #0x40]
  023f8	e5933440	 ldr         r3, [r3, #0x440]
  023fc	e3130080	 tst         r3, #0x80
  02400	0a000004	 beq         |$LN13@BCI_SetCha@2|
  02404	e59f002c	 ldr         r0, [pc, #0x2C]
  02408	eb000000	 bl          NKDbgPrintfW
  0240c	e3a03001	 mov         r3, #1
  02410	e58d3018	 str         r3, [sp, #0x18]
  02414	ea000001	 b           |$LN14@BCI_SetCha@2|
  02418		 |$LN13@BCI_SetCha@2|
  02418	e3a03000	 mov         r3, #0
  0241c	e58d3018	 str         r3, [sp, #0x18]
  02420		 |$LN14@BCI_SetCha@2|

; 1809 :     return bSuccess;

  02420	e59d3004	 ldr         r3, [sp, #4]
  02424	e58d300c	 str         r3, [sp, #0xC]

; 1810 : }

  02428	e59d000c	 ldr         r0, [sp, #0xC]
  0242c	e28dd01c	 add         sp, sp, #0x1C
  02430	e89d6000	 ldmia       sp, {sp, lr}
  02434	e12fff1e	 bx          lr
  02438		 |$LN18@BCI_SetCha@2|
  02438		 |$LN19@BCI_SetCha@2|
  02438	00000000	 DCD         |??_C@_1CO@BENDCPAD@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0243c		 |$LN20@BCI_SetCha@2|
  0243c	00000000	 DCD         |dpCurSettings|
  02440		 |$LN21@BCI_SetCha@2|
  02440	00000000	 DCD         |??_C@_1CO@MPBHHACI@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  02444		 |$M45200|

			 ENDP  ; |BCI_SetChargeMode|

	EXPORT	|??_C@_1DM@DBGKDOMA@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AAm?$AAo?$AAd?$AAe?$AA?$DN?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@PEKBJFFF@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AAh?$AAB?$AAC?$AAI?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$CJ?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|BCI_GetChargeMode|

  00090			 AREA	 |.pdata|, PDATA
|$T45216| DCD	|$LN10@BCI_GetCha|
	DCD	0x40003004

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@DBGKDOMA@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AAm?$AAo?$AAd?$AAe?$AA?$DN?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "e"
	DCB	0x0, "t", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "r", 0x0, "g"
	DCB	0x0, "e", 0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, "("
	DCB	0x0, "m", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, "=", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@PEKBJFFF@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AAh?$AAB?$AAC?$AAI?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$CJ?$AA?$AN@| DCB "+"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "e"
	DCB	0x0, "t", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "r", 0x0, "g"
	DCB	0x0, "e", 0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, "("
	DCB	0x0, "h", 0x0, "B", 0x0, "C", 0x0, "I", 0x0, "=", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  02444			 AREA	 |.text|, CODE, ARM

  02444		 |BCI_GetChargeMode| PROC

; 1822 : {

  02444		 |$LN10@BCI_GetCha|
  02444	e1a0c00d	 mov         r12, sp
  02448	e92d0001	 stmdb       sp!, {r0}
  0244c	e92d5000	 stmdb       sp!, {r12, lr}
  02450	e24dd014	 sub         sp, sp, #0x14
  02454		 |$M45213|

; 1823 :     Device_t *pDevice;
; 1824 :     BatteryChargeMode_e mode = kBCI_Unknown;

  02454	e3a03005	 mov         r3, #5
  02458	e58d3004	 str         r3, [sp, #4]

; 1825 : 
; 1826 :     DEBUGMSG(ZONE_FUNCTION, (L"+BCI_GetChargeMode(hBCI=0x%08X)\r\n", hBCI));

  0245c	e59f3098	 ldr         r3, [pc, #0x98]
  02460	e5933440	 ldr         r3, [r3, #0x440]
  02464	e3130080	 tst         r3, #0x80
  02468	0a000005	 beq         |$LN4@BCI_GetCha|
  0246c	e59d101c	 ldr         r1, [sp, #0x1C]
  02470	e59f0088	 ldr         r0, [pc, #0x88]
  02474	eb000000	 bl          NKDbgPrintfW
  02478	e3a03001	 mov         r3, #1
  0247c	e58d300c	 str         r3, [sp, #0xC]
  02480	ea000001	 b           |$LN5@BCI_GetCha|
  02484		 |$LN4@BCI_GetCha|
  02484	e3a03000	 mov         r3, #0
  02488	e58d300c	 str         r3, [sp, #0xC]
  0248c		 |$LN5@BCI_GetCha|

; 1827 : 
; 1828 :     // check for valid parameter
; 1829 :     if (hBCI != NULL)

  0248c	e59d301c	 ldr         r3, [sp, #0x1C]
  02490	e3530000	 cmp         r3, #0
  02494	0a000005	 beq         |$LN1@BCI_GetCha|

; 1830 :         {
; 1831 :         pDevice = (Device_t*)hBCI;

  02498	e59d301c	 ldr         r3, [sp, #0x1C]
  0249c	e58d3000	 str         r3, [sp]

; 1832 :         mode = pDevice->currentMode;

  024a0	e59d3000	 ldr         r3, [sp]
  024a4	e2833014	 add         r3, r3, #0x14
  024a8	e5933000	 ldr         r3, [r3]
  024ac	e58d3004	 str         r3, [sp, #4]
  024b0		 |$LN1@BCI_GetCha|

; 1833 :         }
; 1834 :     
; 1835 :     DEBUGMSG(ZONE_FUNCTION, (L"-BCI_GetChargeMode(mode=%d)\r\n", mode));

  024b0	e59f3044	 ldr         r3, [pc, #0x44]
  024b4	e5933440	 ldr         r3, [r3, #0x440]
  024b8	e3130080	 tst         r3, #0x80
  024bc	0a000005	 beq         |$LN6@BCI_GetCha|
  024c0	e59d1004	 ldr         r1, [sp, #4]
  024c4	e59f002c	 ldr         r0, [pc, #0x2C]
  024c8	eb000000	 bl          NKDbgPrintfW
  024cc	e3a03001	 mov         r3, #1
  024d0	e58d3010	 str         r3, [sp, #0x10]
  024d4	ea000001	 b           |$LN7@BCI_GetCha|
  024d8		 |$LN6@BCI_GetCha|
  024d8	e3a03000	 mov         r3, #0
  024dc	e58d3010	 str         r3, [sp, #0x10]
  024e0		 |$LN7@BCI_GetCha|

; 1836 :     return mode;

  024e0	e59d3004	 ldr         r3, [sp, #4]
  024e4	e58d3008	 str         r3, [sp, #8]

; 1837 : }

  024e8	e59d0008	 ldr         r0, [sp, #8]
  024ec	e28dd014	 add         sp, sp, #0x14
  024f0	e89d6000	 ldmia       sp, {sp, lr}
  024f4	e12fff1e	 bx          lr
  024f8		 |$LN11@BCI_GetCha|
  024f8		 |$LN12@BCI_GetCha|
  024f8	00000000	 DCD         |??_C@_1DM@DBGKDOMA@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AAm?$AAo?$AAd?$AAe?$AA?$DN?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  024fc		 |$LN13@BCI_GetCha|
  024fc	00000000	 DCD         |dpCurSettings|
  02500		 |$LN14@BCI_GetCha|
  02500	00000000	 DCD         |??_C@_1EE@PEKBJFFF@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AAh?$AAB?$AAC?$AAI?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$CJ?$AA?$AN@|
  02504		 |$M45214|

			 ENDP  ; |BCI_GetChargeMode|

	EXPORT	|??_C@_1DK@ICEGDFAE@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@OHKFBCCP@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|BCI_GetVoltageThreshold|

  00098			 AREA	 |.pdata|, PDATA
|$T45230| DCD	|$LN10@BCI_GetVol|
	DCD	0x40003504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@ICEGDFAE@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "e"
	DCB	0x0, "t", 0x0, "V", 0x0, "o", 0x0, "l", 0x0, "t", 0x0, "a"
	DCB	0x0, "g", 0x0, "e", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l", 0x0, "d", 0x0, "("
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@OHKFBCCP@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "e"
	DCB	0x0, "t", 0x0, "V", 0x0, "o", 0x0, "l", 0x0, "t", 0x0, "a"
	DCB	0x0, "g", 0x0, "e", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l", 0x0, "d", 0x0, "("
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  02504			 AREA	 |.text|, CODE, ARM

  02504		 |BCI_GetVoltageThreshold| PROC

; 1850 : {   

  02504		 |$LN10@BCI_GetVol|
  02504	e1a0c00d	 mov         r12, sp
  02508	e92d0003	 stmdb       sp!, {r0, r1}
  0250c	e92d5000	 stmdb       sp!, {r12, lr}
  02510	e24dd018	 sub         sp, sp, #0x18
  02514		 |$M45227|

; 1851 :     UINT dwResult = FALSE;

  02514	e3a03000	 mov         r3, #0
  02518	e58d3004	 str         r3, [sp, #4]

; 1852 :     Device_t *pDevice = (Device_t*)hBCI;

  0251c	e59d3020	 ldr         r3, [sp, #0x20]
  02520	e58d3000	 str         r3, [sp]

; 1853 :     
; 1854 :     DEBUGMSG(ZONE_FUNCTION, (L"+BCI_GetVoltageThreshold()\r\n"));

  02524	e59f30a4	 ldr         r3, [pc, #0xA4]
  02528	e5933440	 ldr         r3, [r3, #0x440]
  0252c	e3130080	 tst         r3, #0x80
  02530	0a000004	 beq         |$LN4@BCI_GetVol|
  02534	e59f0098	 ldr         r0, [pc, #0x98]
  02538	eb000000	 bl          NKDbgPrintfW
  0253c	e3a03001	 mov         r3, #1
  02540	e58d300c	 str         r3, [sp, #0xC]
  02544	ea000001	 b           |$LN5@BCI_GetVol|
  02548		 |$LN4@BCI_GetVol|
  02548	e3a03000	 mov         r3, #0
  0254c	e58d300c	 str         r3, [sp, #0xC]
  02550		 |$LN5@BCI_GetVol|

; 1855 : 
; 1856 :     // check for valid parameter
; 1857 :     if (pDevice == NULL) goto cleanUp;

  02550	e59d3000	 ldr         r3, [sp]
  02554	e3530000	 cmp         r3, #0
  02558	1a000000	 bne         |$LN1@BCI_GetVol|
  0255c	ea000009	 b           |$cleanUp$44469|
  02560		 |$LN1@BCI_GetVol|

; 1858 : 
; 1859 :     EnterCriticalSection(&pDevice->cs);    

  02560	e59d0000	 ldr         r0, [sp]
  02564	eb000000	 bl          EnterCriticalSection

; 1860 :     dwResult = GetVoltageThreshold(pDevice, ffMask);    

  02568	e59d1024	 ldr         r1, [sp, #0x24]
  0256c	e59d0000	 ldr         r0, [sp]
  02570	eb000000	 bl          GetVoltageThreshold
  02574	e58d0010	 str         r0, [sp, #0x10]
  02578	e59d3010	 ldr         r3, [sp, #0x10]
  0257c	e58d3004	 str         r3, [sp, #4]

; 1861 :     LeaveCriticalSection(&pDevice->cs);

  02580	e59d0000	 ldr         r0, [sp]
  02584	eb000000	 bl          LeaveCriticalSection
  02588		 |$cleanUp$44469|

; 1862 :     
; 1863 : cleanUp:
; 1864 :     DEBUGMSG(ZONE_FUNCTION, (L"-BCI_GetVoltageThreshold()\r\n"));

  02588	e59f3040	 ldr         r3, [pc, #0x40]
  0258c	e5933440	 ldr         r3, [r3, #0x440]
  02590	e3130080	 tst         r3, #0x80
  02594	0a000004	 beq         |$LN6@BCI_GetVol|
  02598	e59f002c	 ldr         r0, [pc, #0x2C]
  0259c	eb000000	 bl          NKDbgPrintfW
  025a0	e3a03001	 mov         r3, #1
  025a4	e58d3014	 str         r3, [sp, #0x14]
  025a8	ea000001	 b           |$LN7@BCI_GetVol|
  025ac		 |$LN6@BCI_GetVol|
  025ac	e3a03000	 mov         r3, #0
  025b0	e58d3014	 str         r3, [sp, #0x14]
  025b4		 |$LN7@BCI_GetVol|

; 1865 :     return dwResult;

  025b4	e59d3004	 ldr         r3, [sp, #4]
  025b8	e58d3008	 str         r3, [sp, #8]

; 1866 : }

  025bc	e59d0008	 ldr         r0, [sp, #8]
  025c0	e28dd018	 add         sp, sp, #0x18
  025c4	e89d6000	 ldmia       sp, {sp, lr}
  025c8	e12fff1e	 bx          lr
  025cc		 |$LN11@BCI_GetVol|
  025cc		 |$LN12@BCI_GetVol|
  025cc	00000000	 DCD         |??_C@_1DK@ICEGDFAE@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  025d0		 |$LN13@BCI_GetVol|
  025d0	00000000	 DCD         |dpCurSettings|
  025d4		 |$LN14@BCI_GetVol|
  025d4	00000000	 DCD         |??_C@_1DK@OHKFBCCP@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  025d8		 |$M45228|

			 ENDP  ; |BCI_GetVoltageThreshold|

	EXPORT	|??_C@_1DC@ENOLKLBM@?$AA?9?$AAG?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@LPAMPNLI@?$AA?$CL?$AAG?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF@| [ DATA ] ; `string'

  000a0			 AREA	 |.pdata|, PDATA
|$T45244| DCD	|$LN14@GetVoltage|
	DCD	0x40005504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@ENOLKLBM@?$AA?9?$AAG?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "G", 0x0, "e", 0x0, "t", 0x0, "V", 0x0, "o", 0x0, "l"
	DCB	0x0, "t", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "T", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l"
	DCB	0x0, "d", 0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@LPAMPNLI@?$AA?$CL?$AAG?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF@| DCB "+"
	DCB	0x0, "G", 0x0, "e", 0x0, "t", 0x0, "V", 0x0, "o", 0x0, "l"
	DCB	0x0, "t", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "T", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l"
	DCB	0x0, "d", 0x0, "(", 0x0, "p", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " "
	DCB	0x0, "f", 0x0, "f", 0x0, "M", 0x0, "a", 0x0, "s", 0x0, "k"
	DCB	0x0, "=", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  025d8			 AREA	 |.text|, CODE, ARM

  025d8		 |GetVoltageThreshold| PROC

; 385  : {

  025d8		 |$LN14@GetVoltage|
  025d8	e1a0c00d	 mov         r12, sp
  025dc	e92d0003	 stmdb       sp!, {r0, r1}
  025e0	e92d5000	 stmdb       sp!, {r12, lr}
  025e4	e24dd014	 sub         sp, sp, #0x14
  025e8		 |$M45241|

; 386  :     UINT8 data = 0;

  025e8	e3a03000	 mov         r3, #0
  025ec	e5cd3000	 strb        r3, [sp]

; 387  :     DEBUGMSG(ZONE_FUNCTION, (L"+GetVoltageThreshold("
; 388  :         L"pDevice=0x%08X, ffMask=%d)\r\n",
; 389  :         pDevice, ffMask
; 390  :         ));

  025f0	e59f312c	 ldr         r3, [pc, #0x12C]
  025f4	e5933440	 ldr         r3, [r3, #0x440]
  025f8	e3130080	 tst         r3, #0x80
  025fc	0a000006	 beq         |$LN8@GetVoltage|
  02600	e59d2020	 ldr         r2, [sp, #0x20]
  02604	e59d101c	 ldr         r1, [sp, #0x1C]
  02608	e59f0118	 ldr         r0, [pc, #0x118]
  0260c	eb000000	 bl          NKDbgPrintfW
  02610	e3a03001	 mov         r3, #1
  02614	e58d3008	 str         r3, [sp, #8]
  02618	ea000001	 b           |$LN9@GetVoltage|
  0261c		 |$LN8@GetVoltage|
  0261c	e3a03000	 mov         r3, #0
  02620	e58d3008	 str         r3, [sp, #8]
  02624		 |$LN9@GetVoltage|

; 391  : 
; 392  :     // get access to BCIMFTH3
; 393  :     data = KEY_BCIMFTH3;

  02624	e3a0306d	 mov         r3, #0x6D
  02628	e5cd3000	 strb        r3, [sp]

; 394  :     TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  0262c	e3a03001	 mov         r3, #1
  02630	e28d2000	 add         r2, sp, #0
  02634	e3a01802	 mov         r1, #2, 16
  02638	e3811085	 orr         r1, r1, #0x85
  0263c	e59d001c	 ldr         r0, [sp, #0x1C]
  02640	e2800018	 add         r0, r0, #0x18
  02644	e5900000	 ldr         r0, [r0]
  02648	eb000000	 bl          TWLWriteRegs

; 395  : 
; 396  :     // get contents
; 397  :     TWLReadRegs(pDevice->hTwl, TWL_BCIMFTH3, &data, 1);

  0264c	e3a03001	 mov         r3, #1
  02650	e28d2000	 add         r2, sp, #0
  02654	e3a01802	 mov         r1, #2, 16
  02658	e381108c	 orr         r1, r1, #0x8C
  0265c	e59d001c	 ldr         r0, [sp, #0x1C]
  02660	e2800018	 add         r0, r0, #0x18
  02664	e5900000	 ldr         r0, [r0]
  02668	eb000000	 bl          TWLReadRegs

; 398  :     switch (ffMask)

  0266c	e59d3020	 ldr         r3, [sp, #0x20]
  02670	e58d300c	 str         r3, [sp, #0xC]
  02674	e59d300c	 ldr         r3, [sp, #0xC]
  02678	e3530001	 cmp         r3, #1
  0267c	0a000011	 beq         |$LN1@GetVoltage|
  02680	e59d300c	 ldr         r3, [sp, #0xC]
  02684	e3530002	 cmp         r3, #2
  02688	0a000009	 beq         |$LN2@GetVoltage|
  0268c	e59d300c	 ldr         r3, [sp, #0xC]
  02690	e3530004	 cmp         r3, #4
  02694	0a000000	 beq         |$LN3@GetVoltage|
  02698	ea00000f	 b           |$LN4@GetVoltage|
  0269c		 |$LN3@GetVoltage|

; 399  :         {
; 400  :         case BCI_OV_VAC:
; 401  :             data = (data & ACCHGOVTH) >> 2;

  0269c	e5dd3000	 ldrb        r3, [sp]
  026a0	e203300c	 and         r3, r3, #0xC
  026a4	e1a03143	 mov         r3, r3, asr #2
  026a8	e20330ff	 and         r3, r3, #0xFF
  026ac	e5cd3000	 strb        r3, [sp]

; 402  :             break;

  026b0	ea000009	 b           |$LN4@GetVoltage|
  026b4		 |$LN2@GetVoltage|

; 403  : 
; 404  :         case BCI_OV_VBUS:
; 405  :             data = (data & VBUSOVTH);

  026b4	e5dd3000	 ldrb        r3, [sp]
  026b8	e2033003	 and         r3, r3, #3
  026bc	e20330ff	 and         r3, r3, #0xFF
  026c0	e5cd3000	 strb        r3, [sp]

; 406  :             break;

  026c4	ea000004	 b           |$LN4@GetVoltage|
  026c8		 |$LN1@GetVoltage|

; 407  :             
; 408  :         case BCI_OV_VBAT:
; 409  :             data = (data & VBATOVTH) >> 4;

  026c8	e5dd3000	 ldrb        r3, [sp]
  026cc	e2033030	 and         r3, r3, #0x30
  026d0	e1a03243	 mov         r3, r3, asr #4
  026d4	e20330ff	 and         r3, r3, #0xFF
  026d8	e5cd3000	 strb        r3, [sp]
  026dc		 |$LN4@GetVoltage|

; 410  :             break;
; 411  :         }
; 412  : 
; 413  :     DEBUGMSG(ZONE_FUNCTION, (L"-GetVoltageThreshold()\r\n"));

  026dc	e59f3040	 ldr         r3, [pc, #0x40]
  026e0	e5933440	 ldr         r3, [r3, #0x440]
  026e4	e3130080	 tst         r3, #0x80
  026e8	0a000004	 beq         |$LN10@GetVoltage|
  026ec	e59f002c	 ldr         r0, [pc, #0x2C]
  026f0	eb000000	 bl          NKDbgPrintfW
  026f4	e3a03001	 mov         r3, #1
  026f8	e58d3010	 str         r3, [sp, #0x10]
  026fc	ea000001	 b           |$LN11@GetVoltage|
  02700		 |$LN10@GetVoltage|
  02700	e3a03000	 mov         r3, #0
  02704	e58d3010	 str         r3, [sp, #0x10]
  02708		 |$LN11@GetVoltage|

; 414  :     return data;    

  02708	e5dd3000	 ldrb        r3, [sp]
  0270c	e58d3004	 str         r3, [sp, #4]

; 415  : }

  02710	e59d0004	 ldr         r0, [sp, #4]
  02714	e28dd014	 add         sp, sp, #0x14
  02718	e89d6000	 ldmia       sp, {sp, lr}
  0271c	e12fff1e	 bx          lr
  02720		 |$LN15@GetVoltage|
  02720		 |$LN16@GetVoltage|
  02720	00000000	 DCD         |??_C@_1DC@ENOLKLBM@?$AA?9?$AAG?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  02724		 |$LN17@GetVoltage|
  02724	00000000	 DCD         |dpCurSettings|
  02728		 |$LN18@GetVoltage|
  02728	00000000	 DCD         |??_C@_1GE@LPAMPNLI@?$AA?$CL?$AAG?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF@|
  0272c		 |$M45242|

			 ENDP  ; |GetVoltageThreshold|

	EXPORT	|??_C@_1DK@BJHNEHDG@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IC@KGCKAJNO@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAh?$AAB?$AAC?$AAI?$AA?$DN?$AA0?$AAx@| [ DATA ] ; `string'
	EXPORT	|BCI_SetVoltageThreshold|

  000a8			 AREA	 |.pdata|, PDATA
|$T45258| DCD	|$LN10@BCI_SetVol@2|
	DCD	0x40003904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@BJHNEHDG@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "V", 0x0, "o", 0x0, "l", 0x0, "t", 0x0, "a"
	DCB	0x0, "g", 0x0, "e", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l", 0x0, "d", 0x0, "("
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@KGCKAJNO@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAh?$AAB?$AAC?$AAI?$AA?$DN?$AA0?$AAx@| DCB "+"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "V", 0x0, "o", 0x0, "l", 0x0, "t", 0x0, "a"
	DCB	0x0, "g", 0x0, "e", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l", 0x0, "d", 0x0, "("
	DCB	0x0, "h", 0x0, "B", 0x0, "C", 0x0, "I", 0x0, "=", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ","
	DCB	0x0, " ", 0x0, "f", 0x0, "f", 0x0, "M", 0x0, "a", 0x0, "s"
	DCB	0x0, "k", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "t", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "h"
	DCB	0x0, "o", 0x0, "l", 0x0, "d", 0x0, "=", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  0272c			 AREA	 |.text|, CODE, ARM

  0272c		 |BCI_SetVoltageThreshold| PROC

; 1880 : {

  0272c		 |$LN10@BCI_SetVol@2|
  0272c	e1a0c00d	 mov         r12, sp
  02730	e92d0007	 stmdb       sp!, {r0 - r2}
  02734	e92d5000	 stmdb       sp!, {r12, lr}
  02738	e24dd018	 sub         sp, sp, #0x18
  0273c		 |$M45255|

; 1881 :     BOOL bSuccess = FALSE;

  0273c	e3a03000	 mov         r3, #0
  02740	e58d3004	 str         r3, [sp, #4]

; 1882 :     Device_t *pDevice = (Device_t*)hBCI;

  02744	e59d3020	 ldr         r3, [sp, #0x20]
  02748	e58d3000	 str         r3, [sp]

; 1883 :     DEBUGMSG(ZONE_FUNCTION, (L"+BCI_SetVoltageThreshold("
; 1884 :         L"hBCI=0x%08X, ffMask=%d, threshold=%d)\r\n",
; 1885 :         pDevice, ffMask, threshold
; 1886 :         ));

  0274c	e59f30b4	 ldr         r3, [pc, #0xB4]
  02750	e5933440	 ldr         r3, [r3, #0x440]
  02754	e3130080	 tst         r3, #0x80
  02758	0a000007	 beq         |$LN4@BCI_SetVol@2|
  0275c	e5dd3028	 ldrb        r3, [sp, #0x28]
  02760	e59d2024	 ldr         r2, [sp, #0x24]
  02764	e59d1000	 ldr         r1, [sp]
  02768	e59f009c	 ldr         r0, [pc, #0x9C]
  0276c	eb000000	 bl          NKDbgPrintfW
  02770	e3a03001	 mov         r3, #1
  02774	e58d300c	 str         r3, [sp, #0xC]
  02778	ea000001	 b           |$LN5@BCI_SetVol@2|
  0277c		 |$LN4@BCI_SetVol@2|
  0277c	e3a03000	 mov         r3, #0
  02780	e58d300c	 str         r3, [sp, #0xC]
  02784		 |$LN5@BCI_SetVol@2|

; 1887 : 
; 1888 :     // check for valid parameter
; 1889 :     if (pDevice == NULL) goto cleanUp;

  02784	e59d3000	 ldr         r3, [sp]
  02788	e3530000	 cmp         r3, #0
  0278c	1a000000	 bne         |$LN1@BCI_SetVol@2|
  02790	ea00000a	 b           |$cleanUp$44486|
  02794		 |$LN1@BCI_SetVol@2|

; 1890 : 
; 1891 :     EnterCriticalSection(&pDevice->cs);    

  02794	e59d0000	 ldr         r0, [sp]
  02798	eb000000	 bl          EnterCriticalSection

; 1892 :     bSuccess = SetVoltageThreshold(pDevice, ffMask, threshold);    

  0279c	e5dd2028	 ldrb        r2, [sp, #0x28]
  027a0	e59d1024	 ldr         r1, [sp, #0x24]
  027a4	e59d0000	 ldr         r0, [sp]
  027a8	eb000000	 bl          SetVoltageThreshold
  027ac	e58d0010	 str         r0, [sp, #0x10]
  027b0	e59d3010	 ldr         r3, [sp, #0x10]
  027b4	e58d3004	 str         r3, [sp, #4]

; 1893 :     LeaveCriticalSection(&pDevice->cs);

  027b8	e59d0000	 ldr         r0, [sp]
  027bc	eb000000	 bl          LeaveCriticalSection
  027c0		 |$cleanUp$44486|

; 1894 :     
; 1895 : cleanUp:
; 1896 :     DEBUGMSG(ZONE_FUNCTION, (L"-BCI_SetVoltageThreshold()\r\n"));

  027c0	e59f3040	 ldr         r3, [pc, #0x40]
  027c4	e5933440	 ldr         r3, [r3, #0x440]
  027c8	e3130080	 tst         r3, #0x80
  027cc	0a000004	 beq         |$LN6@BCI_SetVol@2|
  027d0	e59f002c	 ldr         r0, [pc, #0x2C]
  027d4	eb000000	 bl          NKDbgPrintfW
  027d8	e3a03001	 mov         r3, #1
  027dc	e58d3014	 str         r3, [sp, #0x14]
  027e0	ea000001	 b           |$LN7@BCI_SetVol@2|
  027e4		 |$LN6@BCI_SetVol@2|
  027e4	e3a03000	 mov         r3, #0
  027e8	e58d3014	 str         r3, [sp, #0x14]
  027ec		 |$LN7@BCI_SetVol@2|

; 1897 :     return bSuccess;

  027ec	e59d3004	 ldr         r3, [sp, #4]
  027f0	e58d3008	 str         r3, [sp, #8]

; 1898 : }

  027f4	e59d0008	 ldr         r0, [sp, #8]
  027f8	e28dd018	 add         sp, sp, #0x18
  027fc	e89d6000	 ldmia       sp, {sp, lr}
  02800	e12fff1e	 bx          lr
  02804		 |$LN11@BCI_SetVol@2|
  02804		 |$LN12@BCI_SetVol@2|
  02804	00000000	 DCD         |??_C@_1DK@BJHNEHDG@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  02808		 |$LN13@BCI_SetVol@2|
  02808	00000000	 DCD         |dpCurSettings|
  0280c		 |$LN14@BCI_SetVol@2|
  0280c	00000000	 DCD         |??_C@_1IC@KGCKAJNO@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAh?$AAB?$AAC?$AAI?$AA?$DN?$AA0?$AAx@|
  02810		 |$M45256|

			 ENDP  ; |BCI_SetVoltageThreshold|

	EXPORT	|??_C@_1DC@NGNANJCO@?$AA?9?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IA@NJEMMIHB@?$AA?$CL?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF@| [ DATA ] ; `string'

  000b0			 AREA	 |.pdata|, PDATA
|$T45272| DCD	|$LN16@SetVoltage@2|
	DCD	0x40009804

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@NGNANJCO@?$AA?9?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "V", 0x0, "o", 0x0, "l"
	DCB	0x0, "t", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "T", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l"
	DCB	0x0, "d", 0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IA@NJEMMIHB@?$AA?$CL?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF@| DCB "+"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "V", 0x0, "o", 0x0, "l"
	DCB	0x0, "t", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "T", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l"
	DCB	0x0, "d", 0x0, "(", 0x0, "p", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " "
	DCB	0x0, "f", 0x0, "f", 0x0, "M", 0x0, "a", 0x0, "s", 0x0, "k"
	DCB	0x0, "=", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "t"
	DCB	0x0, "h", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "h", 0x0, "o"
	DCB	0x0, "l", 0x0, "d", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  02810			 AREA	 |.text|, CODE, ARM

  02810		 |SetVoltageThreshold| PROC

; 631  : {

  02810		 |$LN16@SetVoltage@2|
  02810	e1a0c00d	 mov         r12, sp
  02814	e92d0007	 stmdb       sp!, {r0 - r2}
  02818	e92d5000	 stmdb       sp!, {r12, lr}
  0281c	e24dd018	 sub         sp, sp, #0x18
  02820		 |$M45269|

; 632  :     UINT8 data;
; 633  :     BOOL bResult = FALSE;

  02820	e3a03000	 mov         r3, #0
  02824	e58d3000	 str         r3, [sp]

; 634  :     DEBUGMSG(ZONE_FUNCTION, (L"+SetVoltageThreshold("
; 635  :         L"pDevice=0x%08X, ffMask=%d, threshold=%d)\r\n",
; 636  :         pDevice, ffMask, threshold
; 637  :         ));

  02828	e59f322c	 ldr         r3, [pc, #0x22C]
  0282c	e5933440	 ldr         r3, [r3, #0x440]
  02830	e3130080	 tst         r3, #0x80
  02834	0a000007	 beq         |$LN10@SetVoltage@2|
  02838	e5dd3028	 ldrb        r3, [sp, #0x28]
  0283c	e59d2024	 ldr         r2, [sp, #0x24]
  02840	e59d1020	 ldr         r1, [sp, #0x20]
  02844	e59f0220	 ldr         r0, [pc, #0x220]
  02848	eb000000	 bl          NKDbgPrintfW
  0284c	e3a03001	 mov         r3, #1
  02850	e58d300c	 str         r3, [sp, #0xC]
  02854	ea000001	 b           |$LN11@SetVoltage@2|
  02858		 |$LN10@SetVoltage@2|
  02858	e3a03000	 mov         r3, #0
  0285c	e58d300c	 str         r3, [sp, #0xC]
  02860		 |$LN11@SetVoltage@2|

; 638  : 
; 639  :     // make sure the value is valid
; 640  :     if (threshold > 3) goto cleanUp;

  02860	e5dd3028	 ldrb        r3, [sp, #0x28]
  02864	e3530003	 cmp         r3, #3
  02868	da000000	 ble         |$LN7@SetVoltage@2|
  0286c	ea000068	 b           |$cleanUp$44015|
  02870		 |$LN7@SetVoltage@2|

; 641  : 
; 642  :     // get access to BCIMFTH3
; 643  :     data = KEY_BCIMFTH3;

  02870	e3a0306d	 mov         r3, #0x6D
  02874	e5cd3004	 strb        r3, [sp, #4]

; 644  :     TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  02878	e3a03001	 mov         r3, #1
  0287c	e28d2004	 add         r2, sp, #4
  02880	e3a01802	 mov         r1, #2, 16
  02884	e3811085	 orr         r1, r1, #0x85
  02888	e59d0020	 ldr         r0, [sp, #0x20]
  0288c	e2800018	 add         r0, r0, #0x18
  02890	e5900000	 ldr         r0, [r0]
  02894	eb000000	 bl          TWLWriteRegs

; 645  : 
; 646  :     // get contents
; 647  :     TWLReadRegs(pDevice->hTwl, TWL_BCIMFTH3, &data, 1);

  02898	e3a03001	 mov         r3, #1
  0289c	e28d2004	 add         r2, sp, #4
  028a0	e3a01802	 mov         r1, #2, 16
  028a4	e381108c	 orr         r1, r1, #0x8C
  028a8	e59d0020	 ldr         r0, [sp, #0x20]
  028ac	e2800018	 add         r0, r0, #0x18
  028b0	e5900000	 ldr         r0, [r0]
  028b4	eb000000	 bl          TWLReadRegs

; 648  :     switch (ffMask)

  028b8	e59d3024	 ldr         r3, [sp, #0x24]
  028bc	e58d3010	 str         r3, [sp, #0x10]
  028c0	e59d3010	 ldr         r3, [sp, #0x10]
  028c4	e3530001	 cmp         r3, #1
  028c8	0a000031	 beq         |$LN2@SetVoltage@2|
  028cc	e59d3010	 ldr         r3, [sp, #0x10]
  028d0	e3530002	 cmp         r3, #2
  028d4	0a000019	 beq         |$LN3@SetVoltage@2|
  028d8	e59d3010	 ldr         r3, [sp, #0x10]
  028dc	e3530004	 cmp         r3, #4
  028e0	0a000000	 beq         |$LN4@SetVoltage@2|
  028e4	ea00003f	 b           |$LN5@SetVoltage@2|
  028e8		 |$LN4@SetVoltage@2|

; 649  :         {
; 650  :         case BCI_OV_VAC:
; 651  :             pDevice->dwACCHGOVTH = _rgACCHGOVTH[threshold];

  028e8	e5dd3028	 ldrb        r3, [sp, #0x28]
  028ec	e1a01003	 mov         r1, r3
  028f0	e3a03004	 mov         r3, #4
  028f4	e0020391	 mul         r2, r1, r3
  028f8	e59f3168	 ldr         r3, [pc, #0x168]
  028fc	e0831002	 add         r1, r3, r2
  02900	e59d3020	 ldr         r3, [sp, #0x20]
  02904	e2832044	 add         r2, r3, #0x44
  02908	e5913000	 ldr         r3, [r1]
  0290c	e5823000	 str         r3, [r2]

; 652  :             data = (data & ~ACCHGOVTH) | (threshold << 2);

  02910	e5dd3004	 ldrb        r3, [sp, #4]
  02914	e1a02003	 mov         r2, r3
  02918	e3e0300c	 mvn         r3, #0xC
  0291c	e0022003	 and         r2, r2, r3
  02920	e5dd3028	 ldrb        r3, [sp, #0x28]
  02924	e1a03103	 mov         r3, r3, lsl #2
  02928	e1823003	 orr         r3, r2, r3
  0292c	e20330ff	 and         r3, r3, #0xFF
  02930	e5cd3004	 strb        r3, [sp, #4]

; 653  :             bResult = TRUE;

  02934	e3a03001	 mov         r3, #1
  02938	e58d3000	 str         r3, [sp]

; 654  :             break;

  0293c	ea000029	 b           |$LN5@SetVoltage@2|
  02940		 |$LN3@SetVoltage@2|

; 655  : 
; 656  :         case BCI_OV_VBUS:
; 657  :             pDevice->dwVBUSOVTH = _rgVBUSOVTH[threshold];

  02940	e5dd3028	 ldrb        r3, [sp, #0x28]
  02944	e1a01003	 mov         r1, r3
  02948	e3a03004	 mov         r3, #4
  0294c	e0020391	 mul         r2, r1, r3
  02950	e59f310c	 ldr         r3, [pc, #0x10C]
  02954	e0831002	 add         r1, r3, r2
  02958	e59d3020	 ldr         r3, [sp, #0x20]
  0295c	e283204c	 add         r2, r3, #0x4C
  02960	e5913000	 ldr         r3, [r1]
  02964	e5823000	 str         r3, [r2]

; 658  :             data = (data & ~VBUSOVTH) | (threshold);

  02968	e5dd3004	 ldrb        r3, [sp, #4]
  0296c	e1a02003	 mov         r2, r3
  02970	e3e03003	 mvn         r3, #3
  02974	e0022003	 and         r2, r2, r3
  02978	e5dd3028	 ldrb        r3, [sp, #0x28]
  0297c	e1823003	 orr         r3, r2, r3
  02980	e20330ff	 and         r3, r3, #0xFF
  02984	e5cd3004	 strb        r3, [sp, #4]

; 659  :             bResult = TRUE;

  02988	e3a03001	 mov         r3, #1
  0298c	e58d3000	 str         r3, [sp]

; 660  :             break;

  02990	ea000014	 b           |$LN5@SetVoltage@2|
  02994		 |$LN2@SetVoltage@2|

; 661  :             
; 662  :         case BCI_OV_VBAT:
; 663  :             pDevice->dwVBATOVTH = _rgVBATOVTH[threshold];

  02994	e5dd3028	 ldrb        r3, [sp, #0x28]
  02998	e1a01003	 mov         r1, r3
  0299c	e3a03004	 mov         r3, #4
  029a0	e0020391	 mul         r2, r1, r3
  029a4	e59f30b4	 ldr         r3, [pc, #0xB4]
  029a8	e0831002	 add         r1, r3, r2
  029ac	e59d3020	 ldr         r3, [sp, #0x20]
  029b0	e2832048	 add         r2, r3, #0x48
  029b4	e5913000	 ldr         r3, [r1]
  029b8	e5823000	 str         r3, [r2]

; 664  :             data = (data & ~VBATOVTH) | (threshold << 4);

  029bc	e5dd3004	 ldrb        r3, [sp, #4]
  029c0	e1a02003	 mov         r2, r3
  029c4	e3e03030	 mvn         r3, #0x30
  029c8	e0022003	 and         r2, r2, r3
  029cc	e5dd3028	 ldrb        r3, [sp, #0x28]
  029d0	e1a03203	 mov         r3, r3, lsl #4
  029d4	e1823003	 orr         r3, r2, r3
  029d8	e20330ff	 and         r3, r3, #0xFF
  029dc	e5cd3004	 strb        r3, [sp, #4]

; 665  :             bResult = TRUE;

  029e0	e3a03001	 mov         r3, #1
  029e4	e58d3000	 str         r3, [sp]
  029e8		 |$LN5@SetVoltage@2|

; 666  :             break;
; 667  :         }
; 668  : 
; 669  :     if (bResult != FALSE)

  029e8	e59d3000	 ldr         r3, [sp]
  029ec	e3530000	 cmp         r3, #0
  029f0	0a000007	 beq         |$LN1@SetVoltage@2|

; 670  :         {
; 671  :         TWLWriteRegs(pDevice->hTwl, TWL_BCIMFTH3, &data, 1);

  029f4	e3a03001	 mov         r3, #1
  029f8	e28d2004	 add         r2, sp, #4
  029fc	e3a01802	 mov         r1, #2, 16
  02a00	e381108c	 orr         r1, r1, #0x8C
  02a04	e59d0020	 ldr         r0, [sp, #0x20]
  02a08	e2800018	 add         r0, r0, #0x18
  02a0c	e5900000	 ldr         r0, [r0]
  02a10	eb000000	 bl          TWLWriteRegs
  02a14		 |$LN1@SetVoltage@2|
  02a14		 |$cleanUp$44015|

; 672  :         }
; 673  : 
; 674  : cleanUp:
; 675  :     DEBUGMSG(ZONE_FUNCTION, (L"-SetVoltageThreshold()\r\n"));

  02a14	e59f3040	 ldr         r3, [pc, #0x40]
  02a18	e5933440	 ldr         r3, [r3, #0x440]
  02a1c	e3130080	 tst         r3, #0x80
  02a20	0a000004	 beq         |$LN12@SetVoltage@2|
  02a24	e59f002c	 ldr         r0, [pc, #0x2C]
  02a28	eb000000	 bl          NKDbgPrintfW
  02a2c	e3a03001	 mov         r3, #1
  02a30	e58d3014	 str         r3, [sp, #0x14]
  02a34	ea000001	 b           |$LN13@SetVoltage@2|
  02a38		 |$LN12@SetVoltage@2|
  02a38	e3a03000	 mov         r3, #0
  02a3c	e58d3014	 str         r3, [sp, #0x14]
  02a40		 |$LN13@SetVoltage@2|

; 676  :     return bResult;    

  02a40	e59d3000	 ldr         r3, [sp]
  02a44	e58d3008	 str         r3, [sp, #8]

; 677  : }

  02a48	e59d0008	 ldr         r0, [sp, #8]
  02a4c	e28dd018	 add         sp, sp, #0x18
  02a50	e89d6000	 ldmia       sp, {sp, lr}
  02a54	e12fff1e	 bx          lr
  02a58		 |$LN17@SetVoltage@2|
  02a58		 |$LN18@SetVoltage@2|
  02a58	00000000	 DCD         |??_C@_1DC@NGNANJCO@?$AA?9?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  02a5c		 |$LN19@SetVoltage@2|
  02a5c	00000000	 DCD         |dpCurSettings|
  02a60		 |$LN20@SetVoltage@2|
  02a60	00000000	 DCD         |_rgVBATOVTH|
  02a64		 |$LN21@SetVoltage@2|
  02a64	00000000	 DCD         |_rgVBUSOVTH|
  02a68		 |$LN22@SetVoltage@2|
  02a68	00000000	 DCD         |_rgACCHGOVTH|
  02a6c		 |$LN23@SetVoltage@2|
  02a6c	00000000	 DCD         |??_C@_1IA@NJEMMIHB@?$AA?$CL?$AAS?$AAe?$AAt?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF@|
  02a70		 |$M45270|

			 ENDP  ; |SetVoltageThreshold|

	EXPORT	|??_C@_1EC@MPMCFPJE@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@OPDIHLKK@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe@| [ DATA ] ; `string'
	EXPORT	|BCI_GetTemperatureThreshold|

  000b8			 AREA	 |.pdata|, PDATA
|$T45289| DCD	|$LN10@BCI_GetTem|
	DCD	0x40003904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@MPMCFPJE@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6@| DCB "-"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "e"
	DCB	0x0, "t", 0x0, "T", 0x0, "e", 0x0, "m", 0x0, "p", 0x0, "e"
	DCB	0x0, "r", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "e"
	DCB	0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "h"
	DCB	0x0, "o", 0x0, "l", 0x0, "d", 0x0, "(", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@OPDIHLKK@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe@| DCB "+"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "e"
	DCB	0x0, "t", 0x0, "T", 0x0, "e", 0x0, "m", 0x0, "p", 0x0, "e"
	DCB	0x0, "r", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "e"
	DCB	0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "h"
	DCB	0x0, "o", 0x0, "l", 0x0, "d", 0x0, "(", 0x0, "p", 0x0, "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "="
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, ",", 0x0, " ", 0x0, "f", 0x0, "f", 0x0, "M", 0x0, "a"
	DCB	0x0, "s", 0x0, "k", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  02a70			 AREA	 |.text|, CODE, ARM

  02a70		 |BCI_GetTemperatureThreshold| PROC

; 1913 : {

  02a70		 |$LN10@BCI_GetTem|
  02a70	e1a0c00d	 mov         r12, sp
  02a74	e92d000f	 stmdb       sp!, {r0 - r3}
  02a78	e92d5000	 stmdb       sp!, {r12, lr}
  02a7c	e24dd018	 sub         sp, sp, #0x18
  02a80		 |$M45286|

; 1914 :     BOOL bSuccess = FALSE;

  02a80	e3a03000	 mov         r3, #0
  02a84	e58d3004	 str         r3, [sp, #4]

; 1915 :     Device_t *pDevice = (Device_t*)hBCI;

  02a88	e59d3020	 ldr         r3, [sp, #0x20]
  02a8c	e58d3000	 str         r3, [sp]

; 1916 :     DEBUGMSG(ZONE_FUNCTION, (L"+BCI_GetTemperatureThreshold("
; 1917 :         L"pDevice=0x%08X, ffMask=%d)\r\n",
; 1918 :         pDevice, ffMask
; 1919 :         ));

  02a90	e59f30b4	 ldr         r3, [pc, #0xB4]
  02a94	e5933440	 ldr         r3, [r3, #0x440]
  02a98	e3130080	 tst         r3, #0x80
  02a9c	0a000006	 beq         |$LN4@BCI_GetTem|
  02aa0	e59d2024	 ldr         r2, [sp, #0x24]
  02aa4	e59d1000	 ldr         r1, [sp]
  02aa8	e59f00a0	 ldr         r0, [pc, #0xA0]
  02aac	eb000000	 bl          NKDbgPrintfW
  02ab0	e3a03001	 mov         r3, #1
  02ab4	e58d300c	 str         r3, [sp, #0xC]
  02ab8	ea000001	 b           |$LN5@BCI_GetTem|
  02abc		 |$LN4@BCI_GetTem|
  02abc	e3a03000	 mov         r3, #0
  02ac0	e58d300c	 str         r3, [sp, #0xC]
  02ac4		 |$LN5@BCI_GetTem|

; 1920 : 
; 1921 :     // check for valid parameter
; 1922 :     if (pDevice == NULL) goto cleanUp;

  02ac4	e59d3000	 ldr         r3, [sp]
  02ac8	e3530000	 cmp         r3, #0
  02acc	1a000000	 bne         |$LN1@BCI_GetTem|
  02ad0	ea00000b	 b           |$cleanUp$44505|
  02ad4		 |$LN1@BCI_GetTem|

; 1923 : 
; 1924 :     EnterCriticalSection(&pDevice->cs);    

  02ad4	e59d0000	 ldr         r0, [sp]
  02ad8	eb000000	 bl          EnterCriticalSection

; 1925 :     bSuccess = GetTemperatureThreshold(pDevice, ffMask, 
; 1926 :                    pThresholdHigh, pThresholdLow
; 1927 :                    );

  02adc	e59d302c	 ldr         r3, [sp, #0x2C]
  02ae0	e59d2028	 ldr         r2, [sp, #0x28]
  02ae4	e59d1024	 ldr         r1, [sp, #0x24]
  02ae8	e59d0000	 ldr         r0, [sp]
  02aec	eb000000	 bl          GetTemperatureThreshold
  02af0	e58d0010	 str         r0, [sp, #0x10]
  02af4	e59d3010	 ldr         r3, [sp, #0x10]
  02af8	e58d3004	 str         r3, [sp, #4]

; 1928 :     LeaveCriticalSection(&pDevice->cs);

  02afc	e59d0000	 ldr         r0, [sp]
  02b00	eb000000	 bl          LeaveCriticalSection
  02b04		 |$cleanUp$44505|

; 1929 : 
; 1930 : cleanUp:
; 1931 :     DEBUGMSG(ZONE_FUNCTION, (L"-BCI_GetTemperatureThreshold()\r\n"));

  02b04	e59f3040	 ldr         r3, [pc, #0x40]
  02b08	e5933440	 ldr         r3, [r3, #0x440]
  02b0c	e3130080	 tst         r3, #0x80
  02b10	0a000004	 beq         |$LN6@BCI_GetTem|
  02b14	e59f002c	 ldr         r0, [pc, #0x2C]
  02b18	eb000000	 bl          NKDbgPrintfW
  02b1c	e3a03001	 mov         r3, #1
  02b20	e58d3014	 str         r3, [sp, #0x14]
  02b24	ea000001	 b           |$LN7@BCI_GetTem|
  02b28		 |$LN6@BCI_GetTem|
  02b28	e3a03000	 mov         r3, #0
  02b2c	e58d3014	 str         r3, [sp, #0x14]
  02b30		 |$LN7@BCI_GetTem|

; 1932 :     return bSuccess;    

  02b30	e59d3004	 ldr         r3, [sp, #4]
  02b34	e58d3008	 str         r3, [sp, #8]

; 1933 : }

  02b38	e59d0008	 ldr         r0, [sp, #8]
  02b3c	e28dd018	 add         sp, sp, #0x18
  02b40	e89d6000	 ldmia       sp, {sp, lr}
  02b44	e12fff1e	 bx          lr
  02b48		 |$LN11@BCI_GetTem|
  02b48		 |$LN12@BCI_GetTem|
  02b48	00000000	 DCD         |??_C@_1EC@MPMCFPJE@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6@|
  02b4c		 |$LN13@BCI_GetTem|
  02b4c	00000000	 DCD         |dpCurSettings|
  02b50		 |$LN14@BCI_GetTem|
  02b50	00000000	 DCD         |??_C@_1HE@OPDIHLKK@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe@|
  02b54		 |$M45287|

			 ENDP  ; |BCI_GetTemperatureThreshold|

	EXPORT	|??_C@_1DK@BBKMAFFB@?$AA?9?$AAG?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@CAPCLNCI@?$AA?$CL?$AAG?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe@| [ DATA ] ; `string'

  000c0			 AREA	 |.pdata|, PDATA
|$T45303| DCD	|$LN15@GetTempera|
	DCD	0x40008604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@BBKMAFFB@?$AA?9?$AAG?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "G", 0x0, "e", 0x0, "t", 0x0, "T", 0x0, "e", 0x0, "m"
	DCB	0x0, "p", 0x0, "e", 0x0, "r", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "r", 0x0, "e", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l", 0x0, "d", 0x0, "("
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@CAPCLNCI@?$AA?$CL?$AAG?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe@| DCB "+"
	DCB	0x0, "G", 0x0, "e", 0x0, "t", 0x0, "T", 0x0, "e", 0x0, "m"
	DCB	0x0, "p", 0x0, "e", 0x0, "r", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "r", 0x0, "e", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l", 0x0, "d", 0x0, "("
	DCB	0x0, "p", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c"
	DCB	0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "f", 0x0, "f"
	DCB	0x0, "M", 0x0, "a", 0x0, "s", 0x0, "k", 0x0, "=", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  02b54			 AREA	 |.text|, CODE, ARM

  02b54		 |GetTemperatureThreshold| PROC

; 430  : {

  02b54		 |$LN15@GetTempera|
  02b54	e1a0c00d	 mov         r12, sp
  02b58	e92d000f	 stmdb       sp!, {r0 - r3}
  02b5c	e92d5000	 stmdb       sp!, {r12, lr}
  02b60	e24dd018	 sub         sp, sp, #0x18
  02b64		 |$M45300|

; 431  :     UINT8 data = 0;

  02b64	e3a03000	 mov         r3, #0
  02b68	e5cd3004	 strb        r3, [sp, #4]

; 432  :     BOOL bResult = FALSE;

  02b6c	e3a03000	 mov         r3, #0
  02b70	e58d3000	 str         r3, [sp]

; 433  :     DEBUGMSG(ZONE_FUNCTION, (L"+GetTemperatureThreshold("
; 434  :         L"pDevice=0x%08X, ffMask=%d)\r\n",
; 435  :         pDevice, ffMask
; 436  :         ));

  02b74	e59f31e8	 ldr         r3, [pc, #0x1E8]
  02b78	e5933440	 ldr         r3, [r3, #0x440]
  02b7c	e3130080	 tst         r3, #0x80
  02b80	0a000006	 beq         |$LN9@GetTempera|
  02b84	e59d2024	 ldr         r2, [sp, #0x24]
  02b88	e59d1020	 ldr         r1, [sp, #0x20]
  02b8c	e59f01d4	 ldr         r0, [pc, #0x1D4]
  02b90	eb000000	 bl          NKDbgPrintfW
  02b94	e3a03001	 mov         r3, #1
  02b98	e58d300c	 str         r3, [sp, #0xC]
  02b9c	ea000001	 b           |$LN10@GetTempera|
  02ba0		 |$LN9@GetTempera|
  02ba0	e3a03000	 mov         r3, #0
  02ba4	e58d300c	 str         r3, [sp, #0xC]
  02ba8		 |$LN10@GetTempera|

; 437  : 
; 438  :     if (pThresholdHigh == NULL || pThresholdLow == NULL) goto cleanUp;

  02ba8	e59d3028	 ldr         r3, [sp, #0x28]
  02bac	e3530000	 cmp         r3, #0
  02bb0	0a000002	 beq         |$LN5@GetTempera|
  02bb4	e59d302c	 ldr         r3, [sp, #0x2C]
  02bb8	e3530000	 cmp         r3, #0
  02bbc	1a000000	 bne         |$LN6@GetTempera|
  02bc0		 |$LN5@GetTempera|
  02bc0	ea000055	 b           |$cleanUp$43949|
  02bc4		 |$LN6@GetTempera|

; 439  : 
; 440  :     switch (ffMask)

  02bc4	e59d3024	 ldr         r3, [sp, #0x24]
  02bc8	e58d3010	 str         r3, [sp, #0x10]
  02bcc	e59d3010	 ldr         r3, [sp, #0x10]
  02bd0	e3530001	 cmp         r3, #1
  02bd4	0a000003	 beq         |$LN2@GetTempera|
  02bd8	e59d3010	 ldr         r3, [sp, #0x10]
  02bdc	e3530002	 cmp         r3, #2
  02be0	0a000027	 beq         |$LN1@GetTempera|
  02be4	ea00004c	 b           |$LN3@GetTempera|
  02be8		 |$LN2@GetTempera|

; 441  :         {
; 442  :         case BCI_TEMP_VBAT1:
; 443  :             // get access to BCIMFTH4
; 444  :             data = KEY_BCIMFTH4;

  02be8	e3a030ea	 mov         r3, #0xEA
  02bec	e5cd3004	 strb        r3, [sp, #4]

; 445  :             TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  02bf0	e3a03001	 mov         r3, #1
  02bf4	e28d2004	 add         r2, sp, #4
  02bf8	e3a01802	 mov         r1, #2, 16
  02bfc	e3811085	 orr         r1, r1, #0x85
  02c00	e59d0020	 ldr         r0, [sp, #0x20]
  02c04	e2800018	 add         r0, r0, #0x18
  02c08	e5900000	 ldr         r0, [r0]
  02c0c	eb000000	 bl          TWLWriteRegs

; 446  : 
; 447  :             TWLReadRegs(pDevice->hTwl, TWL_BCIMFTH4, 
; 448  :                 pThresholdLow, 1
; 449  :                 );

  02c10	e3a03001	 mov         r3, #1
  02c14	e59d202c	 ldr         r2, [sp, #0x2C]
  02c18	e3a01802	 mov         r1, #2, 16
  02c1c	e381108d	 orr         r1, r1, #0x8D
  02c20	e59d0020	 ldr         r0, [sp, #0x20]
  02c24	e2800018	 add         r0, r0, #0x18
  02c28	e5900000	 ldr         r0, [r0]
  02c2c	eb000000	 bl          TWLReadRegs

; 450  :             
; 451  :             // get access to BCIMFTH5
; 452  :             data = KEY_BCIMFTH5;

  02c30	e3a030c4	 mov         r3, #0xC4
  02c34	e5cd3004	 strb        r3, [sp, #4]

; 453  :             TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  02c38	e3a03001	 mov         r3, #1
  02c3c	e28d2004	 add         r2, sp, #4
  02c40	e3a01802	 mov         r1, #2, 16
  02c44	e3811085	 orr         r1, r1, #0x85
  02c48	e59d0020	 ldr         r0, [sp, #0x20]
  02c4c	e2800018	 add         r0, r0, #0x18
  02c50	e5900000	 ldr         r0, [r0]
  02c54	eb000000	 bl          TWLWriteRegs

; 454  : 
; 455  :             TWLReadRegs(pDevice->hTwl, TWL_BCIMFTH5, 
; 456  :                 pThresholdHigh, 1
; 457  :                 );            

  02c58	e3a03001	 mov         r3, #1
  02c5c	e59d2028	 ldr         r2, [sp, #0x28]
  02c60	e3a01802	 mov         r1, #2, 16
  02c64	e381108e	 orr         r1, r1, #0x8E
  02c68	e59d0020	 ldr         r0, [sp, #0x20]
  02c6c	e2800018	 add         r0, r0, #0x18
  02c70	e5900000	 ldr         r0, [r0]
  02c74	eb000000	 bl          TWLReadRegs

; 458  :             bResult = TRUE;

  02c78	e3a03001	 mov         r3, #1
  02c7c	e58d3000	 str         r3, [sp]

; 459  :             break;

  02c80	ea000025	 b           |$LN3@GetTempera|
  02c84		 |$LN1@GetTempera|

; 460  : 
; 461  :         case BCI_TEMP_VBAT2:
; 462  :             // get access to BCIMFTH6
; 463  :             data = KEY_BCIMFTH6;

  02c84	e3a030bc	 mov         r3, #0xBC
  02c88	e5cd3004	 strb        r3, [sp, #4]

; 464  :             TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  02c8c	e3a03001	 mov         r3, #1
  02c90	e28d2004	 add         r2, sp, #4
  02c94	e3a01802	 mov         r1, #2, 16
  02c98	e3811085	 orr         r1, r1, #0x85
  02c9c	e59d0020	 ldr         r0, [sp, #0x20]
  02ca0	e2800018	 add         r0, r0, #0x18
  02ca4	e5900000	 ldr         r0, [r0]
  02ca8	eb000000	 bl          TWLWriteRegs

; 465  : 
; 466  :             TWLReadRegs(pDevice->hTwl, TWL_BCIMFTH6, 
; 467  :                 pThresholdLow, 1
; 468  :                 );

  02cac	e3a03001	 mov         r3, #1
  02cb0	e59d202c	 ldr         r2, [sp, #0x2C]
  02cb4	e3a01802	 mov         r1, #2, 16
  02cb8	e381108f	 orr         r1, r1, #0x8F
  02cbc	e59d0020	 ldr         r0, [sp, #0x20]
  02cc0	e2800018	 add         r0, r0, #0x18
  02cc4	e5900000	 ldr         r0, [r0]
  02cc8	eb000000	 bl          TWLReadRegs

; 469  : 
; 470  :             // get access to BCIMFTH7
; 471  :             data = KEY_BCIMFTH7;

  02ccc	e3a030c3	 mov         r3, #0xC3
  02cd0	e5cd3004	 strb        r3, [sp, #4]

; 472  :             TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  02cd4	e3a03001	 mov         r3, #1
  02cd8	e28d2004	 add         r2, sp, #4
  02cdc	e3a01802	 mov         r1, #2, 16
  02ce0	e3811085	 orr         r1, r1, #0x85
  02ce4	e59d0020	 ldr         r0, [sp, #0x20]
  02ce8	e2800018	 add         r0, r0, #0x18
  02cec	e5900000	 ldr         r0, [r0]
  02cf0	eb000000	 bl          TWLWriteRegs

; 473  : 
; 474  :             TWLReadRegs(pDevice->hTwl, TWL_BCIMFTH7, 
; 475  :                 pThresholdHigh, 1
; 476  :                 );  

  02cf4	e3a03001	 mov         r3, #1
  02cf8	e59d2028	 ldr         r2, [sp, #0x28]
  02cfc	e3a01802	 mov         r1, #2, 16
  02d00	e3811090	 orr         r1, r1, #0x90
  02d04	e59d0020	 ldr         r0, [sp, #0x20]
  02d08	e2800018	 add         r0, r0, #0x18
  02d0c	e5900000	 ldr         r0, [r0]
  02d10	eb000000	 bl          TWLReadRegs

; 477  :             bResult = TRUE;

  02d14	e3a03001	 mov         r3, #1
  02d18	e58d3000	 str         r3, [sp]
  02d1c		 |$LN3@GetTempera|
  02d1c		 |$cleanUp$43949|

; 478  :             break;            
; 479  :         }
; 480  : 
; 481  : cleanUp:
; 482  :     DEBUGMSG(ZONE_FUNCTION, (L"-GetTemperatureThreshold()\r\n"));

  02d1c	e59f3040	 ldr         r3, [pc, #0x40]
  02d20	e5933440	 ldr         r3, [r3, #0x440]
  02d24	e3130080	 tst         r3, #0x80
  02d28	0a000004	 beq         |$LN11@GetTempera|
  02d2c	e59f002c	 ldr         r0, [pc, #0x2C]
  02d30	eb000000	 bl          NKDbgPrintfW
  02d34	e3a03001	 mov         r3, #1
  02d38	e58d3014	 str         r3, [sp, #0x14]
  02d3c	ea000001	 b           |$LN12@GetTempera|
  02d40		 |$LN11@GetTempera|
  02d40	e3a03000	 mov         r3, #0
  02d44	e58d3014	 str         r3, [sp, #0x14]
  02d48		 |$LN12@GetTempera|

; 483  :     return bResult;    

  02d48	e59d3000	 ldr         r3, [sp]
  02d4c	e58d3008	 str         r3, [sp, #8]

; 484  : }

  02d50	e59d0008	 ldr         r0, [sp, #8]
  02d54	e28dd018	 add         sp, sp, #0x18
  02d58	e89d6000	 ldmia       sp, {sp, lr}
  02d5c	e12fff1e	 bx          lr
  02d60		 |$LN16@GetTempera|
  02d60		 |$LN17@GetTempera|
  02d60	00000000	 DCD         |??_C@_1DK@BBKMAFFB@?$AA?9?$AAG?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  02d64		 |$LN18@GetTempera|
  02d64	00000000	 DCD         |dpCurSettings|
  02d68		 |$LN19@GetTempera|
  02d68	00000000	 DCD         |??_C@_1GM@CAPCLNCI@?$AA?$CL?$AAG?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe@|
  02d6c		 |$M45301|

			 ENDP  ; |GetTemperatureThreshold|

	EXPORT	|??_C@_1EC@LLLGCLPJ@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LE@IPFNIBOB@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAh?$AAB?$AAC@| [ DATA ] ; `string'
	EXPORT	|BCI_SetTemperatureThreshold|

  000c8			 AREA	 |.pdata|, PDATA
|$T45318| DCD	|$LN10@BCI_SetTem|
	DCD	0x40003c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@LLLGCLPJ@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6@| DCB "-"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "T", 0x0, "e", 0x0, "m", 0x0, "p", 0x0, "e"
	DCB	0x0, "r", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "e"
	DCB	0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "h"
	DCB	0x0, "o", 0x0, "l", 0x0, "d", 0x0, "(", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LE@IPFNIBOB@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAh?$AAB?$AAC@| DCB "+"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "T", 0x0, "e", 0x0, "m", 0x0, "p", 0x0, "e"
	DCB	0x0, "r", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "e"
	DCB	0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "h"
	DCB	0x0, "o", 0x0, "l", 0x0, "d", 0x0, "(", 0x0, "h", 0x0, "B"
	DCB	0x0, "C", 0x0, "I", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "f"
	DCB	0x0, "f", 0x0, "M", 0x0, "a", 0x0, "s", 0x0, "k", 0x0, "="
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l"
	DCB	0x0, "d", 0x0, "H", 0x0, "i", 0x0, "g", 0x0, "h", 0x0, "="
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l"
	DCB	0x0, "d", 0x0, "L", 0x0, "o", 0x0, "w", 0x0, "=", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  02d6c			 AREA	 |.text|, CODE, ARM

  02d6c		 |BCI_SetTemperatureThreshold| PROC

; 1949 : {

  02d6c		 |$LN10@BCI_SetTem|
  02d6c	e1a0c00d	 mov         r12, sp
  02d70	e92d000f	 stmdb       sp!, {r0 - r3}
  02d74	e92d5000	 stmdb       sp!, {r12, lr}
  02d78	e24dd020	 sub         sp, sp, #0x20
  02d7c		 |$M45315|

; 1950 :     BOOL bSuccess = FALSE;

  02d7c	e3a03000	 mov         r3, #0
  02d80	e58d3008	 str         r3, [sp, #8]

; 1951 :     Device_t *pDevice = (Device_t*)hBCI;

  02d84	e59d3028	 ldr         r3, [sp, #0x28]
  02d88	e58d3004	 str         r3, [sp, #4]

; 1952 :     DEBUGMSG(ZONE_FUNCTION, (L"+BCI_SetTemperatureThreshold("
; 1953 :         L"hBCI=0x%08X, ffMask=%d, thresholdHigh=%d, thresholdLow=%d)\r\n",
; 1954 :         hBCI, ffMask, thresholdHigh, thresholdLow
; 1955 :         ));

  02d8c	e59f30c0	 ldr         r3, [pc, #0xC0]
  02d90	e5933440	 ldr         r3, [r3, #0x440]
  02d94	e3130080	 tst         r3, #0x80
  02d98	0a000009	 beq         |$LN4@BCI_SetTem|
  02d9c	e5dd3034	 ldrb        r3, [sp, #0x34]
  02da0	e58d3000	 str         r3, [sp]
  02da4	e5dd3030	 ldrb        r3, [sp, #0x30]
  02da8	e59d202c	 ldr         r2, [sp, #0x2C]
  02dac	e59d1028	 ldr         r1, [sp, #0x28]
  02db0	e59f00a0	 ldr         r0, [pc, #0xA0]
  02db4	eb000000	 bl          NKDbgPrintfW
  02db8	e3a03001	 mov         r3, #1
  02dbc	e58d3014	 str         r3, [sp, #0x14]
  02dc0	ea000001	 b           |$LN5@BCI_SetTem|
  02dc4		 |$LN4@BCI_SetTem|
  02dc4	e3a03000	 mov         r3, #0
  02dc8	e58d3014	 str         r3, [sp, #0x14]
  02dcc		 |$LN5@BCI_SetTem|

; 1956 : 
; 1957 :     // check for valid parameter
; 1958 :     if (pDevice == NULL) goto cleanUp;

  02dcc	e59d3004	 ldr         r3, [sp, #4]
  02dd0	e3530000	 cmp         r3, #0
  02dd4	1a000000	 bne         |$LN1@BCI_SetTem|
  02dd8	ea00000b	 b           |$cleanUp$44524|
  02ddc		 |$LN1@BCI_SetTem|

; 1959 : 
; 1960 :     EnterCriticalSection(&pDevice->cs);    

  02ddc	e59d0004	 ldr         r0, [sp, #4]
  02de0	eb000000	 bl          EnterCriticalSection

; 1961 :     bSuccess = SetTemperatureThreshold(pDevice, ffMask, 
; 1962 :                    thresholdHigh, thresholdLow
; 1963 :                    );

  02de4	e5dd3034	 ldrb        r3, [sp, #0x34]
  02de8	e5dd2030	 ldrb        r2, [sp, #0x30]
  02dec	e59d102c	 ldr         r1, [sp, #0x2C]
  02df0	e59d0004	 ldr         r0, [sp, #4]
  02df4	eb000000	 bl          SetTemperatureThreshold
  02df8	e58d0018	 str         r0, [sp, #0x18]
  02dfc	e59d3018	 ldr         r3, [sp, #0x18]
  02e00	e58d3008	 str         r3, [sp, #8]

; 1964 :     LeaveCriticalSection(&pDevice->cs);

  02e04	e59d0004	 ldr         r0, [sp, #4]
  02e08	eb000000	 bl          LeaveCriticalSection
  02e0c		 |$cleanUp$44524|

; 1965 : 
; 1966 : cleanUp:
; 1967 :     DEBUGMSG(ZONE_FUNCTION, (L"-BCI_SetTemperatureThreshold()\r\n"));

  02e0c	e59f3040	 ldr         r3, [pc, #0x40]
  02e10	e5933440	 ldr         r3, [r3, #0x440]
  02e14	e3130080	 tst         r3, #0x80
  02e18	0a000004	 beq         |$LN6@BCI_SetTem|
  02e1c	e59f002c	 ldr         r0, [pc, #0x2C]
  02e20	eb000000	 bl          NKDbgPrintfW
  02e24	e3a03001	 mov         r3, #1
  02e28	e58d301c	 str         r3, [sp, #0x1C]
  02e2c	ea000001	 b           |$LN7@BCI_SetTem|
  02e30		 |$LN6@BCI_SetTem|
  02e30	e3a03000	 mov         r3, #0
  02e34	e58d301c	 str         r3, [sp, #0x1C]
  02e38		 |$LN7@BCI_SetTem|

; 1968 :     return bSuccess;  

  02e38	e59d3008	 ldr         r3, [sp, #8]
  02e3c	e58d3010	 str         r3, [sp, #0x10]

; 1969 : 
; 1970 : }

  02e40	e59d0010	 ldr         r0, [sp, #0x10]
  02e44	e28dd020	 add         sp, sp, #0x20
  02e48	e89d6000	 ldmia       sp, {sp, lr}
  02e4c	e12fff1e	 bx          lr
  02e50		 |$LN11@BCI_SetTem|
  02e50		 |$LN12@BCI_SetTem|
  02e50	00000000	 DCD         |??_C@_1EC@LLLGCLPJ@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6@|
  02e54		 |$LN13@BCI_SetTem|
  02e54	00000000	 DCD         |dpCurSettings|
  02e58		 |$LN14@BCI_SetTem|
  02e58	00000000	 DCD         |??_C@_1LE@IPFNIBOB@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAh?$AAB?$AAC@|
  02e5c		 |$M45316|

			 ENDP  ; |BCI_SetTemperatureThreshold|

	EXPORT	|??_C@_1DK@GFNIHBDM@?$AA?9?$AAS?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LC@ONLGBIMK@?$AA?$CL?$AAS?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe@| [ DATA ] ; `string'

  000d0			 AREA	 |.pdata|, PDATA
|$T45333| DCD	|$LN14@SetTempera|
	DCD	0x40008b04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@GFNIHBDM@?$AA?9?$AAS?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "T", 0x0, "e", 0x0, "m"
	DCB	0x0, "p", 0x0, "e", 0x0, "r", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "r", 0x0, "e", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l", 0x0, "d", 0x0, "("
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LC@ONLGBIMK@?$AA?$CL?$AAS?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe@| DCB "+"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "T", 0x0, "e", 0x0, "m"
	DCB	0x0, "p", 0x0, "e", 0x0, "r", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "r", 0x0, "e", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l", 0x0, "d", 0x0, "("
	DCB	0x0, "p", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c"
	DCB	0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "f", 0x0, "f"
	DCB	0x0, "M", 0x0, "a", 0x0, "s", 0x0, "k", 0x0, "=", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l", 0x0, "d"
	DCB	0x0, "H", 0x0, "i", 0x0, "g", 0x0, "h", 0x0, "=", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l", 0x0, "d"
	DCB	0x0, "L", 0x0, "o", 0x0, "w", 0x0, "=", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  02e5c			 AREA	 |.text|, CODE, ARM

  02e5c		 |SetTemperatureThreshold| PROC

; 561  : {

  02e5c		 |$LN14@SetTempera|
  02e5c	e1a0c00d	 mov         r12, sp
  02e60	e92d000f	 stmdb       sp!, {r0 - r3}
  02e64	e92d5000	 stmdb       sp!, {r12, lr}
  02e68	e24dd020	 sub         sp, sp, #0x20
  02e6c		 |$M45330|

; 562  :     UINT8 data;
; 563  :     BOOL bResult = FALSE;

  02e6c	e3a03000	 mov         r3, #0
  02e70	e58d3004	 str         r3, [sp, #4]

; 564  :     DEBUGMSG(ZONE_FUNCTION, (L"+SetTemperatureThreshold("
; 565  :         L"pDevice=0x%08X, ffMask=%d, thresholdHigh=%d, thresholdLow=%d)\r\n",
; 566  :         pDevice, ffMask, thresholdHigh, thresholdLow
; 567  :         ));

  02e74	e59f3204	 ldr         r3, [pc, #0x204]
  02e78	e5933440	 ldr         r3, [r3, #0x440]
  02e7c	e3130080	 tst         r3, #0x80
  02e80	0a000009	 beq         |$LN8@SetTempera|
  02e84	e5dd3034	 ldrb        r3, [sp, #0x34]
  02e88	e58d3000	 str         r3, [sp]
  02e8c	e5dd3030	 ldrb        r3, [sp, #0x30]
  02e90	e59d202c	 ldr         r2, [sp, #0x2C]
  02e94	e59d1028	 ldr         r1, [sp, #0x28]
  02e98	e59f01e4	 ldr         r0, [pc, #0x1E4]
  02e9c	eb000000	 bl          NKDbgPrintfW
  02ea0	e3a03001	 mov         r3, #1
  02ea4	e58d3014	 str         r3, [sp, #0x14]
  02ea8	ea000001	 b           |$LN9@SetTempera|
  02eac		 |$LN8@SetTempera|
  02eac	e3a03000	 mov         r3, #0
  02eb0	e58d3014	 str         r3, [sp, #0x14]
  02eb4		 |$LN9@SetTempera|

; 568  : 
; 569  :     switch (ffMask)

  02eb4	e59d302c	 ldr         r3, [sp, #0x2C]
  02eb8	e58d3018	 str         r3, [sp, #0x18]
  02ebc	e59d3018	 ldr         r3, [sp, #0x18]
  02ec0	e3530001	 cmp         r3, #1
  02ec4	0a000003	 beq         |$LN3@SetTempera|
  02ec8	e59d3018	 ldr         r3, [sp, #0x18]
  02ecc	e3530002	 cmp         r3, #2
  02ed0	0a000027	 beq         |$LN2@SetTempera|
  02ed4	ea00004c	 b           |$LN4@SetTempera|
  02ed8		 |$LN3@SetTempera|

; 570  :         {
; 571  :         case BCI_TEMP_VBAT1:
; 572  :             // get access to BCIMFTH4
; 573  :             data = KEY_BCIMFTH4;

  02ed8	e3a030ea	 mov         r3, #0xEA
  02edc	e5cd3008	 strb        r3, [sp, #8]

; 574  :             TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  02ee0	e3a03001	 mov         r3, #1
  02ee4	e28d2008	 add         r2, sp, #8
  02ee8	e3a01802	 mov         r1, #2, 16
  02eec	e3811085	 orr         r1, r1, #0x85
  02ef0	e59d0028	 ldr         r0, [sp, #0x28]
  02ef4	e2800018	 add         r0, r0, #0x18
  02ef8	e5900000	 ldr         r0, [r0]
  02efc	eb000000	 bl          TWLWriteRegs

; 575  : 
; 576  :             TWLWriteRegs(pDevice->hTwl, TWL_BCIMFTH4, 
; 577  :                 &thresholdLow, 1
; 578  :                 );

  02f00	e3a03001	 mov         r3, #1
  02f04	e28d2034	 add         r2, sp, #0x34
  02f08	e3a01802	 mov         r1, #2, 16
  02f0c	e381108d	 orr         r1, r1, #0x8D
  02f10	e59d0028	 ldr         r0, [sp, #0x28]
  02f14	e2800018	 add         r0, r0, #0x18
  02f18	e5900000	 ldr         r0, [r0]
  02f1c	eb000000	 bl          TWLWriteRegs

; 579  :             
; 580  :             // get access to BCIMFTH5
; 581  :             data = KEY_BCIMFTH5;

  02f20	e3a030c4	 mov         r3, #0xC4
  02f24	e5cd3008	 strb        r3, [sp, #8]

; 582  :             TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  02f28	e3a03001	 mov         r3, #1
  02f2c	e28d2008	 add         r2, sp, #8
  02f30	e3a01802	 mov         r1, #2, 16
  02f34	e3811085	 orr         r1, r1, #0x85
  02f38	e59d0028	 ldr         r0, [sp, #0x28]
  02f3c	e2800018	 add         r0, r0, #0x18
  02f40	e5900000	 ldr         r0, [r0]
  02f44	eb000000	 bl          TWLWriteRegs

; 583  : 
; 584  :             TWLWriteRegs(pDevice->hTwl, TWL_BCIMFTH5, 
; 585  :                 &thresholdHigh, 1
; 586  :                 );            

  02f48	e3a03001	 mov         r3, #1
  02f4c	e28d2030	 add         r2, sp, #0x30
  02f50	e3a01802	 mov         r1, #2, 16
  02f54	e381108e	 orr         r1, r1, #0x8E
  02f58	e59d0028	 ldr         r0, [sp, #0x28]
  02f5c	e2800018	 add         r0, r0, #0x18
  02f60	e5900000	 ldr         r0, [r0]
  02f64	eb000000	 bl          TWLWriteRegs

; 587  :             bResult = TRUE;

  02f68	e3a03001	 mov         r3, #1
  02f6c	e58d3004	 str         r3, [sp, #4]

; 588  :             break;

  02f70	ea000025	 b           |$LN4@SetTempera|
  02f74		 |$LN2@SetTempera|

; 589  : 
; 590  :         case BCI_TEMP_VBAT2:
; 591  :             // get access to BCIMFTH6
; 592  :             data = KEY_BCIMFTH6;

  02f74	e3a030bc	 mov         r3, #0xBC
  02f78	e5cd3008	 strb        r3, [sp, #8]

; 593  :             TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  02f7c	e3a03001	 mov         r3, #1
  02f80	e28d2008	 add         r2, sp, #8
  02f84	e3a01802	 mov         r1, #2, 16
  02f88	e3811085	 orr         r1, r1, #0x85
  02f8c	e59d0028	 ldr         r0, [sp, #0x28]
  02f90	e2800018	 add         r0, r0, #0x18
  02f94	e5900000	 ldr         r0, [r0]
  02f98	eb000000	 bl          TWLWriteRegs

; 594  : 
; 595  :             TWLWriteRegs(pDevice->hTwl, TWL_BCIMFTH6, 
; 596  :                 &thresholdLow, 1
; 597  :                 );

  02f9c	e3a03001	 mov         r3, #1
  02fa0	e28d2034	 add         r2, sp, #0x34
  02fa4	e3a01802	 mov         r1, #2, 16
  02fa8	e381108f	 orr         r1, r1, #0x8F
  02fac	e59d0028	 ldr         r0, [sp, #0x28]
  02fb0	e2800018	 add         r0, r0, #0x18
  02fb4	e5900000	 ldr         r0, [r0]
  02fb8	eb000000	 bl          TWLWriteRegs

; 598  : 
; 599  :             // get access to BCIMFTH7
; 600  :             data = KEY_BCIMFTH7;

  02fbc	e3a030c3	 mov         r3, #0xC3
  02fc0	e5cd3008	 strb        r3, [sp, #8]

; 601  :             TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  02fc4	e3a03001	 mov         r3, #1
  02fc8	e28d2008	 add         r2, sp, #8
  02fcc	e3a01802	 mov         r1, #2, 16
  02fd0	e3811085	 orr         r1, r1, #0x85
  02fd4	e59d0028	 ldr         r0, [sp, #0x28]
  02fd8	e2800018	 add         r0, r0, #0x18
  02fdc	e5900000	 ldr         r0, [r0]
  02fe0	eb000000	 bl          TWLWriteRegs

; 602  : 
; 603  :             TWLWriteRegs(pDevice->hTwl, TWL_BCIMFTH7, 
; 604  :                 &thresholdHigh, 1
; 605  :                 );  

  02fe4	e3a03001	 mov         r3, #1
  02fe8	e28d2030	 add         r2, sp, #0x30
  02fec	e3a01802	 mov         r1, #2, 16
  02ff0	e3811090	 orr         r1, r1, #0x90
  02ff4	e59d0028	 ldr         r0, [sp, #0x28]
  02ff8	e2800018	 add         r0, r0, #0x18
  02ffc	e5900000	 ldr         r0, [r0]
  03000	eb000000	 bl          TWLWriteRegs

; 606  :             bResult = TRUE;

  03004	e3a03001	 mov         r3, #1
  03008	e58d3004	 str         r3, [sp, #4]
  0300c		 |$LN4@SetTempera|

; 607  :             break;            
; 608  :         }
; 609  : 
; 610  :     if (bResult != FALSE)

  0300c	e59d3004	 ldr         r3, [sp, #4]
  03010	e3530000	 cmp         r3, #0
  03014	0a000007	 beq         |$LN1@SetTempera|

; 611  :         {
; 612  :         TWLWriteRegs(pDevice->hTwl, TWL_BCIMFTH3, &data, 1);

  03018	e3a03001	 mov         r3, #1
  0301c	e28d2008	 add         r2, sp, #8
  03020	e3a01802	 mov         r1, #2, 16
  03024	e381108c	 orr         r1, r1, #0x8C
  03028	e59d0028	 ldr         r0, [sp, #0x28]
  0302c	e2800018	 add         r0, r0, #0x18
  03030	e5900000	 ldr         r0, [r0]
  03034	eb000000	 bl          TWLWriteRegs
  03038		 |$LN1@SetTempera|

; 613  :         }
; 614  : 
; 615  :     DEBUGMSG(ZONE_FUNCTION, (L"-SetTemperatureThreshold()\r\n"));

  03038	e59f3040	 ldr         r3, [pc, #0x40]
  0303c	e5933440	 ldr         r3, [r3, #0x440]
  03040	e3130080	 tst         r3, #0x80
  03044	0a000004	 beq         |$LN10@SetTempera|
  03048	e59f002c	 ldr         r0, [pc, #0x2C]
  0304c	eb000000	 bl          NKDbgPrintfW
  03050	e3a03001	 mov         r3, #1
  03054	e58d301c	 str         r3, [sp, #0x1C]
  03058	ea000001	 b           |$LN11@SetTempera|
  0305c		 |$LN10@SetTempera|
  0305c	e3a03000	 mov         r3, #0
  03060	e58d301c	 str         r3, [sp, #0x1C]
  03064		 |$LN11@SetTempera|

; 616  :     return bResult;    

  03064	e59d3004	 ldr         r3, [sp, #4]
  03068	e58d3010	 str         r3, [sp, #0x10]

; 617  : }

  0306c	e59d0010	 ldr         r0, [sp, #0x10]
  03070	e28dd020	 add         sp, sp, #0x20
  03074	e89d6000	 ldmia       sp, {sp, lr}
  03078	e12fff1e	 bx          lr
  0307c		 |$LN15@SetTempera|
  0307c		 |$LN16@SetTempera|
  0307c	00000000	 DCD         |??_C@_1DK@GFNIHBDM@?$AA?9?$AAS?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  03080		 |$LN17@SetTempera|
  03080	00000000	 DCD         |dpCurSettings|
  03084		 |$LN18@SetTempera|
  03084	00000000	 DCD         |??_C@_1LC@ONLGBIMK@?$AA?$CL?$AAS?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe@|
  03088		 |$M45331|

			 ENDP  ; |SetTemperatureThreshold|

	EXPORT	|??_C@_1EA@GHGPDAHG@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IG@NKLPKCNL@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAh?$AAB?$AAC?$AAI@| [ DATA ] ; `string'
	EXPORT	|BCI_SetTemperatureMonitors|

  000d8			 AREA	 |.pdata|, PDATA
|$T45347| DCD	|$LN10@BCI_SetTem@2|
	DCD	0x40003904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@GHGPDAHG@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "T", 0x0, "e", 0x0, "m", 0x0, "p", 0x0, "e"
	DCB	0x0, "r", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "e"
	DCB	0x0, "M", 0x0, "o", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "o"
	DCB	0x0, "r", 0x0, "s", 0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IG@NKLPKCNL@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAh?$AAB?$AAC?$AAI@| DCB "+"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "T", 0x0, "e", 0x0, "m", 0x0, "p", 0x0, "e"
	DCB	0x0, "r", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "e"
	DCB	0x0, "M", 0x0, "o", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "o"
	DCB	0x0, "r", 0x0, "s", 0x0, "(", 0x0, "h", 0x0, "B", 0x0, "C"
	DCB	0x0, "I", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "f", 0x0, "f"
	DCB	0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, "=", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "f"
	DCB	0x0, "f", 0x0, "M", 0x0, "a", 0x0, "s", 0x0, "k", 0x0, "="
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  03088			 AREA	 |.text|, CODE, ARM

  03088		 |BCI_SetTemperatureMonitors| PROC

; 1984 : {

  03088		 |$LN10@BCI_SetTem@2|
  03088	e1a0c00d	 mov         r12, sp
  0308c	e92d0007	 stmdb       sp!, {r0 - r2}
  03090	e92d5000	 stmdb       sp!, {r12, lr}
  03094	e24dd018	 sub         sp, sp, #0x18
  03098		 |$M45344|

; 1985 :     BOOL bSuccess = FALSE;

  03098	e3a03000	 mov         r3, #0
  0309c	e58d3004	 str         r3, [sp, #4]

; 1986 :     Device_t *pDevice = (Device_t*)hBCI;

  030a0	e59d3020	 ldr         r3, [sp, #0x20]
  030a4	e58d3000	 str         r3, [sp]

; 1987 :     DEBUGMSG(ZONE_FUNCTION, (L"+BCI_SetTemperatureMonitors("
; 1988 :         L"hBCI=0x%08X, ffEnable=%d, ffMask=%d)\r\n",
; 1989 :         hBCI, ffEnable, ffMask
; 1990 :         ));

  030a8	e59f30b4	 ldr         r3, [pc, #0xB4]
  030ac	e5933440	 ldr         r3, [r3, #0x440]
  030b0	e3130080	 tst         r3, #0x80
  030b4	0a000007	 beq         |$LN4@BCI_SetTem@2|
  030b8	e59d3028	 ldr         r3, [sp, #0x28]
  030bc	e59d2024	 ldr         r2, [sp, #0x24]
  030c0	e59d1020	 ldr         r1, [sp, #0x20]
  030c4	e59f009c	 ldr         r0, [pc, #0x9C]
  030c8	eb000000	 bl          NKDbgPrintfW
  030cc	e3a03001	 mov         r3, #1
  030d0	e58d300c	 str         r3, [sp, #0xC]
  030d4	ea000001	 b           |$LN5@BCI_SetTem@2|
  030d8		 |$LN4@BCI_SetTem@2|
  030d8	e3a03000	 mov         r3, #0
  030dc	e58d300c	 str         r3, [sp, #0xC]
  030e0		 |$LN5@BCI_SetTem@2|

; 1991 : 
; 1992 :     // check for valid parameter
; 1993 :     if (pDevice == NULL) goto cleanUp;

  030e0	e59d3000	 ldr         r3, [sp]
  030e4	e3530000	 cmp         r3, #0
  030e8	1a000000	 bne         |$LN1@BCI_SetTem@2|
  030ec	ea00000a	 b           |$cleanUp$44541|
  030f0		 |$LN1@BCI_SetTem@2|

; 1994 : 
; 1995 :     EnterCriticalSection(&pDevice->cs);    

  030f0	e59d0000	 ldr         r0, [sp]
  030f4	eb000000	 bl          EnterCriticalSection

; 1996 :     bSuccess = SetTemperatureMonitors(pDevice, ffEnable, ffMask);

  030f8	e59d2028	 ldr         r2, [sp, #0x28]
  030fc	e59d1024	 ldr         r1, [sp, #0x24]
  03100	e59d0000	 ldr         r0, [sp]
  03104	eb000000	 bl          SetTemperatureMonitors
  03108	e58d0010	 str         r0, [sp, #0x10]
  0310c	e59d3010	 ldr         r3, [sp, #0x10]
  03110	e58d3004	 str         r3, [sp, #4]

; 1997 :     LeaveCriticalSection(&pDevice->cs);

  03114	e59d0000	 ldr         r0, [sp]
  03118	eb000000	 bl          LeaveCriticalSection
  0311c		 |$cleanUp$44541|

; 1998 : 
; 1999 : cleanUp:            
; 2000 :     DEBUGMSG(ZONE_FUNCTION, (L"-BCI_SetTemperatureMonitors()\r\n"));

  0311c	e59f3040	 ldr         r3, [pc, #0x40]
  03120	e5933440	 ldr         r3, [r3, #0x440]
  03124	e3130080	 tst         r3, #0x80
  03128	0a000004	 beq         |$LN6@BCI_SetTem@2|
  0312c	e59f002c	 ldr         r0, [pc, #0x2C]
  03130	eb000000	 bl          NKDbgPrintfW
  03134	e3a03001	 mov         r3, #1
  03138	e58d3014	 str         r3, [sp, #0x14]
  0313c	ea000001	 b           |$LN7@BCI_SetTem@2|
  03140		 |$LN6@BCI_SetTem@2|
  03140	e3a03000	 mov         r3, #0
  03144	e58d3014	 str         r3, [sp, #0x14]
  03148		 |$LN7@BCI_SetTem@2|

; 2001 :     return bSuccess;

  03148	e59d3004	 ldr         r3, [sp, #4]
  0314c	e58d3008	 str         r3, [sp, #8]

; 2002 : }

  03150	e59d0008	 ldr         r0, [sp, #8]
  03154	e28dd018	 add         sp, sp, #0x18
  03158	e89d6000	 ldmia       sp, {sp, lr}
  0315c	e12fff1e	 bx          lr
  03160		 |$LN11@BCI_SetTem@2|
  03160		 |$LN12@BCI_SetTem@2|
  03160	00000000	 DCD         |??_C@_1EA@GHGPDAHG@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  03164		 |$LN13@BCI_SetTem@2|
  03164	00000000	 DCD         |dpCurSettings|
  03168		 |$LN14@BCI_SetTem@2|
  03168	00000000	 DCD         |??_C@_1IG@NKLPKCNL@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAh?$AAB?$AAC?$AAI@|
  0316c		 |$M45345|

			 ENDP  ; |BCI_SetTemperatureMonitors|

	EXPORT	|??_C@_1DI@OIJIMKMC@?$AA?9?$AAS?$AAe?$AAt?$AAO?$AAv?$AAe?$AAr?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IE@MPKEHLNK@?$AA?$CL?$AAS?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN@| [ DATA ] ; `string'

  000e0			 AREA	 |.pdata|, PDATA
|$T45365| DCD	|$LN15@SetTempera@2|
	DCD	0x40006804

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@OIJIMKMC@?$AA?9?$AAS?$AAe?$AAt?$AAO?$AAv?$AAe?$AAr?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "O", 0x0, "v", 0x0, "e"
	DCB	0x0, "r", 0x0, "V", 0x0, "o", 0x0, "l", 0x0, "t", 0x0, "a"
	DCB	0x0, "g", 0x0, "e", 0x0, "M", 0x0, "o", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "o", 0x0, "r", 0x0, "s", 0x0, "(", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@MPKEHLNK@?$AA?$CL?$AAS?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN@| DCB "+"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "T", 0x0, "e", 0x0, "m"
	DCB	0x0, "p", 0x0, "e", 0x0, "r", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "r", 0x0, "e", 0x0, "M", 0x0, "o", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "o", 0x0, "r", 0x0, "s", 0x0, "(", 0x0, "p"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, ",", 0x0, " ", 0x0, "f", 0x0, "f", 0x0, "E"
	DCB	0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, "="
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "f", 0x0, "f"
	DCB	0x0, "M", 0x0, "a", 0x0, "s", 0x0, "k", 0x0, "=", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  0316c			 AREA	 |.text|, CODE, ARM

  0316c		 |SetTemperatureMonitors| PROC

; 780  : {

  0316c		 |$LN15@SetTempera@2|
  0316c	e1a0c00d	 mov         r12, sp
  03170	e92d0007	 stmdb       sp!, {r0 - r2}
  03174	e92d5000	 stmdb       sp!, {r12, lr}
  03178	e24dd01c	 sub         sp, sp, #0x1C
  0317c		 |$M45362|

; 781  :     UINT8 data;
; 782  :     BOOL bResult = FALSE;

  0317c	e3a03000	 mov         r3, #0
  03180	e58d3000	 str         r3, [sp]

; 783  :     DEBUGMSG(ZONE_FUNCTION, (L"+SetTemperatureMonitors("
; 784  :         L"pDevice=0x%08X, ffEnable=%d, ffMask=%d)\r\n",
; 785  :         pDevice, ffEnable, ffMask
; 786  :         ));

  03184	e59f3178	 ldr         r3, [pc, #0x178]
  03188	e5933440	 ldr         r3, [r3, #0x440]
  0318c	e3130080	 tst         r3, #0x80
  03190	0a000007	 beq         |$LN5@SetTempera@2|
  03194	e59d302c	 ldr         r3, [sp, #0x2C]
  03198	e59d2028	 ldr         r2, [sp, #0x28]
  0319c	e59d1024	 ldr         r1, [sp, #0x24]
  031a0	e59f0160	 ldr         r0, [pc, #0x160]
  031a4	eb000000	 bl          NKDbgPrintfW
  031a8	e3a03001	 mov         r3, #1
  031ac	e58d300c	 str         r3, [sp, #0xC]
  031b0	ea000001	 b           |$LN6@SetTempera@2|
  031b4		 |$LN5@SetTempera@2|
  031b4	e3a03000	 mov         r3, #0
  031b8	e58d300c	 str         r3, [sp, #0xC]
  031bc		 |$LN6@SetTempera@2|

; 787  : 
; 788  :     // get access to BCIMFEN2
; 789  :     data = KEY_BCIMFEN2;

  031bc	e3a03073	 mov         r3, #0x73
  031c0	e5cd3004	 strb        r3, [sp, #4]

; 790  :     TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  031c4	e3a03001	 mov         r3, #1
  031c8	e28d2004	 add         r2, sp, #4
  031cc	e3a01802	 mov         r1, #2, 16
  031d0	e3811085	 orr         r1, r1, #0x85
  031d4	e59d0024	 ldr         r0, [sp, #0x24]
  031d8	e2800018	 add         r0, r0, #0x18
  031dc	e5900000	 ldr         r0, [r0]
  031e0	eb000000	 bl          TWLWriteRegs

; 791  : 
; 792  :     // update over-charge monitors
; 793  :     TWLReadRegs(pDevice->hTwl, TWL_BCIMFEN2, &data, 1);

  031e4	e3a03001	 mov         r3, #1
  031e8	e28d2004	 add         r2, sp, #4
  031ec	e3a01802	 mov         r1, #2, 16
  031f0	e3811087	 orr         r1, r1, #0x87
  031f4	e59d0024	 ldr         r0, [sp, #0x24]
  031f8	e2800018	 add         r0, r0, #0x18
  031fc	e5900000	 ldr         r0, [r0]
  03200	eb000000	 bl          TWLReadRegs

; 794  :     if (ffMask & BCI_TEMP_VBAT1)

  03204	e59d302c	 ldr         r3, [sp, #0x2C]
  03208	e3130001	 tst         r3, #1
  0320c	0a00000e	 beq         |$LN2@SetTempera@2|

; 795  :         {
; 796  :         data = (ffEnable & BCI_TEMP_VBAT1) ? (data | TBATOR1EN) :
; 797  :                                              (data & ~TBATOR1EN);

  03210	e59d3028	 ldr         r3, [sp, #0x28]
  03214	e3130001	 tst         r3, #1
  03218	0a000003	 beq         |$LN7@SetTempera@2|
  0321c	e5dd3004	 ldrb        r3, [sp, #4]
  03220	e3833008	 orr         r3, r3, #8
  03224	e58d3010	 str         r3, [sp, #0x10]
  03228	ea000004	 b           |$LN8@SetTempera@2|
  0322c		 |$LN7@SetTempera@2|
  0322c	e5dd3004	 ldrb        r3, [sp, #4]
  03230	e1a02003	 mov         r2, r3
  03234	e3e03008	 mvn         r3, #8
  03238	e0023003	 and         r3, r2, r3
  0323c	e58d3010	 str         r3, [sp, #0x10]
  03240		 |$LN8@SetTempera@2|
  03240	e59d3010	 ldr         r3, [sp, #0x10]
  03244	e20330ff	 and         r3, r3, #0xFF
  03248	e5cd3004	 strb        r3, [sp, #4]
  0324c		 |$LN2@SetTempera@2|

; 798  :         }
; 799  : 
; 800  :     if (ffMask & BCI_TEMP_VBAT2)

  0324c	e59d302c	 ldr         r3, [sp, #0x2C]
  03250	e3130002	 tst         r3, #2
  03254	0a00000e	 beq         |$LN1@SetTempera@2|

; 801  :         {
; 802  :         data = (ffEnable & BCI_TEMP_VBAT2) ? (data | TBATOR2EN) :
; 803  :                                              (data & ~TBATOR2EN);

  03258	e59d3028	 ldr         r3, [sp, #0x28]
  0325c	e3130002	 tst         r3, #2
  03260	0a000003	 beq         |$LN9@SetTempera@2|
  03264	e5dd3004	 ldrb        r3, [sp, #4]
  03268	e3833002	 orr         r3, r3, #2
  0326c	e58d3014	 str         r3, [sp, #0x14]
  03270	ea000004	 b           |$LN10@SetTempera@2|
  03274		 |$LN9@SetTempera@2|
  03274	e5dd3004	 ldrb        r3, [sp, #4]
  03278	e1a02003	 mov         r2, r3
  0327c	e3e03002	 mvn         r3, #2
  03280	e0023003	 and         r3, r2, r3
  03284	e58d3014	 str         r3, [sp, #0x14]
  03288		 |$LN10@SetTempera@2|
  03288	e59d3014	 ldr         r3, [sp, #0x14]
  0328c	e20330ff	 and         r3, r3, #0xFF
  03290	e5cd3004	 strb        r3, [sp, #4]
  03294		 |$LN1@SetTempera@2|

; 804  :         }
; 805  :         
; 806  :     TWLWriteRegs(pDevice->hTwl, TWL_BCIMFEN2, &data, 1);

  03294	e3a03001	 mov         r3, #1
  03298	e28d2004	 add         r2, sp, #4
  0329c	e3a01802	 mov         r1, #2, 16
  032a0	e3811087	 orr         r1, r1, #0x87
  032a4	e59d0024	 ldr         r0, [sp, #0x24]
  032a8	e2800018	 add         r0, r0, #0x18
  032ac	e5900000	 ldr         r0, [r0]
  032b0	eb000000	 bl          TWLWriteRegs

; 807  : 
; 808  :     bResult = TRUE;

  032b4	e3a03001	 mov         r3, #1
  032b8	e58d3000	 str         r3, [sp]

; 809  :             
; 810  :     DEBUGMSG(ZONE_FUNCTION, (L"-SetOverVoltageMonitors()\r\n"));

  032bc	e59f3040	 ldr         r3, [pc, #0x40]
  032c0	e5933440	 ldr         r3, [r3, #0x440]
  032c4	e3130080	 tst         r3, #0x80
  032c8	0a000004	 beq         |$LN11@SetTempera@2|
  032cc	e59f002c	 ldr         r0, [pc, #0x2C]
  032d0	eb000000	 bl          NKDbgPrintfW
  032d4	e3a03001	 mov         r3, #1
  032d8	e58d3018	 str         r3, [sp, #0x18]
  032dc	ea000001	 b           |$LN12@SetTempera@2|
  032e0		 |$LN11@SetTempera@2|
  032e0	e3a03000	 mov         r3, #0
  032e4	e58d3018	 str         r3, [sp, #0x18]
  032e8		 |$LN12@SetTempera@2|

; 811  :     return bResult;

  032e8	e59d3000	 ldr         r3, [sp]
  032ec	e58d3008	 str         r3, [sp, #8]

; 812  : }

  032f0	e59d0008	 ldr         r0, [sp, #8]
  032f4	e28dd01c	 add         sp, sp, #0x1C
  032f8	e89d6000	 ldmia       sp, {sp, lr}
  032fc	e12fff1e	 bx          lr
  03300		 |$LN16@SetTempera@2|
  03300		 |$LN17@SetTempera@2|
  03300	00000000	 DCD         |??_C@_1DI@OIJIMKMC@?$AA?9?$AAS?$AAe?$AAt?$AAO?$AAv?$AAe?$AAr?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  03304		 |$LN18@SetTempera@2|
  03304	00000000	 DCD         |dpCurSettings|
  03308		 |$LN19@SetTempera@2|
  03308	00000000	 DCD         |??_C@_1IE@MPKEHLNK@?$AA?$CL?$AAS?$AAe?$AAt?$AAT?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN@|
  0330c		 |$M45363|

			 ENDP  ; |SetTemperatureMonitors|

	EXPORT	|??_C@_1DK@EONIDFNE@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@LAPGKANP@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe@| [ DATA ] ; `string'
	EXPORT	|BCI_GetCurrentThreshold|

  000e8			 AREA	 |.pdata|, PDATA
|$T45379| DCD	|$LN10@BCI_GetCur|
	DCD	0x40003704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@EONIDFNE@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "e"
	DCB	0x0, "t", 0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l", 0x0, "d", 0x0, "("
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@LAPGKANP@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe@| DCB "+"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "e"
	DCB	0x0, "t", 0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l", 0x0, "d", 0x0, "("
	DCB	0x0, "p", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c"
	DCB	0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "f", 0x0, "f"
	DCB	0x0, "M", 0x0, "a", 0x0, "s", 0x0, "k", 0x0, "=", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  0330c			 AREA	 |.text|, CODE, ARM

  0330c		 |BCI_GetCurrentThreshold| PROC

; 2015 : {

  0330c		 |$LN10@BCI_GetCur|
  0330c	e1a0c00d	 mov         r12, sp
  03310	e92d0003	 stmdb       sp!, {r0, r1}
  03314	e92d5000	 stmdb       sp!, {r12, lr}
  03318	e24dd018	 sub         sp, sp, #0x18
  0331c		 |$M45376|

; 2016 :     UINT8 Result = 0;

  0331c	e3a03000	 mov         r3, #0
  03320	e5cd3004	 strb        r3, [sp, #4]

; 2017 :     Device_t *pDevice = (Device_t*)hBCI;

  03324	e59d3020	 ldr         r3, [sp, #0x20]
  03328	e58d3000	 str         r3, [sp]

; 2018 :     DEBUGMSG(ZONE_FUNCTION, (L"+BCI_GetCurrentThreshold("
; 2019 :         L"pDevice=0x%08X, ffMask=%d)\r\n",
; 2020 :         pDevice, ffMasks
; 2021 :         ));

  0332c	e59f30ac	 ldr         r3, [pc, #0xAC]
  03330	e5933440	 ldr         r3, [r3, #0x440]
  03334	e3130080	 tst         r3, #0x80
  03338	0a000006	 beq         |$LN4@BCI_GetCur|
  0333c	e59d2024	 ldr         r2, [sp, #0x24]
  03340	e59d1000	 ldr         r1, [sp]
  03344	e59f0098	 ldr         r0, [pc, #0x98]
  03348	eb000000	 bl          NKDbgPrintfW
  0334c	e3a03001	 mov         r3, #1
  03350	e58d300c	 str         r3, [sp, #0xC]
  03354	ea000001	 b           |$LN5@BCI_GetCur|
  03358		 |$LN4@BCI_GetCur|
  03358	e3a03000	 mov         r3, #0
  0335c	e58d300c	 str         r3, [sp, #0xC]
  03360		 |$LN5@BCI_GetCur|

; 2022 : 
; 2023 :     // check for valid parameter
; 2024 :     if (pDevice == NULL) goto cleanUp;

  03360	e59d3000	 ldr         r3, [sp]
  03364	e3530000	 cmp         r3, #0
  03368	1a000000	 bne         |$LN1@BCI_GetCur|
  0336c	ea000009	 b           |$cleanUp$44556|
  03370		 |$LN1@BCI_GetCur|

; 2025 : 
; 2026 :     EnterCriticalSection(&pDevice->cs);    

  03370	e59d0000	 ldr         r0, [sp]
  03374	eb000000	 bl          EnterCriticalSection

; 2027 :     Result = GetCurrentThreshold(pDevice, ffMasks);

  03378	e59d1024	 ldr         r1, [sp, #0x24]
  0337c	e59d0000	 ldr         r0, [sp]
  03380	eb000000	 bl          GetCurrentThreshold
  03384	e5cd0010	 strb        r0, [sp, #0x10]
  03388	e5dd3010	 ldrb        r3, [sp, #0x10]
  0338c	e5cd3004	 strb        r3, [sp, #4]

; 2028 :     LeaveCriticalSection(&pDevice->cs);

  03390	e59d0000	 ldr         r0, [sp]
  03394	eb000000	 bl          LeaveCriticalSection
  03398		 |$cleanUp$44556|

; 2029 : 
; 2030 : cleanUp:
; 2031 :     DEBUGMSG(ZONE_FUNCTION, (L"-BCI_GetCurrentThreshold()\r\n"));

  03398	e59f3040	 ldr         r3, [pc, #0x40]
  0339c	e5933440	 ldr         r3, [r3, #0x440]
  033a0	e3130080	 tst         r3, #0x80
  033a4	0a000004	 beq         |$LN6@BCI_GetCur|
  033a8	e59f002c	 ldr         r0, [pc, #0x2C]
  033ac	eb000000	 bl          NKDbgPrintfW
  033b0	e3a03001	 mov         r3, #1
  033b4	e58d3014	 str         r3, [sp, #0x14]
  033b8	ea000001	 b           |$LN7@BCI_GetCur|
  033bc		 |$LN6@BCI_GetCur|
  033bc	e3a03000	 mov         r3, #0
  033c0	e58d3014	 str         r3, [sp, #0x14]
  033c4		 |$LN7@BCI_GetCur|

; 2032 :     return Result;    

  033c4	e5dd3004	 ldrb        r3, [sp, #4]
  033c8	e5cd3008	 strb        r3, [sp, #8]

; 2033 : }

  033cc	e5dd0008	 ldrb        r0, [sp, #8]
  033d0	e28dd018	 add         sp, sp, #0x18
  033d4	e89d6000	 ldmia       sp, {sp, lr}
  033d8	e12fff1e	 bx          lr
  033dc		 |$LN11@BCI_GetCur|
  033dc		 |$LN12@BCI_GetCur|
  033dc	00000000	 DCD         |??_C@_1DK@EONIDFNE@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  033e0		 |$LN13@BCI_GetCur|
  033e0	00000000	 DCD         |dpCurSettings|
  033e4		 |$LN14@BCI_GetCur|
  033e4	00000000	 DCD         |??_C@_1GM@LAPGKANP@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe@|
  033e8		 |$M45377|

			 ENDP  ; |BCI_GetCurrentThreshold|

	EXPORT	|??_C@_1DC@IBHFKLMM@?$AA?9?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@FJFBEJED@?$AA?$CL?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF@| [ DATA ] ; `string'

  000f0			 AREA	 |.pdata|, PDATA
|$T45393| DCD	|$LN13@GetCurrent|
	DCD	0x40007604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@IBHFKLMM@?$AA?9?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "G", 0x0, "e", 0x0, "t", 0x0, "C", 0x0, "u", 0x0, "r"
	DCB	0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "T", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l"
	DCB	0x0, "d", 0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@FJFBEJED@?$AA?$CL?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF@| DCB "+"
	DCB	0x0, "G", 0x0, "e", 0x0, "t", 0x0, "C", 0x0, "u", 0x0, "r"
	DCB	0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "T", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l"
	DCB	0x0, "d", 0x0, "(", 0x0, "p", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " "
	DCB	0x0, "f", 0x0, "f", 0x0, "M", 0x0, "a", 0x0, "s", 0x0, "k"
	DCB	0x0, "=", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  033e8			 AREA	 |.text|, CODE, ARM

  033e8		 |GetCurrentThreshold| PROC

; 337  : {

  033e8		 |$LN13@GetCurrent|
  033e8	e1a0c00d	 mov         r12, sp
  033ec	e92d0003	 stmdb       sp!, {r0, r1}
  033f0	e92d5000	 stmdb       sp!, {r12, lr}
  033f4	e24dd014	 sub         sp, sp, #0x14
  033f8		 |$M45390|

; 338  :     UINT8 data;
; 339  :     UINT8 threshold = 0;    

  033f8	e3a03000	 mov         r3, #0
  033fc	e5cd3000	 strb        r3, [sp]

; 340  :     DEBUGMSG(ZONE_FUNCTION, (L"+GetCurrentThreshold("
; 341  :         L"pDevice=0x%08X, ffMask=%d)\r\n",
; 342  :         pDevice, ffMask
; 343  :         ));

  03400	e59f31b0	 ldr         r3, [pc, #0x1B0]
  03404	e5933440	 ldr         r3, [r3, #0x440]
  03408	e3130080	 tst         r3, #0x80
  0340c	0a000006	 beq         |$LN7@GetCurrent|
  03410	e59d2020	 ldr         r2, [sp, #0x20]
  03414	e59d101c	 ldr         r1, [sp, #0x1C]
  03418	e59f019c	 ldr         r0, [pc, #0x19C]
  0341c	eb000000	 bl          NKDbgPrintfW
  03420	e3a03001	 mov         r3, #1
  03424	e58d3008	 str         r3, [sp, #8]
  03428	ea000001	 b           |$LN8@GetCurrent|
  0342c		 |$LN7@GetCurrent|
  0342c	e3a03000	 mov         r3, #0
  03430	e58d3008	 str         r3, [sp, #8]
  03434		 |$LN8@GetCurrent|

; 344  : 
; 345  :     switch (ffMask)

  03434	e59d3020	 ldr         r3, [sp, #0x20]
  03438	e58d300c	 str         r3, [sp, #0xC]
  0343c	e59d300c	 ldr         r3, [sp, #0xC]
  03440	e3530001	 cmp         r3, #1
  03444	0a000003	 beq         |$LN2@GetCurrent|
  03448	e59d300c	 ldr         r3, [sp, #0xC]
  0344c	e3530002	 cmp         r3, #2
  03450	0a00002f	 beq         |$LN1@GetCurrent|
  03454	ea000045	 b           |$LN3@GetCurrent|
  03458		 |$LN2@GetCurrent|

; 346  :         {
; 347  :         case BCI_OC_VBAT:
; 348  :             // get access to BCIMFTH8
; 349  :             data = KEY_BCIMFTH8;

  03458	e3a030f4	 mov         r3, #0xF4
  0345c	e5cd3001	 strb        r3, [sp, #1]

; 350  :             TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  03460	e3a03001	 mov         r3, #1
  03464	e28d2001	 add         r2, sp, #1
  03468	e3a01802	 mov         r1, #2, 16
  0346c	e3811085	 orr         r1, r1, #0x85
  03470	e59d001c	 ldr         r0, [sp, #0x1C]
  03474	e2800018	 add         r0, r0, #0x18
  03478	e5900000	 ldr         r0, [r0]
  0347c	eb000000	 bl          TWLWriteRegs

; 351  :             TWLReadRegs(pDevice->hTwl, TWL_BCIMFTH8, &data, 1);

  03480	e3a03001	 mov         r3, #1
  03484	e28d2001	 add         r2, sp, #1
  03488	e3a01802	 mov         r1, #2, 16
  0348c	e3811091	 orr         r1, r1, #0x91
  03490	e59d001c	 ldr         r0, [sp, #0x1C]
  03494	e2800018	 add         r0, r0, #0x18
  03498	e5900000	 ldr         r0, [r0]
  0349c	eb000000	 bl          TWLReadRegs

; 352  :             threshold = (data & 0x0F);

  034a0	e5dd3001	 ldrb        r3, [sp, #1]
  034a4	e203300f	 and         r3, r3, #0xF
  034a8	e20330ff	 and         r3, r3, #0xFF
  034ac	e5cd3000	 strb        r3, [sp]

; 353  :             
; 354  :             // get access to BCIMFTH9
; 355  :             data = KEY_BCIMFTH9;

  034b0	e3a030e7	 mov         r3, #0xE7
  034b4	e5cd3001	 strb        r3, [sp, #1]

; 356  :             TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  034b8	e3a03001	 mov         r3, #1
  034bc	e28d2001	 add         r2, sp, #1
  034c0	e3a01802	 mov         r1, #2, 16
  034c4	e3811085	 orr         r1, r1, #0x85
  034c8	e59d001c	 ldr         r0, [sp, #0x1C]
  034cc	e2800018	 add         r0, r0, #0x18
  034d0	e5900000	 ldr         r0, [r0]
  034d4	eb000000	 bl          TWLWriteRegs

; 357  :             TWLReadRegs(pDevice->hTwl, TWL_BCIMFTH9, &data, 1);

  034d8	e3a03001	 mov         r3, #1
  034dc	e28d2001	 add         r2, sp, #1
  034e0	e3a01802	 mov         r1, #2, 16
  034e4	e3811092	 orr         r1, r1, #0x92
  034e8	e59d001c	 ldr         r0, [sp, #0x1C]
  034ec	e2800018	 add         r0, r0, #0x18
  034f0	e5900000	 ldr         r0, [r0]
  034f4	eb000000	 bl          TWLReadRegs

; 358  :             threshold |= (data & 0xF0);            

  034f8	e5dd3001	 ldrb        r3, [sp, #1]
  034fc	e20320f0	 and         r2, r3, #0xF0
  03500	e5dd3000	 ldrb        r3, [sp]
  03504	e1833002	 orr         r3, r3, r2
  03508	e20330ff	 and         r3, r3, #0xFF
  0350c	e5cd3000	 strb        r3, [sp]

; 359  :             break;

  03510	ea000016	 b           |$LN3@GetCurrent|
  03514		 |$LN1@GetCurrent|

; 360  : 
; 361  :         case BCI_EOC_VBAT:
; 362  :             // get access to BCIMFTH6
; 363  :             data = KEY_BCIMFTH8;

  03514	e3a030f4	 mov         r3, #0xF4
  03518	e5cd3001	 strb        r3, [sp, #1]

; 364  :             TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  0351c	e3a03001	 mov         r3, #1
  03520	e28d2001	 add         r2, sp, #1
  03524	e3a01802	 mov         r1, #2, 16
  03528	e3811085	 orr         r1, r1, #0x85
  0352c	e59d001c	 ldr         r0, [sp, #0x1C]
  03530	e2800018	 add         r0, r0, #0x18
  03534	e5900000	 ldr         r0, [r0]
  03538	eb000000	 bl          TWLWriteRegs

; 365  :             TWLReadRegs(pDevice->hTwl, TWL_BCIMFTH8, &data, 1);

  0353c	e3a03001	 mov         r3, #1
  03540	e28d2001	 add         r2, sp, #1
  03544	e3a01802	 mov         r1, #2, 16
  03548	e3811091	 orr         r1, r1, #0x91
  0354c	e59d001c	 ldr         r0, [sp, #0x1C]
  03550	e2800018	 add         r0, r0, #0x18
  03554	e5900000	 ldr         r0, [r0]
  03558	eb000000	 bl          TWLReadRegs

; 366  :             threshold = (data & 0xF0) >> 4;

  0355c	e5dd3001	 ldrb        r3, [sp, #1]
  03560	e20330f0	 and         r3, r3, #0xF0
  03564	e1a03243	 mov         r3, r3, asr #4
  03568	e20330ff	 and         r3, r3, #0xFF
  0356c	e5cd3000	 strb        r3, [sp]
  03570		 |$LN3@GetCurrent|

; 367  :             break;            
; 368  :         }   
; 369  : 
; 370  :     DEBUGMSG(ZONE_FUNCTION, (L"-GetCurrentThreshold()\r\n"));

  03570	e59f3040	 ldr         r3, [pc, #0x40]
  03574	e5933440	 ldr         r3, [r3, #0x440]
  03578	e3130080	 tst         r3, #0x80
  0357c	0a000004	 beq         |$LN9@GetCurrent|
  03580	e59f002c	 ldr         r0, [pc, #0x2C]
  03584	eb000000	 bl          NKDbgPrintfW
  03588	e3a03001	 mov         r3, #1
  0358c	e58d3010	 str         r3, [sp, #0x10]
  03590	ea000001	 b           |$LN10@GetCurrent|
  03594		 |$LN9@GetCurrent|
  03594	e3a03000	 mov         r3, #0
  03598	e58d3010	 str         r3, [sp, #0x10]
  0359c		 |$LN10@GetCurrent|

; 371  :     return threshold;    

  0359c	e5dd3000	 ldrb        r3, [sp]
  035a0	e5cd3004	 strb        r3, [sp, #4]

; 372  : }

  035a4	e5dd0004	 ldrb        r0, [sp, #4]
  035a8	e28dd014	 add         sp, sp, #0x14
  035ac	e89d6000	 ldmia       sp, {sp, lr}
  035b0	e12fff1e	 bx          lr
  035b4		 |$LN14@GetCurrent|
  035b4		 |$LN15@GetCurrent|
  035b4	00000000	 DCD         |??_C@_1DC@IBHFKLMM@?$AA?9?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  035b8		 |$LN16@GetCurrent|
  035b8	00000000	 DCD         |dpCurSettings|
  035bc		 |$LN17@GetCurrent|
  035bc	00000000	 DCD         |??_C@_1GE@FJFBEJED@?$AA?$CL?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF@|
  035c0		 |$M45391|

			 ENDP  ; |GetCurrentThreshold|

	EXPORT	|??_C@_1DK@NFODEHOG@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IC@HBJCNCNJ@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAh?$AAB?$AAC?$AAI?$AA?$DN?$AA0?$AAx@| [ DATA ] ; `string'
	EXPORT	|BCI_SetCurrentThreshold|

  000f8			 AREA	 |.pdata|, PDATA
|$T45407| DCD	|$LN10@BCI_SetCur|
	DCD	0x40003904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@NFODEHOG@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l", 0x0, "d", 0x0, "("
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@HBJCNCNJ@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAh?$AAB?$AAC?$AAI?$AA?$DN?$AA0?$AAx@| DCB "+"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l", 0x0, "d", 0x0, "("
	DCB	0x0, "h", 0x0, "B", 0x0, "C", 0x0, "I", 0x0, "=", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ","
	DCB	0x0, " ", 0x0, "f", 0x0, "f", 0x0, "M", 0x0, "a", 0x0, "s"
	DCB	0x0, "k", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "t", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "h"
	DCB	0x0, "o", 0x0, "l", 0x0, "d", 0x0, "=", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  035c0			 AREA	 |.text|, CODE, ARM

  035c0		 |BCI_SetCurrentThreshold| PROC

; 2048 : {

  035c0		 |$LN10@BCI_SetCur|
  035c0	e1a0c00d	 mov         r12, sp
  035c4	e92d0007	 stmdb       sp!, {r0 - r2}
  035c8	e92d5000	 stmdb       sp!, {r12, lr}
  035cc	e24dd018	 sub         sp, sp, #0x18
  035d0		 |$M45404|

; 2049 :     BOOL bSuccess = FALSE;

  035d0	e3a03000	 mov         r3, #0
  035d4	e58d3004	 str         r3, [sp, #4]

; 2050 :     Device_t *pDevice = (Device_t*)hBCI;

  035d8	e59d3020	 ldr         r3, [sp, #0x20]
  035dc	e58d3000	 str         r3, [sp]

; 2051 :     DEBUGMSG(ZONE_FUNCTION, (L"+BCI_SetCurrentThreshold("
; 2052 :         L"hBCI=0x%08X, ffMask=%d, threshold=%d)\r\n",
; 2053 :         hBCI, ffMask, threshold
; 2054 :         ));

  035e0	e59f30b4	 ldr         r3, [pc, #0xB4]
  035e4	e5933440	 ldr         r3, [r3, #0x440]
  035e8	e3130080	 tst         r3, #0x80
  035ec	0a000007	 beq         |$LN4@BCI_SetCur|
  035f0	e5dd3028	 ldrb        r3, [sp, #0x28]
  035f4	e59d2024	 ldr         r2, [sp, #0x24]
  035f8	e59d1020	 ldr         r1, [sp, #0x20]
  035fc	e59f009c	 ldr         r0, [pc, #0x9C]
  03600	eb000000	 bl          NKDbgPrintfW
  03604	e3a03001	 mov         r3, #1
  03608	e58d300c	 str         r3, [sp, #0xC]
  0360c	ea000001	 b           |$LN5@BCI_SetCur|
  03610		 |$LN4@BCI_SetCur|
  03610	e3a03000	 mov         r3, #0
  03614	e58d300c	 str         r3, [sp, #0xC]
  03618		 |$LN5@BCI_SetCur|

; 2055 : 
; 2056 :     // check for valid parameter
; 2057 :     if (pDevice == NULL) goto cleanUp;

  03618	e59d3000	 ldr         r3, [sp]
  0361c	e3530000	 cmp         r3, #0
  03620	1a000000	 bne         |$LN1@BCI_SetCur|
  03624	ea00000a	 b           |$cleanUp$44573|
  03628		 |$LN1@BCI_SetCur|

; 2058 : 
; 2059 :     EnterCriticalSection(&pDevice->cs);    

  03628	e59d0000	 ldr         r0, [sp]
  0362c	eb000000	 bl          EnterCriticalSection

; 2060 :     bSuccess = SetCurrentThreshold(pDevice, ffMask, threshold);

  03630	e5dd2028	 ldrb        r2, [sp, #0x28]
  03634	e59d1024	 ldr         r1, [sp, #0x24]
  03638	e59d0000	 ldr         r0, [sp]
  0363c	eb000000	 bl          SetCurrentThreshold
  03640	e58d0010	 str         r0, [sp, #0x10]
  03644	e59d3010	 ldr         r3, [sp, #0x10]
  03648	e58d3004	 str         r3, [sp, #4]

; 2061 :     LeaveCriticalSection(&pDevice->cs);

  0364c	e59d0000	 ldr         r0, [sp]
  03650	eb000000	 bl          LeaveCriticalSection
  03654		 |$cleanUp$44573|

; 2062 : 
; 2063 : cleanUp:
; 2064 :     DEBUGMSG(ZONE_FUNCTION, (L"-BCI_SetCurrentThreshold()\r\n"));

  03654	e59f3040	 ldr         r3, [pc, #0x40]
  03658	e5933440	 ldr         r3, [r3, #0x440]
  0365c	e3130080	 tst         r3, #0x80
  03660	0a000004	 beq         |$LN6@BCI_SetCur|
  03664	e59f002c	 ldr         r0, [pc, #0x2C]
  03668	eb000000	 bl          NKDbgPrintfW
  0366c	e3a03001	 mov         r3, #1
  03670	e58d3014	 str         r3, [sp, #0x14]
  03674	ea000001	 b           |$LN7@BCI_SetCur|
  03678		 |$LN6@BCI_SetCur|
  03678	e3a03000	 mov         r3, #0
  0367c	e58d3014	 str         r3, [sp, #0x14]
  03680		 |$LN7@BCI_SetCur|

; 2065 :     return bSuccess;  

  03680	e59d3004	 ldr         r3, [sp, #4]
  03684	e58d3008	 str         r3, [sp, #8]

; 2066 : 
; 2067 : }

  03688	e59d0008	 ldr         r0, [sp, #8]
  0368c	e28dd018	 add         sp, sp, #0x18
  03690	e89d6000	 ldmia       sp, {sp, lr}
  03694	e12fff1e	 bx          lr
  03698		 |$LN11@BCI_SetCur|
  03698		 |$LN12@BCI_SetCur|
  03698	00000000	 DCD         |??_C@_1DK@NFODEHOG@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0369c		 |$LN13@BCI_SetCur|
  0369c	00000000	 DCD         |dpCurSettings|
  036a0		 |$LN14@BCI_SetCur|
  036a0	00000000	 DCD         |??_C@_1IC@HBJCNCNJ@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAh?$AAB?$AAC?$AAI?$AA?$DN?$AA0?$AAx@|
  036a4		 |$M45405|

			 ENDP  ; |BCI_SetCurrentThreshold|

	EXPORT	|??_C@_1DC@BKEONJPO@?$AA?9?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IA@CCIMPNCF@?$AA?$CL?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF@| [ DATA ] ; `string'

  00100			 AREA	 |.pdata|, PDATA
|$T45421| DCD	|$LN14@SetCurrent|
	DCD	0x4000a404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@BKEONJPO@?$AA?9?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "C", 0x0, "u", 0x0, "r"
	DCB	0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "T", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l"
	DCB	0x0, "d", 0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IA@CCIMPNCF@?$AA?$CL?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF@| DCB "+"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "C", 0x0, "u", 0x0, "r"
	DCB	0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "T", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "h", 0x0, "o", 0x0, "l"
	DCB	0x0, "d", 0x0, "(", 0x0, "p", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " "
	DCB	0x0, "f", 0x0, "f", 0x0, "M", 0x0, "a", 0x0, "s", 0x0, "k"
	DCB	0x0, "=", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "t"
	DCB	0x0, "h", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "h", 0x0, "o"
	DCB	0x0, "l", 0x0, "d", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  036a4			 AREA	 |.text|, CODE, ARM

  036a4		 |SetCurrentThreshold| PROC

; 498  : {

  036a4		 |$LN14@SetCurrent|
  036a4	e1a0c00d	 mov         r12, sp
  036a8	e92d0007	 stmdb       sp!, {r0 - r2}
  036ac	e92d5000	 stmdb       sp!, {r12, lr}
  036b0	e24dd018	 sub         sp, sp, #0x18
  036b4		 |$M45418|

; 499  :     UINT8 data;
; 500  :     BOOL bResult = FALSE;

  036b4	e3a03000	 mov         r3, #0
  036b8	e58d3000	 str         r3, [sp]

; 501  :     DEBUGMSG(ZONE_FUNCTION, (L"+SetCurrentThreshold("
; 502  :         L"pDevice=0x%08X, ffMask=%d, threshold=%d,\r\n",
; 503  :         pDevice, ffMask, threshold
; 504  :         ));

  036bc	e59f3268	 ldr         r3, [pc, #0x268]
  036c0	e5933440	 ldr         r3, [r3, #0x440]
  036c4	e3130080	 tst         r3, #0x80
  036c8	0a000007	 beq         |$LN8@SetCurrent|
  036cc	e5dd3028	 ldrb        r3, [sp, #0x28]
  036d0	e59d2024	 ldr         r2, [sp, #0x24]
  036d4	e59d1020	 ldr         r1, [sp, #0x20]
  036d8	e59f0250	 ldr         r0, [pc, #0x250]
  036dc	eb000000	 bl          NKDbgPrintfW
  036e0	e3a03001	 mov         r3, #1
  036e4	e58d300c	 str         r3, [sp, #0xC]
  036e8	ea000001	 b           |$LN9@SetCurrent|
  036ec		 |$LN8@SetCurrent|
  036ec	e3a03000	 mov         r3, #0
  036f0	e58d300c	 str         r3, [sp, #0xC]
  036f4		 |$LN9@SetCurrent|

; 505  : 
; 506  :     switch (ffMask)

  036f4	e59d3024	 ldr         r3, [sp, #0x24]
  036f8	e58d3010	 str         r3, [sp, #0x10]
  036fc	e59d3010	 ldr         r3, [sp, #0x10]
  03700	e3530001	 cmp         r3, #1
  03704	0a000003	 beq         |$LN3@SetCurrent|
  03708	e59d3010	 ldr         r3, [sp, #0x10]
  0370c	e3530002	 cmp         r3, #2
  03710	0a000045	 beq         |$LN2@SetCurrent|
  03714	ea000067	 b           |$LN4@SetCurrent|
  03718		 |$LN3@SetCurrent|

; 507  :         {
; 508  :         case BCI_OC_VBAT:
; 509  :             // get access to BCIMFTH8
; 510  :             data = KEY_BCIMFTH8;

  03718	e3a030f4	 mov         r3, #0xF4
  0371c	e5cd3004	 strb        r3, [sp, #4]

; 511  :             TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  03720	e3a03001	 mov         r3, #1
  03724	e28d2004	 add         r2, sp, #4
  03728	e3a01802	 mov         r1, #2, 16
  0372c	e3811085	 orr         r1, r1, #0x85
  03730	e59d0020	 ldr         r0, [sp, #0x20]
  03734	e2800018	 add         r0, r0, #0x18
  03738	e5900000	 ldr         r0, [r0]
  0373c	eb000000	 bl          TWLWriteRegs

; 512  :             TWLReadRegs(pDevice->hTwl, TWL_BCIMFTH8, &data, 1);

  03740	e3a03001	 mov         r3, #1
  03744	e28d2004	 add         r2, sp, #4
  03748	e3a01802	 mov         r1, #2, 16
  0374c	e3811091	 orr         r1, r1, #0x91
  03750	e59d0020	 ldr         r0, [sp, #0x20]
  03754	e2800018	 add         r0, r0, #0x18
  03758	e5900000	 ldr         r0, [r0]
  0375c	eb000000	 bl          TWLReadRegs

; 513  : 
; 514  :             data = (data & 0xF0) | (threshold & 0x0F);

  03760	e5dd3004	 ldrb        r3, [sp, #4]
  03764	e20320f0	 and         r2, r3, #0xF0
  03768	e5dd3028	 ldrb        r3, [sp, #0x28]
  0376c	e203300f	 and         r3, r3, #0xF
  03770	e1823003	 orr         r3, r2, r3
  03774	e20330ff	 and         r3, r3, #0xFF
  03778	e5cd3004	 strb        r3, [sp, #4]

; 515  :             TWLWriteRegs(pDevice->hTwl, TWL_BCIMFTH8, &data, 1);

  0377c	e3a03001	 mov         r3, #1
  03780	e28d2004	 add         r2, sp, #4
  03784	e3a01802	 mov         r1, #2, 16
  03788	e3811091	 orr         r1, r1, #0x91
  0378c	e59d0020	 ldr         r0, [sp, #0x20]
  03790	e2800018	 add         r0, r0, #0x18
  03794	e5900000	 ldr         r0, [r0]
  03798	eb000000	 bl          TWLWriteRegs

; 516  :             
; 517  :             // get access to BCIMFTH9
; 518  :             data = KEY_BCIMFTH9;

  0379c	e3a030e7	 mov         r3, #0xE7
  037a0	e5cd3004	 strb        r3, [sp, #4]

; 519  :             TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  037a4	e3a03001	 mov         r3, #1
  037a8	e28d2004	 add         r2, sp, #4
  037ac	e3a01802	 mov         r1, #2, 16
  037b0	e3811085	 orr         r1, r1, #0x85
  037b4	e59d0020	 ldr         r0, [sp, #0x20]
  037b8	e2800018	 add         r0, r0, #0x18
  037bc	e5900000	 ldr         r0, [r0]
  037c0	eb000000	 bl          TWLWriteRegs

; 520  :             TWLReadRegs(pDevice->hTwl, TWL_BCIMFTH9, &data, 1);

  037c4	e3a03001	 mov         r3, #1
  037c8	e28d2004	 add         r2, sp, #4
  037cc	e3a01802	 mov         r1, #2, 16
  037d0	e3811092	 orr         r1, r1, #0x92
  037d4	e59d0020	 ldr         r0, [sp, #0x20]
  037d8	e2800018	 add         r0, r0, #0x18
  037dc	e5900000	 ldr         r0, [r0]
  037e0	eb000000	 bl          TWLReadRegs

; 521  : 
; 522  :             data = (data & 0x0F) | (threshold & 0xF0);

  037e4	e5dd3004	 ldrb        r3, [sp, #4]
  037e8	e203200f	 and         r2, r3, #0xF
  037ec	e5dd3028	 ldrb        r3, [sp, #0x28]
  037f0	e20330f0	 and         r3, r3, #0xF0
  037f4	e1823003	 orr         r3, r2, r3
  037f8	e20330ff	 and         r3, r3, #0xFF
  037fc	e5cd3004	 strb        r3, [sp, #4]

; 523  :             TWLWriteRegs(pDevice->hTwl, TWL_BCIMFTH9, &data, 1);           

  03800	e3a03001	 mov         r3, #1
  03804	e28d2004	 add         r2, sp, #4
  03808	e3a01802	 mov         r1, #2, 16
  0380c	e3811092	 orr         r1, r1, #0x92
  03810	e59d0020	 ldr         r0, [sp, #0x20]
  03814	e2800018	 add         r0, r0, #0x18
  03818	e5900000	 ldr         r0, [r0]
  0381c	eb000000	 bl          TWLWriteRegs

; 524  :             bResult = TRUE;

  03820	e3a03001	 mov         r3, #1
  03824	e58d3000	 str         r3, [sp]

; 525  :             break;

  03828	ea000022	 b           |$LN4@SetCurrent|
  0382c		 |$LN2@SetCurrent|

; 526  : 
; 527  :         case BCI_EOC_VBAT:
; 528  :             // get access to BCIMFTH6
; 529  :             data = KEY_BCIMFTH8;

  0382c	e3a030f4	 mov         r3, #0xF4
  03830	e5cd3004	 strb        r3, [sp, #4]

; 530  :             TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  03834	e3a03001	 mov         r3, #1
  03838	e28d2004	 add         r2, sp, #4
  0383c	e3a01802	 mov         r1, #2, 16
  03840	e3811085	 orr         r1, r1, #0x85
  03844	e59d0020	 ldr         r0, [sp, #0x20]
  03848	e2800018	 add         r0, r0, #0x18
  0384c	e5900000	 ldr         r0, [r0]
  03850	eb000000	 bl          TWLWriteRegs

; 531  :             TWLReadRegs(pDevice->hTwl, TWL_BCIMFTH8, &data, 1);

  03854	e3a03001	 mov         r3, #1
  03858	e28d2004	 add         r2, sp, #4
  0385c	e3a01802	 mov         r1, #2, 16
  03860	e3811091	 orr         r1, r1, #0x91
  03864	e59d0020	 ldr         r0, [sp, #0x20]
  03868	e2800018	 add         r0, r0, #0x18
  0386c	e5900000	 ldr         r0, [r0]
  03870	eb000000	 bl          TWLReadRegs

; 532  : 
; 533  :             data = (data & 0x0F) | (threshold << 4);

  03874	e5dd3004	 ldrb        r3, [sp, #4]
  03878	e203200f	 and         r2, r3, #0xF
  0387c	e5dd3028	 ldrb        r3, [sp, #0x28]
  03880	e1a03203	 mov         r3, r3, lsl #4
  03884	e1823003	 orr         r3, r2, r3
  03888	e20330ff	 and         r3, r3, #0xFF
  0388c	e5cd3004	 strb        r3, [sp, #4]

; 534  :             TWLWriteRegs(pDevice->hTwl, TWL_BCIMFTH8, &data, 1);

  03890	e3a03001	 mov         r3, #1
  03894	e28d2004	 add         r2, sp, #4
  03898	e3a01802	 mov         r1, #2, 16
  0389c	e3811091	 orr         r1, r1, #0x91
  038a0	e59d0020	 ldr         r0, [sp, #0x20]
  038a4	e2800018	 add         r0, r0, #0x18
  038a8	e5900000	 ldr         r0, [r0]
  038ac	eb000000	 bl          TWLWriteRegs

; 535  :             bResult = TRUE;

  038b0	e3a03001	 mov         r3, #1
  038b4	e58d3000	 str         r3, [sp]
  038b8		 |$LN4@SetCurrent|

; 536  :             break;            
; 537  :         }
; 538  : 
; 539  :     if (bResult != FALSE)

  038b8	e59d3000	 ldr         r3, [sp]
  038bc	e3530000	 cmp         r3, #0
  038c0	0a000007	 beq         |$LN1@SetCurrent|

; 540  :         {
; 541  :         TWLWriteRegs(pDevice->hTwl, TWL_BCIMFTH3, &data, 1);

  038c4	e3a03001	 mov         r3, #1
  038c8	e28d2004	 add         r2, sp, #4
  038cc	e3a01802	 mov         r1, #2, 16
  038d0	e381108c	 orr         r1, r1, #0x8C
  038d4	e59d0020	 ldr         r0, [sp, #0x20]
  038d8	e2800018	 add         r0, r0, #0x18
  038dc	e5900000	 ldr         r0, [r0]
  038e0	eb000000	 bl          TWLWriteRegs
  038e4		 |$LN1@SetCurrent|

; 542  :         }
; 543  : 
; 544  :     DEBUGMSG(ZONE_FUNCTION, (L"-SetCurrentThreshold()\r\n"));

  038e4	e59f3040	 ldr         r3, [pc, #0x40]
  038e8	e5933440	 ldr         r3, [r3, #0x440]
  038ec	e3130080	 tst         r3, #0x80
  038f0	0a000004	 beq         |$LN10@SetCurrent|
  038f4	e59f002c	 ldr         r0, [pc, #0x2C]
  038f8	eb000000	 bl          NKDbgPrintfW
  038fc	e3a03001	 mov         r3, #1
  03900	e58d3014	 str         r3, [sp, #0x14]
  03904	ea000001	 b           |$LN11@SetCurrent|
  03908		 |$LN10@SetCurrent|
  03908	e3a03000	 mov         r3, #0
  0390c	e58d3014	 str         r3, [sp, #0x14]
  03910		 |$LN11@SetCurrent|

; 545  :     return bResult;    

  03910	e59d3000	 ldr         r3, [sp]
  03914	e58d3008	 str         r3, [sp, #8]

; 546  : }

  03918	e59d0008	 ldr         r0, [sp, #8]
  0391c	e28dd018	 add         sp, sp, #0x18
  03920	e89d6000	 ldmia       sp, {sp, lr}
  03924	e12fff1e	 bx          lr
  03928		 |$LN15@SetCurrent|
  03928		 |$LN16@SetCurrent|
  03928	00000000	 DCD         |??_C@_1DC@BKEONJPO@?$AA?9?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0392c		 |$LN17@SetCurrent|
  0392c	00000000	 DCD         |dpCurSettings|
  03930		 |$LN18@SetCurrent|
  03930	00000000	 DCD         |??_C@_1IA@CCIMPNCF@?$AA?$CL?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF@|
  03934		 |$M45419|

			 ENDP  ; |SetCurrentThreshold|

	EXPORT	|??_C@_1DI@GDOAHMJB@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@DAKBHGE@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAh?$AAB?$AAC?$AAI?$AA?$DN?$AA0?$AAx?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|BCI_SetCurrentMonitors|

  00108			 AREA	 |.pdata|, PDATA
|$T45435| DCD	|$LN10@BCI_SetCur@2|
	DCD	0x40003904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@GDOAHMJB@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "M", 0x0, "o", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "o", 0x0, "r", 0x0, "s", 0x0, "(", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@DAKBHGE@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAh?$AAB?$AAC?$AAI?$AA?$DN?$AA0?$AAx?$AA?$CF@| DCB "+"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "M", 0x0, "o", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "o", 0x0, "r", 0x0, "s", 0x0, "(", 0x0, "h"
	DCB	0x0, "B", 0x0, "C", 0x0, "I", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " "
	DCB	0x0, "f", 0x0, "f", 0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "f", 0x0, "f", 0x0, "M", 0x0, "a", 0x0, "s"
	DCB	0x0, "k", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  03934			 AREA	 |.text|, CODE, ARM

  03934		 |BCI_SetCurrentMonitors| PROC

; 2081 : {

  03934		 |$LN10@BCI_SetCur@2|
  03934	e1a0c00d	 mov         r12, sp
  03938	e92d0007	 stmdb       sp!, {r0 - r2}
  0393c	e92d5000	 stmdb       sp!, {r12, lr}
  03940	e24dd018	 sub         sp, sp, #0x18
  03944		 |$M45432|

; 2082 :     BOOL bSuccess = FALSE;

  03944	e3a03000	 mov         r3, #0
  03948	e58d3004	 str         r3, [sp, #4]

; 2083 :     Device_t *pDevice = (Device_t*)hBCI;

  0394c	e59d3020	 ldr         r3, [sp, #0x20]
  03950	e58d3000	 str         r3, [sp]

; 2084 :     DEBUGMSG(ZONE_FUNCTION, (L"+BCI_SetCurrentMonitors("
; 2085 :         L"hBCI=0x%08X, ffEnable=%d, ffMask=%d)\r\n",
; 2086 :         hBCI, ffEnable, ffMask
; 2087 :         ));

  03954	e59f30b4	 ldr         r3, [pc, #0xB4]
  03958	e5933440	 ldr         r3, [r3, #0x440]
  0395c	e3130080	 tst         r3, #0x80
  03960	0a000007	 beq         |$LN4@BCI_SetCur@2|
  03964	e59d3028	 ldr         r3, [sp, #0x28]
  03968	e59d2024	 ldr         r2, [sp, #0x24]
  0396c	e59d1020	 ldr         r1, [sp, #0x20]
  03970	e59f009c	 ldr         r0, [pc, #0x9C]
  03974	eb000000	 bl          NKDbgPrintfW
  03978	e3a03001	 mov         r3, #1
  0397c	e58d300c	 str         r3, [sp, #0xC]
  03980	ea000001	 b           |$LN5@BCI_SetCur@2|
  03984		 |$LN4@BCI_SetCur@2|
  03984	e3a03000	 mov         r3, #0
  03988	e58d300c	 str         r3, [sp, #0xC]
  0398c		 |$LN5@BCI_SetCur@2|

; 2088 : 
; 2089 :     // check for valid parameter
; 2090 :     if (pDevice == NULL) goto cleanUp;

  0398c	e59d3000	 ldr         r3, [sp]
  03990	e3530000	 cmp         r3, #0
  03994	1a000000	 bne         |$LN1@BCI_SetCur@2|
  03998	ea00000a	 b           |$cleanUp$44590|
  0399c		 |$LN1@BCI_SetCur@2|

; 2091 : 
; 2092 :     EnterCriticalSection(&pDevice->cs);    

  0399c	e59d0000	 ldr         r0, [sp]
  039a0	eb000000	 bl          EnterCriticalSection

; 2093 :     bSuccess = SetCurrentMonitors(pDevice, ffEnable, ffMask);

  039a4	e59d2028	 ldr         r2, [sp, #0x28]
  039a8	e59d1024	 ldr         r1, [sp, #0x24]
  039ac	e59d0000	 ldr         r0, [sp]
  039b0	eb000000	 bl          SetCurrentMonitors
  039b4	e58d0010	 str         r0, [sp, #0x10]
  039b8	e59d3010	 ldr         r3, [sp, #0x10]
  039bc	e58d3004	 str         r3, [sp, #4]

; 2094 :     LeaveCriticalSection(&pDevice->cs);

  039c0	e59d0000	 ldr         r0, [sp]
  039c4	eb000000	 bl          LeaveCriticalSection
  039c8		 |$cleanUp$44590|

; 2095 : 
; 2096 : cleanUp:            
; 2097 :     DEBUGMSG(ZONE_FUNCTION, (L"-BCI_SetCurrentMonitors()\r\n"));

  039c8	e59f3040	 ldr         r3, [pc, #0x40]
  039cc	e5933440	 ldr         r3, [r3, #0x440]
  039d0	e3130080	 tst         r3, #0x80
  039d4	0a000004	 beq         |$LN6@BCI_SetCur@2|
  039d8	e59f002c	 ldr         r0, [pc, #0x2C]
  039dc	eb000000	 bl          NKDbgPrintfW
  039e0	e3a03001	 mov         r3, #1
  039e4	e58d3014	 str         r3, [sp, #0x14]
  039e8	ea000001	 b           |$LN7@BCI_SetCur@2|
  039ec		 |$LN6@BCI_SetCur@2|
  039ec	e3a03000	 mov         r3, #0
  039f0	e58d3014	 str         r3, [sp, #0x14]
  039f4		 |$LN7@BCI_SetCur@2|

; 2098 :     return bSuccess;

  039f4	e59d3004	 ldr         r3, [sp, #4]
  039f8	e58d3008	 str         r3, [sp, #8]

; 2099 : }

  039fc	e59d0008	 ldr         r0, [sp, #8]
  03a00	e28dd018	 add         sp, sp, #0x18
  03a04	e89d6000	 ldmia       sp, {sp, lr}
  03a08	e12fff1e	 bx          lr
  03a0c		 |$LN11@BCI_SetCur@2|
  03a0c		 |$LN12@BCI_SetCur@2|
  03a0c	00000000	 DCD         |??_C@_1DI@GDOAHMJB@?$AA?9?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  03a10		 |$LN13@BCI_SetCur@2|
  03a10	00000000	 DCD         |dpCurSettings|
  03a14		 |$LN14@BCI_SetCur@2|
  03a14	00000000	 DCD         |??_C@_1HO@DAKBHGE@?$AA?$CL?$AAB?$AAC?$AAI?$AA_?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAh?$AAB?$AAC?$AAI?$AA?$DN?$AA0?$AAx?$AA?$CF@|
  03a18		 |$M45433|

			 ENDP  ; |BCI_SetCurrentMonitors|

	EXPORT	|??_C@_1DA@NPNPAJAP@?$AA?9?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@OMLLGLBA@?$AA?$CL?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0@| [ DATA ] ; `string'

  00110			 AREA	 |.pdata|, PDATA
|$T45453| DCD	|$LN16@SetCurrent@2|
	DCD	0x40006b04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@NPNPAJAP@?$AA?9?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "C", 0x0, "u", 0x0, "r"
	DCB	0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "M", 0x0, "o"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "o", 0x0, "r", 0x0, "s"
	DCB	0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@OMLLGLBA@?$AA?$CL?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0@| DCB "+"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "C", 0x0, "u", 0x0, "r"
	DCB	0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "M", 0x0, "o"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "o", 0x0, "r", 0x0, "s"
	DCB	0x0, "(", 0x0, "p", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "f"
	DCB	0x0, "f", 0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "f", 0x0, "f", 0x0, "M", 0x0, "a", 0x0, "s", 0x0, "k"
	DCB	0x0, "=", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  03a18			 AREA	 |.text|, CODE, ARM

  03a18		 |SetCurrentMonitors| PROC

; 691  : {

  03a18		 |$LN16@SetCurrent@2|
  03a18	e1a0c00d	 mov         r12, sp
  03a1c	e92d0007	 stmdb       sp!, {r0 - r2}
  03a20	e92d5000	 stmdb       sp!, {r12, lr}
  03a24	e24dd01c	 sub         sp, sp, #0x1C
  03a28		 |$M45450|

; 692  :     UINT8 data;
; 693  :     BOOL bResult = FALSE;

  03a28	e3a03000	 mov         r3, #0
  03a2c	e58d3000	 str         r3, [sp]

; 694  :     DEBUGMSG(ZONE_FUNCTION, (L"+SetCurrentMonitors("
; 695  :         L"pDevice=0x%08X, ffEnable=%d, ffMask=%d)\r\n",
; 696  :         pDevice, ffEnable, ffMask
; 697  :         ));

  03a30	e59f3184	 ldr         r3, [pc, #0x184]
  03a34	e5933440	 ldr         r3, [r3, #0x440]
  03a38	e3130080	 tst         r3, #0x80
  03a3c	0a000007	 beq         |$LN6@SetCurrent@2|
  03a40	e59d302c	 ldr         r3, [sp, #0x2C]
  03a44	e59d2028	 ldr         r2, [sp, #0x28]
  03a48	e59d1024	 ldr         r1, [sp, #0x24]
  03a4c	e59f016c	 ldr         r0, [pc, #0x16C]
  03a50	eb000000	 bl          NKDbgPrintfW
  03a54	e3a03001	 mov         r3, #1
  03a58	e58d300c	 str         r3, [sp, #0xC]
  03a5c	ea000001	 b           |$LN7@SetCurrent@2|
  03a60		 |$LN6@SetCurrent@2|
  03a60	e3a03000	 mov         r3, #0
  03a64	e58d300c	 str         r3, [sp, #0xC]
  03a68		 |$LN7@SetCurrent@2|

; 698  : 
; 699  :     if (ffMask & (BCI_OC_VBAT | BCI_EOC_VBAT))

  03a68	e59d302c	 ldr         r3, [sp, #0x2C]
  03a6c	e3130003	 tst         r3, #3
  03a70	0a00003d	 beq         |$LN3@SetCurrent@2|

; 700  :         {
; 701  :         // get access to BCIMFEN3
; 702  :         data = KEY_BCIMFEN3;

  03a74	e3a0309c	 mov         r3, #0x9C
  03a78	e5cd3004	 strb        r3, [sp, #4]

; 703  :         TWLWriteRegs(pDevice->hTwl, TWL_BCIMFKEY, &data, 1);

  03a7c	e3a03001	 mov         r3, #1
  03a80	e28d2004	 add         r2, sp, #4
  03a84	e3a01802	 mov         r1, #2, 16
  03a88	e3811085	 orr         r1, r1, #0x85
  03a8c	e59d0024	 ldr         r0, [sp, #0x24]
  03a90	e2800018	 add         r0, r0, #0x18
  03a94	e5900000	 ldr         r0, [r0]
  03a98	eb000000	 bl          TWLWriteRegs

; 704  : 
; 705  :         // update over-charge monitors
; 706  :         TWLReadRegs(pDevice->hTwl, TWL_BCIMFEN3, &data, 1);

  03a9c	e3a03001	 mov         r3, #1
  03aa0	e28d2004	 add         r2, sp, #4
  03aa4	e3a01802	 mov         r1, #2, 16
  03aa8	e3811088	 orr         r1, r1, #0x88
  03aac	e59d0024	 ldr         r0, [sp, #0x24]
  03ab0	e2800018	 add         r0, r0, #0x18
  03ab4	e5900000	 ldr         r0, [r0]
  03ab8	eb000000	 bl          TWLReadRegs

; 707  :         if (ffMask & BCI_OC_VBAT)

  03abc	e59d302c	 ldr         r3, [sp, #0x2C]
  03ac0	e3130001	 tst         r3, #1
  03ac4	0a00000e	 beq         |$LN2@SetCurrent@2|

; 708  :             {
; 709  :             data = (ffEnable & BCI_OC_VBAT) ? (data | ICHGHIGHEN) :
; 710  :                                               (data & ~ICHGHIGHEN);

  03ac8	e59d3028	 ldr         r3, [sp, #0x28]
  03acc	e3130001	 tst         r3, #1
  03ad0	0a000003	 beq         |$LN8@SetCurrent@2|
  03ad4	e5dd3004	 ldrb        r3, [sp, #4]
  03ad8	e3833008	 orr         r3, r3, #8
  03adc	e58d3010	 str         r3, [sp, #0x10]
  03ae0	ea000004	 b           |$LN9@SetCurrent@2|
  03ae4		 |$LN8@SetCurrent@2|
  03ae4	e5dd3004	 ldrb        r3, [sp, #4]
  03ae8	e1a02003	 mov         r2, r3
  03aec	e3e03008	 mvn         r3, #8
  03af0	e0023003	 and         r3, r2, r3
  03af4	e58d3010	 str         r3, [sp, #0x10]
  03af8		 |$LN9@SetCurrent@2|
  03af8	e59d3010	 ldr         r3, [sp, #0x10]
  03afc	e20330ff	 and         r3, r3, #0xFF
  03b00	e5cd3004	 strb        r3, [sp, #4]
  03b04		 |$LN2@SetCurrent@2|

; 711  :             }
; 712  : 
; 713  :         if (ffMask & BCI_EOC_VBAT)

  03b04	e59d302c	 ldr         r3, [sp, #0x2C]
  03b08	e3130002	 tst         r3, #2
  03b0c	0a00000e	 beq         |$LN1@SetCurrent@2|

; 714  :             {
; 715  :             data = (ffEnable & BCI_EOC_VBAT) ? (data | ICHGEOCEN) :
; 716  :                                                (data & ~ICHGEOCEN);

  03b10	e59d3028	 ldr         r3, [sp, #0x28]
  03b14	e3130002	 tst         r3, #2
  03b18	0a000003	 beq         |$LN10@SetCurrent@2|
  03b1c	e5dd3004	 ldrb        r3, [sp, #4]
  03b20	e3833080	 orr         r3, r3, #0x80
  03b24	e58d3014	 str         r3, [sp, #0x14]
  03b28	ea000004	 b           |$LN11@SetCurrent@2|
  03b2c		 |$LN10@SetCurrent@2|
  03b2c	e5dd3004	 ldrb        r3, [sp, #4]
  03b30	e1a02003	 mov         r2, r3
  03b34	e3e03080	 mvn         r3, #0x80
  03b38	e0023003	 and         r3, r2, r3
  03b3c	e58d3014	 str         r3, [sp, #0x14]
  03b40		 |$LN11@SetCurrent@2|
  03b40	e59d3014	 ldr         r3, [sp, #0x14]
  03b44	e20330ff	 and         r3, r3, #0xFF
  03b48	e5cd3004	 strb        r3, [sp, #4]
  03b4c		 |$LN1@SetCurrent@2|

; 717  :             }
; 718  :             
; 719  :         TWLWriteRegs(pDevice->hTwl, TWL_BCIMFEN3, &data, 1);

  03b4c	e3a03001	 mov         r3, #1
  03b50	e28d2004	 add         r2, sp, #4
  03b54	e3a01802	 mov         r1, #2, 16
  03b58	e3811088	 orr         r1, r1, #0x88
  03b5c	e59d0024	 ldr         r0, [sp, #0x24]
  03b60	e2800018	 add         r0, r0, #0x18
  03b64	e5900000	 ldr         r0, [r0]
  03b68	eb000000	 bl          TWLWriteRegs
  03b6c		 |$LN3@SetCurrent@2|

; 720  :         }
; 721  : 
; 722  :     bResult = TRUE;

  03b6c	e3a03001	 mov         r3, #1
  03b70	e58d3000	 str         r3, [sp]

; 723  :             
; 724  :     DEBUGMSG(ZONE_FUNCTION, (L"-SetCurrentMonitors()\r\n"));

  03b74	e59f3040	 ldr         r3, [pc, #0x40]
  03b78	e5933440	 ldr         r3, [r3, #0x440]
  03b7c	e3130080	 tst         r3, #0x80
  03b80	0a000004	 beq         |$LN12@SetCurrent@2|
  03b84	e59f002c	 ldr         r0, [pc, #0x2C]
  03b88	eb000000	 bl          NKDbgPrintfW
  03b8c	e3a03001	 mov         r3, #1
  03b90	e58d3018	 str         r3, [sp, #0x18]
  03b94	ea000001	 b           |$LN13@SetCurrent@2|
  03b98		 |$LN12@SetCurrent@2|
  03b98	e3a03000	 mov         r3, #0
  03b9c	e58d3018	 str         r3, [sp, #0x18]
  03ba0		 |$LN13@SetCurrent@2|

; 725  :     return bResult;

  03ba0	e59d3000	 ldr         r3, [sp]
  03ba4	e58d3008	 str         r3, [sp, #8]

; 726  : }

  03ba8	e59d0008	 ldr         r0, [sp, #8]
  03bac	e28dd01c	 add         sp, sp, #0x1C
  03bb0	e89d6000	 ldmia       sp, {sp, lr}
  03bb4	e12fff1e	 bx          lr
  03bb8		 |$LN17@SetCurrent@2|
  03bb8		 |$LN18@SetCurrent@2|
  03bb8	00000000	 DCD         |??_C@_1DA@NPNPAJAP@?$AA?9?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  03bbc		 |$LN19@SetCurrent@2|
  03bbc	00000000	 DCD         |dpCurSettings|
  03bc0		 |$LN20@SetCurrent@2|
  03bc0	00000000	 DCD         |??_C@_1HM@OMLLGLBA@?$AA?$CL?$AAS?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAM?$AAo?$AAn?$AAi?$AAt?$AAo?$AAr?$AAs?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0@|
  03bc4		 |$M45451|

			 ENDP  ; |SetCurrentMonitors|

	EXPORT	|??_C@_1CI@HBOPPKCN@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAN?$AAo?$AAt?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@HLDMCNFH@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAi?$AAn?$AAg?$AA?5?$AAv?$AAi?$AAa?$AA?5?$AAU?$AAS?$AAB?$AAH?$AAo?$AAs?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@LDGLEELK@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAi?$AAn?$AAg?$AA?5?$AAv?$AAi?$AAa?$AA?5?$AAV?$AAA?$AAC?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@NEEHDDBO@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAe?$AAn?$AAd?$AA?5?$AAo?$AAf?$AA?5?$AAc?$AAh?$AAa?$AAr?$AAg?$AAe?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@OKFPDHFD@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAo?$AAv?$AAe?$AAr?$AA?1?$AAu?$AAn?$AAd?$AAe?$AAr?$AA?5?$AAc?$AAh?$AAa?$AAr?$AAg?$AAe?$AA?5?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@PDEIEAJB@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAO?$AAO?$AAB?$AA?5?$AAt?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@HDHILHOL@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAo?$AAv?$AAe?$AAr?$AA?5?$AAv?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IC@HBCFEKPO@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$FL?$AA0?$AA?$FN?$AA?$DN?$AA?$CF?$AA0?$AA2?$AAX?$AA?0?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@NHKAOOAG@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?5?$AAH?$AAo?$AAt?$AA?9?$AAD?$AAi?$AAe?$AA?5?$AAw?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAn?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@JBGCGOKH@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?5?$AAm?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@CNMCAFCN@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|WaitForMultipleObjects|

  00118			 AREA	 |.pdata|, PDATA
|$T45487| DCD	|$LN58@IntrThread|
	DCD	0x40017404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@HBOPPKCN@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAN?$AAo?$AAt?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "N", 0x0, "o"
	DCB	0x0, "t", 0x0, " ", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "r"
	DCB	0x0, "g", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@HLDMCNFH@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAi?$AAn?$AAg?$AA?5?$AAv?$AAi?$AAa?$AA?5?$AAU?$AAS?$AAB?$AAH?$AAo?$AAs?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "r", 0x0, "g", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "v", 0x0, "i", 0x0, "a", 0x0, " ", 0x0, "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "H", 0x0, "o", 0x0, "s", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@LDGLEELK@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAi?$AAn?$AAg?$AA?5?$AAv?$AAi?$AAa?$AA?5?$AAV?$AAA?$AAC?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "r", 0x0, "g", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "v", 0x0, "i", 0x0, "a", 0x0, " ", 0x0, "V"
	DCB	0x0, "A", 0x0, "C", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@NEEHDDBO@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAe?$AAn?$AAd?$AA?5?$AAo?$AAf?$AA?5?$AAc?$AAh?$AAa?$AAr?$AAg?$AAe?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "n"
	DCB	0x0, "d", 0x0, " ", 0x0, "o", 0x0, "f", 0x0, " ", 0x0, "c"
	DCB	0x0, "h", 0x0, "a", 0x0, "r", 0x0, "g", 0x0, "e", 0x0, " "
	DCB	0x0, "d", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@OKFPDHFD@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAo?$AAv?$AAe?$AAr?$AA?1?$AAu?$AAn?$AAd?$AAe?$AAr?$AA?5?$AAc?$AAh?$AAa?$AAr?$AAg?$AAe?$AA?5?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AAd@| DCB "B"
	DCB	0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "o", 0x0, "v"
	DCB	0x0, "e", 0x0, "r", 0x0, "/", 0x0, "u", 0x0, "n", 0x0, "d"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "c", 0x0, "h", 0x0, "a"
	DCB	0x0, "r", 0x0, "g", 0x0, "e", 0x0, " ", 0x0, "c", 0x0, "u"
	DCB	0x0, "r", 0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "d", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@PDEIEAJB@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAO?$AAO?$AAB?$AA?5?$AAt?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "O", 0x0, "O"
	DCB	0x0, "B", 0x0, " ", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, "p"
	DCB	0x0, "e", 0x0, "r", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "r"
	DCB	0x0, "e", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@HDHILHOL@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAo?$AAv?$AAe?$AAr?$AA?5?$AAv?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "o", 0x0, "v"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "v", 0x0, "o", 0x0, "l"
	DCB	0x0, "t", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, " ", 0x0, "d"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@HBCFEKPO@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$FL?$AA0?$AA?$FN?$AA?$DN?$AA?$CF?$AA0?$AA2?$AAX?$AA?0?$AA?5@| DCB "B"
	DCB	0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "u", 0x0, "s", 0x0, "[", 0x0, "0", 0x0, "]"
	DCB	0x0, "=", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "X", 0x0, ","
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "s", 0x0, "[", 0x0, "1", 0x0, "]", 0x0, "=", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, "["
	DCB	0x0, "2", 0x0, "]", 0x0, "=", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@NHKAOOAG@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?5?$AAH?$AAo?$AAt?$AA?9?$AAD?$AAi?$AAe?$AA?5?$AAw?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAn?$AAt@| DCB "B"
	DCB	0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, " "
	DCB	0x0, "H", 0x0, "o", 0x0, "t", 0x0, "-", 0x0, "D", 0x0, "i"
	DCB	0x0, "e", 0x0, " ", 0x0, "w", 0x0, "a", 0x0, "r", 0x0, "n"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, " ", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@JBGCGOKH@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?5?$AAm?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "t", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "m", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@CNMCAFCN@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "u", 0x0, "s", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "X", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  03bc4			 AREA	 |.text|, CODE, ARM

  03bc4		 |IntrThread| PROC

; 2205 : {

  03bc4		 |$LN58@IntrThread|
  03bc4	e1a0c00d	 mov         r12, sp
  03bc8	e92d0001	 stmdb       sp!, {r0}
  03bcc	e92d5000	 stmdb       sp!, {r12, lr}
  03bd0	e24dd050	 sub         sp, sp, #0x50
  03bd4		 |$M45484|

; 2206 :     Device_t   *pDevice = (Device_t*)pContext;

  03bd4	e59d3058	 ldr         r3, [sp, #0x58]
  03bd8	e58d3000	 str         r3, [sp]

; 2207 :     DWORD       timeout = INFINITE;

  03bdc	e3e03000	 mvn         r3, #0
  03be0	e58d3010	 str         r3, [sp, #0x10]

; 2208 :     UINT8       status;
; 2209 :     DWORD       dwEventId;
; 2210 :     
; 2211 :     BatteryChargeMode_e prevMode = kBCI_Unknown;

  03be4	e3a03005	 mov         r3, #5
  03be8	e58d3004	 str         r3, [sp, #4]
  03bec		 |$LN55@IntrThread|
  03bec		 |$LN54@IntrThread|
  03bec		 |$LN53@IntrThread|
  03bec		 |$LN29@IntrThread|

; 2212 : 
; 2213 : 
; 2214 :     // Loop until we are not stopped...
; 2215 :     while (!pDevice->threadsExit)

  03bec	e59d3000	 ldr         r3, [sp]
  03bf0	e283303c	 add         r3, r3, #0x3C
  03bf4	e5933000	 ldr         r3, [r3]
  03bf8	e3530000	 cmp         r3, #0
  03bfc	1a000151	 bne         |$LN28@IntrThread|

; 2216 :         {
; 2217 :         // Typically event handles associated with interrupts aren't allowed
; 2218 :         // to use WaitForMultipleObjects but since the interrupts are
; 2219 :         // actually signalled by the triton driver this will work.
; 2220 :         
; 2221 :         dwEventId = WaitForMultipleObjects(3, pDevice->rgIntrEvents, 
; 2222 :                         FALSE, timeout
; 2223 :                         );

  03c00	e59d3010	 ldr         r3, [sp, #0x10]
  03c04	e3a02000	 mov         r2, #0
  03c08	e59d1000	 ldr         r1, [sp]
  03c0c	e2811028	 add         r1, r1, #0x28
  03c10	e3a00003	 mov         r0, #3
  03c14	eb000000	 bl          WaitForMultipleObjects
  03c18	e58d0018	 str         r0, [sp, #0x18]
  03c1c	e59d3018	 ldr         r3, [sp, #0x18]
  03c20	e58d3008	 str         r3, [sp, #8]

; 2224 :         if (pDevice->threadsExit) break;

  03c24	e59d3000	 ldr         r3, [sp]
  03c28	e283303c	 add         r3, r3, #0x3C
  03c2c	e5933000	 ldr         r3, [r3]
  03c30	e3530000	 cmp         r3, #0
  03c34	0a000000	 beq         |$LN27@IntrThread|
  03c38	ea000142	 b           |$LN28@IntrThread|
  03c3c		 |$LN27@IntrThread|

; 2225 : 
; 2226 :         switch (dwEventId)

  03c3c	e59d3008	 ldr         r3, [sp, #8]
  03c40	e58d301c	 str         r3, [sp, #0x1C]
  03c44	e59d301c	 ldr         r3, [sp, #0x1C]
  03c48	e3530002	 cmp         r3, #2
  03c4c	8a000009	 bhi         |$LN36@IntrThread|
  03c50	e59d301c	 ldr         r3, [sp, #0x1C]
  03c54	e3530002	 cmp         r3, #2
  03c58	0a00003d	 beq         |$LN20@IntrThread|
  03c5c	e59d301c	 ldr         r3, [sp, #0x1C]
  03c60	e3530000	 cmp         r3, #0
  03c64	0a000009	 beq         |$LN24@IntrThread|
  03c68	e59d301c	 ldr         r3, [sp, #0x1C]
  03c6c	e3530001	 cmp         r3, #1
  03c70	0a000036	 beq         |$LN21@IntrThread|
  03c74	ea00003c	 b           |$LN19@IntrThread|
  03c78		 |$LN36@IntrThread|
  03c78	e59d201c	 ldr         r2, [sp, #0x1C]
  03c7c	e3a03c01	 mov         r3, #1, 24
  03c80	e3833002	 orr         r3, r3, #2
  03c84	e1520003	 cmp         r2, r3
  03c88	0a000022	 beq         |$LN22@IntrThread|
  03c8c	ea000036	 b           |$LN19@IntrThread|
  03c90		 |$LN24@IntrThread|

; 2227 :             {
; 2228 :             case WAIT_OBJECT_0:
; 2229 :                 TWLReadRegs(pDevice->hTwl, TWL_PWR_ISR1, &status, 1);                

  03c90	e3a03001	 mov         r3, #1
  03c94	e28d200c	 add         r2, sp, #0xC
  03c98	e3a01803	 mov         r1, #3, 16
  03c9c	e381102e	 orr         r1, r1, #0x2E
  03ca0	e59d0000	 ldr         r0, [sp]
  03ca4	e2800018	 add         r0, r0, #0x18
  03ca8	e5900000	 ldr         r0, [r0]
  03cac	eb000000	 bl          TWLReadRegs

; 2230 :                 TWLWriteRegs(pDevice->hTwl, TWL_PWR_ISR1, &status, 1);

  03cb0	e3a03001	 mov         r3, #1
  03cb4	e28d200c	 add         r2, sp, #0xC
  03cb8	e3a01803	 mov         r1, #3, 16
  03cbc	e381102e	 orr         r1, r1, #0x2E
  03cc0	e59d0000	 ldr         r0, [sp]
  03cc4	e2800018	 add         r0, r0, #0x18
  03cc8	e5900000	 ldr         r0, [r0]
  03ccc	eb000000	 bl          TWLWriteRegs

; 2231 :                 if (timeout == INFINITE)

  03cd0	e59d3010	 ldr         r3, [sp, #0x10]
  03cd4	e3730001	 cmn         r3, #1
  03cd8	1a000001	 bne         |$LN23@IntrThread|

; 2232 :                     {
; 2233 :                     timeout = 100;

  03cdc	e3a03064	 mov         r3, #0x64
  03ce0	e58d3010	 str         r3, [sp, #0x10]
  03ce4		 |$LN23@IntrThread|

; 2234 :                     }
; 2235 :                 DEBUGMSG(ZONE_PDD, (L"BCI: interrupt: status=0x%02X\r\n", status));

  03ce4	e59f3478	 ldr         r3, [pc, #0x478]
  03ce8	e5933440	 ldr         r3, [r3, #0x440]
  03cec	e3130c01	 tst         r3, #1, 24
  03cf0	0a000005	 beq         |$LN32@IntrThread|
  03cf4	e5dd100c	 ldrb        r1, [sp, #0xC]
  03cf8	e59f0490	 ldr         r0, [pc, #0x490]
  03cfc	eb000000	 bl          NKDbgPrintfW
  03d00	e3a03001	 mov         r3, #1
  03d04	e58d3020	 str         r3, [sp, #0x20]
  03d08	ea000001	 b           |$LN33@IntrThread|
  03d0c		 |$LN32@IntrThread|
  03d0c	e3a03000	 mov         r3, #0
  03d10	e58d3020	 str         r3, [sp, #0x20]
  03d14		 |$LN33@IntrThread|

; 2236 :                 continue;

  03d14	eaffffb4	 b           |$LN29@IntrThread|
  03d18		 |$LN22@IntrThread|

; 2237 : 
; 2238 :             case WAIT_TIMEOUT:
; 2239 :                 DEBUGMSG(ZONE_PDD, (L"BCI: timeout: %d ms\r\n", timeout));

  03d18	e59f3444	 ldr         r3, [pc, #0x444]
  03d1c	e5933440	 ldr         r3, [r3, #0x440]
  03d20	e3130c01	 tst         r3, #1, 24
  03d24	0a000005	 beq         |$LN34@IntrThread|
  03d28	e59d1010	 ldr         r1, [sp, #0x10]
  03d2c	e59f0458	 ldr         r0, [pc, #0x458]
  03d30	eb000000	 bl          NKDbgPrintfW
  03d34	e3a03001	 mov         r3, #1
  03d38	e58d3024	 str         r3, [sp, #0x24]
  03d3c	ea000001	 b           |$LN35@IntrThread|
  03d40		 |$LN34@IntrThread|
  03d40	e3a03000	 mov         r3, #0
  03d44	e58d3024	 str         r3, [sp, #0x24]
  03d48		 |$LN35@IntrThread|

; 2240 :                 timeout = INFINITE;

  03d48	e3e03000	 mvn         r3, #0
  03d4c	e58d3010	 str         r3, [sp, #0x10]
  03d50		 |$LN21@IntrThread|

; 2241 :                 // fall-through
; 2242 : 
; 2243 :             case (WAIT_OBJECT_0 + 1):
; 2244 :                 break;

  03d50	ea000006	 b           |$LN25@IntrThread|
  03d54		 |$LN20@IntrThread|

; 2245 : 
; 2246 :             case (WAIT_OBJECT_0 + 2):
; 2247 :                 RETAILMSG(1, (L"BCI: Receive Hot-Die warning interrupt !\r\n"));

  03d54	e59f042c	 ldr         r0, [pc, #0x42C]
  03d58	eb000000	 bl          NKDbgPrintfW

; 2248 :                 SetEvent(hHotDieTriggerEvent_Test);

  03d5c	e59f3420	 ldr         r3, [pc, #0x420]
  03d60	e5930000	 ldr         r0, [r3]
  03d64	eb000000	 bl          SetEvent

; 2249 :                 
; 2250 :                 //Below actions to decrease the temperature of the Power IC should be done by OEM
; 2251 :                 
; 2252 :                 continue;

  03d68	eaffff9f	 b           |$LN53@IntrThread|
  03d6c		 |$LN19@IntrThread|

; 2253 : 
; 2254 :             default:
; 2255 :                 continue;

  03d6c	eaffff9e	 b           |$LN54@IntrThread|
  03d70		 |$LN25@IntrThread|

; 2256 :             }        
; 2257 : 
; 2258 :         // always read/update status registers
; 2259 :         TWLReadRegs(pDevice->hTwl, TWL_BCIMFSTS2, pDevice->rgBciStatus, 3);

  03d70	e3a03003	 mov         r3, #3
  03d74	e59d2000	 ldr         r2, [sp]
  03d78	e2822060	 add         r2, r2, #0x60
  03d7c	e3a01802	 mov         r1, #2, 16
  03d80	e3811082	 orr         r1, r1, #0x82
  03d84	e59d0000	 ldr         r0, [sp]
  03d88	e2800018	 add         r0, r0, #0x18
  03d8c	e5900000	 ldr         r0, [r0]
  03d90	eb000000	 bl          TWLReadRegs

; 2260 :         DEBUGMSG(ZONE_PDD, (L"BCI: interrupt: "
; 2261 :             L"status[0]=%02X, status[1]=%02X, status[2]=%02X\r\n", 
; 2262 :             pDevice->rgBciStatus[0], pDevice->rgBciStatus[1],
; 2263 :             pDevice->rgBciStatus[2])
; 2264 :             );

  03d94	e59f33c8	 ldr         r3, [pc, #0x3C8]
  03d98	e5933440	 ldr         r3, [r3, #0x440]
  03d9c	e3130c01	 tst         r3, #1, 24
  03da0	0a00000d	 beq         |$LN37@IntrThread|
  03da4	e59d3000	 ldr         r3, [sp]
  03da8	e2833062	 add         r3, r3, #0x62
  03dac	e5d33000	 ldrb        r3, [r3]
  03db0	e59d2000	 ldr         r2, [sp]
  03db4	e2822061	 add         r2, r2, #0x61
  03db8	e5d22000	 ldrb        r2, [r2]
  03dbc	e59d1000	 ldr         r1, [sp]
  03dc0	e2811060	 add         r1, r1, #0x60
  03dc4	e5d11000	 ldrb        r1, [r1]
  03dc8	e59f03b0	 ldr         r0, [pc, #0x3B0]
  03dcc	eb000000	 bl          NKDbgPrintfW
  03dd0	e3a03001	 mov         r3, #1
  03dd4	e58d3028	 str         r3, [sp, #0x28]
  03dd8	ea000001	 b           |$LN38@IntrThread|
  03ddc		 |$LN37@IntrThread|
  03ddc	e3a03000	 mov         r3, #0
  03de0	e58d3028	 str         r3, [sp, #0x28]
  03de4		 |$LN38@IntrThread|

; 2265 : 
; 2266 :         // choose correct charge mode to enter
; 2267 :         EnterCriticalSection(&pDevice->cs);

  03de4	e59d0000	 ldr         r0, [sp]
  03de8	eb000000	 bl          EnterCriticalSection

; 2268 :         // check for over-voltage, over-current, or over-temperature
; 2269 :         if (pDevice->rgBciStatus[IDX_BCIMFSTS2] & (VBUSOV | ACCHGOV))

  03dec	e59d3000	 ldr         r3, [sp]
  03df0	e2833060	 add         r3, r3, #0x60
  03df4	e5d33000	 ldrb        r3, [r3]
  03df8	e3130003	 tst         r3, #3
  03dfc	0a00001a	 beq         |$LN18@IntrThread|

; 2270 :             {
; 2271 :             DEBUGMSG(ZONE_PDD, (L"BCI: over voltage detected\r\n"));

  03e00	e59f335c	 ldr         r3, [pc, #0x35C]
  03e04	e5933440	 ldr         r3, [r3, #0x440]
  03e08	e3130c01	 tst         r3, #1, 24
  03e0c	0a000004	 beq         |$LN39@IntrThread|
  03e10	e59f0364	 ldr         r0, [pc, #0x364]
  03e14	eb000000	 bl          NKDbgPrintfW
  03e18	e3a03001	 mov         r3, #1
  03e1c	e58d302c	 str         r3, [sp, #0x2C]
  03e20	ea000001	 b           |$LN40@IntrThread|
  03e24		 |$LN39@IntrThread|
  03e24	e3a03000	 mov         r3, #0
  03e28	e58d302c	 str         r3, [sp, #0x2C]
  03e2c		 |$LN40@IntrThread|

; 2272 :             if (pDevice->currentMode == kBCI_USBHost)

  03e2c	e59d3000	 ldr         r3, [sp]
  03e30	e2833014	 add         r3, r3, #0x14
  03e34	e5933000	 ldr         r3, [r3]
  03e38	e3530002	 cmp         r3, #2
  03e3c	1a000009	 bne         |$LN17@IntrThread|

; 2273 :                 {
; 2274 :                 // let hw FSM handle overcharges
; 2275 :                 SetChargeMode_ACCharge(pDevice);

  03e40	e59d0000	 ldr         r0, [sp]
  03e44	eb000000	 bl          SetChargeMode_ACCharge

; 2276 :                 pDevice->currentMode = kBCI_SurgeProtect;

  03e48	e59d3000	 ldr         r3, [sp]
  03e4c	e2832014	 add         r2, r3, #0x14
  03e50	e3a03004	 mov         r3, #4
  03e54	e5823000	 str         r3, [r2]

; 2277 : 
; 2278 :                 // wait a second and check voltages again
; 2279 :                 timeout = pDevice->nOverVoltageTimeout;

  03e58	e59d3000	 ldr         r3, [sp]
  03e5c	e2833054	 add         r3, r3, #0x54
  03e60	e5933000	 ldr         r3, [r3]
  03e64	e58d3010	 str         r3, [sp, #0x10]
  03e68		 |$LN17@IntrThread|

; 2280 :                 }

  03e68	ea0000a0	 b           |$LN16@IntrThread|
  03e6c		 |$LN18@IntrThread|

; 2281 :             }
; 2282 :         else if (pDevice->rgBciStatus[IDX_BCIMFSTS3] & (TBATOR1 | TBATOR2))

  03e6c	e59d3000	 ldr         r3, [sp]
  03e70	e2833061	 add         r3, r3, #0x61
  03e74	e5d33000	 ldrb        r3, [r3]
  03e78	e3130018	 tst         r3, #0x18
  03e7c	0a00001a	 beq         |$LN15@IntrThread|

; 2283 :             {
; 2284 :             DEBUGMSG(ZONE_PDD, (L"BCI: OOB temperature detected\r\n"));

  03e80	e59f32dc	 ldr         r3, [pc, #0x2DC]
  03e84	e5933440	 ldr         r3, [r3, #0x440]
  03e88	e3130c01	 tst         r3, #1, 24
  03e8c	0a000004	 beq         |$LN41@IntrThread|
  03e90	e59f02e0	 ldr         r0, [pc, #0x2E0]
  03e94	eb000000	 bl          NKDbgPrintfW
  03e98	e3a03001	 mov         r3, #1
  03e9c	e58d3030	 str         r3, [sp, #0x30]
  03ea0	ea000001	 b           |$LN42@IntrThread|
  03ea4		 |$LN41@IntrThread|
  03ea4	e3a03000	 mov         r3, #0
  03ea8	e58d3030	 str         r3, [sp, #0x30]
  03eac		 |$LN42@IntrThread|

; 2285 :             if (pDevice->currentMode == kBCI_USBHost)

  03eac	e59d3000	 ldr         r3, [sp]
  03eb0	e2833014	 add         r3, r3, #0x14
  03eb4	e5933000	 ldr         r3, [r3]
  03eb8	e3530002	 cmp         r3, #2
  03ebc	1a000009	 bne         |$LN14@IntrThread|

; 2286 :                 {
; 2287 :                 // let hw FSM handle overcharges
; 2288 :                 SetChargeMode_ACCharge(pDevice);

  03ec0	e59d0000	 ldr         r0, [sp]
  03ec4	eb000000	 bl          SetChargeMode_ACCharge

; 2289 :                 pDevice->currentMode = kBCI_SurgeProtect;

  03ec8	e59d3000	 ldr         r3, [sp]
  03ecc	e2832014	 add         r2, r3, #0x14
  03ed0	e3a03004	 mov         r3, #4
  03ed4	e5823000	 str         r3, [r2]

; 2290 : 
; 2291 :                 // wait a second and check voltages again
; 2292 :                 timeout = pDevice->nOOBTemperatureTimeout;

  03ed8	e59d3000	 ldr         r3, [sp]
  03edc	e2833058	 add         r3, r3, #0x58
  03ee0	e5933000	 ldr         r3, [r3]
  03ee4	e58d3010	 str         r3, [sp, #0x10]
  03ee8		 |$LN14@IntrThread|

; 2293 :                 }

  03ee8	ea000080	 b           |$LN13@IntrThread|
  03eec		 |$LN15@IntrThread|

; 2294 :             }
; 2295 :         else if (pDevice->rgBciStatus[IDX_BCIMFSTS3] & (ICHGHIGH))

  03eec	e59d3000	 ldr         r3, [sp]
  03ef0	e2833061	 add         r3, r3, #0x61
  03ef4	e5d33000	 ldrb        r3, [r3]
  03ef8	e3130001	 tst         r3, #1
  03efc	0a00001a	 beq         |$LN12@IntrThread|

; 2296 :             {
; 2297 :             DEBUGMSG(ZONE_PDD, (L"BCI: over/under charge current detected\r\n"));

  03f00	e59f325c	 ldr         r3, [pc, #0x25C]
  03f04	e5933440	 ldr         r3, [r3, #0x440]
  03f08	e3130c01	 tst         r3, #1, 24
  03f0c	0a000004	 beq         |$LN43@IntrThread|
  03f10	e59f025c	 ldr         r0, [pc, #0x25C]
  03f14	eb000000	 bl          NKDbgPrintfW
  03f18	e3a03001	 mov         r3, #1
  03f1c	e58d3034	 str         r3, [sp, #0x34]
  03f20	ea000001	 b           |$LN44@IntrThread|
  03f24		 |$LN43@IntrThread|
  03f24	e3a03000	 mov         r3, #0
  03f28	e58d3034	 str         r3, [sp, #0x34]
  03f2c		 |$LN44@IntrThread|

; 2298 :             if (pDevice->currentMode == kBCI_USBHost)

  03f2c	e59d3000	 ldr         r3, [sp]
  03f30	e2833014	 add         r3, r3, #0x14
  03f34	e5933000	 ldr         r3, [r3]
  03f38	e3530002	 cmp         r3, #2
  03f3c	1a000009	 bne         |$LN11@IntrThread|

; 2299 :                 {
; 2300 :                 // let hw FSM handle overcharges
; 2301 :                 SetChargeMode_ACCharge(pDevice);

  03f40	e59d0000	 ldr         r0, [sp]
  03f44	eb000000	 bl          SetChargeMode_ACCharge

; 2302 :                 pDevice->currentMode = kBCI_SurgeProtect;

  03f48	e59d3000	 ldr         r3, [sp]
  03f4c	e2832014	 add         r2, r3, #0x14
  03f50	e3a03004	 mov         r3, #4
  03f54	e5823000	 str         r3, [r2]

; 2303 : 
; 2304 :                 // wait a second and check voltages again
; 2305 :                 timeout = pDevice->nOverChargeTimeout;

  03f58	e59d3000	 ldr         r3, [sp]
  03f5c	e283305c	 add         r3, r3, #0x5C
  03f60	e5933000	 ldr         r3, [r3]
  03f64	e58d3010	 str         r3, [sp, #0x10]
  03f68		 |$LN11@IntrThread|

; 2306 :                 }

  03f68	ea000060	 b           |$LN10@IntrThread|
  03f6c		 |$LN12@IntrThread|

; 2307 :             }
; 2308 :         else if (pDevice->rgBciStatus[IDX_BCIMFSTS3] & (ICHGEOC))

  03f6c	e59d3000	 ldr         r3, [sp]
  03f70	e2833061	 add         r3, r3, #0x61
  03f74	e5d33000	 ldrb        r3, [r3]
  03f78	e3130004	 tst         r3, #4
  03f7c	0a00001a	 beq         |$LN9@IntrThread|

; 2309 :             {
; 2310 :             DEBUGMSG(ZONE_PDD, (L"BCI: end of charge detected\r\n"));

  03f80	e59f31dc	 ldr         r3, [pc, #0x1DC]
  03f84	e5933440	 ldr         r3, [r3, #0x440]
  03f88	e3130c01	 tst         r3, #1, 24
  03f8c	0a000004	 beq         |$LN45@IntrThread|
  03f90	e59f01d8	 ldr         r0, [pc, #0x1D8]
  03f94	eb000000	 bl          NKDbgPrintfW
  03f98	e3a03001	 mov         r3, #1
  03f9c	e58d3038	 str         r3, [sp, #0x38]
  03fa0	ea000001	 b           |$LN46@IntrThread|
  03fa4		 |$LN45@IntrThread|
  03fa4	e3a03000	 mov         r3, #0
  03fa8	e58d3038	 str         r3, [sp, #0x38]
  03fac		 |$LN46@IntrThread|

; 2311 :             if (pDevice->currentMode == kBCI_USBHost)

  03fac	e59d3000	 ldr         r3, [sp]
  03fb0	e2833014	 add         r3, r3, #0x14
  03fb4	e5933000	 ldr         r3, [r3]
  03fb8	e3530002	 cmp         r3, #2
  03fbc	1a000009	 bne         |$LN8@IntrThread|

; 2312 :                 {
; 2313 :                 // let hw FSM handle overcharges
; 2314 :                 SetChargeMode_ACCharge(pDevice);

  03fc0	e59d0000	 ldr         r0, [sp]
  03fc4	eb000000	 bl          SetChargeMode_ACCharge

; 2315 :                 pDevice->currentMode = kBCI_EOC;

  03fc8	e59d3000	 ldr         r3, [sp]
  03fcc	e2832014	 add         r2, r3, #0x14
  03fd0	e3a03003	 mov         r3, #3
  03fd4	e5823000	 str         r3, [r2]

; 2316 : 
; 2317 :                 // wait a second and check voltages again
; 2318 :                 timeout = pDevice->nEndOfChargeTimeout;

  03fd8	e59d3000	 ldr         r3, [sp]
  03fdc	e2833050	 add         r3, r3, #0x50
  03fe0	e5933000	 ldr         r3, [r3]
  03fe4	e58d3010	 str         r3, [sp, #0x10]
  03fe8		 |$LN8@IntrThread|

; 2319 :                 }

  03fe8	ea000040	 b           |$LN7@IntrThread|
  03fec		 |$LN9@IntrThread|

; 2320 :             }
; 2321 :         else if (IsVACValid(pDevice))

  03fec	e59d0000	 ldr         r0, [sp]
  03ff0	eb000000	 bl          IsVACValid
  03ff4	e58d003c	 str         r0, [sp, #0x3C]
  03ff8	e59d303c	 ldr         r3, [sp, #0x3C]
  03ffc	e3530000	 cmp         r3, #0
  04000	0a000011	 beq         |$LN6@IntrThread|

; 2322 :             {
; 2323 :             DEBUGMSG(ZONE_PDD, (L"BCI: Charging via VAC\r\n"));

  04004	e59f3158	 ldr         r3, [pc, #0x158]
  04008	e5933440	 ldr         r3, [r3, #0x440]
  0400c	e3130c01	 tst         r3, #1, 24
  04010	0a000004	 beq         |$LN47@IntrThread|
  04014	e59f0150	 ldr         r0, [pc, #0x150]
  04018	eb000000	 bl          NKDbgPrintfW
  0401c	e3a03001	 mov         r3, #1
  04020	e58d3040	 str         r3, [sp, #0x40]
  04024	ea000001	 b           |$LN48@IntrThread|
  04028		 |$LN47@IntrThread|
  04028	e3a03000	 mov         r3, #0
  0402c	e58d3040	 str         r3, [sp, #0x40]
  04030		 |$LN48@IntrThread|

; 2324 :             SetChargeMode_ACCharge(pDevice);

  04030	e59d0000	 ldr         r0, [sp]
  04034	eb000000	 bl          SetChargeMode_ACCharge

; 2325 :             pDevice->currentMode = kBCI_AC;

  04038	e59d3000	 ldr         r3, [sp]
  0403c	e2832014	 add         r2, r3, #0x14
  04040	e3a03001	 mov         r3, #1
  04044	e5823000	 str         r3, [r2]
  04048	ea000028	 b           |$LN5@IntrThread|
  0404c		 |$LN6@IntrThread|

; 2326 :             }
; 2327 :         else if (IsVBUSValid(pDevice))

  0404c	e59d0000	 ldr         r0, [sp]
  04050	eb000000	 bl          IsVBUSValid
  04054	e58d0044	 str         r0, [sp, #0x44]
  04058	e59d3044	 ldr         r3, [sp, #0x44]
  0405c	e3530000	 cmp         r3, #0
  04060	0a000011	 beq         |$LN4@IntrThread|

; 2328 :             {
; 2329 :             DEBUGMSG(ZONE_PDD, (L"BCI: Charging via USBHost\r\n"));

  04064	e59f30f8	 ldr         r3, [pc, #0xF8]
  04068	e5933440	 ldr         r3, [r3, #0x440]
  0406c	e3130c01	 tst         r3, #1, 24
  04070	0a000004	 beq         |$LN49@IntrThread|
  04074	e59f00ec	 ldr         r0, [pc, #0xEC]
  04078	eb000000	 bl          NKDbgPrintfW
  0407c	e3a03001	 mov         r3, #1
  04080	e58d3048	 str         r3, [sp, #0x48]
  04084	ea000001	 b           |$LN50@IntrThread|
  04088		 |$LN49@IntrThread|
  04088	e3a03000	 mov         r3, #0
  0408c	e58d3048	 str         r3, [sp, #0x48]
  04090		 |$LN50@IntrThread|

; 2330 :             SetChargeMode_USBHost(pDevice);

  04090	e59d0000	 ldr         r0, [sp]
  04094	eb000000	 bl          SetChargeMode_USBHost

; 2331 :             pDevice->currentMode = kBCI_USBHost;

  04098	e59d3000	 ldr         r3, [sp]
  0409c	e2832014	 add         r2, r3, #0x14
  040a0	e3a03002	 mov         r3, #2
  040a4	e5823000	 str         r3, [r2]

; 2332 :             }
; 2333 :         else

  040a8	ea000010	 b           |$LN3@IntrThread|
  040ac		 |$LN4@IntrThread|

; 2334 :             {            
; 2335 :             DEBUGMSG(ZONE_PDD, (L"BCI: Not Charging\r\n"));

  040ac	e59f30b0	 ldr         r3, [pc, #0xB0]
  040b0	e5933440	 ldr         r3, [r3, #0x440]
  040b4	e3130c01	 tst         r3, #1, 24
  040b8	0a000004	 beq         |$LN51@IntrThread|
  040bc	e59f009c	 ldr         r0, [pc, #0x9C]
  040c0	eb000000	 bl          NKDbgPrintfW
  040c4	e3a03001	 mov         r3, #1
  040c8	e58d304c	 str         r3, [sp, #0x4C]
  040cc	ea000001	 b           |$LN52@IntrThread|
  040d0		 |$LN51@IntrThread|
  040d0	e3a03000	 mov         r3, #0
  040d4	e58d304c	 str         r3, [sp, #0x4C]
  040d8		 |$LN52@IntrThread|

; 2336 :             SetChargeMode_ACCharge(pDevice);

  040d8	e59d0000	 ldr         r0, [sp]
  040dc	eb000000	 bl          SetChargeMode_ACCharge

; 2337 :             pDevice->currentMode = kBCI_Battery;

  040e0	e59d3000	 ldr         r3, [sp]
  040e4	e2832014	 add         r2, r3, #0x14
  040e8	e3a03000	 mov         r3, #0
  040ec	e5823000	 str         r3, [r2]
  040f0		 |$LN3@IntrThread|
  040f0		 |$LN5@IntrThread|
  040f0		 |$LN7@IntrThread|
  040f0		 |$LN10@IntrThread|
  040f0		 |$LN13@IntrThread|
  040f0		 |$LN16@IntrThread|

; 2338 :             }
; 2339 :         LeaveCriticalSection(&pDevice->cs);

  040f0	e59d0000	 ldr         r0, [sp]
  040f4	eb000000	 bl          LeaveCriticalSection

; 2340 : 
; 2341 :         // signal battery driver of state change
; 2342 :         if (prevMode != pDevice->currentMode)

  040f8	e59d3000	 ldr         r3, [sp]
  040fc	e2833014	 add         r3, r3, #0x14
  04100	e59d2004	 ldr         r2, [sp, #4]
  04104	e5933000	 ldr         r3, [r3]
  04108	e1520003	 cmp         r2, r3
  0410c	0a00000c	 beq         |$LN2@IntrThread|

; 2343 :             {
; 2344 :             prevMode = pDevice->currentMode;

  04110	e59d3000	 ldr         r3, [sp]
  04114	e2833014	 add         r3, r3, #0x14
  04118	e5933000	 ldr         r3, [r3]
  0411c	e58d3004	 str         r3, [sp, #4]

; 2345 :             if (pDevice->hBattSignal != NULL) SetEvent(pDevice->hBattSignal);

  04120	e59d3000	 ldr         r3, [sp]
  04124	e2833020	 add         r3, r3, #0x20
  04128	e5933000	 ldr         r3, [r3]
  0412c	e3530000	 cmp         r3, #0
  04130	0a000003	 beq         |$LN1@IntrThread|
  04134	e59d3000	 ldr         r3, [sp]
  04138	e2833020	 add         r3, r3, #0x20
  0413c	e5930000	 ldr         r0, [r3]
  04140	eb000000	 bl          SetEvent
  04144		 |$LN1@IntrThread|
  04144		 |$LN2@IntrThread|

; 2346 :             }
; 2347 :         
; 2348 :         }

  04144	eafffea8	 b           |$LN55@IntrThread|
  04148		 |$LN28@IntrThread|

; 2349 : 
; 2350 :     return ERROR_SUCCESS;

  04148	e3a03000	 mov         r3, #0
  0414c	e58d3014	 str         r3, [sp, #0x14]

; 2351 : }

  04150	e59d0014	 ldr         r0, [sp, #0x14]
  04154	e28dd050	 add         sp, sp, #0x50
  04158	e89d6000	 ldmia       sp, {sp, lr}
  0415c	e12fff1e	 bx          lr
  04160		 |$LN59@IntrThread|
  04160		 |$LN60@IntrThread|
  04160	00000000	 DCD         |??_C@_1CI@HBOPPKCN@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAN?$AAo?$AAt?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@|
  04164		 |$LN61@IntrThread|
  04164	00000000	 DCD         |dpCurSettings|
  04168		 |$LN62@IntrThread|
  04168	00000000	 DCD         |??_C@_1DI@HLDMCNFH@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAi?$AAn?$AAg?$AA?5?$AAv?$AAi?$AAa?$AA?5?$AAU?$AAS?$AAB?$AAH?$AAo?$AAs?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  0416c		 |$LN63@IntrThread|
  0416c	00000000	 DCD         |??_C@_1DA@LDGLEELK@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAi?$AAn?$AAg?$AA?5?$AAv?$AAi?$AAa?$AA?5?$AAV?$AAA?$AAC?$AA?$AN?$AA?6?$AA?$AA@|
  04170		 |$LN64@IntrThread|
  04170	00000000	 DCD         |??_C@_1DM@NEEHDDBO@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAe?$AAn?$AAd?$AA?5?$AAo?$AAf?$AA?5?$AAc?$AAh?$AAa?$AAr?$AAg?$AAe?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  04174		 |$LN65@IntrThread|
  04174	00000000	 DCD         |??_C@_1FE@OKFPDHFD@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAo?$AAv?$AAe?$AAr?$AA?1?$AAu?$AAn?$AAd?$AAe?$AAr?$AA?5?$AAc?$AAh?$AAa?$AAr?$AAg?$AAe?$AA?5?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AAd@|
  04178		 |$LN66@IntrThread|
  04178	00000000	 DCD         |??_C@_1EA@PDEIEAJB@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAO?$AAO?$AAB?$AA?5?$AAt?$AAe?$AAm?$AAp?$AAe?$AAr?$AAa?$AAt?$AAu?$AAr?$AAe?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0417c		 |$LN67@IntrThread|
  0417c	00000000	 DCD         |??_C@_1DK@HDHILHOL@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAo?$AAv?$AAe?$AAr?$AA?5?$AAv?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  04180		 |$LN68@IntrThread|
  04180	00000000	 DCD         |??_C@_1IC@HBCFEKPO@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$FL?$AA0?$AA?$FN?$AA?$DN?$AA?$CF?$AA0?$AA2?$AAX?$AA?0?$AA?5@|
  04184		 |$LN69@IntrThread|
  04184	00000000	 DCD         |hHotDieTriggerEvent_Test|
  04188		 |$LN70@IntrThread|
  04188	00000000	 DCD         |??_C@_1FG@NHKAOOAG@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?5?$AAH?$AAo?$AAt?$AA?9?$AAD?$AAi?$AAe?$AA?5?$AAw?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAn?$AAt@|
  0418c		 |$LN71@IntrThread|
  0418c	00000000	 DCD         |??_C@_1CM@JBGCGOKH@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?5?$AAm?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  04190		 |$LN72@IntrThread|
  04190	00000000	 DCD         |??_C@_1EA@CNMCAFCN@?$AAB?$AAC?$AAI?$AA?3?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  04194		 |$M45485|

			 ENDP  ; |IntrThread|

	EXPORT	|??_C@_1DI@HNBMEOEG@?$AA?9?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA_?$AAA?$AAC?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@ELONGGIO@?$AA?$CL?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA_?$AAA?$AAC?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN@| [ DATA ] ; `string'

  00120			 AREA	 |.pdata|, PDATA
|$T45511| DCD	|$LN10@SetChargeM|
	DCD	0x40004a04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@HNBMEOEG@?$AA?9?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA_?$AAA?$AAC?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "C", 0x0, "h", 0x0, "a"
	DCB	0x0, "r", 0x0, "g", 0x0, "e", 0x0, "M", 0x0, "o", 0x0, "d"
	DCB	0x0, "e", 0x0, "_", 0x0, "A", 0x0, "C", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "r", 0x0, "g", 0x0, "e", 0x0, "(", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@ELONGGIO@?$AA?$CL?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA_?$AAA?$AAC?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN@| DCB "+"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "C", 0x0, "h", 0x0, "a"
	DCB	0x0, "r", 0x0, "g", 0x0, "e", 0x0, "M", 0x0, "o", 0x0, "d"
	DCB	0x0, "e", 0x0, "_", 0x0, "A", 0x0, "C", 0x0, "C", 0x0, "h"
	DCB	0x0, "a", 0x0, "r", 0x0, "g", 0x0, "e", 0x0, "(", 0x0, "p"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  04194			 AREA	 |.text|, CODE, ARM

  04194		 |SetChargeMode_ACCharge| PROC

; 967  : {

  04194		 |$LN10@SetChargeM|
  04194	e1a0c00d	 mov         r12, sp
  04198	e92d0001	 stmdb       sp!, {r0}
  0419c	e92d5000	 stmdb       sp!, {r12, lr}
  041a0	e24dd014	 sub         sp, sp, #0x14
  041a4		 |$M45508|

; 968  :     UINT8 data;
; 969  :     BOOL bResult = FALSE;

  041a4	e3a03000	 mov         r3, #0
  041a8	e58d3000	 str         r3, [sp]

; 970  :     DEBUGMSG(ZONE_FUNCTION, (L"+SetChargeMode_ACCharge(pDevice=0x%08X)\r\n",
; 971  :         pDevice
; 972  :         ));

  041ac	e59f3100	 ldr         r3, [pc, #0x100]
  041b0	e5933440	 ldr         r3, [r3, #0x440]
  041b4	e3130080	 tst         r3, #0x80
  041b8	0a000005	 beq         |$LN4@SetChargeM|
  041bc	e59d101c	 ldr         r1, [sp, #0x1C]
  041c0	e59f00f0	 ldr         r0, [pc, #0xF0]
  041c4	eb000000	 bl          NKDbgPrintfW
  041c8	e3a03001	 mov         r3, #1
  041cc	e58d300c	 str         r3, [sp, #0xC]
  041d0	ea000001	 b           |$LN5@SetChargeM|
  041d4		 |$LN4@SetChargeM|
  041d4	e3a03000	 mov         r3, #0
  041d8	e58d300c	 str         r3, [sp, #0xC]
  041dc		 |$LN5@SetChargeM|

; 973  : 
; 974  :     // check if already in auto mode
; 975  :     TWLReadRegs(pDevice->hTwl, TWL_BOOT_BCI, &data, 1);

  041dc	e3a03001	 mov         r3, #1
  041e0	e28d2004	 add         r2, sp, #4
  041e4	e3a01803	 mov         r1, #3, 16
  041e8	e381103d	 orr         r1, r1, #0x3D
  041ec	e59d001c	 ldr         r0, [sp, #0x1C]
  041f0	e2800018	 add         r0, r0, #0x18
  041f4	e5900000	 ldr         r0, [r0]
  041f8	eb000000	 bl          TWLReadRegs

; 976  :     if ((data & BCIAUTOAC) == 0)

  041fc	e5dd3004	 ldrb        r3, [sp, #4]
  04200	e3130001	 tst         r3, #1
  04204	1a000013	 bne         |$LN1@SetChargeM|

; 977  :         {
; 978  :         // disable charge mode
; 979  :         data = KEY_BCIOFF;

  04208	e3a0302a	 mov         r3, #0x2A
  0420c	e5cd3004	 strb        r3, [sp, #4]

; 980  :         TWLWriteRegs(pDevice->hTwl, TWL_BCIMDKEY, &data, 1);

  04210	e3a03001	 mov         r3, #1
  04214	e28d2004	 add         r2, sp, #4
  04218	e3a01802	 mov         r1, #2, 16
  0421c	e3811075	 orr         r1, r1, #0x75
  04220	e59d001c	 ldr         r0, [sp, #0x1C]
  04224	e2800018	 add         r0, r0, #0x18
  04228	e5900000	 ldr         r0, [r0]
  0422c	eb000000	 bl          TWLWriteRegs

; 981  : 
; 982  :         // enable auto charge
; 983  :         data = CONFIG_DONE | BCIAUTOAC;

  04230	e3a03011	 mov         r3, #0x11
  04234	e5cd3004	 strb        r3, [sp, #4]

; 984  :         TWLWriteRegs(pDevice->hTwl, TWL_BOOT_BCI, &data, 1);

  04238	e3a03001	 mov         r3, #1
  0423c	e28d2004	 add         r2, sp, #4
  04240	e3a01803	 mov         r1, #3, 16
  04244	e381103d	 orr         r1, r1, #0x3D
  04248	e59d001c	 ldr         r0, [sp, #0x1C]
  0424c	e2800018	 add         r0, r0, #0x18
  04250	e5900000	 ldr         r0, [r0]
  04254	eb000000	 bl          TWLWriteRegs
  04258		 |$LN1@SetChargeM|

; 985  :         }
; 986  : 
; 987  :     UpdateChargeCurrent(pDevice, pDevice->acChargeCurrent);

  04258	e59d301c	 ldr         r3, [sp, #0x1C]
  0425c	e283303a	 add         r3, r3, #0x3A
  04260	e1d310b0	 ldrh        r1, [r3]
  04264	e59d001c	 ldr         r0, [sp, #0x1C]
  04268	eb000000	 bl          UpdateChargeCurrent

; 988  :             
; 989  :     DEBUGMSG(ZONE_FUNCTION, (L"-SetChargeMode_ACCharge()\r\n"));

  0426c	e59f3040	 ldr         r3, [pc, #0x40]
  04270	e5933440	 ldr         r3, [r3, #0x440]
  04274	e3130080	 tst         r3, #0x80
  04278	0a000004	 beq         |$LN6@SetChargeM|
  0427c	e59f002c	 ldr         r0, [pc, #0x2C]
  04280	eb000000	 bl          NKDbgPrintfW
  04284	e3a03001	 mov         r3, #1
  04288	e58d3010	 str         r3, [sp, #0x10]
  0428c	ea000001	 b           |$LN7@SetChargeM|
  04290		 |$LN6@SetChargeM|
  04290	e3a03000	 mov         r3, #0
  04294	e58d3010	 str         r3, [sp, #0x10]
  04298		 |$LN7@SetChargeM|

; 990  :     return bResult;

  04298	e59d3000	 ldr         r3, [sp]
  0429c	e58d3008	 str         r3, [sp, #8]

; 991  : }

  042a0	e59d0008	 ldr         r0, [sp, #8]
  042a4	e28dd014	 add         sp, sp, #0x14
  042a8	e89d6000	 ldmia       sp, {sp, lr}
  042ac	e12fff1e	 bx          lr
  042b0		 |$LN11@SetChargeM|
  042b0		 |$LN12@SetChargeM|
  042b0	00000000	 DCD         |??_C@_1DI@HNBMEOEG@?$AA?9?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA_?$AAA?$AAC?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  042b4		 |$LN13@SetChargeM|
  042b4	00000000	 DCD         |dpCurSettings|
  042b8		 |$LN14@SetChargeM|
  042b8	00000000	 DCD         |??_C@_1FE@ELONGGIO@?$AA?$CL?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA_?$AAA?$AAC?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN@|
  042bc		 |$M45509|

			 ENDP  ; |SetChargeMode_ACCharge|

	EXPORT	|??_C@_1DG@MMAJOPEM@?$AA?9?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA_?$AAU?$AAS?$AAB?$AAH?$AAo?$AAs?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@FDJGEDFM@?$AA?$CL?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA_?$AAU?$AAS?$AAB?$AAH?$AAo?$AAs?$AAt?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0@| [ DATA ] ; `string'

  00128			 AREA	 |.pdata|, PDATA
|$T45525| DCD	|$LN12@SetChargeM@2|
	DCD	0x40009804

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@MMAJOPEM@?$AA?9?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA_?$AAU?$AAS?$AAB?$AAH?$AAo?$AAs?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "C", 0x0, "h", 0x0, "a"
	DCB	0x0, "r", 0x0, "g", 0x0, "e", 0x0, "M", 0x0, "o", 0x0, "d"
	DCB	0x0, "e", 0x0, "_", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "H"
	DCB	0x0, "o", 0x0, "s", 0x0, "t", 0x0, "(", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@FDJGEDFM@?$AA?$CL?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA_?$AAU?$AAS?$AAB?$AAH?$AAo?$AAs?$AAt?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0@| DCB "+"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "C", 0x0, "h", 0x0, "a"
	DCB	0x0, "r", 0x0, "g", 0x0, "e", 0x0, "M", 0x0, "o", 0x0, "d"
	DCB	0x0, "e", 0x0, "_", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "H"
	DCB	0x0, "o", 0x0, "s", 0x0, "t", 0x0, "(", 0x0, "p", 0x0, "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "="
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  042bc			 AREA	 |.text|, CODE, ARM

  042bc		 |SetChargeMode_USBHost| PROC

; 1032 : {

  042bc		 |$LN12@SetChargeM@2|
  042bc	e1a0c00d	 mov         r12, sp
  042c0	e92d0001	 stmdb       sp!, {r0}
  042c4	e92d5000	 stmdb       sp!, {r12, lr}
  042c8	e24dd01c	 sub         sp, sp, #0x1C
  042cc		 |$M45522|

; 1033 :     UINT8 data;
; 1034 :     DWORD dwOVMon = 0;

  042cc	e3a03000	 mov         r3, #0
  042d0	e58d3000	 str         r3, [sp]

; 1035 :     BOOL bResult = FALSE;

  042d4	e3a03000	 mov         r3, #0
  042d8	e58d3004	 str         r3, [sp, #4]

; 1036 :     DEBUGMSG(ZONE_FUNCTION, (L"+SetChargeMode_USBHost(pDevice=0x%08X)\r\n",
; 1037 :         pDevice
; 1038 :         ));

  042dc	e59f3230	 ldr         r3, [pc, #0x230]
  042e0	e5933440	 ldr         r3, [r3, #0x440]
  042e4	e3130080	 tst         r3, #0x80
  042e8	0a000005	 beq         |$LN6@SetChargeM@2|
  042ec	e59d1024	 ldr         r1, [sp, #0x24]
  042f0	e59f0220	 ldr         r0, [pc, #0x220]
  042f4	eb000000	 bl          NKDbgPrintfW
  042f8	e3a03001	 mov         r3, #1
  042fc	e58d3010	 str         r3, [sp, #0x10]
  04300	ea000001	 b           |$LN7@SetChargeM@2|
  04304		 |$LN6@SetChargeM@2|
  04304	e3a03000	 mov         r3, #0
  04308	e58d3010	 str         r3, [sp, #0x10]
  0430c		 |$LN7@SetChargeM@2|

; 1039 : 
; 1040 :     // disable auto mode
; 1041 :     data = CONFIG_DONE;

  0430c	e3a03010	 mov         r3, #0x10
  04310	e5cd3008	 strb        r3, [sp, #8]

; 1042 :     TWLWriteRegs(pDevice->hTwl, TWL_BOOT_BCI, &data, 1);

  04314	e3a03001	 mov         r3, #1
  04318	e28d2008	 add         r2, sp, #8
  0431c	e3a01803	 mov         r1, #3, 16
  04320	e381103d	 orr         r1, r1, #0x3D
  04324	e59d0024	 ldr         r0, [sp, #0x24]
  04328	e2800018	 add         r0, r0, #0x18
  0432c	e5900000	 ldr         r0, [r0]
  04330	eb000000	 bl          TWLWriteRegs

; 1043 : 
; 1044 :     // disable hw monitoring functions
; 1045 :     dwOVMon = QueryVoltageMonitors(pDevice);

  04334	e59d0024	 ldr         r0, [sp, #0x24]
  04338	eb000000	 bl          QueryVoltageMonitors
  0433c	e58d0014	 str         r0, [sp, #0x14]
  04340	e59d3014	 ldr         r3, [sp, #0x14]
  04344	e58d3000	 str         r3, [sp]

; 1046 :     SetVoltageMonitors(pDevice, 0, BCI_OV_VBAT | BCI_OV_VBUS | BCI_OV_VAC);

  04348	e3a02007	 mov         r2, #7
  0434c	e3a01000	 mov         r1, #0
  04350	e59d0024	 ldr         r0, [sp, #0x24]
  04354	eb000000	 bl          SetVoltageMonitors

; 1047 : 
; 1048 :     UpdateChargeCurrent(pDevice, pDevice->usbChargeCurrent);    

  04358	e59d3024	 ldr         r3, [sp, #0x24]
  0435c	e2833038	 add         r3, r3, #0x38
  04360	e1d310b0	 ldrh        r1, [r3]
  04364	e59d0024	 ldr         r0, [sp, #0x24]
  04368	eb000000	 bl          UpdateChargeCurrent

; 1049 : 
; 1050 :     // put device in USB Linear charge mode
; 1051 :     data = KEY_BCIOFF;

  0436c	e3a0302a	 mov         r3, #0x2A
  04370	e5cd3008	 strb        r3, [sp, #8]

; 1052 :     TWLWriteRegs(pDevice->hTwl, TWL_BCIMDKEY, &data, 1);

  04374	e3a03001	 mov         r3, #1
  04378	e28d2008	 add         r2, sp, #8
  0437c	e3a01802	 mov         r1, #2, 16
  04380	e3811075	 orr         r1, r1, #0x75
  04384	e59d0024	 ldr         r0, [sp, #0x24]
  04388	e2800018	 add         r0, r0, #0x18
  0438c	e5900000	 ldr         r0, [r0]
  04390	eb000000	 bl          TWLWriteRegs

; 1053 : 
; 1054 :     // indicate USB-host charge
; 1055 :     data = USBSLOWMCHG;

  04394	e3a03002	 mov         r3, #2
  04398	e5cd3008	 strb        r3, [sp, #8]

; 1056 :     TWLWriteRegs(pDevice->hTwl, TWL_BCIMFSTS4, &data, 1);

  0439c	e3a03001	 mov         r3, #1
  043a0	e28d2008	 add         r2, sp, #8
  043a4	e3a01802	 mov         r1, #2, 16
  043a8	e3811084	 orr         r1, r1, #0x84
  043ac	e59d0024	 ldr         r0, [sp, #0x24]
  043b0	e2800018	 add         r0, r0, #0x18
  043b4	e5900000	 ldr         r0, [r0]
  043b8	eb000000	 bl          TWLWriteRegs

; 1057 : 
; 1058 :     data = KEY_BCIUSBLINEAR;

  043bc	e3a03026	 mov         r3, #0x26
  043c0	e5cd3008	 strb        r3, [sp, #8]

; 1059 :     TWLWriteRegs(pDevice->hTwl, TWL_BCIMDKEY, &data, 1);

  043c4	e3a03001	 mov         r3, #1
  043c8	e28d2008	 add         r2, sp, #8
  043cc	e3a01802	 mov         r1, #2, 16
  043d0	e3811075	 orr         r1, r1, #0x75
  043d4	e59d0024	 ldr         r0, [sp, #0x24]
  043d8	e2800018	 add         r0, r0, #0x18
  043dc	e5900000	 ldr         r0, [r0]
  043e0	eb000000	 bl          TWLWriteRegs

; 1060 : 
; 1061 :     // disable watchdog
; 1062 :     data = KEY_BCIWDKEY5;

  043e4	e3a030f3	 mov         r3, #0xF3
  043e8	e5cd3008	 strb        r3, [sp, #8]

; 1063 :     TWLWriteRegs(pDevice->hTwl, TWL_BCIWDKEY, &data, 1);

  043ec	e3a03001	 mov         r3, #1
  043f0	e28d2008	 add         r2, sp, #8
  043f4	e3a01802	 mov         r1, #2, 16
  043f8	e3811095	 orr         r1, r1, #0x95
  043fc	e59d0024	 ldr         r0, [sp, #0x24]
  04400	e2800018	 add         r0, r0, #0x18
  04404	e5900000	 ldr         r0, [r0]
  04408	eb000000	 bl          TWLWriteRegs

; 1064 : 
; 1065 :     // re-enable monitoring functions
; 1066 :     if ((pDevice->dwACCHGOVTH & THRESHOLD_DISABLED) == 0) dwOVMon |= BCI_OV_VAC;

  0440c	e59d3024	 ldr         r3, [sp, #0x24]
  04410	e2833044	 add         r3, r3, #0x44
  04414	e5933000	 ldr         r3, [r3]
  04418	e3130102	 tst         r3, #2, 2
  0441c	1a000002	 bne         |$LN3@SetChargeM@2|
  04420	e59d3000	 ldr         r3, [sp]
  04424	e3833004	 orr         r3, r3, #4
  04428	e58d3000	 str         r3, [sp]
  0442c		 |$LN3@SetChargeM@2|

; 1067 :     if ((pDevice->dwVBUSOVTH & THRESHOLD_DISABLED) == 0) dwOVMon |= BCI_OV_VBUS;

  0442c	e59d3024	 ldr         r3, [sp, #0x24]
  04430	e283304c	 add         r3, r3, #0x4C
  04434	e5933000	 ldr         r3, [r3]
  04438	e3130102	 tst         r3, #2, 2
  0443c	1a000002	 bne         |$LN2@SetChargeM@2|
  04440	e59d3000	 ldr         r3, [sp]
  04444	e3833002	 orr         r3, r3, #2
  04448	e58d3000	 str         r3, [sp]
  0444c		 |$LN2@SetChargeM@2|

; 1068 :     if ((pDevice->dwVBATOVTH & THRESHOLD_DISABLED) == 0) dwOVMon |= BCI_OV_VBAT;

  0444c	e59d3024	 ldr         r3, [sp, #0x24]
  04450	e2833048	 add         r3, r3, #0x48
  04454	e5933000	 ldr         r3, [r3]
  04458	e3130102	 tst         r3, #2, 2
  0445c	1a000002	 bne         |$LN1@SetChargeM@2|
  04460	e59d3000	 ldr         r3, [sp]
  04464	e3833001	 orr         r3, r3, #1
  04468	e58d3000	 str         r3, [sp]
  0446c		 |$LN1@SetChargeM@2|

; 1069 :     SetVoltageMonitors(pDevice, dwOVMon, BCI_OV_VBAT | BCI_OV_VBUS | BCI_OV_VAC);

  0446c	e3a02007	 mov         r2, #7
  04470	e59d1000	 ldr         r1, [sp]
  04474	e59d0024	 ldr         r0, [sp, #0x24]
  04478	eb000000	 bl          SetVoltageMonitors

; 1070 : 
; 1071 :     TWLReadRegs(pDevice->hTwl, TWL_BCICTL1, &data, 1);

  0447c	e3a03001	 mov         r3, #1
  04480	e28d2008	 add         r2, sp, #8
  04484	e3a01802	 mov         r1, #2, 16
  04488	e3811097	 orr         r1, r1, #0x97
  0448c	e59d0024	 ldr         r0, [sp, #0x24]
  04490	e2800018	 add         r0, r0, #0x18
  04494	e5900000	 ldr         r0, [r0]
  04498	eb000000	 bl          TWLReadRegs

; 1072 :     data |= MESVBUS;

  0449c	e5dd3008	 ldrb        r3, [sp, #8]
  044a0	e3833004	 orr         r3, r3, #4
  044a4	e20330ff	 and         r3, r3, #0xFF
  044a8	e5cd3008	 strb        r3, [sp, #8]

; 1073 :     TWLWriteRegs(pDevice->hTwl, TWL_BCICTL1, &data, 1);

  044ac	e3a03001	 mov         r3, #1
  044b0	e28d2008	 add         r2, sp, #8
  044b4	e3a01802	 mov         r1, #2, 16
  044b8	e3811097	 orr         r1, r1, #0x97
  044bc	e59d0024	 ldr         r0, [sp, #0x24]
  044c0	e2800018	 add         r0, r0, #0x18
  044c4	e5900000	 ldr         r0, [r0]
  044c8	eb000000	 bl          TWLWriteRegs

; 1074 :         
; 1075 :     DEBUGMSG(ZONE_FUNCTION, (L"-SetChargeMode_USBHost()\r\n"));

  044cc	e59f3040	 ldr         r3, [pc, #0x40]
  044d0	e5933440	 ldr         r3, [r3, #0x440]
  044d4	e3130080	 tst         r3, #0x80
  044d8	0a000004	 beq         |$LN8@SetChargeM@2|
  044dc	e59f002c	 ldr         r0, [pc, #0x2C]
  044e0	eb000000	 bl          NKDbgPrintfW
  044e4	e3a03001	 mov         r3, #1
  044e8	e58d3018	 str         r3, [sp, #0x18]
  044ec	ea000001	 b           |$LN9@SetChargeM@2|
  044f0		 |$LN8@SetChargeM@2|
  044f0	e3a03000	 mov         r3, #0
  044f4	e58d3018	 str         r3, [sp, #0x18]
  044f8		 |$LN9@SetChargeM@2|

; 1076 :     return bResult;

  044f8	e59d3004	 ldr         r3, [sp, #4]
  044fc	e58d300c	 str         r3, [sp, #0xC]

; 1077 : }

  04500	e59d000c	 ldr         r0, [sp, #0xC]
  04504	e28dd01c	 add         sp, sp, #0x1C
  04508	e89d6000	 ldmia       sp, {sp, lr}
  0450c	e12fff1e	 bx          lr
  04510		 |$LN13@SetChargeM@2|
  04510		 |$LN14@SetChargeM@2|
  04510	00000000	 DCD         |??_C@_1DG@MMAJOPEM@?$AA?9?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA_?$AAU?$AAS?$AAB?$AAH?$AAo?$AAs?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  04514		 |$LN15@SetChargeM@2|
  04514	00000000	 DCD         |dpCurSettings|
  04518		 |$LN16@SetChargeM@2|
  04518	00000000	 DCD         |??_C@_1FC@FDJGEDFM@?$AA?$CL?$AAS?$AAe?$AAt?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAM?$AAo?$AAd?$AAe?$AA_?$AAU?$AAS?$AAB?$AAH?$AAo?$AAs?$AAt?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0@|
  0451c		 |$M45523|

			 ENDP  ; |SetChargeMode_USBHost|

	EXPORT	|??_C@_1CG@KIHEPBFA@?$AA?9?$AAI?$AAs?$AAV?$AAA?$AAC?$AAV?$AAa?$AAl?$AAi?$AAd?$AA?$CI?$AA?$CJ?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@EAEJOHNO@?$AA?$CL?$AAI?$AAs?$AAV?$AAA?$AAC?$AAV?$AAa?$AAl?$AAi?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00130			 AREA	 |.pdata|, PDATA
|$T45540| DCD	|$LN11@IsVACValid|
	DCD	0x40006804

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@KIHEPBFA@?$AA?9?$AAI?$AAs?$AAV?$AAA?$AAC?$AAV?$AAa?$AAl?$AAi?$AAd?$AA?$CI?$AA?$CJ?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "I", 0x0, "s", 0x0, "V", 0x0, "A", 0x0, "C", 0x0, "V"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, "(", 0x0, ")"
	DCB	0x0, "=", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@EAEJOHNO@?$AA?$CL?$AAI?$AAs?$AAV?$AAA?$AAC?$AAV?$AAa?$AAl?$AAi?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "I", 0x0, "s", 0x0, "V", 0x0, "A", 0x0, "C", 0x0, "V"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, "(", 0x0, "p"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  0451c			 AREA	 |.text|, CODE, ARM

  0451c		 |IsVACValid| PROC

; 2111 : {

  0451c		 |$LN11@IsVACValid|
  0451c	e1a0c00d	 mov         r12, sp
  04520	e92d0001	 stmdb       sp!, {r0}
  04524	e92d5000	 stmdb       sp!, {r12, lr}
  04528	e24dd02c	 sub         sp, sp, #0x2C
  0452c		 |$M45537|

; 2112 :     UINT8 fMESOrig;
; 2113 :     UINT8 fMESOut;
; 2114 :     DWORD dwResult;
; 2115 :     DWORD dwVAC_mv = 0;

  0452c	e3a03000	 mov         r3, #0
  04530	e58d3014	 str         r3, [sp, #0x14]

; 2116 :     DWORD dwVACReading;
; 2117 :     BOOL bValid = FALSE;

  04534	e3a03000	 mov         r3, #0
  04538	e58d3008	 str         r3, [sp, #8]

; 2118 :     DEBUGMSG(ZONE_FUNCTION, (L"+IsVACValid(pDevice=0x%08X)\r\n", pDevice));

  0453c	e59f3170	 ldr         r3, [pc, #0x170]
  04540	e5933440	 ldr         r3, [r3, #0x440]
  04544	e3130080	 tst         r3, #0x80
  04548	0a000005	 beq         |$LN5@IsVACValid|
  0454c	e59d1034	 ldr         r1, [sp, #0x34]
  04550	e59f0160	 ldr         r0, [pc, #0x160]
  04554	eb000000	 bl          NKDbgPrintfW
  04558	e3a03001	 mov         r3, #1
  0455c	e58d3020	 str         r3, [sp, #0x20]
  04560	ea000001	 b           |$LN6@IsVACValid|
  04564		 |$LN5@IsVACValid|
  04564	e3a03000	 mov         r3, #0
  04568	e58d3020	 str         r3, [sp, #0x20]
  0456c		 |$LN6@IsVACValid|

; 2119 : 
; 2120 :     // first we need to enable the pre-scaler to get any measurements from madc
; 2121 :     TWLReadRegs(pDevice->hTwl, TWL_BCICTL1, &fMESOrig, 1);

  0456c	e3a03001	 mov         r3, #1
  04570	e28d2005	 add         r2, sp, #5
  04574	e3a01802	 mov         r1, #2, 16
  04578	e3811097	 orr         r1, r1, #0x97
  0457c	e59d0034	 ldr         r0, [sp, #0x34]
  04580	e2800018	 add         r0, r0, #0x18
  04584	e5900000	 ldr         r0, [r0]
  04588	eb000000	 bl          TWLReadRegs

; 2122 :     fMESOut = fMESOrig | MESVAC;

  0458c	e5dd3005	 ldrb        r3, [sp, #5]
  04590	e3833001	 orr         r3, r3, #1
  04594	e20330ff	 and         r3, r3, #0xFF
  04598	e5cd3004	 strb        r3, [sp, #4]

; 2123 :     TWLWriteRegs(pDevice->hTwl, TWL_BCICTL1, &fMESOut, 1);

  0459c	e3a03001	 mov         r3, #1
  045a0	e28d2004	 add         r2, sp, #4
  045a4	e3a01802	 mov         r1, #2, 16
  045a8	e3811097	 orr         r1, r1, #0x97
  045ac	e59d0034	 ldr         r0, [sp, #0x34]
  045b0	e2800018	 add         r0, r0, #0x18
  045b4	e5900000	 ldr         r0, [r0]
  045b8	eb000000	 bl          TWLWriteRegs

; 2124 : 
; 2125 :     // check if AC is connected
; 2126 :     dwResult = MADCReadValue(pDevice->hMadc, VAC_CHANNEL, &dwVACReading, 1);

  045bc	e3a03001	 mov         r3, #1
  045c0	e28d2010	 add         r2, sp, #0x10
  045c4	e3a01b02	 mov         r1, #2, 22
  045c8	e59d0034	 ldr         r0, [sp, #0x34]
  045cc	e280001c	 add         r0, r0, #0x1C
  045d0	e5900000	 ldr         r0, [r0]
  045d4	eb000000	 bl          MADCReadValue
  045d8	e58d0024	 str         r0, [sp, #0x24]
  045dc	e59d3024	 ldr         r3, [sp, #0x24]
  045e0	e58d300c	 str         r3, [sp, #0xC]

; 2127 :     if (dwResult != 0)

  045e4	e59d300c	 ldr         r3, [sp, #0xC]
  045e8	e3530000	 cmp         r3, #0
  045ec	0a000015	 beq         |$LN2@IsVACValid|

; 2128 :         {
; 2129 :         // convert results to voltage
; 2130 :         MADCConvertToVolts(pDevice->hMadc, VAC_CHANNEL,
; 2131 :             &dwVACReading, &dwVAC_mv, 1);

  045f0	e3a03001	 mov         r3, #1
  045f4	e58d3000	 str         r3, [sp]
  045f8	e28d3014	 add         r3, sp, #0x14
  045fc	e28d2010	 add         r2, sp, #0x10
  04600	e3a01b02	 mov         r1, #2, 22
  04604	e59d0034	 ldr         r0, [sp, #0x34]
  04608	e280001c	 add         r0, r0, #0x1C
  0460c	e5900000	 ldr         r0, [r0]
  04610	eb000000	 bl          MADCConvertToVolts

; 2132 :         
; 2133 :         // is the result above the ac threshold?
; 2134 :         if (ACMINVOLT <= dwVAC_mv && dwVAC_mv < pDevice->dwACCHGOVTH) 

  04614	e59d2014	 ldr         r2, [sp, #0x14]
  04618	e3a03b03	 mov         r3, #3, 22
  0461c	e38330e4	 orr         r3, r3, #0xE4
  04620	e1520003	 cmp         r2, r3
  04624	3a000007	 bcc         |$LN1@IsVACValid|
  04628	e59d3034	 ldr         r3, [sp, #0x34]
  0462c	e2833044	 add         r3, r3, #0x44
  04630	e59d2014	 ldr         r2, [sp, #0x14]
  04634	e5933000	 ldr         r3, [r3]
  04638	e1520003	 cmp         r2, r3
  0463c	2a000001	 bcs         |$LN1@IsVACValid|

; 2135 :             {
; 2136 :             bValid = TRUE;

  04640	e3a03001	 mov         r3, #1
  04644	e58d3008	 str         r3, [sp, #8]
  04648		 |$LN1@IsVACValid|
  04648		 |$LN2@IsVACValid|

; 2137 :             }
; 2138 :         }
; 2139 : 
; 2140 :     TWLWriteRegs(pDevice->hTwl, TWL_BCICTL1, &fMESOrig, 1);

  04648	e3a03001	 mov         r3, #1
  0464c	e28d2005	 add         r2, sp, #5
  04650	e3a01802	 mov         r1, #2, 16
  04654	e3811097	 orr         r1, r1, #0x97
  04658	e59d0034	 ldr         r0, [sp, #0x34]
  0465c	e2800018	 add         r0, r0, #0x18
  04660	e5900000	 ldr         r0, [r0]
  04664	eb000000	 bl          TWLWriteRegs

; 2141 :            
; 2142 :     DEBUGMSG(ZONE_FUNCTION, (L"-IsVACValid()=%d\r\n", bValid));

  04668	e59f3044	 ldr         r3, [pc, #0x44]
  0466c	e5933440	 ldr         r3, [r3, #0x440]
  04670	e3130080	 tst         r3, #0x80
  04674	0a000005	 beq         |$LN7@IsVACValid|
  04678	e59d1008	 ldr         r1, [sp, #8]
  0467c	e59f002c	 ldr         r0, [pc, #0x2C]
  04680	eb000000	 bl          NKDbgPrintfW
  04684	e3a03001	 mov         r3, #1
  04688	e58d3028	 str         r3, [sp, #0x28]
  0468c	ea000001	 b           |$LN8@IsVACValid|
  04690		 |$LN7@IsVACValid|
  04690	e3a03000	 mov         r3, #0
  04694	e58d3028	 str         r3, [sp, #0x28]
  04698		 |$LN8@IsVACValid|

; 2143 :     return bValid;

  04698	e59d3008	 ldr         r3, [sp, #8]
  0469c	e58d301c	 str         r3, [sp, #0x1C]

; 2144 : }

  046a0	e59d001c	 ldr         r0, [sp, #0x1C]
  046a4	e28dd02c	 add         sp, sp, #0x2C
  046a8	e89d6000	 ldmia       sp, {sp, lr}
  046ac	e12fff1e	 bx          lr
  046b0		 |$LN12@IsVACValid|
  046b0		 |$LN13@IsVACValid|
  046b0	00000000	 DCD         |??_C@_1CG@KIHEPBFA@?$AA?9?$AAI?$AAs?$AAV?$AAA?$AAC?$AAV?$AAa?$AAl?$AAi?$AAd?$AA?$CI?$AA?$CJ?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  046b4		 |$LN14@IsVACValid|
  046b4	00000000	 DCD         |dpCurSettings|
  046b8		 |$LN15@IsVACValid|
  046b8	00000000	 DCD         |??_C@_1DM@EAEJOHNO@?$AA?$CL?$AAI?$AAs?$AAV?$AAA?$AAC?$AAV?$AAa?$AAl?$AAi?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  046bc		 |$M45538|

			 ENDP  ; |IsVACValid|

	EXPORT	|??_C@_1CI@MMBCFBFG@?$AA?9?$AAI?$AAs?$AAV?$AAB?$AAU?$AAS?$AAV?$AAa?$AAl?$AAi?$AAd?$AA?$CI?$AA?$CJ?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@GPMAJPHA@?$AA?$CL?$AAI?$AAs?$AAV?$AAB?$AAU?$AAS?$AAV?$AAa?$AAl?$AAi?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00138			 AREA	 |.pdata|, PDATA
|$T45555| DCD	|$LN12@IsVBUSVali|
	DCD	0x40006d04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@MMBCFBFG@?$AA?9?$AAI?$AAs?$AAV?$AAB?$AAU?$AAS?$AAV?$AAa?$AAl?$AAi?$AAd?$AA?$CI?$AA?$CJ?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "I", 0x0, "s", 0x0, "V", 0x0, "B", 0x0, "U", 0x0, "S"
	DCB	0x0, "V", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, "("
	DCB	0x0, ")", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@GPMAJPHA@?$AA?$CL?$AAI?$AAs?$AAV?$AAB?$AAU?$AAS?$AAV?$AAa?$AAl?$AAi?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "I", 0x0, "s", 0x0, "V", 0x0, "B", 0x0, "U", 0x0, "S"
	DCB	0x0, "V", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, "("
	DCB	0x0, "p", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c"
	DCB	0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  046bc			 AREA	 |.text|, CODE, ARM

  046bc		 |IsVBUSValid| PROC

; 2156 : {

  046bc		 |$LN12@IsVBUSVali|
  046bc	e1a0c00d	 mov         r12, sp
  046c0	e92d0001	 stmdb       sp!, {r0}
  046c4	e92d5000	 stmdb       sp!, {r12, lr}
  046c8	e24dd030	 sub         sp, sp, #0x30
  046cc		 |$M45552|

; 2157 :     UINT8 fMESOrig;
; 2158 :     UINT8 fMESOut;
; 2159 :     DWORD dwResult;
; 2160 :     DWORD dwVBUS_mv = 0;

  046cc	e3a03000	 mov         r3, #0
  046d0	e58d300c	 str         r3, [sp, #0xC]

; 2161 :     DWORD dwVBUSReading;
; 2162 :     BOOL bValid = FALSE;

  046d4	e3a03000	 mov         r3, #0
  046d8	e58d3014	 str         r3, [sp, #0x14]

; 2163 :     DEBUGMSG(ZONE_FUNCTION, (L"+IsVBUSValid(pDevice=0x%08X)\r\n", pDevice));

  046dc	e59f3184	 ldr         r3, [pc, #0x184]
  046e0	e5933440	 ldr         r3, [r3, #0x440]
  046e4	e3130080	 tst         r3, #0x80
  046e8	0a000005	 beq         |$LN6@IsVBUSVali|
  046ec	e59d1038	 ldr         r1, [sp, #0x38]
  046f0	e59f0174	 ldr         r0, [pc, #0x174]
  046f4	eb000000	 bl          NKDbgPrintfW
  046f8	e3a03001	 mov         r3, #1
  046fc	e58d3024	 str         r3, [sp, #0x24]
  04700	ea000001	 b           |$LN7@IsVBUSVali|
  04704		 |$LN6@IsVBUSVali|
  04704	e3a03000	 mov         r3, #0
  04708	e58d3024	 str         r3, [sp, #0x24]
  0470c		 |$LN7@IsVBUSVali|

; 2164 : 
; 2165 :     // check if notified of a USB connection
; 2166 :     if (pDevice->bAttached_USBHost != FALSE)

  0470c	e59d3038	 ldr         r3, [sp, #0x38]
  04710	e2833064	 add         r3, r3, #0x64
  04714	e5933000	 ldr         r3, [r3]
  04718	e3530000	 cmp         r3, #0
  0471c	0a00003e	 beq         |$LN3@IsVBUSVali|

; 2167 :         {
; 2168 :         // first we need to enable the pre-scaler to get any measurements from madc
; 2169 :         TWLReadRegs(pDevice->hTwl, TWL_BCICTL1, &fMESOrig, 1);

  04720	e3a03001	 mov         r3, #1
  04724	e28d2010	 add         r2, sp, #0x10
  04728	e3a01802	 mov         r1, #2, 16
  0472c	e3811097	 orr         r1, r1, #0x97
  04730	e59d0038	 ldr         r0, [sp, #0x38]
  04734	e2800018	 add         r0, r0, #0x18
  04738	e5900000	 ldr         r0, [r0]
  0473c	eb000000	 bl          TWLReadRegs

; 2170 :         fMESOut = fMESOrig | MESVBUS;

  04740	e5dd3010	 ldrb        r3, [sp, #0x10]
  04744	e3833004	 orr         r3, r3, #4
  04748	e20330ff	 and         r3, r3, #0xFF
  0474c	e5cd3004	 strb        r3, [sp, #4]

; 2171 :         TWLWriteRegs(pDevice->hTwl, TWL_BCICTL1, &fMESOut, 1);

  04750	e3a03001	 mov         r3, #1
  04754	e28d2004	 add         r2, sp, #4
  04758	e3a01802	 mov         r1, #2, 16
  0475c	e3811097	 orr         r1, r1, #0x97
  04760	e59d0038	 ldr         r0, [sp, #0x38]
  04764	e2800018	 add         r0, r0, #0x18
  04768	e5900000	 ldr         r0, [r0]
  0476c	eb000000	 bl          TWLWriteRegs

; 2172 :         
; 2173 :         // check if vbus is connected
; 2174 :         dwResult = MADCReadValue(pDevice->hMadc, VBUS_CHANNEL, &dwVBUSReading, 1);

  04770	e3a03001	 mov         r3, #1
  04774	e28d2008	 add         r2, sp, #8
  04778	e3a01c01	 mov         r1, #1, 24
  0477c	e59d0038	 ldr         r0, [sp, #0x38]
  04780	e280001c	 add         r0, r0, #0x1C
  04784	e5900000	 ldr         r0, [r0]
  04788	eb000000	 bl          MADCReadValue
  0478c	e58d0028	 str         r0, [sp, #0x28]
  04790	e59d3028	 ldr         r3, [sp, #0x28]
  04794	e58d3018	 str         r3, [sp, #0x18]

; 2175 :         if (dwResult != 0)

  04798	e59d3018	 ldr         r3, [sp, #0x18]
  0479c	e3530000	 cmp         r3, #0
  047a0	0a000015	 beq         |$LN2@IsVBUSVali|

; 2176 :             {
; 2177 :             // convert results to voltage
; 2178 :             MADCConvertToVolts(pDevice->hMadc, VBUS_CHANNEL,
; 2179 :                 &dwVBUSReading, &dwVBUS_mv, 1);

  047a4	e3a03001	 mov         r3, #1
  047a8	e58d3000	 str         r3, [sp]
  047ac	e28d300c	 add         r3, sp, #0xC
  047b0	e28d2008	 add         r2, sp, #8
  047b4	e3a01c01	 mov         r1, #1, 24
  047b8	e59d0038	 ldr         r0, [sp, #0x38]
  047bc	e280001c	 add         r0, r0, #0x1C
  047c0	e5900000	 ldr         r0, [r0]
  047c4	eb000000	 bl          MADCConvertToVolts

; 2180 :             
; 2181 :             // is the result above the ac threshold?
; 2182 :             if (VBUSMINVOLT <= dwVBUS_mv && dwVBUS_mv < pDevice->dwVBUSOVTH) 

  047c8	e59d200c	 ldr         r2, [sp, #0xC]
  047cc	e3a03c0b	 mov         r3, #0xB, 24
  047d0	e38330b8	 orr         r3, r3, #0xB8
  047d4	e1520003	 cmp         r2, r3
  047d8	3a000007	 bcc         |$LN1@IsVBUSVali|
  047dc	e59d3038	 ldr         r3, [sp, #0x38]
  047e0	e283304c	 add         r3, r3, #0x4C
  047e4	e59d200c	 ldr         r2, [sp, #0xC]
  047e8	e5933000	 ldr         r3, [r3]
  047ec	e1520003	 cmp         r2, r3
  047f0	2a000001	 bcs         |$LN1@IsVBUSVali|

; 2183 :                 {
; 2184 :                 bValid = TRUE;

  047f4	e3a03001	 mov         r3, #1
  047f8	e58d3014	 str         r3, [sp, #0x14]
  047fc		 |$LN1@IsVBUSVali|
  047fc		 |$LN2@IsVBUSVali|

; 2185 :                 }
; 2186 :             }
; 2187 : 
; 2188 :         TWLWriteRegs(pDevice->hTwl, TWL_BCICTL1, &fMESOrig, 1);

  047fc	e3a03001	 mov         r3, #1
  04800	e28d2010	 add         r2, sp, #0x10
  04804	e3a01802	 mov         r1, #2, 16
  04808	e3811097	 orr         r1, r1, #0x97
  0480c	e59d0038	 ldr         r0, [sp, #0x38]
  04810	e2800018	 add         r0, r0, #0x18
  04814	e5900000	 ldr         r0, [r0]
  04818	eb000000	 bl          TWLWriteRegs
  0481c		 |$LN3@IsVBUSVali|

; 2189 :         }
; 2190 :       
; 2191 :     DEBUGMSG(ZONE_FUNCTION, (L"-IsVBUSValid()=%d\r\n", bValid));

  0481c	e59f3044	 ldr         r3, [pc, #0x44]
  04820	e5933440	 ldr         r3, [r3, #0x440]
  04824	e3130080	 tst         r3, #0x80
  04828	0a000005	 beq         |$LN8@IsVBUSVali|
  0482c	e59d1014	 ldr         r1, [sp, #0x14]
  04830	e59f002c	 ldr         r0, [pc, #0x2C]
  04834	eb000000	 bl          NKDbgPrintfW
  04838	e3a03001	 mov         r3, #1
  0483c	e58d302c	 str         r3, [sp, #0x2C]
  04840	ea000001	 b           |$LN9@IsVBUSVali|
  04844		 |$LN8@IsVBUSVali|
  04844	e3a03000	 mov         r3, #0
  04848	e58d302c	 str         r3, [sp, #0x2C]
  0484c		 |$LN9@IsVBUSVali|

; 2192 :     return bValid;

  0484c	e59d3014	 ldr         r3, [sp, #0x14]
  04850	e58d3020	 str         r3, [sp, #0x20]

; 2193 : }

  04854	e59d0020	 ldr         r0, [sp, #0x20]
  04858	e28dd030	 add         sp, sp, #0x30
  0485c	e89d6000	 ldmia       sp, {sp, lr}
  04860	e12fff1e	 bx          lr
  04864		 |$LN13@IsVBUSVali|
  04864		 |$LN14@IsVBUSVali|
  04864	00000000	 DCD         |??_C@_1CI@MMBCFBFG@?$AA?9?$AAI?$AAs?$AAV?$AAB?$AAU?$AAS?$AAV?$AAa?$AAl?$AAi?$AAd?$AA?$CI?$AA?$CJ?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  04868		 |$LN15@IsVBUSVali|
  04868	00000000	 DCD         |dpCurSettings|
  0486c		 |$LN16@IsVBUSVali|
  0486c	00000000	 DCD         |??_C@_1DO@GPMAJPHA@?$AA?$CL?$AAI?$AAs?$AAV?$AAB?$AAU?$AAS?$AAV?$AAa?$AAl?$AAi?$AAd?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  04870		 |$M45553|

			 ENDP  ; |IsVBUSValid|

	END
