; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\OMAP3530\PM\CONSTRAINTADAPTERS\POWERDOMAINCONSTRAINT\powerdomaincontext.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??Diterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBAAAPAUPowerDomainCallbackInfo_t@@XZ| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator*
	EXPORT	|??9iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBA_NABV012@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator!=
	EXPORT	|?end@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@XZ| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::end
	EXPORT	|??Eiterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAAAAV012@XZ| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator++
	EXPORT	|?begin@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@XZ| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::begin
	EXPORT	|GetCurrentThreadId|
	EXPORT	|??0iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@XZ| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::iterator
	EXPORT	|?NotifyDomainCallbacks@@YAXIIK@Z|	; NotifyDomainCallbacks
	IMPORT	|memcpy|

  00000			 AREA	 |.pdata|, PDATA
|$T42272| DCD	|$LN9@NotifyDoma|
	DCD	0x40005104
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\pm\constraintadapters\powerdomainconstraint\powerdomaincontext.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?NotifyDomainCallbacks@@YAXIIK@Z| PROC ; NotifyDomainCallbacks

; 108  : {

  00000		 |$LN9@NotifyDoma|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5010	 stmdb       sp!, {r4, r12, lr}
  0000c	e24dd034	 sub         sp, sp, #0x34
  00010		 |$M42269|

; 109  :     POWERDOMAIN_CONSTRAINT_INFO constraintInfo;
; 110  :     list<PowerDomainCallbackInfo_t*>::iterator iter;

  00010	e28d0000	 add         r0, sp, #0
  00014	eb000000	 bl          |??0iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@XZ|

; 111  : 
; 112  :     // Prevent further modification until all clients are notified.
; 113  :     s_PowerDomainInfo.bCallbackMode = TRUE;

  00018	e59f211c	 ldr         r2, [pc, #0x11C]
  0001c	e3a03001	 mov         r3, #1
  00020	e5823014	 str         r3, [r2, #0x14]

; 114  :     s_PowerDomainInfo.currentTID = GetCurrentThreadId();

  00024	eb000000	 bl          GetCurrentThreadId
  00028	e58d0018	 str         r0, [sp, #0x18]
  0002c	e59d2018	 ldr         r2, [sp, #0x18]
  00030	e59f3104	 ldr         r3, [pc, #0x104]
  00034	e5832018	 str         r2, [r3, #0x18]

; 115  : 
; 116  :     // initialize data structure
; 117  :     constraintInfo.state = state;

  00038	e59d3044	 ldr         r3, [sp, #0x44]
  0003c	e58d300c	 str         r3, [sp, #0xC]

; 118  :     constraintInfo.powerDomain = powerDomain;

  00040	e59d3040	 ldr         r3, [sp, #0x40]
  00044	e58d3008	 str         r3, [sp, #8]

; 119  :     constraintInfo.size = sizeof(POWERDOMAIN_CONSTRAINT_INFO);

  00048	e3a0300c	 mov         r3, #0xC
  0004c	e58d3004	 str         r3, [sp, #4]

; 120  :     
; 121  :     for (iter = s_CallbackList.begin(); iter != s_CallbackList.end(); ++iter)

  00050	e28d1010	 add         r1, sp, #0x10
  00054	e59f00e4	 ldr         r0, [pc, #0xE4]
  00058	eb000000	 bl          |?begin@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@XZ|
  0005c	e58d001c	 str         r0, [sp, #0x1C]
  00060	e59d101c	 ldr         r1, [sp, #0x1C]
  00064	e28d0000	 add         r0, sp, #0
  00068	e3a02004	 mov         r2, #4
  0006c	eb000000	 bl          memcpy
  00070	ea000001	 b           |$LN4@NotifyDoma|
  00074		 |$LN3@NotifyDoma|
  00074	e28d0000	 add         r0, sp, #0
  00078	eb000000	 bl          |??Eiterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAAAAV012@XZ|
  0007c		 |$LN4@NotifyDoma|
  0007c	e28d1014	 add         r1, sp, #0x14
  00080	e59f00b8	 ldr         r0, [pc, #0xB8]
  00084	eb000000	 bl          |?end@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@XZ|
  00088	e58d0020	 str         r0, [sp, #0x20]
  0008c	e59d1020	 ldr         r1, [sp, #0x20]
  00090	e28d0000	 add         r0, sp, #0
  00094	eb000000	 bl          |??9iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBA_NABV012@@Z|
  00098	e5cd0024	 strb        r0, [sp, #0x24]
  0009c	e5dd3024	 ldrb        r3, [sp, #0x24]
  000a0	e3530000	 cmp         r3, #0
  000a4	0a00001e	 beq         |$LN2@NotifyDoma|

; 122  :         {
; 123  :         // don't notify the caller who triggered the change
; 124  :         if ((*iter)->idContext == idContext) continue;

  000a8	e28d0000	 add         r0, sp, #0
  000ac	eb000000	 bl          |??Diterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBAAAPAUPowerDomainCallbackInfo_t@@XZ|
  000b0	e58d0028	 str         r0, [sp, #0x28]
  000b4	e59d3028	 ldr         r3, [sp, #0x28]
  000b8	e5933000	 ldr         r3, [r3]
  000bc	e5932000	 ldr         r2, [r3]
  000c0	e59d3048	 ldr         r3, [sp, #0x48]
  000c4	e1520003	 cmp         r2, r3
  000c8	1a000000	 bne         |$LN1@NotifyDoma|
  000cc	eaffffe8	 b           |$LN3@NotifyDoma|
  000d0		 |$LN1@NotifyDoma|

; 125  : 
; 126  :         // notify callbacks
; 127  :         (*iter)->fnCallback((*iter)->hRefContext, 
; 128  :             CONSTRAINT_MSG_POWERDOMAIN_UPDATE, 
; 129  :             (void*)&constraintInfo,
; 130  :             sizeof(POWERDOMAIN_CONSTRAINT_INFO)
; 131  :             );

  000d0	e28d0000	 add         r0, sp, #0
  000d4	eb000000	 bl          |??Diterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBAAAPAUPowerDomainCallbackInfo_t@@XZ|
  000d8	e58d002c	 str         r0, [sp, #0x2C]
  000dc	e28d0000	 add         r0, sp, #0
  000e0	eb000000	 bl          |??Diterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBAAAPAUPowerDomainCallbackInfo_t@@XZ|
  000e4	e58d0030	 str         r0, [sp, #0x30]
  000e8	e3a0300c	 mov         r3, #0xC
  000ec	e28d2004	 add         r2, sp, #4
  000f0	e3a01802	 mov         r1, #2, 16
  000f4	e3811001	 orr         r1, r1, #1
  000f8	e59d002c	 ldr         r0, [sp, #0x2C]
  000fc	e5900000	 ldr         r0, [r0]
  00100	e2800008	 add         r0, r0, #8
  00104	e5900000	 ldr         r0, [r0]
  00108	e59de030	 ldr         lr, [sp, #0x30]
  0010c	e59ee000	 ldr         lr, [lr]
  00110	e28ee004	 add         lr, lr, #4
  00114	e59e4000	 ldr         r4, [lr]
  00118	e1a0e00f	 mov         lr, pc
  0011c	e12fff14	 bx          r4

; 132  :         }

  00120	eaffffd3	 b           |$LN3@NotifyDoma|
  00124		 |$LN2@NotifyDoma|

; 133  :     
; 134  :     s_PowerDomainInfo.bCallbackMode = FALSE;

  00124	e59f2010	 ldr         r2, [pc, #0x10]
  00128	e3a03000	 mov         r3, #0
  0012c	e5823014	 str         r3, [r2, #0x14]

; 135  : }

  00130	e28dd034	 add         sp, sp, #0x34
  00134	e89d6010	 ldmia       sp, {r4, sp, lr}
  00138	e12fff1e	 bx          lr
  0013c		 |$LN10@NotifyDoma|
  0013c		 |$LN11@NotifyDoma|
  0013c	00000000	 DCD         |s_PowerDomainInfo|
  00140		 |$LN12@NotifyDoma|
  00140	00000000	 DCD         |s_CallbackList|
  00144		 |$M42270|

			 ENDP  ; |?NotifyDomainCallbacks@@YAXIIK@Z|, NotifyDomainCallbacks

	IMPORT	|__GetUserKData|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T42281| DCD	|$LN5@GetCurrent|
	DCD	0x40000b02
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentThreadId| PROC

; 369  : _inline DWORD GetCurrentThreadId(void) {

  00000		 |$LN5@GetCurrent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M42278|

; 370  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURTHREAD * sizeof(HANDLE)));

  00008	e3a00008	 mov         r0, #8
  0000c	eb000000	 bl          __GetUserKData
  00010	e58d0004	 str         r0, [sp, #4]
  00014	e59d3004	 ldr         r3, [sp, #4]
  00018	e58d3000	 str         r3, [sp]

; 371  : }

  0001c	e59d0000	 ldr         r0, [sp]
  00020	e28dd008	 add         sp, sp, #8
  00024	e49de004	 ldr         lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$M42279|

			 ENDP  ; |GetCurrentThreadId|

	EXPORT	|??0NeonPowerDomainConstraint@@QAA@XZ|	; NeonPowerDomainConstraint::NeonPowerDomainConstraint
	EXPORT	|??_C@_19HILOPLKE@?$AAN?$AAE?$AAO?$AAN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??0CameraPowerDomainConstraint@@QAA@XZ| ; CameraPowerDomainConstraint::CameraPowerDomainConstraint
	EXPORT	|??_C@_1O@NAINHJLA@?$AAC?$AAA?$AAM?$AAE?$AAR?$AAA?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??0PeripheralPowerDomainConstraint@@QAA@XZ| ; PeripheralPowerDomainConstraint::PeripheralPowerDomainConstraint
	EXPORT	|??_C@_1BG@CDNAOEMP@?$AAP?$AAE?$AAR?$AAI?$AAP?$AAH?$AAE?$AAR?$AAA?$AAL?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??0SgxPowerDomainConstraint@@QAA@XZ|	; SgxPowerDomainConstraint::SgxPowerDomainConstraint
	EXPORT	|??_C@_17FNJAMJCK@?$AAS?$AAG?$AAX?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??0DssPowerDomainConstraint@@QAA@XZ|	; DssPowerDomainConstraint::DssPowerDomainConstraint
	EXPORT	|??_C@_17GEKIDGJE@?$AAD?$AAS?$AAS?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??0UsbHostPowerDomainConstraint@@QAA@XZ| ; UsbHostPowerDomainConstraint::UsbHostPowerDomainConstraint
	EXPORT	|??_C@_1BA@JFNDBDEI@?$AAU?$AAS?$AAB?$AAH?$AAO?$AAS?$AAT?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??0IvaPowerDomainConstraint@@QAA@XZ|	; IvaPowerDomainConstraint::IvaPowerDomainConstraint
	EXPORT	|??_C@_17FFHACNOC@?$AAI?$AAV?$AAA?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??0CorePowerDomainConstraint@@QAA@XZ|	; CorePowerDomainConstraint::CorePowerDomainConstraint
	EXPORT	|??_C@_19HEMJPKJI@?$AAC?$AAO?$AAR?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??0MpuPowerDomainConstraint@@QAA@XZ|	; MpuPowerDomainConstraint::MpuPowerDomainConstraint
	EXPORT	|??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_17NIBIAAMN@?$AAM?$AAP?$AAU?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|?PWRDOM_InitConstraint@@YAPAXPBG@Z|	; PWRDOM_InitConstraint
	IMPORT	|??3@YAXPAX@Z|				; operator delete
	IMPORT	|InitializeCriticalSection|
	IMPORT	|?InitializePowerDomain@PowerDomainConstraint@@QAAHPBG@Z| ; PowerDomainConstraint::InitializePowerDomain
	IMPORT	|??2@YAPAXI@Z|				; operator new
	IMPORT	|swprintf|
	IMPORT	|memset|
	IMPORT	|__security_cookie|
	IMPORT	|__CxxFrameHandler3|
	IMPORT	|__GSHandlerCheck_EH|
	IMPORT	|__security_check_cookie|

  00008			 AREA	 |.pdata|, PDATA
|$T42360| DCD	|$LN59@PWRDOM_Ini|
	DCD	0xc0019a05
|$T42363| DCD	|__unwind$42321|
	DCD	0x40000602
|$T42366| DCD	|__unwind$42322|
	DCD	0x40000602
|$T42369| DCD	|__unwind$42323|
	DCD	0x40000602
|$T42372| DCD	|__unwind$42324|
	DCD	0x40000602
|$T42375| DCD	|__unwind$42325|
	DCD	0x40000602
|$T42378| DCD	|__unwind$42326|
	DCD	0x40000602
|$T42381| DCD	|__unwind$42327|
	DCD	0x40000602
|$T42384| DCD	|__unwind$42328|
	DCD	0x40000602
|$T42387| DCD	|__unwind$42329|
	DCD	0x40001202
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\pm\constraintadapters\powerdomainconstraint\powerdomaincontext.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_19HILOPLKE@?$AAN?$AAE?$AAO?$AAN?$AA?$AA@| DCB "N", 0x0, "E", 0x0, "O"
	DCB	0x0, "N", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@NAINHJLA@?$AAC?$AAA?$AAM?$AAE?$AAR?$AAA?$AA?$AA@| DCB "C", 0x0, "A"
	DCB	0x0, "M", 0x0, "E", 0x0, "R", 0x0, "A", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@CDNAOEMP@?$AAP?$AAE?$AAR?$AAI?$AAP?$AAH?$AAE?$AAR?$AAA?$AAL?$AA?$AA@| DCB "P"
	DCB	0x0, "E", 0x0, "R", 0x0, "I", 0x0, "P", 0x0, "H", 0x0, "E"
	DCB	0x0, "R", 0x0, "A", 0x0, "L", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17FNJAMJCK@?$AAS?$AAG?$AAX?$AA?$AA@| DCB "S", 0x0, "G", 0x0, "X", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17GEKIDGJE@?$AAD?$AAS?$AAS?$AA?$AA@| DCB "D", 0x0, "S", 0x0, "S", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@JFNDBDEI@?$AAU?$AAS?$AAB?$AAH?$AAO?$AAS?$AAT?$AA?$AA@| DCB "U", 0x0
	DCB	"S", 0x0, "B", 0x0, "H", 0x0, "O", 0x0, "S", 0x0, "T", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17FFHACNOC@?$AAI?$AAV?$AAA?$AA?$AA@| DCB "I", 0x0, "V", 0x0, "A", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_19HEMJPKJI@?$AAC?$AAO?$AAR?$AAE?$AA?$AA@| DCB "C", 0x0, "O", 0x0, "R"
	DCB	0x0, "E", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@| DCB "%", 0x0
	DCB	"s", 0x0, "\\", 0x0, "%", 0x0, "s", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17NIBIAAMN@?$AAM?$AAP?$AAU?$AA?$AA@| DCB "M", 0x0, "P", 0x0, "U", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|__unwindtable$?PWRDOM_InitConstraint@@YAPAXPBG@Z| DCD 0xffffffff
	DCD	|__unwind$42321|
	DCD	0xffffffff
	DCD	|__unwind$42322|
	DCD	0xffffffff
	DCD	|__unwind$42323|
	DCD	0xffffffff
	DCD	|__unwind$42324|
	DCD	0xffffffff
	DCD	|__unwind$42325|
	DCD	0xffffffff
	DCD	|__unwind$42326|
	DCD	0xffffffff
	DCD	|__unwind$42327|
	DCD	0xffffffff
	DCD	|__unwind$42328|
	DCD	0xffffffff
	DCD	|__unwind$42329|
|__ehfuncinfo$?PWRDOM_InitConstraint@@YAPAXPBG@Z| DCD 0x19930522
	DCD	0x9
	DCD	|__unwindtable$?PWRDOM_InitConstraint@@YAPAXPBG@Z|
	DCD	0x0
	DCD	0x0
	DCD	0x12
	DCD	|$T42354|
	DCD	0x0
	DCD	0x1
	DCD	0xffffff7c
|$T42354| DCD	|$M42336|
	DCD	0x0
	DCD	|$M42337|
	DCD	0xffffffff
	DCD	|$M42338|
	DCD	0x1
	DCD	|$M42339|
	DCD	0xffffffff
	DCD	|$M42340|
	DCD	0x2
	DCD	|$M42341|
	DCD	0xffffffff
	DCD	|$M42342|
	DCD	0x3
	DCD	|$M42343|
	DCD	0xffffffff
	DCD	|$M42344|
	DCD	0x4
	DCD	|$M42345|
	DCD	0xffffffff
	DCD	|$M42346|
	DCD	0x5
	DCD	|$M42347|
	DCD	0xffffffff
	DCD	|$M42348|
	DCD	0x6
	DCD	|$M42349|
	DCD	0xffffffff
	DCD	|$M42350|
	DCD	0x7
	DCD	|$M42351|
	DCD	0xffffffff
	DCD	|$M42352|
	DCD	0x8
	DCD	|$M42353|
	DCD	0xffffffff
; Function compile flags: /Odtp

  00144			 AREA	 |.text|, CODE, ARM

  00144	00000000	 DCD         |__GSHandlerCheck_EH|
  00148	00000000	 DCD         |__ehfuncinfo$?PWRDOM_InitConstraint@@YAPAXPBG@Z|

  0014c		 |?PWRDOM_InitConstraint@@YAPAXPBG@Z| PROC ; PWRDOM_InitConstraint

; 147  : {

  0014c		 |$LN59@PWRDOM_Ini|
  0014c	e1a0c00d	 mov         r12, sp
  00150	e92d0001	 stmdb       sp!, {r0}
  00154	e92d5800	 stmdb       sp!, {r11, r12, lr}
  00158	e28db00c	 add         r11, sp, #0xC
  0015c	e24ddfb1	 sub         sp, sp, #0xB1, 30
  00160		 |$M42357|
  00160	e59f3750	 ldr         r3, [pc, #0x750]
  00164	e5933000	 ldr         r3, [r3]
  00168	e50b3080	 str         r3, [r11, #-0x80]

; 148  :     _TCHAR szBuffer[MAX_PATH];
; 149  :     
; 150  :     // Initialize data structure
; 151  :     memset(&s_PowerDomainInfo.rgPowerDomainStates, 0, sizeof(s_PowerDomainInfo.rgPowerDomainStates));

  0016c	e3a02034	 mov         r2, #0x34
  00170	e3a01000	 mov         r1, #0
  00174	e59f3710	 ldr         r3, [pc, #0x710]
  00178	e283001c	 add         r0, r3, #0x1C
  0017c	eb000000	 bl          memset

; 152  : 
; 153  :     // instantiate each power domain which supports constraints
; 154  : 
; 155  :     // mpu
; 156  :     _stprintf(szBuffer, REGEDIT_POWERDOMAIN_FMT, szContext, REGEDIT_POWERDOMAIN_MPU);

  00180	e59f372c	 ldr         r3, [pc, #0x72C]
  00184	e59b2000	 ldr         r2, [r11]
  00188	e59f1700	 ldr         r1, [pc, #0x700]
  0018c	e24b0e2d	 sub         r0, r11, #0x2D, 28
  00190	eb000000	 bl          swprintf

; 157  :     s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_MPU] = new MpuPowerDomainConstraint();

  00194	e3a000b4	 mov         r0, #0xB4
  00198	eb000000	 bl          |??2@YAPAXI@Z|
  0019c	e50b0078	 str         r0, [r11, #-0x78]
  001a0	e51b3078	 ldr         r3, [r11, #-0x78]
  001a4	e50b30c4	 str         r3, [r11, #-0xC4]
  001a8	e51b30c4	 ldr         r3, [r11, #-0xC4]
  001ac	e3530000	 cmp         r3, #0
  001b0	0a000005	 beq         |$LN12@PWRDOM_Ini|
  001b4	e51b00c4	 ldr         r0, [r11, #-0xC4]
  001b8		 |$M42336|
  001b8	eb000000	 bl          |??0MpuPowerDomainConstraint@@QAA@XZ|
  001bc	e50b0074	 str         r0, [r11, #-0x74]
  001c0	e51b3074	 ldr         r3, [r11, #-0x74]
  001c4	e50b3070	 str         r3, [r11, #-0x70]
  001c8	ea000001	 b           |$LN13@PWRDOM_Ini|
  001cc		 |$LN12@PWRDOM_Ini|
  001cc	e3a03000	 mov         r3, #0
  001d0	e50b3070	 str         r3, [r11, #-0x70]
  001d4		 |$LN13@PWRDOM_Ini|
  001d4	e51b3070	 ldr         r3, [r11, #-0x70]
  001d8	e50b30c8	 str         r3, [r11, #-0xC8]
  001dc	e51b20c8	 ldr         r2, [r11, #-0xC8]
  001e0	e59f36a4	 ldr         r3, [pc, #0x6A4]
  001e4	e5832030	 str         r2, [r3, #0x30]

; 158  :     if (s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_MPU] != NULL)

  001e8	e59f369c	 ldr         r3, [pc, #0x69C]
  001ec	e5933030	 ldr         r3, [r3, #0x30]
  001f0	e3530000	 cmp         r3, #0
  001f4	0a00000c	 beq         |$LN9@PWRDOM_Ini|

; 159  :         {
; 160  :         // Don't need to flush the power state because the cpu load power policy adapter
; 161  :         // will do it for us
; 162  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_MPU]->InitializePowerDomain(szBuffer);

  001f8	e24b1e2d	 sub         r1, r11, #0x2D, 28
  001fc	e59f3688	 ldr         r3, [pc, #0x688]
  00200	e5930030	 ldr         r0, [r3, #0x30]
  00204		 |$M42337|
  00204	eb000000	 bl          |?InitializePowerDomain@PowerDomainConstraint@@QAAHPBG@Z|

; 163  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_MPU]->FlushDomainPowerState(); 

  00208	e59f367c	 ldr         r3, [pc, #0x67C]
  0020c	e5933030	 ldr         r3, [r3, #0x30]
  00210	e5933000	 ldr         r3, [r3]
  00214	e2832008	 add         r2, r3, #8
  00218	e59f366c	 ldr         r3, [pc, #0x66C]
  0021c	e5930030	 ldr         r0, [r3, #0x30]
  00220	e5923000	 ldr         r3, [r2]
  00224	e1a0e00f	 mov         lr, pc
  00228	e12fff13	 bx          r3
  0022c		 |$LN9@PWRDOM_Ini|

; 164  :         }
; 165  : 
; 166  :     // core
; 167  :     _stprintf(szBuffer, REGEDIT_POWERDOMAIN_FMT, szContext, REGEDIT_POWERDOMAIN_CORE);

  0022c	e59f367c	 ldr         r3, [pc, #0x67C]
  00230	e59b2000	 ldr         r2, [r11]
  00234	e59f1654	 ldr         r1, [pc, #0x654]
  00238	e24b0e2d	 sub         r0, r11, #0x2D, 28
  0023c	eb000000	 bl          swprintf

; 168  :     s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_CORE] = new CorePowerDomainConstraint();

  00240	e3a000b4	 mov         r0, #0xB4
  00244	eb000000	 bl          |??2@YAPAXI@Z|
  00248	e50b006c	 str         r0, [r11, #-0x6C]
  0024c	e51b306c	 ldr         r3, [r11, #-0x6C]
  00250	e50b30bc	 str         r3, [r11, #-0xBC]
  00254	e51b30bc	 ldr         r3, [r11, #-0xBC]
  00258	e3530000	 cmp         r3, #0
  0025c	0a000005	 beq         |$LN14@PWRDOM_Ini|
  00260	e51b00bc	 ldr         r0, [r11, #-0xBC]
  00264		 |$M42338|
  00264	eb000000	 bl          |??0CorePowerDomainConstraint@@QAA@XZ|
  00268	e50b0068	 str         r0, [r11, #-0x68]
  0026c	e51b3068	 ldr         r3, [r11, #-0x68]
  00270	e50b3064	 str         r3, [r11, #-0x64]
  00274	ea000001	 b           |$LN15@PWRDOM_Ini|
  00278		 |$LN14@PWRDOM_Ini|
  00278	e3a03000	 mov         r3, #0
  0027c	e50b3064	 str         r3, [r11, #-0x64]
  00280		 |$LN15@PWRDOM_Ini|
  00280	e51b3064	 ldr         r3, [r11, #-0x64]
  00284	e50b30c0	 str         r3, [r11, #-0xC0]
  00288	e51b20c0	 ldr         r2, [r11, #-0xC0]
  0028c	e59f35f8	 ldr         r3, [pc, #0x5F8]
  00290	e5832020	 str         r2, [r3, #0x20]

; 169  :     if (s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_CORE] != NULL)

  00294	e59f35f0	 ldr         r3, [pc, #0x5F0]
  00298	e5933020	 ldr         r3, [r3, #0x20]
  0029c	e3530000	 cmp         r3, #0
  002a0	0a00000c	 beq         |$LN8@PWRDOM_Ini|

; 170  :         {
; 171  :         // Depend on external power policy adapter to change the power state of core
; 172  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_CORE]->InitializePowerDomain(szBuffer);

  002a4	e24b1e2d	 sub         r1, r11, #0x2D, 28
  002a8	e59f35dc	 ldr         r3, [pc, #0x5DC]
  002ac	e5930020	 ldr         r0, [r3, #0x20]
  002b0		 |$M42339|
  002b0	eb000000	 bl          |?InitializePowerDomain@PowerDomainConstraint@@QAAHPBG@Z|

; 173  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_CORE]->FlushDomainPowerState(); 

  002b4	e59f35d0	 ldr         r3, [pc, #0x5D0]
  002b8	e5933020	 ldr         r3, [r3, #0x20]
  002bc	e5933000	 ldr         r3, [r3]
  002c0	e2832008	 add         r2, r3, #8
  002c4	e59f35c0	 ldr         r3, [pc, #0x5C0]
  002c8	e5930020	 ldr         r0, [r3, #0x20]
  002cc	e5923000	 ldr         r3, [r2]
  002d0	e1a0e00f	 mov         lr, pc
  002d4	e12fff13	 bx          r3
  002d8		 |$LN8@PWRDOM_Ini|

; 174  :         }
; 175  : 
; 176  :     // iva
; 177  :     _stprintf(szBuffer, REGEDIT_POWERDOMAIN_FMT, szContext, REGEDIT_POWERDOMAIN_IVA);

  002d8	e59f35cc	 ldr         r3, [pc, #0x5CC]
  002dc	e59b2000	 ldr         r2, [r11]
  002e0	e59f15a8	 ldr         r1, [pc, #0x5A8]
  002e4	e24b0e2d	 sub         r0, r11, #0x2D, 28
  002e8	eb000000	 bl          swprintf

; 178  :     s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_IVA2] = new IvaPowerDomainConstraint();

  002ec	e3a000b4	 mov         r0, #0xB4
  002f0	eb000000	 bl          |??2@YAPAXI@Z|
  002f4	e50b0060	 str         r0, [r11, #-0x60]
  002f8	e51b3060	 ldr         r3, [r11, #-0x60]
  002fc	e50b30b4	 str         r3, [r11, #-0xB4]
  00300	e51b30b4	 ldr         r3, [r11, #-0xB4]
  00304	e3530000	 cmp         r3, #0
  00308	0a000005	 beq         |$LN16@PWRDOM_Ini|
  0030c	e51b00b4	 ldr         r0, [r11, #-0xB4]
  00310		 |$M42340|
  00310	eb000000	 bl          |??0IvaPowerDomainConstraint@@QAA@XZ|
  00314	e50b005c	 str         r0, [r11, #-0x5C]
  00318	e51b305c	 ldr         r3, [r11, #-0x5C]
  0031c	e50b3058	 str         r3, [r11, #-0x58]
  00320	ea000001	 b           |$LN17@PWRDOM_Ini|
  00324		 |$LN16@PWRDOM_Ini|
  00324	e3a03000	 mov         r3, #0
  00328	e50b3058	 str         r3, [r11, #-0x58]
  0032c		 |$LN17@PWRDOM_Ini|
  0032c	e51b3058	 ldr         r3, [r11, #-0x58]
  00330	e50b30b8	 str         r3, [r11, #-0xB8]
  00334	e51b20b8	 ldr         r2, [r11, #-0xB8]
  00338	e59f354c	 ldr         r3, [pc, #0x54C]
  0033c	e583203c	 str         r2, [r3, #0x3C]

; 179  :     if (s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_IVA2] != NULL)

  00340	e59f3544	 ldr         r3, [pc, #0x544]
  00344	e593303c	 ldr         r3, [r3, #0x3C]
  00348	e3530000	 cmp         r3, #0
  0034c	0a00000c	 beq         |$LN7@PWRDOM_Ini|

; 180  :         {
; 181  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_IVA2]->InitializePowerDomain(szBuffer);

  00350	e24b1e2d	 sub         r1, r11, #0x2D, 28
  00354	e59f3530	 ldr         r3, [pc, #0x530]
  00358	e593003c	 ldr         r0, [r3, #0x3C]
  0035c		 |$M42341|
  0035c	eb000000	 bl          |?InitializePowerDomain@PowerDomainConstraint@@QAAHPBG@Z|

; 182  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_IVA2]->FlushDomainPowerState();        

  00360	e59f3524	 ldr         r3, [pc, #0x524]
  00364	e593303c	 ldr         r3, [r3, #0x3C]
  00368	e5933000	 ldr         r3, [r3]
  0036c	e2832008	 add         r2, r3, #8
  00370	e59f3514	 ldr         r3, [pc, #0x514]
  00374	e593003c	 ldr         r0, [r3, #0x3C]
  00378	e5923000	 ldr         r3, [r2]
  0037c	e1a0e00f	 mov         lr, pc
  00380	e12fff13	 bx          r3
  00384		 |$LN7@PWRDOM_Ini|

; 183  :         }
; 184  : 
; 185  :     // usbhost
; 186  :     _stprintf(szBuffer, REGEDIT_POWERDOMAIN_FMT, szContext, REGEDIT_POWERDOMAIN_USBHOST);

  00384	e59f351c	 ldr         r3, [pc, #0x51C]
  00388	e59b2000	 ldr         r2, [r11]
  0038c	e59f14fc	 ldr         r1, [pc, #0x4FC]
  00390	e24b0e2d	 sub         r0, r11, #0x2D, 28
  00394	eb000000	 bl          swprintf

; 187  :     s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_USBHOST] = new UsbHostPowerDomainConstraint();

  00398	e3a000b4	 mov         r0, #0xB4
  0039c	eb000000	 bl          |??2@YAPAXI@Z|
  003a0	e50b0054	 str         r0, [r11, #-0x54]
  003a4	e51b3054	 ldr         r3, [r11, #-0x54]
  003a8	e50b30ac	 str         r3, [r11, #-0xAC]
  003ac	e51b30ac	 ldr         r3, [r11, #-0xAC]
  003b0	e3530000	 cmp         r3, #0
  003b4	0a000005	 beq         |$LN18@PWRDOM_Ini|
  003b8	e51b00ac	 ldr         r0, [r11, #-0xAC]
  003bc		 |$M42342|
  003bc	eb000000	 bl          |??0UsbHostPowerDomainConstraint@@QAA@XZ|
  003c0	e50b0050	 str         r0, [r11, #-0x50]
  003c4	e51b3050	 ldr         r3, [r11, #-0x50]
  003c8	e50b304c	 str         r3, [r11, #-0x4C]
  003cc	ea000001	 b           |$LN19@PWRDOM_Ini|
  003d0		 |$LN18@PWRDOM_Ini|
  003d0	e3a03000	 mov         r3, #0
  003d4	e50b304c	 str         r3, [r11, #-0x4C]
  003d8		 |$LN19@PWRDOM_Ini|
  003d8	e51b304c	 ldr         r3, [r11, #-0x4C]
  003dc	e50b30b0	 str         r3, [r11, #-0xB0]
  003e0	e51b20b0	 ldr         r2, [r11, #-0xB0]
  003e4	e59f34a0	 ldr         r3, [pc, #0x4A0]
  003e8	e5832028	 str         r2, [r3, #0x28]

; 188  :     if (s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_USBHOST] != NULL)

  003ec	e59f3498	 ldr         r3, [pc, #0x498]
  003f0	e5933028	 ldr         r3, [r3, #0x28]
  003f4	e3530000	 cmp         r3, #0
  003f8	0a00000c	 beq         |$LN6@PWRDOM_Ini|

; 189  :         {
; 190  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_USBHOST]->InitializePowerDomain(szBuffer);

  003fc	e24b1e2d	 sub         r1, r11, #0x2D, 28
  00400	e59f3484	 ldr         r3, [pc, #0x484]
  00404	e5930028	 ldr         r0, [r3, #0x28]
  00408		 |$M42343|
  00408	eb000000	 bl          |?InitializePowerDomain@PowerDomainConstraint@@QAAHPBG@Z|

; 191  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_USBHOST]->FlushDomainPowerState();

  0040c	e59f3478	 ldr         r3, [pc, #0x478]
  00410	e5933028	 ldr         r3, [r3, #0x28]
  00414	e5933000	 ldr         r3, [r3]
  00418	e2832008	 add         r2, r3, #8
  0041c	e59f3468	 ldr         r3, [pc, #0x468]
  00420	e5930028	 ldr         r0, [r3, #0x28]
  00424	e5923000	 ldr         r3, [r2]
  00428	e1a0e00f	 mov         lr, pc
  0042c	e12fff13	 bx          r3
  00430		 |$LN6@PWRDOM_Ini|

; 192  :         }
; 193  : 
; 194  :     // dss
; 195  :     _stprintf(szBuffer, REGEDIT_POWERDOMAIN_FMT, szContext, REGEDIT_POWERDOMAIN_DSS);

  00430	e59f346c	 ldr         r3, [pc, #0x46C]
  00434	e59b2000	 ldr         r2, [r11]
  00438	e59f1450	 ldr         r1, [pc, #0x450]
  0043c	e24b0e2d	 sub         r0, r11, #0x2D, 28
  00440	eb000000	 bl          swprintf

; 196  :     s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_DSS] = new DssPowerDomainConstraint();

  00444	e3a000b4	 mov         r0, #0xB4
  00448	eb000000	 bl          |??2@YAPAXI@Z|
  0044c	e50b0048	 str         r0, [r11, #-0x48]
  00450	e51b3048	 ldr         r3, [r11, #-0x48]
  00454	e50b30a4	 str         r3, [r11, #-0xA4]
  00458	e51b30a4	 ldr         r3, [r11, #-0xA4]
  0045c	e3530000	 cmp         r3, #0
  00460	0a000005	 beq         |$LN20@PWRDOM_Ini|
  00464	e51b00a4	 ldr         r0, [r11, #-0xA4]
  00468		 |$M42344|
  00468	eb000000	 bl          |??0DssPowerDomainConstraint@@QAA@XZ|
  0046c	e50b0044	 str         r0, [r11, #-0x44]
  00470	e51b3044	 ldr         r3, [r11, #-0x44]
  00474	e50b3040	 str         r3, [r11, #-0x40]
  00478	ea000001	 b           |$LN21@PWRDOM_Ini|
  0047c		 |$LN20@PWRDOM_Ini|
  0047c	e3a03000	 mov         r3, #0
  00480	e50b3040	 str         r3, [r11, #-0x40]
  00484		 |$LN21@PWRDOM_Ini|
  00484	e51b3040	 ldr         r3, [r11, #-0x40]
  00488	e50b30a8	 str         r3, [r11, #-0xA8]
  0048c	e51b20a8	 ldr         r2, [r11, #-0xA8]
  00490	e59f33f4	 ldr         r3, [pc, #0x3F4]
  00494	e5832034	 str         r2, [r3, #0x34]

; 197  :     if (s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_DSS] != NULL)

  00498	e59f33ec	 ldr         r3, [pc, #0x3EC]
  0049c	e5933034	 ldr         r3, [r3, #0x34]
  004a0	e3530000	 cmp         r3, #0
  004a4	0a00000c	 beq         |$LN5@PWRDOM_Ini|

; 198  :         {
; 199  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_DSS]->InitializePowerDomain(szBuffer);

  004a8	e24b1e2d	 sub         r1, r11, #0x2D, 28
  004ac	e59f33d8	 ldr         r3, [pc, #0x3D8]
  004b0	e5930034	 ldr         r0, [r3, #0x34]
  004b4		 |$M42345|
  004b4	eb000000	 bl          |?InitializePowerDomain@PowerDomainConstraint@@QAAHPBG@Z|

; 200  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_DSS]->FlushDomainPowerState();

  004b8	e59f33cc	 ldr         r3, [pc, #0x3CC]
  004bc	e5933034	 ldr         r3, [r3, #0x34]
  004c0	e5933000	 ldr         r3, [r3]
  004c4	e2832008	 add         r2, r3, #8
  004c8	e59f33bc	 ldr         r3, [pc, #0x3BC]
  004cc	e5930034	 ldr         r0, [r3, #0x34]
  004d0	e5923000	 ldr         r3, [r2]
  004d4	e1a0e00f	 mov         lr, pc
  004d8	e12fff13	 bx          r3
  004dc		 |$LN5@PWRDOM_Ini|

; 201  :         }
; 202  : 
; 203  :     // sgx
; 204  :     _stprintf(szBuffer, REGEDIT_POWERDOMAIN_FMT, szContext, REGEDIT_POWERDOMAIN_SGX);

  004dc	e59f33bc	 ldr         r3, [pc, #0x3BC]
  004e0	e59b2000	 ldr         r2, [r11]
  004e4	e59f13a4	 ldr         r1, [pc, #0x3A4]
  004e8	e24b0e2d	 sub         r0, r11, #0x2D, 28
  004ec	eb000000	 bl          swprintf

; 205  :     s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_SGX] = new SgxPowerDomainConstraint();

  004f0	e3a000b4	 mov         r0, #0xB4
  004f4	eb000000	 bl          |??2@YAPAXI@Z|
  004f8	e50b003c	 str         r0, [r11, #-0x3C]
  004fc	e51b303c	 ldr         r3, [r11, #-0x3C]
  00500	e50b309c	 str         r3, [r11, #-0x9C]
  00504	e51b309c	 ldr         r3, [r11, #-0x9C]
  00508	e3530000	 cmp         r3, #0
  0050c	0a000005	 beq         |$LN22@PWRDOM_Ini|
  00510	e51b009c	 ldr         r0, [r11, #-0x9C]
  00514		 |$M42346|
  00514	eb000000	 bl          |??0SgxPowerDomainConstraint@@QAA@XZ|
  00518	e50b0038	 str         r0, [r11, #-0x38]
  0051c	e51b3038	 ldr         r3, [r11, #-0x38]
  00520	e50b3034	 str         r3, [r11, #-0x34]
  00524	ea000001	 b           |$LN23@PWRDOM_Ini|
  00528		 |$LN22@PWRDOM_Ini|
  00528	e3a03000	 mov         r3, #0
  0052c	e50b3034	 str         r3, [r11, #-0x34]
  00530		 |$LN23@PWRDOM_Ini|
  00530	e51b3034	 ldr         r3, [r11, #-0x34]
  00534	e50b30a0	 str         r3, [r11, #-0xA0]
  00538	e51b20a0	 ldr         r2, [r11, #-0xA0]
  0053c	e59f3348	 ldr         r3, [pc, #0x348]
  00540	e5832044	 str         r2, [r3, #0x44]

; 206  :     if (s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_SGX] != NULL)

  00544	e59f3340	 ldr         r3, [pc, #0x340]
  00548	e5933044	 ldr         r3, [r3, #0x44]
  0054c	e3530000	 cmp         r3, #0
  00550	0a00000c	 beq         |$LN4@PWRDOM_Ini|

; 207  :         {
; 208  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_SGX]->InitializePowerDomain(szBuffer);

  00554	e24b1e2d	 sub         r1, r11, #0x2D, 28
  00558	e59f332c	 ldr         r3, [pc, #0x32C]
  0055c	e5930044	 ldr         r0, [r3, #0x44]
  00560		 |$M42347|
  00560	eb000000	 bl          |?InitializePowerDomain@PowerDomainConstraint@@QAAHPBG@Z|

; 209  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_SGX]->FlushDomainPowerState();

  00564	e59f3320	 ldr         r3, [pc, #0x320]
  00568	e5933044	 ldr         r3, [r3, #0x44]
  0056c	e5933000	 ldr         r3, [r3]
  00570	e2832008	 add         r2, r3, #8
  00574	e59f3310	 ldr         r3, [pc, #0x310]
  00578	e5930044	 ldr         r0, [r3, #0x44]
  0057c	e5923000	 ldr         r3, [r2]
  00580	e1a0e00f	 mov         lr, pc
  00584	e12fff13	 bx          r3
  00588		 |$LN4@PWRDOM_Ini|

; 210  :         }
; 211  : 
; 212  :     // peripheral
; 213  :     _stprintf(szBuffer, REGEDIT_POWERDOMAIN_FMT, szContext, REGEDIT_POWERDOMAIN_PERIPHERAL);

  00588	e59f330c	 ldr         r3, [pc, #0x30C]
  0058c	e59b2000	 ldr         r2, [r11]
  00590	e59f12f8	 ldr         r1, [pc, #0x2F8]
  00594	e24b0e2d	 sub         r0, r11, #0x2D, 28
  00598	eb000000	 bl          swprintf

; 214  :     s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_PERIPHERAL] = new PeripheralPowerDomainConstraint();

  0059c	e3a000b4	 mov         r0, #0xB4
  005a0	eb000000	 bl          |??2@YAPAXI@Z|
  005a4	e50b0030	 str         r0, [r11, #-0x30]
  005a8	e51b3030	 ldr         r3, [r11, #-0x30]
  005ac	e50b3094	 str         r3, [r11, #-0x94]
  005b0	e51b3094	 ldr         r3, [r11, #-0x94]
  005b4	e3530000	 cmp         r3, #0
  005b8	0a000005	 beq         |$LN24@PWRDOM_Ini|
  005bc	e51b0094	 ldr         r0, [r11, #-0x94]
  005c0		 |$M42348|
  005c0	eb000000	 bl          |??0PeripheralPowerDomainConstraint@@QAA@XZ|
  005c4	e50b002c	 str         r0, [r11, #-0x2C]
  005c8	e51b302c	 ldr         r3, [r11, #-0x2C]
  005cc	e50b3028	 str         r3, [r11, #-0x28]
  005d0	ea000001	 b           |$LN25@PWRDOM_Ini|
  005d4		 |$LN24@PWRDOM_Ini|
  005d4	e3a03000	 mov         r3, #0
  005d8	e50b3028	 str         r3, [r11, #-0x28]
  005dc		 |$LN25@PWRDOM_Ini|
  005dc	e51b3028	 ldr         r3, [r11, #-0x28]
  005e0	e50b3098	 str         r3, [r11, #-0x98]
  005e4	e51b2098	 ldr         r2, [r11, #-0x98]
  005e8	e59f329c	 ldr         r3, [pc, #0x29C]
  005ec	e5832024	 str         r2, [r3, #0x24]

; 215  :     if (s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_PERIPHERAL] != NULL)

  005f0	e59f3294	 ldr         r3, [pc, #0x294]
  005f4	e5933024	 ldr         r3, [r3, #0x24]
  005f8	e3530000	 cmp         r3, #0
  005fc	0a00000c	 beq         |$LN3@PWRDOM_Ini|

; 216  :         {
; 217  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_PERIPHERAL]->InitializePowerDomain(szBuffer);

  00600	e24b1e2d	 sub         r1, r11, #0x2D, 28
  00604	e59f3280	 ldr         r3, [pc, #0x280]
  00608	e5930024	 ldr         r0, [r3, #0x24]
  0060c		 |$M42349|
  0060c	eb000000	 bl          |?InitializePowerDomain@PowerDomainConstraint@@QAAHPBG@Z|

; 218  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_PERIPHERAL]->FlushDomainPowerState();

  00610	e59f3274	 ldr         r3, [pc, #0x274]
  00614	e5933024	 ldr         r3, [r3, #0x24]
  00618	e5933000	 ldr         r3, [r3]
  0061c	e2832008	 add         r2, r3, #8
  00620	e59f3264	 ldr         r3, [pc, #0x264]
  00624	e5930024	 ldr         r0, [r3, #0x24]
  00628	e5923000	 ldr         r3, [r2]
  0062c	e1a0e00f	 mov         lr, pc
  00630	e12fff13	 bx          r3
  00634		 |$LN3@PWRDOM_Ini|

; 219  :         }
; 220  : 
; 221  :     // camera
; 222  :     _stprintf(szBuffer, REGEDIT_POWERDOMAIN_FMT, szContext, REGEDIT_POWERDOMAIN_CAMERA);

  00634	e59f325c	 ldr         r3, [pc, #0x25C]
  00638	e59b2000	 ldr         r2, [r11]
  0063c	e59f124c	 ldr         r1, [pc, #0x24C]
  00640	e24b0e2d	 sub         r0, r11, #0x2D, 28
  00644	eb000000	 bl          swprintf

; 223  :     s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_CAMERA] = new CameraPowerDomainConstraint();

  00648	e3a000b4	 mov         r0, #0xB4
  0064c	eb000000	 bl          |??2@YAPAXI@Z|
  00650	e50b0024	 str         r0, [r11, #-0x24]
  00654	e51b3024	 ldr         r3, [r11, #-0x24]
  00658	e50b308c	 str         r3, [r11, #-0x8C]
  0065c	e51b308c	 ldr         r3, [r11, #-0x8C]
  00660	e3530000	 cmp         r3, #0
  00664	0a000005	 beq         |$LN26@PWRDOM_Ini|
  00668	e51b008c	 ldr         r0, [r11, #-0x8C]
  0066c		 |$M42350|
  0066c	eb000000	 bl          |??0CameraPowerDomainConstraint@@QAA@XZ|
  00670	e50b0020	 str         r0, [r11, #-0x20]
  00674	e51b3020	 ldr         r3, [r11, #-0x20]
  00678	e50b301c	 str         r3, [r11, #-0x1C]
  0067c	ea000001	 b           |$LN27@PWRDOM_Ini|
  00680		 |$LN26@PWRDOM_Ini|
  00680	e3a03000	 mov         r3, #0
  00684	e50b301c	 str         r3, [r11, #-0x1C]
  00688		 |$LN27@PWRDOM_Ini|
  00688	e51b301c	 ldr         r3, [r11, #-0x1C]
  0068c	e50b3090	 str         r3, [r11, #-0x90]
  00690	e51b2090	 ldr         r2, [r11, #-0x90]
  00694	e59f31f0	 ldr         r3, [pc, #0x1F0]
  00698	e5832040	 str         r2, [r3, #0x40]

; 224  :     if (s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_CAMERA] != NULL)

  0069c	e59f31e8	 ldr         r3, [pc, #0x1E8]
  006a0	e5933040	 ldr         r3, [r3, #0x40]
  006a4	e3530000	 cmp         r3, #0
  006a8	0a00000c	 beq         |$LN2@PWRDOM_Ini|

; 225  :         {
; 226  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_CAMERA]->InitializePowerDomain(szBuffer);

  006ac	e24b1e2d	 sub         r1, r11, #0x2D, 28
  006b0	e59f31d4	 ldr         r3, [pc, #0x1D4]
  006b4	e5930040	 ldr         r0, [r3, #0x40]
  006b8		 |$M42351|
  006b8	eb000000	 bl          |?InitializePowerDomain@PowerDomainConstraint@@QAAHPBG@Z|

; 227  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_CAMERA]->FlushDomainPowerState();

  006bc	e59f31c8	 ldr         r3, [pc, #0x1C8]
  006c0	e5933040	 ldr         r3, [r3, #0x40]
  006c4	e5933000	 ldr         r3, [r3]
  006c8	e2832008	 add         r2, r3, #8
  006cc	e59f31b8	 ldr         r3, [pc, #0x1B8]
  006d0	e5930040	 ldr         r0, [r3, #0x40]
  006d4	e5923000	 ldr         r3, [r2]
  006d8	e1a0e00f	 mov         lr, pc
  006dc	e12fff13	 bx          r3
  006e0		 |$LN2@PWRDOM_Ini|

; 228  :         }
; 229  : 
; 230  :     // neon
; 231  :     _stprintf(szBuffer, REGEDIT_POWERDOMAIN_FMT, szContext, REGEDIT_POWERDOMAIN_NEON);

  006e0	e59f31ac	 ldr         r3, [pc, #0x1AC]
  006e4	e59b2000	 ldr         r2, [r11]
  006e8	e59f11a0	 ldr         r1, [pc, #0x1A0]
  006ec	e24b0e2d	 sub         r0, r11, #0x2D, 28
  006f0	eb000000	 bl          swprintf

; 232  :     s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_NEON] = new NeonPowerDomainConstraint();

  006f4	e3a000b4	 mov         r0, #0xB4
  006f8	eb000000	 bl          |??2@YAPAXI@Z|
  006fc	e50b0018	 str         r0, [r11, #-0x18]
  00700	e51b3018	 ldr         r3, [r11, #-0x18]
  00704	e50b3084	 str         r3, [r11, #-0x84]
  00708	e51b3084	 ldr         r3, [r11, #-0x84]
  0070c	e3530000	 cmp         r3, #0
  00710	0a000005	 beq         |$LN28@PWRDOM_Ini|
  00714	e51b0084	 ldr         r0, [r11, #-0x84]
  00718		 |$M42352|
  00718	eb000000	 bl          |??0NeonPowerDomainConstraint@@QAA@XZ|
  0071c	e50b0014	 str         r0, [r11, #-0x14]
  00720	e51b3014	 ldr         r3, [r11, #-0x14]
  00724	e50b3010	 str         r3, [r11, #-0x10]
  00728	ea000001	 b           |$LN29@PWRDOM_Ini|
  0072c		 |$LN28@PWRDOM_Ini|
  0072c	e3a03000	 mov         r3, #0
  00730	e50b3010	 str         r3, [r11, #-0x10]
  00734		 |$LN29@PWRDOM_Ini|
  00734	e51b3010	 ldr         r3, [r11, #-0x10]
  00738	e50b3088	 str         r3, [r11, #-0x88]
  0073c	e51b2088	 ldr         r2, [r11, #-0x88]
  00740	e59f3144	 ldr         r3, [pc, #0x144]
  00744	e5832038	 str         r2, [r3, #0x38]

; 233  :     if (s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_NEON] != NULL)

  00748	e59f313c	 ldr         r3, [pc, #0x13C]
  0074c	e5933038	 ldr         r3, [r3, #0x38]
  00750	e3530000	 cmp         r3, #0
  00754	0a00000c	 beq         |$LN1@PWRDOM_Ini|

; 234  :         {
; 235  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_NEON]->InitializePowerDomain(szBuffer);

  00758	e24b1e2d	 sub         r1, r11, #0x2D, 28
  0075c	e59f3128	 ldr         r3, [pc, #0x128]
  00760	e5930038	 ldr         r0, [r3, #0x38]
  00764		 |$M42353|
  00764	eb000000	 bl          |?InitializePowerDomain@PowerDomainConstraint@@QAAHPBG@Z|

; 236  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_NEON]->FlushDomainPowerState();

  00768	e59f311c	 ldr         r3, [pc, #0x11C]
  0076c	e5933038	 ldr         r3, [r3, #0x38]
  00770	e5933000	 ldr         r3, [r3]
  00774	e2832008	 add         r2, r3, #8
  00778	e59f310c	 ldr         r3, [pc, #0x10C]
  0077c	e5930038	 ldr         r0, [r3, #0x38]
  00780	e5923000	 ldr         r3, [r2]
  00784	e1a0e00f	 mov         lr, pc
  00788	e12fff13	 bx          r3
  0078c		 |$LN1@PWRDOM_Ini|

; 237  :         }
; 238  : 
; 239  :     InitializeCriticalSection(&s_PowerDomainInfo.cs);

  0078c	e59f00f8	 ldr         r0, [pc, #0xF8]
  00790	eb000000	 bl          InitializeCriticalSection

; 240  :     
; 241  :     return (HANDLE)&s_PowerDomainInfo;

  00794	e51b0080	 ldr         r0, [r11, #-0x80]
  00798	eb000000	 bl          __security_check_cookie
  0079c	e59f30e8	 ldr         r3, [pc, #0xE8]
  007a0	e50b307c	 str         r3, [r11, #-0x7C]

; 242  : } 

  007a4	e51b007c	 ldr         r0, [r11, #-0x7C]
  007a8	e24bd00c	 sub         sp, r11, #0xC
  007ac	e89d6800	 ldmia       sp, {r11, sp, lr}
  007b0	e12fff1e	 bx          lr
  007b4		 |$M42358|
  007b4		 |__unwind$42321|

; 240  :     
; 241  :     return (HANDLE)&s_PowerDomainInfo;

  007b4	e52de004	 str         lr, [sp, #-4]!
  007b8	e24bb004	 sub         r11, r11, #4
  007bc		 |$M42361|
  007bc	e51b00c4	 ldr         r0, [r11, #-0xC4]
  007c0	eb000000	 bl          |??3@YAXPAX@Z|
  007c4	e28bb004	 add         r11, r11, #4
  007c8	e8bd8000	 ldmia       sp!, {pc}
  007cc		 |$M42362|
  007cc		 |__unwind$42322|
  007cc	e52de004	 str         lr, [sp, #-4]!
  007d0	e24bb004	 sub         r11, r11, #4
  007d4		 |$M42364|
  007d4	e51b00bc	 ldr         r0, [r11, #-0xBC]
  007d8	eb000000	 bl          |??3@YAXPAX@Z|
  007dc	e28bb004	 add         r11, r11, #4
  007e0	e8bd8000	 ldmia       sp!, {pc}
  007e4		 |$M42365|
  007e4		 |__unwind$42323|
  007e4	e52de004	 str         lr, [sp, #-4]!
  007e8	e24bb004	 sub         r11, r11, #4
  007ec		 |$M42367|
  007ec	e51b00b4	 ldr         r0, [r11, #-0xB4]
  007f0	eb000000	 bl          |??3@YAXPAX@Z|
  007f4	e28bb004	 add         r11, r11, #4
  007f8	e8bd8000	 ldmia       sp!, {pc}
  007fc		 |$M42368|
  007fc		 |__unwind$42324|
  007fc	e52de004	 str         lr, [sp, #-4]!
  00800	e24bb004	 sub         r11, r11, #4
  00804		 |$M42370|
  00804	e51b00ac	 ldr         r0, [r11, #-0xAC]
  00808	eb000000	 bl          |??3@YAXPAX@Z|
  0080c	e28bb004	 add         r11, r11, #4
  00810	e8bd8000	 ldmia       sp!, {pc}
  00814		 |$M42371|
  00814		 |__unwind$42325|
  00814	e52de004	 str         lr, [sp, #-4]!
  00818	e24bb004	 sub         r11, r11, #4
  0081c		 |$M42373|
  0081c	e51b00a4	 ldr         r0, [r11, #-0xA4]
  00820	eb000000	 bl          |??3@YAXPAX@Z|
  00824	e28bb004	 add         r11, r11, #4
  00828	e8bd8000	 ldmia       sp!, {pc}
  0082c		 |$M42374|
  0082c		 |__unwind$42326|
  0082c	e52de004	 str         lr, [sp, #-4]!
  00830	e24bb004	 sub         r11, r11, #4
  00834		 |$M42376|
  00834	e51b009c	 ldr         r0, [r11, #-0x9C]
  00838	eb000000	 bl          |??3@YAXPAX@Z|
  0083c	e28bb004	 add         r11, r11, #4
  00840	e8bd8000	 ldmia       sp!, {pc}
  00844		 |$M42377|
  00844		 |__unwind$42327|
  00844	e52de004	 str         lr, [sp, #-4]!
  00848	e24bb004	 sub         r11, r11, #4
  0084c		 |$M42379|
  0084c	e51b0094	 ldr         r0, [r11, #-0x94]
  00850	eb000000	 bl          |??3@YAXPAX@Z|
  00854	e28bb004	 add         r11, r11, #4
  00858	e8bd8000	 ldmia       sp!, {pc}
  0085c		 |$M42380|
  0085c		 |__unwind$42328|
  0085c	e52de004	 str         lr, [sp, #-4]!
  00860	e24bb004	 sub         r11, r11, #4
  00864		 |$M42382|
  00864	e51b008c	 ldr         r0, [r11, #-0x8C]
  00868	eb000000	 bl          |??3@YAXPAX@Z|
  0086c	e28bb004	 add         r11, r11, #4
  00870	e8bd8000	 ldmia       sp!, {pc}
  00874		 |$M42383|
  00874		 |__unwind$42329|
  00874	e52de004	 str         lr, [sp, #-4]!
  00878	e24bb004	 sub         r11, r11, #4
  0087c		 |$M42385|
  0087c	e51b0084	 ldr         r0, [r11, #-0x84]
  00880	eb000000	 bl          |??3@YAXPAX@Z|
  00884	e28bb004	 add         r11, r11, #4
  00888	e8bd8000	 ldmia       sp!, {pc}
  0088c		 |$LN78@PWRDOM_Ini|
  0088c		 |$LN79@PWRDOM_Ini|
  0088c	00000000	 DCD         |s_PowerDomainInfo|
  00890		 |$LN80@PWRDOM_Ini|
  00890	00000000	 DCD         |??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@|
  00894		 |$LN81@PWRDOM_Ini|
  00894	00000000	 DCD         |??_C@_19HILOPLKE@?$AAN?$AAE?$AAO?$AAN?$AA?$AA@|
  00898		 |$LN82@PWRDOM_Ini|
  00898	00000000	 DCD         |??_C@_1O@NAINHJLA@?$AAC?$AAA?$AAM?$AAE?$AAR?$AAA?$AA?$AA@|
  0089c		 |$LN83@PWRDOM_Ini|
  0089c	00000000	 DCD         |??_C@_1BG@CDNAOEMP@?$AAP?$AAE?$AAR?$AAI?$AAP?$AAH?$AAE?$AAR?$AAA?$AAL?$AA?$AA@|
  008a0		 |$LN84@PWRDOM_Ini|
  008a0	00000000	 DCD         |??_C@_17FNJAMJCK@?$AAS?$AAG?$AAX?$AA?$AA@|
  008a4		 |$LN85@PWRDOM_Ini|
  008a4	00000000	 DCD         |??_C@_17GEKIDGJE@?$AAD?$AAS?$AAS?$AA?$AA@|
  008a8		 |$LN86@PWRDOM_Ini|
  008a8	00000000	 DCD         |??_C@_1BA@JFNDBDEI@?$AAU?$AAS?$AAB?$AAH?$AAO?$AAS?$AAT?$AA?$AA@|
  008ac		 |$LN87@PWRDOM_Ini|
  008ac	00000000	 DCD         |??_C@_17FFHACNOC@?$AAI?$AAV?$AAA?$AA?$AA@|
  008b0		 |$LN88@PWRDOM_Ini|
  008b0	00000000	 DCD         |??_C@_19HEMJPKJI@?$AAC?$AAO?$AAR?$AAE?$AA?$AA@|
  008b4		 |$LN89@PWRDOM_Ini|
  008b4	00000000	 DCD         |??_C@_17NIBIAAMN@?$AAM?$AAP?$AAU?$AA?$AA@|
  008b8		 |$LN90@PWRDOM_Ini|
  008b8	00000000	 DCD         |__security_cookie|
  008bc		 |$M42386|

			 ENDP  ; |?PWRDOM_InitConstraint@@YAPAXPBG@Z|, PWRDOM_InitConstraint

	EXPORT	|??_7MpuPowerDomainConstraint@@6B@| [ DATA ] ; MpuPowerDomainConstraint::`vftable'
	EXPORT	|??0PowerDomainConstraint@@QAA@XZ|	; PowerDomainConstraint::PowerDomainConstraint
	EXPORT	|?GetPowerDomain@MpuPowerDomainConstraint@@MBAKXZ| ; MpuPowerDomainConstraint::GetPowerDomain
	IMPORT	|?UpdatePowerDomainConstraint@MpuPowerDomainConstraint@@MAAHK@Z| ; MpuPowerDomainConstraint::UpdatePowerDomainConstraint
	IMPORT	|?FlushDomainPowerState@MpuPowerDomainConstraint@@UAAHXZ| ; MpuPowerDomainConstraint::FlushDomainPowerState

  00000			 AREA	 |.pdata|, PDATA
|$T42407| DCD	|$LN6@MpuPowerDo|
	DCD	0x40001104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MpuPowerDomainConstraint@@6B@| DCD |?UpdatePowerDomainConstraint@MpuPowerDomainConstraint@@MAAHK@Z| ; MpuPowerDomainConstraint::`vftable'
	DCD	|?GetPowerDomain@MpuPowerDomainConstraint@@MBAKXZ|
	DCD	|?FlushDomainPowerState@MpuPowerDomainConstraint@@UAAHXZ|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MpuPowerDomainConstraint@@QAA@XZ| PROC ; MpuPowerDomainConstraint::MpuPowerDomainConstraint
  00000		 |$LN6@MpuPowerDo|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42404|
  00010	e59d0010	 ldr         r0, [sp, #0x10]
  00014	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  00018	e58d0004	 str         r0, [sp, #4]
  0001c	e59f201c	 ldr         r2, [pc, #0x1C]
  00020	e59d3010	 ldr         r3, [sp, #0x10]
  00024	e5832000	 str         r2, [r3]
  00028	e59d3010	 ldr         r3, [sp, #0x10]
  0002c	e58d3000	 str         r3, [sp]
  00030	e59d0000	 ldr         r0, [sp]
  00034	e28dd008	 add         sp, sp, #8
  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN7@MpuPowerDo|
  00040		 |$LN8@MpuPowerDo|
  00040	00000000	 DCD         |??_7MpuPowerDomainConstraint@@6B@|
  00044		 |$M42405|

			 ENDP  ; |??0MpuPowerDomainConstraint@@QAA@XZ|, MpuPowerDomainConstraint::MpuPowerDomainConstraint

	EXPORT	|??0?$IndexList@K@@QAA@XZ|		; IndexList<unsigned long>::IndexList<unsigned long>
	EXPORT	|??_7PowerDomainConstraint@@6B@| [ DATA ] ; PowerDomainConstraint::`vftable'
	IMPORT	|?UpdatePowerDomainConstraint@PowerDomainConstraint@@MAAHK@Z| ; PowerDomainConstraint::UpdatePowerDomainConstraint
	IMPORT	|_purecall|
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\pm\constraintadapters\powerdomainconstraint\powerdomainconstraint.h

  00000			 AREA	 |.pdata|, PDATA
|$T42418| DCD	|$LN6@PowerDomai|
	DCD	0x40002704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerDomainConstraint@@6B@| DCD |?UpdatePowerDomainConstraint@PowerDomainConstraint@@MAAHK@Z| ; PowerDomainConstraint::`vftable'
	DCD	|_purecall|
	DCD	|_purecall|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0PowerDomainConstraint@@QAA@XZ| PROC ; PowerDomainConstraint::PowerDomainConstraint

; 48   :     {

  00000		 |$LN6@PowerDomai|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42415|
  00010	e59f2080	 ldr         r2, [pc, #0x80]
  00014	e59d3010	 ldr         r3, [sp, #0x10]
  00018	e5832000	 str         r2, [r3]
  0001c	e59d3010	 ldr         r3, [sp, #0x10]
  00020	e2832018	 add         r2, r3, #0x18
  00024	e3a03000	 mov         r3, #0
  00028	e5823000	 str         r3, [r2]
  0002c	e59d3010	 ldr         r3, [sp, #0x10]
  00030	e283201c	 add         r2, r3, #0x1C
  00034	e3a03004	 mov         r3, #4
  00038	e5823000	 str         r3, [r2]
  0003c	e59d3010	 ldr         r3, [sp, #0x10]
  00040	e2832020	 add         r2, r3, #0x20
  00044	e3e03000	 mvn         r3, #0
  00048	e5823000	 str         r3, [r2]
  0004c	e59d3010	 ldr         r3, [sp, #0x10]
  00050	e2832024	 add         r2, r3, #0x24
  00054	e3e03000	 mvn         r3, #0
  00058	e5823000	 str         r3, [r2]
  0005c	e59d3010	 ldr         r3, [sp, #0x10]
  00060	e2830028	 add         r0, r3, #0x28
  00064	eb000000	 bl          |??0?$IndexList@K@@QAA@XZ|
  00068	e58d0004	 str         r0, [sp, #4]

; 49   :         memset(&m_rgPowerDomainConstraints, 0, sizeof(m_rgPowerDomainConstraints));

  0006c	e3a02014	 mov         r2, #0x14
  00070	e3a01000	 mov         r1, #0
  00074	e59d3010	 ldr         r3, [sp, #0x10]
  00078	e2830004	 add         r0, r3, #4
  0007c	eb000000	 bl          memset

; 50   :     }

  00080	e59d3010	 ldr         r3, [sp, #0x10]
  00084	e58d3000	 str         r3, [sp]
  00088	e59d0000	 ldr         r0, [sp]
  0008c	e28dd008	 add         sp, sp, #8
  00090	e89d6000	 ldmia       sp, {sp, lr}
  00094	e12fff1e	 bx          lr
  00098		 |$LN7@PowerDomai|
  00098		 |$LN8@PowerDomai|
  00098	00000000	 DCD         |??_7PowerDomainConstraint@@6B@|
  0009c		 |$M42416|

			 ENDP  ; |??0PowerDomainConstraint@@QAA@XZ|, PowerDomainConstraint::PowerDomainConstraint


  00000			 AREA	 |.pdata|, PDATA
|$T42428| DCD	|$LN5@GetPowerDo|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPowerDomain@MpuPowerDomainConstraint@@MBAKXZ| PROC ; MpuPowerDomainConstraint::GetPowerDomain

; 199  :     GetPowerDomain() const          {return POWERDOMAIN_MPU;}

  00000		 |$LN5@GetPowerDo|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42425|
  00010	e3a03005	 mov         r3, #5
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M42426|

			 ENDP  ; |?GetPowerDomain@MpuPowerDomainConstraint@@MBAKXZ|, MpuPowerDomainConstraint::GetPowerDomain

	EXPORT	|??_7CorePowerDomainConstraint@@6B@| [ DATA ] ; CorePowerDomainConstraint::`vftable'
	EXPORT	|?GetPowerDomain@CorePowerDomainConstraint@@MBAKXZ| ; CorePowerDomainConstraint::GetPowerDomain
	IMPORT	|?UpdatePowerDomainConstraint@CorePowerDomainConstraint@@MAAHK@Z| ; CorePowerDomainConstraint::UpdatePowerDomainConstraint
	IMPORT	|?FlushDomainPowerState@CorePowerDomainConstraint@@UAAHXZ| ; CorePowerDomainConstraint::FlushDomainPowerState

  00000			 AREA	 |.pdata|, PDATA
|$T42437| DCD	|$LN6@CorePowerD|
	DCD	0x40001104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CorePowerDomainConstraint@@6B@| DCD |?UpdatePowerDomainConstraint@CorePowerDomainConstraint@@MAAHK@Z| ; CorePowerDomainConstraint::`vftable'
	DCD	|?GetPowerDomain@CorePowerDomainConstraint@@MBAKXZ|
	DCD	|?FlushDomainPowerState@CorePowerDomainConstraint@@UAAHXZ|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CorePowerDomainConstraint@@QAA@XZ| PROC ; CorePowerDomainConstraint::CorePowerDomainConstraint
  00000		 |$LN6@CorePowerD|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42434|
  00010	e59d0010	 ldr         r0, [sp, #0x10]
  00014	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  00018	e58d0004	 str         r0, [sp, #4]
  0001c	e59f201c	 ldr         r2, [pc, #0x1C]
  00020	e59d3010	 ldr         r3, [sp, #0x10]
  00024	e5832000	 str         r2, [r3]
  00028	e59d3010	 ldr         r3, [sp, #0x10]
  0002c	e58d3000	 str         r3, [sp]
  00030	e59d0000	 ldr         r0, [sp]
  00034	e28dd008	 add         sp, sp, #8
  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN7@CorePowerD|
  00040		 |$LN8@CorePowerD|
  00040	00000000	 DCD         |??_7CorePowerDomainConstraint@@6B@|
  00044		 |$M42435|

			 ENDP  ; |??0CorePowerDomainConstraint@@QAA@XZ|, CorePowerDomainConstraint::CorePowerDomainConstraint


  00000			 AREA	 |.pdata|, PDATA
|$T42447| DCD	|$LN5@GetPowerDo@2|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPowerDomain@CorePowerDomainConstraint@@MBAKXZ| PROC ; CorePowerDomainConstraint::GetPowerDomain

; 263  :     GetPowerDomain() const          {return POWERDOMAIN_CORE;}

  00000		 |$LN5@GetPowerDo@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42444|
  00010	e3a03001	 mov         r3, #1
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M42445|

			 ENDP  ; |?GetPowerDomain@CorePowerDomainConstraint@@MBAKXZ|, CorePowerDomainConstraint::GetPowerDomain

	EXPORT	|??_7IvaPowerDomainConstraint@@6B@| [ DATA ] ; IvaPowerDomainConstraint::`vftable'
	EXPORT	|?GetPowerDomain@IvaPowerDomainConstraint@@MBAKXZ| ; IvaPowerDomainConstraint::GetPowerDomain
	IMPORT	|?UpdatePowerDomainConstraint@IvaPowerDomainConstraint@@MAAHK@Z| ; IvaPowerDomainConstraint::UpdatePowerDomainConstraint
	IMPORT	|?FlushDomainPowerState@IvaPowerDomainConstraint@@UAAHXZ| ; IvaPowerDomainConstraint::FlushDomainPowerState

  00000			 AREA	 |.pdata|, PDATA
|$T42456| DCD	|$LN6@IvaPowerDo|
	DCD	0x40001104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7IvaPowerDomainConstraint@@6B@| DCD |?UpdatePowerDomainConstraint@IvaPowerDomainConstraint@@MAAHK@Z| ; IvaPowerDomainConstraint::`vftable'
	DCD	|?GetPowerDomain@IvaPowerDomainConstraint@@MBAKXZ|
	DCD	|?FlushDomainPowerState@IvaPowerDomainConstraint@@UAAHXZ|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0IvaPowerDomainConstraint@@QAA@XZ| PROC ; IvaPowerDomainConstraint::IvaPowerDomainConstraint
  00000		 |$LN6@IvaPowerDo|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42453|
  00010	e59d0010	 ldr         r0, [sp, #0x10]
  00014	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  00018	e58d0004	 str         r0, [sp, #4]
  0001c	e59f201c	 ldr         r2, [pc, #0x1C]
  00020	e59d3010	 ldr         r3, [sp, #0x10]
  00024	e5832000	 str         r2, [r3]
  00028	e59d3010	 ldr         r3, [sp, #0x10]
  0002c	e58d3000	 str         r3, [sp]
  00030	e59d0000	 ldr         r0, [sp]
  00034	e28dd008	 add         sp, sp, #8
  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN7@IvaPowerDo|
  00040		 |$LN8@IvaPowerDo|
  00040	00000000	 DCD         |??_7IvaPowerDomainConstraint@@6B@|
  00044		 |$M42454|

			 ENDP  ; |??0IvaPowerDomainConstraint@@QAA@XZ|, IvaPowerDomainConstraint::IvaPowerDomainConstraint


  00000			 AREA	 |.pdata|, PDATA
|$T42466| DCD	|$LN5@GetPowerDo@3|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPowerDomain@IvaPowerDomainConstraint@@MBAKXZ| PROC ; IvaPowerDomainConstraint::GetPowerDomain

; 231  :     GetPowerDomain() const          {return POWERDOMAIN_IVA2;}

  00000		 |$LN5@GetPowerDo@3|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42463|
  00010	e3a03008	 mov         r3, #8
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M42464|

			 ENDP  ; |?GetPowerDomain@IvaPowerDomainConstraint@@MBAKXZ|, IvaPowerDomainConstraint::GetPowerDomain

	EXPORT	|??_7UsbHostPowerDomainConstraint@@6B@| [ DATA ] ; UsbHostPowerDomainConstraint::`vftable'
	EXPORT	|?GetPowerDomain@UsbHostPowerDomainConstraint@@MBAKXZ| ; UsbHostPowerDomainConstraint::GetPowerDomain
	IMPORT	|?UpdatePowerDomainConstraint@UsbHostPowerDomainConstraint@@MAAHK@Z| ; UsbHostPowerDomainConstraint::UpdatePowerDomainConstraint
	IMPORT	|?FlushDomainPowerState@UsbHostPowerDomainConstraint@@UAAHXZ| ; UsbHostPowerDomainConstraint::FlushDomainPowerState

  00000			 AREA	 |.pdata|, PDATA
|$T42475| DCD	|$LN6@UsbHostPow|
	DCD	0x40001104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7UsbHostPowerDomainConstraint@@6B@| DCD |?UpdatePowerDomainConstraint@UsbHostPowerDomainConstraint@@MAAHK@Z| ; UsbHostPowerDomainConstraint::`vftable'
	DCD	|?GetPowerDomain@UsbHostPowerDomainConstraint@@MBAKXZ|
	DCD	|?FlushDomainPowerState@UsbHostPowerDomainConstraint@@UAAHXZ|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0UsbHostPowerDomainConstraint@@QAA@XZ| PROC ; UsbHostPowerDomainConstraint::UsbHostPowerDomainConstraint
  00000		 |$LN6@UsbHostPow|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42472|
  00010	e59d0010	 ldr         r0, [sp, #0x10]
  00014	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  00018	e58d0004	 str         r0, [sp, #4]
  0001c	e59f201c	 ldr         r2, [pc, #0x1C]
  00020	e59d3010	 ldr         r3, [sp, #0x10]
  00024	e5832000	 str         r2, [r3]
  00028	e59d3010	 ldr         r3, [sp, #0x10]
  0002c	e58d3000	 str         r3, [sp]
  00030	e59d0000	 ldr         r0, [sp]
  00034	e28dd008	 add         sp, sp, #8
  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN7@UsbHostPow|
  00040		 |$LN8@UsbHostPow|
  00040	00000000	 DCD         |??_7UsbHostPowerDomainConstraint@@6B@|
  00044		 |$M42473|

			 ENDP  ; |??0UsbHostPowerDomainConstraint@@QAA@XZ|, UsbHostPowerDomainConstraint::UsbHostPowerDomainConstraint


  00000			 AREA	 |.pdata|, PDATA
|$T42485| DCD	|$LN5@GetPowerDo@4|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPowerDomain@UsbHostPowerDomainConstraint@@MBAKXZ| PROC ; UsbHostPowerDomainConstraint::GetPowerDomain

; 423  :     GetPowerDomain() const          {return POWERDOMAIN_USBHOST;}

  00000		 |$LN5@GetPowerDo@4|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42482|
  00010	e3a03003	 mov         r3, #3
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M42483|

			 ENDP  ; |?GetPowerDomain@UsbHostPowerDomainConstraint@@MBAKXZ|, UsbHostPowerDomainConstraint::GetPowerDomain

	EXPORT	|??_7DssPowerDomainConstraint@@6B@| [ DATA ] ; DssPowerDomainConstraint::`vftable'
	EXPORT	|?GetPowerDomain@DssPowerDomainConstraint@@MBAKXZ| ; DssPowerDomainConstraint::GetPowerDomain
	IMPORT	|?UpdatePowerDomainConstraint@DssPowerDomainConstraint@@MAAHK@Z| ; DssPowerDomainConstraint::UpdatePowerDomainConstraint
	IMPORT	|?FlushDomainPowerState@DssPowerDomainConstraint@@UAAHXZ| ; DssPowerDomainConstraint::FlushDomainPowerState

  00000			 AREA	 |.pdata|, PDATA
|$T42494| DCD	|$LN6@DssPowerDo|
	DCD	0x40001104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7DssPowerDomainConstraint@@6B@| DCD |?UpdatePowerDomainConstraint@DssPowerDomainConstraint@@MAAHK@Z| ; DssPowerDomainConstraint::`vftable'
	DCD	|?GetPowerDomain@DssPowerDomainConstraint@@MBAKXZ|
	DCD	|?FlushDomainPowerState@DssPowerDomainConstraint@@UAAHXZ|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0DssPowerDomainConstraint@@QAA@XZ| PROC ; DssPowerDomainConstraint::DssPowerDomainConstraint
  00000		 |$LN6@DssPowerDo|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42491|
  00010	e59d0010	 ldr         r0, [sp, #0x10]
  00014	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  00018	e58d0004	 str         r0, [sp, #4]
  0001c	e59f201c	 ldr         r2, [pc, #0x1C]
  00020	e59d3010	 ldr         r3, [sp, #0x10]
  00024	e5832000	 str         r2, [r3]
  00028	e59d3010	 ldr         r3, [sp, #0x10]
  0002c	e58d3000	 str         r3, [sp]
  00030	e59d0000	 ldr         r0, [sp]
  00034	e28dd008	 add         sp, sp, #8
  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN7@DssPowerDo|
  00040		 |$LN8@DssPowerDo|
  00040	00000000	 DCD         |??_7DssPowerDomainConstraint@@6B@|
  00044		 |$M42492|

			 ENDP  ; |??0DssPowerDomainConstraint@@QAA@XZ|, DssPowerDomainConstraint::DssPowerDomainConstraint


  00000			 AREA	 |.pdata|, PDATA
|$T42504| DCD	|$LN5@GetPowerDo@5|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPowerDomain@DssPowerDomainConstraint@@MBAKXZ| PROC ; DssPowerDomainConstraint::GetPowerDomain

; 327  :     GetPowerDomain() const          {return POWERDOMAIN_DSS;}

  00000		 |$LN5@GetPowerDo@5|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42501|
  00010	e3a03006	 mov         r3, #6
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M42502|

			 ENDP  ; |?GetPowerDomain@DssPowerDomainConstraint@@MBAKXZ|, DssPowerDomainConstraint::GetPowerDomain

	EXPORT	|??_7SgxPowerDomainConstraint@@6B@| [ DATA ] ; SgxPowerDomainConstraint::`vftable'
	EXPORT	|?GetPowerDomain@SgxPowerDomainConstraint@@MBAKXZ| ; SgxPowerDomainConstraint::GetPowerDomain
	IMPORT	|?UpdatePowerDomainConstraint@SgxPowerDomainConstraint@@MAAHK@Z| ; SgxPowerDomainConstraint::UpdatePowerDomainConstraint
	IMPORT	|?FlushDomainPowerState@SgxPowerDomainConstraint@@UAAHXZ| ; SgxPowerDomainConstraint::FlushDomainPowerState

  00000			 AREA	 |.pdata|, PDATA
|$T42513| DCD	|$LN6@SgxPowerDo|
	DCD	0x40001104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7SgxPowerDomainConstraint@@6B@| DCD |?UpdatePowerDomainConstraint@SgxPowerDomainConstraint@@MAAHK@Z| ; SgxPowerDomainConstraint::`vftable'
	DCD	|?GetPowerDomain@SgxPowerDomainConstraint@@MBAKXZ|
	DCD	|?FlushDomainPowerState@SgxPowerDomainConstraint@@UAAHXZ|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0SgxPowerDomainConstraint@@QAA@XZ| PROC ; SgxPowerDomainConstraint::SgxPowerDomainConstraint
  00000		 |$LN6@SgxPowerDo|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42510|
  00010	e59d0010	 ldr         r0, [sp, #0x10]
  00014	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  00018	e58d0004	 str         r0, [sp, #4]
  0001c	e59f201c	 ldr         r2, [pc, #0x1C]
  00020	e59d3010	 ldr         r3, [sp, #0x10]
  00024	e5832000	 str         r2, [r3]
  00028	e59d3010	 ldr         r3, [sp, #0x10]
  0002c	e58d3000	 str         r3, [sp]
  00030	e59d0000	 ldr         r0, [sp]
  00034	e28dd008	 add         sp, sp, #8
  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN7@SgxPowerDo|
  00040		 |$LN8@SgxPowerDo|
  00040	00000000	 DCD         |??_7SgxPowerDomainConstraint@@6B@|
  00044		 |$M42511|

			 ENDP  ; |??0SgxPowerDomainConstraint@@QAA@XZ|, SgxPowerDomainConstraint::SgxPowerDomainConstraint


  00000			 AREA	 |.pdata|, PDATA
|$T42523| DCD	|$LN5@GetPowerDo@6|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPowerDomain@SgxPowerDomainConstraint@@MBAKXZ| PROC ; SgxPowerDomainConstraint::GetPowerDomain

; 359  :     GetPowerDomain() const          {return POWERDOMAIN_SGX;}

  00000		 |$LN5@GetPowerDo@6|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42520|
  00010	e3a0300a	 mov         r3, #0xA
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M42521|

			 ENDP  ; |?GetPowerDomain@SgxPowerDomainConstraint@@MBAKXZ|, SgxPowerDomainConstraint::GetPowerDomain

	EXPORT	|??_7PeripheralPowerDomainConstraint@@6B@| [ DATA ] ; PeripheralPowerDomainConstraint::`vftable'
	EXPORT	|?GetPowerDomain@PeripheralPowerDomainConstraint@@MBAKXZ| ; PeripheralPowerDomainConstraint::GetPowerDomain
	IMPORT	|?UpdatePowerDomainConstraint@PeripheralPowerDomainConstraint@@MAAHK@Z| ; PeripheralPowerDomainConstraint::UpdatePowerDomainConstraint
	IMPORT	|?FlushDomainPowerState@PeripheralPowerDomainConstraint@@UAAHXZ| ; PeripheralPowerDomainConstraint::FlushDomainPowerState

  00000			 AREA	 |.pdata|, PDATA
|$T42532| DCD	|$LN6@Peripheral|
	DCD	0x40001104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PeripheralPowerDomainConstraint@@6B@| DCD |?UpdatePowerDomainConstraint@PeripheralPowerDomainConstraint@@MAAHK@Z| ; PeripheralPowerDomainConstraint::`vftable'
	DCD	|?GetPowerDomain@PeripheralPowerDomainConstraint@@MBAKXZ|
	DCD	|?FlushDomainPowerState@PeripheralPowerDomainConstraint@@UAAHXZ|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0PeripheralPowerDomainConstraint@@QAA@XZ| PROC ; PeripheralPowerDomainConstraint::PeripheralPowerDomainConstraint
  00000		 |$LN6@Peripheral|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42529|
  00010	e59d0010	 ldr         r0, [sp, #0x10]
  00014	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  00018	e58d0004	 str         r0, [sp, #4]
  0001c	e59f201c	 ldr         r2, [pc, #0x1C]
  00020	e59d3010	 ldr         r3, [sp, #0x10]
  00024	e5832000	 str         r2, [r3]
  00028	e59d3010	 ldr         r3, [sp, #0x10]
  0002c	e58d3000	 str         r3, [sp]
  00030	e59d0000	 ldr         r0, [sp]
  00034	e28dd008	 add         sp, sp, #8
  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN7@Peripheral|
  00040		 |$LN8@Peripheral|
  00040	00000000	 DCD         |??_7PeripheralPowerDomainConstraint@@6B@|
  00044		 |$M42530|

			 ENDP  ; |??0PeripheralPowerDomainConstraint@@QAA@XZ|, PeripheralPowerDomainConstraint::PeripheralPowerDomainConstraint


  00000			 AREA	 |.pdata|, PDATA
|$T42542| DCD	|$LN5@GetPowerDo@7|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPowerDomain@PeripheralPowerDomainConstraint@@MBAKXZ| PROC ; PeripheralPowerDomainConstraint::GetPowerDomain

; 295  :     GetPowerDomain() const          {return POWERDOMAIN_PERIPHERAL;}

  00000		 |$LN5@GetPowerDo@7|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42539|
  00010	e3a03002	 mov         r3, #2
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M42540|

			 ENDP  ; |?GetPowerDomain@PeripheralPowerDomainConstraint@@MBAKXZ|, PeripheralPowerDomainConstraint::GetPowerDomain

	EXPORT	|??_7CameraPowerDomainConstraint@@6B@| [ DATA ] ; CameraPowerDomainConstraint::`vftable'
	EXPORT	|?GetPowerDomain@CameraPowerDomainConstraint@@MBAKXZ| ; CameraPowerDomainConstraint::GetPowerDomain
	IMPORT	|?UpdatePowerDomainConstraint@CameraPowerDomainConstraint@@MAAHK@Z| ; CameraPowerDomainConstraint::UpdatePowerDomainConstraint
	IMPORT	|?FlushDomainPowerState@CameraPowerDomainConstraint@@UAAHXZ| ; CameraPowerDomainConstraint::FlushDomainPowerState

  00000			 AREA	 |.pdata|, PDATA
|$T42551| DCD	|$LN6@CameraPowe|
	DCD	0x40001104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CameraPowerDomainConstraint@@6B@| DCD |?UpdatePowerDomainConstraint@CameraPowerDomainConstraint@@MAAHK@Z| ; CameraPowerDomainConstraint::`vftable'
	DCD	|?GetPowerDomain@CameraPowerDomainConstraint@@MBAKXZ|
	DCD	|?FlushDomainPowerState@CameraPowerDomainConstraint@@UAAHXZ|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CameraPowerDomainConstraint@@QAA@XZ| PROC ; CameraPowerDomainConstraint::CameraPowerDomainConstraint
  00000		 |$LN6@CameraPowe|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42548|
  00010	e59d0010	 ldr         r0, [sp, #0x10]
  00014	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  00018	e58d0004	 str         r0, [sp, #4]
  0001c	e59f201c	 ldr         r2, [pc, #0x1C]
  00020	e59d3010	 ldr         r3, [sp, #0x10]
  00024	e5832000	 str         r2, [r3]
  00028	e59d3010	 ldr         r3, [sp, #0x10]
  0002c	e58d3000	 str         r3, [sp]
  00030	e59d0000	 ldr         r0, [sp]
  00034	e28dd008	 add         sp, sp, #8
  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN7@CameraPowe|
  00040		 |$LN8@CameraPowe|
  00040	00000000	 DCD         |??_7CameraPowerDomainConstraint@@6B@|
  00044		 |$M42549|

			 ENDP  ; |??0CameraPowerDomainConstraint@@QAA@XZ|, CameraPowerDomainConstraint::CameraPowerDomainConstraint


  00000			 AREA	 |.pdata|, PDATA
|$T42561| DCD	|$LN5@GetPowerDo@8|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPowerDomain@CameraPowerDomainConstraint@@MBAKXZ| PROC ; CameraPowerDomainConstraint::GetPowerDomain

; 391  :     GetPowerDomain() const          {return POWERDOMAIN_CAMERA;}

  00000		 |$LN5@GetPowerDo@8|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42558|
  00010	e3a03009	 mov         r3, #9
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M42559|

			 ENDP  ; |?GetPowerDomain@CameraPowerDomainConstraint@@MBAKXZ|, CameraPowerDomainConstraint::GetPowerDomain

	EXPORT	|??_7NeonPowerDomainConstraint@@6B@| [ DATA ] ; NeonPowerDomainConstraint::`vftable'
	EXPORT	|?GetPowerDomain@NeonPowerDomainConstraint@@MBAKXZ| ; NeonPowerDomainConstraint::GetPowerDomain
	IMPORT	|?UpdatePowerDomainConstraint@NeonPowerDomainConstraint@@MAAHK@Z| ; NeonPowerDomainConstraint::UpdatePowerDomainConstraint
	IMPORT	|?FlushDomainPowerState@NeonPowerDomainConstraint@@UAAHXZ| ; NeonPowerDomainConstraint::FlushDomainPowerState

  00000			 AREA	 |.pdata|, PDATA
|$T42570| DCD	|$LN6@NeonPowerD|
	DCD	0x40001104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7NeonPowerDomainConstraint@@6B@| DCD |?UpdatePowerDomainConstraint@NeonPowerDomainConstraint@@MAAHK@Z| ; NeonPowerDomainConstraint::`vftable'
	DCD	|?GetPowerDomain@NeonPowerDomainConstraint@@MBAKXZ|
	DCD	|?FlushDomainPowerState@NeonPowerDomainConstraint@@UAAHXZ|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0NeonPowerDomainConstraint@@QAA@XZ| PROC ; NeonPowerDomainConstraint::NeonPowerDomainConstraint
  00000		 |$LN6@NeonPowerD|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42567|
  00010	e59d0010	 ldr         r0, [sp, #0x10]
  00014	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  00018	e58d0004	 str         r0, [sp, #4]
  0001c	e59f201c	 ldr         r2, [pc, #0x1C]
  00020	e59d3010	 ldr         r3, [sp, #0x10]
  00024	e5832000	 str         r2, [r3]
  00028	e59d3010	 ldr         r3, [sp, #0x10]
  0002c	e58d3000	 str         r3, [sp]
  00030	e59d0000	 ldr         r0, [sp]
  00034	e28dd008	 add         sp, sp, #8
  00038	e89d6000	 ldmia       sp, {sp, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN7@NeonPowerD|
  00040		 |$LN8@NeonPowerD|
  00040	00000000	 DCD         |??_7NeonPowerDomainConstraint@@6B@|
  00044		 |$M42568|

			 ENDP  ; |??0NeonPowerDomainConstraint@@QAA@XZ|, NeonPowerDomainConstraint::NeonPowerDomainConstraint


  00000			 AREA	 |.pdata|, PDATA
|$T42580| DCD	|$LN5@GetPowerDo@9|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPowerDomain@NeonPowerDomainConstraint@@MBAKXZ| PROC ; NeonPowerDomainConstraint::GetPowerDomain

; 454  :     GetPowerDomain() const          {return POWERDOMAIN_NEON;}

  00000		 |$LN5@GetPowerDo@9|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42577|
  00010	e3a03007	 mov         r3, #7
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M42578|

			 ENDP  ; |?GetPowerDomain@NeonPowerDomainConstraint@@MBAKXZ|, NeonPowerDomainConstraint::GetPowerDomain

	EXPORT	|?PWRDOM_DeinitConstraint@@YAHPAX@Z|	; PWRDOM_DeinitConstraint

  00058			 AREA	 |.pdata|, PDATA
|$T42588| DCD	|$LN7@PWRDOM_Dei|
	DCD	0x40001504
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\pm\constraintadapters\powerdomainconstraint\powerdomaincontext.cpp

  008bc			 AREA	 |.text|, CODE, ARM

  008bc		 |?PWRDOM_DeinitConstraint@@YAHPAX@Z| PROC ; PWRDOM_DeinitConstraint

; 254  : {

  008bc		 |$LN7@PWRDOM_Dei|
  008bc	e1a0c00d	 mov         r12, sp
  008c0	e92d0001	 stmdb       sp!, {r0}
  008c4	e92d5000	 stmdb       sp!, {r12, lr}
  008c8	e24dd008	 sub         sp, sp, #8
  008cc		 |$M42585|

; 255  :     BOOL rc = FALSE;

  008cc	e3a03000	 mov         r3, #0
  008d0	e58d3000	 str         r3, [sp]

; 256  : 
; 257  :     // validate parameters
; 258  :     if (hConstraintAdapter != (HANDLE)&s_PowerDomainInfo) goto cleanUp;

  008d4	e59d2010	 ldr         r2, [sp, #0x10]
  008d8	e59f302c	 ldr         r3, [pc, #0x2C]
  008dc	e1520003	 cmp         r2, r3
  008e0	0a000001	 beq         |$LN2@PWRDOM_Dei|
  008e4	ea000002	 b           |$LN1@PWRDOM_Dei|
  008e8	ea000001	 b           |$cleanUp$41339|
  008ec		 |$LN2@PWRDOM_Dei|

; 259  : 
; 260  :     // don't do anything as this constraint adapter is meant to be loaded
; 261  :     // all the time.
; 262  : 
; 263  :     rc = TRUE;

  008ec	e3a03001	 mov         r3, #1
  008f0	e58d3000	 str         r3, [sp]
  008f4		 |$LN1@PWRDOM_Dei|
  008f4		 |$cleanUp$41339|

; 264  : 
; 265  : cleanUp:
; 266  :     return rc;

  008f4	e59d3000	 ldr         r3, [sp]
  008f8	e58d3004	 str         r3, [sp, #4]

; 267  : } 

  008fc	e59d0004	 ldr         r0, [sp, #4]
  00900	e28dd008	 add         sp, sp, #8
  00904	e89d6000	 ldmia       sp, {sp, lr}
  00908	e12fff1e	 bx          lr
  0090c		 |$LN8@PWRDOM_Dei|
  0090c		 |$LN9@PWRDOM_Dei|
  0090c	00000000	 DCD         |s_PowerDomainInfo|
  00910		 |$M42586|

			 ENDP  ; |?PWRDOM_DeinitConstraint@@YAHPAX@Z|, PWRDOM_DeinitConstraint

	EXPORT	|?NewIndex@?$IndexList@K@@QAAHPAPAKPAK@Z| ; IndexList<unsigned long>::NewIndex
	EXPORT	|?PWRDOM_CreateConstraint@@YAPAXPAX@Z|	; PWRDOM_CreateConstraint
	IMPORT	|LocalFree|
	IMPORT	|LocalAlloc|

  00060			 AREA	 |.pdata|, PDATA
|$T42596| DCD	|$LN11@PWRDOM_Cre|
	DCD	0x40003904
; Function compile flags: /Odtp

  00910			 AREA	 |.text|, CODE, ARM

  00910		 |?PWRDOM_CreateConstraint@@YAPAXPAX@Z| PROC ; PWRDOM_CreateConstraint

; 279  : {

  00910		 |$LN11@PWRDOM_Cre|
  00910	e1a0c00d	 mov         r12, sp
  00914	e92d0001	 stmdb       sp!, {r0}
  00918	e92d5000	 stmdb       sp!, {r12, lr}
  0091c	e24dd020	 sub         sp, sp, #0x20
  00920		 |$M42593|

; 280  :     BOOL b;
; 281  :     DWORD id;
; 282  :     DWORD *pDataNode;
; 283  :     HANDLE rc = NULL;

  00920	e3a03000	 mov         r3, #0
  00924	e58d3008	 str         r3, [sp, #8]

; 284  :     ConstraintContext *pConstraintContext;
; 285  :     
; 286  :     // validate parameters
; 287  :     if (hConstraintAdapter != (HANDLE)&s_PowerDomainInfo) goto cleanUp;

  00928	e59d2028	 ldr         r2, [sp, #0x28]
  0092c	e59f30bc	 ldr         r3, [pc, #0xBC]
  00930	e1520003	 cmp         r2, r3
  00934	0a000001	 beq         |$LN6@PWRDOM_Cre|
  00938	ea000026	 b           |$LN5@PWRDOM_Cre|
  0093c	ea000025	 b           |$cleanUp$41351|
  00940		 |$LN6@PWRDOM_Cre|

; 288  : 
; 289  :     // create structure to maintain constraints for this handle
; 290  :     pConstraintContext = (ConstraintContext*)LocalAlloc(LPTR, sizeof(ConstraintContext));

  00940	e3a01034	 mov         r1, #0x34
  00944	e3a00040	 mov         r0, #0x40
  00948	eb000000	 bl          LocalAlloc
  0094c	e58d0018	 str         r0, [sp, #0x18]
  00950	e59d3018	 ldr         r3, [sp, #0x18]
  00954	e58d3000	 str         r3, [sp]

; 291  :     if (pConstraintContext == NULL) goto cleanUp;

  00958	e59d3000	 ldr         r3, [sp]
  0095c	e3530000	 cmp         r3, #0
  00960	1a000001	 bne         |$LN4@PWRDOM_Cre|
  00964	ea00001b	 b           |$LN3@PWRDOM_Cre|
  00968	ea00001a	 b           |$cleanUp$41351|
  0096c		 |$LN4@PWRDOM_Cre|

; 292  :     memset(pConstraintContext->rgConstraints, 0, sizeof(pConstraintContext->rgConstraints));

  0096c	e3a02034	 mov         r2, #0x34
  00970	e3a01000	 mov         r1, #0
  00974	e59d0000	 ldr         r0, [sp]
  00978	eb000000	 bl          memset

; 293  :     
; 294  :     // get new index
; 295  :     Lock();

  0097c	eb000000	 bl          |?Lock@@YAXXZ|

; 296  :     b = s_PowerDomainInfo.IndexList.NewIndex(&pDataNode, &id);

  00980	e28d2004	 add         r2, sp, #4
  00984	e28d1010	 add         r1, sp, #0x10
  00988	e59f3060	 ldr         r3, [pc, #0x60]
  0098c	e2830050	 add         r0, r3, #0x50
  00990	eb000000	 bl          |?NewIndex@?$IndexList@K@@QAAHPAPAKPAK@Z|
  00994	e58d001c	 str         r0, [sp, #0x1C]
  00998	e59d301c	 ldr         r3, [sp, #0x1C]
  0099c	e58d300c	 str         r3, [sp, #0xC]

; 297  :     Unlock();

  009a0	eb000000	 bl          |?Unlock@@YAXXZ|

; 298  :     
; 299  :     if (b == FALSE)

  009a4	e59d300c	 ldr         r3, [sp, #0xC]
  009a8	e3530000	 cmp         r3, #0
  009ac	1a000003	 bne         |$LN2@PWRDOM_Cre|

; 300  :         {
; 301  :         LocalFree(pConstraintContext);

  009b0	e59d0000	 ldr         r0, [sp]
  009b4	eb000000	 bl          LocalFree
  009b8	ea000006	 b           |$LN1@PWRDOM_Cre|

; 302  :         goto cleanUp;

  009bc	ea000005	 b           |$cleanUp$41351|
  009c0		 |$LN2@PWRDOM_Cre|

; 303  :         }
; 304  : 
; 305  :     // initialize values
; 306  :     rc = (HANDLE)(id + 1);

  009c0	e59d3004	 ldr         r3, [sp, #4]
  009c4	e2833001	 add         r3, r3, #1
  009c8	e58d3008	 str         r3, [sp, #8]

; 307  :     *pDataNode = (DWORD)pConstraintContext;

  009cc	e59d2000	 ldr         r2, [sp]
  009d0	e59d3010	 ldr         r3, [sp, #0x10]
  009d4	e5832000	 str         r2, [r3]
  009d8		 |$LN1@PWRDOM_Cre|
  009d8		 |$LN3@PWRDOM_Cre|
  009d8		 |$LN5@PWRDOM_Cre|
  009d8		 |$cleanUp$41351|

; 308  : 
; 309  : cleanUp:    
; 310  :     return rc;

  009d8	e59d3008	 ldr         r3, [sp, #8]
  009dc	e58d3014	 str         r3, [sp, #0x14]

; 311  : } 

  009e0	e59d0014	 ldr         r0, [sp, #0x14]
  009e4	e28dd020	 add         sp, sp, #0x20
  009e8	e89d6000	 ldmia       sp, {sp, lr}
  009ec	e12fff1e	 bx          lr
  009f0		 |$LN12@PWRDOM_Cre|
  009f0		 |$LN13@PWRDOM_Cre|
  009f0	00000000	 DCD         |s_PowerDomainInfo|
  009f4		 |$M42594|

			 ENDP  ; |?PWRDOM_CreateConstraint@@YAPAXPAX@Z|, PWRDOM_CreateConstraint

	IMPORT	|EnterCriticalSection|

  00068			 AREA	 |.pdata|, PDATA
|$T42603| DCD	|$LN5@Lock|
	DCD	0x40000601
; Function compile flags: /Odtp

  009f4			 AREA	 |.text|, CODE, ARM

  009f4		 |?Lock@@YAXXZ| PROC			; Lock

; 81   : {

  009f4		 |$LN5@Lock|
  009f4	e52de004	 str         lr, [sp, #-4]!
  009f8		 |$M42600|

; 82   :     EnterCriticalSection(&s_PowerDomainInfo.cs);

  009f8	e59f0008	 ldr         r0, [pc, #8]
  009fc	eb000000	 bl          EnterCriticalSection

; 83   : }

  00a00	e49de004	 ldr         lr, [sp], #4
  00a04	e12fff1e	 bx          lr
  00a08		 |$LN6@Lock|
  00a08		 |$LN7@Lock|
  00a08	00000000	 DCD         |s_PowerDomainInfo|
  00a0c		 |$M42601|

			 ENDP  ; |?Lock@@YAXXZ|, Lock

	IMPORT	|LeaveCriticalSection|

  00070			 AREA	 |.pdata|, PDATA
|$T42610| DCD	|$LN5@Unlock|
	DCD	0x40000601
; Function compile flags: /Odtp

  00a0c			 AREA	 |.text|, CODE, ARM

  00a0c		 |?Unlock@@YAXXZ| PROC			; Unlock

; 94   : {

  00a0c		 |$LN5@Unlock|
  00a0c	e52de004	 str         lr, [sp, #-4]!
  00a10		 |$M42607|

; 95   :     LeaveCriticalSection(&s_PowerDomainInfo.cs);

  00a10	e59f0008	 ldr         r0, [pc, #8]
  00a14	eb000000	 bl          LeaveCriticalSection

; 96   : }

  00a18	e49de004	 ldr         lr, [sp], #4
  00a1c	e12fff1e	 bx          lr
  00a20		 |$LN6@Unlock|
  00a20		 |$LN7@Unlock|
  00a20	00000000	 DCD         |s_PowerDomainInfo|
  00a24		 |$M42608|

			 ENDP  ; |?Unlock@@YAXXZ|, Unlock

	EXPORT	|?CreatePowerDomainConstraint@PowerDomainConstraint@@QAAPAXXZ| ; PowerDomainConstraint::CreatePowerDomainConstraint
	EXPORT	|?GetIndex@?$IndexList@K@@QAAPAKK@Z|	; IndexList<unsigned long>::GetIndex
	EXPORT	|?MaxIndex@?$IndexList@K@@QAAKXZ|	; IndexList<unsigned long>::MaxIndex
	EXPORT	|?PWRDOM_UpdateConstraint@@YAHPAXK0I@Z|	; PWRDOM_UpdateConstraint
	IMPORT	|?UpdatePowerDomainConstraint@PowerDomainConstraint@@QAAHPAXKKIK@Z| ; PowerDomainConstraint::UpdatePowerDomainConstraint

  00078			 AREA	 |.pdata|, PDATA
|$T42620| DCD	|$LN20@PWRDOM_Upd|
	DCD	0x40008404
; Function compile flags: /Odtp

  00a24			 AREA	 |.text|, CODE, ARM

  00a24		 |?PWRDOM_UpdateConstraint@@YAHPAXK0I@Z| PROC ; PWRDOM_UpdateConstraint

; 326  : {       

  00a24		 |$LN20@PWRDOM_Upd|
  00a24	e1a0c00d	 mov         r12, sp
  00a28	e92d000f	 stmdb       sp!, {r0 - r3}
  00a2c	e92d5000	 stmdb       sp!, {r12, lr}
  00a30	e24dd03c	 sub         sp, sp, #0x3C
  00a34		 |$M42617|

; 327  :     BOOL rc = FALSE;    

  00a34	e3a03000	 mov         r3, #0
  00a38	e58d3010	 str         r3, [sp, #0x10]

; 328  :     PowerDomainConstraint *pPowerDomain; 
; 329  :     ConstraintContext *pConstraintContext;
; 330  :     POWERDOMAIN_CONSTRAINT_INFO *pConstraintInfo; 
; 331  :     
; 332  :     DWORD id = (DWORD)hConstraintContext - 1;

  00a3c	e59d3044	 ldr         r3, [sp, #0x44]
  00a40	e2433001	 sub         r3, r3, #1
  00a44	e58d3008	 str         r3, [sp, #8]

; 333  :     
; 334  :     // validate parameters
; 335  :     if (size != sizeof(POWERDOMAIN_CONSTRAINT_INFO)) goto cleanUp;

  00a48	e59d3050	 ldr         r3, [sp, #0x50]
  00a4c	e353000c	 cmp         r3, #0xC
  00a50	0a000001	 beq         |$LN15@PWRDOM_Upd|
  00a54	ea00006f	 b           |$LN14@PWRDOM_Upd|
  00a58	ea00006e	 b           |$cleanUp$41375|
  00a5c		 |$LN15@PWRDOM_Upd|

; 336  :     if (id > s_PowerDomainInfo.IndexList.MaxIndex()) goto cleanUp;

  00a5c	e59f31cc	 ldr         r3, [pc, #0x1CC]
  00a60	e2830050	 add         r0, r3, #0x50
  00a64	eb000000	 bl          |?MaxIndex@?$IndexList@K@@QAAKXZ|
  00a68	e58d0028	 str         r0, [sp, #0x28]
  00a6c	e59d2008	 ldr         r2, [sp, #8]
  00a70	e59d3028	 ldr         r3, [sp, #0x28]
  00a74	e1520003	 cmp         r2, r3
  00a78	9a000001	 bls         |$LN13@PWRDOM_Upd|
  00a7c	ea000065	 b           |$LN12@PWRDOM_Upd|
  00a80	ea000064	 b           |$cleanUp$41375|
  00a84		 |$LN13@PWRDOM_Upd|

; 337  : 
; 338  :     // don't allow power domain updates on the thread the callback 
; 339  :     // notification is occurring on or else some general synchronous issues
; 340  :     // will occurr
; 341  :     if (s_PowerDomainInfo.bCallbackMode == TRUE &&
; 342  :         s_PowerDomainInfo.currentTID == GetCurrentThreadId())

  00a84	e59f31a4	 ldr         r3, [pc, #0x1A4]
  00a88	e5933014	 ldr         r3, [r3, #0x14]
  00a8c	e3530001	 cmp         r3, #1
  00a90	1a000008	 bne         |$LN11@PWRDOM_Upd|
  00a94	eb000000	 bl          GetCurrentThreadId
  00a98	e58d002c	 str         r0, [sp, #0x2C]
  00a9c	e59f318c	 ldr         r3, [pc, #0x18C]
  00aa0	e5932018	 ldr         r2, [r3, #0x18]
  00aa4	e59d302c	 ldr         r3, [sp, #0x2C]
  00aa8	e1520003	 cmp         r2, r3
  00aac	1a000001	 bne         |$LN11@PWRDOM_Upd|
  00ab0	ea000058	 b           |$LN10@PWRDOM_Upd|

; 343  :         {
; 344  :         goto cleanUp;

  00ab4	ea000057	 b           |$cleanUp$41375|
  00ab8		 |$LN11@PWRDOM_Upd|

; 345  :         }
; 346  : 
; 347  :     // validate structure
; 348  :     pConstraintInfo = (POWERDOMAIN_CONSTRAINT_INFO*)pParam;

  00ab8	e59d304c	 ldr         r3, [sp, #0x4C]
  00abc	e58d3014	 str         r3, [sp, #0x14]

; 349  :     if (pConstraintInfo->size != sizeof(POWERDOMAIN_CONSTRAINT_INFO)) goto cleanUp;

  00ac0	e59d3014	 ldr         r3, [sp, #0x14]
  00ac4	e5933000	 ldr         r3, [r3]
  00ac8	e353000c	 cmp         r3, #0xC
  00acc	0a000001	 beq         |$LN9@PWRDOM_Upd|
  00ad0	ea000050	 b           |$LN8@PWRDOM_Upd|
  00ad4	ea00004f	 b           |$cleanUp$41375|
  00ad8		 |$LN9@PWRDOM_Upd|

; 350  :     if (pConstraintInfo->powerDomain >= POWERDOMAIN_COUNT) goto cleanUp;

  00ad8	e59d3014	 ldr         r3, [sp, #0x14]
  00adc	e2833004	 add         r3, r3, #4
  00ae0	e5933000	 ldr         r3, [r3]
  00ae4	e353000d	 cmp         r3, #0xD
  00ae8	3a000001	 bcc         |$LN7@PWRDOM_Upd|
  00aec	ea000049	 b           |$LN6@PWRDOM_Upd|
  00af0	ea000048	 b           |$cleanUp$41375|
  00af4		 |$LN7@PWRDOM_Upd|

; 351  :     pPowerDomain = s_PowerDomainInfo.rgPowerDomainStates[pConstraintInfo->powerDomain];

  00af4	e59d3014	 ldr         r3, [sp, #0x14]
  00af8	e2833004	 add         r3, r3, #4
  00afc	e5931000	 ldr         r1, [r3]
  00b00	e3a03004	 mov         r3, #4
  00b04	e0020391	 mul         r2, r1, r3
  00b08	e59f3120	 ldr         r3, [pc, #0x120]
  00b0c	e283301c	 add         r3, r3, #0x1C
  00b10	e0833002	 add         r3, r3, r2
  00b14	e5933000	 ldr         r3, [r3]
  00b18	e58d3018	 str         r3, [sp, #0x18]

; 352  :     if (pPowerDomain == NULL) goto cleanUp;

  00b1c	e59d3018	 ldr         r3, [sp, #0x18]
  00b20	e3530000	 cmp         r3, #0
  00b24	1a000001	 bne         |$LN5@PWRDOM_Upd|
  00b28	ea00003a	 b           |$LN4@PWRDOM_Upd|
  00b2c	ea000039	 b           |$cleanUp$41375|
  00b30		 |$LN5@PWRDOM_Upd|

; 353  : 
; 354  :     // get constraint list
; 355  :     pConstraintContext = *(ConstraintContext**)s_PowerDomainInfo.IndexList.GetIndex(id);

  00b30	e59d1008	 ldr         r1, [sp, #8]
  00b34	e59f30f4	 ldr         r3, [pc, #0xF4]
  00b38	e2830050	 add         r0, r3, #0x50
  00b3c	eb000000	 bl          |?GetIndex@?$IndexList@K@@QAAPAKK@Z|
  00b40	e58d0030	 str         r0, [sp, #0x30]
  00b44	e59d3030	 ldr         r3, [sp, #0x30]
  00b48	e5933000	 ldr         r3, [r3]
  00b4c	e58d300c	 str         r3, [sp, #0xC]

; 356  :     if (pConstraintContext == NULL) goto cleanUp;

  00b50	e59d300c	 ldr         r3, [sp, #0xC]
  00b54	e3530000	 cmp         r3, #0
  00b58	1a000001	 bne         |$LN3@PWRDOM_Upd|
  00b5c	ea00002d	 b           |$LN2@PWRDOM_Upd|
  00b60	ea00002c	 b           |$cleanUp$41375|
  00b64		 |$LN3@PWRDOM_Upd|

; 357  :     
; 358  :     if (pConstraintContext->rgConstraints[pConstraintInfo->powerDomain] == NULL)

  00b64	e59d3014	 ldr         r3, [sp, #0x14]
  00b68	e2833004	 add         r3, r3, #4
  00b6c	e5931000	 ldr         r1, [r3]
  00b70	e3a03004	 mov         r3, #4
  00b74	e0020391	 mul         r2, r1, r3
  00b78	e59d300c	 ldr         r3, [sp, #0xC]
  00b7c	e0833002	 add         r3, r3, r2
  00b80	e5933000	 ldr         r3, [r3]
  00b84	e3530000	 cmp         r3, #0
  00b88	1a00000b	 bne         |$LN1@PWRDOM_Upd|

; 359  :         {
; 360  :         pConstraintContext->rgConstraints[pConstraintInfo->powerDomain] = 
; 361  :             pPowerDomain->CreatePowerDomainConstraint();

  00b8c	e59d0018	 ldr         r0, [sp, #0x18]
  00b90	eb000000	 bl          |?CreatePowerDomainConstraint@PowerDomainConstraint@@QAAPAXXZ|
  00b94	e58d0034	 str         r0, [sp, #0x34]
  00b98	e59d3014	 ldr         r3, [sp, #0x14]
  00b9c	e2833004	 add         r3, r3, #4
  00ba0	e5931000	 ldr         r1, [r3]
  00ba4	e3a03004	 mov         r3, #4
  00ba8	e0020391	 mul         r2, r1, r3
  00bac	e59d300c	 ldr         r3, [sp, #0xC]
  00bb0	e0832002	 add         r2, r3, r2
  00bb4	e59d3034	 ldr         r3, [sp, #0x34]
  00bb8	e5823000	 str         r3, [r2]
  00bbc		 |$LN1@PWRDOM_Upd|

; 362  :         }
; 363  : 
; 364  :     // apply constraint
; 365  :     Lock();

  00bbc	eb000000	 bl          |?Lock@@YAXXZ|

; 366  :     rc = pPowerDomain->UpdatePowerDomainConstraint(
; 367  :             pConstraintContext->rgConstraints[pConstraintInfo->powerDomain],
; 368  :             msg,
; 369  :             pConstraintInfo->state,
; 370  :             sizeof(pConstraintInfo->state),
; 371  :             id
; 372  :             );      

  00bc0	e59d3008	 ldr         r3, [sp, #8]
  00bc4	e58d3004	 str         r3, [sp, #4]
  00bc8	e3a03004	 mov         r3, #4
  00bcc	e58d3000	 str         r3, [sp]
  00bd0	e59d3014	 ldr         r3, [sp, #0x14]
  00bd4	e2833008	 add         r3, r3, #8
  00bd8	e5933000	 ldr         r3, [r3]
  00bdc	e59d2048	 ldr         r2, [sp, #0x48]
  00be0	e59d1014	 ldr         r1, [sp, #0x14]
  00be4	e2811004	 add         r1, r1, #4
  00be8	e591e000	 ldr         lr, [r1]
  00bec	e3a01004	 mov         r1, #4
  00bf0	e000019e	 mul         r0, lr, r1
  00bf4	e59d100c	 ldr         r1, [sp, #0xC]
  00bf8	e0811000	 add         r1, r1, r0
  00bfc	e5911000	 ldr         r1, [r1]
  00c00	e59d0018	 ldr         r0, [sp, #0x18]
  00c04	eb000000	 bl          |?UpdatePowerDomainConstraint@PowerDomainConstraint@@QAAHPAXKKIK@Z|
  00c08	e58d0038	 str         r0, [sp, #0x38]
  00c0c	e59d3038	 ldr         r3, [sp, #0x38]
  00c10	e58d3010	 str         r3, [sp, #0x10]

; 373  :     Unlock();

  00c14	eb000000	 bl          |?Unlock@@YAXXZ|
  00c18		 |$LN2@PWRDOM_Upd|
  00c18		 |$LN4@PWRDOM_Upd|
  00c18		 |$LN6@PWRDOM_Upd|
  00c18		 |$LN8@PWRDOM_Upd|
  00c18		 |$LN10@PWRDOM_Upd|
  00c18		 |$LN12@PWRDOM_Upd|
  00c18		 |$LN14@PWRDOM_Upd|
  00c18		 |$cleanUp$41375|

; 374  :     
; 375  :     
; 376  : cleanUp:
; 377  :     return rc;

  00c18	e59d3010	 ldr         r3, [sp, #0x10]
  00c1c	e58d3024	 str         r3, [sp, #0x24]

; 378  : } 

  00c20	e59d0024	 ldr         r0, [sp, #0x24]
  00c24	e28dd03c	 add         sp, sp, #0x3C
  00c28	e89d6000	 ldmia       sp, {sp, lr}
  00c2c	e12fff1e	 bx          lr
  00c30		 |$LN21@PWRDOM_Upd|
  00c30		 |$LN22@PWRDOM_Upd|
  00c30	00000000	 DCD         |s_PowerDomainInfo|
  00c34		 |$M42618|

			 ENDP  ; |?PWRDOM_UpdateConstraint@@YAHPAXK0I@Z|, PWRDOM_UpdateConstraint

	EXPORT	|?Unlock@PowerDomainConstraint@@QAAXXZ|	; PowerDomainConstraint::Unlock
	EXPORT	|?Lock@PowerDomainConstraint@@QAAXXZ|	; PowerDomainConstraint::Lock
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\pm\constraintadapters\powerdomainconstraint\powerdomainconstraint.h

  00000			 AREA	 |.pdata|, PDATA
|$T42628| DCD	|$LN7@CreatePowe|
	DCD	0x40002304
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CreatePowerDomainConstraint@PowerDomainConstraint@@QAAPAXXZ| PROC ; PowerDomainConstraint::CreatePowerDomainConstraint

; 90   :     {

  00000		 |$LN7@CreatePowe|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd018	 sub         sp, sp, #0x18
  00010		 |$M42625|

; 91   :         BOOL b;
; 92   :         DWORD id;
; 93   :         DWORD *pDataNode;
; 94   :         HANDLE rc = NULL;

  00010	e3a03000	 mov         r3, #0
  00014	e58d3004	 str         r3, [sp, #4]

; 95   : 
; 96   :         Lock();

  00018	e59d0020	 ldr         r0, [sp, #0x20]
  0001c	eb000000	 bl          |?Lock@PowerDomainConstraint@@QAAXXZ|

; 97   :         b = m_IndexList.NewIndex(&pDataNode, &id);

  00020	e28d2000	 add         r2, sp, #0
  00024	e28d100c	 add         r1, sp, #0xC
  00028	e59d3020	 ldr         r3, [sp, #0x20]
  0002c	e2830028	 add         r0, r3, #0x28
  00030	eb000000	 bl          |?NewIndex@?$IndexList@K@@QAAHPAPAKPAK@Z|
  00034	e58d0014	 str         r0, [sp, #0x14]
  00038	e59d3014	 ldr         r3, [sp, #0x14]
  0003c	e58d3008	 str         r3, [sp, #8]

; 98   :         Unlock();

  00040	e59d0020	 ldr         r0, [sp, #0x20]
  00044	eb000000	 bl          |?Unlock@PowerDomainConstraint@@QAAXXZ|

; 99   : 
; 100  :         // get new index
; 101  :         if (b == FALSE)

  00048	e59d3008	 ldr         r3, [sp, #8]
  0004c	e3530000	 cmp         r3, #0
  00050	1a000001	 bne         |$LN2@CreatePowe|
  00054	ea000006	 b           |$LN1@CreatePowe|

; 102  :             {
; 103  :             goto cleanUp;

  00058	ea000005	 b           |$cleanUp$40681|
  0005c		 |$LN2@CreatePowe|

; 104  :             }
; 105  : 
; 106  :         // initialize values
; 107  :         rc = (HANDLE)(id + 1);

  0005c	e59d3000	 ldr         r3, [sp]
  00060	e2833001	 add         r3, r3, #1
  00064	e58d3004	 str         r3, [sp, #4]

; 108  :         *pDataNode = (UINT32)PwrDeviceUnspecified;

  00068	e59d200c	 ldr         r2, [sp, #0xC]
  0006c	e3e03000	 mvn         r3, #0
  00070	e5823000	 str         r3, [r2]
  00074		 |$LN1@CreatePowe|
  00074		 |$cleanUp$40681|

; 109  : 
; 110  :     cleanUp:    
; 111  :         return rc;

  00074	e59d3004	 ldr         r3, [sp, #4]
  00078	e58d3010	 str         r3, [sp, #0x10]

; 112  :     }

  0007c	e59d0010	 ldr         r0, [sp, #0x10]
  00080	e28dd018	 add         sp, sp, #0x18
  00084	e89d6000	 ldmia       sp, {sp, lr}
  00088	e12fff1e	 bx          lr
  0008c		 |$M42626|

			 ENDP  ; |?CreatePowerDomainConstraint@PowerDomainConstraint@@QAAPAXXZ|, PowerDomainConstraint::CreatePowerDomainConstraint


  00000			 AREA	 |.pdata|, PDATA
|$T42635| DCD	|$LN5@Lock@2|
	DCD	0x40000503
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Lock@PowerDomainConstraint@@QAAXXZ| PROC ; PowerDomainConstraint::Lock

; 74   :     {

  00000		 |$LN5@Lock@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42632|

; 75   :     }

  0000c	e89d6000	 ldmia       sp, {sp, lr}
  00010	e12fff1e	 bx          lr
  00014		 |$M42633|

			 ENDP  ; |?Lock@PowerDomainConstraint@@QAAXXZ|, PowerDomainConstraint::Lock


  00000			 AREA	 |.pdata|, PDATA
|$T42642| DCD	|$LN5@Unlock@2|
	DCD	0x40000503
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Unlock@PowerDomainConstraint@@QAAXXZ| PROC ; PowerDomainConstraint::Unlock

; 79   :     {

  00000		 |$LN5@Unlock@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42639|

; 80   :     }

  0000c	e89d6000	 ldmia       sp, {sp, lr}
  00010	e12fff1e	 bx          lr
  00014		 |$M42640|

			 ENDP  ; |?Unlock@PowerDomainConstraint@@QAAXXZ|, PowerDomainConstraint::Unlock

	EXPORT	|?DeleteIndex@?$IndexList@K@@QAAXK@Z|	; IndexList<unsigned long>::DeleteIndex
	EXPORT	|?ClosePowerDomainContraint@PowerDomainConstraint@@QAAHPAX@Z| ; PowerDomainConstraint::ClosePowerDomainContraint
	EXPORT	|?PWRDOM_CloseConstraint@@YAHPAX@Z|	; PWRDOM_CloseConstraint

  00080			 AREA	 |.pdata|, PDATA
|$T42650| DCD	|$LN13@PWRDOM_Clo|
	DCD	0x40005104
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\pm\constraintadapters\powerdomainconstraint\powerdomaincontext.cpp

  00c34			 AREA	 |.text|, CODE, ARM

  00c34		 |?PWRDOM_CloseConstraint@@YAHPAX@Z| PROC ; PWRDOM_CloseConstraint

; 390  : {

  00c34		 |$LN13@PWRDOM_Clo|
  00c34	e1a0c00d	 mov         r12, sp
  00c38	e92d0001	 stmdb       sp!, {r0}
  00c3c	e92d5000	 stmdb       sp!, {r12, lr}
  00c40	e24dd01c	 sub         sp, sp, #0x1C
  00c44		 |$M42647|

; 391  :     BOOL rc = FALSE;

  00c44	e3a03000	 mov         r3, #0
  00c48	e58d3008	 str         r3, [sp, #8]

; 392  :     ConstraintContext *pConstraintContext;
; 393  :     DWORD id = (DWORD)hConstraintContext - 1;

  00c4c	e59d3024	 ldr         r3, [sp, #0x24]
  00c50	e2433001	 sub         r3, r3, #1
  00c54	e58d3000	 str         r3, [sp]

; 394  :     
; 395  :     // validate
; 396  :     if (id > s_PowerDomainInfo.IndexList.MaxIndex()) goto cleanUp;

  00c58	e59f3114	 ldr         r3, [pc, #0x114]
  00c5c	e2830050	 add         r0, r3, #0x50
  00c60	eb000000	 bl          |?MaxIndex@?$IndexList@K@@QAAKXZ|
  00c64	e58d0014	 str         r0, [sp, #0x14]
  00c68	e59d2000	 ldr         r2, [sp]
  00c6c	e59d3014	 ldr         r3, [sp, #0x14]
  00c70	e1520003	 cmp         r2, r3
  00c74	9a000001	 bls         |$LN8@PWRDOM_Clo|
  00c78	ea000037	 b           |$LN7@PWRDOM_Clo|
  00c7c	ea000036	 b           |$cleanUp$41401|
  00c80		 |$LN8@PWRDOM_Clo|

; 397  : 
; 398  :     // get data node
; 399  :     pConstraintContext = *(ConstraintContext**)s_PowerDomainInfo.IndexList.GetIndex(id);

  00c80	e59d1000	 ldr         r1, [sp]
  00c84	e59f30e8	 ldr         r3, [pc, #0xE8]
  00c88	e2830050	 add         r0, r3, #0x50
  00c8c	eb000000	 bl          |?GetIndex@?$IndexList@K@@QAAPAKK@Z|
  00c90	e58d0018	 str         r0, [sp, #0x18]
  00c94	e59d3018	 ldr         r3, [sp, #0x18]
  00c98	e5933000	 ldr         r3, [r3]
  00c9c	e58d3004	 str         r3, [sp, #4]

; 400  :     if (pConstraintContext == NULL) goto cleanUp;

  00ca0	e59d3004	 ldr         r3, [sp, #4]
  00ca4	e3530000	 cmp         r3, #0
  00ca8	1a000001	 bne         |$LN6@PWRDOM_Clo|
  00cac	ea00002a	 b           |$LN5@PWRDOM_Clo|
  00cb0	ea000029	 b           |$cleanUp$41401|
  00cb4		 |$LN6@PWRDOM_Clo|

; 401  : 
; 402  :     Lock();    

  00cb4	eb000000	 bl          |?Lock@@YAXXZ|

; 403  :     for (int i = 0; i < POWERDOMAIN_COUNT; ++i)

  00cb8	e3a03000	 mov         r3, #0
  00cbc	e58d300c	 str         r3, [sp, #0xC]
  00cc0	ea000002	 b           |$LN4@PWRDOM_Clo|
  00cc4		 |$LN3@PWRDOM_Clo|
  00cc4	e59d300c	 ldr         r3, [sp, #0xC]
  00cc8	e2833001	 add         r3, r3, #1
  00ccc	e58d300c	 str         r3, [sp, #0xC]
  00cd0		 |$LN4@PWRDOM_Clo|
  00cd0	e59d300c	 ldr         r3, [sp, #0xC]
  00cd4	e353000d	 cmp         r3, #0xD
  00cd8	aa000016	 bge         |$LN2@PWRDOM_Clo|

; 404  :         {
; 405  :         if (pConstraintContext->rgConstraints[i] != NULL)

  00cdc	e59d100c	 ldr         r1, [sp, #0xC]
  00ce0	e3a03004	 mov         r3, #4
  00ce4	e0020391	 mul         r2, r1, r3
  00ce8	e59d3004	 ldr         r3, [sp, #4]
  00cec	e0833002	 add         r3, r3, r2
  00cf0	e5933000	 ldr         r3, [r3]
  00cf4	e3530000	 cmp         r3, #0
  00cf8	0a00000d	 beq         |$LN1@PWRDOM_Clo|

; 406  :             {
; 407  :             s_PowerDomainInfo.rgPowerDomainStates[i]->ClosePowerDomainContraint(
; 408  :                 pConstraintContext->rgConstraints[i]
; 409  :                 );

  00cfc	e59d100c	 ldr         r1, [sp, #0xC]
  00d00	e3a03004	 mov         r3, #4
  00d04	e0020391	 mul         r2, r1, r3
  00d08	e59d3004	 ldr         r3, [sp, #4]
  00d0c	e0833002	 add         r3, r3, r2
  00d10	e5931000	 ldr         r1, [r3]
  00d14	e59d000c	 ldr         r0, [sp, #0xC]
  00d18	e3a03004	 mov         r3, #4
  00d1c	e0020390	 mul         r2, r0, r3
  00d20	e59f304c	 ldr         r3, [pc, #0x4C]
  00d24	e283301c	 add         r3, r3, #0x1C
  00d28	e0833002	 add         r3, r3, r2
  00d2c	e5930000	 ldr         r0, [r3]
  00d30	eb000000	 bl          |?ClosePowerDomainContraint@PowerDomainConstraint@@QAAHPAX@Z|
  00d34		 |$LN1@PWRDOM_Clo|

; 410  :             }
; 411  :         }

  00d34	eaffffe2	 b           |$LN3@PWRDOM_Clo|
  00d38		 |$LN2@PWRDOM_Clo|

; 412  : 
; 413  :     LocalFree(pConstraintContext);    

  00d38	e59d0004	 ldr         r0, [sp, #4]
  00d3c	eb000000	 bl          LocalFree

; 414  :     s_PowerDomainInfo.IndexList.DeleteIndex(id);  

  00d40	e59d1000	 ldr         r1, [sp]
  00d44	e59f3028	 ldr         r3, [pc, #0x28]
  00d48	e2830050	 add         r0, r3, #0x50
  00d4c	eb000000	 bl          |?DeleteIndex@?$IndexList@K@@QAAXK@Z|

; 415  :     Unlock();

  00d50	eb000000	 bl          |?Unlock@@YAXXZ|

; 416  :     
; 417  :     rc = TRUE;

  00d54	e3a03001	 mov         r3, #1
  00d58	e58d3008	 str         r3, [sp, #8]
  00d5c		 |$LN5@PWRDOM_Clo|
  00d5c		 |$LN7@PWRDOM_Clo|
  00d5c		 |$cleanUp$41401|

; 418  : cleanUp:    
; 419  :     return rc;

  00d5c	e59d3008	 ldr         r3, [sp, #8]
  00d60	e58d3010	 str         r3, [sp, #0x10]

; 420  : } 

  00d64	e59d0010	 ldr         r0, [sp, #0x10]
  00d68	e28dd01c	 add         sp, sp, #0x1C
  00d6c	e89d6000	 ldmia       sp, {sp, lr}
  00d70	e12fff1e	 bx          lr
  00d74		 |$LN14@PWRDOM_Clo|
  00d74		 |$LN15@PWRDOM_Clo|
  00d74	00000000	 DCD         |s_PowerDomainInfo|
  00d78		 |$M42648|

			 ENDP  ; |?PWRDOM_CloseConstraint@@YAHPAX@Z|, PWRDOM_CloseConstraint

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\pm\constraintadapters\powerdomainconstraint\powerdomainconstraint.h

  00000			 AREA	 |.pdata|, PDATA
|$T42658| DCD	|$LN11@ClosePower|
	DCD	0x40005504
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ClosePowerDomainContraint@PowerDomainConstraint@@QAAHPAX@Z| PROC ; PowerDomainConstraint::ClosePowerDomainContraint

; 118  :     {

  00000		 |$LN11@ClosePower|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd018	 sub         sp, sp, #0x18
  00010		 |$M42655|

; 119  :         BOOL rc = FALSE;

  00010	e3a03000	 mov         r3, #0
  00014	e58d3004	 str         r3, [sp, #4]

; 120  :         DWORD *pDataNode;
; 121  :         DWORD id = (DWORD)hConstraintContext - 1;

  00018	e59d3024	 ldr         r3, [sp, #0x24]
  0001c	e2433001	 sub         r3, r3, #1
  00020	e58d3000	 str         r3, [sp]

; 122  : 
; 123  :         // validate
; 124  :         if (id > m_IndexList.MaxIndex()) goto cleanUp;

  00024	e59d3020	 ldr         r3, [sp, #0x20]
  00028	e2830028	 add         r0, r3, #0x28
  0002c	eb000000	 bl          |?MaxIndex@?$IndexList@K@@QAAKXZ|
  00030	e58d0010	 str         r0, [sp, #0x10]
  00034	e59d2000	 ldr         r2, [sp]
  00038	e59d3010	 ldr         r3, [sp, #0x10]
  0003c	e1520003	 cmp         r2, r3
  00040	9a000001	 bls         |$LN6@ClosePower|
  00044	ea00003c	 b           |$LN5@ClosePower|
  00048	ea00003b	 b           |$cleanUp$40692|
  0004c		 |$LN6@ClosePower|

; 125  : 
; 126  :         // get data node
; 127  :         pDataNode = m_IndexList.GetIndex(id);

  0004c	e59d1000	 ldr         r1, [sp]
  00050	e59d3020	 ldr         r3, [sp, #0x20]
  00054	e2830028	 add         r0, r3, #0x28
  00058	eb000000	 bl          |?GetIndex@?$IndexList@K@@QAAPAKK@Z|
  0005c	e58d0014	 str         r0, [sp, #0x14]
  00060	e59d3014	 ldr         r3, [sp, #0x14]
  00064	e58d3008	 str         r3, [sp, #8]

; 128  :         if (pDataNode == NULL) goto cleanUp;

  00068	e59d3008	 ldr         r3, [sp, #8]
  0006c	e3530000	 cmp         r3, #0
  00070	1a000001	 bne         |$LN4@ClosePower|
  00074	ea000030	 b           |$LN3@ClosePower|
  00078	ea00002f	 b           |$cleanUp$40692|
  0007c		 |$LN4@ClosePower|

; 129  : 
; 130  :         Lock();

  0007c	e59d0020	 ldr         r0, [sp, #0x20]
  00080	eb000000	 bl          |?Lock@PowerDomainConstraint@@QAAXXZ|

; 131  : 
; 132  :         // free any forced constraint
; 133  :         if (m_powerDomainForce == id)

  00084	e59d3020	 ldr         r3, [sp, #0x20]
  00088	e2833020	 add         r3, r3, #0x20
  0008c	e5932000	 ldr         r2, [r3]
  00090	e59d3000	 ldr         r3, [sp]
  00094	e1520003	 cmp         r2, r3
  00098	1a000003	 bne         |$LN2@ClosePower|

; 134  :             {
; 135  :             m_powerDomainForce = (DWORD)-1;

  0009c	e59d3020	 ldr         r3, [sp, #0x20]
  000a0	e2832020	 add         r2, r3, #0x20
  000a4	e3e03000	 mvn         r3, #0
  000a8	e5823000	 str         r3, [r2]
  000ac		 |$LN2@ClosePower|

; 136  :             }
; 137  : 
; 138  :         // update operating mode
; 139  :         if (*pDataNode != PwrDeviceUnspecified)

  000ac	e59d3008	 ldr         r3, [sp, #8]
  000b0	e5933000	 ldr         r3, [r3]
  000b4	e3730001	 cmn         r3, #1
  000b8	0a000017	 beq         |$LN1@ClosePower|

; 140  :             {
; 141  :             m_rgPowerDomainConstraints[*pDataNode] -= 1;

  000bc	e59d3020	 ldr         r3, [sp, #0x20]
  000c0	e2831004	 add         r1, r3, #4
  000c4	e59d3008	 ldr         r3, [sp, #8]
  000c8	e5932000	 ldr         r2, [r3]
  000cc	e3a03004	 mov         r3, #4
  000d0	e0030392	 mul         r3, r2, r3
  000d4	e0813003	 add         r3, r1, r3
  000d8	e5933000	 ldr         r3, [r3]
  000dc	e2430001	 sub         r0, r3, #1
  000e0	e59d3008	 ldr         r3, [sp, #8]
  000e4	e5931000	 ldr         r1, [r3]
  000e8	e3a03004	 mov         r3, #4
  000ec	e0020391	 mul         r2, r1, r3
  000f0	e59d3020	 ldr         r3, [sp, #0x20]
  000f4	e2833004	 add         r3, r3, #4
  000f8	e0833002	 add         r3, r3, r2
  000fc	e5830000	 str         r0, [r3]

; 142  :             UpdatePowerDomainConstraint(id);

  00100	e59d1000	 ldr         r1, [sp]
  00104	e59d3020	 ldr         r3, [sp, #0x20]
  00108	e5933000	 ldr         r3, [r3]
  0010c	e59d0020	 ldr         r0, [sp, #0x20]
  00110	e5933000	 ldr         r3, [r3]
  00114	e1a0e00f	 mov         lr, pc
  00118	e12fff13	 bx          r3
  0011c		 |$LN1@ClosePower|

; 143  :             }
; 144  : 
; 145  :         m_IndexList.DeleteIndex(id);

  0011c	e59d1000	 ldr         r1, [sp]
  00120	e59d3020	 ldr         r3, [sp, #0x20]
  00124	e2830028	 add         r0, r3, #0x28
  00128	eb000000	 bl          |?DeleteIndex@?$IndexList@K@@QAAXK@Z|

; 146  :         
; 147  :         Unlock();

  0012c	e59d0020	 ldr         r0, [sp, #0x20]
  00130	eb000000	 bl          |?Unlock@PowerDomainConstraint@@QAAXXZ|

; 148  :         
; 149  :         rc = TRUE;

  00134	e3a03001	 mov         r3, #1
  00138	e58d3004	 str         r3, [sp, #4]
  0013c		 |$LN3@ClosePower|
  0013c		 |$LN5@ClosePower|
  0013c		 |$cleanUp$40692|

; 150  :     cleanUp:    
; 151  :         return rc;

  0013c	e59d3004	 ldr         r3, [sp, #4]
  00140	e58d300c	 str         r3, [sp, #0xC]

; 152  :     } 

  00144	e59d000c	 ldr         r0, [sp, #0xC]
  00148	e28dd018	 add         sp, sp, #0x18
  0014c	e89d6000	 ldmia       sp, {sp, lr}
  00150	e12fff1e	 bx          lr
  00154		 |$M42656|

			 ENDP  ; |?ClosePowerDomainContraint@PowerDomainConstraint@@QAAHPAX@Z|, PowerDomainConstraint::ClosePowerDomainContraint

	EXPORT	|?push_back@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAAXABQAUPowerDomainCallbackInfo_t@@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::push_back
	EXPORT	|?PWRDOM_InsertConstraintCallback@@YAPAXPAX00I0@Z| ; PWRDOM_InsertConstraintCallback

  00088			 AREA	 |.pdata|, PDATA
|$T42666| DCD	|$LN11@PWRDOM_Ins|
	DCD	0x40004a04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\pm\constraintadapters\powerdomainconstraint\powerdomaincontext.cpp

  00d78			 AREA	 |.text|, CODE, ARM

  00d78		 |?PWRDOM_InsertConstraintCallback@@YAPAXPAX00I0@Z| PROC ; PWRDOM_InsertConstraintCallback

; 436  : {

  00d78		 |$LN11@PWRDOM_Ins|
  00d78	e1a0c00d	 mov         r12, sp
  00d7c	e92d000f	 stmdb       sp!, {r0 - r3}
  00d80	e92d5000	 stmdb       sp!, {r12, lr}
  00d84	e24dd020	 sub         sp, sp, #0x20
  00d88		 |$M42663|

; 437  :     HANDLE rc = NULL;

  00d88	e3a03000	 mov         r3, #0
  00d8c	e58d3004	 str         r3, [sp, #4]

; 438  :     DWORD *pDataNode;
; 439  :     DWORD id = (DWORD)hConstraintContext - 1;

  00d90	e59d3028	 ldr         r3, [sp, #0x28]
  00d94	e2433001	 sub         r3, r3, #1
  00d98	e58d3000	 str         r3, [sp]

; 440  :     PowerDomainCallbackInfo_t *pCallbackInfo;
; 441  : 
; 442  :     UNREFERENCED_PARAMETER(size);
; 443  :     UNREFERENCED_PARAMETER(pParam);
; 444  : 
; 445  :     // validate
; 446  :     if (id >s_PowerDomainInfo.IndexList.MaxIndex()) goto cleanUp;

  00d9c	e59f30f8	 ldr         r3, [pc, #0xF8]
  00da0	e2830050	 add         r0, r3, #0x50
  00da4	eb000000	 bl          |?MaxIndex@?$IndexList@K@@QAAKXZ|
  00da8	e58d0014	 str         r0, [sp, #0x14]
  00dac	e59d2000	 ldr         r2, [sp]
  00db0	e59d3014	 ldr         r3, [sp, #0x14]
  00db4	e1520003	 cmp         r2, r3
  00db8	9a000001	 bls         |$LN6@PWRDOM_Ins|
  00dbc	ea00002f	 b           |$LN5@PWRDOM_Ins|
  00dc0	ea00002e	 b           |$cleanUp$41424|
  00dc4		 |$LN6@PWRDOM_Ins|

; 447  : 
; 448  :     // get data node
; 449  :     pDataNode = s_PowerDomainInfo.IndexList.GetIndex(id);

  00dc4	e59d1000	 ldr         r1, [sp]
  00dc8	e59f30cc	 ldr         r3, [pc, #0xCC]
  00dcc	e2830050	 add         r0, r3, #0x50
  00dd0	eb000000	 bl          |?GetIndex@?$IndexList@K@@QAAPAKK@Z|
  00dd4	e58d0018	 str         r0, [sp, #0x18]
  00dd8	e59d3018	 ldr         r3, [sp, #0x18]
  00ddc	e58d300c	 str         r3, [sp, #0xC]

; 450  :     if (pDataNode == NULL) goto cleanUp;

  00de0	e59d300c	 ldr         r3, [sp, #0xC]
  00de4	e3530000	 cmp         r3, #0
  00de8	1a000001	 bne         |$LN4@PWRDOM_Ins|
  00dec	ea000023	 b           |$LN3@PWRDOM_Ins|
  00df0	ea000022	 b           |$cleanUp$41424|
  00df4		 |$LN4@PWRDOM_Ins|

; 451  : 
; 452  :     // allocate callback structure
; 453  :     pCallbackInfo = (PowerDomainCallbackInfo_t*)LocalAlloc(LPTR, sizeof(PowerDomainCallbackInfo_t));

  00df4	e3a01014	 mov         r1, #0x14
  00df8	e3a00040	 mov         r0, #0x40
  00dfc	eb000000	 bl          LocalAlloc
  00e00	e58d001c	 str         r0, [sp, #0x1C]
  00e04	e59d301c	 ldr         r3, [sp, #0x1C]
  00e08	e58d3008	 str         r3, [sp, #8]

; 454  :     if (pCallbackInfo == NULL) goto cleanUp;

  00e0c	e59d3008	 ldr         r3, [sp, #8]
  00e10	e3530000	 cmp         r3, #0
  00e14	1a000001	 bne         |$LN2@PWRDOM_Ins|
  00e18	ea000018	 b           |$LN1@PWRDOM_Ins|
  00e1c	ea000017	 b           |$cleanUp$41424|
  00e20		 |$LN2@PWRDOM_Ins|

; 455  : 
; 456  :     // initialize structure
; 457  :     pCallbackInfo->idContext = id;

  00e20	e59d2000	 ldr         r2, [sp]
  00e24	e59d3008	 ldr         r3, [sp, #8]
  00e28	e5832000	 str         r2, [r3]

; 458  :     pCallbackInfo->fnCallback = (ConstraintCallback)pCallback;

  00e2c	e59d3008	 ldr         r3, [sp, #8]
  00e30	e2832004	 add         r2, r3, #4
  00e34	e59d302c	 ldr         r3, [sp, #0x2C]
  00e38	e5823000	 str         r3, [r2]

; 459  :     pCallbackInfo->hConstraintContext = hConstraintContext;

  00e3c	e59d3008	 ldr         r3, [sp, #8]
  00e40	e283200c	 add         r2, r3, #0xC
  00e44	e59d3028	 ldr         r3, [sp, #0x28]
  00e48	e5823000	 str         r3, [r2]

; 460  :     pCallbackInfo->hCallbackContext = pCallbackInfo;

  00e4c	e59d3008	 ldr         r3, [sp, #8]
  00e50	e2832010	 add         r2, r3, #0x10
  00e54	e59d3008	 ldr         r3, [sp, #8]
  00e58	e5823000	 str         r3, [r2]

; 461  :     pCallbackInfo->hRefContext = hRefContext;

  00e5c	e59d3008	 ldr         r3, [sp, #8]
  00e60	e2832008	 add         r2, r3, #8
  00e64	e59d3038	 ldr         r3, [sp, #0x38]
  00e68	e5823000	 str         r3, [r2]

; 462  :     
; 463  :     // insert into callback list
; 464  :     Lock();

  00e6c	eb000000	 bl          |?Lock@@YAXXZ|

; 465  :     s_CallbackList.push_back(pCallbackInfo);

  00e70	e28d1008	 add         r1, sp, #8
  00e74	e59f001c	 ldr         r0, [pc, #0x1C]
  00e78	eb000000	 bl          |?push_back@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAAXABQAUPowerDomainCallbackInfo_t@@@Z|

; 466  :     Unlock();

  00e7c	eb000000	 bl          |?Unlock@@YAXXZ|
  00e80		 |$LN1@PWRDOM_Ins|
  00e80		 |$LN3@PWRDOM_Ins|
  00e80		 |$LN5@PWRDOM_Ins|
  00e80		 |$cleanUp$41424|

; 467  :     
; 468  : cleanUp:
; 469  :     return rc;

  00e80	e59d3004	 ldr         r3, [sp, #4]
  00e84	e58d3010	 str         r3, [sp, #0x10]

; 470  : } 

  00e88	e59d0010	 ldr         r0, [sp, #0x10]
  00e8c	e28dd020	 add         sp, sp, #0x20
  00e90	e89d6000	 ldmia       sp, {sp, lr}
  00e94	e12fff1e	 bx          lr
  00e98		 |$LN12@PWRDOM_Ins|
  00e98		 |$LN13@PWRDOM_Ins|
  00e98	00000000	 DCD         |s_CallbackList|
  00e9c		 |$LN14@PWRDOM_Ins|
  00e9c	00000000	 DCD         |s_PowerDomainInfo|
  00ea0		 |$M42664|

			 ENDP  ; |?PWRDOM_InsertConstraintCallback@@YAPAXPAX00I0@Z|, PWRDOM_InsertConstraintCallback

	EXPORT	|?erase@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::erase
	EXPORT	|?PWRDOM_RemoveConstraintCallback@@YAHPAX@Z| ; PWRDOM_RemoveConstraintCallback

  00090			 AREA	 |.pdata|, PDATA
|$T42678| DCD	|$LN9@PWRDOM_Rem|
	DCD	0x40003f04
; Function compile flags: /Odtp

  00ea0			 AREA	 |.text|, CODE, ARM

  00ea0		 |?PWRDOM_RemoveConstraintCallback@@YAHPAX@Z| PROC ; PWRDOM_RemoveConstraintCallback

; 482  : {

  00ea0		 |$LN9@PWRDOM_Rem|
  00ea0	e1a0c00d	 mov         r12, sp
  00ea4	e92d0001	 stmdb       sp!, {r0}
  00ea8	e92d5000	 stmdb       sp!, {r12, lr}
  00eac	e24dd02c	 sub         sp, sp, #0x2C
  00eb0		 |$M42675|

; 483  :     BOOL rc = FALSE;

  00eb0	e3a03000	 mov         r3, #0
  00eb4	e58d3000	 str         r3, [sp]

; 484  :     list<PowerDomainCallbackInfo_t*>::iterator iter;

  00eb8	e28d0004	 add         r0, sp, #4
  00ebc	eb000000	 bl          |??0iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@XZ|

; 485  :     
; 486  :     // find entry with matching callback info
; 487  :     Lock();

  00ec0	eb000000	 bl          |?Lock@@YAXXZ|

; 488  :     for (iter = s_CallbackList.begin(); iter != s_CallbackList.end(); ++iter)

  00ec4	e28d1008	 add         r1, sp, #8
  00ec8	e59f00c8	 ldr         r0, [pc, #0xC8]
  00ecc	eb000000	 bl          |?begin@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@XZ|
  00ed0	e58d0018	 str         r0, [sp, #0x18]
  00ed4	e59d1018	 ldr         r1, [sp, #0x18]
  00ed8	e28d0004	 add         r0, sp, #4
  00edc	e3a02004	 mov         r2, #4
  00ee0	eb000000	 bl          memcpy
  00ee4	ea000001	 b           |$LN4@PWRDOM_Rem|
  00ee8		 |$LN3@PWRDOM_Rem|
  00ee8	e28d0004	 add         r0, sp, #4
  00eec	eb000000	 bl          |??Eiterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAAAAV012@XZ|
  00ef0		 |$LN4@PWRDOM_Rem|
  00ef0	e28d100c	 add         r1, sp, #0xC
  00ef4	e59f009c	 ldr         r0, [pc, #0x9C]
  00ef8	eb000000	 bl          |?end@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@XZ|
  00efc	e58d001c	 str         r0, [sp, #0x1C]
  00f00	e59d101c	 ldr         r1, [sp, #0x1C]
  00f04	e28d0004	 add         r0, sp, #4
  00f08	eb000000	 bl          |??9iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBA_NABV012@@Z|
  00f0c	e5cd0020	 strb        r0, [sp, #0x20]
  00f10	e5dd3020	 ldrb        r3, [sp, #0x20]
  00f14	e3530000	 cmp         r3, #0
  00f18	0a000017	 beq         |$LN2@PWRDOM_Rem|

; 489  :         {
; 490  :         if ((*iter)->hCallbackContext == hConstraintCallback)

  00f1c	e28d0004	 add         r0, sp, #4
  00f20	eb000000	 bl          |??Diterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBAAAPAUPowerDomainCallbackInfo_t@@XZ|
  00f24	e58d0024	 str         r0, [sp, #0x24]
  00f28	e59d3024	 ldr         r3, [sp, #0x24]
  00f2c	e5933000	 ldr         r3, [r3]
  00f30	e2833010	 add         r3, r3, #0x10
  00f34	e5932000	 ldr         r2, [r3]
  00f38	e59d3034	 ldr         r3, [sp, #0x34]
  00f3c	e1520003	 cmp         r2, r3
  00f40	1a00000c	 bne         |$LN1@PWRDOM_Rem|

; 491  :             {
; 492  :             // free resources
; 493  :             LocalFree(*iter);

  00f44	e28d0004	 add         r0, sp, #4
  00f48	eb000000	 bl          |??Diterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBAAAPAUPowerDomainCallbackInfo_t@@XZ|
  00f4c	e58d0028	 str         r0, [sp, #0x28]
  00f50	e59d3028	 ldr         r3, [sp, #0x28]
  00f54	e5930000	 ldr         r0, [r3]
  00f58	eb000000	 bl          LocalFree

; 494  :             s_CallbackList.erase(iter);

  00f5c	e59d2004	 ldr         r2, [sp, #4]
  00f60	e28d1010	 add         r1, sp, #0x10
  00f64	e59f002c	 ldr         r0, [pc, #0x2C]
  00f68	eb000000	 bl          |?erase@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@@Z|

; 495  :             rc = TRUE;

  00f6c	e3a03001	 mov         r3, #1
  00f70	e58d3000	 str         r3, [sp]

; 496  :             break;

  00f74	ea000000	 b           |$LN2@PWRDOM_Rem|
  00f78		 |$LN1@PWRDOM_Rem|

; 497  :             }
; 498  :         }

  00f78	eaffffda	 b           |$LN3@PWRDOM_Rem|
  00f7c		 |$LN2@PWRDOM_Rem|

; 499  :     Unlock();

  00f7c	eb000000	 bl          |?Unlock@@YAXXZ|

; 500  : 
; 501  :     return rc;

  00f80	e59d3000	 ldr         r3, [sp]
  00f84	e58d3014	 str         r3, [sp, #0x14]

; 502  : } 

  00f88	e59d0014	 ldr         r0, [sp, #0x14]
  00f8c	e28dd02c	 add         sp, sp, #0x2C
  00f90	e89d6000	 ldmia       sp, {sp, lr}
  00f94	e12fff1e	 bx          lr
  00f98		 |$LN10@PWRDOM_Rem|
  00f98		 |$LN11@PWRDOM_Rem|
  00f98	00000000	 DCD         |s_CallbackList|
  00f9c		 |$M42676|

			 ENDP  ; |?PWRDOM_RemoveConstraintCallback@@YAHPAX@Z|, PWRDOM_RemoveConstraintCallback

; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\inc\indexlist.h

  00000			 AREA	 |.pdata|, PDATA
|$T42686| DCD	|$LN5@IndexList|
	DCD	0x40001204
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0?$IndexList@K@@QAA@XZ| PROC	; IndexList<unsigned long>::IndexList<unsigned long>

; 51   :     IndexList()

  00000		 |$LN5@IndexList|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42683|

; 52   :     {        
; 53   :         memset(&m_Head, 0, sizeof(IndexData));

  00010	e3a02088	 mov         r2, #0x88
  00014	e3a01000	 mov         r1, #0
  00018	e59d000c	 ldr         r0, [sp, #0xC]
  0001c	eb000000	 bl          memset

; 54   :         m_maxIndex = INDEXED_CHUNK_SIZE - 1;

  00020	e59d300c	 ldr         r3, [sp, #0xC]
  00024	e2832088	 add         r2, r3, #0x88
  00028	e3a0301f	 mov         r3, #0x1F
  0002c	e5823000	 str         r3, [r2]

; 55   :     }

  00030	e59d300c	 ldr         r3, [sp, #0xC]
  00034	e58d3000	 str         r3, [sp]
  00038	e59d0000	 ldr         r0, [sp]
  0003c	e28dd004	 add         sp, sp, #4
  00040	e89d6000	 ldmia       sp, {sp, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$M42684|

			 ENDP  ; |??0?$IndexList@K@@QAA@XZ|, IndexList<unsigned long>::IndexList<unsigned long>


  00000			 AREA	 |.pdata|, PDATA
|$T42694| DCD	|$LN5@MaxIndex|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?MaxIndex@?$IndexList@K@@QAAKXZ| PROC	; IndexList<unsigned long>::MaxIndex

; 76   :     {

  00000		 |$LN5@MaxIndex|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42691|

; 77   :         return m_maxIndex;

  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833088	 add         r3, r3, #0x88
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]

; 78   :     }

  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M42692|

			 ENDP  ; |?MaxIndex@?$IndexList@K@@QAAKXZ|, IndexList<unsigned long>::MaxIndex


  00000			 AREA	 |.pdata|, PDATA
|$T42703| DCD	|$LN12@NewIndex|
	DCD	0x40006204
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?NewIndex@?$IndexList@K@@QAAHPAPAKPAK@Z| PROC ; IndexList<unsigned long>::NewIndex

; 81   :     {

  00000		 |$LN12@NewIndex|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd020	 sub         sp, sp, #0x20
  00010		 |$M42700|

; 82   :         DWORD ffMask;
; 83   :         INT index = 0;        

  00010	e3a03000	 mov         r3, #0
  00014	e58d3004	 str         r3, [sp, #4]

; 84   :         BOOL rc = FALSE;        

  00018	e3a03000	 mov         r3, #0
  0001c	e58d3000	 str         r3, [sp]

; 85   :         IndexData *pCurrent;
; 86   : 
; 87   :         // find emtpy chunk
; 88   :         pCurrent = &m_Head;

  00020	e59d3028	 ldr         r3, [sp, #0x28]
  00024	e58d300c	 str         r3, [sp, #0xC]
  00028		 |$LN7@NewIndex|

; 89   :         while (pCurrent->ffMask == (-1))

  00028	e59d300c	 ldr         r3, [sp, #0xC]
  0002c	e2833004	 add         r3, r3, #4
  00030	e5933000	 ldr         r3, [r3]
  00034	e3730001	 cmn         r3, #1
  00038	1a000024	 bne         |$LN6@NewIndex|

; 90   :             {
; 91   :             if (pCurrent->pNext == NULL)

  0003c	e59d300c	 ldr         r3, [sp, #0xC]
  00040	e5933000	 ldr         r3, [r3]
  00044	e3530000	 cmp         r3, #0
  00048	1a000019	 bne         |$LN5@NewIndex|

; 92   :                 {
; 93   :                 IndexData *pNew = new IndexData;

  0004c	e3a00088	 mov         r0, #0x88
  00050	eb000000	 bl          |??2@YAPAXI@Z|
  00054	e58d001c	 str         r0, [sp, #0x1C]
  00058	e59d301c	 ldr         r3, [sp, #0x1C]
  0005c	e58d3014	 str         r3, [sp, #0x14]
  00060	e59d3014	 ldr         r3, [sp, #0x14]
  00064	e58d3010	 str         r3, [sp, #0x10]

; 94   :                 if (pNew == NULL) goto cleanUp;

  00068	e59d3010	 ldr         r3, [sp, #0x10]
  0006c	e3530000	 cmp         r3, #0
  00070	1a000001	 bne         |$LN4@NewIndex|
  00074	ea00003d	 b           |$LN3@NewIndex|
  00078	ea00003c	 b           |$cleanUp$41482|
  0007c		 |$LN4@NewIndex|

; 95   : 
; 96   :                 memset(pNew, 0, sizeof(IndexData));

  0007c	e3a02088	 mov         r2, #0x88
  00080	e3a01000	 mov         r1, #0
  00084	e59d0010	 ldr         r0, [sp, #0x10]
  00088	eb000000	 bl          memset

; 97   :                 pCurrent->pNext = pNew;

  0008c	e59d2010	 ldr         r2, [sp, #0x10]
  00090	e59d300c	 ldr         r3, [sp, #0xC]
  00094	e5832000	 str         r2, [r3]

; 98   :                 m_maxIndex += INDEXED_CHUNK_SIZE;

  00098	e59d3028	 ldr         r3, [sp, #0x28]
  0009c	e2833088	 add         r3, r3, #0x88
  000a0	e5933000	 ldr         r3, [r3]
  000a4	e2832020	 add         r2, r3, #0x20
  000a8	e59d3028	 ldr         r3, [sp, #0x28]
  000ac	e2833088	 add         r3, r3, #0x88
  000b0	e5832000	 str         r2, [r3]
  000b4		 |$LN5@NewIndex|

; 99   :                 }
; 100  : 
; 101  :             index += INDEXED_CHUNK_SIZE;

  000b4	e59d3004	 ldr         r3, [sp, #4]
  000b8	e2833020	 add         r3, r3, #0x20
  000bc	e58d3004	 str         r3, [sp, #4]

; 102  :             pCurrent = pCurrent->pNext;

  000c0	e59d300c	 ldr         r3, [sp, #0xC]
  000c4	e5933000	 ldr         r3, [r3]
  000c8	e58d300c	 str         r3, [sp, #0xC]

; 103  :             }

  000cc	eaffffd5	 b           |$LN7@NewIndex|
  000d0		 |$LN6@NewIndex|

; 104  : 
; 105  :         // get index within chunk
; 106  :         ffMask = pCurrent->ffMask;

  000d0	e59d300c	 ldr         r3, [sp, #0xC]
  000d4	e2833004	 add         r3, r3, #4
  000d8	e5933000	 ldr         r3, [r3]
  000dc	e58d3008	 str         r3, [sp, #8]
  000e0		 |$LN2@NewIndex|

; 107  :         while ((ffMask & 1) == 1)

  000e0	e59d3008	 ldr         r3, [sp, #8]
  000e4	e2033001	 and         r3, r3, #1
  000e8	e3530001	 cmp         r3, #1
  000ec	1a000006	 bne         |$LN1@NewIndex|

; 108  :             {
; 109  :             index++;

  000f0	e59d3004	 ldr         r3, [sp, #4]
  000f4	e2833001	 add         r3, r3, #1
  000f8	e58d3004	 str         r3, [sp, #4]

; 110  :             ffMask >>= 1;

  000fc	e59d3008	 ldr         r3, [sp, #8]
  00100	e1a030a3	 mov         r3, r3, lsr #1
  00104	e58d3008	 str         r3, [sp, #8]

; 111  :             }

  00108	eafffff4	 b           |$LN2@NewIndex|
  0010c		 |$LN1@NewIndex|

; 112  : 
; 113  :         // copy empty slot info and mark as reserved
; 114  :         *pId = index;

  0010c	e59d2004	 ldr         r2, [sp, #4]
  00110	e59d3030	 ldr         r3, [sp, #0x30]
  00114	e5832000	 str         r2, [r3]

; 115  :         *ppType = &(pCurrent->rgData[index & 0x1F]);

  00118	e59d300c	 ldr         r3, [sp, #0xC]
  0011c	e2831008	 add         r1, r3, #8
  00120	e59d3004	 ldr         r3, [sp, #4]
  00124	e203201f	 and         r2, r3, #0x1F
  00128	e3a03004	 mov         r3, #4
  0012c	e0030392	 mul         r3, r2, r3
  00130	e0812003	 add         r2, r1, r3
  00134	e59d302c	 ldr         r3, [sp, #0x2C]
  00138	e5832000	 str         r2, [r3]

; 116  :         pCurrent->ffMask |= (1 << (index & 0x1F));

  0013c	e59d300c	 ldr         r3, [sp, #0xC]
  00140	e2831004	 add         r1, r3, #4
  00144	e59d3004	 ldr         r3, [sp, #4]
  00148	e203201f	 and         r2, r3, #0x1F
  0014c	e3a03001	 mov         r3, #1
  00150	e1a02213	 mov         r2, r3, lsl r2
  00154	e5913000	 ldr         r3, [r1]
  00158	e1832002	 orr         r2, r3, r2
  0015c	e59d300c	 ldr         r3, [sp, #0xC]
  00160	e2833004	 add         r3, r3, #4
  00164	e5832000	 str         r2, [r3]

; 117  : 
; 118  :         rc = TRUE;

  00168	e3a03001	 mov         r3, #1
  0016c	e58d3000	 str         r3, [sp]
  00170		 |$LN3@NewIndex|
  00170		 |$cleanUp$41482|

; 119  :     cleanUp:
; 120  :         return rc;

  00170	e59d3000	 ldr         r3, [sp]
  00174	e58d3018	 str         r3, [sp, #0x18]

; 121  :     }

  00178	e59d0018	 ldr         r0, [sp, #0x18]
  0017c	e28dd020	 add         sp, sp, #0x20
  00180	e89d6000	 ldmia       sp, {sp, lr}
  00184	e12fff1e	 bx          lr
  00188		 |$M42701|

			 ENDP  ; |?NewIndex@?$IndexList@K@@QAAHPAPAKPAK@Z|, IndexList<unsigned long>::NewIndex


  00000			 AREA	 |.pdata|, PDATA
|$T42710| DCD	|$LN8@DeleteInde|
	DCD	0x40002604
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DeleteIndex@?$IndexList@K@@QAAXK@Z| PROC ; IndexList<unsigned long>::DeleteIndex

; 124  :     {

  00000		 |$LN8@DeleteInde|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42707|

; 125  :         IndexData *pCurrent;
; 126  :         DWORD chunkId = id >> 5;

  00010	e59d3014	 ldr         r3, [sp, #0x14]
  00014	e1a032a3	 mov         r3, r3, lsr #5
  00018	e58d3000	 str         r3, [sp]

; 127  : 
; 128  :         // find chunk
; 129  :         pCurrent = &m_Head;

  0001c	e59d3010	 ldr         r3, [sp, #0x10]
  00020	e58d3004	 str         r3, [sp, #4]
  00024		 |$LN3@DeleteInde|

; 130  :         while (chunkId)

  00024	e59d3000	 ldr         r3, [sp]
  00028	e3530000	 cmp         r3, #0
  0002c	0a00000a	 beq         |$LN2@DeleteInde|

; 131  :             {
; 132  :             --chunkId;

  00030	e59d3000	 ldr         r3, [sp]
  00034	e2433001	 sub         r3, r3, #1
  00038	e58d3000	 str         r3, [sp]

; 133  :             pCurrent = pCurrent->pNext;

  0003c	e59d3004	 ldr         r3, [sp, #4]
  00040	e5933000	 ldr         r3, [r3]
  00044	e58d3004	 str         r3, [sp, #4]

; 134  :             if (pCurrent == NULL) return;            

  00048	e59d3004	 ldr         r3, [sp, #4]
  0004c	e3530000	 cmp         r3, #0
  00050	1a000000	 bne         |$LN1@DeleteInde|
  00054	ea00000c	 b           |$LN4@DeleteInde|
  00058		 |$LN1@DeleteInde|

; 135  :             }

  00058	eafffff1	 b           |$LN3@DeleteInde|
  0005c		 |$LN2@DeleteInde|

; 136  : 
; 137  :         // clear mask
; 138  :         pCurrent->ffMask &= ~(1 << (id & 0x1F));

  0005c	e59d3004	 ldr         r3, [sp, #4]
  00060	e2831004	 add         r1, r3, #4
  00064	e59d3014	 ldr         r3, [sp, #0x14]
  00068	e203201f	 and         r2, r3, #0x1F
  0006c	e3a03001	 mov         r3, #1
  00070	e1a03213	 mov         r3, r3, lsl r2
  00074	e1e02003	 mvn         r2, r3
  00078	e5913000	 ldr         r3, [r1]
  0007c	e0032002	 and         r2, r3, r2
  00080	e59d3004	 ldr         r3, [sp, #4]
  00084	e2833004	 add         r3, r3, #4
  00088	e5832000	 str         r2, [r3]
  0008c		 |$LN4@DeleteInde|

; 139  :     }

  0008c	e28dd008	 add         sp, sp, #8
  00090	e89d6000	 ldmia       sp, {sp, lr}
  00094	e12fff1e	 bx          lr
  00098		 |$M42708|

			 ENDP  ; |?DeleteIndex@?$IndexList@K@@QAAXK@Z|, IndexList<unsigned long>::DeleteIndex


  00000			 AREA	 |.pdata|, PDATA
|$T42720| DCD	|$LN10@GetIndex|
	DCD	0x40003304
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetIndex@?$IndexList@K@@QAAPAKK@Z| PROC ; IndexList<unsigned long>::GetIndex

; 142  :     {

  00000		 |$LN10@GetIndex|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd010	 sub         sp, sp, #0x10
  00010		 |$M42717|

; 143  :         IndexData *pCurrent;
; 144  :         DWORD chunkId = id >> 5;

  00010	e59d301c	 ldr         r3, [sp, #0x1C]
  00014	e1a032a3	 mov         r3, r3, lsr #5
  00018	e58d3000	 str         r3, [sp]

; 145  : 
; 146  :         // find chunk
; 147  :         pCurrent = &m_Head;

  0001c	e59d3018	 ldr         r3, [sp, #0x18]
  00020	e58d3004	 str         r3, [sp, #4]
  00024		 |$LN3@GetIndex|

; 148  :         while (chunkId)

  00024	e59d3000	 ldr         r3, [sp]
  00028	e3530000	 cmp         r3, #0
  0002c	0a00000c	 beq         |$LN2@GetIndex|

; 149  :             {
; 150  :             --chunkId;

  00030	e59d3000	 ldr         r3, [sp]
  00034	e2433001	 sub         r3, r3, #1
  00038	e58d3000	 str         r3, [sp]

; 151  :             pCurrent = pCurrent->pNext;

  0003c	e59d3004	 ldr         r3, [sp, #4]
  00040	e5933000	 ldr         r3, [r3]
  00044	e58d3004	 str         r3, [sp, #4]

; 152  :             if (pCurrent == NULL) return NULL;   

  00048	e59d3004	 ldr         r3, [sp, #4]
  0004c	e3530000	 cmp         r3, #0
  00050	1a000002	 bne         |$LN1@GetIndex|
  00054	e3a03000	 mov         r3, #0
  00058	e58d3008	 str         r3, [sp, #8]
  0005c	ea000016	 b           |$LN4@GetIndex|
  00060		 |$LN1@GetIndex|

; 153  :             }

  00060	eaffffef	 b           |$LN3@GetIndex|
  00064		 |$LN2@GetIndex|

; 154  : 
; 155  :         // clear mask
; 156  :         return (pCurrent->ffMask & (1 << (id & 0x1F))) ? 
; 157  :                     &(pCurrent->rgData[id & 0x1F]) : NULL;

  00064	e59d3004	 ldr         r3, [sp, #4]
  00068	e2831004	 add         r1, r3, #4
  0006c	e59d301c	 ldr         r3, [sp, #0x1C]
  00070	e203201f	 and         r2, r3, #0x1F
  00074	e3a03001	 mov         r3, #1
  00078	e1a02213	 mov         r2, r3, lsl r2
  0007c	e5913000	 ldr         r3, [r1]
  00080	e1130002	 tst         r3, r2
  00084	0a000008	 beq         |$LN6@GetIndex|
  00088	e59d3004	 ldr         r3, [sp, #4]
  0008c	e2831008	 add         r1, r3, #8
  00090	e59d301c	 ldr         r3, [sp, #0x1C]
  00094	e203201f	 and         r2, r3, #0x1F
  00098	e3a03004	 mov         r3, #4
  0009c	e0030392	 mul         r3, r2, r3
  000a0	e0813003	 add         r3, r1, r3
  000a4	e58d300c	 str         r3, [sp, #0xC]
  000a8	ea000001	 b           |$LN7@GetIndex|
  000ac		 |$LN6@GetIndex|
  000ac	e3a03000	 mov         r3, #0
  000b0	e58d300c	 str         r3, [sp, #0xC]
  000b4		 |$LN7@GetIndex|
  000b4	e59d300c	 ldr         r3, [sp, #0xC]
  000b8	e58d3008	 str         r3, [sp, #8]
  000bc		 |$LN4@GetIndex|

; 158  :     }

  000bc	e59d0008	 ldr         r0, [sp, #8]
  000c0	e28dd010	 add         sp, sp, #0x10
  000c4	e89d6000	 ldmia       sp, {sp, lr}
  000c8	e12fff1e	 bx          lr
  000cc		 |$M42718|

			 ENDP  ; |?GetIndex@?$IndexList@K@@QAAPAKK@Z|, IndexList<unsigned long>::GetIndex

	EXPORT	|??0iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@PAU_Node@12@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::iterator
	EXPORT	|?_Next@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Acc::_Next
; File c:\wince600\public\common\sdk\inc\list

  00000			 AREA	 |.pdata|, PDATA
|$T42728| DCD	|$LN5@begin|
	DCD	0x40001304
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?begin@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@XZ| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::begin

; 180  : 		{return (iterator(_Acc::_Next(_Head))); }

  00000		 |$LN5@begin|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42725|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e2833004	 add         r3, r3, #4
  00018	e5930000	 ldr         r0, [r3]
  0001c	eb000000	 bl          |?_Next@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z|
  00020	e58d0004	 str         r0, [sp, #4]
  00024	e59d3004	 ldr         r3, [sp, #4]
  00028	e5931000	 ldr         r1, [r3]
  0002c	e59d0014	 ldr         r0, [sp, #0x14]
  00030	eb000000	 bl          |??0iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@PAU_Node@12@@Z|
  00034	e59d3014	 ldr         r3, [sp, #0x14]
  00038	e58d3000	 str         r3, [sp]
  0003c	e59d0000	 ldr         r0, [sp]
  00040	e28dd008	 add         sp, sp, #8
  00044	e89d6000	 ldmia       sp, {sp, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$M42726|

			 ENDP  ; |?begin@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@XZ|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::begin


  00000			 AREA	 |.pdata|, PDATA
|$T42736| DCD	|$LN5@end|
	DCD	0x40000f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?end@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@XZ| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::end

; 184  : 		{return (iterator(_Head)); }

  00000		 |$LN5@end|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42733|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833004	 add         r3, r3, #4
  00018	e5931000	 ldr         r1, [r3]
  0001c	e59d0010	 ldr         r0, [sp, #0x10]
  00020	eb000000	 bl          |??0iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@PAU_Node@12@@Z|
  00024	e59d3010	 ldr         r3, [sp, #0x10]
  00028	e58d3000	 str         r3, [sp]
  0002c	e59d0000	 ldr         r0, [sp]
  00030	e28dd004	 add         sp, sp, #4
  00034	e89d6000	 ldmia       sp, {sp, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M42734|

			 ENDP  ; |?end@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@XZ|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::end

	EXPORT	|?insert@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@ABQAUPowerDomainCallbackInfo_t@@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::insert

  00000			 AREA	 |.pdata|, PDATA
|$T42745| DCD	|$LN5@push_back|
	DCD	0x40001304
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?push_back@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAAXABQAUPowerDomainCallbackInfo_t@@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::push_back

; 222  : 		{insert(end(), _X); }

  00000		 |$LN5@push_back|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd010	 sub         sp, sp, #0x10
  00010		 |$M42742|
  00010	e28d1000	 add         r1, sp, #0
  00014	e59d0018	 ldr         r0, [sp, #0x18]
  00018	eb000000	 bl          |?end@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@XZ|
  0001c	e58d0008	 str         r0, [sp, #8]
  00020	e59d301c	 ldr         r3, [sp, #0x1C]
  00024	e59d2008	 ldr         r2, [sp, #8]
  00028	e58d200c	 str         r2, [sp, #0xC]
  0002c	e59d200c	 ldr         r2, [sp, #0xC]
  00030	e5922000	 ldr         r2, [r2]
  00034	e28d1004	 add         r1, sp, #4
  00038	e59d0018	 ldr         r0, [sp, #0x18]
  0003c	eb000000	 bl          |?insert@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@ABQAUPowerDomainCallbackInfo_t@@@Z|
  00040	e28dd010	 add         sp, sp, #0x10
  00044	e89d6000	 ldmia       sp, {sp, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$M42743|

			 ENDP  ; |?push_back@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAAXABQAUPowerDomainCallbackInfo_t@@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::push_back

	EXPORT	|?_Freenode@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@IAAXPAU_Node@12@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Freenode
	EXPORT	|?destroy@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAXPAPAUPowerDomainCallbackInfo_t@@@Z| ; std::allocator<PowerDomainCallbackInfo_t *>::destroy
	EXPORT	|?_Value@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAUPowerDomainCallbackInfo_t@@PAU_Node@23@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Acc::_Value
	EXPORT	|?_Prev@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Acc::_Prev
	EXPORT	|?_Mynode@const_iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBAPAU_Node@23@XZ| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::const_iterator::_Mynode
	EXPORT	|??Eiterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AV012@H@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator++

  00000			 AREA	 |.pdata|, PDATA
|$T42754| DCD	|$LN5@erase|
	DCD	0x40004404
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?erase@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::erase

; 249  : 		{_Nodeptr _S = (_P++)._Mynode();

  00000		 |$LN5@erase|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd030	 sub         sp, sp, #0x30
  00010		 |$M42751|
  00010	e3a02000	 mov         r2, #0
  00014	e28d1004	 add         r1, sp, #4
  00018	e28d0040	 add         r0, sp, #0x40
  0001c	eb000000	 bl          |??Eiterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AV012@H@Z|
  00020	e58d000c	 str         r0, [sp, #0xC]
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |?_Mynode@const_iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBAPAU_Node@23@XZ|
  0002c	e58d0010	 str         r0, [sp, #0x10]
  00030	e59d3010	 ldr         r3, [sp, #0x10]
  00034	e58d3000	 str         r3, [sp]

; 250  : 		_Acc::_Next(_Acc::_Prev(_S)) = _Acc::_Next(_S);

  00038	e59d0000	 ldr         r0, [sp]
  0003c	eb000000	 bl          |?_Next@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z|
  00040	e58d0014	 str         r0, [sp, #0x14]
  00044	e59d0000	 ldr         r0, [sp]
  00048	eb000000	 bl          |?_Prev@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z|
  0004c	e58d0018	 str         r0, [sp, #0x18]
  00050	e59d3018	 ldr         r3, [sp, #0x18]
  00054	e5930000	 ldr         r0, [r3]
  00058	eb000000	 bl          |?_Next@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z|
  0005c	e58d001c	 str         r0, [sp, #0x1C]
  00060	e59d3014	 ldr         r3, [sp, #0x14]
  00064	e5932000	 ldr         r2, [r3]
  00068	e59d301c	 ldr         r3, [sp, #0x1C]
  0006c	e5832000	 str         r2, [r3]

; 251  : 		_Acc::_Prev(_Acc::_Next(_S)) = _Acc::_Prev(_S);

  00070	e59d0000	 ldr         r0, [sp]
  00074	eb000000	 bl          |?_Prev@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z|
  00078	e58d0020	 str         r0, [sp, #0x20]
  0007c	e59d0000	 ldr         r0, [sp]
  00080	eb000000	 bl          |?_Next@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z|
  00084	e58d0024	 str         r0, [sp, #0x24]
  00088	e59d3024	 ldr         r3, [sp, #0x24]
  0008c	e5930000	 ldr         r0, [r3]
  00090	eb000000	 bl          |?_Prev@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z|
  00094	e58d0028	 str         r0, [sp, #0x28]
  00098	e59d3020	 ldr         r3, [sp, #0x20]
  0009c	e5932000	 ldr         r2, [r3]
  000a0	e59d3028	 ldr         r3, [sp, #0x28]
  000a4	e5832000	 str         r2, [r3]

; 252  : 		allocator.destroy(&_Acc::_Value(_S));

  000a8	e59d0000	 ldr         r0, [sp]
  000ac	eb000000	 bl          |?_Value@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAUPowerDomainCallbackInfo_t@@PAU_Node@23@@Z|
  000b0	e58d002c	 str         r0, [sp, #0x2C]
  000b4	e59d102c	 ldr         r1, [sp, #0x2C]
  000b8	e59d0038	 ldr         r0, [sp, #0x38]
  000bc	eb000000	 bl          |?destroy@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAXPAPAUPowerDomainCallbackInfo_t@@@Z|

; 253  : 		_Freenode(_S);

  000c0	e59d1000	 ldr         r1, [sp]
  000c4	e59d0038	 ldr         r0, [sp, #0x38]
  000c8	eb000000	 bl          |?_Freenode@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@IAAXPAU_Node@12@@Z|

; 254  : 		--_Size;

  000cc	e59d3038	 ldr         r3, [sp, #0x38]
  000d0	e2833008	 add         r3, r3, #8
  000d4	e5933000	 ldr         r3, [r3]
  000d8	e2432001	 sub         r2, r3, #1
  000dc	e59d3038	 ldr         r3, [sp, #0x38]
  000e0	e2833008	 add         r3, r3, #8
  000e4	e5832000	 str         r2, [r3]

; 255  : 		return (_P); }

  000e8	e59d003c	 ldr         r0, [sp, #0x3C]
  000ec	e28d1040	 add         r1, sp, #0x40
  000f0	e3a02004	 mov         r2, #4
  000f4	eb000000	 bl          memcpy
  000f8	e59d303c	 ldr         r3, [sp, #0x3C]
  000fc	e58d3008	 str         r3, [sp, #8]
  00100	e59d0008	 ldr         r0, [sp, #8]
  00104	e28dd030	 add         sp, sp, #0x30
  00108	e89d6000	 ldmia       sp, {sp, lr}
  0010c	e12fff1e	 bx          lr
  00110		 |$M42752|

			 ENDP  ; |?erase@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::erase

	EXPORT	|??0const_iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@XZ| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::const_iterator::const_iterator

  00000			 AREA	 |.pdata|, PDATA
|$T42762| DCD	|$LN5@iterator|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@XZ| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::iterator

; 110  : 		iterator()

  00000		 |$LN5@iterator|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42759|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??0const_iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@XZ|
  00018	e59d300c	 ldr         r3, [sp, #0xC]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M42760|

			 ENDP  ; |??0iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@XZ|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::iterator


  00000			 AREA	 |.pdata|, PDATA
|$T42770| DCD	|$LN5@operator|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??Diterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBAAAPAUPowerDomainCallbackInfo_t@@XZ| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator*

; 115  : 			{return (_Acc::_Value(_Ptr)); }

  00000		 |$LN5@operator|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42767|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e5930000	 ldr         r0, [r3]
  00018	eb000000	 bl          |?_Value@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAUPowerDomainCallbackInfo_t@@PAU_Node@23@@Z|
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]
  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M42768|

			 ENDP  ; |??Diterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBAAAPAUPowerDomainCallbackInfo_t@@XZ|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator*


  00000			 AREA	 |.pdata|, PDATA
|$T42778| DCD	|$LN5@operator@2|
	DCD	0x40001204
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??Eiterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAAAAV012@XZ| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator++

; 119  : 			{_Ptr = _Acc::_Next(_Ptr);

  00000		 |$LN5@operator@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42775|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e5930000	 ldr         r0, [r3]
  00018	eb000000	 bl          |?_Next@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z|
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e5932000	 ldr         r2, [r3]
  00028	e59d3010	 ldr         r3, [sp, #0x10]
  0002c	e5832000	 str         r2, [r3]

; 120  : 			return (*this); }

  00030	e59d3010	 ldr         r3, [sp, #0x10]
  00034	e58d3000	 str         r3, [sp]
  00038	e59d0000	 ldr         r0, [sp]
  0003c	e28dd008	 add         sp, sp, #8
  00040	e89d6000	 ldmia       sp, {sp, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$M42776|

			 ENDP  ; |??Eiterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAAAAV012@XZ|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator++

	EXPORT	|??8iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBA_NABV012@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator==

  00000			 AREA	 |.pdata|, PDATA
|$T42788| DCD	|$LN7@operator@3|
	DCD	0x40001704
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??9iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBA_NABV012@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator!=

; 135  : 			{return (!(*this == _X)); }

  00000		 |$LN7@operator@3|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M42785|
  00010	e59d1018	 ldr         r1, [sp, #0x18]
  00014	e59d0014	 ldr         r0, [sp, #0x14]
  00018	eb000000	 bl          |??8iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBA_NABV012@@Z|
  0001c	e5cd0004	 strb        r0, [sp, #4]
  00020	e5dd3004	 ldrb        r3, [sp, #4]
  00024	e3530000	 cmp         r3, #0
  00028	1a000002	 bne         |$LN3@operator@3|
  0002c	e3a03001	 mov         r3, #1
  00030	e58d3008	 str         r3, [sp, #8]
  00034	ea000001	 b           |$LN4@operator@3|
  00038		 |$LN3@operator@3|
  00038	e3a03000	 mov         r3, #0
  0003c	e58d3008	 str         r3, [sp, #8]
  00040		 |$LN4@operator@3|
  00040	e59d3008	 ldr         r3, [sp, #8]
  00044	e20330ff	 and         r3, r3, #0xFF
  00048	e5cd3000	 strb        r3, [sp]
  0004c	e5dd0000	 ldrb        r0, [sp]
  00050	e28dd00c	 add         sp, sp, #0xC
  00054	e89d6000	 ldmia       sp, {sp, lr}
  00058	e12fff1e	 bx          lr
  0005c		 |$M42786|

			 ENDP  ; |??9iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBA_NABV012@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator!=

	EXPORT	|?construct@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAXPAPAUPowerDomainCallbackInfo_t@@ABQAU3@@Z| ; std::allocator<PowerDomainCallbackInfo_t *>::construct
	EXPORT	|?_Buynode@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@IAAPAU_Node@12@PAU312@0@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Buynode

  00000			 AREA	 |.pdata|, PDATA
|$T42796| DCD	|$LN5@insert|
	DCD	0x40003f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?insert@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@ABQAUPowerDomainCallbackInfo_t@@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::insert

; 232  : 		{_Nodeptr _S = _P._Mynode();

  00000		 |$LN5@insert|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd028	 sub         sp, sp, #0x28
  00010		 |$M42793|
  00010	e28d0038	 add         r0, sp, #0x38
  00014	eb000000	 bl          |?_Mynode@const_iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBAPAU_Node@23@XZ|
  00018	e58d0008	 str         r0, [sp, #8]
  0001c	e59d3008	 ldr         r3, [sp, #8]
  00020	e58d3000	 str         r3, [sp]

; 233  : 		_Acc::_Prev(_S) = _Buynode(_S, _Acc::_Prev(_S));

  00024	e59d0000	 ldr         r0, [sp]
  00028	eb000000	 bl          |?_Prev@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z|
  0002c	e58d000c	 str         r0, [sp, #0xC]
  00030	e59d300c	 ldr         r3, [sp, #0xC]
  00034	e5932000	 ldr         r2, [r3]
  00038	e59d1000	 ldr         r1, [sp]
  0003c	e59d0030	 ldr         r0, [sp, #0x30]
  00040	eb000000	 bl          |?_Buynode@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@IAAPAU_Node@12@PAU312@0@Z|
  00044	e58d0010	 str         r0, [sp, #0x10]
  00048	e59d0000	 ldr         r0, [sp]
  0004c	eb000000	 bl          |?_Prev@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z|
  00050	e58d0014	 str         r0, [sp, #0x14]
  00054	e59d2010	 ldr         r2, [sp, #0x10]
  00058	e59d3014	 ldr         r3, [sp, #0x14]
  0005c	e5832000	 str         r2, [r3]

; 234  : 		_S = _Acc::_Prev(_S);

  00060	e59d0000	 ldr         r0, [sp]
  00064	eb000000	 bl          |?_Prev@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z|
  00068	e58d0018	 str         r0, [sp, #0x18]
  0006c	e59d3018	 ldr         r3, [sp, #0x18]
  00070	e5933000	 ldr         r3, [r3]
  00074	e58d3000	 str         r3, [sp]

; 235  : 		_Acc::_Next(_Acc::_Prev(_S)) = _S;

  00078	e59d0000	 ldr         r0, [sp]
  0007c	eb000000	 bl          |?_Prev@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z|
  00080	e58d001c	 str         r0, [sp, #0x1C]
  00084	e59d301c	 ldr         r3, [sp, #0x1C]
  00088	e5930000	 ldr         r0, [r3]
  0008c	eb000000	 bl          |?_Next@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z|
  00090	e58d0020	 str         r0, [sp, #0x20]
  00094	e59d2000	 ldr         r2, [sp]
  00098	e59d3020	 ldr         r3, [sp, #0x20]
  0009c	e5832000	 str         r2, [r3]

; 236  : 		allocator.construct(&_Acc::_Value(_S), _X);

  000a0	e59d0000	 ldr         r0, [sp]
  000a4	eb000000	 bl          |?_Value@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAUPowerDomainCallbackInfo_t@@PAU_Node@23@@Z|
  000a8	e58d0024	 str         r0, [sp, #0x24]
  000ac	e59d203c	 ldr         r2, [sp, #0x3C]
  000b0	e59d1024	 ldr         r1, [sp, #0x24]
  000b4	e59d0030	 ldr         r0, [sp, #0x30]
  000b8	eb000000	 bl          |?construct@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAXPAPAUPowerDomainCallbackInfo_t@@ABQAU3@@Z|

; 237  : 		++_Size;

  000bc	e59d3030	 ldr         r3, [sp, #0x30]
  000c0	e2833008	 add         r3, r3, #8
  000c4	e5933000	 ldr         r3, [r3]
  000c8	e2832001	 add         r2, r3, #1
  000cc	e59d3030	 ldr         r3, [sp, #0x30]
  000d0	e2833008	 add         r3, r3, #8
  000d4	e5832000	 str         r2, [r3]

; 238  : 		return (iterator(_S)); }

  000d8	e59d1000	 ldr         r1, [sp]
  000dc	e59d0034	 ldr         r0, [sp, #0x34]
  000e0	eb000000	 bl          |??0iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@PAU_Node@12@@Z|
  000e4	e59d3034	 ldr         r3, [sp, #0x34]
  000e8	e58d3004	 str         r3, [sp, #4]
  000ec	e59d0004	 ldr         r0, [sp, #4]
  000f0	e28dd028	 add         sp, sp, #0x28
  000f4	e89d6000	 ldmia       sp, {sp, lr}
  000f8	e12fff1e	 bx          lr
  000fc		 |$M42794|

			 ENDP  ; |?insert@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@ABQAUPowerDomainCallbackInfo_t@@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::insert

	EXPORT	|?_Charalloc@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAPADI@Z| ; std::allocator<PowerDomainCallbackInfo_t *>::_Charalloc

  00000			 AREA	 |.pdata|, PDATA
|$T42808| DCD	|$LN9@Buynode|
	DCD	0x40002c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?_Buynode@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@IAAPAU_Node@12@PAU312@0@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Buynode

; 400  : 		{_Nodeptr _S = (_Nodeptr)allocator._Charalloc(

  00000		 |$LN9@Buynode|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd01c	 sub         sp, sp, #0x1C
  00010		 |$M42805|

; 401  : 			1 * sizeof (_Node));

  00010	e3a0100c	 mov         r1, #0xC
  00014	e59d0024	 ldr         r0, [sp, #0x24]
  00018	eb000000	 bl          |?_Charalloc@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAPADI@Z|
  0001c	e58d0008	 str         r0, [sp, #8]
  00020	e59d3008	 ldr         r3, [sp, #8]
  00024	e58d3000	 str         r3, [sp]

; 402  : 		_Acc::_Next(_S) = _Narg != 0 ? _Narg : _S;

  00028	e59d3028	 ldr         r3, [sp, #0x28]
  0002c	e3530000	 cmp         r3, #0
  00030	0a000002	 beq         |$LN3@Buynode|
  00034	e59d3028	 ldr         r3, [sp, #0x28]
  00038	e58d300c	 str         r3, [sp, #0xC]
  0003c	ea000001	 b           |$LN4@Buynode|
  00040		 |$LN3@Buynode|
  00040	e59d3000	 ldr         r3, [sp]
  00044	e58d300c	 str         r3, [sp, #0xC]
  00048		 |$LN4@Buynode|
  00048	e59d0000	 ldr         r0, [sp]
  0004c	eb000000	 bl          |?_Next@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z|
  00050	e58d0010	 str         r0, [sp, #0x10]
  00054	e59d200c	 ldr         r2, [sp, #0xC]
  00058	e59d3010	 ldr         r3, [sp, #0x10]
  0005c	e5832000	 str         r2, [r3]

; 403  : 		_Acc::_Prev(_S) = _Parg != 0 ? _Parg : _S;

  00060	e59d302c	 ldr         r3, [sp, #0x2C]
  00064	e3530000	 cmp         r3, #0
  00068	0a000002	 beq         |$LN5@Buynode|
  0006c	e59d302c	 ldr         r3, [sp, #0x2C]
  00070	e58d3014	 str         r3, [sp, #0x14]
  00074	ea000001	 b           |$LN6@Buynode|
  00078		 |$LN5@Buynode|
  00078	e59d3000	 ldr         r3, [sp]
  0007c	e58d3014	 str         r3, [sp, #0x14]
  00080		 |$LN6@Buynode|
  00080	e59d0000	 ldr         r0, [sp]
  00084	eb000000	 bl          |?_Prev@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z|
  00088	e58d0018	 str         r0, [sp, #0x18]
  0008c	e59d2014	 ldr         r2, [sp, #0x14]
  00090	e59d3018	 ldr         r3, [sp, #0x18]
  00094	e5832000	 str         r2, [r3]

; 404  : 		return (_S); }

  00098	e59d3000	 ldr         r3, [sp]
  0009c	e58d3004	 str         r3, [sp, #4]
  000a0	e59d0004	 ldr         r0, [sp, #4]
  000a4	e28dd01c	 add         sp, sp, #0x1C
  000a8	e89d6000	 ldmia       sp, {sp, lr}
  000ac	e12fff1e	 bx          lr
  000b0		 |$M42806|

			 ENDP  ; |?_Buynode@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@IAAPAU_Node@12@PAU312@0@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Buynode

	EXPORT	|?deallocate@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAXPAXI@Z| ; std::allocator<PowerDomainCallbackInfo_t *>::deallocate

  00000			 AREA	 |.pdata|, PDATA
|$T42815| DCD	|$LN5@Freenode|
	DCD	0x40000903
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?_Freenode@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@IAAXPAU_Node@12@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Freenode

; 406  : 		{allocator.deallocate(_S, 1); }

  00000		 |$LN5@Freenode|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42812|
  0000c	e3a02001	 mov         r2, #1
  00010	e59d100c	 ldr         r1, [sp, #0xC]
  00014	e59d0008	 ldr         r0, [sp, #8]
  00018	eb000000	 bl          |?deallocate@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAXPAXI@Z|
  0001c	e89d6000	 ldmia       sp, {sp, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$M42813|

			 ENDP  ; |?_Freenode@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@IAAXPAU_Node@12@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Freenode

	EXPORT	|??$_Destroy@PAUPowerDomainCallbackInfo_t@@@std@@YAXPAPAUPowerDomainCallbackInfo_t@@@Z| ; std::_Destroy<PowerDomainCallbackInfo_t *>
; File c:\wince600\public\common\sdk\inc\xmemory

  00000			 AREA	 |.pdata|, PDATA
|$T42822| DCD	|$LN5@destroy|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?destroy@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAXPAPAUPowerDomainCallbackInfo_t@@@Z| PROC ; std::allocator<PowerDomainCallbackInfo_t *>::destroy

; 87   :         {_Destroy(_P); }

  00000		 |$LN5@destroy|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42819|
  0000c	e59d000c	 ldr         r0, [sp, #0xC]
  00010	eb000000	 bl          |??$_Destroy@PAUPowerDomainCallbackInfo_t@@@std@@YAXPAPAUPowerDomainCallbackInfo_t@@@Z|
  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M42820|

			 ENDP  ; |?destroy@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAXPAPAUPowerDomainCallbackInfo_t@@@Z|, std::allocator<PowerDomainCallbackInfo_t *>::destroy

	EXPORT	|??0const_iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@PAU_Node@12@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::const_iterator::const_iterator
; File c:\wince600\public\common\sdk\inc\list

  00000			 AREA	 |.pdata|, PDATA
|$T42830| DCD	|$LN5@iterator@2|
	DCD	0x40000d04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@PAU_Node@12@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::iterator

; 112  : 		iterator(_Nodeptr _P)

  00000		 |$LN5@iterator@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42827|
  00010	e59d1010	 ldr         r1, [sp, #0x10]
  00014	e59d000c	 ldr         r0, [sp, #0xC]
  00018	eb000000	 bl          |??0const_iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@PAU_Node@12@@Z|
  0001c	e59d300c	 ldr         r3, [sp, #0xC]
  00020	e58d3000	 str         r3, [sp]
  00024	e59d0000	 ldr         r0, [sp]
  00028	e28dd004	 add         sp, sp, #4
  0002c	e89d6000	 ldmia       sp, {sp, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$M42828|

			 ENDP  ; |??0iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@PAU_Node@12@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::iterator


  00000			 AREA	 |.pdata|, PDATA
|$T42838| DCD	|$LN5@operator@4|
	DCD	0x40001404
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??Eiterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AV012@H@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator++

; 122  : 			{iterator _Tmp = *this;

  00000		 |$LN5@operator@4|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42835|
  00010	e59d1010	 ldr         r1, [sp, #0x10]
  00014	e28d0000	 add         r0, sp, #0
  00018	e3a02004	 mov         r2, #4
  0001c	eb000000	 bl          memcpy

; 123  : 			++*this;

  00020	e59d0010	 ldr         r0, [sp, #0x10]
  00024	eb000000	 bl          |??Eiterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAAAAV012@XZ|

; 124  : 			return (_Tmp); }

  00028	e59d0014	 ldr         r0, [sp, #0x14]
  0002c	e28d1000	 add         r1, sp, #0
  00030	e3a02004	 mov         r2, #4
  00034	eb000000	 bl          memcpy
  00038	e59d3014	 ldr         r3, [sp, #0x14]
  0003c	e58d3004	 str         r3, [sp, #4]
  00040	e59d0004	 ldr         r0, [sp, #4]
  00044	e28dd008	 add         sp, sp, #8
  00048	e89d6000	 ldmia       sp, {sp, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M42836|

			 ENDP  ; |??Eiterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AV012@H@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator++


  00000			 AREA	 |.pdata|, PDATA
|$T42848| DCD	|$LN7@operator@5|
	DCD	0x40001604
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??8iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBA_NABV012@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator==

; 133  : 			{return (_Ptr == _X._Ptr); }

  00000		 |$LN7@operator@5|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42845|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e5932000	 ldr         r2, [r3]
  00018	e59d3014	 ldr         r3, [sp, #0x14]
  0001c	e5933000	 ldr         r3, [r3]
  00020	e1520003	 cmp         r2, r3
  00024	1a000002	 bne         |$LN3@operator@5|
  00028	e3a03001	 mov         r3, #1
  0002c	e58d3004	 str         r3, [sp, #4]
  00030	ea000001	 b           |$LN4@operator@5|
  00034		 |$LN3@operator@5|
  00034	e3a03000	 mov         r3, #0
  00038	e58d3004	 str         r3, [sp, #4]
  0003c		 |$LN4@operator@5|
  0003c	e59d3004	 ldr         r3, [sp, #4]
  00040	e20330ff	 and         r3, r3, #0xFF
  00044	e5cd3000	 strb        r3, [sp]
  00048	e5dd0000	 ldrb        r0, [sp]
  0004c	e28dd008	 add         sp, sp, #8
  00050	e89d6000	 ldmia       sp, {sp, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$M42846|

			 ENDP  ; |??8iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBA_NABV012@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator==


  00000			 AREA	 |.pdata|, PDATA
|$T42856| DCD	|$LN5@const_iter|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0const_iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@XZ| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::const_iterator::const_iterator

; 73   : 		const_iterator()

  00000		 |$LN5@const_iter|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42853|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M42854|

			 ENDP  ; |??0const_iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@XZ|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::const_iterator::const_iterator


  00000			 AREA	 |.pdata|, PDATA
|$T42864| DCD	|$LN5@Mynode|
	DCD	0x40000b04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?_Mynode@const_iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBAPAU_Node@23@XZ| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::const_iterator::_Mynode

; 102  : 			{return (_Ptr); }

  00000		 |$LN5@Mynode|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42861|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e5933000	 ldr         r3, [r3]
  00018	e58d3000	 str         r3, [sp]
  0001c	e59d0000	 ldr         r0, [sp]
  00020	e28dd004	 add         sp, sp, #4
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M42862|

			 ENDP  ; |?_Mynode@const_iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBAPAU_Node@23@XZ|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::const_iterator::_Mynode


  00000			 AREA	 |.pdata|, PDATA
|$T42872| DCD	|$LN5@Next|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?_Next@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Acc::_Next

; 51   : 			{return ((_Nodepref)(*_P)._Next); }

  00000		 |$LN5@Next|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42869|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M42870|

			 ENDP  ; |?_Next@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Acc::_Next


  00000			 AREA	 |.pdata|, PDATA
|$T42880| DCD	|$LN5@Prev|
	DCD	0x40000b04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?_Prev@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Acc::_Prev

; 53   : 			{return ((_Nodepref)(*_P)._Prev); }

  00000		 |$LN5@Prev|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42877|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833004	 add         r3, r3, #4
  00018	e58d3000	 str         r3, [sp]
  0001c	e59d0000	 ldr         r0, [sp]
  00020	e28dd004	 add         sp, sp, #4
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M42878|

			 ENDP  ; |?_Prev@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Acc::_Prev


  00000			 AREA	 |.pdata|, PDATA
|$T42888| DCD	|$LN5@Value|
	DCD	0x40000b04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?_Value@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAUPowerDomainCallbackInfo_t@@PAU_Node@23@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Acc::_Value

; 55   : 			{return ((_Vref)(*_P)._Value); }

  00000		 |$LN5@Value|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42885|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833008	 add         r3, r3, #8
  00018	e58d3000	 str         r3, [sp]
  0001c	e59d0000	 ldr         r0, [sp]
  00020	e28dd004	 add         sp, sp, #4
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M42886|

			 ENDP  ; |?_Value@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAUPowerDomainCallbackInfo_t@@PAU_Node@23@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Acc::_Value

	EXPORT	|??$_Allocate@D@std@@YAPADIPAD@Z|	; std::_Allocate<char>
; File c:\wince600\public\common\sdk\inc\xmemory

  00000			 AREA	 |.pdata|, PDATA
|$T42896| DCD	|$LN5@Charalloc|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?_Charalloc@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAPADI@Z| PROC ; std::allocator<PowerDomainCallbackInfo_t *>::_Charalloc

; 80   :         {return (_Allocate((difference_type)_N,

  00000		 |$LN5@Charalloc|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42893|

; 81   :             (char _FARQ *)0)); }

  00010	e3a01000	 mov         r1, #0
  00014	e59d0014	 ldr         r0, [sp, #0x14]
  00018	eb000000	 bl          |??$_Allocate@D@std@@YAPADIPAD@Z|
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]
  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M42894|

			 ENDP  ; |?_Charalloc@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAPADI@Z|, std::allocator<PowerDomainCallbackInfo_t *>::_Charalloc


  00000			 AREA	 |.pdata|, PDATA
|$T42903| DCD	|$LN5@deallocate|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?deallocate@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAXPAXI@Z| PROC ; std::allocator<PowerDomainCallbackInfo_t *>::deallocate

; 83   :         {operator delete(_P); }

  00000		 |$LN5@deallocate|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42900|
  0000c	e59d000c	 ldr         r0, [sp, #0xC]
  00010	eb000000	 bl          |??3@YAXPAX@Z|
  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M42901|

			 ENDP  ; |?deallocate@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAXPAXI@Z|, std::allocator<PowerDomainCallbackInfo_t *>::deallocate

	EXPORT	|??$_Construct@PAUPowerDomainCallbackInfo_t@@PAU1@@std@@YAXPAPAUPowerDomainCallbackInfo_t@@ABQAU1@@Z| ; std::_Construct<PowerDomainCallbackInfo_t *,PowerDomainCallbackInfo_t *>

  00000			 AREA	 |.pdata|, PDATA
|$T42910| DCD	|$LN5@construct|
	DCD	0x40000803
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?construct@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAXPAPAUPowerDomainCallbackInfo_t@@ABQAU3@@Z| PROC ; std::allocator<PowerDomainCallbackInfo_t *>::construct

; 85   :         {_Construct(_P, _V); }

  00000		 |$LN5@construct|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42907|
  0000c	e59d1010	 ldr         r1, [sp, #0x10]
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??$_Construct@PAUPowerDomainCallbackInfo_t@@PAU1@@std@@YAXPAPAUPowerDomainCallbackInfo_t@@ABQAU1@@Z|
  00018	e89d6000	 ldmia       sp, {sp, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$M42908|

			 ENDP  ; |?construct@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAXPAPAUPowerDomainCallbackInfo_t@@ABQAU3@@Z|, std::allocator<PowerDomainCallbackInfo_t *>::construct

; File c:\wince600\public\common\sdk\inc\list

  00000			 AREA	 |.pdata|, PDATA
|$T42918| DCD	|$LN5@const_iter@2|
	DCD	0x40000d04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0const_iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@PAU_Node@12@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::const_iterator::const_iterator

; 75   : 		const_iterator(_Nodeptr _P)

  00000		 |$LN5@const_iter@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42915|
  00010	e59d2010	 ldr         r2, [sp, #0x10]
  00014	e59d300c	 ldr         r3, [sp, #0xC]
  00018	e5832000	 str         r2, [r3]
  0001c	e59d300c	 ldr         r3, [sp, #0xC]
  00020	e58d3000	 str         r3, [sp]
  00024	e59d0000	 ldr         r0, [sp]
  00028	e28dd004	 add         sp, sp, #4
  0002c	e89d6000	 ldmia       sp, {sp, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$M42916|

			 ENDP  ; |??0const_iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@PAU_Node@12@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::const_iterator::const_iterator

; File c:\wince600\public\common\sdk\inc\xmemory

  00000			 AREA	 |.pdata|, PDATA
|$T42925| DCD	|$LN5@Destroy|
	DCD	0x40000503
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??$_Destroy@PAUPowerDomainCallbackInfo_t@@@std@@YAXPAPAUPowerDomainCallbackInfo_t@@@Z| PROC ; std::_Destroy<PowerDomainCallbackInfo_t *>

; 57   :     {_DESTRUCTOR(_Ty, _P); }

  00000		 |$LN5@Destroy|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42922|
  0000c	e89d6000	 ldmia       sp, {sp, lr}
  00010	e12fff1e	 bx          lr
  00014		 |$M42923|

			 ENDP  ; |??$_Destroy@PAUPowerDomainCallbackInfo_t@@@std@@YAXPAPAUPowerDomainCallbackInfo_t@@@Z|, std::_Destroy<PowerDomainCallbackInfo_t *>

	IMPORT	|__rt_udiv|

  00000			 AREA	 |.pdata|, PDATA
|$T42934| DCD	|$LN8@Allocate|
	DCD	0x40001e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??$_Allocate@D@std@@YAPADIPAD@Z| PROC	; std::_Allocate<char>

; 43   :     {if (_N <= 0)

  00000		 |$LN8@Allocate|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M42931|
  00010	e59d3014	 ldr         r3, [sp, #0x14]
  00014	e3530000	 cmp         r3, #0
  00018	8a000002	 bhi         |$LN3@Allocate|

; 44   :         _N = 0;

  0001c	e3a03000	 mov         r3, #0
  00020	e58d3014	 str         r3, [sp, #0x14]
  00024	ea00000a	 b           |$LN2@Allocate|
  00028		 |$LN3@Allocate|

; 45   :     /* check for overflow */
; 46   :     else if (((_SIZT)(-1) / _N) < sizeof(_Ty))

  00028	e59d0014	 ldr         r0, [sp, #0x14]
  0002c	e3e01000	 mvn         r1, #0
  00030	eb000000	 bl          __rt_udiv
  00034	e3500001	 cmp         r0, #1
  00038	2a000005	 bcs         |$LN1@Allocate|

; 47   :         return (_Ty _FARQ *)operator new((_SIZT)(-1));

  0003c	e3e00000	 mvn         r0, #0
  00040	eb000000	 bl          |??2@YAPAXI@Z|
  00044	e58d0004	 str         r0, [sp, #4]
  00048	e59d3004	 ldr         r3, [sp, #4]
  0004c	e58d3000	 str         r3, [sp]
  00050	ea000004	 b           |$LN4@Allocate|
  00054		 |$LN1@Allocate|
  00054		 |$LN2@Allocate|

; 48   :     return ((_Ty _FARQ *)operator new(
; 49   :         (_SIZT)_N * sizeof (_Ty))); }

  00054	e59d0014	 ldr         r0, [sp, #0x14]
  00058	eb000000	 bl          |??2@YAPAXI@Z|
  0005c	e58d0008	 str         r0, [sp, #8]
  00060	e59d3008	 ldr         r3, [sp, #8]
  00064	e58d3000	 str         r3, [sp]
  00068		 |$LN4@Allocate|
  00068	e59d0000	 ldr         r0, [sp]
  0006c	e28dd00c	 add         sp, sp, #0xC
  00070	e89d6000	 ldmia       sp, {sp, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$M42932|

			 ENDP  ; |??$_Allocate@D@std@@YAPADIPAD@Z|, std::_Allocate<char>

	EXPORT	|??2@YAPAXIPAX@Z|			; operator new

  00000			 AREA	 |.pdata|, PDATA
|$T42944| DCD	|$LN7@Construct|
	DCD	0x40001904
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??$_Construct@PAUPowerDomainCallbackInfo_t@@PAU1@@std@@YAXPAPAUPowerDomainCallbackInfo_t@@ABQAU1@@Z| PROC ; std::_Construct<PowerDomainCallbackInfo_t *,PowerDomainCallbackInfo_t *>

; 53   :     {new ((void _FARQ *)_P) _T1(_V); }

  00000		 |$LN7@Construct|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M42941|
  00010	e59d1014	 ldr         r1, [sp, #0x14]
  00014	e3a00004	 mov         r0, #4
  00018	eb000000	 bl          |??2@YAPAXIPAX@Z|
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]
  00028	e59d3000	 ldr         r3, [sp]
  0002c	e3530000	 cmp         r3, #0
  00030	0a000006	 beq         |$LN3@Construct|
  00034	e59d3018	 ldr         r3, [sp, #0x18]
  00038	e5932000	 ldr         r2, [r3]
  0003c	e59d3000	 ldr         r3, [sp]
  00040	e5832000	 str         r2, [r3]
  00044	e59d3000	 ldr         r3, [sp]
  00048	e58d3008	 str         r3, [sp, #8]
  0004c	ea000001	 b           |$LN4@Construct|
  00050		 |$LN3@Construct|
  00050	e3a03000	 mov         r3, #0
  00054	e58d3008	 str         r3, [sp, #8]
  00058		 |$LN4@Construct|
  00058	e28dd00c	 add         sp, sp, #0xC
  0005c	e89d6000	 ldmia       sp, {sp, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M42942|

			 ENDP  ; |??$_Construct@PAUPowerDomainCallbackInfo_t@@PAU1@@std@@YAXPAPAUPowerDomainCallbackInfo_t@@ABQAU1@@Z|, std::_Construct<PowerDomainCallbackInfo_t *,PowerDomainCallbackInfo_t *>

; File c:\wince600\public\common\sdk\inc\new

  00000			 AREA	 |.pdata|, PDATA
|$T42952| DCD	|$LN5@operator@6|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??2@YAPAXIPAX@Z| PROC			; operator new

; 73   :     {return (_P); }

  00000		 |$LN5@operator@6|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42949|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M42950|

			 ENDP  ; |??2@YAPAXIPAX@Z|, operator new

	EXPORT	|??0?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@ABV?$allocator@PAUPowerDomainCallbackInfo_t@@@1@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >
	IMPORT	|atexit|
	IMPORT	|memset|
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\pm\constraintadapters\powerdomainconstraint\powerdomaincontext.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T42961| DCD	|$LN5@dynamic|
	DCD	0x40001002
; Function compile flags: /Odtp

  00000			 AREA	 |.text$yc|, CODE, ARM

  00000		 |??__Es_CallbackList@@YAXXZ| PROC	; `dynamic initializer for 's_CallbackList''

; 69   : static list<PowerDomainCallbackInfo_t*> s_CallbackList;

  00000		 |$LN5@dynamic|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M42958|
  00008	e3a02001	 mov         r2, #1
  0000c	e3a01000	 mov         r1, #0
  00010	e28d0000	 add         r0, sp, #0
  00014	eb000000	 bl          memset
  00018	e28d1000	 add         r1, sp, #0
  0001c	e59f0018	 ldr         r0, [pc, #0x18]
  00020	eb000000	 bl          |??0?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@ABV?$allocator@PAUPowerDomainCallbackInfo_t@@@1@@Z|
  00024	e59f000c	 ldr         r0, [pc, #0xC]
  00028	eb000000	 bl          atexit
  0002c	e28dd004	 add         sp, sp, #4
  00030	e49de004	 ldr         lr, [sp], #4
  00034	e12fff1e	 bx          lr
  00038		 |$LN6@dynamic|
  00038		 |$LN7@dynamic|
  00038	00000000	 DCD         |??__Fs_CallbackList@@YAXXZ|
  0003c		 |$LN8@dynamic|
  0003c	00000000	 DCD         |s_CallbackList|
  00040		 |$M42959|

			 ENDP  ; |??__Es_CallbackList@@YAXXZ|, `dynamic initializer for 's_CallbackList''

; File c:\wince600\public\common\sdk\inc\list

  00000			 AREA	 |.pdata|, PDATA
|$T42972| DCD	|$LN5@list|
	DCD	0x40001704
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@ABV?$allocator@PAUPowerDomainCallbackInfo_t@@@1@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >

; 145  : 		_Head(_Buynode()), _Size(0) {}

  00000		 |$LN5@list|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42969|
  00010	e3a02000	 mov         r2, #0
  00014	e3a01000	 mov         r1, #0
  00018	e59d0010	 ldr         r0, [sp, #0x10]
  0001c	eb000000	 bl          |?_Buynode@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@IAAPAU_Node@12@PAU312@0@Z|
  00020	e58d0004	 str         r0, [sp, #4]
  00024	e59d3010	 ldr         r3, [sp, #0x10]
  00028	e2832004	 add         r2, r3, #4
  0002c	e59d3004	 ldr         r3, [sp, #4]
  00030	e5823000	 str         r3, [r2]
  00034	e59d3010	 ldr         r3, [sp, #0x10]
  00038	e2832008	 add         r2, r3, #8
  0003c	e3a03000	 mov         r3, #0
  00040	e5823000	 str         r3, [r2]
  00044	e59d3010	 ldr         r3, [sp, #0x10]
  00048	e58d3000	 str         r3, [sp]
  0004c	e59d0000	 ldr         r0, [sp]
  00050	e28dd008	 add         sp, sp, #8
  00054	e89d6000	 ldmia       sp, {sp, lr}
  00058	e12fff1e	 bx          lr
  0005c		 |$M42970|

			 ENDP  ; |??0?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@ABV?$allocator@PAUPowerDomainCallbackInfo_t@@@1@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >

	EXPORT	|??0PowerDomainConstraintInfo_t@@QAA@XZ| ; PowerDomainConstraintInfo_t::PowerDomainConstraintInfo_t
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\pm\constraintadapters\powerdomainconstraint\powerdomaincontext.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T42979| DCD	|$LN5@dynamic@2|
	DCD	0x40000901
; Function compile flags: /Odtp

  00000			 AREA	 |.text$yc|, CODE, ARM

  00000		 |??__Es_PowerDomainInfo@@YAXXZ| PROC	; `dynamic initializer for 's_PowerDomainInfo''

; 70   : static PowerDomainConstraintInfo_t  s_PowerDomainInfo;

  00000		 |$LN5@dynamic@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M42976|
  00004	e59f0014	 ldr         r0, [pc, #0x14]
  00008	eb000000	 bl          |??0PowerDomainConstraintInfo_t@@QAA@XZ|
  0000c	e59f0008	 ldr         r0, [pc, #8]
  00010	eb000000	 bl          atexit
  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$LN6@dynamic@2|
  0001c		 |$LN7@dynamic@2|
  0001c	00000000	 DCD         |??__Fs_PowerDomainInfo@@YAXXZ|
  00020		 |$LN8@dynamic@2|
  00020	00000000	 DCD         |s_PowerDomainInfo|
  00024		 |$M42977|

			 ENDP  ; |??__Es_PowerDomainInfo@@YAXXZ|, `dynamic initializer for 's_PowerDomainInfo''


  00000			 AREA	 |.pdata|, PDATA
|$T42991| DCD	|$LN6@PowerDomai@2|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0PowerDomainConstraintInfo_t@@QAA@XZ| PROC ; PowerDomainConstraintInfo_t::PowerDomainConstraintInfo_t
  00000		 |$LN6@PowerDomai@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42988|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e2830050	 add         r0, r3, #0x50
  00018	eb000000	 bl          |??0?$IndexList@K@@QAA@XZ|
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3010	 ldr         r3, [sp, #0x10]
  00024	e58d3000	 str         r3, [sp]
  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M42989|

			 ENDP  ; |??0PowerDomainConstraintInfo_t@@QAA@XZ|, PowerDomainConstraintInfo_t::PowerDomainConstraintInfo_t

	EXPORT	|??1?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@XZ| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::~list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >

  00000			 AREA	 |.pdata|, PDATA
|$T42998| DCD	|$LN5@dynamic@3|
	DCD	0x40000601
; Function compile flags: /Odtp

  00000			 AREA	 |.text$yd|, CODE, ARM

  00000		 |??__Fs_CallbackList@@YAXXZ| PROC	; `dynamic atexit destructor for 's_CallbackList''
  00000		 |$LN5@dynamic@3|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M42995|
  00004	e59f0008	 ldr         r0, [pc, #8]
  00008	eb000000	 bl          |??1?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@XZ|
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$LN6@dynamic@3|
  00014		 |$LN7@dynamic@3|
  00014	00000000	 DCD         |s_CallbackList|
  00018		 |$M42996|

			 ENDP  ; |??__Fs_CallbackList@@YAXXZ|, `dynamic atexit destructor for 's_CallbackList''

	EXPORT	|?erase@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@0@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::erase
; File c:\wince600\public\common\sdk\inc\list

  00000			 AREA	 |.pdata|, PDATA
|$T43010| DCD	|$LN5@list@2|
	DCD	0x40002704
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@XZ| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::~list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >

; 165  : 		{erase(begin(), end());

  00000		 |$LN5@list@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd01c	 sub         sp, sp, #0x1C
  00010		 |$M43007|
  00010	e28d1000	 add         r1, sp, #0
  00014	e59d0024	 ldr         r0, [sp, #0x24]
  00018	eb000000	 bl          |?end@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@XZ|
  0001c	e58d000c	 str         r0, [sp, #0xC]
  00020	e28d1004	 add         r1, sp, #4
  00024	e59d0024	 ldr         r0, [sp, #0x24]
  00028	eb000000	 bl          |?begin@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@XZ|
  0002c	e58d0010	 str         r0, [sp, #0x10]
  00030	e59d300c	 ldr         r3, [sp, #0xC]
  00034	e58d3014	 str         r3, [sp, #0x14]
  00038	e59d3014	 ldr         r3, [sp, #0x14]
  0003c	e5933000	 ldr         r3, [r3]
  00040	e59d2010	 ldr         r2, [sp, #0x10]
  00044	e58d2018	 str         r2, [sp, #0x18]
  00048	e59d2018	 ldr         r2, [sp, #0x18]
  0004c	e5922000	 ldr         r2, [r2]
  00050	e28d1008	 add         r1, sp, #8
  00054	e59d0024	 ldr         r0, [sp, #0x24]
  00058	eb000000	 bl          |?erase@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@0@Z|

; 166  : 		_Freenode(_Head);

  0005c	e59d3024	 ldr         r3, [sp, #0x24]
  00060	e2833004	 add         r3, r3, #4
  00064	e5931000	 ldr         r1, [r3]
  00068	e59d0024	 ldr         r0, [sp, #0x24]
  0006c	eb000000	 bl          |?_Freenode@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@IAAXPAU_Node@12@@Z|

; 167  : 		_Head = 0, _Size = 0; }

  00070	e59d3024	 ldr         r3, [sp, #0x24]
  00074	e2832004	 add         r2, r3, #4
  00078	e3a03000	 mov         r3, #0
  0007c	e5823000	 str         r3, [r2]
  00080	e59d3024	 ldr         r3, [sp, #0x24]
  00084	e2832008	 add         r2, r3, #8
  00088	e3a03000	 mov         r3, #0
  0008c	e5823000	 str         r3, [r2]
  00090	e28dd01c	 add         sp, sp, #0x1C
  00094	e89d6000	 ldmia       sp, {sp, lr}
  00098	e12fff1e	 bx          lr
  0009c		 |$M43008|

			 ENDP  ; |??1?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@XZ|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::~list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >


  00000			 AREA	 |.pdata|, PDATA
|$T43020| DCD	|$LN7@erase@2|
	DCD	0x40002204
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?erase@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@0@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::erase

; 257  : 		{while (_F != _L)

  00000		 |$LN7@erase@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd018	 sub         sp, sp, #0x18
  00010		 |$M43017|
  00010		 |$LN2@erase@2|
  00010	e28d102c	 add         r1, sp, #0x2C
  00014	e28d0028	 add         r0, sp, #0x28
  00018	eb000000	 bl          |??9iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBA_NABV012@@Z|
  0001c	e5cd000c	 strb        r0, [sp, #0xC]
  00020	e5dd300c	 ldrb        r3, [sp, #0xC]
  00024	e3530000	 cmp         r3, #0
  00028	0a00000c	 beq         |$LN1@erase@2|

; 258  : 			erase(_F++);

  0002c	e3a02000	 mov         r2, #0
  00030	e28d1000	 add         r1, sp, #0
  00034	e28d0028	 add         r0, sp, #0x28
  00038	eb000000	 bl          |??Eiterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AV012@H@Z|
  0003c	e58d0010	 str         r0, [sp, #0x10]
  00040	e59d3010	 ldr         r3, [sp, #0x10]
  00044	e58d3014	 str         r3, [sp, #0x14]
  00048	e59d3014	 ldr         r3, [sp, #0x14]
  0004c	e5932000	 ldr         r2, [r3]
  00050	e28d1004	 add         r1, sp, #4
  00054	e59d0020	 ldr         r0, [sp, #0x20]
  00058	eb000000	 bl          |?erase@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@@Z|
  0005c	eaffffeb	 b           |$LN2@erase@2|
  00060		 |$LN1@erase@2|

; 259  : 		return (_F); }

  00060	e59d0024	 ldr         r0, [sp, #0x24]
  00064	e28d1028	 add         r1, sp, #0x28
  00068	e3a02004	 mov         r2, #4
  0006c	eb000000	 bl          memcpy
  00070	e59d3024	 ldr         r3, [sp, #0x24]
  00074	e58d3008	 str         r3, [sp, #8]
  00078	e59d0008	 ldr         r0, [sp, #8]
  0007c	e28dd018	 add         sp, sp, #0x18
  00080	e89d6000	 ldmia       sp, {sp, lr}
  00084	e12fff1e	 bx          lr
  00088		 |$M43018|

			 ENDP  ; |?erase@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@0@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::erase

	EXPORT	|??1PowerDomainConstraintInfo_t@@QAA@XZ| ; PowerDomainConstraintInfo_t::~PowerDomainConstraintInfo_t

  00000			 AREA	 |.pdata|, PDATA
|$T43027| DCD	|$LN5@dynamic@4|
	DCD	0x40000601
; Function compile flags: /Odtp

  00000			 AREA	 |.text$yd|, CODE, ARM

  00000		 |??__Fs_PowerDomainInfo@@YAXXZ| PROC	; `dynamic atexit destructor for 's_PowerDomainInfo''
  00000		 |$LN5@dynamic@4|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M43024|
  00004	e59f0008	 ldr         r0, [pc, #8]
  00008	eb000000	 bl          |??1PowerDomainConstraintInfo_t@@QAA@XZ|
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$LN6@dynamic@4|
  00014		 |$LN7@dynamic@4|
  00014	00000000	 DCD         |s_PowerDomainInfo|
  00018		 |$M43025|

			 ENDP  ; |??__Fs_PowerDomainInfo@@YAXXZ|, `dynamic atexit destructor for 's_PowerDomainInfo''

	EXPORT	|??1?$IndexList@K@@QAA@XZ|		; IndexList<unsigned long>::~IndexList<unsigned long>

  00000			 AREA	 |.pdata|, PDATA
|$T43037| DCD	|$LN6@PowerDomai@3|
	DCD	0x40000803
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1PowerDomainConstraintInfo_t@@QAA@XZ| PROC ; PowerDomainConstraintInfo_t::~PowerDomainConstraintInfo_t
  00000		 |$LN6@PowerDomai@3|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M43034|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2830050	 add         r0, r3, #0x50
  00014	eb000000	 bl          |??1?$IndexList@K@@QAA@XZ|
  00018	e89d6000	 ldmia       sp, {sp, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$M43035|

			 ENDP  ; |??1PowerDomainConstraintInfo_t@@QAA@XZ|, PowerDomainConstraintInfo_t::~PowerDomainConstraintInfo_t

; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\inc\indexlist.h

  00000			 AREA	 |.pdata|, PDATA
|$T43045| DCD	|$LN7@IndexList@2|
	DCD	0x40001704
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1?$IndexList@K@@QAA@XZ| PROC	; IndexList<unsigned long>::~IndexList<unsigned long>

; 58   :     {

  00000		 |$LN7@IndexList@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M43042|

; 59   :         IndexData *pCurrent;
; 60   :         IndexData *pDelete;
; 61   : 
; 62   :         pCurrent = m_Head.pNext;

  00010	e59d3014	 ldr         r3, [sp, #0x14]
  00014	e5933000	 ldr         r3, [r3]
  00018	e58d3004	 str         r3, [sp, #4]
  0001c		 |$LN2@IndexList@2|

; 63   :         while (pCurrent != NULL)

  0001c	e59d3004	 ldr         r3, [sp, #4]
  00020	e3530000	 cmp         r3, #0
  00024	0a000009	 beq         |$LN1@IndexList@2|

; 64   :             {
; 65   :             pDelete = pCurrent;

  00028	e59d3004	 ldr         r3, [sp, #4]
  0002c	e58d3000	 str         r3, [sp]

; 66   :             pCurrent = pCurrent->pNext;

  00030	e59d3004	 ldr         r3, [sp, #4]
  00034	e5933000	 ldr         r3, [r3]
  00038	e58d3004	 str         r3, [sp, #4]

; 67   :             delete pDelete;

  0003c	e59d3000	 ldr         r3, [sp]
  00040	e58d3008	 str         r3, [sp, #8]
  00044	e59d0008	 ldr         r0, [sp, #8]
  00048	eb000000	 bl          |??3@YAXPAX@Z|

; 68   :             }

  0004c	eafffff2	 b           |$LN2@IndexList@2|
  00050		 |$LN1@IndexList@2|

; 69   :     }

  00050	e28dd00c	 add         sp, sp, #0xC
  00054	e89d6000	 ldmia       sp, {sp, lr}
  00058	e12fff1e	 bx          lr
  0005c		 |$M43043|

			 ENDP  ; |??1?$IndexList@K@@QAA@XZ|, IndexList<unsigned long>::~IndexList<unsigned long>


  00000			 AREA	 |.bss|, NOINIT
|s_PowerDomainInfo| % 0xdc
|s_CallbackList| % 0xc

  00000			 AREA	 |.CRT$XCU|, DATA
|s_CallbackList$initializer$| DCD |??__Es_CallbackList@@YAXXZ|
|s_PowerDomainInfo$initializer$| DCD |??__Es_PowerDomainInfo@@YAXXZ|
	END
