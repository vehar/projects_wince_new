; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\OMAP3530\OAL\PRCM\prcm_reset.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|ResetInitialize|
	IMPORT	|g_pPrcmPrm|
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\oal\prcm\prcm_reset.c

  00000			 AREA	 |.pdata|, PDATA
|$T47015| DCD	|$LN5@ResetIniti|
	DCD	0x40002501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ResetInitialize| PROC

; 27   : {

  00000		 |$LN5@ResetIniti|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M47012|

; 28   :     // clear the reset flags for all the power domains
; 29   :     OUTREG32(&g_pPrcmPrm->pOMAP_CORE_PRM->RM_RSTST_CORE, 
; 30   :         DOMAINWKUP_RST | GLOBALWARM_RST | GLOBALCOLD_RST);

  00004	e59f1084	 ldr         r1, [pc, #0x84]
  00008	e3a0e007	 mov         lr, #7

; 31   :     
; 32   :     OUTREG32(&g_pPrcmPrm->pOMAP_EMU_PRM->RM_RSTST_EMU,  
; 33   :         DOMAINWKUP_RST | GLOBALWARM_RST | GLOBALCOLD_RST);
; 34   :     
; 35   :     OUTREG32(&g_pPrcmPrm->pOMAP_PER_PRM->RM_RSTST_PER, 
; 36   :         COREDOMAINWKUP_RST | DOMAINWKUP_RST | GLOBALWARM_RST | GLOBALCOLD_RST);

  0000c	e3a0400f	 mov         r4, #0xF
  00010	e5913000	 ldr         r3, [r1]
  00014	e3a02b02	 mov         r2, #2, 22

; 37   :     
; 38   :     OUTREG32(&g_pPrcmPrm->pOMAP_DSS_PRM->RM_RSTST_DSS, 
; 39   :         COREDOMAINWKUP_RST | DOMAINWKUP_RST | GLOBALWARM_RST | GLOBALCOLD_RST);
; 40   :     
; 41   :     OUTREG32(&g_pPrcmPrm->pOMAP_NEON_PRM->RM_RSTST_NEON, 
; 42   :         COREDOMAINWKUP_RST | DOMAINWKUP_RST | GLOBALWARM_RST | GLOBALCOLD_RST);
; 43   :     
; 44   :     OUTREG32(&g_pPrcmPrm->pOMAP_SGX_PRM->RM_RSTST_SGX, 
; 45   :         COREDOMAINWKUP_RST | DOMAINWKUP_RST | GLOBALWARM_RST | GLOBALCOLD_RST);
; 46   :     
; 47   :     OUTREG32(&g_pPrcmPrm->pOMAP_CAM_PRM->RM_RSTST_CAM, 
; 48   :         COREDOMAINWKUP_RST | DOMAINWKUP_RST | GLOBALWARM_RST | GLOBALCOLD_RST);
; 49   :     
; 50   :     OUTREG32(&g_pPrcmPrm->pOMAP_USBHOST_PRM->RM_RSTST_USBHOST, 
; 51   :       COREDOMAINWKUP_RST | DOMAINWKUP_RST | GLOBALWARM_RST | GLOBALCOLD_RST);
; 52   : 
; 53   :     OUTREG32(&g_pPrcmPrm->pOMAP_MPU_PRM->RM_RSTST_MPU,         
; 54   :         COREDOMAINWKUP_RST | DOMAINWKUP_RST | GLOBALWARM_RST | GLOBALCOLD_RST |
; 55   :         EMULATION_MPU_RST);

  00018	e382200f	 orr         r2, r2, #0xF
  0001c	e5933004	 ldr         r3, [r3, #4]

; 56   :     
; 57   :     /*brian OUTREG32(&g_pPrcmPrm->pOMAP_IVA2_PRM->RM_RSTST_IVA2, 
; 58   :         COREDOMAINWKUP_RST | DOMAINWKUP_RST | GLOBALWARM_RST | GLOBALCOLD_RST |
; 59   :         EMULATION_SEQ_RST | EMULATION_VHWA_RST | EMULATION_IVA2_RST |
; 60   :         IVA2_SW_RST3 | IVA2_SW_RST2 | IVA2_SW_RST1);*/
; 61   : 
; 62   :     return TRUE;

  00020	e3a00001	 mov         r0, #1
  00024	e583e058	 str         lr, [r3, #0x58]
  00028	e5913000	 ldr         r3, [r1]
  0002c	e5933010	 ldr         r3, [r3, #0x10]
  00030	e583e058	 str         lr, [r3, #0x58]
  00034	e5913000	 ldr         r3, [r1]
  00038	e5933008	 ldr         r3, [r3, #8]
  0003c	e5834058	 str         r4, [r3, #0x58]
  00040	e5913000	 ldr         r3, [r1]
  00044	e5933018	 ldr         r3, [r3, #0x18]
  00048	e5834058	 str         r4, [r3, #0x58]
  0004c	e5913000	 ldr         r3, [r1]
  00050	e593301c	 ldr         r3, [r3, #0x1C]
  00054	e5834058	 str         r4, [r3, #0x58]
  00058	e5913000	 ldr         r3, [r1]
  0005c	e5933028	 ldr         r3, [r3, #0x28]
  00060	e5834058	 str         r4, [r3, #0x58]
  00064	e5913000	 ldr         r3, [r1]
  00068	e5933024	 ldr         r3, [r3, #0x24]
  0006c	e5834058	 str         r4, [r3, #0x58]
  00070	e5913000	 ldr         r3, [r1]
  00074	e593300c	 ldr         r3, [r3, #0xC]
  00078	e5834058	 str         r4, [r3, #0x58]
  0007c	e5913000	 ldr         r3, [r1]
  00080	e5933014	 ldr         r3, [r3, #0x14]
  00084	e5832058	 str         r2, [r3, #0x58]

; 63   : }

  00088	e8bd4010	 ldmia       sp!, {r4, lr}
  0008c	e12fff1e	 bx          lr
  00090		 |$LN6@ResetIniti|
  00090		 |$LN7@ResetIniti|
  00090	00000000	 DCD         |g_pPrcmPrm|
  00094		 |$M47013|

			 ENDP  ; |ResetInitialize|

	EXPORT	|PrcmDomainResetStatus|
	IMPORT	|GetPrmRegisterSet|

  00000			 AREA	 |.pdata|, PDATA
|$T47032| DCD	|$LN9@PrcmDomain|
	DCD	0x40001301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PrcmDomainResetStatus| PROC

; 72   : {

  00000		 |$LN9@PrcmDomain|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M47029|
  00004	e1a07002	 mov         r7, r2
  00008	e1a06001	 mov         r6, r1
  0000c	e1a04000	 mov         r4, r0

; 73   :     // get the prm register for the domain
; 74   :     //
; 75   :     BOOL rc = FALSE;
; 76   :     UINT resetStatus;
; 77   :     OMAP_PRM_REGS *pPrmRegs = GetPrmRegisterSet(powerDomain);

  00010	e3a05000	 mov         r5, #0
  00014	eb000000	 bl          GetPrmRegisterSet

; 78   :     if (powerDomain == POWERDOMAIN_WAKEUP || pPrmRegs == NULL) goto cleanUp;

  00018	e3540000	 cmp         r4, #0
  0001c	0a000007	 beq         |$cleanUp$46963|
  00020	e3500000	 cmp         r0, #0
  00024	0a000005	 beq         |$cleanUp$46963|

; 79   : 
; 80   :     // get current status 
; 81   :     resetStatus = INREG32(&pPrmRegs->RM_RSTST_xxx);

  00028	e5903058	 ldr         r3, [r0, #0x58]

; 82   :     if (pResetStatus) *pResetStatus = resetStatus;

  0002c	e3560000	 cmp         r6, #0

; 83   :     
; 84   :     // clear status if requested
; 85   :     if (bClear) OUTREG32(&pPrmRegs->RM_RSTST_xxx, resetStatus);
; 86   : 
; 87   :     rc = TRUE;

  00030	e3a05001	 mov         r5, #1
  00034	15863000	 strne       r3, [r6]
  00038	e3570000	 cmp         r7, #0
  0003c	15803058	 strne       r3, [r0, #0x58]
  00040		 |$cleanUp$46963|

; 88   :     
; 89   : cleanUp:
; 90   :     return rc;
; 91   : }

  00040	e1a00005	 mov         r0, r5
  00044	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$M47030|

			 ENDP  ; |PrcmDomainResetStatus|

	EXPORT	|PrcmDomainReset|

  00000			 AREA	 |.pdata|, PDATA
|$T47041| DCD	|$LN5@PrcmDomain@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PrcmDomainReset| PROC

; 99   : {

  00000		 |$LN5@PrcmDomain@2|
  00000		 |$M47038|

; 100  : 	BOOL            rc = FALSE;
; 101  : 		
; 102  : 	UNREFERENCED_PARAMETER(powerDomain);
; 103  : 	UNREFERENCED_PARAMETER(resetMask);
; 104  : 
; 105  : 	// currently no reset domain supported - brian
; 106  : 
; 107  :     return rc;

  00000	e3a00000	 mov         r0, #0

; 108  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M47039|

			 ENDP  ; |PrcmDomainReset|

	EXPORT	|PrcmDomainResetRelease|

  00000			 AREA	 |.pdata|, PDATA
|$T47050| DCD	|$LN5@PrcmDomain@3|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PrcmDomainResetRelease| PROC

; 116  : {

  00000		 |$LN5@PrcmDomain@3|
  00000		 |$M47047|

; 117  : 	BOOL            rc = FALSE;
; 118  : 		
; 119  : 	UNREFERENCED_PARAMETER(powerDomain);
; 120  : 	UNREFERENCED_PARAMETER(resetMask);
; 121  : 	
; 122  : 	// currently no reset domain supported - brian
; 123  : 
; 124  :     return rc;

  00000	e3a00000	 mov         r0, #0

; 125  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M47048|

			 ENDP  ; |PrcmDomainResetRelease|

	EXPORT	|PrcmGlobalReset|

  00000			 AREA	 |.pdata|, PDATA
|$T47057| DCD	|$LN5@PrcmGlobal|
	DCD	0x40000700
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PrcmGlobalReset| PROC

; 131  : {

  00000		 |$LN5@PrcmGlobal|
  00000		 |$M47054|

; 132  : #ifdef FIX_DDR_STALL_ERRATA
; 133  : 	// set SDRC_POWER_REG register
; 134  :     SETREG32(&g_pSDRCRegs->SDRC_POWER, (1 << 6));
; 135  : 	INTERRUPTS_OFF();
; 136  : 
; 137  : 	// Call reset function from SRAM, never returns
; 138  : 	fnOALCPUWarmReset(g_pCPUInfo);
; 139  : #else
; 140  : 	OUTREG32(&g_pPrcmPrm->pOMAP_GLOBAL_PRM->PRM_RSTCTRL, RSTCTRL_RST_GS);

  00000	e59f3010	 ldr         r3, [pc, #0x10]
  00004	e3a02002	 mov         r2, #2
  00008	e5933000	 ldr         r3, [r3]
  0000c	e593302c	 ldr         r3, [r3, #0x2C]
  00010	e5832050	 str         r2, [r3, #0x50]

; 141  : #endif
; 142  : }

  00014	e12fff1e	 bx          lr
  00018		 |$LN6@PrcmGlobal|
  00018		 |$LN7@PrcmGlobal|
  00018	00000000	 DCD         |g_pPrcmPrm|
  0001c		 |$M47055|

			 ENDP  ; |PrcmGlobalReset|

	END
