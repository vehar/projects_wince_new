; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\OMAP3530\OAL\PRCM\prcm_reset.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|ResetInitialize|
	IMPORT	|g_pPrcmPrm|

  00000			 AREA	 |.pdata|, PDATA
|$T46997| DCD	|$LN5@ResetIniti|
	DCD	0x40004f01
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\oal\prcm\prcm_reset.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ResetInitialize| PROC

; 27   : {

  00000		 |$LN5@ResetIniti|
  00000	e24dd004	 sub         sp, sp, #4
  00004		 |$M46994|

; 28   :     // clear the reset flags for all the power domains
; 29   :     OUTREG32(&g_pPrcmPrm->pOMAP_CORE_PRM->RM_RSTST_CORE, 
; 30   :         DOMAINWKUP_RST | GLOBALWARM_RST | GLOBALCOLD_RST
; 31   :         );

  00004	e59f312c	 ldr         r3, [pc, #0x12C]
  00008	e5933000	 ldr         r3, [r3]
  0000c	e2833004	 add         r3, r3, #4
  00010	e5933000	 ldr         r3, [r3]
  00014	e2832058	 add         r2, r3, #0x58
  00018	e3a03007	 mov         r3, #7
  0001c	e5823000	 str         r3, [r2]

; 32   :     
; 33   :     OUTREG32(&g_pPrcmPrm->pOMAP_EMU_PRM->RM_RSTST_EMU,  
; 34   :         DOMAINWKUP_RST | GLOBALWARM_RST | GLOBALCOLD_RST
; 35   :         );

  00020	e59f3110	 ldr         r3, [pc, #0x110]
  00024	e5933000	 ldr         r3, [r3]
  00028	e2833010	 add         r3, r3, #0x10
  0002c	e5933000	 ldr         r3, [r3]
  00030	e2832058	 add         r2, r3, #0x58
  00034	e3a03007	 mov         r3, #7
  00038	e5823000	 str         r3, [r2]

; 36   :     
; 37   :     OUTREG32(&g_pPrcmPrm->pOMAP_PER_PRM->RM_RSTST_PER, 
; 38   :         COREDOMAINWKUP_RST | DOMAINWKUP_RST | GLOBALWARM_RST | GLOBALCOLD_RST
; 39   :         );

  0003c	e59f30f4	 ldr         r3, [pc, #0xF4]
  00040	e5933000	 ldr         r3, [r3]
  00044	e2833008	 add         r3, r3, #8
  00048	e5933000	 ldr         r3, [r3]
  0004c	e2832058	 add         r2, r3, #0x58
  00050	e3a0300f	 mov         r3, #0xF
  00054	e5823000	 str         r3, [r2]

; 40   :     
; 41   :     OUTREG32(&g_pPrcmPrm->pOMAP_DSS_PRM->RM_RSTST_DSS, 
; 42   :         COREDOMAINWKUP_RST | DOMAINWKUP_RST | GLOBALWARM_RST | GLOBALCOLD_RST
; 43   :         );

  00058	e59f30d8	 ldr         r3, [pc, #0xD8]
  0005c	e5933000	 ldr         r3, [r3]
  00060	e2833018	 add         r3, r3, #0x18
  00064	e5933000	 ldr         r3, [r3]
  00068	e2832058	 add         r2, r3, #0x58
  0006c	e3a0300f	 mov         r3, #0xF
  00070	e5823000	 str         r3, [r2]

; 44   :     
; 45   :     OUTREG32(&g_pPrcmPrm->pOMAP_NEON_PRM->RM_RSTST_NEON, 
; 46   :         COREDOMAINWKUP_RST | DOMAINWKUP_RST | GLOBALWARM_RST | GLOBALCOLD_RST
; 47   :         );

  00074	e59f30bc	 ldr         r3, [pc, #0xBC]
  00078	e5933000	 ldr         r3, [r3]
  0007c	e283301c	 add         r3, r3, #0x1C
  00080	e5933000	 ldr         r3, [r3]
  00084	e2832058	 add         r2, r3, #0x58
  00088	e3a0300f	 mov         r3, #0xF
  0008c	e5823000	 str         r3, [r2]

; 48   :     
; 49   :     OUTREG32(&g_pPrcmPrm->pOMAP_SGX_PRM->RM_RSTST_SGX, 
; 50   :         COREDOMAINWKUP_RST | DOMAINWKUP_RST | GLOBALWARM_RST | GLOBALCOLD_RST
; 51   :         );

  00090	e59f30a0	 ldr         r3, [pc, #0xA0]
  00094	e5933000	 ldr         r3, [r3]
  00098	e2833028	 add         r3, r3, #0x28
  0009c	e5933000	 ldr         r3, [r3]
  000a0	e2832058	 add         r2, r3, #0x58
  000a4	e3a0300f	 mov         r3, #0xF
  000a8	e5823000	 str         r3, [r2]

; 52   :     
; 53   :     OUTREG32(&g_pPrcmPrm->pOMAP_CAM_PRM->RM_RSTST_CAM, 
; 54   :         COREDOMAINWKUP_RST | DOMAINWKUP_RST | GLOBALWARM_RST | GLOBALCOLD_RST
; 55   :         );

  000ac	e59f3084	 ldr         r3, [pc, #0x84]
  000b0	e5933000	 ldr         r3, [r3]
  000b4	e2833024	 add         r3, r3, #0x24
  000b8	e5933000	 ldr         r3, [r3]
  000bc	e2832058	 add         r2, r3, #0x58
  000c0	e3a0300f	 mov         r3, #0xF
  000c4	e5823000	 str         r3, [r2]

; 56   :     
; 57   :     OUTREG32(&g_pPrcmPrm->pOMAP_USBHOST_PRM->RM_RSTST_USBHOST, 
; 58   :       COREDOMAINWKUP_RST | DOMAINWKUP_RST | GLOBALWARM_RST | GLOBALCOLD_RST
; 59   :       );

  000c8	e59f3068	 ldr         r3, [pc, #0x68]
  000cc	e5933000	 ldr         r3, [r3]
  000d0	e283300c	 add         r3, r3, #0xC
  000d4	e5933000	 ldr         r3, [r3]
  000d8	e2832058	 add         r2, r3, #0x58
  000dc	e3a0300f	 mov         r3, #0xF
  000e0	e5823000	 str         r3, [r2]

; 60   : 
; 61   :     OUTREG32(&g_pPrcmPrm->pOMAP_MPU_PRM->RM_RSTST_MPU,         
; 62   :         COREDOMAINWKUP_RST | DOMAINWKUP_RST | GLOBALWARM_RST | GLOBALCOLD_RST |
; 63   :         EMULATION_MPU_RST
; 64   :         );

  000e4	e59f304c	 ldr         r3, [pc, #0x4C]
  000e8	e5933000	 ldr         r3, [r3]
  000ec	e2833014	 add         r3, r3, #0x14
  000f0	e5933000	 ldr         r3, [r3]
  000f4	e2832058	 add         r2, r3, #0x58
  000f8	e3a03b02	 mov         r3, #2, 22
  000fc	e383300f	 orr         r3, r3, #0xF
  00100	e5823000	 str         r3, [r2]

; 65   :     
; 66   :     OUTREG32(&g_pPrcmPrm->pOMAP_IVA2_PRM->RM_RSTST_IVA2, 
; 67   :         COREDOMAINWKUP_RST | DOMAINWKUP_RST | GLOBALWARM_RST | GLOBALCOLD_RST |
; 68   :         EMULATION_SEQ_RST | EMULATION_VHWA_RST | EMULATION_IVA2_RST |
; 69   :         IVA2_SW_RST3 | IVA2_SW_RST2 | IVA2_SW_RST1
; 70   :         );

  00104	e59f302c	 ldr         r3, [pc, #0x2C]
  00108	e5933000	 ldr         r3, [r3]
  0010c	e2833020	 add         r3, r3, #0x20
  00110	e5933000	 ldr         r3, [r3]
  00114	e2832058	 add         r2, r3, #0x58
  00118	e3a03c3f	 mov         r3, #0x3F, 24
  0011c	e383300f	 orr         r3, r3, #0xF
  00120	e5823000	 str         r3, [r2]

; 71   : 
; 72   :     return TRUE;

  00124	e3a03001	 mov         r3, #1
  00128	e58d3000	 str         r3, [sp]

; 73   : }

  0012c	e59d0000	 ldr         r0, [sp]
  00130	e28dd004	 add         sp, sp, #4
  00134	e12fff1e	 bx          lr
  00138		 |$LN6@ResetIniti|
  00138		 |$LN7@ResetIniti|
  00138	00000000	 DCD         |g_pPrcmPrm|
  0013c		 |$M46995|

			 ENDP  ; |ResetInitialize|

	EXPORT	|PrcmDomainResetStatus|
	IMPORT	|GetPrmRegisterSet|

  00008			 AREA	 |.pdata|, PDATA
|$T47005| DCD	|$LN9@PrcmDomain|
	DCD	0x40002b04
; Function compile flags: /Odtp

  0013c			 AREA	 |.text|, CODE, ARM

  0013c		 |PrcmDomainResetStatus| PROC

; 82   : {

  0013c		 |$LN9@PrcmDomain|
  0013c	e1a0c00d	 mov         r12, sp
  00140	e92d0007	 stmdb       sp!, {r0 - r2}
  00144	e92d5000	 stmdb       sp!, {r12, lr}
  00148	e24dd014	 sub         sp, sp, #0x14
  0014c		 |$M47002|

; 83   :     // get the prm register for the domain
; 84   :     //
; 85   :     BOOL rc = FALSE;

  0014c	e3a03000	 mov         r3, #0
  00150	e58d3000	 str         r3, [sp]

; 86   :     UINT resetStatus;
; 87   :     OMAP_PRM_REGS *pPrmRegs = GetPrmRegisterSet(powerDomain);

  00154	e59d001c	 ldr         r0, [sp, #0x1C]
  00158	eb000000	 bl          GetPrmRegisterSet
  0015c	e58d0010	 str         r0, [sp, #0x10]
  00160	e59d3010	 ldr         r3, [sp, #0x10]
  00164	e58d3008	 str         r3, [sp, #8]

; 88   :     if (powerDomain == POWERDOMAIN_WAKEUP || pPrmRegs == NULL) goto cleanUp;

  00168	e59d301c	 ldr         r3, [sp, #0x1C]
  0016c	e3530000	 cmp         r3, #0
  00170	0a000002	 beq         |$LN3@PrcmDomain|
  00174	e59d3008	 ldr         r3, [sp, #8]
  00178	e3530000	 cmp         r3, #0
  0017c	1a000000	 bne         |$LN4@PrcmDomain|
  00180		 |$LN3@PrcmDomain|
  00180	ea000012	 b           |$cleanUp$46941|
  00184		 |$LN4@PrcmDomain|

; 89   : 
; 90   :     // get current status 
; 91   :     resetStatus = INREG32(&pPrmRegs->RM_RSTST_xxx);

  00184	e59d3008	 ldr         r3, [sp, #8]
  00188	e2833058	 add         r3, r3, #0x58
  0018c	e5933000	 ldr         r3, [r3]
  00190	e58d3004	 str         r3, [sp, #4]

; 92   :     if (pResetStatus) *pResetStatus = resetStatus;

  00194	e59d3020	 ldr         r3, [sp, #0x20]
  00198	e3530000	 cmp         r3, #0
  0019c	0a000002	 beq         |$LN2@PrcmDomain|
  001a0	e59d2004	 ldr         r2, [sp, #4]
  001a4	e59d3020	 ldr         r3, [sp, #0x20]
  001a8	e5832000	 str         r2, [r3]
  001ac		 |$LN2@PrcmDomain|

; 93   :     
; 94   :     // clear status if requested
; 95   :     if (bClear) OUTREG32(&pPrmRegs->RM_RSTST_xxx, resetStatus);

  001ac	e59d3024	 ldr         r3, [sp, #0x24]
  001b0	e3530000	 cmp         r3, #0
  001b4	0a000003	 beq         |$LN1@PrcmDomain|
  001b8	e59d3008	 ldr         r3, [sp, #8]
  001bc	e2832058	 add         r2, r3, #0x58
  001c0	e59d3004	 ldr         r3, [sp, #4]
  001c4	e5823000	 str         r3, [r2]
  001c8		 |$LN1@PrcmDomain|

; 96   : 
; 97   :     rc = TRUE;

  001c8	e3a03001	 mov         r3, #1
  001cc	e58d3000	 str         r3, [sp]
  001d0		 |$cleanUp$46941|

; 98   :     
; 99   : cleanUp:
; 100  :     return rc;

  001d0	e59d3000	 ldr         r3, [sp]
  001d4	e58d300c	 str         r3, [sp, #0xC]

; 101  : }

  001d8	e59d000c	 ldr         r0, [sp, #0xC]
  001dc	e28dd014	 add         sp, sp, #0x14
  001e0	e89d6000	 ldmia       sp, {sp, lr}
  001e4	e12fff1e	 bx          lr
  001e8		 |$M47003|

			 ENDP  ; |PrcmDomainResetStatus|

	EXPORT	|PrcmDomainReset|

  00010			 AREA	 |.pdata|, PDATA
|$T47011| DCD	|$LN7@PrcmDomain@2|
	DCD	0x40002204
; Function compile flags: /Odtp

  001e8			 AREA	 |.text|, CODE, ARM

  001e8		 |PrcmDomainReset| PROC

; 109  : {

  001e8		 |$LN7@PrcmDomain@2|
  001e8	e1a0c00d	 mov         r12, sp
  001ec	e92d0003	 stmdb       sp!, {r0, r1}
  001f0	e92d5000	 stmdb       sp!, {r12, lr}
  001f4	e24dd010	 sub         sp, sp, #0x10
  001f8		 |$M47008|

; 110  :     BOOL            rc = FALSE;

  001f8	e3a03000	 mov         r3, #0
  001fc	e58d3000	 str         r3, [sp]

; 111  :     OMAP_PRM_REGS  *pPrmRegs;
; 112  :     
; 113  :     // currently only support resetting of iva2 domain
; 114  :     if (powerDomain != POWERDOMAIN_IVA2) goto cleanUp;

  00200	e59d3018	 ldr         r3, [sp, #0x18]
  00204	e3530008	 cmp         r3, #8
  00208	0a000000	 beq         |$LN2@PrcmDomain@2|
  0020c	ea000011	 b           |$cleanUp$46955|
  00210		 |$LN2@PrcmDomain@2|

; 115  : 
; 116  :     // reset the appropriate domains
; 117  :     pPrmRegs = GetPrmRegisterSet(powerDomain);

  00210	e59d0018	 ldr         r0, [sp, #0x18]
  00214	eb000000	 bl          GetPrmRegisterSet
  00218	e58d000c	 str         r0, [sp, #0xC]
  0021c	e59d300c	 ldr         r3, [sp, #0xC]
  00220	e58d3004	 str         r3, [sp, #4]

; 118  :     if (pPrmRegs == NULL) goto cleanUp;

  00224	e59d3004	 ldr         r3, [sp, #4]
  00228	e3530000	 cmp         r3, #0
  0022c	1a000000	 bne         |$LN1@PrcmDomain@2|
  00230	ea000008	 b           |$cleanUp$46955|
  00234		 |$LN1@PrcmDomain@2|

; 119  : 
; 120  :     resetMask &= RST3_IVA2 | RST2_IVA2 | RST1_IVA2;

  00234	e59d301c	 ldr         r3, [sp, #0x1C]
  00238	e2033007	 and         r3, r3, #7
  0023c	e58d301c	 str         r3, [sp, #0x1C]

; 121  : 
; 122  :     // UNDONE:
; 123  :     // not exactly clear with the programming model for these registers
; 124  :     //
; 125  :     OUTREG32(&pPrmRegs->RM_RSTCTRL_xxx, resetMask);

  00240	e59d3004	 ldr         r3, [sp, #4]
  00244	e2832050	 add         r2, r3, #0x50
  00248	e59d301c	 ldr         r3, [sp, #0x1C]
  0024c	e5823000	 str         r3, [r2]

; 126  :     rc = TRUE;

  00250	e3a03001	 mov         r3, #1
  00254	e58d3000	 str         r3, [sp]
  00258		 |$cleanUp$46955|

; 127  :     
; 128  : cleanUp:
; 129  :     return rc;

  00258	e59d3000	 ldr         r3, [sp]
  0025c	e58d3008	 str         r3, [sp, #8]

; 130  : }

  00260	e59d0008	 ldr         r0, [sp, #8]
  00264	e28dd010	 add         sp, sp, #0x10
  00268	e89d6000	 ldmia       sp, {sp, lr}
  0026c	e12fff1e	 bx          lr
  00270		 |$M47009|

			 ENDP  ; |PrcmDomainReset|

	EXPORT	|PrcmDomainResetRelease|

  00018			 AREA	 |.pdata|, PDATA
|$T47017| DCD	|$LN9@PrcmDomain@3|
	DCD	0x40003804
; Function compile flags: /Odtp

  00270			 AREA	 |.text|, CODE, ARM

  00270		 |PrcmDomainResetRelease| PROC

; 138  : {

  00270		 |$LN9@PrcmDomain@3|
  00270	e1a0c00d	 mov         r12, sp
  00274	e92d0003	 stmdb       sp!, {r0, r1}
  00278	e92d5000	 stmdb       sp!, {r12, lr}
  0027c	e24dd018	 sub         sp, sp, #0x18
  00280		 |$M47014|

; 139  :     BOOL            rc = FALSE;

  00280	e3a03000	 mov         r3, #0
  00284	e58d3000	 str         r3, [sp]

; 140  :     UINT            resetTemp;
; 141  :     UINT            resetStatus;
; 142  :     OMAP_PRM_REGS  *pPrmRegs;
; 143  :     
; 144  :     // currently only support resetting of iva2 domain
; 145  :     if (powerDomain != POWERDOMAIN_IVA2) goto cleanUp;

  00288	e59d3020	 ldr         r3, [sp, #0x20]
  0028c	e3530008	 cmp         r3, #8
  00290	0a000000	 beq         |$LN4@PrcmDomain@3|
  00294	ea000027	 b           |$cleanUp$46970|
  00298		 |$LN4@PrcmDomain@3|

; 146  : 
; 147  :     // reset the appropriate domains
; 148  :     pPrmRegs = GetPrmRegisterSet(powerDomain);

  00298	e59d0020	 ldr         r0, [sp, #0x20]
  0029c	eb000000	 bl          GetPrmRegisterSet
  002a0	e58d0014	 str         r0, [sp, #0x14]
  002a4	e59d3014	 ldr         r3, [sp, #0x14]
  002a8	e58d3008	 str         r3, [sp, #8]

; 149  :     if (pPrmRegs == NULL) goto cleanUp;

  002ac	e59d3008	 ldr         r3, [sp, #8]
  002b0	e3530000	 cmp         r3, #0
  002b4	1a000000	 bne         |$LN3@PrcmDomain@3|
  002b8	ea00001e	 b           |$cleanUp$46970|
  002bc		 |$LN3@PrcmDomain@3|

; 150  : 
; 151  :     resetMask &= RST3_IVA2 | RST2_IVA2 | RST1_IVA2;

  002bc	e59d3024	 ldr         r3, [sp, #0x24]
  002c0	e2033007	 and         r3, r3, #7
  002c4	e58d3024	 str         r3, [sp, #0x24]

; 152  :     resetTemp = /*~INREG32(&pPrmRegs->RM_RSTCTRL_xxx) |*/ resetMask;

  002c8	e59d3024	 ldr         r3, [sp, #0x24]
  002cc	e58d300c	 str         r3, [sp, #0xC]

; 153  : 
; 154  :     // UNDONE:
; 155  :     // not exactly clear with the programming model for these registers
; 156  :     //
; 157  :     OUTREG32(&pPrmRegs->RM_RSTCTRL_xxx, ~resetTemp);

  002d0	e59d300c	 ldr         r3, [sp, #0xC]
  002d4	e1e02003	 mvn         r2, r3
  002d8	e59d3008	 ldr         r3, [sp, #8]
  002dc	e2833050	 add         r3, r3, #0x50
  002e0	e5832000	 str         r2, [r3]

; 158  :     resetStatus = resetMask << 8;    

  002e4	e59d3024	 ldr         r3, [sp, #0x24]
  002e8	e1a03403	 mov         r3, r3, lsl #8
  002ec	e58d3004	 str         r3, [sp, #4]
  002f0		 |$LN2@PrcmDomain@3|

; 159  :     while (resetStatus != 0)

  002f0	e59d3004	 ldr         r3, [sp, #4]
  002f4	e3530000	 cmp         r3, #0
  002f8	0a000007	 beq         |$LN1@PrcmDomain@3|

; 160  :         {
; 161  :         resetStatus &= ~INREG32(&pPrmRegs->RM_RSTST_xxx);

  002fc	e59d3008	 ldr         r3, [sp, #8]
  00300	e2833058	 add         r3, r3, #0x58
  00304	e5933000	 ldr         r3, [r3]
  00308	e1e02003	 mvn         r2, r3
  0030c	e59d3004	 ldr         r3, [sp, #4]
  00310	e0033002	 and         r3, r3, r2
  00314	e58d3004	 str         r3, [sp, #4]

; 162  :         }

  00318	eafffff4	 b           |$LN2@PrcmDomain@3|
  0031c		 |$LN1@PrcmDomain@3|

; 163  :     
; 164  :     // clear the status
; 165  :     OUTREG32(&pPrmRegs->RM_RSTST_xxx, resetMask << 8);

  0031c	e59d3024	 ldr         r3, [sp, #0x24]
  00320	e1a02403	 mov         r2, r3, lsl #8
  00324	e59d3008	 ldr         r3, [sp, #8]
  00328	e2833058	 add         r3, r3, #0x58
  0032c	e5832000	 str         r2, [r3]

; 166  :         
; 167  :     rc = TRUE;

  00330	e3a03001	 mov         r3, #1
  00334	e58d3000	 str         r3, [sp]
  00338		 |$cleanUp$46970|

; 168  :     
; 169  : cleanUp:
; 170  :     return rc;

  00338	e59d3000	 ldr         r3, [sp]
  0033c	e58d3010	 str         r3, [sp, #0x10]

; 171  : }

  00340	e59d0010	 ldr         r0, [sp, #0x10]
  00344	e28dd018	 add         sp, sp, #0x18
  00348	e89d6000	 ldmia       sp, {sp, lr}
  0034c	e12fff1e	 bx          lr
  00350		 |$M47015|

			 ENDP  ; |PrcmDomainResetRelease|

	EXPORT	|PrcmGlobalReset|

  00020			 AREA	 |.pdata|, PDATA
|$T47022| DCD	|$LN5@PrcmGlobal|
	DCD	0x40000900
; Function compile flags: /Odtp

  00350			 AREA	 |.text|, CODE, ARM

  00350		 |PrcmGlobalReset| PROC

; 177  : {

  00350		 |$LN5@PrcmGlobal|
  00350		 |$M47019|

; 178  : #ifdef FIX_DDR_STALL_ERRATA
; 179  : 	// set SDRC_POWER_REG register
; 180  :     SETREG32(&g_pSDRCRegs->SDRC_POWER, (1 << 6));
; 181  : 	INTERRUPTS_OFF();
; 182  : 
; 183  : 	// Call reset function from SRAM, never returns
; 184  : 	fnOALCPUWarmReset(g_pCPUInfo);
; 185  : #else
; 186  : 	OUTREG32(&g_pPrcmPrm->pOMAP_GLOBAL_PRM->PRM_RSTCTRL, RSTCTRL_RST_GS);

  00350	e59f3018	 ldr         r3, [pc, #0x18]
  00354	e5933000	 ldr         r3, [r3]
  00358	e283302c	 add         r3, r3, #0x2C
  0035c	e5933000	 ldr         r3, [r3]
  00360	e2832050	 add         r2, r3, #0x50
  00364	e3a03002	 mov         r3, #2
  00368	e5823000	 str         r3, [r2]

; 187  : #endif
; 188  : }

  0036c	e12fff1e	 bx          lr
  00370		 |$LN6@PrcmGlobal|
  00370		 |$LN7@PrcmGlobal|
  00370	00000000	 DCD         |g_pPrcmPrm|
  00374		 |$M47020|

			 ENDP  ; |PrcmGlobalReset|

	END
