; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\OMAP3530\OAL\SR\oal_sr.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|SmartReflex_dump_register_v2|
	EXPORT	|SmartReflex_ClearInterruptStatus_v2|
	EXPORT	|SmartReflex_EnableInterrupts_v2|
	EXPORT	|SmartReflex_SetErrorControl_v2|
	EXPORT	|SmartReflex_SetIdleMode_v2|
	EXPORT	|SmartReflex_SetSensorMode_v2|
	EXPORT	|SmartReflex_dump_register_v1|
	EXPORT	|SmartReflex_SetAvgWeight|
	EXPORT	|SmartReflex_GetStatus|
	EXPORT	|SmartReflex_ClearInterruptStatus_v1|
	EXPORT	|SmartReflex_Enable|
	EXPORT	|SmartReflex_EnableSensorBlock|
	EXPORT	|SmartReflex_EnableMinMaxAvgBlock|
	EXPORT	|SmartReflex_EnableErrorGeneratorBlock|
	EXPORT	|SmartReflex_EnableInterrupts_v1|
	EXPORT	|SmartReflex_SetErrorControl_v1|
	EXPORT	|SmartReflex_SetSensorReferenceData|
	EXPORT	|SmartReflex_SetIdleMode_v1|
	EXPORT	|SmartReflex_SetSensorMode_v1|
	EXPORT	|SmartReflex_SetAccumulationSize|
	EXPORT	|SmartReflex_InitializeChannel|
	EXPORT	|SmartReflex_Functions_v1| [ DATA ]
	EXPORT	|SmartReflex_Functions_v2| [ DATA ]

  00000			 AREA	 |.data|, DATA
|SmartReflex_Functions_v1| DCD |SmartReflex_InitializeChannel|
	DCD	|SmartReflex_SetAccumulationSize|
	DCD	|SmartReflex_SetSensorMode_v1|
	DCD	|SmartReflex_SetIdleMode_v1|
	DCD	|SmartReflex_SetSensorReferenceData|
	DCD	|SmartReflex_SetErrorControl_v1|
	DCD	|SmartReflex_EnableInterrupts_v1|
	DCD	|SmartReflex_EnableErrorGeneratorBlock|
	DCD	|SmartReflex_EnableMinMaxAvgBlock|
	DCD	|SmartReflex_EnableSensorBlock|
	DCD	|SmartReflex_Enable|
	DCD	|SmartReflex_ClearInterruptStatus_v1|
	DCD	|SmartReflex_GetStatus|
	DCD	|SmartReflex_SetAvgWeight|
	DCD	|SmartReflex_dump_register_v1|
|SmartReflex_Functions_v2| DCD |SmartReflex_InitializeChannel|
	DCD	|SmartReflex_SetAccumulationSize|
	DCD	|SmartReflex_SetSensorMode_v2|
	DCD	|SmartReflex_SetIdleMode_v2|
	DCD	|SmartReflex_SetSensorReferenceData|
	DCD	|SmartReflex_SetErrorControl_v2|
	DCD	|SmartReflex_EnableInterrupts_v2|
	DCD	|SmartReflex_EnableErrorGeneratorBlock|
	DCD	|SmartReflex_EnableMinMaxAvgBlock|
	DCD	|SmartReflex_EnableSensorBlock|
	DCD	|SmartReflex_Enable|
	DCD	|SmartReflex_ClearInterruptStatus_v2|
	DCD	|SmartReflex_GetStatus|
	DCD	|SmartReflex_SetAvgWeight|
	DCD	|SmartReflex_dump_register_v2|

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0

  00000			 AREA	 |.bss|, NOINIT
|g_pSr|	%	0x8

  00000			 AREA	 |.pdata|, PDATA
|$T46797| DCD	|$LN5@SmartRefle|
	DCD	0x40000d03
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\oal\sr\oal_sr.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SmartReflex_InitializeChannel| PROC

; 36   : {

  00000		 |$LN5@SmartRefle|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M46794|

; 37   :     g_pSr[channel] = pSr;

  0000c	e59d1008	 ldr         r1, [sp, #8]
  00010	e3a03004	 mov         r3, #4
  00014	e0020391	 mul         r2, r1, r3
  00018	e59f3010	 ldr         r3, [pc, #0x10]
  0001c	e0832002	 add         r2, r3, r2
  00020	e59d300c	 ldr         r3, [sp, #0xC]
  00024	e5823000	 str         r3, [r2]

; 38   : }

  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$LN6@SmartRefle|
  00030		 |$LN7@SmartRefle|
  00030	00000000	 DCD         |g_pSr|
  00034		 |$M46795|

			 ENDP  ; |SmartReflex_InitializeChannel|


  00008			 AREA	 |.pdata|, PDATA
|$T46804| DCD	|$LN5@SmartRefle@2|
	DCD	0x40002204
; Function compile flags: /Odtp

  00034			 AREA	 |.text|, CODE, ARM

  00034		 |SmartReflex_SetAccumulationSize| PROC

; 46   : {

  00034		 |$LN5@SmartRefle@2|
  00034	e1a0c00d	 mov         r12, sp
  00038	e92d0003	 stmdb       sp!, {r0, r1}
  0003c	e92d5000	 stmdb       sp!, {r12, lr}
  00040	e24dd008	 sub         sp, sp, #8
  00044		 |$M46801|

; 47   :     UINT                val;
; 48   :     OMAP_SMARTREFLEX   *pSr = g_pSr[channel];

  00044	e59d1010	 ldr         r1, [sp, #0x10]
  00048	e3a03004	 mov         r3, #4
  0004c	e0020391	 mul         r2, r1, r3
  00050	e59f3060	 ldr         r3, [pc, #0x60]
  00054	e0833002	 add         r3, r3, r2
  00058	e5933000	 ldr         r3, [r3]
  0005c	e58d3000	 str         r3, [sp]

; 49   : 
; 50   :     val = INREG32(&pSr->sr_regs.omap_35xx.SRCONFIG);

  00060	e59d3000	 ldr         r3, [sp]
  00064	e5933000	 ldr         r3, [r3]
  00068	e58d3004	 str         r3, [sp, #4]

; 51   :     val &= ~(SRCONFIG_ACCUMDATA_MASK);

  0006c	e59d2004	 ldr         r2, [sp, #4]
  00070	e3e034ff	 mvn         r3, #0xFF, 8
  00074	e2233503	 eor         r3, r3, #3, 10
  00078	e0023003	 and         r3, r2, r3
  0007c	e58d3004	 str         r3, [sp, #4]

; 52   :     val |= ((accumData << SRCONFIG_ACCUMDATA_SHIFT) & SRCONFIG_ACCUMDATA_MASK);

  00080	e59d3014	 ldr         r3, [sp, #0x14]
  00084	e1a02b03	 mov         r2, r3, lsl #22
  00088	e3a034ff	 mov         r3, #0xFF, 8
  0008c	e3833503	 orr         r3, r3, #3, 10
  00090	e0022003	 and         r2, r2, r3
  00094	e59d3004	 ldr         r3, [sp, #4]
  00098	e1833002	 orr         r3, r3, r2
  0009c	e58d3004	 str         r3, [sp, #4]

; 53   :     OUTREG32(&pSr->sr_regs.omap_35xx.SRCONFIG, val);

  000a0	e59d2004	 ldr         r2, [sp, #4]
  000a4	e59d3000	 ldr         r3, [sp]
  000a8	e5832000	 str         r2, [r3]

; 54   : }

  000ac	e28dd008	 add         sp, sp, #8
  000b0	e89d6000	 ldmia       sp, {sp, lr}
  000b4	e12fff1e	 bx          lr
  000b8		 |$LN6@SmartRefle@2|
  000b8		 |$LN7@SmartRefle@2|
  000b8	00000000	 DCD         |g_pSr|
  000bc		 |$M46802|

			 ENDP  ; |SmartReflex_SetAccumulationSize|


  00010			 AREA	 |.pdata|, PDATA
|$T46811| DCD	|$LN5@SmartRefle@3|
	DCD	0x40002504
; Function compile flags: /Odtp

  000bc			 AREA	 |.text|, CODE, ARM

  000bc		 |SmartReflex_SetSensorMode_v1| PROC

; 63   : {

  000bc		 |$LN5@SmartRefle@3|
  000bc	e1a0c00d	 mov         r12, sp
  000c0	e92d0007	 stmdb       sp!, {r0 - r2}
  000c4	e92d5000	 stmdb       sp!, {r12, lr}
  000c8	e24dd008	 sub         sp, sp, #8
  000cc		 |$M46808|

; 64   :     UINT                val;
; 65   :     OMAP_SMARTREFLEX   *pSr = g_pSr[channel];

  000cc	e59d1010	 ldr         r1, [sp, #0x10]
  000d0	e3a03004	 mov         r3, #4
  000d4	e0020391	 mul         r2, r1, r3
  000d8	e59f306c	 ldr         r3, [pc, #0x6C]
  000dc	e0833002	 add         r3, r3, r2
  000e0	e5933000	 ldr         r3, [r3]
  000e4	e58d3000	 str         r3, [sp]

; 66   : 
; 67   :     UNREFERENCED_PARAMETER(senPMode);
; 68   : 
; 69   :     val = INREG32(&pSr->sr_regs.omap_35xx.SRCONFIG);

  000e8	e59d3000	 ldr         r3, [sp]
  000ec	e5933000	 ldr         r3, [r3]
  000f0	e58d3004	 str         r3, [sp, #4]

; 70   :     val &= ~(SRCONFIG_SENPENABLE_MASK | SRCONFIG_SENNENABLE_MASK);

  000f4	e59d2004	 ldr         r2, [sp, #4]
  000f8	e3e03078	 mvn         r3, #0x78
  000fc	e0023003	 and         r3, r2, r3
  00100	e58d3004	 str         r3, [sp, #4]

; 71   :     val |= ((senNMode << SRCONFIG_SENNENABLE_SHIFT) & SRCONFIG_SENNENABLE_MASK);

  00104	e59d3014	 ldr         r3, [sp, #0x14]
  00108	e1a03283	 mov         r3, r3, lsl #5
  0010c	e2032060	 and         r2, r3, #0x60
  00110	e59d3004	 ldr         r3, [sp, #4]
  00114	e1833002	 orr         r3, r3, r2
  00118	e58d3004	 str         r3, [sp, #4]

; 72   :     val |= ((senPMode << SRCONFIG_SENPENABLE_SHIFT) & SRCONFIG_SENPENABLE_MASK);

  0011c	e59d3018	 ldr         r3, [sp, #0x18]
  00120	e1a03183	 mov         r3, r3, lsl #3
  00124	e2032018	 and         r2, r3, #0x18
  00128	e59d3004	 ldr         r3, [sp, #4]
  0012c	e1833002	 orr         r3, r3, r2
  00130	e58d3004	 str         r3, [sp, #4]

; 73   :     OUTREG32(&pSr->sr_regs.omap_35xx.SRCONFIG, val);

  00134	e59d2004	 ldr         r2, [sp, #4]
  00138	e59d3000	 ldr         r3, [sp]
  0013c	e5832000	 str         r2, [r3]

; 74   : }

  00140	e28dd008	 add         sp, sp, #8
  00144	e89d6000	 ldmia       sp, {sp, lr}
  00148	e12fff1e	 bx          lr
  0014c		 |$LN6@SmartRefle@3|
  0014c		 |$LN7@SmartRefle@3|
  0014c	00000000	 DCD         |g_pSr|
  00150		 |$M46809|

			 ENDP  ; |SmartReflex_SetSensorMode_v1|


  00018			 AREA	 |.pdata|, PDATA
|$T46818| DCD	|$LN5@SmartRefle@4|
	DCD	0x40002404
; Function compile flags: /Odtp

  00150			 AREA	 |.text|, CODE, ARM

  00150		 |SmartReflex_SetSensorMode_v2| PROC

; 83   : {

  00150		 |$LN5@SmartRefle@4|
  00150	e1a0c00d	 mov         r12, sp
  00154	e92d0007	 stmdb       sp!, {r0 - r2}
  00158	e92d5000	 stmdb       sp!, {r12, lr}
  0015c	e24dd008	 sub         sp, sp, #8
  00160		 |$M46815|

; 84   :     UINT                val;
; 85   :     OMAP_SMARTREFLEX   *pSr = g_pSr[channel];

  00160	e59d1010	 ldr         r1, [sp, #0x10]
  00164	e3a03004	 mov         r3, #4
  00168	e0020391	 mul         r2, r1, r3
  0016c	e59f3068	 ldr         r3, [pc, #0x68]
  00170	e0833002	 add         r3, r3, r2
  00174	e5933000	 ldr         r3, [r3]
  00178	e58d3000	 str         r3, [sp]

; 86   : 
; 87   :     val = INREG32(&pSr->sr_regs.omap_37xx.SRCONFIG);

  0017c	e59d3000	 ldr         r3, [sp]
  00180	e5933000	 ldr         r3, [r3]
  00184	e58d3004	 str         r3, [sp, #4]

; 88   : 	
; 89   :     val &= ~(SRCONFIG_SENPENABLE_MASK_37XX | SRCONFIG_SENNENABLE_MASK_37XX);

  00188	e59d2004	 ldr         r2, [sp, #4]
  0018c	e3e03003	 mvn         r3, #3
  00190	e0023003	 and         r3, r2, r3
  00194	e58d3004	 str         r3, [sp, #4]

; 90   :     val |= ((senNMode << SRCONFIG_SENNENABLE_SHIFT_37XX) & SRCONFIG_SENNENABLE_MASK_37XX);

  00198	e59d3014	 ldr         r3, [sp, #0x14]
  0019c	e1a03083	 mov         r3, r3, lsl #1
  001a0	e2032002	 and         r2, r3, #2
  001a4	e59d3004	 ldr         r3, [sp, #4]
  001a8	e1833002	 orr         r3, r3, r2
  001ac	e58d3004	 str         r3, [sp, #4]

; 91   :     val |= ((senPMode << SRCONFIG_SENPENABLE_SHIFT_37XX) & SRCONFIG_SENPENABLE_MASK_37XX);

  001b0	e59d3018	 ldr         r3, [sp, #0x18]
  001b4	e2032001	 and         r2, r3, #1
  001b8	e59d3004	 ldr         r3, [sp, #4]
  001bc	e1833002	 orr         r3, r3, r2
  001c0	e58d3004	 str         r3, [sp, #4]

; 92   :     OUTREG32(&pSr->sr_regs.omap_37xx.SRCONFIG, val);

  001c4	e59d2004	 ldr         r2, [sp, #4]
  001c8	e59d3000	 ldr         r3, [sp]
  001cc	e5832000	 str         r2, [r3]

; 93   : }

  001d0	e28dd008	 add         sp, sp, #8
  001d4	e89d6000	 ldmia       sp, {sp, lr}
  001d8	e12fff1e	 bx          lr
  001dc		 |$LN6@SmartRefle@4|
  001dc		 |$LN7@SmartRefle@4|
  001dc	00000000	 DCD         |g_pSr|
  001e0		 |$M46816|

			 ENDP  ; |SmartReflex_SetSensorMode_v2|


  00020			 AREA	 |.pdata|, PDATA
|$T46825| DCD	|$LN7@SmartRefle@5|
	DCD	0x40002404
; Function compile flags: /Odtp

  001e0			 AREA	 |.text|, CODE, ARM

  001e0		 |SmartReflex_EnableInterrupts_v1| PROC

; 102  : {

  001e0		 |$LN7@SmartRefle@5|
  001e0	e1a0c00d	 mov         r12, sp
  001e4	e92d0007	 stmdb       sp!, {r0 - r2}
  001e8	e92d5000	 stmdb       sp!, {r12, lr}
  001ec	e24dd004	 sub         sp, sp, #4
  001f0		 |$M46822|

; 103  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  001f0	e59d100c	 ldr         r1, [sp, #0xC]
  001f4	e3a03004	 mov         r3, #4
  001f8	e0020391	 mul         r2, r1, r3
  001fc	e59f3068	 ldr         r3, [pc, #0x68]
  00200	e0833002	 add         r3, r3, r2
  00204	e5933000	 ldr         r3, [r3]
  00208	e58d3000	 str         r3, [sp]

; 104  : 
; 105  :     if (bEnable != FALSE)

  0020c	e59d3014	 ldr         r3, [sp, #0x14]
  00210	e3530000	 cmp         r3, #0
  00214	0a000008	 beq         |$LN2@SmartRefle@5|

; 106  :         {
; 107  :         SETREG32(&pSr->sr_regs.omap_35xx.ERRCONFIG, mask);

  00218	e59d3000	 ldr         r3, [sp]
  0021c	e2833024	 add         r3, r3, #0x24
  00220	e5932000	 ldr         r2, [r3]
  00224	e59d3010	 ldr         r3, [sp, #0x10]
  00228	e1822003	 orr         r2, r2, r3
  0022c	e59d3000	 ldr         r3, [sp]
  00230	e2833024	 add         r3, r3, #0x24
  00234	e5832000	 str         r2, [r3]

; 108  :         }
; 109  :     else

  00238	ea000008	 b           |$LN1@SmartRefle@5|
  0023c		 |$LN2@SmartRefle@5|

; 110  :         {
; 111  :         CLRREG32(&pSr->sr_regs.omap_35xx.ERRCONFIG, mask);

  0023c	e59d3000	 ldr         r3, [sp]
  00240	e2831024	 add         r1, r3, #0x24
  00244	e59d3010	 ldr         r3, [sp, #0x10]
  00248	e1e02003	 mvn         r2, r3
  0024c	e5913000	 ldr         r3, [r1]
  00250	e0032002	 and         r2, r3, r2
  00254	e59d3000	 ldr         r3, [sp]
  00258	e2833024	 add         r3, r3, #0x24
  0025c	e5832000	 str         r2, [r3]
  00260		 |$LN1@SmartRefle@5|

; 112  :         }
; 113  : }

  00260	e28dd004	 add         sp, sp, #4
  00264	e89d6000	 ldmia       sp, {sp, lr}
  00268	e12fff1e	 bx          lr
  0026c		 |$LN8@SmartRefle@5|
  0026c		 |$LN9@SmartRefle@5|
  0026c	00000000	 DCD         |g_pSr|
  00270		 |$M46823|

			 ENDP  ; |SmartReflex_EnableInterrupts_v1|


  00028			 AREA	 |.pdata|, PDATA
|$T46833| DCD	|$LN20@SmartRefle@6|
	DCD	0x40006504
; Function compile flags: /Odtp

  00270			 AREA	 |.text|, CODE, ARM

  00270		 |SmartReflex_EnableInterrupts_v2| PROC

; 122  : {

  00270		 |$LN20@SmartRefle@6|
  00270	e1a0c00d	 mov         r12, sp
  00274	e92d0007	 stmdb       sp!, {r0 - r2}
  00278	e92d5000	 stmdb       sp!, {r12, lr}
  0027c	e24dd010	 sub         sp, sp, #0x10
  00280		 |$M46830|

; 123  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00280	e59d1018	 ldr         r1, [sp, #0x18]
  00284	e3a03004	 mov         r3, #4
  00288	e0020391	 mul         r2, r1, r3
  0028c	e59f316c	 ldr         r3, [pc, #0x16C]
  00290	e0833002	 add         r3, r3, r2
  00294	e5933000	 ldr         r3, [r3]
  00298	e58d3008	 str         r3, [sp, #8]

; 124  :     UINT32 *pReg, new_mask;
; 125  : 
; 126  :     if(mask & ERRCONFIG_VP_BOUNDINT_EN)

  0029c	e59d301c	 ldr         r3, [sp, #0x1C]
  002a0	e3130102	 tst         r3, #2, 2
  002a4	0a000016	 beq         |$LN14@SmartRefle@6|

; 127  :     {
; 128  :         pReg = (UINT32 *)&pSr->sr_regs.omap_37xx.ERRCONFIG;

  002a8	e59d3008	 ldr         r3, [sp, #8]
  002ac	e2833038	 add         r3, r3, #0x38
  002b0	e58d3004	 str         r3, [sp, #4]

; 129  :         new_mask = ERRCONFIG_VP_BOUNDINT_EN_37XX;

  002b4	e3a03501	 mov         r3, #1, 10
  002b8	e58d3000	 str         r3, [sp]

; 130  : 	 if (bEnable != FALSE)

  002bc	e59d3020	 ldr         r3, [sp, #0x20]
  002c0	e3530000	 cmp         r3, #0
  002c4	0a000006	 beq         |$LN13@SmartRefle@6|

; 131  : 	 {
; 132  : 	    SETREG32(pReg, new_mask);

  002c8	e59d3004	 ldr         r3, [sp, #4]
  002cc	e5932000	 ldr         r2, [r3]
  002d0	e59d3000	 ldr         r3, [sp]
  002d4	e1822003	 orr         r2, r2, r3
  002d8	e59d3004	 ldr         r3, [sp, #4]
  002dc	e5832000	 str         r2, [r3]

; 133  : 	 }
; 134  : 	 else

  002e0	ea000006	 b           |$LN12@SmartRefle@6|
  002e4		 |$LN13@SmartRefle@6|

; 135  : 	 {
; 136  : 	    CLRREG32(pReg, new_mask);

  002e4	e59d3000	 ldr         r3, [sp]
  002e8	e1e02003	 mvn         r2, r3
  002ec	e59d3004	 ldr         r3, [sp, #4]
  002f0	e5933000	 ldr         r3, [r3]
  002f4	e0032002	 and         r2, r3, r2
  002f8	e59d3004	 ldr         r3, [sp, #4]
  002fc	e5832000	 str         r2, [r3]
  00300		 |$LN12@SmartRefle@6|

; 137  : 	 }
; 138  :     }
; 139  :     else

  00300	ea00003b	 b           |$LN11@SmartRefle@6|
  00304		 |$LN14@SmartRefle@6|

; 140  :     {
; 141  :         pReg = 	(UINT32 *)&pSr->sr_regs.omap_37xx.IRQENABLE_SET;

  00304	e59d3008	 ldr         r3, [sp, #8]
  00308	e283302c	 add         r3, r3, #0x2C
  0030c	e58d3004	 str         r3, [sp, #4]

; 142  :         switch (mask)

  00310	e59d301c	 ldr         r3, [sp, #0x1C]
  00314	e58d300c	 str         r3, [sp, #0xC]
  00318	e59d300c	 ldr         r3, [sp, #0xC]
  0031c	e3530302	 cmp         r3, #2, 6
  00320	8a000009	 bhi         |$LN17@SmartRefle@6|
  00324	e59d300c	 ldr         r3, [sp, #0xC]
  00328	e3530302	 cmp         r3, #2, 6
  0032c	0a000015	 beq         |$LN6@SmartRefle@6|
  00330	e59d300c	 ldr         r3, [sp, #0xC]
  00334	e3530502	 cmp         r3, #2, 10
  00338	0a00000c	 beq         |$LN8@SmartRefle@6|
  0033c	e59d300c	 ldr         r3, [sp, #0xC]
  00340	e3530402	 cmp         r3, #2, 8
  00344	0a00000c	 beq         |$LN7@SmartRefle@6|
  00348	ea000016	 b           |$LN3@SmartRefle@6|
  0034c		 |$LN17@SmartRefle@6|
  0034c	e59d300c	 ldr         r3, [sp, #0xC]
  00350	e3530202	 cmp         r3, #2, 4
  00354	0a00000e	 beq         |$LN5@SmartRefle@6|
  00358	e59d200c	 ldr         r2, [sp, #0xC]
  0035c	e3a03455	 mov         r3, #0x55, 8
  00360	e3833501	 orr         r3, r3, #1, 10
  00364	e1520003	 cmp         r2, r3
  00368	0a00000c	 beq         |$LN4@SmartRefle@6|
  0036c	ea00000d	 b           |$LN3@SmartRefle@6|
  00370		 |$LN8@SmartRefle@6|

; 143  :         {
; 144  :             case ERRCONFIG_MCU_DISACKINT_EN:
; 145  :                 mask = IRQENABLE_SET_MCUDISABLEACKINTSTATENA;

  00370	e3a03001	 mov         r3, #1
  00374	e58d301c	 str         r3, [sp, #0x1C]

; 146  :                 break;

  00378	ea00000c	 b           |$LN9@SmartRefle@6|
  0037c		 |$LN7@SmartRefle@6|

; 147  :             case ERRCONFIG_MCU_BOUNDINT_EN:
; 148  :                 mask = IRQENABLE_SET_MCUBOUNDSINTENA;

  0037c	e3a03002	 mov         r3, #2
  00380	e58d301c	 str         r3, [sp, #0x1C]

; 149  :                 break;

  00384	ea000009	 b           |$LN9@SmartRefle@6|
  00388		 |$LN6@SmartRefle@6|

; 150  :             case ERRCONFIG_MCU_VALIDINT_EN:
; 151  :                 mask = IRQENABLE_SET_MCUVALIDINTENA;

  00388	e3a03004	 mov         r3, #4
  0038c	e58d301c	 str         r3, [sp, #0x1C]

; 152  :                 break;

  00390	ea000006	 b           |$LN9@SmartRefle@6|
  00394		 |$LN5@SmartRefle@6|

; 153  :             case ERRCONFIG_MCU_ACCUMINT_EN:
; 154  :                 mask = IRQENABLE_SET_MCUACCUMINTENA;

  00394	e3a03008	 mov         r3, #8
  00398	e58d301c	 str         r3, [sp, #0x1C]

; 155  :                 break;

  0039c	ea000003	 b           |$LN9@SmartRefle@6|
  003a0		 |$LN4@SmartRefle@6|

; 156  :             case ERRCONFIG_INTR_SR_MASK:
; 157  : 		  mask = IRQENABLE_MASK;

  003a0	e3a0300f	 mov         r3, #0xF
  003a4	e58d301c	 str         r3, [sp, #0x1C]
  003a8		 |$LN3@SmartRefle@6|

; 158  : 	     default:
; 159  :                 mask = 0;

  003a8	e3a03000	 mov         r3, #0
  003ac	e58d301c	 str         r3, [sp, #0x1C]
  003b0		 |$LN9@SmartRefle@6|

; 160  :                 break;
; 161  :         }
; 162  : 	 if (bEnable != FALSE)

  003b0	e59d3020	 ldr         r3, [sp, #0x20]
  003b4	e3530000	 cmp         r3, #0
  003b8	0a000006	 beq         |$LN2@SmartRefle@6|

; 163  : 	 {
; 164  : 	    SETREG32(pReg, mask);

  003bc	e59d3004	 ldr         r3, [sp, #4]
  003c0	e5932000	 ldr         r2, [r3]
  003c4	e59d301c	 ldr         r3, [sp, #0x1C]
  003c8	e1822003	 orr         r2, r2, r3
  003cc	e59d3004	 ldr         r3, [sp, #4]
  003d0	e5832000	 str         r2, [r3]

; 165  : 	 }
; 166  : 	 else

  003d4	ea000006	 b           |$LN1@SmartRefle@6|
  003d8		 |$LN2@SmartRefle@6|

; 167  : 	 {
; 168  : 	    CLRREG32(pReg, mask);

  003d8	e59d301c	 ldr         r3, [sp, #0x1C]
  003dc	e1e02003	 mvn         r2, r3
  003e0	e59d3004	 ldr         r3, [sp, #4]
  003e4	e5933000	 ldr         r3, [r3]
  003e8	e0032002	 and         r2, r3, r2
  003ec	e59d3004	 ldr         r3, [sp, #4]
  003f0	e5832000	 str         r2, [r3]
  003f4		 |$LN1@SmartRefle@6|
  003f4		 |$LN11@SmartRefle@6|

; 169  : 	 }
; 170  : 		
; 171  :     }
; 172  : 
; 173  : }

  003f4	e28dd010	 add         sp, sp, #0x10
  003f8	e89d6000	 ldmia       sp, {sp, lr}
  003fc	e12fff1e	 bx          lr
  00400		 |$LN21@SmartRefle@6|
  00400		 |$LN22@SmartRefle@6|
  00400	00000000	 DCD         |g_pSr|
  00404		 |$M46831|

			 ENDP  ; |SmartReflex_EnableInterrupts_v2|


  00030			 AREA	 |.pdata|, PDATA
|$T46840| DCD	|$LN7@SmartRefle@7|
	DCD	0x40001e04
; Function compile flags: /Odtp

  00404			 AREA	 |.text|, CODE, ARM

  00404		 |SmartReflex_EnableErrorGeneratorBlock| PROC

; 181  : {

  00404		 |$LN7@SmartRefle@7|
  00404	e1a0c00d	 mov         r12, sp
  00408	e92d0003	 stmdb       sp!, {r0, r1}
  0040c	e92d5000	 stmdb       sp!, {r12, lr}
  00410	e24dd004	 sub         sp, sp, #4
  00414		 |$M46837|

; 182  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00414	e59d100c	 ldr         r1, [sp, #0xC]
  00418	e3a03004	 mov         r3, #4
  0041c	e0020391	 mul         r2, r1, r3
  00420	e59f3050	 ldr         r3, [pc, #0x50]
  00424	e0833002	 add         r3, r3, r2
  00428	e5933000	 ldr         r3, [r3]
  0042c	e58d3000	 str         r3, [sp]

; 183  :     
; 184  :     if (bEnable != FALSE)

  00430	e59d3010	 ldr         r3, [sp, #0x10]
  00434	e3530000	 cmp         r3, #0
  00438	0a000005	 beq         |$LN2@SmartRefle@7|

; 185  :         {
; 186  :         SETREG32(&pSr->sr_regs.omap_35xx.SRCONFIG, SRCONFIG_ERRORGEN_EN);

  0043c	e59d3000	 ldr         r3, [sp]
  00440	e5933000	 ldr         r3, [r3]
  00444	e3832c02	 orr         r2, r3, #2, 24
  00448	e59d3000	 ldr         r3, [sp]
  0044c	e5832000	 str         r2, [r3]

; 187  :         }
; 188  :     else

  00450	ea000005	 b           |$LN1@SmartRefle@7|
  00454		 |$LN2@SmartRefle@7|

; 189  :         {
; 190  :         CLRREG32(&pSr->sr_regs.omap_35xx.SRCONFIG, SRCONFIG_ERRORGEN_EN);

  00454	e59d3000	 ldr         r3, [sp]
  00458	e5932000	 ldr         r2, [r3]
  0045c	e3e03c02	 mvn         r3, #2, 24
  00460	e0022003	 and         r2, r2, r3
  00464	e59d3000	 ldr         r3, [sp]
  00468	e5832000	 str         r2, [r3]
  0046c		 |$LN1@SmartRefle@7|

; 191  :         }
; 192  : }

  0046c	e28dd004	 add         sp, sp, #4
  00470	e89d6000	 ldmia       sp, {sp, lr}
  00474	e12fff1e	 bx          lr
  00478		 |$LN8@SmartRefle@7|
  00478		 |$LN9@SmartRefle@7|
  00478	00000000	 DCD         |g_pSr|
  0047c		 |$M46838|

			 ENDP  ; |SmartReflex_EnableErrorGeneratorBlock|


  00038			 AREA	 |.pdata|, PDATA
|$T46847| DCD	|$LN7@SmartRefle@8|
	DCD	0x40001e04
; Function compile flags: /Odtp

  0047c			 AREA	 |.text|, CODE, ARM

  0047c		 |SmartReflex_EnableMinMaxAvgBlock| PROC

; 200  : {

  0047c		 |$LN7@SmartRefle@8|
  0047c	e1a0c00d	 mov         r12, sp
  00480	e92d0003	 stmdb       sp!, {r0, r1}
  00484	e92d5000	 stmdb       sp!, {r12, lr}
  00488	e24dd004	 sub         sp, sp, #4
  0048c		 |$M46844|

; 201  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  0048c	e59d100c	 ldr         r1, [sp, #0xC]
  00490	e3a03004	 mov         r3, #4
  00494	e0020391	 mul         r2, r1, r3
  00498	e59f3050	 ldr         r3, [pc, #0x50]
  0049c	e0833002	 add         r3, r3, r2
  004a0	e5933000	 ldr         r3, [r3]
  004a4	e58d3000	 str         r3, [sp]

; 202  :     
; 203  :     if (bEnable != FALSE)

  004a8	e59d3010	 ldr         r3, [sp, #0x10]
  004ac	e3530000	 cmp         r3, #0
  004b0	0a000005	 beq         |$LN2@SmartRefle@8|

; 204  :         {
; 205  :         SETREG32(&pSr->sr_regs.omap_35xx.SRCONFIG, SRCONFIG_MINMAXAVG_EN);

  004b4	e59d3000	 ldr         r3, [sp]
  004b8	e5933000	 ldr         r3, [r3]
  004bc	e3832c01	 orr         r2, r3, #1, 24
  004c0	e59d3000	 ldr         r3, [sp]
  004c4	e5832000	 str         r2, [r3]

; 206  :         }
; 207  :     else

  004c8	ea000005	 b           |$LN1@SmartRefle@8|
  004cc		 |$LN2@SmartRefle@8|

; 208  :         {
; 209  :         CLRREG32(&pSr->sr_regs.omap_35xx.SRCONFIG, SRCONFIG_MINMAXAVG_EN);

  004cc	e59d3000	 ldr         r3, [sp]
  004d0	e5932000	 ldr         r2, [r3]
  004d4	e3e03c01	 mvn         r3, #1, 24
  004d8	e0022003	 and         r2, r2, r3
  004dc	e59d3000	 ldr         r3, [sp]
  004e0	e5832000	 str         r2, [r3]
  004e4		 |$LN1@SmartRefle@8|

; 210  :         }
; 211  : }

  004e4	e28dd004	 add         sp, sp, #4
  004e8	e89d6000	 ldmia       sp, {sp, lr}
  004ec	e12fff1e	 bx          lr
  004f0		 |$LN8@SmartRefle@8|
  004f0		 |$LN9@SmartRefle@8|
  004f0	00000000	 DCD         |g_pSr|
  004f4		 |$M46845|

			 ENDP  ; |SmartReflex_EnableMinMaxAvgBlock|


  00040			 AREA	 |.pdata|, PDATA
|$T46854| DCD	|$LN7@SmartRefle@9|
	DCD	0x40001e04
; Function compile flags: /Odtp

  004f4			 AREA	 |.text|, CODE, ARM

  004f4		 |SmartReflex_EnableSensorBlock| PROC

; 219  : {

  004f4		 |$LN7@SmartRefle@9|
  004f4	e1a0c00d	 mov         r12, sp
  004f8	e92d0003	 stmdb       sp!, {r0, r1}
  004fc	e92d5000	 stmdb       sp!, {r12, lr}
  00500	e24dd004	 sub         sp, sp, #4
  00504		 |$M46851|

; 220  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00504	e59d100c	 ldr         r1, [sp, #0xC]
  00508	e3a03004	 mov         r3, #4
  0050c	e0020391	 mul         r2, r1, r3
  00510	e59f3050	 ldr         r3, [pc, #0x50]
  00514	e0833002	 add         r3, r3, r2
  00518	e5933000	 ldr         r3, [r3]
  0051c	e58d3000	 str         r3, [sp]

; 221  :     
; 222  :     if (bEnable != FALSE)

  00520	e59d3010	 ldr         r3, [sp, #0x10]
  00524	e3530000	 cmp         r3, #0
  00528	0a000005	 beq         |$LN2@SmartRefle@9|

; 223  :         {
; 224  :         SETREG32(&pSr->sr_regs.omap_35xx.SRCONFIG, SRCONFIG_SENENABLE);

  0052c	e59d3000	 ldr         r3, [sp]
  00530	e5933000	 ldr         r3, [r3]
  00534	e3832b01	 orr         r2, r3, #1, 22
  00538	e59d3000	 ldr         r3, [sp]
  0053c	e5832000	 str         r2, [r3]

; 225  :         }
; 226  :     else

  00540	ea000005	 b           |$LN1@SmartRefle@9|
  00544		 |$LN2@SmartRefle@9|

; 227  :         {
; 228  :         CLRREG32(&pSr->sr_regs.omap_35xx.SRCONFIG, SRCONFIG_SENENABLE);

  00544	e59d3000	 ldr         r3, [sp]
  00548	e5932000	 ldr         r2, [r3]
  0054c	e3e03b01	 mvn         r3, #1, 22
  00550	e0022003	 and         r2, r2, r3
  00554	e59d3000	 ldr         r3, [sp]
  00558	e5832000	 str         r2, [r3]
  0055c		 |$LN1@SmartRefle@9|

; 229  :         }
; 230  : }

  0055c	e28dd004	 add         sp, sp, #4
  00560	e89d6000	 ldmia       sp, {sp, lr}
  00564	e12fff1e	 bx          lr
  00568		 |$LN8@SmartRefle@9|
  00568		 |$LN9@SmartRefle@9|
  00568	00000000	 DCD         |g_pSr|
  0056c		 |$M46852|

			 ENDP  ; |SmartReflex_EnableSensorBlock|


  00048			 AREA	 |.pdata|, PDATA
|$T46861| DCD	|$LN7@SmartRefle@10|
	DCD	0x40001e04
; Function compile flags: /Odtp

  0056c			 AREA	 |.text|, CODE, ARM

  0056c		 |SmartReflex_Enable| PROC

; 238  : {

  0056c		 |$LN7@SmartRefle@10|
  0056c	e1a0c00d	 mov         r12, sp
  00570	e92d0003	 stmdb       sp!, {r0, r1}
  00574	e92d5000	 stmdb       sp!, {r12, lr}
  00578	e24dd004	 sub         sp, sp, #4
  0057c		 |$M46858|

; 239  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  0057c	e59d100c	 ldr         r1, [sp, #0xC]
  00580	e3a03004	 mov         r3, #4
  00584	e0020391	 mul         r2, r1, r3
  00588	e59f3050	 ldr         r3, [pc, #0x50]
  0058c	e0833002	 add         r3, r3, r2
  00590	e5933000	 ldr         r3, [r3]
  00594	e58d3000	 str         r3, [sp]

; 240  :     
; 241  :     if (bEnable != FALSE)

  00598	e59d3010	 ldr         r3, [sp, #0x10]
  0059c	e3530000	 cmp         r3, #0
  005a0	0a000005	 beq         |$LN2@SmartRefle@10|

; 242  :         {
; 243  :         SETREG32(&pSr->sr_regs.omap_35xx.SRCONFIG, SRCONFIG_SRENABLE);

  005a4	e59d3000	 ldr         r3, [sp]
  005a8	e5933000	 ldr         r3, [r3]
  005ac	e3832b02	 orr         r2, r3, #2, 22
  005b0	e59d3000	 ldr         r3, [sp]
  005b4	e5832000	 str         r2, [r3]

; 244  :         }
; 245  :     else

  005b8	ea000005	 b           |$LN1@SmartRefle@10|
  005bc		 |$LN2@SmartRefle@10|

; 246  :         {
; 247  :         CLRREG32(&pSr->sr_regs.omap_35xx.SRCONFIG, SRCONFIG_SRENABLE);

  005bc	e59d3000	 ldr         r3, [sp]
  005c0	e5932000	 ldr         r2, [r3]
  005c4	e3e03b02	 mvn         r3, #2, 22
  005c8	e0022003	 and         r2, r2, r3
  005cc	e59d3000	 ldr         r3, [sp]
  005d0	e5832000	 str         r2, [r3]
  005d4		 |$LN1@SmartRefle@10|

; 248  :         }
; 249  : }

  005d4	e28dd004	 add         sp, sp, #4
  005d8	e89d6000	 ldmia       sp, {sp, lr}
  005dc	e12fff1e	 bx          lr
  005e0		 |$LN8@SmartRefle@10|
  005e0		 |$LN9@SmartRefle@10|
  005e0	00000000	 DCD         |g_pSr|
  005e4		 |$M46859|

			 ENDP  ; |SmartReflex_Enable|


  00050			 AREA	 |.pdata|, PDATA
|$T46868| DCD	|$LN5@SmartRefle@11|
	DCD	0x40002104
; Function compile flags: /Odtp

  005e4			 AREA	 |.text|, CODE, ARM

  005e4		 |SmartReflex_SetIdleMode_v1| PROC

; 257  : {

  005e4		 |$LN5@SmartRefle@11|
  005e4	e1a0c00d	 mov         r12, sp
  005e8	e92d0003	 stmdb       sp!, {r0, r1}
  005ec	e92d5000	 stmdb       sp!, {r12, lr}
  005f0	e24dd008	 sub         sp, sp, #8
  005f4		 |$M46865|

; 258  :     UINT              val;
; 259  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  005f4	e59d1010	 ldr         r1, [sp, #0x10]
  005f8	e3a03004	 mov         r3, #4
  005fc	e0020391	 mul         r2, r1, r3
  00600	e59f305c	 ldr         r3, [pc, #0x5C]
  00604	e0833002	 add         r3, r3, r2
  00608	e5933000	 ldr         r3, [r3]
  0060c	e58d3000	 str         r3, [sp]

; 260  : 
; 261  :     val = INREG32(&pSr->sr_regs.omap_35xx.ERRCONFIG);

  00610	e59d3000	 ldr         r3, [sp]
  00614	e2833024	 add         r3, r3, #0x24
  00618	e5933000	 ldr         r3, [r3]
  0061c	e58d3004	 str         r3, [sp, #4]

; 262  :     val &= ~ERRCONFIG_CLKACTIVITY_MASK;

  00620	e59d2004	 ldr         r2, [sp, #4]
  00624	e3e03603	 mvn         r3, #3, 12
  00628	e0023003	 and         r3, r2, r3
  0062c	e58d3004	 str         r3, [sp, #4]

; 263  :     val |= ((idleMode << ERRCONFIG_CLKACTIVITY_SHIFT) & ERRCONFIG_CLKACTIVITY_MASK);

  00630	e59d3014	 ldr         r3, [sp, #0x14]
  00634	e1a03a03	 mov         r3, r3, lsl #20
  00638	e2032603	 and         r2, r3, #3, 12
  0063c	e59d3004	 ldr         r3, [sp, #4]
  00640	e1833002	 orr         r3, r3, r2
  00644	e58d3004	 str         r3, [sp, #4]

; 264  :     OUTREG32(&pSr->sr_regs.omap_35xx.ERRCONFIG, val);

  00648	e59d3000	 ldr         r3, [sp]
  0064c	e2832024	 add         r2, r3, #0x24
  00650	e59d3004	 ldr         r3, [sp, #4]
  00654	e5823000	 str         r3, [r2]

; 265  : }

  00658	e28dd008	 add         sp, sp, #8
  0065c	e89d6000	 ldmia       sp, {sp, lr}
  00660	e12fff1e	 bx          lr
  00664		 |$LN6@SmartRefle@11|
  00664		 |$LN7@SmartRefle@11|
  00664	00000000	 DCD         |g_pSr|
  00668		 |$M46866|

			 ENDP  ; |SmartReflex_SetIdleMode_v1|


  00058			 AREA	 |.pdata|, PDATA
|$T46875| DCD	|$LN5@SmartRefle@12|
	DCD	0x40002104
; Function compile flags: /Odtp

  00668			 AREA	 |.text|, CODE, ARM

  00668		 |SmartReflex_SetIdleMode_v2| PROC

; 272  : {

  00668		 |$LN5@SmartRefle@12|
  00668	e1a0c00d	 mov         r12, sp
  0066c	e92d0003	 stmdb       sp!, {r0, r1}
  00670	e92d5000	 stmdb       sp!, {r12, lr}
  00674	e24dd008	 sub         sp, sp, #8
  00678		 |$M46872|

; 273  :     UINT              val;
; 274  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00678	e59d1010	 ldr         r1, [sp, #0x10]
  0067c	e3a03004	 mov         r3, #4
  00680	e0020391	 mul         r2, r1, r3
  00684	e59f305c	 ldr         r3, [pc, #0x5C]
  00688	e0833002	 add         r3, r3, r2
  0068c	e5933000	 ldr         r3, [r3]
  00690	e58d3000	 str         r3, [sp]

; 275  : 
; 276  :     val = INREG32(&pSr->sr_regs.omap_37xx.ERRCONFIG);

  00694	e59d3000	 ldr         r3, [sp]
  00698	e2833038	 add         r3, r3, #0x38
  0069c	e5933000	 ldr         r3, [r3]
  006a0	e58d3004	 str         r3, [sp, #4]

; 277  :     val &= ~ERRCONFIG_CLKACTIVITY_MASK_37XX;

  006a4	e59d2004	 ldr         r2, [sp, #4]
  006a8	e3e03403	 mvn         r3, #3, 8
  006ac	e0023003	 and         r3, r2, r3
  006b0	e58d3004	 str         r3, [sp, #4]

; 278  :     val |= ((idleMode << ERRCONFIG_CLKACTIVITY_SHIFT_37XX) & ERRCONFIG_CLKACTIVITY_MASK_37XX);

  006b4	e59d3014	 ldr         r3, [sp, #0x14]
  006b8	e1a03c03	 mov         r3, r3, lsl #24
  006bc	e2032403	 and         r2, r3, #3, 8
  006c0	e59d3004	 ldr         r3, [sp, #4]
  006c4	e1833002	 orr         r3, r3, r2
  006c8	e58d3004	 str         r3, [sp, #4]

; 279  : 	
; 280  :     OUTREG32(&pSr->sr_regs.omap_37xx.ERRCONFIG, val);

  006cc	e59d3000	 ldr         r3, [sp]
  006d0	e2832038	 add         r2, r3, #0x38
  006d4	e59d3004	 ldr         r3, [sp, #4]
  006d8	e5823000	 str         r3, [r2]

; 281  : }

  006dc	e28dd008	 add         sp, sp, #8
  006e0	e89d6000	 ldmia       sp, {sp, lr}
  006e4	e12fff1e	 bx          lr
  006e8		 |$LN6@SmartRefle@12|
  006e8		 |$LN7@SmartRefle@12|
  006e8	00000000	 DCD         |g_pSr|
  006ec		 |$M46873|

			 ENDP  ; |SmartReflex_SetIdleMode_v2|


  00060			 AREA	 |.pdata|, PDATA
|$T46882| DCD	|$LN5@SmartRefle@13|
	DCD	0x40004f04
; Function compile flags: /Odtp

  006ec			 AREA	 |.text|, CODE, ARM

  006ec		 |SmartReflex_SetSensorReferenceData| PROC

; 289  : {

  006ec		 |$LN5@SmartRefle@13|
  006ec	e1a0c00d	 mov         r12, sp
  006f0	e92d0003	 stmdb       sp!, {r0, r1}
  006f4	e92d5000	 stmdb       sp!, {r12, lr}
  006f8	e24dd01c	 sub         sp, sp, #0x1C
  006fc		 |$M46879|

; 290  :     UINT              val;
; 291  :     UINT              srClkLengthT = pSensorData->srClkLengthT;

  006fc	e59d3028	 ldr         r3, [sp, #0x28]
  00700	e2833004	 add         r3, r3, #4
  00704	e5933000	 ldr         r3, [r3]
  00708	e58d3008	 str         r3, [sp, #8]

; 292  :     UINT              rnsenp = pSensorData->rnsenp;

  0070c	e59d3028	 ldr         r3, [sp, #0x28]
  00710	e2833008	 add         r3, r3, #8
  00714	e5933000	 ldr         r3, [r3]
  00718	e58d3014	 str         r3, [sp, #0x14]

; 293  :     UINT              rnsenn = pSensorData->rnsenn;

  0071c	e59d3028	 ldr         r3, [sp, #0x28]
  00720	e283300c	 add         r3, r3, #0xC
  00724	e5933000	 ldr         r3, [r3]
  00728	e58d3004	 str         r3, [sp, #4]

; 294  :     UINT              senpgain = pSensorData->senpgain;

  0072c	e59d3028	 ldr         r3, [sp, #0x28]
  00730	e2833010	 add         r3, r3, #0x10
  00734	e5933000	 ldr         r3, [r3]
  00738	e58d3010	 str         r3, [sp, #0x10]

; 295  :     UINT              senngain = pSensorData->senngain;

  0073c	e59d3028	 ldr         r3, [sp, #0x28]
  00740	e2833014	 add         r3, r3, #0x14
  00744	e5933000	 ldr         r3, [r3]
  00748	e58d3000	 str         r3, [sp]

; 296  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  0074c	e59d1024	 ldr         r1, [sp, #0x24]
  00750	e3a03004	 mov         r3, #4
  00754	e0020391	 mul         r2, r1, r3
  00758	e59f30c4	 ldr         r3, [pc, #0xC4]
  0075c	e0833002	 add         r3, r3, r2
  00760	e5933000	 ldr         r3, [r3]
  00764	e58d300c	 str         r3, [sp, #0xC]

; 297  : 
; 298  :     // update smartreflex clk sampling frequency
; 299  :     val = INREG32(&pSr->sr_regs.omap_35xx.SRCONFIG);

  00768	e59d300c	 ldr         r3, [sp, #0xC]
  0076c	e5933000	 ldr         r3, [r3]
  00770	e58d3018	 str         r3, [sp, #0x18]

; 300  :     val &= ~SRCONFIG_SRCLKLENGTH_MASK;

  00774	e59d2018	 ldr         r2, [sp, #0x18]
  00778	e3e039ff	 mvn         r3, #0xFF, 18
  0077c	e2233a03	 eor         r3, r3, #3, 20
  00780	e0023003	 and         r3, r2, r3
  00784	e58d3018	 str         r3, [sp, #0x18]

; 301  :     val |= ((srClkLengthT << SRCONFIG_SRCLKLENGTH_SHIFT) & SRCONFIG_SRCLKLENGTH_MASK);

  00788	e59d3008	 ldr         r3, [sp, #8]
  0078c	e1a02603	 mov         r2, r3, lsl #12
  00790	e3a039ff	 mov         r3, #0xFF, 18
  00794	e3833a03	 orr         r3, r3, #3, 20
  00798	e0022003	 and         r2, r2, r3
  0079c	e59d3018	 ldr         r3, [sp, #0x18]
  007a0	e1833002	 orr         r3, r3, r2
  007a4	e58d3018	 str         r3, [sp, #0x18]

; 302  :     OUTREG32(&pSr->sr_regs.omap_35xx.SRCONFIG , val);

  007a8	e59d2018	 ldr         r2, [sp, #0x18]
  007ac	e59d300c	 ldr         r3, [sp, #0xC]
  007b0	e5832000	 str         r2, [r3]

; 303  : 
; 304  :     // set scale value for SenN, SenP, SenNGain, SenPGain
; 305  :     val = ((rnsenn << NVALUERECIPROCAL_RNSENN_SHIFT) & NVALUERECIPROCAL_RNSENN_MASK);

  007b4	e59d3004	 ldr         r3, [sp, #4]
  007b8	e20330ff	 and         r3, r3, #0xFF
  007bc	e58d3018	 str         r3, [sp, #0x18]

; 306  :     val |= ((rnsenp << NVALUERECIPROCAL_RNSENP_SHIFT) & NVALUERECIPROCAL_RNSENP_MASK);

  007c0	e59d3014	 ldr         r3, [sp, #0x14]
  007c4	e1a03403	 mov         r3, r3, lsl #8
  007c8	e2032cff	 and         r2, r3, #0xFF, 24
  007cc	e59d3018	 ldr         r3, [sp, #0x18]
  007d0	e1833002	 orr         r3, r3, r2
  007d4	e58d3018	 str         r3, [sp, #0x18]

; 307  :     val |= ((senngain << NVALUERECIPROCAL_SENNGAIN_SHIFT) & NVALUERECIPROCAL_SENNGAIN_MASK);

  007d8	e59d3000	 ldr         r3, [sp]
  007dc	e1a03803	 mov         r3, r3, lsl #16
  007e0	e203280f	 and         r2, r3, #0xF, 16
  007e4	e59d3018	 ldr         r3, [sp, #0x18]
  007e8	e1833002	 orr         r3, r3, r2
  007ec	e58d3018	 str         r3, [sp, #0x18]

; 308  :     val |= ((senpgain << NVALUERECIPROCAL_SENPGAIN_SHIFT) & NVALUERECIPROCAL_SENPGAIN_MASK);

  007f0	e59d3010	 ldr         r3, [sp, #0x10]
  007f4	e1a03a03	 mov         r3, r3, lsl #20
  007f8	e203260f	 and         r2, r3, #0xF, 12
  007fc	e59d3018	 ldr         r3, [sp, #0x18]
  00800	e1833002	 orr         r3, r3, r2
  00804	e58d3018	 str         r3, [sp, #0x18]

; 309  :     OUTREG32(&pSr->sr_regs.omap_35xx.NVALUERECIPROCAL, val);

  00808	e59d300c	 ldr         r3, [sp, #0xC]
  0080c	e283201c	 add         r2, r3, #0x1C
  00810	e59d3018	 ldr         r3, [sp, #0x18]
  00814	e5823000	 str         r3, [r2]

; 310  : }

  00818	e28dd01c	 add         sp, sp, #0x1C
  0081c	e89d6000	 ldmia       sp, {sp, lr}
  00820	e12fff1e	 bx          lr
  00824		 |$LN6@SmartRefle@13|
  00824		 |$LN7@SmartRefle@13|
  00824	00000000	 DCD         |g_pSr|
  00828		 |$M46880|

			 ENDP  ; |SmartReflex_SetSensorReferenceData|


  00068			 AREA	 |.pdata|, PDATA
|$T46889| DCD	|$LN5@SmartRefle@14|
	DCD	0x40002d04
; Function compile flags: /Odtp

  00828			 AREA	 |.text|, CODE, ARM

  00828		 |SmartReflex_SetErrorControl_v1| PROC

; 320  : {

  00828		 |$LN5@SmartRefle@14|
  00828	e1a0c00d	 mov         r12, sp
  0082c	e92d000f	 stmdb       sp!, {r0 - r3}
  00830	e92d5000	 stmdb       sp!, {r12, lr}
  00834	e24dd008	 sub         sp, sp, #8
  00838		 |$M46886|

; 321  :     UINT              val;
; 322  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00838	e59d1010	 ldr         r1, [sp, #0x10]
  0083c	e3a03004	 mov         r3, #4
  00840	e0020391	 mul         r2, r1, r3
  00844	e59f308c	 ldr         r3, [pc, #0x8C]
  00848	e0833002	 add         r3, r3, r2
  0084c	e5933000	 ldr         r3, [r3]
  00850	e58d3000	 str         r3, [sp]

; 323  : 
; 324  :     val = INREG32(&pSr->sr_regs.omap_35xx.ERRCONFIG);

  00854	e59d3000	 ldr         r3, [sp]
  00858	e2833024	 add         r3, r3, #0x24
  0085c	e5933000	 ldr         r3, [r3]
  00860	e58d3004	 str         r3, [sp, #4]

; 325  :     val &= ~(ERRCONFIG_ERRMAXLIMIT_MASK | ERRCONFIG_ERRMINLIMIT_MASK | ERRCONFIG_ERRWEIGHT_MASK);

  00864	e59d2004	 ldr         r2, [sp, #4]
  00868	e3a034ff	 mov         r3, #0xFF, 8
  0086c	e383373e	 orr         r3, r3, #0x3E, 14
  00870	e0023003	 and         r3, r2, r3
  00874	e58d3004	 str         r3, [sp, #4]

; 326  :     val |= ((errorWeight << ERRCONFIG_ERRWEIGHT_SHIFT) & ERRCONFIG_ERRWEIGHT_MASK);

  00878	e59d3014	 ldr         r3, [sp, #0x14]
  0087c	e1a03803	 mov         r3, r3, lsl #16
  00880	e2032807	 and         r2, r3, #7, 16
  00884	e59d3004	 ldr         r3, [sp, #4]
  00888	e1833002	 orr         r3, r3, r2
  0088c	e58d3004	 str         r3, [sp, #4]

; 327  :     val |= ((errorMax << ERRCONFIG_ERRMAXLIMIT_SHIFT) & ERRCONFIG_ERRMAXLIMIT_MASK);

  00890	e59d3018	 ldr         r3, [sp, #0x18]
  00894	e1a03403	 mov         r3, r3, lsl #8
  00898	e2032cff	 and         r2, r3, #0xFF, 24
  0089c	e59d3004	 ldr         r3, [sp, #4]
  008a0	e1833002	 orr         r3, r3, r2
  008a4	e58d3004	 str         r3, [sp, #4]

; 328  :     val |= ((errorMin << ERRCONFIG_ERRMINLIMIT_SHIFT) & ERRCONFIG_ERRMINLIMIT_MASK);

  008a8	e59d301c	 ldr         r3, [sp, #0x1C]
  008ac	e20320ff	 and         r2, r3, #0xFF
  008b0	e59d3004	 ldr         r3, [sp, #4]
  008b4	e1833002	 orr         r3, r3, r2
  008b8	e58d3004	 str         r3, [sp, #4]

; 329  :     OUTREG32(&pSr->sr_regs.omap_35xx.ERRCONFIG, val);

  008bc	e59d3000	 ldr         r3, [sp]
  008c0	e2832024	 add         r2, r3, #0x24
  008c4	e59d3004	 ldr         r3, [sp, #4]
  008c8	e5823000	 str         r3, [r2]

; 330  : }

  008cc	e28dd008	 add         sp, sp, #8
  008d0	e89d6000	 ldmia       sp, {sp, lr}
  008d4	e12fff1e	 bx          lr
  008d8		 |$LN6@SmartRefle@14|
  008d8		 |$LN7@SmartRefle@14|
  008d8	00000000	 DCD         |g_pSr|
  008dc		 |$M46887|

			 ENDP  ; |SmartReflex_SetErrorControl_v1|


  00070			 AREA	 |.pdata|, PDATA
|$T46896| DCD	|$LN5@SmartRefle@15|
	DCD	0x40002d04
; Function compile flags: /Odtp

  008dc			 AREA	 |.text|, CODE, ARM

  008dc		 |SmartReflex_SetErrorControl_v2| PROC

; 340  : {

  008dc		 |$LN5@SmartRefle@15|
  008dc	e1a0c00d	 mov         r12, sp
  008e0	e92d000f	 stmdb       sp!, {r0 - r3}
  008e4	e92d5000	 stmdb       sp!, {r12, lr}
  008e8	e24dd008	 sub         sp, sp, #8
  008ec		 |$M46893|

; 341  :     UINT              val;
; 342  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  008ec	e59d1010	 ldr         r1, [sp, #0x10]
  008f0	e3a03004	 mov         r3, #4
  008f4	e0020391	 mul         r2, r1, r3
  008f8	e59f308c	 ldr         r3, [pc, #0x8C]
  008fc	e0833002	 add         r3, r3, r2
  00900	e5933000	 ldr         r3, [r3]
  00904	e58d3000	 str         r3, [sp]

; 343  : 
; 344  :     val = INREG32(&pSr->sr_regs.omap_37xx.ERRCONFIG);

  00908	e59d3000	 ldr         r3, [sp]
  0090c	e2833038	 add         r3, r3, #0x38
  00910	e5933000	 ldr         r3, [r3]
  00914	e58d3004	 str         r3, [sp, #4]

; 345  :     val &= ~(ERRCONFIG_ERRMAXLIMIT_MASK | ERRCONFIG_ERRMINLIMIT_MASK | ERRCONFIG_ERRWEIGHT_MASK);

  00918	e59d2004	 ldr         r2, [sp, #4]
  0091c	e3a034ff	 mov         r3, #0xFF, 8
  00920	e383373e	 orr         r3, r3, #0x3E, 14
  00924	e0023003	 and         r3, r2, r3
  00928	e58d3004	 str         r3, [sp, #4]

; 346  :     val |= ((errorWeight << ERRCONFIG_ERRWEIGHT_SHIFT) & ERRCONFIG_ERRWEIGHT_MASK);

  0092c	e59d3014	 ldr         r3, [sp, #0x14]
  00930	e1a03803	 mov         r3, r3, lsl #16
  00934	e2032807	 and         r2, r3, #7, 16
  00938	e59d3004	 ldr         r3, [sp, #4]
  0093c	e1833002	 orr         r3, r3, r2
  00940	e58d3004	 str         r3, [sp, #4]

; 347  :     val |= ((errorMax << ERRCONFIG_ERRMAXLIMIT_SHIFT) & ERRCONFIG_ERRMAXLIMIT_MASK);

  00944	e59d3018	 ldr         r3, [sp, #0x18]
  00948	e1a03403	 mov         r3, r3, lsl #8
  0094c	e2032cff	 and         r2, r3, #0xFF, 24
  00950	e59d3004	 ldr         r3, [sp, #4]
  00954	e1833002	 orr         r3, r3, r2
  00958	e58d3004	 str         r3, [sp, #4]

; 348  :     val |= ((errorMin << ERRCONFIG_ERRMINLIMIT_SHIFT) & ERRCONFIG_ERRMINLIMIT_MASK);

  0095c	e59d301c	 ldr         r3, [sp, #0x1C]
  00960	e20320ff	 and         r2, r3, #0xFF
  00964	e59d3004	 ldr         r3, [sp, #4]
  00968	e1833002	 orr         r3, r3, r2
  0096c	e58d3004	 str         r3, [sp, #4]

; 349  : 	
; 350  :     OUTREG32(&pSr->sr_regs.omap_37xx.ERRCONFIG, val);

  00970	e59d3000	 ldr         r3, [sp]
  00974	e2832038	 add         r2, r3, #0x38
  00978	e59d3004	 ldr         r3, [sp, #4]
  0097c	e5823000	 str         r3, [r2]

; 351  : }

  00980	e28dd008	 add         sp, sp, #8
  00984	e89d6000	 ldmia       sp, {sp, lr}
  00988	e12fff1e	 bx          lr
  0098c		 |$LN6@SmartRefle@15|
  0098c		 |$LN7@SmartRefle@15|
  0098c	00000000	 DCD         |g_pSr|
  00990		 |$M46894|

			 ENDP  ; |SmartReflex_SetErrorControl_v2|


  00078			 AREA	 |.pdata|, PDATA
|$T46903| DCD	|$LN5@SmartRefle@16|
	DCD	0x40002604
; Function compile flags: /Odtp

  00990			 AREA	 |.text|, CODE, ARM

  00990		 |SmartReflex_SetAvgWeight| PROC

; 360  : {

  00990		 |$LN5@SmartRefle@16|
  00990	e1a0c00d	 mov         r12, sp
  00994	e92d0007	 stmdb       sp!, {r0 - r2}
  00998	e92d5000	 stmdb       sp!, {r12, lr}
  0099c	e24dd008	 sub         sp, sp, #8
  009a0		 |$M46900|

; 361  :     UINT              val;
; 362  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  009a0	e59d1010	 ldr         r1, [sp, #0x10]
  009a4	e3a03004	 mov         r3, #4
  009a8	e0020391	 mul         r2, r1, r3
  009ac	e59f3070	 ldr         r3, [pc, #0x70]
  009b0	e0833002	 add         r3, r3, r2
  009b4	e5933000	 ldr         r3, [r3]
  009b8	e58d3000	 str         r3, [sp]

; 363  : 
; 364  :     val = INREG32(&pSr->sr_regs.omap_35xx.AVGWEIGHT);

  009bc	e59d3000	 ldr         r3, [sp]
  009c0	e2833018	 add         r3, r3, #0x18
  009c4	e5933000	 ldr         r3, [r3]
  009c8	e58d3004	 str         r3, [sp, #4]

; 365  :     val &= ~(AVGWEIGHT_SENNAVGWEIGHT_MASK | AVGWEIGHT_SENPAVGWEIGHT_MASK);

  009cc	e59d2004	 ldr         r2, [sp, #4]
  009d0	e3e0300f	 mvn         r3, #0xF
  009d4	e0023003	 and         r3, r2, r3
  009d8	e58d3004	 str         r3, [sp, #4]

; 366  :     val |= ((senNWeight << AVGWEIGHT_SENNAVGWEIGHT_SHIFT) & AVGWEIGHT_SENNAVGWEIGHT_MASK);

  009dc	e59d3014	 ldr         r3, [sp, #0x14]
  009e0	e2032003	 and         r2, r3, #3
  009e4	e59d3004	 ldr         r3, [sp, #4]
  009e8	e1833002	 orr         r3, r3, r2
  009ec	e58d3004	 str         r3, [sp, #4]

; 367  :     val |= ((senPWeight << AVGWEIGHT_SENPAVGWEIGHT_SHIFT) & AVGWEIGHT_SENPAVGWEIGHT_MASK);

  009f0	e59d3018	 ldr         r3, [sp, #0x18]
  009f4	e1a03103	 mov         r3, r3, lsl #2
  009f8	e203200c	 and         r2, r3, #0xC
  009fc	e59d3004	 ldr         r3, [sp, #4]
  00a00	e1833002	 orr         r3, r3, r2
  00a04	e58d3004	 str         r3, [sp, #4]

; 368  : 	
; 369  :     OUTREG32(&pSr->sr_regs.omap_35xx.AVGWEIGHT, val);

  00a08	e59d3000	 ldr         r3, [sp]
  00a0c	e2832018	 add         r2, r3, #0x18
  00a10	e59d3004	 ldr         r3, [sp, #4]
  00a14	e5823000	 str         r3, [r2]

; 370  : }

  00a18	e28dd008	 add         sp, sp, #8
  00a1c	e89d6000	 ldmia       sp, {sp, lr}
  00a20	e12fff1e	 bx          lr
  00a24		 |$LN6@SmartRefle@16|
  00a24		 |$LN7@SmartRefle@16|
  00a24	00000000	 DCD         |g_pSr|
  00a28		 |$M46901|

			 ENDP  ; |SmartReflex_SetAvgWeight|


  00080			 AREA	 |.pdata|, PDATA
|$T46911| DCD	|$LN5@SmartRefle@17|
	DCD	0x40002f04
; Function compile flags: /Odtp

  00a28			 AREA	 |.text|, CODE, ARM

  00a28		 |SmartReflex_ClearInterruptStatus_v1| PROC

; 378  : {

  00a28		 |$LN5@SmartRefle@17|
  00a28	e1a0c00d	 mov         r12, sp
  00a2c	e92d0003	 stmdb       sp!, {r0, r1}
  00a30	e92d5000	 stmdb       sp!, {r12, lr}
  00a34	e24dd014	 sub         sp, sp, #0x14
  00a38		 |$M46908|

; 379  :     UINT              rc;
; 380  :     UINT              intrStatus;
; 381  :     UINT              val;
; 382  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00a38	e59d101c	 ldr         r1, [sp, #0x1C]
  00a3c	e3a03004	 mov         r3, #4
  00a40	e0020391	 mul         r2, r1, r3
  00a44	e59f3094	 ldr         r3, [pc, #0x94]
  00a48	e0833002	 add         r3, r3, r2
  00a4c	e5933000	 ldr         r3, [r3]
  00a50	e58d3008	 str         r3, [sp, #8]

; 383  : 
; 384  :     // clear only the interrupt status in the mask
; 385  :     rc = INREG32(&pSr->sr_regs.omap_35xx.ERRCONFIG);

  00a54	e59d3008	 ldr         r3, [sp, #8]
  00a58	e2833024	 add         r3, r3, #0x24
  00a5c	e5933000	 ldr         r3, [r3]
  00a60	e58d3000	 str         r3, [sp]

; 386  : 
; 387  :     // Get the non interrupt status part of ERRCONFIG register
; 388  :     val = rc & ~ERRCONFIG_INTR_SR_MASK;

  00a64	e59d2000	 ldr         r2, [sp]
  00a68	e3e03455	 mvn         r3, #0x55, 8
  00a6c	e2233501	 eor         r3, r3, #1, 10
  00a70	e0023003	 and         r3, r2, r3
  00a74	e58d300c	 str         r3, [sp, #0xC]

; 389  : 
; 390  :     // Get the interrupt status bit to be cleared
; 391  :     mask &= ERRCONFIG_INTR_SR_MASK;

  00a78	e59d2020	 ldr         r2, [sp, #0x20]
  00a7c	e3a03455	 mov         r3, #0x55, 8
  00a80	e3833501	 orr         r3, r3, #1, 10
  00a84	e0023003	 and         r3, r2, r3
  00a88	e58d3020	 str         r3, [sp, #0x20]

; 392  :     intrStatus = rc & mask;

  00a8c	e59d2000	 ldr         r2, [sp]
  00a90	e59d3020	 ldr         r3, [sp, #0x20]
  00a94	e0023003	 and         r3, r2, r3
  00a98	e58d3004	 str         r3, [sp, #4]

; 393  : 
; 394  :     // Clear the interrupt status
; 395  :     val |= intrStatus;

  00a9c	e59d200c	 ldr         r2, [sp, #0xC]
  00aa0	e59d3004	 ldr         r3, [sp, #4]
  00aa4	e1823003	 orr         r3, r2, r3
  00aa8	e58d300c	 str         r3, [sp, #0xC]

; 396  :     OUTREG32(&pSr->sr_regs.omap_35xx.ERRCONFIG, val);

  00aac	e59d3008	 ldr         r3, [sp, #8]
  00ab0	e2832024	 add         r2, r3, #0x24
  00ab4	e59d300c	 ldr         r3, [sp, #0xC]
  00ab8	e5823000	 str         r3, [r2]

; 397  : 
; 398  :     // return the status prior to clearing the status
; 399  :     return rc & ERRCONFIG_INTR_SR_MASK;

  00abc	e59d2000	 ldr         r2, [sp]
  00ac0	e3a03455	 mov         r3, #0x55, 8
  00ac4	e3833501	 orr         r3, r3, #1, 10
  00ac8	e0023003	 and         r3, r2, r3
  00acc	e58d3010	 str         r3, [sp, #0x10]

; 400  : }

  00ad0	e59d0010	 ldr         r0, [sp, #0x10]
  00ad4	e28dd014	 add         sp, sp, #0x14
  00ad8	e89d6000	 ldmia       sp, {sp, lr}
  00adc	e12fff1e	 bx          lr
  00ae0		 |$LN6@SmartRefle@17|
  00ae0		 |$LN7@SmartRefle@17|
  00ae0	00000000	 DCD         |g_pSr|
  00ae4		 |$M46909|

			 ENDP  ; |SmartReflex_ClearInterruptStatus_v1|


  00088			 AREA	 |.pdata|, PDATA
|$T46920| DCD	|$LN17@SmartRefle@18|
	DCD	0x40008604
; Function compile flags: /Odtp

  00ae4			 AREA	 |.text|, CODE, ARM

  00ae4		 |SmartReflex_ClearInterruptStatus_v2| PROC

; 408  : {

  00ae4		 |$LN17@SmartRefle@18|
  00ae4	e1a0c00d	 mov         r12, sp
  00ae8	e92d0003	 stmdb       sp!, {r0, r1}
  00aec	e92d5000	 stmdb       sp!, {r12, lr}
  00af0	e24dd024	 sub         sp, sp, #0x24
  00af4		 |$M46917|

; 409  :     UINT              new_mask, rc=0;

  00af4	e3a03000	 mov         r3, #0
  00af8	e58d3000	 str         r3, [sp]

; 410  :     UINT              intrStatus;
; 411  :     UINT              val, reg_mask=0;

  00afc	e3a03000	 mov         r3, #0
  00b00	e58d300c	 str         r3, [sp, #0xC]

; 412  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00b04	e59d102c	 ldr         r1, [sp, #0x2C]
  00b08	e3a03004	 mov         r3, #4
  00b0c	e0020391	 mul         r2, r1, r3
  00b10	e59f31e0	 ldr         r3, [pc, #0x1E0]
  00b14	e0833002	 add         r3, r3, r2
  00b18	e5933000	 ldr         r3, [r3]
  00b1c	e58d3014	 str         r3, [sp, #0x14]

; 413  :     UINT32 *pReg=NULL;

  00b20	e3a03000	 mov         r3, #0
  00b24	e58d3010	 str         r3, [sp, #0x10]

; 414  : 
; 415  :     if(mask & ERRCONFIG_VP_BOUNDINT_ST)

  00b28	e59d3030	 ldr         r3, [sp, #0x30]
  00b2c	e3130101	 tst         r3, #1, 2
  00b30	0a000019	 beq         |$LN11@SmartRefle@18|

; 416  :     {
; 417  :         pReg = 	(UINT32 *)&pSr->sr_regs.omap_37xx.ERRCONFIG;

  00b34	e59d3014	 ldr         r3, [sp, #0x14]
  00b38	e2833038	 add         r3, r3, #0x38
  00b3c	e58d3010	 str         r3, [sp, #0x10]

; 418  :         reg_mask = ERRCONFIG_VP_BOUNDINT_ST_37XX;

  00b40	e3a03502	 mov         r3, #2, 10
  00b44	e58d300c	 str         r3, [sp, #0xC]

; 419  :         new_mask = ERRCONFIG_VP_BOUNDINT_ST_37XX;

  00b48	e3a03502	 mov         r3, #2, 10
  00b4c	e58d3008	 str         r3, [sp, #8]

; 420  : 	 // clear only the interrupt status in the mask
; 421  : 	 rc = INREG32(pReg);

  00b50	e59d3010	 ldr         r3, [sp, #0x10]
  00b54	e5933000	 ldr         r3, [r3]
  00b58	e58d3000	 str         r3, [sp]

; 422  : 
; 423  : 	 // Get the non interrupt status part of ERRCONFIG register
; 424  : 	 val = rc & ~reg_mask;

  00b5c	e59d300c	 ldr         r3, [sp, #0xC]
  00b60	e1e02003	 mvn         r2, r3
  00b64	e59d3000	 ldr         r3, [sp]
  00b68	e0033002	 and         r3, r3, r2
  00b6c	e58d3018	 str         r3, [sp, #0x18]

; 425  :          // Get the interrupt status bit to be cleared
; 426  : 	 intrStatus = rc & new_mask;

  00b70	e59d2000	 ldr         r2, [sp]
  00b74	e59d3008	 ldr         r3, [sp, #8]
  00b78	e0023003	 and         r3, r2, r3
  00b7c	e58d3004	 str         r3, [sp, #4]

; 427  : 
; 428  : 	 // Clear the interrupt status
; 429  : 	 val |= intrStatus;

  00b80	e59d2018	 ldr         r2, [sp, #0x18]
  00b84	e59d3004	 ldr         r3, [sp, #4]
  00b88	e1823003	 orr         r3, r2, r3
  00b8c	e58d3018	 str         r3, [sp, #0x18]

; 430  : 	 OUTREG32(pReg, val);

  00b90	e59d2018	 ldr         r2, [sp, #0x18]
  00b94	e59d3010	 ldr         r3, [sp, #0x10]
  00b98	e5832000	 str         r2, [r3]
  00b9c		 |$LN11@SmartRefle@18|

; 431  :     }
; 432  :     if(mask & ERRCONFIG_INTR_SR_MASK)

  00b9c	e59d2030	 ldr         r2, [sp, #0x30]
  00ba0	e3a03455	 mov         r3, #0x55, 8
  00ba4	e3833501	 orr         r3, r3, #1, 10
  00ba8	e1120003	 tst         r2, r3
  00bac	0a00002c	 beq         |$LN10@SmartRefle@18|

; 433  :     {
; 434  :         pReg = 	(UINT32 *)&pSr->sr_regs.omap_37xx.IRQENABLE_CLR;

  00bb0	e59d3014	 ldr         r3, [sp, #0x14]
  00bb4	e2833030	 add         r3, r3, #0x30
  00bb8	e58d3010	 str         r3, [sp, #0x10]

; 435  :         reg_mask = IRQENABLE_MASK;

  00bbc	e3a0300f	 mov         r3, #0xF
  00bc0	e58d300c	 str         r3, [sp, #0xC]

; 436  :         switch (mask)

  00bc4	e59d3030	 ldr         r3, [sp, #0x30]
  00bc8	e58d3020	 str         r3, [sp, #0x20]
  00bcc	e59d3020	 ldr         r3, [sp, #0x20]
  00bd0	e3530301	 cmp         r3, #1, 6
  00bd4	8a000009	 bhi         |$LN14@SmartRefle@18|
  00bd8	e59d3020	 ldr         r3, [sp, #0x20]
  00bdc	e3530301	 cmp         r3, #1, 6
  00be0	0a000015	 beq         |$LN5@SmartRefle@18|
  00be4	e59d3020	 ldr         r3, [sp, #0x20]
  00be8	e3530501	 cmp         r3, #1, 10
  00bec	0a00000c	 beq         |$LN7@SmartRefle@18|
  00bf0	e59d3020	 ldr         r3, [sp, #0x20]
  00bf4	e3530401	 cmp         r3, #1, 8
  00bf8	0a00000c	 beq         |$LN6@SmartRefle@18|
  00bfc	ea000016	 b           |$LN2@SmartRefle@18|
  00c00		 |$LN14@SmartRefle@18|
  00c00	e59d3020	 ldr         r3, [sp, #0x20]
  00c04	e3530201	 cmp         r3, #1, 4
  00c08	0a00000e	 beq         |$LN4@SmartRefle@18|
  00c0c	e59d2020	 ldr         r2, [sp, #0x20]
  00c10	e3a03455	 mov         r3, #0x55, 8
  00c14	e3833501	 orr         r3, r3, #1, 10
  00c18	e1520003	 cmp         r2, r3
  00c1c	0a00000c	 beq         |$LN3@SmartRefle@18|
  00c20	ea00000d	 b           |$LN2@SmartRefle@18|
  00c24		 |$LN7@SmartRefle@18|

; 437  :         {
; 438  :             case ERRCONFIG_MCU_DISACKINT_ST:
; 439  :                 mask = IRQENABLE_CLR_MCUDISABLEACKINTSTATENA;

  00c24	e3a03001	 mov         r3, #1
  00c28	e58d3030	 str         r3, [sp, #0x30]

; 440  :                 break;

  00c2c	ea00000c	 b           |$LN8@SmartRefle@18|
  00c30		 |$LN6@SmartRefle@18|

; 441  :             case ERRCONFIG_MCU_BOUNDINT_ST:
; 442  :                 mask = IRQENABLE_CLR_MCUVALIDINTENA;

  00c30	e3a03004	 mov         r3, #4
  00c34	e58d3030	 str         r3, [sp, #0x30]

; 443  :                 break;

  00c38	ea000009	 b           |$LN8@SmartRefle@18|
  00c3c		 |$LN5@SmartRefle@18|

; 444  :             case ERRCONFIG_MCU_VALIDINT_ST:
; 445  :                 mask = IRQENABLE_CLR_MCUVALIDINTENA;

  00c3c	e3a03004	 mov         r3, #4
  00c40	e58d3030	 str         r3, [sp, #0x30]

; 446  :                 break;

  00c44	ea000006	 b           |$LN8@SmartRefle@18|
  00c48		 |$LN4@SmartRefle@18|

; 447  :             case ERRCONFIG_MCU_ACCUMINT_ST:
; 448  :                 mask = IRQENABLE_CLR_MCUACCUMINTENA;

  00c48	e3a03008	 mov         r3, #8
  00c4c	e58d3030	 str         r3, [sp, #0x30]

; 449  :                 break;

  00c50	ea000003	 b           |$LN8@SmartRefle@18|
  00c54		 |$LN3@SmartRefle@18|

; 450  :             case ERRCONFIG_INTR_SR_MASK:
; 451  :                 mask = IRQENABLE_MASK;

  00c54	e3a0300f	 mov         r3, #0xF
  00c58	e58d3030	 str         r3, [sp, #0x30]
  00c5c		 |$LN2@SmartRefle@18|

; 452  : 	     default:
; 453  :                 mask = 0;

  00c5c	e3a03000	 mov         r3, #0
  00c60	e58d3030	 str         r3, [sp, #0x30]
  00c64		 |$LN8@SmartRefle@18|
  00c64		 |$LN10@SmartRefle@18|

; 454  :                 break;
; 455  :         }
; 456  : 		
; 457  :     }
; 458  : 
; 459  :     if((pReg != NULL) && (reg_mask))

  00c64	e59d3010	 ldr         r3, [sp, #0x10]
  00c68	e3530000	 cmp         r3, #0
  00c6c	0a000019	 beq         |$LN1@SmartRefle@18|
  00c70	e59d300c	 ldr         r3, [sp, #0xC]
  00c74	e3530000	 cmp         r3, #0
  00c78	0a000016	 beq         |$LN1@SmartRefle@18|

; 460  :     {
; 461  :         // clear only the interrupt status in the mask
; 462  : 	 rc = INREG32(pReg);

  00c7c	e59d3010	 ldr         r3, [sp, #0x10]
  00c80	e5933000	 ldr         r3, [r3]
  00c84	e58d3000	 str         r3, [sp]

; 463  : 
; 464  : 	 // Get the non interrupt status part of ERRCONFIG register
; 465  : 	 val = rc & ~reg_mask;

  00c88	e59d300c	 ldr         r3, [sp, #0xC]
  00c8c	e1e02003	 mvn         r2, r3
  00c90	e59d3000	 ldr         r3, [sp]
  00c94	e0033002	 and         r3, r3, r2
  00c98	e58d3018	 str         r3, [sp, #0x18]

; 466  : 
; 467  : 	 // Get the interrupt status bit to be cleared
; 468  : 	 mask &= reg_mask;

  00c9c	e59d2030	 ldr         r2, [sp, #0x30]
  00ca0	e59d300c	 ldr         r3, [sp, #0xC]
  00ca4	e0023003	 and         r3, r2, r3
  00ca8	e58d3030	 str         r3, [sp, #0x30]

; 469  : 	 intrStatus = rc & mask;

  00cac	e59d2000	 ldr         r2, [sp]
  00cb0	e59d3030	 ldr         r3, [sp, #0x30]
  00cb4	e0023003	 and         r3, r2, r3
  00cb8	e58d3004	 str         r3, [sp, #4]

; 470  : 
; 471  :         // Clear the interrupt status
; 472  : 	 val |= intrStatus;

  00cbc	e59d2018	 ldr         r2, [sp, #0x18]
  00cc0	e59d3004	 ldr         r3, [sp, #4]
  00cc4	e1823003	 orr         r3, r2, r3
  00cc8	e58d3018	 str         r3, [sp, #0x18]

; 473  : 	 OUTREG32(pReg, val);

  00ccc	e59d2018	 ldr         r2, [sp, #0x18]
  00cd0	e59d3010	 ldr         r3, [sp, #0x10]
  00cd4	e5832000	 str         r2, [r3]
  00cd8		 |$LN1@SmartRefle@18|

; 474  :     }
; 475  :     // return the status prior to clearing the status
; 476  :     return (rc & reg_mask);

  00cd8	e59d2000	 ldr         r2, [sp]
  00cdc	e59d300c	 ldr         r3, [sp, #0xC]
  00ce0	e0023003	 and         r3, r2, r3
  00ce4	e58d301c	 str         r3, [sp, #0x1C]

; 477  : }

  00ce8	e59d001c	 ldr         r0, [sp, #0x1C]
  00cec	e28dd024	 add         sp, sp, #0x24
  00cf0	e89d6000	 ldmia       sp, {sp, lr}
  00cf4	e12fff1e	 bx          lr
  00cf8		 |$LN18@SmartRefle@18|
  00cf8		 |$LN19@SmartRefle@18|
  00cf8	00000000	 DCD         |g_pSr|
  00cfc		 |$M46918|

			 ENDP  ; |SmartReflex_ClearInterruptStatus_v2|


  00090			 AREA	 |.pdata|, PDATA
|$T46928| DCD	|$LN5@SmartRefle@19|
	DCD	0x40001204
; Function compile flags: /Odtp

  00cfc			 AREA	 |.text|, CODE, ARM

  00cfc		 |SmartReflex_GetStatus| PROC

; 484  : {

  00cfc		 |$LN5@SmartRefle@19|
  00cfc	e1a0c00d	 mov         r12, sp
  00d00	e92d0001	 stmdb       sp!, {r0}
  00d04	e92d5000	 stmdb       sp!, {r12, lr}
  00d08	e24dd004	 sub         sp, sp, #4
  00d0c		 |$M46925|

; 485  :     return INREG32(&g_pSr[channel]->sr_regs.omap_35xx.SRSTATUS);

  00d0c	e59d100c	 ldr         r1, [sp, #0xC]
  00d10	e3a03004	 mov         r3, #4
  00d14	e0020391	 mul         r2, r1, r3
  00d18	e59f3020	 ldr         r3, [pc, #0x20]
  00d1c	e0833002	 add         r3, r3, r2
  00d20	e5933000	 ldr         r3, [r3]
  00d24	e2833004	 add         r3, r3, #4
  00d28	e5933000	 ldr         r3, [r3]
  00d2c	e58d3000	 str         r3, [sp]

; 486  : }

  00d30	e59d0000	 ldr         r0, [sp]
  00d34	e28dd004	 add         sp, sp, #4
  00d38	e89d6000	 ldmia       sp, {sp, lr}
  00d3c	e12fff1e	 bx          lr
  00d40		 |$LN6@SmartRefle@19|
  00d40		 |$LN7@SmartRefle@19|
  00d40	00000000	 DCD         |g_pSr|
  00d44		 |$M46926|

			 ENDP  ; |SmartReflex_GetStatus|

	EXPORT	|??_C@_1CE@GPEMKPMB@?$AA?7?$AAE?$AAR?$AAR?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@FLBPAKFF@?$AA?7?$AAS?$AAE?$AAN?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@PJEIKBGE@?$AA?7?$AAN?$AAV?$AAA?$AAL?$AAU?$AAE?$AAR?$AAE?$AAC?$AAI?$AAP?$AAR?$AAO?$AAC?$AAA?$AAL?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@OLFJAIOF@?$AA?7?$AAA?$AAV?$AAG?$AAW?$AAE?$AAI?$AAG?$AAH?$AAT?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@CGMCEODF@?$AA?7?$AAS?$AAE?$AAN?$AAA?$AAV?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@BKHOAOPD@?$AA?7?$AAS?$AAE?$AAN?$AAM?$AAA?$AAX?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@KHHKDINM@?$AA?7?$AAS?$AAE?$AAN?$AAM?$AAI?$AAN?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@BGLJEEOM@?$AA?7?$AAS?$AAE?$AAN?$AAV?$AAA?$AAL?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@MPAJGDLO@?$AA?7?$AAS?$AAR?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@KLDDLMIK@?$AA?7?$AAS?$AAR?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@HCJMCLID@?$AA?$CL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAD?$AAU?$AAM?$AAP?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|

  00098			 AREA	 |.pdata|, PDATA
|$T46935| DCD	|$LN5@SmartRefle@20|
	DCD	0x40004d04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@GPEMKPMB@?$AA?7?$AAE?$AAR?$AAR?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "E", 0x0, "R", 0x0, "R", 0x0, "C", 0x0, "O", 0x0, "N"
	DCB	0x0, "F", 0x0, "I", 0x0, "G", 0x0, ":", 0x0, 0x9, 0x0, 0x9
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@FLBPAKFF@?$AA?7?$AAS?$AAE?$AAN?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "S", 0x0, "E", 0x0, "N", 0x0, "E", 0x0, "R", 0x0, "R"
	DCB	0x0, "O", 0x0, "R", 0x0, ":", 0x0, 0x9, 0x0, 0x9, 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@PJEIKBGE@?$AA?7?$AAN?$AAV?$AAA?$AAL?$AAU?$AAE?$AAR?$AAE?$AAC?$AAI?$AAP?$AAR?$AAO?$AAC?$AAA?$AAL?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "N", 0x0, "V", 0x0, "A", 0x0, "L", 0x0, "U", 0x0, "E"
	DCB	0x0, "R", 0x0, "E", 0x0, "C", 0x0, "I", 0x0, "P", 0x0, "R"
	DCB	0x0, "O", 0x0, "C", 0x0, "A", 0x0, "L", 0x0, ":", 0x0, 0x9
	DCB	0x0, 0x9, 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@OLFJAIOF@?$AA?7?$AAA?$AAV?$AAG?$AAW?$AAE?$AAI?$AAG?$AAH?$AAT?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "A", 0x0, "V", 0x0, "G", 0x0, "W", 0x0, "E", 0x0, "I"
	DCB	0x0, "G", 0x0, "H", 0x0, "T", 0x0, ":", 0x0, 0x9, 0x0, 0x9
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@CGMCEODF@?$AA?7?$AAS?$AAE?$AAN?$AAA?$AAV?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "S", 0x0, "E", 0x0, "N", 0x0, "A", 0x0, "V", 0x0, "G"
	DCB	0x0, ":", 0x0, 0x9, 0x0, 0x9, 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@BKHOAOPD@?$AA?7?$AAS?$AAE?$AAN?$AAM?$AAA?$AAX?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "S", 0x0, "E", 0x0, "N", 0x0, "M", 0x0, "A", 0x0, "X"
	DCB	0x0, ":", 0x0, 0x9, 0x0, 0x9, 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@KHHKDINM@?$AA?7?$AAS?$AAE?$AAN?$AAM?$AAI?$AAN?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "S", 0x0, "E", 0x0, "N", 0x0, "M", 0x0, "I", 0x0, "N"
	DCB	0x0, ":", 0x0, 0x9, 0x0, 0x9, 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@BGLJEEOM@?$AA?7?$AAS?$AAE?$AAN?$AAV?$AAA?$AAL?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "S", 0x0, "E", 0x0, "N", 0x0, "V", 0x0, "A", 0x0, "L"
	DCB	0x0, ":", 0x0, 0x9, 0x0, 0x9, 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@MPAJGDLO@?$AA?7?$AAS?$AAR?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "S", 0x0, "R", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T"
	DCB	0x0, "U", 0x0, "S", 0x0, ":", 0x0, 0x9, 0x0, 0x9, 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@KLDDLMIK@?$AA?7?$AAS?$AAR?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "S", 0x0, "R", 0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F"
	DCB	0x0, "I", 0x0, "G", 0x0, ":", 0x0, 0x9, 0x0, 0x9, 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@HCJMCLID@?$AA?$CL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAD?$AAU?$AAM?$AAP?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "S", 0x0, "m", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "R"
	DCB	0x0, "e", 0x0, "f", 0x0, "l", 0x0, "e", 0x0, "x", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "D", 0x0, "U", 0x0, "M"
	DCB	0x0, "P", 0x0, ":", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00d44			 AREA	 |.text|, CODE, ARM

  00d44		 |SmartReflex_dump_register_v1| PROC

; 492  : {

  00d44		 |$LN5@SmartRefle@20|
  00d44	e1a0c00d	 mov         r12, sp
  00d48	e92d0001	 stmdb       sp!, {r0}
  00d4c	e92d5000	 stmdb       sp!, {r12, lr}
  00d50	e24dd004	 sub         sp, sp, #4
  00d54		 |$M46932|

; 493  : #ifndef SHIP_BUILD
; 494  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00d54	e59d100c	 ldr         r1, [sp, #0xC]
  00d58	e3a03004	 mov         r3, #4
  00d5c	e0020391	 mul         r2, r1, r3
  00d60	e59f310c	 ldr         r3, [pc, #0x10C]
  00d64	e0833002	 add         r3, r3, r2
  00d68	e5933000	 ldr         r3, [r3]
  00d6c	e58d3000	 str         r3, [sp]

; 495  : 	
; 496  :     OALMSG( 1, (L"+SmartReflex register DUMP:\r\n"));

  00d70	e59f00f8	 ldr         r0, [pc, #0xF8]
  00d74	eb000000	 bl          NKDbgPrintfW

; 497  : 
; 498  :     OALMSG( 1, (L"\tSRCONFIG:\t\t%x\r\n", pSr->sr_regs.omap_35xx.SRCONFIG));

  00d78	e59d3000	 ldr         r3, [sp]
  00d7c	e5931000	 ldr         r1, [r3]
  00d80	e59f00e4	 ldr         r0, [pc, #0xE4]
  00d84	eb000000	 bl          NKDbgPrintfW

; 499  :     OALMSG( 1, (L"\tSRSTATUS:\t\t%x\r\n", pSr->sr_regs.omap_35xx.SRSTATUS));

  00d88	e59d3000	 ldr         r3, [sp]
  00d8c	e2833004	 add         r3, r3, #4
  00d90	e5931000	 ldr         r1, [r3]
  00d94	e59f00cc	 ldr         r0, [pc, #0xCC]
  00d98	eb000000	 bl          NKDbgPrintfW

; 500  :     OALMSG( 1, (L"\tSENVAL:\t\t%x\r\n", pSr->sr_regs.omap_35xx.SENVAL));

  00d9c	e59d3000	 ldr         r3, [sp]
  00da0	e2833008	 add         r3, r3, #8
  00da4	e5931000	 ldr         r1, [r3]
  00da8	e59f00b4	 ldr         r0, [pc, #0xB4]
  00dac	eb000000	 bl          NKDbgPrintfW

; 501  :     OALMSG( 1, (L"\tSENMIN:\t\t%x\r\n", pSr->sr_regs.omap_35xx.SENMIN));

  00db0	e59d3000	 ldr         r3, [sp]
  00db4	e283300c	 add         r3, r3, #0xC
  00db8	e5931000	 ldr         r1, [r3]
  00dbc	e59f009c	 ldr         r0, [pc, #0x9C]
  00dc0	eb000000	 bl          NKDbgPrintfW

; 502  :     OALMSG( 1, (L"\tSENMAX:\t\t%x\r\n", pSr->sr_regs.omap_35xx.SENMAX));

  00dc4	e59d3000	 ldr         r3, [sp]
  00dc8	e2833010	 add         r3, r3, #0x10
  00dcc	e5931000	 ldr         r1, [r3]
  00dd0	e59f0084	 ldr         r0, [pc, #0x84]
  00dd4	eb000000	 bl          NKDbgPrintfW

; 503  :     OALMSG( 1, (L"\tSENAVG:\t\t%x\r\n", pSr->sr_regs.omap_35xx.SENAVG));

  00dd8	e59d3000	 ldr         r3, [sp]
  00ddc	e2833014	 add         r3, r3, #0x14
  00de0	e5931000	 ldr         r1, [r3]
  00de4	e59f006c	 ldr         r0, [pc, #0x6C]
  00de8	eb000000	 bl          NKDbgPrintfW

; 504  :     OALMSG( 1, (L"\tAVGWEIGHT:\t\t%x\r\n", pSr->sr_regs.omap_35xx.AVGWEIGHT));

  00dec	e59d3000	 ldr         r3, [sp]
  00df0	e2833018	 add         r3, r3, #0x18
  00df4	e5931000	 ldr         r1, [r3]
  00df8	e59f0054	 ldr         r0, [pc, #0x54]
  00dfc	eb000000	 bl          NKDbgPrintfW

; 505  :     OALMSG( 1, (L"\tNVALUERECIPROCAL:\t\t%x\r\n", pSr->sr_regs.omap_35xx.NVALUERECIPROCAL));

  00e00	e59d3000	 ldr         r3, [sp]
  00e04	e283301c	 add         r3, r3, #0x1C
  00e08	e5931000	 ldr         r1, [r3]
  00e0c	e59f003c	 ldr         r0, [pc, #0x3C]
  00e10	eb000000	 bl          NKDbgPrintfW

; 506  :     OALMSG( 1, (L"\tSENERROR:\t\t%x\r\n", pSr->sr_regs.omap_35xx.SENERROR));

  00e14	e59d3000	 ldr         r3, [sp]
  00e18	e2833020	 add         r3, r3, #0x20
  00e1c	e5931000	 ldr         r1, [r3]
  00e20	e59f0024	 ldr         r0, [pc, #0x24]
  00e24	eb000000	 bl          NKDbgPrintfW

; 507  :     OALMSG( 1, (L"\tERRCONFIG:\t\t%x\r\n", pSr->sr_regs.omap_35xx.ERRCONFIG));

  00e28	e59d3000	 ldr         r3, [sp]
  00e2c	e2833024	 add         r3, r3, #0x24
  00e30	e5931000	 ldr         r1, [r3]
  00e34	e59f000c	 ldr         r0, [pc, #0xC]
  00e38	eb000000	 bl          NKDbgPrintfW

; 508  : #else
; 509  : 	UNREFERENCED_PARAMETER(channel);
; 510  : #endif
; 511  : }

  00e3c	e28dd004	 add         sp, sp, #4
  00e40	e89d6000	 ldmia       sp, {sp, lr}
  00e44	e12fff1e	 bx          lr
  00e48		 |$LN6@SmartRefle@20|
  00e48		 |$LN7@SmartRefle@20|
  00e48	00000000	 DCD         |??_C@_1CE@GPEMKPMB@?$AA?7?$AAE?$AAR?$AAR?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00e4c		 |$LN8@SmartRefle@20|
  00e4c	00000000	 DCD         |??_C@_1CC@FLBPAKFF@?$AA?7?$AAS?$AAE?$AAN?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00e50		 |$LN9@SmartRefle@20|
  00e50	00000000	 DCD         |??_C@_1DC@PJEIKBGE@?$AA?7?$AAN?$AAV?$AAA?$AAL?$AAU?$AAE?$AAR?$AAE?$AAC?$AAI?$AAP?$AAR?$AAO?$AAC?$AAA?$AAL?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00e54		 |$LN10@SmartRefle@20|
  00e54	00000000	 DCD         |??_C@_1CE@OLFJAIOF@?$AA?7?$AAA?$AAV?$AAG?$AAW?$AAE?$AAI?$AAG?$AAH?$AAT?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00e58		 |$LN11@SmartRefle@20|
  00e58	00000000	 DCD         |??_C@_1BO@CGMCEODF@?$AA?7?$AAS?$AAE?$AAN?$AAA?$AAV?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00e5c		 |$LN12@SmartRefle@20|
  00e5c	00000000	 DCD         |??_C@_1BO@BKHOAOPD@?$AA?7?$AAS?$AAE?$AAN?$AAM?$AAA?$AAX?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00e60		 |$LN13@SmartRefle@20|
  00e60	00000000	 DCD         |??_C@_1BO@KHHKDINM@?$AA?7?$AAS?$AAE?$AAN?$AAM?$AAI?$AAN?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00e64		 |$LN14@SmartRefle@20|
  00e64	00000000	 DCD         |??_C@_1BO@BGLJEEOM@?$AA?7?$AAS?$AAE?$AAN?$AAV?$AAA?$AAL?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00e68		 |$LN15@SmartRefle@20|
  00e68	00000000	 DCD         |??_C@_1CC@MPAJGDLO@?$AA?7?$AAS?$AAR?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00e6c		 |$LN16@SmartRefle@20|
  00e6c	00000000	 DCD         |??_C@_1CC@KLDDLMIK@?$AA?7?$AAS?$AAR?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00e70		 |$LN17@SmartRefle@20|
  00e70	00000000	 DCD         |??_C@_1DM@HCJMCLID@?$AA?$CL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAD?$AAU?$AAM?$AAP?$AA?3?$AA?$AN?$AA?6?$AA?$AA@|
  00e74		 |$LN18@SmartRefle@20|
  00e74	00000000	 DCD         |g_pSr|
  00e78		 |$M46933|

			 ENDP  ; |SmartReflex_dump_register_v1|

	EXPORT	|??_C@_1CM@FDHEPIP@?$AA?7?$AAI?$AAR?$AAQ?$AAE?$AAN?$AAA?$AAB?$AAL?$AAE?$AA_?$AAC?$AAL?$AAR?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@FKAAFELP@?$AA?7?$AAI?$AAR?$AAQ?$AAE?$AAN?$AAA?$AAB?$AAL?$AAE?$AA_?$AAS?$AAE?$AAT?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@CCLNJOME@?$AA?7?$AAI?$AAR?$AAQ?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@CJHEJDAE@?$AA?7?$AAI?$AAR?$AAQ?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAR?$AAA?$AAW?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  000a0			 AREA	 |.pdata|, PDATA
|$T46953| DCD	|$LN5@SmartRefle@21|
	DCD	0x40006504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@FDHEPIP@?$AA?7?$AAI?$AAR?$AAQ?$AAE?$AAN?$AAA?$AAB?$AAL?$AAE?$AA_?$AAC?$AAL?$AAR?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "I", 0x0, "R", 0x0, "Q", 0x0, "E", 0x0, "N", 0x0, "A"
	DCB	0x0, "B", 0x0, "L", 0x0, "E", 0x0, "_", 0x0, "C", 0x0, "L"
	DCB	0x0, "R", 0x0, ":", 0x0, 0x9, 0x0, 0x9, 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@FKAAFELP@?$AA?7?$AAI?$AAR?$AAQ?$AAE?$AAN?$AAA?$AAB?$AAL?$AAE?$AA_?$AAS?$AAE?$AAT?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "I", 0x0, "R", 0x0, "Q", 0x0, "E", 0x0, "N", 0x0, "A"
	DCB	0x0, "B", 0x0, "L", 0x0, "E", 0x0, "_", 0x0, "S", 0x0, "E"
	DCB	0x0, "T", 0x0, ":", 0x0, 0x9, 0x0, 0x9, 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@CCLNJOME@?$AA?7?$AAI?$AAR?$AAQ?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "I", 0x0, "R", 0x0, "Q", 0x0, "S", 0x0, "T", 0x0, "A"
	DCB	0x0, "T", 0x0, "U", 0x0, "S", 0x0, ":", 0x0, 0x9, 0x0, 0x9
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@CJHEJDAE@?$AA?7?$AAI?$AAR?$AAQ?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAR?$AAA?$AAW?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "I", 0x0, "R", 0x0, "Q", 0x0, "S", 0x0, "T", 0x0, "A"
	DCB	0x0, "T", 0x0, "U", 0x0, "S", 0x0, "_", 0x0, "R", 0x0, "A"
	DCB	0x0, "W", 0x0, ":", 0x0, 0x9, 0x0, 0x9, 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00e78			 AREA	 |.text|, CODE, ARM

  00e78		 |SmartReflex_dump_register_v2| PROC

; 516  : {

  00e78		 |$LN5@SmartRefle@21|
  00e78	e1a0c00d	 mov         r12, sp
  00e7c	e92d0001	 stmdb       sp!, {r0}
  00e80	e92d5000	 stmdb       sp!, {r12, lr}
  00e84	e24dd004	 sub         sp, sp, #4
  00e88		 |$M46950|

; 517  : #ifndef SHIP_BUILD
; 518  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00e88	e59d100c	 ldr         r1, [sp, #0xC]
  00e8c	e3a03004	 mov         r3, #4
  00e90	e0020391	 mul         r2, r1, r3
  00e94	e59f316c	 ldr         r3, [pc, #0x16C]
  00e98	e0833002	 add         r3, r3, r2
  00e9c	e5933000	 ldr         r3, [r3]
  00ea0	e58d3000	 str         r3, [sp]

; 519  : 	
; 520  :     OALMSG( 1, (L"+SmartReflex register DUMP:\r\n"));

  00ea4	e59f0158	 ldr         r0, [pc, #0x158]
  00ea8	eb000000	 bl          NKDbgPrintfW

; 521  : 
; 522  :     OALMSG( 1, (L"\tSRCONFIG:\t\t%x\r\n", pSr->sr_regs.omap_37xx.SRCONFIG));

  00eac	e59d3000	 ldr         r3, [sp]
  00eb0	e5931000	 ldr         r1, [r3]
  00eb4	e59f0144	 ldr         r0, [pc, #0x144]
  00eb8	eb000000	 bl          NKDbgPrintfW

; 523  :     OALMSG( 1, (L"\tSRSTATUS:\t\t%x\r\n", pSr->sr_regs.omap_37xx.SRSTATUS));

  00ebc	e59d3000	 ldr         r3, [sp]
  00ec0	e2833004	 add         r3, r3, #4
  00ec4	e5931000	 ldr         r1, [r3]
  00ec8	e59f012c	 ldr         r0, [pc, #0x12C]
  00ecc	eb000000	 bl          NKDbgPrintfW

; 524  :     OALMSG( 1, (L"\tSENVAL:\t\t%x\r\n", pSr->sr_regs.omap_37xx.SENVAL));

  00ed0	e59d3000	 ldr         r3, [sp]
  00ed4	e2833008	 add         r3, r3, #8
  00ed8	e5931000	 ldr         r1, [r3]
  00edc	e59f0114	 ldr         r0, [pc, #0x114]
  00ee0	eb000000	 bl          NKDbgPrintfW

; 525  :     OALMSG( 1, (L"\tSENMIN:\t\t%x\r\n", pSr->sr_regs.omap_37xx.SENMIN));

  00ee4	e59d3000	 ldr         r3, [sp]
  00ee8	e283300c	 add         r3, r3, #0xC
  00eec	e5931000	 ldr         r1, [r3]
  00ef0	e59f00fc	 ldr         r0, [pc, #0xFC]
  00ef4	eb000000	 bl          NKDbgPrintfW

; 526  :     OALMSG( 1, (L"\tSENMAX:\t\t%x\r\n", pSr->sr_regs.omap_37xx.SENMAX));

  00ef8	e59d3000	 ldr         r3, [sp]
  00efc	e2833010	 add         r3, r3, #0x10
  00f00	e5931000	 ldr         r1, [r3]
  00f04	e59f00e4	 ldr         r0, [pc, #0xE4]
  00f08	eb000000	 bl          NKDbgPrintfW

; 527  :     OALMSG( 1, (L"\tSENAVG:\t\t%x\r\n", pSr->sr_regs.omap_37xx.SENAVG));

  00f0c	e59d3000	 ldr         r3, [sp]
  00f10	e2833014	 add         r3, r3, #0x14
  00f14	e5931000	 ldr         r1, [r3]
  00f18	e59f00cc	 ldr         r0, [pc, #0xCC]
  00f1c	eb000000	 bl          NKDbgPrintfW

; 528  :     OALMSG( 1, (L"\tAVGWEIGHT:\t\t%x\r\n", pSr->sr_regs.omap_37xx.AVGWEIGHT));

  00f20	e59d3000	 ldr         r3, [sp]
  00f24	e2833018	 add         r3, r3, #0x18
  00f28	e5931000	 ldr         r1, [r3]
  00f2c	e59f00b4	 ldr         r0, [pc, #0xB4]
  00f30	eb000000	 bl          NKDbgPrintfW

; 529  :     OALMSG( 1, (L"\tNVALUERECIPROCAL:\t\t%x\r\n", pSr->sr_regs.omap_37xx.NVALUERECIPROCAL));

  00f34	e59d3000	 ldr         r3, [sp]
  00f38	e283301c	 add         r3, r3, #0x1C
  00f3c	e5931000	 ldr         r1, [r3]
  00f40	e59f009c	 ldr         r0, [pc, #0x9C]
  00f44	eb000000	 bl          NKDbgPrintfW

; 530  :     OALMSG( 1, (L"\tIRQSTATUS_RAW:\t\t%x\r\n", pSr->sr_regs.omap_37xx.IRQSTATUS_RAW));

  00f48	e59d3000	 ldr         r3, [sp]
  00f4c	e2833024	 add         r3, r3, #0x24
  00f50	e5931000	 ldr         r1, [r3]
  00f54	e59f0084	 ldr         r0, [pc, #0x84]
  00f58	eb000000	 bl          NKDbgPrintfW

; 531  :     OALMSG( 1, (L"\tIRQSTATUS:\t\t%x\r\n", pSr->sr_regs.omap_37xx.IRQSTATUS));

  00f5c	e59d3000	 ldr         r3, [sp]
  00f60	e2833028	 add         r3, r3, #0x28
  00f64	e5931000	 ldr         r1, [r3]
  00f68	e59f006c	 ldr         r0, [pc, #0x6C]
  00f6c	eb000000	 bl          NKDbgPrintfW

; 532  :     OALMSG( 1, (L"\tIRQENABLE_SET:\t\t%x\r\n", pSr->sr_regs.omap_37xx.IRQENABLE_SET));

  00f70	e59d3000	 ldr         r3, [sp]
  00f74	e283302c	 add         r3, r3, #0x2C
  00f78	e5931000	 ldr         r1, [r3]
  00f7c	e59f0054	 ldr         r0, [pc, #0x54]
  00f80	eb000000	 bl          NKDbgPrintfW

; 533  :     OALMSG( 1, (L"\tIRQENABLE_CLR:\t\t%x\r\n", pSr->sr_regs.omap_37xx.IRQENABLE_CLR));

  00f84	e59d3000	 ldr         r3, [sp]
  00f88	e2833030	 add         r3, r3, #0x30
  00f8c	e5931000	 ldr         r1, [r3]
  00f90	e59f003c	 ldr         r0, [pc, #0x3C]
  00f94	eb000000	 bl          NKDbgPrintfW

; 534  :     OALMSG( 1, (L"\tSENERROR:\t\t%x\r\n", pSr->sr_regs.omap_37xx.SENERROR));

  00f98	e59d3000	 ldr         r3, [sp]
  00f9c	e2833034	 add         r3, r3, #0x34
  00fa0	e5931000	 ldr         r1, [r3]
  00fa4	e59f0024	 ldr         r0, [pc, #0x24]
  00fa8	eb000000	 bl          NKDbgPrintfW

; 535  :     OALMSG( 1, (L"\tERRCONFIG:\t\t%x\r\n", pSr->sr_regs.omap_37xx.ERRCONFIG));

  00fac	e59d3000	 ldr         r3, [sp]
  00fb0	e2833038	 add         r3, r3, #0x38
  00fb4	e5931000	 ldr         r1, [r3]
  00fb8	e59f000c	 ldr         r0, [pc, #0xC]
  00fbc	eb000000	 bl          NKDbgPrintfW

; 536  : #else
; 537  : 	UNREFERENCED_PARAMETER(channel);
; 538  : #endif
; 539  : }

  00fc0	e28dd004	 add         sp, sp, #4
  00fc4	e89d6000	 ldmia       sp, {sp, lr}
  00fc8	e12fff1e	 bx          lr
  00fcc		 |$LN6@SmartRefle@21|
  00fcc		 |$LN7@SmartRefle@21|
  00fcc	00000000	 DCD         |??_C@_1CE@GPEMKPMB@?$AA?7?$AAE?$AAR?$AAR?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00fd0		 |$LN8@SmartRefle@21|
  00fd0	00000000	 DCD         |??_C@_1CC@FLBPAKFF@?$AA?7?$AAS?$AAE?$AAN?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00fd4		 |$LN9@SmartRefle@21|
  00fd4	00000000	 DCD         |??_C@_1CM@FDHEPIP@?$AA?7?$AAI?$AAR?$AAQ?$AAE?$AAN?$AAA?$AAB?$AAL?$AAE?$AA_?$AAC?$AAL?$AAR?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00fd8		 |$LN10@SmartRefle@21|
  00fd8	00000000	 DCD         |??_C@_1CM@FKAAFELP@?$AA?7?$AAI?$AAR?$AAQ?$AAE?$AAN?$AAA?$AAB?$AAL?$AAE?$AA_?$AAS?$AAE?$AAT?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00fdc		 |$LN11@SmartRefle@21|
  00fdc	00000000	 DCD         |??_C@_1CE@CCLNJOME@?$AA?7?$AAI?$AAR?$AAQ?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00fe0		 |$LN12@SmartRefle@21|
  00fe0	00000000	 DCD         |??_C@_1CM@CJHEJDAE@?$AA?7?$AAI?$AAR?$AAQ?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAR?$AAA?$AAW?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00fe4		 |$LN13@SmartRefle@21|
  00fe4	00000000	 DCD         |??_C@_1DC@PJEIKBGE@?$AA?7?$AAN?$AAV?$AAA?$AAL?$AAU?$AAE?$AAR?$AAE?$AAC?$AAI?$AAP?$AAR?$AAO?$AAC?$AAA?$AAL?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00fe8		 |$LN14@SmartRefle@21|
  00fe8	00000000	 DCD         |??_C@_1CE@OLFJAIOF@?$AA?7?$AAA?$AAV?$AAG?$AAW?$AAE?$AAI?$AAG?$AAH?$AAT?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00fec		 |$LN15@SmartRefle@21|
  00fec	00000000	 DCD         |??_C@_1BO@CGMCEODF@?$AA?7?$AAS?$AAE?$AAN?$AAA?$AAV?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00ff0		 |$LN16@SmartRefle@21|
  00ff0	00000000	 DCD         |??_C@_1BO@BKHOAOPD@?$AA?7?$AAS?$AAE?$AAN?$AAM?$AAA?$AAX?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00ff4		 |$LN17@SmartRefle@21|
  00ff4	00000000	 DCD         |??_C@_1BO@KHHKDINM@?$AA?7?$AAS?$AAE?$AAN?$AAM?$AAI?$AAN?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00ff8		 |$LN18@SmartRefle@21|
  00ff8	00000000	 DCD         |??_C@_1BO@BGLJEEOM@?$AA?7?$AAS?$AAE?$AAN?$AAV?$AAA?$AAL?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00ffc		 |$LN19@SmartRefle@21|
  00ffc	00000000	 DCD         |??_C@_1CC@MPAJGDLO@?$AA?7?$AAS?$AAR?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  01000		 |$LN20@SmartRefle@21|
  01000	00000000	 DCD         |??_C@_1CC@KLDDLMIK@?$AA?7?$AAS?$AAR?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  01004		 |$LN21@SmartRefle@21|
  01004	00000000	 DCD         |??_C@_1DM@HCJMCLID@?$AA?$CL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAD?$AAU?$AAM?$AAP?$AA?3?$AA?$AN?$AA?6?$AA?$AA@|
  01008		 |$LN22@SmartRefle@21|
  01008	00000000	 DCD         |g_pSr|
  0100c		 |$M46951|

			 ENDP  ; |SmartReflex_dump_register_v2|

	EXPORT	|??_C@_1IK@BPJEEHJP@?$AA?$AN?$AA?6?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA_?$AAG?$AAe?$AAt?$AA_?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA_?$AAh?$AAa?$AAn?$AAd@| [ DATA ] ; `string'
	EXPORT	|SmartReflex_Get_functions_hander|
	IMPORT	|dpCurSettings|

  000a8			 AREA	 |.pdata|, PDATA
|$T46978| DCD	|$LN12@SmartRefle@22|
	DCD	0x40002b04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@BPJEEHJP@?$AA?$AN?$AA?6?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA_?$AAG?$AAe?$AAt?$AA_?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA_?$AAh?$AAa?$AAn?$AAd@| DCB 0xd
	DCB	0x0, 0xa, 0x0, "S", 0x0, "m", 0x0, "a", 0x0, "r", 0x0, "t"
	DCB	0x0, "R", 0x0, "e", 0x0, "f", 0x0, "l", 0x0, "e", 0x0, "x"
	DCB	0x0, "_", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "_", 0x0, "f"
	DCB	0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, "s", 0x0, "_", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "S", 0x0, "m", 0x0, "a", 0x0, "r", 0x0, "t"
	DCB	0x0, "R", 0x0, "e", 0x0, "f", 0x0, "l", 0x0, "e", 0x0, "x"
	DCB	0x0, " ", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, ":", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  0100c			 AREA	 |.text|, CODE, ARM

  0100c		 |SmartReflex_Get_functions_hander| PROC

; 584  : {

  0100c		 |$LN12@SmartRefle@22|
  0100c	e1a0c00d	 mov         r12, sp
  01010	e92d0001	 stmdb       sp!, {r0}
  01014	e92d5000	 stmdb       sp!, {r12, lr}
  01018	e24dd010	 sub         sp, sp, #0x10
  0101c		 |$M46975|

; 585  :     SmartReflex_Functions_t* pFunc = NULL;

  0101c	e3a03000	 mov         r3, #0
  01020	e58d3000	 str         r3, [sp]

; 586  : 
; 587  :     switch (Version)

  01024	e59d3018	 ldr         r3, [sp, #0x18]
  01028	e58d3008	 str         r3, [sp, #8]
  0102c	e59d3008	 ldr         r3, [sp, #8]
  01030	e3530001	 cmp         r3, #1
  01034	0a000003	 beq         |$LN3@SmartRefle@22|
  01038	e59d3008	 ldr         r3, [sp, #8]
  0103c	e3530002	 cmp         r3, #2
  01040	0a000003	 beq         |$LN2@SmartRefle@22|
  01044	ea000005	 b           |$LN1@SmartRefle@22|
  01048		 |$LN3@SmartRefle@22|

; 588  :     {
; 589  :         case 1:
; 590  :             pFunc = &SmartReflex_Functions_v1;

  01048	e59f3064	 ldr         r3, [pc, #0x64]
  0104c	e58d3000	 str         r3, [sp]

; 591  :             break;

  01050	ea00000e	 b           |$LN4@SmartRefle@22|
  01054		 |$LN2@SmartRefle@22|

; 592  : 			
; 593  :         case 2:
; 594  :             pFunc = &SmartReflex_Functions_v2;

  01054	e59f3054	 ldr         r3, [pc, #0x54]
  01058	e58d3000	 str         r3, [sp]

; 595  :             break;

  0105c	ea00000b	 b           |$LN4@SmartRefle@22|
  01060		 |$LN1@SmartRefle@22|

; 596  : 			
; 597  :         default:
; 598  :             OALMSG( OAL_ERROR, (L"\r\nSmartReflex_Get_functions_hander: Invalid SmartReflex version:%d\r\n", Version));

  01060	e59f3044	 ldr         r3, [pc, #0x44]
  01064	e5933440	 ldr         r3, [r3, #0x440]
  01068	e3130001	 tst         r3, #1
  0106c	0a000005	 beq         |$LN8@SmartRefle@22|
  01070	e59d1018	 ldr         r1, [sp, #0x18]
  01074	e59f002c	 ldr         r0, [pc, #0x2C]
  01078	eb000000	 bl          NKDbgPrintfW
  0107c	e3a03001	 mov         r3, #1
  01080	e58d300c	 str         r3, [sp, #0xC]
  01084	ea000001	 b           |$LN9@SmartRefle@22|
  01088		 |$LN8@SmartRefle@22|
  01088	e3a03000	 mov         r3, #0
  0108c	e58d300c	 str         r3, [sp, #0xC]
  01090		 |$LN9@SmartRefle@22|
  01090		 |$LN4@SmartRefle@22|

; 599  :             break;
; 600  :     }
; 601  :     return (pFunc);

  01090	e59d3000	 ldr         r3, [sp]
  01094	e58d3004	 str         r3, [sp, #4]

; 602  : }

  01098	e59d0004	 ldr         r0, [sp, #4]
  0109c	e28dd010	 add         sp, sp, #0x10
  010a0	e89d6000	 ldmia       sp, {sp, lr}
  010a4	e12fff1e	 bx          lr
  010a8		 |$LN13@SmartRefle@22|
  010a8		 |$LN14@SmartRefle@22|
  010a8	00000000	 DCD         |??_C@_1IK@BPJEEHJP@?$AA?$AN?$AA?6?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA_?$AAG?$AAe?$AAt?$AA_?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA_?$AAh?$AAa?$AAn?$AAd@|
  010ac		 |$LN15@SmartRefle@22|
  010ac	00000000	 DCD         |dpCurSettings|
  010b0		 |$LN16@SmartRefle@22|
  010b0	00000000	 DCD         |SmartReflex_Functions_v2|
  010b4		 |$LN17@SmartRefle@22|
  010b4	00000000	 DCD         |SmartReflex_Functions_v1|
  010b8		 |$M46976|

			 ENDP  ; |SmartReflex_Get_functions_hander|

	END
