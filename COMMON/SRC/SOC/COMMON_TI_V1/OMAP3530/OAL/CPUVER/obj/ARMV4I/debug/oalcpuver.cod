; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\OMAP3530\OAL\CPUVER\oalcpuver.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|OMAPCpuInfo| [ DATA ]
	EXPORT	|CPUMaxSpeed| [ DATA ]

  00000			 AREA	 |.data|, DATA
|OMAPCpuInfo| DCW 0x3530
	DCW	0xb7ae
	DCW	0x0
	DCW	0xc00
	DCW	0x3525
	DCW	0xb7ae
	DCW	0x0
	DCW	0x4c00
	DCW	0x3515
	DCW	0xb7ae
	DCW	0x0
	DCW	0x1c00
	DCW	0x3503
	DCW	0xb7ae
	DCW	0x0
	DCW	0x5c00
	DCW	0x3730
	DCW	0xb891
	DCW	0x1
	DCW	0xc00
	DCW	0x3725
	DCW	0xb891
	DCW	0x1
	DCW	0x4c00
	DCW	0x3715
	DCW	0xb891
	DCW	0x1
	DCW	0x1c00
	DCW	0x3703
	DCW	0xb891
	DCW	0x1
	DCW	0x5c00
	DCW	0x0
	DCW	0x0
	DCW	0x0
	DCW	0x0
|CPUMaxSpeed| DCD 0x2d0
	DCD	0x3e8
	DCD	0x2d0
	DCD	0x0

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|Get_CPUVersion|
	IMPORT	|OALPAtoVA|

  00000			 AREA	 |.pdata|, PDATA
|$T45324| DCD	|$LN29@Get_CPUVer|
	DCD	0x4000d602
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\oal\cpuver\oalcpuver.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |Get_CPUVersion| PROC

; 53   : {

  00000		 |$LN29@Get_CPUVer|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd02c	 sub         sp, sp, #0x2C
  00008		 |$M45321|

; 54   :     //----------------------------------------------------------------------
; 55   :     // Determion CPU revison
; 56   :     //----------------------------------------------------------------------
; 57   :     UINT32 hawkeye_id, dwOmapFeature;
; 58   :     UINT8 version;
; 59   :     UINT32 CpuRevision;
; 60   :     OMAP_SYSC_GENERAL_REGS * pSyscGeneralRegs = OALPAtoUA(OMAP_SYSC_GENERAL_REGS_PA);

  00008	e3a01000	 mov         r1, #0
  0000c	e59f0340	 ldr         r0, [pc, #0x340]
  00010	eb000000	 bl          OALPAtoVA
  00014	e58d001c	 str         r0, [sp, #0x1C]
  00018	e59d301c	 ldr         r3, [sp, #0x1C]
  0001c	e58d3014	 str         r3, [sp, #0x14]

; 61   :     chip_info_tag *chip_info = OMAPCpuInfo;

  00020	e59f3328	 ldr         r3, [pc, #0x328]
  00024	e58d3010	 str         r3, [sp, #0x10]

; 62   : 
; 63   :     hawkeye_id = (INREG32(OALPAtoUA(OMAP_IDCODE_REGS_PA)) & 0xFFFFF000) ;

  00028	e3a01000	 mov         r1, #0
  0002c	e59f0318	 ldr         r0, [pc, #0x318]
  00030	eb000000	 bl          OALPAtoVA
  00034	e58d0020	 str         r0, [sp, #0x20]
  00038	e59d3020	 ldr         r3, [sp, #0x20]
  0003c	e5932000	 ldr         r2, [r3]
  00040	e3e03c0f	 mvn         r3, #0xF, 24
  00044	e22330ff	 eor         r3, r3, #0xFF
  00048	e0023003	 and         r3, r2, r3
  0004c	e58d3008	 str         r3, [sp, #8]

; 64   :     
; 65   :     switch ( hawkeye_id )

  00050	e59d3008	 ldr         r3, [sp, #8]
  00054	e58d3024	 str         r3, [sp, #0x24]
  00058	e59d2024	 ldr         r2, [sp, #0x24]
  0005c	e3a0356e	 mov         r3, #0x6E, 10
  00060	e3833a91	 orr         r3, r3, #0x91, 20
  00064	e1520003	 cmp         r2, r3
  00068	8a00001f	 bhi         |$LN24@Get_CPUVer|
  0006c	e59d2024	 ldr         r2, [sp, #0x24]
  00070	e3a0356e	 mov         r3, #0x6E, 10
  00074	e3833a91	 orr         r3, r3, #0x91, 20
  00078	e1520003	 cmp         r2, r3
  0007c	0a000052	 beq         |$LN13@Get_CPUVer|
  00080	e59d2024	 ldr         r2, [sp, #0x24]
  00084	e3a0352e	 mov         r3, #0x2E, 10
  00088	e3833a91	 orr         r3, r3, #0x91, 20
  0008c	e1520003	 cmp         r2, r3
  00090	8a00000f	 bhi         |$LN25@Get_CPUVer|
  00094	e59d2024	 ldr         r2, [sp, #0x24]
  00098	e3a0352e	 mov         r3, #0x2E, 10
  0009c	e3833a91	 orr         r3, r3, #0x91, 20
  000a0	e1520003	 cmp         r2, r3
  000a4	0a000043	 beq         |$LN14@Get_CPUVer|
  000a8	e59d2024	 ldr         r2, [sp, #0x24]
  000ac	e3a036b6	 mov         r3, #0xB6, 12
  000b0	e3833ad6	 orr         r3, r3, #0xD6, 20
  000b4	e1520003	 cmp         r2, r3
  000b8	0a000025	 beq         |$LN19@Get_CPUVer|
  000bc	e59d2024	 ldr         r2, [sp, #0x24]
  000c0	e3a036b7	 mov         r3, #0xB7, 12
  000c4	e3833aae	 orr         r3, r3, #0xAE, 20
  000c8	e1520003	 cmp         r2, r3
  000cc	0a000025	 beq         |$LN18@Get_CPUVer|
  000d0	ea000049	 b           |$LN11@Get_CPUVer|
  000d4		 |$LN25@Get_CPUVer|
  000d4	e59d2024	 ldr         r2, [sp, #0x24]
  000d8	e3a0356e	 mov         r3, #0x6E, 10
  000dc	e2433a52	 sub         r3, r3, #0x52, 20
  000e0	e1520003	 cmp         r2, r3
  000e4	0a00001f	 beq         |$LN18@Get_CPUVer|
  000e8	ea000043	 b           |$LN11@Get_CPUVer|
  000ec		 |$LN24@Get_CPUVer|
  000ec	e59d2024	 ldr         r2, [sp, #0x24]
  000f0	e3a035ee	 mov         r3, #0xEE, 10
  000f4	e2433a52	 sub         r3, r3, #0x52, 20
  000f8	e1520003	 cmp         r2, r3
  000fc	8a00000f	 bhi         |$LN26@Get_CPUVer|
  00100	e59d2024	 ldr         r2, [sp, #0x24]
  00104	e3a035ee	 mov         r3, #0xEE, 10
  00108	e2433a52	 sub         r3, r3, #0x52, 20
  0010c	e1520003	 cmp         r2, r3
  00110	0a00001e	 beq         |$LN16@Get_CPUVer|
  00114	e59d2024	 ldr         r2, [sp, #0x24]
  00118	e3a035ae	 mov         r3, #0xAE, 10
  0011c	e2433a52	 sub         r3, r3, #0x52, 20
  00120	e1520003	 cmp         r2, r3
  00124	0a000014	 beq         |$LN17@Get_CPUVer|
  00128	e59d2024	 ldr         r2, [sp, #0x24]
  0012c	e3a035ae	 mov         r3, #0xAE, 10
  00130	e3833a91	 orr         r3, r3, #0x91, 20
  00134	e1520003	 cmp         r2, r3
  00138	0a000029	 beq         |$LN12@Get_CPUVer|
  0013c	ea00002e	 b           |$LN11@Get_CPUVer|
  00140		 |$LN26@Get_CPUVer|
  00140	e59d2024	 ldr         r2, [sp, #0x24]
  00144	e59f31fc	 ldr         r3, [pc, #0x1FC]
  00148	e1520003	 cmp         r2, r3
  0014c	0a000014	 beq         |$LN15@Get_CPUVer|
  00150	ea000029	 b           |$LN11@Get_CPUVer|
  00154		 |$LN19@Get_CPUVer|

; 66   :     {
; 67   :         case 0x0B6D6000:
; 68   :             CpuRevision = CPU_FAMILY_OMAP35XX_REVISION_ES_1_0;

  00154	e3a03000	 mov         r3, #0
  00158	e58d3000	 str         r3, [sp]

; 69   :             version = 0;

  0015c	e3a03000	 mov         r3, #0
  00160	e5cd300c	 strb        r3, [sp, #0xC]

; 70   :         break;

  00164	ea000028	 b           |$LN20@Get_CPUVer|
  00168		 |$LN18@Get_CPUVer|

; 71   : 
; 72   :         case 0x0B7AE000:
; 73   :         case 0x1B7AE000:	// ES2.0 
; 74   :             CpuRevision = CPU_FAMILY_OMAP35XX_REVISION_ES_2_0;

  00168	e3a03001	 mov         r3, #1
  0016c	e58d3000	 str         r3, [sp]

; 75   :             version = 1;

  00170	e3a03001	 mov         r3, #1
  00174	e5cd300c	 strb        r3, [sp, #0xC]

; 76   :         break;

  00178	ea000023	 b           |$LN20@Get_CPUVer|
  0017c		 |$LN17@Get_CPUVer|

; 77   : 
; 78   :         case 0x2B7AE000:	// ES2.1
; 79   :             CpuRevision = CPU_FAMILY_OMAP35XX_REVISION_ES_2_1;

  0017c	e3a03002	 mov         r3, #2
  00180	e58d3000	 str         r3, [sp]

; 80   :             version = 2;

  00184	e3a03002	 mov         r3, #2
  00188	e5cd300c	 strb        r3, [sp, #0xC]

; 81   :         break;

  0018c	ea00001e	 b           |$LN20@Get_CPUVer|
  00190		 |$LN16@Get_CPUVer|

; 82   : 
; 83   :         case 0x3B7AE000:	// ES3.0
; 84   :             CpuRevision = CPU_FAMILY_OMAP35XX_REVISION_ES_3_0;

  00190	e3a03005	 mov         r3, #5
  00194	e58d3000	 str         r3, [sp]

; 85   :             version = 5;

  00198	e3a03005	 mov         r3, #5
  0019c	e5cd300c	 strb        r3, [sp, #0xC]

; 86   :         break;

  001a0	ea000019	 b           |$LN20@Get_CPUVer|
  001a4		 |$LN15@Get_CPUVer|

; 87   : 
; 88   :         case 0x4B7AE000:
; 89   :             CpuRevision = CPU_FAMILY_OMAP35XX_REVISION_ES_3_1;

  001a4	e3a03006	 mov         r3, #6
  001a8	e58d3000	 str         r3, [sp]

; 90   :             version = 6;

  001ac	e3a03006	 mov         r3, #6
  001b0	e5cd300c	 strb        r3, [sp, #0xC]

; 91   :         break;

  001b4	ea000014	 b           |$LN20@Get_CPUVer|
  001b8		 |$LN14@Get_CPUVer|

; 92   : 
; 93   :         case 0x0B891000:
; 94   :             CpuRevision = CPU_FAMILY_DM37XX_REVISION_ES_1_0;

  001b8	e3a03e11	 mov         r3, #0x11, 28
  001bc	e58d3000	 str         r3, [sp]

; 95   :             version = 0;

  001c0	e3a03000	 mov         r3, #0
  001c4	e5cd300c	 strb        r3, [sp, #0xC]

; 96   :         break;

  001c8	ea00000f	 b           |$LN20@Get_CPUVer|
  001cc		 |$LN13@Get_CPUVer|

; 97   : 
; 98   :         case 0x1B891000:
; 99   :             CpuRevision = CPU_FAMILY_DM37XX_REVISION_ES_1_1;

  001cc	e3a03c01	 mov         r3, #1, 24
  001d0	e3833011	 orr         r3, r3, #0x11
  001d4	e58d3000	 str         r3, [sp]

; 100  :             version = 1;

  001d8	e3a03001	 mov         r3, #1
  001dc	e5cd300c	 strb        r3, [sp, #0xC]

; 101  :         break;

  001e0	ea000009	 b           |$LN20@Get_CPUVer|
  001e4		 |$LN12@Get_CPUVer|

; 102  : 
; 103  :         case 0x2B891000:
; 104  :             CpuRevision = CPU_FAMILY_DM37XX_REVISION_ES_1_2;

  001e4	e3a03c01	 mov         r3, #1, 24
  001e8	e3833012	 orr         r3, r3, #0x12
  001ec	e58d3000	 str         r3, [sp]

; 105  :             version = 2;

  001f0	e3a03002	 mov         r3, #2
  001f4	e5cd300c	 strb        r3, [sp, #0xC]

; 106  :         break;

  001f8	ea000003	 b           |$LN20@Get_CPUVer|
  001fc		 |$LN11@Get_CPUVer|

; 107  : 
; 108  :         default:
; 109  :             CpuRevision = (UINT32)CPU_REVISION_UNKNOWN;

  001fc	e3e03000	 mvn         r3, #0
  00200	e58d3000	 str         r3, [sp]

; 110  :             version = 0xFF;

  00204	e3a030ff	 mov         r3, #0xFF
  00208	e5cd300c	 strb        r3, [sp, #0xC]
  0020c		 |$LN20@Get_CPUVer|

; 111  :         break;
; 112  :     }  
; 113  : 
; 114  : #if 0 /* uncomment this code if using older revs of OMAP35XX Silicon */
; 115  :     if (((CpuRevision >> CPU_FAMILY_SHIFT) & CPU_REVISION_MASK) == CPU_FAMILY_OMAP35XX)
; 116  :     {
; 117  :         // Some ES2.1 silicon has incorrectly burned fuses indicating a different revision
; 118  :         // Read the CRC in public ROM area to distinguish between revisions
; 119  :         switch (INREG32(OALPAtoUA(PUBLIC_ROM_CRC_PA)))
; 120  :         {
; 121  :             case PUBLIC_ROM_CRC_ES2_0:
; 122  :             // CRC indicates this is ES2.0
; 123  :             if (version != 1)
; 124  :             {
; 125  :                 // Id register indicated this was some other rev, indicate ES2.0 with wrong Id
; 126  :                 CpuRevision = CPU_FAMILY_OMAP35XX_REVISION_ES_2_0_CRC;
; 127  :                 version = 3;
; 128  :             }
; 129  :             break;
; 130  :     
; 131  :             case PUBLIC_ROM_CRC_ES2_1:
; 132  :             // CRC indicates this is ES2.1
; 133  :             if (version < 2)
; 134  :             {
; 135  :                 // Id register indicated this was some other rev, indicate ES2.1 with wrong Id
; 136  :                 CpuRevision = CPU_FAMILY_OMAP35XX_REVISION_ES_2_1_CRC;
; 137  :                 version = 4;
; 138  :             }
; 139  :             break;
; 140  :     
; 141  :             default:
; 142  :             break;
; 143  :         }          
; 144  :     }
; 145  : #endif
; 146  : 
; 147  :     /* If only the version is unknown, determine the family and use future for version number */
; 148  :     if (CpuRevision == (UINT32)CPU_REVISION_UNKNOWN)

  0020c	e59d3000	 ldr         r3, [sp]
  00210	e3730001	 cmn         r3, #1
  00214	1a00001a	 bne         |$LN10@Get_CPUVer|

; 149  :     {
; 150  :         switch (hawkeye_id & 0x0FFFF000)

  00218	e59d2008	 ldr         r2, [sp, #8]
  0021c	e3e032ff	 mvn         r3, #0xFF, 4
  00220	e2233eff	 eor         r3, r3, #0xFF, 28
  00224	e0023003	 and         r3, r2, r3
  00228	e58d3028	 str         r3, [sp, #0x28]
  0022c	e59d2028	 ldr         r2, [sp, #0x28]
  00230	e3a036b6	 mov         r3, #0xB6, 12
  00234	e3833ad6	 orr         r3, r3, #0xD6, 20
  00238	e1520003	 cmp         r2, r3
  0023c	0a00000a	 beq         |$LN7@Get_CPUVer|
  00240	e59d2028	 ldr         r2, [sp, #0x28]
  00244	e3a036b7	 mov         r3, #0xB7, 12
  00248	e3833aae	 orr         r3, r3, #0xAE, 20
  0024c	e1520003	 cmp         r2, r3
  00250	0a000005	 beq         |$LN7@Get_CPUVer|
  00254	e59d2028	 ldr         r2, [sp, #0x28]
  00258	e3a0352e	 mov         r3, #0x2E, 10
  0025c	e3833a91	 orr         r3, r3, #0x91, 20
  00260	e1520003	 cmp         r2, r3
  00264	0a000003	 beq         |$LN6@Get_CPUVer|
  00268	ea000005	 b           |$LN8@Get_CPUVer|
  0026c		 |$LN7@Get_CPUVer|

; 151  :         {
; 152  :             case 0x0B6D6000:
; 153  :             case 0x0B7AE000:
; 154  :                 CpuRevision = CPU_FAMILY_OMAP35XX_REVISION_ES_FUTURE;

  0026c	e3a030fe	 mov         r3, #0xFE
  00270	e58d3000	 str         r3, [sp]

; 155  :             break;

  00274	ea000002	 b           |$LN8@Get_CPUVer|
  00278		 |$LN6@Get_CPUVer|

; 156  : 
; 157  :             
; 158  :             case 0x0B891000:
; 159  :                 CpuRevision = CPU_FAMILY_DM37XX_REVISION_ES_FUTURE;                

  00278	e3a03c01	 mov         r3, #1, 24
  0027c	e38330ff	 orr         r3, r3, #0xFF
  00280	e58d3000	 str         r3, [sp]
  00284		 |$LN8@Get_CPUVer|
  00284		 |$LN10@Get_CPUVer|

; 160  :             break;            
; 161  :         }
; 162  :     }
; 163  : 
; 164  :     /* get chip id  for 3517 chips */
; 165  :     if((CpuRevision & 0xff00) == (CPU_FAMILY_AM35XX << CPU_FAMILY_SHIFT))

  00284	e59d3000	 ldr         r3, [sp]
  00288	e2033cff	 and         r3, r3, #0xFF, 24
  0028c	e3530c02	 cmp         r3, #2, 24
  00290	1a000005	 bne         |$LN5@Get_CPUVer|

; 166  :     {
; 167  :         CpuRevision |= (CPU_AM3517 << CHIP_ID_SHIFT);

  00294	e59d2000	 ldr         r2, [sp]
  00298	e3a03435	 mov         r3, #0x35, 8
  0029c	e3833817	 orr         r3, r3, #0x17, 16
  002a0	e1823003	 orr         r3, r2, r3
  002a4	e58d3000	 str         r3, [sp]

; 168  :     }
; 169  :     else

  002a8	ea000020	 b           |$LN4@Get_CPUVer|
  002ac		 |$LN5@Get_CPUVer|

; 170  :     {
; 171  :         dwOmapFeature = INREG32(&pSyscGeneralRegs->zzzReserved11[0]) & CHIP_FEATURE_MASK;

  002ac	e59d3014	 ldr         r3, [sp, #0x14]
  002b0	e2833f77	 add         r3, r3, #0x77, 30
  002b4	e5933000	 ldr         r3, [r3]
  002b8	e2033b1f	 and         r3, r3, #0x1F, 22
  002bc	e58d3004	 str         r3, [sp, #4]
  002c0		 |$LN3@Get_CPUVer|

; 172  :         while(chip_info->chip_id != 0)    

  002c0	e59d3010	 ldr         r3, [sp, #0x10]
  002c4	e1d330b0	 ldrh        r3, [r3]
  002c8	e3530000	 cmp         r3, #0
  002cc	0a000017	 beq         |$LN2@Get_CPUVer|

; 173  :         {
; 174  :             if((chip_info->family == CPU_FAMILY(CpuRevision)) &&
; 175  :                 (chip_info->feature == dwOmapFeature)
; 176  :               )

  002d0	e59d3010	 ldr         r3, [sp, #0x10]
  002d4	e2833004	 add         r3, r3, #4
  002d8	e1d320b0	 ldrh        r2, [r3]
  002dc	e59d3000	 ldr         r3, [sp]
  002e0	e1a03803	 mov         r3, r3, lsl #16
  002e4	e1a03c23	 mov         r3, r3, lsr #24
  002e8	e1520003	 cmp         r2, r3
  002ec	1a00000b	 bne         |$LN1@Get_CPUVer|
  002f0	e59d3010	 ldr         r3, [sp, #0x10]
  002f4	e2833006	 add         r3, r3, #6
  002f8	e1d320b0	 ldrh        r2, [r3]
  002fc	e59d3004	 ldr         r3, [sp, #4]
  00300	e1520003	 cmp         r2, r3
  00304	1a000005	 bne         |$LN1@Get_CPUVer|

; 177  :             {
; 178  :                  CpuRevision |= (chip_info->chip_id << CHIP_ID_SHIFT);

  00308	e59d3010	 ldr         r3, [sp, #0x10]
  0030c	e1d330b0	 ldrh        r3, [r3]
  00310	e1a02803	 mov         r2, r3, lsl #16
  00314	e59d3000	 ldr         r3, [sp]
  00318	e1833002	 orr         r3, r3, r2
  0031c	e58d3000	 str         r3, [sp]
  00320		 |$LN1@Get_CPUVer|

; 179  :             }
; 180  : 	     chip_info++;

  00320	e59d3010	 ldr         r3, [sp, #0x10]
  00324	e2833008	 add         r3, r3, #8
  00328	e58d3010	 str         r3, [sp, #0x10]

; 181  :         }

  0032c	eaffffe3	 b           |$LN3@Get_CPUVer|
  00330		 |$LN2@Get_CPUVer|
  00330		 |$LN4@Get_CPUVer|

; 182  :     }
; 183  : 	
; 184  :     return (CpuRevision);

  00330	e59d3000	 ldr         r3, [sp]
  00334	e58d3018	 str         r3, [sp, #0x18]

; 185  : }

  00338	e59d0018	 ldr         r0, [sp, #0x18]
  0033c	e28dd02c	 add         sp, sp, #0x2C
  00340	e49de004	 ldr         lr, [sp], #4
  00344	e12fff1e	 bx          lr
  00348		 |$LN30@Get_CPUVer|
  00348		 |$LN31@Get_CPUVer|
  00348	4b7ae000	 DCD         0x4b7ae000
  0034c		 |$LN32@Get_CPUVer|
  0034c	4830a204	 DCD         0x4830a204
  00350		 |$LN33@Get_CPUVer|
  00350	00000000	 DCD         |OMAPCpuInfo|
  00354		 |$LN34@Get_CPUVer|
  00354	48002270	 DCD         0x48002270
  00358		 |$M45322|

			 ENDP  ; |Get_CPUVersion|

	EXPORT	|Get_CPUMaxSpeed|

  00008			 AREA	 |.pdata|, PDATA
|$T45335| DCD	|$LN6@Get_CPUMax|
	DCD	0x40001704
; Function compile flags: /Odtp

  00358			 AREA	 |.text|, CODE, ARM

  00358		 |Get_CPUMaxSpeed| PROC

; 197  : {

  00358		 |$LN6@Get_CPUMax|
  00358	e1a0c00d	 mov         r12, sp
  0035c	e92d0001	 stmdb       sp!, {r0}
  00360	e92d5000	 stmdb       sp!, {r12, lr}
  00364	e24dd008	 sub         sp, sp, #8
  00368		 |$M45332|

; 198  :     UINT32 speed=0;

  00368	e3a03000	 mov         r3, #0
  0036c	e58d3000	 str         r3, [sp]

; 199  : 	
; 200  :     if(VALID_CPU_FAMILY(cpu_family))

  00370	e59d3010	 ldr         r3, [sp, #0x10]
  00374	e3530003	 cmp         r3, #3
  00378	2a000006	 bcs         |$LN1@Get_CPUMax|

; 201  :     {
; 202  :         speed = CPUMaxSpeed[cpu_family];

  0037c	e59d1010	 ldr         r1, [sp, #0x10]
  00380	e3a03004	 mov         r3, #4
  00384	e0020391	 mul         r2, r1, r3
  00388	e59f3020	 ldr         r3, [pc, #0x20]
  0038c	e0833002	 add         r3, r3, r2
  00390	e5933000	 ldr         r3, [r3]
  00394	e58d3000	 str         r3, [sp]
  00398		 |$LN1@Get_CPUMax|

; 203  :     }
; 204  :     return (speed);

  00398	e59d3000	 ldr         r3, [sp]
  0039c	e58d3004	 str         r3, [sp, #4]

; 205  : }

  003a0	e59d0004	 ldr         r0, [sp, #4]
  003a4	e28dd008	 add         sp, sp, #8
  003a8	e89d6000	 ldmia       sp, {sp, lr}
  003ac	e12fff1e	 bx          lr
  003b0		 |$LN7@Get_CPUMax|
  003b0		 |$LN8@Get_CPUMax|
  003b0	00000000	 DCD         |CPUMaxSpeed|
  003b4		 |$M45333|

			 ENDP  ; |Get_CPUMaxSpeed|

	END
