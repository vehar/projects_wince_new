; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\OMAP3530\SDHC\sdhc.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|SocSdhcDevconf|
	IMPORT	|MmUnmapIoSpace|
	IMPORT	|Sleep|
	IMPORT	|MmMapIoSpace|
	IMPORT	|KernelIoControl|

  00000			 AREA	 |.pdata|, PDATA
|$T46291| DCD	|$LN18@SocSdhcDev|
	DCD	0x40008604
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\sdhc\sdhc.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SocSdhcDevconf| PROC

; 36   : {

  00000		 |$LN18@SocSdhcDev|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd028	 sub         sp, sp, #0x28
  00010		 |$M46288|

; 37   :     OMAP_SYSC_GENERAL_REGS* pSyscGeneralRegs = NULL;

  00010	e3a03000	 mov         r3, #0
  00014	e58d3014	 str         r3, [sp, #0x14]

; 38   : 	DWORD dwCPURev = (DWORD)CPU_REVISION_UNKNOWN;

  00018	e3e03000	 mvn         r3, #0
  0001c	e58d3010	 str         r3, [sp, #0x10]

; 39   : 
; 40   : #ifdef BOOT_MODE
; 41   : 	dwCPURev = m_dwCPURev;
; 42   :     pSyscGeneralRegs = OALPAtoUA(OMAP_SYSC_GENERAL_REGS_PA);
; 43   : #else
; 44   : 	
; 45   : 	PHYSICAL_ADDRESS pa;
; 46   : 	pa.QuadPart = (LONGLONG)OMAP_SYSC_GENERAL_REGS_PA;

  00020	e59f31ec	 ldr         r3, [pc, #0x1EC]
  00024	e58d3008	 str         r3, [sp, #8]
  00028	e3a03000	 mov         r3, #0
  0002c	e58d300c	 str         r3, [sp, #0xC]

; 47   : 
; 48   : 	// Retrieve CPU revision
; 49   : 	KernelIoControl(IOCTL_HAL_GET_CPUREVISION, NULL, 0, &dwCPURev, sizeof(dwCPURev), NULL);

  00030	e3a03000	 mov         r3, #0
  00034	e58d3004	 str         r3, [sp, #4]
  00038	e3a03004	 mov         r3, #4
  0003c	e58d3000	 str         r3, [sp]
  00040	e28d3010	 add         r3, sp, #0x10
  00044	e3a02000	 mov         r2, #0
  00048	e3a01000	 mov         r1, #0
  0004c	e59f01bc	 ldr         r0, [pc, #0x1BC]
  00050	eb000000	 bl          KernelIoControl

; 50   : 
; 51   : 	// Map the System Control Module registers
; 52   : 	pSyscGeneralRegs = (OMAP_SYSC_GENERAL_REGS*)MmMapIoSpace(pa, sizeof(OMAP_SYSC_GENERAL_REGS), FALSE);

  00054	e3a03000	 mov         r3, #0
  00058	e3a02fb5	 mov         r2, #0xB5, 30
  0005c	e59d0008	 ldr         r0, [sp, #8]
  00060	e59d100c	 ldr         r1, [sp, #0xC]
  00064	eb000000	 bl          MmMapIoSpace
  00068	e58d0024	 str         r0, [sp, #0x24]
  0006c	e59d3024	 ldr         r3, [sp, #0x24]
  00070	e58d3014	 str         r3, [sp, #0x14]

; 53   : 	if (pSyscGeneralRegs == NULL)

  00074	e59d3014	 ldr         r3, [sp, #0x14]
  00078	e3530000	 cmp         r3, #0
  0007c	1a000000	 bne         |$LN13@SocSdhcDev|

; 54   : 	{
; 55   : 		return;

  00080	ea00005f	 b           |$LN14@SocSdhcDev|
  00084		 |$LN13@SocSdhcDev|

; 56   : 	}
; 57   : #endif
; 58   :  
; 59   :     // prepare power change
; 60   :     if (dwSlot == MMCSLOT_1)

  00084	e59d3030	 ldr         r3, [sp, #0x30]
  00088	e3530001	 cmp         r3, #1
  0008c	1a000008	 bne         |$LN12@SocSdhcDev|

; 61   :     {
; 62   :         // Make sure VDDS stable bit is cleared before enabling the power for slot1
; 63   : 		CLRREG32(&pSyscGeneralRegs->CONTROL_PBIAS_LITE, (PBIASLITEVMODE0|PBIASLITEPWRDNZ0));

  00090	e59d3014	 ldr         r3, [sp, #0x14]
  00094	e2833e2b	 add         r3, r3, #0x2B, 28
  00098	e5932000	 ldr         r2, [r3]
  0009c	e3e03003	 mvn         r3, #3
  000a0	e0022003	 and         r2, r2, r3
  000a4	e59d3014	 ldr         r3, [sp, #0x14]
  000a8	e2833e2b	 add         r3, r3, #0x2B, 28
  000ac	e5832000	 str         r2, [r3]
  000b0	ea000012	 b           |$LN11@SocSdhcDev|
  000b4		 |$LN12@SocSdhcDev|

; 64   :     } 
; 65   :     else if (dwSlot == MMCSLOT_2)

  000b4	e59d3030	 ldr         r3, [sp, #0x30]
  000b8	e3530002	 cmp         r3, #2
  000bc	1a00000f	 bne         |$LN10@SocSdhcDev|

; 66   :     {
; 67   : 		CLRREG32(&pSyscGeneralRegs->CONTROL_PBIAS_LITE, PBIASLITEPWRDNZ0);

  000c0	e59d3014	 ldr         r3, [sp, #0x14]
  000c4	e2833e2b	 add         r3, r3, #0x2B, 28
  000c8	e5932000	 ldr         r2, [r3]
  000cc	e3e03002	 mvn         r3, #2
  000d0	e0022003	 and         r2, r2, r3
  000d4	e59d3014	 ldr         r3, [sp, #0x14]
  000d8	e2833e2b	 add         r3, r3, #0x2B, 28
  000dc	e5832000	 str         r2, [r3]

; 68   : 		CLRREG32(&pSyscGeneralRegs->CONTROL_DEVCONF1, DEVCONF1_MMCSDIO2ADPCLKISEL);

  000e0	e59d3014	 ldr         r3, [sp, #0x14]
  000e4	e2833068	 add         r3, r3, #0x68
  000e8	e5932000	 ldr         r2, [r3]
  000ec	e3e03040	 mvn         r3, #0x40
  000f0	e0022003	 and         r2, r2, r3
  000f4	e59d3014	 ldr         r3, [sp, #0x14]
  000f8	e2833068	 add         r3, r3, #0x68
  000fc	e5832000	 str         r2, [r3]
  00100		 |$LN10@SocSdhcDev|
  00100		 |$LN11@SocSdhcDev|

; 69   :     }
; 70   : 
; 71   :     // post power change    
; 72   :     if (dwSlot == MMCSLOT_1)

  00100	e59d3030	 ldr         r3, [sp, #0x30]
  00104	e3530001	 cmp         r3, #1
  00108	1a000027	 bne         |$LN9@SocSdhcDev|

; 73   :     {
; 74   :         UINT32 dwPBiasValue = DEFAULT_PBIAS_VALUE;

  0010c	e3a03003	 mov         r3, #3
  00110	e58d3018	 str         r3, [sp, #0x18]

; 75   : 
; 76   :         if (dwCPURev == 1)   // ES 1.0

  00114	e59d3010	 ldr         r3, [sp, #0x10]
  00118	e3530001	 cmp         r3, #1
  0011c	1a000002	 bne         |$LN8@SocSdhcDev|

; 77   : 		{
; 78   :             dwPBiasValue = (PBIASLITEVMODE0|PBIASLITEPWRDNZ0);

  00120	e3a03003	 mov         r3, #3
  00124	e58d3018	 str         r3, [sp, #0x18]
  00128	ea00000d	 b           |$LN7@SocSdhcDev|
  0012c		 |$LN8@SocSdhcDev|

; 79   : 		}
; 80   :         else if (dwCPURev == 2) // ES 2.0

  0012c	e59d3010	 ldr         r3, [sp, #0x10]
  00130	e3530002	 cmp         r3, #2
  00134	1a000002	 bne         |$LN6@SocSdhcDev|

; 81   : 		{
; 82   :             dwPBiasValue = PBIASLITEPWRDNZ0;

  00138	e3a03002	 mov         r3, #2
  0013c	e58d3018	 str         r3, [sp, #0x18]
  00140	ea000007	 b           |$LN5@SocSdhcDev|
  00144		 |$LN6@SocSdhcDev|

; 83   : 		}
; 84   :         else if (dwCPURev == 3) // ES 2.1

  00144	e59d3010	 ldr         r3, [sp, #0x10]
  00148	e3530003	 cmp         r3, #3
  0014c	1a000002	 bne         |$LN4@SocSdhcDev|

; 85   : 		{
; 86   : #ifdef MMCHS1_LOW_VOLTAGE
; 87   :             dwPBiasValue = PBIASLITEPWRDNZ0;
; 88   : #else
; 89   : 			dwPBiasValue = (PBIASLITEVMODE0|PBIASLITEPWRDNZ0);

  00150	e3a03003	 mov         r3, #3
  00154	e58d3018	 str         r3, [sp, #0x18]

; 90   : #endif
; 91   : 		}
; 92   :         else

  00158	ea000001	 b           |$LN3@SocSdhcDev|
  0015c		 |$LN4@SocSdhcDev|

; 93   : 		{
; 94   :             dwPBiasValue = DEFAULT_PBIAS_VALUE;

  0015c	e3a03003	 mov         r3, #3
  00160	e58d3018	 str         r3, [sp, #0x18]
  00164		 |$LN3@SocSdhcDev|
  00164		 |$LN5@SocSdhcDev|
  00164		 |$LN7@SocSdhcDev|

; 95   : 		}
; 96   : 
; 97   : #ifdef BOOT_MODE
; 98   :         OALStall(100 * 1000);
; 99   : #else
; 100  : 		Sleep(100);	

  00164	e3a00064	 mov         r0, #0x64
  00168	eb000000	 bl          Sleep

; 101  : #endif
; 102  :         // Workaround to make the MMC slot 1 work
; 103  : 		SETREG32(&pSyscGeneralRegs->CONTROL_PBIAS_LITE, dwPBiasValue);

  0016c	e59d3014	 ldr         r3, [sp, #0x14]
  00170	e2833e2b	 add         r3, r3, #0x2B, 28
  00174	e5932000	 ldr         r2, [r3]
  00178	e59d3018	 ldr         r3, [sp, #0x18]
  0017c	e1822003	 orr         r2, r2, r3
  00180	e59d3014	 ldr         r3, [sp, #0x14]
  00184	e2833e2b	 add         r3, r3, #0x2B, 28
  00188	e5832000	 str         r2, [r3]

; 104  : 		SETREG32(&pSyscGeneralRegs->CONTROL_DEVCONF1, (1 << 24));	// Undocumented bit in the datasheet

  0018c	e59d3014	 ldr         r3, [sp, #0x14]
  00190	e2833068	 add         r3, r3, #0x68
  00194	e5933000	 ldr         r3, [r3]
  00198	e3832401	 orr         r2, r3, #1, 8
  0019c	e59d3014	 ldr         r3, [sp, #0x14]
  001a0	e2833068	 add         r3, r3, #0x68
  001a4	e5832000	 str         r2, [r3]
  001a8	ea000012	 b           |$LN2@SocSdhcDev|
  001ac		 |$LN9@SocSdhcDev|

; 105  :     }
; 106  :     else if (dwSlot == MMCSLOT_2)

  001ac	e59d3030	 ldr         r3, [sp, #0x30]
  001b0	e3530002	 cmp         r3, #2
  001b4	1a00000f	 bne         |$LN1@SocSdhcDev|

; 107  :     {
; 108  : #ifdef BOOT_MODE
; 109  :         OALStall(100 * 1000);
; 110  : #else
; 111  : 		Sleep(100);	

  001b8	e3a00064	 mov         r0, #0x64
  001bc	eb000000	 bl          Sleep

; 112  : #endif
; 113  : 		SETREG32(&pSyscGeneralRegs->CONTROL_PBIAS_LITE, PBIASLITEPWRDNZ0);

  001c0	e59d3014	 ldr         r3, [sp, #0x14]
  001c4	e2833e2b	 add         r3, r3, #0x2B, 28
  001c8	e5933000	 ldr         r3, [r3]
  001cc	e3832002	 orr         r2, r3, #2
  001d0	e59d3014	 ldr         r3, [sp, #0x14]
  001d4	e2833e2b	 add         r3, r3, #0x2B, 28
  001d8	e5832000	 str         r2, [r3]

; 114  : 		SETREG32(&pSyscGeneralRegs->CONTROL_DEVCONF1, DEVCONF1_MMCSDIO2ADPCLKISEL);

  001dc	e59d3014	 ldr         r3, [sp, #0x14]
  001e0	e2833068	 add         r3, r3, #0x68
  001e4	e5933000	 ldr         r3, [r3]
  001e8	e3832040	 orr         r2, r3, #0x40
  001ec	e59d3014	 ldr         r3, [sp, #0x14]
  001f0	e2833068	 add         r3, r3, #0x68
  001f4	e5832000	 str         r2, [r3]
  001f8		 |$LN1@SocSdhcDev|
  001f8		 |$LN2@SocSdhcDev|

; 115  :     }
; 116  : 
; 117  : #ifndef BOOT_MODE
; 118  :     MmUnmapIoSpace((PVOID)pSyscGeneralRegs, sizeof(OMAP_SYSC_GENERAL_REGS));

  001f8	e3a01fb5	 mov         r1, #0xB5, 30
  001fc	e59d0014	 ldr         r0, [sp, #0x14]
  00200	eb000000	 bl          MmUnmapIoSpace
  00204		 |$LN14@SocSdhcDev|

; 119  : #endif
; 120  : }

  00204	e28dd028	 add         sp, sp, #0x28
  00208	e89d6000	 ldmia       sp, {sp, lr}
  0020c	e12fff1e	 bx          lr
  00210		 |$LN19@SocSdhcDev|
  00210		 |$LN20@SocSdhcDev|
  00210	01012010	 DCD         0x1012010
  00214		 |$LN21@SocSdhcDev|
  00214	48002270	 DCD         0x48002270
  00218		 |$M46289|

			 ENDP  ; |SocSdhcDevconf|

	END
