; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\OMAP3530\MUSB\MUSBFN\pdd.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1BE@EKANOLAD@?$AAD?$AAV?$AAF?$AAS?$AAO?$AAr?$AAd?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@MNALJNHA@?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAD?$AAM?$AAA?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@IJPKENOC@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@DJMHBPLC@?$AAR?$AAx?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@OJINAFBD@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAE?$AAp?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@LKBMGMPH@?$AAR?$AAx?$AAD?$AAm?$AAa?$AAE?$AAp?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|Device_ProcessDMA|
	EXPORT	|Device_Suspend|
	EXPORT	|Device_Disconnect|
	EXPORT	|Device_ProcessEPx_TX|
	EXPORT	|Device_ProcessEPx_RX|
	EXPORT	|Device_ProcessEP0|
	EXPORT	|Device_ResumeIRQ|
	EXPORT	|Device_ResetIRQ|
	EXPORT	|dpCurSettings| [ DATA ]
	EXPORT	|gc_MUsbFuncs| [ DATA ]

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@EKANOLAD@?$AAD?$AAV?$AAF?$AAS?$AAO?$AAr?$AAd?$AAe?$AAr?$AA?$AA@| DCB "D"
	DCB	0x0, "V", 0x0, "F", 0x0, "S", 0x0, "O", 0x0, "r", 0x0, "d"
	DCB	0x0, "e", 0x0, "r", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@MNALJNHA@?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAD?$AAM?$AAA?$AA?$AA@| DCB "E"
	DCB	0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, "D"
	DCB	0x0, "M", 0x0, "A", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@IJPKENOC@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@| DCB "T"
	DCB	0x0, "x", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "B", 0x0, "u"
	DCB	0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@DJMHBPLC@?$AAR?$AAx?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@| DCB "R"
	DCB	0x0, "x", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "B", 0x0, "u"
	DCB	0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@OJINAFBD@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAE?$AAp?$AA?$AA@| DCB "T", 0x0
	DCB	"x", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "E", 0x0, "p", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@LKBMGMPH@?$AAR?$AAx?$AAD?$AAm?$AAa?$AAE?$AAp?$AA?$AA@| DCB "R", 0x0
	DCB	"x", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "E", 0x0, "p", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.data|, DATA
|dpCurSettings| DCB "U", 0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, 0x0
	DCB	0x0
	%	52
	DCB	"E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, 0x0, 0x0
	%	52
	DCB	"W", 0x0, "a", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0
	DCB	"g", 0x0, 0x0, 0x0
	%	48
	DCB	"I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0x0, 0x0
	%	54
	DCB	"T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0
	DCB	"e", 0x0, "r", 0x0, 0x0, 0x0
	%	46
	DCB	"P", 0x0, "i", 0x0, "p", 0x0, "e", 0x0, 0x0, 0x0
	%	54
	DCB	"S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, 0x0, 0x0
	%	54
	DCB	"R", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0
	DCB	"e", 0x0, 0x0, 0x0
	%	48
	DCB	"U", 0x0, "S", 0x0, "B", 0x0, " ", 0x0, "E", 0x0, "v", 0x0
	DCB	"e", 0x0, "n", 0x0, "t", 0x0, "s", 0x0, 0x0, 0x0
	%	42
	DCB	"I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0
	DCB	"u", 0x0, "p", 0x0, "t", 0x0, "s", 0x0, 0x0, 0x0
	%	42
	DCB	"P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, 0x0, 0x0
	%	52
	DCB	"I", 0x0, "n", 0x0, "f", 0x0, "o", 0x0, 0x0, 0x0
	%	54
	DCB	"D", 0x0, "v", 0x0, "f", 0x0, "s", 0x0, 0x0, 0x0
	%	54
	DCB	"F", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i", 0x0
	DCB	"o", 0x0, "n", 0x0, 0x0, 0x0
	%	46
	DCB	"C", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "e", 0x0, "n", 0x0
	DCB	"t", 0x0, "s", 0x0, 0x0, 0x0
	%	46
	DCB	0x0, 0x0
	%	62
	DCB	"P", 0x0, "D", 0x0, "D", 0x0, 0x0, 0x0
	%	56
	DCD	0x5
|gc_MUsbFuncs| DCD |Device_ResetIRQ|
	DCD	|Device_ResumeIRQ|
	DCD	|Device_ProcessEP0|
	DCD	|Device_ProcessEPx_RX|
	DCD	|Device_ProcessEPx_TX|
	DCD	0x0
	DCD	|Device_Disconnect|
	DCD	|Device_Suspend|
	DCD	|Device_ProcessDMA|

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
|s_deviceRegParams| DCD |??_C@_1BA@LKBMGMPH@?$AAR?$AAx?$AAD?$AAm?$AAa?$AAE?$AAp?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0xc
	DCD	0x4
	DCD	0xffffffff
	DCD	|??_C@_1BA@OJINAFBD@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAE?$AAp?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x10
	DCD	0x4
	DCD	0xffffffff
	DCD	|??_C@_1BI@DJMHBPLC@?$AAR?$AAx?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x14
	DCD	0x4
	DCD	0x2000
	DCD	|??_C@_1BI@IJPKENOC@?$AAT?$AAx?$AAD?$AAm?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x18
	DCD	0x4
	DCD	0x2800
	DCD	|??_C@_1BE@MNALJNHA@?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAD?$AAM?$AAA?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x8
	DCD	0x4
	DCD	0x1
	DCD	|??_C@_1BE@EKANOLAD@?$AAD?$AAV?$AAF?$AAS?$AAO?$AAr?$AAd?$AAe?$AAr?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x3fc
	DCD	0x4
	DCD	0x96
	EXPORT	|??_C@_15MAOEGKJF@?$AA?$CF?$AAS?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_02KNHHEEKP@?5?5?$AA@| [ DATA ]	; `string'
	EXPORT	|??_C@_03NDEAONJP@?5?5?5?$AA@| [ DATA ]	; `string'
	EXPORT	|??_C@_01CLKCMJKC@?5?$AA@| [ DATA ]	; `string'
	EXPORT	|??_C@_02LMMGGCAJ@?3?5?$AA@| [ DATA ]	; `string'
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|memdump|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|strlen|
	IMPORT	|strcat|
	IMPORT	|__security_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__rt_udiv|
	IMPORT	|__rt_sdiv|
	IMPORT	|__security_check_cookie|

  00000			 AREA	 |.pdata|, PDATA
|$T49605| DCD	|$LN29@memdump|
	DCD	0xc0011304
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbfn\pdd.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15MAOEGKJF@?$AA?$CF?$AAS?$AA?$AA@| DCB "%", 0x0, "S", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_02KNHHEEKP@?5?5?$AA@| DCB "  ", 0x0		; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_03NDEAONJP@?5?5?5?$AA@| DCB "   ", 0x0		; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_01CLKCMJKC@?5?$AA@| DCB " ", 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_02LMMGGCAJ@?3?5?$AA@| DCB ": ", 0x0		; `string'

  00000			 AREA	 |.xdata|, DATA
|$T49601| DCD	0xffffffe4
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T49601|

  00008		 |memdump| PROC

; 424  : {    

  00008		 |$LN29@memdump|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d0007	 stmdb       sp!, {r0 - r2}
  00010	e92d5000	 stmdb       sp!, {r12, lr}
  00014	e24dd08c	 sub         sp, sp, #0x8C
  00018		 |$M49602|
  00018	e59f3430	 ldr         r3, [pc, #0x430]
  0001c	e5933000	 ldr         r3, [r3]
  00020	e58d3084	 str         r3, [sp, #0x84]

; 425  :     unsigned short i,j,l;
; 426  :     unsigned char tmp_str[100];
; 427  :     unsigned char tmp_str1[10];
; 428  :     for (i = 0; i < num_bytes; i += 16){

  00024	e3a03000	 mov         r3, #0
  00028	e1cd30b0	 strh        r3, [sp]
  0002c	ea000004	 b           |$LN24@memdump|
  00030		 |$LN23@memdump|
  00030	e1dd30b0	 ldrh        r3, [sp]
  00034	e2833010	 add         r3, r3, #0x10
  00038	e1a03803	 mov         r3, r3, lsl #16
  0003c	e1a03823	 mov         r3, r3, lsr #16
  00040	e1cd30b0	 strh        r3, [sp]
  00044		 |$LN24@memdump|
  00044	e1dd30b0	 ldrh        r3, [sp]
  00048	e1a02003	 mov         r2, r3
  0004c	e1dd39b8	 ldrh        r3, [sp, #0x98]
  00050	e1520003	 cmp         r2, r3
  00054	aa0000f3	 bge         |$LN22@memdump|

; 429  :         unsigned short n ;
; 430  :         tmp_str[0]='\0';

  00058	e3a03000	 mov         r3, #0
  0005c	e5cd3010	 strb        r3, [sp, #0x10]

; 431  :         n = i+offset ;

  00060	e1dd30b0	 ldrh        r3, [sp]
  00064	e1a02003	 mov         r2, r3
  00068	e1dd39bc	 ldrh        r3, [sp, #0x9C]
  0006c	e0823003	 add         r3, r2, r3
  00070	e1a03803	 mov         r3, r3, lsl #16
  00074	e1a03823	 mov         r3, r3, lsr #16
  00078	e1cd37b8	 strh        r3, [sp, #0x78]

; 432  :         for (j=0; j<4; j++) {

  0007c	e3a03000	 mov         r3, #0
  00080	e1cd37b6	 strh        r3, [sp, #0x76]
  00084	ea000004	 b           |$LN21@memdump|
  00088		 |$LN20@memdump|
  00088	e1dd37b6	 ldrh        r3, [sp, #0x76]
  0008c	e2833001	 add         r3, r3, #1
  00090	e1a03803	 mov         r3, r3, lsl #16
  00094	e1a03823	 mov         r3, r3, lsr #16
  00098	e1cd37b6	 strh        r3, [sp, #0x76]
  0009c		 |$LN21@memdump|
  0009c	e1dd37b6	 ldrh        r3, [sp, #0x76]
  000a0	e3530004	 cmp         r3, #4
  000a4	aa000021	 bge         |$LN19@memdump|

; 433  :             l=n%16;

  000a8	e1dd37b8	 ldrh        r3, [sp, #0x78]
  000ac	e1a01003	 mov         r1, r3
  000b0	e3a00010	 mov         r0, #0x10
  000b4	eb000000	 bl          __rt_sdiv
  000b8	e1a03801	 mov         r3, r1, lsl #16
  000bc	e1a03823	 mov         r3, r3, lsr #16
  000c0	e1cd37b4	 strh        r3, [sp, #0x74]

; 434  :             if (l>=10)

  000c4	e1dd37b4	 ldrh        r3, [sp, #0x74]
  000c8	e353000a	 cmp         r3, #0xA
  000cc	ba000009	 blt         |$LN18@memdump|

; 435  :             tmp_str[3-j]=(unsigned char)('A'+l-10);

  000d0	e1dd37b4	 ldrh        r3, [sp, #0x74]
  000d4	e2833041	 add         r3, r3, #0x41
  000d8	e243300a	 sub         r3, r3, #0xA
  000dc	e20310ff	 and         r1, r3, #0xFF
  000e0	e1dd37b6	 ldrh        r3, [sp, #0x76]
  000e4	e2632003	 rsb         r2, r3, #3
  000e8	e28d3010	 add         r3, sp, #0x10
  000ec	e0833002	 add         r3, r3, r2
  000f0	e5c31000	 strb        r1, [r3]

; 436  :             else

  000f4	ea000007	 b           |$LN17@memdump|
  000f8		 |$LN18@memdump|

; 437  :             tmp_str[3-j]=(unsigned char)(l+'0');

  000f8	e1dd37b4	 ldrh        r3, [sp, #0x74]
  000fc	e2833030	 add         r3, r3, #0x30
  00100	e20310ff	 and         r1, r3, #0xFF
  00104	e1dd37b6	 ldrh        r3, [sp, #0x76]
  00108	e2632003	 rsb         r2, r3, #3
  0010c	e28d3010	 add         r3, sp, #0x10
  00110	e0833002	 add         r3, r3, r2
  00114	e5c31000	 strb        r1, [r3]
  00118		 |$LN17@memdump|

; 438  :             n >>= 4 ;

  00118	e1dd37b8	 ldrh        r3, [sp, #0x78]
  0011c	e1a03223	 mov         r3, r3, lsr #4
  00120	e1a03803	 mov         r3, r3, lsl #16
  00124	e1a03823	 mov         r3, r3, lsr #16
  00128	e1cd37b8	 strh        r3, [sp, #0x78]

; 439  :         }

  0012c	eaffffd5	 b           |$LN20@memdump|
  00130		 |$LN19@memdump|

; 440  :         tmp_str[4]='\0';

  00130	e3a03000	 mov         r3, #0
  00134	e5cd3014	 strb        r3, [sp, #0x14]

; 441  :         strcat ( (char *)tmp_str, ": ");

  00138	e59f130c	 ldr         r1, [pc, #0x30C]
  0013c	e28d0010	 add         r0, sp, #0x10
  00140	eb000000	 bl          strcat

; 442  :         /*          Output the hex bytes        */
; 443  :         for (j = i; j < (i+16); j++) {

  00144	e1dd30b0	 ldrh        r3, [sp]
  00148	e1cd37b6	 strh        r3, [sp, #0x76]
  0014c	ea000004	 b           |$LN16@memdump|
  00150		 |$LN15@memdump|
  00150	e1dd37b6	 ldrh        r3, [sp, #0x76]
  00154	e2833001	 add         r3, r3, #1
  00158	e1a03803	 mov         r3, r3, lsl #16
  0015c	e1a03823	 mov         r3, r3, lsr #16
  00160	e1cd37b6	 strh        r3, [sp, #0x76]
  00164		 |$LN16@memdump|
  00164	e1dd37b6	 ldrh        r3, [sp, #0x76]
  00168	e1a02003	 mov         r2, r3
  0016c	e1dd30b0	 ldrh        r3, [sp]
  00170	e2833010	 add         r3, r3, #0x10
  00174	e1520003	 cmp         r2, r3
  00178	aa00003f	 bge         |$LN14@memdump|

; 444  :             int m ;
; 445  :             if (j < num_bytes)  {

  0017c	e1dd37b6	 ldrh        r3, [sp, #0x76]
  00180	e1a02003	 mov         r2, r3
  00184	e1dd39b8	 ldrh        r3, [sp, #0x98]
  00188	e1520003	 cmp         r2, r3
  0018c	aa000036	 bge         |$LN13@memdump|

; 446  :                 m=((unsigned int)((unsigned char)*(data+j)))/16 ;

  00190	e1dd37b6	 ldrh        r3, [sp, #0x76]
  00194	e1a02003	 mov         r2, r3
  00198	e59d3094	 ldr         r3, [sp, #0x94]
  0019c	e0833002	 add         r3, r3, r2
  001a0	e5d31000	 ldrb        r1, [r3]
  001a4	e3a00010	 mov         r0, #0x10
  001a8	eb000000	 bl          __rt_udiv
  001ac	e58d007c	 str         r0, [sp, #0x7C]

; 447  :                 if (m>=10)

  001b0	e59d307c	 ldr         r3, [sp, #0x7C]
  001b4	e353000a	 cmp         r3, #0xA
  001b8	ba000006	 blt         |$LN12@memdump|

; 448  :                     tmp_str1[0]='A'+(unsigned char)m-10;

  001bc	e59d307c	 ldr         r3, [sp, #0x7C]
  001c0	e20330ff	 and         r3, r3, #0xFF
  001c4	e2833041	 add         r3, r3, #0x41
  001c8	e243300a	 sub         r3, r3, #0xA
  001cc	e20330ff	 and         r3, r3, #0xFF
  001d0	e5cd3004	 strb        r3, [sp, #4]

; 449  :                 else

  001d4	ea000004	 b           |$LN11@memdump|
  001d8		 |$LN12@memdump|

; 450  :                     tmp_str1[0]=(unsigned char)m+'0';

  001d8	e59d307c	 ldr         r3, [sp, #0x7C]
  001dc	e20330ff	 and         r3, r3, #0xFF
  001e0	e2833030	 add         r3, r3, #0x30
  001e4	e20330ff	 and         r3, r3, #0xFF
  001e8	e5cd3004	 strb        r3, [sp, #4]
  001ec		 |$LN11@memdump|

; 451  :                 m=((unsigned int)((unsigned char)*(data+j)))%16 ;

  001ec	e1dd37b6	 ldrh        r3, [sp, #0x76]
  001f0	e1a02003	 mov         r2, r3
  001f4	e59d3094	 ldr         r3, [sp, #0x94]
  001f8	e0833002	 add         r3, r3, r2
  001fc	e5d31000	 ldrb        r1, [r3]
  00200	e3a00010	 mov         r0, #0x10
  00204	eb000000	 bl          __rt_udiv
  00208	e58d107c	 str         r1, [sp, #0x7C]

; 452  :                 if (m>=10)

  0020c	e59d307c	 ldr         r3, [sp, #0x7C]
  00210	e353000a	 cmp         r3, #0xA
  00214	ba000006	 blt         |$LN10@memdump|

; 453  :                     tmp_str1[1]='A'+(unsigned char)m-10;

  00218	e59d307c	 ldr         r3, [sp, #0x7C]
  0021c	e20330ff	 and         r3, r3, #0xFF
  00220	e2833041	 add         r3, r3, #0x41
  00224	e243300a	 sub         r3, r3, #0xA
  00228	e20330ff	 and         r3, r3, #0xFF
  0022c	e5cd3005	 strb        r3, [sp, #5]

; 454  :                 else

  00230	ea000004	 b           |$LN9@memdump|
  00234		 |$LN10@memdump|

; 455  :                     tmp_str1[1]=(unsigned char)m+'0';

  00234	e59d307c	 ldr         r3, [sp, #0x7C]
  00238	e20330ff	 and         r3, r3, #0xFF
  0023c	e2833030	 add         r3, r3, #0x30
  00240	e20330ff	 and         r3, r3, #0xFF
  00244	e5cd3005	 strb        r3, [sp, #5]
  00248		 |$LN9@memdump|

; 456  :                 tmp_str1[2]='\0';

  00248	e3a03000	 mov         r3, #0
  0024c	e5cd3006	 strb        r3, [sp, #6]

; 457  :                 strcat ((char *)tmp_str, (char *)tmp_str1);

  00250	e28d1004	 add         r1, sp, #4
  00254	e28d0010	 add         r0, sp, #0x10
  00258	eb000000	 bl          strcat

; 458  :                 strcat ((char *)tmp_str, " ");

  0025c	e59f11e4	 ldr         r1, [pc, #0x1E4]
  00260	e28d0010	 add         r0, sp, #0x10
  00264	eb000000	 bl          strcat

; 459  :             }
; 460  :             else {

  00268	ea000002	 b           |$LN8@memdump|
  0026c		 |$LN13@memdump|

; 461  :                 strcat((char *)tmp_str,"   ");

  0026c	e59f11d0	 ldr         r1, [pc, #0x1D0]
  00270	e28d0010	 add         r0, sp, #0x10
  00274	eb000000	 bl          strcat
  00278		 |$LN8@memdump|

; 462  :             }
; 463  :         }

  00278	eaffffb4	 b           |$LN15@memdump|
  0027c		 |$LN14@memdump|

; 464  :         strcat((char *)tmp_str, "  ");

  0027c	e59f11bc	 ldr         r1, [pc, #0x1BC]
  00280	e28d0010	 add         r0, sp, #0x10
  00284	eb000000	 bl          strcat

; 465  :         l=(unsigned short)strlen((char *)tmp_str);

  00288	e28d0010	 add         r0, sp, #0x10
  0028c	eb000000	 bl          strlen
  00290	e58d0088	 str         r0, [sp, #0x88]
  00294	e59d3088	 ldr         r3, [sp, #0x88]
  00298	e1a03803	 mov         r3, r3, lsl #16
  0029c	e1a03823	 mov         r3, r3, lsr #16
  002a0	e1cd37b4	 strh        r3, [sp, #0x74]

; 466  : 
; 467  :         /*         * Output the ASCII bytes        */
; 468  :         for (j = i; j < (i+16); j++){

  002a4	e1dd30b0	 ldrh        r3, [sp]
  002a8	e1cd37b6	 strh        r3, [sp, #0x76]
  002ac	ea000004	 b           |$LN7@memdump|
  002b0		 |$LN6@memdump|
  002b0	e1dd37b6	 ldrh        r3, [sp, #0x76]
  002b4	e2833001	 add         r3, r3, #1
  002b8	e1a03803	 mov         r3, r3, lsl #16
  002bc	e1a03823	 mov         r3, r3, lsr #16
  002c0	e1cd37b6	 strh        r3, [sp, #0x76]
  002c4		 |$LN7@memdump|
  002c4	e1dd37b6	 ldrh        r3, [sp, #0x76]
  002c8	e1a02003	 mov         r2, r3
  002cc	e1dd30b0	 ldrh        r3, [sp]
  002d0	e2833010	 add         r3, r3, #0x10
  002d4	e1520003	 cmp         r2, r3
  002d8	aa00002d	 bge         |$LN5@memdump|

; 469  :             if (j < num_bytes){

  002dc	e1dd37b6	 ldrh        r3, [sp, #0x76]
  002e0	e1a02003	 mov         r2, r3
  002e4	e1dd39b8	 ldrh        r3, [sp, #0x98]
  002e8	e1520003	 cmp         r2, r3
  002ec	aa00001c	 bge         |$LN4@memdump|

; 470  :                 char c = *(data+j);

  002f0	e1dd37b6	 ldrh        r3, [sp, #0x76]
  002f4	e1a02003	 mov         r2, r3
  002f8	e59d3094	 ldr         r3, [sp, #0x94]
  002fc	e0833002	 add         r3, r3, r2
  00300	e5d33000	 ldrb        r3, [r3]
  00304	e1a03c03	 mov         r3, r3, lsl #24
  00308	e1a03c43	 mov         r3, r3, asr #24
  0030c	e5cd3080	 strb        r3, [sp, #0x80]

; 471  :                 if (c < ' ' || c > 'z')

  00310	e1dd38d0	 ldrsb       r3, [sp, #0x80]
  00314	e3530020	 cmp         r3, #0x20
  00318	ba000002	 blt         |$LN2@memdump|
  0031c	e1dd38d0	 ldrsb       r3, [sp, #0x80]
  00320	e353007a	 cmp         r3, #0x7A
  00324	da000001	 ble         |$LN3@memdump|
  00328		 |$LN2@memdump|

; 472  :                     c = '.';

  00328	e3a0302e	 mov         r3, #0x2E
  0032c	e5cd3080	 strb        r3, [sp, #0x80]
  00330		 |$LN3@memdump|

; 473  :                 tmp_str[l++]=c;

  00330	e1dd37b4	 ldrh        r3, [sp, #0x74]
  00334	e1a02003	 mov         r2, r3
  00338	e28d3010	 add         r3, sp, #0x10
  0033c	e0832002	 add         r2, r3, r2
  00340	e1dd38d0	 ldrsb       r3, [sp, #0x80]
  00344	e20330ff	 and         r3, r3, #0xFF
  00348	e5c23000	 strb        r3, [r2]
  0034c	e1dd37b4	 ldrh        r3, [sp, #0x74]
  00350	e2833001	 add         r3, r3, #1
  00354	e1a03803	 mov         r3, r3, lsl #16
  00358	e1a03823	 mov         r3, r3, lsr #16
  0035c	e1cd37b4	 strh        r3, [sp, #0x74]

; 474  :             }
; 475  :             else

  00360	ea00000a	 b           |$LN1@memdump|
  00364		 |$LN4@memdump|

; 476  :                 tmp_str[l++]=' ';

  00364	e1dd37b4	 ldrh        r3, [sp, #0x74]
  00368	e1a02003	 mov         r2, r3
  0036c	e28d3010	 add         r3, sp, #0x10
  00370	e0832002	 add         r2, r3, r2
  00374	e3a03020	 mov         r3, #0x20
  00378	e5c23000	 strb        r3, [r2]
  0037c	e1dd37b4	 ldrh        r3, [sp, #0x74]
  00380	e2833001	 add         r3, r3, #1
  00384	e1a03803	 mov         r3, r3, lsl #16
  00388	e1a03823	 mov         r3, r3, lsr #16
  0038c	e1cd37b4	 strh        r3, [sp, #0x74]
  00390		 |$LN1@memdump|

; 477  :         }

  00390	eaffffc6	 b           |$LN6@memdump|
  00394		 |$LN5@memdump|

; 478  :         tmp_str[l++]='\r';        tmp_str[l++]='\n';        tmp_str[l++]='\0';

  00394	e1dd37b4	 ldrh        r3, [sp, #0x74]
  00398	e1a02003	 mov         r2, r3
  0039c	e28d3010	 add         r3, sp, #0x10
  003a0	e0832002	 add         r2, r3, r2
  003a4	e3a0300d	 mov         r3, #0xD
  003a8	e5c23000	 strb        r3, [r2]
  003ac	e1dd37b4	 ldrh        r3, [sp, #0x74]
  003b0	e2833001	 add         r3, r3, #1
  003b4	e1a03803	 mov         r3, r3, lsl #16
  003b8	e1a03823	 mov         r3, r3, lsr #16
  003bc	e1cd37b4	 strh        r3, [sp, #0x74]
  003c0	e1dd37b4	 ldrh        r3, [sp, #0x74]
  003c4	e1a02003	 mov         r2, r3
  003c8	e28d3010	 add         r3, sp, #0x10
  003cc	e0832002	 add         r2, r3, r2
  003d0	e3a0300a	 mov         r3, #0xA
  003d4	e5c23000	 strb        r3, [r2]
  003d8	e1dd37b4	 ldrh        r3, [sp, #0x74]
  003dc	e2833001	 add         r3, r3, #1
  003e0	e1a03803	 mov         r3, r3, lsl #16
  003e4	e1a03823	 mov         r3, r3, lsr #16
  003e8	e1cd37b4	 strh        r3, [sp, #0x74]
  003ec	e1dd37b4	 ldrh        r3, [sp, #0x74]
  003f0	e1a02003	 mov         r2, r3
  003f4	e28d3010	 add         r3, sp, #0x10
  003f8	e0832002	 add         r2, r3, r2
  003fc	e3a03000	 mov         r3, #0
  00400	e5c23000	 strb        r3, [r2]
  00404	e1dd37b4	 ldrh        r3, [sp, #0x74]
  00408	e2833001	 add         r3, r3, #1
  0040c	e1a03803	 mov         r3, r3, lsl #16
  00410	e1a03823	 mov         r3, r3, lsr #16
  00414	e1cd37b4	 strh        r3, [sp, #0x74]

; 479  :         RETAILMSG(1, (L"%S", tmp_str));    

  00418	e28d1010	 add         r1, sp, #0x10
  0041c	e59f0018	 ldr         r0, [pc, #0x18]
  00420	eb000000	 bl          NKDbgPrintfW

; 480  :     }

  00424	eaffff01	 b           |$LN23@memdump|
  00428		 |$LN22@memdump|

; 424  : {    

  00428	e59d0084	 ldr         r0, [sp, #0x84]
  0042c	eb000000	 bl          __security_check_cookie

; 481  : }

  00430	e28dd08c	 add         sp, sp, #0x8C
  00434	e89d6000	 ldmia       sp, {sp, lr}
  00438	e12fff1e	 bx          lr
  0043c		 |$LN30@memdump|
  0043c		 |$LN31@memdump|
  0043c	00000000	 DCD         |??_C@_15MAOEGKJF@?$AA?$CF?$AAS?$AA?$AA@|
  00440		 |$LN32@memdump|
  00440	00000000	 DCD         |??_C@_02KNHHEEKP@?5?5?$AA@|
  00444		 |$LN33@memdump|
  00444	00000000	 DCD         |??_C@_03NDEAONJP@?5?5?5?$AA@|
  00448		 |$LN34@memdump|
  00448	00000000	 DCD         |??_C@_01CLKCMJKC@?5?$AA@|
  0044c		 |$LN35@memdump|
  0044c	00000000	 DCD         |??_C@_02LMMGGCAJ@?3?5?$AA@|
  00450		 |$LN36@memdump|
  00450	00000000	 DCD         |__security_cookie|
  00454		 |$M49603|

			 ENDP  ; |memdump|

	EXPORT	|??_C@_1LC@LJMDBMHO@?$AA?5?$AAb?$AAm?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAT?$AAy?$AAp?$AAe?$AA?3?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?5?$AA?5?$AAb?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?3@| [ DATA ] ; `string'
	EXPORT	|DBGPrtSetupPkt|

  00008			 AREA	 |.pdata|, PDATA
|$T49626| DCD	|$LN9@DBGPrtSetu|
	DCD	0x40006204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LC@LJMDBMHO@?$AA?5?$AAb?$AAm?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAT?$AAy?$AAp?$AAe?$AA?3?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?5?$AA?5?$AAb?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?3@| DCB " "
	DCB	0x0, "b", 0x0, "m", 0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, "T", 0x0, "y", 0x0, "p"
	DCB	0x0, "e", 0x0, ":", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, " ", 0x0, " ", 0x0, "b", 0x0, "R"
	DCB	0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t"
	DCB	0x0, ":", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "x", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "w", 0x0, "V"
	DCB	0x0, "a", 0x0, "l", 0x0, "u", 0x0, "e", 0x0, ":", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, "w", 0x0, "I", 0x0, "n", 0x0, "d"
	DCB	0x0, "e", 0x0, "x", 0x0, ":", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "4", 0x0, "x", 0x0, " ", 0x0, " ", 0x0, "w"
	DCB	0x0, "L", 0x0, "e", 0x0, "n", 0x0, "g", 0x0, "t", 0x0, "h"
	DCB	0x0, ":", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00454			 AREA	 |.text|, CODE, ARM

  00454		 |DBGPrtSetupPkt| PROC

; 484  : {

  00454		 |$LN9@DBGPrtSetu|
  00454	e1a0c00d	 mov         r12, sp
  00458	e92d0001	 stmdb       sp!, {r0}
  0045c	e92d5000	 stmdb       sp!, {r12, lr}
  00460	e24dd028	 sub         sp, sp, #0x28
  00464		 |$M49623|

; 485  : #ifdef DEBUG
; 486  :     USB_DEVICE_REQUEST* pSetup =(USB_DEVICE_REQUEST*)pPkt;

  00464	e59d3030	 ldr         r3, [sp, #0x30]
  00468	e58d3008	 str         r3, [sp, #8]

; 487  :     
; 488  :     DEBUGMSG(ZONE_FUNCTION, (L" "
; 489  :         L"bmRequestType:0x%02x  bRequest:0x%02x   wValue:0x%04x   wIndex:0x%04x  wLength:0x%04x\r\n", 
; 490  :         pSetup->bmRequestType, pSetup->bRequest, pSetup->wValue, pSetup->wIndex, pSetup->wLength
; 491  :         ));

  0046c	e59f3164	 ldr         r3, [pc, #0x164]
  00470	e5933440	 ldr         r3, [r3, #0x440]
  00474	e3130a01	 tst         r3, #1, 20
  00478	0a00004d	 beq         |$LN5@DBGPrtSetu|
  0047c	e59f3154	 ldr         r3, [pc, #0x154]
  00480	e5933440	 ldr         r3, [r3, #0x440]
  00484	e3130801	 tst         r3, #1, 16
  00488	0a000023	 beq         |$LN3@DBGPrtSetu|
  0048c	e59d3008	 ldr         r3, [sp, #8]
  00490	e2831006	 add         r1, r3, #6
  00494	e5d13001	 ldrb        r3, [r1, #1]
  00498	e1a03403	 mov         r3, r3, lsl #8
  0049c	e1a02803	 mov         r2, r3, lsl #16
  004a0	e1a02822	 mov         r2, r2, lsr #16
  004a4	e5d13000	 ldrb        r3, [r1]
  004a8	e1833002	 orr         r3, r3, r2
  004ac	e58d3004	 str         r3, [sp, #4]
  004b0	e59d3008	 ldr         r3, [sp, #8]
  004b4	e2831004	 add         r1, r3, #4
  004b8	e5d13001	 ldrb        r3, [r1, #1]
  004bc	e1a03403	 mov         r3, r3, lsl #8
  004c0	e1a02803	 mov         r2, r3, lsl #16
  004c4	e1a02822	 mov         r2, r2, lsr #16
  004c8	e5d13000	 ldrb        r3, [r1]
  004cc	e1833002	 orr         r3, r3, r2
  004d0	e58d3000	 str         r3, [sp]
  004d4	e59d3008	 ldr         r3, [sp, #8]
  004d8	e2831002	 add         r1, r3, #2
  004dc	e5d13001	 ldrb        r3, [r1, #1]
  004e0	e1a03403	 mov         r3, r3, lsl #8
  004e4	e1a02803	 mov         r2, r3, lsl #16
  004e8	e1a02822	 mov         r2, r2, lsr #16
  004ec	e5d13000	 ldrb        r3, [r1]
  004f0	e1833002	 orr         r3, r3, r2
  004f4	e59d2008	 ldr         r2, [sp, #8]
  004f8	e2822001	 add         r2, r2, #1
  004fc	e5d22000	 ldrb        r2, [r2]
  00500	e59d1008	 ldr         r1, [sp, #8]
  00504	e5d11000	 ldrb        r1, [r1]
  00508	e59f00c4	 ldr         r0, [pc, #0xC4]
  0050c	eb000000	 bl          CeLogMsg
  00510	e3a03001	 mov         r3, #1
  00514	e58d3020	 str         r3, [sp, #0x20]
  00518	ea000022	 b           |$LN4@DBGPrtSetu|
  0051c		 |$LN3@DBGPrtSetu|
  0051c	e59d3008	 ldr         r3, [sp, #8]
  00520	e2831006	 add         r1, r3, #6
  00524	e5d13001	 ldrb        r3, [r1, #1]
  00528	e1a03403	 mov         r3, r3, lsl #8
  0052c	e1a02803	 mov         r2, r3, lsl #16
  00530	e1a02822	 mov         r2, r2, lsr #16
  00534	e5d13000	 ldrb        r3, [r1]
  00538	e1833002	 orr         r3, r3, r2
  0053c	e58d3004	 str         r3, [sp, #4]
  00540	e59d3008	 ldr         r3, [sp, #8]
  00544	e2831004	 add         r1, r3, #4
  00548	e5d13001	 ldrb        r3, [r1, #1]
  0054c	e1a03403	 mov         r3, r3, lsl #8
  00550	e1a02803	 mov         r2, r3, lsl #16
  00554	e1a02822	 mov         r2, r2, lsr #16
  00558	e5d13000	 ldrb        r3, [r1]
  0055c	e1833002	 orr         r3, r3, r2
  00560	e58d3000	 str         r3, [sp]
  00564	e59d3008	 ldr         r3, [sp, #8]
  00568	e2831002	 add         r1, r3, #2
  0056c	e5d13001	 ldrb        r3, [r1, #1]
  00570	e1a03403	 mov         r3, r3, lsl #8
  00574	e1a02803	 mov         r2, r3, lsl #16
  00578	e1a02822	 mov         r2, r2, lsr #16
  0057c	e5d13000	 ldrb        r3, [r1]
  00580	e1833002	 orr         r3, r3, r2
  00584	e59d2008	 ldr         r2, [sp, #8]
  00588	e2822001	 add         r2, r2, #1
  0058c	e5d22000	 ldrb        r2, [r2]
  00590	e59d1008	 ldr         r1, [sp, #8]
  00594	e5d11000	 ldrb        r1, [r1]
  00598	e59f0034	 ldr         r0, [pc, #0x34]
  0059c	eb000000	 bl          NKDbgPrintfW
  005a0	e3a03000	 mov         r3, #0
  005a4	e58d3020	 str         r3, [sp, #0x20]
  005a8		 |$LN4@DBGPrtSetu|
  005a8	e3a03001	 mov         r3, #1
  005ac	e58d3024	 str         r3, [sp, #0x24]
  005b0	ea000001	 b           |$LN6@DBGPrtSetu|
  005b4		 |$LN5@DBGPrtSetu|
  005b4	e3a03000	 mov         r3, #0
  005b8	e58d3024	 str         r3, [sp, #0x24]
  005bc		 |$LN6@DBGPrtSetu|

; 492  : #else
; 493  : 	UNREFERENCED_PARAMETER(pPkt);	
; 494  : #endif
; 495  : 
; 496  :     return ERROR_SUCCESS;

  005bc	e3a03000	 mov         r3, #0
  005c0	e58d301c	 str         r3, [sp, #0x1C]

; 497  : }

  005c4	e59d001c	 ldr         r0, [sp, #0x1C]
  005c8	e28dd028	 add         sp, sp, #0x28
  005cc	e89d6000	 ldmia       sp, {sp, lr}
  005d0	e12fff1e	 bx          lr
  005d4		 |$LN10@DBGPrtSetu|
  005d4		 |$LN11@DBGPrtSetu|
  005d4	00000000	 DCD         |??_C@_1LC@LJMDBMHO@?$AA?5?$AAb?$AAm?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAT?$AAy?$AAp?$AAe?$AA?3?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?5?$AA?5?$AAb?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?3@|
  005d8		 |$LN12@DBGPrtSetu|
  005d8	00000000	 DCD         |dpCurSettings|
  005dc		 |$M49624|

			 ENDP  ; |DBGPrtSetupPkt|

	EXPORT	|__$ArrayPad$| [ DATA ]
	IMPORT	|CeLogData|
	IMPORT	|StringCchLengthW|
	IMPORT	|StringCchVPrintfW|

  00010			 AREA	 |.pdata|, PDATA
|$T49640| DCD	|$LN7@CeLogMsg|
	DCD	0xc0003704

  00004			 AREA	 |.xdata|, DATA
|$T49636| DCD	0xffffffcc
; Function compile flags: /Odtp
; File c:\wince600\public\common\sdk\inc\celog.h

  005dc			 AREA	 |.text|, CODE, ARM

  005dc	00000000	 DCD         |__GSHandlerCheck|
  005e0	00000000	 DCD         |$T49636|

  005e4		 |CeLogMsg| PROC

; 1020 : {

  005e4		 |$LN7@CeLogMsg|
  005e4	e1a0c00d	 mov         r12, sp
  005e8	e92d000f	 stmdb       sp!, {r0 - r3}
  005ec	e92d5000	 stmdb       sp!, {r12, lr}
  005f0	e24ddd09	 sub         sp, sp, #9, 26
  005f4		 |$M49637|
  005f4	e59f30c0	 ldr         r3, [pc, #0xC0]
  005f8	e5933000	 ldr         r3, [r3]
  005fc	e58d3224	 str         r3, [sp, #0x224]

; 1021 :     va_list arglist;
; 1022 :     WCHAR   szTemp[MAX_PATH];
; 1023 :     size_t  cchLen;
; 1024 :     HRESULT hr;
; 1025 : 
; 1026 :     // Compose a single string using the input args
; 1027 :     va_start(arglist, szFormat);

  00600	e28d3f92	 add         r3, sp, #0x92, 30
  00604	e2833004	 add         r3, r3, #4
  00608	e58d3010	 str         r3, [sp, #0x10]

; 1028 :     hr = StringCchVPrintfW(szTemp, MAX_PATH, szFormat, arglist);

  0060c	e59d3010	 ldr         r3, [sp, #0x10]
  00610	e59d2248	 ldr         r2, [sp, #0x248]
  00614	e3a01f41	 mov         r1, #0x41, 30
  00618	e28d0014	 add         r0, sp, #0x14
  0061c	eb000000	 bl          StringCchVPrintfW
  00620	e58d0238	 str         r0, [sp, #0x238]
  00624	e59d3238	 ldr         r3, [sp, #0x238]
  00628	e58d321c	 str         r3, [sp, #0x21C]

; 1029 :     if (SUCCEEDED(hr)) {

  0062c	e59d321c	 ldr         r3, [sp, #0x21C]
  00630	e3530000	 cmp         r3, #0
  00634	ba00001b	 blt         |$LN2@CeLogMsg|

; 1030 :         hr = StringCchLengthW(szTemp, MAX_PATH, &cchLen);

  00638	e28d2e22	 add         r2, sp, #0x22, 28
  0063c	e3a01f41	 mov         r1, #0x41, 30
  00640	e28d0014	 add         r0, sp, #0x14
  00644	eb000000	 bl          StringCchLengthW
  00648	e58d023c	 str         r0, [sp, #0x23C]
  0064c	e59d323c	 ldr         r3, [sp, #0x23C]
  00650	e58d321c	 str         r3, [sp, #0x21C]

; 1031 :         if (SUCCEEDED(hr)) {

  00654	e59d321c	 ldr         r3, [sp, #0x21C]
  00658	e3530000	 cmp         r3, #0
  0065c	ba000011	 blt         |$LN1@CeLogMsg|

; 1032 :             CeLogData(TRUE, CELID_RAW_WCHAR, szTemp, (WORD)((cchLen + 1) * sizeof(WCHAR)),
; 1033 :                       0, CELZONE_ALWAYSON, 0, FALSE);

  00660	e3a03000	 mov         r3, #0
  00664	e58d300c	 str         r3, [sp, #0xC]
  00668	e3a03000	 mov         r3, #0
  0066c	e58d3008	 str         r3, [sp, #8]
  00670	e3a03101	 mov         r3, #1, 2
  00674	e58d3004	 str         r3, [sp, #4]
  00678	e3a03000	 mov         r3, #0
  0067c	e58d3000	 str         r3, [sp]
  00680	e59d3220	 ldr         r3, [sp, #0x220]
  00684	e2832001	 add         r2, r3, #1
  00688	e3a03002	 mov         r3, #2
  0068c	e0030392	 mul         r3, r2, r3
  00690	e1a03803	 mov         r3, r3, lsl #16
  00694	e1a03823	 mov         r3, r3, lsr #16
  00698	e28d2014	 add         r2, sp, #0x14
  0069c	e3a0104a	 mov         r1, #0x4A
  006a0	e3a00001	 mov         r0, #1
  006a4	eb000000	 bl          CeLogData
  006a8		 |$LN1@CeLogMsg|
  006a8		 |$LN2@CeLogMsg|

; 1020 : {

  006a8	e59d0224	 ldr         r0, [sp, #0x224]
  006ac	eb000000	 bl          __security_check_cookie

; 1034 :         }
; 1035 :     }
; 1036 : }

  006b0	e28ddd09	 add         sp, sp, #9, 26
  006b4	e89d6000	 ldmia       sp, {sp, lr}
  006b8	e12fff1e	 bx          lr
  006bc		 |$LN8@CeLogMsg|
  006bc		 |$LN9@CeLogMsg|
  006bc	00000000	 DCD         |__security_cookie|
  006c0		 |$M49638|

			 ENDP  ; |CeLogMsg|

	EXPORT	|??_C@_1DG@KAEGALDA@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAp?$AAr?$AAt?$AAE?$AAP?$AA0?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@KEJKJIEM@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@GEJCHJD@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@BNMDCKFO@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAT?$AAX?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@MLJKMJED@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAR?$AAX?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@DAFEAHDI@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAO?$AAU?$AAT?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@HJNPFMJI@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@GPCLEMA@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA_?$AAP?$AAR?$AAO?$AAC?$AAE?$AAS?$AAS?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@OODFBFOP@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|prtEP0State|

  00018			 AREA	 |.pdata|, PDATA
|$T49660| DCD	|$LN28@prtEP0Stat|
	DCD	0x40005304
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbfn\pdd.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@KAEGALDA@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAp?$AAr?$AAt?$AAE?$AAP?$AA0?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, "P", 0x0, "d"
	DCB	0x0, "d", 0x0, "!", 0x0, "p", 0x0, "r", 0x0, "t", 0x0, "E"
	DCB	0x0, "P", 0x0, "0", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@KEJKJIEM@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| DCB "i"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@GEJCHJD@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$AA@| DCB "E"
	DCB	0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "_"
	DCB	0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@BNMDCKFO@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAT?$AAX?$AA?$AA@| DCB "E"
	DCB	0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "_"
	DCB	0x0, "D", 0x0, "A", 0x0, "T", 0x0, "A", 0x0, "_", 0x0, "T"
	DCB	0x0, "X", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@MLJKMJED@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAR?$AAX?$AA?$AA@| DCB "E"
	DCB	0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "_"
	DCB	0x0, "D", 0x0, "A", 0x0, "T", 0x0, "A", 0x0, "_", 0x0, "R"
	DCB	0x0, "X", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@DAFEAHDI@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAO?$AAU?$AAT?$AA?$AA@| DCB "E"
	DCB	0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "_"
	DCB	0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U", 0x0, "S"
	DCB	0x0, "_", 0x0, "O", 0x0, "U", 0x0, "T", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@HJNPFMJI@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AA?$AA@| DCB "E"
	DCB	0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "_"
	DCB	0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U", 0x0, "S"
	DCB	0x0, "_", 0x0, "I", 0x0, "N", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@GPCLEMA@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA_?$AAP?$AAR?$AAO?$AAC?$AAE?$AAS?$AAS?$AAE?$AAD?$AA?$AA@| DCB "E"
	DCB	0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "_"
	DCB	0x0, "S", 0x0, "E", 0x0, "T", 0x0, "U", 0x0, "P", 0x0, "_"
	DCB	0x0, "P", 0x0, "R", 0x0, "O", 0x0, "C", 0x0, "E", 0x0, "S"
	DCB	0x0, "S", 0x0, "E", 0x0, "D", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@OODFBFOP@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA?$AA@| DCB "E"
	DCB	0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "_"
	DCB	0x0, "S", 0x0, "E", 0x0, "T", 0x0, "U", 0x0, "P", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  006c0			 AREA	 |.text|, CODE, ARM

  006c0		 |prtEP0State| PROC

; 504  : {

  006c0		 |$LN28@prtEP0Stat|
  006c0	e1a0c00d	 mov         r12, sp
  006c4	e92d0001	 stmdb       sp!, {r0}
  006c8	e92d5000	 stmdb       sp!, {r12, lr}
  006cc	e24dd010	 sub         sp, sp, #0x10
  006d0		 |$M49657|

; 505  :     WCHAR *pwch;
; 506  :     
; 507  :     switch (pPdd->ep0State)

  006d0	e59d3018	 ldr         r3, [sp, #0x18]
  006d4	e2833ffb	 add         r3, r3, #0xFB, 30
  006d8	e5933000	 ldr         r3, [r3]
  006dc	e58d3004	 str         r3, [sp, #4]
  006e0	e59d3004	 ldr         r3, [sp, #4]
  006e4	e3530006	 cmp         r3, #6
  006e8	8a000020	 bhi         |$LN1@prtEP0Stat|
  006ec	e59d2004	 ldr         r2, [sp, #4]
  006f0	e1a03102	 mov         r3, r2, lsl #2
  006f4	e083300f	 add         r3, r3, pc
  006f8	e5933004	 ldr         r3, [r3, #4]
  006fc	e08ff003	 add         pc, pc, r3
  00700		 |$LN18@prtEP0Stat|
  00700		 |$LN17@prtEP0Stat|
  00700		 |$LN19@prtEP0Stat|
  00700	00000018	 DCD         0x18
  00704		 |$LN20@prtEP0Stat|
  00704	00000024	 DCD         0x24
  00708		 |$LN21@prtEP0Stat|
  00708	00000030	 DCD         0x30
  0070c		 |$LN22@prtEP0Stat|
  0070c	0000003c	 DCD         0x3c
  00710		 |$LN23@prtEP0Stat|
  00710	00000048	 DCD         0x48
  00714		 |$LN24@prtEP0Stat|
  00714	00000054	 DCD         0x54
  00718		 |$LN25@prtEP0Stat|
  00718	00000060	 DCD         0x60
  0071c		 |$LN8@prtEP0Stat|

; 508  :     {
; 509  :         case EP0_ST_SETUP:
; 510  :             pwch = L"EP0_ST_SETUP";

  0071c	e59f30e4	 ldr         r3, [pc, #0xE4]
  00720	e58d3000	 str         r3, [sp]

; 511  :             break;

  00724	ea000013	 b           |$LN9@prtEP0Stat|
  00728		 |$LN7@prtEP0Stat|

; 512  :             
; 513  :         case EP0_ST_SETUP_PROCESSED:
; 514  :             pwch = L"EP0_ST_SETUP_PROCESSED";

  00728	e59f30d4	 ldr         r3, [pc, #0xD4]
  0072c	e58d3000	 str         r3, [sp]

; 515  :             break;

  00730	ea000010	 b           |$LN9@prtEP0Stat|
  00734		 |$LN6@prtEP0Stat|

; 516  :             
; 517  :         case EP0_ST_STATUS_IN:
; 518  :             pwch = L"EP0_ST_STATUS_IN";

  00734	e59f30c4	 ldr         r3, [pc, #0xC4]
  00738	e58d3000	 str         r3, [sp]

; 519  :             break;

  0073c	ea00000d	 b           |$LN9@prtEP0Stat|
  00740		 |$LN5@prtEP0Stat|

; 520  :             
; 521  :         case EP0_ST_STATUS_OUT:
; 522  :             pwch = L"EP0_ST_STATUS_OUT";

  00740	e59f30b4	 ldr         r3, [pc, #0xB4]
  00744	e58d3000	 str         r3, [sp]

; 523  :             break;

  00748	ea00000a	 b           |$LN9@prtEP0Stat|
  0074c		 |$LN4@prtEP0Stat|

; 524  :             
; 525  :         case EP0_ST_DATA_RX:
; 526  :             pwch = L"EP0_ST_DATA_RX";

  0074c	e59f30a4	 ldr         r3, [pc, #0xA4]
  00750	e58d3000	 str         r3, [sp]

; 527  :             break;

  00754	ea000007	 b           |$LN9@prtEP0Stat|
  00758		 |$LN3@prtEP0Stat|

; 528  :             
; 529  :         case EP0_ST_DATA_TX:
; 530  :             pwch = L"EP0_ST_DATA_TX";

  00758	e59f3094	 ldr         r3, [pc, #0x94]
  0075c	e58d3000	 str         r3, [sp]

; 531  :             break;

  00760	ea000004	 b           |$LN9@prtEP0Stat|
  00764		 |$LN2@prtEP0Stat|

; 532  :             
; 533  :         case EP0_ST_ERROR:
; 534  :             pwch = L"EP0_ST_ERROR";

  00764	e59f3084	 ldr         r3, [pc, #0x84]
  00768	e58d3000	 str         r3, [sp]

; 535  :             break;

  0076c	ea000001	 b           |$LN9@prtEP0Stat|
  00770		 |$LN1@prtEP0Stat|

; 536  :             
; 537  :         default:
; 538  :             pwch = L"invalid state";

  00770	e59f3074	 ldr         r3, [pc, #0x74]
  00774	e58d3000	 str         r3, [sp]
  00778		 |$LN9@prtEP0Stat|

; 539  :             break;
; 540  :     }
; 541  :     
; 542  :     DEBUGMSG(ZONE_INFO, (L"UsbFnPdd!prtEP0State: "
; 543  :         L"%s\r\n",
; 544  :         pwch
; 545  :         ));

  00778	e59f3068	 ldr         r3, [pc, #0x68]
  0077c	e5933440	 ldr         r3, [r3, #0x440]
  00780	e3130b01	 tst         r3, #1, 22
  00784	0a000011	 beq         |$LN15@prtEP0Stat|
  00788	e59f3058	 ldr         r3, [pc, #0x58]
  0078c	e5933440	 ldr         r3, [r3, #0x440]
  00790	e3130801	 tst         r3, #1, 16
  00794	0a000005	 beq         |$LN13@prtEP0Stat|
  00798	e59d1000	 ldr         r1, [sp]
  0079c	e59f0040	 ldr         r0, [pc, #0x40]
  007a0	eb000000	 bl          CeLogMsg
  007a4	e3a03001	 mov         r3, #1
  007a8	e58d3008	 str         r3, [sp, #8]
  007ac	ea000004	 b           |$LN14@prtEP0Stat|
  007b0		 |$LN13@prtEP0Stat|
  007b0	e59d1000	 ldr         r1, [sp]
  007b4	e59f0028	 ldr         r0, [pc, #0x28]
  007b8	eb000000	 bl          NKDbgPrintfW
  007bc	e3a03000	 mov         r3, #0
  007c0	e58d3008	 str         r3, [sp, #8]
  007c4		 |$LN14@prtEP0Stat|
  007c4	e3a03001	 mov         r3, #1
  007c8	e58d300c	 str         r3, [sp, #0xC]
  007cc	ea000001	 b           |$LN16@prtEP0Stat|
  007d0		 |$LN15@prtEP0Stat|
  007d0	e3a03000	 mov         r3, #0
  007d4	e58d300c	 str         r3, [sp, #0xC]
  007d8		 |$LN16@prtEP0Stat|

; 546  : }

  007d8	e28dd010	 add         sp, sp, #0x10
  007dc	e89d6000	 ldmia       sp, {sp, lr}
  007e0	e12fff1e	 bx          lr
  007e4		 |$LN29@prtEP0Stat|
  007e4		 |$LN30@prtEP0Stat|
  007e4	00000000	 DCD         |??_C@_1DG@KAEGALDA@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAp?$AAr?$AAt?$AAE?$AAP?$AA0?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  007e8		 |$LN31@prtEP0Stat|
  007e8	00000000	 DCD         |dpCurSettings|
  007ec		 |$LN32@prtEP0Stat|
  007ec	00000000	 DCD         |??_C@_1BM@KEJKJIEM@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  007f0		 |$LN33@prtEP0Stat|
  007f0	00000000	 DCD         |??_C@_1BK@GEJCHJD@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$AA@|
  007f4		 |$LN34@prtEP0Stat|
  007f4	00000000	 DCD         |??_C@_1BO@BNMDCKFO@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAT?$AAX?$AA?$AA@|
  007f8		 |$LN35@prtEP0Stat|
  007f8	00000000	 DCD         |??_C@_1BO@MLJKMJED@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAR?$AAX?$AA?$AA@|
  007fc		 |$LN36@prtEP0Stat|
  007fc	00000000	 DCD         |??_C@_1CE@DAFEAHDI@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAO?$AAU?$AAT?$AA?$AA@|
  00800		 |$LN37@prtEP0Stat|
  00800	00000000	 DCD         |??_C@_1CC@HJNPFMJI@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AA?$AA@|
  00804		 |$LN38@prtEP0Stat|
  00804	00000000	 DCD         |??_C@_1CO@GPCLEMA@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA_?$AAP?$AAR?$AAO?$AAC?$AAE?$AAS?$AAS?$AAE?$AAD?$AA?$AA@|
  00808		 |$LN39@prtEP0Stat|
  00808	00000000	 DCD         |??_C@_1BK@OODFBFOP@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA?$AA@|
  0080c		 |$M49658|

			 ENDP  ; |prtEP0State|

	EXPORT	|??_C@_1JE@IPGHOELK@?$AAi?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?5?$AAE?$AAP?$AA?3?$AA?$CF?$AA2?$AA?4?$AA2?$AAd?$AA?5?$AA?5?$AAd?$AAi?$AAr?$AAe?$AAc?$AAt?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_17DJGPDNHC@?$AAI?$AAN?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|prtDescriptorInfo|

  00020			 AREA	 |.pdata|, PDATA
|$T49688| DCD	|$LN19@prtDescrip|
	DCD	0x40008504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JE@IPGHOELK@?$AAi?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?5?$AAE?$AAP?$AA?3?$AA?$CF?$AA2?$AA?4?$AA2?$AAd?$AA?5?$AA?5?$AAd?$AAi?$AAr?$AAe?$AAc?$AAt?$AAi@| DCB "i"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "f", 0x0, "a"
	DCB	0x0, "c", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, ":", 0x0, "%"
	DCB	0x0, "2", 0x0, ".", 0x0, "2", 0x0, "d", 0x0, " ", 0x0, " "
	DCB	0x0, "d", 0x0, "i", 0x0, "r", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, ":", 0x0, "%", 0x0, "s"
	DCB	0x0, " ", 0x0, "m", 0x0, "a", 0x0, "x", 0x0, "P", 0x0, "a"
	DCB	0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t", 0x0, "S", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, ":", 0x0, "%", 0x0, "d", 0x0, " "
	DCB	0x0, " ", 0x0, "A", 0x0, "t", 0x0, "t", 0x0, "r", 0x0, "i"
	DCB	0x0, "b", 0x0, "u", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, ":"
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@| DCB "O", 0x0, "U", 0x0, "T", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17DJGPDNHC@?$AAI?$AAN?$AA?5?$AA?$AA@| DCB "I", 0x0, "N", 0x0, " ", 0x0
	DCB	0x0, 0x0				; `string'
; Function compile flags: /Odtp

  0080c			 AREA	 |.text|, CODE, ARM

  0080c		 |prtDescriptorInfo| PROC

; 559  : {

  0080c		 |$LN19@prtDescrip|
  0080c	e1a0c00d	 mov         r12, sp
  00810	e92d0007	 stmdb       sp!, {r0 - r2}
  00814	e92d5000	 stmdb       sp!, {r12, lr}
  00818	e24dd038	 sub         sp, sp, #0x38
  0081c		 |$M49685|

; 560  :     UFN_INTERFACE *pIFC;
; 561  :     UFN_ENDPOINT *pEP;
; 562  :     DWORD ifc, epx;
; 563  : 
; 564  : 	UNREFERENCED_PARAMETER(pFullSpeedDeviceDesc);
; 565  : 	UNREFERENCED_PARAMETER(pFullSpeedConfigDesc);
; 566  : 
; 567  :     for (ifc = 0; ifc < pFullSpeedConfig->Descriptor.bNumInterfaces; ifc++)

  0081c	e3a03000	 mov         r3, #0
  00820	e58d3014	 str         r3, [sp, #0x14]
  00824	ea000002	 b           |$LN6@prtDescrip|
  00828		 |$LN5@prtDescrip|
  00828	e59d3014	 ldr         r3, [sp, #0x14]
  0082c	e2833001	 add         r3, r3, #1
  00830	e58d3014	 str         r3, [sp, #0x14]
  00834		 |$LN6@prtDescrip|
  00834	e59d3044	 ldr         r3, [sp, #0x44]
  00838	e2833008	 add         r3, r3, #8
  0083c	e5d32000	 ldrb        r2, [r3]
  00840	e59d3014	 ldr         r3, [sp, #0x14]
  00844	e1530002	 cmp         r3, r2
  00848	2a00006d	 bcs         |$LN4@prtDescrip|

; 568  :     {
; 569  :         // For each endpoint in interface
; 570  :         pIFC = &pFullSpeedConfig->pInterfaces[ifc];

  0084c	e59d3044	 ldr         r3, [sp, #0x44]
  00850	e2830018	 add         r0, r3, #0x18
  00854	e59d1014	 ldr         r1, [sp, #0x14]
  00858	e3a0301c	 mov         r3, #0x1C
  0085c	e0020391	 mul         r2, r1, r3
  00860	e5903000	 ldr         r3, [r0]
  00864	e0833002	 add         r3, r3, r2
  00868	e58d300c	 str         r3, [sp, #0xC]

; 571  :         for (epx = 0; epx < pIFC->Descriptor.bNumEndpoints; epx++)

  0086c	e3a03000	 mov         r3, #0
  00870	e58d3008	 str         r3, [sp, #8]
  00874	ea000002	 b           |$LN3@prtDescrip|
  00878		 |$LN2@prtDescrip|
  00878	e59d3008	 ldr         r3, [sp, #8]
  0087c	e2833001	 add         r3, r3, #1
  00880	e58d3008	 str         r3, [sp, #8]
  00884		 |$LN3@prtDescrip|
  00884	e59d300c	 ldr         r3, [sp, #0xC]
  00888	e2833008	 add         r3, r3, #8
  0088c	e5d32000	 ldrb        r2, [r3]
  00890	e59d3008	 ldr         r3, [sp, #8]
  00894	e1530002	 cmp         r3, r2
  00898	2a000058	 bcs         |$LN1@prtDescrip|

; 572  :         {
; 573  :             pEP = &pIFC->pEndpoints[epx];

  0089c	e59d300c	 ldr         r3, [sp, #0xC]
  008a0	e2830018	 add         r0, r3, #0x18
  008a4	e59d1008	 ldr         r1, [sp, #8]
  008a8	e3a03014	 mov         r3, #0x14
  008ac	e0020391	 mul         r2, r1, r3
  008b0	e5903000	 ldr         r3, [r0]
  008b4	e0833002	 add         r3, r3, r2
  008b8	e58d3010	 str         r3, [sp, #0x10]

; 574  :             
; 575  :             DEBUGMSG(ZONE_INFO, (TEXT("interface: %d  EP:%2.2d  direction:%s maxPacketSize:%d  Attributes:0x%x\r\n"),
; 576  :                 ifc,
; 577  :                 pEP->Descriptor.bEndpointAddress & 0x7F,
; 578  :                 ((pEP->Descriptor.bEndpointAddress & 0x80)? L"IN " : L"OUT"),
; 579  :                 pEP->Descriptor.wMaxPacketSize,
; 580  :                 pEP->Descriptor.bmAttributes));

  008bc	e59f3158	 ldr         r3, [pc, #0x158]
  008c0	e5933440	 ldr         r3, [r3, #0x440]
  008c4	e3130b01	 tst         r3, #1, 22
  008c8	0a000049	 beq         |$LN15@prtDescrip|
  008cc	e59f3148	 ldr         r3, [pc, #0x148]
  008d0	e5933440	 ldr         r3, [r3, #0x440]
  008d4	e3130801	 tst         r3, #1, 16
  008d8	0a000021	 beq         |$LN13@prtDescrip|
  008dc	e59d3010	 ldr         r3, [sp, #0x10]
  008e0	e2833006	 add         r3, r3, #6
  008e4	e5d33000	 ldrb        r3, [r3]
  008e8	e3130080	 tst         r3, #0x80
  008ec	0a000002	 beq         |$LN9@prtDescrip|
  008f0	e59f3120	 ldr         r3, [pc, #0x120]
  008f4	e58d3028	 str         r3, [sp, #0x28]
  008f8	ea000001	 b           |$LN10@prtDescrip|
  008fc		 |$LN9@prtDescrip|
  008fc	e59f3110	 ldr         r3, [pc, #0x110]
  00900	e58d3028	 str         r3, [sp, #0x28]
  00904		 |$LN10@prtDescrip|
  00904	e59d3010	 ldr         r3, [sp, #0x10]
  00908	e2833007	 add         r3, r3, #7
  0090c	e5d33000	 ldrb        r3, [r3]
  00910	e58d3004	 str         r3, [sp, #4]
  00914	e59d3010	 ldr         r3, [sp, #0x10]
  00918	e2831008	 add         r1, r3, #8
  0091c	e5d13001	 ldrb        r3, [r1, #1]
  00920	e1a03403	 mov         r3, r3, lsl #8
  00924	e1a02803	 mov         r2, r3, lsl #16
  00928	e1a02822	 mov         r2, r2, lsr #16
  0092c	e5d13000	 ldrb        r3, [r1]
  00930	e1833002	 orr         r3, r3, r2
  00934	e58d3000	 str         r3, [sp]
  00938	e59d3028	 ldr         r3, [sp, #0x28]
  0093c	e59d2010	 ldr         r2, [sp, #0x10]
  00940	e2822006	 add         r2, r2, #6
  00944	e5d22000	 ldrb        r2, [r2]
  00948	e202207f	 and         r2, r2, #0x7F
  0094c	e59d1014	 ldr         r1, [sp, #0x14]
  00950	e59f00b8	 ldr         r0, [pc, #0xB8]
  00954	eb000000	 bl          CeLogMsg
  00958	e3a03001	 mov         r3, #1
  0095c	e58d302c	 str         r3, [sp, #0x2C]
  00960	ea000020	 b           |$LN14@prtDescrip|
  00964		 |$LN13@prtDescrip|
  00964	e59d3010	 ldr         r3, [sp, #0x10]
  00968	e2833006	 add         r3, r3, #6
  0096c	e5d33000	 ldrb        r3, [r3]
  00970	e3130080	 tst         r3, #0x80
  00974	0a000002	 beq         |$LN11@prtDescrip|
  00978	e59f3098	 ldr         r3, [pc, #0x98]
  0097c	e58d3030	 str         r3, [sp, #0x30]
  00980	ea000001	 b           |$LN12@prtDescrip|
  00984		 |$LN11@prtDescrip|
  00984	e59f3088	 ldr         r3, [pc, #0x88]
  00988	e58d3030	 str         r3, [sp, #0x30]
  0098c		 |$LN12@prtDescrip|
  0098c	e59d3010	 ldr         r3, [sp, #0x10]
  00990	e2833007	 add         r3, r3, #7
  00994	e5d33000	 ldrb        r3, [r3]
  00998	e58d3004	 str         r3, [sp, #4]
  0099c	e59d3010	 ldr         r3, [sp, #0x10]
  009a0	e2831008	 add         r1, r3, #8
  009a4	e5d13001	 ldrb        r3, [r1, #1]
  009a8	e1a03403	 mov         r3, r3, lsl #8
  009ac	e1a02803	 mov         r2, r3, lsl #16
  009b0	e1a02822	 mov         r2, r2, lsr #16
  009b4	e5d13000	 ldrb        r3, [r1]
  009b8	e1833002	 orr         r3, r3, r2
  009bc	e58d3000	 str         r3, [sp]
  009c0	e59d3030	 ldr         r3, [sp, #0x30]
  009c4	e59d2010	 ldr         r2, [sp, #0x10]
  009c8	e2822006	 add         r2, r2, #6
  009cc	e5d22000	 ldrb        r2, [r2]
  009d0	e202207f	 and         r2, r2, #0x7F
  009d4	e59d1014	 ldr         r1, [sp, #0x14]
  009d8	e59f0030	 ldr         r0, [pc, #0x30]
  009dc	eb000000	 bl          NKDbgPrintfW
  009e0	e3a03000	 mov         r3, #0
  009e4	e58d302c	 str         r3, [sp, #0x2C]
  009e8		 |$LN14@prtDescrip|
  009e8	e3a03001	 mov         r3, #1
  009ec	e58d3034	 str         r3, [sp, #0x34]
  009f0	ea000001	 b           |$LN16@prtDescrip|
  009f4		 |$LN15@prtDescrip|
  009f4	e3a03000	 mov         r3, #0
  009f8	e58d3034	 str         r3, [sp, #0x34]
  009fc		 |$LN16@prtDescrip|

; 581  :         }

  009fc	eaffff9d	 b           |$LN2@prtDescrip|
  00a00		 |$LN1@prtDescrip|

; 582  :     }

  00a00	eaffff88	 b           |$LN5@prtDescrip|
  00a04		 |$LN4@prtDescrip|

; 583  : }

  00a04	e28dd038	 add         sp, sp, #0x38
  00a08	e89d6000	 ldmia       sp, {sp, lr}
  00a0c	e12fff1e	 bx          lr
  00a10		 |$LN20@prtDescrip|
  00a10		 |$LN21@prtDescrip|
  00a10	00000000	 DCD         |??_C@_1JE@IPGHOELK@?$AAi?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?5?$AAE?$AAP?$AA?3?$AA?$CF?$AA2?$AA?4?$AA2?$AAd?$AA?5?$AA?5?$AAd?$AAi?$AAr?$AAe?$AAc?$AAt?$AAi@|
  00a14		 |$LN22@prtDescrip|
  00a14	00000000	 DCD         |??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@|
  00a18		 |$LN23@prtDescrip|
  00a18	00000000	 DCD         |??_C@_17DJGPDNHC@?$AAI?$AAN?$AA?5?$AA?$AA@|
  00a1c		 |$LN24@prtDescrip|
  00a1c	00000000	 DCD         |dpCurSettings|
  00a20		 |$M49686|

			 ENDP  ; |prtDescriptorInfo|

	EXPORT	|CalcFIFOAddr|

  00028			 AREA	 |.pdata|, PDATA
|$T49699| DCD	|$LN6@CalcFIFOAd|
	DCD	0x40001404
; Function compile flags: /Odtp

  00a20			 AREA	 |.text|, CODE, ARM

  00a20		 |CalcFIFOAddr| PROC

; 587  : {

  00a20		 |$LN6@CalcFIFOAd|
  00a20	e1a0c00d	 mov         r12, sp
  00a24	e92d0003	 stmdb       sp!, {r0, r1}
  00a28	e92d5000	 stmdb       sp!, {r12, lr}
  00a2c	e24dd008	 sub         sp, sp, #8
  00a30		 |$M49696|

; 588  :     UINT fifoAddr;
; 589  : 
; 590  :     fifoAddr =  endpoint *(1024/8);

  00a30	e59d2010	 ldr         r2, [sp, #0x10]
  00a34	e3a03080	 mov         r3, #0x80
  00a38	e0030392	 mul         r3, r2, r3
  00a3c	e58d3000	 str         r3, [sp]

; 591  : 
; 592  :     if (bRxDir)

  00a40	e59d3014	 ldr         r3, [sp, #0x14]
  00a44	e3530000	 cmp         r3, #0
  00a48	0a000002	 beq         |$LN1@CalcFIFOAd|

; 593  :        fifoAddr +=512/8;

  00a4c	e59d3000	 ldr         r3, [sp]
  00a50	e2833040	 add         r3, r3, #0x40
  00a54	e58d3000	 str         r3, [sp]
  00a58		 |$LN1@CalcFIFOAd|

; 594  : 
; 595  :     return fifoAddr;

  00a58	e59d3000	 ldr         r3, [sp]
  00a5c	e58d3004	 str         r3, [sp, #4]

; 596  : }

  00a60	e59d0004	 ldr         r0, [sp, #4]
  00a64	e28dd008	 add         sp, sp, #8
  00a68	e89d6000	 ldmia       sp, {sp, lr}
  00a6c	e12fff1e	 bx          lr
  00a70		 |$M49697|

			 ENDP  ; |CalcFIFOAddr|

	EXPORT	|??_C@_1IO@CFFGEKIK@?$AAR?$AAe?$AAa?$AAd?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAE?$AAP?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?3?$AA?5?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?5?$AAt?$AAo?$AAt@| [ DATA ] ; `string'
	EXPORT	|ReadFIFO|

  00030			 AREA	 |.pdata|, PDATA
|$T49713| DCD	|$LN15@ReadFIFO|
	DCD	0x40007404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IO@CFFGEKIK@?$AAR?$AAe?$AAa?$AAd?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAE?$AAP?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?3?$AA?5?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?5?$AAt?$AAo?$AAt@| DCB "R"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, "F", 0x0, "I", 0x0, "F"
	DCB	0x0, "O", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, ":", 0x0, " ", 0x0, "p", 0x0, "D"
	DCB	0x0, "a", 0x0, "t", 0x0, "a", 0x0, "(", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, ")", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, "t", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, ",", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "m", 0x0, "a", 0x0, "i", 0x0, "n"
	DCB	0x0, " ", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, ",", 0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00a70			 AREA	 |.text|, CODE, ARM

  00a70		 |ReadFIFO| PROC

; 599  : {

  00a70		 |$LN15@ReadFIFO|
  00a70	e1a0c00d	 mov         r12, sp
  00a74	e92d000f	 stmdb       sp!, {r0 - r3}
  00a78	e92d5000	 stmdb       sp!, {r12, lr}
  00a7c	e24dd044	 sub         sp, sp, #0x44
  00a80		 |$M49710|

; 600  :     PCSP_MUSB_GEN_REGS pGenRegs = pPdd->pUSBContext->pUsbGenRegs;

  00a80	e59d304c	 ldr         r3, [sp, #0x4C]
  00a84	e2833020	 add         r3, r3, #0x20
  00a88	e5933000	 ldr         r3, [r3]
  00a8c	e2833020	 add         r3, r3, #0x20
  00a90	e5933000	 ldr         r3, [r3]
  00a94	e58d3014	 str         r3, [sp, #0x14]

; 601  :     DWORD total  = size/4;

  00a98	e59d1058	 ldr         r1, [sp, #0x58]
  00a9c	e3a00004	 mov         r0, #4
  00aa0	eb000000	 bl          __rt_udiv
  00aa4	e58d001c	 str         r0, [sp, #0x1C]

; 602  :     DWORD remain = size%4;

  00aa8	e59d1058	 ldr         r1, [sp, #0x58]
  00aac	e3a00004	 mov         r0, #4
  00ab0	eb000000	 bl          __rt_udiv
  00ab4	e58d1018	 str         r1, [sp, #0x18]

; 603  :     DWORD i;
; 604  :     DWORD *pDword =(DWORD *)pData;

  00ab8	e59d3054	 ldr         r3, [sp, #0x54]
  00abc	e58d3010	 str         r3, [sp, #0x10]

; 605  : 
; 606  :     volatile ULONG *pReg = (volatile ULONG *)&pGenRegs->fifo[endpoint];

  00ac0	e59d3014	 ldr         r3, [sp, #0x14]
  00ac4	e2831020	 add         r1, r3, #0x20
  00ac8	e5dd3050	 ldrb        r3, [sp, #0x50]
  00acc	e1a02003	 mov         r2, r3
  00ad0	e3a03004	 mov         r3, #4
  00ad4	e0030392	 mul         r3, r2, r3
  00ad8	e0813003	 add         r3, r1, r3
  00adc	e58d300c	 str         r3, [sp, #0xC]

; 607  : 
; 608  :     // Critical section would be handled outside
; 609  :     DEBUGMSG(ZONE_FUNCTION, (TEXT("ReadFIFO EP(%d): pData(0x%x) total (0x%x), remain (0x%x), size(0x%x)\r\n"), endpoint, pData, total, remain, size));

  00ae0	e59f3154	 ldr         r3, [pc, #0x154]
  00ae4	e5933440	 ldr         r3, [r3, #0x440]
  00ae8	e3130a01	 tst         r3, #1, 20
  00aec	0a00001d	 beq         |$LN11@ReadFIFO|
  00af0	e59f3144	 ldr         r3, [pc, #0x144]
  00af4	e5933440	 ldr         r3, [r3, #0x440]
  00af8	e3130801	 tst         r3, #1, 16
  00afc	0a00000b	 beq         |$LN9@ReadFIFO|
  00b00	e59d3058	 ldr         r3, [sp, #0x58]
  00b04	e58d3004	 str         r3, [sp, #4]
  00b08	e59d3018	 ldr         r3, [sp, #0x18]
  00b0c	e58d3000	 str         r3, [sp]
  00b10	e59d301c	 ldr         r3, [sp, #0x1C]
  00b14	e59d2054	 ldr         r2, [sp, #0x54]
  00b18	e5dd1050	 ldrb        r1, [sp, #0x50]
  00b1c	e59f0114	 ldr         r0, [pc, #0x114]
  00b20	eb000000	 bl          CeLogMsg
  00b24	e3a03001	 mov         r3, #1
  00b28	e58d303c	 str         r3, [sp, #0x3C]
  00b2c	ea00000a	 b           |$LN10@ReadFIFO|
  00b30		 |$LN9@ReadFIFO|
  00b30	e59d3058	 ldr         r3, [sp, #0x58]
  00b34	e58d3004	 str         r3, [sp, #4]
  00b38	e59d3018	 ldr         r3, [sp, #0x18]
  00b3c	e58d3000	 str         r3, [sp]
  00b40	e59d301c	 ldr         r3, [sp, #0x1C]
  00b44	e59d2054	 ldr         r2, [sp, #0x54]
  00b48	e5dd1050	 ldrb        r1, [sp, #0x50]
  00b4c	e59f00e4	 ldr         r0, [pc, #0xE4]
  00b50	eb000000	 bl          NKDbgPrintfW
  00b54	e3a03000	 mov         r3, #0
  00b58	e58d303c	 str         r3, [sp, #0x3C]
  00b5c		 |$LN10@ReadFIFO|
  00b5c	e3a03001	 mov         r3, #1
  00b60	e58d3040	 str         r3, [sp, #0x40]
  00b64	ea000001	 b           |$LN12@ReadFIFO|
  00b68		 |$LN11@ReadFIFO|
  00b68	e3a03000	 mov         r3, #0
  00b6c	e58d3040	 str         r3, [sp, #0x40]
  00b70		 |$LN12@ReadFIFO|

; 610  : 
; 611  :     // this is 32-bit align
; 612  : 
; 613  :     for (i = 0; i < total; i++)

  00b70	e3a03000	 mov         r3, #0
  00b74	e58d3008	 str         r3, [sp, #8]
  00b78	ea000002	 b           |$LN6@ReadFIFO|
  00b7c		 |$LN5@ReadFIFO|
  00b7c	e59d3008	 ldr         r3, [sp, #8]
  00b80	e2833001	 add         r3, r3, #1
  00b84	e58d3008	 str         r3, [sp, #8]
  00b88		 |$LN6@ReadFIFO|
  00b88	e59d2008	 ldr         r2, [sp, #8]
  00b8c	e59d301c	 ldr         r3, [sp, #0x1C]
  00b90	e1520003	 cmp         r2, r3
  00b94	2a000007	 bcs         |$LN4@ReadFIFO|

; 614  :     {
; 615  :         *pDword++ = INREG32(pReg);

  00b98	e59d300c	 ldr         r3, [sp, #0xC]
  00b9c	e5932000	 ldr         r2, [r3]
  00ba0	e59d3010	 ldr         r3, [sp, #0x10]
  00ba4	e5832000	 str         r2, [r3]
  00ba8	e59d3010	 ldr         r3, [sp, #0x10]
  00bac	e2833004	 add         r3, r3, #4
  00bb0	e58d3010	 str         r3, [sp, #0x10]

; 616  :     }

  00bb4	eafffff0	 b           |$LN5@ReadFIFO|
  00bb8		 |$LN4@ReadFIFO|

; 617  : 
; 618  :     if (remain != 0)

  00bb8	e59d3018	 ldr         r3, [sp, #0x18]
  00bbc	e3530000	 cmp         r3, #0
  00bc0	0a000016	 beq         |$LN3@ReadFIFO|

; 619  :     {
; 620  :         UCHAR* pUCHAR = (UCHAR*) pDword;

  00bc4	e59d3010	 ldr         r3, [sp, #0x10]
  00bc8	e58d3024	 str         r3, [sp, #0x24]

; 621  :         DWORD dwTemp = INREG32(pReg);

  00bcc	e59d300c	 ldr         r3, [sp, #0xC]
  00bd0	e5933000	 ldr         r3, [r3]
  00bd4	e58d3020	 str         r3, [sp, #0x20]
  00bd8		 |$LN2@ReadFIFO|

; 622  :         
; 623  :         while (remain--)

  00bd8	e59d3018	 ldr         r3, [sp, #0x18]
  00bdc	e3530000	 cmp         r3, #0
  00be0	e59d3018	 ldr         r3, [sp, #0x18]
  00be4	e2433001	 sub         r3, r3, #1
  00be8	e58d3018	 str         r3, [sp, #0x18]
  00bec	0a00000b	 beq         |$LN1@ReadFIFO|

; 624  :         {
; 625  :             *pUCHAR++ = (UCHAR) (dwTemp & 0xFF);

  00bf0	e59d3020	 ldr         r3, [sp, #0x20]
  00bf4	e20330ff	 and         r3, r3, #0xFF
  00bf8	e20320ff	 and         r2, r3, #0xFF
  00bfc	e59d3024	 ldr         r3, [sp, #0x24]
  00c00	e5c32000	 strb        r2, [r3]
  00c04	e59d3024	 ldr         r3, [sp, #0x24]
  00c08	e2833001	 add         r3, r3, #1
  00c0c	e58d3024	 str         r3, [sp, #0x24]

; 626  :             dwTemp>>=8;

  00c10	e59d3020	 ldr         r3, [sp, #0x20]
  00c14	e1a03423	 mov         r3, r3, lsr #8
  00c18	e58d3020	 str         r3, [sp, #0x20]

; 627  :         }

  00c1c	eaffffed	 b           |$LN2@ReadFIFO|
  00c20		 |$LN1@ReadFIFO|
  00c20		 |$LN3@ReadFIFO|

; 628  :     }
; 629  : 
; 630  :     //RETAILMSG(1,(TEXT("Read fifo\r\n")));
; 631  :     //memdump((UCHAR*)pData,(USHORT)size,0);
; 632  :     //RETAILMSG(1,(TEXT("\r\n")));
; 633  : 
; 634  :     return TRUE;

  00c20	e3a03001	 mov         r3, #1
  00c24	e58d3038	 str         r3, [sp, #0x38]

; 635  : }

  00c28	e59d0038	 ldr         r0, [sp, #0x38]
  00c2c	e28dd044	 add         sp, sp, #0x44
  00c30	e89d6000	 ldmia       sp, {sp, lr}
  00c34	e12fff1e	 bx          lr
  00c38		 |$LN16@ReadFIFO|
  00c38		 |$LN17@ReadFIFO|
  00c38	00000000	 DCD         |??_C@_1IO@CFFGEKIK@?$AAR?$AAe?$AAa?$AAd?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAE?$AAP?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?3?$AA?5?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?5?$AAt?$AAo?$AAt@|
  00c3c		 |$LN18@ReadFIFO|
  00c3c	00000000	 DCD         |dpCurSettings|
  00c40		 |$M49711|

			 ENDP  ; |ReadFIFO|

	EXPORT	|??_C@_1GK@LINCOMEM@?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAI?$AAF?$AAO?$AA?3?$AA?5?$AAt?$AAo?$AAt?$AAa?$AAl?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAr?$AAe?$AAm?$AAa?$AAi?$AAn?$AA?5@| [ DATA ] ; `string'
	EXPORT	|WriteFIFO|

  00038			 AREA	 |.pdata|, PDATA
|$T49726| DCD	|$LN15@WriteFIFO|
	DCD	0x40006804

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@LINCOMEM@?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAI?$AAF?$AAO?$AA?3?$AA?5?$AAt?$AAo?$AAt?$AAa?$AAl?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAr?$AAe?$AAm?$AAa?$AAi?$AAn?$AA?5@| DCB "W"
	DCB	0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e", 0x0, "F", 0x0, "I"
	DCB	0x0, "F", 0x0, "O", 0x0, ":", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, "t", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, ",", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "m", 0x0, "a", 0x0, "i", 0x0, "n"
	DCB	0x0, " ", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, ",", 0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00c40			 AREA	 |.text|, CODE, ARM

  00c40		 |WriteFIFO| PROC

; 640  : {

  00c40		 |$LN15@WriteFIFO|
  00c40	e1a0c00d	 mov         r12, sp
  00c44	e92d000f	 stmdb       sp!, {r0 - r3}
  00c48	e92d5000	 stmdb       sp!, {r12, lr}
  00c4c	e24dd028	 sub         sp, sp, #0x28
  00c50		 |$M49723|

; 641  :     PCSP_MUSB_GEN_REGS pGenRegs = pPdd->pUSBContext->pUsbGenRegs;

  00c50	e59d3030	 ldr         r3, [sp, #0x30]
  00c54	e2833020	 add         r3, r3, #0x20
  00c58	e5933000	 ldr         r3, [r3]
  00c5c	e2833020	 add         r3, r3, #0x20
  00c60	e5933000	 ldr         r3, [r3]
  00c64	e58d300c	 str         r3, [sp, #0xC]

; 642  :     DWORD total  = size/4;

  00c68	e59d103c	 ldr         r1, [sp, #0x3C]
  00c6c	e3a00004	 mov         r0, #4
  00c70	eb000000	 bl          __rt_udiv
  00c74	e58d0014	 str         r0, [sp, #0x14]

; 643  :     DWORD remain = size%4;

  00c78	e59d103c	 ldr         r1, [sp, #0x3C]
  00c7c	e3a00004	 mov         r0, #4
  00c80	eb000000	 bl          __rt_udiv
  00c84	e58d1010	 str         r1, [sp, #0x10]

; 644  :     DWORD i;
; 645  :     DWORD *pDword =(DWORD *)pData;

  00c88	e59d3038	 ldr         r3, [sp, #0x38]
  00c8c	e58d3008	 str         r3, [sp, #8]

; 646  :     volatile ULONG *pReg = (volatile ULONG *)&pGenRegs->fifo[endpoint];

  00c90	e59d300c	 ldr         r3, [sp, #0xC]
  00c94	e2831020	 add         r1, r3, #0x20
  00c98	e5dd3034	 ldrb        r3, [sp, #0x34]
  00c9c	e1a02003	 mov         r2, r3
  00ca0	e3a03004	 mov         r3, #4
  00ca4	e0030392	 mul         r3, r2, r3
  00ca8	e0813003	 add         r3, r1, r3
  00cac	e58d3004	 str         r3, [sp, #4]

; 647  : 
; 648  :     // Critical section would be handled outside
; 649  :     DEBUGMSG(ZONE_FUNCTION, (TEXT("WriteFIFO: total (0x%x), remain (0x%x), size(0x%x)\r\n"), total, remain, size));

  00cb0	e59f3124	 ldr         r3, [pc, #0x124]
  00cb4	e5933440	 ldr         r3, [r3, #0x440]
  00cb8	e3130a01	 tst         r3, #1, 20
  00cbc	0a000015	 beq         |$LN11@WriteFIFO|
  00cc0	e59f3114	 ldr         r3, [pc, #0x114]
  00cc4	e5933440	 ldr         r3, [r3, #0x440]
  00cc8	e3130801	 tst         r3, #1, 16
  00ccc	0a000007	 beq         |$LN9@WriteFIFO|
  00cd0	e59d303c	 ldr         r3, [sp, #0x3C]
  00cd4	e59d2010	 ldr         r2, [sp, #0x10]
  00cd8	e59d1014	 ldr         r1, [sp, #0x14]
  00cdc	e59f00f4	 ldr         r0, [pc, #0xF4]
  00ce0	eb000000	 bl          CeLogMsg
  00ce4	e3a03001	 mov         r3, #1
  00ce8	e58d3020	 str         r3, [sp, #0x20]
  00cec	ea000006	 b           |$LN10@WriteFIFO|
  00cf0		 |$LN9@WriteFIFO|
  00cf0	e59d303c	 ldr         r3, [sp, #0x3C]
  00cf4	e59d2010	 ldr         r2, [sp, #0x10]
  00cf8	e59d1014	 ldr         r1, [sp, #0x14]
  00cfc	e59f00d4	 ldr         r0, [pc, #0xD4]
  00d00	eb000000	 bl          NKDbgPrintfW
  00d04	e3a03000	 mov         r3, #0
  00d08	e58d3020	 str         r3, [sp, #0x20]
  00d0c		 |$LN10@WriteFIFO|
  00d0c	e3a03001	 mov         r3, #1
  00d10	e58d3024	 str         r3, [sp, #0x24]
  00d14	ea000001	 b           |$LN12@WriteFIFO|
  00d18		 |$LN11@WriteFIFO|
  00d18	e3a03000	 mov         r3, #0
  00d1c	e58d3024	 str         r3, [sp, #0x24]
  00d20		 |$LN12@WriteFIFO|

; 650  : 
; 651  :     //memdump((UCHAR*)pData,(USHORT)size,0);
; 652  :     //RETAILMSG(1,(TEXT("\r\n")));
; 653  : 
; 654  :     // this is 32-bit align
; 655  :     for (i = 0; i < total; i++)

  00d20	e3a03000	 mov         r3, #0
  00d24	e58d3000	 str         r3, [sp]
  00d28	ea000002	 b           |$LN6@WriteFIFO|
  00d2c		 |$LN5@WriteFIFO|
  00d2c	e59d3000	 ldr         r3, [sp]
  00d30	e2833001	 add         r3, r3, #1
  00d34	e58d3000	 str         r3, [sp]
  00d38		 |$LN6@WriteFIFO|
  00d38	e59d2000	 ldr         r2, [sp]
  00d3c	e59d3014	 ldr         r3, [sp, #0x14]
  00d40	e1520003	 cmp         r2, r3
  00d44	2a000007	 bcs         |$LN4@WriteFIFO|

; 656  :     {
; 657  :         OUTREG32(pReg, *pDword++);

  00d48	e59d3008	 ldr         r3, [sp, #8]
  00d4c	e5932000	 ldr         r2, [r3]
  00d50	e59d3004	 ldr         r3, [sp, #4]
  00d54	e5832000	 str         r2, [r3]
  00d58	e59d3008	 ldr         r3, [sp, #8]
  00d5c	e2833004	 add         r3, r3, #4
  00d60	e58d3008	 str         r3, [sp, #8]

; 658  :     }

  00d64	eafffff0	 b           |$LN5@WriteFIFO|
  00d68		 |$LN4@WriteFIFO|

; 659  :         
; 660  :     // Set the pByte equal to the last bytes of data being transferred
; 661  :     if (remain != 0)

  00d68	e59d3010	 ldr         r3, [sp, #0x10]
  00d6c	e3530000	 cmp         r3, #0
  00d70	0a000012	 beq         |$LN3@WriteFIFO|

; 662  :     {
; 663  :         // Pointer to the first byte of data
; 664  :         USHORT *pWORD =(USHORT *)pDword;

  00d74	e59d3008	 ldr         r3, [sp, #8]
  00d78	e58d3018	 str         r3, [sp, #0x18]

; 665  : 
; 666  :         // Finally if there is remain
; 667  :         if (remain & 0x2)  // either 2 or 3

  00d7c	e59d3010	 ldr         r3, [sp, #0x10]
  00d80	e3130002	 tst         r3, #2
  00d84	0a000006	 beq         |$LN2@WriteFIFO|

; 668  :         {
; 669  :             // Write 2 bytes to there
; 670  :             OUTREG16(pReg, *pWORD++);

  00d88	e59d3018	 ldr         r3, [sp, #0x18]
  00d8c	e1d320b0	 ldrh        r2, [r3]
  00d90	e59d3004	 ldr         r3, [sp, #4]
  00d94	e1c320b0	 strh        r2, [r3]
  00d98	e59d3018	 ldr         r3, [sp, #0x18]
  00d9c	e2833002	 add         r3, r3, #2
  00da0	e58d3018	 str         r3, [sp, #0x18]
  00da4		 |$LN2@WriteFIFO|

; 671  :         }
; 672  : 
; 673  :         if (remain & 0x1)

  00da4	e59d3010	 ldr         r3, [sp, #0x10]
  00da8	e3130001	 tst         r3, #1
  00dac	0a000003	 beq         |$LN1@WriteFIFO|

; 674  :         {
; 675  :             // Write 1 byte to there
; 676  :             OUTREG8(pReg, *((UCHAR*)pWORD));

  00db0	e59d3018	 ldr         r3, [sp, #0x18]
  00db4	e5d32000	 ldrb        r2, [r3]
  00db8	e59d3004	 ldr         r3, [sp, #4]
  00dbc	e5c32000	 strb        r2, [r3]
  00dc0		 |$LN1@WriteFIFO|
  00dc0		 |$LN3@WriteFIFO|

; 677  :         }
; 678  :     }
; 679  :     return TRUE;

  00dc0	e3a03001	 mov         r3, #1
  00dc4	e58d301c	 str         r3, [sp, #0x1C]

; 680  : }

  00dc8	e59d001c	 ldr         r0, [sp, #0x1C]
  00dcc	e28dd028	 add         sp, sp, #0x28
  00dd0	e89d6000	 ldmia       sp, {sp, lr}
  00dd4	e12fff1e	 bx          lr
  00dd8		 |$LN16@WriteFIFO|
  00dd8		 |$LN17@WriteFIFO|
  00dd8	00000000	 DCD         |??_C@_1GK@LINCOMEM@?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAI?$AAF?$AAO?$AA?3?$AA?5?$AAt?$AAo?$AAt?$AAa?$AAl?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAr?$AAe?$AAm?$AAa?$AAi?$AAn?$AA?5@|
  00ddc		 |$LN18@WriteFIFO|
  00ddc	00000000	 DCD         |dpCurSettings|
  00de0		 |$M49724|

			 ENDP  ; |WriteFIFO|

	EXPORT	|??_C@_1CG@NFOBHLAH@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAs?$AAe?$AAt?$AAI?$AAR?$AAQ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@EODBHLMJ@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAs?$AAe?$AAt?$AAI?$AAR?$AAQ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00040			 AREA	 |.pdata|, PDATA
|$T49743| DCD	|$LN18@Device_Res|
	DCD	0x4000bc04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@NFOBHLAH@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAs?$AAe?$AAt?$AAI?$AAR?$AAQ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "_", 0x0, "R", 0x0, "e", 0x0, "s", 0x0, "e", 0x0, "t"
	DCB	0x0, "I", 0x0, "R", 0x0, "Q", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@EODBHLMJ@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAs?$AAe?$AAt?$AAI?$AAR?$AAQ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "_", 0x0, "R", 0x0, "e", 0x0, "s", 0x0, "e", 0x0, "t"
	DCB	0x0, "I", 0x0, "R", 0x0, "Q", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  00de0			 AREA	 |.text|, CODE, ARM

  00de0		 |Device_ResetIRQ| PROC

; 1396 : {

  00de0		 |$LN18@Device_Res|
  00de0	e1a0c00d	 mov         r12, sp
  00de4	e92d0001	 stmdb       sp!, {r0}
  00de8	e92d5000	 stmdb       sp!, {r12, lr}
  00dec	e24dd01c	 sub         sp, sp, #0x1C
  00df0		 |$M49740|

; 1397 :     MUsbFnPdd_t *pPdd =((PHSMUSB_T) pHSMUSBContext)->pContext[DEVICE_CONTEXT];

  00df0	e59d3024	 ldr         r3, [sp, #0x24]
  00df4	e2833010	 add         r3, r3, #0x10
  00df8	e5933000	 ldr         r3, [r3]
  00dfc	e58d3004	 str         r3, [sp, #4]

; 1398 :     PCSP_MUSB_GEN_REGS pGenRegs =((PHSMUSB_T) pHSMUSBContext)->pUsbGenRegs;

  00e00	e59d3024	 ldr         r3, [sp, #0x24]
  00e04	e2833020	 add         r3, r3, #0x20
  00e08	e5933000	 ldr         r3, [r3]
  00e0c	e58d3000	 str         r3, [sp]

; 1399 :     
; 1400 :     DEBUGMSG(ZONE_FUNCTION, (TEXT("+Device_ResetIRQ\r\n")));

  00e10	e59f32b0	 ldr         r3, [pc, #0x2B0]
  00e14	e5933440	 ldr         r3, [r3, #0x440]
  00e18	e3130a01	 tst         r3, #1, 20
  00e1c	0a00000f	 beq         |$LN10@Device_Res|
  00e20	e59f32a0	 ldr         r3, [pc, #0x2A0]
  00e24	e5933440	 ldr         r3, [r3, #0x440]
  00e28	e3130801	 tst         r3, #1, 16
  00e2c	0a000004	 beq         |$LN8@Device_Res|
  00e30	e59f0294	 ldr         r0, [pc, #0x294]
  00e34	eb000000	 bl          CeLogMsg
  00e38	e3a03001	 mov         r3, #1
  00e3c	e58d300c	 str         r3, [sp, #0xC]
  00e40	ea000003	 b           |$LN9@Device_Res|
  00e44		 |$LN8@Device_Res|
  00e44	e59f0280	 ldr         r0, [pc, #0x280]
  00e48	eb000000	 bl          NKDbgPrintfW
  00e4c	e3a03000	 mov         r3, #0
  00e50	e58d300c	 str         r3, [sp, #0xC]
  00e54		 |$LN9@Device_Res|
  00e54	e3a03001	 mov         r3, #1
  00e58	e58d3010	 str         r3, [sp, #0x10]
  00e5c	ea000001	 b           |$LN11@Device_Res|
  00e60		 |$LN10@Device_Res|
  00e60	e3a03000	 mov         r3, #0
  00e64	e58d3010	 str         r3, [sp, #0x10]
  00e68		 |$LN11@Device_Res|

; 1401 :     
; 1402 :     // initialize Endpoint0 setup state 
; 1403 :     pPdd->ep0State = EP0_ST_SETUP;

  00e68	e59d3004	 ldr         r3, [sp, #4]
  00e6c	e2832ffb	 add         r2, r3, #0xFB, 30
  00e70	e3a03000	 mov         r3, #0
  00e74	e5823000	 str         r3, [r2]

; 1404 :     
; 1405 :     pPdd->intr_rx_data_avail = 0;

  00e78	e59d3004	 ldr         r3, [sp, #4]
  00e7c	e2832e3f	 add         r2, r3, #0x3F, 28
  00e80	e3a03000	 mov         r3, #0
  00e84	e5823000	 str         r3, [r2]

; 1406 :     if (pPdd->enableDMA && (pPdd->rx0DmaEp != -1) && pPdd->ep[pPdd->rx0DmaEp].dmaEnabled)

  00e88	e59d3004	 ldr         r3, [sp, #4]
  00e8c	e2833008	 add         r3, r3, #8
  00e90	e5933000	 ldr         r3, [r3]
  00e94	e3530000	 cmp         r3, #0
  00e98	0a000014	 beq         |$LN5@Device_Res|
  00e9c	e59d3004	 ldr         r3, [sp, #4]
  00ea0	e283300c	 add         r3, r3, #0xC
  00ea4	e5933000	 ldr         r3, [r3]
  00ea8	e3730001	 cmn         r3, #1
  00eac	0a00000f	 beq         |$LN5@Device_Res|
  00eb0	e59d3004	 ldr         r3, [sp, #4]
  00eb4	e28310ac	 add         r1, r3, #0xAC
  00eb8	e59d3004	 ldr         r3, [sp, #4]
  00ebc	e283300c	 add         r3, r3, #0xC
  00ec0	e5932000	 ldr         r2, [r3]
  00ec4	e3a03034	 mov         r3, #0x34
  00ec8	e0030392	 mul         r3, r2, r3
  00ecc	e0813003	 add         r3, r1, r3
  00ed0	e2833010	 add         r3, r3, #0x10
  00ed4	e5933000	 ldr         r3, [r3]
  00ed8	e3530000	 cmp         r3, #0
  00edc	0a000003	 beq         |$LN5@Device_Res|

; 1407 :         pPdd->rx0DmaState = MODE_DMA;

  00ee0	e59d3004	 ldr         r3, [sp, #4]
  00ee4	e283201c	 add         r2, r3, #0x1C
  00ee8	e3a03000	 mov         r3, #0
  00eec	e5823000	 str         r3, [r2]
  00ef0		 |$LN5@Device_Res|

; 1408 :     
; 1409 :     pPdd->fPowerDown = FALSE;

  00ef0	e59d3004	 ldr         r3, [sp, #4]
  00ef4	e28320a4	 add         r2, r3, #0xA4
  00ef8	e3a03000	 mov         r3, #0
  00efc	e5823000	 str         r3, [r2]

; 1410 :     pPdd->dwUSBFNState = USBFN_IDLE;

  00f00	e59d3004	 ldr         r3, [sp, #4]
  00f04	e28320a8	 add         r2, r3, #0xA8
  00f08	e3a03000	 mov         r3, #0
  00f0c	e5823000	 str         r3, [r2]

; 1411 : 
; 1412 :     if ((pPdd->devState & MUSB_DEVSTAT_ATT) == 0)

  00f10	e59d3004	 ldr         r3, [sp, #4]
  00f14	e283306c	 add         r3, r3, #0x6C
  00f18	e5933000	 ldr         r3, [r3]
  00f1c	e3130001	 tst         r3, #1
  00f20	1a00003f	 bne         |$LN4@Device_Res|

; 1413 :     {
; 1414 :         // MUSB doesn't generate an attach interrrupt.  Interpret bus reset event as attach.
; 1415 :         pPdd->devState |= MUSB_DEVSTAT_ATT | MUSB_DEVSTAT_USB_RESET;

  00f24	e59d3004	 ldr         r3, [sp, #4]
  00f28	e283306c	 add         r3, r3, #0x6C
  00f2c	e5933000	 ldr         r3, [r3]
  00f30	e3832021	 orr         r2, r3, #0x21
  00f34	e59d3004	 ldr         r3, [sp, #4]
  00f38	e283306c	 add         r3, r3, #0x6C
  00f3c	e5832000	 str         r2, [r3]

; 1416 :         pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_EVENTS, UFN_DETACH);

  00f40	e3a02000	 mov         r2, #0
  00f44	e3a01001	 mov         r1, #1
  00f48	e59d3004	 ldr         r3, [sp, #4]
  00f4c	e2833024	 add         r3, r3, #0x24
  00f50	e5930000	 ldr         r0, [r3]
  00f54	e59d3004	 ldr         r3, [sp, #4]
  00f58	e2833028	 add         r3, r3, #0x28
  00f5c	e5933000	 ldr         r3, [r3]
  00f60	e1a0e00f	 mov         lr, pc
  00f64	e12fff13	 bx          r3

; 1417 :         pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_EVENTS, UFN_ATTACH);

  00f68	e3a02001	 mov         r2, #1
  00f6c	e3a01001	 mov         r1, #1
  00f70	e59d3004	 ldr         r3, [sp, #4]
  00f74	e2833024	 add         r3, r3, #0x24
  00f78	e5930000	 ldr         r0, [r3]
  00f7c	e59d3004	 ldr         r3, [sp, #4]
  00f80	e2833028	 add         r3, r3, #0x28
  00f84	e5933000	 ldr         r3, [r3]
  00f88	e1a0e00f	 mov         lr, pc
  00f8c	e12fff13	 bx          r3

; 1418 :         if (INREG8(&pGenRegs->Power) & POWER_HSMODE)

  00f90	e59d3000	 ldr         r3, [sp]
  00f94	e2833001	 add         r3, r3, #1
  00f98	e5d33000	 ldrb        r3, [r3]
  00f9c	e3130010	 tst         r3, #0x10
  00fa0	0a00000a	 beq         |$LN3@Device_Res|

; 1419 :         {
; 1420 :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_SPEED, BS_HIGH_SPEED);

  00fa4	e3a02002	 mov         r2, #2
  00fa8	e3a01003	 mov         r1, #3
  00fac	e59d3004	 ldr         r3, [sp, #4]
  00fb0	e2833024	 add         r3, r3, #0x24
  00fb4	e5930000	 ldr         r0, [r3]
  00fb8	e59d3004	 ldr         r3, [sp, #4]
  00fbc	e2833028	 add         r3, r3, #0x28
  00fc0	e5933000	 ldr         r3, [r3]
  00fc4	e1a0e00f	 mov         lr, pc
  00fc8	e12fff13	 bx          r3

; 1421 :         }
; 1422 :         else

  00fcc	ea000009	 b           |$LN2@Device_Res|
  00fd0		 |$LN3@Device_Res|

; 1423 :         {
; 1424 :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_SPEED, BS_FULL_SPEED);

  00fd0	e3a02001	 mov         r2, #1
  00fd4	e3a01003	 mov         r1, #3
  00fd8	e59d3004	 ldr         r3, [sp, #4]
  00fdc	e2833024	 add         r3, r3, #0x24
  00fe0	e5930000	 ldr         r0, [r3]
  00fe4	e59d3004	 ldr         r3, [sp, #4]
  00fe8	e2833028	 add         r3, r3, #0x28
  00fec	e5933000	 ldr         r3, [r3]
  00ff0	e1a0e00f	 mov         lr, pc
  00ff4	e12fff13	 bx          r3
  00ff8		 |$LN2@Device_Res|

; 1425 :         }           
; 1426 :         // Tell MDD about reset...
; 1427 :         pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_EVENTS, UFN_RESET);

  00ff8	e3a02002	 mov         r2, #2
  00ffc	e3a01001	 mov         r1, #1
  01000	e59d3004	 ldr         r3, [sp, #4]
  01004	e2833024	 add         r3, r3, #0x24
  01008	e5930000	 ldr         r0, [r3]
  0100c	e59d3004	 ldr         r3, [sp, #4]
  01010	e2833028	 add         r3, r3, #0x28
  01014	e5933000	 ldr         r3, [r3]
  01018	e1a0e00f	 mov         lr, pc
  0101c	e12fff13	 bx          r3

; 1428 :     }
; 1429 :     else

  01020	ea000009	 b           |$LN1@Device_Res|
  01024		 |$LN4@Device_Res|

; 1430 :         pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_EVENTS, UFN_RESET);

  01024	e3a02002	 mov         r2, #2
  01028	e3a01001	 mov         r1, #1
  0102c	e59d3004	 ldr         r3, [sp, #4]
  01030	e2833024	 add         r3, r3, #0x24
  01034	e5930000	 ldr         r0, [r3]
  01038	e59d3004	 ldr         r3, [sp, #4]
  0103c	e2833028	 add         r3, r3, #0x28
  01040	e5933000	 ldr         r3, [r3]
  01044	e1a0e00f	 mov         lr, pc
  01048	e12fff13	 bx          r3
  0104c		 |$LN1@Device_Res|

; 1431 : 
; 1432 :     prtEP0State(pPdd);

  0104c	e59d0004	 ldr         r0, [sp, #4]
  01050	eb000000	 bl          prtEP0State

; 1433 :     DEBUGMSG(ZONE_FUNCTION, (TEXT("-Device_ResetIRQ\r\n")));

  01054	e59f306c	 ldr         r3, [pc, #0x6C]
  01058	e5933440	 ldr         r3, [r3, #0x440]
  0105c	e3130a01	 tst         r3, #1, 20
  01060	0a00000f	 beq         |$LN14@Device_Res|
  01064	e59f305c	 ldr         r3, [pc, #0x5C]
  01068	e5933440	 ldr         r3, [r3, #0x440]
  0106c	e3130801	 tst         r3, #1, 16
  01070	0a000004	 beq         |$LN12@Device_Res|
  01074	e59f0048	 ldr         r0, [pc, #0x48]
  01078	eb000000	 bl          CeLogMsg
  0107c	e3a03001	 mov         r3, #1
  01080	e58d3014	 str         r3, [sp, #0x14]
  01084	ea000003	 b           |$LN13@Device_Res|
  01088		 |$LN12@Device_Res|
  01088	e59f0034	 ldr         r0, [pc, #0x34]
  0108c	eb000000	 bl          NKDbgPrintfW
  01090	e3a03000	 mov         r3, #0
  01094	e58d3014	 str         r3, [sp, #0x14]
  01098		 |$LN13@Device_Res|
  01098	e3a03001	 mov         r3, #1
  0109c	e58d3018	 str         r3, [sp, #0x18]
  010a0	ea000001	 b           |$LN15@Device_Res|
  010a4		 |$LN14@Device_Res|
  010a4	e3a03000	 mov         r3, #0
  010a8	e58d3018	 str         r3, [sp, #0x18]
  010ac		 |$LN15@Device_Res|

; 1434 :     return ERROR_SUCCESS;

  010ac	e3a03000	 mov         r3, #0
  010b0	e58d3008	 str         r3, [sp, #8]

; 1435 : }

  010b4	e59d0008	 ldr         r0, [sp, #8]
  010b8	e28dd01c	 add         sp, sp, #0x1C
  010bc	e89d6000	 ldmia       sp, {sp, lr}
  010c0	e12fff1e	 bx          lr
  010c4		 |$LN19@Device_Res|
  010c4		 |$LN20@Device_Res|
  010c4	00000000	 DCD         |??_C@_1CG@NFOBHLAH@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAs?$AAe?$AAt?$AAI?$AAR?$AAQ?$AA?$AN?$AA?6?$AA?$AA@|
  010c8		 |$LN21@Device_Res|
  010c8	00000000	 DCD         |dpCurSettings|
  010cc		 |$LN22@Device_Res|
  010cc	00000000	 DCD         |??_C@_1CG@EODBHLMJ@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAs?$AAe?$AAt?$AAI?$AAR?$AAQ?$AA?$AN?$AA?6?$AA?$AA@|
  010d0		 |$M49741|

			 ENDP  ; |Device_ResetIRQ|

	EXPORT	|??_C@_1CI@MJANMLIL@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAI?$AAR?$AAQ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00048			 AREA	 |.pdata|, PDATA
|$T49757| DCD	|$LN9@Device_Res@2|
	DCD	0x40002204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@MJANMLIL@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAI?$AAR?$AAQ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "_", 0x0, "R", 0x0, "e", 0x0, "s", 0x0, "u", 0x0, "m"
	DCB	0x0, "e", 0x0, "I", 0x0, "R", 0x0, "Q", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  010d0			 AREA	 |.text|, CODE, ARM

  010d0		 |Device_ResumeIRQ| PROC

; 1455 : {

  010d0		 |$LN9@Device_Res@2|
  010d0	e1a0c00d	 mov         r12, sp
  010d4	e92d0001	 stmdb       sp!, {r0}
  010d8	e92d5000	 stmdb       sp!, {r12, lr}
  010dc	e24dd00c	 sub         sp, sp, #0xC
  010e0		 |$M49754|

; 1456 : 	UNREFERENCED_PARAMETER(pHSMUSBContext);
; 1457 : 
; 1458 :     DEBUGMSG(ZONE_FUNCTION, (TEXT("+Device_ResumeIRQ\r\n")));

  010e0	e59f306c	 ldr         r3, [pc, #0x6C]
  010e4	e5933440	 ldr         r3, [r3, #0x440]
  010e8	e3130a01	 tst         r3, #1, 20
  010ec	0a00000f	 beq         |$LN5@Device_Res@2|
  010f0	e59f305c	 ldr         r3, [pc, #0x5C]
  010f4	e5933440	 ldr         r3, [r3, #0x440]
  010f8	e3130801	 tst         r3, #1, 16
  010fc	0a000004	 beq         |$LN3@Device_Res@2|
  01100	e59f0048	 ldr         r0, [pc, #0x48]
  01104	eb000000	 bl          CeLogMsg
  01108	e3a03001	 mov         r3, #1
  0110c	e58d3004	 str         r3, [sp, #4]
  01110	ea000003	 b           |$LN4@Device_Res@2|
  01114		 |$LN3@Device_Res@2|
  01114	e59f0034	 ldr         r0, [pc, #0x34]
  01118	eb000000	 bl          NKDbgPrintfW
  0111c	e3a03000	 mov         r3, #0
  01120	e58d3004	 str         r3, [sp, #4]
  01124		 |$LN4@Device_Res@2|
  01124	e3a03001	 mov         r3, #1
  01128	e58d3008	 str         r3, [sp, #8]
  0112c	ea000001	 b           |$LN6@Device_Res@2|
  01130		 |$LN5@Device_Res@2|
  01130	e3a03000	 mov         r3, #0
  01134	e58d3008	 str         r3, [sp, #8]
  01138		 |$LN6@Device_Res@2|

; 1459 :     return ERROR_SUCCESS;

  01138	e3a03000	 mov         r3, #0
  0113c	e58d3000	 str         r3, [sp]

; 1460 : }

  01140	e59d0000	 ldr         r0, [sp]
  01144	e28dd00c	 add         sp, sp, #0xC
  01148	e89d6000	 ldmia       sp, {sp, lr}
  0114c	e12fff1e	 bx          lr
  01150		 |$LN10@Device_Res@2|
  01150		 |$LN11@Device_Res@2|
  01150	00000000	 DCD         |??_C@_1CI@MJANMLIL@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAI?$AAR?$AAQ?$AA?$AN?$AA?6?$AA?$AA@|
  01154		 |$LN12@Device_Res@2|
  01154	00000000	 DCD         |dpCurSettings|
  01158		 |$M49755|

			 ENDP  ; |Device_ResumeIRQ|

	EXPORT	|??_C@_1DK@FHLFPKNK@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAa?$AAd?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@JKCHOKLD@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAa?$AAd?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?3?$AA?5?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@CHGOCLOL@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@PCNAJENA@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAa?$AAd?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|Device_ReadSetup|

  00050			 AREA	 |.pdata|, PDATA
|$T49782| DCD	|$LN21@Device_Rea|
	DCD	0x40008f04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@FHLFPKNK@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAa?$AAd?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "R", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "p", 0x0, " ", 0x0, "=", 0x0, ">"
	DCB	0x0, " ", 0x0, "N", 0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f"
	DCB	0x0, "y", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@JKCHOKLD@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAa?$AAd?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?3?$AA?5?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "R", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "p", 0x0, ":", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, " ", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@CHGOCLOL@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, ":", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@PCNAJENA@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAa?$AAd?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "R", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "p", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  01158			 AREA	 |.text|, CODE, ARM

  01158		 |Device_ReadSetup| PROC

; 1480 : {

  01158		 |$LN21@Device_Rea|
  01158	e1a0c00d	 mov         r12, sp
  0115c	e92d0001	 stmdb       sp!, {r0}
  01160	e92d5000	 stmdb       sp!, {r12, lr}
  01164	e24dd038	 sub         sp, sp, #0x38
  01168		 |$M49779|

; 1481 :     PHSMUSB_T pUSBContxt =(PHSMUSB_T) pHSMUSBContext;

  01168	e59d3040	 ldr         r3, [sp, #0x40]
  0116c	e58d3004	 str         r3, [sp, #4]

; 1482 :     MUsbFnPdd_t *pPdd =((PHSMUSB_T) pHSMUSBContext)->pContext[DEVICE_CONTEXT];

  01170	e59d3040	 ldr         r3, [sp, #0x40]
  01174	e2833010	 add         r3, r3, #0x10
  01178	e5933000	 ldr         r3, [r3]
  0117c	e58d3010	 str         r3, [sp, #0x10]

; 1483 :     PCSP_MUSB_GEN_REGS pGenRegs = pUSBContxt->pUsbGenRegs;

  01180	e59d3004	 ldr         r3, [sp, #4]
  01184	e2833020	 add         r3, r3, #0x20
  01188	e5933000	 ldr         r3, [r3]
  0118c	e58d3000	 str         r3, [sp]

; 1484 :     UINT32 data[2];
; 1485 :     
; 1486 :     DEBUGMSG(ZONE_FUNCTION, (L"Device_ReadSetup\r\n"));

  01190	e59f31ec	 ldr         r3, [pc, #0x1EC]
  01194	e5933440	 ldr         r3, [r3, #0x440]
  01198	e3130a01	 tst         r3, #1, 20
  0119c	0a00000f	 beq         |$LN5@Device_Rea|
  011a0	e59f31dc	 ldr         r3, [pc, #0x1DC]
  011a4	e5933440	 ldr         r3, [r3, #0x440]
  011a8	e3130801	 tst         r3, #1, 16
  011ac	0a000004	 beq         |$LN3@Device_Rea|
  011b0	e59f01d8	 ldr         r0, [pc, #0x1D8]
  011b4	eb000000	 bl          CeLogMsg
  011b8	e3a03001	 mov         r3, #1
  011bc	e58d3018	 str         r3, [sp, #0x18]
  011c0	ea000003	 b           |$LN4@Device_Rea|
  011c4		 |$LN3@Device_Rea|
  011c4	e59f01c4	 ldr         r0, [pc, #0x1C4]
  011c8	eb000000	 bl          NKDbgPrintfW
  011cc	e3a03000	 mov         r3, #0
  011d0	e58d3018	 str         r3, [sp, #0x18]
  011d4		 |$LN4@Device_Rea|
  011d4	e3a03001	 mov         r3, #1
  011d8	e58d301c	 str         r3, [sp, #0x1C]
  011dc	ea000001	 b           |$LN6@Device_Rea|
  011e0		 |$LN5@Device_Rea|
  011e0	e3a03000	 mov         r3, #0
  011e4	e58d301c	 str         r3, [sp, #0x1C]
  011e8		 |$LN6@Device_Rea|

; 1487 :     DEBUGMSG(ZONE_INFO, (L"Power register: 0x%02x\r\n", INREG8(&pGenRegs->Power)));

  011e8	e59f3194	 ldr         r3, [pc, #0x194]
  011ec	e5933440	 ldr         r3, [r3, #0x440]
  011f0	e3130b01	 tst         r3, #1, 22
  011f4	0a000015	 beq         |$LN9@Device_Rea|
  011f8	e59f3184	 ldr         r3, [pc, #0x184]
  011fc	e5933440	 ldr         r3, [r3, #0x440]
  01200	e3130801	 tst         r3, #1, 16
  01204	0a000007	 beq         |$LN7@Device_Rea|
  01208	e59d3000	 ldr         r3, [sp]
  0120c	e2833001	 add         r3, r3, #1
  01210	e5d31000	 ldrb        r1, [r3]
  01214	e59f0170	 ldr         r0, [pc, #0x170]
  01218	eb000000	 bl          CeLogMsg
  0121c	e3a03001	 mov         r3, #1
  01220	e58d3020	 str         r3, [sp, #0x20]
  01224	ea000006	 b           |$LN8@Device_Rea|
  01228		 |$LN7@Device_Rea|
  01228	e59d3000	 ldr         r3, [sp]
  0122c	e2833001	 add         r3, r3, #1
  01230	e5d31000	 ldrb        r1, [r3]
  01234	e59f0150	 ldr         r0, [pc, #0x150]
  01238	eb000000	 bl          NKDbgPrintfW
  0123c	e3a03000	 mov         r3, #0
  01240	e58d3020	 str         r3, [sp, #0x20]
  01244		 |$LN8@Device_Rea|
  01244	e3a03001	 mov         r3, #1
  01248	e58d3024	 str         r3, [sp, #0x24]
  0124c	ea000001	 b           |$LN10@Device_Rea|
  01250		 |$LN9@Device_Rea|
  01250	e3a03000	 mov         r3, #0
  01254	e58d3024	 str         r3, [sp, #0x24]
  01258		 |$LN10@Device_Rea|

; 1488 :     
; 1489 :     // Read setup data
; 1490 :     data[0] = INREG32(&pGenRegs->fifo[EP0]);

  01258	e59d3000	 ldr         r3, [sp]
  0125c	e2833020	 add         r3, r3, #0x20
  01260	e5933000	 ldr         r3, [r3]
  01264	e58d3008	 str         r3, [sp, #8]

; 1491 :     data[1] = INREG32(&pGenRegs->fifo[EP0]);

  01268	e59d3000	 ldr         r3, [sp]
  0126c	e2833020	 add         r3, r3, #0x20
  01270	e5933000	 ldr         r3, [r3]
  01274	e58d300c	 str         r3, [sp, #0xC]

; 1492 :     
; 1493 :     DEBUGMSG(ZONE_INFO, (L"Device_ReadSetup: "
; 1494 :         L"%08x %08x\r\n", data[0], data[1]
; 1495 :         ));

  01278	e59f3104	 ldr         r3, [pc, #0x104]
  0127c	e5933440	 ldr         r3, [r3, #0x440]
  01280	e3130b01	 tst         r3, #1, 22
  01284	0a000013	 beq         |$LN13@Device_Rea|
  01288	e59f30f4	 ldr         r3, [pc, #0xF4]
  0128c	e5933440	 ldr         r3, [r3, #0x440]
  01290	e3130801	 tst         r3, #1, 16
  01294	0a000006	 beq         |$LN11@Device_Rea|
  01298	e59d200c	 ldr         r2, [sp, #0xC]
  0129c	e59d1008	 ldr         r1, [sp, #8]
  012a0	e59f00e0	 ldr         r0, [pc, #0xE0]
  012a4	eb000000	 bl          CeLogMsg
  012a8	e3a03001	 mov         r3, #1
  012ac	e58d3028	 str         r3, [sp, #0x28]
  012b0	ea000005	 b           |$LN12@Device_Rea|
  012b4		 |$LN11@Device_Rea|
  012b4	e59d200c	 ldr         r2, [sp, #0xC]
  012b8	e59d1008	 ldr         r1, [sp, #8]
  012bc	e59f00c4	 ldr         r0, [pc, #0xC4]
  012c0	eb000000	 bl          NKDbgPrintfW
  012c4	e3a03000	 mov         r3, #0
  012c8	e58d3028	 str         r3, [sp, #0x28]
  012cc		 |$LN12@Device_Rea|
  012cc	e3a03001	 mov         r3, #1
  012d0	e58d302c	 str         r3, [sp, #0x2C]
  012d4	ea000001	 b           |$LN14@Device_Rea|
  012d8		 |$LN13@Device_Rea|
  012d8	e3a03000	 mov         r3, #0
  012dc	e58d302c	 str         r3, [sp, #0x2C]
  012e0		 |$LN14@Device_Rea|

; 1496 :     
; 1497 :     DBGPrtSetupPkt((PVOID)data);

  012e0	e28d0008	 add         r0, sp, #8
  012e4	eb000000	 bl          DBGPrtSetupPkt

; 1498 :     DEBUGMSG(ZONE_INFO, (TEXT("Device_ReadSetup => Notify\r\n")));

  012e8	e59f3094	 ldr         r3, [pc, #0x94]
  012ec	e5933440	 ldr         r3, [r3, #0x440]
  012f0	e3130b01	 tst         r3, #1, 22
  012f4	0a00000f	 beq         |$LN17@Device_Rea|
  012f8	e59f3084	 ldr         r3, [pc, #0x84]
  012fc	e5933440	 ldr         r3, [r3, #0x440]
  01300	e3130801	 tst         r3, #1, 16
  01304	0a000004	 beq         |$LN15@Device_Rea|
  01308	e59f0070	 ldr         r0, [pc, #0x70]
  0130c	eb000000	 bl          CeLogMsg
  01310	e3a03001	 mov         r3, #1
  01314	e58d3030	 str         r3, [sp, #0x30]
  01318	ea000003	 b           |$LN16@Device_Rea|
  0131c		 |$LN15@Device_Rea|
  0131c	e59f005c	 ldr         r0, [pc, #0x5C]
  01320	eb000000	 bl          NKDbgPrintfW
  01324	e3a03000	 mov         r3, #0
  01328	e58d3030	 str         r3, [sp, #0x30]
  0132c		 |$LN16@Device_Rea|
  0132c	e3a03001	 mov         r3, #1
  01330	e58d3034	 str         r3, [sp, #0x34]
  01334	ea000001	 b           |$LN18@Device_Rea|
  01338		 |$LN17@Device_Rea|
  01338	e3a03000	 mov         r3, #0
  0133c	e58d3034	 str         r3, [sp, #0x34]
  01340		 |$LN18@Device_Rea|

; 1499 :     pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_SETUP_PACKET, (DWORD)data);

  01340	e28d2008	 add         r2, sp, #8
  01344	e3a01004	 mov         r1, #4
  01348	e59d3010	 ldr         r3, [sp, #0x10]
  0134c	e2833024	 add         r3, r3, #0x24
  01350	e5930000	 ldr         r0, [r3]
  01354	e59d3010	 ldr         r3, [sp, #0x10]
  01358	e2833028	 add         r3, r3, #0x28
  0135c	e5933000	 ldr         r3, [r3]
  01360	e1a0e00f	 mov         lr, pc
  01364	e12fff13	 bx          r3

; 1500 :     
; 1501 :     return ERROR_SUCCESS;

  01368	e3a03000	 mov         r3, #0
  0136c	e58d3014	 str         r3, [sp, #0x14]

; 1502 : }

  01370	e59d0014	 ldr         r0, [sp, #0x14]
  01374	e28dd038	 add         sp, sp, #0x38
  01378	e89d6000	 ldmia       sp, {sp, lr}
  0137c	e12fff1e	 bx          lr
  01380		 |$LN22@Device_Rea|
  01380		 |$LN23@Device_Rea|
  01380	00000000	 DCD         |??_C@_1DK@FHLFPKNK@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAa?$AAd?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$AN?$AA?6?$AA?$AA@|
  01384		 |$LN24@Device_Rea|
  01384	00000000	 DCD         |dpCurSettings|
  01388		 |$LN25@Device_Rea|
  01388	00000000	 DCD         |??_C@_1DM@JKCHOKLD@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAa?$AAd?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?3?$AA?5?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  0138c		 |$LN26@Device_Rea|
  0138c	00000000	 DCD         |??_C@_1DC@CHGOCLOL@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  01390		 |$LN27@Device_Rea|
  01390	00000000	 DCD         |??_C@_1CG@PCNAJENA@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAa?$AAd?$AAS?$AAe?$AAt?$AAu?$AAp?$AA?$AN?$AA?6?$AA?$AA@|
  01394		 |$M49780|

			 ENDP  ; |Device_ReadSetup|

	EXPORT	|??_C@_1CK@PHELNBKD@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@BNAGFJMA@?$AAS?$AAT?$AA_?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@HFKOLDHG@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@LBDLDOFO@?$AA2?$AA?4?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?5?$AAS?$AAe?$AAt?$AA?5?$AAT?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@CCMNMCIH@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA0?$AA?3?$AA?5?$AAf?$AAi?$AAn?$AAa?$AAl?$AA?5?$AAc?$AAo?$AAp?$AAy?$AA?5?$AAN?$AAo?$AAt?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IK@IEONPHHN@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HK@JEKPKAL@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@CGEACPAE@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAR@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HK@NCIOKFCA@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@IBCBFGIA@?$AAU?$AAF?$AAN?$AAP?$AAD?$AAD?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAN?$AAo?$AAt?$AA?5?$AAa?$AAn?$AA?5?$AAB?$AA?9?$AAT?$AAy?$AAp?$AAe?$AA?5?$AAc?$AAo?$AAn?$AAn?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@BCOEILHF@?$AAU?$AAF?$AAN?$AAP?$AAD?$AAD?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAB?$AA?9?$AAT?$AAy?$AAp?$AAe?$AA?5?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|SetEvent|
	EXPORT	|??_C@_1GK@EDHBDMMN@?$AAU?$AAF?$AAN?$AAP?$AAD?$AAD?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAa?$AAl?$AAu?$AAe?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@CKAHONI@?$AAB?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@DCFOIEJO@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAO?$AAp?$AAe?$AAn?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAK?$AAe?$AAy?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@GBENJPGN@?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?2?$AAB?$AAu?$AAi?$AAl?$AAt?$AAI?$AAn?$AA?2?$AAM?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?2?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@LNPMHKIJ@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAs?$AA?5?$AAU?$AAS?$AAB?$AA_?$AAR?$AAE?$AAQ?$AAU?$AAE?$AAS@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@LDJOACEP@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@PBFKHCGD@?$AAI?$AAn?$AA?5?$AAE?$AAP?$AA0?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAI?$AAN?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?4?$AA?5?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@CMOKIKNH@?$AAC?$AAS?$AAR?$AA0?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@HLDCJJFC@?$AAS?$AAe?$AAt?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@GEGFJNAH@?$AAS?$AAe?$AAt?$AAu?$AAp?$AAE?$AAn?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@CNFNHGLF@?$AAS?$AAt?$AAa?$AAl?$AAl?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@GDOLHGDC@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAC?$AAS?$AAR?$AA0?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@JMBOHKIJ@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|BusChildIoControl|
	IMPORT	|SetEventData|
	IMPORT	|RegCloseKey|
	IMPORT	|RegQueryValueExW|
	IMPORT	|RegOpenKeyExW|
	IMPORT	|__C_specific_handler|

  00058			 AREA	 |.pdata|, PDATA
|$T49908| DCD	|$LN153@Device_Pro|
	DCD	0xc0046a05
|$T49910| DCD	|$LN142@Device_Pro|
	DCD	0x40000502
|$T49912| DCD	|$LN135@Device_Pro|
	DCD	0x40001c02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@PHELNBKD@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "_", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "E", 0x0, "P", 0x0, "0", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@BNAGFJMA@?$AAS?$AAT?$AA_?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "T", 0x0, "_", 0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O"
	DCB	0x0, "R", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@HFKOLDHG@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAT@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "E", 0x0, "P", 0x0, "0", 0x0, ":", 0x0, " "
	DCB	0x0, "E", 0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S", 0x0, "T"
	DCB	0x0, "_", 0x0, "D", 0x0, "A", 0x0, "T", 0x0, "A", 0x0, "_"
	DCB	0x0, "T", 0x0, "X", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@LBDLDOFO@?$AA2?$AA?4?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?5?$AAS?$AAe?$AAt?$AA?5?$AAT?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd@| DCB "2"
	DCB	0x0, ".", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "_", 0x0, "P", 0x0, "r", 0x0, "o"
	DCB	0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, "E", 0x0, "P"
	DCB	0x0, "0", 0x0, " ", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, " "
	DCB	0x0, "T", 0x0, "x", 0x0, "P", 0x0, "k", 0x0, "t", 0x0, "R"
	DCB	0x0, "d", 0x0, "y", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "0"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@CCMNMCIH@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA0?$AA?3?$AA?5?$AAf?$AAi?$AAn?$AAa?$AAl?$AA?5?$AAc?$AAo?$AAp?$AAy?$AA?5?$AAN?$AAo?$AAt?$AAi@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "0", 0x0, ":", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "n", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "p", 0x0, "y", 0x0, " ", 0x0, "N", 0x0, "o", 0x0, "t"
	DCB	0x0, "i", 0x0, "f", 0x0, "y", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "t", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@IEONPHHN@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAT@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "E", 0x0, "P", 0x0, "0", 0x0, ":", 0x0, " "
	DCB	0x0, "E", 0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S", 0x0, "T"
	DCB	0x0, "_", 0x0, "D", 0x0, "A", 0x0, "T", 0x0, "A", 0x0, "_"
	DCB	0x0, "T", 0x0, "X", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t"
	DCB	0x0, "e", 0x0, "s", 0x0, "_", 0x0, "l", 0x0, "e", 0x0, "f"
	DCB	0x0, "t", 0x0, "_", 0x0, "t", 0x0, "o", 0x0, "_", 0x0, "s"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "=", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "s", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@JEKPKAL@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "E", 0x0, "P", 0x0, "0", 0x0, ":", 0x0, " "
	DCB	0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S"
	DCB	0x0, "T", 0x0, "_", 0x0, "D", 0x0, "A", 0x0, "T", 0x0, "A"
	DCB	0x0, "_", 0x0, "T", 0x0, "X", 0x0, " ", 0x0, "p", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "N"
	DCB	0x0, "U", 0x0, "L", 0x0, "L", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@CGEACPAE@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAR@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "E", 0x0, "P", 0x0, "0", 0x0, ":", 0x0, " "
	DCB	0x0, "E", 0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S", 0x0, "T"
	DCB	0x0, "_", 0x0, "D", 0x0, "A", 0x0, "T", 0x0, "A", 0x0, "_"
	DCB	0x0, "R", 0x0, "X", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "d", 0x0, "a", 0x0, "t", 0x0, "a", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@NCIOKFCA@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "E", 0x0, "P", 0x0, "0", 0x0, ":", 0x0, " "
	DCB	0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S"
	DCB	0x0, "T", 0x0, "_", 0x0, "D", 0x0, "A", 0x0, "T", 0x0, "A"
	DCB	0x0, "_", 0x0, "R", 0x0, "X", 0x0, " ", 0x0, "p", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "N"
	DCB	0x0, "U", 0x0, "L", 0x0, "L", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@IBCBFGIA@?$AAU?$AAF?$AAN?$AAP?$AAD?$AAD?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAN?$AAo?$AAt?$AA?5?$AAa?$AAn?$AA?5?$AAB?$AA?9?$AAT?$AAy?$AAp?$AAe?$AA?5?$AAc?$AAo?$AAn?$AAn?$AAe@| DCB "U"
	DCB	0x0, "F", 0x0, "N", 0x0, "P", 0x0, "D", 0x0, "D", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "N", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "a", 0x0, "n"
	DCB	0x0, " ", 0x0, "B", 0x0, "-", 0x0, "T", 0x0, "y", 0x0, "p"
	DCB	0x0, "e", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "n"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, "o", 0x0, "r", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@BCOEILHF@?$AAU?$AAF?$AAN?$AAP?$AAD?$AAD?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAB?$AA?9?$AAT?$AAy?$AAp?$AAe?$AA?5?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "F", 0x0, "N", 0x0, "P", 0x0, "D", 0x0, "D", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "-", 0x0, "T", 0x0, "y", 0x0, "p", 0x0, "e"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "n", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "o", 0x0, "r", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@EDHBDMMN@?$AAU?$AAF?$AAN?$AAP?$AAD?$AAD?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAa?$AAl?$AAu?$AAe?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs@| DCB "U"
	DCB	0x0, "F", 0x0, "N", 0x0, "P", 0x0, "D", 0x0, "D", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "R", 0x0, "e", 0x0, "g", 0x0, "Q", 0x0, "u", 0x0, "e"
	DCB	0x0, "r", 0x0, "y", 0x0, "V", 0x0, "a", 0x0, "l", 0x0, "u"
	DCB	0x0, "e", 0x0, "E", 0x0, "x", 0x0, "(", 0x0, "'", 0x0, "%"
	DCB	0x0, "s", 0x0, "'", 0x0, ",", 0x0, " ", 0x0, "'", 0x0, "%"
	DCB	0x0, "s", 0x0, "'", 0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@CKAHONI@?$AAB?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "B", 0x0, "T", 0x0
	DCB	"Y", 0x0, "P", 0x0, "E", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@DCFOIEJO@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAO?$AAp?$AAe?$AAn?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAK?$AAe?$AAy?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "K", 0x0, "e"
	DCB	0x0, "y", 0x0, "(", 0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'"
	DCB	0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@GBENJPGN@?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?2?$AAB?$AAu?$AAi?$AAl?$AAt?$AAI?$AAn?$AA?2?$AAM?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?2?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?$AA@| DCB "D"
	DCB	0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, "s"
	DCB	0x0, "\\", 0x0, "B", 0x0, "u", 0x0, "i", 0x0, "l", 0x0, "t"
	DCB	0x0, "I", 0x0, "n", 0x0, "\\", 0x0, "M", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, "\\", 0x0, "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "F", 0x0, "N", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@LNPMHKIJ@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAs?$AA?5?$AAU?$AAS?$AAB?$AA_?$AAR?$AAE?$AAQ?$AAU?$AAE?$AAS@| DCB "E"
	DCB	0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "_"
	DCB	0x0, "S", 0x0, "E", 0x0, "T", 0x0, "U", 0x0, "P", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v"
	DCB	0x0, "e", 0x0, "s", 0x0, " ", 0x0, "U", 0x0, "S", 0x0, "B"
	DCB	0x0, "_", 0x0, "R", 0x0, "E", 0x0, "Q", 0x0, "U", 0x0, "E"
	DCB	0x0, "S", 0x0, "T", 0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T"
	DCB	0x0, "_", 0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I"
	DCB	0x0, "G", 0x0, "U", 0x0, "R", 0x0, "A", 0x0, "T", 0x0, "I"
	DCB	0x0, "O", 0x0, "N", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@LDJOACEP@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN@| DCB "E"
	DCB	0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "_"
	DCB	0x0, "S", 0x0, "E", 0x0, "T", 0x0, "U", 0x0, "P", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v"
	DCB	0x0, "e", 0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@PBFKHCGD@?$AAI?$AAn?$AA?5?$AAE?$AAP?$AA0?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAI?$AAN?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?4?$AA?5?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5@| DCB "I"
	DCB	0x0, "n", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, "0", 0x0, " "
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s"
	DCB	0x0, " ", 0x0, "I", 0x0, "N", 0x0, " ", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, ".", 0x0, " ", 0x0, " "
	DCB	0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "g", 0x0, "e"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "E", 0x0, "P"
	DCB	0x0, "0", 0x0, " ", 0x0, "S", 0x0, "E", 0x0, "T", 0x0, "U"
	DCB	0x0, "P", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@CMOKIKNH@?$AAC?$AAS?$AAR?$AA0?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "S", 0x0, "R", 0x0, "0", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@HLDCJJFC@?$AAS?$AAe?$AAt?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "e", 0x0, "t", 0x0, "A", 0x0, "d", 0x0, "d", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "=", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@GEGFJNAH@?$AAS?$AAe?$AAt?$AAu?$AAp?$AAE?$AAn?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "e", 0x0, "t", 0x0, "u", 0x0, "p", 0x0, "E", 0x0, "n"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@CNFNHGLF@?$AAS?$AAt?$AAa?$AAl?$AAl?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@GDOLHGDC@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAC?$AAS?$AAR?$AA0?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx@| DCB "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u"
	DCB	0x0, "p", 0x0, "t", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, " ", 0x0, "w"
	DCB	0x0, "i", 0x0, "t", 0x0, "h", 0x0, " ", 0x0, "C", 0x0, "S"
	DCB	0x0, "R", 0x0, "0", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "r"
	DCB	0x0, "x", 0x0, "c", 0x0, "o", 0x0, "u", 0x0, "n", 0x0, "t"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@JMBOHKIJ@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "_", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "E", 0x0, "P", 0x0, "0", 0x0, " "
	DCB	0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00008			 AREA	 |.xdata|, DATA
|$T49906| DCD	0x2
	DCD	|$LN146@Device_Pro|
	DCD	|$LN147@Device_Pro|
	DCD	|$LN142@Device_Pro|
	DCD	|$LN143@Device_Pro|
	DCD	|$LN139@Device_Pro|
	DCD	|$LN140@Device_Pro|
	DCD	|$LN135@Device_Pro|
	DCD	|$LN136@Device_Pro|
; Function compile flags: /Odtp

  01394			 AREA	 |.text|, CODE, ARM

  01394	00000000	 DCD         |__C_specific_handler|
  01398	00000000	 DCD         |$T49906|

  0139c		 |Device_ProcessEP0| PROC

; 1522 : {

  0139c		 |$LN153@Device_Pro|
  0139c	e1a0c00d	 mov         r12, sp
  013a0	e92d0001	 stmdb       sp!, {r0}
  013a4	e92d5800	 stmdb       sp!, {r11, r12, lr}
  013a8	e28db00c	 add         r11, sp, #0xC
  013ac	e24ddf53	 sub         sp, sp, #0x53, 30
  013b0		 |$LN151@Device_Pro|

; 1523 :     USB_DEVICE_REQUEST* pSetup = NULL;

  013b0	e3a03000	 mov         r3, #0
  013b4	e50b3138	 str         r3, [r11, #-0x138]

; 1524 :     PHSMUSB_T pUSBContext =(PHSMUSB_T) pHSMUSBContext;

  013b8	e59b3000	 ldr         r3, [r11]
  013bc	e50b3144	 str         r3, [r11, #-0x144]

; 1525 :     PCSP_MUSB_GEN_REGS pGenRegs = pUSBContext->pUsbGenRegs;

  013c0	e51b3144	 ldr         r3, [r11, #-0x144]
  013c4	e2833020	 add         r3, r3, #0x20
  013c8	e5933000	 ldr         r3, [r3]
  013cc	e50b314c	 str         r3, [r11, #-0x14C]

; 1526 :     PCSP_MUSB_CSR_REGS pCsrRegs = pUSBContext->pUsbCsrRegs;

  013d0	e51b3144	 ldr         r3, [r11, #-0x144]
  013d4	e283301c	 add         r3, r3, #0x1C
  013d8	e5933000	 ldr         r3, [r3]
  013dc	e50b3150	 str         r3, [r11, #-0x150]

; 1527 :     MUsbFnPdd_t *pPdd = pUSBContext->pContext[DEVICE_CONTEXT];

  013e0	e51b3144	 ldr         r3, [r11, #-0x144]
  013e4	e2833010	 add         r3, r3, #0x10
  013e8	e5933000	 ldr         r3, [r3]
  013ec	e50b3134	 str         r3, [r11, #-0x134]

; 1528 :     UINT16 csr0Val;
; 1529 :     UINT16 rxcount;
; 1530 :     DWORD data[2];
; 1531 :     
; 1532 :     DEBUGMSG(ZONE_FUNCTION, (L"+Device_ProcessEP0 state = %d\r\n", pPdd->ep0State));

  013f0	e59f316c	 ldr         r3, [pc, #0x16C]
  013f4	e5933440	 ldr         r3, [r3, #0x440]
  013f8	e3130a01	 tst         r3, #1, 20
  013fc	0a000015	 beq         |$LN44@Device_Pro|
  01400	e59f315c	 ldr         r3, [pc, #0x15C]
  01404	e5933440	 ldr         r3, [r3, #0x440]
  01408	e3130801	 tst         r3, #1, 16
  0140c	0a000007	 beq         |$LN42@Device_Pro|
  01410	e51b3134	 ldr         r3, [r11, #-0x134]
  01414	e2833ffb	 add         r3, r3, #0xFB, 30
  01418	e5931000	 ldr         r1, [r3]
  0141c	e59f0148	 ldr         r0, [pc, #0x148]
  01420	eb000000	 bl          CeLogMsg
  01424	e3a03001	 mov         r3, #1
  01428	e50b30d4	 str         r3, [r11, #-0xD4]
  0142c	ea000006	 b           |$LN43@Device_Pro|
  01430		 |$LN42@Device_Pro|
  01430	e51b3134	 ldr         r3, [r11, #-0x134]
  01434	e2833ffb	 add         r3, r3, #0xFB, 30
  01438	e5931000	 ldr         r1, [r3]
  0143c	e59f0128	 ldr         r0, [pc, #0x128]
  01440	eb000000	 bl          NKDbgPrintfW
  01444	e3a03000	 mov         r3, #0
  01448	e50b30d4	 str         r3, [r11, #-0xD4]
  0144c		 |$LN43@Device_Pro|
  0144c	e3a03001	 mov         r3, #1
  01450	e50b30d0	 str         r3, [r11, #-0xD0]
  01454	ea000001	 b           |$LN45@Device_Pro|
  01458		 |$LN44@Device_Pro|
  01458	e3a03000	 mov         r3, #0
  0145c	e50b30d0	 str         r3, [r11, #-0xD0]
  01460		 |$LN45@Device_Pro|

; 1533 : 
; 1534 :     csr0Val = INREG16(&pCsrRegs->ep[EP0].CSR.CSR0);

  01460	e51b3150	 ldr         r3, [r11, #-0x150]
  01464	e2833002	 add         r3, r3, #2
  01468	e1d330b0	 ldrh        r3, [r3]
  0146c	e24bcc01	 sub         r12, r11, #1, 24
  01470	e14c34b8	 strh        r3, [r12, #-0x48]

; 1535 :     rxcount = INREG16(&pCsrRegs->ep[EP0].Count.Count0);

  01474	e51b3150	 ldr         r3, [r11, #-0x150]
  01478	e2833008	 add         r3, r3, #8
  0147c	e1d330b0	 ldrh        r3, [r3]
  01480	e24bcc01	 sub         r12, r11, #1, 24
  01484	e14c33b0	 strh        r3, [r12, #-0x30]

; 1536 :     DEBUGMSG(ZONE_INFO, (TEXT("Interrupt receive with CSR0 = 0x%x, rxcount = 0x%x\r\n"), csr0Val, rxcount));

  01488	e59f30d4	 ldr         r3, [pc, #0xD4]
  0148c	e5933440	 ldr         r3, [r3, #0x440]
  01490	e3130b01	 tst         r3, #1, 22
  01494	0a000017	 beq         |$LN48@Device_Pro|
  01498	e59f30c4	 ldr         r3, [pc, #0xC4]
  0149c	e5933440	 ldr         r3, [r3, #0x440]
  014a0	e3130801	 tst         r3, #1, 16
  014a4	0a000008	 beq         |$LN46@Device_Pro|
  014a8	e24b2c01	 sub         r2, r11, #1, 24
  014ac	e15223b0	 ldrh        r2, [r2, #-0x30]
  014b0	e24b1c01	 sub         r1, r11, #1, 24
  014b4	e15114b8	 ldrh        r1, [r1, #-0x48]
  014b8	e59f00a8	 ldr         r0, [pc, #0xA8]
  014bc	eb000000	 bl          CeLogMsg
  014c0	e3a03001	 mov         r3, #1
  014c4	e50b30cc	 str         r3, [r11, #-0xCC]
  014c8	ea000007	 b           |$LN47@Device_Pro|
  014cc		 |$LN46@Device_Pro|
  014cc	e24b2c01	 sub         r2, r11, #1, 24
  014d0	e15223b0	 ldrh        r2, [r2, #-0x30]
  014d4	e24b1c01	 sub         r1, r11, #1, 24
  014d8	e15114b8	 ldrh        r1, [r1, #-0x48]
  014dc	e59f0084	 ldr         r0, [pc, #0x84]
  014e0	eb000000	 bl          NKDbgPrintfW
  014e4	e3a03000	 mov         r3, #0
  014e8	e50b30cc	 str         r3, [r11, #-0xCC]
  014ec		 |$LN47@Device_Pro|
  014ec	e3a03001	 mov         r3, #1
  014f0	e50b30c8	 str         r3, [r11, #-0xC8]
  014f4	ea000001	 b           |$LN49@Device_Pro|
  014f8		 |$LN48@Device_Pro|
  014f8	e3a03000	 mov         r3, #0
  014fc	e50b30c8	 str         r3, [r11, #-0xC8]
  01500		 |$LN49@Device_Pro|

; 1537 :     
; 1538 :     if (csr0Val & CSR0_P_SENTSTALL)

  01500	e24b3c01	 sub         r3, r11, #1, 24
  01504	e15334b8	 ldrh        r3, [r3, #-0x48]
  01508	e3130004	 tst         r3, #4
  0150c	0a00002d	 beq         |$LN39@Device_Pro|

; 1539 :     {
; 1540 :         // MUSB finished sending STALL 
; 1541 :         // clear SENTSTALL 
; 1542 :         DEBUGMSG(ZONE_INFO, (TEXT("Stall\r\n")));

  01510	e59f304c	 ldr         r3, [pc, #0x4C]
  01514	e5933440	 ldr         r3, [r3, #0x440]
  01518	e3130b01	 tst         r3, #1, 22
  0151c	0a000013	 beq         |$LN52@Device_Pro|
  01520	e59f303c	 ldr         r3, [pc, #0x3C]
  01524	e5933440	 ldr         r3, [r3, #0x440]
  01528	e3130801	 tst         r3, #1, 16
  0152c	0a000004	 beq         |$LN50@Device_Pro|
  01530	e59f0028	 ldr         r0, [pc, #0x28]
  01534	eb000000	 bl          CeLogMsg
  01538	e3a03001	 mov         r3, #1
  0153c	e50b30c4	 str         r3, [r11, #-0xC4]
  01540	ea000003	 b           |$LN51@Device_Pro|
  01544		 |$LN50@Device_Pro|
  01544	e59f0014	 ldr         r0, [pc, #0x14]
  01548	eb000000	 bl          NKDbgPrintfW
  0154c	e3a03000	 mov         r3, #0
  01550	e50b30c4	 str         r3, [r11, #-0xC4]
  01554		 |$LN51@Device_Pro|
  01554	e3a03001	 mov         r3, #1
  01558	e50b30c0	 str         r3, [r11, #-0xC0]
  0155c	ea000005	 b           |$LN53@Device_Pro|
  01560		 |$LN193@Device_Pro|
  01560		 |$LN194@Device_Pro|
  01560	00000000	 DCD         |??_C@_1BA@CNFNHGLF@?$AAS?$AAt?$AAa?$AAl?$AAl?$AA?$AN?$AA?6?$AA?$AA@|
  01564		 |$LN195@Device_Pro|
  01564	00000000	 DCD         |dpCurSettings|
  01568		 |$LN196@Device_Pro|
  01568	00000000	 DCD         |??_C@_1GK@GDOLHGDC@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAC?$AAS?$AAR?$AA0?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx@|
  0156c		 |$LN197@Device_Pro|
  0156c	00000000	 DCD         |??_C@_1EA@JMBOHKIJ@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  01570		 |$LN52@Device_Pro|
  01570	e3a03000	 mov         r3, #0
  01574	e50b30c0	 str         r3, [r11, #-0xC0]
  01578		 |$LN53@Device_Pro|

; 1543 :         CLRREG16(&pCsrRegs->ep[EP0].CSR.CSR0, CSR0_P_SENTSTALL);

  01578	e51b3150	 ldr         r3, [r11, #-0x150]
  0157c	e2833002	 add         r3, r3, #2
  01580	e1d330b0	 ldrh        r3, [r3]
  01584	e1a02003	 mov         r2, r3
  01588	e3e03004	 mvn         r3, #4
  0158c	e0023003	 and         r3, r2, r3
  01590	e1a02803	 mov         r2, r3, lsl #16
  01594	e1a02822	 mov         r2, r2, lsr #16
  01598	e51b3150	 ldr         r3, [r11, #-0x150]
  0159c	e2833002	 add         r3, r3, #2
  015a0	e1c320b0	 strh        r2, [r3]

; 1544 :         pPdd->ep0State = EP0_ST_SETUP;

  015a4	e51b3134	 ldr         r3, [r11, #-0x134]
  015a8	e2832ffb	 add         r2, r3, #0xFB, 30
  015ac	e3a03000	 mov         r3, #0
  015b0	e5823000	 str         r3, [r2]

; 1545 :         csr0Val = INREG16(&pCsrRegs->ep[EP0].CSR.CSR0);

  015b4	e51b3150	 ldr         r3, [r11, #-0x150]
  015b8	e2833002	 add         r3, r3, #2
  015bc	e1d330b0	 ldrh        r3, [r3]
  015c0	e24bcc01	 sub         r12, r11, #1, 24
  015c4	e14c34b8	 strh        r3, [r12, #-0x48]
  015c8		 |$LN39@Device_Pro|

; 1546 :     }
; 1547 :     
; 1548 :     if (csr0Val & CSR0_P_SETUPEND)

  015c8	e24b3c01	 sub         r3, r11, #1, 24
  015cc	e15334b8	 ldrh        r3, [r3, #-0x48]
  015d0	e3130010	 tst         r3, #0x10
  015d4	0a00006b	 beq         |$LN38@Device_Pro|

; 1549 :     {
; 1550 :         /* setup request ended "early" */
; 1551 :         // clear SETUPEND 
; 1552 :         DEBUGMSG(ZONE_INFO, (TEXT("SetupEnd\r\n")));

  015d8	e59f3f90	 ldr         r3, [pc, #0xF90]
  015dc	e5933440	 ldr         r3, [r3, #0x440]
  015e0	e3130b01	 tst         r3, #1, 22
  015e4	0a00000f	 beq         |$LN56@Device_Pro|
  015e8	e59f3f80	 ldr         r3, [pc, #0xF80]
  015ec	e5933440	 ldr         r3, [r3, #0x440]
  015f0	e3130801	 tst         r3, #1, 16
  015f4	0a000004	 beq         |$LN54@Device_Pro|
  015f8	e59f0fc4	 ldr         r0, [pc, #0xFC4]
  015fc	eb000000	 bl          CeLogMsg
  01600	e3a03001	 mov         r3, #1
  01604	e50b30bc	 str         r3, [r11, #-0xBC]
  01608	ea000003	 b           |$LN55@Device_Pro|
  0160c		 |$LN54@Device_Pro|
  0160c	e59f0fb0	 ldr         r0, [pc, #0xFB0]
  01610	eb000000	 bl          NKDbgPrintfW
  01614	e3a03000	 mov         r3, #0
  01618	e50b30bc	 str         r3, [r11, #-0xBC]
  0161c		 |$LN55@Device_Pro|
  0161c	e3a03001	 mov         r3, #1
  01620	e50b30b8	 str         r3, [r11, #-0xB8]
  01624	ea000001	 b           |$LN57@Device_Pro|
  01628		 |$LN56@Device_Pro|
  01628	e3a03000	 mov         r3, #0
  0162c	e50b30b8	 str         r3, [r11, #-0xB8]
  01630		 |$LN57@Device_Pro|

; 1553 :         if (pPdd->bSetAddress)

  01630	e51b3134	 ldr         r3, [r11, #-0x134]
  01634	e2833ffe	 add         r3, r3, #0xFE, 30
  01638	e5933000	 ldr         r3, [r3]
  0163c	e3530000	 cmp         r3, #0
  01640	0a000024	 beq         |$LN37@Device_Pro|

; 1554 :         {
; 1555 :             DEBUGMSG(ZONE_INFO, (L"SetAddress=%d\r\n", pPdd->ucAddress));

  01644	e59f3f24	 ldr         r3, [pc, #0xF24]
  01648	e5933440	 ldr         r3, [r3, #0x440]
  0164c	e3130b01	 tst         r3, #1, 22
  01650	0a000015	 beq         |$LN60@Device_Pro|
  01654	e59f3f14	 ldr         r3, [pc, #0xF14]
  01658	e5933440	 ldr         r3, [r3, #0x440]
  0165c	e3130801	 tst         r3, #1, 16
  01660	0a000007	 beq         |$LN58@Device_Pro|
  01664	e51b3134	 ldr         r3, [r11, #-0x134]
  01668	e2833ffd	 add         r3, r3, #0xFD, 30
  0166c	e5d31000	 ldrb        r1, [r3]
  01670	e59f0f44	 ldr         r0, [pc, #0xF44]
  01674	eb000000	 bl          CeLogMsg
  01678	e3a03001	 mov         r3, #1
  0167c	e50b30b4	 str         r3, [r11, #-0xB4]
  01680	ea000006	 b           |$LN59@Device_Pro|
  01684		 |$LN58@Device_Pro|
  01684	e51b3134	 ldr         r3, [r11, #-0x134]
  01688	e2833ffd	 add         r3, r3, #0xFD, 30
  0168c	e5d31000	 ldrb        r1, [r3]
  01690	e59f0f24	 ldr         r0, [pc, #0xF24]
  01694	eb000000	 bl          NKDbgPrintfW
  01698	e3a03000	 mov         r3, #0
  0169c	e50b30b4	 str         r3, [r11, #-0xB4]
  016a0		 |$LN59@Device_Pro|
  016a0	e3a03001	 mov         r3, #1
  016a4	e50b30b0	 str         r3, [r11, #-0xB0]
  016a8	ea000001	 b           |$LN61@Device_Pro|
  016ac		 |$LN60@Device_Pro|
  016ac	e3a03000	 mov         r3, #0
  016b0	e50b30b0	 str         r3, [r11, #-0xB0]
  016b4		 |$LN61@Device_Pro|

; 1556 :             OUTREG8(&pGenRegs->FAddr, pPdd->ucAddress); 

  016b4	e51b3134	 ldr         r3, [r11, #-0x134]
  016b8	e2833ffd	 add         r3, r3, #0xFD, 30
  016bc	e5d32000	 ldrb        r2, [r3]
  016c0	e51b314c	 ldr         r3, [r11, #-0x14C]
  016c4	e5c32000	 strb        r2, [r3]

; 1557 :             pPdd->bSetAddress = FALSE;

  016c8	e51b3134	 ldr         r3, [r11, #-0x134]
  016cc	e2832ffe	 add         r2, r3, #0xFE, 30
  016d0	e3a03000	 mov         r3, #0
  016d4	e5823000	 str         r3, [r2]
  016d8		 |$LN37@Device_Pro|

; 1558 :         }
; 1559 :         
; 1560 :         SETREG16(&pCsrRegs->ep[EP0].CSR.CSR0, CSR0_P_SERVICEDSETUPEND);

  016d8	e51b3150	 ldr         r3, [r11, #-0x150]
  016dc	e2833002	 add         r3, r3, #2
  016e0	e1d330b0	 ldrh        r3, [r3]
  016e4	e3833080	 orr         r3, r3, #0x80
  016e8	e1a02803	 mov         r2, r3, lsl #16
  016ec	e1a02822	 mov         r2, r2, lsr #16
  016f0	e51b3150	 ldr         r3, [r11, #-0x150]
  016f4	e2833002	 add         r3, r3, #2
  016f8	e1c320b0	 strh        r2, [r3]

; 1561 :         pPdd->ep0State = EP0_ST_SETUP;

  016fc	e51b3134	 ldr         r3, [r11, #-0x134]
  01700	e2832ffb	 add         r2, r3, #0xFB, 30
  01704	e3a03000	 mov         r3, #0
  01708	e5823000	 str         r3, [r2]

; 1562 :         csr0Val = INREG16(&pCsrRegs->ep[EP0].CSR.CSR0);

  0170c	e51b3150	 ldr         r3, [r11, #-0x150]
  01710	e2833002	 add         r3, r3, #2
  01714	e1d330b0	 ldrh        r3, [r3]
  01718	e24bcc01	 sub         r12, r11, #1, 24
  0171c	e14c34b8	 strh        r3, [r12, #-0x48]

; 1563 :         DEBUGMSG(ZONE_INFO, (TEXT("CSR0 = 0x%x\r\n"), csr0Val));

  01720	e59f3e48	 ldr         r3, [pc, #0xE48]
  01724	e5933440	 ldr         r3, [r3, #0x440]
  01728	e3130b01	 tst         r3, #1, 22
  0172c	0a000013	 beq         |$LN64@Device_Pro|
  01730	e59f3e38	 ldr         r3, [pc, #0xE38]
  01734	e5933440	 ldr         r3, [r3, #0x440]
  01738	e3130801	 tst         r3, #1, 16
  0173c	0a000006	 beq         |$LN62@Device_Pro|
  01740	e24b1c01	 sub         r1, r11, #1, 24
  01744	e15114b8	 ldrh        r1, [r1, #-0x48]
  01748	e59f0e70	 ldr         r0, [pc, #0xE70]
  0174c	eb000000	 bl          CeLogMsg
  01750	e3a03001	 mov         r3, #1
  01754	e50b30ac	 str         r3, [r11, #-0xAC]
  01758	ea000005	 b           |$LN63@Device_Pro|
  0175c		 |$LN62@Device_Pro|
  0175c	e24b1c01	 sub         r1, r11, #1, 24
  01760	e15114b8	 ldrh        r1, [r1, #-0x48]
  01764	e59f0e54	 ldr         r0, [pc, #0xE54]
  01768	eb000000	 bl          NKDbgPrintfW
  0176c	e3a03000	 mov         r3, #0
  01770	e50b30ac	 str         r3, [r11, #-0xAC]
  01774		 |$LN63@Device_Pro|
  01774	e3a03001	 mov         r3, #1
  01778	e50b30a8	 str         r3, [r11, #-0xA8]
  0177c	ea000001	 b           |$LN65@Device_Pro|
  01780		 |$LN64@Device_Pro|
  01780	e3a03000	 mov         r3, #0
  01784	e50b30a8	 str         r3, [r11, #-0xA8]
  01788		 |$LN65@Device_Pro|
  01788		 |$LN38@Device_Pro|

; 1564 :     }
; 1565 :     
; 1566 :     switch (pPdd->ep0State)

  01788	e51b3134	 ldr         r3, [r11, #-0x134]
  0178c	e2833ffb	 add         r3, r3, #0xFB, 30
  01790	e5933000	 ldr         r3, [r3]
  01794	e50b30a4	 str         r3, [r11, #-0xA4]
  01798	e51b30a4	 ldr         r3, [r11, #-0xA4]
  0179c	e3530006	 cmp         r3, #6
  017a0	8a000349	 bhi         |$LN1@Device_Pro|
  017a4	e51b20a4	 ldr         r2, [r11, #-0xA4]
  017a8	e1a03102	 mov         r3, r2, lsl #2
  017ac	e083300f	 add         r3, r3, pc
  017b0	e5933004	 ldr         r3, [r3, #4]
  017b4	e08ff003	 add         pc, pc, r3
  017b8		 |$LN157@Device_Pro|
  017b8		 |$LN156@Device_Pro|
  017b8		 |$LN158@Device_Pro|
  017b8	00000128	 DCD         0x128
  017bc		 |$LN159@Device_Pro|
  017bc	00000624	 DCD         0x624
  017c0		 |$LN160@Device_Pro|
  017c0	00000018	 DCD         0x18
  017c4		 |$LN161@Device_Pro|
  017c4	00000d10	 DCD         0xd10
  017c8		 |$LN162@Device_Pro|
  017c8	00000644	 DCD         0x644
  017cc		 |$LN163@Device_Pro|
  017cc	000008f0	 DCD         0x8f0
  017d0		 |$LN164@Device_Pro|
  017d0	00000c6c	 DCD         0xc6c
  017d4		 |$LN34@Device_Pro|

; 1567 :     {
; 1568 :         case EP0_ST_STATUS_IN:
; 1569 :             // dummy state in processEP0
; 1570 :             if (pPdd->bSetAddress)

  017d4	e51b3134	 ldr         r3, [r11, #-0x134]
  017d8	e2833ffe	 add         r3, r3, #0xFE, 30
  017dc	e5933000	 ldr         r3, [r3]
  017e0	e3530000	 cmp         r3, #0
  017e4	0a000024	 beq         |$LN33@Device_Pro|

; 1571 :             {
; 1572 :                 DEBUGMSG(ZONE_INFO, (L"SetAddress=%d\r\n", pPdd->ucAddress));

  017e8	e59f3d80	 ldr         r3, [pc, #0xD80]
  017ec	e5933440	 ldr         r3, [r3, #0x440]
  017f0	e3130b01	 tst         r3, #1, 22
  017f4	0a000015	 beq         |$LN68@Device_Pro|
  017f8	e59f3d70	 ldr         r3, [pc, #0xD70]
  017fc	e5933440	 ldr         r3, [r3, #0x440]
  01800	e3130801	 tst         r3, #1, 16
  01804	0a000007	 beq         |$LN66@Device_Pro|
  01808	e51b3134	 ldr         r3, [r11, #-0x134]
  0180c	e2833ffd	 add         r3, r3, #0xFD, 30
  01810	e5d31000	 ldrb        r1, [r3]
  01814	e59f0da0	 ldr         r0, [pc, #0xDA0]
  01818	eb000000	 bl          CeLogMsg
  0181c	e3a03001	 mov         r3, #1
  01820	e50b30a0	 str         r3, [r11, #-0xA0]
  01824	ea000006	 b           |$LN67@Device_Pro|
  01828		 |$LN66@Device_Pro|
  01828	e51b3134	 ldr         r3, [r11, #-0x134]
  0182c	e2833ffd	 add         r3, r3, #0xFD, 30
  01830	e5d31000	 ldrb        r1, [r3]
  01834	e59f0d80	 ldr         r0, [pc, #0xD80]
  01838	eb000000	 bl          NKDbgPrintfW
  0183c	e3a03000	 mov         r3, #0
  01840	e50b30a0	 str         r3, [r11, #-0xA0]
  01844		 |$LN67@Device_Pro|
  01844	e3a03001	 mov         r3, #1
  01848	e50b309c	 str         r3, [r11, #-0x9C]
  0184c	ea000001	 b           |$LN69@Device_Pro|
  01850		 |$LN68@Device_Pro|
  01850	e3a03000	 mov         r3, #0
  01854	e50b309c	 str         r3, [r11, #-0x9C]
  01858		 |$LN69@Device_Pro|

; 1573 :                 OUTREG8(&pGenRegs->FAddr, pPdd->ucAddress); 

  01858	e51b3134	 ldr         r3, [r11, #-0x134]
  0185c	e2833ffd	 add         r3, r3, #0xFD, 30
  01860	e5d32000	 ldrb        r2, [r3]
  01864	e51b314c	 ldr         r3, [r11, #-0x14C]
  01868	e5c32000	 strb        r2, [r3]

; 1574 :                 pPdd->bSetAddress = FALSE;

  0186c	e51b3134	 ldr         r3, [r11, #-0x134]
  01870	e2832ffe	 add         r2, r3, #0xFE, 30
  01874	e3a03000	 mov         r3, #0
  01878	e5823000	 str         r3, [r2]
  0187c		 |$LN33@Device_Pro|

; 1575 :             }
; 1576 :             pPdd->ep0State = EP0_ST_SETUP;

  0187c	e51b3134	 ldr         r3, [r11, #-0x134]
  01880	e2832ffb	 add         r2, r3, #0xFB, 30
  01884	e3a03000	 mov         r3, #0
  01888	e5823000	 str         r3, [r2]

; 1577 :             DEBUGMSG(ZONE_INFO, (TEXT("In EP0 Status IN state.  Change to EP0 SETUP state.\r\n")));

  0188c	e59f3cdc	 ldr         r3, [pc, #0xCDC]
  01890	e5933440	 ldr         r3, [r3, #0x440]
  01894	e3130b01	 tst         r3, #1, 22
  01898	0a00000f	 beq         |$LN72@Device_Pro|
  0189c	e59f3ccc	 ldr         r3, [pc, #0xCCC]
  018a0	e5933440	 ldr         r3, [r3, #0x440]
  018a4	e3130801	 tst         r3, #1, 16
  018a8	0a000004	 beq         |$LN70@Device_Pro|
  018ac	e59f0d04	 ldr         r0, [pc, #0xD04]
  018b0	eb000000	 bl          CeLogMsg
  018b4	e3a03001	 mov         r3, #1
  018b8	e50b3098	 str         r3, [r11, #-0x98]
  018bc	ea000003	 b           |$LN71@Device_Pro|
  018c0		 |$LN70@Device_Pro|
  018c0	e59f0cf0	 ldr         r0, [pc, #0xCF0]
  018c4	eb000000	 bl          NKDbgPrintfW
  018c8	e3a03000	 mov         r3, #0
  018cc	e50b3098	 str         r3, [r11, #-0x98]
  018d0		 |$LN71@Device_Pro|
  018d0	e3a03001	 mov         r3, #1
  018d4	e50b3094	 str         r3, [r11, #-0x94]
  018d8	ea000001	 b           |$LN73@Device_Pro|
  018dc		 |$LN72@Device_Pro|
  018dc	e3a03000	 mov         r3, #0
  018e0	e50b3094	 str         r3, [r11, #-0x94]
  018e4		 |$LN73@Device_Pro|
  018e4		 |$LN32@Device_Pro|

; 1578 :             
; 1579 :             // if received packet while in EP0_ST_STATUS_IN, continue process SETUP packet.
; 1580 :             
; 1581 :             
; 1582 :         case EP0_ST_SETUP:
; 1583 :             if (rxcount < 8)

  018e4	e24b3c01	 sub         r3, r11, #1, 24
  018e8	e15333b0	 ldrh        r3, [r3, #-0x30]
  018ec	e3530008	 cmp         r3, #8
  018f0	aa000000	 bge         |$LN31@Device_Pro|

; 1584 :                 break;

  018f4	ea0002f4	 b           |$LN35@Device_Pro|
  018f8		 |$LN31@Device_Pro|

; 1585 :             if (!(csr0Val & CSR0_P_RXPKTRDY))

  018f8	e24b3c01	 sub         r3, r11, #1, 24
  018fc	e15334b8	 ldrh        r3, [r3, #-0x48]
  01900	e3130001	 tst         r3, #1
  01904	1a000000	 bne         |$LN30@Device_Pro|

; 1586 :                 break;        

  01908	ea0002ef	 b           |$LN35@Device_Pro|
  0190c		 |$LN30@Device_Pro|

; 1587 :             data[0] = INREG32(&pGenRegs->fifo[EP0]);

  0190c	e51b314c	 ldr         r3, [r11, #-0x14C]
  01910	e2833020	 add         r3, r3, #0x20
  01914	e5933000	 ldr         r3, [r3]
  01918	e50b3140	 str         r3, [r11, #-0x140]

; 1588 :             data[1] = INREG32(&pGenRegs->fifo[EP0]);        

  0191c	e51b314c	 ldr         r3, [r11, #-0x14C]
  01920	e2833020	 add         r3, r3, #0x20
  01924	e5933000	 ldr         r3, [r3]
  01928	e50b313c	 str         r3, [r11, #-0x13C]

; 1589 :             DEBUGMSG(ZONE_INFO, (L"EP0_ST_SETUP receives 0x%x 0x%x\r\n", data[0], data[1]));

  0192c	e59f3c3c	 ldr         r3, [pc, #0xC3C]
  01930	e5933440	 ldr         r3, [r3, #0x440]
  01934	e3130b01	 tst         r3, #1, 22
  01938	0a000013	 beq         |$LN76@Device_Pro|
  0193c	e59f3c2c	 ldr         r3, [pc, #0xC2C]
  01940	e5933440	 ldr         r3, [r3, #0x440]
  01944	e3130801	 tst         r3, #1, 16
  01948	0a000006	 beq         |$LN74@Device_Pro|
  0194c	e51b213c	 ldr         r2, [r11, #-0x13C]
  01950	e51b1140	 ldr         r1, [r11, #-0x140]
  01954	e59f0c58	 ldr         r0, [pc, #0xC58]
  01958	eb000000	 bl          CeLogMsg
  0195c	e3a03001	 mov         r3, #1
  01960	e50b3090	 str         r3, [r11, #-0x90]
  01964	ea000005	 b           |$LN75@Device_Pro|
  01968		 |$LN74@Device_Pro|
  01968	e51b213c	 ldr         r2, [r11, #-0x13C]
  0196c	e51b1140	 ldr         r1, [r11, #-0x140]
  01970	e59f0c3c	 ldr         r0, [pc, #0xC3C]
  01974	eb000000	 bl          NKDbgPrintfW
  01978	e3a03000	 mov         r3, #0
  0197c	e50b3090	 str         r3, [r11, #-0x90]
  01980		 |$LN75@Device_Pro|
  01980	e3a03001	 mov         r3, #1
  01984	e50b308c	 str         r3, [r11, #-0x8C]
  01988	ea000001	 b           |$LN77@Device_Pro|
  0198c		 |$LN76@Device_Pro|
  0198c	e3a03000	 mov         r3, #0
  01990	e50b308c	 str         r3, [r11, #-0x8C]
  01994		 |$LN77@Device_Pro|

; 1590 :             pSetup =(USB_DEVICE_REQUEST*)data;

  01994	e24b3d05	 sub         r3, r11, #5, 26
  01998	e50b3138	 str         r3, [r11, #-0x138]

; 1591 :             if ((pSetup->bmRequestType == 0) &&
; 1592 :                     (pSetup->bRequest == USB_REQUEST_SET_CONFIGURATION)){

  0199c	e51b3138	 ldr         r3, [r11, #-0x138]
  019a0	e5d33000	 ldrb        r3, [r3]
  019a4	e3530000	 cmp         r3, #0
  019a8	1a0000c3	 bne         |$LN29@Device_Pro|
  019ac	e51b3138	 ldr         r3, [r11, #-0x138]
  019b0	e2833001	 add         r3, r3, #1
  019b4	e5d33000	 ldrb        r3, [r3]
  019b8	e3530009	 cmp         r3, #9
  019bc	1a0000be	 bne         |$LN29@Device_Pro|

; 1593 :                 HKEY hkDevice;
; 1594 :                 DWORD dwStatus;
; 1595 :                 DWORD dwType, dwSize;
; 1596 :                 DWORD dwbTypeConnector = 0;

  019c0	e3a03000	 mov         r3, #0
  019c4	e50b311c	 str         r3, [r11, #-0x11C]

; 1597 : 
; 1598 :                 DEBUGMSG(ZONE_INFO, (L"EP0_ST_SETUP receives USB_REQUEST_SET_CONFIGURATION"));

  019c8	e59f3ba0	 ldr         r3, [pc, #0xBA0]
  019cc	e5933440	 ldr         r3, [r3, #0x440]
  019d0	e3130b01	 tst         r3, #1, 22
  019d4	0a00000f	 beq         |$LN80@Device_Pro|
  019d8	e59f3b90	 ldr         r3, [pc, #0xB90]
  019dc	e5933440	 ldr         r3, [r3, #0x440]
  019e0	e3130801	 tst         r3, #1, 16
  019e4	0a000004	 beq         |$LN78@Device_Pro|
  019e8	e59f0bc0	 ldr         r0, [pc, #0xBC0]
  019ec	eb000000	 bl          CeLogMsg
  019f0	e3a03001	 mov         r3, #1
  019f4	e50b3088	 str         r3, [r11, #-0x88]
  019f8	ea000003	 b           |$LN79@Device_Pro|
  019fc		 |$LN78@Device_Pro|
  019fc	e59f0bac	 ldr         r0, [pc, #0xBAC]
  01a00	eb000000	 bl          NKDbgPrintfW
  01a04	e3a03000	 mov         r3, #0
  01a08	e50b3088	 str         r3, [r11, #-0x88]
  01a0c		 |$LN79@Device_Pro|
  01a0c	e3a03001	 mov         r3, #1
  01a10	e50b3084	 str         r3, [r11, #-0x84]
  01a14	ea000001	 b           |$LN81@Device_Pro|
  01a18		 |$LN80@Device_Pro|
  01a18	e3a03000	 mov         r3, #0
  01a1c	e50b3084	 str         r3, [r11, #-0x84]
  01a20		 |$LN81@Device_Pro|

; 1599 : 
; 1600 :                 dwStatus = RegOpenKeyEx(HKEY_LOCAL_MACHINE, (LPCTSTR) REG_USBFN_DRV_PATH, 0, KEY_ALL_ACCESS, &hkDevice);

  01a20	e24b3e12	 sub         r3, r11, #0x12, 28
  01a24	e58d3000	 str         r3, [sp]
  01a28	e3a0380f	 mov         r3, #0xF, 16
  01a2c	e383303f	 orr         r3, r3, #0x3F
  01a30	e3a02000	 mov         r2, #0
  01a34	e59f1b68	 ldr         r1, [pc, #0xB68]
  01a38	e3a0010a	 mov         r0, #0xA, 2
  01a3c	eb000000	 bl          RegOpenKeyExW
  01a40	e50b0080	 str         r0, [r11, #-0x80]
  01a44	e51b3080	 ldr         r3, [r11, #-0x80]
  01a48	e50b3124	 str         r3, [r11, #-0x124]

; 1601 :                 if(dwStatus != ERROR_SUCCESS) {

  01a4c	e51b3124	 ldr         r3, [r11, #-0x124]
  01a50	e3530000	 cmp         r3, #0
  01a54	0a00001a	 beq         |$LN28@Device_Pro|

; 1602 :                        DEBUGMSG(ZONE_WARNING, (_T("UfnPdd_Init: OpenDeviceKey('%s') failed %u\r\n"), REG_USBFN_DRV_PATH, dwStatus));

  01a58	e59f3b10	 ldr         r3, [pc, #0xB10]
  01a5c	e5933440	 ldr         r3, [r3, #0x440]
  01a60	e3130002	 tst         r3, #2
  01a64	0a000013	 beq         |$LN84@Device_Pro|
  01a68	e59f3b00	 ldr         r3, [pc, #0xB00]
  01a6c	e5933440	 ldr         r3, [r3, #0x440]
  01a70	e3130801	 tst         r3, #1, 16
  01a74	0a000006	 beq         |$LN82@Device_Pro|
  01a78	e51b2124	 ldr         r2, [r11, #-0x124]
  01a7c	e59f1b20	 ldr         r1, [pc, #0xB20]
  01a80	e59f0b24	 ldr         r0, [pc, #0xB24]
  01a84	eb000000	 bl          CeLogMsg
  01a88	e3a03001	 mov         r3, #1
  01a8c	e50b307c	 str         r3, [r11, #-0x7C]
  01a90	ea000005	 b           |$LN83@Device_Pro|
  01a94		 |$LN82@Device_Pro|
  01a94	e51b2124	 ldr         r2, [r11, #-0x124]
  01a98	e59f1b04	 ldr         r1, [pc, #0xB04]
  01a9c	e59f0b08	 ldr         r0, [pc, #0xB08]
  01aa0	eb000000	 bl          NKDbgPrintfW
  01aa4	e3a03000	 mov         r3, #0
  01aa8	e50b307c	 str         r3, [r11, #-0x7C]
  01aac		 |$LN83@Device_Pro|
  01aac	e3a03001	 mov         r3, #1
  01ab0	e50b3078	 str         r3, [r11, #-0x78]
  01ab4	ea000001	 b           |$LN85@Device_Pro|
  01ab8		 |$LN84@Device_Pro|
  01ab8	e3a03000	 mov         r3, #0
  01abc	e50b3078	 str         r3, [r11, #-0x78]
  01ac0		 |$LN85@Device_Pro|

; 1603 :                        goto cleanUp;

  01ac0	ea000281	 b           |$cleanUp$48298|
  01ac4		 |$LN28@Device_Pro|

; 1604 :                 }
; 1605 : 
; 1606 :                 dwType = REG_DWORD;

  01ac4	e3a03004	 mov         r3, #4
  01ac8	e50b312c	 str         r3, [r11, #-0x12C]

; 1607 :                 dwSize = sizeof(dwbTypeConnector);

  01acc	e3a03004	 mov         r3, #4
  01ad0	e50b3128	 str         r3, [r11, #-0x128]

; 1608 :                 dwStatus = RegQueryValueEx(hkDevice, REG_VBUS_CHARGE_B_TYPE_CONNECTOR, NULL, &dwType, 
; 1609 :                           (LPBYTE) &dwbTypeConnector, &dwSize);

  01ad4	e24b3f4a	 sub         r3, r11, #0x4A, 30
  01ad8	e58d3004	 str         r3, [sp, #4]
  01adc	e24b3f47	 sub         r3, r11, #0x47, 30
  01ae0	e58d3000	 str         r3, [sp]
  01ae4	e24b3f4b	 sub         r3, r11, #0x4B, 30
  01ae8	e3a02000	 mov         r2, #0
  01aec	e59f1ab4	 ldr         r1, [pc, #0xAB4]
  01af0	e51b0120	 ldr         r0, [r11, #-0x120]
  01af4	eb000000	 bl          RegQueryValueExW
  01af8	e50b0074	 str         r0, [r11, #-0x74]
  01afc	e51b3074	 ldr         r3, [r11, #-0x74]
  01b00	e50b3124	 str         r3, [r11, #-0x124]

; 1610 : 
; 1611 :                 if(dwStatus != ERROR_SUCCESS || dwType != REG_DWORD) {

  01b04	e51b3124	 ldr         r3, [r11, #-0x124]
  01b08	e3530000	 cmp         r3, #0
  01b0c	1a000002	 bne         |$LN26@Device_Pro|
  01b10	e51b312c	 ldr         r3, [r11, #-0x12C]
  01b14	e3530004	 cmp         r3, #4
  01b18	0a00001e	 beq         |$LN27@Device_Pro|
  01b1c		 |$LN26@Device_Pro|

; 1612 :                     DEBUGMSG(ZONE_WARNING, (_T("UFNPDD_Init: RegQueryValueEx('%s', '%s') failed %u\r\n"),
; 1613 :                             REG_USBFN_DRV_PATH, REG_VBUS_CHARGE_B_TYPE_CONNECTOR, dwStatus));

  01b1c	e59f3a4c	 ldr         r3, [pc, #0xA4C]
  01b20	e5933440	 ldr         r3, [r3, #0x440]
  01b24	e3130002	 tst         r3, #2
  01b28	0a000015	 beq         |$LN88@Device_Pro|
  01b2c	e59f3a3c	 ldr         r3, [pc, #0xA3C]
  01b30	e5933440	 ldr         r3, [r3, #0x440]
  01b34	e3130801	 tst         r3, #1, 16
  01b38	0a000007	 beq         |$LN86@Device_Pro|
  01b3c	e51b3124	 ldr         r3, [r11, #-0x124]
  01b40	e59f2a60	 ldr         r2, [pc, #0xA60]
  01b44	e59f1a58	 ldr         r1, [pc, #0xA58]
  01b48	e59f0a50	 ldr         r0, [pc, #0xA50]
  01b4c	eb000000	 bl          CeLogMsg
  01b50	e3a03001	 mov         r3, #1
  01b54	e50b3070	 str         r3, [r11, #-0x70]
  01b58	ea000006	 b           |$LN87@Device_Pro|
  01b5c		 |$LN86@Device_Pro|
  01b5c	e51b3124	 ldr         r3, [r11, #-0x124]
  01b60	e59f2a40	 ldr         r2, [pc, #0xA40]
  01b64	e59f1a38	 ldr         r1, [pc, #0xA38]
  01b68	e59f0a30	 ldr         r0, [pc, #0xA30]
  01b6c	eb000000	 bl          NKDbgPrintfW
  01b70	e3a03000	 mov         r3, #0
  01b74	e50b3070	 str         r3, [r11, #-0x70]
  01b78		 |$LN87@Device_Pro|
  01b78	e3a03001	 mov         r3, #1
  01b7c	e50b306c	 str         r3, [r11, #-0x6C]
  01b80	ea000001	 b           |$LN89@Device_Pro|
  01b84		 |$LN88@Device_Pro|
  01b84	e3a03000	 mov         r3, #0
  01b88	e50b306c	 str         r3, [r11, #-0x6C]
  01b8c		 |$LN89@Device_Pro|

; 1614 :                     RegCloseKey(hkDevice);

  01b8c	e51b0120	 ldr         r0, [r11, #-0x120]
  01b90	eb000000	 bl          RegCloseKey

; 1615 :                     goto cleanUp;

  01b94	ea00024c	 b           |$cleanUp$48298|
  01b98		 |$LN27@Device_Pro|

; 1616 :                 }
; 1617 : 
; 1618 :                 RegCloseKey(hkDevice);

  01b98	e51b0120	 ldr         r0, [r11, #-0x120]
  01b9c	eb000000	 bl          RegCloseKey

; 1619 : 
; 1620 :                 if(dwbTypeConnector){

  01ba0	e51b311c	 ldr         r3, [r11, #-0x11C]
  01ba4	e3530000	 cmp         r3, #0
  01ba8	0a000021	 beq         |$LN25@Device_Pro|

; 1621 :                     SetEventData( pPdd->hVbusChargeEvent, BATTERY_USBHOST_CONNECT );

  01bac	e3a01001	 mov         r1, #1
  01bb0	e51b3134	 ldr         r3, [r11, #-0x134]
  01bb4	e2833b01	 add         r3, r3, #1, 22
  01bb8	e2833028	 add         r3, r3, #0x28
  01bbc	e5930000	 ldr         r0, [r3]
  01bc0	eb000000	 bl          SetEventData

; 1622 :                     SetEvent( pPdd->hVbusChargeEvent );

  01bc4	e51b3134	 ldr         r3, [r11, #-0x134]
  01bc8	e2833b01	 add         r3, r3, #1, 22
  01bcc	e2833028	 add         r3, r3, #0x28
  01bd0	e5930000	 ldr         r0, [r3]
  01bd4	eb000000	 bl          SetEvent

; 1623 :                     DEBUGMSG(ZONE_PDD, (_T("UFNPDD_Init: B-Type connector\r\n")));

  01bd8	e59f3990	 ldr         r3, [pc, #0x990]
  01bdc	e5933440	 ldr         r3, [r3, #0x440]
  01be0	e3130902	 tst         r3, #2, 18
  01be4	0a00000f	 beq         |$LN92@Device_Pro|
  01be8	e59f3980	 ldr         r3, [pc, #0x980]
  01bec	e5933440	 ldr         r3, [r3, #0x440]
  01bf0	e3130801	 tst         r3, #1, 16
  01bf4	0a000004	 beq         |$LN90@Device_Pro|
  01bf8	e59f099c	 ldr         r0, [pc, #0x99C]
  01bfc	eb000000	 bl          CeLogMsg
  01c00	e3a03001	 mov         r3, #1
  01c04	e50b3068	 str         r3, [r11, #-0x68]
  01c08	ea000003	 b           |$LN91@Device_Pro|
  01c0c		 |$LN90@Device_Pro|
  01c0c	e59f0988	 ldr         r0, [pc, #0x988]
  01c10	eb000000	 bl          NKDbgPrintfW
  01c14	e3a03000	 mov         r3, #0
  01c18	e50b3068	 str         r3, [r11, #-0x68]
  01c1c		 |$LN91@Device_Pro|
  01c1c	e3a03001	 mov         r3, #1
  01c20	e50b3064	 str         r3, [r11, #-0x64]
  01c24	ea000001	 b           |$LN93@Device_Pro|
  01c28		 |$LN92@Device_Pro|
  01c28	e3a03000	 mov         r3, #0
  01c2c	e50b3064	 str         r3, [r11, #-0x64]
  01c30		 |$LN93@Device_Pro|

; 1624 :                 }else{

  01c30	ea000020	 b           |$LN24@Device_Pro|
  01c34		 |$LN25@Device_Pro|

; 1625 :                     SetEventData( pPdd->hVbusChargeEvent,  BATTERY_USBHOST_DISCONNECT );  

  01c34	e3a01000	 mov         r1, #0
  01c38	e51b3134	 ldr         r3, [r11, #-0x134]
  01c3c	e2833b01	 add         r3, r3, #1, 22
  01c40	e2833028	 add         r3, r3, #0x28
  01c44	e5930000	 ldr         r0, [r3]
  01c48	eb000000	 bl          SetEventData

; 1626 :                     SetEvent( pPdd->hVbusChargeEvent );

  01c4c	e51b3134	 ldr         r3, [r11, #-0x134]
  01c50	e2833b01	 add         r3, r3, #1, 22
  01c54	e2833028	 add         r3, r3, #0x28
  01c58	e5930000	 ldr         r0, [r3]
  01c5c	eb000000	 bl          SetEvent

; 1627 :                     DEBUGMSG(ZONE_PDD, (_T("UFNPDD_Init: Not an B-Type connector\r\n")));

  01c60	e59f3908	 ldr         r3, [pc, #0x908]
  01c64	e5933440	 ldr         r3, [r3, #0x440]
  01c68	e3130902	 tst         r3, #2, 18
  01c6c	0a00000f	 beq         |$LN96@Device_Pro|
  01c70	e59f38f8	 ldr         r3, [pc, #0x8F8]
  01c74	e5933440	 ldr         r3, [r3, #0x440]
  01c78	e3130801	 tst         r3, #1, 16
  01c7c	0a000004	 beq         |$LN94@Device_Pro|
  01c80	e59f0910	 ldr         r0, [pc, #0x910]
  01c84	eb000000	 bl          CeLogMsg
  01c88	e3a03001	 mov         r3, #1
  01c8c	e50b3060	 str         r3, [r11, #-0x60]
  01c90	ea000003	 b           |$LN95@Device_Pro|
  01c94		 |$LN94@Device_Pro|
  01c94	e59f08fc	 ldr         r0, [pc, #0x8FC]
  01c98	eb000000	 bl          NKDbgPrintfW
  01c9c	e3a03000	 mov         r3, #0
  01ca0	e50b3060	 str         r3, [r11, #-0x60]
  01ca4		 |$LN95@Device_Pro|
  01ca4	e3a03001	 mov         r3, #1
  01ca8	e50b305c	 str         r3, [r11, #-0x5C]
  01cac	ea000001	 b           |$LN97@Device_Pro|
  01cb0		 |$LN96@Device_Pro|
  01cb0	e3a03000	 mov         r3, #0
  01cb4	e50b305c	 str         r3, [r11, #-0x5C]
  01cb8		 |$LN97@Device_Pro|
  01cb8		 |$LN24@Device_Pro|

; 1628 :                 }
; 1629 :             }
; 1630 :             else if ((pSetup->bmRequestType == (USB_REQUEST_HOST_TO_DEVICE | USB_REQUEST_STANDARD | USB_REQUEST_FOR_DEVICE)) &&

  01cb8	ea000039	 b           |$LN23@Device_Pro|
  01cbc		 |$LN29@Device_Pro|

; 1631 :                     (pSetup->bRequest == USB_REQUEST_SET_FEATURE))

  01cbc	e51b3138	 ldr         r3, [r11, #-0x138]
  01cc0	e5d33000	 ldrb        r3, [r3]
  01cc4	e3530000	 cmp         r3, #0
  01cc8	1a000035	 bne         |$LN22@Device_Pro|
  01ccc	e51b3138	 ldr         r3, [r11, #-0x138]
  01cd0	e2833001	 add         r3, r3, #1
  01cd4	e5d33000	 ldrb        r3, [r3]
  01cd8	e3530003	 cmp         r3, #3
  01cdc	1a000030	 bne         |$LN22@Device_Pro|

; 1632 :             {
; 1633 :                 //Host Negotiation Protocol is enabled
; 1634 :                 switch(pSetup->wValue)

  01ce0	e51b3138	 ldr         r3, [r11, #-0x138]
  01ce4	e2831002	 add         r1, r3, #2
  01ce8	e5d13001	 ldrb        r3, [r1, #1]
  01cec	e1a03403	 mov         r3, r3, lsl #8
  01cf0	e1a02803	 mov         r2, r3, lsl #16
  01cf4	e1a02822	 mov         r2, r2, lsr #16
  01cf8	e5d13000	 ldrb        r3, [r1]
  01cfc	e1833002	 orr         r3, r3, r2
  01d00	e50b3058	 str         r3, [r11, #-0x58]
  01d04	e51b3058	 ldr         r3, [r11, #-0x58]
  01d08	e3530003	 cmp         r3, #3
  01d0c	0a000006	 beq         |$LN19@Device_Pro|
  01d10	e51b3058	 ldr         r3, [r11, #-0x58]
  01d14	e3530004	 cmp         r3, #4
  01d18	0a000012	 beq         |$LN18@Device_Pro|
  01d1c	e51b3058	 ldr         r3, [r11, #-0x58]
  01d20	e3530005	 cmp         r3, #5
  01d24	0a000017	 beq         |$LN17@Device_Pro|
  01d28	ea00001d	 b           |$LN20@Device_Pro|
  01d2c		 |$LN19@Device_Pro|

; 1635 :                 {
; 1636 :                     case USB_FEATURE_B_HNP_ENABLE:
; 1637 :                         pPdd->devState |= MUSB_DEVSTAT_B_HNP_ENABLE;

  01d2c	e51b3134	 ldr         r3, [r11, #-0x134]
  01d30	e283306c	 add         r3, r3, #0x6C
  01d34	e5933000	 ldr         r3, [r3]
  01d38	e3832c02	 orr         r2, r3, #2, 24
  01d3c	e51b3134	 ldr         r3, [r11, #-0x134]
  01d40	e283306c	 add         r3, r3, #0x6C
  01d44	e5832000	 str         r2, [r3]

; 1638 :                         BusChildIoControl(pPdd->hParentBus,IOCTL_BUS_USBOTG_HNP_ENABLE,NULL,0);

  01d48	e3a03000	 mov         r3, #0
  01d4c	e3a02000	 mov         r2, #0
  01d50	e59f183c	 ldr         r1, [pc, #0x83C]
  01d54	e51b0134	 ldr         r0, [r11, #-0x134]
  01d58	e2800030	 add         r0, r0, #0x30
  01d5c	e5900000	 ldr         r0, [r0]
  01d60	eb000000	 bl          BusChildIoControl

; 1639 :                         break;

  01d64	ea00000e	 b           |$LN20@Device_Pro|
  01d68		 |$LN18@Device_Pro|

; 1640 : 
; 1641 :                     case USB_FEATURE_A_HNP_SUPPORT:
; 1642 :                         pPdd->devState |= MUSB_DEVSTAT_A_HNP_SUPPORT;

  01d68	e51b3134	 ldr         r3, [r11, #-0x134]
  01d6c	e283306c	 add         r3, r3, #0x6C
  01d70	e5933000	 ldr         r3, [r3]
  01d74	e3832c01	 orr         r2, r3, #1, 24
  01d78	e51b3134	 ldr         r3, [r11, #-0x134]
  01d7c	e283306c	 add         r3, r3, #0x6C
  01d80	e5832000	 str         r2, [r3]

; 1643 :                         break;

  01d84	ea000006	 b           |$LN20@Device_Pro|
  01d88		 |$LN17@Device_Pro|

; 1644 : 
; 1645 :                     case USB_FEATURE_A_ALT_HNP_SUPPORT:
; 1646 :                         pPdd->devState |= MUSB_DEVSTAT_A_ALT_HNP_SUPPORT;

  01d88	e51b3134	 ldr         r3, [r11, #-0x134]
  01d8c	e283306c	 add         r3, r3, #0x6C
  01d90	e5933000	 ldr         r3, [r3]
  01d94	e3832080	 orr         r2, r3, #0x80
  01d98	e51b3134	 ldr         r3, [r11, #-0x134]
  01d9c	e283306c	 add         r3, r3, #0x6C
  01da0	e5832000	 str         r2, [r3]
  01da4		 |$LN20@Device_Pro|
  01da4		 |$LN22@Device_Pro|
  01da4		 |$LN23@Device_Pro|

; 1647 :                         break;
; 1648 :                     }
; 1649 :             }
; 1650 : 
; 1651 :             pPdd->ep0State = EP0_ST_SETUP_PROCESSED;

  01da4	e51b3134	 ldr         r3, [r11, #-0x134]
  01da8	e2832ffb	 add         r2, r3, #0xFB, 30
  01dac	e3a03001	 mov         r3, #1
  01db0	e5823000	 str         r3, [r2]

; 1652 : 
; 1653 :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_SETUP_PACKET, (DWORD)data);        

  01db4	e24b2d05	 sub         r2, r11, #5, 26
  01db8	e3a01004	 mov         r1, #4
  01dbc	e51b3134	 ldr         r3, [r11, #-0x134]
  01dc0	e2833024	 add         r3, r3, #0x24
  01dc4	e5930000	 ldr         r0, [r3]
  01dc8	e51b3134	 ldr         r3, [r11, #-0x134]
  01dcc	e2833028	 add         r3, r3, #0x28
  01dd0	e5933000	 ldr         r3, [r3]
  01dd4	e1a0e00f	 mov         lr, pc
  01dd8	e12fff13	 bx          r3

; 1654 :             break;

  01ddc	ea0001ba	 b           |$LN35@Device_Pro|
  01de0		 |$LN16@Device_Pro|

; 1655 :             
; 1656 :         case EP0_ST_SETUP_PROCESSED:
; 1657 :             pPdd->intr_rx_data_avail |=(1 << EP0);

  01de0	e51b3134	 ldr         r3, [r11, #-0x134]
  01de4	e2833e3f	 add         r3, r3, #0x3F, 28
  01de8	e5933000	 ldr         r3, [r3]
  01dec	e3832001	 orr         r2, r3, #1
  01df0	e51b3134	 ldr         r3, [r11, #-0x134]
  01df4	e2833e3f	 add         r3, r3, #0x3F, 28
  01df8	e5832000	 str         r2, [r3]

; 1658 :             break;

  01dfc	ea0001b2	 b           |$LN35@Device_Pro|
  01e00		 |$LN15@Device_Pro|

; 1659 :             
; 1660 :         case EP0_ST_DATA_RX:
; 1661 :             if (!(csr0Val & CSR0_P_RXPKTRDY))

  01e00	e24b3c01	 sub         r3, r11, #1, 24
  01e04	e15334b8	 ldrh        r3, [r3, #-0x48]
  01e08	e3130001	 tst         r3, #1
  01e0c	1a000000	 bne         |$LN14@Device_Pro|

; 1662 :                 break;

  01e10	ea0001ad	 b           |$LN35@Device_Pro|
  01e14		 |$LN14@Device_Pro|

; 1663 :             
; 1664 :             if (pPdd->ep[EP0].pTransfer == NULL) 

  01e14	e51b3134	 ldr         r3, [r11, #-0x134]
  01e18	e28330cc	 add         r3, r3, #0xCC
  01e1c	e5933000	 ldr         r3, [r3]
  01e20	e3530000	 cmp         r3, #0
  01e24	1a00001d	 bne         |$LN13@Device_Pro|

; 1665 :             {
; 1666 :                 // set intr_rxdata_avail and when IssueTransfer() is called retrieve data
; 1667 :                 //          from FIFO and set CSR0 ServicedRxPkt bit and check for end of packet to set CSR0 DATAEND bit.
; 1668 :                 //          Will need critical section for accessing pTransfer and intr_rx_available
; 1669 :                 pPdd->intr_rx_data_avail |=(1 << EP0);

  01e28	e51b3134	 ldr         r3, [r11, #-0x134]
  01e2c	e2833e3f	 add         r3, r3, #0x3F, 28
  01e30	e5933000	 ldr         r3, [r3]
  01e34	e3832001	 orr         r2, r3, #1
  01e38	e51b3134	 ldr         r3, [r11, #-0x134]
  01e3c	e2833e3f	 add         r3, r3, #0x3F, 28
  01e40	e5832000	 str         r2, [r3]

; 1670 :                 DEBUGMSG(ZONE_INFO, (L"Device_ProcessEP0:  error EP0_ST_DATA_RX pTransfer is NULL\r\n"));

  01e44	e59f3724	 ldr         r3, [pc, #0x724]
  01e48	e5933440	 ldr         r3, [r3, #0x440]
  01e4c	e3130b01	 tst         r3, #1, 22
  01e50	0a00000f	 beq         |$LN100@Device_Pro|
  01e54	e59f3714	 ldr         r3, [pc, #0x714]
  01e58	e5933440	 ldr         r3, [r3, #0x440]
  01e5c	e3130801	 tst         r3, #1, 16
  01e60	0a000004	 beq         |$LN98@Device_Pro|
  01e64	e59f0724	 ldr         r0, [pc, #0x724]
  01e68	eb000000	 bl          CeLogMsg
  01e6c	e3a03001	 mov         r3, #1
  01e70	e50b3054	 str         r3, [r11, #-0x54]
  01e74	ea000003	 b           |$LN99@Device_Pro|
  01e78		 |$LN98@Device_Pro|
  01e78	e59f0710	 ldr         r0, [pc, #0x710]
  01e7c	eb000000	 bl          NKDbgPrintfW
  01e80	e3a03000	 mov         r3, #0
  01e84	e50b3054	 str         r3, [r11, #-0x54]
  01e88		 |$LN99@Device_Pro|
  01e88	e3a03001	 mov         r3, #1
  01e8c	e50b3050	 str         r3, [r11, #-0x50]
  01e90	ea000001	 b           |$LN101@Device_Pro|
  01e94		 |$LN100@Device_Pro|
  01e94	e3a03000	 mov         r3, #0
  01e98	e50b3050	 str         r3, [r11, #-0x50]
  01e9c		 |$LN101@Device_Pro|

; 1671 :                 break;

  01e9c	ea00018a	 b           |$LN35@Device_Pro|
  01ea0		 |$LN13@Device_Pro|

; 1672 :             }
; 1673 :                         
; 1674 :             {
; 1675 :                 MUsbFnEp_t *pEP = &pPdd->ep[EP0];

  01ea0	e51b3134	 ldr         r3, [r11, #-0x134]
  01ea4	e28330ac	 add         r3, r3, #0xAC
  01ea8	e50b3104	 str         r3, [r11, #-0x104]

; 1676 :                 STransfer *pTransfer = pEP->pTransfer;

  01eac	e51b3104	 ldr         r3, [r11, #-0x104]
  01eb0	e2833020	 add         r3, r3, #0x20
  01eb4	e5933000	 ldr         r3, [r3]
  01eb8	e50b3108	 str         r3, [r11, #-0x108]

; 1677 :                 UCHAR *pBuffer;            
; 1678 :                 DWORD space, remain, maxSize;
; 1679 :                 
; 1680 :                 pBuffer =(UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;               

  01ebc	e51b3108	 ldr         r3, [r11, #-0x108]
  01ec0	e2832004	 add         r2, r3, #4
  01ec4	e51b3108	 ldr         r3, [r11, #-0x108]
  01ec8	e2833010	 add         r3, r3, #0x10
  01ecc	e5922000	 ldr         r2, [r2]
  01ed0	e5933000	 ldr         r3, [r3]
  01ed4	e0823003	 add         r3, r2, r3
  01ed8	e50b3114	 str         r3, [r11, #-0x114]

; 1681 :                 space = pTransfer->cbBuffer - pTransfer->cbTransferred;

  01edc	e51b3108	 ldr         r3, [r11, #-0x108]
  01ee0	e283200c	 add         r2, r3, #0xC
  01ee4	e51b3108	 ldr         r3, [r11, #-0x108]
  01ee8	e2833010	 add         r3, r3, #0x10
  01eec	e5922000	 ldr         r2, [r2]
  01ef0	e5933000	 ldr         r3, [r3]
  01ef4	e0423003	 sub         r3, r2, r3
  01ef8	e50b3110	 str         r3, [r11, #-0x110]

; 1682 :                 // Get maxPacketSize
; 1683 :                 maxSize = pPdd->ep[EP0].maxPacketSize;

  01efc	e51b3134	 ldr         r3, [r11, #-0x134]
  01f00	e28330ac	 add         r3, r3, #0xAC
  01f04	e1d330b0	 ldrh        r3, [r3]
  01f08	e50b3118	 str         r3, [r11, #-0x118]
  01f0c		 |$LN139@Device_Pro|

; 1684 :                 
; 1685 :                 __try
; 1686 :                 {
; 1687 :                     USHORT dwFlag = CSR0_P_SERVICEDRXPKTRDY;

  01f0c	e3a03040	 mov         r3, #0x40
  01f10	e24bcc01	 sub         r12, r11, #1, 24
  01f14	e14c30b0	 strh        r3, [r12]

; 1688 :                     remain = rxcount;

  01f18	e24b3c01	 sub         r3, r11, #1, 24
  01f1c	e15333b0	 ldrh        r3, [r3, #-0x30]
  01f20	e50b310c	 str         r3, [r11, #-0x10C]

; 1689 :                     
; 1690 :                     ReadFIFO(pPdd, (UCHAR)EP0, pBuffer, (DWORD)rxcount);

  01f24	e24b3c01	 sub         r3, r11, #1, 24
  01f28	e15333b0	 ldrh        r3, [r3, #-0x30]
  01f2c	e51b2114	 ldr         r2, [r11, #-0x114]
  01f30	e3a01000	 mov         r1, #0
  01f34	e51b0134	 ldr         r0, [r11, #-0x134]
  01f38	eb000000	 bl          ReadFIFO

; 1691 :                     
; 1692 :                     DEBUGMSG(ZONE_INFO, (L"Device_ProcessEP0: EP0_ST_DATA_RX received data\r\n"));                    

  01f3c	e59f362c	 ldr         r3, [pc, #0x62C]
  01f40	e5933440	 ldr         r3, [r3, #0x440]
  01f44	e3130b01	 tst         r3, #1, 22
  01f48	0a00000f	 beq         |$LN104@Device_Pro|
  01f4c	e59f361c	 ldr         r3, [pc, #0x61C]
  01f50	e5933440	 ldr         r3, [r3, #0x440]
  01f54	e3130801	 tst         r3, #1, 16
  01f58	0a000004	 beq         |$LN102@Device_Pro|
  01f5c	e59f0628	 ldr         r0, [pc, #0x628]
  01f60	eb000000	 bl          CeLogMsg
  01f64	e3a03001	 mov         r3, #1
  01f68	e50b304c	 str         r3, [r11, #-0x4C]
  01f6c	ea000003	 b           |$LN103@Device_Pro|
  01f70		 |$LN102@Device_Pro|
  01f70	e59f0614	 ldr         r0, [pc, #0x614]
  01f74	eb000000	 bl          NKDbgPrintfW
  01f78	e3a03000	 mov         r3, #0
  01f7c	e50b304c	 str         r3, [r11, #-0x4C]
  01f80		 |$LN103@Device_Pro|
  01f80	e3a03001	 mov         r3, #1
  01f84	e50b3048	 str         r3, [r11, #-0x48]
  01f88	ea000001	 b           |$LN105@Device_Pro|
  01f8c		 |$LN104@Device_Pro|
  01f8c	e3a03000	 mov         r3, #0
  01f90	e50b3048	 str         r3, [r11, #-0x48]
  01f94		 |$LN105@Device_Pro|

; 1693 :                     
; 1694 :                     // We transfered some data
; 1695 :                     pTransfer->cbTransferred += rxcount;

  01f94	e51b3108	 ldr         r3, [r11, #-0x108]
  01f98	e2833010	 add         r3, r3, #0x10
  01f9c	e24b2c01	 sub         r2, r11, #1, 24
  01fa0	e15223b0	 ldrh        r2, [r2, #-0x30]
  01fa4	e5933000	 ldr         r3, [r3]
  01fa8	e0832002	 add         r2, r3, r2
  01fac	e51b3108	 ldr         r3, [r11, #-0x108]
  01fb0	e2833010	 add         r3, r3, #0x10
  01fb4	e5832000	 str         r2, [r3]

; 1696 :                     
; 1697 :                     // Is this end of transfer?
; 1698 :                     if (rxcount < maxSize)

  01fb8	e24b2c01	 sub         r2, r11, #1, 24
  01fbc	e15223b0	 ldrh        r2, [r2, #-0x30]
  01fc0	e51b3118	 ldr         r3, [r11, #-0x118]
  01fc4	e1520003	 cmp         r2, r3
  01fc8	2a00001c	 bcs         |$LN11@Device_Pro|

; 1699 :                     {
; 1700 :                         // received last block
; 1701 :                         pTransfer->dwUsbError = UFN_NO_ERROR;

  01fcc	e51b3108	 ldr         r3, [r11, #-0x108]
  01fd0	e2832014	 add         r2, r3, #0x14
  01fd4	e3a03000	 mov         r3, #0
  01fd8	e5823000	 str         r3, [r2]

; 1702 :                         pPdd->ep0State = EP0_ST_STATUS_IN;

  01fdc	e51b3134	 ldr         r3, [r11, #-0x134]
  01fe0	e2832ffb	 add         r2, r3, #0xFB, 30
  01fe4	e3a03002	 mov         r3, #2
  01fe8	e5823000	 str         r3, [r2]

; 1703 :                         pEP->pTransfer = NULL;

  01fec	e51b3104	 ldr         r3, [r11, #-0x104]
  01ff0	e2832020	 add         r2, r3, #0x20
  01ff4	e3a03000	 mov         r3, #0
  01ff8	e5823000	 str         r3, [r2]

; 1704 :                         pPdd->pfnNotify(
; 1705 :                             pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer);

  01ffc	e51b2108	 ldr         r2, [r11, #-0x108]
  02000	e3a01064	 mov         r1, #0x64
  02004	e51b3134	 ldr         r3, [r11, #-0x134]
  02008	e2833024	 add         r3, r3, #0x24
  0200c	e5930000	 ldr         r0, [r3]
  02010	e51b3134	 ldr         r3, [r11, #-0x134]
  02014	e2833028	 add         r3, r3, #0x28
  02018	e5933000	 ldr         r3, [r3]
  0201c	e1a0e00f	 mov         lr, pc
  02020	e12fff13	 bx          r3

; 1706 :                         dwFlag |= CSR0_P_DATAEND;

  02024	e24b3c01	 sub         r3, r11, #1, 24
  02028	e15330b0	 ldrh        r3, [r3]
  0202c	e3833008	 orr         r3, r3, #8
  02030	e1a03803	 mov         r3, r3, lsl #16
  02034	e1a03823	 mov         r3, r3, lsr #16
  02038	e24bcc01	 sub         r12, r11, #1, 24
  0203c	e14c30b0	 strh        r3, [r12]
  02040		 |$LN11@Device_Pro|

; 1707 :                     }
; 1708 :                     SETREG16(&pCsrRegs->ep[EP0].CSR.CSR0, dwFlag);

  02040	e51b3150	 ldr         r3, [r11, #-0x150]
  02044	e2833002	 add         r3, r3, #2
  02048	e1d330b0	 ldrh        r3, [r3]
  0204c	e1a02003	 mov         r2, r3
  02050	e24b3c01	 sub         r3, r11, #1, 24
  02054	e15330b0	 ldrh        r3, [r3]
  02058	e1823003	 orr         r3, r2, r3
  0205c	e1a02803	 mov         r2, r3, lsl #16
  02060	e1a02822	 mov         r2, r2, lsr #16
  02064	e51b3150	 ldr         r3, [r11, #-0x150]
  02068	e2833002	 add         r3, r3, #2
  0206c	e1c320b0	 strh        r2, [r3]
  02070		 |$LN140@Device_Pro|

; 1709 :                 }

  02070	ea000004	 b           |$LN141@Device_Pro|
  02074		 |$LN136@Device_Pro|

; 1711 :                 {
; 1712 :                     pTransfer->dwUsbError = UFN_CLIENT_BUFFER_ERROR;

  02074	e51b3108	 ldr         r3, [r11, #-0x108]
  02078	e2832014	 add         r2, r3, #0x14
  0207c	e3a03f41	 mov         r3, #0x41, 30
  02080	e5823000	 str         r3, [r2]
  02084	eaffffff	 b           |$LN141@Device_Pro|
  02088		 |$LN141@Device_Pro|

; 1713 :                 }
; 1714 :                 
; 1715 :                 // clear intr_rx_data_avail EP0 bit
; 1716 :                 pPdd->intr_rx_data_avail &= ~(1 << EP0);            

  02088	e51b3134	 ldr         r3, [r11, #-0x134]
  0208c	e2833e3f	 add         r3, r3, #0x3F, 28
  02090	e5932000	 ldr         r2, [r3]
  02094	e3e03001	 mvn         r3, #1
  02098	e0022003	 and         r2, r2, r3
  0209c	e51b3134	 ldr         r3, [r11, #-0x134]
  020a0	e2833e3f	 add         r3, r3, #0x3F, 28
  020a4	e5832000	 str         r2, [r3]

; 1717 :             }
; 1718 :             break;

  020a8	ea000107	 b           |$LN35@Device_Pro|
  020ac		 |$LN10@Device_Pro|

; 1719 :             
; 1720 :         case EP0_ST_DATA_TX:
; 1721 :             if (csr0Val & CSR0_P_TXPKTRDY)

  020ac	e24b3c01	 sub         r3, r11, #1, 24
  020b0	e15334b8	 ldrh        r3, [r3, #-0x48]
  020b4	e3130002	 tst         r3, #2
  020b8	0a000000	 beq         |$LN9@Device_Pro|

; 1722 :                 break;

  020bc	ea000102	 b           |$LN35@Device_Pro|
  020c0		 |$LN9@Device_Pro|

; 1723 :             
; 1724 :             {
; 1725 :                 MUsbFnEp_t *pEP = &pPdd->ep[EP0];

  020c0	e51b3134	 ldr         r3, [r11, #-0x134]
  020c4	e28330ac	 add         r3, r3, #0xAC
  020c8	e50b30ec	 str         r3, [r11, #-0xEC]

; 1726 :                 STransfer *pTransfer = pEP->pTransfer;

  020cc	e51b30ec	 ldr         r3, [r11, #-0xEC]
  020d0	e2833020	 add         r3, r3, #0x20
  020d4	e5933000	 ldr         r3, [r3]
  020d8	e50b30f0	 str         r3, [r11, #-0xF0]

; 1727 :                 UCHAR *pBuffer;
; 1728 :                 DWORD space, txcount;
; 1729 :                 
; 1730 :                 if (pTransfer == NULL) 

  020dc	e51b30f0	 ldr         r3, [r11, #-0xF0]
  020e0	e3530000	 cmp         r3, #0
  020e4	1a000016	 bne         |$LN8@Device_Pro|

; 1731 :                 {
; 1732 :                     DEBUGMSG(ZONE_INFO, (L"Device_ProcessEP0:  error EP0_ST_DATA_TX pTransfer is NULL\r\n"));

  020e8	e59f3480	 ldr         r3, [pc, #0x480]
  020ec	e5933440	 ldr         r3, [r3, #0x440]
  020f0	e3130b01	 tst         r3, #1, 22
  020f4	0a00000f	 beq         |$LN108@Device_Pro|
  020f8	e59f3470	 ldr         r3, [pc, #0x470]
  020fc	e5933440	 ldr         r3, [r3, #0x440]
  02100	e3130801	 tst         r3, #1, 16
  02104	0a000004	 beq         |$LN106@Device_Pro|
  02108	e59f0478	 ldr         r0, [pc, #0x478]
  0210c	eb000000	 bl          CeLogMsg
  02110	e3a03001	 mov         r3, #1
  02114	e50b3044	 str         r3, [r11, #-0x44]
  02118	ea000003	 b           |$LN107@Device_Pro|
  0211c		 |$LN106@Device_Pro|
  0211c	e59f0464	 ldr         r0, [pc, #0x464]
  02120	eb000000	 bl          NKDbgPrintfW
  02124	e3a03000	 mov         r3, #0
  02128	e50b3044	 str         r3, [r11, #-0x44]
  0212c		 |$LN107@Device_Pro|
  0212c	e3a03001	 mov         r3, #1
  02130	e50b3040	 str         r3, [r11, #-0x40]
  02134	ea000001	 b           |$LN109@Device_Pro|
  02138		 |$LN108@Device_Pro|
  02138	e3a03000	 mov         r3, #0
  0213c	e50b3040	 str         r3, [r11, #-0x40]
  02140		 |$LN109@Device_Pro|

; 1733 :                     break;

  02140	ea0000e1	 b           |$LN35@Device_Pro|
  02144		 |$LN8@Device_Pro|
  02144		 |$LN146@Device_Pro|

; 1734 :                 }
; 1735 :                 
; 1736 :                 __try
; 1737 :                 {
; 1738 :                     DWORD dwFlag = 0;

  02144	e3a03000	 mov         r3, #0
  02148	e50b30e8	 str         r3, [r11, #-0xE8]

; 1739 :                     pBuffer =(UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;

  0214c	e51b30f0	 ldr         r3, [r11, #-0xF0]
  02150	e2832004	 add         r2, r3, #4
  02154	e51b30f0	 ldr         r3, [r11, #-0xF0]
  02158	e2833010	 add         r3, r3, #0x10
  0215c	e5922000	 ldr         r2, [r2]
  02160	e5933000	 ldr         r3, [r3]
  02164	e0823003	 add         r3, r2, r3
  02168	e50b30fc	 str         r3, [r11, #-0xFC]

; 1740 :                     space = pTransfer->cbBuffer - pTransfer->cbTransferred;

  0216c	e51b30f0	 ldr         r3, [r11, #-0xF0]
  02170	e283200c	 add         r2, r3, #0xC
  02174	e51b30f0	 ldr         r3, [r11, #-0xF0]
  02178	e2833010	 add         r3, r3, #0x10
  0217c	e5922000	 ldr         r2, [r2]
  02180	e5933000	 ldr         r3, [r3]
  02184	e0423003	 sub         r3, r2, r3
  02188	e50b30f4	 str         r3, [r11, #-0xF4]

; 1741 :                     
; 1742 :                     
; 1743 :                     // How many bytes we can send just now?
; 1744 :                     txcount = pEP->maxPacketSize;

  0218c	e51b30ec	 ldr         r3, [r11, #-0xEC]
  02190	e1d330b0	 ldrh        r3, [r3]
  02194	e50b30f8	 str         r3, [r11, #-0xF8]

; 1745 :                     if (txcount > space)

  02198	e51b20f8	 ldr         r2, [r11, #-0xF8]
  0219c	e51b30f4	 ldr         r3, [r11, #-0xF4]
  021a0	e1520003	 cmp         r2, r3
  021a4	9a000001	 bls         |$LN6@Device_Pro|

; 1746 :                         txcount = space;

  021a8	e51b30f4	 ldr         r3, [r11, #-0xF4]
  021ac	e50b30f8	 str         r3, [r11, #-0xF8]
  021b0		 |$LN6@Device_Pro|

; 1747 :                     
; 1748 :                     DEBUGMSG(ZONE_INFO, (L"Device_ProcessEP0: EP0_ST_DATA_TX bytes_left_to_send=%d sending=%d\r\n", space, txcount));

  021b0	e59f33b8	 ldr         r3, [pc, #0x3B8]
  021b4	e5933440	 ldr         r3, [r3, #0x440]
  021b8	e3130b01	 tst         r3, #1, 22
  021bc	0a000013	 beq         |$LN112@Device_Pro|
  021c0	e59f33a8	 ldr         r3, [pc, #0x3A8]
  021c4	e5933440	 ldr         r3, [r3, #0x440]
  021c8	e3130801	 tst         r3, #1, 16
  021cc	0a000006	 beq         |$LN110@Device_Pro|
  021d0	e51b20f8	 ldr         r2, [r11, #-0xF8]
  021d4	e51b10f4	 ldr         r1, [r11, #-0xF4]
  021d8	e59f03a4	 ldr         r0, [pc, #0x3A4]
  021dc	eb000000	 bl          CeLogMsg
  021e0	e3a03001	 mov         r3, #1
  021e4	e50b303c	 str         r3, [r11, #-0x3C]
  021e8	ea000005	 b           |$LN111@Device_Pro|
  021ec		 |$LN110@Device_Pro|
  021ec	e51b20f8	 ldr         r2, [r11, #-0xF8]
  021f0	e51b10f4	 ldr         r1, [r11, #-0xF4]
  021f4	e59f0388	 ldr         r0, [pc, #0x388]
  021f8	eb000000	 bl          NKDbgPrintfW
  021fc	e3a03000	 mov         r3, #0
  02200	e50b303c	 str         r3, [r11, #-0x3C]
  02204		 |$LN111@Device_Pro|
  02204	e3a03001	 mov         r3, #1
  02208	e50b3038	 str         r3, [r11, #-0x38]
  0220c	ea000001	 b           |$LN113@Device_Pro|
  02210		 |$LN112@Device_Pro|
  02210	e3a03000	 mov         r3, #0
  02214	e50b3038	 str         r3, [r11, #-0x38]
  02218		 |$LN113@Device_Pro|

; 1749 :                     
; 1750 :                     // Write data to FIFO
; 1751 :                     WriteFIFO(pPdd, EP0, pBuffer, txcount);

  02218	e51b30f8	 ldr         r3, [r11, #-0xF8]
  0221c	e51b20fc	 ldr         r2, [r11, #-0xFC]
  02220	e3a01000	 mov         r1, #0
  02224	e51b0134	 ldr         r0, [r11, #-0x134]
  02228	eb000000	 bl          WriteFIFO

; 1752 :                     
; 1753 :                     // We transfered some data
; 1754 :                     pTransfer->cbTransferred += txcount;

  0222c	e51b30f0	 ldr         r3, [r11, #-0xF0]
  02230	e2833010	 add         r3, r3, #0x10
  02234	e5932000	 ldr         r2, [r3]
  02238	e51b30f8	 ldr         r3, [r11, #-0xF8]
  0223c	e0822003	 add         r2, r2, r3
  02240	e51b30f0	 ldr         r3, [r11, #-0xF0]
  02244	e2833010	 add         r3, r3, #0x10
  02248	e5832000	 str         r2, [r3]

; 1755 :                     dwFlag = CSR0_P_TXPKTRDY;               

  0224c	e3a03002	 mov         r3, #2
  02250	e50b30e8	 str         r3, [r11, #-0xE8]

; 1756 :                     
; 1757 :                     if (pTransfer->cbTransferred == pTransfer->cbBuffer)

  02254	e51b30f0	 ldr         r3, [r11, #-0xF0]
  02258	e2832010	 add         r2, r3, #0x10
  0225c	e51b30f0	 ldr         r3, [r11, #-0xF0]
  02260	e283300c	 add         r3, r3, #0xC
  02264	e5922000	 ldr         r2, [r2]
  02268	e5933000	 ldr         r3, [r3]
  0226c	e1520003	 cmp         r2, r3
  02270	1a00002e	 bne         |$LN5@Device_Pro|

; 1758 :                     {
; 1759 :                         pPdd->ep0State = EP0_ST_STATUS_OUT;

  02274	e51b3134	 ldr         r3, [r11, #-0x134]
  02278	e2832ffb	 add         r2, r3, #0xFB, 30
  0227c	e3a03003	 mov         r3, #3
  02280	e5823000	 str         r3, [r2]

; 1760 :                         pEP->pTransfer = NULL;

  02284	e51b30ec	 ldr         r3, [r11, #-0xEC]
  02288	e2832020	 add         r2, r3, #0x20
  0228c	e3a03000	 mov         r3, #0
  02290	e5823000	 str         r3, [r2]

; 1761 :                         pTransfer->dwUsbError = UFN_NO_ERROR;

  02294	e51b30f0	 ldr         r3, [r11, #-0xF0]
  02298	e2832014	 add         r2, r3, #0x14
  0229c	e3a03000	 mov         r3, #0
  022a0	e5823000	 str         r3, [r2]

; 1762 :                         pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer);   

  022a4	e51b20f0	 ldr         r2, [r11, #-0xF0]
  022a8	e3a01064	 mov         r1, #0x64
  022ac	e51b3134	 ldr         r3, [r11, #-0x134]
  022b0	e2833024	 add         r3, r3, #0x24
  022b4	e5930000	 ldr         r0, [r3]
  022b8	e51b3134	 ldr         r3, [r11, #-0x134]
  022bc	e2833028	 add         r3, r3, #0x28
  022c0	e5933000	 ldr         r3, [r3]
  022c4	e1a0e00f	 mov         lr, pc
  022c8	e12fff13	 bx          r3

; 1763 :                         DEBUGMSG(ZONE_INFO, (TEXT("Device_Process0: final copy Notify - transfer completed\r\n")));

  022cc	e59f329c	 ldr         r3, [pc, #0x29C]
  022d0	e5933440	 ldr         r3, [r3, #0x440]
  022d4	e3130b01	 tst         r3, #1, 22
  022d8	0a00000f	 beq         |$LN116@Device_Pro|
  022dc	e59f328c	 ldr         r3, [pc, #0x28C]
  022e0	e5933440	 ldr         r3, [r3, #0x440]
  022e4	e3130801	 tst         r3, #1, 16
  022e8	0a000004	 beq         |$LN114@Device_Pro|
  022ec	e59f028c	 ldr         r0, [pc, #0x28C]
  022f0	eb000000	 bl          CeLogMsg
  022f4	e3a03001	 mov         r3, #1
  022f8	e50b3034	 str         r3, [r11, #-0x34]
  022fc	ea000003	 b           |$LN115@Device_Pro|
  02300		 |$LN114@Device_Pro|
  02300	e59f0278	 ldr         r0, [pc, #0x278]
  02304	eb000000	 bl          NKDbgPrintfW
  02308	e3a03000	 mov         r3, #0
  0230c	e50b3034	 str         r3, [r11, #-0x34]
  02310		 |$LN115@Device_Pro|
  02310	e3a03001	 mov         r3, #1
  02314	e50b3030	 str         r3, [r11, #-0x30]
  02318	ea000001	 b           |$LN117@Device_Pro|
  0231c		 |$LN116@Device_Pro|
  0231c	e3a03000	 mov         r3, #0
  02320	e50b3030	 str         r3, [r11, #-0x30]
  02324		 |$LN117@Device_Pro|

; 1764 :                         dwFlag |= CSR0_P_DATAEND;

  02324	e51b30e8	 ldr         r3, [r11, #-0xE8]
  02328	e3833008	 orr         r3, r3, #8
  0232c	e50b30e8	 str         r3, [r11, #-0xE8]
  02330		 |$LN5@Device_Pro|

; 1765 :                     }       
; 1766 :                     
; 1767 :                     DEBUGMSG(ZONE_INFO, (TEXT("2. Device_ProcessEP0 Set TxPktRdy - 0\r\n")));

  02330	e59f3238	 ldr         r3, [pc, #0x238]
  02334	e5933440	 ldr         r3, [r3, #0x440]
  02338	e3130b01	 tst         r3, #1, 22
  0233c	0a00000f	 beq         |$LN120@Device_Pro|
  02340	e59f3228	 ldr         r3, [pc, #0x228]
  02344	e5933440	 ldr         r3, [r3, #0x440]
  02348	e3130801	 tst         r3, #1, 16
  0234c	0a000004	 beq         |$LN118@Device_Pro|
  02350	e59f0224	 ldr         r0, [pc, #0x224]
  02354	eb000000	 bl          CeLogMsg
  02358	e3a03001	 mov         r3, #1
  0235c	e50b302c	 str         r3, [r11, #-0x2C]
  02360	ea000003	 b           |$LN119@Device_Pro|
  02364		 |$LN118@Device_Pro|
  02364	e59f0210	 ldr         r0, [pc, #0x210]
  02368	eb000000	 bl          NKDbgPrintfW
  0236c	e3a03000	 mov         r3, #0
  02370	e50b302c	 str         r3, [r11, #-0x2C]
  02374		 |$LN119@Device_Pro|
  02374	e3a03001	 mov         r3, #1
  02378	e50b3028	 str         r3, [r11, #-0x28]
  0237c	ea000001	 b           |$LN121@Device_Pro|
  02380		 |$LN120@Device_Pro|
  02380	e3a03000	 mov         r3, #0
  02384	e50b3028	 str         r3, [r11, #-0x28]
  02388		 |$LN121@Device_Pro|

; 1768 :                     SETREG16(&pCsrRegs->ep[EP0].CSR.CSR0, dwFlag);

  02388	e51b3150	 ldr         r3, [r11, #-0x150]
  0238c	e2833002	 add         r3, r3, #2
  02390	e1d320b0	 ldrh        r2, [r3]
  02394	e51b30e8	 ldr         r3, [r11, #-0xE8]
  02398	e1823003	 orr         r3, r2, r3
  0239c	e1a02803	 mov         r2, r3, lsl #16
  023a0	e1a02822	 mov         r2, r2, lsr #16
  023a4	e51b3150	 ldr         r3, [r11, #-0x150]
  023a8	e2833002	 add         r3, r3, #2
  023ac	e1c320b0	 strh        r2, [r3]
  023b0		 |$LN147@Device_Pro|

; 1769 :                 }

  023b0	ea00001a	 b           |$LN148@Device_Pro|
  023b4		 |$LN143@Device_Pro|

; 1771 :                 {
; 1772 :                     pTransfer->dwUsbError = UFN_CLIENT_BUFFER_ERROR;

  023b4	e51b30f0	 ldr         r3, [r11, #-0xF0]
  023b8	e2832014	 add         r2, r3, #0x14
  023bc	e3a03f41	 mov         r3, #0x41, 30
  023c0	e5823000	 str         r3, [r2]

; 1773 :                     DEBUGMSG(ZONE_ERROR, (L"Device_ProcessEP0: EP0_ST_DATA_TX"));

  023c4	e59f31a4	 ldr         r3, [pc, #0x1A4]
  023c8	e5933440	 ldr         r3, [r3, #0x440]
  023cc	e3130001	 tst         r3, #1
  023d0	0a00000f	 beq         |$LN124@Device_Pro|
  023d4	e59f3194	 ldr         r3, [pc, #0x194]
  023d8	e5933440	 ldr         r3, [r3, #0x440]
  023dc	e3130801	 tst         r3, #1, 16
  023e0	0a000004	 beq         |$LN122@Device_Pro|
  023e4	e59f018c	 ldr         r0, [pc, #0x18C]
  023e8	eb000000	 bl          CeLogMsg
  023ec	e3a03001	 mov         r3, #1
  023f0	e50b3024	 str         r3, [r11, #-0x24]
  023f4	ea000003	 b           |$LN123@Device_Pro|
  023f8		 |$LN122@Device_Pro|
  023f8	e59f0178	 ldr         r0, [pc, #0x178]
  023fc	eb000000	 bl          NKDbgPrintfW
  02400	e3a03000	 mov         r3, #0
  02404	e50b3024	 str         r3, [r11, #-0x24]
  02408		 |$LN123@Device_Pro|
  02408	e3a03001	 mov         r3, #1
  0240c	e50b3020	 str         r3, [r11, #-0x20]
  02410	ea000001	 b           |$LN125@Device_Pro|
  02414		 |$LN124@Device_Pro|
  02414	e3a03000	 mov         r3, #0
  02418	e50b3020	 str         r3, [r11, #-0x20]
  0241c		 |$LN125@Device_Pro|
  0241c	eaffffff	 b           |$LN148@Device_Pro|
  02420		 |$LN148@Device_Pro|

; 1774 :                 }
; 1775 :             }
; 1776 :             break;            

  02420	ea000029	 b           |$LN35@Device_Pro|

; 1777 :             
; 1778 :         case EP0_ST_STATUS_OUT:
; 1779 :             // dummy state in processEP0
; 1780 :             break;

  02424	ea000028	 b           |$LN35@Device_Pro|
  02428		 |$LN3@Device_Pro|

; 1781 :             
; 1782 :         case EP0_ST_ERROR:
; 1783 :             if (csr0Val & CSR0_P_SENTSTALL)

  02428	e24b3c01	 sub         r3, r11, #1, 24
  0242c	e15334b8	 ldrh        r3, [r3, #-0x48]
  02430	e3130004	 tst         r3, #4
  02434	0a000024	 beq         |$LN2@Device_Pro|

; 1784 :             {
; 1785 :                 DEBUGMSG(ZONE_INFO, (TEXT("ST_ERROR\r\n")));

  02438	e59f3130	 ldr         r3, [pc, #0x130]
  0243c	e5933440	 ldr         r3, [r3, #0x440]
  02440	e3130b01	 tst         r3, #1, 22
  02444	0a00000f	 beq         |$LN128@Device_Pro|
  02448	e59f3120	 ldr         r3, [pc, #0x120]
  0244c	e5933440	 ldr         r3, [r3, #0x440]
  02450	e3130801	 tst         r3, #1, 16
  02454	0a000004	 beq         |$LN126@Device_Pro|
  02458	e59f0114	 ldr         r0, [pc, #0x114]
  0245c	eb000000	 bl          CeLogMsg
  02460	e3a03001	 mov         r3, #1
  02464	e50b301c	 str         r3, [r11, #-0x1C]
  02468	ea000003	 b           |$LN127@Device_Pro|
  0246c		 |$LN126@Device_Pro|
  0246c	e59f0100	 ldr         r0, [pc, #0x100]
  02470	eb000000	 bl          NKDbgPrintfW
  02474	e3a03000	 mov         r3, #0
  02478	e50b301c	 str         r3, [r11, #-0x1C]
  0247c		 |$LN127@Device_Pro|
  0247c	e3a03001	 mov         r3, #1
  02480	e50b3018	 str         r3, [r11, #-0x18]
  02484	ea000001	 b           |$LN129@Device_Pro|
  02488		 |$LN128@Device_Pro|
  02488	e3a03000	 mov         r3, #0
  0248c	e50b3018	 str         r3, [r11, #-0x18]
  02490		 |$LN129@Device_Pro|

; 1786 :                 pPdd->ep0State = EP0_ST_SETUP;

  02490	e51b3134	 ldr         r3, [r11, #-0x134]
  02494	e2832ffb	 add         r2, r3, #0xFB, 30
  02498	e3a03000	 mov         r3, #0
  0249c	e5823000	 str         r3, [r2]

; 1787 :                 CLRREG16(&pCsrRegs->ep[EP0].CSR.CSR0, CSR0_P_SENTSTALL);

  024a0	e51b3150	 ldr         r3, [r11, #-0x150]
  024a4	e2833002	 add         r3, r3, #2
  024a8	e1d330b0	 ldrh        r3, [r3]
  024ac	e1a02003	 mov         r2, r3
  024b0	e3e03004	 mvn         r3, #4
  024b4	e0023003	 and         r3, r2, r3
  024b8	e1a02803	 mov         r2, r3, lsl #16
  024bc	e1a02822	 mov         r2, r2, lsr #16
  024c0	e51b3150	 ldr         r3, [r11, #-0x150]
  024c4	e2833002	 add         r3, r3, #2
  024c8	e1c320b0	 strh        r2, [r3]
  024cc		 |$LN2@Device_Pro|
  024cc		 |$LN1@Device_Pro|
  024cc		 |$LN35@Device_Pro|
  024cc		 |$cleanUp$48298|

; 1788 :             }
; 1789 :             break;
; 1790 :             
; 1791 :         default:
; 1792 :             break;
; 1793 :         }
; 1794 : cleanUp:                
; 1795 :         prtEP0State(pPdd);

  024cc	e51b0134	 ldr         r0, [r11, #-0x134]
  024d0	eb000000	 bl          prtEP0State

; 1796 :         DEBUGMSG(ZONE_FUNCTION, (L"-Device_ProcessEP0\r\n"));

  024d4	e59f3094	 ldr         r3, [pc, #0x94]
  024d8	e5933440	 ldr         r3, [r3, #0x440]
  024dc	e3130a01	 tst         r3, #1, 20
  024e0	0a00000f	 beq         |$LN132@Device_Pro|
  024e4	e59f3084	 ldr         r3, [pc, #0x84]
  024e8	e5933440	 ldr         r3, [r3, #0x440]
  024ec	e3130801	 tst         r3, #1, 16
  024f0	0a000004	 beq         |$LN130@Device_Pro|
  024f4	e59f0070	 ldr         r0, [pc, #0x70]
  024f8	eb000000	 bl          CeLogMsg
  024fc	e3a03001	 mov         r3, #1
  02500	e50b3014	 str         r3, [r11, #-0x14]
  02504	ea000003	 b           |$LN131@Device_Pro|
  02508		 |$LN130@Device_Pro|
  02508	e59f005c	 ldr         r0, [pc, #0x5C]
  0250c	eb000000	 bl          NKDbgPrintfW
  02510	e3a03000	 mov         r3, #0
  02514	e50b3014	 str         r3, [r11, #-0x14]
  02518		 |$LN131@Device_Pro|
  02518	e3a03001	 mov         r3, #1
  0251c	e50b3010	 str         r3, [r11, #-0x10]
  02520	ea000001	 b           |$LN133@Device_Pro|
  02524		 |$LN132@Device_Pro|
  02524	e3a03000	 mov         r3, #0
  02528	e50b3010	 str         r3, [r11, #-0x10]
  0252c		 |$LN133@Device_Pro|

; 1797 :         
; 1798 :         return ERROR_SUCCESS;

  0252c	e3a03000	 mov         r3, #0
  02530	e50b30d8	 str         r3, [r11, #-0xD8]
  02534		 |$LN134@Device_Pro|

; 1799 : }

  02534	e51b00d8	 ldr         r0, [r11, #-0xD8]
  02538	e24bd00c	 sub         sp, r11, #0xC
  0253c	e89d6800	 ldmia       sp, {r11, sp, lr}
  02540	e12fff1e	 bx          lr

			 ENDP  ; |Device_ProcessEP0|

  02544		 |$LN142@Device_Pro|
  02544		 |$LN152@Device_Pro|

; 1770 :                 __except(EXCEPTION_EXECUTE_HANDLER)

  02544	e52de004	 str         lr, [sp, #-4]!
  02548	e24dd008	 sub         sp, sp, #8
  0254c		 |$LN145@Device_Pro|
  0254c		 |$LN165@Device_Pro|
  0254c	e3a00001	 mov         r0, #1
  02550		 |$LN144@Device_Pro|
  02550	e28dd008	 add         sp, sp, #8
  02554	e49df004	 ldr         pc, [sp], #4
  02558		 |$LN166@Device_Pro|
  02558		 |$LN135@Device_Pro|
  02558		 |$LN154@Device_Pro|

; 1710 :                 __except(EXCEPTION_EXECUTE_HANDLER)

  02558	e52de004	 str         lr, [sp, #-4]!
  0255c	e24dd008	 sub         sp, sp, #8
  02560		 |$LN138@Device_Pro|
  02560		 |$LN167@Device_Pro|
  02560	e3a00001	 mov         r0, #1
  02564		 |$LN137@Device_Pro|
  02564	e28dd008	 add         sp, sp, #8
  02568	e49df004	 ldr         pc, [sp], #4
  0256c		 |$LN169@Device_Pro|
  0256c		 |$LN170@Device_Pro|
  0256c	00000000	 DCD         |??_C@_1CK@PHELNBKD@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?$AN?$AA?6?$AA?$AA@|
  02570		 |$LN171@Device_Pro|
  02570	00000000	 DCD         |dpCurSettings|
  02574		 |$LN172@Device_Pro|
  02574	00000000	 DCD         |??_C@_1BG@BNAGFJMA@?$AAS?$AAT?$AA_?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$AN?$AA?6?$AA?$AA@|
  02578		 |$LN173@Device_Pro|
  02578	00000000	 DCD         |??_C@_1EE@HFKOLDHG@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAT@|
  0257c		 |$LN174@Device_Pro|
  0257c	00000000	 DCD         |??_C@_1FA@LBDLDOFO@?$AA2?$AA?4?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?5?$AAS?$AAe?$AAt?$AA?5?$AAT?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd@|
  02580		 |$LN175@Device_Pro|
  02580	00000000	 DCD         |??_C@_1HE@CCMNMCIH@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA0?$AA?3?$AA?5?$AAf?$AAi?$AAn?$AAa?$AAl?$AA?5?$AAc?$AAo?$AAp?$AAy?$AA?5?$AAN?$AAo?$AAt?$AAi@|
  02584		 |$LN176@Device_Pro|
  02584	00000000	 DCD         |??_C@_1IK@IEONPHHN@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAT@|
  02588		 |$LN177@Device_Pro|
  02588	00000000	 DCD         |??_C@_1HK@JEKPKAL@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT@|
  0258c		 |$LN178@Device_Pro|
  0258c	00000000	 DCD         |??_C@_1GE@CGEACPAE@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAR@|
  02590		 |$LN179@Device_Pro|
  02590	00000000	 DCD         |??_C@_1HK@NCIOKFCA@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT@|
  02594		 |$LN180@Device_Pro|
  02594	002a0414	 DCD         0x2a0414
  02598		 |$LN181@Device_Pro|
  02598	00000000	 DCD         |??_C@_1EO@IBCBFGIA@?$AAU?$AAF?$AAN?$AAP?$AAD?$AAD?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAN?$AAo?$AAt?$AA?5?$AAa?$AAn?$AA?5?$AAB?$AA?9?$AAT?$AAy?$AAp?$AAe?$AA?5?$AAc?$AAo?$AAn?$AAn?$AAe@|
  0259c		 |$LN182@Device_Pro|
  0259c	00000000	 DCD         |??_C@_1EA@BCOEILHF@?$AAU?$AAF?$AAN?$AAP?$AAD?$AAD?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAB?$AA?9?$AAT?$AAy?$AAp?$AAe?$AA?5?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  025a0		 |$LN183@Device_Pro|
  025a0	00000000	 DCD         |??_C@_1GK@EDHBDMMN@?$AAU?$AAF?$AAN?$AAP?$AAD?$AAD?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAa?$AAl?$AAu?$AAe?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs@|
  025a4		 |$LN184@Device_Pro|
  025a4	00000000	 DCD         |??_C@_1DM@GBENJPGN@?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?2?$AAB?$AAu?$AAi?$AAl?$AAt?$AAI?$AAn?$AA?2?$AAM?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?2?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?$AA@|
  025a8		 |$LN185@Device_Pro|
  025a8	00000000	 DCD         |??_C@_1M@CKAHONI@?$AAB?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  025ac		 |$LN186@Device_Pro|
  025ac	00000000	 DCD         |??_C@_1FK@DCFOIEJO@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAO?$AAp?$AAe?$AAn?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAK?$AAe?$AAy?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ@|
  025b0		 |$LN187@Device_Pro|
  025b0	00000000	 DCD         |??_C@_1GI@LNPMHKIJ@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAs?$AA?5?$AAU?$AAS?$AAB?$AA_?$AAR?$AAE?$AAQ?$AAU?$AAE?$AAS@|
  025b4		 |$LN188@Device_Pro|
  025b4	00000000	 DCD         |??_C@_1EE@LDJOACEP@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN@|
  025b8		 |$LN189@Device_Pro|
  025b8	00000000	 DCD         |??_C@_1GM@PBFKHCGD@?$AAI?$AAn?$AA?5?$AAE?$AAP?$AA0?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAI?$AAN?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?4?$AA?5?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5@|
  025bc		 |$LN190@Device_Pro|
  025bc	00000000	 DCD         |??_C@_1CA@HLDCJJFC@?$AAS?$AAe?$AAt?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  025c0		 |$LN191@Device_Pro|
  025c0	00000000	 DCD         |??_C@_1BM@CMOKIKNH@?$AAC?$AAS?$AAR?$AA0?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  025c4		 |$LN192@Device_Pro|
  025c4	00000000	 DCD         |??_C@_1BG@GEGFJNAH@?$AAS?$AAe?$AAt?$AAu?$AAp?$AAE?$AAn?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  025c8		 |$LN168@Device_Pro|
  025c8		 |$LN155@Device_Pro|
	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T49960| DCD	|$LN5@SetEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M49957|

; 236  : 	return EventModify(h,EVENT_SET);

  00010	e3a01003	 mov         r1, #3
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 237  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M49958|

			 ENDP  ; |SetEvent|

	EXPORT	|??_C@_1DA@IKAAHPOB@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KA@EOODGEBF@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAx?$AA?3?$AAT?$AAo?$AAt?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1PA@EPNPIOGC@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAx?$AA?3?$AAR?$AAX?$AAD?$AAM?$AAA?$AA?5?$AAc?$AAo?$AAu?$AAn?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JC@LMDOEDI@?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAe?$AAv?$AAe?$AAn?$AA?5?$AAt?$AAh?$AAo?$AAu?$AAg?$AAh?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5?$AAl?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@GOMJMJEO@?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?5?$AA?$CF?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAt?$AAu?$AAp?$AA?5?$AAy@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@DJGBGNGE@?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAX?$AA?3?$AA?5?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@PIBDKLHF@?$AAO?$AAv?$AAe?$AAr?$AAr?$AAu?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@IMFCNEOO@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAX?$AA?3?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$DN@| [ DATA ] ; `string'
	IMPORT	|memcpy|
	IMPORT	|LeaveCriticalSection|
	IMPORT	|EnterCriticalSection|

  00070			 AREA	 |.pdata|, PDATA
|$T50020| DCD	|$LN72@Device_Pro@2|
	DCD	0xc0032e05
|$T50022| DCD	|$LN62@Device_Pro@2|
	DCD	0x40000f02
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbfn\pdd.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@IKAAHPOB@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "_", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "E", 0x0, "P", 0x0, "x", 0x0, "_"
	DCB	0x0, "R", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KA@EOODGEBF@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAx?$AA?3?$AAT?$AAo?$AAt?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "E", 0x0, "P", 0x0, "x", 0x0, "_", 0x0, "R"
	DCB	0x0, "x", 0x0, ":", 0x0, "T", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "t", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, ",", 0x0, " ", 0x0, "r", 0x0, "x", 0x0, "c", 0x0, "o"
	DCB	0x0, "u", 0x0, "n", 0x0, "t", 0x0, "(", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, ",", 0x0, " ", 0x0, "p", 0x0, "B", 0x0, "u"
	DCB	0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, "F", 0x0, "I", 0x0, "F", 0x0, "O", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1PA@EPNPIOGC@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAx?$AA?3?$AAR?$AAX?$AAD?$AAM?$AAA?$AA?5?$AAc?$AAo?$AAu?$AAn?$AAt@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "E", 0x0, "P", 0x0, "x", 0x0, "_", 0x0, "R"
	DCB	0x0, "x", 0x0, ":", 0x0, "R", 0x0, "X", 0x0, "D", 0x0, "M"
	DCB	0x0, "A", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "u", 0x0, "n"
	DCB	0x0, "t", 0x0, ":", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, ",", 0x0, "c"
	DCB	0x0, "u", 0x0, "r", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ")", 0x0, ",", 0x0, "p", 0x0, "v", 0x0, "B"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, ","
	DCB	0x0, "c", 0x0, "b", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "d", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, ","
	DCB	0x0, "c", 0x0, "b", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, ",", 0x0, "p", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JC@LMDOEDI@?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAe?$AAv?$AAe?$AAn?$AA?5?$AAt?$AAh?$AAo?$AAu?$AAg?$AAh?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5?$AAl?$AAa@| DCB "P"
	DCB	0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, " ", 0x0, "F", 0x0, "I", 0x0, "F", 0x0, "O", 0x0, " "
	DCB	0x0, "e", 0x0, "v", 0x0, "e", 0x0, "n", 0x0, " ", 0x0, "t"
	DCB	0x0, "h", 0x0, "o", 0x0, "u", 0x0, "g", 0x0, "h", 0x0, " "
	DCB	0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "l"
	DCB	0x0, "a", 0x0, "r", 0x0, "g", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "t", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, " ", 0x0, "m"
	DCB	0x0, "a", 0x0, "x", 0x0, "p", 0x0, "a", 0x0, "c", 0x0, "k"
	DCB	0x0, "e", 0x0, "t", 0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, " ", 0x0, "(", 0x0, "r", 0x0, "x", 0x0, "c"
	DCB	0x0, "o", 0x0, "u", 0x0, "n", 0x0, "t", 0x0, "[", 0x0, "%"
	DCB	0x0, "d", 0x0, "]", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@GOMJMJEO@?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?5?$AA?$CF?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAt?$AAu?$AAp?$AA?5?$AAy@| DCB "E"
	DCB	0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "f"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "c", 0x0, "h", 0x0, "a"
	DCB	0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "s", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "p", 0x0, " "
	DCB	0x0, "y", 0x0, "e", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@DJGBGNGE@?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAX?$AA?3?$AA?5?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@| DCB "!"
	DCB	0x0, "!", 0x0, "!", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_", 0x0, "P", 0x0, "r"
	DCB	0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, "E"
	DCB	0x0, "P", 0x0, "x", 0x0, "_", 0x0, "R", 0x0, "X", 0x0, ":"
	DCB	0x0, " ", 0x0, " ", 0x0, "p", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "i", 0x0, "s", 0x0, " ", 0x0, "N", 0x0, "U", 0x0, "L"
	DCB	0x0, "L", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@PIBDKLHF@?$AAO?$AAv?$AAe?$AAr?$AAr?$AAu?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "v", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "n"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@IMFCNEOO@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAX?$AA?3?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$DN@| DCB "+"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "_", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "E", 0x0, "P", 0x0, "x", 0x0, "_"
	DCB	0x0, "R", 0x0, "X", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "n"
	DCB	0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, "=", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  0002c			 AREA	 |.xdata|, DATA
|$T50018| DCD	0x1
	DCD	|$LN66@Device_Pro@2|
	DCD	|$LN67@Device_Pro@2|
	DCD	|$LN62@Device_Pro@2|
	DCD	|$LN63@Device_Pro@2|
; Function compile flags: /Odtp

  025c8			 AREA	 |.text|, CODE, ARM

  025c8	00000000	 DCD         |__C_specific_handler|
  025cc	00000000	 DCD         |$T50018|

  025d0		 |Device_ProcessEPx_RX| PROC

; 1823 : {

  025d0		 |$LN72@Device_Pro@2|
  025d0	e1a0c00d	 mov         r12, sp
  025d4	e92d0003	 stmdb       sp!, {r0, r1}
  025d8	e92d5800	 stmdb       sp!, {r11, r12, lr}
  025dc	e28db00c	 add         r11, sp, #0xC
  025e0	e24dd0a8	 sub         sp, sp, #0xA8
  025e4		 |$LN70@Device_Pro@2|

; 1824 :     DWORD rc = ERROR_SUCCESS;

  025e4	e3a03000	 mov         r3, #0
  025e8	e50b30a0	 str         r3, [r11, #-0xA0]

; 1825 :     PHSMUSB_T pUSBContext =(PHSMUSB_T) pHSMUSBContext;

  025ec	e59b3000	 ldr         r3, [r11]
  025f0	e50b3090	 str         r3, [r11, #-0x90]

; 1826 :     PCSP_MUSB_CSR_REGS pCsrRegs = pUSBContext->pUsbCsrRegs;

  025f4	e51b3090	 ldr         r3, [r11, #-0x90]
  025f8	e283301c	 add         r3, r3, #0x1C
  025fc	e5933000	 ldr         r3, [r3]
  02600	e50b30a4	 str         r3, [r11, #-0xA4]

; 1827 :     MUsbFnPdd_t *pPdd = pUSBContext->pContext[DEVICE_CONTEXT];

  02604	e51b3090	 ldr         r3, [r11, #-0x90]
  02608	e2833010	 add         r3, r3, #0x10
  0260c	e5933000	 ldr         r3, [r3]
  02610	e50b308c	 str         r3, [r11, #-0x8C]

; 1828 :     UINT16 csrVal;
; 1829 :     MUsbFnEp_t *pEP = &pPdd->ep[endpoint];

  02614	e51b308c	 ldr         r3, [r11, #-0x8C]
  02618	e28310ac	 add         r1, r3, #0xAC
  0261c	e59b2004	 ldr         r2, [r11, #4]
  02620	e3a03034	 mov         r3, #0x34
  02624	e0030392	 mul         r3, r2, r3
  02628	e0813003	 add         r3, r1, r3
  0262c	e50b3094	 str         r3, [r11, #-0x94]

; 1830 :     UINT16 rxcount;
; 1831 :     STransfer *pTransfer = pEP->pTransfer;

  02630	e51b3094	 ldr         r3, [r11, #-0x94]
  02634	e2833020	 add         r3, r3, #0x20
  02638	e5933000	 ldr         r3, [r3]
  0263c	e50b3098	 str         r3, [r11, #-0x98]

; 1832 :     
; 1833 :     DEBUGMSG(ZONE_FUNCTION, (L"+Device_ProcessEPx_RX: endpoint=%d\r\n", endpoint));

  02640	e59f3c58	 ldr         r3, [pc, #0xC58]
  02644	e5933440	 ldr         r3, [r3, #0x440]
  02648	e3130a01	 tst         r3, #1, 20
  0264c	0a000011	 beq         |$LN29@Device_Pro@2|
  02650	e59f3c48	 ldr         r3, [pc, #0xC48]
  02654	e5933440	 ldr         r3, [r3, #0x440]
  02658	e3130801	 tst         r3, #1, 16
  0265c	0a000005	 beq         |$LN27@Device_Pro@2|
  02660	e59b1004	 ldr         r1, [r11, #4]
  02664	e59f0c54	 ldr         r0, [pc, #0xC54]
  02668	eb000000	 bl          CeLogMsg
  0266c	e3a03001	 mov         r3, #1
  02670	e50b3054	 str         r3, [r11, #-0x54]
  02674	ea000004	 b           |$LN28@Device_Pro@2|
  02678		 |$LN27@Device_Pro@2|
  02678	e59b1004	 ldr         r1, [r11, #4]
  0267c	e59f0c3c	 ldr         r0, [pc, #0xC3C]
  02680	eb000000	 bl          NKDbgPrintfW
  02684	e3a03000	 mov         r3, #0
  02688	e50b3054	 str         r3, [r11, #-0x54]
  0268c		 |$LN28@Device_Pro@2|
  0268c	e3a03001	 mov         r3, #1
  02690	e50b3050	 str         r3, [r11, #-0x50]
  02694	ea000001	 b           |$LN30@Device_Pro@2|
  02698		 |$LN29@Device_Pro@2|
  02698	e3a03000	 mov         r3, #0
  0269c	e50b3050	 str         r3, [r11, #-0x50]
  026a0		 |$LN30@Device_Pro@2|

; 1834 :     csrVal = INREG16(&pCsrRegs->ep[endpoint].RxCSR);

  026a0	e59b1004	 ldr         r1, [r11, #4]
  026a4	e3a03010	 mov         r3, #0x10
  026a8	e0020391	 mul         r2, r1, r3
  026ac	e51b30a4	 ldr         r3, [r11, #-0xA4]
  026b0	e0833002	 add         r3, r3, r2
  026b4	e2833006	 add         r3, r3, #6
  026b8	e1d330b0	 ldrh        r3, [r3]
  026bc	e14b39bc	 strh        r3, [r11, #-0x9C]

; 1835 :     rxcount = INREG16(&pCsrRegs->ep[endpoint].Count.RxCount);

  026c0	e59b1004	 ldr         r1, [r11, #4]
  026c4	e3a03010	 mov         r3, #0x10
  026c8	e0020391	 mul         r2, r1, r3
  026cc	e51b30a4	 ldr         r3, [r11, #-0xA4]
  026d0	e0833002	 add         r3, r3, r2
  026d4	e2833008	 add         r3, r3, #8
  026d8	e1d330b0	 ldrh        r3, [r3]
  026dc	e14b38b8	 strh        r3, [r11, #-0x88]

; 1836 : 
; 1837 :     
; 1838 :     if (csrVal & RXCSR_P_SENTSTALL)

  026e0	e15b39bc	 ldrh        r3, [r11, #-0x9C]
  026e4	e3130040	 tst         r3, #0x40
  026e8	0a00002e	 beq         |$LN24@Device_Pro@2|

; 1839 :     {
; 1840 :         // MUSB finished sending STALL 
; 1841 :         // clear SENTSTALL 
; 1842 :         DEBUGMSG(1, (TEXT("Stall\r\n")));

  026ec	e59f3bac	 ldr         r3, [pc, #0xBAC]
  026f0	e5933440	 ldr         r3, [r3, #0x440]
  026f4	e3130801	 tst         r3, #1, 16
  026f8	0a000004	 beq         |$LN31@Device_Pro@2|
  026fc	e59f0bb8	 ldr         r0, [pc, #0xBB8]
  02700	eb000000	 bl          CeLogMsg
  02704	e3a03001	 mov         r3, #1
  02708	e50b304c	 str         r3, [r11, #-0x4C]
  0270c	ea000003	 b           |$LN32@Device_Pro@2|
  02710		 |$LN31@Device_Pro@2|
  02710	e59f0ba4	 ldr         r0, [pc, #0xBA4]
  02714	eb000000	 bl          NKDbgPrintfW
  02718	e3a03000	 mov         r3, #0
  0271c	e50b304c	 str         r3, [r11, #-0x4C]
  02720		 |$LN32@Device_Pro@2|

; 1843 :         if (pEP != NULL)

  02720	e51b3094	 ldr         r3, [r11, #-0x94]
  02724	e3530000	 cmp         r3, #0
  02728	0a000003	 beq         |$LN23@Device_Pro@2|

; 1844 :            pEP->stalled = FALSE;

  0272c	e51b3094	 ldr         r3, [r11, #-0x94]
  02730	e2832014	 add         r2, r3, #0x14
  02734	e3a03000	 mov         r3, #0
  02738	e5823000	 str         r3, [r2]
  0273c		 |$LN23@Device_Pro@2|

; 1845 :         CLRREG16(&pCsrRegs->ep[endpoint].RxCSR, RXCSR_P_SENTSTALL);

  0273c	e59b1004	 ldr         r1, [r11, #4]
  02740	e3a03010	 mov         r3, #0x10
  02744	e0020391	 mul         r2, r1, r3
  02748	e51b30a4	 ldr         r3, [r11, #-0xA4]
  0274c	e0833002	 add         r3, r3, r2
  02750	e2833006	 add         r3, r3, #6
  02754	e1d330b0	 ldrh        r3, [r3]
  02758	e1a02003	 mov         r2, r3
  0275c	e3e03040	 mvn         r3, #0x40
  02760	e0023003	 and         r3, r2, r3
  02764	e1a00803	 mov         r0, r3, lsl #16
  02768	e1a00820	 mov         r0, r0, lsr #16
  0276c	e59b1004	 ldr         r1, [r11, #4]
  02770	e3a03010	 mov         r3, #0x10
  02774	e0020391	 mul         r2, r1, r3
  02778	e51b30a4	 ldr         r3, [r11, #-0xA4]
  0277c	e0833002	 add         r3, r3, r2
  02780	e2833006	 add         r3, r3, #6
  02784	e1c300b0	 strh        r0, [r3]

; 1846 :         csrVal = INREG16(&pCsrRegs->ep[endpoint].RxCSR);

  02788	e59b1004	 ldr         r1, [r11, #4]
  0278c	e3a03010	 mov         r3, #0x10
  02790	e0020391	 mul         r2, r1, r3
  02794	e51b30a4	 ldr         r3, [r11, #-0xA4]
  02798	e0833002	 add         r3, r3, r2
  0279c	e2833006	 add         r3, r3, #6
  027a0	e1d330b0	 ldrh        r3, [r3]
  027a4	e14b39bc	 strh        r3, [r11, #-0x9C]
  027a8		 |$LN24@Device_Pro@2|

; 1847 :     }
; 1848 :     
; 1849 :     if (csrVal & RXCSR_P_OVERRUN)

  027a8	e15b39bc	 ldrh        r3, [r11, #-0x9C]
  027ac	e3130004	 tst         r3, #4
  027b0	0a00004a	 beq         |$LN22@Device_Pro@2|

; 1850 :     {
; 1851 :         // clear OVERRUN 
; 1852 :         DEBUGMSG(ZONE_ERROR, (TEXT("Overrun\r\n")));

  027b4	e59f3ae4	 ldr         r3, [pc, #0xAE4]
  027b8	e5933440	 ldr         r3, [r3, #0x440]
  027bc	e3130001	 tst         r3, #1
  027c0	0a00000f	 beq         |$LN35@Device_Pro@2|
  027c4	e59f3ad4	 ldr         r3, [pc, #0xAD4]
  027c8	e5933440	 ldr         r3, [r3, #0x440]
  027cc	e3130801	 tst         r3, #1, 16
  027d0	0a000004	 beq         |$LN33@Device_Pro@2|
  027d4	e59f0adc	 ldr         r0, [pc, #0xADC]
  027d8	eb000000	 bl          CeLogMsg
  027dc	e3a03001	 mov         r3, #1
  027e0	e50b3048	 str         r3, [r11, #-0x48]
  027e4	ea000003	 b           |$LN34@Device_Pro@2|
  027e8		 |$LN33@Device_Pro@2|
  027e8	e59f0ac8	 ldr         r0, [pc, #0xAC8]
  027ec	eb000000	 bl          NKDbgPrintfW
  027f0	e3a03000	 mov         r3, #0
  027f4	e50b3048	 str         r3, [r11, #-0x48]
  027f8		 |$LN34@Device_Pro@2|
  027f8	e3a03001	 mov         r3, #1
  027fc	e50b3044	 str         r3, [r11, #-0x44]
  02800	ea000001	 b           |$LN36@Device_Pro@2|
  02804		 |$LN35@Device_Pro@2|
  02804	e3a03000	 mov         r3, #0
  02808	e50b3044	 str         r3, [r11, #-0x44]
  0280c		 |$LN36@Device_Pro@2|

; 1853 :         CLRREG16(&pCsrRegs->ep[endpoint].RxCSR, RXCSR_P_OVERRUN);

  0280c	e59b1004	 ldr         r1, [r11, #4]
  02810	e3a03010	 mov         r3, #0x10
  02814	e0020391	 mul         r2, r1, r3
  02818	e51b30a4	 ldr         r3, [r11, #-0xA4]
  0281c	e0833002	 add         r3, r3, r2
  02820	e2833006	 add         r3, r3, #6
  02824	e1d330b0	 ldrh        r3, [r3]
  02828	e1a02003	 mov         r2, r3
  0282c	e3e03004	 mvn         r3, #4
  02830	e0023003	 and         r3, r2, r3
  02834	e1a00803	 mov         r0, r3, lsl #16
  02838	e1a00820	 mov         r0, r0, lsr #16
  0283c	e59b1004	 ldr         r1, [r11, #4]
  02840	e3a03010	 mov         r3, #0x10
  02844	e0020391	 mul         r2, r1, r3
  02848	e51b30a4	 ldr         r3, [r11, #-0xA4]
  0284c	e0833002	 add         r3, r3, r2
  02850	e2833006	 add         r3, r3, #6
  02854	e1c300b0	 strh        r0, [r3]

; 1854 :         if (pTransfer != NULL)

  02858	e51b3098	 ldr         r3, [r11, #-0x98]
  0285c	e3530000	 cmp         r3, #0
  02860	0a000011	 beq         |$LN21@Device_Pro@2|

; 1855 :         {
; 1856 :            pTransfer->dwUsbError = UFN_CLIENT_BUFFER_ERROR;

  02864	e51b3098	 ldr         r3, [r11, #-0x98]
  02868	e2832014	 add         r2, r3, #0x14
  0286c	e3a03f41	 mov         r3, #0x41, 30
  02870	e5823000	 str         r3, [r2]

; 1857 :            pEP->pTransfer = NULL;

  02874	e51b3094	 ldr         r3, [r11, #-0x94]
  02878	e2832020	 add         r2, r3, #0x20
  0287c	e3a03000	 mov         r3, #0
  02880	e5823000	 str         r3, [r2]

; 1858 :            pPdd->pfnNotify(
; 1859 :                pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer);

  02884	e51b2098	 ldr         r2, [r11, #-0x98]
  02888	e3a01064	 mov         r1, #0x64
  0288c	e51b308c	 ldr         r3, [r11, #-0x8C]
  02890	e2833024	 add         r3, r3, #0x24
  02894	e5930000	 ldr         r0, [r3]
  02898	e51b308c	 ldr         r3, [r11, #-0x8C]
  0289c	e2833028	 add         r3, r3, #0x28
  028a0	e5933000	 ldr         r3, [r3]
  028a4	e1a0e00f	 mov         lr, pc
  028a8	e12fff13	 bx          r3
  028ac		 |$LN21@Device_Pro@2|

; 1860 :         }
; 1861 : 
; 1862 :         pPdd->intr_rx_data_avail &=(1 << endpoint);

  028ac	e51b308c	 ldr         r3, [r11, #-0x8C]
  028b0	e2831e3f	 add         r1, r3, #0x3F, 28
  028b4	e59b2004	 ldr         r2, [r11, #4]
  028b8	e3a03001	 mov         r3, #1
  028bc	e1a02213	 mov         r2, r3, lsl r2
  028c0	e5913000	 ldr         r3, [r1]
  028c4	e0032002	 and         r2, r3, r2
  028c8	e51b308c	 ldr         r3, [r11, #-0x8C]
  028cc	e2833e3f	 add         r3, r3, #0x3F, 28
  028d0	e5832000	 str         r2, [r3]

; 1863 :         return ERROR_SUCCESS;

  028d4	e3a03000	 mov         r3, #0
  028d8	e50b3078	 str         r3, [r11, #-0x78]
  028dc	ea000265	 b           |$LN25@Device_Pro@2|
  028e0		 |$LN22@Device_Pro@2|

; 1864 :     }
; 1865 :     
; 1866 :     if (!(csrVal & RXCSR_P_RXPKTRDY))

  028e0	e15b39bc	 ldrh        r3, [r11, #-0x9C]
  028e4	e3130001	 tst         r3, #1
  028e8	1a000002	 bne         |$LN20@Device_Pro@2|

; 1867 :     {
; 1868 :         return ERROR_SUCCESS;

  028ec	e3a03000	 mov         r3, #0
  028f0	e50b3078	 str         r3, [r11, #-0x78]
  028f4	ea00025f	 b           |$LN25@Device_Pro@2|
  028f8		 |$LN20@Device_Pro@2|

; 1869 :     }
; 1870 :     
; 1871 :     if (pTransfer == NULL) 

  028f8	e51b3098	 ldr         r3, [r11, #-0x98]
  028fc	e3530000	 cmp         r3, #0
  02900	1a000022	 bne         |$LN19@Device_Pro@2|

; 1872 :     {
; 1873 :         DEBUGMSG(ZONE_ERROR, (L"!!! Device_ProcessEPx_RX:  pTransfer is NULL\r\n"));

  02904	e59f3994	 ldr         r3, [pc, #0x994]
  02908	e5933440	 ldr         r3, [r3, #0x440]
  0290c	e3130001	 tst         r3, #1
  02910	0a00000f	 beq         |$LN39@Device_Pro@2|
  02914	e59f3984	 ldr         r3, [pc, #0x984]
  02918	e5933440	 ldr         r3, [r3, #0x440]
  0291c	e3130801	 tst         r3, #1, 16
  02920	0a000004	 beq         |$LN37@Device_Pro@2|
  02924	e59f0988	 ldr         r0, [pc, #0x988]
  02928	eb000000	 bl          CeLogMsg
  0292c	e3a03001	 mov         r3, #1
  02930	e50b3040	 str         r3, [r11, #-0x40]
  02934	ea000003	 b           |$LN38@Device_Pro@2|
  02938		 |$LN37@Device_Pro@2|
  02938	e59f0974	 ldr         r0, [pc, #0x974]
  0293c	eb000000	 bl          NKDbgPrintfW
  02940	e3a03000	 mov         r3, #0
  02944	e50b3040	 str         r3, [r11, #-0x40]
  02948		 |$LN38@Device_Pro@2|
  02948	e3a03001	 mov         r3, #1
  0294c	e50b303c	 str         r3, [r11, #-0x3C]
  02950	ea000001	 b           |$LN40@Device_Pro@2|
  02954		 |$LN39@Device_Pro@2|
  02954	e3a03000	 mov         r3, #0
  02958	e50b303c	 str         r3, [r11, #-0x3C]
  0295c		 |$LN40@Device_Pro@2|

; 1874 :         pPdd->intr_rx_data_avail |= (1 << endpoint);

  0295c	e51b308c	 ldr         r3, [r11, #-0x8C]
  02960	e2831e3f	 add         r1, r3, #0x3F, 28
  02964	e59b2004	 ldr         r2, [r11, #4]
  02968	e3a03001	 mov         r3, #1
  0296c	e1a02213	 mov         r2, r3, lsl r2
  02970	e5913000	 ldr         r3, [r1]
  02974	e1832002	 orr         r2, r3, r2
  02978	e51b308c	 ldr         r3, [r11, #-0x8C]
  0297c	e2833e3f	 add         r3, r3, #0x3F, 28
  02980	e5832000	 str         r2, [r3]

; 1875 :         return ERROR_SUCCESS;

  02984	e3a03000	 mov         r3, #0
  02988	e50b3078	 str         r3, [r11, #-0x78]
  0298c	ea000239	 b           |$LN25@Device_Pro@2|
  02990		 |$LN19@Device_Pro@2|

; 1876 :     }
; 1877 : 
; 1878 :     if (rxcount > pPdd->ep[endpoint].maxPacketSize)

  02990	e15b38b8	 ldrh        r3, [r11, #-0x88]
  02994	e1a00003	 mov         r0, r3
  02998	e51b308c	 ldr         r3, [r11, #-0x8C]
  0299c	e28310ac	 add         r1, r3, #0xAC
  029a0	e59b2004	 ldr         r2, [r11, #4]
  029a4	e3a03034	 mov         r3, #0x34
  029a8	e0030392	 mul         r3, r2, r3
  029ac	e0813003	 add         r3, r1, r3
  029b0	e1d330b0	 ldrh        r3, [r3]
  029b4	e1500003	 cmp         r0, r3
  029b8	da000001	 ble         |$LN18@Device_Pro@2|

; 1879 :     {
; 1880 :         rxcount = 0;

  029bc	e3a03000	 mov         r3, #0
  029c0	e14b38b8	 strh        r3, [r11, #-0x88]
  029c4		 |$LN18@Device_Pro@2|
  029c4		 |$LN66@Device_Pro@2|

; 1881 :     }
; 1882 : 
; 1883 :     __try
; 1884 :     {
; 1885 :         UCHAR *pBuffer;
; 1886 : 
; 1887 :         if ((pPdd->ep[endpoint].dmaEnabled) &&
; 1888 :             ((pTransfer->cbBuffer - pTransfer->cbTransferred) > pEP->maxPacketSize) &&
; 1889 :             pPdd->bRXIsUsingUsbDMA)

  029c4	e51b308c	 ldr         r3, [r11, #-0x8C]
  029c8	e28310ac	 add         r1, r3, #0xAC
  029cc	e59b2004	 ldr         r2, [r11, #4]
  029d0	e3a03034	 mov         r3, #0x34
  029d4	e0030392	 mul         r3, r2, r3
  029d8	e0813003	 add         r3, r1, r3
  029dc	e2833010	 add         r3, r3, #0x10
  029e0	e5933000	 ldr         r3, [r3]
  029e4	e3530000	 cmp         r3, #0
  029e8	0a00016f	 beq         |$LN16@Device_Pro@2|
  029ec	e51b3098	 ldr         r3, [r11, #-0x98]
  029f0	e283200c	 add         r2, r3, #0xC
  029f4	e51b3098	 ldr         r3, [r11, #-0x98]
  029f8	e2833010	 add         r3, r3, #0x10
  029fc	e5922000	 ldr         r2, [r2]
  02a00	e5933000	 ldr         r3, [r3]
  02a04	e0422003	 sub         r2, r2, r3
  02a08	e51b3094	 ldr         r3, [r11, #-0x94]
  02a0c	e1d330b0	 ldrh        r3, [r3]
  02a10	e1520003	 cmp         r2, r3
  02a14	9a000164	 bls         |$LN16@Device_Pro@2|
  02a18	e51b308c	 ldr         r3, [r11, #-0x8C]
  02a1c	e2833b01	 add         r3, r3, #1, 22
  02a20	e2833038	 add         r3, r3, #0x38
  02a24	e5933000	 ldr         r3, [r3]
  02a28	e3530000	 cmp         r3, #0
  02a2c	0a00015e	 beq         |$LN16@Device_Pro@2|

; 1890 :         {
; 1891 :             UCHAR channel = MUSB_RX_DMA_CHN;

  02a30	e3a03001	 mov         r3, #1
  02a34	e54b307c	 strb        r3, [r11, #-0x7C]

; 1892 :             DWORD size;
; 1893 : 
; 1894 :             pBuffer =(UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;

  02a38	e51b3098	 ldr         r3, [r11, #-0x98]
  02a3c	e2832004	 add         r2, r3, #4
  02a40	e51b3098	 ldr         r3, [r11, #-0x98]
  02a44	e2833010	 add         r3, r3, #0x10
  02a48	e5922000	 ldr         r2, [r2]
  02a4c	e5933000	 ldr         r3, [r3]
  02a50	e0823003	 add         r3, r2, r3
  02a54	e50b3084	 str         r3, [r11, #-0x84]

; 1895 :             EnterCriticalSection(&pPdd->dmaCS);

  02a58	e51b308c	 ldr         r3, [r11, #-0x8C]
  02a5c	e2830034	 add         r0, r3, #0x34
  02a60	eb000000	 bl          EnterCriticalSection

; 1896 :             if (INREG32(&pUSBContext->pUsbDmaRegs->dma[channel].Addr) == 0x00)

  02a64	e51b3090	 ldr         r3, [r11, #-0x90]
  02a68	e2833024	 add         r3, r3, #0x24
  02a6c	e5933000	 ldr         r3, [r3]
  02a70	e2831004	 add         r1, r3, #4
  02a74	e55b307c	 ldrb        r3, [r11, #-0x7C]
  02a78	e1a02003	 mov         r2, r3
  02a7c	e3a03010	 mov         r3, #0x10
  02a80	e0030392	 mul         r3, r2, r3
  02a84	e0813003	 add         r3, r1, r3
  02a88	e2833004	 add         r3, r3, #4
  02a8c	e5933000	 ldr         r3, [r3]
  02a90	e3530000	 cmp         r3, #0
  02a94	1a00004b	 bne         |$LN15@Device_Pro@2|

; 1897 :             {
; 1898 :                 if (pPdd->rx0DmaState == MODE_DMA)

  02a98	e51b308c	 ldr         r3, [r11, #-0x8C]
  02a9c	e283301c	 add         r3, r3, #0x1C
  02aa0	e5933000	 ldr         r3, [r3]
  02aa4	e3530000	 cmp         r3, #0
  02aa8	1a00002a	 bne         |$LN14@Device_Pro@2|

; 1899 :                 {
; 1900 :                     DEBUGMSG(ZONE_INFO, (L"EP %d for channel %d not setup yet\r\n", endpoint, channel));

  02aac	e59f37ec	 ldr         r3, [pc, #0x7EC]
  02ab0	e5933440	 ldr         r3, [r3, #0x440]
  02ab4	e3130b01	 tst         r3, #1, 22
  02ab8	0a000013	 beq         |$LN43@Device_Pro@2|
  02abc	e59f37dc	 ldr         r3, [pc, #0x7DC]
  02ac0	e5933440	 ldr         r3, [r3, #0x440]
  02ac4	e3130801	 tst         r3, #1, 16
  02ac8	0a000006	 beq         |$LN41@Device_Pro@2|
  02acc	e55b207c	 ldrb        r2, [r11, #-0x7C]
  02ad0	e59b1004	 ldr         r1, [r11, #4]
  02ad4	e59f07d4	 ldr         r0, [pc, #0x7D4]
  02ad8	eb000000	 bl          CeLogMsg
  02adc	e3a03001	 mov         r3, #1
  02ae0	e50b3038	 str         r3, [r11, #-0x38]
  02ae4	ea000005	 b           |$LN42@Device_Pro@2|
  02ae8		 |$LN41@Device_Pro@2|
  02ae8	e55b207c	 ldrb        r2, [r11, #-0x7C]
  02aec	e59b1004	 ldr         r1, [r11, #4]
  02af0	e59f07b8	 ldr         r0, [pc, #0x7B8]
  02af4	eb000000	 bl          NKDbgPrintfW
  02af8	e3a03000	 mov         r3, #0
  02afc	e50b3038	 str         r3, [r11, #-0x38]
  02b00		 |$LN42@Device_Pro@2|
  02b00	e3a03001	 mov         r3, #1
  02b04	e50b3034	 str         r3, [r11, #-0x34]
  02b08	ea000001	 b           |$LN44@Device_Pro@2|
  02b0c		 |$LN43@Device_Pro@2|
  02b0c	e3a03000	 mov         r3, #0
  02b10	e50b3034	 str         r3, [r11, #-0x34]
  02b14		 |$LN44@Device_Pro@2|

; 1901 :                     size = 0;

  02b14	e3a03000	 mov         r3, #0
  02b18	e50b3080	 str         r3, [r11, #-0x80]

; 1902 :                     pPdd->intr_rx_data_avail |= (1 << endpoint);

  02b1c	e51b308c	 ldr         r3, [r11, #-0x8C]
  02b20	e2831e3f	 add         r1, r3, #0x3F, 28
  02b24	e59b2004	 ldr         r2, [r11, #4]
  02b28	e3a03001	 mov         r3, #1
  02b2c	e1a02213	 mov         r2, r3, lsl r2
  02b30	e5913000	 ldr         r3, [r1]
  02b34	e1832002	 orr         r2, r3, r2
  02b38	e51b308c	 ldr         r3, [r11, #-0x8C]
  02b3c	e2833e3f	 add         r3, r3, #0x3F, 28
  02b40	e5832000	 str         r2, [r3]

; 1903 :                     LeaveCriticalSection(&pPdd->dmaCS);

  02b44	e51b308c	 ldr         r3, [r11, #-0x8C]
  02b48	e2830034	 add         r0, r3, #0x34
  02b4c	eb000000	 bl          LeaveCriticalSection

; 1904 :                     goto cleanUp;

  02b50	ea0001b0	 b           |$cleanUp$48442|

; 1905 :                 }
; 1906 :                 else

  02b54	ea00001b	 b           |$LN13@Device_Pro@2|
  02b58		 |$LN14@Device_Pro@2|

; 1907 :                 {
; 1908 :                     DEBUGMSG(ZONE_DVFS, (TEXT("Process FIFO even though size larger than maxpacket size (rxcount[%d])\r\n"),
; 1909 :                         rxcount));

  02b58	e59f3740	 ldr         r3, [pc, #0x740]
  02b5c	e5933440	 ldr         r3, [r3, #0x440]
  02b60	e3130b02	 tst         r3, #2, 22
  02b64	0a000011	 beq         |$LN47@Device_Pro@2|
  02b68	e59f3730	 ldr         r3, [pc, #0x730]
  02b6c	e5933440	 ldr         r3, [r3, #0x440]
  02b70	e3130801	 tst         r3, #1, 16
  02b74	0a000005	 beq         |$LN45@Device_Pro@2|
  02b78	e15b18b8	 ldrh        r1, [r11, #-0x88]
  02b7c	e59f0728	 ldr         r0, [pc, #0x728]
  02b80	eb000000	 bl          CeLogMsg
  02b84	e3a03001	 mov         r3, #1
  02b88	e50b3030	 str         r3, [r11, #-0x30]
  02b8c	ea000004	 b           |$LN46@Device_Pro@2|
  02b90		 |$LN45@Device_Pro@2|
  02b90	e15b18b8	 ldrh        r1, [r11, #-0x88]
  02b94	e59f0710	 ldr         r0, [pc, #0x710]
  02b98	eb000000	 bl          NKDbgPrintfW
  02b9c	e3a03000	 mov         r3, #0
  02ba0	e50b3030	 str         r3, [r11, #-0x30]
  02ba4		 |$LN46@Device_Pro@2|
  02ba4	e3a03001	 mov         r3, #1
  02ba8	e50b302c	 str         r3, [r11, #-0x2C]
  02bac	ea000001	 b           |$LN48@Device_Pro@2|
  02bb0		 |$LN47@Device_Pro@2|
  02bb0	e3a03000	 mov         r3, #0
  02bb4	e50b302c	 str         r3, [r11, #-0x2C]
  02bb8		 |$LN48@Device_Pro@2|

; 1910 :                     LeaveCriticalSection(&pPdd->dmaCS);

  02bb8	e51b308c	 ldr         r3, [r11, #-0x8C]
  02bbc	e2830034	 add         r0, r3, #0x34
  02bc0	eb000000	 bl          LeaveCriticalSection

; 1911 :                     goto PROCESS_FIFO;

  02bc4	ea0000f8	 b           |$PROCESS_FIFO$48446|
  02bc8		 |$LN13@Device_Pro@2|
  02bc8		 |$LN15@Device_Pro@2|

; 1912 :                 }
; 1913 :             }
; 1914 : 
; 1915 :             size = pEP->dwRxDMASize - INREG32(&pUSBContext->pUsbDmaRegs->dma[channel].Count);

  02bc8	e51b3094	 ldr         r3, [r11, #-0x94]
  02bcc	e2830024	 add         r0, r3, #0x24
  02bd0	e51b3090	 ldr         r3, [r11, #-0x90]
  02bd4	e2833024	 add         r3, r3, #0x24
  02bd8	e5933000	 ldr         r3, [r3]
  02bdc	e2831004	 add         r1, r3, #4
  02be0	e55b307c	 ldrb        r3, [r11, #-0x7C]
  02be4	e1a02003	 mov         r2, r3
  02be8	e3a03010	 mov         r3, #0x10
  02bec	e0030392	 mul         r3, r2, r3
  02bf0	e0813003	 add         r3, r1, r3
  02bf4	e2833008	 add         r3, r3, #8
  02bf8	e5932000	 ldr         r2, [r3]
  02bfc	e5903000	 ldr         r3, [r0]
  02c00	e0433002	 sub         r3, r3, r2
  02c04	e50b3080	 str         r3, [r11, #-0x80]

; 1916 : 
; 1917 :             LeaveCriticalSection(&pPdd->dmaCS);

  02c08	e51b308c	 ldr         r3, [r11, #-0x8C]
  02c0c	e2830034	 add         r0, r3, #0x34
  02c10	eb000000	 bl          LeaveCriticalSection

; 1918 : 
; 1919 :             DEBUGMSG(ZONE_FUNCTION, (L"Device_ProcessEPx_Rx:RXDMA count:%d,start(0x%x),cur(0x%x),pvBuffer(0x%x),cbTransferred(%d),cbBuffer(%d),pBuffer(0x%x)\r\n",
; 1920 :                 size, pPdd->paDmaRx0Buffer, INREG32(&pUSBContext->pUsbDmaRegs->dma[channel].Addr), pTransfer->pvBuffer, pTransfer->cbTransferred, pTransfer->cbBuffer, pBuffer));

  02c14	e59f3684	 ldr         r3, [pc, #0x684]
  02c18	e5933440	 ldr         r3, [r3, #0x440]
  02c1c	e3130a01	 tst         r3, #1, 20
  02c20	0a000049	 beq         |$LN51@Device_Pro@2|
  02c24	e59f3674	 ldr         r3, [pc, #0x674]
  02c28	e5933440	 ldr         r3, [r3, #0x440]
  02c2c	e3130801	 tst         r3, #1, 16
  02c30	0a000021	 beq         |$LN49@Device_Pro@2|
  02c34	e51b3084	 ldr         r3, [r11, #-0x84]
  02c38	e58d300c	 str         r3, [sp, #0xC]
  02c3c	e51b3098	 ldr         r3, [r11, #-0x98]
  02c40	e283300c	 add         r3, r3, #0xC
  02c44	e5933000	 ldr         r3, [r3]
  02c48	e58d3008	 str         r3, [sp, #8]
  02c4c	e51b3098	 ldr         r3, [r11, #-0x98]
  02c50	e2833010	 add         r3, r3, #0x10
  02c54	e5933000	 ldr         r3, [r3]
  02c58	e58d3004	 str         r3, [sp, #4]
  02c5c	e51b3098	 ldr         r3, [r11, #-0x98]
  02c60	e2833004	 add         r3, r3, #4
  02c64	e5933000	 ldr         r3, [r3]
  02c68	e58d3000	 str         r3, [sp]
  02c6c	e51b3090	 ldr         r3, [r11, #-0x90]
  02c70	e2833024	 add         r3, r3, #0x24
  02c74	e5933000	 ldr         r3, [r3]
  02c78	e2831004	 add         r1, r3, #4
  02c7c	e55b307c	 ldrb        r3, [r11, #-0x7C]
  02c80	e1a02003	 mov         r2, r3
  02c84	e3a03010	 mov         r3, #0x10
  02c88	e0030392	 mul         r3, r2, r3
  02c8c	e0813003	 add         r3, r1, r3
  02c90	e2833004	 add         r3, r3, #4
  02c94	e5933000	 ldr         r3, [r3]
  02c98	e51b208c	 ldr         r2, [r11, #-0x8C]
  02c9c	e282204c	 add         r2, r2, #0x4C
  02ca0	e5922000	 ldr         r2, [r2]
  02ca4	e51b1080	 ldr         r1, [r11, #-0x80]
  02ca8	e59f05f8	 ldr         r0, [pc, #0x5F8]
  02cac	eb000000	 bl          CeLogMsg
  02cb0	e3a03001	 mov         r3, #1
  02cb4	e50b3028	 str         r3, [r11, #-0x28]
  02cb8	ea000020	 b           |$LN50@Device_Pro@2|
  02cbc		 |$LN49@Device_Pro@2|
  02cbc	e51b3084	 ldr         r3, [r11, #-0x84]
  02cc0	e58d300c	 str         r3, [sp, #0xC]
  02cc4	e51b3098	 ldr         r3, [r11, #-0x98]
  02cc8	e283300c	 add         r3, r3, #0xC
  02ccc	e5933000	 ldr         r3, [r3]
  02cd0	e58d3008	 str         r3, [sp, #8]
  02cd4	e51b3098	 ldr         r3, [r11, #-0x98]
  02cd8	e2833010	 add         r3, r3, #0x10
  02cdc	e5933000	 ldr         r3, [r3]
  02ce0	e58d3004	 str         r3, [sp, #4]
  02ce4	e51b3098	 ldr         r3, [r11, #-0x98]
  02ce8	e2833004	 add         r3, r3, #4
  02cec	e5933000	 ldr         r3, [r3]
  02cf0	e58d3000	 str         r3, [sp]
  02cf4	e51b3090	 ldr         r3, [r11, #-0x90]
  02cf8	e2833024	 add         r3, r3, #0x24
  02cfc	e5933000	 ldr         r3, [r3]
  02d00	e2831004	 add         r1, r3, #4
  02d04	e55b307c	 ldrb        r3, [r11, #-0x7C]
  02d08	e1a02003	 mov         r2, r3
  02d0c	e3a03010	 mov         r3, #0x10
  02d10	e0030392	 mul         r3, r2, r3
  02d14	e0813003	 add         r3, r1, r3
  02d18	e2833004	 add         r3, r3, #4
  02d1c	e5933000	 ldr         r3, [r3]
  02d20	e51b208c	 ldr         r2, [r11, #-0x8C]
  02d24	e282204c	 add         r2, r2, #0x4C
  02d28	e5922000	 ldr         r2, [r2]
  02d2c	e51b1080	 ldr         r1, [r11, #-0x80]
  02d30	e59f0570	 ldr         r0, [pc, #0x570]
  02d34	eb000000	 bl          NKDbgPrintfW
  02d38	e3a03000	 mov         r3, #0
  02d3c	e50b3028	 str         r3, [r11, #-0x28]
  02d40		 |$LN50@Device_Pro@2|
  02d40	e3a03001	 mov         r3, #1
  02d44	e50b3024	 str         r3, [r11, #-0x24]
  02d48	ea000001	 b           |$LN52@Device_Pro@2|
  02d4c		 |$LN51@Device_Pro@2|
  02d4c	e3a03000	 mov         r3, #0
  02d50	e50b3024	 str         r3, [r11, #-0x24]
  02d54		 |$LN52@Device_Pro@2|

; 1921 : 
; 1922 : 
; 1923 :             if ((pTransfer->cbTransferred + size + rxcount) < pEP->maxPacketSize)

  02d54	e51b3098	 ldr         r3, [r11, #-0x98]
  02d58	e2833010	 add         r3, r3, #0x10
  02d5c	e5932000	 ldr         r2, [r3]
  02d60	e51b3080	 ldr         r3, [r11, #-0x80]
  02d64	e0822003	 add         r2, r2, r3
  02d68	e15b38b8	 ldrh        r3, [r11, #-0x88]
  02d6c	e0822003	 add         r2, r2, r3
  02d70	e51b3094	 ldr         r3, [r11, #-0x94]
  02d74	e1d330b0	 ldrh        r3, [r3]
  02d78	e1520003	 cmp         r2, r3
  02d7c	2a00001c	 bcs         |$LN12@Device_Pro@2|

; 1924 :             {
; 1925 :                 CLRREG16(&pCsrRegs->ep[endpoint].RxCSR, RXCSR_P_AUTOCLEAR | RXCSR_P_DMAREQENAB | RXCSR_P_DMAREQMODE);

  02d80	e59b1004	 ldr         r1, [r11, #4]
  02d84	e3a03010	 mov         r3, #0x10
  02d88	e0020391	 mul         r2, r1, r3
  02d8c	e51b30a4	 ldr         r3, [r11, #-0xA4]
  02d90	e0833002	 add         r3, r3, r2
  02d94	e2833006	 add         r3, r3, #6
  02d98	e1d330b0	 ldrh        r3, [r3]
  02d9c	e1a02003	 mov         r2, r3
  02da0	e3e03b2a	 mvn         r3, #0x2A, 22
  02da4	e0023003	 and         r3, r2, r3
  02da8	e1a00803	 mov         r0, r3, lsl #16
  02dac	e1a00820	 mov         r0, r0, lsr #16
  02db0	e59b1004	 ldr         r1, [r11, #4]
  02db4	e3a03010	 mov         r3, #0x10
  02db8	e0020391	 mul         r2, r1, r3
  02dbc	e51b30a4	 ldr         r3, [r11, #-0xA4]
  02dc0	e0833002	 add         r3, r3, r2
  02dc4	e2833006	 add         r3, r3, #6
  02dc8	e1c300b0	 strh        r0, [r3]

; 1926 : 
; 1927 :                 EnterCriticalSection(&pPdd->dmaCS);

  02dcc	e51b308c	 ldr         r3, [r11, #-0x8C]
  02dd0	e2830034	 add         r0, r3, #0x34
  02dd4	eb000000	 bl          EnterCriticalSection

; 1928 :                 pPdd->bDMAForRX = FALSE;

  02dd8	e51b308c	 ldr         r3, [r11, #-0x8C]
  02ddc	e2832e43	 add         r2, r3, #0x43, 28
  02de0	e3a03000	 mov         r3, #0
  02de4	e5823000	 str         r3, [r2]

; 1929 :                 LeaveCriticalSection(&pPdd->dmaCS);

  02de8	e51b308c	 ldr         r3, [r11, #-0x8C]
  02dec	e2830034	 add         r0, r3, #0x34
  02df0	eb000000	 bl          LeaveCriticalSection
  02df4		 |$LN12@Device_Pro@2|

; 1930 :             }
; 1931 : 
; 1932 :             if ((size > 0) && (pTransfer->dwBufferPhysicalAddress == 0))

  02df4	e51b3080	 ldr         r3, [r11, #-0x80]
  02df8	e3530000	 cmp         r3, #0
  02dfc	9a00000a	 bls         |$LN11@Device_Pro@2|
  02e00	e51b3098	 ldr         r3, [r11, #-0x98]
  02e04	e2833008	 add         r3, r3, #8
  02e08	e5933000	 ldr         r3, [r3]
  02e0c	e3530000	 cmp         r3, #0
  02e10	1a000005	 bne         |$LN11@Device_Pro@2|

; 1933 :                 memcpy(pBuffer, pPdd->pDmaRx0Buffer , size);

  02e14	e51b2080	 ldr         r2, [r11, #-0x80]
  02e18	e51b308c	 ldr         r3, [r11, #-0x8C]
  02e1c	e2833048	 add         r3, r3, #0x48
  02e20	e5931000	 ldr         r1, [r3]
  02e24	e51b0084	 ldr         r0, [r11, #-0x84]
  02e28	eb000000	 bl          memcpy
  02e2c		 |$LN11@Device_Pro@2|

; 1934 : 
; 1935 :             // Update buffer and clear zero length flag
; 1936 :             pTransfer->cbTransferred += size;

  02e2c	e51b3098	 ldr         r3, [r11, #-0x98]
  02e30	e2833010	 add         r3, r3, #0x10
  02e34	e5932000	 ldr         r2, [r3]
  02e38	e51b3080	 ldr         r3, [r11, #-0x80]
  02e3c	e0822003	 add         r2, r2, r3
  02e40	e51b3098	 ldr         r3, [r11, #-0x98]
  02e44	e2833010	 add         r3, r3, #0x10
  02e48	e5832000	 str         r2, [r3]

; 1937 : 
; 1938 :             ResetDMAChannel(pPdd, channel);

  02e4c	e55b107c	 ldrb        r1, [r11, #-0x7C]
  02e50	e51b008c	 ldr         r0, [r11, #-0x8C]
  02e54	eb000000	 bl          ResetDMAChannel

; 1939 :             EnterCriticalSection(&pPdd->csDVFS);

  02e58	e51b308c	 ldr         r3, [r11, #-0x8C]
  02e5c	e2833b01	 add         r3, r3, #1, 22
  02e60	e2830014	 add         r0, r3, #0x14
  02e64	eb000000	 bl          EnterCriticalSection

; 1940 :             if ((pPdd->ep[endpoint].dmaDVFSstate == DVFS_PREDMA) && pPdd->ep[endpoint].dmaEnabled)

  02e68	e51b308c	 ldr         r3, [r11, #-0x8C]
  02e6c	e28310ac	 add         r1, r3, #0xAC
  02e70	e59b2004	 ldr         r2, [r11, #4]
  02e74	e3a03034	 mov         r3, #0x34
  02e78	e0030392	 mul         r3, r2, r3
  02e7c	e0813003	 add         r3, r1, r3
  02e80	e283302c	 add         r3, r3, #0x2C
  02e84	e5d33000	 ldrb        r3, [r3]
  02e88	e3530001	 cmp         r3, #1
  02e8c	1a000016	 bne         |$LN10@Device_Pro@2|
  02e90	e51b308c	 ldr         r3, [r11, #-0x8C]
  02e94	e28310ac	 add         r1, r3, #0xAC
  02e98	e59b2004	 ldr         r2, [r11, #4]
  02e9c	e3a03034	 mov         r3, #0x34
  02ea0	e0030392	 mul         r3, r2, r3
  02ea4	e0813003	 add         r3, r1, r3
  02ea8	e2833010	 add         r3, r3, #0x10
  02eac	e5933000	 ldr         r3, [r3]
  02eb0	e3530000	 cmp         r3, #0
  02eb4	0a00000c	 beq         |$LN10@Device_Pro@2|

; 1941 :             {
; 1942 :                 pPdd->ep[endpoint].dmaDVFSstate = DVFS_POSTDMA;

  02eb8	e51b308c	 ldr         r3, [r11, #-0x8C]
  02ebc	e28310ac	 add         r1, r3, #0xAC
  02ec0	e59b2004	 ldr         r2, [r11, #4]
  02ec4	e3a03034	 mov         r3, #0x34
  02ec8	e0030392	 mul         r3, r2, r3
  02ecc	e0813003	 add         r3, r1, r3
  02ed0	e283202c	 add         r2, r3, #0x2C
  02ed4	e3a03002	 mov         r3, #2
  02ed8	e5c23000	 strb        r3, [r2]

; 1943 :                 PostDmaDeactivation(pPdd, endpoint, RX_TRANSFER);

  02edc	e3a02001	 mov         r2, #1
  02ee0	e59b1004	 ldr         r1, [r11, #4]
  02ee4	e51b008c	 ldr         r0, [r11, #-0x8C]
  02ee8	eb000000	 bl          PostDmaDeactivation
  02eec		 |$LN10@Device_Pro@2|

; 1944 :             }
; 1945 :             LeaveCriticalSection(&pPdd->csDVFS);

  02eec	e51b308c	 ldr         r3, [r11, #-0x8C]
  02ef0	e2833b01	 add         r3, r3, #1, 22
  02ef4	e2830014	 add         r0, r3, #0x14
  02ef8	eb000000	 bl          LeaveCriticalSection

; 1946 : 
; 1947 : 
; 1948 :             DEBUGMSG(ZONE_FUNCTION, (L"Device_ProcessEPx_Rx:Tot transfer(%d), rxcount(%d), pBuffer to ReadFIFO(0x%x)\r\n",
; 1949 :                 pTransfer->cbTransferred, rxcount, ((UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred)));

  02efc	e59f339c	 ldr         r3, [pc, #0x39C]
  02f00	e5933440	 ldr         r3, [r3, #0x440]
  02f04	e3130a01	 tst         r3, #1, 20
  02f08	0a000025	 beq         |$LN55@Device_Pro@2|
  02f0c	e59f338c	 ldr         r3, [pc, #0x38C]
  02f10	e5933440	 ldr         r3, [r3, #0x440]
  02f14	e3130801	 tst         r3, #1, 16
  02f18	0a00000f	 beq         |$LN53@Device_Pro@2|
  02f1c	e51b3098	 ldr         r3, [r11, #-0x98]
  02f20	e2832004	 add         r2, r3, #4
  02f24	e51b3098	 ldr         r3, [r11, #-0x98]
  02f28	e2833010	 add         r3, r3, #0x10
  02f2c	e5922000	 ldr         r2, [r2]
  02f30	e5933000	 ldr         r3, [r3]
  02f34	e0823003	 add         r3, r2, r3
  02f38	e15b28b8	 ldrh        r2, [r11, #-0x88]
  02f3c	e51b1098	 ldr         r1, [r11, #-0x98]
  02f40	e2811010	 add         r1, r1, #0x10
  02f44	e5911000	 ldr         r1, [r1]
  02f48	e59f0354	 ldr         r0, [pc, #0x354]
  02f4c	eb000000	 bl          CeLogMsg
  02f50	e3a03001	 mov         r3, #1
  02f54	e50b3020	 str         r3, [r11, #-0x20]
  02f58	ea00000e	 b           |$LN54@Device_Pro@2|
  02f5c		 |$LN53@Device_Pro@2|
  02f5c	e51b3098	 ldr         r3, [r11, #-0x98]
  02f60	e2832004	 add         r2, r3, #4
  02f64	e51b3098	 ldr         r3, [r11, #-0x98]
  02f68	e2833010	 add         r3, r3, #0x10
  02f6c	e5922000	 ldr         r2, [r2]
  02f70	e5933000	 ldr         r3, [r3]
  02f74	e0823003	 add         r3, r2, r3
  02f78	e15b28b8	 ldrh        r2, [r11, #-0x88]
  02f7c	e51b1098	 ldr         r1, [r11, #-0x98]
  02f80	e2811010	 add         r1, r1, #0x10
  02f84	e5911000	 ldr         r1, [r1]
  02f88	e59f0314	 ldr         r0, [pc, #0x314]
  02f8c	eb000000	 bl          NKDbgPrintfW
  02f90	e3a03000	 mov         r3, #0
  02f94	e50b3020	 str         r3, [r11, #-0x20]
  02f98		 |$LN54@Device_Pro@2|
  02f98	e3a03001	 mov         r3, #1
  02f9c	e50b301c	 str         r3, [r11, #-0x1C]
  02fa0	ea000001	 b           |$LN56@Device_Pro@2|
  02fa4		 |$LN55@Device_Pro@2|
  02fa4	e3a03000	 mov         r3, #0
  02fa8	e50b301c	 str         r3, [r11, #-0x1C]
  02fac		 |$LN56@Device_Pro@2|
  02fac		 |$LN16@Device_Pro@2|
  02fac		 |$PROCESS_FIFO$48446|

; 1950 :         }
; 1951 : 
; 1952 : PROCESS_FIFO:
; 1953 : 
; 1954 :         if(rxcount== pEP->maxPacketSize)

  02fac	e15b38b8	 ldrh        r3, [r11, #-0x88]
  02fb0	e1a02003	 mov         r2, r3
  02fb4	e51b3094	 ldr         r3, [r11, #-0x94]
  02fb8	e1d330b0	 ldrh        r3, [r3]
  02fbc	e1520003	 cmp         r2, r3
  02fc0	1a000009	 bne         |$LN9@Device_Pro@2|

; 1955 :         {
; 1956 :             EnterCriticalSection(&pPdd->dmaCS);

  02fc4	e51b308c	 ldr         r3, [r11, #-0x8C]
  02fc8	e2830034	 add         r0, r3, #0x34
  02fcc	eb000000	 bl          EnterCriticalSection

; 1957 :             pPdd->bDMAForRX = TRUE;

  02fd0	e51b308c	 ldr         r3, [r11, #-0x8C]
  02fd4	e2832e43	 add         r2, r3, #0x43, 28
  02fd8	e3a03001	 mov         r3, #1
  02fdc	e5823000	 str         r3, [r2]

; 1958 :             LeaveCriticalSection(&pPdd->dmaCS);

  02fe0	e51b308c	 ldr         r3, [r11, #-0x8C]
  02fe4	e2830034	 add         r0, r3, #0x34
  02fe8	eb000000	 bl          LeaveCriticalSection
  02fec		 |$LN9@Device_Pro@2|

; 1959 :         }
; 1960 : 
; 1961 :         if((pTransfer->cbTransferred + rxcount) <= pTransfer->cbBuffer)

  02fec	e51b3098	 ldr         r3, [r11, #-0x98]
  02ff0	e2833010	 add         r3, r3, #0x10
  02ff4	e15b28b8	 ldrh        r2, [r11, #-0x88]
  02ff8	e5933000	 ldr         r3, [r3]
  02ffc	e0832002	 add         r2, r3, r2
  03000	e51b3098	 ldr         r3, [r11, #-0x98]
  03004	e283300c	 add         r3, r3, #0xC
  03008	e5933000	 ldr         r3, [r3]
  0300c	e1520003	 cmp         r2, r3
  03010	8a000024	 bhi         |$LN8@Device_Pro@2|

; 1962 :         {
; 1963 :             if (rxcount)

  03014	e15b38b8	 ldrh        r3, [r11, #-0x88]
  03018	e3530000	 cmp         r3, #0
  0301c	0a000015	 beq         |$LN7@Device_Pro@2|

; 1964 :             {
; 1965 :                 pBuffer =(UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;

  03020	e51b3098	 ldr         r3, [r11, #-0x98]
  03024	e2832004	 add         r2, r3, #4
  03028	e51b3098	 ldr         r3, [r11, #-0x98]
  0302c	e2833010	 add         r3, r3, #0x10
  03030	e5922000	 ldr         r2, [r2]
  03034	e5933000	 ldr         r3, [r3]
  03038	e0823003	 add         r3, r2, r3
  0303c	e50b3084	 str         r3, [r11, #-0x84]

; 1966 :             ReadFIFO(pPdd, (UCHAR)endpoint, pBuffer, (DWORD)rxcount);

  03040	e15b38b8	 ldrh        r3, [r11, #-0x88]
  03044	e51b2084	 ldr         r2, [r11, #-0x84]
  03048	e59b1004	 ldr         r1, [r11, #4]
  0304c	e20110ff	 and         r1, r1, #0xFF
  03050	e51b008c	 ldr         r0, [r11, #-0x8C]
  03054	eb000000	 bl          ReadFIFO

; 1967 : 
; 1968 :                 // We transfered some data
; 1969 :                 pTransfer->cbTransferred += rxcount;

  03058	e51b3098	 ldr         r3, [r11, #-0x98]
  0305c	e2833010	 add         r3, r3, #0x10
  03060	e15b28b8	 ldrh        r2, [r11, #-0x88]
  03064	e5933000	 ldr         r3, [r3]
  03068	e0832002	 add         r2, r3, r2
  0306c	e51b3098	 ldr         r3, [r11, #-0x98]
  03070	e2833010	 add         r3, r3, #0x10
  03074	e5832000	 str         r2, [r3]
  03078		 |$LN7@Device_Pro@2|

; 1970 :             }
; 1971 : 
; 1972 :             // clear intr_rx_data_avail EP bit
; 1973 :             pPdd->intr_rx_data_avail &= ~(1 << endpoint);

  03078	e51b308c	 ldr         r3, [r11, #-0x8C]
  0307c	e2831e3f	 add         r1, r3, #0x3F, 28
  03080	e59b2004	 ldr         r2, [r11, #4]
  03084	e3a03001	 mov         r3, #1
  03088	e1a03213	 mov         r3, r3, lsl r2
  0308c	e1e02003	 mvn         r2, r3
  03090	e5913000	 ldr         r3, [r1]
  03094	e0032002	 and         r2, r3, r2
  03098	e51b308c	 ldr         r3, [r11, #-0x8C]
  0309c	e2833e3f	 add         r3, r3, #0x3F, 28
  030a0	e5832000	 str         r2, [r3]
  030a4	ea00000c	 b           |$LN6@Device_Pro@2|
  030a8		 |$LN8@Device_Pro@2|

; 1974 :         }
; 1975 :         else if (rxcount)

  030a8	e15b38b8	 ldrh        r3, [r11, #-0x88]
  030ac	e3530000	 cmp         r3, #0
  030b0	0a000009	 beq         |$LN5@Device_Pro@2|

; 1976 :         {
; 1977 :             // set intr_rx_data_avail EP bit
; 1978 :             pPdd->intr_rx_data_avail |= (1 << endpoint);

  030b4	e51b308c	 ldr         r3, [r11, #-0x8C]
  030b8	e2831e3f	 add         r1, r3, #0x3F, 28
  030bc	e59b2004	 ldr         r2, [r11, #4]
  030c0	e3a03001	 mov         r3, #1
  030c4	e1a02213	 mov         r2, r3, lsl r2
  030c8	e5913000	 ldr         r3, [r1]
  030cc	e1832002	 orr         r2, r3, r2
  030d0	e51b308c	 ldr         r3, [r11, #-0x8C]
  030d4	e2833e3f	 add         r3, r3, #0x3F, 28
  030d8	e5832000	 str         r2, [r3]
  030dc		 |$LN5@Device_Pro@2|
  030dc		 |$LN6@Device_Pro@2|

; 1979 :         }
; 1980 : 
; 1981 :         // Is this end of transfer?
; 1982 :         // I guess the system doesn't send out the zero-length packet from host.
; 1983 :         if ((rxcount < pPdd->ep[endpoint].maxPacketSize) ||(rxcount == 0) || (pTransfer->cbTransferred == pTransfer->cbBuffer))

  030dc	e15b38b8	 ldrh        r3, [r11, #-0x88]
  030e0	e1a00003	 mov         r0, r3
  030e4	e51b308c	 ldr         r3, [r11, #-0x8C]
  030e8	e28310ac	 add         r1, r3, #0xAC
  030ec	e59b2004	 ldr         r2, [r11, #4]
  030f0	e3a03034	 mov         r3, #0x34
  030f4	e0030392	 mul         r3, r2, r3
  030f8	e0813003	 add         r3, r1, r3
  030fc	e1d330b0	 ldrh        r3, [r3]
  03100	e1500003	 cmp         r0, r3
  03104	ba00000a	 blt         |$LN3@Device_Pro@2|
  03108	e15b38b8	 ldrh        r3, [r11, #-0x88]
  0310c	e3530000	 cmp         r3, #0
  03110	0a000007	 beq         |$LN3@Device_Pro@2|
  03114	e51b3098	 ldr         r3, [r11, #-0x98]
  03118	e2832010	 add         r2, r3, #0x10
  0311c	e51b3098	 ldr         r3, [r11, #-0x98]
  03120	e283300c	 add         r3, r3, #0xC
  03124	e5922000	 ldr         r2, [r2]
  03128	e5933000	 ldr         r3, [r3]
  0312c	e1520003	 cmp         r2, r3
  03130	1a000029	 bne         |$LN4@Device_Pro@2|
  03134		 |$LN3@Device_Pro@2|

; 1984 :         {
; 1985 :             // received last block
; 1986 :             DEBUGMSG(DEBUG_PRT_TRANS, (L"Device_ProcessEPx_RX: call pfnNotify COMPLETE endp:%d +\r\n", endpoint));
; 1987 : 
; 1988 :             // May need to add Critical Section for DVFS
; 1989 :             pTransfer->dwUsbError = UFN_NO_ERROR;

  03134	e51b3098	 ldr         r3, [r11, #-0x98]
  03138	e2832014	 add         r2, r3, #0x14
  0313c	e3a03000	 mov         r3, #0
  03140	e5823000	 str         r3, [r2]

; 1990 :             pEP->pTransfer = NULL;

  03144	e51b3094	 ldr         r3, [r11, #-0x94]
  03148	e2832020	 add         r2, r3, #0x20
  0314c	e3a03000	 mov         r3, #0
  03150	e5823000	 str         r3, [r2]

; 1991 :             //memdump((uchar *)pTransfer->pvBuffer, (unsigned short) pTransfer->cbTransferred, 0);
; 1992 :             // Don't clear RXCSR_P_PXPKTRDY here, let the next time it start to do that.
; 1993 :             if ((pPdd->ep[endpoint].dmaEnabled) && (pPdd->rx0DmaState == MODE_FIFO))

  03154	e51b308c	 ldr         r3, [r11, #-0x8C]
  03158	e28310ac	 add         r1, r3, #0xAC
  0315c	e59b2004	 ldr         r2, [r11, #4]
  03160	e3a03034	 mov         r3, #0x34
  03164	e0030392	 mul         r3, r2, r3
  03168	e0813003	 add         r3, r1, r3
  0316c	e2833010	 add         r3, r3, #0x10
  03170	e5933000	 ldr         r3, [r3]
  03174	e3530000	 cmp         r3, #0
  03178	0a000008	 beq         |$LN2@Device_Pro@2|
  0317c	e51b308c	 ldr         r3, [r11, #-0x8C]
  03180	e283301c	 add         r3, r3, #0x1C
  03184	e5933000	 ldr         r3, [r3]
  03188	e3530001	 cmp         r3, #1
  0318c	1a000003	 bne         |$LN2@Device_Pro@2|

; 1994 :                 pPdd->rx0DmaState = MODE_DMA;

  03190	e51b308c	 ldr         r3, [r11, #-0x8C]
  03194	e283201c	 add         r2, r3, #0x1C
  03198	e3a03000	 mov         r3, #0
  0319c	e5823000	 str         r3, [r2]
  031a0		 |$LN2@Device_Pro@2|

; 1995 : 
; 1996 :             pEP->bLastRxUsedDMA = FALSE;

  031a0	e51b3094	 ldr         r3, [r11, #-0x94]
  031a4	e2832030	 add         r2, r3, #0x30
  031a8	e3a03000	 mov         r3, #0
  031ac	e5823000	 str         r3, [r2]

; 1997 : 
; 1998 :             pPdd->pfnNotify(
; 1999 :                 pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer);

  031b0	e51b2098	 ldr         r2, [r11, #-0x98]
  031b4	e3a01064	 mov         r1, #0x64
  031b8	e51b308c	 ldr         r3, [r11, #-0x8C]
  031bc	e2833024	 add         r3, r3, #0x24
  031c0	e5930000	 ldr         r0, [r3]
  031c4	e51b308c	 ldr         r3, [r11, #-0x8C]
  031c8	e2833028	 add         r3, r3, #0x28
  031cc	e5933000	 ldr         r3, [r3]
  031d0	e1a0e00f	 mov         lr, pc
  031d4	e12fff13	 bx          r3

; 2000 :             DEBUGMSG(DEBUG_PRT_TRANS, (L"Device_ProcessEPx_RX: call pfnNotify COMPLETE -\r\n"));
; 2001 :         }
; 2002 :         else

  031d8	ea000005	 b           |$LN1@Device_Pro@2|
  031dc		 |$LN4@Device_Pro@2|

; 2003 :         {
; 2004 :             rc = StartRxDmaTransfer(pPdd, endpoint);

  031dc	e59b1004	 ldr         r1, [r11, #4]
  031e0	e51b008c	 ldr         r0, [r11, #-0x8C]
  031e4	eb000000	 bl          StartRxDmaTransfer
  031e8	e50b0018	 str         r0, [r11, #-0x18]
  031ec	e51b3018	 ldr         r3, [r11, #-0x18]
  031f0	e50b30a0	 str         r3, [r11, #-0xA0]
  031f4		 |$LN1@Device_Pro@2|
  031f4		 |$LN67@Device_Pro@2|

; 2005 :         }
; 2006 :     }

  031f4	ea000004	 b           |$LN68@Device_Pro@2|
  031f8		 |$LN63@Device_Pro@2|

; 2008 :     {
; 2009 :         pTransfer->dwUsbError = UFN_CLIENT_BUFFER_ERROR;

  031f8	e51b3098	 ldr         r3, [r11, #-0x98]
  031fc	e2832014	 add         r2, r3, #0x14
  03200	e3a03f41	 mov         r3, #0x41, 30
  03204	e5823000	 str         r3, [r2]
  03208	eaffffff	 b           |$LN68@Device_Pro@2|
  0320c		 |$LN68@Device_Pro@2|

; 2010 :     }
; 2011 :     return ERROR_SUCCESS;

  0320c	e3a03000	 mov         r3, #0
  03210	e50b3078	 str         r3, [r11, #-0x78]
  03214	ea000017	 b           |$LN25@Device_Pro@2|
  03218		 |$cleanUp$48442|

; 2012 : 
; 2013 : cleanUp:
; 2014 : 
; 2015 :     DEBUGMSG(ZONE_FUNCTION, (L"-Device_ProcessEPx_RX\r\n"));

  03218	e59f3080	 ldr         r3, [pc, #0x80]
  0321c	e5933440	 ldr         r3, [r3, #0x440]
  03220	e3130a01	 tst         r3, #1, 20
  03224	0a00000f	 beq         |$LN59@Device_Pro@2|
  03228	e59f3070	 ldr         r3, [pc, #0x70]
  0322c	e5933440	 ldr         r3, [r3, #0x440]
  03230	e3130801	 tst         r3, #1, 16
  03234	0a000004	 beq         |$LN57@Device_Pro@2|
  03238	e59f005c	 ldr         r0, [pc, #0x5C]
  0323c	eb000000	 bl          CeLogMsg
  03240	e3a03001	 mov         r3, #1
  03244	e50b3014	 str         r3, [r11, #-0x14]
  03248	ea000003	 b           |$LN58@Device_Pro@2|
  0324c		 |$LN57@Device_Pro@2|
  0324c	e59f0048	 ldr         r0, [pc, #0x48]
  03250	eb000000	 bl          NKDbgPrintfW
  03254	e3a03000	 mov         r3, #0
  03258	e50b3014	 str         r3, [r11, #-0x14]
  0325c		 |$LN58@Device_Pro@2|
  0325c	e3a03001	 mov         r3, #1
  03260	e50b3010	 str         r3, [r11, #-0x10]
  03264	ea000001	 b           |$LN60@Device_Pro@2|
  03268		 |$LN59@Device_Pro@2|
  03268	e3a03000	 mov         r3, #0
  0326c	e50b3010	 str         r3, [r11, #-0x10]
  03270		 |$LN60@Device_Pro@2|

; 2016 : 
; 2017 :     return ERROR_SUCCESS;

  03270	e3a03000	 mov         r3, #0
  03274	e50b3078	 str         r3, [r11, #-0x78]
  03278		 |$LN25@Device_Pro@2|
  03278		 |$LN61@Device_Pro@2|

; 2018 : }

  03278	e51b0078	 ldr         r0, [r11, #-0x78]
  0327c	e24bd00c	 sub         sp, r11, #0xC
  03280	e89d6800	 ldmia       sp, {r11, sp, lr}
  03284	e12fff1e	 bx          lr

			 ENDP  ; |Device_ProcessEPx_RX|

  03288		 |$LN62@Device_Pro@2|
  03288		 |$LN71@Device_Pro@2|

; 2007 :     __except(EXCEPTION_EXECUTE_HANDLER)

  03288	e52de004	 str         lr, [sp, #-4]!
  0328c	e24dd010	 sub         sp, sp, #0x10
  03290		 |$LN65@Device_Pro@2|
  03290		 |$LN74@Device_Pro@2|
  03290	e3a00001	 mov         r0, #1
  03294		 |$LN64@Device_Pro@2|
  03294	e28dd010	 add         sp, sp, #0x10
  03298	e49df004	 ldr         pc, [sp], #4
  0329c		 |$LN76@Device_Pro@2|
  0329c		 |$LN77@Device_Pro@2|
  0329c	00000000	 DCD         |??_C@_1DA@IKAAHPOB@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  032a0		 |$LN78@Device_Pro@2|
  032a0	00000000	 DCD         |dpCurSettings|
  032a4		 |$LN79@Device_Pro@2|
  032a4	00000000	 DCD         |??_C@_1KA@EOODGEBF@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAx?$AA?3?$AAT?$AAo?$AAt?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  032a8		 |$LN80@Device_Pro@2|
  032a8	00000000	 DCD         |??_C@_1PA@EPNPIOGC@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAx?$AA?3?$AAR?$AAX?$AAD?$AAM?$AAA?$AA?5?$AAc?$AAo?$AAu?$AAn?$AAt@|
  032ac		 |$LN81@Device_Pro@2|
  032ac	00000000	 DCD         |??_C@_1JC@LMDOEDI@?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAe?$AAv?$AAe?$AAn?$AA?5?$AAt?$AAh?$AAo?$AAu?$AAg?$AAh?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5?$AAl?$AAa@|
  032b0		 |$LN82@Device_Pro@2|
  032b0	00000000	 DCD         |??_C@_1EK@GOMJMJEO@?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?5?$AA?$CF?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAt?$AAu?$AAp?$AA?5?$AAy@|
  032b4		 |$LN83@Device_Pro@2|
  032b4	00000000	 DCD         |??_C@_1FO@DJGBGNGE@?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAX?$AA?3?$AA?5?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@|
  032b8		 |$LN84@Device_Pro@2|
  032b8	00000000	 DCD         |??_C@_1BE@PIBDKLHF@?$AAO?$AAv?$AAe?$AAr?$AAr?$AAu?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  032bc		 |$LN85@Device_Pro@2|
  032bc	00000000	 DCD         |??_C@_1BA@CNFNHGLF@?$AAS?$AAt?$AAa?$AAl?$AAl?$AA?$AN?$AA?6?$AA?$AA@|
  032c0		 |$LN86@Device_Pro@2|
  032c0	00000000	 DCD         |??_C@_1EK@IMFCNEOO@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAX?$AA?3?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$DN@|
  032c4		 |$LN75@Device_Pro@2|
  032c4		 |$LN73@Device_Pro@2|
	EXPORT	|??_C@_1DC@JNNFMLIE@?$AA?9?$AAP?$AAo?$AAs?$AAt?$AAD?$AAm?$AAa?$AAD?$AAe?$AAa?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1NE@INOOHDEN@?$AA?$CK?$AA?$CK?$AA?$CK?$AAP?$AAo?$AAs?$AAt?$AAD?$AAm?$AAa?$AA?5?$AAD?$AAm?$AAa?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IC@HMENJINB@?$AA?$CK?$AA?$CK?$AA?$CK?$AAP?$AAo?$AAs?$AAt?$AAD?$AAm?$AAa?$AA?5?$AAf?$AAi?$AAn?$AAi?$AAs?$AAh?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAD?$AAm?$AAa?$AA?8?$AAs?$AA?5?$AAs?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@LMBAMPFN@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?$CD?$AA?$CD?$AA?$CD?$AAP?$AAo?$AAs?$AAt?$AAD?$AAm?$AAa?$AA?0?$AA?5?$AAn?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AAD?$AAm?$AAa?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@NHKFAELP@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?$CD?$AA?$CD?$AA?$CD?$AAP?$AAo?$AAs?$AAt?$AAD?$AAm?$AAa?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAo?$AAn?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JM@NKOACJGE@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@KOCODIMP@?$AA?$CL?$AAP?$AAo?$AAs?$AAt?$AAD?$AAm?$AAa?$AAD?$AAe?$AAa?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|InterlockedIncrement|
	IMPORT	|InterlockedDecrement|

  00080			 AREA	 |.pdata|, PDATA
|$T50066| DCD	|$LN26@PostDmaDea|
	DCD	0x4000f104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@JNNFMLIE@?$AA?9?$AAP?$AAo?$AAs?$AAt?$AAD?$AAm?$AAa?$AAD?$AAe?$AAa?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "P", 0x0, "o", 0x0, "s", 0x0, "t", 0x0, "D", 0x0, "m"
	DCB	0x0, "a", 0x0, "D", 0x0, "e", 0x0, "a", 0x0, "c", 0x0, "t"
	DCB	0x0, "i", 0x0, "v", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1NE@INOOHDEN@?$AA?$CK?$AA?$CK?$AA?$CK?$AAP?$AAo?$AAs?$AAt?$AAD?$AAm?$AAa?$AA?5?$AAD?$AAm?$AAa?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt@| DCB "*"
	DCB	0x0, "*", 0x0, "*", 0x0, "P", 0x0, "o", 0x0, "s", 0x0, "t"
	DCB	0x0, "D", 0x0, "m", 0x0, "a", 0x0, " ", 0x0, "D", 0x0, "m"
	DCB	0x0, "a", 0x0, "C", 0x0, "o", 0x0, "u", 0x0, "n", 0x0, "t"
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, " ", 0x0, "e"
	DCB	0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, " "
	DCB	0x0, "T", 0x0, "x", 0x0, "0", 0x0, "R", 0x0, "x", 0x0, "1"
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, " ", 0x0, "p"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ")", 0x0, " ", 0x0, "p", 0x0, "B", 0x0, "u"
	DCB	0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, " ", 0x0, "c"
	DCB	0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, " ", 0x0, "c"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@HMENJINB@?$AA?$CK?$AA?$CK?$AA?$CK?$AAP?$AAo?$AAs?$AAt?$AAD?$AAm?$AAa?$AA?5?$AAf?$AAi?$AAn?$AAi?$AAs?$AAh?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAD?$AAm?$AAa?$AA?8?$AAs?$AA?5?$AAs?$AAe@| DCB "*"
	DCB	0x0, "*", 0x0, "*", 0x0, "P", 0x0, "o", 0x0, "s", 0x0, "t"
	DCB	0x0, "D", 0x0, "m", 0x0, "a", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "n", 0x0, "i", 0x0, "s", 0x0, "h", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, " ", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "'", 0x0, "s", 0x0, " ", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, " ", 0x0, "h", 0x0, "D", 0x0, "V"
	DCB	0x0, "F", 0x0, "S", 0x0, "A", 0x0, "c", 0x0, "k", 0x0, "E"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "E"
	DCB	0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "T", 0x0, "x", 0x0, "R", 0x0, "x", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@LMBAMPFN@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?$CD?$AA?$CD?$AA?$CD?$AAP?$AAo?$AAs?$AAt?$AAD?$AAm?$AAa?$AA?0?$AA?5?$AAn?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AAD?$AAm?$AAa?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM@| DCB "*"
	DCB	0x0, "*", 0x0, "*", 0x0, "#", 0x0, "#", 0x0, "#", 0x0, "P"
	DCB	0x0, "o", 0x0, "s", 0x0, "t", 0x0, "D", 0x0, "m", 0x0, "a"
	DCB	0x0, ",", 0x0, " ", 0x0, "n", 0x0, "A", 0x0, "c", 0x0, "t"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, "D", 0x0, "m", 0x0, "a"
	DCB	0x0, "C", 0x0, "o", 0x0, "u", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "<", 0x0, " ", 0x0, "0", 0x0, " ", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@NHKFAELP@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?$CD?$AA?$CD?$AA?$CD?$AAP?$AAo?$AAs?$AAt?$AAD?$AAm?$AAa?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAo?$AAn?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "*"
	DCB	0x0, "*", 0x0, "*", 0x0, "#", 0x0, "#", 0x0, "#", 0x0, "P"
	DCB	0x0, "o", 0x0, "s", 0x0, "t", 0x0, "D", 0x0, "m", 0x0, "a"
	DCB	0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "E", 0x0, "P"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "E", 0x0, "B"
	DCB	0x0, "U", 0x0, "G", 0x0, "C", 0x0, "H", 0x0, "K", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, "t", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| DCB "U", 0x0
	DCB	"n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JM@NKOACJGE@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "C"
	DCB	0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N", 0x0, "_"
	DCB	0x0, "T", 0x0, "I", 0x0, "_", 0x0, "V", 0x0, "1", 0x0, "\\"
	DCB	0x0, "O", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, "3", 0x0, "5"
	DCB	0x0, "3", 0x0, "0", 0x0, "\\", 0x0, "M", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "\\", 0x0, "M", 0x0, "U", 0x0, "S", 0x0, "B"
	DCB	0x0, "F", 0x0, "N", 0x0, "\\", 0x0, ".", 0x0, "\\", 0x0, "p"
	DCB	0x0, "d", 0x0, "d", 0x0, ".", 0x0, "c", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@KOCODIMP@?$AA?$CL?$AAP?$AAo?$AAs?$AAt?$AAD?$AAm?$AAa?$AAD?$AAe?$AAa?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "P", 0x0, "o", 0x0, "s", 0x0, "t", 0x0, "D", 0x0, "m"
	DCB	0x0, "a", 0x0, "D", 0x0, "e", 0x0, "a", 0x0, "c", 0x0, "t"
	DCB	0x0, "i", 0x0, "v", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  032c4			 AREA	 |.text|, CODE, ARM

  032c4		 |PostDmaDeactivation| PROC

; 232  : {

  032c4		 |$LN26@PostDmaDea|
  032c4	e1a0c00d	 mov         r12, sp
  032c8	e92d0007	 stmdb       sp!, {r0 - r2}
  032cc	e92d5000	 stmdb       sp!, {r12, lr}
  032d0	e24dd05c	 sub         sp, sp, #0x5C
  032d4		 |$M50063|

; 233  : #ifdef DEBUG	
; 234  : 	MUsbFnEp_t *pEP = &pPdd->ep[endPoint];

  032d4	e59d3064	 ldr         r3, [sp, #0x64]
  032d8	e28310ac	 add         r1, r3, #0xAC
  032dc	e59d2068	 ldr         r2, [sp, #0x68]
  032e0	e3a03034	 mov         r3, #0x34
  032e4	e0030392	 mul         r3, r2, r3
  032e8	e0813003	 add         r3, r1, r3
  032ec	e58d3014	 str         r3, [sp, #0x14]

; 235  : 	STransfer *pTransfer = pEP->pTransfer;

  032f0	e59d3014	 ldr         r3, [sp, #0x14]
  032f4	e2833020	 add         r3, r3, #0x20
  032f8	e5933000	 ldr         r3, [r3]
  032fc	e58d3010	 str         r3, [sp, #0x10]

; 236  : #endif
; 237  : 
; 238  : 	UNREFERENCED_PARAMETER(endPoint);
; 239  : 	UNREFERENCED_PARAMETER(TxRx);
; 240  : 
; 241  :     DEBUGMSG(ZONE_FUNCTION, (
; 242  :         L"+PostDmaDeactivation\r\n"
; 243  :     ));

  03300	e59f335c	 ldr         r3, [pc, #0x35C]
  03304	e5933440	 ldr         r3, [r3, #0x440]
  03308	e3130a01	 tst         r3, #1, 20
  0330c	0a00000f	 beq         |$LN8@PostDmaDea|
  03310	e59f334c	 ldr         r3, [pc, #0x34C]
  03314	e5933440	 ldr         r3, [r3, #0x440]
  03318	e3130801	 tst         r3, #1, 16
  0331c	0a000004	 beq         |$LN6@PostDmaDea|
  03320	e59f035c	 ldr         r0, [pc, #0x35C]
  03324	eb000000	 bl          CeLogMsg
  03328	e3a03001	 mov         r3, #1
  0332c	e58d3038	 str         r3, [sp, #0x38]
  03330	ea000003	 b           |$LN7@PostDmaDea|
  03334		 |$LN6@PostDmaDea|
  03334	e59f0348	 ldr         r0, [pc, #0x348]
  03338	eb000000	 bl          NKDbgPrintfW
  0333c	e3a03000	 mov         r3, #0
  03340	e58d3038	 str         r3, [sp, #0x38]
  03344		 |$LN7@PostDmaDea|
  03344	e3a03001	 mov         r3, #1
  03348	e58d303c	 str         r3, [sp, #0x3C]
  0334c	ea000001	 b           |$LN9@PostDmaDea|
  03350		 |$LN8@PostDmaDea|
  03350	e3a03000	 mov         r3, #0
  03354	e58d303c	 str         r3, [sp, #0x3C]
  03358		 |$LN9@PostDmaDea|

; 244  :     
; 245  :     ASSERT(pPdd->nActiveDmaCount > 0);

  03358	e59d3064	 ldr         r3, [sp, #0x64]
  0335c	e2833b01	 add         r3, r3, #1, 22
  03360	e2833008	 add         r3, r3, #8
  03364	e5933000	 ldr         r3, [r3]
  03368	e3530000	 cmp         r3, #0
  0336c	da000002	 ble         |$LN10@PostDmaDea|
  03370	e3a03001	 mov         r3, #1
  03374	e58d3040	 str         r3, [sp, #0x40]
  03378	ea000007	 b           |$LN11@PostDmaDea|
  0337c		 |$LN10@PostDmaDea|
  0337c	e3a030f5	 mov         r3, #0xF5
  03380	e59f22f8	 ldr         r2, [pc, #0x2F8]
  03384	e59f12f0	 ldr         r1, [pc, #0x2F0]
  03388	e59f02e8	 ldr         r0, [pc, #0x2E8]
  0338c	eb000000	 bl          NKDbgPrintfW
  03390	e6000010	 __debugbreak_ce
  03394	e3a03000	 mov         r3, #0
  03398	e58d3040	 str         r3, [sp, #0x40]
  0339c		 |$LN11@PostDmaDea|

; 246  : 
; 247  :     // this operation needs to be atomic to handle a corner case
; 248  :     EnterCriticalSection(&pPdd->csDVFS);

  0339c	e59d3064	 ldr         r3, [sp, #0x64]
  033a0	e2833b01	 add         r3, r3, #1, 22
  033a4	e2830014	 add         r0, r3, #0x14
  033a8	eb000000	 bl          EnterCriticalSection

; 249  :     
; 250  :     // check if all dma's are inactive and signal ack event if so
; 251  :     InterlockedDecrement(&pPdd->nActiveDmaCount);

  033ac	e59d3064	 ldr         r3, [sp, #0x64]
  033b0	e2833b01	 add         r3, r3, #1, 22
  033b4	e2830008	 add         r0, r3, #8
  033b8	eb000000	 bl          InterlockedDecrement

; 252  :     if (pPdd->nActiveDmaCount < 0)

  033bc	e59d3064	 ldr         r3, [sp, #0x64]
  033c0	e2833b01	 add         r3, r3, #1, 22
  033c4	e2833008	 add         r3, r3, #8
  033c8	e5933000	 ldr         r3, [r3]
  033cc	e3530000	 cmp         r3, #0
  033d0	aa000012	 bge         |$LN3@PostDmaDea|

; 253  :     {
; 254  :         RETAILMSG(1, (L"***###PostDma error on EP %d\r\n", endPoint));

  033d4	e59d1068	 ldr         r1, [sp, #0x68]
  033d8	e59f0294	 ldr         r0, [pc, #0x294]
  033dc	eb000000	 bl          NKDbgPrintfW

; 255  :         RETAILMSG(1, (L"***###PostDma, nActiveDmaCount < 0 (0x%x)\r\n", pPdd->nActiveDmaCount));

  033e0	e59d3064	 ldr         r3, [sp, #0x64]
  033e4	e2833b01	 add         r3, r3, #1, 22
  033e8	e2833008	 add         r3, r3, #8
  033ec	e5931000	 ldr         r1, [r3]
  033f0	e59f0278	 ldr         r0, [pc, #0x278]
  033f4	eb000000	 bl          NKDbgPrintfW

; 256  :         // this may be a race condition in which it stops DMA and then process back the
; 257  :         if (pPdd->bDVFSAck == TRUE) 

  033f8	e59d3064	 ldr         r3, [sp, #0x64]
  033fc	e2833b01	 add         r3, r3, #1, 22
  03400	e2833004	 add         r3, r3, #4
  03404	e5933000	 ldr         r3, [r3]
  03408	e3530001	 cmp         r3, #1
  0340c	1a000003	 bne         |$LN2@PostDmaDea|

; 258  :             InterlockedIncrement(&pPdd->nActiveDmaCount);       

  03410	e59d3064	 ldr         r3, [sp, #0x64]
  03414	e2833b01	 add         r3, r3, #1, 22
  03418	e2830008	 add         r0, r3, #8
  0341c	eb000000	 bl          InterlockedIncrement
  03420		 |$LN2@PostDmaDea|
  03420		 |$LN3@PostDmaDea|

; 259  :     }    
; 260  : 
; 261  :     if (pPdd->bDVFSActive == TRUE && pPdd->nActiveDmaCount <= 0 && pPdd->bDVFSAck == FALSE)

  03420	e59d3064	 ldr         r3, [sp, #0x64]
  03424	e2833b01	 add         r3, r3, #1, 22
  03428	e5933000	 ldr         r3, [r3]
  0342c	e3530001	 cmp         r3, #1
  03430	1a00002f	 bne         |$LN1@PostDmaDea|
  03434	e59d3064	 ldr         r3, [sp, #0x64]
  03438	e2833b01	 add         r3, r3, #1, 22
  0343c	e2833008	 add         r3, r3, #8
  03440	e5933000	 ldr         r3, [r3]
  03444	e3530000	 cmp         r3, #0
  03448	ca000029	 bgt         |$LN1@PostDmaDea|
  0344c	e59d3064	 ldr         r3, [sp, #0x64]
  03450	e2833b01	 add         r3, r3, #1, 22
  03454	e2833004	 add         r3, r3, #4
  03458	e5933000	 ldr         r3, [r3]
  0345c	e3530000	 cmp         r3, #0
  03460	1a000023	 bne         |$LN1@PostDmaDea|

; 262  :         {
; 263  :         DEBUGMSG(ZONE_DVFS, (L"***PostDma finished all Dma's set hDVFSAckEvent EP %d, TxRx %d\r\n", endPoint, TxRx));        

  03464	e59f31f8	 ldr         r3, [pc, #0x1F8]
  03468	e5933440	 ldr         r3, [r3, #0x440]
  0346c	e3130b02	 tst         r3, #2, 22
  03470	0a000013	 beq         |$LN14@PostDmaDea|
  03474	e59f31e8	 ldr         r3, [pc, #0x1E8]
  03478	e5933440	 ldr         r3, [r3, #0x440]
  0347c	e3130801	 tst         r3, #1, 16
  03480	0a000006	 beq         |$LN12@PostDmaDea|
  03484	e59d206c	 ldr         r2, [sp, #0x6C]
  03488	e59d1068	 ldr         r1, [sp, #0x68]
  0348c	e59f01d8	 ldr         r0, [pc, #0x1D8]
  03490	eb000000	 bl          CeLogMsg
  03494	e3a03001	 mov         r3, #1
  03498	e58d3044	 str         r3, [sp, #0x44]
  0349c	ea000005	 b           |$LN13@PostDmaDea|
  034a0		 |$LN12@PostDmaDea|
  034a0	e59d206c	 ldr         r2, [sp, #0x6C]
  034a4	e59d1068	 ldr         r1, [sp, #0x68]
  034a8	e59f01bc	 ldr         r0, [pc, #0x1BC]
  034ac	eb000000	 bl          NKDbgPrintfW
  034b0	e3a03000	 mov         r3, #0
  034b4	e58d3044	 str         r3, [sp, #0x44]
  034b8		 |$LN13@PostDmaDea|
  034b8	e3a03001	 mov         r3, #1
  034bc	e58d3048	 str         r3, [sp, #0x48]
  034c0	ea000001	 b           |$LN15@PostDmaDea|
  034c4		 |$LN14@PostDmaDea|
  034c4	e3a03000	 mov         r3, #0
  034c8	e58d3048	 str         r3, [sp, #0x48]
  034cc		 |$LN15@PostDmaDea|

; 264  :         pPdd->bDVFSAck = TRUE;

  034cc	e59d3064	 ldr         r3, [sp, #0x64]
  034d0	e2833b01	 add         r3, r3, #1, 22
  034d4	e2832004	 add         r2, r3, #4
  034d8	e3a03001	 mov         r3, #1
  034dc	e5823000	 str         r3, [r2]

; 265  :         SetEvent(pPdd->hDVFSAckEvent);

  034e0	e59d3064	 ldr         r3, [sp, #0x64]
  034e4	e2833b01	 add         r3, r3, #1, 22
  034e8	e283300c	 add         r3, r3, #0xC
  034ec	e5930000	 ldr         r0, [r3]
  034f0	eb000000	 bl          SetEvent
  034f4		 |$LN1@PostDmaDea|

; 266  :         }
; 267  : 
; 268  :     DEBUGMSG(ZONE_DVFS, (L"***PostDma DmaCount(%d) endpoint(%d) Tx0Rx1(%d) pTransfer(0x%x) pBuffer(0x%x) cBuffer(%d) cTransfer(%d)\r\n",
; 269  :             pPdd->nActiveDmaCount,endPoint, TxRx, pTransfer, pTransfer->pvBuffer, pTransfer->cbBuffer, pTransfer->cbTransferred));

  034f4	e59f3168	 ldr         r3, [pc, #0x168]
  034f8	e5933440	 ldr         r3, [r3, #0x440]
  034fc	e3130b02	 tst         r3, #2, 22
  03500	0a000037	 beq         |$LN18@PostDmaDea|
  03504	e59f3158	 ldr         r3, [pc, #0x158]
  03508	e5933440	 ldr         r3, [r3, #0x440]
  0350c	e3130801	 tst         r3, #1, 16
  03510	0a000018	 beq         |$LN16@PostDmaDea|
  03514	e59d3010	 ldr         r3, [sp, #0x10]
  03518	e2833010	 add         r3, r3, #0x10
  0351c	e5933000	 ldr         r3, [r3]
  03520	e58d300c	 str         r3, [sp, #0xC]
  03524	e59d3010	 ldr         r3, [sp, #0x10]
  03528	e283300c	 add         r3, r3, #0xC
  0352c	e5933000	 ldr         r3, [r3]
  03530	e58d3008	 str         r3, [sp, #8]
  03534	e59d3010	 ldr         r3, [sp, #0x10]
  03538	e2833004	 add         r3, r3, #4
  0353c	e5933000	 ldr         r3, [r3]
  03540	e58d3004	 str         r3, [sp, #4]
  03544	e59d3010	 ldr         r3, [sp, #0x10]
  03548	e58d3000	 str         r3, [sp]
  0354c	e59d306c	 ldr         r3, [sp, #0x6C]
  03550	e59d2068	 ldr         r2, [sp, #0x68]
  03554	e59d1064	 ldr         r1, [sp, #0x64]
  03558	e2811b01	 add         r1, r1, #1, 22
  0355c	e2811008	 add         r1, r1, #8
  03560	e5911000	 ldr         r1, [r1]
  03564	e59f00fc	 ldr         r0, [pc, #0xFC]
  03568	eb000000	 bl          CeLogMsg
  0356c	e3a03001	 mov         r3, #1
  03570	e58d304c	 str         r3, [sp, #0x4C]
  03574	ea000017	 b           |$LN17@PostDmaDea|
  03578		 |$LN16@PostDmaDea|
  03578	e59d3010	 ldr         r3, [sp, #0x10]
  0357c	e2833010	 add         r3, r3, #0x10
  03580	e5933000	 ldr         r3, [r3]
  03584	e58d300c	 str         r3, [sp, #0xC]
  03588	e59d3010	 ldr         r3, [sp, #0x10]
  0358c	e283300c	 add         r3, r3, #0xC
  03590	e5933000	 ldr         r3, [r3]
  03594	e58d3008	 str         r3, [sp, #8]
  03598	e59d3010	 ldr         r3, [sp, #0x10]
  0359c	e2833004	 add         r3, r3, #4
  035a0	e5933000	 ldr         r3, [r3]
  035a4	e58d3004	 str         r3, [sp, #4]
  035a8	e59d3010	 ldr         r3, [sp, #0x10]
  035ac	e58d3000	 str         r3, [sp]
  035b0	e59d306c	 ldr         r3, [sp, #0x6C]
  035b4	e59d2068	 ldr         r2, [sp, #0x68]
  035b8	e59d1064	 ldr         r1, [sp, #0x64]
  035bc	e2811b01	 add         r1, r1, #1, 22
  035c0	e2811008	 add         r1, r1, #8
  035c4	e5911000	 ldr         r1, [r1]
  035c8	e59f0098	 ldr         r0, [pc, #0x98]
  035cc	eb000000	 bl          NKDbgPrintfW
  035d0	e3a03000	 mov         r3, #0
  035d4	e58d304c	 str         r3, [sp, #0x4C]
  035d8		 |$LN17@PostDmaDea|
  035d8	e3a03001	 mov         r3, #1
  035dc	e58d3050	 str         r3, [sp, #0x50]
  035e0	ea000001	 b           |$LN19@PostDmaDea|
  035e4		 |$LN18@PostDmaDea|
  035e4	e3a03000	 mov         r3, #0
  035e8	e58d3050	 str         r3, [sp, #0x50]
  035ec		 |$LN19@PostDmaDea|

; 270  :     LeaveCriticalSection(&pPdd->csDVFS);

  035ec	e59d3064	 ldr         r3, [sp, #0x64]
  035f0	e2833b01	 add         r3, r3, #1, 22
  035f4	e2830014	 add         r0, r3, #0x14
  035f8	eb000000	 bl          LeaveCriticalSection

; 271  : 
; 272  :     DEBUGMSG(ZONE_FUNCTION, (
; 273  :         L"-PostDmaDeactivation()\r\n"
; 274  :         ));

  035fc	e59f3060	 ldr         r3, [pc, #0x60]
  03600	e5933440	 ldr         r3, [r3, #0x440]
  03604	e3130a01	 tst         r3, #1, 20
  03608	0a00000f	 beq         |$LN22@PostDmaDea|
  0360c	e59f3050	 ldr         r3, [pc, #0x50]
  03610	e5933440	 ldr         r3, [r3, #0x440]
  03614	e3130801	 tst         r3, #1, 16
  03618	0a000004	 beq         |$LN20@PostDmaDea|
  0361c	e59f003c	 ldr         r0, [pc, #0x3C]
  03620	eb000000	 bl          CeLogMsg
  03624	e3a03001	 mov         r3, #1
  03628	e58d3054	 str         r3, [sp, #0x54]
  0362c	ea000003	 b           |$LN21@PostDmaDea|
  03630		 |$LN20@PostDmaDea|
  03630	e59f0028	 ldr         r0, [pc, #0x28]
  03634	eb000000	 bl          NKDbgPrintfW
  03638	e3a03000	 mov         r3, #0
  0363c	e58d3054	 str         r3, [sp, #0x54]
  03640		 |$LN21@PostDmaDea|
  03640	e3a03001	 mov         r3, #1
  03644	e58d3058	 str         r3, [sp, #0x58]
  03648	ea000001	 b           |$LN23@PostDmaDea|
  0364c		 |$LN22@PostDmaDea|
  0364c	e3a03000	 mov         r3, #0
  03650	e58d3058	 str         r3, [sp, #0x58]
  03654		 |$LN23@PostDmaDea|

; 275  : }

  03654	e28dd05c	 add         sp, sp, #0x5C
  03658	e89d6000	 ldmia       sp, {sp, lr}
  0365c	e12fff1e	 bx          lr
  03660		 |$LN27@PostDmaDea|
  03660		 |$LN28@PostDmaDea|
  03660	00000000	 DCD         |??_C@_1DC@JNNFMLIE@?$AA?9?$AAP?$AAo?$AAs?$AAt?$AAD?$AAm?$AAa?$AAD?$AAe?$AAa?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  03664		 |$LN29@PostDmaDea|
  03664	00000000	 DCD         |dpCurSettings|
  03668		 |$LN30@PostDmaDea|
  03668	00000000	 DCD         |??_C@_1NE@INOOHDEN@?$AA?$CK?$AA?$CK?$AA?$CK?$AAP?$AAo?$AAs?$AAt?$AAD?$AAm?$AAa?$AA?5?$AAD?$AAm?$AAa?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt@|
  0366c		 |$LN31@PostDmaDea|
  0366c	00000000	 DCD         |??_C@_1IC@HMENJINB@?$AA?$CK?$AA?$CK?$AA?$CK?$AAP?$AAo?$AAs?$AAt?$AAD?$AAm?$AAa?$AA?5?$AAf?$AAi?$AAn?$AAi?$AAs?$AAh?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAD?$AAm?$AAa?$AA?8?$AAs?$AA?5?$AAs?$AAe@|
  03670		 |$LN32@PostDmaDea|
  03670	00000000	 DCD         |??_C@_1FI@LMBAMPFN@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?$CD?$AA?$CD?$AA?$CD?$AAP?$AAo?$AAs?$AAt?$AAD?$AAm?$AAa?$AA?0?$AA?5?$AAn?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AAD?$AAm?$AAa?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM@|
  03674		 |$LN33@PostDmaDea|
  03674	00000000	 DCD         |??_C@_1DO@NHKFAELP@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?$CD?$AA?$CD?$AA?$CD?$AAP?$AAo?$AAs?$AAt?$AAD?$AAm?$AAa?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAo?$AAn?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  03678		 |$LN34@PostDmaDea|
  03678	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  0367c		 |$LN35@PostDmaDea|
  0367c	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  03680		 |$LN36@PostDmaDea|
  03680	00000000	 DCD         |??_C@_1JM@NKOACJGE@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  03684		 |$LN37@PostDmaDea|
  03684	00000000	 DCD         |??_C@_1CO@KOCODIMP@?$AA?$CL?$AAP?$AAo?$AAs?$AAt?$AAD?$AAm?$AAa?$AAD?$AAe?$AAa?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  03688		 |$M50064|

			 ENDP  ; |PostDmaDeactivation|


  00088			 AREA	 |.pdata|, PDATA
|$T50082| DCD	|$LN5@ResetDMACh|
	DCD	0x40003e04
; Function compile flags: /Odtp

  03688			 AREA	 |.text|, CODE, ARM

  03688		 |ResetDMAChannel| PROC

; 943  : {

  03688		 |$LN5@ResetDMACh|
  03688	e1a0c00d	 mov         r12, sp
  0368c	e92d0003	 stmdb       sp!, {r0, r1}
  03690	e92d5000	 stmdb       sp!, {r12, lr}
  03694	e24dd004	 sub         sp, sp, #4
  03698		 |$M50079|

; 944  :     PHSMUSB_T pOTG =(PHSMUSB_T)(pPdd->pUSBContext);

  03698	e59d300c	 ldr         r3, [sp, #0xC]
  0369c	e2833020	 add         r3, r3, #0x20
  036a0	e5933000	 ldr         r3, [r3]
  036a4	e58d3000	 str         r3, [sp]

; 945  : 
; 946  :     EnterCriticalSection(&pPdd->dmaCS);

  036a8	e59d300c	 ldr         r3, [sp, #0xC]
  036ac	e2830034	 add         r0, r3, #0x34
  036b0	eb000000	 bl          EnterCriticalSection

; 947  :     OUTREG32(&pOTG->pUsbDmaRegs->dma[channel].Addr, (DWORD)0x00);    

  036b4	e59d3000	 ldr         r3, [sp]
  036b8	e2833024	 add         r3, r3, #0x24
  036bc	e5933000	 ldr         r3, [r3]
  036c0	e2831004	 add         r1, r3, #4
  036c4	e5dd3010	 ldrb        r3, [sp, #0x10]
  036c8	e1a02003	 mov         r2, r3
  036cc	e3a03010	 mov         r3, #0x10
  036d0	e0030392	 mul         r3, r2, r3
  036d4	e0813003	 add         r3, r1, r3
  036d8	e2832004	 add         r2, r3, #4
  036dc	e3a03000	 mov         r3, #0
  036e0	e5823000	 str         r3, [r2]

; 948  :     // Write count
; 949  :     OUTREG32(&pOTG->pUsbDmaRegs->dma[channel].Count, (DWORD)0x00);

  036e4	e59d3000	 ldr         r3, [sp]
  036e8	e2833024	 add         r3, r3, #0x24
  036ec	e5933000	 ldr         r3, [r3]
  036f0	e2831004	 add         r1, r3, #4
  036f4	e5dd3010	 ldrb        r3, [sp, #0x10]
  036f8	e1a02003	 mov         r2, r3
  036fc	e3a03010	 mov         r3, #0x10
  03700	e0030392	 mul         r3, r2, r3
  03704	e0813003	 add         r3, r1, r3
  03708	e2832008	 add         r2, r3, #8
  0370c	e3a03000	 mov         r3, #0
  03710	e5823000	 str         r3, [r2]

; 950  :         
; 951  :     // Write Control
; 952  :     OUTREG32(&pOTG->pUsbDmaRegs->dma[channel].Cntl, (DWORD)0x00);

  03714	e59d3000	 ldr         r3, [sp]
  03718	e2833024	 add         r3, r3, #0x24
  0371c	e5933000	 ldr         r3, [r3]
  03720	e2831004	 add         r1, r3, #4
  03724	e5dd3010	 ldrb        r3, [sp, #0x10]
  03728	e1a02003	 mov         r2, r3
  0372c	e3a03010	 mov         r3, #0x10
  03730	e0030392	 mul         r3, r2, r3
  03734	e0812003	 add         r2, r1, r3
  03738	e3a03000	 mov         r3, #0
  0373c	e5823000	 str         r3, [r2]

; 953  : 
; 954  :     pPdd->bRXIsUsingUsbDMA = FALSE;

  03740	e59d300c	 ldr         r3, [sp, #0xC]
  03744	e2833b01	 add         r3, r3, #1, 22
  03748	e2832038	 add         r2, r3, #0x38
  0374c	e3a03000	 mov         r3, #0
  03750	e5823000	 str         r3, [r2]

; 955  :     pPdd->bTXIsUsingUsbDMA = FALSE;

  03754	e59d300c	 ldr         r3, [sp, #0xC]
  03758	e2833b01	 add         r3, r3, #1, 22
  0375c	e2832034	 add         r2, r3, #0x34
  03760	e3a03000	 mov         r3, #0
  03764	e5823000	 str         r3, [r2]

; 956  : 
; 957  :     LeaveCriticalSection(&pPdd->dmaCS);

  03768	e59d300c	 ldr         r3, [sp, #0xC]
  0376c	e2830034	 add         r0, r3, #0x34
  03770	eb000000	 bl          LeaveCriticalSection

; 958  : }

  03774	e28dd004	 add         sp, sp, #4
  03778	e89d6000	 ldmia       sp, {sp, lr}
  0377c	e12fff1e	 bx          lr
  03780		 |$M50080|

			 ENDP  ; |ResetDMAChannel|

	EXPORT	|??_C@_1IG@LOAMGDPB@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5@| [ DATA ] ; `string'

  00090			 AREA	 |.pdata|, PDATA
|$T50111| DCD	|$LN34@StartRxDma|
	DCD	0x40019e04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IG@LOAMGDPB@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, "P", 0x0, "d"
	DCB	0x0, "d", 0x0, "!", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "r"
	DCB	0x0, "t", 0x0, "R", 0x0, "x", 0x0, "D", 0x0, "m", 0x0, "a"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "P"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "p", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, " ", 0x0, "(", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  03780			 AREA	 |.text|, CODE, ARM

  03780		 |StartRxDmaTransfer| PROC

; 1273 : {

  03780		 |$LN34@StartRxDma|
  03780	e1a0c00d	 mov         r12, sp
  03784	e92d0003	 stmdb       sp!, {r0, r1}
  03788	e92d5000	 stmdb       sp!, {r12, lr}
  0378c	e24dd074	 sub         sp, sp, #0x74
  03790		 |$M50108|

; 1274 :     DWORD rc = ERROR_INVALID_PARAMETER;

  03790	e3a03057	 mov         r3, #0x57
  03794	e58d3010	 str         r3, [sp, #0x10]

; 1275 :     MUsbFnEp_t *pEP = &pPdd->ep[endpoint];

  03798	e59d307c	 ldr         r3, [sp, #0x7C]
  0379c	e28310ac	 add         r1, r3, #0xAC
  037a0	e59d2080	 ldr         r2, [sp, #0x80]
  037a4	e3a03034	 mov         r3, #0x34
  037a8	e0030392	 mul         r3, r2, r3
  037ac	e0813003	 add         r3, r1, r3
  037b0	e58d3020	 str         r3, [sp, #0x20]

; 1276 :     STransfer *pTransfer = pEP->pTransfer;

  037b4	e59d3020	 ldr         r3, [sp, #0x20]
  037b8	e2833020	 add         r3, r3, #0x20
  037bc	e5933000	 ldr         r3, [r3]
  037c0	e58d3018	 str         r3, [sp, #0x18]

; 1277 :     DWORD size;
; 1278 :     DWORD dwDMAPhysAddr = pTransfer->dwBufferPhysicalAddress;

  037c4	e59d3018	 ldr         r3, [sp, #0x18]
  037c8	e2833008	 add         r3, r3, #8
  037cc	e5933000	 ldr         r3, [r3]
  037d0	e58d3028	 str         r3, [sp, #0x28]

; 1279 :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUSBContext->pUsbCsrRegs;

  037d4	e59d307c	 ldr         r3, [sp, #0x7C]
  037d8	e2833020	 add         r3, r3, #0x20
  037dc	e5933000	 ldr         r3, [r3]
  037e0	e283301c	 add         r3, r3, #0x1C
  037e4	e5933000	 ldr         r3, [r3]
  037e8	e58d300c	 str         r3, [sp, #0xC]

; 1280 :     PCSP_MUSB_GEN_REGS pGenRegs = pPdd->pUSBContext->pUsbGenRegs;

  037ec	e59d307c	 ldr         r3, [sp, #0x7C]
  037f0	e2833020	 add         r3, r3, #0x20
  037f4	e5933000	 ldr         r3, [r3]
  037f8	e2833020	 add         r3, r3, #0x20
  037fc	e5933000	 ldr         r3, [r3]
  03800	e58d3014	 str         r3, [sp, #0x14]

; 1281 :     UINT16 RxCsr = 0;

  03804	e3a03000	 mov         r3, #0
  03808	e1cd31bc	 strh        r3, [sp, #0x1C]

; 1282 :         
; 1283 :     
; 1284 :     DEBUGMSG(ZONE_FUNCTION, (L"UsbFnPdd!StartRxDmaTransfer: "
; 1285 :         L"EP %d pTransfer 0x%08x (%d, %d, %d)\r\n",
; 1286 :         endpoint, pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 1287 :         pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 1288 :         pTransfer != NULL ? pTransfer->dwUsbError : -1
; 1289 :         ));

  0380c	e59f35e0	 ldr         r3, [pc, #0x5E0]
  03810	e5933440	 ldr         r3, [r3, #0x440]
  03814	e3130a01	 tst         r3, #1, 20
  03818	0a000059	 beq         |$LN30@StartRxDma|
  0381c	e59f35d0	 ldr         r3, [pc, #0x5D0]
  03820	e5933440	 ldr         r3, [r3, #0x440]
  03824	e3130801	 tst         r3, #1, 16
  03828	0a000029	 beq         |$LN28@StartRxDma|
  0382c	e59d3018	 ldr         r3, [sp, #0x18]
  03830	e3530000	 cmp         r3, #0
  03834	0a000004	 beq         |$LN16@StartRxDma|
  03838	e59d3018	 ldr         r3, [sp, #0x18]
  0383c	e2833014	 add         r3, r3, #0x14
  03840	e5933000	 ldr         r3, [r3]
  03844	e58d304c	 str         r3, [sp, #0x4C]
  03848	ea000001	 b           |$LN17@StartRxDma|
  0384c		 |$LN16@StartRxDma|
  0384c	e3e03000	 mvn         r3, #0
  03850	e58d304c	 str         r3, [sp, #0x4C]
  03854		 |$LN17@StartRxDma|
  03854	e59d3018	 ldr         r3, [sp, #0x18]
  03858	e3530000	 cmp         r3, #0
  0385c	0a000004	 beq         |$LN18@StartRxDma|
  03860	e59d3018	 ldr         r3, [sp, #0x18]
  03864	e2833010	 add         r3, r3, #0x10
  03868	e5933000	 ldr         r3, [r3]
  0386c	e58d3050	 str         r3, [sp, #0x50]
  03870	ea000001	 b           |$LN19@StartRxDma|
  03874		 |$LN18@StartRxDma|
  03874	e3a03000	 mov         r3, #0
  03878	e58d3050	 str         r3, [sp, #0x50]
  0387c		 |$LN19@StartRxDma|
  0387c	e59d3018	 ldr         r3, [sp, #0x18]
  03880	e3530000	 cmp         r3, #0
  03884	0a000004	 beq         |$LN20@StartRxDma|
  03888	e59d3018	 ldr         r3, [sp, #0x18]
  0388c	e283300c	 add         r3, r3, #0xC
  03890	e5933000	 ldr         r3, [r3]
  03894	e58d3054	 str         r3, [sp, #0x54]
  03898	ea000001	 b           |$LN21@StartRxDma|
  0389c		 |$LN20@StartRxDma|
  0389c	e3a03000	 mov         r3, #0
  038a0	e58d3054	 str         r3, [sp, #0x54]
  038a4		 |$LN21@StartRxDma|
  038a4	e59d304c	 ldr         r3, [sp, #0x4C]
  038a8	e58d3004	 str         r3, [sp, #4]
  038ac	e59d3050	 ldr         r3, [sp, #0x50]
  038b0	e58d3000	 str         r3, [sp]
  038b4	e59d3054	 ldr         r3, [sp, #0x54]
  038b8	e59d2018	 ldr         r2, [sp, #0x18]
  038bc	e59d1080	 ldr         r1, [sp, #0x80]
  038c0	e59f0528	 ldr         r0, [pc, #0x528]
  038c4	eb000000	 bl          CeLogMsg
  038c8	e3a03001	 mov         r3, #1
  038cc	e58d3058	 str         r3, [sp, #0x58]
  038d0	ea000028	 b           |$LN29@StartRxDma|
  038d4		 |$LN28@StartRxDma|
  038d4	e59d3018	 ldr         r3, [sp, #0x18]
  038d8	e3530000	 cmp         r3, #0
  038dc	0a000004	 beq         |$LN22@StartRxDma|
  038e0	e59d3018	 ldr         r3, [sp, #0x18]
  038e4	e2833014	 add         r3, r3, #0x14
  038e8	e5933000	 ldr         r3, [r3]
  038ec	e58d305c	 str         r3, [sp, #0x5C]
  038f0	ea000001	 b           |$LN23@StartRxDma|
  038f4		 |$LN22@StartRxDma|
  038f4	e3e03000	 mvn         r3, #0
  038f8	e58d305c	 str         r3, [sp, #0x5C]
  038fc		 |$LN23@StartRxDma|
  038fc	e59d3018	 ldr         r3, [sp, #0x18]
  03900	e3530000	 cmp         r3, #0
  03904	0a000004	 beq         |$LN24@StartRxDma|
  03908	e59d3018	 ldr         r3, [sp, #0x18]
  0390c	e2833010	 add         r3, r3, #0x10
  03910	e5933000	 ldr         r3, [r3]
  03914	e58d3060	 str         r3, [sp, #0x60]
  03918	ea000001	 b           |$LN25@StartRxDma|
  0391c		 |$LN24@StartRxDma|
  0391c	e3a03000	 mov         r3, #0
  03920	e58d3060	 str         r3, [sp, #0x60]
  03924		 |$LN25@StartRxDma|
  03924	e59d3018	 ldr         r3, [sp, #0x18]
  03928	e3530000	 cmp         r3, #0
  0392c	0a000004	 beq         |$LN26@StartRxDma|
  03930	e59d3018	 ldr         r3, [sp, #0x18]
  03934	e283300c	 add         r3, r3, #0xC
  03938	e5933000	 ldr         r3, [r3]
  0393c	e58d3064	 str         r3, [sp, #0x64]
  03940	ea000001	 b           |$LN27@StartRxDma|
  03944		 |$LN26@StartRxDma|
  03944	e3a03000	 mov         r3, #0
  03948	e58d3064	 str         r3, [sp, #0x64]
  0394c		 |$LN27@StartRxDma|
  0394c	e59d305c	 ldr         r3, [sp, #0x5C]
  03950	e58d3004	 str         r3, [sp, #4]
  03954	e59d3060	 ldr         r3, [sp, #0x60]
  03958	e58d3000	 str         r3, [sp]
  0395c	e59d3064	 ldr         r3, [sp, #0x64]
  03960	e59d2018	 ldr         r2, [sp, #0x18]
  03964	e59d1080	 ldr         r1, [sp, #0x80]
  03968	e59f0480	 ldr         r0, [pc, #0x480]
  0396c	eb000000	 bl          NKDbgPrintfW
  03970	e3a03000	 mov         r3, #0
  03974	e58d3058	 str         r3, [sp, #0x58]
  03978		 |$LN29@StartRxDma|
  03978	e3a03001	 mov         r3, #1
  0397c	e58d3068	 str         r3, [sp, #0x68]
  03980	ea000001	 b           |$LN31@StartRxDma|
  03984		 |$LN30@StartRxDma|
  03984	e3a03000	 mov         r3, #0
  03988	e58d3068	 str         r3, [sp, #0x68]
  0398c		 |$LN31@StartRxDma|

; 1290 :     
; 1291 :     if (pTransfer == NULL)

  0398c	e59d3018	 ldr         r3, [sp, #0x18]
  03990	e3530000	 cmp         r3, #0
  03994	1a000000	 bne         |$LN13@StartRxDma|

; 1292 :         goto cleanUp;

  03998	ea00010e	 b           |$cleanUp$48151|
  0399c		 |$LN13@StartRxDma|

; 1293 :     
; 1294 :     // Get size to be received
; 1295 :     size = pTransfer->cbBuffer - pTransfer->cbTransferred;

  0399c	e59d3018	 ldr         r3, [sp, #0x18]
  039a0	e283200c	 add         r2, r3, #0xC
  039a4	e59d3018	 ldr         r3, [sp, #0x18]
  039a8	e2833010	 add         r3, r3, #0x10
  039ac	e5922000	 ldr         r2, [r2]
  039b0	e5933000	 ldr         r3, [r3]
  039b4	e0423003	 sub         r3, r2, r3
  039b8	e58d3024	 str         r3, [sp, #0x24]

; 1296 :     
; 1297 :     if (!pPdd->ep[endpoint].dmaEnabled ||
; 1298 :         (size <= pPdd->ep[endpoint].maxPacketSize) ||
; 1299 :         (pPdd->rx0DmaState != MODE_DMA) ||
; 1300 :         !pPdd->bDMAForRX ||
; 1301 :         pPdd->intr_rx_data_avail)

  039bc	e59d307c	 ldr         r3, [sp, #0x7C]
  039c0	e28310ac	 add         r1, r3, #0xAC
  039c4	e59d2080	 ldr         r2, [sp, #0x80]
  039c8	e3a03034	 mov         r3, #0x34
  039cc	e0030392	 mul         r3, r2, r3
  039d0	e0813003	 add         r3, r1, r3
  039d4	e2833010	 add         r3, r3, #0x10
  039d8	e5933000	 ldr         r3, [r3]
  039dc	e3530000	 cmp         r3, #0
  039e0	0a000018	 beq         |$LN11@StartRxDma|
  039e4	e59d307c	 ldr         r3, [sp, #0x7C]
  039e8	e28310ac	 add         r1, r3, #0xAC
  039ec	e59d2080	 ldr         r2, [sp, #0x80]
  039f0	e3a03034	 mov         r3, #0x34
  039f4	e0030392	 mul         r3, r2, r3
  039f8	e0813003	 add         r3, r1, r3
  039fc	e1d320b0	 ldrh        r2, [r3]
  03a00	e59d3024	 ldr         r3, [sp, #0x24]
  03a04	e1530002	 cmp         r3, r2
  03a08	9a00000e	 bls         |$LN11@StartRxDma|
  03a0c	e59d307c	 ldr         r3, [sp, #0x7C]
  03a10	e283301c	 add         r3, r3, #0x1C
  03a14	e5933000	 ldr         r3, [r3]
  03a18	e3530000	 cmp         r3, #0
  03a1c	1a000009	 bne         |$LN11@StartRxDma|
  03a20	e59d307c	 ldr         r3, [sp, #0x7C]
  03a24	e2833e43	 add         r3, r3, #0x43, 28
  03a28	e5933000	 ldr         r3, [r3]
  03a2c	e3530000	 cmp         r3, #0
  03a30	0a000004	 beq         |$LN11@StartRxDma|
  03a34	e59d307c	 ldr         r3, [sp, #0x7C]
  03a38	e2833e3f	 add         r3, r3, #0x3F, 28
  03a3c	e5933000	 ldr         r3, [r3]
  03a40	e3530000	 cmp         r3, #0
  03a44	0a000006	 beq         |$LN12@StartRxDma|
  03a48		 |$LN11@StartRxDma|

; 1302 :     {
; 1303 :         return StartRxTransfer(pPdd, endpoint);

  03a48	e59d1080	 ldr         r1, [sp, #0x80]
  03a4c	e59d007c	 ldr         r0, [sp, #0x7C]
  03a50	eb000000	 bl          StartRxTransfer
  03a54	e58d006c	 str         r0, [sp, #0x6C]
  03a58	e59d306c	 ldr         r3, [sp, #0x6C]
  03a5c	e58d303c	 str         r3, [sp, #0x3C]
  03a60	ea0000de	 b           |$LN14@StartRxDma|
  03a64		 |$LN12@StartRxDma|

; 1304 :     }
; 1305 : 
; 1306 :     EnterCriticalSection(&pPdd->dmaCS);

  03a64	e59d307c	 ldr         r3, [sp, #0x7C]
  03a68	e2830034	 add         r0, r3, #0x34
  03a6c	eb000000	 bl          EnterCriticalSection

; 1307 :     if (!pPdd->bTXIsUsingUsbDMA)

  03a70	e59d307c	 ldr         r3, [sp, #0x7C]
  03a74	e2833b01	 add         r3, r3, #1, 22
  03a78	e2833034	 add         r3, r3, #0x34
  03a7c	e5933000	 ldr         r3, [r3]
  03a80	e3530000	 cmp         r3, #0
  03a84	1a000008	 bne         |$LN10@StartRxDma|

; 1308 :     {
; 1309 :         pPdd->bRXIsUsingUsbDMA = TRUE;

  03a88	e59d307c	 ldr         r3, [sp, #0x7C]
  03a8c	e2833b01	 add         r3, r3, #1, 22
  03a90	e2832038	 add         r2, r3, #0x38
  03a94	e3a03001	 mov         r3, #1
  03a98	e5823000	 str         r3, [r2]

; 1310 :         LeaveCriticalSection(&pPdd->dmaCS);

  03a9c	e59d307c	 ldr         r3, [sp, #0x7C]
  03aa0	e2830034	 add         r0, r3, #0x34
  03aa4	eb000000	 bl          LeaveCriticalSection

; 1311 :     }
; 1312 :     else

  03aa8	ea000009	 b           |$LN9@StartRxDma|
  03aac		 |$LN10@StartRxDma|

; 1313 :     {
; 1314 :         LeaveCriticalSection(&pPdd->dmaCS);

  03aac	e59d307c	 ldr         r3, [sp, #0x7C]
  03ab0	e2830034	 add         r0, r3, #0x34
  03ab4	eb000000	 bl          LeaveCriticalSection

; 1315 :         return StartRxTransfer(pPdd, endpoint);

  03ab8	e59d1080	 ldr         r1, [sp, #0x80]
  03abc	e59d007c	 ldr         r0, [sp, #0x7C]
  03ac0	eb000000	 bl          StartRxTransfer
  03ac4	e58d0070	 str         r0, [sp, #0x70]
  03ac8	e59d3070	 ldr         r3, [sp, #0x70]
  03acc	e58d303c	 str         r3, [sp, #0x3C]
  03ad0	ea0000c2	 b           |$LN14@StartRxDma|
  03ad4		 |$LN9@StartRxDma|

; 1316 :     }
; 1317 : 
; 1318 :     pEP->dwRemainBuffer = 0;

  03ad4	e59d3020	 ldr         r3, [sp, #0x20]
  03ad8	e283201c	 add         r2, r3, #0x1C
  03adc	e3a03000	 mov         r3, #0
  03ae0	e5823000	 str         r3, [r2]

; 1319 : 
; 1320 :     // If we are using PDD buffer we must check for maximal size
; 1321 :     if (dwDMAPhysAddr == 0)

  03ae4	e59d3028	 ldr         r3, [sp, #0x28]
  03ae8	e3530000	 cmp         r3, #0
  03aec	1a000015	 bne         |$LN8@StartRxDma|

; 1322 :     {
; 1323 :         if (size > pPdd->rx0DmaBufferSize)

  03af0	e59d307c	 ldr         r3, [sp, #0x7C]
  03af4	e2833014	 add         r3, r3, #0x14
  03af8	e59d2024	 ldr         r2, [sp, #0x24]
  03afc	e5933000	 ldr         r3, [r3]
  03b00	e1520003	 cmp         r2, r3
  03b04	9a00000b	 bls         |$LN7@StartRxDma|

; 1324 :         {
; 1325 :             pEP->dwRemainBuffer = size - pPdd->rx0DmaBufferSize;

  03b08	e59d307c	 ldr         r3, [sp, #0x7C]
  03b0c	e2833014	 add         r3, r3, #0x14
  03b10	e59d2024	 ldr         r2, [sp, #0x24]
  03b14	e5933000	 ldr         r3, [r3]
  03b18	e0422003	 sub         r2, r2, r3
  03b1c	e59d3020	 ldr         r3, [sp, #0x20]
  03b20	e283301c	 add         r3, r3, #0x1C
  03b24	e5832000	 str         r2, [r3]

; 1326 :             size = pPdd->rx0DmaBufferSize;

  03b28	e59d307c	 ldr         r3, [sp, #0x7C]
  03b2c	e2833014	 add         r3, r3, #0x14
  03b30	e5933000	 ldr         r3, [r3]
  03b34	e58d3024	 str         r3, [sp, #0x24]
  03b38		 |$LN7@StartRxDma|

; 1327 :         }
; 1328 :         dwDMAPhysAddr = pPdd->paDmaRx0Buffer;

  03b38	e59d307c	 ldr         r3, [sp, #0x7C]
  03b3c	e283304c	 add         r3, r3, #0x4C
  03b40	e5933000	 ldr         r3, [r3]
  03b44	e58d3028	 str         r3, [sp, #0x28]
  03b48		 |$LN8@StartRxDma|

; 1329 :     }
; 1330 :     
; 1331 :     EnterCriticalSection(&pPdd->dmaCS);

  03b48	e59d307c	 ldr         r3, [sp, #0x7C]
  03b4c	e2830034	 add         r0, r3, #0x34
  03b50	eb000000	 bl          EnterCriticalSection

; 1332 : 
; 1333 :     RxCsr = INREG16(&pCsrRegs->ep[endpoint].RxCSR);

  03b54	e59d1080	 ldr         r1, [sp, #0x80]
  03b58	e3a03010	 mov         r3, #0x10
  03b5c	e0020391	 mul         r2, r1, r3
  03b60	e59d300c	 ldr         r3, [sp, #0xC]
  03b64	e0833002	 add         r3, r3, r2
  03b68	e2833006	 add         r3, r3, #6
  03b6c	e1d330b0	 ldrh        r3, [r3]
  03b70	e1cd31bc	 strh        r3, [sp, #0x1C]

; 1334 :     
; 1335 :     if(pEP->bMassStore)

  03b74	e59d3020	 ldr         r3, [sp, #0x20]
  03b78	e283300c	 add         r3, r3, #0xC
  03b7c	e5933000	 ldr         r3, [r3]
  03b80	e3530000	 cmp         r3, #0
  03b84	0a00001a	 beq         |$LN6@StartRxDma|

; 1336 :     {
; 1337 :         RxCsr &= ~(RXCSR_P_DMAREQMODE);

  03b88	e1dd31bc	 ldrh        r3, [sp, #0x1C]
  03b8c	e1a02003	 mov         r2, r3
  03b90	e3e03b02	 mvn         r3, #2, 22
  03b94	e0023003	 and         r3, r2, r3
  03b98	e1a03803	 mov         r3, r3, lsl #16
  03b9c	e1a03823	 mov         r3, r3, lsr #16
  03ba0	e1cd31bc	 strh        r3, [sp, #0x1C]

; 1338 :         RxCsr |= (RXCSR_P_AUTOCLEAR | RXCSR_P_DMAREQENAB);

  03ba4	e1dd31bc	 ldrh        r3, [sp, #0x1C]
  03ba8	e3833a0a	 orr         r3, r3, #0xA, 20
  03bac	e1a03803	 mov         r3, r3, lsl #16
  03bb0	e1a03823	 mov         r3, r3, lsr #16
  03bb4	e1cd31bc	 strh        r3, [sp, #0x1C]

; 1339 :         CLRREG16(&pGenRegs->IntrRxE, (1<<endpoint));

  03bb8	e59d3014	 ldr         r3, [sp, #0x14]
  03bbc	e2833008	 add         r3, r3, #8
  03bc0	e1d330b0	 ldrh        r3, [r3]
  03bc4	e1a01003	 mov         r1, r3
  03bc8	e59d2080	 ldr         r2, [sp, #0x80]
  03bcc	e3a03001	 mov         r3, #1
  03bd0	e1a03213	 mov         r3, r3, lsl r2
  03bd4	e1e03003	 mvn         r3, r3
  03bd8	e0013003	 and         r3, r1, r3
  03bdc	e1a02803	 mov         r2, r3, lsl #16
  03be0	e1a02822	 mov         r2, r2, lsr #16
  03be4	e59d3014	 ldr         r3, [sp, #0x14]
  03be8	e2833008	 add         r3, r3, #8
  03bec	e1c320b0	 strh        r2, [r3]

; 1340 :     }
; 1341 :     else 

  03bf0	ea000011	 b           |$LN5@StartRxDma|
  03bf4		 |$LN6@StartRxDma|

; 1342 :     {
; 1343 :         RxCsr |= (RXCSR_P_AUTOCLEAR | RXCSR_P_DMAREQENAB | RXCSR_P_DMAREQMODE);

  03bf4	e1dd31bc	 ldrh        r3, [sp, #0x1C]
  03bf8	e3833b2a	 orr         r3, r3, #0x2A, 22
  03bfc	e1a03803	 mov         r3, r3, lsl #16
  03c00	e1a03823	 mov         r3, r3, lsr #16
  03c04	e1cd31bc	 strh        r3, [sp, #0x1C]

; 1344 :         SETREG16(&pGenRegs->IntrRxE, (1<<endpoint));

  03c08	e59d3014	 ldr         r3, [sp, #0x14]
  03c0c	e2833008	 add         r3, r3, #8
  03c10	e1d330b0	 ldrh        r3, [r3]
  03c14	e1a01003	 mov         r1, r3
  03c18	e59d2080	 ldr         r2, [sp, #0x80]
  03c1c	e3a03001	 mov         r3, #1
  03c20	e1a03213	 mov         r3, r3, lsl r2
  03c24	e1813003	 orr         r3, r1, r3
  03c28	e1a02803	 mov         r2, r3, lsl #16
  03c2c	e1a02822	 mov         r2, r2, lsr #16
  03c30	e59d3014	 ldr         r3, [sp, #0x14]
  03c34	e2833008	 add         r3, r3, #8
  03c38	e1c320b0	 strh        r2, [r3]
  03c3c		 |$LN5@StartRxDma|

; 1345 :     }
; 1346 :     // This is to avoid race condition, if the DVFS Notify comes after PreDmaActivation, 
; 1347 :     // If it is after CheckAndHaltDMA, we need to change to StartRxTransfer. 
; 1348 :     // Otherwise, we can use directly to call StartRxTransfer    
; 1349 :     if ((pPdd->bDVFSActive) && (pPdd->rx0DmaState == MODE_FIFO))

  03c3c	e59d307c	 ldr         r3, [sp, #0x7C]
  03c40	e2833b01	 add         r3, r3, #1, 22
  03c44	e5933000	 ldr         r3, [r3]
  03c48	e3530000	 cmp         r3, #0
  03c4c	0a00000d	 beq         |$LN4@StartRxDma|
  03c50	e59d307c	 ldr         r3, [sp, #0x7C]
  03c54	e283301c	 add         r3, r3, #0x1C
  03c58	e5933000	 ldr         r3, [r3]
  03c5c	e3530001	 cmp         r3, #1
  03c60	1a000008	 bne         |$LN4@StartRxDma|

; 1350 :     {
; 1351 :         pPdd->bRXIsUsingUsbDMA = FALSE;

  03c64	e59d307c	 ldr         r3, [sp, #0x7C]
  03c68	e2833b01	 add         r3, r3, #1, 22
  03c6c	e2832038	 add         r2, r3, #0x38
  03c70	e3a03000	 mov         r3, #0
  03c74	e5823000	 str         r3, [r2]

; 1352 :         StartRxTransfer(pPdd, endpoint);

  03c78	e59d1080	 ldr         r1, [sp, #0x80]
  03c7c	e59d007c	 ldr         r0, [sp, #0x7C]
  03c80	eb000000	 bl          StartRxTransfer

; 1353 :     }
; 1354 :     else

  03c84	ea00004e	 b           |$LN3@StartRxDma|
  03c88		 |$LN4@StartRxDma|

; 1355 :     {
; 1356 :         PreDmaActivation(pPdd, endpoint, RX_TRANSFER);

  03c88	e3a02001	 mov         r2, #1
  03c8c	e59d1080	 ldr         r1, [sp, #0x80]
  03c90	e59d007c	 ldr         r0, [sp, #0x7C]
  03c94	eb000000	 bl          PreDmaActivation

; 1357 :         SETREG16(&pCsrRegs->ep[endpoint].RxCSR, RxCsr);

  03c98	e59d1080	 ldr         r1, [sp, #0x80]
  03c9c	e3a03010	 mov         r3, #0x10
  03ca0	e0020391	 mul         r2, r1, r3
  03ca4	e59d300c	 ldr         r3, [sp, #0xC]
  03ca8	e0833002	 add         r3, r3, r2
  03cac	e2833006	 add         r3, r3, #6
  03cb0	e1d330b0	 ldrh        r3, [r3]
  03cb4	e1a02003	 mov         r2, r3
  03cb8	e1dd31bc	 ldrh        r3, [sp, #0x1C]
  03cbc	e1823003	 orr         r3, r2, r3
  03cc0	e1a00803	 mov         r0, r3, lsl #16
  03cc4	e1a00820	 mov         r0, r0, lsr #16
  03cc8	e59d1080	 ldr         r1, [sp, #0x80]
  03ccc	e3a03010	 mov         r3, #0x10
  03cd0	e0020391	 mul         r2, r1, r3
  03cd4	e59d300c	 ldr         r3, [sp, #0xC]
  03cd8	e0833002	 add         r3, r3, r2
  03cdc	e2833006	 add         r3, r3, #6
  03ce0	e1c300b0	 strh        r0, [r3]

; 1358 : 
; 1359 :         pEP->dwRxDMASize = size;

  03ce4	e59d3020	 ldr         r3, [sp, #0x20]
  03ce8	e2832024	 add         r2, r3, #0x24
  03cec	e59d3024	 ldr         r3, [sp, #0x24]
  03cf0	e5823000	 str         r3, [r2]

; 1360 :         ProcessDMAChannel(pPdd, (UCHAR) endpoint, MUSB_RX_DMA_CHN, FALSE, dwDMAPhysAddr, size, pEP->maxPacketSize);

  03cf4	e59d3020	 ldr         r3, [sp, #0x20]
  03cf8	e1d330b0	 ldrh        r3, [r3]
  03cfc	e58d3008	 str         r3, [sp, #8]
  03d00	e59d3024	 ldr         r3, [sp, #0x24]
  03d04	e58d3004	 str         r3, [sp, #4]
  03d08	e59d3028	 ldr         r3, [sp, #0x28]
  03d0c	e58d3000	 str         r3, [sp]
  03d10	e3a03000	 mov         r3, #0
  03d14	e3a02001	 mov         r2, #1
  03d18	e59d1080	 ldr         r1, [sp, #0x80]
  03d1c	e20110ff	 and         r1, r1, #0xFF
  03d20	e59d007c	 ldr         r0, [sp, #0x7C]
  03d24	eb000000	 bl          ProcessDMAChannel

; 1361 : 
; 1362 :         if(pPdd->ep[endpoint].bLastRxUsedDMA == FALSE)

  03d28	e59d307c	 ldr         r3, [sp, #0x7C]
  03d2c	e28310ac	 add         r1, r3, #0xAC
  03d30	e59d2080	 ldr         r2, [sp, #0x80]
  03d34	e3a03034	 mov         r3, #0x34
  03d38	e0030392	 mul         r3, r2, r3
  03d3c	e0813003	 add         r3, r1, r3
  03d40	e2833030	 add         r3, r3, #0x30
  03d44	e5933000	 ldr         r3, [r3]
  03d48	e3530000	 cmp         r3, #0
  03d4c	1a000013	 bne         |$LN2@StartRxDma|

; 1363 :             CLRREG16(&pCsrRegs->ep[endpoint].RxCSR, RXCSR_P_RXPKTRDY);

  03d50	e59d1080	 ldr         r1, [sp, #0x80]
  03d54	e3a03010	 mov         r3, #0x10
  03d58	e0020391	 mul         r2, r1, r3
  03d5c	e59d300c	 ldr         r3, [sp, #0xC]
  03d60	e0833002	 add         r3, r3, r2
  03d64	e2833006	 add         r3, r3, #6
  03d68	e1d330b0	 ldrh        r3, [r3]
  03d6c	e1a02003	 mov         r2, r3
  03d70	e3e03001	 mvn         r3, #1
  03d74	e0023003	 and         r3, r2, r3
  03d78	e1a00803	 mov         r0, r3, lsl #16
  03d7c	e1a00820	 mov         r0, r0, lsr #16
  03d80	e59d1080	 ldr         r1, [sp, #0x80]
  03d84	e3a03010	 mov         r3, #0x10
  03d88	e0020391	 mul         r2, r1, r3
  03d8c	e59d300c	 ldr         r3, [sp, #0xC]
  03d90	e0833002	 add         r3, r3, r2
  03d94	e2833006	 add         r3, r3, #6
  03d98	e1c300b0	 strh        r0, [r3]

; 1364 :         else

  03d9c	ea000008	 b           |$LN1@StartRxDma|
  03da0		 |$LN2@StartRxDma|

; 1365 :             pPdd->ep[endpoint].bLastRxUsedDMA = FALSE;

  03da0	e59d307c	 ldr         r3, [sp, #0x7C]
  03da4	e28310ac	 add         r1, r3, #0xAC
  03da8	e59d2080	 ldr         r2, [sp, #0x80]
  03dac	e3a03034	 mov         r3, #0x34
  03db0	e0030392	 mul         r3, r2, r3
  03db4	e0813003	 add         r3, r1, r3
  03db8	e2832030	 add         r2, r3, #0x30
  03dbc	e3a03000	 mov         r3, #0
  03dc0	e5823000	 str         r3, [r2]
  03dc4		 |$LN1@StartRxDma|
  03dc4		 |$LN3@StartRxDma|

; 1366 :     }
; 1367 :     LeaveCriticalSection(&pPdd->dmaCS);

  03dc4	e59d307c	 ldr         r3, [sp, #0x7C]
  03dc8	e2830034	 add         r0, r3, #0x34
  03dcc	eb000000	 bl          LeaveCriticalSection

; 1368 :     
; 1369 :     rc = ERROR_SUCCESS;

  03dd0	e3a03000	 mov         r3, #0
  03dd4	e58d3010	 str         r3, [sp, #0x10]
  03dd8		 |$cleanUp$48151|

; 1370 :     
; 1371 : cleanUp:
; 1372 :     
; 1373 :     return rc;

  03dd8	e59d3010	 ldr         r3, [sp, #0x10]
  03ddc	e58d303c	 str         r3, [sp, #0x3C]
  03de0		 |$LN14@StartRxDma|

; 1374 : }

  03de0	e59d003c	 ldr         r0, [sp, #0x3C]
  03de4	e28dd074	 add         sp, sp, #0x74
  03de8	e89d6000	 ldmia       sp, {sp, lr}
  03dec	e12fff1e	 bx          lr
  03df0		 |$LN35@StartRxDma|
  03df0		 |$LN36@StartRxDma|
  03df0	00000000	 DCD         |??_C@_1IG@LOAMGDPB@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5@|
  03df4		 |$LN37@StartRxDma|
  03df4	00000000	 DCD         |dpCurSettings|
  03df8		 |$M50109|

			 ENDP  ; |StartRxDmaTransfer|

	EXPORT	|??_C@_1OG@PJICFEBH@?$AA?$CK?$AA?$CK?$AA?$CK?$AAP?$AAr?$AAe?$AAD?$AAm?$AAa?$AA?5?$AA?$CI?$AAN?$AAo?$AAn?$AAD?$AAV?$AAF?$AAS?$AA?$CJ?$AA?5?$AAD?$AAm?$AAa?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1OA@NCCHFEEP@?$AA?$CK?$AA?$CK?$AA?$CK?$AAP?$AAr?$AAe?$AAD?$AAm?$AAa?$AA?5?$AA?$CI?$AAD?$AAV?$AAF?$AAS?$AA?$CJ?$AA?5?$AAD?$AAm?$AAa?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAe?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@OIJFDOEO@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AAD?$AAV?$AAF?$AAS?$AA?5?$AAi?$AAn?$AA?5?$AAp?$AAr?$AAo?$AAg?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAw?$AAa?$AAi?$AAt?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@LOFAKONP@?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAP?$AAr?$AAe?$AAD?$AAm?$AAa?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAw@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@JKCCBCLM@?$AA?$CL?$AAP?$AAr?$AAe?$AAD?$AAm?$AAa?$AAA?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|Sleep|
	IMPORT	|WaitForSingleObject|

  00098			 AREA	 |.pdata|, PDATA
|$T50151| DCD	|$LN28@PreDmaActi|
	DCD	0x40010f04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1OG@PJICFEBH@?$AA?$CK?$AA?$CK?$AA?$CK?$AAP?$AAr?$AAe?$AAD?$AAm?$AAa?$AA?5?$AA?$CI?$AAN?$AAo?$AAn?$AAD?$AAV?$AAF?$AAS?$AA?$CJ?$AA?5?$AAD?$AAm?$AAa?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ@| DCB "*"
	DCB	0x0, "*", 0x0, "*", 0x0, "P", 0x0, "r", 0x0, "e", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, " ", 0x0, "(", 0x0, "N", 0x0, "o"
	DCB	0x0, "n", 0x0, "D", 0x0, "V", 0x0, "F", 0x0, "S", 0x0, ")"
	DCB	0x0, " ", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "C", 0x0, "o"
	DCB	0x0, "u", 0x0, "n", 0x0, "t", 0x0, "(", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, " ", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "p"
	DCB	0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, " ", 0x0, "T", 0x0, "x", 0x0, "0"
	DCB	0x0, "R", 0x0, "x", 0x0, "1", 0x0, "(", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, " ", 0x0, "p", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, " "
	DCB	0x0, "p", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, " ", 0x0, "c", 0x0, "B", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, "(", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, " ", 0x0, "c", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "("
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1OA@NCCHFEEP@?$AA?$CK?$AA?$CK?$AA?$CK?$AAP?$AAr?$AAe?$AAD?$AAm?$AAa?$AA?5?$AA?$CI?$AAD?$AAV?$AAF?$AAS?$AA?$CJ?$AA?5?$AAD?$AAm?$AAa?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAe?$AAn@| DCB "*"
	DCB	0x0, "*", 0x0, "*", 0x0, "P", 0x0, "r", 0x0, "e", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, " ", 0x0, "(", 0x0, "D", 0x0, "V"
	DCB	0x0, "F", 0x0, "S", 0x0, ")", 0x0, " ", 0x0, "D", 0x0, "m"
	DCB	0x0, "a", 0x0, "C", 0x0, "o", 0x0, "u", 0x0, "n", 0x0, "t"
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, " ", 0x0, "e"
	DCB	0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, " "
	DCB	0x0, "T", 0x0, "x", 0x0, "0", 0x0, "R", 0x0, "x", 0x0, "1"
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, " ", 0x0, "p"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ")", 0x0, " ", 0x0, "p", 0x0, "B", 0x0, "u"
	DCB	0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, " ", 0x0, "c"
	DCB	0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, " ", 0x0, "c"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@OIJFDOEO@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AAD?$AAV?$AAF?$AAS?$AA?5?$AAi?$AAn?$AA?5?$AAp?$AAr?$AAo?$AAg?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAw?$AAa?$AAi?$AAt?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe@| DCB "*"
	DCB	0x0, "*", 0x0, "*", 0x0, " ", 0x0, "D", 0x0, "V", 0x0, "F"
	DCB	0x0, "S", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "p"
	DCB	0x0, "r", 0x0, "o", 0x0, "g", 0x0, "r", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, " ", 0x0, "w", 0x0, "a", 0x0, "i", 0x0, "t"
	DCB	0x0, " ", 0x0, "b", 0x0, "e", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, "e", 0x0, " ", 0x0, "d", 0x0, "o", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@LOFAKONP@?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAP?$AAr?$AAe?$AAD?$AAm?$AAa?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAw@| DCB "!"
	DCB	0x0, "!", 0x0, "!", 0x0, " ", 0x0, "E", 0x0, "R", 0x0, "R"
	DCB	0x0, "O", 0x0, "R", 0x0, " ", 0x0, "=", 0x0, ">", 0x0, " "
	DCB	0x0, "P", 0x0, "r", 0x0, "e", 0x0, "D", 0x0, "m", 0x0, "a"
	DCB	0x0, "A", 0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v", 0x0, "i"
	DCB	0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, "w", 0x0, "r", 0x0, "o", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "E", 0x0, "P"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@JKCCBCLM@?$AA?$CL?$AAP?$AAr?$AAe?$AAD?$AAm?$AAa?$AAA?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "P", 0x0, "r", 0x0, "e", 0x0, "D", 0x0, "m", 0x0, "a"
	DCB	0x0, "A", 0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  03df8			 AREA	 |.text|, CODE, ARM

  03df8		 |PreDmaActivation| PROC

; 169  : {

  03df8		 |$LN28@PreDmaActi|
  03df8	e1a0c00d	 mov         r12, sp
  03dfc	e92d0007	 stmdb       sp!, {r0 - r2}
  03e00	e92d5000	 stmdb       sp!, {r12, lr}
  03e04	e24dd080	 sub         sp, sp, #0x80
  03e08		 |$M50148|

; 170  : #ifdef DEBUG
; 171  : 	MUsbFnEp_t *pEP = &pPdd->ep[endPoint];

  03e08	e59d3088	 ldr         r3, [sp, #0x88]
  03e0c	e28310ac	 add         r1, r3, #0xAC
  03e10	e59d208c	 ldr         r2, [sp, #0x8C]
  03e14	e3a03034	 mov         r3, #0x34
  03e18	e0030392	 mul         r3, r2, r3
  03e1c	e0813003	 add         r3, r1, r3
  03e20	e58d3014	 str         r3, [sp, #0x14]

; 172  :     STransfer *pTransfer = pEP->pTransfer;

  03e24	e59d3014	 ldr         r3, [sp, #0x14]
  03e28	e2833020	 add         r3, r3, #0x20
  03e2c	e5933000	 ldr         r3, [r3]
  03e30	e58d3010	 str         r3, [sp, #0x10]

; 173  : #endif    
; 174  : 
; 175  : 	UNREFERENCED_PARAMETER(TxRx);
; 176  : 
; 177  :     DEBUGMSG(ZONE_FUNCTION, (
; 178  :         L"+PreDmaActivation\r\n"
; 179  :     ));

  03e34	e59f33e4	 ldr         r3, [pc, #0x3E4]
  03e38	e5933440	 ldr         r3, [r3, #0x440]
  03e3c	e3130a01	 tst         r3, #1, 20
  03e40	0a00000f	 beq         |$LN12@PreDmaActi|
  03e44	e59f33d4	 ldr         r3, [pc, #0x3D4]
  03e48	e5933440	 ldr         r3, [r3, #0x440]
  03e4c	e3130801	 tst         r3, #1, 16
  03e50	0a000004	 beq         |$LN10@PreDmaActi|
  03e54	e59f03d4	 ldr         r0, [pc, #0x3D4]
  03e58	eb000000	 bl          CeLogMsg
  03e5c	e3a03001	 mov         r3, #1
  03e60	e58d305c	 str         r3, [sp, #0x5C]
  03e64	ea000003	 b           |$LN11@PreDmaActi|
  03e68		 |$LN10@PreDmaActi|
  03e68	e59f03c0	 ldr         r0, [pc, #0x3C0]
  03e6c	eb000000	 bl          NKDbgPrintfW
  03e70	e3a03000	 mov         r3, #0
  03e74	e58d305c	 str         r3, [sp, #0x5C]
  03e78		 |$LN11@PreDmaActi|
  03e78	e3a03001	 mov         r3, #1
  03e7c	e58d3060	 str         r3, [sp, #0x60]
  03e80	ea000001	 b           |$LN13@PreDmaActi|
  03e84		 |$LN12@PreDmaActi|
  03e84	e3a03000	 mov         r3, #0
  03e88	e58d3060	 str         r3, [sp, #0x60]
  03e8c		 |$LN13@PreDmaActi|

; 180  : 
; 181  :     if (pPdd->ep[endPoint].dmaDVFSstate != DVFS_PREDMA)

  03e8c	e59d3088	 ldr         r3, [sp, #0x88]
  03e90	e28310ac	 add         r1, r3, #0xAC
  03e94	e59d208c	 ldr         r2, [sp, #0x8C]
  03e98	e3a03034	 mov         r3, #0x34
  03e9c	e0030392	 mul         r3, r2, r3
  03ea0	e0813003	 add         r3, r1, r3
  03ea4	e283302c	 add         r3, r3, #0x2C
  03ea8	e5d33000	 ldrb        r3, [r3]
  03eac	e3530001	 cmp         r3, #1
  03eb0	0a000009	 beq         |$LN7@PreDmaActi|

; 182  :         pPdd->ep[endPoint].dmaDVFSstate = DVFS_PREDMA;

  03eb4	e59d3088	 ldr         r3, [sp, #0x88]
  03eb8	e28310ac	 add         r1, r3, #0xAC
  03ebc	e59d208c	 ldr         r2, [sp, #0x8C]
  03ec0	e3a03034	 mov         r3, #0x34
  03ec4	e0030392	 mul         r3, r2, r3
  03ec8	e0813003	 add         r3, r1, r3
  03ecc	e283202c	 add         r2, r3, #0x2C
  03ed0	e3a03001	 mov         r3, #1
  03ed4	e5c23000	 strb        r3, [r2]

; 183  :     else

  03ed8	ea00000a	 b           |$LN6@PreDmaActi|
  03edc		 |$LN7@PreDmaActi|

; 184  :         RETAILMSG(1, (TEXT("!!! ERROR => PreDmaActiviation wrong for EP %d, state %d\r\n"),
; 185  :             endPoint, pPdd->ep[endPoint].dmaDVFSstate));

  03edc	e59d3088	 ldr         r3, [sp, #0x88]
  03ee0	e28310ac	 add         r1, r3, #0xAC
  03ee4	e59d208c	 ldr         r2, [sp, #0x8C]
  03ee8	e3a03034	 mov         r3, #0x34
  03eec	e0030392	 mul         r3, r2, r3
  03ef0	e0813003	 add         r3, r1, r3
  03ef4	e283302c	 add         r3, r3, #0x2C
  03ef8	e5d32000	 ldrb        r2, [r3]
  03efc	e59d108c	 ldr         r1, [sp, #0x8C]
  03f00	e59f0324	 ldr         r0, [pc, #0x324]
  03f04	eb000000	 bl          NKDbgPrintfW
  03f08		 |$LN6@PreDmaActi|
  03f08		 |$LN5@PreDmaActi|

; 186  : 
; 187  :     for(;;)
; 188  :     {
; 189  :     
; 190  :         // this operation needs to be atomic to handle a corner case
; 191  :         EnterCriticalSection(&pPdd->csDVFS);

  03f08	e59d3088	 ldr         r3, [sp, #0x88]
  03f0c	e2833b01	 add         r3, r3, #1, 22
  03f10	e2830014	 add         r0, r3, #0x14
  03f14	eb000000	 bl          EnterCriticalSection

; 192  : 
; 193  :         // check and wait for DVFS activity to complete
; 194  :         if (pPdd->bDVFSActive == TRUE)

  03f18	e59d3088	 ldr         r3, [sp, #0x88]
  03f1c	e2833b01	 add         r3, r3, #1, 22
  03f20	e5933000	 ldr         r3, [r3]
  03f24	e3530001	 cmp         r3, #1
  03f28	1a00006a	 bne         |$LN3@PreDmaActi|

; 195  :         {
; 196  :             DWORD dwRet;
; 197  : 
; 198  :             DEBUGMSG(ZONE_FUNCTION, (L"*** DVFS in progress wait before doing DMA\r\n"));

  03f2c	e59f32ec	 ldr         r3, [pc, #0x2EC]
  03f30	e5933440	 ldr         r3, [r3, #0x440]
  03f34	e3130a01	 tst         r3, #1, 20
  03f38	0a00000f	 beq         |$LN16@PreDmaActi|
  03f3c	e59f32dc	 ldr         r3, [pc, #0x2DC]
  03f40	e5933440	 ldr         r3, [r3, #0x440]
  03f44	e3130801	 tst         r3, #1, 16
  03f48	0a000004	 beq         |$LN14@PreDmaActi|
  03f4c	e59f02d4	 ldr         r0, [pc, #0x2D4]
  03f50	eb000000	 bl          CeLogMsg
  03f54	e3a03001	 mov         r3, #1
  03f58	e58d3064	 str         r3, [sp, #0x64]
  03f5c	ea000003	 b           |$LN15@PreDmaActi|
  03f60		 |$LN14@PreDmaActi|
  03f60	e59f02c0	 ldr         r0, [pc, #0x2C0]
  03f64	eb000000	 bl          NKDbgPrintfW
  03f68	e3a03000	 mov         r3, #0
  03f6c	e58d3064	 str         r3, [sp, #0x64]
  03f70		 |$LN15@PreDmaActi|
  03f70	e3a03001	 mov         r3, #1
  03f74	e58d3068	 str         r3, [sp, #0x68]
  03f78	ea000001	 b           |$LN17@PreDmaActi|
  03f7c		 |$LN16@PreDmaActi|
  03f7c	e3a03000	 mov         r3, #0
  03f80	e58d3068	 str         r3, [sp, #0x68]
  03f84		 |$LN17@PreDmaActi|

; 199  :             dwRet = WaitForSingleObject(pPdd->hDVFSActivityEvent, 0);

  03f84	e3a01000	 mov         r1, #0
  03f88	e59d3088	 ldr         r3, [sp, #0x88]
  03f8c	e2833e41	 add         r3, r3, #0x41, 28
  03f90	e5930000	 ldr         r0, [r3]
  03f94	eb000000	 bl          WaitForSingleObject
  03f98	e58d006c	 str         r0, [sp, #0x6C]
  03f9c	e59d306c	 ldr         r3, [sp, #0x6C]
  03fa0	e58d3018	 str         r3, [sp, #0x18]

; 200  :             if (dwRet != WAIT_TIMEOUT)

  03fa4	e59d2018	 ldr         r2, [sp, #0x18]
  03fa8	e3a03c01	 mov         r3, #1, 24
  03fac	e3833002	 orr         r3, r3, #2
  03fb0	e1520003	 cmp         r2, r3
  03fb4	0a000046	 beq         |$LN2@PreDmaActi|

; 201  :             {
; 202  :                 InterlockedIncrement(&pPdd->nActiveDmaCount);

  03fb8	e59d3088	 ldr         r3, [sp, #0x88]
  03fbc	e2833b01	 add         r3, r3, #1, 22
  03fc0	e2830008	 add         r0, r3, #8
  03fc4	eb000000	 bl          InterlockedIncrement

; 203  :                 DEBUGMSG(ZONE_DVFS, (L"***PreDma (DVFS) DmaCount(%d) endpoint(%d) Tx0Rx1(%d) pTransfer(0x%x) pBuffer(0x%x) cBuffer(%d) cTransfer(%d)\r\n",
; 204  :                     pPdd->nActiveDmaCount,endPoint, TxRx, pTransfer, pTransfer->pvBuffer, pTransfer->cbBuffer, pTransfer->cbTransferred));

  03fc8	e59f3250	 ldr         r3, [pc, #0x250]
  03fcc	e5933440	 ldr         r3, [r3, #0x440]
  03fd0	e3130b02	 tst         r3, #2, 22
  03fd4	0a000037	 beq         |$LN20@PreDmaActi|
  03fd8	e59f3240	 ldr         r3, [pc, #0x240]
  03fdc	e5933440	 ldr         r3, [r3, #0x440]
  03fe0	e3130801	 tst         r3, #1, 16
  03fe4	0a000018	 beq         |$LN18@PreDmaActi|
  03fe8	e59d3010	 ldr         r3, [sp, #0x10]
  03fec	e2833010	 add         r3, r3, #0x10
  03ff0	e5933000	 ldr         r3, [r3]
  03ff4	e58d300c	 str         r3, [sp, #0xC]
  03ff8	e59d3010	 ldr         r3, [sp, #0x10]
  03ffc	e283300c	 add         r3, r3, #0xC
  04000	e5933000	 ldr         r3, [r3]
  04004	e58d3008	 str         r3, [sp, #8]
  04008	e59d3010	 ldr         r3, [sp, #0x10]
  0400c	e2833004	 add         r3, r3, #4
  04010	e5933000	 ldr         r3, [r3]
  04014	e58d3004	 str         r3, [sp, #4]
  04018	e59d3010	 ldr         r3, [sp, #0x10]
  0401c	e58d3000	 str         r3, [sp]
  04020	e59d3090	 ldr         r3, [sp, #0x90]
  04024	e59d208c	 ldr         r2, [sp, #0x8C]
  04028	e59d1088	 ldr         r1, [sp, #0x88]
  0402c	e2811b01	 add         r1, r1, #1, 22
  04030	e2811008	 add         r1, r1, #8
  04034	e5911000	 ldr         r1, [r1]
  04038	e59f01e4	 ldr         r0, [pc, #0x1E4]
  0403c	eb000000	 bl          CeLogMsg
  04040	e3a03001	 mov         r3, #1
  04044	e58d3070	 str         r3, [sp, #0x70]
  04048	ea000017	 b           |$LN19@PreDmaActi|
  0404c		 |$LN18@PreDmaActi|
  0404c	e59d3010	 ldr         r3, [sp, #0x10]
  04050	e2833010	 add         r3, r3, #0x10
  04054	e5933000	 ldr         r3, [r3]
  04058	e58d300c	 str         r3, [sp, #0xC]
  0405c	e59d3010	 ldr         r3, [sp, #0x10]
  04060	e283300c	 add         r3, r3, #0xC
  04064	e5933000	 ldr         r3, [r3]
  04068	e58d3008	 str         r3, [sp, #8]
  0406c	e59d3010	 ldr         r3, [sp, #0x10]
  04070	e2833004	 add         r3, r3, #4
  04074	e5933000	 ldr         r3, [r3]
  04078	e58d3004	 str         r3, [sp, #4]
  0407c	e59d3010	 ldr         r3, [sp, #0x10]
  04080	e58d3000	 str         r3, [sp]
  04084	e59d3090	 ldr         r3, [sp, #0x90]
  04088	e59d208c	 ldr         r2, [sp, #0x8C]
  0408c	e59d1088	 ldr         r1, [sp, #0x88]
  04090	e2811b01	 add         r1, r1, #1, 22
  04094	e2811008	 add         r1, r1, #8
  04098	e5911000	 ldr         r1, [r1]
  0409c	e59f0180	 ldr         r0, [pc, #0x180]
  040a0	eb000000	 bl          NKDbgPrintfW
  040a4	e3a03000	 mov         r3, #0
  040a8	e58d3070	 str         r3, [sp, #0x70]
  040ac		 |$LN19@PreDmaActi|
  040ac	e3a03001	 mov         r3, #1
  040b0	e58d3074	 str         r3, [sp, #0x74]
  040b4	ea000001	 b           |$LN21@PreDmaActi|
  040b8		 |$LN20@PreDmaActi|
  040b8	e3a03000	 mov         r3, #0
  040bc	e58d3074	 str         r3, [sp, #0x74]
  040c0		 |$LN21@PreDmaActi|

; 205  :                 LeaveCriticalSection(&pPdd->csDVFS);

  040c0	e59d3088	 ldr         r3, [sp, #0x88]
  040c4	e2833b01	 add         r3, r3, #1, 22
  040c8	e2830014	 add         r0, r3, #0x14
  040cc	eb000000	 bl          LeaveCriticalSection

; 206  :                 break;

  040d0	ea00004e	 b           |$LN4@PreDmaActi|
  040d4		 |$LN2@PreDmaActi|

; 207  :             }
; 208  :         }
; 209  :         else

  040d4	ea000046	 b           |$LN1@PreDmaActi|
  040d8		 |$LN3@PreDmaActi|

; 210  :         {
; 211  :             InterlockedIncrement(&pPdd->nActiveDmaCount);

  040d8	e59d3088	 ldr         r3, [sp, #0x88]
  040dc	e2833b01	 add         r3, r3, #1, 22
  040e0	e2830008	 add         r0, r3, #8
  040e4	eb000000	 bl          InterlockedIncrement

; 212  :             DEBUGMSG(ZONE_DVFS, (L"***PreDma (NonDVFS) DmaCount(%d) endpoint(%d) Tx0Rx1(%d) pTransfer(0x%x) pBuffer(0x%x) cBuffer(%d) cTransfer(%d)\r\n",
; 213  :                 pPdd->nActiveDmaCount,endPoint, TxRx, pTransfer, pTransfer->pvBuffer, pTransfer->cbBuffer, pTransfer->cbTransferred));

  040e8	e59f3130	 ldr         r3, [pc, #0x130]
  040ec	e5933440	 ldr         r3, [r3, #0x440]
  040f0	e3130b02	 tst         r3, #2, 22
  040f4	0a000037	 beq         |$LN24@PreDmaActi|
  040f8	e59f3120	 ldr         r3, [pc, #0x120]
  040fc	e5933440	 ldr         r3, [r3, #0x440]
  04100	e3130801	 tst         r3, #1, 16
  04104	0a000018	 beq         |$LN22@PreDmaActi|
  04108	e59d3010	 ldr         r3, [sp, #0x10]
  0410c	e2833010	 add         r3, r3, #0x10
  04110	e5933000	 ldr         r3, [r3]
  04114	e58d300c	 str         r3, [sp, #0xC]
  04118	e59d3010	 ldr         r3, [sp, #0x10]
  0411c	e283300c	 add         r3, r3, #0xC
  04120	e5933000	 ldr         r3, [r3]
  04124	e58d3008	 str         r3, [sp, #8]
  04128	e59d3010	 ldr         r3, [sp, #0x10]
  0412c	e2833004	 add         r3, r3, #4
  04130	e5933000	 ldr         r3, [r3]
  04134	e58d3004	 str         r3, [sp, #4]
  04138	e59d3010	 ldr         r3, [sp, #0x10]
  0413c	e58d3000	 str         r3, [sp]
  04140	e59d3090	 ldr         r3, [sp, #0x90]
  04144	e59d208c	 ldr         r2, [sp, #0x8C]
  04148	e59d1088	 ldr         r1, [sp, #0x88]
  0414c	e2811b01	 add         r1, r1, #1, 22
  04150	e2811008	 add         r1, r1, #8
  04154	e5911000	 ldr         r1, [r1]
  04158	e59f00bc	 ldr         r0, [pc, #0xBC]
  0415c	eb000000	 bl          CeLogMsg
  04160	e3a03001	 mov         r3, #1
  04164	e58d3078	 str         r3, [sp, #0x78]
  04168	ea000017	 b           |$LN23@PreDmaActi|
  0416c		 |$LN22@PreDmaActi|
  0416c	e59d3010	 ldr         r3, [sp, #0x10]
  04170	e2833010	 add         r3, r3, #0x10
  04174	e5933000	 ldr         r3, [r3]
  04178	e58d300c	 str         r3, [sp, #0xC]
  0417c	e59d3010	 ldr         r3, [sp, #0x10]
  04180	e283300c	 add         r3, r3, #0xC
  04184	e5933000	 ldr         r3, [r3]
  04188	e58d3008	 str         r3, [sp, #8]
  0418c	e59d3010	 ldr         r3, [sp, #0x10]
  04190	e2833004	 add         r3, r3, #4
  04194	e5933000	 ldr         r3, [r3]
  04198	e58d3004	 str         r3, [sp, #4]
  0419c	e59d3010	 ldr         r3, [sp, #0x10]
  041a0	e58d3000	 str         r3, [sp]
  041a4	e59d3090	 ldr         r3, [sp, #0x90]
  041a8	e59d208c	 ldr         r2, [sp, #0x8C]
  041ac	e59d1088	 ldr         r1, [sp, #0x88]
  041b0	e2811b01	 add         r1, r1, #1, 22
  041b4	e2811008	 add         r1, r1, #8
  041b8	e5911000	 ldr         r1, [r1]
  041bc	e59f0058	 ldr         r0, [pc, #0x58]
  041c0	eb000000	 bl          NKDbgPrintfW
  041c4	e3a03000	 mov         r3, #0
  041c8	e58d3078	 str         r3, [sp, #0x78]
  041cc		 |$LN23@PreDmaActi|
  041cc	e3a03001	 mov         r3, #1
  041d0	e58d307c	 str         r3, [sp, #0x7C]
  041d4	ea000001	 b           |$LN25@PreDmaActi|
  041d8		 |$LN24@PreDmaActi|
  041d8	e3a03000	 mov         r3, #0
  041dc	e58d307c	 str         r3, [sp, #0x7C]
  041e0		 |$LN25@PreDmaActi|

; 214  : 
; 215  :             LeaveCriticalSection(&pPdd->csDVFS);

  041e0	e59d3088	 ldr         r3, [sp, #0x88]
  041e4	e2833b01	 add         r3, r3, #1, 22
  041e8	e2830014	 add         r0, r3, #0x14
  041ec	eb000000	 bl          LeaveCriticalSection

; 216  :             break;

  041f0	ea000006	 b           |$LN4@PreDmaActi|
  041f4		 |$LN1@PreDmaActi|

; 217  :         }
; 218  :         LeaveCriticalSection(&pPdd->csDVFS);  // hDVFSActivityEvent not signaled

  041f4	e59d3088	 ldr         r3, [sp, #0x88]
  041f8	e2833b01	 add         r3, r3, #1, 22
  041fc	e2830014	 add         r0, r3, #0x14
  04200	eb000000	 bl          LeaveCriticalSection

; 219  :         Sleep(1);

  04204	e3a00001	 mov         r0, #1
  04208	eb000000	 bl          Sleep

; 220  :     }

  0420c	eaffff3d	 b           |$LN5@PreDmaActi|
  04210		 |$LN4@PreDmaActi|

; 221  : 
; 222  : }

  04210	e28dd080	 add         sp, sp, #0x80
  04214	e89d6000	 ldmia       sp, {sp, lr}
  04218	e12fff1e	 bx          lr
  0421c		 |$LN29@PreDmaActi|
  0421c		 |$LN30@PreDmaActi|
  0421c	00000000	 DCD         |??_C@_1OG@PJICFEBH@?$AA?$CK?$AA?$CK?$AA?$CK?$AAP?$AAr?$AAe?$AAD?$AAm?$AAa?$AA?5?$AA?$CI?$AAN?$AAo?$AAn?$AAD?$AAV?$AAF?$AAS?$AA?$CJ?$AA?5?$AAD?$AAm?$AAa?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ@|
  04220		 |$LN31@PreDmaActi|
  04220	00000000	 DCD         |dpCurSettings|
  04224		 |$LN32@PreDmaActi|
  04224	00000000	 DCD         |??_C@_1OA@NCCHFEEP@?$AA?$CK?$AA?$CK?$AA?$CK?$AAP?$AAr?$AAe?$AAD?$AAm?$AAa?$AA?5?$AA?$CI?$AAD?$AAV?$AAF?$AAS?$AA?$CJ?$AA?5?$AAD?$AAm?$AAa?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAe?$AAn@|
  04228		 |$LN33@PreDmaActi|
  04228	00000000	 DCD         |??_C@_1FK@OIJFDOEO@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AAD?$AAV?$AAF?$AAS?$AA?5?$AAi?$AAn?$AA?5?$AAp?$AAr?$AAo?$AAg?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAw?$AAa?$AAi?$AAt?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe@|
  0422c		 |$LN34@PreDmaActi|
  0422c	00000000	 DCD         |??_C@_1HG@LOFAKONP@?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAP?$AAr?$AAe?$AAD?$AAm?$AAa?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAw@|
  04230		 |$LN35@PreDmaActi|
  04230	00000000	 DCD         |??_C@_1CI@JKCCBCLM@?$AA?$CL?$AAP?$AAr?$AAe?$AAD?$AAm?$AAa?$AAA?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  04234		 |$M50149|

			 ENDP  ; |PreDmaActivation|

	EXPORT	|??_C@_1FI@JGNHCNBL@?$AAD?$AAM?$AAA?$AA?5?$AAA?$AAd?$AAd?$AAr?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAC@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@MMPOJBNP@?$AAD?$AAM?$AAA?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@GDIFBNIM@?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAD?$AAM?$AAA?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?5?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?$CF?$AAd?$AA?5?$AA?5@| [ DATA ] ; `string'

  000a0			 AREA	 |.pdata|, PDATA
|$T50176| DCD	|$LN25@ProcessDMA|
	DCD	0x4000b704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@JGNHCNBL@?$AAD?$AAM?$AAA?$AA?5?$AAA?$AAd?$AAd?$AAr?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAC@| DCB "D"
	DCB	0x0, "M", 0x0, "A", 0x0, " ", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, " ", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ")", 0x0, ",", 0x0, " ", 0x0, "C", 0x0, "o"
	DCB	0x0, "u", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, ",", 0x0, " "
	DCB	0x0, "C", 0x0, "n", 0x0, "t", 0x0, "l", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@MMPOJBNP@?$AAD?$AAM?$AAA?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "M", 0x0, "A", 0x0, " ", 0x0, "C", 0x0, "h", 0x0, "a"
	DCB	0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@GDIFBNIM@?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAD?$AAM?$AAA?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?5?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?$CF?$AAd?$AA?5?$AA?5@| DCB "P"
	DCB	0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, "D", 0x0, "M", 0x0, "A", 0x0, "C", 0x0, "h", 0x0, "a"
	DCB	0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, " ", 0x0, " "
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i"
	DCB	0x0, "n", 0x0, "t", 0x0, ":", 0x0, "%", 0x0, "d", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, "c", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  04234			 AREA	 |.text|, CODE, ARM

  04234		 |ProcessDMAChannel| PROC

; 896  : {

  04234		 |$LN25@ProcessDMA|
  04234	e1a0c00d	 mov         r12, sp
  04238	e92d000f	 stmdb       sp!, {r0 - r3}
  0423c	e92d5000	 stmdb       sp!, {r12, lr}
  04240	e24dd024	 sub         sp, sp, #0x24
  04244		 |$M50173|

; 897  :     PHSMUSB_T pOTG =(PHSMUSB_T)(pPdd->pUSBContext);

  04244	e59d302c	 ldr         r3, [sp, #0x2C]
  04248	e2833020	 add         r3, r3, #0x20
  0424c	e5933000	 ldr         r3, [r3]
  04250	e58d3004	 str         r3, [sp, #4]

; 898  :     DWORD dmacntl = 0;

  04254	e3a03000	 mov         r3, #0
  04258	e58d3000	 str         r3, [sp]

; 899  :     
; 900  :     DEBUGMSG(ZONE_FUNCTION, (TEXT("ProcessDMAChannel  endpoint:%d   channel:%d\r\n"), endpoint, channel));

  0425c	e59f32a0	 ldr         r3, [pc, #0x2A0]
  04260	e5933440	 ldr         r3, [r3, #0x440]
  04264	e3130a01	 tst         r3, #1, 20
  04268	0a000013	 beq         |$LN13@ProcessDMA|
  0426c	e59f3290	 ldr         r3, [pc, #0x290]
  04270	e5933440	 ldr         r3, [r3, #0x440]
  04274	e3130801	 tst         r3, #1, 16
  04278	0a000006	 beq         |$LN11@ProcessDMA|
  0427c	e5dd2034	 ldrb        r2, [sp, #0x34]
  04280	e5dd1030	 ldrb        r1, [sp, #0x30]
  04284	e59f0280	 ldr         r0, [pc, #0x280]
  04288	eb000000	 bl          CeLogMsg
  0428c	e3a03001	 mov         r3, #1
  04290	e58d300c	 str         r3, [sp, #0xC]
  04294	ea000005	 b           |$LN12@ProcessDMA|
  04298		 |$LN11@ProcessDMA|
  04298	e5dd2034	 ldrb        r2, [sp, #0x34]
  0429c	e5dd1030	 ldrb        r1, [sp, #0x30]
  042a0	e59f0264	 ldr         r0, [pc, #0x264]
  042a4	eb000000	 bl          NKDbgPrintfW
  042a8	e3a03000	 mov         r3, #0
  042ac	e58d300c	 str         r3, [sp, #0xC]
  042b0		 |$LN12@ProcessDMA|
  042b0	e3a03001	 mov         r3, #1
  042b4	e58d3010	 str         r3, [sp, #0x10]
  042b8	ea000001	 b           |$LN14@ProcessDMA|
  042bc		 |$LN13@ProcessDMA|
  042bc	e3a03000	 mov         r3, #0
  042c0	e58d3010	 str         r3, [sp, #0x10]
  042c4		 |$LN14@ProcessDMA|

; 901  :     
; 902  :     //  Now actual configure the DMA channel
; 903  :     //  DMA Mode (D2)
; 904  :     EnterCriticalSection(&pPdd->dmaCS);

  042c4	e59d302c	 ldr         r3, [sp, #0x2C]
  042c8	e2830034	 add         r0, r3, #0x34
  042cc	eb000000	 bl          EnterCriticalSection

; 905  :     if (size > dwMaxPacket)

  042d0	e59d2040	 ldr         r2, [sp, #0x40]
  042d4	e59d3044	 ldr         r3, [sp, #0x44]
  042d8	e1520003	 cmp         r2, r3
  042dc	9a000002	 bls         |$LN8@ProcessDMA|

; 906  :         dmacntl |= DMA_CNTL_DMAMode;

  042e0	e59d3000	 ldr         r3, [sp]
  042e4	e3833004	 orr         r3, r3, #4
  042e8	e58d3000	 str         r3, [sp]
  042ec		 |$LN8@ProcessDMA|

; 907  :     //  Burst Mode (D10-9)
; 908  :     if (dwMaxPacket >= 64)

  042ec	e59d3044	 ldr         r3, [sp, #0x44]
  042f0	e3530040	 cmp         r3, #0x40
  042f4	3a000003	 bcc         |$LN7@ProcessDMA|

; 909  :         dmacntl |= BURSTMODE_INCR16;

  042f8	e59d3000	 ldr         r3, [sp]
  042fc	e3833c06	 orr         r3, r3, #6, 24
  04300	e58d3000	 str         r3, [sp]
  04304	ea00000f	 b           |$LN6@ProcessDMA|
  04308		 |$LN7@ProcessDMA|

; 910  :     else if (dwMaxPacket >= 32)

  04308	e59d3044	 ldr         r3, [sp, #0x44]
  0430c	e3530020	 cmp         r3, #0x20
  04310	3a000003	 bcc         |$LN5@ProcessDMA|

; 911  :         dmacntl |= BURSTMODE_INCR8;

  04314	e59d3000	 ldr         r3, [sp]
  04318	e3833b01	 orr         r3, r3, #1, 22
  0431c	e58d3000	 str         r3, [sp]
  04320	ea000008	 b           |$LN4@ProcessDMA|
  04324		 |$LN5@ProcessDMA|

; 912  :     else if (dwMaxPacket >= 16)

  04324	e59d3044	 ldr         r3, [sp, #0x44]
  04328	e3530010	 cmp         r3, #0x10
  0432c	3a000003	 bcc         |$LN3@ProcessDMA|

; 913  :         dmacntl |= BURSTMODE_INCR4;

  04330	e59d3000	 ldr         r3, [sp]
  04334	e3833c02	 orr         r3, r3, #2, 24
  04338	e58d3000	 str         r3, [sp]

; 914  :     else

  0433c	ea000001	 b           |$LN2@ProcessDMA|
  04340		 |$LN3@ProcessDMA|

; 915  :         dmacntl |= BURSTMODE_UNSPEC;

  04340	e59d3000	 ldr         r3, [sp]
  04344	e58d3000	 str         r3, [sp]
  04348		 |$LN2@ProcessDMA|
  04348		 |$LN4@ProcessDMA|
  04348		 |$LN6@ProcessDMA|

; 916  :     
; 917  :     //  Direction (D1) - for sure it is Tx endpoint
; 918  :     //  Interrupt Enable (D3)
; 919  :     //  Enable DMA (D0)
; 920  :     dmacntl |=(DMA_CNTL_Enable | DMA_CNTL_InterruptEnable);

  04348	e59d3000	 ldr         r3, [sp]
  0434c	e3833009	 orr         r3, r3, #9
  04350	e58d3000	 str         r3, [sp]

; 921  :     if (IsTx)

  04354	e59d3038	 ldr         r3, [sp, #0x38]
  04358	e3530000	 cmp         r3, #0
  0435c	0a000002	 beq         |$LN1@ProcessDMA|

; 922  :         dmacntl |= DMA_CNTL_Direction;

  04360	e59d3000	 ldr         r3, [sp]
  04364	e3833002	 orr         r3, r3, #2
  04368	e58d3000	 str         r3, [sp]
  0436c		 |$LN1@ProcessDMA|

; 923  :     
; 924  :     //  Set endpoint number
; 925  :     dmacntl |=(endpoint << 4);

  0436c	e5dd3030	 ldrb        r3, [sp, #0x30]
  04370	e1a02203	 mov         r2, r3, lsl #4
  04374	e59d3000	 ldr         r3, [sp]
  04378	e1833002	 orr         r3, r3, r2
  0437c	e58d3000	 str         r3, [sp]

; 926  :     
; 927  :     DEBUGMSG(ZONE_FUNCTION, (TEXT("DMA Channel %d\r\n"), channel));

  04380	e59f317c	 ldr         r3, [pc, #0x17C]
  04384	e5933440	 ldr         r3, [r3, #0x440]
  04388	e3130a01	 tst         r3, #1, 20
  0438c	0a000011	 beq         |$LN17@ProcessDMA|
  04390	e59f316c	 ldr         r3, [pc, #0x16C]
  04394	e5933440	 ldr         r3, [r3, #0x440]
  04398	e3130801	 tst         r3, #1, 16
  0439c	0a000005	 beq         |$LN15@ProcessDMA|
  043a0	e5dd1034	 ldrb        r1, [sp, #0x34]
  043a4	e59f015c	 ldr         r0, [pc, #0x15C]
  043a8	eb000000	 bl          CeLogMsg
  043ac	e3a03001	 mov         r3, #1
  043b0	e58d3014	 str         r3, [sp, #0x14]
  043b4	ea000004	 b           |$LN16@ProcessDMA|
  043b8		 |$LN15@ProcessDMA|
  043b8	e5dd1034	 ldrb        r1, [sp, #0x34]
  043bc	e59f0144	 ldr         r0, [pc, #0x144]
  043c0	eb000000	 bl          NKDbgPrintfW
  043c4	e3a03000	 mov         r3, #0
  043c8	e58d3014	 str         r3, [sp, #0x14]
  043cc		 |$LN16@ProcessDMA|
  043cc	e3a03001	 mov         r3, #1
  043d0	e58d3018	 str         r3, [sp, #0x18]
  043d4	ea000001	 b           |$LN18@ProcessDMA|
  043d8		 |$LN17@ProcessDMA|
  043d8	e3a03000	 mov         r3, #0
  043dc	e58d3018	 str         r3, [sp, #0x18]
  043e0		 |$LN18@ProcessDMA|

; 928  :     DEBUGMSG(ZONE_FUNCTION, (TEXT("DMA Addr (0x%x), Count (0x%x), Cntl(0x%x)\r\n"),
; 929  :         paData, size, dmacntl));

  043e0	e59f311c	 ldr         r3, [pc, #0x11C]
  043e4	e5933440	 ldr         r3, [r3, #0x440]
  043e8	e3130a01	 tst         r3, #1, 20
  043ec	0a000015	 beq         |$LN21@ProcessDMA|
  043f0	e59f310c	 ldr         r3, [pc, #0x10C]
  043f4	e5933440	 ldr         r3, [r3, #0x440]
  043f8	e3130801	 tst         r3, #1, 16
  043fc	0a000007	 beq         |$LN19@ProcessDMA|
  04400	e59d3000	 ldr         r3, [sp]
  04404	e59d2040	 ldr         r2, [sp, #0x40]
  04408	e59d103c	 ldr         r1, [sp, #0x3C]
  0440c	e59f00ec	 ldr         r0, [pc, #0xEC]
  04410	eb000000	 bl          CeLogMsg
  04414	e3a03001	 mov         r3, #1
  04418	e58d301c	 str         r3, [sp, #0x1C]
  0441c	ea000006	 b           |$LN20@ProcessDMA|
  04420		 |$LN19@ProcessDMA|
  04420	e59d3000	 ldr         r3, [sp]
  04424	e59d2040	 ldr         r2, [sp, #0x40]
  04428	e59d103c	 ldr         r1, [sp, #0x3C]
  0442c	e59f00cc	 ldr         r0, [pc, #0xCC]
  04430	eb000000	 bl          NKDbgPrintfW
  04434	e3a03000	 mov         r3, #0
  04438	e58d301c	 str         r3, [sp, #0x1C]
  0443c		 |$LN20@ProcessDMA|
  0443c	e3a03001	 mov         r3, #1
  04440	e58d3020	 str         r3, [sp, #0x20]
  04444	ea000001	 b           |$LN22@ProcessDMA|
  04448		 |$LN21@ProcessDMA|
  04448	e3a03000	 mov         r3, #0
  0444c	e58d3020	 str         r3, [sp, #0x20]
  04450		 |$LN22@ProcessDMA|

; 930  :     // Write address
; 931  :     OUTREG32(&pOTG->pUsbDmaRegs->dma[channel].Addr, (DWORD)paData);       

  04450	e59d3004	 ldr         r3, [sp, #4]
  04454	e2833024	 add         r3, r3, #0x24
  04458	e5933000	 ldr         r3, [r3]
  0445c	e2831004	 add         r1, r3, #4
  04460	e5dd3034	 ldrb        r3, [sp, #0x34]
  04464	e1a02003	 mov         r2, r3
  04468	e3a03010	 mov         r3, #0x10
  0446c	e0030392	 mul         r3, r2, r3
  04470	e0813003	 add         r3, r1, r3
  04474	e2832004	 add         r2, r3, #4
  04478	e59d303c	 ldr         r3, [sp, #0x3C]
  0447c	e5823000	 str         r3, [r2]

; 932  :     // Write count
; 933  :     OUTREG32(&pOTG->pUsbDmaRegs->dma[channel].Count, (DWORD)size);

  04480	e59d3004	 ldr         r3, [sp, #4]
  04484	e2833024	 add         r3, r3, #0x24
  04488	e5933000	 ldr         r3, [r3]
  0448c	e2831004	 add         r1, r3, #4
  04490	e5dd3034	 ldrb        r3, [sp, #0x34]
  04494	e1a02003	 mov         r2, r3
  04498	e3a03010	 mov         r3, #0x10
  0449c	e0030392	 mul         r3, r2, r3
  044a0	e0813003	 add         r3, r1, r3
  044a4	e2832008	 add         r2, r3, #8
  044a8	e59d3040	 ldr         r3, [sp, #0x40]
  044ac	e5823000	 str         r3, [r2]

; 934  :         
; 935  :     // Write Control
; 936  :     OUTREG32(&pOTG->pUsbDmaRegs->dma[channel].Cntl, (DWORD)dmacntl);

  044b0	e59d3004	 ldr         r3, [sp, #4]
  044b4	e2833024	 add         r3, r3, #0x24
  044b8	e5933000	 ldr         r3, [r3]
  044bc	e2831004	 add         r1, r3, #4
  044c0	e5dd3034	 ldrb        r3, [sp, #0x34]
  044c4	e1a02003	 mov         r2, r3
  044c8	e3a03010	 mov         r3, #0x10
  044cc	e0030392	 mul         r3, r2, r3
  044d0	e0812003	 add         r2, r1, r3
  044d4	e59d3000	 ldr         r3, [sp]
  044d8	e5823000	 str         r3, [r2]

; 937  :     LeaveCriticalSection(&pPdd->dmaCS);

  044dc	e59d302c	 ldr         r3, [sp, #0x2C]
  044e0	e2830034	 add         r0, r3, #0x34
  044e4	eb000000	 bl          LeaveCriticalSection

; 938  :     
; 939  :     return TRUE;

  044e8	e3a03001	 mov         r3, #1
  044ec	e58d3008	 str         r3, [sp, #8]

; 940  : }

  044f0	e59d0008	 ldr         r0, [sp, #8]
  044f4	e28dd024	 add         sp, sp, #0x24
  044f8	e89d6000	 ldmia       sp, {sp, lr}
  044fc	e12fff1e	 bx          lr
  04500		 |$LN26@ProcessDMA|
  04500		 |$LN27@ProcessDMA|
  04500	00000000	 DCD         |??_C@_1FI@JGNHCNBL@?$AAD?$AAM?$AAA?$AA?5?$AAA?$AAd?$AAd?$AAr?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAC@|
  04504		 |$LN28@ProcessDMA|
  04504	00000000	 DCD         |dpCurSettings|
  04508		 |$LN29@ProcessDMA|
  04508	00000000	 DCD         |??_C@_1CC@MMPOJBNP@?$AAD?$AAM?$AAA?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0450c		 |$LN30@ProcessDMA|
  0450c	00000000	 DCD         |??_C@_1FM@GDIFBNIM@?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAD?$AAM?$AAA?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?5?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?$CF?$AAd?$AA?5?$AA?5@|
  04510		 |$M50174|

			 ENDP  ; |ProcessDMAChannel|

	EXPORT	|??_C@_1CG@BNGOCLAM@?$AA?9?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@HPHMIFBK@?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AAO?$AAU?$AAT?$AA?$CJ?$AA?5?$AAR?$AAx?$AAC?$AAS?$AAR?$AA?$DN?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@GEEDPLJM@?$AAA?$AAC?$AAK?$AA?3?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@PDCFGEL@?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@DIOGIKJI@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IA@FHPKIPM@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5@| [ DATA ] ; `string'

  000a8			 AREA	 |.pdata|, PDATA
|$T50249| DCD	|$LN80@StartRxTra|
	DCD	0xc0025c05
|$T50251| DCD	|$LN69@StartRxTra|
	DCD	0x40000502
|$T50253| DCD	|$LN62@StartRxTra|
	DCD	0x40000c02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@BNGOCLAM@?$AA?9?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "R"
	DCB	0x0, "x", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@HPHMIFBK@?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AAO?$AAU?$AAT?$AA?$CJ?$AA?5?$AAR?$AAx?$AAC?$AAS?$AAR?$AA?$DN?$AA0@| DCB "E"
	DCB	0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "I"
	DCB	0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "(", 0x0, "O", 0x0, "U", 0x0, "T", 0x0, ")", 0x0, " "
	DCB	0x0, "R", 0x0, "x", 0x0, "C", 0x0, "S", 0x0, "R", 0x0, "="
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@GEEDPLJM@?$AAA?$AAC?$AAK?$AA?3?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| DCB "A"
	DCB	0x0, "C", 0x0, "K", 0x0, ":", 0x0, " ", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "r", 0x0, "t", 0x0, "R", 0x0, "x", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@PDCFGEL@?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "d", 0x0, ":", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@DIOGIKJI@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "R", 0x0, "x"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "p"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " "
	DCB	0x0, "N", 0x0, "U", 0x0, "L", 0x0, "L", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IA@FHPKIPM@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, "P", 0x0, "d"
	DCB	0x0, "d", 0x0, "!", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "r"
	DCB	0x0, "t", 0x0, "R", 0x0, "x", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "p", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, " "
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00040			 AREA	 |.xdata|, DATA
|$T50247| DCD	0x2
	DCD	|$LN73@StartRxTra|
	DCD	|$LN74@StartRxTra|
	DCD	|$LN69@StartRxTra|
	DCD	|$LN70@StartRxTra|
	DCD	|$LN66@StartRxTra|
	DCD	|$LN67@StartRxTra|
	DCD	|$LN62@StartRxTra|
	DCD	|$LN63@StartRxTra|
; Function compile flags: /Odtp

  04510			 AREA	 |.text|, CODE, ARM

  04510	00000000	 DCD         |__C_specific_handler|
  04514	00000000	 DCD         |$T50247|

  04518		 |StartRxTransfer| PROC

; 1097 : {

  04518		 |$LN80@StartRxTra|
  04518	e1a0c00d	 mov         r12, sp
  0451c	e92d0003	 stmdb       sp!, {r0, r1}
  04520	e92d5800	 stmdb       sp!, {r11, r12, lr}
  04524	e28db00c	 add         r11, sp, #0xC
  04528	e24dd0a4	 sub         sp, sp, #0xA4
  0452c		 |$LN78@StartRxTra|

; 1098 :     DWORD rc = ERROR_INVALID_PARAMETER;

  0452c	e3a03057	 mov         r3, #0x57
  04530	e50b30a4	 str         r3, [r11, #-0xA4]

; 1099 :     MUsbFnEp_t *pEP = &pPdd->ep[endpoint];

  04534	e59b3000	 ldr         r3, [r11]
  04538	e28310ac	 add         r1, r3, #0xAC
  0453c	e59b2004	 ldr         r2, [r11, #4]
  04540	e3a03034	 mov         r3, #0x34
  04544	e0030392	 mul         r3, r2, r3
  04548	e0813003	 add         r3, r1, r3
  0454c	e50b3094	 str         r3, [r11, #-0x94]

; 1100 :     STransfer *pTransfer = pEP->pTransfer;

  04550	e51b3094	 ldr         r3, [r11, #-0x94]
  04554	e2833020	 add         r3, r3, #0x20
  04558	e5933000	 ldr         r3, [r3]
  0455c	e50b3098	 str         r3, [r11, #-0x98]

; 1101 :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUSBContext->pUsbCsrRegs;

  04560	e59b3000	 ldr         r3, [r11]
  04564	e2833020	 add         r3, r3, #0x20
  04568	e5933000	 ldr         r3, [r3]
  0456c	e283301c	 add         r3, r3, #0x1C
  04570	e5933000	 ldr         r3, [r3]
  04574	e50b30a8	 str         r3, [r11, #-0xA8]

; 1102 :     PCSP_MUSB_GEN_REGS pGenRegs = pPdd->pUSBContext->pUsbGenRegs;

  04578	e59b3000	 ldr         r3, [r11]
  0457c	e2833020	 add         r3, r3, #0x20
  04580	e5933000	 ldr         r3, [r3]
  04584	e2833020	 add         r3, r3, #0x20
  04588	e5933000	 ldr         r3, [r3]
  0458c	e50b309c	 str         r3, [r11, #-0x9C]

; 1103 :     BOOL bNotifyDataReady = FALSE;

  04590	e3a03000	 mov         r3, #0
  04594	e50b30a0	 str         r3, [r11, #-0xA0]

; 1104 :     
; 1105 :     DEBUGMSG(ZONE_FUNCTION, (L"UsbFnPdd!StartRxTransfer: "
; 1106 :         L"EP %d pTransfer 0x%08x (%d, %d, %d)\r\n",
; 1107 :         endpoint, pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 1108 :         pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 1109 :         pTransfer != NULL ? pTransfer->dwUsbError : -1
; 1110 :         ));

  04598	e59f3914	 ldr         r3, [pc, #0x914]
  0459c	e5933440	 ldr         r3, [r3, #0x440]
  045a0	e3130a01	 tst         r3, #1, 20
  045a4	0a000059	 beq         |$LN35@StartRxTra|
  045a8	e59f3904	 ldr         r3, [pc, #0x904]
  045ac	e5933440	 ldr         r3, [r3, #0x440]
  045b0	e3130801	 tst         r3, #1, 16
  045b4	0a000029	 beq         |$LN33@StartRxTra|
  045b8	e51b3098	 ldr         r3, [r11, #-0x98]
  045bc	e3530000	 cmp         r3, #0
  045c0	0a000004	 beq         |$LN21@StartRxTra|
  045c4	e51b3098	 ldr         r3, [r11, #-0x98]
  045c8	e2833014	 add         r3, r3, #0x14
  045cc	e5933000	 ldr         r3, [r3]
  045d0	e50b305c	 str         r3, [r11, #-0x5C]
  045d4	ea000001	 b           |$LN22@StartRxTra|
  045d8		 |$LN21@StartRxTra|
  045d8	e3e03000	 mvn         r3, #0
  045dc	e50b305c	 str         r3, [r11, #-0x5C]
  045e0		 |$LN22@StartRxTra|
  045e0	e51b3098	 ldr         r3, [r11, #-0x98]
  045e4	e3530000	 cmp         r3, #0
  045e8	0a000004	 beq         |$LN23@StartRxTra|
  045ec	e51b3098	 ldr         r3, [r11, #-0x98]
  045f0	e2833010	 add         r3, r3, #0x10
  045f4	e5933000	 ldr         r3, [r3]
  045f8	e50b3058	 str         r3, [r11, #-0x58]
  045fc	ea000001	 b           |$LN24@StartRxTra|
  04600		 |$LN23@StartRxTra|
  04600	e3a03000	 mov         r3, #0
  04604	e50b3058	 str         r3, [r11, #-0x58]
  04608		 |$LN24@StartRxTra|
  04608	e51b3098	 ldr         r3, [r11, #-0x98]
  0460c	e3530000	 cmp         r3, #0
  04610	0a000004	 beq         |$LN25@StartRxTra|
  04614	e51b3098	 ldr         r3, [r11, #-0x98]
  04618	e283300c	 add         r3, r3, #0xC
  0461c	e5933000	 ldr         r3, [r3]
  04620	e50b3054	 str         r3, [r11, #-0x54]
  04624	ea000001	 b           |$LN26@StartRxTra|
  04628		 |$LN25@StartRxTra|
  04628	e3a03000	 mov         r3, #0
  0462c	e50b3054	 str         r3, [r11, #-0x54]
  04630		 |$LN26@StartRxTra|
  04630	e51b305c	 ldr         r3, [r11, #-0x5C]
  04634	e58d3004	 str         r3, [sp, #4]
  04638	e51b3058	 ldr         r3, [r11, #-0x58]
  0463c	e58d3000	 str         r3, [sp]
  04640	e51b3054	 ldr         r3, [r11, #-0x54]
  04644	e51b2098	 ldr         r2, [r11, #-0x98]
  04648	e59b1004	 ldr         r1, [r11, #4]
  0464c	e59f0874	 ldr         r0, [pc, #0x874]
  04650	eb000000	 bl          CeLogMsg
  04654	e3a03001	 mov         r3, #1
  04658	e50b3050	 str         r3, [r11, #-0x50]
  0465c	ea000028	 b           |$LN34@StartRxTra|
  04660		 |$LN33@StartRxTra|
  04660	e51b3098	 ldr         r3, [r11, #-0x98]
  04664	e3530000	 cmp         r3, #0
  04668	0a000004	 beq         |$LN27@StartRxTra|
  0466c	e51b3098	 ldr         r3, [r11, #-0x98]
  04670	e2833014	 add         r3, r3, #0x14
  04674	e5933000	 ldr         r3, [r3]
  04678	e50b304c	 str         r3, [r11, #-0x4C]
  0467c	ea000001	 b           |$LN28@StartRxTra|
  04680		 |$LN27@StartRxTra|
  04680	e3e03000	 mvn         r3, #0
  04684	e50b304c	 str         r3, [r11, #-0x4C]
  04688		 |$LN28@StartRxTra|
  04688	e51b3098	 ldr         r3, [r11, #-0x98]
  0468c	e3530000	 cmp         r3, #0
  04690	0a000004	 beq         |$LN29@StartRxTra|
  04694	e51b3098	 ldr         r3, [r11, #-0x98]
  04698	e2833010	 add         r3, r3, #0x10
  0469c	e5933000	 ldr         r3, [r3]
  046a0	e50b3048	 str         r3, [r11, #-0x48]
  046a4	ea000001	 b           |$LN30@StartRxTra|
  046a8		 |$LN29@StartRxTra|
  046a8	e3a03000	 mov         r3, #0
  046ac	e50b3048	 str         r3, [r11, #-0x48]
  046b0		 |$LN30@StartRxTra|
  046b0	e51b3098	 ldr         r3, [r11, #-0x98]
  046b4	e3530000	 cmp         r3, #0
  046b8	0a000004	 beq         |$LN31@StartRxTra|
  046bc	e51b3098	 ldr         r3, [r11, #-0x98]
  046c0	e283300c	 add         r3, r3, #0xC
  046c4	e5933000	 ldr         r3, [r3]
  046c8	e50b3044	 str         r3, [r11, #-0x44]
  046cc	ea000001	 b           |$LN32@StartRxTra|
  046d0		 |$LN31@StartRxTra|
  046d0	e3a03000	 mov         r3, #0
  046d4	e50b3044	 str         r3, [r11, #-0x44]
  046d8		 |$LN32@StartRxTra|
  046d8	e51b304c	 ldr         r3, [r11, #-0x4C]
  046dc	e58d3004	 str         r3, [sp, #4]
  046e0	e51b3048	 ldr         r3, [r11, #-0x48]
  046e4	e58d3000	 str         r3, [sp]
  046e8	e51b3044	 ldr         r3, [r11, #-0x44]
  046ec	e51b2098	 ldr         r2, [r11, #-0x98]
  046f0	e59b1004	 ldr         r1, [r11, #4]
  046f4	e59f07cc	 ldr         r0, [pc, #0x7CC]
  046f8	eb000000	 bl          NKDbgPrintfW
  046fc	e3a03000	 mov         r3, #0
  04700	e50b3050	 str         r3, [r11, #-0x50]
  04704		 |$LN34@StartRxTra|
  04704	e3a03001	 mov         r3, #1
  04708	e50b3040	 str         r3, [r11, #-0x40]
  0470c	ea000001	 b           |$LN36@StartRxTra|
  04710		 |$LN35@StartRxTra|
  04710	e3a03000	 mov         r3, #0
  04714	e50b3040	 str         r3, [r11, #-0x40]
  04718		 |$LN36@StartRxTra|

; 1111 : 
; 1112 :     if (pTransfer == NULL) 

  04718	e51b3098	 ldr         r3, [r11, #-0x98]
  0471c	e3530000	 cmp         r3, #0
  04720	1a000018	 bne         |$LN18@StartRxTra|

; 1113 :     {
; 1114 :         DEBUGMSG(ZONE_ERROR, (L"StartRxTransfer:  error pTransfer is NULL\r\n"));

  04724	e59f3788	 ldr         r3, [pc, #0x788]
  04728	e5933440	 ldr         r3, [r3, #0x440]
  0472c	e3130001	 tst         r3, #1
  04730	0a00000f	 beq         |$LN39@StartRxTra|
  04734	e59f3778	 ldr         r3, [pc, #0x778]
  04738	e5933440	 ldr         r3, [r3, #0x440]
  0473c	e3130801	 tst         r3, #1, 16
  04740	0a000004	 beq         |$LN37@StartRxTra|
  04744	e59f0778	 ldr         r0, [pc, #0x778]
  04748	eb000000	 bl          CeLogMsg
  0474c	e3a03001	 mov         r3, #1
  04750	e50b303c	 str         r3, [r11, #-0x3C]
  04754	ea000003	 b           |$LN38@StartRxTra|
  04758		 |$LN37@StartRxTra|
  04758	e59f0764	 ldr         r0, [pc, #0x764]
  0475c	eb000000	 bl          NKDbgPrintfW
  04760	e3a03000	 mov         r3, #0
  04764	e50b303c	 str         r3, [r11, #-0x3C]
  04768		 |$LN38@StartRxTra|
  04768	e3a03001	 mov         r3, #1
  0476c	e50b3038	 str         r3, [r11, #-0x38]
  04770	ea000001	 b           |$LN40@StartRxTra|
  04774		 |$LN39@StartRxTra|
  04774	e3a03000	 mov         r3, #0
  04778	e50b3038	 str         r3, [r11, #-0x38]
  0477c		 |$LN40@StartRxTra|

; 1115 :         return ERROR_INVALID_PARAMETER;

  0477c	e3a03057	 mov         r3, #0x57
  04780	e50b3060	 str         r3, [r11, #-0x60]
  04784	ea0001bb	 b           |$LN19@StartRxTra|
  04788		 |$LN18@StartRxTra|

; 1116 :     }
; 1117 : 
; 1118 :     if (endpoint != 0)

  04788	e59b3004	 ldr         r3, [r11, #4]
  0478c	e3530000	 cmp         r3, #0
  04790	0a00010c	 beq         |$LN17@StartRxTra|

; 1119 :     {
; 1120 :         if (pPdd->intr_rx_data_avail &(1 << endpoint))

  04794	e59b3000	 ldr         r3, [r11]
  04798	e2831e3f	 add         r1, r3, #0x3F, 28
  0479c	e59b2004	 ldr         r2, [r11, #4]
  047a0	e3a03001	 mov         r3, #1
  047a4	e1a02213	 mov         r2, r3, lsl r2
  047a8	e5913000	 ldr         r3, [r1]
  047ac	e1130002	 tst         r3, r2
  047b0	0a0000a9	 beq         |$LN16@StartRxTra|

; 1121 :         {
; 1122 :             // rx FIFO has data.
; 1123 :             UCHAR *pBuffer;            
; 1124 :             DWORD space, maxSize;
; 1125 :             WORD rxcount;
; 1126 :             
; 1127 :             rxcount = INREG16(&pCsrRegs->ep[endpoint].Count.RxCount);

  047b4	e59b1004	 ldr         r1, [r11, #4]
  047b8	e3a03010	 mov         r3, #0x10
  047bc	e0020391	 mul         r2, r1, r3
  047c0	e51b30a8	 ldr         r3, [r11, #-0xA8]
  047c4	e0833002	 add         r3, r3, r2
  047c8	e2833008	 add         r3, r3, #8
  047cc	e1d330b0	 ldrh        r3, [r3]
  047d0	e14b38b4	 strh        r3, [r11, #-0x84]

; 1128 :             if (rxcount > pPdd->ep[endpoint].maxPacketSize)

  047d4	e15b38b4	 ldrh        r3, [r11, #-0x84]
  047d8	e1a00003	 mov         r0, r3
  047dc	e59b3000	 ldr         r3, [r11]
  047e0	e28310ac	 add         r1, r3, #0xAC
  047e4	e59b2004	 ldr         r2, [r11, #4]
  047e8	e3a03034	 mov         r3, #0x34
  047ec	e0030392	 mul         r3, r2, r3
  047f0	e0813003	 add         r3, r1, r3
  047f4	e1d330b0	 ldrh        r3, [r3]
  047f8	e1500003	 cmp         r0, r3
  047fc	da000001	 ble         |$LN15@StartRxTra|

; 1129 :             {
; 1130 :                 rxcount = 0;

  04800	e3a03000	 mov         r3, #0
  04804	e14b38b4	 strh        r3, [r11, #-0x84]
  04808		 |$LN15@StartRxTra|

; 1131 :             }
; 1132 :             
; 1133 :             pBuffer =(UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;               

  04808	e51b3098	 ldr         r3, [r11, #-0x98]
  0480c	e2832004	 add         r2, r3, #4
  04810	e51b3098	 ldr         r3, [r11, #-0x98]
  04814	e2833010	 add         r3, r3, #0x10
  04818	e5922000	 ldr         r2, [r2]
  0481c	e5933000	 ldr         r3, [r3]
  04820	e0823003	 add         r3, r2, r3
  04824	e50b308c	 str         r3, [r11, #-0x8C]

; 1134 :             space = pTransfer->cbBuffer - pTransfer->cbTransferred;

  04828	e51b3098	 ldr         r3, [r11, #-0x98]
  0482c	e283200c	 add         r2, r3, #0xC
  04830	e51b3098	 ldr         r3, [r11, #-0x98]
  04834	e2833010	 add         r3, r3, #0x10
  04838	e5922000	 ldr         r2, [r2]
  0483c	e5933000	 ldr         r3, [r3]
  04840	e0423003	 sub         r3, r2, r3
  04844	e50b3088	 str         r3, [r11, #-0x88]

; 1135 : 
; 1136 :             if(rxcount > space)

  04848	e15b28b4	 ldrh        r2, [r11, #-0x84]
  0484c	e51b3088	 ldr         r3, [r11, #-0x88]
  04850	e1520003	 cmp         r2, r3
  04854	9a000002	 bls         |$LN14@StartRxTra|

; 1137 :             {
; 1138 :                 return ERROR_INVALID_PARAMETER;

  04858	e3a03057	 mov         r3, #0x57
  0485c	e50b3060	 str         r3, [r11, #-0x60]
  04860	ea000184	 b           |$LN19@StartRxTra|
  04864		 |$LN14@StartRxTra|

; 1139 :             }
; 1140 :             // Get maxPacketSize
; 1141 :             maxSize = pPdd->ep[endpoint].maxPacketSize;

  04864	e59b3000	 ldr         r3, [r11]
  04868	e28310ac	 add         r1, r3, #0xAC
  0486c	e59b2004	 ldr         r2, [r11, #4]
  04870	e3a03034	 mov         r3, #0x34
  04874	e0030392	 mul         r3, r2, r3
  04878	e0813003	 add         r3, r1, r3
  0487c	e1d330b0	 ldrh        r3, [r3]
  04880	e50b3090	 str         r3, [r11, #-0x90]
  04884		 |$LN66@StartRxTra|

; 1142 :             
; 1143 :             __try
; 1144 :             {
; 1145 :                 
; 1146 :                 ReadFIFO(pPdd, (UCHAR)endpoint, pBuffer, (DWORD)rxcount);

  04884	e15b38b4	 ldrh        r3, [r11, #-0x84]
  04888	e51b208c	 ldr         r2, [r11, #-0x8C]
  0488c	e59b1004	 ldr         r1, [r11, #4]
  04890	e20110ff	 and         r1, r1, #0xFF
  04894	e59b0000	 ldr         r0, [r11]
  04898	eb000000	 bl          ReadFIFO

; 1147 :                 DEBUGMSG(ZONE_INFO, (L"Received:\r\n"));

  0489c	e59f3610	 ldr         r3, [pc, #0x610]
  048a0	e5933440	 ldr         r3, [r3, #0x440]
  048a4	e3130b01	 tst         r3, #1, 22
  048a8	0a00000f	 beq         |$LN43@StartRxTra|
  048ac	e59f3600	 ldr         r3, [pc, #0x600]
  048b0	e5933440	 ldr         r3, [r3, #0x440]
  048b4	e3130801	 tst         r3, #1, 16
  048b8	0a000004	 beq         |$LN41@StartRxTra|
  048bc	e59f05f4	 ldr         r0, [pc, #0x5F4]
  048c0	eb000000	 bl          CeLogMsg
  048c4	e3a03001	 mov         r3, #1
  048c8	e50b3034	 str         r3, [r11, #-0x34]
  048cc	ea000003	 b           |$LN42@StartRxTra|
  048d0		 |$LN41@StartRxTra|
  048d0	e59f05e0	 ldr         r0, [pc, #0x5E0]
  048d4	eb000000	 bl          NKDbgPrintfW
  048d8	e3a03000	 mov         r3, #0
  048dc	e50b3034	 str         r3, [r11, #-0x34]
  048e0		 |$LN42@StartRxTra|
  048e0	e3a03001	 mov         r3, #1
  048e4	e50b3030	 str         r3, [r11, #-0x30]
  048e8	ea000001	 b           |$LN44@StartRxTra|
  048ec		 |$LN43@StartRxTra|
  048ec	e3a03000	 mov         r3, #0
  048f0	e50b3030	 str         r3, [r11, #-0x30]
  048f4		 |$LN44@StartRxTra|

; 1148 :                 
; 1149 :                 // We transfered some data
; 1150 :                 pTransfer->cbTransferred += rxcount;

  048f4	e51b3098	 ldr         r3, [r11, #-0x98]
  048f8	e2833010	 add         r3, r3, #0x10
  048fc	e15b28b4	 ldrh        r2, [r11, #-0x84]
  04900	e5933000	 ldr         r3, [r3]
  04904	e0832002	 add         r2, r3, r2
  04908	e51b3098	 ldr         r3, [r11, #-0x98]
  0490c	e2833010	 add         r3, r3, #0x10
  04910	e5832000	 str         r2, [r3]

; 1151 :                 
; 1152 :                 // Is this end of transfer?
; 1153 :                 if (rxcount < maxSize)

  04914	e15b28b4	 ldrh        r2, [r11, #-0x84]
  04918	e51b3090	 ldr         r3, [r11, #-0x90]
  0491c	e1520003	 cmp         r2, r3
  04920	2a000005	 bcs         |$LN12@StartRxTra|

; 1154 :                 {
; 1155 :                     // received last block
; 1156 :                     pTransfer->dwUsbError = UFN_NO_ERROR;

  04924	e51b3098	 ldr         r3, [r11, #-0x98]
  04928	e2832014	 add         r2, r3, #0x14
  0492c	e3a03000	 mov         r3, #0
  04930	e5823000	 str         r3, [r2]

; 1157 :                     bNotifyDataReady = TRUE;

  04934	e3a03001	 mov         r3, #1
  04938	e50b30a0	 str         r3, [r11, #-0xA0]
  0493c		 |$LN12@StartRxTra|
  0493c		 |$LN67@StartRxTra|

; 1158 :                     // Don't clear the RxPktRdy until it is ready to further received
; 1159 :                 }
; 1160 :             }

  0493c	ea000004	 b           |$LN68@StartRxTra|
  04940		 |$LN63@StartRxTra|

; 1162 :             {
; 1163 :                 pTransfer->dwUsbError = UFN_CLIENT_BUFFER_ERROR;

  04940	e51b3098	 ldr         r3, [r11, #-0x98]
  04944	e2832014	 add         r2, r3, #0x14
  04948	e3a03f41	 mov         r3, #0x41, 30
  0494c	e5823000	 str         r3, [r2]
  04950	eaffffff	 b           |$LN68@StartRxTra|
  04954		 |$LN68@StartRxTra|

; 1164 :             }
; 1165 :             
; 1166 :             // clear intr_rx_data_avail EP0 bit
; 1167 :             pPdd->intr_rx_data_avail &= ~(1 << endpoint);           

  04954	e59b3000	 ldr         r3, [r11]
  04958	e2831e3f	 add         r1, r3, #0x3F, 28
  0495c	e59b2004	 ldr         r2, [r11, #4]
  04960	e3a03001	 mov         r3, #1
  04964	e1a03213	 mov         r3, r3, lsl r2
  04968	e1e02003	 mvn         r2, r3
  0496c	e5913000	 ldr         r3, [r1]
  04970	e0032002	 and         r2, r3, r2
  04974	e59b3000	 ldr         r3, [r11]
  04978	e2833e3f	 add         r3, r3, #0x3F, 28
  0497c	e5832000	 str         r2, [r3]

; 1168 : 
; 1169 :             pPdd->ep[endpoint].bLastRxUsedDMA = FALSE;

  04980	e59b3000	 ldr         r3, [r11]
  04984	e28310ac	 add         r1, r3, #0xAC
  04988	e59b2004	 ldr         r2, [r11, #4]
  0498c	e3a03034	 mov         r3, #0x34
  04990	e0030392	 mul         r3, r2, r3
  04994	e0813003	 add         r3, r1, r3
  04998	e2832030	 add         r2, r3, #0x30
  0499c	e3a03000	 mov         r3, #0
  049a0	e5823000	 str         r3, [r2]

; 1170 :             
; 1171 :             if (bNotifyDataReady)

  049a4	e51b30a0	 ldr         r3, [r11, #-0xA0]
  049a8	e3530000	 cmp         r3, #0
  049ac	0a000029	 beq         |$LN11@StartRxTra|

; 1172 :             {
; 1173 :                 pEP->pTransfer = NULL;

  049b0	e51b3094	 ldr         r3, [r11, #-0x94]
  049b4	e2832020	 add         r2, r3, #0x20
  049b8	e3a03000	 mov         r3, #0
  049bc	e5823000	 str         r3, [r2]

; 1174 :                 pTransfer->dwUsbError = UFN_NO_ERROR;

  049c0	e51b3098	 ldr         r3, [r11, #-0x98]
  049c4	e2832014	 add         r2, r3, #0x14
  049c8	e3a03000	 mov         r3, #0
  049cc	e5823000	 str         r3, [r2]

; 1175 :                 DEBUGMSG(ZONE_INFO, (TEXT("ACK: StartRxTransfer for EP %d\r\n"), endpoint));

  049d0	e59f34dc	 ldr         r3, [pc, #0x4DC]
  049d4	e5933440	 ldr         r3, [r3, #0x440]
  049d8	e3130b01	 tst         r3, #1, 22
  049dc	0a000011	 beq         |$LN47@StartRxTra|
  049e0	e59f34cc	 ldr         r3, [pc, #0x4CC]
  049e4	e5933440	 ldr         r3, [r3, #0x440]
  049e8	e3130801	 tst         r3, #1, 16
  049ec	0a000005	 beq         |$LN45@StartRxTra|
  049f0	e59b1004	 ldr         r1, [r11, #4]
  049f4	e59f04c4	 ldr         r0, [pc, #0x4C4]
  049f8	eb000000	 bl          CeLogMsg
  049fc	e3a03001	 mov         r3, #1
  04a00	e50b302c	 str         r3, [r11, #-0x2C]
  04a04	ea000004	 b           |$LN46@StartRxTra|
  04a08		 |$LN45@StartRxTra|
  04a08	e59b1004	 ldr         r1, [r11, #4]
  04a0c	e59f04ac	 ldr         r0, [pc, #0x4AC]
  04a10	eb000000	 bl          NKDbgPrintfW
  04a14	e3a03000	 mov         r3, #0
  04a18	e50b302c	 str         r3, [r11, #-0x2C]
  04a1c		 |$LN46@StartRxTra|
  04a1c	e3a03001	 mov         r3, #1
  04a20	e50b3028	 str         r3, [r11, #-0x28]
  04a24	ea000001	 b           |$LN48@StartRxTra|
  04a28		 |$LN47@StartRxTra|
  04a28	e3a03000	 mov         r3, #0
  04a2c	e50b3028	 str         r3, [r11, #-0x28]
  04a30		 |$LN48@StartRxTra|

; 1176 :                 pPdd->pfnNotify(
; 1177 :                     pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer);

  04a30	e51b2098	 ldr         r2, [r11, #-0x98]
  04a34	e3a01064	 mov         r1, #0x64
  04a38	e59b3000	 ldr         r3, [r11]
  04a3c	e2833024	 add         r3, r3, #0x24
  04a40	e5930000	 ldr         r0, [r3]
  04a44	e59b3000	 ldr         r3, [r11]
  04a48	e2833028	 add         r3, r3, #0x28
  04a4c	e5933000	 ldr         r3, [r3]
  04a50	e1a0e00f	 mov         lr, pc
  04a54	e12fff13	 bx          r3
  04a58		 |$LN11@StartRxTra|

; 1178 :             }
; 1179 :         }
; 1180 :         else

  04a58	ea000059	 b           |$LN10@StartRxTra|
  04a5c		 |$LN16@StartRxTra|

; 1181 :         {
; 1182 :             if(pPdd->ep[endpoint].bLastRxUsedDMA == FALSE)

  04a5c	e59b3000	 ldr         r3, [r11]
  04a60	e28310ac	 add         r1, r3, #0xAC
  04a64	e59b2004	 ldr         r2, [r11, #4]
  04a68	e3a03034	 mov         r3, #0x34
  04a6c	e0030392	 mul         r3, r2, r3
  04a70	e0813003	 add         r3, r1, r3
  04a74	e2833030	 add         r3, r3, #0x30
  04a78	e5933000	 ldr         r3, [r3]
  04a7c	e3530000	 cmp         r3, #0
  04a80	1a000013	 bne         |$LN9@StartRxTra|

; 1183 :             {
; 1184 :             CLRREG16(&pCsrRegs->ep[endpoint].RxCSR, RXCSR_P_RXPKTRDY);

  04a84	e59b1004	 ldr         r1, [r11, #4]
  04a88	e3a03010	 mov         r3, #0x10
  04a8c	e0020391	 mul         r2, r1, r3
  04a90	e51b30a8	 ldr         r3, [r11, #-0xA8]
  04a94	e0833002	 add         r3, r3, r2
  04a98	e2833006	 add         r3, r3, #6
  04a9c	e1d330b0	 ldrh        r3, [r3]
  04aa0	e1a02003	 mov         r2, r3
  04aa4	e3e03001	 mvn         r3, #1
  04aa8	e0023003	 and         r3, r2, r3
  04aac	e1a00803	 mov         r0, r3, lsl #16
  04ab0	e1a00820	 mov         r0, r0, lsr #16
  04ab4	e59b1004	 ldr         r1, [r11, #4]
  04ab8	e3a03010	 mov         r3, #0x10
  04abc	e0020391	 mul         r2, r1, r3
  04ac0	e51b30a8	 ldr         r3, [r11, #-0xA8]
  04ac4	e0833002	 add         r3, r3, r2
  04ac8	e2833006	 add         r3, r3, #6
  04acc	e1c300b0	 strh        r0, [r3]

; 1185 :             }
; 1186 :             else

  04ad0	ea000008	 b           |$LN8@StartRxTra|
  04ad4		 |$LN9@StartRxTra|

; 1187 :             {
; 1188 :                 pPdd->ep[endpoint].bLastRxUsedDMA = FALSE;

  04ad4	e59b3000	 ldr         r3, [r11]
  04ad8	e28310ac	 add         r1, r3, #0xAC
  04adc	e59b2004	 ldr         r2, [r11, #4]
  04ae0	e3a03034	 mov         r3, #0x34
  04ae4	e0030392	 mul         r3, r2, r3
  04ae8	e0813003	 add         r3, r1, r3
  04aec	e2832030	 add         r2, r3, #0x30
  04af0	e3a03000	 mov         r3, #0
  04af4	e5823000	 str         r3, [r2]
  04af8		 |$LN8@StartRxTra|

; 1189 :             }
; 1190 : 
; 1191 :             SETREG16(&pGenRegs->IntrRxE, (1<<endpoint));

  04af8	e51b309c	 ldr         r3, [r11, #-0x9C]
  04afc	e2833008	 add         r3, r3, #8
  04b00	e1d330b0	 ldrh        r3, [r3]
  04b04	e1a01003	 mov         r1, r3
  04b08	e59b2004	 ldr         r2, [r11, #4]
  04b0c	e3a03001	 mov         r3, #1
  04b10	e1a03213	 mov         r3, r3, lsl r2
  04b14	e1813003	 orr         r3, r1, r3
  04b18	e1a02803	 mov         r2, r3, lsl #16
  04b1c	e1a02822	 mov         r2, r2, lsr #16
  04b20	e51b309c	 ldr         r3, [r11, #-0x9C]
  04b24	e2833008	 add         r3, r3, #8
  04b28	e1c320b0	 strh        r2, [r3]

; 1192 :             DEBUGMSG(ZONE_FUNCTION, (TEXT("EP %d IssueTransfer(OUT) RxCSR=0x%x\r\n"), endpoint, INREG16(&pCsrRegs->ep[endpoint].RxCSR)));

  04b2c	e59f3380	 ldr         r3, [pc, #0x380]
  04b30	e5933440	 ldr         r3, [r3, #0x440]
  04b34	e3130a01	 tst         r3, #1, 20
  04b38	0a00001f	 beq         |$LN51@StartRxTra|
  04b3c	e59f3370	 ldr         r3, [pc, #0x370]
  04b40	e5933440	 ldr         r3, [r3, #0x440]
  04b44	e3130801	 tst         r3, #1, 16
  04b48	0a00000c	 beq         |$LN49@StartRxTra|
  04b4c	e59b1004	 ldr         r1, [r11, #4]
  04b50	e3a03010	 mov         r3, #0x10
  04b54	e0020391	 mul         r2, r1, r3
  04b58	e51b30a8	 ldr         r3, [r11, #-0xA8]
  04b5c	e0833002	 add         r3, r3, r2
  04b60	e2833006	 add         r3, r3, #6
  04b64	e1d320b0	 ldrh        r2, [r3]
  04b68	e59b1004	 ldr         r1, [r11, #4]
  04b6c	e59f0348	 ldr         r0, [pc, #0x348]
  04b70	eb000000	 bl          CeLogMsg
  04b74	e3a03001	 mov         r3, #1
  04b78	e50b3024	 str         r3, [r11, #-0x24]
  04b7c	ea00000b	 b           |$LN50@StartRxTra|
  04b80		 |$LN49@StartRxTra|
  04b80	e59b1004	 ldr         r1, [r11, #4]
  04b84	e3a03010	 mov         r3, #0x10
  04b88	e0020391	 mul         r2, r1, r3
  04b8c	e51b30a8	 ldr         r3, [r11, #-0xA8]
  04b90	e0833002	 add         r3, r3, r2
  04b94	e2833006	 add         r3, r3, #6
  04b98	e1d320b0	 ldrh        r2, [r3]
  04b9c	e59b1004	 ldr         r1, [r11, #4]
  04ba0	e59f0314	 ldr         r0, [pc, #0x314]
  04ba4	eb000000	 bl          NKDbgPrintfW
  04ba8	e3a03000	 mov         r3, #0
  04bac	e50b3024	 str         r3, [r11, #-0x24]
  04bb0		 |$LN50@StartRxTra|
  04bb0	e3a03001	 mov         r3, #1
  04bb4	e50b3020	 str         r3, [r11, #-0x20]
  04bb8	ea000001	 b           |$LN52@StartRxTra|
  04bbc		 |$LN51@StartRxTra|
  04bbc	e3a03000	 mov         r3, #0
  04bc0	e50b3020	 str         r3, [r11, #-0x20]
  04bc4		 |$LN52@StartRxTra|
  04bc4		 |$LN10@StartRxTra|

; 1193 :         }
; 1194 :     }
; 1195 :     else // if (endpoint != 0)

  04bc4	ea00008c	 b           |$LN7@StartRxTra|
  04bc8		 |$LN17@StartRxTra|

; 1196 :     {
; 1197 :         if (pPdd->ep0State == EP0_ST_SETUP_PROCESSED)

  04bc8	e59b3000	 ldr         r3, [r11]
  04bcc	e2833ffb	 add         r3, r3, #0xFB, 30
  04bd0	e5933000	 ldr         r3, [r3]
  04bd4	e3530001	 cmp         r3, #1
  04bd8	1a000087	 bne         |$LN6@StartRxTra|

; 1198 :         {
; 1199 :             pPdd->ep0State = EP0_ST_DATA_RX;

  04bdc	e59b3000	 ldr         r3, [r11]
  04be0	e2832ffb	 add         r2, r3, #0xFB, 30
  04be4	e3a03004	 mov         r3, #4
  04be8	e5823000	 str         r3, [r2]

; 1200 :             
; 1201 :             if (pPdd->intr_rx_data_avail &(1 << EP0))

  04bec	e59b3000	 ldr         r3, [r11]
  04bf0	e2833e3f	 add         r3, r3, #0x3F, 28
  04bf4	e5933000	 ldr         r3, [r3]
  04bf8	e3130001	 tst         r3, #1
  04bfc	0a00007e	 beq         |$LN5@StartRxTra|

; 1202 :             {
; 1203 :                 // rx FIFO has data.
; 1204 :                 UCHAR *pBuffer;            
; 1205 :                 DWORD space, maxSize;
; 1206 :                 USHORT rxcount;
; 1207 :                 
; 1208 :                 rxcount = INREG8(&pCsrRegs->ep[EP0].Count.Count0);

  04c00	e51b30a8	 ldr         r3, [r11, #-0xA8]
  04c04	e2833008	 add         r3, r3, #8
  04c08	e5d33000	 ldrb        r3, [r3]
  04c0c	e14b37b4	 strh        r3, [r11, #-0x74]

; 1209 :                 
; 1210 :                 pBuffer =(UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;               

  04c10	e51b3098	 ldr         r3, [r11, #-0x98]
  04c14	e2832004	 add         r2, r3, #4
  04c18	e51b3098	 ldr         r3, [r11, #-0x98]
  04c1c	e2833010	 add         r3, r3, #0x10
  04c20	e5922000	 ldr         r2, [r2]
  04c24	e5933000	 ldr         r3, [r3]
  04c28	e0823003	 add         r3, r2, r3
  04c2c	e50b307c	 str         r3, [r11, #-0x7C]

; 1211 :                 space = pTransfer->cbBuffer - pTransfer->cbTransferred;

  04c30	e51b3098	 ldr         r3, [r11, #-0x98]
  04c34	e283200c	 add         r2, r3, #0xC
  04c38	e51b3098	 ldr         r3, [r11, #-0x98]
  04c3c	e2833010	 add         r3, r3, #0x10
  04c40	e5922000	 ldr         r2, [r2]
  04c44	e5933000	 ldr         r3, [r3]
  04c48	e0423003	 sub         r3, r2, r3
  04c4c	e50b3078	 str         r3, [r11, #-0x78]

; 1212 :                 // Get maxPacketSize
; 1213 :                 maxSize = pPdd->ep[EP0].maxPacketSize;

  04c50	e59b3000	 ldr         r3, [r11]
  04c54	e28330ac	 add         r3, r3, #0xAC
  04c58	e1d330b0	 ldrh        r3, [r3]
  04c5c	e50b3080	 str         r3, [r11, #-0x80]
  04c60		 |$LN73@StartRxTra|

; 1214 :                 
; 1215 :                 __try
; 1216 :                 {
; 1217 :                     USHORT dwFlag = CSR0_P_SERVICEDRXPKTRDY;

  04c60	e3a03040	 mov         r3, #0x40
  04c64	e14b37b2	 strh        r3, [r11, #-0x72]

; 1218 :                     
; 1219 :                     ReadFIFO(pPdd, (UCHAR)endpoint, pBuffer, (DWORD)rxcount);

  04c68	e15b37b4	 ldrh        r3, [r11, #-0x74]
  04c6c	e51b207c	 ldr         r2, [r11, #-0x7C]
  04c70	e59b1004	 ldr         r1, [r11, #4]
  04c74	e20110ff	 and         r1, r1, #0xFF
  04c78	e59b0000	 ldr         r0, [r11]
  04c7c	eb000000	 bl          ReadFIFO

; 1220 :                     DEBUGMSG(ZONE_INFO, (L"Received:\r\n"));

  04c80	e59f322c	 ldr         r3, [pc, #0x22C]
  04c84	e5933440	 ldr         r3, [r3, #0x440]
  04c88	e3130b01	 tst         r3, #1, 22
  04c8c	0a00000f	 beq         |$LN55@StartRxTra|
  04c90	e59f321c	 ldr         r3, [pc, #0x21C]
  04c94	e5933440	 ldr         r3, [r3, #0x440]
  04c98	e3130801	 tst         r3, #1, 16
  04c9c	0a000004	 beq         |$LN53@StartRxTra|
  04ca0	e59f0210	 ldr         r0, [pc, #0x210]
  04ca4	eb000000	 bl          CeLogMsg
  04ca8	e3a03001	 mov         r3, #1
  04cac	e50b301c	 str         r3, [r11, #-0x1C]
  04cb0	ea000003	 b           |$LN54@StartRxTra|
  04cb4		 |$LN53@StartRxTra|
  04cb4	e59f01fc	 ldr         r0, [pc, #0x1FC]
  04cb8	eb000000	 bl          NKDbgPrintfW
  04cbc	e3a03000	 mov         r3, #0
  04cc0	e50b301c	 str         r3, [r11, #-0x1C]
  04cc4		 |$LN54@StartRxTra|
  04cc4	e3a03001	 mov         r3, #1
  04cc8	e50b3018	 str         r3, [r11, #-0x18]
  04ccc	ea000001	 b           |$LN56@StartRxTra|
  04cd0		 |$LN55@StartRxTra|
  04cd0	e3a03000	 mov         r3, #0
  04cd4	e50b3018	 str         r3, [r11, #-0x18]
  04cd8		 |$LN56@StartRxTra|

; 1221 :                     //memdump((UCHAR *)pBuffer, (USHORT)rxcount, 0);
; 1222 :                     
; 1223 :                     // We transfered some data
; 1224 :                     pTransfer->cbTransferred = pTransfer->cbBuffer - space;

  04cd8	e51b3098	 ldr         r3, [r11, #-0x98]
  04cdc	e283300c	 add         r3, r3, #0xC
  04ce0	e5932000	 ldr         r2, [r3]
  04ce4	e51b3078	 ldr         r3, [r11, #-0x78]
  04ce8	e0422003	 sub         r2, r2, r3
  04cec	e51b3098	 ldr         r3, [r11, #-0x98]
  04cf0	e2833010	 add         r3, r3, #0x10
  04cf4	e5832000	 str         r2, [r3]

; 1225 :                     
; 1226 :                     // Is this end of transfer?
; 1227 :                     if (rxcount < maxSize)

  04cf8	e15b27b4	 ldrh        r2, [r11, #-0x74]
  04cfc	e51b3080	 ldr         r3, [r11, #-0x80]
  04d00	e1520003	 cmp         r2, r3
  04d04	2a00000e	 bcs         |$LN3@StartRxTra|

; 1228 :                     {
; 1229 :                         // received last block
; 1230 :                         pTransfer->dwUsbError = UFN_NO_ERROR;

  04d08	e51b3098	 ldr         r3, [r11, #-0x98]
  04d0c	e2832014	 add         r2, r3, #0x14
  04d10	e3a03000	 mov         r3, #0
  04d14	e5823000	 str         r3, [r2]

; 1231 :                         pPdd->ep0State = EP0_ST_STATUS_IN;

  04d18	e59b3000	 ldr         r3, [r11]
  04d1c	e2832ffb	 add         r2, r3, #0xFB, 30
  04d20	e3a03002	 mov         r3, #2
  04d24	e5823000	 str         r3, [r2]

; 1232 :                         bNotifyDataReady = TRUE;

  04d28	e3a03001	 mov         r3, #1
  04d2c	e50b30a0	 str         r3, [r11, #-0xA0]

; 1233 :                         dwFlag |= CSR0_P_DATAEND;

  04d30	e15b37b2	 ldrh        r3, [r11, #-0x72]
  04d34	e3833008	 orr         r3, r3, #8
  04d38	e1a03803	 mov         r3, r3, lsl #16
  04d3c	e1a03823	 mov         r3, r3, lsr #16
  04d40	e14b37b2	 strh        r3, [r11, #-0x72]
  04d44		 |$LN3@StartRxTra|

; 1234 :                     }
; 1235 :                     SETREG16(&pCsrRegs->ep[EP0].CSR.CSR0, dwFlag);

  04d44	e51b30a8	 ldr         r3, [r11, #-0xA8]
  04d48	e2833002	 add         r3, r3, #2
  04d4c	e1d330b0	 ldrh        r3, [r3]
  04d50	e1a02003	 mov         r2, r3
  04d54	e15b37b2	 ldrh        r3, [r11, #-0x72]
  04d58	e1823003	 orr         r3, r2, r3
  04d5c	e1a02803	 mov         r2, r3, lsl #16
  04d60	e1a02822	 mov         r2, r2, lsr #16
  04d64	e51b30a8	 ldr         r3, [r11, #-0xA8]
  04d68	e2833002	 add         r3, r3, #2
  04d6c	e1c320b0	 strh        r2, [r3]
  04d70		 |$LN74@StartRxTra|

; 1236 :                 }

  04d70	ea000004	 b           |$LN75@StartRxTra|
  04d74		 |$LN70@StartRxTra|

; 1238 :                 {
; 1239 :                     pTransfer->dwUsbError = UFN_CLIENT_BUFFER_ERROR;

  04d74	e51b3098	 ldr         r3, [r11, #-0x98]
  04d78	e2832014	 add         r2, r3, #0x14
  04d7c	e3a03f41	 mov         r3, #0x41, 30
  04d80	e5823000	 str         r3, [r2]
  04d84	eaffffff	 b           |$LN75@StartRxTra|
  04d88		 |$LN75@StartRxTra|

; 1240 :                 }
; 1241 :                 
; 1242 :                 // clear intr_rx_data_avail EP0 bit
; 1243 :                 pPdd->intr_rx_data_avail &= ~(1 << EP0);            

  04d88	e59b3000	 ldr         r3, [r11]
  04d8c	e2833e3f	 add         r3, r3, #0x3F, 28
  04d90	e5932000	 ldr         r2, [r3]
  04d94	e3e03001	 mvn         r3, #1
  04d98	e0022003	 and         r2, r2, r3
  04d9c	e59b3000	 ldr         r3, [r11]
  04da0	e2833e3f	 add         r3, r3, #0x3F, 28
  04da4	e5832000	 str         r2, [r3]

; 1244 :                 
; 1245 :                 if (bNotifyDataReady)

  04da8	e51b30a0	 ldr         r3, [r11, #-0xA0]
  04dac	e3530000	 cmp         r3, #0
  04db0	0a000011	 beq         |$LN2@StartRxTra|

; 1246 :                 {
; 1247 :                     pEP->pTransfer = NULL;

  04db4	e51b3094	 ldr         r3, [r11, #-0x94]
  04db8	e2832020	 add         r2, r3, #0x20
  04dbc	e3a03000	 mov         r3, #0
  04dc0	e5823000	 str         r3, [r2]

; 1248 :                     pTransfer->dwUsbError = UFN_NO_ERROR;

  04dc4	e51b3098	 ldr         r3, [r11, #-0x98]
  04dc8	e2832014	 add         r2, r3, #0x14
  04dcc	e3a03000	 mov         r3, #0
  04dd0	e5823000	 str         r3, [r2]

; 1249 :                     pPdd->pfnNotify(
; 1250 :                         pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer);

  04dd4	e51b2098	 ldr         r2, [r11, #-0x98]
  04dd8	e3a01064	 mov         r1, #0x64
  04ddc	e59b3000	 ldr         r3, [r11]
  04de0	e2833024	 add         r3, r3, #0x24
  04de4	e5930000	 ldr         r0, [r3]
  04de8	e59b3000	 ldr         r3, [r11]
  04dec	e2833028	 add         r3, r3, #0x28
  04df0	e5933000	 ldr         r3, [r3]
  04df4	e1a0e00f	 mov         lr, pc
  04df8	e12fff13	 bx          r3
  04dfc		 |$LN2@StartRxTra|
  04dfc		 |$LN5@StartRxTra|
  04dfc		 |$LN6@StartRxTra|
  04dfc		 |$LN7@StartRxTra|

; 1251 :                 }
; 1252 :             }
; 1253 :         }
; 1254 :     }       
; 1255 :     
; 1256 :     rc = ERROR_SUCCESS;

  04dfc	e3a03000	 mov         r3, #0
  04e00	e50b30a4	 str         r3, [r11, #-0xA4]

; 1257 :     
; 1258 :     if (endpoint == 0)

  04e04	e59b3004	 ldr         r3, [r11, #4]
  04e08	e3530000	 cmp         r3, #0
  04e0c	1a000001	 bne         |$LN1@StartRxTra|

; 1259 :         prtEP0State(pPdd);

  04e10	e59b0000	 ldr         r0, [r11]
  04e14	eb000000	 bl          prtEP0State
  04e18		 |$LN1@StartRxTra|

; 1260 :     DEBUGMSG(ZONE_FUNCTION, (L"-StartRxTransfer\r\n"));

  04e18	e59f3094	 ldr         r3, [pc, #0x94]
  04e1c	e5933440	 ldr         r3, [r3, #0x440]
  04e20	e3130a01	 tst         r3, #1, 20
  04e24	0a00000f	 beq         |$LN59@StartRxTra|
  04e28	e59f3084	 ldr         r3, [pc, #0x84]
  04e2c	e5933440	 ldr         r3, [r3, #0x440]
  04e30	e3130801	 tst         r3, #1, 16
  04e34	0a000004	 beq         |$LN57@StartRxTra|
  04e38	e59f0070	 ldr         r0, [pc, #0x70]
  04e3c	eb000000	 bl          CeLogMsg
  04e40	e3a03001	 mov         r3, #1
  04e44	e50b3014	 str         r3, [r11, #-0x14]
  04e48	ea000003	 b           |$LN58@StartRxTra|
  04e4c		 |$LN57@StartRxTra|
  04e4c	e59f005c	 ldr         r0, [pc, #0x5C]
  04e50	eb000000	 bl          NKDbgPrintfW
  04e54	e3a03000	 mov         r3, #0
  04e58	e50b3014	 str         r3, [r11, #-0x14]
  04e5c		 |$LN58@StartRxTra|
  04e5c	e3a03001	 mov         r3, #1
  04e60	e50b3010	 str         r3, [r11, #-0x10]
  04e64	ea000001	 b           |$LN60@StartRxTra|
  04e68		 |$LN59@StartRxTra|
  04e68	e3a03000	 mov         r3, #0
  04e6c	e50b3010	 str         r3, [r11, #-0x10]
  04e70		 |$LN60@StartRxTra|

; 1261 :     
; 1262 :     return rc;

  04e70	e51b30a4	 ldr         r3, [r11, #-0xA4]
  04e74	e50b3060	 str         r3, [r11, #-0x60]
  04e78		 |$LN19@StartRxTra|
  04e78		 |$LN61@StartRxTra|

; 1263 : }

  04e78	e51b0060	 ldr         r0, [r11, #-0x60]
  04e7c	e24bd00c	 sub         sp, r11, #0xC
  04e80	e89d6800	 ldmia       sp, {r11, sp, lr}
  04e84	e12fff1e	 bx          lr

			 ENDP  ; |StartRxTransfer|

  04e88		 |$LN69@StartRxTra|
  04e88		 |$LN79@StartRxTra|

; 1237 :                 __except(EXCEPTION_EXECUTE_HANDLER)

  04e88	e52de004	 str         lr, [sp, #-4]!
  04e8c	e24dd008	 sub         sp, sp, #8
  04e90		 |$LN72@StartRxTra|
  04e90		 |$LN83@StartRxTra|
  04e90	e3a00001	 mov         r0, #1
  04e94		 |$LN71@StartRxTra|
  04e94	e28dd008	 add         sp, sp, #8
  04e98	e49df004	 ldr         pc, [sp], #4
  04e9c		 |$LN84@StartRxTra|
  04e9c		 |$LN62@StartRxTra|
  04e9c		 |$LN81@StartRxTra|

; 1161 :             __except(EXCEPTION_EXECUTE_HANDLER)

  04e9c	e52de004	 str         lr, [sp, #-4]!
  04ea0	e24dd008	 sub         sp, sp, #8
  04ea4		 |$LN65@StartRxTra|
  04ea4		 |$LN85@StartRxTra|
  04ea4	e3a00001	 mov         r0, #1
  04ea8		 |$LN64@StartRxTra|
  04ea8	e28dd008	 add         sp, sp, #8
  04eac	e49df004	 ldr         pc, [sp], #4
  04eb0		 |$LN87@StartRxTra|
  04eb0		 |$LN88@StartRxTra|
  04eb0	00000000	 DCD         |??_C@_1CG@BNGOCLAM@?$AA?9?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  04eb4		 |$LN89@StartRxTra|
  04eb4	00000000	 DCD         |dpCurSettings|
  04eb8		 |$LN90@StartRxTra|
  04eb8	00000000	 DCD         |??_C@_1BI@PDCFGEL@?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?3?$AA?$AN?$AA?6?$AA?$AA@|
  04ebc		 |$LN91@StartRxTra|
  04ebc	00000000	 DCD         |??_C@_1EM@HPHMIFBK@?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AAO?$AAU?$AAT?$AA?$CJ?$AA?5?$AAR?$AAx?$AAC?$AAS?$AAR?$AA?$DN?$AA0@|
  04ec0		 |$LN92@StartRxTra|
  04ec0	00000000	 DCD         |??_C@_1EC@GEEDPLJM@?$AAA?$AAC?$AAK?$AA?3?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@|
  04ec4		 |$LN93@StartRxTra|
  04ec4	00000000	 DCD         |??_C@_1FI@DIOGIKJI@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  04ec8		 |$LN94@StartRxTra|
  04ec8	00000000	 DCD         |??_C@_1IA@FHPKIPM@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5@|
  04ecc		 |$LN86@StartRxTra|
  04ecc		 |$LN82@StartRxTra|
	EXPORT	|??_C@_1DA@IHBOAPKG@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@BKKOMDLG@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?3?$AA?5?$AAE?$AAX?$AAC?$AAE?$AAP?$AAT?$AAI?$AAO?$AAN?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@IGCMDKEF@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?3?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs?$AA_?$AAl?$AAe?$AAf?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@FBIKOCJK@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?3?$AA?5?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@GONGKHD@?$AAT?$AAX?$AAC?$AAS?$AAR?$AA_?$AAP?$AA_?$AAT?$AAX?$AAP?$AAK?$AAT?$AAR?$AAD?$AAY?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@CDDDEDII@?$AAU?$AAn?$AAd?$AAe?$AAr?$AAr?$AAu?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  000c0			 AREA	 |.pdata|, PDATA
|$T50309| DCD	|$LN54@Device_Pro@3|
	DCD	0xc001b805
|$T50311| DCD	|$LN44@Device_Pro@3|
	DCD	0x40000b01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@IHBOAPKG@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "_", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "E", 0x0, "P", 0x0, "x", 0x0, "_"
	DCB	0x0, "T", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@BKKOMDLG@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?3?$AA?5?$AAE?$AAX?$AAC?$AAE?$AAP?$AAT?$AAI?$AAO?$AAN?$AA_@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "E", 0x0, "P", 0x0, "x", 0x0, "_", 0x0, "T"
	DCB	0x0, "X", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "X", 0x0, "C"
	DCB	0x0, "E", 0x0, "P", 0x0, "T", 0x0, "I", 0x0, "O", 0x0, "N"
	DCB	0x0, "_", 0x0, "E", 0x0, "X", 0x0, "E", 0x0, "C", 0x0, "U"
	DCB	0x0, "T", 0x0, "E", 0x0, "_", 0x0, "H", 0x0, "A", 0x0, "N"
	DCB	0x0, "D", 0x0, "L", 0x0, "E", 0x0, "R", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@IGCMDKEF@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?3?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs?$AA_?$AAl?$AAe?$AAf?$AAt@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "E", 0x0, "P", 0x0, "x", 0x0, "_", 0x0, "T"
	DCB	0x0, "X", 0x0, ":", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t"
	DCB	0x0, "e", 0x0, "s", 0x0, "_", 0x0, "l", 0x0, "e", 0x0, "f"
	DCB	0x0, "t", 0x0, "_", 0x0, "t", 0x0, "o", 0x0, "_", 0x0, "s"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "=", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "s", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@FBIKOCJK@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?3?$AA?5?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "E", 0x0, "P", 0x0, "x", 0x0, "_", 0x0, "T"
	DCB	0x0, "X", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, "p", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "N"
	DCB	0x0, "U", 0x0, "L", 0x0, "L", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@GONGKHD@?$AAT?$AAX?$AAC?$AAS?$AAR?$AA_?$AAP?$AA_?$AAT?$AAX?$AAP?$AAK?$AAT?$AAR?$AAD?$AAY?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "X", 0x0, "C", 0x0, "S", 0x0, "R", 0x0, "_", 0x0, "P"
	DCB	0x0, "_", 0x0, "T", 0x0, "X", 0x0, "P", 0x0, "K", 0x0, "T"
	DCB	0x0, "R", 0x0, "D", 0x0, "Y", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@CDDDEDII@?$AAU?$AAn?$AAd?$AAe?$AAr?$AAr?$AAu?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "n", 0x0, "d", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u"
	DCB	0x0, "n", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00064			 AREA	 |.xdata|, DATA
|$T50307| DCD	0x1
	DCD	|$LN48@Device_Pro@3|
	DCD	|$LN49@Device_Pro@3|
	DCD	|$LN44@Device_Pro@3|
	DCD	|$LN45@Device_Pro@3|
; Function compile flags: /Odtp

  04ecc			 AREA	 |.text|, CODE, ARM

  04ecc	00000000	 DCD         |__C_specific_handler|
  04ed0	00000000	 DCD         |$T50307|

  04ed4		 |Device_ProcessEPx_TX| PROC

; 2040 : {

  04ed4		 |$LN54@Device_Pro@3|
  04ed4	e1a0c00d	 mov         r12, sp
  04ed8	e92d0003	 stmdb       sp!, {r0, r1}
  04edc	e92d5800	 stmdb       sp!, {r11, r12, lr}
  04ee0	e28db00c	 add         r11, sp, #0xC
  04ee4	e24dd060	 sub         sp, sp, #0x60
  04ee8		 |$LN52@Device_Pro@3|

; 2041 :     PHSMUSB_T pUSBContext =(PHSMUSB_T) pHSMUSBContext;

  04ee8	e59b3000	 ldr         r3, [r11]
  04eec	e50b305c	 str         r3, [r11, #-0x5C]

; 2042 :     PCSP_MUSB_CSR_REGS pCsrRegs = pUSBContext->pUsbCsrRegs;

  04ef0	e51b305c	 ldr         r3, [r11, #-0x5C]
  04ef4	e283301c	 add         r3, r3, #0x1C
  04ef8	e5933000	 ldr         r3, [r3]
  04efc	e50b306c	 str         r3, [r11, #-0x6C]

; 2043 :     MUsbFnPdd_t *pPdd = pUSBContext->pContext[DEVICE_CONTEXT];

  04f00	e51b305c	 ldr         r3, [r11, #-0x5C]
  04f04	e2833010	 add         r3, r3, #0x10
  04f08	e5933000	 ldr         r3, [r3]
  04f0c	e50b3058	 str         r3, [r11, #-0x58]

; 2044 :     MUsbFnEp_t *pEP = &pPdd->ep[endpoint];

  04f10	e51b3058	 ldr         r3, [r11, #-0x58]
  04f14	e28310ac	 add         r1, r3, #0xAC
  04f18	e59b2004	 ldr         r2, [r11, #4]
  04f1c	e3a03034	 mov         r3, #0x34
  04f20	e0030392	 mul         r3, r2, r3
  04f24	e0813003	 add         r3, r1, r3
  04f28	e50b3060	 str         r3, [r11, #-0x60]

; 2045 :     STransfer *pTransfer = pEP->pTransfer;

  04f2c	e51b3060	 ldr         r3, [r11, #-0x60]
  04f30	e2833020	 add         r3, r3, #0x20
  04f34	e5933000	 ldr         r3, [r3]
  04f38	e50b3064	 str         r3, [r11, #-0x64]

; 2046 :     UINT16 csrVal;
; 2047 :     
; 2048 :     DEBUGMSG(DEBUG_PRT_INFO, (L"+Device_ProcessEPx_TX: endpoint=%d\r\n", endpoint));
; 2049 :     csrVal = INREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR);

  04f3c	e59b1004	 ldr         r1, [r11, #4]
  04f40	e3a03010	 mov         r3, #0x10
  04f44	e0020391	 mul         r2, r1, r3
  04f48	e51b306c	 ldr         r3, [r11, #-0x6C]
  04f4c	e0833002	 add         r3, r3, r2
  04f50	e2833002	 add         r3, r3, #2
  04f54	e1d330b0	 ldrh        r3, [r3]
  04f58	e14b36b8	 strh        r3, [r11, #-0x68]

; 2050 :     
; 2051 :     if (csrVal & TXCSR_P_SENTSTALL)

  04f5c	e15b36b8	 ldrh        r3, [r11, #-0x68]
  04f60	e3130020	 tst         r3, #0x20
  04f64	0a000034	 beq         |$LN12@Device_Pro@3|

; 2052 :     {
; 2053 :         // MUSB finished sending STALL 
; 2054 :         // clear SENTSTALL 
; 2055 :         DEBUGMSG(ZONE_INFO, (TEXT("Stall\r\n")));

  04f68	e59f3654	 ldr         r3, [pc, #0x654]
  04f6c	e5933440	 ldr         r3, [r3, #0x440]
  04f70	e3130b01	 tst         r3, #1, 22
  04f74	0a00000f	 beq         |$LN17@Device_Pro@3|
  04f78	e59f3644	 ldr         r3, [pc, #0x644]
  04f7c	e5933440	 ldr         r3, [r3, #0x440]
  04f80	e3130801	 tst         r3, #1, 16
  04f84	0a000004	 beq         |$LN15@Device_Pro@3|
  04f88	e59f064c	 ldr         r0, [pc, #0x64C]
  04f8c	eb000000	 bl          CeLogMsg
  04f90	e3a03001	 mov         r3, #1
  04f94	e50b3044	 str         r3, [r11, #-0x44]
  04f98	ea000003	 b           |$LN16@Device_Pro@3|
  04f9c		 |$LN15@Device_Pro@3|
  04f9c	e59f0638	 ldr         r0, [pc, #0x638]
  04fa0	eb000000	 bl          NKDbgPrintfW
  04fa4	e3a03000	 mov         r3, #0
  04fa8	e50b3044	 str         r3, [r11, #-0x44]
  04fac		 |$LN16@Device_Pro@3|
  04fac	e3a03001	 mov         r3, #1
  04fb0	e50b3040	 str         r3, [r11, #-0x40]
  04fb4	ea000001	 b           |$LN18@Device_Pro@3|
  04fb8		 |$LN17@Device_Pro@3|
  04fb8	e3a03000	 mov         r3, #0
  04fbc	e50b3040	 str         r3, [r11, #-0x40]
  04fc0		 |$LN18@Device_Pro@3|

; 2056 : 
; 2057 :         pEP->stalled = FALSE;

  04fc0	e51b3060	 ldr         r3, [r11, #-0x60]
  04fc4	e2832014	 add         r2, r3, #0x14
  04fc8	e3a03000	 mov         r3, #0
  04fcc	e5823000	 str         r3, [r2]

; 2058 :         CLRREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_SENTSTALL);

  04fd0	e59b1004	 ldr         r1, [r11, #4]
  04fd4	e3a03010	 mov         r3, #0x10
  04fd8	e0020391	 mul         r2, r1, r3
  04fdc	e51b306c	 ldr         r3, [r11, #-0x6C]
  04fe0	e0833002	 add         r3, r3, r2
  04fe4	e2833002	 add         r3, r3, #2
  04fe8	e1d330b0	 ldrh        r3, [r3]
  04fec	e1a02003	 mov         r2, r3
  04ff0	e3e03020	 mvn         r3, #0x20
  04ff4	e0023003	 and         r3, r2, r3
  04ff8	e1a00803	 mov         r0, r3, lsl #16
  04ffc	e1a00820	 mov         r0, r0, lsr #16
  05000	e59b1004	 ldr         r1, [r11, #4]
  05004	e3a03010	 mov         r3, #0x10
  05008	e0020391	 mul         r2, r1, r3
  0500c	e51b306c	 ldr         r3, [r11, #-0x6C]
  05010	e0833002	 add         r3, r3, r2
  05014	e2833002	 add         r3, r3, #2
  05018	e1c300b0	 strh        r0, [r3]

; 2059 :         csrVal = INREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR);

  0501c	e59b1004	 ldr         r1, [r11, #4]
  05020	e3a03010	 mov         r3, #0x10
  05024	e0020391	 mul         r2, r1, r3
  05028	e51b306c	 ldr         r3, [r11, #-0x6C]
  0502c	e0833002	 add         r3, r3, r2
  05030	e2833002	 add         r3, r3, #2
  05034	e1d330b0	 ldrh        r3, [r3]
  05038	e14b36b8	 strh        r3, [r11, #-0x68]
  0503c		 |$LN12@Device_Pro@3|

; 2060 :     }
; 2061 :     
; 2062 :     if (csrVal & TXCSR_P_UNDERRUN)

  0503c	e15b36b8	 ldrh        r3, [r11, #-0x68]
  05040	e3130004	 tst         r3, #4
  05044	0a000028	 beq         |$LN11@Device_Pro@3|

; 2063 :     {
; 2064 :         // clear UNDERRUN 
; 2065 :         DEBUGMSG(ZONE_INFO, (TEXT("Underrun\r\n")));

  05048	e59f3574	 ldr         r3, [pc, #0x574]
  0504c	e5933440	 ldr         r3, [r3, #0x440]
  05050	e3130b01	 tst         r3, #1, 22
  05054	0a00000f	 beq         |$LN21@Device_Pro@3|
  05058	e59f3564	 ldr         r3, [pc, #0x564]
  0505c	e5933440	 ldr         r3, [r3, #0x440]
  05060	e3130801	 tst         r3, #1, 16
  05064	0a000004	 beq         |$LN19@Device_Pro@3|
  05068	e59f0568	 ldr         r0, [pc, #0x568]
  0506c	eb000000	 bl          CeLogMsg
  05070	e3a03001	 mov         r3, #1
  05074	e50b303c	 str         r3, [r11, #-0x3C]
  05078	ea000003	 b           |$LN20@Device_Pro@3|
  0507c		 |$LN19@Device_Pro@3|
  0507c	e59f0554	 ldr         r0, [pc, #0x554]
  05080	eb000000	 bl          NKDbgPrintfW
  05084	e3a03000	 mov         r3, #0
  05088	e50b303c	 str         r3, [r11, #-0x3C]
  0508c		 |$LN20@Device_Pro@3|
  0508c	e3a03001	 mov         r3, #1
  05090	e50b3038	 str         r3, [r11, #-0x38]
  05094	ea000001	 b           |$LN22@Device_Pro@3|
  05098		 |$LN21@Device_Pro@3|
  05098	e3a03000	 mov         r3, #0
  0509c	e50b3038	 str         r3, [r11, #-0x38]
  050a0		 |$LN22@Device_Pro@3|

; 2066 :         CLRREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_UNDERRUN);

  050a0	e59b1004	 ldr         r1, [r11, #4]
  050a4	e3a03010	 mov         r3, #0x10
  050a8	e0020391	 mul         r2, r1, r3
  050ac	e51b306c	 ldr         r3, [r11, #-0x6C]
  050b0	e0833002	 add         r3, r3, r2
  050b4	e2833002	 add         r3, r3, #2
  050b8	e1d330b0	 ldrh        r3, [r3]
  050bc	e1a02003	 mov         r2, r3
  050c0	e3e03004	 mvn         r3, #4
  050c4	e0023003	 and         r3, r2, r3
  050c8	e1a00803	 mov         r0, r3, lsl #16
  050cc	e1a00820	 mov         r0, r0, lsr #16
  050d0	e59b1004	 ldr         r1, [r11, #4]
  050d4	e3a03010	 mov         r3, #0x10
  050d8	e0020391	 mul         r2, r1, r3
  050dc	e51b306c	 ldr         r3, [r11, #-0x6C]
  050e0	e0833002	 add         r3, r3, r2
  050e4	e2833002	 add         r3, r3, #2
  050e8	e1c300b0	 strh        r0, [r3]
  050ec		 |$LN11@Device_Pro@3|

; 2067 :     }
; 2068 :     
; 2069 :     // check if finished sending packet (TXPKTRDY bit clear when finished)
; 2070 :     if (csrVal & TXCSR_P_TXPKTRDY) 

  050ec	e15b36b8	 ldrh        r3, [r11, #-0x68]
  050f0	e3130001	 tst         r3, #1
  050f4	0a000018	 beq         |$LN10@Device_Pro@3|

; 2071 :     {
; 2072 :         DEBUGMSG(ZONE_ERROR, (TEXT("TXCSR_P_TXPKTRDY\r\n")));

  050f8	e59f34c4	 ldr         r3, [pc, #0x4C4]
  050fc	e5933440	 ldr         r3, [r3, #0x440]
  05100	e3130001	 tst         r3, #1
  05104	0a00000f	 beq         |$LN25@Device_Pro@3|
  05108	e59f34b4	 ldr         r3, [pc, #0x4B4]
  0510c	e5933440	 ldr         r3, [r3, #0x440]
  05110	e3130801	 tst         r3, #1, 16
  05114	0a000004	 beq         |$LN23@Device_Pro@3|
  05118	e59f04b4	 ldr         r0, [pc, #0x4B4]
  0511c	eb000000	 bl          CeLogMsg
  05120	e3a03001	 mov         r3, #1
  05124	e50b3034	 str         r3, [r11, #-0x34]
  05128	ea000003	 b           |$LN24@Device_Pro@3|
  0512c		 |$LN23@Device_Pro@3|
  0512c	e59f04a0	 ldr         r0, [pc, #0x4A0]
  05130	eb000000	 bl          NKDbgPrintfW
  05134	e3a03000	 mov         r3, #0
  05138	e50b3034	 str         r3, [r11, #-0x34]
  0513c		 |$LN24@Device_Pro@3|
  0513c	e3a03001	 mov         r3, #1
  05140	e50b3030	 str         r3, [r11, #-0x30]
  05144	ea000001	 b           |$LN26@Device_Pro@3|
  05148		 |$LN25@Device_Pro@3|
  05148	e3a03000	 mov         r3, #0
  0514c	e50b3030	 str         r3, [r11, #-0x30]
  05150		 |$LN26@Device_Pro@3|

; 2073 :         return ERROR_SUCCESS;

  05150	e3a03000	 mov         r3, #0
  05154	e50b3048	 str         r3, [r11, #-0x48]
  05158	ea000111	 b           |$LN13@Device_Pro@3|
  0515c		 |$LN10@Device_Pro@3|

; 2074 :     }
; 2075 :     
; 2076 :     if (pTransfer == NULL) 

  0515c	e51b3064	 ldr         r3, [r11, #-0x64]
  05160	e3530000	 cmp         r3, #0
  05164	1a000018	 bne         |$LN9@Device_Pro@3|

; 2077 :     {
; 2078 :         DEBUGMSG(ZONE_INFO, (L"Device_ProcessEPx_TX:  pTransfer is NULL\r\n"));

  05168	e59f3454	 ldr         r3, [pc, #0x454]
  0516c	e5933440	 ldr         r3, [r3, #0x440]
  05170	e3130b01	 tst         r3, #1, 22
  05174	0a00000f	 beq         |$LN29@Device_Pro@3|
  05178	e59f3444	 ldr         r3, [pc, #0x444]
  0517c	e5933440	 ldr         r3, [r3, #0x440]
  05180	e3130801	 tst         r3, #1, 16
  05184	0a000004	 beq         |$LN27@Device_Pro@3|
  05188	e59f0440	 ldr         r0, [pc, #0x440]
  0518c	eb000000	 bl          CeLogMsg
  05190	e3a03001	 mov         r3, #1
  05194	e50b302c	 str         r3, [r11, #-0x2C]
  05198	ea000003	 b           |$LN28@Device_Pro@3|
  0519c		 |$LN27@Device_Pro@3|
  0519c	e59f042c	 ldr         r0, [pc, #0x42C]
  051a0	eb000000	 bl          NKDbgPrintfW
  051a4	e3a03000	 mov         r3, #0
  051a8	e50b302c	 str         r3, [r11, #-0x2C]
  051ac		 |$LN28@Device_Pro@3|
  051ac	e3a03001	 mov         r3, #1
  051b0	e50b3028	 str         r3, [r11, #-0x28]
  051b4	ea000001	 b           |$LN30@Device_Pro@3|
  051b8		 |$LN29@Device_Pro@3|
  051b8	e3a03000	 mov         r3, #0
  051bc	e50b3028	 str         r3, [r11, #-0x28]
  051c0		 |$LN30@Device_Pro@3|

; 2079 :         return ERROR_SUCCESS;

  051c0	e3a03000	 mov         r3, #0
  051c4	e50b3048	 str         r3, [r11, #-0x48]
  051c8	ea0000f5	 b           |$LN13@Device_Pro@3|
  051cc		 |$LN9@Device_Pro@3|
  051cc		 |$LN48@Device_Pro@3|

; 2080 :     }
; 2081 :     
; 2082 :     __try
; 2083 :     {
; 2084 :         UCHAR *pBuffer;
; 2085 :         DWORD space, txcount;
; 2086 : 
; 2087 :         pBuffer =(UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;

  051cc	e51b3064	 ldr         r3, [r11, #-0x64]
  051d0	e2832004	 add         r2, r3, #4
  051d4	e51b3064	 ldr         r3, [r11, #-0x64]
  051d8	e2833010	 add         r3, r3, #0x10
  051dc	e5922000	 ldr         r2, [r2]
  051e0	e5933000	 ldr         r3, [r3]
  051e4	e0823003	 add         r3, r2, r3
  051e8	e50b3054	 str         r3, [r11, #-0x54]

; 2088 :         space = pTransfer->cbBuffer - pTransfer->cbTransferred;

  051ec	e51b3064	 ldr         r3, [r11, #-0x64]
  051f0	e283200c	 add         r2, r3, #0xC
  051f4	e51b3064	 ldr         r3, [r11, #-0x64]
  051f8	e2833010	 add         r3, r3, #0x10
  051fc	e5922000	 ldr         r2, [r2]
  05200	e5933000	 ldr         r3, [r3]
  05204	e0423003	 sub         r3, r2, r3
  05208	e50b304c	 str         r3, [r11, #-0x4C]

; 2089 : 
; 2090 : 
; 2091 :         // How many bytes we can send just now?
; 2092 :         txcount = pEP->maxPacketSize;

  0520c	e51b3060	 ldr         r3, [r11, #-0x60]
  05210	e1d330b0	 ldrh        r3, [r3]
  05214	e50b3050	 str         r3, [r11, #-0x50]

; 2093 :         if (txcount > space)

  05218	e51b2050	 ldr         r2, [r11, #-0x50]
  0521c	e51b304c	 ldr         r3, [r11, #-0x4C]
  05220	e1520003	 cmp         r2, r3
  05224	9a000001	 bls         |$LN7@Device_Pro@3|

; 2094 :             txcount = space;

  05228	e51b304c	 ldr         r3, [r11, #-0x4C]
  0522c	e50b3050	 str         r3, [r11, #-0x50]
  05230		 |$LN7@Device_Pro@3|

; 2095 : 
; 2096 :         DEBUGMSG(ZONE_INFO, (L"Device_ProcessEPx_TX: bytes_left_to_send=%d sending=%d\r\n", space, txcount));

  05230	e59f338c	 ldr         r3, [pc, #0x38C]
  05234	e5933440	 ldr         r3, [r3, #0x440]
  05238	e3130b01	 tst         r3, #1, 22
  0523c	0a000013	 beq         |$LN33@Device_Pro@3|
  05240	e59f337c	 ldr         r3, [pc, #0x37C]
  05244	e5933440	 ldr         r3, [r3, #0x440]
  05248	e3130801	 tst         r3, #1, 16
  0524c	0a000006	 beq         |$LN31@Device_Pro@3|
  05250	e51b2050	 ldr         r2, [r11, #-0x50]
  05254	e51b104c	 ldr         r1, [r11, #-0x4C]
  05258	e59f036c	 ldr         r0, [pc, #0x36C]
  0525c	eb000000	 bl          CeLogMsg
  05260	e3a03001	 mov         r3, #1
  05264	e50b3024	 str         r3, [r11, #-0x24]
  05268	ea000005	 b           |$LN32@Device_Pro@3|
  0526c		 |$LN31@Device_Pro@3|
  0526c	e51b2050	 ldr         r2, [r11, #-0x50]
  05270	e51b104c	 ldr         r1, [r11, #-0x4C]
  05274	e59f0350	 ldr         r0, [pc, #0x350]
  05278	eb000000	 bl          NKDbgPrintfW
  0527c	e3a03000	 mov         r3, #0
  05280	e50b3024	 str         r3, [r11, #-0x24]
  05284		 |$LN32@Device_Pro@3|
  05284	e3a03001	 mov         r3, #1
  05288	e50b3020	 str         r3, [r11, #-0x20]
  0528c	ea000001	 b           |$LN34@Device_Pro@3|
  05290		 |$LN33@Device_Pro@3|
  05290	e3a03000	 mov         r3, #0
  05294	e50b3020	 str         r3, [r11, #-0x20]
  05298		 |$LN34@Device_Pro@3|

; 2097 : 
; 2098 :         if (txcount)

  05298	e51b3050	 ldr         r3, [r11, #-0x50]
  0529c	e3530000	 cmp         r3, #0
  052a0	0a00001f	 beq         |$LN6@Device_Pro@3|

; 2099 :         {
; 2100 :             // Write data to FIFO
; 2101 :             WriteFIFO(pPdd, (UCHAR) endpoint, pBuffer, txcount);

  052a4	e51b3050	 ldr         r3, [r11, #-0x50]
  052a8	e51b2054	 ldr         r2, [r11, #-0x54]
  052ac	e59b1004	 ldr         r1, [r11, #4]
  052b0	e20110ff	 and         r1, r1, #0xFF
  052b4	e51b0058	 ldr         r0, [r11, #-0x58]
  052b8	eb000000	 bl          WriteFIFO

; 2102 : 
; 2103 :             // We transfered some data
; 2104 :             pTransfer->cbTransferred += txcount;

  052bc	e51b3064	 ldr         r3, [r11, #-0x64]
  052c0	e2833010	 add         r3, r3, #0x10
  052c4	e5932000	 ldr         r2, [r3]
  052c8	e51b3050	 ldr         r3, [r11, #-0x50]
  052cc	e0822003	 add         r2, r2, r3
  052d0	e51b3064	 ldr         r3, [r11, #-0x64]
  052d4	e2833010	 add         r3, r3, #0x10
  052d8	e5832000	 str         r2, [r3]

; 2105 :             SETREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_TXPKTRDY);

  052dc	e59b1004	 ldr         r1, [r11, #4]
  052e0	e3a03010	 mov         r3, #0x10
  052e4	e0020391	 mul         r2, r1, r3
  052e8	e51b306c	 ldr         r3, [r11, #-0x6C]
  052ec	e0833002	 add         r3, r3, r2
  052f0	e2833002	 add         r3, r3, #2
  052f4	e1d330b0	 ldrh        r3, [r3]
  052f8	e3833001	 orr         r3, r3, #1
  052fc	e1a00803	 mov         r0, r3, lsl #16
  05300	e1a00820	 mov         r0, r0, lsr #16
  05304	e59b1004	 ldr         r1, [r11, #4]
  05308	e3a03010	 mov         r3, #0x10
  0530c	e0020391	 mul         r2, r1, r3
  05310	e51b306c	 ldr         r3, [r11, #-0x6C]
  05314	e0833002	 add         r3, r3, r2
  05318	e2833002	 add         r3, r3, #2
  0531c	e1c300b0	 strh        r0, [r3]
  05320	ea00006b	 b           |$LN5@Device_Pro@3|
  05324		 |$LN6@Device_Pro@3|

; 2106 :             DEBUGMSG(DEBUG_PRT_TRANS, (L"EPX_TX sent %d bytes\r\n", txcount));
; 2107 :         }
; 2108 :          // don't send zero byte data packet to see if USB mass storage works
; 2109 :         else if (((pTransfer->cbTransferred % pEP->maxPacketSize) == 0) && (!pEP->bZeroLengthSent) && (!pEP->bMassStore))

  05324	e51b3064	 ldr         r3, [r11, #-0x64]
  05328	e2832010	 add         r2, r3, #0x10
  0532c	e51b3060	 ldr         r3, [r11, #-0x60]
  05330	e1d300b0	 ldrh        r0, [r3]
  05334	e5921000	 ldr         r1, [r2]
  05338	eb000000	 bl          __rt_udiv
  0533c	e3510000	 cmp         r1, #0
  05340	1a00001f	 bne         |$LN4@Device_Pro@3|
  05344	e51b3060	 ldr         r3, [r11, #-0x60]
  05348	e2833018	 add         r3, r3, #0x18
  0534c	e5933000	 ldr         r3, [r3]
  05350	e3530000	 cmp         r3, #0
  05354	1a00001a	 bne         |$LN4@Device_Pro@3|
  05358	e51b3060	 ldr         r3, [r11, #-0x60]
  0535c	e283300c	 add         r3, r3, #0xC
  05360	e5933000	 ldr         r3, [r3]
  05364	e3530000	 cmp         r3, #0
  05368	1a000015	 bne         |$LN4@Device_Pro@3|

; 2110 :         {
; 2111 :             // send zero-length end of packet
; 2112 :             SETREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_TXPKTRDY);

  0536c	e59b1004	 ldr         r1, [r11, #4]
  05370	e3a03010	 mov         r3, #0x10
  05374	e0020391	 mul         r2, r1, r3
  05378	e51b306c	 ldr         r3, [r11, #-0x6C]
  0537c	e0833002	 add         r3, r3, r2
  05380	e2833002	 add         r3, r3, #2
  05384	e1d330b0	 ldrh        r3, [r3]
  05388	e3833001	 orr         r3, r3, #1
  0538c	e1a00803	 mov         r0, r3, lsl #16
  05390	e1a00820	 mov         r0, r0, lsr #16
  05394	e59b1004	 ldr         r1, [r11, #4]
  05398	e3a03010	 mov         r3, #0x10
  0539c	e0020391	 mul         r2, r1, r3
  053a0	e51b306c	 ldr         r3, [r11, #-0x6C]
  053a4	e0833002	 add         r3, r3, r2
  053a8	e2833002	 add         r3, r3, #2
  053ac	e1c300b0	 strh        r0, [r3]

; 2113 : 
; 2114 :             pEP->bZeroLengthSent = TRUE;

  053b0	e51b3060	 ldr         r3, [r11, #-0x60]
  053b4	e2832018	 add         r2, r3, #0x18
  053b8	e3a03001	 mov         r3, #1
  053bc	e5823000	 str         r3, [r2]

; 2115 :         }
; 2116 :         else

  053c0	ea000043	 b           |$LN3@Device_Pro@3|
  053c4		 |$LN4@Device_Pro@3|

; 2117 :         {
; 2118 :             // ACK_COMPLETE
; 2119 :             DEBUGMSG(DEBUG_PRT_TRANS, (L"Device_ProcessEPx_TX: call pfnNotify COMPLETE endp:%d +\r\n", endpoint));
; 2120 :             // May need to add Critical Section for DVFS
; 2121 :             if (pPdd->ep[endpoint].dmaEnabled && pPdd->bTXIsUsingUsbDMA)

  053c4	e51b3058	 ldr         r3, [r11, #-0x58]
  053c8	e28310ac	 add         r1, r3, #0xAC
  053cc	e59b2004	 ldr         r2, [r11, #4]
  053d0	e3a03034	 mov         r3, #0x34
  053d4	e0030392	 mul         r3, r2, r3
  053d8	e0813003	 add         r3, r1, r3
  053dc	e2833010	 add         r3, r3, #0x10
  053e0	e5933000	 ldr         r3, [r3]
  053e4	e3530000	 cmp         r3, #0
  053e8	0a000027	 beq         |$LN2@Device_Pro@3|
  053ec	e51b3058	 ldr         r3, [r11, #-0x58]
  053f0	e2833b01	 add         r3, r3, #1, 22
  053f4	e2833034	 add         r3, r3, #0x34
  053f8	e5933000	 ldr         r3, [r3]
  053fc	e3530000	 cmp         r3, #0
  05400	0a000021	 beq         |$LN2@Device_Pro@3|

; 2122 :             {
; 2123 :                 ResetDMAChannel(pPdd, MUSB_TX_DMA_CHN);

  05404	e3a01000	 mov         r1, #0
  05408	e51b0058	 ldr         r0, [r11, #-0x58]
  0540c	eb000000	 bl          ResetDMAChannel

; 2124 :                 EnterCriticalSection(&pPdd->csDVFS);

  05410	e51b3058	 ldr         r3, [r11, #-0x58]
  05414	e2833b01	 add         r3, r3, #1, 22
  05418	e2830014	 add         r0, r3, #0x14
  0541c	eb000000	 bl          EnterCriticalSection

; 2125 :                 if (pPdd->ep[endpoint].dmaDVFSstate == DVFS_PREDMA)

  05420	e51b3058	 ldr         r3, [r11, #-0x58]
  05424	e28310ac	 add         r1, r3, #0xAC
  05428	e59b2004	 ldr         r2, [r11, #4]
  0542c	e3a03034	 mov         r3, #0x34
  05430	e0030392	 mul         r3, r2, r3
  05434	e0813003	 add         r3, r1, r3
  05438	e283302c	 add         r3, r3, #0x2C
  0543c	e5d33000	 ldrb        r3, [r3]
  05440	e3530001	 cmp         r3, #1
  05444	1a00000c	 bne         |$LN1@Device_Pro@3|

; 2126 :                 {
; 2127 :                     pPdd->ep[endpoint].dmaDVFSstate = DVFS_POSTDMA;

  05448	e51b3058	 ldr         r3, [r11, #-0x58]
  0544c	e28310ac	 add         r1, r3, #0xAC
  05450	e59b2004	 ldr         r2, [r11, #4]
  05454	e3a03034	 mov         r3, #0x34
  05458	e0030392	 mul         r3, r2, r3
  0545c	e0813003	 add         r3, r1, r3
  05460	e283202c	 add         r2, r3, #0x2C
  05464	e3a03002	 mov         r3, #2
  05468	e5c23000	 strb        r3, [r2]

; 2128 :                     PostDmaDeactivation(pPdd, endpoint, TX_TRANSFER);

  0546c	e3a02000	 mov         r2, #0
  05470	e59b1004	 ldr         r1, [r11, #4]
  05474	e51b0058	 ldr         r0, [r11, #-0x58]
  05478	eb000000	 bl          PostDmaDeactivation
  0547c		 |$LN1@Device_Pro@3|

; 2129 :                 }
; 2130 :                 LeaveCriticalSection(&pPdd->csDVFS);

  0547c	e51b3058	 ldr         r3, [r11, #-0x58]
  05480	e2833b01	 add         r3, r3, #1, 22
  05484	e2830014	 add         r0, r3, #0x14
  05488	eb000000	 bl          LeaveCriticalSection
  0548c		 |$LN2@Device_Pro@3|

; 2131 :             }
; 2132 : 
; 2133 :             pEP->pTransfer = NULL;

  0548c	e51b3060	 ldr         r3, [r11, #-0x60]
  05490	e2832020	 add         r2, r3, #0x20
  05494	e3a03000	 mov         r3, #0
  05498	e5823000	 str         r3, [r2]

; 2134 :             pTransfer->dwUsbError = UFN_NO_ERROR;

  0549c	e51b3064	 ldr         r3, [r11, #-0x64]
  054a0	e2832014	 add         r2, r3, #0x14
  054a4	e3a03000	 mov         r3, #0
  054a8	e5823000	 str         r3, [r2]

; 2135 : 
; 2136 :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer);

  054ac	e51b2064	 ldr         r2, [r11, #-0x64]
  054b0	e3a01064	 mov         r1, #0x64
  054b4	e51b3058	 ldr         r3, [r11, #-0x58]
  054b8	e2833024	 add         r3, r3, #0x24
  054bc	e5930000	 ldr         r0, [r3]
  054c0	e51b3058	 ldr         r3, [r11, #-0x58]
  054c4	e2833028	 add         r3, r3, #0x28
  054c8	e5933000	 ldr         r3, [r3]
  054cc	e1a0e00f	 mov         lr, pc
  054d0	e12fff13	 bx          r3
  054d4		 |$LN3@Device_Pro@3|
  054d4		 |$LN5@Device_Pro@3|
  054d4		 |$LN49@Device_Pro@3|

; 2137 :             //DEBUGMSG(DEBUG_PRT_TRANS, (L"Device_ProcessEPx_TX: call pfnNotify COMPLETE -\r\n"));
; 2138 :             //DEBUGMSG(ZONE_INFO, (TEXT("Device_ProcessEPx_TX: ACK_COMPLETE\r\n")));
; 2139 :         }
; 2140 :     }

  054d4	ea00001a	 b           |$LN50@Device_Pro@3|
  054d8		 |$LN45@Device_Pro@3|

; 2142 :     {
; 2143 :         pTransfer->dwUsbError = UFN_CLIENT_BUFFER_ERROR;

  054d8	e51b3064	 ldr         r3, [r11, #-0x64]
  054dc	e2832014	 add         r2, r3, #0x14
  054e0	e3a03f41	 mov         r3, #0x41, 30
  054e4	e5823000	 str         r3, [r2]

; 2144 :         DEBUGMSG(ZONE_ERROR, (L"Device_ProcessEPx_TX: EXCEPTION_EXECUTE_HANDLER"));

  054e8	e59f30d4	 ldr         r3, [pc, #0xD4]
  054ec	e5933440	 ldr         r3, [r3, #0x440]
  054f0	e3130001	 tst         r3, #1
  054f4	0a00000f	 beq         |$LN37@Device_Pro@3|
  054f8	e59f30c4	 ldr         r3, [pc, #0xC4]
  054fc	e5933440	 ldr         r3, [r3, #0x440]
  05500	e3130801	 tst         r3, #1, 16
  05504	0a000004	 beq         |$LN35@Device_Pro@3|
  05508	e59f00b8	 ldr         r0, [pc, #0xB8]
  0550c	eb000000	 bl          CeLogMsg
  05510	e3a03001	 mov         r3, #1
  05514	e50b301c	 str         r3, [r11, #-0x1C]
  05518	ea000003	 b           |$LN36@Device_Pro@3|
  0551c		 |$LN35@Device_Pro@3|
  0551c	e59f00a4	 ldr         r0, [pc, #0xA4]
  05520	eb000000	 bl          NKDbgPrintfW
  05524	e3a03000	 mov         r3, #0
  05528	e50b301c	 str         r3, [r11, #-0x1C]
  0552c		 |$LN36@Device_Pro@3|
  0552c	e3a03001	 mov         r3, #1
  05530	e50b3018	 str         r3, [r11, #-0x18]
  05534	ea000001	 b           |$LN38@Device_Pro@3|
  05538		 |$LN37@Device_Pro@3|
  05538	e3a03000	 mov         r3, #0
  0553c	e50b3018	 str         r3, [r11, #-0x18]
  05540		 |$LN38@Device_Pro@3|
  05540	eaffffff	 b           |$LN50@Device_Pro@3|
  05544		 |$LN50@Device_Pro@3|

; 2145 :     }
; 2146 :     
; 2147 :     DEBUGMSG(ZONE_FUNCTION, (L"-Device_ProcessEPx_TX\r\n"));

  05544	e59f3078	 ldr         r3, [pc, #0x78]
  05548	e5933440	 ldr         r3, [r3, #0x440]
  0554c	e3130a01	 tst         r3, #1, 20
  05550	0a00000f	 beq         |$LN41@Device_Pro@3|
  05554	e59f3068	 ldr         r3, [pc, #0x68]
  05558	e5933440	 ldr         r3, [r3, #0x440]
  0555c	e3130801	 tst         r3, #1, 16
  05560	0a000004	 beq         |$LN39@Device_Pro@3|
  05564	e59f0054	 ldr         r0, [pc, #0x54]
  05568	eb000000	 bl          CeLogMsg
  0556c	e3a03001	 mov         r3, #1
  05570	e50b3014	 str         r3, [r11, #-0x14]
  05574	ea000003	 b           |$LN40@Device_Pro@3|
  05578		 |$LN39@Device_Pro@3|
  05578	e59f0040	 ldr         r0, [pc, #0x40]
  0557c	eb000000	 bl          NKDbgPrintfW
  05580	e3a03000	 mov         r3, #0
  05584	e50b3014	 str         r3, [r11, #-0x14]
  05588		 |$LN40@Device_Pro@3|
  05588	e3a03001	 mov         r3, #1
  0558c	e50b3010	 str         r3, [r11, #-0x10]
  05590	ea000001	 b           |$LN42@Device_Pro@3|
  05594		 |$LN41@Device_Pro@3|
  05594	e3a03000	 mov         r3, #0
  05598	e50b3010	 str         r3, [r11, #-0x10]
  0559c		 |$LN42@Device_Pro@3|

; 2148 :     
; 2149 :     return ERROR_SUCCESS;

  0559c	e3a03000	 mov         r3, #0
  055a0	e50b3048	 str         r3, [r11, #-0x48]
  055a4		 |$LN13@Device_Pro@3|
  055a4		 |$LN43@Device_Pro@3|

; 2150 : }

  055a4	e51b0048	 ldr         r0, [r11, #-0x48]
  055a8	e24bd00c	 sub         sp, r11, #0xC
  055ac	e89d6800	 ldmia       sp, {r11, sp, lr}
  055b0	e12fff1e	 bx          lr

			 ENDP  ; |Device_ProcessEPx_TX|

  055b4		 |$LN44@Device_Pro@3|
  055b4		 |$LN53@Device_Pro@3|

; 2141 :     __except(EXCEPTION_EXECUTE_HANDLER)

  055b4	e52de004	 str         lr, [sp, #-4]!
  055b8		 |$LN47@Device_Pro@3|
  055b8		 |$LN56@Device_Pro@3|
  055b8	e3a00001	 mov         r0, #1
  055bc		 |$LN46@Device_Pro@3|
  055bc	e49df004	 ldr         pc, [sp], #4
  055c0		 |$LN58@Device_Pro@3|
  055c0		 |$LN59@Device_Pro@3|
  055c0	00000000	 DCD         |??_C@_1DA@IHBOAPKG@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  055c4		 |$LN60@Device_Pro@3|
  055c4	00000000	 DCD         |dpCurSettings|
  055c8		 |$LN61@Device_Pro@3|
  055c8	00000000	 DCD         |??_C@_1GA@BKKOMDLG@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?3?$AA?5?$AAE?$AAX?$AAC?$AAE?$AAP?$AAT?$AAI?$AAO?$AAN?$AA_@|
  055cc		 |$LN62@Device_Pro@3|
  055cc	00000000	 DCD         |??_C@_1HC@IGCMDKEF@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?3?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs?$AA_?$AAl?$AAe?$AAf?$AAt@|
  055d0		 |$LN63@Device_Pro@3|
  055d0	00000000	 DCD         |??_C@_1FG@FBIKOCJK@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?3?$AA?5?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr@|
  055d4		 |$LN64@Device_Pro@3|
  055d4	00000000	 DCD         |??_C@_1CG@GONGKHD@?$AAT?$AAX?$AAC?$AAS?$AAR?$AA_?$AAP?$AA_?$AAT?$AAX?$AAP?$AAK?$AAT?$AAR?$AAD?$AAY?$AA?$AN?$AA?6?$AA?$AA@|
  055d8		 |$LN65@Device_Pro@3|
  055d8	00000000	 DCD         |??_C@_1BG@CDDDEDII@?$AAU?$AAn?$AAd?$AAe?$AAr?$AAr?$AAu?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  055dc		 |$LN66@Device_Pro@3|
  055dc	00000000	 DCD         |??_C@_1BA@CNFNHGLF@?$AAS?$AAt?$AAa?$AAl?$AAl?$AA?$AN?$AA?6?$AA?$AA@|
  055e0		 |$LN57@Device_Pro@3|
  055e0		 |$LN55@Device_Pro@3|
	EXPORT	|??_C@_1HI@OLODOMJP@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAD?$AAM?$AAA?$AA?3?$AA?5?$AAR?$AAX?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1PA@DPENCPOJ@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAD?$AAM?$AAA?$AA?5?$AAr?$AAx?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?0?$AA?5?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@KBJCNKBG@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAD?$AAM?$AAA?$AA?3?$AA?5?$AAU?$AAF?$AAN?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1NM@PMPOJPLC@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAD?$AAM?$AAA?$AA?5?$AAR?$AAX?$AA?0?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAC?$AAn?$AAt?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1NM@KNDGLOGP@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAD?$AAM?$AAA?$AA?5?$AAT?$AAX?$AA?0?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAC?$AAn?$AAt?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@HAEBMFKE@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAD?$AAM?$AAA?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs@| [ DATA ] ; `string'

  000d0			 AREA	 |.pdata|, PDATA
|$T50386| DCD	|$LN65@Device_Pro@4|
	DCD	0xc002fd05
|$T50388| DCD	|$LN55@Device_Pro@4|
	DCD	0x40000c02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@OLODOMJP@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAD?$AAM?$AAA?$AA?3?$AA?5?$AAR?$AAX?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, ":", 0x0, " "
	DCB	0x0, "R", 0x0, "X", 0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A"
	DCB	0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "u", 0x0, "n"
	DCB	0x0, "t", 0x0, ":", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, "F", 0x0, "I", 0x0, "F", 0x0, "O", 0x0, " "
	DCB	0x0, "c", 0x0, "o", 0x0, "u", 0x0, "n", 0x0, "t", 0x0, ":"
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1PA@DPENCPOJ@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAD?$AAM?$AAA?$AA?5?$AAr?$AAx?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?0?$AA?5?$AAs@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " ", 0x0, "r"
	DCB	0x0, "x", 0x0, "c", 0x0, "o", 0x0, "u", 0x0, "n", 0x0, "t"
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, ",", 0x0, " "
	DCB	0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, ",", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, "F", 0x0, "I", 0x0, "F", 0x0, "O"
	DCB	0x0, " ", 0x0, "p", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, ",", 0x0, " "
	DCB	0x0, "p", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, ",", 0x0, " ", 0x0, "c", 0x0, "b", 0x0, "B"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, ","
	DCB	0x0, " ", 0x0, "c", 0x0, "b", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "e", 0x0, "d", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@KBJCNKBG@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAD?$AAM?$AAA?$AA?3?$AA?5?$AAU?$AAF?$AAN?$AA_@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, "P", 0x0, "d"
	DCB	0x0, "d", 0x0, "!", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "_", 0x0, "P", 0x0, "r", 0x0, "o"
	DCB	0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, "D", 0x0, "M"
	DCB	0x0, "A", 0x0, ":", 0x0, " ", 0x0, "U", 0x0, "F", 0x0, "N"
	DCB	0x0, "_", 0x0, "C", 0x0, "L", 0x0, "I", 0x0, "E", 0x0, "N"
	DCB	0x0, "T", 0x0, "_", 0x0, "B", 0x0, "U", 0x0, "F", 0x0, "F"
	DCB	0x0, "E", 0x0, "R", 0x0, "_", 0x0, "E", 0x0, "R", 0x0, "R"
	DCB	0x0, "O", 0x0, "R", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1NM@PMPOJPLC@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAD?$AAM?$AAA?$AA?5?$AAR?$AAX?$AA?0?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAC?$AAn?$AAt?$AAl@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " ", 0x0, "R"
	DCB	0x0, "X", 0x0, ",", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, "C", 0x0, "n", 0x0, "t"
	DCB	0x0, "l", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, " ", 0x0, "p", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, ","
	DCB	0x0, " ", 0x0, "p", 0x0, "v", 0x0, "B", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, "(", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, ")", 0x0, ",", 0x0, " ", 0x0, "c"
	DCB	0x0, "b", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, ",", 0x0, " ", 0x0, "c", 0x0, "b", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "e", 0x0, "d", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1NM@KNDGLOGP@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAD?$AAM?$AAA?$AA?5?$AAT?$AAX?$AA?0?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAC?$AAn?$AAt?$AAl@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " ", 0x0, "T"
	DCB	0x0, "X", 0x0, ",", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, "C", 0x0, "n", 0x0, "t"
	DCB	0x0, "l", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, " ", 0x0, "p", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, ","
	DCB	0x0, " ", 0x0, "p", 0x0, "v", 0x0, "B", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, "(", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, ")", 0x0, ",", 0x0, " ", 0x0, "c"
	DCB	0x0, "b", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, ",", 0x0, " ", 0x0, "c", 0x0, "b", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "e", 0x0, "d", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@HAEBMFKE@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAD?$AAM?$AAA?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, ":", 0x0, " "
	DCB	0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "p", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "i"
	DCB	0x0, "s", 0x0, " ", 0x0, "N", 0x0, "U", 0x0, "L", 0x0, "L"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00078			 AREA	 |.xdata|, DATA
|$T50384| DCD	0x1
	DCD	|$LN59@Device_Pro@4|
	DCD	|$LN60@Device_Pro@4|
	DCD	|$LN55@Device_Pro@4|
	DCD	|$LN56@Device_Pro@4|
; Function compile flags: /Odtp

  055e0			 AREA	 |.text|, CODE, ARM

  055e0	00000000	 DCD         |__C_specific_handler|
  055e4	00000000	 DCD         |$T50384|

  055e8		 |Device_ProcessDMA| PROC

; 2168 : {

  055e8		 |$LN65@Device_Pro@4|
  055e8	e1a0c00d	 mov         r12, sp
  055ec	e92d0003	 stmdb       sp!, {r0, r1}
  055f0	e92d5800	 stmdb       sp!, {r11, r12, lr}
  055f4	e28db00c	 add         r11, sp, #0xC
  055f8	e24dd0c4	 sub         sp, sp, #0xC4
  055fc		 |$LN63@Device_Pro@4|

; 2169 :     MUsbFnPdd_t *pPdd =((PHSMUSB_T) pHSMUSBContext)->pContext[DEVICE_CONTEXT];

  055fc	e59b3000	 ldr         r3, [r11]
  05600	e2833010	 add         r3, r3, #0x10
  05604	e5933000	 ldr         r3, [r3]
  05608	e50b30b4	 str         r3, [r11, #-0xB4]

; 2170 :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUSBContext->pUsbCsrRegs;

  0560c	e51b30b4	 ldr         r3, [r11, #-0xB4]
  05610	e2833020	 add         r3, r3, #0x20
  05614	e5933000	 ldr         r3, [r3]
  05618	e283301c	 add         r3, r3, #0x1C
  0561c	e5933000	 ldr         r3, [r3]
  05620	e50b30c4	 str         r3, [r11, #-0xC4]

; 2171 :     PHSMUSB_T pOTG =(PHSMUSB_T)(pPdd->pUSBContext);

  05624	e51b30b4	 ldr         r3, [r11, #-0xB4]
  05628	e2833020	 add         r3, r3, #0x20
  0562c	e5933000	 ldr         r3, [r3]
  05630	e50b30b8	 str         r3, [r11, #-0xB8]

; 2172 :     MUsbFnEp_t *pEP;
; 2173 :     STransfer *pTransfer;
; 2174 :     
; 2175 :     DEBUGMSG(DEBUG_PRT_INFO, (L"Device_ProcessDMA: channel %d\r\n", channel));
; 2176 :     
; 2177 :     if (channel == MUSB_TX_DMA_CHN)

  05634	e5db3004	 ldrb        r3, [r11, #4]
  05638	e3530000	 cmp         r3, #0
  0563c	1a0000fa	 bne         |$LN21@Device_Pro@4|

; 2178 :     {
; 2179 :         DWORD endpoint = pPdd->tx0DmaEp;

  05640	e51b30b4	 ldr         r3, [r11, #-0xB4]
  05644	e2833010	 add         r3, r3, #0x10
  05648	e5933000	 ldr         r3, [r3]
  0564c	e50b30b0	 str         r3, [r11, #-0xB0]

; 2180 :         
; 2181 :         pEP = &pPdd->ep[endpoint];

  05650	e51b30b4	 ldr         r3, [r11, #-0xB4]
  05654	e28310ac	 add         r1, r3, #0xAC
  05658	e51b20b0	 ldr         r2, [r11, #-0xB0]
  0565c	e3a03034	 mov         r3, #0x34
  05660	e0030392	 mul         r3, r2, r3
  05664	e0813003	 add         r3, r1, r3
  05668	e50b30bc	 str         r3, [r11, #-0xBC]

; 2182 :         pTransfer = pEP->pTransfer;

  0566c	e51b30bc	 ldr         r3, [r11, #-0xBC]
  05670	e2833020	 add         r3, r3, #0x20
  05674	e5933000	 ldr         r3, [r3]
  05678	e50b30c0	 str         r3, [r11, #-0xC0]

; 2183 : 
; 2184 :         if (pTransfer == NULL) 

  0567c	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05680	e3530000	 cmp         r3, #0
  05684	1a000018	 bne         |$LN20@Device_Pro@4|

; 2185 :         {
; 2186 :             DEBUGMSG(ZONE_DVFS, (L"Device_ProcessDMA:  error pTransfer is NULL\r\n"));

  05688	e59f3b64	 ldr         r3, [pc, #0xB64]
  0568c	e5933440	 ldr         r3, [r3, #0x440]
  05690	e3130b02	 tst         r3, #2, 22
  05694	0a00000f	 beq         |$LN26@Device_Pro@4|
  05698	e59f3b54	 ldr         r3, [pc, #0xB54]
  0569c	e5933440	 ldr         r3, [r3, #0x440]
  056a0	e3130801	 tst         r3, #1, 16
  056a4	0a000004	 beq         |$LN24@Device_Pro@4|
  056a8	e59f0b54	 ldr         r0, [pc, #0xB54]
  056ac	eb000000	 bl          CeLogMsg
  056b0	e3a03001	 mov         r3, #1
  056b4	e50b3048	 str         r3, [r11, #-0x48]
  056b8	ea000003	 b           |$LN25@Device_Pro@4|
  056bc		 |$LN24@Device_Pro@4|
  056bc	e59f0b40	 ldr         r0, [pc, #0xB40]
  056c0	eb000000	 bl          NKDbgPrintfW
  056c4	e3a03000	 mov         r3, #0
  056c8	e50b3048	 str         r3, [r11, #-0x48]
  056cc		 |$LN25@Device_Pro@4|
  056cc	e3a03001	 mov         r3, #1
  056d0	e50b3044	 str         r3, [r11, #-0x44]
  056d4	ea000001	 b           |$LN27@Device_Pro@4|
  056d8		 |$LN26@Device_Pro@4|
  056d8	e3a03000	 mov         r3, #0
  056dc	e50b3044	 str         r3, [r11, #-0x44]
  056e0		 |$LN27@Device_Pro@4|

; 2187 :             return ERROR_INVALID_PARAMETER;

  056e0	e3a03057	 mov         r3, #0x57
  056e4	e50b3094	 str         r3, [r11, #-0x94]
  056e8	ea0002b7	 b           |$LN22@Device_Pro@4|
  056ec		 |$LN20@Device_Pro@4|

; 2188 :         }    
; 2189 : 
; 2190 :         DEBUGMSG(ZONE_FUNCTION, (TEXT("Device_ProcessDMA TX, EP %d Cntl(0x%x) pTransfer(0x%x), pvBuffer(0x%x), cbBuffer(0x%x), cbTransferred(0x%x)\r\n"),             
; 2191 :             endpoint, INREG32(&pOTG->pUsbDmaRegs->dma[channel].Cntl), pTransfer, pTransfer->pvBuffer, pTransfer->cbBuffer, pTransfer->cbTransferred));

  056ec	e59f3b00	 ldr         r3, [pc, #0xB00]
  056f0	e5933440	 ldr         r3, [r3, #0x440]
  056f4	e3130a01	 tst         r3, #1, 20
  056f8	0a00003f	 beq         |$LN30@Device_Pro@4|
  056fc	e59f3af0	 ldr         r3, [pc, #0xAF0]
  05700	e5933440	 ldr         r3, [r3, #0x440]
  05704	e3130801	 tst         r3, #1, 16
  05708	0a00001c	 beq         |$LN28@Device_Pro@4|
  0570c	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05710	e2833010	 add         r3, r3, #0x10
  05714	e5933000	 ldr         r3, [r3]
  05718	e58d3008	 str         r3, [sp, #8]
  0571c	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05720	e283300c	 add         r3, r3, #0xC
  05724	e5933000	 ldr         r3, [r3]
  05728	e58d3004	 str         r3, [sp, #4]
  0572c	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05730	e2833004	 add         r3, r3, #4
  05734	e5933000	 ldr         r3, [r3]
  05738	e58d3000	 str         r3, [sp]
  0573c	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05740	e51b20b8	 ldr         r2, [r11, #-0xB8]
  05744	e2822024	 add         r2, r2, #0x24
  05748	e5922000	 ldr         r2, [r2]
  0574c	e2820004	 add         r0, r2, #4
  05750	e5db2004	 ldrb        r2, [r11, #4]
  05754	e1a01002	 mov         r1, r2
  05758	e3a02010	 mov         r2, #0x10
  0575c	e0020291	 mul         r2, r1, r2
  05760	e0802002	 add         r2, r0, r2
  05764	e5922000	 ldr         r2, [r2]
  05768	e51b10b0	 ldr         r1, [r11, #-0xB0]
  0576c	e59f0a94	 ldr         r0, [pc, #0xA94]
  05770	eb000000	 bl          CeLogMsg
  05774	e3a03001	 mov         r3, #1
  05778	e50b3040	 str         r3, [r11, #-0x40]
  0577c	ea00001b	 b           |$LN29@Device_Pro@4|
  05780		 |$LN28@Device_Pro@4|
  05780	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05784	e2833010	 add         r3, r3, #0x10
  05788	e5933000	 ldr         r3, [r3]
  0578c	e58d3008	 str         r3, [sp, #8]
  05790	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05794	e283300c	 add         r3, r3, #0xC
  05798	e5933000	 ldr         r3, [r3]
  0579c	e58d3004	 str         r3, [sp, #4]
  057a0	e51b30c0	 ldr         r3, [r11, #-0xC0]
  057a4	e2833004	 add         r3, r3, #4
  057a8	e5933000	 ldr         r3, [r3]
  057ac	e58d3000	 str         r3, [sp]
  057b0	e51b30c0	 ldr         r3, [r11, #-0xC0]
  057b4	e51b20b8	 ldr         r2, [r11, #-0xB8]
  057b8	e2822024	 add         r2, r2, #0x24
  057bc	e5922000	 ldr         r2, [r2]
  057c0	e2820004	 add         r0, r2, #4
  057c4	e5db2004	 ldrb        r2, [r11, #4]
  057c8	e1a01002	 mov         r1, r2
  057cc	e3a02010	 mov         r2, #0x10
  057d0	e0020291	 mul         r2, r1, r2
  057d4	e0802002	 add         r2, r0, r2
  057d8	e5922000	 ldr         r2, [r2]
  057dc	e51b10b0	 ldr         r1, [r11, #-0xB0]
  057e0	e59f0a20	 ldr         r0, [pc, #0xA20]
  057e4	eb000000	 bl          NKDbgPrintfW
  057e8	e3a03000	 mov         r3, #0
  057ec	e50b3040	 str         r3, [r11, #-0x40]
  057f0		 |$LN29@Device_Pro@4|
  057f0	e3a03001	 mov         r3, #1
  057f4	e50b303c	 str         r3, [r11, #-0x3C]
  057f8	ea000001	 b           |$LN31@Device_Pro@4|
  057fc		 |$LN30@Device_Pro@4|
  057fc	e3a03000	 mov         r3, #0
  05800	e50b303c	 str         r3, [r11, #-0x3C]
  05804		 |$LN31@Device_Pro@4|

; 2192 :         
; 2193 :         DEBUGMSG(DEBUG_PRT_INFO, (TEXT("Device_ProcessDMA: cbBuffer=%d  cbTransferred=%d\r\n"), pTransfer->cbBuffer, pTransfer->cbTransferred));
; 2194 :         
; 2195 :         // Done using DMA controller.  disable DMA related bits.
; 2196 :         //  When controller finishes sending FIFO data, should generate interrupt and call IST.
; 2197 :         CLRREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_AUTOSET | TXCSR_P_DMAREQENAB);

  05804	e51b10b0	 ldr         r1, [r11, #-0xB0]
  05808	e3a03010	 mov         r3, #0x10
  0580c	e0020391	 mul         r2, r1, r3
  05810	e51b30c4	 ldr         r3, [r11, #-0xC4]
  05814	e0833002	 add         r3, r3, r2
  05818	e2833002	 add         r3, r3, #2
  0581c	e1d330b0	 ldrh        r3, [r3]
  05820	e1a02003	 mov         r2, r3
  05824	e3e03a09	 mvn         r3, #9, 20
  05828	e0023003	 and         r3, r2, r3
  0582c	e1a00803	 mov         r0, r3, lsl #16
  05830	e1a00820	 mov         r0, r0, lsr #16
  05834	e51b10b0	 ldr         r1, [r11, #-0xB0]
  05838	e3a03010	 mov         r3, #0x10
  0583c	e0020391	 mul         r2, r1, r3
  05840	e51b30c4	 ldr         r3, [r11, #-0xC4]
  05844	e0833002	 add         r3, r3, r2
  05848	e2833002	 add         r3, r3, #2
  0584c	e1c300b0	 strh        r0, [r3]

; 2198 : 
; 2199 :         // clear TXCSR_P_DMAREQMODE after clearing TXCSR_P_DMAREQENAB (per MUSBMHDRC programming guide)
; 2200 :         CLRREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_DMAREQMODE);

  05850	e51b10b0	 ldr         r1, [r11, #-0xB0]
  05854	e3a03010	 mov         r3, #0x10
  05858	e0020391	 mul         r2, r1, r3
  0585c	e51b30c4	 ldr         r3, [r11, #-0xC4]
  05860	e0833002	 add         r3, r3, r2
  05864	e2833002	 add         r3, r3, #2
  05868	e1d330b0	 ldrh        r3, [r3]
  0586c	e1a02003	 mov         r2, r3
  05870	e3e03b01	 mvn         r3, #1, 22
  05874	e0023003	 and         r3, r2, r3
  05878	e1a00803	 mov         r0, r3, lsl #16
  0587c	e1a00820	 mov         r0, r0, lsr #16
  05880	e51b10b0	 ldr         r1, [r11, #-0xB0]
  05884	e3a03010	 mov         r3, #0x10
  05888	e0020391	 mul         r2, r1, r3
  0588c	e51b30c4	 ldr         r3, [r11, #-0xC4]
  05890	e0833002	 add         r3, r3, r2
  05894	e2833002	 add         r3, r3, #2
  05898	e1c300b0	 strh        r0, [r3]

; 2201 : 
; 2202 :         ResetDMAChannel(pPdd, MUSB_TX_DMA_CHN);

  0589c	e3a01000	 mov         r1, #0
  058a0	e51b00b4	 ldr         r0, [r11, #-0xB4]
  058a4	eb000000	 bl          ResetDMAChannel

; 2203 : 
; 2204 :         EnterCriticalSection(&pPdd->csDVFS);

  058a8	e51b30b4	 ldr         r3, [r11, #-0xB4]
  058ac	e2833b01	 add         r3, r3, #1, 22
  058b0	e2830014	 add         r0, r3, #0x14
  058b4	eb000000	 bl          EnterCriticalSection

; 2205 :         if (pPdd->ep[endpoint].dmaDVFSstate == DVFS_PREDMA)

  058b8	e51b30b4	 ldr         r3, [r11, #-0xB4]
  058bc	e28310ac	 add         r1, r3, #0xAC
  058c0	e51b20b0	 ldr         r2, [r11, #-0xB0]
  058c4	e3a03034	 mov         r3, #0x34
  058c8	e0030392	 mul         r3, r2, r3
  058cc	e0813003	 add         r3, r1, r3
  058d0	e283302c	 add         r3, r3, #0x2C
  058d4	e5d33000	 ldrb        r3, [r3]
  058d8	e3530001	 cmp         r3, #1
  058dc	1a00000c	 bne         |$LN19@Device_Pro@4|

; 2206 :         {
; 2207 :             pPdd->ep[endpoint].dmaDVFSstate = DVFS_POSTDMA;

  058e0	e51b30b4	 ldr         r3, [r11, #-0xB4]
  058e4	e28310ac	 add         r1, r3, #0xAC
  058e8	e51b20b0	 ldr         r2, [r11, #-0xB0]
  058ec	e3a03034	 mov         r3, #0x34
  058f0	e0030392	 mul         r3, r2, r3
  058f4	e0813003	 add         r3, r1, r3
  058f8	e283202c	 add         r2, r3, #0x2C
  058fc	e3a03002	 mov         r3, #2
  05900	e5c23000	 strb        r3, [r2]

; 2208 :             PostDmaDeactivation(pPdd, endpoint, TX_TRANSFER);

  05904	e3a02000	 mov         r2, #0
  05908	e51b10b0	 ldr         r1, [r11, #-0xB0]
  0590c	e51b00b4	 ldr         r0, [r11, #-0xB4]
  05910	eb000000	 bl          PostDmaDeactivation
  05914		 |$LN19@Device_Pro@4|

; 2209 :         }
; 2210 :         LeaveCriticalSection(&pPdd->csDVFS);

  05914	e51b30b4	 ldr         r3, [r11, #-0xB4]
  05918	e2833b01	 add         r3, r3, #1, 22
  0591c	e2830014	 add         r0, r3, #0x14
  05920	eb000000	 bl          LeaveCriticalSection

; 2211 : 
; 2212 :         if ((pTransfer->cbBuffer - pTransfer->cbTransferred) == 0)

  05924	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05928	e283200c	 add         r2, r3, #0xC
  0592c	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05930	e2833010	 add         r3, r3, #0x10
  05934	e5922000	 ldr         r2, [r2]
  05938	e5933000	 ldr         r3, [r3]
  0593c	e0523003	 subs        r3, r2, r3
  05940	1a00001a	 bne         |$LN18@Device_Pro@4|

; 2213 :         {
; 2214 :             // DMA finished loading FIFO with last packet in pTransfer buffer.  Manually set TXPKTRDY to let MUSB transmit it.
; 2215 : 
; 2216 :             DEBUGMSG(DEBUG_PRT_INFO, (TEXT("Device_ProcessDMA: no more data to send.  There should be data in FIFO.  Set TXPKTRDY. \r\n")));
; 2217 : 
; 2218 :             // test don't set TXPKTRDY and see if USB mass storage works (no zero length data packets)
; 2219 :             if(pEP->bMassStore)

  05944	e51b30bc	 ldr         r3, [r11, #-0xBC]
  05948	e283300c	 add         r3, r3, #0xC
  0594c	e5933000	 ldr         r3, [r3]
  05950	e3530000	 cmp         r3, #0
  05954	0a000003	 beq         |$LN17@Device_Pro@4|

; 2220 :             {
; 2221 :                 // call ContinueTxDmaTransfer() to see if more data left in pTransfer buffer
; 2222 :                 ContinueTxDmaTransfer(pPdd, endpoint);

  05958	e51b10b0	 ldr         r1, [r11, #-0xB0]
  0595c	e51b00b4	 ldr         r0, [r11, #-0xB4]
  05960	eb000000	 bl          ContinueTxDmaTransfer

; 2223 :             }
; 2224 :             else

  05964	ea000010	 b           |$LN16@Device_Pro@4|
  05968		 |$LN17@Device_Pro@4|

; 2225 :             {
; 2226 :                 SETREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_TXPKTRDY);

  05968	e51b10b0	 ldr         r1, [r11, #-0xB0]
  0596c	e3a03010	 mov         r3, #0x10
  05970	e0020391	 mul         r2, r1, r3
  05974	e51b30c4	 ldr         r3, [r11, #-0xC4]
  05978	e0833002	 add         r3, r3, r2
  0597c	e2833002	 add         r3, r3, #2
  05980	e1d330b0	 ldrh        r3, [r3]
  05984	e3833001	 orr         r3, r3, #1
  05988	e1a00803	 mov         r0, r3, lsl #16
  0598c	e1a00820	 mov         r0, r0, lsr #16
  05990	e51b10b0	 ldr         r1, [r11, #-0xB0]
  05994	e3a03010	 mov         r3, #0x10
  05998	e0020391	 mul         r2, r1, r3
  0599c	e51b30c4	 ldr         r3, [r11, #-0xC4]
  059a0	e0833002	 add         r3, r3, r2
  059a4	e2833002	 add         r3, r3, #2
  059a8	e1c300b0	 strh        r0, [r3]
  059ac		 |$LN16@Device_Pro@4|

; 2227 :             }
; 2228 :         }
; 2229 :         // set up for next block of data to transmit
; 2230 :         //            if ((pTransfer->cbBuffer - pTransfer->cbTransferred) > pPdd->ep[endpoint].maxPacketSize)
; 2231 :         else   // set up DMA to copy next block of data to FIFO

  059ac	ea00001d	 b           |$LN15@Device_Pro@4|
  059b0		 |$LN18@Device_Pro@4|

; 2232 :         {
; 2233 :             // call ContinueTxDmaTransfer() to see if more data left in pTransfer buffer
; 2234 :             if (pEP->bTxDMAShortPacket == TRUE)

  059b0	e51b30bc	 ldr         r3, [r11, #-0xBC]
  059b4	e2833028	 add         r3, r3, #0x28
  059b8	e5933000	 ldr         r3, [r3]
  059bc	e3530001	 cmp         r3, #1
  059c0	1a000015	 bne         |$LN14@Device_Pro@4|

; 2235 :             {
; 2236 :                 SETREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_TXPKTRDY);

  059c4	e51b10b0	 ldr         r1, [r11, #-0xB0]
  059c8	e3a03010	 mov         r3, #0x10
  059cc	e0020391	 mul         r2, r1, r3
  059d0	e51b30c4	 ldr         r3, [r11, #-0xC4]
  059d4	e0833002	 add         r3, r3, r2
  059d8	e2833002	 add         r3, r3, #2
  059dc	e1d330b0	 ldrh        r3, [r3]
  059e0	e3833001	 orr         r3, r3, #1
  059e4	e1a00803	 mov         r0, r3, lsl #16
  059e8	e1a00820	 mov         r0, r0, lsr #16
  059ec	e51b10b0	 ldr         r1, [r11, #-0xB0]
  059f0	e3a03010	 mov         r3, #0x10
  059f4	e0020391	 mul         r2, r1, r3
  059f8	e51b30c4	 ldr         r3, [r11, #-0xC4]
  059fc	e0833002	 add         r3, r3, r2
  05a00	e2833002	 add         r3, r3, #2
  05a04	e1c300b0	 strh        r0, [r3]

; 2237 :                 pEP->bTxDMAShortPacket = FALSE;

  05a08	e51b30bc	 ldr         r3, [r11, #-0xBC]
  05a0c	e2832028	 add         r2, r3, #0x28
  05a10	e3a03000	 mov         r3, #0
  05a14	e5823000	 str         r3, [r2]

; 2238 :             }
; 2239 :             else

  05a18	ea000002	 b           |$LN13@Device_Pro@4|
  05a1c		 |$LN14@Device_Pro@4|

; 2240 :             {
; 2241 :                 ContinueTxDmaTransfer(pPdd, endpoint);

  05a1c	e51b10b0	 ldr         r1, [r11, #-0xB0]
  05a20	e51b00b4	 ldr         r0, [r11, #-0xB4]
  05a24	eb000000	 bl          ContinueTxDmaTransfer
  05a28		 |$LN13@Device_Pro@4|
  05a28		 |$LN15@Device_Pro@4|

; 2242 :             }
; 2243 :         }

  05a28	ea0001e5	 b           |$LN12@Device_Pro@4|
  05a2c		 |$LN21@Device_Pro@4|

; 2244 : 
; 2245 :     }
; 2246 :     else if (channel == MUSB_RX_DMA_CHN)

  05a2c	e5db3004	 ldrb        r3, [r11, #4]
  05a30	e3530001	 cmp         r3, #1
  05a34	1a0001e2	 bne         |$LN11@Device_Pro@4|

; 2247 :     {
; 2248 :         DWORD endpoint				= pPdd->rx0DmaEp;

  05a38	e51b30b4	 ldr         r3, [r11, #-0xB4]
  05a3c	e283300c	 add         r3, r3, #0xC
  05a40	e5933000	 ldr         r3, [r3]
  05a44	e50b30a0	 str         r3, [r11, #-0xA0]

; 2249 :         DWORD size					= 0;

  05a48	e3a03000	 mov         r3, #0
  05a4c	e50b309c	 str         r3, [r11, #-0x9C]

; 2250 :         UCHAR *pBuffer				= NULL;

  05a50	e3a03000	 mov         r3, #0
  05a54	e50b30ac	 str         r3, [r11, #-0xAC]

; 2251 :         PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUSBContext->pUsbCsrRegs;

  05a58	e51b30b4	 ldr         r3, [r11, #-0xB4]
  05a5c	e2833020	 add         r3, r3, #0x20
  05a60	e5933000	 ldr         r3, [r3]
  05a64	e283301c	 add         r3, r3, #0x1C
  05a68	e5933000	 ldr         r3, [r3]
  05a6c	e50b30a8	 str         r3, [r11, #-0xA8]

; 2252 :         WORD rxcount				= 0;

  05a70	e3a03000	 mov         r3, #0
  05a74	e14b39b8	 strh        r3, [r11, #-0x98]

; 2253 :         UINT16 csrVal				= 0;

  05a78	e3a03000	 mov         r3, #0
  05a7c	e14b3ab4	 strh        r3, [r11, #-0xA4]

; 2254 : 
; 2255 :         csrVal = INREG16(&pCsrRegs->ep[endpoint].RxCSR);

  05a80	e51b10a0	 ldr         r1, [r11, #-0xA0]
  05a84	e3a03010	 mov         r3, #0x10
  05a88	e0020391	 mul         r2, r1, r3
  05a8c	e51b30a8	 ldr         r3, [r11, #-0xA8]
  05a90	e0833002	 add         r3, r3, r2
  05a94	e2833006	 add         r3, r3, #6
  05a98	e1d330b0	 ldrh        r3, [r3]
  05a9c	e14b3ab4	 strh        r3, [r11, #-0xA4]

; 2256 : 
; 2257 :         pEP = &pPdd->ep[endpoint];

  05aa0	e51b30b4	 ldr         r3, [r11, #-0xB4]
  05aa4	e28310ac	 add         r1, r3, #0xAC
  05aa8	e51b20a0	 ldr         r2, [r11, #-0xA0]
  05aac	e3a03034	 mov         r3, #0x34
  05ab0	e0030392	 mul         r3, r2, r3
  05ab4	e0813003	 add         r3, r1, r3
  05ab8	e50b30bc	 str         r3, [r11, #-0xBC]

; 2258 :         pTransfer = pEP->pTransfer;

  05abc	e51b30bc	 ldr         r3, [r11, #-0xBC]
  05ac0	e2833020	 add         r3, r3, #0x20
  05ac4	e5933000	 ldr         r3, [r3]
  05ac8	e50b30c0	 str         r3, [r11, #-0xC0]

; 2259 : 
; 2260 :         if (pTransfer == NULL)

  05acc	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05ad0	e3530000	 cmp         r3, #0
  05ad4	1a000018	 bne         |$LN10@Device_Pro@4|

; 2261 :         {
; 2262 :             DEBUGMSG(ZONE_DVFS, (L"Device_ProcessDMA:  error pTransfer is NULL\r\n"));

  05ad8	e59f3714	 ldr         r3, [pc, #0x714]
  05adc	e5933440	 ldr         r3, [r3, #0x440]
  05ae0	e3130b02	 tst         r3, #2, 22
  05ae4	0a00000f	 beq         |$LN34@Device_Pro@4|
  05ae8	e59f3704	 ldr         r3, [pc, #0x704]
  05aec	e5933440	 ldr         r3, [r3, #0x440]
  05af0	e3130801	 tst         r3, #1, 16
  05af4	0a000004	 beq         |$LN32@Device_Pro@4|
  05af8	e59f0704	 ldr         r0, [pc, #0x704]
  05afc	eb000000	 bl          CeLogMsg
  05b00	e3a03001	 mov         r3, #1
  05b04	e50b3038	 str         r3, [r11, #-0x38]
  05b08	ea000003	 b           |$LN33@Device_Pro@4|
  05b0c		 |$LN32@Device_Pro@4|
  05b0c	e59f06f0	 ldr         r0, [pc, #0x6F0]
  05b10	eb000000	 bl          NKDbgPrintfW
  05b14	e3a03000	 mov         r3, #0
  05b18	e50b3038	 str         r3, [r11, #-0x38]
  05b1c		 |$LN33@Device_Pro@4|
  05b1c	e3a03001	 mov         r3, #1
  05b20	e50b3034	 str         r3, [r11, #-0x34]
  05b24	ea000001	 b           |$LN35@Device_Pro@4|
  05b28		 |$LN34@Device_Pro@4|
  05b28	e3a03000	 mov         r3, #0
  05b2c	e50b3034	 str         r3, [r11, #-0x34]
  05b30		 |$LN35@Device_Pro@4|

; 2263 :             return ERROR_INVALID_PARAMETER;

  05b30	e3a03057	 mov         r3, #0x57
  05b34	e50b3094	 str         r3, [r11, #-0x94]
  05b38	ea0001a3	 b           |$LN22@Device_Pro@4|
  05b3c		 |$LN10@Device_Pro@4|

; 2264 :         }
; 2265 : 
; 2266 :         DEBUGMSG(ZONE_INFO, (TEXT("Device_ProcessDMA RX, EP %d Cntl(0x%x) pTransfer(0x%x), pvBuffer(0x%x), cbBuffer(0x%x), cbTransferred(0x%x)\r\n"),
; 2267 :             endpoint, INREG32(&pOTG->pUsbDmaRegs->dma[channel].Cntl), pTransfer, pTransfer->pvBuffer, pTransfer->cbBuffer, pTransfer->cbTransferred));

  05b3c	e59f36b0	 ldr         r3, [pc, #0x6B0]
  05b40	e5933440	 ldr         r3, [r3, #0x440]
  05b44	e3130b01	 tst         r3, #1, 22
  05b48	0a00003f	 beq         |$LN38@Device_Pro@4|
  05b4c	e59f36a0	 ldr         r3, [pc, #0x6A0]
  05b50	e5933440	 ldr         r3, [r3, #0x440]
  05b54	e3130801	 tst         r3, #1, 16
  05b58	0a00001c	 beq         |$LN36@Device_Pro@4|
  05b5c	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05b60	e2833010	 add         r3, r3, #0x10
  05b64	e5933000	 ldr         r3, [r3]
  05b68	e58d3008	 str         r3, [sp, #8]
  05b6c	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05b70	e283300c	 add         r3, r3, #0xC
  05b74	e5933000	 ldr         r3, [r3]
  05b78	e58d3004	 str         r3, [sp, #4]
  05b7c	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05b80	e2833004	 add         r3, r3, #4
  05b84	e5933000	 ldr         r3, [r3]
  05b88	e58d3000	 str         r3, [sp]
  05b8c	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05b90	e51b20b8	 ldr         r2, [r11, #-0xB8]
  05b94	e2822024	 add         r2, r2, #0x24
  05b98	e5922000	 ldr         r2, [r2]
  05b9c	e2820004	 add         r0, r2, #4
  05ba0	e5db2004	 ldrb        r2, [r11, #4]
  05ba4	e1a01002	 mov         r1, r2
  05ba8	e3a02010	 mov         r2, #0x10
  05bac	e0020291	 mul         r2, r1, r2
  05bb0	e0802002	 add         r2, r0, r2
  05bb4	e5922000	 ldr         r2, [r2]
  05bb8	e51b10a0	 ldr         r1, [r11, #-0xA0]
  05bbc	e59f063c	 ldr         r0, [pc, #0x63C]
  05bc0	eb000000	 bl          CeLogMsg
  05bc4	e3a03001	 mov         r3, #1
  05bc8	e50b3030	 str         r3, [r11, #-0x30]
  05bcc	ea00001b	 b           |$LN37@Device_Pro@4|
  05bd0		 |$LN36@Device_Pro@4|
  05bd0	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05bd4	e2833010	 add         r3, r3, #0x10
  05bd8	e5933000	 ldr         r3, [r3]
  05bdc	e58d3008	 str         r3, [sp, #8]
  05be0	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05be4	e283300c	 add         r3, r3, #0xC
  05be8	e5933000	 ldr         r3, [r3]
  05bec	e58d3004	 str         r3, [sp, #4]
  05bf0	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05bf4	e2833004	 add         r3, r3, #4
  05bf8	e5933000	 ldr         r3, [r3]
  05bfc	e58d3000	 str         r3, [sp]
  05c00	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05c04	e51b20b8	 ldr         r2, [r11, #-0xB8]
  05c08	e2822024	 add         r2, r2, #0x24
  05c0c	e5922000	 ldr         r2, [r2]
  05c10	e2820004	 add         r0, r2, #4
  05c14	e5db2004	 ldrb        r2, [r11, #4]
  05c18	e1a01002	 mov         r1, r2
  05c1c	e3a02010	 mov         r2, #0x10
  05c20	e0020291	 mul         r2, r1, r2
  05c24	e0802002	 add         r2, r0, r2
  05c28	e5922000	 ldr         r2, [r2]
  05c2c	e51b10a0	 ldr         r1, [r11, #-0xA0]
  05c30	e59f05c8	 ldr         r0, [pc, #0x5C8]
  05c34	eb000000	 bl          NKDbgPrintfW
  05c38	e3a03000	 mov         r3, #0
  05c3c	e50b3030	 str         r3, [r11, #-0x30]
  05c40		 |$LN37@Device_Pro@4|
  05c40	e3a03001	 mov         r3, #1
  05c44	e50b302c	 str         r3, [r11, #-0x2C]
  05c48	ea000001	 b           |$LN39@Device_Pro@4|
  05c4c		 |$LN38@Device_Pro@4|
  05c4c	e3a03000	 mov         r3, #0
  05c50	e50b302c	 str         r3, [r11, #-0x2C]
  05c54		 |$LN39@Device_Pro@4|
  05c54		 |$LN59@Device_Pro@4|

; 2268 : 
; 2269 :         __try
; 2270 :         {
; 2271 :             pBuffer =(UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;

  05c54	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05c58	e2832004	 add         r2, r3, #4
  05c5c	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05c60	e2833010	 add         r3, r3, #0x10
  05c64	e5922000	 ldr         r2, [r2]
  05c68	e5933000	 ldr         r3, [r3]
  05c6c	e0823003	 add         r3, r2, r3
  05c70	e50b30ac	 str         r3, [r11, #-0xAC]

; 2272 :             EnterCriticalSection(&pPdd->dmaCS);

  05c74	e51b30b4	 ldr         r3, [r11, #-0xB4]
  05c78	e2830034	 add         r0, r3, #0x34
  05c7c	eb000000	 bl          EnterCriticalSection

; 2273 : 
; 2274 :             size = (INREG32(&pOTG->pUsbDmaRegs->dma[channel].Addr) == 0x00) ?
; 2275 :                     0 : pEP->dwRxDMASize - INREG32(&pOTG->pUsbDmaRegs->dma[channel].Count);

  05c80	e51b30b8	 ldr         r3, [r11, #-0xB8]
  05c84	e2833024	 add         r3, r3, #0x24
  05c88	e5933000	 ldr         r3, [r3]
  05c8c	e2831004	 add         r1, r3, #4
  05c90	e5db3004	 ldrb        r3, [r11, #4]
  05c94	e1a02003	 mov         r2, r3
  05c98	e3a03010	 mov         r3, #0x10
  05c9c	e0030392	 mul         r3, r2, r3
  05ca0	e0813003	 add         r3, r1, r3
  05ca4	e2833004	 add         r3, r3, #4
  05ca8	e5933000	 ldr         r3, [r3]
  05cac	e3530000	 cmp         r3, #0
  05cb0	1a000002	 bne         |$LN40@Device_Pro@4|
  05cb4	e3a03000	 mov         r3, #0
  05cb8	e50b3028	 str         r3, [r11, #-0x28]
  05cbc	ea00000f	 b           |$LN41@Device_Pro@4|
  05cc0		 |$LN40@Device_Pro@4|
  05cc0	e51b30bc	 ldr         r3, [r11, #-0xBC]
  05cc4	e2830024	 add         r0, r3, #0x24
  05cc8	e51b30b8	 ldr         r3, [r11, #-0xB8]
  05ccc	e2833024	 add         r3, r3, #0x24
  05cd0	e5933000	 ldr         r3, [r3]
  05cd4	e2831004	 add         r1, r3, #4
  05cd8	e5db3004	 ldrb        r3, [r11, #4]
  05cdc	e1a02003	 mov         r2, r3
  05ce0	e3a03010	 mov         r3, #0x10
  05ce4	e0030392	 mul         r3, r2, r3
  05ce8	e0813003	 add         r3, r1, r3
  05cec	e2833008	 add         r3, r3, #8
  05cf0	e5932000	 ldr         r2, [r3]
  05cf4	e5903000	 ldr         r3, [r0]
  05cf8	e0433002	 sub         r3, r3, r2
  05cfc	e50b3028	 str         r3, [r11, #-0x28]
  05d00		 |$LN41@Device_Pro@4|
  05d00	e51b3028	 ldr         r3, [r11, #-0x28]
  05d04	e50b309c	 str         r3, [r11, #-0x9C]

; 2276 : 
; 2277 :             LeaveCriticalSection(&pPdd->dmaCS);

  05d08	e51b30b4	 ldr         r3, [r11, #-0xB4]
  05d0c	e2830034	 add         r0, r3, #0x34
  05d10	eb000000	 bl          LeaveCriticalSection

; 2278 :             // According to the specification, you get this interrupt because the DMA COUNT = 0
; 2279 :             rxcount = INREG16(&pCsrRegs->ep[endpoint].Count.RxCount);

  05d14	e51b10a0	 ldr         r1, [r11, #-0xA0]
  05d18	e3a03010	 mov         r3, #0x10
  05d1c	e0020391	 mul         r2, r1, r3
  05d20	e51b30a8	 ldr         r3, [r11, #-0xA8]
  05d24	e0833002	 add         r3, r3, r2
  05d28	e2833008	 add         r3, r3, #8
  05d2c	e1d330b0	 ldrh        r3, [r3]
  05d30	e14b39b8	 strh        r3, [r11, #-0x98]

; 2280 : 
; 2281 :             if ((size > 0) && (pTransfer->dwBufferPhysicalAddress == 0))

  05d34	e51b309c	 ldr         r3, [r11, #-0x9C]
  05d38	e3530000	 cmp         r3, #0
  05d3c	9a00000a	 bls         |$LN8@Device_Pro@4|
  05d40	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05d44	e2833008	 add         r3, r3, #8
  05d48	e5933000	 ldr         r3, [r3]
  05d4c	e3530000	 cmp         r3, #0
  05d50	1a000005	 bne         |$LN8@Device_Pro@4|

; 2282 :                 memcpy(pBuffer, pPdd->pDmaRx0Buffer , size);

  05d54	e51b209c	 ldr         r2, [r11, #-0x9C]
  05d58	e51b30b4	 ldr         r3, [r11, #-0xB4]
  05d5c	e2833048	 add         r3, r3, #0x48
  05d60	e5931000	 ldr         r1, [r3]
  05d64	e51b00ac	 ldr         r0, [r11, #-0xAC]
  05d68	eb000000	 bl          memcpy
  05d6c		 |$LN8@Device_Pro@4|

; 2283 : 
; 2284 :             // Now ResetDMAChannel
; 2285 :             ResetDMAChannel(pPdd, channel);

  05d6c	e5db1004	 ldrb        r1, [r11, #4]
  05d70	e51b00b4	 ldr         r0, [r11, #-0xB4]
  05d74	eb000000	 bl          ResetDMAChannel

; 2286 :             EnterCriticalSection(&pPdd->csDVFS);

  05d78	e51b30b4	 ldr         r3, [r11, #-0xB4]
  05d7c	e2833b01	 add         r3, r3, #1, 22
  05d80	e2830014	 add         r0, r3, #0x14
  05d84	eb000000	 bl          EnterCriticalSection

; 2287 :             if (pPdd->ep[endpoint].dmaDVFSstate == DVFS_PREDMA)

  05d88	e51b30b4	 ldr         r3, [r11, #-0xB4]
  05d8c	e28310ac	 add         r1, r3, #0xAC
  05d90	e51b20a0	 ldr         r2, [r11, #-0xA0]
  05d94	e3a03034	 mov         r3, #0x34
  05d98	e0030392	 mul         r3, r2, r3
  05d9c	e0813003	 add         r3, r1, r3
  05da0	e283302c	 add         r3, r3, #0x2C
  05da4	e5d33000	 ldrb        r3, [r3]
  05da8	e3530001	 cmp         r3, #1
  05dac	1a00000c	 bne         |$LN7@Device_Pro@4|

; 2288 :             {
; 2289 :                 pPdd->ep[endpoint].dmaDVFSstate = DVFS_POSTDMA;

  05db0	e51b30b4	 ldr         r3, [r11, #-0xB4]
  05db4	e28310ac	 add         r1, r3, #0xAC
  05db8	e51b20a0	 ldr         r2, [r11, #-0xA0]
  05dbc	e3a03034	 mov         r3, #0x34
  05dc0	e0030392	 mul         r3, r2, r3
  05dc4	e0813003	 add         r3, r1, r3
  05dc8	e283202c	 add         r2, r3, #0x2C
  05dcc	e3a03002	 mov         r3, #2
  05dd0	e5c23000	 strb        r3, [r2]

; 2290 :                 PostDmaDeactivation(pPdd, endpoint, RX_TRANSFER);

  05dd4	e3a02001	 mov         r2, #1
  05dd8	e51b10a0	 ldr         r1, [r11, #-0xA0]
  05ddc	e51b00b4	 ldr         r0, [r11, #-0xB4]
  05de0	eb000000	 bl          PostDmaDeactivation
  05de4		 |$LN7@Device_Pro@4|

; 2291 :             }
; 2292 :             LeaveCriticalSection(&pPdd->csDVFS);

  05de4	e51b30b4	 ldr         r3, [r11, #-0xB4]
  05de8	e2833b01	 add         r3, r3, #1, 22
  05dec	e2830014	 add         r0, r3, #0x14
  05df0	eb000000	 bl          LeaveCriticalSection
  05df4		 |$LN60@Device_Pro@4|

; 2293 : 
; 2294 :         }

  05df4	ea00001a	 b           |$LN61@Device_Pro@4|
  05df8		 |$LN56@Device_Pro@4|

; 2296 :         {
; 2297 :             pTransfer->dwUsbError = UFN_CLIENT_BUFFER_ERROR;

  05df8	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05dfc	e2832014	 add         r2, r3, #0x14
  05e00	e3a03f41	 mov         r3, #0x41, 30
  05e04	e5823000	 str         r3, [r2]

; 2298 :             DEBUGMSG(ZONE_ERROR, (L"UsbFnPdd!Device_ProcessDMA: UFN_CLIENT_BUFFER_ERROR"));

  05e08	e59f33e4	 ldr         r3, [pc, #0x3E4]
  05e0c	e5933440	 ldr         r3, [r3, #0x440]
  05e10	e3130001	 tst         r3, #1
  05e14	0a00000f	 beq         |$LN44@Device_Pro@4|
  05e18	e59f33d4	 ldr         r3, [pc, #0x3D4]
  05e1c	e5933440	 ldr         r3, [r3, #0x440]
  05e20	e3130801	 tst         r3, #1, 16
  05e24	0a000004	 beq         |$LN42@Device_Pro@4|
  05e28	e59f03cc	 ldr         r0, [pc, #0x3CC]
  05e2c	eb000000	 bl          CeLogMsg
  05e30	e3a03001	 mov         r3, #1
  05e34	e50b3024	 str         r3, [r11, #-0x24]
  05e38	ea000003	 b           |$LN43@Device_Pro@4|
  05e3c		 |$LN42@Device_Pro@4|
  05e3c	e59f03b8	 ldr         r0, [pc, #0x3B8]
  05e40	eb000000	 bl          NKDbgPrintfW
  05e44	e3a03000	 mov         r3, #0
  05e48	e50b3024	 str         r3, [r11, #-0x24]
  05e4c		 |$LN43@Device_Pro@4|
  05e4c	e3a03001	 mov         r3, #1
  05e50	e50b3020	 str         r3, [r11, #-0x20]
  05e54	ea000001	 b           |$LN45@Device_Pro@4|
  05e58		 |$LN44@Device_Pro@4|
  05e58	e3a03000	 mov         r3, #0
  05e5c	e50b3020	 str         r3, [r11, #-0x20]
  05e60		 |$LN45@Device_Pro@4|
  05e60	eaffffff	 b           |$LN61@Device_Pro@4|
  05e64		 |$LN61@Device_Pro@4|

; 2299 :         }
; 2300 : 
; 2301 :         // Update buffer and clear zero length flag
; 2302 :         pTransfer->cbTransferred += size;

  05e64	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05e68	e2833010	 add         r3, r3, #0x10
  05e6c	e5932000	 ldr         r2, [r3]
  05e70	e51b309c	 ldr         r3, [r11, #-0x9C]
  05e74	e0822003	 add         r2, r2, r3
  05e78	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05e7c	e2833010	 add         r3, r3, #0x10
  05e80	e5832000	 str         r2, [r3]

; 2303 : 
; 2304 :         pEP->bLastRxUsedDMA = TRUE;

  05e84	e51b30bc	 ldr         r3, [r11, #-0xBC]
  05e88	e2832030	 add         r2, r3, #0x30
  05e8c	e3a03001	 mov         r3, #1
  05e90	e5823000	 str         r3, [r2]

; 2305 : 
; 2306 :         // test.  don't buffer.  pass everything received from each interrupt
; 2307 :         if ((pEP->dwRemainBuffer > 0) && (size % pPdd->ep[endpoint].maxPacketSize == 0)
; 2308 :             && /*(!rxcount) &&*/ (pPdd->rx0DmaState == MODE_DMA))

  05e94	e51b30bc	 ldr         r3, [r11, #-0xBC]
  05e98	e283301c	 add         r3, r3, #0x1C
  05e9c	e5933000	 ldr         r3, [r3]
  05ea0	e3530000	 cmp         r3, #0
  05ea4	9a000013	 bls         |$LN6@Device_Pro@4|
  05ea8	e51b30b4	 ldr         r3, [r11, #-0xB4]
  05eac	e28310ac	 add         r1, r3, #0xAC
  05eb0	e51b20a0	 ldr         r2, [r11, #-0xA0]
  05eb4	e3a03034	 mov         r3, #0x34
  05eb8	e0030392	 mul         r3, r2, r3
  05ebc	e0813003	 add         r3, r1, r3
  05ec0	e1d300b0	 ldrh        r0, [r3]
  05ec4	e51b109c	 ldr         r1, [r11, #-0x9C]
  05ec8	eb000000	 bl          __rt_udiv
  05ecc	e3510000	 cmp         r1, #0
  05ed0	1a000008	 bne         |$LN6@Device_Pro@4|
  05ed4	e51b30b4	 ldr         r3, [r11, #-0xB4]
  05ed8	e283301c	 add         r3, r3, #0x1C
  05edc	e5933000	 ldr         r3, [r3]
  05ee0	e3530000	 cmp         r3, #0
  05ee4	1a000003	 bne         |$LN6@Device_Pro@4|

; 2309 :         {
; 2310 :             StartRxDmaTransfer(pPdd, endpoint);

  05ee8	e51b10a0	 ldr         r1, [r11, #-0xA0]
  05eec	e51b00b4	 ldr         r0, [r11, #-0xB4]
  05ef0	eb000000	 bl          StartRxDmaTransfer

; 2311 :         }
; 2312 :         else

  05ef4	ea0000b2	 b           |$LN5@Device_Pro@4|
  05ef8		 |$LN6@Device_Pro@4|

; 2313 :         {
; 2314 :             pEP->dwRemainBuffer = 0;

  05ef8	e51b30bc	 ldr         r3, [r11, #-0xBC]
  05efc	e283201c	 add         r2, r3, #0x1C
  05f00	e3a03000	 mov         r3, #0
  05f04	e5823000	 str         r3, [r2]

; 2315 :             DEBUGMSG(ZONE_FUNCTION, (TEXT("Device_ProcessDMA rxcount(%d), size(%d), ReadFIFO pTransfer(0x%x), pBuffer(0x%x), cbBuffer(0x%x), cbTransferred(0x%x)\r\n"),
; 2316 :                 size, rxcount, pTransfer, pTransfer->pvBuffer, pTransfer->cbBuffer, pTransfer->cbTransferred));

  05f08	e59f32e4	 ldr         r3, [pc, #0x2E4]
  05f0c	e5933440	 ldr         r3, [r3, #0x440]
  05f10	e3130a01	 tst         r3, #1, 20
  05f14	0a00002d	 beq         |$LN48@Device_Pro@4|
  05f18	e59f32d4	 ldr         r3, [pc, #0x2D4]
  05f1c	e5933440	 ldr         r3, [r3, #0x440]
  05f20	e3130801	 tst         r3, #1, 16
  05f24	0a000013	 beq         |$LN46@Device_Pro@4|
  05f28	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05f2c	e2833010	 add         r3, r3, #0x10
  05f30	e5933000	 ldr         r3, [r3]
  05f34	e58d3008	 str         r3, [sp, #8]
  05f38	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05f3c	e283300c	 add         r3, r3, #0xC
  05f40	e5933000	 ldr         r3, [r3]
  05f44	e58d3004	 str         r3, [sp, #4]
  05f48	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05f4c	e2833004	 add         r3, r3, #4
  05f50	e5933000	 ldr         r3, [r3]
  05f54	e58d3000	 str         r3, [sp]
  05f58	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05f5c	e15b29b8	 ldrh        r2, [r11, #-0x98]
  05f60	e51b109c	 ldr         r1, [r11, #-0x9C]
  05f64	e59f028c	 ldr         r0, [pc, #0x28C]
  05f68	eb000000	 bl          CeLogMsg
  05f6c	e3a03001	 mov         r3, #1
  05f70	e50b301c	 str         r3, [r11, #-0x1C]
  05f74	ea000012	 b           |$LN47@Device_Pro@4|
  05f78		 |$LN46@Device_Pro@4|
  05f78	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05f7c	e2833010	 add         r3, r3, #0x10
  05f80	e5933000	 ldr         r3, [r3]
  05f84	e58d3008	 str         r3, [sp, #8]
  05f88	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05f8c	e283300c	 add         r3, r3, #0xC
  05f90	e5933000	 ldr         r3, [r3]
  05f94	e58d3004	 str         r3, [sp, #4]
  05f98	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05f9c	e2833004	 add         r3, r3, #4
  05fa0	e5933000	 ldr         r3, [r3]
  05fa4	e58d3000	 str         r3, [sp]
  05fa8	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05fac	e15b29b8	 ldrh        r2, [r11, #-0x98]
  05fb0	e51b109c	 ldr         r1, [r11, #-0x9C]
  05fb4	e59f023c	 ldr         r0, [pc, #0x23C]
  05fb8	eb000000	 bl          NKDbgPrintfW
  05fbc	e3a03000	 mov         r3, #0
  05fc0	e50b301c	 str         r3, [r11, #-0x1C]
  05fc4		 |$LN47@Device_Pro@4|
  05fc4	e3a03001	 mov         r3, #1
  05fc8	e50b3018	 str         r3, [r11, #-0x18]
  05fcc	ea000001	 b           |$LN49@Device_Pro@4|
  05fd0		 |$LN48@Device_Pro@4|
  05fd0	e3a03000	 mov         r3, #0
  05fd4	e50b3018	 str         r3, [r11, #-0x18]
  05fd8		 |$LN49@Device_Pro@4|

; 2317 :             if((pTransfer->cbTransferred + rxcount) <= pTransfer->cbBuffer)

  05fd8	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05fdc	e2833010	 add         r3, r3, #0x10
  05fe0	e15b29b8	 ldrh        r2, [r11, #-0x98]
  05fe4	e5933000	 ldr         r3, [r3]
  05fe8	e0832002	 add         r2, r3, r2
  05fec	e51b30c0	 ldr         r3, [r11, #-0xC0]
  05ff0	e283300c	 add         r3, r3, #0xC
  05ff4	e5933000	 ldr         r3, [r3]
  05ff8	e1520003	 cmp         r2, r3
  05ffc	8a000024	 bhi         |$LN4@Device_Pro@4|

; 2318 :             {
; 2319 :                 if(rxcount)

  06000	e15b39b8	 ldrh        r3, [r11, #-0x98]
  06004	e3530000	 cmp         r3, #0
  06008	0a000015	 beq         |$LN3@Device_Pro@4|

; 2320 :                 {
; 2321 :                     pBuffer =(UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;

  0600c	e51b30c0	 ldr         r3, [r11, #-0xC0]
  06010	e2832004	 add         r2, r3, #4
  06014	e51b30c0	 ldr         r3, [r11, #-0xC0]
  06018	e2833010	 add         r3, r3, #0x10
  0601c	e5922000	 ldr         r2, [r2]
  06020	e5933000	 ldr         r3, [r3]
  06024	e0823003	 add         r3, r2, r3
  06028	e50b30ac	 str         r3, [r11, #-0xAC]

; 2322 :                     ReadFIFO(pPdd, (UCHAR)endpoint, pBuffer, (DWORD)rxcount);

  0602c	e15b39b8	 ldrh        r3, [r11, #-0x98]
  06030	e51b20ac	 ldr         r2, [r11, #-0xAC]
  06034	e51b10a0	 ldr         r1, [r11, #-0xA0]
  06038	e20110ff	 and         r1, r1, #0xFF
  0603c	e51b00b4	 ldr         r0, [r11, #-0xB4]
  06040	eb000000	 bl          ReadFIFO

; 2323 : 
; 2324 :                     // We transfered some data
; 2325 :                     pTransfer->cbTransferred += rxcount;

  06044	e51b30c0	 ldr         r3, [r11, #-0xC0]
  06048	e2833010	 add         r3, r3, #0x10
  0604c	e15b29b8	 ldrh        r2, [r11, #-0x98]
  06050	e5933000	 ldr         r3, [r3]
  06054	e0832002	 add         r2, r3, r2
  06058	e51b30c0	 ldr         r3, [r11, #-0xC0]
  0605c	e2833010	 add         r3, r3, #0x10
  06060	e5832000	 str         r2, [r3]
  06064		 |$LN3@Device_Pro@4|

; 2326 :                 }
; 2327 : 
; 2328 :                 // clear intr_rx_data_avail EP bit
; 2329 :                 pPdd->intr_rx_data_avail &= ~(1 << endpoint);

  06064	e51b30b4	 ldr         r3, [r11, #-0xB4]
  06068	e2831e3f	 add         r1, r3, #0x3F, 28
  0606c	e51b20a0	 ldr         r2, [r11, #-0xA0]
  06070	e3a03001	 mov         r3, #1
  06074	e1a03213	 mov         r3, r3, lsl r2
  06078	e1e02003	 mvn         r2, r3
  0607c	e5913000	 ldr         r3, [r1]
  06080	e0032002	 and         r2, r3, r2
  06084	e51b30b4	 ldr         r3, [r11, #-0xB4]
  06088	e2833e3f	 add         r3, r3, #0x3F, 28
  0608c	e5832000	 str         r2, [r3]
  06090	ea00000c	 b           |$LN2@Device_Pro@4|
  06094		 |$LN4@Device_Pro@4|

; 2330 :             }
; 2331 :             else if (rxcount)

  06094	e15b39b8	 ldrh        r3, [r11, #-0x98]
  06098	e3530000	 cmp         r3, #0
  0609c	0a000009	 beq         |$LN1@Device_Pro@4|

; 2332 :             {
; 2333 :                 // set intr_rx_data_avail EP bit
; 2334 :                 pPdd->intr_rx_data_avail |= (1 << endpoint);

  060a0	e51b30b4	 ldr         r3, [r11, #-0xB4]
  060a4	e2831e3f	 add         r1, r3, #0x3F, 28
  060a8	e51b20a0	 ldr         r2, [r11, #-0xA0]
  060ac	e3a03001	 mov         r3, #1
  060b0	e1a02213	 mov         r2, r3, lsl r2
  060b4	e5913000	 ldr         r3, [r1]
  060b8	e1832002	 orr         r2, r3, r2
  060bc	e51b30b4	 ldr         r3, [r11, #-0xB4]
  060c0	e2833e3f	 add         r3, r3, #0x3F, 28
  060c4	e5832000	 str         r2, [r3]
  060c8		 |$LN1@Device_Pro@4|
  060c8		 |$LN2@Device_Pro@4|

; 2335 :             }
; 2336 : 
; 2337 :             CLRREG16(&pCsrRegs->ep[endpoint].RxCSR, RXCSR_P_AUTOCLEAR | RXCSR_P_DMAREQENAB | RXCSR_P_DMAREQMODE);

  060c8	e51b10a0	 ldr         r1, [r11, #-0xA0]
  060cc	e3a03010	 mov         r3, #0x10
  060d0	e0020391	 mul         r2, r1, r3
  060d4	e51b30a8	 ldr         r3, [r11, #-0xA8]
  060d8	e0833002	 add         r3, r3, r2
  060dc	e2833006	 add         r3, r3, #6
  060e0	e1d330b0	 ldrh        r3, [r3]
  060e4	e1a02003	 mov         r2, r3
  060e8	e3e03b2a	 mvn         r3, #0x2A, 22
  060ec	e0023003	 and         r3, r2, r3
  060f0	e1a00803	 mov         r0, r3, lsl #16
  060f4	e1a00820	 mov         r0, r0, lsr #16
  060f8	e51b10a0	 ldr         r1, [r11, #-0xA0]
  060fc	e3a03010	 mov         r3, #0x10
  06100	e0020391	 mul         r2, r1, r3
  06104	e51b30a8	 ldr         r3, [r11, #-0xA8]
  06108	e0833002	 add         r3, r3, r2
  0610c	e2833006	 add         r3, r3, #6
  06110	e1c300b0	 strh        r0, [r3]

; 2338 : 
; 2339 :             DEBUGMSG(ZONE_INFO, (L"Device_ProcessDMA: RX DMA buffer count:%d   FIFO count:%d\r\n", size, rxcount));

  06114	e59f30d8	 ldr         r3, [pc, #0xD8]
  06118	e5933440	 ldr         r3, [r3, #0x440]
  0611c	e3130b01	 tst         r3, #1, 22
  06120	0a000013	 beq         |$LN52@Device_Pro@4|
  06124	e59f30c8	 ldr         r3, [pc, #0xC8]
  06128	e5933440	 ldr         r3, [r3, #0x440]
  0612c	e3130801	 tst         r3, #1, 16
  06130	0a000006	 beq         |$LN50@Device_Pro@4|
  06134	e15b29b8	 ldrh        r2, [r11, #-0x98]
  06138	e51b109c	 ldr         r1, [r11, #-0x9C]
  0613c	e59f00ac	 ldr         r0, [pc, #0xAC]
  06140	eb000000	 bl          CeLogMsg
  06144	e3a03001	 mov         r3, #1
  06148	e50b3014	 str         r3, [r11, #-0x14]
  0614c	ea000005	 b           |$LN51@Device_Pro@4|
  06150		 |$LN50@Device_Pro@4|
  06150	e15b29b8	 ldrh        r2, [r11, #-0x98]
  06154	e51b109c	 ldr         r1, [r11, #-0x9C]
  06158	e59f0090	 ldr         r0, [pc, #0x90]
  0615c	eb000000	 bl          NKDbgPrintfW
  06160	e3a03000	 mov         r3, #0
  06164	e50b3014	 str         r3, [r11, #-0x14]
  06168		 |$LN51@Device_Pro@4|
  06168	e3a03001	 mov         r3, #1
  0616c	e50b3010	 str         r3, [r11, #-0x10]
  06170	ea000001	 b           |$LN53@Device_Pro@4|
  06174		 |$LN52@Device_Pro@4|
  06174	e3a03000	 mov         r3, #0
  06178	e50b3010	 str         r3, [r11, #-0x10]
  0617c		 |$LN53@Device_Pro@4|

; 2340 :             {
; 2341 :                 DEBUGMSG(DEBUG_PRT_TRANS, (L"Device_ProcessDMA: call pfnNotify COMPLETE endp:%d +\r\n", endpoint));
; 2342 : 
; 2343 :                 DEBUGMSG(DEBUG_PRT_TRANS, (L"UsbFnPdd!Device_ProcessDMA: "
; 2344 :                     L"EP %d pTransfer 0x%08x (%d, %d, %d) - done\r\n",
; 2345 :                     endpoint, pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 2346 :                     pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 2347 :                     pTransfer != NULL ? pTransfer->dwUsbError : -1
; 2348 :                     ));
; 2349 :                 DEBUGMSG(DEBUG_PRT_TRANS, (TEXT("ACK: ProcessDMATransfer for EP %d\r\n"), endpoint));
; 2350 :                 pEP->pTransfer = NULL;

  0617c	e51b30bc	 ldr         r3, [r11, #-0xBC]
  06180	e2832020	 add         r2, r3, #0x20
  06184	e3a03000	 mov         r3, #0
  06188	e5823000	 str         r3, [r2]

; 2351 :                 pTransfer->dwUsbError = UFN_NO_ERROR;

  0618c	e51b30c0	 ldr         r3, [r11, #-0xC0]
  06190	e2832014	 add         r2, r3, #0x14
  06194	e3a03000	 mov         r3, #0
  06198	e5823000	 str         r3, [r2]

; 2352 : 
; 2353 :                 pPdd->pfnNotify(
; 2354 :                     pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer
; 2355 :                     );

  0619c	e51b20c0	 ldr         r2, [r11, #-0xC0]
  061a0	e3a01064	 mov         r1, #0x64
  061a4	e51b30b4	 ldr         r3, [r11, #-0xB4]
  061a8	e2833024	 add         r3, r3, #0x24
  061ac	e5930000	 ldr         r0, [r3]
  061b0	e51b30b4	 ldr         r3, [r11, #-0xB4]
  061b4	e2833028	 add         r3, r3, #0x28
  061b8	e5933000	 ldr         r3, [r3]
  061bc	e1a0e00f	 mov         lr, pc
  061c0	e12fff13	 bx          r3
  061c4		 |$LN5@Device_Pro@4|
  061c4		 |$LN11@Device_Pro@4|
  061c4		 |$LN12@Device_Pro@4|

; 2356 : 
; 2357 :             }
; 2358 :         }
; 2359 :     }
; 2360 : 
; 2361 :     return ERROR_SUCCESS;

  061c4	e3a03000	 mov         r3, #0
  061c8	e50b3094	 str         r3, [r11, #-0x94]
  061cc		 |$LN22@Device_Pro@4|
  061cc		 |$LN54@Device_Pro@4|

; 2362 : }

  061cc	e51b0094	 ldr         r0, [r11, #-0x94]
  061d0	e24bd00c	 sub         sp, r11, #0xC
  061d4	e89d6800	 ldmia       sp, {r11, sp, lr}
  061d8	e12fff1e	 bx          lr

			 ENDP  ; |Device_ProcessDMA|

  061dc		 |$LN55@Device_Pro@4|
  061dc		 |$LN64@Device_Pro@4|

; 2295 :         __except(EXCEPTION_EXECUTE_HANDLER)

  061dc	e52de004	 str         lr, [sp, #-4]!
  061e0	e24dd00c	 sub         sp, sp, #0xC
  061e4		 |$LN58@Device_Pro@4|
  061e4		 |$LN67@Device_Pro@4|
  061e4	e3a00001	 mov         r0, #1
  061e8		 |$LN57@Device_Pro@4|
  061e8	e28dd00c	 add         sp, sp, #0xC
  061ec	e49df004	 ldr         pc, [sp], #4
  061f0		 |$LN69@Device_Pro@4|
  061f0		 |$LN70@Device_Pro@4|
  061f0	00000000	 DCD         |??_C@_1HI@OLODOMJP@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAD?$AAM?$AAA?$AA?3?$AA?5?$AAR?$AAX?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr@|
  061f4		 |$LN71@Device_Pro@4|
  061f4	00000000	 DCD         |dpCurSettings|
  061f8		 |$LN72@Device_Pro@4|
  061f8	00000000	 DCD         |??_C@_1PA@DPENCPOJ@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAD?$AAM?$AAA?$AA?5?$AAr?$AAx?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?0?$AA?5?$AAs@|
  061fc		 |$LN73@Device_Pro@4|
  061fc	00000000	 DCD         |??_C@_1GI@KBJCNKBG@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAD?$AAM?$AAA?$AA?3?$AA?5?$AAU?$AAF?$AAN?$AA_@|
  06200		 |$LN74@Device_Pro@4|
  06200	00000000	 DCD         |??_C@_1NM@PMPOJPLC@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAD?$AAM?$AAA?$AA?5?$AAR?$AAX?$AA?0?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAC?$AAn?$AAt?$AAl@|
  06204		 |$LN75@Device_Pro@4|
  06204	00000000	 DCD         |??_C@_1FM@HAEBMFKE@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAD?$AAM?$AAA?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs@|
  06208		 |$LN76@Device_Pro@4|
  06208	00000000	 DCD         |??_C@_1NM@KNDGLOGP@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAD?$AAM?$AAA?$AA?5?$AAT?$AAX?$AA?0?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAC?$AAn?$AAt?$AAl@|
  0620c		 |$LN68@Device_Pro@4|
  0620c		 |$LN66@Device_Pro@4|
	EXPORT	|??_C@_1EM@EBFJOKIO@?$AAA?$AAC?$AAK?$AA?3?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAE?$AAP@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JK@LJKOMLKI@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@JHMJGNNE@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAU?$AAF?$AAN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JI@BPKICFPB@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAD?$AAm?$AAa?$AAT?$AAx?$AA?3?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAp@| [ DATA ] ; `string'
	IMPORT	|CacheRangeFlush|

  000e0			 AREA	 |.pdata|, PDATA
|$T50453| DCD	|$LN55@ContinueTx|
	DCD	0xc001ba05
|$T50455| DCD	|$LN45@ContinueTx|
	DCD	0x40000a02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@EBFJOKIO@?$AAA?$AAC?$AAK?$AA?3?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAE?$AAP@| DCB "A"
	DCB	0x0, "C", 0x0, "K", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u", 0x0, "e", 0x0, "T"
	DCB	0x0, "x", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "E"
	DCB	0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JK@LJKOMLKI@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, "P", 0x0, "d"
	DCB	0x0, "d", 0x0, "!", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "u", 0x0, "e", 0x0, "T", 0x0, "x"
	DCB	0x0, "D", 0x0, "m", 0x0, "a", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "p", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, " "
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "d", 0x0, "o", 0x0, "n"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@JHMJGNNE@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAU?$AAF?$AAN@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, "P", 0x0, "d"
	DCB	0x0, "d", 0x0, "!", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "u", 0x0, "e", 0x0, "T", 0x0, "x"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "U", 0x0, "F"
	DCB	0x0, "N", 0x0, "_", 0x0, "C", 0x0, "L", 0x0, "I", 0x0, "E"
	DCB	0x0, "N", 0x0, "T", 0x0, "_", 0x0, "B", 0x0, "U", 0x0, "F"
	DCB	0x0, "F", 0x0, "E", 0x0, "R", 0x0, "_", 0x0, "E", 0x0, "R"
	DCB	0x0, "R", 0x0, "O", 0x0, "R", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JI@BPKICFPB@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAD?$AAm?$AAa?$AAT?$AAx?$AA?3?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAp@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "D", 0x0, "m", 0x0, "a", 0x0, "T", 0x0, "x"
	DCB	0x0, ":", 0x0, " ", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, ",", 0x0, " "
	DCB	0x0, "p", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, ",", 0x0, " ", 0x0, "c", 0x0, "b", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "e", 0x0, "d", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, ",", 0x0, " ", 0x0, "s", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  0008c			 AREA	 |.xdata|, DATA
|$T50451| DCD	0x1
	DCD	|$LN49@ContinueTx|
	DCD	|$LN50@ContinueTx|
	DCD	|$LN45@ContinueTx|
	DCD	|$LN46@ContinueTx|
; Function compile flags: /Odtp

  0620c			 AREA	 |.text|, CODE, ARM

  0620c	00000000	 DCD         |__C_specific_handler|
  06210	00000000	 DCD         |$T50451|

  06214		 |ContinueTxDmaTransfer| PROC

; 968  : {

  06214		 |$LN55@ContinueTx|
  06214	e1a0c00d	 mov         r12, sp
  06218	e92d0003	 stmdb       sp!, {r0, r1}
  0621c	e92d5810	 stmdb       sp!, {r4, r11, r12, lr}
  06220	e28db010	 add         r11, sp, #0x10
  06224	e24dd094	 sub         sp, sp, #0x94
  06228		 |$LN53@ContinueTx|

; 969  :     DWORD rc = ERROR_INVALID_PARAMETER;

  06228	e3a03057	 mov         r3, #0x57
  0622c	e50b3090	 str         r3, [r11, #-0x90]

; 970  :     MUsbFnEp_t *pEP = &pPdd->ep[endpoint];

  06230	e59b3000	 ldr         r3, [r11]
  06234	e28310ac	 add         r1, r3, #0xAC
  06238	e59b2004	 ldr         r2, [r11, #4]
  0623c	e3a03034	 mov         r3, #0x34
  06240	e0030392	 mul         r3, r2, r3
  06244	e0813003	 add         r3, r1, r3
  06248	e50b3088	 str         r3, [r11, #-0x88]

; 971  :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUSBContext->pUsbCsrRegs;

  0624c	e59b3000	 ldr         r3, [r11]
  06250	e2833020	 add         r3, r3, #0x20
  06254	e5933000	 ldr         r3, [r3]
  06258	e283301c	 add         r3, r3, #0x1C
  0625c	e5933000	 ldr         r3, [r3]
  06260	e50b3094	 str         r3, [r11, #-0x94]

; 972  :     STransfer *pTransfer = pEP->pTransfer;

  06264	e51b3088	 ldr         r3, [r11, #-0x88]
  06268	e2833020	 add         r3, r3, #0x20
  0626c	e5933000	 ldr         r3, [r3]
  06270	e50b308c	 str         r3, [r11, #-0x8C]

; 973  :     DWORD size;
; 974  :     BOOL complete = FALSE;

  06274	e3a03000	 mov         r3, #0
  06278	e50b3080	 str         r3, [r11, #-0x80]

; 975  :     UCHAR *pBuffer;
; 976  :     
; 977  :     
; 978  :     DEBUGMSG(DEBUG_PRT_INFO, (L"UsbFnPdd!ContinueTxDmaTransfer: "
; 979  :         L"EP %d pTransfer 0x%08x (%d, %d, %d)\r\n",
; 980  :         endpoint, pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 981  :         pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 982  :         pTransfer != NULL ? pTransfer->dwUsbError : -1
; 983  :         ));
; 984  :     
; 985  :     if (pTransfer == NULL)

  0627c	e51b308c	 ldr         r3, [r11, #-0x8C]
  06280	e3530000	 cmp         r3, #0
  06284	1a000000	 bne         |$LN11@ContinueTx|

; 986  :         goto cleanUp;

  06288	ea000108	 b           |$cleanUp$48013|
  0628c		 |$LN11@ContinueTx|

; 987  :     
; 988  :     // Is this final interrupt of transfer?
; 989  :     if ((pTransfer->cbTransferred == pTransfer->cbBuffer) && !pEP->zeroLength)

  0628c	e51b308c	 ldr         r3, [r11, #-0x8C]
  06290	e2832010	 add         r2, r3, #0x10
  06294	e51b308c	 ldr         r3, [r11, #-0x8C]
  06298	e283300c	 add         r3, r3, #0xC
  0629c	e5922000	 ldr         r2, [r2]
  062a0	e5933000	 ldr         r3, [r3]
  062a4	e1520003	 cmp         r2, r3
  062a8	1a00000d	 bne         |$LN10@ContinueTx|
  062ac	e51b3088	 ldr         r3, [r11, #-0x88]
  062b0	e2833008	 add         r3, r3, #8
  062b4	e5933000	 ldr         r3, [r3]
  062b8	e3530000	 cmp         r3, #0
  062bc	1a000008	 bne         |$LN10@ContinueTx|

; 990  :     {
; 991  :         pTransfer->dwUsbError = UFN_NO_ERROR;

  062c0	e51b308c	 ldr         r3, [r11, #-0x8C]
  062c4	e2832014	 add         r2, r3, #0x14
  062c8	e3a03000	 mov         r3, #0
  062cc	e5823000	 str         r3, [r2]

; 992  :         complete = TRUE;

  062d0	e3a03001	 mov         r3, #1
  062d4	e50b3080	 str         r3, [r11, #-0x80]

; 993  :         rc = ERROR_SUCCESS;

  062d8	e3a03000	 mov         r3, #0
  062dc	e50b3090	 str         r3, [r11, #-0x90]

; 994  :         goto cleanUp;

  062e0	ea0000f2	 b           |$cleanUp$48013|
  062e4		 |$LN10@ContinueTx|

; 995  :     }
; 996  :     
; 997  :     // Get size and buffer position
; 998  :     size = pTransfer->cbBuffer - pTransfer->cbTransferred;

  062e4	e51b308c	 ldr         r3, [r11, #-0x8C]
  062e8	e283200c	 add         r2, r3, #0xC
  062ec	e51b308c	 ldr         r3, [r11, #-0x8C]
  062f0	e2833010	 add         r3, r3, #0x10
  062f4	e5922000	 ldr         r2, [r2]
  062f8	e5933000	 ldr         r3, [r3]
  062fc	e0423003	 sub         r3, r2, r3
  06300	e50b3084	 str         r3, [r11, #-0x84]

; 999  :     
; 1000 :     if (!pPdd->ep[endpoint].dmaEnabled || (size < pPdd->ep[endpoint].maxPacketSize))

  06304	e59b3000	 ldr         r3, [r11]
  06308	e28310ac	 add         r1, r3, #0xAC
  0630c	e59b2004	 ldr         r2, [r11, #4]
  06310	e3a03034	 mov         r3, #0x34
  06314	e0030392	 mul         r3, r2, r3
  06318	e0813003	 add         r3, r1, r3
  0631c	e2833010	 add         r3, r3, #0x10
  06320	e5933000	 ldr         r3, [r3]
  06324	e3530000	 cmp         r3, #0
  06328	0a000009	 beq         |$LN8@ContinueTx|
  0632c	e59b3000	 ldr         r3, [r11]
  06330	e28310ac	 add         r1, r3, #0xAC
  06334	e59b2004	 ldr         r2, [r11, #4]
  06338	e3a03034	 mov         r3, #0x34
  0633c	e0030392	 mul         r3, r2, r3
  06340	e0813003	 add         r3, r1, r3
  06344	e1d320b0	 ldrh        r2, [r3]
  06348	e51b3084	 ldr         r3, [r11, #-0x84]
  0634c	e1530002	 cmp         r3, r2
  06350	2a000006	 bcs         |$LN9@ContinueTx|
  06354		 |$LN8@ContinueTx|

; 1001 :     {
; 1002 :         return ContinueTxTransfer(pPdd, endpoint);

  06354	e59b1004	 ldr         r1, [r11, #4]
  06358	e59b0000	 ldr         r0, [r11]
  0635c	eb000000	 bl          ContinueTxTransfer
  06360	e50b0054	 str         r0, [r11, #-0x54]
  06364	e51b3054	 ldr         r3, [r11, #-0x54]
  06368	e50b307c	 str         r3, [r11, #-0x7C]
  0636c	ea00015e	 b           |$LN12@ContinueTx|
  06370		 |$LN9@ContinueTx|

; 1003 :     }
; 1004 : 
; 1005 :     // If we are using PDD buffer we must check for maximal size
; 1006 :     if ((pTransfer->dwBufferPhysicalAddress == 0) &&
; 1007 :         (size > pPdd->tx0DmaBufferSize))

  06370	e51b308c	 ldr         r3, [r11, #-0x8C]
  06374	e2833008	 add         r3, r3, #8
  06378	e5933000	 ldr         r3, [r3]
  0637c	e3530000	 cmp         r3, #0
  06380	1a000014	 bne         |$LN7@ContinueTx|
  06384	e59b3000	 ldr         r3, [r11]
  06388	e2833018	 add         r3, r3, #0x18
  0638c	e51b2084	 ldr         r2, [r11, #-0x84]
  06390	e5933000	 ldr         r3, [r3]
  06394	e1520003	 cmp         r2, r3
  06398	9a00000e	 bls         |$LN7@ContinueTx|

; 1008 :     {
; 1009 :         // send integer multiple of maxPacket size
; 1010 :         size = pEP->maxPacketSize *(pPdd->tx0DmaBufferSize/pEP->maxPacketSize);

  0639c	e51b3088	 ldr         r3, [r11, #-0x88]
  063a0	e1d340b0	 ldrh        r4, [r3]
  063a4	e59b3000	 ldr         r3, [r11]
  063a8	e2832018	 add         r2, r3, #0x18
  063ac	e51b3088	 ldr         r3, [r11, #-0x88]
  063b0	e1d300b0	 ldrh        r0, [r3]
  063b4	e5921000	 ldr         r1, [r2]
  063b8	eb000000	 bl          __rt_udiv
  063bc	e0030094	 mul         r3, r4, r0
  063c0	e50b3084	 str         r3, [r11, #-0x84]

; 1011 :         pEP->bTxDMAShortPacket = FALSE;

  063c4	e51b3088	 ldr         r3, [r11, #-0x88]
  063c8	e2832028	 add         r2, r3, #0x28
  063cc	e3a03000	 mov         r3, #0
  063d0	e5823000	 str         r3, [r2]

; 1012 : 
; 1013 :     }
; 1014 :     else

  063d4	ea00000e	 b           |$LN6@ContinueTx|
  063d8		 |$LN7@ContinueTx|

; 1015 :     {
; 1016 :         pEP->bTxDMAShortPacket = (size % pEP->maxPacketSize) ? FALSE : TRUE;

  063d8	e51b3088	 ldr         r3, [r11, #-0x88]
  063dc	e1d300b0	 ldrh        r0, [r3]
  063e0	e51b1084	 ldr         r1, [r11, #-0x84]
  063e4	eb000000	 bl          __rt_udiv
  063e8	e3510000	 cmp         r1, #0
  063ec	0a000002	 beq         |$LN14@ContinueTx|
  063f0	e3a03000	 mov         r3, #0
  063f4	e50b3050	 str         r3, [r11, #-0x50]
  063f8	ea000001	 b           |$LN15@ContinueTx|
  063fc		 |$LN14@ContinueTx|
  063fc	e3a03001	 mov         r3, #1
  06400	e50b3050	 str         r3, [r11, #-0x50]
  06404		 |$LN15@ContinueTx|
  06404	e51b3088	 ldr         r3, [r11, #-0x88]
  06408	e2832028	 add         r2, r3, #0x28
  0640c	e51b3050	 ldr         r3, [r11, #-0x50]
  06410	e5823000	 str         r3, [r2]
  06414		 |$LN6@ContinueTx|

; 1017 :     }
; 1018 : 
; 1019 : 
; 1020 : 
; 1021 :     EnterCriticalSection(&pPdd->dmaCS);

  06414	e59b3000	 ldr         r3, [r11]
  06418	e2830034	 add         r0, r3, #0x34
  0641c	eb000000	 bl          EnterCriticalSection

; 1022 :     if(!pPdd->bRXIsUsingUsbDMA)

  06420	e59b3000	 ldr         r3, [r11]
  06424	e2833b01	 add         r3, r3, #1, 22
  06428	e2833038	 add         r3, r3, #0x38
  0642c	e5933000	 ldr         r3, [r3]
  06430	e3530000	 cmp         r3, #0
  06434	1a000008	 bne         |$LN5@ContinueTx|

; 1023 :     {
; 1024 :         pPdd->bTXIsUsingUsbDMA = TRUE;

  06438	e59b3000	 ldr         r3, [r11]
  0643c	e2833b01	 add         r3, r3, #1, 22
  06440	e2832034	 add         r2, r3, #0x34
  06444	e3a03001	 mov         r3, #1
  06448	e5823000	 str         r3, [r2]

; 1025 :         LeaveCriticalSection(&pPdd->dmaCS);

  0644c	e59b3000	 ldr         r3, [r11]
  06450	e2830034	 add         r0, r3, #0x34
  06454	eb000000	 bl          LeaveCriticalSection

; 1026 :     }
; 1027 :     else

  06458	ea000009	 b           |$LN4@ContinueTx|
  0645c		 |$LN5@ContinueTx|

; 1028 :     {
; 1029 :         LeaveCriticalSection(&pPdd->dmaCS);

  0645c	e59b3000	 ldr         r3, [r11]
  06460	e2830034	 add         r0, r3, #0x34
  06464	eb000000	 bl          LeaveCriticalSection

; 1030 :         return ContinueTxTransfer(pPdd, endpoint);

  06468	e59b1004	 ldr         r1, [r11, #4]
  0646c	e59b0000	 ldr         r0, [r11]
  06470	eb000000	 bl          ContinueTxTransfer
  06474	e50b004c	 str         r0, [r11, #-0x4C]
  06478	e51b304c	 ldr         r3, [r11, #-0x4C]
  0647c	e50b307c	 str         r3, [r11, #-0x7C]
  06480	ea000119	 b           |$LN12@ContinueTx|
  06484		 |$LN4@ContinueTx|
  06484		 |$LN49@ContinueTx|

; 1031 :     }
; 1032 :       
; 1033 :     __try
; 1034 :     {
; 1035 :         pBuffer =(UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;

  06484	e51b308c	 ldr         r3, [r11, #-0x8C]
  06488	e2832004	 add         r2, r3, #4
  0648c	e51b308c	 ldr         r3, [r11, #-0x8C]
  06490	e2833010	 add         r3, r3, #0x10
  06494	e5922000	 ldr         r2, [r2]
  06498	e5933000	 ldr         r3, [r3]
  0649c	e0823003	 add         r3, r2, r3
  064a0	e50b3098	 str         r3, [r11, #-0x98]

; 1036 :         DEBUGMSG(ZONE_FUNCTION, (L"ContinueDmaTx: Transfer(0x%x), pBuffer(0x%x), cbTransferred(%d), size(%d)\r\n",
; 1037 :             pTransfer, pBuffer, pTransfer->cbTransferred, size));

  064a4	e59f3468	 ldr         r3, [pc, #0x468]
  064a8	e5933440	 ldr         r3, [r3, #0x440]
  064ac	e3130a01	 tst         r3, #1, 20
  064b0	0a00001d	 beq         |$LN18@ContinueTx|
  064b4	e59f3458	 ldr         r3, [pc, #0x458]
  064b8	e5933440	 ldr         r3, [r3, #0x440]
  064bc	e3130801	 tst         r3, #1, 16
  064c0	0a00000b	 beq         |$LN16@ContinueTx|
  064c4	e51b3084	 ldr         r3, [r11, #-0x84]
  064c8	e58d3000	 str         r3, [sp]
  064cc	e51b308c	 ldr         r3, [r11, #-0x8C]
  064d0	e2833010	 add         r3, r3, #0x10
  064d4	e5933000	 ldr         r3, [r3]
  064d8	e51b2098	 ldr         r2, [r11, #-0x98]
  064dc	e51b108c	 ldr         r1, [r11, #-0x8C]
  064e0	e59f0438	 ldr         r0, [pc, #0x438]
  064e4	eb000000	 bl          CeLogMsg
  064e8	e3a03001	 mov         r3, #1
  064ec	e50b3048	 str         r3, [r11, #-0x48]
  064f0	ea00000a	 b           |$LN17@ContinueTx|
  064f4		 |$LN16@ContinueTx|
  064f4	e51b3084	 ldr         r3, [r11, #-0x84]
  064f8	e58d3000	 str         r3, [sp]
  064fc	e51b308c	 ldr         r3, [r11, #-0x8C]
  06500	e2833010	 add         r3, r3, #0x10
  06504	e5933000	 ldr         r3, [r3]
  06508	e51b2098	 ldr         r2, [r11, #-0x98]
  0650c	e51b108c	 ldr         r1, [r11, #-0x8C]
  06510	e59f0408	 ldr         r0, [pc, #0x408]
  06514	eb000000	 bl          NKDbgPrintfW
  06518	e3a03000	 mov         r3, #0
  0651c	e50b3048	 str         r3, [r11, #-0x48]
  06520		 |$LN17@ContinueTx|
  06520	e3a03001	 mov         r3, #1
  06524	e50b3044	 str         r3, [r11, #-0x44]
  06528	ea000001	 b           |$LN19@ContinueTx|
  0652c		 |$LN18@ContinueTx|
  0652c	e3a03000	 mov         r3, #0
  06530	e50b3044	 str         r3, [r11, #-0x44]
  06534		 |$LN19@ContinueTx|

; 1038 : 
; 1039 :         {
; 1040 :             if (size > 0)

  06534	e51b3084	 ldr         r3, [r11, #-0x84]
  06538	e3530000	 cmp         r3, #0
  0653c	9a00000b	 bls         |$LN2@ContinueTx|

; 1041 :             {
; 1042 :                 memcpy(pPdd->pCachedDmaTx0Buffer, pBuffer, size);

  06540	e51b2084	 ldr         r2, [r11, #-0x84]
  06544	e51b1098	 ldr         r1, [r11, #-0x98]
  06548	e59b3000	 ldr         r3, [r11]
  0654c	e2833058	 add         r3, r3, #0x58
  06550	e5930000	 ldr         r0, [r3]
  06554	eb000000	 bl          memcpy

; 1043 :                 CacheRangeFlush(pPdd->pCachedDmaTx0Buffer, size, CACHE_SYNC_DISCARD);

  06558	e3a02001	 mov         r2, #1
  0655c	e51b1084	 ldr         r1, [r11, #-0x84]
  06560	e59b3000	 ldr         r3, [r11]
  06564	e2833058	 add         r3, r3, #0x58
  06568	e5930000	 ldr         r0, [r3]
  0656c	eb000000	 bl          CacheRangeFlush
  06570		 |$LN2@ContinueTx|

; 1044 :             }
; 1045 : 
; 1046 :             PreDmaActivation(pPdd, endpoint, TX_TRANSFER);

  06570	e3a02000	 mov         r2, #0
  06574	e59b1004	 ldr         r1, [r11, #4]
  06578	e59b0000	 ldr         r0, [r11]
  0657c	eb000000	 bl          PreDmaActivation

; 1047 :             SETREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_AUTOSET | TXCSR_P_DMAREQENAB | TXCSR_P_DMAREQMODE);

  06580	e59b1004	 ldr         r1, [r11, #4]
  06584	e3a03010	 mov         r3, #0x10
  06588	e0020391	 mul         r2, r1, r3
  0658c	e51b3094	 ldr         r3, [r11, #-0x94]
  06590	e0833002	 add         r3, r3, r2
  06594	e2833002	 add         r3, r3, #2
  06598	e1d330b0	 ldrh        r3, [r3]
  0659c	e3833b25	 orr         r3, r3, #0x25, 22
  065a0	e1a00803	 mov         r0, r3, lsl #16
  065a4	e1a00820	 mov         r0, r0, lsr #16
  065a8	e59b1004	 ldr         r1, [r11, #4]
  065ac	e3a03010	 mov         r3, #0x10
  065b0	e0020391	 mul         r2, r1, r3
  065b4	e51b3094	 ldr         r3, [r11, #-0x94]
  065b8	e0833002	 add         r3, r3, r2
  065bc	e2833002	 add         r3, r3, #2
  065c0	e1c300b0	 strh        r0, [r3]

; 1048 :             ProcessDMAChannel(pPdd, (UCHAR) endpoint, MUSB_TX_DMA_CHN, TRUE, pPdd->paDmaTx0Buffer, size, pEP->maxPacketSize);

  065c4	e51b3088	 ldr         r3, [r11, #-0x88]
  065c8	e1d330b0	 ldrh        r3, [r3]
  065cc	e58d3008	 str         r3, [sp, #8]
  065d0	e51b3084	 ldr         r3, [r11, #-0x84]
  065d4	e58d3004	 str         r3, [sp, #4]
  065d8	e59b3000	 ldr         r3, [r11]
  065dc	e2833054	 add         r3, r3, #0x54
  065e0	e5933000	 ldr         r3, [r3]
  065e4	e58d3000	 str         r3, [sp]
  065e8	e3a03001	 mov         r3, #1
  065ec	e3a02000	 mov         r2, #0
  065f0	e59b1004	 ldr         r1, [r11, #4]
  065f4	e20110ff	 and         r1, r1, #0xFF
  065f8	e59b0000	 ldr         r0, [r11]
  065fc	eb000000	 bl          ProcessDMAChannel
  06600		 |$LN50@ContinueTx|

; 1049 :         }
; 1050 :     }

  06600	ea00001c	 b           |$LN51@ContinueTx|
  06604		 |$LN46@ContinueTx|

; 1052 :     {
; 1053 :         pTransfer->dwUsbError = UFN_CLIENT_BUFFER_ERROR;

  06604	e51b308c	 ldr         r3, [r11, #-0x8C]
  06608	e2832014	 add         r2, r3, #0x14
  0660c	e3a03f41	 mov         r3, #0x41, 30
  06610	e5823000	 str         r3, [r2]

; 1054 :         complete = TRUE;

  06614	e3a03001	 mov         r3, #1
  06618	e50b3080	 str         r3, [r11, #-0x80]

; 1055 :         DEBUGMSG(ZONE_ERROR, (L"UsbFnPdd!ContinueTxTransfer: UFN_CLIENT_BUFFER_ERROR"));

  0661c	e59f32f0	 ldr         r3, [pc, #0x2F0]
  06620	e5933440	 ldr         r3, [r3, #0x440]
  06624	e3130001	 tst         r3, #1
  06628	0a00000f	 beq         |$LN22@ContinueTx|
  0662c	e59f32e0	 ldr         r3, [pc, #0x2E0]
  06630	e5933440	 ldr         r3, [r3, #0x440]
  06634	e3130801	 tst         r3, #1, 16
  06638	0a000004	 beq         |$LN20@ContinueTx|
  0663c	e59f02d8	 ldr         r0, [pc, #0x2D8]
  06640	eb000000	 bl          CeLogMsg
  06644	e3a03001	 mov         r3, #1
  06648	e50b3040	 str         r3, [r11, #-0x40]
  0664c	ea000003	 b           |$LN21@ContinueTx|
  06650		 |$LN20@ContinueTx|
  06650	e59f02c4	 ldr         r0, [pc, #0x2C4]
  06654	eb000000	 bl          NKDbgPrintfW
  06658	e3a03000	 mov         r3, #0
  0665c	e50b3040	 str         r3, [r11, #-0x40]
  06660		 |$LN21@ContinueTx|
  06660	e3a03001	 mov         r3, #1
  06664	e50b303c	 str         r3, [r11, #-0x3C]
  06668	ea000001	 b           |$LN23@ContinueTx|
  0666c		 |$LN22@ContinueTx|
  0666c	e3a03000	 mov         r3, #0
  06670	e50b303c	 str         r3, [r11, #-0x3C]
  06674		 |$LN23@ContinueTx|
  06674	eaffffff	 b           |$LN51@ContinueTx|
  06678		 |$LN51@ContinueTx|

; 1056 :     }
; 1057 :         
; 1058 :     // Update buffer and clear zero length flag
; 1059 :     pTransfer->cbTransferred += size;

  06678	e51b308c	 ldr         r3, [r11, #-0x8C]
  0667c	e2833010	 add         r3, r3, #0x10
  06680	e5932000	 ldr         r2, [r3]
  06684	e51b3084	 ldr         r3, [r11, #-0x84]
  06688	e0822003	 add         r2, r2, r3
  0668c	e51b308c	 ldr         r3, [r11, #-0x8C]
  06690	e2833010	 add         r3, r3, #0x10
  06694	e5832000	 str         r2, [r3]

; 1060 :     pEP->zeroLength = FALSE;

  06698	e51b3088	 ldr         r3, [r11, #-0x88]
  0669c	e2832008	 add         r2, r3, #8
  066a0	e3a03000	 mov         r3, #0
  066a4	e5823000	 str         r3, [r2]

; 1061 :     
; 1062 :     rc = ERROR_SUCCESS;

  066a8	e3a03000	 mov         r3, #0
  066ac	e50b3090	 str         r3, [r11, #-0x90]
  066b0		 |$cleanUp$48013|

; 1063 :     
; 1064 :     
; 1065 :     
; 1066 : cleanUp:
; 1067 :     
; 1068 :     if (complete)

  066b0	e51b3080	 ldr         r3, [r11, #-0x80]
  066b4	e3530000	 cmp         r3, #0
  066b8	0a000089	 beq         |$LN1@ContinueTx|

; 1069 :     {
; 1070 :         DEBUGMSG(DEBUG_PRT_TRANS, (L"ContinueTxDmaTransfer: call pfnNotify COMPLETE endp:%d +\r\n", endpoint));  
; 1071 :         
; 1072 :         DEBUGMSG(ZONE_PDD, (L"UsbFnPdd!ContinueTxDmaTransfer: "
; 1073 :             L"EP %d pTransfer 0x%08x (%d, %d, %d) - done\r\n",
; 1074 :             endpoint, pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 1075 :             pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 1076 :             pTransfer != NULL ? pTransfer->dwUsbError : -1
; 1077 :             ));

  066bc	e59f3250	 ldr         r3, [pc, #0x250]
  066c0	e5933440	 ldr         r3, [r3, #0x440]
  066c4	e3130902	 tst         r3, #2, 18
  066c8	0a000059	 beq         |$LN38@ContinueTx|
  066cc	e59f3240	 ldr         r3, [pc, #0x240]
  066d0	e5933440	 ldr         r3, [r3, #0x440]
  066d4	e3130801	 tst         r3, #1, 16
  066d8	0a000029	 beq         |$LN36@ContinueTx|
  066dc	e51b308c	 ldr         r3, [r11, #-0x8C]
  066e0	e3530000	 cmp         r3, #0
  066e4	0a000004	 beq         |$LN24@ContinueTx|
  066e8	e51b308c	 ldr         r3, [r11, #-0x8C]
  066ec	e2833014	 add         r3, r3, #0x14
  066f0	e5933000	 ldr         r3, [r3]
  066f4	e50b3038	 str         r3, [r11, #-0x38]
  066f8	ea000001	 b           |$LN25@ContinueTx|
  066fc		 |$LN24@ContinueTx|
  066fc	e3e03000	 mvn         r3, #0
  06700	e50b3038	 str         r3, [r11, #-0x38]
  06704		 |$LN25@ContinueTx|
  06704	e51b308c	 ldr         r3, [r11, #-0x8C]
  06708	e3530000	 cmp         r3, #0
  0670c	0a000004	 beq         |$LN26@ContinueTx|
  06710	e51b308c	 ldr         r3, [r11, #-0x8C]
  06714	e2833010	 add         r3, r3, #0x10
  06718	e5933000	 ldr         r3, [r3]
  0671c	e50b3034	 str         r3, [r11, #-0x34]
  06720	ea000001	 b           |$LN27@ContinueTx|
  06724		 |$LN26@ContinueTx|
  06724	e3a03000	 mov         r3, #0
  06728	e50b3034	 str         r3, [r11, #-0x34]
  0672c		 |$LN27@ContinueTx|
  0672c	e51b308c	 ldr         r3, [r11, #-0x8C]
  06730	e3530000	 cmp         r3, #0
  06734	0a000004	 beq         |$LN28@ContinueTx|
  06738	e51b308c	 ldr         r3, [r11, #-0x8C]
  0673c	e283300c	 add         r3, r3, #0xC
  06740	e5933000	 ldr         r3, [r3]
  06744	e50b3030	 str         r3, [r11, #-0x30]
  06748	ea000001	 b           |$LN29@ContinueTx|
  0674c		 |$LN28@ContinueTx|
  0674c	e3a03000	 mov         r3, #0
  06750	e50b3030	 str         r3, [r11, #-0x30]
  06754		 |$LN29@ContinueTx|
  06754	e51b3038	 ldr         r3, [r11, #-0x38]
  06758	e58d3004	 str         r3, [sp, #4]
  0675c	e51b3034	 ldr         r3, [r11, #-0x34]
  06760	e58d3000	 str         r3, [sp]
  06764	e51b3030	 ldr         r3, [r11, #-0x30]
  06768	e51b208c	 ldr         r2, [r11, #-0x8C]
  0676c	e59b1004	 ldr         r1, [r11, #4]
  06770	e59f01a0	 ldr         r0, [pc, #0x1A0]
  06774	eb000000	 bl          CeLogMsg
  06778	e3a03001	 mov         r3, #1
  0677c	e50b302c	 str         r3, [r11, #-0x2C]
  06780	ea000028	 b           |$LN37@ContinueTx|
  06784		 |$LN36@ContinueTx|
  06784	e51b308c	 ldr         r3, [r11, #-0x8C]
  06788	e3530000	 cmp         r3, #0
  0678c	0a000004	 beq         |$LN30@ContinueTx|
  06790	e51b308c	 ldr         r3, [r11, #-0x8C]
  06794	e2833014	 add         r3, r3, #0x14
  06798	e5933000	 ldr         r3, [r3]
  0679c	e50b3028	 str         r3, [r11, #-0x28]
  067a0	ea000001	 b           |$LN31@ContinueTx|
  067a4		 |$LN30@ContinueTx|
  067a4	e3e03000	 mvn         r3, #0
  067a8	e50b3028	 str         r3, [r11, #-0x28]
  067ac		 |$LN31@ContinueTx|
  067ac	e51b308c	 ldr         r3, [r11, #-0x8C]
  067b0	e3530000	 cmp         r3, #0
  067b4	0a000004	 beq         |$LN32@ContinueTx|
  067b8	e51b308c	 ldr         r3, [r11, #-0x8C]
  067bc	e2833010	 add         r3, r3, #0x10
  067c0	e5933000	 ldr         r3, [r3]
  067c4	e50b3024	 str         r3, [r11, #-0x24]
  067c8	ea000001	 b           |$LN33@ContinueTx|
  067cc		 |$LN32@ContinueTx|
  067cc	e3a03000	 mov         r3, #0
  067d0	e50b3024	 str         r3, [r11, #-0x24]
  067d4		 |$LN33@ContinueTx|
  067d4	e51b308c	 ldr         r3, [r11, #-0x8C]
  067d8	e3530000	 cmp         r3, #0
  067dc	0a000004	 beq         |$LN34@ContinueTx|
  067e0	e51b308c	 ldr         r3, [r11, #-0x8C]
  067e4	e283300c	 add         r3, r3, #0xC
  067e8	e5933000	 ldr         r3, [r3]
  067ec	e50b3020	 str         r3, [r11, #-0x20]
  067f0	ea000001	 b           |$LN35@ContinueTx|
  067f4		 |$LN34@ContinueTx|
  067f4	e3a03000	 mov         r3, #0
  067f8	e50b3020	 str         r3, [r11, #-0x20]
  067fc		 |$LN35@ContinueTx|
  067fc	e51b3028	 ldr         r3, [r11, #-0x28]
  06800	e58d3004	 str         r3, [sp, #4]
  06804	e51b3024	 ldr         r3, [r11, #-0x24]
  06808	e58d3000	 str         r3, [sp]
  0680c	e51b3020	 ldr         r3, [r11, #-0x20]
  06810	e51b208c	 ldr         r2, [r11, #-0x8C]
  06814	e59b1004	 ldr         r1, [r11, #4]
  06818	e59f00f8	 ldr         r0, [pc, #0xF8]
  0681c	eb000000	 bl          NKDbgPrintfW
  06820	e3a03000	 mov         r3, #0
  06824	e50b302c	 str         r3, [r11, #-0x2C]
  06828		 |$LN37@ContinueTx|
  06828	e3a03001	 mov         r3, #1
  0682c	e50b301c	 str         r3, [r11, #-0x1C]
  06830	ea000001	 b           |$LN39@ContinueTx|
  06834		 |$LN38@ContinueTx|
  06834	e3a03000	 mov         r3, #0
  06838	e50b301c	 str         r3, [r11, #-0x1C]
  0683c		 |$LN39@ContinueTx|

; 1078 : 
; 1079 :         pEP->pTransfer = NULL;

  0683c	e51b3088	 ldr         r3, [r11, #-0x88]
  06840	e2832020	 add         r2, r3, #0x20
  06844	e3a03000	 mov         r3, #0
  06848	e5823000	 str         r3, [r2]

; 1080 :         pTransfer->dwUsbError = UFN_NO_ERROR;

  0684c	e51b308c	 ldr         r3, [r11, #-0x8C]
  06850	e2832014	 add         r2, r3, #0x14
  06854	e3a03000	 mov         r3, #0
  06858	e5823000	 str         r3, [r2]

; 1081 :         DEBUGMSG(ZONE_INFO, (TEXT("ACK:ContinueTxDmaTransfer for EP %d\r\n"), endpoint));

  0685c	e59f30b0	 ldr         r3, [pc, #0xB0]
  06860	e5933440	 ldr         r3, [r3, #0x440]
  06864	e3130b01	 tst         r3, #1, 22
  06868	0a000011	 beq         |$LN42@ContinueTx|
  0686c	e59f30a0	 ldr         r3, [pc, #0xA0]
  06870	e5933440	 ldr         r3, [r3, #0x440]
  06874	e3130801	 tst         r3, #1, 16
  06878	0a000005	 beq         |$LN40@ContinueTx|
  0687c	e59b1004	 ldr         r1, [r11, #4]
  06880	e59f0088	 ldr         r0, [pc, #0x88]
  06884	eb000000	 bl          CeLogMsg
  06888	e3a03001	 mov         r3, #1
  0688c	e50b3018	 str         r3, [r11, #-0x18]
  06890	ea000004	 b           |$LN41@ContinueTx|
  06894		 |$LN40@ContinueTx|
  06894	e59b1004	 ldr         r1, [r11, #4]
  06898	e59f0070	 ldr         r0, [pc, #0x70]
  0689c	eb000000	 bl          NKDbgPrintfW
  068a0	e3a03000	 mov         r3, #0
  068a4	e50b3018	 str         r3, [r11, #-0x18]
  068a8		 |$LN41@ContinueTx|
  068a8	e3a03001	 mov         r3, #1
  068ac	e50b3014	 str         r3, [r11, #-0x14]
  068b0	ea000001	 b           |$LN43@ContinueTx|
  068b4		 |$LN42@ContinueTx|
  068b4	e3a03000	 mov         r3, #0
  068b8	e50b3014	 str         r3, [r11, #-0x14]
  068bc		 |$LN43@ContinueTx|

; 1082 :         pPdd->pfnNotify(
; 1083 :             pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer
; 1084 :             );

  068bc	e51b208c	 ldr         r2, [r11, #-0x8C]
  068c0	e3a01064	 mov         r1, #0x64
  068c4	e59b3000	 ldr         r3, [r11]
  068c8	e2833024	 add         r3, r3, #0x24
  068cc	e5930000	 ldr         r0, [r3]
  068d0	e59b3000	 ldr         r3, [r11]
  068d4	e2833028	 add         r3, r3, #0x28
  068d8	e5933000	 ldr         r3, [r3]
  068dc	e1a0e00f	 mov         lr, pc
  068e0	e12fff13	 bx          r3
  068e4		 |$LN1@ContinueTx|

; 1085 :     }
; 1086 :     
; 1087 :     return rc;

  068e4	e51b3090	 ldr         r3, [r11, #-0x90]
  068e8	e50b307c	 str         r3, [r11, #-0x7C]
  068ec		 |$LN12@ContinueTx|
  068ec		 |$LN44@ContinueTx|

; 1088 : }

  068ec	e51b007c	 ldr         r0, [r11, #-0x7C]
  068f0	e24bd010	 sub         sp, r11, #0x10
  068f4	e89d6810	 ldmia       sp, {r4, r11, sp, lr}
  068f8	e12fff1e	 bx          lr

			 ENDP  ; |ContinueTxDmaTransfer|

  068fc		 |$LN45@ContinueTx|
  068fc		 |$LN54@ContinueTx|

; 1051 :     __except(EXCEPTION_EXECUTE_HANDLER)

  068fc	e52de004	 str         lr, [sp, #-4]!
  06900	e24dd00c	 sub         sp, sp, #0xC
  06904		 |$LN48@ContinueTx|
  06904		 |$LN57@ContinueTx|
  06904	e3a00001	 mov         r0, #1
  06908		 |$LN47@ContinueTx|
  06908	e28dd00c	 add         sp, sp, #0xC
  0690c	e49df004	 ldr         pc, [sp], #4
  06910		 |$LN59@ContinueTx|
  06910		 |$LN60@ContinueTx|
  06910	00000000	 DCD         |??_C@_1EM@EBFJOKIO@?$AAA?$AAC?$AAK?$AA?3?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAE?$AAP@|
  06914		 |$LN61@ContinueTx|
  06914	00000000	 DCD         |dpCurSettings|
  06918		 |$LN62@ContinueTx|
  06918	00000000	 DCD         |??_C@_1JK@LJKOMLKI@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAD?$AAm?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5@|
  0691c		 |$LN63@ContinueTx|
  0691c	00000000	 DCD         |??_C@_1GK@JHMJGNNE@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAU?$AAF?$AAN@|
  06920		 |$LN64@ContinueTx|
  06920	00000000	 DCD         |??_C@_1JI@BPKICFPB@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAD?$AAm?$AAa?$AAT?$AAx?$AA?3?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAp@|
  06924		 |$LN58@ContinueTx|
  06924		 |$LN56@ContinueTx|
	EXPORT	|??_C@_1CM@PMAMFAIC@?$AA?9?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@NJEMGJMB@?$AA1?$AA?4?$AA?5?$AAS?$AAe?$AAt?$AA?5?$AAT?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?5?$AA?9?$AA?5?$AA0?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@JGCOADBD@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?5?$AA?9?$AA?5?$AAt?$AAr?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@LOMBDOHD@?$AAS?$AAe?$AAt?$AA?5?$AAO?$AAU?$AAT?$AA?5?$AAM?$AAs?$AAg?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAe?$AAp?$AA0?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@LMLHKPJF@?$AAD?$AAA?$AAT?$AAA?$AAE?$AAN?$AAD?$AA?5?$AAa?$AAd?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@PLIMDAFF@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAT?$AAx?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IM@DHEJLBCK@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@HGADPGKD@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@GAFCGMNC@?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@IJMAINHK@?$AAT?$AAX?$AAP?$AAK?$AAT?$AAR?$AAd?$AAy?$AA?5?$AAb?$AAi?$AAt?$AA?5?$AAi?$AAs?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@NNMILMFN@?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAc?$AAb?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAc?$AAb?$AAT?$AAr?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@BHNCEDKI@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@| [ DATA ] ; `string'

  000f0			 AREA	 |.pdata|, PDATA
|$T50541| DCD	|$LN92@ContinueTx@2|
	DCD	0xc002a305
|$T50543| DCD	|$LN82@ContinueTx@2|
	DCD	0x40001101

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@PMAMFAIC@?$AA?9?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n"
	DCB	0x0, "u", 0x0, "e", 0x0, "T", 0x0, "x", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@NJEMGJMB@?$AA1?$AA?4?$AA?5?$AAS?$AAe?$AAt?$AA?5?$AAT?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?5?$AA?9?$AA?5?$AA0?$AA?$AN?$AA?6?$AA?$AA@| DCB "1"
	DCB	0x0, ".", 0x0, " ", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, " "
	DCB	0x0, "T", 0x0, "x", 0x0, "P", 0x0, "k", 0x0, "t", 0x0, "R"
	DCB	0x0, "d", 0x0, "y", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "0"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@JGCOADBD@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?5?$AA?9?$AA?5?$AAt?$AAr?$AAa?$AAn@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "E", 0x0, "P", 0x0, "0", 0x0, ":", 0x0, " "
	DCB	0x0, "N", 0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f", 0x0, "y"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "t", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "c", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@LOMBDOHD@?$AAS?$AAe?$AAt?$AA?5?$AAO?$AAU?$AAT?$AA?5?$AAM?$AAs?$AAg?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAe?$AAp?$AA0?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6@| DCB "S"
	DCB	0x0, "e", 0x0, "t", 0x0, " ", 0x0, "O", 0x0, "U", 0x0, "T"
	DCB	0x0, " ", 0x0, "M", 0x0, "s", 0x0, "g", 0x0, " ", 0x0, "="
	DCB	0x0, ">", 0x0, " ", 0x0, "e", 0x0, "p", 0x0, "0", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@LMLHKPJF@?$AAD?$AAA?$AAT?$AAA?$AAE?$AAN?$AAD?$AA?5?$AAa?$AAd?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "A", 0x0, "T", 0x0, "A", 0x0, "E", 0x0, "N", 0x0, "D"
	DCB	0x0, " ", 0x0, "a", 0x0, "d", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@PLIMDAFF@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAT?$AAx?$AA?5@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, "P", 0x0, "d"
	DCB	0x0, "d", 0x0, "!", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "u", 0x0, "e", 0x0, "T", 0x0, "x"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "T", 0x0, "x"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e"
	DCB	0x0, "t", 0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, ":", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IM@DHEJLBCK@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "T", 0x0, "x", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S"
	DCB	0x0, "T", 0x0, "_", 0x0, "D", 0x0, "A", 0x0, "T", 0x0, "A"
	DCB	0x0, "_", 0x0, "T", 0x0, "X", 0x0, " ", 0x0, "s", 0x0, "p"
	DCB	0x0, "a", 0x0, "c", 0x0, "e", 0x0, "_", 0x0, "l", 0x0, "e"
	DCB	0x0, "f", 0x0, "t", 0x0, "_", 0x0, "t", 0x0, "o", 0x0, "_"
	DCB	0x0, "s", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "=", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "t", 0x0, "x", 0x0, "c", 0x0, "o"
	DCB	0x0, "u", 0x0, "n", 0x0, "t", 0x0, "=", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@HGADPGKD@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@GAFCGMNC@?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "W"
	DCB	0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e", 0x0, "F", 0x0, "I"
	DCB	0x0, "F", 0x0, "O", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "S", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@IJMAINHK@?$AAT?$AAX?$AAP?$AAK?$AAT?$AAR?$AAd?$AAy?$AA?5?$AAb?$AAi?$AAt?$AA?5?$AAi?$AAs?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "X", 0x0, "P", 0x0, "K", 0x0, "T", 0x0, "R", 0x0, "d"
	DCB	0x0, "y", 0x0, " ", 0x0, "b", 0x0, "i", 0x0, "t", 0x0, " "
	DCB	0x0, "i", 0x0, "s", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t"
	DCB	0x0, " ", 0x0, ".", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@NNMILMFN@?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAc?$AAb?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAc?$AAb?$AAT?$AAr?$AAa?$AAn@| DCB "e"
	DCB	0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, " "
	DCB	0x0, "c", 0x0, "b", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, " ", 0x0, "c", 0x0, "b", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "e", 0x0, "d", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@BHNCEDKI@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "e", 0x0, "T", 0x0, "x", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "p", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "i", 0x0, "s", 0x0, " ", 0x0, "N", 0x0, "U", 0x0, "L"
	DCB	0x0, "L", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  000a0			 AREA	 |.xdata|, DATA
|$T50539| DCD	0x1
	DCD	|$LN86@ContinueTx@2|
	DCD	|$LN87@ContinueTx@2|
	DCD	|$LN82@ContinueTx@2|
	DCD	|$LN83@ContinueTx@2|
; Function compile flags: /Odtp

  06924			 AREA	 |.text|, CODE, ARM

  06924	00000000	 DCD         |__C_specific_handler|
  06928	00000000	 DCD         |$T50539|

  0692c		 |ContinueTxTransfer| PROC

; 746  : {

  0692c		 |$LN92@ContinueTx@2|
  0692c	e1a0c00d	 mov         r12, sp
  06930	e92d0003	 stmdb       sp!, {r0, r1}
  06934	e92d5800	 stmdb       sp!, {r11, r12, lr}
  06938	e28db00c	 add         r11, sp, #0xC
  0693c	e24dd0a4	 sub         sp, sp, #0xA4
  06940		 |$LN90@ContinueTx@2|

; 747  :     DWORD rc = ERROR_INVALID_PARAMETER;

  06940	e3a03057	 mov         r3, #0x57
  06944	e50b30a4	 str         r3, [r11, #-0xA4]

; 748  :     MUsbFnEp_t *pEP = &pPdd->ep[endpoint];

  06948	e59b3000	 ldr         r3, [r11]
  0694c	e28310ac	 add         r1, r3, #0xAC
  06950	e59b2004	 ldr         r2, [r11, #4]
  06954	e3a03034	 mov         r3, #0x34
  06958	e0030392	 mul         r3, r2, r3
  0695c	e0813003	 add         r3, r1, r3
  06960	e50b3094	 str         r3, [r11, #-0x94]

; 749  :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUSBContext->pUsbCsrRegs;

  06964	e59b3000	 ldr         r3, [r11]
  06968	e2833020	 add         r3, r3, #0x20
  0696c	e5933000	 ldr         r3, [r3]
  06970	e283301c	 add         r3, r3, #0x1C
  06974	e5933000	 ldr         r3, [r3]
  06978	e50b30a8	 str         r3, [r11, #-0xA8]

; 750  :     STransfer *pTransfer = pEP->pTransfer;

  0697c	e51b3094	 ldr         r3, [r11, #-0x94]
  06980	e2833020	 add         r3, r3, #0x20
  06984	e5933000	 ldr         r3, [r3]
  06988	e50b3098	 str         r3, [r11, #-0x98]

; 751  :     DWORD space, txcount;
; 752  :     BOOL complete = FALSE;

  0698c	e3a03000	 mov         r3, #0
  06990	e50b3090	 str         r3, [r11, #-0x90]

; 753  :     UCHAR *pBuffer;
; 754  :     DWORD dwFlag;
; 755  :     
; 756  :     DEBUGMSG(DEBUG_PRT_INFO, (L"+UsbFnPdd!ContinueTxTransfer: "
; 757  :         L"EP %d pTransfer 0x%08x (%d, %d, %d)\r\n",
; 758  :         endpoint, pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 759  :         pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 760  :         pTransfer != NULL ? pTransfer->dwUsbError : -1
; 761  :         ));
; 762  : 
; 763  :     if (pTransfer == NULL) 

  06994	e51b3098	 ldr         r3, [r11, #-0x98]
  06998	e3530000	 cmp         r3, #0
  0699c	1a000018	 bne         |$LN16@ContinueTx@2|

; 764  :     {
; 765  :         DEBUGMSG(ZONE_ERROR, (L"ContinueTxTransfer:  error pTransfer is NULL\r\n"));

  069a0	e59f3a20	 ldr         r3, [pc, #0xA20]
  069a4	e5933440	 ldr         r3, [r3, #0x440]
  069a8	e3130001	 tst         r3, #1
  069ac	0a00000f	 beq         |$LN21@ContinueTx@2|
  069b0	e59f3a10	 ldr         r3, [pc, #0xA10]
  069b4	e5933440	 ldr         r3, [r3, #0x440]
  069b8	e3130801	 tst         r3, #1, 16
  069bc	0a000004	 beq         |$LN19@ContinueTx@2|
  069c0	e59f0a30	 ldr         r0, [pc, #0xA30]
  069c4	eb000000	 bl          CeLogMsg
  069c8	e3a03001	 mov         r3, #1
  069cc	e50b3088	 str         r3, [r11, #-0x88]
  069d0	ea000003	 b           |$LN20@ContinueTx@2|
  069d4		 |$LN19@ContinueTx@2|
  069d4	e59f0a1c	 ldr         r0, [pc, #0xA1C]
  069d8	eb000000	 bl          NKDbgPrintfW
  069dc	e3a03000	 mov         r3, #0
  069e0	e50b3088	 str         r3, [r11, #-0x88]
  069e4		 |$LN20@ContinueTx@2|
  069e4	e3a03001	 mov         r3, #1
  069e8	e50b3084	 str         r3, [r11, #-0x84]
  069ec	ea000001	 b           |$LN22@ContinueTx@2|
  069f0		 |$LN21@ContinueTx@2|
  069f0	e3a03000	 mov         r3, #0
  069f4	e50b3084	 str         r3, [r11, #-0x84]
  069f8		 |$LN22@ContinueTx@2|

; 766  :         return ERROR_INVALID_PARAMETER;

  069f8	e3a03057	 mov         r3, #0x57
  069fc	e50b308c	 str         r3, [r11, #-0x8C]
  06a00	ea000268	 b           |$LN17@ContinueTx@2|
  06a04		 |$LN16@ContinueTx@2|
  06a04		 |$LN86@ContinueTx@2|

; 767  :     }    
; 768  :     
; 769  :     __try
; 770  :     {
; 771  :        
; 772  :         pBuffer =(UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;

  06a04	e51b3098	 ldr         r3, [r11, #-0x98]
  06a08	e2832004	 add         r2, r3, #4
  06a0c	e51b3098	 ldr         r3, [r11, #-0x98]
  06a10	e2833010	 add         r3, r3, #0x10
  06a14	e5922000	 ldr         r2, [r2]
  06a18	e5933000	 ldr         r3, [r3]
  06a1c	e0823003	 add         r3, r2, r3
  06a20	e50b30b0	 str         r3, [r11, #-0xB0]

; 773  :         space = pTransfer->cbBuffer - pTransfer->cbTransferred;

  06a24	e51b3098	 ldr         r3, [r11, #-0x98]
  06a28	e283200c	 add         r2, r3, #0xC
  06a2c	e51b3098	 ldr         r3, [r11, #-0x98]
  06a30	e2833010	 add         r3, r3, #0x10
  06a34	e5922000	 ldr         r2, [r2]
  06a38	e5933000	 ldr         r3, [r3]
  06a3c	e0423003	 sub         r3, r2, r3
  06a40	e50b30a0	 str         r3, [r11, #-0xA0]

; 774  :                 
; 775  :         if (endpoint != 0)

  06a44	e59b3004	 ldr         r3, [r11, #4]
  06a48	e3530000	 cmp         r3, #0
  06a4c	0a0000b7	 beq         |$LN14@ContinueTx@2|

; 776  :         {
; 777  :             if (INREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR) & TXCSR_P_TXPKTRDY)

  06a50	e59b1004	 ldr         r1, [r11, #4]
  06a54	e3a03010	 mov         r3, #0x10
  06a58	e0020391	 mul         r2, r1, r3
  06a5c	e51b30a8	 ldr         r3, [r11, #-0xA8]
  06a60	e0833002	 add         r3, r3, r2
  06a64	e2833002	 add         r3, r3, #2
  06a68	e1d330b0	 ldrh        r3, [r3]
  06a6c	e3130001	 tst         r3, #1
  06a70	0a00003b	 beq         |$LN13@ContinueTx@2|

; 778  :             {
; 779  :                 DEBUGMSG(ZONE_INFO, (TEXT("endpoint(%d) cbBuffer(%d) cbTransferred(%d)\r\n"), endpoint, pTransfer->cbBuffer, pTransfer->cbTransferred));

  06a74	e59f394c	 ldr         r3, [pc, #0x94C]
  06a78	e5933440	 ldr         r3, [r3, #0x440]
  06a7c	e3130b01	 tst         r3, #1, 22
  06a80	0a00001d	 beq         |$LN25@ContinueTx@2|
  06a84	e59f393c	 ldr         r3, [pc, #0x93C]
  06a88	e5933440	 ldr         r3, [r3, #0x440]
  06a8c	e3130801	 tst         r3, #1, 16
  06a90	0a00000b	 beq         |$LN23@ContinueTx@2|
  06a94	e51b3098	 ldr         r3, [r11, #-0x98]
  06a98	e2833010	 add         r3, r3, #0x10
  06a9c	e5933000	 ldr         r3, [r3]
  06aa0	e51b2098	 ldr         r2, [r11, #-0x98]
  06aa4	e282200c	 add         r2, r2, #0xC
  06aa8	e5922000	 ldr         r2, [r2]
  06aac	e59b1004	 ldr         r1, [r11, #4]
  06ab0	e59f0934	 ldr         r0, [pc, #0x934]
  06ab4	eb000000	 bl          CeLogMsg
  06ab8	e3a03001	 mov         r3, #1
  06abc	e50b3080	 str         r3, [r11, #-0x80]
  06ac0	ea00000a	 b           |$LN24@ContinueTx@2|
  06ac4		 |$LN23@ContinueTx@2|
  06ac4	e51b3098	 ldr         r3, [r11, #-0x98]
  06ac8	e2833010	 add         r3, r3, #0x10
  06acc	e5933000	 ldr         r3, [r3]
  06ad0	e51b2098	 ldr         r2, [r11, #-0x98]
  06ad4	e282200c	 add         r2, r2, #0xC
  06ad8	e5922000	 ldr         r2, [r2]
  06adc	e59b1004	 ldr         r1, [r11, #4]
  06ae0	e59f0904	 ldr         r0, [pc, #0x904]
  06ae4	eb000000	 bl          NKDbgPrintfW
  06ae8	e3a03000	 mov         r3, #0
  06aec	e50b3080	 str         r3, [r11, #-0x80]
  06af0		 |$LN24@ContinueTx@2|
  06af0	e3a03001	 mov         r3, #1
  06af4	e50b307c	 str         r3, [r11, #-0x7C]
  06af8	ea000001	 b           |$LN26@ContinueTx@2|
  06afc		 |$LN25@ContinueTx@2|
  06afc	e3a03000	 mov         r3, #0
  06b00	e50b307c	 str         r3, [r11, #-0x7C]
  06b04		 |$LN26@ContinueTx@2|

; 780  :                 DEBUGMSG(ZONE_INFO, (TEXT("TXPKTRdy bit is set ..\r\n")));

  06b04	e59f38bc	 ldr         r3, [pc, #0x8BC]
  06b08	e5933440	 ldr         r3, [r3, #0x440]
  06b0c	e3130b01	 tst         r3, #1, 22
  06b10	0a00000f	 beq         |$LN29@ContinueTx@2|
  06b14	e59f38ac	 ldr         r3, [pc, #0x8AC]
  06b18	e5933440	 ldr         r3, [r3, #0x440]
  06b1c	e3130801	 tst         r3, #1, 16
  06b20	0a000004	 beq         |$LN27@ContinueTx@2|
  06b24	e59f08bc	 ldr         r0, [pc, #0x8BC]
  06b28	eb000000	 bl          CeLogMsg
  06b2c	e3a03001	 mov         r3, #1
  06b30	e50b3078	 str         r3, [r11, #-0x78]
  06b34	ea000003	 b           |$LN28@ContinueTx@2|
  06b38		 |$LN27@ContinueTx@2|
  06b38	e59f08a8	 ldr         r0, [pc, #0x8A8]
  06b3c	eb000000	 bl          NKDbgPrintfW
  06b40	e3a03000	 mov         r3, #0
  06b44	e50b3078	 str         r3, [r11, #-0x78]
  06b48		 |$LN28@ContinueTx@2|
  06b48	e3a03001	 mov         r3, #1
  06b4c	e50b3074	 str         r3, [r11, #-0x74]
  06b50	ea000001	 b           |$LN30@ContinueTx@2|
  06b54		 |$LN29@ContinueTx@2|
  06b54	e3a03000	 mov         r3, #0
  06b58	e50b3074	 str         r3, [r11, #-0x74]
  06b5c		 |$LN30@ContinueTx@2|

; 781  :                 goto CleanUp;

  06b5c	ea0001f4	 b           |$CleanUp$47882|

; 782  :             }
; 783  :             else

  06b60	ea000071	 b           |$LN12@ContinueTx@2|
  06b64		 |$LN13@ContinueTx@2|

; 784  :             {
; 785  :                 // How many bytes we can send just now?
; 786  :                 txcount = pEP->maxPacketSize;

  06b64	e51b3094	 ldr         r3, [r11, #-0x94]
  06b68	e1d330b0	 ldrh        r3, [r3]
  06b6c	e50b30ac	 str         r3, [r11, #-0xAC]

; 787  :                 if (txcount > space)

  06b70	e51b20ac	 ldr         r2, [r11, #-0xAC]
  06b74	e51b30a0	 ldr         r3, [r11, #-0xA0]
  06b78	e1520003	 cmp         r2, r3
  06b7c	9a000001	 bls         |$LN11@ContinueTx@2|

; 788  :                     txcount = space;

  06b80	e51b30a0	 ldr         r3, [r11, #-0xA0]
  06b84	e50b30ac	 str         r3, [r11, #-0xAC]
  06b88		 |$LN11@ContinueTx@2|

; 789  :                 
; 790  :                 if (pPdd->ep[endpoint].dmaEnabled)

  06b88	e59b3000	 ldr         r3, [r11]
  06b8c	e28310ac	 add         r1, r3, #0xAC
  06b90	e59b2004	 ldr         r2, [r11, #4]
  06b94	e3a03034	 mov         r3, #0x34
  06b98	e0030392	 mul         r3, r2, r3
  06b9c	e0813003	 add         r3, r1, r3
  06ba0	e2833010	 add         r3, r3, #0x10
  06ba4	e5933000	 ldr         r3, [r3]
  06ba8	e3530000	 cmp         r3, #0
  06bac	0a000025	 beq         |$LN10@ContinueTx@2|

; 791  :                 {
; 792  :                     // disable DMA related bits
; 793  :                     CLRREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_AUTOSET | TXCSR_P_DMAREQENAB);

  06bb0	e59b1004	 ldr         r1, [r11, #4]
  06bb4	e3a03010	 mov         r3, #0x10
  06bb8	e0020391	 mul         r2, r1, r3
  06bbc	e51b30a8	 ldr         r3, [r11, #-0xA8]
  06bc0	e0833002	 add         r3, r3, r2
  06bc4	e2833002	 add         r3, r3, #2
  06bc8	e1d330b0	 ldrh        r3, [r3]
  06bcc	e1a02003	 mov         r2, r3
  06bd0	e3e03a09	 mvn         r3, #9, 20
  06bd4	e0023003	 and         r3, r2, r3
  06bd8	e1a00803	 mov         r0, r3, lsl #16
  06bdc	e1a00820	 mov         r0, r0, lsr #16
  06be0	e59b1004	 ldr         r1, [r11, #4]
  06be4	e3a03010	 mov         r3, #0x10
  06be8	e0020391	 mul         r2, r1, r3
  06bec	e51b30a8	 ldr         r3, [r11, #-0xA8]
  06bf0	e0833002	 add         r3, r3, r2
  06bf4	e2833002	 add         r3, r3, #2
  06bf8	e1c300b0	 strh        r0, [r3]

; 794  :                     
; 795  :                     // clear TXCSR_P_DMAREQMODE after clearing TXCSR_P_DMAREQENAB (per MUSBMHDRC programming guide)
; 796  :                     CLRREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_DMAREQMODE);

  06bfc	e59b1004	 ldr         r1, [r11, #4]
  06c00	e3a03010	 mov         r3, #0x10
  06c04	e0020391	 mul         r2, r1, r3
  06c08	e51b30a8	 ldr         r3, [r11, #-0xA8]
  06c0c	e0833002	 add         r3, r3, r2
  06c10	e2833002	 add         r3, r3, #2
  06c14	e1d330b0	 ldrh        r3, [r3]
  06c18	e1a02003	 mov         r2, r3
  06c1c	e3e03b01	 mvn         r3, #1, 22
  06c20	e0023003	 and         r3, r2, r3
  06c24	e1a00803	 mov         r0, r3, lsl #16
  06c28	e1a00820	 mov         r0, r0, lsr #16
  06c2c	e59b1004	 ldr         r1, [r11, #4]
  06c30	e3a03010	 mov         r3, #0x10
  06c34	e0020391	 mul         r2, r1, r3
  06c38	e51b30a8	 ldr         r3, [r11, #-0xA8]
  06c3c	e0833002	 add         r3, r3, r2
  06c40	e2833002	 add         r3, r3, #2
  06c44	e1c300b0	 strh        r0, [r3]
  06c48		 |$LN10@ContinueTx@2|

; 797  :                 }
; 798  :                 
; 799  :                 DEBUGMSG(ZONE_FUNCTION, (TEXT("WriteFIFO EP %d, Size %d\r\n"), endpoint, txcount));

  06c48	e59f3778	 ldr         r3, [pc, #0x778]
  06c4c	e5933440	 ldr         r3, [r3, #0x440]
  06c50	e3130a01	 tst         r3, #1, 20
  06c54	0a000013	 beq         |$LN33@ContinueTx@2|
  06c58	e59f3768	 ldr         r3, [pc, #0x768]
  06c5c	e5933440	 ldr         r3, [r3, #0x440]
  06c60	e3130801	 tst         r3, #1, 16
  06c64	0a000006	 beq         |$LN31@ContinueTx@2|
  06c68	e51b20ac	 ldr         r2, [r11, #-0xAC]
  06c6c	e59b1004	 ldr         r1, [r11, #4]
  06c70	e59f077c	 ldr         r0, [pc, #0x77C]
  06c74	eb000000	 bl          CeLogMsg
  06c78	e3a03001	 mov         r3, #1
  06c7c	e50b3070	 str         r3, [r11, #-0x70]
  06c80	ea000005	 b           |$LN32@ContinueTx@2|
  06c84		 |$LN31@ContinueTx@2|
  06c84	e51b20ac	 ldr         r2, [r11, #-0xAC]
  06c88	e59b1004	 ldr         r1, [r11, #4]
  06c8c	e59f0760	 ldr         r0, [pc, #0x760]
  06c90	eb000000	 bl          NKDbgPrintfW
  06c94	e3a03000	 mov         r3, #0
  06c98	e50b3070	 str         r3, [r11, #-0x70]
  06c9c		 |$LN32@ContinueTx@2|
  06c9c	e3a03001	 mov         r3, #1
  06ca0	e50b306c	 str         r3, [r11, #-0x6C]
  06ca4	ea000001	 b           |$LN34@ContinueTx@2|
  06ca8		 |$LN33@ContinueTx@2|
  06ca8	e3a03000	 mov         r3, #0
  06cac	e50b306c	 str         r3, [r11, #-0x6C]
  06cb0		 |$LN34@ContinueTx@2|

; 800  :                 //memdump((uchar *)pBuffer, (unsigned short)txcount, 0);
; 801  :                 // Write data to FIFO
; 802  :                 WriteFIFO(pPdd, (UCHAR) endpoint, pBuffer, txcount);

  06cb0	e51b30ac	 ldr         r3, [r11, #-0xAC]
  06cb4	e51b20b0	 ldr         r2, [r11, #-0xB0]
  06cb8	e59b1004	 ldr         r1, [r11, #4]
  06cbc	e20110ff	 and         r1, r1, #0xFF
  06cc0	e59b0000	 ldr         r0, [r11]
  06cc4	eb000000	 bl          WriteFIFO

; 803  :                 
; 804  :                 // We transfered some data
; 805  :                 pTransfer->cbTransferred += txcount;                

  06cc8	e51b3098	 ldr         r3, [r11, #-0x98]
  06ccc	e2833010	 add         r3, r3, #0x10
  06cd0	e5932000	 ldr         r2, [r3]
  06cd4	e51b30ac	 ldr         r3, [r11, #-0xAC]
  06cd8	e0822003	 add         r2, r2, r3
  06cdc	e51b3098	 ldr         r3, [r11, #-0x98]
  06ce0	e2833010	 add         r3, r3, #0x10
  06ce4	e5832000	 str         r2, [r3]

; 806  :                 SETREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_TXPKTRDY);

  06ce8	e59b1004	 ldr         r1, [r11, #4]
  06cec	e3a03010	 mov         r3, #0x10
  06cf0	e0020391	 mul         r2, r1, r3
  06cf4	e51b30a8	 ldr         r3, [r11, #-0xA8]
  06cf8	e0833002	 add         r3, r3, r2
  06cfc	e2833002	 add         r3, r3, #2
  06d00	e1d330b0	 ldrh        r3, [r3]
  06d04	e3833001	 orr         r3, r3, #1
  06d08	e1a00803	 mov         r0, r3, lsl #16
  06d0c	e1a00820	 mov         r0, r0, lsr #16
  06d10	e59b1004	 ldr         r1, [r11, #4]
  06d14	e3a03010	 mov         r3, #0x10
  06d18	e0020391	 mul         r2, r1, r3
  06d1c	e51b30a8	 ldr         r3, [r11, #-0xA8]
  06d20	e0833002	 add         r3, r3, r2
  06d24	e2833002	 add         r3, r3, #2
  06d28	e1c300b0	 strh        r0, [r3]
  06d2c		 |$LN12@ContinueTx@2|

; 807  :             } 
; 808  :         }
; 809  :         else // endpoint == 0

  06d2c	ea000160	 b           |$LN9@ContinueTx@2|
  06d30		 |$LN14@ContinueTx@2|

; 810  :         {
; 811  :             // Zero endpoint: Zero length padding needed
; 812  :             // if last packet is maxPacketSize and bytes transferred is not equal to max transfer size specified Setup transaction
; 813  :             pEP->zeroLength =
; 814  :                 (space == pEP->maxPacketSize) &&
; 815  :                 (pPdd->setupCount > pTransfer->cbBuffer);

  06d30	e51b3094	 ldr         r3, [r11, #-0x94]
  06d34	e1d320b0	 ldrh        r2, [r3]
  06d38	e51b30a0	 ldr         r3, [r11, #-0xA0]
  06d3c	e1530002	 cmp         r3, r2
  06d40	1a00000a	 bne         |$LN35@ContinueTx@2|
  06d44	e59b3000	 ldr         r3, [r11]
  06d48	e2833074	 add         r3, r3, #0x74
  06d4c	e1d320b0	 ldrh        r2, [r3]
  06d50	e51b3098	 ldr         r3, [r11, #-0x98]
  06d54	e283300c	 add         r3, r3, #0xC
  06d58	e5933000	 ldr         r3, [r3]
  06d5c	e1520003	 cmp         r2, r3
  06d60	9a000002	 bls         |$LN35@ContinueTx@2|
  06d64	e3a03001	 mov         r3, #1
  06d68	e50b3068	 str         r3, [r11, #-0x68]
  06d6c	ea000001	 b           |$LN36@ContinueTx@2|
  06d70		 |$LN35@ContinueTx@2|
  06d70	e3a03000	 mov         r3, #0
  06d74	e50b3068	 str         r3, [r11, #-0x68]
  06d78		 |$LN36@ContinueTx@2|
  06d78	e51b3094	 ldr         r3, [r11, #-0x94]
  06d7c	e2832008	 add         r2, r3, #8
  06d80	e51b3068	 ldr         r3, [r11, #-0x68]
  06d84	e5823000	 str         r3, [r2]

; 816  :             
; 817  :             if (pPdd->ep0State != EP0_ST_SETUP_PROCESSED)

  06d88	e59b3000	 ldr         r3, [r11]
  06d8c	e2833ffb	 add         r3, r3, #0xFB, 30
  06d90	e5933000	 ldr         r3, [r3]
  06d94	e3530001	 cmp         r3, #1
  06d98	0a00001d	 beq         |$LN8@ContinueTx@2|

; 818  :             {
; 819  :                 DEBUGMSG(ZONE_INFO, (TEXT("Invalid State = %d\r\n"), pPdd->ep0State));

  06d9c	e59f3624	 ldr         r3, [pc, #0x624]
  06da0	e5933440	 ldr         r3, [r3, #0x440]
  06da4	e3130b01	 tst         r3, #1, 22
  06da8	0a000015	 beq         |$LN39@ContinueTx@2|
  06dac	e59f3614	 ldr         r3, [pc, #0x614]
  06db0	e5933440	 ldr         r3, [r3, #0x440]
  06db4	e3130801	 tst         r3, #1, 16
  06db8	0a000007	 beq         |$LN37@ContinueTx@2|
  06dbc	e59b3000	 ldr         r3, [r11]
  06dc0	e2833ffb	 add         r3, r3, #0xFB, 30
  06dc4	e5931000	 ldr         r1, [r3]
  06dc8	e59f0620	 ldr         r0, [pc, #0x620]
  06dcc	eb000000	 bl          CeLogMsg
  06dd0	e3a03001	 mov         r3, #1
  06dd4	e50b3064	 str         r3, [r11, #-0x64]
  06dd8	ea000006	 b           |$LN38@ContinueTx@2|
  06ddc		 |$LN37@ContinueTx@2|
  06ddc	e59b3000	 ldr         r3, [r11]
  06de0	e2833ffb	 add         r3, r3, #0xFB, 30
  06de4	e5931000	 ldr         r1, [r3]
  06de8	e59f0600	 ldr         r0, [pc, #0x600]
  06dec	eb000000	 bl          NKDbgPrintfW
  06df0	e3a03000	 mov         r3, #0
  06df4	e50b3064	 str         r3, [r11, #-0x64]
  06df8		 |$LN38@ContinueTx@2|
  06df8	e3a03001	 mov         r3, #1
  06dfc	e50b3060	 str         r3, [r11, #-0x60]
  06e00	ea000001	 b           |$LN40@ContinueTx@2|
  06e04		 |$LN39@ContinueTx@2|
  06e04	e3a03000	 mov         r3, #0
  06e08	e50b3060	 str         r3, [r11, #-0x60]
  06e0c		 |$LN40@ContinueTx@2|

; 820  :                 goto CleanUp;

  06e0c	ea000148	 b           |$CleanUp$47882|

; 821  :             }
; 822  :             else

  06e10	ea000127	 b           |$LN7@ContinueTx@2|
  06e14		 |$LN8@ContinueTx@2|

; 823  :             {
; 824  :                 pPdd->ep0State = EP0_ST_DATA_TX;

  06e14	e59b3000	 ldr         r3, [r11]
  06e18	e2832ffb	 add         r2, r3, #0xFB, 30
  06e1c	e3a03005	 mov         r3, #5
  06e20	e5823000	 str         r3, [r2]

; 825  :                 if (INREG16(&pCsrRegs->ep[endpoint].CSR.CSR0) & CSR0_P_TXPKTRDY)

  06e24	e59b1004	 ldr         r1, [r11, #4]
  06e28	e3a03010	 mov         r3, #0x10
  06e2c	e0020391	 mul         r2, r1, r3
  06e30	e51b30a8	 ldr         r3, [r11, #-0xA8]
  06e34	e0833002	 add         r3, r3, r2
  06e38	e2833002	 add         r3, r3, #2
  06e3c	e1d330b0	 ldrh        r3, [r3]
  06e40	e3130002	 tst         r3, #2
  06e44	0a00003b	 beq         |$LN6@ContinueTx@2|

; 826  :                 {
; 827  :                     DEBUGMSG(ZONE_ERROR, (TEXT("endpoint(%d) cbBuffer(%d) cbTransferred(%d)\r\n"), endpoint, pTransfer->cbBuffer, pTransfer->cbTransferred));

  06e48	e59f3578	 ldr         r3, [pc, #0x578]
  06e4c	e5933440	 ldr         r3, [r3, #0x440]
  06e50	e3130001	 tst         r3, #1
  06e54	0a00001d	 beq         |$LN43@ContinueTx@2|
  06e58	e59f3568	 ldr         r3, [pc, #0x568]
  06e5c	e5933440	 ldr         r3, [r3, #0x440]
  06e60	e3130801	 tst         r3, #1, 16
  06e64	0a00000b	 beq         |$LN41@ContinueTx@2|
  06e68	e51b3098	 ldr         r3, [r11, #-0x98]
  06e6c	e2833010	 add         r3, r3, #0x10
  06e70	e5933000	 ldr         r3, [r3]
  06e74	e51b2098	 ldr         r2, [r11, #-0x98]
  06e78	e282200c	 add         r2, r2, #0xC
  06e7c	e5922000	 ldr         r2, [r2]
  06e80	e59b1004	 ldr         r1, [r11, #4]
  06e84	e59f0560	 ldr         r0, [pc, #0x560]
  06e88	eb000000	 bl          CeLogMsg
  06e8c	e3a03001	 mov         r3, #1
  06e90	e50b305c	 str         r3, [r11, #-0x5C]
  06e94	ea00000a	 b           |$LN42@ContinueTx@2|
  06e98		 |$LN41@ContinueTx@2|
  06e98	e51b3098	 ldr         r3, [r11, #-0x98]
  06e9c	e2833010	 add         r3, r3, #0x10
  06ea0	e5933000	 ldr         r3, [r3]
  06ea4	e51b2098	 ldr         r2, [r11, #-0x98]
  06ea8	e282200c	 add         r2, r2, #0xC
  06eac	e5922000	 ldr         r2, [r2]
  06eb0	e59b1004	 ldr         r1, [r11, #4]
  06eb4	e59f0530	 ldr         r0, [pc, #0x530]
  06eb8	eb000000	 bl          NKDbgPrintfW
  06ebc	e3a03000	 mov         r3, #0
  06ec0	e50b305c	 str         r3, [r11, #-0x5C]
  06ec4		 |$LN42@ContinueTx@2|
  06ec4	e3a03001	 mov         r3, #1
  06ec8	e50b3058	 str         r3, [r11, #-0x58]
  06ecc	ea000001	 b           |$LN44@ContinueTx@2|
  06ed0		 |$LN43@ContinueTx@2|
  06ed0	e3a03000	 mov         r3, #0
  06ed4	e50b3058	 str         r3, [r11, #-0x58]
  06ed8		 |$LN44@ContinueTx@2|

; 828  :                     DEBUGMSG(ZONE_ERROR, (TEXT("TXPKTRdy bit is set ..\r\n")));

  06ed8	e59f34e8	 ldr         r3, [pc, #0x4E8]
  06edc	e5933440	 ldr         r3, [r3, #0x440]
  06ee0	e3130001	 tst         r3, #1
  06ee4	0a00000f	 beq         |$LN47@ContinueTx@2|
  06ee8	e59f34d8	 ldr         r3, [pc, #0x4D8]
  06eec	e5933440	 ldr         r3, [r3, #0x440]
  06ef0	e3130801	 tst         r3, #1, 16
  06ef4	0a000004	 beq         |$LN45@ContinueTx@2|
  06ef8	e59f04e8	 ldr         r0, [pc, #0x4E8]
  06efc	eb000000	 bl          CeLogMsg
  06f00	e3a03001	 mov         r3, #1
  06f04	e50b3054	 str         r3, [r11, #-0x54]
  06f08	ea000003	 b           |$LN46@ContinueTx@2|
  06f0c		 |$LN45@ContinueTx@2|
  06f0c	e59f04d4	 ldr         r0, [pc, #0x4D4]
  06f10	eb000000	 bl          NKDbgPrintfW
  06f14	e3a03000	 mov         r3, #0
  06f18	e50b3054	 str         r3, [r11, #-0x54]
  06f1c		 |$LN46@ContinueTx@2|
  06f1c	e3a03001	 mov         r3, #1
  06f20	e50b3050	 str         r3, [r11, #-0x50]
  06f24	ea000001	 b           |$LN48@ContinueTx@2|
  06f28		 |$LN47@ContinueTx@2|
  06f28	e3a03000	 mov         r3, #0
  06f2c	e50b3050	 str         r3, [r11, #-0x50]
  06f30		 |$LN48@ContinueTx@2|

; 829  :                     goto CleanUp;

  06f30	ea0000ff	 b           |$CleanUp$47882|

; 830  :                 }
; 831  :                 else

  06f34	ea0000de	 b           |$LN5@ContinueTx@2|
  06f38		 |$LN6@ContinueTx@2|

; 832  :                 {
; 833  :                     // How many bytes we can send just now?
; 834  :                     txcount = pEP->maxPacketSize;

  06f38	e51b3094	 ldr         r3, [r11, #-0x94]
  06f3c	e1d330b0	 ldrh        r3, [r3]
  06f40	e50b30ac	 str         r3, [r11, #-0xAC]

; 835  :                     if (txcount > space)

  06f44	e51b20ac	 ldr         r2, [r11, #-0xAC]
  06f48	e51b30a0	 ldr         r3, [r11, #-0xA0]
  06f4c	e1520003	 cmp         r2, r3
  06f50	9a000001	 bls         |$LN4@ContinueTx@2|

; 836  :                         txcount = space;

  06f54	e51b30a0	 ldr         r3, [r11, #-0xA0]
  06f58	e50b30ac	 str         r3, [r11, #-0xAC]
  06f5c		 |$LN4@ContinueTx@2|

; 837  :                     
; 838  :                     DEBUGMSG(ZONE_INFO, (L"ContinueTxTransfer: EP0_ST_DATA_TX space_left_to_send=%d txcount=%d\r\n", space, txcount));

  06f5c	e59f3464	 ldr         r3, [pc, #0x464]
  06f60	e5933440	 ldr         r3, [r3, #0x440]
  06f64	e3130b01	 tst         r3, #1, 22
  06f68	0a000013	 beq         |$LN51@ContinueTx@2|
  06f6c	e59f3454	 ldr         r3, [pc, #0x454]
  06f70	e5933440	 ldr         r3, [r3, #0x440]
  06f74	e3130801	 tst         r3, #1, 16
  06f78	0a000006	 beq         |$LN49@ContinueTx@2|
  06f7c	e51b20ac	 ldr         r2, [r11, #-0xAC]
  06f80	e51b10a0	 ldr         r1, [r11, #-0xA0]
  06f84	e59f0458	 ldr         r0, [pc, #0x458]
  06f88	eb000000	 bl          CeLogMsg
  06f8c	e3a03001	 mov         r3, #1
  06f90	e50b304c	 str         r3, [r11, #-0x4C]
  06f94	ea000005	 b           |$LN50@ContinueTx@2|
  06f98		 |$LN49@ContinueTx@2|
  06f98	e51b20ac	 ldr         r2, [r11, #-0xAC]
  06f9c	e51b10a0	 ldr         r1, [r11, #-0xA0]
  06fa0	e59f043c	 ldr         r0, [pc, #0x43C]
  06fa4	eb000000	 bl          NKDbgPrintfW
  06fa8	e3a03000	 mov         r3, #0
  06fac	e50b304c	 str         r3, [r11, #-0x4C]
  06fb0		 |$LN50@ContinueTx@2|
  06fb0	e3a03001	 mov         r3, #1
  06fb4	e50b3048	 str         r3, [r11, #-0x48]
  06fb8	ea000001	 b           |$LN52@ContinueTx@2|
  06fbc		 |$LN51@ContinueTx@2|
  06fbc	e3a03000	 mov         r3, #0
  06fc0	e50b3048	 str         r3, [r11, #-0x48]
  06fc4		 |$LN52@ContinueTx@2|

; 839  :                     
; 840  :                     // Write data to FIFO
; 841  :                     WriteFIFO(pPdd, EP0, pBuffer, txcount);

  06fc4	e51b30ac	 ldr         r3, [r11, #-0xAC]
  06fc8	e51b20b0	 ldr         r2, [r11, #-0xB0]
  06fcc	e3a01000	 mov         r1, #0
  06fd0	e59b0000	 ldr         r0, [r11]
  06fd4	eb000000	 bl          WriteFIFO

; 842  :                     
; 843  :                     // We transfered some data
; 844  :                     pTransfer->cbTransferred += txcount;

  06fd8	e51b3098	 ldr         r3, [r11, #-0x98]
  06fdc	e2833010	 add         r3, r3, #0x10
  06fe0	e5932000	 ldr         r2, [r3]
  06fe4	e51b30ac	 ldr         r3, [r11, #-0xAC]
  06fe8	e0822003	 add         r2, r2, r3
  06fec	e51b3098	 ldr         r3, [r11, #-0x98]
  06ff0	e2833010	 add         r3, r3, #0x10
  06ff4	e5832000	 str         r2, [r3]

; 845  :                     
; 846  :                     DEBUGMSG(ZONE_INFO, (L"UsbFnPdd!ContinueTxTransfer: "
; 847  :                         L"Tx packet size: %d\r\n",
; 848  :                         pTransfer->cbBuffer
; 849  :                         ));

  06ff8	e59f33c8	 ldr         r3, [pc, #0x3C8]
  06ffc	e5933440	 ldr         r3, [r3, #0x440]
  07000	e3130b01	 tst         r3, #1, 22
  07004	0a000015	 beq         |$LN55@ContinueTx@2|
  07008	e59f33b8	 ldr         r3, [pc, #0x3B8]
  0700c	e5933440	 ldr         r3, [r3, #0x440]
  07010	e3130801	 tst         r3, #1, 16
  07014	0a000007	 beq         |$LN53@ContinueTx@2|
  07018	e51b3098	 ldr         r3, [r11, #-0x98]
  0701c	e283300c	 add         r3, r3, #0xC
  07020	e5931000	 ldr         r1, [r3]
  07024	e59f03b4	 ldr         r0, [pc, #0x3B4]
  07028	eb000000	 bl          CeLogMsg
  0702c	e3a03001	 mov         r3, #1
  07030	e50b3044	 str         r3, [r11, #-0x44]
  07034	ea000006	 b           |$LN54@ContinueTx@2|
  07038		 |$LN53@ContinueTx@2|
  07038	e51b3098	 ldr         r3, [r11, #-0x98]
  0703c	e283300c	 add         r3, r3, #0xC
  07040	e5931000	 ldr         r1, [r3]
  07044	e59f0394	 ldr         r0, [pc, #0x394]
  07048	eb000000	 bl          NKDbgPrintfW
  0704c	e3a03000	 mov         r3, #0
  07050	e50b3044	 str         r3, [r11, #-0x44]
  07054		 |$LN54@ContinueTx@2|
  07054	e3a03001	 mov         r3, #1
  07058	e50b3040	 str         r3, [r11, #-0x40]
  0705c	ea000001	 b           |$LN56@ContinueTx@2|
  07060		 |$LN55@ContinueTx@2|
  07060	e3a03000	 mov         r3, #0
  07064	e50b3040	 str         r3, [r11, #-0x40]
  07068		 |$LN56@ContinueTx@2|

; 850  :                                         
; 851  :                     if (pTransfer->cbTransferred == pTransfer->cbBuffer)

  07068	e51b3098	 ldr         r3, [r11, #-0x98]
  0706c	e2832010	 add         r2, r3, #0x10
  07070	e51b3098	 ldr         r3, [r11, #-0x98]
  07074	e283300c	 add         r3, r3, #0xC
  07078	e5922000	 ldr         r2, [r2]
  0707c	e5933000	 ldr         r3, [r3]
  07080	e1520003	 cmp         r2, r3
  07084	1a000060	 bne         |$LN3@ContinueTx@2|

; 852  :                     {
; 853  :                         DEBUGMSG(ZONE_INFO, (TEXT("DATAEND add\r\n")));

  07088	e59f3338	 ldr         r3, [pc, #0x338]
  0708c	e5933440	 ldr         r3, [r3, #0x440]
  07090	e3130b01	 tst         r3, #1, 22
  07094	0a00000f	 beq         |$LN59@ContinueTx@2|
  07098	e59f3328	 ldr         r3, [pc, #0x328]
  0709c	e5933440	 ldr         r3, [r3, #0x440]
  070a0	e3130801	 tst         r3, #1, 16
  070a4	0a000004	 beq         |$LN57@ContinueTx@2|
  070a8	e59f032c	 ldr         r0, [pc, #0x32C]
  070ac	eb000000	 bl          CeLogMsg
  070b0	e3a03001	 mov         r3, #1
  070b4	e50b303c	 str         r3, [r11, #-0x3C]
  070b8	ea000003	 b           |$LN58@ContinueTx@2|
  070bc		 |$LN57@ContinueTx@2|
  070bc	e59f0318	 ldr         r0, [pc, #0x318]
  070c0	eb000000	 bl          NKDbgPrintfW
  070c4	e3a03000	 mov         r3, #0
  070c8	e50b303c	 str         r3, [r11, #-0x3C]
  070cc		 |$LN58@ContinueTx@2|
  070cc	e3a03001	 mov         r3, #1
  070d0	e50b3038	 str         r3, [r11, #-0x38]
  070d4	ea000001	 b           |$LN60@ContinueTx@2|
  070d8		 |$LN59@ContinueTx@2|
  070d8	e3a03000	 mov         r3, #0
  070dc	e50b3038	 str         r3, [r11, #-0x38]
  070e0		 |$LN60@ContinueTx@2|

; 854  :                         pPdd->ep0State = EP0_ST_STATUS_OUT;

  070e0	e59b3000	 ldr         r3, [r11]
  070e4	e2832ffb	 add         r2, r3, #0xFB, 30
  070e8	e3a03003	 mov         r3, #3
  070ec	e5823000	 str         r3, [r2]

; 855  :                         DEBUGMSG(ZONE_INFO, (TEXT("Set OUT Msg => ep0State = 0x%x\r\n"), pPdd->ep0State));

  070f0	e59f32d0	 ldr         r3, [pc, #0x2D0]
  070f4	e5933440	 ldr         r3, [r3, #0x440]
  070f8	e3130b01	 tst         r3, #1, 22
  070fc	0a000015	 beq         |$LN63@ContinueTx@2|
  07100	e59f32c0	 ldr         r3, [pc, #0x2C0]
  07104	e5933440	 ldr         r3, [r3, #0x440]
  07108	e3130801	 tst         r3, #1, 16
  0710c	0a000007	 beq         |$LN61@ContinueTx@2|
  07110	e59b3000	 ldr         r3, [r11]
  07114	e2833ffb	 add         r3, r3, #0xFB, 30
  07118	e5931000	 ldr         r1, [r3]
  0711c	e59f02b4	 ldr         r0, [pc, #0x2B4]
  07120	eb000000	 bl          CeLogMsg
  07124	e3a03001	 mov         r3, #1
  07128	e50b3034	 str         r3, [r11, #-0x34]
  0712c	ea000006	 b           |$LN62@ContinueTx@2|
  07130		 |$LN61@ContinueTx@2|
  07130	e59b3000	 ldr         r3, [r11]
  07134	e2833ffb	 add         r3, r3, #0xFB, 30
  07138	e5931000	 ldr         r1, [r3]
  0713c	e59f0294	 ldr         r0, [pc, #0x294]
  07140	eb000000	 bl          NKDbgPrintfW
  07144	e3a03000	 mov         r3, #0
  07148	e50b3034	 str         r3, [r11, #-0x34]
  0714c		 |$LN62@ContinueTx@2|
  0714c	e3a03001	 mov         r3, #1
  07150	e50b3030	 str         r3, [r11, #-0x30]
  07154	ea000001	 b           |$LN64@ContinueTx@2|
  07158		 |$LN63@ContinueTx@2|
  07158	e3a03000	 mov         r3, #0
  0715c	e50b3030	 str         r3, [r11, #-0x30]
  07160		 |$LN64@ContinueTx@2|

; 856  :                         dwFlag = CSR0_P_TXPKTRDY | CSR0_P_DATAEND;

  07160	e3a0300a	 mov         r3, #0xA
  07164	e50b309c	 str         r3, [r11, #-0x9C]

; 857  :                         pEP->pTransfer = NULL;

  07168	e51b3094	 ldr         r3, [r11, #-0x94]
  0716c	e2832020	 add         r2, r3, #0x20
  07170	e3a03000	 mov         r3, #0
  07174	e5823000	 str         r3, [r2]

; 858  :                         pTransfer->dwUsbError = UFN_NO_ERROR;

  07178	e51b3098	 ldr         r3, [r11, #-0x98]
  0717c	e2832014	 add         r2, r3, #0x14
  07180	e3a03000	 mov         r3, #0
  07184	e5823000	 str         r3, [r2]

; 859  :                         pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer);   

  07188	e51b2098	 ldr         r2, [r11, #-0x98]
  0718c	e3a01064	 mov         r1, #0x64
  07190	e59b3000	 ldr         r3, [r11]
  07194	e2833024	 add         r3, r3, #0x24
  07198	e5930000	 ldr         r0, [r3]
  0719c	e59b3000	 ldr         r3, [r11]
  071a0	e2833028	 add         r3, r3, #0x28
  071a4	e5933000	 ldr         r3, [r3]
  071a8	e1a0e00f	 mov         lr, pc
  071ac	e12fff13	 bx          r3

; 860  :                         DEBUGMSG(ZONE_INFO, (TEXT("Device_ProcessEP0: Notify - transfer completed\r\n")));                        

  071b0	e59f3210	 ldr         r3, [pc, #0x210]
  071b4	e5933440	 ldr         r3, [r3, #0x440]
  071b8	e3130b01	 tst         r3, #1, 22
  071bc	0a00000f	 beq         |$LN67@ContinueTx@2|
  071c0	e59f3200	 ldr         r3, [pc, #0x200]
  071c4	e5933440	 ldr         r3, [r3, #0x440]
  071c8	e3130801	 tst         r3, #1, 16
  071cc	0a000004	 beq         |$LN65@ContinueTx@2|
  071d0	e59f01fc	 ldr         r0, [pc, #0x1FC]
  071d4	eb000000	 bl          CeLogMsg
  071d8	e3a03001	 mov         r3, #1
  071dc	e50b302c	 str         r3, [r11, #-0x2C]
  071e0	ea000003	 b           |$LN66@ContinueTx@2|
  071e4		 |$LN65@ContinueTx@2|
  071e4	e59f01e8	 ldr         r0, [pc, #0x1E8]
  071e8	eb000000	 bl          NKDbgPrintfW
  071ec	e3a03000	 mov         r3, #0
  071f0	e50b302c	 str         r3, [r11, #-0x2C]
  071f4		 |$LN66@ContinueTx@2|
  071f4	e3a03001	 mov         r3, #1
  071f8	e50b3028	 str         r3, [r11, #-0x28]
  071fc	ea000001	 b           |$LN68@ContinueTx@2|
  07200		 |$LN67@ContinueTx@2|
  07200	e3a03000	 mov         r3, #0
  07204	e50b3028	 str         r3, [r11, #-0x28]
  07208		 |$LN68@ContinueTx@2|

; 861  :                     }
; 862  :                     else

  07208	ea000001	 b           |$LN2@ContinueTx@2|
  0720c		 |$LN3@ContinueTx@2|

; 863  :                     {
; 864  :                         dwFlag = CSR0_P_TXPKTRDY;

  0720c	e3a03002	 mov         r3, #2
  07210	e50b309c	 str         r3, [r11, #-0x9C]
  07214		 |$LN2@ContinueTx@2|

; 865  :                     }                   
; 866  :                     DEBUGMSG(ZONE_INFO, (TEXT("1. Set TxPktRdy - 0\r\n")));

  07214	e59f31ac	 ldr         r3, [pc, #0x1AC]
  07218	e5933440	 ldr         r3, [r3, #0x440]
  0721c	e3130b01	 tst         r3, #1, 22
  07220	0a00000f	 beq         |$LN71@ContinueTx@2|
  07224	e59f319c	 ldr         r3, [pc, #0x19C]
  07228	e5933440	 ldr         r3, [r3, #0x440]
  0722c	e3130801	 tst         r3, #1, 16
  07230	0a000004	 beq         |$LN69@ContinueTx@2|
  07234	e59f0194	 ldr         r0, [pc, #0x194]
  07238	eb000000	 bl          CeLogMsg
  0723c	e3a03001	 mov         r3, #1
  07240	e50b3024	 str         r3, [r11, #-0x24]
  07244	ea000003	 b           |$LN70@ContinueTx@2|
  07248		 |$LN69@ContinueTx@2|
  07248	e59f0180	 ldr         r0, [pc, #0x180]
  0724c	eb000000	 bl          NKDbgPrintfW
  07250	e3a03000	 mov         r3, #0
  07254	e50b3024	 str         r3, [r11, #-0x24]
  07258		 |$LN70@ContinueTx@2|
  07258	e3a03001	 mov         r3, #1
  0725c	e50b3020	 str         r3, [r11, #-0x20]
  07260	ea000001	 b           |$LN72@ContinueTx@2|
  07264		 |$LN71@ContinueTx@2|
  07264	e3a03000	 mov         r3, #0
  07268	e50b3020	 str         r3, [r11, #-0x20]
  0726c		 |$LN72@ContinueTx@2|

; 867  :                     SETREG16(&pCsrRegs->ep[endpoint].CSR.CSR0, dwFlag);                    

  0726c	e59b1004	 ldr         r1, [r11, #4]
  07270	e3a03010	 mov         r3, #0x10
  07274	e0020391	 mul         r2, r1, r3
  07278	e51b30a8	 ldr         r3, [r11, #-0xA8]
  0727c	e0833002	 add         r3, r3, r2
  07280	e2833002	 add         r3, r3, #2
  07284	e1d320b0	 ldrh        r2, [r3]
  07288	e51b309c	 ldr         r3, [r11, #-0x9C]
  0728c	e1823003	 orr         r3, r2, r3
  07290	e1a00803	 mov         r0, r3, lsl #16
  07294	e1a00820	 mov         r0, r0, lsr #16
  07298	e59b1004	 ldr         r1, [r11, #4]
  0729c	e3a03010	 mov         r3, #0x10
  072a0	e0020391	 mul         r2, r1, r3
  072a4	e51b30a8	 ldr         r3, [r11, #-0xA8]
  072a8	e0833002	 add         r3, r3, r2
  072ac	e2833002	 add         r3, r3, #2
  072b0	e1c300b0	 strh        r0, [r3]
  072b4		 |$LN5@ContinueTx@2|
  072b4		 |$LN7@ContinueTx@2|
  072b4		 |$LN9@ContinueTx@2|
  072b4		 |$LN87@ContinueTx@2|

; 868  :                 }                
; 869  :             }
; 870  :         } // if (endpoint != 0)
; 871  :     }

  072b4	ea00001c	 b           |$LN88@ContinueTx@2|
  072b8		 |$LN83@ContinueTx@2|

; 873  :     {
; 874  :         pTransfer->dwUsbError = UFN_CLIENT_BUFFER_ERROR;

  072b8	e51b3098	 ldr         r3, [r11, #-0x98]
  072bc	e2832014	 add         r2, r3, #0x14
  072c0	e3a03f41	 mov         r3, #0x41, 30
  072c4	e5823000	 str         r3, [r2]

; 875  :         complete = TRUE;

  072c8	e3a03001	 mov         r3, #1
  072cc	e50b3090	 str         r3, [r11, #-0x90]

; 876  :         DEBUGMSG(ZONE_ERROR, (L"UsbFnPdd!ContinueTxTransfer: UFN_CLIENT_BUFFER_ERROR"));

  072d0	e59f30f0	 ldr         r3, [pc, #0xF0]
  072d4	e5933440	 ldr         r3, [r3, #0x440]
  072d8	e3130001	 tst         r3, #1
  072dc	0a00000f	 beq         |$LN75@ContinueTx@2|
  072e0	e59f30e0	 ldr         r3, [pc, #0xE0]
  072e4	e5933440	 ldr         r3, [r3, #0x440]
  072e8	e3130801	 tst         r3, #1, 16
  072ec	0a000004	 beq         |$LN73@ContinueTx@2|
  072f0	e59f00d4	 ldr         r0, [pc, #0xD4]
  072f4	eb000000	 bl          CeLogMsg
  072f8	e3a03001	 mov         r3, #1
  072fc	e50b301c	 str         r3, [r11, #-0x1C]
  07300	ea000003	 b           |$LN74@ContinueTx@2|
  07304		 |$LN73@ContinueTx@2|
  07304	e59f00c0	 ldr         r0, [pc, #0xC0]
  07308	eb000000	 bl          NKDbgPrintfW
  0730c	e3a03000	 mov         r3, #0
  07310	e50b301c	 str         r3, [r11, #-0x1C]
  07314		 |$LN74@ContinueTx@2|
  07314	e3a03001	 mov         r3, #1
  07318	e50b3018	 str         r3, [r11, #-0x18]
  0731c	ea000001	 b           |$LN76@ContinueTx@2|
  07320		 |$LN75@ContinueTx@2|
  07320	e3a03000	 mov         r3, #0
  07324	e50b3018	 str         r3, [r11, #-0x18]
  07328		 |$LN76@ContinueTx@2|
  07328	eaffffff	 b           |$LN88@ContinueTx@2|
  0732c		 |$LN88@ContinueTx@2|

; 877  :     }
; 878  :     
; 879  :     rc = ERROR_SUCCESS;

  0732c	e3a03000	 mov         r3, #0
  07330	e50b30a4	 str         r3, [r11, #-0xA4]
  07334		 |$CleanUp$47882|

; 880  :     
; 881  : CleanUp:
; 882  :     
; 883  :     if (endpoint == 0)

  07334	e59b3004	 ldr         r3, [r11, #4]
  07338	e3530000	 cmp         r3, #0
  0733c	1a000001	 bne         |$LN1@ContinueTx@2|

; 884  :         prtEP0State(pPdd);

  07340	e59b0000	 ldr         r0, [r11]
  07344	eb000000	 bl          prtEP0State
  07348		 |$LN1@ContinueTx@2|

; 885  :     
; 886  :     DEBUGMSG(ZONE_FUNCTION, (L"-ContinueTxTransfer\r\n"));

  07348	e59f3078	 ldr         r3, [pc, #0x78]
  0734c	e5933440	 ldr         r3, [r3, #0x440]
  07350	e3130a01	 tst         r3, #1, 20
  07354	0a00000f	 beq         |$LN79@ContinueTx@2|
  07358	e59f3068	 ldr         r3, [pc, #0x68]
  0735c	e5933440	 ldr         r3, [r3, #0x440]
  07360	e3130801	 tst         r3, #1, 16
  07364	0a000004	 beq         |$LN77@ContinueTx@2|
  07368	e59f0054	 ldr         r0, [pc, #0x54]
  0736c	eb000000	 bl          CeLogMsg
  07370	e3a03001	 mov         r3, #1
  07374	e50b3014	 str         r3, [r11, #-0x14]
  07378	ea000003	 b           |$LN78@ContinueTx@2|
  0737c		 |$LN77@ContinueTx@2|
  0737c	e59f0040	 ldr         r0, [pc, #0x40]
  07380	eb000000	 bl          NKDbgPrintfW
  07384	e3a03000	 mov         r3, #0
  07388	e50b3014	 str         r3, [r11, #-0x14]
  0738c		 |$LN78@ContinueTx@2|
  0738c	e3a03001	 mov         r3, #1
  07390	e50b3010	 str         r3, [r11, #-0x10]
  07394	ea000001	 b           |$LN80@ContinueTx@2|
  07398		 |$LN79@ContinueTx@2|
  07398	e3a03000	 mov         r3, #0
  0739c	e50b3010	 str         r3, [r11, #-0x10]
  073a0		 |$LN80@ContinueTx@2|

; 887  :     
; 888  :     return rc;

  073a0	e51b30a4	 ldr         r3, [r11, #-0xA4]
  073a4	e50b308c	 str         r3, [r11, #-0x8C]
  073a8		 |$LN17@ContinueTx@2|
  073a8		 |$LN81@ContinueTx@2|

; 889  : }

  073a8	e51b008c	 ldr         r0, [r11, #-0x8C]
  073ac	e24bd00c	 sub         sp, r11, #0xC
  073b0	e89d6800	 ldmia       sp, {r11, sp, lr}
  073b4	e12fff1e	 bx          lr

			 ENDP  ; |ContinueTxTransfer|

  073b8		 |$LN82@ContinueTx@2|
  073b8		 |$LN91@ContinueTx@2|

; 872  :     __except(EXCEPTION_EXECUTE_HANDLER)

  073b8	e52de004	 str         lr, [sp, #-4]!
  073bc		 |$LN85@ContinueTx@2|
  073bc		 |$LN94@ContinueTx@2|
  073bc	e3a00001	 mov         r0, #1
  073c0		 |$LN84@ContinueTx@2|
  073c0	e49df004	 ldr         pc, [sp], #4
  073c4		 |$LN96@ContinueTx@2|
  073c4		 |$LN97@ContinueTx@2|
  073c4	00000000	 DCD         |??_C@_1CM@PMAMFAIC@?$AA?9?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  073c8		 |$LN98@ContinueTx@2|
  073c8	00000000	 DCD         |dpCurSettings|
  073cc		 |$LN99@ContinueTx@2|
  073cc	00000000	 DCD         |??_C@_1GK@JHMJGNNE@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAU?$AAF?$AAN@|
  073d0		 |$LN100@ContinueTx@2|
  073d0	00000000	 DCD         |??_C@_1CM@NJEMGJMB@?$AA1?$AA?4?$AA?5?$AAS?$AAe?$AAt?$AA?5?$AAT?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?5?$AA?9?$AA?5?$AA0?$AA?$AN?$AA?6?$AA?$AA@|
  073d4		 |$LN101@ContinueTx@2|
  073d4	00000000	 DCD         |??_C@_1GC@JGCOADBD@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?5?$AA?9?$AA?5?$AAt?$AAr?$AAa?$AAn@|
  073d8		 |$LN102@ContinueTx@2|
  073d8	00000000	 DCD         |??_C@_1EC@LOMBDOHD@?$AAS?$AAe?$AAt?$AA?5?$AAO?$AAU?$AAT?$AA?5?$AAM?$AAs?$AAg?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAe?$AAp?$AA0?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6@|
  073dc		 |$LN103@ContinueTx@2|
  073dc	00000000	 DCD         |??_C@_1BM@LMLHKPJF@?$AAD?$AAA?$AAT?$AAA?$AAE?$AAN?$AAD?$AA?5?$AAa?$AAd?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  073e0		 |$LN104@ContinueTx@2|
  073e0	00000000	 DCD         |??_C@_1GE@PLIMDAFF@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAT?$AAx?$AA?5@|
  073e4		 |$LN105@ContinueTx@2|
  073e4	00000000	 DCD         |??_C@_1IM@DHEJLBCK@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_@|
  073e8		 |$LN106@ContinueTx@2|
  073e8	00000000	 DCD         |??_C@_1DC@IJMAINHK@?$AAT?$AAX?$AAP?$AAK?$AAT?$AAR?$AAd?$AAy?$AA?5?$AAb?$AAi?$AAt?$AA?5?$AAi?$AAs?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  073ec		 |$LN107@ContinueTx@2|
  073ec	00000000	 DCD         |??_C@_1FM@NNMILMFN@?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAc?$AAb?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAc?$AAb?$AAT?$AAr?$AAa?$AAn@|
  073f0		 |$LN108@ContinueTx@2|
  073f0	00000000	 DCD         |??_C@_1CK@HGADPGKD@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  073f4		 |$LN109@ContinueTx@2|
  073f4	00000000	 DCD         |??_C@_1DG@GAFCGMNC@?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  073f8		 |$LN110@ContinueTx@2|
  073f8	00000000	 DCD         |??_C@_1FO@BHNCEDKI@?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@|
  073fc		 |$LN95@ContinueTx@2|
  073fc		 |$LN93@ContinueTx@2|
	EXPORT	|??_C@_1EE@DIEOMDPN@?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?5?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@LOFKLMPA@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00100			 AREA	 |.pdata|, PDATA
|$T50574| DCD	|$LN16@Device_Dis|
	DCD	0x40008c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@DIEOMDPN@?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?5?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?$AN@| DCB "C"
	DCB	0x0, "l", 0x0, "i", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, " ", 0x0, "C"
	DCB	0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, " ", 0x0, "D", 0x0, "i", 0x0, "s", 0x0, "c"
	DCB	0x0, "o", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@LOFKLMPA@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "D", 0x0, "i", 0x0, "s", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  073fc			 AREA	 |.text|, CODE, ARM

  073fc		 |Device_Disconnect| PROC

; 2380 : {

  073fc		 |$LN16@Device_Dis|
  073fc	e1a0c00d	 mov         r12, sp
  07400	e92d0001	 stmdb       sp!, {r0}
  07404	e92d5000	 stmdb       sp!, {r12, lr}
  07408	e24dd01c	 sub         sp, sp, #0x1C
  0740c		 |$M50571|

; 2381 :     MUsbFnPdd_t *pPdd =((PHSMUSB_T) pHSMUSBContext)->pContext[DEVICE_CONTEXT];

  0740c	e59d3024	 ldr         r3, [sp, #0x24]
  07410	e2833010	 add         r3, r3, #0x10
  07414	e5933000	 ldr         r3, [r3]
  07418	e58d3004	 str         r3, [sp, #4]

; 2382 :     PHSMUSB_T pOTG =(PHSMUSB_T)(pPdd->pUSBContext);    

  0741c	e59d3004	 ldr         r3, [sp, #4]
  07420	e2833020	 add         r3, r3, #0x20
  07424	e5933000	 ldr         r3, [r3]
  07428	e58d3000	 str         r3, [sp]

; 2383 :     DEBUGMSG(ZONE_FUNCTION, (L"Device_Disconnect\r\n"));

  0742c	e59f31f0	 ldr         r3, [pc, #0x1F0]
  07430	e5933440	 ldr         r3, [r3, #0x440]
  07434	e3130a01	 tst         r3, #1, 20
  07438	0a00000f	 beq         |$LN8@Device_Dis|
  0743c	e59f31e0	 ldr         r3, [pc, #0x1E0]
  07440	e5933440	 ldr         r3, [r3, #0x440]
  07444	e3130801	 tst         r3, #1, 16
  07448	0a000004	 beq         |$LN6@Device_Dis|
  0744c	e59f01d4	 ldr         r0, [pc, #0x1D4]
  07450	eb000000	 bl          CeLogMsg
  07454	e3a03001	 mov         r3, #1
  07458	e58d300c	 str         r3, [sp, #0xC]
  0745c	ea000003	 b           |$LN7@Device_Dis|
  07460		 |$LN6@Device_Dis|
  07460	e59f01c0	 ldr         r0, [pc, #0x1C0]
  07464	eb000000	 bl          NKDbgPrintfW
  07468	e3a03000	 mov         r3, #0
  0746c	e58d300c	 str         r3, [sp, #0xC]
  07470		 |$LN7@Device_Dis|
  07470	e3a03001	 mov         r3, #1
  07474	e58d3010	 str         r3, [sp, #0x10]
  07478	ea000001	 b           |$LN9@Device_Dis|
  0747c		 |$LN8@Device_Dis|
  0747c	e3a03000	 mov         r3, #0
  07480	e58d3010	 str         r3, [sp, #0x10]
  07484		 |$LN9@Device_Dis|

; 2384 : 
; 2385 :     SetEventData( pPdd->hVbusChargeEvent,  BATTERY_USBHOST_DISCONNECT );  

  07484	e3a01000	 mov         r1, #0
  07488	e59d3004	 ldr         r3, [sp, #4]
  0748c	e2833b01	 add         r3, r3, #1, 22
  07490	e2833028	 add         r3, r3, #0x28
  07494	e5930000	 ldr         r0, [r3]
  07498	eb000000	 bl          SetEventData

; 2386 :     SetEvent( pPdd->hVbusChargeEvent );

  0749c	e59d3004	 ldr         r3, [sp, #4]
  074a0	e2833b01	 add         r3, r3, #1, 22
  074a4	e2833028	 add         r3, r3, #0x28
  074a8	e5930000	 ldr         r0, [r3]
  074ac	eb000000	 bl          SetEvent

; 2387 : 
; 2388 :     // We are not configured anymore
; 2389 :     // Let MDD process change
; 2390 :     pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_EVENTS, UFN_DETACH);

  074b0	e3a02000	 mov         r2, #0
  074b4	e3a01001	 mov         r1, #1
  074b8	e59d3004	 ldr         r3, [sp, #4]
  074bc	e2833024	 add         r3, r3, #0x24
  074c0	e5930000	 ldr         r0, [r3]
  074c4	e59d3004	 ldr         r3, [sp, #4]
  074c8	e2833028	 add         r3, r3, #0x28
  074cc	e5933000	 ldr         r3, [r3]
  074d0	e1a0e00f	 mov         lr, pc
  074d4	e12fff13	 bx          r3

; 2391 :     // Set internal power state to D3
; 2392 :     pPdd->devState &= ~(MUSB_DEVSTAT_ATT | 
; 2393 :                         MUSB_DEVSTAT_B_HNP_ENABLE | 
; 2394 :                         MUSB_DEVSTAT_A_HNP_SUPPORT |
; 2395 :                         MUSB_DEVSTAT_A_ALT_HNP_SUPPORT);

  074d8	e59d3004	 ldr         r3, [sp, #4]
  074dc	e283306c	 add         r3, r3, #0x6C
  074e0	e5932000	 ldr         r2, [r3]
  074e4	e3e03c03	 mvn         r3, #3, 24
  074e8	e2233081	 eor         r3, r3, #0x81
  074ec	e0022003	 and         r2, r2, r3
  074f0	e59d3004	 ldr         r3, [sp, #4]
  074f4	e283306c	 add         r3, r3, #0x6C
  074f8	e5832000	 str         r2, [r3]

; 2396 : 
; 2397 :     pPdd->selfPowerState = D3;

  074fc	e59d3004	 ldr         r3, [sp, #4]
  07500	e2832064	 add         r2, r3, #0x64
  07504	e3a03003	 mov         r3, #3
  07508	e5823000	 str         r3, [r2]

; 2398 : 
; 2399 :     EnterCriticalSection(&pPdd->powerStateCS);

  0750c	e59d3004	 ldr         r3, [sp, #4]
  07510	e283008c	 add         r0, r3, #0x8C
  07514	eb000000	 bl          EnterCriticalSection

; 2400 :     pPdd->fPowerDown = TRUE;

  07518	e59d3004	 ldr         r3, [sp, #4]
  0751c	e28320a4	 add         r2, r3, #0xA4
  07520	e3a03001	 mov         r3, #1
  07524	e5823000	 str         r3, [r2]

; 2401 :     if(pPdd->dwUSBFNState == USBFN_ACTIVE)

  07528	e59d3004	 ldr         r3, [sp, #4]
  0752c	e28330a8	 add         r3, r3, #0xA8
  07530	e5933000	 ldr         r3, [r3]
  07534	e3530001	 cmp         r3, #1
  07538	1a000008	 bne         |$LN3@Device_Dis|

; 2402 :     {
; 2403 :         LeaveCriticalSection(&pPdd->powerStateCS);

  0753c	e59d3004	 ldr         r3, [sp, #4]
  07540	e283008c	 add         r0, r3, #0x8C
  07544	eb000000	 bl          LeaveCriticalSection

; 2404 :         WaitForSingleObject(pPdd->hPowerDownEvent,INFINITE);

  07548	e3e01000	 mvn         r1, #0
  0754c	e59d3004	 ldr         r3, [sp, #4]
  07550	e28330a0	 add         r3, r3, #0xA0
  07554	e5930000	 ldr         r0, [r3]
  07558	eb000000	 bl          WaitForSingleObject

; 2405 :     }
; 2406 :     else

  0755c	ea000002	 b           |$LN2@Device_Dis|
  07560		 |$LN3@Device_Dis|

; 2407 :     {
; 2408 :         LeaveCriticalSection(&pPdd->powerStateCS);

  07560	e59d3004	 ldr         r3, [sp, #4]
  07564	e283008c	 add         r0, r3, #0x8C
  07568	eb000000	 bl          LeaveCriticalSection
  0756c		 |$LN2@Device_Dis|

; 2409 :     }
; 2410 :     if ((pOTG->connect_status & CONN_DC) == 0x00)

  0756c	e59d3000	 ldr         r3, [sp]
  07570	e283304c	 add         r3, r3, #0x4C
  07574	e5d33000	 ldrb        r3, [r3]
  07578	e3130004	 tst         r3, #4
  0757c	1a000021	 bne         |$LN1@Device_Dis|

; 2411 :     {
; 2412 :         DEBUGMSG(ZONE_INFO, (TEXT("Client Mode Complete Disconnect\r\n")));

  07580	e59f309c	 ldr         r3, [pc, #0x9C]
  07584	e5933440	 ldr         r3, [r3, #0x440]
  07588	e3130b01	 tst         r3, #1, 22
  0758c	0a00000f	 beq         |$LN12@Device_Dis|
  07590	e59f308c	 ldr         r3, [pc, #0x8C]
  07594	e5933440	 ldr         r3, [r3, #0x440]
  07598	e3130801	 tst         r3, #1, 16
  0759c	0a000004	 beq         |$LN10@Device_Dis|
  075a0	e59f0078	 ldr         r0, [pc, #0x78]
  075a4	eb000000	 bl          CeLogMsg
  075a8	e3a03001	 mov         r3, #1
  075ac	e58d3014	 str         r3, [sp, #0x14]
  075b0	ea000003	 b           |$LN11@Device_Dis|
  075b4		 |$LN10@Device_Dis|
  075b4	e59f0064	 ldr         r0, [pc, #0x64]
  075b8	eb000000	 bl          NKDbgPrintfW
  075bc	e3a03000	 mov         r3, #0
  075c0	e58d3014	 str         r3, [sp, #0x14]
  075c4		 |$LN11@Device_Dis|
  075c4	e3a03001	 mov         r3, #1
  075c8	e58d3018	 str         r3, [sp, #0x18]
  075cc	ea000001	 b           |$LN13@Device_Dis|
  075d0		 |$LN12@Device_Dis|
  075d0	e3a03000	 mov         r3, #0
  075d4	e58d3018	 str         r3, [sp, #0x18]
  075d8		 |$LN13@Device_Dis|

; 2413 :         pOTG->connect_status |= CONN_DC;

  075d8	e59d3000	 ldr         r3, [sp]
  075dc	e283304c	 add         r3, r3, #0x4C
  075e0	e5d33000	 ldrb        r3, [r3]
  075e4	e3831004	 orr         r1, r3, #4
  075e8	e59d3000	 ldr         r3, [sp]
  075ec	e283204c	 add         r2, r3, #0x4C
  075f0	e20130ff	 and         r3, r1, #0xFF
  075f4	e5c23000	 strb        r3, [r2]

; 2414 :         SetEvent(pOTG->hSysIntrEvent);

  075f8	e59d3000	 ldr         r3, [sp]
  075fc	e2833054	 add         r3, r3, #0x54
  07600	e5930000	 ldr         r0, [r3]
  07604	eb000000	 bl          SetEvent
  07608		 |$LN1@Device_Dis|

; 2415 :     }
; 2416 :     
; 2417 :     return ERROR_SUCCESS;

  07608	e3a03000	 mov         r3, #0
  0760c	e58d3008	 str         r3, [sp, #8]

; 2418 : }

  07610	e59d0008	 ldr         r0, [sp, #8]
  07614	e28dd01c	 add         sp, sp, #0x1C
  07618	e89d6000	 ldmia       sp, {sp, lr}
  0761c	e12fff1e	 bx          lr
  07620		 |$LN17@Device_Dis|
  07620		 |$LN18@Device_Dis|
  07620	00000000	 DCD         |??_C@_1EE@DIEOMDPN@?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?5?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?$AN@|
  07624		 |$LN19@Device_Dis|
  07624	00000000	 DCD         |dpCurSettings|
  07628		 |$LN20@Device_Dis|
  07628	00000000	 DCD         |??_C@_1CI@LOFKLMPA@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  0762c		 |$M50572|

			 ENDP  ; |Device_Disconnect|


  00108			 AREA	 |.pdata|, PDATA
|$T50584| DCD	|$LN5@Device_Sus|
	DCD	0x40000a04
; Function compile flags: /Odtp

  0762c			 AREA	 |.text|, CODE, ARM

  0762c		 |Device_Suspend| PROC

; 2436 : {

  0762c		 |$LN5@Device_Sus|
  0762c	e1a0c00d	 mov         r12, sp
  07630	e92d0001	 stmdb       sp!, {r0}
  07634	e92d5000	 stmdb       sp!, {r12, lr}
  07638	e24dd004	 sub         sp, sp, #4
  0763c		 |$M50581|

; 2437 : 	UNREFERENCED_PARAMETER(pHSMUSBContext);
; 2438 : 
; 2439 :     return ERROR_INVALID_PARAMETER;

  0763c	e3a03057	 mov         r3, #0x57
  07640	e58d3000	 str         r3, [sp]

; 2440 : }

  07644	e59d0000	 ldr         r0, [sp]
  07648	e28dd004	 add         sp, sp, #4
  0764c	e89d6000	 ldmia       sp, {sp, lr}
  07650	e12fff1e	 bx          lr
  07654		 |$M50582|

			 ENDP  ; |Device_Suspend|

	EXPORT	|??_C@_1CI@HADKOAC@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAP?$AAO?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@NKOFFNNB@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_PowerDown|

  00110			 AREA	 |.pdata|, PDATA
|$T50597| DCD	|$LN13@UfnPdd_Pow|
	DCD	0x40003604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@HADKOAC@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAP?$AAO?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "P", 0x0, "O", 0x0, "w", 0x0, "e", 0x0, "r"
	DCB	0x0, "D", 0x0, "o", 0x0, "w", 0x0, "n", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@NKOFFNNB@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r"
	DCB	0x0, "D", 0x0, "o", 0x0, "w", 0x0, "n", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  07654			 AREA	 |.text|, CODE, ARM

  07654		 |UfnPdd_PowerDown| PROC

; 2462 : {

  07654		 |$LN13@UfnPdd_Pow|
  07654	e1a0c00d	 mov         r12, sp
  07658	e92d0001	 stmdb       sp!, {r0}
  0765c	e92d5000	 stmdb       sp!, {r12, lr}
  07660	e24dd010	 sub         sp, sp, #0x10
  07664		 |$M50594|

; 2463 : 	UNREFERENCED_PARAMETER(pPddContext);
; 2464 : 
; 2465 :     DEBUGMSG(ZONE_INFO, (TEXT("+UfnPdd_PowerDown\r\n")));

  07664	e59f30b8	 ldr         r3, [pc, #0xB8]
  07668	e5933440	 ldr         r3, [r3, #0x440]
  0766c	e3130b01	 tst         r3, #1, 22
  07670	0a00000f	 beq         |$LN5@UfnPdd_Pow|
  07674	e59f30a8	 ldr         r3, [pc, #0xA8]
  07678	e5933440	 ldr         r3, [r3, #0x440]
  0767c	e3130801	 tst         r3, #1, 16
  07680	0a000004	 beq         |$LN3@UfnPdd_Pow|
  07684	e59f009c	 ldr         r0, [pc, #0x9C]
  07688	eb000000	 bl          CeLogMsg
  0768c	e3a03001	 mov         r3, #1
  07690	e58d3000	 str         r3, [sp]
  07694	ea000003	 b           |$LN4@UfnPdd_Pow|
  07698		 |$LN3@UfnPdd_Pow|
  07698	e59f0088	 ldr         r0, [pc, #0x88]
  0769c	eb000000	 bl          NKDbgPrintfW
  076a0	e3a03000	 mov         r3, #0
  076a4	e58d3000	 str         r3, [sp]
  076a8		 |$LN4@UfnPdd_Pow|
  076a8	e3a03001	 mov         r3, #1
  076ac	e58d3004	 str         r3, [sp, #4]
  076b0	ea000001	 b           |$LN6@UfnPdd_Pow|
  076b4		 |$LN5@UfnPdd_Pow|
  076b4	e3a03000	 mov         r3, #0
  076b8	e58d3004	 str         r3, [sp, #4]
  076bc		 |$LN6@UfnPdd_Pow|

; 2466 : #if 0
; 2467 :     MUsbFnPdd_t *pPdd = pPddContext;
; 2468 :     PHSMUSB_T pOTG = (PHSMUSB_T)(pPdd->pUSBContext);
; 2469 :     DWORD currtime;
; 2470 :     DWORD starttime;
; 2471 : 
; 2472 : 
; 2473 :     if (pOTG->operateMode != DEVICE_MODE)
; 2474 :     {
; 2475 :         DEBUGMSG(ZONE_INFO, (TEXT("UfnPdd_PowerDown not in device mode, it is %d\r\n"), pOTG->operateMode));
; 2476 :         return;
; 2477 :     }
; 2478 : 
; 2479 :     /*
; 2480 :         Don't handle this musbotg.dll takes care of the clocks.
; 2481 :     */
; 2482 : 
; 2483 :     //CLRREG8(&pOTG->pUsbGenRegs->DevCtl, DEVCTL_SESSION);
; 2484 :     //RETAILMSG(1, (TEXT("DevCtl Power Down = 0x%x\r\n"), INREG8(&pOTG->pUsbGenRegs->DevCtl)));
; 2485 :     //CLRREG8(&pOTG->pUsbGenRegs->Power, POWER_SOFTCONN);
; 2486 :     //SETREG8(&pOTG->pUsbGenRegs->Power, POWER_EN_SUSPENDM);
; 2487 :     //RETAILMSG(1, (TEXT("Clear the Soft Conn\r\n")));
; 2488 :     pPdd->pfnEnUSBClock(FALSE);
; 2489 : 
; 2490 :     // Wait for one second
; 2491 :     starttime = GetTickCount();
; 2492 :     do {
; 2493 :         currtime = GetTickCount();
; 2494 :         if (currtime < starttime)
; 2495 :             starttime = currtime;
; 2496 :     } while (currtime - starttime < 1000);
; 2497 : #endif
; 2498 :     DEBUGMSG(ZONE_INFO, (TEXT("-UfnPdd_POwerDown\r\n")));

  076bc	e59f3060	 ldr         r3, [pc, #0x60]
  076c0	e5933440	 ldr         r3, [r3, #0x440]
  076c4	e3130b01	 tst         r3, #1, 22
  076c8	0a00000f	 beq         |$LN9@UfnPdd_Pow|
  076cc	e59f3050	 ldr         r3, [pc, #0x50]
  076d0	e5933440	 ldr         r3, [r3, #0x440]
  076d4	e3130801	 tst         r3, #1, 16
  076d8	0a000004	 beq         |$LN7@UfnPdd_Pow|
  076dc	e59f003c	 ldr         r0, [pc, #0x3C]
  076e0	eb000000	 bl          CeLogMsg
  076e4	e3a03001	 mov         r3, #1
  076e8	e58d3008	 str         r3, [sp, #8]
  076ec	ea000003	 b           |$LN8@UfnPdd_Pow|
  076f0		 |$LN7@UfnPdd_Pow|
  076f0	e59f0028	 ldr         r0, [pc, #0x28]
  076f4	eb000000	 bl          NKDbgPrintfW
  076f8	e3a03000	 mov         r3, #0
  076fc	e58d3008	 str         r3, [sp, #8]
  07700		 |$LN8@UfnPdd_Pow|
  07700	e3a03001	 mov         r3, #1
  07704	e58d300c	 str         r3, [sp, #0xC]
  07708	ea000001	 b           |$LN10@UfnPdd_Pow|
  0770c		 |$LN9@UfnPdd_Pow|
  0770c	e3a03000	 mov         r3, #0
  07710	e58d300c	 str         r3, [sp, #0xC]
  07714		 |$LN10@UfnPdd_Pow|

; 2499 : }

  07714	e28dd010	 add         sp, sp, #0x10
  07718	e89d6000	 ldmia       sp, {sp, lr}
  0771c	e12fff1e	 bx          lr
  07720		 |$LN14@UfnPdd_Pow|
  07720		 |$LN15@UfnPdd_Pow|
  07720	00000000	 DCD         |??_C@_1CI@HADKOAC@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAP?$AAO?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  07724		 |$LN16@UfnPdd_Pow|
  07724	00000000	 DCD         |dpCurSettings|
  07728		 |$LN17@UfnPdd_Pow|
  07728	00000000	 DCD         |??_C@_1CI@NKOFFNNB@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  0772c		 |$M50595|

			 ENDP  ; |UfnPdd_PowerDown|

	EXPORT	|UfnPdd_PowerUp|

  00118			 AREA	 |.pdata|, PDATA
|$T50606| DCD	|$LN5@UfnPdd_Pow@2|
	DCD	0x40000503
; Function compile flags: /Odtp

  0772c			 AREA	 |.text|, CODE, ARM

  0772c		 |UfnPdd_PowerUp| PROC

; 2521 : {

  0772c		 |$LN5@UfnPdd_Pow@2|
  0772c	e1a0c00d	 mov         r12, sp
  07730	e92d0001	 stmdb       sp!, {r0}
  07734	e92d5000	 stmdb       sp!, {r12, lr}
  07738		 |$M50603|

; 2522 : 	UNREFERENCED_PARAMETER(pPddContext);
; 2523 : 
; 2524 :     /*
; 2525 :         DONOT handle here musbotg.dll takes care of clocks.
; 2526 :     */
; 2527 : #if 0
; 2528 :     MUsbFnPdd_t *pPdd = pPddContext;
; 2529 :     PHSMUSB_T pOTG = (PHSMUSB_T)(pPdd->pUSBContext);
; 2530 : 
; 2531 :     if (pOTG->operateMode != DEVICE_MODE)
; 2532 :         return;
; 2533 : 
; 2534 :     DEBUGMSG(ZONE_POWER, (L"UfnPdd_PowerUp\r\n"));
; 2535 :     RETAILMSG(TRUE, (L"UfnPdd_PowerUp\r\n"));
; 2536 :     pPdd->pfnEnUSBClock(TRUE);
; 2537 : 
; 2538 :     SETREG8(&pOTG->pUsbGenRegs->Power, POWER_SOFTCONN);
; 2539 : #endif
; 2540 : }

  07738	e89d6000	 ldmia       sp, {sp, lr}
  0773c	e12fff1e	 bx          lr
  07740		 |$M50604|

			 ENDP  ; |UfnPdd_PowerUp|

	EXPORT	|??_C@_1HC@JJAOOHKM@?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAe?$AAp?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?0?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CF?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@NGNENNDF@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAT?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@NKKIADAK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_IssueTransfer|

  00120			 AREA	 |.pdata|, PDATA
|$T50636| DCD	|$LN37@UfnPdd_Iss|
	DCD	0x40015604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@JJAOOHKM@?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAe?$AAp?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?0?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CF?$AAd@| DCB "I"
	DCB	0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "e", 0x0, "p", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, ",", 0x0, " ", 0x0, "l", 0x0, "e"
	DCB	0x0, "n", 0x0, "g", 0x0, "t", 0x0, "h", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, ",", 0x0, " ", 0x0, "(", 0x0, "%"
	DCB	0x0, "s", 0x0, ")", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "x"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e"
	DCB	0x0, "t", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@| DCB "I", 0x0, "N", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@NGNENNDF@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAT?$AAr@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, "e", 0x0, "r"
	DCB	0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "p", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "N"
	DCB	0x0, "U", 0x0, "L", 0x0, "L", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@NKKIADAK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  07740			 AREA	 |.text|, CODE, ARM

  07740		 |UfnPdd_IssueTransfer| PROC

; 2566 : {

  07740		 |$LN37@UfnPdd_Iss|
  07740	e1a0c00d	 mov         r12, sp
  07744	e92d0007	 stmdb       sp!, {r0 - r2}
  07748	e92d5000	 stmdb       sp!, {r12, lr}
  0774c	e24dd054	 sub         sp, sp, #0x54
  07750		 |$M50633|

; 2567 :     DWORD rc = ERROR_INVALID_PARAMETER;

  07750	e3a03057	 mov         r3, #0x57
  07754	e58d3008	 str         r3, [sp, #8]

; 2568 :     MUsbFnPdd_t *pPdd = pPddContext;

  07758	e59d305c	 ldr         r3, [sp, #0x5C]
  0775c	e58d3010	 str         r3, [sp, #0x10]

; 2569 :     PHSMUSB_T pUSBContext =(PHSMUSB_T) pPdd->pUSBContext;

  07760	e59d3010	 ldr         r3, [sp, #0x10]
  07764	e2833020	 add         r3, r3, #0x20
  07768	e5933000	 ldr         r3, [r3]
  0776c	e58d300c	 str         r3, [sp, #0xC]

; 2570 :     PCSP_MUSB_CSR_REGS pCsrRegs = pUSBContext->pUsbCsrRegs;

  07770	e59d300c	 ldr         r3, [sp, #0xC]
  07774	e283301c	 add         r3, r3, #0x1C
  07778	e5933000	 ldr         r3, [r3]
  0777c	e58d3004	 str         r3, [sp, #4]

; 2571 :     
; 2572 :     
; 2573 :     DEBUGMSG(ZONE_FUNCTION, (L"UfnPdd_IssueTransfer\r\n"));

  07780	e59f34f0	 ldr         r3, [pc, #0x4F0]
  07784	e5933440	 ldr         r3, [r3, #0x440]
  07788	e3130a01	 tst         r3, #1, 20
  0778c	0a00000f	 beq         |$LN15@UfnPdd_Iss|
  07790	e59f34e0	 ldr         r3, [pc, #0x4E0]
  07794	e5933440	 ldr         r3, [r3, #0x440]
  07798	e3130801	 tst         r3, #1, 16
  0779c	0a000004	 beq         |$LN13@UfnPdd_Iss|
  077a0	e59f04ec	 ldr         r0, [pc, #0x4EC]
  077a4	eb000000	 bl          CeLogMsg
  077a8	e3a03001	 mov         r3, #1
  077ac	e58d3020	 str         r3, [sp, #0x20]
  077b0	ea000003	 b           |$LN14@UfnPdd_Iss|
  077b4		 |$LN13@UfnPdd_Iss|
  077b4	e59f04d8	 ldr         r0, [pc, #0x4D8]
  077b8	eb000000	 bl          NKDbgPrintfW
  077bc	e3a03000	 mov         r3, #0
  077c0	e58d3020	 str         r3, [sp, #0x20]
  077c4		 |$LN14@UfnPdd_Iss|
  077c4	e3a03001	 mov         r3, #1
  077c8	e58d3024	 str         r3, [sp, #0x24]
  077cc	ea000001	 b           |$LN16@UfnPdd_Iss|
  077d0		 |$LN15@UfnPdd_Iss|
  077d0	e3a03000	 mov         r3, #0
  077d4	e58d3024	 str         r3, [sp, #0x24]
  077d8		 |$LN16@UfnPdd_Iss|

; 2574 :     
; 2575 :     EnterCriticalSection(&pPdd->powerStateCS);

  077d8	e59d3010	 ldr         r3, [sp, #0x10]
  077dc	e283008c	 add         r0, r3, #0x8C
  077e0	eb000000	 bl          EnterCriticalSection

; 2576 :     if(pPdd->fPowerDown == TRUE)

  077e4	e59d3010	 ldr         r3, [sp, #0x10]
  077e8	e28330a4	 add         r3, r3, #0xA4
  077ec	e5933000	 ldr         r3, [r3]
  077f0	e3530001	 cmp         r3, #1
  077f4	1a00000b	 bne         |$LN10@UfnPdd_Iss|

; 2577 :     {
; 2578 :         pTransfer->dwUsbError = UFN_CANCELED_ERROR;

  077f8	e59d3064	 ldr         r3, [sp, #0x64]
  077fc	e2832014	 add         r2, r3, #0x14
  07800	e3a03c01	 mov         r3, #1, 24
  07804	e3833001	 orr         r3, r3, #1
  07808	e5823000	 str         r3, [r2]

; 2579 :         LeaveCriticalSection(&pPdd->powerStateCS);

  0780c	e59d3010	 ldr         r3, [sp, #0x10]
  07810	e283008c	 add         r0, r3, #0x8C
  07814	eb000000	 bl          LeaveCriticalSection

; 2580 :         return ERROR_SUCCESS;

  07818	e3a03000	 mov         r3, #0
  0781c	e58d3014	 str         r3, [sp, #0x14]
  07820	ea00010f	 b           |$LN11@UfnPdd_Iss|

; 2581 : 
; 2582 :     }
; 2583 :     else

  07824	ea000006	 b           |$LN9@UfnPdd_Iss|
  07828		 |$LN10@UfnPdd_Iss|

; 2584 :     {
; 2585 :         pPdd->dwUSBFNState = USBFN_ACTIVE;

  07828	e59d3010	 ldr         r3, [sp, #0x10]
  0782c	e28320a8	 add         r2, r3, #0xA8
  07830	e3a03001	 mov         r3, #1
  07834	e5823000	 str         r3, [r2]

; 2586 :         LeaveCriticalSection(&pPdd->powerStateCS);

  07838	e59d3010	 ldr         r3, [sp, #0x10]
  0783c	e283008c	 add         r0, r3, #0x8C
  07840	eb000000	 bl          LeaveCriticalSection
  07844		 |$LN9@UfnPdd_Iss|

; 2587 :     }
; 2588 : 
; 2589 :     if (pTransfer == NULL) 

  07844	e59d3064	 ldr         r3, [sp, #0x64]
  07848	e3530000	 cmp         r3, #0
  0784c	1a000018	 bne         |$LN8@UfnPdd_Iss|

; 2590 :     {
; 2591 :         DEBUGMSG(ZONE_ERROR, (L"UfnPdd_IssueTransfer:  error pTransfer is NULL\r\n"));

  07850	e59f3420	 ldr         r3, [pc, #0x420]
  07854	e5933440	 ldr         r3, [r3, #0x440]
  07858	e3130001	 tst         r3, #1
  0785c	0a00000f	 beq         |$LN19@UfnPdd_Iss|
  07860	e59f3410	 ldr         r3, [pc, #0x410]
  07864	e5933440	 ldr         r3, [r3, #0x440]
  07868	e3130801	 tst         r3, #1, 16
  0786c	0a000004	 beq         |$LN17@UfnPdd_Iss|
  07870	e59f0418	 ldr         r0, [pc, #0x418]
  07874	eb000000	 bl          CeLogMsg
  07878	e3a03001	 mov         r3, #1
  0787c	e58d3028	 str         r3, [sp, #0x28]
  07880	ea000003	 b           |$LN18@UfnPdd_Iss|
  07884		 |$LN17@UfnPdd_Iss|
  07884	e59f0404	 ldr         r0, [pc, #0x404]
  07888	eb000000	 bl          NKDbgPrintfW
  0788c	e3a03000	 mov         r3, #0
  07890	e58d3028	 str         r3, [sp, #0x28]
  07894		 |$LN18@UfnPdd_Iss|
  07894	e3a03001	 mov         r3, #1
  07898	e58d302c	 str         r3, [sp, #0x2C]
  0789c	ea000001	 b           |$LN20@UfnPdd_Iss|
  078a0		 |$LN19@UfnPdd_Iss|
  078a0	e3a03000	 mov         r3, #0
  078a4	e58d302c	 str         r3, [sp, #0x2C]
  078a8		 |$LN20@UfnPdd_Iss|

; 2592 :         return ERROR_INVALID_PARAMETER;

  078a8	e3a03057	 mov         r3, #0x57
  078ac	e58d3014	 str         r3, [sp, #0x14]
  078b0	ea0000eb	 b           |$LN11@UfnPdd_Iss|
  078b4		 |$LN8@UfnPdd_Iss|

; 2593 :     }    
; 2594 :     
; 2595 :     // Save transfer for interrupt thread
; 2596 :     ASSERT(pPdd->ep[endpoint].pTransfer == NULL);

  078b4	e59d3010	 ldr         r3, [sp, #0x10]
  078b8	e28310ac	 add         r1, r3, #0xAC
  078bc	e59d2060	 ldr         r2, [sp, #0x60]
  078c0	e3a03034	 mov         r3, #0x34
  078c4	e0030392	 mul         r3, r2, r3
  078c8	e0813003	 add         r3, r1, r3
  078cc	e2833020	 add         r3, r3, #0x20
  078d0	e5933000	 ldr         r3, [r3]
  078d4	e3530000	 cmp         r3, #0
  078d8	1a000002	 bne         |$LN21@UfnPdd_Iss|
  078dc	e3a03001	 mov         r3, #1
  078e0	e58d3030	 str         r3, [sp, #0x30]
  078e4	ea000008	 b           |$LN22@UfnPdd_Iss|
  078e8		 |$LN21@UfnPdd_Iss|
  078e8	e3a03c0a	 mov         r3, #0xA, 24
  078ec	e3833024	 orr         r3, r3, #0x24
  078f0	e59f2384	 ldr         r2, [pc, #0x384]
  078f4	e59f1390	 ldr         r1, [pc, #0x390]
  078f8	e59f0374	 ldr         r0, [pc, #0x374]
  078fc	eb000000	 bl          NKDbgPrintfW
  07900	e6000010	 __debugbreak_ce
  07904	e3a03000	 mov         r3, #0
  07908	e58d3030	 str         r3, [sp, #0x30]
  0790c		 |$LN22@UfnPdd_Iss|

; 2597 :     pPdd->ep[endpoint].pTransfer = pTransfer;

  0790c	e59d3010	 ldr         r3, [sp, #0x10]
  07910	e28310ac	 add         r1, r3, #0xAC
  07914	e59d2060	 ldr         r2, [sp, #0x60]
  07918	e3a03034	 mov         r3, #0x34
  0791c	e0030392	 mul         r3, r2, r3
  07920	e0813003	 add         r3, r1, r3
  07924	e2832020	 add         r2, r3, #0x20
  07928	e59d3064	 ldr         r3, [sp, #0x64]
  0792c	e5823000	 str         r3, [r2]

; 2598 :     
; 2599 :     // If transfer buffer is NULL length must be zero
; 2600 :     if (pTransfer->pvBuffer == NULL)

  07930	e59d3064	 ldr         r3, [sp, #0x64]
  07934	e2833004	 add         r3, r3, #4
  07938	e5933000	 ldr         r3, [r3]
  0793c	e3530000	 cmp         r3, #0
  07940	1a000003	 bne         |$LN7@UfnPdd_Iss|

; 2601 :         pTransfer->cbBuffer = 0;

  07944	e59d3064	 ldr         r3, [sp, #0x64]
  07948	e283200c	 add         r2, r3, #0xC
  0794c	e3a03000	 mov         r3, #0
  07950	e5823000	 str         r3, [r2]
  07954		 |$LN7@UfnPdd_Iss|

; 2602 :     
; 2603 :     DEBUGMSG(ZONE_FUNCTION, (TEXT("IssueTransfer: ep(%d), length(%d), (%s) max packet(%d)\r\n"), 
; 2604 :         endpoint, pTransfer->cbBuffer, (TRANSFER_IS_IN(pTransfer)? TEXT("IN"): TEXT("OUT")), pPdd->ep[endpoint].maxPacketSize));

  07954	e59f331c	 ldr         r3, [pc, #0x31C]
  07958	e5933440	 ldr         r3, [r3, #0x440]
  0795c	e3130a01	 tst         r3, #1, 20
  07960	0a00003b	 beq         |$LN29@UfnPdd_Iss|
  07964	e59f330c	 ldr         r3, [pc, #0x30C]
  07968	e5933440	 ldr         r3, [r3, #0x440]
  0796c	e3130801	 tst         r3, #1, 16
  07970	0a00001a	 beq         |$LN27@UfnPdd_Iss|
  07974	e59d3064	 ldr         r3, [sp, #0x64]
  07978	e5933000	 ldr         r3, [r3]
  0797c	e3130080	 tst         r3, #0x80
  07980	0a000002	 beq         |$LN23@UfnPdd_Iss|
  07984	e59f32fc	 ldr         r3, [pc, #0x2FC]
  07988	e58d3034	 str         r3, [sp, #0x34]
  0798c	ea000001	 b           |$LN24@UfnPdd_Iss|
  07990		 |$LN23@UfnPdd_Iss|
  07990	e59f32ec	 ldr         r3, [pc, #0x2EC]
  07994	e58d3034	 str         r3, [sp, #0x34]
  07998		 |$LN24@UfnPdd_Iss|
  07998	e59d3010	 ldr         r3, [sp, #0x10]
  0799c	e28310ac	 add         r1, r3, #0xAC
  079a0	e59d2060	 ldr         r2, [sp, #0x60]
  079a4	e3a03034	 mov         r3, #0x34
  079a8	e0030392	 mul         r3, r2, r3
  079ac	e0813003	 add         r3, r1, r3
  079b0	e1d330b0	 ldrh        r3, [r3]
  079b4	e58d3000	 str         r3, [sp]
  079b8	e59d3034	 ldr         r3, [sp, #0x34]
  079bc	e59d2064	 ldr         r2, [sp, #0x64]
  079c0	e282200c	 add         r2, r2, #0xC
  079c4	e5922000	 ldr         r2, [r2]
  079c8	e59d1060	 ldr         r1, [sp, #0x60]
  079cc	e59f02ac	 ldr         r0, [pc, #0x2AC]
  079d0	eb000000	 bl          CeLogMsg
  079d4	e3a03001	 mov         r3, #1
  079d8	e58d3038	 str         r3, [sp, #0x38]
  079dc	ea000019	 b           |$LN28@UfnPdd_Iss|
  079e0		 |$LN27@UfnPdd_Iss|
  079e0	e59d3064	 ldr         r3, [sp, #0x64]
  079e4	e5933000	 ldr         r3, [r3]
  079e8	e3130080	 tst         r3, #0x80
  079ec	0a000002	 beq         |$LN25@UfnPdd_Iss|
  079f0	e59f3290	 ldr         r3, [pc, #0x290]
  079f4	e58d303c	 str         r3, [sp, #0x3C]
  079f8	ea000001	 b           |$LN26@UfnPdd_Iss|
  079fc		 |$LN25@UfnPdd_Iss|
  079fc	e59f3280	 ldr         r3, [pc, #0x280]
  07a00	e58d303c	 str         r3, [sp, #0x3C]
  07a04		 |$LN26@UfnPdd_Iss|
  07a04	e59d3010	 ldr         r3, [sp, #0x10]
  07a08	e28310ac	 add         r1, r3, #0xAC
  07a0c	e59d2060	 ldr         r2, [sp, #0x60]
  07a10	e3a03034	 mov         r3, #0x34
  07a14	e0030392	 mul         r3, r2, r3
  07a18	e0813003	 add         r3, r1, r3
  07a1c	e1d330b0	 ldrh        r3, [r3]
  07a20	e58d3000	 str         r3, [sp]
  07a24	e59d303c	 ldr         r3, [sp, #0x3C]
  07a28	e59d2064	 ldr         r2, [sp, #0x64]
  07a2c	e282200c	 add         r2, r2, #0xC
  07a30	e5922000	 ldr         r2, [r2]
  07a34	e59d1060	 ldr         r1, [sp, #0x60]
  07a38	e59f0240	 ldr         r0, [pc, #0x240]
  07a3c	eb000000	 bl          NKDbgPrintfW
  07a40	e3a03000	 mov         r3, #0
  07a44	e58d3038	 str         r3, [sp, #0x38]
  07a48		 |$LN28@UfnPdd_Iss|
  07a48	e3a03001	 mov         r3, #1
  07a4c	e58d3040	 str         r3, [sp, #0x40]
  07a50	ea000001	 b           |$LN30@UfnPdd_Iss|
  07a54		 |$LN29@UfnPdd_Iss|
  07a54	e3a03000	 mov         r3, #0
  07a58	e58d3040	 str         r3, [sp, #0x40]
  07a5c		 |$LN30@UfnPdd_Iss|

; 2605 : 
; 2606 :     DEBUGCHK(pTransfer->dwUsbError == UFN_NOT_COMPLETE_ERROR);

  07a5c	e59d3064	 ldr         r3, [sp, #0x64]
  07a60	e2833014	 add         r3, r3, #0x14
  07a64	e5932000	 ldr         r2, [r3]
  07a68	e3a03c01	 mov         r3, #1, 24
  07a6c	e3833003	 orr         r3, r3, #3
  07a70	e1520003	 cmp         r2, r3
  07a74	1a000002	 bne         |$LN31@UfnPdd_Iss|
  07a78	e3a03001	 mov         r3, #1
  07a7c	e58d3044	 str         r3, [sp, #0x44]
  07a80	ea000008	 b           |$LN32@UfnPdd_Iss|
  07a84		 |$LN31@UfnPdd_Iss|
  07a84	e3a03c0a	 mov         r3, #0xA, 24
  07a88	e383302e	 orr         r3, r3, #0x2E
  07a8c	e59f21e8	 ldr         r2, [pc, #0x1E8]
  07a90	e59f11e0	 ldr         r1, [pc, #0x1E0]
  07a94	e59f01d8	 ldr         r0, [pc, #0x1D8]
  07a98	eb000000	 bl          NKDbgPrintfW
  07a9c	e6000010	 __debugbreak_ce
  07aa0	e3a03000	 mov         r3, #0
  07aa4	e58d3044	 str         r3, [sp, #0x44]
  07aa8		 |$LN32@UfnPdd_Iss|

; 2607 :     
; 2608 :     if ((endpoint == 0) &&(pPdd->ep0State == EP0_ST_SETUP_PROCESSED))

  07aa8	e59d3060	 ldr         r3, [sp, #0x60]
  07aac	e3530000	 cmp         r3, #0
  07ab0	1a000015	 bne         |$LN6@UfnPdd_Iss|
  07ab4	e59d3010	 ldr         r3, [sp, #0x10]
  07ab8	e2833ffb	 add         r3, r3, #0xFB, 30
  07abc	e5933000	 ldr         r3, [r3]
  07ac0	e3530001	 cmp         r3, #1
  07ac4	1a000010	 bne         |$LN6@UfnPdd_Iss|

; 2609 :     {
; 2610 :         SETREG16(&pCsrRegs->ep[endpoint].CSR.CSR0, CSR0_P_SERVICEDRXPKTRDY);

  07ac8	e59d1060	 ldr         r1, [sp, #0x60]
  07acc	e3a03010	 mov         r3, #0x10
  07ad0	e0020391	 mul         r2, r1, r3
  07ad4	e59d3004	 ldr         r3, [sp, #4]
  07ad8	e0833002	 add         r3, r3, r2
  07adc	e2833002	 add         r3, r3, #2
  07ae0	e1d330b0	 ldrh        r3, [r3]
  07ae4	e3833040	 orr         r3, r3, #0x40
  07ae8	e1a00803	 mov         r0, r3, lsl #16
  07aec	e1a00820	 mov         r0, r0, lsr #16
  07af0	e59d1060	 ldr         r1, [sp, #0x60]
  07af4	e3a03010	 mov         r3, #0x10
  07af8	e0020391	 mul         r2, r1, r3
  07afc	e59d3004	 ldr         r3, [sp, #4]
  07b00	e0833002	 add         r3, r3, r2
  07b04	e2833002	 add         r3, r3, #2
  07b08	e1c300b0	 strh        r0, [r3]
  07b0c		 |$LN6@UfnPdd_Iss|

; 2611 :     }
; 2612 :     
; 2613 :     // Depending on direction
; 2614 :     if (TRANSFER_IS_IN(pTransfer))

  07b0c	e59d3064	 ldr         r3, [sp, #0x64]
  07b10	e5933000	 ldr         r3, [r3]
  07b14	e3130080	 tst         r3, #0x80
  07b18	0a00002d	 beq         |$LN5@UfnPdd_Iss|

; 2615 :     {
; 2616 : 
; 2617 :        // don't send zeroLength data (see if USB mass storage works)
; 2618 :         if(pPdd->ep[endpoint].bMassStore)

  07b1c	e59d3010	 ldr         r3, [sp, #0x10]
  07b20	e28310ac	 add         r1, r3, #0xAC
  07b24	e59d2060	 ldr         r2, [sp, #0x60]
  07b28	e3a03034	 mov         r3, #0x34
  07b2c	e0030392	 mul         r3, r2, r3
  07b30	e0813003	 add         r3, r1, r3
  07b34	e283300c	 add         r3, r3, #0xC
  07b38	e5933000	 ldr         r3, [r3]
  07b3c	e3530000	 cmp         r3, #0
  07b40	0a000009	 beq         |$LN4@UfnPdd_Iss|

; 2619 :         {
; 2620 :             pPdd->ep[endpoint].zeroLength = FALSE;

  07b44	e59d3010	 ldr         r3, [sp, #0x10]
  07b48	e28310ac	 add         r1, r3, #0xAC
  07b4c	e59d2060	 ldr         r2, [sp, #0x60]
  07b50	e3a03034	 mov         r3, #0x34
  07b54	e0030392	 mul         r3, r2, r3
  07b58	e0813003	 add         r3, r1, r3
  07b5c	e2832008	 add         r2, r3, #8
  07b60	e3a03000	 mov         r3, #0
  07b64	e5823000	 str         r3, [r2]

; 2621 :         }
; 2622 :         else

  07b68	ea000012	 b           |$LN3@UfnPdd_Iss|
  07b6c		 |$LN4@UfnPdd_Iss|

; 2623 :         {
; 2624 :             pPdd->ep[endpoint].zeroLength =(pTransfer->cbBuffer == 0);

  07b6c	e59d3064	 ldr         r3, [sp, #0x64]
  07b70	e283300c	 add         r3, r3, #0xC
  07b74	e5933000	 ldr         r3, [r3]
  07b78	e3530000	 cmp         r3, #0
  07b7c	1a000002	 bne         |$LN33@UfnPdd_Iss|
  07b80	e3a03001	 mov         r3, #1
  07b84	e58d3048	 str         r3, [sp, #0x48]
  07b88	ea000001	 b           |$LN34@UfnPdd_Iss|
  07b8c		 |$LN33@UfnPdd_Iss|
  07b8c	e3a03000	 mov         r3, #0
  07b90	e58d3048	 str         r3, [sp, #0x48]
  07b94		 |$LN34@UfnPdd_Iss|
  07b94	e59d3010	 ldr         r3, [sp, #0x10]
  07b98	e28310ac	 add         r1, r3, #0xAC
  07b9c	e59d2060	 ldr         r2, [sp, #0x60]
  07ba0	e3a03034	 mov         r3, #0x34
  07ba4	e0030392	 mul         r3, r2, r3
  07ba8	e0813003	 add         r3, r1, r3
  07bac	e2832008	 add         r2, r3, #8
  07bb0	e59d3048	 ldr         r3, [sp, #0x48]
  07bb4	e5823000	 str         r3, [r2]
  07bb8		 |$LN3@UfnPdd_Iss|

; 2625 :         }
; 2626 : 
; 2627 :             rc = ContinueTxDmaTransfer(pPdd, endpoint);

  07bb8	e59d1060	 ldr         r1, [sp, #0x60]
  07bbc	e59d0010	 ldr         r0, [sp, #0x10]
  07bc0	eb000000	 bl          ContinueTxDmaTransfer
  07bc4	e58d004c	 str         r0, [sp, #0x4C]
  07bc8	e59d304c	 ldr         r3, [sp, #0x4C]
  07bcc	e58d3008	 str         r3, [sp, #8]

; 2628 :         }
; 2629 :         else

  07bd0	ea00000e	 b           |$LN2@UfnPdd_Iss|
  07bd4		 |$LN5@UfnPdd_Iss|

; 2630 :         {
; 2631 :         pPdd->ep[endpoint].zeroLength = FALSE;

  07bd4	e59d3010	 ldr         r3, [sp, #0x10]
  07bd8	e28310ac	 add         r1, r3, #0xAC
  07bdc	e59d2060	 ldr         r2, [sp, #0x60]
  07be0	e3a03034	 mov         r3, #0x34
  07be4	e0030392	 mul         r3, r2, r3
  07be8	e0813003	 add         r3, r1, r3
  07bec	e2832008	 add         r2, r3, #8
  07bf0	e3a03000	 mov         r3, #0
  07bf4	e5823000	 str         r3, [r2]

; 2632 :             rc = StartRxDmaTransfer(pPdd, endpoint);

  07bf8	e59d1060	 ldr         r1, [sp, #0x60]
  07bfc	e59d0010	 ldr         r0, [sp, #0x10]
  07c00	eb000000	 bl          StartRxDmaTransfer
  07c04	e58d0050	 str         r0, [sp, #0x50]
  07c08	e59d3050	 ldr         r3, [sp, #0x50]
  07c0c	e58d3008	 str         r3, [sp, #8]
  07c10		 |$LN2@UfnPdd_Iss|

; 2633 :         }
; 2634 : 
; 2635 :     EnterCriticalSection(&pPdd->powerStateCS);

  07c10	e59d3010	 ldr         r3, [sp, #0x10]
  07c14	e283008c	 add         r0, r3, #0x8C
  07c18	eb000000	 bl          EnterCriticalSection

; 2636 :     pPdd->dwUSBFNState = USBFN_IDLE;

  07c1c	e59d3010	 ldr         r3, [sp, #0x10]
  07c20	e28320a8	 add         r2, r3, #0xA8
  07c24	e3a03000	 mov         r3, #0
  07c28	e5823000	 str         r3, [r2]

; 2637 :     if(pPdd->fPowerDown == TRUE)

  07c2c	e59d3010	 ldr         r3, [sp, #0x10]
  07c30	e28330a4	 add         r3, r3, #0xA4
  07c34	e5933000	 ldr         r3, [r3]
  07c38	e3530001	 cmp         r3, #1
  07c3c	1a000003	 bne         |$LN1@UfnPdd_Iss|

; 2638 :     {
; 2639 :         SetEvent(pPdd->hPowerDownEvent);

  07c40	e59d3010	 ldr         r3, [sp, #0x10]
  07c44	e28330a0	 add         r3, r3, #0xA0
  07c48	e5930000	 ldr         r0, [r3]
  07c4c	eb000000	 bl          SetEvent
  07c50		 |$LN1@UfnPdd_Iss|

; 2640 :     }
; 2641 :     LeaveCriticalSection(&pPdd->powerStateCS);

  07c50	e59d3010	 ldr         r3, [sp, #0x10]
  07c54	e283008c	 add         r0, r3, #0x8C
  07c58	eb000000	 bl          LeaveCriticalSection

; 2642 :     
; 2643 :     return rc;

  07c5c	e59d3008	 ldr         r3, [sp, #8]
  07c60	e58d3014	 str         r3, [sp, #0x14]
  07c64		 |$LN11@UfnPdd_Iss|

; 2644 :     
; 2645 :     //    return ERROR_SUCCESS;
; 2646 : }

  07c64	e59d0014	 ldr         r0, [sp, #0x14]
  07c68	e28dd054	 add         sp, sp, #0x54
  07c6c	e89d6000	 ldmia       sp, {sp, lr}
  07c70	e12fff1e	 bx          lr
  07c74		 |$LN38@UfnPdd_Iss|
  07c74		 |$LN39@UfnPdd_Iss|
  07c74	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  07c78		 |$LN40@UfnPdd_Iss|
  07c78	00000000	 DCD         |dpCurSettings|
  07c7c		 |$LN41@UfnPdd_Iss|
  07c7c	00000000	 DCD         |??_C@_1JM@NKOACJGE@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  07c80		 |$LN42@UfnPdd_Iss|
  07c80	00000000	 DCD         |??_C@_1HC@JJAOOHKM@?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAe?$AAp?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?0?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CF?$AAd@|
  07c84		 |$LN43@UfnPdd_Iss|
  07c84	00000000	 DCD         |??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@|
  07c88		 |$LN44@UfnPdd_Iss|
  07c88	00000000	 DCD         |??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@|
  07c8c		 |$LN45@UfnPdd_Iss|
  07c8c	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  07c90		 |$LN46@UfnPdd_Iss|
  07c90	00000000	 DCD         |??_C@_1GC@NGNENNDF@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAT?$AAr@|
  07c94		 |$LN47@UfnPdd_Iss|
  07c94	00000000	 DCD         |??_C@_1CO@NKKIADAK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  07c98		 |$M50634|

			 ENDP  ; |UfnPdd_IssueTransfer|

	EXPORT	|??_C@_1EC@JLHOICLC@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAA?$AAb?$AAo?$AAr?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_AbortTransfer|

  00128			 AREA	 |.pdata|, PDATA
|$T50656| DCD	|$LN21@UfnPdd_Abo|
	DCD	0x4000f604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@JLHOICLC@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAA?$AAb?$AAo?$AAr?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "A", 0x0, "b", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  07c98			 AREA	 |.text|, CODE, ARM

  07c98		 |UfnPdd_AbortTransfer| PROC

; 2672 : {

  07c98		 |$LN21@UfnPdd_Abo|
  07c98	e1a0c00d	 mov         r12, sp
  07c9c	e92d0007	 stmdb       sp!, {r0 - r2}
  07ca0	e92d5000	 stmdb       sp!, {r12, lr}
  07ca4	e24dd020	 sub         sp, sp, #0x20
  07ca8		 |$M50653|

; 2673 :     MUsbFnPdd_t *pPdd = pPddContext;

  07ca8	e59d3028	 ldr         r3, [sp, #0x28]
  07cac	e58d3008	 str         r3, [sp, #8]

; 2674 :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUSBContext->pUsbCsrRegs;

  07cb0	e59d3008	 ldr         r3, [sp, #8]
  07cb4	e2833020	 add         r3, r3, #0x20
  07cb8	e5933000	 ldr         r3, [r3]
  07cbc	e283301c	 add         r3, r3, #0x1C
  07cc0	e5933000	 ldr         r3, [r3]
  07cc4	e58d3000	 str         r3, [sp]

; 2675 :     PHSMUSB_T pOTG = pPdd->pUSBContext;

  07cc8	e59d3008	 ldr         r3, [sp, #8]
  07ccc	e2833020	 add         r3, r3, #0x20
  07cd0	e5933000	 ldr         r3, [r3]
  07cd4	e58d3004	 str         r3, [sp, #4]

; 2676 : 
; 2677 :     EnterCriticalSection(&pOTG->regCS);

  07cd8	e59d3004	 ldr         r3, [sp, #4]
  07cdc	e2830038	 add         r0, r3, #0x38
  07ce0	eb000000	 bl          EnterCriticalSection

; 2678 :     if(pOTG->bClockStatus)

  07ce4	e59d3004	 ldr         r3, [sp, #4]
  07ce8	e2833060	 add         r3, r3, #0x60
  07cec	e5933000	 ldr         r3, [r3]
  07cf0	e3530000	 cmp         r3, #0
  07cf4	0a00006a	 beq         |$LN12@UfnPdd_Abo|

; 2679 :     {
; 2680 :     if (endpoint == 0)

  07cf8	e59d302c	 ldr         r3, [sp, #0x2C]
  07cfc	e3530000	 cmp         r3, #0
  07d00	1a000011	 bne         |$LN11@UfnPdd_Abo|

; 2681 :     {
; 2682 :         SETREG16(&pCsrRegs->ep[endpoint].CSR.CSR0, CSR0_P_FLUSHFIFO);

  07d04	e59d102c	 ldr         r1, [sp, #0x2C]
  07d08	e3a03010	 mov         r3, #0x10
  07d0c	e0020391	 mul         r2, r1, r3
  07d10	e59d3000	 ldr         r3, [sp]
  07d14	e0833002	 add         r3, r3, r2
  07d18	e2833002	 add         r3, r3, #2
  07d1c	e1d330b0	 ldrh        r3, [r3]
  07d20	e3833c01	 orr         r3, r3, #1, 24
  07d24	e1a00803	 mov         r0, r3, lsl #16
  07d28	e1a00820	 mov         r0, r0, lsr #16
  07d2c	e59d102c	 ldr         r1, [sp, #0x2C]
  07d30	e3a03010	 mov         r3, #0x10
  07d34	e0020391	 mul         r2, r1, r3
  07d38	e59d3000	 ldr         r3, [sp]
  07d3c	e0833002	 add         r3, r3, r2
  07d40	e2833002	 add         r3, r3, #2
  07d44	e1c300b0	 strh        r0, [r3]

; 2683 :     }
; 2684 :     else

  07d48	ea00002e	 b           |$LN10@UfnPdd_Abo|
  07d4c		 |$LN11@UfnPdd_Abo|

; 2685 :     {
; 2686 :         MUsbFnEp_t *pEP = &pPdd->ep[endpoint];

  07d4c	e59d3008	 ldr         r3, [sp, #8]
  07d50	e28310ac	 add         r1, r3, #0xAC
  07d54	e59d202c	 ldr         r2, [sp, #0x2C]
  07d58	e3a03034	 mov         r3, #0x34
  07d5c	e0030392	 mul         r3, r2, r3
  07d60	e0813003	 add         r3, r1, r3
  07d64	e58d300c	 str         r3, [sp, #0xC]

; 2687 : 
; 2688 :         if (pEP->dirRx)

  07d68	e59d300c	 ldr         r3, [sp, #0xC]
  07d6c	e2833004	 add         r3, r3, #4
  07d70	e5933000	 ldr         r3, [r3]
  07d74	e3530000	 cmp         r3, #0
  07d78	0a000011	 beq         |$LN9@UfnPdd_Abo|

; 2689 :             SETREG16(&pCsrRegs->ep[endpoint].RxCSR, RXCSR_P_FLUSHFIFO);

  07d7c	e59d102c	 ldr         r1, [sp, #0x2C]
  07d80	e3a03010	 mov         r3, #0x10
  07d84	e0020391	 mul         r2, r1, r3
  07d88	e59d3000	 ldr         r3, [sp]
  07d8c	e0833002	 add         r3, r3, r2
  07d90	e2833006	 add         r3, r3, #6
  07d94	e1d330b0	 ldrh        r3, [r3]
  07d98	e3833010	 orr         r3, r3, #0x10
  07d9c	e1a00803	 mov         r0, r3, lsl #16
  07da0	e1a00820	 mov         r0, r0, lsr #16
  07da4	e59d102c	 ldr         r1, [sp, #0x2C]
  07da8	e3a03010	 mov         r3, #0x10
  07dac	e0020391	 mul         r2, r1, r3
  07db0	e59d3000	 ldr         r3, [sp]
  07db4	e0833002	 add         r3, r3, r2
  07db8	e2833006	 add         r3, r3, #6
  07dbc	e1c300b0	 strh        r0, [r3]

; 2690 :         else

  07dc0	ea000010	 b           |$LN8@UfnPdd_Abo|
  07dc4		 |$LN9@UfnPdd_Abo|

; 2691 :             SETREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_FLUSHFIFO);

  07dc4	e59d102c	 ldr         r1, [sp, #0x2C]
  07dc8	e3a03010	 mov         r3, #0x10
  07dcc	e0020391	 mul         r2, r1, r3
  07dd0	e59d3000	 ldr         r3, [sp]
  07dd4	e0833002	 add         r3, r3, r2
  07dd8	e2833002	 add         r3, r3, #2
  07ddc	e1d330b0	 ldrh        r3, [r3]
  07de0	e3833008	 orr         r3, r3, #8
  07de4	e1a00803	 mov         r0, r3, lsl #16
  07de8	e1a00820	 mov         r0, r0, lsr #16
  07dec	e59d102c	 ldr         r1, [sp, #0x2C]
  07df0	e3a03010	 mov         r3, #0x10
  07df4	e0020391	 mul         r2, r1, r3
  07df8	e59d3000	 ldr         r3, [sp]
  07dfc	e0833002	 add         r3, r3, r2
  07e00	e2833002	 add         r3, r3, #2
  07e04	e1c300b0	 strh        r0, [r3]
  07e08		 |$LN8@UfnPdd_Abo|
  07e08		 |$LN10@UfnPdd_Abo|

; 2692 :     }
; 2693 : 
; 2694 :     if ((pPdd->rx0DmaEp == endpoint) && (pPdd->ep[endpoint].dmaEnabled))

  07e08	e59d3008	 ldr         r3, [sp, #8]
  07e0c	e283300c	 add         r3, r3, #0xC
  07e10	e5932000	 ldr         r2, [r3]
  07e14	e59d302c	 ldr         r3, [sp, #0x2C]
  07e18	e1520003	 cmp         r2, r3
  07e1c	1a00000d	 bne         |$LN7@UfnPdd_Abo|
  07e20	e59d3008	 ldr         r3, [sp, #8]
  07e24	e28310ac	 add         r1, r3, #0xAC
  07e28	e59d202c	 ldr         r2, [sp, #0x2C]
  07e2c	e3a03034	 mov         r3, #0x34
  07e30	e0030392	 mul         r3, r2, r3
  07e34	e0813003	 add         r3, r1, r3
  07e38	e2833010	 add         r3, r3, #0x10
  07e3c	e5933000	 ldr         r3, [r3]
  07e40	e3530000	 cmp         r3, #0
  07e44	0a000003	 beq         |$LN7@UfnPdd_Abo|

; 2695 :         ResetDMAChannel(pPdd, MUSB_RX_DMA_CHN);

  07e48	e3a01001	 mov         r1, #1
  07e4c	e59d0008	 ldr         r0, [sp, #8]
  07e50	eb000000	 bl          ResetDMAChannel
  07e54	ea000012	 b           |$LN6@UfnPdd_Abo|
  07e58		 |$LN7@UfnPdd_Abo|

; 2696 :     else if ((pPdd->tx0DmaEp == endpoint) && (pPdd->ep[endpoint].dmaEnabled))

  07e58	e59d3008	 ldr         r3, [sp, #8]
  07e5c	e2833010	 add         r3, r3, #0x10
  07e60	e5932000	 ldr         r2, [r3]
  07e64	e59d302c	 ldr         r3, [sp, #0x2C]
  07e68	e1520003	 cmp         r2, r3
  07e6c	1a00000c	 bne         |$LN5@UfnPdd_Abo|
  07e70	e59d3008	 ldr         r3, [sp, #8]
  07e74	e28310ac	 add         r1, r3, #0xAC
  07e78	e59d202c	 ldr         r2, [sp, #0x2C]
  07e7c	e3a03034	 mov         r3, #0x34
  07e80	e0030392	 mul         r3, r2, r3
  07e84	e0813003	 add         r3, r1, r3
  07e88	e2833010	 add         r3, r3, #0x10
  07e8c	e5933000	 ldr         r3, [r3]
  07e90	e3530000	 cmp         r3, #0
  07e94	0a000002	 beq         |$LN5@UfnPdd_Abo|

; 2697 :         ResetDMAChannel(pPdd, MUSB_TX_DMA_CHN);

  07e98	e3a01000	 mov         r1, #0
  07e9c	e59d0008	 ldr         r0, [sp, #8]
  07ea0	eb000000	 bl          ResetDMAChannel
  07ea4		 |$LN5@UfnPdd_Abo|
  07ea4		 |$LN6@UfnPdd_Abo|
  07ea4		 |$LN12@UfnPdd_Abo|

; 2698 :     }
; 2699 :     LeaveCriticalSection(&pOTG->regCS);

  07ea4	e59d3004	 ldr         r3, [sp, #4]
  07ea8	e2830038	 add         r0, r3, #0x38
  07eac	eb000000	 bl          LeaveCriticalSection

; 2700 : 
; 2701 :     EnterCriticalSection(&pPdd->csDVFS);

  07eb0	e59d3008	 ldr         r3, [sp, #8]
  07eb4	e2833b01	 add         r3, r3, #1, 22
  07eb8	e2830014	 add         r0, r3, #0x14
  07ebc	eb000000	 bl          EnterCriticalSection

; 2702 :     if ((pPdd->ep[endpoint].dmaDVFSstate == DVFS_PREDMA) && pPdd->ep[endpoint].dmaEnabled)

  07ec0	e59d3008	 ldr         r3, [sp, #8]
  07ec4	e28310ac	 add         r1, r3, #0xAC
  07ec8	e59d202c	 ldr         r2, [sp, #0x2C]
  07ecc	e3a03034	 mov         r3, #0x34
  07ed0	e0030392	 mul         r3, r2, r3
  07ed4	e0813003	 add         r3, r1, r3
  07ed8	e283302c	 add         r3, r3, #0x2C
  07edc	e5d33000	 ldrb        r3, [r3]
  07ee0	e3530001	 cmp         r3, #1
  07ee4	1a000022	 bne         |$LN4@UfnPdd_Abo|
  07ee8	e59d3008	 ldr         r3, [sp, #8]
  07eec	e28310ac	 add         r1, r3, #0xAC
  07ef0	e59d202c	 ldr         r2, [sp, #0x2C]
  07ef4	e3a03034	 mov         r3, #0x34
  07ef8	e0030392	 mul         r3, r2, r3
  07efc	e0813003	 add         r3, r1, r3
  07f00	e2833010	 add         r3, r3, #0x10
  07f04	e5933000	 ldr         r3, [r3]
  07f08	e3530000	 cmp         r3, #0
  07f0c	0a000018	 beq         |$LN4@UfnPdd_Abo|

; 2703 :     {
; 2704 :         MUsbFnEp_t *pEP = &pPdd->ep[endpoint];

  07f10	e59d3008	 ldr         r3, [sp, #8]
  07f14	e28310ac	 add         r1, r3, #0xAC
  07f18	e59d202c	 ldr         r2, [sp, #0x2C]
  07f1c	e3a03034	 mov         r3, #0x34
  07f20	e0030392	 mul         r3, r2, r3
  07f24	e0813003	 add         r3, r1, r3
  07f28	e58d3010	 str         r3, [sp, #0x10]

; 2705 :         pEP->dmaDVFSstate = DVFS_POSTDMA;

  07f2c	e59d3010	 ldr         r3, [sp, #0x10]
  07f30	e283202c	 add         r2, r3, #0x2C
  07f34	e3a03002	 mov         r3, #2
  07f38	e5c23000	 strb        r3, [r2]

; 2706 :         if (pEP->dirRx)

  07f3c	e59d3010	 ldr         r3, [sp, #0x10]
  07f40	e2833004	 add         r3, r3, #4
  07f44	e5933000	 ldr         r3, [r3]
  07f48	e3530000	 cmp         r3, #0
  07f4c	0a000004	 beq         |$LN3@UfnPdd_Abo|

; 2707 :             PostDmaDeactivation(pPdd, endpoint, RX_TRANSFER);

  07f50	e3a02001	 mov         r2, #1
  07f54	e59d102c	 ldr         r1, [sp, #0x2C]
  07f58	e59d0008	 ldr         r0, [sp, #8]
  07f5c	eb000000	 bl          PostDmaDeactivation

; 2708 :         else

  07f60	ea000003	 b           |$LN2@UfnPdd_Abo|
  07f64		 |$LN3@UfnPdd_Abo|

; 2709 :             PostDmaDeactivation(pPdd, endpoint, TX_TRANSFER);

  07f64	e3a02000	 mov         r2, #0
  07f68	e59d102c	 ldr         r1, [sp, #0x2C]
  07f6c	e59d0008	 ldr         r0, [sp, #8]
  07f70	eb000000	 bl          PostDmaDeactivation
  07f74		 |$LN2@UfnPdd_Abo|
  07f74		 |$LN4@UfnPdd_Abo|

; 2710 :     }
; 2711 :     LeaveCriticalSection(&pPdd->csDVFS);

  07f74	e59d3008	 ldr         r3, [sp, #8]
  07f78	e2833b01	 add         r3, r3, #1, 22
  07f7c	e2830014	 add         r0, r3, #0x14
  07f80	eb000000	 bl          LeaveCriticalSection

; 2712 : 
; 2713 :     // Finish transfer
; 2714 :     pPdd->ep[endpoint].pTransfer = NULL;

  07f84	e59d3008	 ldr         r3, [sp, #8]
  07f88	e28310ac	 add         r1, r3, #0xAC
  07f8c	e59d202c	 ldr         r2, [sp, #0x2C]
  07f90	e3a03034	 mov         r3, #0x34
  07f94	e0030392	 mul         r3, r2, r3
  07f98	e0813003	 add         r3, r1, r3
  07f9c	e2832020	 add         r2, r3, #0x20
  07fa0	e3a03000	 mov         r3, #0
  07fa4	e5823000	 str         r3, [r2]

; 2715 :     if (pTransfer != NULL)

  07fa8	e59d3030	 ldr         r3, [sp, #0x30]
  07fac	e3530000	 cmp         r3, #0
  07fb0	0a000026	 beq         |$LN1@UfnPdd_Abo|

; 2716 :     {
; 2717 :         pTransfer->dwUsbError = UFN_CANCELED_ERROR;

  07fb4	e59d3030	 ldr         r3, [sp, #0x30]
  07fb8	e2832014	 add         r2, r3, #0x14
  07fbc	e3a03c01	 mov         r3, #1, 24
  07fc0	e3833001	 orr         r3, r3, #1
  07fc4	e5823000	 str         r3, [r2]

; 2718 :         DEBUGMSG(ZONE_INFO, (TEXT("UfnPdd_AbortTransfer for EP %d\r\n"), endpoint));

  07fc8	e59f309c	 ldr         r3, [pc, #0x9C]
  07fcc	e5933440	 ldr         r3, [r3, #0x440]
  07fd0	e3130b01	 tst         r3, #1, 22
  07fd4	0a000011	 beq         |$LN17@UfnPdd_Abo|
  07fd8	e59f308c	 ldr         r3, [pc, #0x8C]
  07fdc	e5933440	 ldr         r3, [r3, #0x440]
  07fe0	e3130801	 tst         r3, #1, 16
  07fe4	0a000005	 beq         |$LN15@UfnPdd_Abo|
  07fe8	e59d102c	 ldr         r1, [sp, #0x2C]
  07fec	e59f0074	 ldr         r0, [pc, #0x74]
  07ff0	eb000000	 bl          CeLogMsg
  07ff4	e3a03001	 mov         r3, #1
  07ff8	e58d3018	 str         r3, [sp, #0x18]
  07ffc	ea000004	 b           |$LN16@UfnPdd_Abo|
  08000		 |$LN15@UfnPdd_Abo|
  08000	e59d102c	 ldr         r1, [sp, #0x2C]
  08004	e59f005c	 ldr         r0, [pc, #0x5C]
  08008	eb000000	 bl          NKDbgPrintfW
  0800c	e3a03000	 mov         r3, #0
  08010	e58d3018	 str         r3, [sp, #0x18]
  08014		 |$LN16@UfnPdd_Abo|
  08014	e3a03001	 mov         r3, #1
  08018	e58d301c	 str         r3, [sp, #0x1C]
  0801c	ea000001	 b           |$LN18@UfnPdd_Abo|
  08020		 |$LN17@UfnPdd_Abo|
  08020	e3a03000	 mov         r3, #0
  08024	e58d301c	 str         r3, [sp, #0x1C]
  08028		 |$LN18@UfnPdd_Abo|

; 2719 :         pPdd->pfnNotify(
; 2720 :            pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer
; 2721 :            );

  08028	e59d2030	 ldr         r2, [sp, #0x30]
  0802c	e3a01064	 mov         r1, #0x64
  08030	e59d3008	 ldr         r3, [sp, #8]
  08034	e2833024	 add         r3, r3, #0x24
  08038	e5930000	 ldr         r0, [r3]
  0803c	e59d3008	 ldr         r3, [sp, #8]
  08040	e2833028	 add         r3, r3, #0x28
  08044	e5933000	 ldr         r3, [r3]
  08048	e1a0e00f	 mov         lr, pc
  0804c	e12fff13	 bx          r3
  08050		 |$LN1@UfnPdd_Abo|

; 2722 :     }
; 2723 :     
; 2724 :     
; 2725 :     // Done
; 2726 :     return ERROR_SUCCESS;

  08050	e3a03000	 mov         r3, #0
  08054	e58d3014	 str         r3, [sp, #0x14]

; 2727 : }

  08058	e59d0014	 ldr         r0, [sp, #0x14]
  0805c	e28dd020	 add         sp, sp, #0x20
  08060	e89d6000	 ldmia       sp, {sp, lr}
  08064	e12fff1e	 bx          lr
  08068		 |$LN22@UfnPdd_Abo|
  08068		 |$LN23@UfnPdd_Abo|
  08068	00000000	 DCD         |??_C@_1EC@JLHOICLC@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAA?$AAb?$AAo?$AAr?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@|
  0806c		 |$LN24@UfnPdd_Abo|
  0806c	00000000	 DCD         |dpCurSettings|
  08070		 |$M50654|

			 ENDP  ; |UfnPdd_AbortTransfer|

	EXPORT	|??_C@_1FA@BPODLGGP@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAl?$AAl?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@FFFEIOGH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAl?$AAl?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_StallEndpoint|

  00130			 AREA	 |.pdata|, PDATA
|$T50673| DCD	|$LN17@UfnPdd_Sta|
	DCD	0x40008b04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@BPODLGGP@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAl?$AAl?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi@| DCB "*"
	DCB	0x0, "*", 0x0, "*", 0x0, " ", 0x0, "U", 0x0, "f", 0x0, "n"
	DCB	0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "E", 0x0, "n", 0x0, "d"
	DCB	0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, " ", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o"
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@FFFEIOGH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAl?$AAl?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "E"
	DCB	0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  08070			 AREA	 |.text|, CODE, ARM

  08070		 |UfnPdd_StallEndpoint| PROC

; 2751 : {

  08070		 |$LN17@UfnPdd_Sta|
  08070	e1a0c00d	 mov         r12, sp
  08074	e92d0003	 stmdb       sp!, {r0, r1}
  08078	e92d5000	 stmdb       sp!, {r12, lr}
  0807c	e24dd020	 sub         sp, sp, #0x20
  08080		 |$M50670|

; 2752 :     MUsbFnPdd_t *pPdd = pPddContext;

  08080	e59d3028	 ldr         r3, [sp, #0x28]
  08084	e58d3008	 str         r3, [sp, #8]

; 2753 :     MUsbFnEp_t *pEP = &pPdd->ep[endpoint];

  08088	e59d3008	 ldr         r3, [sp, #8]
  0808c	e28310ac	 add         r1, r3, #0xAC
  08090	e59d202c	 ldr         r2, [sp, #0x2C]
  08094	e3a03034	 mov         r3, #0x34
  08098	e0030392	 mul         r3, r2, r3
  0809c	e0813003	 add         r3, r1, r3
  080a0	e58d3004	 str         r3, [sp, #4]

; 2754 :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUSBContext->pUsbCsrRegs;

  080a4	e59d3008	 ldr         r3, [sp, #8]
  080a8	e2833020	 add         r3, r3, #0x20
  080ac	e5933000	 ldr         r3, [r3]
  080b0	e283301c	 add         r3, r3, #0x1C
  080b4	e5933000	 ldr         r3, [r3]
  080b8	e58d3000	 str         r3, [sp]

; 2755 :     
; 2756 :     DEBUGMSG(ZONE_FUNCTION, (L"UfnPdd_StallEndpoint\r\n"));

  080bc	e59f31d0	 ldr         r3, [pc, #0x1D0]
  080c0	e5933440	 ldr         r3, [r3, #0x440]
  080c4	e3130a01	 tst         r3, #1, 20
  080c8	0a00000f	 beq         |$LN9@UfnPdd_Sta|
  080cc	e59f31c0	 ldr         r3, [pc, #0x1C0]
  080d0	e5933440	 ldr         r3, [r3, #0x440]
  080d4	e3130801	 tst         r3, #1, 16
  080d8	0a000004	 beq         |$LN7@UfnPdd_Sta|
  080dc	e59f01b4	 ldr         r0, [pc, #0x1B4]
  080e0	eb000000	 bl          CeLogMsg
  080e4	e3a03001	 mov         r3, #1
  080e8	e58d3010	 str         r3, [sp, #0x10]
  080ec	ea000003	 b           |$LN8@UfnPdd_Sta|
  080f0		 |$LN7@UfnPdd_Sta|
  080f0	e59f01a0	 ldr         r0, [pc, #0x1A0]
  080f4	eb000000	 bl          NKDbgPrintfW
  080f8	e3a03000	 mov         r3, #0
  080fc	e58d3010	 str         r3, [sp, #0x10]
  08100		 |$LN8@UfnPdd_Sta|
  08100	e3a03001	 mov         r3, #1
  08104	e58d3014	 str         r3, [sp, #0x14]
  08108	ea000001	 b           |$LN10@UfnPdd_Sta|
  0810c		 |$LN9@UfnPdd_Sta|
  0810c	e3a03000	 mov         r3, #0
  08110	e58d3014	 str         r3, [sp, #0x14]
  08114		 |$LN10@UfnPdd_Sta|

; 2757 : 
; 2758 :     DEBUGMSG(ZONE_INFO, (L"*** UfnPdd_StallEndpoint  endpoint %d\r\n",endpoint));

  08114	e59f3178	 ldr         r3, [pc, #0x178]
  08118	e5933440	 ldr         r3, [r3, #0x440]
  0811c	e3130b01	 tst         r3, #1, 22
  08120	0a000011	 beq         |$LN13@UfnPdd_Sta|
  08124	e59f3168	 ldr         r3, [pc, #0x168]
  08128	e5933440	 ldr         r3, [r3, #0x440]
  0812c	e3130801	 tst         r3, #1, 16
  08130	0a000005	 beq         |$LN11@UfnPdd_Sta|
  08134	e59d102c	 ldr         r1, [sp, #0x2C]
  08138	e59f0150	 ldr         r0, [pc, #0x150]
  0813c	eb000000	 bl          CeLogMsg
  08140	e3a03001	 mov         r3, #1
  08144	e58d3018	 str         r3, [sp, #0x18]
  08148	ea000004	 b           |$LN12@UfnPdd_Sta|
  0814c		 |$LN11@UfnPdd_Sta|
  0814c	e59d102c	 ldr         r1, [sp, #0x2C]
  08150	e59f0138	 ldr         r0, [pc, #0x138]
  08154	eb000000	 bl          NKDbgPrintfW
  08158	e3a03000	 mov         r3, #0
  0815c	e58d3018	 str         r3, [sp, #0x18]
  08160		 |$LN12@UfnPdd_Sta|
  08160	e3a03001	 mov         r3, #1
  08164	e58d301c	 str         r3, [sp, #0x1C]
  08168	ea000001	 b           |$LN14@UfnPdd_Sta|
  0816c		 |$LN13@UfnPdd_Sta|
  0816c	e3a03000	 mov         r3, #0
  08170	e58d301c	 str         r3, [sp, #0x1C]
  08174		 |$LN14@UfnPdd_Sta|

; 2759 :     
; 2760 :     if (endpoint == 0)

  08174	e59d302c	 ldr         r3, [sp, #0x2C]
  08178	e3530000	 cmp         r3, #0
  0817c	1a000011	 bne         |$LN4@UfnPdd_Sta|

; 2761 :     {
; 2762 :         // Stall next EP0 transaction
; 2763 :         SETREG16(&pCsrRegs->ep[endpoint].CSR.CSR0, CSR0_P_SENDSTALL);

  08180	e59d102c	 ldr         r1, [sp, #0x2C]
  08184	e3a03010	 mov         r3, #0x10
  08188	e0020391	 mul         r2, r1, r3
  0818c	e59d3000	 ldr         r3, [sp]
  08190	e0833002	 add         r3, r3, r2
  08194	e2833002	 add         r3, r3, #2
  08198	e1d330b0	 ldrh        r3, [r3]
  0819c	e3833020	 orr         r3, r3, #0x20
  081a0	e1a00803	 mov         r0, r3, lsl #16
  081a4	e1a00820	 mov         r0, r0, lsr #16
  081a8	e59d102c	 ldr         r1, [sp, #0x2C]
  081ac	e3a03010	 mov         r3, #0x10
  081b0	e0020391	 mul         r2, r1, r3
  081b4	e59d3000	 ldr         r3, [sp]
  081b8	e0833002	 add         r3, r3, r2
  081bc	e2833002	 add         r3, r3, #2
  081c0	e1c300b0	 strh        r0, [r3]

; 2764 :     }
; 2765 :     else

  081c4	ea000027	 b           |$LN3@UfnPdd_Sta|
  081c8		 |$LN4@UfnPdd_Sta|

; 2766 :     {
; 2767 :         
; 2768 :         // stall end point
; 2769 :         if (pEP->dirRx)

  081c8	e59d3004	 ldr         r3, [sp, #4]
  081cc	e2833004	 add         r3, r3, #4
  081d0	e5933000	 ldr         r3, [r3]
  081d4	e3530000	 cmp         r3, #0
  081d8	0a000011	 beq         |$LN2@UfnPdd_Sta|

; 2770 :             SETREG16(&pCsrRegs->ep[endpoint].RxCSR, RXCSR_P_SENDSTALL);        

  081dc	e59d102c	 ldr         r1, [sp, #0x2C]
  081e0	e3a03010	 mov         r3, #0x10
  081e4	e0020391	 mul         r2, r1, r3
  081e8	e59d3000	 ldr         r3, [sp]
  081ec	e0833002	 add         r3, r3, r2
  081f0	e2833006	 add         r3, r3, #6
  081f4	e1d330b0	 ldrh        r3, [r3]
  081f8	e3833020	 orr         r3, r3, #0x20
  081fc	e1a00803	 mov         r0, r3, lsl #16
  08200	e1a00820	 mov         r0, r0, lsr #16
  08204	e59d102c	 ldr         r1, [sp, #0x2C]
  08208	e3a03010	 mov         r3, #0x10
  0820c	e0020391	 mul         r2, r1, r3
  08210	e59d3000	 ldr         r3, [sp]
  08214	e0833002	 add         r3, r3, r2
  08218	e2833006	 add         r3, r3, #6
  0821c	e1c300b0	 strh        r0, [r3]

; 2771 :         else

  08220	ea000010	 b           |$LN1@UfnPdd_Sta|
  08224		 |$LN2@UfnPdd_Sta|

; 2772 :             SETREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_SENDSTALL);        

  08224	e59d102c	 ldr         r1, [sp, #0x2C]
  08228	e3a03010	 mov         r3, #0x10
  0822c	e0020391	 mul         r2, r1, r3
  08230	e59d3000	 ldr         r3, [sp]
  08234	e0833002	 add         r3, r3, r2
  08238	e2833002	 add         r3, r3, #2
  0823c	e1d330b0	 ldrh        r3, [r3]
  08240	e3833010	 orr         r3, r3, #0x10
  08244	e1a00803	 mov         r0, r3, lsl #16
  08248	e1a00820	 mov         r0, r0, lsr #16
  0824c	e59d102c	 ldr         r1, [sp, #0x2C]
  08250	e3a03010	 mov         r3, #0x10
  08254	e0020391	 mul         r2, r1, r3
  08258	e59d3000	 ldr         r3, [sp]
  0825c	e0833002	 add         r3, r3, r2
  08260	e2833002	 add         r3, r3, #2
  08264	e1c300b0	 strh        r0, [r3]
  08268		 |$LN1@UfnPdd_Sta|
  08268		 |$LN3@UfnPdd_Sta|

; 2773 :         
; 2774 :     }
; 2775 :     pEP->stalled = TRUE;

  08268	e59d3004	 ldr         r3, [sp, #4]
  0826c	e2832014	 add         r2, r3, #0x14
  08270	e3a03001	 mov         r3, #1
  08274	e5823000	 str         r3, [r2]

; 2776 :     
; 2777 :     // Done
; 2778 :     return ERROR_SUCCESS;

  08278	e3a03000	 mov         r3, #0
  0827c	e58d300c	 str         r3, [sp, #0xC]

; 2779 : }

  08280	e59d000c	 ldr         r0, [sp, #0xC]
  08284	e28dd020	 add         sp, sp, #0x20
  08288	e89d6000	 ldmia       sp, {sp, lr}
  0828c	e12fff1e	 bx          lr
  08290		 |$LN18@UfnPdd_Sta|
  08290		 |$LN19@UfnPdd_Sta|
  08290	00000000	 DCD         |??_C@_1FA@BPODLGGP@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAl?$AAl?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi@|
  08294		 |$LN20@UfnPdd_Sta|
  08294	00000000	 DCD         |dpCurSettings|
  08298		 |$LN21@UfnPdd_Sta|
  08298	00000000	 DCD         |??_C@_1CO@FFFEIOGH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAl?$AAl?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  0829c		 |$M50671|

			 ENDP  ; |UfnPdd_StallEndpoint|

	EXPORT	|??_C@_1EM@DEDHGOEH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAl?$AAe?$AAa?$AAr?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAS?$AAt?$AAa?$AAl?$AAl?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAE?$AAP@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_ClearEndpointStall|

  00138			 AREA	 |.pdata|, PDATA
|$T50687| DCD	|$LN15@UfnPdd_Cle|
	DCD	0x40009204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@DEDHGOEH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAl?$AAe?$AAa?$AAr?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAS?$AAt?$AAa?$AAl?$AAl?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAE?$AAP@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "C", 0x0, "l", 0x0, "e", 0x0, "a", 0x0, "r", 0x0, "E"
	DCB	0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "l", 0x0, "l"
	DCB	0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "E"
	DCB	0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  0829c			 AREA	 |.text|, CODE, ARM

  0829c		 |UfnPdd_ClearEndpointStall| PROC

; 2803 : {

  0829c		 |$LN15@UfnPdd_Cle|
  0829c	e1a0c00d	 mov         r12, sp
  082a0	e92d0003	 stmdb       sp!, {r0, r1}
  082a4	e92d5000	 stmdb       sp!, {r12, lr}
  082a8	e24dd01c	 sub         sp, sp, #0x1C
  082ac		 |$M50684|

; 2804 :     MUsbFnPdd_t *pPdd = pPddContext;

  082ac	e59d3024	 ldr         r3, [sp, #0x24]
  082b0	e58d300c	 str         r3, [sp, #0xC]

; 2805 :     MUsbFnEp_t *pEP = &pPdd->ep[endpoint];

  082b4	e59d300c	 ldr         r3, [sp, #0xC]
  082b8	e28310ac	 add         r1, r3, #0xAC
  082bc	e59d2028	 ldr         r2, [sp, #0x28]
  082c0	e3a03034	 mov         r3, #0x34
  082c4	e0030392	 mul         r3, r2, r3
  082c8	e0813003	 add         r3, r1, r3
  082cc	e58d3008	 str         r3, [sp, #8]

; 2806 :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUSBContext->pUsbCsrRegs;

  082d0	e59d300c	 ldr         r3, [sp, #0xC]
  082d4	e2833020	 add         r3, r3, #0x20
  082d8	e5933000	 ldr         r3, [r3]
  082dc	e283301c	 add         r3, r3, #0x1C
  082e0	e5933000	 ldr         r3, [r3]
  082e4	e58d3000	 str         r3, [sp]

; 2807 :     UINT16 csrVal;
; 2808 :     
; 2809 :     DEBUGMSG(ZONE_FUNCTION, (L"UfnPdd_ClearEndpointStall for EP %d\r\n", endpoint));

  082e8	e59f31f0	 ldr         r3, [pc, #0x1F0]
  082ec	e5933440	 ldr         r3, [r3, #0x440]
  082f0	e3130a01	 tst         r3, #1, 20
  082f4	0a000011	 beq         |$LN11@UfnPdd_Cle|
  082f8	e59f31e0	 ldr         r3, [pc, #0x1E0]
  082fc	e5933440	 ldr         r3, [r3, #0x440]
  08300	e3130801	 tst         r3, #1, 16
  08304	0a000005	 beq         |$LN9@UfnPdd_Cle|
  08308	e59d1028	 ldr         r1, [sp, #0x28]
  0830c	e59f01c8	 ldr         r0, [pc, #0x1C8]
  08310	eb000000	 bl          CeLogMsg
  08314	e3a03001	 mov         r3, #1
  08318	e58d3014	 str         r3, [sp, #0x14]
  0831c	ea000004	 b           |$LN10@UfnPdd_Cle|
  08320		 |$LN9@UfnPdd_Cle|
  08320	e59d1028	 ldr         r1, [sp, #0x28]
  08324	e59f01b0	 ldr         r0, [pc, #0x1B0]
  08328	eb000000	 bl          NKDbgPrintfW
  0832c	e3a03000	 mov         r3, #0
  08330	e58d3014	 str         r3, [sp, #0x14]
  08334		 |$LN10@UfnPdd_Cle|
  08334	e3a03001	 mov         r3, #1
  08338	e58d3018	 str         r3, [sp, #0x18]
  0833c	ea000001	 b           |$LN12@UfnPdd_Cle|
  08340		 |$LN11@UfnPdd_Cle|
  08340	e3a03000	 mov         r3, #0
  08344	e58d3018	 str         r3, [sp, #0x18]
  08348		 |$LN12@UfnPdd_Cle|

; 2810 :     
; 2811 :     if (endpoint == 0)

  08348	e59d3028	 ldr         r3, [sp, #0x28]
  0834c	e3530000	 cmp         r3, #0
  08350	1a000013	 bne         |$LN6@UfnPdd_Cle|

; 2812 :     {
; 2813 :         CLRREG16(&pCsrRegs->ep[endpoint].CSR.CSR0, CSR0_P_SENTSTALL | CSR0_P_SENDSTALL);        

  08354	e59d1028	 ldr         r1, [sp, #0x28]
  08358	e3a03010	 mov         r3, #0x10
  0835c	e0020391	 mul         r2, r1, r3
  08360	e59d3000	 ldr         r3, [sp]
  08364	e0833002	 add         r3, r3, r2
  08368	e2833002	 add         r3, r3, #2
  0836c	e1d330b0	 ldrh        r3, [r3]
  08370	e1a02003	 mov         r2, r3
  08374	e3e03024	 mvn         r3, #0x24
  08378	e0023003	 and         r3, r2, r3
  0837c	e1a00803	 mov         r0, r3, lsl #16
  08380	e1a00820	 mov         r0, r0, lsr #16
  08384	e59d1028	 ldr         r1, [sp, #0x28]
  08388	e3a03010	 mov         r3, #0x10
  0838c	e0020391	 mul         r2, r1, r3
  08390	e59d3000	 ldr         r3, [sp]
  08394	e0833002	 add         r3, r3, r2
  08398	e2833002	 add         r3, r3, #2
  0839c	e1c300b0	 strh        r0, [r3]

; 2814 :     }
; 2815 :     else

  083a0	ea000043	 b           |$LN5@UfnPdd_Cle|
  083a4		 |$LN6@UfnPdd_Cle|

; 2816 :     {
; 2817 :         // stall end point
; 2818 :         if (pEP->dirRx)

  083a4	e59d3008	 ldr         r3, [sp, #8]
  083a8	e2833004	 add         r3, r3, #4
  083ac	e5933000	 ldr         r3, [r3]
  083b0	e3530000	 cmp         r3, #0
  083b4	0a00001f	 beq         |$LN4@UfnPdd_Cle|

; 2819 :         {
; 2820 :             csrVal = INREG16(&pCsrRegs->ep[endpoint].RxCSR);

  083b8	e59d1028	 ldr         r1, [sp, #0x28]
  083bc	e3a03010	 mov         r3, #0x10
  083c0	e0020391	 mul         r2, r1, r3
  083c4	e59d3000	 ldr         r3, [sp]
  083c8	e0833002	 add         r3, r3, r2
  083cc	e2833006	 add         r3, r3, #6
  083d0	e1d330b0	 ldrh        r3, [r3]
  083d4	e1cd30b4	 strh        r3, [sp, #4]

; 2821 : 
; 2822 :             if(csrVal & RXCSR_P_SENTSTALL)

  083d8	e1dd30b4	 ldrh        r3, [sp, #4]
  083dc	e3130040	 tst         r3, #0x40
  083e0	0a000013	 beq         |$LN3@UfnPdd_Cle|

; 2823 :             {
; 2824 :                 csrVal &= ~(RXCSR_P_SENDSTALL | RXCSR_P_SENTSTALL);

  083e4	e1dd30b4	 ldrh        r3, [sp, #4]
  083e8	e1a02003	 mov         r2, r3
  083ec	e3e03060	 mvn         r3, #0x60
  083f0	e0023003	 and         r3, r2, r3
  083f4	e1a03803	 mov         r3, r3, lsl #16
  083f8	e1a03823	 mov         r3, r3, lsr #16
  083fc	e1cd30b4	 strh        r3, [sp, #4]

; 2825 :                 csrVal |= RXCSR_P_CLRDATATOG;

  08400	e1dd30b4	 ldrh        r3, [sp, #4]
  08404	e3833080	 orr         r3, r3, #0x80
  08408	e1a03803	 mov         r3, r3, lsl #16
  0840c	e1a03823	 mov         r3, r3, lsr #16
  08410	e1cd30b4	 strh        r3, [sp, #4]

; 2826 : 
; 2827 :                 OUTREG16(&pCsrRegs->ep[endpoint].RxCSR, csrVal);

  08414	e59d1028	 ldr         r1, [sp, #0x28]
  08418	e3a03010	 mov         r3, #0x10
  0841c	e0020391	 mul         r2, r1, r3
  08420	e59d3000	 ldr         r3, [sp]
  08424	e0833002	 add         r3, r3, r2
  08428	e2832006	 add         r2, r3, #6
  0842c	e1dd30b4	 ldrh        r3, [sp, #4]
  08430	e1c230b0	 strh        r3, [r2]
  08434		 |$LN3@UfnPdd_Cle|

; 2828 :             }
; 2829 :         }
; 2830 :         else

  08434	ea00001e	 b           |$LN2@UfnPdd_Cle|
  08438		 |$LN4@UfnPdd_Cle|

; 2831 :         {
; 2832 :             csrVal = INREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR);

  08438	e59d1028	 ldr         r1, [sp, #0x28]
  0843c	e3a03010	 mov         r3, #0x10
  08440	e0020391	 mul         r2, r1, r3
  08444	e59d3000	 ldr         r3, [sp]
  08448	e0833002	 add         r3, r3, r2
  0844c	e2833002	 add         r3, r3, #2
  08450	e1d330b0	 ldrh        r3, [r3]
  08454	e1cd30b4	 strh        r3, [sp, #4]

; 2833 :                         					    
; 2834 : 			if (csrVal & TXCSR_P_SENTSTALL)

  08458	e1dd30b4	 ldrh        r3, [sp, #4]
  0845c	e3130020	 tst         r3, #0x20
  08460	0a000013	 beq         |$LN1@UfnPdd_Cle|

; 2835 :             {
; 2836 : 				csrVal &= ~(TXCSR_P_SENDSTALL | TXCSR_P_SENTSTALL);

  08464	e1dd30b4	 ldrh        r3, [sp, #4]
  08468	e1a02003	 mov         r2, r3
  0846c	e3e03030	 mvn         r3, #0x30
  08470	e0023003	 and         r3, r2, r3
  08474	e1a03803	 mov         r3, r3, lsl #16
  08478	e1a03823	 mov         r3, r3, lsr #16
  0847c	e1cd30b4	 strh        r3, [sp, #4]

; 2837 :                 csrVal |= TXCSR_P_CLRDATATOG;

  08480	e1dd30b4	 ldrh        r3, [sp, #4]
  08484	e3833040	 orr         r3, r3, #0x40
  08488	e1a03803	 mov         r3, r3, lsl #16
  0848c	e1a03823	 mov         r3, r3, lsr #16
  08490	e1cd30b4	 strh        r3, [sp, #4]

; 2838 : 
; 2839 :                 OUTREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, csrVal);

  08494	e59d1028	 ldr         r1, [sp, #0x28]
  08498	e3a03010	 mov         r3, #0x10
  0849c	e0020391	 mul         r2, r1, r3
  084a0	e59d3000	 ldr         r3, [sp]
  084a4	e0833002	 add         r3, r3, r2
  084a8	e2832002	 add         r2, r3, #2
  084ac	e1dd30b4	 ldrh        r3, [sp, #4]
  084b0	e1c230b0	 strh        r3, [r2]
  084b4		 |$LN1@UfnPdd_Cle|
  084b4		 |$LN2@UfnPdd_Cle|
  084b4		 |$LN5@UfnPdd_Cle|

; 2840 :             }
; 2841 :         }
; 2842 :         
; 2843 :     }
; 2844 :     pEP->stalled = FALSE;

  084b4	e59d3008	 ldr         r3, [sp, #8]
  084b8	e2832014	 add         r2, r3, #0x14
  084bc	e3a03000	 mov         r3, #0
  084c0	e5823000	 str         r3, [r2]

; 2845 :     
; 2846 :     return ERROR_SUCCESS;

  084c4	e3a03000	 mov         r3, #0
  084c8	e58d3010	 str         r3, [sp, #0x10]

; 2847 : }

  084cc	e59d0010	 ldr         r0, [sp, #0x10]
  084d0	e28dd01c	 add         sp, sp, #0x1C
  084d4	e89d6000	 ldmia       sp, {sp, lr}
  084d8	e12fff1e	 bx          lr
  084dc		 |$LN16@UfnPdd_Cle|
  084dc		 |$LN17@UfnPdd_Cle|
  084dc	00000000	 DCD         |??_C@_1EM@DEDHGOEH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAl?$AAe?$AAa?$AAr?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAS?$AAt?$AAa?$AAl?$AAl?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAE?$AAP@|
  084e0		 |$LN18@UfnPdd_Cle|
  084e0	00000000	 DCD         |dpCurSettings|
  084e4		 |$M50685|

			 ENDP  ; |UfnPdd_ClearEndpointStall|

	EXPORT	|??_C@_1DE@ECDCBICE@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAH?$AAa?$AAl?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_IsEndpointHalted|

  00140			 AREA	 |.pdata|, PDATA
|$T50700| DCD	|$LN13@UfnPdd_IsE|
	DCD	0x40005904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@ECDCBICE@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAH?$AAa?$AAl?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "s", 0x0, "E", 0x0, "n", 0x0, "d", 0x0, "p"
	DCB	0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "H", 0x0, "a"
	DCB	0x0, "l", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  084e4			 AREA	 |.text|, CODE, ARM

  084e4		 |UfnPdd_IsEndpointHalted| PROC

; 2869 : {

  084e4		 |$LN13@UfnPdd_IsE|
  084e4	e1a0c00d	 mov         r12, sp
  084e8	e92d0007	 stmdb       sp!, {r0 - r2}
  084ec	e92d5000	 stmdb       sp!, {r12, lr}
  084f0	e24dd018	 sub         sp, sp, #0x18
  084f4		 |$M50697|

; 2870 :    
; 2871 :     MUsbFnPdd_t *pPdd = pPddContext;

  084f4	e59d3020	 ldr         r3, [sp, #0x20]
  084f8	e58d3008	 str         r3, [sp, #8]

; 2872 :     MUsbFnEp_t *pEP = &pPdd->ep[endpoint];

  084fc	e59d3008	 ldr         r3, [sp, #8]
  08500	e28310ac	 add         r1, r3, #0xAC
  08504	e59d2024	 ldr         r2, [sp, #0x24]
  08508	e3a03034	 mov         r3, #0x34
  0850c	e0030392	 mul         r3, r2, r3
  08510	e0813003	 add         r3, r1, r3
  08514	e58d3004	 str         r3, [sp, #4]

; 2873 :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUSBContext->pUsbCsrRegs;

  08518	e59d3008	 ldr         r3, [sp, #8]
  0851c	e2833020	 add         r3, r3, #0x20
  08520	e5933000	 ldr         r3, [r3]
  08524	e283301c	 add         r3, r3, #0x1C
  08528	e5933000	 ldr         r3, [r3]
  0852c	e58d3000	 str         r3, [sp]

; 2874 :     
; 2875 :     DEBUGMSG(ZONE_FUNCTION, (L"UfnPdd_IsEndpointHalted\r\n"));

  08530	e59f310c	 ldr         r3, [pc, #0x10C]
  08534	e5933440	 ldr         r3, [r3, #0x440]
  08538	e3130a01	 tst         r3, #1, 20
  0853c	0a00000f	 beq         |$LN9@UfnPdd_IsE|
  08540	e59f30fc	 ldr         r3, [pc, #0xFC]
  08544	e5933440	 ldr         r3, [r3, #0x440]
  08548	e3130801	 tst         r3, #1, 16
  0854c	0a000004	 beq         |$LN7@UfnPdd_IsE|
  08550	e59f00e8	 ldr         r0, [pc, #0xE8]
  08554	eb000000	 bl          CeLogMsg
  08558	e3a03001	 mov         r3, #1
  0855c	e58d3010	 str         r3, [sp, #0x10]
  08560	ea000003	 b           |$LN8@UfnPdd_IsE|
  08564		 |$LN7@UfnPdd_IsE|
  08564	e59f00d4	 ldr         r0, [pc, #0xD4]
  08568	eb000000	 bl          NKDbgPrintfW
  0856c	e3a03000	 mov         r3, #0
  08570	e58d3010	 str         r3, [sp, #0x10]
  08574		 |$LN8@UfnPdd_IsE|
  08574	e3a03001	 mov         r3, #1
  08578	e58d3014	 str         r3, [sp, #0x14]
  0857c	ea000001	 b           |$LN10@UfnPdd_IsE|
  08580		 |$LN9@UfnPdd_IsE|
  08580	e3a03000	 mov         r3, #0
  08584	e58d3014	 str         r3, [sp, #0x14]
  08588		 |$LN10@UfnPdd_IsE|

; 2876 :         
; 2877 :     if (endpoint == 0)

  08588	e59d3024	 ldr         r3, [sp, #0x24]
  0858c	e3530000	 cmp         r3, #0
  08590	1a00000a	 bne         |$LN4@UfnPdd_IsE|

; 2878 :     {
; 2879 :         *pHalted = INREG16(&pCsrRegs->ep[endpoint].CSR.CSR0) & CSR0_P_SENDSTALL;

  08594	e59d1024	 ldr         r1, [sp, #0x24]
  08598	e3a03010	 mov         r3, #0x10
  0859c	e0020391	 mul         r2, r1, r3
  085a0	e59d3000	 ldr         r3, [sp]
  085a4	e0833002	 add         r3, r3, r2
  085a8	e2833002	 add         r3, r3, #2
  085ac	e1d330b0	 ldrh        r3, [r3]
  085b0	e2032020	 and         r2, r3, #0x20
  085b4	e59d3028	 ldr         r3, [sp, #0x28]
  085b8	e5832000	 str         r2, [r3]

; 2880 :     }
; 2881 :     else

  085bc	ea000019	 b           |$LN3@UfnPdd_IsE|
  085c0		 |$LN4@UfnPdd_IsE|

; 2882 :     {
; 2883 :         // stall end point
; 2884 :         if (pEP->dirRx)

  085c0	e59d3004	 ldr         r3, [sp, #4]
  085c4	e2833004	 add         r3, r3, #4
  085c8	e5933000	 ldr         r3, [r3]
  085cc	e3530000	 cmp         r3, #0
  085d0	0a00000a	 beq         |$LN2@UfnPdd_IsE|

; 2885 :         {
; 2886 :             *pHalted = INREG16(&pCsrRegs->ep[endpoint].RxCSR) & RXCSR_P_SENDSTALL;

  085d4	e59d1024	 ldr         r1, [sp, #0x24]
  085d8	e3a03010	 mov         r3, #0x10
  085dc	e0020391	 mul         r2, r1, r3
  085e0	e59d3000	 ldr         r3, [sp]
  085e4	e0833002	 add         r3, r3, r2
  085e8	e2833006	 add         r3, r3, #6
  085ec	e1d330b0	 ldrh        r3, [r3]
  085f0	e2032020	 and         r2, r3, #0x20
  085f4	e59d3028	 ldr         r3, [sp, #0x28]
  085f8	e5832000	 str         r2, [r3]

; 2887 :         }
; 2888 :         else

  085fc	ea000009	 b           |$LN1@UfnPdd_IsE|
  08600		 |$LN2@UfnPdd_IsE|

; 2889 :         {
; 2890 :             *pHalted = INREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR) & TXCSR_P_SENDSTALL;

  08600	e59d1024	 ldr         r1, [sp, #0x24]
  08604	e3a03010	 mov         r3, #0x10
  08608	e0020391	 mul         r2, r1, r3
  0860c	e59d3000	 ldr         r3, [sp]
  08610	e0833002	 add         r3, r3, r2
  08614	e2833002	 add         r3, r3, #2
  08618	e1d330b0	 ldrh        r3, [r3]
  0861c	e2032010	 and         r2, r3, #0x10
  08620	e59d3028	 ldr         r3, [sp, #0x28]
  08624	e5832000	 str         r2, [r3]
  08628		 |$LN1@UfnPdd_IsE|
  08628		 |$LN3@UfnPdd_IsE|

; 2891 :         }
; 2892 :     }
; 2893 :         
; 2894 :     // Done
; 2895 :     return ERROR_SUCCESS;

  08628	e3a03000	 mov         r3, #0
  0862c	e58d300c	 str         r3, [sp, #0xC]

; 2896 : }

  08630	e59d000c	 ldr         r0, [sp, #0xC]
  08634	e28dd018	 add         sp, sp, #0x18
  08638	e89d6000	 ldmia       sp, {sp, lr}
  0863c	e12fff1e	 bx          lr
  08640		 |$LN14@UfnPdd_IsE|
  08640		 |$LN15@UfnPdd_IsE|
  08640	00000000	 DCD         |??_C@_1DE@ECDCBICE@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAH?$AAa?$AAl?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  08644		 |$LN16@UfnPdd_IsE|
  08644	00000000	 DCD         |dpCurSettings|
  08648		 |$M50698|

			 ENDP  ; |UfnPdd_IsEndpointHalted|

	EXPORT	|??_C@_1EK@FBCADDCM@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IA@COCCDIGG@?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@JOCOIJJN@?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@KLJDIPCK@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa?$AAk?$AAe?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@KPMCILDD@?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAP?$AAh?$AAa?$AAs?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@LILNFPOG@?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAI?$AAn?$AA?5?$AAP?$AAh?$AAa?$AAs?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@FNDJMGPI@?$AAS?$AAE?$AAT?$AAU?$AAP?$AA_?$AAP?$AAR?$AAO?$AAC?$AAE?$AAS?$AAS?$AAE?$AAD?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@JCNHNDBF@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_SendControlStatusHandshake|

  00148			 AREA	 |.pdata|, PDATA
|$T50745| DCD	|$LN49@UfnPdd_Sen|
	DCD	0x40013a04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@FBCADDCM@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa@| DCB "-"
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s"
	DCB	0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "s", 0x0, "h"
	DCB	0x0, "a", 0x0, "k", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IA@COCCDIGG@?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd@| DCB "!"
	DCB	0x0, "!", 0x0, "!", 0x0, " ", 0x0, "U", 0x0, "f", 0x0, "n"
	DCB	0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_", 0x0, "S", 0x0, "e"
	DCB	0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "u", 0x0, "s", 0x0, "H", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, "s", 0x0, "h", 0x0, "a", 0x0, "k", 0x0, "e"
	DCB	0x0, " ", 0x0, "c", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "w", 0x0, "i", 0x0, "t", 0x0, "h"
	DCB	0x0, " ", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o"
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@JOCOIJJN@?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@KLJDIPCK@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa?$AAk?$AAe?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr@| DCB "S"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, "H", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "s", 0x0, "h", 0x0, "a", 0x0, "k"
	DCB	0x0, "e", 0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "w", 0x0, "i", 0x0, "t", 0x0, "h"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@KPMCILDD@?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAP?$AAh?$AAa?$AAs?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, " "
	DCB	0x0, "O", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "P", 0x0, "h"
	DCB	0x0, "a", 0x0, "s", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@LILNFPOG@?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAI?$AAn?$AA?5?$AAP?$AAh?$AAa?$AAs?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, " ", 0x0, "P", 0x0, "h", 0x0, "a"
	DCB	0x0, "s", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@FNDJMGPI@?$AAS?$AAE?$AAT?$AAU?$AAP?$AA_?$AAP?$AAR?$AAO?$AAC?$AAE?$AAS?$AAS?$AAE?$AAD?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "E", 0x0, "T", 0x0, "U", 0x0, "P", 0x0, "_", 0x0, "P"
	DCB	0x0, "R", 0x0, "O", 0x0, "C", 0x0, "E", 0x0, "S", 0x0, "S"
	DCB	0x0, "E", 0x0, "D", 0x0, " ", 0x0, "=", 0x0, ">", 0x0, " "
	DCB	0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U", 0x0, "S"
	DCB	0x0, "_", 0x0, "I", 0x0, "N", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@JCNHNDBF@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa@| DCB "+"
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s"
	DCB	0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "s", 0x0, "h"
	DCB	0x0, "a", 0x0, "k", 0x0, "e", 0x0, " ", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  08648			 AREA	 |.text|, CODE, ARM

  08648		 |UfnPdd_SendControlStatusHandshake| PROC

; 2920 : {

  08648		 |$LN49@UfnPdd_Sen|
  08648	e1a0c00d	 mov         r12, sp
  0864c	e92d0003	 stmdb       sp!, {r0, r1}
  08650	e92d5000	 stmdb       sp!, {r12, lr}
  08654	e24dd058	 sub         sp, sp, #0x58
  08658		 |$M50742|

; 2921 :     DWORD rc = ERROR_INVALID_PARAMETER;

  08658	e3a03057	 mov         r3, #0x57
  0865c	e58d3004	 str         r3, [sp, #4]

; 2922 :     MUsbFnPdd_t *pPdd = pPddContext;

  08660	e59d3060	 ldr         r3, [sp, #0x60]
  08664	e58d3008	 str         r3, [sp, #8]

; 2923 :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUSBContext->pUsbCsrRegs;

  08668	e59d3008	 ldr         r3, [sp, #8]
  0866c	e2833020	 add         r3, r3, #0x20
  08670	e5933000	 ldr         r3, [r3]
  08674	e283301c	 add         r3, r3, #0x1C
  08678	e5933000	 ldr         r3, [r3]
  0867c	e58d3000	 str         r3, [sp]

; 2924 :     
; 2925 :     DEBUGMSG(ZONE_FUNCTION, (L"+UfnPdd_SendControlStatusHandshake status = 0x%x\r\n", pPdd->ep0State));

  08680	e59f3484	 ldr         r3, [pc, #0x484]
  08684	e5933440	 ldr         r3, [r3, #0x440]
  08688	e3130a01	 tst         r3, #1, 20
  0868c	0a000015	 beq         |$LN13@UfnPdd_Sen|
  08690	e59f3474	 ldr         r3, [pc, #0x474]
  08694	e5933440	 ldr         r3, [r3, #0x440]
  08698	e3130801	 tst         r3, #1, 16
  0869c	0a000007	 beq         |$LN11@UfnPdd_Sen|
  086a0	e59d3008	 ldr         r3, [sp, #8]
  086a4	e2833ffb	 add         r3, r3, #0xFB, 30
  086a8	e5931000	 ldr         r1, [r3]
  086ac	e59f0478	 ldr         r0, [pc, #0x478]
  086b0	eb000000	 bl          CeLogMsg
  086b4	e3a03001	 mov         r3, #1
  086b8	e58d3010	 str         r3, [sp, #0x10]
  086bc	ea000006	 b           |$LN12@UfnPdd_Sen|
  086c0		 |$LN11@UfnPdd_Sen|
  086c0	e59d3008	 ldr         r3, [sp, #8]
  086c4	e2833ffb	 add         r3, r3, #0xFB, 30
  086c8	e5931000	 ldr         r1, [r3]
  086cc	e59f0458	 ldr         r0, [pc, #0x458]
  086d0	eb000000	 bl          NKDbgPrintfW
  086d4	e3a03000	 mov         r3, #0
  086d8	e58d3010	 str         r3, [sp, #0x10]
  086dc		 |$LN12@UfnPdd_Sen|
  086dc	e3a03001	 mov         r3, #1
  086e0	e58d3014	 str         r3, [sp, #0x14]
  086e4	ea000001	 b           |$LN14@UfnPdd_Sen|
  086e8		 |$LN13@UfnPdd_Sen|
  086e8	e3a03000	 mov         r3, #0
  086ec	e58d3014	 str         r3, [sp, #0x14]
  086f0		 |$LN14@UfnPdd_Sen|

; 2926 :     
; 2927 :     if (endpoint == 0)

  086f0	e59d3064	 ldr         r3, [sp, #0x64]
  086f4	e3530000	 cmp         r3, #0
  086f8	1a0000ce	 bne         |$LN8@UfnPdd_Sen|

; 2928 :     {
; 2929 :         if (pPdd->ep0State == EP0_ST_SETUP_PROCESSED)

  086fc	e59d3008	 ldr         r3, [sp, #8]
  08700	e2833ffb	 add         r3, r3, #0xFB, 30
  08704	e5933000	 ldr         r3, [r3]
  08708	e3530001	 cmp         r3, #1
  0870c	1a00003b	 bne         |$LN7@UfnPdd_Sen|

; 2930 :         {
; 2931 :             DEBUGMSG(ZONE_INFO, (TEXT("SETUP_PROCESSED => STATUS_IN\r\n")));

  08710	e59f33f4	 ldr         r3, [pc, #0x3F4]
  08714	e5933440	 ldr         r3, [r3, #0x440]
  08718	e3130b01	 tst         r3, #1, 22
  0871c	0a00000f	 beq         |$LN17@UfnPdd_Sen|
  08720	e59f33e4	 ldr         r3, [pc, #0x3E4]
  08724	e5933440	 ldr         r3, [r3, #0x440]
  08728	e3130801	 tst         r3, #1, 16
  0872c	0a000004	 beq         |$LN15@UfnPdd_Sen|
  08730	e59f03f0	 ldr         r0, [pc, #0x3F0]
  08734	eb000000	 bl          CeLogMsg
  08738	e3a03001	 mov         r3, #1
  0873c	e58d3018	 str         r3, [sp, #0x18]
  08740	ea000003	 b           |$LN16@UfnPdd_Sen|
  08744		 |$LN15@UfnPdd_Sen|
  08744	e59f03dc	 ldr         r0, [pc, #0x3DC]
  08748	eb000000	 bl          NKDbgPrintfW
  0874c	e3a03000	 mov         r3, #0
  08750	e58d3018	 str         r3, [sp, #0x18]
  08754		 |$LN16@UfnPdd_Sen|
  08754	e3a03001	 mov         r3, #1
  08758	e58d301c	 str         r3, [sp, #0x1C]
  0875c	ea000001	 b           |$LN18@UfnPdd_Sen|
  08760		 |$LN17@UfnPdd_Sen|
  08760	e3a03000	 mov         r3, #0
  08764	e58d301c	 str         r3, [sp, #0x1C]
  08768		 |$LN18@UfnPdd_Sen|

; 2932 :             SETREG16(&pCsrRegs->ep[endpoint].CSR.CSR0, CSR0_P_SERVICEDRXPKTRDY | CSR0_P_DATAEND);

  08768	e59d1064	 ldr         r1, [sp, #0x64]
  0876c	e3a03010	 mov         r3, #0x10
  08770	e0020391	 mul         r2, r1, r3
  08774	e59d3000	 ldr         r3, [sp]
  08778	e0833002	 add         r3, r3, r2
  0877c	e2833002	 add         r3, r3, #2
  08780	e1d330b0	 ldrh        r3, [r3]
  08784	e3833048	 orr         r3, r3, #0x48
  08788	e1a00803	 mov         r0, r3, lsl #16
  0878c	e1a00820	 mov         r0, r0, lsr #16
  08790	e59d1064	 ldr         r1, [sp, #0x64]
  08794	e3a03010	 mov         r3, #0x10
  08798	e0020391	 mul         r2, r1, r3
  0879c	e59d3000	 ldr         r3, [sp]
  087a0	e0833002	 add         r3, r3, r2
  087a4	e2833002	 add         r3, r3, #2
  087a8	e1c300b0	 strh        r0, [r3]

; 2933 :             // Send zero byte to ack
; 2934 :             SETREG16(&pCsrRegs->ep[endpoint].CSR.CSR0, CSR0_P_TXPKTRDY);

  087ac	e59d1064	 ldr         r1, [sp, #0x64]
  087b0	e3a03010	 mov         r3, #0x10
  087b4	e0020391	 mul         r2, r1, r3
  087b8	e59d3000	 ldr         r3, [sp]
  087bc	e0833002	 add         r3, r3, r2
  087c0	e2833002	 add         r3, r3, #2
  087c4	e1d330b0	 ldrh        r3, [r3]
  087c8	e3833002	 orr         r3, r3, #2
  087cc	e1a00803	 mov         r0, r3, lsl #16
  087d0	e1a00820	 mov         r0, r0, lsr #16
  087d4	e59d1064	 ldr         r1, [sp, #0x64]
  087d8	e3a03010	 mov         r3, #0x10
  087dc	e0020391	 mul         r2, r1, r3
  087e0	e59d3000	 ldr         r3, [sp]
  087e4	e0833002	 add         r3, r3, r2
  087e8	e2833002	 add         r3, r3, #2
  087ec	e1c300b0	 strh        r0, [r3]

; 2935 :             pPdd->ep0State = EP0_ST_STATUS_IN;

  087f0	e59d3008	 ldr         r3, [sp, #8]
  087f4	e2832ffb	 add         r2, r3, #0xFB, 30
  087f8	e3a03002	 mov         r3, #2
  087fc	e5823000	 str         r3, [r2]
  08800		 |$LN7@UfnPdd_Sen|

; 2936 :         }
; 2937 : 
; 2938 :         // Send out zero byte data
; 2939 :         if (pPdd->ep0State == EP0_ST_STATUS_IN)

  08800	e59d3008	 ldr         r3, [sp, #8]
  08804	e2833ffb	 add         r3, r3, #0xFB, 30
  08808	e5933000	 ldr         r3, [r3]
  0880c	e3530002	 cmp         r3, #2
  08810	1a00002c	 bne         |$LN6@UfnPdd_Sen|

; 2940 :         {
; 2941 :             DEBUGMSG(ZONE_INFO, (L"Status In Phase\r\n"));

  08814	e59f32f0	 ldr         r3, [pc, #0x2F0]
  08818	e5933440	 ldr         r3, [r3, #0x440]
  0881c	e3130b01	 tst         r3, #1, 22
  08820	0a00000f	 beq         |$LN21@UfnPdd_Sen|
  08824	e59f32e0	 ldr         r3, [pc, #0x2E0]
  08828	e5933440	 ldr         r3, [r3, #0x440]
  0882c	e3130801	 tst         r3, #1, 16
  08830	0a000004	 beq         |$LN19@UfnPdd_Sen|
  08834	e59f02e8	 ldr         r0, [pc, #0x2E8]
  08838	eb000000	 bl          CeLogMsg
  0883c	e3a03001	 mov         r3, #1
  08840	e58d3020	 str         r3, [sp, #0x20]
  08844	ea000003	 b           |$LN20@UfnPdd_Sen|
  08848		 |$LN19@UfnPdd_Sen|
  08848	e59f02d4	 ldr         r0, [pc, #0x2D4]
  0884c	eb000000	 bl          NKDbgPrintfW
  08850	e3a03000	 mov         r3, #0
  08854	e58d3020	 str         r3, [sp, #0x20]
  08858		 |$LN20@UfnPdd_Sen|
  08858	e3a03001	 mov         r3, #1
  0885c	e58d3024	 str         r3, [sp, #0x24]
  08860	ea000001	 b           |$LN22@UfnPdd_Sen|
  08864		 |$LN21@UfnPdd_Sen|
  08864	e3a03000	 mov         r3, #0
  08868	e58d3024	 str         r3, [sp, #0x24]
  0886c		 |$LN22@UfnPdd_Sen|

; 2942 :             DEBUGMSG(ZONE_INFO, (TEXT("1. Set TxPktRdy - 0\r\n")));

  0886c	e59f3298	 ldr         r3, [pc, #0x298]
  08870	e5933440	 ldr         r3, [r3, #0x440]
  08874	e3130b01	 tst         r3, #1, 22
  08878	0a00000f	 beq         |$LN25@UfnPdd_Sen|
  0887c	e59f3288	 ldr         r3, [pc, #0x288]
  08880	e5933440	 ldr         r3, [r3, #0x440]
  08884	e3130801	 tst         r3, #1, 16
  08888	0a000004	 beq         |$LN23@UfnPdd_Sen|
  0888c	e59f028c	 ldr         r0, [pc, #0x28C]
  08890	eb000000	 bl          CeLogMsg
  08894	e3a03001	 mov         r3, #1
  08898	e58d3028	 str         r3, [sp, #0x28]
  0889c	ea000003	 b           |$LN24@UfnPdd_Sen|
  088a0		 |$LN23@UfnPdd_Sen|
  088a0	e59f0278	 ldr         r0, [pc, #0x278]
  088a4	eb000000	 bl          NKDbgPrintfW
  088a8	e3a03000	 mov         r3, #0
  088ac	e58d3028	 str         r3, [sp, #0x28]
  088b0		 |$LN24@UfnPdd_Sen|
  088b0	e3a03001	 mov         r3, #1
  088b4	e58d302c	 str         r3, [sp, #0x2C]
  088b8	ea000001	 b           |$LN26@UfnPdd_Sen|
  088bc		 |$LN25@UfnPdd_Sen|
  088bc	e3a03000	 mov         r3, #0
  088c0	e58d302c	 str         r3, [sp, #0x2C]
  088c4		 |$LN26@UfnPdd_Sen|

; 2943 :         }
; 2944 :         else if (pPdd->ep0State == EP0_ST_STATUS_OUT)

  088c4	ea000037	 b           |$LN5@UfnPdd_Sen|
  088c8		 |$LN6@UfnPdd_Sen|
  088c8	e59d3008	 ldr         r3, [sp, #8]
  088cc	e2833ffb	 add         r3, r3, #0xFB, 30
  088d0	e5933000	 ldr         r3, [r3]
  088d4	e3530003	 cmp         r3, #3
  088d8	1a000016	 bne         |$LN4@UfnPdd_Sen|

; 2945 :         {
; 2946 :             DEBUGMSG(ZONE_INFO, (L"Status Out Phase\r\n"));

  088dc	e59f3228	 ldr         r3, [pc, #0x228]
  088e0	e5933440	 ldr         r3, [r3, #0x440]
  088e4	e3130b01	 tst         r3, #1, 22
  088e8	0a00000f	 beq         |$LN29@UfnPdd_Sen|
  088ec	e59f3218	 ldr         r3, [pc, #0x218]
  088f0	e5933440	 ldr         r3, [r3, #0x440]
  088f4	e3130801	 tst         r3, #1, 16
  088f8	0a000004	 beq         |$LN27@UfnPdd_Sen|
  088fc	e59f0218	 ldr         r0, [pc, #0x218]
  08900	eb000000	 bl          CeLogMsg
  08904	e3a03001	 mov         r3, #1
  08908	e58d3030	 str         r3, [sp, #0x30]
  0890c	ea000003	 b           |$LN28@UfnPdd_Sen|
  08910		 |$LN27@UfnPdd_Sen|
  08910	e59f0204	 ldr         r0, [pc, #0x204]
  08914	eb000000	 bl          NKDbgPrintfW
  08918	e3a03000	 mov         r3, #0
  0891c	e58d3030	 str         r3, [sp, #0x30]
  08920		 |$LN28@UfnPdd_Sen|
  08920	e3a03001	 mov         r3, #1
  08924	e58d3034	 str         r3, [sp, #0x34]
  08928	ea000001	 b           |$LN30@UfnPdd_Sen|
  0892c		 |$LN29@UfnPdd_Sen|
  0892c	e3a03000	 mov         r3, #0
  08930	e58d3034	 str         r3, [sp, #0x34]
  08934		 |$LN30@UfnPdd_Sen|

; 2947 :         }
; 2948 :         else

  08934	ea00001b	 b           |$LN3@UfnPdd_Sen|
  08938		 |$LN4@UfnPdd_Sen|

; 2949 :             DEBUGMSG(ZONE_INFO, (L"SendControlStatusHandshake error with state %d\r\n", 
; 2950 :             pPdd->ep0State));

  08938	e59f31cc	 ldr         r3, [pc, #0x1CC]
  0893c	e5933440	 ldr         r3, [r3, #0x440]
  08940	e3130b01	 tst         r3, #1, 22
  08944	0a000015	 beq         |$LN33@UfnPdd_Sen|
  08948	e59f31bc	 ldr         r3, [pc, #0x1BC]
  0894c	e5933440	 ldr         r3, [r3, #0x440]
  08950	e3130801	 tst         r3, #1, 16
  08954	0a000007	 beq         |$LN31@UfnPdd_Sen|
  08958	e59d3008	 ldr         r3, [sp, #8]
  0895c	e2833ffb	 add         r3, r3, #0xFB, 30
  08960	e5931000	 ldr         r1, [r3]
  08964	e59f01ac	 ldr         r0, [pc, #0x1AC]
  08968	eb000000	 bl          CeLogMsg
  0896c	e3a03001	 mov         r3, #1
  08970	e58d3038	 str         r3, [sp, #0x38]
  08974	ea000006	 b           |$LN32@UfnPdd_Sen|
  08978		 |$LN31@UfnPdd_Sen|
  08978	e59d3008	 ldr         r3, [sp, #8]
  0897c	e2833ffb	 add         r3, r3, #0xFB, 30
  08980	e5931000	 ldr         r1, [r3]
  08984	e59f018c	 ldr         r0, [pc, #0x18C]
  08988	eb000000	 bl          NKDbgPrintfW
  0898c	e3a03000	 mov         r3, #0
  08990	e58d3038	 str         r3, [sp, #0x38]
  08994		 |$LN32@UfnPdd_Sen|
  08994	e3a03001	 mov         r3, #1
  08998	e58d303c	 str         r3, [sp, #0x3C]
  0899c	ea000001	 b           |$LN34@UfnPdd_Sen|
  089a0		 |$LN33@UfnPdd_Sen|
  089a0	e3a03000	 mov         r3, #0
  089a4	e58d303c	 str         r3, [sp, #0x3C]
  089a8		 |$LN34@UfnPdd_Sen|
  089a8		 |$LN3@UfnPdd_Sen|
  089a8		 |$LN5@UfnPdd_Sen|

; 2951 :         if (pPdd->ep0State == EP0_ST_STATUS_OUT)

  089a8	e59d3008	 ldr         r3, [sp, #8]
  089ac	e2833ffb	 add         r3, r3, #0xFB, 30
  089b0	e5933000	 ldr         r3, [r3]
  089b4	e3530003	 cmp         r3, #3
  089b8	1a000003	 bne         |$LN2@UfnPdd_Sen|

; 2952 :             pPdd->ep0State = EP0_ST_SETUP;

  089bc	e59d3008	 ldr         r3, [sp, #8]
  089c0	e2832ffb	 add         r2, r3, #0xFB, 30
  089c4	e3a03000	 mov         r3, #0
  089c8	e5823000	 str         r3, [r2]
  089cc		 |$LN2@UfnPdd_Sen|

; 2953 :         DEBUGMSG(ZONE_INFO, (L"Complete\r\n"));

  089cc	e59f3138	 ldr         r3, [pc, #0x138]
  089d0	e5933440	 ldr         r3, [r3, #0x440]
  089d4	e3130b01	 tst         r3, #1, 22
  089d8	0a00000f	 beq         |$LN37@UfnPdd_Sen|
  089dc	e59f3128	 ldr         r3, [pc, #0x128]
  089e0	e5933440	 ldr         r3, [r3, #0x440]
  089e4	e3130801	 tst         r3, #1, 16
  089e8	0a000004	 beq         |$LN35@UfnPdd_Sen|
  089ec	e59f0120	 ldr         r0, [pc, #0x120]
  089f0	eb000000	 bl          CeLogMsg
  089f4	e3a03001	 mov         r3, #1
  089f8	e58d3040	 str         r3, [sp, #0x40]
  089fc	ea000003	 b           |$LN36@UfnPdd_Sen|
  08a00		 |$LN35@UfnPdd_Sen|
  08a00	e59f010c	 ldr         r0, [pc, #0x10C]
  08a04	eb000000	 bl          NKDbgPrintfW
  08a08	e3a03000	 mov         r3, #0
  08a0c	e58d3040	 str         r3, [sp, #0x40]
  08a10		 |$LN36@UfnPdd_Sen|
  08a10	e3a03001	 mov         r3, #1
  08a14	e58d3044	 str         r3, [sp, #0x44]
  08a18	ea000001	 b           |$LN38@UfnPdd_Sen|
  08a1c		 |$LN37@UfnPdd_Sen|
  08a1c	e3a03000	 mov         r3, #0
  08a20	e58d3044	 str         r3, [sp, #0x44]
  08a24		 |$LN38@UfnPdd_Sen|

; 2954 :         rc = ERROR_SUCCESS;

  08a24	e3a03000	 mov         r3, #0
  08a28	e58d3004	 str         r3, [sp, #4]

; 2955 :         
; 2956 :         prtEP0State(pPdd);

  08a2c	e59d0008	 ldr         r0, [sp, #8]
  08a30	eb000000	 bl          prtEP0State

; 2957 :     }
; 2958 :     else

  08a34	ea000017	 b           |$LN1@UfnPdd_Sen|
  08a38		 |$LN8@UfnPdd_Sen|

; 2959 :         DEBUGMSG(ZONE_INFO, (L"!!! UfnPdd_SendControlStatusHandshake called with endpoint %d\r\n", endpoint));

  08a38	e59f30cc	 ldr         r3, [pc, #0xCC]
  08a3c	e5933440	 ldr         r3, [r3, #0x440]
  08a40	e3130b01	 tst         r3, #1, 22
  08a44	0a000011	 beq         |$LN41@UfnPdd_Sen|
  08a48	e59f30bc	 ldr         r3, [pc, #0xBC]
  08a4c	e5933440	 ldr         r3, [r3, #0x440]
  08a50	e3130801	 tst         r3, #1, 16
  08a54	0a000005	 beq         |$LN39@UfnPdd_Sen|
  08a58	e59d1064	 ldr         r1, [sp, #0x64]
  08a5c	e59f00ac	 ldr         r0, [pc, #0xAC]
  08a60	eb000000	 bl          CeLogMsg
  08a64	e3a03001	 mov         r3, #1
  08a68	e58d3048	 str         r3, [sp, #0x48]
  08a6c	ea000004	 b           |$LN40@UfnPdd_Sen|
  08a70		 |$LN39@UfnPdd_Sen|
  08a70	e59d1064	 ldr         r1, [sp, #0x64]
  08a74	e59f0094	 ldr         r0, [pc, #0x94]
  08a78	eb000000	 bl          NKDbgPrintfW
  08a7c	e3a03000	 mov         r3, #0
  08a80	e58d3048	 str         r3, [sp, #0x48]
  08a84		 |$LN40@UfnPdd_Sen|
  08a84	e3a03001	 mov         r3, #1
  08a88	e58d304c	 str         r3, [sp, #0x4C]
  08a8c	ea000001	 b           |$LN42@UfnPdd_Sen|
  08a90		 |$LN41@UfnPdd_Sen|
  08a90	e3a03000	 mov         r3, #0
  08a94	e58d304c	 str         r3, [sp, #0x4C]
  08a98		 |$LN42@UfnPdd_Sen|
  08a98		 |$LN1@UfnPdd_Sen|

; 2960 :     
; 2961 :     DEBUGMSG(ZONE_FUNCTION, (L"-UfnPdd_SendControlStatusHandshake\r\n"));

  08a98	e59f306c	 ldr         r3, [pc, #0x6C]
  08a9c	e5933440	 ldr         r3, [r3, #0x440]
  08aa0	e3130a01	 tst         r3, #1, 20
  08aa4	0a00000f	 beq         |$LN45@UfnPdd_Sen|
  08aa8	e59f305c	 ldr         r3, [pc, #0x5C]
  08aac	e5933440	 ldr         r3, [r3, #0x440]
  08ab0	e3130801	 tst         r3, #1, 16
  08ab4	0a000004	 beq         |$LN43@UfnPdd_Sen|
  08ab8	e59f0048	 ldr         r0, [pc, #0x48]
  08abc	eb000000	 bl          CeLogMsg
  08ac0	e3a03001	 mov         r3, #1
  08ac4	e58d3050	 str         r3, [sp, #0x50]
  08ac8	ea000003	 b           |$LN44@UfnPdd_Sen|
  08acc		 |$LN43@UfnPdd_Sen|
  08acc	e59f0034	 ldr         r0, [pc, #0x34]
  08ad0	eb000000	 bl          NKDbgPrintfW
  08ad4	e3a03000	 mov         r3, #0
  08ad8	e58d3050	 str         r3, [sp, #0x50]
  08adc		 |$LN44@UfnPdd_Sen|
  08adc	e3a03001	 mov         r3, #1
  08ae0	e58d3054	 str         r3, [sp, #0x54]
  08ae4	ea000001	 b           |$LN46@UfnPdd_Sen|
  08ae8		 |$LN45@UfnPdd_Sen|
  08ae8	e3a03000	 mov         r3, #0
  08aec	e58d3054	 str         r3, [sp, #0x54]
  08af0		 |$LN46@UfnPdd_Sen|

; 2962 :     
; 2963 :     return rc;

  08af0	e59d3004	 ldr         r3, [sp, #4]
  08af4	e58d300c	 str         r3, [sp, #0xC]

; 2964 : }

  08af8	e59d000c	 ldr         r0, [sp, #0xC]
  08afc	e28dd058	 add         sp, sp, #0x58
  08b00	e89d6000	 ldmia       sp, {sp, lr}
  08b04	e12fff1e	 bx          lr
  08b08		 |$LN50@UfnPdd_Sen|
  08b08		 |$LN51@UfnPdd_Sen|
  08b08	00000000	 DCD         |??_C@_1EK@FBCADDCM@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa@|
  08b0c		 |$LN52@UfnPdd_Sen|
  08b0c	00000000	 DCD         |dpCurSettings|
  08b10		 |$LN53@UfnPdd_Sen|
  08b10	00000000	 DCD         |??_C@_1IA@COCCDIGG@?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd@|
  08b14		 |$LN54@UfnPdd_Sen|
  08b14	00000000	 DCD         |??_C@_1BG@JOCOIJJN@?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  08b18		 |$LN55@UfnPdd_Sen|
  08b18	00000000	 DCD         |??_C@_1GC@KLJDIPCK@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa?$AAk?$AAe?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr@|
  08b1c		 |$LN56@UfnPdd_Sen|
  08b1c	00000000	 DCD         |??_C@_1CG@KPMCILDD@?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAP?$AAh?$AAa?$AAs?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  08b20		 |$LN57@UfnPdd_Sen|
  08b20	00000000	 DCD         |??_C@_1CM@NJEMGJMB@?$AA1?$AA?4?$AA?5?$AAS?$AAe?$AAt?$AA?5?$AAT?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?5?$AA?9?$AA?5?$AA0?$AA?$AN?$AA?6?$AA?$AA@|
  08b24		 |$LN58@UfnPdd_Sen|
  08b24	00000000	 DCD         |??_C@_1CE@LILNFPOG@?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAI?$AAn?$AA?5?$AAP?$AAh?$AAa?$AAs?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  08b28		 |$LN59@UfnPdd_Sen|
  08b28	00000000	 DCD         |??_C@_1DO@FNDJMGPI@?$AAS?$AAE?$AAT?$AAU?$AAP?$AA_?$AAP?$AAR?$AAO?$AAC?$AAE?$AAS?$AAS?$AAE?$AAD?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AA?$AN?$AA?6?$AA?$AA@|
  08b2c		 |$LN60@UfnPdd_Sen|
  08b2c	00000000	 DCD         |??_C@_1GG@JCNHNDBF@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa@|
  08b30		 |$M50743|

			 ENDP  ; |UfnPdd_SendControlStatusHandshake|

	EXPORT	|??_C@_1DM@MCJPHKPP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAt?$AAe?$AAR?$AAe?$AAm?$AAo?$AAt?$AAe?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_InitiateRemoteWakeup|

  00150			 AREA	 |.pdata|, PDATA
|$T50766| DCD	|$LN9@UfnPdd_Ini|
	DCD	0x40002204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@MCJPHKPP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAt?$AAe?$AAR?$AAe?$AAm?$AAo?$AAt?$AAe?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, "R", 0x0, "e", 0x0, "m", 0x0, "o"
	DCB	0x0, "t", 0x0, "e", 0x0, "W", 0x0, "a", 0x0, "k", 0x0, "e"
	DCB	0x0, "u", 0x0, "p", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  08b30			 AREA	 |.text|, CODE, ARM

  08b30		 |UfnPdd_InitiateRemoteWakeup| PROC

; 2987 : {

  08b30		 |$LN9@UfnPdd_Ini|
  08b30	e1a0c00d	 mov         r12, sp
  08b34	e92d0001	 stmdb       sp!, {r0}
  08b38	e92d5000	 stmdb       sp!, {r12, lr}
  08b3c	e24dd00c	 sub         sp, sp, #0xC
  08b40		 |$M50763|

; 2988 : 	UNREFERENCED_PARAMETER(pPddContext);
; 2989 : 
; 2990 :     DEBUGMSG(ZONE_FUNCTION, (L"UfnPdd_InitiateRemoteWakeup\r\n"));

  08b40	e59f306c	 ldr         r3, [pc, #0x6C]
  08b44	e5933440	 ldr         r3, [r3, #0x440]
  08b48	e3130a01	 tst         r3, #1, 20
  08b4c	0a00000f	 beq         |$LN5@UfnPdd_Ini|
  08b50	e59f305c	 ldr         r3, [pc, #0x5C]
  08b54	e5933440	 ldr         r3, [r3, #0x440]
  08b58	e3130801	 tst         r3, #1, 16
  08b5c	0a000004	 beq         |$LN3@UfnPdd_Ini|
  08b60	e59f0048	 ldr         r0, [pc, #0x48]
  08b64	eb000000	 bl          CeLogMsg
  08b68	e3a03001	 mov         r3, #1
  08b6c	e58d3004	 str         r3, [sp, #4]
  08b70	ea000003	 b           |$LN4@UfnPdd_Ini|
  08b74		 |$LN3@UfnPdd_Ini|
  08b74	e59f0034	 ldr         r0, [pc, #0x34]
  08b78	eb000000	 bl          NKDbgPrintfW
  08b7c	e3a03000	 mov         r3, #0
  08b80	e58d3004	 str         r3, [sp, #4]
  08b84		 |$LN4@UfnPdd_Ini|
  08b84	e3a03001	 mov         r3, #1
  08b88	e58d3008	 str         r3, [sp, #8]
  08b8c	ea000001	 b           |$LN6@UfnPdd_Ini|
  08b90		 |$LN5@UfnPdd_Ini|
  08b90	e3a03000	 mov         r3, #0
  08b94	e58d3008	 str         r3, [sp, #8]
  08b98		 |$LN6@UfnPdd_Ini|

; 2991 :     return ERROR_INVALID_PARAMETER;

  08b98	e3a03057	 mov         r3, #0x57
  08b9c	e58d3000	 str         r3, [sp]

; 2992 : }

  08ba0	e59d0000	 ldr         r0, [sp]
  08ba4	e28dd00c	 add         sp, sp, #0xC
  08ba8	e89d6000	 ldmia       sp, {sp, lr}
  08bac	e12fff1e	 bx          lr
  08bb0		 |$LN10@UfnPdd_Ini|
  08bb0		 |$LN11@UfnPdd_Ini|
  08bb0	00000000	 DCD         |??_C@_1DM@MCJPHKPP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAt?$AAe?$AAR?$AAe?$AAm?$AAo?$AAt?$AAe?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AA?$AN?$AA?6?$AA?$AA@|
  08bb4		 |$LN12@UfnPdd_Ini|
  08bb4	00000000	 DCD         |dpCurSettings|
  08bb8		 |$M50764|

			 ENDP  ; |UfnPdd_InitiateRemoteWakeup|

	EXPORT	|??_C@_1CG@MFDGCJBH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_IOControl|
	IMPORT	|CeSafeCopyMemory|

  00158			 AREA	 |.pdata|, PDATA
|$T50779| DCD	|$LN22@UfnPdd_IOC|
	DCD	0x40007304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@MFDGCJBH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  08bb8			 AREA	 |.text|, CODE, ARM

  08bb8		 |UfnPdd_IOControl| PROC

; 3024 : {

  08bb8		 |$LN22@UfnPdd_IOC|
  08bb8	e1a0c00d	 mov         r12, sp
  08bbc	e92d000f	 stmdb       sp!, {r0 - r3}
  08bc0	e92d5000	 stmdb       sp!, {r12, lr}
  08bc4	e24dd030	 sub         sp, sp, #0x30
  08bc8		 |$M50776|

; 3025 :     DWORD rc = ERROR_INVALID_PARAMETER;

  08bc8	e3a03057	 mov         r3, #0x57
  08bcc	e58d3000	 str         r3, [sp]

; 3026 :     MUsbFnPdd_t *pPdd = pPddContext;

  08bd0	e59d3038	 ldr         r3, [sp, #0x38]
  08bd4	e58d3014	 str         r3, [sp, #0x14]

; 3027 :     UFN_PDD_INFO info;
; 3028 :     CE_BUS_POWER_STATE *pBusPowerState;
; 3029 : 
; 3030 : 	UNREFERENCED_PARAMETER(pOutSize);
; 3031 : 
; 3032 :     DEBUGMSG(ZONE_FUNCTION, (L"UfnPdd_IOControl\r\n"));

  08bd8	e59f31a0	 ldr         r3, [pc, #0x1A0]
  08bdc	e5933440	 ldr         r3, [r3, #0x440]
  08be0	e3130a01	 tst         r3, #1, 20
  08be4	0a00000f	 beq         |$LN18@UfnPdd_IOC|
  08be8	e59f3190	 ldr         r3, [pc, #0x190]
  08bec	e5933440	 ldr         r3, [r3, #0x440]
  08bf0	e3130801	 tst         r3, #1, 16
  08bf4	0a000004	 beq         |$LN16@UfnPdd_IOC|
  08bf8	e59f017c	 ldr         r0, [pc, #0x17C]
  08bfc	eb000000	 bl          CeLogMsg
  08c00	e3a03001	 mov         r3, #1
  08c04	e58d301c	 str         r3, [sp, #0x1C]
  08c08	ea000003	 b           |$LN17@UfnPdd_IOC|
  08c0c		 |$LN16@UfnPdd_IOC|
  08c0c	e59f0168	 ldr         r0, [pc, #0x168]
  08c10	eb000000	 bl          NKDbgPrintfW
  08c14	e3a03000	 mov         r3, #0
  08c18	e58d301c	 str         r3, [sp, #0x1C]
  08c1c		 |$LN17@UfnPdd_IOC|
  08c1c	e3a03001	 mov         r3, #1
  08c20	e58d3020	 str         r3, [sp, #0x20]
  08c24	ea000001	 b           |$LN19@UfnPdd_IOC|
  08c28		 |$LN18@UfnPdd_IOC|
  08c28	e3a03000	 mov         r3, #0
  08c2c	e58d3020	 str         r3, [sp, #0x20]
  08c30		 |$LN19@UfnPdd_IOC|

; 3033 :     
; 3034 :     switch (code)

  08c30	e59d3040	 ldr         r3, [sp, #0x40]
  08c34	e58d3024	 str         r3, [sp, #0x24]
  08c38	e59d2024	 ldr         r2, [sp, #0x24]
  08c3c	e3a03822	 mov         r3, #0x22, 16
  08c40	e3833f65	 orr         r3, r3, #0x65, 30
  08c44	e1520003	 cmp         r2, r3
  08c48	0a00000a	 beq         |$LN11@UfnPdd_IOC|
  08c4c	e59d2024	 ldr         r2, [sp, #0x24]
  08c50	e3a0382a	 mov         r3, #0x2A, 16
  08c54	e383300c	 orr         r3, r3, #0xC
  08c58	e1520003	 cmp         r2, r3
  08c5c	0a000022	 beq         |$LN6@UfnPdd_IOC|
  08c60	e59d2024	 ldr         r2, [sp, #0x24]
  08c64	e3a0382a	 mov         r3, #0x2A, 16
  08c68	e3833010	 orr         r3, r3, #0x10
  08c6c	e1520003	 cmp         r2, r3
  08c70	0a000039	 beq         |$LN1@UfnPdd_IOC|
  08c74	ea00003a	 b           |$LN12@UfnPdd_IOC|
  08c78		 |$LN11@UfnPdd_IOC|

; 3035 :     {
; 3036 : 
; 3037 : #if 0  // WM7 specific
; 3038 :         case IOCTL_UFN_PDD_SET_INTERFACE: {
; 3039 :             DWORD dwParam;
; 3040 :             DWORD dwInterface;
; 3041 :             DWORD dwAlternateSetting;
; 3042 : 
; 3043 :             if ( source != BUS_IOCTL ||
; 3044 :                  pOutBuffer != NULL || outSize != 0 ||
; 3045 :                  pInBuffer == NULL || inSize != sizeof(DWORD) ) {
; 3046 :                 break;
; 3047 :             }
; 3048 : 
; 3049 :             dwParam = *(DWORD*)pInBuffer;
; 3050 :             dwInterface = UFN_GET_INTERFACE_NUMBER( dwParam );
; 3051 :             dwAlternateSetting = UFN_GET_INTERFACE_ALTERNATE_SETTING( dwParam );
; 3052 :             break;
; 3053 :         }
; 3054 : 
; 3055 :         case IOCTL_UFN_PDD_SET_CONFIGURATION: {
; 3056 :             DWORD dwConfiguration;
; 3057 : 
; 3058 :             if ( source != BUS_IOCTL ||
; 3059 :                  pOutBuffer != NULL || outSize != 0 ||
; 3060 :                  pInBuffer == NULL || inSize != sizeof(DWORD) ) {
; 3061 :                 break;
; 3062 :             }
; 3063 : 
; 3064 :             dwConfiguration = *(DWORD*)pInBuffer;
; 3065 : 
; 3066 :             break;
; 3067 :         }
; 3068 : #endif
; 3069 :         case IOCTL_UFN_GET_PDD_INFO:
; 3070 :             if (source != BUS_IOCTL)

  08c78	e59d303c	 ldr         r3, [sp, #0x3C]
  08c7c	e3530000	 cmp         r3, #0
  08c80	0a000000	 beq         |$LN10@UfnPdd_IOC|

; 3071 :                 break;

  08c84	ea000036	 b           |$LN12@UfnPdd_IOC|
  08c88		 |$LN10@UfnPdd_IOC|

; 3072 :             if (pOutBuffer == NULL || outSize < sizeof(UFN_PDD_INFO))

  08c88	e59d304c	 ldr         r3, [sp, #0x4C]
  08c8c	e3530000	 cmp         r3, #0
  08c90	0a000002	 beq         |$LN8@UfnPdd_IOC|
  08c94	e59d3050	 ldr         r3, [sp, #0x50]
  08c98	e353000c	 cmp         r3, #0xC
  08c9c	2a000000	 bcs         |$LN9@UfnPdd_IOC|
  08ca0		 |$LN8@UfnPdd_IOC|

; 3073 :                 break;

  08ca0	ea00002f	 b           |$LN12@UfnPdd_IOC|
  08ca4		 |$LN9@UfnPdd_IOC|

; 3074 :             info.InterfaceType = Internal;

  08ca4	e3a03000	 mov         r3, #0
  08ca8	e58d3008	 str         r3, [sp, #8]

; 3075 :             info.BusNumber = 0;

  08cac	e3a03000	 mov         r3, #0
  08cb0	e58d300c	 str         r3, [sp, #0xC]

; 3076 :             info.dwAlignment = sizeof(DWORD);

  08cb4	e3a03004	 mov         r3, #4
  08cb8	e58d3010	 str         r3, [sp, #0x10]

; 3077 :             if (!CeSafeCopyMemory(
; 3078 :                 pOutBuffer, &info, sizeof(UFN_PDD_INFO)
; 3079 :                 ))

  08cbc	e3a0200c	 mov         r2, #0xC
  08cc0	e28d1008	 add         r1, sp, #8
  08cc4	e59d004c	 ldr         r0, [sp, #0x4C]
  08cc8	eb000000	 bl          CeSafeCopyMemory
  08ccc	e58d0028	 str         r0, [sp, #0x28]
  08cd0	e59d3028	 ldr         r3, [sp, #0x28]
  08cd4	e3530000	 cmp         r3, #0
  08cd8	1a000000	 bne         |$LN7@UfnPdd_IOC|

; 3080 :                 break;

  08cdc	ea000020	 b           |$LN12@UfnPdd_IOC|
  08ce0		 |$LN7@UfnPdd_IOC|

; 3081 :             rc = ERROR_SUCCESS;

  08ce0	e3a03000	 mov         r3, #0
  08ce4	e58d3000	 str         r3, [sp]

; 3082 :             break;

  08ce8	ea00001d	 b           |$LN12@UfnPdd_IOC|
  08cec		 |$LN6@UfnPdd_IOC|

; 3083 :         case IOCTL_BUS_GET_POWER_STATE:
; 3084 :             if (source != MDD_IOCTL)

  08cec	e59d303c	 ldr         r3, [sp, #0x3C]
  08cf0	e3530002	 cmp         r3, #2
  08cf4	0a000000	 beq         |$LN5@UfnPdd_IOC|

; 3085 :                 break;

  08cf8	ea000019	 b           |$LN12@UfnPdd_IOC|
  08cfc		 |$LN5@UfnPdd_IOC|

; 3086 :             if (pInBuffer == NULL || inSize < sizeof(CE_BUS_POWER_STATE))

  08cfc	e59d3044	 ldr         r3, [sp, #0x44]
  08d00	e3530000	 cmp         r3, #0
  08d04	0a000002	 beq         |$LN3@UfnPdd_IOC|
  08d08	e59d3048	 ldr         r3, [sp, #0x48]
  08d0c	e353000c	 cmp         r3, #0xC
  08d10	2a000000	 bcs         |$LN4@UfnPdd_IOC|
  08d14		 |$LN3@UfnPdd_IOC|

; 3087 :                 break;

  08d14	ea000012	 b           |$LN12@UfnPdd_IOC|
  08d18		 |$LN4@UfnPdd_IOC|

; 3088 :             pBusPowerState =(CE_BUS_POWER_STATE*)pInBuffer;

  08d18	e59d3044	 ldr         r3, [sp, #0x44]
  08d1c	e58d3004	 str         r3, [sp, #4]

; 3089 :             if (!CeSafeCopyMemory(
; 3090 :                 pBusPowerState->lpceDevicePowerState, &pPdd->pmPowerState,
; 3091 :                 sizeof(CEDEVICE_POWER_STATE)
; 3092 :                 ))

  08d20	e3a02004	 mov         r2, #4
  08d24	e59d3014	 ldr         r3, [sp, #0x14]
  08d28	e2831060	 add         r1, r3, #0x60
  08d2c	e59d3004	 ldr         r3, [sp, #4]
  08d30	e2833004	 add         r3, r3, #4
  08d34	e5930000	 ldr         r0, [r3]
  08d38	eb000000	 bl          CeSafeCopyMemory
  08d3c	e58d002c	 str         r0, [sp, #0x2C]
  08d40	e59d302c	 ldr         r3, [sp, #0x2C]
  08d44	e3530000	 cmp         r3, #0
  08d48	1a000000	 bne         |$LN2@UfnPdd_IOC|

; 3093 :                 break;

  08d4c	ea000004	 b           |$LN12@UfnPdd_IOC|
  08d50		 |$LN2@UfnPdd_IOC|

; 3094 :             rc = ERROR_SUCCESS;

  08d50	e3a03000	 mov         r3, #0
  08d54	e58d3000	 str         r3, [sp]

; 3095 :             break;

  08d58	ea000001	 b           |$LN12@UfnPdd_IOC|
  08d5c		 |$LN1@UfnPdd_IOC|

; 3096 :         case IOCTL_BUS_SET_POWER_STATE:
; 3097 : #if 0
; 3098 :             if (source == MDD_IOCTL)
; 3099 :                 break;
; 3100 :             if (pInBuffer == NULL || inSize < sizeof(CE_BUS_POWER_STATE))
; 3101 :                 break;
; 3102 :             pBusPowerState =(CE_BUS_POWER_STATE*)pInBuffer;
; 3103 :             if (!CeSafeCopyMemory(
; 3104 :                 &devicePowerState, pBusPowerState->lpceDevicePowerState,
; 3105 :                 sizeof(CEDEVICE_POWER_STATE)
; 3106 :                 ))
; 3107 :                 break;
; 3108 :             SetPowerState(pPdd , devicePowerState);
; 3109 : #endif
; 3110 :             rc = ERROR_SUCCESS;

  08d5c	e3a03000	 mov         r3, #0
  08d60	e58d3000	 str         r3, [sp]
  08d64		 |$LN12@UfnPdd_IOC|

; 3111 :             break;
; 3112 : 
; 3113 : #if 0
; 3114 :         case IOCTL_DVFS_OPMNOTIFY:
; 3115 :         {
; 3116 :             IOCTL_DVFS_OPMNOTIFY_IN *pData =(IOCTL_DVFS_OPMNOTIFY_IN*)pInBuffer;
; 3117 :             
; 3118 :             DEBUGMSG(ZONE_DVFS, (L"HSUSBFN: received dvfs notification (%d)\r\n",
; 3119 :                 pData->notification)
; 3120 :                 );
; 3121 :             
; 3122 :             // this operation should be atomic to handle a corner case
; 3123 :             EnterCriticalSection(&pPdd->csDVFS);
; 3124 :             
; 3125 :             // signal dvfs thread to stall SDRAM access
; 3126 :             if (pData->notification == kPreNotice)
; 3127 :             {
; 3128 :                 pPdd->bDVFSActive = TRUE;
; 3129 :                 pPdd->bDVFSAck = FALSE;
; 3130 :                 
; 3131 :                 // check and halt dma if active
; 3132 :                 //
; 3133 :                 DEBUGMSG(ZONE_DVFS, (L"HSUSBFN: Halting DMA for DVFS, "
; 3134 :                     L"active dma count=%d\r\n",
; 3135 :                     pPdd->nActiveDmaCount)
; 3136 :                     );
; 3137 :                 CheckAndHaltAllDma(pPdd, TRUE);                
; 3138 :             }
; 3139 :             else if (pData->notification == kPostNotice)
; 3140 :             {
; 3141 :                 pPdd->bDVFSActive = FALSE;
; 3142 :                 pPdd->bDVFSAck = FALSE;
; 3143 :                                 
; 3144 :                 CheckAndHaltAllDma(pPdd, FALSE);
; 3145 :                 DEBUGMSG(ZONE_DVFS, (L"HSUSBFN: Post-DVFS transition done\r\n"));
; 3146 :             }
; 3147 :             LeaveCriticalSection(&pPdd->csDVFS);
; 3148 :             rc = ERROR_SUCCESS;
; 3149 :         }
; 3150 :             break;
; 3151 : 
; 3152 :         case IOCTL_DVFS_INITINFO:
; 3153 :         {
; 3154 :             IOCTL_DVFS_INITINFO_OUT *pInitInfo =(IOCTL_DVFS_INITINFO_OUT*)pOutBuffer;
; 3155 :             pInitInfo->notifyMode = kAsynchronous;
; 3156 :             pInitInfo->notifyOrder = pPdd->nDVFSOrder;
; 3157 :             rc = ERROR_SUCCESS;
; 3158 :         }
; 3159 :             break;
; 3160 :         
; 3161 :         case IOCTL_DVFS_OPMINFO:
; 3162 :         {
; 3163 :             IOCTL_DVFS_OPMINFO_IN *pData =(IOCTL_DVFS_OPMINFO_IN*)pInBuffer;
; 3164 :             CopyDVFSHandles(pPdd, pData->processId, 
; 3165 :                 pData->hAckEvent, pData->hOpmEvent
; 3166 :                 );
; 3167 :             rc = ERROR_SUCCESS;
; 3168 :         }
; 3169 :             break;
; 3170 : 
; 3171 :         case IOCTL_DVFS_DETACH:
; 3172 :         {
; 3173 :             // close all handles
; 3174 :             if (pPdd->hDVFSAckEvent != NULL)
; 3175 :             {
; 3176 :                 CloseHandle(pPdd->hDVFSAckEvent);
; 3177 :                 pPdd->hDVFSAckEvent = NULL;
; 3178 :             }
; 3179 :             
; 3180 :             if (pPdd->hDVFSActivityEvent!= NULL)
; 3181 :             {
; 3182 :                 CloseHandle(pPdd->hDVFSActivityEvent);
; 3183 :                 pPdd->hDVFSActivityEvent = NULL;
; 3184 :             }
; 3185 : 
; 3186 :             pPdd->bDVFSAck = FALSE;
; 3187 :             rc = ERROR_SUCCESS;
; 3188 :         }
; 3189 :             break;
; 3190 : 
; 3191 :         case IOCTL_DVFS_HALTMODE:
; 3192 :         {
; 3193 :             if (pPdd->bDVFSActive == FALSE)
; 3194 :             {                
; 3195 :                 IOCTL_DVFS_HALTMODE_IN *pData =(IOCTL_DVFS_HALTMODE_IN*)pInBuffer;
; 3196 :                 pPdd->rxHaltMode = pData->rxMode;
; 3197 :                 pPdd->txHaltMode = pData->txMode;
; 3198 :                 rc = ERROR_SUCCESS;
; 3199 :             }
; 3200 :             break;
; 3201 :         }
; 3202 : #endif
; 3203 :     }
; 3204 :     
; 3205 :     return rc;

  08d64	e59d3000	 ldr         r3, [sp]
  08d68	e58d3018	 str         r3, [sp, #0x18]

; 3206 : }

  08d6c	e59d0018	 ldr         r0, [sp, #0x18]
  08d70	e28dd030	 add         sp, sp, #0x30
  08d74	e89d6000	 ldmia       sp, {sp, lr}
  08d78	e12fff1e	 bx          lr
  08d7c		 |$LN23@UfnPdd_IOC|
  08d7c		 |$LN24@UfnPdd_IOC|
  08d7c	00000000	 DCD         |??_C@_1CG@MFDGCJBH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AN?$AA?6?$AA?$AA@|
  08d80		 |$LN25@UfnPdd_IOC|
  08d80	00000000	 DCD         |dpCurSettings|
  08d84		 |$M50777|

			 ENDP  ; |UfnPdd_IOControl|

	EXPORT	|??_C@_1CA@ICFKCCJL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_Deinit|
	IMPORT	|LocalFree|
	IMPORT	|DeleteCriticalSection|
	IMPORT	|VirtualFree|
	IMPORT	|FreePhysMem|
	IMPORT	|CloseHandle|

  00160			 AREA	 |.pdata|, PDATA
|$T50792| DCD	|$LN15@UfnPdd_Dei|
	DCD	0x40008c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@ICFKCCJL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  08d84			 AREA	 |.text|, CODE, ARM

  08d84		 |UfnPdd_Deinit| PROC

; 3228 : {

  08d84		 |$LN15@UfnPdd_Dei|
  08d84	e1a0c00d	 mov         r12, sp
  08d88	e92d0001	 stmdb       sp!, {r0}
  08d8c	e92d5000	 stmdb       sp!, {r12, lr}
  08d90	e24dd010	 sub         sp, sp, #0x10
  08d94		 |$M50789|

; 3229 :     MUsbFnPdd_t *pPdd = pPddContext;

  08d94	e59d3018	 ldr         r3, [sp, #0x18]
  08d98	e58d3000	 str         r3, [sp]

; 3230 :     DEBUGMSG(ZONE_FUNCTION, (L"UfnPdd_Deinit\r\n"));

  08d9c	e59f320c	 ldr         r3, [pc, #0x20C]
  08da0	e5933440	 ldr         r3, [r3, #0x440]
  08da4	e3130a01	 tst         r3, #1, 20
  08da8	0a00000f	 beq         |$LN11@UfnPdd_Dei|
  08dac	e59f31fc	 ldr         r3, [pc, #0x1FC]
  08db0	e5933440	 ldr         r3, [r3, #0x440]
  08db4	e3130801	 tst         r3, #1, 16
  08db8	0a000004	 beq         |$LN9@UfnPdd_Dei|
  08dbc	e59f01e8	 ldr         r0, [pc, #0x1E8]
  08dc0	eb000000	 bl          CeLogMsg
  08dc4	e3a03001	 mov         r3, #1
  08dc8	e58d3008	 str         r3, [sp, #8]
  08dcc	ea000003	 b           |$LN10@UfnPdd_Dei|
  08dd0		 |$LN9@UfnPdd_Dei|
  08dd0	e59f01d4	 ldr         r0, [pc, #0x1D4]
  08dd4	eb000000	 bl          NKDbgPrintfW
  08dd8	e3a03000	 mov         r3, #0
  08ddc	e58d3008	 str         r3, [sp, #8]
  08de0		 |$LN10@UfnPdd_Dei|
  08de0	e3a03001	 mov         r3, #1
  08de4	e58d300c	 str         r3, [sp, #0xC]
  08de8	ea000001	 b           |$LN12@UfnPdd_Dei|
  08dec		 |$LN11@UfnPdd_Dei|
  08dec	e3a03000	 mov         r3, #0
  08df0	e58d300c	 str         r3, [sp, #0xC]
  08df4		 |$LN12@UfnPdd_Dei|

; 3231 : 
; 3232 :     if( pPdd->hVbusChargeEvent != INVALID_HANDLE_VALUE )

  08df4	e59d3000	 ldr         r3, [sp]
  08df8	e2833b01	 add         r3, r3, #1, 22
  08dfc	e2833028	 add         r3, r3, #0x28
  08e00	e5933000	 ldr         r3, [r3]
  08e04	e3730001	 cmn         r3, #1
  08e08	0a000009	 beq         |$LN6@UfnPdd_Dei|

; 3233 :     {
; 3234 :         CloseHandle(pPdd->hVbusChargeEvent);

  08e0c	e59d3000	 ldr         r3, [sp]
  08e10	e2833b01	 add         r3, r3, #1, 22
  08e14	e2833028	 add         r3, r3, #0x28
  08e18	e5930000	 ldr         r0, [r3]
  08e1c	eb000000	 bl          CloseHandle

; 3235 :         pPdd->hVbusChargeEvent = INVALID_HANDLE_VALUE;

  08e20	e59d3000	 ldr         r3, [sp]
  08e24	e2833b01	 add         r3, r3, #1, 22
  08e28	e2832028	 add         r2, r3, #0x28
  08e2c	e3e03000	 mvn         r3, #0
  08e30	e5823000	 str         r3, [r2]
  08e34		 |$LN6@UfnPdd_Dei|

; 3236 :     }    
; 3237 : 
; 3238 :     // Release DMA Rx0 buffer...
; 3239 :     if (pPdd->pDmaRx0Buffer != NULL)

  08e34	e59d3000	 ldr         r3, [sp]
  08e38	e2833048	 add         r3, r3, #0x48
  08e3c	e5933000	 ldr         r3, [r3]
  08e40	e3530000	 cmp         r3, #0
  08e44	0a00000b	 beq         |$LN5@UfnPdd_Dei|

; 3240 :     {
; 3241 :         FreePhysMem(pPdd->pDmaRx0Buffer);

  08e48	e59d3000	 ldr         r3, [sp]
  08e4c	e2833048	 add         r3, r3, #0x48
  08e50	e5930000	 ldr         r0, [r3]
  08e54	eb000000	 bl          FreePhysMem

; 3242 :         pPdd->pDmaRx0Buffer = NULL;

  08e58	e59d3000	 ldr         r3, [sp]
  08e5c	e2832048	 add         r2, r3, #0x48
  08e60	e3a03000	 mov         r3, #0
  08e64	e5823000	 str         r3, [r2]

; 3243 :         pPdd->paDmaRx0Buffer = 0;

  08e68	e59d3000	 ldr         r3, [sp]
  08e6c	e283204c	 add         r2, r3, #0x4C
  08e70	e3a03000	 mov         r3, #0
  08e74	e5823000	 str         r3, [r2]
  08e78		 |$LN5@UfnPdd_Dei|

; 3244 :     }
; 3245 :     
; 3246 :     // Release DMA Tx0 buffer...
; 3247 :     if (pPdd->pDmaTx0Buffer != NULL)

  08e78	e59d3000	 ldr         r3, [sp]
  08e7c	e2833050	 add         r3, r3, #0x50
  08e80	e5933000	 ldr         r3, [r3]
  08e84	e3530000	 cmp         r3, #0
  08e88	0a00000b	 beq         |$LN4@UfnPdd_Dei|

; 3248 :     {
; 3249 :         FreePhysMem(pPdd->pDmaTx0Buffer);

  08e8c	e59d3000	 ldr         r3, [sp]
  08e90	e2833050	 add         r3, r3, #0x50
  08e94	e5930000	 ldr         r0, [r3]
  08e98	eb000000	 bl          FreePhysMem

; 3250 :         pPdd->pDmaTx0Buffer = NULL;

  08e9c	e59d3000	 ldr         r3, [sp]
  08ea0	e2832050	 add         r2, r3, #0x50
  08ea4	e3a03000	 mov         r3, #0
  08ea8	e5823000	 str         r3, [r2]

; 3251 :         pPdd->paDmaTx0Buffer = 0;

  08eac	e59d3000	 ldr         r3, [sp]
  08eb0	e2832054	 add         r2, r3, #0x54
  08eb4	e3a03000	 mov         r3, #0
  08eb8	e5823000	 str         r3, [r2]
  08ebc		 |$LN4@UfnPdd_Dei|

; 3252 :     }
; 3253 :     
; 3254 :     if (pPdd->pCachedDmaTx0Buffer != NULL)

  08ebc	e59d3000	 ldr         r3, [sp]
  08ec0	e2833058	 add         r3, r3, #0x58
  08ec4	e5933000	 ldr         r3, [r3]
  08ec8	e3530000	 cmp         r3, #0
  08ecc	0a00000b	 beq         |$LN3@UfnPdd_Dei|

; 3255 :     {
; 3256 :         VirtualFree(pPdd->pCachedDmaTx0Buffer, pPdd->tx0DmaBufferSize, MEM_RELEASE);

  08ed0	e3a02902	 mov         r2, #2, 18
  08ed4	e59d3000	 ldr         r3, [sp]
  08ed8	e2833018	 add         r3, r3, #0x18
  08edc	e5931000	 ldr         r1, [r3]
  08ee0	e59d3000	 ldr         r3, [sp]
  08ee4	e2833058	 add         r3, r3, #0x58
  08ee8	e5930000	 ldr         r0, [r3]
  08eec	eb000000	 bl          VirtualFree

; 3257 :         pPdd->pCachedDmaTx0Buffer = NULL;

  08ef0	e59d3000	 ldr         r3, [sp]
  08ef4	e2832058	 add         r2, r3, #0x58
  08ef8	e3a03000	 mov         r3, #0
  08efc	e5823000	 str         r3, [r2]
  08f00		 |$LN3@UfnPdd_Dei|

; 3258 :     }
; 3259 :     
; 3260 :     pPdd->bDVFSAck = FALSE;

  08f00	e59d3000	 ldr         r3, [sp]
  08f04	e2833b01	 add         r3, r3, #1, 22
  08f08	e2832004	 add         r2, r3, #4
  08f0c	e3a03000	 mov         r3, #0
  08f10	e5823000	 str         r3, [r2]

; 3261 :     // release dvfs resources
; 3262 :     if (pPdd->hDVFSAckEvent != NULL) CloseHandle(pPdd->hDVFSAckEvent);

  08f14	e59d3000	 ldr         r3, [sp]
  08f18	e2833b01	 add         r3, r3, #1, 22
  08f1c	e283300c	 add         r3, r3, #0xC
  08f20	e5933000	 ldr         r3, [r3]
  08f24	e3530000	 cmp         r3, #0
  08f28	0a000004	 beq         |$LN2@UfnPdd_Dei|
  08f2c	e59d3000	 ldr         r3, [sp]
  08f30	e2833b01	 add         r3, r3, #1, 22
  08f34	e283300c	 add         r3, r3, #0xC
  08f38	e5930000	 ldr         r0, [r3]
  08f3c	eb000000	 bl          CloseHandle
  08f40		 |$LN2@UfnPdd_Dei|

; 3263 :     if (pPdd->hDVFSActivityEvent != NULL) CloseHandle(pPdd->hDVFSActivityEvent);

  08f40	e59d3000	 ldr         r3, [sp]
  08f44	e2833e41	 add         r3, r3, #0x41, 28
  08f48	e5933000	 ldr         r3, [r3]
  08f4c	e3530000	 cmp         r3, #0
  08f50	0a000003	 beq         |$LN1@UfnPdd_Dei|
  08f54	e59d3000	 ldr         r3, [sp]
  08f58	e2833e41	 add         r3, r3, #0x41, 28
  08f5c	e5930000	 ldr         r0, [r3]
  08f60	eb000000	 bl          CloseHandle
  08f64		 |$LN1@UfnPdd_Dei|

; 3264 : 
; 3265 :     DeleteCriticalSection(&pPdd->csDVFS);

  08f64	e59d3000	 ldr         r3, [sp]
  08f68	e2833b01	 add         r3, r3, #1, 22
  08f6c	e2830014	 add         r0, r3, #0x14
  08f70	eb000000	 bl          DeleteCriticalSection

; 3266 : 
; 3267 : 
; 3268 :     DeleteCriticalSection(&pPdd->dmaCS);

  08f74	e59d3000	 ldr         r3, [sp]
  08f78	e2830034	 add         r0, r3, #0x34
  08f7c	eb000000	 bl          DeleteCriticalSection

; 3269 :     // Delete critical section
; 3270 :     DeleteCriticalSection(&pPdd->epCS);

  08f80	e59d3000	 ldr         r3, [sp]
  08f84	e2830078	 add         r0, r3, #0x78
  08f88	eb000000	 bl          DeleteCriticalSection

; 3271 :     
; 3272 :     // Free PDD context
; 3273 :     LocalFree(pPdd);

  08f8c	e59d0000	 ldr         r0, [sp]
  08f90	eb000000	 bl          LocalFree

; 3274 :     
; 3275 :     // Done
; 3276 :     return ERROR_SUCCESS;

  08f94	e3a03000	 mov         r3, #0
  08f98	e58d3004	 str         r3, [sp, #4]

; 3277 : }

  08f9c	e59d0004	 ldr         r0, [sp, #4]
  08fa0	e28dd010	 add         sp, sp, #0x10
  08fa4	e89d6000	 ldmia       sp, {sp, lr}
  08fa8	e12fff1e	 bx          lr
  08fac		 |$LN16@UfnPdd_Dei|
  08fac		 |$LN17@UfnPdd_Dei|
  08fac	00000000	 DCD         |??_C@_1CA@ICFKCCJL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  08fb0		 |$LN18@UfnPdd_Dei|
  08fb0	00000000	 DCD         |dpCurSettings|
  08fb4		 |$M50790|

			 ENDP  ; |UfnPdd_Deinit|

	EXPORT	|??_C@_1DE@FIKMDGMP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_DeregisterDevice|

  00168			 AREA	 |.pdata|, PDATA
|$T50805| DCD	|$LN11@UfnPdd_Der|
	DCD	0x40004c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@FIKMDGMP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "D", 0x0, "e", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  08fb4			 AREA	 |.text|, CODE, ARM

  08fb4		 |UfnPdd_DeregisterDevice| PROC

; 3300 : {

  08fb4		 |$LN11@UfnPdd_Der|
  08fb4	e1a0c00d	 mov         r12, sp
  08fb8	e92d0001	 stmdb       sp!, {r0}
  08fbc	e92d5000	 stmdb       sp!, {r12, lr}
  08fc0	e24dd010	 sub         sp, sp, #0x10
  08fc4		 |$M50802|

; 3301 :     MUsbFnPdd_t *pPdd = pPddContext;

  08fc4	e59d3018	 ldr         r3, [sp, #0x18]
  08fc8	e58d3000	 str         r3, [sp]

; 3302 :     DEBUGMSG(ZONE_FUNCTION, (L"UfnPdd_DeregisterDevice\r\n"));

  08fcc	e59f310c	 ldr         r3, [pc, #0x10C]
  08fd0	e5933440	 ldr         r3, [r3, #0x440]
  08fd4	e3130a01	 tst         r3, #1, 20
  08fd8	0a00000f	 beq         |$LN7@UfnPdd_Der|
  08fdc	e59f30fc	 ldr         r3, [pc, #0xFC]
  08fe0	e5933440	 ldr         r3, [r3, #0x440]
  08fe4	e3130801	 tst         r3, #1, 16
  08fe8	0a000004	 beq         |$LN5@UfnPdd_Der|
  08fec	e59f00e8	 ldr         r0, [pc, #0xE8]
  08ff0	eb000000	 bl          CeLogMsg
  08ff4	e3a03001	 mov         r3, #1
  08ff8	e58d3008	 str         r3, [sp, #8]
  08ffc	ea000003	 b           |$LN6@UfnPdd_Der|
  09000		 |$LN5@UfnPdd_Der|
  09000	e59f00d4	 ldr         r0, [pc, #0xD4]
  09004	eb000000	 bl          NKDbgPrintfW
  09008	e3a03000	 mov         r3, #0
  0900c	e58d3008	 str         r3, [sp, #8]
  09010		 |$LN6@UfnPdd_Der|
  09010	e3a03001	 mov         r3, #1
  09014	e58d300c	 str         r3, [sp, #0xC]
  09018	ea000001	 b           |$LN8@UfnPdd_Der|
  0901c		 |$LN7@UfnPdd_Der|
  0901c	e3a03000	 mov         r3, #0
  09020	e58d300c	 str         r3, [sp, #0xC]
  09024		 |$LN8@UfnPdd_Der|

; 3303 :     
; 3304 :     if (pPdd->tx0DmaEp != -1)

  09024	e59d3000	 ldr         r3, [sp]
  09028	e2833010	 add         r3, r3, #0x10
  0902c	e5933000	 ldr         r3, [r3]
  09030	e3730001	 cmn         r3, #1
  09034	0a00000a	 beq         |$LN2@UfnPdd_Der|

; 3305 :     {
; 3306 :         pPdd->ep[pPdd->tx0DmaEp].dmaEnabled = FALSE;

  09038	e59d3000	 ldr         r3, [sp]
  0903c	e28310ac	 add         r1, r3, #0xAC
  09040	e59d3000	 ldr         r3, [sp]
  09044	e2833010	 add         r3, r3, #0x10
  09048	e5932000	 ldr         r2, [r3]
  0904c	e3a03034	 mov         r3, #0x34
  09050	e0030392	 mul         r3, r2, r3
  09054	e0813003	 add         r3, r1, r3
  09058	e2832010	 add         r2, r3, #0x10
  0905c	e3a03000	 mov         r3, #0
  09060	e5823000	 str         r3, [r2]
  09064		 |$LN2@UfnPdd_Der|

; 3307 :     }
; 3308 :     
; 3309 :     if (pPdd->rx0DmaEp != -1)

  09064	e59d3000	 ldr         r3, [sp]
  09068	e283300c	 add         r3, r3, #0xC
  0906c	e5933000	 ldr         r3, [r3]
  09070	e3730001	 cmn         r3, #1
  09074	0a00000a	 beq         |$LN1@UfnPdd_Der|

; 3310 :     {
; 3311 :         pPdd->ep[pPdd->rx0DmaEp].dmaEnabled = FALSE;

  09078	e59d3000	 ldr         r3, [sp]
  0907c	e28310ac	 add         r1, r3, #0xAC
  09080	e59d3000	 ldr         r3, [sp]
  09084	e283300c	 add         r3, r3, #0xC
  09088	e5932000	 ldr         r2, [r3]
  0908c	e3a03034	 mov         r3, #0x34
  09090	e0030392	 mul         r3, r2, r3
  09094	e0813003	 add         r3, r1, r3
  09098	e2832010	 add         r2, r3, #0x10
  0909c	e3a03000	 mov         r3, #0
  090a0	e5823000	 str         r3, [r2]
  090a4		 |$LN1@UfnPdd_Der|

; 3312 :     }
; 3313 :     
; 3314 :     pPdd->tx0DmaEp = (DWORD)-1;

  090a4	e59d3000	 ldr         r3, [sp]
  090a8	e2832010	 add         r2, r3, #0x10
  090ac	e3e03000	 mvn         r3, #0
  090b0	e5823000	 str         r3, [r2]

; 3315 :     pPdd->rx0DmaEp = (DWORD)-1;

  090b4	e59d3000	 ldr         r3, [sp]
  090b8	e283200c	 add         r2, r3, #0xC
  090bc	e3e03000	 mvn         r3, #0
  090c0	e5823000	 str         r3, [r2]

; 3316 :         
; 3317 :     return ERROR_SUCCESS;

  090c4	e3a03000	 mov         r3, #0
  090c8	e58d3004	 str         r3, [sp, #4]

; 3318 : }

  090cc	e59d0004	 ldr         r0, [sp, #4]
  090d0	e28dd010	 add         sp, sp, #0x10
  090d4	e89d6000	 ldmia       sp, {sp, lr}
  090d8	e12fff1e	 bx          lr
  090dc		 |$LN12@UfnPdd_Der|
  090dc		 |$LN13@UfnPdd_Der|
  090dc	00000000	 DCD         |??_C@_1DE@FIKMDGMP@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  090e0		 |$LN14@UfnPdd_Der|
  090e0	00000000	 DCD         |dpCurSettings|
  090e4		 |$M50803|

			 ENDP  ; |UfnPdd_DeregisterDevice|

	EXPORT	|??_C@_1BM@ELBPNMDN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAo?$AAp?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_Stop|

  00170			 AREA	 |.pdata|, PDATA
|$T50818| DCD	|$LN9@UfnPdd_Sto|
	DCD	0x40003504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@ELBPNMDN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAo?$AAp?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "t", 0x0, "o", 0x0, "p", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  090e4			 AREA	 |.text|, CODE, ARM

  090e4		 |UfnPdd_Stop| PROC

; 3342 : {

  090e4		 |$LN9@UfnPdd_Sto|
  090e4	e1a0c00d	 mov         r12, sp
  090e8	e92d0001	 stmdb       sp!, {r0}
  090ec	e92d5000	 stmdb       sp!, {r12, lr}
  090f0	e24dd010	 sub         sp, sp, #0x10
  090f4		 |$M50815|

; 3343 :     MUsbFnPdd_t *pPdd = pPddContext;    

  090f4	e59d3018	 ldr         r3, [sp, #0x18]
  090f8	e58d3000	 str         r3, [sp]

; 3344 :     DEBUGMSG(ZONE_FUNCTION, (L"UfnPdd_Stop\r\n"));

  090fc	e59f30b0	 ldr         r3, [pc, #0xB0]
  09100	e5933440	 ldr         r3, [r3, #0x440]
  09104	e3130a01	 tst         r3, #1, 20
  09108	0a00000f	 beq         |$LN5@UfnPdd_Sto|
  0910c	e59f30a0	 ldr         r3, [pc, #0xA0]
  09110	e5933440	 ldr         r3, [r3, #0x440]
  09114	e3130801	 tst         r3, #1, 16
  09118	0a000004	 beq         |$LN3@UfnPdd_Sto|
  0911c	e59f008c	 ldr         r0, [pc, #0x8C]
  09120	eb000000	 bl          CeLogMsg
  09124	e3a03001	 mov         r3, #1
  09128	e58d3008	 str         r3, [sp, #8]
  0912c	ea000003	 b           |$LN4@UfnPdd_Sto|
  09130		 |$LN3@UfnPdd_Sto|
  09130	e59f0078	 ldr         r0, [pc, #0x78]
  09134	eb000000	 bl          NKDbgPrintfW
  09138	e3a03000	 mov         r3, #0
  0913c	e58d3008	 str         r3, [sp, #8]
  09140		 |$LN4@UfnPdd_Sto|
  09140	e3a03001	 mov         r3, #1
  09144	e58d300c	 str         r3, [sp, #0xC]
  09148	ea000001	 b           |$LN6@UfnPdd_Sto|
  0914c		 |$LN5@UfnPdd_Sto|
  0914c	e3a03000	 mov         r3, #0
  09150	e58d300c	 str         r3, [sp, #0xC]
  09154		 |$LN6@UfnPdd_Sto|

; 3345 :     pPdd->devState &= ~(MUSB_DEVSTAT_ATT | 
; 3346 :                         MUSB_DEVSTAT_B_HNP_ENABLE | 
; 3347 :                         MUSB_DEVSTAT_A_HNP_SUPPORT |
; 3348 :                         MUSB_DEVSTAT_A_ALT_HNP_SUPPORT);

  09154	e59d3000	 ldr         r3, [sp]
  09158	e283306c	 add         r3, r3, #0x6C
  0915c	e5932000	 ldr         r2, [r3]
  09160	e3e03c03	 mvn         r3, #3, 24
  09164	e2233081	 eor         r3, r3, #0x81
  09168	e0022003	 and         r2, r2, r3
  0916c	e59d3000	 ldr         r3, [sp]
  09170	e283306c	 add         r3, r3, #0x6C
  09174	e5832000	 str         r2, [r3]

; 3349 : 
; 3350 :     BusChildIoControl(pPdd->hParentBus,IOCTL_USBOTG_REQUEST_STOP,NULL,0);    

  09178	e3a03000	 mov         r3, #0
  0917c	e3a02000	 mov         r2, #0
  09180	e59f1024	 ldr         r1, [pc, #0x24]
  09184	e59d0000	 ldr         r0, [sp]
  09188	e2800030	 add         r0, r0, #0x30
  0918c	e5900000	 ldr         r0, [r0]
  09190	eb000000	 bl          BusChildIoControl

; 3351 : 
; 3352 :     // Done
; 3353 :     return ERROR_SUCCESS;

  09194	e3a03000	 mov         r3, #0
  09198	e58d3004	 str         r3, [sp, #4]

; 3354 : }

  0919c	e59d0004	 ldr         r0, [sp, #4]
  091a0	e28dd010	 add         sp, sp, #0x10
  091a4	e89d6000	 ldmia       sp, {sp, lr}
  091a8	e12fff1e	 bx          lr
  091ac		 |$LN10@UfnPdd_Sto|
  091ac		 |$LN11@UfnPdd_Sto|
  091ac	00222024	 DCD         0x222024
  091b0		 |$LN12@UfnPdd_Sto|
  091b0	00000000	 DCD         |??_C@_1BM@ELBPNMDN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAo?$AAp?$AA?$AN?$AA?6?$AA?$AA@|
  091b4		 |$LN13@UfnPdd_Sto|
  091b4	00000000	 DCD         |dpCurSettings|
  091b8		 |$M50816|

			 ENDP  ; |UfnPdd_Stop|

	EXPORT	|??_C@_1EK@LENJEBGM@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_DeinitEndpoint|

  00178			 AREA	 |.pdata|, PDATA
|$T50832| DCD	|$LN12@UfnPdd_Dei@2|
	DCD	0x40008604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@LENJEBGM@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "E", 0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i"
	DCB	0x0, "n", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "n"
	DCB	0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  091b8			 AREA	 |.text|, CODE, ARM

  091b8		 |UfnPdd_DeinitEndpoint| PROC

; 3379 : {

  091b8		 |$LN12@UfnPdd_Dei@2|
  091b8	e1a0c00d	 mov         r12, sp
  091bc	e92d0003	 stmdb       sp!, {r0, r1}
  091c0	e92d5000	 stmdb       sp!, {r12, lr}
  091c4	e24dd01c	 sub         sp, sp, #0x1C
  091c8		 |$M50829|

; 3380 :     MUsbFnPdd_t *pPdd = pPddContext;

  091c8	e59d3024	 ldr         r3, [sp, #0x24]
  091cc	e58d300c	 str         r3, [sp, #0xC]

; 3381 :     PCSP_MUSB_GEN_REGS pGenRegs = pPdd->pUSBContext->pUsbGenRegs;

  091d0	e59d300c	 ldr         r3, [sp, #0xC]
  091d4	e2833020	 add         r3, r3, #0x20
  091d8	e5933000	 ldr         r3, [r3]
  091dc	e2833020	 add         r3, r3, #0x20
  091e0	e5933000	 ldr         r3, [r3]
  091e4	e58d3004	 str         r3, [sp, #4]

; 3382 :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUSBContext->pUsbCsrRegs;

  091e8	e59d300c	 ldr         r3, [sp, #0xC]
  091ec	e2833020	 add         r3, r3, #0x20
  091f0	e5933000	 ldr         r3, [r3]
  091f4	e283301c	 add         r3, r3, #0x1C
  091f8	e5933000	 ldr         r3, [r3]
  091fc	e58d3000	 str         r3, [sp]

; 3383 :     PHSMUSB_T pOTG = pPdd->pUSBContext;

  09200	e59d300c	 ldr         r3, [sp, #0xC]
  09204	e2833020	 add         r3, r3, #0x20
  09208	e5933000	 ldr         r3, [r3]
  0920c	e58d3008	 str         r3, [sp, #8]

; 3384 :     DEBUGMSG(ZONE_INFO, (L"UfnPdd_DeinitEndpoint: endpoint %d\r\n", endpoint));

  09210	e59f31b4	 ldr         r3, [pc, #0x1B4]
  09214	e5933440	 ldr         r3, [r3, #0x440]
  09218	e3130b01	 tst         r3, #1, 22
  0921c	0a000011	 beq         |$LN8@UfnPdd_Dei@2|
  09220	e59f31a4	 ldr         r3, [pc, #0x1A4]
  09224	e5933440	 ldr         r3, [r3, #0x440]
  09228	e3130801	 tst         r3, #1, 16
  0922c	0a000005	 beq         |$LN6@UfnPdd_Dei@2|
  09230	e59d1028	 ldr         r1, [sp, #0x28]
  09234	e59f018c	 ldr         r0, [pc, #0x18C]
  09238	eb000000	 bl          CeLogMsg
  0923c	e3a03001	 mov         r3, #1
  09240	e58d3014	 str         r3, [sp, #0x14]
  09244	ea000004	 b           |$LN7@UfnPdd_Dei@2|
  09248		 |$LN6@UfnPdd_Dei@2|
  09248	e59d1028	 ldr         r1, [sp, #0x28]
  0924c	e59f0174	 ldr         r0, [pc, #0x174]
  09250	eb000000	 bl          NKDbgPrintfW
  09254	e3a03000	 mov         r3, #0
  09258	e58d3014	 str         r3, [sp, #0x14]
  0925c		 |$LN7@UfnPdd_Dei@2|
  0925c	e3a03001	 mov         r3, #1
  09260	e58d3018	 str         r3, [sp, #0x18]
  09264	ea000001	 b           |$LN9@UfnPdd_Dei@2|
  09268		 |$LN8@UfnPdd_Dei@2|
  09268	e3a03000	 mov         r3, #0
  0926c	e58d3018	 str         r3, [sp, #0x18]
  09270		 |$LN9@UfnPdd_Dei@2|

; 3385 : 
; 3386 :     EnterCriticalSection(&pOTG->regCS);

  09270	e59d3008	 ldr         r3, [sp, #8]
  09274	e2830038	 add         r0, r3, #0x38
  09278	eb000000	 bl          EnterCriticalSection

; 3387 :     if(pOTG->bClockStatus)

  0927c	e59d3008	 ldr         r3, [sp, #8]
  09280	e2833060	 add         r3, r3, #0x60
  09284	e5933000	 ldr         r3, [r3]
  09288	e3530000	 cmp         r3, #0
  0928c	0a000015	 beq         |$LN3@UfnPdd_Dei@2|

; 3388 :     {
; 3389 :     /* Flush the fifo, otherwise transmit error on the host during Device->=Host HNP */
; 3390 :     OUTREG16(&pGenRegs->Index, endpoint);  /* select endpoint to access rxFIFOxx registers */

  09290	e59d3028	 ldr         r3, [sp, #0x28]
  09294	e1a02803	 mov         r2, r3, lsl #16
  09298	e1a02822	 mov         r2, r2, lsr #16
  0929c	e59d3004	 ldr         r3, [sp, #4]
  092a0	e283300e	 add         r3, r3, #0xE
  092a4	e1c320b0	 strh        r2, [r3]

; 3391 :     OUTREG16(&pCsrRegs->ep[endpoint].RxCSR, RXCSR_P_FLUSHFIFO | RXCSR_P_CLRDATATOG);

  092a8	e59d1028	 ldr         r1, [sp, #0x28]
  092ac	e3a03010	 mov         r3, #0x10
  092b0	e0020391	 mul         r2, r1, r3
  092b4	e59d3000	 ldr         r3, [sp]
  092b8	e0833002	 add         r3, r3, r2
  092bc	e2832006	 add         r2, r3, #6
  092c0	e3a03090	 mov         r3, #0x90
  092c4	e1c230b0	 strh        r3, [r2]

; 3392 :     OUTREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_FLUSHFIFO | TXCSR_P_CLRDATATOG);

  092c8	e59d1028	 ldr         r1, [sp, #0x28]
  092cc	e3a03010	 mov         r3, #0x10
  092d0	e0020391	 mul         r2, r1, r3
  092d4	e59d3000	 ldr         r3, [sp]
  092d8	e0833002	 add         r3, r3, r2
  092dc	e2832002	 add         r2, r3, #2
  092e0	e3a03048	 mov         r3, #0x48
  092e4	e1c230b0	 strh        r3, [r2]
  092e8		 |$LN3@UfnPdd_Dei@2|

; 3393 :     }
; 3394 :     LeaveCriticalSection(&pOTG->regCS);

  092e8	e59d3008	 ldr         r3, [sp, #8]
  092ec	e2830038	 add         r0, r3, #0x38
  092f0	eb000000	 bl          LeaveCriticalSection

; 3395 :     
; 3396 :     if (pPdd->tx0DmaEp == endpoint)

  092f4	e59d300c	 ldr         r3, [sp, #0xC]
  092f8	e2833010	 add         r3, r3, #0x10
  092fc	e5932000	 ldr         r2, [r3]
  09300	e59d3028	 ldr         r3, [sp, #0x28]
  09304	e1520003	 cmp         r2, r3
  09308	1a00000c	 bne         |$LN2@UfnPdd_Dei@2|

; 3397 :     {
; 3398 :         pPdd->ep[endpoint].dmaEnabled = FALSE;

  0930c	e59d300c	 ldr         r3, [sp, #0xC]
  09310	e28310ac	 add         r1, r3, #0xAC
  09314	e59d2028	 ldr         r2, [sp, #0x28]
  09318	e3a03034	 mov         r3, #0x34
  0931c	e0030392	 mul         r3, r2, r3
  09320	e0813003	 add         r3, r1, r3
  09324	e2832010	 add         r2, r3, #0x10
  09328	e3a03000	 mov         r3, #0
  0932c	e5823000	 str         r3, [r2]

; 3399 :         pPdd->tx0DmaEp = (DWORD)-1;

  09330	e59d300c	 ldr         r3, [sp, #0xC]
  09334	e2832010	 add         r2, r3, #0x10
  09338	e3e03000	 mvn         r3, #0
  0933c	e5823000	 str         r3, [r2]
  09340		 |$LN2@UfnPdd_Dei@2|

; 3400 :     }
; 3401 :     
; 3402 :     if (pPdd->rx0DmaEp == endpoint)

  09340	e59d300c	 ldr         r3, [sp, #0xC]
  09344	e283300c	 add         r3, r3, #0xC
  09348	e5932000	 ldr         r2, [r3]
  0934c	e59d3028	 ldr         r3, [sp, #0x28]
  09350	e1520003	 cmp         r2, r3
  09354	1a00000c	 bne         |$LN1@UfnPdd_Dei@2|

; 3403 :     {
; 3404 :         pPdd->ep[endpoint].dmaEnabled = FALSE;

  09358	e59d300c	 ldr         r3, [sp, #0xC]
  0935c	e28310ac	 add         r1, r3, #0xAC
  09360	e59d2028	 ldr         r2, [sp, #0x28]
  09364	e3a03034	 mov         r3, #0x34
  09368	e0030392	 mul         r3, r2, r3
  0936c	e0813003	 add         r3, r1, r3
  09370	e2832010	 add         r2, r3, #0x10
  09374	e3a03000	 mov         r3, #0
  09378	e5823000	 str         r3, [r2]

; 3405 :         pPdd->rx0DmaEp = (DWORD)-1;

  0937c	e59d300c	 ldr         r3, [sp, #0xC]
  09380	e283200c	 add         r2, r3, #0xC
  09384	e3e03000	 mvn         r3, #0
  09388	e5823000	 str         r3, [r2]
  0938c		 |$LN1@UfnPdd_Dei@2|

; 3406 :     }
; 3407 :     pPdd->ep[endpoint].dmaDVFSstate = DVFS_NODMA;

  0938c	e59d300c	 ldr         r3, [sp, #0xC]
  09390	e28310ac	 add         r1, r3, #0xAC
  09394	e59d2028	 ldr         r2, [sp, #0x28]
  09398	e3a03034	 mov         r3, #0x34
  0939c	e0030392	 mul         r3, r2, r3
  093a0	e0813003	 add         r3, r1, r3
  093a4	e283202c	 add         r2, r3, #0x2C
  093a8	e3a03000	 mov         r3, #0
  093ac	e5c23000	 strb        r3, [r2]

; 3408 :     
; 3409 :     // Done
; 3410 :     return ERROR_SUCCESS;

  093b0	e3a03000	 mov         r3, #0
  093b4	e58d3010	 str         r3, [sp, #0x10]

; 3411 : }

  093b8	e59d0010	 ldr         r0, [sp, #0x10]
  093bc	e28dd01c	 add         sp, sp, #0x1C
  093c0	e89d6000	 ldmia       sp, {sp, lr}
  093c4	e12fff1e	 bx          lr
  093c8		 |$LN13@UfnPdd_Dei@2|
  093c8		 |$LN14@UfnPdd_Dei@2|
  093c8	00000000	 DCD         |??_C@_1EK@LENJEBGM@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5@|
  093cc		 |$LN15@UfnPdd_Dei@2|
  093cc	00000000	 DCD         |dpCurSettings|
  093d0		 |$M50830|

			 ENDP  ; |UfnPdd_DeinitEndpoint|

	EXPORT	|??_C@_1EK@OCHCGGME@?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAt?$AAy@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@HDFOCFAA@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@KCLHNGIJ@?$AAT?$AAX?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@FOEHEHMF@?$AAR?$AAX?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@PKFILEPA@?$AAB?$AAu?$AAl?$AAk?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@IAKFPHDB@?$AAT?$AAx?$AAF?$AAI?$AAF?$AAO?$AAa?$AAd?$AAd?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@NOGHKHDN@?$AAT?$AAx?$AAF?$AAI?$AAF?$AAO?$AAs?$AAz?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@JOHLNAB@?$AAR?$AAx?$AAF?$AAI?$AAF?$AAO?$AAa?$AAd?$AAd?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@NLNLKJHD@?$AAR?$AAx?$AAF?$AAI?$AAF?$AAO?$AAs?$AAz?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@FIIFEBDM@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IC@ILFKGKDM@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AA?$CF?$AAd@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_InitEndpoint|

  00180			 AREA	 |.pdata|, PDATA
|$T50919| DCD	|$LN102@UfnPdd_Ini@2|
	DCD	0x4003dc04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@OCHCGGME@?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAt?$AAy@| DCB "U"
	DCB	0x0, "n", 0x0, "s", 0x0, "u", 0x0, "p", 0x0, "p", 0x0, "o"
	DCB	0x0, "r", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "e"
	DCB	0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, " ", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "t"
	DCB	0x0, "y", 0x0, "p", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@HDFOCFAA@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, " ", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o"
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@KCLHNGIJ@?$AAT?$AAX?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "X", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " "
	DCB	0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@FOEHEHMF@?$AAR?$AAX?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "X", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " "
	DCB	0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@PKFILEPA@?$AAB?$AAu?$AAl?$AAk?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "u", 0x0, "l", 0x0, "k", 0x0, " ", 0x0, "e", 0x0, "n"
	DCB	0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@IAKFPHDB@?$AAT?$AAx?$AAF?$AAI?$AAF?$AAO?$AAa?$AAd?$AAd?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "x", 0x0, "F", 0x0, "I", 0x0, "F", 0x0, "O", 0x0, "a"
	DCB	0x0, "d", 0x0, "d", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@NOGHKHDN@?$AAT?$AAx?$AAF?$AAI?$AAF?$AAO?$AAs?$AAz?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "x", 0x0, "F", 0x0, "I", 0x0, "F", 0x0, "O", 0x0, "s"
	DCB	0x0, "z", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@JOHLNAB@?$AAR?$AAx?$AAF?$AAI?$AAF?$AAO?$AAa?$AAd?$AAd?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "x", 0x0, "F", 0x0, "I", 0x0, "F", 0x0, "O", 0x0, "a"
	DCB	0x0, "d", 0x0, "d", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@NLNLKJHD@?$AAR?$AAx?$AAF?$AAI?$AAF?$AAO?$AAs?$AAz?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "x", 0x0, "F", 0x0, "I", 0x0, "F", 0x0, "O", 0x0, "s"
	DCB	0x0, "z", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@FIIFEBDM@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u"
	DCB	0x0, "p", 0x0, "t", 0x0, " ", 0x0, "e", 0x0, "n", 0x0, "d"
	DCB	0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@ILFKGKDM@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AA?$CF?$AAd@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "E", 0x0, "n"
	DCB	0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "p"
	DCB	0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, " ", 0x0, "s", 0x0, "p", 0x0, "e"
	DCB	0x0, "e", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, " ", 0x0, "M", 0x0, "a", 0x0, "x", 0x0, "P"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t", 0x0, "S"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  093d0			 AREA	 |.text|, CODE, ARM

  093d0		 |UfnPdd_InitEndpoint| PROC

; 3450 : {

  093d0		 |$LN102@UfnPdd_Ini@2|
  093d0	e1a0c00d	 mov         r12, sp
  093d4	e92d000f	 stmdb       sp!, {r0 - r3}
  093d8	e92d5000	 stmdb       sp!, {r12, lr}
  093dc	e24dd0c4	 sub         sp, sp, #0xC4
  093e0		 |$M50916|

; 3451 :     MUsbFnPdd_t *pPdd = pPddContext;

  093e0	e59d30cc	 ldr         r3, [sp, #0xCC]
  093e4	e58d300c	 str         r3, [sp, #0xC]

; 3452 :     PCSP_MUSB_GEN_REGS pGenRegs = pPdd->pUSBContext->pUsbGenRegs;

  093e8	e59d300c	 ldr         r3, [sp, #0xC]
  093ec	e2833020	 add         r3, r3, #0x20
  093f0	e5933000	 ldr         r3, [r3]
  093f4	e2833020	 add         r3, r3, #0x20
  093f8	e5933000	 ldr         r3, [r3]
  093fc	e58d3004	 str         r3, [sp, #4]

; 3453 :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUSBContext->pUsbCsrRegs;

  09400	e59d300c	 ldr         r3, [sp, #0xC]
  09404	e2833020	 add         r3, r3, #0x20
  09408	e5933000	 ldr         r3, [r3]
  0940c	e283301c	 add         r3, r3, #0x1C
  09410	e5933000	 ldr         r3, [r3]
  09414	e58d3000	 str         r3, [sp]

; 3454 :     UCHAR epTransferType;
; 3455 :     
; 3456 : 	UNREFERENCED_PARAMETER(alternateSetting);
; 3457 : 	UNREFERENCED_PARAMETER(interfaceNumber);
; 3458 : 	UNREFERENCED_PARAMETER(configValue);
; 3459 : 	UNREFERENCED_PARAMETER(pReserved);
; 3460 : 
; 3461 :     DEBUGMSG(ZONE_FUNCTION, (L"UfnPdd_InitEndpoint: endpoint %d  speed: %d  MaxPacketSize: %d\r\n",
; 3462 :         endpoint, speed, pEPDesc->wMaxPacketSize));

  09418	e59f3ef4	 ldr         r3, [pc, #0xEF4]
  0941c	e5933440	 ldr         r3, [r3, #0x440]
  09420	e3130a01	 tst         r3, #1, 20
  09424	0a000023	 beq         |$LN24@UfnPdd_Ini@2|
  09428	e59f3ee4	 ldr         r3, [pc, #0xEE4]
  0942c	e5933440	 ldr         r3, [r3, #0x440]
  09430	e3130801	 tst         r3, #1, 16
  09434	0a00000e	 beq         |$LN22@UfnPdd_Ini@2|
  09438	e59d30d8	 ldr         r3, [sp, #0xD8]
  0943c	e2831004	 add         r1, r3, #4
  09440	e5d13001	 ldrb        r3, [r1, #1]
  09444	e1a03403	 mov         r3, r3, lsl #8
  09448	e1a02803	 mov         r2, r3, lsl #16
  0944c	e1a02822	 mov         r2, r2, lsr #16
  09450	e5d13000	 ldrb        r3, [r1]
  09454	e1833002	 orr         r3, r3, r2
  09458	e59d20d4	 ldr         r2, [sp, #0xD4]
  0945c	e59d10d0	 ldr         r1, [sp, #0xD0]
  09460	e59f0ed4	 ldr         r0, [pc, #0xED4]
  09464	eb000000	 bl          CeLogMsg
  09468	e3a03001	 mov         r3, #1
  0946c	e58d3014	 str         r3, [sp, #0x14]
  09470	ea00000d	 b           |$LN23@UfnPdd_Ini@2|
  09474		 |$LN22@UfnPdd_Ini@2|
  09474	e59d30d8	 ldr         r3, [sp, #0xD8]
  09478	e2831004	 add         r1, r3, #4
  0947c	e5d13001	 ldrb        r3, [r1, #1]
  09480	e1a03403	 mov         r3, r3, lsl #8
  09484	e1a02803	 mov         r2, r3, lsl #16
  09488	e1a02822	 mov         r2, r2, lsr #16
  0948c	e5d13000	 ldrb        r3, [r1]
  09490	e1833002	 orr         r3, r3, r2
  09494	e59d20d4	 ldr         r2, [sp, #0xD4]
  09498	e59d10d0	 ldr         r1, [sp, #0xD0]
  0949c	e59f0e98	 ldr         r0, [pc, #0xE98]
  094a0	eb000000	 bl          NKDbgPrintfW
  094a4	e3a03000	 mov         r3, #0
  094a8	e58d3014	 str         r3, [sp, #0x14]
  094ac		 |$LN23@UfnPdd_Ini@2|
  094ac	e3a03001	 mov         r3, #1
  094b0	e58d3018	 str         r3, [sp, #0x18]
  094b4	ea000001	 b           |$LN25@UfnPdd_Ini@2|
  094b8		 |$LN24@UfnPdd_Ini@2|
  094b8	e3a03000	 mov         r3, #0
  094bc	e58d3018	 str         r3, [sp, #0x18]
  094c0		 |$LN25@UfnPdd_Ini@2|

; 3463 :     
; 3464 :     pPdd->ep[endpoint].maxPacketSize = pEPDesc->wMaxPacketSize;

  094c0	e59d30d8	 ldr         r3, [sp, #0xD8]
  094c4	e2830004	 add         r0, r3, #4
  094c8	e59d300c	 ldr         r3, [sp, #0xC]
  094cc	e28310ac	 add         r1, r3, #0xAC
  094d0	e59d20d0	 ldr         r2, [sp, #0xD0]
  094d4	e3a03034	 mov         r3, #0x34
  094d8	e0030392	 mul         r3, r2, r3
  094dc	e0811003	 add         r1, r1, r3
  094e0	e5d03001	 ldrb        r3, [r0, #1]
  094e4	e1a03403	 mov         r3, r3, lsl #8
  094e8	e1a02803	 mov         r2, r3, lsl #16
  094ec	e1a02822	 mov         r2, r2, lsr #16
  094f0	e5d03000	 ldrb        r3, [r0]
  094f4	e1833002	 orr         r3, r3, r2
  094f8	e1c130b0	 strh        r3, [r1]

; 3465 :     pPdd->ep[endpoint].dirRx =(pEPDesc->bEndpointAddress & 0x80) ? FALSE : TRUE;

  094fc	e59d30d8	 ldr         r3, [sp, #0xD8]
  09500	e2833002	 add         r3, r3, #2
  09504	e5d33000	 ldrb        r3, [r3]
  09508	e3130080	 tst         r3, #0x80
  0950c	0a000002	 beq         |$LN26@UfnPdd_Ini@2|
  09510	e3a03000	 mov         r3, #0
  09514	e58d301c	 str         r3, [sp, #0x1C]
  09518	ea000001	 b           |$LN27@UfnPdd_Ini@2|
  0951c		 |$LN26@UfnPdd_Ini@2|
  0951c	e3a03001	 mov         r3, #1
  09520	e58d301c	 str         r3, [sp, #0x1C]
  09524		 |$LN27@UfnPdd_Ini@2|
  09524	e59d300c	 ldr         r3, [sp, #0xC]
  09528	e28310ac	 add         r1, r3, #0xAC
  0952c	e59d20d0	 ldr         r2, [sp, #0xD0]
  09530	e3a03034	 mov         r3, #0x34
  09534	e0030392	 mul         r3, r2, r3
  09538	e0813003	 add         r3, r1, r3
  0953c	e2832004	 add         r2, r3, #4
  09540	e59d301c	 ldr         r3, [sp, #0x1C]
  09544	e5823000	 str         r3, [r2]

; 3466 :     pPdd->ep[endpoint].dmaDVFSstate = DVFS_NODMA;

  09548	e59d300c	 ldr         r3, [sp, #0xC]
  0954c	e28310ac	 add         r1, r3, #0xAC
  09550	e59d20d0	 ldr         r2, [sp, #0xD0]
  09554	e3a03034	 mov         r3, #0x34
  09558	e0030392	 mul         r3, r2, r3
  0955c	e0813003	 add         r3, r1, r3
  09560	e283202c	 add         r2, r3, #0x2C
  09564	e3a03000	 mov         r3, #0
  09568	e5c23000	 strb        r3, [r2]

; 3467 :     pPdd->ep[endpoint].bMassStore = FALSE;

  0956c	e59d300c	 ldr         r3, [sp, #0xC]
  09570	e28310ac	 add         r1, r3, #0xAC
  09574	e59d20d0	 ldr         r2, [sp, #0xD0]
  09578	e3a03034	 mov         r3, #0x34
  0957c	e0030392	 mul         r3, r2, r3
  09580	e0813003	 add         r3, r1, r3
  09584	e283200c	 add         r2, r3, #0xC
  09588	e3a03000	 mov         r3, #0
  0958c	e5823000	 str         r3, [r2]

; 3468 :     epTransferType = pEPDesc->bmAttributes & 0x3;

  09590	e59d30d8	 ldr         r3, [sp, #0xD8]
  09594	e2833003	 add         r3, r3, #3
  09598	e5d33000	 ldrb        r3, [r3]
  0959c	e2033003	 and         r3, r3, #3
  095a0	e20330ff	 and         r3, r3, #0xFF
  095a4	e5cd3008	 strb        r3, [sp, #8]

; 3469 :     
; 3470 :     
; 3471 :     if (pPdd->pfnEnUSBClock)

  095a8	e59d300c	 ldr         r3, [sp, #0xC]
  095ac	e283302c	 add         r3, r3, #0x2C
  095b0	e5933000	 ldr         r3, [r3]
  095b4	e3530000	 cmp         r3, #0
  095b8	0a000005	 beq         |$LN19@UfnPdd_Ini@2|

; 3472 :         pPdd->pfnEnUSBClock(TRUE);

  095bc	e3a00001	 mov         r0, #1
  095c0	e59d300c	 ldr         r3, [sp, #0xC]
  095c4	e283302c	 add         r3, r3, #0x2C
  095c8	e5933000	 ldr         r3, [r3]
  095cc	e1a0e00f	 mov         lr, pc
  095d0	e12fff13	 bx          r3
  095d4		 |$LN19@UfnPdd_Ini@2|

; 3473 :     EnterCriticalSection(&pPdd->epCS);

  095d4	e59d300c	 ldr         r3, [sp, #0xC]
  095d8	e2830078	 add         r0, r3, #0x78
  095dc	eb000000	 bl          EnterCriticalSection

; 3474 :     OUTREG16(&pGenRegs->Index, endpoint);  /* select endpoint to access rxFIFOxx registers */

  095e0	e59d30d0	 ldr         r3, [sp, #0xD0]
  095e4	e1a02803	 mov         r2, r3, lsl #16
  095e8	e1a02822	 mov         r2, r2, lsr #16
  095ec	e59d3004	 ldr         r3, [sp, #4]
  095f0	e283300e	 add         r3, r3, #0xE
  095f4	e1c320b0	 strh        r2, [r3]

; 3475 :         
; 3476 :     switch (epTransferType)

  095f8	e5dd3008	 ldrb        r3, [sp, #8]
  095fc	e58d3020	 str         r3, [sp, #0x20]
  09600	e59d3020	 ldr         r3, [sp, #0x20]
  09604	e3530000	 cmp         r3, #0
  09608	0a000282	 beq         |$LN3@UfnPdd_Ini@2|
  0960c	e59d3020	 ldr         r3, [sp, #0x20]
  09610	e3530002	 cmp         r3, #2
  09614	0a0000ff	 beq         |$LN12@UfnPdd_Ini@2|
  09618	e59d3020	 ldr         r3, [sp, #0x20]
  0961c	e3530003	 cmp         r3, #3
  09620	0a000000	 beq         |$LN16@UfnPdd_Ini@2|
  09624	ea000314	 b           |$LN1@UfnPdd_Ini@2|
  09628		 |$LN16@UfnPdd_Ini@2|

; 3477 :     {
; 3478 :         case EP_TYPE_INTERRUPT:
; 3479 :             DEBUGMSG(ZONE_INFO, (L"Interrupt endpoint\r\n"));

  09628	e59f3ce4	 ldr         r3, [pc, #0xCE4]
  0962c	e5933440	 ldr         r3, [r3, #0x440]
  09630	e3130b01	 tst         r3, #1, 22
  09634	0a00000f	 beq         |$LN30@UfnPdd_Ini@2|
  09638	e59f3cd4	 ldr         r3, [pc, #0xCD4]
  0963c	e5933440	 ldr         r3, [r3, #0x440]
  09640	e3130801	 tst         r3, #1, 16
  09644	0a000004	 beq         |$LN28@UfnPdd_Ini@2|
  09648	e59f0ce8	 ldr         r0, [pc, #0xCE8]
  0964c	eb000000	 bl          CeLogMsg
  09650	e3a03001	 mov         r3, #1
  09654	e58d3024	 str         r3, [sp, #0x24]
  09658	ea000003	 b           |$LN29@UfnPdd_Ini@2|
  0965c		 |$LN28@UfnPdd_Ini@2|
  0965c	e59f0cd4	 ldr         r0, [pc, #0xCD4]
  09660	eb000000	 bl          NKDbgPrintfW
  09664	e3a03000	 mov         r3, #0
  09668	e58d3024	 str         r3, [sp, #0x24]
  0966c		 |$LN29@UfnPdd_Ini@2|
  0966c	e3a03001	 mov         r3, #1
  09670	e58d3028	 str         r3, [sp, #0x28]
  09674	ea000001	 b           |$LN31@UfnPdd_Ini@2|
  09678		 |$LN30@UfnPdd_Ini@2|
  09678	e3a03000	 mov         r3, #0
  0967c	e58d3028	 str         r3, [sp, #0x28]
  09680		 |$LN31@UfnPdd_Ini@2|

; 3480 :             if (pPdd->ep[endpoint].dirRx)

  09680	e59d300c	 ldr         r3, [sp, #0xC]
  09684	e28310ac	 add         r1, r3, #0xAC
  09688	e59d20d0	 ldr         r2, [sp, #0xD0]
  0968c	e3a03034	 mov         r3, #0x34
  09690	e0030392	 mul         r3, r2, r3
  09694	e0813003	 add         r3, r1, r3
  09698	e2833004	 add         r3, r3, #4
  0969c	e5933000	 ldr         r3, [r3]
  096a0	e3530000	 cmp         r3, #0
  096a4	0a000077	 beq         |$LN15@UfnPdd_Ini@2|

; 3481 :             {
; 3482 :                 OUTREG8(&pGenRegs->RxFIFOsz, MUSB_FIFOSZ_512_BYTE);

  096a8	e59d3004	 ldr         r3, [sp, #4]
  096ac	e2832063	 add         r2, r3, #0x63
  096b0	e3a03006	 mov         r3, #6
  096b4	e5c23000	 strb        r3, [r2]

; 3483 :                 OUTREG16(&pGenRegs->RxFIFOadd, CalcFIFOAddr(endpoint,pPdd->ep[endpoint].dirRx));

  096b8	e59d300c	 ldr         r3, [sp, #0xC]
  096bc	e28310ac	 add         r1, r3, #0xAC
  096c0	e59d20d0	 ldr         r2, [sp, #0xD0]
  096c4	e3a03034	 mov         r3, #0x34
  096c8	e0030392	 mul         r3, r2, r3
  096cc	e0813003	 add         r3, r1, r3
  096d0	e2833004	 add         r3, r3, #4
  096d4	e5931000	 ldr         r1, [r3]
  096d8	e59d00d0	 ldr         r0, [sp, #0xD0]
  096dc	eb000000	 bl          CalcFIFOAddr
  096e0	e58d002c	 str         r0, [sp, #0x2C]
  096e4	e59d302c	 ldr         r3, [sp, #0x2C]
  096e8	e1a02803	 mov         r2, r3, lsl #16
  096ec	e1a02822	 mov         r2, r2, lsr #16
  096f0	e59d3004	 ldr         r3, [sp, #4]
  096f4	e2833066	 add         r3, r3, #0x66
  096f8	e1c320b0	 strh        r2, [r3]

; 3484 :                 OUTREG16(&pCsrRegs->ep[endpoint].RxMaxP, pPdd->ep[endpoint].maxPacketSize);

  096fc	e59d300c	 ldr         r3, [sp, #0xC]
  09700	e28310ac	 add         r1, r3, #0xAC
  09704	e59d20d0	 ldr         r2, [sp, #0xD0]
  09708	e3a03034	 mov         r3, #0x34
  0970c	e0030392	 mul         r3, r2, r3
  09710	e0810003	 add         r0, r1, r3
  09714	e59d10d0	 ldr         r1, [sp, #0xD0]
  09718	e3a03010	 mov         r3, #0x10
  0971c	e0020391	 mul         r2, r1, r3
  09720	e59d3000	 ldr         r3, [sp]
  09724	e0833002	 add         r3, r3, r2
  09728	e2832004	 add         r2, r3, #4
  0972c	e1d030b0	 ldrh        r3, [r0]
  09730	e1c230b0	 strh        r3, [r2]

; 3485 :                 OUTREG16(&pCsrRegs->ep[endpoint].RxCSR, RXCSR_P_FLUSHFIFO | RXCSR_P_CLRDATATOG);

  09734	e59d10d0	 ldr         r1, [sp, #0xD0]
  09738	e3a03010	 mov         r3, #0x10
  0973c	e0020391	 mul         r2, r1, r3
  09740	e59d3000	 ldr         r3, [sp]
  09744	e0833002	 add         r3, r3, r2
  09748	e2832006	 add         r2, r3, #6
  0974c	e3a03090	 mov         r3, #0x90
  09750	e1c230b0	 strh        r3, [r2]

; 3486 :                 
; 3487 :                 DEBUGMSG(ZONE_INFO, (L"RxFIFOsz=%d\r\n", INREG8(&pGenRegs->RxFIFOsz)));

  09754	e59f3bb8	 ldr         r3, [pc, #0xBB8]
  09758	e5933440	 ldr         r3, [r3, #0x440]
  0975c	e3130b01	 tst         r3, #1, 22
  09760	0a000015	 beq         |$LN34@UfnPdd_Ini@2|
  09764	e59f3ba8	 ldr         r3, [pc, #0xBA8]
  09768	e5933440	 ldr         r3, [r3, #0x440]
  0976c	e3130801	 tst         r3, #1, 16
  09770	0a000007	 beq         |$LN32@UfnPdd_Ini@2|
  09774	e59d3004	 ldr         r3, [sp, #4]
  09778	e2833063	 add         r3, r3, #0x63
  0977c	e5d31000	 ldrb        r1, [r3]
  09780	e59f0b9c	 ldr         r0, [pc, #0xB9C]
  09784	eb000000	 bl          CeLogMsg
  09788	e3a03001	 mov         r3, #1
  0978c	e58d3030	 str         r3, [sp, #0x30]
  09790	ea000006	 b           |$LN33@UfnPdd_Ini@2|
  09794		 |$LN32@UfnPdd_Ini@2|
  09794	e59d3004	 ldr         r3, [sp, #4]
  09798	e2833063	 add         r3, r3, #0x63
  0979c	e5d31000	 ldrb        r1, [r3]
  097a0	e59f0b7c	 ldr         r0, [pc, #0xB7C]
  097a4	eb000000	 bl          NKDbgPrintfW
  097a8	e3a03000	 mov         r3, #0
  097ac	e58d3030	 str         r3, [sp, #0x30]
  097b0		 |$LN33@UfnPdd_Ini@2|
  097b0	e3a03001	 mov         r3, #1
  097b4	e58d3034	 str         r3, [sp, #0x34]
  097b8	ea000001	 b           |$LN35@UfnPdd_Ini@2|
  097bc		 |$LN34@UfnPdd_Ini@2|
  097bc	e3a03000	 mov         r3, #0
  097c0	e58d3034	 str         r3, [sp, #0x34]
  097c4		 |$LN35@UfnPdd_Ini@2|

; 3488 :                 DEBUGMSG(ZONE_INFO, (L"RxFIFOadd=%d\r\n", INREG16(&pGenRegs->RxFIFOadd)));

  097c4	e59f3b48	 ldr         r3, [pc, #0xB48]
  097c8	e5933440	 ldr         r3, [r3, #0x440]
  097cc	e3130b01	 tst         r3, #1, 22
  097d0	0a000015	 beq         |$LN38@UfnPdd_Ini@2|
  097d4	e59f3b38	 ldr         r3, [pc, #0xB38]
  097d8	e5933440	 ldr         r3, [r3, #0x440]
  097dc	e3130801	 tst         r3, #1, 16
  097e0	0a000007	 beq         |$LN36@UfnPdd_Ini@2|
  097e4	e59d3004	 ldr         r3, [sp, #4]
  097e8	e2833066	 add         r3, r3, #0x66
  097ec	e1d310b0	 ldrh        r1, [r3]
  097f0	e59f0b28	 ldr         r0, [pc, #0xB28]
  097f4	eb000000	 bl          CeLogMsg
  097f8	e3a03001	 mov         r3, #1
  097fc	e58d3038	 str         r3, [sp, #0x38]
  09800	ea000006	 b           |$LN37@UfnPdd_Ini@2|
  09804		 |$LN36@UfnPdd_Ini@2|
  09804	e59d3004	 ldr         r3, [sp, #4]
  09808	e2833066	 add         r3, r3, #0x66
  0980c	e1d310b0	 ldrh        r1, [r3]
  09810	e59f0b08	 ldr         r0, [pc, #0xB08]
  09814	eb000000	 bl          NKDbgPrintfW
  09818	e3a03000	 mov         r3, #0
  0981c	e58d3038	 str         r3, [sp, #0x38]
  09820		 |$LN37@UfnPdd_Ini@2|
  09820	e3a03001	 mov         r3, #1
  09824	e58d303c	 str         r3, [sp, #0x3C]
  09828	ea000001	 b           |$LN39@UfnPdd_Ini@2|
  0982c		 |$LN38@UfnPdd_Ini@2|
  0982c	e3a03000	 mov         r3, #0
  09830	e58d303c	 str         r3, [sp, #0x3C]
  09834		 |$LN39@UfnPdd_Ini@2|

; 3489 :                 
; 3490 :                 // Doesn't support PING in high speed mode
; 3491 :                 if (speed == BS_HIGH_SPEED)

  09834	e59d30d4	 ldr         r3, [sp, #0xD4]
  09838	e3530002	 cmp         r3, #2
  0983c	1a000010	 bne         |$LN14@UfnPdd_Ini@2|

; 3492 :                     SETREG16(&pCsrRegs->ep[endpoint].RxCSR, RXCSR_P_DISNYET);

  09840	e59d10d0	 ldr         r1, [sp, #0xD0]
  09844	e3a03010	 mov         r3, #0x10
  09848	e0020391	 mul         r2, r1, r3
  0984c	e59d3000	 ldr         r3, [sp]
  09850	e0833002	 add         r3, r3, r2
  09854	e2833006	 add         r3, r3, #6
  09858	e1d330b0	 ldrh        r3, [r3]
  0985c	e3833a01	 orr         r3, r3, #1, 20
  09860	e1a00803	 mov         r0, r3, lsl #16
  09864	e1a00820	 mov         r0, r0, lsr #16
  09868	e59d10d0	 ldr         r1, [sp, #0xD0]
  0986c	e3a03010	 mov         r3, #0x10
  09870	e0020391	 mul         r2, r1, r3
  09874	e59d3000	 ldr         r3, [sp]
  09878	e0833002	 add         r3, r3, r2
  0987c	e2833006	 add         r3, r3, #6
  09880	e1c300b0	 strh        r0, [r3]
  09884		 |$LN14@UfnPdd_Ini@2|

; 3493 :             }
; 3494 :             else

  09884	ea000062	 b           |$LN13@UfnPdd_Ini@2|
  09888		 |$LN15@UfnPdd_Ini@2|

; 3495 :             {
; 3496 :                 OUTREG8(&pGenRegs->TxFIFOsz, MUSB_FIFOSZ_512_BYTE);

  09888	e59d3004	 ldr         r3, [sp, #4]
  0988c	e2832062	 add         r2, r3, #0x62
  09890	e3a03006	 mov         r3, #6
  09894	e5c23000	 strb        r3, [r2]

; 3497 :                 OUTREG16(&pGenRegs->TxFIFOadd, CalcFIFOAddr(endpoint,pPdd->ep[endpoint].dirRx));

  09898	e59d300c	 ldr         r3, [sp, #0xC]
  0989c	e28310ac	 add         r1, r3, #0xAC
  098a0	e59d20d0	 ldr         r2, [sp, #0xD0]
  098a4	e3a03034	 mov         r3, #0x34
  098a8	e0030392	 mul         r3, r2, r3
  098ac	e0813003	 add         r3, r1, r3
  098b0	e2833004	 add         r3, r3, #4
  098b4	e5931000	 ldr         r1, [r3]
  098b8	e59d00d0	 ldr         r0, [sp, #0xD0]
  098bc	eb000000	 bl          CalcFIFOAddr
  098c0	e58d0040	 str         r0, [sp, #0x40]
  098c4	e59d3040	 ldr         r3, [sp, #0x40]
  098c8	e1a02803	 mov         r2, r3, lsl #16
  098cc	e1a02822	 mov         r2, r2, lsr #16
  098d0	e59d3004	 ldr         r3, [sp, #4]
  098d4	e2833064	 add         r3, r3, #0x64
  098d8	e1c320b0	 strh        r2, [r3]

; 3498 :                 OUTREG16(&pCsrRegs->ep[endpoint].TxMaxP, pPdd->ep[endpoint].maxPacketSize);

  098dc	e59d300c	 ldr         r3, [sp, #0xC]
  098e0	e28310ac	 add         r1, r3, #0xAC
  098e4	e59d20d0	 ldr         r2, [sp, #0xD0]
  098e8	e3a03034	 mov         r3, #0x34
  098ec	e0030392	 mul         r3, r2, r3
  098f0	e0810003	 add         r0, r1, r3
  098f4	e59d10d0	 ldr         r1, [sp, #0xD0]
  098f8	e3a03010	 mov         r3, #0x10
  098fc	e0020391	 mul         r2, r1, r3
  09900	e59d3000	 ldr         r3, [sp]
  09904	e0832002	 add         r2, r3, r2
  09908	e1d030b0	 ldrh        r3, [r0]
  0990c	e1c230b0	 strh        r3, [r2]

; 3499 :                 OUTREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_FLUSHFIFO | TXCSR_P_CLRDATATOG | TXCSR_P_FRCDATATOG);

  09910	e59d10d0	 ldr         r1, [sp, #0xD0]
  09914	e3a03010	 mov         r3, #0x10
  09918	e0020391	 mul         r2, r1, r3
  0991c	e59d3000	 ldr         r3, [sp]
  09920	e0833002	 add         r3, r3, r2
  09924	e2832002	 add         r2, r3, #2
  09928	e3a03b02	 mov         r3, #2, 22
  0992c	e3833048	 orr         r3, r3, #0x48
  09930	e1c230b0	 strh        r3, [r2]

; 3500 :                 
; 3501 :                 DEBUGMSG(ZONE_INFO, (L"TxFIFOsz=%d\r\n", INREG8(&pGenRegs->TxFIFOsz)));

  09934	e59f39d8	 ldr         r3, [pc, #0x9D8]
  09938	e5933440	 ldr         r3, [r3, #0x440]
  0993c	e3130b01	 tst         r3, #1, 22
  09940	0a000015	 beq         |$LN42@UfnPdd_Ini@2|
  09944	e59f39c8	 ldr         r3, [pc, #0x9C8]
  09948	e5933440	 ldr         r3, [r3, #0x440]
  0994c	e3130801	 tst         r3, #1, 16
  09950	0a000007	 beq         |$LN40@UfnPdd_Ini@2|
  09954	e59d3004	 ldr         r3, [sp, #4]
  09958	e2833062	 add         r3, r3, #0x62
  0995c	e5d31000	 ldrb        r1, [r3]
  09960	e59f09b4	 ldr         r0, [pc, #0x9B4]
  09964	eb000000	 bl          CeLogMsg
  09968	e3a03001	 mov         r3, #1
  0996c	e58d3044	 str         r3, [sp, #0x44]
  09970	ea000006	 b           |$LN41@UfnPdd_Ini@2|
  09974		 |$LN40@UfnPdd_Ini@2|
  09974	e59d3004	 ldr         r3, [sp, #4]
  09978	e2833062	 add         r3, r3, #0x62
  0997c	e5d31000	 ldrb        r1, [r3]
  09980	e59f0994	 ldr         r0, [pc, #0x994]
  09984	eb000000	 bl          NKDbgPrintfW
  09988	e3a03000	 mov         r3, #0
  0998c	e58d3044	 str         r3, [sp, #0x44]
  09990		 |$LN41@UfnPdd_Ini@2|
  09990	e3a03001	 mov         r3, #1
  09994	e58d3048	 str         r3, [sp, #0x48]
  09998	ea000001	 b           |$LN43@UfnPdd_Ini@2|
  0999c		 |$LN42@UfnPdd_Ini@2|
  0999c	e3a03000	 mov         r3, #0
  099a0	e58d3048	 str         r3, [sp, #0x48]
  099a4		 |$LN43@UfnPdd_Ini@2|

; 3502 :                 DEBUGMSG(ZONE_INFO, (L"TxFIFOadd=%d\r\n", INREG16(&pGenRegs->TxFIFOadd)));

  099a4	e59f3968	 ldr         r3, [pc, #0x968]
  099a8	e5933440	 ldr         r3, [r3, #0x440]
  099ac	e3130b01	 tst         r3, #1, 22
  099b0	0a000015	 beq         |$LN46@UfnPdd_Ini@2|
  099b4	e59f3958	 ldr         r3, [pc, #0x958]
  099b8	e5933440	 ldr         r3, [r3, #0x440]
  099bc	e3130801	 tst         r3, #1, 16
  099c0	0a000007	 beq         |$LN44@UfnPdd_Ini@2|
  099c4	e59d3004	 ldr         r3, [sp, #4]
  099c8	e2833064	 add         r3, r3, #0x64
  099cc	e1d310b0	 ldrh        r1, [r3]
  099d0	e59f0940	 ldr         r0, [pc, #0x940]
  099d4	eb000000	 bl          CeLogMsg
  099d8	e3a03001	 mov         r3, #1
  099dc	e58d304c	 str         r3, [sp, #0x4C]
  099e0	ea000006	 b           |$LN45@UfnPdd_Ini@2|
  099e4		 |$LN44@UfnPdd_Ini@2|
  099e4	e59d3004	 ldr         r3, [sp, #4]
  099e8	e2833064	 add         r3, r3, #0x64
  099ec	e1d310b0	 ldrh        r1, [r3]
  099f0	e59f0920	 ldr         r0, [pc, #0x920]
  099f4	eb000000	 bl          NKDbgPrintfW
  099f8	e3a03000	 mov         r3, #0
  099fc	e58d304c	 str         r3, [sp, #0x4C]
  09a00		 |$LN45@UfnPdd_Ini@2|
  09a00	e3a03001	 mov         r3, #1
  09a04	e58d3050	 str         r3, [sp, #0x50]
  09a08	ea000001	 b           |$LN47@UfnPdd_Ini@2|
  09a0c		 |$LN46@UfnPdd_Ini@2|
  09a0c	e3a03000	 mov         r3, #0
  09a10	e58d3050	 str         r3, [sp, #0x50]
  09a14		 |$LN47@UfnPdd_Ini@2|
  09a14		 |$LN13@UfnPdd_Ini@2|

; 3503 :             }
; 3504 :             break;

  09a14	ea00022e	 b           |$LN17@UfnPdd_Ini@2|
  09a18		 |$LN12@UfnPdd_Ini@2|

; 3505 :             
; 3506 :         case EP_TYPE_BULK:
; 3507 :             DEBUGMSG(ZONE_INFO, (L"Bulk endpoint\r\n"));

  09a18	e59f38f4	 ldr         r3, [pc, #0x8F4]
  09a1c	e5933440	 ldr         r3, [r3, #0x440]
  09a20	e3130b01	 tst         r3, #1, 22
  09a24	0a00000f	 beq         |$LN50@UfnPdd_Ini@2|
  09a28	e59f38e4	 ldr         r3, [pc, #0x8E4]
  09a2c	e5933440	 ldr         r3, [r3, #0x440]
  09a30	e3130801	 tst         r3, #1, 16
  09a34	0a000004	 beq         |$LN48@UfnPdd_Ini@2|
  09a38	e59f08f4	 ldr         r0, [pc, #0x8F4]
  09a3c	eb000000	 bl          CeLogMsg
  09a40	e3a03001	 mov         r3, #1
  09a44	e58d3054	 str         r3, [sp, #0x54]
  09a48	ea000003	 b           |$LN49@UfnPdd_Ini@2|
  09a4c		 |$LN48@UfnPdd_Ini@2|
  09a4c	e59f08e0	 ldr         r0, [pc, #0x8E0]
  09a50	eb000000	 bl          NKDbgPrintfW
  09a54	e3a03000	 mov         r3, #0
  09a58	e58d3054	 str         r3, [sp, #0x54]
  09a5c		 |$LN49@UfnPdd_Ini@2|
  09a5c	e3a03001	 mov         r3, #1
  09a60	e58d3058	 str         r3, [sp, #0x58]
  09a64	ea000001	 b           |$LN51@UfnPdd_Ini@2|
  09a68		 |$LN50@UfnPdd_Ini@2|
  09a68	e3a03000	 mov         r3, #0
  09a6c	e58d3058	 str         r3, [sp, #0x58]
  09a70		 |$LN51@UfnPdd_Ini@2|

; 3508 :   
; 3509 :             // Bulk endpoints the of Mass Storage devices should not send zero length transfers
; 3510 :             if (speed == BS_HIGH_SPEED)

  09a70	e59d30d4	 ldr         r3, [sp, #0xD4]
  09a74	e3530002	 cmp         r3, #2
  09a78	1a000013	 bne         |$LN11@UfnPdd_Ini@2|

; 3511 :             {
; 3512 :                 if(pPdd->HsEpMassStoreFlags & (1<<endpoint))

  09a7c	e59d300c	 ldr         r3, [sp, #0xC]
  09a80	e2833b01	 add         r3, r3, #1, 22
  09a84	e283302e	 add         r3, r3, #0x2E
  09a88	e1d330b0	 ldrh        r3, [r3]
  09a8c	e1a01003	 mov         r1, r3
  09a90	e59d20d0	 ldr         r2, [sp, #0xD0]
  09a94	e3a03001	 mov         r3, #1
  09a98	e1a03213	 mov         r3, r3, lsl r2
  09a9c	e1110003	 tst         r1, r3
  09aa0	0a000008	 beq         |$LN10@UfnPdd_Ini@2|

; 3513 :                 {
; 3514 :                     pPdd->ep[endpoint].bMassStore = TRUE;

  09aa4	e59d300c	 ldr         r3, [sp, #0xC]
  09aa8	e28310ac	 add         r1, r3, #0xAC
  09aac	e59d20d0	 ldr         r2, [sp, #0xD0]
  09ab0	e3a03034	 mov         r3, #0x34
  09ab4	e0030392	 mul         r3, r2, r3
  09ab8	e0813003	 add         r3, r1, r3
  09abc	e283200c	 add         r2, r3, #0xC
  09ac0	e3a03001	 mov         r3, #1
  09ac4	e5823000	 str         r3, [r2]
  09ac8		 |$LN10@UfnPdd_Ini@2|

; 3515 :                 }
; 3516 :             }
; 3517 :             else

  09ac8	ea000012	 b           |$LN9@UfnPdd_Ini@2|
  09acc		 |$LN11@UfnPdd_Ini@2|

; 3518 :             {
; 3519 :                 if(pPdd->FsEpMassStoreFlags & (1<<endpoint))

  09acc	e59d300c	 ldr         r3, [sp, #0xC]
  09ad0	e2833b01	 add         r3, r3, #1, 22
  09ad4	e283302c	 add         r3, r3, #0x2C
  09ad8	e1d330b0	 ldrh        r3, [r3]
  09adc	e1a01003	 mov         r1, r3
  09ae0	e59d20d0	 ldr         r2, [sp, #0xD0]
  09ae4	e3a03001	 mov         r3, #1
  09ae8	e1a03213	 mov         r3, r3, lsl r2
  09aec	e1110003	 tst         r1, r3
  09af0	0a000008	 beq         |$LN8@UfnPdd_Ini@2|

; 3520 :                 {
; 3521 :                     pPdd->ep[endpoint].bMassStore = TRUE;

  09af4	e59d300c	 ldr         r3, [sp, #0xC]
  09af8	e28310ac	 add         r1, r3, #0xAC
  09afc	e59d20d0	 ldr         r2, [sp, #0xD0]
  09b00	e3a03034	 mov         r3, #0x34
  09b04	e0030392	 mul         r3, r2, r3
  09b08	e0813003	 add         r3, r1, r3
  09b0c	e283200c	 add         r2, r3, #0xC
  09b10	e3a03001	 mov         r3, #1
  09b14	e5823000	 str         r3, [r2]
  09b18		 |$LN8@UfnPdd_Ini@2|
  09b18		 |$LN9@UfnPdd_Ini@2|

; 3522 :                 }
; 3523 :             }
; 3524 : 
; 3525 :             if (pPdd->ep[endpoint].dirRx)

  09b18	e59d300c	 ldr         r3, [sp, #0xC]
  09b1c	e28310ac	 add         r1, r3, #0xAC
  09b20	e59d20d0	 ldr         r2, [sp, #0xD0]
  09b24	e3a03034	 mov         r3, #0x34
  09b28	e0030392	 mul         r3, r2, r3
  09b2c	e0813003	 add         r3, r1, r3
  09b30	e2833004	 add         r3, r3, #4
  09b34	e5933000	 ldr         r3, [r3]
  09b38	e3530000	 cmp         r3, #0
  09b3c	0a0000a3	 beq         |$LN7@UfnPdd_Ini@2|

; 3526 :             {
; 3527 :                 OUTREG8(&pGenRegs->RxFIFOsz, MUSB_FIFOSZ_512_BYTE);

  09b40	e59d3004	 ldr         r3, [sp, #4]
  09b44	e2832063	 add         r2, r3, #0x63
  09b48	e3a03006	 mov         r3, #6
  09b4c	e5c23000	 strb        r3, [r2]

; 3528 :                 OUTREG16(&pGenRegs->RxFIFOadd, CalcFIFOAddr(endpoint,pPdd->ep[endpoint].dirRx));

  09b50	e59d300c	 ldr         r3, [sp, #0xC]
  09b54	e28310ac	 add         r1, r3, #0xAC
  09b58	e59d20d0	 ldr         r2, [sp, #0xD0]
  09b5c	e3a03034	 mov         r3, #0x34
  09b60	e0030392	 mul         r3, r2, r3
  09b64	e0813003	 add         r3, r1, r3
  09b68	e2833004	 add         r3, r3, #4
  09b6c	e5931000	 ldr         r1, [r3]
  09b70	e59d00d0	 ldr         r0, [sp, #0xD0]
  09b74	eb000000	 bl          CalcFIFOAddr
  09b78	e58d005c	 str         r0, [sp, #0x5C]
  09b7c	e59d305c	 ldr         r3, [sp, #0x5C]
  09b80	e1a02803	 mov         r2, r3, lsl #16
  09b84	e1a02822	 mov         r2, r2, lsr #16
  09b88	e59d3004	 ldr         r3, [sp, #4]
  09b8c	e2833066	 add         r3, r3, #0x66
  09b90	e1c320b0	 strh        r2, [r3]

; 3529 :                 OUTREG16(&pCsrRegs->ep[endpoint].RxMaxP, pPdd->ep[endpoint].maxPacketSize);

  09b94	e59d300c	 ldr         r3, [sp, #0xC]
  09b98	e28310ac	 add         r1, r3, #0xAC
  09b9c	e59d20d0	 ldr         r2, [sp, #0xD0]
  09ba0	e3a03034	 mov         r3, #0x34
  09ba4	e0030392	 mul         r3, r2, r3
  09ba8	e0810003	 add         r0, r1, r3
  09bac	e59d10d0	 ldr         r1, [sp, #0xD0]
  09bb0	e3a03010	 mov         r3, #0x10
  09bb4	e0020391	 mul         r2, r1, r3
  09bb8	e59d3000	 ldr         r3, [sp]
  09bbc	e0833002	 add         r3, r3, r2
  09bc0	e2832004	 add         r2, r3, #4
  09bc4	e1d030b0	 ldrh        r3, [r0]
  09bc8	e1c230b0	 strh        r3, [r2]

; 3530 :                 OUTREG16(&pCsrRegs->ep[endpoint].RxCSR, RXCSR_P_FLUSHFIFO | RXCSR_P_CLRDATATOG);

  09bcc	e59d10d0	 ldr         r1, [sp, #0xD0]
  09bd0	e3a03010	 mov         r3, #0x10
  09bd4	e0020391	 mul         r2, r1, r3
  09bd8	e59d3000	 ldr         r3, [sp]
  09bdc	e0833002	 add         r3, r3, r2
  09be0	e2832006	 add         r2, r3, #6
  09be4	e3a03090	 mov         r3, #0x90
  09be8	e1c230b0	 strh        r3, [r2]

; 3531 :                 pPdd->rx0DmaState = MODE_FIFO;

  09bec	e59d300c	 ldr         r3, [sp, #0xC]
  09bf0	e283201c	 add         r2, r3, #0x1C
  09bf4	e3a03001	 mov         r3, #1
  09bf8	e5823000	 str         r3, [r2]

; 3532 : 
; 3533 :                 pPdd->ep[endpoint].bLastRxUsedDMA = FALSE;

  09bfc	e59d300c	 ldr         r3, [sp, #0xC]
  09c00	e28310ac	 add         r1, r3, #0xAC
  09c04	e59d20d0	 ldr         r2, [sp, #0xD0]
  09c08	e3a03034	 mov         r3, #0x34
  09c0c	e0030392	 mul         r3, r2, r3
  09c10	e0813003	 add         r3, r1, r3
  09c14	e2832030	 add         r2, r3, #0x30
  09c18	e3a03000	 mov         r3, #0
  09c1c	e5823000	 str         r3, [r2]

; 3534 :                 if (pPdd->enableDMA && (pPdd->rx0DmaEp == -1))

  09c20	e59d300c	 ldr         r3, [sp, #0xC]
  09c24	e2833008	 add         r3, r3, #8
  09c28	e5933000	 ldr         r3, [r3]
  09c2c	e3530000	 cmp         r3, #0
  09c30	0a00002d	 beq         |$LN6@UfnPdd_Ini@2|
  09c34	e59d300c	 ldr         r3, [sp, #0xC]
  09c38	e283300c	 add         r3, r3, #0xC
  09c3c	e5933000	 ldr         r3, [r3]
  09c40	e3730001	 cmn         r3, #1
  09c44	1a000028	 bne         |$LN6@UfnPdd_Ini@2|

; 3535 :                 {
; 3536 :                     pPdd->rx0DmaEp = endpoint;

  09c48	e59d300c	 ldr         r3, [sp, #0xC]
  09c4c	e283200c	 add         r2, r3, #0xC
  09c50	e59d30d0	 ldr         r3, [sp, #0xD0]
  09c54	e5823000	 str         r3, [r2]

; 3537 :                     pPdd->rx0DmaState = MODE_DMA;

  09c58	e59d300c	 ldr         r3, [sp, #0xC]
  09c5c	e283201c	 add         r2, r3, #0x1C
  09c60	e3a03000	 mov         r3, #0
  09c64	e5823000	 str         r3, [r2]

; 3538 :                     pPdd->ep[endpoint].dmaEnabled = TRUE;

  09c68	e59d300c	 ldr         r3, [sp, #0xC]
  09c6c	e28310ac	 add         r1, r3, #0xAC
  09c70	e59d20d0	 ldr         r2, [sp, #0xD0]
  09c74	e3a03034	 mov         r3, #0x34
  09c78	e0030392	 mul         r3, r2, r3
  09c7c	e0813003	 add         r3, r1, r3
  09c80	e2832010	 add         r2, r3, #0x10
  09c84	e3a03001	 mov         r3, #1
  09c88	e5823000	 str         r3, [r2]

; 3539 :                     DEBUGMSG(ZONE_INFO, (TEXT("RX EP %d DMA Enable\r\n"), endpoint));

  09c8c	e59f3680	 ldr         r3, [pc, #0x680]
  09c90	e5933440	 ldr         r3, [r3, #0x440]
  09c94	e3130b01	 tst         r3, #1, 22
  09c98	0a000011	 beq         |$LN54@UfnPdd_Ini@2|
  09c9c	e59f3670	 ldr         r3, [pc, #0x670]
  09ca0	e5933440	 ldr         r3, [r3, #0x440]
  09ca4	e3130801	 tst         r3, #1, 16
  09ca8	0a000005	 beq         |$LN52@UfnPdd_Ini@2|
  09cac	e59d10d0	 ldr         r1, [sp, #0xD0]
  09cb0	e59f0678	 ldr         r0, [pc, #0x678]
  09cb4	eb000000	 bl          CeLogMsg
  09cb8	e3a03001	 mov         r3, #1
  09cbc	e58d3060	 str         r3, [sp, #0x60]
  09cc0	ea000004	 b           |$LN53@UfnPdd_Ini@2|
  09cc4		 |$LN52@UfnPdd_Ini@2|
  09cc4	e59d10d0	 ldr         r1, [sp, #0xD0]
  09cc8	e59f0660	 ldr         r0, [pc, #0x660]
  09ccc	eb000000	 bl          NKDbgPrintfW
  09cd0	e3a03000	 mov         r3, #0
  09cd4	e58d3060	 str         r3, [sp, #0x60]
  09cd8		 |$LN53@UfnPdd_Ini@2|
  09cd8	e3a03001	 mov         r3, #1
  09cdc	e58d3064	 str         r3, [sp, #0x64]
  09ce0	ea000001	 b           |$LN55@UfnPdd_Ini@2|
  09ce4		 |$LN54@UfnPdd_Ini@2|
  09ce4	e3a03000	 mov         r3, #0
  09ce8	e58d3064	 str         r3, [sp, #0x64]
  09cec		 |$LN55@UfnPdd_Ini@2|
  09cec		 |$LN6@UfnPdd_Ini@2|

; 3540 :                 }
; 3541 :                 
; 3542 :                 DEBUGMSG(ZONE_INFO, (L"RxFIFOsz=%d\r\n", INREG8(&pGenRegs->RxFIFOsz)));

  09cec	e59f3620	 ldr         r3, [pc, #0x620]
  09cf0	e5933440	 ldr         r3, [r3, #0x440]
  09cf4	e3130b01	 tst         r3, #1, 22
  09cf8	0a000015	 beq         |$LN58@UfnPdd_Ini@2|
  09cfc	e59f3610	 ldr         r3, [pc, #0x610]
  09d00	e5933440	 ldr         r3, [r3, #0x440]
  09d04	e3130801	 tst         r3, #1, 16
  09d08	0a000007	 beq         |$LN56@UfnPdd_Ini@2|
  09d0c	e59d3004	 ldr         r3, [sp, #4]
  09d10	e2833063	 add         r3, r3, #0x63
  09d14	e5d31000	 ldrb        r1, [r3]
  09d18	e59f0604	 ldr         r0, [pc, #0x604]
  09d1c	eb000000	 bl          CeLogMsg
  09d20	e3a03001	 mov         r3, #1
  09d24	e58d3068	 str         r3, [sp, #0x68]
  09d28	ea000006	 b           |$LN57@UfnPdd_Ini@2|
  09d2c		 |$LN56@UfnPdd_Ini@2|
  09d2c	e59d3004	 ldr         r3, [sp, #4]
  09d30	e2833063	 add         r3, r3, #0x63
  09d34	e5d31000	 ldrb        r1, [r3]
  09d38	e59f05e4	 ldr         r0, [pc, #0x5E4]
  09d3c	eb000000	 bl          NKDbgPrintfW
  09d40	e3a03000	 mov         r3, #0
  09d44	e58d3068	 str         r3, [sp, #0x68]
  09d48		 |$LN57@UfnPdd_Ini@2|
  09d48	e3a03001	 mov         r3, #1
  09d4c	e58d306c	 str         r3, [sp, #0x6C]
  09d50	ea000001	 b           |$LN59@UfnPdd_Ini@2|
  09d54		 |$LN58@UfnPdd_Ini@2|
  09d54	e3a03000	 mov         r3, #0
  09d58	e58d306c	 str         r3, [sp, #0x6C]
  09d5c		 |$LN59@UfnPdd_Ini@2|

; 3543 :                 DEBUGMSG(ZONE_INFO, (L"RxFIFOadd=%d\r\n", INREG16(&pGenRegs->RxFIFOadd)));

  09d5c	e59f35b0	 ldr         r3, [pc, #0x5B0]
  09d60	e5933440	 ldr         r3, [r3, #0x440]
  09d64	e3130b01	 tst         r3, #1, 22
  09d68	0a000015	 beq         |$LN62@UfnPdd_Ini@2|
  09d6c	e59f35a0	 ldr         r3, [pc, #0x5A0]
  09d70	e5933440	 ldr         r3, [r3, #0x440]
  09d74	e3130801	 tst         r3, #1, 16
  09d78	0a000007	 beq         |$LN60@UfnPdd_Ini@2|
  09d7c	e59d3004	 ldr         r3, [sp, #4]
  09d80	e2833066	 add         r3, r3, #0x66
  09d84	e1d310b0	 ldrh        r1, [r3]
  09d88	e59f0590	 ldr         r0, [pc, #0x590]
  09d8c	eb000000	 bl          CeLogMsg
  09d90	e3a03001	 mov         r3, #1
  09d94	e58d3070	 str         r3, [sp, #0x70]
  09d98	ea000006	 b           |$LN61@UfnPdd_Ini@2|
  09d9c		 |$LN60@UfnPdd_Ini@2|
  09d9c	e59d3004	 ldr         r3, [sp, #4]
  09da0	e2833066	 add         r3, r3, #0x66
  09da4	e1d310b0	 ldrh        r1, [r3]
  09da8	e59f0570	 ldr         r0, [pc, #0x570]
  09dac	eb000000	 bl          NKDbgPrintfW
  09db0	e3a03000	 mov         r3, #0
  09db4	e58d3070	 str         r3, [sp, #0x70]
  09db8		 |$LN61@UfnPdd_Ini@2|
  09db8	e3a03001	 mov         r3, #1
  09dbc	e58d3074	 str         r3, [sp, #0x74]
  09dc0	ea000001	 b           |$LN63@UfnPdd_Ini@2|
  09dc4		 |$LN62@UfnPdd_Ini@2|
  09dc4	e3a03000	 mov         r3, #0
  09dc8	e58d3074	 str         r3, [sp, #0x74]
  09dcc		 |$LN63@UfnPdd_Ini@2|

; 3544 :             }
; 3545 :             else

  09dcc	ea000090	 b           |$LN5@UfnPdd_Ini@2|
  09dd0		 |$LN7@UfnPdd_Ini@2|

; 3546 :             {
; 3547 :                 OUTREG8(&pGenRegs->TxFIFOsz, MUSB_FIFOSZ_512_BYTE);

  09dd0	e59d3004	 ldr         r3, [sp, #4]
  09dd4	e2832062	 add         r2, r3, #0x62
  09dd8	e3a03006	 mov         r3, #6
  09ddc	e5c23000	 strb        r3, [r2]

; 3548 :                 OUTREG16(&pGenRegs->TxFIFOadd, CalcFIFOAddr(endpoint,pPdd->ep[endpoint].dirRx));

  09de0	e59d300c	 ldr         r3, [sp, #0xC]
  09de4	e28310ac	 add         r1, r3, #0xAC
  09de8	e59d20d0	 ldr         r2, [sp, #0xD0]
  09dec	e3a03034	 mov         r3, #0x34
  09df0	e0030392	 mul         r3, r2, r3
  09df4	e0813003	 add         r3, r1, r3
  09df8	e2833004	 add         r3, r3, #4
  09dfc	e5931000	 ldr         r1, [r3]
  09e00	e59d00d0	 ldr         r0, [sp, #0xD0]
  09e04	eb000000	 bl          CalcFIFOAddr
  09e08	e58d0078	 str         r0, [sp, #0x78]
  09e0c	e59d3078	 ldr         r3, [sp, #0x78]
  09e10	e1a02803	 mov         r2, r3, lsl #16
  09e14	e1a02822	 mov         r2, r2, lsr #16
  09e18	e59d3004	 ldr         r3, [sp, #4]
  09e1c	e2833064	 add         r3, r3, #0x64
  09e20	e1c320b0	 strh        r2, [r3]

; 3549 :                 OUTREG16(&pCsrRegs->ep[endpoint].TxMaxP, pPdd->ep[endpoint].maxPacketSize);

  09e24	e59d300c	 ldr         r3, [sp, #0xC]
  09e28	e28310ac	 add         r1, r3, #0xAC
  09e2c	e59d20d0	 ldr         r2, [sp, #0xD0]
  09e30	e3a03034	 mov         r3, #0x34
  09e34	e0030392	 mul         r3, r2, r3
  09e38	e0810003	 add         r0, r1, r3
  09e3c	e59d10d0	 ldr         r1, [sp, #0xD0]
  09e40	e3a03010	 mov         r3, #0x10
  09e44	e0020391	 mul         r2, r1, r3
  09e48	e59d3000	 ldr         r3, [sp]
  09e4c	e0832002	 add         r2, r3, r2
  09e50	e1d030b0	 ldrh        r3, [r0]
  09e54	e1c230b0	 strh        r3, [r2]

; 3550 :                 OUTREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_FLUSHFIFO | TXCSR_P_CLRDATATOG);

  09e58	e59d10d0	 ldr         r1, [sp, #0xD0]
  09e5c	e3a03010	 mov         r3, #0x10
  09e60	e0020391	 mul         r2, r1, r3
  09e64	e59d3000	 ldr         r3, [sp]
  09e68	e0833002	 add         r3, r3, r2
  09e6c	e2832002	 add         r2, r3, #2
  09e70	e3a03048	 mov         r3, #0x48
  09e74	e1c230b0	 strh        r3, [r2]

; 3551 :                 
; 3552 :                 if (pPdd->enableDMA && (pPdd->tx0DmaEp == -1))

  09e78	e59d300c	 ldr         r3, [sp, #0xC]
  09e7c	e2833008	 add         r3, r3, #8
  09e80	e5933000	 ldr         r3, [r3]
  09e84	e3530000	 cmp         r3, #0
  09e88	0a000029	 beq         |$LN4@UfnPdd_Ini@2|
  09e8c	e59d300c	 ldr         r3, [sp, #0xC]
  09e90	e2833010	 add         r3, r3, #0x10
  09e94	e5933000	 ldr         r3, [r3]
  09e98	e3730001	 cmn         r3, #1
  09e9c	1a000024	 bne         |$LN4@UfnPdd_Ini@2|

; 3553 :                 {
; 3554 :                     pPdd->tx0DmaEp = endpoint;

  09ea0	e59d300c	 ldr         r3, [sp, #0xC]
  09ea4	e2832010	 add         r2, r3, #0x10
  09ea8	e59d30d0	 ldr         r3, [sp, #0xD0]
  09eac	e5823000	 str         r3, [r2]

; 3555 :                     pPdd->ep[endpoint].dmaEnabled = TRUE;

  09eb0	e59d300c	 ldr         r3, [sp, #0xC]
  09eb4	e28310ac	 add         r1, r3, #0xAC
  09eb8	e59d20d0	 ldr         r2, [sp, #0xD0]
  09ebc	e3a03034	 mov         r3, #0x34
  09ec0	e0030392	 mul         r3, r2, r3
  09ec4	e0813003	 add         r3, r1, r3
  09ec8	e2832010	 add         r2, r3, #0x10
  09ecc	e3a03001	 mov         r3, #1
  09ed0	e5823000	 str         r3, [r2]

; 3556 :                     DEBUGMSG(ZONE_INFO, (TEXT("TX EP %d DMA Enable\r\n"), endpoint));

  09ed4	e59f3438	 ldr         r3, [pc, #0x438]
  09ed8	e5933440	 ldr         r3, [r3, #0x440]
  09edc	e3130b01	 tst         r3, #1, 22
  09ee0	0a000011	 beq         |$LN66@UfnPdd_Ini@2|
  09ee4	e59f3428	 ldr         r3, [pc, #0x428]
  09ee8	e5933440	 ldr         r3, [r3, #0x440]
  09eec	e3130801	 tst         r3, #1, 16
  09ef0	0a000005	 beq         |$LN64@UfnPdd_Ini@2|
  09ef4	e59d10d0	 ldr         r1, [sp, #0xD0]
  09ef8	e59f042c	 ldr         r0, [pc, #0x42C]
  09efc	eb000000	 bl          CeLogMsg
  09f00	e3a03001	 mov         r3, #1
  09f04	e58d307c	 str         r3, [sp, #0x7C]
  09f08	ea000004	 b           |$LN65@UfnPdd_Ini@2|
  09f0c		 |$LN64@UfnPdd_Ini@2|
  09f0c	e59d10d0	 ldr         r1, [sp, #0xD0]
  09f10	e59f0414	 ldr         r0, [pc, #0x414]
  09f14	eb000000	 bl          NKDbgPrintfW
  09f18	e3a03000	 mov         r3, #0
  09f1c	e58d307c	 str         r3, [sp, #0x7C]
  09f20		 |$LN65@UfnPdd_Ini@2|
  09f20	e3a03001	 mov         r3, #1
  09f24	e58d3080	 str         r3, [sp, #0x80]
  09f28	ea000001	 b           |$LN67@UfnPdd_Ini@2|
  09f2c		 |$LN66@UfnPdd_Ini@2|
  09f2c	e3a03000	 mov         r3, #0
  09f30	e58d3080	 str         r3, [sp, #0x80]
  09f34		 |$LN67@UfnPdd_Ini@2|
  09f34		 |$LN4@UfnPdd_Ini@2|

; 3557 :                 }
; 3558 :                 
; 3559 : 
; 3560 :                 DEBUGMSG(ZONE_INFO, (L"TxFIFOsz=%d\r\n", INREG8(&pGenRegs->TxFIFOsz)));

  09f34	e59f33d8	 ldr         r3, [pc, #0x3D8]
  09f38	e5933440	 ldr         r3, [r3, #0x440]
  09f3c	e3130b01	 tst         r3, #1, 22
  09f40	0a000015	 beq         |$LN70@UfnPdd_Ini@2|
  09f44	e59f33c8	 ldr         r3, [pc, #0x3C8]
  09f48	e5933440	 ldr         r3, [r3, #0x440]
  09f4c	e3130801	 tst         r3, #1, 16
  09f50	0a000007	 beq         |$LN68@UfnPdd_Ini@2|
  09f54	e59d3004	 ldr         r3, [sp, #4]
  09f58	e2833062	 add         r3, r3, #0x62
  09f5c	e5d31000	 ldrb        r1, [r3]
  09f60	e59f03b4	 ldr         r0, [pc, #0x3B4]
  09f64	eb000000	 bl          CeLogMsg
  09f68	e3a03001	 mov         r3, #1
  09f6c	e58d3084	 str         r3, [sp, #0x84]
  09f70	ea000006	 b           |$LN69@UfnPdd_Ini@2|
  09f74		 |$LN68@UfnPdd_Ini@2|
  09f74	e59d3004	 ldr         r3, [sp, #4]
  09f78	e2833062	 add         r3, r3, #0x62
  09f7c	e5d31000	 ldrb        r1, [r3]
  09f80	e59f0394	 ldr         r0, [pc, #0x394]
  09f84	eb000000	 bl          NKDbgPrintfW
  09f88	e3a03000	 mov         r3, #0
  09f8c	e58d3084	 str         r3, [sp, #0x84]
  09f90		 |$LN69@UfnPdd_Ini@2|
  09f90	e3a03001	 mov         r3, #1
  09f94	e58d3088	 str         r3, [sp, #0x88]
  09f98	ea000001	 b           |$LN71@UfnPdd_Ini@2|
  09f9c		 |$LN70@UfnPdd_Ini@2|
  09f9c	e3a03000	 mov         r3, #0
  09fa0	e58d3088	 str         r3, [sp, #0x88]
  09fa4		 |$LN71@UfnPdd_Ini@2|

; 3561 :                 DEBUGMSG(ZONE_INFO, (L"TxFIFOadd=%d\r\n", INREG16(&pGenRegs->TxFIFOadd)));

  09fa4	e59f3368	 ldr         r3, [pc, #0x368]
  09fa8	e5933440	 ldr         r3, [r3, #0x440]
  09fac	e3130b01	 tst         r3, #1, 22
  09fb0	0a000015	 beq         |$LN74@UfnPdd_Ini@2|
  09fb4	e59f3358	 ldr         r3, [pc, #0x358]
  09fb8	e5933440	 ldr         r3, [r3, #0x440]
  09fbc	e3130801	 tst         r3, #1, 16
  09fc0	0a000007	 beq         |$LN72@UfnPdd_Ini@2|
  09fc4	e59d3004	 ldr         r3, [sp, #4]
  09fc8	e2833064	 add         r3, r3, #0x64
  09fcc	e1d310b0	 ldrh        r1, [r3]
  09fd0	e59f0340	 ldr         r0, [pc, #0x340]
  09fd4	eb000000	 bl          CeLogMsg
  09fd8	e3a03001	 mov         r3, #1
  09fdc	e58d308c	 str         r3, [sp, #0x8C]
  09fe0	ea000006	 b           |$LN73@UfnPdd_Ini@2|
  09fe4		 |$LN72@UfnPdd_Ini@2|
  09fe4	e59d3004	 ldr         r3, [sp, #4]
  09fe8	e2833064	 add         r3, r3, #0x64
  09fec	e1d310b0	 ldrh        r1, [r3]
  09ff0	e59f0320	 ldr         r0, [pc, #0x320]
  09ff4	eb000000	 bl          NKDbgPrintfW
  09ff8	e3a03000	 mov         r3, #0
  09ffc	e58d308c	 str         r3, [sp, #0x8C]
  0a000		 |$LN73@UfnPdd_Ini@2|
  0a000	e3a03001	 mov         r3, #1
  0a004	e58d3090	 str         r3, [sp, #0x90]
  0a008	ea000001	 b           |$LN75@UfnPdd_Ini@2|
  0a00c		 |$LN74@UfnPdd_Ini@2|
  0a00c	e3a03000	 mov         r3, #0
  0a010	e58d3090	 str         r3, [sp, #0x90]
  0a014		 |$LN75@UfnPdd_Ini@2|
  0a014		 |$LN5@UfnPdd_Ini@2|

; 3562 :             }
; 3563 :             break;

  0a014	ea0000ae	 b           |$LN17@UfnPdd_Ini@2|
  0a018		 |$LN3@UfnPdd_Ini@2|

; 3564 :             
; 3565 :         case EP_TYPE_CTRL:
; 3566 :             DEBUGMSG(ZONE_INFO, (L"Control endpoint\r\n"));

  0a018	e59f32f4	 ldr         r3, [pc, #0x2F4]
  0a01c	e5933440	 ldr         r3, [r3, #0x440]
  0a020	e3130b01	 tst         r3, #1, 22
  0a024	0a00000f	 beq         |$LN78@UfnPdd_Ini@2|
  0a028	e59f32e4	 ldr         r3, [pc, #0x2E4]
  0a02c	e5933440	 ldr         r3, [r3, #0x440]
  0a030	e3130801	 tst         r3, #1, 16
  0a034	0a000004	 beq         |$LN76@UfnPdd_Ini@2|
  0a038	e59f02e8	 ldr         r0, [pc, #0x2E8]
  0a03c	eb000000	 bl          CeLogMsg
  0a040	e3a03001	 mov         r3, #1
  0a044	e58d3094	 str         r3, [sp, #0x94]
  0a048	ea000003	 b           |$LN77@UfnPdd_Ini@2|
  0a04c		 |$LN76@UfnPdd_Ini@2|
  0a04c	e59f02d4	 ldr         r0, [pc, #0x2D4]
  0a050	eb000000	 bl          NKDbgPrintfW
  0a054	e3a03000	 mov         r3, #0
  0a058	e58d3094	 str         r3, [sp, #0x94]
  0a05c		 |$LN77@UfnPdd_Ini@2|
  0a05c	e3a03001	 mov         r3, #1
  0a060	e58d3098	 str         r3, [sp, #0x98]
  0a064	ea000001	 b           |$LN79@UfnPdd_Ini@2|
  0a068		 |$LN78@UfnPdd_Ini@2|
  0a068	e3a03000	 mov         r3, #0
  0a06c	e58d3098	 str         r3, [sp, #0x98]
  0a070		 |$LN79@UfnPdd_Ini@2|

; 3567 :             if (endpoint == 0)

  0a070	e59d30d0	 ldr         r3, [sp, #0xD0]
  0a074	e3530000	 cmp         r3, #0
  0a078	1a00007f	 bne         |$LN2@UfnPdd_Ini@2|

; 3568 :             {
; 3569 :                 OUTREG8(&pGenRegs->RxFIFOsz, MUSB_FIFOSZ_128_BYTE);

  0a07c	e59d3004	 ldr         r3, [sp, #4]
  0a080	e2832063	 add         r2, r3, #0x63
  0a084	e3a03004	 mov         r3, #4
  0a088	e5c23000	 strb        r3, [r2]

; 3570 :                 OUTREG16(&pGenRegs->RxFIFOadd, 0);

  0a08c	e59d3004	 ldr         r3, [sp, #4]
  0a090	e2832066	 add         r2, r3, #0x66
  0a094	e3a03000	 mov         r3, #0
  0a098	e1c230b0	 strh        r3, [r2]

; 3571 :                 
; 3572 :                 OUTREG8(&pGenRegs->TxFIFOsz, MUSB_FIFOSZ_128_BYTE);

  0a09c	e59d3004	 ldr         r3, [sp, #4]
  0a0a0	e2832062	 add         r2, r3, #0x62
  0a0a4	e3a03004	 mov         r3, #4
  0a0a8	e5c23000	 strb        r3, [r2]

; 3573 :                 OUTREG16(&pGenRegs->TxFIFOadd, 256/8);

  0a0ac	e59d3004	 ldr         r3, [sp, #4]
  0a0b0	e2832064	 add         r2, r3, #0x64
  0a0b4	e3a03020	 mov         r3, #0x20
  0a0b8	e1c230b0	 strh        r3, [r2]

; 3574 :                 
; 3575 :                 DEBUGMSG(ZONE_INFO, (L"RxFIFOsz=%d\r\n", INREG8(&pGenRegs->RxFIFOsz)));

  0a0bc	e59f3250	 ldr         r3, [pc, #0x250]
  0a0c0	e5933440	 ldr         r3, [r3, #0x440]
  0a0c4	e3130b01	 tst         r3, #1, 22
  0a0c8	0a000015	 beq         |$LN82@UfnPdd_Ini@2|
  0a0cc	e59f3240	 ldr         r3, [pc, #0x240]
  0a0d0	e5933440	 ldr         r3, [r3, #0x440]
  0a0d4	e3130801	 tst         r3, #1, 16
  0a0d8	0a000007	 beq         |$LN80@UfnPdd_Ini@2|
  0a0dc	e59d3004	 ldr         r3, [sp, #4]
  0a0e0	e2833063	 add         r3, r3, #0x63
  0a0e4	e5d31000	 ldrb        r1, [r3]
  0a0e8	e59f0234	 ldr         r0, [pc, #0x234]
  0a0ec	eb000000	 bl          CeLogMsg
  0a0f0	e3a03001	 mov         r3, #1
  0a0f4	e58d309c	 str         r3, [sp, #0x9C]
  0a0f8	ea000006	 b           |$LN81@UfnPdd_Ini@2|
  0a0fc		 |$LN80@UfnPdd_Ini@2|
  0a0fc	e59d3004	 ldr         r3, [sp, #4]
  0a100	e2833063	 add         r3, r3, #0x63
  0a104	e5d31000	 ldrb        r1, [r3]
  0a108	e59f0214	 ldr         r0, [pc, #0x214]
  0a10c	eb000000	 bl          NKDbgPrintfW
  0a110	e3a03000	 mov         r3, #0
  0a114	e58d309c	 str         r3, [sp, #0x9C]
  0a118		 |$LN81@UfnPdd_Ini@2|
  0a118	e3a03001	 mov         r3, #1
  0a11c	e58d30a0	 str         r3, [sp, #0xA0]
  0a120	ea000001	 b           |$LN83@UfnPdd_Ini@2|
  0a124		 |$LN82@UfnPdd_Ini@2|
  0a124	e3a03000	 mov         r3, #0
  0a128	e58d30a0	 str         r3, [sp, #0xA0]
  0a12c		 |$LN83@UfnPdd_Ini@2|

; 3576 :                 DEBUGMSG(ZONE_INFO, (L"RxFIFOadd=%d\r\n", INREG16(&pGenRegs->RxFIFOadd)));

  0a12c	e59f31e0	 ldr         r3, [pc, #0x1E0]
  0a130	e5933440	 ldr         r3, [r3, #0x440]
  0a134	e3130b01	 tst         r3, #1, 22
  0a138	0a000015	 beq         |$LN86@UfnPdd_Ini@2|
  0a13c	e59f31d0	 ldr         r3, [pc, #0x1D0]
  0a140	e5933440	 ldr         r3, [r3, #0x440]
  0a144	e3130801	 tst         r3, #1, 16
  0a148	0a000007	 beq         |$LN84@UfnPdd_Ini@2|
  0a14c	e59d3004	 ldr         r3, [sp, #4]
  0a150	e2833066	 add         r3, r3, #0x66
  0a154	e1d310b0	 ldrh        r1, [r3]
  0a158	e59f01c0	 ldr         r0, [pc, #0x1C0]
  0a15c	eb000000	 bl          CeLogMsg
  0a160	e3a03001	 mov         r3, #1
  0a164	e58d30a4	 str         r3, [sp, #0xA4]
  0a168	ea000006	 b           |$LN85@UfnPdd_Ini@2|
  0a16c		 |$LN84@UfnPdd_Ini@2|
  0a16c	e59d3004	 ldr         r3, [sp, #4]
  0a170	e2833066	 add         r3, r3, #0x66
  0a174	e1d310b0	 ldrh        r1, [r3]
  0a178	e59f01a0	 ldr         r0, [pc, #0x1A0]
  0a17c	eb000000	 bl          NKDbgPrintfW
  0a180	e3a03000	 mov         r3, #0
  0a184	e58d30a4	 str         r3, [sp, #0xA4]
  0a188		 |$LN85@UfnPdd_Ini@2|
  0a188	e3a03001	 mov         r3, #1
  0a18c	e58d30a8	 str         r3, [sp, #0xA8]
  0a190	ea000001	 b           |$LN87@UfnPdd_Ini@2|
  0a194		 |$LN86@UfnPdd_Ini@2|
  0a194	e3a03000	 mov         r3, #0
  0a198	e58d30a8	 str         r3, [sp, #0xA8]
  0a19c		 |$LN87@UfnPdd_Ini@2|

; 3577 :                 
; 3578 :                 DEBUGMSG(ZONE_INFO, (L"TxFIFOsz=%d\r\n", INREG8(&pGenRegs->TxFIFOsz)));

  0a19c	e59f3170	 ldr         r3, [pc, #0x170]
  0a1a0	e5933440	 ldr         r3, [r3, #0x440]
  0a1a4	e3130b01	 tst         r3, #1, 22
  0a1a8	0a000015	 beq         |$LN90@UfnPdd_Ini@2|
  0a1ac	e59f3160	 ldr         r3, [pc, #0x160]
  0a1b0	e5933440	 ldr         r3, [r3, #0x440]
  0a1b4	e3130801	 tst         r3, #1, 16
  0a1b8	0a000007	 beq         |$LN88@UfnPdd_Ini@2|
  0a1bc	e59d3004	 ldr         r3, [sp, #4]
  0a1c0	e2833062	 add         r3, r3, #0x62
  0a1c4	e5d31000	 ldrb        r1, [r3]
  0a1c8	e59f014c	 ldr         r0, [pc, #0x14C]
  0a1cc	eb000000	 bl          CeLogMsg
  0a1d0	e3a03001	 mov         r3, #1
  0a1d4	e58d30ac	 str         r3, [sp, #0xAC]
  0a1d8	ea000006	 b           |$LN89@UfnPdd_Ini@2|
  0a1dc		 |$LN88@UfnPdd_Ini@2|
  0a1dc	e59d3004	 ldr         r3, [sp, #4]
  0a1e0	e2833062	 add         r3, r3, #0x62
  0a1e4	e5d31000	 ldrb        r1, [r3]
  0a1e8	e59f012c	 ldr         r0, [pc, #0x12C]
  0a1ec	eb000000	 bl          NKDbgPrintfW
  0a1f0	e3a03000	 mov         r3, #0
  0a1f4	e58d30ac	 str         r3, [sp, #0xAC]
  0a1f8		 |$LN89@UfnPdd_Ini@2|
  0a1f8	e3a03001	 mov         r3, #1
  0a1fc	e58d30b0	 str         r3, [sp, #0xB0]
  0a200	ea000001	 b           |$LN91@UfnPdd_Ini@2|
  0a204		 |$LN90@UfnPdd_Ini@2|
  0a204	e3a03000	 mov         r3, #0
  0a208	e58d30b0	 str         r3, [sp, #0xB0]
  0a20c		 |$LN91@UfnPdd_Ini@2|

; 3579 :                 DEBUGMSG(ZONE_INFO, (L"TxFIFOadd=%d\r\n", INREG16(&pGenRegs->TxFIFOadd)));

  0a20c	e59f3100	 ldr         r3, [pc, #0x100]
  0a210	e5933440	 ldr         r3, [r3, #0x440]
  0a214	e3130b01	 tst         r3, #1, 22
  0a218	0a000015	 beq         |$LN94@UfnPdd_Ini@2|
  0a21c	e59f30f0	 ldr         r3, [pc, #0xF0]
  0a220	e5933440	 ldr         r3, [r3, #0x440]
  0a224	e3130801	 tst         r3, #1, 16
  0a228	0a000007	 beq         |$LN92@UfnPdd_Ini@2|
  0a22c	e59d3004	 ldr         r3, [sp, #4]
  0a230	e2833064	 add         r3, r3, #0x64
  0a234	e1d310b0	 ldrh        r1, [r3]
  0a238	e59f00d8	 ldr         r0, [pc, #0xD8]
  0a23c	eb000000	 bl          CeLogMsg
  0a240	e3a03001	 mov         r3, #1
  0a244	e58d30b4	 str         r3, [sp, #0xB4]
  0a248	ea000006	 b           |$LN93@UfnPdd_Ini@2|
  0a24c		 |$LN92@UfnPdd_Ini@2|
  0a24c	e59d3004	 ldr         r3, [sp, #4]
  0a250	e2833064	 add         r3, r3, #0x64
  0a254	e1d310b0	 ldrh        r1, [r3]
  0a258	e59f00b8	 ldr         r0, [pc, #0xB8]
  0a25c	eb000000	 bl          NKDbgPrintfW
  0a260	e3a03000	 mov         r3, #0
  0a264	e58d30b4	 str         r3, [sp, #0xB4]
  0a268		 |$LN93@UfnPdd_Ini@2|
  0a268	e3a03001	 mov         r3, #1
  0a26c	e58d30b8	 str         r3, [sp, #0xB8]
  0a270	ea000001	 b           |$LN95@UfnPdd_Ini@2|
  0a274		 |$LN94@UfnPdd_Ini@2|
  0a274	e3a03000	 mov         r3, #0
  0a278	e58d30b8	 str         r3, [sp, #0xB8]
  0a27c		 |$LN95@UfnPdd_Ini@2|
  0a27c		 |$LN2@UfnPdd_Ini@2|
  0a27c		 |$LN1@UfnPdd_Ini@2|

; 3580 :             }
; 3581 :             
; 3582 :         case EP_TYPE_ISOCH:
; 3583 :         default:
; 3584 :             DEBUGMSG(ZONE_INFO, (L"Unsupported endpoint Transfer type\r\n"));

  0a27c	e59f3090	 ldr         r3, [pc, #0x90]
  0a280	e5933440	 ldr         r3, [r3, #0x440]
  0a284	e3130b01	 tst         r3, #1, 22
  0a288	0a00000f	 beq         |$LN98@UfnPdd_Ini@2|
  0a28c	e59f3080	 ldr         r3, [pc, #0x80]
  0a290	e5933440	 ldr         r3, [r3, #0x440]
  0a294	e3130801	 tst         r3, #1, 16
  0a298	0a000004	 beq         |$LN96@UfnPdd_Ini@2|
  0a29c	e59f006c	 ldr         r0, [pc, #0x6C]
  0a2a0	eb000000	 bl          CeLogMsg
  0a2a4	e3a03001	 mov         r3, #1
  0a2a8	e58d30bc	 str         r3, [sp, #0xBC]
  0a2ac	ea000003	 b           |$LN97@UfnPdd_Ini@2|
  0a2b0		 |$LN96@UfnPdd_Ini@2|
  0a2b0	e59f0058	 ldr         r0, [pc, #0x58]
  0a2b4	eb000000	 bl          NKDbgPrintfW
  0a2b8	e3a03000	 mov         r3, #0
  0a2bc	e58d30bc	 str         r3, [sp, #0xBC]
  0a2c0		 |$LN97@UfnPdd_Ini@2|
  0a2c0	e3a03001	 mov         r3, #1
  0a2c4	e58d30c0	 str         r3, [sp, #0xC0]
  0a2c8	ea000001	 b           |$LN99@UfnPdd_Ini@2|
  0a2cc		 |$LN98@UfnPdd_Ini@2|
  0a2cc	e3a03000	 mov         r3, #0
  0a2d0	e58d30c0	 str         r3, [sp, #0xC0]
  0a2d4		 |$LN99@UfnPdd_Ini@2|
  0a2d4		 |$LN17@UfnPdd_Ini@2|

; 3585 :             break;
; 3586 :     }
; 3587 :     
; 3588 :     
; 3589 :     LeaveCriticalSection(&pPdd->epCS);

  0a2d4	e59d300c	 ldr         r3, [sp, #0xC]
  0a2d8	e2830078	 add         r0, r3, #0x78
  0a2dc	eb000000	 bl          LeaveCriticalSection

; 3590 :     
; 3591 :     pPdd->pfnEnUSBClock(FALSE);

  0a2e0	e3a00000	 mov         r0, #0
  0a2e4	e59d300c	 ldr         r3, [sp, #0xC]
  0a2e8	e283302c	 add         r3, r3, #0x2C
  0a2ec	e5933000	 ldr         r3, [r3]
  0a2f0	e1a0e00f	 mov         lr, pc
  0a2f4	e12fff13	 bx          r3

; 3592 :     
; 3593 :     
; 3594 :     return ERROR_SUCCESS;

  0a2f8	e3a03000	 mov         r3, #0
  0a2fc	e58d3010	 str         r3, [sp, #0x10]

; 3595 : }

  0a300	e59d0010	 ldr         r0, [sp, #0x10]
  0a304	e28dd0c4	 add         sp, sp, #0xC4
  0a308	e89d6000	 ldmia       sp, {sp, lr}
  0a30c	e12fff1e	 bx          lr
  0a310		 |$LN103@UfnPdd_Ini@2|
  0a310		 |$LN104@UfnPdd_Ini@2|
  0a310	00000000	 DCD         |??_C@_1EK@OCHCGGME@?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAt?$AAy@|
  0a314		 |$LN105@UfnPdd_Ini@2|
  0a314	00000000	 DCD         |dpCurSettings|
  0a318		 |$LN106@UfnPdd_Ini@2|
  0a318	00000000	 DCD         |??_C@_1BO@IAKFPHDB@?$AAT?$AAx?$AAF?$AAI?$AAF?$AAO?$AAa?$AAd?$AAd?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0a31c		 |$LN107@UfnPdd_Ini@2|
  0a31c	00000000	 DCD         |??_C@_1BM@NOGHKHDN@?$AAT?$AAx?$AAF?$AAI?$AAF?$AAO?$AAs?$AAz?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0a320		 |$LN108@UfnPdd_Ini@2|
  0a320	00000000	 DCD         |??_C@_1BO@JOHLNAB@?$AAR?$AAx?$AAF?$AAI?$AAF?$AAO?$AAa?$AAd?$AAd?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0a324		 |$LN109@UfnPdd_Ini@2|
  0a324	00000000	 DCD         |??_C@_1BM@NLNLKJHD@?$AAR?$AAx?$AAF?$AAI?$AAF?$AAO?$AAs?$AAz?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0a328		 |$LN110@UfnPdd_Ini@2|
  0a328	00000000	 DCD         |??_C@_1CG@HDFOCFAA@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  0a32c		 |$LN111@UfnPdd_Ini@2|
  0a32c	00000000	 DCD         |??_C@_1CM@KCLHNGIJ@?$AAT?$AAX?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  0a330		 |$LN112@UfnPdd_Ini@2|
  0a330	00000000	 DCD         |??_C@_1CM@FOEHEHMF@?$AAR?$AAX?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  0a334		 |$LN113@UfnPdd_Ini@2|
  0a334	00000000	 DCD         |??_C@_1CA@PKFILEPA@?$AAB?$AAu?$AAl?$AAk?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  0a338		 |$LN114@UfnPdd_Ini@2|
  0a338	00000000	 DCD         |??_C@_1CK@FIIFEBDM@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  0a33c		 |$LN115@UfnPdd_Ini@2|
  0a33c	00000000	 DCD         |??_C@_1IC@ILFKGKDM@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?3?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AA?$CF?$AAd@|
  0a340		 |$M50917|

			 ENDP  ; |UfnPdd_InitEndpoint|

	EXPORT	|??_C@_1CI@BMAHINGJ@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAt?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_SetAddress|

  00188			 AREA	 |.pdata|, PDATA
|$T50942| DCD	|$LN9@UfnPdd_Set|
	DCD	0x40002c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@BMAHINGJ@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAt?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  0a340			 AREA	 |.text|, CODE, ARM

  0a340		 |UfnPdd_SetAddress| PROC

; 3620 : {

  0a340		 |$LN9@UfnPdd_Set|
  0a340	e1a0c00d	 mov         r12, sp
  0a344	e92d0003	 stmdb       sp!, {r0, r1}
  0a348	e92d5000	 stmdb       sp!, {r12, lr}
  0a34c	e24dd010	 sub         sp, sp, #0x10
  0a350		 |$M50939|

; 3621 :     MUsbFnPdd_t *pPdd = pPddContext;

  0a350	e59d3018	 ldr         r3, [sp, #0x18]
  0a354	e58d3000	 str         r3, [sp]

; 3622 :     DEBUGMSG(ZONE_FUNCTION, (L"UfnPdd_SetAddress\r\n"));

  0a358	e59f308c	 ldr         r3, [pc, #0x8C]
  0a35c	e5933440	 ldr         r3, [r3, #0x440]
  0a360	e3130a01	 tst         r3, #1, 20
  0a364	0a00000f	 beq         |$LN5@UfnPdd_Set|
  0a368	e59f307c	 ldr         r3, [pc, #0x7C]
  0a36c	e5933440	 ldr         r3, [r3, #0x440]
  0a370	e3130801	 tst         r3, #1, 16
  0a374	0a000004	 beq         |$LN3@UfnPdd_Set|
  0a378	e59f0068	 ldr         r0, [pc, #0x68]
  0a37c	eb000000	 bl          CeLogMsg
  0a380	e3a03001	 mov         r3, #1
  0a384	e58d3008	 str         r3, [sp, #8]
  0a388	ea000003	 b           |$LN4@UfnPdd_Set|
  0a38c		 |$LN3@UfnPdd_Set|
  0a38c	e59f0054	 ldr         r0, [pc, #0x54]
  0a390	eb000000	 bl          NKDbgPrintfW
  0a394	e3a03000	 mov         r3, #0
  0a398	e58d3008	 str         r3, [sp, #8]
  0a39c		 |$LN4@UfnPdd_Set|
  0a39c	e3a03001	 mov         r3, #1
  0a3a0	e58d300c	 str         r3, [sp, #0xC]
  0a3a4	ea000001	 b           |$LN6@UfnPdd_Set|
  0a3a8		 |$LN5@UfnPdd_Set|
  0a3a8	e3a03000	 mov         r3, #0
  0a3ac	e58d300c	 str         r3, [sp, #0xC]
  0a3b0		 |$LN6@UfnPdd_Set|

; 3623 :     
; 3624 :     pPdd->bSetAddress = TRUE;

  0a3b0	e59d3000	 ldr         r3, [sp]
  0a3b4	e2832ffe	 add         r2, r3, #0xFE, 30
  0a3b8	e3a03001	 mov         r3, #1
  0a3bc	e5823000	 str         r3, [r2]

; 3625 :     pPdd->ucAddress = address;

  0a3c0	e59d3000	 ldr         r3, [sp]
  0a3c4	e2832ffd	 add         r2, r3, #0xFD, 30
  0a3c8	e5dd301c	 ldrb        r3, [sp, #0x1C]
  0a3cc	e5c23000	 strb        r3, [r2]

; 3626 :     
; 3627 :     return ERROR_SUCCESS;

  0a3d0	e3a03000	 mov         r3, #0
  0a3d4	e58d3004	 str         r3, [sp, #4]

; 3628 : }

  0a3d8	e59d0004	 ldr         r0, [sp, #4]
  0a3dc	e28dd010	 add         sp, sp, #0x10
  0a3e0	e89d6000	 ldmia       sp, {sp, lr}
  0a3e4	e12fff1e	 bx          lr
  0a3e8		 |$LN10@UfnPdd_Set|
  0a3e8		 |$LN11@UfnPdd_Set|
  0a3e8	00000000	 DCD         |??_C@_1CI@BMAHINGJ@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAt?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  0a3ec		 |$LN12@UfnPdd_Set|
  0a3ec	00000000	 DCD         |dpCurSettings|
  0a3f0		 |$M50940|

			 ENDP  ; |UfnPdd_SetAddress|

	EXPORT	|??_C@_1BO@MJOOMEBK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_Start|

  00190			 AREA	 |.pdata|, PDATA
|$T50955| DCD	|$LN9@UfnPdd_Sta@2|
	DCD	0x40002c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@MJOOMEBK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  0a3f0			 AREA	 |.text|, CODE, ARM

  0a3f0		 |UfnPdd_Start| PROC

; 3651 : {

  0a3f0		 |$LN9@UfnPdd_Sta@2|
  0a3f0	e1a0c00d	 mov         r12, sp
  0a3f4	e92d0001	 stmdb       sp!, {r0}
  0a3f8	e92d5000	 stmdb       sp!, {r12, lr}
  0a3fc	e24dd010	 sub         sp, sp, #0x10
  0a400		 |$M50952|

; 3652 :     MUsbFnPdd_t *pPdd = pPddContext;

  0a400	e59d3018	 ldr         r3, [sp, #0x18]
  0a404	e58d3000	 str         r3, [sp]

; 3653 : 
; 3654 :     DEBUGMSG(ZONE_FUNCTION, (L"UfnPdd_Start\r\n"));

  0a408	e59f308c	 ldr         r3, [pc, #0x8C]
  0a40c	e5933440	 ldr         r3, [r3, #0x440]
  0a410	e3130a01	 tst         r3, #1, 20
  0a414	0a00000f	 beq         |$LN5@UfnPdd_Sta@2|
  0a418	e59f307c	 ldr         r3, [pc, #0x7C]
  0a41c	e5933440	 ldr         r3, [r3, #0x440]
  0a420	e3130801	 tst         r3, #1, 16
  0a424	0a000004	 beq         |$LN3@UfnPdd_Sta@2|
  0a428	e59f0068	 ldr         r0, [pc, #0x68]
  0a42c	eb000000	 bl          CeLogMsg
  0a430	e3a03001	 mov         r3, #1
  0a434	e58d3008	 str         r3, [sp, #8]
  0a438	ea000003	 b           |$LN4@UfnPdd_Sta@2|
  0a43c		 |$LN3@UfnPdd_Sta@2|
  0a43c	e59f0054	 ldr         r0, [pc, #0x54]
  0a440	eb000000	 bl          NKDbgPrintfW
  0a444	e3a03000	 mov         r3, #0
  0a448	e58d3008	 str         r3, [sp, #8]
  0a44c		 |$LN4@UfnPdd_Sta@2|
  0a44c	e3a03001	 mov         r3, #1
  0a450	e58d300c	 str         r3, [sp, #0xC]
  0a454	ea000001	 b           |$LN6@UfnPdd_Sta@2|
  0a458		 |$LN5@UfnPdd_Sta@2|
  0a458	e3a03000	 mov         r3, #0
  0a45c	e58d300c	 str         r3, [sp, #0xC]
  0a460		 |$LN6@UfnPdd_Sta@2|

; 3655 : 
; 3656 :     BusChildIoControl(pPdd->hParentBus,IOCTL_USBOTG_REQUEST_START,NULL,0);    

  0a460	e3a03000	 mov         r3, #0
  0a464	e3a02000	 mov         r2, #0
  0a468	e59f1024	 ldr         r1, [pc, #0x24]
  0a46c	e59d0000	 ldr         r0, [sp]
  0a470	e2800030	 add         r0, r0, #0x30
  0a474	e5900000	 ldr         r0, [r0]
  0a478	eb000000	 bl          BusChildIoControl

; 3657 : 
; 3658 :     return ERROR_SUCCESS;

  0a47c	e3a03000	 mov         r3, #0
  0a480	e58d3004	 str         r3, [sp, #4]

; 3659 : }

  0a484	e59d0004	 ldr         r0, [sp, #4]
  0a488	e28dd010	 add         sp, sp, #0x10
  0a48c	e89d6000	 ldmia       sp, {sp, lr}
  0a490	e12fff1e	 bx          lr
  0a494		 |$LN10@UfnPdd_Sta@2|
  0a494		 |$LN11@UfnPdd_Sta@2|
  0a494	00222020	 DCD         0x222020
  0a498		 |$LN12@UfnPdd_Sta@2|
  0a498	00000000	 DCD         |??_C@_1BO@MJOOMEBK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  0a49c		 |$LN13@UfnPdd_Sta@2|
  0a49c	00000000	 DCD         |dpCurSettings|
  0a4a0		 |$M50953|

			 ENDP  ; |UfnPdd_Start|

	EXPORT	|??_C@_1HI@CJHGAMLI@?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?3?$AA?5?$AA?5?$AAU?$AAS?$AAB?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@EGGBAHJH@?$AAF?$AAS?$AA?5?$AAc?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@DPINCFMG@?$AAH?$AAS?$AA?5?$AAc?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@BDGEJFPP@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_RegisterDevice|

  00198			 AREA	 |.pdata|, PDATA
|$T50987| DCD	|$LN57@UfnPdd_Reg|
	DCD	0x4001cf04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@CJHGAMLI@?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?3?$AA?5?$AA?5?$AAU?$AAS?$AAB?$AA?5@| DCB "!"
	DCB	0x0, "!", 0x0, "!", 0x0, " ", 0x0, "U", 0x0, "f", 0x0, "n"
	DCB	0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_", 0x0, "R", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, ":", 0x0, " ", 0x0, " ", 0x0, "U", 0x0, "S", 0x0, "B"
	DCB	0x0, " ", 0x0, "F", 0x0, "N", 0x0, " ", 0x0, "d", 0x0, "o"
	DCB	0x0, "e", 0x0, "s", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t"
	DCB	0x0, " ", 0x0, "s", 0x0, "u", 0x0, "p", 0x0, "p", 0x0, "o"
	DCB	0x0, "r", 0x0, "t", 0x0, " ", 0x0, "I", 0x0, "S", 0x0, "O"
	DCB	0x0, "C", 0x0, "H", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@EGGBAHJH@?$AAF?$AAS?$AA?5?$AAc?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "F"
	DCB	0x0, "S", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "f"
	DCB	0x0, "i", 0x0, "g", 0x0, "u", 0x0, "r", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, ":", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@DPINCFMG@?$AAH?$AAS?$AA?5?$AAc?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "H"
	DCB	0x0, "S", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "f"
	DCB	0x0, "i", 0x0, "g", 0x0, "u", 0x0, "r", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, ":", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@BDGEJFPP@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, "P", 0x0, "d"
	DCB	0x0, "d", 0x0, "_", 0x0, "R", 0x0, "e", 0x0, "g", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  0a4a0			 AREA	 |.text|, CODE, ARM

  0a4a0		 |UfnPdd_RegisterDevice| PROC

; 3697 : {

  0a4a0		 |$LN57@UfnPdd_Reg|
  0a4a0	e1a0c00d	 mov         r12, sp
  0a4a4	e92d000f	 stmdb       sp!, {r0 - r3}
  0a4a8	e92d5000	 stmdb       sp!, {r12, lr}
  0a4ac	e24dd048	 sub         sp, sp, #0x48
  0a4b0		 |$M50984|

; 3698 :     // NOTE: For now use FS configuration.                                                                                  //
; 3699 :     //     Final endpoint configuration (maxPackeSize, dirRX) is done later in UfnPdd_InitEndpoint()  //
; 3700 :         
; 3701 :     MUsbFnPdd_t *pPdd = pPddContext;

  0a4b0	e59d3050	 ldr         r3, [sp, #0x50]
  0a4b4	e58d3010	 str         r3, [sp, #0x10]

; 3702 :     UFN_INTERFACE *pIFC;
; 3703 :     UFN_ENDPOINT *pEP;
; 3704 :     DWORD ep;
; 3705 :     DWORD ifc, epx;
; 3706 : 
; 3707 : 	UNREFERENCED_PARAMETER(pStringSets);
; 3708 : 	UNREFERENCED_PARAMETER(stringSets);
; 3709 : 
; 3710 :     DEBUGMSG(ZONE_PDD, (L"UsbFnPdd_RegisterDevice\r\n"));

  0a4b8	e59f370c	 ldr         r3, [pc, #0x70C]
  0a4bc	e5933440	 ldr         r3, [r3, #0x440]
  0a4c0	e3130902	 tst         r3, #2, 18
  0a4c4	0a00000f	 beq         |$LN35@UfnPdd_Reg|
  0a4c8	e59f36fc	 ldr         r3, [pc, #0x6FC]
  0a4cc	e5933440	 ldr         r3, [r3, #0x440]
  0a4d0	e3130801	 tst         r3, #1, 16
  0a4d4	0a000004	 beq         |$LN33@UfnPdd_Reg|
  0a4d8	e59f06f8	 ldr         r0, [pc, #0x6F8]
  0a4dc	eb000000	 bl          CeLogMsg
  0a4e0	e3a03001	 mov         r3, #1
  0a4e4	e58d301c	 str         r3, [sp, #0x1C]
  0a4e8	ea000003	 b           |$LN34@UfnPdd_Reg|
  0a4ec		 |$LN33@UfnPdd_Reg|
  0a4ec	e59f06e4	 ldr         r0, [pc, #0x6E4]
  0a4f0	eb000000	 bl          NKDbgPrintfW
  0a4f4	e3a03000	 mov         r3, #0
  0a4f8	e58d301c	 str         r3, [sp, #0x1C]
  0a4fc		 |$LN34@UfnPdd_Reg|
  0a4fc	e3a03001	 mov         r3, #1
  0a500	e58d3020	 str         r3, [sp, #0x20]
  0a504	ea000001	 b           |$LN36@UfnPdd_Reg|
  0a508		 |$LN35@UfnPdd_Reg|
  0a508	e3a03000	 mov         r3, #0
  0a50c	e58d3020	 str         r3, [sp, #0x20]
  0a510		 |$LN36@UfnPdd_Reg|

; 3711 :     
; 3712 :     DEBUGMSG(ZONE_INFO, (L"HS configuration: \r\n"));

  0a510	e59f36b4	 ldr         r3, [pc, #0x6B4]
  0a514	e5933440	 ldr         r3, [r3, #0x440]
  0a518	e3130b01	 tst         r3, #1, 22
  0a51c	0a00000f	 beq         |$LN39@UfnPdd_Reg|
  0a520	e59f36a4	 ldr         r3, [pc, #0x6A4]
  0a524	e5933440	 ldr         r3, [r3, #0x440]
  0a528	e3130801	 tst         r3, #1, 16
  0a52c	0a000004	 beq         |$LN37@UfnPdd_Reg|
  0a530	e59f069c	 ldr         r0, [pc, #0x69C]
  0a534	eb000000	 bl          CeLogMsg
  0a538	e3a03001	 mov         r3, #1
  0a53c	e58d3024	 str         r3, [sp, #0x24]
  0a540	ea000003	 b           |$LN38@UfnPdd_Reg|
  0a544		 |$LN37@UfnPdd_Reg|
  0a544	e59f0688	 ldr         r0, [pc, #0x688]
  0a548	eb000000	 bl          NKDbgPrintfW
  0a54c	e3a03000	 mov         r3, #0
  0a550	e58d3024	 str         r3, [sp, #0x24]
  0a554		 |$LN38@UfnPdd_Reg|
  0a554	e3a03001	 mov         r3, #1
  0a558	e58d3028	 str         r3, [sp, #0x28]
  0a55c	ea000001	 b           |$LN40@UfnPdd_Reg|
  0a560		 |$LN39@UfnPdd_Reg|
  0a560	e3a03000	 mov         r3, #0
  0a564	e58d3028	 str         r3, [sp, #0x28]
  0a568		 |$LN40@UfnPdd_Reg|

; 3713 :     prtDescriptorInfo(pHighSpeedDeviceDesc, pHighSpeedConfig, pHighSpeedConfigDesc);

  0a568	e59d205c	 ldr         r2, [sp, #0x5C]
  0a56c	e59d1058	 ldr         r1, [sp, #0x58]
  0a570	e59d0054	 ldr         r0, [sp, #0x54]
  0a574	eb000000	 bl          prtDescriptorInfo

; 3714 :     
; 3715 :     DEBUGMSG(ZONE_INFO, (L"FS configuration: \r\n"));

  0a578	e59f364c	 ldr         r3, [pc, #0x64C]
  0a57c	e5933440	 ldr         r3, [r3, #0x440]
  0a580	e3130b01	 tst         r3, #1, 22
  0a584	0a00000f	 beq         |$LN43@UfnPdd_Reg|
  0a588	e59f363c	 ldr         r3, [pc, #0x63C]
  0a58c	e5933440	 ldr         r3, [r3, #0x440]
  0a590	e3130801	 tst         r3, #1, 16
  0a594	0a000004	 beq         |$LN41@UfnPdd_Reg|
  0a598	e59f0630	 ldr         r0, [pc, #0x630]
  0a59c	eb000000	 bl          CeLogMsg
  0a5a0	e3a03001	 mov         r3, #1
  0a5a4	e58d302c	 str         r3, [sp, #0x2C]
  0a5a8	ea000003	 b           |$LN42@UfnPdd_Reg|
  0a5ac		 |$LN41@UfnPdd_Reg|
  0a5ac	e59f061c	 ldr         r0, [pc, #0x61C]
  0a5b0	eb000000	 bl          NKDbgPrintfW
  0a5b4	e3a03000	 mov         r3, #0
  0a5b8	e58d302c	 str         r3, [sp, #0x2C]
  0a5bc		 |$LN42@UfnPdd_Reg|
  0a5bc	e3a03001	 mov         r3, #1
  0a5c0	e58d3030	 str         r3, [sp, #0x30]
  0a5c4	ea000001	 b           |$LN44@UfnPdd_Reg|
  0a5c8		 |$LN43@UfnPdd_Reg|
  0a5c8	e3a03000	 mov         r3, #0
  0a5cc	e58d3030	 str         r3, [sp, #0x30]
  0a5d0		 |$LN44@UfnPdd_Reg|

; 3716 :     prtDescriptorInfo(pFullSpeedDeviceDesc, pFullSpeedConfig, pFullSpeedConfigDesc);

  0a5d0	e59d2068	 ldr         r2, [sp, #0x68]
  0a5d4	e59d1064	 ldr         r1, [sp, #0x64]
  0a5d8	e59d0060	 ldr         r0, [sp, #0x60]
  0a5dc	eb000000	 bl          prtDescriptorInfo

; 3717 :         
; 3718 :     // Remember self powered flag
; 3719 :     pPdd->selfPowered =(pFullSpeedConfig->Descriptor.bmAttributes & 0x20) != 0;

  0a5e0	e59d3064	 ldr         r3, [sp, #0x64]
  0a5e4	e283300b	 add         r3, r3, #0xB
  0a5e8	e5d33000	 ldrb        r3, [r3]
  0a5ec	e3130020	 tst         r3, #0x20
  0a5f0	0a000002	 beq         |$LN45@UfnPdd_Reg|
  0a5f4	e3a03001	 mov         r3, #1
  0a5f8	e58d3034	 str         r3, [sp, #0x34]
  0a5fc	ea000001	 b           |$LN46@UfnPdd_Reg|
  0a600		 |$LN45@UfnPdd_Reg|
  0a600	e3a03000	 mov         r3, #0
  0a604	e58d3034	 str         r3, [sp, #0x34]
  0a608		 |$LN46@UfnPdd_Reg|
  0a608	e59d3010	 ldr         r3, [sp, #0x10]
  0a60c	e2832070	 add         r2, r3, #0x70
  0a610	e59d3034	 ldr         r3, [sp, #0x34]
  0a614	e5823000	 str         r3, [r2]

; 3720 :     
; 3721 :     pPdd->ep[EP0].maxPacketSize = pFullSpeedDeviceDesc->bMaxPacketSize0;

  0a618	e59d3060	 ldr         r3, [sp, #0x60]
  0a61c	e2831007	 add         r1, r3, #7
  0a620	e59d3010	 ldr         r3, [sp, #0x10]
  0a624	e28320ac	 add         r2, r3, #0xAC
  0a628	e5d13000	 ldrb        r3, [r1]
  0a62c	e1c230b0	 strh        r3, [r2]

; 3722 :     
; 3723 :     // Configure Rx EPs
; 3724 :     for (ifc = 0; ifc < pFullSpeedConfig->Descriptor.bNumInterfaces; ifc++)

  0a630	e3a03000	 mov         r3, #0
  0a634	e58d3014	 str         r3, [sp, #0x14]
  0a638	ea000002	 b           |$LN30@UfnPdd_Reg|
  0a63c		 |$LN29@UfnPdd_Reg|
  0a63c	e59d3014	 ldr         r3, [sp, #0x14]
  0a640	e2833001	 add         r3, r3, #1
  0a644	e58d3014	 str         r3, [sp, #0x14]
  0a648		 |$LN30@UfnPdd_Reg|
  0a648	e59d3064	 ldr         r3, [sp, #0x64]
  0a64c	e2833008	 add         r3, r3, #8
  0a650	e5d32000	 ldrb        r2, [r3]
  0a654	e59d3014	 ldr         r3, [sp, #0x14]
  0a658	e1530002	 cmp         r3, r2
  0a65c	2a00005c	 bcs         |$LN28@UfnPdd_Reg|

; 3725 :     {
; 3726 :         // For each endpoint in interface
; 3727 :         pIFC = &pFullSpeedConfig->pInterfaces[ifc];

  0a660	e59d3064	 ldr         r3, [sp, #0x64]
  0a664	e2830018	 add         r0, r3, #0x18
  0a668	e59d1014	 ldr         r1, [sp, #0x14]
  0a66c	e3a0301c	 mov         r3, #0x1C
  0a670	e0020391	 mul         r2, r1, r3
  0a674	e5903000	 ldr         r3, [r0]
  0a678	e0833002	 add         r3, r3, r2
  0a67c	e58d3004	 str         r3, [sp, #4]

; 3728 :         for (epx = 0; epx < pIFC->Descriptor.bNumEndpoints; epx++)

  0a680	e3a03000	 mov         r3, #0
  0a684	e58d3000	 str         r3, [sp]
  0a688	ea000002	 b           |$LN27@UfnPdd_Reg|
  0a68c		 |$LN26@UfnPdd_Reg|
  0a68c	e59d3000	 ldr         r3, [sp]
  0a690	e2833001	 add         r3, r3, #1
  0a694	e58d3000	 str         r3, [sp]
  0a698		 |$LN27@UfnPdd_Reg|
  0a698	e59d3004	 ldr         r3, [sp, #4]
  0a69c	e2833008	 add         r3, r3, #8
  0a6a0	e5d32000	 ldrb        r2, [r3]
  0a6a4	e59d3000	 ldr         r3, [sp]
  0a6a8	e1530002	 cmp         r3, r2
  0a6ac	2a000047	 bcs         |$LN25@UfnPdd_Reg|

; 3729 :         {
; 3730 :             pEP = &pIFC->pEndpoints[epx];

  0a6b0	e59d3004	 ldr         r3, [sp, #4]
  0a6b4	e2830018	 add         r0, r3, #0x18
  0a6b8	e59d1000	 ldr         r1, [sp]
  0a6bc	e3a03014	 mov         r3, #0x14
  0a6c0	e0020391	 mul         r2, r1, r3
  0a6c4	e5903000	 ldr         r3, [r0]
  0a6c8	e0833002	 add         r3, r3, r2
  0a6cc	e58d3008	 str         r3, [sp, #8]

; 3731 :             // If it is Tx EP skip it
; 3732 :             if ((pEP->Descriptor.bEndpointAddress & 0x80) != 0)

  0a6d0	e59d3008	 ldr         r3, [sp, #8]
  0a6d4	e2833006	 add         r3, r3, #6
  0a6d8	e5d33000	 ldrb        r3, [r3]
  0a6dc	e3130080	 tst         r3, #0x80
  0a6e0	0a000000	 beq         |$LN24@UfnPdd_Reg|

; 3733 :                 continue;

  0a6e4	eaffffe8	 b           |$LN26@UfnPdd_Reg|
  0a6e8		 |$LN24@UfnPdd_Reg|

; 3734 :             // Get EP address
; 3735 :             ep = pEP->Descriptor.bEndpointAddress & 0x0F;

  0a6e8	e59d3008	 ldr         r3, [sp, #8]
  0a6ec	e2833006	 add         r3, r3, #6
  0a6f0	e5d33000	 ldrb        r3, [r3]
  0a6f4	e203300f	 and         r3, r3, #0xF
  0a6f8	e58d300c	 str         r3, [sp, #0xC]

; 3736 :             // Save max packet size & direction
; 3737 :             pPdd->ep[ep].maxPacketSize = pEP->Descriptor.wMaxPacketSize;

  0a6fc	e59d3008	 ldr         r3, [sp, #8]
  0a700	e2830008	 add         r0, r3, #8
  0a704	e59d3010	 ldr         r3, [sp, #0x10]
  0a708	e28310ac	 add         r1, r3, #0xAC
  0a70c	e59d200c	 ldr         r2, [sp, #0xC]
  0a710	e3a03034	 mov         r3, #0x34
  0a714	e0030392	 mul         r3, r2, r3
  0a718	e0811003	 add         r1, r1, r3
  0a71c	e5d03001	 ldrb        r3, [r0, #1]
  0a720	e1a03403	 mov         r3, r3, lsl #8
  0a724	e1a02803	 mov         r2, r3, lsl #16
  0a728	e1a02822	 mov         r2, r2, lsr #16
  0a72c	e5d03000	 ldrb        r3, [r0]
  0a730	e1833002	 orr         r3, r3, r2
  0a734	e1c130b0	 strh        r3, [r1]

; 3738 :             pPdd->ep[ep].dirRx = TRUE;

  0a738	e59d3010	 ldr         r3, [sp, #0x10]
  0a73c	e28310ac	 add         r1, r3, #0xAC
  0a740	e59d200c	 ldr         r2, [sp, #0xC]
  0a744	e3a03034	 mov         r3, #0x34
  0a748	e0030392	 mul         r3, r2, r3
  0a74c	e0813003	 add         r3, r1, r3
  0a750	e2832004	 add         r2, r3, #4
  0a754	e3a03001	 mov         r3, #1
  0a758	e5823000	 str         r3, [r2]

; 3739 :             
; 3740 :             if ((pEP->Descriptor.bmAttributes & 0x03) == 0x01)

  0a75c	e59d3008	 ldr         r3, [sp, #8]
  0a760	e2833007	 add         r3, r3, #7
  0a764	e5d33000	 ldrb        r3, [r3]
  0a768	e2033003	 and         r3, r3, #3
  0a76c	e3530001	 cmp         r3, #1
  0a770	1a000015	 bne         |$LN23@UfnPdd_Reg|

; 3741 :             {
; 3742 :                 DEBUGMSG(ZONE_INFO, (L"!!! UfnPdd_RegisterDevice:  USB FN does not support ISOCH\r\n"));

  0a774	e59f3450	 ldr         r3, [pc, #0x450]
  0a778	e5933440	 ldr         r3, [r3, #0x440]
  0a77c	e3130b01	 tst         r3, #1, 22
  0a780	0a00000f	 beq         |$LN49@UfnPdd_Reg|
  0a784	e59f3440	 ldr         r3, [pc, #0x440]
  0a788	e5933440	 ldr         r3, [r3, #0x440]
  0a78c	e3130801	 tst         r3, #1, 16
  0a790	0a000004	 beq         |$LN47@UfnPdd_Reg|
  0a794	e59f042c	 ldr         r0, [pc, #0x42C]
  0a798	eb000000	 bl          CeLogMsg
  0a79c	e3a03001	 mov         r3, #1
  0a7a0	e58d3038	 str         r3, [sp, #0x38]
  0a7a4	ea000003	 b           |$LN48@UfnPdd_Reg|
  0a7a8		 |$LN47@UfnPdd_Reg|
  0a7a8	e59f0418	 ldr         r0, [pc, #0x418]
  0a7ac	eb000000	 bl          NKDbgPrintfW
  0a7b0	e3a03000	 mov         r3, #0
  0a7b4	e58d3038	 str         r3, [sp, #0x38]
  0a7b8		 |$LN48@UfnPdd_Reg|
  0a7b8	e3a03001	 mov         r3, #1
  0a7bc	e58d303c	 str         r3, [sp, #0x3C]
  0a7c0	ea000001	 b           |$LN50@UfnPdd_Reg|
  0a7c4		 |$LN49@UfnPdd_Reg|
  0a7c4	e3a03000	 mov         r3, #0
  0a7c8	e58d303c	 str         r3, [sp, #0x3C]
  0a7cc		 |$LN50@UfnPdd_Reg|
  0a7cc		 |$LN23@UfnPdd_Reg|

; 3743 :             }
; 3744 :         }

  0a7cc	eaffffae	 b           |$LN26@UfnPdd_Reg|
  0a7d0		 |$LN25@UfnPdd_Reg|

; 3745 :     }

  0a7d0	eaffff99	 b           |$LN29@UfnPdd_Reg|
  0a7d4		 |$LN28@UfnPdd_Reg|

; 3746 :     
; 3747 :     // Configure Tx EPs
; 3748 :     for (ifc = 0; ifc < pFullSpeedConfig->Descriptor.bNumInterfaces; ifc++)

  0a7d4	e3a03000	 mov         r3, #0
  0a7d8	e58d3014	 str         r3, [sp, #0x14]
  0a7dc	ea000002	 b           |$LN22@UfnPdd_Reg|
  0a7e0		 |$LN21@UfnPdd_Reg|
  0a7e0	e59d3014	 ldr         r3, [sp, #0x14]
  0a7e4	e2833001	 add         r3, r3, #1
  0a7e8	e58d3014	 str         r3, [sp, #0x14]
  0a7ec		 |$LN22@UfnPdd_Reg|
  0a7ec	e59d3064	 ldr         r3, [sp, #0x64]
  0a7f0	e2833008	 add         r3, r3, #8
  0a7f4	e5d32000	 ldrb        r2, [r3]
  0a7f8	e59d3014	 ldr         r3, [sp, #0x14]
  0a7fc	e1530002	 cmp         r3, r2
  0a800	2a00005c	 bcs         |$LN20@UfnPdd_Reg|

; 3749 :     {
; 3750 :         // For each endpoint in interface
; 3751 :         pIFC = &pFullSpeedConfig->pInterfaces[ifc];

  0a804	e59d3064	 ldr         r3, [sp, #0x64]
  0a808	e2830018	 add         r0, r3, #0x18
  0a80c	e59d1014	 ldr         r1, [sp, #0x14]
  0a810	e3a0301c	 mov         r3, #0x1C
  0a814	e0020391	 mul         r2, r1, r3
  0a818	e5903000	 ldr         r3, [r0]
  0a81c	e0833002	 add         r3, r3, r2
  0a820	e58d3004	 str         r3, [sp, #4]

; 3752 :         for (epx = 0; epx < pIFC->Descriptor.bNumEndpoints; epx++)

  0a824	e3a03000	 mov         r3, #0
  0a828	e58d3000	 str         r3, [sp]
  0a82c	ea000002	 b           |$LN19@UfnPdd_Reg|
  0a830		 |$LN18@UfnPdd_Reg|
  0a830	e59d3000	 ldr         r3, [sp]
  0a834	e2833001	 add         r3, r3, #1
  0a838	e58d3000	 str         r3, [sp]
  0a83c		 |$LN19@UfnPdd_Reg|
  0a83c	e59d3004	 ldr         r3, [sp, #4]
  0a840	e2833008	 add         r3, r3, #8
  0a844	e5d32000	 ldrb        r2, [r3]
  0a848	e59d3000	 ldr         r3, [sp]
  0a84c	e1530002	 cmp         r3, r2
  0a850	2a000047	 bcs         |$LN17@UfnPdd_Reg|

; 3753 :         {
; 3754 :             pEP = &pIFC->pEndpoints[epx];

  0a854	e59d3004	 ldr         r3, [sp, #4]
  0a858	e2830018	 add         r0, r3, #0x18
  0a85c	e59d1000	 ldr         r1, [sp]
  0a860	e3a03014	 mov         r3, #0x14
  0a864	e0020391	 mul         r2, r1, r3
  0a868	e5903000	 ldr         r3, [r0]
  0a86c	e0833002	 add         r3, r3, r2
  0a870	e58d3008	 str         r3, [sp, #8]

; 3755 :             // If it is Rx EP skip it
; 3756 :             if ((pEP->Descriptor.bEndpointAddress & 0x80) == 0)

  0a874	e59d3008	 ldr         r3, [sp, #8]
  0a878	e2833006	 add         r3, r3, #6
  0a87c	e5d33000	 ldrb        r3, [r3]
  0a880	e3130080	 tst         r3, #0x80
  0a884	1a000000	 bne         |$LN16@UfnPdd_Reg|

; 3757 :                 continue;

  0a888	eaffffe8	 b           |$LN18@UfnPdd_Reg|
  0a88c		 |$LN16@UfnPdd_Reg|

; 3758 :             // Get EP address
; 3759 :             ep = pEP->Descriptor.bEndpointAddress & 0x0F;

  0a88c	e59d3008	 ldr         r3, [sp, #8]
  0a890	e2833006	 add         r3, r3, #6
  0a894	e5d33000	 ldrb        r3, [r3]
  0a898	e203300f	 and         r3, r3, #0xF
  0a89c	e58d300c	 str         r3, [sp, #0xC]

; 3760 :             // Save max packet size & direction
; 3761 :             pPdd->ep[ep].maxPacketSize = pEP->Descriptor.wMaxPacketSize;

  0a8a0	e59d3008	 ldr         r3, [sp, #8]
  0a8a4	e2830008	 add         r0, r3, #8
  0a8a8	e59d3010	 ldr         r3, [sp, #0x10]
  0a8ac	e28310ac	 add         r1, r3, #0xAC
  0a8b0	e59d200c	 ldr         r2, [sp, #0xC]
  0a8b4	e3a03034	 mov         r3, #0x34
  0a8b8	e0030392	 mul         r3, r2, r3
  0a8bc	e0811003	 add         r1, r1, r3
  0a8c0	e5d03001	 ldrb        r3, [r0, #1]
  0a8c4	e1a03403	 mov         r3, r3, lsl #8
  0a8c8	e1a02803	 mov         r2, r3, lsl #16
  0a8cc	e1a02822	 mov         r2, r2, lsr #16
  0a8d0	e5d03000	 ldrb        r3, [r0]
  0a8d4	e1833002	 orr         r3, r3, r2
  0a8d8	e1c130b0	 strh        r3, [r1]

; 3762 :             pPdd->ep[ep].dirRx = FALSE;

  0a8dc	e59d3010	 ldr         r3, [sp, #0x10]
  0a8e0	e28310ac	 add         r1, r3, #0xAC
  0a8e4	e59d200c	 ldr         r2, [sp, #0xC]
  0a8e8	e3a03034	 mov         r3, #0x34
  0a8ec	e0030392	 mul         r3, r2, r3
  0a8f0	e0813003	 add         r3, r1, r3
  0a8f4	e2832004	 add         r2, r3, #4
  0a8f8	e3a03000	 mov         r3, #0
  0a8fc	e5823000	 str         r3, [r2]

; 3763 :             
; 3764 :             if ((pEP->Descriptor.bmAttributes & 0x03) == 0x01)

  0a900	e59d3008	 ldr         r3, [sp, #8]
  0a904	e2833007	 add         r3, r3, #7
  0a908	e5d33000	 ldrb        r3, [r3]
  0a90c	e2033003	 and         r3, r3, #3
  0a910	e3530001	 cmp         r3, #1
  0a914	1a000015	 bne         |$LN15@UfnPdd_Reg|

; 3765 :             {
; 3766 :                 DEBUGMSG(ZONE_INFO, (L"!!! UfnPdd_RegisterDevice:  USB FN does not support ISOCH\r\n"));

  0a918	e59f32ac	 ldr         r3, [pc, #0x2AC]
  0a91c	e5933440	 ldr         r3, [r3, #0x440]
  0a920	e3130b01	 tst         r3, #1, 22
  0a924	0a00000f	 beq         |$LN53@UfnPdd_Reg|
  0a928	e59f329c	 ldr         r3, [pc, #0x29C]
  0a92c	e5933440	 ldr         r3, [r3, #0x440]
  0a930	e3130801	 tst         r3, #1, 16
  0a934	0a000004	 beq         |$LN51@UfnPdd_Reg|
  0a938	e59f0288	 ldr         r0, [pc, #0x288]
  0a93c	eb000000	 bl          CeLogMsg
  0a940	e3a03001	 mov         r3, #1
  0a944	e58d3040	 str         r3, [sp, #0x40]
  0a948	ea000003	 b           |$LN52@UfnPdd_Reg|
  0a94c		 |$LN51@UfnPdd_Reg|
  0a94c	e59f0274	 ldr         r0, [pc, #0x274]
  0a950	eb000000	 bl          NKDbgPrintfW
  0a954	e3a03000	 mov         r3, #0
  0a958	e58d3040	 str         r3, [sp, #0x40]
  0a95c		 |$LN52@UfnPdd_Reg|
  0a95c	e3a03001	 mov         r3, #1
  0a960	e58d3044	 str         r3, [sp, #0x44]
  0a964	ea000001	 b           |$LN54@UfnPdd_Reg|
  0a968		 |$LN53@UfnPdd_Reg|
  0a968	e3a03000	 mov         r3, #0
  0a96c	e58d3044	 str         r3, [sp, #0x44]
  0a970		 |$LN54@UfnPdd_Reg|
  0a970		 |$LN15@UfnPdd_Reg|

; 3767 :             }
; 3768 :             
; 3769 :         }

  0a970	eaffffae	 b           |$LN18@UfnPdd_Reg|
  0a974		 |$LN17@UfnPdd_Reg|

; 3770 :     }

  0a974	eaffff99	 b           |$LN21@UfnPdd_Reg|
  0a978		 |$LN20@UfnPdd_Reg|

; 3771 : 
; 3772 :     // Handle Special case for Mass Storage Devices
; 3773 :     pPdd->FsEpMassStoreFlags = 0;

  0a978	e59d3010	 ldr         r3, [sp, #0x10]
  0a97c	e2833b01	 add         r3, r3, #1, 22
  0a980	e283202c	 add         r2, r3, #0x2C
  0a984	e3a03000	 mov         r3, #0
  0a988	e1c230b0	 strh        r3, [r2]

; 3774 :     for (ifc = 0; ifc < pFullSpeedConfig->Descriptor.bNumInterfaces; ifc++)

  0a98c	e3a03000	 mov         r3, #0
  0a990	e58d3014	 str         r3, [sp, #0x14]
  0a994	ea000002	 b           |$LN14@UfnPdd_Reg|
  0a998		 |$LN13@UfnPdd_Reg|
  0a998	e59d3014	 ldr         r3, [sp, #0x14]
  0a99c	e2833001	 add         r3, r3, #1
  0a9a0	e58d3014	 str         r3, [sp, #0x14]
  0a9a4		 |$LN14@UfnPdd_Reg|
  0a9a4	e59d3064	 ldr         r3, [sp, #0x64]
  0a9a8	e2833008	 add         r3, r3, #8
  0a9ac	e5d32000	 ldrb        r2, [r3]
  0a9b0	e59d3014	 ldr         r3, [sp, #0x14]
  0a9b4	e1530002	 cmp         r3, r2
  0a9b8	2a000035	 bcs         |$LN12@UfnPdd_Reg|

; 3775 :     {
; 3776 :         // For each endpoint in interface
; 3777 :         pIFC = &pFullSpeedConfig->pInterfaces[ifc];

  0a9bc	e59d3064	 ldr         r3, [sp, #0x64]
  0a9c0	e2830018	 add         r0, r3, #0x18
  0a9c4	e59d1014	 ldr         r1, [sp, #0x14]
  0a9c8	e3a0301c	 mov         r3, #0x1C
  0a9cc	e0020391	 mul         r2, r1, r3
  0a9d0	e5903000	 ldr         r3, [r0]
  0a9d4	e0833002	 add         r3, r3, r2
  0a9d8	e58d3004	 str         r3, [sp, #4]

; 3778 : 
; 3779 :         // check for mass storage device
; 3780 :         if(pIFC->Descriptor.bInterfaceClass == 0x08)

  0a9dc	e59d3004	 ldr         r3, [sp, #4]
  0a9e0	e2833009	 add         r3, r3, #9
  0a9e4	e5d33000	 ldrb        r3, [r3]
  0a9e8	e3530008	 cmp         r3, #8
  0a9ec	1a000027	 bne         |$LN11@UfnPdd_Reg|

; 3781 :         {
; 3782 :             // do not complete packets with 0 that end are divizable by max packet size
; 3783 :             // this will prevent the CSW packet from being sent and will force the host to reset us
; 3784 :             
; 3785 :             // set a bit flag for endpoints
; 3786 :             for (epx = 0; epx < pIFC->Descriptor.bNumEndpoints; epx++)

  0a9f0	e3a03000	 mov         r3, #0
  0a9f4	e58d3000	 str         r3, [sp]
  0a9f8	ea000002	 b           |$LN10@UfnPdd_Reg|
  0a9fc		 |$LN9@UfnPdd_Reg|
  0a9fc	e59d3000	 ldr         r3, [sp]
  0aa00	e2833001	 add         r3, r3, #1
  0aa04	e58d3000	 str         r3, [sp]
  0aa08		 |$LN10@UfnPdd_Reg|
  0aa08	e59d3004	 ldr         r3, [sp, #4]
  0aa0c	e2833008	 add         r3, r3, #8
  0aa10	e5d32000	 ldrb        r2, [r3]
  0aa14	e59d3000	 ldr         r3, [sp]
  0aa18	e1530002	 cmp         r3, r2
  0aa1c	2a00001b	 bcs         |$LN8@UfnPdd_Reg|

; 3787 :             {
; 3788 :                 pEP = &pIFC->pEndpoints[epx];

  0aa20	e59d3004	 ldr         r3, [sp, #4]
  0aa24	e2830018	 add         r0, r3, #0x18
  0aa28	e59d1000	 ldr         r1, [sp]
  0aa2c	e3a03014	 mov         r3, #0x14
  0aa30	e0020391	 mul         r2, r1, r3
  0aa34	e5903000	 ldr         r3, [r0]
  0aa38	e0833002	 add         r3, r3, r2
  0aa3c	e58d3008	 str         r3, [sp, #8]

; 3789 :                 // Get EP address
; 3790 :                 ep = pEP->Descriptor.bEndpointAddress & 0x0F;

  0aa40	e59d3008	 ldr         r3, [sp, #8]
  0aa44	e2833006	 add         r3, r3, #6
  0aa48	e5d33000	 ldrb        r3, [r3]
  0aa4c	e203300f	 and         r3, r3, #0xF
  0aa50	e58d300c	 str         r3, [sp, #0xC]

; 3791 :                 // Save Bit Flag
; 3792 :                 pPdd->FsEpMassStoreFlags |= 1 << ep;

  0aa54	e59d3010	 ldr         r3, [sp, #0x10]
  0aa58	e2833b01	 add         r3, r3, #1, 22
  0aa5c	e283102c	 add         r1, r3, #0x2C
  0aa60	e59d200c	 ldr         r2, [sp, #0xC]
  0aa64	e3a03001	 mov         r3, #1
  0aa68	e1a02213	 mov         r2, r3, lsl r2
  0aa6c	e1d130b0	 ldrh        r3, [r1]
  0aa70	e1831002	 orr         r1, r3, r2
  0aa74	e59d3010	 ldr         r3, [sp, #0x10]
  0aa78	e2833b01	 add         r3, r3, #1, 22
  0aa7c	e283202c	 add         r2, r3, #0x2C
  0aa80	e1a03801	 mov         r3, r1, lsl #16
  0aa84	e1a03823	 mov         r3, r3, lsr #16
  0aa88	e1c230b0	 strh        r3, [r2]

; 3793 :             }

  0aa8c	eaffffda	 b           |$LN9@UfnPdd_Reg|
  0aa90		 |$LN8@UfnPdd_Reg|
  0aa90		 |$LN11@UfnPdd_Reg|

; 3794 :         }
; 3795 :     }

  0aa90	eaffffc0	 b           |$LN13@UfnPdd_Reg|
  0aa94		 |$LN12@UfnPdd_Reg|

; 3796 :     pPdd->HsEpMassStoreFlags = 0;

  0aa94	e59d3010	 ldr         r3, [sp, #0x10]
  0aa98	e2833b01	 add         r3, r3, #1, 22
  0aa9c	e283202e	 add         r2, r3, #0x2E
  0aaa0	e3a03000	 mov         r3, #0
  0aaa4	e1c230b0	 strh        r3, [r2]

; 3797 :     for (ifc = 0; ifc < pFullSpeedConfig->Descriptor.bNumInterfaces; ifc++)

  0aaa8	e3a03000	 mov         r3, #0
  0aaac	e58d3014	 str         r3, [sp, #0x14]
  0aab0	ea000002	 b           |$LN7@UfnPdd_Reg|
  0aab4		 |$LN6@UfnPdd_Reg|
  0aab4	e59d3014	 ldr         r3, [sp, #0x14]
  0aab8	e2833001	 add         r3, r3, #1
  0aabc	e58d3014	 str         r3, [sp, #0x14]
  0aac0		 |$LN7@UfnPdd_Reg|
  0aac0	e59d3064	 ldr         r3, [sp, #0x64]
  0aac4	e2833008	 add         r3, r3, #8
  0aac8	e5d32000	 ldrb        r2, [r3]
  0aacc	e59d3014	 ldr         r3, [sp, #0x14]
  0aad0	e1530002	 cmp         r3, r2
  0aad4	2a000035	 bcs         |$LN5@UfnPdd_Reg|

; 3798 :     {
; 3799 :         // For each endpoint in interface
; 3800 :         pIFC = &pHighSpeedConfig->pInterfaces[ifc];

  0aad8	e59d3058	 ldr         r3, [sp, #0x58]
  0aadc	e2830018	 add         r0, r3, #0x18
  0aae0	e59d1014	 ldr         r1, [sp, #0x14]
  0aae4	e3a0301c	 mov         r3, #0x1C
  0aae8	e0020391	 mul         r2, r1, r3
  0aaec	e5903000	 ldr         r3, [r0]
  0aaf0	e0833002	 add         r3, r3, r2
  0aaf4	e58d3004	 str         r3, [sp, #4]

; 3801 : 
; 3802 :         // check for mass storage device
; 3803 :         if(pIFC->Descriptor.bInterfaceClass == 0x08)

  0aaf8	e59d3004	 ldr         r3, [sp, #4]
  0aafc	e2833009	 add         r3, r3, #9
  0ab00	e5d33000	 ldrb        r3, [r3]
  0ab04	e3530008	 cmp         r3, #8
  0ab08	1a000027	 bne         |$LN4@UfnPdd_Reg|

; 3804 :         {
; 3805 :             // do not complete packets with 0 that end are divizable by max packet size
; 3806 :             // this will prevent the CSW packet form being sent and will force the host to reset us
; 3807 : 
; 3808 :             // set a bit flag for endpoints
; 3809 :             for (epx = 0; epx < pIFC->Descriptor.bNumEndpoints; epx++)

  0ab0c	e3a03000	 mov         r3, #0
  0ab10	e58d3000	 str         r3, [sp]
  0ab14	ea000002	 b           |$LN3@UfnPdd_Reg|
  0ab18		 |$LN2@UfnPdd_Reg|
  0ab18	e59d3000	 ldr         r3, [sp]
  0ab1c	e2833001	 add         r3, r3, #1
  0ab20	e58d3000	 str         r3, [sp]
  0ab24		 |$LN3@UfnPdd_Reg|
  0ab24	e59d3004	 ldr         r3, [sp, #4]
  0ab28	e2833008	 add         r3, r3, #8
  0ab2c	e5d32000	 ldrb        r2, [r3]
  0ab30	e59d3000	 ldr         r3, [sp]
  0ab34	e1530002	 cmp         r3, r2
  0ab38	2a00001b	 bcs         |$LN1@UfnPdd_Reg|

; 3810 :             {
; 3811 :                 pEP = &pIFC->pEndpoints[epx];

  0ab3c	e59d3004	 ldr         r3, [sp, #4]
  0ab40	e2830018	 add         r0, r3, #0x18
  0ab44	e59d1000	 ldr         r1, [sp]
  0ab48	e3a03014	 mov         r3, #0x14
  0ab4c	e0020391	 mul         r2, r1, r3
  0ab50	e5903000	 ldr         r3, [r0]
  0ab54	e0833002	 add         r3, r3, r2
  0ab58	e58d3008	 str         r3, [sp, #8]

; 3812 :                 // Get EP address
; 3813 :                 ep = pEP->Descriptor.bEndpointAddress & 0x0F;

  0ab5c	e59d3008	 ldr         r3, [sp, #8]
  0ab60	e2833006	 add         r3, r3, #6
  0ab64	e5d33000	 ldrb        r3, [r3]
  0ab68	e203300f	 and         r3, r3, #0xF
  0ab6c	e58d300c	 str         r3, [sp, #0xC]

; 3814 :                 // Save Bit Flag
; 3815 :                 pPdd->HsEpMassStoreFlags |= 1 << ep;

  0ab70	e59d3010	 ldr         r3, [sp, #0x10]
  0ab74	e2833b01	 add         r3, r3, #1, 22
  0ab78	e283102e	 add         r1, r3, #0x2E
  0ab7c	e59d200c	 ldr         r2, [sp, #0xC]
  0ab80	e3a03001	 mov         r3, #1
  0ab84	e1a02213	 mov         r2, r3, lsl r2
  0ab88	e1d130b0	 ldrh        r3, [r1]
  0ab8c	e1831002	 orr         r1, r3, r2
  0ab90	e59d3010	 ldr         r3, [sp, #0x10]
  0ab94	e2833b01	 add         r3, r3, #1, 22
  0ab98	e283202e	 add         r2, r3, #0x2E
  0ab9c	e1a03801	 mov         r3, r1, lsl #16
  0aba0	e1a03823	 mov         r3, r3, lsr #16
  0aba4	e1c230b0	 strh        r3, [r2]

; 3816 :             }

  0aba8	eaffffda	 b           |$LN2@UfnPdd_Reg|
  0abac		 |$LN1@UfnPdd_Reg|
  0abac		 |$LN4@UfnPdd_Reg|

; 3817 :         }
; 3818 :     }

  0abac	eaffffc0	 b           |$LN6@UfnPdd_Reg|
  0abb0		 |$LN5@UfnPdd_Reg|

; 3819 : 
; 3820 :     // Done
; 3821 :     return ERROR_SUCCESS;

  0abb0	e3a03000	 mov         r3, #0
  0abb4	e58d3018	 str         r3, [sp, #0x18]

; 3822 : }

  0abb8	e59d0018	 ldr         r0, [sp, #0x18]
  0abbc	e28dd048	 add         sp, sp, #0x48
  0abc0	e89d6000	 ldmia       sp, {sp, lr}
  0abc4	e12fff1e	 bx          lr
  0abc8		 |$LN58@UfnPdd_Reg|
  0abc8		 |$LN59@UfnPdd_Reg|
  0abc8	00000000	 DCD         |??_C@_1HI@CJHGAMLI@?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?3?$AA?5?$AA?5?$AAU?$AAS?$AAB?$AA?5@|
  0abcc		 |$LN60@UfnPdd_Reg|
  0abcc	00000000	 DCD         |dpCurSettings|
  0abd0		 |$LN61@UfnPdd_Reg|
  0abd0	00000000	 DCD         |??_C@_1CK@EGGBAHJH@?$AAF?$AAS?$AA?5?$AAc?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  0abd4		 |$LN62@UfnPdd_Reg|
  0abd4	00000000	 DCD         |??_C@_1CK@DPINCFMG@?$AAH?$AAS?$AA?5?$AAc?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  0abd8		 |$LN63@UfnPdd_Reg|
  0abd8	00000000	 DCD         |??_C@_1DE@BDGEJFPP@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  0abdc		 |$M50985|

			 ENDP  ; |UfnPdd_RegisterDevice|

	EXPORT	|??_C@_1DO@LLFDMMFK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_IsEndpointSupportable|

  001a0			 AREA	 |.pdata|, PDATA
|$T51007| DCD	|$LN14@UfnPdd_IsE@2|
	DCD	0x40005304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@LLFDMMFK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "s", 0x0, "E", 0x0, "n", 0x0, "d", 0x0, "p"
	DCB	0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "S", 0x0, "u"
	DCB	0x0, "p", 0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "a"
	DCB	0x0, "b", 0x0, "l", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  0abdc			 AREA	 |.text|, CODE, ARM

  0abdc		 |UfnPdd_IsEndpointSupportable| PROC

; 3860 : {

  0abdc		 |$LN14@UfnPdd_IsE@2|
  0abdc	e1a0c00d	 mov         r12, sp
  0abe0	e92d000f	 stmdb       sp!, {r0 - r3}
  0abe4	e92d5000	 stmdb       sp!, {r12, lr}
  0abe8	e24dd014	 sub         sp, sp, #0x14
  0abec		 |$M51004|

; 3861 : 	UNREFERENCED_PARAMETER(pPddContext);
; 3862 : 	UNREFERENCED_PARAMETER(speed);
; 3863 : 	UNREFERENCED_PARAMETER(configurationValue);
; 3864 : 	UNREFERENCED_PARAMETER(interfaceNumber);
; 3865 : 	UNREFERENCED_PARAMETER(alternateSetting);
; 3866 : 
; 3867 :     DEBUGMSG(ZONE_FUNCTION, (L"UfnPdd_IsEndpointSupportable\r\n"));

  0abec	e59f3128	 ldr         r3, [pc, #0x128]
  0abf0	e5933440	 ldr         r3, [r3, #0x440]
  0abf4	e3130a01	 tst         r3, #1, 20
  0abf8	0a00000f	 beq         |$LN6@UfnPdd_IsE@2|
  0abfc	e59f3118	 ldr         r3, [pc, #0x118]
  0ac00	e5933440	 ldr         r3, [r3, #0x440]
  0ac04	e3130801	 tst         r3, #1, 16
  0ac08	0a000004	 beq         |$LN4@UfnPdd_IsE@2|
  0ac0c	e59f0110	 ldr         r0, [pc, #0x110]
  0ac10	eb000000	 bl          CeLogMsg
  0ac14	e3a03001	 mov         r3, #1
  0ac18	e58d3004	 str         r3, [sp, #4]
  0ac1c	ea000003	 b           |$LN5@UfnPdd_IsE@2|
  0ac20		 |$LN4@UfnPdd_IsE@2|
  0ac20	e59f00fc	 ldr         r0, [pc, #0xFC]
  0ac24	eb000000	 bl          NKDbgPrintfW
  0ac28	e3a03000	 mov         r3, #0
  0ac2c	e58d3004	 str         r3, [sp, #4]
  0ac30		 |$LN5@UfnPdd_IsE@2|
  0ac30	e3a03001	 mov         r3, #1
  0ac34	e58d3008	 str         r3, [sp, #8]
  0ac38	ea000001	 b           |$LN7@UfnPdd_IsE@2|
  0ac3c		 |$LN6@UfnPdd_IsE@2|
  0ac3c	e3a03000	 mov         r3, #0
  0ac40	e58d3008	 str         r3, [sp, #8]
  0ac44		 |$LN7@UfnPdd_IsE@2|

; 3868 :     
; 3869 :     // Update maximal packet size for EP0
; 3870 :     if (endpoint == 0)

  0ac44	e59d3020	 ldr         r3, [sp, #0x20]
  0ac48	e3530000	 cmp         r3, #0
  0ac4c	1a00002b	 bne         |$LN1@UfnPdd_IsE@2|

; 3871 :     {
; 3872 :         DEBUGCHK(pEPDesc->wMaxPacketSize <= 64);

  0ac50	e59d3028	 ldr         r3, [sp, #0x28]
  0ac54	e2831004	 add         r1, r3, #4
  0ac58	e5d13001	 ldrb        r3, [r1, #1]
  0ac5c	e1a03403	 mov         r3, r3, lsl #8
  0ac60	e1a02803	 mov         r2, r3, lsl #16
  0ac64	e1a02822	 mov         r2, r2, lsr #16
  0ac68	e5d13000	 ldrb        r3, [r1]
  0ac6c	e1833002	 orr         r3, r3, r2
  0ac70	e3530040	 cmp         r3, #0x40
  0ac74	ca000002	 bgt         |$LN8@UfnPdd_IsE@2|
  0ac78	e3a03001	 mov         r3, #1
  0ac7c	e58d300c	 str         r3, [sp, #0xC]
  0ac80	ea000007	 b           |$LN9@UfnPdd_IsE@2|
  0ac84		 |$LN8@UfnPdd_IsE@2|
  0ac84	e3a03ef2	 mov         r3, #0xF2, 28
  0ac88	e59f2090	 ldr         r2, [pc, #0x90]
  0ac8c	e59f1088	 ldr         r1, [pc, #0x88]
  0ac90	e59f0080	 ldr         r0, [pc, #0x80]
  0ac94	eb000000	 bl          NKDbgPrintfW
  0ac98	e6000010	 __debugbreak_ce
  0ac9c	e3a03000	 mov         r3, #0
  0aca0	e58d300c	 str         r3, [sp, #0xC]
  0aca4		 |$LN9@UfnPdd_IsE@2|

; 3873 :         DEBUGCHK(pEPDesc->bmAttributes == USB_ENDPOINT_TYPE_CONTROL);

  0aca4	e59d3028	 ldr         r3, [sp, #0x28]
  0aca8	e2833003	 add         r3, r3, #3
  0acac	e5d33000	 ldrb        r3, [r3]
  0acb0	e3530000	 cmp         r3, #0
  0acb4	1a000002	 bne         |$LN10@UfnPdd_IsE@2|
  0acb8	e3a03001	 mov         r3, #1
  0acbc	e58d3010	 str         r3, [sp, #0x10]
  0acc0	ea000008	 b           |$LN11@UfnPdd_IsE@2|
  0acc4		 |$LN10@UfnPdd_IsE@2|
  0acc4	e3a03c0f	 mov         r3, #0xF, 24
  0acc8	e3833021	 orr         r3, r3, #0x21
  0accc	e59f204c	 ldr         r2, [pc, #0x4C]
  0acd0	e59f1044	 ldr         r1, [pc, #0x44]
  0acd4	e59f003c	 ldr         r0, [pc, #0x3C]
  0acd8	eb000000	 bl          NKDbgPrintfW
  0acdc	e6000010	 __debugbreak_ce
  0ace0	e3a03000	 mov         r3, #0
  0ace4	e58d3010	 str         r3, [sp, #0x10]
  0ace8		 |$LN11@UfnPdd_IsE@2|

; 3874 :         pEPDesc->wMaxPacketSize = 64;

  0ace8	e59d3028	 ldr         r3, [sp, #0x28]
  0acec	e2832004	 add         r2, r3, #4
  0acf0	e3a03040	 mov         r3, #0x40
  0acf4	e5c23000	 strb        r3, [r2]
  0acf8	e1a03423	 mov         r3, r3, lsr #8
  0acfc	e5c23001	 strb        r3, [r2, #1]
  0ad00		 |$LN1@UfnPdd_IsE@2|

; 3875 :     }
; 3876 :     
; 3877 :     return ERROR_SUCCESS;

  0ad00	e3a03000	 mov         r3, #0
  0ad04	e58d3000	 str         r3, [sp]

; 3878 : }

  0ad08	e59d0000	 ldr         r0, [sp]
  0ad0c	e28dd014	 add         sp, sp, #0x14
  0ad10	e89d6000	 ldmia       sp, {sp, lr}
  0ad14	e12fff1e	 bx          lr
  0ad18		 |$LN15@UfnPdd_IsE@2|
  0ad18		 |$LN16@UfnPdd_IsE@2|
  0ad18	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  0ad1c		 |$LN17@UfnPdd_IsE@2|
  0ad1c	00000000	 DCD         |dpCurSettings|
  0ad20		 |$LN18@UfnPdd_IsE@2|
  0ad20	00000000	 DCD         |??_C@_1JM@NKOACJGE@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  0ad24		 |$LN19@UfnPdd_IsE@2|
  0ad24	00000000	 DCD         |??_C@_1DO@LLFDMMFK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  0ad28		 |$M51005|

			 ENDP  ; |UfnPdd_IsEndpointSupportable|

	EXPORT	|??_C@_1EI@OOOAJGFK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAa?$AAb?$AAl@| [ DATA ] ; `string'
	EXPORT	|UfnPdd_IsConfigurationSupportable|

  001a8			 AREA	 |.pdata|, PDATA
|$T51022| DCD	|$LN19@UfnPdd_IsC|
	DCD	0x40008904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@OOOAJGFK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAa?$AAb?$AAl@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "f"
	DCB	0x0, "i", 0x0, "g", 0x0, "u", 0x0, "r", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, "S", 0x0, "u", 0x0, "p"
	DCB	0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  0ad28			 AREA	 |.text|, CODE, ARM

  0ad28		 |UfnPdd_IsConfigurationSupportable| PROC

; 3910 : {

  0ad28		 |$LN19@UfnPdd_IsC|
  0ad28	e1a0c00d	 mov         r12, sp
  0ad2c	e92d0007	 stmdb       sp!, {r0 - r2}
  0ad30	e92d5000	 stmdb       sp!, {r12, lr}
  0ad34	e24dd024	 sub         sp, sp, #0x24
  0ad38		 |$M51019|

; 3911 :     DWORD rc = ERROR_INVALID_PARAMETER;

  0ad38	e3a03057	 mov         r3, #0x57
  0ad3c	e58d3004	 str         r3, [sp, #4]

; 3912 :     UFN_INTERFACE *pIFC;
; 3913 :     UFN_ENDPOINT *pEP;
; 3914 :     WORD ifc, epx, count;
; 3915 :     WORD size;
; 3916 : 
; 3917 : 	UNREFERENCED_PARAMETER(pPddContext);
; 3918 : 	UNREFERENCED_PARAMETER(speed);
; 3919 : 
; 3920 :     DEBUGMSG(ZONE_FUNCTION, (L"UfnPdd_IsConfigurationSupportable\r\n"));

  0ad40	e59f3200	 ldr         r3, [pc, #0x200]
  0ad44	e5933440	 ldr         r3, [r3, #0x440]
  0ad48	e3130a01	 tst         r3, #1, 20
  0ad4c	0a00000f	 beq         |$LN15@UfnPdd_IsC|
  0ad50	e59f31f0	 ldr         r3, [pc, #0x1F0]
  0ad54	e5933440	 ldr         r3, [r3, #0x440]
  0ad58	e3130801	 tst         r3, #1, 16
  0ad5c	0a000004	 beq         |$LN13@UfnPdd_IsC|
  0ad60	e59f01dc	 ldr         r0, [pc, #0x1DC]
  0ad64	eb000000	 bl          CeLogMsg
  0ad68	e3a03001	 mov         r3, #1
  0ad6c	e58d301c	 str         r3, [sp, #0x1C]
  0ad70	ea000003	 b           |$LN14@UfnPdd_IsC|
  0ad74		 |$LN13@UfnPdd_IsC|
  0ad74	e59f01c8	 ldr         r0, [pc, #0x1C8]
  0ad78	eb000000	 bl          NKDbgPrintfW
  0ad7c	e3a03000	 mov         r3, #0
  0ad80	e58d301c	 str         r3, [sp, #0x1C]
  0ad84		 |$LN14@UfnPdd_IsC|
  0ad84	e3a03001	 mov         r3, #1
  0ad88	e58d3020	 str         r3, [sp, #0x20]
  0ad8c	ea000001	 b           |$LN16@UfnPdd_IsC|
  0ad90		 |$LN15@UfnPdd_IsC|
  0ad90	e3a03000	 mov         r3, #0
  0ad94	e58d3020	 str         r3, [sp, #0x20]
  0ad98		 |$LN16@UfnPdd_IsC|

; 3921 :     
; 3922 :     // Clear number of end points
; 3923 :     count = 0;

  0ad98	e3a03000	 mov         r3, #0
  0ad9c	e1cd30b0	 strh        r3, [sp]

; 3924 :     
; 3925 :     // For each interface in configuration
; 3926 :     for (ifc = 0; ifc < pConfig->Descriptor.bNumInterfaces; ifc++)

  0ada0	e3a03000	 mov         r3, #0
  0ada4	e1cd31b6	 strh        r3, [sp, #0x16]
  0ada8	ea000004	 b           |$LN10@UfnPdd_IsC|
  0adac		 |$LN9@UfnPdd_IsC|
  0adac	e1dd31b6	 ldrh        r3, [sp, #0x16]
  0adb0	e2833001	 add         r3, r3, #1
  0adb4	e1a03803	 mov         r3, r3, lsl #16
  0adb8	e1a03823	 mov         r3, r3, lsr #16
  0adbc	e1cd31b6	 strh        r3, [sp, #0x16]
  0adc0		 |$LN10@UfnPdd_IsC|
  0adc0	e1dd31b6	 ldrh        r3, [sp, #0x16]
  0adc4	e1a02003	 mov         r2, r3
  0adc8	e59d3034	 ldr         r3, [sp, #0x34]
  0adcc	e2833008	 add         r3, r3, #8
  0add0	e5d33000	 ldrb        r3, [r3]
  0add4	e1520003	 cmp         r2, r3
  0add8	aa00004e	 bge         |$LN8@UfnPdd_IsC|

; 3927 :     {
; 3928 :         // For each endpoint in interface
; 3929 :         pIFC = &pConfig->pInterfaces[ifc];

  0addc	e59d3034	 ldr         r3, [sp, #0x34]
  0ade0	e2830018	 add         r0, r3, #0x18
  0ade4	e1dd31b6	 ldrh        r3, [sp, #0x16]
  0ade8	e1a01003	 mov         r1, r3
  0adec	e3a0301c	 mov         r3, #0x1C
  0adf0	e0020391	 mul         r2, r1, r3
  0adf4	e5903000	 ldr         r3, [r0]
  0adf8	e0833002	 add         r3, r3, r2
  0adfc	e58d300c	 str         r3, [sp, #0xC]

; 3930 :         for (epx = 0; epx < pIFC->Descriptor.bNumEndpoints; epx++)

  0ae00	e3a03000	 mov         r3, #0
  0ae04	e1cd30b8	 strh        r3, [sp, #8]
  0ae08	ea000004	 b           |$LN7@UfnPdd_IsC|
  0ae0c		 |$LN6@UfnPdd_IsC|
  0ae0c	e1dd30b8	 ldrh        r3, [sp, #8]
  0ae10	e2833001	 add         r3, r3, #1
  0ae14	e1a03803	 mov         r3, r3, lsl #16
  0ae18	e1a03823	 mov         r3, r3, lsr #16
  0ae1c	e1cd30b8	 strh        r3, [sp, #8]
  0ae20		 |$LN7@UfnPdd_IsC|
  0ae20	e1dd30b8	 ldrh        r3, [sp, #8]
  0ae24	e1a02003	 mov         r2, r3
  0ae28	e59d300c	 ldr         r3, [sp, #0xC]
  0ae2c	e2833008	 add         r3, r3, #8
  0ae30	e5d33000	 ldrb        r3, [r3]
  0ae34	e1520003	 cmp         r2, r3
  0ae38	aa00002c	 bge         |$LN5@UfnPdd_IsC|

; 3931 :         {
; 3932 :             pEP = &pIFC->pEndpoints[epx];

  0ae3c	e59d300c	 ldr         r3, [sp, #0xC]
  0ae40	e2830018	 add         r0, r3, #0x18
  0ae44	e1dd30b8	 ldrh        r3, [sp, #8]
  0ae48	e1a01003	 mov         r1, r3
  0ae4c	e3a03014	 mov         r3, #0x14
  0ae50	e0020391	 mul         r2, r1, r3
  0ae54	e5903000	 ldr         r3, [r0]
  0ae58	e0833002	 add         r3, r3, r2
  0ae5c	e58d3010	 str         r3, [sp, #0x10]

; 3933 :             
; 3934 :             if (pEP->Descriptor.wMaxPacketSize > MAX_EPX_PKTSIZE) 

  0ae60	e59d3010	 ldr         r3, [sp, #0x10]
  0ae64	e2831008	 add         r1, r3, #8
  0ae68	e5d13001	 ldrb        r3, [r1, #1]
  0ae6c	e1a03403	 mov         r3, r3, lsl #8
  0ae70	e1a02803	 mov         r2, r3, lsl #16
  0ae74	e1a02822	 mov         r2, r2, lsr #16
  0ae78	e5d13000	 ldrb        r3, [r1]
  0ae7c	e1833002	 orr         r3, r3, r2
  0ae80	e3530b01	 cmp         r3, #1, 22
  0ae84	da000002	 ble         |$LN4@UfnPdd_IsC|

; 3935 :             {
; 3936 :                 size = MAX_EPX_PKTSIZE;

  0ae88	e3a03b01	 mov         r3, #1, 22
  0ae8c	e1cd31b4	 strh        r3, [sp, #0x14]

; 3937 :             }
; 3938 :             else

  0ae90	ea000008	 b           |$LN3@UfnPdd_IsC|
  0ae94		 |$LN4@UfnPdd_IsC|

; 3939 :             {
; 3940 :                 size = pEP->Descriptor.wMaxPacketSize;

  0ae94	e59d3010	 ldr         r3, [sp, #0x10]
  0ae98	e2831008	 add         r1, r3, #8
  0ae9c	e5d13001	 ldrb        r3, [r1, #1]
  0aea0	e1a03403	 mov         r3, r3, lsl #8
  0aea4	e1a02803	 mov         r2, r3, lsl #16
  0aea8	e1a02822	 mov         r2, r2, lsr #16
  0aeac	e5d13000	 ldrb        r3, [r1]
  0aeb0	e1833002	 orr         r3, r3, r2
  0aeb4	e1cd31b4	 strh        r3, [sp, #0x14]
  0aeb8		 |$LN3@UfnPdd_IsC|

; 3941 :             }
; 3942 :             
; 3943 :             
; 3944 :             // Is it ISO end point?
; 3945 :             if ((pEP->Descriptor.bmAttributes & 0x03) == 0x01)

  0aeb8	e59d3010	 ldr         r3, [sp, #0x10]
  0aebc	e2833007	 add         r3, r3, #7
  0aec0	e5d33000	 ldrb        r3, [r3]
  0aec4	e2033003	 and         r3, r3, #3
  0aec8	e3530001	 cmp         r3, #1
  0aecc	1a000000	 bne         |$LN2@UfnPdd_IsC|

; 3946 :             {
; 3947 :                 // Actual driver doesn't support ISO endpoints
; 3948 :                 goto cleanUp;

  0aed0	ea000015	 b           |$cleanUp$49251|
  0aed4		 |$LN2@UfnPdd_IsC|

; 3949 :             }
; 3950 :             // Update EP size
; 3951 :             pEP->Descriptor.wMaxPacketSize = size;

  0aed4	e59d3010	 ldr         r3, [sp, #0x10]
  0aed8	e2832008	 add         r2, r3, #8
  0aedc	e1dd31b4	 ldrh        r3, [sp, #0x14]
  0aee0	e5c23000	 strb        r3, [r2]
  0aee4	e1a03423	 mov         r3, r3, lsr #8
  0aee8	e5c23001	 strb        r3, [r2, #1]

; 3952 :         }

  0aeec	eaffffc6	 b           |$LN6@UfnPdd_IsC|
  0aef0		 |$LN5@UfnPdd_IsC|

; 3953 :         // Add number of end points to total count
; 3954 :         count = count +pIFC->Descriptor.bNumEndpoints;

  0aef0	e1dd30b0	 ldrh        r3, [sp]
  0aef4	e1a02003	 mov         r2, r3
  0aef8	e59d300c	 ldr         r3, [sp, #0xC]
  0aefc	e2833008	 add         r3, r3, #8
  0af00	e5d33000	 ldrb        r3, [r3]
  0af04	e0823003	 add         r3, r2, r3
  0af08	e1a03803	 mov         r3, r3, lsl #16
  0af0c	e1a03823	 mov         r3, r3, lsr #16
  0af10	e1cd30b0	 strh        r3, [sp]

; 3955 :     }

  0af14	eaffffa4	 b           |$LN9@UfnPdd_IsC|
  0af18		 |$LN8@UfnPdd_IsC|

; 3956 :     
; 3957 :     // Can we support this configuration?
; 3958 :     if (count < USBD_EP_COUNT)

  0af18	e1dd30b0	 ldrh        r3, [sp]
  0af1c	e3530010	 cmp         r3, #0x10
  0af20	aa000001	 bge         |$LN1@UfnPdd_IsC|

; 3959 :         rc = ERROR_SUCCESS;

  0af24	e3a03000	 mov         r3, #0
  0af28	e58d3004	 str         r3, [sp, #4]
  0af2c		 |$LN1@UfnPdd_IsC|
  0af2c		 |$cleanUp$49251|

; 3960 :     
; 3961 : cleanUp:
; 3962 :     return rc;

  0af2c	e59d3004	 ldr         r3, [sp, #4]
  0af30	e58d3018	 str         r3, [sp, #0x18]

; 3963 : }

  0af34	e59d0018	 ldr         r0, [sp, #0x18]
  0af38	e28dd024	 add         sp, sp, #0x24
  0af3c	e89d6000	 ldmia       sp, {sp, lr}
  0af40	e12fff1e	 bx          lr
  0af44		 |$LN20@UfnPdd_IsC|
  0af44		 |$LN21@UfnPdd_IsC|
  0af44	00000000	 DCD         |??_C@_1EI@OOOAJGFK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAa?$AAb?$AAl@|
  0af48		 |$LN22@UfnPdd_IsC|
  0af48	00000000	 DCD         |dpCurSettings|
  0af4c		 |$M51020|

			 ENDP  ; |UfnPdd_IsConfigurationSupportable|

	EXPORT	|??_C@_1HG@JAPBDJM@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAV?$AAb?$AAu?$AAs?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@FEHBENHA@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAU?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAV?$AAb?$AAu?$AAs?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@MBOAOBHJ@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAV?$AAb?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@HCNMINEF@?$AAU?$AAS?$AAB?$AAH?$AAF?$AA?5?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAa?$AAl?$AAu?$AAe?$AAE?$AAx?$AA?5?$AAU?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAV?$AAb?$AAu?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@CKFJFILD@?$AAU?$AAS?$AAB?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAr?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_11LOCGONAA@?$AA?$AA@| [ DATA ]	; `string'
	EXPORT	|??_C@_1DK@FDGIEPDF@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAO?$AAT?$AAG?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@KEGLAEOK@?$AAO?$AAT?$AAG?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@KIICLDGL@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAi?$AAn?$AA?5?$AAp?$AAe?$AAr?$AAf?$AAo?$AAr?$AAm?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAa?$AAt?$AAt?$AAa?$AAc?$AAh?$AA?5?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@EADKIEIP@?$AAA?$AAt?$AAt?$AAa?$AAc?$AAh?$AAP?$AAr?$AAo?$AAc?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AA4?$AA?5?$AAp?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt?$AAe?$AAr?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@PIDKFHDH@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAO?$AAT?$AAG?$AAA?$AAt?$AAt?$AAa?$AAc?$AAh?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@JNKHMKGH@?$AAO?$AAT?$AAG?$AAA?$AAt?$AAt?$AAa?$AAc?$AAh?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@HNFDCIIG@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@PKGPLCAL@?$AAo?$AAm?$AAa?$AAp?$AA_?$AAm?$AAu?$AAs?$AAb?$AAo?$AAt?$AAg?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JG@KGFPJKPC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAv?$AAi?$AAr?$AAt?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JO@FKEMNFJK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@NMMLFAJE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@HAPAPLP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@NPIAJGOE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@LIECJJPD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@OHKBPCFO@?$AAM?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAh?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@KINFHLOC@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|UfnPdd_Init|
	IMPORT	|wcscpy|
	IMPORT	|GetProcAddressW|
	IMPORT	|GetModuleHandleW|
	IMPORT	|VirtualCopy|
	IMPORT	|VirtualAlloc|
	IMPORT	|AllocPhysMem|
	IMPORT	|CreateBusAccessHandle|
	IMPORT	|GetDeviceRegistryParams|
	IMPORT	|CreateEventW|
	IMPORT	|InitializeCriticalSection|
	IMPORT	|LocalAlloc|

  001b0			 AREA	 |.pdata|, PDATA
|$T51104| DCD	|$LN90@UfnPdd_Ini@3|
	DCD	0xc0039e04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@JAPBDJM@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAV?$AAb?$AAu?$AAs?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "V", 0x0, "b", 0x0, "u", 0x0, "s", 0x0, " "
	DCB	0x0, "C", 0x0, "h", 0x0, "a", 0x0, "r", 0x0, "g", 0x0, "e"
	DCB	0x0, " ", 0x0, "E", 0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "d"
	DCB	0x0, "e", 0x0, "f", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "(", 0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'"
	DCB	0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, ")", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@FEHBENHA@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAU?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAV?$AAb?$AAu?$AAs?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AA?5@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "U", 0x0, "s", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "V", 0x0, "b", 0x0, "u", 0x0, "s", 0x0, " "
	DCB	0x0, "C", 0x0, "h", 0x0, "a", 0x0, "r", 0x0, "g", 0x0, "e"
	DCB	0x0, " ", 0x0, "E", 0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@MBOAOBHJ@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAV?$AAb?$AAu@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "o"
	DCB	0x0, "p", 0x0, "e", 0x0, "n", 0x0, " ", 0x0, "V", 0x0, "b"
	DCB	0x0, "u", 0x0, "s", 0x0, " ", 0x0, "C", 0x0, "h", 0x0, "a"
	DCB	0x0, "r", 0x0, "g", 0x0, "e", 0x0, " ", 0x0, "E", 0x0, "v"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "'", 0x0, "%"
	DCB	0x0, "s", 0x0, "'", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@HCNMINEF@?$AAU?$AAS?$AAB?$AAH?$AAF?$AA?5?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAa?$AAl?$AAu?$AAe?$AAE?$AAx?$AA?5?$AAU?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAV?$AAb?$AAu?$AAs@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "H", 0x0, "F", 0x0, " ", 0x0, "R"
	DCB	0x0, "e", 0x0, "g", 0x0, "Q", 0x0, "u", 0x0, "e", 0x0, "r"
	DCB	0x0, "y", 0x0, "V", 0x0, "a", 0x0, "l", 0x0, "u", 0x0, "e"
	DCB	0x0, "E", 0x0, "x", 0x0, " ", 0x0, "U", 0x0, "s", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "V", 0x0, "b", 0x0, "u"
	DCB	0x0, "s", 0x0, " ", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "r"
	DCB	0x0, "g", 0x0, "e", 0x0, " ", 0x0, "E", 0x0, "v", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@CKFJFILD@?$AAU?$AAS?$AAB?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAr?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "r"
	DCB	0x0, "g", 0x0, "e", 0x0, "r", 0x0, "N", 0x0, "o", 0x0, "t"
	DCB	0x0, "i", 0x0, "f", 0x0, "y", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_11LOCGONAA@?$AA?$AA@| DCB 0x0, 0x0		; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@FDGIEPDF@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAO?$AAT?$AAG?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "u", 0x0, "r", 0x0, "e"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "g", 0x0, "e"
	DCB	0x0, "t", 0x0, " ", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@KEGLAEOK@?$AAO?$AAT?$AAG?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$AA@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "C"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@KIICLDGL@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAi?$AAn?$AA?5?$AAp?$AAe?$AAr?$AAf?$AAo?$AAr?$AAm?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAa?$AAt?$AAt?$AAa?$AAc?$AAh?$AA?5?$AAp@| DCB "E"
	DCB	0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, " ", 0x0, "p", 0x0, "e", 0x0, "r", 0x0, "f"
	DCB	0x0, "o", 0x0, "r", 0x0, "m", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "t", 0x0, "h", 0x0, "e", 0x0, " ", 0x0, "a"
	DCB	0x0, "t", 0x0, "t", 0x0, "a", 0x0, "c", 0x0, "h", 0x0, " "
	DCB	0x0, "p", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "d"
	DCB	0x0, "u", 0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@EADKIEIP@?$AAA?$AAt?$AAt?$AAa?$AAc?$AAh?$AAP?$AAr?$AAo?$AAc?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AA4?$AA?5?$AAp?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt?$AAe?$AAr?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "A"
	DCB	0x0, "t", 0x0, "t", 0x0, "a", 0x0, "c", 0x0, "h", 0x0, "P"
	DCB	0x0, "r", 0x0, "o", 0x0, "c", 0x0, " ", 0x0, "w", 0x0, "i"
	DCB	0x0, "t", 0x0, "h", 0x0, " ", 0x0, "4", 0x0, " ", 0x0, "p"
	DCB	0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@PIDKFHDH@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAO?$AAT?$AAG?$AAA?$AAt?$AAt?$AAa?$AAc?$AAh?$AA?$AN?$AA?6?$AA?$AA@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "u", 0x0, "r", 0x0, "e"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "g", 0x0, "e"
	DCB	0x0, "t", 0x0, " ", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, "A"
	DCB	0x0, "t", 0x0, "t", 0x0, "a", 0x0, "c", 0x0, "h", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@JNKHMKGH@?$AAO?$AAT?$AAG?$AAA?$AAt?$AAt?$AAa?$AAc?$AAh?$AA?$AA@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, "A", 0x0, "t", 0x0, "t", 0x0, "a"
	DCB	0x0, "c", 0x0, "h", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@HNFDCIIG@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "u", 0x0, "r", 0x0, "e"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "l", 0x0, "o"
	DCB	0x0, "a", 0x0, "d", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@PKGPLCAL@?$AAo?$AAm?$AAa?$AAp?$AA_?$AAm?$AAu?$AAs?$AAb?$AAo?$AAt?$AAg?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@| DCB "o"
	DCB	0x0, "m", 0x0, "a", 0x0, "p", 0x0, "_", 0x0, "m", 0x0, "u"
	DCB	0x0, "s", 0x0, "b", 0x0, "o", 0x0, "t", 0x0, "g", 0x0, "."
	DCB	0x0, "d", 0x0, "l", 0x0, "l", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JG@KGFPJKPC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAv?$AAi?$AAr?$AAt?$AAu@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "v", 0x0, "i", 0x0, "r", 0x0, "t"
	DCB	0x0, "u", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "p", 0x0, "y", 0x0, " ", 0x0, "a", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, " ", 0x0, "f"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "T", 0x0, "x", 0x0, "0"
	DCB	0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "(", 0x0, "s", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JO@FKEMNFJK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "v"
	DCB	0x0, "i", 0x0, "r", 0x0, "t", 0x0, "u", 0x0, "a", 0x0, "l"
	DCB	0x0, " ", 0x0, "a", 0x0, "d", 0x0, "d", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "T", 0x0, "x", 0x0, "0", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "(", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@NMMLFAJE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "D"
	DCB	0x0, "M", 0x0, "A", 0x0, " ", 0x0, "T", 0x0, "x", 0x0, "0"
	DCB	0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "(", 0x0, "s", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@HAPAPLP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "D"
	DCB	0x0, "M", 0x0, "A", 0x0, " ", 0x0, "R", 0x0, "x", 0x0, "0"
	DCB	0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "(", 0x0, "s", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@NPIAJGOE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "o", 0x0, "p", 0x0, "e", 0x0, "n"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "s", 0x0, " "
	DCB	0x0, "d", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@LIECJJPD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "p", 0x0, "a"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@OHKBPCFO@?$AAM?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAh?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo@| DCB "M"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "F", 0x0, "N", 0x0, ":"
	DCB	0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "c", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "h"
	DCB	0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "D"
	DCB	0x0, "o", 0x0, "w", 0x0, "n", 0x0, "E", 0x0, "v", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@KINFHLOC@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "c"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  000b4			 AREA	 |.xdata|, DATA
|$T51100| DCD	0xffffff0c
; Function compile flags: /Odtp

  0af4c			 AREA	 |.text|, CODE, ARM

  0af4c	00000000	 DCD         |__GSHandlerCheck|
  0af50	00000000	 DCD         |$T51100|

  0af54		 |UfnPdd_Init| PROC

; 3991 : {

  0af54		 |$LN90@UfnPdd_Ini@3|
  0af54	e1a0c00d	 mov         r12, sp
  0af58	e92d000f	 stmdb       sp!, {r0 - r3}
  0af5c	e92d5000	 stmdb       sp!, {r12, lr}
  0af60	e24ddfc6	 sub         sp, sp, #0xC6, 30
  0af64		 |$M51101|
  0af64	e59f3e5c	 ldr         r3, [pc, #0xE5C]
  0af68	e5933000	 ldr         r3, [r3]
  0af6c	e58d323c	 str         r3, [sp, #0x23C]

; 3992 :     DWORD rc = ERROR_INVALID_PARAMETER;

  0af70	e3a03057	 mov         r3, #0x57
  0af74	e58d300c	 str         r3, [sp, #0xC]

; 3993 :     HMODULE hOTGInstance;
; 3994 :     LPMUSB_ATTACH_PROC lphAttachProc;
; 3995 :     BOOL bRet = FALSE;

  0af78	e3a03000	 mov         r3, #0
  0af7c	e58d3024	 str         r3, [sp, #0x24]

; 3996 :     PHSMUSB_T pOTG;
; 3997 :     MUsbFnPdd_t *pPdd;
; 3998 :     HKEY hkDevice;
; 3999 :     DWORD dwStatus;
; 4000 :     DWORD dwType, dwSize;
; 4001 :     TCHAR szChargeEventName[MAX_PATH+1];
; 4002 :     
; 4003 :     DEBUGMSG(ZONE_FUNCTION, (TEXT("UfnPdd_Init called\r\n")));

  0af80	e59f3dd8	 ldr         r3, [pc, #0xDD8]
  0af84	e5933440	 ldr         r3, [r3, #0x440]
  0af88	e3130a01	 tst         r3, #1, 20
  0af8c	0a00000f	 beq         |$LN24@UfnPdd_Ini@3|
  0af90	e59f3dc8	 ldr         r3, [pc, #0xDC8]
  0af94	e5933440	 ldr         r3, [r3, #0x440]
  0af98	e3130801	 tst         r3, #1, 16
  0af9c	0a000004	 beq         |$LN22@UfnPdd_Ini@3|
  0afa0	e59f0e1c	 ldr         r0, [pc, #0xE1C]
  0afa4	eb000000	 bl          CeLogMsg
  0afa8	e3a03001	 mov         r3, #1
  0afac	e58d3258	 str         r3, [sp, #0x258]
  0afb0	ea000003	 b           |$LN23@UfnPdd_Ini@3|
  0afb4		 |$LN22@UfnPdd_Ini@3|
  0afb4	e59f0e08	 ldr         r0, [pc, #0xE08]
  0afb8	eb000000	 bl          NKDbgPrintfW
  0afbc	e3a03000	 mov         r3, #0
  0afc0	e58d3258	 str         r3, [sp, #0x258]
  0afc4		 |$LN23@UfnPdd_Ini@3|
  0afc4	e3a03001	 mov         r3, #1
  0afc8	e58d325c	 str         r3, [sp, #0x25C]
  0afcc	ea000001	 b           |$LN25@UfnPdd_Ini@3|
  0afd0		 |$LN24@UfnPdd_Ini@3|
  0afd0	e3a03000	 mov         r3, #0
  0afd4	e58d325c	 str         r3, [sp, #0x25C]
  0afd8		 |$LN25@UfnPdd_Ini@3|

; 4004 :     // Allocate PDD object
; 4005 :     pPdd = LocalAlloc(LPTR, sizeof(MUsbFnPdd_t));

  0afd8	e3a01b01	 mov         r1, #1, 22
  0afdc	e381103c	 orr         r1, r1, #0x3C
  0afe0	e3a00040	 mov         r0, #0x40
  0afe4	eb000000	 bl          LocalAlloc
  0afe8	e58d0260	 str         r0, [sp, #0x260]
  0afec	e59d3260	 ldr         r3, [sp, #0x260]
  0aff0	e58d3238	 str         r3, [sp, #0x238]

; 4006 :     if (pPdd == NULL)

  0aff4	e59d3238	 ldr         r3, [sp, #0x238]
  0aff8	e3530000	 cmp         r3, #0
  0affc	1a000000	 bne         |$LN19@UfnPdd_Ini@3|

; 4007 :         goto cleanUp;

  0b000	ea000338	 b           |$cleanUp$49278|
  0b004		 |$LN19@UfnPdd_Ini@3|

; 4008 :     
; 4009 :     // Initialize critical section
; 4010 :     InitializeCriticalSection(&pPdd->dmaCS);

  0b004	e59d3238	 ldr         r3, [sp, #0x238]
  0b008	e2830034	 add         r0, r3, #0x34
  0b00c	eb000000	 bl          InitializeCriticalSection

; 4011 :     InitializeCriticalSection(&pPdd->epCS);

  0b010	e59d3238	 ldr         r3, [sp, #0x238]
  0b014	e2830078	 add         r0, r3, #0x78
  0b018	eb000000	 bl          InitializeCriticalSection

; 4012 :     
; 4013 :     InitializeCriticalSection(&pPdd->powerStateCS);

  0b01c	e59d3238	 ldr         r3, [sp, #0x238]
  0b020	e283008c	 add         r0, r3, #0x8C
  0b024	eb000000	 bl          InitializeCriticalSection

; 4014 :     pPdd->hPowerDownEvent = CreateEvent(NULL, FALSE, FALSE, NULL);

  0b028	e3a03000	 mov         r3, #0
  0b02c	e3a02000	 mov         r2, #0
  0b030	e3a01000	 mov         r1, #0
  0b034	e3a00000	 mov         r0, #0
  0b038	eb000000	 bl          CreateEventW
  0b03c	e58d0264	 str         r0, [sp, #0x264]
  0b040	e59d3238	 ldr         r3, [sp, #0x238]
  0b044	e28320a0	 add         r2, r3, #0xA0
  0b048	e59d3264	 ldr         r3, [sp, #0x264]
  0b04c	e5823000	 str         r3, [r2]

; 4015 :     if (pPdd->hPowerDownEvent == NULL)

  0b050	e59d3238	 ldr         r3, [sp, #0x238]
  0b054	e28330a0	 add         r3, r3, #0xA0
  0b058	e5933000	 ldr         r3, [r3]
  0b05c	e3530000	 cmp         r3, #0
  0b060	1a00000d	 bne         |$LN18@UfnPdd_Ini@3|

; 4016 :     {
; 4017 :         DEBUGMSG(TRUE, (TEXT("MUSBFN:Failed to create hPowerDownEvent\r\n")));

  0b064	e59f3cf4	 ldr         r3, [pc, #0xCF4]
  0b068	e5933440	 ldr         r3, [r3, #0x440]
  0b06c	e3130801	 tst         r3, #1, 16
  0b070	0a000004	 beq         |$LN26@UfnPdd_Ini@3|
  0b074	e59f0d44	 ldr         r0, [pc, #0xD44]
  0b078	eb000000	 bl          CeLogMsg
  0b07c	e3a03001	 mov         r3, #1
  0b080	e58d3268	 str         r3, [sp, #0x268]
  0b084	ea000003	 b           |$LN27@UfnPdd_Ini@3|
  0b088		 |$LN26@UfnPdd_Ini@3|
  0b088	e59f0d30	 ldr         r0, [pc, #0xD30]
  0b08c	eb000000	 bl          NKDbgPrintfW
  0b090	e3a03000	 mov         r3, #0
  0b094	e58d3268	 str         r3, [sp, #0x268]
  0b098		 |$LN27@UfnPdd_Ini@3|

; 4018 :         goto cleanUp;

  0b098	ea000312	 b           |$cleanUp$49278|
  0b09c		 |$LN18@UfnPdd_Ini@3|

; 4019 :     }
; 4020 : 
; 4021 :     pPdd->devState = 0;

  0b09c	e59d3238	 ldr         r3, [sp, #0x238]
  0b0a0	e283206c	 add         r2, r3, #0x6C
  0b0a4	e3a03000	 mov         r3, #0
  0b0a8	e5823000	 str         r3, [r2]

; 4022 :     
; 4023 :     // Read device parameters
; 4024 :     if (GetDeviceRegistryParams(
; 4025 :         szActiveKey, pPdd, dimof(s_deviceRegParams), s_deviceRegParams
; 4026 :         ) != ERROR_SUCCESS)

  0b0ac	e59f3d08	 ldr         r3, [pc, #0xD08]
  0b0b0	e3a02006	 mov         r2, #6
  0b0b4	e59d1238	 ldr         r1, [sp, #0x238]
  0b0b8	e59d0320	 ldr         r0, [sp, #0x320]
  0b0bc	eb000000	 bl          GetDeviceRegistryParams
  0b0c0	e58d026c	 str         r0, [sp, #0x26C]
  0b0c4	e59d326c	 ldr         r3, [sp, #0x26C]
  0b0c8	e3530000	 cmp         r3, #0
  0b0cc	0a000016	 beq         |$LN17@UfnPdd_Ini@3|

; 4027 :     {
; 4028 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: UfnPdd_Init: "
; 4029 :             L"Failed read registry parameters\r\n"
; 4030 :             ));

  0b0d0	e59f3c88	 ldr         r3, [pc, #0xC88]
  0b0d4	e5933440	 ldr         r3, [r3, #0x440]
  0b0d8	e3130001	 tst         r3, #1
  0b0dc	0a00000f	 beq         |$LN30@UfnPdd_Ini@3|
  0b0e0	e59f3c78	 ldr         r3, [pc, #0xC78]
  0b0e4	e5933440	 ldr         r3, [r3, #0x440]
  0b0e8	e3130801	 tst         r3, #1, 16
  0b0ec	0a000004	 beq         |$LN28@UfnPdd_Ini@3|
  0b0f0	e59f0cc0	 ldr         r0, [pc, #0xCC0]
  0b0f4	eb000000	 bl          CeLogMsg
  0b0f8	e3a03001	 mov         r3, #1
  0b0fc	e58d3270	 str         r3, [sp, #0x270]
  0b100	ea000003	 b           |$LN29@UfnPdd_Ini@3|
  0b104		 |$LN28@UfnPdd_Ini@3|
  0b104	e59f0cac	 ldr         r0, [pc, #0xCAC]
  0b108	eb000000	 bl          NKDbgPrintfW
  0b10c	e3a03000	 mov         r3, #0
  0b110	e58d3270	 str         r3, [sp, #0x270]
  0b114		 |$LN29@UfnPdd_Ini@3|
  0b114	e3a03001	 mov         r3, #1
  0b118	e58d3274	 str         r3, [sp, #0x274]
  0b11c	ea000001	 b           |$LN31@UfnPdd_Ini@3|
  0b120		 |$LN30@UfnPdd_Ini@3|
  0b120	e3a03000	 mov         r3, #0
  0b124	e58d3274	 str         r3, [sp, #0x274]
  0b128		 |$LN31@UfnPdd_Ini@3|

; 4031 :         goto cleanUp;

  0b128	ea0002ee	 b           |$cleanUp$49278|
  0b12c		 |$LN17@UfnPdd_Ini@3|

; 4032 :     }
; 4033 : 
; 4034 :     // Set PM to Default
; 4035 :     pPdd->pmPowerState = D4;

  0b12c	e59d3238	 ldr         r3, [sp, #0x238]
  0b130	e2832060	 add         r2, r3, #0x60
  0b134	e3a03004	 mov         r3, #4
  0b138	e5823000	 str         r3, [r2]

; 4036 :     pPdd->selfPowerState = D0;

  0b13c	e59d3238	 ldr         r3, [sp, #0x238]
  0b140	e2832064	 add         r2, r3, #0x64
  0b144	e3a03000	 mov         r3, #0
  0b148	e5823000	 str         r3, [r2]

; 4037 :     pPdd->actualPowerState = D4;

  0b14c	e59d3238	 ldr         r3, [sp, #0x238]
  0b150	e2832068	 add         r2, r3, #0x68
  0b154	e3a03004	 mov         r3, #4
  0b158	e5823000	 str         r3, [r2]

; 4038 : 
; 4039 :     InitializeCriticalSection(&pPdd->csDVFS);

  0b15c	e59d3238	 ldr         r3, [sp, #0x238]
  0b160	e2833b01	 add         r3, r3, #1, 22
  0b164	e2830014	 add         r0, r3, #0x14
  0b168	eb000000	 bl          InitializeCriticalSection

; 4040 : 
; 4041 :     // initialize dvfs variables
; 4042 :     pPdd->bDVFSActive = FALSE;

  0b16c	e59d3238	 ldr         r3, [sp, #0x238]
  0b170	e2832b01	 add         r2, r3, #1, 22
  0b174	e3a03000	 mov         r3, #0
  0b178	e5823000	 str         r3, [r2]

; 4043 :     pPdd->nActiveDmaCount = 0;

  0b17c	e59d3238	 ldr         r3, [sp, #0x238]
  0b180	e2833b01	 add         r3, r3, #1, 22
  0b184	e2832008	 add         r2, r3, #8
  0b188	e3a03000	 mov         r3, #0
  0b18c	e5823000	 str         r3, [r2]

; 4044 :     pPdd->hDVFSAckEvent = NULL;

  0b190	e59d3238	 ldr         r3, [sp, #0x238]
  0b194	e2833b01	 add         r3, r3, #1, 22
  0b198	e283200c	 add         r2, r3, #0xC
  0b19c	e3a03000	 mov         r3, #0
  0b1a0	e5823000	 str         r3, [r2]

; 4045 :     // bDVFSAck is required to avoid duplicate ack DVFSAck event.
; 4046 :     // this is especially when DVFS happening and it is in the process of copying
; 4047 :     pPdd->bDVFSAck = FALSE;

  0b1a4	e59d3238	 ldr         r3, [sp, #0x238]
  0b1a8	e2833b01	 add         r3, r3, #1, 22
  0b1ac	e2832004	 add         r2, r3, #4
  0b1b0	e3a03000	 mov         r3, #0
  0b1b4	e5823000	 str         r3, [r2]

; 4048 :     pPdd->hDVFSActivityEvent = NULL;

  0b1b8	e59d3238	 ldr         r3, [sp, #0x238]
  0b1bc	e2832e41	 add         r2, r3, #0x41, 28
  0b1c0	e3a03000	 mov         r3, #0
  0b1c4	e5823000	 str         r3, [r2]

; 4049 : 
; 4050 :     
; 4051 :     // Open parent bus
; 4052 :     pPdd->hParentBus = CreateBusAccessHandle(szActiveKey);

  0b1c8	e59d0320	 ldr         r0, [sp, #0x320]
  0b1cc	eb000000	 bl          CreateBusAccessHandle
  0b1d0	e58d0278	 str         r0, [sp, #0x278]
  0b1d4	e59d3238	 ldr         r3, [sp, #0x238]
  0b1d8	e2832030	 add         r2, r3, #0x30
  0b1dc	e59d3278	 ldr         r3, [sp, #0x278]
  0b1e0	e5823000	 str         r3, [r2]

; 4053 :     if (pPdd->hParentBus == NULL)

  0b1e4	e59d3238	 ldr         r3, [sp, #0x238]
  0b1e8	e2833030	 add         r3, r3, #0x30
  0b1ec	e5933000	 ldr         r3, [r3]
  0b1f0	e3530000	 cmp         r3, #0
  0b1f4	1a000016	 bne         |$LN16@UfnPdd_Ini@3|

; 4054 :     {
; 4055 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: UfnPdd_Init: "
; 4056 :             L"Failed open parent bus driver\r\n"
; 4057 :             ));

  0b1f8	e59f3b60	 ldr         r3, [pc, #0xB60]
  0b1fc	e5933440	 ldr         r3, [r3, #0x440]
  0b200	e3130001	 tst         r3, #1
  0b204	0a00000f	 beq         |$LN34@UfnPdd_Ini@3|
  0b208	e59f3b50	 ldr         r3, [pc, #0xB50]
  0b20c	e5933440	 ldr         r3, [r3, #0x440]
  0b210	e3130801	 tst         r3, #1, 16
  0b214	0a000004	 beq         |$LN32@UfnPdd_Ini@3|
  0b218	e59f0b94	 ldr         r0, [pc, #0xB94]
  0b21c	eb000000	 bl          CeLogMsg
  0b220	e3a03001	 mov         r3, #1
  0b224	e58d327c	 str         r3, [sp, #0x27C]
  0b228	ea000003	 b           |$LN33@UfnPdd_Ini@3|
  0b22c		 |$LN32@UfnPdd_Ini@3|
  0b22c	e59f0b80	 ldr         r0, [pc, #0xB80]
  0b230	eb000000	 bl          NKDbgPrintfW
  0b234	e3a03000	 mov         r3, #0
  0b238	e58d327c	 str         r3, [sp, #0x27C]
  0b23c		 |$LN33@UfnPdd_Ini@3|
  0b23c	e3a03001	 mov         r3, #1
  0b240	e58d3280	 str         r3, [sp, #0x280]
  0b244	ea000001	 b           |$LN35@UfnPdd_Ini@3|
  0b248		 |$LN34@UfnPdd_Ini@3|
  0b248	e3a03000	 mov         r3, #0
  0b24c	e58d3280	 str         r3, [sp, #0x280]
  0b250		 |$LN35@UfnPdd_Ini@3|

; 4058 :         goto cleanUp;

  0b250	ea0002a4	 b           |$cleanUp$49278|
  0b254		 |$LN16@UfnPdd_Ini@3|

; 4059 :     }
; 4060 :     
; 4061 :     // Set hardware to standby mode
; 4062 :     pPdd->selfPowerState = D2;

  0b254	e59d3238	 ldr         r3, [sp, #0x238]
  0b258	e2832064	 add         r2, r3, #0x64
  0b25c	e3a03002	 mov         r3, #2
  0b260	e5823000	 str         r3, [r2]

; 4063 :     
; 4064 :     
; 4065 :     // Allocate DMA Rx0 buffer
; 4066 :     pPdd->pDmaRx0Buffer = AllocPhysMem(
; 4067 :         pPdd->rx0DmaBufferSize, PAGE_READWRITE | PAGE_NOCACHE, 0, 0,
; 4068 :         &pPdd->paDmaRx0Buffer
; 4069 :         );

  0b264	e59d3238	 ldr         r3, [sp, #0x238]
  0b268	e283304c	 add         r3, r3, #0x4C
  0b26c	e58d3000	 str         r3, [sp]
  0b270	e3a03000	 mov         r3, #0
  0b274	e3a02000	 mov         r2, #0
  0b278	e3a01f81	 mov         r1, #0x81, 30
  0b27c	e59d0238	 ldr         r0, [sp, #0x238]
  0b280	e2800014	 add         r0, r0, #0x14
  0b284	e5900000	 ldr         r0, [r0]
  0b288	eb000000	 bl          AllocPhysMem
  0b28c	e58d0284	 str         r0, [sp, #0x284]
  0b290	e59d3238	 ldr         r3, [sp, #0x238]
  0b294	e2832048	 add         r2, r3, #0x48
  0b298	e59d3284	 ldr         r3, [sp, #0x284]
  0b29c	e5823000	 str         r3, [r2]

; 4070 :     if (pPdd->pDmaRx0Buffer == NULL)

  0b2a0	e59d3238	 ldr         r3, [sp, #0x238]
  0b2a4	e2833048	 add         r3, r3, #0x48
  0b2a8	e5933000	 ldr         r3, [r3]
  0b2ac	e3530000	 cmp         r3, #0
  0b2b0	1a00001c	 bne         |$LN15@UfnPdd_Ini@3|

; 4071 :     {
; 4072 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: UfnPdd_Init: "
; 4073 :             L"Failed allocate DMA Rx0 buffer (size %d)\r\n",
; 4074 :             pPdd->rx0DmaBufferSize
; 4075 :             ));

  0b2b4	e59f3aa4	 ldr         r3, [pc, #0xAA4]
  0b2b8	e5933440	 ldr         r3, [r3, #0x440]
  0b2bc	e3130001	 tst         r3, #1
  0b2c0	0a000015	 beq         |$LN38@UfnPdd_Ini@3|
  0b2c4	e59f3a94	 ldr         r3, [pc, #0xA94]
  0b2c8	e5933440	 ldr         r3, [r3, #0x440]
  0b2cc	e3130801	 tst         r3, #1, 16
  0b2d0	0a000007	 beq         |$LN36@UfnPdd_Ini@3|
  0b2d4	e59d3238	 ldr         r3, [sp, #0x238]
  0b2d8	e2833014	 add         r3, r3, #0x14
  0b2dc	e5931000	 ldr         r1, [r3]
  0b2e0	e59f0ac8	 ldr         r0, [pc, #0xAC8]
  0b2e4	eb000000	 bl          CeLogMsg
  0b2e8	e3a03001	 mov         r3, #1
  0b2ec	e58d3288	 str         r3, [sp, #0x288]
  0b2f0	ea000006	 b           |$LN37@UfnPdd_Ini@3|
  0b2f4		 |$LN36@UfnPdd_Ini@3|
  0b2f4	e59d3238	 ldr         r3, [sp, #0x238]
  0b2f8	e2833014	 add         r3, r3, #0x14
  0b2fc	e5931000	 ldr         r1, [r3]
  0b300	e59f0aa8	 ldr         r0, [pc, #0xAA8]
  0b304	eb000000	 bl          NKDbgPrintfW
  0b308	e3a03000	 mov         r3, #0
  0b30c	e58d3288	 str         r3, [sp, #0x288]
  0b310		 |$LN37@UfnPdd_Ini@3|
  0b310	e3a03001	 mov         r3, #1
  0b314	e58d328c	 str         r3, [sp, #0x28C]
  0b318	ea000001	 b           |$LN39@UfnPdd_Ini@3|
  0b31c		 |$LN38@UfnPdd_Ini@3|
  0b31c	e3a03000	 mov         r3, #0
  0b320	e58d328c	 str         r3, [sp, #0x28C]
  0b324		 |$LN39@UfnPdd_Ini@3|

; 4076 :         goto cleanUp;

  0b324	ea00026f	 b           |$cleanUp$49278|
  0b328		 |$LN15@UfnPdd_Ini@3|

; 4077 :     }
; 4078 :     
; 4079 :     // Allocate DMA Tx0 buffer
; 4080 :     pPdd->pDmaTx0Buffer = AllocPhysMem(
; 4081 :         pPdd->tx0DmaBufferSize, PAGE_READWRITE | PAGE_NOCACHE, 0, 0,
; 4082 :         &pPdd->paDmaTx0Buffer
; 4083 :         );

  0b328	e59d3238	 ldr         r3, [sp, #0x238]
  0b32c	e2833054	 add         r3, r3, #0x54
  0b330	e58d3000	 str         r3, [sp]
  0b334	e3a03000	 mov         r3, #0
  0b338	e3a02000	 mov         r2, #0
  0b33c	e3a01f81	 mov         r1, #0x81, 30
  0b340	e59d0238	 ldr         r0, [sp, #0x238]
  0b344	e2800018	 add         r0, r0, #0x18
  0b348	e5900000	 ldr         r0, [r0]
  0b34c	eb000000	 bl          AllocPhysMem
  0b350	e58d0290	 str         r0, [sp, #0x290]
  0b354	e59d3238	 ldr         r3, [sp, #0x238]
  0b358	e2832050	 add         r2, r3, #0x50
  0b35c	e59d3290	 ldr         r3, [sp, #0x290]
  0b360	e5823000	 str         r3, [r2]

; 4084 :     if (pPdd->pDmaTx0Buffer == NULL)

  0b364	e59d3238	 ldr         r3, [sp, #0x238]
  0b368	e2833050	 add         r3, r3, #0x50
  0b36c	e5933000	 ldr         r3, [r3]
  0b370	e3530000	 cmp         r3, #0
  0b374	1a00001c	 bne         |$LN14@UfnPdd_Ini@3|

; 4085 :     {
; 4086 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: UfnPdd_Init: "
; 4087 :             L"Failed allocate DMA Tx0 buffer (size %d)\r\n",
; 4088 :             pPdd->tx0DmaBufferSize
; 4089 :             ));

  0b378	e59f39e0	 ldr         r3, [pc, #0x9E0]
  0b37c	e5933440	 ldr         r3, [r3, #0x440]
  0b380	e3130001	 tst         r3, #1
  0b384	0a000015	 beq         |$LN42@UfnPdd_Ini@3|
  0b388	e59f39d0	 ldr         r3, [pc, #0x9D0]
  0b38c	e5933440	 ldr         r3, [r3, #0x440]
  0b390	e3130801	 tst         r3, #1, 16
  0b394	0a000007	 beq         |$LN40@UfnPdd_Ini@3|
  0b398	e59d3238	 ldr         r3, [sp, #0x238]
  0b39c	e2833018	 add         r3, r3, #0x18
  0b3a0	e5931000	 ldr         r1, [r3]
  0b3a4	e59f0a00	 ldr         r0, [pc, #0xA00]
  0b3a8	eb000000	 bl          CeLogMsg
  0b3ac	e3a03001	 mov         r3, #1
  0b3b0	e58d3294	 str         r3, [sp, #0x294]
  0b3b4	ea000006	 b           |$LN41@UfnPdd_Ini@3|
  0b3b8		 |$LN40@UfnPdd_Ini@3|
  0b3b8	e59d3238	 ldr         r3, [sp, #0x238]
  0b3bc	e2833018	 add         r3, r3, #0x18
  0b3c0	e5931000	 ldr         r1, [r3]
  0b3c4	e59f09e0	 ldr         r0, [pc, #0x9E0]
  0b3c8	eb000000	 bl          NKDbgPrintfW
  0b3cc	e3a03000	 mov         r3, #0
  0b3d0	e58d3294	 str         r3, [sp, #0x294]
  0b3d4		 |$LN41@UfnPdd_Ini@3|
  0b3d4	e3a03001	 mov         r3, #1
  0b3d8	e58d3298	 str         r3, [sp, #0x298]
  0b3dc	ea000001	 b           |$LN43@UfnPdd_Ini@3|
  0b3e0		 |$LN42@UfnPdd_Ini@3|
  0b3e0	e3a03000	 mov         r3, #0
  0b3e4	e58d3298	 str         r3, [sp, #0x298]
  0b3e8		 |$LN43@UfnPdd_Ini@3|

; 4090 :         goto cleanUp;

  0b3e8	ea00023e	 b           |$cleanUp$49278|
  0b3ec		 |$LN14@UfnPdd_Ini@3|

; 4091 :     }
; 4092 :         
; 4093 :     pPdd->pCachedDmaTx0Buffer = VirtualAlloc(NULL, pPdd->tx0DmaBufferSize, MEM_RESERVE, PAGE_READWRITE);

  0b3ec	e3a03004	 mov         r3, #4
  0b3f0	e3a02a02	 mov         r2, #2, 20
  0b3f4	e59d1238	 ldr         r1, [sp, #0x238]
  0b3f8	e2811018	 add         r1, r1, #0x18
  0b3fc	e5911000	 ldr         r1, [r1]
  0b400	e3a00000	 mov         r0, #0
  0b404	eb000000	 bl          VirtualAlloc
  0b408	e58d029c	 str         r0, [sp, #0x29C]
  0b40c	e59d3238	 ldr         r3, [sp, #0x238]
  0b410	e2832058	 add         r2, r3, #0x58
  0b414	e59d329c	 ldr         r3, [sp, #0x29C]
  0b418	e5823000	 str         r3, [r2]

; 4094 :     if (pPdd->pCachedDmaTx0Buffer == NULL)

  0b41c	e59d3238	 ldr         r3, [sp, #0x238]
  0b420	e2833058	 add         r3, r3, #0x58
  0b424	e5933000	 ldr         r3, [r3]
  0b428	e3530000	 cmp         r3, #0
  0b42c	1a000005	 bne         |$LN13@UfnPdd_Ini@3|

; 4095 :     {
; 4096 :         RETAILMSG(1, (L"ERROR: UfnPdd_Init: "
; 4097 :             L"Failed allocate virtual address for Tx0 buffer (size %d)\r\n",
; 4098 :             pPdd->tx0DmaBufferSize
; 4099 :             ));

  0b430	e59d3238	 ldr         r3, [sp, #0x238]
  0b434	e2833018	 add         r3, r3, #0x18
  0b438	e5931000	 ldr         r1, [r3]
  0b43c	e59f0964	 ldr         r0, [pc, #0x964]
  0b440	eb000000	 bl          NKDbgPrintfW

; 4100 :         goto cleanUp;

  0b444	ea000227	 b           |$cleanUp$49278|
  0b448		 |$LN13@UfnPdd_Ini@3|

; 4101 :     }
; 4102 : 
; 4103 :     if (!VirtualCopy(pPdd->pCachedDmaTx0Buffer, (PVOID)(pPdd->paDmaTx0Buffer>>8), pPdd->tx0DmaBufferSize, PAGE_READWRITE | PAGE_PHYSICAL))

  0b448	e3a03b01	 mov         r3, #1, 22
  0b44c	e3833004	 orr         r3, r3, #4
  0b450	e59d2238	 ldr         r2, [sp, #0x238]
  0b454	e2822018	 add         r2, r2, #0x18
  0b458	e5922000	 ldr         r2, [r2]
  0b45c	e59d1238	 ldr         r1, [sp, #0x238]
  0b460	e2811054	 add         r1, r1, #0x54
  0b464	e5911000	 ldr         r1, [r1]
  0b468	e1a01421	 mov         r1, r1, lsr #8
  0b46c	e59d0238	 ldr         r0, [sp, #0x238]
  0b470	e2800058	 add         r0, r0, #0x58
  0b474	e5900000	 ldr         r0, [r0]
  0b478	eb000000	 bl          VirtualCopy
  0b47c	e58d02a0	 str         r0, [sp, #0x2A0]
  0b480	e59d32a0	 ldr         r3, [sp, #0x2A0]
  0b484	e3530000	 cmp         r3, #0
  0b488	1a000005	 bne         |$LN12@UfnPdd_Ini@3|

; 4104 :     {
; 4105 :         RETAILMSG(1, (L"ERROR: UfnPdd_Init: "
; 4106 :             L"Failed virtual copy address for Tx0 buffer (size %d)\r\n",
; 4107 :             pPdd->tx0DmaBufferSize
; 4108 :             ));

  0b48c	e59d3238	 ldr         r3, [sp, #0x238]
  0b490	e2833018	 add         r3, r3, #0x18
  0b494	e5931000	 ldr         r1, [r3]
  0b498	e59f0904	 ldr         r0, [pc, #0x904]
  0b49c	eb000000	 bl          NKDbgPrintfW

; 4109 :         goto cleanUp;

  0b4a0	ea000210	 b           |$cleanUp$49278|
  0b4a4		 |$LN12@UfnPdd_Ini@3|

; 4110 :     }
; 4111 : 
; 4112 :     // Get the OTG module handle
; 4113 :     hOTGInstance = GetModuleHandle(OTG_DRIVER);

  0b4a4	e59f08f4	 ldr         r0, [pc, #0x8F4]
  0b4a8	eb000000	 bl          GetModuleHandleW
  0b4ac	e58d02a4	 str         r0, [sp, #0x2A4]
  0b4b0	e59d32a4	 ldr         r3, [sp, #0x2A4]
  0b4b4	e58d3028	 str         r3, [sp, #0x28]

; 4114 :     if (hOTGInstance == NULL)

  0b4b8	e59d3028	 ldr         r3, [sp, #0x28]
  0b4bc	e3530000	 cmp         r3, #0
  0b4c0	1a00001c	 bne         |$LN11@UfnPdd_Ini@3|

; 4115 :     {
; 4116 :         DEBUGMSG(ZONE_INFO, (TEXT("Failure to load %s\r\n"), OTG_DRIVER));

  0b4c4	e59f3894	 ldr         r3, [pc, #0x894]
  0b4c8	e5933440	 ldr         r3, [r3, #0x440]
  0b4cc	e3130b01	 tst         r3, #1, 22
  0b4d0	0a000011	 beq         |$LN46@UfnPdd_Ini@3|
  0b4d4	e59f3884	 ldr         r3, [pc, #0x884]
  0b4d8	e5933440	 ldr         r3, [r3, #0x440]
  0b4dc	e3130801	 tst         r3, #1, 16
  0b4e0	0a000005	 beq         |$LN44@UfnPdd_Ini@3|
  0b4e4	e59f18b4	 ldr         r1, [pc, #0x8B4]
  0b4e8	e59f08ac	 ldr         r0, [pc, #0x8AC]
  0b4ec	eb000000	 bl          CeLogMsg
  0b4f0	e3a03001	 mov         r3, #1
  0b4f4	e58d32a8	 str         r3, [sp, #0x2A8]
  0b4f8	ea000004	 b           |$LN45@UfnPdd_Ini@3|
  0b4fc		 |$LN44@UfnPdd_Ini@3|
  0b4fc	e59f189c	 ldr         r1, [pc, #0x89C]
  0b500	e59f0894	 ldr         r0, [pc, #0x894]
  0b504	eb000000	 bl          NKDbgPrintfW
  0b508	e3a03000	 mov         r3, #0
  0b50c	e58d32a8	 str         r3, [sp, #0x2A8]
  0b510		 |$LN45@UfnPdd_Ini@3|
  0b510	e3a03001	 mov         r3, #1
  0b514	e58d32ac	 str         r3, [sp, #0x2AC]
  0b518	ea000001	 b           |$LN47@UfnPdd_Ini@3|
  0b51c		 |$LN46@UfnPdd_Ini@3|
  0b51c	e3a03000	 mov         r3, #0
  0b520	e58d32ac	 str         r3, [sp, #0x2AC]
  0b524		 |$LN47@UfnPdd_Ini@3|

; 4117 :         return ERROR_GEN_FAILURE;

  0b524	e59d023c	 ldr         r0, [sp, #0x23C]
  0b528	eb000000	 bl          __security_check_cookie
  0b52c	e3a0301f	 mov         r3, #0x1F
  0b530	e58d3248	 str         r3, [sp, #0x248]
  0b534	ea0001ef	 b           |$LN20@UfnPdd_Ini@3|
  0b538		 |$LN11@UfnPdd_Ini@3|

; 4118 :     }
; 4119 :     
; 4120 :     lphAttachProc =(LPMUSB_ATTACH_PROC)GetProcAddress(hOTGInstance, TEXT("OTGAttach"));

  0b538	e59f1858	 ldr         r1, [pc, #0x858]
  0b53c	e59d0028	 ldr         r0, [sp, #0x28]
  0b540	eb000000	 bl          GetProcAddressW
  0b544	e58d02b0	 str         r0, [sp, #0x2B0]
  0b548	e59d32b0	 ldr         r3, [sp, #0x2B0]
  0b54c	e58d3018	 str         r3, [sp, #0x18]

; 4121 :     if (lphAttachProc == NULL)

  0b550	e59d3018	 ldr         r3, [sp, #0x18]
  0b554	e3530000	 cmp         r3, #0
  0b558	1a00001a	 bne         |$LN10@UfnPdd_Ini@3|

; 4122 :     {
; 4123 :         DEBUGMSG(ZONE_INFO, (TEXT("Failure to get OTGAttach\r\n")));

  0b55c	e59f37fc	 ldr         r3, [pc, #0x7FC]
  0b560	e5933440	 ldr         r3, [r3, #0x440]
  0b564	e3130b01	 tst         r3, #1, 22
  0b568	0a00000f	 beq         |$LN50@UfnPdd_Ini@3|
  0b56c	e59f37ec	 ldr         r3, [pc, #0x7EC]
  0b570	e5933440	 ldr         r3, [r3, #0x440]
  0b574	e3130801	 tst         r3, #1, 16
  0b578	0a000004	 beq         |$LN48@UfnPdd_Ini@3|
  0b57c	e59f0810	 ldr         r0, [pc, #0x810]
  0b580	eb000000	 bl          CeLogMsg
  0b584	e3a03001	 mov         r3, #1
  0b588	e58d32b4	 str         r3, [sp, #0x2B4]
  0b58c	ea000003	 b           |$LN49@UfnPdd_Ini@3|
  0b590		 |$LN48@UfnPdd_Ini@3|
  0b590	e59f07fc	 ldr         r0, [pc, #0x7FC]
  0b594	eb000000	 bl          NKDbgPrintfW
  0b598	e3a03000	 mov         r3, #0
  0b59c	e58d32b4	 str         r3, [sp, #0x2B4]
  0b5a0		 |$LN49@UfnPdd_Ini@3|
  0b5a0	e3a03001	 mov         r3, #1
  0b5a4	e58d32b8	 str         r3, [sp, #0x2B8]
  0b5a8	ea000001	 b           |$LN51@UfnPdd_Ini@3|
  0b5ac		 |$LN50@UfnPdd_Ini@3|
  0b5ac	e3a03000	 mov         r3, #0
  0b5b0	e58d32b8	 str         r3, [sp, #0x2B8]
  0b5b4		 |$LN51@UfnPdd_Ini@3|

; 4124 :         return ERROR_GEN_FAILURE;

  0b5b4	e59d023c	 ldr         r0, [sp, #0x23C]
  0b5b8	eb000000	 bl          __security_check_cookie
  0b5bc	e3a0301f	 mov         r3, #0x1F
  0b5c0	e58d3248	 str         r3, [sp, #0x248]
  0b5c4	ea0001cb	 b           |$LN20@UfnPdd_Ini@3|
  0b5c8		 |$LN10@UfnPdd_Ini@3|

; 4125 :     }
; 4126 :     
; 4127 :     DEBUGMSG(ZONE_INFO, (TEXT("AttachProc with 4 parameters\r\n")));

  0b5c8	e59f3790	 ldr         r3, [pc, #0x790]
  0b5cc	e5933440	 ldr         r3, [r3, #0x440]
  0b5d0	e3130b01	 tst         r3, #1, 22
  0b5d4	0a00000f	 beq         |$LN54@UfnPdd_Ini@3|
  0b5d8	e59f3780	 ldr         r3, [pc, #0x780]
  0b5dc	e5933440	 ldr         r3, [r3, #0x440]
  0b5e0	e3130801	 tst         r3, #1, 16
  0b5e4	0a000004	 beq         |$LN52@UfnPdd_Ini@3|
  0b5e8	e59f07a0	 ldr         r0, [pc, #0x7A0]
  0b5ec	eb000000	 bl          CeLogMsg
  0b5f0	e3a03001	 mov         r3, #1
  0b5f4	e58d32bc	 str         r3, [sp, #0x2BC]
  0b5f8	ea000003	 b           |$LN53@UfnPdd_Ini@3|
  0b5fc		 |$LN52@UfnPdd_Ini@3|
  0b5fc	e59f078c	 ldr         r0, [pc, #0x78C]
  0b600	eb000000	 bl          NKDbgPrintfW
  0b604	e3a03000	 mov         r3, #0
  0b608	e58d32bc	 str         r3, [sp, #0x2BC]
  0b60c		 |$LN53@UfnPdd_Ini@3|
  0b60c	e3a03001	 mov         r3, #1
  0b610	e58d32c0	 str         r3, [sp, #0x2C0]
  0b614	ea000001	 b           |$LN55@UfnPdd_Ini@3|
  0b618		 |$LN54@UfnPdd_Ini@3|
  0b618	e3a03000	 mov         r3, #0
  0b61c	e58d32c0	 str         r3, [sp, #0x2C0]
  0b620		 |$LN55@UfnPdd_Ini@3|

; 4128 :     bRet =(*lphAttachProc)(&gc_MUsbFuncs, DEVICE_MODE, (LPLPVOID)&pOTG);

  0b620	e28d2014	 add         r2, sp, #0x14
  0b624	e3a01001	 mov         r1, #1
  0b628	e59f075c	 ldr         r0, [pc, #0x75C]
  0b62c	e59d3018	 ldr         r3, [sp, #0x18]
  0b630	e1a0e00f	 mov         lr, pc
  0b634	e12fff13	 bx          r3
  0b638	e58d02c4	 str         r0, [sp, #0x2C4]
  0b63c	e59d32c4	 ldr         r3, [sp, #0x2C4]
  0b640	e58d3024	 str         r3, [sp, #0x24]

; 4129 :     if (bRet == FALSE)

  0b644	e59d3024	 ldr         r3, [sp, #0x24]
  0b648	e3530000	 cmp         r3, #0
  0b64c	1a00001a	 bne         |$LN9@UfnPdd_Ini@3|

; 4130 :     {
; 4131 :         DEBUGMSG(ZONE_INFO, (TEXT("Error in performing the attach procedure\r\n")));

  0b650	e59f3708	 ldr         r3, [pc, #0x708]
  0b654	e5933440	 ldr         r3, [r3, #0x440]
  0b658	e3130b01	 tst         r3, #1, 22
  0b65c	0a00000f	 beq         |$LN58@UfnPdd_Ini@3|
  0b660	e59f36f8	 ldr         r3, [pc, #0x6F8]
  0b664	e5933440	 ldr         r3, [r3, #0x440]
  0b668	e3130801	 tst         r3, #1, 16
  0b66c	0a000004	 beq         |$LN56@UfnPdd_Ini@3|
  0b670	e59f0710	 ldr         r0, [pc, #0x710]
  0b674	eb000000	 bl          CeLogMsg
  0b678	e3a03001	 mov         r3, #1
  0b67c	e58d32c8	 str         r3, [sp, #0x2C8]
  0b680	ea000003	 b           |$LN57@UfnPdd_Ini@3|
  0b684		 |$LN56@UfnPdd_Ini@3|
  0b684	e59f06fc	 ldr         r0, [pc, #0x6FC]
  0b688	eb000000	 bl          NKDbgPrintfW
  0b68c	e3a03000	 mov         r3, #0
  0b690	e58d32c8	 str         r3, [sp, #0x2C8]
  0b694		 |$LN57@UfnPdd_Ini@3|
  0b694	e3a03001	 mov         r3, #1
  0b698	e58d32cc	 str         r3, [sp, #0x2CC]
  0b69c	ea000001	 b           |$LN59@UfnPdd_Ini@3|
  0b6a0		 |$LN58@UfnPdd_Ini@3|
  0b6a0	e3a03000	 mov         r3, #0
  0b6a4	e58d32cc	 str         r3, [sp, #0x2CC]
  0b6a8		 |$LN59@UfnPdd_Ini@3|

; 4132 :         return ERROR_GEN_FAILURE;

  0b6a8	e59d023c	 ldr         r0, [sp, #0x23C]
  0b6ac	eb000000	 bl          __security_check_cookie
  0b6b0	e3a0301f	 mov         r3, #0x1F
  0b6b4	e58d3248	 str         r3, [sp, #0x248]
  0b6b8	ea00018e	 b           |$LN20@UfnPdd_Ini@3|
  0b6bc		 |$LN9@UfnPdd_Ini@3|

; 4133 :     }
; 4134 : 
; 4135 :     pPdd->pfnEnUSBClock = (LPMUSB_USBCLOCK_PROC)GetProcAddress(hOTGInstance, TEXT("OTGUSBClock"));

  0b6bc	e59f16c0	 ldr         r1, [pc, #0x6C0]
  0b6c0	e59d0028	 ldr         r0, [sp, #0x28]
  0b6c4	eb000000	 bl          GetProcAddressW
  0b6c8	e58d02d0	 str         r0, [sp, #0x2D0]
  0b6cc	e59d3238	 ldr         r3, [sp, #0x238]
  0b6d0	e283202c	 add         r2, r3, #0x2C
  0b6d4	e59d32d0	 ldr         r3, [sp, #0x2D0]
  0b6d8	e5823000	 str         r3, [r2]

; 4136 :     if (pPdd->pfnEnUSBClock == NULL)

  0b6dc	e59d3238	 ldr         r3, [sp, #0x238]
  0b6e0	e283302c	 add         r3, r3, #0x2C
  0b6e4	e5933000	 ldr         r3, [r3]
  0b6e8	e3530000	 cmp         r3, #0
  0b6ec	1a00001a	 bne         |$LN8@UfnPdd_Ini@3|

; 4137 :     {
; 4138 :         DEBUGMSG(ZONE_INFO, (TEXT("Failure to get OTGUSBClock\r\n")));

  0b6f0	e59f3668	 ldr         r3, [pc, #0x668]
  0b6f4	e5933440	 ldr         r3, [r3, #0x440]
  0b6f8	e3130b01	 tst         r3, #1, 22
  0b6fc	0a00000f	 beq         |$LN62@UfnPdd_Ini@3|
  0b700	e59f3658	 ldr         r3, [pc, #0x658]
  0b704	e5933440	 ldr         r3, [r3, #0x440]
  0b708	e3130801	 tst         r3, #1, 16
  0b70c	0a000004	 beq         |$LN60@UfnPdd_Ini@3|
  0b710	e59f0668	 ldr         r0, [pc, #0x668]
  0b714	eb000000	 bl          CeLogMsg
  0b718	e3a03001	 mov         r3, #1
  0b71c	e58d32d4	 str         r3, [sp, #0x2D4]
  0b720	ea000003	 b           |$LN61@UfnPdd_Ini@3|
  0b724		 |$LN60@UfnPdd_Ini@3|
  0b724	e59f0654	 ldr         r0, [pc, #0x654]
  0b728	eb000000	 bl          NKDbgPrintfW
  0b72c	e3a03000	 mov         r3, #0
  0b730	e58d32d4	 str         r3, [sp, #0x2D4]
  0b734		 |$LN61@UfnPdd_Ini@3|
  0b734	e3a03001	 mov         r3, #1
  0b738	e58d32d8	 str         r3, [sp, #0x2D8]
  0b73c	ea000001	 b           |$LN63@UfnPdd_Ini@3|
  0b740		 |$LN62@UfnPdd_Ini@3|
  0b740	e3a03000	 mov         r3, #0
  0b744	e58d32d8	 str         r3, [sp, #0x2D8]
  0b748		 |$LN63@UfnPdd_Ini@3|

; 4139 :         return ERROR_GEN_FAILURE;

  0b748	e59d023c	 ldr         r0, [sp, #0x23C]
  0b74c	eb000000	 bl          __security_check_cookie
  0b750	e3a0301f	 mov         r3, #0x1F
  0b754	e58d3248	 str         r3, [sp, #0x248]
  0b758	ea000166	 b           |$LN20@UfnPdd_Ini@3|
  0b75c		 |$LN8@UfnPdd_Ini@3|

; 4140 :     }
; 4141 : 
; 4142 :     dwStatus = RegOpenKeyEx(HKEY_LOCAL_MACHINE, (LPCTSTR) REG_USBFN_DRV_PATH, 0, KEY_ALL_ACCESS, &hkDevice);

  0b75c	e28d3020	 add         r3, sp, #0x20
  0b760	e58d3000	 str         r3, [sp]
  0b764	e3a0380f	 mov         r3, #0xF, 16
  0b768	e383303f	 orr         r3, r3, #0x3F
  0b76c	e3a02000	 mov         r2, #0
  0b770	e59f15fc	 ldr         r1, [pc, #0x5FC]
  0b774	e3a0010a	 mov         r0, #0xA, 2
  0b778	eb000000	 bl          RegOpenKeyExW
  0b77c	e58d02dc	 str         r0, [sp, #0x2DC]
  0b780	e59d32dc	 ldr         r3, [sp, #0x2DC]
  0b784	e58d301c	 str         r3, [sp, #0x1C]

; 4143 :     if(dwStatus != ERROR_SUCCESS) {

  0b788	e59d301c	 ldr         r3, [sp, #0x1C]
  0b78c	e3530000	 cmp         r3, #0
  0b790	0a00001a	 beq         |$LN7@UfnPdd_Ini@3|

; 4144 :         DEBUGMSG(ZONE_INFO, (_T("UfnPdd_Init: OpenDeviceKey('%s') failed %u\r\n"), szActiveKey, dwStatus));

  0b794	e59f35c4	 ldr         r3, [pc, #0x5C4]
  0b798	e5933440	 ldr         r3, [r3, #0x440]
  0b79c	e3130b01	 tst         r3, #1, 22
  0b7a0	0a000013	 beq         |$LN66@UfnPdd_Ini@3|
  0b7a4	e59f35b4	 ldr         r3, [pc, #0x5B4]
  0b7a8	e5933440	 ldr         r3, [r3, #0x440]
  0b7ac	e3130801	 tst         r3, #1, 16
  0b7b0	0a000006	 beq         |$LN64@UfnPdd_Ini@3|
  0b7b4	e59d201c	 ldr         r2, [sp, #0x1C]
  0b7b8	e59d1320	 ldr         r1, [sp, #0x320]
  0b7bc	e59f05b8	 ldr         r0, [pc, #0x5B8]
  0b7c0	eb000000	 bl          CeLogMsg
  0b7c4	e3a03001	 mov         r3, #1
  0b7c8	e58d32e0	 str         r3, [sp, #0x2E0]
  0b7cc	ea000005	 b           |$LN65@UfnPdd_Ini@3|
  0b7d0		 |$LN64@UfnPdd_Ini@3|
  0b7d0	e59d201c	 ldr         r2, [sp, #0x1C]
  0b7d4	e59d1320	 ldr         r1, [sp, #0x320]
  0b7d8	e59f059c	 ldr         r0, [pc, #0x59C]
  0b7dc	eb000000	 bl          NKDbgPrintfW
  0b7e0	e3a03000	 mov         r3, #0
  0b7e4	e58d32e0	 str         r3, [sp, #0x2E0]
  0b7e8		 |$LN65@UfnPdd_Ini@3|
  0b7e8	e3a03001	 mov         r3, #1
  0b7ec	e58d32e4	 str         r3, [sp, #0x2E4]
  0b7f0	ea000001	 b           |$LN67@UfnPdd_Ini@3|
  0b7f4		 |$LN66@UfnPdd_Ini@3|
  0b7f4	e3a03000	 mov         r3, #0
  0b7f8	e58d32e4	 str         r3, [sp, #0x2E4]
  0b7fc		 |$LN67@UfnPdd_Ini@3|

; 4145 :         goto cleanUp;

  0b7fc	ea000139	 b           |$cleanUp$49278|
  0b800		 |$LN7@UfnPdd_Ini@3|

; 4146 :     }
; 4147 : 
; 4148 :     wcscpy(szChargeEventName,TEXT(""));

  0b800	e59f1570	 ldr         r1, [pc, #0x570]
  0b804	e28d002c	 add         r0, sp, #0x2C
  0b808	eb000000	 bl          wcscpy

; 4149 :     dwType = REG_SZ;

  0b80c	e3a03001	 mov         r3, #1
  0b810	e58d3008	 str         r3, [sp, #8]

; 4150 :     dwSize = sizeof(szChargeEventName);

  0b814	e3a03c02	 mov         r3, #2, 24
  0b818	e383300a	 orr         r3, r3, #0xA
  0b81c	e58d3010	 str         r3, [sp, #0x10]

; 4151 :     dwStatus = RegQueryValueEx(hkDevice, REG_VBUS_CHARGE_EVENT_NAME, NULL, &dwType, 
; 4152 :         (LPBYTE) szChargeEventName, &dwSize);

  0b820	e28d3010	 add         r3, sp, #0x10
  0b824	e58d3004	 str         r3, [sp, #4]
  0b828	e28d302c	 add         r3, sp, #0x2C
  0b82c	e58d3000	 str         r3, [sp]
  0b830	e28d3008	 add         r3, sp, #8
  0b834	e3a02000	 mov         r2, #0
  0b838	e59f151c	 ldr         r1, [pc, #0x51C]
  0b83c	e59d0020	 ldr         r0, [sp, #0x20]
  0b840	eb000000	 bl          RegQueryValueExW
  0b844	e58d02e8	 str         r0, [sp, #0x2E8]
  0b848	e59d32e8	 ldr         r3, [sp, #0x2E8]
  0b84c	e58d301c	 str         r3, [sp, #0x1C]

; 4153 :     if(dwStatus != ERROR_SUCCESS || dwType != REG_SZ) {

  0b850	e59d301c	 ldr         r3, [sp, #0x1C]
  0b854	e3530000	 cmp         r3, #0
  0b858	1a000002	 bne         |$LN5@UfnPdd_Ini@3|
  0b85c	e59d3008	 ldr         r3, [sp, #8]
  0b860	e3530001	 cmp         r3, #1
  0b864	0a00001e	 beq         |$LN6@UfnPdd_Ini@3|
  0b868		 |$LN5@UfnPdd_Ini@3|

; 4154 :         DEBUGMSG(ZONE_INFO, (_T("UFNPDD_Init: RegQueryValueEx('%s', '%s') failed %u\r\n"),
; 4155 :             REG_USBFN_DRV_PATH, REG_VBUS_CHARGE_EVENT_NAME, dwStatus));

  0b868	e59f34f0	 ldr         r3, [pc, #0x4F0]
  0b86c	e5933440	 ldr         r3, [r3, #0x440]
  0b870	e3130b01	 tst         r3, #1, 22
  0b874	0a000015	 beq         |$LN70@UfnPdd_Ini@3|
  0b878	e59f34e0	 ldr         r3, [pc, #0x4E0]
  0b87c	e5933440	 ldr         r3, [r3, #0x440]
  0b880	e3130801	 tst         r3, #1, 16
  0b884	0a000007	 beq         |$LN68@UfnPdd_Ini@3|
  0b888	e59d301c	 ldr         r3, [sp, #0x1C]
  0b88c	e59f24c8	 ldr         r2, [pc, #0x4C8]
  0b890	e59f14dc	 ldr         r1, [pc, #0x4DC]
  0b894	e59f04d4	 ldr         r0, [pc, #0x4D4]
  0b898	eb000000	 bl          CeLogMsg
  0b89c	e3a03001	 mov         r3, #1
  0b8a0	e58d32ec	 str         r3, [sp, #0x2EC]
  0b8a4	ea000006	 b           |$LN69@UfnPdd_Ini@3|
  0b8a8		 |$LN68@UfnPdd_Ini@3|
  0b8a8	e59d301c	 ldr         r3, [sp, #0x1C]
  0b8ac	e59f24a8	 ldr         r2, [pc, #0x4A8]
  0b8b0	e59f14bc	 ldr         r1, [pc, #0x4BC]
  0b8b4	e59f04b4	 ldr         r0, [pc, #0x4B4]
  0b8b8	eb000000	 bl          NKDbgPrintfW
  0b8bc	e3a03000	 mov         r3, #0
  0b8c0	e58d32ec	 str         r3, [sp, #0x2EC]
  0b8c4		 |$LN69@UfnPdd_Ini@3|
  0b8c4	e3a03001	 mov         r3, #1
  0b8c8	e58d32f0	 str         r3, [sp, #0x2F0]
  0b8cc	ea000001	 b           |$LN71@UfnPdd_Ini@3|
  0b8d0		 |$LN70@UfnPdd_Ini@3|
  0b8d0	e3a03000	 mov         r3, #0
  0b8d4	e58d32f0	 str         r3, [sp, #0x2F0]
  0b8d8		 |$LN71@UfnPdd_Ini@3|

; 4156 :         RegCloseKey(hkDevice);

  0b8d8	e59d0020	 ldr         r0, [sp, #0x20]
  0b8dc	eb000000	 bl          RegCloseKey

; 4157 :         goto cleanUp;

  0b8e0	ea000100	 b           |$cleanUp$49278|
  0b8e4		 |$LN6@UfnPdd_Ini@3|

; 4158 :     }
; 4159 :     RegCloseKey(hkDevice);

  0b8e4	e59d0020	 ldr         r0, [sp, #0x20]
  0b8e8	eb000000	 bl          RegCloseKey

; 4160 :     
; 4161 :     DEBUGMSG(ZONE_ERROR,(L"USBHF RegQueryValueEx "L"Using Vbus Charge Event '%s'", szChargeEventName) );

  0b8ec	e59f346c	 ldr         r3, [pc, #0x46C]
  0b8f0	e5933440	 ldr         r3, [r3, #0x440]
  0b8f4	e3130001	 tst         r3, #1
  0b8f8	0a000011	 beq         |$LN74@UfnPdd_Ini@3|
  0b8fc	e59f345c	 ldr         r3, [pc, #0x45C]
  0b900	e5933440	 ldr         r3, [r3, #0x440]
  0b904	e3130801	 tst         r3, #1, 16
  0b908	0a000005	 beq         |$LN72@UfnPdd_Ini@3|
  0b90c	e28d102c	 add         r1, sp, #0x2C
  0b910	e59f0454	 ldr         r0, [pc, #0x454]
  0b914	eb000000	 bl          CeLogMsg
  0b918	e3a03001	 mov         r3, #1
  0b91c	e58d32f4	 str         r3, [sp, #0x2F4]
  0b920	ea000004	 b           |$LN73@UfnPdd_Ini@3|
  0b924		 |$LN72@UfnPdd_Ini@3|
  0b924	e28d102c	 add         r1, sp, #0x2C
  0b928	e59f043c	 ldr         r0, [pc, #0x43C]
  0b92c	eb000000	 bl          NKDbgPrintfW
  0b930	e3a03000	 mov         r3, #0
  0b934	e58d32f4	 str         r3, [sp, #0x2F4]
  0b938		 |$LN73@UfnPdd_Ini@3|
  0b938	e3a03001	 mov         r3, #1
  0b93c	e58d32f8	 str         r3, [sp, #0x2F8]
  0b940	ea000001	 b           |$LN75@UfnPdd_Ini@3|
  0b944		 |$LN74@UfnPdd_Ini@3|
  0b944	e3a03000	 mov         r3, #0
  0b948	e58d32f8	 str         r3, [sp, #0x2F8]
  0b94c		 |$LN75@UfnPdd_Ini@3|

; 4162 : 
; 4163 :     if (!dwStatus) 

  0b94c	e59d301c	 ldr         r3, [sp, #0x1C]
  0b950	e3530000	 cmp         r3, #0
  0b954	1a000047	 bne         |$LN4@UfnPdd_Ini@3|

; 4164 :     {
; 4165 :          pPdd->hVbusChargeEvent = CreateEvent( NULL, TRUE, FALSE, szChargeEventName );

  0b958	e28d302c	 add         r3, sp, #0x2C
  0b95c	e3a02000	 mov         r2, #0
  0b960	e3a01001	 mov         r1, #1
  0b964	e3a00000	 mov         r0, #0
  0b968	eb000000	 bl          CreateEventW
  0b96c	e58d02fc	 str         r0, [sp, #0x2FC]
  0b970	e59d3238	 ldr         r3, [sp, #0x238]
  0b974	e2833b01	 add         r3, r3, #1, 22
  0b978	e2832028	 add         r2, r3, #0x28
  0b97c	e59d32fc	 ldr         r3, [sp, #0x2FC]
  0b980	e5823000	 str         r3, [r2]

; 4166 :          if ( pPdd->hVbusChargeEvent == NULL )

  0b984	e59d3238	 ldr         r3, [sp, #0x238]
  0b988	e2833b01	 add         r3, r3, #1, 22
  0b98c	e2833028	 add         r3, r3, #0x28
  0b990	e5933000	 ldr         r3, [r3]
  0b994	e3530000	 cmp         r3, #0
  0b998	1a00001d	 bne         |$LN3@UfnPdd_Ini@3|

; 4167 :          {
; 4168 :             DEBUGMSG(ZONE_ERROR,(L"UfnPdd_Init() "
; 4169 :                     L"Failed to open Vbus Charge Event '%s'",
; 4170 :                     szChargeEventName));

  0b99c	e59f33bc	 ldr         r3, [pc, #0x3BC]
  0b9a0	e5933440	 ldr         r3, [r3, #0x440]
  0b9a4	e3130001	 tst         r3, #1
  0b9a8	0a000011	 beq         |$LN78@UfnPdd_Ini@3|
  0b9ac	e59f33ac	 ldr         r3, [pc, #0x3AC]
  0b9b0	e5933440	 ldr         r3, [r3, #0x440]
  0b9b4	e3130801	 tst         r3, #1, 16
  0b9b8	0a000005	 beq         |$LN76@UfnPdd_Ini@3|
  0b9bc	e28d102c	 add         r1, sp, #0x2C
  0b9c0	e59f03a0	 ldr         r0, [pc, #0x3A0]
  0b9c4	eb000000	 bl          CeLogMsg
  0b9c8	e3a03001	 mov         r3, #1
  0b9cc	e58d3300	 str         r3, [sp, #0x300]
  0b9d0	ea000004	 b           |$LN77@UfnPdd_Ini@3|
  0b9d4		 |$LN76@UfnPdd_Ini@3|
  0b9d4	e28d102c	 add         r1, sp, #0x2C
  0b9d8	e59f0388	 ldr         r0, [pc, #0x388]
  0b9dc	eb000000	 bl          NKDbgPrintfW
  0b9e0	e3a03000	 mov         r3, #0
  0b9e4	e58d3300	 str         r3, [sp, #0x300]
  0b9e8		 |$LN77@UfnPdd_Ini@3|
  0b9e8	e3a03001	 mov         r3, #1
  0b9ec	e58d3304	 str         r3, [sp, #0x304]
  0b9f0	ea000001	 b           |$LN79@UfnPdd_Ini@3|
  0b9f4		 |$LN78@UfnPdd_Ini@3|
  0b9f4	e3a03000	 mov         r3, #0
  0b9f8	e58d3304	 str         r3, [sp, #0x304]
  0b9fc		 |$LN79@UfnPdd_Ini@3|

; 4171 : 
; 4172 :             pPdd->hVbusChargeEvent = INVALID_HANDLE_VALUE;

  0b9fc	e59d3238	 ldr         r3, [sp, #0x238]
  0ba00	e2833b01	 add         r3, r3, #1, 22
  0ba04	e2832028	 add         r2, r3, #0x28
  0ba08	e3e03000	 mvn         r3, #0
  0ba0c	e5823000	 str         r3, [r2]

; 4173 :          }
; 4174 :          else

  0ba10	ea000017	 b           |$LN2@UfnPdd_Ini@3|
  0ba14		 |$LN3@UfnPdd_Ini@3|

; 4175 :          {
; 4176 :             DEBUGMSG(ZONE_ERROR,(L"UfnPdd_Init() "
; 4177 :                         L"Using Vbus Charge Event '%s'", szChargeEventName) );

  0ba14	e59f3344	 ldr         r3, [pc, #0x344]
  0ba18	e5933440	 ldr         r3, [r3, #0x440]
  0ba1c	e3130001	 tst         r3, #1
  0ba20	0a000011	 beq         |$LN82@UfnPdd_Ini@3|
  0ba24	e59f3334	 ldr         r3, [pc, #0x334]
  0ba28	e5933440	 ldr         r3, [r3, #0x440]
  0ba2c	e3130801	 tst         r3, #1, 16
  0ba30	0a000005	 beq         |$LN80@UfnPdd_Ini@3|
  0ba34	e28d102c	 add         r1, sp, #0x2C
  0ba38	e59f0324	 ldr         r0, [pc, #0x324]
  0ba3c	eb000000	 bl          CeLogMsg
  0ba40	e3a03001	 mov         r3, #1
  0ba44	e58d3308	 str         r3, [sp, #0x308]
  0ba48	ea000004	 b           |$LN81@UfnPdd_Ini@3|
  0ba4c		 |$LN80@UfnPdd_Ini@3|
  0ba4c	e28d102c	 add         r1, sp, #0x2C
  0ba50	e59f030c	 ldr         r0, [pc, #0x30C]
  0ba54	eb000000	 bl          NKDbgPrintfW
  0ba58	e3a03000	 mov         r3, #0
  0ba5c	e58d3308	 str         r3, [sp, #0x308]
  0ba60		 |$LN81@UfnPdd_Ini@3|
  0ba60	e3a03001	 mov         r3, #1
  0ba64	e58d330c	 str         r3, [sp, #0x30C]
  0ba68	ea000001	 b           |$LN83@UfnPdd_Ini@3|
  0ba6c		 |$LN82@UfnPdd_Ini@3|
  0ba6c	e3a03000	 mov         r3, #0
  0ba70	e58d330c	 str         r3, [sp, #0x30C]
  0ba74		 |$LN83@UfnPdd_Ini@3|
  0ba74		 |$LN2@UfnPdd_Ini@3|

; 4178 :          }
; 4179 :         // if event already exists, then handle to it will be returned
; 4180 :     }
; 4181 :     else

  0ba74	ea000017	 b           |$LN1@UfnPdd_Ini@3|
  0ba78		 |$LN4@UfnPdd_Ini@3|

; 4182 :     {
; 4183 :         DEBUGMSG(ZONE_ERROR,(L"UfnPdd_Init() "
; 4184 :                 L"Vbus Charge Event not defined ('%s' not set)", 
; 4185 :                 REG_VBUS_CHARGE_EVENT_NAME));

  0ba78	e59f32e0	 ldr         r3, [pc, #0x2E0]
  0ba7c	e5933440	 ldr         r3, [r3, #0x440]
  0ba80	e3130001	 tst         r3, #1
  0ba84	0a000011	 beq         |$LN86@UfnPdd_Ini@3|
  0ba88	e59f32d0	 ldr         r3, [pc, #0x2D0]
  0ba8c	e5933440	 ldr         r3, [r3, #0x440]
  0ba90	e3130801	 tst         r3, #1, 16
  0ba94	0a000005	 beq         |$LN84@UfnPdd_Ini@3|
  0ba98	e59f12bc	 ldr         r1, [pc, #0x2BC]
  0ba9c	e59f02b4	 ldr         r0, [pc, #0x2B4]
  0baa0	eb000000	 bl          CeLogMsg
  0baa4	e3a03001	 mov         r3, #1
  0baa8	e58d3310	 str         r3, [sp, #0x310]
  0baac	ea000004	 b           |$LN85@UfnPdd_Ini@3|
  0bab0		 |$LN84@UfnPdd_Ini@3|
  0bab0	e59f12a4	 ldr         r1, [pc, #0x2A4]
  0bab4	e59f029c	 ldr         r0, [pc, #0x29C]
  0bab8	eb000000	 bl          NKDbgPrintfW
  0babc	e3a03000	 mov         r3, #0
  0bac0	e58d3310	 str         r3, [sp, #0x310]
  0bac4		 |$LN85@UfnPdd_Ini@3|
  0bac4	e3a03001	 mov         r3, #1
  0bac8	e58d3314	 str         r3, [sp, #0x314]
  0bacc	ea000001	 b           |$LN87@UfnPdd_Ini@3|
  0bad0		 |$LN86@UfnPdd_Ini@3|
  0bad0	e3a03000	 mov         r3, #0
  0bad4	e58d3314	 str         r3, [sp, #0x314]
  0bad8		 |$LN87@UfnPdd_Ini@3|
  0bad8		 |$LN1@UfnPdd_Ini@3|

; 4186 :     }
; 4187 :     
; 4188 :     pPdd->pUSBContext = pOTG;

  0bad8	e59d3238	 ldr         r3, [sp, #0x238]
  0badc	e2832020	 add         r2, r3, #0x20
  0bae0	e59d3014	 ldr         r3, [sp, #0x14]
  0bae4	e5823000	 str         r3, [r2]

; 4189 :     pPdd->bDMAForRX = FALSE;

  0bae8	e59d3238	 ldr         r3, [sp, #0x238]
  0baec	e2832e43	 add         r2, r3, #0x43, 28
  0baf0	e3a03000	 mov         r3, #0
  0baf4	e5823000	 str         r3, [r2]

; 4190 :     pPdd->bRXIsUsingUsbDMA = FALSE;

  0baf8	e59d3238	 ldr         r3, [sp, #0x238]
  0bafc	e2833b01	 add         r3, r3, #1, 22
  0bb00	e2832038	 add         r2, r3, #0x38
  0bb04	e3a03000	 mov         r3, #0
  0bb08	e5823000	 str         r3, [r2]

; 4191 :     pPdd->bTXIsUsingUsbDMA = FALSE;

  0bb0c	e59d3238	 ldr         r3, [sp, #0x238]
  0bb10	e2833b01	 add         r3, r3, #1, 22
  0bb14	e2832034	 add         r2, r3, #0x34
  0bb18	e3a03000	 mov         r3, #0
  0bb1c	e5823000	 str         r3, [r2]

; 4192 : 
; 4193 :     // Set PDD interface
; 4194 :     pPddIfc->dwVersion = UFN_PDD_INTERFACE_VERSION;

  0bb20	e59d232c	 ldr         r2, [sp, #0x32C]
  0bb24	e3a03806	 mov         r3, #6, 16
  0bb28	e5823000	 str         r3, [r2]

; 4195 : #if 0  // WM7 specific
; 4196 :     pPddIfc->dwCapabilities = UFN_PDD_CAPS_SUPPORTS_FULL_SPEED | UFN_PDD_CAPS_SUPPORTS_HIGH_SPEED
; 4197 :                          | UFN_PDD_CAPS_SUPPORTS_MULTIPLE_CONFIGURATIONS
; 4198 :                          | UFN_PDD_CAPS_SUPPORTS_ALTERNATE_INTERFACES
; 4199 :                          | UFN_PDD_CAPS_REUSABLE_ENDPOINTS;
; 4200 : #else
; 4201 :     pPddIfc->dwCapabilities = UFN_PDD_CAPS_SUPPORTS_FULL_SPEED | UFN_PDD_CAPS_SUPPORTS_HIGH_SPEED;

  0bb2c	e59d332c	 ldr         r3, [sp, #0x32C]
  0bb30	e2832004	 add         r2, r3, #4
  0bb34	e3a03003	 mov         r3, #3
  0bb38	e5823000	 str         r3, [r2]

; 4202 : 
; 4203 : #endif
; 4204 :     pPddIfc->dwEndpointCount = USBD_EP_COUNT;

  0bb3c	e59d332c	 ldr         r3, [sp, #0x32C]
  0bb40	e2832008	 add         r2, r3, #8
  0bb44	e3a03010	 mov         r3, #0x10
  0bb48	e5823000	 str         r3, [r2]

; 4205 :     // need to uncoment
; 4206 :     pPddIfc->pvPddContext = pPdd;

  0bb4c	e59d332c	 ldr         r3, [sp, #0x32C]
  0bb50	e283200c	 add         r2, r3, #0xC
  0bb54	e59d3238	 ldr         r3, [sp, #0x238]
  0bb58	e5823000	 str         r3, [r2]

; 4207 :     pPddIfc->pfnDeinit = UfnPdd_Deinit;

  0bb5c	e59d332c	 ldr         r3, [sp, #0x32C]
  0bb60	e2832010	 add         r2, r3, #0x10
  0bb64	e59f31e8	 ldr         r3, [pc, #0x1E8]
  0bb68	e5823000	 str         r3, [r2]

; 4208 :     pPddIfc->pfnIsConfigurationSupportable = UfnPdd_IsConfigurationSupportable;

  0bb6c	e59d332c	 ldr         r3, [sp, #0x32C]
  0bb70	e2832014	 add         r2, r3, #0x14
  0bb74	e59f31d4	 ldr         r3, [pc, #0x1D4]
  0bb78	e5823000	 str         r3, [r2]

; 4209 :     pPddIfc->pfnIsEndpointSupportable = UfnPdd_IsEndpointSupportable;

  0bb7c	e59d332c	 ldr         r3, [sp, #0x32C]
  0bb80	e2832018	 add         r2, r3, #0x18
  0bb84	e59f31c0	 ldr         r3, [pc, #0x1C0]
  0bb88	e5823000	 str         r3, [r2]

; 4210 :     pPddIfc->pfnInitEndpoint = UfnPdd_InitEndpoint;

  0bb8c	e59d332c	 ldr         r3, [sp, #0x32C]
  0bb90	e283201c	 add         r2, r3, #0x1C
  0bb94	e59f31ac	 ldr         r3, [pc, #0x1AC]
  0bb98	e5823000	 str         r3, [r2]

; 4211 :     pPddIfc->pfnRegisterDevice = UfnPdd_RegisterDevice;

  0bb9c	e59d332c	 ldr         r3, [sp, #0x32C]
  0bba0	e2832020	 add         r2, r3, #0x20
  0bba4	e59f3198	 ldr         r3, [pc, #0x198]
  0bba8	e5823000	 str         r3, [r2]

; 4212 :     pPddIfc->pfnDeregisterDevice = UfnPdd_DeregisterDevice;

  0bbac	e59d332c	 ldr         r3, [sp, #0x32C]
  0bbb0	e2832024	 add         r2, r3, #0x24
  0bbb4	e59f3184	 ldr         r3, [pc, #0x184]
  0bbb8	e5823000	 str         r3, [r2]

; 4213 :     pPddIfc->pfnStart = UfnPdd_Start;

  0bbbc	e59d332c	 ldr         r3, [sp, #0x32C]
  0bbc0	e2832028	 add         r2, r3, #0x28
  0bbc4	e59f3170	 ldr         r3, [pc, #0x170]
  0bbc8	e5823000	 str         r3, [r2]

; 4214 :     pPddIfc->pfnStop = UfnPdd_Stop;

  0bbcc	e59d332c	 ldr         r3, [sp, #0x32C]
  0bbd0	e283202c	 add         r2, r3, #0x2C
  0bbd4	e59f315c	 ldr         r3, [pc, #0x15C]
  0bbd8	e5823000	 str         r3, [r2]

; 4215 :     pPddIfc->pfnIssueTransfer = UfnPdd_IssueTransfer;

  0bbdc	e59d332c	 ldr         r3, [sp, #0x32C]
  0bbe0	e2832030	 add         r2, r3, #0x30
  0bbe4	e59f3148	 ldr         r3, [pc, #0x148]
  0bbe8	e5823000	 str         r3, [r2]

; 4216 :     pPddIfc->pfnAbortTransfer = UfnPdd_AbortTransfer;

  0bbec	e59d332c	 ldr         r3, [sp, #0x32C]
  0bbf0	e2832034	 add         r2, r3, #0x34
  0bbf4	e59f3134	 ldr         r3, [pc, #0x134]
  0bbf8	e5823000	 str         r3, [r2]

; 4217 :     pPddIfc->pfnDeinitEndpoint = UfnPdd_DeinitEndpoint;

  0bbfc	e59d332c	 ldr         r3, [sp, #0x32C]
  0bc00	e2832038	 add         r2, r3, #0x38
  0bc04	e59f3120	 ldr         r3, [pc, #0x120]
  0bc08	e5823000	 str         r3, [r2]

; 4218 :     pPddIfc->pfnStallEndpoint = UfnPdd_StallEndpoint;

  0bc0c	e59d332c	 ldr         r3, [sp, #0x32C]
  0bc10	e283203c	 add         r2, r3, #0x3C
  0bc14	e59f310c	 ldr         r3, [pc, #0x10C]
  0bc18	e5823000	 str         r3, [r2]

; 4219 :     pPddIfc->pfnClearEndpointStall = UfnPdd_ClearEndpointStall;

  0bc1c	e59d332c	 ldr         r3, [sp, #0x32C]
  0bc20	e2832040	 add         r2, r3, #0x40
  0bc24	e59f30f8	 ldr         r3, [pc, #0xF8]
  0bc28	e5823000	 str         r3, [r2]

; 4220 :     pPddIfc->pfnSendControlStatusHandshake = UfnPdd_SendControlStatusHandshake;

  0bc2c	e59d332c	 ldr         r3, [sp, #0x32C]
  0bc30	e2832044	 add         r2, r3, #0x44
  0bc34	e59f30e4	 ldr         r3, [pc, #0xE4]
  0bc38	e5823000	 str         r3, [r2]

; 4221 :     pPddIfc->pfnSetAddress = UfnPdd_SetAddress;

  0bc3c	e59d332c	 ldr         r3, [sp, #0x32C]
  0bc40	e2832048	 add         r2, r3, #0x48
  0bc44	e59f30d0	 ldr         r3, [pc, #0xD0]
  0bc48	e5823000	 str         r3, [r2]

; 4222 :     pPddIfc->pfnIsEndpointHalted = UfnPdd_IsEndpointHalted;

  0bc4c	e59d332c	 ldr         r3, [sp, #0x32C]
  0bc50	e283204c	 add         r2, r3, #0x4C
  0bc54	e59f30bc	 ldr         r3, [pc, #0xBC]
  0bc58	e5823000	 str         r3, [r2]

; 4223 :     pPddIfc->pfnInitiateRemoteWakeup = UfnPdd_InitiateRemoteWakeup;

  0bc5c	e59d332c	 ldr         r3, [sp, #0x32C]
  0bc60	e2832050	 add         r2, r3, #0x50
  0bc64	e59f30a8	 ldr         r3, [pc, #0xA8]
  0bc68	e5823000	 str         r3, [r2]

; 4224 :     pPddIfc->pfnPowerDown = UfnPdd_PowerDown;

  0bc6c	e59d332c	 ldr         r3, [sp, #0x32C]
  0bc70	e2832054	 add         r2, r3, #0x54
  0bc74	e59f3094	 ldr         r3, [pc, #0x94]
  0bc78	e5823000	 str         r3, [r2]

; 4225 :     pPddIfc->pfnPowerUp = UfnPdd_PowerUp;

  0bc7c	e59d332c	 ldr         r3, [sp, #0x32C]
  0bc80	e2832058	 add         r2, r3, #0x58
  0bc84	e59f3080	 ldr         r3, [pc, #0x80]
  0bc88	e5823000	 str         r3, [r2]

; 4226 :     pPddIfc->pfnIOControl = UfnPdd_IOControl;

  0bc8c	e59d332c	 ldr         r3, [sp, #0x32C]
  0bc90	e283205c	 add         r2, r3, #0x5C
  0bc94	e59f306c	 ldr         r3, [pc, #0x6C]
  0bc98	e5823000	 str         r3, [r2]

; 4227 :     
; 4228 :     // Save MDD context & notify function
; 4229 :     pPdd->pMddContext = pMddContext;

  0bc9c	e59d3238	 ldr         r3, [sp, #0x238]
  0bca0	e2832024	 add         r2, r3, #0x24
  0bca4	e59d3324	 ldr         r3, [sp, #0x324]
  0bca8	e5823000	 str         r3, [r2]

; 4230 :     pPdd->pfnNotify = pMddIfc->pfnNotify;

  0bcac	e59d3328	 ldr         r3, [sp, #0x328]
  0bcb0	e2831004	 add         r1, r3, #4
  0bcb4	e59d3238	 ldr         r3, [sp, #0x238]
  0bcb8	e2832028	 add         r2, r3, #0x28
  0bcbc	e5913000	 ldr         r3, [r1]
  0bcc0	e5823000	 str         r3, [r2]

; 4231 :     
; 4232 :     // pOTG->counter++;
; 4233 :     // Should set to pPdd object
; 4234 :     pOTG->pContext[DEVICE_CONTEXT] = pPdd;

  0bcc4	e59d3014	 ldr         r3, [sp, #0x14]
  0bcc8	e2832010	 add         r2, r3, #0x10
  0bccc	e59d3238	 ldr         r3, [sp, #0x238]
  0bcd0	e5823000	 str         r3, [r2]

; 4235 :     // DEBUGMSG(1, (TEXT("Counter in device module = %d\r\n"), pOTG->counter));
; 4236 :     SetEvent(pOTG->hReadyEvents[DEVICE_CONTEXT]);

  0bcd4	e59d3014	 ldr         r3, [sp, #0x14]
  0bcd8	e5930000	 ldr         r0, [r3]
  0bcdc	eb000000	 bl          SetEvent

; 4237 :     // Done
; 4238 :     rc = ERROR_SUCCESS;

  0bce0	e3a03000	 mov         r3, #0
  0bce4	e58d300c	 str         r3, [sp, #0xC]
  0bce8		 |$cleanUp$49278|

; 4239 : 
; 4240 : cleanUp:
; 4241 :    
; 4242 :     return rc;

  0bce8	e59d023c	 ldr         r0, [sp, #0x23C]
  0bcec	eb000000	 bl          __security_check_cookie
  0bcf0	e59d300c	 ldr         r3, [sp, #0xC]
  0bcf4	e58d3248	 str         r3, [sp, #0x248]
  0bcf8		 |$LN20@UfnPdd_Ini@3|

; 4243 : }

  0bcf8	e59d0248	 ldr         r0, [sp, #0x248]
  0bcfc	e28ddfc6	 add         sp, sp, #0xC6, 30
  0bd00	e89d6000	 ldmia       sp, {sp, lr}
  0bd04	e12fff1e	 bx          lr
  0bd08		 |$LN91@UfnPdd_Ini@3|
  0bd08		 |$LN92@UfnPdd_Ini@3|
  0bd08	00000000	 DCD         |UfnPdd_IOControl|
  0bd0c		 |$LN93@UfnPdd_Ini@3|
  0bd0c	00000000	 DCD         |UfnPdd_PowerUp|
  0bd10		 |$LN94@UfnPdd_Ini@3|
  0bd10	00000000	 DCD         |UfnPdd_PowerDown|
  0bd14		 |$LN95@UfnPdd_Ini@3|
  0bd14	00000000	 DCD         |UfnPdd_InitiateRemoteWakeup|
  0bd18		 |$LN96@UfnPdd_Ini@3|
  0bd18	00000000	 DCD         |UfnPdd_IsEndpointHalted|
  0bd1c		 |$LN97@UfnPdd_Ini@3|
  0bd1c	00000000	 DCD         |UfnPdd_SetAddress|
  0bd20		 |$LN98@UfnPdd_Ini@3|
  0bd20	00000000	 DCD         |UfnPdd_SendControlStatusHandshake|
  0bd24		 |$LN99@UfnPdd_Ini@3|
  0bd24	00000000	 DCD         |UfnPdd_ClearEndpointStall|
  0bd28		 |$LN100@UfnPdd_Ini@3|
  0bd28	00000000	 DCD         |UfnPdd_StallEndpoint|
  0bd2c		 |$LN101@UfnPdd_Ini@3|
  0bd2c	00000000	 DCD         |UfnPdd_DeinitEndpoint|
  0bd30		 |$LN102@UfnPdd_Ini@3|
  0bd30	00000000	 DCD         |UfnPdd_AbortTransfer|
  0bd34		 |$LN103@UfnPdd_Ini@3|
  0bd34	00000000	 DCD         |UfnPdd_IssueTransfer|
  0bd38		 |$LN104@UfnPdd_Ini@3|
  0bd38	00000000	 DCD         |UfnPdd_Stop|
  0bd3c		 |$LN105@UfnPdd_Ini@3|
  0bd3c	00000000	 DCD         |UfnPdd_Start|
  0bd40		 |$LN106@UfnPdd_Ini@3|
  0bd40	00000000	 DCD         |UfnPdd_DeregisterDevice|
  0bd44		 |$LN107@UfnPdd_Ini@3|
  0bd44	00000000	 DCD         |UfnPdd_RegisterDevice|
  0bd48		 |$LN108@UfnPdd_Ini@3|
  0bd48	00000000	 DCD         |UfnPdd_InitEndpoint|
  0bd4c		 |$LN109@UfnPdd_Ini@3|
  0bd4c	00000000	 DCD         |UfnPdd_IsEndpointSupportable|
  0bd50		 |$LN110@UfnPdd_Ini@3|
  0bd50	00000000	 DCD         |UfnPdd_IsConfigurationSupportable|
  0bd54		 |$LN111@UfnPdd_Ini@3|
  0bd54	00000000	 DCD         |UfnPdd_Deinit|
  0bd58		 |$LN112@UfnPdd_Ini@3|
  0bd58	00000000	 DCD         |??_C@_1HG@JAPBDJM@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAV?$AAb?$AAu?$AAs?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5@|
  0bd5c		 |$LN113@UfnPdd_Ini@3|
  0bd5c	00000000	 DCD         |??_C@_1CC@CKFJFILD@?$AAU?$AAS?$AAB?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAr?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$AA@|
  0bd60		 |$LN114@UfnPdd_Ini@3|
  0bd60	00000000	 DCD         |dpCurSettings|
  0bd64		 |$LN115@UfnPdd_Ini@3|
  0bd64	00000000	 DCD         |??_C@_1FG@FEHBENHA@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAU?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAV?$AAb?$AAu?$AAs?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AA?5@|
  0bd68		 |$LN116@UfnPdd_Ini@3|
  0bd68	00000000	 DCD         |??_C@_1GI@MBOAOBHJ@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAV?$AAb?$AAu@|
  0bd6c		 |$LN117@UfnPdd_Ini@3|
  0bd6c	00000000	 DCD         |??_C@_1GG@HCNMINEF@?$AAU?$AAS?$AAB?$AAH?$AAF?$AA?5?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAa?$AAl?$AAu?$AAe?$AAE?$AAx?$AA?5?$AAU?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAV?$AAb?$AAu?$AAs@|
  0bd70		 |$LN118@UfnPdd_Ini@3|
  0bd70	00000000	 DCD         |??_C@_1GK@EDHBDMMN@?$AAU?$AAF?$AAN?$AAP?$AAD?$AAD?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAa?$AAl?$AAu?$AAe?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs@|
  0bd74		 |$LN119@UfnPdd_Ini@3|
  0bd74	00000000	 DCD         |??_C@_1DM@GBENJPGN@?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?2?$AAB?$AAu?$AAi?$AAl?$AAt?$AAI?$AAn?$AA?2?$AAM?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?2?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?$AA@|
  0bd78		 |$LN120@UfnPdd_Ini@3|
  0bd78	00000000	 DCD         |??_C@_11LOCGONAA@?$AA?$AA@|
  0bd7c		 |$LN121@UfnPdd_Ini@3|
  0bd7c	00000000	 DCD         |??_C@_1FK@DCFOIEJO@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAO?$AAp?$AAe?$AAn?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAK?$AAe?$AAy?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ@|
  0bd80		 |$LN122@UfnPdd_Ini@3|
  0bd80	00000000	 DCD         |??_C@_1DK@FDGIEPDF@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAO?$AAT?$AAG?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@|
  0bd84		 |$LN123@UfnPdd_Ini@3|
  0bd84	00000000	 DCD         |??_C@_1BI@KEGLAEOK@?$AAO?$AAT?$AAG?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$AA@|
  0bd88		 |$LN124@UfnPdd_Ini@3|
  0bd88	00000000	 DCD         |??_C@_1FG@KIICLDGL@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAi?$AAn?$AA?5?$AAp?$AAe?$AAr?$AAf?$AAo?$AAr?$AAm?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAa?$AAt?$AAt?$AAa?$AAc?$AAh?$AA?5?$AAp@|
  0bd8c		 |$LN125@UfnPdd_Ini@3|
  0bd8c	00000000	 DCD         |gc_MUsbFuncs|
  0bd90		 |$LN126@UfnPdd_Ini@3|
  0bd90	00000000	 DCD         |??_C@_1DO@EADKIEIP@?$AAA?$AAt?$AAt?$AAa?$AAc?$AAh?$AAP?$AAr?$AAo?$AAc?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AA4?$AA?5?$AAp?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt?$AAe?$AAr?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  0bd94		 |$LN127@UfnPdd_Ini@3|
  0bd94	00000000	 DCD         |??_C@_1DG@PIDKFHDH@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAO?$AAT?$AAG?$AAA?$AAt?$AAt?$AAa?$AAc?$AAh?$AA?$AN?$AA?6?$AA?$AA@|
  0bd98		 |$LN128@UfnPdd_Ini@3|
  0bd98	00000000	 DCD         |??_C@_1BE@JNKHMKGH@?$AAO?$AAT?$AAG?$AAA?$AAt?$AAt?$AAa?$AAc?$AAh?$AA?$AA@|
  0bd9c		 |$LN129@UfnPdd_Ini@3|
  0bd9c	00000000	 DCD         |??_C@_1CK@HNFDCIIG@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  0bda0		 |$LN130@UfnPdd_Ini@3|
  0bda0	00000000	 DCD         |??_C@_1CC@PKGPLCAL@?$AAo?$AAm?$AAa?$AAp?$AA_?$AAm?$AAu?$AAs?$AAb?$AAo?$AAt?$AAg?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@|
  0bda4		 |$LN131@UfnPdd_Ini@3|
  0bda4	00000000	 DCD         |??_C@_1JG@KGFPJKPC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAv?$AAi?$AAr?$AAt?$AAu@|
  0bda8		 |$LN132@UfnPdd_Ini@3|
  0bda8	00000000	 DCD         |??_C@_1JO@FKEMNFJK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc@|
  0bdac		 |$LN133@UfnPdd_Ini@3|
  0bdac	00000000	 DCD         |??_C@_1HO@NMMLFAJE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc@|
  0bdb0		 |$LN134@UfnPdd_Ini@3|
  0bdb0	00000000	 DCD         |??_C@_1HO@HAPAPLP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc@|
  0bdb4		 |$LN135@UfnPdd_Ini@3|
  0bdb4	00000000	 DCD         |??_C@_1GI@NPIAJGOE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5@|
  0bdb8		 |$LN136@UfnPdd_Ini@3|
  0bdb8	00000000	 DCD         |??_C@_1GM@LIECJJPD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5@|
  0bdbc		 |$LN137@UfnPdd_Ini@3|
  0bdbc	00000000	 DCD         |s_deviceRegParams|
  0bdc0		 |$LN138@UfnPdd_Ini@3|
  0bdc0	00000000	 DCD         |??_C@_1FE@OHKBPCFO@?$AAM?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAh?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo@|
  0bdc4		 |$LN139@UfnPdd_Ini@3|
  0bdc4	00000000	 DCD         |??_C@_1CK@KINFHLOC@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0bdc8		 |$LN140@UfnPdd_Ini@3|
  0bdc8	00000000	 DCD         |__security_cookie|
  0bdcc		 |$M51102|

			 ENDP  ; |UfnPdd_Init|

	EXPORT	|UfnPdd_DllEntry|

  001b8			 AREA	 |.pdata|, PDATA
|$T51160| DCD	|$LN5@UfnPdd_Dll|
	DCD	0x40000a04
; Function compile flags: /Odtp

  0bdcc			 AREA	 |.text|, CODE, ARM

  0bdcc		 |UfnPdd_DllEntry| PROC

; 4269 : {

  0bdcc		 |$LN5@UfnPdd_Dll|
  0bdcc	e1a0c00d	 mov         r12, sp
  0bdd0	e92d0007	 stmdb       sp!, {r0 - r2}
  0bdd4	e92d5000	 stmdb       sp!, {r12, lr}
  0bdd8	e24dd004	 sub         sp, sp, #4
  0bddc		 |$M51157|

; 4270 : 	UNREFERENCED_PARAMETER(hDllHandle);
; 4271 : 	UNREFERENCED_PARAMETER(reason);
; 4272 : 	UNREFERENCED_PARAMETER(pReserved);
; 4273 : 
; 4274 :     return TRUE;

  0bddc	e3a03001	 mov         r3, #1
  0bde0	e58d3000	 str         r3, [sp]

; 4275 : }

  0bde4	e59d0000	 ldr         r0, [sp]
  0bde8	e28dd004	 add         sp, sp, #4
  0bdec	e89d6000	 ldmia       sp, {sp, lr}
  0bdf0	e12fff1e	 bx          lr
  0bdf4		 |$M51158|

			 ENDP  ; |UfnPdd_DllEntry|

	END
