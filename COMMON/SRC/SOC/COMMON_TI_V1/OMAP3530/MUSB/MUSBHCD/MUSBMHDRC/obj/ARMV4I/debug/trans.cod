; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\OMAP3530\MUSB\MUSBHCD\MUSBMHDRC\trans.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1DK@JPBDFEOB@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@IMCKALLA@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAO?$AAN?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@CEGNOBAM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAF?$AAA?$AAI?$AAL?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@PGHDEMEK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAI?$AAG?$AAN?$AAA?$AAL?$AA_?$AAN?$AAE?$AAW?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1II@FBBOBKGN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAS?$AAE?$AAR?$AAT?$AA_?$AAN?$AAE?$AAW?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@LCLFDJDO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@COKEBMOE@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@HPGGGHKI@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@KPBCOGEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@CFFAAPDL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@NDHJOKMM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAE?$AAT?$AAE?$AAR?$AAM?$AAI?$AAN?$AAE?$AA_?$AAC@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@JADKDKDC@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@NPLCKJLH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@MEMGEMJJ@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@BCHKIAPP@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@FNPCBDHK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@BBOOKHNN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAL?$AAE?$AAA?$AAV?$AAE?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@LGLHPFAK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@BLNLBKIO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@NMCKCJLL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA_?$AAA?$AAN?$AAD?$AA_?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@KNOIBOPH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAU?$AAS?$AAI?$AAN?$AAG?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@COMJHLEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAO?$AAP?$AAE?$AAN?$AAI?$AAN?$AAG?$AA_?$AAE?$AAN?$AAD@| [ DATA ] ; `string'
	EXPORT	|?m_dwGlobalTransferID@CTransfer@@1KA| [ DATA ] ; CTransfer::m_dwGlobalTransferID

  00000			 AREA	 |.bss|, NOINIT
|?m_dwGlobalTransferID@CTransfer@@1KA| % 0x4		; CTransfer::m_dwGlobalTransferID

  00000			 AREA	 |.data|, DATA
|cszCfgStateStrings| DCD |??_C@_1FI@COMJHLEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAO?$AAP?$AAE?$AAN?$AAI?$AAN?$AAG?$AA_?$AAE?$AAN?$AAD@|
	DCD	|??_C@_1EI@KNOIBOPH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAU?$AAS?$AAI?$AAN?$AAG?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@|
	DCD	|??_C@_1FG@NMCKCJLL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA_?$AAA?$AAN?$AAD?$AA_?$AAE@|
	DCD	|??_C@_1HG@BLNLBKIO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1FI@LGLHPFAK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1EI@BBOOKHNN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAL?$AAE?$AAA?$AAV?$AAE?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@|
	DCD	|??_C@_1HM@FNPCBDHK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1GM@BCHKIAPP@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1HE@MEMGEMJJ@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI@|
	DCD	|??_C@_1HM@NPLCKJLH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1GM@JADKDKDC@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1GA@NDHJOKMM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAE?$AAT?$AAE?$AAR?$AAM?$AAI?$AAN?$AAE?$AA_?$AAC@|
	DCD	|??_C@_1FG@CFFAAPDL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1HG@KPBCOGEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1GG@HPGGGHKI@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1EI@COKEBMOE@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@|
	DCD	|??_C@_1FC@LCLFDJDO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@|
	DCD	|??_C@_1II@FBBOBKGN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAS?$AAE?$AAR?$AAT?$AA_?$AAN?$AAE?$AAW?$AA_@|
	DCD	|??_C@_1HO@PGHDEMEK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAI?$AAG?$AAN?$AAA?$AAL?$AA_?$AAN?$AAE?$AAW?$AA_@|
	DCD	|??_C@_1DI@CEGNOBAM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAF?$AAA?$AAI?$AAL?$AAE?$AAD?$AA?$AA@|
	DCD	|??_C@_1DE@IMCKALLA@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAO?$AAN?$AAE?$AA?$AA@|
	DCD	|??_C@_1DK@JPBDFEOB@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?$AA@|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@JPBDFEOB@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?$AA@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "I", 0x0, "N", 0x0, "V", 0x0, "A"
	DCB	0x0, "L", 0x0, "I", 0x0, "D", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@IMCKALLA@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAO?$AAN?$AAE?$AA?$AA@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "D", 0x0, "O", 0x0, "N", 0x0, "E"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@CEGNOBAM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAF?$AAA?$AAI?$AAL?$AAE?$AAD?$AA?$AA@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "F", 0x0, "A", 0x0, "I", 0x0, "L"
	DCB	0x0, "E", 0x0, "D", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@PGHDEMEK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAI?$AAG?$AAN?$AAA?$AAL?$AA_?$AAN?$AAE?$AAW?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "I", 0x0, "G", 0x0, "N"
	DCB	0x0, "A", 0x0, "L", 0x0, "_", 0x0, "N", 0x0, "E", 0x0, "W"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C"
	DCB	0x0, "E", 0x0, "_", 0x0, "E", 0x0, "N", 0x0, "T", 0x0, "E"
	DCB	0x0, "R", 0x0, "_", 0x0, "O", 0x0, "P", 0x0, "E", 0x0, "R"
	DCB	0x0, "A", 0x0, "T", 0x0, "I", 0x0, "O", 0x0, "N", 0x0, "A"
	DCB	0x0, "L", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T"
	DCB	0x0, "E", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1II@FBBOBKGN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAS?$AAE?$AAR?$AAT?$AA_?$AAN?$AAE?$AAW?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "I", 0x0, "N", 0x0, "S", 0x0, "E"
	DCB	0x0, "R", 0x0, "T", 0x0, "_", 0x0, "N", 0x0, "E", 0x0, "W"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C"
	DCB	0x0, "E", 0x0, "_", 0x0, "I", 0x0, "N", 0x0, "T", 0x0, "O"
	DCB	0x0, "_", 0x0, "U", 0x0, "P", 0x0, "S", 0x0, "T", 0x0, "R"
	DCB	0x0, "E", 0x0, "A", 0x0, "M", 0x0, "_", 0x0, "H", 0x0, "U"
	DCB	0x0, "B", 0x0, "_", 0x0, "P", 0x0, "O", 0x0, "R", 0x0, "T"
	DCB	0x0, "_", 0x0, "A", 0x0, "R", 0x0, "R", 0x0, "A", 0x0, "Y"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@LCLFDJDO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "C", 0x0, "R", 0x0, "E", 0x0, "A"
	DCB	0x0, "T", 0x0, "E", 0x0, "_", 0x0, "N", 0x0, "E", 0x0, "W"
	DCB	0x0, "_", 0x0, "F", 0x0, "U", 0x0, "N", 0x0, "C", 0x0, "T"
	DCB	0x0, "I", 0x0, "O", 0x0, "N", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@COKEBMOE@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "C", 0x0, "R", 0x0, "E", 0x0, "A"
	DCB	0x0, "T", 0x0, "E", 0x0, "_", 0x0, "N", 0x0, "E", 0x0, "W"
	DCB	0x0, "_", 0x0, "H", 0x0, "U", 0x0, "B", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@HPGGGHKI@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "H"
	DCB	0x0, "U", 0x0, "B", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "S"
	DCB	0x0, "C", 0x0, "R", 0x0, "I", 0x0, "P", 0x0, "T", 0x0, "O"
	DCB	0x0, "R", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@KPBCOGEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "I"
	DCB	0x0, "N", 0x0, "I", 0x0, "T", 0x0, "I", 0x0, "A", 0x0, "L"
	DCB	0x0, "_", 0x0, "H", 0x0, "U", 0x0, "B", 0x0, "_", 0x0, "D"
	DCB	0x0, "E", 0x0, "S", 0x0, "C", 0x0, "R", 0x0, "I", 0x0, "P"
	DCB	0x0, "T", 0x0, "O", 0x0, "R", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@CFFAAPDL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "C"
	DCB	0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@NDHJOKMM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAE?$AAT?$AAE?$AAR?$AAM?$AAI?$AAN?$AAE?$AA_?$AAC@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "T", 0x0, "E"
	DCB	0x0, "R", 0x0, "M", 0x0, "I", 0x0, "N", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "T", 0x0, "O", 0x0, "_", 0x0, "C", 0x0, "H"
	DCB	0x0, "O", 0x0, "O", 0x0, "S", 0x0, "E", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@JADKDKDC@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "C"
	DCB	0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G", 0x0, "_"
	DCB	0x0, "D", 0x0, "E", 0x0, "S", 0x0, "C", 0x0, "R", 0x0, "I"
	DCB	0x0, "P", 0x0, "T", 0x0, "O", 0x0, "R", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@NPLCKJLH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "I"
	DCB	0x0, "N", 0x0, "I", 0x0, "T", 0x0, "I", 0x0, "A", 0x0, "L"
	DCB	0x0, "_", 0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I"
	DCB	0x0, "G", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "S", 0x0, "C"
	DCB	0x0, "R", 0x0, "I", 0x0, "P", 0x0, "T", 0x0, "O", 0x0, "R"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@MEMGEMJJ@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T", 0x0, "U"
	DCB	0x0, "P", 0x0, "_", 0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F"
	DCB	0x0, "I", 0x0, "G", 0x0, "U", 0x0, "R", 0x0, "A", 0x0, "T"
	DCB	0x0, "I", 0x0, "O", 0x0, "N", 0x0, "_", 0x0, "D", 0x0, "E"
	DCB	0x0, "S", 0x0, "C", 0x0, "R", 0x0, "I", 0x0, "P", 0x0, "T"
	DCB	0x0, "O", 0x0, "R", 0x0, "_", 0x0, "A", 0x0, "R", 0x0, "R"
	DCB	0x0, "A", 0x0, "Y", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@BCHKIAPP@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "D", 0x0, "E", 0x0, "S", 0x0, "C", 0x0, "R", 0x0, "I"
	DCB	0x0, "P", 0x0, "T", 0x0, "O", 0x0, "R", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@FNPCBDHK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "I"
	DCB	0x0, "N", 0x0, "I", 0x0, "T", 0x0, "I", 0x0, "A", 0x0, "L"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C"
	DCB	0x0, "E", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "S", 0x0, "C"
	DCB	0x0, "R", 0x0, "I", 0x0, "P", 0x0, "T", 0x0, "O", 0x0, "R"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@BBOOKHNN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAL?$AAE?$AAA?$AAV?$AAE?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "L", 0x0, "E", 0x0, "A", 0x0, "V"
	DCB	0x0, "E", 0x0, "_", 0x0, "A", 0x0, "D", 0x0, "D", 0x0, "R"
	DCB	0x0, "E", 0x0, "S", 0x0, "S", 0x0, "0", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@LGLHPFAK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "A"
	DCB	0x0, "D", 0x0, "D", 0x0, "R", 0x0, "E", 0x0, "S", 0x0, "S"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@BLNLBKIO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "D", 0x0, "E", 0x0, "S", 0x0, "C", 0x0, "R", 0x0, "I"
	DCB	0x0, "P", 0x0, "T", 0x0, "O", 0x0, "R", 0x0, "_", 0x0, "T"
	DCB	0x0, "E", 0x0, "S", 0x0, "T", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@NMCKCJLL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA_?$AAA?$AAN?$AAD?$AA_?$AAE@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "S", 0x0, "E"
	DCB	0x0, "T", 0x0, "_", 0x0, "A", 0x0, "N", 0x0, "D", 0x0, "_"
	DCB	0x0, "E", 0x0, "N", 0x0, "A", 0x0, "B", 0x0, "L", 0x0, "E"
	DCB	0x0, "_", 0x0, "P", 0x0, "O", 0x0, "R", 0x0, "T", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@KNOIBOPH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAU?$AAS?$AAI?$AAN?$AAG?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "U", 0x0, "S", 0x0, "I", 0x0, "N"
	DCB	0x0, "G", 0x0, "_", 0x0, "A", 0x0, "D", 0x0, "D", 0x0, "R"
	DCB	0x0, "E", 0x0, "S", 0x0, "S", 0x0, "0", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@COMJHLEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAO?$AAP?$AAE?$AAN?$AAI?$AAN?$AAG?$AA_?$AAE?$AAN?$AAD@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "O", 0x0, "P", 0x0, "E", 0x0, "N"
	DCB	0x0, "I", 0x0, "N", 0x0, "G", 0x0, "_", 0x0, "E", 0x0, "N"
	DCB	0x0, "D", 0x0, "P", 0x0, "O", 0x0, "I", 0x0, "N", 0x0, "T"
	DCB	0x0, "0", 0x0, "_", 0x0, "P", 0x0, "I", 0x0, "P", 0x0, "E"
	DCB	0x0, 0x0, 0x0				; `string'
	EXPORT	|??_C@_15MAOEGKJF@?$AA?$CF?$AAS?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_02KNHHEEKP@?5?5?$AA@| [ DATA ]	; `string'
	EXPORT	|??_C@_03NDEAONJP@?5?5?5?$AA@| [ DATA ]	; `string'
	EXPORT	|??_C@_01CLKCMJKC@?5?$AA@| [ DATA ]	; `string'
	EXPORT	|??_C@_02LMMGGCAJ@?3?5?$AA@| [ DATA ]	; `string'
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|memdodump|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|strlen|
	IMPORT	|strcat|
	IMPORT	|__security_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__rt_udiv|
	IMPORT	|__rt_sdiv|
	IMPORT	|__security_check_cookie|

  00000			 AREA	 |.pdata|, PDATA
|$T37178| DCD	|$LN31@memdodump|
	DCD	0xc0011804
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\trans.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15MAOEGKJF@?$AA?$CF?$AAS?$AA?$AA@| DCB "%", 0x0, "S", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_02KNHHEEKP@?5?5?$AA@| DCB "  ", 0x0		; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_03NDEAONJP@?5?5?5?$AA@| DCB "   ", 0x0		; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_01CLKCMJKC@?5?$AA@| DCB " ", 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_02LMMGGCAJ@?3?5?$AA@| DCB ": ", 0x0		; `string'

  00000			 AREA	 |.xdata|, DATA
|$T37174| DCD	0xffffffe0
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T37174|

  00008		 |memdodump| PROC

; 50   : {    

  00008		 |$LN31@memdodump|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d0007	 stmdb       sp!, {r0 - r2}
  00010	e92d5000	 stmdb       sp!, {r12, lr}
  00014	e24dd090	 sub         sp, sp, #0x90
  00018		 |$M37175|
  00018	e59f3444	 ldr         r3, [pc, #0x444]
  0001c	e5933000	 ldr         r3, [r3]
  00020	e58d3084	 str         r3, [sp, #0x84]

; 51   :     unsigned short i,j,l;
; 52   :     unsigned char tmp_str[100]; 
; 53   :     unsigned char tmp_str1[10];    
; 54   :     for (i = 0; i < num_bytes; i += 16)    {        

  00024	e3a03000	 mov         r3, #0
  00028	e1cd30b0	 strh        r3, [sp]
  0002c	ea000004	 b           |$LN24@memdodump|
  00030		 |$LN23@memdodump|
  00030	e1dd30b0	 ldrh        r3, [sp]
  00034	e2833010	 add         r3, r3, #0x10
  00038	e1a03803	 mov         r3, r3, lsl #16
  0003c	e1a03823	 mov         r3, r3, lsr #16
  00040	e1cd30b0	 strh        r3, [sp]
  00044		 |$LN24@memdodump|
  00044	e1dd30b0	 ldrh        r3, [sp]
  00048	e1a02003	 mov         r2, r3
  0004c	e1dd39bc	 ldrh        r3, [sp, #0x9C]
  00050	e1520003	 cmp         r2, r3
  00054	aa0000f8	 bge         |$LN22@memdodump|

; 55   :         unsigned short n ;      
; 56   :         tmp_str[0]='\0';        

  00058	e3a03000	 mov         r3, #0
  0005c	e5cd3010	 strb        r3, [sp, #0x10]

; 57   :         n = i+offset ;        

  00060	e1dd30b0	 ldrh        r3, [sp]
  00064	e1a02003	 mov         r2, r3
  00068	e1dd3ab0	 ldrh        r3, [sp, #0xA0]
  0006c	e0823003	 add         r3, r2, r3
  00070	e1a03803	 mov         r3, r3, lsl #16
  00074	e1a03823	 mov         r3, r3, lsr #16
  00078	e1cd37b8	 strh        r3, [sp, #0x78]

; 58   :         for (j=0; j<4; j++) {

  0007c	e3a03000	 mov         r3, #0
  00080	e1cd37b6	 strh        r3, [sp, #0x76]
  00084	ea000004	 b           |$LN21@memdodump|
  00088		 |$LN20@memdodump|
  00088	e1dd37b6	 ldrh        r3, [sp, #0x76]
  0008c	e2833001	 add         r3, r3, #1
  00090	e1a03803	 mov         r3, r3, lsl #16
  00094	e1a03823	 mov         r3, r3, lsr #16
  00098	e1cd37b6	 strh        r3, [sp, #0x76]
  0009c		 |$LN21@memdodump|
  0009c	e1dd37b6	 ldrh        r3, [sp, #0x76]
  000a0	e3530004	 cmp         r3, #4
  000a4	aa000021	 bge         |$LN19@memdodump|

; 59   :             l=n%16;

  000a8	e1dd37b8	 ldrh        r3, [sp, #0x78]
  000ac	e1a01003	 mov         r1, r3
  000b0	e3a00010	 mov         r0, #0x10
  000b4	eb000000	 bl          __rt_sdiv
  000b8	e1a03801	 mov         r3, r1, lsl #16
  000bc	e1a03823	 mov         r3, r3, lsr #16
  000c0	e1cd37b4	 strh        r3, [sp, #0x74]

; 60   :             if (l>=10)              

  000c4	e1dd37b4	 ldrh        r3, [sp, #0x74]
  000c8	e353000a	 cmp         r3, #0xA
  000cc	ba000009	 blt         |$LN18@memdodump|

; 61   :                 tmp_str[3-j]=(unsigned char)('A'+l-10);         

  000d0	e1dd37b4	 ldrh        r3, [sp, #0x74]
  000d4	e2833041	 add         r3, r3, #0x41
  000d8	e243300a	 sub         r3, r3, #0xA
  000dc	e20310ff	 and         r1, r3, #0xFF
  000e0	e1dd37b6	 ldrh        r3, [sp, #0x76]
  000e4	e2632003	 rsb         r2, r3, #3
  000e8	e28d3010	 add         r3, sp, #0x10
  000ec	e0833002	 add         r3, r3, r2
  000f0	e5c31000	 strb        r1, [r3]

; 62   :             else                

  000f4	ea000007	 b           |$LN17@memdodump|
  000f8		 |$LN18@memdodump|

; 63   :                 tmp_str[3-j]=(unsigned char)(l+'0');            

  000f8	e1dd37b4	 ldrh        r3, [sp, #0x74]
  000fc	e2833030	 add         r3, r3, #0x30
  00100	e20310ff	 and         r1, r3, #0xFF
  00104	e1dd37b6	 ldrh        r3, [sp, #0x76]
  00108	e2632003	 rsb         r2, r3, #3
  0010c	e28d3010	 add         r3, sp, #0x10
  00110	e0833002	 add         r3, r3, r2
  00114	e5c31000	 strb        r1, [r3]
  00118		 |$LN17@memdodump|

; 64   :             n >>= 4 ;       

  00118	e1dd37b8	 ldrh        r3, [sp, #0x78]
  0011c	e1a03223	 mov         r3, r3, lsr #4
  00120	e1a03803	 mov         r3, r3, lsl #16
  00124	e1a03823	 mov         r3, r3, lsr #16
  00128	e1cd37b8	 strh        r3, [sp, #0x78]

; 65   :         }       

  0012c	eaffffd5	 b           |$LN20@memdodump|
  00130		 |$LN19@memdodump|

; 66   :         tmp_str[4]='\0';        

  00130	e3a03000	 mov         r3, #0
  00134	e5cd3014	 strb        r3, [sp, #0x14]

; 67   :         strcat ( (char *)tmp_str, ": ");        

  00138	e59f1320	 ldr         r1, [pc, #0x320]
  0013c	e28d0010	 add         r0, sp, #0x10
  00140	eb000000	 bl          strcat

; 68   :         /*          Output the hex bytes        */        
; 69   :         for (j = i; j < (i+16); j++) {          

  00144	e1dd30b0	 ldrh        r3, [sp]
  00148	e1cd37b6	 strh        r3, [sp, #0x76]
  0014c	ea000004	 b           |$LN16@memdodump|
  00150		 |$LN15@memdodump|
  00150	e1dd37b6	 ldrh        r3, [sp, #0x76]
  00154	e2833001	 add         r3, r3, #1
  00158	e1a03803	 mov         r3, r3, lsl #16
  0015c	e1a03823	 mov         r3, r3, lsr #16
  00160	e1cd37b6	 strh        r3, [sp, #0x76]
  00164		 |$LN16@memdodump|
  00164	e1dd37b6	 ldrh        r3, [sp, #0x76]
  00168	e1a02003	 mov         r2, r3
  0016c	e1dd30b0	 ldrh        r3, [sp]
  00170	e2833010	 add         r3, r3, #0x10
  00174	e1520003	 cmp         r2, r3
  00178	aa00003f	 bge         |$LN14@memdodump|

; 70   :             int m ;            
; 71   :             if (j < num_bytes)  {  

  0017c	e1dd37b6	 ldrh        r3, [sp, #0x76]
  00180	e1a02003	 mov         r2, r3
  00184	e1dd39bc	 ldrh        r3, [sp, #0x9C]
  00188	e1520003	 cmp         r2, r3
  0018c	aa000036	 bge         |$LN13@memdodump|

; 72   :                 m=((unsigned int)((unsigned char)*(data+j)))/16 ;               

  00190	e1dd37b6	 ldrh        r3, [sp, #0x76]
  00194	e1a02003	 mov         r2, r3
  00198	e59d3098	 ldr         r3, [sp, #0x98]
  0019c	e0833002	 add         r3, r3, r2
  001a0	e5d31000	 ldrb        r1, [r3]
  001a4	e3a00010	 mov         r0, #0x10
  001a8	eb000000	 bl          __rt_udiv
  001ac	e58d007c	 str         r0, [sp, #0x7C]

; 73   :                 if (m>=10)                  

  001b0	e59d307c	 ldr         r3, [sp, #0x7C]
  001b4	e353000a	 cmp         r3, #0xA
  001b8	ba000006	 blt         |$LN12@memdodump|

; 74   :                     tmp_str1[0]='A'+(unsigned char)m-10;                

  001bc	e59d307c	 ldr         r3, [sp, #0x7C]
  001c0	e20330ff	 and         r3, r3, #0xFF
  001c4	e2833041	 add         r3, r3, #0x41
  001c8	e243300a	 sub         r3, r3, #0xA
  001cc	e20330ff	 and         r3, r3, #0xFF
  001d0	e5cd3004	 strb        r3, [sp, #4]

; 75   :                 else                    

  001d4	ea000004	 b           |$LN11@memdodump|
  001d8		 |$LN12@memdodump|

; 76   :                     tmp_str1[0]=(unsigned char)m+'0';               

  001d8	e59d307c	 ldr         r3, [sp, #0x7C]
  001dc	e20330ff	 and         r3, r3, #0xFF
  001e0	e2833030	 add         r3, r3, #0x30
  001e4	e20330ff	 and         r3, r3, #0xFF
  001e8	e5cd3004	 strb        r3, [sp, #4]
  001ec		 |$LN11@memdodump|

; 77   :                 m=((unsigned int)((unsigned char)*(data+j)))%16 ;               

  001ec	e1dd37b6	 ldrh        r3, [sp, #0x76]
  001f0	e1a02003	 mov         r2, r3
  001f4	e59d3098	 ldr         r3, [sp, #0x98]
  001f8	e0833002	 add         r3, r3, r2
  001fc	e5d31000	 ldrb        r1, [r3]
  00200	e3a00010	 mov         r0, #0x10
  00204	eb000000	 bl          __rt_udiv
  00208	e58d107c	 str         r1, [sp, #0x7C]

; 78   :                 if (m>=10)                  

  0020c	e59d307c	 ldr         r3, [sp, #0x7C]
  00210	e353000a	 cmp         r3, #0xA
  00214	ba000006	 blt         |$LN10@memdodump|

; 79   :                     tmp_str1[1]='A'+(unsigned char)m-10;                

  00218	e59d307c	 ldr         r3, [sp, #0x7C]
  0021c	e20330ff	 and         r3, r3, #0xFF
  00220	e2833041	 add         r3, r3, #0x41
  00224	e243300a	 sub         r3, r3, #0xA
  00228	e20330ff	 and         r3, r3, #0xFF
  0022c	e5cd3005	 strb        r3, [sp, #5]

; 80   :                 else                    

  00230	ea000004	 b           |$LN9@memdodump|
  00234		 |$LN10@memdodump|

; 81   :                     tmp_str1[1]=(unsigned char)m+'0';               

  00234	e59d307c	 ldr         r3, [sp, #0x7C]
  00238	e20330ff	 and         r3, r3, #0xFF
  0023c	e2833030	 add         r3, r3, #0x30
  00240	e20330ff	 and         r3, r3, #0xFF
  00244	e5cd3005	 strb        r3, [sp, #5]
  00248		 |$LN9@memdodump|

; 82   :                 tmp_str1[2]='\0';               

  00248	e3a03000	 mov         r3, #0
  0024c	e5cd3006	 strb        r3, [sp, #6]

; 83   :                 strcat ((char *)tmp_str, (char *)tmp_str1);             

  00250	e28d1004	 add         r1, sp, #4
  00254	e28d0010	 add         r0, sp, #0x10
  00258	eb000000	 bl          strcat

; 84   :                 strcat ((char *)tmp_str, " ");            

  0025c	e59f11f8	 ldr         r1, [pc, #0x1F8]
  00260	e28d0010	 add         r0, sp, #0x10
  00264	eb000000	 bl          strcat

; 85   :             }            
; 86   :             else {                

  00268	ea000002	 b           |$LN8@memdodump|
  0026c		 |$LN13@memdodump|

; 87   :                 strcat((char *)tmp_str,"   ");            

  0026c	e59f11e4	 ldr         r1, [pc, #0x1E4]
  00270	e28d0010	 add         r0, sp, #0x10
  00274	eb000000	 bl          strcat
  00278		 |$LN8@memdodump|

; 88   :             }        
; 89   :         }        

  00278	eaffffb4	 b           |$LN15@memdodump|
  0027c		 |$LN14@memdodump|

; 90   :         strcat((char *)tmp_str, "  ");      

  0027c	e59f11d0	 ldr         r1, [pc, #0x1D0]
  00280	e28d0010	 add         r0, sp, #0x10
  00284	eb000000	 bl          strcat

; 91   :         l=(unsigned short)strlen((char *)tmp_str);        

  00288	e28d0010	 add         r0, sp, #0x10
  0028c	eb000000	 bl          strlen
  00290	e58d0088	 str         r0, [sp, #0x88]
  00294	e59d3088	 ldr         r3, [sp, #0x88]
  00298	e1a03803	 mov         r3, r3, lsl #16
  0029c	e1a03823	 mov         r3, r3, lsr #16
  002a0	e1cd37b4	 strh        r3, [sp, #0x74]

; 92   : 
; 93   :         /*         * Output the ASCII bytes        */        
; 94   :         for (j = i; j < (i+16); j++){            

  002a4	e1dd30b0	 ldrh        r3, [sp]
  002a8	e1cd37b6	 strh        r3, [sp, #0x76]
  002ac	ea000004	 b           |$LN7@memdodump|
  002b0		 |$LN6@memdodump|
  002b0	e1dd37b6	 ldrh        r3, [sp, #0x76]
  002b4	e2833001	 add         r3, r3, #1
  002b8	e1a03803	 mov         r3, r3, lsl #16
  002bc	e1a03823	 mov         r3, r3, lsr #16
  002c0	e1cd37b6	 strh        r3, [sp, #0x76]
  002c4		 |$LN7@memdodump|
  002c4	e1dd37b6	 ldrh        r3, [sp, #0x76]
  002c8	e1a02003	 mov         r2, r3
  002cc	e1dd30b0	 ldrh        r3, [sp]
  002d0	e2833010	 add         r3, r3, #0x10
  002d4	e1520003	 cmp         r2, r3
  002d8	aa00002d	 bge         |$LN5@memdodump|

; 95   :             if (j < num_bytes){

  002dc	e1dd37b6	 ldrh        r3, [sp, #0x76]
  002e0	e1a02003	 mov         r2, r3
  002e4	e1dd39bc	 ldrh        r3, [sp, #0x9C]
  002e8	e1520003	 cmp         r2, r3
  002ec	aa00001c	 bge         |$LN4@memdodump|

; 96   :                 char c = *(data+j);                

  002f0	e1dd37b6	 ldrh        r3, [sp, #0x76]
  002f4	e1a02003	 mov         r2, r3
  002f8	e59d3098	 ldr         r3, [sp, #0x98]
  002fc	e0833002	 add         r3, r3, r2
  00300	e5d33000	 ldrb        r3, [r3]
  00304	e1a03c03	 mov         r3, r3, lsl #24
  00308	e1a03c43	 mov         r3, r3, asr #24
  0030c	e5cd3080	 strb        r3, [sp, #0x80]

; 97   :                 if (c < ' ' || c > 'z') 

  00310	e1dd38d0	 ldrsb       r3, [sp, #0x80]
  00314	e3530020	 cmp         r3, #0x20
  00318	ba000002	 blt         |$LN2@memdodump|
  0031c	e1dd38d0	 ldrsb       r3, [sp, #0x80]
  00320	e353007a	 cmp         r3, #0x7A
  00324	da000001	 ble         |$LN3@memdodump|
  00328		 |$LN2@memdodump|

; 98   :                     c = '.';                

  00328	e3a0302e	 mov         r3, #0x2E
  0032c	e5cd3080	 strb        r3, [sp, #0x80]
  00330		 |$LN3@memdodump|

; 99   :                 tmp_str[l++]=c;            

  00330	e1dd38d0	 ldrsb       r3, [sp, #0x80]
  00334	e20310ff	 and         r1, r3, #0xFF
  00338	e1dd37b4	 ldrh        r3, [sp, #0x74]
  0033c	e1a02003	 mov         r2, r3
  00340	e28d3010	 add         r3, sp, #0x10
  00344	e0833002	 add         r3, r3, r2
  00348	e5c31000	 strb        r1, [r3]
  0034c	e1dd37b4	 ldrh        r3, [sp, #0x74]
  00350	e2833001	 add         r3, r3, #1
  00354	e1a03803	 mov         r3, r3, lsl #16
  00358	e1a03823	 mov         r3, r3, lsr #16
  0035c	e1cd37b4	 strh        r3, [sp, #0x74]

; 100  :             }            
; 101  :             else            

  00360	ea00000a	 b           |$LN1@memdodump|
  00364		 |$LN4@memdodump|

; 102  :                 tmp_str[l++]=' ';

  00364	e1dd37b4	 ldrh        r3, [sp, #0x74]
  00368	e1a02003	 mov         r2, r3
  0036c	e28d3010	 add         r3, sp, #0x10
  00370	e0832002	 add         r2, r3, r2
  00374	e3a03020	 mov         r3, #0x20
  00378	e5c23000	 strb        r3, [r2]
  0037c	e1dd37b4	 ldrh        r3, [sp, #0x74]
  00380	e2833001	 add         r3, r3, #1
  00384	e1a03803	 mov         r3, r3, lsl #16
  00388	e1a03823	 mov         r3, r3, lsr #16
  0038c	e1cd37b4	 strh        r3, [sp, #0x74]
  00390		 |$LN1@memdodump|

; 103  :         }       

  00390	eaffffc6	 b           |$LN6@memdodump|
  00394		 |$LN5@memdodump|

; 104  :         tmp_str[l++]='\r';        tmp_str[l++]='\n';        tmp_str[l++]='\0';     

  00394	e1dd37b4	 ldrh        r3, [sp, #0x74]
  00398	e1a02003	 mov         r2, r3
  0039c	e28d3010	 add         r3, sp, #0x10
  003a0	e0832002	 add         r2, r3, r2
  003a4	e3a0300d	 mov         r3, #0xD
  003a8	e5c23000	 strb        r3, [r2]
  003ac	e1dd37b4	 ldrh        r3, [sp, #0x74]
  003b0	e2833001	 add         r3, r3, #1
  003b4	e1a03803	 mov         r3, r3, lsl #16
  003b8	e1a03823	 mov         r3, r3, lsr #16
  003bc	e1cd37b4	 strh        r3, [sp, #0x74]
  003c0	e1dd37b4	 ldrh        r3, [sp, #0x74]
  003c4	e1a02003	 mov         r2, r3
  003c8	e28d3010	 add         r3, sp, #0x10
  003cc	e0832002	 add         r2, r3, r2
  003d0	e3a0300a	 mov         r3, #0xA
  003d4	e5c23000	 strb        r3, [r2]
  003d8	e1dd37b4	 ldrh        r3, [sp, #0x74]
  003dc	e2833001	 add         r3, r3, #1
  003e0	e1a03803	 mov         r3, r3, lsl #16
  003e4	e1a03823	 mov         r3, r3, lsr #16
  003e8	e1cd37b4	 strh        r3, [sp, #0x74]
  003ec	e1dd37b4	 ldrh        r3, [sp, #0x74]
  003f0	e1a02003	 mov         r2, r3
  003f4	e28d3010	 add         r3, sp, #0x10
  003f8	e0832002	 add         r2, r3, r2
  003fc	e3a03000	 mov         r3, #0
  00400	e5c23000	 strb        r3, [r2]
  00404	e1dd37b4	 ldrh        r3, [sp, #0x74]
  00408	e2833001	 add         r3, r3, #1
  0040c	e1a03803	 mov         r3, r3, lsl #16
  00410	e1a03823	 mov         r3, r3, lsr #16
  00414	e1cd37b4	 strh        r3, [sp, #0x74]

; 105  :         RETAILMSG(1, (L"%S", tmp_str));    

  00418	e28d1010	 add         r1, sp, #0x10
  0041c	e59f002c	 ldr         r0, [pc, #0x2C]
  00420	eb000000	 bl          NKDbgPrintfW
  00424	e3a03001	 mov         r3, #1
  00428	e58d308c	 str         r3, [sp, #0x8C]
  0042c	ea000001	 b           |$LN28@memdodump|
  00430	e3a03000	 mov         r3, #0
  00434	e58d308c	 str         r3, [sp, #0x8C]
  00438		 |$LN28@memdodump|

; 106  :     }

  00438	eafffefc	 b           |$LN23@memdodump|
  0043c		 |$LN22@memdodump|

; 50   : {    

  0043c	e59d0084	 ldr         r0, [sp, #0x84]
  00440	eb000000	 bl          __security_check_cookie

; 107  : }

  00444	e28dd090	 add         sp, sp, #0x90
  00448	e89d6000	 ldmia       sp, {sp, lr}
  0044c	e12fff1e	 bx          lr
  00450		 |$LN32@memdodump|
  00450		 |$LN33@memdodump|
  00450	00000000	 DCD         |??_C@_15MAOEGKJF@?$AA?$CF?$AAS?$AA?$AA@|
  00454		 |$LN34@memdodump|
  00454	00000000	 DCD         |??_C@_02KNHHEEKP@?5?5?$AA@|
  00458		 |$LN35@memdodump|
  00458	00000000	 DCD         |??_C@_03NDEAONJP@?5?5?5?$AA@|
  0045c		 |$LN36@memdodump|
  0045c	00000000	 DCD         |??_C@_01CLKCMJKC@?5?$AA@|
  00460		 |$LN37@memdodump|
  00460	00000000	 DCD         |??_C@_02LMMGGCAJ@?3?5?$AA@|
  00464		 |$LN38@memdodump|
  00464	00000000	 DCD         |__security_cookie|
  00468		 |$M37176|

			 ENDP  ; |memdodump|

	EXPORT	|??_7CTransfer@@6B@| [ DATA ]		; CTransfer::`vftable'
	EXPORT	|??0CTransfer@@QAA@QAVCPipe@@QAVCPhysMem@@USTRANSFER@@@Z| ; CTransfer::CTransfer
	EXPORT	|?Init@CTransfer@@UAAHXZ|		; CTransfer::Init
	IMPORT	|memcpy|
	IMPORT	|memcpy|
	IMPORT	|??_ECTransfer@@UAAPAXI@Z|, WEAK |??_GCTransfer@@UAAPAXI@Z| ; CTransfer::`vector deleting destructor', CTransfer::`scalar deleting destructor'
	IMPORT	|_purecall|

  00008			 AREA	 |.pdata|, PDATA
|$T37192| DCD	|$LN5@CTransfer|
	DCD	0x40003f04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CTransfer@@6B@| DCD |??_ECTransfer@@UAAPAXI@Z|	; CTransfer::`vftable'
	DCD	|?Init@CTransfer@@UAAHXZ|
	DCD	|_purecall|
; Function compile flags: /Odtp

  00468			 AREA	 |.text|, CODE, ARM

  00468		 |??0CTransfer@@QAA@QAVCPipe@@QAVCPhysMem@@USTRANSFER@@@Z| PROC ; CTransfer::CTransfer

; 122  : {

  00468		 |$LN5@CTransfer|
  00468	e1a0c00d	 mov         r12, sp
  0046c	e92d000f	 stmdb       sp!, {r0 - r3}
  00470	e92d5000	 stmdb       sp!, {r12, lr}
  00474	e24dd004	 sub         sp, sp, #4
  00478		 |$M37189|
  00478	e59f20e0	 ldr         r2, [pc, #0xE0]
  0047c	e59d300c	 ldr         r3, [sp, #0xC]
  00480	e5832000	 str         r2, [r3]
  00484	e59d300c	 ldr         r3, [sp, #0xC]
  00488	e2832004	 add         r2, r3, #4
  0048c	e59d3010	 ldr         r3, [sp, #0x10]
  00490	e5823000	 str         r3, [r2]
  00494	e59d300c	 ldr         r3, [sp, #0xC]
  00498	e2832008	 add         r2, r3, #8
  0049c	e59d3014	 ldr         r3, [sp, #0x14]
  004a0	e5823000	 str         r3, [r2]
  004a4	e59d300c	 ldr         r3, [sp, #0xC]
  004a8	e283001c	 add         r0, r3, #0x1C
  004ac	e28d1018	 add         r1, sp, #0x18
  004b0	e3a02040	 mov         r2, #0x40
  004b4	eb000000	 bl          memcpy

; 123  :     m_pNextTransfer=NULL;

  004b8	e59d300c	 ldr         r3, [sp, #0xC]
  004bc	e283200c	 add         r2, r3, #0xC
  004c0	e3a03000	 mov         r3, #0
  004c4	e5823000	 str         r3, [r2]

; 124  :     m_paControlHeader=0;

  004c8	e59d300c	 ldr         r3, [sp, #0xC]
  004cc	e2832018	 add         r2, r3, #0x18
  004d0	e3a03000	 mov         r3, #0
  004d4	e5823000	 str         r3, [r2]

; 125  :     m_pAllocatedForControl=NULL;

  004d8	e59d300c	 ldr         r3, [sp, #0xC]
  004dc	e2832010	 add         r2, r3, #0x10
  004e0	e3a03000	 mov         r3, #0
  004e4	e5823000	 str         r3, [r2]

; 126  :     m_pAllocatedForClient=NULL;

  004e8	e59d300c	 ldr         r3, [sp, #0xC]
  004ec	e2832014	 add         r2, r3, #0x14
  004f0	e3a03000	 mov         r3, #0
  004f4	e5823000	 str         r3, [r2]

; 127  :     memcpy(&m_sTransfer, &sTransfer,sizeof(STransfer));

  004f8	e3a02040	 mov         r2, #0x40
  004fc	e28d1018	 add         r1, sp, #0x18
  00500	e59d300c	 ldr         r3, [sp, #0xC]
  00504	e283001c	 add         r0, r3, #0x1C
  00508	eb000000	 bl          memcpy

; 128  :     m_DataTransferred =0 ;

  0050c	e59d300c	 ldr         r3, [sp, #0xC]
  00510	e283205c	 add         r2, r3, #0x5C
  00514	e3a03000	 mov         r3, #0
  00518	e5823000	 str         r3, [r2]

; 129  :     m_dwTransferID = m_dwGlobalTransferID++;

  0051c	e59d300c	 ldr         r3, [sp, #0xC]
  00520	e2832064	 add         r2, r3, #0x64
  00524	e59f3030	 ldr         r3, [pc, #0x30]
  00528	e5933000	 ldr         r3, [r3]
  0052c	e5823000	 str         r3, [r2]
  00530	e59f3024	 ldr         r3, [pc, #0x24]
  00534	e5933000	 ldr         r3, [r3]
  00538	e2832001	 add         r2, r3, #1
  0053c	e59f3018	 ldr         r3, [pc, #0x18]
  00540	e5832000	 str         r2, [r3]

; 130  : }

  00544	e59d300c	 ldr         r3, [sp, #0xC]
  00548	e58d3000	 str         r3, [sp]
  0054c	e59d0000	 ldr         r0, [sp]
  00550	e28dd004	 add         sp, sp, #4
  00554	e89d6000	 ldmia       sp, {sp, lr}
  00558	e12fff1e	 bx          lr
  0055c		 |$LN6@CTransfer|
  0055c		 |$LN7@CTransfer|
  0055c	00000000	 DCD         |?m_dwGlobalTransferID@CTransfer@@1KA|
  00560		 |$LN8@CTransfer|
  00560	00000000	 DCD         |??_7CTransfer@@6B@|
  00564		 |$M37190|

			 ENDP  ; |??0CTransfer@@QAA@QAVCPipe@@QAVCPhysMem@@USTRANSFER@@@Z|, CTransfer::CTransfer

	EXPORT	|??1CTransfer@@UAA@XZ|			; CTransfer::~CTransfer
	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T37201| DCD	|$LN6@scalar|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCTransfer@@UAAPAXI@Z| PROC	; CTransfer::`scalar deleting destructor'
  00000		 |$LN6@scalar|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37198|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1CTransfer@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M37199|

			 ENDP  ; |??_GCTransfer@@UAAPAXI@Z|, CTransfer::`scalar deleting destructor'

	EXPORT	|??_C@_1LK@NOKJIPGM@?$AAC?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AA?$HO?$AAC?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs?$AA?$DN?$AA0?$AAx@| [ DATA ] ; `string'
	IMPORT	|dpCurSettings|
	IMPORT	|?FreeMemory@CPhysMem@@QAAXQAEKK@Z|	; CPhysMem::FreeMemory

  00010			 AREA	 |.pdata|, PDATA
|$T37210| DCD	|$LN9@CTransfer@2|
	DCD	0x40004304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LK@NOKJIPGM@?$AAC?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AA?$HO?$AAC?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs?$AA?$DN?$AA0?$AAx@| DCB "C"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":", 0x0, "~", 0x0, "C"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "("
	DCB	0x0, "t", 0x0, "h", 0x0, "i", 0x0, "s", 0x0, "=", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ",", 0x0, "m", 0x0, "_"
	DCB	0x0, "p", 0x0, "A", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "F", 0x0, "o"
	DCB	0x0, "r", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ",", 0x0, "m", 0x0, "_", 0x0, "p", 0x0, "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "d", 0x0, "F", 0x0, "o", 0x0, "r", 0x0, "C"
	DCB	0x0, "l", 0x0, "i", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "="
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  00564			 AREA	 |.text|, CODE, ARM

  00564		 |??1CTransfer@@UAA@XZ| PROC		; CTransfer::~CTransfer

; 138  : {    

  00564		 |$LN9@CTransfer@2|
  00564	e1a0c00d	 mov         r12, sp
  00568	e92d0001	 stmdb       sp!, {r0}
  0056c	e92d5000	 stmdb       sp!, {r12, lr}
  00570	e24dd004	 sub         sp, sp, #4
  00574		 |$M37207|
  00574	e59f20f0	 ldr         r2, [pc, #0xF0]
  00578	e59d300c	 ldr         r3, [sp, #0xC]
  0057c	e5832000	 str         r2, [r3]

; 139  :     if (m_pAllocatedForControl!=NULL) 

  00580	e59d300c	 ldr         r3, [sp, #0xC]
  00584	e2833010	 add         r3, r3, #0x10
  00588	e5933000	 ldr         r3, [r3]
  0058c	e3530000	 cmp         r3, #0
  00590	0a00000a	 beq         |$LN2@CTransfer@2|

; 140  :         m_pCPhysMem->FreeMemory( PUCHAR(m_pAllocatedForControl),m_paControlHeader,  CPHYSMEM_FLAG_NOBLOCK );

  00594	e3a03002	 mov         r3, #2
  00598	e59d200c	 ldr         r2, [sp, #0xC]
  0059c	e2822018	 add         r2, r2, #0x18
  005a0	e5922000	 ldr         r2, [r2]
  005a4	e59d100c	 ldr         r1, [sp, #0xC]
  005a8	e2811010	 add         r1, r1, #0x10
  005ac	e5911000	 ldr         r1, [r1]
  005b0	e59d000c	 ldr         r0, [sp, #0xC]
  005b4	e2800008	 add         r0, r0, #8
  005b8	e5900000	 ldr         r0, [r0]
  005bc	eb000000	 bl          |?FreeMemory@CPhysMem@@QAAXQAEKK@Z|
  005c0		 |$LN2@CTransfer@2|

; 141  :     if (m_pAllocatedForClient!=NULL)

  005c0	e59d300c	 ldr         r3, [sp, #0xC]
  005c4	e2833014	 add         r3, r3, #0x14
  005c8	e5933000	 ldr         r3, [r3]
  005cc	e3530000	 cmp         r3, #0
  005d0	0a00000a	 beq         |$LN1@CTransfer@2|

; 142  :         m_pCPhysMem->FreeMemory( PUCHAR(m_pAllocatedForClient), m_sTransfer.paBuffer,  CPHYSMEM_FLAG_NOBLOCK );

  005d4	e3a03002	 mov         r3, #2
  005d8	e59d200c	 ldr         r2, [sp, #0xC]
  005dc	e2822040	 add         r2, r2, #0x40
  005e0	e5922000	 ldr         r2, [r2]
  005e4	e59d100c	 ldr         r1, [sp, #0xC]
  005e8	e2811014	 add         r1, r1, #0x14
  005ec	e5911000	 ldr         r1, [r1]
  005f0	e59d000c	 ldr         r0, [sp, #0xC]
  005f4	e2800008	 add         r0, r0, #8
  005f8	e5900000	 ldr         r0, [r0]
  005fc	eb000000	 bl          |?FreeMemory@CPhysMem@@QAAXQAEKK@Z|
  00600		 |$LN1@CTransfer@2|

; 143  :     DEBUGMSG( ZONE_TRANSFER && ZONE_VERBOSE , (TEXT("CTransfer::~CTransfer() (this=0x%x,m_pAllocatedForControl=0x%x,m_pAllocatedForClient=0x%x)\r\n"),
; 144  :         this,m_pAllocatedForControl,m_pAllocatedForClient));

  00600	e59f3060	 ldr         r3, [pc, #0x60]
  00604	e5933440	 ldr         r3, [r3, #0x440]
  00608	e3130c01	 tst         r3, #1, 24
  0060c	0a00000f	 beq         |$LN5@CTransfer@2|
  00610	e59f3050	 ldr         r3, [pc, #0x50]
  00614	e5933440	 ldr         r3, [r3, #0x440]
  00618	e3130a01	 tst         r3, #1, 20
  0061c	0a00000b	 beq         |$LN5@CTransfer@2|
  00620	e59d300c	 ldr         r3, [sp, #0xC]
  00624	e2833014	 add         r3, r3, #0x14
  00628	e5933000	 ldr         r3, [r3]
  0062c	e59d200c	 ldr         r2, [sp, #0xC]
  00630	e2822010	 add         r2, r2, #0x10
  00634	e5922000	 ldr         r2, [r2]
  00638	e59d100c	 ldr         r1, [sp, #0xC]
  0063c	e59f0020	 ldr         r0, [pc, #0x20]
  00640	eb000000	 bl          NKDbgPrintfW
  00644	e3a03001	 mov         r3, #1
  00648	e58d3000	 str         r3, [sp]
  0064c	ea000001	 b           |$LN6@CTransfer@2|
  00650		 |$LN5@CTransfer@2|
  00650	e3a03000	 mov         r3, #0
  00654	e58d3000	 str         r3, [sp]
  00658		 |$LN6@CTransfer@2|

; 145  : 
; 146  : }

  00658	e28dd004	 add         sp, sp, #4
  0065c	e89d6000	 ldmia       sp, {sp, lr}
  00660	e12fff1e	 bx          lr
  00664		 |$LN10@CTransfer@2|
  00664		 |$LN11@CTransfer@2|
  00664	00000000	 DCD         |??_C@_1LK@NOKJIPGM@?$AAC?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AA?$HO?$AAC?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs?$AA?$DN?$AA0?$AAx@|
  00668		 |$LN12@CTransfer@2|
  00668	00000000	 DCD         |dpCurSettings|
  0066c		 |$LN13@CTransfer@2|
  0066c	00000000	 DCD         |??_7CTransfer@@6B@|
  00670		 |$M37208|

			 ENDP  ; |??1CTransfer@@UAA@XZ|, CTransfer::~CTransfer

	EXPORT	|??_C@_1LM@CLNPCLAL@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AAi?$AAd?$AA?$DN?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@MKAIJBKB@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAO?$AAU?$AAT?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@DEJENGNL@?$AAC?$AAP?$AAi?$AAp?$AAe?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AAn?$AAo?$AA?5?$AAm?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@EEDMLIDO@?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LK@IFLKDCCK@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|?VaToPa@CPhysMem@@QAAKPAE@Z|		; CPhysMem::VaToPa
	EXPORT	|??_C@_1GO@EEFDOHBH@?$AAC?$AAP?$AAi?$AAp?$AAe?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AAn?$AAo?$AA?5?$AAm?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@OIBCBHKK@?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAS?$AAE?$AAT?$AAU?$AAP?$AA?5?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@KFFIANIM@?$AAC?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AAi?$AAd?$AA?$DN?$AA0?$AAx@| [ DATA ] ; `string'
	IMPORT	|?AllocateMemory@CPhysMem@@QAAHPBGKQAPAEKPAH@Z| ; CPhysMem::AllocateMemory
	IMPORT	|__C_specific_handler|

  00018			 AREA	 |.pdata|, PDATA
|$T37264| DCD	|$LN48@Init|
	DCD	0xc0014805
|$T37266| DCD	|$LN37@Init|
	DCD	0x40000502
|$T37268| DCD	|$LN30@Init|
	DCD	0x40000f02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LM@CLNPCLAL@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AAi?$AAd?$AA?$DN?$AA0@| DCB "C"
	DCB	0x0, "Q", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "(", 0x0, "t"
	DCB	0x0, "h", 0x0, "i", 0x0, "s", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, ",", 0x0, "i", 0x0, "d", 0x0, "="
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, ","
	DCB	0x0, "m", 0x0, "_", 0x0, "p", 0x0, "A", 0x0, "l", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "d"
	DCB	0x0, "F", 0x0, "o", 0x0, "r", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "=", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ",", 0x0, "m", 0x0, "_"
	DCB	0x0, "p", 0x0, "A", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "F", 0x0, "o"
	DCB	0x0, "r", 0x0, "C", 0x0, "l", 0x0, "i", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@MKAIJBKB@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAO?$AAU?$AAT?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "O", 0x0, "U"
	DCB	0x0, "T", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@DEJENGNL@?$AAC?$AAP?$AAi?$AAp?$AAe?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AAn?$AAo?$AA?5?$AAm?$AAe@| DCB "C"
	DCB	0x0, "P", 0x0, "i", 0x0, "p", 0x0, "e", 0x0, "(", 0x0, "%"
	DCB	0x0, "s", 0x0, ")", 0x0, ":", 0x0, ":", 0x0, "I", 0x0, "s"
	DCB	0x0, "s", 0x0, "u", 0x0, "e", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, " ", 0x0, "m"
	DCB	0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "T", 0x0, "D"
	DCB	0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@EEDMLIDO@?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@| DCB "I"
	DCB	0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "E", 0x0, "B"
	DCB	0x0, "U", 0x0, "G", 0x0, "C", 0x0, "H", 0x0, "K", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, "t", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LK@IFLKDCCK@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "C"
	DCB	0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N", 0x0, "_"
	DCB	0x0, "T", 0x0, "I", 0x0, "_", 0x0, "V", 0x0, "1", 0x0, "\\"
	DCB	0x0, "O", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, "3", 0x0, "5"
	DCB	0x0, "3", 0x0, "0", 0x0, "\\", 0x0, "M", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "\\", 0x0, "M", 0x0, "U", 0x0, "S", 0x0, "B"
	DCB	0x0, "H", 0x0, "C", 0x0, "D", 0x0, "\\", 0x0, "M", 0x0, "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "M", 0x0, "H", 0x0, "D", 0x0, "R"
	DCB	0x0, "C", 0x0, "\\", 0x0, ".", 0x0, "\\", 0x0, "t", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, ".", 0x0, "c", 0x0, "p"
	DCB	0x0, "p", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@EEFDOHBH@?$AAC?$AAP?$AAi?$AAp?$AAe?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AAn?$AAo?$AA?5?$AAm?$AAe@| DCB "C"
	DCB	0x0, "P", 0x0, "i", 0x0, "p", 0x0, "e", 0x0, "(", 0x0, "%"
	DCB	0x0, "s", 0x0, ")", 0x0, ":", 0x0, ":", 0x0, "I", 0x0, "s"
	DCB	0x0, "s", 0x0, "u", 0x0, "e", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, " ", 0x0, "m"
	DCB	0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "S", 0x0, "E"
	DCB	0x0, "T", 0x0, "U", 0x0, "P", 0x0, " ", 0x0, "b", 0x0, "u"
	DCB	0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@OIBCBHKK@?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAS?$AAE?$AAT?$AAU?$AAP?$AA?5?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@| DCB "I"
	DCB	0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "S", 0x0, "E", 0x0, "T", 0x0, "U", 0x0, "P"
	DCB	0x0, " ", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@KFFIANIM@?$AAC?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AAi?$AAd?$AA?$DN?$AA0?$AAx@| DCB "C"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, " ", 0x0, "(", 0x0, "t", 0x0, "h"
	DCB	0x0, "i", 0x0, "s", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ",", 0x0, "i", 0x0, "d", 0x0, "=", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00004			 AREA	 |.xdata|, DATA
|$T37262| DCD	0x2
	DCD	|$LN41@Init|
	DCD	|$LN42@Init|
	DCD	|$LN37@Init|
	DCD	|$LN38@Init|
	DCD	|$LN34@Init|
	DCD	|$LN35@Init|
	DCD	|$LN30@Init|
	DCD	|$LN31@Init|
; Function compile flags: /Odtp

  00670			 AREA	 |.text|, CODE, ARM

  00670	00000000	 DCD         |__C_specific_handler|
  00674	00000000	 DCD         |$T37262|

  00678		 |?Init@CTransfer@@UAAHXZ| PROC		; CTransfer::Init

; 158  : {

  00678		 |$LN48@Init|
  00678	e1a0c00d	 mov         r12, sp
  0067c	e92d0001	 stmdb       sp!, {r0}
  00680	e92d5800	 stmdb       sp!, {r11, r12, lr}
  00684	e28db00c	 add         r11, sp, #0xC
  00688	e24dd068	 sub         sp, sp, #0x68
  0068c		 |$LN46@Init|

; 159  :     DEBUGMSG( ZONE_TRANSFER && ZONE_VERBOSE, (TEXT("CTransfer::Init (this=0x%x,id=0x%x)\r\n"),this,m_dwTransferID));    

  0068c	e59f3530	 ldr         r3, [pc, #0x530]
  00690	e5933440	 ldr         r3, [r3, #0x440]
  00694	e3130c01	 tst         r3, #1, 24
  00698	0a00000c	 beq         |$LN11@Init|
  0069c	e59f3520	 ldr         r3, [pc, #0x520]
  006a0	e5933440	 ldr         r3, [r3, #0x440]
  006a4	e3130a01	 tst         r3, #1, 20
  006a8	0a000008	 beq         |$LN11@Init|
  006ac	e59b3000	 ldr         r3, [r11]
  006b0	e2833064	 add         r3, r3, #0x64
  006b4	e5932000	 ldr         r2, [r3]
  006b8	e59b1000	 ldr         r1, [r11]
  006bc	e59f0520	 ldr         r0, [pc, #0x520]
  006c0	eb000000	 bl          NKDbgPrintfW
  006c4	e3a03001	 mov         r3, #1
  006c8	e50b304c	 str         r3, [r11, #-0x4C]
  006cc	ea000001	 b           |$LN12@Init|
  006d0		 |$LN11@Init|
  006d0	e3a03000	 mov         r3, #0
  006d4	e50b304c	 str         r3, [r11, #-0x4C]
  006d8		 |$LN12@Init|

; 160  :     // We must allocate the control header memory here so that cleanup works later.
; 161  :     if (m_sTransfer.lpvControlHeader != NULL &&  m_pAllocatedForControl == NULL ) {

  006d8	e59b3000	 ldr         r3, [r11]
  006dc	e2833028	 add         r3, r3, #0x28
  006e0	e5933000	 ldr         r3, [r3]
  006e4	e3530000	 cmp         r3, #0
  006e8	0a000063	 beq         |$LN8@Init|
  006ec	e59b3000	 ldr         r3, [r11]
  006f0	e2833010	 add         r3, r3, #0x10
  006f4	e5933000	 ldr         r3, [r3]
  006f8	e3530000	 cmp         r3, #0
  006fc	1a00005e	 bne         |$LN8@Init|

; 162  :         // This must be a control transfer. It is asserted elsewhere,
; 163  :         // but the worst case is we needlessly allocate some physmem.
; 164  :         if ( !m_pCPhysMem->AllocateMemory(
; 165  :                                    DEBUG_PARAM( TEXT("IssueTransfer SETUP Buffer") )
; 166  :                                    sizeof(USB_DEVICE_REQUEST),
; 167  :                                    &m_pAllocatedForControl,
; 168  :                                    CPHYSMEM_FLAG_NOBLOCK ) ) {

  00700	e3a03000	 mov         r3, #0
  00704	e58d3004	 str         r3, [sp, #4]
  00708	e3a03002	 mov         r3, #2
  0070c	e58d3000	 str         r3, [sp]
  00710	e59b3000	 ldr         r3, [r11]
  00714	e2833010	 add         r3, r3, #0x10
  00718	e3a02008	 mov         r2, #8
  0071c	e59f14bc	 ldr         r1, [pc, #0x4BC]
  00720	e59b0000	 ldr         r0, [r11]
  00724	e2800008	 add         r0, r0, #8
  00728	e5900000	 ldr         r0, [r0]
  0072c	eb000000	 bl          |?AllocateMemory@CPhysMem@@QAAHPBGKQAPAEKPAH@Z|
  00730	e50b0048	 str         r0, [r11, #-0x48]
  00734	e51b3048	 ldr         r3, [r11, #-0x48]
  00738	e3530000	 cmp         r3, #0
  0073c	1a00001e	 bne         |$LN7@Init|

; 169  :             DEBUGMSG( ZONE_WARNING, (TEXT("CPipe(%s)::IssueTransfer - no memory for SETUP buffer\n"), m_pCPipe->GetPipeType() ) );

  00740	e59f347c	 ldr         r3, [pc, #0x47C]
  00744	e5933440	 ldr         r3, [r3, #0x440]
  00748	e3130a02	 tst         r3, #2, 20
  0074c	0a000011	 beq         |$LN13@Init|
  00750	e59b3000	 ldr         r3, [r11]
  00754	e2833004	 add         r3, r3, #4
  00758	e5932000	 ldr         r2, [r3]
  0075c	e59b3000	 ldr         r3, [r11]
  00760	e2833004	 add         r3, r3, #4
  00764	e5930000	 ldr         r0, [r3]
  00768	e5923000	 ldr         r3, [r2]
  0076c	e2833040	 add         r3, r3, #0x40
  00770	e5933000	 ldr         r3, [r3]
  00774	e1a0e00f	 mov         lr, pc
  00778	e12fff13	 bx          r3
  0077c	e50b0044	 str         r0, [r11, #-0x44]
  00780	e51b1044	 ldr         r1, [r11, #-0x44]
  00784	e59f0450	 ldr         r0, [pc, #0x450]
  00788	eb000000	 bl          NKDbgPrintfW
  0078c	e3a03001	 mov         r3, #1
  00790	e50b3040	 str         r3, [r11, #-0x40]
  00794	ea000001	 b           |$LN14@Init|
  00798		 |$LN13@Init|
  00798	e3a03000	 mov         r3, #0
  0079c	e50b3040	 str         r3, [r11, #-0x40]
  007a0		 |$LN14@Init|

; 170  :             m_pAllocatedForControl=NULL;

  007a0	e59b3000	 ldr         r3, [r11]
  007a4	e2832010	 add         r2, r3, #0x10
  007a8	e3a03000	 mov         r3, #0
  007ac	e5823000	 str         r3, [r2]

; 171  :             return FALSE;

  007b0	e3a03000	 mov         r3, #0
  007b4	e50b305c	 str         r3, [r11, #-0x5C]
  007b8	ea0000f2	 b           |$LN9@Init|
  007bc		 |$LN7@Init|

; 172  :         }
; 173  :         m_paControlHeader = m_pCPhysMem->VaToPa( m_pAllocatedForControl );

  007bc	e59b3000	 ldr         r3, [r11]
  007c0	e2833010	 add         r3, r3, #0x10
  007c4	e5931000	 ldr         r1, [r3]
  007c8	e59b3000	 ldr         r3, [r11]
  007cc	e2833008	 add         r3, r3, #8
  007d0	e5930000	 ldr         r0, [r3]
  007d4	eb000000	 bl          |?VaToPa@CPhysMem@@QAAKPAE@Z|
  007d8	e50b003c	 str         r0, [r11, #-0x3C]
  007dc	e59b3000	 ldr         r3, [r11]
  007e0	e2832018	 add         r2, r3, #0x18
  007e4	e51b303c	 ldr         r3, [r11, #-0x3C]
  007e8	e5823000	 str         r3, [r2]

; 174  :         DEBUGCHK( m_pAllocatedForControl != NULL && m_paControlHeader != 0 );

  007ec	e59b3000	 ldr         r3, [r11]
  007f0	e2833010	 add         r3, r3, #0x10
  007f4	e5933000	 ldr         r3, [r3]
  007f8	e3530000	 cmp         r3, #0
  007fc	0a000007	 beq         |$LN15@Init|
  00800	e59b3000	 ldr         r3, [r11]
  00804	e2833018	 add         r3, r3, #0x18
  00808	e5933000	 ldr         r3, [r3]
  0080c	e3530000	 cmp         r3, #0
  00810	0a000002	 beq         |$LN15@Init|
  00814	e3a03001	 mov         r3, #1
  00818	e50b3038	 str         r3, [r11, #-0x38]
  0081c	ea000007	 b           |$LN16@Init|
  00820		 |$LN15@Init|
  00820	e3a030ae	 mov         r3, #0xAE
  00824	e59f23a4	 ldr         r2, [pc, #0x3A4]
  00828	e59f1394	 ldr         r1, [pc, #0x394]
  0082c	e59f0398	 ldr         r0, [pc, #0x398]
  00830	eb000000	 bl          NKDbgPrintfW
  00834	e6000010	 __debugbreak_ce
  00838	e3a03000	 mov         r3, #0
  0083c	e50b3038	 str         r3, [r11, #-0x38]
  00840		 |$LN16@Init|
  00840		 |$LN34@Init|

; 175  : 
; 176  :         __try {
; 177  :             memcpy(m_pAllocatedForControl,m_sTransfer.lpvControlHeader,sizeof(USB_DEVICE_REQUEST));

  00840	e3a02008	 mov         r2, #8
  00844	e59b3000	 ldr         r3, [r11]
  00848	e2833028	 add         r3, r3, #0x28
  0084c	e5931000	 ldr         r1, [r3]
  00850	e59b3000	 ldr         r3, [r11]
  00854	e2833010	 add         r3, r3, #0x10
  00858	e5930000	 ldr         r0, [r3]
  0085c	eb000000	 bl          memcpy
  00860		 |$LN35@Init|
  00860	ea000005	 b           |$LN36@Init|
  00864		 |$LN31@Init|

; 179  :             // bad lpvControlHeader
; 180  :             return FALSE;

  00864	e3a03000	 mov         r3, #0
  00868	e50b306c	 str         r3, [r11, #-0x6C]
  0086c	e51b306c	 ldr         r3, [r11, #-0x6C]
  00870	e50b305c	 str         r3, [r11, #-0x5C]
  00874	ea0000c3	 b           |$LN9@Init|
  00878	eaffffff	 b           |$LN36@Init|
  0087c		 |$LN36@Init|
  0087c		 |$LN8@Init|

; 181  :         }
; 182  :     }
; 183  : #if 0
; 184  : #ifdef DEBUG
; 185  :     if ( m_sTransfer.dwFlags & USB_IN_TRANSFER ) {
; 186  :         // I am leaving this in for two reasons:
; 187  :         //  1. The memset ought to work even on zero bytes to NULL.
; 188  :         //  2. Why would anyone really want to do a zero length IN?
; 189  :         DEBUGCHK( m_sTransfer.dwBufferSize > 0 &&
; 190  :                   m_sTransfer.lpvBuffer != NULL );
; 191  :         __try { // IN buffer, trash it
; 192  :             memset( PUCHAR( m_sTransfer.lpvBuffer ), GARBAGE, m_sTransfer.dwBufferSize );
; 193  :         } __except( EXCEPTION_EXECUTE_HANDLER ) {
; 194  :         }
; 195  :     }
; 196  : #endif // DEBUG
; 197  : #endif
; 198  : 
; 199  :     if ( m_sTransfer.dwBufferSize > 0 && m_sTransfer.paBuffer == 0 ) { 

  0087c	e59b3000	 ldr         r3, [r11]
  00880	e2833038	 add         r3, r3, #0x38
  00884	e5933000	 ldr         r3, [r3]
  00888	e3530000	 cmp         r3, #0
  0088c	9a000099	 bls         |$LN5@Init|
  00890	e59b3000	 ldr         r3, [r11]
  00894	e2833040	 add         r3, r3, #0x40
  00898	e5933000	 ldr         r3, [r3]
  0089c	e3530000	 cmp         r3, #0
  008a0	1a000094	 bne         |$LN5@Init|

; 200  : 
; 201  :         // ok, there's data on this transfer and the client
; 202  :         // did not specify a physical address for the
; 203  :         // buffer. So, we need to allocate our own.
; 204  : 
; 205  :         if ( !m_pCPhysMem->AllocateMemory(
; 206  :                                    DEBUG_PARAM( TEXT("IssueTransfer Buffer") )
; 207  :                                    m_sTransfer.dwBufferSize,
; 208  :                                    &m_pAllocatedForClient, 
; 209  :                                    CPHYSMEM_FLAG_NOBLOCK ) ) {

  008a4	e3a03000	 mov         r3, #0
  008a8	e58d3004	 str         r3, [sp, #4]
  008ac	e3a03002	 mov         r3, #2
  008b0	e58d3000	 str         r3, [sp]
  008b4	e59b3000	 ldr         r3, [r11]
  008b8	e2833014	 add         r3, r3, #0x14
  008bc	e59b2000	 ldr         r2, [r11]
  008c0	e2822038	 add         r2, r2, #0x38
  008c4	e5922000	 ldr         r2, [r2]
  008c8	e59f1308	 ldr         r1, [pc, #0x308]
  008cc	e59b0000	 ldr         r0, [r11]
  008d0	e2800008	 add         r0, r0, #8
  008d4	e5900000	 ldr         r0, [r0]
  008d8	eb000000	 bl          |?AllocateMemory@CPhysMem@@QAAHPBGKQAPAEKPAH@Z|
  008dc	e50b0034	 str         r0, [r11, #-0x34]
  008e0	e51b3034	 ldr         r3, [r11, #-0x34]
  008e4	e3530000	 cmp         r3, #0
  008e8	1a00001e	 bne         |$LN4@Init|

; 210  :             DEBUGMSG( ZONE_WARNING, (TEXT("CPipe(%s)::IssueTransfer - no memory for TD buffer\n"), m_pCPipe->GetPipeType() ) );

  008ec	e59f32d0	 ldr         r3, [pc, #0x2D0]
  008f0	e5933440	 ldr         r3, [r3, #0x440]
  008f4	e3130a02	 tst         r3, #2, 20
  008f8	0a000011	 beq         |$LN17@Init|
  008fc	e59b3000	 ldr         r3, [r11]
  00900	e2833004	 add         r3, r3, #4
  00904	e5932000	 ldr         r2, [r3]
  00908	e59b3000	 ldr         r3, [r11]
  0090c	e2833004	 add         r3, r3, #4
  00910	e5930000	 ldr         r0, [r3]
  00914	e5923000	 ldr         r3, [r2]
  00918	e2833040	 add         r3, r3, #0x40
  0091c	e5933000	 ldr         r3, [r3]
  00920	e1a0e00f	 mov         lr, pc
  00924	e12fff13	 bx          r3
  00928	e50b0030	 str         r0, [r11, #-0x30]
  0092c	e51b1030	 ldr         r1, [r11, #-0x30]
  00930	e59f029c	 ldr         r0, [pc, #0x29C]
  00934	eb000000	 bl          NKDbgPrintfW
  00938	e3a03001	 mov         r3, #1
  0093c	e50b302c	 str         r3, [r11, #-0x2C]
  00940	ea000001	 b           |$LN18@Init|
  00944		 |$LN17@Init|
  00944	e3a03000	 mov         r3, #0
  00948	e50b302c	 str         r3, [r11, #-0x2C]
  0094c		 |$LN18@Init|

; 211  :             m_pAllocatedForClient = NULL;

  0094c	e59b3000	 ldr         r3, [r11]
  00950	e2832014	 add         r2, r3, #0x14
  00954	e3a03000	 mov         r3, #0
  00958	e5823000	 str         r3, [r2]

; 212  :             return FALSE;

  0095c	e3a03000	 mov         r3, #0
  00960	e50b305c	 str         r3, [r11, #-0x5C]
  00964	ea000087	 b           |$LN9@Init|
  00968		 |$LN4@Init|

; 213  :         }
; 214  : 
; 215  :         m_sTransfer.paBuffer = m_pCPhysMem->VaToPa( m_pAllocatedForClient );

  00968	e59b3000	 ldr         r3, [r11]
  0096c	e2833014	 add         r3, r3, #0x14
  00970	e5931000	 ldr         r1, [r3]
  00974	e59b3000	 ldr         r3, [r11]
  00978	e2833008	 add         r3, r3, #8
  0097c	e5930000	 ldr         r0, [r3]
  00980	eb000000	 bl          |?VaToPa@CPhysMem@@QAAKPAE@Z|
  00984	e50b0028	 str         r0, [r11, #-0x28]
  00988	e59b3000	 ldr         r3, [r11]
  0098c	e2832040	 add         r2, r3, #0x40
  00990	e51b3028	 ldr         r3, [r11, #-0x28]
  00994	e5823000	 str         r3, [r2]

; 216  :         PREFAST_DEBUGCHK( m_pAllocatedForClient != NULL);

  00998	e59b3000	 ldr         r3, [r11]
  0099c	e2833014	 add         r3, r3, #0x14
  009a0	e5933000	 ldr         r3, [r3]
  009a4	e3530000	 cmp         r3, #0
  009a8	0a000002	 beq         |$LN19@Init|
  009ac	e3a03001	 mov         r3, #1
  009b0	e50b3024	 str         r3, [r11, #-0x24]
  009b4	ea000007	 b           |$LN20@Init|
  009b8		 |$LN19@Init|
  009b8	e3a030d8	 mov         r3, #0xD8
  009bc	e59f220c	 ldr         r2, [pc, #0x20C]
  009c0	e59f11fc	 ldr         r1, [pc, #0x1FC]
  009c4	e59f0200	 ldr         r0, [pc, #0x200]
  009c8	eb000000	 bl          NKDbgPrintfW
  009cc	e6000010	 __debugbreak_ce
  009d0	e3a03000	 mov         r3, #0
  009d4	e50b3024	 str         r3, [r11, #-0x24]
  009d8		 |$LN20@Init|

; 217  :         PREFAST_DEBUGCHK( m_sTransfer.lpvBuffer!=NULL);

  009d8	e59b3000	 ldr         r3, [r11]
  009dc	e283303c	 add         r3, r3, #0x3C
  009e0	e5933000	 ldr         r3, [r3]
  009e4	e3530000	 cmp         r3, #0
  009e8	0a000002	 beq         |$LN21@Init|
  009ec	e3a03001	 mov         r3, #1
  009f0	e50b3020	 str         r3, [r11, #-0x20]
  009f4	ea000007	 b           |$LN22@Init|
  009f8		 |$LN21@Init|
  009f8	e3a030d9	 mov         r3, #0xD9
  009fc	e59f21cc	 ldr         r2, [pc, #0x1CC]
  00a00	e59f11bc	 ldr         r1, [pc, #0x1BC]
  00a04	e59f01c0	 ldr         r0, [pc, #0x1C0]
  00a08	eb000000	 bl          NKDbgPrintfW
  00a0c	e6000010	 __debugbreak_ce
  00a10	e3a03000	 mov         r3, #0
  00a14	e50b3020	 str         r3, [r11, #-0x20]
  00a18		 |$LN22@Init|

; 218  :         DEBUGCHK(m_sTransfer.paBuffer != 0 );

  00a18	e59b3000	 ldr         r3, [r11]
  00a1c	e2833040	 add         r3, r3, #0x40
  00a20	e5933000	 ldr         r3, [r3]
  00a24	e3530000	 cmp         r3, #0
  00a28	0a000002	 beq         |$LN23@Init|
  00a2c	e3a03001	 mov         r3, #1
  00a30	e50b301c	 str         r3, [r11, #-0x1C]
  00a34	ea000007	 b           |$LN24@Init|
  00a38		 |$LN23@Init|
  00a38	e3a030da	 mov         r3, #0xDA
  00a3c	e59f218c	 ldr         r2, [pc, #0x18C]
  00a40	e59f117c	 ldr         r1, [pc, #0x17C]
  00a44	e59f0180	 ldr         r0, [pc, #0x180]
  00a48	eb000000	 bl          NKDbgPrintfW
  00a4c	e6000010	 __debugbreak_ce
  00a50	e3a03000	 mov         r3, #0
  00a54	e50b301c	 str         r3, [r11, #-0x1C]
  00a58		 |$LN24@Init|

; 219  : 
; 220  :         if ( !(m_sTransfer.dwFlags & USB_IN_TRANSFER) ) {

  00a58	e59b3000	 ldr         r3, [r11]
  00a5c	e2833024	 add         r3, r3, #0x24
  00a60	e5933000	 ldr         r3, [r3]
  00a64	e3130080	 tst         r3, #0x80
  00a68	1a000022	 bne         |$LN3@Init|
  00a6c		 |$LN41@Init|

; 221  :             __try { // copying client buffer for OUT transfer
; 222  :                 memcpy( m_pAllocatedForClient, m_sTransfer.lpvBuffer, m_sTransfer.dwBufferSize );

  00a6c	e59b3000	 ldr         r3, [r11]
  00a70	e2833038	 add         r3, r3, #0x38
  00a74	e5932000	 ldr         r2, [r3]
  00a78	e59b3000	 ldr         r3, [r11]
  00a7c	e283303c	 add         r3, r3, #0x3C
  00a80	e5931000	 ldr         r1, [r3]
  00a84	e59b3000	 ldr         r3, [r11]
  00a88	e2833014	 add         r3, r3, #0x14
  00a8c	e5930000	 ldr         r0, [r3]
  00a90	eb000000	 bl          memcpy

; 223  :                 if ((m_sTransfer.dwBufferSize == 31) && (*m_pAllocatedForClient != 0x55))

  00a94	e59b3000	 ldr         r3, [r11]
  00a98	e2833038	 add         r3, r3, #0x38
  00a9c	e5933000	 ldr         r3, [r3]
  00aa0	e353001f	 cmp         r3, #0x1F
  00aa4	1a00000c	 bne         |$LN1@Init|
  00aa8	e59b3000	 ldr         r3, [r11]
  00aac	e2833014	 add         r3, r3, #0x14
  00ab0	e5933000	 ldr         r3, [r3]
  00ab4	e5d33000	 ldrb        r3, [r3]
  00ab8	e3530055	 cmp         r3, #0x55
  00abc	0a000006	 beq         |$LN1@Init|

; 224  :                     RETAILMSG(1, (TEXT("Invalid Transfer OUT\r\n")));

  00ac0	e59f0100	 ldr         r0, [pc, #0x100]
  00ac4	eb000000	 bl          NKDbgPrintfW
  00ac8	e3a03001	 mov         r3, #1
  00acc	e50b3018	 str         r3, [r11, #-0x18]
  00ad0	ea000001	 b           |$LN26@Init|
  00ad4	e3a03000	 mov         r3, #0
  00ad8	e50b3018	 str         r3, [r11, #-0x18]
  00adc		 |$LN26@Init|
  00adc		 |$LN1@Init|
  00adc		 |$LN42@Init|
  00adc	ea000005	 b           |$LN43@Init|
  00ae0		 |$LN38@Init|

; 226  :                   // bad lpvClientBuffer
; 227  :                   return FALSE;

  00ae0	e3a03000	 mov         r3, #0
  00ae4	e50b3068	 str         r3, [r11, #-0x68]
  00ae8	e51b3068	 ldr         r3, [r11, #-0x68]
  00aec	e50b305c	 str         r3, [r11, #-0x5C]
  00af0	ea000024	 b           |$LN9@Init|
  00af4	eaffffff	 b           |$LN43@Init|
  00af8		 |$LN43@Init|
  00af8		 |$LN3@Init|
  00af8		 |$LN5@Init|

; 228  :             }
; 229  :         }
; 230  :     }
; 231  :     
; 232  :     DEBUGMSG(  ZONE_TRANSFER && ZONE_VERBOSE , (TEXT("CQTransfer::Init (this=0x%x,id=0x%x),m_pAllocatedForControl=0x%x,m_pAllocatedForClient=0x%x\r\n"),
; 233  :         this,m_dwTransferID,m_pAllocatedForControl,m_pAllocatedForClient));    

  00af8	e59f30c4	 ldr         r3, [pc, #0xC4]
  00afc	e5933440	 ldr         r3, [r3, #0x440]
  00b00	e3130c01	 tst         r3, #1, 24
  00b04	0a000013	 beq         |$LN27@Init|
  00b08	e59f30b4	 ldr         r3, [pc, #0xB4]
  00b0c	e5933440	 ldr         r3, [r3, #0x440]
  00b10	e3130a01	 tst         r3, #1, 20
  00b14	0a00000f	 beq         |$LN27@Init|
  00b18	e59b3000	 ldr         r3, [r11]
  00b1c	e2833014	 add         r3, r3, #0x14
  00b20	e5933000	 ldr         r3, [r3]
  00b24	e58d3000	 str         r3, [sp]
  00b28	e59b3000	 ldr         r3, [r11]
  00b2c	e2833010	 add         r3, r3, #0x10
  00b30	e5933000	 ldr         r3, [r3]
  00b34	e59b2000	 ldr         r2, [r11]
  00b38	e2822064	 add         r2, r2, #0x64
  00b3c	e5922000	 ldr         r2, [r2]
  00b40	e59b1000	 ldr         r1, [r11]
  00b44	e59f0074	 ldr         r0, [pc, #0x74]
  00b48	eb000000	 bl          NKDbgPrintfW
  00b4c	e3a03001	 mov         r3, #1
  00b50	e50b3014	 str         r3, [r11, #-0x14]
  00b54	ea000001	 b           |$LN28@Init|
  00b58		 |$LN27@Init|
  00b58	e3a03000	 mov         r3, #0
  00b5c	e50b3014	 str         r3, [r11, #-0x14]
  00b60		 |$LN28@Init|

; 234  :     return AddTransfer();

  00b60	e59b3000	 ldr         r3, [r11]
  00b64	e5933000	 ldr         r3, [r3]
  00b68	e2833008	 add         r3, r3, #8
  00b6c	e59b0000	 ldr         r0, [r11]
  00b70	e5933000	 ldr         r3, [r3]
  00b74	e1a0e00f	 mov         lr, pc
  00b78	e12fff13	 bx          r3
  00b7c	e50b0010	 str         r0, [r11, #-0x10]
  00b80	e51b3010	 ldr         r3, [r11, #-0x10]
  00b84	e50b305c	 str         r3, [r11, #-0x5C]
  00b88		 |$LN9@Init|
  00b88		 |$LN29@Init|

; 235  : }

  00b88	e51b005c	 ldr         r0, [r11, #-0x5C]
  00b8c	e24bd00c	 sub         sp, r11, #0xC
  00b90	e89d6800	 ldmia       sp, {r11, sp, lr}
  00b94	e12fff1e	 bx          lr

			 ENDP  ; |?Init@CTransfer@@UAAHXZ|, CTransfer::Init

  00b98		 |$LN37@Init|
  00b98		 |$LN47@Init|

; 225  :             } __except( EXCEPTION_EXECUTE_HANDLER ) {

  00b98	e52de004	 str         lr, [sp, #-4]!
  00b9c	e24dd008	 sub         sp, sp, #8
  00ba0		 |$LN40@Init|
  00ba0		 |$LN51@Init|
  00ba0	e3a00001	 mov         r0, #1
  00ba4		 |$LN39@Init|
  00ba4	e28dd008	 add         sp, sp, #8
  00ba8	e49df004	 ldr         pc, [sp], #4
  00bac		 |$LN52@Init|
  00bac		 |$LN30@Init|
  00bac		 |$LN49@Init|

; 178  :         } __except( EXCEPTION_EXECUTE_HANDLER ) {

  00bac	e52de004	 str         lr, [sp, #-4]!
  00bb0	e24dd008	 sub         sp, sp, #8
  00bb4		 |$LN33@Init|
  00bb4		 |$LN53@Init|
  00bb4	e3a00001	 mov         r0, #1
  00bb8		 |$LN32@Init|
  00bb8	e28dd008	 add         sp, sp, #8
  00bbc	e49df004	 ldr         pc, [sp], #4
  00bc0		 |$LN55@Init|
  00bc0		 |$LN56@Init|
  00bc0	00000000	 DCD         |??_C@_1LM@CLNPCLAL@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AAi?$AAd?$AA?$DN?$AA0@|
  00bc4		 |$LN57@Init|
  00bc4	00000000	 DCD         |dpCurSettings|
  00bc8		 |$LN58@Init|
  00bc8	00000000	 DCD         |??_C@_1CO@MKAIJBKB@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAO?$AAU?$AAT?$AA?$AN?$AA?6?$AA?$AA@|
  00bcc		 |$LN59@Init|
  00bcc	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  00bd0		 |$LN60@Init|
  00bd0	00000000	 DCD         |??_C@_1LK@IFLKDCCK@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  00bd4		 |$LN61@Init|
  00bd4	00000000	 DCD         |??_C@_1GI@DEJENGNL@?$AAC?$AAP?$AAi?$AAp?$AAe?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AAn?$AAo?$AA?5?$AAm?$AAe@|
  00bd8		 |$LN62@Init|
  00bd8	00000000	 DCD         |??_C@_1CK@EEDMLIDO@?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@|
  00bdc		 |$LN63@Init|
  00bdc	00000000	 DCD         |??_C@_1GO@EEFDOHBH@?$AAC?$AAP?$AAi?$AAp?$AAe?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?3?$AA?3?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AAn?$AAo?$AA?5?$AAm?$AAe@|
  00be0		 |$LN64@Init|
  00be0	00000000	 DCD         |??_C@_1DG@OIBCBHKK@?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAS?$AAE?$AAT?$AAU?$AAP?$AA?5?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@|
  00be4		 |$LN65@Init|
  00be4	00000000	 DCD         |??_C@_1EM@KFFIANIM@?$AAC?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AAi?$AAd?$AA?$DN?$AA0?$AAx@|
  00be8		 |$LN54@Init|
  00be8		 |$LN50@Init|
	EXPORT	|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LI@BILHPLJP@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\usb2com\cphysmem.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T37293| DCD	|$LN9@VaToPa|
	DCD	0x40003a04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| DCB "U", 0x0
	DCB	"n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LI@BILHPLJP@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "p"
	DCB	0x0, "l", 0x0, "a", 0x0, "t", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, "m", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "C"
	DCB	0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N", 0x0, "_"
	DCB	0x0, "T", 0x0, "I", 0x0, "_", 0x0, "V", 0x0, "1", 0x0, "\\"
	DCB	0x0, "O", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, "3", 0x0, "5"
	DCB	0x0, "3", 0x0, "0", 0x0, "\\", 0x0, "M", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "\\", 0x0, "M", 0x0, "U", 0x0, "S", 0x0, "B"
	DCB	0x0, "H", 0x0, "C", 0x0, "D", 0x0, "\\", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "2", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "\\"
	DCB	0x0, "C", 0x0, "p", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "m"
	DCB	0x0, "e", 0x0, "m", 0x0, ".", 0x0, "h", 0x0, "p", 0x0, "p"
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?VaToPa@CPhysMem@@QAAKPAE@Z| PROC	; CPhysMem::VaToPa

; 192  : {

  00000		 |$LN9@VaToPa|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M37290|

; 193  :     DEBUGCHK( virtAddr != NULL );

  00010	e59d3018	 ldr         r3, [sp, #0x18]
  00014	e3530000	 cmp         r3, #0
  00018	0a000002	 beq         |$LN3@VaToPa|
  0001c	e3a03001	 mov         r3, #1
  00020	e58d3004	 str         r3, [sp, #4]
  00024	ea000007	 b           |$LN4@VaToPa|
  00028		 |$LN3@VaToPa|
  00028	e3a030c1	 mov         r3, #0xC1
  0002c	e59f20ac	 ldr         r2, [pc, #0xAC]
  00030	e59f10ac	 ldr         r1, [pc, #0xAC]
  00034	e59f009c	 ldr         r0, [pc, #0x9C]
  00038	eb000000	 bl          NKDbgPrintfW
  0003c	e6000010	 __debugbreak_ce
  00040	e3a03000	 mov         r3, #0
  00044	e58d3004	 str         r3, [sp, #4]
  00048		 |$LN4@VaToPa|

; 194  :     ASSERT((DWORD)m_pPhysicalBufferAddr <=(DWORD)virtAddr && (DWORD)virtAddr <(DWORD) m_pPhysicalBufferAddr + m_cbTotal);

  00048	e59d3014	 ldr         r3, [sp, #0x14]
  0004c	e283303c	 add         r3, r3, #0x3C
  00050	e5932000	 ldr         r2, [r3]
  00054	e59d3018	 ldr         r3, [sp, #0x18]
  00058	e1520003	 cmp         r2, r3
  0005c	8a00000b	 bhi         |$LN5@VaToPa|
  00060	e59d3014	 ldr         r3, [sp, #0x14]
  00064	e283303c	 add         r3, r3, #0x3C
  00068	e5932000	 ldr         r2, [r3]
  0006c	e59d3014	 ldr         r3, [sp, #0x14]
  00070	e5933000	 ldr         r3, [r3]
  00074	e0822003	 add         r2, r2, r3
  00078	e59d3018	 ldr         r3, [sp, #0x18]
  0007c	e1530002	 cmp         r3, r2
  00080	2a000002	 bcs         |$LN5@VaToPa|
  00084	e3a03001	 mov         r3, #1
  00088	e58d3008	 str         r3, [sp, #8]
  0008c	ea000007	 b           |$LN6@VaToPa|
  00090		 |$LN5@VaToPa|
  00090	e3a030c2	 mov         r3, #0xC2
  00094	e59f2044	 ldr         r2, [pc, #0x44]
  00098	e59f103c	 ldr         r1, [pc, #0x3C]
  0009c	e59f0034	 ldr         r0, [pc, #0x34]
  000a0	eb000000	 bl          NKDbgPrintfW
  000a4	e6000010	 __debugbreak_ce
  000a8	e3a03000	 mov         r3, #0
  000ac	e58d3008	 str         r3, [sp, #8]
  000b0		 |$LN6@VaToPa|

; 195  :     return ULONG(ULONG(virtAddr) + m_PaVaConversion);

  000b0	e59d3014	 ldr         r3, [sp, #0x14]
  000b4	e2833034	 add         r3, r3, #0x34
  000b8	e59d2018	 ldr         r2, [sp, #0x18]
  000bc	e5933000	 ldr         r3, [r3]
  000c0	e0823003	 add         r3, r2, r3
  000c4	e58d3000	 str         r3, [sp]

; 196  : }

  000c8	e59d0000	 ldr         r0, [sp]
  000cc	e28dd00c	 add         sp, sp, #0xC
  000d0	e89d6000	 ldmia       sp, {sp, lr}
  000d4	e12fff1e	 bx          lr
  000d8		 |$LN10@VaToPa|
  000d8		 |$LN11@VaToPa|
  000d8	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  000dc		 |$LN12@VaToPa|
  000dc	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  000e0		 |$LN13@VaToPa|
  000e0	00000000	 DCD         |??_C@_1LI@BILHPLJP@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  000e4		 |$LN14@VaToPa|
  000e4	00000000	 DCD         |dpCurSettings|
  000e8		 |$M37291|

			 ENDP  ; |?VaToPa@CPhysMem@@QAAKPAE@Z|, CPhysMem::VaToPa

	EXPORT	|??_GCQTD@@QAAPAXI@Z|			; CQTD::`scalar deleting destructor'
	EXPORT	|?GetNextTD@CQTD@@QAAPAV1@XZ|		; CQTD::GetNextTD
	EXPORT	|??_7CQTransfer@@6B@| [ DATA ]		; CQTransfer::`vftable'
	EXPORT	|??1CQTransfer@@UAA@XZ|			; CQTransfer::~CQTransfer
	EXPORT	|?AddTransfer@CQTransfer@@UAAHXZ|	; CQTransfer::AddTransfer
	IMPORT	|??_ECQTransfer@@UAAPAXI@Z|, WEAK |??_GCQTransfer@@UAAPAXI@Z| ; CQTransfer::`vector deleting destructor', CQTransfer::`scalar deleting destructor'

  00030			 AREA	 |.pdata|, PDATA
|$T37309| DCD	|$LN9@CQTransfer|
	DCD	0x40002f04
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\trans.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CQTransfer@@6B@| DCD |??_ECQTransfer@@UAAPAXI@Z|	; CQTransfer::`vftable'
	DCD	|?Init@CTransfer@@UAAHXZ|
	DCD	|?AddTransfer@CQTransfer@@UAAHXZ|
; Function compile flags: /Odtp

  00be8			 AREA	 |.text|, CODE, ARM

  00be8		 |??1CQTransfer@@UAA@XZ| PROC		; CQTransfer::~CQTransfer

; 247  : {    

  00be8		 |$LN9@CQTransfer|
  00be8	e1a0c00d	 mov         r12, sp
  00bec	e92d0001	 stmdb       sp!, {r0}
  00bf0	e92d5000	 stmdb       sp!, {r12, lr}
  00bf4	e24dd01c	 sub         sp, sp, #0x1C
  00bf8		 |$M37306|
  00bf8	e59f20a0	 ldr         r2, [pc, #0xA0]
  00bfc	e59d3024	 ldr         r3, [sp, #0x24]
  00c00	e5832000	 str         r2, [r3]

; 248  :     CQTD * pCurTD = m_pCQTDList;

  00c04	e59d3024	 ldr         r3, [sp, #0x24]
  00c08	e2833068	 add         r3, r3, #0x68
  00c0c	e5933000	 ldr         r3, [r3]
  00c10	e58d3000	 str         r3, [sp]
  00c14		 |$LN2@CQTransfer|

; 249  :     while (pCurTD!=NULL) {

  00c14	e59d3000	 ldr         r3, [sp]
  00c18	e3530000	 cmp         r3, #0
  00c1c	0a00001a	 beq         |$LN1@CQTransfer|

; 250  :          CQTD * pNextTD = pCurTD->GetNextTD();

  00c20	e59d0000	 ldr         r0, [sp]
  00c24	eb000000	 bl          |?GetNextTD@CQTD@@QAAPAV1@XZ|
  00c28	e58d0010	 str         r0, [sp, #0x10]
  00c2c	e59d3010	 ldr         r3, [sp, #0x10]
  00c30	e58d3004	 str         r3, [sp, #4]

; 251  :          pCurTD->~CQTD();         

  00c34	e3a01000	 mov         r1, #0
  00c38	e59d0000	 ldr         r0, [sp]
  00c3c	eb000000	 bl          |??_GCQTD@@QAAPAXI@Z|

; 252  :          delete pCurTD;

  00c40	e59d3000	 ldr         r3, [sp]
  00c44	e58d300c	 str         r3, [sp, #0xC]
  00c48	e59d300c	 ldr         r3, [sp, #0xC]
  00c4c	e58d3008	 str         r3, [sp, #8]
  00c50	e59d3008	 ldr         r3, [sp, #8]
  00c54	e3530000	 cmp         r3, #0
  00c58	0a000006	 beq         |$LN5@CQTransfer|
  00c5c	e3a01001	 mov         r1, #1
  00c60	e59d0008	 ldr         r0, [sp, #8]
  00c64	eb000000	 bl          |??_GCQTD@@QAAPAXI@Z|
  00c68	e58d0014	 str         r0, [sp, #0x14]
  00c6c	e59d3014	 ldr         r3, [sp, #0x14]
  00c70	e58d3018	 str         r3, [sp, #0x18]
  00c74	ea000001	 b           |$LN6@CQTransfer|
  00c78		 |$LN5@CQTransfer|
  00c78	e3a03000	 mov         r3, #0
  00c7c	e58d3018	 str         r3, [sp, #0x18]
  00c80		 |$LN6@CQTransfer|

; 253  :          pCurTD = pNextTD;

  00c80	e59d3004	 ldr         r3, [sp, #4]
  00c84	e58d3000	 str         r3, [sp]

; 254  :     }

  00c88	eaffffe1	 b           |$LN2@CQTransfer|
  00c8c		 |$LN1@CQTransfer|

; 255  : }

  00c8c	e59d0024	 ldr         r0, [sp, #0x24]
  00c90	eb000000	 bl          |??1CTransfer@@UAA@XZ|
  00c94	e28dd01c	 add         sp, sp, #0x1C
  00c98	e89d6000	 ldmia       sp, {sp, lr}
  00c9c	e12fff1e	 bx          lr
  00ca0		 |$LN10@CQTransfer|
  00ca0		 |$LN11@CQTransfer|
  00ca0	00000000	 DCD         |??_7CQTransfer@@6B@|
  00ca4		 |$M37307|

			 ENDP  ; |??1CQTransfer@@UAA@XZ|, CQTransfer::~CQTransfer

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.h

  00000			 AREA	 |.pdata|, PDATA
|$T37317| DCD	|$LN5@GetNextTD|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetNextTD@CQTD@@QAAPAV1@XZ| PROC	; CQTD::GetNextTD

; 77   :     CQTD *GetNextTD() {return m_pNext; };

  00000		 |$LN5@GetNextTD|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37314|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833008	 add         r3, r3, #8
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M37315|

			 ENDP  ; |?GetNextTD@CQTD@@QAAPAV1@XZ|, CQTD::GetNextTD


  00000			 AREA	 |.pdata|, PDATA
|$T37325| DCD	|$LN6@scalar@2|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCQTransfer@@UAAPAXI@Z| PROC	; CQTransfer::`scalar deleting destructor'
  00000		 |$LN6@scalar@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37322|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1CQTransfer@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar@2|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar@2|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M37323|

			 ENDP  ; |??_GCQTransfer@@UAAPAXI@Z|, CQTransfer::`scalar deleting destructor'

	EXPORT	|??1CQTD@@QAA@XZ|			; CQTD::~CQTD

  00000			 AREA	 |.pdata|, PDATA
|$T37333| DCD	|$LN6@scalar@3|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCQTD@@QAAPAXI@Z| PROC		; CQTD::`scalar deleting destructor'
  00000		 |$LN6@scalar@3|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37330|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1CQTD@@QAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar@3|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar@3|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M37331|

			 ENDP  ; |??_GCQTD@@QAAPAXI@Z|, CQTD::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T37340| DCD	|$LN5@CQTD|
	DCD	0x40000503
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CQTD@@QAA@XZ| PROC			; CQTD::~CQTD

; 73   :     ~CQTD() {};

  00000		 |$LN5@CQTD|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37337|
  0000c	e89d6000	 ldmia       sp, {sp, lr}
  00010	e12fff1e	 bx          lr
  00014		 |$M37338|

			 ENDP  ; |??1CQTD@@QAA@XZ|, CQTD::~CQTD

	EXPORT	|?UnLock@CQH@@QAAXXZ|			; CQH::UnLock
	EXPORT	|?SetPacketSize@CQTD@@QAAXK@Z|		; CQTD::SetPacketSize
	EXPORT	|?SetStatus@CQTD@@QAAXK@Z|		; CQTD::SetStatus
	EXPORT	|?SetToggle@CQTD@@QAAXH@Z|		; CQTD::SetToggle
	EXPORT	|?SetTDType@CQTD@@QAAXK@Z|		; CQTD::SetTDType
	EXPORT	|?SetCurTfrSize@CQTD@@QAAXK@Z|		; CQTD::SetCurTfrSize
	EXPORT	|?SetTotTfrSize@CQTD@@QAAXK@Z|		; CQTD::SetTotTfrSize
	EXPORT	|?SetBuffer@CQTD@@QAAXKKK@Z|		; CQTD::SetBuffer
	EXPORT	|?Lock@CQH@@QAAXXZ|			; CQH::Lock
	EXPORT	|?GetEndptDescriptor@CPipe@@QAA?AU_USB_ENDPOINT_DESCRIPTOR@@XZ| ; CPipe::GetEndptDescriptor
	EXPORT	|??_C@_1HA@FEFOFBPM@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAd?$AAd?$AA?5?$AAs?$AAi?$AAn?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@HOOBCKCH@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAd?$AAd?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs?$AA?$DN?$AA0?$AAx@| [ DATA ] ; `string'
	IMPORT	|?QueueNextTD@CQTD@@QAAPAV1@PAV1@@Z|	; CQTD::QueueNextTD
	IMPORT	|??0CQTD@@QAA@PAVCQTransfer@@PAVCQH@@@Z| ; CQTD::CQTD
	IMPORT	|??2@YAPAXI@Z|				; operator new

  00038			 AREA	 |.pdata|, PDATA
|$T37393| DCD	|$LN61@AddTransfe|
	DCD	0x4002fb04
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\trans.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@FEFOFBPM@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAd?$AAd?$AA?5?$AAs?$AAi?$AAn?$AAc@| DCB "C"
	DCB	0x0, "Q", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":", 0x0, " "
	DCB	0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "u", 0x0, "r"
	DCB	0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "a"
	DCB	0x0, "d", 0x0, "d", 0x0, " ", 0x0, "s", 0x0, "i", 0x0, "n"
	DCB	0x0, "c", 0x0, "e", 0x0, " ", 0x0, "m", 0x0, "_", 0x0, "p"
	DCB	0x0, "C", 0x0, "Q", 0x0, "T", 0x0, "D", 0x0, "L", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " "
	DCB	0x0, "f", 0x0, "u", 0x0, "l", 0x0, "l", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@HOOBCKCH@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAd?$AAd?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs?$AA?$DN?$AA0?$AAx@| DCB "C"
	DCB	0x0, "Q", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":", 0x0, "A"
	DCB	0x0, "d", 0x0, "d", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "("
	DCB	0x0, "t", 0x0, "h", 0x0, "i", 0x0, "s", 0x0, "=", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ",", 0x0, "i", 0x0, "d"
	DCB	0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00ca4			 AREA	 |.text|, CODE, ARM

  00ca4		 |?AddTransfer@CQTransfer@@UAAHXZ| PROC	; CQTransfer::AddTransfer

; 268  : {

  00ca4		 |$LN61@AddTransfe|
  00ca4	e1a0c00d	 mov         r12, sp
  00ca8	e92d0001	 stmdb       sp!, {r0}
  00cac	e92d5000	 stmdb       sp!, {r12, lr}
  00cb0	e24ddf42	 sub         sp, sp, #0x42, 30
  00cb4		 |$M37390|

; 269  :     DEBUGMSG( ZONE_TRANSFER && ZONE_VERBOSE, (TEXT("CQTransfer::AddTransfer (this=0x%x,id=0x%x)\r\n"),this,m_dwTransferID));

  00cb4	e59f3bcc	 ldr         r3, [pc, #0xBCC]
  00cb8	e5933440	 ldr         r3, [r3, #0x440]
  00cbc	e3130c01	 tst         r3, #1, 24
  00cc0	0a00000c	 beq         |$LN25@AddTransfe|
  00cc4	e59f3bbc	 ldr         r3, [pc, #0xBBC]
  00cc8	e5933440	 ldr         r3, [r3, #0x440]
  00ccc	e3130a01	 tst         r3, #1, 20
  00cd0	0a000008	 beq         |$LN25@AddTransfe|
  00cd4	e59d3110	 ldr         r3, [sp, #0x110]
  00cd8	e2833064	 add         r3, r3, #0x64
  00cdc	e5932000	 ldr         r2, [r3]
  00ce0	e59d1110	 ldr         r1, [sp, #0x110]
  00ce4	e59f0ba0	 ldr         r0, [pc, #0xBA0]
  00ce8	eb000000	 bl          NKDbgPrintfW
  00cec	e3a03001	 mov         r3, #1
  00cf0	e58d3058	 str         r3, [sp, #0x58]
  00cf4	ea000001	 b           |$LN26@AddTransfe|
  00cf8		 |$LN25@AddTransfe|
  00cf8	e3a03000	 mov         r3, #0
  00cfc	e58d3058	 str         r3, [sp, #0x58]
  00d00		 |$LN26@AddTransfe|

; 270  :     if (m_pCQTDList) { // Has been created. Somthing wrong.

  00d00	e59d3110	 ldr         r3, [sp, #0x110]
  00d04	e2833068	 add         r3, r3, #0x68
  00d08	e5933000	 ldr         r3, [r3]
  00d0c	e3530000	 cmp         r3, #0
  00d10	0a000019	 beq         |$LN22@AddTransfe|

; 271  :         DEBUGMSG(ZONE_ERROR, (TEXT("CQTransfer:: Failure to add since m_pCQTDList is full\r\n")));

  00d14	e59f3b6c	 ldr         r3, [pc, #0xB6C]
  00d18	e5933440	 ldr         r3, [r3, #0x440]
  00d1c	e3130901	 tst         r3, #1, 18
  00d20	0a000004	 beq         |$LN27@AddTransfe|
  00d24	e59f0b58	 ldr         r0, [pc, #0xB58]
  00d28	eb000000	 bl          NKDbgPrintfW
  00d2c	e3a03001	 mov         r3, #1
  00d30	e58d305c	 str         r3, [sp, #0x5C]
  00d34	ea000001	 b           |$LN28@AddTransfe|
  00d38		 |$LN27@AddTransfe|
  00d38	e3a03000	 mov         r3, #0
  00d3c	e58d305c	 str         r3, [sp, #0x5C]
  00d40		 |$LN28@AddTransfe|

; 272  :         ASSERT(FALSE);

  00d40	ea000002	 b           |$LN29@AddTransfe|
  00d44	e3a03001	 mov         r3, #1
  00d48	e58d3060	 str         r3, [sp, #0x60]
  00d4c	ea000007	 b           |$LN30@AddTransfe|
  00d50		 |$LN29@AddTransfe|
  00d50	e3a03e11	 mov         r3, #0x11, 28
  00d54	e59f2b24	 ldr         r2, [pc, #0xB24]
  00d58	e59f1b1c	 ldr         r1, [pc, #0xB1C]
  00d5c	e59f0b14	 ldr         r0, [pc, #0xB14]
  00d60	eb000000	 bl          NKDbgPrintfW
  00d64	e6000010	 __debugbreak_ce
  00d68	e3a03000	 mov         r3, #0
  00d6c	e58d3060	 str         r3, [sp, #0x60]
  00d70		 |$LN30@AddTransfe|

; 273  :         return FALSE;

  00d70	e3a03000	 mov         r3, #0
  00d74	e58d3054	 str         r3, [sp, #0x54]
  00d78	ea0002ba	 b           |$LN23@AddTransfe|
  00d7c		 |$LN22@AddTransfe|

; 274  :     }
; 275  :     BOOL bDataToggle1= FALSE;

  00d7c	e3a03000	 mov         r3, #0
  00d80	e58d300c	 str         r3, [sp, #0xC]

; 276  :     CQTD * pStatusTD = NULL;

  00d84	e3a03000	 mov         r3, #0
  00d88	e58d3000	 str         r3, [sp]

; 277  :     DWORD dwPacketSize= (m_pCPipe->GetEndptDescriptor()).wMaxPacketSize & 0x7ff;

  00d8c	e28d1024	 add         r1, sp, #0x24
  00d90	e59d3110	 ldr         r3, [sp, #0x110]
  00d94	e2833004	 add         r3, r3, #4
  00d98	e5930000	 ldr         r0, [r3]
  00d9c	eb000000	 bl          |?GetEndptDescriptor@CPipe@@QAA?AU_USB_ENDPOINT_DESCRIPTOR@@XZ|
  00da0	e58d0064	 str         r0, [sp, #0x64]
  00da4	e59d3064	 ldr         r3, [sp, #0x64]
  00da8	e2831004	 add         r1, r3, #4
  00dac	e5d13001	 ldrb        r3, [r1, #1]
  00db0	e1a03403	 mov         r3, r3, lsl #8
  00db4	e1a02803	 mov         r2, r3, lsl #16
  00db8	e1a02822	 mov         r2, r2, lsr #16
  00dbc	e5d13000	 ldrb        r3, [r1]
  00dc0	e1833002	 orr         r3, r3, r2
  00dc4	e1a02003	 mov         r2, r3
  00dc8	e3a03c07	 mov         r3, #7, 24
  00dcc	e38330ff	 orr         r3, r3, #0xFF
  00dd0	e0023003	 and         r3, r2, r3
  00dd4	e58d3008	 str         r3, [sp, #8]

; 278  :     if (m_paControlHeader!=NULL && m_sTransfer.lpvControlHeader!=NULL) { 

  00dd8	e59d3110	 ldr         r3, [sp, #0x110]
  00ddc	e2833018	 add         r3, r3, #0x18
  00de0	e5933000	 ldr         r3, [r3]
  00de4	e3530000	 cmp         r3, #0
  00de8	0a0000e0	 beq         |$LN21@AddTransfe|
  00dec	e59d3110	 ldr         r3, [sp, #0x110]
  00df0	e2833028	 add         r3, r3, #0x28
  00df4	e5933000	 ldr         r3, [r3]
  00df8	e3530000	 cmp         r3, #0
  00dfc	0a0000db	 beq         |$LN21@AddTransfe|

; 279  :         // This is setup packet.        
; 280  :         if (m_pCQTDList = new CQTD(this, (CQH *)(((CQueuedPipe * const)m_pCPipe->GetQHead())))) {            

  00e00	e3a00038	 mov         r0, #0x38
  00e04	eb000000	 bl          |??2@YAPAXI@Z|
  00e08	e58d0068	 str         r0, [sp, #0x68]
  00e0c	e59d3068	 ldr         r3, [sp, #0x68]
  00e10	e58d302c	 str         r3, [sp, #0x2C]
  00e14	e59d302c	 ldr         r3, [sp, #0x2C]
  00e18	e3530000	 cmp         r3, #0
  00e1c	0a000013	 beq         |$LN31@AddTransfe|
  00e20	e59d3110	 ldr         r3, [sp, #0x110]
  00e24	e2833004	 add         r3, r3, #4
  00e28	e5932000	 ldr         r2, [r3]
  00e2c	e59d3110	 ldr         r3, [sp, #0x110]
  00e30	e2833004	 add         r3, r3, #4
  00e34	e5930000	 ldr         r0, [r3]
  00e38	e5923000	 ldr         r3, [r2]
  00e3c	e2833044	 add         r3, r3, #0x44
  00e40	e5933000	 ldr         r3, [r3]
  00e44	e1a0e00f	 mov         lr, pc
  00e48	e12fff13	 bx          r3
  00e4c	e58d006c	 str         r0, [sp, #0x6C]
  00e50	e59d206c	 ldr         r2, [sp, #0x6C]
  00e54	e59d1110	 ldr         r1, [sp, #0x110]
  00e58	e59d002c	 ldr         r0, [sp, #0x2C]
  00e5c	eb000000	 bl          |??0CQTD@@QAA@PAVCQTransfer@@PAVCQH@@@Z|
  00e60	e58d0070	 str         r0, [sp, #0x70]
  00e64	e59d3070	 ldr         r3, [sp, #0x70]
  00e68	e58d3074	 str         r3, [sp, #0x74]
  00e6c	ea000001	 b           |$LN32@AddTransfe|
  00e70		 |$LN31@AddTransfe|
  00e70	e3a03000	 mov         r3, #0
  00e74	e58d3074	 str         r3, [sp, #0x74]
  00e78		 |$LN32@AddTransfe|
  00e78	e59d3110	 ldr         r3, [sp, #0x110]
  00e7c	e2832068	 add         r2, r3, #0x68
  00e80	e59d3074	 ldr         r3, [sp, #0x74]
  00e84	e5823000	 str         r3, [r2]
  00e88	e59d3074	 ldr         r3, [sp, #0x74]
  00e8c	e3530000	 cmp         r3, #0
  00e90	0a00004f	 beq         |$LN20@AddTransfe|

; 281  :             m_pCPipe->GetQHead()->Lock();

  00e94	e59d3110	 ldr         r3, [sp, #0x110]
  00e98	e2833004	 add         r3, r3, #4
  00e9c	e5932000	 ldr         r2, [r3]
  00ea0	e59d3110	 ldr         r3, [sp, #0x110]
  00ea4	e2833004	 add         r3, r3, #4
  00ea8	e5930000	 ldr         r0, [r3]
  00eac	e5923000	 ldr         r3, [r2]
  00eb0	e2833044	 add         r3, r3, #0x44
  00eb4	e5933000	 ldr         r3, [r3]
  00eb8	e1a0e00f	 mov         lr, pc
  00ebc	e12fff13	 bx          r3
  00ec0	e58d0078	 str         r0, [sp, #0x78]
  00ec4	e59d0078	 ldr         r0, [sp, #0x78]
  00ec8	eb000000	 bl          |?Lock@CQH@@QAAXXZ|

; 282  :             m_pCQTDList->SetBuffer((DWORD)m_paControlHeader, (DWORD)m_pAllocatedForControl, sizeof(USB_DEVICE_REQUEST));

  00ecc	e3a03008	 mov         r3, #8
  00ed0	e59d2110	 ldr         r2, [sp, #0x110]
  00ed4	e2822010	 add         r2, r2, #0x10
  00ed8	e5922000	 ldr         r2, [r2]
  00edc	e59d1110	 ldr         r1, [sp, #0x110]
  00ee0	e2811018	 add         r1, r1, #0x18
  00ee4	e5911000	 ldr         r1, [r1]
  00ee8	e59d0110	 ldr         r0, [sp, #0x110]
  00eec	e2800068	 add         r0, r0, #0x68
  00ef0	e5900000	 ldr         r0, [r0]
  00ef4	eb000000	 bl          |?SetBuffer@CQTD@@QAAXKKK@Z|

; 283  :             m_pCQTDList->SetTotTfrSize(0);

  00ef8	e3a01000	 mov         r1, #0
  00efc	e59d3110	 ldr         r3, [sp, #0x110]
  00f00	e2833068	 add         r3, r3, #0x68
  00f04	e5930000	 ldr         r0, [r3]
  00f08	eb000000	 bl          |?SetTotTfrSize@CQTD@@QAAXK@Z|

; 284  :             m_pCQTDList->SetCurTfrSize(0);

  00f0c	e3a01000	 mov         r1, #0
  00f10	e59d3110	 ldr         r3, [sp, #0x110]
  00f14	e2833068	 add         r3, r3, #0x68
  00f18	e5930000	 ldr         r0, [r3]
  00f1c	eb000000	 bl          |?SetCurTfrSize@CQTD@@QAAXK@Z|

; 285  :             m_pCQTDList->SetTDType(TD_SETUP);

  00f20	e3a01001	 mov         r1, #1
  00f24	e59d3110	 ldr         r3, [sp, #0x110]
  00f28	e2833068	 add         r3, r3, #0x68
  00f2c	e5930000	 ldr         r0, [r3]
  00f30	eb000000	 bl          |?SetTDType@CQTD@@QAAXK@Z|

; 286  :             m_pCQTDList->SetToggle(bDataToggle1);

  00f34	e59d100c	 ldr         r1, [sp, #0xC]
  00f38	e59d3110	 ldr         r3, [sp, #0x110]
  00f3c	e2833068	 add         r3, r3, #0x68
  00f40	e5930000	 ldr         r0, [r3]
  00f44	eb000000	 bl          |?SetToggle@CQTD@@QAAXH@Z|

; 287  :             m_pCQTDList->SetStatus(STATUS_WAIT_TRANSFER);            

  00f48	e3a01001	 mov         r1, #1
  00f4c	e59d3110	 ldr         r3, [sp, #0x110]
  00f50	e2833068	 add         r3, r3, #0x68
  00f54	e5930000	 ldr         r0, [r3]
  00f58	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|

; 288  :             m_pCQTDList->SetPacketSize(dwPacketSize);

  00f5c	e59d1008	 ldr         r1, [sp, #8]
  00f60	e59d3110	 ldr         r3, [sp, #0x110]
  00f64	e2833068	 add         r3, r3, #0x68
  00f68	e5930000	 ldr         r0, [r3]
  00f6c	eb000000	 bl          |?SetPacketSize@CQTD@@QAAXK@Z|

; 289  :             m_pCPipe->GetQHead()->UnLock();

  00f70	e59d3110	 ldr         r3, [sp, #0x110]
  00f74	e2833004	 add         r3, r3, #4
  00f78	e5932000	 ldr         r2, [r3]
  00f7c	e59d3110	 ldr         r3, [sp, #0x110]
  00f80	e2833004	 add         r3, r3, #4
  00f84	e5930000	 ldr         r0, [r3]
  00f88	e5923000	 ldr         r3, [r2]
  00f8c	e2833044	 add         r3, r3, #0x44
  00f90	e5933000	 ldr         r3, [r3]
  00f94	e1a0e00f	 mov         lr, pc
  00f98	e12fff13	 bx          r3
  00f9c	e58d007c	 str         r0, [sp, #0x7C]
  00fa0	e59d007c	 ldr         r0, [sp, #0x7C]
  00fa4	eb000000	 bl          |?UnLock@CQH@@QAAXXZ|

; 290  :             bDataToggle1 = !bDataToggle1;

  00fa8	e59d300c	 ldr         r3, [sp, #0xC]
  00fac	e3530000	 cmp         r3, #0
  00fb0	1a000002	 bne         |$LN33@AddTransfe|
  00fb4	e3a03001	 mov         r3, #1
  00fb8	e58d3080	 str         r3, [sp, #0x80]
  00fbc	ea000001	 b           |$LN34@AddTransfe|
  00fc0		 |$LN33@AddTransfe|
  00fc0	e3a03000	 mov         r3, #0
  00fc4	e58d3080	 str         r3, [sp, #0x80]
  00fc8		 |$LN34@AddTransfe|
  00fc8	e59d3080	 ldr         r3, [sp, #0x80]
  00fcc	e58d300c	 str         r3, [sp, #0xC]

; 291  :         }
; 292  :         else 

  00fd0	ea000002	 b           |$LN19@AddTransfe|
  00fd4		 |$LN20@AddTransfe|

; 293  :             return FALSE;

  00fd4	e3a03000	 mov         r3, #0
  00fd8	e58d3054	 str         r3, [sp, #0x54]
  00fdc	ea000221	 b           |$LN23@AddTransfe|
  00fe0		 |$LN19@AddTransfe|

; 294  : 
; 295  :         // Status Packet        
; 296  :         pStatusTD = new CQTD(this, ((CQueuedPipe * const)m_pCPipe)->GetQHead());

  00fe0	e3a00038	 mov         r0, #0x38
  00fe4	eb000000	 bl          |??2@YAPAXI@Z|
  00fe8	e58d0084	 str         r0, [sp, #0x84]
  00fec	e59d3084	 ldr         r3, [sp, #0x84]
  00ff0	e58d3030	 str         r3, [sp, #0x30]
  00ff4	e59d3030	 ldr         r3, [sp, #0x30]
  00ff8	e3530000	 cmp         r3, #0
  00ffc	0a000013	 beq         |$LN35@AddTransfe|
  01000	e59d3110	 ldr         r3, [sp, #0x110]
  01004	e2833004	 add         r3, r3, #4
  01008	e5932000	 ldr         r2, [r3]
  0100c	e59d3110	 ldr         r3, [sp, #0x110]
  01010	e2833004	 add         r3, r3, #4
  01014	e5930000	 ldr         r0, [r3]
  01018	e5923000	 ldr         r3, [r2]
  0101c	e2833044	 add         r3, r3, #0x44
  01020	e5933000	 ldr         r3, [r3]
  01024	e1a0e00f	 mov         lr, pc
  01028	e12fff13	 bx          r3
  0102c	e58d0088	 str         r0, [sp, #0x88]
  01030	e59d2088	 ldr         r2, [sp, #0x88]
  01034	e59d1110	 ldr         r1, [sp, #0x110]
  01038	e59d0030	 ldr         r0, [sp, #0x30]
  0103c	eb000000	 bl          |??0CQTD@@QAA@PAVCQTransfer@@PAVCQH@@@Z|
  01040	e58d008c	 str         r0, [sp, #0x8C]
  01044	e59d308c	 ldr         r3, [sp, #0x8C]
  01048	e58d3090	 str         r3, [sp, #0x90]
  0104c	ea000001	 b           |$LN36@AddTransfe|
  01050		 |$LN35@AddTransfe|
  01050	e3a03000	 mov         r3, #0
  01054	e58d3090	 str         r3, [sp, #0x90]
  01058		 |$LN36@AddTransfe|
  01058	e59d3090	 ldr         r3, [sp, #0x90]
  0105c	e58d3000	 str         r3, [sp]

; 297  :         if (pStatusTD) {

  01060	e59d3000	 ldr         r3, [sp]
  01064	e3530000	 cmp         r3, #0
  01068	0a00003d	 beq         |$LN18@AddTransfe|

; 298  :             m_pCPipe->GetQHead()->Lock();

  0106c	e59d3110	 ldr         r3, [sp, #0x110]
  01070	e2833004	 add         r3, r3, #4
  01074	e5932000	 ldr         r2, [r3]
  01078	e59d3110	 ldr         r3, [sp, #0x110]
  0107c	e2833004	 add         r3, r3, #4
  01080	e5930000	 ldr         r0, [r3]
  01084	e5923000	 ldr         r3, [r2]
  01088	e2833044	 add         r3, r3, #0x44
  0108c	e5933000	 ldr         r3, [r3]
  01090	e1a0e00f	 mov         lr, pc
  01094	e12fff13	 bx          r3
  01098	e58d0094	 str         r0, [sp, #0x94]
  0109c	e59d0094	 ldr         r0, [sp, #0x94]
  010a0	eb000000	 bl          |?Lock@CQH@@QAAXXZ|

; 299  :             pStatusTD->SetBuffer(0, 0, 0);

  010a4	e3a03000	 mov         r3, #0
  010a8	e3a02000	 mov         r2, #0
  010ac	e3a01000	 mov         r1, #0
  010b0	e59d0000	 ldr         r0, [sp]
  010b4	eb000000	 bl          |?SetBuffer@CQTD@@QAAXKKK@Z|

; 300  :             pStatusTD->SetTotTfrSize(0);

  010b8	e3a01000	 mov         r1, #0
  010bc	e59d0000	 ldr         r0, [sp]
  010c0	eb000000	 bl          |?SetTotTfrSize@CQTD@@QAAXK@Z|

; 301  :             pStatusTD->SetCurTfrSize(0);

  010c4	e3a01000	 mov         r1, #0
  010c8	e59d0000	 ldr         r0, [sp]
  010cc	eb000000	 bl          |?SetCurTfrSize@CQTD@@QAAXK@Z|

; 302  :             pStatusTD->SetTDType(((m_sTransfer.dwFlags & USB_IN_TRANSFER)!=0?TD_STATUS_OUT:TD_STATUS_IN));

  010d0	e59d3110	 ldr         r3, [sp, #0x110]
  010d4	e2833024	 add         r3, r3, #0x24
  010d8	e5933000	 ldr         r3, [r3]
  010dc	e3130080	 tst         r3, #0x80
  010e0	0a000002	 beq         |$LN37@AddTransfe|
  010e4	e3a03005	 mov         r3, #5
  010e8	e58d3098	 str         r3, [sp, #0x98]
  010ec	ea000001	 b           |$LN38@AddTransfe|
  010f0		 |$LN37@AddTransfe|
  010f0	e3a03004	 mov         r3, #4
  010f4	e58d3098	 str         r3, [sp, #0x98]
  010f8		 |$LN38@AddTransfe|
  010f8	e59d1098	 ldr         r1, [sp, #0x98]
  010fc	e59d0000	 ldr         r0, [sp]
  01100	eb000000	 bl          |?SetTDType@CQTD@@QAAXK@Z|

; 303  :             pStatusTD->SetToggle(TRUE);

  01104	e3a01001	 mov         r1, #1
  01108	e59d0000	 ldr         r0, [sp]
  0110c	eb000000	 bl          |?SetToggle@CQTD@@QAAXH@Z|

; 304  :             pStatusTD->SetStatus(STATUS_WAIT_TRANSFER);

  01110	e3a01001	 mov         r1, #1
  01114	e59d0000	 ldr         r0, [sp]
  01118	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|

; 305  :             pStatusTD->SetPacketSize(dwPacketSize);

  0111c	e59d1008	 ldr         r1, [sp, #8]
  01120	e59d0000	 ldr         r0, [sp]
  01124	eb000000	 bl          |?SetPacketSize@CQTD@@QAAXK@Z|

; 306  :             m_pCPipe->GetQHead()->UnLock();

  01128	e59d3110	 ldr         r3, [sp, #0x110]
  0112c	e2833004	 add         r3, r3, #4
  01130	e5932000	 ldr         r2, [r3]
  01134	e59d3110	 ldr         r3, [sp, #0x110]
  01138	e2833004	 add         r3, r3, #4
  0113c	e5930000	 ldr         r0, [r3]
  01140	e5923000	 ldr         r3, [r2]
  01144	e2833044	 add         r3, r3, #0x44
  01148	e5933000	 ldr         r3, [r3]
  0114c	e1a0e00f	 mov         lr, pc
  01150	e12fff13	 bx          r3
  01154	e58d009c	 str         r0, [sp, #0x9C]
  01158	e59d009c	 ldr         r0, [sp, #0x9C]
  0115c	eb000000	 bl          |?UnLock@CQH@@QAAXXZ|

; 307  :         }
; 308  :         else 

  01160	ea000002	 b           |$LN17@AddTransfe|
  01164		 |$LN18@AddTransfe|

; 309  :             return FALSE;

  01164	e3a03000	 mov         r3, #0
  01168	e58d3054	 str         r3, [sp, #0x54]
  0116c	ea0001bd	 b           |$LN23@AddTransfe|
  01170		 |$LN17@AddTransfe|
  01170		 |$LN21@AddTransfe|

; 310  :     };
; 311  :     CQTD * pPrevTD=m_pCQTDList;

  01170	e59d3110	 ldr         r3, [sp, #0x110]
  01174	e2833068	 add         r3, r3, #0x68
  01178	e5933000	 ldr         r3, [r3]
  0117c	e58d3004	 str         r3, [sp, #4]

; 312  :     if ( m_pCQTDList==NULL  && m_sTransfer.dwBufferSize == 0 ) { // No Control but Zero Length

  01180	e59d3110	 ldr         r3, [sp, #0x110]
  01184	e2833068	 add         r3, r3, #0x68
  01188	e5933000	 ldr         r3, [r3]
  0118c	e3530000	 cmp         r3, #0
  01190	1a00008e	 bne         |$LN16@AddTransfe|
  01194	e59d3110	 ldr         r3, [sp, #0x110]
  01198	e2833038	 add         r3, r3, #0x38
  0119c	e5933000	 ldr         r3, [r3]
  011a0	e3530000	 cmp         r3, #0
  011a4	1a000089	 bne         |$LN16@AddTransfe|

; 313  :         //ASSERT((m_sTransfer.dwFlags & USB_IN_TRANSFER)==0);// No meaning for IN Zero length packet.        
; 314  :         CQTD * pCurTD = new CQTD(this, ((CQueuedPipe * const)m_pCPipe)->GetQHead());

  011a8	e3a00038	 mov         r0, #0x38
  011ac	eb000000	 bl          |??2@YAPAXI@Z|
  011b0	e58d00a0	 str         r0, [sp, #0xA0]
  011b4	e59d30a0	 ldr         r3, [sp, #0xA0]
  011b8	e58d3034	 str         r3, [sp, #0x34]
  011bc	e59d3034	 ldr         r3, [sp, #0x34]
  011c0	e3530000	 cmp         r3, #0
  011c4	0a000013	 beq         |$LN39@AddTransfe|
  011c8	e59d3110	 ldr         r3, [sp, #0x110]
  011cc	e2833004	 add         r3, r3, #4
  011d0	e5932000	 ldr         r2, [r3]
  011d4	e59d3110	 ldr         r3, [sp, #0x110]
  011d8	e2833004	 add         r3, r3, #4
  011dc	e5930000	 ldr         r0, [r3]
  011e0	e5923000	 ldr         r3, [r2]
  011e4	e2833044	 add         r3, r3, #0x44
  011e8	e5933000	 ldr         r3, [r3]
  011ec	e1a0e00f	 mov         lr, pc
  011f0	e12fff13	 bx          r3
  011f4	e58d00a4	 str         r0, [sp, #0xA4]
  011f8	e59d20a4	 ldr         r2, [sp, #0xA4]
  011fc	e59d1110	 ldr         r1, [sp, #0x110]
  01200	e59d0034	 ldr         r0, [sp, #0x34]
  01204	eb000000	 bl          |??0CQTD@@QAA@PAVCQTransfer@@PAVCQH@@@Z|
  01208	e58d00a8	 str         r0, [sp, #0xA8]
  0120c	e59d30a8	 ldr         r3, [sp, #0xA8]
  01210	e58d30ac	 str         r3, [sp, #0xAC]
  01214	ea000001	 b           |$LN40@AddTransfe|
  01218		 |$LN39@AddTransfe|
  01218	e3a03000	 mov         r3, #0
  0121c	e58d30ac	 str         r3, [sp, #0xAC]
  01220		 |$LN40@AddTransfe|
  01220	e59d30ac	 ldr         r3, [sp, #0xAC]
  01224	e58d3010	 str         r3, [sp, #0x10]

; 315  :         if (pCurTD) {           

  01228	e59d3010	 ldr         r3, [sp, #0x10]
  0122c	e3530000	 cmp         r3, #0
  01230	0a00004c	 beq         |$LN15@AddTransfe|

; 316  :             m_pCPipe->GetQHead()->Lock();

  01234	e59d3110	 ldr         r3, [sp, #0x110]
  01238	e2833004	 add         r3, r3, #4
  0123c	e5932000	 ldr         r2, [r3]
  01240	e59d3110	 ldr         r3, [sp, #0x110]
  01244	e2833004	 add         r3, r3, #4
  01248	e5930000	 ldr         r0, [r3]
  0124c	e5923000	 ldr         r3, [r2]
  01250	e2833044	 add         r3, r3, #0x44
  01254	e5933000	 ldr         r3, [r3]
  01258	e1a0e00f	 mov         lr, pc
  0125c	e12fff13	 bx          r3
  01260	e58d00b0	 str         r0, [sp, #0xB0]
  01264	e59d00b0	 ldr         r0, [sp, #0xB0]
  01268	eb000000	 bl          |?Lock@CQH@@QAAXXZ|

; 317  :             pCurTD->SetBuffer(0, 0, 0);

  0126c	e3a03000	 mov         r3, #0
  01270	e3a02000	 mov         r2, #0
  01274	e3a01000	 mov         r1, #0
  01278	e59d0010	 ldr         r0, [sp, #0x10]
  0127c	eb000000	 bl          |?SetBuffer@CQTD@@QAAXKKK@Z|

; 318  :             pCurTD->SetTotTfrSize(0);

  01280	e3a01000	 mov         r1, #0
  01284	e59d0010	 ldr         r0, [sp, #0x10]
  01288	eb000000	 bl          |?SetTotTfrSize@CQTD@@QAAXK@Z|

; 319  :             pCurTD->SetCurTfrSize(0);

  0128c	e3a01000	 mov         r1, #0
  01290	e59d0010	 ldr         r0, [sp, #0x10]
  01294	eb000000	 bl          |?SetCurTfrSize@CQTD@@QAAXK@Z|

; 320  :             pCurTD->SetTDType(((m_sTransfer.dwFlags & USB_IN_TRANSFER)!=0? TD_DATA_IN: TD_DATA_OUT));

  01298	e59d3110	 ldr         r3, [sp, #0x110]
  0129c	e2833024	 add         r3, r3, #0x24
  012a0	e5933000	 ldr         r3, [r3]
  012a4	e3130080	 tst         r3, #0x80
  012a8	0a000002	 beq         |$LN41@AddTransfe|
  012ac	e3a03002	 mov         r3, #2
  012b0	e58d30b4	 str         r3, [sp, #0xB4]
  012b4	ea000001	 b           |$LN42@AddTransfe|
  012b8		 |$LN41@AddTransfe|
  012b8	e3a03003	 mov         r3, #3
  012bc	e58d30b4	 str         r3, [sp, #0xB4]
  012c0		 |$LN42@AddTransfe|
  012c0	e59d10b4	 ldr         r1, [sp, #0xB4]
  012c4	e59d0010	 ldr         r0, [sp, #0x10]
  012c8	eb000000	 bl          |?SetTDType@CQTD@@QAAXK@Z|

; 321  :             pCurTD->SetToggle(bDataToggle1);

  012cc	e59d100c	 ldr         r1, [sp, #0xC]
  012d0	e59d0010	 ldr         r0, [sp, #0x10]
  012d4	eb000000	 bl          |?SetToggle@CQTD@@QAAXH@Z|

; 322  :             pCurTD->SetStatus(STATUS_WAIT_TRANSFER);

  012d8	e3a01001	 mov         r1, #1
  012dc	e59d0010	 ldr         r0, [sp, #0x10]
  012e0	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|

; 323  :             pCurTD->SetPacketSize(dwPacketSize);

  012e4	e59d1008	 ldr         r1, [sp, #8]
  012e8	e59d0010	 ldr         r0, [sp, #0x10]
  012ec	eb000000	 bl          |?SetPacketSize@CQTD@@QAAXK@Z|

; 324  :             if (pPrevTD) {

  012f0	e59d3004	 ldr         r3, [sp, #4]
  012f4	e3530000	 cmp         r3, #0
  012f8	0a000005	 beq         |$LN14@AddTransfe|

; 325  :                 pPrevTD->QueueNextTD(pCurTD);

  012fc	e59d1010	 ldr         r1, [sp, #0x10]
  01300	e59d0004	 ldr         r0, [sp, #4]
  01304	eb000000	 bl          |?QueueNextTD@CQTD@@QAAPAV1@PAV1@@Z|

; 326  :                 pPrevTD=pCurTD;

  01308	e59d3010	 ldr         r3, [sp, #0x10]
  0130c	e58d3004	 str         r3, [sp, #4]

; 327  :             }
; 328  :             else { // THis is First. So update m_pQTDList

  01310	ea000005	 b           |$LN13@AddTransfe|
  01314		 |$LN14@AddTransfe|

; 329  :                 pPrevTD= m_pCQTDList = pCurTD;

  01314	e59d3110	 ldr         r3, [sp, #0x110]
  01318	e2832068	 add         r2, r3, #0x68
  0131c	e59d3010	 ldr         r3, [sp, #0x10]
  01320	e5823000	 str         r3, [r2]
  01324	e59d3010	 ldr         r3, [sp, #0x10]
  01328	e58d3004	 str         r3, [sp, #4]
  0132c		 |$LN13@AddTransfe|

; 330  :             }
; 331  :             m_pCPipe->GetQHead()->UnLock();

  0132c	e59d3110	 ldr         r3, [sp, #0x110]
  01330	e2833004	 add         r3, r3, #4
  01334	e5932000	 ldr         r2, [r3]
  01338	e59d3110	 ldr         r3, [sp, #0x110]
  0133c	e2833004	 add         r3, r3, #4
  01340	e5930000	 ldr         r0, [r3]
  01344	e5923000	 ldr         r3, [r2]
  01348	e2833044	 add         r3, r3, #0x44
  0134c	e5933000	 ldr         r3, [r3]
  01350	e1a0e00f	 mov         lr, pc
  01354	e12fff13	 bx          r3
  01358	e58d00b8	 str         r0, [sp, #0xB8]
  0135c	e59d00b8	 ldr         r0, [sp, #0xB8]
  01360	eb000000	 bl          |?UnLock@CQH@@QAAXXZ|

; 332  :         }
; 333  :         else {

  01364	ea000018	 b           |$LN12@AddTransfe|
  01368		 |$LN15@AddTransfe|

; 334  :             if ( pStatusTD) {

  01368	e59d3000	 ldr         r3, [sp]
  0136c	e3530000	 cmp         r3, #0
  01370	0a000012	 beq         |$LN11@AddTransfe|

; 335  :                 pStatusTD->~CQTD();

  01374	e3a01000	 mov         r1, #0
  01378	e59d0000	 ldr         r0, [sp]
  0137c	eb000000	 bl          |??_GCQTD@@QAAPAXI@Z|

; 336  :                 delete pStatusTD;

  01380	e59d3000	 ldr         r3, [sp]
  01384	e58d303c	 str         r3, [sp, #0x3C]
  01388	e59d303c	 ldr         r3, [sp, #0x3C]
  0138c	e58d3038	 str         r3, [sp, #0x38]
  01390	e59d3038	 ldr         r3, [sp, #0x38]
  01394	e3530000	 cmp         r3, #0
  01398	0a000006	 beq         |$LN43@AddTransfe|
  0139c	e3a01001	 mov         r1, #1
  013a0	e59d0038	 ldr         r0, [sp, #0x38]
  013a4	eb000000	 bl          |??_GCQTD@@QAAPAXI@Z|
  013a8	e58d00bc	 str         r0, [sp, #0xBC]
  013ac	e59d30bc	 ldr         r3, [sp, #0xBC]
  013b0	e58d30c0	 str         r3, [sp, #0xC0]
  013b4	ea000001	 b           |$LN44@AddTransfe|
  013b8		 |$LN43@AddTransfe|
  013b8	e3a03000	 mov         r3, #0
  013bc	e58d30c0	 str         r3, [sp, #0xC0]
  013c0		 |$LN44@AddTransfe|
  013c0		 |$LN11@AddTransfe|

; 337  :             }
; 338  :             return FALSE;                

  013c0	e3a03000	 mov         r3, #0
  013c4	e58d3054	 str         r3, [sp, #0x54]
  013c8	ea000126	 b           |$LN23@AddTransfe|
  013cc		 |$LN12@AddTransfe|

; 339  :         }
; 340  :     }
; 341  :     else

  013cc	ea0000cb	 b           |$LN10@AddTransfe|
  013d0		 |$LN16@AddTransfe|

; 342  :     if (m_sTransfer.lpvBuffer &&  m_sTransfer.paBuffer && m_sTransfer.dwBufferSize) {                

  013d0	e59d3110	 ldr         r3, [sp, #0x110]
  013d4	e283303c	 add         r3, r3, #0x3C
  013d8	e5933000	 ldr         r3, [r3]
  013dc	e3530000	 cmp         r3, #0
  013e0	0a0000c6	 beq         |$LN9@AddTransfe|
  013e4	e59d3110	 ldr         r3, [sp, #0x110]
  013e8	e2833040	 add         r3, r3, #0x40
  013ec	e5933000	 ldr         r3, [r3]
  013f0	e3530000	 cmp         r3, #0
  013f4	0a0000c1	 beq         |$LN9@AddTransfe|
  013f8	e59d3110	 ldr         r3, [sp, #0x110]
  013fc	e2833038	 add         r3, r3, #0x38
  01400	e5933000	 ldr         r3, [r3]
  01404	e3530000	 cmp         r3, #0
  01408	0a0000bc	 beq         |$LN9@AddTransfe|

; 343  :         BOOL  bZeroLength = FALSE;        

  0140c	e3a03000	 mov         r3, #0
  01410	e58d301c	 str         r3, [sp, #0x1C]

; 344  :         
; 345  :         // If this is an OUT transaction and total length is multiple of packet size
; 346  :         if (((m_sTransfer.dwFlags & USB_IN_TRANSFER)==0) && (m_sTransfer.dwBufferSize%dwPacketSize==0))

  01414	e59d3110	 ldr         r3, [sp, #0x110]
  01418	e2833024	 add         r3, r3, #0x24
  0141c	e5933000	 ldr         r3, [r3]
  01420	e3130080	 tst         r3, #0x80
  01424	1a000008	 bne         |$LN8@AddTransfe|
  01428	e59d3110	 ldr         r3, [sp, #0x110]
  0142c	e2833038	 add         r3, r3, #0x38
  01430	e5931000	 ldr         r1, [r3]
  01434	e59d0008	 ldr         r0, [sp, #8]
  01438	eb000000	 bl          __rt_udiv
  0143c	e3510000	 cmp         r1, #0
  01440	1a000001	 bne         |$LN8@AddTransfe|

; 347  :             bZeroLength = TRUE;

  01444	e3a03001	 mov         r3, #1
  01448	e58d301c	 str         r3, [sp, #0x1C]
  0144c		 |$LN8@AddTransfe|

; 348  : 
; 349  :         // We just setup one single CQTD here, let the WriteFIFO handle that.                
; 350  :         CQTD * pCurTD = new CQTD(this, ((CQueuedPipe * const)m_pCPipe)->GetQHead());

  0144c	e3a00038	 mov         r0, #0x38
  01450	eb000000	 bl          |??2@YAPAXI@Z|
  01454	e58d00c4	 str         r0, [sp, #0xC4]
  01458	e59d30c4	 ldr         r3, [sp, #0xC4]
  0145c	e58d3040	 str         r3, [sp, #0x40]
  01460	e59d3040	 ldr         r3, [sp, #0x40]
  01464	e3530000	 cmp         r3, #0
  01468	0a000013	 beq         |$LN45@AddTransfe|
  0146c	e59d3110	 ldr         r3, [sp, #0x110]
  01470	e2833004	 add         r3, r3, #4
  01474	e5932000	 ldr         r2, [r3]
  01478	e59d3110	 ldr         r3, [sp, #0x110]
  0147c	e2833004	 add         r3, r3, #4
  01480	e5930000	 ldr         r0, [r3]
  01484	e5923000	 ldr         r3, [r2]
  01488	e2833044	 add         r3, r3, #0x44
  0148c	e5933000	 ldr         r3, [r3]
  01490	e1a0e00f	 mov         lr, pc
  01494	e12fff13	 bx          r3
  01498	e58d00c8	 str         r0, [sp, #0xC8]
  0149c	e59d20c8	 ldr         r2, [sp, #0xC8]
  014a0	e59d1110	 ldr         r1, [sp, #0x110]
  014a4	e59d0040	 ldr         r0, [sp, #0x40]
  014a8	eb000000	 bl          |??0CQTD@@QAA@PAVCQTransfer@@PAVCQH@@@Z|
  014ac	e58d00cc	 str         r0, [sp, #0xCC]
  014b0	e59d30cc	 ldr         r3, [sp, #0xCC]
  014b4	e58d30d0	 str         r3, [sp, #0xD0]
  014b8	ea000001	 b           |$LN46@AddTransfe|
  014bc		 |$LN45@AddTransfe|
  014bc	e3a03000	 mov         r3, #0
  014c0	e58d30d0	 str         r3, [sp, #0xD0]
  014c4		 |$LN46@AddTransfe|
  014c4	e59d30d0	 ldr         r3, [sp, #0xD0]
  014c8	e58d3018	 str         r3, [sp, #0x18]

; 351  :         ASSERT(pCurTD!=NULL);

  014cc	e59d3018	 ldr         r3, [sp, #0x18]
  014d0	e3530000	 cmp         r3, #0
  014d4	0a000002	 beq         |$LN47@AddTransfe|
  014d8	e3a03001	 mov         r3, #1
  014dc	e58d30d4	 str         r3, [sp, #0xD4]
  014e0	ea000008	 b           |$LN48@AddTransfe|
  014e4		 |$LN47@AddTransfe|
  014e4	e3a03c01	 mov         r3, #1, 24
  014e8	e383305f	 orr         r3, r3, #0x5F
  014ec	e59f238c	 ldr         r2, [pc, #0x38C]
  014f0	e59f1384	 ldr         r1, [pc, #0x384]
  014f4	e59f037c	 ldr         r0, [pc, #0x37C]
  014f8	eb000000	 bl          NKDbgPrintfW
  014fc	e6000010	 __debugbreak_ce
  01500	e3a03000	 mov         r3, #0
  01504	e58d30d4	 str         r3, [sp, #0xD4]
  01508		 |$LN48@AddTransfe|

; 352  :         if (pCurTD==NULL) {

  01508	e59d3018	 ldr         r3, [sp, #0x18]
  0150c	e3530000	 cmp         r3, #0
  01510	1a000018	 bne         |$LN7@AddTransfe|

; 353  :             // delete  pStatusTD;
; 354  :             if ( pStatusTD) {

  01514	e59d3000	 ldr         r3, [sp]
  01518	e3530000	 cmp         r3, #0
  0151c	0a000012	 beq         |$LN6@AddTransfe|

; 355  :                 pStatusTD->~CQTD();

  01520	e3a01000	 mov         r1, #0
  01524	e59d0000	 ldr         r0, [sp]
  01528	eb000000	 bl          |??_GCQTD@@QAAPAXI@Z|

; 356  :                 delete pStatusTD;

  0152c	e59d3000	 ldr         r3, [sp]
  01530	e58d3048	 str         r3, [sp, #0x48]
  01534	e59d3048	 ldr         r3, [sp, #0x48]
  01538	e58d3044	 str         r3, [sp, #0x44]
  0153c	e59d3044	 ldr         r3, [sp, #0x44]
  01540	e3530000	 cmp         r3, #0
  01544	0a000006	 beq         |$LN49@AddTransfe|
  01548	e3a01001	 mov         r1, #1
  0154c	e59d0044	 ldr         r0, [sp, #0x44]
  01550	eb000000	 bl          |??_GCQTD@@QAAPAXI@Z|
  01554	e58d00d8	 str         r0, [sp, #0xD8]
  01558	e59d30d8	 ldr         r3, [sp, #0xD8]
  0155c	e58d30dc	 str         r3, [sp, #0xDC]
  01560	ea000001	 b           |$LN50@AddTransfe|
  01564		 |$LN49@AddTransfe|
  01564	e3a03000	 mov         r3, #0
  01568	e58d30dc	 str         r3, [sp, #0xDC]
  0156c		 |$LN50@AddTransfe|
  0156c		 |$LN6@AddTransfe|

; 357  :             }
; 358  :             return FALSE;                

  0156c	e3a03000	 mov         r3, #0
  01570	e58d3054	 str         r3, [sp, #0x54]
  01574	ea0000bb	 b           |$LN23@AddTransfe|
  01578		 |$LN7@AddTransfe|

; 359  :         }                
; 360  :         DWORD dwCurPhysAddr=  m_sTransfer.paBuffer;

  01578	e59d3110	 ldr         r3, [sp, #0x110]
  0157c	e2833040	 add         r3, r3, #0x40
  01580	e5933000	 ldr         r3, [r3]
  01584	e58d3020	 str         r3, [sp, #0x20]

; 361  :         DWORD dwCurVirtAddr = (m_pAllocatedForClient != NULL)?(DWORD)m_pAllocatedForClient:(DWORD)m_sTransfer.lpvBuffer;

  01588	e59d3110	 ldr         r3, [sp, #0x110]
  0158c	e2833014	 add         r3, r3, #0x14
  01590	e5933000	 ldr         r3, [r3]
  01594	e3530000	 cmp         r3, #0
  01598	0a000004	 beq         |$LN51@AddTransfe|
  0159c	e59d3110	 ldr         r3, [sp, #0x110]
  015a0	e2833014	 add         r3, r3, #0x14
  015a4	e5933000	 ldr         r3, [r3]
  015a8	e58d30e0	 str         r3, [sp, #0xE0]
  015ac	ea000003	 b           |$LN52@AddTransfe|
  015b0		 |$LN51@AddTransfe|
  015b0	e59d3110	 ldr         r3, [sp, #0x110]
  015b4	e283303c	 add         r3, r3, #0x3C
  015b8	e5933000	 ldr         r3, [r3]
  015bc	e58d30e0	 str         r3, [sp, #0xE0]
  015c0		 |$LN52@AddTransfe|
  015c0	e59d30e0	 ldr         r3, [sp, #0xE0]
  015c4	e58d3014	 str         r3, [sp, #0x14]

; 362  :         m_pCPipe->GetQHead()->Lock();

  015c8	e59d3110	 ldr         r3, [sp, #0x110]
  015cc	e2833004	 add         r3, r3, #4
  015d0	e5932000	 ldr         r2, [r3]
  015d4	e59d3110	 ldr         r3, [sp, #0x110]
  015d8	e2833004	 add         r3, r3, #4
  015dc	e5930000	 ldr         r0, [r3]
  015e0	e5923000	 ldr         r3, [r2]
  015e4	e2833044	 add         r3, r3, #0x44
  015e8	e5933000	 ldr         r3, [r3]
  015ec	e1a0e00f	 mov         lr, pc
  015f0	e12fff13	 bx          r3
  015f4	e58d00e4	 str         r0, [sp, #0xE4]
  015f8	e59d00e4	 ldr         r0, [sp, #0xE4]
  015fc	eb000000	 bl          |?Lock@CQH@@QAAXXZ|

; 363  :         pCurTD->SetBuffer(dwCurPhysAddr, dwCurVirtAddr, m_sTransfer.dwBufferSize);

  01600	e59d3110	 ldr         r3, [sp, #0x110]
  01604	e2833038	 add         r3, r3, #0x38
  01608	e5933000	 ldr         r3, [r3]
  0160c	e59d2014	 ldr         r2, [sp, #0x14]
  01610	e59d1020	 ldr         r1, [sp, #0x20]
  01614	e59d0018	 ldr         r0, [sp, #0x18]
  01618	eb000000	 bl          |?SetBuffer@CQTD@@QAAXKKK@Z|

; 364  :         pCurTD->SetTotTfrSize(0);

  0161c	e3a01000	 mov         r1, #0
  01620	e59d0018	 ldr         r0, [sp, #0x18]
  01624	eb000000	 bl          |?SetTotTfrSize@CQTD@@QAAXK@Z|

; 365  :         pCurTD->SetCurTfrSize(0);

  01628	e3a01000	 mov         r1, #0
  0162c	e59d0018	 ldr         r0, [sp, #0x18]
  01630	eb000000	 bl          |?SetCurTfrSize@CQTD@@QAAXK@Z|

; 366  :         pCurTD->SetTDType(((m_sTransfer.dwFlags & USB_IN_TRANSFER)!=0?TD_DATA_IN:TD_DATA_OUT));

  01634	e59d3110	 ldr         r3, [sp, #0x110]
  01638	e2833024	 add         r3, r3, #0x24
  0163c	e5933000	 ldr         r3, [r3]
  01640	e3130080	 tst         r3, #0x80
  01644	0a000002	 beq         |$LN53@AddTransfe|
  01648	e3a03002	 mov         r3, #2
  0164c	e58d30e8	 str         r3, [sp, #0xE8]
  01650	ea000001	 b           |$LN54@AddTransfe|
  01654		 |$LN53@AddTransfe|
  01654	e3a03003	 mov         r3, #3
  01658	e58d30e8	 str         r3, [sp, #0xE8]
  0165c		 |$LN54@AddTransfe|
  0165c	e59d10e8	 ldr         r1, [sp, #0xE8]
  01660	e59d0018	 ldr         r0, [sp, #0x18]
  01664	eb000000	 bl          |?SetTDType@CQTD@@QAAXK@Z|

; 367  :         pCurTD->SetToggle(bDataToggle1);

  01668	e59d100c	 ldr         r1, [sp, #0xC]
  0166c	e59d0018	 ldr         r0, [sp, #0x18]
  01670	eb000000	 bl          |?SetToggle@CQTD@@QAAXH@Z|

; 368  :         pCurTD->SetStatus(STATUS_WAIT_TRANSFER);

  01674	e3a01001	 mov         r1, #1
  01678	e59d0018	 ldr         r0, [sp, #0x18]
  0167c	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|

; 369  :         pCurTD->SetPacketSize(dwPacketSize);

  01680	e59d1008	 ldr         r1, [sp, #8]
  01684	e59d0018	 ldr         r0, [sp, #0x18]
  01688	eb000000	 bl          |?SetPacketSize@CQTD@@QAAXK@Z|

; 370  :         if (pPrevTD) {

  0168c	e59d3004	 ldr         r3, [sp, #4]
  01690	e3530000	 cmp         r3, #0
  01694	0a000005	 beq         |$LN5@AddTransfe|

; 371  :             pPrevTD->QueueNextTD(pCurTD);

  01698	e59d1018	 ldr         r1, [sp, #0x18]
  0169c	e59d0004	 ldr         r0, [sp, #4]
  016a0	eb000000	 bl          |?QueueNextTD@CQTD@@QAAPAV1@PAV1@@Z|

; 372  :             pPrevTD=pCurTD;

  016a4	e59d3018	 ldr         r3, [sp, #0x18]
  016a8	e58d3004	 str         r3, [sp, #4]

; 373  :         }
; 374  :         else { // THis is First. So update m_pQTDList

  016ac	ea000005	 b           |$LN4@AddTransfe|
  016b0		 |$LN5@AddTransfe|

; 375  :             pPrevTD= m_pCQTDList = pCurTD;

  016b0	e59d3110	 ldr         r3, [sp, #0x110]
  016b4	e2832068	 add         r2, r3, #0x68
  016b8	e59d3018	 ldr         r3, [sp, #0x18]
  016bc	e5823000	 str         r3, [r2]
  016c0	e59d3018	 ldr         r3, [sp, #0x18]
  016c4	e58d3004	 str         r3, [sp, #4]
  016c8		 |$LN4@AddTransfe|

; 376  :         }
; 377  :         m_pCPipe->GetQHead()->UnLock();

  016c8	e59d3110	 ldr         r3, [sp, #0x110]
  016cc	e2833004	 add         r3, r3, #4
  016d0	e5932000	 ldr         r2, [r3]
  016d4	e59d3110	 ldr         r3, [sp, #0x110]
  016d8	e2833004	 add         r3, r3, #4
  016dc	e5930000	 ldr         r0, [r3]
  016e0	e5923000	 ldr         r3, [r2]
  016e4	e2833044	 add         r3, r3, #0x44
  016e8	e5933000	 ldr         r3, [r3]
  016ec	e1a0e00f	 mov         lr, pc
  016f0	e12fff13	 bx          r3
  016f4	e58d00ec	 str         r0, [sp, #0xEC]
  016f8	e59d00ec	 ldr         r0, [sp, #0xEC]
  016fc	eb000000	 bl          |?UnLock@CQH@@QAAXXZ|
  01700		 |$LN9@AddTransfe|
  01700		 |$LN10@AddTransfe|

; 378  : 
; 379  :     } // end of else if 
; 380  :     // We have to append Status TD here.
; 381  :     if (pStatusTD) { // This is setup packet.

  01700	e59d3000	 ldr         r3, [sp]
  01704	e3530000	 cmp         r3, #0
  01708	0a000054	 beq         |$LN3@AddTransfe|

; 382  :         m_pCPipe->GetQHead()->Lock();

  0170c	e59d3110	 ldr         r3, [sp, #0x110]
  01710	e2833004	 add         r3, r3, #4
  01714	e5932000	 ldr         r2, [r3]
  01718	e59d3110	 ldr         r3, [sp, #0x110]
  0171c	e2833004	 add         r3, r3, #4
  01720	e5930000	 ldr         r0, [r3]
  01724	e5923000	 ldr         r3, [r2]
  01728	e2833044	 add         r3, r3, #0x44
  0172c	e5933000	 ldr         r3, [r3]
  01730	e1a0e00f	 mov         lr, pc
  01734	e12fff13	 bx          r3
  01738	e58d00f0	 str         r0, [sp, #0xF0]
  0173c	e59d00f0	 ldr         r0, [sp, #0xF0]
  01740	eb000000	 bl          |?Lock@CQH@@QAAXXZ|

; 383  :         if (pPrevTD) {

  01744	e59d3004	 ldr         r3, [sp, #4]
  01748	e3530000	 cmp         r3, #0
  0174c	0a000005	 beq         |$LN2@AddTransfe|

; 384  :             pPrevTD->QueueNextTD(pStatusTD);

  01750	e59d1000	 ldr         r1, [sp]
  01754	e59d0004	 ldr         r0, [sp, #4]
  01758	eb000000	 bl          |?QueueNextTD@CQTD@@QAAPAV1@PAV1@@Z|

; 385  :             pPrevTD=pStatusTD;

  0175c	e59d3000	 ldr         r3, [sp]
  01760	e58d3004	 str         r3, [sp, #4]

; 386  :         }
; 387  :         else { // Something Wrong.

  01764	ea00002f	 b           |$LN1@AddTransfe|
  01768		 |$LN2@AddTransfe|

; 388  :             ASSERT(FALSE);

  01768	ea000002	 b           |$LN55@AddTransfe|
  0176c	e3a03001	 mov         r3, #1
  01770	e58d30f4	 str         r3, [sp, #0xF4]
  01774	ea000007	 b           |$LN56@AddTransfe|
  01778		 |$LN55@AddTransfe|
  01778	e3a03f61	 mov         r3, #0x61, 30
  0177c	e59f20fc	 ldr         r2, [pc, #0xFC]
  01780	e59f10f4	 ldr         r1, [pc, #0xF4]
  01784	e59f00ec	 ldr         r0, [pc, #0xEC]
  01788	eb000000	 bl          NKDbgPrintfW
  0178c	e6000010	 __debugbreak_ce
  01790	e3a03000	 mov         r3, #0
  01794	e58d30f4	 str         r3, [sp, #0xF4]
  01798		 |$LN56@AddTransfe|

; 389  :             //delete pCurTD;
; 390  :             pStatusTD->~CQTD();

  01798	e3a01000	 mov         r1, #0
  0179c	e59d0000	 ldr         r0, [sp]
  017a0	eb000000	 bl          |??_GCQTD@@QAAPAXI@Z|

; 391  :             m_pCPipe->GetQHead()->UnLock();

  017a4	e59d3110	 ldr         r3, [sp, #0x110]
  017a8	e2833004	 add         r3, r3, #4
  017ac	e5932000	 ldr         r2, [r3]
  017b0	e59d3110	 ldr         r3, [sp, #0x110]
  017b4	e2833004	 add         r3, r3, #4
  017b8	e5930000	 ldr         r0, [r3]
  017bc	e5923000	 ldr         r3, [r2]
  017c0	e2833044	 add         r3, r3, #0x44
  017c4	e5933000	 ldr         r3, [r3]
  017c8	e1a0e00f	 mov         lr, pc
  017cc	e12fff13	 bx          r3
  017d0	e58d00f8	 str         r0, [sp, #0xF8]
  017d4	e59d00f8	 ldr         r0, [sp, #0xF8]
  017d8	eb000000	 bl          |?UnLock@CQH@@QAAXXZ|

; 392  :             delete pStatusTD;

  017dc	e59d3000	 ldr         r3, [sp]
  017e0	e58d3050	 str         r3, [sp, #0x50]
  017e4	e59d3050	 ldr         r3, [sp, #0x50]
  017e8	e58d304c	 str         r3, [sp, #0x4C]
  017ec	e59d304c	 ldr         r3, [sp, #0x4C]
  017f0	e3530000	 cmp         r3, #0
  017f4	0a000006	 beq         |$LN57@AddTransfe|
  017f8	e3a01001	 mov         r1, #1
  017fc	e59d004c	 ldr         r0, [sp, #0x4C]
  01800	eb000000	 bl          |??_GCQTD@@QAAPAXI@Z|
  01804	e58d00fc	 str         r0, [sp, #0xFC]
  01808	e59d30fc	 ldr         r3, [sp, #0xFC]
  0180c	e58d3100	 str         r3, [sp, #0x100]
  01810	ea000001	 b           |$LN58@AddTransfe|
  01814		 |$LN57@AddTransfe|
  01814	e3a03000	 mov         r3, #0
  01818	e58d3100	 str         r3, [sp, #0x100]
  0181c		 |$LN58@AddTransfe|

; 393  :             return FALSE;

  0181c	e3a03000	 mov         r3, #0
  01820	e58d3054	 str         r3, [sp, #0x54]
  01824	ea00000f	 b           |$LN23@AddTransfe|
  01828		 |$LN1@AddTransfe|

; 394  :         }
; 395  :         m_pCPipe->GetQHead()->UnLock();

  01828	e59d3110	 ldr         r3, [sp, #0x110]
  0182c	e2833004	 add         r3, r3, #4
  01830	e5932000	 ldr         r2, [r3]
  01834	e59d3110	 ldr         r3, [sp, #0x110]
  01838	e2833004	 add         r3, r3, #4
  0183c	e5930000	 ldr         r0, [r3]
  01840	e5923000	 ldr         r3, [r2]
  01844	e2833044	 add         r3, r3, #0x44
  01848	e5933000	 ldr         r3, [r3]
  0184c	e1a0e00f	 mov         lr, pc
  01850	e12fff13	 bx          r3
  01854	e58d0104	 str         r0, [sp, #0x104]
  01858	e59d0104	 ldr         r0, [sp, #0x104]
  0185c	eb000000	 bl          |?UnLock@CQH@@QAAXXZ|
  01860		 |$LN3@AddTransfe|

; 396  :     };
; 397  :     return TRUE;    

  01860	e3a03001	 mov         r3, #1
  01864	e58d3054	 str         r3, [sp, #0x54]
  01868		 |$LN23@AddTransfe|

; 398  : }

  01868	e59d0054	 ldr         r0, [sp, #0x54]
  0186c	e28ddf42	 add         sp, sp, #0x42, 30
  01870	e89d6000	 ldmia       sp, {sp, lr}
  01874	e12fff1e	 bx          lr
  01878		 |$LN62@AddTransfe|
  01878		 |$LN63@AddTransfe|
  01878	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  0187c		 |$LN64@AddTransfe|
  0187c	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  01880		 |$LN65@AddTransfe|
  01880	00000000	 DCD         |??_C@_1LK@IFLKDCCK@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  01884		 |$LN66@AddTransfe|
  01884	00000000	 DCD         |??_C@_1HA@FEFOFBPM@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAd?$AAd?$AA?5?$AAs?$AAi?$AAn?$AAc@|
  01888		 |$LN67@AddTransfe|
  01888	00000000	 DCD         |dpCurSettings|
  0188c		 |$LN68@AddTransfe|
  0188c	00000000	 DCD         |??_C@_1FM@HOOBCKCH@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAd?$AAd?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs?$AA?$DN?$AA0?$AAx@|
  01890		 |$M37391|

			 ENDP  ; |?AddTransfer@CQTransfer@@UAAHXZ|, CQTransfer::AddTransfer

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.h

  00000			 AREA	 |.pdata|, PDATA
|$T37405| DCD	|$LN5@SetBuffer|
	DCD	0x40001103
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetBuffer@CQTD@@QAAXKKK@Z| PROC	; CQTD::SetBuffer

; 82   :     void SetBuffer(DWORD dwPAData, DWORD dwVAData, DWORD cbData) { m_dwPAData=dwPAData; m_dwVAData=dwVAData; m_cbData=cbData;};

  00000		 |$LN5@SetBuffer|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37402|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2832010	 add         r2, r3, #0x10
  00014	e59d300c	 ldr         r3, [sp, #0xC]
  00018	e5823000	 str         r3, [r2]
  0001c	e59d3008	 ldr         r3, [sp, #8]
  00020	e2832014	 add         r2, r3, #0x14
  00024	e59d3010	 ldr         r3, [sp, #0x10]
  00028	e5823000	 str         r3, [r2]
  0002c	e59d3008	 ldr         r3, [sp, #8]
  00030	e2832018	 add         r2, r3, #0x18
  00034	e59d3014	 ldr         r3, [sp, #0x14]
  00038	e5823000	 str         r3, [r2]
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M37403|

			 ENDP  ; |?SetBuffer@CQTD@@QAAXKKK@Z|, CQTD::SetBuffer


  00000			 AREA	 |.pdata|, PDATA
|$T37412| DCD	|$LN5@SetTDType|
	DCD	0x40000903
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetTDType@CQTD@@QAAXK@Z| PROC	; CQTD::SetTDType

; 83   :     void SetTDType(DWORD type) { m_dwTDType = type;};

  00000		 |$LN5@SetTDType|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37409|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e283200c	 add         r2, r3, #0xC
  00014	e59d300c	 ldr         r3, [sp, #0xC]
  00018	e5823000	 str         r3, [r2]
  0001c	e89d6000	 ldmia       sp, {sp, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$M37410|

			 ENDP  ; |?SetTDType@CQTD@@QAAXK@Z|, CQTD::SetTDType


  00000			 AREA	 |.pdata|, PDATA
|$T37419| DCD	|$LN5@SetToggle|
	DCD	0x40000903
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetToggle@CQTD@@QAAXH@Z| PROC	; CQTD::SetToggle

; 84   :     void SetToggle(BOOL bToggle) { m_bDataToggle = bToggle;};

  00000		 |$LN5@SetToggle|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37416|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2832024	 add         r2, r3, #0x24
  00014	e59d300c	 ldr         r3, [sp, #0xC]
  00018	e5823000	 str         r3, [r2]
  0001c	e89d6000	 ldmia       sp, {sp, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$M37417|

			 ENDP  ; |?SetToggle@CQTD@@QAAXH@Z|, CQTD::SetToggle


  00000			 AREA	 |.pdata|, PDATA
|$T37426| DCD	|$LN5@SetStatus|
	DCD	0x40000903
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetStatus@CQTD@@QAAXK@Z| PROC	; CQTD::SetStatus

; 85   :     void SetStatus(DWORD status) { m_dwStatus = status;};

  00000		 |$LN5@SetStatus|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37423|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2832028	 add         r2, r3, #0x28
  00014	e59d300c	 ldr         r3, [sp, #0xC]
  00018	e5823000	 str         r3, [r2]
  0001c	e89d6000	 ldmia       sp, {sp, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$M37424|

			 ENDP  ; |?SetStatus@CQTD@@QAAXK@Z|, CQTD::SetStatus


  00000			 AREA	 |.pdata|, PDATA
|$T37433| DCD	|$LN5@SetTotTfrS|
	DCD	0x40000903
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetTotTfrSize@CQTD@@QAAXK@Z| PROC	; CQTD::SetTotTfrSize

; 86   :     void SetTotTfrSize(DWORD size) { m_cbTransferred = size;};

  00000		 |$LN5@SetTotTfrS|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37430|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e283201c	 add         r2, r3, #0x1C
  00014	e59d300c	 ldr         r3, [sp, #0xC]
  00018	e5823000	 str         r3, [r2]
  0001c	e89d6000	 ldmia       sp, {sp, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$M37431|

			 ENDP  ; |?SetTotTfrSize@CQTD@@QAAXK@Z|, CQTD::SetTotTfrSize


  00000			 AREA	 |.pdata|, PDATA
|$T37440| DCD	|$LN5@SetCurTfrS|
	DCD	0x40000903
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetCurTfrSize@CQTD@@QAAXK@Z| PROC	; CQTD::SetCurTfrSize

; 87   :     void SetCurTfrSize(DWORD size) { m_cbCurTransferred = size;};

  00000		 |$LN5@SetCurTfrS|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37437|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2832020	 add         r2, r3, #0x20
  00014	e59d300c	 ldr         r3, [sp, #0xC]
  00018	e5823000	 str         r3, [r2]
  0001c	e89d6000	 ldmia       sp, {sp, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$M37438|

			 ENDP  ; |?SetCurTfrSize@CQTD@@QAAXK@Z|, CQTD::SetCurTfrSize


  00000			 AREA	 |.pdata|, PDATA
|$T37447| DCD	|$LN5@SetPacketS|
	DCD	0x40000903
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetPacketSize@CQTD@@QAAXK@Z| PROC	; CQTD::SetPacketSize

; 88   :     void SetPacketSize(DWORD dwPacketSize) {m_dwPacketSize = dwPacketSize;};

  00000		 |$LN5@SetPacketS|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37444|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e283202c	 add         r2, r3, #0x2C
  00014	e59d300c	 ldr         r3, [sp, #0xC]
  00018	e5823000	 str         r3, [r2]
  0001c	e89d6000	 ldmia       sp, {sp, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$M37445|

			 ENDP  ; |?SetPacketSize@CQTD@@QAAXK@Z|, CQTD::SetPacketSize

	IMPORT	|EnterCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37454| DCD	|$LN5@Lock|
	DCD	0x40000803
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Lock@CQH@@QAAXXZ| PROC		; CQH::Lock

; 150  :     void Lock() { EnterCriticalSection(&m_csCQTD); };

  00000		 |$LN5@Lock|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37451|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e283000c	 add         r0, r3, #0xC
  00014	eb000000	 bl          EnterCriticalSection
  00018	e89d6000	 ldmia       sp, {sp, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$M37452|

			 ENDP  ; |?Lock@CQH@@QAAXXZ|, CQH::Lock

	IMPORT	|LeaveCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37461| DCD	|$LN5@UnLock|
	DCD	0x40000803
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UnLock@CQH@@QAAXXZ| PROC		; CQH::UnLock

; 151  :     void UnLock() { LeaveCriticalSection(&m_csCQTD); };

  00000		 |$LN5@UnLock|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M37458|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e283000c	 add         r0, r3, #0xC
  00014	eb000000	 bl          LeaveCriticalSection
  00018	e89d6000	 ldmia       sp, {sp, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$M37459|

			 ENDP  ; |?UnLock@CQH@@QAAXXZ|, CQH::UnLock

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.h

  00000			 AREA	 |.pdata|, PDATA
|$T37469| DCD	|$LN5@GetEndptDe|
	DCD	0x40000f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetEndptDescriptor@CPipe@@QAA?AU_USB_ENDPOINT_DESCRIPTOR@@XZ| PROC ; CPipe::GetEndptDescriptor

; 96   :     USB_ENDPOINT_DESCRIPTOR GetEndptDescriptor() { return m_usbEndpointDescriptor;};

  00000		 |$LN5@GetEndptDe|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37466|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2831034	 add         r1, r3, #0x34
  00018	e59d0010	 ldr         r0, [sp, #0x10]
  0001c	e3a02007	 mov         r2, #7
  00020	eb000000	 bl          memcpy
  00024	e59d3010	 ldr         r3, [sp, #0x10]
  00028	e58d3000	 str         r3, [sp]
  0002c	e59d0000	 ldr         r0, [sp]
  00030	e28dd004	 add         sp, sp, #4
  00034	e89d6000	 ldmia       sp, {sp, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M37467|

			 ENDP  ; |?GetEndptDescriptor@CPipe@@QAA?AU_USB_ENDPOINT_DESCRIPTOR@@XZ|, CPipe::GetEndptDescriptor

	EXPORT	|??_C@_1LA@PHHAKCJP@?$AAC?$AAQ?$AAu?$AAe?$AAu?$AAe?$AAd?$AAP?$AAi?$AAp?$AAe?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?3?$AA?3?$AAC?$AAh?$AAe?$AAc?$AAk?$AAF?$AAo?$AAr?$AAD?$AAo?$AAn?$AAe?$AAT?$AAr?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KM@FIEIPHCN@?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?5?$AAe?$AAp?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?5?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?5?$AAd?$AAe?$AAv?$AA?5?$AA?$CF?$AAd?$AA?5?$AAa?$AAb?$AAo?$AAv@| [ DATA ] ; `string'
	EXPORT	|??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JI@PLBLPEPC@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAD?$AAo?$AAn?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe@| [ DATA ] ; `string'
	EXPORT	|?GetMappedEndPoint@CPipe@@QAAEXZ|	; CPipe::GetMappedEndPoint
	EXPORT	|?GetTDType@CQTD@@QAAKXZ|		; CQTD::GetTDType
	EXPORT	|?GetStatus@CQTD@@QAAKXZ|		; CQTD::GetStatus
	EXPORT	|?IsTransferDone@CQTransfer@@QAAHXZ|	; CQTransfer::IsTransferDone
	EXPORT	|??_C@_1FO@HOCBNIDJ@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAD?$AAo?$AAn?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs?$AA?$DN?$AA0@| [ DATA ] ; `string'
	EXPORT	|?DoneTransfer@CQTransfer@@QAAHXZ|	; CQTransfer::DoneTransfer
	IMPORT	|?ReleasePhysicalEndPoint@CHW@@QAAHPAVCPipe@@HH@Z| ; CHW::ReleasePhysicalEndPoint
	IMPORT	|?ReleaseDMAChannel@CHW@@QAAHPAVCPipe@@E@Z| ; CHW::ReleaseDMAChannel
	IMPORT	|?DeviceInfo2Channel@CHW@@QAAEPAVCPipe@@@Z| ; CHW::DeviceInfo2Channel
	IMPORT	|?SetDataToggle@CPipe@@QAAXE@Z|		; CPipe::SetDataToggle
	IMPORT	|?GetCurrentToggleBit@CHW@@QAAEEE@Z|	; CHW::GetCurrentToggleBit

  00040			 AREA	 |.pdata|, PDATA
|$T37515| DCD	|$LN67@DoneTransf|
	DCD	0xc001d205
|$T37517| DCD	|$LN56@DoneTransf|
	DCD	0x40000502
|$T37519| DCD	|$LN49@DoneTransf|
	DCD	0x40000f02
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\trans.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LA@PHHAKCJP@?$AAC?$AAQ?$AAu?$AAe?$AAu?$AAe?$AAd?$AAP?$AAi?$AAp?$AAe?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?3?$AA?3?$AAC?$AAh?$AAe?$AAc?$AAk?$AAF?$AAo?$AAr?$AAD?$AAo?$AAn?$AAe?$AAT?$AAr?$AAa@| DCB "C"
	DCB	0x0, "Q", 0x0, "u", 0x0, "e", 0x0, "u", 0x0, "e", 0x0, "d"
	DCB	0x0, "P", 0x0, "i", 0x0, "p", 0x0, "e", 0x0, "(", 0x0, "%"
	DCB	0x0, "s", 0x0, ")", 0x0, ":", 0x0, ":", 0x0, "C", 0x0, "h"
	DCB	0x0, "e", 0x0, "c", 0x0, "k", 0x0, "F", 0x0, "o", 0x0, "r"
	DCB	0x0, "D", 0x0, "o", 0x0, "n", 0x0, "e", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "s", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "e", 0x0, "x"
	DCB	0x0, "c", 0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "t", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "s", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KM@FIEIPHCN@?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?5?$AAe?$AAp?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?5?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?5?$AAd?$AAe?$AAv?$AA?5?$AA?$CF?$AAd?$AA?5?$AAa?$AAb?$AAo?$AAv@| DCB "N"
	DCB	0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f", 0x0, "y", 0x0, " "
	DCB	0x0, "e", 0x0, "p", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ")", 0x0, " ", 0x0, "(", 0x0, "%", 0x0, "s"
	DCB	0x0, ")", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "v", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, "a", 0x0, "b", 0x0, "o"
	DCB	0x0, "v", 0x0, "e", 0x0, " ", 0x0, "w", 0x0, "i", 0x0, "t"
	DCB	0x0, "h", 0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, ",", 0x0, " ", 0x0, "d", 0x0, "w", 0x0, "D"
	DCB	0x0, "a", 0x0, "t", 0x0, "a", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "e", 0x0, "d", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, ",", 0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@| DCB "O", 0x0, "U", 0x0, "T", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@| DCB "I", 0x0, "N", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JI@PLBLPEPC@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAD?$AAo?$AAn?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe@| DCB "C"
	DCB	0x0, "Q", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":", 0x0, "D"
	DCB	0x0, "o", 0x0, "n", 0x0, "e", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "R", 0x0, "e", 0x0, "l", 0x0, "e", 0x0, "a", 0x0, "s"
	DCB	0x0, "e", 0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "l", 0x0, "E", 0x0, "n", 0x0, "d"
	DCB	0x0, "P", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "l", 0x0, "e", 0x0, "a", 0x0, "s", 0x0, "e", 0x0, "D"
	DCB	0x0, "M", 0x0, "A", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "l", 0x0, ":", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@HOCBNIDJ@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAD?$AAo?$AAn?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs?$AA?$DN?$AA0@| DCB "C"
	DCB	0x0, "Q", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":", 0x0, "D"
	DCB	0x0, "o", 0x0, "n", 0x0, "e", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "(", 0x0, "t", 0x0, "h", 0x0, "i", 0x0, "s", 0x0, "="
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ",", 0x0, "i"
	DCB	0x0, "d", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00028			 AREA	 |.xdata|, DATA
|$T37513| DCD	0x2
	DCD	|$LN60@DoneTransf|
	DCD	|$LN61@DoneTransf|
	DCD	|$LN56@DoneTransf|
	DCD	|$LN57@DoneTransf|
	DCD	|$LN53@DoneTransf|
	DCD	|$LN54@DoneTransf|
	DCD	|$LN49@DoneTransf|
	DCD	|$LN50@DoneTransf|
; Function compile flags: /Odtp

  01890			 AREA	 |.text|, CODE, ARM

  01890	00000000	 DCD         |__C_specific_handler|
  01894	00000000	 DCD         |$T37513|

  01898		 |?DoneTransfer@CQTransfer@@QAAHXZ| PROC ; CQTransfer::DoneTransfer

; 409  : {

  01898		 |$LN67@DoneTransf|
  01898	e1a0c00d	 mov         r12, sp
  0189c	e92d0001	 stmdb       sp!, {r0}
  018a0	e92d5800	 stmdb       sp!, {r11, r12, lr}
  018a4	e28db00c	 add         r11, sp, #0xC
  018a8	e24dd098	 sub         sp, sp, #0x98
  018ac		 |$LN65@DoneTransf|

; 410  :     DEBUGMSG( ZONE_TRANSFER && ZONE_VERBOSE, (TEXT("CQTransfer::DoneTransfer (this=0x%x,id=0x%x)\r\n"),this,m_dwTransferID));

  018ac	e59f3758	 ldr         r3, [pc, #0x758]
  018b0	e5933440	 ldr         r3, [r3, #0x440]
  018b4	e3130c01	 tst         r3, #1, 24
  018b8	0a00000c	 beq         |$LN32@DoneTransf|
  018bc	e59f3748	 ldr         r3, [pc, #0x748]
  018c0	e5933440	 ldr         r3, [r3, #0x440]
  018c4	e3130a01	 tst         r3, #1, 20
  018c8	0a000008	 beq         |$LN32@DoneTransf|
  018cc	e59b3000	 ldr         r3, [r11]
  018d0	e2833064	 add         r3, r3, #0x64
  018d4	e5932000	 ldr         r2, [r3]
  018d8	e59b1000	 ldr         r1, [r11]
  018dc	e59f0748	 ldr         r0, [pc, #0x748]
  018e0	eb000000	 bl          NKDbgPrintfW
  018e4	e3a03001	 mov         r3, #1
  018e8	e50b3058	 str         r3, [r11, #-0x58]
  018ec	ea000001	 b           |$LN33@DoneTransf|
  018f0		 |$LN32@DoneTransf|
  018f0	e3a03000	 mov         r3, #0
  018f4	e50b3058	 str         r3, [r11, #-0x58]
  018f8		 |$LN33@DoneTransf|

; 411  :     BOOL bIsTransDone = IsTransferDone();

  018f8	e59b0000	 ldr         r0, [r11]
  018fc	eb000000	 bl          |?IsTransferDone@CQTransfer@@QAAHXZ|
  01900	e50b0054	 str         r0, [r11, #-0x54]
  01904	e51b3054	 ldr         r3, [r11, #-0x54]
  01908	e50b3098	 str         r3, [r11, #-0x98]

; 412  :     ASSERT(bIsTransDone == TRUE);

  0190c	e51b3098	 ldr         r3, [r11, #-0x98]
  01910	e3530001	 cmp         r3, #1
  01914	1a000002	 bne         |$LN34@DoneTransf|
  01918	e3a03001	 mov         r3, #1
  0191c	e50b3050	 str         r3, [r11, #-0x50]
  01920	ea000007	 b           |$LN35@DoneTransf|
  01924		 |$LN34@DoneTransf|
  01924	e3a03f67	 mov         r3, #0x67, 30
  01928	e59f26f8	 ldr         r2, [pc, #0x6F8]
  0192c	e59f16f0	 ldr         r1, [pc, #0x6F0]
  01930	e59f06e8	 ldr         r0, [pc, #0x6E8]
  01934	eb000000	 bl          NKDbgPrintfW
  01938	e6000010	 __debugbreak_ce
  0193c	e3a03000	 mov         r3, #0
  01940	e50b3050	 str         r3, [r11, #-0x50]
  01944		 |$LN35@DoneTransf|

; 413  :     if (bIsTransDone) {

  01944	e51b3098	 ldr         r3, [r11, #-0x98]
  01948	e3530000	 cmp         r3, #0
  0194c	0a00019d	 beq         |$LN29@DoneTransf|

; 414  :         DWORD dwUsbError = USB_NO_ERROR;

  01950	e3a03000	 mov         r3, #0
  01954	e50b3080	 str         r3, [r11, #-0x80]

; 415  :         DWORD dwDataTransferred = 0;        

  01958	e3a03000	 mov         r3, #0
  0195c	e50b3090	 str         r3, [r11, #-0x90]

; 416  :         CQTD * pCurTD = m_pCQTDList;

  01960	e59b3000	 ldr         r3, [r11]
  01964	e2833068	 add         r3, r3, #0x68
  01968	e5933000	 ldr         r3, [r3]
  0196c	e50b3094	 str         r3, [r11, #-0x94]

; 417  :         m_pCPipe->GetQHead()->Lock();

  01970	e59b3000	 ldr         r3, [r11]
  01974	e2833004	 add         r3, r3, #4
  01978	e5932000	 ldr         r2, [r3]
  0197c	e59b3000	 ldr         r3, [r11]
  01980	e2833004	 add         r3, r3, #4
  01984	e5930000	 ldr         r0, [r3]
  01988	e5923000	 ldr         r3, [r2]
  0198c	e2833044	 add         r3, r3, #0x44
  01990	e5933000	 ldr         r3, [r3]
  01994	e1a0e00f	 mov         lr, pc
  01998	e12fff13	 bx          r3
  0199c	e50b004c	 str         r0, [r11, #-0x4C]
  019a0	e51b004c	 ldr         r0, [r11, #-0x4C]
  019a4	eb000000	 bl          |?Lock@CQH@@QAAXXZ|
  019a8		 |$LN28@DoneTransf|

; 418  :         while ( pCurTD!=NULL) {

  019a8	e51b3094	 ldr         r3, [r11, #-0x94]
  019ac	e3530000	 cmp         r3, #0
  019b0	0a000041	 beq         |$LN27@DoneTransf|

; 419  :             DWORD dwStatus = pCurTD->GetStatus();

  019b4	e51b0094	 ldr         r0, [r11, #-0x94]
  019b8	eb000000	 bl          |?GetStatus@CQTD@@QAAKXZ|
  019bc	e50b0048	 str         r0, [r11, #-0x48]
  019c0	e51b3048	 ldr         r3, [r11, #-0x48]
  019c4	e50b3078	 str         r3, [r11, #-0x78]

; 420  :             DWORD dwTDType = pCurTD->GetTDType();

  019c8	e51b0094	 ldr         r0, [r11, #-0x94]
  019cc	eb000000	 bl          |?GetTDType@CQTD@@QAAKXZ|
  019d0	e50b0044	 str         r0, [r11, #-0x44]
  019d4	e51b3044	 ldr         r3, [r11, #-0x44]
  019d8	e50b307c	 str         r3, [r11, #-0x7C]

; 421  : 
; 422  :             if (dwTDType != TD_SETUP ) // Do not count Setup TD

  019dc	e51b307c	 ldr         r3, [r11, #-0x7C]
  019e0	e3530001	 cmp         r3, #1
  019e4	0a000005	 beq         |$LN26@DoneTransf|

; 423  :                 dwDataTransferred += pCurTD->m_cbTransferred;

  019e8	e51b3094	 ldr         r3, [r11, #-0x94]
  019ec	e283301c	 add         r3, r3, #0x1C
  019f0	e51b2090	 ldr         r2, [r11, #-0x90]
  019f4	e5933000	 ldr         r3, [r3]
  019f8	e0823003	 add         r3, r2, r3
  019fc	e50b3090	 str         r3, [r11, #-0x90]
  01a00		 |$LN26@DoneTransf|

; 424  :             if (dwStatus == STATUS_HALT) { // This Transfer Has been halted due to error.

  01a00	e51b3078	 ldr         r3, [r11, #-0x78]
  01a04	e353000d	 cmp         r3, #0xD
  01a08	1a000005	 bne         |$LN25@DoneTransf|

; 425  :                 // This is error. We do not have error code for MHCI so generically we set STALL error.
; 426  :                 if (dwUsbError == USB_NO_ERROR)

  01a0c	e51b3080	 ldr         r3, [r11, #-0x80]
  01a10	e3530000	 cmp         r3, #0
  01a14	1a000001	 bne         |$LN24@DoneTransf|

; 427  :                     dwUsbError = USB_STALL_ERROR;

  01a18	e3a03004	 mov         r3, #4
  01a1c	e50b3080	 str         r3, [r11, #-0x80]
  01a20		 |$LN24@DoneTransf|

; 428  :             }

  01a20	ea00001f	 b           |$LN23@DoneTransf|
  01a24		 |$LN25@DoneTransf|

; 429  :             else if (dwStatus == STATUS_ABORT) {

  01a24	e51b3078	 ldr         r3, [r11, #-0x78]
  01a28	e353000e	 cmp         r3, #0xE
  01a2c	1a000006	 bne         |$LN22@DoneTransf|

; 430  :                 if (dwUsbError == USB_NO_ERROR)

  01a30	e51b3080	 ldr         r3, [r11, #-0x80]
  01a34	e3530000	 cmp         r3, #0
  01a38	1a000002	 bne         |$LN21@DoneTransf|

; 431  :                     dwUsbError = USB_CANCELED_ERROR;

  01a3c	e3a03c01	 mov         r3, #1, 24
  01a40	e3833001	 orr         r3, r3, #1
  01a44	e50b3080	 str         r3, [r11, #-0x80]
  01a48		 |$LN21@DoneTransf|

; 432  :             }

  01a48	ea000015	 b           |$LN20@DoneTransf|
  01a4c		 |$LN22@DoneTransf|

; 433  :             else if (dwStatus == STATUS_NOT_ENOUGH_BUFFER) {

  01a4c	e51b3078	 ldr         r3, [r11, #-0x78]
  01a50	e3530010	 cmp         r3, #0x10
  01a54	1a000005	 bne         |$LN19@DoneTransf|

; 434  :                 if (dwUsbError == USB_NO_ERROR)

  01a58	e51b3080	 ldr         r3, [r11, #-0x80]
  01a5c	e3530000	 cmp         r3, #0
  01a60	1a000001	 bne         |$LN18@DoneTransf|

; 435  :                     dwUsbError = USB_CLIENT_BUFFER_ERROR;

  01a64	e3a03f41	 mov         r3, #0x41, 30
  01a68	e50b3080	 str         r3, [r11, #-0x80]
  01a6c		 |$LN18@DoneTransf|

; 436  :             }
; 437  :             else

  01a6c	ea00000c	 b           |$LN17@DoneTransf|
  01a70		 |$LN19@DoneTransf|

; 438  :             if ((dwStatus == STATUS_WAIT_TRANSFER) || (dwStatus == STATUS_WAIT_RESPONSE)) {

  01a70	e51b3078	 ldr         r3, [r11, #-0x78]
  01a74	e3530001	 cmp         r3, #1
  01a78	0a000002	 beq         |$LN15@DoneTransf|
  01a7c	e51b3078	 ldr         r3, [r11, #-0x78]
  01a80	e3530003	 cmp         r3, #3
  01a84	1a000006	 bne         |$LN16@DoneTransf|
  01a88		 |$LN15@DoneTransf|

; 439  :                 if (dwUsbError == USB_NO_ERROR)

  01a88	e51b3080	 ldr         r3, [r11, #-0x80]
  01a8c	e3530000	 cmp         r3, #0
  01a90	1a000002	 bne         |$LN14@DoneTransf|

; 440  :                     dwUsbError = USB_NOT_COMPLETE_ERROR;

  01a94	e3a03c01	 mov         r3, #1, 24
  01a98	e3833003	 orr         r3, r3, #3
  01a9c	e50b3080	 str         r3, [r11, #-0x80]
  01aa0		 |$LN14@DoneTransf|

; 441  :                 break;

  01aa0	ea000005	 b           |$LN27@DoneTransf|
  01aa4		 |$LN16@DoneTransf|
  01aa4		 |$LN17@DoneTransf|
  01aa4		 |$LN20@DoneTransf|
  01aa4		 |$LN23@DoneTransf|

; 442  :             }
; 443  :             pCurTD = pCurTD->GetNextTD();

  01aa4	e51b0094	 ldr         r0, [r11, #-0x94]
  01aa8	eb000000	 bl          |?GetNextTD@CQTD@@QAAPAV1@XZ|
  01aac	e50b0040	 str         r0, [r11, #-0x40]
  01ab0	e51b3040	 ldr         r3, [r11, #-0x40]
  01ab4	e50b3094	 str         r3, [r11, #-0x94]

; 444  :         }        

  01ab8	eaffffba	 b           |$LN28@DoneTransf|
  01abc		 |$LN27@DoneTransf|

; 445  :         
; 446  :         UCHAR ep = m_pCPipe->GetMappedEndPoint();

  01abc	e59b3000	 ldr         r3, [r11]
  01ac0	e2833004	 add         r3, r3, #4
  01ac4	e5930000	 ldr         r0, [r3]
  01ac8	eb000000	 bl          |?GetMappedEndPoint@CPipe@@QAAEXZ|
  01acc	e54b003c	 strb        r0, [r11, #-0x3C]
  01ad0	e55b303c	 ldrb        r3, [r11, #-0x3C]
  01ad4	e54b308c	 strb        r3, [r11, #-0x8C]

; 447  :         UCHAR isIn = (m_sTransfer.dwFlags & USB_IN_TRANSFER)? 1:0;

  01ad8	e59b3000	 ldr         r3, [r11]
  01adc	e2833024	 add         r3, r3, #0x24
  01ae0	e5933000	 ldr         r3, [r3]
  01ae4	e3130080	 tst         r3, #0x80
  01ae8	0a000002	 beq         |$LN36@DoneTransf|
  01aec	e3a03001	 mov         r3, #1
  01af0	e50b3038	 str         r3, [r11, #-0x38]
  01af4	ea000001	 b           |$LN37@DoneTransf|
  01af8		 |$LN36@DoneTransf|
  01af8	e3a03000	 mov         r3, #0
  01afc	e50b3038	 str         r3, [r11, #-0x38]
  01b00		 |$LN37@DoneTransf|
  01b00	e51b3038	 ldr         r3, [r11, #-0x38]
  01b04	e20330ff	 and         r3, r3, #0xFF
  01b08	e54b3084	 strb        r3, [r11, #-0x84]

; 448  :         DWORD dwPacketSize= (m_pCPipe->GetEndptDescriptor()).wMaxPacketSize & 0x7ff;

  01b0c	e24b1070	 sub         r1, r11, #0x70
  01b10	e59b3000	 ldr         r3, [r11]
  01b14	e2833004	 add         r3, r3, #4
  01b18	e5930000	 ldr         r0, [r3]
  01b1c	eb000000	 bl          |?GetEndptDescriptor@CPipe@@QAA?AU_USB_ENDPOINT_DESCRIPTOR@@XZ|
  01b20	e50b0034	 str         r0, [r11, #-0x34]
  01b24	e51b3034	 ldr         r3, [r11, #-0x34]
  01b28	e2831004	 add         r1, r3, #4
  01b2c	e5d13001	 ldrb        r3, [r1, #1]
  01b30	e1a03403	 mov         r3, r3, lsl #8
  01b34	e1a02803	 mov         r2, r3, lsl #16
  01b38	e1a02822	 mov         r2, r2, lsr #16
  01b3c	e5d13000	 ldrb        r3, [r1]
  01b40	e1833002	 orr         r3, r3, r2
  01b44	e1a02003	 mov         r2, r3
  01b48	e3a03c07	 mov         r3, #7, 24
  01b4c	e38330ff	 orr         r3, r3, #0xFF
  01b50	e0023003	 and         r3, r2, r3
  01b54	e50b3088	 str         r3, [r11, #-0x88]

; 449  :         if (ep == 0)

  01b58	e55b308c	 ldrb        r3, [r11, #-0x8C]
  01b5c	e3530000	 cmp         r3, #0
  01b60	1a00001c	 bne         |$LN13@DoneTransf|

; 450  :             m_pCPipe->m_pCMhcd->UnlockEP0(m_pCPipe->GetReservedDeviceAddr());

  01b64	e59b3000	 ldr         r3, [r11]
  01b68	e2833004	 add         r3, r3, #4
  01b6c	e5932000	 ldr         r2, [r3]
  01b70	e59b3000	 ldr         r3, [r11]
  01b74	e2833004	 add         r3, r3, #4
  01b78	e5930000	 ldr         r0, [r3]
  01b7c	e5923000	 ldr         r3, [r2]
  01b80	e2833028	 add         r3, r3, #0x28
  01b84	e5933000	 ldr         r3, [r3]
  01b88	e1a0e00f	 mov         lr, pc
  01b8c	e12fff13	 bx          r3
  01b90	e54b0030	 strb        r0, [r11, #-0x30]
  01b94	e55b1030	 ldrb        r1, [r11, #-0x30]
  01b98	e59b3000	 ldr         r3, [r11]
  01b9c	e2833004	 add         r3, r3, #4
  01ba0	e5933000	 ldr         r3, [r3]
  01ba4	e283300c	 add         r3, r3, #0xC
  01ba8	e5932000	 ldr         r2, [r3]
  01bac	e59b3000	 ldr         r3, [r11]
  01bb0	e2833004	 add         r3, r3, #4
  01bb4	e5933000	 ldr         r3, [r3]
  01bb8	e283300c	 add         r3, r3, #0xC
  01bbc	e5930000	 ldr         r0, [r3]
  01bc0	e5923000	 ldr         r3, [r2]
  01bc4	e2833078	 add         r3, r3, #0x78
  01bc8	e5933000	 ldr         r3, [r3]
  01bcc	e1a0e00f	 mov         lr, pc
  01bd0	e12fff13	 bx          r3

; 451  :         else 

  01bd4	ea00004c	 b           |$LN12@DoneTransf|
  01bd8		 |$LN13@DoneTransf|

; 452  :         {
; 453  :             // Set Data Toggle here after the current transaction has been completed
; 454  :             UCHAR dataToggle = m_pCPipe->m_pCMhcd->GetCurrentToggleBit(m_pCPipe->GetMappedEndPoint(), isIn);            

  01bd8	e59b3000	 ldr         r3, [r11]
  01bdc	e2833004	 add         r3, r3, #4
  01be0	e5930000	 ldr         r0, [r3]
  01be4	eb000000	 bl          |?GetMappedEndPoint@CPipe@@QAAEXZ|
  01be8	e54b002f	 strb        r0, [r11, #-0x2F]
  01bec	e55b2084	 ldrb        r2, [r11, #-0x84]
  01bf0	e55b102f	 ldrb        r1, [r11, #-0x2F]
  01bf4	e59b3000	 ldr         r3, [r11]
  01bf8	e2833004	 add         r3, r3, #4
  01bfc	e5933000	 ldr         r3, [r3]
  01c00	e283300c	 add         r3, r3, #0xC
  01c04	e5930000	 ldr         r0, [r3]
  01c08	eb000000	 bl          |?GetCurrentToggleBit@CHW@@QAAEEE@Z|
  01c0c	e54b002e	 strb        r0, [r11, #-0x2E]
  01c10	e55b302e	 ldrb        r3, [r11, #-0x2E]
  01c14	e54b3074	 strb        r3, [r11, #-0x74]

; 455  :             if (dataToggle != 0xff)

  01c18	e55b3074	 ldrb        r3, [r11, #-0x74]
  01c1c	e35300ff	 cmp         r3, #0xFF
  01c20	0a000004	 beq         |$LN11@DoneTransf|

; 456  :                 m_pCPipe->SetDataToggle(dataToggle);          

  01c24	e55b1074	 ldrb        r1, [r11, #-0x74]
  01c28	e59b3000	 ldr         r3, [r11]
  01c2c	e2833004	 add         r3, r3, #4
  01c30	e5930000	 ldr         r0, [r3]
  01c34	eb000000	 bl          |?SetDataToggle@CPipe@@QAAXE@Z|
  01c38		 |$LN11@DoneTransf|

; 457  :             // Release the endpoint only if the transfer size is smaller than the max packet size;
; 458  :             {
; 459  :                 UCHAR channel = m_pCPipe->m_pCMhcd->DeviceInfo2Channel(m_pCPipe);                

  01c38	e59b3000	 ldr         r3, [r11]
  01c3c	e2833004	 add         r3, r3, #4
  01c40	e5931000	 ldr         r1, [r3]
  01c44	e59b3000	 ldr         r3, [r11]
  01c48	e2833004	 add         r3, r3, #4
  01c4c	e5933000	 ldr         r3, [r3]
  01c50	e283300c	 add         r3, r3, #0xC
  01c54	e5930000	 ldr         r0, [r3]
  01c58	eb000000	 bl          |?DeviceInfo2Channel@CHW@@QAAEPAVCPipe@@@Z|
  01c5c	e54b002d	 strb        r0, [r11, #-0x2D]
  01c60	e55b302d	 ldrb        r3, [r11, #-0x2D]
  01c64	e54b3073	 strb        r3, [r11, #-0x73]

; 460  :                 m_pCPipe->m_pCMhcd->ReleaseDMAChannel(m_pCPipe, channel);

  01c68	e55b2073	 ldrb        r2, [r11, #-0x73]
  01c6c	e59b3000	 ldr         r3, [r11]
  01c70	e2833004	 add         r3, r3, #4
  01c74	e5931000	 ldr         r1, [r3]
  01c78	e59b3000	 ldr         r3, [r11]
  01c7c	e2833004	 add         r3, r3, #4
  01c80	e5933000	 ldr         r3, [r3]
  01c84	e283300c	 add         r3, r3, #0xC
  01c88	e5930000	 ldr         r0, [r3]
  01c8c	eb000000	 bl          |?ReleaseDMAChannel@CHW@@QAAHPAVCPipe@@E@Z|

; 461  :                 m_pCPipe->m_pCMhcd->ReleasePhysicalEndPoint(m_pCPipe, TRUE, FALSE);

  01c90	e3a03000	 mov         r3, #0
  01c94	e3a02001	 mov         r2, #1
  01c98	e59b1000	 ldr         r1, [r11]
  01c9c	e2811004	 add         r1, r1, #4
  01ca0	e5911000	 ldr         r1, [r1]
  01ca4	e59b0000	 ldr         r0, [r11]
  01ca8	e2800004	 add         r0, r0, #4
  01cac	e5900000	 ldr         r0, [r0]
  01cb0	e280000c	 add         r0, r0, #0xC
  01cb4	e5900000	 ldr         r0, [r0]
  01cb8	eb000000	 bl          |?ReleasePhysicalEndPoint@CHW@@QAAHPAVCPipe@@HH@Z|

; 462  : 
; 463  :                 // We release it only when it is fully complete. Otherwise, there may be problem.
; 464  :                 if ((dwUsbError == USB_NO_ERROR) && (dwDataTransferred < dwPacketSize))

  01cbc	e51b3080	 ldr         r3, [r11, #-0x80]
  01cc0	e3530000	 cmp         r3, #0
  01cc4	1a000010	 bne         |$LN10@DoneTransf|
  01cc8	e51b2090	 ldr         r2, [r11, #-0x90]
  01ccc	e51b3088	 ldr         r3, [r11, #-0x88]
  01cd0	e1520003	 cmp         r2, r3
  01cd4	2a00000c	 bcs         |$LN10@DoneTransf|

; 465  :                 {   
; 466  :                     DEBUGMSG(ZONE_VERBOSE,(TEXT("CQTransfer::DoneTransfer ReleasePhysicalEndPoint and ReleaseDMAChannel:%d\r\n"),channel));

  01cd8	e59f332c	 ldr         r3, [pc, #0x32C]
  01cdc	e5933440	 ldr         r3, [r3, #0x440]
  01ce0	e3130a01	 tst         r3, #1, 20
  01ce4	0a000006	 beq         |$LN38@DoneTransf|
  01ce8	e55b3073	 ldrb        r3, [r11, #-0x73]
  01cec	e1a01003	 mov         r1, r3
  01cf0	e59f0324	 ldr         r0, [pc, #0x324]
  01cf4	eb000000	 bl          NKDbgPrintfW
  01cf8	e3a03001	 mov         r3, #1
  01cfc	e50b302c	 str         r3, [r11, #-0x2C]
  01d00	ea000001	 b           |$LN39@DoneTransf|
  01d04		 |$LN38@DoneTransf|
  01d04	e3a03000	 mov         r3, #0
  01d08	e50b302c	 str         r3, [r11, #-0x2C]
  01d0c		 |$LN39@DoneTransf|
  01d0c		 |$LN10@DoneTransf|
  01d0c		 |$LN12@DoneTransf|

; 467  :                 }
; 468  :             }
; 469  :         }
; 470  : 
; 471  :         m_pCPipe->GetQHead()->UnLock();

  01d0c	e59b3000	 ldr         r3, [r11]
  01d10	e2833004	 add         r3, r3, #4
  01d14	e5932000	 ldr         r2, [r3]
  01d18	e59b3000	 ldr         r3, [r11]
  01d1c	e2833004	 add         r3, r3, #4
  01d20	e5930000	 ldr         r0, [r3]
  01d24	e5923000	 ldr         r3, [r2]
  01d28	e2833044	 add         r3, r3, #0x44
  01d2c	e5933000	 ldr         r3, [r3]
  01d30	e1a0e00f	 mov         lr, pc
  01d34	e12fff13	 bx          r3
  01d38	e50b0028	 str         r0, [r11, #-0x28]
  01d3c	e51b0028	 ldr         r0, [r11, #-0x28]
  01d40	eb000000	 bl          |?UnLock@CQH@@QAAXXZ|

; 472  : 
; 473  :         // We have to update the buffer when this is IN Transfer.
; 474  :         if ((m_sTransfer.dwFlags & USB_IN_TRANSFER)!=NULL && m_pAllocatedForClient!=NULL && m_sTransfer.dwBufferSize!=0) {

  01d44	e59b3000	 ldr         r3, [r11]
  01d48	e2833024	 add         r3, r3, #0x24
  01d4c	e5933000	 ldr         r3, [r3]
  01d50	e3130080	 tst         r3, #0x80
  01d54	0a00001a	 beq         |$LN9@DoneTransf|
  01d58	e59b3000	 ldr         r3, [r11]
  01d5c	e2833014	 add         r3, r3, #0x14
  01d60	e5933000	 ldr         r3, [r3]
  01d64	e3530000	 cmp         r3, #0
  01d68	0a000015	 beq         |$LN9@DoneTransf|
  01d6c	e59b3000	 ldr         r3, [r11]
  01d70	e2833038	 add         r3, r3, #0x38
  01d74	e5933000	 ldr         r3, [r3]
  01d78	e3530000	 cmp         r3, #0
  01d7c	0a000010	 beq         |$LN9@DoneTransf|
  01d80		 |$LN53@DoneTransf|

; 475  :             __try { // copying client buffer for OUT transfer
; 476  :                 memcpy( m_sTransfer.lpvBuffer, m_pAllocatedForClient, m_sTransfer.dwBufferSize );

  01d80	e59b3000	 ldr         r3, [r11]
  01d84	e2833038	 add         r3, r3, #0x38
  01d88	e5932000	 ldr         r2, [r3]
  01d8c	e59b3000	 ldr         r3, [r11]
  01d90	e2833014	 add         r3, r3, #0x14
  01d94	e5931000	 ldr         r1, [r3]
  01d98	e59b3000	 ldr         r3, [r11]
  01d9c	e283303c	 add         r3, r3, #0x3C
  01da0	e5930000	 ldr         r0, [r3]
  01da4	eb000000	 bl          memcpy
  01da8		 |$LN54@DoneTransf|
  01da8	ea000005	 b           |$LN55@DoneTransf|
  01dac		 |$LN50@DoneTransf|

; 480  :                   // bad lpvBuffer.
; 481  :                 if (dwUsbError == USB_NO_ERROR)

  01dac	e51b3080	 ldr         r3, [r11, #-0x80]
  01db0	e3530000	 cmp         r3, #0
  01db4	1a000001	 bne         |$LN7@DoneTransf|

; 482  :                     dwUsbError = USB_CLIENT_BUFFER_ERROR;

  01db8	e3a03f41	 mov         r3, #0x41, 30
  01dbc	e50b3080	 str         r3, [r11, #-0x80]
  01dc0		 |$LN7@DoneTransf|
  01dc0	eaffffff	 b           |$LN55@DoneTransf|
  01dc4		 |$LN55@DoneTransf|
  01dc4		 |$LN9@DoneTransf|
  01dc4		 |$LN60@DoneTransf|

; 483  :             }
; 484  :         }
; 485  :         __try { // setting transfer status and executing callback function
; 486  :             if (m_sTransfer.lpfComplete !=NULL)

  01dc4	e59b3000	 ldr         r3, [r11]
  01dc8	e2833050	 add         r3, r3, #0x50
  01dcc	e5933000	 ldr         r3, [r3]
  01dd0	e3530000	 cmp         r3, #0
  01dd4	0a000004	 beq         |$LN5@DoneTransf|

; 487  :                 *m_sTransfer.lpfComplete = TRUE;

  01dd8	e59b3000	 ldr         r3, [r11]
  01ddc	e2833050	 add         r3, r3, #0x50
  01de0	e5932000	 ldr         r2, [r3]
  01de4	e3a03001	 mov         r3, #1
  01de8	e5823000	 str         r3, [r2]
  01dec		 |$LN5@DoneTransf|

; 488  :             if (m_sTransfer.lpdwError!=NULL)

  01dec	e59b3000	 ldr         r3, [r11]
  01df0	e2833058	 add         r3, r3, #0x58
  01df4	e5933000	 ldr         r3, [r3]
  01df8	e3530000	 cmp         r3, #0
  01dfc	0a000004	 beq         |$LN4@DoneTransf|

; 489  :                 *m_sTransfer.lpdwError = dwUsbError;

  01e00	e59b3000	 ldr         r3, [r11]
  01e04	e2833058	 add         r3, r3, #0x58
  01e08	e5932000	 ldr         r2, [r3]
  01e0c	e51b3080	 ldr         r3, [r11, #-0x80]
  01e10	e5823000	 str         r3, [r2]
  01e14		 |$LN4@DoneTransf|

; 490  :             if (m_sTransfer.lpdwBytesTransferred)

  01e14	e59b3000	 ldr         r3, [r11]
  01e18	e2833054	 add         r3, r3, #0x54
  01e1c	e5933000	 ldr         r3, [r3]
  01e20	e3530000	 cmp         r3, #0
  01e24	0a000004	 beq         |$LN3@DoneTransf|

; 491  :                 *m_sTransfer.lpdwBytesTransferred =  dwDataTransferred;

  01e28	e59b3000	 ldr         r3, [r11]
  01e2c	e2833054	 add         r3, r3, #0x54
  01e30	e5932000	 ldr         r2, [r3]
  01e34	e51b3090	 ldr         r3, [r11, #-0x90]
  01e38	e5823000	 str         r3, [r2]
  01e3c		 |$LN3@DoneTransf|

; 492  :             if ( m_sTransfer.lpStartAddress ) {

  01e3c	e59b3000	 ldr         r3, [r11]
  01e40	e283301c	 add         r3, r3, #0x1C
  01e44	e5933000	 ldr         r3, [r3]
  01e48	e3530000	 cmp         r3, #0
  01e4c	0a000037	 beq         |$LN2@DoneTransf|

; 493  :                 //UCHAR index;
; 494  :                 //if ((m_sTransfer.dwFlags & USB_IN_TRANSFER) && (dwDataTransferred == 13))
; 495  :                 //    index = *((UCHAR *)(m_sTransfer.lpvBuffer)+4);                
; 496  : 
; 497  :                 DEBUGMSG(ZONE_HCD, (TEXT("Notify ep(0x%x) (%s) dev %d above with error(0x%x), dwDataTransferred(%d), size(%d)\r\n"), 
; 498  :                     ep, (m_sTransfer.dwFlags & USB_IN_TRANSFER)? TEXT("IN"):TEXT("OUT"), m_pCPipe->GetReservedDeviceAddr(), dwUsbError, dwDataTransferred, m_sTransfer.dwBufferSize));

  01e50	e59f31b4	 ldr         r3, [pc, #0x1B4]
  01e54	e5933440	 ldr         r3, [r3, #0x440]
  01e58	e3130001	 tst         r3, #1
  01e5c	0a000025	 beq         |$LN42@DoneTransf|
  01e60	e59b3000	 ldr         r3, [r11]
  01e64	e2833004	 add         r3, r3, #4
  01e68	e5932000	 ldr         r2, [r3]
  01e6c	e59b3000	 ldr         r3, [r11]
  01e70	e2833004	 add         r3, r3, #4
  01e74	e5930000	 ldr         r0, [r3]
  01e78	e5923000	 ldr         r3, [r2]
  01e7c	e2833028	 add         r3, r3, #0x28
  01e80	e5933000	 ldr         r3, [r3]
  01e84	e1a0e00f	 mov         lr, pc
  01e88	e12fff13	 bx          r3
  01e8c	e54b0024	 strb        r0, [r11, #-0x24]
  01e90	e59b3000	 ldr         r3, [r11]
  01e94	e2833024	 add         r3, r3, #0x24
  01e98	e5933000	 ldr         r3, [r3]
  01e9c	e3130080	 tst         r3, #0x80
  01ea0	0a000002	 beq         |$LN40@DoneTransf|
  01ea4	e59f316c	 ldr         r3, [pc, #0x16C]
  01ea8	e50b3020	 str         r3, [r11, #-0x20]
  01eac	ea000001	 b           |$LN41@DoneTransf|
  01eb0		 |$LN40@DoneTransf|
  01eb0	e59f315c	 ldr         r3, [pc, #0x15C]
  01eb4	e50b3020	 str         r3, [r11, #-0x20]
  01eb8		 |$LN41@DoneTransf|
  01eb8	e59b3000	 ldr         r3, [r11]
  01ebc	e2833038	 add         r3, r3, #0x38
  01ec0	e5933000	 ldr         r3, [r3]
  01ec4	e58d3008	 str         r3, [sp, #8]
  01ec8	e51b3090	 ldr         r3, [r11, #-0x90]
  01ecc	e58d3004	 str         r3, [sp, #4]
  01ed0	e51b3080	 ldr         r3, [r11, #-0x80]
  01ed4	e58d3000	 str         r3, [sp]
  01ed8	e55b3024	 ldrb        r3, [r11, #-0x24]
  01edc	e51b2020	 ldr         r2, [r11, #-0x20]
  01ee0	e55b108c	 ldrb        r1, [r11, #-0x8C]
  01ee4	e59f0124	 ldr         r0, [pc, #0x124]
  01ee8	eb000000	 bl          NKDbgPrintfW
  01eec	e3a03001	 mov         r3, #1
  01ef0	e50b301c	 str         r3, [r11, #-0x1C]
  01ef4	ea000001	 b           |$LN43@DoneTransf|
  01ef8		 |$LN42@DoneTransf|
  01ef8	e3a03000	 mov         r3, #0
  01efc	e50b301c	 str         r3, [r11, #-0x1C]
  01f00		 |$LN43@DoneTransf|

; 499  :                 memdump((UCHAR *)m_sTransfer.lpvBuffer, (USHORT)dwDataTransferred, 0);
; 500  :                 ( *m_sTransfer.lpStartAddress )(m_sTransfer.lpvNotifyParameter );

  01f00	e59b3000	 ldr         r3, [r11]
  01f04	e2833020	 add         r3, r3, #0x20
  01f08	e5930000	 ldr         r0, [r3]
  01f0c	e59b3000	 ldr         r3, [r11]
  01f10	e283301c	 add         r3, r3, #0x1C
  01f14	e5933000	 ldr         r3, [r3]
  01f18	e1a0e00f	 mov         lr, pc
  01f1c	e12fff13	 bx          r3

; 501  :                 m_sTransfer.lpStartAddress = NULL ; // Make sure only do once.

  01f20	e59b3000	 ldr         r3, [r11]
  01f24	e283201c	 add         r2, r3, #0x1C
  01f28	e3a03000	 mov         r3, #0
  01f2c	e5823000	 str         r3, [r2]
  01f30		 |$LN2@DoneTransf|
  01f30		 |$LN61@DoneTransf|

; 502  :             }

  01f30	ea000018	 b           |$LN62@DoneTransf|
  01f34		 |$LN57@DoneTransf|

; 504  :               DEBUGMSG( ZONE_ERROR, (TEXT("CQueuedPipe(%s)::CheckForDoneTransfers - exception setting transfer status to complete\n"), m_pCPipe->GetPipeType() ) );

  01f34	e59f30d0	 ldr         r3, [pc, #0xD0]
  01f38	e5933440	 ldr         r3, [r3, #0x440]
  01f3c	e3130901	 tst         r3, #1, 18
  01f40	0a000011	 beq         |$LN44@DoneTransf|
  01f44	e59b3000	 ldr         r3, [r11]
  01f48	e2833004	 add         r3, r3, #4
  01f4c	e5932000	 ldr         r2, [r3]
  01f50	e59b3000	 ldr         r3, [r11]
  01f54	e2833004	 add         r3, r3, #4
  01f58	e5930000	 ldr         r0, [r3]
  01f5c	e5923000	 ldr         r3, [r2]
  01f60	e2833040	 add         r3, r3, #0x40
  01f64	e5933000	 ldr         r3, [r3]
  01f68	e1a0e00f	 mov         lr, pc
  01f6c	e12fff13	 bx          r3
  01f70	e50b0018	 str         r0, [r11, #-0x18]
  01f74	e51b1018	 ldr         r1, [r11, #-0x18]
  01f78	e59f0088	 ldr         r0, [pc, #0x88]
  01f7c	eb000000	 bl          NKDbgPrintfW
  01f80	e3a03001	 mov         r3, #1
  01f84	e50b3014	 str         r3, [r11, #-0x14]
  01f88	ea000001	 b           |$LN45@DoneTransf|
  01f8c		 |$LN44@DoneTransf|
  01f8c	e3a03000	 mov         r3, #0
  01f90	e50b3014	 str         r3, [r11, #-0x14]
  01f94		 |$LN45@DoneTransf|
  01f94	eaffffff	 b           |$LN62@DoneTransf|
  01f98		 |$LN62@DoneTransf|

; 505  :         }        
; 506  : 
; 507  :         return (dwUsbError==USB_NO_ERROR);

  01f98	e51b3080	 ldr         r3, [r11, #-0x80]
  01f9c	e3530000	 cmp         r3, #0
  01fa0	1a000002	 bne         |$LN46@DoneTransf|
  01fa4	e3a03001	 mov         r3, #1
  01fa8	e50b3010	 str         r3, [r11, #-0x10]
  01fac	ea000001	 b           |$LN47@DoneTransf|
  01fb0		 |$LN46@DoneTransf|
  01fb0	e3a03000	 mov         r3, #0
  01fb4	e50b3010	 str         r3, [r11, #-0x10]
  01fb8		 |$LN47@DoneTransf|
  01fb8	e51b3010	 ldr         r3, [r11, #-0x10]
  01fbc	e50b305c	 str         r3, [r11, #-0x5C]
  01fc0	ea000002	 b           |$LN30@DoneTransf|

; 508  :     }
; 509  :     else

  01fc4	ea000001	 b           |$LN1@DoneTransf|
  01fc8		 |$LN29@DoneTransf|

; 510  :         return TRUE;

  01fc8	e3a03001	 mov         r3, #1
  01fcc	e50b305c	 str         r3, [r11, #-0x5C]
  01fd0		 |$LN1@DoneTransf|
  01fd0		 |$LN30@DoneTransf|
  01fd0		 |$LN48@DoneTransf|

; 511  : }

  01fd0	e51b005c	 ldr         r0, [r11, #-0x5C]
  01fd4	e24bd00c	 sub         sp, r11, #0xC
  01fd8	e89d6800	 ldmia       sp, {r11, sp, lr}
  01fdc	e12fff1e	 bx          lr

			 ENDP  ; |?DoneTransfer@CQTransfer@@QAAHXZ|, CQTransfer::DoneTransfer

  01fe0		 |$LN56@DoneTransf|
  01fe0		 |$LN66@DoneTransf|

; 503  :         } __except( EXCEPTION_EXECUTE_HANDLER ) {

  01fe0	e52de004	 str         lr, [sp, #-4]!
  01fe4	e24dd00c	 sub         sp, sp, #0xC
  01fe8		 |$LN59@DoneTransf|
  01fe8		 |$LN70@DoneTransf|
  01fe8	e3a00001	 mov         r0, #1
  01fec		 |$LN58@DoneTransf|
  01fec	e28dd00c	 add         sp, sp, #0xC
  01ff0	e49df004	 ldr         pc, [sp], #4
  01ff4		 |$LN71@DoneTransf|
  01ff4		 |$LN49@DoneTransf|
  01ff4		 |$LN68@DoneTransf|

; 477  :                 //RETAILMSG(1, (TEXT("Receive Buffer size %d\r\n"), m_sTransfer.dwBufferSize));
; 478  :                 //memdump((UCHAR *)m_sTransfer.lpvBuffer, (USHORT)m_sTransfer.dwBufferSize, 0);
; 479  :             } __except( EXCEPTION_EXECUTE_HANDLER ) {

  01ff4	e52de004	 str         lr, [sp, #-4]!
  01ff8	e24dd00c	 sub         sp, sp, #0xC
  01ffc		 |$LN52@DoneTransf|
  01ffc		 |$LN72@DoneTransf|
  01ffc	e3a00001	 mov         r0, #1
  02000		 |$LN51@DoneTransf|
  02000	e28dd00c	 add         sp, sp, #0xC
  02004	e49df004	 ldr         pc, [sp], #4
  02008		 |$LN74@DoneTransf|
  02008		 |$LN75@DoneTransf|
  02008	00000000	 DCD         |??_C@_1LA@PHHAKCJP@?$AAC?$AAQ?$AAu?$AAe?$AAu?$AAe?$AAd?$AAP?$AAi?$AAp?$AAe?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?3?$AA?3?$AAC?$AAh?$AAe?$AAc?$AAk?$AAF?$AAo?$AAr?$AAD?$AAo?$AAn?$AAe?$AAT?$AAr?$AAa@|
  0200c		 |$LN76@DoneTransf|
  0200c	00000000	 DCD         |dpCurSettings|
  02010		 |$LN77@DoneTransf|
  02010	00000000	 DCD         |??_C@_1KM@FIEIPHCN@?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?5?$AAe?$AAp?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?5?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?5?$AAd?$AAe?$AAv?$AA?5?$AA?$CF?$AAd?$AA?5?$AAa?$AAb?$AAo?$AAv@|
  02014		 |$LN78@DoneTransf|
  02014	00000000	 DCD         |??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@|
  02018		 |$LN79@DoneTransf|
  02018	00000000	 DCD         |??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@|
  0201c		 |$LN80@DoneTransf|
  0201c	00000000	 DCD         |??_C@_1JI@PLBLPEPC@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAD?$AAo?$AAn?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe@|
  02020		 |$LN81@DoneTransf|
  02020	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  02024		 |$LN82@DoneTransf|
  02024	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  02028		 |$LN83@DoneTransf|
  02028	00000000	 DCD         |??_C@_1LK@IFLKDCCK@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  0202c		 |$LN84@DoneTransf|
  0202c	00000000	 DCD         |??_C@_1FO@HOCBNIDJ@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAD?$AAo?$AAn?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs?$AA?$DN?$AA0@|
  02030		 |$LN73@DoneTransf|
  02030		 |$LN69@DoneTransf|
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.h

  00000			 AREA	 |.pdata|, PDATA
|$T37540| DCD	|$LN5@GetStatus|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetStatus@CQTD@@QAAKXZ| PROC		; CQTD::GetStatus

; 90   :     DWORD GetStatus() { return m_dwStatus; };

  00000		 |$LN5@GetStatus|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37537|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833028	 add         r3, r3, #0x28
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M37538|

			 ENDP  ; |?GetStatus@CQTD@@QAAKXZ|, CQTD::GetStatus


  00000			 AREA	 |.pdata|, PDATA
|$T37548| DCD	|$LN5@GetTDType|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetTDType@CQTD@@QAAKXZ| PROC		; CQTD::GetTDType

; 92   :     DWORD GetTDType() { return m_dwTDType; };

  00000		 |$LN5@GetTDType|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37545|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e283300c	 add         r3, r3, #0xC
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M37546|

			 ENDP  ; |?GetTDType@CQTD@@QAAKXZ|, CQTD::GetTDType

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.h

  00000			 AREA	 |.pdata|, PDATA
|$T37556| DCD	|$LN5@GetMappedE|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetMappedEndPoint@CPipe@@QAAEXZ| PROC ; CPipe::GetMappedEndPoint

; 103  :     UCHAR   GetMappedEndPoint(void) { return m_mappedEndpoint; };

  00000		 |$LN5@GetMappedE|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37553|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833058	 add         r3, r3, #0x58
  00018	e5d33000	 ldrb        r3, [r3]
  0001c	e5cd3000	 strb        r3, [sp]
  00020	e5dd0000	 ldrb        r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M37554|

			 ENDP  ; |?GetMappedEndPoint@CPipe@@QAAEXZ|, CPipe::GetMappedEndPoint

	EXPORT	|??_C@_1EA@POBDGNBN@?$AAA?$AAb?$AAo?$AAr?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAp?$AAC?$AAu?$AAr?$AAT?$AAD?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@LCLHDHLL@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAb?$AAo?$AAr?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs?$AA?$DN@| [ DATA ] ; `string'
	EXPORT	|?AbortTransfer@CQTransfer@@QAAHXZ|	; CQTransfer::AbortTransfer
	IMPORT	|Sleep|
	IMPORT	|?DeActiveTD@CQTD@@QAAXXZ|		; CQTD::DeActiveTD

  00058			 AREA	 |.pdata|, PDATA
|$T37568| DCD	|$LN11@AbortTrans|
	DCD	0x40005904
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\trans.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@POBDGNBN@?$AAA?$AAb?$AAo?$AAr?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAp?$AAC?$AAu?$AAr?$AAT?$AAD?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "A"
	DCB	0x0, "b", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "p"
	DCB	0x0, "C", 0x0, "u", 0x0, "r", 0x0, "T", 0x0, "D", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@LCLHDHLL@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAb?$AAo?$AAr?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs?$AA?$DN@| DCB "C"
	DCB	0x0, "Q", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":", 0x0, "A"
	DCB	0x0, "b", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "(", 0x0, "t", 0x0, "h", 0x0, "i", 0x0, "s"
	DCB	0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ","
	DCB	0x0, "i", 0x0, "d", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  02030			 AREA	 |.text|, CODE, ARM

  02030		 |?AbortTransfer@CQTransfer@@QAAHXZ| PROC ; CQTransfer::AbortTransfer

; 522  : {

  02030		 |$LN11@AbortTrans|
  02030	e1a0c00d	 mov         r12, sp
  02034	e92d0001	 stmdb       sp!, {r0}
  02038	e92d5000	 stmdb       sp!, {r12, lr}
  0203c	e24dd01c	 sub         sp, sp, #0x1C
  02040		 |$M37565|

; 523  :     DEBUGMSG(ZONE_TRANSFER && ZONE_VERBOSE, (TEXT("CQTransfer::AbortTransfer (this=0x%x,id=0x%x)\r\n"),this,m_dwTransferID));

  02040	e59f3144	 ldr         r3, [pc, #0x144]
  02044	e5933440	 ldr         r3, [r3, #0x440]
  02048	e3130c01	 tst         r3, #1, 24
  0204c	0a00000c	 beq         |$LN5@AbortTrans|
  02050	e59f3134	 ldr         r3, [pc, #0x134]
  02054	e5933440	 ldr         r3, [r3, #0x440]
  02058	e3130a01	 tst         r3, #1, 20
  0205c	0a000008	 beq         |$LN5@AbortTrans|
  02060	e59d3024	 ldr         r3, [sp, #0x24]
  02064	e2833064	 add         r3, r3, #0x64
  02068	e5932000	 ldr         r2, [r3]
  0206c	e59d1024	 ldr         r1, [sp, #0x24]
  02070	e59f0118	 ldr         r0, [pc, #0x118]
  02074	eb000000	 bl          NKDbgPrintfW
  02078	e3a03001	 mov         r3, #1
  0207c	e58d3008	 str         r3, [sp, #8]
  02080	ea000001	 b           |$LN6@AbortTrans|
  02084		 |$LN5@AbortTrans|
  02084	e3a03000	 mov         r3, #0
  02088	e58d3008	 str         r3, [sp, #8]
  0208c		 |$LN6@AbortTrans|

; 524  :     CQTD * pCurTD = m_pCQTDList;

  0208c	e59d3024	 ldr         r3, [sp, #0x24]
  02090	e2833068	 add         r3, r3, #0x68
  02094	e5933000	 ldr         r3, [r3]
  02098	e58d3000	 str         r3, [sp]

; 525  : 
; 526  :     m_pCPipe->GetQHead()->Lock();

  0209c	e59d3024	 ldr         r3, [sp, #0x24]
  020a0	e2833004	 add         r3, r3, #4
  020a4	e5932000	 ldr         r2, [r3]
  020a8	e59d3024	 ldr         r3, [sp, #0x24]
  020ac	e2833004	 add         r3, r3, #4
  020b0	e5930000	 ldr         r0, [r3]
  020b4	e5923000	 ldr         r3, [r2]
  020b8	e2833044	 add         r3, r3, #0x44
  020bc	e5933000	 ldr         r3, [r3]
  020c0	e1a0e00f	 mov         lr, pc
  020c4	e12fff13	 bx          r3
  020c8	e58d000c	 str         r0, [sp, #0xC]
  020cc	e59d000c	 ldr         r0, [sp, #0xC]
  020d0	eb000000	 bl          |?Lock@CQH@@QAAXXZ|
  020d4		 |$LN2@AbortTrans|

; 527  :     while ( pCurTD!=NULL) {

  020d4	e59d3000	 ldr         r3, [sp]
  020d8	e3530000	 cmp         r3, #0
  020dc	0a000013	 beq         |$LN1@AbortTrans|

; 528  :         DEBUGMSG(ZONE_TRANSFER, (TEXT("AbortTransfer for pCurTD 0x%x\r\n"), pCurTD));

  020e0	e59f30a4	 ldr         r3, [pc, #0xA4]
  020e4	e5933440	 ldr         r3, [r3, #0x440]
  020e8	e3130c01	 tst         r3, #1, 24
  020ec	0a000005	 beq         |$LN7@AbortTrans|
  020f0	e59d1000	 ldr         r1, [sp]
  020f4	e59f008c	 ldr         r0, [pc, #0x8C]
  020f8	eb000000	 bl          NKDbgPrintfW
  020fc	e3a03001	 mov         r3, #1
  02100	e58d3010	 str         r3, [sp, #0x10]
  02104	ea000001	 b           |$LN8@AbortTrans|
  02108		 |$LN7@AbortTrans|
  02108	e3a03000	 mov         r3, #0
  0210c	e58d3010	 str         r3, [sp, #0x10]
  02110		 |$LN8@AbortTrans|

; 529  :         pCurTD->DeActiveTD();

  02110	e59d0000	 ldr         r0, [sp]
  02114	eb000000	 bl          |?DeActiveTD@CQTD@@QAAXXZ|

; 530  :         pCurTD = pCurTD->GetNextTD();

  02118	e59d0000	 ldr         r0, [sp]
  0211c	eb000000	 bl          |?GetNextTD@CQTD@@QAAPAV1@XZ|
  02120	e58d0014	 str         r0, [sp, #0x14]
  02124	e59d3014	 ldr         r3, [sp, #0x14]
  02128	e58d3000	 str         r3, [sp]

; 531  :     }

  0212c	eaffffe8	 b           |$LN2@AbortTrans|
  02130		 |$LN1@AbortTrans|

; 532  :     m_pCPipe->GetQHead()->UnLock();

  02130	e59d3024	 ldr         r3, [sp, #0x24]
  02134	e2833004	 add         r3, r3, #4
  02138	e5932000	 ldr         r2, [r3]
  0213c	e59d3024	 ldr         r3, [sp, #0x24]
  02140	e2833004	 add         r3, r3, #4
  02144	e5930000	 ldr         r0, [r3]
  02148	e5923000	 ldr         r3, [r2]
  0214c	e2833044	 add         r3, r3, #0x44
  02150	e5933000	 ldr         r3, [r3]
  02154	e1a0e00f	 mov         lr, pc
  02158	e12fff13	 bx          r3
  0215c	e58d0018	 str         r0, [sp, #0x18]
  02160	e59d0018	 ldr         r0, [sp, #0x18]
  02164	eb000000	 bl          |?UnLock@CQH@@QAAXXZ|

; 533  : 
; 534  :     Sleep(2);// Make sure the shcdule has advanced. and current Transfer has completeded.

  02168	e3a00002	 mov         r0, #2
  0216c	eb000000	 bl          Sleep

; 535  :     return TRUE;

  02170	e3a03001	 mov         r3, #1
  02174	e58d3004	 str         r3, [sp, #4]

; 536  : }

  02178	e59d0004	 ldr         r0, [sp, #4]
  0217c	e28dd01c	 add         sp, sp, #0x1C
  02180	e89d6000	 ldmia       sp, {sp, lr}
  02184	e12fff1e	 bx          lr
  02188		 |$LN12@AbortTrans|
  02188		 |$LN13@AbortTrans|
  02188	00000000	 DCD         |??_C@_1EA@POBDGNBN@?$AAA?$AAb?$AAo?$AAr?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAp?$AAC?$AAu?$AAr?$AAT?$AAD?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  0218c		 |$LN14@AbortTrans|
  0218c	00000000	 DCD         |dpCurSettings|
  02190		 |$LN15@AbortTrans|
  02190	00000000	 DCD         |??_C@_1GA@LCLHDHLL@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAA?$AAb?$AAo?$AAr?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs?$AA?$DN@|
  02194		 |$M37566|

			 ENDP  ; |?AbortTransfer@CQTransfer@@QAAHXZ|, CQTransfer::AbortTransfer

	EXPORT	|??_C@_1FC@HMKCPHMJ@?$AAA?$AAC?$AAK?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AAO?$AAU?$AAT?$AA?5?$AAe?$AAp?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAs?$AAt?$AAa@| [ DATA ] ; `string'
	EXPORT	|?GetDataSize@CQTD@@QAAKXZ|		; CQTD::GetDataSize
	EXPORT	|?GetPacketSize@CQTD@@QAAKXZ|		; CQTD::GetPacketSize
	EXPORT	|??_C@_1CI@CJFFIHPL@?$AAT?$AAx?$AA?5?$AAS?$AAt?$AAa?$AAl?$AAl?$AA?5?$AAa?$AAt?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?GetTotTfrSize@CQTD@@QAAKXZ|		; CQTD::GetTotTfrSize
	EXPORT	|?GetCurTfrSize@CQTD@@QAAKXZ|		; CQTD::GetCurTfrSize
	EXPORT	|??_C@_1DC@JFDNNJLL@?$AAR?$AAe?$AAa?$AAd?$AAD?$AAa?$AAt?$AAa?$AAI?$AAn?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@OEHJFID@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAr?$AAe?$AAs?$AAp?$AAo?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@OPJAAOKJ@?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AAh?$AAa?$AAl?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@POBHDIKE@?$AAW?$AAa?$AAi?$AAt?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?GetError@CQTD@@QAAKXZ|		; CQTD::GetError
	EXPORT	|?ProcessResponse@CQTransfer@@QAAKKPAVCQTD@@@Z| ; CQTransfer::ProcessResponse
	IMPORT	|?ClearRxPktRdy@CQTD@@QAAXXZ|		; CQTD::ClearRxPktRdy
	IMPORT	|?CheckRxCSR@CHW@@QAAKE@Z|		; CHW::CheckRxCSR
	IMPORT	|?CheckTxCSR@CHW@@QAAKE@Z|		; CHW::CheckTxCSR
	IMPORT	|?ReadDataIN@CQTD@@QAAKPAK@Z|		; CQTD::ReadDataIN

  00060			 AREA	 |.pdata|, PDATA
|$T37603| DCD	|$LN69@ProcessRes|
	DCD	0x40017a04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@HMKCPHMJ@?$AAA?$AAC?$AAK?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AAO?$AAU?$AAT?$AA?5?$AAe?$AAp?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAs?$AAt?$AAa@| DCB "A"
	DCB	0x0, "C", 0x0, "K", 0x0, " ", 0x0, "D", 0x0, "a", 0x0, "t"
	DCB	0x0, "a", 0x0, " ", 0x0, "O", 0x0, "U", 0x0, "T", 0x0, " "
	DCB	0x0, "e", 0x0, "p", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@CJFFIHPL@?$AAT?$AAx?$AA?5?$AAS?$AAt?$AAa?$AAl?$AAl?$AA?5?$AAa?$AAt?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "x", 0x0, " ", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "l"
	DCB	0x0, "l", 0x0, " ", 0x0, "a", 0x0, "t", 0x0, " ", 0x0, "E"
	DCB	0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@JFDNNJLL@?$AAR?$AAe?$AAa?$AAd?$AAD?$AAa?$AAt?$AAa?$AAI?$AAn?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, "D", 0x0, "a", 0x0, "t"
	DCB	0x0, "a", 0x0, "I", 0x0, "n", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@OEHJFID@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAr?$AAe?$AAs?$AAp?$AAo?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "n", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n", 0x0, "d", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@OPJAAOKJ@?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AAh?$AAa?$AAl?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, " ", 0x0, "h", 0x0, "a", 0x0, "l", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@POBHDIKE@?$AAW?$AAa?$AAi?$AAt?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "W"
	DCB	0x0, "a", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "D", 0x0, "M"
	DCB	0x0, "A", 0x0, " ", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  02194			 AREA	 |.text|, CODE, ARM

  02194		 |?ProcessResponse@CQTransfer@@QAAKKPAVCQTD@@@Z| PROC ; CQTransfer::ProcessResponse

; 547  : {

  02194		 |$LN69@ProcessRes|
  02194	e1a0c00d	 mov         r12, sp
  02198	e92d0007	 stmdb       sp!, {r0 - r2}
  0219c	e92d5000	 stmdb       sp!, {r12, lr}
  021a0	e24dd090	 sub         sp, sp, #0x90
  021a4		 |$M37600|

; 548  :     DWORD dwReturn = USB_NO_ERROR;

  021a4	e3a03000	 mov         r3, #0
  021a8	e58d3000	 str         r3, [sp]

; 549  :     if (dwReason == STATUS_PROCESS_INTR)

  021ac	e59d309c	 ldr         r3, [sp, #0x9C]
  021b0	e3530000	 cmp         r3, #0
  021b4	1a000160	 bne         |$LN39@ProcessRes|

; 550  :     {
; 551  :         // In case of TD_DATA_IN transaction, we have to 
; 552  :         // read the data from FIFO.
; 553  :         DWORD dwType = pCurTD->GetTDType();        

  021b8	e59d00a0	 ldr         r0, [sp, #0xA0]
  021bc	eb000000	 bl          |?GetTDType@CQTD@@QAAKXZ|
  021c0	e58d0014	 str         r0, [sp, #0x14]
  021c4	e59d3014	 ldr         r3, [sp, #0x14]
  021c8	e58d3004	 str         r3, [sp, #4]

; 554  :         switch (dwType) {

  021cc	e59d3004	 ldr         r3, [sp, #4]
  021d0	e58d3018	 str         r3, [sp, #0x18]
  021d4	e59d3018	 ldr         r3, [sp, #0x18]
  021d8	e2433001	 sub         r3, r3, #1
  021dc	e58d3018	 str         r3, [sp, #0x18]
  021e0	e59d3018	 ldr         r3, [sp, #0x18]
  021e4	e3530004	 cmp         r3, #4
  021e8	8a000152	 bhi         |$LN2@ProcessRes|
  021ec	e59d2018	 ldr         r2, [sp, #0x18]
  021f0	e1a03102	 mov         r3, r2, lsl #2
  021f4	e083300f	 add         r3, r3, pc
  021f8	e5933004	 ldr         r3, [r3, #4]
  021fc	e08ff003	 add         pc, pc, r3
  02200		 |$LN61@ProcessRes|
  02200		 |$LN60@ProcessRes|
  02200		 |$LN62@ProcessRes|
  02200	000001a8	 DCD         0x1a8
  02204		 |$LN63@ProcessRes|
  02204	00000010	 DCD         0x10
  02208		 |$LN64@ProcessRes|
  02208	000002c8	 DCD         0x2c8
  0220c		 |$LN65@ProcessRes|
  0220c	000004ac	 DCD         0x4ac
  02210		 |$LN66@ProcessRes|
  02210	000001a8	 DCD         0x1a8
  02214		 |$LN36@ProcessRes|

; 555  :             case TD_DATA_IN:                
; 556  :                 {
; 557  :                     DWORD dwMore = MUSB_READ_SUCCESS;

  02214	e3a03000	 mov         r3, #0
  02218	e58d3008	 str         r3, [sp, #8]

; 558  :                     // Read the data into the pCurTD.                    
; 559  :                     dwReturn = pCurTD->ReadDataIN(&dwMore);

  0221c	e28d1008	 add         r1, sp, #8
  02220	e59d00a0	 ldr         r0, [sp, #0xA0]
  02224	eb000000	 bl          |?ReadDataIN@CQTD@@QAAKPAK@Z|
  02228	e58d001c	 str         r0, [sp, #0x1C]
  0222c	e59d301c	 ldr         r3, [sp, #0x1C]
  02230	e58d3000	 str         r3, [sp]

; 560  : 
; 561  :                     if (dwReturn == USB_NO_ERROR)

  02234	e59d3000	 ldr         r3, [sp]
  02238	e3530000	 cmp         r3, #0
  0223c	1a000026	 bne         |$LN35@ProcessRes|

; 562  :                     {
; 563  :                         if (dwMore == MUSB_READ_MORE_DATA)

  02240	e59d3008	 ldr         r3, [sp, #8]
  02244	e3530001	 cmp         r3, #1
  02248	1a000003	 bne         |$LN34@ProcessRes|

; 564  :                             pCurTD->SetStatus(STATUS_WAIT_MORE_DATA);

  0224c	e3a01004	 mov         r1, #4
  02250	e59d00a0	 ldr         r0, [sp, #0xA0]
  02254	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|
  02258	ea00001e	 b           |$LN33@ProcessRes|
  0225c		 |$LN34@ProcessRes|

; 565  :                         else if (dwMore == MUSB_READ_SUCCESS)

  0225c	e59d3008	 ldr         r3, [sp, #8]
  02260	e3530000	 cmp         r3, #0
  02264	1a00000d	 bne         |$LN32@ProcessRes|

; 566  :                         {
; 567  :                             if (pCurTD->GetError() & ERR_BUFFER_ERROR)                                                           

  02268	e59d00a0	 ldr         r0, [sp, #0xA0]
  0226c	eb000000	 bl          |?GetError@CQTD@@QAAKXZ|
  02270	e58d0020	 str         r0, [sp, #0x20]
  02274	e59d3020	 ldr         r3, [sp, #0x20]
  02278	e3130001	 tst         r3, #1
  0227c	0a000003	 beq         |$LN31@ProcessRes|

; 568  :                                 pCurTD->SetStatus(STATUS_NOT_ENOUGH_BUFFER);

  02280	e3a01010	 mov         r1, #0x10
  02284	e59d00a0	 ldr         r0, [sp, #0xA0]
  02288	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|

; 569  :                             else

  0228c	ea000002	 b           |$LN30@ProcessRes|
  02290		 |$LN31@ProcessRes|

; 570  :                                 pCurTD->SetStatus(STATUS_COMPLETE);

  02290	e3a01011	 mov         r1, #0x11
  02294	e59d00a0	 ldr         r0, [sp, #0xA0]
  02298	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|
  0229c		 |$LN30@ProcessRes|
  0229c	ea00000d	 b           |$LN29@ProcessRes|
  022a0		 |$LN32@ProcessRes|

; 571  :                         }
; 572  :                         else if (dwMore == MUSB_WAIT_DMA_COMPLETE)

  022a0	e59d3008	 ldr         r3, [sp, #8]
  022a4	e3530002	 cmp         r3, #2
  022a8	1a00000a	 bne         |$LN28@ProcessRes|

; 573  :                             DEBUGMSG(ZONE_HCD, (TEXT("Wait DMA Complete\r\n")));

  022ac	e59f34b0	 ldr         r3, [pc, #0x4B0]
  022b0	e5933440	 ldr         r3, [r3, #0x440]
  022b4	e3130001	 tst         r3, #1
  022b8	0a000004	 beq         |$LN42@ProcessRes|
  022bc	e59f04b4	 ldr         r0, [pc, #0x4B4]
  022c0	eb000000	 bl          NKDbgPrintfW
  022c4	e3a03001	 mov         r3, #1
  022c8	e58d3024	 str         r3, [sp, #0x24]
  022cc	ea000001	 b           |$LN43@ProcessRes|
  022d0		 |$LN42@ProcessRes|
  022d0	e3a03000	 mov         r3, #0
  022d4	e58d3024	 str         r3, [sp, #0x24]
  022d8		 |$LN43@ProcessRes|
  022d8		 |$LN28@ProcessRes|
  022d8		 |$LN29@ProcessRes|
  022d8		 |$LN33@ProcessRes|

; 574  :                     }

  022d8	ea000032	 b           |$LN27@ProcessRes|
  022dc		 |$LN35@ProcessRes|

; 575  :                     else if (dwReturn == USB_STALL_ERROR)

  022dc	e59d3000	 ldr         r3, [sp]
  022e0	e3530004	 cmp         r3, #4
  022e4	1a00000e	 bne         |$LN26@ProcessRes|

; 576  :                     {
; 577  :                         DEBUGMSG(ZONE_ERROR, (TEXT("Endpoint halt\r\n")));

  022e8	e59f3474	 ldr         r3, [pc, #0x474]
  022ec	e5933440	 ldr         r3, [r3, #0x440]
  022f0	e3130901	 tst         r3, #1, 18
  022f4	0a000004	 beq         |$LN44@ProcessRes|
  022f8	e59f0474	 ldr         r0, [pc, #0x474]
  022fc	eb000000	 bl          NKDbgPrintfW
  02300	e3a03001	 mov         r3, #1
  02304	e58d3028	 str         r3, [sp, #0x28]
  02308	ea000001	 b           |$LN45@ProcessRes|
  0230c		 |$LN44@ProcessRes|
  0230c	e3a03000	 mov         r3, #0
  02310	e58d3028	 str         r3, [sp, #0x28]
  02314		 |$LN45@ProcessRes|

; 578  :                         pCurTD->SetStatus(STATUS_HALT);

  02314	e3a0100d	 mov         r1, #0xD
  02318	e59d00a0	 ldr         r0, [sp, #0xA0]
  0231c	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|
  02320	ea000020	 b           |$LN25@ProcessRes|
  02324		 |$LN26@ProcessRes|

; 579  :                     }
; 580  :                     else if (dwReturn == USB_DEVICE_NOT_RESPONDING_ERROR)

  02324	e59d3000	 ldr         r3, [sp]
  02328	e3530005	 cmp         r3, #5
  0232c	1a00000e	 bne         |$LN24@ProcessRes|

; 581  :                     {
; 582  :                         DEBUGMSG(ZONE_ERROR, (TEXT("Device not responding\r\n")));

  02330	e59f342c	 ldr         r3, [pc, #0x42C]
  02334	e5933440	 ldr         r3, [r3, #0x440]
  02338	e3130901	 tst         r3, #1, 18
  0233c	0a000004	 beq         |$LN46@ProcessRes|
  02340	e59f0418	 ldr         r0, [pc, #0x418]
  02344	eb000000	 bl          NKDbgPrintfW
  02348	e3a03001	 mov         r3, #1
  0234c	e58d302c	 str         r3, [sp, #0x2C]
  02350	ea000001	 b           |$LN47@ProcessRes|
  02354		 |$LN46@ProcessRes|
  02354	e3a03000	 mov         r3, #0
  02358	e58d302c	 str         r3, [sp, #0x2C]
  0235c		 |$LN47@ProcessRes|

; 583  :                         pCurTD->SetStatus(STATUS_ERROR);

  0235c	e3a0100f	 mov         r1, #0xF
  02360	e59d00a0	 ldr         r0, [sp, #0xA0]
  02364	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|

; 584  :                     }
; 585  :                     else

  02368	ea00000e	 b           |$LN23@ProcessRes|
  0236c		 |$LN24@ProcessRes|

; 586  :                     {
; 587  :                         DEBUGMSG(ZONE_TRANSFER, (TEXT("ReadDataIn return 0x%x\r\n"), dwReturn));

  0236c	e59f33f0	 ldr         r3, [pc, #0x3F0]
  02370	e5933440	 ldr         r3, [r3, #0x440]
  02374	e3130c01	 tst         r3, #1, 24
  02378	0a000005	 beq         |$LN48@ProcessRes|
  0237c	e59d1000	 ldr         r1, [sp]
  02380	e59f03e8	 ldr         r0, [pc, #0x3E8]
  02384	eb000000	 bl          NKDbgPrintfW
  02388	e3a03001	 mov         r3, #1
  0238c	e58d3030	 str         r3, [sp, #0x30]
  02390	ea000001	 b           |$LN49@ProcessRes|
  02394		 |$LN48@ProcessRes|
  02394	e3a03000	 mov         r3, #0
  02398	e58d3030	 str         r3, [sp, #0x30]
  0239c		 |$LN49@ProcessRes|

; 588  :                         pCurTD->SetStatus(STATUS_WAIT_RESPONSE);

  0239c	e3a01003	 mov         r1, #3
  023a0	e59d00a0	 ldr         r0, [sp, #0xA0]
  023a4	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|
  023a8		 |$LN23@ProcessRes|
  023a8		 |$LN25@ProcessRes|
  023a8		 |$LN27@ProcessRes|

; 589  :                     }
; 590  :                 }                
; 591  :                 break;

  023a8	ea0000e2	 b           |$LN37@ProcessRes|
  023ac		 |$LN22@ProcessRes|

; 592  : 
; 593  :             case TD_STATUS_OUT:
; 594  :             case TD_SETUP:                    
; 595  :                 {
; 596  :                     // Need to check the result here
; 597  :                     dwReturn = m_pCPipe->m_pCMhcd->CheckTxCSR(m_pCPipe->GetMappedEndPoint());

  023ac	e59d3098	 ldr         r3, [sp, #0x98]
  023b0	e2833004	 add         r3, r3, #4
  023b4	e5930000	 ldr         r0, [r3]
  023b8	eb000000	 bl          |?GetMappedEndPoint@CPipe@@QAAEXZ|
  023bc	e5cd0034	 strb        r0, [sp, #0x34]
  023c0	e5dd1034	 ldrb        r1, [sp, #0x34]
  023c4	e59d3098	 ldr         r3, [sp, #0x98]
  023c8	e2833004	 add         r3, r3, #4
  023cc	e5933000	 ldr         r3, [r3]
  023d0	e283300c	 add         r3, r3, #0xC
  023d4	e5930000	 ldr         r0, [r3]
  023d8	eb000000	 bl          |?CheckTxCSR@CHW@@QAAKE@Z|
  023dc	e58d0038	 str         r0, [sp, #0x38]
  023e0	e59d3038	 ldr         r3, [sp, #0x38]
  023e4	e58d3000	 str         r3, [sp]

; 598  :                     if (dwReturn == USB_NO_ERROR)

  023e8	e59d3000	 ldr         r3, [sp]
  023ec	e3530000	 cmp         r3, #0
  023f0	1a00000e	 bne         |$LN21@ProcessRes|

; 599  :                     {
; 600  :                         pCurTD->SetTotTfrSize(pCurTD->GetCurTfrSize() + pCurTD->GetTotTfrSize());

  023f4	e59d00a0	 ldr         r0, [sp, #0xA0]
  023f8	eb000000	 bl          |?GetCurTfrSize@CQTD@@QAAKXZ|
  023fc	e58d003c	 str         r0, [sp, #0x3C]
  02400	e59d00a0	 ldr         r0, [sp, #0xA0]
  02404	eb000000	 bl          |?GetTotTfrSize@CQTD@@QAAKXZ|
  02408	e58d0040	 str         r0, [sp, #0x40]
  0240c	e59d203c	 ldr         r2, [sp, #0x3C]
  02410	e59d3040	 ldr         r3, [sp, #0x40]
  02414	e0821003	 add         r1, r2, r3
  02418	e59d00a0	 ldr         r0, [sp, #0xA0]
  0241c	eb000000	 bl          |?SetTotTfrSize@CQTD@@QAAXK@Z|

; 601  :                         pCurTD->SetStatus(STATUS_COMPLETE);                    

  02420	e3a01011	 mov         r1, #0x11
  02424	e59d00a0	 ldr         r0, [sp, #0xA0]
  02428	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|
  0242c	ea000025	 b           |$LN20@ProcessRes|
  02430		 |$LN21@ProcessRes|

; 602  :                     }
; 603  :                     else if (dwReturn == USB_STALL_ERROR)

  02430	e59d3000	 ldr         r3, [sp]
  02434	e3530004	 cmp         r3, #4
  02438	1a000011	 bne         |$LN19@ProcessRes|

; 604  :                     {
; 605  :                         RETAILMSG(1, (TEXT("Tx Stall at EP %d\r\n"), m_pCPipe->GetMappedEndPoint()));

  0243c	e59d3098	 ldr         r3, [sp, #0x98]
  02440	e2833004	 add         r3, r3, #4
  02444	e5930000	 ldr         r0, [r3]
  02448	eb000000	 bl          |?GetMappedEndPoint@CPipe@@QAAEXZ|
  0244c	e5cd0044	 strb        r0, [sp, #0x44]
  02450	e5dd3044	 ldrb        r3, [sp, #0x44]
  02454	e1a01003	 mov         r1, r3
  02458	e59f0308	 ldr         r0, [pc, #0x308]
  0245c	eb000000	 bl          NKDbgPrintfW
  02460	e3a03001	 mov         r3, #1
  02464	e58d3048	 str         r3, [sp, #0x48]
  02468	ea000001	 b           |$LN51@ProcessRes|
  0246c	e3a03000	 mov         r3, #0
  02470	e58d3048	 str         r3, [sp, #0x48]
  02474		 |$LN51@ProcessRes|

; 606  :                         pCurTD->SetStatus(STATUS_HALT);

  02474	e3a0100d	 mov         r1, #0xD
  02478	e59d00a0	 ldr         r0, [sp, #0xA0]
  0247c	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|
  02480	ea000010	 b           |$LN18@ProcessRes|
  02484		 |$LN19@ProcessRes|

; 607  :                     }
; 608  :                     else if (dwReturn == USB_DEVICE_NOT_RESPONDING_ERROR)

  02484	e59d3000	 ldr         r3, [sp]
  02488	e3530005	 cmp         r3, #5
  0248c	1a00000d	 bne         |$LN17@ProcessRes|

; 609  :                     {
; 610  :                         DEBUGMSG(ZONE_ERROR, (TEXT("Device not responding\r\n")));

  02490	e59f32cc	 ldr         r3, [pc, #0x2CC]
  02494	e5933440	 ldr         r3, [r3, #0x440]
  02498	e3130901	 tst         r3, #1, 18
  0249c	0a000004	 beq         |$LN52@ProcessRes|
  024a0	e59f02b8	 ldr         r0, [pc, #0x2B8]
  024a4	eb000000	 bl          NKDbgPrintfW
  024a8	e3a03001	 mov         r3, #1
  024ac	e58d304c	 str         r3, [sp, #0x4C]
  024b0	ea000001	 b           |$LN53@ProcessRes|
  024b4		 |$LN52@ProcessRes|
  024b4	e3a03000	 mov         r3, #0
  024b8	e58d304c	 str         r3, [sp, #0x4C]
  024bc		 |$LN53@ProcessRes|

; 611  :                         pCurTD->SetStatus(STATUS_ERROR);

  024bc	e3a0100f	 mov         r1, #0xF
  024c0	e59d00a0	 ldr         r0, [sp, #0xA0]
  024c4	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|
  024c8		 |$LN17@ProcessRes|
  024c8		 |$LN18@ProcessRes|
  024c8		 |$LN20@ProcessRes|

; 612  :                     }
; 613  :                 }
; 614  :                 break;

  024c8	ea00009a	 b           |$LN37@ProcessRes|
  024cc		 |$LN16@ProcessRes|

; 615  : 
; 616  :             case TD_DATA_OUT:
; 617  :                 {
; 618  :                     // Need to check the result here
; 619  :                     dwReturn = m_pCPipe->m_pCMhcd->CheckTxCSR(m_pCPipe->GetMappedEndPoint());

  024cc	e59d3098	 ldr         r3, [sp, #0x98]
  024d0	e2833004	 add         r3, r3, #4
  024d4	e5930000	 ldr         r0, [r3]
  024d8	eb000000	 bl          |?GetMappedEndPoint@CPipe@@QAAEXZ|
  024dc	e5cd0050	 strb        r0, [sp, #0x50]
  024e0	e5dd1050	 ldrb        r1, [sp, #0x50]
  024e4	e59d3098	 ldr         r3, [sp, #0x98]
  024e8	e2833004	 add         r3, r3, #4
  024ec	e5933000	 ldr         r3, [r3]
  024f0	e283300c	 add         r3, r3, #0xC
  024f4	e5930000	 ldr         r0, [r3]
  024f8	eb000000	 bl          |?CheckTxCSR@CHW@@QAAKE@Z|
  024fc	e58d0054	 str         r0, [sp, #0x54]
  02500	e59d3054	 ldr         r3, [sp, #0x54]
  02504	e58d3000	 str         r3, [sp]

; 620  :                     if (dwReturn == USB_NO_ERROR)

  02508	e59d3000	 ldr         r3, [sp]
  0250c	e3530000	 cmp         r3, #0
  02510	1a00003f	 bne         |$LN15@ProcessRes|

; 621  :                     {
; 622  :                         DWORD dwTfrSize = pCurTD->GetCurTfrSize();                    

  02514	e59d00a0	 ldr         r0, [sp, #0xA0]
  02518	eb000000	 bl          |?GetCurTfrSize@CQTD@@QAAKXZ|
  0251c	e58d0058	 str         r0, [sp, #0x58]
  02520	e59d3058	 ldr         r3, [sp, #0x58]
  02524	e58d300c	 str         r3, [sp, #0xC]

; 623  :                         pCurTD->SetTotTfrSize(pCurTD->GetCurTfrSize() + pCurTD->GetTotTfrSize());

  02528	e59d00a0	 ldr         r0, [sp, #0xA0]
  0252c	eb000000	 bl          |?GetCurTfrSize@CQTD@@QAAKXZ|
  02530	e58d005c	 str         r0, [sp, #0x5C]
  02534	e59d00a0	 ldr         r0, [sp, #0xA0]
  02538	eb000000	 bl          |?GetTotTfrSize@CQTD@@QAAKXZ|
  0253c	e58d0060	 str         r0, [sp, #0x60]
  02540	e59d205c	 ldr         r2, [sp, #0x5C]
  02544	e59d3060	 ldr         r3, [sp, #0x60]
  02548	e0821003	 add         r1, r2, r3
  0254c	e59d00a0	 ldr         r0, [sp, #0xA0]
  02550	eb000000	 bl          |?SetTotTfrSize@CQTD@@QAAXK@Z|

; 624  :                         if ((dwTfrSize%pCurTD->GetPacketSize() != 0)  || 
; 625  :                                 (pCurTD->GetTotTfrSize() >= pCurTD->GetDataSize()))                                               

  02554	e59d00a0	 ldr         r0, [sp, #0xA0]
  02558	eb000000	 bl          |?GetPacketSize@CQTD@@QAAKXZ|
  0255c	e58d0064	 str         r0, [sp, #0x64]
  02560	e59d100c	 ldr         r1, [sp, #0xC]
  02564	e59d0064	 ldr         r0, [sp, #0x64]
  02568	eb000000	 bl          __rt_udiv
  0256c	e3510000	 cmp         r1, #0
  02570	1a000009	 bne         |$LN13@ProcessRes|
  02574	e59d00a0	 ldr         r0, [sp, #0xA0]
  02578	eb000000	 bl          |?GetTotTfrSize@CQTD@@QAAKXZ|
  0257c	e58d0068	 str         r0, [sp, #0x68]
  02580	e59d00a0	 ldr         r0, [sp, #0xA0]
  02584	eb000000	 bl          |?GetDataSize@CQTD@@QAAKXZ|
  02588	e58d006c	 str         r0, [sp, #0x6C]
  0258c	e59d2068	 ldr         r2, [sp, #0x68]
  02590	e59d306c	 ldr         r3, [sp, #0x6C]
  02594	e1520003	 cmp         r2, r3
  02598	3a000003	 bcc         |$LN14@ProcessRes|
  0259c		 |$LN13@ProcessRes|

; 626  :                             pCurTD->SetStatus(STATUS_COMPLETE);

  0259c	e3a01011	 mov         r1, #0x11
  025a0	e59d00a0	 ldr         r0, [sp, #0xA0]
  025a4	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|

; 627  :                         else

  025a8	ea000002	 b           |$LN12@ProcessRes|
  025ac		 |$LN14@ProcessRes|

; 628  :                         {
; 629  :                             pCurTD->SetStatus(STATUS_SEND_MORE_DATA);

  025ac	e3a01005	 mov         r1, #5
  025b0	e59d00a0	 ldr         r0, [sp, #0xA0]
  025b4	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|
  025b8		 |$LN12@ProcessRes|

; 630  :                         }
; 631  :                         DEBUGMSG(ZONE_TRANSFER, (TEXT("ACK Data OUT ep %d, size %d, status %d\r\n"),
; 632  :                                 m_pCPipe->GetMappedEndPoint(), dwTfrSize, pCurTD->GetStatus()));

  025b8	e59f31a4	 ldr         r3, [pc, #0x1A4]
  025bc	e5933440	 ldr         r3, [r3, #0x440]
  025c0	e3130c01	 tst         r3, #1, 24
  025c4	0a00000f	 beq         |$LN54@ProcessRes|
  025c8	e59d00a0	 ldr         r0, [sp, #0xA0]
  025cc	eb000000	 bl          |?GetStatus@CQTD@@QAAKXZ|
  025d0	e58d0070	 str         r0, [sp, #0x70]
  025d4	e59d3098	 ldr         r3, [sp, #0x98]
  025d8	e2833004	 add         r3, r3, #4
  025dc	e5930000	 ldr         r0, [r3]
  025e0	eb000000	 bl          |?GetMappedEndPoint@CPipe@@QAAEXZ|
  025e4	e5cd0074	 strb        r0, [sp, #0x74]
  025e8	e59d3070	 ldr         r3, [sp, #0x70]
  025ec	e59d200c	 ldr         r2, [sp, #0xC]
  025f0	e5dd1074	 ldrb        r1, [sp, #0x74]
  025f4	e59f0170	 ldr         r0, [pc, #0x170]
  025f8	eb000000	 bl          NKDbgPrintfW
  025fc	e3a03001	 mov         r3, #1
  02600	e58d3078	 str         r3, [sp, #0x78]
  02604	ea000001	 b           |$LN55@ProcessRes|
  02608		 |$LN54@ProcessRes|
  02608	e3a03000	 mov         r3, #0
  0260c	e58d3078	 str         r3, [sp, #0x78]
  02610		 |$LN55@ProcessRes|

; 633  :                     }
; 634  :                     else if (dwReturn == USB_STALL_ERROR)

  02610	ea000025	 b           |$LN11@ProcessRes|
  02614		 |$LN15@ProcessRes|
  02614	e59d3000	 ldr         r3, [sp]
  02618	e3530004	 cmp         r3, #4
  0261c	1a000011	 bne         |$LN10@ProcessRes|

; 635  :                     {
; 636  :                         RETAILMSG(1, (TEXT("Tx Stall at EP %d\r\n"), m_pCPipe->GetMappedEndPoint()));

  02620	e59d3098	 ldr         r3, [sp, #0x98]
  02624	e2833004	 add         r3, r3, #4
  02628	e5930000	 ldr         r0, [r3]
  0262c	eb000000	 bl          |?GetMappedEndPoint@CPipe@@QAAEXZ|
  02630	e5cd007c	 strb        r0, [sp, #0x7C]
  02634	e5dd307c	 ldrb        r3, [sp, #0x7C]
  02638	e1a01003	 mov         r1, r3
  0263c	e59f0124	 ldr         r0, [pc, #0x124]
  02640	eb000000	 bl          NKDbgPrintfW
  02644	e3a03001	 mov         r3, #1
  02648	e58d3080	 str         r3, [sp, #0x80]
  0264c	ea000001	 b           |$LN57@ProcessRes|
  02650	e3a03000	 mov         r3, #0
  02654	e58d3080	 str         r3, [sp, #0x80]
  02658		 |$LN57@ProcessRes|

; 637  :                         pCurTD->SetStatus(STATUS_HALT);

  02658	e3a0100d	 mov         r1, #0xD
  0265c	e59d00a0	 ldr         r0, [sp, #0xA0]
  02660	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|
  02664	ea000010	 b           |$LN9@ProcessRes|
  02668		 |$LN10@ProcessRes|

; 638  :                     }
; 639  :                     else if (dwReturn == USB_DEVICE_NOT_RESPONDING_ERROR)

  02668	e59d3000	 ldr         r3, [sp]
  0266c	e3530005	 cmp         r3, #5
  02670	1a00000d	 bne         |$LN8@ProcessRes|

; 640  :                     {
; 641  :                         DEBUGMSG(ZONE_ERROR, (TEXT("Device not responding\r\n")));

  02674	e59f30e8	 ldr         r3, [pc, #0xE8]
  02678	e5933440	 ldr         r3, [r3, #0x440]
  0267c	e3130901	 tst         r3, #1, 18
  02680	0a000004	 beq         |$LN58@ProcessRes|
  02684	e59f00d4	 ldr         r0, [pc, #0xD4]
  02688	eb000000	 bl          NKDbgPrintfW
  0268c	e3a03001	 mov         r3, #1
  02690	e58d3084	 str         r3, [sp, #0x84]
  02694	ea000001	 b           |$LN59@ProcessRes|
  02698		 |$LN58@ProcessRes|
  02698	e3a03000	 mov         r3, #0
  0269c	e58d3084	 str         r3, [sp, #0x84]
  026a0		 |$LN59@ProcessRes|

; 642  :                         pCurTD->SetStatus(STATUS_ERROR);

  026a0	e3a0100f	 mov         r1, #0xF
  026a4	e59d00a0	 ldr         r0, [sp, #0xA0]
  026a8	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|
  026ac		 |$LN8@ProcessRes|
  026ac		 |$LN9@ProcessRes|
  026ac		 |$LN11@ProcessRes|

; 643  :                     }
; 644  :                 }
; 645  :                 break;

  026ac	ea000021	 b           |$LN37@ProcessRes|
  026b0		 |$LN7@ProcessRes|

; 646  : 
; 647  :             case TD_STATUS_IN:                    
; 648  :                 {
; 649  :                     dwReturn = m_pCPipe->m_pCMhcd->CheckRxCSR(m_pCPipe->GetMappedEndPoint());

  026b0	e59d3098	 ldr         r3, [sp, #0x98]
  026b4	e2833004	 add         r3, r3, #4
  026b8	e5930000	 ldr         r0, [r3]
  026bc	eb000000	 bl          |?GetMappedEndPoint@CPipe@@QAAEXZ|
  026c0	e5cd0088	 strb        r0, [sp, #0x88]
  026c4	e5dd1088	 ldrb        r1, [sp, #0x88]
  026c8	e59d3098	 ldr         r3, [sp, #0x98]
  026cc	e2833004	 add         r3, r3, #4
  026d0	e5933000	 ldr         r3, [r3]
  026d4	e283300c	 add         r3, r3, #0xC
  026d8	e5930000	 ldr         r0, [r3]
  026dc	eb000000	 bl          |?CheckRxCSR@CHW@@QAAKE@Z|
  026e0	e58d008c	 str         r0, [sp, #0x8C]
  026e4	e59d308c	 ldr         r3, [sp, #0x8C]
  026e8	e58d3000	 str         r3, [sp]

; 650  :                     pCurTD->ClearRxPktRdy();

  026ec	e59d00a0	 ldr         r0, [sp, #0xA0]
  026f0	eb000000	 bl          |?ClearRxPktRdy@CQTD@@QAAXXZ|

; 651  :                     if (dwReturn == USB_NO_ERROR)

  026f4	e59d3000	 ldr         r3, [sp]
  026f8	e3530000	 cmp         r3, #0
  026fc	1a000003	 bne         |$LN6@ProcessRes|

; 652  :                         pCurTD->SetStatus(STATUS_COMPLETE);                    

  02700	e3a01011	 mov         r1, #0x11
  02704	e59d00a0	 ldr         r0, [sp, #0xA0]
  02708	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|
  0270c	ea000009	 b           |$LN5@ProcessRes|
  02710		 |$LN6@ProcessRes|

; 653  :                     else if (dwReturn == USB_STALL_ERROR)

  02710	e59d3000	 ldr         r3, [sp]
  02714	e3530004	 cmp         r3, #4
  02718	1a000003	 bne         |$LN4@ProcessRes|

; 654  :                         pCurTD->SetStatus(STATUS_HALT);

  0271c	e3a0100d	 mov         r1, #0xD
  02720	e59d00a0	 ldr         r0, [sp, #0xA0]
  02724	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|

; 655  :                     else

  02728	ea000002	 b           |$LN3@ProcessRes|
  0272c		 |$LN4@ProcessRes|

; 656  :                         pCurTD->SetStatus(STATUS_ERROR);

  0272c	e3a0100f	 mov         r1, #0xF
  02730	e59d00a0	 ldr         r0, [sp, #0xA0]
  02734	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|
  02738		 |$LN3@ProcessRes|
  02738		 |$LN5@ProcessRes|
  02738		 |$LN2@ProcessRes|
  02738		 |$LN37@ProcessRes|

; 657  :                 }
; 658  :                 break;
; 659  :             default:
; 660  :                 break;
; 661  :             }
; 662  :     }
; 663  :     else // Reason for call

  02738	ea000002	 b           |$LN1@ProcessRes|
  0273c		 |$LN39@ProcessRes|

; 664  :         pCurTD->SetStatus(STATUS_COMPLETE); // Jeffrey: need to check here            

  0273c	e3a01011	 mov         r1, #0x11
  02740	e59d00a0	 ldr         r0, [sp, #0xA0]
  02744	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|
  02748		 |$LN1@ProcessRes|

; 665  : 
; 666  :     return dwReturn;

  02748	e59d3000	 ldr         r3, [sp]
  0274c	e58d3010	 str         r3, [sp, #0x10]

; 667  : }

  02750	e59d0010	 ldr         r0, [sp, #0x10]
  02754	e28dd090	 add         sp, sp, #0x90
  02758	e89d6000	 ldmia       sp, {sp, lr}
  0275c	e12fff1e	 bx          lr
  02760		 |$LN70@ProcessRes|
  02760		 |$LN71@ProcessRes|
  02760	00000000	 DCD         |??_C@_1DA@OEHJFID@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAr?$AAe?$AAs?$AAp?$AAo?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@|
  02764		 |$LN72@ProcessRes|
  02764	00000000	 DCD         |dpCurSettings|
  02768		 |$LN73@ProcessRes|
  02768	00000000	 DCD         |??_C@_1CI@CJFFIHPL@?$AAT?$AAx?$AA?5?$AAS?$AAt?$AAa?$AAl?$AAl?$AA?5?$AAa?$AAt?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0276c		 |$LN74@ProcessRes|
  0276c	00000000	 DCD         |??_C@_1FC@HMKCPHMJ@?$AAA?$AAC?$AAK?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AAO?$AAU?$AAT?$AA?5?$AAe?$AAp?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAs?$AAt?$AAa@|
  02770		 |$LN75@ProcessRes|
  02770	00000000	 DCD         |??_C@_1DC@JFDNNJLL@?$AAR?$AAe?$AAa?$AAd?$AAD?$AAa?$AAt?$AAa?$AAI?$AAn?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  02774		 |$LN76@ProcessRes|
  02774	00000000	 DCD         |??_C@_1CA@OPJAAOKJ@?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AAh?$AAa?$AAl?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  02778		 |$LN77@ProcessRes|
  02778	00000000	 DCD         |??_C@_1CI@POBHDIKE@?$AAW?$AAa?$AAi?$AAt?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  0277c		 |$M37601|

			 ENDP  ; |?ProcessResponse@CQTransfer@@QAAKKPAVCQTD@@@Z|, CQTransfer::ProcessResponse

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.h

  00000			 AREA	 |.pdata|, PDATA
|$T37617| DCD	|$LN5@GetError|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetError@CQTD@@QAAKXZ| PROC		; CQTD::GetError

; 91   :     DWORD GetError() { return m_dwError; };

  00000		 |$LN5@GetError|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37614|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833034	 add         r3, r3, #0x34
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M37615|

			 ENDP  ; |?GetError@CQTD@@QAAKXZ|, CQTD::GetError


  00000			 AREA	 |.pdata|, PDATA
|$T37625| DCD	|$LN5@GetDataSiz|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDataSize@CQTD@@QAAKXZ| PROC	; CQTD::GetDataSize

; 93   :     DWORD GetDataSize() { return m_cbData; };

  00000		 |$LN5@GetDataSiz|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37622|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833018	 add         r3, r3, #0x18
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M37623|

			 ENDP  ; |?GetDataSize@CQTD@@QAAKXZ|, CQTD::GetDataSize


  00000			 AREA	 |.pdata|, PDATA
|$T37633| DCD	|$LN5@GetTotTfrS|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetTotTfrSize@CQTD@@QAAKXZ| PROC	; CQTD::GetTotTfrSize

; 96   :     DWORD GetTotTfrSize() { return m_cbTransferred; };

  00000		 |$LN5@GetTotTfrS|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37630|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e283301c	 add         r3, r3, #0x1C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M37631|

			 ENDP  ; |?GetTotTfrSize@CQTD@@QAAKXZ|, CQTD::GetTotTfrSize


  00000			 AREA	 |.pdata|, PDATA
|$T37641| DCD	|$LN5@GetCurTfrS|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetCurTfrSize@CQTD@@QAAKXZ| PROC	; CQTD::GetCurTfrSize

; 97   :     DWORD GetCurTfrSize() { return m_cbCurTransferred;};

  00000		 |$LN5@GetCurTfrS|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37638|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833020	 add         r3, r3, #0x20
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M37639|

			 ENDP  ; |?GetCurTfrSize@CQTD@@QAAKXZ|, CQTD::GetCurTfrSize


  00000			 AREA	 |.pdata|, PDATA
|$T37649| DCD	|$LN5@GetPacketS|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPacketSize@CQTD@@QAAKXZ| PROC	; CQTD::GetPacketSize

; 98   :     DWORD GetPacketSize() { return m_dwPacketSize;};    

  00000		 |$LN5@GetPacketS|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37646|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e283302c	 add         r3, r3, #0x2C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M37647|

			 ENDP  ; |?GetPacketSize@CQTD@@QAAKXZ|, CQTD::GetPacketSize

	EXPORT	|??_C@_1BK@KBIGIHKK@?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?5?$AAh?$AAe?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@JPLJFMLK@?$AAT?$AAh?$AAi?$AAs?$AA?5?$AAi?$AAs?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAr?$AAe?$AAm?$AAa?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@FNGJGFHO@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA0?$AAx@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@LOJOODNM@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA?3?$AAm?$AA_?$AAp?$AAC?$AAQ?$AAT?$AAD?$AAL?$AAi?$AAs@| [ DATA ] ; `string'
	EXPORT	|?ProcessEP@CQTransfer@@QAAHKH@Z|	; CQTransfer::ProcessEP
	IMPORT	|?DumpRxCSR@CHW@@QAAXE@Z|		; CHW::DumpRxCSR

  00068			 AREA	 |.pdata|, PDATA
|$T37669| DCD	|$LN28@ProcessEP|
	DCD	0x4000d804
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\trans.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@KBIGIHKK@?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?5?$AAh?$AAe?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "b", 0x0, "u", 0x0, "g", 0x0, " ", 0x0, "h"
	DCB	0x0, "e", 0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@JPLJFMLK@?$AAT?$AAh?$AAi?$AAs?$AA?5?$AAi?$AAs?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAr?$AAe?$AAm?$AAa?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAa@| DCB "T"
	DCB	0x0, "h", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "i", 0x0, "s"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "e"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "m", 0x0, "a", 0x0, "i"
	DCB	0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "d"
	DCB	0x0, "a", 0x0, "t", 0x0, "a", 0x0, " ", 0x0, "b", 0x0, "y"
	DCB	0x0, " ", 0x0, "d", 0x0, "u", 0x0, "m", 0x0, "p", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "e"
	DCB	0x0, " ", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "u", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@FNGJGFHO@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA0?$AAx@| DCB "C"
	DCB	0x0, "Q", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":", 0x0, "P"
	DCB	0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, "E", 0x0, "P", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "u", 0x0, "s", 0x0, " ", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, ",", 0x0, " "
	DCB	0x0, "i", 0x0, "s", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "(", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@LOJOODNM@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA?3?$AAm?$AA_?$AAp?$AAC?$AAQ?$AAT?$AAD?$AAL?$AAi?$AAs@| DCB "C"
	DCB	0x0, "Q", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":", 0x0, "P"
	DCB	0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, "E", 0x0, "P", 0x0, ":", 0x0, "m", 0x0, "_", 0x0, "p"
	DCB	0x0, "C", 0x0, "Q", 0x0, "T", 0x0, "D", 0x0, "L", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, " ", 0x0, "=", 0x0, "=", 0x0, " "
	DCB	0x0, "N", 0x0, "U", 0x0, "L", 0x0, "L", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  0277c			 AREA	 |.text|, CODE, ARM

  0277c		 |?ProcessEP@CQTransfer@@QAAHKH@Z| PROC	; CQTransfer::ProcessEP

; 677  : {

  0277c		 |$LN28@ProcessEP|
  0277c	e1a0c00d	 mov         r12, sp
  02780	e92d0007	 stmdb       sp!, {r0 - r2}
  02784	e92d5000	 stmdb       sp!, {r12, lr}
  02788	e24dd044	 sub         sp, sp, #0x44
  0278c		 |$M37666|

; 678  :     if (m_pCQTDList==NULL) { // Has been created. Somthing wrong.

  0278c	e59d304c	 ldr         r3, [sp, #0x4C]
  02790	e2833068	 add         r3, r3, #0x68
  02794	e5933000	 ldr         r3, [r3]
  02798	e3530000	 cmp         r3, #0
  0279c	1a00000d	 bne         |$LN11@ProcessEP|

; 679  :         DEBUGMSG(ZONE_ERROR, (TEXT("CQTransfer::ProcessEP:m_pCQTDList == NULL\r\n")));

  027a0	e59f3320	 ldr         r3, [pc, #0x320]
  027a4	e5933440	 ldr         r3, [r3, #0x440]
  027a8	e3130901	 tst         r3, #1, 18
  027ac	0a000004	 beq         |$LN14@ProcessEP|
  027b0	e59f0320	 ldr         r0, [pc, #0x320]
  027b4	eb000000	 bl          NKDbgPrintfW
  027b8	e3a03001	 mov         r3, #1
  027bc	e58d3010	 str         r3, [sp, #0x10]
  027c0	ea000001	 b           |$LN15@ProcessEP|
  027c4		 |$LN14@ProcessEP|
  027c4	e3a03000	 mov         r3, #0
  027c8	e58d3010	 str         r3, [sp, #0x10]
  027cc		 |$LN15@ProcessEP|

; 680  :         return TRUE;

  027cc	e3a03001	 mov         r3, #1
  027d0	e58d300c	 str         r3, [sp, #0xC]
  027d4	ea0000b4	 b           |$LN12@ProcessEP|
  027d8		 |$LN11@ProcessEP|

; 681  :     }
; 682  :     CQTD * pCurTD = m_pCQTDList;

  027d8	e59d304c	 ldr         r3, [sp, #0x4C]
  027dc	e2833068	 add         r3, r3, #0x68
  027e0	e5933000	 ldr         r3, [r3]
  027e4	e58d3000	 str         r3, [sp]

; 683  :     DWORD dwReturn = USB_NO_ERROR;    

  027e8	e3a03000	 mov         r3, #0
  027ec	e58d3004	 str         r3, [sp, #4]

; 684  :     m_pCPipe->GetQHead()->Lock();

  027f0	e59d304c	 ldr         r3, [sp, #0x4C]
  027f4	e2833004	 add         r3, r3, #4
  027f8	e5932000	 ldr         r2, [r3]
  027fc	e59d304c	 ldr         r3, [sp, #0x4C]
  02800	e2833004	 add         r3, r3, #4
  02804	e5930000	 ldr         r0, [r3]
  02808	e5923000	 ldr         r3, [r2]
  0280c	e2833044	 add         r3, r3, #0x44
  02810	e5933000	 ldr         r3, [r3]
  02814	e1a0e00f	 mov         lr, pc
  02818	e12fff13	 bx          r3
  0281c	e58d0014	 str         r0, [sp, #0x14]
  02820	e59d0014	 ldr         r0, [sp, #0x14]
  02824	eb000000	 bl          |?Lock@CQH@@QAAXXZ|
  02828		 |$LN10@ProcessEP|

; 685  :     // Find back the current working one.
; 686  :     while (pCurTD!=NULL) {

  02828	e59d3000	 ldr         r3, [sp]
  0282c	e3530000	 cmp         r3, #0
  02830	0a000085	 beq         |$LN9@ProcessEP|

; 687  :         ASSERT(pCurTD->m_pTrans == this);

  02834	e59d3000	 ldr         r3, [sp]
  02838	e5932000	 ldr         r2, [r3]
  0283c	e59d304c	 ldr         r3, [sp, #0x4C]
  02840	e1520003	 cmp         r2, r3
  02844	1a000002	 bne         |$LN16@ProcessEP|
  02848	e3a03001	 mov         r3, #1
  0284c	e58d3018	 str         r3, [sp, #0x18]
  02850	ea000008	 b           |$LN17@ProcessEP|
  02854		 |$LN16@ProcessEP|
  02854	e3a03c02	 mov         r3, #2, 24
  02858	e38330af	 orr         r3, r3, #0xAF
  0285c	e59f2270	 ldr         r2, [pc, #0x270]
  02860	e59f1268	 ldr         r1, [pc, #0x268]
  02864	e59f0260	 ldr         r0, [pc, #0x260]
  02868	eb000000	 bl          NKDbgPrintfW
  0286c	e6000010	 __debugbreak_ce
  02870	e3a03000	 mov         r3, #0
  02874	e58d3018	 str         r3, [sp, #0x18]
  02878		 |$LN17@ProcessEP|

; 688  :         DWORD dwStatus = pCurTD->GetStatus();

  02878	e59d0000	 ldr         r0, [sp]
  0287c	eb000000	 bl          |?GetStatus@CQTD@@QAAKXZ|
  02880	e58d001c	 str         r0, [sp, #0x1C]
  02884	e59d301c	 ldr         r3, [sp, #0x1C]
  02888	e58d3008	 str         r3, [sp, #8]

; 689  :         // Condition:
; 690  :         // (1) Status = STATUS_WAIT_RESPONSE & Interrupt NOT from DMA 
; 691  :         // (2) Status = STATUS_WAIT_DMA_0_RD_FIFO_COMPLETE & Interrupt from DMA
; 692  :         // (3) Status = STATUS_WAIT_DMA_1_RD_FIFO_COMPLETE & Interrupt from DMA
; 693  :         // (4) Status = STATUS_WAIT_DMA_WR_2_FIFO_TXPKT_RDY & Interrupt from DMA
; 694  :         DEBUGMSG(ZONE_TRANSFER, (TEXT("CQTransfer::ProcessEP status (0x%x), isDMAIntr(%d)\r\n"),
; 695  :             dwStatus, isDMAIntr));

  0288c	e59f3234	 ldr         r3, [pc, #0x234]
  02890	e5933440	 ldr         r3, [r3, #0x440]
  02894	e3130c01	 tst         r3, #1, 24
  02898	0a000006	 beq         |$LN18@ProcessEP|
  0289c	e59d2054	 ldr         r2, [sp, #0x54]
  028a0	e59d1008	 ldr         r1, [sp, #8]
  028a4	e59f0218	 ldr         r0, [pc, #0x218]
  028a8	eb000000	 bl          NKDbgPrintfW
  028ac	e3a03001	 mov         r3, #1
  028b0	e58d3020	 str         r3, [sp, #0x20]
  028b4	ea000001	 b           |$LN19@ProcessEP|
  028b8		 |$LN18@ProcessEP|
  028b8	e3a03000	 mov         r3, #0
  028bc	e58d3020	 str         r3, [sp, #0x20]
  028c0		 |$LN19@ProcessEP|

; 696  :         if (((dwStatus == STATUS_WAIT_RESPONSE) && (isDMAIntr == FALSE)) ||
; 697  :             (((dwStatus == STATUS_WAIT_DMA_0_RD_FIFO_COMPLETE)|| (dwStatus == STATUS_WAIT_DMA_1_RD_FIFO_COMPLETE)) &&
; 698  :                 (isDMAIntr == TRUE)) ||                
; 699  :             ((dwStatus == STATUS_WAIT_DMA_WR_2_FIFO_TXPKT_RDY) && (isDMAIntr == TRUE)))

  028c0	e59d3008	 ldr         r3, [sp, #8]
  028c4	e3530003	 cmp         r3, #3
  028c8	1a000002	 bne         |$LN6@ProcessEP|
  028cc	e59d3054	 ldr         r3, [sp, #0x54]
  028d0	e3530000	 cmp         r3, #0
  028d4	0a00000e	 beq         |$LN7@ProcessEP|
  028d8		 |$LN6@ProcessEP|
  028d8	e59d3008	 ldr         r3, [sp, #8]
  028dc	e353000a	 cmp         r3, #0xA
  028e0	0a000002	 beq         |$LN4@ProcessEP|
  028e4	e59d3008	 ldr         r3, [sp, #8]
  028e8	e353000b	 cmp         r3, #0xB
  028ec	1a000002	 bne         |$LN5@ProcessEP|
  028f0		 |$LN4@ProcessEP|
  028f0	e59d3054	 ldr         r3, [sp, #0x54]
  028f4	e3530001	 cmp         r3, #1
  028f8	0a000005	 beq         |$LN7@ProcessEP|
  028fc		 |$LN5@ProcessEP|
  028fc	e59d3008	 ldr         r3, [sp, #8]
  02900	e3530008	 cmp         r3, #8
  02904	1a00000a	 bne         |$LN8@ProcessEP|
  02908	e59d3054	 ldr         r3, [sp, #0x54]
  0290c	e3530001	 cmp         r3, #1
  02910	1a000007	 bne         |$LN8@ProcessEP|
  02914		 |$LN7@ProcessEP|

; 700  :         {
; 701  :             dwReturn = ProcessResponse(dwReason, pCurTD);

  02914	e59d2000	 ldr         r2, [sp]
  02918	e59d1050	 ldr         r1, [sp, #0x50]
  0291c	e59d004c	 ldr         r0, [sp, #0x4C]
  02920	eb000000	 bl          |?ProcessResponse@CQTransfer@@QAAKKPAVCQTD@@@Z|
  02924	e58d0024	 str         r0, [sp, #0x24]
  02928	e59d3024	 ldr         r3, [sp, #0x24]
  0292c	e58d3004	 str         r3, [sp, #4]

; 702  :             break;

  02930	ea000045	 b           |$LN9@ProcessEP|
  02934		 |$LN8@ProcessEP|

; 703  :         }
; 704  : 
; 705  :         if (((dwStatus == STATUS_WAIT_DMA_WR_RESPONSE)||(dwStatus == STATUS_WAIT_DMA_WR_2_FIFO_TXPKT_NOTRDY)) && isDMAIntr)

  02934	e59d3008	 ldr         r3, [sp, #8]
  02938	e3530007	 cmp         r3, #7
  0293c	0a000002	 beq         |$LN2@ProcessEP|
  02940	e59d3008	 ldr         r3, [sp, #8]
  02944	e3530009	 cmp         r3, #9
  02948	1a000019	 bne         |$LN3@ProcessEP|
  0294c		 |$LN2@ProcessEP|
  0294c	e59d3054	 ldr         r3, [sp, #0x54]
  02950	e3530000	 cmp         r3, #0
  02954	0a000016	 beq         |$LN3@ProcessEP|

; 706  :         {                
; 707  :             m_pCPipe->m_pCMhcd->SendOutDMA(m_pCPipe->GetMappedEndPoint(),pCurTD);

  02958	e59d304c	 ldr         r3, [sp, #0x4C]
  0295c	e2833004	 add         r3, r3, #4
  02960	e5930000	 ldr         r0, [r3]
  02964	eb000000	 bl          |?GetMappedEndPoint@CPipe@@QAAEXZ|
  02968	e5cd0028	 strb        r0, [sp, #0x28]
  0296c	e59d2000	 ldr         r2, [sp]
  02970	e5dd1028	 ldrb        r1, [sp, #0x28]
  02974	e59d304c	 ldr         r3, [sp, #0x4C]
  02978	e2833004	 add         r3, r3, #4
  0297c	e5933000	 ldr         r3, [r3]
  02980	e283300c	 add         r3, r3, #0xC
  02984	e593e000	 ldr         lr, [r3]
  02988	e59d304c	 ldr         r3, [sp, #0x4C]
  0298c	e2833004	 add         r3, r3, #4
  02990	e5933000	 ldr         r3, [r3]
  02994	e283300c	 add         r3, r3, #0xC
  02998	e5930000	 ldr         r0, [r3]
  0299c	e59e3000	 ldr         r3, [lr]
  029a0	e2833054	 add         r3, r3, #0x54
  029a4	e5933000	 ldr         r3, [r3]
  029a8	e1a0e00f	 mov         lr, pc
  029ac	e12fff13	 bx          r3

; 708  :             break;

  029b0	ea000025	 b           |$LN9@ProcessEP|
  029b4		 |$LN3@ProcessEP|

; 709  :         }
; 710  : 
; 711  :         // Abnormal receive of EP interrupt
; 712  :         if ((dwStatus == STATUS_WAIT_DMA_1_RD_FIFO_COMPLETE) && (isDMAIntr == 0))

  029b4	e59d3008	 ldr         r3, [sp, #8]
  029b8	e353000b	 cmp         r3, #0xB
  029bc	1a00001c	 bne         |$LN1@ProcessEP|
  029c0	e59d3054	 ldr         r3, [sp, #0x54]
  029c4	e3530000	 cmp         r3, #0
  029c8	1a000019	 bne         |$LN1@ProcessEP|

; 713  :         {
; 714  :             RETAILMSG(1, (TEXT("This is to read the remaining data by dumping the value\r\n")));

  029cc	e59f00ec	 ldr         r0, [pc, #0xEC]
  029d0	eb000000	 bl          NKDbgPrintfW
  029d4	e3a03001	 mov         r3, #1
  029d8	e58d302c	 str         r3, [sp, #0x2C]
  029dc	ea000001	 b           |$LN21@ProcessEP|
  029e0	e3a03000	 mov         r3, #0
  029e4	e58d302c	 str         r3, [sp, #0x2C]
  029e8		 |$LN21@ProcessEP|

; 715  :             m_pCPipe->m_pCMhcd->DumpRxCSR(m_pCPipe->GetMappedEndPoint());

  029e8	e59d304c	 ldr         r3, [sp, #0x4C]
  029ec	e2833004	 add         r3, r3, #4
  029f0	e5930000	 ldr         r0, [r3]
  029f4	eb000000	 bl          |?GetMappedEndPoint@CPipe@@QAAEXZ|
  029f8	e5cd0030	 strb        r0, [sp, #0x30]
  029fc	e5dd1030	 ldrb        r1, [sp, #0x30]
  02a00	e59d304c	 ldr         r3, [sp, #0x4C]
  02a04	e2833004	 add         r3, r3, #4
  02a08	e5933000	 ldr         r3, [r3]
  02a0c	e283300c	 add         r3, r3, #0xC
  02a10	e5930000	 ldr         r0, [r3]
  02a14	eb000000	 bl          |?DumpRxCSR@CHW@@QAAXE@Z|

; 716  :             RETAILMSG(1, (TEXT("Debug here\r\n")));

  02a18	e59f009c	 ldr         r0, [pc, #0x9C]
  02a1c	eb000000	 bl          NKDbgPrintfW
  02a20	e3a03001	 mov         r3, #1
  02a24	e58d3034	 str         r3, [sp, #0x34]
  02a28	ea000001	 b           |$LN23@ProcessEP|
  02a2c	e3a03000	 mov         r3, #0
  02a30	e58d3034	 str         r3, [sp, #0x34]
  02a34		 |$LN23@ProcessEP|
  02a34		 |$LN1@ProcessEP|

; 717  :         }
; 718  :         pCurTD = pCurTD ->GetNextTD();

  02a34	e59d0000	 ldr         r0, [sp]
  02a38	eb000000	 bl          |?GetNextTD@CQTD@@QAAPAV1@XZ|
  02a3c	e58d0038	 str         r0, [sp, #0x38]
  02a40	e59d3038	 ldr         r3, [sp, #0x38]
  02a44	e58d3000	 str         r3, [sp]

; 719  :     }

  02a48	eaffff76	 b           |$LN10@ProcessEP|
  02a4c		 |$LN9@ProcessEP|

; 720  :     m_pCPipe->GetQHead()->UnLock();

  02a4c	e59d304c	 ldr         r3, [sp, #0x4C]
  02a50	e2833004	 add         r3, r3, #4
  02a54	e5932000	 ldr         r2, [r3]
  02a58	e59d304c	 ldr         r3, [sp, #0x4C]
  02a5c	e2833004	 add         r3, r3, #4
  02a60	e5930000	 ldr         r0, [r3]
  02a64	e5923000	 ldr         r3, [r2]
  02a68	e2833044	 add         r3, r3, #0x44
  02a6c	e5933000	 ldr         r3, [r3]
  02a70	e1a0e00f	 mov         lr, pc
  02a74	e12fff13	 bx          r3
  02a78	e58d003c	 str         r0, [sp, #0x3C]
  02a7c	e59d003c	 ldr         r0, [sp, #0x3C]
  02a80	eb000000	 bl          |?UnLock@CQH@@QAAXXZ|

; 721  : 
; 722  :     //DEBUGMSG(ZONE_HCD, (TEXT("CQTransfer:ProcessEP return %s\r\n"), ((dwReturn == USB_NO_ERROR)?TEXT("TRUE"):TEXT("FALSE"))));
; 723  :     return ((dwReturn == USB_NO_ERROR)? TRUE: FALSE);

  02a84	e59d3004	 ldr         r3, [sp, #4]
  02a88	e3530000	 cmp         r3, #0
  02a8c	1a000002	 bne         |$LN24@ProcessEP|
  02a90	e3a03001	 mov         r3, #1
  02a94	e58d3040	 str         r3, [sp, #0x40]
  02a98	ea000001	 b           |$LN25@ProcessEP|
  02a9c		 |$LN24@ProcessEP|
  02a9c	e3a03000	 mov         r3, #0
  02aa0	e58d3040	 str         r3, [sp, #0x40]
  02aa4		 |$LN25@ProcessEP|
  02aa4	e59d3040	 ldr         r3, [sp, #0x40]
  02aa8	e58d300c	 str         r3, [sp, #0xC]
  02aac		 |$LN12@ProcessEP|

; 724  : }

  02aac	e59d000c	 ldr         r0, [sp, #0xC]
  02ab0	e28dd044	 add         sp, sp, #0x44
  02ab4	e89d6000	 ldmia       sp, {sp, lr}
  02ab8	e12fff1e	 bx          lr
  02abc		 |$LN29@ProcessEP|
  02abc		 |$LN30@ProcessEP|
  02abc	00000000	 DCD         |??_C@_1BK@KBIGIHKK@?$AAD?$AAe?$AAb?$AAu?$AAg?$AA?5?$AAh?$AAe?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  02ac0		 |$LN31@ProcessEP|
  02ac0	00000000	 DCD         |??_C@_1HE@JPLJFMLK@?$AAT?$AAh?$AAi?$AAs?$AA?5?$AAi?$AAs?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAr?$AAe?$AAm?$AAa?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAa@|
  02ac4		 |$LN32@ProcessEP|
  02ac4	00000000	 DCD         |??_C@_1GK@FNGJGFHO@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA0?$AAx@|
  02ac8		 |$LN33@ProcessEP|
  02ac8	00000000	 DCD         |dpCurSettings|
  02acc		 |$LN34@ProcessEP|
  02acc	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  02ad0		 |$LN35@ProcessEP|
  02ad0	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  02ad4		 |$LN36@ProcessEP|
  02ad4	00000000	 DCD         |??_C@_1LK@IFLKDCCK@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  02ad8		 |$LN37@ProcessEP|
  02ad8	00000000	 DCD         |??_C@_1FI@LOJOODNM@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA?3?$AAm?$AA_?$AAp?$AAC?$AAQ?$AAT?$AAD?$AAL?$AAi?$AAs@|
  02adc		 |$M37667|

			 ENDP  ; |?ProcessEP@CQTransfer@@QAAHKH@Z|, CQTransfer::ProcessEP

	EXPORT	|??_C@_1GI@FMPNEOID@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAs?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAD?$AAo?$AAn?$AAe?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@IMAPIFEJ@?$AAI?$AAs?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAD?$AAo?$AAn?$AAe?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@OOLMAOIB@?$AAp?$AAC?$AAu?$AAr?$AAT?$AAD?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@IONJMEJE@?$AAI?$AAs?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAD?$AAo?$AAn?$AAe?$AA?3?$AAp?$AAC?$AAu?$AAr?$AAT?$AAD?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@LFCCAJDE@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAs?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAD?$AAo?$AAn?$AAe?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs@| [ DATA ] ; `string'

  00070			 AREA	 |.pdata|, PDATA
|$T37696| DCD	|$LN24@IsTransfer|
	DCD	0x4000b304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@FMPNEOID@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAs?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAD?$AAo?$AAn?$AAe?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs@| DCB "C"
	DCB	0x0, "Q", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":", 0x0, "I"
	DCB	0x0, "s", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, "D", 0x0, "o", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "(", 0x0, "t", 0x0, "h", 0x0, "i"
	DCB	0x0, "s", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u"
	DCB	0x0, "r", 0x0, "n", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " "
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@IMAPIFEJ@?$AAI?$AAs?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAD?$AAo?$AAn?$AAe?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| DCB "I"
	DCB	0x0, "s", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, "D", 0x0, "o", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "w", 0x0, "i", 0x0, "t", 0x0, "h"
	DCB	0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@OOLMAOIB@?$AAp?$AAC?$AAu?$AAr?$AAT?$AAD?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$AN@| DCB "p"
	DCB	0x0, "C", 0x0, "u", 0x0, "r", 0x0, "T", 0x0, "D", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "s", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@IONJMEJE@?$AAI?$AAs?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAD?$AAo?$AAn?$AAe?$AA?3?$AAp?$AAC?$AAu?$AAr?$AAT?$AAD?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "s", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, "D", 0x0, "o", 0x0, "n"
	DCB	0x0, "e", 0x0, ":", 0x0, "p", 0x0, "C", 0x0, "u", 0x0, "r"
	DCB	0x0, "T", 0x0, "D", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@LFCCAJDE@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAs?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAD?$AAo?$AAn?$AAe?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs@| DCB "C"
	DCB	0x0, "Q", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":", 0x0, "I"
	DCB	0x0, "s", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, "D", 0x0, "o", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "(", 0x0, "t", 0x0, "h", 0x0, "i"
	DCB	0x0, "s", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ",", 0x0, "i", 0x0, "d", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  02adc			 AREA	 |.text|, CODE, ARM

  02adc		 |?IsTransferDone@CQTransfer@@QAAHXZ| PROC ; CQTransfer::IsTransferDone

; 734  : {

  02adc		 |$LN24@IsTransfer|
  02adc	e1a0c00d	 mov         r12, sp
  02ae0	e92d0001	 stmdb       sp!, {r0}
  02ae4	e92d5000	 stmdb       sp!, {r12, lr}
  02ae8	e24dd038	 sub         sp, sp, #0x38
  02aec		 |$M37693|

; 735  :     DEBUGMSG(ZONE_TRANSFER, (TEXT("CQTransfer::IsTransferDone (this=0x%x,id=0x%x)\r\n"),this,m_dwTransferID));

  02aec	e59f3294	 ldr         r3, [pc, #0x294]
  02af0	e5933440	 ldr         r3, [r3, #0x440]
  02af4	e3130c01	 tst         r3, #1, 24
  02af8	0a000008	 beq         |$LN10@IsTransfer|
  02afc	e59d3040	 ldr         r3, [sp, #0x40]
  02b00	e2833064	 add         r3, r3, #0x64
  02b04	e5932000	 ldr         r2, [r3]
  02b08	e59d1040	 ldr         r1, [sp, #0x40]
  02b0c	e59f0290	 ldr         r0, [pc, #0x290]
  02b10	eb000000	 bl          NKDbgPrintfW
  02b14	e3a03001	 mov         r3, #1
  02b18	e58d3010	 str         r3, [sp, #0x10]
  02b1c	ea000001	 b           |$LN11@IsTransfer|
  02b20		 |$LN10@IsTransfer|
  02b20	e3a03000	 mov         r3, #0
  02b24	e58d3010	 str         r3, [sp, #0x10]
  02b28		 |$LN11@IsTransfer|

; 736  :     if (m_pCQTDList==NULL) { // Has been created. Somthing wrong.

  02b28	e59d3040	 ldr         r3, [sp, #0x40]
  02b2c	e2833068	 add         r3, r3, #0x68
  02b30	e5933000	 ldr         r3, [r3]
  02b34	e3530000	 cmp         r3, #0
  02b38	1a000002	 bne         |$LN7@IsTransfer|

; 737  :         return TRUE;

  02b3c	e3a03001	 mov         r3, #1
  02b40	e58d300c	 str         r3, [sp, #0xC]
  02b44	ea00008a	 b           |$LN8@IsTransfer|
  02b48		 |$LN7@IsTransfer|

; 738  :     }
; 739  :     CQTD * pCurTD = m_pCQTDList;

  02b48	e59d3040	 ldr         r3, [sp, #0x40]
  02b4c	e2833068	 add         r3, r3, #0x68
  02b50	e5933000	 ldr         r3, [r3]
  02b54	e58d3004	 str         r3, [sp, #4]

; 740  :     BOOL bReturn=TRUE;

  02b58	e3a03001	 mov         r3, #1
  02b5c	e58d3000	 str         r3, [sp]

; 741  : 
; 742  :     DEBUGMSG(ZONE_TRANSFER, (TEXT("IsTransferDone:pCurTD = 0x%x\r\n"),pCurTD));

  02b60	e59f3220	 ldr         r3, [pc, #0x220]
  02b64	e5933440	 ldr         r3, [r3, #0x440]
  02b68	e3130c01	 tst         r3, #1, 24
  02b6c	0a000005	 beq         |$LN12@IsTransfer|
  02b70	e59d1004	 ldr         r1, [sp, #4]
  02b74	e59f0224	 ldr         r0, [pc, #0x224]
  02b78	eb000000	 bl          NKDbgPrintfW
  02b7c	e3a03001	 mov         r3, #1
  02b80	e58d3014	 str         r3, [sp, #0x14]
  02b84	ea000001	 b           |$LN13@IsTransfer|
  02b88		 |$LN12@IsTransfer|
  02b88	e3a03000	 mov         r3, #0
  02b8c	e58d3014	 str         r3, [sp, #0x14]
  02b90		 |$LN13@IsTransfer|

; 743  :     m_pCPipe->GetQHead()->Lock();

  02b90	e59d3040	 ldr         r3, [sp, #0x40]
  02b94	e2833004	 add         r3, r3, #4
  02b98	e5932000	 ldr         r2, [r3]
  02b9c	e59d3040	 ldr         r3, [sp, #0x40]
  02ba0	e2833004	 add         r3, r3, #4
  02ba4	e5930000	 ldr         r0, [r3]
  02ba8	e5923000	 ldr         r3, [r2]
  02bac	e2833044	 add         r3, r3, #0x44
  02bb0	e5933000	 ldr         r3, [r3]
  02bb4	e1a0e00f	 mov         lr, pc
  02bb8	e12fff13	 bx          r3
  02bbc	e58d0018	 str         r0, [sp, #0x18]
  02bc0	e59d0018	 ldr         r0, [sp, #0x18]
  02bc4	eb000000	 bl          |?Lock@CQH@@QAAXXZ|
  02bc8		 |$LN6@IsTransfer|

; 744  :     while ( pCurTD!=NULL) {

  02bc8	e59d3004	 ldr         r3, [sp, #4]
  02bcc	e3530000	 cmp         r3, #0
  02bd0	0a00004a	 beq         |$LN5@IsTransfer|

; 745  :         ASSERT(pCurTD->m_pTrans == this);

  02bd4	e59d3004	 ldr         r3, [sp, #4]
  02bd8	e5932000	 ldr         r2, [r3]
  02bdc	e59d3040	 ldr         r3, [sp, #0x40]
  02be0	e1520003	 cmp         r2, r3
  02be4	1a000002	 bne         |$LN14@IsTransfer|
  02be8	e3a03001	 mov         r3, #1
  02bec	e58d301c	 str         r3, [sp, #0x1C]
  02bf0	ea000008	 b           |$LN15@IsTransfer|
  02bf4		 |$LN14@IsTransfer|
  02bf4	e3a03c02	 mov         r3, #2, 24
  02bf8	e38330e9	 orr         r3, r3, #0xE9
  02bfc	e59f2198	 ldr         r2, [pc, #0x198]
  02c00	e59f1190	 ldr         r1, [pc, #0x190]
  02c04	e59f0188	 ldr         r0, [pc, #0x188]
  02c08	eb000000	 bl          NKDbgPrintfW
  02c0c	e6000010	 __debugbreak_ce
  02c10	e3a03000	 mov         r3, #0
  02c14	e58d301c	 str         r3, [sp, #0x1C]
  02c18		 |$LN15@IsTransfer|

; 746  :         DWORD dwStatus = pCurTD->GetStatus();

  02c18	e59d0004	 ldr         r0, [sp, #4]
  02c1c	eb000000	 bl          |?GetStatus@CQTD@@QAAKXZ|
  02c20	e58d0020	 str         r0, [sp, #0x20]
  02c24	e59d3020	 ldr         r3, [sp, #0x20]
  02c28	e58d3008	 str         r3, [sp, #8]

; 747  :         DEBUGMSG(ZONE_TRANSFER, (TEXT("pCurTD(0x%x) return status = %d\r\n"), pCurTD, dwStatus));

  02c2c	e59f3154	 ldr         r3, [pc, #0x154]
  02c30	e5933440	 ldr         r3, [r3, #0x440]
  02c34	e3130c01	 tst         r3, #1, 24
  02c38	0a000006	 beq         |$LN16@IsTransfer|
  02c3c	e59d2008	 ldr         r2, [sp, #8]
  02c40	e59d1004	 ldr         r1, [sp, #4]
  02c44	e59f0144	 ldr         r0, [pc, #0x144]
  02c48	eb000000	 bl          NKDbgPrintfW
  02c4c	e3a03001	 mov         r3, #1
  02c50	e58d3024	 str         r3, [sp, #0x24]
  02c54	ea000001	 b           |$LN17@IsTransfer|
  02c58		 |$LN16@IsTransfer|
  02c58	e3a03000	 mov         r3, #0
  02c5c	e58d3024	 str         r3, [sp, #0x24]
  02c60		 |$LN17@IsTransfer|

; 748  :         if (dwStatus == STATUS_HALT || dwStatus == STATUS_ABORT || dwStatus == STATUS_ERROR) { // This Transfer Has been halted due to error.            

  02c60	e59d3008	 ldr         r3, [sp, #8]
  02c64	e353000d	 cmp         r3, #0xD
  02c68	0a000005	 beq         |$LN3@IsTransfer|
  02c6c	e59d3008	 ldr         r3, [sp, #8]
  02c70	e353000e	 cmp         r3, #0xE
  02c74	0a000002	 beq         |$LN3@IsTransfer|
  02c78	e59d3008	 ldr         r3, [sp, #8]
  02c7c	e353000f	 cmp         r3, #0xF
  02c80	1a00000c	 bne         |$LN4@IsTransfer|
  02c84		 |$LN3@IsTransfer|

; 749  :             DEBUGMSG(ZONE_TRANSFER, (TEXT("IsTransferDone with error = %d\r\n"), dwStatus));

  02c84	e59f30fc	 ldr         r3, [pc, #0xFC]
  02c88	e5933440	 ldr         r3, [r3, #0x440]
  02c8c	e3130c01	 tst         r3, #1, 24
  02c90	0a000005	 beq         |$LN18@IsTransfer|
  02c94	e59d1008	 ldr         r1, [sp, #8]
  02c98	e59f00ec	 ldr         r0, [pc, #0xEC]
  02c9c	eb000000	 bl          NKDbgPrintfW
  02ca0	e3a03001	 mov         r3, #1
  02ca4	e58d3028	 str         r3, [sp, #0x28]
  02ca8	ea000001	 b           |$LN19@IsTransfer|
  02cac		 |$LN18@IsTransfer|
  02cac	e3a03000	 mov         r3, #0
  02cb0	e58d3028	 str         r3, [sp, #0x28]
  02cb4		 |$LN19@IsTransfer|

; 750  :             break;

  02cb4	ea000011	 b           |$LN5@IsTransfer|
  02cb8		 |$LN4@IsTransfer|

; 751  :         }
; 752  :         if (dwStatus == STATUS_WAIT_TRANSFER || ((dwStatus > STATUS_ACTIVE_START) && (dwStatus < STATUS_ACTIVE_END))) { 

  02cb8	e59d3008	 ldr         r3, [sp, #8]
  02cbc	e3530001	 cmp         r3, #1
  02cc0	0a000005	 beq         |$LN1@IsTransfer|
  02cc4	e59d3008	 ldr         r3, [sp, #8]
  02cc8	e3530002	 cmp         r3, #2
  02ccc	9a000005	 bls         |$LN2@IsTransfer|
  02cd0	e59d3008	 ldr         r3, [sp, #8]
  02cd4	e353000c	 cmp         r3, #0xC
  02cd8	2a000002	 bcs         |$LN2@IsTransfer|
  02cdc		 |$LN1@IsTransfer|

; 753  :             bReturn = FALSE;

  02cdc	e3a03000	 mov         r3, #0
  02ce0	e58d3000	 str         r3, [sp]

; 754  :             break;

  02ce4	ea000005	 b           |$LN5@IsTransfer|
  02ce8		 |$LN2@IsTransfer|

; 755  :         }
; 756  :         pCurTD = pCurTD ->GetNextTD();

  02ce8	e59d0004	 ldr         r0, [sp, #4]
  02cec	eb000000	 bl          |?GetNextTD@CQTD@@QAAPAV1@XZ|
  02cf0	e58d002c	 str         r0, [sp, #0x2C]
  02cf4	e59d302c	 ldr         r3, [sp, #0x2C]
  02cf8	e58d3004	 str         r3, [sp, #4]

; 757  :     }

  02cfc	eaffffb1	 b           |$LN6@IsTransfer|
  02d00		 |$LN5@IsTransfer|

; 758  :     m_pCPipe->GetQHead()->UnLock();

  02d00	e59d3040	 ldr         r3, [sp, #0x40]
  02d04	e2833004	 add         r3, r3, #4
  02d08	e5932000	 ldr         r2, [r3]
  02d0c	e59d3040	 ldr         r3, [sp, #0x40]
  02d10	e2833004	 add         r3, r3, #4
  02d14	e5930000	 ldr         r0, [r3]
  02d18	e5923000	 ldr         r3, [r2]
  02d1c	e2833044	 add         r3, r3, #0x44
  02d20	e5933000	 ldr         r3, [r3]
  02d24	e1a0e00f	 mov         lr, pc
  02d28	e12fff13	 bx          r3
  02d2c	e58d0030	 str         r0, [sp, #0x30]
  02d30	e59d0030	 ldr         r0, [sp, #0x30]
  02d34	eb000000	 bl          |?UnLock@CQH@@QAAXXZ|

; 759  : 
; 760  :     DEBUGMSG(ZONE_TRANSFER, (TEXT("CQTransfer::IsTransferDone (this=0x%x) return %d \r\n"),this,bReturn));

  02d38	e59f3048	 ldr         r3, [pc, #0x48]
  02d3c	e5933440	 ldr         r3, [r3, #0x440]
  02d40	e3130c01	 tst         r3, #1, 24
  02d44	0a000006	 beq         |$LN20@IsTransfer|
  02d48	e59d2000	 ldr         r2, [sp]
  02d4c	e59d1040	 ldr         r1, [sp, #0x40]
  02d50	e59f002c	 ldr         r0, [pc, #0x2C]
  02d54	eb000000	 bl          NKDbgPrintfW
  02d58	e3a03001	 mov         r3, #1
  02d5c	e58d3034	 str         r3, [sp, #0x34]
  02d60	ea000001	 b           |$LN21@IsTransfer|
  02d64		 |$LN20@IsTransfer|
  02d64	e3a03000	 mov         r3, #0
  02d68	e58d3034	 str         r3, [sp, #0x34]
  02d6c		 |$LN21@IsTransfer|

; 761  :     return bReturn;

  02d6c	e59d3000	 ldr         r3, [sp]
  02d70	e58d300c	 str         r3, [sp, #0xC]
  02d74		 |$LN8@IsTransfer|

; 762  : }

  02d74	e59d000c	 ldr         r0, [sp, #0xC]
  02d78	e28dd038	 add         sp, sp, #0x38
  02d7c	e89d6000	 ldmia       sp, {sp, lr}
  02d80	e12fff1e	 bx          lr
  02d84		 |$LN25@IsTransfer|
  02d84		 |$LN26@IsTransfer|
  02d84	00000000	 DCD         |??_C@_1GI@FMPNEOID@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAs?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAD?$AAo?$AAn?$AAe?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs@|
  02d88		 |$LN27@IsTransfer|
  02d88	00000000	 DCD         |dpCurSettings|
  02d8c		 |$LN28@IsTransfer|
  02d8c	00000000	 DCD         |??_C@_1EC@IMAPIFEJ@?$AAI?$AAs?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAD?$AAo?$AAn?$AAe?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@|
  02d90		 |$LN29@IsTransfer|
  02d90	00000000	 DCD         |??_C@_1EE@OOLMAOIB@?$AAp?$AAC?$AAu?$AAr?$AAT?$AAD?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$AN@|
  02d94		 |$LN30@IsTransfer|
  02d94	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  02d98		 |$LN31@IsTransfer|
  02d98	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  02d9c		 |$LN32@IsTransfer|
  02d9c	00000000	 DCD         |??_C@_1LK@IFLKDCCK@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  02da0		 |$LN33@IsTransfer|
  02da0	00000000	 DCD         |??_C@_1DO@IONJMEJE@?$AAI?$AAs?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAD?$AAo?$AAn?$AAe?$AA?3?$AAp?$AAC?$AAu?$AAr?$AAT?$AAD?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  02da4		 |$LN34@IsTransfer|
  02da4	00000000	 DCD         |??_C@_1GC@LFCCAJDE@?$AAC?$AAQ?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAs?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AAD?$AAo?$AAn?$AAe?$AA?5?$AA?$CI?$AAt?$AAh?$AAi?$AAs@|
  02da8		 |$M37694|

			 ENDP  ; |?IsTransferDone@CQTransfer@@QAAHXZ|, CQTransfer::IsTransferDone

	END
