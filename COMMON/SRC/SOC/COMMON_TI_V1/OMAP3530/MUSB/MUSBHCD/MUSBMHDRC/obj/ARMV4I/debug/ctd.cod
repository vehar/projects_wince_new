; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\OMAP3530\MUSB\MUSBHCD\MUSBMHDRC\ctd.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1DK@JPBDFEOB@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@IMCKALLA@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAO?$AAN?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@CEGNOBAM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAF?$AAA?$AAI?$AAL?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@PGHDEMEK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAI?$AAG?$AAN?$AAA?$AAL?$AA_?$AAN?$AAE?$AAW?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1II@FBBOBKGN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAS?$AAE?$AAR?$AAT?$AA_?$AAN?$AAE?$AAW?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@LCLFDJDO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@COKEBMOE@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@HPGGGHKI@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@KPBCOGEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@CFFAAPDL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@NDHJOKMM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAE?$AAT?$AAE?$AAR?$AAM?$AAI?$AAN?$AAE?$AA_?$AAC@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@JADKDKDC@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@NPLCKJLH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@MEMGEMJJ@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@BCHKIAPP@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@FNPCBDHK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@BBOOKHNN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAL?$AAE?$AAA?$AAV?$AAE?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@LGLHPFAK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@BLNLBKIO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@NMCKCJLL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA_?$AAA?$AAN?$AAD?$AA_?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@KNOIBOPH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAU?$AAS?$AAI?$AAN?$AAG?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@COMJHLEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAO?$AAP?$AAE?$AAN?$AAI?$AAN?$AAG?$AA_?$AAE?$AAN?$AAD@| [ DATA ] ; `string'

  00000			 AREA	 |.data|, DATA
|cszCfgStateStrings| DCD |??_C@_1FI@COMJHLEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAO?$AAP?$AAE?$AAN?$AAI?$AAN?$AAG?$AA_?$AAE?$AAN?$AAD@|
	DCD	|??_C@_1EI@KNOIBOPH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAU?$AAS?$AAI?$AAN?$AAG?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@|
	DCD	|??_C@_1FG@NMCKCJLL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA_?$AAA?$AAN?$AAD?$AA_?$AAE@|
	DCD	|??_C@_1HG@BLNLBKIO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1FI@LGLHPFAK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1EI@BBOOKHNN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAL?$AAE?$AAA?$AAV?$AAE?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@|
	DCD	|??_C@_1HM@FNPCBDHK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1GM@BCHKIAPP@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1HE@MEMGEMJJ@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI@|
	DCD	|??_C@_1HM@NPLCKJLH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1GM@JADKDKDC@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1GA@NDHJOKMM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAE?$AAT?$AAE?$AAR?$AAM?$AAI?$AAN?$AAE?$AA_?$AAC@|
	DCD	|??_C@_1FG@CFFAAPDL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1HG@KPBCOGEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1GG@HPGGGHKI@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1EI@COKEBMOE@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@|
	DCD	|??_C@_1FC@LCLFDJDO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@|
	DCD	|??_C@_1II@FBBOBKGN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAS?$AAE?$AAR?$AAT?$AA_?$AAN?$AAE?$AAW?$AA_@|
	DCD	|??_C@_1HO@PGHDEMEK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAI?$AAG?$AAN?$AAA?$AAL?$AA_?$AAN?$AAE?$AAW?$AA_@|
	DCD	|??_C@_1DI@CEGNOBAM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAF?$AAA?$AAI?$AAL?$AAE?$AAD?$AA?$AA@|
	DCD	|??_C@_1DE@IMCKALLA@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAO?$AAN?$AAE?$AA?$AA@|
	DCD	|??_C@_1DK@JPBDFEOB@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?$AA@|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@JPBDFEOB@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?$AA@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "I", 0x0, "N", 0x0, "V", 0x0, "A"
	DCB	0x0, "L", 0x0, "I", 0x0, "D", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@IMCKALLA@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAO?$AAN?$AAE?$AA?$AA@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "D", 0x0, "O", 0x0, "N", 0x0, "E"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@CEGNOBAM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAF?$AAA?$AAI?$AAL?$AAE?$AAD?$AA?$AA@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "F", 0x0, "A", 0x0, "I", 0x0, "L"
	DCB	0x0, "E", 0x0, "D", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@PGHDEMEK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAI?$AAG?$AAN?$AAA?$AAL?$AA_?$AAN?$AAE?$AAW?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "I", 0x0, "G", 0x0, "N"
	DCB	0x0, "A", 0x0, "L", 0x0, "_", 0x0, "N", 0x0, "E", 0x0, "W"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C"
	DCB	0x0, "E", 0x0, "_", 0x0, "E", 0x0, "N", 0x0, "T", 0x0, "E"
	DCB	0x0, "R", 0x0, "_", 0x0, "O", 0x0, "P", 0x0, "E", 0x0, "R"
	DCB	0x0, "A", 0x0, "T", 0x0, "I", 0x0, "O", 0x0, "N", 0x0, "A"
	DCB	0x0, "L", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T"
	DCB	0x0, "E", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1II@FBBOBKGN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAS?$AAE?$AAR?$AAT?$AA_?$AAN?$AAE?$AAW?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "I", 0x0, "N", 0x0, "S", 0x0, "E"
	DCB	0x0, "R", 0x0, "T", 0x0, "_", 0x0, "N", 0x0, "E", 0x0, "W"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C"
	DCB	0x0, "E", 0x0, "_", 0x0, "I", 0x0, "N", 0x0, "T", 0x0, "O"
	DCB	0x0, "_", 0x0, "U", 0x0, "P", 0x0, "S", 0x0, "T", 0x0, "R"
	DCB	0x0, "E", 0x0, "A", 0x0, "M", 0x0, "_", 0x0, "H", 0x0, "U"
	DCB	0x0, "B", 0x0, "_", 0x0, "P", 0x0, "O", 0x0, "R", 0x0, "T"
	DCB	0x0, "_", 0x0, "A", 0x0, "R", 0x0, "R", 0x0, "A", 0x0, "Y"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@LCLFDJDO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "C", 0x0, "R", 0x0, "E", 0x0, "A"
	DCB	0x0, "T", 0x0, "E", 0x0, "_", 0x0, "N", 0x0, "E", 0x0, "W"
	DCB	0x0, "_", 0x0, "F", 0x0, "U", 0x0, "N", 0x0, "C", 0x0, "T"
	DCB	0x0, "I", 0x0, "O", 0x0, "N", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@COKEBMOE@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "C", 0x0, "R", 0x0, "E", 0x0, "A"
	DCB	0x0, "T", 0x0, "E", 0x0, "_", 0x0, "N", 0x0, "E", 0x0, "W"
	DCB	0x0, "_", 0x0, "H", 0x0, "U", 0x0, "B", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@HPGGGHKI@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "H"
	DCB	0x0, "U", 0x0, "B", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "S"
	DCB	0x0, "C", 0x0, "R", 0x0, "I", 0x0, "P", 0x0, "T", 0x0, "O"
	DCB	0x0, "R", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@KPBCOGEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "I"
	DCB	0x0, "N", 0x0, "I", 0x0, "T", 0x0, "I", 0x0, "A", 0x0, "L"
	DCB	0x0, "_", 0x0, "H", 0x0, "U", 0x0, "B", 0x0, "_", 0x0, "D"
	DCB	0x0, "E", 0x0, "S", 0x0, "C", 0x0, "R", 0x0, "I", 0x0, "P"
	DCB	0x0, "T", 0x0, "O", 0x0, "R", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@CFFAAPDL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "C"
	DCB	0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@NDHJOKMM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAE?$AAT?$AAE?$AAR?$AAM?$AAI?$AAN?$AAE?$AA_?$AAC@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "T", 0x0, "E"
	DCB	0x0, "R", 0x0, "M", 0x0, "I", 0x0, "N", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "T", 0x0, "O", 0x0, "_", 0x0, "C", 0x0, "H"
	DCB	0x0, "O", 0x0, "O", 0x0, "S", 0x0, "E", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@JADKDKDC@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "C"
	DCB	0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G", 0x0, "_"
	DCB	0x0, "D", 0x0, "E", 0x0, "S", 0x0, "C", 0x0, "R", 0x0, "I"
	DCB	0x0, "P", 0x0, "T", 0x0, "O", 0x0, "R", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@NPLCKJLH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "I"
	DCB	0x0, "N", 0x0, "I", 0x0, "T", 0x0, "I", 0x0, "A", 0x0, "L"
	DCB	0x0, "_", 0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I"
	DCB	0x0, "G", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "S", 0x0, "C"
	DCB	0x0, "R", 0x0, "I", 0x0, "P", 0x0, "T", 0x0, "O", 0x0, "R"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@MEMGEMJJ@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T", 0x0, "U"
	DCB	0x0, "P", 0x0, "_", 0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F"
	DCB	0x0, "I", 0x0, "G", 0x0, "U", 0x0, "R", 0x0, "A", 0x0, "T"
	DCB	0x0, "I", 0x0, "O", 0x0, "N", 0x0, "_", 0x0, "D", 0x0, "E"
	DCB	0x0, "S", 0x0, "C", 0x0, "R", 0x0, "I", 0x0, "P", 0x0, "T"
	DCB	0x0, "O", 0x0, "R", 0x0, "_", 0x0, "A", 0x0, "R", 0x0, "R"
	DCB	0x0, "A", 0x0, "Y", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@BCHKIAPP@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "D", 0x0, "E", 0x0, "S", 0x0, "C", 0x0, "R", 0x0, "I"
	DCB	0x0, "P", 0x0, "T", 0x0, "O", 0x0, "R", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@FNPCBDHK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "I"
	DCB	0x0, "N", 0x0, "I", 0x0, "T", 0x0, "I", 0x0, "A", 0x0, "L"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C"
	DCB	0x0, "E", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "S", 0x0, "C"
	DCB	0x0, "R", 0x0, "I", 0x0, "P", 0x0, "T", 0x0, "O", 0x0, "R"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@BBOOKHNN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAL?$AAE?$AAA?$AAV?$AAE?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "L", 0x0, "E", 0x0, "A", 0x0, "V"
	DCB	0x0, "E", 0x0, "_", 0x0, "A", 0x0, "D", 0x0, "D", 0x0, "R"
	DCB	0x0, "E", 0x0, "S", 0x0, "S", 0x0, "0", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@LGLHPFAK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "A"
	DCB	0x0, "D", 0x0, "D", 0x0, "R", 0x0, "E", 0x0, "S", 0x0, "S"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@BLNLBKIO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "D", 0x0, "E", 0x0, "S", 0x0, "C", 0x0, "R", 0x0, "I"
	DCB	0x0, "P", 0x0, "T", 0x0, "O", 0x0, "R", 0x0, "_", 0x0, "T"
	DCB	0x0, "E", 0x0, "S", 0x0, "T", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@NMCKCJLL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA_?$AAA?$AAN?$AAD?$AA_?$AAE@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "S", 0x0, "E"
	DCB	0x0, "T", 0x0, "_", 0x0, "A", 0x0, "N", 0x0, "D", 0x0, "_"
	DCB	0x0, "E", 0x0, "N", 0x0, "A", 0x0, "B", 0x0, "L", 0x0, "E"
	DCB	0x0, "_", 0x0, "P", 0x0, "O", 0x0, "R", 0x0, "T", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@KNOIBOPH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAU?$AAS?$AAI?$AAN?$AAG?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "U", 0x0, "S", 0x0, "I", 0x0, "N"
	DCB	0x0, "G", 0x0, "_", 0x0, "A", 0x0, "D", 0x0, "D", 0x0, "R"
	DCB	0x0, "E", 0x0, "S", 0x0, "S", 0x0, "0", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@COMJHLEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAO?$AAP?$AAE?$AAN?$AAI?$AAN?$AAG?$AA_?$AAE?$AAN?$AAD@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "O", 0x0, "P", 0x0, "E", 0x0, "N"
	DCB	0x0, "I", 0x0, "N", 0x0, "G", 0x0, "_", 0x0, "E", 0x0, "N"
	DCB	0x0, "D", 0x0, "P", 0x0, "O", 0x0, "I", 0x0, "N", 0x0, "T"
	DCB	0x0, "0", 0x0, "_", 0x0, "P", 0x0, "I", 0x0, "P", 0x0, "E"
	DCB	0x0, 0x0, 0x0				; `string'
	EXPORT	|??0CQTD@@QAA@PAVCQTransfer@@PAVCQH@@@Z| ; CQTD::CQTD

  00000			 AREA	 |.pdata|, PDATA
|$T42540| DCD	|$LN5@CQTD|
	DCD	0x40002504
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CQTD@@QAA@PAVCQTransfer@@PAVCQH@@@Z| PROC ; CQTD::CQTD

; 59   : {

  00000		 |$LN5@CQTD|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42537|
  00010	e59d2010	 ldr         r2, [sp, #0x10]
  00014	e59d300c	 ldr         r3, [sp, #0xC]
  00018	e5832000	 str         r2, [r3]
  0001c	e59d300c	 ldr         r3, [sp, #0xC]
  00020	e2832004	 add         r2, r3, #4
  00024	e59d3014	 ldr         r3, [sp, #0x14]
  00028	e5823000	 str         r3, [r2]

; 60   :     m_dwTDType = TD_IDLE;

  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e283200c	 add         r2, r3, #0xC
  00034	e3a03000	 mov         r3, #0
  00038	e5823000	 str         r3, [r2]

; 61   :     m_pNext=NULL;    

  0003c	e59d300c	 ldr         r3, [sp, #0xC]
  00040	e2832008	 add         r2, r3, #8
  00044	e3a03000	 mov         r3, #0
  00048	e5823000	 str         r3, [r2]

; 62   :     m_cbTransferred = 0;

  0004c	e59d300c	 ldr         r3, [sp, #0xC]
  00050	e283201c	 add         r2, r3, #0x1C
  00054	e3a03000	 mov         r3, #0
  00058	e5823000	 str         r3, [r2]

; 63   :     m_dwStatus = STATUS_IDLE;

  0005c	e59d300c	 ldr         r3, [sp, #0xC]
  00060	e2832028	 add         r2, r3, #0x28
  00064	e3a03000	 mov         r3, #0
  00068	e5823000	 str         r3, [r2]

; 64   :     m_dwError = 0;

  0006c	e59d300c	 ldr         r3, [sp, #0xC]
  00070	e2832034	 add         r2, r3, #0x34
  00074	e3a03000	 mov         r3, #0
  00078	e5823000	 str         r3, [r2]

; 65   : }

  0007c	e59d300c	 ldr         r3, [sp, #0xC]
  00080	e58d3000	 str         r3, [sp]
  00084	e59d0000	 ldr         r0, [sp]
  00088	e28dd004	 add         sp, sp, #4
  0008c	e89d6000	 ldmia       sp, {sp, lr}
  00090	e12fff1e	 bx          lr
  00094		 |$M42538|

			 ENDP  ; |??0CQTD@@QAA@PAVCQTransfer@@PAVCQH@@@Z|, CQTD::CQTD

	EXPORT	|?ClearRxPktRdy@CQTD@@QAAXXZ|		; CQTD::ClearRxPktRdy
	EXPORT	|??_C@_1GG@OIFAIPKL@?$AAS?$AAo?$AAm?$AAe?$AAt?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAw?$AAr?$AAo?$AAn?$AAg?$AA?3?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?5?$AAm?$AAo?$AAr?$AAe?$AA?5?$AAd?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IE@GCLBHAGE@?$AAD?$AAa?$AAt?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAT?$AAf?$AAr?$AAS?$AAz?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@DCFELOBF@?$AAD?$AAa?$AAt?$AAa?$AAA?$AAv?$AAa?$AAi?$AAl?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?GetRxDataAvail@CHW@@QAAHE@Z|		; CHW::GetRxDataAvail
	EXPORT	|?SetRxDataAvail@CHW@@QAAXE@Z|		; CHW::SetRxDataAvail
	EXPORT	|??_C@_1GG@DNLLFINH@?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAl?$AAa?$AAs?$AAt?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAo?$AAf?$AA?5?$AAd?$AAa?$AAt?$AAa?$AA?5?$AAf?$AAo?$AAr?$AA?5@| [ DATA ] ; `string'
	EXPORT	|?SetStatus@CQTD@@QAAXK@Z|		; CQTD::SetStatus
	EXPORT	|??_C@_1IC@GBBMENAG@?$AAR?$AAe?$AAa?$AAd?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAw?$AAh?$AAi?$AAc?$AAh?$AA?5?$AAs?$AAu?$AAp?$AAp?$AAo?$AAs?$AAe?$AA?5?$AAt?$AAo?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@CAOOGLHD@?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAm?$AAa?$AAp?$AAp?$AAe?$AAd?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@CEMNINPE@?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAM?$AAa?$AAp?$AAp?$AAe?$AAd?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IA@MKFKEMJG@?$AAD?$AAM?$AAA?$AA?5?$AAI?$AAN?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ@| [ DATA ] ; `string'
	EXPORT	|?GetPacketSize@CQTD@@QAAKXZ|		; CQTD::GetPacketSize
	EXPORT	|??_C@_1EO@FDEEAPGH@?$AAD?$AAM?$AAA?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?0?$AA?5?$AAu?$AAs?$AAe?$AA?5?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAt?$AAo?$AA?5@| [ DATA ] ; `string'
	EXPORT	|?SetTotTfrSize@CQTD@@QAAXK@Z|		; CQTD::SetTotTfrSize
	EXPORT	|?GetTransferMode@CPipe@@QAAEXZ|	; CPipe::GetTransferMode
	EXPORT	|?SetCurTfrSize@CQTD@@QAAXK@Z|		; CQTD::SetCurTfrSize
	EXPORT	|??_C@_1CO@BFANEFNO@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAc?$AAh?$AAe?$AAc?$AAk?$AAR?$AAx?$AAC?$AAS?$AAR?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@GIGLDPPB@?$AAR?$AAe?$AAa?$AAd?$AAD?$AAa?$AAt?$AAa?$AAI?$AAN?$AA?3?$AA?5?$AAT?$AAo?$AAt?$AAa?$AAl?$AA?$DN?$AA?$CF?$AAd?$AA?0?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$DN?$AA?$CF?$AAd?$AA?0?$AA?5@| [ DATA ] ; `string'
	EXPORT	|?GetCurTfrSize@CQTD@@QAAKXZ|		; CQTD::GetCurTfrSize
	EXPORT	|??_C@_1EA@GOJAPAOC@?$AAT?$AAo?$AAt?$AAa?$AAl?$AA?$DN?$AA?$CF?$AAd?$AA?0?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$DN?$AA?$CF?$AAd?$AA?0?$AA?5?$AAR?$AAe?$AAm?$AAa?$AAi?$AAn?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?GetMappedEndPoint@CPipe@@QAAEXZ|	; CPipe::GetMappedEndPoint
	EXPORT	|?GetDataSize@CQTD@@QAAKXZ|		; CQTD::GetDataSize
	EXPORT	|?GetPAData@CQTD@@QAAKXZ|		; CQTD::GetPAData
	EXPORT	|?GetTotTfrSize@CQTD@@QAAKXZ|		; CQTD::GetTotTfrSize
	EXPORT	|?GetVAData@CQTD@@QAAKXZ|		; CQTD::GetVAData
	EXPORT	|??_C@_1EI@KKHPNNGM@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAR?$AAe?$AAa?$AAd?$AAD?$AAa?$AAt?$AAa?$AAI?$AAN?$AA?3?$AA?5?$AAG?$AAe?$AAt?$AA?5?$AAp?$AAO?$AAT?$AAG?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe@| [ DATA ] ; `string'
	EXPORT	|?GetOTGContext@CHcd@@QAAPAXXZ|		; CHcd::GetOTGContext
	EXPORT	|??_C@_1HG@OCPMDGNB@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAR?$AAe?$AAa?$AAd?$AAD?$AAa?$AAt?$AAa?$AAI?$AAN?$AA?5?$AA?9?$AA?$DO?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5@| [ DATA ] ; `string'
	EXPORT	|?GetStatus@CQTD@@QAAKXZ|		; CQTD::GetStatus
	EXPORT	|?GetPipe@CQH@@QAAPAVCPipe@@XZ|		; CQH::GetPipe
	EXPORT	|?ReadDataIN@CQTD@@QAAKPAK@Z|		; CQTD::ReadDataIN
	IMPORT	|?RestoreRxConfig@CHW@@QAAHPAXE@Z|	; CHW::RestoreRxConfig
	IMPORT	|?CheckDMAResult@CHW@@QAAKPAXE@Z|	; CHW::CheckDMAResult
	IMPORT	|?DeviceInfo2Channel@CHW@@QAAEPAVCPipe@@@Z| ; CHW::DeviceInfo2Channel
	IMPORT	|?ReadDMA@CHW@@QAAKPAXEE0KKPAVCQTD@@@Z|	; CHW::ReadDMA
	IMPORT	|?AcquireDMAChannel@CHW@@QAAEPAVCPipe@@@Z| ; CHW::AcquireDMAChannel
	IMPORT	|?CheckRxCSR@CHW@@QAAKE@Z|		; CHW::CheckRxCSR
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
	IMPORT	|__rt_udiv|

  00008			 AREA	 |.pdata|, PDATA
|$T42583| DCD	|$LN60@ReadDataIN|
	DCD	0x40026d04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@OIFAIPKL@?$AAS?$AAo?$AAm?$AAe?$AAt?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAw?$AAr?$AAo?$AAn?$AAg?$AA?3?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?5?$AAm?$AAo?$AAr?$AAe?$AA?5?$AAd?$AAa@| DCB "S"
	DCB	0x0, "o", 0x0, "m", 0x0, "e", 0x0, "t", 0x0, "h", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "w", 0x0, "r", 0x0, "o"
	DCB	0x0, "n", 0x0, "g", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, " "
	DCB	0x0, "m", 0x0, "o", 0x0, "r", 0x0, "e", 0x0, " ", 0x0, "d"
	DCB	0x0, "a", 0x0, "t", 0x0, "a", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "p"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@GCLBHAGE@?$AAD?$AAa?$AAt?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAT?$AAf?$AAr?$AAS?$AAz?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5@| DCB "D"
	DCB	0x0, "a", 0x0, "t", 0x0, "a", 0x0, "B", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, "(", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, ")", 0x0, ",", 0x0, " ", 0x0, "T"
	DCB	0x0, "f", 0x0, "r", 0x0, "S", 0x0, "z", 0x0, "e", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, ","
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i"
	DCB	0x0, "v", 0x0, "e", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ")", 0x0, ",", 0x0, " ", 0x0, "P", 0x0, "a"
	DCB	0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t", 0x0, "S", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@DCFELOBF@?$AAD?$AAa?$AAt?$AAa?$AAA?$AAv?$AAa?$AAi?$AAl?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "a", 0x0, "t", 0x0, "a", 0x0, "A", 0x0, "v", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@DNLLFINH@?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAl?$AAa?$AAs?$AAt?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAo?$AAf?$AA?5?$AAd?$AAa?$AAt?$AAa?$AA?5?$AAf?$AAo?$AAr?$AA?5@| DCB "R"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "e", 0x0, " ", 0x0, "l", 0x0, "a", 0x0, "s", 0x0, "t"
	DCB	0x0, " ", 0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k"
	DCB	0x0, " ", 0x0, "o", 0x0, "f", 0x0, " ", 0x0, "d", 0x0, "a"
	DCB	0x0, "t", 0x0, "a", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "e", 0x0, "p", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "p"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@GBBMENAG@?$AAR?$AAe?$AAa?$AAd?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAw?$AAh?$AAi?$AAc?$AAh?$AA?5?$AAs?$AAu?$AAp?$AAp?$AAo?$AAs?$AAe?$AA?5?$AAt?$AAo?$AA?5@| DCB "R"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, "F", 0x0, "I", 0x0, "F"
	DCB	0x0, "O", 0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "w", 0x0, "h", 0x0, "i", 0x0, "c"
	DCB	0x0, "h", 0x0, " ", 0x0, "s", 0x0, "u", 0x0, "p", 0x0, "p"
	DCB	0x0, "o", 0x0, "s", 0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, "t", 0x0, "a", 0x0, "l", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t"
	DCB	0x0, "e", 0x0, "s", 0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@CAOOGLHD@?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAm?$AAa?$AAp?$AAp?$AAe?$AAd?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe@| DCB "R"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "F", 0x0, "I"
	DCB	0x0, "F", 0x0, "O", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "p", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "s", 0x0, "u", 0x0, "c", 0x0, "c"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, " ", 0x0, "s"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@CEMNINPE@?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAM?$AAa?$AAp?$AAp?$AAe?$AAd?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$AN@| DCB "R"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "F", 0x0, "I"
	DCB	0x0, "F", 0x0, "O", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "M", 0x0, "a", 0x0, "p", 0x0, "p", 0x0, "e"
	DCB	0x0, "d", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IA@MKFKEMJG@?$AAD?$AAM?$AAA?$AA?5?$AAI?$AAN?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ@| DCB "D"
	DCB	0x0, "M", 0x0, "A", 0x0, " ", 0x0, "I", 0x0, "N", 0x0, " "
	DCB	0x0, "s", 0x0, "u", 0x0, "c", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, " ", 0x0, "w", 0x0, "i", 0x0, "t", 0x0, "h"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "s", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, ",", 0x0, " ", 0x0, "c", 0x0, "h", 0x0, "a"
	DCB	0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, ",", 0x0, " "
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i"
	DCB	0x0, "n", 0x0, "t", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@FDEEAPGH@?$AAD?$AAM?$AAA?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?0?$AA?5?$AAu?$AAs?$AAe?$AA?5?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAt?$AAo?$AA?5@| DCB "D"
	DCB	0x0, "M", 0x0, "A", 0x0, " ", 0x0, "C", 0x0, "h", 0x0, "a"
	DCB	0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "u", 0x0, "s", 0x0, "e", 0x0, " ", 0x0, "F"
	DCB	0x0, "I", 0x0, "F", 0x0, "O", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@BFANEFNO@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAc?$AAh?$AAe?$AAc?$AAk?$AAR?$AAx?$AAC?$AAS?$AAR?$AA?$AN?$AA?6?$AA?$AA@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, " ", 0x0, "c", 0x0, "h", 0x0, "e"
	DCB	0x0, "c", 0x0, "k", 0x0, "R", 0x0, "x", 0x0, "C", 0x0, "S"
	DCB	0x0, "R", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@GIGLDPPB@?$AAR?$AAe?$AAa?$AAd?$AAD?$AAa?$AAt?$AAa?$AAI?$AAN?$AA?3?$AA?5?$AAT?$AAo?$AAt?$AAa?$AAl?$AA?$DN?$AA?$CF?$AAd?$AA?0?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$DN?$AA?$CF?$AAd?$AA?0?$AA?5@| DCB "R"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, "D", 0x0, "a", 0x0, "t"
	DCB	0x0, "a", 0x0, "I", 0x0, "N", 0x0, ":", 0x0, " ", 0x0, "T"
	DCB	0x0, "o", 0x0, "t", 0x0, "a", 0x0, "l", 0x0, "=", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "r", 0x0, "t", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "m", 0x0, "a", 0x0, "i"
	DCB	0x0, "n", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "C", 0x0, "u", 0x0, "r", 0x0, "T", 0x0, "f", 0x0, "r"
	DCB	0x0, "S", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, "=", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@GOJAPAOC@?$AAT?$AAo?$AAt?$AAa?$AAl?$AA?$DN?$AA?$CF?$AAd?$AA?0?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$DN?$AA?$CF?$AAd?$AA?0?$AA?5?$AAR?$AAe?$AAm?$AAa?$AAi?$AAn?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "o", 0x0, "t", 0x0, "a", 0x0, "l", 0x0, "=", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "r", 0x0, "t", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "m", 0x0, "a", 0x0, "i"
	DCB	0x0, "n", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@KKHPNNGM@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAR?$AAe?$AAa?$AAd?$AAD?$AAa?$AAt?$AAa?$AAI?$AAN?$AA?3?$AA?5?$AAG?$AAe?$AAt?$AA?5?$AAp?$AAO?$AAT?$AAG?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe@| DCB "C"
	DCB	0x0, "Q", 0x0, "T", 0x0, "D", 0x0, ":", 0x0, ":", 0x0, "R"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, "D", 0x0, "a", 0x0, "t"
	DCB	0x0, "a", 0x0, "I", 0x0, "N", 0x0, ":", 0x0, " ", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, " ", 0x0, "p", 0x0, "O", 0x0, "T"
	DCB	0x0, "G", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@OCPMDGNB@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAR?$AAe?$AAa?$AAd?$AAD?$AAa?$AAt?$AAa?$AAI?$AAN?$AA?5?$AA?9?$AA?$DO?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5@| DCB "C"
	DCB	0x0, "Q", 0x0, "T", 0x0, "D", 0x0, ":", 0x0, ":", 0x0, "R"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, "D", 0x0, "a", 0x0, "t"
	DCB	0x0, "a", 0x0, "I", 0x0, "N", 0x0, " ", 0x0, "-", 0x0, ">"
	DCB	0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "a"
	DCB	0x0, "b", 0x0, "l", 0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "h", 0x0, "e", 0x0, " ", 0x0, "a", 0x0, "s"
	DCB	0x0, "s", 0x0, "o", 0x0, "c", 0x0, "i", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "p", 0x0, "i", 0x0, "p"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00094			 AREA	 |.text|, CODE, ARM

  00094		 |?ReadDataIN@CQTD@@QAAKPAK@Z| PROC	; CQTD::ReadDataIN

; 76   : {

  00094		 |$LN60@ReadDataIN|
  00094	e1a0c00d	 mov         r12, sp
  00098	e92d0003	 stmdb       sp!, {r0, r1}
  0009c	e92d5010	 stmdb       sp!, {r4, r12, lr}
  000a0	e24ddf56	 sub         sp, sp, #0x56, 30
  000a4		 |$M42580|

; 77   :     PHSMUSB_T pOTG;
; 78   :     CPipe *pPipe = m_pQh->GetPipe();            

  000a4	e59d3164	 ldr         r3, [sp, #0x164]
  000a8	e2833004	 add         r3, r3, #4
  000ac	e5930000	 ldr         r0, [r3]
  000b0	eb000000	 bl          |?GetPipe@CQH@@QAAPAVCPipe@@XZ|
  000b4	e58d0068	 str         r0, [sp, #0x68]
  000b8	e59d3068	 ldr         r3, [sp, #0x68]
  000bc	e58d3020	 str         r3, [sp, #0x20]

; 79   :     BYTE *pvData;
; 80   :     BYTE *ppData;
; 81   :     DWORD dwData;
; 82   :     DWORD count;
; 83   :     int iRetSize = 0;

  000c0	e3a03000	 mov         r3, #0
  000c4	e58d3024	 str         r3, [sp, #0x24]

; 84   :     DWORD dwError = USB_NO_ERROR;    

  000c8	e3a03000	 mov         r3, #0
  000cc	e58d3038	 str         r3, [sp, #0x38]

; 85   :     BOOL fClearRxPkt = TRUE;

  000d0	e3a03001	 mov         r3, #1
  000d4	e58d3010	 str         r3, [sp, #0x10]

; 86   :     DWORD status = GetStatus();

  000d8	e59d0164	 ldr         r0, [sp, #0x164]
  000dc	eb000000	 bl          |?GetStatus@CQTD@@QAAKXZ|
  000e0	e58d006c	 str         r0, [sp, #0x6C]
  000e4	e59d306c	 ldr         r3, [sp, #0x6C]
  000e8	e58d3034	 str         r3, [sp, #0x34]

; 87   : 
; 88   :     
; 89   :     *pdwMore = MUSB_READ_SUCCESS;

  000ec	e59d2168	 ldr         r2, [sp, #0x168]
  000f0	e3a03000	 mov         r3, #0
  000f4	e5823000	 str         r3, [r2]

; 90   :     if (!pPipe)

  000f8	e59d3020	 ldr         r3, [sp, #0x20]
  000fc	e3530000	 cmp         r3, #0
  00100	1a00000c	 bne         |$LN27@ReadDataIN|

; 91   :     {
; 92   :         DEBUGMSG(ZONE_ERROR, (TEXT("CQTD::ReadDataIN -> not able to read the associated pipe\r\n")));        

  00104	e59f3904	 ldr         r3, [pc, #0x904]
  00108	e5933440	 ldr         r3, [r3, #0x440]
  0010c	e3130901	 tst         r3, #1, 18
  00110	0a000004	 beq         |$LN30@ReadDataIN|
  00114	e59f0928	 ldr         r0, [pc, #0x928]
  00118	eb000000	 bl          NKDbgPrintfW
  0011c	e3a03001	 mov         r3, #1
  00120	e58d3070	 str         r3, [sp, #0x70]
  00124	ea000001	 b           |$LN31@ReadDataIN|
  00128		 |$LN30@ReadDataIN|
  00128	e3a03000	 mov         r3, #0
  0012c	e58d3070	 str         r3, [sp, #0x70]
  00130		 |$LN31@ReadDataIN|

; 93   :         goto READ_EXIT;

  00130	ea00022a	 b           |$LN26@ReadDataIN|
  00134	ea000229	 b           |$READ_EXIT$42045|
  00138		 |$LN27@ReadDataIN|

; 94   :     }
; 95   :     pOTG = (PHSMUSB_T)pPipe->m_pCMhcd->GetOTGContext();

  00138	e59d3020	 ldr         r3, [sp, #0x20]
  0013c	e283300c	 add         r3, r3, #0xC
  00140	e5930000	 ldr         r0, [r3]
  00144	eb000000	 bl          |?GetOTGContext@CHcd@@QAAPAXXZ|
  00148	e58d0074	 str         r0, [sp, #0x74]
  0014c	e59d3074	 ldr         r3, [sp, #0x74]
  00150	e58d3030	 str         r3, [sp, #0x30]

; 96   :     if (pOTG == NULL)

  00154	e59d3030	 ldr         r3, [sp, #0x30]
  00158	e3530000	 cmp         r3, #0
  0015c	1a00000c	 bne         |$LN25@ReadDataIN|

; 97   :     {
; 98   :         DEBUGMSG(ZONE_ERROR, (TEXT("CQTD::ReadDataIN: Get pOTG failed\r\n")));        

  00160	e59f38a8	 ldr         r3, [pc, #0x8A8]
  00164	e5933440	 ldr         r3, [r3, #0x440]
  00168	e3130901	 tst         r3, #1, 18
  0016c	0a000004	 beq         |$LN32@ReadDataIN|
  00170	e59f08c8	 ldr         r0, [pc, #0x8C8]
  00174	eb000000	 bl          NKDbgPrintfW
  00178	e3a03001	 mov         r3, #1
  0017c	e58d3078	 str         r3, [sp, #0x78]
  00180	ea000001	 b           |$LN33@ReadDataIN|
  00184		 |$LN32@ReadDataIN|
  00184	e3a03000	 mov         r3, #0
  00188	e58d3078	 str         r3, [sp, #0x78]
  0018c		 |$LN33@ReadDataIN|

; 99   :         goto READ_EXIT;

  0018c	ea000213	 b           |$LN24@ReadDataIN|
  00190	ea000212	 b           |$READ_EXIT$42045|
  00194		 |$LN25@ReadDataIN|

; 100  :     }
; 101  : 
; 102  :     pvData = (BYTE *)GetVAData();

  00194	e59d0164	 ldr         r0, [sp, #0x164]
  00198	eb000000	 bl          |?GetVAData@CQTD@@QAAKXZ|
  0019c	e58d007c	 str         r0, [sp, #0x7C]
  001a0	e59d307c	 ldr         r3, [sp, #0x7C]
  001a4	e58d302c	 str         r3, [sp, #0x2C]

; 103  :     pvData = pvData + GetTotTfrSize();

  001a8	e59d0164	 ldr         r0, [sp, #0x164]
  001ac	eb000000	 bl          |?GetTotTfrSize@CQTD@@QAAKXZ|
  001b0	e58d0080	 str         r0, [sp, #0x80]
  001b4	e59d202c	 ldr         r2, [sp, #0x2C]
  001b8	e59d3080	 ldr         r3, [sp, #0x80]
  001bc	e0823003	 add         r3, r2, r3
  001c0	e58d302c	 str         r3, [sp, #0x2C]

; 104  :     ppData = (BYTE *)GetPAData();

  001c4	e59d0164	 ldr         r0, [sp, #0x164]
  001c8	eb000000	 bl          |?GetPAData@CQTD@@QAAKXZ|
  001cc	e58d0084	 str         r0, [sp, #0x84]
  001d0	e59d3084	 ldr         r3, [sp, #0x84]
  001d4	e58d3028	 str         r3, [sp, #0x28]

; 105  :     ppData = ppData + GetTotTfrSize();

  001d8	e59d0164	 ldr         r0, [sp, #0x164]
  001dc	eb000000	 bl          |?GetTotTfrSize@CQTD@@QAAKXZ|
  001e0	e58d0088	 str         r0, [sp, #0x88]
  001e4	e59d2028	 ldr         r2, [sp, #0x28]
  001e8	e59d3088	 ldr         r3, [sp, #0x88]
  001ec	e0823003	 add         r3, r2, r3
  001f0	e58d3028	 str         r3, [sp, #0x28]

; 106  :     dwData = GetDataSize() - GetTotTfrSize();

  001f4	e59d0164	 ldr         r0, [sp, #0x164]
  001f8	eb000000	 bl          |?GetDataSize@CQTD@@QAAKXZ|
  001fc	e58d008c	 str         r0, [sp, #0x8C]
  00200	e59d0164	 ldr         r0, [sp, #0x164]
  00204	eb000000	 bl          |?GetTotTfrSize@CQTD@@QAAKXZ|
  00208	e58d0090	 str         r0, [sp, #0x90]
  0020c	e59d208c	 ldr         r2, [sp, #0x8C]
  00210	e59d3090	 ldr         r3, [sp, #0x90]
  00214	e0423003	 sub         r3, r2, r3
  00218	e58d3018	 str         r3, [sp, #0x18]

; 107  : 
; 108  :     UCHAR endpoint = pPipe->GetMappedEndPoint();       

  0021c	e59d0020	 ldr         r0, [sp, #0x20]
  00220	eb000000	 bl          |?GetMappedEndPoint@CPipe@@QAAEXZ|
  00224	e5cd0094	 strb        r0, [sp, #0x94]
  00228	e5dd3094	 ldrb        r3, [sp, #0x94]
  0022c	e5cd301c	 strb        r3, [sp, #0x1C]

; 109  : 
; 110  :     DEBUGMSG(ZONE_HCD, (TEXT("Total=%d, Start=%d, Remain=%d\r\n"), GetDataSize(), GetTotTfrSize(), dwData));

  00230	e59f37d8	 ldr         r3, [pc, #0x7D8]
  00234	e5933440	 ldr         r3, [r3, #0x440]
  00238	e3130001	 tst         r3, #1
  0023c	0a00000d	 beq         |$LN34@ReadDataIN|
  00240	e59d0164	 ldr         r0, [sp, #0x164]
  00244	eb000000	 bl          |?GetTotTfrSize@CQTD@@QAAKXZ|
  00248	e58d0098	 str         r0, [sp, #0x98]
  0024c	e59d0164	 ldr         r0, [sp, #0x164]
  00250	eb000000	 bl          |?GetDataSize@CQTD@@QAAKXZ|
  00254	e58d009c	 str         r0, [sp, #0x9C]
  00258	e59d3018	 ldr         r3, [sp, #0x18]
  0025c	e59d2098	 ldr         r2, [sp, #0x98]
  00260	e59d109c	 ldr         r1, [sp, #0x9C]
  00264	e59f07d0	 ldr         r0, [pc, #0x7D0]
  00268	eb000000	 bl          NKDbgPrintfW
  0026c	e3a03001	 mov         r3, #1
  00270	e58d30a0	 str         r3, [sp, #0xA0]
  00274	ea000001	 b           |$LN35@ReadDataIN|
  00278		 |$LN34@ReadDataIN|
  00278	e3a03000	 mov         r3, #0
  0027c	e58d30a0	 str         r3, [sp, #0xA0]
  00280		 |$LN35@ReadDataIN|

; 111  :     DEBUGMSG(ZONE_HCD, (TEXT("ReadDataIN: Total=%d, Start=%d, Remain=%d, CurTfrSize=%d\r\n"), 
; 112  :         GetDataSize(), GetTotTfrSize(), dwData, GetCurTfrSize()));

  00280	e59f3788	 ldr         r3, [pc, #0x788]
  00284	e5933440	 ldr         r3, [r3, #0x440]
  00288	e3130001	 tst         r3, #1
  0028c	0a000012	 beq         |$LN36@ReadDataIN|
  00290	e59d0164	 ldr         r0, [sp, #0x164]
  00294	eb000000	 bl          |?GetCurTfrSize@CQTD@@QAAKXZ|
  00298	e58d00a4	 str         r0, [sp, #0xA4]
  0029c	e59d0164	 ldr         r0, [sp, #0x164]
  002a0	eb000000	 bl          |?GetTotTfrSize@CQTD@@QAAKXZ|
  002a4	e58d00a8	 str         r0, [sp, #0xA8]
  002a8	e59d0164	 ldr         r0, [sp, #0x164]
  002ac	eb000000	 bl          |?GetDataSize@CQTD@@QAAKXZ|
  002b0	e58d00ac	 str         r0, [sp, #0xAC]
  002b4	e59d30a4	 ldr         r3, [sp, #0xA4]
  002b8	e58d3000	 str         r3, [sp]
  002bc	e59d3018	 ldr         r3, [sp, #0x18]
  002c0	e59d20a8	 ldr         r2, [sp, #0xA8]
  002c4	e59d10ac	 ldr         r1, [sp, #0xAC]
  002c8	e59f0768	 ldr         r0, [pc, #0x768]
  002cc	eb000000	 bl          NKDbgPrintfW
  002d0	e3a03001	 mov         r3, #1
  002d4	e58d30b0	 str         r3, [sp, #0xB0]
  002d8	ea000001	 b           |$LN37@ReadDataIN|
  002dc		 |$LN36@ReadDataIN|
  002dc	e3a03000	 mov         r3, #0
  002e0	e58d30b0	 str         r3, [sp, #0xB0]
  002e4		 |$LN37@ReadDataIN|

; 113  : 
; 114  :     dwError = pPipe->m_pCMhcd->CheckRxCSR(endpoint);

  002e4	e5dd101c	 ldrb        r1, [sp, #0x1C]
  002e8	e59d3020	 ldr         r3, [sp, #0x20]
  002ec	e283300c	 add         r3, r3, #0xC
  002f0	e5930000	 ldr         r0, [r3]
  002f4	eb000000	 bl          |?CheckRxCSR@CHW@@QAAKE@Z|
  002f8	e58d00b4	 str         r0, [sp, #0xB4]
  002fc	e59d30b4	 ldr         r3, [sp, #0xB4]
  00300	e58d3038	 str         r3, [sp, #0x38]

; 115  :     if (dwError != USB_NO_ERROR)

  00304	e59d3038	 ldr         r3, [sp, #0x38]
  00308	e3530000	 cmp         r3, #0
  0030c	0a000010	 beq         |$LN23@ReadDataIN|

; 116  :     {
; 117  :         DEBUGMSG(ZONE_ERROR, (TEXT("Failed in checkRxCSR\r\n")));

  00310	e59f36f8	 ldr         r3, [pc, #0x6F8]
  00314	e5933440	 ldr         r3, [r3, #0x440]
  00318	e3130901	 tst         r3, #1, 18
  0031c	0a000004	 beq         |$LN38@ReadDataIN|
  00320	e59f070c	 ldr         r0, [pc, #0x70C]
  00324	eb000000	 bl          NKDbgPrintfW
  00328	e3a03001	 mov         r3, #1
  0032c	e58d30b8	 str         r3, [sp, #0xB8]
  00330	ea000001	 b           |$LN39@ReadDataIN|
  00334		 |$LN38@ReadDataIN|
  00334	e3a03000	 mov         r3, #0
  00338	e58d30b8	 str         r3, [sp, #0xB8]
  0033c		 |$LN39@ReadDataIN|

; 118  :         SetCurTfrSize(0);

  0033c	e3a01000	 mov         r1, #0
  00340	e59d0164	 ldr         r0, [sp, #0x164]
  00344	eb000000	 bl          |?SetCurTfrSize@CQTD@@QAAXK@Z|

; 119  :         return dwError;

  00348	e59d3038	 ldr         r3, [sp, #0x38]
  0034c	e58d3048	 str         r3, [sp, #0x48]
  00350	ea0001a9	 b           |$LN28@ReadDataIN|
  00354		 |$LN23@ReadDataIN|

; 120  :     }
; 121  :     // Read the FIFO now
; 122  :     if ((pPipe->GetTransferMode() != TRANSFER_FIFO) && (pPipe->GetTransferType() != USB_ENDPOINT_TYPE_CONTROL) && (dwData != 0))

  00354	e59d0020	 ldr         r0, [sp, #0x20]
  00358	eb000000	 bl          |?GetTransferMode@CPipe@@QAAEXZ|
  0035c	e5cd00bc	 strb        r0, [sp, #0xBC]
  00360	e5dd30bc	 ldrb        r3, [sp, #0xBC]
  00364	e3530000	 cmp         r3, #0
  00368	0a0000ba	 beq         |$LN22@ReadDataIN|
  0036c	e59d3020	 ldr         r3, [sp, #0x20]
  00370	e5933000	 ldr         r3, [r3]
  00374	e283303c	 add         r3, r3, #0x3C
  00378	e59d0020	 ldr         r0, [sp, #0x20]
  0037c	e5933000	 ldr         r3, [r3]
  00380	e1a0e00f	 mov         lr, pc
  00384	e12fff13	 bx          r3
  00388	e58d00c0	 str         r0, [sp, #0xC0]
  0038c	e59d30c0	 ldr         r3, [sp, #0xC0]
  00390	e3530000	 cmp         r3, #0
  00394	0a0000af	 beq         |$LN22@ReadDataIN|
  00398	e59d3018	 ldr         r3, [sp, #0x18]
  0039c	e3530000	 cmp         r3, #0
  003a0	0a0000ac	 beq         |$LN22@ReadDataIN|

; 123  :     {
; 124  :         if (status == STATUS_WAIT_RESPONSE)

  003a4	e59d3034	 ldr         r3, [sp, #0x34]
  003a8	e3530003	 cmp         r3, #3
  003ac	1a00007c	 bne         |$LN21@ReadDataIN|

; 125  :         {
; 126  :         	DWORD dwCount;
; 127  : 			UCHAR csrIndex = INDEX(endpoint);

  003b0	e5dd301c	 ldrb        r3, [sp, #0x1C]
  003b4	e203300f	 and         r3, r3, #0xF
  003b8	e20330ff	 and         r3, r3, #0xFF
  003bc	e5cd3040	 strb        r3, [sp, #0x40]

; 128  : 			dwCount = INREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].Count.RxCount);

  003c0	e59d3030	 ldr         r3, [sp, #0x30]
  003c4	e283001c	 add         r0, r3, #0x1C
  003c8	e5dd3040	 ldrb        r3, [sp, #0x40]
  003cc	e1a01003	 mov         r1, r3
  003d0	e3a03010	 mov         r3, #0x10
  003d4	e0020391	 mul         r2, r1, r3
  003d8	e5903000	 ldr         r3, [r0]
  003dc	e0833002	 add         r3, r3, r2
  003e0	e2831008	 add         r1, r3, #8
  003e4	e5d13001	 ldrb        r3, [r1, #1]
  003e8	e1a03403	 mov         r3, r3, lsl #8
  003ec	e1a02803	 mov         r2, r3, lsl #16
  003f0	e1a02822	 mov         r2, r2, lsr #16
  003f4	e5d13000	 ldrb        r3, [r1]
  003f8	e1833002	 orr         r3, r3, r2
  003fc	e58d303c	 str         r3, [sp, #0x3C]

; 129  : 			if (dwCount == 0){

  00400	e59d303c	 ldr         r3, [sp, #0x3C]
  00404	e3530000	 cmp         r3, #0
  00408	1a000017	 bne         |$LN20@ReadDataIN|

; 130  : //                RETAILMSG(1, (L"CQTD::ReadDataIN ZERO_LENGTH PACKET\r\n"));
; 131  : 				SetCurTfrSize(GetDataSize() - GetTotTfrSize());

  0040c	e59d0164	 ldr         r0, [sp, #0x164]
  00410	eb000000	 bl          |?GetDataSize@CQTD@@QAAKXZ|
  00414	e58d00c4	 str         r0, [sp, #0xC4]
  00418	e59d0164	 ldr         r0, [sp, #0x164]
  0041c	eb000000	 bl          |?GetTotTfrSize@CQTD@@QAAKXZ|
  00420	e58d00c8	 str         r0, [sp, #0xC8]
  00424	e59d20c4	 ldr         r2, [sp, #0xC4]
  00428	e59d30c8	 ldr         r3, [sp, #0xC8]
  0042c	e0421003	 sub         r1, r2, r3
  00430	e59d0164	 ldr         r0, [sp, #0x164]
  00434	eb000000	 bl          |?SetCurTfrSize@CQTD@@QAAXK@Z|

; 132  : 				SetTotTfrSize(GetTotTfrSize() + (DWORD)GetCurTfrSize());

  00438	e59d0164	 ldr         r0, [sp, #0x164]
  0043c	eb000000	 bl          |?GetTotTfrSize@CQTD@@QAAKXZ|
  00440	e58d00cc	 str         r0, [sp, #0xCC]
  00444	e59d0164	 ldr         r0, [sp, #0x164]
  00448	eb000000	 bl          |?GetCurTfrSize@CQTD@@QAAKXZ|
  0044c	e58d00d0	 str         r0, [sp, #0xD0]
  00450	e59d20cc	 ldr         r2, [sp, #0xCC]
  00454	e59d30d0	 ldr         r3, [sp, #0xD0]
  00458	e0821003	 add         r1, r2, r3
  0045c	e59d0164	 ldr         r0, [sp, #0x164]
  00460	eb000000	 bl          |?SetTotTfrSize@CQTD@@QAAXK@Z|
  00464	ea00015d	 b           |$LN19@ReadDataIN|

; 133  : 				goto READ_EXIT;

  00468	ea00015c	 b           |$READ_EXIT$42045|
  0046c		 |$LN20@ReadDataIN|

; 134  : 			}
; 135  : 			
; 136  : 		
; 137  :             // Actually need to check if the RxCSR has error
; 138  :             UCHAR channel = pPipe->m_pCMhcd->AcquireDMAChannel(pPipe);

  0046c	e59d1020	 ldr         r1, [sp, #0x20]
  00470	e59d3020	 ldr         r3, [sp, #0x20]
  00474	e283300c	 add         r3, r3, #0xC
  00478	e5930000	 ldr         r0, [r3]
  0047c	eb000000	 bl          |?AcquireDMAChannel@CHW@@QAAEPAVCPipe@@@Z|
  00480	e5cd00d4	 strb        r0, [sp, #0xD4]
  00484	e5dd30d4	 ldrb        r3, [sp, #0xD4]
  00488	e5cd3041	 strb        r3, [sp, #0x41]

; 139  :             if (channel == 0xff) // Not able to get the DMA channel, use FIFO instead.

  0048c	e5dd3041	 ldrb        r3, [sp, #0x41]
  00490	e35300ff	 cmp         r3, #0xFF
  00494	1a000008	 bne         |$LN18@ReadDataIN|

; 140  :             {
; 141  :                 RETAILMSG(1, (TEXT("DMA Channel failed, use FIFO to read\r\n")));

  00498	e59f0590	 ldr         r0, [pc, #0x590]
  0049c	eb000000	 bl          NKDbgPrintfW
  004a0	e3a03001	 mov         r3, #1
  004a4	e58d30d8	 str         r3, [sp, #0xD8]
  004a8	ea000001	 b           |$LN41@ReadDataIN|
  004ac	e3a03000	 mov         r3, #0
  004b0	e58d30d8	 str         r3, [sp, #0xD8]
  004b4		 |$LN41@ReadDataIN|

; 142  :                 goto PROCESS_READ_FIFO;

  004b4	ea000067	 b           |$LN17@ReadDataIN|
  004b8	ea000066	 b           |$PROCESS_READ_FIFO$42073|
  004bc		 |$LN18@ReadDataIN|

; 143  :             }
; 144  : 
; 145  : 
; 146  :             if (pPipe->GetTransferMode() == TRANSFER_DMA1)

  004bc	e59d0020	 ldr         r0, [sp, #0x20]
  004c0	eb000000	 bl          |?GetTransferMode@CPipe@@QAAEXZ|
  004c4	e5cd00dc	 strb        r0, [sp, #0xDC]
  004c8	e5dd30dc	 ldrb        r3, [sp, #0xDC]
  004cc	e3530002	 cmp         r3, #2
  004d0	1a000012	 bne         |$LN16@ReadDataIN|

; 147  :             {
; 148  :                 // This is a hack as mode 1 not working well.
; 149  :                 if ((dwData % GetPacketSize() == 0) && (dwData > GetPacketSize()))

  004d4	e59d0164	 ldr         r0, [sp, #0x164]
  004d8	eb000000	 bl          |?GetPacketSize@CQTD@@QAAKXZ|
  004dc	e58d00e0	 str         r0, [sp, #0xE0]
  004e0	e59d1018	 ldr         r1, [sp, #0x18]
  004e4	e59d00e0	 ldr         r0, [sp, #0xE0]
  004e8	eb000000	 bl          __rt_udiv
  004ec	e3510000	 cmp         r1, #0
  004f0	1a000009	 bne         |$LN15@ReadDataIN|
  004f4	e59d0164	 ldr         r0, [sp, #0x164]
  004f8	eb000000	 bl          |?GetPacketSize@CQTD@@QAAKXZ|
  004fc	e58d00e4	 str         r0, [sp, #0xE4]
  00500	e59d2018	 ldr         r2, [sp, #0x18]
  00504	e59d30e4	 ldr         r3, [sp, #0xE4]
  00508	e1520003	 cmp         r2, r3
  0050c	9a000002	 bls         |$LN15@ReadDataIN|

; 150  :                     dwData = dwData - 8; // Just minus 8 bytes i.e. it would have the last packet ACK

  00510	e59d3018	 ldr         r3, [sp, #0x18]
  00514	e2433008	 sub         r3, r3, #8
  00518	e58d3018	 str         r3, [sp, #0x18]
  0051c		 |$LN15@ReadDataIN|

; 151  :             }
; 152  :             else

  0051c	ea000004	 b           |$LN14@ReadDataIN|
  00520		 |$LN16@ReadDataIN|

; 153  :                 dwData = GetPacketSize();

  00520	e59d0164	 ldr         r0, [sp, #0x164]
  00524	eb000000	 bl          |?GetPacketSize@CQTD@@QAAKXZ|
  00528	e58d00e8	 str         r0, [sp, #0xE8]
  0052c	e59d30e8	 ldr         r3, [sp, #0xE8]
  00530	e58d3018	 str         r3, [sp, #0x18]
  00534		 |$LN14@ReadDataIN|

; 154  : 
; 155  :             *pdwMore = MUSB_WAIT_DMA_COMPLETE;

  00534	e59d2168	 ldr         r2, [sp, #0x168]
  00538	e3a03002	 mov         r3, #2
  0053c	e5823000	 str         r3, [r2]

; 156  :             count = pPipe->m_pCMhcd->ReadDMA((void *)pOTG, endpoint, channel, 
; 157  :                          (void *)ppData, dwData, GetPacketSize(), this);       

  00540	e59d0164	 ldr         r0, [sp, #0x164]
  00544	eb000000	 bl          |?GetPacketSize@CQTD@@QAAKXZ|
  00548	e58d00ec	 str         r0, [sp, #0xEC]
  0054c	e59d3164	 ldr         r3, [sp, #0x164]
  00550	e58d300c	 str         r3, [sp, #0xC]
  00554	e59d30ec	 ldr         r3, [sp, #0xEC]
  00558	e58d3008	 str         r3, [sp, #8]
  0055c	e59d3018	 ldr         r3, [sp, #0x18]
  00560	e58d3004	 str         r3, [sp, #4]
  00564	e59d3028	 ldr         r3, [sp, #0x28]
  00568	e58d3000	 str         r3, [sp]
  0056c	e5dd3041	 ldrb        r3, [sp, #0x41]
  00570	e5dd201c	 ldrb        r2, [sp, #0x1C]
  00574	e59d1030	 ldr         r1, [sp, #0x30]
  00578	e59d0020	 ldr         r0, [sp, #0x20]
  0057c	e280000c	 add         r0, r0, #0xC
  00580	e5900000	 ldr         r0, [r0]
  00584	eb000000	 bl          |?ReadDMA@CHW@@QAAKPAXEE0KKPAVCQTD@@@Z|
  00588	e58d00f0	 str         r0, [sp, #0xF0]
  0058c	e59d30f0	 ldr         r3, [sp, #0xF0]
  00590	e58d3014	 str         r3, [sp, #0x14]

; 158  :             return USB_NO_ERROR;

  00594	e3a03000	 mov         r3, #0
  00598	e58d3048	 str         r3, [sp, #0x48]
  0059c	ea000116	 b           |$LN28@ReadDataIN|

; 159  :         }
; 160  :         else if ((status == STATUS_WAIT_DMA_0_RD_FIFO_COMPLETE) ||

  005a0	ea00002b	 b           |$LN13@ReadDataIN|
  005a4		 |$LN21@ReadDataIN|

; 161  :             (status == STATUS_WAIT_DMA_1_RD_FIFO_COMPLETE))

  005a4	e59d3034	 ldr         r3, [sp, #0x34]
  005a8	e353000a	 cmp         r3, #0xA
  005ac	0a000002	 beq         |$LN11@ReadDataIN|
  005b0	e59d3034	 ldr         r3, [sp, #0x34]
  005b4	e353000b	 cmp         r3, #0xB
  005b8	1a000025	 bne         |$LN12@ReadDataIN|
  005bc		 |$LN11@ReadDataIN|

; 162  :         {           
; 163  :             UCHAR channel = pPipe->m_pCMhcd->DeviceInfo2Channel(pPipe);                

  005bc	e59d1020	 ldr         r1, [sp, #0x20]
  005c0	e59d3020	 ldr         r3, [sp, #0x20]
  005c4	e283300c	 add         r3, r3, #0xC
  005c8	e5930000	 ldr         r0, [r3]
  005cc	eb000000	 bl          |?DeviceInfo2Channel@CHW@@QAAEPAVCPipe@@@Z|
  005d0	e5cd00f4	 strb        r0, [sp, #0xF4]
  005d4	e5dd30f4	 ldrb        r3, [sp, #0xF4]
  005d8	e5cd3042	 strb        r3, [sp, #0x42]

; 164  :             dwError = pPipe->m_pCMhcd->CheckDMAResult((void *)pOTG, channel);

  005dc	e5dd2042	 ldrb        r2, [sp, #0x42]
  005e0	e59d1030	 ldr         r1, [sp, #0x30]
  005e4	e59d3020	 ldr         r3, [sp, #0x20]
  005e8	e283300c	 add         r3, r3, #0xC
  005ec	e5930000	 ldr         r0, [r3]
  005f0	eb000000	 bl          |?CheckDMAResult@CHW@@QAAKPAXE@Z|
  005f4	e58d00f8	 str         r0, [sp, #0xF8]
  005f8	e59d30f8	 ldr         r3, [sp, #0xF8]
  005fc	e58d3038	 str         r3, [sp, #0x38]

; 165  :             DEBUGMSG(ZONE_HCD, (TEXT("DMA IN success with status(0x%x), channel(0x%x), endpoint(%d)\r\n"),
; 166  :                 status, channel, USB_ENDPOINT(endpoint)));

  00600	e59f3408	 ldr         r3, [pc, #0x408]
  00604	e5933440	 ldr         r3, [r3, #0x440]
  00608	e3130001	 tst         r3, #1
  0060c	0a000008	 beq         |$LN42@ReadDataIN|
  00610	e5dd301c	 ldrb        r3, [sp, #0x1C]
  00614	e203300f	 and         r3, r3, #0xF
  00618	e5dd2042	 ldrb        r2, [sp, #0x42]
  0061c	e59d1034	 ldr         r1, [sp, #0x34]
  00620	e59f0404	 ldr         r0, [pc, #0x404]
  00624	eb000000	 bl          NKDbgPrintfW
  00628	e3a03001	 mov         r3, #1
  0062c	e58d30fc	 str         r3, [sp, #0xFC]
  00630	ea000001	 b           |$LN43@ReadDataIN|
  00634		 |$LN42@ReadDataIN|
  00634	e3a03000	 mov         r3, #0
  00638	e58d30fc	 str         r3, [sp, #0xFC]
  0063c		 |$LN43@ReadDataIN|

; 167  :             pPipe->m_pCMhcd->RestoreRxConfig((void *)pOTG, endpoint);            

  0063c	e5dd201c	 ldrb        r2, [sp, #0x1C]
  00640	e59d1030	 ldr         r1, [sp, #0x30]
  00644	e59d3020	 ldr         r3, [sp, #0x20]
  00648	e283300c	 add         r3, r3, #0xC
  0064c	e5930000	 ldr         r0, [r3]
  00650	eb000000	 bl          |?RestoreRxConfig@CHW@@QAAHPAXE@Z|
  00654		 |$LN12@ReadDataIN|
  00654		 |$LN13@ReadDataIN|

; 168  :         }
; 169  :     }
; 170  :     else

  00654	ea00003a	 b           |$LN10@ReadDataIN|
  00658		 |$LN22@ReadDataIN|
  00658		 |$LN17@ReadDataIN|
  00658		 |$PROCESS_READ_FIFO$42073|

; 171  :     {
; 172  : PROCESS_READ_FIFO:
; 173  :         DEBUGMSG(ZONE_TRANSFER, (TEXT("Read FIFO for MappedEP %d start\r\n"), USB_ENDPOINT(endpoint)));

  00658	e59f33b0	 ldr         r3, [pc, #0x3B0]
  0065c	e5933440	 ldr         r3, [r3, #0x440]
  00660	e3130c01	 tst         r3, #1, 24
  00664	0a000006	 beq         |$LN44@ReadDataIN|
  00668	e5dd301c	 ldrb        r3, [sp, #0x1C]
  0066c	e203100f	 and         r1, r3, #0xF
  00670	e59f03b0	 ldr         r0, [pc, #0x3B0]
  00674	eb000000	 bl          NKDbgPrintfW
  00678	e3a03001	 mov         r3, #1
  0067c	e58d3100	 str         r3, [sp, #0x100]
  00680	ea000001	 b           |$LN45@ReadDataIN|
  00684		 |$LN44@ReadDataIN|
  00684	e3a03000	 mov         r3, #0
  00688	e58d3100	 str         r3, [sp, #0x100]
  0068c		 |$LN45@ReadDataIN|

; 174  :         dwError = pPipe->m_pCMhcd->ReadFIFO((void *)pOTG, endpoint, (void *)pvData, dwData, &iRetSize);

  0068c	e28d3024	 add         r3, sp, #0x24
  00690	e58d3004	 str         r3, [sp, #4]
  00694	e59d3018	 ldr         r3, [sp, #0x18]
  00698	e58d3000	 str         r3, [sp]
  0069c	e59d302c	 ldr         r3, [sp, #0x2C]
  006a0	e5dd201c	 ldrb        r2, [sp, #0x1C]
  006a4	e59d1030	 ldr         r1, [sp, #0x30]
  006a8	e59d0020	 ldr         r0, [sp, #0x20]
  006ac	e280000c	 add         r0, r0, #0xC
  006b0	e590e000	 ldr         lr, [r0]
  006b4	e59d0020	 ldr         r0, [sp, #0x20]
  006b8	e280000c	 add         r0, r0, #0xC
  006bc	e5904000	 ldr         r4, [r0]
  006c0	e59e0000	 ldr         r0, [lr]
  006c4	e280e05c	 add         lr, r0, #0x5C
  006c8	e1a00004	 mov         r0, r4
  006cc	e59e4000	 ldr         r4, [lr]
  006d0	e1a0e00f	 mov         lr, pc
  006d4	e12fff14	 bx          r4
  006d8	e58d0104	 str         r0, [sp, #0x104]
  006dc	e59d3104	 ldr         r3, [sp, #0x104]
  006e0	e58d3038	 str         r3, [sp, #0x38]

; 175  :         if (dwError == USB_NO_ERROR)

  006e4	e59d3038	 ldr         r3, [sp, #0x38]
  006e8	e3530000	 cmp         r3, #0
  006ec	1a000003	 bne         |$LN9@ReadDataIN|

; 176  :         {
; 177  :             SetCurTfrSize(iRetSize);            

  006f0	e59d1024	 ldr         r1, [sp, #0x24]
  006f4	e59d0164	 ldr         r0, [sp, #0x164]
  006f8	eb000000	 bl          |?SetCurTfrSize@CQTD@@QAAXK@Z|

; 178  :         }
; 179  :         else

  006fc	ea000002	 b           |$LN8@ReadDataIN|
  00700		 |$LN9@ReadDataIN|

; 180  :         {
; 181  :             SetCurTfrSize(0);

  00700	e3a01000	 mov         r1, #0
  00704	e59d0164	 ldr         r0, [sp, #0x164]
  00708	eb000000	 bl          |?SetCurTfrSize@CQTD@@QAAXK@Z|
  0070c		 |$LN8@ReadDataIN|

; 182  :         }
; 183  :         DEBUGMSG(ZONE_HCD, (TEXT("Read FIFO for mapped EP %d success return size %d\r\n"), 
; 184  :             USB_ENDPOINT(endpoint), iRetSize));

  0070c	e59f32fc	 ldr         r3, [pc, #0x2FC]
  00710	e5933440	 ldr         r3, [r3, #0x440]
  00714	e3130001	 tst         r3, #1
  00718	0a000007	 beq         |$LN46@ReadDataIN|
  0071c	e59d2024	 ldr         r2, [sp, #0x24]
  00720	e5dd301c	 ldrb        r3, [sp, #0x1C]
  00724	e203100f	 and         r1, r3, #0xF
  00728	e59f02f4	 ldr         r0, [pc, #0x2F4]
  0072c	eb000000	 bl          NKDbgPrintfW
  00730	e3a03001	 mov         r3, #1
  00734	e58d3108	 str         r3, [sp, #0x108]
  00738	ea000001	 b           |$LN47@ReadDataIN|
  0073c		 |$LN46@ReadDataIN|
  0073c	e3a03000	 mov         r3, #0
  00740	e58d3108	 str         r3, [sp, #0x108]
  00744		 |$LN47@ReadDataIN|
  00744		 |$LN10@ReadDataIN|

; 185  :     }
; 186  :     if (dwError != USB_NO_ERROR)

  00744	e59d3038	 ldr         r3, [sp, #0x38]
  00748	e3530000	 cmp         r3, #0
  0074c	0a00000e	 beq         |$LN7@ReadDataIN|

; 187  :     {        
; 188  :         DEBUGMSG(1, (TEXT("ReadFIFO error which suppose to read total %d bytes error 0x%x\r\n"), GetDataSize(), dwError));

  00750	e59d0164	 ldr         r0, [sp, #0x164]
  00754	eb000000	 bl          |?GetDataSize@CQTD@@QAAKXZ|
  00758	e58d010c	 str         r0, [sp, #0x10C]
  0075c	e59d2038	 ldr         r2, [sp, #0x38]
  00760	e59d110c	 ldr         r1, [sp, #0x10C]
  00764	e59f02b4	 ldr         r0, [pc, #0x2B4]
  00768	eb000000	 bl          NKDbgPrintfW
  0076c	e3a03001	 mov         r3, #1
  00770	e58d3110	 str         r3, [sp, #0x110]
  00774	ea000001	 b           |$LN49@ReadDataIN|
  00778	e3a03000	 mov         r3, #0
  0077c	e58d3110	 str         r3, [sp, #0x110]
  00780		 |$LN49@ReadDataIN|

; 189  :         return dwError;

  00780	e59d3038	 ldr         r3, [sp, #0x38]
  00784	e58d3048	 str         r3, [sp, #0x48]
  00788	ea00009b	 b           |$LN28@ReadDataIN|
  0078c		 |$LN7@ReadDataIN|

; 190  :     }
; 191  :     
; 192  :     SetTotTfrSize(GetTotTfrSize() + (DWORD)GetCurTfrSize());

  0078c	e59d0164	 ldr         r0, [sp, #0x164]
  00790	eb000000	 bl          |?GetTotTfrSize@CQTD@@QAAKXZ|
  00794	e58d0114	 str         r0, [sp, #0x114]
  00798	e59d0164	 ldr         r0, [sp, #0x164]
  0079c	eb000000	 bl          |?GetCurTfrSize@CQTD@@QAAKXZ|
  007a0	e58d0118	 str         r0, [sp, #0x118]
  007a4	e59d2114	 ldr         r2, [sp, #0x114]
  007a8	e59d3118	 ldr         r3, [sp, #0x118]
  007ac	e0821003	 add         r1, r2, r3
  007b0	e59d0164	 ldr         r0, [sp, #0x164]
  007b4	eb000000	 bl          |?SetTotTfrSize@CQTD@@QAAXK@Z|

; 193  :     // Control endpoint (message type), we can use exactly data buffer to wait
; 194  :     // It seems that it doesn't send out zero data length to you ...
; 195  :     // so, you should just check the data size.
; 196  :     // transfer should be considered complete when short packets and zero length packets
; 197  :     if (!((GetTotTfrSize() >= GetDataSize()) || (GetCurTfrSize() < GetPacketSize())))

  007b8	e59d0164	 ldr         r0, [sp, #0x164]
  007bc	eb000000	 bl          |?GetTotTfrSize@CQTD@@QAAKXZ|
  007c0	e58d011c	 str         r0, [sp, #0x11C]
  007c4	e59d0164	 ldr         r0, [sp, #0x164]
  007c8	eb000000	 bl          |?GetDataSize@CQTD@@QAAKXZ|
  007cc	e58d0120	 str         r0, [sp, #0x120]
  007d0	e59d211c	 ldr         r2, [sp, #0x11C]
  007d4	e59d3120	 ldr         r3, [sp, #0x120]
  007d8	e1520003	 cmp         r2, r3
  007dc	2a00000c	 bcs         |$LN6@ReadDataIN|
  007e0	e59d0164	 ldr         r0, [sp, #0x164]
  007e4	eb000000	 bl          |?GetCurTfrSize@CQTD@@QAAKXZ|
  007e8	e58d0124	 str         r0, [sp, #0x124]
  007ec	e59d0164	 ldr         r0, [sp, #0x164]
  007f0	eb000000	 bl          |?GetPacketSize@CQTD@@QAAKXZ|
  007f4	e58d0128	 str         r0, [sp, #0x128]
  007f8	e59d2124	 ldr         r2, [sp, #0x124]
  007fc	e59d3128	 ldr         r3, [sp, #0x128]
  00800	e1520003	 cmp         r2, r3
  00804	3a000002	 bcc         |$LN6@ReadDataIN|

; 198  :       *pdwMore = MUSB_READ_MORE_DATA;

  00808	e59d2168	 ldr         r2, [sp, #0x168]
  0080c	e3a03001	 mov         r3, #1
  00810	e5823000	 str         r3, [r2]
  00814		 |$LN6@ReadDataIN|

; 199  : 
; 200  :     // For mode 1, we need to check and see if there is more data
; 201  :     if ((pPipe->GetTransferMode() != TRANSFER_FIFO) && (status == STATUS_WAIT_DMA_1_RD_FIFO_COMPLETE))

  00814	e59d0020	 ldr         r0, [sp, #0x20]
  00818	eb000000	 bl          |?GetTransferMode@CPipe@@QAAEXZ|
  0081c	e5cd012c	 strb        r0, [sp, #0x12C]
  00820	e5dd312c	 ldrb        r3, [sp, #0x12C]
  00824	e3530000	 cmp         r3, #0
  00828	0a00003e	 beq         |$LN5@ReadDataIN|
  0082c	e59d3034	 ldr         r3, [sp, #0x34]
  00830	e353000b	 cmp         r3, #0xB
  00834	1a00003b	 bne         |$LN5@ReadDataIN|

; 202  :     {
; 203  :         // Don't clear the RxPktRdy in case of RD 1 mode as it is auto clear already.
; 204  :         fClearRxPkt = FALSE;

  00838	e3a03000	 mov         r3, #0
  0083c	e58d3010	 str         r3, [sp, #0x10]

; 205  : 
; 206  :         // No need to worry about the RxCount at this point, since the DMA is too fast.
; 207  :         // Just set data available and let the IssueTransfer check if RxCount.
; 208  :         if (*pdwMore == MUSB_READ_MORE_DATA) // there is residue data, need to DMA again with mode 0

  00840	e59d3168	 ldr         r3, [sp, #0x168]
  00844	e5933000	 ldr         r3, [r3]
  00848	e3530001	 cmp         r3, #1
  0084c	1a000018	 bne         |$LN4@ReadDataIN|

; 209  :         {                 
; 210  :             SetStatus(STATUS_WAIT_RESPONSE);

  00850	e3a01003	 mov         r1, #3
  00854	e59d0164	 ldr         r0, [sp, #0x164]
  00858	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|

; 211  :             ReadDataIN(pdwMore);            

  0085c	e59d1168	 ldr         r1, [sp, #0x168]
  00860	e59d0164	 ldr         r0, [sp, #0x164]
  00864	eb000000	 bl          |?ReadDataIN@CQTD@@QAAKPAK@Z|

; 212  :             DEBUGMSG( ZONE_HCD|ZONE_DEBUG, (TEXT("Read the last block of data for ep %d, mapped %d\r\n"), 
; 213  :                 USB_ENDPOINT(endpoint), USB_ENDPOINT(pPipe->GetMappedEndPoint())));

  00868	e59f31a0	 ldr         r3, [pc, #0x1A0]
  0086c	e5933440	 ldr         r3, [r3, #0x440]
  00870	e3130001	 tst         r3, #1
  00874	0a00000b	 beq         |$LN50@ReadDataIN|
  00878	e59d0020	 ldr         r0, [sp, #0x20]
  0087c	eb000000	 bl          |?GetMappedEndPoint@CPipe@@QAAEXZ|
  00880	e5cd012d	 strb        r0, [sp, #0x12D]
  00884	e5dd312d	 ldrb        r3, [sp, #0x12D]
  00888	e203200f	 and         r2, r3, #0xF
  0088c	e5dd301c	 ldrb        r3, [sp, #0x1C]
  00890	e203100f	 and         r1, r3, #0xF
  00894	e59f0180	 ldr         r0, [pc, #0x180]
  00898	eb000000	 bl          NKDbgPrintfW
  0089c	e3a03001	 mov         r3, #1
  008a0	e58d3130	 str         r3, [sp, #0x130]
  008a4	ea000001	 b           |$LN51@ReadDataIN|
  008a8		 |$LN50@ReadDataIN|
  008a8	e3a03000	 mov         r3, #0
  008ac	e58d3130	 str         r3, [sp, #0x130]
  008b0		 |$LN51@ReadDataIN|

; 214  :         }
; 215  :         else // Check and see if there is any thing inside the FIFO

  008b0	ea00001c	 b           |$LN3@ReadDataIN|
  008b4		 |$LN4@ReadDataIN|

; 216  :         {
; 217  :             pPipe->m_pCMhcd->SetRxDataAvail(USB_ENDPOINT(endpoint));

  008b4	e5dd301c	 ldrb        r3, [sp, #0x1C]
  008b8	e203300f	 and         r3, r3, #0xF
  008bc	e20310ff	 and         r1, r3, #0xFF
  008c0	e59d3020	 ldr         r3, [sp, #0x20]
  008c4	e283300c	 add         r3, r3, #0xC
  008c8	e5930000	 ldr         r0, [r3]
  008cc	eb000000	 bl          |?SetRxDataAvail@CHW@@QAAXE@Z|

; 218  :             DEBUGMSG(ZONE_HCD, (TEXT("DataAvail(%d) = 0x%x\r\n"), USB_ENDPOINT(endpoint), 
; 219  :                     pPipe->m_pCMhcd->GetRxDataAvail(USB_ENDPOINT(endpoint))));        

  008d0	e59f3138	 ldr         r3, [pc, #0x138]
  008d4	e5933440	 ldr         r3, [r3, #0x440]
  008d8	e3130001	 tst         r3, #1
  008dc	0a00000f	 beq         |$LN52@ReadDataIN|
  008e0	e5dd301c	 ldrb        r3, [sp, #0x1C]
  008e4	e203300f	 and         r3, r3, #0xF
  008e8	e20310ff	 and         r1, r3, #0xFF
  008ec	e59d3020	 ldr         r3, [sp, #0x20]
  008f0	e283300c	 add         r3, r3, #0xC
  008f4	e5930000	 ldr         r0, [r3]
  008f8	eb000000	 bl          |?GetRxDataAvail@CHW@@QAAHE@Z|
  008fc	e58d0134	 str         r0, [sp, #0x134]
  00900	e59d2134	 ldr         r2, [sp, #0x134]
  00904	e5dd301c	 ldrb        r3, [sp, #0x1C]
  00908	e203100f	 and         r1, r3, #0xF
  0090c	e59f0104	 ldr         r0, [pc, #0x104]
  00910	eb000000	 bl          NKDbgPrintfW
  00914	e3a03001	 mov         r3, #1
  00918	e58d3138	 str         r3, [sp, #0x138]
  0091c	ea000001	 b           |$LN53@ReadDataIN|
  00920		 |$LN52@ReadDataIN|
  00920	e3a03000	 mov         r3, #0
  00924	e58d3138	 str         r3, [sp, #0x138]
  00928		 |$LN53@ReadDataIN|
  00928		 |$LN3@ReadDataIN|
  00928		 |$LN5@ReadDataIN|

; 220  :         }
; 221  :     }
; 222  :     
; 223  :     DEBUGMSG(ZONE_HCD, (TEXT("DataBuffer(0x%x), TfrSze(0x%x), Receive(0x%x), PacketSize(0x%x)\r\n"), 
; 224  :         GetDataSize(),GetTotTfrSize(), iRetSize, GetPacketSize()));

  00928	e59f30e0	 ldr         r3, [pc, #0xE0]
  0092c	e5933440	 ldr         r3, [r3, #0x440]
  00930	e3130001	 tst         r3, #1
  00934	0a000012	 beq         |$LN54@ReadDataIN|
  00938	e59d0164	 ldr         r0, [sp, #0x164]
  0093c	eb000000	 bl          |?GetPacketSize@CQTD@@QAAKXZ|
  00940	e58d013c	 str         r0, [sp, #0x13C]
  00944	e59d0164	 ldr         r0, [sp, #0x164]
  00948	eb000000	 bl          |?GetTotTfrSize@CQTD@@QAAKXZ|
  0094c	e58d0140	 str         r0, [sp, #0x140]
  00950	e59d0164	 ldr         r0, [sp, #0x164]
  00954	eb000000	 bl          |?GetDataSize@CQTD@@QAAKXZ|
  00958	e58d0144	 str         r0, [sp, #0x144]
  0095c	e59d313c	 ldr         r3, [sp, #0x13C]
  00960	e58d3000	 str         r3, [sp]
  00964	e59d3024	 ldr         r3, [sp, #0x24]
  00968	e59d2140	 ldr         r2, [sp, #0x140]
  0096c	e59d1144	 ldr         r1, [sp, #0x144]
  00970	e59f009c	 ldr         r0, [pc, #0x9C]
  00974	eb000000	 bl          NKDbgPrintfW
  00978	e3a03001	 mov         r3, #1
  0097c	e58d3148	 str         r3, [sp, #0x148]
  00980	ea000001	 b           |$LN55@ReadDataIN|
  00984		 |$LN54@ReadDataIN|
  00984	e3a03000	 mov         r3, #0
  00988	e58d3148	 str         r3, [sp, #0x148]
  0098c		 |$LN55@ReadDataIN|

; 225  :     if (GetTotTfrSize() > GetDataSize())

  0098c	e59d0164	 ldr         r0, [sp, #0x164]
  00990	eb000000	 bl          |?GetTotTfrSize@CQTD@@QAAKXZ|
  00994	e58d014c	 str         r0, [sp, #0x14C]
  00998	e59d0164	 ldr         r0, [sp, #0x164]
  0099c	eb000000	 bl          |?GetDataSize@CQTD@@QAAKXZ|
  009a0	e58d0150	 str         r0, [sp, #0x150]
  009a4	e59d214c	 ldr         r2, [sp, #0x14C]
  009a8	e59d3150	 ldr         r3, [sp, #0x150]
  009ac	e1520003	 cmp         r2, r3
  009b0	9a00000a	 bls         |$LN2@ReadDataIN|

; 226  :         DEBUGMSG(ZONE_ERROR, (TEXT("Something wrong: receive more data than expected\r\n")));

  009b4	e59f3054	 ldr         r3, [pc, #0x54]
  009b8	e5933440	 ldr         r3, [r3, #0x440]
  009bc	e3130901	 tst         r3, #1, 18
  009c0	0a000004	 beq         |$LN56@ReadDataIN|
  009c4	e59f0040	 ldr         r0, [pc, #0x40]
  009c8	eb000000	 bl          NKDbgPrintfW
  009cc	e3a03001	 mov         r3, #1
  009d0	e58d3154	 str         r3, [sp, #0x154]
  009d4	ea000001	 b           |$LN57@ReadDataIN|
  009d8		 |$LN56@ReadDataIN|
  009d8	e3a03000	 mov         r3, #0
  009dc	e58d3154	 str         r3, [sp, #0x154]
  009e0		 |$LN57@ReadDataIN|
  009e0		 |$LN2@ReadDataIN|
  009e0		 |$LN19@ReadDataIN|
  009e0		 |$LN24@ReadDataIN|
  009e0		 |$LN26@ReadDataIN|
  009e0		 |$READ_EXIT$42045|

; 227  : 
; 228  : READ_EXIT:
; 229  :     if (fClearRxPkt) 

  009e0	e59d3010	 ldr         r3, [sp, #0x10]
  009e4	e3530000	 cmp         r3, #0
  009e8	0a000001	 beq         |$LN1@ReadDataIN|

; 230  :         ClearRxPktRdy();

  009ec	e59d0164	 ldr         r0, [sp, #0x164]
  009f0	eb000000	 bl          |?ClearRxPktRdy@CQTD@@QAAXXZ|
  009f4		 |$LN1@ReadDataIN|

; 231  :     return USB_NO_ERROR;

  009f4	e3a03000	 mov         r3, #0
  009f8	e58d3048	 str         r3, [sp, #0x48]
  009fc		 |$LN28@ReadDataIN|

; 232  : }

  009fc	e59d0048	 ldr         r0, [sp, #0x48]
  00a00	e28ddf56	 add         sp, sp, #0x56, 30
  00a04	e89d6010	 ldmia       sp, {r4, sp, lr}
  00a08	e12fff1e	 bx          lr
  00a0c		 |$LN61@ReadDataIN|
  00a0c		 |$LN62@ReadDataIN|
  00a0c	00000000	 DCD         |??_C@_1GG@OIFAIPKL@?$AAS?$AAo?$AAm?$AAe?$AAt?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAw?$AAr?$AAo?$AAn?$AAg?$AA?3?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?5?$AAm?$AAo?$AAr?$AAe?$AA?5?$AAd?$AAa@|
  00a10		 |$LN63@ReadDataIN|
  00a10	00000000	 DCD         |dpCurSettings|
  00a14		 |$LN64@ReadDataIN|
  00a14	00000000	 DCD         |??_C@_1IE@GCLBHAGE@?$AAD?$AAa?$AAt?$AAa?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAT?$AAf?$AAr?$AAS?$AAz?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5@|
  00a18		 |$LN65@ReadDataIN|
  00a18	00000000	 DCD         |??_C@_1CO@DCFELOBF@?$AAD?$AAa?$AAt?$AAa?$AAA?$AAv?$AAa?$AAi?$AAl?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00a1c		 |$LN66@ReadDataIN|
  00a1c	00000000	 DCD         |??_C@_1GG@DNLLFINH@?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAl?$AAa?$AAs?$AAt?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAo?$AAf?$AA?5?$AAd?$AAa?$AAt?$AAa?$AA?5?$AAf?$AAo?$AAr?$AA?5@|
  00a20		 |$LN67@ReadDataIN|
  00a20	00000000	 DCD         |??_C@_1IC@GBBMENAG@?$AAR?$AAe?$AAa?$AAd?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAw?$AAh?$AAi?$AAc?$AAh?$AA?5?$AAs?$AAu?$AAp?$AAp?$AAo?$AAs?$AAe?$AA?5?$AAt?$AAo?$AA?5@|
  00a24		 |$LN68@ReadDataIN|
  00a24	00000000	 DCD         |??_C@_1GI@CAOOGLHD@?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAm?$AAa?$AAp?$AAp?$AAe?$AAd?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe@|
  00a28		 |$LN69@ReadDataIN|
  00a28	00000000	 DCD         |??_C@_1EE@CEMNINPE@?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAM?$AAa?$AAp?$AAp?$AAe?$AAd?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$AN@|
  00a2c		 |$LN70@ReadDataIN|
  00a2c	00000000	 DCD         |??_C@_1IA@MKFKEMJG@?$AAD?$AAM?$AAA?$AA?5?$AAI?$AAN?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ@|
  00a30		 |$LN71@ReadDataIN|
  00a30	00000000	 DCD         |??_C@_1EO@FDEEAPGH@?$AAD?$AAM?$AAA?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?0?$AA?5?$AAu?$AAs?$AAe?$AA?5?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAt?$AAo?$AA?5@|
  00a34		 |$LN72@ReadDataIN|
  00a34	00000000	 DCD         |??_C@_1CO@BFANEFNO@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAc?$AAh?$AAe?$AAc?$AAk?$AAR?$AAx?$AAC?$AAS?$AAR?$AA?$AN?$AA?6?$AA?$AA@|
  00a38		 |$LN73@ReadDataIN|
  00a38	00000000	 DCD         |??_C@_1HG@GIGLDPPB@?$AAR?$AAe?$AAa?$AAd?$AAD?$AAa?$AAt?$AAa?$AAI?$AAN?$AA?3?$AA?5?$AAT?$AAo?$AAt?$AAa?$AAl?$AA?$DN?$AA?$CF?$AAd?$AA?0?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$DN?$AA?$CF?$AAd?$AA?0?$AA?5@|
  00a3c		 |$LN74@ReadDataIN|
  00a3c	00000000	 DCD         |??_C@_1EA@GOJAPAOC@?$AAT?$AAo?$AAt?$AAa?$AAl?$AA?$DN?$AA?$CF?$AAd?$AA?0?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$DN?$AA?$CF?$AAd?$AA?0?$AA?5?$AAR?$AAe?$AAm?$AAa?$AAi?$AAn?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00a40		 |$LN75@ReadDataIN|
  00a40	00000000	 DCD         |??_C@_1EI@KKHPNNGM@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAR?$AAe?$AAa?$AAd?$AAD?$AAa?$AAt?$AAa?$AAI?$AAN?$AA?3?$AA?5?$AAG?$AAe?$AAt?$AA?5?$AAp?$AAO?$AAT?$AAG?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe@|
  00a44		 |$LN76@ReadDataIN|
  00a44	00000000	 DCD         |??_C@_1HG@OCPMDGNB@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAR?$AAe?$AAa?$AAd?$AAD?$AAa?$AAt?$AAa?$AAI?$AAN?$AA?5?$AA?9?$AA?$DO?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5@|
  00a48		 |$M42581|

			 ENDP  ; |?ReadDataIN@CQTD@@QAAKPAK@Z|, CQTD::ReadDataIN

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.h

  00000			 AREA	 |.pdata|, PDATA
|$T42604| DCD	|$LN5@SetStatus|
	DCD	0x40000903
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetStatus@CQTD@@QAAXK@Z| PROC	; CQTD::SetStatus

; 85   :     void SetStatus(DWORD status) { m_dwStatus = status;};

  00000		 |$LN5@SetStatus|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42601|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2832028	 add         r2, r3, #0x28
  00014	e59d300c	 ldr         r3, [sp, #0xC]
  00018	e5823000	 str         r3, [r2]
  0001c	e89d6000	 ldmia       sp, {sp, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$M42602|

			 ENDP  ; |?SetStatus@CQTD@@QAAXK@Z|, CQTD::SetStatus


  00000			 AREA	 |.pdata|, PDATA
|$T42611| DCD	|$LN5@SetTotTfrS|
	DCD	0x40000903
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetTotTfrSize@CQTD@@QAAXK@Z| PROC	; CQTD::SetTotTfrSize

; 86   :     void SetTotTfrSize(DWORD size) { m_cbTransferred = size;};

  00000		 |$LN5@SetTotTfrS|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42608|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e283201c	 add         r2, r3, #0x1C
  00014	e59d300c	 ldr         r3, [sp, #0xC]
  00018	e5823000	 str         r3, [r2]
  0001c	e89d6000	 ldmia       sp, {sp, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$M42609|

			 ENDP  ; |?SetTotTfrSize@CQTD@@QAAXK@Z|, CQTD::SetTotTfrSize


  00000			 AREA	 |.pdata|, PDATA
|$T42618| DCD	|$LN5@SetCurTfrS|
	DCD	0x40000903
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetCurTfrSize@CQTD@@QAAXK@Z| PROC	; CQTD::SetCurTfrSize

; 87   :     void SetCurTfrSize(DWORD size) { m_cbCurTransferred = size;};

  00000		 |$LN5@SetCurTfrS|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42615|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2832020	 add         r2, r3, #0x20
  00014	e59d300c	 ldr         r3, [sp, #0xC]
  00018	e5823000	 str         r3, [r2]
  0001c	e89d6000	 ldmia       sp, {sp, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$M42616|

			 ENDP  ; |?SetCurTfrSize@CQTD@@QAAXK@Z|, CQTD::SetCurTfrSize


  00000			 AREA	 |.pdata|, PDATA
|$T42626| DCD	|$LN5@GetStatus|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetStatus@CQTD@@QAAKXZ| PROC		; CQTD::GetStatus

; 90   :     DWORD GetStatus() { return m_dwStatus; };

  00000		 |$LN5@GetStatus|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42623|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833028	 add         r3, r3, #0x28
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M42624|

			 ENDP  ; |?GetStatus@CQTD@@QAAKXZ|, CQTD::GetStatus


  00000			 AREA	 |.pdata|, PDATA
|$T42634| DCD	|$LN5@GetDataSiz|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDataSize@CQTD@@QAAKXZ| PROC	; CQTD::GetDataSize

; 93   :     DWORD GetDataSize() { return m_cbData; };

  00000		 |$LN5@GetDataSiz|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42631|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833018	 add         r3, r3, #0x18
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M42632|

			 ENDP  ; |?GetDataSize@CQTD@@QAAKXZ|, CQTD::GetDataSize


  00000			 AREA	 |.pdata|, PDATA
|$T42642| DCD	|$LN5@GetPAData|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPAData@CQTD@@QAAKXZ| PROC		; CQTD::GetPAData

; 94   :     DWORD GetPAData() { return m_dwPAData; };

  00000		 |$LN5@GetPAData|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42639|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833010	 add         r3, r3, #0x10
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M42640|

			 ENDP  ; |?GetPAData@CQTD@@QAAKXZ|, CQTD::GetPAData


  00000			 AREA	 |.pdata|, PDATA
|$T42650| DCD	|$LN5@GetVAData|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetVAData@CQTD@@QAAKXZ| PROC		; CQTD::GetVAData

; 95   :     DWORD GetVAData() { return m_dwVAData; };

  00000		 |$LN5@GetVAData|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42647|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833014	 add         r3, r3, #0x14
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M42648|

			 ENDP  ; |?GetVAData@CQTD@@QAAKXZ|, CQTD::GetVAData


  00000			 AREA	 |.pdata|, PDATA
|$T42658| DCD	|$LN5@GetTotTfrS|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetTotTfrSize@CQTD@@QAAKXZ| PROC	; CQTD::GetTotTfrSize

; 96   :     DWORD GetTotTfrSize() { return m_cbTransferred; };

  00000		 |$LN5@GetTotTfrS|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42655|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e283301c	 add         r3, r3, #0x1C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M42656|

			 ENDP  ; |?GetTotTfrSize@CQTD@@QAAKXZ|, CQTD::GetTotTfrSize


  00000			 AREA	 |.pdata|, PDATA
|$T42666| DCD	|$LN5@GetCurTfrS|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetCurTfrSize@CQTD@@QAAKXZ| PROC	; CQTD::GetCurTfrSize

; 97   :     DWORD GetCurTfrSize() { return m_cbCurTransferred;};

  00000		 |$LN5@GetCurTfrS|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42663|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833020	 add         r3, r3, #0x20
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M42664|

			 ENDP  ; |?GetCurTfrSize@CQTD@@QAAKXZ|, CQTD::GetCurTfrSize


  00000			 AREA	 |.pdata|, PDATA
|$T42674| DCD	|$LN5@GetPacketS|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPacketSize@CQTD@@QAAKXZ| PROC	; CQTD::GetPacketSize

; 98   :     DWORD GetPacketSize() { return m_dwPacketSize;};    

  00000		 |$LN5@GetPacketS|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42671|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e283302c	 add         r3, r3, #0x2C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M42672|

			 ENDP  ; |?GetPacketSize@CQTD@@QAAKXZ|, CQTD::GetPacketSize


  00000			 AREA	 |.pdata|, PDATA
|$T42682| DCD	|$LN5@GetPipe|
	DCD	0x40000b04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPipe@CQH@@QAAPAVCPipe@@XZ| PROC	; CQH::GetPipe

; 156  :     CPipe *GetPipe() { return m_pPipe;};

  00000		 |$LN5@GetPipe|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42679|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e5933000	 ldr         r3, [r3]
  00018	e58d3000	 str         r3, [sp]
  0001c	e59d0000	 ldr         r0, [sp]
  00020	e28dd004	 add         sp, sp, #4
  00024	e89d6000	 ldmia       sp, {sp, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M42680|

			 ENDP  ; |?GetPipe@CQH@@QAAPAVCPipe@@XZ|, CQH::GetPipe

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.h

  00000			 AREA	 |.pdata|, PDATA
|$T42690| DCD	|$LN5@GetMappedE|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetMappedEndPoint@CPipe@@QAAEXZ| PROC ; CPipe::GetMappedEndPoint

; 103  :     UCHAR   GetMappedEndPoint(void) { return m_mappedEndpoint; };

  00000		 |$LN5@GetMappedE|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42687|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833058	 add         r3, r3, #0x58
  00018	e5d33000	 ldrb        r3, [r3]
  0001c	e5cd3000	 strb        r3, [sp]
  00020	e5dd0000	 ldrb        r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M42688|

			 ENDP  ; |?GetMappedEndPoint@CPipe@@QAAEXZ|, CPipe::GetMappedEndPoint


  00000			 AREA	 |.pdata|, PDATA
|$T42698| DCD	|$LN5@GetTransfe|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetTransferMode@CPipe@@QAAEXZ| PROC	; CPipe::GetTransferMode

; 110  :     UCHAR   GetTransferMode(void) { return m_ucTransferMode;};

  00000		 |$LN5@GetTransfe|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42695|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833014	 add         r3, r3, #0x14
  00018	e5d33000	 ldrb        r3, [r3]
  0001c	e5cd3000	 strb        r3, [sp]
  00020	e5dd0000	 ldrb        r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M42696|

			 ENDP  ; |?GetTransferMode@CPipe@@QAAEXZ|, CPipe::GetTransferMode

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\usb2com\hcd.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T42706| DCD	|$LN5@GetOTGCont|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetOTGContext@CHcd@@QAAPAXXZ| PROC	; CHcd::GetOTGContext

; 121  :     PVOID   GetOTGContext() { return m_pOTG;};

  00000		 |$LN5@GetOTGCont|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42703|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e28330b4	 add         r3, r3, #0xB4
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M42704|

			 ENDP  ; |?GetOTGContext@CHcd@@QAAPAXXZ|, CHcd::GetOTGContext

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\chw.h

  00000			 AREA	 |.pdata|, PDATA
|$T42713| DCD	|$LN5@SetRxDataA|
	DCD	0x40001403
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetRxDataAvail@CHW@@QAAXE@Z| PROC	; CHW::SetRxDataAvail

; 387  :     void SetRxDataAvail(UCHAR endpoint) { m_intr_rx_avail |= (1<<endpoint);};

  00000		 |$LN5@SetRxDataA|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42710|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2833c02	 add         r3, r3, #2, 24
  00014	e2831082	 add         r1, r3, #0x82
  00018	e5dd300c	 ldrb        r3, [sp, #0xC]
  0001c	e1a02003	 mov         r2, r3
  00020	e3a03001	 mov         r3, #1
  00024	e1a02213	 mov         r2, r3, lsl r2
  00028	e1d130b0	 ldrh        r3, [r1]
  0002c	e1831002	 orr         r1, r3, r2
  00030	e59d3008	 ldr         r3, [sp, #8]
  00034	e2833c02	 add         r3, r3, #2, 24
  00038	e2832082	 add         r2, r3, #0x82
  0003c	e1a03801	 mov         r3, r1, lsl #16
  00040	e1a03823	 mov         r3, r3, lsr #16
  00044	e1c230b0	 strh        r3, [r2]
  00048	e89d6000	 ldmia       sp, {sp, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M42711|

			 ENDP  ; |?SetRxDataAvail@CHW@@QAAXE@Z|, CHW::SetRxDataAvail


  00000			 AREA	 |.pdata|, PDATA
|$T42723| DCD	|$LN7@GetRxDataA|
	DCD	0x40001a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetRxDataAvail@CHW@@QAAHE@Z| PROC	; CHW::GetRxDataAvail

; 388  :     BOOL GetRxDataAvail(UCHAR endpoint) { return ((m_intr_rx_avail & (1<<endpoint))? TRUE: FALSE);};

  00000		 |$LN7@GetRxDataA|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42720|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e2833c02	 add         r3, r3, #2, 24
  00018	e2833082	 add         r3, r3, #0x82
  0001c	e1d330b0	 ldrh        r3, [r3]
  00020	e1a01003	 mov         r1, r3
  00024	e5dd3014	 ldrb        r3, [sp, #0x14]
  00028	e1a02003	 mov         r2, r3
  0002c	e3a03001	 mov         r3, #1
  00030	e1a03213	 mov         r3, r3, lsl r2
  00034	e1110003	 tst         r1, r3
  00038	0a000002	 beq         |$LN3@GetRxDataA|
  0003c	e3a03001	 mov         r3, #1
  00040	e58d3004	 str         r3, [sp, #4]
  00044	ea000001	 b           |$LN4@GetRxDataA|
  00048		 |$LN3@GetRxDataA|
  00048	e3a03000	 mov         r3, #0
  0004c	e58d3004	 str         r3, [sp, #4]
  00050		 |$LN4@GetRxDataA|
  00050	e59d3004	 ldr         r3, [sp, #4]
  00054	e58d3000	 str         r3, [sp]
  00058	e59d0000	 ldr         r0, [sp]
  0005c	e28dd008	 add         sp, sp, #8
  00060	e89d6000	 ldmia       sp, {sp, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$M42721|

			 ENDP  ; |?GetRxDataAvail@CHW@@QAAHE@Z|, CHW::GetRxDataAvail

	EXPORT	|??_C@_1CG@ECGFKEKE@?$AAR?$AAx?$AAC?$AAS?$AAR?$AA?$FL?$AA?$CF?$AAd?$AA?$FN?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@OHNAJJEG@?$AAC?$AAl?$AAe?$AAa?$AAr?$AAR?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?5?$AAb?$AAi?$AAt?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAe?$AAp?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@FIKDIPMK@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAC?$AAl?$AAe?$AAa?$AAr?$AAR?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?3?$AA?5?$AAG?$AAe?$AAt?$AA?5?$AAp?$AAO?$AAT?$AAG?$AA?5?$AAf?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@EEJMOJLC@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAC?$AAl?$AAe?$AAa?$AAr?$AAR?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?5?$AA?9?$AA?$DO?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAa?$AAb?$AAl?$AAe?$AA?5@| [ DATA ] ; `string'
	IMPORT	|LeaveCriticalSection|
	IMPORT	|EnterCriticalSection|

  00010			 AREA	 |.pdata|, PDATA
|$T42738| DCD	|$LN17@ClearRxPkt|
	DCD	0x4000d404
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@ECGFKEKE@?$AAR?$AAx?$AAC?$AAS?$AAR?$AA?$FL?$AA?$CF?$AAd?$AA?$FN?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "x", 0x0, "C", 0x0, "S", 0x0, "R", 0x0, "[", 0x0, "%"
	DCB	0x0, "d", 0x0, "]", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@OHNAJJEG@?$AAC?$AAl?$AAe?$AAa?$AAr?$AAR?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?5?$AAb?$AAi?$AAt?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAe?$AAp?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "l", 0x0, "e", 0x0, "a", 0x0, "r", 0x0, "R", 0x0, "x"
	DCB	0x0, "P", 0x0, "k", 0x0, "t", 0x0, "R", 0x0, "d", 0x0, "y"
	DCB	0x0, " ", 0x0, "b", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "f"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "e", 0x0, "p", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@FIKDIPMK@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAC?$AAl?$AAe?$AAa?$AAr?$AAR?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?3?$AA?5?$AAG?$AAe?$AAt?$AA?5?$AAp?$AAO?$AAT?$AAG?$AA?5?$AAf?$AAa@| DCB "C"
	DCB	0x0, "Q", 0x0, "T", 0x0, "D", 0x0, ":", 0x0, ":", 0x0, "C"
	DCB	0x0, "l", 0x0, "e", 0x0, "a", 0x0, "r", 0x0, "R", 0x0, "x"
	DCB	0x0, "P", 0x0, "k", 0x0, "t", 0x0, "R", 0x0, "d", 0x0, "y"
	DCB	0x0, ":", 0x0, " ", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, " "
	DCB	0x0, "p", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@EEJMOJLC@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAC?$AAl?$AAe?$AAa?$AAr?$AAR?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?5?$AA?9?$AA?$DO?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAa?$AAb?$AAl?$AAe?$AA?5@| DCB "C"
	DCB	0x0, "Q", 0x0, "T", 0x0, "D", 0x0, ":", 0x0, ":", 0x0, "C"
	DCB	0x0, "l", 0x0, "e", 0x0, "a", 0x0, "r", 0x0, "R", 0x0, "x"
	DCB	0x0, "P", 0x0, "k", 0x0, "t", 0x0, "R", 0x0, "d", 0x0, "y"
	DCB	0x0, " ", 0x0, "-", 0x0, ">", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "t", 0x0, " ", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "e"
	DCB	0x0, " ", 0x0, "a", 0x0, "s", 0x0, "s", 0x0, "o", 0x0, "c"
	DCB	0x0, "i", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "p", 0x0, "i", 0x0, "p", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00a48			 AREA	 |.text|, CODE, ARM

  00a48		 |?ClearRxPktRdy@CQTD@@QAAXXZ| PROC	; CQTD::ClearRxPktRdy

; 241  : {

  00a48		 |$LN17@ClearRxPkt|
  00a48	e1a0c00d	 mov         r12, sp
  00a4c	e92d0001	 stmdb       sp!, {r0}
  00a50	e92d5000	 stmdb       sp!, {r12, lr}
  00a54	e24dd028	 sub         sp, sp, #0x28
  00a58		 |$M42735|

; 242  :     PHSMUSB_T pOTG;
; 243  :     UCHAR endpoint;
; 244  :     UCHAR csrIndex;
; 245  :     CPipe *pPipe = m_pQh->GetPipe();        

  00a58	e59d3030	 ldr         r3, [sp, #0x30]
  00a5c	e2833004	 add         r3, r3, #4
  00a60	e5930000	 ldr         r0, [r3]
  00a64	eb000000	 bl          |?GetPipe@CQH@@QAAPAVCPipe@@XZ|
  00a68	e58d000c	 str         r0, [sp, #0xC]
  00a6c	e59d300c	 ldr         r3, [sp, #0xC]
  00a70	e58d3000	 str         r3, [sp]

; 246  :     if (!pPipe)

  00a74	e59d3000	 ldr         r3, [sp]
  00a78	e3530000	 cmp         r3, #0
  00a7c	1a00000b	 bne         |$LN4@ClearRxPkt|

; 247  :     {
; 248  :         DEBUGMSG(ZONE_ERROR, (TEXT("CQTD::ClearRxPktRdy -> not able to read the associated pipe\r\n")));

  00a80	e59f3300	 ldr         r3, [pc, #0x300]
  00a84	e5933440	 ldr         r3, [r3, #0x440]
  00a88	e3130901	 tst         r3, #1, 18
  00a8c	0a000004	 beq         |$LN7@ClearRxPkt|
  00a90	e59f02fc	 ldr         r0, [pc, #0x2FC]
  00a94	eb000000	 bl          NKDbgPrintfW
  00a98	e3a03001	 mov         r3, #1
  00a9c	e58d3010	 str         r3, [sp, #0x10]
  00aa0	ea000001	 b           |$LN8@ClearRxPkt|
  00aa4		 |$LN7@ClearRxPkt|
  00aa4	e3a03000	 mov         r3, #0
  00aa8	e58d3010	 str         r3, [sp, #0x10]
  00aac		 |$LN8@ClearRxPkt|

; 249  :         return;

  00aac	ea0000b1	 b           |$LN5@ClearRxPkt|
  00ab0		 |$LN4@ClearRxPkt|

; 250  :     }
; 251  :     pOTG = (PHSMUSB_T)pPipe->m_pCMhcd->GetOTGContext();

  00ab0	e59d3000	 ldr         r3, [sp]
  00ab4	e283300c	 add         r3, r3, #0xC
  00ab8	e5930000	 ldr         r0, [r3]
  00abc	eb000000	 bl          |?GetOTGContext@CHcd@@QAAPAXXZ|
  00ac0	e58d0014	 str         r0, [sp, #0x14]
  00ac4	e59d3014	 ldr         r3, [sp, #0x14]
  00ac8	e58d3008	 str         r3, [sp, #8]

; 252  :     if (pOTG == NULL)

  00acc	e59d3008	 ldr         r3, [sp, #8]
  00ad0	e3530000	 cmp         r3, #0
  00ad4	1a00000b	 bne         |$LN3@ClearRxPkt|

; 253  :     {
; 254  :         DEBUGMSG(ZONE_ERROR, (TEXT("CQTD::ClearRxPktRdy: Get pOTG failed\r\n")));        

  00ad8	e59f32a8	 ldr         r3, [pc, #0x2A8]
  00adc	e5933440	 ldr         r3, [r3, #0x440]
  00ae0	e3130901	 tst         r3, #1, 18
  00ae4	0a000004	 beq         |$LN9@ClearRxPkt|
  00ae8	e59f02a0	 ldr         r0, [pc, #0x2A0]
  00aec	eb000000	 bl          NKDbgPrintfW
  00af0	e3a03001	 mov         r3, #1
  00af4	e58d3018	 str         r3, [sp, #0x18]
  00af8	ea000001	 b           |$LN10@ClearRxPkt|
  00afc		 |$LN9@ClearRxPkt|
  00afc	e3a03000	 mov         r3, #0
  00b00	e58d3018	 str         r3, [sp, #0x18]
  00b04		 |$LN10@ClearRxPkt|

; 255  :         return;

  00b04	ea00009b	 b           |$LN5@ClearRxPkt|
  00b08		 |$LN3@ClearRxPkt|

; 256  :     }
; 257  : 
; 258  :     endpoint = pPipe->GetMappedEndPoint();

  00b08	e59d0000	 ldr         r0, [sp]
  00b0c	eb000000	 bl          |?GetMappedEndPoint@CPipe@@QAAEXZ|
  00b10	e5cd001c	 strb        r0, [sp, #0x1C]
  00b14	e5dd301c	 ldrb        r3, [sp, #0x1C]
  00b18	e5cd3004	 strb        r3, [sp, #4]

; 259  :     // Set Index Register
; 260  :     EnterCriticalSection(&pOTG->regCS);    

  00b1c	e59d3008	 ldr         r3, [sp, #8]
  00b20	e2830038	 add         r0, r3, #0x38
  00b24	eb000000	 bl          EnterCriticalSection

; 261  :     OUTREG8(&pOTG->pUsbGenRegs->Index, INDEX(endpoint));

  00b28	e5dd3004	 ldrb        r3, [sp, #4]
  00b2c	e203300f	 and         r3, r3, #0xF
  00b30	e20320ff	 and         r2, r3, #0xFF
  00b34	e59d3008	 ldr         r3, [sp, #8]
  00b38	e2833020	 add         r3, r3, #0x20
  00b3c	e5933000	 ldr         r3, [r3]
  00b40	e283300e	 add         r3, r3, #0xE
  00b44	e5c32000	 strb        r2, [r3]

; 262  :     csrIndex = INDEX(endpoint);

  00b48	e5dd3004	 ldrb        r3, [sp, #4]
  00b4c	e203300f	 and         r3, r3, #0xF
  00b50	e20330ff	 and         r3, r3, #0xFF
  00b54	e5cd3005	 strb        r3, [sp, #5]

; 263  :     
; 264  :     if (endpoint == 0) // Endpoint 0 handling

  00b58	e5dd3004	 ldrb        r3, [sp, #4]
  00b5c	e3530000	 cmp         r3, #0
  00b60	1a000017	 bne         |$LN2@ClearRxPkt|

; 265  :     {
; 266  :         CLRREG16(&pOTG->pUsbCsrRegs->ep[0].CSR.CSR0, CSR0_H_RxPktRdy|CSR0_H_StatusPkt|CSR0_H_SetupPkt|CSR0_H_ReqPkt);        

  00b64	e59d3008	 ldr         r3, [sp, #8]
  00b68	e283301c	 add         r3, r3, #0x1C
  00b6c	e5933000	 ldr         r3, [r3]
  00b70	e2831002	 add         r1, r3, #2
  00b74	e5d13001	 ldrb        r3, [r1, #1]
  00b78	e1a03403	 mov         r3, r3, lsl #8
  00b7c	e1a02803	 mov         r2, r3, lsl #16
  00b80	e1a02822	 mov         r2, r2, lsr #16
  00b84	e5d13000	 ldrb        r3, [r1]
  00b88	e1833002	 orr         r3, r3, r2
  00b8c	e1a02003	 mov         r2, r3
  00b90	e3e03069	 mvn         r3, #0x69
  00b94	e0023003	 and         r3, r2, r3
  00b98	e1a01803	 mov         r1, r3, lsl #16
  00b9c	e1a01821	 mov         r1, r1, lsr #16
  00ba0	e59d3008	 ldr         r3, [sp, #8]
  00ba4	e283301c	 add         r3, r3, #0x1C
  00ba8	e5933000	 ldr         r3, [r3]
  00bac	e2832002	 add         r2, r3, #2
  00bb0	e1a03001	 mov         r3, r1
  00bb4	e5c23000	 strb        r3, [r2]
  00bb8	e1a03423	 mov         r3, r3, lsr #8
  00bbc	e5c23001	 strb        r3, [r2, #1]

; 267  :     }
; 268  :     else

  00bc0	ea000069	 b           |$LN1@ClearRxPkt|
  00bc4		 |$LN2@ClearRxPkt|

; 269  :     {
; 270  :         DEBUGMSG(ZONE_HCD, (TEXT("ClearRxPktRdy bit for ep %d\r\n"), USB_ENDPOINT(endpoint)));

  00bc4	e59f31bc	 ldr         r3, [pc, #0x1BC]
  00bc8	e5933440	 ldr         r3, [r3, #0x440]
  00bcc	e3130001	 tst         r3, #1
  00bd0	0a000006	 beq         |$LN11@ClearRxPkt|
  00bd4	e5dd3004	 ldrb        r3, [sp, #4]
  00bd8	e203100f	 and         r1, r3, #0xF
  00bdc	e59f01a8	 ldr         r0, [pc, #0x1A8]
  00be0	eb000000	 bl          NKDbgPrintfW
  00be4	e3a03001	 mov         r3, #1
  00be8	e58d3020	 str         r3, [sp, #0x20]
  00bec	ea000001	 b           |$LN12@ClearRxPkt|
  00bf0		 |$LN11@ClearRxPkt|
  00bf0	e3a03000	 mov         r3, #0
  00bf4	e58d3020	 str         r3, [sp, #0x20]
  00bf8		 |$LN12@ClearRxPkt|

; 271  :         SETREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].RxCSR, RXCSR_H_FlushFIFO);

  00bf8	e59d3008	 ldr         r3, [sp, #8]
  00bfc	e283001c	 add         r0, r3, #0x1C
  00c00	e5dd3005	 ldrb        r3, [sp, #5]
  00c04	e1a01003	 mov         r1, r3
  00c08	e3a03010	 mov         r3, #0x10
  00c0c	e0020391	 mul         r2, r1, r3
  00c10	e5903000	 ldr         r3, [r0]
  00c14	e0833002	 add         r3, r3, r2
  00c18	e2831006	 add         r1, r3, #6
  00c1c	e5d13001	 ldrb        r3, [r1, #1]
  00c20	e1a03403	 mov         r3, r3, lsl #8
  00c24	e1a02803	 mov         r2, r3, lsl #16
  00c28	e1a02822	 mov         r2, r2, lsr #16
  00c2c	e5d13000	 ldrb        r3, [r1]
  00c30	e1833002	 orr         r3, r3, r2
  00c34	e3833010	 orr         r3, r3, #0x10
  00c38	e1a0e803	 mov         lr, r3, lsl #16
  00c3c	e1a0e82e	 mov         lr, lr, lsr #16
  00c40	e59d3008	 ldr         r3, [sp, #8]
  00c44	e283001c	 add         r0, r3, #0x1C
  00c48	e5dd3005	 ldrb        r3, [sp, #5]
  00c4c	e1a01003	 mov         r1, r3
  00c50	e3a03010	 mov         r3, #0x10
  00c54	e0020391	 mul         r2, r1, r3
  00c58	e5903000	 ldr         r3, [r0]
  00c5c	e0833002	 add         r3, r3, r2
  00c60	e2832006	 add         r2, r3, #6
  00c64	e1a0300e	 mov         r3, lr
  00c68	e5c23000	 strb        r3, [r2]
  00c6c	e1a03423	 mov         r3, r3, lsr #8
  00c70	e5c23001	 strb        r3, [r2, #1]

; 272  :         CLRREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].RxCSR, RXCSR_H_RxPktRdy); 

  00c74	e59d3008	 ldr         r3, [sp, #8]
  00c78	e283001c	 add         r0, r3, #0x1C
  00c7c	e5dd3005	 ldrb        r3, [sp, #5]
  00c80	e1a01003	 mov         r1, r3
  00c84	e3a03010	 mov         r3, #0x10
  00c88	e0020391	 mul         r2, r1, r3
  00c8c	e5903000	 ldr         r3, [r0]
  00c90	e0833002	 add         r3, r3, r2
  00c94	e2831006	 add         r1, r3, #6
  00c98	e5d13001	 ldrb        r3, [r1, #1]
  00c9c	e1a03403	 mov         r3, r3, lsl #8
  00ca0	e1a02803	 mov         r2, r3, lsl #16
  00ca4	e1a02822	 mov         r2, r2, lsr #16
  00ca8	e5d13000	 ldrb        r3, [r1]
  00cac	e1833002	 orr         r3, r3, r2
  00cb0	e1a02003	 mov         r2, r3
  00cb4	e3e03001	 mvn         r3, #1
  00cb8	e0023003	 and         r3, r2, r3
  00cbc	e1a0e803	 mov         lr, r3, lsl #16
  00cc0	e1a0e82e	 mov         lr, lr, lsr #16
  00cc4	e59d3008	 ldr         r3, [sp, #8]
  00cc8	e283001c	 add         r0, r3, #0x1C
  00ccc	e5dd3005	 ldrb        r3, [sp, #5]
  00cd0	e1a01003	 mov         r1, r3
  00cd4	e3a03010	 mov         r3, #0x10
  00cd8	e0020391	 mul         r2, r1, r3
  00cdc	e5903000	 ldr         r3, [r0]
  00ce0	e0833002	 add         r3, r3, r2
  00ce4	e2832006	 add         r2, r3, #6
  00ce8	e1a0300e	 mov         r3, lr
  00cec	e5c23000	 strb        r3, [r2]
  00cf0	e1a03423	 mov         r3, r3, lsr #8
  00cf4	e5c23001	 strb        r3, [r2, #1]

; 273  :         DEBUGMSG(ZONE_HCD|0, (TEXT("RxCSR[%d] = 0x%x\r\n"), csrIndex, INREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].RxCSR)));

  00cf8	e59f3088	 ldr         r3, [pc, #0x88]
  00cfc	e5933440	 ldr         r3, [r3, #0x440]
  00d00	e3130001	 tst         r3, #1
  00d04	0a000016	 beq         |$LN13@ClearRxPkt|
  00d08	e59d3008	 ldr         r3, [sp, #8]
  00d0c	e283001c	 add         r0, r3, #0x1C
  00d10	e5dd3005	 ldrb        r3, [sp, #5]
  00d14	e1a01003	 mov         r1, r3
  00d18	e3a03010	 mov         r3, #0x10
  00d1c	e0020391	 mul         r2, r1, r3
  00d20	e5903000	 ldr         r3, [r0]
  00d24	e0833002	 add         r3, r3, r2
  00d28	e2831006	 add         r1, r3, #6
  00d2c	e5d13001	 ldrb        r3, [r1, #1]
  00d30	e1a03403	 mov         r3, r3, lsl #8
  00d34	e1a02803	 mov         r2, r3, lsl #16
  00d38	e1a02822	 mov         r2, r2, lsr #16
  00d3c	e5d13000	 ldrb        r3, [r1]
  00d40	e1833002	 orr         r3, r3, r2
  00d44	e1a02003	 mov         r2, r3
  00d48	e5dd3005	 ldrb        r3, [sp, #5]
  00d4c	e1a01003	 mov         r1, r3
  00d50	e59f002c	 ldr         r0, [pc, #0x2C]
  00d54	eb000000	 bl          NKDbgPrintfW
  00d58	e3a03001	 mov         r3, #1
  00d5c	e58d3024	 str         r3, [sp, #0x24]
  00d60	ea000001	 b           |$LN14@ClearRxPkt|
  00d64		 |$LN13@ClearRxPkt|
  00d64	e3a03000	 mov         r3, #0
  00d68	e58d3024	 str         r3, [sp, #0x24]
  00d6c		 |$LN14@ClearRxPkt|
  00d6c		 |$LN1@ClearRxPkt|

; 274  :     }    
; 275  :     LeaveCriticalSection(&pOTG->regCS);

  00d6c	e59d3008	 ldr         r3, [sp, #8]
  00d70	e2830038	 add         r0, r3, #0x38
  00d74	eb000000	 bl          LeaveCriticalSection
  00d78		 |$LN5@ClearRxPkt|

; 276  :     return;
; 277  : }

  00d78	e28dd028	 add         sp, sp, #0x28
  00d7c	e89d6000	 ldmia       sp, {sp, lr}
  00d80	e12fff1e	 bx          lr
  00d84		 |$LN18@ClearRxPkt|
  00d84		 |$LN19@ClearRxPkt|
  00d84	00000000	 DCD         |??_C@_1CG@ECGFKEKE@?$AAR?$AAx?$AAC?$AAS?$AAR?$AA?$FL?$AA?$CF?$AAd?$AA?$FN?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00d88		 |$LN20@ClearRxPkt|
  00d88	00000000	 DCD         |dpCurSettings|
  00d8c		 |$LN21@ClearRxPkt|
  00d8c	00000000	 DCD         |??_C@_1DM@OHNAJJEG@?$AAC?$AAl?$AAe?$AAa?$AAr?$AAR?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?5?$AAb?$AAi?$AAt?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAe?$AAp?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00d90		 |$LN22@ClearRxPkt|
  00d90	00000000	 DCD         |??_C@_1EO@FIKDIPMK@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAC?$AAl?$AAe?$AAa?$AAr?$AAR?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?3?$AA?5?$AAG?$AAe?$AAt?$AA?5?$AAp?$AAO?$AAT?$AAG?$AA?5?$AAf?$AAa@|
  00d94		 |$LN23@ClearRxPkt|
  00d94	00000000	 DCD         |??_C@_1HM@EEJMOJLC@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAC?$AAl?$AAe?$AAa?$AAr?$AAR?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?5?$AA?9?$AA?$DO?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAa?$AAb?$AAl?$AAe?$AA?5@|
  00d98		 |$M42736|

			 ENDP  ; |?ClearRxPktRdy@CQTD@@QAAXXZ|, CQTD::ClearRxPktRdy

	EXPORT	|??_C@_1DO@KIADPAKK@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?5?$AAC?$AAr?$AAi?$AAt?$AAi?$AAc?$AAa?$AAl?$AAS?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAO?$AAU?$AAT?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@OPAHOGDF@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?3?$AA?3?$AAT?$AAX?$AAC?$AAS?$AAR?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@IKOEMBBO@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?3?$AA?3?$AAR?$AAX?$AAC?$AAS?$AAR?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@NKACFNMM@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?3?$AA?3?$AAC?$AAS?$AAR?$AA0?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@CECBLJCP@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?5?$AAC?$AAr?$AAi?$AAt?$AAi?$AAc?$AAa?$AAl?$AAS?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAI?$AAN?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?GetTDType@CQTD@@QAAKXZ|		; CQTD::GetTDType
	EXPORT	|?DumpReg@CQTD@@QAAXXZ|			; CQTD::DumpReg

  00018			 AREA	 |.pdata|, PDATA
|$T42763| DCD	|$LN25@DumpReg|
	DCD	0x4000a804

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@KIADPAKK@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?5?$AAC?$AAr?$AAi?$AAt?$AAi?$AAc?$AAa?$AAl?$AAS?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAO?$AAU?$AAT?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "u", 0x0, "m", 0x0, "p", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, " ", 0x0, "C", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "l", 0x0, "S", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "U", 0x0, "T", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@OPAHOGDF@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?3?$AA?3?$AAT?$AAX?$AAC?$AAS?$AAR?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0@| DCB "D"
	DCB	0x0, "u", 0x0, "m", 0x0, "p", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, ":", 0x0, ":", 0x0, "T", 0x0, "X", 0x0, "C", 0x0, "S"
	DCB	0x0, "R", 0x0, " ", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@IKOEMBBO@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?3?$AA?3?$AAR?$AAX?$AAC?$AAS?$AAR?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0@| DCB "D"
	DCB	0x0, "u", 0x0, "m", 0x0, "p", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, ":", 0x0, ":", 0x0, "R", 0x0, "X", 0x0, "C", 0x0, "S"
	DCB	0x0, "R", 0x0, " ", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@NKACFNMM@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?3?$AA?3?$AAC?$AAS?$AAR?$AA0?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "u", 0x0, "m", 0x0, "p", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "S", 0x0, "R", 0x0, "0"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@CECBLJCP@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?5?$AAC?$AAr?$AAi?$AAt?$AAi?$AAc?$AAa?$AAl?$AAS?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAI?$AAN?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "u", 0x0, "m", 0x0, "p", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, " ", 0x0, "C", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "l", 0x0, "S", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "N", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00d98			 AREA	 |.text|, CODE, ARM

  00d98		 |?DumpReg@CQTD@@QAAXXZ| PROC		; CQTD::DumpReg

; 286  : {

  00d98		 |$LN25@DumpReg|
  00d98	e1a0c00d	 mov         r12, sp
  00d9c	e92d0001	 stmdb       sp!, {r0}
  00da0	e92d5000	 stmdb       sp!, {r12, lr}
  00da4	e24dd03c	 sub         sp, sp, #0x3C
  00da8		 |$M42760|

; 287  :     PHSMUSB_T pOTG;
; 288  :     UCHAR endpoint;
; 289  :     UCHAR csrIndex;
; 290  :     DWORD dwType = GetTDType();        

  00da8	e59d0044	 ldr         r0, [sp, #0x44]
  00dac	eb000000	 bl          |?GetTDType@CQTD@@QAAKXZ|
  00db0	e58d0010	 str         r0, [sp, #0x10]
  00db4	e59d3010	 ldr         r3, [sp, #0x10]
  00db8	e58d3000	 str         r3, [sp]

; 291  :     CPipe *pPipe = m_pQh->GetPipe();        

  00dbc	e59d3044	 ldr         r3, [sp, #0x44]
  00dc0	e2833004	 add         r3, r3, #4
  00dc4	e5930000	 ldr         r0, [r3]
  00dc8	eb000000	 bl          |?GetPipe@CQH@@QAAPAVCPipe@@XZ|
  00dcc	e58d0014	 str         r0, [sp, #0x14]
  00dd0	e59d3014	 ldr         r3, [sp, #0x14]
  00dd4	e58d3004	 str         r3, [sp, #4]

; 292  :     if (!pPipe)

  00dd8	e59d3004	 ldr         r3, [sp, #4]
  00ddc	e3530000	 cmp         r3, #0
  00de0	1a000007	 bne         |$LN6@DumpReg|

; 293  :     {
; 294  :         RETAILMSG(1, (TEXT("CQTD::ClearRxPktRdy -> not able to read the associated pipe\r\n")));

  00de4	e59f0248	 ldr         r0, [pc, #0x248]
  00de8	eb000000	 bl          NKDbgPrintfW
  00dec	e3a03001	 mov         r3, #1
  00df0	e58d3018	 str         r3, [sp, #0x18]
  00df4	ea000001	 b           |$LN10@DumpReg|
  00df8	e3a03000	 mov         r3, #0
  00dfc	e58d3018	 str         r3, [sp, #0x18]
  00e00		 |$LN10@DumpReg|

; 295  :         return;

  00e00	ea000082	 b           |$LN7@DumpReg|
  00e04		 |$LN6@DumpReg|

; 296  :     }
; 297  :     pOTG = (PHSMUSB_T)pPipe->m_pCMhcd->GetOTGContext();

  00e04	e59d3004	 ldr         r3, [sp, #4]
  00e08	e283300c	 add         r3, r3, #0xC
  00e0c	e5930000	 ldr         r0, [r3]
  00e10	eb000000	 bl          |?GetOTGContext@CHcd@@QAAPAXXZ|
  00e14	e58d001c	 str         r0, [sp, #0x1C]
  00e18	e59d301c	 ldr         r3, [sp, #0x1C]
  00e1c	e58d300c	 str         r3, [sp, #0xC]

; 298  :     if (pOTG == NULL)

  00e20	e59d300c	 ldr         r3, [sp, #0xC]
  00e24	e3530000	 cmp         r3, #0
  00e28	1a000007	 bne         |$LN5@DumpReg|

; 299  :     {
; 300  :         RETAILMSG(1, (TEXT("CQTD::ClearRxPktRdy: Get pOTG failed\r\n")));        

  00e2c	e59f01fc	 ldr         r0, [pc, #0x1FC]
  00e30	eb000000	 bl          NKDbgPrintfW
  00e34	e3a03001	 mov         r3, #1
  00e38	e58d3020	 str         r3, [sp, #0x20]
  00e3c	ea000001	 b           |$LN12@DumpReg|
  00e40	e3a03000	 mov         r3, #0
  00e44	e58d3020	 str         r3, [sp, #0x20]
  00e48		 |$LN12@DumpReg|

; 301  :         return;

  00e48	ea000070	 b           |$LN7@DumpReg|
  00e4c		 |$LN5@DumpReg|

; 302  :     }
; 303  : 
; 304  :     endpoint = pPipe->GetMappedEndPoint();

  00e4c	e59d0004	 ldr         r0, [sp, #4]
  00e50	eb000000	 bl          |?GetMappedEndPoint@CPipe@@QAAEXZ|
  00e54	e5cd0024	 strb        r0, [sp, #0x24]
  00e58	e5dd3024	 ldrb        r3, [sp, #0x24]
  00e5c	e5cd3008	 strb        r3, [sp, #8]

; 305  :     // Set Index Register
; 306  :     EnterCriticalSection(&pOTG->regCS);

  00e60	e59d300c	 ldr         r3, [sp, #0xC]
  00e64	e2830038	 add         r0, r3, #0x38
  00e68	eb000000	 bl          EnterCriticalSection

; 307  :     RETAILMSG(1, (TEXT("DumpReg CriticalSection: IN\r\n")));

  00e6c	e59f01b8	 ldr         r0, [pc, #0x1B8]
  00e70	eb000000	 bl          NKDbgPrintfW
  00e74	e3a03001	 mov         r3, #1
  00e78	e58d3028	 str         r3, [sp, #0x28]
  00e7c	ea000001	 b           |$LN14@DumpReg|
  00e80	e3a03000	 mov         r3, #0
  00e84	e58d3028	 str         r3, [sp, #0x28]
  00e88		 |$LN14@DumpReg|

; 308  :     OUTREG8(&pOTG->pUsbGenRegs->Index, INDEX(endpoint));

  00e88	e5dd3008	 ldrb        r3, [sp, #8]
  00e8c	e203300f	 and         r3, r3, #0xF
  00e90	e20320ff	 and         r2, r3, #0xFF
  00e94	e59d300c	 ldr         r3, [sp, #0xC]
  00e98	e2833020	 add         r3, r3, #0x20
  00e9c	e5933000	 ldr         r3, [r3]
  00ea0	e283300e	 add         r3, r3, #0xE
  00ea4	e5c32000	 strb        r2, [r3]

; 309  :     csrIndex = INDEX(endpoint);

  00ea8	e5dd3008	 ldrb        r3, [sp, #8]
  00eac	e203300f	 and         r3, r3, #0xF
  00eb0	e20330ff	 and         r3, r3, #0xFF
  00eb4	e5cd3009	 strb        r3, [sp, #9]

; 310  :     if (USB_ENDPOINT(endpoint) == 0)

  00eb8	e5dd3008	 ldrb        r3, [sp, #8]
  00ebc	e313000f	 tst         r3, #0xF
  00ec0	1a000012	 bne         |$LN4@DumpReg|

; 311  :         RETAILMSG(1, (TEXT("DumpReg::CSR0 register = 0x%x\r\n"), INREG16(&pOTG->pUsbCsrRegs->ep[0].CSR.CSR0)));

  00ec4	e59d300c	 ldr         r3, [sp, #0xC]
  00ec8	e283301c	 add         r3, r3, #0x1C
  00ecc	e5933000	 ldr         r3, [r3]
  00ed0	e2831002	 add         r1, r3, #2
  00ed4	e5d13001	 ldrb        r3, [r1, #1]
  00ed8	e1a03403	 mov         r3, r3, lsl #8
  00edc	e1a02803	 mov         r2, r3, lsl #16
  00ee0	e1a02822	 mov         r2, r2, lsr #16
  00ee4	e5d13000	 ldrb        r3, [r1]
  00ee8	e1833002	 orr         r3, r3, r2
  00eec	e1a01003	 mov         r1, r3
  00ef0	e59f0130	 ldr         r0, [pc, #0x130]
  00ef4	eb000000	 bl          NKDbgPrintfW
  00ef8	e3a03001	 mov         r3, #1
  00efc	e58d302c	 str         r3, [sp, #0x2C]
  00f00	ea000001	 b           |$LN16@DumpReg|
  00f04	e3a03000	 mov         r3, #0
  00f08	e58d302c	 str         r3, [sp, #0x2C]
  00f0c		 |$LN16@DumpReg|

; 312  :     else {

  00f0c	ea000035	 b           |$LN3@DumpReg|
  00f10		 |$LN4@DumpReg|

; 313  :         if (dwType == TD_DATA_IN)

  00f10	e59d3000	 ldr         r3, [sp]
  00f14	e3530002	 cmp         r3, #2
  00f18	1a000019	 bne         |$LN2@DumpReg|

; 314  :         {
; 315  :             RETAILMSG(1, (TEXT("DumpReg::RXCSR (%d) register = 0x%x\r\n"), endpoint, 
; 316  :                 INREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].RxCSR)));  

  00f1c	e59d300c	 ldr         r3, [sp, #0xC]
  00f20	e283001c	 add         r0, r3, #0x1C
  00f24	e5dd3009	 ldrb        r3, [sp, #9]
  00f28	e1a01003	 mov         r1, r3
  00f2c	e3a03010	 mov         r3, #0x10
  00f30	e0020391	 mul         r2, r1, r3
  00f34	e5903000	 ldr         r3, [r0]
  00f38	e0833002	 add         r3, r3, r2
  00f3c	e2831006	 add         r1, r3, #6
  00f40	e5d13001	 ldrb        r3, [r1, #1]
  00f44	e1a03403	 mov         r3, r3, lsl #8
  00f48	e1a02803	 mov         r2, r3, lsl #16
  00f4c	e1a02822	 mov         r2, r2, lsr #16
  00f50	e5d13000	 ldrb        r3, [r1]
  00f54	e1833002	 orr         r3, r3, r2
  00f58	e1a02003	 mov         r2, r3
  00f5c	e5dd3008	 ldrb        r3, [sp, #8]
  00f60	e1a01003	 mov         r1, r3
  00f64	e59f00b8	 ldr         r0, [pc, #0xB8]
  00f68	eb000000	 bl          NKDbgPrintfW
  00f6c	e3a03001	 mov         r3, #1
  00f70	e58d3030	 str         r3, [sp, #0x30]
  00f74	ea000001	 b           |$LN18@DumpReg|
  00f78	e3a03000	 mov         r3, #0
  00f7c	e58d3030	 str         r3, [sp, #0x30]
  00f80		 |$LN18@DumpReg|

; 317  :         }
; 318  :         else

  00f80	ea000018	 b           |$LN1@DumpReg|
  00f84		 |$LN2@DumpReg|

; 319  :         {
; 320  :             RETAILMSG(1, (TEXT("DumpReg::TXCSR (%d) register = 0x%x\r\n"), endpoint, 
; 321  :                 INREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].CSR.TxCSR)));

  00f84	e59d300c	 ldr         r3, [sp, #0xC]
  00f88	e283001c	 add         r0, r3, #0x1C
  00f8c	e5dd3009	 ldrb        r3, [sp, #9]
  00f90	e1a01003	 mov         r1, r3
  00f94	e3a03010	 mov         r3, #0x10
  00f98	e0020391	 mul         r2, r1, r3
  00f9c	e5903000	 ldr         r3, [r0]
  00fa0	e0833002	 add         r3, r3, r2
  00fa4	e2831002	 add         r1, r3, #2
  00fa8	e5d13001	 ldrb        r3, [r1, #1]
  00fac	e1a03403	 mov         r3, r3, lsl #8
  00fb0	e1a02803	 mov         r2, r3, lsl #16
  00fb4	e1a02822	 mov         r2, r2, lsr #16
  00fb8	e5d13000	 ldrb        r3, [r1]
  00fbc	e1833002	 orr         r3, r3, r2
  00fc0	e1a02003	 mov         r2, r3
  00fc4	e5dd3008	 ldrb        r3, [sp, #8]
  00fc8	e1a01003	 mov         r1, r3
  00fcc	e59f004c	 ldr         r0, [pc, #0x4C]
  00fd0	eb000000	 bl          NKDbgPrintfW
  00fd4	e3a03001	 mov         r3, #1
  00fd8	e58d3034	 str         r3, [sp, #0x34]
  00fdc	ea000001	 b           |$LN20@DumpReg|
  00fe0	e3a03000	 mov         r3, #0
  00fe4	e58d3034	 str         r3, [sp, #0x34]
  00fe8		 |$LN20@DumpReg|
  00fe8		 |$LN1@DumpReg|
  00fe8		 |$LN3@DumpReg|

; 322  :         }
; 323  :     }
; 324  :     RETAILMSG(1, (TEXT("DumpReg CriticalSection: OUT\r\n")));

  00fe8	e59f002c	 ldr         r0, [pc, #0x2C]
  00fec	eb000000	 bl          NKDbgPrintfW
  00ff0	e3a03001	 mov         r3, #1
  00ff4	e58d3038	 str         r3, [sp, #0x38]
  00ff8	ea000001	 b           |$LN22@DumpReg|
  00ffc	e3a03000	 mov         r3, #0
  01000	e58d3038	 str         r3, [sp, #0x38]
  01004		 |$LN22@DumpReg|

; 325  :     LeaveCriticalSection(&pOTG->regCS);

  01004	e59d300c	 ldr         r3, [sp, #0xC]
  01008	e2830038	 add         r0, r3, #0x38
  0100c	eb000000	 bl          LeaveCriticalSection
  01010		 |$LN7@DumpReg|

; 326  : }

  01010	e28dd03c	 add         sp, sp, #0x3C
  01014	e89d6000	 ldmia       sp, {sp, lr}
  01018	e12fff1e	 bx          lr
  0101c		 |$LN26@DumpReg|
  0101c		 |$LN27@DumpReg|
  0101c	00000000	 DCD         |??_C@_1DO@KIADPAKK@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?5?$AAC?$AAr?$AAi?$AAt?$AAi?$AAc?$AAa?$AAl?$AAS?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAO?$AAU?$AAT?$AA?$AN?$AA?6?$AA?$AA@|
  01020		 |$LN28@DumpReg|
  01020	00000000	 DCD         |??_C@_1EM@OPAHOGDF@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?3?$AA?3?$AAT?$AAX?$AAC?$AAS?$AAR?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0@|
  01024		 |$LN29@DumpReg|
  01024	00000000	 DCD         |??_C@_1EM@IKOEMBBO@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?3?$AA?3?$AAR?$AAX?$AAC?$AAS?$AAR?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0@|
  01028		 |$LN30@DumpReg|
  01028	00000000	 DCD         |??_C@_1EA@NKACFNMM@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?3?$AA?3?$AAC?$AAS?$AAR?$AA0?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  0102c		 |$LN31@DumpReg|
  0102c	00000000	 DCD         |??_C@_1DM@CECBLJCP@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?5?$AAC?$AAr?$AAi?$AAt?$AAi?$AAc?$AAa?$AAl?$AAS?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAI?$AAN?$AA?$AN?$AA?6?$AA?$AA@|
  01030		 |$LN32@DumpReg|
  01030	00000000	 DCD         |??_C@_1EO@FIKDIPMK@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAC?$AAl?$AAe?$AAa?$AAr?$AAR?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?3?$AA?5?$AAG?$AAe?$AAt?$AA?5?$AAp?$AAO?$AAT?$AAG?$AA?5?$AAf?$AAa@|
  01034		 |$LN33@DumpReg|
  01034	00000000	 DCD         |??_C@_1HM@EEJMOJLC@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAC?$AAl?$AAe?$AAa?$AAr?$AAR?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?5?$AA?9?$AA?$DO?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAa?$AAb?$AAl?$AAe?$AA?5@|
  01038		 |$M42761|

			 ENDP  ; |?DumpReg@CQTD@@QAAXXZ|, CQTD::DumpReg

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.h

  00000			 AREA	 |.pdata|, PDATA
|$T42777| DCD	|$LN5@GetTDType|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetTDType@CQTD@@QAAKXZ| PROC		; CQTD::GetTDType

; 92   :     DWORD GetTDType() { return m_dwTDType; };

  00000		 |$LN5@GetTDType|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42774|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e283300c	 add         r3, r3, #0xC
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M42775|

			 ENDP  ; |?GetTDType@CQTD@@QAAKXZ|, CQTD::GetTDType

	EXPORT	|?QueueNextTD@CQTD@@QAAPAV1@PAV1@@Z|	; CQTD::QueueNextTD

  00020			 AREA	 |.pdata|, PDATA
|$T42785| DCD	|$LN5@QueueNextT|
	DCD	0x40001204
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.cpp

  01038			 AREA	 |.text|, CODE, ARM

  01038		 |?QueueNextTD@CQTD@@QAAPAV1@PAV1@@Z| PROC ; CQTD::QueueNextTD

; 337  : {    

  01038		 |$LN5@QueueNextT|
  01038	e1a0c00d	 mov         r12, sp
  0103c	e92d0003	 stmdb       sp!, {r0, r1}
  01040	e92d5000	 stmdb       sp!, {r12, lr}
  01044	e24dd008	 sub         sp, sp, #8
  01048		 |$M42782|

; 338  :     CQTD * pReturn = m_pNext;    

  01048	e59d3010	 ldr         r3, [sp, #0x10]
  0104c	e2833008	 add         r3, r3, #8
  01050	e5933000	 ldr         r3, [r3]
  01054	e58d3000	 str         r3, [sp]

; 339  :     m_pNext = pNextTD;        

  01058	e59d3010	 ldr         r3, [sp, #0x10]
  0105c	e2832008	 add         r2, r3, #8
  01060	e59d3014	 ldr         r3, [sp, #0x14]
  01064	e5823000	 str         r3, [r2]

; 340  :     return pReturn;

  01068	e59d3000	 ldr         r3, [sp]
  0106c	e58d3004	 str         r3, [sp, #4]

; 341  : }

  01070	e59d0004	 ldr         r0, [sp, #4]
  01074	e28dd008	 add         sp, sp, #8
  01078	e89d6000	 ldmia       sp, {sp, lr}
  0107c	e12fff1e	 bx          lr
  01080		 |$M42783|

			 ENDP  ; |?QueueNextTD@CQTD@@QAAPAV1@PAV1@@Z|, CQTD::QueueNextTD

	EXPORT	|?UnLock@CQH@@QAAXXZ|			; CQH::UnLock
	EXPORT	|??_C@_1FA@PJLPIBKD@?$AAF?$AAl?$AAu?$AAs?$AAh?$AAF?$AAI?$AAF?$AAO?$AA?3?$AA?3?$AAT?$AAX?$AAC?$AAS?$AAR?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@FOPLBCCC@?$AAF?$AAl?$AAu?$AAs?$AAh?$AAF?$AAI?$AAF?$AAO?$AA?3?$AA?5?$AAR?$AAx?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@JMFMKGII@?$AAF?$AAl?$AAu?$AAs?$AAh?$AAF?$AAI?$AAF?$AAO?$AA?3?$AA?3?$AAR?$AAX?$AAC?$AAS?$AAR?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@PJMJCBIE@?$AAC?$AAS?$AAR?$AA0?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?Lock@CQH@@QAAXXZ|			; CQH::Lock
	EXPORT	|?DeActiveTD@CQTD@@QAAXXZ|		; CQTD::DeActiveTD

  00028			 AREA	 |.pdata|, PDATA
|$T42802| DCD	|$LN23@DeActiveTD|
	DCD	0x40012f04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@PJLPIBKD@?$AAF?$AAl?$AAu?$AAs?$AAh?$AAF?$AAI?$AAF?$AAO?$AA?3?$AA?3?$AAT?$AAX?$AAC?$AAS?$AAR?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN@| DCB "F"
	DCB	0x0, "l", 0x0, "u", 0x0, "s", 0x0, "h", 0x0, "F", 0x0, "I"
	DCB	0x0, "F", 0x0, "O", 0x0, ":", 0x0, ":", 0x0, "T", 0x0, "X"
	DCB	0x0, "C", 0x0, "S", 0x0, "R", 0x0, " ", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@FOPLBCCC@?$AAF?$AAl?$AAu?$AAs?$AAh?$AAF?$AAI?$AAF?$AAO?$AA?3?$AA?5?$AAR?$AAx?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "F"
	DCB	0x0, "l", 0x0, "u", 0x0, "s", 0x0, "h", 0x0, "F", 0x0, "I"
	DCB	0x0, "F", 0x0, "O", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "x"
	DCB	0x0, "C", 0x0, "o", 0x0, "u", 0x0, "n", 0x0, "t", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@JMFMKGII@?$AAF?$AAl?$AAu?$AAs?$AAh?$AAF?$AAI?$AAF?$AAO?$AA?3?$AA?3?$AAR?$AAX?$AAC?$AAS?$AAR?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN@| DCB "F"
	DCB	0x0, "l", 0x0, "u", 0x0, "s", 0x0, "h", 0x0, "F", 0x0, "I"
	DCB	0x0, "F", 0x0, "O", 0x0, ":", 0x0, ":", 0x0, "R", 0x0, "X"
	DCB	0x0, "C", 0x0, "S", 0x0, "R", 0x0, " ", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@PJMJCBIE@?$AAC?$AAS?$AAR?$AA0?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "S", 0x0, "R", 0x0, "0", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  01080			 AREA	 |.text|, CODE, ARM

  01080		 |?DeActiveTD@CQTD@@QAAXXZ| PROC	; CQTD::DeActiveTD

; 352  : {    

  01080		 |$LN23@DeActiveTD|
  01080	e1a0c00d	 mov         r12, sp
  01084	e92d0001	 stmdb       sp!, {r0}
  01088	e92d5000	 stmdb       sp!, {r12, lr}
  0108c	e24dd038	 sub         sp, sp, #0x38
  01090		 |$M42799|

; 353  :     PHSMUSB_T pOTG;
; 354  :     UCHAR endpoint;
; 355  :     UCHAR csrIndex;
; 356  :     DWORD dwType = GetTDType();        

  01090	e59d0040	 ldr         r0, [sp, #0x40]
  01094	eb000000	 bl          |?GetTDType@CQTD@@QAAKXZ|
  01098	e58d0010	 str         r0, [sp, #0x10]
  0109c	e59d3010	 ldr         r3, [sp, #0x10]
  010a0	e58d3000	 str         r3, [sp]

; 357  : 
; 358  :     m_pQh->Lock();

  010a4	e59d3040	 ldr         r3, [sp, #0x40]
  010a8	e2833004	 add         r3, r3, #4
  010ac	e5930000	 ldr         r0, [r3]
  010b0	eb000000	 bl          |?Lock@CQH@@QAAXXZ|

; 359  :     SetStatus(STATUS_ABORT);

  010b4	e3a0100e	 mov         r1, #0xE
  010b8	e59d0040	 ldr         r0, [sp, #0x40]
  010bc	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|

; 360  :     CPipe *pPipe = m_pQh->GetPipe();        

  010c0	e59d3040	 ldr         r3, [sp, #0x40]
  010c4	e2833004	 add         r3, r3, #4
  010c8	e5930000	 ldr         r0, [r3]
  010cc	eb000000	 bl          |?GetPipe@CQH@@QAAPAVCPipe@@XZ|
  010d0	e58d0014	 str         r0, [sp, #0x14]
  010d4	e59d3014	 ldr         r3, [sp, #0x14]
  010d8	e58d3004	 str         r3, [sp, #4]

; 361  :     if (!pPipe)

  010dc	e59d3004	 ldr         r3, [sp, #4]
  010e0	e3530000	 cmp         r3, #0
  010e4	1a000007	 bne         |$LN6@DeActiveTD|

; 362  :     {
; 363  :         RETAILMSG(1, (TEXT("CQTD::ClearRxPktRdy -> not able to read the associated pipe\r\n")));

  010e8	e59f0448	 ldr         r0, [pc, #0x448]
  010ec	eb000000	 bl          NKDbgPrintfW
  010f0	e3a03001	 mov         r3, #1
  010f4	e58d3018	 str         r3, [sp, #0x18]
  010f8	ea000001	 b           |$LN10@DeActiveTD|
  010fc	e3a03000	 mov         r3, #0
  01100	e58d3018	 str         r3, [sp, #0x18]
  01104		 |$LN10@DeActiveTD|

; 364  :         return;

  01104	ea000103	 b           |$LN7@DeActiveTD|
  01108		 |$LN6@DeActiveTD|

; 365  :     }
; 366  :     pOTG = (PHSMUSB_T)pPipe->m_pCMhcd->GetOTGContext();

  01108	e59d3004	 ldr         r3, [sp, #4]
  0110c	e283300c	 add         r3, r3, #0xC
  01110	e5930000	 ldr         r0, [r3]
  01114	eb000000	 bl          |?GetOTGContext@CHcd@@QAAPAXXZ|
  01118	e58d001c	 str         r0, [sp, #0x1C]
  0111c	e59d301c	 ldr         r3, [sp, #0x1C]
  01120	e58d300c	 str         r3, [sp, #0xC]

; 367  :     if (pOTG == NULL)

  01124	e59d300c	 ldr         r3, [sp, #0xC]
  01128	e3530000	 cmp         r3, #0
  0112c	1a000007	 bne         |$LN5@DeActiveTD|

; 368  :     {
; 369  :         RETAILMSG(1, (TEXT("CQTD::ClearRxPktRdy: Get pOTG failed\r\n")));        

  01130	e59f03fc	 ldr         r0, [pc, #0x3FC]
  01134	eb000000	 bl          NKDbgPrintfW
  01138	e3a03001	 mov         r3, #1
  0113c	e58d3020	 str         r3, [sp, #0x20]
  01140	ea000001	 b           |$LN12@DeActiveTD|
  01144	e3a03000	 mov         r3, #0
  01148	e58d3020	 str         r3, [sp, #0x20]
  0114c		 |$LN12@DeActiveTD|

; 370  :         return;

  0114c	ea0000f1	 b           |$LN7@DeActiveTD|
  01150		 |$LN5@DeActiveTD|

; 371  :     }
; 372  : 
; 373  :     endpoint = pPipe->GetMappedEndPoint();

  01150	e59d0004	 ldr         r0, [sp, #4]
  01154	eb000000	 bl          |?GetMappedEndPoint@CPipe@@QAAEXZ|
  01158	e5cd0024	 strb        r0, [sp, #0x24]
  0115c	e5dd3024	 ldrb        r3, [sp, #0x24]
  01160	e5cd3008	 strb        r3, [sp, #8]

; 374  :     // Set Index Register
; 375  :     EnterCriticalSection(&pOTG->regCS);

  01164	e59d300c	 ldr         r3, [sp, #0xC]
  01168	e2830038	 add         r0, r3, #0x38
  0116c	eb000000	 bl          EnterCriticalSection

; 376  :     OUTREG8(&pOTG->pUsbGenRegs->Index, INDEX(endpoint));

  01170	e5dd3008	 ldrb        r3, [sp, #8]
  01174	e203300f	 and         r3, r3, #0xF
  01178	e20320ff	 and         r2, r3, #0xFF
  0117c	e59d300c	 ldr         r3, [sp, #0xC]
  01180	e2833020	 add         r3, r3, #0x20
  01184	e5933000	 ldr         r3, [r3]
  01188	e283300e	 add         r3, r3, #0xE
  0118c	e5c32000	 strb        r2, [r3]

; 377  :     csrIndex = INDEX(endpoint);

  01190	e5dd3008	 ldrb        r3, [sp, #8]
  01194	e203300f	 and         r3, r3, #0xF
  01198	e20330ff	 and         r3, r3, #0xFF
  0119c	e5cd3009	 strb        r3, [sp, #9]

; 378  :     if (USB_ENDPOINT(endpoint) == 0)

  011a0	e5dd3008	 ldrb        r3, [sp, #8]
  011a4	e313000f	 tst         r3, #0xF
  011a8	1a000027	 bne         |$LN4@DeActiveTD|

; 379  :     {
; 380  :         RETAILMSG(1, (TEXT("CSR0 register = 0x%x\r\n"), INREG16(&pOTG->pUsbCsrRegs->ep[0].CSR.CSR0)));

  011ac	e59d300c	 ldr         r3, [sp, #0xC]
  011b0	e283301c	 add         r3, r3, #0x1C
  011b4	e5933000	 ldr         r3, [r3]
  011b8	e2831002	 add         r1, r3, #2
  011bc	e5d13001	 ldrb        r3, [r1, #1]
  011c0	e1a03403	 mov         r3, r3, lsl #8
  011c4	e1a02803	 mov         r2, r3, lsl #16
  011c8	e1a02822	 mov         r2, r2, lsr #16
  011cc	e5d13000	 ldrb        r3, [r1]
  011d0	e1833002	 orr         r3, r3, r2
  011d4	e1a01003	 mov         r1, r3
  011d8	e59f0350	 ldr         r0, [pc, #0x350]
  011dc	eb000000	 bl          NKDbgPrintfW
  011e0	e3a03001	 mov         r3, #1
  011e4	e58d3028	 str         r3, [sp, #0x28]
  011e8	ea000001	 b           |$LN14@DeActiveTD|
  011ec	e3a03000	 mov         r3, #0
  011f0	e58d3028	 str         r3, [sp, #0x28]
  011f4		 |$LN14@DeActiveTD|

; 381  :         SETREG16(&pOTG->pUsbCsrRegs->ep[0].CSR.CSR0, CSR0_H_FlushFIFO);

  011f4	e59d300c	 ldr         r3, [sp, #0xC]
  011f8	e283301c	 add         r3, r3, #0x1C
  011fc	e5933000	 ldr         r3, [r3]
  01200	e2831002	 add         r1, r3, #2
  01204	e5d13001	 ldrb        r3, [r1, #1]
  01208	e1a03403	 mov         r3, r3, lsl #8
  0120c	e1a02803	 mov         r2, r3, lsl #16
  01210	e1a02822	 mov         r2, r2, lsr #16
  01214	e5d13000	 ldrb        r3, [r1]
  01218	e1833002	 orr         r3, r3, r2
  0121c	e3833c01	 orr         r3, r3, #1, 24
  01220	e1a01803	 mov         r1, r3, lsl #16
  01224	e1a01821	 mov         r1, r1, lsr #16
  01228	e59d300c	 ldr         r3, [sp, #0xC]
  0122c	e283301c	 add         r3, r3, #0x1C
  01230	e5933000	 ldr         r3, [r3]
  01234	e2832002	 add         r2, r3, #2
  01238	e1a03001	 mov         r3, r1
  0123c	e5c23000	 strb        r3, [r2]
  01240	e1a03423	 mov         r3, r3, lsr #8
  01244	e5c23001	 strb        r3, [r2, #1]

; 382  :     }
; 383  :     else {

  01248	ea0000ab	 b           |$LN3@DeActiveTD|
  0124c		 |$LN4@DeActiveTD|

; 384  :         if (dwType == TD_DATA_IN)

  0124c	e59d3000	 ldr         r3, [sp]
  01250	e3530002	 cmp         r3, #2
  01254	1a000070	 bne         |$LN2@DeActiveTD|

; 385  :         {
; 386  :             SETREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].RxCSR, RXCSR_H_FlushFIFO|RXCSR_H_ClrDataTog);

  01258	e59d300c	 ldr         r3, [sp, #0xC]
  0125c	e283001c	 add         r0, r3, #0x1C
  01260	e5dd3009	 ldrb        r3, [sp, #9]
  01264	e1a01003	 mov         r1, r3
  01268	e3a03010	 mov         r3, #0x10
  0126c	e0020391	 mul         r2, r1, r3
  01270	e5903000	 ldr         r3, [r0]
  01274	e0833002	 add         r3, r3, r2
  01278	e2831006	 add         r1, r3, #6
  0127c	e5d13001	 ldrb        r3, [r1, #1]
  01280	e1a03403	 mov         r3, r3, lsl #8
  01284	e1a02803	 mov         r2, r3, lsl #16
  01288	e1a02822	 mov         r2, r2, lsr #16
  0128c	e5d13000	 ldrb        r3, [r1]
  01290	e1833002	 orr         r3, r3, r2
  01294	e3833090	 orr         r3, r3, #0x90
  01298	e1a0e803	 mov         lr, r3, lsl #16
  0129c	e1a0e82e	 mov         lr, lr, lsr #16
  012a0	e59d300c	 ldr         r3, [sp, #0xC]
  012a4	e283001c	 add         r0, r3, #0x1C
  012a8	e5dd3009	 ldrb        r3, [sp, #9]
  012ac	e1a01003	 mov         r1, r3
  012b0	e3a03010	 mov         r3, #0x10
  012b4	e0020391	 mul         r2, r1, r3
  012b8	e5903000	 ldr         r3, [r0]
  012bc	e0833002	 add         r3, r3, r2
  012c0	e2832006	 add         r2, r3, #6
  012c4	e1a0300e	 mov         r3, lr
  012c8	e5c23000	 strb        r3, [r2]
  012cc	e1a03423	 mov         r3, r3, lsr #8
  012d0	e5c23001	 strb        r3, [r2, #1]

; 387  :             CLRREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].RxCSR, RXCSR_H_ReqPkt);

  012d4	e59d300c	 ldr         r3, [sp, #0xC]
  012d8	e283001c	 add         r0, r3, #0x1C
  012dc	e5dd3009	 ldrb        r3, [sp, #9]
  012e0	e1a01003	 mov         r1, r3
  012e4	e3a03010	 mov         r3, #0x10
  012e8	e0020391	 mul         r2, r1, r3
  012ec	e5903000	 ldr         r3, [r0]
  012f0	e0833002	 add         r3, r3, r2
  012f4	e2831006	 add         r1, r3, #6
  012f8	e5d13001	 ldrb        r3, [r1, #1]
  012fc	e1a03403	 mov         r3, r3, lsl #8
  01300	e1a02803	 mov         r2, r3, lsl #16
  01304	e1a02822	 mov         r2, r2, lsr #16
  01308	e5d13000	 ldrb        r3, [r1]
  0130c	e1833002	 orr         r3, r3, r2
  01310	e1a02003	 mov         r2, r3
  01314	e3e03020	 mvn         r3, #0x20
  01318	e0023003	 and         r3, r2, r3
  0131c	e1a0e803	 mov         lr, r3, lsl #16
  01320	e1a0e82e	 mov         lr, lr, lsr #16
  01324	e59d300c	 ldr         r3, [sp, #0xC]
  01328	e283001c	 add         r0, r3, #0x1C
  0132c	e5dd3009	 ldrb        r3, [sp, #9]
  01330	e1a01003	 mov         r1, r3
  01334	e3a03010	 mov         r3, #0x10
  01338	e0020391	 mul         r2, r1, r3
  0133c	e5903000	 ldr         r3, [r0]
  01340	e0833002	 add         r3, r3, r2
  01344	e2832006	 add         r2, r3, #6
  01348	e1a0300e	 mov         r3, lr
  0134c	e5c23000	 strb        r3, [r2]
  01350	e1a03423	 mov         r3, r3, lsr #8
  01354	e5c23001	 strb        r3, [r2, #1]

; 388  :             DEBUGMSG(1, (TEXT("FlushFIFO::RXCSR (%d) register = 0x%x\r\n"), endpoint, 
; 389  :                 INREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].RxCSR)));

  01358	e59d300c	 ldr         r3, [sp, #0xC]
  0135c	e283001c	 add         r0, r3, #0x1C
  01360	e5dd3009	 ldrb        r3, [sp, #9]
  01364	e1a01003	 mov         r1, r3
  01368	e3a03010	 mov         r3, #0x10
  0136c	e0020391	 mul         r2, r1, r3
  01370	e5903000	 ldr         r3, [r0]
  01374	e0833002	 add         r3, r3, r2
  01378	e2831006	 add         r1, r3, #6
  0137c	e5d13001	 ldrb        r3, [r1, #1]
  01380	e1a03403	 mov         r3, r3, lsl #8
  01384	e1a02803	 mov         r2, r3, lsl #16
  01388	e1a02822	 mov         r2, r2, lsr #16
  0138c	e5d13000	 ldrb        r3, [r1]
  01390	e1833002	 orr         r3, r3, r2
  01394	e1a02003	 mov         r2, r3
  01398	e5dd3008	 ldrb        r3, [sp, #8]
  0139c	e1a01003	 mov         r1, r3
  013a0	e59f0184	 ldr         r0, [pc, #0x184]
  013a4	eb000000	 bl          NKDbgPrintfW
  013a8	e3a03001	 mov         r3, #1
  013ac	e58d302c	 str         r3, [sp, #0x2C]
  013b0	ea000001	 b           |$LN16@DeActiveTD|
  013b4	e3a03000	 mov         r3, #0
  013b8	e58d302c	 str         r3, [sp, #0x2C]
  013bc		 |$LN16@DeActiveTD|

; 390  :             DEBUGMSG(1, (TEXT("FlushFIFO: RxCount(0x%x)\r\n"), INREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].Count.RxCount)));

  013bc	e59d300c	 ldr         r3, [sp, #0xC]
  013c0	e283001c	 add         r0, r3, #0x1C
  013c4	e5dd3009	 ldrb        r3, [sp, #9]
  013c8	e1a01003	 mov         r1, r3
  013cc	e3a03010	 mov         r3, #0x10
  013d0	e0020391	 mul         r2, r1, r3
  013d4	e5903000	 ldr         r3, [r0]
  013d8	e0833002	 add         r3, r3, r2
  013dc	e2831008	 add         r1, r3, #8
  013e0	e5d13001	 ldrb        r3, [r1, #1]
  013e4	e1a03403	 mov         r3, r3, lsl #8
  013e8	e1a02803	 mov         r2, r3, lsl #16
  013ec	e1a02822	 mov         r2, r2, lsr #16
  013f0	e5d13000	 ldrb        r3, [r1]
  013f4	e1833002	 orr         r3, r3, r2
  013f8	e1a01003	 mov         r1, r3
  013fc	e59f0124	 ldr         r0, [pc, #0x124]
  01400	eb000000	 bl          NKDbgPrintfW
  01404	e3a03001	 mov         r3, #1
  01408	e58d3030	 str         r3, [sp, #0x30]
  0140c	ea000001	 b           |$LN18@DeActiveTD|
  01410	e3a03000	 mov         r3, #0
  01414	e58d3030	 str         r3, [sp, #0x30]
  01418		 |$LN18@DeActiveTD|

; 391  : 
; 392  : 
; 393  :         }
; 394  :         else

  01418	ea000037	 b           |$LN1@DeActiveTD|
  0141c		 |$LN2@DeActiveTD|

; 395  :         {
; 396  :             RETAILMSG(1, (TEXT("FlushFIFO::TXCSR (%d) register = 0x%x\r\n"), endpoint, 
; 397  :                 INREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].CSR.TxCSR)));

  0141c	e59d300c	 ldr         r3, [sp, #0xC]
  01420	e283001c	 add         r0, r3, #0x1C
  01424	e5dd3009	 ldrb        r3, [sp, #9]
  01428	e1a01003	 mov         r1, r3
  0142c	e3a03010	 mov         r3, #0x10
  01430	e0020391	 mul         r2, r1, r3
  01434	e5903000	 ldr         r3, [r0]
  01438	e0833002	 add         r3, r3, r2
  0143c	e2831002	 add         r1, r3, #2
  01440	e5d13001	 ldrb        r3, [r1, #1]
  01444	e1a03403	 mov         r3, r3, lsl #8
  01448	e1a02803	 mov         r2, r3, lsl #16
  0144c	e1a02822	 mov         r2, r2, lsr #16
  01450	e5d13000	 ldrb        r3, [r1]
  01454	e1833002	 orr         r3, r3, r2
  01458	e1a02003	 mov         r2, r3
  0145c	e5dd3008	 ldrb        r3, [sp, #8]
  01460	e1a01003	 mov         r1, r3
  01464	e59f00b8	 ldr         r0, [pc, #0xB8]
  01468	eb000000	 bl          NKDbgPrintfW
  0146c	e3a03001	 mov         r3, #1
  01470	e58d3034	 str         r3, [sp, #0x34]
  01474	ea000001	 b           |$LN20@DeActiveTD|
  01478	e3a03000	 mov         r3, #0
  0147c	e58d3034	 str         r3, [sp, #0x34]
  01480		 |$LN20@DeActiveTD|

; 398  :             SETREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].CSR.TxCSR, TXCSR_H_FlushFIFO|TXCSR_H_ClrDataTog);

  01480	e59d300c	 ldr         r3, [sp, #0xC]
  01484	e283001c	 add         r0, r3, #0x1C
  01488	e5dd3009	 ldrb        r3, [sp, #9]
  0148c	e1a01003	 mov         r1, r3
  01490	e3a03010	 mov         r3, #0x10
  01494	e0020391	 mul         r2, r1, r3
  01498	e5903000	 ldr         r3, [r0]
  0149c	e0833002	 add         r3, r3, r2
  014a0	e2831002	 add         r1, r3, #2
  014a4	e5d13001	 ldrb        r3, [r1, #1]
  014a8	e1a03403	 mov         r3, r3, lsl #8
  014ac	e1a02803	 mov         r2, r3, lsl #16
  014b0	e1a02822	 mov         r2, r2, lsr #16
  014b4	e5d13000	 ldrb        r3, [r1]
  014b8	e1833002	 orr         r3, r3, r2
  014bc	e3833048	 orr         r3, r3, #0x48
  014c0	e1a0e803	 mov         lr, r3, lsl #16
  014c4	e1a0e82e	 mov         lr, lr, lsr #16
  014c8	e59d300c	 ldr         r3, [sp, #0xC]
  014cc	e283001c	 add         r0, r3, #0x1C
  014d0	e5dd3009	 ldrb        r3, [sp, #9]
  014d4	e1a01003	 mov         r1, r3
  014d8	e3a03010	 mov         r3, #0x10
  014dc	e0020391	 mul         r2, r1, r3
  014e0	e5903000	 ldr         r3, [r0]
  014e4	e0833002	 add         r3, r3, r2
  014e8	e2832002	 add         r2, r3, #2
  014ec	e1a0300e	 mov         r3, lr
  014f0	e5c23000	 strb        r3, [r2]
  014f4	e1a03423	 mov         r3, r3, lsr #8
  014f8	e5c23001	 strb        r3, [r2, #1]
  014fc		 |$LN1@DeActiveTD|
  014fc		 |$LN3@DeActiveTD|

; 399  :         }
; 400  :     }    
; 401  :     LeaveCriticalSection(&pOTG->regCS);

  014fc	e59d300c	 ldr         r3, [sp, #0xC]
  01500	e2830038	 add         r0, r3, #0x38
  01504	eb000000	 bl          LeaveCriticalSection

; 402  : 
; 403  :     // Need to add FlushFIFO here....    
; 404  :     m_pQh->UnLock();

  01508	e59d3040	 ldr         r3, [sp, #0x40]
  0150c	e2833004	 add         r3, r3, #4
  01510	e5930000	 ldr         r0, [r3]
  01514	eb000000	 bl          |?UnLock@CQH@@QAAXXZ|
  01518		 |$LN7@DeActiveTD|

; 405  : }

  01518	e28dd038	 add         sp, sp, #0x38
  0151c	e89d6000	 ldmia       sp, {sp, lr}
  01520	e12fff1e	 bx          lr
  01524		 |$LN24@DeActiveTD|
  01524		 |$LN25@DeActiveTD|
  01524	00000000	 DCD         |??_C@_1FA@PJLPIBKD@?$AAF?$AAl?$AAu?$AAs?$AAh?$AAF?$AAI?$AAF?$AAO?$AA?3?$AA?3?$AAT?$AAX?$AAC?$AAS?$AAR?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN@|
  01528		 |$LN26@DeActiveTD|
  01528	00000000	 DCD         |??_C@_1DG@FOPLBCCC@?$AAF?$AAl?$AAu?$AAs?$AAh?$AAF?$AAI?$AAF?$AAO?$AA?3?$AA?5?$AAR?$AAx?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0152c		 |$LN27@DeActiveTD|
  0152c	00000000	 DCD         |??_C@_1FA@JMFMKGII@?$AAF?$AAl?$AAu?$AAs?$AAh?$AAF?$AAI?$AAF?$AAO?$AA?3?$AA?3?$AAR?$AAX?$AAC?$AAS?$AAR?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN@|
  01530		 |$LN28@DeActiveTD|
  01530	00000000	 DCD         |??_C@_1CO@PJMJCBIE@?$AAC?$AAS?$AAR?$AA0?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  01534		 |$LN29@DeActiveTD|
  01534	00000000	 DCD         |??_C@_1EO@FIKDIPMK@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAC?$AAl?$AAe?$AAa?$AAr?$AAR?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?3?$AA?5?$AAG?$AAe?$AAt?$AA?5?$AAp?$AAO?$AAT?$AAG?$AA?5?$AAf?$AAa@|
  01538		 |$LN30@DeActiveTD|
  01538	00000000	 DCD         |??_C@_1HM@EEJMOJLC@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAC?$AAl?$AAe?$AAa?$AAr?$AAR?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?5?$AA?9?$AA?$DO?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAa?$AAb?$AAl?$AAe?$AA?5@|
  0153c		 |$M42800|

			 ENDP  ; |?DeActiveTD@CQTD@@QAAXXZ|, CQTD::DeActiveTD

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.h

  00000			 AREA	 |.pdata|, PDATA
|$T42814| DCD	|$LN5@Lock|
	DCD	0x40000803
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Lock@CQH@@QAAXXZ| PROC		; CQH::Lock

; 150  :     void Lock() { EnterCriticalSection(&m_csCQTD); };

  00000		 |$LN5@Lock|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42811|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e283000c	 add         r0, r3, #0xC
  00014	eb000000	 bl          EnterCriticalSection
  00018	e89d6000	 ldmia       sp, {sp, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$M42812|

			 ENDP  ; |?Lock@CQH@@QAAXXZ|, CQH::Lock


  00000			 AREA	 |.pdata|, PDATA
|$T42821| DCD	|$LN5@UnLock|
	DCD	0x40000803
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UnLock@CQH@@QAAXXZ| PROC		; CQH::UnLock

; 151  :     void UnLock() { LeaveCriticalSection(&m_csCQTD); };

  00000		 |$LN5@UnLock|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42818|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e283000c	 add         r0, r3, #0xC
  00014	eb000000	 bl          LeaveCriticalSection
  00018	e89d6000	 ldmia       sp, {sp, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$M42819|

			 ENDP  ; |?UnLock@CQH@@QAAXXZ|, CQH::UnLock

	EXPORT	|?InitLock@CQH@@QAAXXZ|			; CQH::InitLock
	EXPORT	|?GetEndptDescriptor@CPipe@@QAA?AU_USB_ENDPOINT_DESCRIPTOR@@XZ| ; CPipe::GetEndptDescriptor
	EXPORT	|??0CQH@@QAA@PAVCPipe@@@Z|		; CQH::CQH

  00030			 AREA	 |.pdata|, PDATA
|$T42829| DCD	|$LN5@CQH|
	DCD	0x40001a04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.cpp

  0153c			 AREA	 |.text|, CODE, ARM

  0153c		 |??0CQH@@QAA@PAVCPipe@@@Z| PROC	; CQH::CQH

; 420  : {    

  0153c		 |$LN5@CQH|
  0153c	e1a0c00d	 mov         r12, sp
  01540	e92d0003	 stmdb       sp!, {r0, r1}
  01544	e92d5000	 stmdb       sp!, {r12, lr}
  01548	e24dd00c	 sub         sp, sp, #0xC
  0154c		 |$M42826|
  0154c	e59d2018	 ldr         r2, [sp, #0x18]
  01550	e59d3014	 ldr         r3, [sp, #0x14]
  01554	e5832000	 str         r2, [r3]
  01558	e59d3014	 ldr         r3, [sp, #0x14]
  0155c	e2832004	 add         r2, r3, #4
  01560	e3a03000	 mov         r3, #0
  01564	e5823000	 str         r3, [r2]

; 421  :     USB_ENDPOINT_DESCRIPTOR endptDesc = pPipe->GetEndptDescriptor();

  01568	e28d1000	 add         r1, sp, #0
  0156c	e59d0018	 ldr         r0, [sp, #0x18]
  01570	eb000000	 bl          |?GetEndptDescriptor@CPipe@@QAA?AU_USB_ENDPOINT_DESCRIPTOR@@XZ|

; 422  :     m_bEndPointAddress = endptDesc.bEndpointAddress;

  01574	e59d3014	 ldr         r3, [sp, #0x14]
  01578	e2832008	 add         r2, r3, #8
  0157c	e5dd3002	 ldrb        r3, [sp, #2]
  01580	e5c23000	 strb        r3, [r2]

; 423  :     InitLock();

  01584	e59d0014	 ldr         r0, [sp, #0x14]
  01588	eb000000	 bl          |?InitLock@CQH@@QAAXXZ|

; 424  : }

  0158c	e59d3014	 ldr         r3, [sp, #0x14]
  01590	e58d3008	 str         r3, [sp, #8]
  01594	e59d0008	 ldr         r0, [sp, #8]
  01598	e28dd00c	 add         sp, sp, #0xC
  0159c	e89d6000	 ldmia       sp, {sp, lr}
  015a0	e12fff1e	 bx          lr
  015a4		 |$M42827|

			 ENDP  ; |??0CQH@@QAA@PAVCPipe@@@Z|, CQH::CQH

	IMPORT	|InitializeCriticalSection|
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.h

  00000			 AREA	 |.pdata|, PDATA
|$T42834| DCD	|$LN5@InitLock@2|
	DCD	0x40000803
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InitLock@CQH@@QAAXXZ| PROC		; CQH::InitLock

; 152  :     void InitLock() { InitializeCriticalSection(&m_csCQTD);};

  00000		 |$LN5@InitLock@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42831|
  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e283000c	 add         r0, r3, #0xC
  00014	eb000000	 bl          InitializeCriticalSection
  00018	e89d6000	 ldmia       sp, {sp, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$M42832|

			 ENDP  ; |?InitLock@CQH@@QAAXXZ|, CQH::InitLock

	IMPORT	|memcpy|
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.h

  00000			 AREA	 |.pdata|, PDATA
|$T42843| DCD	|$LN5@GetEndptDe|
	DCD	0x40000f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetEndptDescriptor@CPipe@@QAA?AU_USB_ENDPOINT_DESCRIPTOR@@XZ| PROC ; CPipe::GetEndptDescriptor

; 96   :     USB_ENDPOINT_DESCRIPTOR GetEndptDescriptor() { return m_usbEndpointDescriptor;};

  00000		 |$LN5@GetEndptDe|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42840|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2831034	 add         r1, r3, #0x34
  00018	e59d0010	 ldr         r0, [sp, #0x10]
  0001c	e3a02007	 mov         r2, #7
  00020	eb000000	 bl          memcpy
  00024	e59d3010	 ldr         r3, [sp, #0x10]
  00028	e58d3000	 str         r3, [sp]
  0002c	e59d0000	 ldr         r0, [sp]
  00030	e28dd004	 add         sp, sp, #4
  00034	e89d6000	 ldmia       sp, {sp, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M42841|

			 ENDP  ; |?GetEndptDescriptor@CPipe@@QAA?AU_USB_ENDPOINT_DESCRIPTOR@@XZ|, CPipe::GetEndptDescriptor

	EXPORT	|?GetNextTD@CQTD@@QAAPAV1@XZ|		; CQTD::GetNextTD
	EXPORT	|?IsActive@CQH@@QAAHXZ|			; CQH::IsActive

  00038			 AREA	 |.pdata|, PDATA
|$T42851| DCD	|$LN9@IsActive|
	DCD	0x40002e04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.cpp

  015a4			 AREA	 |.text|, CODE, ARM

  015a4		 |?IsActive@CQH@@QAAHXZ| PROC		; CQH::IsActive

; 435  : {

  015a4		 |$LN9@IsActive|
  015a4	e1a0c00d	 mov         r12, sp
  015a8	e92d0001	 stmdb       sp!, {r0}
  015ac	e92d5000	 stmdb       sp!, {r12, lr}
  015b0	e24dd014	 sub         sp, sp, #0x14
  015b4		 |$M42848|

; 436  :     // Loop through and see if there is any outstanding CQTD
; 437  :     if (m_pCQHTDList == NULL) // there is nothing in the QH, we can return NOT active

  015b4	e59d301c	 ldr         r3, [sp, #0x1C]
  015b8	e2833004	 add         r3, r3, #4
  015bc	e5933000	 ldr         r3, [r3]
  015c0	e3530000	 cmp         r3, #0
  015c4	1a000002	 bne         |$LN4@IsActive|

; 438  :         return FALSE;

  015c8	e3a03000	 mov         r3, #0
  015cc	e58d3004	 str         r3, [sp, #4]
  015d0	ea00001d	 b           |$LN5@IsActive|
  015d4		 |$LN4@IsActive|

; 439  : 
; 440  :     CQTD *pTmp = m_pCQHTDList;

  015d4	e59d301c	 ldr         r3, [sp, #0x1C]
  015d8	e2833004	 add         r3, r3, #4
  015dc	e5933000	 ldr         r3, [r3]
  015e0	e58d3000	 str         r3, [sp]
  015e4		 |$LN3@IsActive|

; 441  :     while (pTmp != NULL)

  015e4	e59d3000	 ldr         r3, [sp]
  015e8	e3530000	 cmp         r3, #0
  015ec	0a000014	 beq         |$LN2@IsActive|

; 442  :     {
; 443  :         if ((pTmp->GetStatus() > STATUS_ACTIVE_START) && (pTmp->GetStatus() < STATUS_ACTIVE_END))

  015f0	e59d0000	 ldr         r0, [sp]
  015f4	eb000000	 bl          |?GetStatus@CQTD@@QAAKXZ|
  015f8	e58d0008	 str         r0, [sp, #8]
  015fc	e59d3008	 ldr         r3, [sp, #8]
  01600	e3530002	 cmp         r3, #2
  01604	9a000008	 bls         |$LN1@IsActive|
  01608	e59d0000	 ldr         r0, [sp]
  0160c	eb000000	 bl          |?GetStatus@CQTD@@QAAKXZ|
  01610	e58d000c	 str         r0, [sp, #0xC]
  01614	e59d300c	 ldr         r3, [sp, #0xC]
  01618	e353000c	 cmp         r3, #0xC
  0161c	2a000002	 bcs         |$LN1@IsActive|

; 444  :         {
; 445  :             return TRUE;

  01620	e3a03001	 mov         r3, #1
  01624	e58d3004	 str         r3, [sp, #4]
  01628	ea000007	 b           |$LN5@IsActive|
  0162c		 |$LN1@IsActive|

; 446  :         }
; 447  : 
; 448  :         pTmp = pTmp->GetNextTD();

  0162c	e59d0000	 ldr         r0, [sp]
  01630	eb000000	 bl          |?GetNextTD@CQTD@@QAAPAV1@XZ|
  01634	e58d0010	 str         r0, [sp, #0x10]
  01638	e59d3010	 ldr         r3, [sp, #0x10]
  0163c	e58d3000	 str         r3, [sp]

; 449  :     }

  01640	eaffffe7	 b           |$LN3@IsActive|
  01644		 |$LN2@IsActive|

; 450  : 
; 451  :     return FALSE;

  01644	e3a03000	 mov         r3, #0
  01648	e58d3004	 str         r3, [sp, #4]
  0164c		 |$LN5@IsActive|

; 452  : }

  0164c	e59d0004	 ldr         r0, [sp, #4]
  01650	e28dd014	 add         sp, sp, #0x14
  01654	e89d6000	 ldmia       sp, {sp, lr}
  01658	e12fff1e	 bx          lr
  0165c		 |$M42849|

			 ENDP  ; |?IsActive@CQH@@QAAHXZ|, CQH::IsActive

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.h

  00000			 AREA	 |.pdata|, PDATA
|$T42857| DCD	|$LN5@GetNextTD|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetNextTD@CQTD@@QAAPAV1@XZ| PROC	; CQTD::GetNextTD

; 77   :     CQTD *GetNextTD() {return m_pNext; };

  00000		 |$LN5@GetNextTD|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42854|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833008	 add         r3, r3, #8
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M42855|

			 ENDP  ; |?GetNextTD@CQTD@@QAAPAV1@XZ|, CQTD::GetNextTD

	EXPORT	|?GetDeviceAddress@CPipe@@QAAEXZ|	; CPipe::GetDeviceAddress
	EXPORT	|?GetSpeed@CPipe@@QAAEXZ|		; CPipe::GetSpeed
	EXPORT	|??_C@_1EC@NLCPEMP@?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAm?$AAa?$AAp?$AAp?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@BKBMLOGJ@?$AAC?$AAQ?$AAT?$AAD?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?0?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@JKLFFKN@?$AAT?$AAh?$AAe?$AAr?$AAe?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAs?$AAo?$AAm?$AAe?$AAt?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAw?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAs@| [ DATA ] ; `string'
	EXPORT	|?IssueTransfer@CQH@@QAAKPAVCQTD@@@Z|	; CQH::IssueTransfer

  00040			 AREA	 |.pdata|, PDATA
|$T42878| DCD	|$LN26@IssueTrans|
	DCD	0x40011204
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@NLCPEMP@?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAm?$AAa?$AAp?$AAp?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| DCB "I"
	DCB	0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "p"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@BKBMLOGJ@?$AAC?$AAQ?$AAT?$AAD?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?0?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6@| DCB "C"
	DCB	0x0, "Q", 0x0, "T", 0x0, "D", 0x0, " ", 0x0, "w", 0x0, "i"
	DCB	0x0, "t", 0x0, "h", 0x0, " ", 0x0, "t", 0x0, "y", 0x0, "p"
	DCB	0x0, "e", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, ","
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "s", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@JKLFFKN@?$AAT?$AAh?$AAe?$AAr?$AAe?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAs?$AAo?$AAm?$AAe?$AAt?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAw?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAs@| DCB "T"
	DCB	0x0, "h", 0x0, "e", 0x0, "r", 0x0, "e", 0x0, " ", 0x0, "a"
	DCB	0x0, "r", 0x0, "e", 0x0, " ", 0x0, "s", 0x0, "o", 0x0, "m"
	DCB	0x0, "e", 0x0, "t", 0x0, "h", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "w", 0x0, "r", 0x0, "o", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "w", 0x0, "i", 0x0, "t", 0x0, "h", 0x0, " "
	DCB	0x0, "s", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "n"
	DCB	0x0, "c", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  0165c			 AREA	 |.text|, CODE, ARM

  0165c		 |?IssueTransfer@CQH@@QAAKPAVCQTD@@@Z| PROC ; CQH::IssueTransfer

; 464  : {

  0165c		 |$LN26@IssueTrans|
  0165c	e1a0c00d	 mov         r12, sp
  01660	e92d0003	 stmdb       sp!, {r0, r1}
  01664	e92d5010	 stmdb       sp!, {r4, r12, lr}
  01668	e24dd07c	 sub         sp, sp, #0x7C
  0166c		 |$M42875|

; 465  :     DWORD dwStatus = STATUS_ERROR;

  0166c	e3a0300f	 mov         r3, #0xF
  01670	e58d3014	 str         r3, [sp, #0x14]

; 466  :     if (pCurTD)

  01674	e59d308c	 ldr         r3, [sp, #0x8C]
  01678	e3530000	 cmp         r3, #0
  0167c	0a0000fe	 beq         |$LN15@IssueTrans|

; 467  :     {        
; 468  :         if ((m_pCQHTDList != NULL) && (m_pCQHTDList != pCurTD))

  01680	e59d3088	 ldr         r3, [sp, #0x88]
  01684	e2833004	 add         r3, r3, #4
  01688	e5933000	 ldr         r3, [r3]
  0168c	e3530000	 cmp         r3, #0
  01690	0a000015	 beq         |$LN14@IssueTrans|
  01694	e59d3088	 ldr         r3, [sp, #0x88]
  01698	e2833004	 add         r3, r3, #4
  0169c	e5932000	 ldr         r2, [r3]
  016a0	e59d308c	 ldr         r3, [sp, #0x8C]
  016a4	e1520003	 cmp         r2, r3
  016a8	0a00000f	 beq         |$LN14@IssueTrans|

; 469  :         {
; 470  :             DEBUGMSG(ZONE_ERROR, (TEXT("There are something wrong with sequence\r\n")));

  016ac	e59f33e4	 ldr         r3, [pc, #0x3E4]
  016b0	e5933440	 ldr         r3, [r3, #0x440]
  016b4	e3130901	 tst         r3, #1, 18
  016b8	0a000004	 beq         |$LN18@IssueTrans|
  016bc	e59f03dc	 ldr         r0, [pc, #0x3DC]
  016c0	eb000000	 bl          NKDbgPrintfW
  016c4	e3a03001	 mov         r3, #1
  016c8	e58d3048	 str         r3, [sp, #0x48]
  016cc	ea000001	 b           |$LN19@IssueTrans|
  016d0		 |$LN18@IssueTrans|
  016d0	e3a03000	 mov         r3, #0
  016d4	e58d3048	 str         r3, [sp, #0x48]
  016d8		 |$LN19@IssueTrans|

; 471  :             dwStatus = STATUS_ERROR;

  016d8	e3a0300f	 mov         r3, #0xF
  016dc	e58d3014	 str         r3, [sp, #0x14]
  016e0	ea0000e5	 b           |$LN13@IssueTrans|

; 472  :             goto EXIT;

  016e4	ea0000e4	 b           |$EXIT$42241|
  016e8	ea000008	 b           |$LN12@IssueTrans|
  016ec		 |$LN14@IssueTrans|

; 473  :         }
; 474  :         else if (m_pCQHTDList == NULL)

  016ec	e59d3088	 ldr         r3, [sp, #0x88]
  016f0	e2833004	 add         r3, r3, #4
  016f4	e5933000	 ldr         r3, [r3]
  016f8	e3530000	 cmp         r3, #0
  016fc	1a000003	 bne         |$LN11@IssueTrans|

; 475  :             m_pCQHTDList = pCurTD;

  01700	e59d3088	 ldr         r3, [sp, #0x88]
  01704	e2832004	 add         r2, r3, #4
  01708	e59d308c	 ldr         r3, [sp, #0x8C]
  0170c	e5823000	 str         r3, [r2]
  01710		 |$LN11@IssueTrans|
  01710		 |$LN12@IssueTrans|

; 476  : 
; 477  :         // Perform the FIFO or DMA transfer here
; 478  :         // pCurTD should be linked-list of the TD to be transferred.
; 479  :         CQTD *pTmp;
; 480  : 
; 481  :         pTmp = m_pCQHTDList;

  01710	e59d3088	 ldr         r3, [sp, #0x88]
  01714	e2833004	 add         r3, r3, #4
  01718	e5933000	 ldr         r3, [r3]
  0171c	e58d3018	 str         r3, [sp, #0x18]

; 482  :         dwStatus = ERROR_SUCCESS;

  01720	e3a03000	 mov         r3, #0
  01724	e58d3014	 str         r3, [sp, #0x14]
  01728		 |$LN10@IssueTrans|

; 483  :         while (pTmp != NULL)

  01728	e59d3018	 ldr         r3, [sp, #0x18]
  0172c	e3530000	 cmp         r3, #0
  01730	0a0000c8	 beq         |$LN9@IssueTrans|

; 484  :         {
; 485  :             // 1. Find the TD that is not processed yet
; 486  :             // 2. Put in the FIFO
; 487  :             // 3. Set the status and tx or rx bit
; 488  :             // 4. Exit and wait for packet tx or rx interrupt.
; 489  :             DWORD dwPrevStatus;
; 490  :             DEBUGMSG(ZONE_HCD, (TEXT("CQTD with type(%d), status(%d)\r\n"), pTmp->GetTDType(), pTmp->GetStatus()));

  01734	e59f335c	 ldr         r3, [pc, #0x35C]
  01738	e5933440	 ldr         r3, [r3, #0x440]
  0173c	e3130001	 tst         r3, #1
  01740	0a00000c	 beq         |$LN20@IssueTrans|
  01744	e59d0018	 ldr         r0, [sp, #0x18]
  01748	eb000000	 bl          |?GetStatus@CQTD@@QAAKXZ|
  0174c	e58d004c	 str         r0, [sp, #0x4C]
  01750	e59d0018	 ldr         r0, [sp, #0x18]
  01754	eb000000	 bl          |?GetTDType@CQTD@@QAAKXZ|
  01758	e58d0050	 str         r0, [sp, #0x50]
  0175c	e59d204c	 ldr         r2, [sp, #0x4C]
  01760	e59d1050	 ldr         r1, [sp, #0x50]
  01764	e59f0330	 ldr         r0, [pc, #0x330]
  01768	eb000000	 bl          NKDbgPrintfW
  0176c	e3a03001	 mov         r3, #1
  01770	e58d3054	 str         r3, [sp, #0x54]
  01774	ea000001	 b           |$LN21@IssueTrans|
  01778		 |$LN20@IssueTrans|
  01778	e3a03000	 mov         r3, #0
  0177c	e58d3054	 str         r3, [sp, #0x54]
  01780		 |$LN21@IssueTrans|

; 491  :             if (pTmp->GetStatus() == STATUS_COMPLETE)

  01780	e59d0018	 ldr         r0, [sp, #0x18]
  01784	eb000000	 bl          |?GetStatus@CQTD@@QAAKXZ|
  01788	e58d0058	 str         r0, [sp, #0x58]
  0178c	e59d3058	 ldr         r3, [sp, #0x58]
  01790	e3530011	 cmp         r3, #0x11
  01794	1a000005	 bne         |$LN8@IssueTrans|

; 492  :             {
; 493  :                 pTmp = pTmp->GetNextTD();

  01798	e59d0018	 ldr         r0, [sp, #0x18]
  0179c	eb000000	 bl          |?GetNextTD@CQTD@@QAAPAV1@XZ|
  017a0	e58d005c	 str         r0, [sp, #0x5C]
  017a4	e59d305c	 ldr         r3, [sp, #0x5C]
  017a8	e58d3018	 str         r3, [sp, #0x18]

; 494  :                 continue;

  017ac	eaffffdd	 b           |$LN10@IssueTrans|
  017b0		 |$LN8@IssueTrans|

; 495  :             }
; 496  : 
; 497  :             dwPrevStatus = pTmp->GetStatus();

  017b0	e59d0018	 ldr         r0, [sp, #0x18]
  017b4	eb000000	 bl          |?GetStatus@CQTD@@QAAKXZ|
  017b8	e58d0060	 str         r0, [sp, #0x60]
  017bc	e59d3060	 ldr         r3, [sp, #0x60]
  017c0	e58d301c	 str         r3, [sp, #0x1C]

; 498  :             if ((dwPrevStatus == STATUS_WAIT_TRANSFER) ||
; 499  :                 (dwPrevStatus == STATUS_WAIT_MORE_DATA) ||
; 500  :                 (dwPrevStatus == STATUS_SEND_MORE_DATA) ||
; 501  :                 (dwPrevStatus == STATUS_PROCESS_DMA))

  017c4	e59d301c	 ldr         r3, [sp, #0x1C]
  017c8	e3530001	 cmp         r3, #1
  017cc	0a000008	 beq         |$LN6@IssueTrans|
  017d0	e59d301c	 ldr         r3, [sp, #0x1C]
  017d4	e3530004	 cmp         r3, #4
  017d8	0a000005	 beq         |$LN6@IssueTrans|
  017dc	e59d301c	 ldr         r3, [sp, #0x1C]
  017e0	e3530005	 cmp         r3, #5
  017e4	0a000002	 beq         |$LN6@IssueTrans|
  017e8	e59d301c	 ldr         r3, [sp, #0x1C]
  017ec	e3530006	 cmp         r3, #6
  017f0	1a000094	 bne         |$LN7@IssueTrans|
  017f4		 |$LN6@IssueTrans|

; 502  :             {                              
; 503  :                 if (((dwPrevStatus == STATUS_WAIT_TRANSFER) || 
; 504  :                      (dwPrevStatus == STATUS_WAIT_MORE_DATA)||
; 505  :                      (dwPrevStatus == STATUS_SEND_MORE_DATA)) && 
; 506  :                     (USB_ENDPOINT(m_bEndPointAddress) != 0) &&
; 507  :                     (USB_ENDPOINT_DIRECTION_OUT(m_bEndPointAddress)) &&
; 508  :                     (m_pPipe->GetTransferMode() != TRANSFER_FIFO))

  017f4	e59d301c	 ldr         r3, [sp, #0x1C]
  017f8	e3530001	 cmp         r3, #1
  017fc	0a000005	 beq         |$LN4@IssueTrans|
  01800	e59d301c	 ldr         r3, [sp, #0x1C]
  01804	e3530004	 cmp         r3, #4
  01808	0a000002	 beq         |$LN4@IssueTrans|
  0180c	e59d301c	 ldr         r3, [sp, #0x1C]
  01810	e3530005	 cmp         r3, #5
  01814	1a000014	 bne         |$LN5@IssueTrans|
  01818		 |$LN4@IssueTrans|
  01818	e59d3088	 ldr         r3, [sp, #0x88]
  0181c	e2833008	 add         r3, r3, #8
  01820	e5d33000	 ldrb        r3, [r3]
  01824	e313000f	 tst         r3, #0xF
  01828	0a00000f	 beq         |$LN5@IssueTrans|
  0182c	e59d3088	 ldr         r3, [sp, #0x88]
  01830	e2833008	 add         r3, r3, #8
  01834	e5d33000	 ldrb        r3, [r3]
  01838	e3130080	 tst         r3, #0x80
  0183c	1a00000a	 bne         |$LN5@IssueTrans|
  01840	e59d3088	 ldr         r3, [sp, #0x88]
  01844	e5930000	 ldr         r0, [r3]
  01848	eb000000	 bl          |?GetTransferMode@CPipe@@QAAEXZ|
  0184c	e5cd0064	 strb        r0, [sp, #0x64]
  01850	e5dd3064	 ldrb        r3, [sp, #0x64]
  01854	e3530000	 cmp         r3, #0
  01858	0a000003	 beq         |$LN5@IssueTrans|

; 509  :                         pTmp->SetStatus(STATUS_PROCESS_DMA);

  0185c	e3a01006	 mov         r1, #6
  01860	e59d0018	 ldr         r0, [sp, #0x18]
  01864	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|

; 510  :                 else                 

  01868	ea000002	 b           |$LN3@IssueTrans|
  0186c		 |$LN5@IssueTrans|

; 511  :                         pTmp->SetStatus(STATUS_WAIT_RESPONSE);

  0186c	e3a01003	 mov         r1, #3
  01870	e59d0018	 ldr         r0, [sp, #0x18]
  01874	eb000000	 bl          |?SetStatus@CQTD@@QAAXK@Z|
  01878		 |$LN3@IssueTrans|

; 512  : 
; 513  :                 // Configure Endpoint here ... not sure if it should
; 514  :                 // be the case.
; 515  :                 // Put the data into FIFO       
; 516  :                 //RETAILMSG(1, (TEXT("IssueTransfer::EP %d\r\n"), USB_ENDPOINT((m_pPipe->GetEndptDescriptor()).bEndpointAddress)));
; 517  :                 DEBUGMSG(ZONE_HCD, (TEXT("IssueTransfer:EP %d, mapped %d\r\n"), 
; 518  :                     USB_ENDPOINT((m_pPipe->GetEndptDescriptor()).bEndpointAddress), m_pPipe->GetMappedEndPoint()));

  01878	e59f3218	 ldr         r3, [pc, #0x218]
  0187c	e5933440	 ldr         r3, [r3, #0x440]
  01880	e3130001	 tst         r3, #1
  01884	0a000013	 beq         |$LN22@IssueTrans|
  01888	e59d3088	 ldr         r3, [sp, #0x88]
  0188c	e5930000	 ldr         r0, [r3]
  01890	eb000000	 bl          |?GetMappedEndPoint@CPipe@@QAAEXZ|
  01894	e5cd0065	 strb        r0, [sp, #0x65]
  01898	e28d1020	 add         r1, sp, #0x20
  0189c	e59d3088	 ldr         r3, [sp, #0x88]
  018a0	e5930000	 ldr         r0, [r3]
  018a4	eb000000	 bl          |?GetEndptDescriptor@CPipe@@QAA?AU_USB_ENDPOINT_DESCRIPTOR@@XZ|
  018a8	e58d0068	 str         r0, [sp, #0x68]
  018ac	e5dd3065	 ldrb        r3, [sp, #0x65]
  018b0	e1a02003	 mov         r2, r3
  018b4	e59d3068	 ldr         r3, [sp, #0x68]
  018b8	e2833002	 add         r3, r3, #2
  018bc	e5d33000	 ldrb        r3, [r3]
  018c0	e203100f	 and         r1, r3, #0xF
  018c4	e59f01c8	 ldr         r0, [pc, #0x1C8]
  018c8	eb000000	 bl          NKDbgPrintfW
  018cc	e3a03001	 mov         r3, #1
  018d0	e58d306c	 str         r3, [sp, #0x6C]
  018d4	ea000001	 b           |$LN23@IssueTrans|
  018d8		 |$LN22@IssueTrans|
  018d8	e3a03000	 mov         r3, #0
  018dc	e58d306c	 str         r3, [sp, #0x6C]
  018e0		 |$LN23@IssueTrans|

; 519  :                 m_pPipe->m_pCMhcd->InitFIFO(m_pPipe);

  018e0	e59d3088	 ldr         r3, [sp, #0x88]
  018e4	e5931000	 ldr         r1, [r3]
  018e8	e59d3088	 ldr         r3, [sp, #0x88]
  018ec	e5933000	 ldr         r3, [r3]
  018f0	e283300c	 add         r3, r3, #0xC
  018f4	e5932000	 ldr         r2, [r3]
  018f8	e59d3088	 ldr         r3, [sp, #0x88]
  018fc	e5933000	 ldr         r3, [r3]
  01900	e283300c	 add         r3, r3, #0xC
  01904	e5930000	 ldr         r0, [r3]
  01908	e5923000	 ldr         r3, [r2]
  0190c	e2833040	 add         r3, r3, #0x40
  01910	e5933000	 ldr         r3, [r3]
  01914	e1a0e00f	 mov         lr, pc
  01918	e12fff13	 bx          r3

; 520  : #pragma warning(push)
; 521  : #pragma warning(disable : 4238)
; 522  :                 m_pPipe->m_pCMhcd->ConfigEP(&(m_pPipe->GetEndptDescriptor()), 
; 523  :                     m_pPipe->GetMappedEndPoint(), m_pPipe->GetDeviceAddress(), m_pPipe->m_bHubAddress,
; 524  :                     m_pPipe->m_bHubPort, m_pPipe->GetSpeed(), m_pPipe->GetTransferMode(), FALSE);

  0191c	e59d3088	 ldr         r3, [sp, #0x88]
  01920	e5930000	 ldr         r0, [r3]
  01924	eb000000	 bl          |?GetTransferMode@CPipe@@QAAEXZ|
  01928	e5cd0070	 strb        r0, [sp, #0x70]
  0192c	e59d3088	 ldr         r3, [sp, #0x88]
  01930	e5930000	 ldr         r0, [r3]
  01934	eb000000	 bl          |?GetSpeed@CPipe@@QAAEXZ|
  01938	e5cd0071	 strb        r0, [sp, #0x71]
  0193c	e59d3088	 ldr         r3, [sp, #0x88]
  01940	e5930000	 ldr         r0, [r3]
  01944	eb000000	 bl          |?GetDeviceAddress@CPipe@@QAAEXZ|
  01948	e5cd0072	 strb        r0, [sp, #0x72]
  0194c	e59d3088	 ldr         r3, [sp, #0x88]
  01950	e5930000	 ldr         r0, [r3]
  01954	eb000000	 bl          |?GetMappedEndPoint@CPipe@@QAAEXZ|
  01958	e5cd0073	 strb        r0, [sp, #0x73]
  0195c	e28d1028	 add         r1, sp, #0x28
  01960	e59d3088	 ldr         r3, [sp, #0x88]
  01964	e5930000	 ldr         r0, [r3]
  01968	eb000000	 bl          |?GetEndptDescriptor@CPipe@@QAA?AU_USB_ENDPOINT_DESCRIPTOR@@XZ|
  0196c	e58d0074	 str         r0, [sp, #0x74]
  01970	e3a03000	 mov         r3, #0
  01974	e58d3010	 str         r3, [sp, #0x10]
  01978	e5dd3070	 ldrb        r3, [sp, #0x70]
  0197c	e58d300c	 str         r3, [sp, #0xC]
  01980	e5dd3071	 ldrb        r3, [sp, #0x71]
  01984	e58d3008	 str         r3, [sp, #8]
  01988	e59d3088	 ldr         r3, [sp, #0x88]
  0198c	e5933000	 ldr         r3, [r3]
  01990	e2833009	 add         r3, r3, #9
  01994	e5d33000	 ldrb        r3, [r3]
  01998	e58d3004	 str         r3, [sp, #4]
  0199c	e59d3088	 ldr         r3, [sp, #0x88]
  019a0	e5933000	 ldr         r3, [r3]
  019a4	e2833008	 add         r3, r3, #8
  019a8	e5d33000	 ldrb        r3, [r3]
  019ac	e58d3000	 str         r3, [sp]
  019b0	e5dd3072	 ldrb        r3, [sp, #0x72]
  019b4	e5dd2073	 ldrb        r2, [sp, #0x73]
  019b8	e59d1074	 ldr         r1, [sp, #0x74]
  019bc	e59d0088	 ldr         r0, [sp, #0x88]
  019c0	e5900000	 ldr         r0, [r0]
  019c4	e280000c	 add         r0, r0, #0xC
  019c8	e590e000	 ldr         lr, [r0]
  019cc	e59d0088	 ldr         r0, [sp, #0x88]
  019d0	e5900000	 ldr         r0, [r0]
  019d4	e280000c	 add         r0, r0, #0xC
  019d8	e5904000	 ldr         r4, [r0]
  019dc	e59e0000	 ldr         r0, [lr]
  019e0	e280e04c	 add         lr, r0, #0x4C
  019e4	e1a00004	 mov         r0, r4
  019e8	e59e4000	 ldr         r4, [lr]
  019ec	e1a0e00f	 mov         lr, pc
  019f0	e12fff14	 bx          r4

; 525  : #pragma warning(pop)
; 526  :                 m_pPipe->m_pCMhcd->ProcessTD(m_pPipe->GetMappedEndPoint(),(void *)pTmp);                                      

  019f4	e59d3088	 ldr         r3, [sp, #0x88]
  019f8	e5930000	 ldr         r0, [r3]
  019fc	eb000000	 bl          |?GetMappedEndPoint@CPipe@@QAAEXZ|
  01a00	e5cd0078	 strb        r0, [sp, #0x78]
  01a04	e59d2018	 ldr         r2, [sp, #0x18]
  01a08	e5dd1078	 ldrb        r1, [sp, #0x78]
  01a0c	e59d3088	 ldr         r3, [sp, #0x88]
  01a10	e5933000	 ldr         r3, [r3]
  01a14	e283300c	 add         r3, r3, #0xC
  01a18	e593e000	 ldr         lr, [r3]
  01a1c	e59d3088	 ldr         r3, [sp, #0x88]
  01a20	e5933000	 ldr         r3, [r3]
  01a24	e283300c	 add         r3, r3, #0xC
  01a28	e5930000	 ldr         r0, [r3]
  01a2c	e59e3000	 ldr         r3, [lr]
  01a30	e2833050	 add         r3, r3, #0x50
  01a34	e5933000	 ldr         r3, [r3]
  01a38	e1a0e00f	 mov         lr, pc
  01a3c	e12fff13	 bx          r3

; 527  :                 break; // jump out from the while loop

  01a40	ea000004	 b           |$LN9@IssueTrans|

; 528  :             }
; 529  :             else 

  01a44	ea000002	 b           |$LN2@IssueTrans|
  01a48		 |$LN7@IssueTrans|

; 530  :             {
; 531  :                 //DEBUGMSG(ZONE_ERROR, (TEXT("GetStatus return %d for this\r\n"), pTmp->GetStatus()));
; 532  :                 // I guess we don't need to continue loop but break it.
; 533  :                 dwStatus = ERROR_NOT_READY;

  01a48	e3a03015	 mov         r3, #0x15
  01a4c	e58d3014	 str         r3, [sp, #0x14]

; 534  :                 break;

  01a50	ea000000	 b           |$LN9@IssueTrans|
  01a54		 |$LN2@IssueTrans|

; 535  :             }
; 536  :                
; 537  :         }          

  01a54	eaffff33	 b           |$LN10@IssueTrans|
  01a58		 |$LN9@IssueTrans|

; 538  :         // Finally, check if the current list in m_pQTDList has been completed.
; 539  :         if (pTmp == NULL)

  01a58	e59d3018	 ldr         r3, [sp, #0x18]
  01a5c	e3530000	 cmp         r3, #0
  01a60	1a000005	 bne         |$LN1@IssueTrans|

; 540  :         {
; 541  :             dwStatus = ERROR_SUCCESS;

  01a64	e3a03000	 mov         r3, #0
  01a68	e58d3014	 str         r3, [sp, #0x14]

; 542  :             m_pCQHTDList = NULL;

  01a6c	e59d3088	 ldr         r3, [sp, #0x88]
  01a70	e2832004	 add         r2, r3, #4
  01a74	e3a03000	 mov         r3, #0
  01a78	e5823000	 str         r3, [r2]
  01a7c		 |$LN1@IssueTrans|
  01a7c		 |$LN15@IssueTrans|
  01a7c		 |$LN13@IssueTrans|
  01a7c		 |$EXIT$42241|

; 543  :         }
; 544  :     }
; 545  : EXIT:    
; 546  :     return dwStatus;

  01a7c	e59d3014	 ldr         r3, [sp, #0x14]
  01a80	e58d3044	 str         r3, [sp, #0x44]

; 547  : }

  01a84	e59d0044	 ldr         r0, [sp, #0x44]
  01a88	e28dd07c	 add         sp, sp, #0x7C
  01a8c	e89d6010	 ldmia       sp, {r4, sp, lr}
  01a90	e12fff1e	 bx          lr
  01a94		 |$LN27@IssueTrans|
  01a94		 |$LN28@IssueTrans|
  01a94	00000000	 DCD         |??_C@_1EC@NLCPEMP@?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAm?$AAa?$AAp?$AAp?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@|
  01a98		 |$LN29@IssueTrans|
  01a98	00000000	 DCD         |dpCurSettings|
  01a9c		 |$LN30@IssueTrans|
  01a9c	00000000	 DCD         |??_C@_1EC@BKBMLOGJ@?$AAC?$AAQ?$AAT?$AAD?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?0?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6@|
  01aa0		 |$LN31@IssueTrans|
  01aa0	00000000	 DCD         |??_C@_1FE@JKLFFKN@?$AAT?$AAh?$AAe?$AAr?$AAe?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAs?$AAo?$AAm?$AAe?$AAt?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAw?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAs@|
  01aa4		 |$M42876|

			 ENDP  ; |?IssueTransfer@CQH@@QAAKPAVCQTD@@@Z|, CQH::IssueTransfer

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.h

  00000			 AREA	 |.pdata|, PDATA
|$T42889| DCD	|$LN5@GetDeviceA|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDeviceAddress@CPipe@@QAAEXZ| PROC	; CPipe::GetDeviceAddress

; 97   :     UCHAR GetDeviceAddress() { return m_bDeviceAddress; };

  00000		 |$LN5@GetDeviceA|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42886|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e283303b	 add         r3, r3, #0x3B
  00018	e5d33000	 ldrb        r3, [r3]
  0001c	e5cd3000	 strb        r3, [sp]
  00020	e5dd0000	 ldrb        r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M42887|

			 ENDP  ; |?GetDeviceAddress@CPipe@@QAAEXZ|, CPipe::GetDeviceAddress


  00000			 AREA	 |.pdata|, PDATA
|$T42901| DCD	|$LN9@GetSpeed|
	DCD	0x40001f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetSpeed@CPipe@@QAAEXZ| PROC		; CPipe::GetSpeed

; 98   :     UCHAR GetSpeed() {return (UCHAR)(m_fIsHighSpeed? HIGH_SPEED : (m_fIsLowSpeed? LOW_SPEED: FULL_SPEED));};

  00000		 |$LN9@GetSpeed|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M42898|
  00010	e59d3014	 ldr         r3, [sp, #0x14]
  00014	e2833040	 add         r3, r3, #0x40
  00018	e5933000	 ldr         r3, [r3]
  0001c	e3530000	 cmp         r3, #0
  00020	0a000002	 beq         |$LN5@GetSpeed|
  00024	e3a03001	 mov         r3, #1
  00028	e58d3004	 str         r3, [sp, #4]
  0002c	ea00000b	 b           |$LN6@GetSpeed|
  00030		 |$LN5@GetSpeed|
  00030	e59d3014	 ldr         r3, [sp, #0x14]
  00034	e283303c	 add         r3, r3, #0x3C
  00038	e5933000	 ldr         r3, [r3]
  0003c	e3530000	 cmp         r3, #0
  00040	0a000002	 beq         |$LN3@GetSpeed|
  00044	e3a03003	 mov         r3, #3
  00048	e58d3008	 str         r3, [sp, #8]
  0004c	ea000001	 b           |$LN4@GetSpeed|
  00050		 |$LN3@GetSpeed|
  00050	e3a03002	 mov         r3, #2
  00054	e58d3008	 str         r3, [sp, #8]
  00058		 |$LN4@GetSpeed|
  00058	e59d3008	 ldr         r3, [sp, #8]
  0005c	e58d3004	 str         r3, [sp, #4]
  00060		 |$LN6@GetSpeed|
  00060	e59d3004	 ldr         r3, [sp, #4]
  00064	e20330ff	 and         r3, r3, #0xFF
  00068	e5cd3000	 strb        r3, [sp]
  0006c	e5dd0000	 ldrb        r0, [sp]
  00070	e28dd00c	 add         sp, sp, #0xC
  00074	e89d6000	 ldmia       sp, {sp, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$M42899|

			 ENDP  ; |?GetSpeed@CPipe@@QAAEXZ|, CPipe::GetSpeed

	EXPORT	|?SetDeviceAddress@CQH@@QAAXEE@Z|	; CQH::SetDeviceAddress

  00048			 AREA	 |.pdata|, PDATA
|$T42914| DCD	|$LN11@SetDeviceA|
	DCD	0x40005004
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.cpp

  01aa4			 AREA	 |.text|, CODE, ARM

  01aa4		 |?SetDeviceAddress@CQH@@QAAXEE@Z| PROC	; CQH::SetDeviceAddress

; 560  : {

  01aa4		 |$LN11@SetDeviceA|
  01aa4	e1a0c00d	 mov         r12, sp
  01aa8	e92d0007	 stmdb       sp!, {r0 - r2}
  01aac	e92d5010	 stmdb       sp!, {r4, r12, lr}
  01ab0	e24dd02c	 sub         sp, sp, #0x2C
  01ab4		 |$M42911|

; 561  :     // Need to handle HUB case later on
; 562  :     PHSMUSB_T pOTG;
; 563  :     CPipe *pPipe = GetPipe();        

  01ab4	e59d0038	 ldr         r0, [sp, #0x38]
  01ab8	eb000000	 bl          |?GetPipe@CQH@@QAAPAVCPipe@@XZ|
  01abc	e58d0018	 str         r0, [sp, #0x18]
  01ac0	e59d3018	 ldr         r3, [sp, #0x18]
  01ac4	e58d3008	 str         r3, [sp, #8]

; 564  :     if (!pPipe)

  01ac8	e59d3008	 ldr         r3, [sp, #8]
  01acc	e3530000	 cmp         r3, #0
  01ad0	1a00000b	 bne         |$LN2@SetDeviceA|

; 565  :     {
; 566  :         DEBUGMSG(ZONE_ERROR, (TEXT("CQTD::ClearRxPktRdy -> not able to read the associated pipe\r\n")));

  01ad4	e59f3100	 ldr         r3, [pc, #0x100]
  01ad8	e5933440	 ldr         r3, [r3, #0x440]
  01adc	e3130901	 tst         r3, #1, 18
  01ae0	0a000004	 beq         |$LN5@SetDeviceA|
  01ae4	e59f00f4	 ldr         r0, [pc, #0xF4]
  01ae8	eb000000	 bl          NKDbgPrintfW
  01aec	e3a03001	 mov         r3, #1
  01af0	e58d301c	 str         r3, [sp, #0x1C]
  01af4	ea000001	 b           |$LN6@SetDeviceA|
  01af8		 |$LN5@SetDeviceA|
  01af8	e3a03000	 mov         r3, #0
  01afc	e58d301c	 str         r3, [sp, #0x1C]
  01b00		 |$LN6@SetDeviceA|

; 567  :         return;

  01b00	ea000031	 b           |$LN3@SetDeviceA|
  01b04		 |$LN2@SetDeviceA|

; 568  :     }
; 569  :     pOTG = (PHSMUSB_T)pPipe->m_pCMhcd->GetOTGContext();

  01b04	e59d3008	 ldr         r3, [sp, #8]
  01b08	e283300c	 add         r3, r3, #0xC
  01b0c	e5930000	 ldr         r0, [r3]
  01b10	eb000000	 bl          |?GetOTGContext@CHcd@@QAAPAXXZ|
  01b14	e58d0020	 str         r0, [sp, #0x20]
  01b18	e59d3020	 ldr         r3, [sp, #0x20]
  01b1c	e58d300c	 str         r3, [sp, #0xC]

; 570  :     if (pOTG == NULL)

  01b20	e59d300c	 ldr         r3, [sp, #0xC]
  01b24	e3530000	 cmp         r3, #0
  01b28	1a00000b	 bne         |$LN1@SetDeviceA|

; 571  :     {
; 572  :         DEBUGMSG(ZONE_ERROR, (TEXT("CQTD::ClearRxPktRdy: Get pOTG failed\r\n")));        

  01b2c	e59f30a8	 ldr         r3, [pc, #0xA8]
  01b30	e5933440	 ldr         r3, [r3, #0x440]
  01b34	e3130901	 tst         r3, #1, 18
  01b38	0a000004	 beq         |$LN7@SetDeviceA|
  01b3c	e59f0094	 ldr         r0, [pc, #0x94]
  01b40	eb000000	 bl          NKDbgPrintfW
  01b44	e3a03001	 mov         r3, #1
  01b48	e58d3024	 str         r3, [sp, #0x24]
  01b4c	ea000001	 b           |$LN8@SetDeviceA|
  01b50		 |$LN7@SetDeviceA|
  01b50	e3a03000	 mov         r3, #0
  01b54	e58d3024	 str         r3, [sp, #0x24]
  01b58		 |$LN8@SetDeviceA|

; 573  :         return;

  01b58	ea00001b	 b           |$LN3@SetDeviceA|
  01b5c		 |$LN1@SetDeviceA|

; 574  :     }
; 575  : 
; 576  :     m_pPipe->m_pCMhcd->SetDeviceAddress(pPipe->GetMappedEndPoint(), ucDeviceAddress, 
; 577  :         pPipe->m_bHubAddress,pPipe->m_bHubPort, outdir);     

  01b5c	e59d0008	 ldr         r0, [sp, #8]
  01b60	eb000000	 bl          |?GetMappedEndPoint@CPipe@@QAAEXZ|
  01b64	e5cd0028	 strb        r0, [sp, #0x28]
  01b68	e5dd3040	 ldrb        r3, [sp, #0x40]
  01b6c	e58d3004	 str         r3, [sp, #4]
  01b70	e59d3008	 ldr         r3, [sp, #8]
  01b74	e2833009	 add         r3, r3, #9
  01b78	e5d33000	 ldrb        r3, [r3]
  01b7c	e58d3000	 str         r3, [sp]
  01b80	e59d3008	 ldr         r3, [sp, #8]
  01b84	e2833008	 add         r3, r3, #8
  01b88	e5d33000	 ldrb        r3, [r3]
  01b8c	e5dd203c	 ldrb        r2, [sp, #0x3C]
  01b90	e5dd1028	 ldrb        r1, [sp, #0x28]
  01b94	e59d0038	 ldr         r0, [sp, #0x38]
  01b98	e5900000	 ldr         r0, [r0]
  01b9c	e280000c	 add         r0, r0, #0xC
  01ba0	e590e000	 ldr         lr, [r0]
  01ba4	e59d0038	 ldr         r0, [sp, #0x38]
  01ba8	e5900000	 ldr         r0, [r0]
  01bac	e280000c	 add         r0, r0, #0xC
  01bb0	e5904000	 ldr         r4, [r0]
  01bb4	e59e0000	 ldr         r0, [lr]
  01bb8	e280e064	 add         lr, r0, #0x64
  01bbc	e1a00004	 mov         r0, r4
  01bc0	e59e4000	 ldr         r4, [lr]
  01bc4	e1a0e00f	 mov         lr, pc
  01bc8	e12fff14	 bx          r4
  01bcc		 |$LN3@SetDeviceA|

; 578  :     
; 579  : }

  01bcc	e28dd02c	 add         sp, sp, #0x2C
  01bd0	e89d6010	 ldmia       sp, {r4, sp, lr}
  01bd4	e12fff1e	 bx          lr
  01bd8		 |$LN12@SetDeviceA|
  01bd8		 |$LN13@SetDeviceA|
  01bd8	00000000	 DCD         |??_C@_1EO@FIKDIPMK@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAC?$AAl?$AAe?$AAa?$AAr?$AAR?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?3?$AA?5?$AAG?$AAe?$AAt?$AA?5?$AAp?$AAO?$AAT?$AAG?$AA?5?$AAf?$AAa@|
  01bdc		 |$LN14@SetDeviceA|
  01bdc	00000000	 DCD         |dpCurSettings|
  01be0		 |$LN15@SetDeviceA|
  01be0	00000000	 DCD         |??_C@_1HM@EEJMOJLC@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAC?$AAl?$AAe?$AAa?$AAr?$AAR?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?5?$AA?9?$AA?$DO?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAa?$AAb?$AAl?$AAe?$AA?5@|
  01be4		 |$M42912|

			 ENDP  ; |?SetDeviceAddress@CQH@@QAAXEE@Z|, CQH::SetDeviceAddress

	EXPORT	|??_C@_1FC@LHONHBCB@?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AA?5?$AAS?$AAe?$AAt?$AAM?$AAa?$AAx?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs@| [ DATA ] ; `string'
	EXPORT	|?SetMaxPacketLength@CQH@@QAAXK@Z|	; CQH::SetMaxPacketLength

  00050			 AREA	 |.pdata|, PDATA
|$T42925| DCD	|$LN7@SetMaxPack|
	DCD	0x40001504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@LHONHBCB@?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AA?5?$AAS?$AAe?$AAt?$AAM?$AAa?$AAx?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs@| DCB "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, " "
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "M", 0x0, "a", 0x0, "x"
	DCB	0x0, "P", 0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t"
	DCB	0x0, "L", 0x0, "e", 0x0, "n", 0x0, "g", 0x0, "t", 0x0, "h"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, " ", 0x0, "(", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  01be4			 AREA	 |.text|, CODE, ARM

  01be4		 |?SetMaxPacketLength@CQH@@QAAXK@Z| PROC ; CQH::SetMaxPacketLength

; 590  : {

  01be4		 |$LN7@SetMaxPack|
  01be4	e1a0c00d	 mov         r12, sp
  01be8	e92d0003	 stmdb       sp!, {r0, r1}
  01bec	e92d5000	 stmdb       sp!, {r12, lr}
  01bf0	e24dd004	 sub         sp, sp, #4
  01bf4		 |$M42922|

; 591  :     // To be implemented
; 592  : #ifdef DEBUG
; 593  :     DEBUGMSG(ZONE_HCD, (TEXT("Handle SetMaxPacketLength request (%d)\r\n"), dwMaxPacketSize));

  01bf4	e59f3038	 ldr         r3, [pc, #0x38]
  01bf8	e5933440	 ldr         r3, [r3, #0x440]
  01bfc	e3130001	 tst         r3, #1
  01c00	0a000005	 beq         |$LN3@SetMaxPack|
  01c04	e59d1010	 ldr         r1, [sp, #0x10]
  01c08	e59f0020	 ldr         r0, [pc, #0x20]
  01c0c	eb000000	 bl          NKDbgPrintfW
  01c10	e3a03001	 mov         r3, #1
  01c14	e58d3000	 str         r3, [sp]
  01c18	ea000001	 b           |$LN4@SetMaxPack|
  01c1c		 |$LN3@SetMaxPack|
  01c1c	e3a03000	 mov         r3, #0
  01c20	e58d3000	 str         r3, [sp]
  01c24		 |$LN4@SetMaxPack|

; 594  : #else
; 595  :     UNREFERENCED_PARAMETER(dwMaxPacketSize);
; 596  : #endif
; 597  : }

  01c24	e28dd004	 add         sp, sp, #4
  01c28	e89d6000	 ldmia       sp, {sp, lr}
  01c2c	e12fff1e	 bx          lr
  01c30		 |$LN8@SetMaxPack|
  01c30		 |$LN9@SetMaxPack|
  01c30	00000000	 DCD         |??_C@_1FC@LHONHBCB@?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AA?5?$AAS?$AAe?$AAt?$AAM?$AAa?$AAx?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs@|
  01c34		 |$LN10@SetMaxPack|
  01c34	00000000	 DCD         |dpCurSettings|
  01c38		 |$M42923|

			 ENDP  ; |?SetMaxPacketLength@CQH@@QAAXK@Z|, CQH::SetMaxPacketLength

	END
