; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\OMAP3530\MUSB\MUSBHCD\USB2COM\sync.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|SetEvent|
	EXPORT	|GetCurrentThreadId|
	EXPORT	|?EnterCritSec_Ex@CritSec_Ex@@QAA?AW4e_CritSec_Status@@K@Z| ; CritSec_Ex::EnterCritSec_Ex
	IMPORT	|WaitForSingleObject|
	IMPORT	|LeaveCriticalSection|
	IMPORT	|EnterCriticalSection|
	IMPORT	|GetTickCount|

  00000			 AREA	 |.pdata|, PDATA
|$T33819| DCD	|$LN22@EnterCritS|
	DCD	0x40009104
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\usb2com\sync.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?EnterCritSec_Ex@CritSec_Ex@@QAA?AW4e_CritSec_Status@@K@Z| PROC ; CritSec_Ex::EnterCritSec_Ex

; 132  : {

  00000		 |$LN22@EnterCritS|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd030	 sub         sp, sp, #0x30
  00010		 |$M33816|

; 133  :     DWORD r;
; 134  :     ULONG tStart, tNow, tLeft;
; 135  :     CritSec_Status retval = CSS_SUCCESS;

  00010	e3a03000	 mov         r3, #0
  00014	e58d3000	 str         r3, [sp]

; 136  :     BOOL fWaiting;
; 137  :     DWORD me;
; 138  : 
; 139  :     tStart = GetTickCount();

  00018	eb000000	 bl          GetTickCount
  0001c	e58d0020	 str         r0, [sp, #0x20]
  00020	e59d3020	 ldr         r3, [sp, #0x20]
  00024	e58d3004	 str         r3, [sp, #4]

; 140  :     r = ! WAIT_TIMEOUT;  // anything other than WAIT_TIMEOUT will suffice

  00028	e3a03000	 mov         r3, #0
  0002c	e58d300c	 str         r3, [sp, #0xC]

; 141  :     me = GetCurrentThreadId();

  00030	eb000000	 bl          GetCurrentThreadId
  00034	e58d0024	 str         r0, [sp, #0x24]
  00038	e59d3024	 ldr         r3, [sp, #0x24]
  0003c	e58d3010	 str         r3, [sp, #0x10]

; 142  : 
; 143  :     // Help destruction proceed more quickly by preventing anyone new from using
; 144  :     // the IPC objects when we're pending destruction. Do this here for speed
; 145  :     // and again within the critical section for correctness.
; 146  :     if (m_fClosing)

  00040	e59d3038	 ldr         r3, [sp, #0x38]
  00044	e2833024	 add         r3, r3, #0x24
  00048	e5933000	 ldr         r3, [r3]
  0004c	e3530000	 cmp         r3, #0
  00050	0a000002	 beq         |$LN17@EnterCritS|

; 147  :         return CSS_DESTROYED;

  00054	e3a03001	 mov         r3, #1
  00058	e58d301c	 str         r3, [sp, #0x1C]
  0005c	ea000074	 b           |$LN18@EnterCritS|
  00060		 |$LN17@EnterCritS|

; 148  : 
; 149  :     EnterCriticalSection(&m_cs);

  00060	e59d3038	 ldr         r3, [sp, #0x38]
  00064	e2830010	 add         r0, r3, #0x10
  00068	eb000000	 bl          EnterCriticalSection
  0006c		 |$LN16@EnterCritS|

; 150  :     do {
; 151  :         fWaiting = FALSE;

  0006c	e3a03000	 mov         r3, #0
  00070	e58d3014	 str         r3, [sp, #0x14]

; 152  : 
; 153  :         if (m_fClosing) {

  00074	e59d3038	 ldr         r3, [sp, #0x38]
  00078	e2833024	 add         r3, r3, #0x24
  0007c	e5933000	 ldr         r3, [r3]
  00080	e3530000	 cmp         r3, #0
  00084	0a000006	 beq         |$LN13@EnterCritS|

; 154  :             SetEvent(m_hev);

  00088	e59d3038	 ldr         r3, [sp, #0x38]
  0008c	e283300c	 add         r3, r3, #0xC
  00090	e5930000	 ldr         r0, [r3]
  00094	eb000000	 bl          SetEvent

; 155  :             retval = CSS_DESTROYED;

  00098	e3a03001	 mov         r3, #1
  0009c	e58d3000	 str         r3, [sp]
  000a0	ea00002d	 b           |$LN12@EnterCritS|
  000a4		 |$LN13@EnterCritS|

; 156  :         }
; 157  :         else if (r == WAIT_TIMEOUT) {

  000a4	e59d200c	 ldr         r2, [sp, #0xC]
  000a8	e3a03c01	 mov         r3, #1, 24
  000ac	e3833002	 orr         r3, r3, #2
  000b0	e1520003	 cmp         r2, r3
  000b4	1a000002	 bne         |$LN11@EnterCritS|

; 158  :             retval = CSS_TIMEOUT;

  000b8	e3a03002	 mov         r3, #2
  000bc	e58d3000	 str         r3, [sp]
  000c0	ea000025	 b           |$LN10@EnterCritS|
  000c4		 |$LN11@EnterCritS|

; 159  :         }
; 160  :         else if (m_hOwnerThread == 0) {

  000c4	e59d3038	 ldr         r3, [sp, #0x38]
  000c8	e5933000	 ldr         r3, [r3]
  000cc	e3530000	 cmp         r3, #0
  000d0	1a000009	 bne         |$LN9@EnterCritS|

; 161  :             m_hOwnerThread = me;

  000d4	e59d2010	 ldr         r2, [sp, #0x10]
  000d8	e59d3038	 ldr         r3, [sp, #0x38]
  000dc	e5832000	 str         r2, [r3]

; 162  :             m_cOwnerReferences = 1;

  000e0	e59d3038	 ldr         r3, [sp, #0x38]
  000e4	e2832004	 add         r2, r3, #4
  000e8	e3a03001	 mov         r3, #1
  000ec	e5823000	 str         r3, [r2]

; 163  :             retval = CSS_SUCCESS;

  000f0	e3a03000	 mov         r3, #0
  000f4	e58d3000	 str         r3, [sp]
  000f8	ea000017	 b           |$LN8@EnterCritS|
  000fc		 |$LN9@EnterCritS|

; 164  :         }
; 165  :         else if (m_hOwnerThread == me) {

  000fc	e59d3038	 ldr         r3, [sp, #0x38]
  00100	e5932000	 ldr         r2, [r3]
  00104	e59d3010	 ldr         r3, [sp, #0x10]
  00108	e1520003	 cmp         r2, r3
  0010c	1a000009	 bne         |$LN7@EnterCritS|

; 166  :             ++m_cOwnerReferences;

  00110	e59d3038	 ldr         r3, [sp, #0x38]
  00114	e2833004	 add         r3, r3, #4
  00118	e5933000	 ldr         r3, [r3]
  0011c	e2832001	 add         r2, r3, #1
  00120	e59d3038	 ldr         r3, [sp, #0x38]
  00124	e2833004	 add         r3, r3, #4
  00128	e5832000	 str         r2, [r3]

; 167  :             retval = CSS_SUCCESS;

  0012c	e3a03000	 mov         r3, #0
  00130	e58d3000	 str         r3, [sp]

; 168  :         }
; 169  :         else {

  00134	ea000008	 b           |$LN6@EnterCritS|
  00138		 |$LN7@EnterCritS|

; 170  :             // Oh well, we've got to wait.
; 171  :             ++m_cWaitingThreads;

  00138	e59d3038	 ldr         r3, [sp, #0x38]
  0013c	e2833008	 add         r3, r3, #8
  00140	e5933000	 ldr         r3, [r3]
  00144	e2832001	 add         r2, r3, #1
  00148	e59d3038	 ldr         r3, [sp, #0x38]
  0014c	e2833008	 add         r3, r3, #8
  00150	e5832000	 str         r2, [r3]

; 172  :             fWaiting = TRUE;

  00154	e3a03001	 mov         r3, #1
  00158	e58d3014	 str         r3, [sp, #0x14]
  0015c		 |$LN6@EnterCritS|
  0015c		 |$LN8@EnterCritS|
  0015c		 |$LN10@EnterCritS|
  0015c		 |$LN12@EnterCritS|

; 173  :         }
; 174  :         LeaveCriticalSection(&m_cs);

  0015c	e59d3038	 ldr         r3, [sp, #0x38]
  00160	e2830010	 add         r0, r3, #0x10
  00164	eb000000	 bl          LeaveCriticalSection

; 175  : 
; 176  :         if (fWaiting) {

  00168	e59d3014	 ldr         r3, [sp, #0x14]
  0016c	e3530000	 cmp         r3, #0
  00170	0a00002a	 beq         |$LN5@EnterCritS|

; 177  :             if (ulTimeout != INFINITE) {

  00174	e59d303c	 ldr         r3, [sp, #0x3C]
  00178	e3730001	 cmn         r3, #1
  0017c	0a000013	 beq         |$LN4@EnterCritS|

; 178  :                 tNow = GetTickCount();

  00180	eb000000	 bl          GetTickCount
  00184	e58d0028	 str         r0, [sp, #0x28]
  00188	e59d3028	 ldr         r3, [sp, #0x28]
  0018c	e58d3018	 str         r3, [sp, #0x18]

; 179  :                 if (tNow - tStart < ulTimeout)

  00190	e59d2018	 ldr         r2, [sp, #0x18]
  00194	e59d3004	 ldr         r3, [sp, #4]
  00198	e0422003	 sub         r2, r2, r3
  0019c	e59d303c	 ldr         r3, [sp, #0x3C]
  001a0	e1520003	 cmp         r2, r3
  001a4	2a000006	 bcs         |$LN3@EnterCritS|

; 180  :                     tLeft = ulTimeout - (tNow - tStart);

  001a8	e59d2018	 ldr         r2, [sp, #0x18]
  001ac	e59d3004	 ldr         r3, [sp, #4]
  001b0	e0422003	 sub         r2, r2, r3
  001b4	e59d303c	 ldr         r3, [sp, #0x3C]
  001b8	e0433002	 sub         r3, r3, r2
  001bc	e58d3008	 str         r3, [sp, #8]

; 181  :                 else

  001c0	ea000001	 b           |$LN2@EnterCritS|
  001c4		 |$LN3@EnterCritS|

; 182  :                     tLeft = 0; // poll one more time

  001c4	e3a03000	 mov         r3, #0
  001c8	e58d3008	 str         r3, [sp, #8]
  001cc		 |$LN2@EnterCritS|

; 183  :             } else {

  001cc	ea000001	 b           |$LN1@EnterCritS|
  001d0		 |$LN4@EnterCritS|

; 184  :                 tLeft = INFINITE;

  001d0	e3e03000	 mvn         r3, #0
  001d4	e58d3008	 str         r3, [sp, #8]
  001d8		 |$LN1@EnterCritS|

; 185  :             }
; 186  :             r = WaitForSingleObject(m_hev, tLeft);

  001d8	e59d1008	 ldr         r1, [sp, #8]
  001dc	e59d3038	 ldr         r3, [sp, #0x38]
  001e0	e283300c	 add         r3, r3, #0xC
  001e4	e5930000	 ldr         r0, [r3]
  001e8	eb000000	 bl          WaitForSingleObject
  001ec	e58d002c	 str         r0, [sp, #0x2C]
  001f0	e59d302c	 ldr         r3, [sp, #0x2C]
  001f4	e58d300c	 str         r3, [sp, #0xC]

; 187  :             EnterCriticalSection(&m_cs);

  001f8	e59d3038	 ldr         r3, [sp, #0x38]
  001fc	e2830010	 add         r0, r3, #0x10
  00200	eb000000	 bl          EnterCriticalSection

; 188  :             --m_cWaitingThreads;

  00204	e59d3038	 ldr         r3, [sp, #0x38]
  00208	e2833008	 add         r3, r3, #8
  0020c	e5933000	 ldr         r3, [r3]
  00210	e2432001	 sub         r2, r3, #1
  00214	e59d3038	 ldr         r3, [sp, #0x38]
  00218	e2833008	 add         r3, r3, #8
  0021c	e5832000	 str         r2, [r3]
  00220		 |$LN5@EnterCritS|

; 189  :         }
; 190  :     } while (fWaiting);

  00220	e59d3014	 ldr         r3, [sp, #0x14]
  00224	e3530000	 cmp         r3, #0
  00228	1affff8f	 bne         |$LN16@EnterCritS|

; 191  : 
; 192  :     return retval;

  0022c	e59d3000	 ldr         r3, [sp]
  00230	e58d301c	 str         r3, [sp, #0x1C]
  00234		 |$LN18@EnterCritS|

; 193  : }

  00234	e59d001c	 ldr         r0, [sp, #0x1C]
  00238	e28dd030	 add         sp, sp, #0x30
  0023c	e89d6000	 ldmia       sp, {sp, lr}
  00240	e12fff1e	 bx          lr
  00244		 |$M33817|

			 ENDP  ; |?EnterCritSec_Ex@CritSec_Ex@@QAA?AW4e_CritSec_Status@@K@Z|, CritSec_Ex::EnterCritSec_Ex

	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T33825| DCD	|$LN5@SetEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M33822|

; 236  : 	return EventModify(h,EVENT_SET);

  00010	e3a01003	 mov         r1, #3
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 237  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M33823|

			 ENDP  ; |SetEvent|

	IMPORT	|__GetUserKData|

  00000			 AREA	 |.pdata|, PDATA
|$T33833| DCD	|$LN5@GetCurrent|
	DCD	0x40000b02
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentThreadId| PROC

; 369  : _inline DWORD GetCurrentThreadId(void) {

  00000		 |$LN5@GetCurrent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M33830|

; 370  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURTHREAD * sizeof(HANDLE)));

  00008	e3a00008	 mov         r0, #8
  0000c	eb000000	 bl          __GetUserKData
  00010	e58d0004	 str         r0, [sp, #4]
  00014	e59d3004	 ldr         r3, [sp, #4]
  00018	e58d3000	 str         r3, [sp]

; 371  : }

  0001c	e59d0000	 ldr         r0, [sp]
  00020	e28dd008	 add         sp, sp, #8
  00024	e49de004	 ldr         lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$M33831|

			 ENDP  ; |GetCurrentThreadId|

	EXPORT	|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LE@KEOKCNHE@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|?LeaveCritSec_Ex@CritSec_Ex@@QAAXXZ|	; CritSec_Ex::LeaveCritSec_Ex
	IMPORT	|NKDbgPrintfW|

  00008			 AREA	 |.pdata|, PDATA
|$T33844| DCD	|$LN10@LeaveCritS|
	DCD	0x40004504
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\usb2com\sync.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "E", 0x0, "B"
	DCB	0x0, "U", 0x0, "G", 0x0, "C", 0x0, "H", 0x0, "K", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, "t", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| DCB "U", 0x0
	DCB	"n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LE@KEOKCNHE@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "C"
	DCB	0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N", 0x0, "_"
	DCB	0x0, "T", 0x0, "I", 0x0, "_", 0x0, "V", 0x0, "1", 0x0, "\\"
	DCB	0x0, "O", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, "3", 0x0, "5"
	DCB	0x0, "3", 0x0, "0", 0x0, "\\", 0x0, "M", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "\\", 0x0, "M", 0x0, "U", 0x0, "S", 0x0, "B"
	DCB	0x0, "H", 0x0, "C", 0x0, "D", 0x0, "\\", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "2", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "\\"
	DCB	0x0, ".", 0x0, "\\", 0x0, "s", 0x0, "y", 0x0, "n", 0x0, "c"
	DCB	0x0, ".", 0x0, "c", 0x0, "p", 0x0, "p", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00244			 AREA	 |.text|, CODE, ARM

  00244		 |?LeaveCritSec_Ex@CritSec_Ex@@QAAXXZ| PROC ; CritSec_Ex::LeaveCritSec_Ex

; 196  : {

  00244		 |$LN10@LeaveCritS|
  00244	e1a0c00d	 mov         r12, sp
  00248	e92d0001	 stmdb       sp!, {r0}
  0024c	e92d5000	 stmdb       sp!, {r12, lr}
  00250	e24dd00c	 sub         sp, sp, #0xC
  00254		 |$M33841|

; 197  : #ifdef POLITE // but not by default // default is to fail so the debugger knows you botched
; 198  :     if (m_fClosing && m_hOwnerThread == NULL)
; 199  :         // our caller violated protocol but we'll ignore it
; 200  :         return;
; 201  : #endif
; 202  :     ASSERT(m_hOwnerThread == GetCurrentThreadId());

  00254	eb000000	 bl          GetCurrentThreadId
  00258	e58d0000	 str         r0, [sp]
  0025c	e59d3014	 ldr         r3, [sp, #0x14]
  00260	e5932000	 ldr         r2, [r3]
  00264	e59d3000	 ldr         r3, [sp]
  00268	e1520003	 cmp         r2, r3
  0026c	1a000002	 bne         |$LN4@LeaveCritS|
  00270	e3a03001	 mov         r3, #1
  00274	e58d3004	 str         r3, [sp, #4]
  00278	ea000007	 b           |$LN5@LeaveCritS|
  0027c		 |$LN4@LeaveCritS|
  0027c	e3a030ca	 mov         r3, #0xCA
  00280	e59f20cc	 ldr         r2, [pc, #0xCC]
  00284	e59f10c4	 ldr         r1, [pc, #0xC4]
  00288	e59f00bc	 ldr         r0, [pc, #0xBC]
  0028c	eb000000	 bl          NKDbgPrintfW
  00290	e6000010	 __debugbreak_ce
  00294	e3a03000	 mov         r3, #0
  00298	e58d3004	 str         r3, [sp, #4]
  0029c		 |$LN5@LeaveCritS|

; 203  :     
; 204  :     EnterCriticalSection(&m_cs);

  0029c	e59d3014	 ldr         r3, [sp, #0x14]
  002a0	e2830010	 add         r0, r3, #0x10
  002a4	eb000000	 bl          EnterCriticalSection

; 205  : 
; 206  :     // this would be symptomatic of a logic error in the caller
; 207  :     ASSERT(m_cOwnerReferences > 0);

  002a8	e59d3014	 ldr         r3, [sp, #0x14]
  002ac	e2833004	 add         r3, r3, #4
  002b0	e5933000	 ldr         r3, [r3]
  002b4	e3530000	 cmp         r3, #0
  002b8	9a000002	 bls         |$LN6@LeaveCritS|
  002bc	e3a03001	 mov         r3, #1
  002c0	e58d3008	 str         r3, [sp, #8]
  002c4	ea000007	 b           |$LN7@LeaveCritS|
  002c8		 |$LN6@LeaveCritS|
  002c8	e3a030cf	 mov         r3, #0xCF
  002cc	e59f2080	 ldr         r2, [pc, #0x80]
  002d0	e59f1078	 ldr         r1, [pc, #0x78]
  002d4	e59f0070	 ldr         r0, [pc, #0x70]
  002d8	eb000000	 bl          NKDbgPrintfW
  002dc	e6000010	 __debugbreak_ce
  002e0	e3a03000	 mov         r3, #0
  002e4	e58d3008	 str         r3, [sp, #8]
  002e8		 |$LN7@LeaveCritS|

; 208  : 
; 209  :     if (--m_cOwnerReferences == 0) {

  002e8	e59d3014	 ldr         r3, [sp, #0x14]
  002ec	e2833004	 add         r3, r3, #4
  002f0	e5933000	 ldr         r3, [r3]
  002f4	e2432001	 sub         r2, r3, #1
  002f8	e59d3014	 ldr         r3, [sp, #0x14]
  002fc	e2833004	 add         r3, r3, #4
  00300	e5832000	 str         r2, [r3]
  00304	e59d3014	 ldr         r3, [sp, #0x14]
  00308	e2833004	 add         r3, r3, #4
  0030c	e5933000	 ldr         r3, [r3]
  00310	e3530000	 cmp         r3, #0
  00314	1a000006	 bne         |$LN1@LeaveCritS|

; 210  :         m_hOwnerThread = 0;

  00318	e59d2014	 ldr         r2, [sp, #0x14]
  0031c	e3a03000	 mov         r3, #0
  00320	e5823000	 str         r3, [r2]

; 211  :         SetEvent(m_hev);

  00324	e59d3014	 ldr         r3, [sp, #0x14]
  00328	e283300c	 add         r3, r3, #0xC
  0032c	e5930000	 ldr         r0, [r3]
  00330	eb000000	 bl          SetEvent
  00334		 |$LN1@LeaveCritS|

; 212  :     }
; 213  : 
; 214  :     LeaveCriticalSection(&m_cs);

  00334	e59d3014	 ldr         r3, [sp, #0x14]
  00338	e2830010	 add         r0, r3, #0x10
  0033c	eb000000	 bl          LeaveCriticalSection

; 215  : }

  00340	e28dd00c	 add         sp, sp, #0xC
  00344	e89d6000	 ldmia       sp, {sp, lr}
  00348	e12fff1e	 bx          lr
  0034c		 |$LN11@LeaveCritS|
  0034c		 |$LN12@LeaveCritS|
  0034c	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  00350		 |$LN13@LeaveCritS|
  00350	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  00354		 |$LN14@LeaveCritS|
  00354	00000000	 DCD         |??_C@_1LE@KEOKCNHE@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  00358		 |$M33842|

			 ENDP  ; |?LeaveCritSec_Ex@CritSec_Ex@@QAAXXZ|, CritSec_Ex::LeaveCritSec_Ex

	EXPORT	|?Initialize@CritSec_Ex@@QAAXXZ|	; CritSec_Ex::Initialize
	EXPORT	|??0CritSec_Ex@@QAA@XZ|			; CritSec_Ex::CritSec_Ex
	IMPORT	|InitializeCriticalSection|
	IMPORT	|RaiseException|
	IMPORT	|CreateEventW|

  00010			 AREA	 |.pdata|, PDATA
|$T33854| DCD	|$LN6@CritSec_Ex|
	DCD	0x40002304
; Function compile flags: /Odtp

  00358			 AREA	 |.text|, CODE, ARM

  00358		 |??0CritSec_Ex@@QAA@XZ| PROC		; CritSec_Ex::CritSec_Ex

; 218  : {

  00358		 |$LN6@CritSec_Ex|
  00358	e1a0c00d	 mov         r12, sp
  0035c	e92d0001	 stmdb       sp!, {r0}
  00360	e92d5000	 stmdb       sp!, {r12, lr}
  00364	e24dd008	 sub         sp, sp, #8
  00368		 |$M33851|

; 219  :     m_hev = CreateEvent(NULL, FALSE, TRUE, 0);   // initially set!

  00368	e3a03000	 mov         r3, #0
  0036c	e3a02001	 mov         r2, #1
  00370	e3a01000	 mov         r1, #0
  00374	e3a00000	 mov         r0, #0
  00378	eb000000	 bl          CreateEventW
  0037c	e58d0004	 str         r0, [sp, #4]
  00380	e59d3010	 ldr         r3, [sp, #0x10]
  00384	e283200c	 add         r2, r3, #0xC
  00388	e59d3004	 ldr         r3, [sp, #4]
  0038c	e5823000	 str         r3, [r2]

; 220  :     if (m_hev == NULL) {

  00390	e59d3010	 ldr         r3, [sp, #0x10]
  00394	e283300c	 add         r3, r3, #0xC
  00398	e5933000	 ldr         r3, [r3]
  0039c	e3530000	 cmp         r3, #0
  003a0	1a000004	 bne         |$LN1@CritSec_Ex|

; 221  :         // simulate InitializeCriticalSection - see docs
; 222  :         RaiseException((DWORD)STATUS_NO_MEMORY, 0, 0, NULL);

  003a4	e3a03000	 mov         r3, #0
  003a8	e3a02000	 mov         r2, #0
  003ac	e3a01000	 mov         r1, #0
  003b0	e3a0015f	 mov         r0, #0x5F, 2
  003b4	eb000000	 bl          RaiseException
  003b8		 |$LN1@CritSec_Ex|

; 223  :     }
; 224  :     InitializeCriticalSection(&m_cs);

  003b8	e59d3010	 ldr         r3, [sp, #0x10]
  003bc	e2830010	 add         r0, r3, #0x10
  003c0	eb000000	 bl          InitializeCriticalSection

; 225  :     Initialize();

  003c4	e59d0010	 ldr         r0, [sp, #0x10]
  003c8	eb000000	 bl          |?Initialize@CritSec_Ex@@QAAXXZ|

; 226  : }

  003cc	e59d3010	 ldr         r3, [sp, #0x10]
  003d0	e58d3000	 str         r3, [sp]
  003d4	e59d0000	 ldr         r0, [sp]
  003d8	e28dd008	 add         sp, sp, #8
  003dc	e89d6000	 ldmia       sp, {sp, lr}
  003e0	e12fff1e	 bx          lr
  003e4		 |$M33852|

			 ENDP  ; |??0CritSec_Ex@@QAA@XZ|, CritSec_Ex::CritSec_Ex


  00018			 AREA	 |.pdata|, PDATA
|$T33859| DCD	|$LN5@Initialize|
	DCD	0x40001a03
; Function compile flags: /Odtp

  003e4			 AREA	 |.text|, CODE, ARM

  003e4		 |?Initialize@CritSec_Ex@@QAAXXZ| PROC	; CritSec_Ex::Initialize

; 228  : {

  003e4		 |$LN5@Initialize|
  003e4	e1a0c00d	 mov         r12, sp
  003e8	e92d0001	 stmdb       sp!, {r0}
  003ec	e92d5000	 stmdb       sp!, {r12, lr}
  003f0		 |$M33856|

; 229  :     EnterCriticalSection(&m_cs);

  003f0	e59d3008	 ldr         r3, [sp, #8]
  003f4	e2830010	 add         r0, r3, #0x10
  003f8	eb000000	 bl          EnterCriticalSection

; 230  :     m_hOwnerThread = 0;

  003fc	e59d2008	 ldr         r2, [sp, #8]
  00400	e3a03000	 mov         r3, #0
  00404	e5823000	 str         r3, [r2]

; 231  :     m_cOwnerReferences = 0;

  00408	e59d3008	 ldr         r3, [sp, #8]
  0040c	e2832004	 add         r2, r3, #4
  00410	e3a03000	 mov         r3, #0
  00414	e5823000	 str         r3, [r2]

; 232  :     m_cWaitingThreads = 0;

  00418	e59d3008	 ldr         r3, [sp, #8]
  0041c	e2832008	 add         r2, r3, #8
  00420	e3a03000	 mov         r3, #0
  00424	e5823000	 str         r3, [r2]

; 233  :     m_fClosing = FALSE;

  00428	e59d3008	 ldr         r3, [sp, #8]
  0042c	e2832024	 add         r2, r3, #0x24
  00430	e3a03000	 mov         r3, #0
  00434	e5823000	 str         r3, [r2]

; 234  :     LeaveCriticalSection(&m_cs);

  00438	e59d3008	 ldr         r3, [sp, #8]
  0043c	e2830010	 add         r0, r3, #0x10
  00440	eb000000	 bl          LeaveCriticalSection

; 235  : }

  00444	e89d6000	 ldmia       sp, {sp, lr}
  00448	e12fff1e	 bx          lr
  0044c		 |$M33857|

			 ENDP  ; |?Initialize@CritSec_Ex@@QAAXXZ|, CritSec_Ex::Initialize

	EXPORT	|?PrepareDeleteCritSec_Ex@CritSec_Ex@@QAAXXZ| ; CritSec_Ex::PrepareDeleteCritSec_Ex

  00020			 AREA	 |.pdata|, PDATA
|$T33864| DCD	|$LN6@PrepareDel|
	DCD	0x40002104
; Function compile flags: /Odtp

  0044c			 AREA	 |.text|, CODE, ARM

  0044c		 |?PrepareDeleteCritSec_Ex@CritSec_Ex@@QAAXXZ| PROC ; CritSec_Ex::PrepareDeleteCritSec_Ex

; 238  : {

  0044c		 |$LN6@PrepareDel|
  0044c	e1a0c00d	 mov         r12, sp
  00450	e92d0001	 stmdb       sp!, {r0}
  00454	e92d5000	 stmdb       sp!, {r12, lr}
  00458	e24dd008	 sub         sp, sp, #8
  0045c		 |$M33861|

; 239  :     DWORD me = GetCurrentThreadId();

  0045c	eb000000	 bl          GetCurrentThreadId
  00460	e58d0004	 str         r0, [sp, #4]
  00464	e59d3004	 ldr         r3, [sp, #4]
  00468	e58d3000	 str         r3, [sp]

; 240  :     
; 241  :     EnterCriticalSection(&m_cs);

  0046c	e59d3010	 ldr         r3, [sp, #0x10]
  00470	e2830010	 add         r0, r3, #0x10
  00474	eb000000	 bl          EnterCriticalSection

; 242  :     m_fClosing = TRUE;

  00478	e59d3010	 ldr         r3, [sp, #0x10]
  0047c	e2832024	 add         r2, r3, #0x24
  00480	e3a03001	 mov         r3, #1
  00484	e5823000	 str         r3, [r2]

; 243  :     if (m_hOwnerThread == me) {

  00488	e59d3010	 ldr         r3, [sp, #0x10]
  0048c	e5932000	 ldr         r2, [r3]
  00490	e59d3000	 ldr         r3, [sp]
  00494	e1520003	 cmp         r2, r3
  00498	1a000002	 bne         |$LN1@PrepareDel|

; 244  :         // m_cOwnerReferences is >=1 but the caller had better not Leave after this...
; 245  :         m_hOwnerThread = 0;

  0049c	e59d2010	 ldr         r2, [sp, #0x10]
  004a0	e3a03000	 mov         r3, #0
  004a4	e5823000	 str         r3, [r2]
  004a8		 |$LN1@PrepareDel|

; 246  :     }
; 247  :     LeaveCriticalSection(&m_cs);

  004a8	e59d3010	 ldr         r3, [sp, #0x10]
  004ac	e2830010	 add         r0, r3, #0x10
  004b0	eb000000	 bl          LeaveCriticalSection

; 248  : 
; 249  :     // start waking up threads blocked on this critsec;
; 250  :     // each thread woken this way will set the event again.
; 251  :     SetEvent(m_hev);

  004b4	e59d3010	 ldr         r3, [sp, #0x10]
  004b8	e283300c	 add         r3, r3, #0xC
  004bc	e5930000	 ldr         r0, [r3]
  004c0	eb000000	 bl          SetEvent

; 252  : }

  004c4	e28dd008	 add         sp, sp, #8
  004c8	e89d6000	 ldmia       sp, {sp, lr}
  004cc	e12fff1e	 bx          lr
  004d0		 |$M33862|

			 ENDP  ; |?PrepareDeleteCritSec_Ex@CritSec_Ex@@QAAXXZ|, CritSec_Ex::PrepareDeleteCritSec_Ex

	EXPORT	|PulseEvent|
	EXPORT	|??1CritSec_Ex@@QAA@XZ|			; CritSec_Ex::~CritSec_Ex
	IMPORT	|DeleteCriticalSection|
	IMPORT	|CloseHandle|

  00028			 AREA	 |.pdata|, PDATA
|$T33873| DCD	|$LN11@CritSec_Ex@2|
	DCD	0x40004904
; Function compile flags: /Odtp

  004d0			 AREA	 |.text|, CODE, ARM

  004d0		 |??1CritSec_Ex@@QAA@XZ| PROC		; CritSec_Ex::~CritSec_Ex

; 255  : {

  004d0		 |$LN11@CritSec_Ex@2|
  004d0	e1a0c00d	 mov         r12, sp
  004d4	e92d0001	 stmdb       sp!, {r0}
  004d8	e92d5000	 stmdb       sp!, {r12, lr}
  004dc	e24dd00c	 sub         sp, sp, #0xC
  004e0		 |$M33870|

; 256  :     BOOL bDone;
; 257  : 
; 258  :     // In case it wasn't already done:
; 259  :     PrepareDeleteCritSec_Ex();

  004e0	e59d0014	 ldr         r0, [sp, #0x14]
  004e4	eb000000	 bl          |?PrepareDeleteCritSec_Ex@CritSec_Ex@@QAAXXZ|

; 260  : 
; 261  :     EnterCriticalSection(&m_cs);

  004e8	e59d3014	 ldr         r3, [sp, #0x14]
  004ec	e2830010	 add         r0, r3, #0x10
  004f0	eb000000	 bl          EnterCriticalSection

; 262  :     bDone = m_hOwnerThread == 0 && m_cWaitingThreads == 0;

  004f4	e59d3014	 ldr         r3, [sp, #0x14]
  004f8	e5933000	 ldr         r3, [r3]
  004fc	e3530000	 cmp         r3, #0
  00500	1a000007	 bne         |$LN5@CritSec_Ex@2|
  00504	e59d3014	 ldr         r3, [sp, #0x14]
  00508	e2833008	 add         r3, r3, #8
  0050c	e5933000	 ldr         r3, [r3]
  00510	e3530000	 cmp         r3, #0
  00514	1a000002	 bne         |$LN5@CritSec_Ex@2|
  00518	e3a03001	 mov         r3, #1
  0051c	e58d3004	 str         r3, [sp, #4]
  00520	ea000001	 b           |$LN6@CritSec_Ex@2|
  00524		 |$LN5@CritSec_Ex@2|
  00524	e3a03000	 mov         r3, #0
  00528	e58d3004	 str         r3, [sp, #4]
  0052c		 |$LN6@CritSec_Ex@2|
  0052c	e59d3004	 ldr         r3, [sp, #4]
  00530	e58d3000	 str         r3, [sp]

; 263  :     LeaveCriticalSection(&m_cs);

  00534	e59d3014	 ldr         r3, [sp, #0x14]
  00538	e2830010	 add         r0, r3, #0x10
  0053c	eb000000	 bl          LeaveCriticalSection
  00540		 |$LN2@CritSec_Ex@2|

; 264  : 
; 265  :     while (!bDone) {

  00540	e59d3000	 ldr         r3, [sp]
  00544	e3530000	 cmp         r3, #0
  00548	1a00001f	 bne         |$LN1@CritSec_Ex@2|

; 266  :         // force someone to wake up, leaving the event reset
; 267  :         // so that the next statement can actually block.
; 268  :         PulseEvent(m_hev);

  0054c	e59d3014	 ldr         r3, [sp, #0x14]
  00550	e283300c	 add         r3, r3, #0xC
  00554	e5930000	 ldr         r0, [r3]
  00558	eb000000	 bl          PulseEvent

; 269  : 
; 270  :         // and wait for the next waiting thread to set the event again
; 271  :         // which will happen when they relinquish or when they note the
; 272  :         // m_fClosing flag.
; 273  :         WaitForSingleObject(m_hev, INFINITE);

  0055c	e3e01000	 mvn         r1, #0
  00560	e59d3014	 ldr         r3, [sp, #0x14]
  00564	e283300c	 add         r3, r3, #0xC
  00568	e5930000	 ldr         r0, [r3]
  0056c	eb000000	 bl          WaitForSingleObject

; 274  : 
; 275  :         EnterCriticalSection(&m_cs);

  00570	e59d3014	 ldr         r3, [sp, #0x14]
  00574	e2830010	 add         r0, r3, #0x10
  00578	eb000000	 bl          EnterCriticalSection

; 276  :         bDone = m_hOwnerThread == 0 && m_cWaitingThreads == 0;

  0057c	e59d3014	 ldr         r3, [sp, #0x14]
  00580	e5933000	 ldr         r3, [r3]
  00584	e3530000	 cmp         r3, #0
  00588	1a000007	 bne         |$LN7@CritSec_Ex@2|
  0058c	e59d3014	 ldr         r3, [sp, #0x14]
  00590	e2833008	 add         r3, r3, #8
  00594	e5933000	 ldr         r3, [r3]
  00598	e3530000	 cmp         r3, #0
  0059c	1a000002	 bne         |$LN7@CritSec_Ex@2|
  005a0	e3a03001	 mov         r3, #1
  005a4	e58d3008	 str         r3, [sp, #8]
  005a8	ea000001	 b           |$LN8@CritSec_Ex@2|
  005ac		 |$LN7@CritSec_Ex@2|
  005ac	e3a03000	 mov         r3, #0
  005b0	e58d3008	 str         r3, [sp, #8]
  005b4		 |$LN8@CritSec_Ex@2|
  005b4	e59d3008	 ldr         r3, [sp, #8]
  005b8	e58d3000	 str         r3, [sp]

; 277  :         LeaveCriticalSection(&m_cs);

  005bc	e59d3014	 ldr         r3, [sp, #0x14]
  005c0	e2830010	 add         r0, r3, #0x10
  005c4	eb000000	 bl          LeaveCriticalSection

; 278  :     }

  005c8	eaffffdc	 b           |$LN2@CritSec_Ex@2|
  005cc		 |$LN1@CritSec_Ex@2|

; 279  : 
; 280  :     CloseHandle(m_hev);

  005cc	e59d3014	 ldr         r3, [sp, #0x14]
  005d0	e283300c	 add         r3, r3, #0xC
  005d4	e5930000	 ldr         r0, [r3]
  005d8	eb000000	 bl          CloseHandle

; 281  :     DeleteCriticalSection(&m_cs);

  005dc	e59d3014	 ldr         r3, [sp, #0x14]
  005e0	e2830010	 add         r0, r3, #0x10
  005e4	eb000000	 bl          DeleteCriticalSection

; 282  : }

  005e8	e28dd00c	 add         sp, sp, #0xC
  005ec	e89d6000	 ldmia       sp, {sp, lr}
  005f0	e12fff1e	 bx          lr
  005f4		 |$M33871|

			 ENDP  ; |??1CritSec_Ex@@QAA@XZ|, CritSec_Ex::~CritSec_Ex

; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T33879| DCD	|$LN5@PulseEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PulseEvent| PROC

; 211  : _inline BOOL PulseEvent(HANDLE h) {

  00000		 |$LN5@PulseEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M33876|

; 212  : 	return EventModify(h,EVENT_PULSE);

  00010	e3a01001	 mov         r1, #1
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 213  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M33877|

			 ENDP  ; |PulseEvent|

	EXPORT	|??0Countdown@@QAA@K@Z|			; Countdown::Countdown

  00030			 AREA	 |.pdata|, PDATA
|$T33889| DCD	|$LN7@Countdown|
	DCD	0x40002604
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\usb2com\sync.cpp

  005f4			 AREA	 |.text|, CODE, ARM

  005f4		 |??0Countdown@@QAA@K@Z| PROC		; Countdown::Countdown

; 286  : {

  005f4		 |$LN7@Countdown|
  005f4	e1a0c00d	 mov         r12, sp
  005f8	e92d0003	 stmdb       sp!, {r0, r1}
  005fc	e92d5000	 stmdb       sp!, {r12, lr}
  00600	e24dd00c	 sub         sp, sp, #0xC
  00604		 |$M33886|

; 287  :     count = cInitial;

  00604	e59d3014	 ldr         r3, [sp, #0x14]
  00608	e283201c	 add         r2, r3, #0x1C
  0060c	e59d3018	 ldr         r3, [sp, #0x18]
  00610	e5823000	 str         r3, [r2]

; 288  :     hev = CreateEvent(NULL, TRUE, cInitial ? FALSE : TRUE, NULL);

  00614	e59d3018	 ldr         r3, [sp, #0x18]
  00618	e3530000	 cmp         r3, #0
  0061c	0a000002	 beq         |$LN3@Countdown|
  00620	e3a03000	 mov         r3, #0
  00624	e58d3004	 str         r3, [sp, #4]
  00628	ea000001	 b           |$LN4@Countdown|
  0062c		 |$LN3@Countdown|
  0062c	e3a03001	 mov         r3, #1
  00630	e58d3004	 str         r3, [sp, #4]
  00634		 |$LN4@Countdown|
  00634	e3a03000	 mov         r3, #0
  00638	e59d2004	 ldr         r2, [sp, #4]
  0063c	e3a01001	 mov         r1, #1
  00640	e3a00000	 mov         r0, #0
  00644	eb000000	 bl          CreateEventW
  00648	e58d0008	 str         r0, [sp, #8]
  0064c	e59d3014	 ldr         r3, [sp, #0x14]
  00650	e2832014	 add         r2, r3, #0x14
  00654	e59d3008	 ldr         r3, [sp, #8]
  00658	e5823000	 str         r3, [r2]

; 289  :     InitializeCriticalSection(&cs);

  0065c	e59d0014	 ldr         r0, [sp, #0x14]
  00660	eb000000	 bl          InitializeCriticalSection

; 290  :     lock = FALSE;

  00664	e59d3014	 ldr         r3, [sp, #0x14]
  00668	e2832018	 add         r2, r3, #0x18
  0066c	e3a03000	 mov         r3, #0
  00670	e5823000	 str         r3, [r2]

; 291  : }

  00674	e59d3014	 ldr         r3, [sp, #0x14]
  00678	e58d3000	 str         r3, [sp]
  0067c	e59d0000	 ldr         r0, [sp]
  00680	e28dd00c	 add         sp, sp, #0xC
  00684	e89d6000	 ldmia       sp, {sp, lr}
  00688	e12fff1e	 bx          lr
  0068c		 |$M33887|

			 ENDP  ; |??0Countdown@@QAA@K@Z|, Countdown::Countdown

	EXPORT	|ResetEvent|
	EXPORT	|?IncrCountdown@Countdown@@QAAHXZ|	; Countdown::IncrCountdown

  00038			 AREA	 |.pdata|, PDATA
|$T33895| DCD	|$LN8@IncrCountd|
	DCD	0x40002804
; Function compile flags: /Odtp

  0068c			 AREA	 |.text|, CODE, ARM

  0068c		 |?IncrCountdown@Countdown@@QAAHXZ| PROC ; Countdown::IncrCountdown

; 294  : {

  0068c		 |$LN8@IncrCountd|
  0068c	e1a0c00d	 mov         r12, sp
  00690	e92d0001	 stmdb       sp!, {r0}
  00694	e92d5000	 stmdb       sp!, {r12, lr}
  00698	e24dd008	 sub         sp, sp, #8
  0069c		 |$M33892|

; 295  :     BOOL r = TRUE;

  0069c	e3a03001	 mov         r3, #1
  006a0	e58d3000	 str         r3, [sp]

; 296  : 
; 297  :     EnterCriticalSection(&cs);

  006a4	e59d0010	 ldr         r0, [sp, #0x10]
  006a8	eb000000	 bl          EnterCriticalSection

; 298  :     if (lock)

  006ac	e59d3010	 ldr         r3, [sp, #0x10]
  006b0	e2833018	 add         r3, r3, #0x18
  006b4	e5933000	 ldr         r3, [r3]
  006b8	e3530000	 cmp         r3, #0
  006bc	0a000002	 beq         |$LN3@IncrCountd|

; 299  :         r = FALSE;

  006c0	e3a03000	 mov         r3, #0
  006c4	e58d3000	 str         r3, [sp]

; 300  :     else

  006c8	ea00000f	 b           |$LN2@IncrCountd|
  006cc		 |$LN3@IncrCountd|

; 301  :         if (count++ == 0)

  006cc	e59d3010	 ldr         r3, [sp, #0x10]
  006d0	e283301c	 add         r3, r3, #0x1C
  006d4	e5933000	 ldr         r3, [r3]
  006d8	e3530000	 cmp         r3, #0
  006dc	e59d3010	 ldr         r3, [sp, #0x10]
  006e0	e283301c	 add         r3, r3, #0x1C
  006e4	e5933000	 ldr         r3, [r3]
  006e8	e2832001	 add         r2, r3, #1
  006ec	e59d3010	 ldr         r3, [sp, #0x10]
  006f0	e283301c	 add         r3, r3, #0x1C
  006f4	e5832000	 str         r2, [r3]
  006f8	1a000003	 bne         |$LN1@IncrCountd|

; 302  :             ResetEvent(hev);

  006fc	e59d3010	 ldr         r3, [sp, #0x10]
  00700	e2833014	 add         r3, r3, #0x14
  00704	e5930000	 ldr         r0, [r3]
  00708	eb000000	 bl          ResetEvent
  0070c		 |$LN1@IncrCountd|
  0070c		 |$LN2@IncrCountd|

; 303  :     LeaveCriticalSection(&cs);

  0070c	e59d0010	 ldr         r0, [sp, #0x10]
  00710	eb000000	 bl          LeaveCriticalSection

; 304  : 
; 305  :     return r;

  00714	e59d3000	 ldr         r3, [sp]
  00718	e58d3004	 str         r3, [sp, #4]

; 306  : }

  0071c	e59d0004	 ldr         r0, [sp, #4]
  00720	e28dd008	 add         sp, sp, #8
  00724	e89d6000	 ldmia       sp, {sp, lr}
  00728	e12fff1e	 bx          lr
  0072c		 |$M33893|

			 ENDP  ; |?IncrCountdown@Countdown@@QAAHXZ|, Countdown::IncrCountdown

; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T33901| DCD	|$LN5@ResetEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ResetEvent| PROC

; 223  : _inline BOOL ResetEvent(HANDLE h) {

  00000		 |$LN5@ResetEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M33898|

; 224  : 	return EventModify(h,EVENT_RESET);

  00010	e3a01002	 mov         r1, #2
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 225  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M33899|

			 ENDP  ; |ResetEvent|

	EXPORT	|?DecrCountdown@Countdown@@QAAXXZ|	; Countdown::DecrCountdown

  00040			 AREA	 |.pdata|, PDATA
|$T33910| DCD	|$LN8@DecrCountd@2|
	DCD	0x40002f04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\usb2com\sync.cpp

  0072c			 AREA	 |.text|, CODE, ARM

  0072c		 |?DecrCountdown@Countdown@@QAAXXZ| PROC ; Countdown::DecrCountdown

; 309  : {

  0072c		 |$LN8@DecrCountd@2|
  0072c	e1a0c00d	 mov         r12, sp
  00730	e92d0001	 stmdb       sp!, {r0}
  00734	e92d5000	 stmdb       sp!, {r12, lr}
  00738	e24dd004	 sub         sp, sp, #4
  0073c		 |$M33907|

; 310  :     EnterCriticalSection(&cs);

  0073c	e59d000c	 ldr         r0, [sp, #0xC]
  00740	eb000000	 bl          EnterCriticalSection

; 311  :     ASSERT(count > 0);

  00744	e59d300c	 ldr         r3, [sp, #0xC]
  00748	e283301c	 add         r3, r3, #0x1C
  0074c	e5933000	 ldr         r3, [r3]
  00750	e3530000	 cmp         r3, #0
  00754	9a000002	 bls         |$LN4@DecrCountd@2|
  00758	e3a03001	 mov         r3, #1
  0075c	e58d3000	 str         r3, [sp]
  00760	ea000008	 b           |$LN5@DecrCountd@2|
  00764		 |$LN4@DecrCountd@2|
  00764	e3a03c01	 mov         r3, #1, 24
  00768	e3833037	 orr         r3, r3, #0x37
  0076c	e59f2070	 ldr         r2, [pc, #0x70]
  00770	e59f1068	 ldr         r1, [pc, #0x68]
  00774	e59f0060	 ldr         r0, [pc, #0x60]
  00778	eb000000	 bl          NKDbgPrintfW
  0077c	e6000010	 __debugbreak_ce
  00780	e3a03000	 mov         r3, #0
  00784	e58d3000	 str         r3, [sp]
  00788		 |$LN5@DecrCountd@2|

; 312  :     if (--count == 0)

  00788	e59d300c	 ldr         r3, [sp, #0xC]
  0078c	e283301c	 add         r3, r3, #0x1C
  00790	e5933000	 ldr         r3, [r3]
  00794	e2432001	 sub         r2, r3, #1
  00798	e59d300c	 ldr         r3, [sp, #0xC]
  0079c	e283301c	 add         r3, r3, #0x1C
  007a0	e5832000	 str         r2, [r3]
  007a4	e59d300c	 ldr         r3, [sp, #0xC]
  007a8	e283301c	 add         r3, r3, #0x1C
  007ac	e5933000	 ldr         r3, [r3]
  007b0	e3530000	 cmp         r3, #0
  007b4	1a000003	 bne         |$LN1@DecrCountd@2|

; 313  :         SetEvent(hev);

  007b8	e59d300c	 ldr         r3, [sp, #0xC]
  007bc	e2833014	 add         r3, r3, #0x14
  007c0	e5930000	 ldr         r0, [r3]
  007c4	eb000000	 bl          SetEvent
  007c8		 |$LN1@DecrCountd@2|

; 314  :     LeaveCriticalSection(&cs);

  007c8	e59d000c	 ldr         r0, [sp, #0xC]
  007cc	eb000000	 bl          LeaveCriticalSection

; 315  : }

  007d0	e28dd004	 add         sp, sp, #4
  007d4	e89d6000	 ldmia       sp, {sp, lr}
  007d8	e12fff1e	 bx          lr
  007dc		 |$LN9@DecrCountd@2|
  007dc		 |$LN10@DecrCountd@2|
  007dc	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  007e0		 |$LN11@DecrCountd@2|
  007e0	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  007e4		 |$LN12@DecrCountd@2|
  007e4	00000000	 DCD         |??_C@_1LE@KEOKCNHE@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  007e8		 |$M33908|

			 ENDP  ; |?DecrCountdown@Countdown@@QAAXXZ|, Countdown::DecrCountdown

	EXPORT	|?LockCountdown@Countdown@@AAAXXZ|	; Countdown::LockCountdown

  00048			 AREA	 |.pdata|, PDATA
|$T33919| DCD	|$LN5@LockCountd|
	DCD	0x40000d03
; Function compile flags: /Odtp

  007e8			 AREA	 |.text|, CODE, ARM

  007e8		 |?LockCountdown@Countdown@@AAAXXZ| PROC ; Countdown::LockCountdown

; 318  : {

  007e8		 |$LN5@LockCountd|
  007e8	e1a0c00d	 mov         r12, sp
  007ec	e92d0001	 stmdb       sp!, {r0}
  007f0	e92d5000	 stmdb       sp!, {r12, lr}
  007f4		 |$M33916|

; 319  :     EnterCriticalSection(&cs);

  007f4	e59d0008	 ldr         r0, [sp, #8]
  007f8	eb000000	 bl          EnterCriticalSection

; 320  :     lock = TRUE;

  007fc	e59d3008	 ldr         r3, [sp, #8]
  00800	e2832018	 add         r2, r3, #0x18
  00804	e3a03001	 mov         r3, #1
  00808	e5823000	 str         r3, [r2]

; 321  :     LeaveCriticalSection(&cs);

  0080c	e59d0008	 ldr         r0, [sp, #8]
  00810	eb000000	 bl          LeaveCriticalSection

; 322  : }

  00814	e89d6000	 ldmia       sp, {sp, lr}
  00818	e12fff1e	 bx          lr
  0081c		 |$M33917|

			 ENDP  ; |?LockCountdown@Countdown@@AAAXXZ|, Countdown::LockCountdown

	EXPORT	|?WaitForCountdown@Countdown@@QAAXH@Z|	; Countdown::WaitForCountdown

  00050			 AREA	 |.pdata|, PDATA
|$T33926| DCD	|$LN7@WaitForCou|
	DCD	0x40002604
; Function compile flags: /Odtp

  0081c			 AREA	 |.text|, CODE, ARM

  0081c		 |?WaitForCountdown@Countdown@@QAAXH@Z| PROC ; Countdown::WaitForCountdown

; 326  : {

  0081c		 |$LN7@WaitForCou|
  0081c	e1a0c00d	 mov         r12, sp
  00820	e92d0003	 stmdb       sp!, {r0, r1}
  00824	e92d5000	 stmdb       sp!, {r12, lr}
  00828	e24dd004	 sub         sp, sp, #4
  0082c		 |$M33923|

; 327  :     LockCountdown();

  0082c	e59d000c	 ldr         r0, [sp, #0xC]
  00830	eb000000	 bl          |?LockCountdown@Countdown@@AAAXXZ|

; 328  :     
; 329  :     WaitForSingleObject(hev, INFINITE);

  00834	e3e01000	 mvn         r1, #0
  00838	e59d300c	 ldr         r3, [sp, #0xC]
  0083c	e2833014	 add         r3, r3, #0x14
  00840	e5930000	 ldr         r0, [r3]
  00844	eb000000	 bl          WaitForSingleObject

; 330  :     ASSERT(count == 0);

  00848	e59d300c	 ldr         r3, [sp, #0xC]
  0084c	e283301c	 add         r3, r3, #0x1C
  00850	e5933000	 ldr         r3, [r3]
  00854	e3530000	 cmp         r3, #0
  00858	1a000002	 bne         |$LN3@WaitForCou|
  0085c	e3a03001	 mov         r3, #1
  00860	e58d3000	 str         r3, [sp]
  00864	ea000008	 b           |$LN4@WaitForCou|
  00868		 |$LN3@WaitForCou|
  00868	e3a03c01	 mov         r3, #1, 24
  0086c	e383304a	 orr         r3, r3, #0x4A
  00870	e59f2038	 ldr         r2, [pc, #0x38]
  00874	e59f1030	 ldr         r1, [pc, #0x30]
  00878	e59f0028	 ldr         r0, [pc, #0x28]
  0087c	eb000000	 bl          NKDbgPrintfW
  00880	e6000010	 __debugbreak_ce
  00884	e3a03000	 mov         r3, #0
  00888	e58d3000	 str         r3, [sp]
  0088c		 |$LN4@WaitForCou|

; 331  : 
; 332  :     lock = keepLocked;

  0088c	e59d300c	 ldr         r3, [sp, #0xC]
  00890	e2832018	 add         r2, r3, #0x18
  00894	e59d3010	 ldr         r3, [sp, #0x10]
  00898	e5823000	 str         r3, [r2]

; 333  : }

  0089c	e28dd004	 add         sp, sp, #4
  008a0	e89d6000	 ldmia       sp, {sp, lr}
  008a4	e12fff1e	 bx          lr
  008a8		 |$LN8@WaitForCou|
  008a8		 |$LN9@WaitForCou|
  008a8	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  008ac		 |$LN10@WaitForCou|
  008ac	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  008b0		 |$LN11@WaitForCou|
  008b0	00000000	 DCD         |??_C@_1LE@KEOKCNHE@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  008b4		 |$M33924|

			 ENDP  ; |?WaitForCountdown@Countdown@@QAAXH@Z|, Countdown::WaitForCountdown

	EXPORT	|??1Countdown@@QAA@XZ|			; Countdown::~Countdown

  00058			 AREA	 |.pdata|, PDATA
|$T33935| DCD	|$LN5@Countdown@2|
	DCD	0x40000e03
; Function compile flags: /Odtp

  008b4			 AREA	 |.text|, CODE, ARM

  008b4		 |??1Countdown@@QAA@XZ| PROC		; Countdown::~Countdown

; 336  : {

  008b4		 |$LN5@Countdown@2|
  008b4	e1a0c00d	 mov         r12, sp
  008b8	e92d0001	 stmdb       sp!, {r0}
  008bc	e92d5000	 stmdb       sp!, {r12, lr}
  008c0		 |$M33932|

; 337  :     WaitForCountdown( TRUE);

  008c0	e3a01001	 mov         r1, #1
  008c4	e59d0008	 ldr         r0, [sp, #8]
  008c8	eb000000	 bl          |?WaitForCountdown@Countdown@@QAAXH@Z|

; 338  : 
; 339  :     CloseHandle(hev);

  008cc	e59d3008	 ldr         r3, [sp, #8]
  008d0	e2833014	 add         r3, r3, #0x14
  008d4	e5930000	 ldr         r0, [r3]
  008d8	eb000000	 bl          CloseHandle

; 340  :     DeleteCriticalSection(&cs);

  008dc	e59d0008	 ldr         r0, [sp, #8]
  008e0	eb000000	 bl          DeleteCriticalSection

; 341  : }

  008e4	e89d6000	 ldmia       sp, {sp, lr}
  008e8	e12fff1e	 bx          lr
  008ec		 |$M33933|

			 ENDP  ; |??1Countdown@@QAA@XZ|, Countdown::~Countdown

	END
