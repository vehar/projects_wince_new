; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\OMAP3530\MUSB\MUSBHCD\USB2COM\cphysmem.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?ReInit@CPhysMem@@QAAXXZ|		; CPhysMem::ReInit
	EXPORT	|??_C@_1KA@FJCCGHGB@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AA?5?$AAN?$AAo?$AAr?$AAm?$AAa?$AAl?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KA@PJOEMMCM@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAH?$AAi?$AAg?$AAh?$AAP?$AAr?$AAi?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KA@JBKPJKEP@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAS?$AAp?$AAe?$AAc?$AAi?$AAa?$AAl?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KA@PIBOCLFE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AA?5?$AA?5?$AAT?$AAo?$AAt?$AAa?$AAl?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@ICCPJKCO@?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@LENIGCOC@?$AAD?$AAM?$AAA?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAP?$AAD?$AAD?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LM@NABMAHLD@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|??0CPhysMem@@QAA@KKPAE0@Z|		; CPhysMem::CPhysMem
	IMPORT	|InitializeCriticalSection|
	IMPORT	|CreateEventW|
	IMPORT	|memset|
	IMPORT	|AllocPhysMem|
	IMPORT	|dpCurSettings|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|__rt_udiv|

  00000			 AREA	 |.pdata|, PDATA
|$T34239| DCD	|$LN28@CPhysMem|
	DCD	0x40019204
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\usb2com\cphysmem.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KA@FJCCGHGB@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AA?5?$AAN?$AAo?$AAr?$AAm?$AAa?$AAl?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, " ", 0x0, "N", 0x0, "o", 0x0, "r"
	DCB	0x0, "m", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "A", 0x0, "l"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "P"
	DCB	0x0, "h", 0x0, "y", 0x0, "s", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " "
	DCB	0x0, "V", 0x0, "i", 0x0, "r", 0x0, "t", 0x0, "A", 0x0, "d"
	DCB	0x0, "d", 0x0, "r", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ","
	DCB	0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KA@PJOEMMCM@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAH?$AAi?$AAg?$AAh?$AAP?$AAr?$AAi?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "H", 0x0, "i", 0x0, "g", 0x0, "h"
	DCB	0x0, "P", 0x0, "r", 0x0, "i", 0x0, " ", 0x0, "A", 0x0, "l"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "P"
	DCB	0x0, "h", 0x0, "y", 0x0, "s", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " "
	DCB	0x0, "V", 0x0, "i", 0x0, "r", 0x0, "t", 0x0, "A", 0x0, "d"
	DCB	0x0, "d", 0x0, "r", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ","
	DCB	0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KA@JBKPJKEP@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAS?$AAp?$AAe?$AAc?$AAi?$AAa?$AAl?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "S", 0x0, "p", 0x0, "e", 0x0, "c"
	DCB	0x0, "i", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "A", 0x0, "l"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "P"
	DCB	0x0, "h", 0x0, "y", 0x0, "s", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " "
	DCB	0x0, "V", 0x0, "i", 0x0, "r", 0x0, "t", 0x0, "A", 0x0, "d"
	DCB	0x0, "d", 0x0, "r", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ","
	DCB	0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KA@PIBOCLFE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AA?5?$AA?5?$AAT?$AAo?$AAt?$AAa?$AAl?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "T", 0x0, "o"
	DCB	0x0, "t", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "A", 0x0, "l"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "P"
	DCB	0x0, "h", 0x0, "y", 0x0, "s", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " "
	DCB	0x0, "V", 0x0, "i", 0x0, "r", 0x0, "t", 0x0, "A", 0x0, "d"
	DCB	0x0, "d", 0x0, "r", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ","
	DCB	0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@ICCPJKCO@?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe@| DCB "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "D", 0x0, "M"
	DCB	0x0, "A", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "f", 0x0, "r", 0x0, "o"
	DCB	0x0, "m", 0x0, " ", 0x0, "s", 0x0, "y", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "m", 0x0, " ", 0x0, "R", 0x0, "A", 0x0, "M"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@LENIGCOC@?$AAD?$AAM?$AAA?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAP?$AAD?$AAD?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "M", 0x0, "A", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "p", 0x0, "a"
	DCB	0x0, "s", 0x0, "s", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, " ", 0x0, "f", 0x0, "r", 0x0, "o", 0x0, "m"
	DCB	0x0, " ", 0x0, "P", 0x0, "D", 0x0, "D", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "E", 0x0, "B"
	DCB	0x0, "U", 0x0, "G", 0x0, "C", 0x0, "H", 0x0, "K", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, "t", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| DCB "U", 0x0
	DCB	"n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LM@NABMAHLD@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "C"
	DCB	0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N", 0x0, "_"
	DCB	0x0, "T", 0x0, "I", 0x0, "_", 0x0, "V", 0x0, "1", 0x0, "\\"
	DCB	0x0, "O", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, "3", 0x0, "5"
	DCB	0x0, "3", 0x0, "0", 0x0, "\\", 0x0, "M", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "\\", 0x0, "M", 0x0, "U", 0x0, "S", 0x0, "B"
	DCB	0x0, "H", 0x0, "C", 0x0, "D", 0x0, "\\", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "2", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "\\"
	DCB	0x0, ".", 0x0, "\\", 0x0, "c", 0x0, "p", 0x0, "h", 0x0, "y"
	DCB	0x0, "s", 0x0, "m", 0x0, "e", 0x0, "m", 0x0, ".", 0x0, "c"
	DCB	0x0, "p", 0x0, "p", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CPhysMem@@QAA@KKPAE0@Z| PROC	; CPhysMem::CPhysMem

; 58   : {

  00000		 |$LN28@CPhysMem|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd040	 sub         sp, sp, #0x40
  00010		 |$M34236|
  00010	e59d204c	 ldr         r2, [sp, #0x4C]
  00014	e59d3048	 ldr         r3, [sp, #0x48]
  00018	e5832000	 str         r2, [r3]
  0001c	e59d3048	 ldr         r3, [sp, #0x48]
  00020	e2832004	 add         r2, r3, #4
  00024	e59d3050	 ldr         r3, [sp, #0x50]
  00028	e5823000	 str         r3, [r2]
  0002c	e59d3048	 ldr         r3, [sp, #0x48]
  00030	e2832008	 add         r2, r3, #8
  00034	e59d3054	 ldr         r3, [sp, #0x54]
  00038	e5823000	 str         r3, [r2]
  0003c	e59d3048	 ldr         r3, [sp, #0x48]
  00040	e283200c	 add         r2, r3, #0xC
  00044	e59d3058	 ldr         r3, [sp, #0x58]
  00048	e5823000	 str         r3, [r2]

; 59   : 
; 60   :     ASSERT(cbSize > 0 && cbHighPrioritySize > 0); // must be so or the driver cannot work.

  0004c	e59d304c	 ldr         r3, [sp, #0x4C]
  00050	e3530000	 cmp         r3, #0
  00054	9a000005	 bls         |$LN6@CPhysMem|
  00058	e59d3050	 ldr         r3, [sp, #0x50]
  0005c	e3530000	 cmp         r3, #0
  00060	9a000002	 bls         |$LN6@CPhysMem|
  00064	e3a03001	 mov         r3, #1
  00068	e58d3010	 str         r3, [sp, #0x10]
  0006c	ea000007	 b           |$LN7@CPhysMem|
  00070		 |$LN6@CPhysMem|
  00070	e3a0303c	 mov         r3, #0x3C
  00074	e59f25bc	 ldr         r2, [pc, #0x5BC]
  00078	e59f15c4	 ldr         r1, [pc, #0x5C4]
  0007c	e59f05b0	 ldr         r0, [pc, #0x5B0]
  00080	eb000000	 bl          NKDbgPrintfW
  00084	e6000010	 __debugbreak_ce
  00088	e3a03000	 mov         r3, #0
  0008c	e58d3010	 str         r3, [sp, #0x10]
  00090		 |$LN7@CPhysMem|

; 61   : 
; 62   :     //
; 63   :     // The PDD can pass in a physical buffer, or we'll try to allocate one from 
; 64   :     // system RAM.
; 65   :     //
; 66   :     if (pVirtAddr && pPhysAddr) {

  00090	e59d3054	 ldr         r3, [sp, #0x54]
  00094	e3530000	 cmp         r3, #0
  00098	0a00001e	 beq         |$LN3@CPhysMem|
  0009c	e59d3058	 ldr         r3, [sp, #0x58]
  000a0	e3530000	 cmp         r3, #0
  000a4	0a00001b	 beq         |$LN3@CPhysMem|

; 67   :         DEBUGMSG(ZONE_INIT,(TEXT("DMA buffer passed in from PDD\r\n")));

  000a8	e59f3574	 ldr         r3, [pc, #0x574]
  000ac	e5933440	 ldr         r3, [r3, #0x440]
  000b0	e3130002	 tst         r3, #2
  000b4	0a000004	 beq         |$LN8@CPhysMem|
  000b8	e59f0580	 ldr         r0, [pc, #0x580]
  000bc	eb000000	 bl          NKDbgPrintfW
  000c0	e3a03001	 mov         r3, #1
  000c4	e58d3014	 str         r3, [sp, #0x14]
  000c8	ea000001	 b           |$LN9@CPhysMem|
  000cc		 |$LN8@CPhysMem|
  000cc	e3a03000	 mov         r3, #0
  000d0	e58d3014	 str         r3, [sp, #0x14]
  000d4		 |$LN9@CPhysMem|

; 68   :         m_pPhysicalBufferAddr = pVirtAddr;

  000d4	e59d3048	 ldr         r3, [sp, #0x48]
  000d8	e283203c	 add         r2, r3, #0x3C
  000dc	e59d3054	 ldr         r3, [sp, #0x54]
  000e0	e5823000	 str         r3, [r2]

; 69   :         m_dwNormalVA = (DWORD) pVirtAddr;

  000e4	e59d3048	 ldr         r3, [sp, #0x48]
  000e8	e2832054	 add         r2, r3, #0x54
  000ec	e59d3054	 ldr         r3, [sp, #0x54]
  000f0	e5823000	 str         r3, [r2]

; 70   :         m_dwNormalPA = (DWORD) pPhysAddr;

  000f4	e59d3048	 ldr         r3, [sp, #0x48]
  000f8	e2832050	 add         r2, r3, #0x50
  000fc	e59d3058	 ldr         r3, [sp, #0x58]
  00100	e5823000	 str         r3, [r2]

; 71   :         m_fPhysFromPlat = TRUE;

  00104	e59d3048	 ldr         r3, [sp, #0x48]
  00108	e2832028	 add         r2, r3, #0x28
  0010c	e3a03001	 mov         r3, #1
  00110	e5823000	 str         r3, [r2]

; 72   :     }
; 73   :     else {

  00114	ea000021	 b           |$LN2@CPhysMem|
  00118		 |$LN3@CPhysMem|

; 74   :         DEBUGMSG(ZONE_INIT,(TEXT("Allocating DMA buffer from system RAM\r\n")));

  00118	e59f3504	 ldr         r3, [pc, #0x504]
  0011c	e5933440	 ldr         r3, [r3, #0x440]
  00120	e3130002	 tst         r3, #2
  00124	0a000004	 beq         |$LN10@CPhysMem|
  00128	e59f050c	 ldr         r0, [pc, #0x50C]
  0012c	eb000000	 bl          NKDbgPrintfW
  00130	e3a03001	 mov         r3, #1
  00134	e58d3018	 str         r3, [sp, #0x18]
  00138	ea000001	 b           |$LN11@CPhysMem|
  0013c		 |$LN10@CPhysMem|
  0013c	e3a03000	 mov         r3, #0
  00140	e58d3018	 str         r3, [sp, #0x18]
  00144		 |$LN11@CPhysMem|

; 75   : 
; 76   :         m_pPhysicalBufferAddr = (PUCHAR)AllocPhysMem(cbSize,
; 77   :                                              PAGE_READWRITE|PAGE_NOCACHE,
; 78   :                                              0,    // Default alignment
; 79   :                                              0,    // Reserved
; 80   :                                              &m_dwNormalPA);

  00144	e59d3048	 ldr         r3, [sp, #0x48]
  00148	e2833050	 add         r3, r3, #0x50
  0014c	e58d3000	 str         r3, [sp]
  00150	e3a03000	 mov         r3, #0
  00154	e3a02000	 mov         r2, #0
  00158	e3a01f81	 mov         r1, #0x81, 30
  0015c	e59d004c	 ldr         r0, [sp, #0x4C]
  00160	eb000000	 bl          AllocPhysMem
  00164	e58d001c	 str         r0, [sp, #0x1C]
  00168	e59d3048	 ldr         r3, [sp, #0x48]
  0016c	e283203c	 add         r2, r3, #0x3C
  00170	e59d301c	 ldr         r3, [sp, #0x1C]
  00174	e5823000	 str         r3, [r2]

; 81   :         
; 82   :         m_dwNormalVA = (DWORD) m_pPhysicalBufferAddr;

  00178	e59d3048	 ldr         r3, [sp, #0x48]
  0017c	e283103c	 add         r1, r3, #0x3C
  00180	e59d3048	 ldr         r3, [sp, #0x48]
  00184	e2832054	 add         r2, r3, #0x54
  00188	e5913000	 ldr         r3, [r1]
  0018c	e5823000	 str         r3, [r2]

; 83   :         m_fPhysFromPlat = FALSE;

  00190	e59d3048	 ldr         r3, [sp, #0x48]
  00194	e2832028	 add         r2, r3, #0x28
  00198	e3a03000	 mov         r3, #0
  0019c	e5823000	 str         r3, [r2]
  001a0		 |$LN2@CPhysMem|

; 84   :     }
; 85   :     {   // we want all blocks to have their Phys Addr divisible by
; 86   :         // CPHYSMEM_MEMORY_ALIGNMENT. To achieve this, we start off
; 87   :         // having the physical memory block aligned properly, and
; 88   :         // then allocate memory only in blocks divisible by 
; 89   :         // CPHYSMEM_MEMORY_ALIGNMENT
; 90   :         const DWORD dwOffset = m_dwNormalPA & (CPHYSMEM_MEMORY_ALIGNMENT - 1);

  001a0	e59d3048	 ldr         r3, [sp, #0x48]
  001a4	e2833050	 add         r3, r3, #0x50
  001a8	e5933000	 ldr         r3, [r3]
  001ac	e203301f	 and         r3, r3, #0x1F
  001b0	e58d3004	 str         r3, [sp, #4]

; 91   :         DEBUGCHK( dwOffset == m_dwNormalPA % CPHYSMEM_MEMORY_ALIGNMENT );

  001b4	e59d3048	 ldr         r3, [sp, #0x48]
  001b8	e2833050	 add         r3, r3, #0x50
  001bc	e5931000	 ldr         r1, [r3]
  001c0	e3a00020	 mov         r0, #0x20
  001c4	eb000000	 bl          __rt_udiv
  001c8	e59d3004	 ldr         r3, [sp, #4]
  001cc	e1530001	 cmp         r3, r1
  001d0	1a000002	 bne         |$LN12@CPhysMem|
  001d4	e3a03001	 mov         r3, #1
  001d8	e58d3020	 str         r3, [sp, #0x20]
  001dc	ea000007	 b           |$LN13@CPhysMem|
  001e0		 |$LN12@CPhysMem|
  001e0	e3a0305b	 mov         r3, #0x5B
  001e4	e59f244c	 ldr         r2, [pc, #0x44C]
  001e8	e59f1434	 ldr         r1, [pc, #0x434]
  001ec	e59f0440	 ldr         r0, [pc, #0x440]
  001f0	eb000000	 bl          NKDbgPrintfW
  001f4	e6000010	 __debugbreak_ce
  001f8	e3a03000	 mov         r3, #0
  001fc	e58d3020	 str         r3, [sp, #0x20]
  00200		 |$LN13@CPhysMem|

; 92   :         DEBUGCHK( cbSize > CPHYSMEM_MEMORY_ALIGNMENT );

  00200	e59d304c	 ldr         r3, [sp, #0x4C]
  00204	e3530020	 cmp         r3, #0x20
  00208	9a000002	 bls         |$LN14@CPhysMem|
  0020c	e3a03001	 mov         r3, #1
  00210	e58d3024	 str         r3, [sp, #0x24]
  00214	ea000007	 b           |$LN15@CPhysMem|
  00218		 |$LN14@CPhysMem|
  00218	e3a0305c	 mov         r3, #0x5C
  0021c	e59f2414	 ldr         r2, [pc, #0x414]
  00220	e59f13fc	 ldr         r1, [pc, #0x3FC]
  00224	e59f0408	 ldr         r0, [pc, #0x408]
  00228	eb000000	 bl          NKDbgPrintfW
  0022c	e6000010	 __debugbreak_ce
  00230	e3a03000	 mov         r3, #0
  00234	e58d3024	 str         r3, [sp, #0x24]
  00238		 |$LN15@CPhysMem|

; 93   :         if ( dwOffset != 0 ) {

  00238	e59d3004	 ldr         r3, [sp, #4]
  0023c	e3530000	 cmp         r3, #0
  00240	0a000022	 beq         |$LN1@CPhysMem|

; 94   :             // skip over the first few bytes of memory, as it is not
; 95   :             // aligned properly. This shouldn't happen though, because
; 96   :             // the new memory should have been aligned on a page boundary
; 97   :             DEBUGCHK( 0 );

  00244	ea000002	 b           |$LN16@CPhysMem|
  00248	e3a03001	 mov         r3, #1
  0024c	e58d3028	 str         r3, [sp, #0x28]
  00250	ea000007	 b           |$LN17@CPhysMem|
  00254		 |$LN16@CPhysMem|
  00254	e3a03061	 mov         r3, #0x61
  00258	e59f23d8	 ldr         r2, [pc, #0x3D8]
  0025c	e59f13c0	 ldr         r1, [pc, #0x3C0]
  00260	e59f03cc	 ldr         r0, [pc, #0x3CC]
  00264	eb000000	 bl          NKDbgPrintfW
  00268	e6000010	 __debugbreak_ce
  0026c	e3a03000	 mov         r3, #0
  00270	e58d3028	 str         r3, [sp, #0x28]
  00274		 |$LN17@CPhysMem|

; 98   :             // we can't code -= dwOffset because then we'll enter
; 99   :             // memory that we don't own.
; 100  :             m_dwNormalVA += CPHYSMEM_MEMORY_ALIGNMENT - dwOffset;

  00274	e59d3048	 ldr         r3, [sp, #0x48]
  00278	e2831054	 add         r1, r3, #0x54
  0027c	e59d3004	 ldr         r3, [sp, #4]
  00280	e2632020	 rsb         r2, r3, #0x20
  00284	e5913000	 ldr         r3, [r1]
  00288	e0832002	 add         r2, r3, r2
  0028c	e59d3048	 ldr         r3, [sp, #0x48]
  00290	e2833054	 add         r3, r3, #0x54
  00294	e5832000	 str         r2, [r3]

; 101  :             m_dwNormalPA += CPHYSMEM_MEMORY_ALIGNMENT - dwOffset;

  00298	e59d3048	 ldr         r3, [sp, #0x48]
  0029c	e2831050	 add         r1, r3, #0x50
  002a0	e59d3004	 ldr         r3, [sp, #4]
  002a4	e2632020	 rsb         r2, r3, #0x20
  002a8	e5913000	 ldr         r3, [r1]
  002ac	e0832002	 add         r2, r3, r2
  002b0	e59d3048	 ldr         r3, [sp, #0x48]
  002b4	e2833050	 add         r3, r3, #0x50
  002b8	e5832000	 str         r2, [r3]

; 102  :             cbSize -= CPHYSMEM_MEMORY_ALIGNMENT - dwOffset;

  002bc	e59d3004	 ldr         r3, [sp, #4]
  002c0	e2632020	 rsb         r2, r3, #0x20
  002c4	e59d304c	 ldr         r3, [sp, #0x4C]
  002c8	e0433002	 sub         r3, r3, r2
  002cc	e58d304c	 str         r3, [sp, #0x4C]
  002d0		 |$LN1@CPhysMem|

; 103  :         }
; 104  :     }
; 105  :     
; 106  :     m_dwTotalPhysMemSize = cbSize;

  002d0	e59d3048	 ldr         r3, [sp, #0x48]
  002d4	e2832038	 add         r2, r3, #0x38
  002d8	e59d304c	 ldr         r3, [sp, #0x4C]
  002dc	e5823000	 str         r3, [r2]

; 107  :     m_PaVaConversion = m_dwNormalPA - m_dwNormalVA;

  002e0	e59d3048	 ldr         r3, [sp, #0x48]
  002e4	e2832050	 add         r2, r3, #0x50
  002e8	e59d3048	 ldr         r3, [sp, #0x48]
  002ec	e2833054	 add         r3, r3, #0x54
  002f0	e5922000	 ldr         r2, [r2]
  002f4	e5933000	 ldr         r3, [r3]
  002f8	e0422003	 sub         r2, r2, r3
  002fc	e59d3048	 ldr         r3, [sp, #0x48]
  00300	e2833034	 add         r3, r3, #0x34
  00304	e5832000	 str         r2, [r3]

; 108  :     
; 109  :     DEBUGMSG(ZONE_INIT,
; 110  :         (TEXT("CPhysMem   Total Alloc Region PhysAddr = 0x%08X, VirtAddr = 0x%08X, size = %d\r\n"),
; 111  :         m_dwNormalPA, m_dwNormalVA, m_dwTotalPhysMemSize));

  00308	e59f3314	 ldr         r3, [pc, #0x314]
  0030c	e5933440	 ldr         r3, [r3, #0x440]
  00310	e3130002	 tst         r3, #2
  00314	0a00000d	 beq         |$LN18@CPhysMem|
  00318	e59d3048	 ldr         r3, [sp, #0x48]
  0031c	e2833038	 add         r3, r3, #0x38
  00320	e5933000	 ldr         r3, [r3]
  00324	e59d2048	 ldr         r2, [sp, #0x48]
  00328	e2822054	 add         r2, r2, #0x54
  0032c	e5922000	 ldr         r2, [r2]
  00330	e59d1048	 ldr         r1, [sp, #0x48]
  00334	e2811050	 add         r1, r1, #0x50
  00338	e5911000	 ldr         r1, [r1]
  0033c	e59f02ec	 ldr         r0, [pc, #0x2EC]
  00340	eb000000	 bl          NKDbgPrintfW
  00344	e3a03001	 mov         r3, #1
  00348	e58d302c	 str         r3, [sp, #0x2C]
  0034c	ea000001	 b           |$LN19@CPhysMem|
  00350		 |$LN18@CPhysMem|
  00350	e3a03000	 mov         r3, #0
  00354	e58d302c	 str         r3, [sp, #0x2C]
  00358		 |$LN19@CPhysMem|

; 112  : 
; 113  :     //
; 114  :     // Set aside a page for the special request.
; 115  :     //
; 116  :     m_dwSpecialVA = (DWORD) m_dwNormalVA;

  00358	e59d3048	 ldr         r3, [sp, #0x48]
  0035c	e2831054	 add         r1, r3, #0x54
  00360	e59d3048	 ldr         r3, [sp, #0x48]
  00364	e2832048	 add         r2, r3, #0x48
  00368	e5913000	 ldr         r3, [r1]
  0036c	e5823000	 str         r3, [r2]

; 117  :     m_dwSpecialPA = (DWORD) m_dwNormalPA;

  00370	e59d3048	 ldr         r3, [sp, #0x48]
  00374	e2831050	 add         r1, r3, #0x50
  00378	e59d3048	 ldr         r3, [sp, #0x48]
  0037c	e2832044	 add         r2, r3, #0x44
  00380	e5913000	 ldr         r3, [r1]
  00384	e5823000	 str         r3, [r2]

; 118  :     m_dwNormalVA += USBPAGESIZE;

  00388	e59d3048	 ldr         r3, [sp, #0x48]
  0038c	e2833054	 add         r3, r3, #0x54
  00390	e5933000	 ldr         r3, [r3]
  00394	e2832a01	 add         r2, r3, #1, 20
  00398	e59d3048	 ldr         r3, [sp, #0x48]
  0039c	e2833054	 add         r3, r3, #0x54
  003a0	e5832000	 str         r2, [r3]

; 119  :     m_dwNormalPA += USBPAGESIZE;

  003a4	e59d3048	 ldr         r3, [sp, #0x48]
  003a8	e2833050	 add         r3, r3, #0x50
  003ac	e5933000	 ldr         r3, [r3]
  003b0	e2832a01	 add         r2, r3, #1, 20
  003b4	e59d3048	 ldr         r3, [sp, #0x48]
  003b8	e2833050	 add         r3, r3, #0x50
  003bc	e5832000	 str         r2, [r3]

; 120  :     cbSize -= USBPAGESIZE;

  003c0	e59d304c	 ldr         r3, [sp, #0x4C]
  003c4	e2433a01	 sub         r3, r3, #1, 20
  003c8	e58d304c	 str         r3, [sp, #0x4C]

; 121  :     m_bSpecialTaken = FALSE;

  003cc	e59d3048	 ldr         r3, [sp, #0x48]
  003d0	e283204c	 add         r2, r3, #0x4C
  003d4	e3a03000	 mov         r3, #0
  003d8	e5823000	 str         r3, [r2]

; 122  :     memset((PVOID) m_dwSpecialVA, 0x00, USBPAGESIZE);

  003dc	e3a02a01	 mov         r2, #1, 20
  003e0	e3a01000	 mov         r1, #0
  003e4	e59d3048	 ldr         r3, [sp, #0x48]
  003e8	e2833048	 add         r3, r3, #0x48
  003ec	e5930000	 ldr         r0, [r3]
  003f0	eb000000	 bl          memset

; 123  : 
; 124  :     DEBUGMSG(ZONE_INIT,
; 125  :         (TEXT("CPhysMem Special Alloc Region PhysAddr = 0x%08X, VirtAddr = 0x%08X, size = %d\r\n"),
; 126  :         m_dwSpecialPA, m_dwSpecialVA, USBPAGESIZE));

  003f4	e59f3228	 ldr         r3, [pc, #0x228]
  003f8	e5933440	 ldr         r3, [r3, #0x440]
  003fc	e3130002	 tst         r3, #2
  00400	0a00000b	 beq         |$LN20@CPhysMem|
  00404	e3a03a01	 mov         r3, #1, 20
  00408	e59d2048	 ldr         r2, [sp, #0x48]
  0040c	e2822048	 add         r2, r2, #0x48
  00410	e5922000	 ldr         r2, [r2]
  00414	e59d1048	 ldr         r1, [sp, #0x48]
  00418	e2811044	 add         r1, r1, #0x44
  0041c	e5911000	 ldr         r1, [r1]
  00420	e59f0204	 ldr         r0, [pc, #0x204]
  00424	eb000000	 bl          NKDbgPrintfW
  00428	e3a03001	 mov         r3, #1
  0042c	e58d3030	 str         r3, [sp, #0x30]
  00430	ea000001	 b           |$LN21@CPhysMem|
  00434		 |$LN20@CPhysMem|
  00434	e3a03000	 mov         r3, #0
  00438	e58d3030	 str         r3, [sp, #0x30]
  0043c		 |$LN21@CPhysMem|

; 127  : 
; 128  :     //
; 129  :     // Set aside the High Priority region.
; 130  :     //
; 131  :     m_dwHighPriorityVA = (DWORD) m_dwNormalVA;

  0043c	e59d3048	 ldr         r3, [sp, #0x48]
  00440	e2831054	 add         r1, r3, #0x54
  00444	e59d3048	 ldr         r3, [sp, #0x48]
  00448	e2832068	 add         r2, r3, #0x68
  0044c	e5913000	 ldr         r3, [r1]
  00450	e5823000	 str         r3, [r2]

; 132  :     m_dwHighPriorityPA = (DWORD) m_dwNormalPA;

  00454	e59d3048	 ldr         r3, [sp, #0x48]
  00458	e2831050	 add         r1, r3, #0x50
  0045c	e59d3048	 ldr         r3, [sp, #0x48]
  00460	e2832064	 add         r2, r3, #0x64
  00464	e5913000	 ldr         r3, [r1]
  00468	e5823000	 str         r3, [r2]

; 133  :     m_dwNormalVA += cbHighPrioritySize;

  0046c	e59d3048	 ldr         r3, [sp, #0x48]
  00470	e2833054	 add         r3, r3, #0x54
  00474	e5932000	 ldr         r2, [r3]
  00478	e59d3050	 ldr         r3, [sp, #0x50]
  0047c	e0822003	 add         r2, r2, r3
  00480	e59d3048	 ldr         r3, [sp, #0x48]
  00484	e2833054	 add         r3, r3, #0x54
  00488	e5832000	 str         r2, [r3]

; 134  :     m_dwNormalPA += cbHighPrioritySize;

  0048c	e59d3048	 ldr         r3, [sp, #0x48]
  00490	e2833050	 add         r3, r3, #0x50
  00494	e5932000	 ldr         r2, [r3]
  00498	e59d3050	 ldr         r3, [sp, #0x50]
  0049c	e0822003	 add         r2, r2, r3
  004a0	e59d3048	 ldr         r3, [sp, #0x48]
  004a4	e2833050	 add         r3, r3, #0x50
  004a8	e5832000	 str         r2, [r3]

; 135  :     cbSize -= cbHighPrioritySize;

  004ac	e59d204c	 ldr         r2, [sp, #0x4C]
  004b0	e59d3050	 ldr         r3, [sp, #0x50]
  004b4	e0423003	 sub         r3, r2, r3
  004b8	e58d304c	 str         r3, [sp, #0x4C]

; 136  :     m_dwHighPrioritySize = cbHighPrioritySize;

  004bc	e59d3048	 ldr         r3, [sp, #0x48]
  004c0	e283206c	 add         r2, r3, #0x6C
  004c4	e59d3050	 ldr         r3, [sp, #0x50]
  004c8	e5823000	 str         r3, [r2]

; 137  :     memset((PVOID) m_dwHighPriorityVA, 0x00, m_dwHighPrioritySize);

  004cc	e59d3048	 ldr         r3, [sp, #0x48]
  004d0	e283306c	 add         r3, r3, #0x6C
  004d4	e5932000	 ldr         r2, [r3]
  004d8	e3a01000	 mov         r1, #0
  004dc	e59d3048	 ldr         r3, [sp, #0x48]
  004e0	e2833068	 add         r3, r3, #0x68
  004e4	e5930000	 ldr         r0, [r3]
  004e8	eb000000	 bl          memset

; 138  : 
; 139  :     DEBUGMSG(ZONE_INIT,
; 140  :         (TEXT("CPhysMem HighPri Alloc Region PhysAddr = 0x%08X, VirtAddr = 0x%08X, size = %d\r\n"),
; 141  :         m_dwHighPriorityPA, m_dwHighPriorityVA, m_dwHighPrioritySize));

  004ec	e59f3130	 ldr         r3, [pc, #0x130]
  004f0	e5933440	 ldr         r3, [r3, #0x440]
  004f4	e3130002	 tst         r3, #2
  004f8	0a00000d	 beq         |$LN22@CPhysMem|
  004fc	e59d3048	 ldr         r3, [sp, #0x48]
  00500	e283306c	 add         r3, r3, #0x6C
  00504	e5933000	 ldr         r3, [r3]
  00508	e59d2048	 ldr         r2, [sp, #0x48]
  0050c	e2822068	 add         r2, r2, #0x68
  00510	e5922000	 ldr         r2, [r2]
  00514	e59d1048	 ldr         r1, [sp, #0x48]
  00518	e2811064	 add         r1, r1, #0x64
  0051c	e5911000	 ldr         r1, [r1]
  00520	e59f0100	 ldr         r0, [pc, #0x100]
  00524	eb000000	 bl          NKDbgPrintfW
  00528	e3a03001	 mov         r3, #1
  0052c	e58d3034	 str         r3, [sp, #0x34]
  00530	ea000001	 b           |$LN23@CPhysMem|
  00534		 |$LN22@CPhysMem|
  00534	e3a03000	 mov         r3, #0
  00538	e58d3034	 str         r3, [sp, #0x34]
  0053c		 |$LN23@CPhysMem|

; 142  : 
; 143  :     //
; 144  :     // And the rest is for normal allocations.
; 145  :     //
; 146  :     m_dwNormalSize = cbSize;

  0053c	e59d3048	 ldr         r3, [sp, #0x48]
  00540	e2832058	 add         r2, r3, #0x58
  00544	e59d304c	 ldr         r3, [sp, #0x4C]
  00548	e5823000	 str         r3, [r2]

; 147  :     memset((PVOID) m_dwNormalVA, 0x00, m_dwNormalSize);

  0054c	e59d3048	 ldr         r3, [sp, #0x48]
  00550	e2833058	 add         r3, r3, #0x58
  00554	e5932000	 ldr         r2, [r3]
  00558	e3a01000	 mov         r1, #0
  0055c	e59d3048	 ldr         r3, [sp, #0x48]
  00560	e2833054	 add         r3, r3, #0x54
  00564	e5930000	 ldr         r0, [r3]
  00568	eb000000	 bl          memset

; 148  :     
; 149  :     DEBUGMSG(ZONE_INIT,
; 150  :         (TEXT("CPhysMem  Normal Alloc Region PhysAddr = 0x%08X, VirtAddr = 0x%08X, size = %d\r\n"),
; 151  :         m_dwNormalPA, m_dwNormalVA, m_dwNormalSize));

  0056c	e59f30b0	 ldr         r3, [pc, #0xB0]
  00570	e5933440	 ldr         r3, [r3, #0x440]
  00574	e3130002	 tst         r3, #2
  00578	0a00000d	 beq         |$LN24@CPhysMem|
  0057c	e59d3048	 ldr         r3, [sp, #0x48]
  00580	e2833058	 add         r3, r3, #0x58
  00584	e5933000	 ldr         r3, [r3]
  00588	e59d2048	 ldr         r2, [sp, #0x48]
  0058c	e2822054	 add         r2, r2, #0x54
  00590	e5922000	 ldr         r2, [r2]
  00594	e59d1048	 ldr         r1, [sp, #0x48]
  00598	e2811050	 add         r1, r1, #0x50
  0059c	e5911000	 ldr         r1, [r1]
  005a0	e59f0078	 ldr         r0, [pc, #0x78]
  005a4	eb000000	 bl          NKDbgPrintfW
  005a8	e3a03001	 mov         r3, #1
  005ac	e58d3038	 str         r3, [sp, #0x38]
  005b0	ea000001	 b           |$LN25@CPhysMem|
  005b4		 |$LN24@CPhysMem|
  005b4	e3a03000	 mov         r3, #0
  005b8	e58d3038	 str         r3, [sp, #0x38]
  005bc		 |$LN25@CPhysMem|

; 152  : 
; 153  : 
; 154  : 
; 155  :     m_hFreeMemEvent = CreateEvent(NULL, TRUE, FALSE, NULL);

  005bc	e3a03000	 mov         r3, #0
  005c0	e3a02000	 mov         r2, #0
  005c4	e3a01001	 mov         r1, #1
  005c8	e3a00000	 mov         r0, #0
  005cc	eb000000	 bl          CreateEventW
  005d0	e58d003c	 str         r0, [sp, #0x3C]
  005d4	e59d3048	 ldr         r3, [sp, #0x48]
  005d8	e283202c	 add         r2, r3, #0x2C
  005dc	e59d303c	 ldr         r3, [sp, #0x3C]
  005e0	e5823000	 str         r3, [r2]

; 156  :     m_fHasBlocked = FALSE;

  005e4	e59d3048	 ldr         r3, [sp, #0x48]
  005e8	e2832030	 add         r2, r3, #0x30
  005ec	e3a03000	 mov         r3, #0
  005f0	e5823000	 str         r3, [r2]

; 157  :     InitializeCriticalSection(&m_csLock);

  005f4	e59d3048	 ldr         r3, [sp, #0x48]
  005f8	e2830010	 add         r0, r3, #0x10
  005fc	eb000000	 bl          InitializeCriticalSection

; 158  : 
; 159  :     ReInit();

  00600	e59d0048	 ldr         r0, [sp, #0x48]
  00604	eb000000	 bl          |?ReInit@CPhysMem@@QAAXXZ|

; 160  : 
; 161  : }

  00608	e59d3048	 ldr         r3, [sp, #0x48]
  0060c	e58d300c	 str         r3, [sp, #0xC]
  00610	e59d000c	 ldr         r0, [sp, #0xC]
  00614	e28dd040	 add         sp, sp, #0x40
  00618	e89d6000	 ldmia       sp, {sp, lr}
  0061c	e12fff1e	 bx          lr
  00620		 |$LN29@CPhysMem|
  00620		 |$LN30@CPhysMem|
  00620	00000000	 DCD         |??_C@_1KA@FJCCGHGB@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AA?5?$AAN?$AAo?$AAr?$AAm?$AAa?$AAl?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@|
  00624		 |$LN31@CPhysMem|
  00624	00000000	 DCD         |dpCurSettings|
  00628		 |$LN32@CPhysMem|
  00628	00000000	 DCD         |??_C@_1KA@PJOEMMCM@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAH?$AAi?$AAg?$AAh?$AAP?$AAr?$AAi?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@|
  0062c		 |$LN33@CPhysMem|
  0062c	00000000	 DCD         |??_C@_1KA@JBKPJKEP@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAS?$AAp?$AAe?$AAc?$AAi?$AAa?$AAl?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@|
  00630		 |$LN34@CPhysMem|
  00630	00000000	 DCD         |??_C@_1KA@PIBOCLFE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AA?5?$AA?5?$AAT?$AAo?$AAt?$AAa?$AAl?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@|
  00634		 |$LN35@CPhysMem|
  00634	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  00638		 |$LN36@CPhysMem|
  00638	00000000	 DCD         |??_C@_1LM@NABMAHLD@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  0063c		 |$LN37@CPhysMem|
  0063c	00000000	 DCD         |??_C@_1FA@ICCPJKCO@?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe@|
  00640		 |$LN38@CPhysMem|
  00640	00000000	 DCD         |??_C@_1EA@LENIGCOC@?$AAD?$AAM?$AAA?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAP?$AAD?$AAD?$AA?$AN?$AA?6?$AA?$AA@|
  00644		 |$LN39@CPhysMem|
  00644	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  00648		 |$M34237|

			 ENDP  ; |??0CPhysMem@@QAA@KKPAE0@Z|, CPhysMem::CPhysMem

	EXPORT	|??_C@_1GE@MMCCLEGJ@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAH?$AAi?$AAg?$AAh?$AAP?$AAr?$AAi?$AA?5?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAH?$AAe?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@NLPJGAMO@?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAH?$AAi?$AAg?$AAh?$AA?5?$AAP?$AAr?$AAi?$AA?5?$AAM?$AAe?$AAm?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?ValidateHeaps@CPhysMem@@AAAHH@Z|	; CPhysMem::ValidateHeaps
	EXPORT	|?InsertNodeBefore@@YAXPAUtMEMLIST@@0@Z| ; InsertNodeBefore
	EXPORT	|?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|	; FirstNode
	EXPORT	|??_C@_1FO@GMLOFHA@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAM?$AAa?$AAi?$AAn?$AA?5?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@BENCJCHP@?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAL?$AAo?$AAw?$AA?5?$AAP?$AAr?$AAi?$AA?5?$AAM?$AAe?$AAm?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JM@GLIPFLD@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAH?$AAi?$AAg?$AAh?$AAP?$AAr?$AAi?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AAH@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IA@BJAEEMDH@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AAH?$AAe?$AAa?$AAd?$AA?5?$AA?$DN?$AA?5?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@PMOPNGBB@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAN?$AAo?$AAd?$AAe?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AAH?$AAe?$AAa?$AAd@| [ DATA ] ; `string'
	EXPORT	|?InitializeListHead@@YAXPAUtMEMLIST@@@Z| ; InitializeListHead
	EXPORT	|?CreateNewNode@CPhysMem@@AAAPAUtMEMLIST@@KKK@Z| ; CPhysMem::CreateNewNode
	IMPORT	|LeaveCriticalSection|
	IMPORT	|wcscpy|
	IMPORT	|EnterCriticalSection|

  00008			 AREA	 |.pdata|, PDATA
|$T34267| DCD	|$LN26@ReInit|
	DCD	0x40013c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@MMCCLEGJ@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAH?$AAi?$AAg?$AAh?$AAP?$AAr?$AAi?$AA?5?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAH?$AAe?$AAa@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, " ", 0x0, ":", 0x0, " ", 0x0, "H", 0x0, "i", 0x0, "g"
	DCB	0x0, "h", 0x0, "P", 0x0, "r", 0x0, "i", 0x0, " ", 0x0, "F"
	DCB	0x0, "r", 0x0, "e", 0x0, "e", 0x0, " ", 0x0, "H", 0x0, "e"
	DCB	0x0, "a", 0x0, "p", 0x0, " ", 0x0, "N", 0x0, "o", 0x0, "d"
	DCB	0x0, "e", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@NLPJGAMO@?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAH?$AAi?$AAg?$AAh?$AA?5?$AAP?$AAr?$AAi?$AA?5?$AAM?$AAe?$AAm?$AA?$AA@| DCB "F"
	DCB	0x0, "r", 0x0, "e", 0x0, "e", 0x0, " ", 0x0, "H", 0x0, "i"
	DCB	0x0, "g", 0x0, "h", 0x0, " ", 0x0, "P", 0x0, "r", 0x0, "i"
	DCB	0x0, " ", 0x0, "M", 0x0, "e", 0x0, "m", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@GMLOFHA@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAM?$AAa?$AAi?$AAn?$AA?5?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAN@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, " ", 0x0, ":", 0x0, " ", 0x0, "M", 0x0, "a", 0x0, "i"
	DCB	0x0, "n", 0x0, " ", 0x0, "F", 0x0, "r", 0x0, "e", 0x0, "e"
	DCB	0x0, " ", 0x0, "H", 0x0, "e", 0x0, "a", 0x0, "p", 0x0, " "
	DCB	0x0, "N", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@BENCJCHP@?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAL?$AAo?$AAw?$AA?5?$AAP?$AAr?$AAi?$AA?5?$AAM?$AAe?$AAm?$AA?$AA@| DCB "F"
	DCB	0x0, "r", 0x0, "e", 0x0, "e", 0x0, " ", 0x0, "L", 0x0, "o"
	DCB	0x0, "w", 0x0, " ", 0x0, "P", 0x0, "r", 0x0, "i", 0x0, " "
	DCB	0x0, "M", 0x0, "e", 0x0, "m", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JM@GLIPFLD@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAH?$AAi?$AAg?$AAh?$AAP?$AAr?$AAi?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AAH@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, " ", 0x0, ":", 0x0, " ", 0x0, "H", 0x0, "i", 0x0, "g"
	DCB	0x0, "h", 0x0, "P", 0x0, "r", 0x0, "i", 0x0, "F", 0x0, "r"
	DCB	0x0, "e", 0x0, "e", 0x0, "L", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "H", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, ",", 0x0, " ", 0x0, "H", 0x0, "i", 0x0, "g"
	DCB	0x0, "h", 0x0, "P", 0x0, "r", 0x0, "i", 0x0, "I", 0x0, "n"
	DCB	0x0, "U", 0x0, "s", 0x0, "e", 0x0, "L", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "H", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IA@BJAEEMDH@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AAH?$AAe?$AAa?$AAd?$AA?5?$AA?$DN?$AA?5?$AA0@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, " ", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "r", 0x0, "e"
	DCB	0x0, "e", 0x0, "L", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "H"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, ",", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "U", 0x0, "s"
	DCB	0x0, "e", 0x0, "L", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "H"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@PMOPNGBB@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAN?$AAo?$AAd?$AAe?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AAH?$AAe?$AAa?$AAd@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, " ", 0x0, ":", 0x0, " ", 0x0, "N", 0x0, "o", 0x0, "d"
	DCB	0x0, "e", 0x0, "F", 0x0, "r", 0x0, "e", 0x0, "e", 0x0, "L"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "H", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00648			 AREA	 |.text|, CODE, ARM

  00648		 |?ReInit@CPhysMem@@QAAXXZ| PROC	; CPhysMem::ReInit

; 173  : {

  00648		 |$LN26@ReInit|
  00648	e1a0c00d	 mov         r12, sp
  0064c	e92d0001	 stmdb       sp!, {r0}
  00650	e92d5000	 stmdb       sp!, {r12, lr}
  00654	e24dd040	 sub         sp, sp, #0x40
  00658		 |$M34264|

; 174  :     PMEMLIST pNode;
; 175  :     EnterCriticalSection(&m_csLock);

  00658	e59d3048	 ldr         r3, [sp, #0x48]
  0065c	e2830010	 add         r0, r3, #0x10
  00660	eb000000	 bl          EnterCriticalSection

; 176  :     //
; 177  :     // Create dummy entries for the list head (simpler linked list code)
; 178  :     //
; 179  :     m_pNodeFreeListHead = CreateNewNode(0, 0, 0);

  00664	e3a03000	 mov         r3, #0
  00668	e3a02000	 mov         r2, #0
  0066c	e3a01000	 mov         r1, #0
  00670	e59d0048	 ldr         r0, [sp, #0x48]
  00674	eb000000	 bl          |?CreateNewNode@CPhysMem@@AAAPAUtMEMLIST@@KKK@Z|
  00678	e58d0004	 str         r0, [sp, #4]
  0067c	e59d3048	 ldr         r3, [sp, #0x48]
  00680	e2832040	 add         r2, r3, #0x40
  00684	e59d3004	 ldr         r3, [sp, #4]
  00688	e5823000	 str         r3, [r2]

; 180  :     if (m_pNodeFreeListHead) InitializeListHead(m_pNodeFreeListHead);

  0068c	e59d3048	 ldr         r3, [sp, #0x48]
  00690	e2833040	 add         r3, r3, #0x40
  00694	e5933000	 ldr         r3, [r3]
  00698	e3530000	 cmp         r3, #0
  0069c	0a000003	 beq         |$LN9@ReInit|
  006a0	e59d3048	 ldr         r3, [sp, #0x48]
  006a4	e2833040	 add         r3, r3, #0x40
  006a8	e5930000	 ldr         r0, [r3]
  006ac	eb000000	 bl          |?InitializeListHead@@YAXPAUtMEMLIST@@@Z|
  006b0		 |$LN9@ReInit|

; 181  : 
; 182  :     DEBUGMSG(ZONE_CPHYSMEM && ZONE_VERBOSE, (TEXT("CPhysMem Init : NodeFreeListHead = 0x%08X\r\n"),
; 183  :                           m_pNodeFreeListHead));

  006b0	e59f3464	 ldr         r3, [pc, #0x464]
  006b4	e5933440	 ldr         r3, [r3, #0x440]
  006b8	e3130b02	 tst         r3, #2, 22
  006bc	0a00000b	 beq         |$LN12@ReInit|
  006c0	e59f3454	 ldr         r3, [pc, #0x454]
  006c4	e5933440	 ldr         r3, [r3, #0x440]
  006c8	e3130a01	 tst         r3, #1, 20
  006cc	0a000007	 beq         |$LN12@ReInit|
  006d0	e59d3048	 ldr         r3, [sp, #0x48]
  006d4	e2833040	 add         r3, r3, #0x40
  006d8	e5931000	 ldr         r1, [r3]
  006dc	e59f0450	 ldr         r0, [pc, #0x450]
  006e0	eb000000	 bl          NKDbgPrintfW
  006e4	e3a03001	 mov         r3, #1
  006e8	e58d3008	 str         r3, [sp, #8]
  006ec	ea000001	 b           |$LN13@ReInit|
  006f0		 |$LN12@ReInit|
  006f0	e3a03000	 mov         r3, #0
  006f4	e58d3008	 str         r3, [sp, #8]
  006f8		 |$LN13@ReInit|

; 184  :     
; 185  :     m_pFreeListHead = CreateNewNode(0, 0, 0);

  006f8	e3a03000	 mov         r3, #0
  006fc	e3a02000	 mov         r2, #0
  00700	e3a01000	 mov         r1, #0
  00704	e59d0048	 ldr         r0, [sp, #0x48]
  00708	eb000000	 bl          |?CreateNewNode@CPhysMem@@AAAPAUtMEMLIST@@KKK@Z|
  0070c	e58d000c	 str         r0, [sp, #0xC]
  00710	e59d3048	 ldr         r3, [sp, #0x48]
  00714	e283205c	 add         r2, r3, #0x5C
  00718	e59d300c	 ldr         r3, [sp, #0xC]
  0071c	e5823000	 str         r3, [r2]

; 186  :     if (m_pFreeListHead) InitializeListHead(m_pFreeListHead);

  00720	e59d3048	 ldr         r3, [sp, #0x48]
  00724	e283305c	 add         r3, r3, #0x5C
  00728	e5933000	 ldr         r3, [r3]
  0072c	e3530000	 cmp         r3, #0
  00730	0a000003	 beq         |$LN8@ReInit|
  00734	e59d3048	 ldr         r3, [sp, #0x48]
  00738	e283305c	 add         r3, r3, #0x5C
  0073c	e5930000	 ldr         r0, [r3]
  00740	eb000000	 bl          |?InitializeListHead@@YAXPAUtMEMLIST@@@Z|
  00744		 |$LN8@ReInit|

; 187  : 
; 188  :     m_pInUseListHead = CreateNewNode(0, 0, 0);

  00744	e3a03000	 mov         r3, #0
  00748	e3a02000	 mov         r2, #0
  0074c	e3a01000	 mov         r1, #0
  00750	e59d0048	 ldr         r0, [sp, #0x48]
  00754	eb000000	 bl          |?CreateNewNode@CPhysMem@@AAAPAUtMEMLIST@@KKK@Z|
  00758	e58d0010	 str         r0, [sp, #0x10]
  0075c	e59d3048	 ldr         r3, [sp, #0x48]
  00760	e2832060	 add         r2, r3, #0x60
  00764	e59d3010	 ldr         r3, [sp, #0x10]
  00768	e5823000	 str         r3, [r2]

; 189  :     if (m_pInUseListHead) InitializeListHead(m_pInUseListHead);

  0076c	e59d3048	 ldr         r3, [sp, #0x48]
  00770	e2833060	 add         r3, r3, #0x60
  00774	e5933000	 ldr         r3, [r3]
  00778	e3530000	 cmp         r3, #0
  0077c	0a000003	 beq         |$LN7@ReInit|
  00780	e59d3048	 ldr         r3, [sp, #0x48]
  00784	e2833060	 add         r3, r3, #0x60
  00788	e5930000	 ldr         r0, [r3]
  0078c	eb000000	 bl          |?InitializeListHead@@YAXPAUtMEMLIST@@@Z|
  00790		 |$LN7@ReInit|

; 190  :     
; 191  : 
; 192  :     DEBUGMSG(ZONE_CPHYSMEM && ZONE_VERBOSE, (TEXT("CPhysMem Init : FreeListHead = 0x%08X, InUseListHead = 0x%08X\r\n"), m_pFreeListHead, m_pInUseListHead));

  00790	e59f3384	 ldr         r3, [pc, #0x384]
  00794	e5933440	 ldr         r3, [r3, #0x440]
  00798	e3130b02	 tst         r3, #2, 22
  0079c	0a00000e	 beq         |$LN14@ReInit|
  007a0	e59f3374	 ldr         r3, [pc, #0x374]
  007a4	e5933440	 ldr         r3, [r3, #0x440]
  007a8	e3130a01	 tst         r3, #1, 20
  007ac	0a00000a	 beq         |$LN14@ReInit|
  007b0	e59d3048	 ldr         r3, [sp, #0x48]
  007b4	e2833060	 add         r3, r3, #0x60
  007b8	e5932000	 ldr         r2, [r3]
  007bc	e59d3048	 ldr         r3, [sp, #0x48]
  007c0	e283305c	 add         r3, r3, #0x5C
  007c4	e5931000	 ldr         r1, [r3]
  007c8	e59f0360	 ldr         r0, [pc, #0x360]
  007cc	eb000000	 bl          NKDbgPrintfW
  007d0	e3a03001	 mov         r3, #1
  007d4	e58d3014	 str         r3, [sp, #0x14]
  007d8	ea000001	 b           |$LN15@ReInit|
  007dc		 |$LN14@ReInit|
  007dc	e3a03000	 mov         r3, #0
  007e0	e58d3014	 str         r3, [sp, #0x14]
  007e4		 |$LN15@ReInit|

; 193  : 
; 194  :     m_pHighPriorityFreeListHead = CreateNewNode(0, 0, 0);

  007e4	e3a03000	 mov         r3, #0
  007e8	e3a02000	 mov         r2, #0
  007ec	e3a01000	 mov         r1, #0
  007f0	e59d0048	 ldr         r0, [sp, #0x48]
  007f4	eb000000	 bl          |?CreateNewNode@CPhysMem@@AAAPAUtMEMLIST@@KKK@Z|
  007f8	e58d0018	 str         r0, [sp, #0x18]
  007fc	e59d3048	 ldr         r3, [sp, #0x48]
  00800	e2832074	 add         r2, r3, #0x74
  00804	e59d3018	 ldr         r3, [sp, #0x18]
  00808	e5823000	 str         r3, [r2]

; 195  :     if (m_pHighPriorityFreeListHead) InitializeListHead(m_pHighPriorityFreeListHead);

  0080c	e59d3048	 ldr         r3, [sp, #0x48]
  00810	e2833074	 add         r3, r3, #0x74
  00814	e5933000	 ldr         r3, [r3]
  00818	e3530000	 cmp         r3, #0
  0081c	0a000003	 beq         |$LN6@ReInit|
  00820	e59d3048	 ldr         r3, [sp, #0x48]
  00824	e2833074	 add         r3, r3, #0x74
  00828	e5930000	 ldr         r0, [r3]
  0082c	eb000000	 bl          |?InitializeListHead@@YAXPAUtMEMLIST@@@Z|
  00830		 |$LN6@ReInit|

; 196  : 
; 197  :     m_pHighPriorityInUseListHead = CreateNewNode(0, 0, 0);

  00830	e3a03000	 mov         r3, #0
  00834	e3a02000	 mov         r2, #0
  00838	e3a01000	 mov         r1, #0
  0083c	e59d0048	 ldr         r0, [sp, #0x48]
  00840	eb000000	 bl          |?CreateNewNode@CPhysMem@@AAAPAUtMEMLIST@@KKK@Z|
  00844	e58d001c	 str         r0, [sp, #0x1C]
  00848	e59d3048	 ldr         r3, [sp, #0x48]
  0084c	e2832070	 add         r2, r3, #0x70
  00850	e59d301c	 ldr         r3, [sp, #0x1C]
  00854	e5823000	 str         r3, [r2]

; 198  :     if (m_pHighPriorityInUseListHead) InitializeListHead(m_pHighPriorityInUseListHead);

  00858	e59d3048	 ldr         r3, [sp, #0x48]
  0085c	e2833070	 add         r3, r3, #0x70
  00860	e5933000	 ldr         r3, [r3]
  00864	e3530000	 cmp         r3, #0
  00868	0a000003	 beq         |$LN5@ReInit|
  0086c	e59d3048	 ldr         r3, [sp, #0x48]
  00870	e2833070	 add         r3, r3, #0x70
  00874	e5930000	 ldr         r0, [r3]
  00878	eb000000	 bl          |?InitializeListHead@@YAXPAUtMEMLIST@@@Z|
  0087c		 |$LN5@ReInit|

; 199  : 
; 200  :     DEBUGMSG(ZONE_CPHYSMEM && ZONE_VERBOSE, (TEXT("CPhysMem Init : HighPriFreeListHead = 0x%08X, HighPriInUseListHead = 0x%08X\r\n"),
; 201  :                           m_pHighPriorityFreeListHead, m_pHighPriorityInUseListHead));

  0087c	e59f3298	 ldr         r3, [pc, #0x298]
  00880	e5933440	 ldr         r3, [r3, #0x440]
  00884	e3130b02	 tst         r3, #2, 22
  00888	0a00000e	 beq         |$LN16@ReInit|
  0088c	e59f3288	 ldr         r3, [pc, #0x288]
  00890	e5933440	 ldr         r3, [r3, #0x440]
  00894	e3130a01	 tst         r3, #1, 20
  00898	0a00000a	 beq         |$LN16@ReInit|
  0089c	e59d3048	 ldr         r3, [sp, #0x48]
  008a0	e2833070	 add         r3, r3, #0x70
  008a4	e5932000	 ldr         r2, [r3]
  008a8	e59d3048	 ldr         r3, [sp, #0x48]
  008ac	e2833074	 add         r3, r3, #0x74
  008b0	e5931000	 ldr         r1, [r3]
  008b4	e59f0270	 ldr         r0, [pc, #0x270]
  008b8	eb000000	 bl          NKDbgPrintfW
  008bc	e3a03001	 mov         r3, #1
  008c0	e58d3020	 str         r3, [sp, #0x20]
  008c4	ea000001	 b           |$LN17@ReInit|
  008c8		 |$LN16@ReInit|
  008c8	e3a03000	 mov         r3, #0
  008cc	e58d3020	 str         r3, [sp, #0x20]
  008d0		 |$LN17@ReInit|

; 202  : 
; 203  :     // Send an alert if we're being constructed under OOM conditions.
; 204  :     m_fInitted =
; 205  :         (m_pNodeFreeListHead && m_pFreeListHead && m_pInUseListHead &&
; 206  :          m_pHighPriorityFreeListHead && m_pHighPriorityInUseListHead);

  008d0	e59d3048	 ldr         r3, [sp, #0x48]
  008d4	e2833040	 add         r3, r3, #0x40
  008d8	e5933000	 ldr         r3, [r3]
  008dc	e3530000	 cmp         r3, #0
  008e0	0a000016	 beq         |$LN18@ReInit|
  008e4	e59d3048	 ldr         r3, [sp, #0x48]
  008e8	e283305c	 add         r3, r3, #0x5C
  008ec	e5933000	 ldr         r3, [r3]
  008f0	e3530000	 cmp         r3, #0
  008f4	0a000011	 beq         |$LN18@ReInit|
  008f8	e59d3048	 ldr         r3, [sp, #0x48]
  008fc	e2833060	 add         r3, r3, #0x60
  00900	e5933000	 ldr         r3, [r3]
  00904	e3530000	 cmp         r3, #0
  00908	0a00000c	 beq         |$LN18@ReInit|
  0090c	e59d3048	 ldr         r3, [sp, #0x48]
  00910	e2833074	 add         r3, r3, #0x74
  00914	e5933000	 ldr         r3, [r3]
  00918	e3530000	 cmp         r3, #0
  0091c	0a000007	 beq         |$LN18@ReInit|
  00920	e59d3048	 ldr         r3, [sp, #0x48]
  00924	e2833070	 add         r3, r3, #0x70
  00928	e5933000	 ldr         r3, [r3]
  0092c	e3530000	 cmp         r3, #0
  00930	0a000002	 beq         |$LN18@ReInit|
  00934	e3a03001	 mov         r3, #1
  00938	e58d3024	 str         r3, [sp, #0x24]
  0093c	ea000001	 b           |$LN19@ReInit|
  00940		 |$LN18@ReInit|
  00940	e3a03000	 mov         r3, #0
  00944	e58d3024	 str         r3, [sp, #0x24]
  00948		 |$LN19@ReInit|
  00948	e59d3048	 ldr         r3, [sp, #0x48]
  0094c	e2832024	 add         r2, r3, #0x24
  00950	e59d3024	 ldr         r3, [sp, #0x24]
  00954	e5823000	 str         r3, [r2]

; 207  : 
; 208  :     //
; 209  :     // One big chunk on the free list to start things off.
; 210  :     //
; 211  :     pNode = CreateNewNode(m_dwNormalSize, m_dwNormalVA, m_dwNormalPA);

  00958	e59d3048	 ldr         r3, [sp, #0x48]
  0095c	e2833050	 add         r3, r3, #0x50
  00960	e5933000	 ldr         r3, [r3]
  00964	e59d2048	 ldr         r2, [sp, #0x48]
  00968	e2822054	 add         r2, r2, #0x54
  0096c	e5922000	 ldr         r2, [r2]
  00970	e59d1048	 ldr         r1, [sp, #0x48]
  00974	e2811058	 add         r1, r1, #0x58
  00978	e5911000	 ldr         r1, [r1]
  0097c	e59d0048	 ldr         r0, [sp, #0x48]
  00980	eb000000	 bl          |?CreateNewNode@CPhysMem@@AAAPAUtMEMLIST@@KKK@Z|
  00984	e58d0028	 str         r0, [sp, #0x28]
  00988	e59d3028	 ldr         r3, [sp, #0x28]
  0098c	e58d3000	 str         r3, [sp]

; 212  :     if (pNode) {

  00990	e59d3000	 ldr         r3, [sp]
  00994	e3530000	 cmp         r3, #0
  00998	0a00001f	 beq         |$LN4@ReInit|

; 213  : #ifdef DEBUG
; 214  :         _tcscpy( pNode->szDescription, TEXT("Free Low Pri Mem") );

  0099c	e59f1184	 ldr         r1, [pc, #0x184]
  009a0	e59d3000	 ldr         r3, [sp]
  009a4	e2830014	 add         r0, r3, #0x14
  009a8	eb000000	 bl          wcscpy

; 215  : #endif // DEBUG
; 216  :     
; 217  :         DEBUGMSG(ZONE_CPHYSMEM && ZONE_VERBOSE, (TEXT("CPhysMem Init : Main Free Heap Node = 0x%08X\r\n"), pNode));

  009ac	e59f3168	 ldr         r3, [pc, #0x168]
  009b0	e5933440	 ldr         r3, [r3, #0x440]
  009b4	e3130b02	 tst         r3, #2, 22
  009b8	0a000009	 beq         |$LN20@ReInit|
  009bc	e59f3158	 ldr         r3, [pc, #0x158]
  009c0	e5933440	 ldr         r3, [r3, #0x440]
  009c4	e3130a01	 tst         r3, #1, 20
  009c8	0a000005	 beq         |$LN20@ReInit|
  009cc	e59d1000	 ldr         r1, [sp]
  009d0	e59f014c	 ldr         r0, [pc, #0x14C]
  009d4	eb000000	 bl          NKDbgPrintfW
  009d8	e3a03001	 mov         r3, #1
  009dc	e58d302c	 str         r3, [sp, #0x2C]
  009e0	ea000001	 b           |$LN21@ReInit|
  009e4		 |$LN20@ReInit|
  009e4	e3a03000	 mov         r3, #0
  009e8	e58d302c	 str         r3, [sp, #0x2C]
  009ec		 |$LN21@ReInit|

; 218  :     
; 219  :         InsertNodeBefore(pNode, FirstNode(m_pFreeListHead));

  009ec	e59d3048	 ldr         r3, [sp, #0x48]
  009f0	e283305c	 add         r3, r3, #0x5C
  009f4	e5930000	 ldr         r0, [r3]
  009f8	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  009fc	e58d0030	 str         r0, [sp, #0x30]
  00a00	e59d1030	 ldr         r1, [sp, #0x30]
  00a04	e59d0000	 ldr         r0, [sp]
  00a08	eb000000	 bl          |?InsertNodeBefore@@YAXPAUtMEMLIST@@0@Z|

; 220  : 
; 221  :         VALIDATE_HEAPS(FALSE);

  00a0c	e3a01000	 mov         r1, #0
  00a10	e59d0048	 ldr         r0, [sp, #0x48]
  00a14	eb000000	 bl          |?ValidateHeaps@CPhysMem@@AAAHH@Z|

; 222  :     } else

  00a18	ea000003	 b           |$LN3@ReInit|
  00a1c		 |$LN4@ReInit|

; 223  :         m_fInitted = FALSE;

  00a1c	e59d3048	 ldr         r3, [sp, #0x48]
  00a20	e2832024	 add         r2, r3, #0x24
  00a24	e3a03000	 mov         r3, #0
  00a28	e5823000	 str         r3, [r2]
  00a2c		 |$LN3@ReInit|

; 224  :     
; 225  :     //
; 226  :     // Same thing for High Priority Region
; 227  :     //
; 228  :     pNode = CreateNewNode(m_dwHighPrioritySize, m_dwHighPriorityVA, m_dwHighPriorityPA);

  00a2c	e59d3048	 ldr         r3, [sp, #0x48]
  00a30	e2833064	 add         r3, r3, #0x64
  00a34	e5933000	 ldr         r3, [r3]
  00a38	e59d2048	 ldr         r2, [sp, #0x48]
  00a3c	e2822068	 add         r2, r2, #0x68
  00a40	e5922000	 ldr         r2, [r2]
  00a44	e59d1048	 ldr         r1, [sp, #0x48]
  00a48	e281106c	 add         r1, r1, #0x6C
  00a4c	e5911000	 ldr         r1, [r1]
  00a50	e59d0048	 ldr         r0, [sp, #0x48]
  00a54	eb000000	 bl          |?CreateNewNode@CPhysMem@@AAAPAUtMEMLIST@@KKK@Z|
  00a58	e58d0034	 str         r0, [sp, #0x34]
  00a5c	e59d3034	 ldr         r3, [sp, #0x34]
  00a60	e58d3000	 str         r3, [sp]

; 229  :     if (pNode) {

  00a64	e59d3000	 ldr         r3, [sp]
  00a68	e3530000	 cmp         r3, #0
  00a6c	0a00001f	 beq         |$LN2@ReInit|

; 230  : #ifdef DEBUG
; 231  :         _tcscpy( pNode->szDescription, TEXT("Free High Pri Mem") );

  00a70	e59f10a8	 ldr         r1, [pc, #0xA8]
  00a74	e59d3000	 ldr         r3, [sp]
  00a78	e2830014	 add         r0, r3, #0x14
  00a7c	eb000000	 bl          wcscpy

; 232  : #endif // DEBUG
; 233  :     
; 234  :         DEBUGMSG(ZONE_CPHYSMEM && ZONE_VERBOSE, (TEXT("CPhysMem Init : HighPri Free Heap Node = 0x%08X\r\n"),
; 235  :                                                  pNode));

  00a80	e59f3094	 ldr         r3, [pc, #0x94]
  00a84	e5933440	 ldr         r3, [r3, #0x440]
  00a88	e3130b02	 tst         r3, #2, 22
  00a8c	0a000009	 beq         |$LN22@ReInit|
  00a90	e59f3084	 ldr         r3, [pc, #0x84]
  00a94	e5933440	 ldr         r3, [r3, #0x440]
  00a98	e3130a01	 tst         r3, #1, 20
  00a9c	0a000005	 beq         |$LN22@ReInit|
  00aa0	e59d1000	 ldr         r1, [sp]
  00aa4	e59f006c	 ldr         r0, [pc, #0x6C]
  00aa8	eb000000	 bl          NKDbgPrintfW
  00aac	e3a03001	 mov         r3, #1
  00ab0	e58d3038	 str         r3, [sp, #0x38]
  00ab4	ea000001	 b           |$LN23@ReInit|
  00ab8		 |$LN22@ReInit|
  00ab8	e3a03000	 mov         r3, #0
  00abc	e58d3038	 str         r3, [sp, #0x38]
  00ac0		 |$LN23@ReInit|

; 236  :     
; 237  :         InsertNodeBefore(pNode, FirstNode(m_pHighPriorityFreeListHead));

  00ac0	e59d3048	 ldr         r3, [sp, #0x48]
  00ac4	e2833074	 add         r3, r3, #0x74
  00ac8	e5930000	 ldr         r0, [r3]
  00acc	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  00ad0	e58d003c	 str         r0, [sp, #0x3C]
  00ad4	e59d103c	 ldr         r1, [sp, #0x3C]
  00ad8	e59d0000	 ldr         r0, [sp]
  00adc	eb000000	 bl          |?InsertNodeBefore@@YAXPAUtMEMLIST@@0@Z|

; 238  :     
; 239  :         VALIDATE_HEAPS(TRUE);

  00ae0	e3a01001	 mov         r1, #1
  00ae4	e59d0048	 ldr         r0, [sp, #0x48]
  00ae8	eb000000	 bl          |?ValidateHeaps@CPhysMem@@AAAHH@Z|

; 240  :     } else

  00aec	ea000003	 b           |$LN1@ReInit|
  00af0		 |$LN2@ReInit|

; 241  :         m_fInitted = FALSE;

  00af0	e59d3048	 ldr         r3, [sp, #0x48]
  00af4	e2832024	 add         r2, r3, #0x24
  00af8	e3a03000	 mov         r3, #0
  00afc	e5823000	 str         r3, [r2]
  00b00		 |$LN1@ReInit|

; 242  : 
; 243  :     LeaveCriticalSection(&m_csLock);

  00b00	e59d3048	 ldr         r3, [sp, #0x48]
  00b04	e2830010	 add         r0, r3, #0x10
  00b08	eb000000	 bl          LeaveCriticalSection

; 244  : }

  00b0c	e28dd040	 add         sp, sp, #0x40
  00b10	e89d6000	 ldmia       sp, {sp, lr}
  00b14	e12fff1e	 bx          lr
  00b18		 |$LN27@ReInit|
  00b18		 |$LN28@ReInit|
  00b18	00000000	 DCD         |??_C@_1GE@MMCCLEGJ@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAH?$AAi?$AAg?$AAh?$AAP?$AAr?$AAi?$AA?5?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAH?$AAe?$AAa@|
  00b1c		 |$LN29@ReInit|
  00b1c	00000000	 DCD         |dpCurSettings|
  00b20		 |$LN30@ReInit|
  00b20	00000000	 DCD         |??_C@_1CE@NLPJGAMO@?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAH?$AAi?$AAg?$AAh?$AA?5?$AAP?$AAr?$AAi?$AA?5?$AAM?$AAe?$AAm?$AA?$AA@|
  00b24		 |$LN31@ReInit|
  00b24	00000000	 DCD         |??_C@_1FO@GMLOFHA@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAM?$AAa?$AAi?$AAn?$AA?5?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAN@|
  00b28		 |$LN32@ReInit|
  00b28	00000000	 DCD         |??_C@_1CC@BENCJCHP@?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAL?$AAo?$AAw?$AA?5?$AAP?$AAr?$AAi?$AA?5?$AAM?$AAe?$AAm?$AA?$AA@|
  00b2c		 |$LN33@ReInit|
  00b2c	00000000	 DCD         |??_C@_1JM@GLIPFLD@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAH?$AAi?$AAg?$AAh?$AAP?$AAr?$AAi?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AAH@|
  00b30		 |$LN34@ReInit|
  00b30	00000000	 DCD         |??_C@_1IA@BJAEEMDH@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AAH?$AAe?$AAa?$AAd?$AA?5?$AA?$DN?$AA?5?$AA0@|
  00b34		 |$LN35@ReInit|
  00b34	00000000	 DCD         |??_C@_1FI@PMOPNGBB@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAN?$AAo?$AAd?$AAe?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AAH?$AAe?$AAa?$AAd@|
  00b38		 |$M34265|

			 ENDP  ; |?ReInit@CPhysMem@@QAAXXZ|, CPhysMem::ReInit

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\usb2com\cphysmem.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T34281| DCD	|$LN5@Initialize|
	DCD	0x40000d03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InitializeListHead@@YAXPAUtMEMLIST@@@Z| PROC ; InitializeListHead

; 226  : {

  00000		 |$LN5@Initialize|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M34278|

; 227  :     _ListHead->next = _ListHead->prev = _ListHead;

  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2832010	 add         r2, r3, #0x10
  00014	e59d3008	 ldr         r3, [sp, #8]
  00018	e5823000	 str         r3, [r2]
  0001c	e59d3008	 ldr         r3, [sp, #8]
  00020	e283200c	 add         r2, r3, #0xC
  00024	e59d3008	 ldr         r3, [sp, #8]
  00028	e5823000	 str         r3, [r2]

; 228  : }

  0002c	e89d6000	 ldmia       sp, {sp, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$M34279|

			 ENDP  ; |?InitializeListHead@@YAXPAUtMEMLIST@@@Z|, InitializeListHead


  00000			 AREA	 |.pdata|, PDATA
|$T34289| DCD	|$LN5@FirstNode|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z| PROC ; FirstNode

; 235  : { 

  00000		 |$LN5@FirstNode|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M34286|

; 236  :     return(_ListHead->next); 

  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e283300c	 add         r3, r3, #0xC
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]

; 237  : }

  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M34287|

			 ENDP  ; |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|, FirstNode


  00000			 AREA	 |.pdata|, PDATA
|$T34296| DCD	|$LN5@InsertNode|
	DCD	0x40001903
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InsertNodeBefore@@YAXPAUtMEMLIST@@0@Z| PROC ; InsertNodeBefore

; 257  : {

  00000		 |$LN5@InsertNode|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M34293|

; 258  :     pNodeExisting->prev->next = pNodeNew;

  0000c	e59d300c	 ldr         r3, [sp, #0xC]
  00010	e2833010	 add         r3, r3, #0x10
  00014	e5933000	 ldr         r3, [r3]
  00018	e283200c	 add         r2, r3, #0xC
  0001c	e59d3008	 ldr         r3, [sp, #8]
  00020	e5823000	 str         r3, [r2]

; 259  :     pNodeNew->prev = pNodeExisting->prev;

  00024	e59d300c	 ldr         r3, [sp, #0xC]
  00028	e2831010	 add         r1, r3, #0x10
  0002c	e59d3008	 ldr         r3, [sp, #8]
  00030	e2832010	 add         r2, r3, #0x10
  00034	e5913000	 ldr         r3, [r1]
  00038	e5823000	 str         r3, [r2]

; 260  :     pNodeNew->next = pNodeExisting;

  0003c	e59d3008	 ldr         r3, [sp, #8]
  00040	e283200c	 add         r2, r3, #0xC
  00044	e59d300c	 ldr         r3, [sp, #0xC]
  00048	e5823000	 str         r3, [r2]

; 261  :     pNodeExisting->prev = pNodeNew;

  0004c	e59d300c	 ldr         r3, [sp, #0xC]
  00050	e2832010	 add         r2, r3, #0x10
  00054	e59d3008	 ldr         r3, [sp, #8]
  00058	e5823000	 str         r3, [r2]

; 262  : }

  0005c	e89d6000	 ldmia       sp, {sp, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M34294|

			 ENDP  ; |?InsertNodeBefore@@YAXPAUtMEMLIST@@0@Z|, InsertNodeBefore

	EXPORT	|??_C@_1FG@KBIHBEP@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAN?$AAo?$AAd?$AAe?$AAs?$AA?5?$AAF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@BKCBJCLG@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HI@EIJALODG@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAW?$AAe?$AA?8?$AAv?$AAe?$AA?5?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IK@IOHNCDME@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAF?$AAr?$AAe?$AAe?$AAS?$AAi?$AAz@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@BBFMJBGE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JM@FJJCMIHE@?$AAI?$AAn?$AAU?$AAs?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AA?3?$AA?5?$AAp?$AAN?$AAo?$AAd?$AAe?$AA?5?$AAs?$AAi?$AAz?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@JDBBEPGD@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@LFOBKGBN@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAL?$AAi@| [ DATA ] ; `string'
	EXPORT	|?PaToVa@CPhysMem@@QAAPAEK@Z|		; CPhysMem::PaToVa
	EXPORT	|??_C@_1JK@ENFIOHDK@?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AA?3?$AA?5?$AAp?$AAN?$AAo?$AAd?$AAe?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5@| [ DATA ] ; `string'

  00010			 AREA	 |.pdata|, PDATA
|$T34362| DCD	|$LN77@ValidateHe|
	DCD	0x40026d04
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\usb2com\cphysmem.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@KBIHBEP@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAN?$AAo?$AAd?$AAe?$AAs?$AA?5?$AAF@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "V", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "H", 0x0, "e"
	DCB	0x0, "a", 0x0, "p", 0x0, "s", 0x0, " ", 0x0, ":", 0x0, " "
	DCB	0x0, "N", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, "s", 0x0, " "
	DCB	0x0, "F", 0x0, "r", 0x0, "e", 0x0, "e", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@BKCBJCLG@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "V", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "H", 0x0, "e"
	DCB	0x0, "a", 0x0, "p", 0x0, "s", 0x0, " ", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "k"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, " ", 0x0, "(", 0x0, "n", 0x0, "o", 0x0, "d"
	DCB	0x0, "e", 0x0, "f", 0x0, "r", 0x0, "e", 0x0, "e", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@EIJALODG@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAW?$AAe?$AA?8?$AAv?$AAe?$AA?5?$AAl@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "V", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "H", 0x0, "e"
	DCB	0x0, "a", 0x0, "p", 0x0, "s", 0x0, " ", 0x0, ":", 0x0, " "
	DCB	0x0, "W", 0x0, "e", 0x0, "'", 0x0, "v", 0x0, "e", 0x0, " "
	DCB	0x0, "l", 0x0, "o", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "s"
	DCB	0x0, "o", 0x0, "m", 0x0, "e", 0x0, " ", 0x0, "m", 0x0, "e"
	DCB	0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "s"
	DCB	0x0, "o", 0x0, "m", 0x0, "e", 0x0, "w", 0x0, "h", 0x0, "e"
	DCB	0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@IOHNCDME@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAF?$AAr?$AAe?$AAe?$AAS?$AAi?$AAz@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "V", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "H", 0x0, "e"
	DCB	0x0, "a", 0x0, "p", 0x0, "s", 0x0, " ", 0x0, ":", 0x0, " "
	DCB	0x0, "F", 0x0, "r", 0x0, "e", 0x0, "e", 0x0, "S", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e"
	DCB	0x0, "s", 0x0, ";", 0x0, " ", 0x0, "T", 0x0, "o", 0x0, "t"
	DCB	0x0, "a", 0x0, "l", 0x0, "S", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " "
	DCB	0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@BBFMJBGE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "V", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "H", 0x0, "e"
	DCB	0x0, "a", 0x0, "p", 0x0, "s", 0x0, " ", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "k"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, " ", 0x0, "(", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "s", 0x0, "e", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JM@FJJCMIHE@?$AAI?$AAn?$AAU?$AAs?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AA?3?$AA?5?$AAp?$AAN?$AAo?$AAd?$AAe?$AA?5?$AAs?$AAi?$AAz?$AAe@| DCB "I"
	DCB	0x0, "n", 0x0, "U", 0x0, "s", 0x0, "e", 0x0, "L", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "(", 0x0, "p", 0x0, "r", 0x0, "i"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, " ", 0x0, ":", 0x0, " ", 0x0, "p", 0x0, "N", 0x0, "o"
	DCB	0x0, "d", 0x0, "e", 0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "4"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "P", 0x0, "A", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "V", 0x0, "A"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "D"
	DCB	0x0, "e", 0x0, "s", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@JDBBEPGD@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "V", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "H", 0x0, "e"
	DCB	0x0, "a", 0x0, "p", 0x0, "s", 0x0, " ", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "k"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, " ", 0x0, "(", 0x0, "f", 0x0, "r", 0x0, "e"
	DCB	0x0, "e", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@LFOBKGBN@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAL?$AAi@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "V", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "H", 0x0, "e"
	DCB	0x0, "a", 0x0, "p", 0x0, "s", 0x0, " ", 0x0, ":", 0x0, " "
	DCB	0x0, "F", 0x0, "r", 0x0, "e", 0x0, "e", 0x0, " ", 0x0, "L"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "t", 0x0, " ", 0x0, "s", 0x0, "o", 0x0, "r", 0x0, "t"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "(", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, ">", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JK@ENFIOHDK@?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AA?3?$AA?5?$AAp?$AAN?$AAo?$AAd?$AAe?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5@| DCB "F"
	DCB	0x0, "r", 0x0, "e", 0x0, "e", 0x0, "L", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "(", 0x0, "p", 0x0, "r", 0x0, "i", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, " "
	DCB	0x0, ":", 0x0, " ", 0x0, "p", 0x0, "N", 0x0, "o", 0x0, "d"
	DCB	0x0, "e", 0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "4", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "P", 0x0, "A", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "V", 0x0, "A", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "s", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00b38			 AREA	 |.text|, CODE, ARM

  00b38		 |?ValidateHeaps@CPhysMem@@AAAHH@Z| PROC ; CPhysMem::ValidateHeaps

; 262  : {

  00b38		 |$LN77@ValidateHe|
  00b38	e1a0c00d	 mov         r12, sp
  00b3c	e92d0003	 stmdb       sp!, {r0, r1}
  00b40	e92d5000	 stmdb       sp!, {r12, lr}
  00b44	e24dd0b0	 sub         sp, sp, #0xB0
  00b48		 |$M34359|

; 263  :     PMEMLIST pNode = FirstNode(FREELIST(fHighPri));

  00b48	e59d30bc	 ldr         r3, [sp, #0xBC]
  00b4c	e3530000	 cmp         r3, #0
  00b50	0a000004	 beq         |$LN21@ValidateHe|
  00b54	e59d30b8	 ldr         r3, [sp, #0xB8]
  00b58	e2833074	 add         r3, r3, #0x74
  00b5c	e5933000	 ldr         r3, [r3]
  00b60	e58d3030	 str         r3, [sp, #0x30]
  00b64	ea000003	 b           |$LN22@ValidateHe|
  00b68		 |$LN21@ValidateHe|
  00b68	e59d30b8	 ldr         r3, [sp, #0xB8]
  00b6c	e283305c	 add         r3, r3, #0x5C
  00b70	e5933000	 ldr         r3, [r3]
  00b74	e58d3030	 str         r3, [sp, #0x30]
  00b78		 |$LN22@ValidateHe|
  00b78	e59d0030	 ldr         r0, [sp, #0x30]
  00b7c	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  00b80	e58d0034	 str         r0, [sp, #0x34]
  00b84	e59d3034	 ldr         r3, [sp, #0x34]
  00b88	e58d3018	 str         r3, [sp, #0x18]

; 264  :     DWORD dwSizeTotal = 0;

  00b8c	e3a03000	 mov         r3, #0
  00b90	e58d3014	 str         r3, [sp, #0x14]

; 265  :     DWORD dwSizePrev = 0;

  00b94	e3a03000	 mov         r3, #0
  00b98	e58d300c	 str         r3, [sp, #0xC]

; 266  :     DWORD dwSizeFree = 0;

  00b9c	e3a03000	 mov         r3, #0
  00ba0	e58d3008	 str         r3, [sp, #8]

; 267  :     DWORD dwNodesFree = 0;

  00ba4	e3a03000	 mov         r3, #0
  00ba8	e58d3010	 str         r3, [sp, #0x10]
  00bac		 |$LN18@ValidateHe|

; 268  : 
; 269  :     while (!EndOfList(FREELIST(fHighPri), pNode)) {

  00bac	e59d30bc	 ldr         r3, [sp, #0xBC]
  00bb0	e3530000	 cmp         r3, #0
  00bb4	0a000004	 beq         |$LN23@ValidateHe|
  00bb8	e59d30b8	 ldr         r3, [sp, #0xB8]
  00bbc	e2833074	 add         r3, r3, #0x74
  00bc0	e5933000	 ldr         r3, [r3]
  00bc4	e58d3038	 str         r3, [sp, #0x38]
  00bc8	ea000003	 b           |$LN24@ValidateHe|
  00bcc		 |$LN23@ValidateHe|
  00bcc	e59d30b8	 ldr         r3, [sp, #0xB8]
  00bd0	e283305c	 add         r3, r3, #0x5C
  00bd4	e5933000	 ldr         r3, [r3]
  00bd8	e58d3038	 str         r3, [sp, #0x38]
  00bdc		 |$LN24@ValidateHe|
  00bdc	e59d2038	 ldr         r2, [sp, #0x38]
  00be0	e59d3018	 ldr         r3, [sp, #0x18]
  00be4	e1520003	 cmp         r2, r3
  00be8	1a000002	 bne         |$LN25@ValidateHe|
  00bec	e3a03001	 mov         r3, #1
  00bf0	e58d303c	 str         r3, [sp, #0x3C]
  00bf4	ea000001	 b           |$LN26@ValidateHe|
  00bf8		 |$LN25@ValidateHe|
  00bf8	e3a03000	 mov         r3, #0
  00bfc	e58d303c	 str         r3, [sp, #0x3C]
  00c00		 |$LN26@ValidateHe|
  00c00	e59d303c	 ldr         r3, [sp, #0x3C]
  00c04	e3530000	 cmp         r3, #0
  00c08	1a0000be	 bne         |$LN17@ValidateHe|

; 270  :         
; 271  :         DEBUGMSG(ZONE_VERBOSE && ZONE_CPHYSMEM, (TEXT("FreeList(pri = %d) : pNode size = %4d, PA = 0x%08x, VA = 0x%08X, Desc = %s\r\n"),
; 272  :                               fHighPri, pNode->dwSize, pNode->dwPhysAddr, pNode->dwVirtAddr, pNode->szDescription ));

  00c0c	e59f38a8	 ldr         r3, [pc, #0x8A8]
  00c10	e5933440	 ldr         r3, [r3, #0x440]
  00c14	e3130a01	 tst         r3, #1, 20
  00c18	0a000015	 beq         |$LN27@ValidateHe|
  00c1c	e59f3898	 ldr         r3, [pc, #0x898]
  00c20	e5933440	 ldr         r3, [r3, #0x440]
  00c24	e3130b02	 tst         r3, #2, 22
  00c28	0a000011	 beq         |$LN27@ValidateHe|
  00c2c	e59d3018	 ldr         r3, [sp, #0x18]
  00c30	e2833014	 add         r3, r3, #0x14
  00c34	e58d3004	 str         r3, [sp, #4]
  00c38	e59d3018	 ldr         r3, [sp, #0x18]
  00c3c	e5933000	 ldr         r3, [r3]
  00c40	e58d3000	 str         r3, [sp]
  00c44	e59d3018	 ldr         r3, [sp, #0x18]
  00c48	e2833004	 add         r3, r3, #4
  00c4c	e5933000	 ldr         r3, [r3]
  00c50	e59d2018	 ldr         r2, [sp, #0x18]
  00c54	e2822008	 add         r2, r2, #8
  00c58	e5922000	 ldr         r2, [r2]
  00c5c	e59d10bc	 ldr         r1, [sp, #0xBC]
  00c60	e59f0880	 ldr         r0, [pc, #0x880]
  00c64	eb000000	 bl          NKDbgPrintfW
  00c68	e3a03001	 mov         r3, #1
  00c6c	e58d3040	 str         r3, [sp, #0x40]
  00c70	ea000001	 b           |$LN28@ValidateHe|
  00c74		 |$LN27@ValidateHe|
  00c74	e3a03000	 mov         r3, #0
  00c78	e58d3040	 str         r3, [sp, #0x40]
  00c7c		 |$LN28@ValidateHe|

; 273  : 
; 274  :         if ( pNode->dwSize == 0 ) {

  00c7c	e59d3018	 ldr         r3, [sp, #0x18]
  00c80	e2833008	 add         r3, r3, #8
  00c84	e5933000	 ldr         r3, [r3]
  00c88	e3530000	 cmp         r3, #0
  00c8c	1a000014	 bne         |$LN16@ValidateHe|

; 275  :             DEBUGCHK( pNode->dwVirtAddr == 0 &&
; 276  :                       pNode->dwPhysAddr == 0 );

  00c90	e59d3018	 ldr         r3, [sp, #0x18]
  00c94	e5933000	 ldr         r3, [r3]
  00c98	e3530000	 cmp         r3, #0
  00c9c	1a000007	 bne         |$LN29@ValidateHe|
  00ca0	e59d3018	 ldr         r3, [sp, #0x18]
  00ca4	e2833004	 add         r3, r3, #4
  00ca8	e5933000	 ldr         r3, [r3]
  00cac	e3530000	 cmp         r3, #0
  00cb0	1a000002	 bne         |$LN29@ValidateHe|
  00cb4	e3a03001	 mov         r3, #1
  00cb8	e58d3044	 str         r3, [sp, #0x44]
  00cbc	ea000007	 b           |$LN30@ValidateHe|
  00cc0		 |$LN29@ValidateHe|
  00cc0	e3a03f45	 mov         r3, #0x45, 30
  00cc4	e59f27f8	 ldr         r2, [pc, #0x7F8]
  00cc8	e59f17ec	 ldr         r1, [pc, #0x7EC]
  00ccc	e59f07ec	 ldr         r0, [pc, #0x7EC]
  00cd0	eb000000	 bl          NKDbgPrintfW
  00cd4	e6000010	 __debugbreak_ce
  00cd8	e3a03000	 mov         r3, #0
  00cdc	e58d3044	 str         r3, [sp, #0x44]
  00ce0		 |$LN30@ValidateHe|

; 277  :         } else {

  00ce0	ea000023	 b           |$LN15@ValidateHe|
  00ce4		 |$LN16@ValidateHe|

; 278  :             DEBUGCHK( pNode->dwSize % CPHYSMEM_MEMORY_ALIGNMENT == 0 &&
; 279  :                       pNode->dwPhysAddr % CPHYSMEM_MEMORY_ALIGNMENT == 0 &&
; 280  :                       PUCHAR(pNode->dwVirtAddr) == PaToVa( pNode->dwPhysAddr ) );

  00ce4	e59d3018	 ldr         r3, [sp, #0x18]
  00ce8	e2833008	 add         r3, r3, #8
  00cec	e5931000	 ldr         r1, [r3]
  00cf0	e3a00020	 mov         r0, #0x20
  00cf4	eb000000	 bl          __rt_udiv
  00cf8	e3510000	 cmp         r1, #0
  00cfc	1a000014	 bne         |$LN31@ValidateHe|
  00d00	e59d3018	 ldr         r3, [sp, #0x18]
  00d04	e2833004	 add         r3, r3, #4
  00d08	e5931000	 ldr         r1, [r3]
  00d0c	e3a00020	 mov         r0, #0x20
  00d10	eb000000	 bl          __rt_udiv
  00d14	e3510000	 cmp         r1, #0
  00d18	1a00000d	 bne         |$LN31@ValidateHe|
  00d1c	e59d3018	 ldr         r3, [sp, #0x18]
  00d20	e2833004	 add         r3, r3, #4
  00d24	e5931000	 ldr         r1, [r3]
  00d28	e59d00b8	 ldr         r0, [sp, #0xB8]
  00d2c	eb000000	 bl          |?PaToVa@CPhysMem@@QAAPAEK@Z|
  00d30	e58d0048	 str         r0, [sp, #0x48]
  00d34	e59d3018	 ldr         r3, [sp, #0x18]
  00d38	e5932000	 ldr         r2, [r3]
  00d3c	e59d3048	 ldr         r3, [sp, #0x48]
  00d40	e1520003	 cmp         r2, r3
  00d44	1a000002	 bne         |$LN31@ValidateHe|
  00d48	e3a03001	 mov         r3, #1
  00d4c	e58d304c	 str         r3, [sp, #0x4C]
  00d50	ea000007	 b           |$LN32@ValidateHe|
  00d54		 |$LN31@ValidateHe|
  00d54	e3a03f46	 mov         r3, #0x46, 30
  00d58	e59f2764	 ldr         r2, [pc, #0x764]
  00d5c	e59f1758	 ldr         r1, [pc, #0x758]
  00d60	e59f0758	 ldr         r0, [pc, #0x758]
  00d64	eb000000	 bl          NKDbgPrintfW
  00d68	e6000010	 __debugbreak_ce
  00d6c	e3a03000	 mov         r3, #0
  00d70	e58d304c	 str         r3, [sp, #0x4C]
  00d74		 |$LN32@ValidateHe|
  00d74		 |$LN15@ValidateHe|

; 281  :         }
; 282  : 
; 283  :         dwSizeTotal += pNode->dwSize;

  00d74	e59d3018	 ldr         r3, [sp, #0x18]
  00d78	e2833008	 add         r3, r3, #8
  00d7c	e59d2014	 ldr         r2, [sp, #0x14]
  00d80	e5933000	 ldr         r3, [r3]
  00d84	e0823003	 add         r3, r2, r3
  00d88	e58d3014	 str         r3, [sp, #0x14]

; 284  :         dwSizeFree  += pNode->dwSize;

  00d8c	e59d3018	 ldr         r3, [sp, #0x18]
  00d90	e2833008	 add         r3, r3, #8
  00d94	e59d2008	 ldr         r2, [sp, #8]
  00d98	e5933000	 ldr         r3, [r3]
  00d9c	e0823003	 add         r3, r2, r3
  00da0	e58d3008	 str         r3, [sp, #8]

; 285  :         
; 286  :         if (dwSizePrev > pNode->dwSize) {

  00da4	e59d3018	 ldr         r3, [sp, #0x18]
  00da8	e2833008	 add         r3, r3, #8
  00dac	e59d200c	 ldr         r2, [sp, #0xC]
  00db0	e5933000	 ldr         r3, [r3]
  00db4	e1520003	 cmp         r2, r3
  00db8	9a00001e	 bls         |$LN14@ValidateHe|

; 287  :             DEBUGMSG(ZONE_ERROR, (TEXT("CPhysMem ValidateHeaps : Free List not sorted (%d > %d)\r\n"), 
; 288  :                          dwSizePrev, pNode->dwSize));

  00dbc	e59f36f8	 ldr         r3, [pc, #0x6F8]
  00dc0	e5933440	 ldr         r3, [r3, #0x440]
  00dc4	e3130901	 tst         r3, #1, 18
  00dc8	0a000008	 beq         |$LN33@ValidateHe|
  00dcc	e59d3018	 ldr         r3, [sp, #0x18]
  00dd0	e2833008	 add         r3, r3, #8
  00dd4	e5932000	 ldr         r2, [r3]
  00dd8	e59d100c	 ldr         r1, [sp, #0xC]
  00ddc	e59f0700	 ldr         r0, [pc, #0x700]
  00de0	eb000000	 bl          NKDbgPrintfW
  00de4	e3a03001	 mov         r3, #1
  00de8	e58d3050	 str         r3, [sp, #0x50]
  00dec	ea000001	 b           |$LN34@ValidateHe|
  00df0		 |$LN33@ValidateHe|
  00df0	e3a03000	 mov         r3, #0
  00df4	e58d3050	 str         r3, [sp, #0x50]
  00df8		 |$LN34@ValidateHe|

; 289  :             DEBUGCHK(0);

  00df8	ea000002	 b           |$LN35@ValidateHe|
  00dfc	e3a03001	 mov         r3, #1
  00e00	e58d3054	 str         r3, [sp, #0x54]
  00e04	ea000008	 b           |$LN36@ValidateHe|
  00e08		 |$LN35@ValidateHe|
  00e08	e3a03c01	 mov         r3, #1, 24
  00e0c	e3833021	 orr         r3, r3, #0x21
  00e10	e59f26ac	 ldr         r2, [pc, #0x6AC]
  00e14	e59f16a0	 ldr         r1, [pc, #0x6A0]
  00e18	e59f06a0	 ldr         r0, [pc, #0x6A0]
  00e1c	eb000000	 bl          NKDbgPrintfW
  00e20	e6000010	 __debugbreak_ce
  00e24	e3a03000	 mov         r3, #0
  00e28	e58d3054	 str         r3, [sp, #0x54]
  00e2c		 |$LN36@ValidateHe|

; 290  :             return(FALSE);

  00e2c	e3a03000	 mov         r3, #0
  00e30	e58d3024	 str         r3, [sp, #0x24]
  00e34	ea00019b	 b           |$LN19@ValidateHe|
  00e38		 |$LN14@ValidateHe|

; 291  :         }
; 292  : 
; 293  :         if ((pNode->next->prev != pNode) || (pNode->prev->next != pNode)) {

  00e38	e59d3018	 ldr         r3, [sp, #0x18]
  00e3c	e283300c	 add         r3, r3, #0xC
  00e40	e5933000	 ldr         r3, [r3]
  00e44	e2833010	 add         r3, r3, #0x10
  00e48	e5932000	 ldr         r2, [r3]
  00e4c	e59d3018	 ldr         r3, [sp, #0x18]
  00e50	e1520003	 cmp         r2, r3
  00e54	1a000007	 bne         |$LN12@ValidateHe|
  00e58	e59d3018	 ldr         r3, [sp, #0x18]
  00e5c	e2833010	 add         r3, r3, #0x10
  00e60	e5933000	 ldr         r3, [r3]
  00e64	e283300c	 add         r3, r3, #0xC
  00e68	e5932000	 ldr         r2, [r3]
  00e6c	e59d3018	 ldr         r3, [sp, #0x18]
  00e70	e1520003	 cmp         r2, r3
  00e74	0a00001a	 beq         |$LN13@ValidateHe|
  00e78		 |$LN12@ValidateHe|

; 294  :             DEBUGMSG(ZONE_ERROR, (TEXT("CPhysMem ValidateHeaps : Invalid linked list (free)\r\n")));

  00e78	e59f363c	 ldr         r3, [pc, #0x63C]
  00e7c	e5933440	 ldr         r3, [r3, #0x440]
  00e80	e3130901	 tst         r3, #1, 18
  00e84	0a000004	 beq         |$LN37@ValidateHe|
  00e88	e59f0650	 ldr         r0, [pc, #0x650]
  00e8c	eb000000	 bl          NKDbgPrintfW
  00e90	e3a03001	 mov         r3, #1
  00e94	e58d3058	 str         r3, [sp, #0x58]
  00e98	ea000001	 b           |$LN38@ValidateHe|
  00e9c		 |$LN37@ValidateHe|
  00e9c	e3a03000	 mov         r3, #0
  00ea0	e58d3058	 str         r3, [sp, #0x58]
  00ea4		 |$LN38@ValidateHe|

; 295  :             DEBUGCHK(0);

  00ea4	ea000002	 b           |$LN39@ValidateHe|
  00ea8	e3a03001	 mov         r3, #1
  00eac	e58d305c	 str         r3, [sp, #0x5C]
  00eb0	ea000008	 b           |$LN40@ValidateHe|
  00eb4		 |$LN39@ValidateHe|
  00eb4	e3a03c01	 mov         r3, #1, 24
  00eb8	e3833027	 orr         r3, r3, #0x27
  00ebc	e59f2600	 ldr         r2, [pc, #0x600]
  00ec0	e59f15f4	 ldr         r1, [pc, #0x5F4]
  00ec4	e59f05f4	 ldr         r0, [pc, #0x5F4]
  00ec8	eb000000	 bl          NKDbgPrintfW
  00ecc	e6000010	 __debugbreak_ce
  00ed0	e3a03000	 mov         r3, #0
  00ed4	e58d305c	 str         r3, [sp, #0x5C]
  00ed8		 |$LN40@ValidateHe|

; 296  :             return(FALSE);

  00ed8	e3a03000	 mov         r3, #0
  00edc	e58d3024	 str         r3, [sp, #0x24]
  00ee0	ea000170	 b           |$LN19@ValidateHe|
  00ee4		 |$LN13@ValidateHe|

; 297  :         }
; 298  : 
; 299  :         dwSizePrev = pNode->dwSize;

  00ee4	e59d3018	 ldr         r3, [sp, #0x18]
  00ee8	e2833008	 add         r3, r3, #8
  00eec	e5933000	 ldr         r3, [r3]
  00ef0	e58d300c	 str         r3, [sp, #0xC]

; 300  :         pNode = pNode->next;

  00ef4	e59d3018	 ldr         r3, [sp, #0x18]
  00ef8	e283300c	 add         r3, r3, #0xC
  00efc	e5933000	 ldr         r3, [r3]
  00f00	e58d3018	 str         r3, [sp, #0x18]

; 301  :     }

  00f04	eaffff28	 b           |$LN18@ValidateHe|
  00f08		 |$LN17@ValidateHe|

; 302  :     
; 303  :     pNode = FirstNode(INUSELIST(fHighPri));

  00f08	e59d30bc	 ldr         r3, [sp, #0xBC]
  00f0c	e3530000	 cmp         r3, #0
  00f10	0a000004	 beq         |$LN41@ValidateHe|
  00f14	e59d30b8	 ldr         r3, [sp, #0xB8]
  00f18	e2833070	 add         r3, r3, #0x70
  00f1c	e5933000	 ldr         r3, [r3]
  00f20	e58d3060	 str         r3, [sp, #0x60]
  00f24	ea000003	 b           |$LN42@ValidateHe|
  00f28		 |$LN41@ValidateHe|
  00f28	e59d30b8	 ldr         r3, [sp, #0xB8]
  00f2c	e2833060	 add         r3, r3, #0x60
  00f30	e5933000	 ldr         r3, [r3]
  00f34	e58d3060	 str         r3, [sp, #0x60]
  00f38		 |$LN42@ValidateHe|
  00f38	e59d0060	 ldr         r0, [sp, #0x60]
  00f3c	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  00f40	e58d0064	 str         r0, [sp, #0x64]
  00f44	e59d3064	 ldr         r3, [sp, #0x64]
  00f48	e58d3018	 str         r3, [sp, #0x18]
  00f4c		 |$LN11@ValidateHe|

; 304  : 
; 305  :     while (!EndOfList(INUSELIST(fHighPri), pNode)) {

  00f4c	e59d30bc	 ldr         r3, [sp, #0xBC]
  00f50	e3530000	 cmp         r3, #0
  00f54	0a000004	 beq         |$LN43@ValidateHe|
  00f58	e59d30b8	 ldr         r3, [sp, #0xB8]
  00f5c	e2833070	 add         r3, r3, #0x70
  00f60	e5933000	 ldr         r3, [r3]
  00f64	e58d3068	 str         r3, [sp, #0x68]
  00f68	ea000003	 b           |$LN44@ValidateHe|
  00f6c		 |$LN43@ValidateHe|
  00f6c	e59d30b8	 ldr         r3, [sp, #0xB8]
  00f70	e2833060	 add         r3, r3, #0x60
  00f74	e5933000	 ldr         r3, [r3]
  00f78	e58d3068	 str         r3, [sp, #0x68]
  00f7c		 |$LN44@ValidateHe|
  00f7c	e59d2068	 ldr         r2, [sp, #0x68]
  00f80	e59d3018	 ldr         r3, [sp, #0x18]
  00f84	e1520003	 cmp         r2, r3
  00f88	1a000002	 bne         |$LN45@ValidateHe|
  00f8c	e3a03001	 mov         r3, #1
  00f90	e58d306c	 str         r3, [sp, #0x6C]
  00f94	ea000001	 b           |$LN46@ValidateHe|
  00f98		 |$LN45@ValidateHe|
  00f98	e3a03000	 mov         r3, #0
  00f9c	e58d306c	 str         r3, [sp, #0x6C]
  00fa0		 |$LN46@ValidateHe|
  00fa0	e59d306c	 ldr         r3, [sp, #0x6C]
  00fa4	e3530000	 cmp         r3, #0
  00fa8	1a00008f	 bne         |$LN10@ValidateHe|

; 306  :         
; 307  :         DEBUGMSG(ZONE_VERBOSE && ZONE_CPHYSMEM, (TEXT("InUseList(pri = %d) : pNode size = %4d, PA = 0x%08x, VA = 0x%08X, Desc = %s\r\n"),
; 308  :                               fHighPri, pNode->dwSize, pNode->dwPhysAddr, pNode->dwVirtAddr, pNode->szDescription ));

  00fac	e59f3508	 ldr         r3, [pc, #0x508]
  00fb0	e5933440	 ldr         r3, [r3, #0x440]
  00fb4	e3130a01	 tst         r3, #1, 20
  00fb8	0a000015	 beq         |$LN47@ValidateHe|
  00fbc	e59f34f8	 ldr         r3, [pc, #0x4F8]
  00fc0	e5933440	 ldr         r3, [r3, #0x440]
  00fc4	e3130b02	 tst         r3, #2, 22
  00fc8	0a000011	 beq         |$LN47@ValidateHe|
  00fcc	e59d3018	 ldr         r3, [sp, #0x18]
  00fd0	e2833014	 add         r3, r3, #0x14
  00fd4	e58d3004	 str         r3, [sp, #4]
  00fd8	e59d3018	 ldr         r3, [sp, #0x18]
  00fdc	e5933000	 ldr         r3, [r3]
  00fe0	e58d3000	 str         r3, [sp]
  00fe4	e59d3018	 ldr         r3, [sp, #0x18]
  00fe8	e2833004	 add         r3, r3, #4
  00fec	e5933000	 ldr         r3, [r3]
  00ff0	e59d2018	 ldr         r2, [sp, #0x18]
  00ff4	e2822008	 add         r2, r2, #8
  00ff8	e5922000	 ldr         r2, [r2]
  00ffc	e59d10bc	 ldr         r1, [sp, #0xBC]
  01000	e59f04d4	 ldr         r0, [pc, #0x4D4]
  01004	eb000000	 bl          NKDbgPrintfW
  01008	e3a03001	 mov         r3, #1
  0100c	e58d3070	 str         r3, [sp, #0x70]
  01010	ea000001	 b           |$LN48@ValidateHe|
  01014		 |$LN47@ValidateHe|
  01014	e3a03000	 mov         r3, #0
  01018	e58d3070	 str         r3, [sp, #0x70]
  0101c		 |$LN48@ValidateHe|

; 309  : 
; 310  :         if ( pNode->dwSize == 0 ) {

  0101c	e59d3018	 ldr         r3, [sp, #0x18]
  01020	e2833008	 add         r3, r3, #8
  01024	e5933000	 ldr         r3, [r3]
  01028	e3530000	 cmp         r3, #0
  0102c	1a000014	 bne         |$LN9@ValidateHe|

; 311  :             DEBUGCHK( pNode->dwVirtAddr == 0 &&
; 312  :                       pNode->dwPhysAddr == 0 );

  01030	e59d3018	 ldr         r3, [sp, #0x18]
  01034	e5933000	 ldr         r3, [r3]
  01038	e3530000	 cmp         r3, #0
  0103c	1a000007	 bne         |$LN49@ValidateHe|
  01040	e59d3018	 ldr         r3, [sp, #0x18]
  01044	e2833004	 add         r3, r3, #4
  01048	e5933000	 ldr         r3, [r3]
  0104c	e3530000	 cmp         r3, #0
  01050	1a000002	 bne         |$LN49@ValidateHe|
  01054	e3a03001	 mov         r3, #1
  01058	e58d3074	 str         r3, [sp, #0x74]
  0105c	ea000007	 b           |$LN50@ValidateHe|
  01060		 |$LN49@ValidateHe|
  01060	e3a03f4e	 mov         r3, #0x4E, 30
  01064	e59f2458	 ldr         r2, [pc, #0x458]
  01068	e59f144c	 ldr         r1, [pc, #0x44C]
  0106c	e59f044c	 ldr         r0, [pc, #0x44C]
  01070	eb000000	 bl          NKDbgPrintfW
  01074	e6000010	 __debugbreak_ce
  01078	e3a03000	 mov         r3, #0
  0107c	e58d3074	 str         r3, [sp, #0x74]
  01080		 |$LN50@ValidateHe|

; 313  :         } else {

  01080	ea000023	 b           |$LN8@ValidateHe|
  01084		 |$LN9@ValidateHe|

; 314  :             DEBUGCHK( pNode->dwSize % CPHYSMEM_MEMORY_ALIGNMENT == 0 &&
; 315  :                       pNode->dwPhysAddr % CPHYSMEM_MEMORY_ALIGNMENT == 0 &&
; 316  :                       PUCHAR(pNode->dwVirtAddr) == PaToVa( pNode->dwPhysAddr ) );

  01084	e59d3018	 ldr         r3, [sp, #0x18]
  01088	e2833008	 add         r3, r3, #8
  0108c	e5931000	 ldr         r1, [r3]
  01090	e3a00020	 mov         r0, #0x20
  01094	eb000000	 bl          __rt_udiv
  01098	e3510000	 cmp         r1, #0
  0109c	1a000014	 bne         |$LN51@ValidateHe|
  010a0	e59d3018	 ldr         r3, [sp, #0x18]
  010a4	e2833004	 add         r3, r3, #4
  010a8	e5931000	 ldr         r1, [r3]
  010ac	e3a00020	 mov         r0, #0x20
  010b0	eb000000	 bl          __rt_udiv
  010b4	e3510000	 cmp         r1, #0
  010b8	1a00000d	 bne         |$LN51@ValidateHe|
  010bc	e59d3018	 ldr         r3, [sp, #0x18]
  010c0	e2833004	 add         r3, r3, #4
  010c4	e5931000	 ldr         r1, [r3]
  010c8	e59d00b8	 ldr         r0, [sp, #0xB8]
  010cc	eb000000	 bl          |?PaToVa@CPhysMem@@QAAPAEK@Z|
  010d0	e58d0078	 str         r0, [sp, #0x78]
  010d4	e59d3018	 ldr         r3, [sp, #0x18]
  010d8	e5932000	 ldr         r2, [r3]
  010dc	e59d3078	 ldr         r3, [sp, #0x78]
  010e0	e1520003	 cmp         r2, r3
  010e4	1a000002	 bne         |$LN51@ValidateHe|
  010e8	e3a03001	 mov         r3, #1
  010ec	e58d307c	 str         r3, [sp, #0x7C]
  010f0	ea000007	 b           |$LN52@ValidateHe|
  010f4		 |$LN51@ValidateHe|
  010f4	e3a03f4f	 mov         r3, #0x4F, 30
  010f8	e59f23c4	 ldr         r2, [pc, #0x3C4]
  010fc	e59f13b8	 ldr         r1, [pc, #0x3B8]
  01100	e59f03b8	 ldr         r0, [pc, #0x3B8]
  01104	eb000000	 bl          NKDbgPrintfW
  01108	e6000010	 __debugbreak_ce
  0110c	e3a03000	 mov         r3, #0
  01110	e58d307c	 str         r3, [sp, #0x7C]
  01114		 |$LN52@ValidateHe|
  01114		 |$LN8@ValidateHe|

; 317  :         }
; 318  : 
; 319  :         dwSizeTotal += pNode->dwSize;

  01114	e59d3018	 ldr         r3, [sp, #0x18]
  01118	e2833008	 add         r3, r3, #8
  0111c	e59d2014	 ldr         r2, [sp, #0x14]
  01120	e5933000	 ldr         r3, [r3]
  01124	e0823003	 add         r3, r2, r3
  01128	e58d3014	 str         r3, [sp, #0x14]

; 320  :         
; 321  :         if ((pNode->next->prev != pNode) || (pNode->prev->next != pNode)) {

  0112c	e59d3018	 ldr         r3, [sp, #0x18]
  01130	e283300c	 add         r3, r3, #0xC
  01134	e5933000	 ldr         r3, [r3]
  01138	e2833010	 add         r3, r3, #0x10
  0113c	e5932000	 ldr         r2, [r3]
  01140	e59d3018	 ldr         r3, [sp, #0x18]
  01144	e1520003	 cmp         r2, r3
  01148	1a000007	 bne         |$LN6@ValidateHe|
  0114c	e59d3018	 ldr         r3, [sp, #0x18]
  01150	e2833010	 add         r3, r3, #0x10
  01154	e5933000	 ldr         r3, [r3]
  01158	e283300c	 add         r3, r3, #0xC
  0115c	e5932000	 ldr         r2, [r3]
  01160	e59d3018	 ldr         r3, [sp, #0x18]
  01164	e1520003	 cmp         r2, r3
  01168	0a00001a	 beq         |$LN7@ValidateHe|
  0116c		 |$LN6@ValidateHe|

; 322  :             DEBUGMSG(ZONE_ERROR, (TEXT("CPhysMem ValidateHeaps : Invalid linked list (inuse)\r\n")));

  0116c	e59f3348	 ldr         r3, [pc, #0x348]
  01170	e5933440	 ldr         r3, [r3, #0x440]
  01174	e3130901	 tst         r3, #1, 18
  01178	0a000004	 beq         |$LN53@ValidateHe|
  0117c	e59f0354	 ldr         r0, [pc, #0x354]
  01180	eb000000	 bl          NKDbgPrintfW
  01184	e3a03001	 mov         r3, #1
  01188	e58d3080	 str         r3, [sp, #0x80]
  0118c	ea000001	 b           |$LN54@ValidateHe|
  01190		 |$LN53@ValidateHe|
  01190	e3a03000	 mov         r3, #0
  01194	e58d3080	 str         r3, [sp, #0x80]
  01198		 |$LN54@ValidateHe|

; 323  :             DEBUGCHK(0);

  01198	ea000002	 b           |$LN55@ValidateHe|
  0119c	e3a03001	 mov         r3, #1
  011a0	e58d3084	 str         r3, [sp, #0x84]
  011a4	ea000008	 b           |$LN56@ValidateHe|
  011a8		 |$LN55@ValidateHe|
  011a8	e3a03c01	 mov         r3, #1, 24
  011ac	e3833043	 orr         r3, r3, #0x43
  011b0	e59f230c	 ldr         r2, [pc, #0x30C]
  011b4	e59f1300	 ldr         r1, [pc, #0x300]
  011b8	e59f0300	 ldr         r0, [pc, #0x300]
  011bc	eb000000	 bl          NKDbgPrintfW
  011c0	e6000010	 __debugbreak_ce
  011c4	e3a03000	 mov         r3, #0
  011c8	e58d3084	 str         r3, [sp, #0x84]
  011cc		 |$LN56@ValidateHe|

; 324  :             return(FALSE);

  011cc	e3a03000	 mov         r3, #0
  011d0	e58d3024	 str         r3, [sp, #0x24]
  011d4	ea0000b3	 b           |$LN19@ValidateHe|
  011d8		 |$LN7@ValidateHe|

; 325  :         }
; 326  : 
; 327  :         pNode = pNode->next;

  011d8	e59d3018	 ldr         r3, [sp, #0x18]
  011dc	e283300c	 add         r3, r3, #0xC
  011e0	e5933000	 ldr         r3, [r3]
  011e4	e58d3018	 str         r3, [sp, #0x18]

; 328  :     }

  011e8	eaffff57	 b           |$LN11@ValidateHe|
  011ec		 |$LN10@ValidateHe|

; 329  :     
; 330  :     DEBUGMSG(ZONE_CPHYSMEM, (TEXT("CPhysMem ValidateHeaps : FreeSize = %d bytes; TotalSize = %d bytes\r\n"),
; 331  :                           dwSizeFree, dwSizeTotal));

  011ec	e59f32c8	 ldr         r3, [pc, #0x2C8]
  011f0	e5933440	 ldr         r3, [r3, #0x440]
  011f4	e3130b02	 tst         r3, #2, 22
  011f8	0a000006	 beq         |$LN57@ValidateHe|
  011fc	e59d2014	 ldr         r2, [sp, #0x14]
  01200	e59d1008	 ldr         r1, [sp, #8]
  01204	e59f02c8	 ldr         r0, [pc, #0x2C8]
  01208	eb000000	 bl          NKDbgPrintfW
  0120c	e3a03001	 mov         r3, #1
  01210	e58d3088	 str         r3, [sp, #0x88]
  01214	ea000001	 b           |$LN58@ValidateHe|
  01218		 |$LN57@ValidateHe|
  01218	e3a03000	 mov         r3, #0
  0121c	e58d3088	 str         r3, [sp, #0x88]
  01220		 |$LN58@ValidateHe|

; 332  : 
; 333  :     if (dwSizeTotal != (fHighPri ? m_dwHighPrioritySize : m_dwNormalSize)) {

  01220	e59d30bc	 ldr         r3, [sp, #0xBC]
  01224	e3530000	 cmp         r3, #0
  01228	0a000004	 beq         |$LN59@ValidateHe|
  0122c	e59d30b8	 ldr         r3, [sp, #0xB8]
  01230	e283306c	 add         r3, r3, #0x6C
  01234	e5933000	 ldr         r3, [r3]
  01238	e58d308c	 str         r3, [sp, #0x8C]
  0123c	ea000003	 b           |$LN60@ValidateHe|
  01240		 |$LN59@ValidateHe|
  01240	e59d30b8	 ldr         r3, [sp, #0xB8]
  01244	e2833058	 add         r3, r3, #0x58
  01248	e5933000	 ldr         r3, [r3]
  0124c	e58d308c	 str         r3, [sp, #0x8C]
  01250		 |$LN60@ValidateHe|
  01250	e59d2014	 ldr         r2, [sp, #0x14]
  01254	e59d308c	 ldr         r3, [sp, #0x8C]
  01258	e1520003	 cmp         r2, r3
  0125c	0a00001a	 beq         |$LN5@ValidateHe|

; 334  :         DEBUGMSG(ZONE_ERROR, (TEXT("CPhysMem ValidateHeaps : We've lost some memory somewhere\r\n")));

  01260	e59f3254	 ldr         r3, [pc, #0x254]
  01264	e5933440	 ldr         r3, [r3, #0x440]
  01268	e3130901	 tst         r3, #1, 18
  0126c	0a000004	 beq         |$LN61@ValidateHe|
  01270	e59f0258	 ldr         r0, [pc, #0x258]
  01274	eb000000	 bl          NKDbgPrintfW
  01278	e3a03001	 mov         r3, #1
  0127c	e58d3090	 str         r3, [sp, #0x90]
  01280	ea000001	 b           |$LN62@ValidateHe|
  01284		 |$LN61@ValidateHe|
  01284	e3a03000	 mov         r3, #0
  01288	e58d3090	 str         r3, [sp, #0x90]
  0128c		 |$LN62@ValidateHe|

; 335  :         DEBUGCHK(0);

  0128c	ea000002	 b           |$LN63@ValidateHe|
  01290	e3a03001	 mov         r3, #1
  01294	e58d3094	 str         r3, [sp, #0x94]
  01298	ea000008	 b           |$LN64@ValidateHe|
  0129c		 |$LN63@ValidateHe|
  0129c	e3a03c01	 mov         r3, #1, 24
  012a0	e383304f	 orr         r3, r3, #0x4F
  012a4	e59f2218	 ldr         r2, [pc, #0x218]
  012a8	e59f120c	 ldr         r1, [pc, #0x20C]
  012ac	e59f020c	 ldr         r0, [pc, #0x20C]
  012b0	eb000000	 bl          NKDbgPrintfW
  012b4	e6000010	 __debugbreak_ce
  012b8	e3a03000	 mov         r3, #0
  012bc	e58d3094	 str         r3, [sp, #0x94]
  012c0		 |$LN64@ValidateHe|

; 336  :         return(FALSE);

  012c0	e3a03000	 mov         r3, #0
  012c4	e58d3024	 str         r3, [sp, #0x24]
  012c8	ea000076	 b           |$LN19@ValidateHe|
  012cc		 |$LN5@ValidateHe|

; 337  :     }
; 338  :     
; 339  :     //
; 340  :     // Validate the NODES free list.
; 341  :     //
; 342  :     pNode = FirstNode(m_pNodeFreeListHead);

  012cc	e59d30b8	 ldr         r3, [sp, #0xB8]
  012d0	e2833040	 add         r3, r3, #0x40
  012d4	e5930000	 ldr         r0, [r3]
  012d8	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  012dc	e58d0098	 str         r0, [sp, #0x98]
  012e0	e59d3098	 ldr         r3, [sp, #0x98]
  012e4	e58d3018	 str         r3, [sp, #0x18]
  012e8		 |$LN4@ValidateHe|

; 343  :     while (!EndOfList(m_pNodeFreeListHead, pNode)) {

  012e8	e59d30b8	 ldr         r3, [sp, #0xB8]
  012ec	e2833040	 add         r3, r3, #0x40
  012f0	e5932000	 ldr         r2, [r3]
  012f4	e59d3018	 ldr         r3, [sp, #0x18]
  012f8	e1520003	 cmp         r2, r3
  012fc	1a000002	 bne         |$LN65@ValidateHe|
  01300	e3a03001	 mov         r3, #1
  01304	e58d309c	 str         r3, [sp, #0x9C]
  01308	ea000001	 b           |$LN66@ValidateHe|
  0130c		 |$LN65@ValidateHe|
  0130c	e3a03000	 mov         r3, #0
  01310	e58d309c	 str         r3, [sp, #0x9C]
  01314		 |$LN66@ValidateHe|
  01314	e59d309c	 ldr         r3, [sp, #0x9C]
  01318	e3530000	 cmp         r3, #0
  0131c	1a00004f	 bne         |$LN3@ValidateHe|

; 344  : 
; 345  :         dwNodesFree++;

  01320	e59d3010	 ldr         r3, [sp, #0x10]
  01324	e2833001	 add         r3, r3, #1
  01328	e58d3010	 str         r3, [sp, #0x10]

; 346  :         // these are set in DeleteNode
; 347  :         DEBUGCHK( pNode->dwSize == 0xdeadbeef &&
; 348  :                   pNode->dwPhysAddr == 0xdeadbeef &&
; 349  :                   pNode->dwVirtAddr == 0xdeadbeef );

  0132c	e59d3018	 ldr         r3, [sp, #0x18]
  01330	e2833008	 add         r3, r3, #8
  01334	e5932000	 ldr         r2, [r3]
  01338	e59f318c	 ldr         r3, [pc, #0x18C]
  0133c	e1520003	 cmp         r2, r3
  01340	1a00000d	 bne         |$LN67@ValidateHe|
  01344	e59d3018	 ldr         r3, [sp, #0x18]
  01348	e2833004	 add         r3, r3, #4
  0134c	e5932000	 ldr         r2, [r3]
  01350	e59f3174	 ldr         r3, [pc, #0x174]
  01354	e1520003	 cmp         r2, r3
  01358	1a000007	 bne         |$LN67@ValidateHe|
  0135c	e59d3018	 ldr         r3, [sp, #0x18]
  01360	e5932000	 ldr         r2, [r3]
  01364	e59f3160	 ldr         r3, [pc, #0x160]
  01368	e1520003	 cmp         r2, r3
  0136c	1a000002	 bne         |$LN67@ValidateHe|
  01370	e3a03001	 mov         r3, #1
  01374	e58d30a0	 str         r3, [sp, #0xA0]
  01378	ea000008	 b           |$LN68@ValidateHe|
  0137c		 |$LN67@ValidateHe|
  0137c	e3a03c01	 mov         r3, #1, 24
  01380	e383305d	 orr         r3, r3, #0x5D
  01384	e59f2138	 ldr         r2, [pc, #0x138]
  01388	e59f112c	 ldr         r1, [pc, #0x12C]
  0138c	e59f012c	 ldr         r0, [pc, #0x12C]
  01390	eb000000	 bl          NKDbgPrintfW
  01394	e6000010	 __debugbreak_ce
  01398	e3a03000	 mov         r3, #0
  0139c	e58d30a0	 str         r3, [sp, #0xA0]
  013a0		 |$LN68@ValidateHe|

; 350  :         
; 351  :         if ((pNode->next->prev != pNode) || (pNode->prev->next != pNode)) {

  013a0	e59d3018	 ldr         r3, [sp, #0x18]
  013a4	e283300c	 add         r3, r3, #0xC
  013a8	e5933000	 ldr         r3, [r3]
  013ac	e2833010	 add         r3, r3, #0x10
  013b0	e5932000	 ldr         r2, [r3]
  013b4	e59d3018	 ldr         r3, [sp, #0x18]
  013b8	e1520003	 cmp         r2, r3
  013bc	1a000007	 bne         |$LN1@ValidateHe|
  013c0	e59d3018	 ldr         r3, [sp, #0x18]
  013c4	e2833010	 add         r3, r3, #0x10
  013c8	e5933000	 ldr         r3, [r3]
  013cc	e283300c	 add         r3, r3, #0xC
  013d0	e5932000	 ldr         r2, [r3]
  013d4	e59d3018	 ldr         r3, [sp, #0x18]
  013d8	e1520003	 cmp         r2, r3
  013dc	0a00001a	 beq         |$LN2@ValidateHe|
  013e0		 |$LN1@ValidateHe|

; 352  :             DEBUGMSG(ZONE_ERROR, (TEXT("CPhysMem ValidateHeaps : Invalid linked list (nodefree)\r\n")));

  013e0	e59f30d4	 ldr         r3, [pc, #0xD4]
  013e4	e5933440	 ldr         r3, [r3, #0x440]
  013e8	e3130901	 tst         r3, #1, 18
  013ec	0a000004	 beq         |$LN69@ValidateHe|
  013f0	e59f00d0	 ldr         r0, [pc, #0xD0]
  013f4	eb000000	 bl          NKDbgPrintfW
  013f8	e3a03001	 mov         r3, #1
  013fc	e58d30a4	 str         r3, [sp, #0xA4]
  01400	ea000001	 b           |$LN70@ValidateHe|
  01404		 |$LN69@ValidateHe|
  01404	e3a03000	 mov         r3, #0
  01408	e58d30a4	 str         r3, [sp, #0xA4]
  0140c		 |$LN70@ValidateHe|

; 353  :             DEBUGCHK(0);

  0140c	ea000002	 b           |$LN71@ValidateHe|
  01410	e3a03001	 mov         r3, #1
  01414	e58d30a8	 str         r3, [sp, #0xA8]
  01418	ea000008	 b           |$LN72@ValidateHe|
  0141c		 |$LN71@ValidateHe|
  0141c	e3a03c01	 mov         r3, #1, 24
  01420	e3833061	 orr         r3, r3, #0x61
  01424	e59f2098	 ldr         r2, [pc, #0x98]
  01428	e59f108c	 ldr         r1, [pc, #0x8C]
  0142c	e59f008c	 ldr         r0, [pc, #0x8C]
  01430	eb000000	 bl          NKDbgPrintfW
  01434	e6000010	 __debugbreak_ce
  01438	e3a03000	 mov         r3, #0
  0143c	e58d30a8	 str         r3, [sp, #0xA8]
  01440		 |$LN72@ValidateHe|

; 354  :             return(FALSE);

  01440	e3a03000	 mov         r3, #0
  01444	e58d3024	 str         r3, [sp, #0x24]
  01448	ea000016	 b           |$LN19@ValidateHe|
  0144c		 |$LN2@ValidateHe|

; 355  :         }
; 356  :         pNode = pNode->next;

  0144c	e59d3018	 ldr         r3, [sp, #0x18]
  01450	e283300c	 add         r3, r3, #0xC
  01454	e5933000	 ldr         r3, [r3]
  01458	e58d3018	 str         r3, [sp, #0x18]

; 357  :     }

  0145c	eaffffa1	 b           |$LN4@ValidateHe|
  01460		 |$LN3@ValidateHe|

; 358  :     DEBUGMSG(ZONE_CPHYSMEM && ZONE_VERBOSE, (TEXT("CPhysMem ValidateHeaps : Nodes Free = %d\r\n"),dwNodesFree));

  01460	e59f3054	 ldr         r3, [pc, #0x54]
  01464	e5933440	 ldr         r3, [r3, #0x440]
  01468	e3130b02	 tst         r3, #2, 22
  0146c	0a000009	 beq         |$LN73@ValidateHe|
  01470	e59f3044	 ldr         r3, [pc, #0x44]
  01474	e5933440	 ldr         r3, [r3, #0x440]
  01478	e3130a01	 tst         r3, #1, 20
  0147c	0a000005	 beq         |$LN73@ValidateHe|
  01480	e59d1010	 ldr         r1, [sp, #0x10]
  01484	e59f002c	 ldr         r0, [pc, #0x2C]
  01488	eb000000	 bl          NKDbgPrintfW
  0148c	e3a03001	 mov         r3, #1
  01490	e58d30ac	 str         r3, [sp, #0xAC]
  01494	ea000001	 b           |$LN74@ValidateHe|
  01498		 |$LN73@ValidateHe|
  01498	e3a03000	 mov         r3, #0
  0149c	e58d30ac	 str         r3, [sp, #0xAC]
  014a0		 |$LN74@ValidateHe|

; 359  :     
; 360  :     return (TRUE);

  014a0	e3a03001	 mov         r3, #1
  014a4	e58d3024	 str         r3, [sp, #0x24]
  014a8		 |$LN19@ValidateHe|

; 361  : }

  014a8	e59d0024	 ldr         r0, [sp, #0x24]
  014ac	e28dd0b0	 add         sp, sp, #0xB0
  014b0	e89d6000	 ldmia       sp, {sp, lr}
  014b4	e12fff1e	 bx          lr
  014b8		 |$LN78@ValidateHe|
  014b8		 |$LN79@ValidateHe|
  014b8	00000000	 DCD         |??_C@_1FG@KBIHBEP@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAN?$AAo?$AAd?$AAe?$AAs?$AA?5?$AAF@|
  014bc		 |$LN80@ValidateHe|
  014bc	00000000	 DCD         |dpCurSettings|
  014c0		 |$LN81@ValidateHe|
  014c0	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  014c4		 |$LN82@ValidateHe|
  014c4	00000000	 DCD         |??_C@_1LM@NABMAHLD@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  014c8		 |$LN83@ValidateHe|
  014c8	00000000	 DCD         |??_C@_1HE@BKCBJCLG@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@|
  014cc		 |$LN84@ValidateHe|
  014cc	deadbeef	 DCD         0xdeadbeef
  014d0		 |$LN85@ValidateHe|
  014d0	00000000	 DCD         |??_C@_1HI@EIJALODG@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAW?$AAe?$AA?8?$AAv?$AAe?$AA?5?$AAl@|
  014d4		 |$LN86@ValidateHe|
  014d4	00000000	 DCD         |??_C@_1IK@IOHNCDME@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAF?$AAr?$AAe?$AAe?$AAS?$AAi?$AAz@|
  014d8		 |$LN87@ValidateHe|
  014d8	00000000	 DCD         |??_C@_1GO@BBFMJBGE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@|
  014dc		 |$LN88@ValidateHe|
  014dc	00000000	 DCD         |??_C@_1JM@FJJCMIHE@?$AAI?$AAn?$AAU?$AAs?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AA?3?$AA?5?$AAp?$AAN?$AAo?$AAd?$AAe?$AA?5?$AAs?$AAi?$AAz?$AAe@|
  014e0		 |$LN89@ValidateHe|
  014e0	00000000	 DCD         |??_C@_1GM@JDBBEPGD@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@|
  014e4		 |$LN90@ValidateHe|
  014e4	00000000	 DCD         |??_C@_1HE@LFOBKGBN@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAL?$AAi@|
  014e8		 |$LN91@ValidateHe|
  014e8	00000000	 DCD         |??_C@_1JK@ENFIOHDK@?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AA?3?$AA?5?$AAp?$AAN?$AAo?$AAd?$AAe?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5@|
  014ec		 |$M34360|

			 ENDP  ; |?ValidateHeaps@CPhysMem@@AAAHH@Z|, CPhysMem::ValidateHeaps

	EXPORT	|??_C@_1LI@BIDAGBNP@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA6?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo?$AAn?$AA?2?$AAs?$AAr?$AAc?$AA?2@| [ DATA ] ; `string'
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\usb2com\cphysmem.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T34386| DCD	|$LN9@PaToVa|
	DCD	0x40003c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LI@BIDAGBNP@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA6?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo?$AAn?$AA?2?$AAs?$AAr?$AAc?$AA?2@| DCB "c"
	DCB	0x0, ":", 0x0, "\\", 0x0, "w", 0x0, "i", 0x0, "n", 0x0, "c"
	DCB	0x0, "e", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "p"
	DCB	0x0, "l", 0x0, "a", 0x0, "t", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, "m", 0x0, "\\", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "o", 0x0, "n", 0x0, "\\", 0x0, "s", 0x0, "r", 0x0, "c"
	DCB	0x0, "\\", 0x0, "s", 0x0, "o", 0x0, "c", 0x0, "\\", 0x0, "c"
	DCB	0x0, "o", 0x0, "m", 0x0, "m", 0x0, "o", 0x0, "n", 0x0, "_"
	DCB	0x0, "t", 0x0, "i", 0x0, "_", 0x0, "v", 0x0, "1", 0x0, "\\"
	DCB	0x0, "o", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "3", 0x0, "5"
	DCB	0x0, "3", 0x0, "0", 0x0, "\\", 0x0, "m", 0x0, "u", 0x0, "s"
	DCB	0x0, "b", 0x0, "\\", 0x0, "m", 0x0, "u", 0x0, "s", 0x0, "b"
	DCB	0x0, "h", 0x0, "c", 0x0, "d", 0x0, "\\", 0x0, "u", 0x0, "s"
	DCB	0x0, "b", 0x0, "2", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "\\"
	DCB	0x0, "c", 0x0, "p", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "m"
	DCB	0x0, "e", 0x0, "m", 0x0, ".", 0x0, "h", 0x0, "p", 0x0, "p"
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PaToVa@CPhysMem@@QAAPAEK@Z| PROC	; CPhysMem::PaToVa

; 209  : {

  00000		 |$LN9@PaToVa|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd010	 sub         sp, sp, #0x10
  00010		 |$M34383|

; 210  :     DEBUGCHK( physAddr != 0 );

  00010	e59d301c	 ldr         r3, [sp, #0x1C]
  00014	e3530000	 cmp         r3, #0
  00018	0a000002	 beq         |$LN3@PaToVa|
  0001c	e3a03001	 mov         r3, #1
  00020	e58d3008	 str         r3, [sp, #8]
  00024	ea000007	 b           |$LN4@PaToVa|
  00028		 |$LN3@PaToVa|
  00028	e3a030d2	 mov         r3, #0xD2
  0002c	e59f20b4	 ldr         r2, [pc, #0xB4]
  00030	e59f10b4	 ldr         r1, [pc, #0xB4]
  00034	e59f00a4	 ldr         r0, [pc, #0xA4]
  00038	eb000000	 bl          NKDbgPrintfW
  0003c	e6000010	 __debugbreak_ce
  00040	e3a03000	 mov         r3, #0
  00044	e58d3008	 str         r3, [sp, #8]
  00048		 |$LN4@PaToVa|

; 211  :     PUCHAR virtAddr= PUCHAR(physAddr - m_PaVaConversion);

  00048	e59d3018	 ldr         r3, [sp, #0x18]
  0004c	e2833034	 add         r3, r3, #0x34
  00050	e59d201c	 ldr         r2, [sp, #0x1C]
  00054	e5933000	 ldr         r3, [r3]
  00058	e0423003	 sub         r3, r2, r3
  0005c	e58d3000	 str         r3, [sp]

; 212  :     ASSERT((DWORD)m_pPhysicalBufferAddr <=(DWORD)virtAddr && (DWORD)virtAddr <(DWORD) m_pPhysicalBufferAddr + m_cbTotal);

  00060	e59d3018	 ldr         r3, [sp, #0x18]
  00064	e283303c	 add         r3, r3, #0x3C
  00068	e5932000	 ldr         r2, [r3]
  0006c	e59d3000	 ldr         r3, [sp]
  00070	e1520003	 cmp         r2, r3
  00074	8a00000b	 bhi         |$LN5@PaToVa|
  00078	e59d3018	 ldr         r3, [sp, #0x18]
  0007c	e283303c	 add         r3, r3, #0x3C
  00080	e5932000	 ldr         r2, [r3]
  00084	e59d3018	 ldr         r3, [sp, #0x18]
  00088	e5933000	 ldr         r3, [r3]
  0008c	e0822003	 add         r2, r2, r3
  00090	e59d3000	 ldr         r3, [sp]
  00094	e1530002	 cmp         r3, r2
  00098	2a000002	 bcs         |$LN5@PaToVa|
  0009c	e3a03001	 mov         r3, #1
  000a0	e58d300c	 str         r3, [sp, #0xC]
  000a4	ea000007	 b           |$LN6@PaToVa|
  000a8		 |$LN5@PaToVa|
  000a8	e3a030d4	 mov         r3, #0xD4
  000ac	e59f2034	 ldr         r2, [pc, #0x34]
  000b0	e59f102c	 ldr         r1, [pc, #0x2C]
  000b4	e59f0024	 ldr         r0, [pc, #0x24]
  000b8	eb000000	 bl          NKDbgPrintfW
  000bc	e6000010	 __debugbreak_ce
  000c0	e3a03000	 mov         r3, #0
  000c4	e58d300c	 str         r3, [sp, #0xC]
  000c8		 |$LN6@PaToVa|

; 213  :     return virtAddr;    

  000c8	e59d3000	 ldr         r3, [sp]
  000cc	e58d3004	 str         r3, [sp, #4]

; 214  : }

  000d0	e59d0004	 ldr         r0, [sp, #4]
  000d4	e28dd010	 add         sp, sp, #0x10
  000d8	e89d6000	 ldmia       sp, {sp, lr}
  000dc	e12fff1e	 bx          lr
  000e0		 |$LN10@PaToVa|
  000e0		 |$LN11@PaToVa|
  000e0	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  000e4		 |$LN12@PaToVa|
  000e4	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  000e8		 |$LN13@PaToVa|
  000e8	00000000	 DCD         |??_C@_1LI@BIDAGBNP@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA6?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo?$AAn?$AA?2?$AAs?$AAr?$AAc?$AA?2@|
  000ec		 |$LN14@PaToVa|
  000ec	00000000	 DCD         |dpCurSettings|
  000f0		 |$M34384|

			 ENDP  ; |?PaToVa@CPhysMem@@QAAPAEK@Z|, CPhysMem::PaToVa

	EXPORT	|??_C@_1BK@HELANJJ@?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAD?$AAe?$AAs?$AAc?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?RemoveNode@@YAXPAUtMEMLIST@@@Z|	; RemoveNode
	IMPORT	|LocalAlloc|

  00018			 AREA	 |.pdata|, PDATA
|$T34405| DCD	|$LN17@CreateNewN|
	DCD	0x40007f04
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\usb2com\cphysmem.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@HELANJJ@?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAD?$AAe?$AAs?$AAc?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "f", 0x0, "a", 0x0, "u", 0x0, "l", 0x0, "t"
	DCB	0x0, " ", 0x0, "D", 0x0, "e", 0x0, "s", 0x0, "c", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  014ec			 AREA	 |.text|, CODE, ARM

  014ec		 |?CreateNewNode@CPhysMem@@AAAPAUtMEMLIST@@KKK@Z| PROC ; CPhysMem::CreateNewNode

; 384  : {

  014ec		 |$LN17@CreateNewN|
  014ec	e1a0c00d	 mov         r12, sp
  014f0	e92d000f	 stmdb       sp!, {r0 - r3}
  014f4	e92d5000	 stmdb       sp!, {r12, lr}
  014f8	e24dd020	 sub         sp, sp, #0x20
  014fc		 |$M34402|

; 385  : #ifdef DEBUG
; 386  :     if ( dwSize == 0 ) {

  014fc	e59d302c	 ldr         r3, [sp, #0x2C]
  01500	e3530000	 cmp         r3, #0
  01504	1a000011	 bne         |$LN6@CreateNewN|

; 387  :         DEBUGCHK( dwVirtAddr == 0 &&
; 388  :                   dwPhysAddr == 0 );

  01508	e59d3030	 ldr         r3, [sp, #0x30]
  0150c	e3530000	 cmp         r3, #0
  01510	1a000005	 bne         |$LN9@CreateNewN|
  01514	e59d3034	 ldr         r3, [sp, #0x34]
  01518	e3530000	 cmp         r3, #0
  0151c	1a000002	 bne         |$LN9@CreateNewN|
  01520	e3a03001	 mov         r3, #1
  01524	e58d3008	 str         r3, [sp, #8]
  01528	ea000007	 b           |$LN10@CreateNewN|
  0152c		 |$LN9@CreateNewN|
  0152c	e3a03f61	 mov         r3, #0x61, 30
  01530	e59f21ac	 ldr         r2, [pc, #0x1AC]
  01534	e59f11a4	 ldr         r1, [pc, #0x1A4]
  01538	e59f019c	 ldr         r0, [pc, #0x19C]
  0153c	eb000000	 bl          NKDbgPrintfW
  01540	e6000010	 __debugbreak_ce
  01544	e3a03000	 mov         r3, #0
  01548	e58d3008	 str         r3, [sp, #8]
  0154c		 |$LN10@CreateNewN|

; 389  :     } else {

  0154c	ea00001c	 b           |$LN5@CreateNewN|
  01550		 |$LN6@CreateNewN|

; 390  :         DEBUGCHK( dwSize % CPHYSMEM_MEMORY_ALIGNMENT == 0 &&
; 391  :                   dwPhysAddr % CPHYSMEM_MEMORY_ALIGNMENT == 0 &&
; 392  :                   PUCHAR(dwVirtAddr) == PaToVa( dwPhysAddr ) );

  01550	e59d102c	 ldr         r1, [sp, #0x2C]
  01554	e3a00020	 mov         r0, #0x20
  01558	eb000000	 bl          __rt_udiv
  0155c	e3510000	 cmp         r1, #0
  01560	1a00000f	 bne         |$LN11@CreateNewN|
  01564	e59d1034	 ldr         r1, [sp, #0x34]
  01568	e3a00020	 mov         r0, #0x20
  0156c	eb000000	 bl          __rt_udiv
  01570	e3510000	 cmp         r1, #0
  01574	1a00000a	 bne         |$LN11@CreateNewN|
  01578	e59d1034	 ldr         r1, [sp, #0x34]
  0157c	e59d0028	 ldr         r0, [sp, #0x28]
  01580	eb000000	 bl          |?PaToVa@CPhysMem@@QAAPAEK@Z|
  01584	e58d000c	 str         r0, [sp, #0xC]
  01588	e59d2030	 ldr         r2, [sp, #0x30]
  0158c	e59d300c	 ldr         r3, [sp, #0xC]
  01590	e1520003	 cmp         r2, r3
  01594	1a000002	 bne         |$LN11@CreateNewN|
  01598	e3a03001	 mov         r3, #1
  0159c	e58d3010	 str         r3, [sp, #0x10]
  015a0	ea000007	 b           |$LN12@CreateNewN|
  015a4		 |$LN11@CreateNewN|
  015a4	e3a03f62	 mov         r3, #0x62, 30
  015a8	e59f2134	 ldr         r2, [pc, #0x134]
  015ac	e59f112c	 ldr         r1, [pc, #0x12C]
  015b0	e59f0124	 ldr         r0, [pc, #0x124]
  015b4	eb000000	 bl          NKDbgPrintfW
  015b8	e6000010	 __debugbreak_ce
  015bc	e3a03000	 mov         r3, #0
  015c0	e58d3010	 str         r3, [sp, #0x10]
  015c4		 |$LN12@CreateNewN|
  015c4		 |$LN5@CreateNewN|

; 393  :     }
; 394  : #endif // DEBUG
; 395  : 
; 396  :     PMEMLIST pNode;
; 397  :     //
; 398  :     // If we already have a node allocated and sitting around, use it.
; 399  :     //
; 400  :     if ((dwSize == 0) || IsListEmpty(m_pNodeFreeListHead)) {

  015c4	e59d302c	 ldr         r3, [sp, #0x2C]
  015c8	e3530000	 cmp         r3, #0
  015cc	0a000011	 beq         |$LN3@CreateNewN|
  015d0	e59d3028	 ldr         r3, [sp, #0x28]
  015d4	e2833040	 add         r3, r3, #0x40
  015d8	e5933000	 ldr         r3, [r3]
  015dc	e283200c	 add         r2, r3, #0xC
  015e0	e59d3028	 ldr         r3, [sp, #0x28]
  015e4	e2833040	 add         r3, r3, #0x40
  015e8	e5922000	 ldr         r2, [r2]
  015ec	e5933000	 ldr         r3, [r3]
  015f0	e1520003	 cmp         r2, r3
  015f4	1a000002	 bne         |$LN13@CreateNewN|
  015f8	e3a03001	 mov         r3, #1
  015fc	e58d3014	 str         r3, [sp, #0x14]
  01600	ea000001	 b           |$LN14@CreateNewN|
  01604		 |$LN13@CreateNewN|
  01604	e3a03000	 mov         r3, #0
  01608	e58d3014	 str         r3, [sp, #0x14]
  0160c		 |$LN14@CreateNewN|
  0160c	e59d3014	 ldr         r3, [sp, #0x14]
  01610	e3530000	 cmp         r3, #0
  01614	0a000006	 beq         |$LN4@CreateNewN|
  01618		 |$LN3@CreateNewN|

; 401  :         pNode = (PMEMLIST) CPhysMem_Alloc(LPTR, sizeof(MEMLIST));

  01618	e3a010b4	 mov         r1, #0xB4
  0161c	e3a00040	 mov         r0, #0x40
  01620	eb000000	 bl          LocalAlloc
  01624	e58d0018	 str         r0, [sp, #0x18]
  01628	e59d3018	 ldr         r3, [sp, #0x18]
  0162c	e58d3000	 str         r3, [sp]

; 402  :     } else {

  01630	ea000008	 b           |$LN2@CreateNewN|
  01634		 |$LN4@CreateNewN|

; 403  :         pNode = FirstNode(m_pNodeFreeListHead);

  01634	e59d3028	 ldr         r3, [sp, #0x28]
  01638	e2833040	 add         r3, r3, #0x40
  0163c	e5930000	 ldr         r0, [r3]
  01640	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  01644	e58d001c	 str         r0, [sp, #0x1C]
  01648	e59d301c	 ldr         r3, [sp, #0x1C]
  0164c	e58d3000	 str         r3, [sp]

; 404  :         RemoveNode(pNode);

  01650	e59d0000	 ldr         r0, [sp]
  01654	eb000000	 bl          |?RemoveNode@@YAXPAUtMEMLIST@@@Z|
  01658		 |$LN2@CreateNewN|

; 405  :     }
; 406  : 
; 407  :     if (pNode != NULL) {

  01658	e59d3000	 ldr         r3, [sp]
  0165c	e3530000	 cmp         r3, #0
  01660	0a000016	 beq         |$LN1@CreateNewN|

; 408  :         pNode->dwVirtAddr = dwVirtAddr;

  01664	e59d2030	 ldr         r2, [sp, #0x30]
  01668	e59d3000	 ldr         r3, [sp]
  0166c	e5832000	 str         r2, [r3]

; 409  :         pNode->dwPhysAddr = dwPhysAddr;

  01670	e59d3000	 ldr         r3, [sp]
  01674	e2832004	 add         r2, r3, #4
  01678	e59d3034	 ldr         r3, [sp, #0x34]
  0167c	e5823000	 str         r3, [r2]

; 410  :         pNode->dwSize = dwSize;

  01680	e59d3000	 ldr         r3, [sp]
  01684	e2832008	 add         r2, r3, #8
  01688	e59d302c	 ldr         r3, [sp, #0x2C]
  0168c	e5823000	 str         r3, [r2]

; 411  :         pNode->next = NULL;

  01690	e59d3000	 ldr         r3, [sp]
  01694	e283200c	 add         r2, r3, #0xC
  01698	e3a03000	 mov         r3, #0
  0169c	e5823000	 str         r3, [r2]

; 412  :         pNode->prev = NULL;

  016a0	e59d3000	 ldr         r3, [sp]
  016a4	e2832010	 add         r2, r3, #0x10
  016a8	e3a03000	 mov         r3, #0
  016ac	e5823000	 str         r3, [r2]

; 413  :     #ifdef DEBUG
; 414  :         _tcscpy( pNode->szDescription, TEXT("Default Desc") );

  016b0	e59f1020	 ldr         r1, [pc, #0x20]
  016b4	e59d3000	 ldr         r3, [sp]
  016b8	e2830014	 add         r0, r3, #0x14
  016bc	eb000000	 bl          wcscpy
  016c0		 |$LN1@CreateNewN|

; 415  :     #endif // DEBUG
; 416  :     }
; 417  :     
; 418  :     return (pNode);

  016c0	e59d3000	 ldr         r3, [sp]
  016c4	e58d3004	 str         r3, [sp, #4]

; 419  : }

  016c8	e59d0004	 ldr         r0, [sp, #4]
  016cc	e28dd020	 add         sp, sp, #0x20
  016d0	e89d6000	 ldmia       sp, {sp, lr}
  016d4	e12fff1e	 bx          lr
  016d8		 |$LN18@CreateNewN|
  016d8		 |$LN19@CreateNewN|
  016d8	00000000	 DCD         |??_C@_1BK@HELANJJ@?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAD?$AAe?$AAs?$AAc?$AA?$AA@|
  016dc		 |$LN20@CreateNewN|
  016dc	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  016e0		 |$LN21@CreateNewN|
  016e0	00000000	 DCD         |dpCurSettings|
  016e4		 |$LN22@CreateNewN|
  016e4	00000000	 DCD         |??_C@_1LM@NABMAHLD@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  016e8		 |$M34403|

			 ENDP  ; |?CreateNewNode@CPhysMem@@AAAPAUtMEMLIST@@KKK@Z|, CPhysMem::CreateNewNode

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\usb2com\cphysmem.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T34415| DCD	|$LN5@RemoveNode|
	DCD	0x40001d03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RemoveNode@@YAXPAUtMEMLIST@@@Z| PROC	; RemoveNode

; 244  : {

  00000		 |$LN5@RemoveNode|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M34412|

; 245  :     pNode->prev->next = pNode->next;

  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e283100c	 add         r1, r3, #0xC
  00014	e59d3008	 ldr         r3, [sp, #8]
  00018	e2833010	 add         r3, r3, #0x10
  0001c	e5933000	 ldr         r3, [r3]
  00020	e283200c	 add         r2, r3, #0xC
  00024	e5913000	 ldr         r3, [r1]
  00028	e5823000	 str         r3, [r2]

; 246  :     pNode->next->prev = pNode->prev;

  0002c	e59d3008	 ldr         r3, [sp, #8]
  00030	e2831010	 add         r1, r3, #0x10
  00034	e59d3008	 ldr         r3, [sp, #8]
  00038	e283300c	 add         r3, r3, #0xC
  0003c	e5933000	 ldr         r3, [r3]
  00040	e2832010	 add         r2, r3, #0x10
  00044	e5913000	 ldr         r3, [r1]
  00048	e5823000	 str         r3, [r2]

; 247  :     pNode->next = NULL;

  0004c	e59d3008	 ldr         r3, [sp, #8]
  00050	e283200c	 add         r2, r3, #0xC
  00054	e3a03000	 mov         r3, #0
  00058	e5823000	 str         r3, [r2]

; 248  :     pNode->prev = NULL;

  0005c	e59d3008	 ldr         r3, [sp, #8]
  00060	e2832010	 add         r2, r3, #0x10
  00064	e3a03000	 mov         r3, #0
  00068	e5823000	 str         r3, [r2]

; 249  : }

  0006c	e89d6000	 ldmia       sp, {sp, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$M34413|

			 ENDP  ; |?RemoveNode@@YAXPAUtMEMLIST@@@Z|, RemoveNode

	EXPORT	|??_C@_1BK@DHHEGMON@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AAd?$AA?5?$AAN?$AAo?$AAd?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?DeleteNode@CPhysMem@@AAAHPAUtMEMLIST@@@Z| ; CPhysMem::DeleteNode

  00020			 AREA	 |.pdata|, PDATA
|$T34423| DCD	|$LN5@DeleteNode|
	DCD	0x40002304
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\usb2com\cphysmem.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@DHHEGMON@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AAd?$AA?5?$AAN?$AAo?$AAd?$AAe?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "N", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  016e8			 AREA	 |.text|, CODE, ARM

  016e8		 |?DeleteNode@CPhysMem@@AAAHPAUtMEMLIST@@@Z| PROC ; CPhysMem::DeleteNode

; 438  : {

  016e8		 |$LN5@DeleteNode|
  016e8	e1a0c00d	 mov         r12, sp
  016ec	e92d0003	 stmdb       sp!, {r0, r1}
  016f0	e92d5000	 stmdb       sp!, {r12, lr}
  016f4	e24dd008	 sub         sp, sp, #8
  016f8		 |$M34420|

; 439  :     //
; 440  :     // We don't actually delete any of the nodes. We just keep them on our
; 441  :     // free list to use later. Keeps us from thrashing on the heap.
; 442  :     //
; 443  : #ifdef DEBUG
; 444  :     pNode->dwSize = 0xdeadbeef;

  016f8	e59d3014	 ldr         r3, [sp, #0x14]
  016fc	e2832008	 add         r2, r3, #8
  01700	e59f3068	 ldr         r3, [pc, #0x68]
  01704	e5823000	 str         r3, [r2]

; 445  :     pNode->dwPhysAddr = 0xdeadbeef;

  01708	e59d3014	 ldr         r3, [sp, #0x14]
  0170c	e2832004	 add         r2, r3, #4
  01710	e59f3058	 ldr         r3, [pc, #0x58]
  01714	e5823000	 str         r3, [r2]

; 446  :     pNode->dwVirtAddr = 0xdeadbeef;

  01718	e59d2014	 ldr         r2, [sp, #0x14]
  0171c	e59f304c	 ldr         r3, [pc, #0x4C]
  01720	e5823000	 str         r3, [r2]

; 447  :     _tcscpy( pNode->szDescription, TEXT("Deleted Node") );

  01724	e59f1040	 ldr         r1, [pc, #0x40]
  01728	e59d3014	 ldr         r3, [sp, #0x14]
  0172c	e2830014	 add         r0, r3, #0x14
  01730	eb000000	 bl          wcscpy

; 448  : #endif // DEBUG
; 449  :     InsertNodeBefore(pNode, FirstNode(m_pNodeFreeListHead));

  01734	e59d3010	 ldr         r3, [sp, #0x10]
  01738	e2833040	 add         r3, r3, #0x40
  0173c	e5930000	 ldr         r0, [r3]
  01740	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  01744	e58d0004	 str         r0, [sp, #4]
  01748	e59d1004	 ldr         r1, [sp, #4]
  0174c	e59d0014	 ldr         r0, [sp, #0x14]
  01750	eb000000	 bl          |?InsertNodeBefore@@YAXPAUtMEMLIST@@0@Z|

; 450  :     return(TRUE);

  01754	e3a03001	 mov         r3, #1
  01758	e58d3000	 str         r3, [sp]

; 451  : }

  0175c	e59d0000	 ldr         r0, [sp]
  01760	e28dd008	 add         sp, sp, #8
  01764	e89d6000	 ldmia       sp, {sp, lr}
  01768	e12fff1e	 bx          lr
  0176c		 |$LN6@DeleteNode|
  0176c		 |$LN7@DeleteNode|
  0176c	00000000	 DCD         |??_C@_1BK@DHHEGMON@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AAd?$AA?5?$AAN?$AAo?$AAd?$AAe?$AA?$AA@|
  01770		 |$LN8@DeleteNode|
  01770	deadbeef	 DCD         0xdeadbeef
  01774		 |$M34421|

			 ENDP  ; |?DeleteNode@CPhysMem@@AAAHPAUtMEMLIST@@@Z|, CPhysMem::DeleteNode

	EXPORT	|?FindFreeBlock@CPhysMem@@AAAPAUtMEMLIST@@KH@Z| ; CPhysMem::FindFreeBlock

  00028			 AREA	 |.pdata|, PDATA
|$T34440| DCD	|$LN16@FindFreeBl|
	DCD	0x40005904
; Function compile flags: /Odtp

  01774			 AREA	 |.text|, CODE, ARM

  01774		 |?FindFreeBlock@CPhysMem@@AAAPAUtMEMLIST@@KH@Z| PROC ; CPhysMem::FindFreeBlock

; 474  : {

  01774		 |$LN16@FindFreeBl|
  01774	e1a0c00d	 mov         r12, sp
  01778	e92d0007	 stmdb       sp!, {r0 - r2}
  0177c	e92d5000	 stmdb       sp!, {r12, lr}
  01780	e24dd01c	 sub         sp, sp, #0x1C
  01784		 |$M34437|

; 475  :     DEBUGCHK( dwSize >= CPHYSMEM_MEMORY_ALIGNMENT &&
; 476  :               dwSize % CPHYSMEM_MEMORY_ALIGNMENT == 0 );

  01784	e59d3028	 ldr         r3, [sp, #0x28]
  01788	e3530020	 cmp         r3, #0x20
  0178c	3a000007	 bcc         |$LN6@FindFreeBl|
  01790	e59d1028	 ldr         r1, [sp, #0x28]
  01794	e3a00020	 mov         r0, #0x20
  01798	eb000000	 bl          __rt_udiv
  0179c	e3510000	 cmp         r1, #0
  017a0	1a000002	 bne         |$LN6@FindFreeBl|
  017a4	e3a03001	 mov         r3, #1
  017a8	e58d3008	 str         r3, [sp, #8]
  017ac	ea000007	 b           |$LN7@FindFreeBl|
  017b0		 |$LN6@FindFreeBl|
  017b0	e3a03f77	 mov         r3, #0x77, 30
  017b4	e59f2118	 ldr         r2, [pc, #0x118]
  017b8	e59f1110	 ldr         r1, [pc, #0x110]
  017bc	e59f0108	 ldr         r0, [pc, #0x108]
  017c0	eb000000	 bl          NKDbgPrintfW
  017c4	e6000010	 __debugbreak_ce
  017c8	e3a03000	 mov         r3, #0
  017cc	e58d3008	 str         r3, [sp, #8]
  017d0		 |$LN7@FindFreeBl|

; 477  :     //
; 478  :     // The free list is sorted by increasing block sizes, so just find the 
; 479  :     // first block that's at least "dwSize" big.
; 480  :     //
; 481  :     PMEMLIST pNode = FirstNode(FREELIST(fHighPri));

  017d0	e59d302c	 ldr         r3, [sp, #0x2C]
  017d4	e3530000	 cmp         r3, #0
  017d8	0a000004	 beq         |$LN8@FindFreeBl|
  017dc	e59d3024	 ldr         r3, [sp, #0x24]
  017e0	e2833074	 add         r3, r3, #0x74
  017e4	e5933000	 ldr         r3, [r3]
  017e8	e58d300c	 str         r3, [sp, #0xC]
  017ec	ea000003	 b           |$LN9@FindFreeBl|
  017f0		 |$LN8@FindFreeBl|
  017f0	e59d3024	 ldr         r3, [sp, #0x24]
  017f4	e283305c	 add         r3, r3, #0x5C
  017f8	e5933000	 ldr         r3, [r3]
  017fc	e58d300c	 str         r3, [sp, #0xC]
  01800		 |$LN9@FindFreeBl|
  01800	e59d000c	 ldr         r0, [sp, #0xC]
  01804	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  01808	e58d0010	 str         r0, [sp, #0x10]
  0180c	e59d3010	 ldr         r3, [sp, #0x10]
  01810	e58d3000	 str         r3, [sp]
  01814		 |$LN3@FindFreeBl|

; 482  :     
; 483  :     while (!EndOfList(FREELIST(fHighPri), pNode)) {

  01814	e59d302c	 ldr         r3, [sp, #0x2C]
  01818	e3530000	 cmp         r3, #0
  0181c	0a000004	 beq         |$LN10@FindFreeBl|
  01820	e59d3024	 ldr         r3, [sp, #0x24]
  01824	e2833074	 add         r3, r3, #0x74
  01828	e5933000	 ldr         r3, [r3]
  0182c	e58d3014	 str         r3, [sp, #0x14]
  01830	ea000003	 b           |$LN11@FindFreeBl|
  01834		 |$LN10@FindFreeBl|
  01834	e59d3024	 ldr         r3, [sp, #0x24]
  01838	e283305c	 add         r3, r3, #0x5C
  0183c	e5933000	 ldr         r3, [r3]
  01840	e58d3014	 str         r3, [sp, #0x14]
  01844		 |$LN11@FindFreeBl|
  01844	e59d2014	 ldr         r2, [sp, #0x14]
  01848	e59d3000	 ldr         r3, [sp]
  0184c	e1520003	 cmp         r2, r3
  01850	1a000002	 bne         |$LN12@FindFreeBl|
  01854	e3a03001	 mov         r3, #1
  01858	e58d3018	 str         r3, [sp, #0x18]
  0185c	ea000001	 b           |$LN13@FindFreeBl|
  01860		 |$LN12@FindFreeBl|
  01860	e3a03000	 mov         r3, #0
  01864	e58d3018	 str         r3, [sp, #0x18]
  01868		 |$LN13@FindFreeBl|
  01868	e59d3018	 ldr         r3, [sp, #0x18]
  0186c	e3530000	 cmp         r3, #0
  01870	1a00000f	 bne         |$LN2@FindFreeBl|

; 484  :         if (dwSize <= pNode->dwSize) {

  01874	e59d3000	 ldr         r3, [sp]
  01878	e2833008	 add         r3, r3, #8
  0187c	e59d2028	 ldr         r2, [sp, #0x28]
  01880	e5933000	 ldr         r3, [r3]
  01884	e1520003	 cmp         r2, r3
  01888	8a000004	 bhi         |$LN1@FindFreeBl|

; 485  :             RemoveNode(pNode);

  0188c	e59d0000	 ldr         r0, [sp]
  01890	eb000000	 bl          |?RemoveNode@@YAXPAUtMEMLIST@@@Z|

; 486  :             return (pNode);

  01894	e59d3000	 ldr         r3, [sp]
  01898	e58d3004	 str         r3, [sp, #4]
  0189c	ea000006	 b           |$LN4@FindFreeBl|
  018a0		 |$LN1@FindFreeBl|

; 487  :         }
; 488  :         pNode = pNode->next;

  018a0	e59d3000	 ldr         r3, [sp]
  018a4	e283300c	 add         r3, r3, #0xC
  018a8	e5933000	 ldr         r3, [r3]
  018ac	e58d3000	 str         r3, [sp]

; 489  :     }

  018b0	eaffffd7	 b           |$LN3@FindFreeBl|
  018b4		 |$LN2@FindFreeBl|

; 490  :     
; 491  :     return (NULL);

  018b4	e3a03000	 mov         r3, #0
  018b8	e58d3004	 str         r3, [sp, #4]
  018bc		 |$LN4@FindFreeBl|

; 492  : }

  018bc	e59d0004	 ldr         r0, [sp, #4]
  018c0	e28dd01c	 add         sp, sp, #0x1C
  018c4	e89d6000	 ldmia       sp, {sp, lr}
  018c8	e12fff1e	 bx          lr
  018cc		 |$LN17@FindFreeBl|
  018cc		 |$LN18@FindFreeBl|
  018cc	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  018d0		 |$LN19@FindFreeBl|
  018d0	00000000	 DCD         |dpCurSettings|
  018d4		 |$LN20@FindFreeBl|
  018d4	00000000	 DCD         |??_C@_1LM@NABMAHLD@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  018d8		 |$M34438|

			 ENDP  ; |?FindFreeBlock@CPhysMem@@AAAPAUtMEMLIST@@KH@Z|, CPhysMem::FindFreeBlock

	EXPORT	|?AddNodeToFreeList@CPhysMem@@AAAHPAUtMEMLIST@@H@Z| ; CPhysMem::AddNodeToFreeList

  00030			 AREA	 |.pdata|, PDATA
|$T34462| DCD	|$LN30@AddNodeToF|
	DCD	0x4000d204
; Function compile flags: /Odtp

  018d8			 AREA	 |.text|, CODE, ARM

  018d8		 |?AddNodeToFreeList@CPhysMem@@AAAHPAUtMEMLIST@@H@Z| PROC ; CPhysMem::AddNodeToFreeList

; 517  : {

  018d8		 |$LN30@AddNodeToF|
  018d8	e1a0c00d	 mov         r12, sp
  018dc	e92d0007	 stmdb       sp!, {r0 - r2}
  018e0	e92d5000	 stmdb       sp!, {r12, lr}
  018e4	e24dd038	 sub         sp, sp, #0x38
  018e8		 |$M34459|

; 518  :     //
; 519  :     // The free list is sorted by increasing block sizes, not by increasing
; 520  :     // address so we must scan the list for any possible connecting free blocks,
; 521  :     // and then coalesce them into a single free block. There will be at most
; 522  :     // two blocks to find (one on either end) so scan for both of them.
; 523  :     //
; 524  :     PMEMLIST pNodeTraverse = FirstNode(FREELIST(fHighPri));

  018e8	e59d3048	 ldr         r3, [sp, #0x48]
  018ec	e3530000	 cmp         r3, #0
  018f0	0a000004	 beq         |$LN16@AddNodeToF|
  018f4	e59d3040	 ldr         r3, [sp, #0x40]
  018f8	e2833074	 add         r3, r3, #0x74
  018fc	e5933000	 ldr         r3, [r3]
  01900	e58d3018	 str         r3, [sp, #0x18]
  01904	ea000003	 b           |$LN17@AddNodeToF|
  01908		 |$LN16@AddNodeToF|
  01908	e59d3040	 ldr         r3, [sp, #0x40]
  0190c	e283305c	 add         r3, r3, #0x5C
  01910	e5933000	 ldr         r3, [r3]
  01914	e58d3018	 str         r3, [sp, #0x18]
  01918		 |$LN17@AddNodeToF|
  01918	e59d0018	 ldr         r0, [sp, #0x18]
  0191c	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  01920	e58d001c	 str         r0, [sp, #0x1C]
  01924	e59d301c	 ldr         r3, [sp, #0x1C]
  01928	e58d3010	 str         r3, [sp, #0x10]

; 525  :     
; 526  :     PMEMLIST pNodePrevious = NULL; // Points to the previous connecting free block

  0192c	e3a03000	 mov         r3, #0
  01930	e58d300c	 str         r3, [sp, #0xC]

; 527  :     PMEMLIST pNodeNext = NULL;     // Points to the next connecting free block

  01934	e3a03000	 mov         r3, #0
  01938	e58d3008	 str         r3, [sp, #8]

; 528  :     //
; 529  :     // The endpoints that we are trying to match up to.
; 530  :     //
; 531  :     DWORD dwThisPA = pNode->dwPhysAddr;

  0193c	e59d3044	 ldr         r3, [sp, #0x44]
  01940	e2833004	 add         r3, r3, #4
  01944	e5933000	 ldr         r3, [r3]
  01948	e58d3004	 str         r3, [sp, #4]

; 532  :     DWORD dwNextPA = MEMLIST_NEXT_PA(pNode);

  0194c	e59d3044	 ldr         r3, [sp, #0x44]
  01950	e2832004	 add         r2, r3, #4
  01954	e59d3044	 ldr         r3, [sp, #0x44]
  01958	e2833008	 add         r3, r3, #8
  0195c	e5922000	 ldr         r2, [r2]
  01960	e5933000	 ldr         r3, [r3]
  01964	e0823003	 add         r3, r2, r3
  01968	e58d3000	 str         r3, [sp]
  0196c		 |$LN13@AddNodeToF|

; 533  : 
; 534  :     //
; 535  :     // Walk the list looking for blocks that are next to this one.
; 536  :     //
; 537  :     while (!EndOfList(FREELIST(fHighPri), pNodeTraverse)) {

  0196c	e59d3048	 ldr         r3, [sp, #0x48]
  01970	e3530000	 cmp         r3, #0
  01974	0a000004	 beq         |$LN18@AddNodeToF|
  01978	e59d3040	 ldr         r3, [sp, #0x40]
  0197c	e2833074	 add         r3, r3, #0x74
  01980	e5933000	 ldr         r3, [r3]
  01984	e58d3020	 str         r3, [sp, #0x20]
  01988	ea000003	 b           |$LN19@AddNodeToF|
  0198c		 |$LN18@AddNodeToF|
  0198c	e59d3040	 ldr         r3, [sp, #0x40]
  01990	e283305c	 add         r3, r3, #0x5C
  01994	e5933000	 ldr         r3, [r3]
  01998	e58d3020	 str         r3, [sp, #0x20]
  0199c		 |$LN19@AddNodeToF|
  0199c	e59d2020	 ldr         r2, [sp, #0x20]
  019a0	e59d3010	 ldr         r3, [sp, #0x10]
  019a4	e1520003	 cmp         r2, r3
  019a8	1a000002	 bne         |$LN20@AddNodeToF|
  019ac	e3a03001	 mov         r3, #1
  019b0	e58d3024	 str         r3, [sp, #0x24]
  019b4	ea000001	 b           |$LN21@AddNodeToF|
  019b8		 |$LN20@AddNodeToF|
  019b8	e3a03000	 mov         r3, #0
  019bc	e58d3024	 str         r3, [sp, #0x24]
  019c0		 |$LN21@AddNodeToF|
  019c0	e59d3024	 ldr         r3, [sp, #0x24]
  019c4	e3530000	 cmp         r3, #0
  019c8	1a000021	 bne         |$LN12@AddNodeToF|

; 538  : 
; 539  :         if (dwThisPA == MEMLIST_NEXT_PA(pNodeTraverse)) {

  019cc	e59d3010	 ldr         r3, [sp, #0x10]
  019d0	e2832004	 add         r2, r3, #4
  019d4	e59d3010	 ldr         r3, [sp, #0x10]
  019d8	e2833008	 add         r3, r3, #8
  019dc	e5922000	 ldr         r2, [r2]
  019e0	e5933000	 ldr         r3, [r3]
  019e4	e0822003	 add         r2, r2, r3
  019e8	e59d3004	 ldr         r3, [sp, #4]
  019ec	e1530002	 cmp         r3, r2
  019f0	1a000002	 bne         |$LN11@AddNodeToF|

; 540  :             //
; 541  :             // We've found the block just ahead of this one. Remember it.
; 542  :             //
; 543  :             pNodePrevious = pNodeTraverse;

  019f4	e59d3010	 ldr         r3, [sp, #0x10]
  019f8	e58d300c	 str         r3, [sp, #0xC]
  019fc	ea000007	 b           |$LN10@AddNodeToF|
  01a00		 |$LN11@AddNodeToF|

; 544  : 
; 545  :         } else if (dwNextPA == pNodeTraverse->dwPhysAddr) {

  01a00	e59d3010	 ldr         r3, [sp, #0x10]
  01a04	e2833004	 add         r3, r3, #4
  01a08	e59d2000	 ldr         r2, [sp]
  01a0c	e5933000	 ldr         r3, [r3]
  01a10	e1520003	 cmp         r2, r3
  01a14	1a000001	 bne         |$LN9@AddNodeToF|

; 546  :             //
; 547  :             // We've found the block just after of this one.
; 548  :             //
; 549  :             pNodeNext = pNodeTraverse;

  01a18	e59d3010	 ldr         r3, [sp, #0x10]
  01a1c	e58d3008	 str         r3, [sp, #8]
  01a20		 |$LN9@AddNodeToF|
  01a20		 |$LN10@AddNodeToF|

; 550  :         }
; 551  : 
; 552  :         if ((pNodePrevious == NULL) || (pNodeNext == NULL)) {

  01a20	e59d300c	 ldr         r3, [sp, #0xC]
  01a24	e3530000	 cmp         r3, #0
  01a28	0a000002	 beq         |$LN7@AddNodeToF|
  01a2c	e59d3008	 ldr         r3, [sp, #8]
  01a30	e3530000	 cmp         r3, #0
  01a34	1a000004	 bne         |$LN8@AddNodeToF|
  01a38		 |$LN7@AddNodeToF|

; 553  :             //
; 554  :             // We haven't connected both ends, so keep on looking...
; 555  :             //
; 556  :             pNodeTraverse = pNodeTraverse->next;

  01a38	e59d3010	 ldr         r3, [sp, #0x10]
  01a3c	e283300c	 add         r3, r3, #0xC
  01a40	e5933000	 ldr         r3, [r3]
  01a44	e58d3010	 str         r3, [sp, #0x10]

; 557  :         } else {

  01a48	ea000000	 b           |$LN6@AddNodeToF|
  01a4c		 |$LN8@AddNodeToF|

; 558  :             //
; 559  :             // We've found blocks to connect on both ends, let's get on with it.
; 560  :             //
; 561  :             break;

  01a4c	ea000000	 b           |$LN12@AddNodeToF|
  01a50		 |$LN6@AddNodeToF|

; 562  :         }
; 563  :     }

  01a50	eaffffc5	 b           |$LN13@AddNodeToF|
  01a54		 |$LN12@AddNodeToF|

; 564  :     
; 565  : 
; 566  :     if (pNodePrevious != NULL) {

  01a54	e59d300c	 ldr         r3, [sp, #0xC]
  01a58	e3530000	 cmp         r3, #0
  01a5c	0a000018	 beq         |$LN5@AddNodeToF|

; 567  :         //
; 568  :         // Combine with the previous block.
; 569  :         //
; 570  :         RemoveNode(pNodePrevious);

  01a60	e59d000c	 ldr         r0, [sp, #0xC]
  01a64	eb000000	 bl          |?RemoveNode@@YAXPAUtMEMLIST@@@Z|

; 571  :         //
; 572  :         // Grow pNode to hold both.
; 573  :         //
; 574  :         pNode->dwSize = pNode->dwSize + pNodePrevious->dwSize;

  01a68	e59d3044	 ldr         r3, [sp, #0x44]
  01a6c	e2832008	 add         r2, r3, #8
  01a70	e59d300c	 ldr         r3, [sp, #0xC]
  01a74	e2833008	 add         r3, r3, #8
  01a78	e5922000	 ldr         r2, [r2]
  01a7c	e5933000	 ldr         r3, [r3]
  01a80	e0822003	 add         r2, r2, r3
  01a84	e59d3044	 ldr         r3, [sp, #0x44]
  01a88	e2833008	 add         r3, r3, #8
  01a8c	e5832000	 str         r2, [r3]

; 575  :         pNode->dwVirtAddr = pNodePrevious->dwVirtAddr;

  01a90	e59d300c	 ldr         r3, [sp, #0xC]
  01a94	e5932000	 ldr         r2, [r3]
  01a98	e59d3044	 ldr         r3, [sp, #0x44]
  01a9c	e5832000	 str         r2, [r3]

; 576  :         pNode->dwPhysAddr = pNodePrevious->dwPhysAddr;

  01aa0	e59d300c	 ldr         r3, [sp, #0xC]
  01aa4	e2831004	 add         r1, r3, #4
  01aa8	e59d3044	 ldr         r3, [sp, #0x44]
  01aac	e2832004	 add         r2, r3, #4
  01ab0	e5913000	 ldr         r3, [r1]
  01ab4	e5823000	 str         r3, [r2]

; 577  :         DeleteNode(pNodePrevious);

  01ab8	e59d100c	 ldr         r1, [sp, #0xC]
  01abc	e59d0040	 ldr         r0, [sp, #0x40]
  01ac0	eb000000	 bl          |?DeleteNode@CPhysMem@@AAAHPAUtMEMLIST@@@Z|
  01ac4		 |$LN5@AddNodeToF|

; 578  :     }
; 579  : 
; 580  :     if (pNodeNext != NULL) {

  01ac4	e59d3008	 ldr         r3, [sp, #8]
  01ac8	e3530000	 cmp         r3, #0
  01acc	0a000013	 beq         |$LN4@AddNodeToF|

; 581  :         //
; 582  :         // Combine with the next block.
; 583  :         //
; 584  :         RemoveNode(pNodeNext);

  01ad0	e59d0008	 ldr         r0, [sp, #8]
  01ad4	eb000000	 bl          |?RemoveNode@@YAXPAUtMEMLIST@@@Z|

; 585  :         //
; 586  :         // Grow pNode to hold both.
; 587  :         //
; 588  :         pNode->dwSize = pNode->dwSize + pNodeNext->dwSize;

  01ad8	e59d3044	 ldr         r3, [sp, #0x44]
  01adc	e2832008	 add         r2, r3, #8
  01ae0	e59d3008	 ldr         r3, [sp, #8]
  01ae4	e2833008	 add         r3, r3, #8
  01ae8	e5922000	 ldr         r2, [r2]
  01aec	e5933000	 ldr         r3, [r3]
  01af0	e0822003	 add         r2, r2, r3
  01af4	e59d3044	 ldr         r3, [sp, #0x44]
  01af8	e2833008	 add         r3, r3, #8
  01afc	e5832000	 str         r2, [r3]

; 589  :     #ifdef DEBUG
; 590  :         // take description of the largest block
; 591  :         _tcscpy( pNode->szDescription, pNodeNext->szDescription );

  01b00	e59d3008	 ldr         r3, [sp, #8]
  01b04	e2831014	 add         r1, r3, #0x14
  01b08	e59d3044	 ldr         r3, [sp, #0x44]
  01b0c	e2830014	 add         r0, r3, #0x14
  01b10	eb000000	 bl          wcscpy

; 592  :     #endif // DEBUG
; 593  :         DeleteNode(pNodeNext);

  01b14	e59d1008	 ldr         r1, [sp, #8]
  01b18	e59d0040	 ldr         r0, [sp, #0x40]
  01b1c	eb000000	 bl          |?DeleteNode@CPhysMem@@AAAHPAUtMEMLIST@@@Z|
  01b20		 |$LN4@AddNodeToF|

; 594  :     }
; 595  : 
; 596  :     //
; 597  :     // Add pNode to the free list in sorted size order.
; 598  :     //
; 599  :     pNodeTraverse = FirstNode(FREELIST(fHighPri));

  01b20	e59d3048	 ldr         r3, [sp, #0x48]
  01b24	e3530000	 cmp         r3, #0
  01b28	0a000004	 beq         |$LN22@AddNodeToF|
  01b2c	e59d3040	 ldr         r3, [sp, #0x40]
  01b30	e2833074	 add         r3, r3, #0x74
  01b34	e5933000	 ldr         r3, [r3]
  01b38	e58d3028	 str         r3, [sp, #0x28]
  01b3c	ea000003	 b           |$LN23@AddNodeToF|
  01b40		 |$LN22@AddNodeToF|
  01b40	e59d3040	 ldr         r3, [sp, #0x40]
  01b44	e283305c	 add         r3, r3, #0x5C
  01b48	e5933000	 ldr         r3, [r3]
  01b4c	e58d3028	 str         r3, [sp, #0x28]
  01b50		 |$LN23@AddNodeToF|
  01b50	e59d0028	 ldr         r0, [sp, #0x28]
  01b54	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  01b58	e58d002c	 str         r0, [sp, #0x2C]
  01b5c	e59d302c	 ldr         r3, [sp, #0x2C]
  01b60	e58d3010	 str         r3, [sp, #0x10]
  01b64		 |$LN3@AddNodeToF|

; 600  :     
; 601  :     while (!EndOfList(FREELIST(fHighPri), pNodeTraverse)) {

  01b64	e59d3048	 ldr         r3, [sp, #0x48]
  01b68	e3530000	 cmp         r3, #0
  01b6c	0a000004	 beq         |$LN24@AddNodeToF|
  01b70	e59d3040	 ldr         r3, [sp, #0x40]
  01b74	e2833074	 add         r3, r3, #0x74
  01b78	e5933000	 ldr         r3, [r3]
  01b7c	e58d3030	 str         r3, [sp, #0x30]
  01b80	ea000003	 b           |$LN25@AddNodeToF|
  01b84		 |$LN24@AddNodeToF|
  01b84	e59d3040	 ldr         r3, [sp, #0x40]
  01b88	e283305c	 add         r3, r3, #0x5C
  01b8c	e5933000	 ldr         r3, [r3]
  01b90	e58d3030	 str         r3, [sp, #0x30]
  01b94		 |$LN25@AddNodeToF|
  01b94	e59d2030	 ldr         r2, [sp, #0x30]
  01b98	e59d3010	 ldr         r3, [sp, #0x10]
  01b9c	e1520003	 cmp         r2, r3
  01ba0	1a000002	 bne         |$LN26@AddNodeToF|
  01ba4	e3a03001	 mov         r3, #1
  01ba8	e58d3034	 str         r3, [sp, #0x34]
  01bac	ea000001	 b           |$LN27@AddNodeToF|
  01bb0		 |$LN26@AddNodeToF|
  01bb0	e3a03000	 mov         r3, #0
  01bb4	e58d3034	 str         r3, [sp, #0x34]
  01bb8		 |$LN27@AddNodeToF|
  01bb8	e59d3034	 ldr         r3, [sp, #0x34]
  01bbc	e3530000	 cmp         r3, #0
  01bc0	1a00000d	 bne         |$LN2@AddNodeToF|

; 602  : 
; 603  :         if (pNode->dwSize <= pNodeTraverse->dwSize) {

  01bc4	e59d3044	 ldr         r3, [sp, #0x44]
  01bc8	e2832008	 add         r2, r3, #8
  01bcc	e59d3010	 ldr         r3, [sp, #0x10]
  01bd0	e2833008	 add         r3, r3, #8
  01bd4	e5922000	 ldr         r2, [r2]
  01bd8	e5933000	 ldr         r3, [r3]
  01bdc	e1520003	 cmp         r2, r3
  01be0	8a000000	 bhi         |$LN1@AddNodeToF|

; 604  :             break;

  01be4	ea000004	 b           |$LN2@AddNodeToF|
  01be8		 |$LN1@AddNodeToF|

; 605  :         }
; 606  :         pNodeTraverse = pNodeTraverse->next;

  01be8	e59d3010	 ldr         r3, [sp, #0x10]
  01bec	e283300c	 add         r3, r3, #0xC
  01bf0	e5933000	 ldr         r3, [r3]
  01bf4	e58d3010	 str         r3, [sp, #0x10]

; 607  :     }

  01bf8	eaffffd9	 b           |$LN3@AddNodeToF|
  01bfc		 |$LN2@AddNodeToF|

; 608  : 
; 609  :     //
; 610  :     // Insert this node before the traverse node.
; 611  :     //
; 612  :     InsertNodeBefore(pNode, pNodeTraverse);

  01bfc	e59d1010	 ldr         r1, [sp, #0x10]
  01c00	e59d0044	 ldr         r0, [sp, #0x44]
  01c04	eb000000	 bl          |?InsertNodeBefore@@YAXPAUtMEMLIST@@0@Z|

; 613  : 
; 614  :     return TRUE;

  01c08	e3a03001	 mov         r3, #1
  01c0c	e58d3014	 str         r3, [sp, #0x14]

; 615  : }

  01c10	e59d0014	 ldr         r0, [sp, #0x14]
  01c14	e28dd038	 add         sp, sp, #0x38
  01c18	e89d6000	 ldmia       sp, {sp, lr}
  01c1c	e12fff1e	 bx          lr
  01c20		 |$M34460|

			 ENDP  ; |?AddNodeToFreeList@CPhysMem@@AAAHPAUtMEMLIST@@H@Z|, CPhysMem::AddNodeToFreeList

	EXPORT	|?FreeList@CPhysMem@@AAAHPAPAUtMEMLIST@@@Z| ; CPhysMem::FreeList
	EXPORT	|??1CPhysMem@@QAA@XZ|			; CPhysMem::~CPhysMem
	IMPORT	|FreePhysMem|
	IMPORT	|CloseHandle|
	IMPORT	|DeleteCriticalSection|

  00038			 AREA	 |.pdata|, PDATA
|$T34467| DCD	|$LN6@CPhysMem@2|
	DCD	0x40002903
; Function compile flags: /Odtp

  01c20			 AREA	 |.text|, CODE, ARM

  01c20		 |??1CPhysMem@@QAA@XZ| PROC		; CPhysMem::~CPhysMem

; 631  : {

  01c20		 |$LN6@CPhysMem@2|
  01c20	e1a0c00d	 mov         r12, sp
  01c24	e92d0001	 stmdb       sp!, {r0}
  01c28	e92d5000	 stmdb       sp!, {r12, lr}
  01c2c		 |$M34464|

; 632  :     DeleteCriticalSection(&m_csLock);

  01c2c	e59d3008	 ldr         r3, [sp, #8]
  01c30	e2830010	 add         r0, r3, #0x10
  01c34	eb000000	 bl          DeleteCriticalSection

; 633  :     CloseHandle(m_hFreeMemEvent);

  01c38	e59d3008	 ldr         r3, [sp, #8]
  01c3c	e283302c	 add         r3, r3, #0x2C
  01c40	e5930000	 ldr         r0, [r3]
  01c44	eb000000	 bl          CloseHandle

; 634  : 
; 635  :     FreeList(&m_pInUseListHead);

  01c48	e59d3008	 ldr         r3, [sp, #8]
  01c4c	e2831060	 add         r1, r3, #0x60
  01c50	e59d0008	 ldr         r0, [sp, #8]
  01c54	eb000000	 bl          |?FreeList@CPhysMem@@AAAHPAPAUtMEMLIST@@@Z|

; 636  :     FreeList(&m_pFreeListHead);

  01c58	e59d3008	 ldr         r3, [sp, #8]
  01c5c	e283105c	 add         r1, r3, #0x5C
  01c60	e59d0008	 ldr         r0, [sp, #8]
  01c64	eb000000	 bl          |?FreeList@CPhysMem@@AAAHPAPAUtMEMLIST@@@Z|

; 637  :     FreeList(&m_pHighPriorityInUseListHead);

  01c68	e59d3008	 ldr         r3, [sp, #8]
  01c6c	e2831070	 add         r1, r3, #0x70
  01c70	e59d0008	 ldr         r0, [sp, #8]
  01c74	eb000000	 bl          |?FreeList@CPhysMem@@AAAHPAPAUtMEMLIST@@@Z|

; 638  :     FreeList(&m_pHighPriorityFreeListHead);

  01c78	e59d3008	 ldr         r3, [sp, #8]
  01c7c	e2831074	 add         r1, r3, #0x74
  01c80	e59d0008	 ldr         r0, [sp, #8]
  01c84	eb000000	 bl          |?FreeList@CPhysMem@@AAAHPAPAUtMEMLIST@@@Z|

; 639  : 
; 640  :     FreeList(&m_pNodeFreeListHead);

  01c88	e59d3008	 ldr         r3, [sp, #8]
  01c8c	e2831040	 add         r1, r3, #0x40
  01c90	e59d0008	 ldr         r0, [sp, #8]
  01c94	eb000000	 bl          |?FreeList@CPhysMem@@AAAHPAPAUtMEMLIST@@@Z|

; 641  : 
; 642  :     if (!m_fPhysFromPlat)

  01c98	e59d3008	 ldr         r3, [sp, #8]
  01c9c	e2833028	 add         r3, r3, #0x28
  01ca0	e5933000	 ldr         r3, [r3]
  01ca4	e3530000	 cmp         r3, #0
  01ca8	1a000003	 bne         |$LN1@CPhysMem@2|

; 643  :         FreePhysMem(m_pPhysicalBufferAddr);

  01cac	e59d3008	 ldr         r3, [sp, #8]
  01cb0	e283303c	 add         r3, r3, #0x3C
  01cb4	e5930000	 ldr         r0, [r3]
  01cb8	eb000000	 bl          FreePhysMem
  01cbc		 |$LN1@CPhysMem@2|

; 644  : }

  01cbc	e89d6000	 ldmia       sp, {sp, lr}
  01cc0	e12fff1e	 bx          lr
  01cc4		 |$M34465|

			 ENDP  ; |??1CPhysMem@@QAA@XZ|, CPhysMem::~CPhysMem

	IMPORT	|LocalFree|

  00040			 AREA	 |.pdata|, PDATA
|$T34475| DCD	|$LN10@FreeList|
	DCD	0x40003904
; Function compile flags: /Odtp

  01cc4			 AREA	 |.text|, CODE, ARM

  01cc4		 |?FreeList@CPhysMem@@AAAHPAPAUtMEMLIST@@@Z| PROC ; CPhysMem::FreeList

; 660  : {

  01cc4		 |$LN10@FreeList|
  01cc4	e1a0c00d	 mov         r12, sp
  01cc8	e92d0003	 stmdb       sp!, {r0, r1}
  01ccc	e92d5000	 stmdb       sp!, {r12, lr}
  01cd0	e24dd010	 sub         sp, sp, #0x10
  01cd4		 |$M34472|

; 661  :     PMEMLIST pCurrent;
; 662  :     PMEMLIST pNext;
; 663  : 
; 664  :     if ( *ppHead != NULL ) {

  01cd4	e59d301c	 ldr         r3, [sp, #0x1C]
  01cd8	e5933000	 ldr         r3, [r3]
  01cdc	e3530000	 cmp         r3, #0
  01ce0	0a000027	 beq         |$LN3@FreeList|

; 665  :         pCurrent = (*ppHead)->next;

  01ce4	e59d301c	 ldr         r3, [sp, #0x1C]
  01ce8	e5933000	 ldr         r3, [r3]
  01cec	e283300c	 add         r3, r3, #0xC
  01cf0	e5933000	 ldr         r3, [r3]
  01cf4	e58d3004	 str         r3, [sp, #4]
  01cf8		 |$LN2@FreeList|

; 666  :         while ( pCurrent != *ppHead ) {

  01cf8	e59d2004	 ldr         r2, [sp, #4]
  01cfc	e59d301c	 ldr         r3, [sp, #0x1C]
  01d00	e5933000	 ldr         r3, [r3]
  01d04	e1520003	 cmp         r2, r3
  01d08	0a000017	 beq         |$LN1@FreeList|

; 667  :             DEBUGCHK( pCurrent != NULL );

  01d0c	e59d3004	 ldr         r3, [sp, #4]
  01d10	e3530000	 cmp         r3, #0
  01d14	0a000002	 beq         |$LN6@FreeList|
  01d18	e3a03001	 mov         r3, #1
  01d1c	e58d300c	 str         r3, [sp, #0xC]
  01d20	ea000008	 b           |$LN7@FreeList|
  01d24		 |$LN6@FreeList|
  01d24	e3a03c02	 mov         r3, #2, 24
  01d28	e383309b	 orr         r3, r3, #0x9B
  01d2c	e59f2070	 ldr         r2, [pc, #0x70]
  01d30	e59f1068	 ldr         r1, [pc, #0x68]
  01d34	e59f0060	 ldr         r0, [pc, #0x60]
  01d38	eb000000	 bl          NKDbgPrintfW
  01d3c	e6000010	 __debugbreak_ce
  01d40	e3a03000	 mov         r3, #0
  01d44	e58d300c	 str         r3, [sp, #0xC]
  01d48		 |$LN7@FreeList|

; 668  :             pNext = pCurrent->next;

  01d48	e59d3004	 ldr         r3, [sp, #4]
  01d4c	e283300c	 add         r3, r3, #0xC
  01d50	e5933000	 ldr         r3, [r3]
  01d54	e58d3000	 str         r3, [sp]

; 669  :             CPhysMem_Free( pCurrent );

  01d58	e59d0004	 ldr         r0, [sp, #4]
  01d5c	eb000000	 bl          LocalFree

; 670  :             pCurrent = pNext;

  01d60	e59d3000	 ldr         r3, [sp]
  01d64	e58d3004	 str         r3, [sp, #4]

; 671  :         }

  01d68	eaffffe2	 b           |$LN2@FreeList|
  01d6c		 |$LN1@FreeList|

; 672  :         CPhysMem_Free( *ppHead );

  01d6c	e59d301c	 ldr         r3, [sp, #0x1C]
  01d70	e5930000	 ldr         r0, [r3]
  01d74	eb000000	 bl          LocalFree

; 673  :         *ppHead = NULL;

  01d78	e59d201c	 ldr         r2, [sp, #0x1C]
  01d7c	e3a03000	 mov         r3, #0
  01d80	e5823000	 str         r3, [r2]
  01d84		 |$LN3@FreeList|

; 674  :     }
; 675  : 
; 676  :     return(TRUE);

  01d84	e3a03001	 mov         r3, #1
  01d88	e58d3008	 str         r3, [sp, #8]

; 677  : }

  01d8c	e59d0008	 ldr         r0, [sp, #8]
  01d90	e28dd010	 add         sp, sp, #0x10
  01d94	e89d6000	 ldmia       sp, {sp, lr}
  01d98	e12fff1e	 bx          lr
  01d9c		 |$LN11@FreeList|
  01d9c		 |$LN12@FreeList|
  01d9c	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  01da0		 |$LN13@FreeList|
  01da0	00000000	 DCD         |dpCurSettings|
  01da4		 |$LN14@FreeList|
  01da4	00000000	 DCD         |??_C@_1LM@NABMAHLD@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  01da8		 |$M34473|

			 ENDP  ; |?FreeList@CPhysMem@@AAAHPAPAUtMEMLIST@@@Z|, CPhysMem::FreeList

	EXPORT	|??_C@_1FO@DKILOPHK@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAb?$AAS?$AAp?$AAe?$AAc?$AAi@| [ DATA ] ; `string'
	EXPORT	|?VaToPa@CPhysMem@@QAAKPAE@Z|		; CPhysMem::VaToPa
	EXPORT	|?AllocateSpecialMemory@CPhysMem@@QAAHKQAPAE@Z| ; CPhysMem::AllocateSpecialMemory

  00048			 AREA	 |.pdata|, PDATA
|$T34495| DCD	|$LN16@AllocateSp|
	DCD	0x40007404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@DKILOPHK@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAb?$AAS?$AAp?$AAe?$AAc?$AAi@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "A", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, ":"
	DCB	0x0, " ", 0x0, "b", 0x0, "S", 0x0, "p", 0x0, "e", 0x0, "c"
	DCB	0x0, "i", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "a", 0x0, "l"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  01da8			 AREA	 |.text|, CODE, ARM

  01da8		 |?AllocateSpecialMemory@CPhysMem@@QAAHKQAPAE@Z| PROC ; CPhysMem::AllocateSpecialMemory

; 697  : {

  01da8		 |$LN16@AllocateSp|
  01da8	e1a0c00d	 mov         r12, sp
  01dac	e92d0007	 stmdb       sp!, {r0 - r2}
  01db0	e92d5000	 stmdb       sp!, {r12, lr}
  01db4	e24dd01c	 sub         sp, sp, #0x1C
  01db8		 |$M34492|

; 698  :     DEBUGCHK( dwSize <= USBPAGESIZE );

  01db8	e59d3028	 ldr         r3, [sp, #0x28]
  01dbc	e3530a01	 cmp         r3, #1, 20
  01dc0	8a000002	 bhi         |$LN4@AllocateSp|
  01dc4	e3a03001	 mov         r3, #1
  01dc8	e58d3004	 str         r3, [sp, #4]
  01dcc	ea000008	 b           |$LN5@AllocateSp|
  01dd0		 |$LN4@AllocateSp|
  01dd0	e3a03c02	 mov         r3, #2, 24
  01dd4	e38330ba	 orr         r3, r3, #0xBA
  01dd8	e59f2194	 ldr         r2, [pc, #0x194]
  01ddc	e59f1188	 ldr         r1, [pc, #0x188]
  01de0	e59f0188	 ldr         r0, [pc, #0x188]
  01de4	eb000000	 bl          NKDbgPrintfW
  01de8	e6000010	 __debugbreak_ce
  01dec	e3a03000	 mov         r3, #0
  01df0	e58d3004	 str         r3, [sp, #4]
  01df4		 |$LN5@AllocateSp|

; 699  :     PREFAST_DEBUGCHK( pVirtAddr != NULL );

  01df4	e59d302c	 ldr         r3, [sp, #0x2C]
  01df8	e3530000	 cmp         r3, #0
  01dfc	0a000002	 beq         |$LN6@AllocateSp|
  01e00	e3a03001	 mov         r3, #1
  01e04	e58d3008	 str         r3, [sp, #8]
  01e08	ea000008	 b           |$LN7@AllocateSp|
  01e0c		 |$LN6@AllocateSp|
  01e0c	e3a03c02	 mov         r3, #2, 24
  01e10	e38330bb	 orr         r3, r3, #0xBB
  01e14	e59f2158	 ldr         r2, [pc, #0x158]
  01e18	e59f114c	 ldr         r1, [pc, #0x14C]
  01e1c	e59f014c	 ldr         r0, [pc, #0x14C]
  01e20	eb000000	 bl          NKDbgPrintfW
  01e24	e6000010	 __debugbreak_ce
  01e28	e3a03000	 mov         r3, #0
  01e2c	e58d3008	 str         r3, [sp, #8]
  01e30		 |$LN7@AllocateSp|

; 700  : 
; 701  :     // during suspend/resume this routine will be called again; we can safely
; 702  :     // leave the special memory set aside since we will always need the same amount.
; 703  :     if(!m_bSpecialTaken) {

  01e30	e59d3024	 ldr         r3, [sp, #0x24]
  01e34	e283304c	 add         r3, r3, #0x4C
  01e38	e5933000	 ldr         r3, [r3]
  01e3c	e3530000	 cmp         r3, #0
  01e40	1a00002e	 bne         |$LN1@AllocateSp|

; 704  :         m_bSpecialTaken = TRUE;

  01e44	e59d3024	 ldr         r3, [sp, #0x24]
  01e48	e283204c	 add         r2, r3, #0x4C
  01e4c	e3a03001	 mov         r3, #1
  01e50	e5823000	 str         r3, [r2]

; 705  :         DEBUGCHK( m_dwSpecialPA == VaToPa( PUCHAR(m_dwSpecialVA) ) );

  01e54	e59d3024	 ldr         r3, [sp, #0x24]
  01e58	e2833048	 add         r3, r3, #0x48
  01e5c	e5931000	 ldr         r1, [r3]
  01e60	e59d0024	 ldr         r0, [sp, #0x24]
  01e64	eb000000	 bl          |?VaToPa@CPhysMem@@QAAKPAE@Z|
  01e68	e58d000c	 str         r0, [sp, #0xC]
  01e6c	e59d3024	 ldr         r3, [sp, #0x24]
  01e70	e2833044	 add         r3, r3, #0x44
  01e74	e5932000	 ldr         r2, [r3]
  01e78	e59d300c	 ldr         r3, [sp, #0xC]
  01e7c	e1520003	 cmp         r2, r3
  01e80	1a000002	 bne         |$LN8@AllocateSp|
  01e84	e3a03001	 mov         r3, #1
  01e88	e58d3010	 str         r3, [sp, #0x10]
  01e8c	ea000008	 b           |$LN9@AllocateSp|
  01e90		 |$LN8@AllocateSp|
  01e90	e3a03c02	 mov         r3, #2, 24
  01e94	e38330c1	 orr         r3, r3, #0xC1
  01e98	e59f20d4	 ldr         r2, [pc, #0xD4]
  01e9c	e59f10c8	 ldr         r1, [pc, #0xC8]
  01ea0	e59f00c8	 ldr         r0, [pc, #0xC8]
  01ea4	eb000000	 bl          NKDbgPrintfW
  01ea8	e6000010	 __debugbreak_ce
  01eac	e3a03000	 mov         r3, #0
  01eb0	e58d3010	 str         r3, [sp, #0x10]
  01eb4		 |$LN9@AllocateSp|

; 706  :         DEBUGCHK( m_dwSpecialPA % CPHYSMEM_MEMORY_ALIGNMENT == 0 );

  01eb4	e59d3024	 ldr         r3, [sp, #0x24]
  01eb8	e2833044	 add         r3, r3, #0x44
  01ebc	e5931000	 ldr         r1, [r3]
  01ec0	e3a00020	 mov         r0, #0x20
  01ec4	eb000000	 bl          __rt_udiv
  01ec8	e3510000	 cmp         r1, #0
  01ecc	1a000002	 bne         |$LN10@AllocateSp|
  01ed0	e3a03001	 mov         r3, #1
  01ed4	e58d3014	 str         r3, [sp, #0x14]
  01ed8	ea000008	 b           |$LN11@AllocateSp|
  01edc		 |$LN10@AllocateSp|
  01edc	e3a03c02	 mov         r3, #2, 24
  01ee0	e38330c2	 orr         r3, r3, #0xC2
  01ee4	e59f2088	 ldr         r2, [pc, #0x88]
  01ee8	e59f107c	 ldr         r1, [pc, #0x7C]
  01eec	e59f007c	 ldr         r0, [pc, #0x7C]
  01ef0	eb000000	 bl          NKDbgPrintfW
  01ef4	e6000010	 __debugbreak_ce
  01ef8	e3a03000	 mov         r3, #0
  01efc	e58d3014	 str         r3, [sp, #0x14]
  01f00		 |$LN11@AllocateSp|
  01f00		 |$LN1@AllocateSp|

; 707  :     }
; 708  : 
; 709  :     *pVirtAddr = (PUCHAR) m_dwSpecialVA;

  01f00	e59d3024	 ldr         r3, [sp, #0x24]
  01f04	e2833048	 add         r3, r3, #0x48
  01f08	e5932000	 ldr         r2, [r3]
  01f0c	e59d302c	 ldr         r3, [sp, #0x2C]
  01f10	e5832000	 str         r2, [r3]

; 710  : 
; 711  :     DEBUGMSG(ZONE_CPHYSMEM && ZONE_VERBOSE,(TEXT("CPhysMem AllocateMemory : bSpecial allocated\r\n")));

  01f14	e59f3050	 ldr         r3, [pc, #0x50]
  01f18	e5933440	 ldr         r3, [r3, #0x440]
  01f1c	e3130b02	 tst         r3, #2, 22
  01f20	0a000008	 beq         |$LN12@AllocateSp|
  01f24	e59f3040	 ldr         r3, [pc, #0x40]
  01f28	e5933440	 ldr         r3, [r3, #0x440]
  01f2c	e3130a01	 tst         r3, #1, 20
  01f30	0a000004	 beq         |$LN12@AllocateSp|
  01f34	e59f002c	 ldr         r0, [pc, #0x2C]
  01f38	eb000000	 bl          NKDbgPrintfW
  01f3c	e3a03001	 mov         r3, #1
  01f40	e58d3018	 str         r3, [sp, #0x18]
  01f44	ea000001	 b           |$LN13@AllocateSp|
  01f48		 |$LN12@AllocateSp|
  01f48	e3a03000	 mov         r3, #0
  01f4c	e58d3018	 str         r3, [sp, #0x18]
  01f50		 |$LN13@AllocateSp|

; 712  :     return(TRUE);

  01f50	e3a03001	 mov         r3, #1
  01f54	e58d3000	 str         r3, [sp]

; 713  : }

  01f58	e59d0000	 ldr         r0, [sp]
  01f5c	e28dd01c	 add         sp, sp, #0x1C
  01f60	e89d6000	 ldmia       sp, {sp, lr}
  01f64	e12fff1e	 bx          lr
  01f68		 |$LN17@AllocateSp|
  01f68		 |$LN18@AllocateSp|
  01f68	00000000	 DCD         |??_C@_1FO@DKILOPHK@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAb?$AAS?$AAp?$AAe?$AAc?$AAi@|
  01f6c		 |$LN19@AllocateSp|
  01f6c	00000000	 DCD         |dpCurSettings|
  01f70		 |$LN20@AllocateSp|
  01f70	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  01f74		 |$LN21@AllocateSp|
  01f74	00000000	 DCD         |??_C@_1LM@NABMAHLD@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  01f78		 |$M34493|

			 ENDP  ; |?AllocateSpecialMemory@CPhysMem@@QAAHKQAPAE@Z|, CPhysMem::AllocateSpecialMemory

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\usb2com\cphysmem.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T34510| DCD	|$LN9@VaToPa|
	DCD	0x40003a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?VaToPa@CPhysMem@@QAAKPAE@Z| PROC	; CPhysMem::VaToPa

; 192  : {

  00000		 |$LN9@VaToPa|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M34507|

; 193  :     DEBUGCHK( virtAddr != NULL );

  00010	e59d3018	 ldr         r3, [sp, #0x18]
  00014	e3530000	 cmp         r3, #0
  00018	0a000002	 beq         |$LN3@VaToPa|
  0001c	e3a03001	 mov         r3, #1
  00020	e58d3004	 str         r3, [sp, #4]
  00024	ea000007	 b           |$LN4@VaToPa|
  00028		 |$LN3@VaToPa|
  00028	e3a030c1	 mov         r3, #0xC1
  0002c	e59f20ac	 ldr         r2, [pc, #0xAC]
  00030	e59f10ac	 ldr         r1, [pc, #0xAC]
  00034	e59f009c	 ldr         r0, [pc, #0x9C]
  00038	eb000000	 bl          NKDbgPrintfW
  0003c	e6000010	 __debugbreak_ce
  00040	e3a03000	 mov         r3, #0
  00044	e58d3004	 str         r3, [sp, #4]
  00048		 |$LN4@VaToPa|

; 194  :     ASSERT((DWORD)m_pPhysicalBufferAddr <=(DWORD)virtAddr && (DWORD)virtAddr <(DWORD) m_pPhysicalBufferAddr + m_cbTotal);

  00048	e59d3014	 ldr         r3, [sp, #0x14]
  0004c	e283303c	 add         r3, r3, #0x3C
  00050	e5932000	 ldr         r2, [r3]
  00054	e59d3018	 ldr         r3, [sp, #0x18]
  00058	e1520003	 cmp         r2, r3
  0005c	8a00000b	 bhi         |$LN5@VaToPa|
  00060	e59d3014	 ldr         r3, [sp, #0x14]
  00064	e283303c	 add         r3, r3, #0x3C
  00068	e5932000	 ldr         r2, [r3]
  0006c	e59d3014	 ldr         r3, [sp, #0x14]
  00070	e5933000	 ldr         r3, [r3]
  00074	e0822003	 add         r2, r2, r3
  00078	e59d3018	 ldr         r3, [sp, #0x18]
  0007c	e1530002	 cmp         r3, r2
  00080	2a000002	 bcs         |$LN5@VaToPa|
  00084	e3a03001	 mov         r3, #1
  00088	e58d3008	 str         r3, [sp, #8]
  0008c	ea000007	 b           |$LN6@VaToPa|
  00090		 |$LN5@VaToPa|
  00090	e3a030c2	 mov         r3, #0xC2
  00094	e59f2044	 ldr         r2, [pc, #0x44]
  00098	e59f103c	 ldr         r1, [pc, #0x3C]
  0009c	e59f0034	 ldr         r0, [pc, #0x34]
  000a0	eb000000	 bl          NKDbgPrintfW
  000a4	e6000010	 __debugbreak_ce
  000a8	e3a03000	 mov         r3, #0
  000ac	e58d3008	 str         r3, [sp, #8]
  000b0		 |$LN6@VaToPa|

; 195  :     return ULONG(ULONG(virtAddr) + m_PaVaConversion);

  000b0	e59d3014	 ldr         r3, [sp, #0x14]
  000b4	e2833034	 add         r3, r3, #0x34
  000b8	e59d2018	 ldr         r2, [sp, #0x18]
  000bc	e5933000	 ldr         r3, [r3]
  000c0	e0823003	 add         r3, r2, r3
  000c4	e58d3000	 str         r3, [sp]

; 196  : }

  000c8	e59d0000	 ldr         r0, [sp]
  000cc	e28dd00c	 add         sp, sp, #0xC
  000d0	e89d6000	 ldmia       sp, {sp, lr}
  000d4	e12fff1e	 bx          lr
  000d8		 |$LN10@VaToPa|
  000d8		 |$LN11@VaToPa|
  000d8	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  000dc		 |$LN12@VaToPa|
  000dc	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  000e0		 |$LN13@VaToPa|
  000e0	00000000	 DCD         |??_C@_1LI@BIDAGBNP@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA6?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo?$AAn?$AA?2?$AAs?$AAr?$AAc?$AA?2@|
  000e4		 |$LN14@VaToPa|
  000e4	00000000	 DCD         |dpCurSettings|
  000e8		 |$M34508|

			 ENDP  ; |?VaToPa@CPhysMem@@QAAKPAE@Z|, CPhysMem::VaToPa

	EXPORT	|?FreeSpecialMemory@CPhysMem@@QAAXQAE@Z| ; CPhysMem::FreeSpecialMemory

  00050			 AREA	 |.pdata|, PDATA
|$T34526| DCD	|$LN9@FreeSpecia|
	DCD	0x40003104
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\usb2com\cphysmem.cpp

  01f78			 AREA	 |.text|, CODE, ARM

  01f78		 |?FreeSpecialMemory@CPhysMem@@QAAXQAE@Z| PROC ; CPhysMem::FreeSpecialMemory

; 727  : {

  01f78		 |$LN9@FreeSpecia|
  01f78	e1a0c00d	 mov         r12, sp
  01f7c	e92d0003	 stmdb       sp!, {r0, r1}
  01f80	e92d5000	 stmdb       sp!, {r12, lr}
  01f84	e24dd008	 sub         sp, sp, #8
  01f88		 |$M34523|

; 728  : 
; 729  :     DEBUGCHK( m_dwSpecialVA == (DWORD) virtAddr );

  01f88	e59d3010	 ldr         r3, [sp, #0x10]
  01f8c	e2833048	 add         r3, r3, #0x48
  01f90	e5932000	 ldr         r2, [r3]
  01f94	e59d3014	 ldr         r3, [sp, #0x14]
  01f98	e1520003	 cmp         r2, r3
  01f9c	1a000002	 bne         |$LN3@FreeSpecia|
  01fa0	e3a03001	 mov         r3, #1
  01fa4	e58d3000	 str         r3, [sp]
  01fa8	ea000008	 b           |$LN4@FreeSpecia|
  01fac		 |$LN3@FreeSpecia|
  01fac	e3a03c02	 mov         r3, #2, 24
  01fb0	e38330d9	 orr         r3, r3, #0xD9
  01fb4	e59f207c	 ldr         r2, [pc, #0x7C]
  01fb8	e59f1074	 ldr         r1, [pc, #0x74]
  01fbc	e59f006c	 ldr         r0, [pc, #0x6C]
  01fc0	eb000000	 bl          NKDbgPrintfW
  01fc4	e6000010	 __debugbreak_ce
  01fc8	e3a03000	 mov         r3, #0
  01fcc	e58d3000	 str         r3, [sp]
  01fd0		 |$LN4@FreeSpecia|

; 730  :     DEBUGCHK( m_bSpecialTaken );

  01fd0	e59d3010	 ldr         r3, [sp, #0x10]
  01fd4	e283304c	 add         r3, r3, #0x4C
  01fd8	e5933000	 ldr         r3, [r3]
  01fdc	e3530000	 cmp         r3, #0
  01fe0	0a000002	 beq         |$LN5@FreeSpecia|
  01fe4	e3a03001	 mov         r3, #1
  01fe8	e58d3004	 str         r3, [sp, #4]
  01fec	ea000008	 b           |$LN6@FreeSpecia|
  01ff0		 |$LN5@FreeSpecia|
  01ff0	e3a03c02	 mov         r3, #2, 24
  01ff4	e38330da	 orr         r3, r3, #0xDA
  01ff8	e59f2038	 ldr         r2, [pc, #0x38]
  01ffc	e59f1030	 ldr         r1, [pc, #0x30]
  02000	e59f0028	 ldr         r0, [pc, #0x28]
  02004	eb000000	 bl          NKDbgPrintfW
  02008	e6000010	 __debugbreak_ce
  0200c	e3a03000	 mov         r3, #0
  02010	e58d3004	 str         r3, [sp, #4]
  02014		 |$LN6@FreeSpecia|

; 731  : 
; 732  :     m_bSpecialTaken = FALSE;

  02014	e59d3010	 ldr         r3, [sp, #0x10]
  02018	e283204c	 add         r2, r3, #0x4C
  0201c	e3a03000	 mov         r3, #0
  02020	e5823000	 str         r3, [r2]

; 733  : }

  02024	e28dd008	 add         sp, sp, #8
  02028	e89d6000	 ldmia       sp, {sp, lr}
  0202c	e12fff1e	 bx          lr
  02030		 |$LN10@FreeSpecia|
  02030		 |$LN11@FreeSpecia|
  02030	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  02034		 |$LN12@FreeSpecia|
  02034	00000000	 DCD         |dpCurSettings|
  02038		 |$LN13@FreeSpecia|
  02038	00000000	 DCD         |??_C@_1LM@NABMAHLD@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  0203c		 |$M34524|

			 ENDP  ; |?FreeSpecialMemory@CPhysMem@@QAAXQAE@Z|, CPhysMem::FreeSpecialMemory

	EXPORT	|??_C@_1JG@MNOBEEOD@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAP?$AAA?$AA?5?$AA?$DN?$AA?5?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@OOLOAMIO@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAN?$AAo?$AA?5?$AAm?$AAe?$AAm@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@LDBHCAGE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@GOKAFDHN@?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAD?$AAe?$AAs?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CI?$AAr?$AAo?$AAu?$AAn?$AAd@| [ DATA ] ; `string'
	EXPORT	|?AllocateMemory@CPhysMem@@QAAHPBGKQAPAEKPAH@Z| ; CPhysMem::AllocateMemory
	IMPORT	|wcslen|
	IMPORT	|WaitForSingleObject|
	IMPORT	|GetTickCount|

  00058			 AREA	 |.pdata|, PDATA
|$T34577| DCD	|$LN56@AllocateMe|
	DCD	0x4001f304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JG@MNOBEEOD@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAP?$AAA?$AA?5?$AA?$DN?$AA?5?$AA0@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "A", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, ":"
	DCB	0x0, " ", 0x0, "P", 0x0, "A", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, ",", 0x0, " ", 0x0, "V", 0x0, "A", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, ",", 0x0, " ", 0x0, "S", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "s", 0x0, "c"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@OOLOAMIO@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAN?$AAo?$AA?5?$AAm?$AAe?$AAm@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "A", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, ":"
	DCB	0x0, " ", 0x0, "N", 0x0, "o", 0x0, " ", 0x0, "m", 0x0, "e"
	DCB	0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "a"
	DCB	0x0, "v", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@LDBHCAGE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe?$AA?5?$AAa@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, ":", 0x0, " ", 0x0, "H", 0x0, "e", 0x0, "a"
	DCB	0x0, "p", 0x0, " ", 0x0, "p", 0x0, "r", 0x0, "i", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "b"
	DCB	0x0, "e", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, "e", 0x0, " "
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "o"
	DCB	0x0, "f", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "b"
	DCB	0x0, "y", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, ":", 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@GOKAFDHN@?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAD?$AAe?$AAs?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CI?$AAr?$AAo?$AAu?$AAn?$AAd@| DCB "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "M", 0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r"
	DCB	0x0, "y", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "s", 0x0, "c"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, ":"
	DCB	0x0, " ", 0x0, "(", 0x0, "r", 0x0, "o", 0x0, "u", 0x0, "n"
	DCB	0x0, "d", 0x0, "u", 0x0, "p", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, "-", 0x0, ">", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  0203c			 AREA	 |.text|, CODE, ARM

  0203c		 |?AllocateMemory@CPhysMem@@QAAHPBGKQAPAEKPAH@Z| PROC ; CPhysMem::AllocateMemory

; 756  : {

  0203c		 |$LN56@AllocateMe|
  0203c	e1a0c00d	 mov         r12, sp
  02040	e92d000f	 stmdb       sp!, {r0 - r3}
  02044	e92d5000	 stmdb       sp!, {r12, lr}
  02048	e24dd09c	 sub         sp, sp, #0x9C
  0204c		 |$M34574|

; 757  : #ifdef DEBUG
; 758  :     PREFAST_DEBUGCHK( pszMemDescription != NULL );

  0204c	e59d30a8	 ldr         r3, [sp, #0xA8]
  02050	e3530000	 cmp         r3, #0
  02054	0a000002	 beq         |$LN16@AllocateMe|
  02058	e3a03001	 mov         r3, #1
  0205c	e58d3030	 str         r3, [sp, #0x30]
  02060	ea000008	 b           |$LN17@AllocateMe|
  02064		 |$LN16@AllocateMe|
  02064	e3a03c02	 mov         r3, #2, 24
  02068	e38330f6	 orr         r3, r3, #0xF6
  0206c	e59f2780	 ldr         r2, [pc, #0x780]
  02070	e59f1778	 ldr         r1, [pc, #0x778]
  02074	e59f0770	 ldr         r0, [pc, #0x770]
  02078	eb000000	 bl          NKDbgPrintfW
  0207c	e6000010	 __debugbreak_ce
  02080	e3a03000	 mov         r3, #0
  02084	e58d3030	 str         r3, [sp, #0x30]
  02088		 |$LN17@AllocateMe|

; 759  :     DEBUGCHK( dwPassedInSize > 0 );

  02088	e59d30ac	 ldr         r3, [sp, #0xAC]
  0208c	e3530000	 cmp         r3, #0
  02090	9a000002	 bls         |$LN18@AllocateMe|
  02094	e3a03001	 mov         r3, #1
  02098	e58d3034	 str         r3, [sp, #0x34]
  0209c	ea000008	 b           |$LN19@AllocateMe|
  020a0		 |$LN18@AllocateMe|
  020a0	e3a03c02	 mov         r3, #2, 24
  020a4	e38330f7	 orr         r3, r3, #0xF7
  020a8	e59f2744	 ldr         r2, [pc, #0x744]
  020ac	e59f173c	 ldr         r1, [pc, #0x73C]
  020b0	e59f0734	 ldr         r0, [pc, #0x734]
  020b4	eb000000	 bl          NKDbgPrintfW
  020b8	e6000010	 __debugbreak_ce
  020bc	e3a03000	 mov         r3, #0
  020c0	e58d3034	 str         r3, [sp, #0x34]
  020c4		 |$LN19@AllocateMe|

; 760  :     // for now, only the following sets of flags should be passed in
; 761  :     DEBUGCHK( dwFlags == 0 || // low priority, allow blocking
; 762  :               dwFlags == CPHYSMEM_FLAG_NOBLOCK || // low priority, no blocking
; 763  :               dwFlags == (CPHYSMEM_FLAG_HIGHPRIORITY | CPHYSMEM_FLAG_NOBLOCK) ); // high pri, no blocking

  020c4	e59d30b4	 ldr         r3, [sp, #0xB4]
  020c8	e3530000	 cmp         r3, #0
  020cc	0a00000f	 beq         |$LN20@AllocateMe|
  020d0	e59d30b4	 ldr         r3, [sp, #0xB4]
  020d4	e3530002	 cmp         r3, #2
  020d8	0a00000c	 beq         |$LN20@AllocateMe|
  020dc	e59d30b4	 ldr         r3, [sp, #0xB4]
  020e0	e3530003	 cmp         r3, #3
  020e4	0a000009	 beq         |$LN20@AllocateMe|
  020e8	e3a03c02	 mov         r3, #2, 24
  020ec	e38330fb	 orr         r3, r3, #0xFB
  020f0	e59f26fc	 ldr         r2, [pc, #0x6FC]
  020f4	e59f16f4	 ldr         r1, [pc, #0x6F4]
  020f8	e59f06ec	 ldr         r0, [pc, #0x6EC]
  020fc	eb000000	 bl          NKDbgPrintfW
  02100	e6000010	 __debugbreak_ce
  02104	e3a03000	 mov         r3, #0
  02108	e58d3038	 str         r3, [sp, #0x38]
  0210c	ea000001	 b           |$LN21@AllocateMe|
  02110		 |$LN20@AllocateMe|
  02110	e3a03001	 mov         r3, #1
  02114	e58d3038	 str         r3, [sp, #0x38]
  02118		 |$LN21@AllocateMe|

; 764  : 
; 765  :     if ( dwFlags & CPHYSMEM_FLAG_NOBLOCK ) {

  02118	e59d30b4	 ldr         r3, [sp, #0xB4]
  0211c	e3130002	 tst         r3, #2
  02120	0a00000f	 beq         |$LN13@AllocateMe|

; 766  :         // pfRequestingAbort will be ignored for NO_BLOCK transfers,
; 767  :         // so why is caller passing it in? Note that nothing
; 768  :         // bad will happen if pfRequestingAbort != NULL, so
; 769  :         // this check can be removed in the future if need be.
; 770  :         DEBUGCHK( pfRequestingAbort == NULL );

  02124	e59d30b8	 ldr         r3, [sp, #0xB8]
  02128	e3530000	 cmp         r3, #0
  0212c	1a000002	 bne         |$LN22@AllocateMe|
  02130	e3a03001	 mov         r3, #1
  02134	e58d303c	 str         r3, [sp, #0x3C]
  02138	ea000008	 b           |$LN23@AllocateMe|
  0213c		 |$LN22@AllocateMe|
  0213c	e3a03c03	 mov         r3, #3, 24
  02140	e3833002	 orr         r3, r3, #2
  02144	e59f26a8	 ldr         r2, [pc, #0x6A8]
  02148	e59f16a0	 ldr         r1, [pc, #0x6A0]
  0214c	e59f0698	 ldr         r0, [pc, #0x698]
  02150	eb000000	 bl          NKDbgPrintfW
  02154	e6000010	 __debugbreak_ce
  02158	e3a03000	 mov         r3, #0
  0215c	e58d303c	 str         r3, [sp, #0x3C]
  02160		 |$LN23@AllocateMe|

; 771  :     } else {

  02160	ea000012	 b           |$LN12@AllocateMe|
  02164		 |$LN13@AllocateMe|

; 772  :         // blocking transfers must pass in a pointer
; 773  :         // for allowing the transfer to abort, and
; 774  :         // the original state of this abort request
; 775  :         // should be FALSE. If not, the blocking
; 776  :         // request is ignored.
; 777  :         DEBUGCHK( pfRequestingAbort != NULL &&
; 778  :                   *pfRequestingAbort == FALSE );

  02164	e59d30b8	 ldr         r3, [sp, #0xB8]
  02168	e3530000	 cmp         r3, #0
  0216c	0a000006	 beq         |$LN24@AllocateMe|
  02170	e59d30b8	 ldr         r3, [sp, #0xB8]
  02174	e5933000	 ldr         r3, [r3]
  02178	e3530000	 cmp         r3, #0
  0217c	1a000002	 bne         |$LN24@AllocateMe|
  02180	e3a03001	 mov         r3, #1
  02184	e58d3040	 str         r3, [sp, #0x40]
  02188	ea000008	 b           |$LN25@AllocateMe|
  0218c		 |$LN24@AllocateMe|
  0218c	e3a03c03	 mov         r3, #3, 24
  02190	e383300a	 orr         r3, r3, #0xA
  02194	e59f2658	 ldr         r2, [pc, #0x658]
  02198	e59f1650	 ldr         r1, [pc, #0x650]
  0219c	e59f0648	 ldr         r0, [pc, #0x648]
  021a0	eb000000	 bl          NKDbgPrintfW
  021a4	e6000010	 __debugbreak_ce
  021a8	e3a03000	 mov         r3, #0
  021ac	e58d3040	 str         r3, [sp, #0x40]
  021b0		 |$LN25@AllocateMe|
  021b0		 |$LN12@AllocateMe|

; 779  :     }
; 780  : #endif // DEBUG
; 781  : 
; 782  :     PMEMLIST    pNode = NULL;

  021b0	e3a03000	 mov         r3, #0
  021b4	e58d3014	 str         r3, [sp, #0x14]

; 783  :     const BOOL  fHighPri = !!(dwFlags & CPHYSMEM_FLAG_HIGHPRIORITY);

  021b8	e59d30b4	 ldr         r3, [sp, #0xB4]
  021bc	e3130001	 tst         r3, #1
  021c0	0a000002	 beq         |$LN26@AllocateMe|
  021c4	e3a03001	 mov         r3, #1
  021c8	e58d3044	 str         r3, [sp, #0x44]
  021cc	ea000001	 b           |$LN27@AllocateMe|
  021d0		 |$LN26@AllocateMe|
  021d0	e3a03000	 mov         r3, #0
  021d4	e58d3044	 str         r3, [sp, #0x44]
  021d8		 |$LN27@AllocateMe|
  021d8	e59d3044	 ldr         r3, [sp, #0x44]
  021dc	e58d3010	 str         r3, [sp, #0x10]

; 784  :     const BOOL  fNoBlock = !!(dwFlags & CPHYSMEM_FLAG_NOBLOCK);

  021e0	e59d30b4	 ldr         r3, [sp, #0xB4]
  021e4	e3130002	 tst         r3, #2
  021e8	0a000002	 beq         |$LN28@AllocateMe|
  021ec	e3a03001	 mov         r3, #1
  021f0	e58d3048	 str         r3, [sp, #0x48]
  021f4	ea000001	 b           |$LN29@AllocateMe|
  021f8		 |$LN28@AllocateMe|
  021f8	e3a03000	 mov         r3, #0
  021fc	e58d3048	 str         r3, [sp, #0x48]
  02200		 |$LN29@AllocateMe|
  02200	e59d3048	 ldr         r3, [sp, #0x48]
  02204	e58d300c	 str         r3, [sp, #0xC]

; 785  :     // We keep our block sizes in multiples of CPHYSMEM_MEMORY_ALIGNMENT
; 786  :     DWORD       dwSize = ( (dwPassedInSize - 1) & ~(CPHYSMEM_MEMORY_ALIGNMENT - 1) )
; 787  :                                  + CPHYSMEM_MEMORY_ALIGNMENT;

  02208	e59d30ac	 ldr         r3, [sp, #0xAC]
  0220c	e2432001	 sub         r2, r3, #1
  02210	e3e0301f	 mvn         r3, #0x1F
  02214	e0023003	 and         r3, r2, r3
  02218	e2833020	 add         r3, r3, #0x20
  0221c	e58d3008	 str         r3, [sp, #8]

; 788  : 
; 789  :     PREFAST_DEBUGCHK( pVirtAddr != NULL );

  02220	e59d30b0	 ldr         r3, [sp, #0xB0]
  02224	e3530000	 cmp         r3, #0
  02228	0a000002	 beq         |$LN30@AllocateMe|
  0222c	e3a03001	 mov         r3, #1
  02230	e58d304c	 str         r3, [sp, #0x4C]
  02234	ea000008	 b           |$LN31@AllocateMe|
  02238		 |$LN30@AllocateMe|
  02238	e3a03c03	 mov         r3, #3, 24
  0223c	e3833015	 orr         r3, r3, #0x15
  02240	e59f25ac	 ldr         r2, [pc, #0x5AC]
  02244	e59f15a4	 ldr         r1, [pc, #0x5A4]
  02248	e59f059c	 ldr         r0, [pc, #0x59C]
  0224c	eb000000	 bl          NKDbgPrintfW
  02250	e6000010	 __debugbreak_ce
  02254	e3a03000	 mov         r3, #0
  02258	e58d304c	 str         r3, [sp, #0x4C]
  0225c		 |$LN31@AllocateMe|

; 790  :     DEBUGCHK( dwSize % CPHYSMEM_MEMORY_ALIGNMENT == 0 );

  0225c	e59d1008	 ldr         r1, [sp, #8]
  02260	e3a00020	 mov         r0, #0x20
  02264	eb000000	 bl          __rt_udiv
  02268	e3510000	 cmp         r1, #0
  0226c	1a000002	 bne         |$LN32@AllocateMe|
  02270	e3a03001	 mov         r3, #1
  02274	e58d3050	 str         r3, [sp, #0x50]
  02278	ea000008	 b           |$LN33@AllocateMe|
  0227c		 |$LN32@AllocateMe|
  0227c	e3a03c03	 mov         r3, #3, 24
  02280	e3833016	 orr         r3, r3, #0x16
  02284	e59f2568	 ldr         r2, [pc, #0x568]
  02288	e59f1560	 ldr         r1, [pc, #0x560]
  0228c	e59f0558	 ldr         r0, [pc, #0x558]
  02290	eb000000	 bl          NKDbgPrintfW
  02294	e6000010	 __debugbreak_ce
  02298	e3a03000	 mov         r3, #0
  0229c	e58d3050	 str         r3, [sp, #0x50]
  022a0		 |$LN33@AllocateMe|

; 791  :     DEBUGCHK( dwSize - dwPassedInSize < CPHYSMEM_MEMORY_ALIGNMENT );

  022a0	e59d2008	 ldr         r2, [sp, #8]
  022a4	e59d30ac	 ldr         r3, [sp, #0xAC]
  022a8	e0423003	 sub         r3, r2, r3
  022ac	e3530020	 cmp         r3, #0x20
  022b0	2a000002	 bcs         |$LN34@AllocateMe|
  022b4	e3a03001	 mov         r3, #1
  022b8	e58d3054	 str         r3, [sp, #0x54]
  022bc	ea000008	 b           |$LN35@AllocateMe|
  022c0		 |$LN34@AllocateMe|
  022c0	e3a03c03	 mov         r3, #3, 24
  022c4	e3833017	 orr         r3, r3, #0x17
  022c8	e59f2524	 ldr         r2, [pc, #0x524]
  022cc	e59f151c	 ldr         r1, [pc, #0x51C]
  022d0	e59f0514	 ldr         r0, [pc, #0x514]
  022d4	eb000000	 bl          NKDbgPrintfW
  022d8	e6000010	 __debugbreak_ce
  022dc	e3a03000	 mov         r3, #0
  022e0	e58d3054	 str         r3, [sp, #0x54]
  022e4		 |$LN35@AllocateMe|

; 792  :     DEBUGMSG(ZONE_CPHYSMEM && ZONE_VERBOSE && (dwSize != dwPassedInSize),
; 793  :              (TEXT("AllocateMemory Desc = %s: (roundup %d->%d)\r\n"), pszMemDescription, dwPassedInSize, dwSize ));

  022e4	e59f3504	 ldr         r3, [pc, #0x504]
  022e8	e5933440	 ldr         r3, [r3, #0x440]
  022ec	e3130b02	 tst         r3, #2, 22
  022f0	0a00000f	 beq         |$LN36@AllocateMe|
  022f4	e59f34f4	 ldr         r3, [pc, #0x4F4]
  022f8	e5933440	 ldr         r3, [r3, #0x440]
  022fc	e3130a01	 tst         r3, #1, 20
  02300	0a00000b	 beq         |$LN36@AllocateMe|
  02304	e59d2008	 ldr         r2, [sp, #8]
  02308	e59d30ac	 ldr         r3, [sp, #0xAC]
  0230c	e1520003	 cmp         r2, r3
  02310	0a000007	 beq         |$LN36@AllocateMe|
  02314	e59d3008	 ldr         r3, [sp, #8]
  02318	e59d20ac	 ldr         r2, [sp, #0xAC]
  0231c	e59d10a8	 ldr         r1, [sp, #0xA8]
  02320	e59f04dc	 ldr         r0, [pc, #0x4DC]
  02324	eb000000	 bl          NKDbgPrintfW
  02328	e3a03001	 mov         r3, #1
  0232c	e58d3058	 str         r3, [sp, #0x58]
  02330	ea000001	 b           |$LN37@AllocateMe|
  02334		 |$LN36@AllocateMe|
  02334	e3a03000	 mov         r3, #0
  02338	e58d3058	 str         r3, [sp, #0x58]
  0233c		 |$LN37@AllocateMe|

; 794  : 
; 795  :     EnterCriticalSection( &m_csLock );

  0233c	e59d30a4	 ldr         r3, [sp, #0xA4]
  02340	e2830010	 add         r0, r3, #0x10
  02344	eb000000	 bl          EnterCriticalSection

; 796  : 
; 797  :     DEBUGMSG( ZONE_CPHYSMEM && ZONE_VERBOSE, (TEXT("CPhysMem: Heap pri = %d before allocation of %d bytes:\n"), fHighPri, dwSize ) );

  02348	e59f34a0	 ldr         r3, [pc, #0x4A0]
  0234c	e5933440	 ldr         r3, [r3, #0x440]
  02350	e3130b02	 tst         r3, #2, 22
  02354	0a00000a	 beq         |$LN38@AllocateMe|
  02358	e59f3490	 ldr         r3, [pc, #0x490]
  0235c	e5933440	 ldr         r3, [r3, #0x440]
  02360	e3130a01	 tst         r3, #1, 20
  02364	0a000006	 beq         |$LN38@AllocateMe|
  02368	e59d2008	 ldr         r2, [sp, #8]
  0236c	e59d1010	 ldr         r1, [sp, #0x10]
  02370	e59f0488	 ldr         r0, [pc, #0x488]
  02374	eb000000	 bl          NKDbgPrintfW
  02378	e3a03001	 mov         r3, #1
  0237c	e58d305c	 str         r3, [sp, #0x5C]
  02380	ea000001	 b           |$LN39@AllocateMe|
  02384		 |$LN38@AllocateMe|
  02384	e3a03000	 mov         r3, #0
  02388	e58d305c	 str         r3, [sp, #0x5C]
  0238c		 |$LN39@AllocateMe|

; 798  :     VALIDATE_HEAPS(fHighPri);

  0238c	e59d1010	 ldr         r1, [sp, #0x10]
  02390	e59d00a4	 ldr         r0, [sp, #0xA4]
  02394	eb000000	 bl          |?ValidateHeaps@CPhysMem@@AAAHH@Z|

; 799  : 
; 800  :     //
; 801  :     // Scan the free list for the first chunk that's just big enough to satisfy
; 802  :     // this request. Remove from the free list. Chop it up (unless the result 
; 803  :     // is less than CPHYSMEM_MEMORY_ALIGNMENT bytes). Then re-sort the remaining
; 804  :     // free chunk back into the free list and place the newly allocated chunk on
; 805  :     // the IN USE list.
; 806  :     //
; 807  :     pNode = FindFreeBlock(dwSize, fHighPri);

  02398	e59d2010	 ldr         r2, [sp, #0x10]
  0239c	e59d1008	 ldr         r1, [sp, #8]
  023a0	e59d00a4	 ldr         r0, [sp, #0xA4]
  023a4	eb000000	 bl          |?FindFreeBlock@CPhysMem@@AAAPAUtMEMLIST@@KH@Z|
  023a8	e58d0060	 str         r0, [sp, #0x60]
  023ac	e59d3060	 ldr         r3, [sp, #0x60]
  023b0	e58d3014	 str         r3, [sp, #0x14]

; 808  :     if ( pNode == NULL ) {

  023b4	e59d3014	 ldr         r3, [sp, #0x14]
  023b8	e3530000	 cmp         r3, #0
  023bc	1a00007d	 bne         |$LN11@AllocateMe|

; 809  :         if ( fHighPri ) {

  023c0	e59d3010	 ldr         r3, [sp, #0x10]
  023c4	e3530000	 cmp         r3, #0
  023c8	0a00001f	 beq         |$LN10@AllocateMe|

; 810  :             //
; 811  :             // Not available from High Priority region, try allocating from Normal region.
; 812  :             //
; 813  :             LeaveCriticalSection(&m_csLock);

  023cc	e59d30a4	 ldr         r3, [sp, #0xA4]
  023d0	e2830010	 add         r0, r3, #0x10
  023d4	eb000000	 bl          LeaveCriticalSection

; 814  : 
; 815  :             DEBUGCHK( dwFlags == (CPHYSMEM_FLAG_HIGHPRIORITY | CPHYSMEM_FLAG_NOBLOCK) );

  023d8	e59d30b4	 ldr         r3, [sp, #0xB4]
  023dc	e3530003	 cmp         r3, #3
  023e0	1a000002	 bne         |$LN40@AllocateMe|
  023e4	e3a03001	 mov         r3, #1
  023e8	e58d3064	 str         r3, [sp, #0x64]
  023ec	ea000008	 b           |$LN41@AllocateMe|
  023f0		 |$LN40@AllocateMe|
  023f0	e3a03c03	 mov         r3, #3, 24
  023f4	e383302f	 orr         r3, r3, #0x2F
  023f8	e59f23f4	 ldr         r2, [pc, #0x3F4]
  023fc	e59f13ec	 ldr         r1, [pc, #0x3EC]
  02400	e59f03e4	 ldr         r0, [pc, #0x3E4]
  02404	eb000000	 bl          NKDbgPrintfW
  02408	e6000010	 __debugbreak_ce
  0240c	e3a03000	 mov         r3, #0
  02410	e58d3064	 str         r3, [sp, #0x64]
  02414		 |$LN41@AllocateMe|

; 816  :             return AllocateMemory( DEBUG_PARAM( pszMemDescription )
; 817  :                                    dwPassedInSize,
; 818  :                                    pVirtAddr,
; 819  :                                    CPHYSMEM_FLAG_NOBLOCK, // dwFlags & ~CPHYSMEM_FLAG_HIGHPRIORITY,
; 820  :                                    pfRequestingAbort );

  02414	e59d30b8	 ldr         r3, [sp, #0xB8]
  02418	e58d3004	 str         r3, [sp, #4]
  0241c	e3a03002	 mov         r3, #2
  02420	e58d3000	 str         r3, [sp]
  02424	e59d30b0	 ldr         r3, [sp, #0xB0]
  02428	e59d20ac	 ldr         r2, [sp, #0xAC]
  0242c	e59d10a8	 ldr         r1, [sp, #0xA8]
  02430	e59d00a4	 ldr         r0, [sp, #0xA4]
  02434	eb000000	 bl          |?AllocateMemory@CPhysMem@@QAAHPBGKQAPAEKPAH@Z|
  02438	e58d0068	 str         r0, [sp, #0x68]
  0243c	e59d3068	 ldr         r3, [sp, #0x68]
  02440	e58d3028	 str         r3, [sp, #0x28]
  02444	ea0000e4	 b           |$LN14@AllocateMe|

; 821  : 
; 822  :         } else if ( !fNoBlock &&

  02448	ea00005a	 b           |$LN9@AllocateMe|
  0244c		 |$LN10@AllocateMe|

; 823  :                     pfRequestingAbort != NULL ) {

  0244c	e59d300c	 ldr         r3, [sp, #0xC]
  02450	e3530000	 cmp         r3, #0
  02454	1a000043	 bne         |$LN8@AllocateMe|
  02458	e59d30b8	 ldr         r3, [sp, #0xB8]
  0245c	e3530000	 cmp         r3, #0
  02460	0a000040	 beq         |$LN8@AllocateMe|

; 824  :             //
; 825  :             // Caller requested block for memory 
; 826  :             //
; 827  :         #ifdef DEBUG
; 828  :             DWORD dwStartBlockTickCount = GetTickCount();

  02464	eb000000	 bl          GetTickCount
  02468	e58d006c	 str         r0, [sp, #0x6C]
  0246c	e59d306c	 ldr         r3, [sp, #0x6C]
  02470	e58d3018	 str         r3, [sp, #0x18]
  02474		 |$LN7@AllocateMe|

; 829  :         #endif // DEBUG
; 830  :             do {
; 831  :                 LeaveCriticalSection(&m_csLock);

  02474	e59d30a4	 ldr         r3, [sp, #0xA4]
  02478	e2830010	 add         r0, r3, #0x10
  0247c	eb000000	 bl          LeaveCriticalSection

; 832  : 
; 833  :                 if ( *pfRequestingAbort == FALSE ) {

  02480	e59d30b8	 ldr         r3, [sp, #0xB8]
  02484	e5933000	 ldr         r3, [r3]
  02488	e3530000	 cmp         r3, #0
  0248c	1a000027	 bne         |$LN4@AllocateMe|

; 834  :                     m_fHasBlocked = TRUE;

  02490	e59d30a4	 ldr         r3, [sp, #0xA4]
  02494	e2832030	 add         r2, r3, #0x30
  02498	e3a03001	 mov         r3, #1
  0249c	e5823000	 str         r3, [r2]

; 835  :                     WaitForSingleObject(m_hFreeMemEvent, CPHYSMEM_BLOCK_FOR_MEM_INTERVAL );

  024a0	e3a01ffa	 mov         r1, #0xFA, 30
  024a4	e59d30a4	 ldr         r3, [sp, #0xA4]
  024a8	e283302c	 add         r3, r3, #0x2C
  024ac	e5930000	 ldr         r0, [r3]
  024b0	eb000000	 bl          WaitForSingleObject

; 836  : 
; 837  :                     if ( *pfRequestingAbort ) {

  024b4	e59d30b8	 ldr         r3, [sp, #0xB8]
  024b8	e5933000	 ldr         r3, [r3]
  024bc	e3530000	 cmp         r3, #0
  024c0	0a000005	 beq         |$LN3@AllocateMe|

; 838  :                         *pVirtAddr = NULL;

  024c4	e59d20b0	 ldr         r2, [sp, #0xB0]
  024c8	e3a03000	 mov         r3, #0
  024cc	e5823000	 str         r3, [r2]

; 839  :                         return FALSE;

  024d0	e3a03000	 mov         r3, #0
  024d4	e58d3028	 str         r3, [sp, #0x28]
  024d8	ea0000bf	 b           |$LN14@AllocateMe|
  024dc		 |$LN3@AllocateMe|

; 840  :                     }
; 841  : 
; 842  :                     // if this fails, we've been waiting for memory too long
; 843  :                     DEBUGCHK( GetTickCount() - dwStartBlockTickCount < CPHYSMEM_DEBUG_MAXIMUM_BLOCK_TIME );

  024dc	eb000000	 bl          GetTickCount
  024e0	e58d0070	 str         r0, [sp, #0x70]
  024e4	e59d2070	 ldr         r2, [sp, #0x70]
  024e8	e59d3018	 ldr         r3, [sp, #0x18]
  024ec	e0422003	 sub         r2, r2, r3
  024f0	e3a03c13	 mov         r3, #0x13, 24
  024f4	e3833088	 orr         r3, r3, #0x88
  024f8	e1520003	 cmp         r2, r3
  024fc	2a000002	 bcs         |$LN42@AllocateMe|
  02500	e3a03001	 mov         r3, #1
  02504	e58d3074	 str         r3, [sp, #0x74]
  02508	ea000008	 b           |$LN43@AllocateMe|
  0250c		 |$LN42@AllocateMe|
  0250c	e3a03c03	 mov         r3, #3, 24
  02510	e383304b	 orr         r3, r3, #0x4B
  02514	e59f22d8	 ldr         r2, [pc, #0x2D8]
  02518	e59f12d0	 ldr         r1, [pc, #0x2D0]
  0251c	e59f02c8	 ldr         r0, [pc, #0x2C8]
  02520	eb000000	 bl          NKDbgPrintfW
  02524	e6000010	 __debugbreak_ce
  02528	e3a03000	 mov         r3, #0
  0252c	e58d3074	 str         r3, [sp, #0x74]
  02530		 |$LN43@AllocateMe|
  02530		 |$LN4@AllocateMe|

; 844  :                 }
; 845  : 
; 846  :                 EnterCriticalSection(&m_csLock);

  02530	e59d30a4	 ldr         r3, [sp, #0xA4]
  02534	e2830010	 add         r0, r3, #0x10
  02538	eb000000	 bl          EnterCriticalSection

; 847  : 
; 848  :                 pNode = FindFreeBlock(dwSize, fHighPri);

  0253c	e59d2010	 ldr         r2, [sp, #0x10]
  02540	e59d1008	 ldr         r1, [sp, #8]
  02544	e59d00a4	 ldr         r0, [sp, #0xA4]
  02548	eb000000	 bl          |?FindFreeBlock@CPhysMem@@AAAPAUtMEMLIST@@KH@Z|
  0254c	e58d0078	 str         r0, [sp, #0x78]
  02550	e59d3078	 ldr         r3, [sp, #0x78]
  02554	e58d3014	 str         r3, [sp, #0x14]

; 849  :             } while ( pNode == NULL );

  02558	e59d3014	 ldr         r3, [sp, #0x14]
  0255c	e3530000	 cmp         r3, #0
  02560	0affffc3	 beq         |$LN7@AllocateMe|

; 850  :             // rest of processing done below
; 851  :         } else {

  02564	ea000013	 b           |$LN2@AllocateMe|
  02568		 |$LN8@AllocateMe|

; 852  :             DEBUGMSG( ZONE_WARNING, (TEXT("CPhysMem AllocateMemory : No memory available") ));

  02568	e59f3280	 ldr         r3, [pc, #0x280]
  0256c	e5933440	 ldr         r3, [r3, #0x440]
  02570	e3130a02	 tst         r3, #2, 20
  02574	0a000004	 beq         |$LN44@AllocateMe|
  02578	e59f027c	 ldr         r0, [pc, #0x27C]
  0257c	eb000000	 bl          NKDbgPrintfW
  02580	e3a03001	 mov         r3, #1
  02584	e58d307c	 str         r3, [sp, #0x7C]
  02588	ea000001	 b           |$LN45@AllocateMe|
  0258c		 |$LN44@AllocateMe|
  0258c	e3a03000	 mov         r3, #0
  02590	e58d307c	 str         r3, [sp, #0x7C]
  02594		 |$LN45@AllocateMe|

; 853  :             LeaveCriticalSection(&m_csLock);

  02594	e59d30a4	 ldr         r3, [sp, #0xA4]
  02598	e2830010	 add         r0, r3, #0x10
  0259c	eb000000	 bl          LeaveCriticalSection

; 854  :             *pVirtAddr = NULL;

  025a0	e59d20b0	 ldr         r2, [sp, #0xB0]
  025a4	e3a03000	 mov         r3, #0
  025a8	e5823000	 str         r3, [r2]

; 855  :             return FALSE;

  025ac	e3a03000	 mov         r3, #0
  025b0	e58d3028	 str         r3, [sp, #0x28]
  025b4	ea000088	 b           |$LN14@AllocateMe|
  025b8		 |$LN2@AllocateMe|
  025b8		 |$LN9@AllocateMe|
  025b8		 |$LN11@AllocateMe|

; 856  :         }
; 857  :     }
; 858  : 
; 859  :     // case pNode == NULL should have been handled above
; 860  : 
; 861  :     if ( pNode->dwSize - dwSize >= CPHYSMEM_MEMORY_ALIGNMENT) {

  025b8	e59d3014	 ldr         r3, [sp, #0x14]
  025bc	e2833008	 add         r3, r3, #8
  025c0	e5932000	 ldr         r2, [r3]
  025c4	e59d3008	 ldr         r3, [sp, #8]
  025c8	e0423003	 sub         r3, r2, r3
  025cc	e3530020	 cmp         r3, #0x20
  025d0	3a00001f	 bcc         |$LN1@AllocateMe|

; 862  :         // There's enough left over to create a new block.
; 863  :         PMEMLIST pNodeNew = CreateNewNode(pNode->dwSize - dwSize,
; 864  :                                           pNode->dwVirtAddr + dwSize, 
; 865  :                                           pNode->dwPhysAddr + dwSize);

  025d4	e59d3014	 ldr         r3, [sp, #0x14]
  025d8	e2833004	 add         r3, r3, #4
  025dc	e5932000	 ldr         r2, [r3]
  025e0	e59d3008	 ldr         r3, [sp, #8]
  025e4	e0823003	 add         r3, r2, r3
  025e8	e59d2014	 ldr         r2, [sp, #0x14]
  025ec	e5921000	 ldr         r1, [r2]
  025f0	e59d2008	 ldr         r2, [sp, #8]
  025f4	e0812002	 add         r2, r1, r2
  025f8	e59d1014	 ldr         r1, [sp, #0x14]
  025fc	e2811008	 add         r1, r1, #8
  02600	e5910000	 ldr         r0, [r1]
  02604	e59d1008	 ldr         r1, [sp, #8]
  02608	e0401001	 sub         r1, r0, r1
  0260c	e59d00a4	 ldr         r0, [sp, #0xA4]
  02610	eb000000	 bl          |?CreateNewNode@CPhysMem@@AAAPAUtMEMLIST@@KKK@Z|
  02614	e58d0080	 str         r0, [sp, #0x80]
  02618	e59d3080	 ldr         r3, [sp, #0x80]
  0261c	e58d301c	 str         r3, [sp, #0x1C]

; 866  :     #ifdef DEBUG
; 867  :         _tcscpy( pNodeNew->szDescription, pNode->szDescription );

  02620	e59d3014	 ldr         r3, [sp, #0x14]
  02624	e2831014	 add         r1, r3, #0x14
  02628	e59d301c	 ldr         r3, [sp, #0x1C]
  0262c	e2830014	 add         r0, r3, #0x14
  02630	eb000000	 bl          wcscpy

; 868  :     #endif // DEBUG
; 869  :         AddNodeToFreeList(pNodeNew, fHighPri);

  02634	e59d2010	 ldr         r2, [sp, #0x10]
  02638	e59d101c	 ldr         r1, [sp, #0x1C]
  0263c	e59d00a4	 ldr         r0, [sp, #0xA4]
  02640	eb000000	 bl          |?AddNodeToFreeList@CPhysMem@@AAAHPAUtMEMLIST@@H@Z|

; 870  : 
; 871  :         pNode->dwSize = dwSize; // remember to resize old block

  02644	e59d3014	 ldr         r3, [sp, #0x14]
  02648	e2832008	 add         r2, r3, #8
  0264c	e59d3008	 ldr         r3, [sp, #8]
  02650	e5823000	 str         r3, [r2]
  02654		 |$LN1@AllocateMe|

; 872  :     }
; 873  : 
; 874  : #ifdef DEBUG
; 875  :     // add description to block
; 876  :     DEBUGCHK( _tcslen( pszMemDescription ) < CPHYSMEM_MAX_DEBUG_NODE_DESCRIPTION_LENGTH );

  02654	e59d00a8	 ldr         r0, [sp, #0xA8]
  02658	eb000000	 bl          wcslen
  0265c	e58d0084	 str         r0, [sp, #0x84]
  02660	e59d3084	 ldr         r3, [sp, #0x84]
  02664	e3530050	 cmp         r3, #0x50
  02668	2a000002	 bcs         |$LN46@AllocateMe|
  0266c	e3a03001	 mov         r3, #1
  02670	e58d3088	 str         r3, [sp, #0x88]
  02674	ea000007	 b           |$LN47@AllocateMe|
  02678		 |$LN46@AllocateMe|
  02678	e3a03fdb	 mov         r3, #0xDB, 30
  0267c	e59f2170	 ldr         r2, [pc, #0x170]
  02680	e59f1168	 ldr         r1, [pc, #0x168]
  02684	e59f0160	 ldr         r0, [pc, #0x160]
  02688	eb000000	 bl          NKDbgPrintfW
  0268c	e6000010	 __debugbreak_ce
  02690	e3a03000	 mov         r3, #0
  02694	e58d3088	 str         r3, [sp, #0x88]
  02698		 |$LN47@AllocateMe|

; 877  :     _tcscpy( pNode->szDescription, pszMemDescription );

  02698	e59d10a8	 ldr         r1, [sp, #0xA8]
  0269c	e59d3014	 ldr         r3, [sp, #0x14]
  026a0	e2830014	 add         r0, r3, #0x14
  026a4	eb000000	 bl          wcscpy

; 878  :     // trash the memory before we return it to caller
; 879  :     memset( PUCHAR( pNode->dwVirtAddr ), GARBAGE, pNode->dwSize );

  026a8	e59d3014	 ldr         r3, [sp, #0x14]
  026ac	e2833008	 add         r3, r3, #8
  026b0	e5932000	 ldr         r2, [r3]
  026b4	e3a010aa	 mov         r1, #0xAA
  026b8	e59d3014	 ldr         r3, [sp, #0x14]
  026bc	e5930000	 ldr         r0, [r3]
  026c0	eb000000	 bl          memset

; 880  : #endif // DEBUG
; 881  : 
; 882  :     DEBUGMSG(ZONE_CPHYSMEM, (TEXT("CPhysMem AllocateMemory : PA = 0x%08X, VA = 0x%08X, Size = %d, Desc = %s\r\n"),
; 883  :                           pNode->dwPhysAddr, pNode->dwVirtAddr, pNode->dwSize, pNode->szDescription ) );

  026c4	e59f3124	 ldr         r3, [pc, #0x124]
  026c8	e5933440	 ldr         r3, [r3, #0x440]
  026cc	e3130b02	 tst         r3, #2, 22
  026d0	0a00000f	 beq         |$LN48@AllocateMe|
  026d4	e59d3014	 ldr         r3, [sp, #0x14]
  026d8	e2833014	 add         r3, r3, #0x14
  026dc	e58d3000	 str         r3, [sp]
  026e0	e59d3014	 ldr         r3, [sp, #0x14]
  026e4	e2833008	 add         r3, r3, #8
  026e8	e5933000	 ldr         r3, [r3]
  026ec	e59d2014	 ldr         r2, [sp, #0x14]
  026f0	e5922000	 ldr         r2, [r2]
  026f4	e59d1014	 ldr         r1, [sp, #0x14]
  026f8	e2811004	 add         r1, r1, #4
  026fc	e5911000	 ldr         r1, [r1]
  02700	e59f00f0	 ldr         r0, [pc, #0xF0]
  02704	eb000000	 bl          NKDbgPrintfW
  02708	e3a03001	 mov         r3, #1
  0270c	e58d308c	 str         r3, [sp, #0x8C]
  02710	ea000001	 b           |$LN49@AllocateMe|
  02714		 |$LN48@AllocateMe|
  02714	e3a03000	 mov         r3, #0
  02718	e58d308c	 str         r3, [sp, #0x8C]
  0271c		 |$LN49@AllocateMe|

; 884  : 
; 885  :     // mark this node used
; 886  :     InsertNodeBefore(pNode, FirstNode(INUSELIST(fHighPri)));

  0271c	e59d3010	 ldr         r3, [sp, #0x10]
  02720	e3530000	 cmp         r3, #0
  02724	0a000004	 beq         |$LN50@AllocateMe|
  02728	e59d30a4	 ldr         r3, [sp, #0xA4]
  0272c	e2833070	 add         r3, r3, #0x70
  02730	e5933000	 ldr         r3, [r3]
  02734	e58d3090	 str         r3, [sp, #0x90]
  02738	ea000003	 b           |$LN51@AllocateMe|
  0273c		 |$LN50@AllocateMe|
  0273c	e59d30a4	 ldr         r3, [sp, #0xA4]
  02740	e2833060	 add         r3, r3, #0x60
  02744	e5933000	 ldr         r3, [r3]
  02748	e58d3090	 str         r3, [sp, #0x90]
  0274c		 |$LN51@AllocateMe|
  0274c	e59d0090	 ldr         r0, [sp, #0x90]
  02750	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  02754	e58d0094	 str         r0, [sp, #0x94]
  02758	e59d1094	 ldr         r1, [sp, #0x94]
  0275c	e59d0014	 ldr         r0, [sp, #0x14]
  02760	eb000000	 bl          |?InsertNodeBefore@@YAXPAUtMEMLIST@@0@Z|

; 887  : 
; 888  :     VALIDATE_HEAPS(fHighPri);

  02764	e59d1010	 ldr         r1, [sp, #0x10]
  02768	e59d00a4	 ldr         r0, [sp, #0xA4]
  0276c	eb000000	 bl          |?ValidateHeaps@CPhysMem@@AAAHH@Z|

; 889  : 
; 890  :     LeaveCriticalSection(&m_csLock);

  02770	e59d30a4	 ldr         r3, [sp, #0xA4]
  02774	e2830010	 add         r0, r3, #0x10
  02778	eb000000	 bl          LeaveCriticalSection

; 891  : 
; 892  :     DEBUGCHK( pNode->dwPhysAddr % CPHYSMEM_MEMORY_ALIGNMENT == 0 );

  0277c	e59d3014	 ldr         r3, [sp, #0x14]
  02780	e2833004	 add         r3, r3, #4
  02784	e5931000	 ldr         r1, [r3]
  02788	e3a00020	 mov         r0, #0x20
  0278c	eb000000	 bl          __rt_udiv
  02790	e3510000	 cmp         r1, #0
  02794	1a000002	 bne         |$LN52@AllocateMe|
  02798	e3a03001	 mov         r3, #1
  0279c	e58d3098	 str         r3, [sp, #0x98]
  027a0	ea000007	 b           |$LN53@AllocateMe|
  027a4		 |$LN52@AllocateMe|
  027a4	e3a03fdf	 mov         r3, #0xDF, 30
  027a8	e59f2044	 ldr         r2, [pc, #0x44]
  027ac	e59f103c	 ldr         r1, [pc, #0x3C]
  027b0	e59f0034	 ldr         r0, [pc, #0x34]
  027b4	eb000000	 bl          NKDbgPrintfW
  027b8	e6000010	 __debugbreak_ce
  027bc	e3a03000	 mov         r3, #0
  027c0	e58d3098	 str         r3, [sp, #0x98]
  027c4		 |$LN53@AllocateMe|

; 893  :     *pVirtAddr = PUCHAR( pNode->dwVirtAddr );

  027c4	e59d3014	 ldr         r3, [sp, #0x14]
  027c8	e5932000	 ldr         r2, [r3]
  027cc	e59d30b0	 ldr         r3, [sp, #0xB0]
  027d0	e5832000	 str         r2, [r3]

; 894  :     return TRUE;

  027d4	e3a03001	 mov         r3, #1
  027d8	e58d3028	 str         r3, [sp, #0x28]
  027dc		 |$LN14@AllocateMe|

; 895  : }

  027dc	e59d0028	 ldr         r0, [sp, #0x28]
  027e0	e28dd09c	 add         sp, sp, #0x9C
  027e4	e89d6000	 ldmia       sp, {sp, lr}
  027e8	e12fff1e	 bx          lr
  027ec		 |$LN57@AllocateMe|
  027ec		 |$LN58@AllocateMe|
  027ec	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  027f0		 |$LN59@AllocateMe|
  027f0	00000000	 DCD         |dpCurSettings|
  027f4		 |$LN60@AllocateMe|
  027f4	00000000	 DCD         |??_C@_1LM@NABMAHLD@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  027f8		 |$LN61@AllocateMe|
  027f8	00000000	 DCD         |??_C@_1JG@MNOBEEOD@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAP?$AAA?$AA?5?$AA?$DN?$AA?5?$AA0@|
  027fc		 |$LN62@AllocateMe|
  027fc	00000000	 DCD         |??_C@_1FM@OOLOAMIO@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAN?$AAo?$AA?5?$AAm?$AAe?$AAm@|
  02800		 |$LN63@AllocateMe|
  02800	00000000	 DCD         |??_C@_1HA@LDBHCAGE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe?$AA?5?$AAa@|
  02804		 |$LN64@AllocateMe|
  02804	00000000	 DCD         |??_C@_1FK@GOKAFDHN@?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAD?$AAe?$AAs?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CI?$AAr?$AAo?$AAu?$AAn?$AAd@|
  02808		 |$M34575|

			 ENDP  ; |?AllocateMemory@CPhysMem@@QAAHPBGKQAPAEKPAH@Z|, CPhysMem::AllocateMemory

	EXPORT	|PulseEvent|
	EXPORT	|??_C@_1GC@CLHBJKAN@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAa?$AAf?$AAt?$AAe?$AAr?$AA?5?$AAf?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@BIHKKMPG@?$AAF?$AAr?$AAe?$AAe?$AAd?$AA?5?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IO@GHNBCJEB@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAF?$AAr?$AAe?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAP?$AAA?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@CAKPDPGE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe?$AA?5?$AAf@| [ DATA ] ; `string'
	EXPORT	|?FreeMemory@CPhysMem@@QAAXQAEKK@Z|	; CPhysMem::FreeMemory

  00060			 AREA	 |.pdata|, PDATA
|$T34619| DCD	|$LN38@FreeMemory|
	DCD	0x40013b04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@CLHBJKAN@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAa?$AAf?$AAt?$AAe?$AAr?$AA?5?$AAf?$AAr@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, ":", 0x0, " ", 0x0, "H", 0x0, "e", 0x0, "a"
	DCB	0x0, "p", 0x0, " ", 0x0, "p", 0x0, "r", 0x0, "i", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "a"
	DCB	0x0, "f", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "f"
	DCB	0x0, "r", 0x0, "e", 0x0, "e", 0x0, " ", 0x0, "V", 0x0, "A"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ":", 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@BIHKKMPG@?$AAF?$AAr?$AAe?$AAe?$AAd?$AA?5?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?$AA@| DCB "F"
	DCB	0x0, "r", 0x0, "e", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "M"
	DCB	0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IO@GHNBCJEB@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAF?$AAr?$AAe?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAP?$AAA?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "F", 0x0, "r", 0x0, "e", 0x0, "e"
	DCB	0x0, "M", 0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y"
	DCB	0x0, " ", 0x0, ":", 0x0, " ", 0x0, "P", 0x0, "A", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "V", 0x0, "A"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "S"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "s", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@CAKPDPGE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe?$AA?5?$AAf@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, ":", 0x0, " ", 0x0, "H", 0x0, "e", 0x0, "a"
	DCB	0x0, "p", 0x0, " ", 0x0, "p", 0x0, "r", 0x0, "i", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "b"
	DCB	0x0, "e", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, "e", 0x0, " "
	DCB	0x0, "f", 0x0, "r", 0x0, "e", 0x0, "e", 0x0, " ", 0x0, "V"
	DCB	0x0, "A", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ":", 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  02808			 AREA	 |.text|, CODE, ARM

  02808		 |?FreeMemory@CPhysMem@@QAAXQAEKK@Z| PROC ; CPhysMem::FreeMemory

; 915  : {

  02808		 |$LN38@FreeMemory|
  02808	e1a0c00d	 mov         r12, sp
  0280c	e92d000f	 stmdb       sp!, {r0 - r3}
  02810	e92d5000	 stmdb       sp!, {r12, lr}
  02814	e24dd054	 sub         sp, sp, #0x54
  02818		 |$M34616|

; 916  :     // for now, only the following sets of flags should be passed in
; 917  :     DEBUGCHK( dwFlags == 0 || // low priority, allow blocking
; 918  :               dwFlags == CPHYSMEM_FLAG_NOBLOCK || // low priority, no blocking
; 919  :               dwFlags == (CPHYSMEM_FLAG_HIGHPRIORITY | CPHYSMEM_FLAG_NOBLOCK) ); // high pri, no blocking

  02818	e59d3068	 ldr         r3, [sp, #0x68]
  0281c	e3530000	 cmp         r3, #0
  02820	0a00000f	 beq         |$LN8@FreeMemory|
  02824	e59d3068	 ldr         r3, [sp, #0x68]
  02828	e3530002	 cmp         r3, #2
  0282c	0a00000c	 beq         |$LN8@FreeMemory|
  02830	e59d3068	 ldr         r3, [sp, #0x68]
  02834	e3530003	 cmp         r3, #3
  02838	0a000009	 beq         |$LN8@FreeMemory|
  0283c	e3a03c03	 mov         r3, #3, 24
  02840	e3833097	 orr         r3, r3, #0x97
  02844	e59f2498	 ldr         r2, [pc, #0x498]
  02848	e59f148c	 ldr         r1, [pc, #0x48C]
  0284c	e59f048c	 ldr         r0, [pc, #0x48C]
  02850	eb000000	 bl          NKDbgPrintfW
  02854	e6000010	 __debugbreak_ce
  02858	e3a03000	 mov         r3, #0
  0285c	e58d3014	 str         r3, [sp, #0x14]
  02860	ea000001	 b           |$LN9@FreeMemory|
  02864		 |$LN8@FreeMemory|
  02864	e3a03001	 mov         r3, #1
  02868	e58d3014	 str         r3, [sp, #0x14]
  0286c		 |$LN9@FreeMemory|

; 920  : 
; 921  :     BOOL fRemoved = FALSE;

  0286c	e3a03000	 mov         r3, #0
  02870	e58d3004	 str         r3, [sp, #4]

; 922  :     BOOL fHighPri = !!(dwFlags & CPHYSMEM_FLAG_HIGHPRIORITY);

  02874	e59d3068	 ldr         r3, [sp, #0x68]
  02878	e3130001	 tst         r3, #1
  0287c	0a000002	 beq         |$LN10@FreeMemory|
  02880	e3a03001	 mov         r3, #1
  02884	e58d3018	 str         r3, [sp, #0x18]
  02888	ea000001	 b           |$LN11@FreeMemory|
  0288c		 |$LN10@FreeMemory|
  0288c	e3a03000	 mov         r3, #0
  02890	e58d3018	 str         r3, [sp, #0x18]
  02894		 |$LN11@FreeMemory|
  02894	e59d3018	 ldr         r3, [sp, #0x18]
  02898	e58d300c	 str         r3, [sp, #0xC]

; 923  : 
; 924  :     // caller of FreeMemory is capable of calling
; 925  :     // PaToVa or VaToPa if they need to. Also, 
; 926  :     // we shouldn't be called to free NULL memory.
; 927  :     DEBUGCHK( virtAddr != NULL && physAddr != 0 ); 

  0289c	e59d3060	 ldr         r3, [sp, #0x60]
  028a0	e3530000	 cmp         r3, #0
  028a4	0a000005	 beq         |$LN12@FreeMemory|
  028a8	e59d3064	 ldr         r3, [sp, #0x64]
  028ac	e3530000	 cmp         r3, #0
  028b0	0a000002	 beq         |$LN12@FreeMemory|
  028b4	e3a03001	 mov         r3, #1
  028b8	e58d301c	 str         r3, [sp, #0x1C]
  028bc	ea000008	 b           |$LN13@FreeMemory|
  028c0		 |$LN12@FreeMemory|
  028c0	e3a03c03	 mov         r3, #3, 24
  028c4	e383309f	 orr         r3, r3, #0x9F
  028c8	e59f2414	 ldr         r2, [pc, #0x414]
  028cc	e59f1408	 ldr         r1, [pc, #0x408]
  028d0	e59f0408	 ldr         r0, [pc, #0x408]
  028d4	eb000000	 bl          NKDbgPrintfW
  028d8	e6000010	 __debugbreak_ce
  028dc	e3a03000	 mov         r3, #0
  028e0	e58d301c	 str         r3, [sp, #0x1C]
  028e4		 |$LN13@FreeMemory|

; 928  :     DEBUGCHK( virtAddr == PaToVa( physAddr ) );

  028e4	e59d1064	 ldr         r1, [sp, #0x64]
  028e8	e59d005c	 ldr         r0, [sp, #0x5C]
  028ec	eb000000	 bl          |?PaToVa@CPhysMem@@QAAPAEK@Z|
  028f0	e58d0020	 str         r0, [sp, #0x20]
  028f4	e59d2060	 ldr         r2, [sp, #0x60]
  028f8	e59d3020	 ldr         r3, [sp, #0x20]
  028fc	e1520003	 cmp         r2, r3
  02900	1a000002	 bne         |$LN14@FreeMemory|
  02904	e3a03001	 mov         r3, #1
  02908	e58d3024	 str         r3, [sp, #0x24]
  0290c	ea000007	 b           |$LN15@FreeMemory|
  02910		 |$LN14@FreeMemory|
  02910	e3a03e3a	 mov         r3, #0x3A, 28
  02914	e59f23c8	 ldr         r2, [pc, #0x3C8]
  02918	e59f13bc	 ldr         r1, [pc, #0x3BC]
  0291c	e59f03bc	 ldr         r0, [pc, #0x3BC]
  02920	eb000000	 bl          NKDbgPrintfW
  02924	e6000010	 __debugbreak_ce
  02928	e3a03000	 mov         r3, #0
  0292c	e58d3024	 str         r3, [sp, #0x24]
  02930		 |$LN15@FreeMemory|

; 929  :     DEBUGCHK( physAddr % CPHYSMEM_MEMORY_ALIGNMENT == 0 );

  02930	e59d1064	 ldr         r1, [sp, #0x64]
  02934	e3a00020	 mov         r0, #0x20
  02938	eb000000	 bl          __rt_udiv
  0293c	e3510000	 cmp         r1, #0
  02940	1a000002	 bne         |$LN16@FreeMemory|
  02944	e3a03001	 mov         r3, #1
  02948	e58d3028	 str         r3, [sp, #0x28]
  0294c	ea000008	 b           |$LN17@FreeMemory|
  02950		 |$LN16@FreeMemory|
  02950	e3a03c03	 mov         r3, #3, 24
  02954	e38330a1	 orr         r3, r3, #0xA1
  02958	e59f2384	 ldr         r2, [pc, #0x384]
  0295c	e59f1378	 ldr         r1, [pc, #0x378]
  02960	e59f0378	 ldr         r0, [pc, #0x378]
  02964	eb000000	 bl          NKDbgPrintfW
  02968	e6000010	 __debugbreak_ce
  0296c	e3a03000	 mov         r3, #0
  02970	e58d3028	 str         r3, [sp, #0x28]
  02974		 |$LN17@FreeMemory|

; 930  : 
; 931  :     EnterCriticalSection(&m_csLock);

  02974	e59d305c	 ldr         r3, [sp, #0x5C]
  02978	e2830010	 add         r0, r3, #0x10
  0297c	eb000000	 bl          EnterCriticalSection

; 932  : 
; 933  :     PMEMLIST pNode = FirstNode(INUSELIST(fHighPri));

  02980	e59d300c	 ldr         r3, [sp, #0xC]
  02984	e3530000	 cmp         r3, #0
  02988	0a000004	 beq         |$LN18@FreeMemory|
  0298c	e59d305c	 ldr         r3, [sp, #0x5C]
  02990	e2833070	 add         r3, r3, #0x70
  02994	e5933000	 ldr         r3, [r3]
  02998	e58d302c	 str         r3, [sp, #0x2C]
  0299c	ea000003	 b           |$LN19@FreeMemory|
  029a0		 |$LN18@FreeMemory|
  029a0	e59d305c	 ldr         r3, [sp, #0x5C]
  029a4	e2833060	 add         r3, r3, #0x60
  029a8	e5933000	 ldr         r3, [r3]
  029ac	e58d302c	 str         r3, [sp, #0x2C]
  029b0		 |$LN19@FreeMemory|
  029b0	e59d002c	 ldr         r0, [sp, #0x2C]
  029b4	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  029b8	e58d0030	 str         r0, [sp, #0x30]
  029bc	e59d3030	 ldr         r3, [sp, #0x30]
  029c0	e58d3008	 str         r3, [sp, #8]

; 934  :     
; 935  :     DEBUGMSG( ZONE_CPHYSMEM && ZONE_VERBOSE, (TEXT("CPhysMem: Heap pri = %d before free VA = 0x%08x:\n"), fHighPri, virtAddr ) );

  029c4	e59f3310	 ldr         r3, [pc, #0x310]
  029c8	e5933440	 ldr         r3, [r3, #0x440]
  029cc	e3130b02	 tst         r3, #2, 22
  029d0	0a00000a	 beq         |$LN20@FreeMemory|
  029d4	e59f3300	 ldr         r3, [pc, #0x300]
  029d8	e5933440	 ldr         r3, [r3, #0x440]
  029dc	e3130a01	 tst         r3, #1, 20
  029e0	0a000006	 beq         |$LN20@FreeMemory|
  029e4	e59d2060	 ldr         r2, [sp, #0x60]
  029e8	e59d100c	 ldr         r1, [sp, #0xC]
  029ec	e59f02fc	 ldr         r0, [pc, #0x2FC]
  029f0	eb000000	 bl          NKDbgPrintfW
  029f4	e3a03001	 mov         r3, #1
  029f8	e58d3034	 str         r3, [sp, #0x34]
  029fc	ea000001	 b           |$LN21@FreeMemory|
  02a00		 |$LN20@FreeMemory|
  02a00	e3a03000	 mov         r3, #0
  02a04	e58d3034	 str         r3, [sp, #0x34]
  02a08		 |$LN21@FreeMemory|

; 936  :     VALIDATE_HEAPS(fHighPri);

  02a08	e59d100c	 ldr         r1, [sp, #0xC]
  02a0c	e59d005c	 ldr         r0, [sp, #0x5C]
  02a10	eb000000	 bl          |?ValidateHeaps@CPhysMem@@AAAHH@Z|
  02a14		 |$LN5@FreeMemory|

; 937  : 
; 938  :     //
; 939  :     // Walk the list looking for this block
; 940  :     //
; 941  :     while (!EndOfList(INUSELIST(fHighPri), pNode)) {

  02a14	e59d300c	 ldr         r3, [sp, #0xC]
  02a18	e3530000	 cmp         r3, #0
  02a1c	0a000004	 beq         |$LN22@FreeMemory|
  02a20	e59d305c	 ldr         r3, [sp, #0x5C]
  02a24	e2833070	 add         r3, r3, #0x70
  02a28	e5933000	 ldr         r3, [r3]
  02a2c	e58d3038	 str         r3, [sp, #0x38]
  02a30	ea000003	 b           |$LN23@FreeMemory|
  02a34		 |$LN22@FreeMemory|
  02a34	e59d305c	 ldr         r3, [sp, #0x5C]
  02a38	e2833060	 add         r3, r3, #0x60
  02a3c	e5933000	 ldr         r3, [r3]
  02a40	e58d3038	 str         r3, [sp, #0x38]
  02a44		 |$LN23@FreeMemory|
  02a44	e59d2038	 ldr         r2, [sp, #0x38]
  02a48	e59d3008	 ldr         r3, [sp, #8]
  02a4c	e1520003	 cmp         r2, r3
  02a50	1a000002	 bne         |$LN24@FreeMemory|
  02a54	e3a03001	 mov         r3, #1
  02a58	e58d303c	 str         r3, [sp, #0x3C]
  02a5c	ea000001	 b           |$LN25@FreeMemory|
  02a60		 |$LN24@FreeMemory|
  02a60	e3a03000	 mov         r3, #0
  02a64	e58d303c	 str         r3, [sp, #0x3C]
  02a68		 |$LN25@FreeMemory|
  02a68	e59d303c	 ldr         r3, [sp, #0x3C]
  02a6c	e3530000	 cmp         r3, #0
  02a70	1a000049	 bne         |$LN4@FreeMemory|

; 942  : 
; 943  :         if ((pNode->dwVirtAddr == (DWORD) virtAddr) &&
; 944  :             (pNode->dwPhysAddr == (DWORD) physAddr)) {

  02a74	e59d3008	 ldr         r3, [sp, #8]
  02a78	e5932000	 ldr         r2, [r3]
  02a7c	e59d3060	 ldr         r3, [sp, #0x60]
  02a80	e1520003	 cmp         r2, r3
  02a84	1a00003f	 bne         |$LN3@FreeMemory|
  02a88	e59d3008	 ldr         r3, [sp, #8]
  02a8c	e2833004	 add         r3, r3, #4
  02a90	e5932000	 ldr         r2, [r3]
  02a94	e59d3064	 ldr         r3, [sp, #0x64]
  02a98	e1520003	 cmp         r2, r3
  02a9c	1a000039	 bne         |$LN3@FreeMemory|

; 945  :             
; 946  :         #ifdef DEBUG
; 947  :             // trash this memory
; 948  :             DEBUGCHK( pNode->dwSize > 0 ); // otherwise, why are we calling FreeMemory??

  02aa0	e59d3008	 ldr         r3, [sp, #8]
  02aa4	e2833008	 add         r3, r3, #8
  02aa8	e5933000	 ldr         r3, [r3]
  02aac	e3530000	 cmp         r3, #0
  02ab0	9a000002	 bls         |$LN26@FreeMemory|
  02ab4	e3a03001	 mov         r3, #1
  02ab8	e58d3040	 str         r3, [sp, #0x40]
  02abc	ea000007	 b           |$LN27@FreeMemory|
  02ac0		 |$LN26@FreeMemory|
  02ac0	e3a03fed	 mov         r3, #0xED, 30
  02ac4	e59f2218	 ldr         r2, [pc, #0x218]
  02ac8	e59f120c	 ldr         r1, [pc, #0x20C]
  02acc	e59f020c	 ldr         r0, [pc, #0x20C]
  02ad0	eb000000	 bl          NKDbgPrintfW
  02ad4	e6000010	 __debugbreak_ce
  02ad8	e3a03000	 mov         r3, #0
  02adc	e58d3040	 str         r3, [sp, #0x40]
  02ae0		 |$LN27@FreeMemory|

; 949  :             memset( PUCHAR( pNode->dwVirtAddr ), GARBAGE, pNode->dwSize );

  02ae0	e59d3008	 ldr         r3, [sp, #8]
  02ae4	e2833008	 add         r3, r3, #8
  02ae8	e5932000	 ldr         r2, [r3]
  02aec	e3a010aa	 mov         r1, #0xAA
  02af0	e59d3008	 ldr         r3, [sp, #8]
  02af4	e5930000	 ldr         r0, [r3]
  02af8	eb000000	 bl          memset

; 950  : 
; 951  :             DEBUGMSG(ZONE_CPHYSMEM, 
; 952  :                      (TEXT("CPhysMem FreeMemory : PA = 0x%08X, VA = 0x%08X, Size = %d, Desc = %s\r\n"),
; 953  :                      pNode->dwPhysAddr, pNode->dwVirtAddr, pNode->dwSize, pNode->szDescription ));

  02afc	e59f31d8	 ldr         r3, [pc, #0x1D8]
  02b00	e5933440	 ldr         r3, [r3, #0x440]
  02b04	e3130b02	 tst         r3, #2, 22
  02b08	0a00000f	 beq         |$LN28@FreeMemory|
  02b0c	e59d3008	 ldr         r3, [sp, #8]
  02b10	e2833014	 add         r3, r3, #0x14
  02b14	e58d3000	 str         r3, [sp]
  02b18	e59d3008	 ldr         r3, [sp, #8]
  02b1c	e2833008	 add         r3, r3, #8
  02b20	e5933000	 ldr         r3, [r3]
  02b24	e59d2008	 ldr         r2, [sp, #8]
  02b28	e5922000	 ldr         r2, [r2]
  02b2c	e59d1008	 ldr         r1, [sp, #8]
  02b30	e2811004	 add         r1, r1, #4
  02b34	e5911000	 ldr         r1, [r1]
  02b38	e59f01ac	 ldr         r0, [pc, #0x1AC]
  02b3c	eb000000	 bl          NKDbgPrintfW
  02b40	e3a03001	 mov         r3, #1
  02b44	e58d3044	 str         r3, [sp, #0x44]
  02b48	ea000001	 b           |$LN29@FreeMemory|
  02b4c		 |$LN28@FreeMemory|
  02b4c	e3a03000	 mov         r3, #0
  02b50	e58d3044	 str         r3, [sp, #0x44]
  02b54		 |$LN29@FreeMemory|

; 954  : 
; 955  :             // change description
; 956  :             _tcscpy( pNode->szDescription, TEXT("Freed Memory") );

  02b54	e59f118c	 ldr         r1, [pc, #0x18C]
  02b58	e59d3008	 ldr         r3, [sp, #8]
  02b5c	e2830014	 add         r0, r3, #0x14
  02b60	eb000000	 bl          wcscpy

; 957  :         #endif // DEBUG
; 958  :             RemoveNode(pNode);

  02b64	e59d0008	 ldr         r0, [sp, #8]
  02b68	eb000000	 bl          |?RemoveNode@@YAXPAUtMEMLIST@@@Z|

; 959  :             AddNodeToFreeList(pNode, fHighPri);

  02b6c	e59d200c	 ldr         r2, [sp, #0xC]
  02b70	e59d1008	 ldr         r1, [sp, #8]
  02b74	e59d005c	 ldr         r0, [sp, #0x5C]
  02b78	eb000000	 bl          |?AddNodeToFreeList@CPhysMem@@AAAHPAUtMEMLIST@@H@Z|

; 960  :             fRemoved = TRUE;

  02b7c	e3a03001	 mov         r3, #1
  02b80	e58d3004	 str         r3, [sp, #4]

; 961  :             break;

  02b84	ea000004	 b           |$LN4@FreeMemory|
  02b88		 |$LN3@FreeMemory|

; 962  :         }
; 963  :         pNode = pNode->next;

  02b88	e59d3008	 ldr         r3, [sp, #8]
  02b8c	e283300c	 add         r3, r3, #0xC
  02b90	e5933000	 ldr         r3, [r3]
  02b94	e58d3008	 str         r3, [sp, #8]

; 964  :     }

  02b98	eaffff9d	 b           |$LN5@FreeMemory|
  02b9c		 |$LN4@FreeMemory|

; 965  :     
; 966  :     if (fHighPri && !fRemoved) {

  02b9c	e59d300c	 ldr         r3, [sp, #0xC]
  02ba0	e3530000	 cmp         r3, #0
  02ba4	0a000019	 beq         |$LN2@FreeMemory|
  02ba8	e59d3004	 ldr         r3, [sp, #4]
  02bac	e3530000	 cmp         r3, #0
  02bb0	1a000016	 bne         |$LN2@FreeMemory|

; 967  :         LeaveCriticalSection(&m_csLock);

  02bb4	e59d305c	 ldr         r3, [sp, #0x5C]
  02bb8	e2830010	 add         r0, r3, #0x10
  02bbc	eb000000	 bl          LeaveCriticalSection

; 968  : 
; 969  :         //
; 970  :         // Try removing from normal region.
; 971  :         //
; 972  :         DEBUGCHK( dwFlags == ( CPHYSMEM_FLAG_HIGHPRIORITY | CPHYSMEM_FLAG_NOBLOCK ) );

  02bc0	e59d3068	 ldr         r3, [sp, #0x68]
  02bc4	e3530003	 cmp         r3, #3
  02bc8	1a000002	 bne         |$LN30@FreeMemory|
  02bcc	e3a03001	 mov         r3, #1
  02bd0	e58d3048	 str         r3, [sp, #0x48]
  02bd4	ea000007	 b           |$LN31@FreeMemory|
  02bd8		 |$LN30@FreeMemory|
  02bd8	e3a03ff3	 mov         r3, #0xF3, 30
  02bdc	e59f2100	 ldr         r2, [pc, #0x100]
  02be0	e59f10f4	 ldr         r1, [pc, #0xF4]
  02be4	e59f00f4	 ldr         r0, [pc, #0xF4]
  02be8	eb000000	 bl          NKDbgPrintfW
  02bec	e6000010	 __debugbreak_ce
  02bf0	e3a03000	 mov         r3, #0
  02bf4	e58d3048	 str         r3, [sp, #0x48]
  02bf8		 |$LN31@FreeMemory|

; 973  :         FreeMemory( virtAddr,
; 974  :                     physAddr,
; 975  :                     CPHYSMEM_FLAG_NOBLOCK ); // dwFlags & ~CPHYSMEM_FLAG_HIGHPRIORITY

  02bf8	e3a03002	 mov         r3, #2
  02bfc	e59d2064	 ldr         r2, [sp, #0x64]
  02c00	e59d1060	 ldr         r1, [sp, #0x60]
  02c04	e59d005c	 ldr         r0, [sp, #0x5C]
  02c08	eb000000	 bl          |?FreeMemory@CPhysMem@@QAAXQAEKK@Z|

; 976  :         return;

  02c0c	ea00002e	 b           |$LN6@FreeMemory|
  02c10		 |$LN2@FreeMemory|

; 977  :     }
; 978  :     DEBUGCHK( fRemoved );

  02c10	e59d3004	 ldr         r3, [sp, #4]
  02c14	e3530000	 cmp         r3, #0
  02c18	0a000002	 beq         |$LN32@FreeMemory|
  02c1c	e3a03001	 mov         r3, #1
  02c20	e58d304c	 str         r3, [sp, #0x4C]
  02c24	ea000008	 b           |$LN33@FreeMemory|
  02c28		 |$LN32@FreeMemory|
  02c28	e3a03c03	 mov         r3, #3, 24
  02c2c	e38330d2	 orr         r3, r3, #0xD2
  02c30	e59f20ac	 ldr         r2, [pc, #0xAC]
  02c34	e59f10a0	 ldr         r1, [pc, #0xA0]
  02c38	e59f00a0	 ldr         r0, [pc, #0xA0]
  02c3c	eb000000	 bl          NKDbgPrintfW
  02c40	e6000010	 __debugbreak_ce
  02c44	e3a03000	 mov         r3, #0
  02c48	e58d304c	 str         r3, [sp, #0x4C]
  02c4c		 |$LN33@FreeMemory|

; 979  :     
; 980  :     DEBUGMSG( ZONE_CPHYSMEM && ZONE_VERBOSE, (TEXT("CPhysMem: Heap pri = %d after free VA = 0x%08x:\n"), fHighPri, virtAddr ) );

  02c4c	e59f3088	 ldr         r3, [pc, #0x88]
  02c50	e5933440	 ldr         r3, [r3, #0x440]
  02c54	e3130b02	 tst         r3, #2, 22
  02c58	0a00000a	 beq         |$LN34@FreeMemory|
  02c5c	e59f3078	 ldr         r3, [pc, #0x78]
  02c60	e5933440	 ldr         r3, [r3, #0x440]
  02c64	e3130a01	 tst         r3, #1, 20
  02c68	0a000006	 beq         |$LN34@FreeMemory|
  02c6c	e59d2060	 ldr         r2, [sp, #0x60]
  02c70	e59d100c	 ldr         r1, [sp, #0xC]
  02c74	e59f005c	 ldr         r0, [pc, #0x5C]
  02c78	eb000000	 bl          NKDbgPrintfW
  02c7c	e3a03001	 mov         r3, #1
  02c80	e58d3050	 str         r3, [sp, #0x50]
  02c84	ea000001	 b           |$LN35@FreeMemory|
  02c88		 |$LN34@FreeMemory|
  02c88	e3a03000	 mov         r3, #0
  02c8c	e58d3050	 str         r3, [sp, #0x50]
  02c90		 |$LN35@FreeMemory|

; 981  :     VALIDATE_HEAPS(fHighPri);

  02c90	e59d100c	 ldr         r1, [sp, #0xC]
  02c94	e59d005c	 ldr         r0, [sp, #0x5C]
  02c98	eb000000	 bl          |?ValidateHeaps@CPhysMem@@AAAHH@Z|

; 982  : 
; 983  :     LeaveCriticalSection(&m_csLock);

  02c9c	e59d305c	 ldr         r3, [sp, #0x5C]
  02ca0	e2830010	 add         r0, r3, #0x10
  02ca4	eb000000	 bl          LeaveCriticalSection

; 984  : 
; 985  :     //
; 986  :     // Signal everyone waiting for memory that some just became available.
; 987  :     //
; 988  :     if (m_fHasBlocked)

  02ca8	e59d305c	 ldr         r3, [sp, #0x5C]
  02cac	e2833030	 add         r3, r3, #0x30
  02cb0	e5933000	 ldr         r3, [r3]
  02cb4	e3530000	 cmp         r3, #0
  02cb8	0a000003	 beq         |$LN1@FreeMemory|

; 989  :         PulseEvent(m_hFreeMemEvent);

  02cbc	e59d305c	 ldr         r3, [sp, #0x5C]
  02cc0	e283302c	 add         r3, r3, #0x2C
  02cc4	e5930000	 ldr         r0, [r3]
  02cc8	eb000000	 bl          PulseEvent
  02ccc		 |$LN1@FreeMemory|
  02ccc		 |$LN6@FreeMemory|

; 990  : }

  02ccc	e28dd054	 add         sp, sp, #0x54
  02cd0	e89d6000	 ldmia       sp, {sp, lr}
  02cd4	e12fff1e	 bx          lr
  02cd8		 |$LN39@FreeMemory|
  02cd8		 |$LN40@FreeMemory|
  02cd8	00000000	 DCD         |??_C@_1GC@CLHBJKAN@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAa?$AAf?$AAt?$AAe?$AAr?$AA?5?$AAf?$AAr@|
  02cdc		 |$LN41@FreeMemory|
  02cdc	00000000	 DCD         |dpCurSettings|
  02ce0		 |$LN42@FreeMemory|
  02ce0	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  02ce4		 |$LN43@FreeMemory|
  02ce4	00000000	 DCD         |??_C@_1LM@NABMAHLD@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  02ce8		 |$LN44@FreeMemory|
  02ce8	00000000	 DCD         |??_C@_1BK@BIHKKMPG@?$AAF?$AAr?$AAe?$AAe?$AAd?$AA?5?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?$AA@|
  02cec		 |$LN45@FreeMemory|
  02cec	00000000	 DCD         |??_C@_1IO@GHNBCJEB@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAF?$AAr?$AAe?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAP?$AAA?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8@|
  02cf0		 |$LN46@FreeMemory|
  02cf0	00000000	 DCD         |??_C@_1GE@CAKPDPGE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe?$AA?5?$AAf@|
  02cf4		 |$M34617|

			 ENDP  ; |?FreeMemory@CPhysMem@@QAAXQAEKK@Z|, CPhysMem::FreeMemory

	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T34633| DCD	|$LN5@PulseEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PulseEvent| PROC

; 211  : _inline BOOL PulseEvent(HANDLE h) {

  00000		 |$LN5@PulseEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M34630|

; 212  : 	return EventModify(h,EVENT_PULSE);

  00010	e3a01001	 mov         r1, #1
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 213  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M34631|

			 ENDP  ; |PulseEvent|

	EXPORT	|?ReleaseBlockedCalls@CPhysMem@@QAAHXZ|	; CPhysMem::ReleaseBlockedCalls

  00068			 AREA	 |.pdata|, PDATA
|$T34641| DCD	|$LN6@ReleaseBlo|
	DCD	0x40001304
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\usb2com\cphysmem.cpp

  02cf4			 AREA	 |.text|, CODE, ARM

  02cf4		 |?ReleaseBlockedCalls@CPhysMem@@QAAHXZ| PROC ; CPhysMem::ReleaseBlockedCalls

; 998  : {

  02cf4		 |$LN6@ReleaseBlo|
  02cf4	e1a0c00d	 mov         r12, sp
  02cf8	e92d0001	 stmdb       sp!, {r0}
  02cfc	e92d5000	 stmdb       sp!, {r12, lr}
  02d00	e24dd004	 sub         sp, sp, #4
  02d04		 |$M34638|

; 999  :     //
; 1000 :     // Signal everyone waiting for memory to check if they have been aborted.
; 1001 :     //
; 1002 :     if (m_fHasBlocked)

  02d04	e59d300c	 ldr         r3, [sp, #0xC]
  02d08	e2833030	 add         r3, r3, #0x30
  02d0c	e5933000	 ldr         r3, [r3]
  02d10	e3530000	 cmp         r3, #0
  02d14	0a000003	 beq         |$LN1@ReleaseBlo|

; 1003 :         PulseEvent(m_hFreeMemEvent);

  02d18	e59d300c	 ldr         r3, [sp, #0xC]
  02d1c	e283302c	 add         r3, r3, #0x2C
  02d20	e5930000	 ldr         r0, [r3]
  02d24	eb000000	 bl          PulseEvent
  02d28		 |$LN1@ReleaseBlo|

; 1004 :     
; 1005 :     return(TRUE);

  02d28	e3a03001	 mov         r3, #1
  02d2c	e58d3000	 str         r3, [sp]

; 1006 : }

  02d30	e59d0000	 ldr         r0, [sp]
  02d34	e28dd004	 add         sp, sp, #4
  02d38	e89d6000	 ldmia       sp, {sp, lr}
  02d3c	e12fff1e	 bx          lr
  02d40		 |$M34639|

			 ENDP  ; |?ReleaseBlockedCalls@CPhysMem@@QAAHXZ|, CPhysMem::ReleaseBlockedCalls

	END
