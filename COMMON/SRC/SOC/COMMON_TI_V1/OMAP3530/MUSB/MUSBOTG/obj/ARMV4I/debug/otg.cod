; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\OMAP3530\MUSB\MUSBOTG\otg.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1CC@CKFJFILD@?$AAU?$AAS?$AAB?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAr?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@EBHGALEG@?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAH?$AAi?$AAg?$AAh?$AAS?$AAp?$AAe?$AAe?$AAd?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@DFKBGJHN@?$AAs?$AAt?$AAa?$AAr?$AAt?$AAu?$AAp?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@EGEMNJNG@?$AAv?$AAb?$AAu?$AAs?$AA?4?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?4?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?gpHsUsbOtg@@3PAVOMAPMHSUSBOTG@@A| [ DATA ] ; gpHsUsbOtg
	EXPORT	|?g_busDx@@3W4_CEDEVICE_POWER_STATE@@A| [ DATA ] ; g_busDx

  00000			 AREA	 |.bss|, NOINIT
|?gpHsUsbOtg@@3PAVOMAPMHSUSBOTG@@A| % 0x4		; gpHsUsbOtg

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@CKFJFILD@?$AAU?$AAS?$AAB?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAr?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "r"
	DCB	0x0, "g", 0x0, "e", 0x0, "r", 0x0, "N", 0x0, "o", 0x0, "t"
	DCB	0x0, "i", 0x0, "f", 0x0, "y", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@EBHGALEG@?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAH?$AAi?$AAg?$AAh?$AAS?$AAp?$AAe?$AAe?$AAd?$AA?$AA@| DCB "D"
	DCB	0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, "H", 0x0, "i", 0x0, "g", 0x0, "h", 0x0, "S", 0x0, "p"
	DCB	0x0, "e", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@DFKBGJHN@?$AAs?$AAt?$AAa?$AAr?$AAt?$AAu?$AAp?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "u", 0x0, "p"
	DCB	0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u"
	DCB	0x0, "t", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.data|, DATA
|pChargerNameEvt| DCD |??_C@_1CC@EGEMNJNG@?$AAv?$AAb?$AAu?$AAs?$AA?4?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?4?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?$AA@|
|?g_busDx@@3W4_CEDEVICE_POWER_STATE@@A| DCD 0x4		; g_busDx

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@EGEMNJNG@?$AAv?$AAb?$AAu?$AAs?$AA?4?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?4?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?$AA@| DCB "v"
	DCB	0x0, "b", 0x0, "u", 0x0, "s", 0x0, ".", 0x0, "p", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, ".", 0x0, "e", 0x0, "v"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, 0x0, 0x0 ; `string'
	EXPORT	|??0OMAPMHSUSBOTG@@QAA@PBG@Z|		; OMAPMHSUSBOTG::OMAPMHSUSBOTG
	EXPORT	|?CreateUSBOTGObject@@YAPAVUSBOTG@@PAG@Z| ; CreateUSBOTGObject
	IMPORT	|??2@YAPAXI@Z|				; operator new

  00000			 AREA	 |.pdata|, PDATA
|$T42785| DCD	|$LN7@CreateUSBO|
	DCD	0x40002004
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbotg\otg.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CreateUSBOTGObject@@YAPAVUSBOTG@@PAG@Z| PROC ; CreateUSBOTGObject

; 168  : {

  00000		 |$LN7@CreateUSBO|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd014	 sub         sp, sp, #0x14
  00010		 |$M42782|

; 169  : 
; 170  :     gpHsUsbOtg = new OMAPMHSUSBOTG (lpActivePath) ;

  00010	e3a00f69	 mov         r0, #0x69, 30
  00014	eb000000	 bl          |??2@YAPAXI@Z|
  00018	e58d0008	 str         r0, [sp, #8]
  0001c	e59d3008	 ldr         r3, [sp, #8]
  00020	e58d3000	 str         r3, [sp]
  00024	e59d3000	 ldr         r3, [sp]
  00028	e3530000	 cmp         r3, #0
  0002c	0a000006	 beq         |$LN3@CreateUSBO|
  00030	e59d101c	 ldr         r1, [sp, #0x1C]
  00034	e59d0000	 ldr         r0, [sp]
  00038	eb000000	 bl          |??0OMAPMHSUSBOTG@@QAA@PBG@Z|
  0003c	e58d000c	 str         r0, [sp, #0xC]
  00040	e59d300c	 ldr         r3, [sp, #0xC]
  00044	e58d3010	 str         r3, [sp, #0x10]
  00048	ea000001	 b           |$LN4@CreateUSBO|
  0004c		 |$LN3@CreateUSBO|
  0004c	e3a03000	 mov         r3, #0
  00050	e58d3010	 str         r3, [sp, #0x10]
  00054		 |$LN4@CreateUSBO|
  00054	e59d2010	 ldr         r2, [sp, #0x10]
  00058	e59f301c	 ldr         r3, [pc, #0x1C]
  0005c	e5832000	 str         r2, [r3]

; 171  :     return gpHsUsbOtg;

  00060	e59f3014	 ldr         r3, [pc, #0x14]
  00064	e5933000	 ldr         r3, [r3]
  00068	e58d3004	 str         r3, [sp, #4]

; 172  : }

  0006c	e59d0004	 ldr         r0, [sp, #4]
  00070	e28dd014	 add         sp, sp, #0x14
  00074	e89d6000	 ldmia       sp, {sp, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$LN8@CreateUSBO|
  0007c		 |$LN9@CreateUSBO|
  0007c	00000000	 DCD         |?gpHsUsbOtg@@3PAVOMAPMHSUSBOTG@@A|
  00080		 |$M42783|

			 ENDP  ; |?CreateUSBOTGObject@@YAPAVUSBOTG@@PAG@Z|, CreateUSBOTGObject

	EXPORT	|?DeleteUSBOTGObject@@YAXPAVUSBOTG@@@Z|	; DeleteUSBOTGObject

  00008			 AREA	 |.pdata|, PDATA
|$T42796| DCD	|$LN8@DeleteUSBO|
	DCD	0x40001f04
; Function compile flags: /Odtp

  00080			 AREA	 |.text|, CODE, ARM

  00080		 |?DeleteUSBOTGObject@@YAXPAVUSBOTG@@@Z| PROC ; DeleteUSBOTGObject

; 194  : {

  00080		 |$LN8@DeleteUSBO|
  00080	e1a0c00d	 mov         r12, sp
  00084	e92d0001	 stmdb       sp!, {r0}
  00088	e92d5000	 stmdb       sp!, {r12, lr}
  0008c	e24dd010	 sub         sp, sp, #0x10
  00090		 |$M42793|

; 195  :     if (pUsbOtg)

  00090	e59d3018	 ldr         r3, [sp, #0x18]
  00094	e3530000	 cmp         r3, #0
  00098	0a000014	 beq         |$LN1@DeleteUSBO|

; 196  :         delete pUsbOtg;

  0009c	e59d3018	 ldr         r3, [sp, #0x18]
  000a0	e58d3004	 str         r3, [sp, #4]
  000a4	e59d3004	 ldr         r3, [sp, #4]
  000a8	e58d3000	 str         r3, [sp]
  000ac	e59d3000	 ldr         r3, [sp]
  000b0	e3530000	 cmp         r3, #0
  000b4	0a00000b	 beq         |$LN4@DeleteUSBO|
  000b8	e3a01001	 mov         r1, #1
  000bc	e59d3000	 ldr         r3, [sp]
  000c0	e5933000	 ldr         r3, [r3]
  000c4	e2833008	 add         r3, r3, #8
  000c8	e59d0000	 ldr         r0, [sp]
  000cc	e5933000	 ldr         r3, [r3]
  000d0	e1a0e00f	 mov         lr, pc
  000d4	e12fff13	 bx          r3
  000d8	e58d0008	 str         r0, [sp, #8]
  000dc	e59d3008	 ldr         r3, [sp, #8]
  000e0	e58d300c	 str         r3, [sp, #0xC]
  000e4	ea000001	 b           |$LN5@DeleteUSBO|
  000e8		 |$LN4@DeleteUSBO|
  000e8	e3a03000	 mov         r3, #0
  000ec	e58d300c	 str         r3, [sp, #0xC]
  000f0		 |$LN5@DeleteUSBO|
  000f0		 |$LN1@DeleteUSBO|

; 197  : }

  000f0	e28dd010	 add         sp, sp, #0x10
  000f4	e89d6000	 ldmia       sp, {sp, lr}
  000f8	e12fff1e	 bx          lr
  000fc		 |$M42794|

			 ENDP  ; |?DeleteUSBOTGObject@@YAXPAVUSBOTG@@@Z|, DeleteUSBOTGObject

	EXPORT	|??_C@_1CG@OKCLCNHI@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAI?$AAd?$AAG?$AAn?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@KLGKOOAF@?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAI?$AAd?$AAG?$AAn?$AAd?$AA?3?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_7OMAPMHSUSBIdGnd@@6B@| [ DATA ]	; OMAPMHSUSBIdGnd::`vftable'
	EXPORT	|??0CMiniThread@@QAA@KH@Z|		; CMiniThread::CMiniThread
	EXPORT	|??0CLockObject@@QAA@XZ|		; CLockObject::CLockObject
	EXPORT	|??0OMAPMHSUSBIdGnd@@QAA@PAVOMAPMHSUSBOTG@@@Z| ; OMAPMHSUSBIdGnd::OMAPMHSUSBIdGnd
	EXPORT	|?ThreadRun@OMAPMHSUSBIdGnd@@EAAKXZ|	; OMAPMHSUSBIdGnd::ThreadRun
	EXPORT	|?Init@OMAPMHSUSBIdGnd@@UAAHXZ|		; OMAPMHSUSBIdGnd::Init
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
	IMPORT	|CreateEventW|
	IMPORT	|??_EOMAPMHSUSBIdGnd@@UAAPAXI@Z|, WEAK |??_GOMAPMHSUSBIdGnd@@UAAPAXI@Z| ; OMAPMHSUSBIdGnd::`vector deleting destructor', OMAPMHSUSBIdGnd::`scalar deleting destructor'

  00010			 AREA	 |.pdata|, PDATA
|$T42806| DCD	|$LN10@OMAPMHSUSB|
	DCD	0x40004404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@OKCLCNHI@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAI?$AAd?$AAG?$AAn?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, "M", 0x0, "H"
	DCB	0x0, "S", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "I", 0x0, "d"
	DCB	0x0, "G", 0x0, "n", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@KLGKOOAF@?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAI?$AAd?$AAG?$AAn?$AAd?$AA?3?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "M", 0x0, "H", 0x0, "S"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "I", 0x0, "d", 0x0, "G"
	DCB	0x0, "n", 0x0, "d", 0x0, ":", 0x0, "F", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "c", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, " ", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7OMAPMHSUSBIdGnd@@6B@| DCD |?ThreadRun@OMAPMHSUSBIdGnd@@EAAKXZ| ; OMAPMHSUSBIdGnd::`vftable'
	DCD	|??_EOMAPMHSUSBIdGnd@@UAAPAXI@Z|
	DCD	|?Init@OMAPMHSUSBIdGnd@@UAAHXZ|
; Function compile flags: /Odtp

  000fc			 AREA	 |.text|, CODE, ARM

  000fc		 |??0OMAPMHSUSBIdGnd@@QAA@PAVOMAPMHSUSBOTG@@@Z| PROC ; OMAPMHSUSBIdGnd::OMAPMHSUSBIdGnd

; 202  : {

  000fc		 |$LN10@OMAPMHSUSB|
  000fc	e1a0c00d	 mov         r12, sp
  00100	e92d0003	 stmdb       sp!, {r0, r1}
  00104	e92d5000	 stmdb       sp!, {r12, lr}
  00108	e24dd018	 sub         sp, sp, #0x18
  0010c		 |$M42803|
  0010c	e59d3020	 ldr         r3, [sp, #0x20]
  00110	e2830018	 add         r0, r3, #0x18
  00114	eb000000	 bl          |??0CLockObject@@QAA@XZ|
  00118	e58d0004	 str         r0, [sp, #4]
  0011c	e3a02001	 mov         r2, #1
  00120	e3a01000	 mov         r1, #0
  00124	e59d0020	 ldr         r0, [sp, #0x20]
  00128	eb000000	 bl          |??0CMiniThread@@QAA@KH@Z|
  0012c	e58d0008	 str         r0, [sp, #8]
  00130	e59f20d0	 ldr         r2, [pc, #0xD0]
  00134	e59d3020	 ldr         r3, [sp, #0x20]
  00138	e5832000	 str         r2, [r3]
  0013c	e59d3020	 ldr         r3, [sp, #0x20]
  00140	e283202c	 add         r2, r3, #0x2C
  00144	e59d3024	 ldr         r3, [sp, #0x24]
  00148	e5823000	 str         r3, [r2]

; 203  :     m_hIdGndIntrEvent = CreateEvent(NULL, FALSE, FALSE, NULL);

  0014c	e3a03000	 mov         r3, #0
  00150	e3a02000	 mov         r2, #0
  00154	e3a01000	 mov         r1, #0
  00158	e3a00000	 mov         r0, #0
  0015c	eb000000	 bl          CreateEventW
  00160	e58d000c	 str         r0, [sp, #0xC]
  00164	e59d3020	 ldr         r3, [sp, #0x20]
  00168	e2832030	 add         r2, r3, #0x30
  0016c	e59d300c	 ldr         r3, [sp, #0xC]
  00170	e5823000	 str         r3, [r2]

; 204  :     if (m_hIdGndIntrEvent == NULL)

  00174	e59d3020	 ldr         r3, [sp, #0x20]
  00178	e2833030	 add         r3, r3, #0x30
  0017c	e5933000	 ldr         r3, [r3]
  00180	e3530000	 cmp         r3, #0
  00184	1a00000b	 bne         |$LN1@OMAPMHSUSB|

; 205  :     {
; 206  :         DEBUGMSG(ZONE_OTG_ERROR, (TEXT("OMAPMHSUSBIdGnd:Failed to create event\r\n")));

  00188	e59f3070	 ldr         r3, [pc, #0x70]
  0018c	e5933440	 ldr         r3, [r3, #0x440]
  00190	e3130902	 tst         r3, #2, 18
  00194	0a000004	 beq         |$LN4@OMAPMHSUSB|
  00198	e59f0064	 ldr         r0, [pc, #0x64]
  0019c	eb000000	 bl          NKDbgPrintfW
  001a0	e3a03001	 mov         r3, #1
  001a4	e58d3010	 str         r3, [sp, #0x10]
  001a8	ea000001	 b           |$LN5@OMAPMHSUSB|
  001ac		 |$LN4@OMAPMHSUSB|
  001ac	e3a03000	 mov         r3, #0
  001b0	e58d3010	 str         r3, [sp, #0x10]
  001b4		 |$LN5@OMAPMHSUSB|

; 207  :         return;

  001b4	ea00000a	 b           |$LN2@OMAPMHSUSB|
  001b8		 |$LN1@OMAPMHSUSB|

; 208  :     }
; 209  : 
; 210  :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("-OMAPMHSUSBIdGnd\r\n")));

  001b8	e59f3040	 ldr         r3, [pc, #0x40]
  001bc	e5933440	 ldr         r3, [r3, #0x440]
  001c0	e3130a02	 tst         r3, #2, 20
  001c4	0a000004	 beq         |$LN6@OMAPMHSUSB|
  001c8	e59f002c	 ldr         r0, [pc, #0x2C]
  001cc	eb000000	 bl          NKDbgPrintfW
  001d0	e3a03001	 mov         r3, #1
  001d4	e58d3014	 str         r3, [sp, #0x14]
  001d8	ea000001	 b           |$LN7@OMAPMHSUSB|
  001dc		 |$LN6@OMAPMHSUSB|
  001dc	e3a03000	 mov         r3, #0
  001e0	e58d3014	 str         r3, [sp, #0x14]
  001e4		 |$LN7@OMAPMHSUSB|
  001e4		 |$LN2@OMAPMHSUSB|

; 211  : 
; 212  : }

  001e4	e59d3020	 ldr         r3, [sp, #0x20]
  001e8	e58d3000	 str         r3, [sp]
  001ec	e59d0000	 ldr         r0, [sp]
  001f0	e28dd018	 add         sp, sp, #0x18
  001f4	e89d6000	 ldmia       sp, {sp, lr}
  001f8	e12fff1e	 bx          lr
  001fc		 |$LN11@OMAPMHSUSB|
  001fc		 |$LN12@OMAPMHSUSB|
  001fc	00000000	 DCD         |??_C@_1CG@OKCLCNHI@?$AA?9?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAI?$AAd?$AAG?$AAn?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00200		 |$LN13@OMAPMHSUSB|
  00200	00000000	 DCD         |dpCurSettings|
  00204		 |$LN14@OMAPMHSUSB|
  00204	00000000	 DCD         |??_C@_1FC@KLGKOOAF@?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAI?$AAd?$AAG?$AAn?$AAd?$AA?3?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe@|
  00208		 |$LN15@OMAPMHSUSB|
  00208	00000000	 DCD         |??_7OMAPMHSUSBIdGnd@@6B@|
  0020c		 |$M42804|

			 ENDP  ; |??0OMAPMHSUSBIdGnd@@QAA@PAVOMAPMHSUSBOTG@@@Z|, OMAPMHSUSBIdGnd::OMAPMHSUSBIdGnd

	IMPORT	|InitializeCriticalSection|
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T42817| DCD	|$LN5@CLockObjec|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CLockObject@@QAA@XZ| PROC		; CLockObject::CLockObject

; 36   :     CLockObject()

  00000		 |$LN5@CLockObjec|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42814|

; 37   :     {
; 38   :         InitializeCriticalSection( &m_CSection );

  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          InitializeCriticalSection

; 39   :     };

  00018	e59d300c	 ldr         r3, [sp, #0xC]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M42815|

			 ENDP  ; |??0CLockObject@@QAA@XZ|, CLockObject::CLockObject

	EXPORT	|?ThreadProc@CMiniThread@@CAKPAX@Z|	; CMiniThread::ThreadProc
	EXPORT	|??_7CMiniThread@@6B@| [ DATA ]		; CMiniThread::`vftable'
	IMPORT	|CreateThread|
	IMPORT	|_purecall|
; File c:\wince600\public\common\oak\inc\cmthread.h

  00000			 AREA	 |.pdata|, PDATA
|$T42829| DCD	|$LN7@CMiniThrea|
	DCD	0x40003204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CMiniThread@@6B@| DCD |_purecall|			; CMiniThread::`vftable'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CMiniThread@@QAA@KH@Z| PROC	; CMiniThread::CMiniThread

; 29   :     CMiniThread( DWORD dwStackSize = 0, BOOL bSuspended = FALSE )

  00000		 |$LN7@CMiniThrea|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd01c	 sub         sp, sp, #0x1C
  00010		 |$M42826|
  00010	e59f20ac	 ldr         r2, [pc, #0xAC]
  00014	e59d3024	 ldr         r3, [sp, #0x24]
  00018	e5832000	 str         r2, [r3]

; 30   :     {
; 31   :         m_bTerminated = FALSE;

  0001c	e59d3024	 ldr         r3, [sp, #0x24]
  00020	e2832004	 add         r2, r3, #4
  00024	e3a03000	 mov         r3, #0
  00028	e5823000	 str         r3, [r2]

; 32   :         m_dwExitCode = ( DWORD ) - 1;

  0002c	e59d3024	 ldr         r3, [sp, #0x24]
  00030	e2832014	 add         r2, r3, #0x14
  00034	e3e03000	 mvn         r3, #0
  00038	e5823000	 str         r3, [r2]

; 33   :         m_hThreadHandle = ::CreateThread( NULL,
; 34   :                                           dwStackSize,
; 35   :                                           CMiniThread::ThreadProc,
; 36   :                                           ( LPVOID )this,
; 37   :                                           bSuspended ? CREATE_SUSPENDED : 0,
; 38   :                                           &m_dwThreadId );

  0003c	e59d302c	 ldr         r3, [sp, #0x2C]
  00040	e3530000	 cmp         r3, #0
  00044	0a000002	 beq         |$LN3@CMiniThrea|
  00048	e3a03004	 mov         r3, #4
  0004c	e58d3014	 str         r3, [sp, #0x14]
  00050	ea000001	 b           |$LN4@CMiniThrea|
  00054		 |$LN3@CMiniThrea|
  00054	e3a03000	 mov         r3, #0
  00058	e58d3014	 str         r3, [sp, #0x14]
  0005c		 |$LN4@CMiniThrea|
  0005c	e59d3024	 ldr         r3, [sp, #0x24]
  00060	e283300c	 add         r3, r3, #0xC
  00064	e58d3004	 str         r3, [sp, #4]
  00068	e59d3014	 ldr         r3, [sp, #0x14]
  0006c	e58d3000	 str         r3, [sp]
  00070	e59d3024	 ldr         r3, [sp, #0x24]
  00074	e59f2044	 ldr         r2, [pc, #0x44]
  00078	e59d1028	 ldr         r1, [sp, #0x28]
  0007c	e3a00000	 mov         r0, #0
  00080	eb000000	 bl          CreateThread
  00084	e58d0018	 str         r0, [sp, #0x18]
  00088	e59d3024	 ldr         r3, [sp, #0x24]
  0008c	e2832008	 add         r2, r3, #8
  00090	e59d3018	 ldr         r3, [sp, #0x18]
  00094	e5823000	 str         r3, [r2]

; 39   :         m_bSuspendFlag = bSuspended;

  00098	e59d3024	 ldr         r3, [sp, #0x24]
  0009c	e2832010	 add         r2, r3, #0x10
  000a0	e59d302c	 ldr         r3, [sp, #0x2C]
  000a4	e5823000	 str         r3, [r2]

; 40   :     };

  000a8	e59d3024	 ldr         r3, [sp, #0x24]
  000ac	e58d3010	 str         r3, [sp, #0x10]
  000b0	e59d0010	 ldr         r0, [sp, #0x10]
  000b4	e28dd01c	 add         sp, sp, #0x1C
  000b8	e89d6000	 ldmia       sp, {sp, lr}
  000bc	e12fff1e	 bx          lr
  000c0		 |$LN8@CMiniThrea|
  000c0		 |$LN9@CMiniThrea|
  000c0	00000000	 DCD         |?ThreadProc@CMiniThread@@CAKPAX@Z|
  000c4		 |$LN10@CMiniThrea|
  000c4	00000000	 DCD         |??_7CMiniThread@@6B@|
  000c8		 |$M42827|

			 ENDP  ; |??0CMiniThread@@QAA@KH@Z|, CMiniThread::CMiniThread

	IMPORT	|ExitThread|

  00000			 AREA	 |.pdata|, PDATA
|$T42840| DCD	|$LN5@ThreadProc|
	DCD	0x40001d04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ThreadProc@CMiniThread@@CAKPAX@Z| PROC ; CMiniThread::ThreadProc

; 154  :     {

  00000		 |$LN5@ThreadProc|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M42837|

; 155  :         CMiniThread* pThreadPtr = ( CMiniThread* ) dParam;

  00010	e59d3014	 ldr         r3, [sp, #0x14]
  00014	e58d3000	 str         r3, [sp]

; 156  :         pThreadPtr->m_dwExitCode = pThreadPtr->ThreadRun();

  00018	e59d3000	 ldr         r3, [sp]
  0001c	e5933000	 ldr         r3, [r3]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e5933000	 ldr         r3, [r3]
  00028	e1a0e00f	 mov         lr, pc
  0002c	e12fff13	 bx          r3
  00030	e58d0008	 str         r0, [sp, #8]
  00034	e59d3000	 ldr         r3, [sp]
  00038	e2832014	 add         r2, r3, #0x14
  0003c	e59d3008	 ldr         r3, [sp, #8]
  00040	e5823000	 str         r3, [r2]

; 157  :         ::ExitThread( pThreadPtr->m_dwExitCode );

  00044	e59d3000	 ldr         r3, [sp]
  00048	e2833014	 add         r3, r3, #0x14
  0004c	e5930000	 ldr         r0, [r3]
  00050	eb000000	 bl          ExitThread

; 158  :         return pThreadPtr->m_dwExitCode;

  00054	e59d3000	 ldr         r3, [sp]
  00058	e2833014	 add         r3, r3, #0x14
  0005c	e5933000	 ldr         r3, [r3]
  00060	e58d3004	 str         r3, [sp, #4]

; 159  :     };

  00064	e59d0004	 ldr         r0, [sp, #4]
  00068	e28dd00c	 add         sp, sp, #0xC
  0006c	e89d6000	 ldmia       sp, {sp, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$M42838|

			 ENDP  ; |?ThreadProc@CMiniThread@@CAKPAX@Z|, CMiniThread::ThreadProc

	EXPORT	|??1OMAPMHSUSBIdGnd@@UAA@XZ|		; OMAPMHSUSBIdGnd::~OMAPMHSUSBIdGnd
	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T42848| DCD	|$LN6@scalar|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GOMAPMHSUSBIdGnd@@UAAPAXI@Z| PROC	; OMAPMHSUSBIdGnd::`scalar deleting destructor'
  00000		 |$LN6@scalar|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42845|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1OMAPMHSUSBIdGnd@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M42846|

			 ENDP  ; |??_GOMAPMHSUSBIdGnd@@UAAPAXI@Z|, OMAPMHSUSBIdGnd::`scalar deleting destructor'

	EXPORT	|??1CLockObject@@QAA@XZ|		; CLockObject::~CLockObject
	EXPORT	|??1CMiniThread@@QAA@XZ|		; CMiniThread::~CMiniThread
	EXPORT	|?ThreadTerminated@CMiniThread@@QAAHK@Z| ; CMiniThread::ThreadTerminated

  00018			 AREA	 |.pdata|, PDATA
|$T42857| DCD	|$LN7@OMAPMHSUSB@2|
	DCD	0x40001f04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbotg\otg.cpp

  0020c			 AREA	 |.text|, CODE, ARM

  0020c		 |??1OMAPMHSUSBIdGnd@@UAA@XZ| PROC	; OMAPMHSUSBIdGnd::~OMAPMHSUSBIdGnd

; 215  : {    

  0020c		 |$LN7@OMAPMHSUSB@2|
  0020c	e1a0c00d	 mov         r12, sp
  00210	e92d0001	 stmdb       sp!, {r0}
  00214	e92d5000	 stmdb       sp!, {r12, lr}
  00218	e24dd004	 sub         sp, sp, #4
  0021c		 |$M42854|
  0021c	e59f2060	 ldr         r2, [pc, #0x60]
  00220	e59d300c	 ldr         r3, [sp, #0xC]
  00224	e5832000	 str         r2, [r3]

; 216  :     // Terminationg thread.
; 217  :     m_fTerminated = TRUE;

  00228	e59d300c	 ldr         r3, [sp, #0xC]
  0022c	e2832034	 add         r2, r3, #0x34
  00230	e3a03001	 mov         r3, #1
  00234	e5823000	 str         r3, [r2]

; 218  :     ThreadTerminated(1000);

  00238	e3a01ffa	 mov         r1, #0xFA, 30
  0023c	e59d000c	 ldr         r0, [sp, #0xC]
  00240	eb000000	 bl          |?ThreadTerminated@CMiniThread@@QAAHK@Z|

; 219  : }

  00244	e59d000c	 ldr         r0, [sp, #0xC]
  00248	eb000000	 bl          |??1CMiniThread@@QAA@XZ|
  0024c	e59d300c	 ldr         r3, [sp, #0xC]
  00250	e3530000	 cmp         r3, #0
  00254	0a000003	 beq         |$LN3@OMAPMHSUSB@2|
  00258	e59d300c	 ldr         r3, [sp, #0xC]
  0025c	e2833018	 add         r3, r3, #0x18
  00260	e58d3000	 str         r3, [sp]
  00264	ea000001	 b           |$LN4@OMAPMHSUSB@2|
  00268		 |$LN3@OMAPMHSUSB@2|
  00268	e3a03000	 mov         r3, #0
  0026c	e58d3000	 str         r3, [sp]
  00270		 |$LN4@OMAPMHSUSB@2|
  00270	e59d0000	 ldr         r0, [sp]
  00274	eb000000	 bl          |??1CLockObject@@QAA@XZ|
  00278	e28dd004	 add         sp, sp, #4
  0027c	e89d6000	 ldmia       sp, {sp, lr}
  00280	e12fff1e	 bx          lr
  00284		 |$LN8@OMAPMHSUSB@2|
  00284		 |$LN9@OMAPMHSUSB@2|
  00284	00000000	 DCD         |??_7OMAPMHSUSBIdGnd@@6B@|
  00288		 |$M42855|

			 ENDP  ; |??1OMAPMHSUSBIdGnd@@UAA@XZ|, OMAPMHSUSBIdGnd::~OMAPMHSUSBIdGnd

	IMPORT	|DeleteCriticalSection|
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T42864| DCD	|$LN5@CLockObjec@2|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CLockObject@@QAA@XZ| PROC		; CLockObject::~CLockObject

; 41   :     {

  00000		 |$LN5@CLockObjec@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42861|

; 42   :         DeleteCriticalSection( &m_CSection );

  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          DeleteCriticalSection

; 43   :     };

  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M42862|

			 ENDP  ; |??1CLockObject@@QAA@XZ|, CLockObject::~CLockObject

	EXPORT	|?ForceTerminated@CMiniThread@@QAAHXZ|	; CMiniThread::ForceTerminated
; File c:\wince600\public\common\oak\inc\cmthread.h

  00000			 AREA	 |.pdata|, PDATA
|$T42871| DCD	|$LN5@CMiniThrea@2|
	DCD	0x40000b03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CMiniThread@@QAA@XZ| PROC		; CMiniThread::~CMiniThread

; 44   :     {

  00000		 |$LN5@CMiniThrea@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42868|
  0000c	e59f2014	 ldr         r2, [pc, #0x14]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e5832000	 str         r2, [r3]

; 45   :         ForceTerminated();

  00018	e59d0008	 ldr         r0, [sp, #8]
  0001c	eb000000	 bl          |?ForceTerminated@CMiniThread@@QAAHXZ|

; 46   :     }

  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$LN6@CMiniThrea@2|
  00028		 |$LN7@CMiniThrea@2|
  00028	00000000	 DCD         |??_7CMiniThread@@6B@|
  0002c		 |$M42869|

			 ENDP  ; |??1CMiniThread@@QAA@XZ|, CMiniThread::~CMiniThread

	EXPORT	|?WaitThreadComplete@CMiniThread@@QAAHK@Z| ; CMiniThread::WaitThreadComplete

  00000			 AREA	 |.pdata|, PDATA
|$T42881| DCD	|$LN5@ThreadTerm|
	DCD	0x40001204
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ThreadTerminated@CMiniThread@@QAAHK@Z| PROC ; CMiniThread::ThreadTerminated

; 86   :     {

  00000		 |$LN5@ThreadTerm|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42878|

; 87   :         m_bTerminated = TRUE;

  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e2832004	 add         r2, r3, #4
  00018	e3a03001	 mov         r3, #1
  0001c	e5823000	 str         r3, [r2]

; 88   :         return WaitThreadComplete( dwMilliSeconds  );

  00020	e59d1014	 ldr         r1, [sp, #0x14]
  00024	e59d0010	 ldr         r0, [sp, #0x10]
  00028	eb000000	 bl          |?WaitThreadComplete@CMiniThread@@QAAHK@Z|
  0002c	e58d0004	 str         r0, [sp, #4]
  00030	e59d3004	 ldr         r3, [sp, #4]
  00034	e58d3000	 str         r3, [sp]

; 89   :     }

  00038	e59d0000	 ldr         r0, [sp]
  0003c	e28dd008	 add         sp, sp, #8
  00040	e89d6000	 ldmia       sp, {sp, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$M42879|

			 ENDP  ; |?ThreadTerminated@CMiniThread@@QAAHK@Z|, CMiniThread::ThreadTerminated

	EXPORT	|?ThreadStart@CMiniThread@@QAAHXZ|	; CMiniThread::ThreadStart
	IMPORT	|CloseHandle|
	IMPORT	|WaitForSingleObject|

  00000			 AREA	 |.pdata|, PDATA
|$T42889| DCD	|$LN8@WaitThread|
	DCD	0x40002c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?WaitThreadComplete@CMiniThread@@QAAHK@Z| PROC ; CMiniThread::WaitThreadComplete

; 92   :     {

  00000		 |$LN8@WaitThread|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M42886|

; 93   :         if( !m_hThreadHandle )

  00010	e59d3014	 ldr         r3, [sp, #0x14]
  00014	e2833008	 add         r3, r3, #8
  00018	e5933000	 ldr         r3, [r3]
  0001c	e3530000	 cmp         r3, #0
  00020	1a000002	 bne         |$LN3@WaitThread|

; 94   :         {
; 95   :             return FALSE;

  00024	e3a03000	 mov         r3, #0
  00028	e58d3000	 str         r3, [sp]
  0002c	ea00001b	 b           |$LN4@WaitThread|
  00030		 |$LN3@WaitThread|

; 96   :         };
; 97   : 
; 98   :         if( ThreadStart() )

  00030	e59d0014	 ldr         r0, [sp, #0x14]
  00034	eb000000	 bl          |?ThreadStart@CMiniThread@@QAAHXZ|
  00038	e58d0004	 str         r0, [sp, #4]
  0003c	e59d3004	 ldr         r3, [sp, #4]
  00040	e3530000	 cmp         r3, #0
  00044	0a000013	 beq         |$LN2@WaitThread|

; 99   :         {
; 100  :             if( ::WaitForSingleObject( m_hThreadHandle, dwMilliSeconds ) ==
; 101  :                 WAIT_OBJECT_0 )

  00048	e59d1018	 ldr         r1, [sp, #0x18]
  0004c	e59d3014	 ldr         r3, [sp, #0x14]
  00050	e2833008	 add         r3, r3, #8
  00054	e5930000	 ldr         r0, [r3]
  00058	eb000000	 bl          WaitForSingleObject
  0005c	e58d0008	 str         r0, [sp, #8]
  00060	e59d3008	 ldr         r3, [sp, #8]
  00064	e3530000	 cmp         r3, #0
  00068	1a00000a	 bne         |$LN1@WaitThread|

; 102  :             {
; 103  :                 // thread dead
; 104  :                 ::CloseHandle( m_hThreadHandle );

  0006c	e59d3014	 ldr         r3, [sp, #0x14]
  00070	e2833008	 add         r3, r3, #8
  00074	e5930000	 ldr         r0, [r3]
  00078	eb000000	 bl          CloseHandle

; 105  :                 m_hThreadHandle = NULL;

  0007c	e59d3014	 ldr         r3, [sp, #0x14]
  00080	e2832008	 add         r2, r3, #8
  00084	e3a03000	 mov         r3, #0
  00088	e5823000	 str         r3, [r2]

; 106  :                 return TRUE;

  0008c	e3a03001	 mov         r3, #1
  00090	e58d3000	 str         r3, [sp]
  00094	ea000001	 b           |$LN4@WaitThread|
  00098		 |$LN1@WaitThread|
  00098		 |$LN2@WaitThread|

; 107  :             }
; 108  :         }
; 109  :         return FALSE;

  00098	e3a03000	 mov         r3, #0
  0009c	e58d3000	 str         r3, [sp]
  000a0		 |$LN4@WaitThread|

; 110  :     }

  000a0	e59d0000	 ldr         r0, [sp]
  000a4	e28dd00c	 add         sp, sp, #0xC
  000a8	e89d6000	 ldmia       sp, {sp, lr}
  000ac	e12fff1e	 bx          lr
  000b0		 |$M42887|

			 ENDP  ; |?WaitThreadComplete@CMiniThread@@QAAHK@Z|, CMiniThread::WaitThreadComplete

	IMPORT	|ResumeThread|

  00000			 AREA	 |.pdata|, PDATA
|$T42897| DCD	|$LN7@ThreadStar|
	DCD	0x40001e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ThreadStart@CMiniThread@@QAAHXZ| PROC ; CMiniThread::ThreadStart

; 49   :     {

  00000		 |$LN7@ThreadStar|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42894|

; 50   :         if( m_bSuspendFlag )

  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e2833010	 add         r3, r3, #0x10
  00018	e5933000	 ldr         r3, [r3]
  0001c	e3530000	 cmp         r3, #0
  00020	0a00000e	 beq         |$LN2@ThreadStar|

; 51   :         {
; 52   :             if( ResumeThread( m_hThreadHandle ) == ( DWORD ) ( -1 ) )

  00024	e59d3010	 ldr         r3, [sp, #0x10]
  00028	e2833008	 add         r3, r3, #8
  0002c	e5930000	 ldr         r0, [r3]
  00030	eb000000	 bl          ResumeThread
  00034	e58d0004	 str         r0, [sp, #4]
  00038	e59d3004	 ldr         r3, [sp, #4]
  0003c	e3730001	 cmn         r3, #1
  00040	1a000002	 bne         |$LN1@ThreadStar|

; 53   :             {
; 54   :                 // failure for resume somehow
; 55   :                 return FALSE;

  00044	e3a03000	 mov         r3, #0
  00048	e58d3000	 str         r3, [sp]
  0004c	ea000005	 b           |$LN3@ThreadStar|
  00050		 |$LN1@ThreadStar|

; 56   :             };
; 57   :             m_bSuspendFlag = FALSE;

  00050	e59d3010	 ldr         r3, [sp, #0x10]
  00054	e2832010	 add         r2, r3, #0x10
  00058	e3a03000	 mov         r3, #0
  0005c	e5823000	 str         r3, [r2]
  00060		 |$LN2@ThreadStar|

; 58   :         }
; 59   :         return TRUE;

  00060	e3a03001	 mov         r3, #1
  00064	e58d3000	 str         r3, [sp]
  00068		 |$LN3@ThreadStar|

; 60   :     }

  00068	e59d0000	 ldr         r0, [sp]
  0006c	e28dd008	 add         sp, sp, #8
  00070	e89d6000	 ldmia       sp, {sp, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$M42895|

			 ENDP  ; |?ThreadStart@CMiniThread@@QAAHXZ|, CMiniThread::ThreadStart

	IMPORT	|TerminateThread|

  00000			 AREA	 |.pdata|, PDATA
|$T42905| DCD	|$LN6@ForceTermi|
	DCD	0x40002604
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ForceTerminated@CMiniThread@@QAAHXZ| PROC ; CMiniThread::ForceTerminated

; 113  :     {

  00000		 |$LN6@ForceTermi|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M42902|

; 114  :         if( m_hThreadHandle )

  00010	e59d3014	 ldr         r3, [sp, #0x14]
  00014	e2833008	 add         r3, r3, #8
  00018	e5933000	 ldr         r3, [r3]
  0001c	e3530000	 cmp         r3, #0
  00020	0a000016	 beq         |$LN1@ForceTermi|

; 115  :         {
; 116  : //#pragma prefast(suppress: 258, "Try to recover from a pathological failure")
; 117  :             BOOL bReturn = ::TerminateThread( m_hThreadHandle, ( DWORD ) - 1 ); // terminate abnormal

  00024	e3e01000	 mvn         r1, #0
  00028	e59d3014	 ldr         r3, [sp, #0x14]
  0002c	e2833008	 add         r3, r3, #8
  00030	e5930000	 ldr         r0, [r3]
  00034	eb000000	 bl          TerminateThread
  00038	e58d0008	 str         r0, [sp, #8]
  0003c	e59d3008	 ldr         r3, [sp, #8]
  00040	e58d3000	 str         r3, [sp]

; 118  :             m_dwExitCode = -1;

  00044	e59d3014	 ldr         r3, [sp, #0x14]
  00048	e2832014	 add         r2, r3, #0x14
  0004c	e3e03000	 mvn         r3, #0
  00050	e5823000	 str         r3, [r2]

; 119  :             ::CloseHandle( m_hThreadHandle );

  00054	e59d3014	 ldr         r3, [sp, #0x14]
  00058	e2833008	 add         r3, r3, #8
  0005c	e5930000	 ldr         r0, [r3]
  00060	eb000000	 bl          CloseHandle

; 120  :             m_hThreadHandle = NULL;

  00064	e59d3014	 ldr         r3, [sp, #0x14]
  00068	e2832008	 add         r2, r3, #8
  0006c	e3a03000	 mov         r3, #0
  00070	e5823000	 str         r3, [r2]

; 121  :             return bReturn;

  00074	e59d3000	 ldr         r3, [sp]
  00078	e58d3004	 str         r3, [sp, #4]
  0007c	ea000001	 b           |$LN2@ForceTermi|
  00080		 |$LN1@ForceTermi|

; 122  :         };
; 123  :         return TRUE;

  00080	e3a03001	 mov         r3, #1
  00084	e58d3004	 str         r3, [sp, #4]
  00088		 |$LN2@ForceTermi|

; 124  :     }

  00088	e59d0004	 ldr         r0, [sp, #4]
  0008c	e28dd00c	 add         sp, sp, #0xC
  00090	e89d6000	 ldmia       sp, {sp, lr}
  00094	e12fff1e	 bx          lr
  00098		 |$M42903|

			 ENDP  ; |?ForceTerminated@CMiniThread@@QAAHXZ|, CMiniThread::ForceTerminated


  00020			 AREA	 |.pdata|, PDATA
|$T42913| DCD	|$LN5@Init|
	DCD	0x40001004
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbotg\otg.cpp

  00288			 AREA	 |.text|, CODE, ARM

  00288		 |?Init@OMAPMHSUSBIdGnd@@UAAHXZ| PROC	; OMAPMHSUSBIdGnd::Init

; 222  : {    

  00288		 |$LN5@Init|
  00288	e1a0c00d	 mov         r12, sp
  0028c	e92d0001	 stmdb       sp!, {r0}
  00290	e92d5000	 stmdb       sp!, {r12, lr}
  00294	e24dd004	 sub         sp, sp, #4
  00298		 |$M42910|

; 223  :     m_fTerminated = FALSE;

  00298	e59d300c	 ldr         r3, [sp, #0xC]
  0029c	e2832034	 add         r2, r3, #0x34
  002a0	e3a03000	 mov         r3, #0
  002a4	e5823000	 str         r3, [r2]

; 224  :     ThreadStart() ;    

  002a8	e59d000c	 ldr         r0, [sp, #0xC]
  002ac	eb000000	 bl          |?ThreadStart@CMiniThread@@QAAHXZ|

; 225  :     return TRUE;

  002b0	e3a03001	 mov         r3, #1
  002b4	e58d3000	 str         r3, [sp]

; 226  :     
; 227  : }

  002b8	e59d0000	 ldr         r0, [sp]
  002bc	e28dd004	 add         sp, sp, #4
  002c0	e89d6000	 ldmia       sp, {sp, lr}
  002c4	e12fff1e	 bx          lr
  002c8		 |$M42911|

			 ENDP  ; |?Init@OMAPMHSUSBIdGnd@@UAAHXZ|, OMAPMHSUSBIdGnd::Init

	EXPORT	|SetEvent|
	EXPORT	|??_C@_1HC@BJLDGHE@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?$CD?$AA?$CD?$AA?$CD?$AA?5?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAI?$AAd?$AAG?$AAn?$AAd?$AA?3?$AA?3?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@JCFDGPKN@?$AAS?$AAo?$AAm?$AAe?$AAt?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAw?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAI?$AAd?$AAG?$AAn?$AAd?$AAI?$AAn?$AAt?$AAr?$AAE?$AAv@| [ DATA ] ; `string'
	EXPORT	|GetCurrentThread|
	EXPORT	|?GetHsMusb@OMAPMHSUSBOTG@@QAAPAUHSMUSB_T@@XZ| ; OMAPMHSUSBOTG::GetHsMusb
	IMPORT	|CeSetThreadPriority|

  00028			 AREA	 |.pdata|, PDATA
|$T42923| DCD	|$LN13@ThreadRun|
	DCD	0x40006a04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@BJLDGHE@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?$CD?$AA?$CD?$AA?$CD?$AA?5?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAI?$AAd?$AAG?$AAn?$AAd?$AA?3?$AA?3?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu@| DCB "*"
	DCB	0x0, "*", 0x0, "*", 0x0, "#", 0x0, "#", 0x0, "#", 0x0, " "
	DCB	0x0, "O", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, "M", 0x0, "H"
	DCB	0x0, "S", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "I", 0x0, "d"
	DCB	0x0, "G", 0x0, "n", 0x0, "d", 0x0, ":", 0x0, ":", 0x0, "T"
	DCB	0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "R"
	DCB	0x0, "u", 0x0, "n", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "l"
	DCB	0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "S"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@JCFDGPKN@?$AAS?$AAo?$AAm?$AAe?$AAt?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAw?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAI?$AAd?$AAG?$AAn?$AAd?$AAI?$AAn?$AAt?$AAr?$AAE?$AAv@| DCB "S"
	DCB	0x0, "o", 0x0, "m", 0x0, "e", 0x0, "t", 0x0, "h", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "w", 0x0, "r", 0x0, "o"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "w", 0x0, "i", 0x0, "t"
	DCB	0x0, "h", 0x0, " ", 0x0, "I", 0x0, "d", 0x0, "G", 0x0, "n"
	DCB	0x0, "d", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "E"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  002c8			 AREA	 |.text|, CODE, ARM

  002c8		 |?ThreadRun@OMAPMHSUSBIdGnd@@EAAKXZ| PROC ; OMAPMHSUSBIdGnd::ThreadRun

; 230  : {

  002c8		 |$LN13@ThreadRun|
  002c8	e1a0c00d	 mov         r12, sp
  002cc	e92d0001	 stmdb       sp!, {r0}
  002d0	e92d5000	 stmdb       sp!, {r12, lr}
  002d4	e24dd020	 sub         sp, sp, #0x20
  002d8		 |$M42920|

; 231  :     
; 232  :     PHSMUSB_T pOTG = m_pUsbOtg->GetHsMusb();    

  002d8	e59d3028	 ldr         r3, [sp, #0x28]
  002dc	e283302c	 add         r3, r3, #0x2C
  002e0	e5930000	 ldr         r0, [r3]
  002e4	eb000000	 bl          |?GetHsMusb@OMAPMHSUSBOTG@@QAAPAUHSMUSB_T@@XZ|
  002e8	e58d000c	 str         r0, [sp, #0xC]
  002ec	e59d300c	 ldr         r3, [sp, #0xC]
  002f0	e58d3000	 str         r3, [sp]

; 233  : 
; 234  :     m_pUsbOtg->m_pTransceiver->AconnNotifHandle(m_hIdGndIntrEvent);

  002f4	e59d3028	 ldr         r3, [sp, #0x28]
  002f8	e2833030	 add         r3, r3, #0x30
  002fc	e5931000	 ldr         r1, [r3]
  00300	e59d3028	 ldr         r3, [sp, #0x28]
  00304	e283302c	 add         r3, r3, #0x2C
  00308	e5933000	 ldr         r3, [r3]
  0030c	e28330fc	 add         r3, r3, #0xFC
  00310	e5932000	 ldr         r2, [r3]
  00314	e59d3028	 ldr         r3, [sp, #0x28]
  00318	e283302c	 add         r3, r3, #0x2C
  0031c	e5933000	 ldr         r3, [r3]
  00320	e28330fc	 add         r3, r3, #0xFC
  00324	e5930000	 ldr         r0, [r3]
  00328	e5923000	 ldr         r3, [r2]
  0032c	e283300c	 add         r3, r3, #0xC
  00330	e5933000	 ldr         r3, [r3]
  00334	e1a0e00f	 mov         lr, pc
  00338	e12fff13	 bx          r3

; 235  :     
; 236  :     CeSetThreadPriority(GetCurrentThread(), m_pUsbOtg->m_OTGRegCfg.idgndIstPrio);

  0033c	eb000000	 bl          GetCurrentThread
  00340	e58d0010	 str         r0, [sp, #0x10]
  00344	e59d3028	 ldr         r3, [sp, #0x28]
  00348	e283302c	 add         r3, r3, #0x2C
  0034c	e5933000	 ldr         r3, [r3]
  00350	e2833f46	 add         r3, r3, #0x46, 30
  00354	e5931000	 ldr         r1, [r3]
  00358	e59d0010	 ldr         r0, [sp, #0x10]
  0035c	eb000000	 bl          CeSetThreadPriority
  00360		 |$LN4@ThreadRun|

; 237  : 
; 238  :     while (!m_fTerminated)

  00360	e59d3028	 ldr         r3, [sp, #0x28]
  00364	e2833034	 add         r3, r3, #0x34
  00368	e5933000	 ldr         r3, [r3]
  0036c	e3530000	 cmp         r3, #0
  00370	1a000035	 bne         |$LN3@ThreadRun|

; 239  :     { 
; 240  :         DWORD rc = WaitForSingleObject(m_hIdGndIntrEvent, INFINITE);         

  00374	e3e01000	 mvn         r1, #0
  00378	e59d3028	 ldr         r3, [sp, #0x28]
  0037c	e2833030	 add         r3, r3, #0x30
  00380	e5930000	 ldr         r0, [r3]
  00384	eb000000	 bl          WaitForSingleObject
  00388	e58d0014	 str         r0, [sp, #0x14]
  0038c	e59d3014	 ldr         r3, [sp, #0x14]
  00390	e58d3004	 str         r3, [sp, #4]

; 241  :         if (rc != WAIT_OBJECT_0)

  00394	e59d3004	 ldr         r3, [sp, #4]
  00398	e3530000	 cmp         r3, #0
  0039c	0a00000f	 beq         |$LN2@ThreadRun|

; 242  :         {
; 243  :             DEBUGMSG(ZONE_OTG_ERROR, (TEXT("Something wrong with IdGndIntrEvent\r\n")));

  003a0	e59f30c0	 ldr         r3, [pc, #0xC0]
  003a4	e5933440	 ldr         r3, [r3, #0x440]
  003a8	e3130902	 tst         r3, #2, 18
  003ac	0a000004	 beq         |$LN7@ThreadRun|
  003b0	e59f00b4	 ldr         r0, [pc, #0xB4]
  003b4	eb000000	 bl          NKDbgPrintfW
  003b8	e3a03001	 mov         r3, #1
  003bc	e58d3018	 str         r3, [sp, #0x18]
  003c0	ea000001	 b           |$LN8@ThreadRun|
  003c4		 |$LN7@ThreadRun|
  003c4	e3a03000	 mov         r3, #0
  003c8	e58d3018	 str         r3, [sp, #0x18]
  003cc		 |$LN8@ThreadRun|

; 244  :             m_fTerminated = TRUE;

  003cc	e59d3028	 ldr         r3, [sp, #0x28]
  003d0	e2832034	 add         r2, r3, #0x34
  003d4	e3a03001	 mov         r3, #1
  003d8	e5823000	 str         r3, [r2]

; 245  :         }
; 246  :         else

  003dc	ea000019	 b           |$LN1@ThreadRun|
  003e0		 |$LN2@ThreadRun|

; 247  :         {                 
; 248  :             DEBUGMSG(ZONE_OTG_FUNCTION,(L"***### OMAPMHSUSBIdGnd::ThreadRun calling SessionRequest")); 

  003e0	e59f3080	 ldr         r3, [pc, #0x80]
  003e4	e5933440	 ldr         r3, [r3, #0x440]
  003e8	e3130a02	 tst         r3, #2, 20
  003ec	0a000004	 beq         |$LN9@ThreadRun|
  003f0	e59f006c	 ldr         r0, [pc, #0x6C]
  003f4	eb000000	 bl          NKDbgPrintfW
  003f8	e3a03001	 mov         r3, #1
  003fc	e58d301c	 str         r3, [sp, #0x1C]
  00400	ea000001	 b           |$LN10@ThreadRun|
  00404		 |$LN9@ThreadRun|
  00404	e3a03000	 mov         r3, #0
  00408	e58d301c	 str         r3, [sp, #0x1C]
  0040c		 |$LN10@ThreadRun|

; 249  :             m_pUsbOtg->m_dwStatus |= STATUS_RETENTION_WAKEUP;

  0040c	e59d3028	 ldr         r3, [sp, #0x28]
  00410	e283302c	 add         r3, r3, #0x2C
  00414	e5933000	 ldr         r3, [r3]
  00418	e28330f8	 add         r3, r3, #0xF8
  0041c	e5933000	 ldr         r3, [r3]
  00420	e3832c01	 orr         r2, r3, #1, 24
  00424	e59d3028	 ldr         r3, [sp, #0x28]
  00428	e283302c	 add         r3, r3, #0x2C
  0042c	e5933000	 ldr         r3, [r3]
  00430	e28330f8	 add         r3, r3, #0xF8
  00434	e5832000	 str         r2, [r3]

; 250  :             SetEvent(pOTG->hSysIntrEvent);

  00438	e59d3000	 ldr         r3, [sp]
  0043c	e2833054	 add         r3, r3, #0x54
  00440	e5930000	 ldr         r0, [r3]
  00444	eb000000	 bl          SetEvent
  00448		 |$LN1@ThreadRun|

; 251  :        }
; 252  :     }

  00448	eaffffc4	 b           |$LN4@ThreadRun|
  0044c		 |$LN3@ThreadRun|

; 253  :     return 1;

  0044c	e3a03001	 mov         r3, #1
  00450	e58d3008	 str         r3, [sp, #8]

; 254  : }

  00454	e59d0008	 ldr         r0, [sp, #8]
  00458	e28dd020	 add         sp, sp, #0x20
  0045c	e89d6000	 ldmia       sp, {sp, lr}
  00460	e12fff1e	 bx          lr
  00464		 |$LN14@ThreadRun|
  00464		 |$LN15@ThreadRun|
  00464	00000000	 DCD         |??_C@_1HC@BJLDGHE@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?$CD?$AA?$CD?$AA?$CD?$AA?5?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAI?$AAd?$AAG?$AAn?$AAd?$AA?3?$AA?3?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu@|
  00468		 |$LN16@ThreadRun|
  00468	00000000	 DCD         |dpCurSettings|
  0046c		 |$LN17@ThreadRun|
  0046c	00000000	 DCD         |??_C@_1EM@JCFDGPKN@?$AAS?$AAo?$AAm?$AAe?$AAt?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAw?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAI?$AAd?$AAG?$AAn?$AAd?$AAI?$AAn?$AAt?$AAr?$AAE?$AAv@|
  00470		 |$M42921|

			 ENDP  ; |?ThreadRun@OMAPMHSUSBIdGnd@@EAAKXZ|, OMAPMHSUSBIdGnd::ThreadRun

	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T42933| DCD	|$LN5@SetEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42930|

; 236  : 	return EventModify(h,EVENT_SET);

  00010	e3a01003	 mov         r1, #3
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 237  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M42931|

			 ENDP  ; |SetEvent|


  00000			 AREA	 |.pdata|, PDATA
|$T42941| DCD	|$LN5@GetCurrent|
	DCD	0x40000601
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentThread| PROC

; 351  : _inline HANDLE GetCurrentThread(void) {

  00000		 |$LN5@GetCurrent|
  00000	e24dd004	 sub         sp, sp, #4
  00004		 |$M42938|

; 352  : 	return ((HANDLE)(SH_CURTHREAD+SYS_HANDLE_BASE));

  00004	e3a03041	 mov         r3, #0x41
  00008	e58d3000	 str         r3, [sp]

; 353  : }

  0000c	e59d0000	 ldr         r0, [sp]
  00010	e28dd004	 add         sp, sp, #4
  00014	e12fff1e	 bx          lr
  00018		 |$M42939|

			 ENDP  ; |GetCurrentThread|

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbotg\otg.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T42949| DCD	|$LN5@GetHsMusb|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetHsMusb@OMAPMHSUSBOTG@@QAAPAUHSMUSB_T@@XZ| PROC ; OMAPMHSUSBOTG::GetHsMusb

; 111  :     PHSMUSB_T GetHsMusb() { return m_pOTG;};

  00000		 |$LN5@GetHsMusb|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42946|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833e15	 add         r3, r3, #0x15, 28
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M42947|

			 ENDP  ; |?GetHsMusb@OMAPMHSUSBOTG@@QAAPAUHSMUSB_T@@XZ|, OMAPMHSUSBOTG::GetHsMusb

	EXPORT	|??_C@_1GC@OBMNFMO@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAi?$AAn?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@MPACPCNI@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@OEADPCJI@?$AAD?$AAM?$AAA?$AAI?$AAR?$AAQ?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5?$AAS?$AAY?$AAS?$AAI?$AAN?$AAT?$AAR?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@NOIONLLJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAT?$AAG?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAO?$AAT?$AAG?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_7OMAPMHSUSBDMA@@6B@| [ DATA ]	; OMAPMHSUSBDMA::`vftable'
	EXPORT	|??0OMAPMHSUSBDMA@@QAA@PAVOMAPMHSUSBOTG@@K@Z| ; OMAPMHSUSBDMA::OMAPMHSUSBDMA
	EXPORT	|?ThreadRun@OMAPMHSUSBDMA@@EAAKXZ|	; OMAPMHSUSBDMA::ThreadRun
	EXPORT	|?Init@OMAPMHSUSBDMA@@UAAHXZ|		; OMAPMHSUSBDMA::Init
	IMPORT	|InterruptInitialize|
	IMPORT	|KernelIoControl|
	IMPORT	|??_EOMAPMHSUSBDMA@@UAAPAXI@Z|, WEAK |??_GOMAPMHSUSBDMA@@UAAPAXI@Z| ; OMAPMHSUSBDMA::`vector deleting destructor', OMAPMHSUSBDMA::`scalar deleting destructor'

  00030			 AREA	 |.pdata|, PDATA
|$T42967| DCD	|$LN16@OMAPMHSUSB@3|
	DCD	0x40008204
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbotg\otg.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@OBMNFMO@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAi?$AAn?$AAt@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "e", 0x0, " "
	DCB	0x0, "D", 0x0, "M", 0x0, "A", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, " ", 0x0, "r", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@MPACPCNI@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAE@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "c", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "D", 0x0, "M"
	DCB	0x0, "A", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, " "
	DCB	0x0, "E", 0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "h", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@OEADPCJI@?$AAD?$AAM?$AAA?$AAI?$AAR?$AAQ?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5?$AAS?$AAY?$AAS?$AAI?$AAN?$AAT?$AAR?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "M", 0x0, "A", 0x0, "I", 0x0, "R", 0x0, "Q", 0x0, "="
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ",", 0x0, " "
	DCB	0x0, "S", 0x0, "Y", 0x0, "S", 0x0, "I", 0x0, "N", 0x0, "T"
	DCB	0x0, "R", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@NOIONLLJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAT?$AAG?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAO?$AAT?$AAG?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "T", 0x0, "G", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "m"
	DCB	0x0, "a", 0x0, "p", 0x0, " ", 0x0, "O", 0x0, "T", 0x0, "G"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7OMAPMHSUSBDMA@@6B@| DCD |?ThreadRun@OMAPMHSUSBDMA@@EAAKXZ| ; OMAPMHSUSBDMA::`vftable'
	DCD	|??_EOMAPMHSUSBDMA@@UAAPAXI@Z|
	DCD	|?Init@OMAPMHSUSBDMA@@UAAHXZ|
; Function compile flags: /Odtp

  00470			 AREA	 |.text|, CODE, ARM

  00470		 |??0OMAPMHSUSBDMA@@QAA@PAVOMAPMHSUSBOTG@@K@Z| PROC ; OMAPMHSUSBDMA::OMAPMHSUSBDMA

; 259  : {

  00470		 |$LN16@OMAPMHSUSB@3|
  00470	e1a0c00d	 mov         r12, sp
  00474	e92d000f	 stmdb       sp!, {r0 - r3}
  00478	e92d5000	 stmdb       sp!, {r12, lr}
  0047c	e24dd03c	 sub         sp, sp, #0x3C
  00480		 |$M42964|
  00480	e59d3044	 ldr         r3, [sp, #0x44]
  00484	e2830018	 add         r0, r3, #0x18
  00488	eb000000	 bl          |??0CLockObject@@QAA@XZ|
  0048c	e58d0018	 str         r0, [sp, #0x18]
  00490	e3a02001	 mov         r2, #1
  00494	e3a01000	 mov         r1, #0
  00498	e59d0044	 ldr         r0, [sp, #0x44]
  0049c	eb000000	 bl          |??0CMiniThread@@QAA@KH@Z|
  004a0	e58d001c	 str         r0, [sp, #0x1C]
  004a4	e59f21c8	 ldr         r2, [pc, #0x1C8]
  004a8	e59d3044	 ldr         r3, [sp, #0x44]
  004ac	e5832000	 str         r2, [r3]
  004b0	e59d3044	 ldr         r3, [sp, #0x44]
  004b4	e2832030	 add         r2, r3, #0x30
  004b8	e59d3048	 ldr         r3, [sp, #0x48]
  004bc	e5823000	 str         r3, [r2]

; 260  :     DWORD dwDMASysIntr;
; 261  : 
; 262  :     if (!KernelIoControl(IOCTL_HAL_REQUEST_SYSINTR,
; 263  :            &dwDMAIrq,
; 264  :            sizeof(dwDMAIrq),
; 265  :            &dwDMASysIntr,
; 266  :            sizeof(dwDMASysIntr),
; 267  :            NULL))

  004c0	e3a03000	 mov         r3, #0
  004c4	e58d3004	 str         r3, [sp, #4]
  004c8	e3a03004	 mov         r3, #4
  004cc	e58d3000	 str         r3, [sp]
  004d0	e28d3008	 add         r3, sp, #8
  004d4	e3a02004	 mov         r2, #4
  004d8	e28d104c	 add         r1, sp, #0x4C
  004dc	e59f018c	 ldr         r0, [pc, #0x18C]
  004e0	eb000000	 bl          KernelIoControl
  004e4	e58d0020	 str         r0, [sp, #0x20]
  004e8	e59d3020	 ldr         r3, [sp, #0x20]
  004ec	e3530000	 cmp         r3, #0
  004f0	1a00000b	 bne         |$LN3@OMAPMHSUSB@3|

; 268  :     {
; 269  :         DEBUGMSG(ZONE_OTG_ERROR, (L"ERROR: OTG_Init: "  L"Failed map OTG controller interrupt\r\n" ));

  004f4	e59f3164	 ldr         r3, [pc, #0x164]
  004f8	e5933440	 ldr         r3, [r3, #0x440]
  004fc	e3130902	 tst         r3, #2, 18
  00500	0a000004	 beq         |$LN6@OMAPMHSUSB@3|
  00504	e59f0160	 ldr         r0, [pc, #0x160]
  00508	eb000000	 bl          NKDbgPrintfW
  0050c	e3a03001	 mov         r3, #1
  00510	e58d3024	 str         r3, [sp, #0x24]
  00514	ea000001	 b           |$LN7@OMAPMHSUSB@3|
  00518		 |$LN6@OMAPMHSUSB@3|
  00518	e3a03000	 mov         r3, #0
  0051c	e58d3024	 str         r3, [sp, #0x24]
  00520		 |$LN7@OMAPMHSUSB@3|

; 270  :         return;

  00520	ea000047	 b           |$LN4@OMAPMHSUSB@3|
  00524		 |$LN3@OMAPMHSUSB@3|

; 271  :     }
; 272  : 
; 273  :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("DMAIRQ=0x%x, SYSINTR=0x%x\r\n"), dwDMAIrq, dwDMASysIntr));

  00524	e59f3134	 ldr         r3, [pc, #0x134]
  00528	e5933440	 ldr         r3, [r3, #0x440]
  0052c	e3130a02	 tst         r3, #2, 20
  00530	0a000006	 beq         |$LN8@OMAPMHSUSB@3|
  00534	e59d2008	 ldr         r2, [sp, #8]
  00538	e59d104c	 ldr         r1, [sp, #0x4C]
  0053c	e59f0124	 ldr         r0, [pc, #0x124]
  00540	eb000000	 bl          NKDbgPrintfW
  00544	e3a03001	 mov         r3, #1
  00548	e58d3028	 str         r3, [sp, #0x28]
  0054c	ea000001	 b           |$LN9@OMAPMHSUSB@3|
  00550		 |$LN8@OMAPMHSUSB@3|
  00550	e3a03000	 mov         r3, #0
  00554	e58d3028	 str         r3, [sp, #0x28]
  00558		 |$LN9@OMAPMHSUSB@3|

; 274  :     m_dwDMASysIntr = dwDMASysIntr;

  00558	e59d3044	 ldr         r3, [sp, #0x44]
  0055c	e2832038	 add         r2, r3, #0x38
  00560	e59d3008	 ldr         r3, [sp, #8]
  00564	e5823000	 str         r3, [r2]

; 275  :     m_dwDMAIrq = dwDMAIrq;

  00568	e59d3044	 ldr         r3, [sp, #0x44]
  0056c	e283203c	 add         r2, r3, #0x3C
  00570	e59d304c	 ldr         r3, [sp, #0x4C]
  00574	e5823000	 str         r3, [r2]

; 276  : 
; 277  :     m_hDMAIntrEvent = CreateEvent(0, FALSE, FALSE, NULL);

  00578	e3a03000	 mov         r3, #0
  0057c	e3a02000	 mov         r2, #0
  00580	e3a01000	 mov         r1, #0
  00584	e3a00000	 mov         r0, #0
  00588	eb000000	 bl          CreateEventW
  0058c	e58d002c	 str         r0, [sp, #0x2C]
  00590	e59d3044	 ldr         r3, [sp, #0x44]
  00594	e2832034	 add         r2, r3, #0x34
  00598	e59d302c	 ldr         r3, [sp, #0x2C]
  0059c	e5823000	 str         r3, [r2]

; 278  :     if (m_hDMAIntrEvent == NULL)

  005a0	e59d3044	 ldr         r3, [sp, #0x44]
  005a4	e2833034	 add         r3, r3, #0x34
  005a8	e5933000	 ldr         r3, [r3]
  005ac	e3530000	 cmp         r3, #0
  005b0	1a00000b	 bne         |$LN2@OMAPMHSUSB@3|

; 279  :     {
; 280  :         DEBUGMSG(ZONE_OTG_ERROR, (TEXT("Failed to create DMA Interrupt Event handle\r\n")));

  005b4	e59f30a4	 ldr         r3, [pc, #0xA4]
  005b8	e5933440	 ldr         r3, [r3, #0x440]
  005bc	e3130902	 tst         r3, #2, 18
  005c0	0a000004	 beq         |$LN10@OMAPMHSUSB@3|
  005c4	e59f0098	 ldr         r0, [pc, #0x98]
  005c8	eb000000	 bl          NKDbgPrintfW
  005cc	e3a03001	 mov         r3, #1
  005d0	e58d3030	 str         r3, [sp, #0x30]
  005d4	ea000001	 b           |$LN11@OMAPMHSUSB@3|
  005d8		 |$LN10@OMAPMHSUSB@3|
  005d8	e3a03000	 mov         r3, #0
  005dc	e58d3030	 str         r3, [sp, #0x30]
  005e0		 |$LN11@OMAPMHSUSB@3|

; 281  :         // We need to do clean up here
; 282  :         return;

  005e0	ea000017	 b           |$LN4@OMAPMHSUSB@3|
  005e4		 |$LN2@OMAPMHSUSB@3|

; 283  :     }
; 284  : 
; 285  : 
; 286  :     if (!InterruptInitialize(m_dwDMASysIntr, m_hDMAIntrEvent, NULL, 0))

  005e4	e3a03000	 mov         r3, #0
  005e8	e3a02000	 mov         r2, #0
  005ec	e59d1044	 ldr         r1, [sp, #0x44]
  005f0	e2811034	 add         r1, r1, #0x34
  005f4	e5911000	 ldr         r1, [r1]
  005f8	e59d0044	 ldr         r0, [sp, #0x44]
  005fc	e2800038	 add         r0, r0, #0x38
  00600	e5900000	 ldr         r0, [r0]
  00604	eb000000	 bl          InterruptInitialize
  00608	e58d0034	 str         r0, [sp, #0x34]
  0060c	e59d3034	 ldr         r3, [sp, #0x34]
  00610	e3530000	 cmp         r3, #0
  00614	1a00000a	 bne         |$LN1@OMAPMHSUSB@3|

; 287  :     {
; 288  :         DEBUGMSG(ZONE_OTG_ERROR, (TEXT("Failed to initialize the DMA interrupt routine\r\n")));

  00618	e59f3040	 ldr         r3, [pc, #0x40]
  0061c	e5933440	 ldr         r3, [r3, #0x440]
  00620	e3130902	 tst         r3, #2, 18
  00624	0a000004	 beq         |$LN12@OMAPMHSUSB@3|
  00628	e59f002c	 ldr         r0, [pc, #0x2C]
  0062c	eb000000	 bl          NKDbgPrintfW
  00630	e3a03001	 mov         r3, #1
  00634	e58d3038	 str         r3, [sp, #0x38]
  00638	ea000001	 b           |$LN13@OMAPMHSUSB@3|
  0063c		 |$LN12@OMAPMHSUSB@3|
  0063c	e3a03000	 mov         r3, #0
  00640	e58d3038	 str         r3, [sp, #0x38]
  00644		 |$LN13@OMAPMHSUSB@3|
  00644		 |$LN1@OMAPMHSUSB@3|
  00644		 |$LN4@OMAPMHSUSB@3|

; 289  :         // We need to do clean up here
; 290  :         return;
; 291  :     }    
; 292  : 
; 293  :     
; 294  : }

  00644	e59d3044	 ldr         r3, [sp, #0x44]
  00648	e58d3014	 str         r3, [sp, #0x14]
  0064c	e59d0014	 ldr         r0, [sp, #0x14]
  00650	e28dd03c	 add         sp, sp, #0x3C
  00654	e89d6000	 ldmia       sp, {sp, lr}
  00658	e12fff1e	 bx          lr
  0065c		 |$LN17@OMAPMHSUSB@3|
  0065c		 |$LN18@OMAPMHSUSB@3|
  0065c	00000000	 DCD         |??_C@_1GC@OBMNFMO@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAi?$AAn?$AAt@|
  00660		 |$LN19@OMAPMHSUSB@3|
  00660	00000000	 DCD         |dpCurSettings|
  00664		 |$LN20@OMAPMHSUSB@3|
  00664	00000000	 DCD         |??_C@_1FM@MPACPCNI@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAE@|
  00668		 |$LN21@OMAPMHSUSB@3|
  00668	00000000	 DCD         |??_C@_1DI@OEADPCJI@?$AAD?$AAM?$AAA?$AAI?$AAR?$AAQ?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5?$AAS?$AAY?$AAS?$AAI?$AAN?$AAT?$AAR?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  0066c		 |$LN22@OMAPMHSUSB@3|
  0066c	00000000	 DCD         |??_C@_1GO@NOIONLLJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAT?$AAG?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAO?$AAT?$AAG?$AA?5@|
  00670		 |$LN23@OMAPMHSUSB@3|
  00670	01010098	 DCD         0x1010098
  00674		 |$LN24@OMAPMHSUSB@3|
  00674	00000000	 DCD         |??_7OMAPMHSUSBDMA@@6B@|
  00678		 |$M42965|

			 ENDP  ; |??0OMAPMHSUSBDMA@@QAA@PAVOMAPMHSUSBOTG@@K@Z|, OMAPMHSUSBDMA::OMAPMHSUSBDMA

	EXPORT	|??1OMAPMHSUSBDMA@@UAA@XZ|		; OMAPMHSUSBDMA::~OMAPMHSUSBDMA

  00000			 AREA	 |.pdata|, PDATA
|$T42981| DCD	|$LN6@scalar@2|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GOMAPMHSUSBDMA@@UAAPAXI@Z| PROC	; OMAPMHSUSBDMA::`scalar deleting destructor'
  00000		 |$LN6@scalar@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M42978|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1OMAPMHSUSBDMA@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar@2|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar@2|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M42979|

			 ENDP  ; |??_GOMAPMHSUSBDMA@@UAAPAXI@Z|, OMAPMHSUSBDMA::`scalar deleting destructor'


  00038			 AREA	 |.pdata|, PDATA
|$T42990| DCD	|$LN7@OMAPMHSUSB@4|
	DCD	0x40001b04
; Function compile flags: /Odtp

  00678			 AREA	 |.text|, CODE, ARM

  00678		 |??1OMAPMHSUSBDMA@@UAA@XZ| PROC	; OMAPMHSUSBDMA::~OMAPMHSUSBDMA

; 297  : {    

  00678		 |$LN7@OMAPMHSUSB@4|
  00678	e1a0c00d	 mov         r12, sp
  0067c	e92d0001	 stmdb       sp!, {r0}
  00680	e92d5000	 stmdb       sp!, {r12, lr}
  00684	e24dd004	 sub         sp, sp, #4
  00688		 |$M42987|
  00688	e59f2050	 ldr         r2, [pc, #0x50]
  0068c	e59d300c	 ldr         r3, [sp, #0xC]
  00690	e5832000	 str         r2, [r3]

; 298  :     // Terminationg thread.
; 299  :     ThreadTerminated(1000);

  00694	e3a01ffa	 mov         r1, #0xFA, 30
  00698	e59d000c	 ldr         r0, [sp, #0xC]
  0069c	eb000000	 bl          |?ThreadTerminated@CMiniThread@@QAAHK@Z|

; 300  : }

  006a0	e59d000c	 ldr         r0, [sp, #0xC]
  006a4	eb000000	 bl          |??1CMiniThread@@QAA@XZ|
  006a8	e59d300c	 ldr         r3, [sp, #0xC]
  006ac	e3530000	 cmp         r3, #0
  006b0	0a000003	 beq         |$LN3@OMAPMHSUSB@4|
  006b4	e59d300c	 ldr         r3, [sp, #0xC]
  006b8	e2833018	 add         r3, r3, #0x18
  006bc	e58d3000	 str         r3, [sp]
  006c0	ea000001	 b           |$LN4@OMAPMHSUSB@4|
  006c4		 |$LN3@OMAPMHSUSB@4|
  006c4	e3a03000	 mov         r3, #0
  006c8	e58d3000	 str         r3, [sp]
  006cc		 |$LN4@OMAPMHSUSB@4|
  006cc	e59d0000	 ldr         r0, [sp]
  006d0	eb000000	 bl          |??1CLockObject@@QAA@XZ|
  006d4	e28dd004	 add         sp, sp, #4
  006d8	e89d6000	 ldmia       sp, {sp, lr}
  006dc	e12fff1e	 bx          lr
  006e0		 |$LN8@OMAPMHSUSB@4|
  006e0		 |$LN9@OMAPMHSUSB@4|
  006e0	00000000	 DCD         |??_7OMAPMHSUSBDMA@@6B@|
  006e4		 |$M42988|

			 ENDP  ; |??1OMAPMHSUSBDMA@@UAA@XZ|, OMAPMHSUSBDMA::~OMAPMHSUSBDMA


  00040			 AREA	 |.pdata|, PDATA
|$T42998| DCD	|$LN5@Init@2|
	DCD	0x40001004
; Function compile flags: /Odtp

  006e4			 AREA	 |.text|, CODE, ARM

  006e4		 |?Init@OMAPMHSUSBDMA@@UAAHXZ| PROC	; OMAPMHSUSBDMA::Init

; 302  : {

  006e4		 |$LN5@Init@2|
  006e4	e1a0c00d	 mov         r12, sp
  006e8	e92d0001	 stmdb       sp!, {r0}
  006ec	e92d5000	 stmdb       sp!, {r12, lr}
  006f0	e24dd004	 sub         sp, sp, #4
  006f4		 |$M42995|

; 303  :     m_fTerminated = FALSE;

  006f4	e59d300c	 ldr         r3, [sp, #0xC]
  006f8	e283202c	 add         r2, r3, #0x2C
  006fc	e3a03000	 mov         r3, #0
  00700	e5823000	 str         r3, [r2]

; 304  :     ThreadStart() ;    

  00704	e59d000c	 ldr         r0, [sp, #0xC]
  00708	eb000000	 bl          |?ThreadStart@CMiniThread@@QAAHXZ|

; 305  :     return TRUE;

  0070c	e3a03001	 mov         r3, #1
  00710	e58d3000	 str         r3, [sp]

; 306  :     
; 307  : }

  00714	e59d0000	 ldr         r0, [sp]
  00718	e28dd004	 add         sp, sp, #4
  0071c	e89d6000	 ldmia       sp, {sp, lr}
  00720	e12fff1e	 bx          lr
  00724		 |$M42996|

			 ENDP  ; |?Init@OMAPMHSUSBDMA@@UAAHXZ|, OMAPMHSUSBDMA::Init

	EXPORT	|??_C@_1EE@DIBIKLBE@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?5?$AA?$CF?$AAd?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@LDJIFHJL@?$AAD?$AAM?$AAA?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@DBJAPFDC@?$AAO?$AAT?$AAG?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?5?$AAM?$AAO?$AAD?$AAE?$AA_?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA_?$AAR?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@FFEGOOFC@?$AAO?$AAT?$AAG?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?5?$AAM?$AAO?$AAD?$AAE?$AA_?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA_?$AAS?$AAU@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@BMHEKNBH@?$AAS?$AAo?$AAm?$AAe?$AAt?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAw?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAI?$AAn?$AAt?$AAr?$AAE?$AAv?$AAe@| [ DATA ] ; `string'
	IMPORT	|InterruptDone|
	IMPORT	|Sleep|

  00048			 AREA	 |.pdata|, PDATA
|$T43016| DCD	|$LN30@ThreadRun@2|
	DCD	0x4000c304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@DIBIKLBE@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?5?$AA?$CF?$AAd?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN@| DCB "I"
	DCB	0x0, "g", 0x0, "n", 0x0, "o", 0x0, "r", 0x0, "e", 0x0, " "
	DCB	0x0, "D", 0x0, "M", 0x0, "A", 0x0, " ", 0x0, "c", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@LDJIFHJL@?$AAD?$AAM?$AAA?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "M", 0x0, "A", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@DBJAPFDC@?$AAO?$AAT?$AAG?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?5?$AAM?$AAO?$AAD?$AAE?$AA_?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA_?$AAR?$AAE@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A"
	DCB	0x0, " ", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "R", 0x0, "u", 0x0, "n", 0x0, " ", 0x0, "M"
	DCB	0x0, "O", 0x0, "D", 0x0, "E", 0x0, "_", 0x0, "S", 0x0, "Y"
	DCB	0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "_", 0x0, "R"
	DCB	0x0, "E", 0x0, "S", 0x0, "U", 0x0, "M", 0x0, "E", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@FFEGOOFC@?$AAO?$AAT?$AAG?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?5?$AAM?$AAO?$AAD?$AAE?$AA_?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA_?$AAS?$AAU@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A"
	DCB	0x0, " ", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "R", 0x0, "u", 0x0, "n", 0x0, " ", 0x0, "M"
	DCB	0x0, "O", 0x0, "D", 0x0, "E", 0x0, "_", 0x0, "S", 0x0, "Y"
	DCB	0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "_", 0x0, "S"
	DCB	0x0, "U", 0x0, "S", 0x0, "P", 0x0, "E", 0x0, "N", 0x0, "D"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@BMHEKNBH@?$AAS?$AAo?$AAm?$AAe?$AAt?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAw?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAI?$AAn?$AAt?$AAr?$AAE?$AAv?$AAe@| DCB "S"
	DCB	0x0, "o", 0x0, "m", 0x0, "e", 0x0, "t", 0x0, "h", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "w", 0x0, "r", 0x0, "o"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "w", 0x0, "i", 0x0, "t"
	DCB	0x0, "h", 0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "E", 0x0, "v"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  00724			 AREA	 |.text|, CODE, ARM

  00724		 |?ThreadRun@OMAPMHSUSBDMA@@EAAKXZ| PROC ; OMAPMHSUSBDMA::ThreadRun

; 310  : {    

  00724		 |$LN30@ThreadRun@2|
  00724	e1a0c00d	 mov         r12, sp
  00728	e92d0001	 stmdb       sp!, {r0}
  0072c	e92d5000	 stmdb       sp!, {r12, lr}
  00730	e24dd03c	 sub         sp, sp, #0x3C
  00734		 |$M43013|

; 311  :     CeSetThreadPriority(GetCurrentThread(), m_pUsbOtg->m_OTGRegCfg.dmaIstPrio);

  00734	eb000000	 bl          GetCurrentThread
  00738	e58d0014	 str         r0, [sp, #0x14]
  0073c	e59d3044	 ldr         r3, [sp, #0x44]
  00740	e2833030	 add         r3, r3, #0x30
  00744	e5933000	 ldr         r3, [r3]
  00748	e2833e12	 add         r3, r3, #0x12, 28
  0074c	e5931000	 ldr         r1, [r3]
  00750	e59d0014	 ldr         r0, [sp, #0x14]
  00754	eb000000	 bl          CeSetThreadPriority
  00758		 |$LN27@ThreadRun@2|
  00758		 |$LN26@ThreadRun@2|
  00758		 |$LN13@ThreadRun@2|

; 312  : 
; 313  :     while (!m_fTerminated)

  00758	e59d3044	 ldr         r3, [sp, #0x44]
  0075c	e283302c	 add         r3, r3, #0x2C
  00760	e5933000	 ldr         r3, [r3]
  00764	e3530000	 cmp         r3, #0
  00768	1a0000a4	 bne         |$LN12@ThreadRun@2|

; 314  :     {
; 315  :         DWORD rc = WaitForSingleObject(m_hDMAIntrEvent, INFINITE);         

  0076c	e3e01000	 mvn         r1, #0
  00770	e59d3044	 ldr         r3, [sp, #0x44]
  00774	e2833034	 add         r3, r3, #0x34
  00778	e5930000	 ldr         r0, [r3]
  0077c	eb000000	 bl          WaitForSingleObject
  00780	e58d0018	 str         r0, [sp, #0x18]
  00784	e59d3018	 ldr         r3, [sp, #0x18]
  00788	e58d3000	 str         r3, [sp]

; 316  :         if (rc != WAIT_OBJECT_0)

  0078c	e59d3000	 ldr         r3, [sp]
  00790	e3530000	 cmp         r3, #0
  00794	0a00000f	 beq         |$LN11@ThreadRun@2|

; 317  :         {
; 318  :             DEBUGMSG(ZONE_OTG_ERROR, (TEXT("Something wrong with DMA IntrEvent\r\n")));

  00798	e59f327c	 ldr         r3, [pc, #0x27C]
  0079c	e5933440	 ldr         r3, [r3, #0x440]
  007a0	e3130902	 tst         r3, #2, 18
  007a4	0a000004	 beq         |$LN16@ThreadRun@2|
  007a8	e59f027c	 ldr         r0, [pc, #0x27C]
  007ac	eb000000	 bl          NKDbgPrintfW
  007b0	e3a03001	 mov         r3, #1
  007b4	e58d301c	 str         r3, [sp, #0x1C]
  007b8	ea000001	 b           |$LN17@ThreadRun@2|
  007bc		 |$LN16@ThreadRun@2|
  007bc	e3a03000	 mov         r3, #0
  007c0	e58d301c	 str         r3, [sp, #0x1C]
  007c4		 |$LN17@ThreadRun@2|

; 319  :             m_fTerminated = TRUE;

  007c4	e59d3044	 ldr         r3, [sp, #0x44]
  007c8	e283202c	 add         r2, r3, #0x2C
  007cc	e3a03001	 mov         r3, #1
  007d0	e5823000	 str         r3, [r2]

; 320  :         }
; 321  :         else

  007d4	ea000084	 b           |$LN10@ThreadRun@2|
  007d8		 |$LN11@ThreadRun@2|

; 322  :         {
; 323  :             PHSMUSB_T pOTG = m_pUsbOtg->GetHsMusb();

  007d8	e59d3044	 ldr         r3, [sp, #0x44]
  007dc	e2833030	 add         r3, r3, #0x30
  007e0	e5930000	 ldr         r0, [r3]
  007e4	eb000000	 bl          |?GetHsMusb@OMAPMHSUSBOTG@@QAAPAUHSMUSB_T@@XZ|
  007e8	e58d0020	 str         r0, [sp, #0x20]
  007ec	e59d3020	 ldr         r3, [sp, #0x20]
  007f0	e58d3008	 str         r3, [sp, #8]

; 324  :             DWORD reg = INREG32(&pOTG->pUsbDmaRegs->Intr);

  007f4	e59d3008	 ldr         r3, [sp, #8]
  007f8	e2833024	 add         r3, r3, #0x24
  007fc	e5933000	 ldr         r3, [r3]
  00800	e5933000	 ldr         r3, [r3]
  00804	e58d300c	 str         r3, [sp, #0xC]

; 325  : 
; 326  :             if (pOTG->dwPwrMgmt == MODE_SYSTEM_SUSPEND)

  00808	e59d3008	 ldr         r3, [sp, #8]
  0080c	e2833064	 add         r3, r3, #0x64
  00810	e5933000	 ldr         r3, [r3]
  00814	e3530001	 cmp         r3, #1
  00818	1a000009	 bne         |$LN9@ThreadRun@2|

; 327  : 			{
; 328  : 	            RETAILMSG(1, (L"OTG DMA ThreadRun MODE_SYSTEM_SUSPEND\r\n"));

  0081c	e59f0204	 ldr         r0, [pc, #0x204]
  00820	eb000000	 bl          NKDbgPrintfW
  00824	e3a03001	 mov         r3, #1
  00828	e58d3024	 str         r3, [sp, #0x24]
  0082c	ea000001	 b           |$LN19@ThreadRun@2|
  00830	e3a03000	 mov         r3, #0
  00834	e58d3024	 str         r3, [sp, #0x24]
  00838		 |$LN19@ThreadRun@2|

; 329  :                 Sleep(100);

  00838	e3a00064	 mov         r0, #0x64
  0083c	eb000000	 bl          Sleep

; 330  : 			    continue;

  00840	eaffffc4	 b           |$LN13@ThreadRun@2|
  00844		 |$LN9@ThreadRun@2|

; 331  : 			}
; 332  : 
; 333  : 	        if (pOTG->dwPwrMgmt == MODE_SYSTEM_RESUME)

  00844	e59d3008	 ldr         r3, [sp, #8]
  00848	e2833064	 add         r3, r3, #0x64
  0084c	e5933000	 ldr         r3, [r3]
  00850	e3530002	 cmp         r3, #2
  00854	1a000009	 bne         |$LN8@ThreadRun@2|

; 334  : 			{
; 335  : 	            RETAILMSG(1, (L"OTG DMA ThreadRun MODE_SYSTEM_RESUME\r\n"));

  00858	e59f01c4	 ldr         r0, [pc, #0x1C4]
  0085c	eb000000	 bl          NKDbgPrintfW
  00860	e3a03001	 mov         r3, #1
  00864	e58d3028	 str         r3, [sp, #0x28]
  00868	ea000001	 b           |$LN21@ThreadRun@2|
  0086c	e3a03000	 mov         r3, #0
  00870	e58d3028	 str         r3, [sp, #0x28]
  00874		 |$LN21@ThreadRun@2|

; 336  :                 Sleep(100);

  00874	e3a00064	 mov         r0, #0x64
  00878	eb000000	 bl          Sleep

; 337  : 			    continue;

  0087c	eaffffb5	 b           |$LN26@ThreadRun@2|
  00880		 |$LN8@ThreadRun@2|

; 338  : 			}
; 339  : 
; 340  :             int i = 0;

  00880	e3a03000	 mov         r3, #0
  00884	e58d3004	 str         r3, [sp, #4]

; 341  :             //Read the Interrupt Register and see
; 342  :             DEBUGMSG(ZONE_OTG_INFO, (TEXT("DMA Interrupt Register = 0x%x\r\n"),reg));

  00888	e59f318c	 ldr         r3, [pc, #0x18C]
  0088c	e5933440	 ldr         r3, [r3, #0x440]
  00890	e3130a01	 tst         r3, #1, 20
  00894	0a000005	 beq         |$LN22@ThreadRun@2|
  00898	e59d100c	 ldr         r1, [sp, #0xC]
  0089c	e59f017c	 ldr         r0, [pc, #0x17C]
  008a0	eb000000	 bl          NKDbgPrintfW
  008a4	e3a03001	 mov         r3, #1
  008a8	e58d302c	 str         r3, [sp, #0x2C]
  008ac	ea000001	 b           |$LN23@ThreadRun@2|
  008b0		 |$LN22@ThreadRun@2|
  008b0	e3a03000	 mov         r3, #0
  008b4	e58d302c	 str         r3, [sp, #0x2C]
  008b8		 |$LN23@ThreadRun@2|
  008b8		 |$LN7@ThreadRun@2|

; 343  :             while (i < MAX_DMA_CHANNEL)

  008b8	e59d3004	 ldr         r3, [sp, #4]
  008bc	e3530008	 cmp         r3, #8
  008c0	aa000049	 bge         |$LN6@ThreadRun@2|

; 344  :             {
; 345  :                 if (reg & INTR_CH(i))

  008c4	e59d2004	 ldr         r2, [sp, #4]
  008c8	e3a03001	 mov         r3, #1
  008cc	e1a02213	 mov         r2, r3, lsl r2
  008d0	e59d300c	 ldr         r3, [sp, #0xC]
  008d4	e1130002	 tst         r3, r2
  008d8	0a00003f	 beq         |$LN5@ThreadRun@2|

; 346  :                 {
; 347  :                     if (m_pUsbOtg->GetMode() == HOST_MODE)

  008dc	e59d3044	 ldr         r3, [sp, #0x44]
  008e0	e2833030	 add         r3, r3, #0x30
  008e4	e5932000	 ldr         r2, [r3]
  008e8	e59d3044	 ldr         r3, [sp, #0x44]
  008ec	e2833030	 add         r3, r3, #0x30
  008f0	e5930000	 ldr         r0, [r3]
  008f4	e5923000	 ldr         r3, [r2]
  008f8	e28330e0	 add         r3, r3, #0xE0
  008fc	e5933000	 ldr         r3, [r3]
  00900	e1a0e00f	 mov         lr, pc
  00904	e12fff13	 bx          r3
  00908	e58d0030	 str         r0, [sp, #0x30]
  0090c	e59d3030	 ldr         r3, [sp, #0x30]
  00910	e3530002	 cmp         r3, #2
  00914	1a00000a	 bne         |$LN4@ThreadRun@2|

; 348  :                         pOTG->pFuncs[HOST_MODE-1]->ProcessDMA(pOTG, (UCHAR)i);

  00918	e59d3004	 ldr         r3, [sp, #4]
  0091c	e20310ff	 and         r1, r3, #0xFF
  00920	e59d0008	 ldr         r0, [sp, #8]
  00924	e59d3008	 ldr         r3, [sp, #8]
  00928	e283300c	 add         r3, r3, #0xC
  0092c	e5933000	 ldr         r3, [r3]
  00930	e2833020	 add         r3, r3, #0x20
  00934	e5933000	 ldr         r3, [r3]
  00938	e1a0e00f	 mov         lr, pc
  0093c	e12fff13	 bx          r3
  00940	ea000025	 b           |$LN3@ThreadRun@2|
  00944		 |$LN4@ThreadRun@2|

; 349  :                     else if (m_pUsbOtg->GetMode() == DEVICE_MODE)

  00944	e59d3044	 ldr         r3, [sp, #0x44]
  00948	e2833030	 add         r3, r3, #0x30
  0094c	e5932000	 ldr         r2, [r3]
  00950	e59d3044	 ldr         r3, [sp, #0x44]
  00954	e2833030	 add         r3, r3, #0x30
  00958	e5930000	 ldr         r0, [r3]
  0095c	e5923000	 ldr         r3, [r2]
  00960	e28330e0	 add         r3, r3, #0xE0
  00964	e5933000	 ldr         r3, [r3]
  00968	e1a0e00f	 mov         lr, pc
  0096c	e12fff13	 bx          r3
  00970	e58d0034	 str         r0, [sp, #0x34]
  00974	e59d3034	 ldr         r3, [sp, #0x34]
  00978	e3530001	 cmp         r3, #1
  0097c	1a00000a	 bne         |$LN2@ThreadRun@2|

; 350  :                         pOTG->pFuncs[DEVICE_MODE-1]->ProcessDMA(pOTG, (UCHAR)i);

  00980	e59d3004	 ldr         r3, [sp, #4]
  00984	e20310ff	 and         r1, r3, #0xFF
  00988	e59d0008	 ldr         r0, [sp, #8]
  0098c	e59d3008	 ldr         r3, [sp, #8]
  00990	e2833008	 add         r3, r3, #8
  00994	e5933000	 ldr         r3, [r3]
  00998	e2833020	 add         r3, r3, #0x20
  0099c	e5933000	 ldr         r3, [r3]
  009a0	e1a0e00f	 mov         lr, pc
  009a4	e12fff13	 bx          r3

; 351  :                     else

  009a8	ea00000b	 b           |$LN1@ThreadRun@2|
  009ac		 |$LN2@ThreadRun@2|

; 352  :                     {
; 353  :                         DEBUGMSG(ZONE_OTG_INFO, (TEXT("Ignore DMA channel %d interrupt\r\n"), i));

  009ac	e59f3068	 ldr         r3, [pc, #0x68]
  009b0	e5933440	 ldr         r3, [r3, #0x440]
  009b4	e3130a01	 tst         r3, #1, 20
  009b8	0a000005	 beq         |$LN24@ThreadRun@2|
  009bc	e59d1004	 ldr         r1, [sp, #4]
  009c0	e59f0050	 ldr         r0, [pc, #0x50]
  009c4	eb000000	 bl          NKDbgPrintfW
  009c8	e3a03001	 mov         r3, #1
  009cc	e58d3038	 str         r3, [sp, #0x38]
  009d0	ea000001	 b           |$LN25@ThreadRun@2|
  009d4		 |$LN24@ThreadRun@2|
  009d4	e3a03000	 mov         r3, #0
  009d8	e58d3038	 str         r3, [sp, #0x38]
  009dc		 |$LN25@ThreadRun@2|
  009dc		 |$LN1@ThreadRun@2|
  009dc		 |$LN3@ThreadRun@2|
  009dc		 |$LN5@ThreadRun@2|

; 354  :                     }
; 355  :                 }
; 356  :                 i++;

  009dc	e59d3004	 ldr         r3, [sp, #4]
  009e0	e2833001	 add         r3, r3, #1
  009e4	e58d3004	 str         r3, [sp, #4]

; 357  :             }

  009e8	eaffffb2	 b           |$LN7@ThreadRun@2|
  009ec		 |$LN6@ThreadRun@2|
  009ec		 |$LN10@ThreadRun@2|

; 358  :         }
; 359  :         InterruptDone(m_dwDMASysIntr);

  009ec	e59d3044	 ldr         r3, [sp, #0x44]
  009f0	e2833038	 add         r3, r3, #0x38
  009f4	e5930000	 ldr         r0, [r3]
  009f8	eb000000	 bl          InterruptDone

; 360  :     }

  009fc	eaffff55	 b           |$LN27@ThreadRun@2|
  00a00		 |$LN12@ThreadRun@2|

; 361  :     return 1;

  00a00	e3a03001	 mov         r3, #1
  00a04	e58d3010	 str         r3, [sp, #0x10]

; 362  : }

  00a08	e59d0010	 ldr         r0, [sp, #0x10]
  00a0c	e28dd03c	 add         sp, sp, #0x3C
  00a10	e89d6000	 ldmia       sp, {sp, lr}
  00a14	e12fff1e	 bx          lr
  00a18		 |$LN31@ThreadRun@2|
  00a18		 |$LN32@ThreadRun@2|
  00a18	00000000	 DCD         |??_C@_1EE@DIBIKLBE@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?5?$AA?$CF?$AAd?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN@|
  00a1c		 |$LN33@ThreadRun@2|
  00a1c	00000000	 DCD         |dpCurSettings|
  00a20		 |$LN34@ThreadRun@2|
  00a20	00000000	 DCD         |??_C@_1EA@LDJIFHJL@?$AAD?$AAM?$AAA?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00a24		 |$LN35@ThreadRun@2|
  00a24	00000000	 DCD         |??_C@_1EO@DBJAPFDC@?$AAO?$AAT?$AAG?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?5?$AAM?$AAO?$AAD?$AAE?$AA_?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA_?$AAR?$AAE@|
  00a28		 |$LN36@ThreadRun@2|
  00a28	00000000	 DCD         |??_C@_1FA@FFEGOOFC@?$AAO?$AAT?$AAG?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?5?$AAM?$AAO?$AAD?$AAE?$AA_?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA_?$AAS?$AAU@|
  00a2c		 |$LN37@ThreadRun@2|
  00a2c	00000000	 DCD         |??_C@_1EK@BMHEKNBH@?$AAS?$AAo?$AAm?$AAe?$AAt?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAw?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAI?$AAn?$AAt?$AAr?$AAE?$AAv?$AAe@|
  00a30		 |$M43014|

			 ENDP  ; |?ThreadRun@OMAPMHSUSBDMA@@EAAKXZ|, OMAPMHSUSBDMA::ThreadRun

	EXPORT	|??_C@_1DC@LCDANENA@?$AAF?$AAa?$AAi?$AAl?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAB?$AAu?$AAs?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@HAJCOJAF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa@| [ DATA ] ; `string'
	EXPORT	|??0CRegistryEdit@@QAA@PAUHKEY__@@PBG@Z| ; CRegistryEdit::CRegistryEdit
	EXPORT	|??_7OMAPMHSUSBOTG@@6BCMiniThread@@@| [ DATA ] ; OMAPMHSUSBOTG::`vftable'
	EXPORT	|??_7OMAPMHSUSBOTG@@6BUSBOTG@@@| [ DATA ] ; OMAPMHSUSBOTG::`vftable'
	EXPORT	|?Init@OMAPMHSUSBOTG@@UAAHXZ|		; OMAPMHSUSBOTG::Init
	EXPORT	|?PostInit@OMAPMHSUSBOTG@@UAAHXZ|	; OMAPMHSUSBOTG::PostInit
	EXPORT	|?PowerUp@OMAPMHSUSBOTG@@UAAHXZ|	; OMAPMHSUSBOTG::PowerUp
	EXPORT	|?PowerDown@OMAPMHSUSBOTG@@UAAHXZ|	; OMAPMHSUSBOTG::PowerDown
	EXPORT	|?Open@USBOTG@@UAAHKK@Z|		; USBOTG::Open
	EXPORT	|?Close@DefaultBusDriver@@UAAHXZ|	; DefaultBusDriver::Close
	EXPORT	|?IOControl@OMAPMHSUSBOTG@@UAAHKPAEK0KPAK@Z| ; OMAPMHSUSBOTG::IOControl
	EXPORT	|?IsChildRemoved@DefaultBusDriver@@UAAHPBG@Z| ; DefaultBusDriver::IsChildRemoved
	EXPORT	|?CreateFunctionDeviceFolder@OMAPMHSUSBOTG@@UAAPAVDeviceFolder@@PBG0KKKKPAXK0@Z| ; OMAPMHSUSBOTG::CreateFunctionDeviceFolder
	EXPORT	|?CreateHostDeviceFolder@OMAPMHSUSBOTG@@UAAPAVDeviceFolder@@PBG0KKKKPAXK0@Z| ; OMAPMHSUSBOTG::CreateHostDeviceFolder
	EXPORT	|?LoadUnloadHCD@OMAPMHSUSBOTG@@UAAHH@Z|	; OMAPMHSUSBOTG::LoadUnloadHCD
	EXPORT	|?LoadUnloadUSBFN@OMAPMHSUSBOTG@@UAAHH@Z| ; OMAPMHSUSBOTG::LoadUnloadUSBFN
	EXPORT	|?UsbOtgConfigure@OMAPMHSUSBOTG@@UAA?AW4USBOTG_MODE@@W42@@Z| ; OMAPMHSUSBOTG::UsbOtgConfigure
	EXPORT	|?EventNotification@OMAPMHSUSBOTG@@UAAHXZ| ; OMAPMHSUSBOTG::EventNotification
	EXPORT	|?NewStateAction@OMAPMHSUSBOTG@@UAAHW4USBOTG_STATES@@T_USBOTG_OUTPUT@@@Z| ; OMAPMHSUSBOTG::NewStateAction
	EXPORT	|?UpdateInput@OMAPMHSUSBOTG@@UAAHXZ|	; OMAPMHSUSBOTG::UpdateInput
	EXPORT	|?SessionRequest@OMAPMHSUSBOTG@@UAAHHH@Z| ; OMAPMHSUSBOTG::SessionRequest
	EXPORT	|?DischargVBus@OMAPMHSUSBOTG@@UAAHXZ|	; OMAPMHSUSBOTG::DischargVBus
	EXPORT	|?IsSE0@OMAPMHSUSBOTG@@UAAHXZ|		; OMAPMHSUSBOTG::IsSE0
	EXPORT	|?OTGUSBFNNotfyActive@OMAPMHSUSBOTG@@UAAHPBGH@Z| ; OMAPMHSUSBOTG::OTGUSBFNNotfyActive
	EXPORT	|?OTGHCDNotfyAccept@OMAPMHSUSBOTG@@UAAHPBGH@Z| ; OMAPMHSUSBOTG::OTGHCDNotfyAccept
	EXPORT	|?GetOtgAConnectEvent@USBOTG@@UAAPAXXZ|	; USBOTG::GetOtgAConnectEvent
	EXPORT	|?SetChildDevicePowerState@USBOTG@@UAAHPAU_CE_BUS_POWER_STATE@@@Z| ; USBOTG::SetChildDevicePowerState
	EXPORT	|?GetChildDevicePowerState@USBOTG@@UAAHPAU_CE_BUS_POWER_STATE@@@Z| ; USBOTG::GetChildDevicePowerState
	EXPORT	|?UpdatePowerState@USBOTG@@UAAHXZ|	; USBOTG::UpdatePowerState
	EXPORT	|?GetPowerCapabilities@USBOTG@@UAA?AU_POWER_CAPABILITIES@@XZ| ; USBOTG::GetPowerCapabilities
	EXPORT	|?OTG_ConfigISR_stage1@OMAPMHSUSBOTG@@UAAKXZ| ; OMAPMHSUSBOTG::OTG_ConfigISR_stage1
	EXPORT	|?OTG_ConfigISR_stage2@OMAPMHSUSBOTG@@UAAKXZ| ; OMAPMHSUSBOTG::OTG_ConfigISR_stage2
	EXPORT	|?PowerDownDisconnect@OMAPMHSUSBOTG@@UAAXXZ| ; OMAPMHSUSBOTG::PowerDownDisconnect
	EXPORT	|?OTG_ProcessEP0@OMAPMHSUSBOTG@@UAAKXZ|	; OMAPMHSUSBOTG::OTG_ProcessEP0
	EXPORT	|?OTG_ProcessEPx@OMAPMHSUSBOTG@@UAAKEH@Z| ; OMAPMHSUSBOTG::OTG_ProcessEPx
	EXPORT	|?GetMode@OMAPMHSUSBOTG@@UAAKXZ|	; OMAPMHSUSBOTG::GetMode
	EXPORT	|?StartUSBClock@OMAPMHSUSBOTG@@UAAHH@Z|	; OMAPMHSUSBOTG::StartUSBClock
	EXPORT	|?StopUSBClock@OMAPMHSUSBOTG@@UAAHXZ|	; OMAPMHSUSBOTG::StopUSBClock
	EXPORT	|?ResetEndPoints@OMAPMHSUSBOTG@@UAAXXZ|	; OMAPMHSUSBOTG::ResetEndPoints
	EXPORT	|?EnableSuspend@OMAPMHSUSBOTG@@UAAHH@Z|	; OMAPMHSUSBOTG::EnableSuspend
	EXPORT	|?UpdateBatteryCharger@OMAPMHSUSBOTG@@UAAXK@Z| ; OMAPMHSUSBOTG::UpdateBatteryCharger
	EXPORT	|?SoftResetMUSBController@OMAPMHSUSBOTG@@UAAHH@Z| ; OMAPMHSUSBOTG::SoftResetMUSBController
	EXPORT	|?SoftResetULPILink@OMAPMHSUSBOTG@@UAAHXZ| ; OMAPMHSUSBOTG::SoftResetULPILink
	EXPORT	|?ContextRestore@OMAPMHSUSBOTG@@UAAHXZ|	; OMAPMHSUSBOTG::ContextRestore
	EXPORT	|?SetPowerState@OMAPMHSUSBOTG@@UAAHW4_CEDEVICE_POWER_STATE@@@Z| ; OMAPMHSUSBOTG::SetPowerState
	EXPORT	|?ThreadRun@OMAPMHSUSBOTG@@EAAKXZ|	; OMAPMHSUSBOTG::ThreadRun
	IMPORT	|StringCchCopyW|
	IMPORT	|wcslen|
	IMPORT	|CreateBusAccessHandle|
	IMPORT	|GetDeviceRegistryParams|
	IMPORT	|??0USBOTG@@QAA@PBG@Z|			; USBOTG::USBOTG
	IMPORT	|??_EOMAPMHSUSBOTG@@UAAPAXI@Z|, WEAK |??_GOMAPMHSUSBOTG@@UAAPAXI@Z| ; OMAPMHSUSBOTG::`vector deleting destructor', OMAPMHSUSBOTG::`scalar deleting destructor'
	IMPORT	|?TranslateChildBusAddr@DefaultBusDriver@@UAAHPAU_CE_BUS_TRANSLATE_BUS_ADDR@@@Z| ; DefaultBusDriver::TranslateChildBusAddr
	IMPORT	|?TranslateChildSystemAddr@DefaultBusDriver@@UAAHPAU_CE_BUS_TRANSLATE_SYSTEM_ADDR@@@Z| ; DefaultBusDriver::TranslateChildSystemAddr
	IMPORT	|?SetChildDevicePowerState@DefaultBusDriver@@UAAHPAU_CE_BUS_POWER_STATE@@PAPAVDeviceFolder@@@Z| ; DefaultBusDriver::SetChildDevicePowerState
	IMPORT	|?GetChildDevicePowerState@DefaultBusDriver@@UAAHPAU_CE_BUS_POWER_STATE@@PAPAVDeviceFolder@@@Z| ; DefaultBusDriver::GetChildDevicePowerState
	IMPORT	|?SetChildDeviceConfigurationData@DefaultBusDriver@@UAAHPAU_CE_BUS_DEVICE_CONFIGURATION_DATA@@PAPAVDeviceFolder@@@Z| ; DefaultBusDriver::SetChildDeviceConfigurationData
	IMPORT	|?GetChildDeviceConfigurationData@DefaultBusDriver@@UAAHPAU_CE_BUS_DEVICE_CONFIGURATION_DATA@@PAPAVDeviceFolder@@@Z| ; DefaultBusDriver::GetChildDeviceConfigurationData
	IMPORT	|?ActivateChild@DefaultBusDriver@@UAAHPBG@Z| ; DefaultBusDriver::ActivateChild
	IMPORT	|?DeactivateChild@DefaultBusDriver@@UAAHPBG@Z| ; DefaultBusDriver::DeactivateChild
	IMPORT	|?GetChildByName@DefaultBusDriver@@UAAPAVDeviceFolder@@PBGPAPAV2@@Z| ; DefaultBusDriver::GetChildByName
	IMPORT	|?InsertChild@DefaultBusDriver@@UAAHPAVDeviceFolder@@@Z| ; DefaultBusDriver::InsertChild
	IMPORT	|?RemoveChildByName@DefaultBusDriver@@UAAHPBG@Z| ; DefaultBusDriver::RemoveChildByName
	IMPORT	|?RemoveChildByFolder@DefaultBusDriver@@UAAHPAVDeviceFolder@@@Z| ; DefaultBusDriver::RemoveChildByFolder
	IMPORT	|?GetBusNamePrefix@USBOTG@@UAAKPAGK@Z|	; USBOTG::GetBusNamePrefix
	IMPORT	|?FastIOControl@DefaultBusDriver@@UAAHKPAEK0KPAKPAPAVDeviceFolder@@@Z| ; DefaultBusDriver::FastIOControl
	IMPORT	|?ActivateAllChildDrivers@USBOTG@@UAAHXZ| ; USBOTG::ActivateAllChildDrivers
	IMPORT	|?TimeOut@USBOTG@@UAAHW4USBOTG_WATCHITEM@@@Z| ; USBOTG::TimeOut
	IMPORT	|?GetOTGEnableBit@USBOTG@@UAAEPBG@Z|	; USBOTG::GetOTGEnableBit
	IMPORT	|?OtgRequestBus@USBOTG@@UAAHH@Z|	; USBOTG::OtgRequestBus
	IMPORT	|?OtgDropBus@USBOTG@@UAAHH@Z|		; USBOTG::OtgDropBus
	IMPORT	|?OtgSuspendBus@USBOTG@@UAAHPBGH@Z|	; USBOTG::OtgSuspendBus
	IMPORT	|?OtgEnableHNP@USBOTG@@UAAHPBGH@Z|	; USBOTG::OtgEnableHNP
	IMPORT	|?OTGNotifyDetach@USBOTG@@UAAHPBG@Z|	; USBOTG::OTGNotifyDetach
	IMPORT	|?EnterState@USBOTG@@MAAHW4USBOTG_STATES@@@Z| ; USBOTG::EnterState
	IMPORT	|?StateChange@USBOTG@@MAA?AW4USBOTG_STATES@@W42@@Z| ; USBOTG::StateChange

  00050			 AREA	 |.pdata|, PDATA
|$T43036| DCD	|$LN15@OMAPMHSUSB@5|
	DCD	0x40009f04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@LCDANENA@?$AAF?$AAa?$AAi?$AAl?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAB?$AAu?$AAs?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "g", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "B"
	DCB	0x0, "u", 0x0, "s", 0x0, " ", 0x0, "H", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, "l", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@HAJCOJAF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, "M", 0x0, "H"
	DCB	0x0, "S", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T"
	DCB	0x0, "G", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "r", 0x0, "y", 0x0, " "
	DCB	0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7OMAPMHSUSBOTG@@6BCMiniThread@@@| DCD |?ThreadRun@OMAPMHSUSBOTG@@EAAKXZ| ; OMAPMHSUSBOTG::`vftable'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7OMAPMHSUSBOTG@@6BUSBOTG@@@| DCD |?Init@OMAPMHSUSBOTG@@UAAHXZ| ; OMAPMHSUSBOTG::`vftable'
	DCD	|?PostInit@OMAPMHSUSBOTG@@UAAHXZ|
	DCD	|??_EOMAPMHSUSBOTG@@UAAPAXI@Z|
	DCD	|?TranslateChildBusAddr@DefaultBusDriver@@UAAHPAU_CE_BUS_TRANSLATE_BUS_ADDR@@@Z|
	DCD	|?TranslateChildSystemAddr@DefaultBusDriver@@UAAHPAU_CE_BUS_TRANSLATE_SYSTEM_ADDR@@@Z|
	DCD	|?SetChildDevicePowerState@DefaultBusDriver@@UAAHPAU_CE_BUS_POWER_STATE@@PAPAVDeviceFolder@@@Z|
	DCD	|?GetChildDevicePowerState@DefaultBusDriver@@UAAHPAU_CE_BUS_POWER_STATE@@PAPAVDeviceFolder@@@Z|
	DCD	|?SetChildDeviceConfigurationData@DefaultBusDriver@@UAAHPAU_CE_BUS_DEVICE_CONFIGURATION_DATA@@PAPAVDeviceFolder@@@Z|
	DCD	|?GetChildDeviceConfigurationData@DefaultBusDriver@@UAAHPAU_CE_BUS_DEVICE_CONFIGURATION_DATA@@PAPAVDeviceFolder@@@Z|
	DCD	|?ActivateChild@DefaultBusDriver@@UAAHPBG@Z|
	DCD	|?DeactivateChild@DefaultBusDriver@@UAAHPBG@Z|
	DCD	|?PowerUp@OMAPMHSUSBOTG@@UAAHXZ|
	DCD	|?PowerDown@OMAPMHSUSBOTG@@UAAHXZ|
	DCD	|?Open@USBOTG@@UAAHKK@Z|
	DCD	|?Close@DefaultBusDriver@@UAAHXZ|
	DCD	|?IOControl@OMAPMHSUSBOTG@@UAAHKPAEK0KPAK@Z|
	DCD	|?GetChildByName@DefaultBusDriver@@UAAPAVDeviceFolder@@PBGPAPAV2@@Z|
	DCD	|?InsertChild@DefaultBusDriver@@UAAHPAVDeviceFolder@@@Z|
	DCD	|?RemoveChildByName@DefaultBusDriver@@UAAHPBG@Z|
	DCD	|?RemoveChildByFolder@DefaultBusDriver@@UAAHPAVDeviceFolder@@@Z|
	DCD	|?IsChildRemoved@DefaultBusDriver@@UAAHPBG@Z|
	DCD	|?GetBusNamePrefix@USBOTG@@UAAKPAGK@Z|
	DCD	|?FastIOControl@DefaultBusDriver@@UAAHKPAEK0KPAKPAPAVDeviceFolder@@@Z|
	DCD	|?CreateFunctionDeviceFolder@OMAPMHSUSBOTG@@UAAPAVDeviceFolder@@PBG0KKKKPAXK0@Z|
	DCD	|?CreateHostDeviceFolder@OMAPMHSUSBOTG@@UAAPAVDeviceFolder@@PBG0KKKKPAXK0@Z|
	DCD	|?ActivateAllChildDrivers@USBOTG@@UAAHXZ|
	DCD	|?LoadUnloadHCD@OMAPMHSUSBOTG@@UAAHH@Z|
	DCD	|?LoadUnloadUSBFN@OMAPMHSUSBOTG@@UAAHH@Z|
	DCD	|?UsbOtgConfigure@OMAPMHSUSBOTG@@UAA?AW4USBOTG_MODE@@W42@@Z|
	DCD	|?EventNotification@OMAPMHSUSBOTG@@UAAHXZ|
	DCD	|?TimeOut@USBOTG@@UAAHW4USBOTG_WATCHITEM@@@Z|
	DCD	|?NewStateAction@OMAPMHSUSBOTG@@UAAHW4USBOTG_STATES@@T_USBOTG_OUTPUT@@@Z|
	DCD	|?UpdateInput@OMAPMHSUSBOTG@@UAAHXZ|
	DCD	|?SessionRequest@OMAPMHSUSBOTG@@UAAHHH@Z|
	DCD	|?DischargVBus@OMAPMHSUSBOTG@@UAAHXZ|
	DCD	|?IsSE0@OMAPMHSUSBOTG@@UAAHXZ|
	DCD	|?GetOTGEnableBit@USBOTG@@UAAEPBG@Z|
	DCD	|?OtgRequestBus@USBOTG@@UAAHH@Z|
	DCD	|?OtgDropBus@USBOTG@@UAAHH@Z|
	DCD	|?OtgSuspendBus@USBOTG@@UAAHPBGH@Z|
	DCD	|?OtgEnableHNP@USBOTG@@UAAHPBGH@Z|
	DCD	|?OTGNotifyDetach@USBOTG@@UAAHPBG@Z|
	DCD	|?OTGUSBFNNotfyActive@OMAPMHSUSBOTG@@UAAHPBGH@Z|
	DCD	|?OTGHCDNotfyAccept@OMAPMHSUSBOTG@@UAAHPBGH@Z|
	DCD	|?GetOtgAConnectEvent@USBOTG@@UAAPAXXZ|
	DCD	|?SetChildDevicePowerState@USBOTG@@UAAHPAU_CE_BUS_POWER_STATE@@@Z|
	DCD	|?GetChildDevicePowerState@USBOTG@@UAAHPAU_CE_BUS_POWER_STATE@@@Z|
	DCD	|?UpdatePowerState@USBOTG@@UAAHXZ|
	DCD	|?GetPowerCapabilities@USBOTG@@UAA?AU_POWER_CAPABILITIES@@XZ|
	DCD	|?EnterState@USBOTG@@MAAHW4USBOTG_STATES@@@Z|
	DCD	|?StateChange@USBOTG@@MAA?AW4USBOTG_STATES@@W42@@Z|
	DCD	|?OTG_ConfigISR_stage1@OMAPMHSUSBOTG@@UAAKXZ|
	DCD	|?OTG_ConfigISR_stage2@OMAPMHSUSBOTG@@UAAKXZ|
	DCD	|?PowerDownDisconnect@OMAPMHSUSBOTG@@UAAXXZ|
	DCD	|?OTG_ProcessEP0@OMAPMHSUSBOTG@@UAAKXZ|
	DCD	|?OTG_ProcessEPx@OMAPMHSUSBOTG@@UAAKEH@Z|
	DCD	|?GetMode@OMAPMHSUSBOTG@@UAAKXZ|
	DCD	|?StartUSBClock@OMAPMHSUSBOTG@@UAAHH@Z|
	DCD	|?StopUSBClock@OMAPMHSUSBOTG@@UAAHXZ|
	DCD	|?ResetEndPoints@OMAPMHSUSBOTG@@UAAXXZ|
	DCD	|?EnableSuspend@OMAPMHSUSBOTG@@UAAHH@Z|
	DCD	|?UpdateBatteryCharger@OMAPMHSUSBOTG@@UAAXK@Z|
	DCD	|?SoftResetMUSBController@OMAPMHSUSBOTG@@UAAHH@Z|
	DCD	|?SoftResetULPILink@OMAPMHSUSBOTG@@UAAHXZ|
	DCD	|?ContextRestore@OMAPMHSUSBOTG@@UAAHXZ|
	DCD	|?SetPowerState@OMAPMHSUSBOTG@@UAAHW4_CEDEVICE_POWER_STATE@@@Z|
; Function compile flags: /Odtp

  00a30			 AREA	 |.text|, CODE, ARM

  00a30		 |??0OMAPMHSUSBOTG@@QAA@PBG@Z| PROC	; OMAPMHSUSBOTG::OMAPMHSUSBOTG

; 385  : {

  00a30		 |$LN15@OMAPMHSUSB@5|
  00a30	e1a0c00d	 mov         r12, sp
  00a34	e92d0003	 stmdb       sp!, {r0, r1}
  00a38	e92d5000	 stmdb       sp!, {r12, lr}
  00a3c	e24dd038	 sub         sp, sp, #0x38
  00a40		 |$M43033|
  00a40	e59d1044	 ldr         r1, [sp, #0x44]
  00a44	e59d0040	 ldr         r0, [sp, #0x40]
  00a48	eb000000	 bl          |??0USBOTG@@QAA@PBG@Z|
  00a4c	e58d000c	 str         r0, [sp, #0xC]
  00a50	e3a02001	 mov         r2, #1
  00a54	e3a01000	 mov         r1, #0
  00a58	e59d3040	 ldr         r3, [sp, #0x40]
  00a5c	e28300dc	 add         r0, r3, #0xDC
  00a60	eb000000	 bl          |??0CMiniThread@@QAA@KH@Z|
  00a64	e58d0010	 str         r0, [sp, #0x10]
  00a68	e59f2238	 ldr         r2, [pc, #0x238]
  00a6c	e59d3040	 ldr         r3, [sp, #0x40]
  00a70	e5832000	 str         r2, [r3]
  00a74	e59d3040	 ldr         r3, [sp, #0x40]
  00a78	e28320dc	 add         r2, r3, #0xDC
  00a7c	e59f3220	 ldr         r3, [pc, #0x220]
  00a80	e5823000	 str         r3, [r2]
  00a84	e59d2044	 ldr         r2, [sp, #0x44]
  00a88	e3a0110a	 mov         r1, #0xA, 2
  00a8c	e59d3040	 ldr         r3, [sp, #0x40]
  00a90	e2830f4e	 add         r0, r3, #0x4E, 30
  00a94	eb000000	 bl          |??0CRegistryEdit@@QAA@PAUHKEY__@@PBG@Z|
  00a98	e58d0014	 str         r0, [sp, #0x14]
  00a9c	e59d3040	 ldr         r3, [sp, #0x40]
  00aa0	e2832f5f	 add         r2, r3, #0x5F, 30
  00aa4	e3a03000	 mov         r3, #0
  00aa8	e5823000	 str         r3, [r2]

; 386  :     if (GetDeviceRegistryParams(
; 387  :         lpActivePath, &m_OTGRegCfg, dimof(s_deviceRegParams), s_deviceRegParams
; 388  :         ) != ERROR_SUCCESS)

  00aac	e59f31ec	 ldr         r3, [pc, #0x1EC]
  00ab0	e3a02008	 mov         r2, #8
  00ab4	e59d1040	 ldr         r1, [sp, #0x40]
  00ab8	e2811c01	 add         r1, r1, #1, 24
  00abc	e59d0044	 ldr         r0, [sp, #0x44]
  00ac0	eb000000	 bl          GetDeviceRegistryParams
  00ac4	e58d0018	 str         r0, [sp, #0x18]
  00ac8	e59d3018	 ldr         r3, [sp, #0x18]
  00acc	e3530000	 cmp         r3, #0
  00ad0	0a00000a	 beq         |$LN4@OMAPMHSUSB@5|

; 389  :     {
; 390  :         DEBUGMSG(ZONE_OTG_ERROR, (L"ERROR: OMAPMHSUSBOTG: "
; 391  :             L"Failed read registry parameters\r\n"
; 392  :             ));

  00ad4	e59f31bc	 ldr         r3, [pc, #0x1BC]
  00ad8	e5933440	 ldr         r3, [r3, #0x440]
  00adc	e3130902	 tst         r3, #2, 18
  00ae0	0a000004	 beq         |$LN7@OMAPMHSUSB@5|
  00ae4	e59f01b0	 ldr         r0, [pc, #0x1B0]
  00ae8	eb000000	 bl          NKDbgPrintfW
  00aec	e3a03001	 mov         r3, #1
  00af0	e58d301c	 str         r3, [sp, #0x1C]
  00af4	ea000001	 b           |$LN8@OMAPMHSUSB@5|
  00af8		 |$LN7@OMAPMHSUSB@5|
  00af8	e3a03000	 mov         r3, #0
  00afc	e58d301c	 str         r3, [sp, #0x1C]
  00b00		 |$LN8@OMAPMHSUSB@5|
  00b00		 |$LN4@OMAPMHSUSB@5|

; 393  :     }
; 394  : 
; 395  :     m_hParent = CreateBusAccessHandle(lpActivePath);

  00b00	e59d0044	 ldr         r0, [sp, #0x44]
  00b04	eb000000	 bl          CreateBusAccessHandle
  00b08	e58d0020	 str         r0, [sp, #0x20]
  00b0c	e59d3040	 ldr         r3, [sp, #0x40]
  00b10	e2832d05	 add         r2, r3, #5, 26
  00b14	e59d3020	 ldr         r3, [sp, #0x20]
  00b18	e5823000	 str         r3, [r2]

; 396  :     if (m_hParent == NULL)

  00b1c	e59d3040	 ldr         r3, [sp, #0x40]
  00b20	e2833d05	 add         r3, r3, #5, 26
  00b24	e5933000	 ldr         r3, [r3]
  00b28	e3530000	 cmp         r3, #0
  00b2c	1a00000a	 bne         |$LN3@OMAPMHSUSB@5|

; 397  :         DEBUGMSG(ZONE_OTG_ERROR, (TEXT("Fail to get Bus Handle\r\n")));

  00b30	e59f3160	 ldr         r3, [pc, #0x160]
  00b34	e5933440	 ldr         r3, [r3, #0x440]
  00b38	e3130902	 tst         r3, #2, 18
  00b3c	0a000004	 beq         |$LN9@OMAPMHSUSB@5|
  00b40	e59f014c	 ldr         r0, [pc, #0x14C]
  00b44	eb000000	 bl          NKDbgPrintfW
  00b48	e3a03001	 mov         r3, #1
  00b4c	e58d3024	 str         r3, [sp, #0x24]
  00b50	ea000001	 b           |$LN10@OMAPMHSUSB@5|
  00b54		 |$LN9@OMAPMHSUSB@5|
  00b54	e3a03000	 mov         r3, #0
  00b58	e58d3024	 str         r3, [sp, #0x24]
  00b5c		 |$LN10@OMAPMHSUSB@5|
  00b5c		 |$LN3@OMAPMHSUSB@5|

; 398  : 
; 399  :     m_ActiveKeyPath = NULL;

  00b5c	e59d3040	 ldr         r3, [sp, #0x40]
  00b60	e2832f4f	 add         r2, r3, #0x4F, 30
  00b64	e3a03000	 mov         r3, #0
  00b68	e5823000	 str         r3, [r2]

; 400  :     if (lpActivePath) 

  00b6c	e59d3044	 ldr         r3, [sp, #0x44]
  00b70	e3530000	 cmp         r3, #0
  00b74	0a000025	 beq         |$LN2@OMAPMHSUSB@5|

; 401  :     {
; 402  :         DWORD dwLength = _tcslen(lpActivePath) + 1;

  00b78	e59d0044	 ldr         r0, [sp, #0x44]
  00b7c	eb000000	 bl          wcslen
  00b80	e58d0028	 str         r0, [sp, #0x28]
  00b84	e59d3028	 ldr         r3, [sp, #0x28]
  00b88	e2833001	 add         r3, r3, #1
  00b8c	e58d3000	 str         r3, [sp]

; 403  :         m_ActiveKeyPath = new TCHAR[dwLength];

  00b90	e59d3000	 ldr         r3, [sp]
  00b94	e58d302c	 str         r3, [sp, #0x2C]
  00b98	e59d302c	 ldr         r3, [sp, #0x2C]
  00b9c	e3730106	 cmn         r3, #6, 2
  00ba0	8a000004	 bhi         |$LN11@OMAPMHSUSB@5|
  00ba4	e59d202c	 ldr         r2, [sp, #0x2C]
  00ba8	e3a03002	 mov         r3, #2
  00bac	e0030392	 mul         r3, r2, r3
  00bb0	e58d3030	 str         r3, [sp, #0x30]
  00bb4	ea000001	 b           |$LN12@OMAPMHSUSB@5|
  00bb8		 |$LN11@OMAPMHSUSB@5|
  00bb8	e3e03000	 mvn         r3, #0
  00bbc	e58d3030	 str         r3, [sp, #0x30]
  00bc0		 |$LN12@OMAPMHSUSB@5|
  00bc0	e59d0030	 ldr         r0, [sp, #0x30]
  00bc4	eb000000	 bl          |??2@YAPAXI@Z|
  00bc8	e58d0034	 str         r0, [sp, #0x34]
  00bcc	e59d3034	 ldr         r3, [sp, #0x34]
  00bd0	e58d3004	 str         r3, [sp, #4]
  00bd4	e59d3040	 ldr         r3, [sp, #0x40]
  00bd8	e2832f4f	 add         r2, r3, #0x4F, 30
  00bdc	e59d3004	 ldr         r3, [sp, #4]
  00be0	e5823000	 str         r3, [r2]

; 404  :         if (m_ActiveKeyPath)

  00be4	e59d3040	 ldr         r3, [sp, #0x40]
  00be8	e2833f4f	 add         r3, r3, #0x4F, 30
  00bec	e5933000	 ldr         r3, [r3]
  00bf0	e3530000	 cmp         r3, #0
  00bf4	0a000005	 beq         |$LN1@OMAPMHSUSB@5|

; 405  :             StringCchCopy(m_ActiveKeyPath, dwLength, lpActivePath);

  00bf8	e59d2044	 ldr         r2, [sp, #0x44]
  00bfc	e59d1000	 ldr         r1, [sp]
  00c00	e59d3040	 ldr         r3, [sp, #0x40]
  00c04	e2833f4f	 add         r3, r3, #0x4F, 30
  00c08	e5930000	 ldr         r0, [r3]
  00c0c	eb000000	 bl          StringCchCopyW
  00c10		 |$LN1@OMAPMHSUSB@5|
  00c10		 |$LN2@OMAPMHSUSB@5|

; 406  :     }
; 407  : 
; 408  :     InitializeCriticalSection(&m_csUSBClock);

  00c10	e59d3040	 ldr         r3, [sp, #0x40]
  00c14	e2830f49	 add         r0, r3, #0x49, 30
  00c18	eb000000	 bl          InitializeCriticalSection

; 409  :     m_bHNPEnable = FALSE;

  00c1c	e59d3040	 ldr         r3, [sp, #0x40]
  00c20	e2832f5b	 add         r2, r3, #0x5B, 30
  00c24	e3a03000	 mov         r3, #0
  00c28	e5823000	 str         r3, [r2]

; 410  :     m_pDMA = NULL;

  00c2c	e59d3040	 ldr         r3, [sp, #0x40]
  00c30	e2832f55	 add         r2, r3, #0x55, 30
  00c34	e3a03000	 mov         r3, #0
  00c38	e5823000	 str         r3, [r2]

; 411  :     m_pIdGnd = NULL;

  00c3c	e59d3040	 ldr         r3, [sp, #0x40]
  00c40	e2832f56	 add         r2, r3, #0x56, 30
  00c44	e3a03000	 mov         r3, #0
  00c48	e5823000	 str         r3, [r2]

; 412  :     m_bOTGReady = FALSE;

  00c4c	e59d3040	 ldr         r3, [sp, #0x40]
  00c50	e2832f62	 add         r2, r3, #0x62, 30
  00c54	e3a03000	 mov         r3, #0
  00c58	e5823000	 str         r3, [r2]

; 413  :     m_disconnected = TRUE;

  00c5c	e59d3040	 ldr         r3, [sp, #0x40]
  00c60	e2832f63	 add         r2, r3, #0x63, 30
  00c64	e3a03001	 mov         r3, #1
  00c68	e5823000	 str         r3, [r2]

; 414  :     m_fDelayRequired = TRUE;

  00c6c	e59d3040	 ldr         r3, [sp, #0x40]
  00c70	e2832f67	 add         r2, r3, #0x67, 30
  00c74	e3a03001	 mov         r3, #1
  00c78	e5823000	 str         r3, [r2]

; 415  : }

  00c7c	e59d3040	 ldr         r3, [sp, #0x40]
  00c80	e58d3008	 str         r3, [sp, #8]
  00c84	e59d0008	 ldr         r0, [sp, #8]
  00c88	e28dd038	 add         sp, sp, #0x38
  00c8c	e89d6000	 ldmia       sp, {sp, lr}
  00c90	e12fff1e	 bx          lr
  00c94		 |$LN16@OMAPMHSUSB@5|
  00c94		 |$LN17@OMAPMHSUSB@5|
  00c94	00000000	 DCD         |??_C@_1DC@LCDANENA@?$AAF?$AAa?$AAi?$AAl?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAB?$AAu?$AAs?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  00c98		 |$LN18@OMAPMHSUSB@5|
  00c98	00000000	 DCD         |dpCurSettings|
  00c9c		 |$LN19@OMAPMHSUSB@5|
  00c9c	00000000	 DCD         |??_C@_1HA@HAJCOJAF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa@|
  00ca0		 |$LN20@OMAPMHSUSB@5|
  00ca0	00000000	 DCD         |s_deviceRegParams|
  00ca4		 |$LN21@OMAPMHSUSB@5|
  00ca4	00000000	 DCD         |??_7OMAPMHSUSBOTG@@6BCMiniThread@@@|
  00ca8		 |$LN22@OMAPMHSUSB@5|
  00ca8	00000000	 DCD         |??_7OMAPMHSUSBOTG@@6BUSBOTG@@@|
  00cac		 |$M43034|

			 ENDP  ; |??0OMAPMHSUSBOTG@@QAA@PBG@Z|, OMAPMHSUSBOTG::OMAPMHSUSBOTG

	IMPORT	|RegOpenKeyExW|
; File c:\wince600\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.pdata|, PDATA
|$T43050| DCD	|$LN7@CRegistryE|
	DCD	0x40001e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CRegistryEdit@@QAA@PAUHKEY__@@PBG@Z| PROC ; CRegistryEdit::CRegistryEdit

; 45   :     CRegistryEdit( HKEY hKey, LPCTSTR pszRegPath )

  00000		 |$LN7@CRegistryE|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd010	 sub         sp, sp, #0x10
  00010		 |$M43047|

; 46   :     {
; 47   :         m_hDevKey = NULL;

  00010	e59d2018	 ldr         r2, [sp, #0x18]
  00014	e3a03000	 mov         r3, #0
  00018	e5823000	 str         r3, [r2]

; 48   :         if( pszRegPath )

  0001c	e59d3020	 ldr         r3, [sp, #0x20]
  00020	e3530000	 cmp         r3, #0
  00024	0a00000d	 beq         |$LN2@CRegistryE|

; 49   :         {
; 50   :             if( RegOpenKeyEx( hKey, pszRegPath, 0, 0, &m_hDevKey ) != ERROR_SUCCESS )

  00028	e59d3018	 ldr         r3, [sp, #0x18]
  0002c	e58d3000	 str         r3, [sp]
  00030	e3a03000	 mov         r3, #0
  00034	e3a02000	 mov         r2, #0
  00038	e59d1020	 ldr         r1, [sp, #0x20]
  0003c	e59d001c	 ldr         r0, [sp, #0x1C]
  00040	eb000000	 bl          RegOpenKeyExW
  00044	e58d000c	 str         r0, [sp, #0xC]
  00048	e59d300c	 ldr         r3, [sp, #0xC]
  0004c	e3530000	 cmp         r3, #0
  00050	0a000002	 beq         |$LN1@CRegistryE|

; 51   :             {
; 52   :                 m_hDevKey = NULL;

  00054	e59d2018	 ldr         r2, [sp, #0x18]
  00058	e3a03000	 mov         r3, #0
  0005c	e5823000	 str         r3, [r2]
  00060		 |$LN1@CRegistryE|
  00060		 |$LN2@CRegistryE|

; 53   :             }
; 54   :         }
; 55   :     }

  00060	e59d3018	 ldr         r3, [sp, #0x18]
  00064	e58d3008	 str         r3, [sp, #8]
  00068	e59d0008	 ldr         r0, [sp, #8]
  0006c	e28dd010	 add         sp, sp, #0x10
  00070	e89d6000	 ldmia       sp, {sp, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$M43048|

			 ENDP  ; |??0CRegistryEdit@@QAA@PAUHKEY__@@PBG@Z|, CRegistryEdit::CRegistryEdit

; File c:\wince600\public\common\oak\inc\defbus.h

  00000			 AREA	 |.pdata|, PDATA
|$T43058| DCD	|$LN5@Close|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Close@DefaultBusDriver@@UAAHXZ| PROC	; DefaultBusDriver::Close

; 150  :     virtual BOOL  Close() { return TRUE; };

  00000		 |$LN5@Close|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M43055|
  00010	e3a03001	 mov         r3, #1
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M43056|

			 ENDP  ; |?Close@DefaultBusDriver@@UAAHXZ|, DefaultBusDriver::Close


  00000			 AREA	 |.pdata|, PDATA
|$T43066| DCD	|$LN5@IsChildRem|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsChildRemoved@DefaultBusDriver@@UAAHPBG@Z| PROC ; DefaultBusDriver::IsChildRemoved

; 162  :     virtual BOOL IsChildRemoved(LPCTSTR lpChildName) { return FALSE; }; // Can not be removed for default driver.

  00000		 |$LN5@IsChildRem|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M43063|
  00010	e3a03000	 mov         r3, #0
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M43064|

			 ENDP  ; |?IsChildRemoved@DefaultBusDriver@@UAAHPBG@Z|, DefaultBusDriver::IsChildRemoved

; File c:\wince600\public\common\oak\inc\usbotg.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T43074| DCD	|$LN5@Open|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Open@USBOTG@@UAAHKK@Z| PROC		; USBOTG::Open

; 185  :     virtual BOOL  Open( DWORD   AccessCode,   DWORD   Share) { return TRUE; };

  00000		 |$LN5@Open|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M43071|
  00010	e3a03001	 mov         r3, #1
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M43072|

			 ENDP  ; |?Open@USBOTG@@UAAHKK@Z|, USBOTG::Open


  00000			 AREA	 |.pdata|, PDATA
|$T43082| DCD	|$LN5@GetOtgACon|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetOtgAConnectEvent@USBOTG@@UAAPAXXZ| PROC ; USBOTG::GetOtgAConnectEvent

; 208  :     virtual HANDLE GetOtgAConnectEvent() { return m_hAConnectEvent; };

  00000		 |$LN5@GetOtgACon|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M43079|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e283309c	 add         r3, r3, #0x9C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M43080|

			 ENDP  ; |?GetOtgAConnectEvent@USBOTG@@UAAPAXXZ|, USBOTG::GetOtgAConnectEvent


  00000			 AREA	 |.pdata|, PDATA
|$T43090| DCD	|$LN5@SetChildDe|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetChildDevicePowerState@USBOTG@@UAAHPAU_CE_BUS_POWER_STATE@@@Z| PROC ; USBOTG::SetChildDevicePowerState

; 210  :     virtual BOOL SetChildDevicePowerState(PCE_BUS_POWER_STATE ) { return FALSE; };

  00000		 |$LN5@SetChildDe|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M43087|
  00010	e3a03000	 mov         r3, #0
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M43088|

			 ENDP  ; |?SetChildDevicePowerState@USBOTG@@UAAHPAU_CE_BUS_POWER_STATE@@@Z|, USBOTG::SetChildDevicePowerState


  00000			 AREA	 |.pdata|, PDATA
|$T43098| DCD	|$LN5@GetChildDe|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetChildDevicePowerState@USBOTG@@UAAHPAU_CE_BUS_POWER_STATE@@@Z| PROC ; USBOTG::GetChildDevicePowerState

; 211  :     virtual BOOL GetChildDevicePowerState(PCE_BUS_POWER_STATE) { return FALSE; };

  00000		 |$LN5@GetChildDe|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M43095|
  00010	e3a03000	 mov         r3, #0
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M43096|

			 ENDP  ; |?GetChildDevicePowerState@USBOTG@@UAAHPAU_CE_BUS_POWER_STATE@@@Z|, USBOTG::GetChildDevicePowerState


  00000			 AREA	 |.pdata|, PDATA
|$T43106| DCD	|$LN5@UpdatePowe|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UpdatePowerState@USBOTG@@UAAHXZ| PROC ; USBOTG::UpdatePowerState

; 214  :     virtual BOOL UpdatePowerState() { return TRUE ;};

  00000		 |$LN5@UpdatePowe|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M43103|
  00010	e3a03001	 mov         r3, #1
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M43104|

			 ENDP  ; |?UpdatePowerState@USBOTG@@UAAHXZ|, USBOTG::UpdatePowerState

	IMPORT	|memcpy|

  00000			 AREA	 |.pdata|, PDATA
|$T43115| DCD	|$LN5@GetPowerCa|
	DCD	0x40000f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPowerCapabilities@USBOTG@@UAA?AU_POWER_CAPABILITIES@@XZ| PROC ; USBOTG::GetPowerCapabilities

; 215  :     virtual POWER_CAPABILITIES GetPowerCapabilities() { return m_PowerCapabilities; };

  00000		 |$LN5@GetPowerCa|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M43112|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e28310a0	 add         r1, r3, #0xA0
  00018	e59d0010	 ldr         r0, [sp, #0x10]
  0001c	e3a02030	 mov         r2, #0x30
  00020	eb000000	 bl          memcpy
  00024	e59d3010	 ldr         r3, [sp, #0x10]
  00028	e58d3000	 str         r3, [sp]
  0002c	e59d0000	 ldr         r0, [sp]
  00030	e28dd004	 add         sp, sp, #4
  00034	e89d6000	 ldmia       sp, {sp, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M43113|

			 ENDP  ; |?GetPowerCapabilities@USBOTG@@UAA?AU_POWER_CAPABILITIES@@XZ|, USBOTG::GetPowerCapabilities

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbotg\otg.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T43123| DCD	|$LN5@DischargVB|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DischargVBus@OMAPMHSUSBOTG@@UAAHXZ| PROC ; OMAPMHSUSBOTG::DischargVBus

; 98   :     virtual BOOL    DischargVBus()  { return TRUE; };

  00000		 |$LN5@DischargVB|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M43120|
  00010	e3a03001	 mov         r3, #1
  00014	e58d3000	 str         r3, [sp]
  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M43121|

			 ENDP  ; |?DischargVBus@OMAPMHSUSBOTG@@UAAHXZ|, OMAPMHSUSBOTG::DischargVBus

	EXPORT	|??1OMAPMHSUSBOTG@@UAA@XZ|		; OMAPMHSUSBOTG::~OMAPMHSUSBOTG

  00000			 AREA	 |.pdata|, PDATA
|$T43131| DCD	|$LN6@scalar@3|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GOMAPMHSUSBOTG@@UAAPAXI@Z| PROC	; OMAPMHSUSBOTG::`scalar deleting destructor'
  00000		 |$LN6@scalar@3|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M43128|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1OMAPMHSUSBOTG@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar@3|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar@3|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M43129|

			 ENDP  ; |??_GOMAPMHSUSBOTG@@UAAPAXI@Z|, OMAPMHSUSBOTG::`scalar deleting destructor'

	EXPORT	|??1CRegistryEdit@@QAA@XZ|		; CRegistryEdit::~CRegistryEdit
	IMPORT	|??1USBOTG@@UAA@XZ|			; USBOTG::~USBOTG
	IMPORT	|ReleaseDevicePads|
	IMPORT	|CloseBusAccessHandle|
	IMPORT	|LeaveCriticalSection|
	IMPORT	|EnterCriticalSection|

  00058			 AREA	 |.pdata|, PDATA
|$T43149| DCD	|$LN15@OMAPMHSUSB@6|
	DCD	0x40008404
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbotg\otg.cpp

  00cac			 AREA	 |.text|, CODE, ARM

  00cac		 |??1OMAPMHSUSBOTG@@UAA@XZ| PROC	; OMAPMHSUSBOTG::~OMAPMHSUSBOTG

; 434  : {

  00cac		 |$LN15@OMAPMHSUSB@6|
  00cac	e1a0c00d	 mov         r12, sp
  00cb0	e92d0001	 stmdb       sp!, {r0}
  00cb4	e92d5000	 stmdb       sp!, {r12, lr}
  00cb8	e24dd028	 sub         sp, sp, #0x28
  00cbc		 |$M43146|
  00cbc	e59f21f4	 ldr         r2, [pc, #0x1F4]
  00cc0	e59d3030	 ldr         r3, [sp, #0x30]
  00cc4	e5832000	 str         r2, [r3]
  00cc8	e59d3030	 ldr         r3, [sp, #0x30]
  00ccc	e28320dc	 add         r2, r3, #0xDC
  00cd0	e59f31dc	 ldr         r3, [pc, #0x1DC]
  00cd4	e5823000	 str         r3, [r2]

; 435  :     if (m_ActiveKeyPath)

  00cd8	e59d3030	 ldr         r3, [sp, #0x30]
  00cdc	e2833f4f	 add         r3, r3, #0x4F, 30
  00ce0	e5933000	 ldr         r3, [r3]
  00ce4	e3530000	 cmp         r3, #0
  00ce8	0a000005	 beq         |$LN4@OMAPMHSUSB@6|

; 436  :         delete [] m_ActiveKeyPath;

  00cec	e59d3030	 ldr         r3, [sp, #0x30]
  00cf0	e2833f4f	 add         r3, r3, #0x4F, 30
  00cf4	e5933000	 ldr         r3, [r3]
  00cf8	e58d3000	 str         r3, [sp]
  00cfc	e59d0000	 ldr         r0, [sp]
  00d00	eb000000	 bl          |??3@YAXPAX@Z|
  00d04		 |$LN4@OMAPMHSUSB@6|

; 437  : 
; 438  :     if (m_hParent) 

  00d04	e59d3030	 ldr         r3, [sp, #0x30]
  00d08	e2833d05	 add         r3, r3, #5, 26
  00d0c	e5933000	 ldr         r3, [r3]
  00d10	e3530000	 cmp         r3, #0
  00d14	0a000019	 beq         |$LN3@OMAPMHSUSB@6|

; 439  :     {
; 440  :         EnterCriticalSection(&m_pOTG->regCS);

  00d18	e59d3030	 ldr         r3, [sp, #0x30]
  00d1c	e2833e15	 add         r3, r3, #0x15, 28
  00d20	e5933000	 ldr         r3, [r3]
  00d24	e2830038	 add         r0, r3, #0x38
  00d28	eb000000	 bl          EnterCriticalSection

; 441  :         m_pOTG->bClockStatus=FALSE;

  00d2c	e59d3030	 ldr         r3, [sp, #0x30]
  00d30	e2833e15	 add         r3, r3, #0x15, 28
  00d34	e5933000	 ldr         r3, [r3]
  00d38	e2832060	 add         r2, r3, #0x60
  00d3c	e3a03000	 mov         r3, #0
  00d40	e5823000	 str         r3, [r2]

; 442  :         UpdateDevicePower(m_hParent, D4, NULL);

  00d44	e3a02000	 mov         r2, #0
  00d48	e3a01004	 mov         r1, #4
  00d4c	e59d3030	 ldr         r3, [sp, #0x30]
  00d50	e2833d05	 add         r3, r3, #5, 26
  00d54	e5930000	 ldr         r0, [r3]
  00d58	eb000000	 bl          |?UpdateDevicePower@@YAXPAXW4_CEDEVICE_POWER_STATE@@0@Z|

; 443  :         LeaveCriticalSection(&m_pOTG->regCS);

  00d5c	e59d3030	 ldr         r3, [sp, #0x30]
  00d60	e2833e15	 add         r3, r3, #0x15, 28
  00d64	e5933000	 ldr         r3, [r3]
  00d68	e2830038	 add         r0, r3, #0x38
  00d6c	eb000000	 bl          LeaveCriticalSection

; 444  :         CloseBusAccessHandle(m_hParent);

  00d70	e59d3030	 ldr         r3, [sp, #0x30]
  00d74	e2833d05	 add         r3, r3, #5, 26
  00d78	e5930000	 ldr         r0, [r3]
  00d7c	eb000000	 bl          CloseBusAccessHandle
  00d80		 |$LN3@OMAPMHSUSB@6|

; 445  :     }
; 446  :     
; 447  :     if (m_pDMA)

  00d80	e59d3030	 ldr         r3, [sp, #0x30]
  00d84	e2833f55	 add         r3, r3, #0x55, 30
  00d88	e5933000	 ldr         r3, [r3]
  00d8c	e3530000	 cmp         r3, #0
  00d90	0a000016	 beq         |$LN2@OMAPMHSUSB@6|

; 448  :         delete m_pDMA;

  00d94	e59d3030	 ldr         r3, [sp, #0x30]
  00d98	e2833f55	 add         r3, r3, #0x55, 30
  00d9c	e5933000	 ldr         r3, [r3]
  00da0	e58d3008	 str         r3, [sp, #8]
  00da4	e59d3008	 ldr         r3, [sp, #8]
  00da8	e58d3004	 str         r3, [sp, #4]
  00dac	e59d3004	 ldr         r3, [sp, #4]
  00db0	e3530000	 cmp         r3, #0
  00db4	0a00000b	 beq         |$LN9@OMAPMHSUSB@6|
  00db8	e3a01001	 mov         r1, #1
  00dbc	e59d3004	 ldr         r3, [sp, #4]
  00dc0	e5933000	 ldr         r3, [r3]
  00dc4	e2833004	 add         r3, r3, #4
  00dc8	e59d0004	 ldr         r0, [sp, #4]
  00dcc	e5933000	 ldr         r3, [r3]
  00dd0	e1a0e00f	 mov         lr, pc
  00dd4	e12fff13	 bx          r3
  00dd8	e58d0014	 str         r0, [sp, #0x14]
  00ddc	e59d3014	 ldr         r3, [sp, #0x14]
  00de0	e58d3018	 str         r3, [sp, #0x18]
  00de4	ea000001	 b           |$LN10@OMAPMHSUSB@6|
  00de8		 |$LN9@OMAPMHSUSB@6|
  00de8	e3a03000	 mov         r3, #0
  00dec	e58d3018	 str         r3, [sp, #0x18]
  00df0		 |$LN10@OMAPMHSUSB@6|
  00df0		 |$LN2@OMAPMHSUSB@6|

; 449  : 
; 450  :     if (m_pIdGnd)

  00df0	e59d3030	 ldr         r3, [sp, #0x30]
  00df4	e2833f56	 add         r3, r3, #0x56, 30
  00df8	e5933000	 ldr         r3, [r3]
  00dfc	e3530000	 cmp         r3, #0
  00e00	0a000016	 beq         |$LN1@OMAPMHSUSB@6|

; 451  :         delete m_pIdGnd;

  00e04	e59d3030	 ldr         r3, [sp, #0x30]
  00e08	e2833f56	 add         r3, r3, #0x56, 30
  00e0c	e5933000	 ldr         r3, [r3]
  00e10	e58d3010	 str         r3, [sp, #0x10]
  00e14	e59d3010	 ldr         r3, [sp, #0x10]
  00e18	e58d300c	 str         r3, [sp, #0xC]
  00e1c	e59d300c	 ldr         r3, [sp, #0xC]
  00e20	e3530000	 cmp         r3, #0
  00e24	0a00000b	 beq         |$LN11@OMAPMHSUSB@6|
  00e28	e3a01001	 mov         r1, #1
  00e2c	e59d300c	 ldr         r3, [sp, #0xC]
  00e30	e5933000	 ldr         r3, [r3]
  00e34	e2833004	 add         r3, r3, #4
  00e38	e59d000c	 ldr         r0, [sp, #0xC]
  00e3c	e5933000	 ldr         r3, [r3]
  00e40	e1a0e00f	 mov         lr, pc
  00e44	e12fff13	 bx          r3
  00e48	e58d001c	 str         r0, [sp, #0x1C]
  00e4c	e59d301c	 ldr         r3, [sp, #0x1C]
  00e50	e58d3020	 str         r3, [sp, #0x20]
  00e54	ea000001	 b           |$LN12@OMAPMHSUSB@6|
  00e58		 |$LN11@OMAPMHSUSB@6|
  00e58	e3a03000	 mov         r3, #0
  00e5c	e58d3020	 str         r3, [sp, #0x20]
  00e60		 |$LN12@OMAPMHSUSB@6|
  00e60		 |$LN1@OMAPMHSUSB@6|

; 452  : 
; 453  : 	ReleaseDevicePads(OMAP_DEVICE_HSOTGUSB);

  00e60	e3a00003	 mov         r0, #3
  00e64	eb000000	 bl          ReleaseDevicePads

; 454  : }

  00e68	e59d3030	 ldr         r3, [sp, #0x30]
  00e6c	e2830f4e	 add         r0, r3, #0x4E, 30
  00e70	eb000000	 bl          |??1CRegistryEdit@@QAA@XZ|
  00e74	e59d3030	 ldr         r3, [sp, #0x30]
  00e78	e3530000	 cmp         r3, #0
  00e7c	0a000003	 beq         |$LN7@OMAPMHSUSB@6|
  00e80	e59d3030	 ldr         r3, [sp, #0x30]
  00e84	e28330dc	 add         r3, r3, #0xDC
  00e88	e58d3024	 str         r3, [sp, #0x24]
  00e8c	ea000001	 b           |$LN8@OMAPMHSUSB@6|
  00e90		 |$LN7@OMAPMHSUSB@6|
  00e90	e3a03000	 mov         r3, #0
  00e94	e58d3024	 str         r3, [sp, #0x24]
  00e98		 |$LN8@OMAPMHSUSB@6|
  00e98	e59d0024	 ldr         r0, [sp, #0x24]
  00e9c	eb000000	 bl          |??1CMiniThread@@QAA@XZ|
  00ea0	e59d0030	 ldr         r0, [sp, #0x30]
  00ea4	eb000000	 bl          |??1USBOTG@@UAA@XZ|
  00ea8	e28dd028	 add         sp, sp, #0x28
  00eac	e89d6000	 ldmia       sp, {sp, lr}
  00eb0	e12fff1e	 bx          lr
  00eb4		 |$LN16@OMAPMHSUSB@6|
  00eb4		 |$LN17@OMAPMHSUSB@6|
  00eb4	00000000	 DCD         |??_7OMAPMHSUSBOTG@@6BCMiniThread@@@|
  00eb8		 |$LN18@OMAPMHSUSB@6|
  00eb8	00000000	 DCD         |??_7OMAPMHSUSBOTG@@6BUSBOTG@@@|
  00ebc		 |$M43147|

			 ENDP  ; |??1OMAPMHSUSBOTG@@UAA@XZ|, OMAPMHSUSBOTG::~OMAPMHSUSBOTG

	IMPORT	|RegCloseKey|
; File c:\wince600\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.pdata|, PDATA
|$T43157| DCD	|$LN6@CRegistryE@2|
	DCD	0x40000c03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CRegistryEdit@@QAA@XZ| PROC	; CRegistryEdit::~CRegistryEdit

; 80   :     {

  00000		 |$LN6@CRegistryE@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M43154|

; 81   :         if( m_hDevKey )

  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e5933000	 ldr         r3, [r3]
  00014	e3530000	 cmp         r3, #0
  00018	0a000002	 beq         |$LN1@CRegistryE@2|

; 82   :         {
; 83   :             RegCloseKey( m_hDevKey );

  0001c	e59d3008	 ldr         r3, [sp, #8]
  00020	e5930000	 ldr         r0, [r3]
  00024	eb000000	 bl          RegCloseKey
  00028		 |$LN1@CRegistryE@2|

; 84   :         }
; 85   :     }

  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M43155|

			 ENDP  ; |??1CRegistryEdit@@QAA@XZ|, CRegistryEdit::~CRegistryEdit

	IMPORT	|SetDevicePowerState|

  00060			 AREA	 |.pdata|, PDATA
|$T43164| DCD	|$LN6@UpdateDevi|
	DCD	0x40001403
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbotg\otg.cpp

  00ebc			 AREA	 |.text|, CODE, ARM

  00ebc		 |?UpdateDevicePower@@YAXPAXW4_CEDEVICE_POWER_STATE@@0@Z| PROC ; UpdateDevicePower

; 136  : {

  00ebc		 |$LN6@UpdateDevi|
  00ebc	e1a0c00d	 mov         r12, sp
  00ec0	e92d0007	 stmdb       sp!, {r0 - r2}
  00ec4	e92d5000	 stmdb       sp!, {r12, lr}
  00ec8		 |$M43161|

; 137  : 	UNREFERENCED_PARAMETER(pvoid);
; 138  : 
; 139  :     if (g_busDx == reqDx)

  00ec8	e59f3038	 ldr         r3, [pc, #0x38]
  00ecc	e5932000	 ldr         r2, [r3]
  00ed0	e59d300c	 ldr         r3, [sp, #0xC]
  00ed4	e1520003	 cmp         r2, r3
  00ed8	1a000000	 bne         |$LN1@UpdateDevi|

; 140  :         return;

  00edc	ea000007	 b           |$LN2@UpdateDevi|
  00ee0		 |$LN1@UpdateDevi|

; 141  :     g_busDx = reqDx;

  00ee0	e59d200c	 ldr         r2, [sp, #0xC]
  00ee4	e59f301c	 ldr         r3, [pc, #0x1C]
  00ee8	e5832000	 str         r2, [r3]

; 142  :     SetDevicePowerState(hBus, g_busDx, NULL);

  00eec	e3a02000	 mov         r2, #0
  00ef0	e59f3010	 ldr         r3, [pc, #0x10]
  00ef4	e5931000	 ldr         r1, [r3]
  00ef8	e59d0008	 ldr         r0, [sp, #8]
  00efc	eb000000	 bl          SetDevicePowerState
  00f00		 |$LN2@UpdateDevi|

; 143  : }

  00f00	e89d6000	 ldmia       sp, {sp, lr}
  00f04	e12fff1e	 bx          lr
  00f08		 |$LN7@UpdateDevi|
  00f08		 |$LN8@UpdateDevi|
  00f08	00000000	 DCD         |?g_busDx@@3W4_CEDEVICE_POWER_STATE@@A|
  00f0c		 |$M43162|

			 ENDP  ; |?UpdateDevicePower@@YAXPAXW4_CEDEVICE_POWER_STATE@@0@Z|, UpdateDevicePower

	EXPORT	|??_C@_1CA@DOMCMLOJ@?$AAH?$AAW?$AA?5?$AAV?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@DAKKPLFB@?$AAO?$AAT?$AAG?$AA_?$AAR?$AAe?$AAv?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@FNPJIHOD@?$AAI?$AAn?$AAt?$AAr?$AAR?$AAX?$AAE?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@GCCHFKFC@?$AAI?$AAn?$AAt?$AAr?$AAT?$AAX?$AAE?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@IIOMMOE@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@BGKMCMHH@?$AAF?$AAA?$AAd?$AAd?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@ENPHFMKG@?$AAA?$AAc?$AAc?$AAe?$AAs?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$CI@| [ DATA ] ; `string'
	EXPORT	|??_C@_0N@GCHGAKML@Serial_Class?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_05BCBDGGDK@RNDIS?$AA@| [ DATA ]	; `string'
	EXPORT	|??_C@_1GK@EDHBDMMN@?$AAU?$AAF?$AAN?$AAP?$AAD?$AAD?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAa?$AAl?$AAu?$AAe?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@MGKPCHDE@?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@DCFOIEJO@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAO?$AAp?$AAe?$AAn?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAK?$AAe?$AAy?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@GBENJPGN@?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?2?$AAB?$AAu?$AAi?$AAl?$AAt?$AAI?$AAn?$AA?2?$AAM?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?2?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@KIDPGBEF@?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?2?$AAU?$AAS?$AAB?$AA?2?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@INCMDDFI@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAO?$AAT?$AAG?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@JCPKNOGL@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAp?$AAa?$AAd?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@OGEEBABB@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAh?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?MapHardware@OMAPMHSUSBOTG@@AAAHXZ|	; OMAPMHSUSBOTG::MapHardware
	EXPORT	|??_C@_1EI@KGMEFEM@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAm?$AA_?$AAp?$AAO?$AAT?$AAG?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr@| [ DATA ] ; `string'
	EXPORT	|__$ArrayPad$| [ DATA ]
	IMPORT	|?Init@USBOTG@@UAAHXZ|			; USBOTG::Init
	IMPORT	|strcmp|
	IMPORT	|RegQueryValueExW|
	IMPORT	|CreateHSUSBOTGTransceiver|
	IMPORT	|RequestDevicePads|
	IMPORT	|memset|
	IMPORT	|LocalAlloc|
	IMPORT	|__security_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|memset|
	IMPORT	|__security_check_cookie|

  00068			 AREA	 |.pdata|, PDATA
|$T43207| DCD	|$LN45@Init@3|
	DCD	0xc001c604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@DOMCMLOJ@?$AAH?$AAW?$AA?5?$AAV?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "H"
	DCB	0x0, "W", 0x0, " ", 0x0, "V", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@DAKKPLFB@?$AAO?$AAT?$AAG?$AA_?$AAR?$AAe?$AAv?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, "_", 0x0, "R", 0x0, "e", 0x0, "v"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@FNPJIHOD@?$AAI?$AAn?$AAt?$AAr?$AAR?$AAX?$AAE?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "R", 0x0, "X", 0x0, "E"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@GCCHFKFC@?$AAI?$AAn?$AAt?$AAr?$AAT?$AAX?$AAE?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "T", 0x0, "X", 0x0, "E"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@IIOMMOE@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@BGKMCMHH@?$AAF?$AAA?$AAd?$AAd?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "F"
	DCB	0x0, "A", 0x0, "d", 0x0, "d", 0x0, "r", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@ENPHFMKG@?$AAA?$AAc?$AAc?$AAe?$AAs?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$CI@| DCB "A"
	DCB	0x0, "c", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "w", 0x0, "i", 0x0, "t", 0x0, "h", 0x0, " ", 0x0, "p"
	DCB	0x0, "a", 0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0N@GCHGAKML@Serial_Class?$AA@| DCB "Serial_Class", 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_05BCBDGGDK@RNDIS?$AA@| DCB "RNDIS", 0x0		; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@EDHBDMMN@?$AAU?$AAF?$AAN?$AAP?$AAD?$AAD?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAa?$AAl?$AAu?$AAe?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs@| DCB "U"
	DCB	0x0, "F", 0x0, "N", 0x0, "P", 0x0, "D", 0x0, "D", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "R", 0x0, "e", 0x0, "g", 0x0, "Q", 0x0, "u", 0x0, "e"
	DCB	0x0, "r", 0x0, "y", 0x0, "V", 0x0, "a", 0x0, "l", 0x0, "u"
	DCB	0x0, "e", 0x0, "E", 0x0, "x", 0x0, "(", 0x0, "'", 0x0, "%"
	DCB	0x0, "s", 0x0, "'", 0x0, ",", 0x0, " ", 0x0, "'", 0x0, "%"
	DCB	0x0, "s", 0x0, "'", 0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@MGKPCHDE@?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "f", 0x0, "a", 0x0, "u", 0x0, "l", 0x0, "t"
	DCB	0x0, "C", 0x0, "l", 0x0, "i", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, "D", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@DCFOIEJO@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAO?$AAp?$AAe?$AAn?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAK?$AAe?$AAy?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "K", 0x0, "e"
	DCB	0x0, "y", 0x0, "(", 0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'"
	DCB	0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@GBENJPGN@?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?2?$AAB?$AAu?$AAi?$AAl?$AAt?$AAI?$AAn?$AA?2?$AAM?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?2?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?$AA@| DCB "D"
	DCB	0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, "s"
	DCB	0x0, "\\", 0x0, "B", 0x0, "u", 0x0, "i", 0x0, "l", 0x0, "t"
	DCB	0x0, "I", 0x0, "n", 0x0, "\\", 0x0, "M", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, "\\", 0x0, "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "F", 0x0, "N", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@KIDPGBEF@?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?2?$AAU?$AAS?$AAB?$AA?2?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?$AA@| DCB "D"
	DCB	0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, "s"
	DCB	0x0, "\\", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "\\", 0x0, "F"
	DCB	0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, "D", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "r", 0x0, "s", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@INCMDDFI@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAO?$AAT?$AAG?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAc@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "u", 0x0, "r", 0x0, "e"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, " ", 0x0, "O", 0x0, "T", 0x0, "G"
	DCB	0x0, " ", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@JCPKNOGL@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAp?$AAa?$AAd?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "u", 0x0, "r", 0x0, "e"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, " "
	DCB	0x0, "p", 0x0, "a", 0x0, "d", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@OGEEBABB@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAh?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "u", 0x0, "r", 0x0, "e"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "m", 0x0, "a"
	DCB	0x0, "p", 0x0, " ", 0x0, "h", 0x0, "a", 0x0, "r", 0x0, "d"
	DCB	0x0, "w", 0x0, "a", 0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@KGMEFEM@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAm?$AA_?$AAp?$AAO?$AAT?$AAG?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "u", 0x0, "r", 0x0, "e"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "a", 0x0, "l"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, " ", 0x0, "m", 0x0, "_", 0x0, "p", 0x0, "O", 0x0, "T"
	DCB	0x0, "G", 0x0, " ", 0x0, "m", 0x0, "e", 0x0, "m", 0x0, "o"
	DCB	0x0, "r", 0x0, "y", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.xdata|, DATA
|$T43203| DCD	0xffffff84
; Function compile flags: /Odtp

  00f0c			 AREA	 |.text|, CODE, ARM

  00f0c	00000000	 DCD         |__GSHandlerCheck|
  00f10	00000000	 DCD         |$T43203|

  00f14		 |?Init@OMAPMHSUSBOTG@@UAAHXZ| PROC	; OMAPMHSUSBOTG::Init

; 474  : {

  00f14		 |$LN45@Init@3|
  00f14	e1a0c00d	 mov         r12, sp
  00f18	e92d0001	 stmdb       sp!, {r0}
  00f1c	e92d5000	 stmdb       sp!, {r12, lr}
  00f20	e24ddfa7	 sub         sp, sp, #0xA7, 30
  00f24		 |$M43204|
  00f24	e59f36fc	 ldr         r3, [pc, #0x6FC]
  00f28	e5933000	 ldr         r3, [r3]
  00f2c	e58d322c	 str         r3, [sp, #0x22C]

; 475  :     int i;    
; 476  :     BOOL bReturn;
; 477  :     TCHAR szDefaultClientDriver[MAX_PATH+1]={'R','N','D','I','S'};

  00f30	e3a03052	 mov         r3, #0x52
  00f34	e1cd31b0	 strh        r3, [sp, #0x10]
  00f38	e3a0304e	 mov         r3, #0x4E
  00f3c	e1cd31b2	 strh        r3, [sp, #0x12]
  00f40	e3a03044	 mov         r3, #0x44
  00f44	e1cd31b4	 strh        r3, [sp, #0x14]
  00f48	e3a03049	 mov         r3, #0x49
  00f4c	e1cd31b6	 strh        r3, [sp, #0x16]
  00f50	e3a03053	 mov         r3, #0x53
  00f54	e1cd31b8	 strh        r3, [sp, #0x18]
  00f58	e3a02c02	 mov         r2, #2, 24
  00f5c	e3a01000	 mov         r1, #0
  00f60	e28d001a	 add         r0, sp, #0x1A
  00f64	eb000000	 bl          memset

; 478  : 
; 479  :     m_pOTG = (PHSMUSB_T)LocalAlloc(LPTR, sizeof(HSMUSB_T));

  00f68	e3a01068	 mov         r1, #0x68
  00f6c	e3a00040	 mov         r0, #0x40
  00f70	eb000000	 bl          LocalAlloc
  00f74	e58d0240	 str         r0, [sp, #0x240]
  00f78	e59d32a4	 ldr         r3, [sp, #0x2A4]
  00f7c	e2832e15	 add         r2, r3, #0x15, 28
  00f80	e59d3240	 ldr         r3, [sp, #0x240]
  00f84	e5823000	 str         r3, [r2]

; 480  :     if (m_pOTG == NULL)

  00f88	e59d32a4	 ldr         r3, [sp, #0x2A4]
  00f8c	e2833e15	 add         r3, r3, #0x15, 28
  00f90	e5933000	 ldr         r3, [r3]
  00f94	e3530000	 cmp         r3, #0
  00f98	1a00000f	 bne         |$LN14@Init@3|

; 481  :     {
; 482  :         DEBUGMSG(ZONE_OTG_ERROR, (TEXT("Failure to allocate m_pOTG memory\r\n")));

  00f9c	e59f363c	 ldr         r3, [pc, #0x63C]
  00fa0	e5933440	 ldr         r3, [r3, #0x440]
  00fa4	e3130902	 tst         r3, #2, 18
  00fa8	0a000004	 beq         |$LN17@Init@3|
  00fac	e59f0670	 ldr         r0, [pc, #0x670]
  00fb0	eb000000	 bl          NKDbgPrintfW
  00fb4	e3a03001	 mov         r3, #1
  00fb8	e58d3244	 str         r3, [sp, #0x244]
  00fbc	ea000001	 b           |$LN18@Init@3|
  00fc0		 |$LN17@Init@3|
  00fc0	e3a03000	 mov         r3, #0
  00fc4	e58d3244	 str         r3, [sp, #0x244]
  00fc8		 |$LN18@Init@3|

; 483  :         return FALSE;

  00fc8	e59d022c	 ldr         r0, [sp, #0x22C]
  00fcc	eb000000	 bl          __security_check_cookie
  00fd0	e3a03000	 mov         r3, #0
  00fd4	e58d3230	 str         r3, [sp, #0x230]
  00fd8	ea00017b	 b           |$LN15@Init@3|
  00fdc		 |$LN14@Init@3|

; 484  :     }
; 485  : 
; 486  :     memset(m_pOTG, 0x00, sizeof(HSMUSB_T)); 

  00fdc	e3a02068	 mov         r2, #0x68
  00fe0	e3a01000	 mov         r1, #0
  00fe4	e59d32a4	 ldr         r3, [sp, #0x2A4]
  00fe8	e2833e15	 add         r3, r3, #0x15, 28
  00fec	e5930000	 ldr         r0, [r3]
  00ff0	eb000000	 bl          memset

; 487  :     // Other initialization should be done here...    
; 488  : 
; 489  :     m_pOTG->dwPwrMgmt = MODE_SYSTEM_NORMAL;

  00ff4	e59d32a4	 ldr         r3, [sp, #0x2A4]
  00ff8	e2833e15	 add         r3, r3, #0x15, 28
  00ffc	e5933000	 ldr         r3, [r3]
  01000	e2832064	 add         r2, r3, #0x64
  01004	e3a03000	 mov         r3, #0
  01008	e5823000	 str         r3, [r2]

; 490  :     for (i = 0; i < 2; i++)

  0100c	e3a03000	 mov         r3, #0
  01010	e58d3008	 str         r3, [sp, #8]
  01014	ea000002	 b           |$LN13@Init@3|
  01018		 |$LN12@Init@3|
  01018	e59d3008	 ldr         r3, [sp, #8]
  0101c	e2833001	 add         r3, r3, #1
  01020	e58d3008	 str         r3, [sp, #8]
  01024		 |$LN13@Init@3|
  01024	e59d3008	 ldr         r3, [sp, #8]
  01028	e3530002	 cmp         r3, #2
  0102c	aa00000f	 bge         |$LN11@Init@3|

; 491  :         m_pOTG->hReadyEvents[i] = CreateEvent(0, FALSE, FALSE, NULL);

  01030	e3a03000	 mov         r3, #0
  01034	e3a02000	 mov         r2, #0
  01038	e3a01000	 mov         r1, #0
  0103c	e3a00000	 mov         r0, #0
  01040	eb000000	 bl          CreateEventW
  01044	e58d0248	 str         r0, [sp, #0x248]
  01048	e59d32a4	 ldr         r3, [sp, #0x2A4]
  0104c	e2830e15	 add         r0, r3, #0x15, 28
  01050	e59d1008	 ldr         r1, [sp, #8]
  01054	e3a03004	 mov         r3, #4
  01058	e0020391	 mul         r2, r1, r3
  0105c	e5903000	 ldr         r3, [r0]
  01060	e0832002	 add         r2, r3, r2
  01064	e59d3248	 ldr         r3, [sp, #0x248]
  01068	e5823000	 str         r3, [r2]
  0106c	eaffffe9	 b           |$LN12@Init@3|
  01070		 |$LN11@Init@3|

; 492  : 
; 493  :     if(!MapHardware())

  01070	e59d02a4	 ldr         r0, [sp, #0x2A4]
  01074	eb000000	 bl          |?MapHardware@OMAPMHSUSBOTG@@AAAHXZ|
  01078	e58d024c	 str         r0, [sp, #0x24C]
  0107c	e59d324c	 ldr         r3, [sp, #0x24C]
  01080	e3530000	 cmp         r3, #0
  01084	1a00000f	 bne         |$LN10@Init@3|

; 494  :     {
; 495  :         DEBUGMSG(ZONE_OTG_ERROR, (TEXT("Failure to map hardware\r\n")));

  01088	e59f3550	 ldr         r3, [pc, #0x550]
  0108c	e5933440	 ldr         r3, [r3, #0x440]
  01090	e3130902	 tst         r3, #2, 18
  01094	0a000004	 beq         |$LN19@Init@3|
  01098	e59f0580	 ldr         r0, [pc, #0x580]
  0109c	eb000000	 bl          NKDbgPrintfW
  010a0	e3a03001	 mov         r3, #1
  010a4	e58d3250	 str         r3, [sp, #0x250]
  010a8	ea000001	 b           |$LN20@Init@3|
  010ac		 |$LN19@Init@3|
  010ac	e3a03000	 mov         r3, #0
  010b0	e58d3250	 str         r3, [sp, #0x250]
  010b4		 |$LN20@Init@3|

; 496  :         return FALSE;

  010b4	e59d022c	 ldr         r0, [sp, #0x22C]
  010b8	eb000000	 bl          __security_check_cookie
  010bc	e3a03000	 mov         r3, #0
  010c0	e58d3230	 str         r3, [sp, #0x230]
  010c4	ea000140	 b           |$LN15@Init@3|
  010c8		 |$LN10@Init@3|

; 497  :     }
; 498  :     
; 499  :     InitializeCriticalSection(&m_pOTG->regCS);

  010c8	e59d32a4	 ldr         r3, [sp, #0x2A4]
  010cc	e2833e15	 add         r3, r3, #0x15, 28
  010d0	e5933000	 ldr         r3, [r3]
  010d4	e2830038	 add         r0, r3, #0x38
  010d8	eb000000	 bl          InitializeCriticalSection

; 500  : 
; 501  :     UpdateDevicePower(m_hParent, D0, NULL);

  010dc	e3a02000	 mov         r2, #0
  010e0	e3a01000	 mov         r1, #0
  010e4	e59d32a4	 ldr         r3, [sp, #0x2A4]
  010e8	e2833d05	 add         r3, r3, #5, 26
  010ec	e5930000	 ldr         r0, [r3]
  010f0	eb000000	 bl          |?UpdateDevicePower@@YAXPAXW4_CEDEVICE_POWER_STATE@@0@Z|

; 502  :     m_pOTG->bClockStatus = TRUE;

  010f4	e59d32a4	 ldr         r3, [sp, #0x2A4]
  010f8	e2833e15	 add         r3, r3, #0x15, 28
  010fc	e5933000	 ldr         r3, [r3]
  01100	e2832060	 add         r2, r3, #0x60
  01104	e3a03001	 mov         r3, #1
  01108	e5823000	 str         r3, [r2]

; 503  :     m_fPowerRequest = FALSE;

  0110c	e59d32a4	 ldr         r3, [sp, #0x2A4]
  01110	e2832e1a	 add         r2, r3, #0x1A, 28
  01114	e3a03000	 mov         r3, #0
  01118	e5823000	 str         r3, [r2]

; 504  : 
; 505  : 	if (!RequestDevicePads(OMAP_DEVICE_HSOTGUSB))

  0111c	e3a00003	 mov         r0, #3
  01120	eb000000	 bl          RequestDevicePads
  01124	e58d0254	 str         r0, [sp, #0x254]
  01128	e59d3254	 ldr         r3, [sp, #0x254]
  0112c	e3530000	 cmp         r3, #0
  01130	1a00000f	 bne         |$LN9@Init@3|

; 506  : 	{
; 507  : 	    DEBUGMSG(ZONE_OTG_ERROR, (TEXT("Failure to request pads\r\n")));

  01134	e59f34a4	 ldr         r3, [pc, #0x4A4]
  01138	e5933440	 ldr         r3, [r3, #0x440]
  0113c	e3130902	 tst         r3, #2, 18
  01140	0a000004	 beq         |$LN21@Init@3|
  01144	e59f04d0	 ldr         r0, [pc, #0x4D0]
  01148	eb000000	 bl          NKDbgPrintfW
  0114c	e3a03001	 mov         r3, #1
  01150	e58d3258	 str         r3, [sp, #0x258]
  01154	ea000001	 b           |$LN22@Init@3|
  01158		 |$LN21@Init@3|
  01158	e3a03000	 mov         r3, #0
  0115c	e58d3258	 str         r3, [sp, #0x258]
  01160		 |$LN22@Init@3|

; 508  :         return FALSE;

  01160	e59d022c	 ldr         r0, [sp, #0x22C]
  01164	eb000000	 bl          __security_check_cookie
  01168	e3a03000	 mov         r3, #0
  0116c	e58d3230	 str         r3, [sp, #0x230]
  01170	ea000115	 b           |$LN15@Init@3|
  01174		 |$LN9@Init@3|

; 509  : 	}
; 510  : 
; 511  :     m_pTransceiver = CreateHSUSBOTGTransceiver(m_pOTG);

  01174	e59d32a4	 ldr         r3, [sp, #0x2A4]
  01178	e2833e15	 add         r3, r3, #0x15, 28
  0117c	e5930000	 ldr         r0, [r3]
  01180	eb000000	 bl          CreateHSUSBOTGTransceiver
  01184	e58d025c	 str         r0, [sp, #0x25C]
  01188	e59d32a4	 ldr         r3, [sp, #0x2A4]
  0118c	e28320fc	 add         r2, r3, #0xFC
  01190	e59d325c	 ldr         r3, [sp, #0x25C]
  01194	e5823000	 str         r3, [r2]

; 512  :     if (!m_pTransceiver)

  01198	e59d32a4	 ldr         r3, [sp, #0x2A4]
  0119c	e28330fc	 add         r3, r3, #0xFC
  011a0	e5933000	 ldr         r3, [r3]
  011a4	e3530000	 cmp         r3, #0
  011a8	1a00000f	 bne         |$LN8@Init@3|

; 513  :     {
; 514  :         DEBUGMSG(ZONE_OTG_ERROR, (TEXT("Failure to initialize OTG Transceiver\r\n")));

  011ac	e59f342c	 ldr         r3, [pc, #0x42C]
  011b0	e5933440	 ldr         r3, [r3, #0x440]
  011b4	e3130902	 tst         r3, #2, 18
  011b8	0a000004	 beq         |$LN23@Init@3|
  011bc	e59f0454	 ldr         r0, [pc, #0x454]
  011c0	eb000000	 bl          NKDbgPrintfW
  011c4	e3a03001	 mov         r3, #1
  011c8	e58d3260	 str         r3, [sp, #0x260]
  011cc	ea000001	 b           |$LN24@Init@3|
  011d0		 |$LN23@Init@3|
  011d0	e3a03000	 mov         r3, #0
  011d4	e58d3260	 str         r3, [sp, #0x260]
  011d8		 |$LN24@Init@3|

; 515  :         return FALSE;

  011d8	e59d022c	 ldr         r0, [sp, #0x22C]
  011dc	eb000000	 bl          __security_check_cookie
  011e0	e3a03000	 mov         r3, #0
  011e4	e58d3230	 str         r3, [sp, #0x230]
  011e8	ea0000f7	 b           |$LN15@Init@3|
  011ec		 |$LN8@Init@3|

; 516  :     }
; 517  : 
; 518  :     // manually reset transceiver (Advisory 3.0.1.144)
; 519  :     m_pTransceiver->Reset();

  011ec	e59d32a4	 ldr         r3, [sp, #0x2A4]
  011f0	e28330fc	 add         r3, r3, #0xFC
  011f4	e5932000	 ldr         r2, [r3]
  011f8	e59d32a4	 ldr         r3, [sp, #0x2A4]
  011fc	e28330fc	 add         r3, r3, #0xFC
  01200	e5930000	 ldr         r0, [r3]
  01204	e5923000	 ldr         r3, [r2]
  01208	e2833024	 add         r3, r3, #0x24
  0120c	e5933000	 ldr         r3, [r3]
  01210	e1a0e00f	 mov         lr, pc
  01214	e12fff13	 bx          r3

; 520  : 
; 521  :     {
; 522  :         HKEY hkDevice;
; 523  :         DWORD dwStatus;
; 524  :         DWORD dwType, dwSize;
; 525  : 
; 526  :         dwStatus = ::RegOpenKeyEx(HKEY_LOCAL_MACHINE, (LPCTSTR) REG_USBFN_DEFAULT_FUNC_DRV_PATH, 0, KEY_ALL_ACCESS, &hkDevice);

  01218	e28d3f8a	 add         r3, sp, #0x8A, 30
  0121c	e58d3000	 str         r3, [sp]
  01220	e3a0380f	 mov         r3, #0xF, 16
  01224	e383303f	 orr         r3, r3, #0x3F
  01228	e3a02000	 mov         r2, #0
  0122c	e59f13d4	 ldr         r1, [pc, #0x3D4]
  01230	e3a0010a	 mov         r0, #0xA, 2
  01234	eb000000	 bl          RegOpenKeyExW
  01238	e58d0264	 str         r0, [sp, #0x264]
  0123c	e59d3264	 ldr         r3, [sp, #0x264]
  01240	e58d3224	 str         r3, [sp, #0x224]

; 527  :         if(dwStatus != ERROR_SUCCESS) {

  01244	e59d3224	 ldr         r3, [sp, #0x224]
  01248	e3530000	 cmp         r3, #0
  0124c	0a00000d	 beq         |$LN7@Init@3|

; 528  :                  DEBUGMSG(ZONE_OTG_ERROR, (_T("UfnPdd_Init: OpenDeviceKey('%s') failed %u\r\n"), REG_USBFN_DRV_PATH, dwStatus));

  01250	e59f3388	 ldr         r3, [pc, #0x388]
  01254	e5933440	 ldr         r3, [r3, #0x440]
  01258	e3130902	 tst         r3, #2, 18
  0125c	0a000006	 beq         |$LN25@Init@3|
  01260	e59d2224	 ldr         r2, [sp, #0x224]
  01264	e59f13a8	 ldr         r1, [pc, #0x3A8]
  01268	e59f03a0	 ldr         r0, [pc, #0x3A0]
  0126c	eb000000	 bl          NKDbgPrintfW
  01270	e3a03001	 mov         r3, #1
  01274	e58d3268	 str         r3, [sp, #0x268]
  01278	ea000001	 b           |$LN26@Init@3|
  0127c		 |$LN25@Init@3|
  0127c	e3a03000	 mov         r3, #0
  01280	e58d3268	 str         r3, [sp, #0x268]
  01284		 |$LN26@Init@3|

; 529  :         }
; 530  :         else

  01284	ea000026	 b           |$LN6@Init@3|
  01288		 |$LN7@Init@3|

; 531  :         {
; 532  :             dwType = REG_SZ;

  01288	e3a03001	 mov         r3, #1
  0128c	e58d321c	 str         r3, [sp, #0x21C]

; 533  :             dwSize = sizeof(szDefaultClientDriver);

  01290	e3a03c02	 mov         r3, #2, 24
  01294	e383300a	 orr         r3, r3, #0xA
  01298	e58d3220	 str         r3, [sp, #0x220]

; 534  :             dwStatus = ::RegQueryValueEx( hkDevice,
; 535  :                                         REG_USBFN_DEFAULT_FUNC_DRV,
; 536  :                                         NULL,
; 537  :                                         &dwType,
; 538  :                                         (LPBYTE)&szDefaultClientDriver,
; 539  :                                         &dwSize);

  0129c	e28d3e22	 add         r3, sp, #0x22, 28
  012a0	e58d3004	 str         r3, [sp, #4]
  012a4	e28d3010	 add         r3, sp, #0x10
  012a8	e58d3000	 str         r3, [sp]
  012ac	e28d3f87	 add         r3, sp, #0x87, 30
  012b0	e3a02000	 mov         r2, #0
  012b4	e59f1350	 ldr         r1, [pc, #0x350]
  012b8	e59d0228	 ldr         r0, [sp, #0x228]
  012bc	eb000000	 bl          RegQueryValueExW
  012c0	e58d026c	 str         r0, [sp, #0x26C]
  012c4	e59d326c	 ldr         r3, [sp, #0x26C]
  012c8	e58d3224	 str         r3, [sp, #0x224]

; 540  : 
; 541  :              if(dwStatus != ERROR_SUCCESS || dwType != REG_SZ) {

  012cc	e59d3224	 ldr         r3, [sp, #0x224]
  012d0	e3530000	 cmp         r3, #0
  012d4	1a000002	 bne         |$LN4@Init@3|
  012d8	e59d321c	 ldr         r3, [sp, #0x21C]
  012dc	e3530001	 cmp         r3, #1
  012e0	0a00000d	 beq         |$LN5@Init@3|
  012e4		 |$LN4@Init@3|

; 542  :                   DEBUGMSG(ZONE_OTG_ERROR, (_T("UFNPDD_Init: RegQueryValueEx('%s', '%s') failed %u\r\n"),
; 543  :                           REG_USBFN_DEFAULT_FUNC_DRV_PATH, REG_USBFN_DEFAULT_FUNC_DRV, dwStatus));

  012e4	e59f32f4	 ldr         r3, [pc, #0x2F4]
  012e8	e5933440	 ldr         r3, [r3, #0x440]
  012ec	e3130902	 tst         r3, #2, 18
  012f0	0a000007	 beq         |$LN27@Init@3|
  012f4	e59d3224	 ldr         r3, [sp, #0x224]
  012f8	e59f230c	 ldr         r2, [pc, #0x30C]
  012fc	e59f1304	 ldr         r1, [pc, #0x304]
  01300	e59f02fc	 ldr         r0, [pc, #0x2FC]
  01304	eb000000	 bl          NKDbgPrintfW
  01308	e3a03001	 mov         r3, #1
  0130c	e58d3270	 str         r3, [sp, #0x270]
  01310	ea000001	 b           |$LN28@Init@3|
  01314		 |$LN27@Init@3|
  01314	e3a03000	 mov         r3, #0
  01318	e58d3270	 str         r3, [sp, #0x270]
  0131c		 |$LN28@Init@3|
  0131c		 |$LN5@Init@3|

; 544  :              }
; 545  : 
; 546  :              RegCloseKey(hkDevice);

  0131c	e59d0228	 ldr         r0, [sp, #0x228]
  01320	eb000000	 bl          RegCloseKey
  01324		 |$LN6@Init@3|

; 547  :         }
; 548  :     }
; 549  : 
; 550  :     if(strcmp((const char*)&szDefaultClientDriver,"RNDIS")||strcmp((const char*)&szDefaultClientDriver,"Serial_Class"))

  01324	e59f12d4	 ldr         r1, [pc, #0x2D4]
  01328	e28d0010	 add         r0, sp, #0x10
  0132c	eb000000	 bl          strcmp
  01330	e58d0274	 str         r0, [sp, #0x274]
  01334	e59d3274	 ldr         r3, [sp, #0x274]
  01338	e3530000	 cmp         r3, #0
  0133c	1a000006	 bne         |$LN2@Init@3|
  01340	e59f12b4	 ldr         r1, [pc, #0x2B4]
  01344	e28d0010	 add         r0, sp, #0x10
  01348	eb000000	 bl          strcmp
  0134c	e58d0278	 str         r0, [sp, #0x278]
  01350	e59d3278	 ldr         r3, [sp, #0x278]
  01354	e3530000	 cmp         r3, #0
  01358	0a000004	 beq         |$LN3@Init@3|
  0135c		 |$LN2@Init@3|

; 551  :     {
; 552  :         m_fDelayRequired = TRUE;

  0135c	e59d32a4	 ldr         r3, [sp, #0x2A4]
  01360	e2832f67	 add         r2, r3, #0x67, 30
  01364	e3a03001	 mov         r3, #1
  01368	e5823000	 str         r3, [r2]

; 553  :     }
; 554  :     else

  0136c	ea000003	 b           |$LN1@Init@3|
  01370		 |$LN3@Init@3|

; 555  :     {
; 556  :         m_fDelayRequired = FALSE;

  01370	e59d32a4	 ldr         r3, [sp, #0x2A4]
  01374	e2832f67	 add         r2, r3, #0x67, 30
  01378	e3a03000	 mov         r3, #0
  0137c	e5823000	 str         r3, [r2]
  01380		 |$LN1@Init@3|

; 557  :     }
; 558  : 
; 559  : 
; 560  :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Accessing register with parent (0x%x)\r\n"), m_hParent));

  01380	e59f3258	 ldr         r3, [pc, #0x258]
  01384	e5933440	 ldr         r3, [r3, #0x440]
  01388	e3130a02	 tst         r3, #2, 20
  0138c	0a000007	 beq         |$LN29@Init@3|
  01390	e59d32a4	 ldr         r3, [sp, #0x2A4]
  01394	e2833d05	 add         r3, r3, #5, 26
  01398	e5931000	 ldr         r1, [r3]
  0139c	e59f0254	 ldr         r0, [pc, #0x254]
  013a0	eb000000	 bl          NKDbgPrintfW
  013a4	e3a03001	 mov         r3, #1
  013a8	e58d327c	 str         r3, [sp, #0x27C]
  013ac	ea000001	 b           |$LN30@Init@3|
  013b0		 |$LN29@Init@3|
  013b0	e3a03000	 mov         r3, #0
  013b4	e58d327c	 str         r3, [sp, #0x27C]
  013b8		 |$LN30@Init@3|

; 561  : 
; 562  :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("FAddr = 0x%x\r\n"), INREG8(&m_pOTG->pUsbGenRegs->FAddr)));

  013b8	e59f3220	 ldr         r3, [pc, #0x220]
  013bc	e5933440	 ldr         r3, [r3, #0x440]
  013c0	e3130a02	 tst         r3, #2, 20
  013c4	0a00000b	 beq         |$LN31@Init@3|
  013c8	e59d32a4	 ldr         r3, [sp, #0x2A4]
  013cc	e2833e15	 add         r3, r3, #0x15, 28
  013d0	e5933000	 ldr         r3, [r3]
  013d4	e2833020	 add         r3, r3, #0x20
  013d8	e5933000	 ldr         r3, [r3]
  013dc	e5d33000	 ldrb        r3, [r3]
  013e0	e1a01003	 mov         r1, r3
  013e4	e59f0208	 ldr         r0, [pc, #0x208]
  013e8	eb000000	 bl          NKDbgPrintfW
  013ec	e3a03001	 mov         r3, #1
  013f0	e58d3280	 str         r3, [sp, #0x280]
  013f4	ea000001	 b           |$LN32@Init@3|
  013f8		 |$LN31@Init@3|
  013f8	e3a03000	 mov         r3, #0
  013fc	e58d3280	 str         r3, [sp, #0x280]
  01400		 |$LN32@Init@3|

; 563  :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Power = 0x%x\r\n"), INREG8(&m_pOTG->pUsbGenRegs->Power)));

  01400	e59f31d8	 ldr         r3, [pc, #0x1D8]
  01404	e5933440	 ldr         r3, [r3, #0x440]
  01408	e3130a02	 tst         r3, #2, 20
  0140c	0a00000c	 beq         |$LN33@Init@3|
  01410	e59d32a4	 ldr         r3, [sp, #0x2A4]
  01414	e2833e15	 add         r3, r3, #0x15, 28
  01418	e5933000	 ldr         r3, [r3]
  0141c	e2833020	 add         r3, r3, #0x20
  01420	e5933000	 ldr         r3, [r3]
  01424	e2833001	 add         r3, r3, #1
  01428	e5d33000	 ldrb        r3, [r3]
  0142c	e1a01003	 mov         r1, r3
  01430	e59f01b8	 ldr         r0, [pc, #0x1B8]
  01434	eb000000	 bl          NKDbgPrintfW
  01438	e3a03001	 mov         r3, #1
  0143c	e58d3284	 str         r3, [sp, #0x284]
  01440	ea000001	 b           |$LN34@Init@3|
  01444		 |$LN33@Init@3|
  01444	e3a03000	 mov         r3, #0
  01448	e58d3284	 str         r3, [sp, #0x284]
  0144c		 |$LN34@Init@3|

; 564  :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("IntrTXE = 0x%x\r\n"), INREG16(&m_pOTG->pUsbGenRegs->IntrTxE)));

  0144c	e59f318c	 ldr         r3, [pc, #0x18C]
  01450	e5933440	 ldr         r3, [r3, #0x440]
  01454	e3130a02	 tst         r3, #2, 20
  01458	0a000011	 beq         |$LN35@Init@3|
  0145c	e59d32a4	 ldr         r3, [sp, #0x2A4]
  01460	e2833e15	 add         r3, r3, #0x15, 28
  01464	e5933000	 ldr         r3, [r3]
  01468	e2833020	 add         r3, r3, #0x20
  0146c	e5933000	 ldr         r3, [r3]
  01470	e2831006	 add         r1, r3, #6
  01474	e5d13001	 ldrb        r3, [r1, #1]
  01478	e1a03403	 mov         r3, r3, lsl #8
  0147c	e1a02803	 mov         r2, r3, lsl #16
  01480	e1a02822	 mov         r2, r2, lsr #16
  01484	e5d13000	 ldrb        r3, [r1]
  01488	e1833002	 orr         r3, r3, r2
  0148c	e1a01003	 mov         r1, r3
  01490	e59f0154	 ldr         r0, [pc, #0x154]
  01494	eb000000	 bl          NKDbgPrintfW
  01498	e3a03001	 mov         r3, #1
  0149c	e58d3288	 str         r3, [sp, #0x288]
  014a0	ea000001	 b           |$LN36@Init@3|
  014a4		 |$LN35@Init@3|
  014a4	e3a03000	 mov         r3, #0
  014a8	e58d3288	 str         r3, [sp, #0x288]
  014ac		 |$LN36@Init@3|

; 565  :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("IntrRXE = 0x%x\r\n"), INREG16(&m_pOTG->pUsbGenRegs->IntrRxE)));

  014ac	e59f312c	 ldr         r3, [pc, #0x12C]
  014b0	e5933440	 ldr         r3, [r3, #0x440]
  014b4	e3130a02	 tst         r3, #2, 20
  014b8	0a000011	 beq         |$LN37@Init@3|
  014bc	e59d32a4	 ldr         r3, [sp, #0x2A4]
  014c0	e2833e15	 add         r3, r3, #0x15, 28
  014c4	e5933000	 ldr         r3, [r3]
  014c8	e2833020	 add         r3, r3, #0x20
  014cc	e5933000	 ldr         r3, [r3]
  014d0	e2831008	 add         r1, r3, #8
  014d4	e5d13001	 ldrb        r3, [r1, #1]
  014d8	e1a03403	 mov         r3, r3, lsl #8
  014dc	e1a02803	 mov         r2, r3, lsl #16
  014e0	e1a02822	 mov         r2, r2, lsr #16
  014e4	e5d13000	 ldrb        r3, [r1]
  014e8	e1833002	 orr         r3, r3, r2
  014ec	e1a01003	 mov         r1, r3
  014f0	e59f00f0	 ldr         r0, [pc, #0xF0]
  014f4	eb000000	 bl          NKDbgPrintfW
  014f8	e3a03001	 mov         r3, #1
  014fc	e58d328c	 str         r3, [sp, #0x28C]
  01500	ea000001	 b           |$LN38@Init@3|
  01504		 |$LN37@Init@3|
  01504	e3a03000	 mov         r3, #0
  01508	e58d328c	 str         r3, [sp, #0x28C]
  0150c		 |$LN38@Init@3|

; 566  :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("OTG_Rev = 0x%x\r\n"), INREG32(&m_pOTG->pUsbOtgRegs->OTG_Rev)));

  0150c	e59f30cc	 ldr         r3, [pc, #0xCC]
  01510	e5933440	 ldr         r3, [r3, #0x440]
  01514	e3130a02	 tst         r3, #2, 20
  01518	0a00000a	 beq         |$LN39@Init@3|
  0151c	e59d32a4	 ldr         r3, [sp, #0x2A4]
  01520	e2833e15	 add         r3, r3, #0x15, 28
  01524	e5933000	 ldr         r3, [r3]
  01528	e2833018	 add         r3, r3, #0x18
  0152c	e5933000	 ldr         r3, [r3]
  01530	e5931000	 ldr         r1, [r3]
  01534	e59f00a8	 ldr         r0, [pc, #0xA8]
  01538	eb000000	 bl          NKDbgPrintfW
  0153c	e3a03001	 mov         r3, #1
  01540	e58d3290	 str         r3, [sp, #0x290]
  01544	ea000001	 b           |$LN40@Init@3|
  01548		 |$LN39@Init@3|
  01548	e3a03000	 mov         r3, #0
  0154c	e58d3290	 str         r3, [sp, #0x290]
  01550		 |$LN40@Init@3|

; 567  :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("HW Ver = 0x%x\r\n"), INREG32(&m_pOTG->pUsbGenRegs->HWVers)));

  01550	e59f3088	 ldr         r3, [pc, #0x88]
  01554	e5933440	 ldr         r3, [r3, #0x440]
  01558	e3130a02	 tst         r3, #2, 20
  0155c	0a00000b	 beq         |$LN41@Init@3|
  01560	e59d32a4	 ldr         r3, [sp, #0x2A4]
  01564	e2833e15	 add         r3, r3, #0x15, 28
  01568	e5933000	 ldr         r3, [r3]
  0156c	e2833020	 add         r3, r3, #0x20
  01570	e5933000	 ldr         r3, [r3]
  01574	e283306c	 add         r3, r3, #0x6C
  01578	e5931000	 ldr         r1, [r3]
  0157c	e59f0058	 ldr         r0, [pc, #0x58]
  01580	eb000000	 bl          NKDbgPrintfW
  01584	e3a03001	 mov         r3, #1
  01588	e58d3294	 str         r3, [sp, #0x294]
  0158c	ea000001	 b           |$LN42@Init@3|
  01590		 |$LN41@Init@3|
  01590	e3a03000	 mov         r3, #0
  01594	e58d3294	 str         r3, [sp, #0x294]
  01598		 |$LN42@Init@3|

; 568  : 
; 569  :     bReturn = USBOTG::Init();

  01598	e59d02a4	 ldr         r0, [sp, #0x2A4]
  0159c	eb000000	 bl          |?Init@USBOTG@@UAAHXZ|
  015a0	e58d0298	 str         r0, [sp, #0x298]
  015a4	e59d3298	 ldr         r3, [sp, #0x298]
  015a8	e58d300c	 str         r3, [sp, #0xC]

; 570  :     
; 571  :     m_dwUSBUsageCount = 0;  

  015ac	e59d32a4	 ldr         r3, [sp, #0x2A4]
  015b0	e2832e16	 add         r2, r3, #0x16, 28
  015b4	e3a03000	 mov         r3, #0
  015b8	e5823000	 str         r3, [r2]

; 572  :     
; 573  :     return bReturn;

  015bc	e59d022c	 ldr         r0, [sp, #0x22C]
  015c0	eb000000	 bl          __security_check_cookie
  015c4	e59d300c	 ldr         r3, [sp, #0xC]
  015c8	e58d3230	 str         r3, [sp, #0x230]
  015cc		 |$LN15@Init@3|

; 574  : }

  015cc	e59d0230	 ldr         r0, [sp, #0x230]
  015d0	e28ddfa7	 add         sp, sp, #0xA7, 30
  015d4	e89d6000	 ldmia       sp, {sp, lr}
  015d8	e12fff1e	 bx          lr
  015dc		 |$LN46@Init@3|
  015dc		 |$LN47@Init@3|
  015dc	00000000	 DCD         |??_C@_1CA@DOMCMLOJ@?$AAH?$AAW?$AA?5?$AAV?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  015e0		 |$LN48@Init@3|
  015e0	00000000	 DCD         |dpCurSettings|
  015e4		 |$LN49@Init@3|
  015e4	00000000	 DCD         |??_C@_1CC@DAKKPLFB@?$AAO?$AAT?$AAG?$AA_?$AAR?$AAe?$AAv?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  015e8		 |$LN50@Init@3|
  015e8	00000000	 DCD         |??_C@_1CC@FNPJIHOD@?$AAI?$AAn?$AAt?$AAr?$AAR?$AAX?$AAE?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  015ec		 |$LN51@Init@3|
  015ec	00000000	 DCD         |??_C@_1CC@GCCHFKFC@?$AAI?$AAn?$AAt?$AAr?$AAT?$AAX?$AAE?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  015f0		 |$LN52@Init@3|
  015f0	00000000	 DCD         |??_C@_1BO@IIOMMOE@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  015f4		 |$LN53@Init@3|
  015f4	00000000	 DCD         |??_C@_1BO@BGKMCMHH@?$AAF?$AAA?$AAd?$AAd?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  015f8		 |$LN54@Init@3|
  015f8	00000000	 DCD         |??_C@_1FA@ENPHFMKG@?$AAA?$AAc?$AAc?$AAe?$AAs?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$CI@|
  015fc		 |$LN55@Init@3|
  015fc	00000000	 DCD         |??_C@_0N@GCHGAKML@Serial_Class?$AA@|
  01600		 |$LN56@Init@3|
  01600	00000000	 DCD         |??_C@_05BCBDGGDK@RNDIS?$AA@|
  01604		 |$LN57@Init@3|
  01604	00000000	 DCD         |??_C@_1GK@EDHBDMMN@?$AAU?$AAF?$AAN?$AAP?$AAD?$AAD?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAa?$AAl?$AAu?$AAe?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs@|
  01608		 |$LN58@Init@3|
  01608	00000000	 DCD         |??_C@_1DI@KIDPGBEF@?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?2?$AAU?$AAS?$AAB?$AA?2?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?$AA@|
  0160c		 |$LN59@Init@3|
  0160c	00000000	 DCD         |??_C@_1CI@MGKPCHDE@?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?$AA@|
  01610		 |$LN60@Init@3|
  01610	00000000	 DCD         |??_C@_1FK@DCFOIEJO@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAO?$AAp?$AAe?$AAn?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAK?$AAe?$AAy?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ@|
  01614		 |$LN61@Init@3|
  01614	00000000	 DCD         |??_C@_1DM@GBENJPGN@?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?2?$AAB?$AAu?$AAi?$AAl?$AAt?$AAI?$AAn?$AA?2?$AAM?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?2?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?$AA@|
  01618		 |$LN62@Init@3|
  01618	00000000	 DCD         |??_C@_1FA@INCMDDFI@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAO?$AAT?$AAG?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAc@|
  0161c		 |$LN63@Init@3|
  0161c	00000000	 DCD         |??_C@_1DE@JCPKNOGL@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAp?$AAa?$AAd?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  01620		 |$LN64@Init@3|
  01620	00000000	 DCD         |??_C@_1DE@OGEEBABB@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAh?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  01624		 |$LN65@Init@3|
  01624	00000000	 DCD         |??_C@_1EI@KGMEFEM@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAm?$AA_?$AAp?$AAO?$AAT?$AAG?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr@|
  01628		 |$LN66@Init@3|
  01628	00000000	 DCD         |__security_cookie|
  0162c		 |$M43205|

			 ENDP  ; |?Init@OMAPMHSUSBOTG@@UAAHXZ|, OMAPMHSUSBOTG::Init

	EXPORT	|??_C@_1BG@LHAKOFNM@?$AAP?$AAo?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?IsKeyOpened@CRegistryEdit@@QAAHXZ|	; CRegistryEdit::IsKeyOpened
	EXPORT	|?GetDeviceHandle@DefaultBusDriver@@QAAPAXXZ| ; DefaultBusDriver::GetDeviceHandle
	EXPORT	|??_C@_1EI@NFNEHPOP@?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAP?$AAo?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt@| [ DATA ] ; `string'
	IMPORT	|?PostInit@USBOTG@@UAAHXZ|		; USBOTG::PostInit

  00070			 AREA	 |.pdata|, PDATA
|$T43238| DCD	|$LN10@PostInit|
	DCD	0x40004b04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@LHAKOFNM@?$AAP?$AAo?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "s", 0x0, "t", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@NFNEHPOP@?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAP?$AAo?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "M", 0x0, "H", 0x0, "S"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G"
	DCB	0x0, ":", 0x0, ":", 0x0, "P", 0x0, "o", 0x0, "s", 0x0, "t"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "r"
	DCB	0x0, "t", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  0162c			 AREA	 |.text|, CODE, ARM

  0162c		 |?PostInit@OMAPMHSUSBOTG@@UAAHXZ| PROC	; OMAPMHSUSBOTG::PostInit

; 597  : {

  0162c		 |$LN10@PostInit|
  0162c	e1a0c00d	 mov         r12, sp
  01630	e92d0001	 stmdb       sp!, {r0}
  01634	e92d5000	 stmdb       sp!, {r12, lr}
  01638	e24dd01c	 sub         sp, sp, #0x1C
  0163c		 |$M43235|

; 598  :     BOOL bReturn = FALSE;

  0163c	e3a03000	 mov         r3, #0
  01640	e58d3000	 str         r3, [sp]

; 599  :     DEBUGMSG(ZONE_OTG_INIT, (L"OMAPMHSUSBOTG::PostInit(): "
; 600  :         L"Start.\r\n"
; 601  :         ));    

  01644	e59f3104	 ldr         r3, [pc, #0x104]
  01648	e5933440	 ldr         r3, [r3, #0x440]
  0164c	e3130001	 tst         r3, #1
  01650	0a000004	 beq         |$LN4@PostInit|
  01654	e59f00f8	 ldr         r0, [pc, #0xF8]
  01658	eb000000	 bl          NKDbgPrintfW
  0165c	e3a03001	 mov         r3, #1
  01660	e58d3008	 str         r3, [sp, #8]
  01664	ea000001	 b           |$LN5@PostInit|
  01668		 |$LN4@PostInit|
  01668	e3a03000	 mov         r3, #0
  0166c	e58d3008	 str         r3, [sp, #8]
  01670		 |$LN5@PostInit|

; 602  : 
; 603  :     // Default setting to be client mode
; 604  :     m_UsbOtgState = USBOTG_b_idle;

  01670	e59d3024	 ldr         r3, [sp, #0x24]
  01674	e2832070	 add         r2, r3, #0x70
  01678	e3a03009	 mov         r3, #9
  0167c	e5823000	 str         r3, [r2]

; 605  :     m_UsbOtgInput.bit.id = 1;

  01680	e59d3024	 ldr         r3, [sp, #0x24]
  01684	e283304c	 add         r3, r3, #0x4C
  01688	e5933000	 ldr         r3, [r3]
  0168c	e3832902	 orr         r2, r3, #2, 18
  01690	e59d3024	 ldr         r3, [sp, #0x24]
  01694	e283304c	 add         r3, r3, #0x4C
  01698	e5832000	 str         r2, [r3]

; 606  : 
; 607  :     if ( GetDeviceHandle()!=NULL &&  IsKeyOpened())

  0169c	e59d0024	 ldr         r0, [sp, #0x24]
  016a0	eb000000	 bl          |?GetDeviceHandle@DefaultBusDriver@@QAAPAXXZ|
  016a4	e58d000c	 str         r0, [sp, #0xC]
  016a8	e59d300c	 ldr         r3, [sp, #0xC]
  016ac	e3530000	 cmp         r3, #0
  016b0	0a000016	 beq         |$LN1@PostInit|
  016b4	e59d3024	 ldr         r3, [sp, #0x24]
  016b8	e283002c	 add         r0, r3, #0x2C
  016bc	eb000000	 bl          |?IsKeyOpened@CRegistryEdit@@QAAHXZ|
  016c0	e58d0010	 str         r0, [sp, #0x10]
  016c4	e59d3010	 ldr         r3, [sp, #0x10]
  016c8	e3530000	 cmp         r3, #0
  016cc	0a00000f	 beq         |$LN1@PostInit|

; 608  :     {
; 609  :         DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("PostInit\r\n")));

  016d0	e59f3078	 ldr         r3, [pc, #0x78]
  016d4	e5933440	 ldr         r3, [r3, #0x440]
  016d8	e3130a02	 tst         r3, #2, 20
  016dc	0a000004	 beq         |$LN6@PostInit|
  016e0	e59f0064	 ldr         r0, [pc, #0x64]
  016e4	eb000000	 bl          NKDbgPrintfW
  016e8	e3a03001	 mov         r3, #1
  016ec	e58d3014	 str         r3, [sp, #0x14]
  016f0	ea000001	 b           |$LN7@PostInit|
  016f4		 |$LN6@PostInit|
  016f4	e3a03000	 mov         r3, #0
  016f8	e58d3014	 str         r3, [sp, #0x14]
  016fc		 |$LN7@PostInit|

; 610  :         bReturn=USBOTG::PostInit();

  016fc	e59d0024	 ldr         r0, [sp, #0x24]
  01700	eb000000	 bl          |?PostInit@USBOTG@@UAAHXZ|
  01704	e58d0018	 str         r0, [sp, #0x18]
  01708	e59d3018	 ldr         r3, [sp, #0x18]
  0170c	e58d3000	 str         r3, [sp]
  01710		 |$LN1@PostInit|

; 611  :     }
; 612  : 
; 613  :     UpdateDevicePower(m_hParent, D4, NULL);

  01710	e3a02000	 mov         r2, #0
  01714	e3a01004	 mov         r1, #4
  01718	e59d3024	 ldr         r3, [sp, #0x24]
  0171c	e2833d05	 add         r3, r3, #5, 26
  01720	e5930000	 ldr         r0, [r3]
  01724	eb000000	 bl          |?UpdateDevicePower@@YAXPAXW4_CEDEVICE_POWER_STATE@@0@Z|

; 614  :     ThreadStart();

  01728	e59d3024	 ldr         r3, [sp, #0x24]
  0172c	e28300dc	 add         r0, r3, #0xDC
  01730	eb000000	 bl          |?ThreadStart@CMiniThread@@QAAHXZ|

; 615  :     
; 616  :     return bReturn;

  01734	e59d3000	 ldr         r3, [sp]
  01738	e58d3004	 str         r3, [sp, #4]

; 617  : }

  0173c	e59d0004	 ldr         r0, [sp, #4]
  01740	e28dd01c	 add         sp, sp, #0x1C
  01744	e89d6000	 ldmia       sp, {sp, lr}
  01748	e12fff1e	 bx          lr
  0174c		 |$LN11@PostInit|
  0174c		 |$LN12@PostInit|
  0174c	00000000	 DCD         |??_C@_1BG@LHAKOFNM@?$AAP?$AAo?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  01750		 |$LN13@PostInit|
  01750	00000000	 DCD         |dpCurSettings|
  01754		 |$LN14@PostInit|
  01754	00000000	 DCD         |??_C@_1EI@NFNEHPOP@?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAP?$AAo?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt@|
  01758		 |$M43236|

			 ENDP  ; |?PostInit@OMAPMHSUSBOTG@@UAAHXZ|, OMAPMHSUSBOTG::PostInit

; File c:\wince600\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.pdata|, PDATA
|$T43250| DCD	|$LN7@IsKeyOpene|
	DCD	0x40001304
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsKeyOpened@CRegistryEdit@@QAAHXZ| PROC ; CRegistryEdit::IsKeyOpened

; 171  :     {

  00000		 |$LN7@IsKeyOpene|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M43247|

; 172  :         return ( m_hDevKey != NULL );

  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e5933000	 ldr         r3, [r3]
  00018	e3530000	 cmp         r3, #0
  0001c	0a000002	 beq         |$LN3@IsKeyOpene|
  00020	e3a03001	 mov         r3, #1
  00024	e58d3004	 str         r3, [sp, #4]
  00028	ea000001	 b           |$LN4@IsKeyOpene|
  0002c		 |$LN3@IsKeyOpene|
  0002c	e3a03000	 mov         r3, #0
  00030	e58d3004	 str         r3, [sp, #4]
  00034		 |$LN4@IsKeyOpene|
  00034	e59d3004	 ldr         r3, [sp, #4]
  00038	e58d3000	 str         r3, [sp]

; 173  :     }

  0003c	e59d0000	 ldr         r0, [sp]
  00040	e28dd008	 add         sp, sp, #8
  00044	e89d6000	 ldmia       sp, {sp, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$M43248|

			 ENDP  ; |?IsKeyOpened@CRegistryEdit@@QAAHXZ|, CRegistryEdit::IsKeyOpened

; File c:\wince600\public\common\oak\inc\defbus.h

  00000			 AREA	 |.pdata|, PDATA
|$T43258| DCD	|$LN5@GetDeviceH|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDeviceHandle@DefaultBusDriver@@QAAPAXXZ| PROC ; DefaultBusDriver::GetDeviceHandle

; 167  :     HANDLE GetDeviceHandle() { return m_hDevice; };

  00000		 |$LN5@GetDeviceH|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M43255|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833020	 add         r3, r3, #0x20
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M43256|

			 ENDP  ; |?GetDeviceHandle@DefaultBusDriver@@QAAPAXXZ|, DefaultBusDriver::GetDeviceHandle

	EXPORT	|??_C@_1EA@NBOCHMDO@?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAr?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@HANIHOAM@?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAr?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@CCNINHJ@?$AAO?$AAT?$AAG?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAr?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@CPHNGBGN@?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAI?$AAd?$AAG?$AAn?$AAd?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@HAEBBNED@?$AAF?$AAa?$AAi?$AAl?$AA?5?$AAt?$AAo?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAu?$AAp?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAi?$AAt?$AA?5?$AAw?$AAo?$AAu?$AAl?$AAd?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@DLJIKFAM@?$AAR?$AAe?$AAg?$AAO?$AAp?$AAe?$AAn?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@PFMLCFFA@?$AAI?$AAR?$AAQ?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5?$AAS?$AAY?$AAS?$AAI?$AAN?$AAT?$AAR?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@MDCLAJDE@?$AAS?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAC?$AAS?$AAP?$AA_?$AAM?$AAU?$AAS?$AAB?$AA_?$AAD?$AAM?$AAA?$AA_?$AAR?$AAE?$AAG?$AAS?$AA?$CJ?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@EEACPLPN@?$AAS?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAC?$AAS?$AAP?$AA_?$AAM?$AAU?$AAS?$AAB?$AA_?$AAO?$AAT?$AAG?$AA_?$AAR?$AAE?$AAG?$AAS?$AA?$CJ?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@EKDMMJHL@?$AAF?$AAa?$AAi?$AAl?$AA?5?$AAt?$AAo?$AA?5?$AAM?$AAm?$AAM?$AAa?$AAp?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAO?$AAT?$AAG?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@EPDHPLJM@?$AAS?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAC?$AAS?$AAP?$AA_?$AAM?$AAU?$AAS?$AAB?$AA_?$AAC?$AAS?$AAR?$AA_?$AAR?$AAE?$AAG?$AAS?$AA?$CJ?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@HBLNJGIE@?$AAF?$AAa?$AAi?$AAl?$AA?5?$AAt?$AAo?$AA?5?$AAM?$AAm?$AAM?$AAa?$AAp?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAC?$AAS?$AAR?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@MAANKBNO@?$AAS?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAC?$AAS?$AAP?$AA_?$AAM?$AAU?$AAS?$AAB?$AA_?$AAG?$AAE?$AAN?$AA_?$AAR?$AAE?$AAG?$AAS?$AA?$CJ?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@JAOOFKGI@?$AAF?$AAa?$AAi?$AAl?$AA?5?$AAt?$AAo?$AA?5?$AAM?$AAm?$AAM?$AAa?$AAp?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAG?$AAe?$AAn?$AAe?$AAr?$AAa?$AAl?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@NDBPOLAE@?$AAI?$AAR?$AAQ?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?GetIsrInfo@CRegistryEdit@@QAAKPAU_DDKISRINFO_tag@@@Z| ; CRegistryEdit::GetIsrInfo
	EXPORT	|__$ArrayPad$| [ DATA ]
	IMPORT	|GetLastError|
	IMPORT	|MmMapIoSpace|

  00078			 AREA	 |.pdata|, PDATA
|$T43310| DCD	|$LN54@MapHardwar|
	DCD	0xc001fd04
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbotg\otg.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@NBOCHMDO@?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAr?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "t", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "y"
	DCB	0x0, " ", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "r", 0x0, "g"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "E", 0x0, "v", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "u", 0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@HANIHOAM@?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAr?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "t", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "y"
	DCB	0x0, " ", 0x0, "C", 0x0, "h", 0x0, "a", 0x0, "r", 0x0, "g"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "E", 0x0, "v", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, " ", 0x0, "C", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@CCNINHJ@?$AAO?$AAT?$AAG?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAr?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, " ", 0x0, "C", 0x0, "h", 0x0, "a"
	DCB	0x0, "r", 0x0, "g", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "E"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "(", 0x0, "%"
	DCB	0x0, "s", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@CPHNGBGN@?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAI?$AAd?$AAG?$AAn?$AAd?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "M", 0x0, "H", 0x0, "S"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "I", 0x0, "d", 0x0, "G"
	DCB	0x0, "n", 0x0, "d", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "c", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@HAEBBNED@?$AAF?$AAa?$AAi?$AAl?$AA?5?$AAt?$AAo?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAu?$AAp?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAi?$AAt?$AA?5?$AAw?$AAo?$AAu?$AAl?$AAd?$AA?5@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "u"
	DCB	0x0, "p", 0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " "
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, " ", 0x0, "i", 0x0, "t"
	DCB	0x0, " ", 0x0, "w", 0x0, "o", 0x0, "u", 0x0, "l", 0x0, "d"
	DCB	0x0, " ", 0x0, "b", 0x0, "e", 0x0, " ", 0x0, "d", 0x0, "i"
	DCB	0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@DLJIKFAM@?$AAR?$AAe?$AAg?$AAO?$AAp?$AAe?$AAn?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "g", 0x0, "O", 0x0, "p", 0x0, "e", 0x0, "n"
	DCB	0x0, "K", 0x0, "e", 0x0, "y", 0x0, "E", 0x0, "x", 0x0, "("
	DCB	0x0, "%", 0x0, "s", 0x0, ")", 0x0, " ", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@PFMLCFFA@?$AAI?$AAR?$AAQ?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5?$AAS?$AAY?$AAS?$AAI?$AAN?$AAT?$AAR?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "R", 0x0, "Q", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "S", 0x0, "Y", 0x0, "S"
	DCB	0x0, "I", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "=", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@MDCLAJDE@?$AAS?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAC?$AAS?$AAP?$AA_?$AAM?$AAU?$AAS?$AAB?$AA_?$AAD?$AAM?$AAA?$AA_?$AAR?$AAE?$AAG?$AAS?$AA?$CJ?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5@| DCB "S"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, "o", 0x0, "f", 0x0, "("
	DCB	0x0, "C", 0x0, "S", 0x0, "P", 0x0, "_", 0x0, "M", 0x0, "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "_", 0x0, "D", 0x0, "M", 0x0, "A"
	DCB	0x0, "_", 0x0, "R", 0x0, "E", 0x0, "G", 0x0, "S", 0x0, ")"
	DCB	0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ","
	DCB	0x0, " ", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "p", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@EEACPLPN@?$AAS?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAC?$AAS?$AAP?$AA_?$AAM?$AAU?$AAS?$AAB?$AA_?$AAO?$AAT?$AAG?$AA_?$AAR?$AAE?$AAG?$AAS?$AA?$CJ?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5@| DCB "S"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, "o", 0x0, "f", 0x0, "("
	DCB	0x0, "C", 0x0, "S", 0x0, "P", 0x0, "_", 0x0, "M", 0x0, "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "_", 0x0, "O", 0x0, "T", 0x0, "G"
	DCB	0x0, "_", 0x0, "R", 0x0, "E", 0x0, "G", 0x0, "S", 0x0, ")"
	DCB	0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ","
	DCB	0x0, " ", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "p", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@EKDMMJHL@?$AAF?$AAa?$AAi?$AAl?$AA?5?$AAt?$AAo?$AA?5?$AAM?$AAm?$AAM?$AAa?$AAp?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAO?$AAT?$AAG?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?$AN@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "M", 0x0, "m", 0x0, "M", 0x0, "a", 0x0, "p"
	DCB	0x0, " ", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, " ", 0x0, "O"
	DCB	0x0, "T", 0x0, "G", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@EPDHPLJM@?$AAS?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAC?$AAS?$AAP?$AA_?$AAM?$AAU?$AAS?$AAB?$AA_?$AAC?$AAS?$AAR?$AA_?$AAR?$AAE?$AAG?$AAS?$AA?$CJ?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5@| DCB "S"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, "o", 0x0, "f", 0x0, "("
	DCB	0x0, "C", 0x0, "S", 0x0, "P", 0x0, "_", 0x0, "M", 0x0, "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "_", 0x0, "C", 0x0, "S", 0x0, "R"
	DCB	0x0, "_", 0x0, "R", 0x0, "E", 0x0, "G", 0x0, "S", 0x0, ")"
	DCB	0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ","
	DCB	0x0, " ", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "p", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@HBLNJGIE@?$AAF?$AAa?$AAi?$AAl?$AA?5?$AAt?$AAo?$AA?5?$AAM?$AAm?$AAM?$AAa?$AAp?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAC?$AAS?$AAR?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?$AN@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "M", 0x0, "m", 0x0, "M", 0x0, "a", 0x0, "p"
	DCB	0x0, " ", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, " ", 0x0, "C"
	DCB	0x0, "S", 0x0, "R", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@MAANKBNO@?$AAS?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAC?$AAS?$AAP?$AA_?$AAM?$AAU?$AAS?$AAB?$AA_?$AAG?$AAE?$AAN?$AA_?$AAR?$AAE?$AAG?$AAS?$AA?$CJ?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5@| DCB "S"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, "o", 0x0, "f", 0x0, "("
	DCB	0x0, "C", 0x0, "S", 0x0, "P", 0x0, "_", 0x0, "M", 0x0, "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "N"
	DCB	0x0, "_", 0x0, "R", 0x0, "E", 0x0, "G", 0x0, "S", 0x0, ")"
	DCB	0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ","
	DCB	0x0, " ", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "p", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@JAOOFKGI@?$AAF?$AAa?$AAi?$AAl?$AA?5?$AAt?$AAo?$AA?5?$AAM?$AAm?$AAM?$AAa?$AAp?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAG?$AAe?$AAn?$AAe?$AAr?$AAa?$AAl?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "M", 0x0, "m", 0x0, "M", 0x0, "a", 0x0, "p"
	DCB	0x0, " ", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, " ", 0x0, "G"
	DCB	0x0, "e", 0x0, "n", 0x0, "e", 0x0, "r", 0x0, "a", 0x0, "l"
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@NDBPOLAE@?$AAI?$AAR?$AAQ?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "R", 0x0, "Q", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00004			 AREA	 |.xdata|, DATA
|$T43306| DCD	0xffffff5c
; Function compile flags: /Odtp

  01758			 AREA	 |.text|, CODE, ARM

  01758	00000000	 DCD         |__GSHandlerCheck|
  0175c	00000000	 DCD         |$T43306|

  01760		 |?MapHardware@OMAPMHSUSBOTG@@AAAHXZ| PROC ; OMAPMHSUSBOTG::MapHardware

; 636  : {    

  01760		 |$LN54@MapHardwar|
  01760	e1a0c00d	 mov         r12, sp
  01764	e92d0001	 stmdb       sp!, {r0}
  01768	e92d5000	 stmdb       sp!, {r12, lr}
  0176c	e24ddf76	 sub         sp, sp, #0x76, 30
  01770		 |$M43307|
  01770	e59f37d8	 ldr         r3, [pc, #0x7D8]
  01774	e5933000	 ldr         r3, [r3]
  01778	e58d3140	 str         r3, [sp, #0x140]

; 637  :     PHYSICAL_ADDRESS pa;
; 638  :     PCSP_MUSB_GEN_REGS pGen;
; 639  :     PCSP_MUSB_OTG_REGS pOtg;
; 640  :     PCSP_MUSB_DMA_REGS pDma;
; 641  :     PCSP_MUSB_CSR_REGS pCsr;
; 642  :     volatile DWORD *pSysControlRegs;
; 643  :     DDKISRINFO dii;        
; 644  :     TCHAR *ptcChargerEvent;
; 645  :     DWORD dwDMAIrq;
; 646  :     
; 647  :     if (GetIsrInfo(&dii) != ERROR_SUCCESS) 

  0177c	e28d1018	 add         r1, sp, #0x18
  01780	e59d31e0	 ldr         r3, [sp, #0x1E0]
  01784	e283002c	 add         r0, r3, #0x2C
  01788	eb000000	 bl          |?GetIsrInfo@CRegistryEdit@@QAAKPAU_DDKISRINFO_tag@@@Z|
  0178c	e58d0150	 str         r0, [sp, #0x150]
  01790	e59d3150	 ldr         r3, [sp, #0x150]
  01794	e3530000	 cmp         r3, #0
  01798	0a000004	 beq         |$LN11@MapHardwar|

; 648  :     {
; 649  :         return FALSE;

  0179c	e59d0140	 ldr         r0, [sp, #0x140]
  017a0	eb000000	 bl          __security_check_cookie
  017a4	e3a03000	 mov         r3, #0
  017a8	e58d3144	 str         r3, [sp, #0x144]
  017ac	ea0001cc	 b           |$LN12@MapHardwar|
  017b0		 |$LN11@MapHardwar|

; 650  :     }
; 651  : 
; 652  :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("IRQ = 0x%x\r\n"), dii.dwIrq));

  017b0	e59f3740	 ldr         r3, [pc, #0x740]
  017b4	e5933440	 ldr         r3, [r3, #0x440]
  017b8	e3130a02	 tst         r3, #2, 20
  017bc	0a000005	 beq         |$LN14@MapHardwar|
  017c0	e59d101c	 ldr         r1, [sp, #0x1C]
  017c4	e59f0780	 ldr         r0, [pc, #0x780]
  017c8	eb000000	 bl          NKDbgPrintfW
  017cc	e3a03001	 mov         r3, #1
  017d0	e58d3154	 str         r3, [sp, #0x154]
  017d4	ea000001	 b           |$LN15@MapHardwar|
  017d8		 |$LN14@MapHardwar|
  017d8	e3a03000	 mov         r3, #0
  017dc	e58d3154	 str         r3, [sp, #0x154]
  017e0		 |$LN15@MapHardwar|

; 653  : 
; 654  :     pa.QuadPart = OMAP35XX_MUSB_BASE_REG_PA + OMAP35XX_MUSB_GEN_OFFSET;

  017e0	e3a03312	 mov         r3, #0x12, 6
  017e4	e3833aab	 orr         r3, r3, #0xAB, 20
  017e8	e58d3124	 str         r3, [sp, #0x124]
  017ec	e3a03000	 mov         r3, #0
  017f0	e58d3128	 str         r3, [sp, #0x128]

; 655  :     pGen = (PCSP_MUSB_GEN_REGS)MmMapIoSpace(pa, sizeof(CSP_MUSB_GEN_REGS), FALSE);

  017f4	e3a03000	 mov         r3, #0
  017f8	e3a02c01	 mov         r2, #1, 24
  017fc	e59d0124	 ldr         r0, [sp, #0x124]
  01800	e59d1128	 ldr         r1, [sp, #0x128]
  01804	eb000000	 bl          MmMapIoSpace
  01808	e58d0158	 str         r0, [sp, #0x158]
  0180c	e59d3158	 ldr         r3, [sp, #0x158]
  01810	e58d3130	 str         r3, [sp, #0x130]

; 656  : 
; 657  :     if (pGen == NULL)

  01814	e59d3130	 ldr         r3, [sp, #0x130]
  01818	e3530000	 cmp         r3, #0
  0181c	1a00000f	 bne         |$LN10@MapHardwar|

; 658  :     {
; 659  :         DEBUGMSG(ZONE_OTG_ERROR, (TEXT("Fail to MmMap USB General Registers\r\n")));

  01820	e59f36d0	 ldr         r3, [pc, #0x6D0]
  01824	e5933440	 ldr         r3, [r3, #0x440]
  01828	e3130902	 tst         r3, #2, 18
  0182c	0a000004	 beq         |$LN16@MapHardwar|
  01830	e59f0710	 ldr         r0, [pc, #0x710]
  01834	eb000000	 bl          NKDbgPrintfW
  01838	e3a03001	 mov         r3, #1
  0183c	e58d315c	 str         r3, [sp, #0x15C]
  01840	ea000001	 b           |$LN17@MapHardwar|
  01844		 |$LN16@MapHardwar|
  01844	e3a03000	 mov         r3, #0
  01848	e58d315c	 str         r3, [sp, #0x15C]
  0184c		 |$LN17@MapHardwar|

; 660  :         return FALSE;

  0184c	e59d0140	 ldr         r0, [sp, #0x140]
  01850	eb000000	 bl          __security_check_cookie
  01854	e3a03000	 mov         r3, #0
  01858	e58d3144	 str         r3, [sp, #0x144]
  0185c	ea0001a0	 b           |$LN12@MapHardwar|
  01860		 |$LN10@MapHardwar|

; 661  :     }   
; 662  :     m_pOTG->pUsbGenRegs = pGen;

  01860	e59d31e0	 ldr         r3, [sp, #0x1E0]
  01864	e2833e15	 add         r3, r3, #0x15, 28
  01868	e5933000	 ldr         r3, [r3]
  0186c	e2832020	 add         r2, r3, #0x20
  01870	e59d3130	 ldr         r3, [sp, #0x130]
  01874	e5823000	 str         r3, [r2]

; 663  :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Sizeof(CSP_MUSB_GEN_REGS)=0x%x, mapped (0x%x)\r\n"), sizeof(CSP_MUSB_GEN_REGS), pGen)); 

  01878	e59f3678	 ldr         r3, [pc, #0x678]
  0187c	e5933440	 ldr         r3, [r3, #0x440]
  01880	e3130a02	 tst         r3, #2, 20
  01884	0a000006	 beq         |$LN18@MapHardwar|
  01888	e59d2130	 ldr         r2, [sp, #0x130]
  0188c	e3a01c01	 mov         r1, #1, 24
  01890	e59f06ac	 ldr         r0, [pc, #0x6AC]
  01894	eb000000	 bl          NKDbgPrintfW
  01898	e3a03001	 mov         r3, #1
  0189c	e58d3160	 str         r3, [sp, #0x160]
  018a0	ea000001	 b           |$LN19@MapHardwar|
  018a4		 |$LN18@MapHardwar|
  018a4	e3a03000	 mov         r3, #0
  018a8	e58d3160	 str         r3, [sp, #0x160]
  018ac		 |$LN19@MapHardwar|

; 664  :  
; 665  :     pa.QuadPart = OMAP35XX_MUSB_BASE_REG_PA + OMAP35XX_MUSB_CSR_OFFSET;

  018ac	e59f368c	 ldr         r3, [pc, #0x68C]
  018b0	e58d3124	 str         r3, [sp, #0x124]
  018b4	e3a03000	 mov         r3, #0
  018b8	e58d3128	 str         r3, [sp, #0x128]

; 666  :     pCsr = (PCSP_MUSB_CSR_REGS)MmMapIoSpace(pa, sizeof(CSP_MUSB_CSR_REGS), FALSE);

  018bc	e3a03000	 mov         r3, #0
  018c0	e3a02c01	 mov         r2, #1, 24
  018c4	e59d0124	 ldr         r0, [sp, #0x124]
  018c8	e59d1128	 ldr         r1, [sp, #0x128]
  018cc	eb000000	 bl          MmMapIoSpace
  018d0	e58d0164	 str         r0, [sp, #0x164]
  018d4	e59d3164	 ldr         r3, [sp, #0x164]
  018d8	e58d300c	 str         r3, [sp, #0xC]

; 667  : 
; 668  :     if (pCsr == NULL)

  018dc	e59d300c	 ldr         r3, [sp, #0xC]
  018e0	e3530000	 cmp         r3, #0
  018e4	1a00000f	 bne         |$LN9@MapHardwar|

; 669  :     {
; 670  :         DEBUGMSG(ZONE_OTG_ERROR, (TEXT("Fail to MmMap USB CSR Registers\r\n")));

  018e8	e59f3608	 ldr         r3, [pc, #0x608]
  018ec	e5933440	 ldr         r3, [r3, #0x440]
  018f0	e3130902	 tst         r3, #2, 18
  018f4	0a000004	 beq         |$LN20@MapHardwar|
  018f8	e59f063c	 ldr         r0, [pc, #0x63C]
  018fc	eb000000	 bl          NKDbgPrintfW
  01900	e3a03001	 mov         r3, #1
  01904	e58d3168	 str         r3, [sp, #0x168]
  01908	ea000001	 b           |$LN21@MapHardwar|
  0190c		 |$LN20@MapHardwar|
  0190c	e3a03000	 mov         r3, #0
  01910	e58d3168	 str         r3, [sp, #0x168]
  01914		 |$LN21@MapHardwar|

; 671  :         return FALSE;

  01914	e59d0140	 ldr         r0, [sp, #0x140]
  01918	eb000000	 bl          __security_check_cookie
  0191c	e3a03000	 mov         r3, #0
  01920	e58d3144	 str         r3, [sp, #0x144]
  01924	ea00016e	 b           |$LN12@MapHardwar|
  01928		 |$LN9@MapHardwar|

; 672  :     }   
; 673  :     m_pOTG->pUsbCsrRegs = pCsr;

  01928	e59d31e0	 ldr         r3, [sp, #0x1E0]
  0192c	e2833e15	 add         r3, r3, #0x15, 28
  01930	e5933000	 ldr         r3, [r3]
  01934	e283201c	 add         r2, r3, #0x1C
  01938	e59d300c	 ldr         r3, [sp, #0xC]
  0193c	e5823000	 str         r3, [r2]

; 674  :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Sizeof(CSP_MUSB_CSR_REGS)=0x%x, mapped (0x%x)\r\n"), sizeof(CSP_MUSB_CSR_REGS), pCsr)); 

  01940	e59f35b0	 ldr         r3, [pc, #0x5B0]
  01944	e5933440	 ldr         r3, [r3, #0x440]
  01948	e3130a02	 tst         r3, #2, 20
  0194c	0a000006	 beq         |$LN22@MapHardwar|
  01950	e59d200c	 ldr         r2, [sp, #0xC]
  01954	e3a01c01	 mov         r1, #1, 24
  01958	e59f05d8	 ldr         r0, [pc, #0x5D8]
  0195c	eb000000	 bl          NKDbgPrintfW
  01960	e3a03001	 mov         r3, #1
  01964	e58d316c	 str         r3, [sp, #0x16C]
  01968	ea000001	 b           |$LN23@MapHardwar|
  0196c		 |$LN22@MapHardwar|
  0196c	e3a03000	 mov         r3, #0
  01970	e58d316c	 str         r3, [sp, #0x16C]
  01974		 |$LN23@MapHardwar|

; 675  : 
; 676  : 
; 677  :     pa.QuadPart = OMAP35XX_MUSB_BASE_REG_PA + OMAP35XX_MUSB_OTG_OFFSET;    

  01974	e59f35b8	 ldr         r3, [pc, #0x5B8]
  01978	e58d3124	 str         r3, [sp, #0x124]
  0197c	e3a03000	 mov         r3, #0
  01980	e58d3128	 str         r3, [sp, #0x128]

; 678  :     pOtg = (PCSP_MUSB_OTG_REGS)MmMapIoSpace(pa, sizeof(CSP_MUSB_OTG_REGS), FALSE);

  01984	e3a03000	 mov         r3, #0
  01988	e3a02018	 mov         r2, #0x18
  0198c	e59d0124	 ldr         r0, [sp, #0x124]
  01990	e59d1128	 ldr         r1, [sp, #0x128]
  01994	eb000000	 bl          MmMapIoSpace
  01998	e58d0170	 str         r0, [sp, #0x170]
  0199c	e59d3170	 ldr         r3, [sp, #0x170]
  019a0	e58d3134	 str         r3, [sp, #0x134]

; 679  :     if (pOtg == NULL)

  019a4	e59d3134	 ldr         r3, [sp, #0x134]
  019a8	e3530000	 cmp         r3, #0
  019ac	1a00000f	 bne         |$LN8@MapHardwar|

; 680  :     {
; 681  :         DEBUGMSG(ZONE_OTG_ERROR, (TEXT("Fail to MmMap USB OTG Registers\r\n")));

  019b0	e59f3540	 ldr         r3, [pc, #0x540]
  019b4	e5933440	 ldr         r3, [r3, #0x440]
  019b8	e3130902	 tst         r3, #2, 18
  019bc	0a000004	 beq         |$LN24@MapHardwar|
  019c0	e59f0560	 ldr         r0, [pc, #0x560]
  019c4	eb000000	 bl          NKDbgPrintfW
  019c8	e3a03001	 mov         r3, #1
  019cc	e58d3174	 str         r3, [sp, #0x174]
  019d0	ea000001	 b           |$LN25@MapHardwar|
  019d4		 |$LN24@MapHardwar|
  019d4	e3a03000	 mov         r3, #0
  019d8	e58d3174	 str         r3, [sp, #0x174]
  019dc		 |$LN25@MapHardwar|

; 682  :         return FALSE;

  019dc	e59d0140	 ldr         r0, [sp, #0x140]
  019e0	eb000000	 bl          __security_check_cookie
  019e4	e3a03000	 mov         r3, #0
  019e8	e58d3144	 str         r3, [sp, #0x144]
  019ec	ea00013c	 b           |$LN12@MapHardwar|
  019f0		 |$LN8@MapHardwar|

; 683  :     }   
; 684  :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Sizeof(CSP_MUSB_OTG_REGS)=0x%x, mapped (0x%x)\r\n"), sizeof(CSP_MUSB_OTG_REGS), pOtg)); 

  019f0	e59f3500	 ldr         r3, [pc, #0x500]
  019f4	e5933440	 ldr         r3, [r3, #0x440]
  019f8	e3130a02	 tst         r3, #2, 20
  019fc	0a000006	 beq         |$LN26@MapHardwar|
  01a00	e59d2134	 ldr         r2, [sp, #0x134]
  01a04	e3a01018	 mov         r1, #0x18
  01a08	e59f0520	 ldr         r0, [pc, #0x520]
  01a0c	eb000000	 bl          NKDbgPrintfW
  01a10	e3a03001	 mov         r3, #1
  01a14	e58d3178	 str         r3, [sp, #0x178]
  01a18	ea000001	 b           |$LN27@MapHardwar|
  01a1c		 |$LN26@MapHardwar|
  01a1c	e3a03000	 mov         r3, #0
  01a20	e58d3178	 str         r3, [sp, #0x178]
  01a24		 |$LN27@MapHardwar|

; 685  :     m_pOTG->pUsbOtgRegs = pOtg;

  01a24	e59d31e0	 ldr         r3, [sp, #0x1E0]
  01a28	e2833e15	 add         r3, r3, #0x15, 28
  01a2c	e5933000	 ldr         r3, [r3]
  01a30	e2832018	 add         r2, r3, #0x18
  01a34	e59d3134	 ldr         r3, [sp, #0x134]
  01a38	e5823000	 str         r3, [r2]

; 686  : 
; 687  :     pa.QuadPart = OMAP35XX_MUSB_BASE_REG_PA + OMAP35XX_MUSB_DMA_OFFSET;        

  01a3c	e59f34e8	 ldr         r3, [pc, #0x4E8]
  01a40	e58d3124	 str         r3, [sp, #0x124]
  01a44	e3a03000	 mov         r3, #0
  01a48	e58d3128	 str         r3, [sp, #0x128]

; 688  :     pDma = (PCSP_MUSB_DMA_REGS)MmMapIoSpace(pa, sizeof(CSP_MUSB_DMA_REGS), FALSE);

  01a4c	e3a03000	 mov         r3, #0
  01a50	e3a02084	 mov         r2, #0x84
  01a54	e59d0124	 ldr         r0, [sp, #0x124]
  01a58	e59d1128	 ldr         r1, [sp, #0x128]
  01a5c	eb000000	 bl          MmMapIoSpace
  01a60	e58d017c	 str         r0, [sp, #0x17C]
  01a64	e59d317c	 ldr         r3, [sp, #0x17C]
  01a68	e58d3010	 str         r3, [sp, #0x10]

; 689  :     if (pDma == NULL)

  01a6c	e59d3010	 ldr         r3, [sp, #0x10]
  01a70	e3530000	 cmp         r3, #0
  01a74	1a00000f	 bne         |$LN7@MapHardwar|

; 690  :     {
; 691  :         DEBUGMSG(ZONE_OTG_ERROR, (TEXT("Fail to MmMap USB OTG Registers\r\n")));

  01a78	e59f3478	 ldr         r3, [pc, #0x478]
  01a7c	e5933440	 ldr         r3, [r3, #0x440]
  01a80	e3130902	 tst         r3, #2, 18
  01a84	0a000004	 beq         |$LN28@MapHardwar|
  01a88	e59f0498	 ldr         r0, [pc, #0x498]
  01a8c	eb000000	 bl          NKDbgPrintfW
  01a90	e3a03001	 mov         r3, #1
  01a94	e58d3180	 str         r3, [sp, #0x180]
  01a98	ea000001	 b           |$LN29@MapHardwar|
  01a9c		 |$LN28@MapHardwar|
  01a9c	e3a03000	 mov         r3, #0
  01aa0	e58d3180	 str         r3, [sp, #0x180]
  01aa4		 |$LN29@MapHardwar|

; 692  :         return FALSE;

  01aa4	e59d0140	 ldr         r0, [sp, #0x140]
  01aa8	eb000000	 bl          __security_check_cookie
  01aac	e3a03000	 mov         r3, #0
  01ab0	e58d3144	 str         r3, [sp, #0x144]
  01ab4	ea00010a	 b           |$LN12@MapHardwar|
  01ab8		 |$LN7@MapHardwar|

; 693  :     }   
; 694  :     m_pOTG->pUsbDmaRegs = pDma;

  01ab8	e59d31e0	 ldr         r3, [sp, #0x1E0]
  01abc	e2833e15	 add         r3, r3, #0x15, 28
  01ac0	e5933000	 ldr         r3, [r3]
  01ac4	e2832024	 add         r2, r3, #0x24
  01ac8	e59d3010	 ldr         r3, [sp, #0x10]
  01acc	e5823000	 str         r3, [r2]

; 695  : 
; 696  :     pa.QuadPart = OMAP_SYSC_GENERAL_REGS_PA; //Verify

  01ad0	e59f344c	 ldr         r3, [pc, #0x44C]
  01ad4	e58d3124	 str         r3, [sp, #0x124]
  01ad8	e3a03000	 mov         r3, #0
  01adc	e58d3128	 str         r3, [sp, #0x128]

; 697  :     pSysControlRegs = (volatile DWORD *)MmMapIoSpace(pa, 1024, FALSE);

  01ae0	e3a03000	 mov         r3, #0
  01ae4	e3a02b01	 mov         r2, #1, 22
  01ae8	e59d0124	 ldr         r0, [sp, #0x124]
  01aec	e59d1128	 ldr         r1, [sp, #0x128]
  01af0	eb000000	 bl          MmMapIoSpace
  01af4	e58d0184	 str         r0, [sp, #0x184]
  01af8	e59d3184	 ldr         r3, [sp, #0x184]
  01afc	e58d3014	 str         r3, [sp, #0x14]

; 698  : 
; 699  :     m_pOTG->pSysControlRegs = pSysControlRegs;

  01b00	e59d31e0	 ldr         r3, [sp, #0x1E0]
  01b04	e2833e15	 add         r3, r3, #0x15, 28
  01b08	e5933000	 ldr         r3, [r3]
  01b0c	e283202c	 add         r2, r3, #0x2C
  01b10	e59d3014	 ldr         r3, [sp, #0x14]
  01b14	e5823000	 str         r3, [r2]

; 700  :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Sizeof(CSP_MUSB_DMA_REGS)=0x%x, mapped (0x%x)\r\n"), sizeof(CSP_MUSB_DMA_REGS), pDma)); 

  01b18	e59f33d8	 ldr         r3, [pc, #0x3D8]
  01b1c	e5933440	 ldr         r3, [r3, #0x440]
  01b20	e3130a02	 tst         r3, #2, 20
  01b24	0a000006	 beq         |$LN30@MapHardwar|
  01b28	e59d2010	 ldr         r2, [sp, #0x10]
  01b2c	e3a01084	 mov         r1, #0x84
  01b30	e59f03e8	 ldr         r0, [pc, #0x3E8]
  01b34	eb000000	 bl          NKDbgPrintfW
  01b38	e3a03001	 mov         r3, #1
  01b3c	e58d3188	 str         r3, [sp, #0x188]
  01b40	ea000001	 b           |$LN31@MapHardwar|
  01b44		 |$LN30@MapHardwar|
  01b44	e3a03000	 mov         r3, #0
  01b48	e58d3188	 str         r3, [sp, #0x188]
  01b4c		 |$LN31@MapHardwar|

; 701  : 
; 702  :     pa.QuadPart = OMAP_SYSC_PADCONFS_REGS_PA;//Verify

  01b4c	e59f33c8	 ldr         r3, [pc, #0x3C8]
  01b50	e58d3124	 str         r3, [sp, #0x124]
  01b54	e3a03000	 mov         r3, #0
  01b58	e58d3128	 str         r3, [sp, #0x128]

; 703  :     m_pOTG->pPadControlRegs = (volatile UINT8 *)MmMapIoSpace(pa, 2048, FALSE);

  01b5c	e3a03000	 mov         r3, #0
  01b60	e3a02b02	 mov         r2, #2, 22
  01b64	e59d0124	 ldr         r0, [sp, #0x124]
  01b68	e59d1128	 ldr         r1, [sp, #0x128]
  01b6c	eb000000	 bl          MmMapIoSpace
  01b70	e58d018c	 str         r0, [sp, #0x18C]
  01b74	e59d31e0	 ldr         r3, [sp, #0x1E0]
  01b78	e2833e15	 add         r3, r3, #0x15, 28
  01b7c	e5933000	 ldr         r3, [r3]
  01b80	e2832028	 add         r2, r3, #0x28
  01b84	e59d318c	 ldr         r3, [sp, #0x18C]
  01b88	e5823000	 str         r3, [r2]

; 704  : 
; 705  :     if (!KernelIoControl(IOCTL_HAL_REQUEST_SYSINTR, 
; 706  :                 &dii.dwIrq, 
; 707  :                 sizeof(dii.dwIrq), 
; 708  :                 &dii.dwSysintr, 
; 709  :                 sizeof(dii.dwSysintr), 
; 710  :                 NULL )) 

  01b8c	e3a03000	 mov         r3, #0
  01b90	e58d3004	 str         r3, [sp, #4]
  01b94	e3a03004	 mov         r3, #4
  01b98	e58d3000	 str         r3, [sp]
  01b9c	e28d3020	 add         r3, sp, #0x20
  01ba0	e3a02004	 mov         r2, #4
  01ba4	e28d101c	 add         r1, sp, #0x1C
  01ba8	e59f0368	 ldr         r0, [pc, #0x368]
  01bac	eb000000	 bl          KernelIoControl
  01bb0	e58d0190	 str         r0, [sp, #0x190]
  01bb4	e59d3190	 ldr         r3, [sp, #0x190]
  01bb8	e3530000	 cmp         r3, #0
  01bbc	1a00000f	 bne         |$LN6@MapHardwar|

; 711  :     {
; 712  :         DEBUGMSG(ZONE_OTG_ERROR, (L"ERROR: OTG_Init: "  L"Failed map OTG controller interrupt\r\n" ));

  01bc0	e59f3330	 ldr         r3, [pc, #0x330]
  01bc4	e5933440	 ldr         r3, [r3, #0x440]
  01bc8	e3130902	 tst         r3, #2, 18
  01bcc	0a000004	 beq         |$LN32@MapHardwar|
  01bd0	e59f033c	 ldr         r0, [pc, #0x33C]
  01bd4	eb000000	 bl          NKDbgPrintfW
  01bd8	e3a03001	 mov         r3, #1
  01bdc	e58d3194	 str         r3, [sp, #0x194]
  01be0	ea000001	 b           |$LN33@MapHardwar|
  01be4		 |$LN32@MapHardwar|
  01be4	e3a03000	 mov         r3, #0
  01be8	e58d3194	 str         r3, [sp, #0x194]
  01bec		 |$LN33@MapHardwar|

; 713  :         return FALSE;

  01bec	e59d0140	 ldr         r0, [sp, #0x140]
  01bf0	eb000000	 bl          __security_check_cookie
  01bf4	e3a03000	 mov         r3, #0
  01bf8	e58d3144	 str         r3, [sp, #0x144]
  01bfc	ea0000b8	 b           |$LN12@MapHardwar|
  01c00		 |$LN6@MapHardwar|

; 714  :     }
; 715  : 
; 716  :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("IRQ=0x%x, SYSINTR=0x%x\r\n"), dii.dwIrq, dii.dwSysintr));

  01c00	e59f32f0	 ldr         r3, [pc, #0x2F0]
  01c04	e5933440	 ldr         r3, [r3, #0x440]
  01c08	e3130a02	 tst         r3, #2, 20
  01c0c	0a000006	 beq         |$LN34@MapHardwar|
  01c10	e59d2020	 ldr         r2, [sp, #0x20]
  01c14	e59d101c	 ldr         r1, [sp, #0x1C]
  01c18	e59f02f0	 ldr         r0, [pc, #0x2F0]
  01c1c	eb000000	 bl          NKDbgPrintfW
  01c20	e3a03001	 mov         r3, #1
  01c24	e58d3198	 str         r3, [sp, #0x198]
  01c28	ea000001	 b           |$LN35@MapHardwar|
  01c2c		 |$LN34@MapHardwar|
  01c2c	e3a03000	 mov         r3, #0
  01c30	e58d3198	 str         r3, [sp, #0x198]
  01c34		 |$LN35@MapHardwar|

; 717  :     m_dwSysIntr = dii.dwSysintr;

  01c34	e59d31e0	 ldr         r3, [sp, #0x1E0]
  01c38	e2832f51	 add         r2, r3, #0x51, 30
  01c3c	e59d3020	 ldr         r3, [sp, #0x20]
  01c40	e5823000	 str         r3, [r2]

; 718  :     m_dwIrq = dii.dwIrq;

  01c44	e59d31e0	 ldr         r3, [sp, #0x1E0]
  01c48	e2832f52	 add         r2, r3, #0x52, 30
  01c4c	e59d301c	 ldr         r3, [sp, #0x1C]
  01c50	e5823000	 str         r3, [r2]

; 719  :     
; 720  :     // Spawn a thread to wait for DMA event
; 721  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("RegOpenKeyEx(%s) \r\n"), m_ActiveKeyPath));

  01c54	e59f329c	 ldr         r3, [pc, #0x29C]
  01c58	e5933440	 ldr         r3, [r3, #0x440]
  01c5c	e3130a02	 tst         r3, #2, 20
  01c60	0a000007	 beq         |$LN36@MapHardwar|
  01c64	e59d31e0	 ldr         r3, [sp, #0x1E0]
  01c68	e2833f4f	 add         r3, r3, #0x4F, 30
  01c6c	e5931000	 ldr         r1, [r3]
  01c70	e59f0294	 ldr         r0, [pc, #0x294]
  01c74	eb000000	 bl          NKDbgPrintfW
  01c78	e3a03001	 mov         r3, #1
  01c7c	e58d319c	 str         r3, [sp, #0x19C]
  01c80	ea000001	 b           |$LN37@MapHardwar|
  01c84		 |$LN36@MapHardwar|
  01c84	e3a03000	 mov         r3, #0
  01c88	e58d319c	 str         r3, [sp, #0x19C]
  01c8c		 |$LN37@MapHardwar|

; 722  : 
; 723  :     dwDMAIrq = m_OTGRegCfg.DMAIrq;

  01c8c	e59d31e0	 ldr         r3, [sp, #0x1E0]
  01c90	e2833f43	 add         r3, r3, #0x43, 30
  01c94	e5933000	 ldr         r3, [r3]
  01c98	e58d3008	 str         r3, [sp, #8]

; 724  :     
; 725  :     m_pDMA = new OMAPMHSUSBDMA(this, dwDMAIrq);

  01c9c	e3a00040	 mov         r0, #0x40
  01ca0	eb000000	 bl          |??2@YAPAXI@Z|
  01ca4	e58d01a0	 str         r0, [sp, #0x1A0]
  01ca8	e59d31a0	 ldr         r3, [sp, #0x1A0]
  01cac	e58d3138	 str         r3, [sp, #0x138]
  01cb0	e59d3138	 ldr         r3, [sp, #0x138]
  01cb4	e3530000	 cmp         r3, #0
  01cb8	0a000007	 beq         |$LN38@MapHardwar|
  01cbc	e59d2008	 ldr         r2, [sp, #8]
  01cc0	e59d11e0	 ldr         r1, [sp, #0x1E0]
  01cc4	e59d0138	 ldr         r0, [sp, #0x138]
  01cc8	eb000000	 bl          |??0OMAPMHSUSBDMA@@QAA@PAVOMAPMHSUSBOTG@@K@Z|
  01ccc	e58d01a4	 str         r0, [sp, #0x1A4]
  01cd0	e59d31a4	 ldr         r3, [sp, #0x1A4]
  01cd4	e58d31a8	 str         r3, [sp, #0x1A8]
  01cd8	ea000001	 b           |$LN39@MapHardwar|
  01cdc		 |$LN38@MapHardwar|
  01cdc	e3a03000	 mov         r3, #0
  01ce0	e58d31a8	 str         r3, [sp, #0x1A8]
  01ce4		 |$LN39@MapHardwar|
  01ce4	e59d31e0	 ldr         r3, [sp, #0x1E0]
  01ce8	e2832f55	 add         r2, r3, #0x55, 30
  01cec	e59d31a8	 ldr         r3, [sp, #0x1A8]
  01cf0	e5823000	 str         r3, [r2]

; 726  :     if (m_pDMA == NULL)

  01cf4	e59d31e0	 ldr         r3, [sp, #0x1E0]
  01cf8	e2833f55	 add         r3, r3, #0x55, 30
  01cfc	e5933000	 ldr         r3, [r3]
  01d00	e3530000	 cmp         r3, #0
  01d04	1a00000a	 bne         |$LN5@MapHardwar|

; 727  :     {
; 728  :         DEBUGMSG(ZONE_OTG_ERROR, (TEXT("Fail to set up DMA and it would be disable\r\n")));            

  01d08	e59f31e8	 ldr         r3, [pc, #0x1E8]
  01d0c	e5933440	 ldr         r3, [r3, #0x440]
  01d10	e3130902	 tst         r3, #2, 18
  01d14	0a000004	 beq         |$LN40@MapHardwar|
  01d18	e59f01e8	 ldr         r0, [pc, #0x1E8]
  01d1c	eb000000	 bl          NKDbgPrintfW
  01d20	e3a03001	 mov         r3, #1
  01d24	e58d31ac	 str         r3, [sp, #0x1AC]
  01d28	ea000001	 b           |$LN41@MapHardwar|
  01d2c		 |$LN40@MapHardwar|
  01d2c	e3a03000	 mov         r3, #0
  01d30	e58d31ac	 str         r3, [sp, #0x1AC]
  01d34		 |$LN41@MapHardwar|
  01d34		 |$LN5@MapHardwar|

; 729  :     }    
; 730  : 
; 731  :     m_pIdGnd = new OMAPMHSUSBIdGnd(this);

  01d34	e3a00038	 mov         r0, #0x38
  01d38	eb000000	 bl          |??2@YAPAXI@Z|
  01d3c	e58d01b0	 str         r0, [sp, #0x1B0]
  01d40	e59d31b0	 ldr         r3, [sp, #0x1B0]
  01d44	e58d313c	 str         r3, [sp, #0x13C]
  01d48	e59d313c	 ldr         r3, [sp, #0x13C]
  01d4c	e3530000	 cmp         r3, #0
  01d50	0a000006	 beq         |$LN42@MapHardwar|
  01d54	e59d11e0	 ldr         r1, [sp, #0x1E0]
  01d58	e59d013c	 ldr         r0, [sp, #0x13C]
  01d5c	eb000000	 bl          |??0OMAPMHSUSBIdGnd@@QAA@PAVOMAPMHSUSBOTG@@@Z|
  01d60	e58d01b4	 str         r0, [sp, #0x1B4]
  01d64	e59d31b4	 ldr         r3, [sp, #0x1B4]
  01d68	e58d31b8	 str         r3, [sp, #0x1B8]
  01d6c	ea000001	 b           |$LN43@MapHardwar|
  01d70		 |$LN42@MapHardwar|
  01d70	e3a03000	 mov         r3, #0
  01d74	e58d31b8	 str         r3, [sp, #0x1B8]
  01d78		 |$LN43@MapHardwar|
  01d78	e59d31e0	 ldr         r3, [sp, #0x1E0]
  01d7c	e2832f56	 add         r2, r3, #0x56, 30
  01d80	e59d31b8	 ldr         r3, [sp, #0x1B8]
  01d84	e5823000	 str         r3, [r2]

; 732  :     if (m_pIdGnd == NULL)

  01d88	e59d31e0	 ldr         r3, [sp, #0x1E0]
  01d8c	e2833f56	 add         r3, r3, #0x56, 30
  01d90	e5933000	 ldr         r3, [r3]
  01d94	e3530000	 cmp         r3, #0
  01d98	1a00000a	 bne         |$LN4@MapHardwar|

; 733  :         DEBUGMSG(ZONE_OTG_ERROR, (TEXT("OMAPMHSUSBIdGnd failed to create\r\n")));

  01d9c	e59f3154	 ldr         r3, [pc, #0x154]
  01da0	e5933440	 ldr         r3, [r3, #0x440]
  01da4	e3130902	 tst         r3, #2, 18
  01da8	0a000004	 beq         |$LN44@MapHardwar|
  01dac	e59f0150	 ldr         r0, [pc, #0x150]
  01db0	eb000000	 bl          NKDbgPrintfW
  01db4	e3a03001	 mov         r3, #1
  01db8	e58d31bc	 str         r3, [sp, #0x1BC]
  01dbc	ea000001	 b           |$LN45@MapHardwar|
  01dc0		 |$LN44@MapHardwar|
  01dc0	e3a03000	 mov         r3, #0
  01dc4	e58d31bc	 str         r3, [sp, #0x1BC]
  01dc8		 |$LN45@MapHardwar|
  01dc8		 |$LN4@MapHardwar|

; 734  : 
; 735  :     ptcChargerEvent = m_OTGRegCfg.szChargerNameEvt;

  01dc8	e59d31e0	 ldr         r3, [sp, #0x1E0]
  01dcc	e2833f42	 add         r3, r3, #0x42, 30
  01dd0	e5933000	 ldr         r3, [r3]
  01dd4	e58d312c	 str         r3, [sp, #0x12C]

; 736  : 
; 737  :     DEBUGMSG(ZONE_OTG_INFO, (TEXT("OTG Charger Event(%s)\r\n"), ptcChargerEvent));

  01dd8	e59f3118	 ldr         r3, [pc, #0x118]
  01ddc	e5933440	 ldr         r3, [r3, #0x440]
  01de0	e3130a01	 tst         r3, #1, 20
  01de4	0a000005	 beq         |$LN46@MapHardwar|
  01de8	e59d112c	 ldr         r1, [sp, #0x12C]
  01dec	e59f010c	 ldr         r0, [pc, #0x10C]
  01df0	eb000000	 bl          NKDbgPrintfW
  01df4	e3a03001	 mov         r3, #1
  01df8	e58d31c0	 str         r3, [sp, #0x1C0]
  01dfc	ea000001	 b           |$LN47@MapHardwar|
  01e00		 |$LN46@MapHardwar|
  01e00	e3a03000	 mov         r3, #0
  01e04	e58d31c0	 str         r3, [sp, #0x1C0]
  01e08		 |$LN47@MapHardwar|

; 738  :     m_BatteryChargeEvent = CreateEvent(NULL, TRUE, FALSE, ptcChargerEvent);

  01e08	e59d312c	 ldr         r3, [sp, #0x12C]
  01e0c	e3a02000	 mov         r2, #0
  01e10	e3a01001	 mov         r1, #1
  01e14	e3a00000	 mov         r0, #0
  01e18	eb000000	 bl          CreateEventW
  01e1c	e58d01c4	 str         r0, [sp, #0x1C4]
  01e20	e59d31e0	 ldr         r3, [sp, #0x1E0]
  01e24	e2832f5d	 add         r2, r3, #0x5D, 30
  01e28	e59d31c4	 ldr         r3, [sp, #0x1C4]
  01e2c	e5823000	 str         r3, [r2]

; 739  :     if ((GetLastError() == ERROR_SUCCESS) || (GetLastError() == ERROR_ALREADY_EXISTS))

  01e30	eb000000	 bl          GetLastError
  01e34	e58d01c8	 str         r0, [sp, #0x1C8]
  01e38	e59d31c8	 ldr         r3, [sp, #0x1C8]
  01e3c	e3530000	 cmp         r3, #0
  01e40	0a000004	 beq         |$LN2@MapHardwar|
  01e44	eb000000	 bl          GetLastError
  01e48	e58d01cc	 str         r0, [sp, #0x1CC]
  01e4c	e59d31cc	 ldr         r3, [sp, #0x1CC]
  01e50	e35300b7	 cmp         r3, #0xB7
  01e54	1a00000f	 bne         |$LN3@MapHardwar|
  01e58		 |$LN2@MapHardwar|

; 740  :     {
; 741  :         m_BatteryChargeStatus = 0xff;

  01e58	e59d31e0	 ldr         r3, [sp, #0x1E0]
  01e5c	e2832f5e	 add         r2, r3, #0x5E, 30
  01e60	e3a030ff	 mov         r3, #0xFF
  01e64	e5823000	 str         r3, [r2]

; 742  :         DEBUGMSG(ZONE_OTG_INFO, (TEXT("Battery Charger Event Create\r\n")));

  01e68	e59f3088	 ldr         r3, [pc, #0x88]
  01e6c	e5933440	 ldr         r3, [r3, #0x440]
  01e70	e3130a01	 tst         r3, #1, 20
  01e74	0a000004	 beq         |$LN48@MapHardwar|
  01e78	e59f007c	 ldr         r0, [pc, #0x7C]
  01e7c	eb000000	 bl          NKDbgPrintfW
  01e80	e3a03001	 mov         r3, #1
  01e84	e58d31d0	 str         r3, [sp, #0x1D0]
  01e88	ea000001	 b           |$LN49@MapHardwar|
  01e8c		 |$LN48@MapHardwar|
  01e8c	e3a03000	 mov         r3, #0
  01e90	e58d31d0	 str         r3, [sp, #0x1D0]
  01e94		 |$LN49@MapHardwar|

; 743  :     }
; 744  :     else

  01e94	ea00000e	 b           |$LN1@MapHardwar|
  01e98		 |$LN3@MapHardwar|

; 745  :     {
; 746  :         DEBUGMSG(ZONE_OTG_ERROR, (TEXT("Battery Charger Event failure\r\n")));

  01e98	e59f3058	 ldr         r3, [pc, #0x58]
  01e9c	e5933440	 ldr         r3, [r3, #0x440]
  01ea0	e3130902	 tst         r3, #2, 18
  01ea4	0a000004	 beq         |$LN50@MapHardwar|
  01ea8	e59f0044	 ldr         r0, [pc, #0x44]
  01eac	eb000000	 bl          NKDbgPrintfW
  01eb0	e3a03001	 mov         r3, #1
  01eb4	e58d31d4	 str         r3, [sp, #0x1D4]
  01eb8	ea000001	 b           |$LN51@MapHardwar|
  01ebc		 |$LN50@MapHardwar|
  01ebc	e3a03000	 mov         r3, #0
  01ec0	e58d31d4	 str         r3, [sp, #0x1D4]
  01ec4		 |$LN51@MapHardwar|

; 747  :         m_BatteryChargeEvent = NULL;

  01ec4	e59d31e0	 ldr         r3, [sp, #0x1E0]
  01ec8	e2832f5d	 add         r2, r3, #0x5D, 30
  01ecc	e3a03000	 mov         r3, #0
  01ed0	e5823000	 str         r3, [r2]
  01ed4		 |$LN1@MapHardwar|

; 748  :     }
; 749  :     return TRUE;

  01ed4	e59d0140	 ldr         r0, [sp, #0x140]
  01ed8	eb000000	 bl          __security_check_cookie
  01edc	e3a03001	 mov         r3, #1
  01ee0	e58d3144	 str         r3, [sp, #0x144]
  01ee4		 |$LN12@MapHardwar|

; 750  : }

  01ee4	e59d0144	 ldr         r0, [sp, #0x144]
  01ee8	e28ddf76	 add         sp, sp, #0x76, 30
  01eec	e89d6000	 ldmia       sp, {sp, lr}
  01ef0	e12fff1e	 bx          lr
  01ef4		 |$LN55@MapHardwar|
  01ef4		 |$LN56@MapHardwar|
  01ef4	00000000	 DCD         |??_C@_1EA@NBOCHMDO@?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAr?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  01ef8		 |$LN57@MapHardwar|
  01ef8	00000000	 DCD         |dpCurSettings|
  01efc		 |$LN58@MapHardwar|
  01efc	00000000	 DCD         |??_C@_1DO@HANIHOAM@?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAr?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  01f00		 |$LN59@MapHardwar|
  01f00	00000000	 DCD         |??_C@_1DA@CCNINHJ@?$AAO?$AAT?$AAG?$AA?5?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAr?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01f04		 |$LN60@MapHardwar|
  01f04	00000000	 DCD         |??_C@_1EG@CPHNGBGN@?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAI?$AAd?$AAG?$AAn?$AAd?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe@|
  01f08		 |$LN61@MapHardwar|
  01f08	00000000	 DCD         |??_C@_1FK@HAEBBNED@?$AAF?$AAa?$AAi?$AAl?$AA?5?$AAt?$AAo?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAu?$AAp?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAi?$AAt?$AA?5?$AAw?$AAo?$AAu?$AAl?$AAd?$AA?5@|
  01f0c		 |$LN62@MapHardwar|
  01f0c	00000000	 DCD         |??_C@_1CI@DLJIKFAM@?$AAR?$AAe?$AAg?$AAO?$AAp?$AAe?$AAn?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  01f10		 |$LN63@MapHardwar|
  01f10	00000000	 DCD         |??_C@_1DC@PFMLCFFA@?$AAI?$AAR?$AAQ?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5?$AAS?$AAY?$AAS?$AAI?$AAN?$AAT?$AAR?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  01f14		 |$LN64@MapHardwar|
  01f14	00000000	 DCD         |??_C@_1GO@NOIONLLJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAT?$AAG?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAO?$AAT?$AAG?$AA?5@|
  01f18		 |$LN65@MapHardwar|
  01f18	01010098	 DCD         0x1010098
  01f1c		 |$LN66@MapHardwar|
  01f1c	48002030	 DCD         0x48002030
  01f20		 |$LN67@MapHardwar|
  01f20	00000000	 DCD         |??_C@_1GA@MDCLAJDE@?$AAS?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAC?$AAS?$AAP?$AA_?$AAM?$AAU?$AAS?$AAB?$AA_?$AAD?$AAM?$AAA?$AA_?$AAR?$AAE?$AAG?$AAS?$AA?$CJ?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5@|
  01f24		 |$LN68@MapHardwar|
  01f24	48002270	 DCD         0x48002270
  01f28		 |$LN69@MapHardwar|
  01f28	00000000	 DCD         |??_C@_1EE@EKDMMJHL@?$AAF?$AAa?$AAi?$AAl?$AA?5?$AAt?$AAo?$AA?5?$AAM?$AAm?$AAM?$AAa?$AAp?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAO?$AAT?$AAG?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?$AN@|
  01f2c		 |$LN70@MapHardwar|
  01f2c	480ab200	 DCD         0x480ab200
  01f30		 |$LN71@MapHardwar|
  01f30	00000000	 DCD         |??_C@_1GA@EEACPLPN@?$AAS?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAC?$AAS?$AAP?$AA_?$AAM?$AAU?$AAS?$AAB?$AA_?$AAO?$AAT?$AAG?$AA_?$AAR?$AAE?$AAG?$AAS?$AA?$CJ?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5@|
  01f34		 |$LN72@MapHardwar|
  01f34	480ab400	 DCD         0x480ab400
  01f38		 |$LN73@MapHardwar|
  01f38	00000000	 DCD         |??_C@_1GA@EPDHPLJM@?$AAS?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAC?$AAS?$AAP?$AA_?$AAM?$AAU?$AAS?$AAB?$AA_?$AAC?$AAS?$AAR?$AA_?$AAR?$AAE?$AAG?$AAS?$AA?$CJ?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5@|
  01f3c		 |$LN74@MapHardwar|
  01f3c	00000000	 DCD         |??_C@_1EE@HBLNJGIE@?$AAF?$AAa?$AAi?$AAl?$AA?5?$AAt?$AAo?$AA?5?$AAM?$AAm?$AAM?$AAa?$AAp?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAC?$AAS?$AAR?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?$AN@|
  01f40		 |$LN75@MapHardwar|
  01f40	480ab100	 DCD         0x480ab100
  01f44		 |$LN76@MapHardwar|
  01f44	00000000	 DCD         |??_C@_1GA@MAANKBNO@?$AAS?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAC?$AAS?$AAP?$AA_?$AAM?$AAU?$AAS?$AAB?$AA_?$AAG?$AAE?$AAN?$AA_?$AAR?$AAE?$AAG?$AAS?$AA?$CJ?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5@|
  01f48		 |$LN77@MapHardwar|
  01f48	00000000	 DCD         |??_C@_1EM@JAOOFKGI@?$AAF?$AAa?$AAi?$AAl?$AA?5?$AAt?$AAo?$AA?5?$AAM?$AAm?$AAM?$AAa?$AAp?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAG?$AAe?$AAn?$AAe?$AAr?$AAa?$AAl?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt@|
  01f4c		 |$LN78@MapHardwar|
  01f4c	00000000	 DCD         |??_C@_1BK@NDBPOLAE@?$AAI?$AAR?$AAQ?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  01f50		 |$LN79@MapHardwar|
  01f50	00000000	 DCD         |__security_cookie|
  01f54		 |$M43308|

			 ENDP  ; |?MapHardware@OMAPMHSUSBOTG@@AAAHXZ|, OMAPMHSUSBOTG::MapHardware

	IMPORT	|DDKReg_GetIsrInfo|
; File c:\wince600\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.pdata|, PDATA
|$T43341| DCD	|$LN7@GetIsrInfo|
	DCD	0x40001f04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetIsrInfo@CRegistryEdit@@QAAKPAU_DDKISRINFO_tag@@@Z| PROC ; CRegistryEdit::GetIsrInfo

; 102  :     {

  00000		 |$LN7@GetIsrInfo|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M43338|

; 103  :         if( pddi && m_hDevKey )

  00010	e59d3018	 ldr         r3, [sp, #0x18]
  00014	e3530000	 cmp         r3, #0
  00018	0a000011	 beq         |$LN2@GetIsrInfo|
  0001c	e59d3014	 ldr         r3, [sp, #0x14]
  00020	e5933000	 ldr         r3, [r3]
  00024	e3530000	 cmp         r3, #0
  00028	0a00000d	 beq         |$LN2@GetIsrInfo|

; 104  :         {
; 105  :             pddi->cbSize = sizeof( DDKISRINFO );

  0002c	e59d2018	 ldr         r2, [sp, #0x18]
  00030	e3a03f43	 mov         r3, #0x43, 30
  00034	e5823000	 str         r3, [r2]

; 106  :             DWORD status = DDKReg_GetIsrInfo( m_hDevKey, pddi );

  00038	e59d1018	 ldr         r1, [sp, #0x18]
  0003c	e59d3014	 ldr         r3, [sp, #0x14]
  00040	e5930000	 ldr         r0, [r3]
  00044	eb000000	 bl          DDKReg_GetIsrInfo
  00048	e58d0008	 str         r0, [sp, #8]
  0004c	e59d3008	 ldr         r3, [sp, #8]
  00050	e58d3000	 str         r3, [sp]

; 107  :             return status;

  00054	e59d3000	 ldr         r3, [sp]
  00058	e58d3004	 str         r3, [sp, #4]
  0005c	ea000002	 b           |$LN3@GetIsrInfo|

; 108  :         }
; 109  :         else

  00060	ea000001	 b           |$LN1@GetIsrInfo|
  00064		 |$LN2@GetIsrInfo|

; 110  :         {
; 111  :             return ERROR_INVALID_FUNCTION;

  00064	e3a03001	 mov         r3, #1
  00068	e58d3004	 str         r3, [sp, #4]
  0006c		 |$LN1@GetIsrInfo|
  0006c		 |$LN3@GetIsrInfo|

; 112  :         }
; 113  :     }

  0006c	e59d0004	 ldr         r0, [sp, #4]
  00070	e28dd00c	 add         sp, sp, #0xC
  00074	e89d6000	 ldmia       sp, {sp, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$M43339|

			 ENDP  ; |?GetIsrInfo@CRegistryEdit@@QAAKPAU_DDKISRINFO_tag@@@Z|, CRegistryEdit::GetIsrInfo

	EXPORT	|??_C@_1DG@GEBHLKBM@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@IFKDFDLP@?$AAU?$AAS?$AAB?$AA?5?$AAO?$AAT?$AAG?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?5?$AAr?$AAe?$AAs?$AAt?$AAo?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@HGLFCCFI@?$AAS?$AAe?$AAt?$AA?5?$AAL?$AAo?$AAw?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@DOAJMGPO@?$AAU?$AAL?$AAP?$AAI?$AAR?$AAa?$AAw?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@MBEEGFGF@?$AAU?$AAL?$AAP?$AAI?$AAI?$AAn?$AAt?$AAS?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@DMGLGNCN@?$AAU?$AAL?$AAP?$AAI?$AAI?$AAn?$AAt?$AAM?$AAa?$AAs?$AAk?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@LAHOLLAL@?$AAU?$AAL?$AAP?$AAI?$AAC?$AAa?$AAr?$AAK?$AAi?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@DAPPMFGG@?$AAU?$AAL?$AAP?$AAI?$AAV?$AAB?$AAu?$AAs?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@GCLIFPMK@?$AAD?$AAu?$AAm?$AAp?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAR?$AAe?$AAg?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@EBGAOIAL@?$AAV?$AAB?$AAu?$AAs?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@MPKOEAON@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@MNOFLILF@?$AAD?$AAe?$AAv?$AAC?$AAt?$AAl?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BC@ELNKCIFG@?$AAQ?$AAu?$AAe?$AAr?$AAy?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@LDEDCHMK@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAR?$AAE?$AAQ?$AAU?$AAE?$AAS?$AAT?$AA_?$AAS?$AAT?$AAO?$AAP?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@EBAKACPO@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAR?$AAE?$AAQ?$AAU?$AAE?$AAS?$AAT?$AA_?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@MHBFEEEL@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAR?$AAE?$AAQ?$AAU?$AAE?$AAS?$AAT?$AA_?$AAS?$AAE?$AAS?$AAS?$AAI?$AAO?$AAN?$AA_?$AAD?$AAI?$AAS@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@NGAIHPFD@?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AA?9?$AA?9?$AA?9?$AA?5?$AAs?$AAt?$AAi?$AAl?$AAl?$AA?5?$AAt?$AAr?$AAy?$AA?5?$AAt?$AAo?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@COMNPLIC@?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAl?$AAy?$AA?5?$AAe?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@GDLDECNO@?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@BBFDJKGD@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAB?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@BMIKOJJH@?$AAH?$AAo?$AAs?$AAt?$AA?5?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@DDMAHJCE@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?5?$AAB@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@GLEBLFPN@?$AAH?$AAo?$AAs?$AAt?$AA?5?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@KHGBBOJB@?$AAH?$AAN?$AAP?$AA?5?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@OOLFOJHM@?$AAH?$AAN?$AAP?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@HJIGOLJL@?$AAH?$AAN?$AAP?$AA?5?$AAS?$AAe?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@LGJGIAB@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAQ?$AAU?$AAE?$AAR?$AAY?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@MDKENBOH@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF?$AAu?$AA?5?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@OBPLBNBH@?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAi?$AAo?$AAc?$AAt?$AAl?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|ResetEvent|
	EXPORT	|??_C@_1DE@FHIDPJDH@?$AAO?$AAT?$AAG?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?5?$AAD?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@MHJHMPML@?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAi?$AAo?$AAc?$AAt?$AAl?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|?IOControl@USBOTG@@UAAHKPAEK0KPAK@Z|	; USBOTG::IOControl
	IMPORT	|SetInterruptEvent|
	IMPORT	|__C_specific_handler|

  00080			 AREA	 |.pdata|, PDATA
|$T43467| DCD	|$LN176@IOControl|
	DCD	0xc005fb05
|$T43469| DCD	|$LN163@IOControl|
	DCD	0x40000502
|$T43471| DCD	|$LN156@IOControl|
	DCD	0x40000502
|$T43473| DCD	|$LN149@IOControl|
	DCD	0x40000502
|$T43475| DCD	|$LN142@IOControl|
	DCD	0x40001e02
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbotg\otg.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@GEBHLKBM@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, ":"
	DCB	0x0, ":", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, " ", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@IFKDFDLP@?$AAU?$AAS?$AAB?$AA?5?$AAO?$AAT?$AAG?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?5?$AAr?$AAe?$AAs?$AAt?$AAo?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, " ", 0x0, "O", 0x0, "T", 0x0, "G"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "x", 0x0, "t", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, "o", 0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@HGLFCCFI@?$AAS?$AAe?$AAt?$AA?5?$AAL?$AAo?$AAw?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "e", 0x0, "t", 0x0, " ", 0x0, "L", 0x0, "o", 0x0, "w"
	DCB	0x0, " ", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@DOAJMGPO@?$AAU?$AAL?$AAP?$AAI?$AAR?$AAa?$AAw?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "L", 0x0, "P", 0x0, "I", 0x0, "R", 0x0, "a", 0x0, "w"
	DCB	0x0, "D", 0x0, "a", 0x0, "t", 0x0, "a", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@MBEEGFGF@?$AAU?$AAL?$AAP?$AAI?$AAI?$AAn?$AAt?$AAS?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "L", 0x0, "P", 0x0, "I", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "S", 0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@DMGLGNCN@?$AAU?$AAL?$AAP?$AAI?$AAI?$AAn?$AAt?$AAM?$AAa?$AAs?$AAk?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "L", 0x0, "P", 0x0, "I", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "M", 0x0, "a", 0x0, "s", 0x0, "k", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@LAHOLLAL@?$AAU?$AAL?$AAP?$AAI?$AAC?$AAa?$AAr?$AAK?$AAi?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "L", 0x0, "P", 0x0, "I", 0x0, "C", 0x0, "a", 0x0, "r"
	DCB	0x0, "K", 0x0, "i", 0x0, "t", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@DAPPMFGG@?$AAU?$AAL?$AAP?$AAI?$AAV?$AAB?$AAu?$AAs?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "L", 0x0, "P", 0x0, "I", 0x0, "V", 0x0, "B", 0x0, "u"
	DCB	0x0, "s", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@GCLIFPMK@?$AAD?$AAu?$AAm?$AAp?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAR?$AAe?$AAg?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "u", 0x0, "m", 0x0, "p", 0x0, " ", 0x0, "U", 0x0, "L"
	DCB	0x0, "P", 0x0, "I", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@EBGAOIAL@?$AAV?$AAB?$AAu?$AAs?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "V"
	DCB	0x0, "B", 0x0, "u", 0x0, "s", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@MPKOEAON@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@MNOFLILF@?$AAD?$AAe?$AAv?$AAC?$AAt?$AAl?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "C", 0x0, "t", 0x0, "l", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@ELNKCIFG@?$AAQ?$AAu?$AAe?$AAr?$AAy?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| DCB "Q"
	DCB	0x0, "u", 0x0, "e", 0x0, "r", 0x0, "y", 0x0, ":", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@LDEDCHMK@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAR?$AAE?$AAQ?$AAU?$AAE?$AAS?$AAT?$AA_?$AAS?$AAT?$AAO?$AAP?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, "_"
	DCB	0x0, "R", 0x0, "E", 0x0, "Q", 0x0, "U", 0x0, "E", 0x0, "S"
	DCB	0x0, "T", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "O", 0x0, "P"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@EBAKACPO@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAR?$AAE?$AAQ?$AAU?$AAE?$AAS?$AAT?$AA_?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, "_"
	DCB	0x0, "R", 0x0, "E", 0x0, "Q", 0x0, "U", 0x0, "E", 0x0, "S"
	DCB	0x0, "T", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "R"
	DCB	0x0, "T", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@MHBFEEEL@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAR?$AAE?$AAQ?$AAU?$AAE?$AAS?$AAT?$AA_?$AAS?$AAE?$AAS?$AAS?$AAI?$AAO?$AAN?$AA_?$AAD?$AAI?$AAS@| DCB "I"
	DCB	0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, "_"
	DCB	0x0, "R", 0x0, "E", 0x0, "Q", 0x0, "U", 0x0, "E", 0x0, "S"
	DCB	0x0, "T", 0x0, "_", 0x0, "S", 0x0, "E", 0x0, "S", 0x0, "S"
	DCB	0x0, "I", 0x0, "O", 0x0, "N", 0x0, "_", 0x0, "D", 0x0, "I"
	DCB	0x0, "S", 0x0, "A", 0x0, "B", 0x0, "L", 0x0, "E", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@NGAIHPFD@?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AA?9?$AA?9?$AA?9?$AA?5?$AAs?$AAt?$AAi?$AAl?$AAl?$AA?5?$AAt?$AAr?$AAy?$AA?5?$AAt?$AAo?$AA?5@| DCB "S"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, " ", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, " "
	DCB	0x0, "s", 0x0, "t", 0x0, "i", 0x0, "l", 0x0, "l", 0x0, " "
	DCB	0x0, "t", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "w", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@COMNPLIC@?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAl?$AAy?$AA?5?$AAe?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?0@| DCB "S"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, " ", 0x0, "c", 0x0, "u", 0x0, "r", 0x0, "r"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, "l", 0x0, "y", 0x0, " "
	DCB	0x0, "e", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, ",", 0x0, " ", 0x0, "i", 0x0, "g", 0x0, "n", 0x0, "o"
	DCB	0x0, "r", 0x0, "e", 0x0, " ", 0x0, "(", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@GDLDECNO@?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@BBFDJKGD@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAB?$AAi@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, " ", 0x0, "c"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "s", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "s", 0x0, "u", 0x0, "m", 0x0, "e", 0x0, " ", 0x0, "B"
	DCB	0x0, "i", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@BMIKOJJH@?$AAH?$AAo?$AAs?$AAt?$AA?5?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "H"
	DCB	0x0, "o", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "s", 0x0, "u", 0x0, "m", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@DDMAHJCE@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?5?$AAB@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, " ", 0x0, "c"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "s", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "S", 0x0, "u"
	DCB	0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, " "
	DCB	0x0, "B", 0x0, "i", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@GLEBLFPN@?$AAH?$AAo?$AAs?$AAt?$AA?5?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "H"
	DCB	0x0, "o", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "S", 0x0, "u"
	DCB	0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@KHGBBOJB@?$AAH?$AAN?$AAP?$AA?5?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "H"
	DCB	0x0, "N", 0x0, "P", 0x0, " ", 0x0, "D", 0x0, "i", 0x0, "s"
	DCB	0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@OOLFOJHM@?$AAH?$AAN?$AAP?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "H"
	DCB	0x0, "N", 0x0, "P", 0x0, " ", 0x0, "E", 0x0, "n", 0x0, "a"
	DCB	0x0, "b", 0x0, "l", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@HJIGOLJL@?$AAH?$AAN?$AAP?$AA?5?$AAS?$AAe?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "H"
	DCB	0x0, "N", 0x0, "P", 0x0, " ", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@LGJGIAB@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAQ?$AAU?$AAE?$AAR?$AAY?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R"
	DCB	0x0, "_", 0x0, "Q", 0x0, "U", 0x0, "E", 0x0, "R", 0x0, "Y"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@MDKENBOH@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF?$AAu?$AA?5?$AA?$AN@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "D", 0x0, "%", 0x0, "u", 0x0, " "
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@OBPLBNBH@?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAi?$AAo?$AAc?$AAt?$AAl?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "x", 0x0, "c", 0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, " "
	DCB	0x0, "i", 0x0, "o", 0x0, "c", 0x0, "t", 0x0, "l", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@FHIDPJDH@?$AAO?$AAT?$AAG?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?5?$AAD?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "T", 0x0, "L", 0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W"
	DCB	0x0, "E", 0x0, "R", 0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T"
	DCB	0x0, " ", 0x0, "D", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@MHJHMPML@?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAi?$AAo?$AAc?$AAt?$AAl?$AA?$AN?$AA?6?$AA?$AA@| DCB "e"
	DCB	0x0, "x", 0x0, "c", 0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, " "
	DCB	0x0, "i", 0x0, "o", 0x0, "c", 0x0, "t", 0x0, "l", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00008			 AREA	 |.xdata|, DATA
|$T43465| DCD	0x4
	DCD	|$LN167@IOControl|
	DCD	|$LN168@IOControl|
	DCD	|$LN163@IOControl|
	DCD	|$LN164@IOControl|
	DCD	|$LN160@IOControl|
	DCD	|$LN161@IOControl|
	DCD	|$LN156@IOControl|
	DCD	|$LN157@IOControl|
	DCD	|$LN153@IOControl|
	DCD	|$LN154@IOControl|
	DCD	|$LN149@IOControl|
	DCD	|$LN150@IOControl|
	DCD	|$LN146@IOControl|
	DCD	|$LN147@IOControl|
	DCD	|$LN142@IOControl|
	DCD	|$LN143@IOControl|
; Function compile flags: /Odtp

  01f54			 AREA	 |.text|, CODE, ARM

  01f54	00000000	 DCD         |__C_specific_handler|
  01f58	00000000	 DCD         |$T43465|

  01f5c		 |?IOControl@OMAPMHSUSBOTG@@UAAHKPAEK0KPAK@Z| PROC ; OMAPMHSUSBOTG::IOControl

; 775  : {

  01f5c		 |$LN176@IOControl|
  01f5c	e1a0c00d	 mov         r12, sp
  01f60	e92d000f	 stmdb       sp!, {r0 - r3}
  01f64	e92d5800	 stmdb       sp!, {r11, r12, lr}
  01f68	e28db00c	 add         r11, sp, #0xC
  01f6c	e24ddf42	 sub         sp, sp, #0x42, 30
  01f70		 |$LN174@IOControl|

; 776  :     BOOL bReturn = FALSE;

  01f70	e3a03000	 mov         r3, #0
  01f74	e50b3104	 str         r3, [r11, #-0x104]

; 777  :     BOOL rc = FALSE;

  01f78	e3a03000	 mov         r3, #0
  01f7c	e50b3108	 str         r3, [r11, #-0x108]

; 778  : 
; 779  :     switch (dwCode)

  01f80	e59b3004	 ldr         r3, [r11, #4]
  01f84	e50b30e0	 str         r3, [r11, #-0xE0]
  01f88	e51b20e0	 ldr         r2, [r11, #-0xE0]
  01f8c	e59f3834	 ldr         r3, [pc, #0x834]
  01f90	e1520003	 cmp         r2, r3
  01f94	8a000035	 bhi         |$LN137@IOControl|
  01f98	e51b20e0	 ldr         r2, [r11, #-0xE0]
  01f9c	e59f3824	 ldr         r3, [pc, #0x824]
  01fa0	e1520003	 cmp         r2, r3
  01fa4	0a000294	 beq         |$LN28@IOControl|
  01fa8	e51b20e0	 ldr         r2, [r11, #-0xE0]
  01fac	e3a03822	 mov         r3, #0x22, 16
  01fb0	e3833a02	 orr         r3, r3, #2, 20
  01fb4	e0423003	 sub         r3, r2, r3
  01fb8	e50b30e0	 str         r3, [r11, #-0xE0]
  01fbc	e51b30e0	 ldr         r3, [r11, #-0xE0]
  01fc0	e3530024	 cmp         r3, #0x24
  01fc4	8a0005bf	 bhi         |$LN1@IOControl|
  01fc8	e51b20e0	 ldr         r2, [r11, #-0xE0]
  01fcc	e1a03102	 mov         r3, r2, lsl #2
  01fd0	e083300f	 add         r3, r3, pc
  01fd4	e5933004	 ldr         r3, [r3, #4]
  01fd8	e08ff003	 add         pc, pc, r3
  01fdc		 |$LN182@IOControl|
  01fdc		 |$LN181@IOControl|
  01fdc		 |$LN183@IOControl|
  01fdc	00000bb4	 DCD         0xbb4
  01fe0		 |$LN184@IOControl|
  01fe0	000016e8	 DCD         0x16e8
  01fe4		 |$LN185@IOControl|
  01fe4	000016e8	 DCD         0x16e8
  01fe8		 |$LN186@IOControl|
  01fe8	000016e8	 DCD         0x16e8
  01fec		 |$LN187@IOControl|
  01fec	00000d60	 DCD         0xd60
  01ff0		 |$LN188@IOControl|
  01ff0	000016e8	 DCD         0x16e8
  01ff4		 |$LN189@IOControl|
  01ff4	000016e8	 DCD         0x16e8
  01ff8		 |$LN190@IOControl|
  01ff8	000016e8	 DCD         0x16e8
  01ffc		 |$LN191@IOControl|
  01ffc	00001160	 DCD         0x1160
  02000		 |$LN192@IOControl|
  02000	000016e8	 DCD         0x16e8
  02004		 |$LN193@IOControl|
  02004	000016e8	 DCD         0x16e8
  02008		 |$LN194@IOControl|
  02008	000016e8	 DCD         0x16e8
  0200c		 |$LN195@IOControl|
  0200c	00001314	 DCD         0x1314
  02010		 |$LN196@IOControl|
  02010	000016e8	 DCD         0x16e8
  02014		 |$LN197@IOControl|
  02014	000016e8	 DCD         0x16e8
  02018		 |$LN198@IOControl|
  02018	000016e8	 DCD         0x16e8
  0201c		 |$LN199@IOControl|
  0201c	00001594	 DCD         0x1594
  02020		 |$LN200@IOControl|
  02020	000016e8	 DCD         0x16e8
  02024		 |$LN201@IOControl|
  02024	000016e8	 DCD         0x16e8
  02028		 |$LN202@IOControl|
  02028	000016e8	 DCD         0x16e8
  0202c		 |$LN203@IOControl|
  0202c	000005b8	 DCD         0x5b8
  02030		 |$LN204@IOControl|
  02030	000016e8	 DCD         0x16e8
  02034		 |$LN205@IOControl|
  02034	000016e8	 DCD         0x16e8
  02038		 |$LN206@IOControl|
  02038	000016e8	 DCD         0x16e8
  0203c		 |$LN207@IOControl|
  0203c	000008d4	 DCD         0x8d4
  02040		 |$LN208@IOControl|
  02040	000016e8	 DCD         0x16e8
  02044		 |$LN209@IOControl|
  02044	000016e8	 DCD         0x16e8
  02048		 |$LN210@IOControl|
  02048	000016e8	 DCD         0x16e8
  0204c		 |$LN211@IOControl|
  0204c	00000a1c	 DCD         0xa1c
  02050		 |$LN212@IOControl|
  02050	000016e8	 DCD         0x16e8
  02054		 |$LN213@IOControl|
  02054	000016e8	 DCD         0x16e8
  02058		 |$LN214@IOControl|
  02058	000016e8	 DCD         0x16e8
  0205c		 |$LN215@IOControl|
  0205c	00000eb8	 DCD         0xeb8
  02060		 |$LN216@IOControl|
  02060	000016e8	 DCD         0x16e8
  02064		 |$LN217@IOControl|
  02064	000016e8	 DCD         0x16e8
  02068		 |$LN218@IOControl|
  02068	000016e8	 DCD         0x16e8
  0206c		 |$LN219@IOControl|
  0206c	00000ff8	 DCD         0xff8
  02070		 |$LN137@IOControl|
  02070	e51b20e0	 ldr         r2, [r11, #-0xE0]
  02074	e59f3748	 ldr         r3, [pc, #0x748]
  02078	e1520003	 cmp         r2, r3
  0207c	8a00001b	 bhi         |$LN138@IOControl|
  02080	e51b20e0	 ldr         r2, [r11, #-0xE0]
  02084	e59f3738	 ldr         r3, [pc, #0x738]
  02088	e1520003	 cmp         r2, r3
  0208c	0a00008c	 beq         |$LN50@IOControl|
  02090	e51b20e0	 ldr         r2, [r11, #-0xE0]
  02094	e59f3724	 ldr         r3, [pc, #0x724]
  02098	e1520003	 cmp         r2, r3
  0209c	8a00000d	 bhi         |$LN139@IOControl|
  020a0	e51b20e0	 ldr         r2, [r11, #-0xE0]
  020a4	e59f3714	 ldr         r3, [pc, #0x714]
  020a8	e1520003	 cmp         r2, r3
  020ac	0a0001ac	 beq         |$LN34@IOControl|
  020b0	e51b20e0	 ldr         r2, [r11, #-0xE0]
  020b4	e3a0382a	 mov         r3, #0x2A, 16
  020b8	e3833e41	 orr         r3, r3, #0x41, 28
  020bc	e1520003	 cmp         r2, r3
  020c0	0a0001fb	 beq         |$LN32@IOControl|
  020c4	e51b20e0	 ldr         r2, [r11, #-0xE0]
  020c8	e59f36ec	 ldr         r3, [pc, #0x6EC]
  020cc	e1520003	 cmp         r2, r3
  020d0	0a0000ca	 beq         |$LN42@IOControl|
  020d4	ea00057b	 b           |$LN1@IOControl|
  020d8		 |$LN139@IOControl|
  020d8	e51b20e0	 ldr         r2, [r11, #-0xE0]
  020dc	e3a03832	 mov         r3, #0x32, 16
  020e0	e3833a01	 orr         r3, r3, #1, 20
  020e4	e1520003	 cmp         r2, r3
  020e8	0a000016	 beq         |$LN56@IOControl|
  020ec	ea000575	 b           |$LN1@IOControl|
  020f0		 |$LN138@IOControl|
  020f0	e51b20e0	 ldr         r2, [r11, #-0xE0]
  020f4	e59f36bc	 ldr         r3, [pc, #0x6BC]
  020f8	e1520003	 cmp         r2, r3
  020fc	8a00000c	 bhi         |$LN140@IOControl|
  02100	e51b20e0	 ldr         r2, [r11, #-0xE0]
  02104	e59f36ac	 ldr         r3, [pc, #0x6AC]
  02108	e1520003	 cmp         r2, r3
  0210c	0a0000b8	 beq         |$LN43@IOControl|
  02110	e51b20e0	 ldr         r2, [r11, #-0xE0]
  02114	e59f3698	 ldr         r3, [pc, #0x698]
  02118	e1520003	 cmp         r2, r3
  0211c	0a00002a	 beq         |$LN53@IOControl|
  02120	e51b20e0	 ldr         r2, [r11, #-0xE0]
  02124	e59f3684	 ldr         r3, [pc, #0x684]
  02128	e1520003	 cmp         r2, r3
  0212c	0a000089	 beq         |$LN47@IOControl|
  02130	ea000564	 b           |$LN1@IOControl|
  02134		 |$LN140@IOControl|
  02134	e51b20e0	 ldr         r2, [r11, #-0xE0]
  02138	e59f366c	 ldr         r3, [pc, #0x66C]
  0213c	e1520003	 cmp         r2, r3
  02140	0a00054d	 beq         |$LN2@IOControl|
  02144	ea00055f	 b           |$LN1@IOControl|
  02148		 |$LN56@IOControl|

; 780  :     {
; 781  :         case IOCTL_POWER_CAPABILITIES:
; 782  :             if (pBufOut && dwLenOut >= sizeof (POWER_CAPABILITIES) && pdwActualOut)

  02148	e59b3010	 ldr         r3, [r11, #0x10]
  0214c	e3530000	 cmp         r3, #0
  02150	0a00001c	 beq         |$LN55@IOControl|
  02154	e59b3014	 ldr         r3, [r11, #0x14]
  02158	e3530030	 cmp         r3, #0x30
  0215c	3a000019	 bcc         |$LN55@IOControl|
  02160	e59b3018	 ldr         r3, [r11, #0x18]
  02164	e3530000	 cmp         r3, #0
  02168	0a000016	 beq         |$LN55@IOControl|
  0216c		 |$LN146@IOControl|

; 783  :             {
; 784  :                 __try
; 785  :                 {
; 786  :                     PPOWER_CAPABILITIES PowerCaps;
; 787  :                     PowerCaps = (PPOWER_CAPABILITIES)pBufOut;

  0216c	e59b3010	 ldr         r3, [r11, #0x10]
  02170	e50b3100	 str         r3, [r11, #-0x100]

; 788  : 
; 789  :                     // Only supports D0 (permanently on) and D4(off.
; 790  :                     memset(PowerCaps, 0, sizeof(*PowerCaps));

  02174	e3a02030	 mov         r2, #0x30
  02178	e3a01000	 mov         r1, #0
  0217c	e51b0100	 ldr         r0, [r11, #-0x100]
  02180	eb000000	 bl          memset

; 791  :                     PowerCaps->DeviceDx = 0x11;   // d0 ~ d4

  02184	e51b2100	 ldr         r2, [r11, #-0x100]
  02188	e3a03011	 mov         r3, #0x11
  0218c	e5c23000	 strb        r3, [r2]

; 792  :                     *pdwActualOut = sizeof(*PowerCaps);

  02190	e59b2018	 ldr         r2, [r11, #0x18]
  02194	e3a03030	 mov         r3, #0x30
  02198	e5823000	 str         r3, [r2]

; 793  : 
; 794  :                     bReturn = TRUE;

  0219c	e3a03001	 mov         r3, #1
  021a0	e50b3104	 str         r3, [r11, #-0x104]
  021a4		 |$LN147@IOControl|

; 795  :                 }

  021a4	ea000007	 b           |$LN148@IOControl|
  021a8		 |$LN143@IOControl|

; 797  :                 {
; 798  :                     RETAILMSG(1, (L"exception in ioctl\r\n"));

  021a8	e59f05f8	 ldr         r0, [pc, #0x5F8]
  021ac	eb000000	 bl          NKDbgPrintfW
  021b0	e3a03001	 mov         r3, #1
  021b4	e50b30dc	 str         r3, [r11, #-0xDC]
  021b8	ea000001	 b           |$LN62@IOControl|
  021bc	e3a03000	 mov         r3, #0
  021c0	e50b30dc	 str         r3, [r11, #-0xDC]
  021c4		 |$LN62@IOControl|
  021c4	eaffffff	 b           |$LN148@IOControl|
  021c8		 |$LN148@IOControl|
  021c8		 |$LN55@IOControl|

; 799  :                 }
; 800  :             }
; 801  :             break;

  021c8	ea000558	 b           |$LN57@IOControl|
  021cc		 |$LN53@IOControl|

; 802  :             
; 803  :         case IOCTL_POWER_SET:
; 804  :             
; 805  :             if (pBufOut && dwLenOut >= sizeof(CEDEVICE_POWER_STATE))

  021cc	e59b3010	 ldr         r3, [r11, #0x10]
  021d0	e3530000	 cmp         r3, #0
  021d4	0a000039	 beq         |$LN52@IOControl|
  021d8	e59b3014	 ldr         r3, [r11, #0x14]
  021dc	e3530004	 cmp         r3, #4
  021e0	3a000036	 bcc         |$LN52@IOControl|
  021e4		 |$LN153@IOControl|

; 806  :             {
; 807  :                 __try
; 808  :                 {
; 809  :                     CEDEVICE_POWER_STATE ReqDx = *(PCEDEVICE_POWER_STATE)pBufOut;

  021e4	e59b3010	 ldr         r3, [r11, #0x10]
  021e8	e5933000	 ldr         r3, [r3]
  021ec	e50b30fc	 str         r3, [r11, #-0xFC]

; 810  : 
; 811  :                     m_Dx = ReqDx;

  021f0	e59b3000	 ldr         r3, [r11]
  021f4	e28320f4	 add         r2, r3, #0xF4
  021f8	e51b30fc	 ldr         r3, [r11, #-0xFC]
  021fc	e5823000	 str         r3, [r2]

; 812  :                     m_fPowerRequest = TRUE;

  02200	e59b3000	 ldr         r3, [r11]
  02204	e2832e1a	 add         r2, r3, #0x1A, 28
  02208	e3a03001	 mov         r3, #1
  0220c	e5823000	 str         r3, [r2]

; 813  : 
; 814  :                     DEBUGMSG(1, (TEXT("OTG IOCTL_POWER_SET D%d\r\n"), ReqDx));

  02210	e51b10fc	 ldr         r1, [r11, #-0xFC]
  02214	e59f0588	 ldr         r0, [pc, #0x588]
  02218	eb000000	 bl          NKDbgPrintfW
  0221c	e3a03001	 mov         r3, #1
  02220	e50b30d8	 str         r3, [r11, #-0xD8]
  02224	ea000001	 b           |$LN64@IOControl|
  02228	e3a03000	 mov         r3, #0
  0222c	e50b30d8	 str         r3, [r11, #-0xD8]
  02230		 |$LN64@IOControl|

; 815  :                     ResetEvent(m_pOTG->hPowerEvent);

  02230	e59b3000	 ldr         r3, [r11]
  02234	e2833e15	 add         r3, r3, #0x15, 28
  02238	e5933000	 ldr         r3, [r3]
  0223c	e2833058	 add         r3, r3, #0x58
  02240	e5930000	 ldr         r0, [r3]
  02244	eb000000	 bl          ResetEvent

; 816  :                     SetInterruptEvent(m_dwSysIntr);

  02248	e59b3000	 ldr         r3, [r11]
  0224c	e2833f51	 add         r3, r3, #0x51, 30
  02250	e5930000	 ldr         r0, [r3]
  02254	eb000000	 bl          SetInterruptEvent

; 817  :                     WaitForSingleObject(m_pOTG->hPowerEvent, INFINITE);

  02258	e3e01000	 mvn         r1, #0
  0225c	e59b3000	 ldr         r3, [r11]
  02260	e2833e15	 add         r3, r3, #0x15, 28
  02264	e5933000	 ldr         r3, [r3]
  02268	e2833058	 add         r3, r3, #0x58
  0226c	e5930000	 ldr         r0, [r3]
  02270	eb000000	 bl          WaitForSingleObject

; 818  : 
; 819  :                     *(PCEDEVICE_POWER_STATE)pBufOut = m_Dx;

  02274	e59b3000	 ldr         r3, [r11]
  02278	e28330f4	 add         r3, r3, #0xF4
  0227c	e5932000	 ldr         r2, [r3]
  02280	e59b3010	 ldr         r3, [r11, #0x10]
  02284	e5832000	 str         r2, [r3]

; 820  :                     *pdwActualOut = sizeof(CEDEVICE_POWER_STATE);

  02288	e59b2018	 ldr         r2, [r11, #0x18]
  0228c	e3a03004	 mov         r3, #4
  02290	e5823000	 str         r3, [r2]

; 821  :                     bReturn = TRUE;

  02294	e3a03001	 mov         r3, #1
  02298	e50b3104	 str         r3, [r11, #-0x104]
  0229c		 |$LN154@IOControl|

; 822  : 
; 823  : 
; 824  :                 }

  0229c	ea000007	 b           |$LN155@IOControl|
  022a0		 |$LN150@IOControl|

; 826  :                 {
; 827  :                     RETAILMSG(1, (L"Exception in ioctl\r\n"));

  022a0	e59f04f0	 ldr         r0, [pc, #0x4F0]
  022a4	eb000000	 bl          NKDbgPrintfW
  022a8	e3a03001	 mov         r3, #1
  022ac	e50b30d4	 str         r3, [r11, #-0xD4]
  022b0	ea000001	 b           |$LN66@IOControl|
  022b4	e3a03000	 mov         r3, #0
  022b8	e50b30d4	 str         r3, [r11, #-0xD4]
  022bc		 |$LN66@IOControl|
  022bc	eaffffff	 b           |$LN155@IOControl|
  022c0		 |$LN155@IOControl|
  022c0		 |$LN52@IOControl|

; 828  :                 }
; 829  :             }
; 830  :             break;

  022c0	ea00051a	 b           |$LN57@IOControl|
  022c4		 |$LN50@IOControl|

; 831  : 
; 832  :         case IOCTL_POWER_GET:
; 833  :             if (pBufOut != NULL && dwLenOut >= sizeof(CEDEVICE_POWER_STATE))

  022c4	e59b3010	 ldr         r3, [r11, #0x10]
  022c8	e3530000	 cmp         r3, #0
  022cc	0a000020	 beq         |$LN49@IOControl|
  022d0	e59b3014	 ldr         r3, [r11, #0x14]
  022d4	e3530004	 cmp         r3, #4
  022d8	3a00001d	 bcc         |$LN49@IOControl|
  022dc		 |$LN160@IOControl|

; 834  :             {
; 835  :                 __try
; 836  :                 {
; 837  :                     *(PCEDEVICE_POWER_STATE)pBufOut = m_Dx;

  022dc	e59b3000	 ldr         r3, [r11]
  022e0	e28330f4	 add         r3, r3, #0xF4
  022e4	e5932000	 ldr         r2, [r3]
  022e8	e59b3010	 ldr         r3, [r11, #0x10]
  022ec	e5832000	 str         r2, [r3]

; 838  : 
; 839  :                     bReturn = TRUE;

  022f0	e3a03001	 mov         r3, #1
  022f4	e50b3104	 str         r3, [r11, #-0x104]

; 840  : 
; 841  :                     DEBUGMSG(ZONE_OTG_INFO, (L"USBOTG: IOCTL_POWER_GET to D%u \r\n", m_Dx));

  022f8	e59f348c	 ldr         r3, [pc, #0x48C]
  022fc	e5933440	 ldr         r3, [r3, #0x440]
  02300	e3130a01	 tst         r3, #1, 20
  02304	0a000007	 beq         |$LN67@IOControl|
  02308	e59b3000	 ldr         r3, [r11]
  0230c	e28330f4	 add         r3, r3, #0xF4
  02310	e5931000	 ldr         r1, [r3]
  02314	e59f0484	 ldr         r0, [pc, #0x484]
  02318	eb000000	 bl          NKDbgPrintfW
  0231c	e3a03001	 mov         r3, #1
  02320	e50b30d0	 str         r3, [r11, #-0xD0]
  02324	ea000001	 b           |$LN68@IOControl|
  02328		 |$LN67@IOControl|
  02328	e3a03000	 mov         r3, #0
  0232c	e50b30d0	 str         r3, [r11, #-0xD0]
  02330		 |$LN68@IOControl|
  02330		 |$LN161@IOControl|

; 842  :                 }

  02330	ea000007	 b           |$LN162@IOControl|
  02334		 |$LN157@IOControl|

; 844  :                 {
; 845  :                     RETAILMSG(1, (L"Exception in ioctl\r\n"));

  02334	e59f045c	 ldr         r0, [pc, #0x45C]
  02338	eb000000	 bl          NKDbgPrintfW
  0233c	e3a03001	 mov         r3, #1
  02340	e50b30cc	 str         r3, [r11, #-0xCC]
  02344	ea000001	 b           |$LN70@IOControl|
  02348	e3a03000	 mov         r3, #0
  0234c	e50b30cc	 str         r3, [r11, #-0xCC]
  02350		 |$LN70@IOControl|
  02350	eaffffff	 b           |$LN162@IOControl|
  02354		 |$LN162@IOControl|
  02354		 |$LN49@IOControl|

; 846  :                 }
; 847  :             }
; 848  :             break;

  02354	ea0004f5	 b           |$LN57@IOControl|
  02358		 |$LN47@IOControl|

; 849  : 
; 850  :         case IOCTL_POWER_QUERY:
; 851  :             if (pBufOut && dwLenOut >= sizeof(CEDEVICE_POWER_STATE))

  02358	e59b3010	 ldr         r3, [r11, #0x10]
  0235c	e3530000	 cmp         r3, #0
  02360	0a000022	 beq         |$LN46@IOControl|
  02364	e59b3014	 ldr         r3, [r11, #0x14]
  02368	e3530004	 cmp         r3, #4
  0236c	3a00001f	 bcc         |$LN46@IOControl|
  02370		 |$LN167@IOControl|

; 852  :             {
; 853  :             // Return a good status on any valid query, since we are
; 854  :             // always ready to change power states (if asked for state
; 855  :             // we don't support, we move to next highest, eg D3->D4).
; 856  :                 __try
; 857  :                 {
; 858  :                     CEDEVICE_POWER_STATE ReqDx = *(PCEDEVICE_POWER_STATE)pBufOut;

  02370	e59b3010	 ldr         r3, [r11, #0x10]
  02374	e5933000	 ldr         r3, [r3]
  02378	e50b30f8	 str         r3, [r11, #-0xF8]

; 859  : 
; 860  :                     if (VALID_DX(ReqDx))

  0237c	e51b30f8	 ldr         r3, [r11, #-0xF8]
  02380	e3730001	 cmn         r3, #1
  02384	da000004	 ble         |$LN44@IOControl|
  02388	e51b30f8	 ldr         r3, [r11, #-0xF8]
  0238c	e3530005	 cmp         r3, #5
  02390	aa000001	 bge         |$LN44@IOControl|

; 861  :                     {
; 862  :                     // This is a valid Dx state so return a good status.
; 863  :                         bReturn = TRUE;

  02394	e3a03001	 mov         r3, #1
  02398	e50b3104	 str         r3, [r11, #-0x104]
  0239c		 |$LN44@IOControl|

; 864  :                     }
; 865  : 
; 866  :                     DEBUGMSG(ZONE_OTG_INFO, (L"USBOTG: IOCTL_POWER_QUERY %d\r\n", ReqDx));

  0239c	e59f33e8	 ldr         r3, [pc, #0x3E8]
  023a0	e5933440	 ldr         r3, [r3, #0x440]
  023a4	e3130a01	 tst         r3, #1, 20
  023a8	0a000005	 beq         |$LN71@IOControl|
  023ac	e51b10f8	 ldr         r1, [r11, #-0xF8]
  023b0	e59f03e4	 ldr         r0, [pc, #0x3E4]
  023b4	eb000000	 bl          NKDbgPrintfW
  023b8	e3a03001	 mov         r3, #1
  023bc	e50b30c8	 str         r3, [r11, #-0xC8]
  023c0	ea000001	 b           |$LN72@IOControl|
  023c4		 |$LN71@IOControl|
  023c4	e3a03000	 mov         r3, #0
  023c8	e50b30c8	 str         r3, [r11, #-0xC8]
  023cc		 |$LN72@IOControl|
  023cc		 |$LN168@IOControl|

; 867  :                 }

  023cc	ea000007	 b           |$LN169@IOControl|
  023d0		 |$LN164@IOControl|

; 869  :                 {
; 870  :                     RETAILMSG(1, (L"Exception in ioctl\r\n"));

  023d0	e59f03c0	 ldr         r0, [pc, #0x3C0]
  023d4	eb000000	 bl          NKDbgPrintfW
  023d8	e3a03001	 mov         r3, #1
  023dc	e50b30c4	 str         r3, [r11, #-0xC4]
  023e0	ea000001	 b           |$LN74@IOControl|
  023e4	e3a03000	 mov         r3, #0
  023e8	e50b30c4	 str         r3, [r11, #-0xC4]
  023ec		 |$LN74@IOControl|
  023ec	eaffffff	 b           |$LN169@IOControl|
  023f0		 |$LN169@IOControl|
  023f0		 |$LN46@IOControl|

; 871  :                 }
; 872  :             }
; 873  :             break;

  023f0	ea0004ce	 b           |$LN57@IOControl|
  023f4		 |$LN43@IOControl|

; 874  : 
; 875  :         case IOCTL_REGISTER_POWER_RELATIONSHIP:
; 876  :             bReturn = TRUE;

  023f4	e3a03001	 mov         r3, #1
  023f8	e50b3104	 str         r3, [r11, #-0x104]

; 877  :             break;

  023fc	ea0004cb	 b           |$LN57@IOControl|
  02400		 |$LN42@IOControl|

; 878  : 
; 879  :         case IOCTL_BUS_USBOTG_HNP_ENABLE:
; 880  :             rc = StartUSBClock(TRUE);

  02400	e3a01001	 mov         r1, #1
  02404	e59b3000	 ldr         r3, [r11]
  02408	e5933000	 ldr         r3, [r3]
  0240c	e28330e4	 add         r3, r3, #0xE4
  02410	e59b0000	 ldr         r0, [r11]
  02414	e5933000	 ldr         r3, [r3]
  02418	e1a0e00f	 mov         lr, pc
  0241c	e12fff13	 bx          r3
  02420	e50b00c0	 str         r0, [r11, #-0xC0]
  02424	e51b30c0	 ldr         r3, [r11, #-0xC0]
  02428	e50b3108	 str         r3, [r11, #-0x108]

; 881  :             EnterCriticalSection(&m_pOTG->regCS);

  0242c	e59b3000	 ldr         r3, [r11]
  02430	e2833e15	 add         r3, r3, #0x15, 28
  02434	e5933000	 ldr         r3, [r3]
  02438	e2830038	 add         r0, r3, #0x38
  0243c	eb000000	 bl          EnterCriticalSection

; 882  :             DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("HNP Set\r\n")));

  02440	e59f3344	 ldr         r3, [pc, #0x344]
  02444	e5933440	 ldr         r3, [r3, #0x440]
  02448	e3130a02	 tst         r3, #2, 20
  0244c	0a000004	 beq         |$LN75@IOControl|
  02450	e59f033c	 ldr         r0, [pc, #0x33C]
  02454	eb000000	 bl          NKDbgPrintfW
  02458	e3a03001	 mov         r3, #1
  0245c	e50b30bc	 str         r3, [r11, #-0xBC]
  02460	ea000001	 b           |$LN76@IOControl|
  02464		 |$LN75@IOControl|
  02464	e3a03000	 mov         r3, #0
  02468	e50b30bc	 str         r3, [r11, #-0xBC]
  0246c		 |$LN76@IOControl|

; 883  :             DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("HNP Enable\r\n")));

  0246c	e59f3318	 ldr         r3, [pc, #0x318]
  02470	e5933440	 ldr         r3, [r3, #0x440]
  02474	e3130a02	 tst         r3, #2, 20
  02478	0a000004	 beq         |$LN77@IOControl|
  0247c	e59f030c	 ldr         r0, [pc, #0x30C]
  02480	eb000000	 bl          NKDbgPrintfW
  02484	e3a03001	 mov         r3, #1
  02488	e50b30b8	 str         r3, [r11, #-0xB8]
  0248c	ea000001	 b           |$LN78@IOControl|
  02490		 |$LN77@IOControl|
  02490	e3a03000	 mov         r3, #0
  02494	e50b30b8	 str         r3, [r11, #-0xB8]
  02498		 |$LN78@IOControl|

; 884  :             if (m_pOTG->operateMode == DEVICE_MODE)

  02498	e59b3000	 ldr         r3, [r11]
  0249c	e2833e15	 add         r3, r3, #0x15, 28
  024a0	e5933000	 ldr         r3, [r3]
  024a4	e2833035	 add         r3, r3, #0x35
  024a8	e5d33000	 ldrb        r3, [r3]
  024ac	e3530001	 cmp         r3, #1
  024b0	1a000010	 bne         |$LN41@IOControl|

; 885  :                 SETREG8(&m_pOTG->pUsbGenRegs->DevCtl, DEVCTL_HOSTREQ);

  024b4	e59b3000	 ldr         r3, [r11]
  024b8	e2833e15	 add         r3, r3, #0x15, 28
  024bc	e5933000	 ldr         r3, [r3]
  024c0	e2833020	 add         r3, r3, #0x20
  024c4	e5933000	 ldr         r3, [r3]
  024c8	e2833060	 add         r3, r3, #0x60
  024cc	e5d33000	 ldrb        r3, [r3]
  024d0	e3833002	 orr         r3, r3, #2
  024d4	e20320ff	 and         r2, r3, #0xFF
  024d8	e59b3000	 ldr         r3, [r11]
  024dc	e2833e15	 add         r3, r3, #0x15, 28
  024e0	e5933000	 ldr         r3, [r3]
  024e4	e2833020	 add         r3, r3, #0x20
  024e8	e5933000	 ldr         r3, [r3]
  024ec	e2833060	 add         r3, r3, #0x60
  024f0	e5c32000	 strb        r2, [r3]

; 886  :             else

  024f4	ea000011	 b           |$LN40@IOControl|
  024f8		 |$LN41@IOControl|

; 887  :                 CLRREG8(&m_pOTG->pUsbGenRegs->DevCtl, DEVCTL_HOSTREQ);

  024f8	e59b3000	 ldr         r3, [r11]
  024fc	e2833e15	 add         r3, r3, #0x15, 28
  02500	e5933000	 ldr         r3, [r3]
  02504	e2833020	 add         r3, r3, #0x20
  02508	e5933000	 ldr         r3, [r3]
  0250c	e2833060	 add         r3, r3, #0x60
  02510	e5d33000	 ldrb        r3, [r3]
  02514	e1a02003	 mov         r2, r3
  02518	e3e03002	 mvn         r3, #2
  0251c	e0023003	 and         r3, r2, r3
  02520	e20320ff	 and         r2, r3, #0xFF
  02524	e59b3000	 ldr         r3, [r11]
  02528	e2833e15	 add         r3, r3, #0x15, 28
  0252c	e5933000	 ldr         r3, [r3]
  02530	e2833020	 add         r3, r3, #0x20
  02534	e5933000	 ldr         r3, [r3]
  02538	e2833060	 add         r3, r3, #0x60
  0253c	e5c32000	 strb        r2, [r3]
  02540		 |$LN40@IOControl|

; 888  :             m_bHNPEnable = TRUE;

  02540	e59b3000	 ldr         r3, [r11]
  02544	e2832f5b	 add         r2, r3, #0x5B, 30
  02548	e3a03001	 mov         r3, #1
  0254c	e5823000	 str         r3, [r2]

; 889  :             bReturn = TRUE;

  02550	e3a03001	 mov         r3, #1
  02554	e50b3104	 str         r3, [r11, #-0x104]

; 890  :             LeaveCriticalSection(&m_pOTG->regCS);

  02558	e59b3000	 ldr         r3, [r11]
  0255c	e2833e15	 add         r3, r3, #0x15, 28
  02560	e5933000	 ldr         r3, [r3]
  02564	e2830038	 add         r0, r3, #0x38
  02568	eb000000	 bl          LeaveCriticalSection

; 891  :             if (rc == TRUE)

  0256c	e51b3108	 ldr         r3, [r11, #-0x108]
  02570	e3530001	 cmp         r3, #1
  02574	1a000006	 bne         |$LN39@IOControl|

; 892  :                 StopUSBClock();

  02578	e59b3000	 ldr         r3, [r11]
  0257c	e5933000	 ldr         r3, [r3]
  02580	e28330e8	 add         r3, r3, #0xE8
  02584	e59b0000	 ldr         r0, [r11]
  02588	e5933000	 ldr         r3, [r3]
  0258c	e1a0e00f	 mov         lr, pc
  02590	e12fff13	 bx          r3
  02594		 |$LN39@IOControl|

; 893  :             break;

  02594	ea000465	 b           |$LN57@IOControl|
  02598		 |$LN38@IOControl|

; 894  : 
; 895  :         case IOCTL_USBOTG_REQUEST_HOST_MODE:
; 896  :             DEBUGMSG(ZONE_OTG_INFO, (TEXT("HNP Set\r\n")));

  02598	e59f31ec	 ldr         r3, [pc, #0x1EC]
  0259c	e5933440	 ldr         r3, [r3, #0x440]
  025a0	e3130a01	 tst         r3, #1, 20
  025a4	0a000004	 beq         |$LN79@IOControl|
  025a8	e59f01e4	 ldr         r0, [pc, #0x1E4]
  025ac	eb000000	 bl          NKDbgPrintfW
  025b0	e3a03001	 mov         r3, #1
  025b4	e50b30b4	 str         r3, [r11, #-0xB4]
  025b8	ea000001	 b           |$LN80@IOControl|
  025bc		 |$LN79@IOControl|
  025bc	e3a03000	 mov         r3, #0
  025c0	e50b30b4	 str         r3, [r11, #-0xB4]
  025c4		 |$LN80@IOControl|

; 897  :             rc = StartUSBClock(TRUE);

  025c4	e3a01001	 mov         r1, #1
  025c8	e59b3000	 ldr         r3, [r11]
  025cc	e5933000	 ldr         r3, [r3]
  025d0	e28330e4	 add         r3, r3, #0xE4
  025d4	e59b0000	 ldr         r0, [r11]
  025d8	e5933000	 ldr         r3, [r3]
  025dc	e1a0e00f	 mov         lr, pc
  025e0	e12fff13	 bx          r3
  025e4	e50b00b0	 str         r0, [r11, #-0xB0]
  025e8	e51b30b0	 ldr         r3, [r11, #-0xB0]
  025ec	e50b3108	 str         r3, [r11, #-0x108]

; 898  :             EnterCriticalSection(&m_pOTG->regCS);

  025f0	e59b3000	 ldr         r3, [r11]
  025f4	e2833e15	 add         r3, r3, #0x15, 28
  025f8	e5933000	 ldr         r3, [r3]
  025fc	e2830038	 add         r0, r3, #0x38
  02600	eb000000	 bl          EnterCriticalSection

; 899  :             // if from IOCTL_BUS_USBOTG_HNP_ENABLE, always set it
; 900  :             if (INREG8(&m_pOTG->pUsbGenRegs->DevCtl) & DEVCTL_HOSTREQ)

  02604	e59b3000	 ldr         r3, [r11]
  02608	e2833e15	 add         r3, r3, #0x15, 28
  0260c	e5933000	 ldr         r3, [r3]
  02610	e2833020	 add         r3, r3, #0x20
  02614	e5933000	 ldr         r3, [r3]
  02618	e2833060	 add         r3, r3, #0x60
  0261c	e5d33000	 ldrb        r3, [r3]
  02620	e3130002	 tst         r3, #2
  02624	0a00001d	 beq         |$LN37@IOControl|

; 901  :             {
; 902  :                 DEBUGMSG(ZONE_OTG_INFO, (TEXT("HNP Disable\r\n")));

  02628	e59f315c	 ldr         r3, [pc, #0x15C]
  0262c	e5933440	 ldr         r3, [r3, #0x440]
  02630	e3130a01	 tst         r3, #1, 20
  02634	0a000004	 beq         |$LN81@IOControl|
  02638	e59f0148	 ldr         r0, [pc, #0x148]
  0263c	eb000000	 bl          NKDbgPrintfW
  02640	e3a03001	 mov         r3, #1
  02644	e50b30ac	 str         r3, [r11, #-0xAC]
  02648	ea000001	 b           |$LN82@IOControl|
  0264c		 |$LN81@IOControl|
  0264c	e3a03000	 mov         r3, #0
  02650	e50b30ac	 str         r3, [r11, #-0xAC]
  02654		 |$LN82@IOControl|

; 903  :                 CLRREG8(&m_pOTG->pUsbGenRegs->DevCtl, DEVCTL_HOSTREQ);

  02654	e59b3000	 ldr         r3, [r11]
  02658	e2833e15	 add         r3, r3, #0x15, 28
  0265c	e5933000	 ldr         r3, [r3]
  02660	e2833020	 add         r3, r3, #0x20
  02664	e5933000	 ldr         r3, [r3]
  02668	e2833060	 add         r3, r3, #0x60
  0266c	e5d33000	 ldrb        r3, [r3]
  02670	e1a02003	 mov         r2, r3
  02674	e3e03002	 mvn         r3, #2
  02678	e0023003	 and         r3, r2, r3
  0267c	e20320ff	 and         r2, r3, #0xFF
  02680	e59b3000	 ldr         r3, [r11]
  02684	e2833e15	 add         r3, r3, #0x15, 28
  02688	e5933000	 ldr         r3, [r3]
  0268c	e2833020	 add         r3, r3, #0x20
  02690	e5933000	 ldr         r3, [r3]
  02694	e2833060	 add         r3, r3, #0x60
  02698	e5c32000	 strb        r2, [r3]

; 904  :             }
; 905  :             else

  0269c	ea00001a	 b           |$LN36@IOControl|
  026a0		 |$LN37@IOControl|

; 906  :             {
; 907  :                 DEBUGMSG(ZONE_OTG_INFO, (TEXT("HNP Enable\r\n")));

  026a0	e59f30e4	 ldr         r3, [pc, #0xE4]
  026a4	e5933440	 ldr         r3, [r3, #0x440]
  026a8	e3130a01	 tst         r3, #1, 20
  026ac	0a000004	 beq         |$LN83@IOControl|
  026b0	e59f00d8	 ldr         r0, [pc, #0xD8]
  026b4	eb000000	 bl          NKDbgPrintfW
  026b8	e3a03001	 mov         r3, #1
  026bc	e50b30a8	 str         r3, [r11, #-0xA8]
  026c0	ea000001	 b           |$LN84@IOControl|
  026c4		 |$LN83@IOControl|
  026c4	e3a03000	 mov         r3, #0
  026c8	e50b30a8	 str         r3, [r11, #-0xA8]
  026cc		 |$LN84@IOControl|

; 908  :                 SETREG8(&m_pOTG->pUsbGenRegs->DevCtl, DEVCTL_HOSTREQ);

  026cc	e59b3000	 ldr         r3, [r11]
  026d0	e2833e15	 add         r3, r3, #0x15, 28
  026d4	e5933000	 ldr         r3, [r3]
  026d8	e2833020	 add         r3, r3, #0x20
  026dc	e5933000	 ldr         r3, [r3]
  026e0	e2833060	 add         r3, r3, #0x60
  026e4	e5d33000	 ldrb        r3, [r3]
  026e8	e3833002	 orr         r3, r3, #2
  026ec	e20320ff	 and         r2, r3, #0xFF
  026f0	e59b3000	 ldr         r3, [r11]
  026f4	e2833e15	 add         r3, r3, #0x15, 28
  026f8	e5933000	 ldr         r3, [r3]
  026fc	e2833020	 add         r3, r3, #0x20
  02700	e5933000	 ldr         r3, [r3]
  02704	e2833060	 add         r3, r3, #0x60
  02708	e5c32000	 strb        r2, [r3]
  0270c		 |$LN36@IOControl|

; 909  :             }
; 910  :             m_bHNPEnable = TRUE;

  0270c	e59b3000	 ldr         r3, [r11]
  02710	e2832f5b	 add         r2, r3, #0x5B, 30
  02714	e3a03001	 mov         r3, #1
  02718	e5823000	 str         r3, [r2]

; 911  : 
; 912  :             bReturn = TRUE;

  0271c	e3a03001	 mov         r3, #1
  02720	e50b3104	 str         r3, [r11, #-0x104]

; 913  :             LeaveCriticalSection(&m_pOTG->regCS);

  02724	e59b3000	 ldr         r3, [r11]
  02728	e2833e15	 add         r3, r3, #0x15, 28
  0272c	e5933000	 ldr         r3, [r3]
  02730	e2830038	 add         r0, r3, #0x38
  02734	eb000000	 bl          LeaveCriticalSection

; 914  :             if (rc == TRUE)

  02738	e51b3108	 ldr         r3, [r11, #-0x108]
  0273c	e3530001	 cmp         r3, #1
  02740	1a000006	 bne         |$LN35@IOControl|

; 915  :                 StopUSBClock();

  02744	e59b3000	 ldr         r3, [r11]
  02748	e5933000	 ldr         r3, [r3]
  0274c	e28330e8	 add         r3, r3, #0xE8
  02750	e59b0000	 ldr         r0, [r11]
  02754	e5933000	 ldr         r3, [r3]
  02758	e1a0e00f	 mov         lr, pc
  0275c	e12fff13	 bx          r3
  02760		 |$LN35@IOControl|

; 916  :             break;

  02760	ea0003f2	 b           |$LN57@IOControl|
  02764		 |$LN34@IOControl|

; 917  : 
; 918  :         case IOCTL_BUS_USBOTG_HNP_DISABLE:    
; 919  :             DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("HNP Disable\r\n")));

  02764	e59f3020	 ldr         r3, [pc, #0x20]
  02768	e5933440	 ldr         r3, [r3, #0x440]
  0276c	e3130a02	 tst         r3, #2, 20
  02770	0a000015	 beq         |$LN85@IOControl|
  02774	e59f000c	 ldr         r0, [pc, #0xC]
  02778	eb000000	 bl          NKDbgPrintfW
  0277c	e3a03001	 mov         r3, #1
  02780	e50b30a4	 str         r3, [r11, #-0xA4]
  02784	ea000012	 b           |$LN86@IOControl|
  02788		 |$LN254@IOControl|
  02788		 |$LN255@IOControl|
  02788	00000000	 DCD         |??_C@_1BM@KHGBBOJB@?$AAH?$AAN?$AAP?$AA?5?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  0278c		 |$LN256@IOControl|
  0278c	00000000	 DCD         |dpCurSettings|
  02790		 |$LN257@IOControl|
  02790	00000000	 DCD         |??_C@_1BK@OOLFOJHM@?$AAH?$AAN?$AAP?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  02794		 |$LN258@IOControl|
  02794	00000000	 DCD         |??_C@_1BE@HJIGOLJL@?$AAH?$AAN?$AAP?$AA?5?$AAS?$AAe?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  02798		 |$LN259@IOControl|
  02798	00000000	 DCD         |??_C@_1CK@OBPLBNBH@?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAi?$AAo?$AAc?$AAt?$AAl?$AA?$AN?$AA?6?$AA?$AA@|
  0279c		 |$LN260@IOControl|
  0279c	00000000	 DCD         |??_C@_1DO@LGJGIAB@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAQ?$AAU?$AAE?$AAR?$AAY?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  027a0		 |$LN261@IOControl|
  027a0	00000000	 DCD         |??_C@_1EE@MDKENBOH@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF?$AAu?$AA?5?$AA?$AN@|
  027a4		 |$LN262@IOControl|
  027a4	00000000	 DCD         |??_C@_1DE@FHIDPJDH@?$AAO?$AAT?$AAG?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?5?$AAD?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  027a8		 |$LN263@IOControl|
  027a8	00000000	 DCD         |??_C@_1CK@MHJHMPML@?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAi?$AAo?$AAc?$AAt?$AAl?$AA?$AN?$AA?6?$AA?$AA@|
  027ac		 |$LN264@IOControl|
  027ac	80038140	 DCD         0x80038140
  027b0		 |$LN265@IOControl|
  027b0	0032100c	 DCD         0x32100c
  027b4		 |$LN266@IOControl|
  027b4	00321008	 DCD         0x321008
  027b8		 |$LN267@IOControl|
  027b8	00321018	 DCD         0x321018
  027bc		 |$LN268@IOControl|
  027bc	002a0414	 DCD         0x2a0414
  027c0		 |$LN269@IOControl|
  027c0	002a0418	 DCD         0x2a0418
  027c4		 |$LN270@IOControl|
  027c4	00321004	 DCD         0x321004
  027c8		 |$LN271@IOControl|
  027c8	002a040c	 DCD         0x2a040c
  027cc		 |$LN85@IOControl|
  027cc	e3a03000	 mov         r3, #0
  027d0	e50b30a4	 str         r3, [r11, #-0xA4]
  027d4		 |$LN86@IOControl|

; 920  :             rc = StartUSBClock(TRUE);

  027d4	e3a01001	 mov         r1, #1
  027d8	e59b3000	 ldr         r3, [r11]
  027dc	e5933000	 ldr         r3, [r3]
  027e0	e28330e4	 add         r3, r3, #0xE4
  027e4	e59b0000	 ldr         r0, [r11]
  027e8	e5933000	 ldr         r3, [r3]
  027ec	e1a0e00f	 mov         lr, pc
  027f0	e12fff13	 bx          r3
  027f4	e50b00a0	 str         r0, [r11, #-0xA0]
  027f8	e51b30a0	 ldr         r3, [r11, #-0xA0]
  027fc	e50b3108	 str         r3, [r11, #-0x108]

; 921  :             EnterCriticalSection(&m_pOTG->regCS);

  02800	e59b3000	 ldr         r3, [r11]
  02804	e2833e15	 add         r3, r3, #0x15, 28
  02808	e5933000	 ldr         r3, [r3]
  0280c	e2830038	 add         r0, r3, #0x38
  02810	eb000000	 bl          EnterCriticalSection

; 922  :             CLRREG8(&m_pOTG->pUsbGenRegs->DevCtl, DEVCTL_HOSTREQ);        

  02814	e59b3000	 ldr         r3, [r11]
  02818	e2833e15	 add         r3, r3, #0x15, 28
  0281c	e5933000	 ldr         r3, [r3]
  02820	e2833020	 add         r3, r3, #0x20
  02824	e5933000	 ldr         r3, [r3]
  02828	e2833060	 add         r3, r3, #0x60
  0282c	e5d33000	 ldrb        r3, [r3]
  02830	e1a02003	 mov         r2, r3
  02834	e3e03002	 mvn         r3, #2
  02838	e0023003	 and         r3, r2, r3
  0283c	e20320ff	 and         r2, r3, #0xFF
  02840	e59b3000	 ldr         r3, [r11]
  02844	e2833e15	 add         r3, r3, #0x15, 28
  02848	e5933000	 ldr         r3, [r3]
  0284c	e2833020	 add         r3, r3, #0x20
  02850	e5933000	 ldr         r3, [r3]
  02854	e2833060	 add         r3, r3, #0x60
  02858	e5c32000	 strb        r2, [r3]

; 923  :             bReturn = TRUE;

  0285c	e3a03001	 mov         r3, #1
  02860	e50b3104	 str         r3, [r11, #-0x104]

; 924  :             m_bHNPEnable = FALSE;

  02864	e59b3000	 ldr         r3, [r11]
  02868	e2832f5b	 add         r2, r3, #0x5B, 30
  0286c	e3a03000	 mov         r3, #0
  02870	e5823000	 str         r3, [r2]

; 925  :             LeaveCriticalSection(&m_pOTG->regCS);

  02874	e59b3000	 ldr         r3, [r11]
  02878	e2833e15	 add         r3, r3, #0x15, 28
  0287c	e5933000	 ldr         r3, [r3]
  02880	e2830038	 add         r0, r3, #0x38
  02884	eb000000	 bl          LeaveCriticalSection

; 926  :             if (rc == TRUE)

  02888	e51b3108	 ldr         r3, [r11, #-0x108]
  0288c	e3530001	 cmp         r3, #1
  02890	1a000006	 bne         |$LN33@IOControl|

; 927  :                 StopUSBClock();

  02894	e59b3000	 ldr         r3, [r11]
  02898	e5933000	 ldr         r3, [r3]
  0289c	e28330e8	 add         r3, r3, #0xE8
  028a0	e59b0000	 ldr         r0, [r11]
  028a4	e5933000	 ldr         r3, [r3]
  028a8	e1a0e00f	 mov         lr, pc
  028ac	e12fff13	 bx          r3
  028b0		 |$LN33@IOControl|

; 928  :             break;

  028b0	ea00039e	 b           |$LN57@IOControl|
  028b4		 |$LN32@IOControl|

; 929  : 
; 930  :         case IOCTL_USBOTG_SUSPEND_HOST:
; 931  :         case IOCTL_BUS_USBOTG_SUSPEND :
; 932  :             DEBUGMSG(ZONE_OTG_INFO, (TEXT("Host Suspend\r\n")));

  028b4	e59f3ee0	 ldr         r3, [pc, #0xEE0]
  028b8	e5933440	 ldr         r3, [r3, #0x440]
  028bc	e3130a01	 tst         r3, #1, 20
  028c0	0a000004	 beq         |$LN87@IOControl|
  028c4	e59f0f2c	 ldr         r0, [pc, #0xF2C]
  028c8	eb000000	 bl          NKDbgPrintfW
  028cc	e3a03001	 mov         r3, #1
  028d0	e50b309c	 str         r3, [r11, #-0x9C]
  028d4	ea000001	 b           |$LN88@IOControl|
  028d8		 |$LN87@IOControl|
  028d8	e3a03000	 mov         r3, #0
  028dc	e50b309c	 str         r3, [r11, #-0x9C]
  028e0		 |$LN88@IOControl|

; 933  :             rc = StartUSBClock(TRUE);

  028e0	e3a01001	 mov         r1, #1
  028e4	e59b3000	 ldr         r3, [r11]
  028e8	e5933000	 ldr         r3, [r3]
  028ec	e28330e4	 add         r3, r3, #0xE4
  028f0	e59b0000	 ldr         r0, [r11]
  028f4	e5933000	 ldr         r3, [r3]
  028f8	e1a0e00f	 mov         lr, pc
  028fc	e12fff13	 bx          r3
  02900	e50b0098	 str         r0, [r11, #-0x98]
  02904	e51b3098	 ldr         r3, [r11, #-0x98]
  02908	e50b3108	 str         r3, [r11, #-0x108]

; 934  :             EnterCriticalSection(&m_pOTG->regCS);

  0290c	e59b3000	 ldr         r3, [r11]
  02910	e2833e15	 add         r3, r3, #0x15, 28
  02914	e5933000	 ldr         r3, [r3]
  02918	e2830038	 add         r0, r3, #0x38
  0291c	eb000000	 bl          EnterCriticalSection

; 935  :             if (INREG8(&m_pOTG->pUsbGenRegs->DevCtl) & DEVCTL_HOSTMODE)

  02920	e59b3000	 ldr         r3, [r11]
  02924	e2833e15	 add         r3, r3, #0x15, 28
  02928	e5933000	 ldr         r3, [r3]
  0292c	e2833020	 add         r3, r3, #0x20
  02930	e5933000	 ldr         r3, [r3]
  02934	e2833060	 add         r3, r3, #0x60
  02938	e5d33000	 ldrb        r3, [r3]
  0293c	e3130004	 tst         r3, #4
  02940	0a000010	 beq         |$LN31@IOControl|

; 936  :                 SETREG8(&m_pOTG->pUsbGenRegs->Power, POWER_SUSPENDM/*|POWER_EN_SUSPENDM*/);

  02944	e59b3000	 ldr         r3, [r11]
  02948	e2833e15	 add         r3, r3, #0x15, 28
  0294c	e5933000	 ldr         r3, [r3]
  02950	e2833020	 add         r3, r3, #0x20
  02954	e5933000	 ldr         r3, [r3]
  02958	e2833001	 add         r3, r3, #1
  0295c	e5d33000	 ldrb        r3, [r3]
  02960	e3833002	 orr         r3, r3, #2
  02964	e20320ff	 and         r2, r3, #0xFF
  02968	e59b3000	 ldr         r3, [r11]
  0296c	e2833e15	 add         r3, r3, #0x15, 28
  02970	e5933000	 ldr         r3, [r3]
  02974	e2833020	 add         r3, r3, #0x20
  02978	e5933000	 ldr         r3, [r3]
  0297c	e2833001	 add         r3, r3, #1
  02980	e5c32000	 strb        r2, [r3]

; 937  :             else

  02984	ea00000a	 b           |$LN30@IOControl|
  02988		 |$LN31@IOControl|

; 938  :                 DEBUGMSG(ZONE_OTG_INFO, (TEXT("Device Mode cannot set Suspend Bit\r\n")));

  02988	e59f3e0c	 ldr         r3, [pc, #0xE0C]
  0298c	e5933440	 ldr         r3, [r3, #0x440]
  02990	e3130a01	 tst         r3, #1, 20
  02994	0a000004	 beq         |$LN89@IOControl|
  02998	e59f0e54	 ldr         r0, [pc, #0xE54]
  0299c	eb000000	 bl          NKDbgPrintfW
  029a0	e3a03001	 mov         r3, #1
  029a4	e50b3094	 str         r3, [r11, #-0x94]
  029a8	ea000001	 b           |$LN90@IOControl|
  029ac		 |$LN89@IOControl|
  029ac	e3a03000	 mov         r3, #0
  029b0	e50b3094	 str         r3, [r11, #-0x94]
  029b4		 |$LN90@IOControl|
  029b4		 |$LN30@IOControl|

; 939  :             bReturn = TRUE;

  029b4	e3a03001	 mov         r3, #1
  029b8	e50b3104	 str         r3, [r11, #-0x104]

; 940  :             LeaveCriticalSection(&m_pOTG->regCS);

  029bc	e59b3000	 ldr         r3, [r11]
  029c0	e2833e15	 add         r3, r3, #0x15, 28
  029c4	e5933000	 ldr         r3, [r3]
  029c8	e2830038	 add         r0, r3, #0x38
  029cc	eb000000	 bl          LeaveCriticalSection

; 941  :             if (rc == TRUE)

  029d0	e51b3108	 ldr         r3, [r11, #-0x108]
  029d4	e3530001	 cmp         r3, #1
  029d8	1a000006	 bne         |$LN29@IOControl|

; 942  :                 StopUSBClock();

  029dc	e59b3000	 ldr         r3, [r11]
  029e0	e5933000	 ldr         r3, [r3]
  029e4	e28330e8	 add         r3, r3, #0xE8
  029e8	e59b0000	 ldr         r0, [r11]
  029ec	e5933000	 ldr         r3, [r3]
  029f0	e1a0e00f	 mov         lr, pc
  029f4	e12fff13	 bx          r3
  029f8		 |$LN29@IOControl|

; 943  :             break;

  029f8	ea00034c	 b           |$LN57@IOControl|
  029fc		 |$LN28@IOControl|

; 944  : 
; 945  :         case IOCTL_USBOTG_RESUME_HOST:
; 946  :         case IOCTL_BUS_USBOTG_RESUME:
; 947  :             DEBUGMSG(ZONE_OTG_INFO, (TEXT("Host Resume\r\n")));

  029fc	e59f3d98	 ldr         r3, [pc, #0xD98]
  02a00	e5933440	 ldr         r3, [r3, #0x440]
  02a04	e3130a01	 tst         r3, #1, 20
  02a08	0a000004	 beq         |$LN91@IOControl|
  02a0c	e59f0ddc	 ldr         r0, [pc, #0xDDC]
  02a10	eb000000	 bl          NKDbgPrintfW
  02a14	e3a03001	 mov         r3, #1
  02a18	e50b3090	 str         r3, [r11, #-0x90]
  02a1c	ea000001	 b           |$LN92@IOControl|
  02a20		 |$LN91@IOControl|
  02a20	e3a03000	 mov         r3, #0
  02a24	e50b3090	 str         r3, [r11, #-0x90]
  02a28		 |$LN92@IOControl|

; 948  :             rc = StartUSBClock(TRUE);

  02a28	e3a01001	 mov         r1, #1
  02a2c	e59b3000	 ldr         r3, [r11]
  02a30	e5933000	 ldr         r3, [r3]
  02a34	e28330e4	 add         r3, r3, #0xE4
  02a38	e59b0000	 ldr         r0, [r11]
  02a3c	e5933000	 ldr         r3, [r3]
  02a40	e1a0e00f	 mov         lr, pc
  02a44	e12fff13	 bx          r3
  02a48	e50b008c	 str         r0, [r11, #-0x8C]
  02a4c	e51b308c	 ldr         r3, [r11, #-0x8C]
  02a50	e50b3108	 str         r3, [r11, #-0x108]

; 949  :             EnterCriticalSection(&m_pOTG->regCS);

  02a54	e59b3000	 ldr         r3, [r11]
  02a58	e2833e15	 add         r3, r3, #0x15, 28
  02a5c	e5933000	 ldr         r3, [r3]
  02a60	e2830038	 add         r0, r3, #0x38
  02a64	eb000000	 bl          EnterCriticalSection

; 950  :             if (INREG8(&m_pOTG->pUsbGenRegs->Power) & POWER_SUSPENDM)

  02a68	e59b3000	 ldr         r3, [r11]
  02a6c	e2833e15	 add         r3, r3, #0x15, 28
  02a70	e5933000	 ldr         r3, [r3]
  02a74	e2833020	 add         r3, r3, #0x20
  02a78	e5933000	 ldr         r3, [r3]
  02a7c	e2833001	 add         r3, r3, #1
  02a80	e5d33000	 ldrb        r3, [r3]
  02a84	e3130002	 tst         r3, #2
  02a88	0a000024	 beq         |$LN27@IOControl|

; 951  :             {
; 952  :                 SETREG8(&m_pOTG->pUsbGenRegs->Power, POWER_RESUME);

  02a8c	e59b3000	 ldr         r3, [r11]
  02a90	e2833e15	 add         r3, r3, #0x15, 28
  02a94	e5933000	 ldr         r3, [r3]
  02a98	e2833020	 add         r3, r3, #0x20
  02a9c	e5933000	 ldr         r3, [r3]
  02aa0	e2833001	 add         r3, r3, #1
  02aa4	e5d33000	 ldrb        r3, [r3]
  02aa8	e3833004	 orr         r3, r3, #4
  02aac	e20320ff	 and         r2, r3, #0xFF
  02ab0	e59b3000	 ldr         r3, [r11]
  02ab4	e2833e15	 add         r3, r3, #0x15, 28
  02ab8	e5933000	 ldr         r3, [r3]
  02abc	e2833020	 add         r3, r3, #0x20
  02ac0	e5933000	 ldr         r3, [r3]
  02ac4	e2833001	 add         r3, r3, #1
  02ac8	e5c32000	 strb        r2, [r3]

; 953  :                 Sleep(10);

  02acc	e3a0000a	 mov         r0, #0xA
  02ad0	eb000000	 bl          Sleep

; 954  :                 CLRREG8(&m_pOTG->pUsbGenRegs->Power, POWER_RESUME);

  02ad4	e59b3000	 ldr         r3, [r11]
  02ad8	e2833e15	 add         r3, r3, #0x15, 28
  02adc	e5933000	 ldr         r3, [r3]
  02ae0	e2833020	 add         r3, r3, #0x20
  02ae4	e5933000	 ldr         r3, [r3]
  02ae8	e2833001	 add         r3, r3, #1
  02aec	e5d33000	 ldrb        r3, [r3]
  02af0	e1a02003	 mov         r2, r3
  02af4	e3e03004	 mvn         r3, #4
  02af8	e0023003	 and         r3, r2, r3
  02afc	e20320ff	 and         r2, r3, #0xFF
  02b00	e59b3000	 ldr         r3, [r11]
  02b04	e2833e15	 add         r3, r3, #0x15, 28
  02b08	e5933000	 ldr         r3, [r3]
  02b0c	e2833020	 add         r3, r3, #0x20
  02b10	e5933000	 ldr         r3, [r3]
  02b14	e2833001	 add         r3, r3, #1
  02b18	e5c32000	 strb        r2, [r3]

; 955  :             }
; 956  :             else

  02b1c	ea00000a	 b           |$LN26@IOControl|
  02b20		 |$LN27@IOControl|

; 957  :                 DEBUGMSG(ZONE_OTG_INFO, (TEXT("Device Mode cannot set Resume Bit\r\n")));

  02b20	e59f3c74	 ldr         r3, [pc, #0xC74]
  02b24	e5933440	 ldr         r3, [r3, #0x440]
  02b28	e3130a01	 tst         r3, #1, 20
  02b2c	0a000004	 beq         |$LN93@IOControl|
  02b30	e59f0cb4	 ldr         r0, [pc, #0xCB4]
  02b34	eb000000	 bl          NKDbgPrintfW
  02b38	e3a03001	 mov         r3, #1
  02b3c	e50b3088	 str         r3, [r11, #-0x88]
  02b40	ea000001	 b           |$LN94@IOControl|
  02b44		 |$LN93@IOControl|
  02b44	e3a03000	 mov         r3, #0
  02b48	e50b3088	 str         r3, [r11, #-0x88]
  02b4c		 |$LN94@IOControl|
  02b4c		 |$LN26@IOControl|

; 958  :             bReturn = TRUE;

  02b4c	e3a03001	 mov         r3, #1
  02b50	e50b3104	 str         r3, [r11, #-0x104]

; 959  :             LeaveCriticalSection(&m_pOTG->regCS);

  02b54	e59b3000	 ldr         r3, [r11]
  02b58	e2833e15	 add         r3, r3, #0x15, 28
  02b5c	e5933000	 ldr         r3, [r3]
  02b60	e2830038	 add         r0, r3, #0x38
  02b64	eb000000	 bl          LeaveCriticalSection

; 960  :             if (rc == TRUE)

  02b68	e51b3108	 ldr         r3, [r11, #-0x108]
  02b6c	e3530001	 cmp         r3, #1
  02b70	1a000006	 bne         |$LN25@IOControl|

; 961  :                 StopUSBClock();

  02b74	e59b3000	 ldr         r3, [r11]
  02b78	e5933000	 ldr         r3, [r3]
  02b7c	e28330e8	 add         r3, r3, #0xE8
  02b80	e59b0000	 ldr         r0, [r11]
  02b84	e5933000	 ldr         r3, [r3]
  02b88	e1a0e00f	 mov         lr, pc
  02b8c	e12fff13	 bx          r3
  02b90		 |$LN25@IOControl|

; 962  :             break;

  02b90	ea0002e6	 b           |$LN57@IOControl|
  02b94		 |$LN24@IOControl|

; 963  : 
; 964  :         case IOCTL_USBOTG_REQUEST_SESSION_ENABLE:        
; 965  :             DEBUGMSG(ZONE_OTG_INFO, (TEXT("Session Enable\r\n")));

  02b94	e59f3c00	 ldr         r3, [pc, #0xC00]
  02b98	e5933440	 ldr         r3, [r3, #0x440]
  02b9c	e3130a01	 tst         r3, #1, 20
  02ba0	0a000004	 beq         |$LN95@IOControl|
  02ba4	e59f0c3c	 ldr         r0, [pc, #0xC3C]
  02ba8	eb000000	 bl          NKDbgPrintfW
  02bac	e3a03001	 mov         r3, #1
  02bb0	e50b3084	 str         r3, [r11, #-0x84]
  02bb4	ea000001	 b           |$LN96@IOControl|
  02bb8		 |$LN95@IOControl|
  02bb8	e3a03000	 mov         r3, #0
  02bbc	e50b3084	 str         r3, [r11, #-0x84]
  02bc0		 |$LN96@IOControl|

; 966  :             rc = StartUSBClock(TRUE);

  02bc0	e3a01001	 mov         r1, #1
  02bc4	e59b3000	 ldr         r3, [r11]
  02bc8	e5933000	 ldr         r3, [r3]
  02bcc	e28330e4	 add         r3, r3, #0xE4
  02bd0	e59b0000	 ldr         r0, [r11]
  02bd4	e5933000	 ldr         r3, [r3]
  02bd8	e1a0e00f	 mov         lr, pc
  02bdc	e12fff13	 bx          r3
  02be0	e50b0080	 str         r0, [r11, #-0x80]
  02be4	e51b3080	 ldr         r3, [r11, #-0x80]
  02be8	e50b3108	 str         r3, [r11, #-0x108]

; 967  :             EnterCriticalSection(&m_pOTG->regCS);

  02bec	e59b3000	 ldr         r3, [r11]
  02bf0	e2833e15	 add         r3, r3, #0x15, 28
  02bf4	e5933000	 ldr         r3, [r3]
  02bf8	e2830038	 add         r0, r3, #0x38
  02bfc	eb000000	 bl          EnterCriticalSection

; 968  :             if ((INREG8(&m_pOTG->pUsbGenRegs->DevCtl) & DEVCTL_SESSION) == 0x00)

  02c00	e59b3000	 ldr         r3, [r11]
  02c04	e2833e15	 add         r3, r3, #0x15, 28
  02c08	e5933000	 ldr         r3, [r3]
  02c0c	e2833020	 add         r3, r3, #0x20
  02c10	e5933000	 ldr         r3, [r3]
  02c14	e2833060	 add         r3, r3, #0x60
  02c18	e5d33000	 ldrb        r3, [r3]
  02c1c	e3130001	 tst         r3, #1
  02c20	1a00000d	 bne         |$LN23@IOControl|

; 969  :             {
; 970  :                 SessionRequest(TRUE, TRUE);

  02c24	e3a02001	 mov         r2, #1
  02c28	e3a01001	 mov         r1, #1
  02c2c	e59b3000	 ldr         r3, [r11]
  02c30	e5933000	 ldr         r3, [r3]
  02c34	e2833084	 add         r3, r3, #0x84
  02c38	e59b0000	 ldr         r0, [r11]
  02c3c	e5933000	 ldr         r3, [r3]
  02c40	e1a0e00f	 mov         lr, pc
  02c44	e12fff13	 bx          r3

; 971  :                 bReturn = TRUE;            

  02c48	e3a03001	 mov         r3, #1
  02c4c	e50b3104	 str         r3, [r11, #-0x104]

; 972  :                 Sleep(2000); 

  02c50	e3a00e7d	 mov         r0, #0x7D, 28
  02c54	eb000000	 bl          Sleep

; 973  :                 // It is required to sleep 2 sec for SRP as if StopUSBClock again, the DATA3 line would be reconfigured to
; 974  :                 // GPIO IN which would cause the SRP un-success.
; 975  :             }
; 976  :             else

  02c58	ea000028	 b           |$LN22@IOControl|
  02c5c		 |$LN23@IOControl|

; 977  :             {
; 978  :                 DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("SessionRequest currently enable, ignore (0x%x)\r\n"), 
; 979  :                         INREG8(&m_pOTG->pUsbGenRegs->DevCtl)));

  02c5c	e59f3b38	 ldr         r3, [pc, #0xB38]
  02c60	e5933440	 ldr         r3, [r3, #0x440]
  02c64	e3130a02	 tst         r3, #2, 20
  02c68	0a00000c	 beq         |$LN97@IOControl|
  02c6c	e59b3000	 ldr         r3, [r11]
  02c70	e2833e15	 add         r3, r3, #0x15, 28
  02c74	e5933000	 ldr         r3, [r3]
  02c78	e2833020	 add         r3, r3, #0x20
  02c7c	e5933000	 ldr         r3, [r3]
  02c80	e2833060	 add         r3, r3, #0x60
  02c84	e5d33000	 ldrb        r3, [r3]
  02c88	e1a01003	 mov         r1, r3
  02c8c	e59f0b50	 ldr         r0, [pc, #0xB50]
  02c90	eb000000	 bl          NKDbgPrintfW
  02c94	e3a03001	 mov         r3, #1
  02c98	e50b307c	 str         r3, [r11, #-0x7C]
  02c9c	ea000001	 b           |$LN98@IOControl|
  02ca0		 |$LN97@IOControl|
  02ca0	e3a03000	 mov         r3, #0
  02ca4	e50b307c	 str         r3, [r11, #-0x7C]
  02ca8		 |$LN98@IOControl|

; 980  :                 DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("SessionRequest --- still try to write\r\n")));

  02ca8	e59f3aec	 ldr         r3, [pc, #0xAEC]
  02cac	e5933440	 ldr         r3, [r3, #0x440]
  02cb0	e3130a02	 tst         r3, #2, 20
  02cb4	0a000004	 beq         |$LN99@IOControl|
  02cb8	e59f0b20	 ldr         r0, [pc, #0xB20]
  02cbc	eb000000	 bl          NKDbgPrintfW
  02cc0	e3a03001	 mov         r3, #1
  02cc4	e50b3078	 str         r3, [r11, #-0x78]
  02cc8	ea000001	 b           |$LN100@IOControl|
  02ccc		 |$LN99@IOControl|
  02ccc	e3a03000	 mov         r3, #0
  02cd0	e50b3078	 str         r3, [r11, #-0x78]
  02cd4		 |$LN100@IOControl|

; 981  :                 SessionRequest(TRUE, TRUE);

  02cd4	e3a02001	 mov         r2, #1
  02cd8	e3a01001	 mov         r1, #1
  02cdc	e59b3000	 ldr         r3, [r11]
  02ce0	e5933000	 ldr         r3, [r3]
  02ce4	e2833084	 add         r3, r3, #0x84
  02ce8	e59b0000	 ldr         r0, [r11]
  02cec	e5933000	 ldr         r3, [r3]
  02cf0	e1a0e00f	 mov         lr, pc
  02cf4	e12fff13	 bx          r3

; 982  :                 bReturn = TRUE;

  02cf8	e3a03001	 mov         r3, #1
  02cfc	e50b3104	 str         r3, [r11, #-0x104]
  02d00		 |$LN22@IOControl|

; 983  :             }                
; 984  :             LeaveCriticalSection(&m_pOTG->regCS);        

  02d00	e59b3000	 ldr         r3, [r11]
  02d04	e2833e15	 add         r3, r3, #0x15, 28
  02d08	e5933000	 ldr         r3, [r3]
  02d0c	e2830038	 add         r0, r3, #0x38
  02d10	eb000000	 bl          LeaveCriticalSection

; 985  :             if (rc == TRUE)

  02d14	e51b3108	 ldr         r3, [r11, #-0x108]
  02d18	e3530001	 cmp         r3, #1
  02d1c	1a000006	 bne         |$LN21@IOControl|

; 986  :                 StopUSBClock();

  02d20	e59b3000	 ldr         r3, [r11]
  02d24	e5933000	 ldr         r3, [r3]
  02d28	e28330e8	 add         r3, r3, #0xE8
  02d2c	e59b0000	 ldr         r0, [r11]
  02d30	e5933000	 ldr         r3, [r3]
  02d34	e1a0e00f	 mov         lr, pc
  02d38	e12fff13	 bx          r3
  02d3c		 |$LN21@IOControl|

; 987  :             break;

  02d3c	ea00027b	 b           |$LN57@IOControl|
  02d40		 |$LN20@IOControl|

; 988  : 
; 989  :         case IOCTL_USBOTG_REQUEST_SESSION_DISABLE:        
; 990  :             if (m_pOTG->operateMode != IDLE_MODE)

  02d40	e59b3000	 ldr         r3, [r11]
  02d44	e2833e15	 add         r3, r3, #0x15, 28
  02d48	e5933000	 ldr         r3, [r3]
  02d4c	e2833035	 add         r3, r3, #0x35
  02d50	e5d33000	 ldrb        r3, [r3]
  02d54	e3530000	 cmp         r3, #0
  02d58	0a000003	 beq         |$LN19@IOControl|

; 991  :                 m_bSessionDisable = TRUE;

  02d5c	e59b3000	 ldr         r3, [r11]
  02d60	e2832f5f	 add         r2, r3, #0x5F, 30
  02d64	e3a03001	 mov         r3, #1
  02d68	e5823000	 str         r3, [r2]
  02d6c		 |$LN19@IOControl|

; 992  : 
; 993  :             DEBUGMSG(ZONE_OTG_INFO, (TEXT("IOCTL_USBOTG_REQUEST_SESSION_DISABLE\r\n")));

  02d6c	e59f3a28	 ldr         r3, [pc, #0xA28]
  02d70	e5933440	 ldr         r3, [r3, #0x440]
  02d74	e3130a01	 tst         r3, #1, 20
  02d78	0a000004	 beq         |$LN101@IOControl|
  02d7c	e59f0a58	 ldr         r0, [pc, #0xA58]
  02d80	eb000000	 bl          NKDbgPrintfW
  02d84	e3a03001	 mov         r3, #1
  02d88	e50b3074	 str         r3, [r11, #-0x74]
  02d8c	ea000001	 b           |$LN102@IOControl|
  02d90		 |$LN101@IOControl|
  02d90	e3a03000	 mov         r3, #0
  02d94	e50b3074	 str         r3, [r11, #-0x74]
  02d98		 |$LN102@IOControl|

; 994  :             rc = StartUSBClock(TRUE);

  02d98	e3a01001	 mov         r1, #1
  02d9c	e59b3000	 ldr         r3, [r11]
  02da0	e5933000	 ldr         r3, [r3]
  02da4	e28330e4	 add         r3, r3, #0xE4
  02da8	e59b0000	 ldr         r0, [r11]
  02dac	e5933000	 ldr         r3, [r3]
  02db0	e1a0e00f	 mov         lr, pc
  02db4	e12fff13	 bx          r3
  02db8	e50b0070	 str         r0, [r11, #-0x70]
  02dbc	e51b3070	 ldr         r3, [r11, #-0x70]
  02dc0	e50b3108	 str         r3, [r11, #-0x108]

; 995  :             EnterCriticalSection(&m_pOTG->regCS);

  02dc4	e59b3000	 ldr         r3, [r11]
  02dc8	e2833e15	 add         r3, r3, #0x15, 28
  02dcc	e5933000	 ldr         r3, [r3]
  02dd0	e2830038	 add         r0, r3, #0x38
  02dd4	eb000000	 bl          EnterCriticalSection

; 996  :             if ((INREG8(&m_pOTG->pUsbGenRegs->DevCtl) & DEVCTL_SESSION) == DEVCTL_SESSION)

  02dd8	e59b3000	 ldr         r3, [r11]
  02ddc	e2833e15	 add         r3, r3, #0x15, 28
  02de0	e5933000	 ldr         r3, [r3]
  02de4	e2833020	 add         r3, r3, #0x20
  02de8	e5933000	 ldr         r3, [r3]
  02dec	e2833060	 add         r3, r3, #0x60
  02df0	e5d33000	 ldrb        r3, [r3]
  02df4	e2033001	 and         r3, r3, #1
  02df8	e3530001	 cmp         r3, #1
  02dfc	1a000008	 bne         |$LN18@IOControl|

; 997  :                 SessionRequest(FALSE, FALSE);

  02e00	e3a02000	 mov         r2, #0
  02e04	e3a01000	 mov         r1, #0
  02e08	e59b3000	 ldr         r3, [r11]
  02e0c	e5933000	 ldr         r3, [r3]
  02e10	e2833084	 add         r3, r3, #0x84
  02e14	e59b0000	 ldr         r0, [r11]
  02e18	e5933000	 ldr         r3, [r3]
  02e1c	e1a0e00f	 mov         lr, pc
  02e20	e12fff13	 bx          r3
  02e24		 |$LN18@IOControl|

; 998  :             LeaveCriticalSection(&m_pOTG->regCS);

  02e24	e59b3000	 ldr         r3, [r11]
  02e28	e2833e15	 add         r3, r3, #0x15, 28
  02e2c	e5933000	 ldr         r3, [r3]
  02e30	e2830038	 add         r0, r3, #0x38
  02e34	eb000000	 bl          LeaveCriticalSection

; 999  :             if (m_pOTG->operateMode != IDLE_MODE)

  02e38	e59b3000	 ldr         r3, [r11]
  02e3c	e2833e15	 add         r3, r3, #0x15, 28
  02e40	e5933000	 ldr         r3, [r3]
  02e44	e2833035	 add         r3, r3, #0x35
  02e48	e5d33000	 ldrb        r3, [r3]
  02e4c	e3530000	 cmp         r3, #0
  02e50	0a000003	 beq         |$LN17@IOControl|

; 1000 :                 SetInterruptEvent(m_dwSysIntr);

  02e54	e59b3000	 ldr         r3, [r11]
  02e58	e2833f51	 add         r3, r3, #0x51, 30
  02e5c	e5930000	 ldr         r0, [r3]
  02e60	eb000000	 bl          SetInterruptEvent
  02e64		 |$LN17@IOControl|

; 1001 :             bReturn = TRUE;

  02e64	e3a03001	 mov         r3, #1
  02e68	e50b3104	 str         r3, [r11, #-0x104]

; 1002 :             if (rc == TRUE)

  02e6c	e51b3108	 ldr         r3, [r11, #-0x108]
  02e70	e3530001	 cmp         r3, #1
  02e74	1a000006	 bne         |$LN16@IOControl|

; 1003 :                 StopUSBClock();

  02e78	e59b3000	 ldr         r3, [r11]
  02e7c	e5933000	 ldr         r3, [r3]
  02e80	e28330e8	 add         r3, r3, #0xE8
  02e84	e59b0000	 ldr         r0, [r11]
  02e88	e5933000	 ldr         r3, [r3]
  02e8c	e1a0e00f	 mov         lr, pc
  02e90	e12fff13	 bx          r3
  02e94		 |$LN16@IOControl|

; 1004 :             break;

  02e94	ea000225	 b           |$LN57@IOControl|
  02e98		 |$LN15@IOControl|

; 1005 : 
; 1006 :         case IOCTL_USBOTG_REQUEST_START:
; 1007 :             if (m_bOTGReady)

  02e98	e59b3000	 ldr         r3, [r11]
  02e9c	e2833f62	 add         r3, r3, #0x62, 30
  02ea0	e5933000	 ldr         r3, [r3]
  02ea4	e3530000	 cmp         r3, #0
  02ea8	0a000049	 beq         |$LN14@IOControl|

; 1008 :             {
; 1009 :                 DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("IOCTL_USBOTG_REQUEST_START\r\n")));

  02eac	e59f38e8	 ldr         r3, [pc, #0x8E8]
  02eb0	e5933440	 ldr         r3, [r3, #0x440]
  02eb4	e3130a02	 tst         r3, #2, 20
  02eb8	0a000004	 beq         |$LN103@IOControl|
  02ebc	e59f0914	 ldr         r0, [pc, #0x914]
  02ec0	eb000000	 bl          NKDbgPrintfW
  02ec4	e3a03001	 mov         r3, #1
  02ec8	e50b306c	 str         r3, [r11, #-0x6C]
  02ecc	ea000001	 b           |$LN104@IOControl|
  02ed0		 |$LN103@IOControl|
  02ed0	e3a03000	 mov         r3, #0
  02ed4	e50b306c	 str         r3, [r11, #-0x6C]
  02ed8		 |$LN104@IOControl|

; 1010 :                 rc = StartUSBClock(TRUE);

  02ed8	e3a01001	 mov         r1, #1
  02edc	e59b3000	 ldr         r3, [r11]
  02ee0	e5933000	 ldr         r3, [r3]
  02ee4	e28330e4	 add         r3, r3, #0xE4
  02ee8	e59b0000	 ldr         r0, [r11]
  02eec	e5933000	 ldr         r3, [r3]
  02ef0	e1a0e00f	 mov         lr, pc
  02ef4	e12fff13	 bx          r3
  02ef8	e50b0068	 str         r0, [r11, #-0x68]
  02efc	e51b3068	 ldr         r3, [r11, #-0x68]
  02f00	e50b3108	 str         r3, [r11, #-0x108]

; 1011 :                 EnterCriticalSection(&m_pOTG->regCS);        

  02f04	e59b3000	 ldr         r3, [r11]
  02f08	e2833e15	 add         r3, r3, #0x15, 28
  02f0c	e5933000	 ldr         r3, [r3]
  02f10	e2830038	 add         r0, r3, #0x38
  02f14	eb000000	 bl          EnterCriticalSection

; 1012 :                 SETREG8(&m_pOTG->pUsbGenRegs->Power, POWER_SOFTCONN);

  02f18	e59b3000	 ldr         r3, [r11]
  02f1c	e2833e15	 add         r3, r3, #0x15, 28
  02f20	e5933000	 ldr         r3, [r3]
  02f24	e2833020	 add         r3, r3, #0x20
  02f28	e5933000	 ldr         r3, [r3]
  02f2c	e2833001	 add         r3, r3, #1
  02f30	e5d33000	 ldrb        r3, [r3]
  02f34	e3833040	 orr         r3, r3, #0x40
  02f38	e20320ff	 and         r2, r3, #0xFF
  02f3c	e59b3000	 ldr         r3, [r11]
  02f40	e2833e15	 add         r3, r3, #0x15, 28
  02f44	e5933000	 ldr         r3, [r3]
  02f48	e2833020	 add         r3, r3, #0x20
  02f4c	e5933000	 ldr         r3, [r3]
  02f50	e2833001	 add         r3, r3, #1
  02f54	e5c32000	 strb        r2, [r3]

; 1013 :                 SETREG8(&m_pOTG->pUsbGenRegs->DevCtl, DEVCTL_SESSION);

  02f58	e59b3000	 ldr         r3, [r11]
  02f5c	e2833e15	 add         r3, r3, #0x15, 28
  02f60	e5933000	 ldr         r3, [r3]
  02f64	e2833020	 add         r3, r3, #0x20
  02f68	e5933000	 ldr         r3, [r3]
  02f6c	e2833060	 add         r3, r3, #0x60
  02f70	e5d33000	 ldrb        r3, [r3]
  02f74	e3833001	 orr         r3, r3, #1
  02f78	e20320ff	 and         r2, r3, #0xFF
  02f7c	e59b3000	 ldr         r3, [r11]
  02f80	e2833e15	 add         r3, r3, #0x15, 28
  02f84	e5933000	 ldr         r3, [r3]
  02f88	e2833020	 add         r3, r3, #0x20
  02f8c	e5933000	 ldr         r3, [r3]
  02f90	e2833060	 add         r3, r3, #0x60
  02f94	e5c32000	 strb        r2, [r3]

; 1014 :                 LeaveCriticalSection(&m_pOTG->regCS);

  02f98	e59b3000	 ldr         r3, [r11]
  02f9c	e2833e15	 add         r3, r3, #0x15, 28
  02fa0	e5933000	 ldr         r3, [r3]
  02fa4	e2830038	 add         r0, r3, #0x38
  02fa8	eb000000	 bl          LeaveCriticalSection

; 1015 :                 if (rc == TRUE)

  02fac	e51b3108	 ldr         r3, [r11, #-0x108]
  02fb0	e3530001	 cmp         r3, #1
  02fb4	1a000006	 bne         |$LN13@IOControl|

; 1016 :                     StopUSBClock();

  02fb8	e59b3000	 ldr         r3, [r11]
  02fbc	e5933000	 ldr         r3, [r3]
  02fc0	e28330e8	 add         r3, r3, #0xE8
  02fc4	e59b0000	 ldr         r0, [r11]
  02fc8	e5933000	 ldr         r3, [r3]
  02fcc	e1a0e00f	 mov         lr, pc
  02fd0	e12fff13	 bx          r3
  02fd4		 |$LN13@IOControl|
  02fd4		 |$LN14@IOControl|

; 1017 :             }
; 1018 :             break;

  02fd4	ea0001d5	 b           |$LN57@IOControl|
  02fd8		 |$LN12@IOControl|

; 1019 : 
; 1020 :         case IOCTL_USBOTG_REQUEST_STOP:
; 1021 :         {
; 1022 :             rc = StartUSBClock(TRUE);

  02fd8	e3a01001	 mov         r1, #1
  02fdc	e59b3000	 ldr         r3, [r11]
  02fe0	e5933000	 ldr         r3, [r3]
  02fe4	e28330e4	 add         r3, r3, #0xE4
  02fe8	e59b0000	 ldr         r0, [r11]
  02fec	e5933000	 ldr         r3, [r3]
  02ff0	e1a0e00f	 mov         lr, pc
  02ff4	e12fff13	 bx          r3
  02ff8	e50b0064	 str         r0, [r11, #-0x64]
  02ffc	e51b3064	 ldr         r3, [r11, #-0x64]
  03000	e50b3108	 str         r3, [r11, #-0x108]

; 1023 :             UINT8 DevCtl = INREG8(&m_pOTG->pUsbGenRegs->DevCtl);

  03004	e59b3000	 ldr         r3, [r11]
  03008	e2833e15	 add         r3, r3, #0x15, 28
  0300c	e5933000	 ldr         r3, [r3]
  03010	e2833020	 add         r3, r3, #0x20
  03014	e5933000	 ldr         r3, [r3]
  03018	e2833060	 add         r3, r3, #0x60
  0301c	e5d33000	 ldrb        r3, [r3]
  03020	e54b30f4	 strb        r3, [r11, #-0xF4]

; 1024 :             DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("IOCTL_USBOTG_REQUEST_STOP\r\n")));

  03024	e59f3770	 ldr         r3, [pc, #0x770]
  03028	e5933440	 ldr         r3, [r3, #0x440]
  0302c	e3130a02	 tst         r3, #2, 20
  03030	0a000004	 beq         |$LN105@IOControl|
  03034	e59f0798	 ldr         r0, [pc, #0x798]
  03038	eb000000	 bl          NKDbgPrintfW
  0303c	e3a03001	 mov         r3, #1
  03040	e50b3060	 str         r3, [r11, #-0x60]
  03044	ea000001	 b           |$LN106@IOControl|
  03048		 |$LN105@IOControl|
  03048	e3a03000	 mov         r3, #0
  0304c	e50b3060	 str         r3, [r11, #-0x60]
  03050		 |$LN106@IOControl|

; 1025 :             EnterCriticalSection(&m_pOTG->regCS);

  03050	e59b3000	 ldr         r3, [r11]
  03054	e2833e15	 add         r3, r3, #0x15, 28
  03058	e5933000	 ldr         r3, [r3]
  0305c	e2830038	 add         r0, r3, #0x38
  03060	eb000000	 bl          EnterCriticalSection

; 1026 :             m_bExtendOTGSuspend = TRUE;

  03064	e59b3000	 ldr         r3, [r11]
  03068	e2832f61	 add         r2, r3, #0x61, 30
  0306c	e3a03001	 mov         r3, #1
  03070	e5823000	 str         r3, [r2]

; 1027 :             if((DevCtl&DEVCTL_B_DEVICE) != DEVCTL_B_DEVICE)

  03074	e55b30f4	 ldrb        r3, [r11, #-0xF4]
  03078	e2033080	 and         r3, r3, #0x80
  0307c	e3530080	 cmp         r3, #0x80
  03080	0a00000c	 beq         |$LN11@IOControl|

; 1028 :             {
; 1029 :                 if ((DevCtl & DEVCTL_SESSION) == DEVCTL_SESSION)

  03084	e55b30f4	 ldrb        r3, [r11, #-0xF4]
  03088	e2033001	 and         r3, r3, #1
  0308c	e3530001	 cmp         r3, #1
  03090	1a000008	 bne         |$LN10@IOControl|

; 1030 :                     SessionRequest(FALSE, FALSE);

  03094	e3a02000	 mov         r2, #0
  03098	e3a01000	 mov         r1, #0
  0309c	e59b3000	 ldr         r3, [r11]
  030a0	e5933000	 ldr         r3, [r3]
  030a4	e2833084	 add         r3, r3, #0x84
  030a8	e59b0000	 ldr         r0, [r11]
  030ac	e5933000	 ldr         r3, [r3]
  030b0	e1a0e00f	 mov         lr, pc
  030b4	e12fff13	 bx          r3
  030b8		 |$LN10@IOControl|
  030b8		 |$LN11@IOControl|

; 1031 :             }
; 1032 :             CLRREG8(&m_pOTG->pUsbGenRegs->Power, POWER_SOFTCONN);

  030b8	e59b3000	 ldr         r3, [r11]
  030bc	e2833e15	 add         r3, r3, #0x15, 28
  030c0	e5933000	 ldr         r3, [r3]
  030c4	e2833020	 add         r3, r3, #0x20
  030c8	e5933000	 ldr         r3, [r3]
  030cc	e2833001	 add         r3, r3, #1
  030d0	e5d33000	 ldrb        r3, [r3]
  030d4	e1a02003	 mov         r2, r3
  030d8	e3e03040	 mvn         r3, #0x40
  030dc	e0023003	 and         r3, r2, r3
  030e0	e20320ff	 and         r2, r3, #0xFF
  030e4	e59b3000	 ldr         r3, [r11]
  030e8	e2833e15	 add         r3, r3, #0x15, 28
  030ec	e5933000	 ldr         r3, [r3]
  030f0	e2833020	 add         r3, r3, #0x20
  030f4	e5933000	 ldr         r3, [r3]
  030f8	e2833001	 add         r3, r3, #1
  030fc	e5c32000	 strb        r2, [r3]

; 1033 :             LeaveCriticalSection(&m_pOTG->regCS);

  03100	e59b3000	 ldr         r3, [r11]
  03104	e2833e15	 add         r3, r3, #0x15, 28
  03108	e5933000	 ldr         r3, [r3]
  0310c	e2830038	 add         r0, r3, #0x38
  03110	eb000000	 bl          LeaveCriticalSection

; 1034 :             if (rc == TRUE)

  03114	e51b3108	 ldr         r3, [r11, #-0x108]
  03118	e3530001	 cmp         r3, #1
  0311c	1a000006	 bne         |$LN9@IOControl|

; 1035 :                 StopUSBClock();

  03120	e59b3000	 ldr         r3, [r11]
  03124	e5933000	 ldr         r3, [r3]
  03128	e28330e8	 add         r3, r3, #0xE8
  0312c	e59b0000	 ldr         r0, [r11]
  03130	e5933000	 ldr         r3, [r3]
  03134	e1a0e00f	 mov         lr, pc
  03138	e12fff13	 bx          r3
  0313c		 |$LN9@IOControl|

; 1036 :         }
; 1037 :             break;

  0313c	ea00017b	 b           |$LN57@IOControl|
  03140		 |$LN8@IOControl|

; 1038 : 
; 1039 :         case IOCTL_USBOTG_REQUEST_SESSION_QUERY:
; 1040 :         {
; 1041 :             DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Query:\r\n")));

  03140	e59f3654	 ldr         r3, [pc, #0x654]
  03144	e5933440	 ldr         r3, [r3, #0x440]
  03148	e3130a02	 tst         r3, #2, 20
  0314c	0a000004	 beq         |$LN107@IOControl|
  03150	e59f0678	 ldr         r0, [pc, #0x678]
  03154	eb000000	 bl          NKDbgPrintfW
  03158	e3a03001	 mov         r3, #1
  0315c	e50b305c	 str         r3, [r11, #-0x5C]
  03160	ea000001	 b           |$LN108@IOControl|
  03164		 |$LN107@IOControl|
  03164	e3a03000	 mov         r3, #0
  03168	e50b305c	 str         r3, [r11, #-0x5C]
  0316c		 |$LN108@IOControl|

; 1042 :             rc = StartUSBClock(TRUE);

  0316c	e3a01001	 mov         r1, #1
  03170	e59b3000	 ldr         r3, [r11]
  03174	e5933000	 ldr         r3, [r3]
  03178	e28330e4	 add         r3, r3, #0xE4
  0317c	e59b0000	 ldr         r0, [r11]
  03180	e5933000	 ldr         r3, [r3]
  03184	e1a0e00f	 mov         lr, pc
  03188	e12fff13	 bx          r3
  0318c	e50b0058	 str         r0, [r11, #-0x58]
  03190	e51b3058	 ldr         r3, [r11, #-0x58]
  03194	e50b3108	 str         r3, [r11, #-0x108]

; 1043 :             EnterCriticalSection(&m_pOTG->regCS);

  03198	e59b3000	 ldr         r3, [r11]
  0319c	e2833e15	 add         r3, r3, #0x15, 28
  031a0	e5933000	 ldr         r3, [r3]
  031a4	e2830038	 add         r0, r3, #0x38
  031a8	eb000000	 bl          EnterCriticalSection

; 1044 :             DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("DevCtl = 0x%x\r\n"), INREG8(&m_pOTG->pUsbGenRegs->DevCtl)));

  031ac	e59f35e8	 ldr         r3, [pc, #0x5E8]
  031b0	e5933440	 ldr         r3, [r3, #0x440]
  031b4	e3130a02	 tst         r3, #2, 20
  031b8	0a00000c	 beq         |$LN109@IOControl|
  031bc	e59b3000	 ldr         r3, [r11]
  031c0	e2833e15	 add         r3, r3, #0x15, 28
  031c4	e5933000	 ldr         r3, [r3]
  031c8	e2833020	 add         r3, r3, #0x20
  031cc	e5933000	 ldr         r3, [r3]
  031d0	e2833060	 add         r3, r3, #0x60
  031d4	e5d33000	 ldrb        r3, [r3]
  031d8	e1a01003	 mov         r1, r3
  031dc	e59f05e8	 ldr         r0, [pc, #0x5E8]
  031e0	eb000000	 bl          NKDbgPrintfW
  031e4	e3a03001	 mov         r3, #1
  031e8	e50b3054	 str         r3, [r11, #-0x54]
  031ec	ea000001	 b           |$LN110@IOControl|
  031f0		 |$LN109@IOControl|
  031f0	e3a03000	 mov         r3, #0
  031f4	e50b3054	 str         r3, [r11, #-0x54]
  031f8		 |$LN110@IOControl|

; 1045 :             DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Power  = 0x%x\r\n"), INREG8(&m_pOTG->pUsbGenRegs->Power)));

  031f8	e59f359c	 ldr         r3, [pc, #0x59C]
  031fc	e5933440	 ldr         r3, [r3, #0x440]
  03200	e3130a02	 tst         r3, #2, 20
  03204	0a00000c	 beq         |$LN111@IOControl|
  03208	e59b3000	 ldr         r3, [r11]
  0320c	e2833e15	 add         r3, r3, #0x15, 28
  03210	e5933000	 ldr         r3, [r3]
  03214	e2833020	 add         r3, r3, #0x20
  03218	e5933000	 ldr         r3, [r3]
  0321c	e2833001	 add         r3, r3, #1
  03220	e5d33000	 ldrb        r3, [r3]
  03224	e1a01003	 mov         r1, r3
  03228	e59f0598	 ldr         r0, [pc, #0x598]
  0322c	eb000000	 bl          NKDbgPrintfW
  03230	e3a03001	 mov         r3, #1
  03234	e50b3050	 str         r3, [r11, #-0x50]
  03238	ea000001	 b           |$LN112@IOControl|
  0323c		 |$LN111@IOControl|
  0323c	e3a03000	 mov         r3, #0
  03240	e50b3050	 str         r3, [r11, #-0x50]
  03244		 |$LN112@IOControl|

; 1046 : #ifdef DEBUG
; 1047 :             UCHAR devctl = INREG8(&m_pOTG->pUsbGenRegs->DevCtl);

  03244	e59b3000	 ldr         r3, [r11]
  03248	e2833e15	 add         r3, r3, #0x15, 28
  0324c	e5933000	 ldr         r3, [r3]
  03250	e2833020	 add         r3, r3, #0x20
  03254	e5933000	 ldr         r3, [r3]
  03258	e2833060	 add         r3, r3, #0x60
  0325c	e5d33000	 ldrb        r3, [r3]
  03260	e54b30f2	 strb        r3, [r11, #-0xF2]

; 1048 : 			UCHAR vbus = (devctl & DEVCTL_VBUS) >> 3;

  03264	e55b30f2	 ldrb        r3, [r11, #-0xF2]
  03268	e2033018	 and         r3, r3, #0x18
  0326c	e1a031c3	 mov         r3, r3, asr #3
  03270	e20330ff	 and         r3, r3, #0xFF
  03274	e54b30f3	 strb        r3, [r11, #-0xF3]

; 1049 :             DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("VBus = 0x%x\r\n"), vbus));

  03278	e59f351c	 ldr         r3, [pc, #0x51C]
  0327c	e5933440	 ldr         r3, [r3, #0x440]
  03280	e3130a02	 tst         r3, #2, 20
  03284	0a000006	 beq         |$LN113@IOControl|
  03288	e55b30f3	 ldrb        r3, [r11, #-0xF3]
  0328c	e1a01003	 mov         r1, r3
  03290	e59f052c	 ldr         r0, [pc, #0x52C]
  03294	eb000000	 bl          NKDbgPrintfW
  03298	e3a03001	 mov         r3, #1
  0329c	e50b304c	 str         r3, [r11, #-0x4C]
  032a0	ea000001	 b           |$LN114@IOControl|
  032a4		 |$LN113@IOControl|
  032a4	e3a03000	 mov         r3, #0
  032a8	e50b304c	 str         r3, [r11, #-0x4C]
  032ac		 |$LN114@IOControl|

; 1050 : #endif
; 1051 :             LeaveCriticalSection(&m_pOTG->regCS);

  032ac	e59b3000	 ldr         r3, [r11]
  032b0	e2833e15	 add         r3, r3, #0x15, 28
  032b4	e5933000	 ldr         r3, [r3]
  032b8	e2830038	 add         r0, r3, #0x38
  032bc	eb000000	 bl          LeaveCriticalSection

; 1052 :             bReturn = TRUE;

  032c0	e3a03001	 mov         r3, #1
  032c4	e50b3104	 str         r3, [r11, #-0x104]

; 1053 :             if (rc == TRUE)

  032c8	e51b3108	 ldr         r3, [r11, #-0x108]
  032cc	e3530001	 cmp         r3, #1
  032d0	1a000006	 bne         |$LN7@IOControl|

; 1054 :                 StopUSBClock();

  032d4	e59b3000	 ldr         r3, [r11]
  032d8	e5933000	 ldr         r3, [r3]
  032dc	e28330e8	 add         r3, r3, #0xE8
  032e0	e59b0000	 ldr         r0, [r11]
  032e4	e5933000	 ldr         r3, [r3]
  032e8	e1a0e00f	 mov         lr, pc
  032ec	e12fff13	 bx          r3
  032f0		 |$LN7@IOControl|

; 1055 :         }
; 1056 :         break;

  032f0	ea00010e	 b           |$LN57@IOControl|
  032f4		 |$LN6@IOControl|

; 1057 : 
; 1058 :         case IOCTL_USBOTG_DUMP_ULPI_REG:
; 1059 :             rc = StartUSBClock(TRUE);

  032f4	e3a01001	 mov         r1, #1
  032f8	e59b3000	 ldr         r3, [r11]
  032fc	e5933000	 ldr         r3, [r3]
  03300	e28330e4	 add         r3, r3, #0xE4
  03304	e59b0000	 ldr         r0, [r11]
  03308	e5933000	 ldr         r3, [r3]
  0330c	e1a0e00f	 mov         lr, pc
  03310	e12fff13	 bx          r3
  03314	e50b0048	 str         r0, [r11, #-0x48]
  03318	e51b3048	 ldr         r3, [r11, #-0x48]
  0331c	e50b3108	 str         r3, [r11, #-0x108]

; 1060 : 
; 1061 :             DEBUGMSG(ZONE_OTG_INFO, (TEXT("Power = 0x%x\r\n"), m_pOTG->pUsbGenRegs->Power));

  03320	e59f3474	 ldr         r3, [pc, #0x474]
  03324	e5933440	 ldr         r3, [r3, #0x440]
  03328	e3130a01	 tst         r3, #1, 20
  0332c	0a00000c	 beq         |$LN115@IOControl|
  03330	e59b3000	 ldr         r3, [r11]
  03334	e2833e15	 add         r3, r3, #0x15, 28
  03338	e5933000	 ldr         r3, [r3]
  0333c	e2833020	 add         r3, r3, #0x20
  03340	e5933000	 ldr         r3, [r3]
  03344	e2833001	 add         r3, r3, #1
  03348	e5d33000	 ldrb        r3, [r3]
  0334c	e1a01003	 mov         r1, r3
  03350	e59f0450	 ldr         r0, [pc, #0x450]
  03354	eb000000	 bl          NKDbgPrintfW
  03358	e3a03001	 mov         r3, #1
  0335c	e50b3044	 str         r3, [r11, #-0x44]
  03360	ea000001	 b           |$LN116@IOControl|
  03364		 |$LN115@IOControl|
  03364	e3a03000	 mov         r3, #0
  03368	e50b3044	 str         r3, [r11, #-0x44]
  0336c		 |$LN116@IOControl|

; 1062 :             DEBUGMSG(ZONE_OTG_INFO, (TEXT("Dump ULPI Reg\r\n")));

  0336c	e59f3428	 ldr         r3, [pc, #0x428]
  03370	e5933440	 ldr         r3, [r3, #0x440]
  03374	e3130a01	 tst         r3, #1, 20
  03378	0a000004	 beq         |$LN117@IOControl|
  0337c	e59f043c	 ldr         r0, [pc, #0x43C]
  03380	eb000000	 bl          NKDbgPrintfW
  03384	e3a03001	 mov         r3, #1
  03388	e50b3040	 str         r3, [r11, #-0x40]
  0338c	ea000001	 b           |$LN118@IOControl|
  03390		 |$LN117@IOControl|
  03390	e3a03000	 mov         r3, #0
  03394	e50b3040	 str         r3, [r11, #-0x40]
  03398		 |$LN118@IOControl|

; 1063 :             DEBUGMSG(ZONE_OTG_INFO, (TEXT("ULPIVBusControl = 0x%x\r\n"), INREG8(&m_pOTG->pUsbGenRegs->ulpi_regs.ULPIVbusControl)));

  03398	e59f33fc	 ldr         r3, [pc, #0x3FC]
  0339c	e5933440	 ldr         r3, [r3, #0x440]
  033a0	e3130a01	 tst         r3, #1, 20
  033a4	0a00000c	 beq         |$LN119@IOControl|
  033a8	e59b3000	 ldr         r3, [r11]
  033ac	e2833e15	 add         r3, r3, #0x15, 28
  033b0	e5933000	 ldr         r3, [r3]
  033b4	e2833020	 add         r3, r3, #0x20
  033b8	e5933000	 ldr         r3, [r3]
  033bc	e2833070	 add         r3, r3, #0x70
  033c0	e5d33000	 ldrb        r3, [r3]
  033c4	e1a01003	 mov         r1, r3
  033c8	e59f03ec	 ldr         r0, [pc, #0x3EC]
  033cc	eb000000	 bl          NKDbgPrintfW
  033d0	e3a03001	 mov         r3, #1
  033d4	e50b303c	 str         r3, [r11, #-0x3C]
  033d8	ea000001	 b           |$LN120@IOControl|
  033dc		 |$LN119@IOControl|
  033dc	e3a03000	 mov         r3, #0
  033e0	e50b303c	 str         r3, [r11, #-0x3C]
  033e4		 |$LN120@IOControl|

; 1064 :             DEBUGMSG(ZONE_OTG_INFO, (TEXT("ULPICarKitControl = 0x%x\r\n"), INREG8(&m_pOTG->pUsbGenRegs->ulpi_regs.ULPICarKitControl)));

  033e4	e59f33b0	 ldr         r3, [pc, #0x3B0]
  033e8	e5933440	 ldr         r3, [r3, #0x440]
  033ec	e3130a01	 tst         r3, #1, 20
  033f0	0a00000c	 beq         |$LN121@IOControl|
  033f4	e59b3000	 ldr         r3, [r11]
  033f8	e2833e15	 add         r3, r3, #0x15, 28
  033fc	e5933000	 ldr         r3, [r3]
  03400	e2833020	 add         r3, r3, #0x20
  03404	e5933000	 ldr         r3, [r3]
  03408	e2833071	 add         r3, r3, #0x71
  0340c	e5d33000	 ldrb        r3, [r3]
  03410	e1a01003	 mov         r1, r3
  03414	e59f039c	 ldr         r0, [pc, #0x39C]
  03418	eb000000	 bl          NKDbgPrintfW
  0341c	e3a03001	 mov         r3, #1
  03420	e50b3038	 str         r3, [r11, #-0x38]
  03424	ea000001	 b           |$LN122@IOControl|
  03428		 |$LN121@IOControl|
  03428	e3a03000	 mov         r3, #0
  0342c	e50b3038	 str         r3, [r11, #-0x38]
  03430		 |$LN122@IOControl|

; 1065 :             DEBUGMSG(ZONE_OTG_INFO, (TEXT("ULPIIntMask = 0x%x\r\n"), INREG8(&m_pOTG->pUsbGenRegs->ulpi_regs.ULPIIntMask)));

  03430	e59f3364	 ldr         r3, [pc, #0x364]
  03434	e5933440	 ldr         r3, [r3, #0x440]
  03438	e3130a01	 tst         r3, #1, 20
  0343c	0a00000c	 beq         |$LN123@IOControl|
  03440	e59b3000	 ldr         r3, [r11]
  03444	e2833e15	 add         r3, r3, #0x15, 28
  03448	e5933000	 ldr         r3, [r3]
  0344c	e2833020	 add         r3, r3, #0x20
  03450	e5933000	 ldr         r3, [r3]
  03454	e2833072	 add         r3, r3, #0x72
  03458	e5d33000	 ldrb        r3, [r3]
  0345c	e1a01003	 mov         r1, r3
  03460	e59f034c	 ldr         r0, [pc, #0x34C]
  03464	eb000000	 bl          NKDbgPrintfW
  03468	e3a03001	 mov         r3, #1
  0346c	e50b3034	 str         r3, [r11, #-0x34]
  03470	ea000001	 b           |$LN124@IOControl|
  03474		 |$LN123@IOControl|
  03474	e3a03000	 mov         r3, #0
  03478	e50b3034	 str         r3, [r11, #-0x34]
  0347c		 |$LN124@IOControl|

; 1066 :             DEBUGMSG(ZONE_OTG_INFO, (TEXT("ULPIIntSrc = 0x%x\r\n"), INREG8(&m_pOTG->pUsbGenRegs->ulpi_regs.ULPIIntSrc)));        

  0347c	e59f3318	 ldr         r3, [pc, #0x318]
  03480	e5933440	 ldr         r3, [r3, #0x440]
  03484	e3130a01	 tst         r3, #1, 20
  03488	0a00000c	 beq         |$LN125@IOControl|
  0348c	e59b3000	 ldr         r3, [r11]
  03490	e2833e15	 add         r3, r3, #0x15, 28
  03494	e5933000	 ldr         r3, [r3]
  03498	e2833020	 add         r3, r3, #0x20
  0349c	e5933000	 ldr         r3, [r3]
  034a0	e2833073	 add         r3, r3, #0x73
  034a4	e5d33000	 ldrb        r3, [r3]
  034a8	e1a01003	 mov         r1, r3
  034ac	e59f02fc	 ldr         r0, [pc, #0x2FC]
  034b0	eb000000	 bl          NKDbgPrintfW
  034b4	e3a03001	 mov         r3, #1
  034b8	e50b3030	 str         r3, [r11, #-0x30]
  034bc	ea000001	 b           |$LN126@IOControl|
  034c0		 |$LN125@IOControl|
  034c0	e3a03000	 mov         r3, #0
  034c4	e50b3030	 str         r3, [r11, #-0x30]
  034c8		 |$LN126@IOControl|

; 1067 :             DEBUGMSG(ZONE_OTG_INFO, (TEXT("ULPIRawData = 0x%x\r\n"), INREG8(&m_pOTG->pUsbGenRegs->ulpi_regs.ULPIRawData)));

  034c8	e59f32cc	 ldr         r3, [pc, #0x2CC]
  034cc	e5933440	 ldr         r3, [r3, #0x440]
  034d0	e3130a01	 tst         r3, #1, 20
  034d4	0a00000c	 beq         |$LN127@IOControl|
  034d8	e59b3000	 ldr         r3, [r11]
  034dc	e2833e15	 add         r3, r3, #0x15, 28
  034e0	e5933000	 ldr         r3, [r3]
  034e4	e2833020	 add         r3, r3, #0x20
  034e8	e5933000	 ldr         r3, [r3]
  034ec	e2833077	 add         r3, r3, #0x77
  034f0	e5d33000	 ldrb        r3, [r3]
  034f4	e1a01003	 mov         r1, r3
  034f8	e59f02ac	 ldr         r0, [pc, #0x2AC]
  034fc	eb000000	 bl          NKDbgPrintfW
  03500	e3a03001	 mov         r3, #1
  03504	e50b302c	 str         r3, [r11, #-0x2C]
  03508	ea000001	 b           |$LN128@IOControl|
  0350c		 |$LN127@IOControl|
  0350c	e3a03000	 mov         r3, #0
  03510	e50b302c	 str         r3, [r11, #-0x2C]
  03514		 |$LN128@IOControl|

; 1068 :             m_pTransceiver->DumpULPIRegs();

  03514	e59b3000	 ldr         r3, [r11]
  03518	e28330fc	 add         r3, r3, #0xFC
  0351c	e5932000	 ldr         r2, [r3]
  03520	e59b3000	 ldr         r3, [r11]
  03524	e28330fc	 add         r3, r3, #0xFC
  03528	e5930000	 ldr         r0, [r3]
  0352c	e5923000	 ldr         r3, [r2]
  03530	e2833020	 add         r3, r3, #0x20
  03534	e5933000	 ldr         r3, [r3]
  03538	e1a0e00f	 mov         lr, pc
  0353c	e12fff13	 bx          r3

; 1069 :             bReturn = TRUE;

  03540	e3a03001	 mov         r3, #1
  03544	e50b3104	 str         r3, [r11, #-0x104]

; 1070 :             if (rc == TRUE)

  03548	e51b3108	 ldr         r3, [r11, #-0x108]
  0354c	e3530001	 cmp         r3, #1
  03550	1a000006	 bne         |$LN5@IOControl|

; 1071 :                 StopUSBClock();

  03554	e59b3000	 ldr         r3, [r11]
  03558	e5933000	 ldr         r3, [r3]
  0355c	e28330e8	 add         r3, r3, #0xE8
  03560	e59b0000	 ldr         r0, [r11]
  03564	e5933000	 ldr         r3, [r3]
  03568	e1a0e00f	 mov         lr, pc
  0356c	e12fff13	 bx          r3
  03570		 |$LN5@IOControl|

; 1072 :             break;

  03570	ea00006e	 b           |$LN57@IOControl|
  03574		 |$LN4@IOControl|

; 1073 : 
; 1074 :         case IOCTL_USBOTG_ULPI_SET_LOW_POWER_MODE:
; 1075 :             rc = StartUSBClock(TRUE);

  03574	e3a01001	 mov         r1, #1
  03578	e59b3000	 ldr         r3, [r11]
  0357c	e5933000	 ldr         r3, [r3]
  03580	e28330e4	 add         r3, r3, #0xE4
  03584	e59b0000	 ldr         r0, [r11]
  03588	e5933000	 ldr         r3, [r3]
  0358c	e1a0e00f	 mov         lr, pc
  03590	e12fff13	 bx          r3
  03594	e50b0028	 str         r0, [r11, #-0x28]
  03598	e51b3028	 ldr         r3, [r11, #-0x28]
  0359c	e50b3108	 str         r3, [r11, #-0x108]

; 1076 :             DEBUGMSG(ZONE_OTG_INFO, (TEXT("Power = 0x%x\r\n"), m_pOTG->pUsbGenRegs->Power));

  035a0	e59f31f4	 ldr         r3, [pc, #0x1F4]
  035a4	e5933440	 ldr         r3, [r3, #0x440]
  035a8	e3130a01	 tst         r3, #1, 20
  035ac	0a00000c	 beq         |$LN129@IOControl|
  035b0	e59b3000	 ldr         r3, [r11]
  035b4	e2833e15	 add         r3, r3, #0x15, 28
  035b8	e5933000	 ldr         r3, [r3]
  035bc	e2833020	 add         r3, r3, #0x20
  035c0	e5933000	 ldr         r3, [r3]
  035c4	e2833001	 add         r3, r3, #1
  035c8	e5d33000	 ldrb        r3, [r3]
  035cc	e1a01003	 mov         r1, r3
  035d0	e59f01d0	 ldr         r0, [pc, #0x1D0]
  035d4	eb000000	 bl          NKDbgPrintfW
  035d8	e3a03001	 mov         r3, #1
  035dc	e50b3024	 str         r3, [r11, #-0x24]
  035e0	ea000001	 b           |$LN130@IOControl|
  035e4		 |$LN129@IOControl|
  035e4	e3a03000	 mov         r3, #0
  035e8	e50b3024	 str         r3, [r11, #-0x24]
  035ec		 |$LN130@IOControl|

; 1077 :             DEBUGMSG(ZONE_OTG_INFO, (TEXT("Set Low Power Mode\r\n")));

  035ec	e59f31a8	 ldr         r3, [pc, #0x1A8]
  035f0	e5933440	 ldr         r3, [r3, #0x440]
  035f4	e3130a01	 tst         r3, #1, 20
  035f8	0a000004	 beq         |$LN131@IOControl|
  035fc	e59f01a0	 ldr         r0, [pc, #0x1A0]
  03600	eb000000	 bl          NKDbgPrintfW
  03604	e3a03001	 mov         r3, #1
  03608	e50b3020	 str         r3, [r11, #-0x20]
  0360c	ea000001	 b           |$LN132@IOControl|
  03610		 |$LN131@IOControl|
  03610	e3a03000	 mov         r3, #0
  03614	e50b3020	 str         r3, [r11, #-0x20]
  03618		 |$LN132@IOControl|

; 1078 :             bReturn = m_pTransceiver->SetLowPowerMode();

  03618	e59b3000	 ldr         r3, [r11]
  0361c	e28330fc	 add         r3, r3, #0xFC
  03620	e5932000	 ldr         r2, [r3]
  03624	e59b3000	 ldr         r3, [r11]
  03628	e28330fc	 add         r3, r3, #0xFC
  0362c	e5930000	 ldr         r0, [r3]
  03630	e5923000	 ldr         r3, [r2]
  03634	e2833018	 add         r3, r3, #0x18
  03638	e5933000	 ldr         r3, [r3]
  0363c	e1a0e00f	 mov         lr, pc
  03640	e12fff13	 bx          r3
  03644	e50b001c	 str         r0, [r11, #-0x1C]
  03648	e51b301c	 ldr         r3, [r11, #-0x1C]
  0364c	e50b3104	 str         r3, [r11, #-0x104]

; 1079 :             if (rc == TRUE)

  03650	e51b3108	 ldr         r3, [r11, #-0x108]
  03654	e3530001	 cmp         r3, #1
  03658	1a000006	 bne         |$LN3@IOControl|

; 1080 :                 StopUSBClock();

  0365c	e59b3000	 ldr         r3, [r11]
  03660	e5933000	 ldr         r3, [r3]
  03664	e28330e8	 add         r3, r3, #0xE8
  03668	e59b0000	 ldr         r0, [r11]
  0366c	e5933000	 ldr         r3, [r3]
  03670	e1a0e00f	 mov         lr, pc
  03674	e12fff13	 bx          r3
  03678		 |$LN3@IOControl|

; 1081 :             break;

  03678	ea00002c	 b           |$LN57@IOControl|
  0367c		 |$LN2@IOControl|

; 1082 : 
; 1083 :         case IOCTL_CONTEXT_RESTORE:
; 1084 :             DEBUGMSG(ZONE_OTG_INFO, (TEXT("USB OTG context restore\r\n")));

  0367c	e59f3118	 ldr         r3, [pc, #0x118]
  03680	e5933440	 ldr         r3, [r3, #0x440]
  03684	e3130a01	 tst         r3, #1, 20
  03688	0a000004	 beq         |$LN133@IOControl|
  0368c	e59f010c	 ldr         r0, [pc, #0x10C]
  03690	eb000000	 bl          NKDbgPrintfW
  03694	e3a03001	 mov         r3, #1
  03698	e50b3018	 str         r3, [r11, #-0x18]
  0369c	ea000001	 b           |$LN134@IOControl|
  036a0		 |$LN133@IOControl|
  036a0	e3a03000	 mov         r3, #0
  036a4	e50b3018	 str         r3, [r11, #-0x18]
  036a8		 |$LN134@IOControl|

; 1085 :             ContextRestore();

  036a8	e59b3000	 ldr         r3, [r11]
  036ac	e5933000	 ldr         r3, [r3]
  036b0	e2833c01	 add         r3, r3, #1, 24
  036b4	e59b0000	 ldr         r0, [r11]
  036b8	e5933000	 ldr         r3, [r3]
  036bc	e1a0e00f	 mov         lr, pc
  036c0	e12fff13	 bx          r3

; 1086 :             break;

  036c4	ea000019	 b           |$LN57@IOControl|
  036c8		 |$LN1@IOControl|

; 1087 : 
; 1088 :         default:
; 1089 :             DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("USBOTG::IOControl (0x%x)\r\n"), dwCode));

  036c8	e59f30cc	 ldr         r3, [pc, #0xCC]
  036cc	e5933440	 ldr         r3, [r3, #0x440]
  036d0	e3130a02	 tst         r3, #2, 20
  036d4	0a000005	 beq         |$LN135@IOControl|
  036d8	e59b1004	 ldr         r1, [r11, #4]
  036dc	e59f00b4	 ldr         r0, [pc, #0xB4]
  036e0	eb000000	 bl          NKDbgPrintfW
  036e4	e3a03001	 mov         r3, #1
  036e8	e50b3014	 str         r3, [r11, #-0x14]
  036ec	ea000001	 b           |$LN136@IOControl|
  036f0		 |$LN135@IOControl|
  036f0	e3a03000	 mov         r3, #0
  036f4	e50b3014	 str         r3, [r11, #-0x14]
  036f8		 |$LN136@IOControl|

; 1090 :             bReturn = USBOTG::IOControl(dwCode, pBufIn, dwLenIn, pBufOut, dwLenOut, pdwActualOut);

  036f8	e59b3018	 ldr         r3, [r11, #0x18]
  036fc	e58d3008	 str         r3, [sp, #8]
  03700	e59b3014	 ldr         r3, [r11, #0x14]
  03704	e58d3004	 str         r3, [sp, #4]
  03708	e59b3010	 ldr         r3, [r11, #0x10]
  0370c	e58d3000	 str         r3, [sp]
  03710	e59b300c	 ldr         r3, [r11, #0xC]
  03714	e59b2008	 ldr         r2, [r11, #8]
  03718	e59b1004	 ldr         r1, [r11, #4]
  0371c	e59b0000	 ldr         r0, [r11]
  03720	eb000000	 bl          |?IOControl@USBOTG@@UAAHKPAEK0KPAK@Z|
  03724	e50b0010	 str         r0, [r11, #-0x10]
  03728	e51b3010	 ldr         r3, [r11, #-0x10]
  0372c	e50b3104	 str         r3, [r11, #-0x104]
  03730		 |$LN57@IOControl|

; 1091 :     }
; 1092 : 
; 1093 :     return bReturn;

  03730	e51b3104	 ldr         r3, [r11, #-0x104]
  03734	e50b30e4	 str         r3, [r11, #-0xE4]
  03738		 |$LN141@IOControl|

; 1094 : }

  03738	e51b00e4	 ldr         r0, [r11, #-0xE4]
  0373c	e24bd00c	 sub         sp, r11, #0xC
  03740	e89d6800	 ldmia       sp, {r11, sp, lr}
  03744	e12fff1e	 bx          lr

			 ENDP  ; |?IOControl@OMAPMHSUSBOTG@@UAAHKPAEK0KPAK@Z|, OMAPMHSUSBOTG::IOControl

  03748		 |$LN163@IOControl|
  03748		 |$LN175@IOControl|

; 868  :                 __except(EXCEPTION_EXECUTE_HANDLER)

  03748	e52de004	 str         lr, [sp, #-4]!
  0374c	e24dd00c	 sub         sp, sp, #0xC
  03750		 |$LN166@IOControl|
  03750		 |$LN220@IOControl|
  03750	e3a00001	 mov         r0, #1
  03754		 |$LN165@IOControl|
  03754	e28dd00c	 add         sp, sp, #0xC
  03758	e49df004	 ldr         pc, [sp], #4
  0375c		 |$LN221@IOControl|
  0375c		 |$LN156@IOControl|
  0375c		 |$LN177@IOControl|

; 843  :                 __except(EXCEPTION_EXECUTE_HANDLER)

  0375c	e52de004	 str         lr, [sp, #-4]!
  03760	e24dd00c	 sub         sp, sp, #0xC
  03764		 |$LN159@IOControl|
  03764		 |$LN222@IOControl|
  03764	e3a00001	 mov         r0, #1
  03768		 |$LN158@IOControl|
  03768	e28dd00c	 add         sp, sp, #0xC
  0376c	e49df004	 ldr         pc, [sp], #4
  03770		 |$LN223@IOControl|
  03770		 |$LN149@IOControl|
  03770		 |$LN178@IOControl|

; 825  :                 __except(EXCEPTION_EXECUTE_HANDLER)

  03770	e52de004	 str         lr, [sp, #-4]!
  03774	e24dd00c	 sub         sp, sp, #0xC
  03778		 |$LN152@IOControl|
  03778		 |$LN224@IOControl|
  03778	e3a00001	 mov         r0, #1
  0377c		 |$LN151@IOControl|
  0377c	e28dd00c	 add         sp, sp, #0xC
  03780	e49df004	 ldr         pc, [sp], #4
  03784		 |$LN225@IOControl|
  03784		 |$LN142@IOControl|
  03784		 |$LN179@IOControl|

; 796  :                 __except(EXCEPTION_EXECUTE_HANDLER)

  03784	e52de004	 str         lr, [sp, #-4]!
  03788	e24dd00c	 sub         sp, sp, #0xC
  0378c		 |$LN145@IOControl|
  0378c		 |$LN226@IOControl|
  0378c	e3a00001	 mov         r0, #1
  03790		 |$LN144@IOControl|
  03790	e28dd00c	 add         sp, sp, #0xC
  03794	e49df004	 ldr         pc, [sp], #4
  03798		 |$LN228@IOControl|
  03798		 |$LN229@IOControl|
  03798	00000000	 DCD         |??_C@_1DG@GEBHLKBM@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0379c		 |$LN230@IOControl|
  0379c	00000000	 DCD         |dpCurSettings|
  037a0		 |$LN231@IOControl|
  037a0	00000000	 DCD         |??_C@_1DE@IFKDFDLP@?$AAU?$AAS?$AAB?$AA?5?$AAO?$AAT?$AAG?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?5?$AAr?$AAe?$AAs?$AAt?$AAo?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  037a4		 |$LN232@IOControl|
  037a4	00000000	 DCD         |??_C@_1CK@HGLFCCFI@?$AAS?$AAe?$AAt?$AA?5?$AAL?$AAo?$AAw?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  037a8		 |$LN233@IOControl|
  037a8	00000000	 DCD         |??_C@_1BO@IIOMMOE@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  037ac		 |$LN234@IOControl|
  037ac	00000000	 DCD         |??_C@_1CK@DOAJMGPO@?$AAU?$AAL?$AAP?$AAI?$AAR?$AAa?$AAw?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  037b0		 |$LN235@IOControl|
  037b0	00000000	 DCD         |??_C@_1CI@MBEEGFGF@?$AAU?$AAL?$AAP?$AAI?$AAI?$AAn?$AAt?$AAS?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  037b4		 |$LN236@IOControl|
  037b4	00000000	 DCD         |??_C@_1CK@DMGLGNCN@?$AAU?$AAL?$AAP?$AAI?$AAI?$AAn?$AAt?$AAM?$AAa?$AAs?$AAk?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  037b8		 |$LN237@IOControl|
  037b8	00000000	 DCD         |??_C@_1DG@LAHOLLAL@?$AAU?$AAL?$AAP?$AAI?$AAC?$AAa?$AAr?$AAK?$AAi?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  037bc		 |$LN238@IOControl|
  037bc	00000000	 DCD         |??_C@_1DC@DAPPMFGG@?$AAU?$AAL?$AAP?$AAI?$AAV?$AAB?$AAu?$AAs?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  037c0		 |$LN239@IOControl|
  037c0	00000000	 DCD         |??_C@_1CA@GCLIFPMK@?$AAD?$AAu?$AAm?$AAp?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAR?$AAe?$AAg?$AA?$AN?$AA?6?$AA?$AA@|
  037c4		 |$LN240@IOControl|
  037c4	00000000	 DCD         |??_C@_1BM@EBGAOIAL@?$AAV?$AAB?$AAu?$AAs?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  037c8		 |$LN241@IOControl|
  037c8	00000000	 DCD         |??_C@_1CA@MPKOEAON@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  037cc		 |$LN242@IOControl|
  037cc	00000000	 DCD         |??_C@_1CA@MNOFLILF@?$AAD?$AAe?$AAv?$AAC?$AAt?$AAl?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  037d0		 |$LN243@IOControl|
  037d0	00000000	 DCD         |??_C@_1BC@ELNKCIFG@?$AAQ?$AAu?$AAe?$AAr?$AAy?$AA?3?$AA?$AN?$AA?6?$AA?$AA@|
  037d4		 |$LN244@IOControl|
  037d4	00000000	 DCD         |??_C@_1DI@LDEDCHMK@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAR?$AAE?$AAQ?$AAU?$AAE?$AAS?$AAT?$AA_?$AAS?$AAT?$AAO?$AAP?$AA?$AN?$AA?6?$AA?$AA@|
  037d8		 |$LN245@IOControl|
  037d8	00000000	 DCD         |??_C@_1DK@EBAKACPO@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAR?$AAE?$AAQ?$AAU?$AAE?$AAS?$AAT?$AA_?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?$AN?$AA?6?$AA?$AA@|
  037dc		 |$LN246@IOControl|
  037dc	00000000	 DCD         |??_C@_1EO@MHBFEEEL@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAR?$AAE?$AAQ?$AAU?$AAE?$AAS?$AAT?$AA_?$AAS?$AAE?$AAS?$AAS?$AAI?$AAO?$AAN?$AA_?$AAD?$AAI?$AAS@|
  037e0		 |$LN247@IOControl|
  037e0	00000000	 DCD         |??_C@_1FA@NGAIHPFD@?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AA?9?$AA?9?$AA?9?$AA?5?$AAs?$AAt?$AAi?$AAl?$AAl?$AA?5?$AAt?$AAr?$AAy?$AA?5?$AAt?$AAo?$AA?5@|
  037e4		 |$LN248@IOControl|
  037e4	00000000	 DCD         |??_C@_1GC@COMNPLIC@?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAl?$AAy?$AA?5?$AAe?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?0@|
  037e8		 |$LN249@IOControl|
  037e8	00000000	 DCD         |??_C@_1CC@GDLDECNO@?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  037ec		 |$LN250@IOControl|
  037ec	00000000	 DCD         |??_C@_1EI@BBFDJKGD@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAB?$AAi@|
  037f0		 |$LN251@IOControl|
  037f0	00000000	 DCD         |??_C@_1BM@BMIKOJJH@?$AAH?$AAo?$AAs?$AAt?$AA?5?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  037f4		 |$LN252@IOControl|
  037f4	00000000	 DCD         |??_C@_1EK@DDMAHJCE@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?5?$AAB@|
  037f8		 |$LN253@IOControl|
  037f8	00000000	 DCD         |??_C@_1BO@GLEBLFPN@?$AAH?$AAo?$AAs?$AAt?$AA?5?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  037fc		 |$LN227@IOControl|
  037fc		 |$LN180@IOControl|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T43572| DCD	|$LN5@ResetEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ResetEvent| PROC

; 223  : _inline BOOL ResetEvent(HANDLE h) {

  00000		 |$LN5@ResetEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M43569|

; 224  : 	return EventModify(h,EVENT_RESET);

  00010	e3a01002	 mov         r1, #2
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 225  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M43570|

			 ENDP  ; |ResetEvent|

	EXPORT	|??_C@_1EC@DKFCEIFJ@?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?5?$AAL?$AAo?$AAa?$AAd?$AAU?$AAn?$AAl?$AAo?$AAa?$AAd?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	IMPORT	|?LoadUnloadUSBFN@USBOTG@@UAAHH@Z|	; USBOTG::LoadUnloadUSBFN

  000a8			 AREA	 |.pdata|, PDATA
|$T43582| DCD	|$LN7@LoadUnload|
	DCD	0x40001d04
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbotg\otg.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@DKFCEIFJ@?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?5?$AAL?$AAo?$AAa?$AAd?$AAU?$AAn?$AAl?$AAo?$AAa?$AAd?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?$AN?$AA?6@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "M", 0x0, "H", 0x0, "S"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G"
	DCB	0x0, ":", 0x0, " ", 0x0, "L", 0x0, "o", 0x0, "a", 0x0, "d"
	DCB	0x0, "U", 0x0, "n", 0x0, "l", 0x0, "o", 0x0, "a", 0x0, "d"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "F", 0x0, "N", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  037fc			 AREA	 |.text|, CODE, ARM

  037fc		 |?LoadUnloadUSBFN@OMAPMHSUSBOTG@@UAAHH@Z| PROC ; OMAPMHSUSBOTG::LoadUnloadUSBFN

; 1114 : {

  037fc		 |$LN7@LoadUnload|
  037fc	e1a0c00d	 mov         r12, sp
  03800	e92d0003	 stmdb       sp!, {r0, r1}
  03804	e92d5000	 stmdb       sp!, {r12, lr}
  03808	e24dd010	 sub         sp, sp, #0x10
  0380c		 |$M43579|

; 1115 :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("OMAPMHSUSBOTG: LoadUnloadUSBFN\r\n")));

  0380c	e59f3058	 ldr         r3, [pc, #0x58]
  03810	e5933440	 ldr         r3, [r3, #0x440]
  03814	e3130a02	 tst         r3, #2, 20
  03818	0a000004	 beq         |$LN3@LoadUnload|
  0381c	e59f0044	 ldr         r0, [pc, #0x44]
  03820	eb000000	 bl          NKDbgPrintfW
  03824	e3a03001	 mov         r3, #1
  03828	e58d3008	 str         r3, [sp, #8]
  0382c	ea000001	 b           |$LN4@LoadUnload|
  03830		 |$LN3@LoadUnload|
  03830	e3a03000	 mov         r3, #0
  03834	e58d3008	 str         r3, [sp, #8]
  03838		 |$LN4@LoadUnload|

; 1116 :     BOOL bReturn = USBOTG::LoadUnloadUSBFN(fLoad);

  03838	e59d101c	 ldr         r1, [sp, #0x1C]
  0383c	e59d0018	 ldr         r0, [sp, #0x18]
  03840	eb000000	 bl          |?LoadUnloadUSBFN@USBOTG@@UAAHH@Z|
  03844	e58d000c	 str         r0, [sp, #0xC]
  03848	e59d300c	 ldr         r3, [sp, #0xC]
  0384c	e58d3000	 str         r3, [sp]

; 1117 :     return bReturn;

  03850	e59d3000	 ldr         r3, [sp]
  03854	e58d3004	 str         r3, [sp, #4]

; 1118 : }

  03858	e59d0004	 ldr         r0, [sp, #4]
  0385c	e28dd010	 add         sp, sp, #0x10
  03860	e89d6000	 ldmia       sp, {sp, lr}
  03864	e12fff1e	 bx          lr
  03868		 |$LN8@LoadUnload|
  03868		 |$LN9@LoadUnload|
  03868	00000000	 DCD         |??_C@_1EC@DKFCEIFJ@?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?5?$AAL?$AAo?$AAa?$AAd?$AAU?$AAn?$AAl?$AAo?$AAa?$AAd?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?$AN?$AA?6@|
  0386c		 |$LN10@LoadUnload|
  0386c	00000000	 DCD         |dpCurSettings|
  03870		 |$M43580|

			 ENDP  ; |?LoadUnloadUSBFN@OMAPMHSUSBOTG@@UAAHH@Z|, OMAPMHSUSBOTG::LoadUnloadUSBFN

	EXPORT	|??_C@_1CA@KEJCBCND@?$AAL?$AAo?$AAa?$AAd?$AAU?$AAn?$AAl?$AAo?$AAa?$AAd?$AAH?$AAC?$AAD?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|?LoadUnloadHCD@USBOTG@@UAAHH@Z|	; USBOTG::LoadUnloadHCD

  000b0			 AREA	 |.pdata|, PDATA
|$T43593| DCD	|$LN7@LoadUnload@2|
	DCD	0x40001d04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@KEJCBCND@?$AAL?$AAo?$AAa?$AAd?$AAU?$AAn?$AAl?$AAo?$AAa?$AAd?$AAH?$AAC?$AAD?$AA?$AN?$AA?6?$AA?$AA@| DCB "L"
	DCB	0x0, "o", 0x0, "a", 0x0, "d", 0x0, "U", 0x0, "n", 0x0, "l"
	DCB	0x0, "o", 0x0, "a", 0x0, "d", 0x0, "H", 0x0, "C", 0x0, "D"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  03870			 AREA	 |.text|, CODE, ARM

  03870		 |?LoadUnloadHCD@OMAPMHSUSBOTG@@UAAHH@Z| PROC ; OMAPMHSUSBOTG::LoadUnloadHCD

; 1138 : {

  03870		 |$LN7@LoadUnload@2|
  03870	e1a0c00d	 mov         r12, sp
  03874	e92d0003	 stmdb       sp!, {r0, r1}
  03878	e92d5000	 stmdb       sp!, {r12, lr}
  0387c	e24dd010	 sub         sp, sp, #0x10
  03880		 |$M43590|

; 1139 :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("LoadUnloadHCD\r\n")));

  03880	e59f3058	 ldr         r3, [pc, #0x58]
  03884	e5933440	 ldr         r3, [r3, #0x440]
  03888	e3130a02	 tst         r3, #2, 20
  0388c	0a000004	 beq         |$LN3@LoadUnload@2|
  03890	e59f0044	 ldr         r0, [pc, #0x44]
  03894	eb000000	 bl          NKDbgPrintfW
  03898	e3a03001	 mov         r3, #1
  0389c	e58d3008	 str         r3, [sp, #8]
  038a0	ea000001	 b           |$LN4@LoadUnload@2|
  038a4		 |$LN3@LoadUnload@2|
  038a4	e3a03000	 mov         r3, #0
  038a8	e58d3008	 str         r3, [sp, #8]
  038ac		 |$LN4@LoadUnload@2|

; 1140 :     BOOL bReturn = USBOTG::LoadUnloadHCD(fLoad);

  038ac	e59d101c	 ldr         r1, [sp, #0x1C]
  038b0	e59d0018	 ldr         r0, [sp, #0x18]
  038b4	eb000000	 bl          |?LoadUnloadHCD@USBOTG@@UAAHH@Z|
  038b8	e58d000c	 str         r0, [sp, #0xC]
  038bc	e59d300c	 ldr         r3, [sp, #0xC]
  038c0	e58d3000	 str         r3, [sp]

; 1141 :     return bReturn;

  038c4	e59d3000	 ldr         r3, [sp]
  038c8	e58d3004	 str         r3, [sp, #4]

; 1142 : }

  038cc	e59d0004	 ldr         r0, [sp, #4]
  038d0	e28dd010	 add         sp, sp, #0x10
  038d4	e89d6000	 ldmia       sp, {sp, lr}
  038d8	e12fff1e	 bx          lr
  038dc		 |$LN8@LoadUnload@2|
  038dc		 |$LN9@LoadUnload@2|
  038dc	00000000	 DCD         |??_C@_1CA@KEJCBCND@?$AAL?$AAo?$AAa?$AAd?$AAU?$AAn?$AAl?$AAo?$AAa?$AAd?$AAH?$AAC?$AAD?$AA?$AN?$AA?6?$AA?$AA@|
  038e0		 |$LN10@LoadUnload@2|
  038e0	00000000	 DCD         |dpCurSettings|
  038e4		 |$M43591|

			 ENDP  ; |?LoadUnloadHCD@OMAPMHSUSBOTG@@UAAHH@Z|, OMAPMHSUSBOTG::LoadUnloadHCD

	IMPORT	|?OTGUSBFNNotfyActive@USBOTG@@UAAHPBGH@Z| ; USBOTG::OTGUSBFNNotfyActive

  000b8			 AREA	 |.pdata|, PDATA
|$T43602| DCD	|$LN5@OTGUSBFNNo|
	DCD	0x40001104
; Function compile flags: /Odtp

  038e4			 AREA	 |.text|, CODE, ARM

  038e4		 |?OTGUSBFNNotfyActive@OMAPMHSUSBOTG@@UAAHPBGH@Z| PROC ; OMAPMHSUSBOTG::OTGUSBFNNotfyActive

; 1164 : { 

  038e4		 |$LN5@OTGUSBFNNo|
  038e4	e1a0c00d	 mov         r12, sp
  038e8	e92d0007	 stmdb       sp!, {r0 - r2}
  038ec	e92d5000	 stmdb       sp!, {r12, lr}
  038f0	e24dd00c	 sub         sp, sp, #0xC
  038f4		 |$M43599|

; 1165 :     // Work around needs this function. OTG can't set loc_conn before USBFN Ready.
; 1166 :     BOOL bReturn = USBOTG:: OTGUSBFNNotfyActive(lpDeviceName, fActive);

  038f4	e59d201c	 ldr         r2, [sp, #0x1C]
  038f8	e59d1018	 ldr         r1, [sp, #0x18]
  038fc	e59d0014	 ldr         r0, [sp, #0x14]
  03900	eb000000	 bl          |?OTGUSBFNNotfyActive@USBOTG@@UAAHPBGH@Z|
  03904	e58d0008	 str         r0, [sp, #8]
  03908	e59d3008	 ldr         r3, [sp, #8]
  0390c	e58d3000	 str         r3, [sp]

; 1167 :     return bReturn;

  03910	e59d3000	 ldr         r3, [sp]
  03914	e58d3004	 str         r3, [sp, #4]

; 1168 : }

  03918	e59d0004	 ldr         r0, [sp, #4]
  0391c	e28dd00c	 add         sp, sp, #0xC
  03920	e89d6000	 ldmia       sp, {sp, lr}
  03924	e12fff1e	 bx          lr
  03928		 |$M43600|

			 ENDP  ; |?OTGUSBFNNotfyActive@OMAPMHSUSBOTG@@UAAHPBGH@Z|, OMAPMHSUSBOTG::OTGUSBFNNotfyActive

	IMPORT	|?OTGHCDNotfyAccept@USBOTG@@UAAHPBGH@Z|	; USBOTG::OTGHCDNotfyAccept

  000c0			 AREA	 |.pdata|, PDATA
|$T43608| DCD	|$LN5@OTGHCDNotf|
	DCD	0x40001104
; Function compile flags: /Odtp

  03928			 AREA	 |.text|, CODE, ARM

  03928		 |?OTGHCDNotfyAccept@OMAPMHSUSBOTG@@UAAHPBGH@Z| PROC ; OMAPMHSUSBOTG::OTGHCDNotfyAccept

; 1190 : {

  03928		 |$LN5@OTGHCDNotf|
  03928	e1a0c00d	 mov         r12, sp
  0392c	e92d0007	 stmdb       sp!, {r0 - r2}
  03930	e92d5000	 stmdb       sp!, {r12, lr}
  03934	e24dd00c	 sub         sp, sp, #0xC
  03938		 |$M43605|

; 1191 :     BOOL bReturn = USBOTG:: OTGHCDNotfyAccept(lpDeviceName, fActive);

  03938	e59d201c	 ldr         r2, [sp, #0x1C]
  0393c	e59d1018	 ldr         r1, [sp, #0x18]
  03940	e59d0014	 ldr         r0, [sp, #0x14]
  03944	eb000000	 bl          |?OTGHCDNotfyAccept@USBOTG@@UAAHPBGH@Z|
  03948	e58d0008	 str         r0, [sp, #8]
  0394c	e59d3008	 ldr         r3, [sp, #8]
  03950	e58d3000	 str         r3, [sp]

; 1192 :     return bReturn;

  03954	e59d3000	 ldr         r3, [sp]
  03958	e58d3004	 str         r3, [sp, #4]

; 1193 : }

  0395c	e59d0004	 ldr         r0, [sp, #4]
  03960	e28dd00c	 add         sp, sp, #0xC
  03964	e89d6000	 ldmia       sp, {sp, lr}
  03968	e12fff1e	 bx          lr
  0396c		 |$M43606|

			 ENDP  ; |?OTGHCDNotfyAccept@OMAPMHSUSBOTG@@UAAHPBGH@Z|, OMAPMHSUSBOTG::OTGHCDNotfyAccept


  000c8			 AREA	 |.pdata|, PDATA
|$T43614| DCD	|$LN5@UsbOtgConf|
	DCD	0x40000c04
; Function compile flags: /Odtp

  0396c			 AREA	 |.text|, CODE, ARM

  0396c		 |?UsbOtgConfigure@OMAPMHSUSBOTG@@UAA?AW4USBOTG_MODE@@W42@@Z| PROC ; OMAPMHSUSBOTG::UsbOtgConfigure

; 1213 : {

  0396c		 |$LN5@UsbOtgConf|
  0396c	e1a0c00d	 mov         r12, sp
  03970	e92d0003	 stmdb       sp!, {r0, r1}
  03974	e92d5000	 stmdb       sp!, {r12, lr}
  03978	e24dd004	 sub         sp, sp, #4
  0397c		 |$M43611|

; 1214 :     usbOtgMode = USBOTG_Bidirection;

  0397c	e3a03001	 mov         r3, #1
  03980	e58d3010	 str         r3, [sp, #0x10]

; 1215 :     return usbOtgMode;

  03984	e59d3010	 ldr         r3, [sp, #0x10]
  03988	e58d3000	 str         r3, [sp]

; 1216 : }

  0398c	e59d0000	 ldr         r0, [sp]
  03990	e28dd004	 add         sp, sp, #4
  03994	e89d6000	 ldmia       sp, {sp, lr}
  03998	e12fff1e	 bx          lr
  0399c		 |$M43612|

			 ENDP  ; |?UsbOtgConfigure@OMAPMHSUSBOTG@@UAA?AW4USBOTG_MODE@@W42@@Z|, OMAPMHSUSBOTG::UsbOtgConfigure

	EXPORT	|??_C@_1DK@IMMNAKAH@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  000d0			 AREA	 |.pdata|, PDATA
|$T43630| DCD	|$LN16@UpdateInpu|
	DCD	0x40009204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@IMMNAKAH@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, ":"
	DCB	0x0, ":", 0x0, "U", 0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "I", 0x0, "n", 0x0, "p", 0x0, "u", 0x0, "t"
	DCB	0x0, " ", 0x0, "c", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  0399c			 AREA	 |.text|, CODE, ARM

  0399c		 |?UpdateInput@OMAPMHSUSBOTG@@UAAHXZ| PROC ; OMAPMHSUSBOTG::UpdateInput

; 1236 : {

  0399c		 |$LN16@UpdateInpu|
  0399c	e1a0c00d	 mov         r12, sp
  039a0	e92d0001	 stmdb       sp!, {r0}
  039a4	e92d5000	 stmdb       sp!, {r12, lr}
  039a8	e24dd024	 sub         sp, sp, #0x24
  039ac		 |$M43627|

; 1237 :     BOOL rc = FALSE;

  039ac	e3a03000	 mov         r3, #0
  039b0	e58d3004	 str         r3, [sp, #4]

; 1238 : 
; 1239 :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("USBOTG::UpdateInput called\r\n")));

  039b4	e59f3224	 ldr         r3, [pc, #0x224]
  039b8	e5933440	 ldr         r3, [r3, #0x440]
  039bc	e3130a02	 tst         r3, #2, 20
  039c0	0a000004	 beq         |$LN4@UpdateInpu|
  039c4	e59f0210	 ldr         r0, [pc, #0x210]
  039c8	eb000000	 bl          NKDbgPrintfW
  039cc	e3a03001	 mov         r3, #1
  039d0	e58d300c	 str         r3, [sp, #0xC]
  039d4	ea000001	 b           |$LN5@UpdateInpu|
  039d8		 |$LN4@UpdateInpu|
  039d8	e3a03000	 mov         r3, #0
  039dc	e58d300c	 str         r3, [sp, #0xC]
  039e0		 |$LN5@UpdateInpu|

; 1240 :     rc = StartUSBClock(TRUE);

  039e0	e3a01001	 mov         r1, #1
  039e4	e59d302c	 ldr         r3, [sp, #0x2C]
  039e8	e5933000	 ldr         r3, [r3]
  039ec	e28330e4	 add         r3, r3, #0xE4
  039f0	e59d002c	 ldr         r0, [sp, #0x2C]
  039f4	e5933000	 ldr         r3, [r3]
  039f8	e1a0e00f	 mov         lr, pc
  039fc	e12fff13	 bx          r3
  03a00	e58d0010	 str         r0, [sp, #0x10]
  03a04	e59d3010	 ldr         r3, [sp, #0x10]
  03a08	e58d3004	 str         r3, [sp, #4]

; 1241 :     UCHAR devctl = INREG8(&m_pOTG->pUsbGenRegs->DevCtl);

  03a0c	e59d302c	 ldr         r3, [sp, #0x2C]
  03a10	e2833e15	 add         r3, r3, #0x15, 28
  03a14	e5933000	 ldr         r3, [r3]
  03a18	e2833020	 add         r3, r3, #0x20
  03a1c	e5933000	 ldr         r3, [r3]
  03a20	e2833060	 add         r3, r3, #0x60
  03a24	e5d33000	 ldrb        r3, [r3]
  03a28	e5cd3001	 strb        r3, [sp, #1]

; 1242 :     UCHAR vbus = (devctl & DEVCTL_VBUS) >> 3;

  03a2c	e5dd3001	 ldrb        r3, [sp, #1]
  03a30	e2033018	 and         r3, r3, #0x18
  03a34	e1a031c3	 mov         r3, r3, asr #3
  03a38	e20330ff	 and         r3, r3, #0xFF
  03a3c	e5cd3000	 strb        r3, [sp]

; 1243 : 
; 1244 :     // Check the a_conn and b_conn
; 1245 :     //m_UsbOtgInput.bit.a_conn = (m_pOTG->operateMode == HOST_MODE)? 1:0;
; 1246 :     //m_UsbOtgInput.bit.b_conn = (m_pOTG->operateMode == DEVICE_MODE)? 1:0;
; 1247 :     // Read the Power register to determine the valid session
; 1248 :     //DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("VBus value = 0x%x\r\n")));
; 1249 :     // Dual Role B-Device 6.8.2    
; 1250 :     m_UsbOtgInput.bit.b_bus_req = ((devctl & DEVCTL_SESSION)?1:0);

  03a40	e5dd3001	 ldrb        r3, [sp, #1]
  03a44	e3130001	 tst         r3, #1
  03a48	0a000002	 beq         |$LN6@UpdateInpu|
  03a4c	e3a03001	 mov         r3, #1
  03a50	e58d3014	 str         r3, [sp, #0x14]
  03a54	ea000001	 b           |$LN7@UpdateInpu|
  03a58		 |$LN6@UpdateInpu|
  03a58	e3a03000	 mov         r3, #0
  03a5c	e58d3014	 str         r3, [sp, #0x14]
  03a60		 |$LN7@UpdateInpu|
  03a60	e59d302c	 ldr         r3, [sp, #0x2C]
  03a64	e283304c	 add         r3, r3, #0x4C
  03a68	e59d1014	 ldr         r1, [sp, #0x14]
  03a6c	e5932000	 ldr         r2, [r3]
  03a70	e3e03c01	 mvn         r3, #1, 24
  03a74	e0022003	 and         r2, r2, r3
  03a78	e2013001	 and         r3, r1, #1
  03a7c	e1a03403	 mov         r3, r3, lsl #8
  03a80	e1822003	 orr         r2, r2, r3
  03a84	e59d302c	 ldr         r3, [sp, #0x2C]
  03a88	e283304c	 add         r3, r3, #0x4C
  03a8c	e5832000	 str         r2, [r3]

; 1251 :     m_UsbOtgInput.bit.id = ((devctl & DEVCTL_B_DEVICE)? 1:0);    

  03a90	e5dd3001	 ldrb        r3, [sp, #1]
  03a94	e3130080	 tst         r3, #0x80
  03a98	0a000002	 beq         |$LN8@UpdateInpu|
  03a9c	e3a03001	 mov         r3, #1
  03aa0	e58d3018	 str         r3, [sp, #0x18]
  03aa4	ea000001	 b           |$LN9@UpdateInpu|
  03aa8		 |$LN8@UpdateInpu|
  03aa8	e3a03000	 mov         r3, #0
  03aac	e58d3018	 str         r3, [sp, #0x18]
  03ab0		 |$LN9@UpdateInpu|
  03ab0	e59d302c	 ldr         r3, [sp, #0x2C]
  03ab4	e283304c	 add         r3, r3, #0x4C
  03ab8	e59d1018	 ldr         r1, [sp, #0x18]
  03abc	e5932000	 ldr         r2, [r3]
  03ac0	e3e03902	 mvn         r3, #2, 18
  03ac4	e0022003	 and         r2, r2, r3
  03ac8	e2013001	 and         r3, r1, #1
  03acc	e1a03783	 mov         r3, r3, lsl #15
  03ad0	e1822003	 orr         r2, r2, r3
  03ad4	e59d302c	 ldr         r3, [sp, #0x2C]
  03ad8	e283304c	 add         r3, r3, #0x4C
  03adc	e5832000	 str         r2, [r3]

; 1252 :     m_UsbOtgInput.bit.b_sess_vld = (((devctl & DEVCTL_SESSION) && (m_pOTG->operateMode == DEVICE_MODE))? 1:0);

  03ae0	e5dd3001	 ldrb        r3, [sp, #1]
  03ae4	e3130001	 tst         r3, #1
  03ae8	0a000009	 beq         |$LN10@UpdateInpu|
  03aec	e59d302c	 ldr         r3, [sp, #0x2C]
  03af0	e2833e15	 add         r3, r3, #0x15, 28
  03af4	e5933000	 ldr         r3, [r3]
  03af8	e2833035	 add         r3, r3, #0x35
  03afc	e5d33000	 ldrb        r3, [r3]
  03b00	e3530001	 cmp         r3, #1
  03b04	1a000002	 bne         |$LN10@UpdateInpu|
  03b08	e3a03001	 mov         r3, #1
  03b0c	e58d301c	 str         r3, [sp, #0x1C]
  03b10	ea000001	 b           |$LN11@UpdateInpu|
  03b14		 |$LN10@UpdateInpu|
  03b14	e3a03000	 mov         r3, #0
  03b18	e58d301c	 str         r3, [sp, #0x1C]
  03b1c		 |$LN11@UpdateInpu|
  03b1c	e59d302c	 ldr         r3, [sp, #0x2C]
  03b20	e283304c	 add         r3, r3, #0x4C
  03b24	e59d101c	 ldr         r1, [sp, #0x1C]
  03b28	e5932000	 ldr         r2, [r3]
  03b2c	e3e03901	 mvn         r3, #1, 18
  03b30	e0022003	 and         r2, r2, r3
  03b34	e2013001	 and         r3, r1, #1
  03b38	e1a03703	 mov         r3, r3, lsl #14
  03b3c	e1822003	 orr         r2, r2, r3
  03b40	e59d302c	 ldr         r3, [sp, #0x2C]
  03b44	e283304c	 add         r3, r3, #0x4C
  03b48	e5832000	 str         r2, [r3]

; 1253 : 
; 1254 :     // Dual Role A-Device 6.8.2
; 1255 :     m_UsbOtgInput.bit.a_vbus_vld = ((vbus>=0x2)?1:0);

  03b4c	e5dd3000	 ldrb        r3, [sp]
  03b50	e3530002	 cmp         r3, #2
  03b54	ba000002	 blt         |$LN12@UpdateInpu|
  03b58	e3a03001	 mov         r3, #1
  03b5c	e58d3020	 str         r3, [sp, #0x20]
  03b60	ea000001	 b           |$LN13@UpdateInpu|
  03b64		 |$LN12@UpdateInpu|
  03b64	e3a03000	 mov         r3, #0
  03b68	e58d3020	 str         r3, [sp, #0x20]
  03b6c		 |$LN13@UpdateInpu|
  03b6c	e59d302c	 ldr         r3, [sp, #0x2C]
  03b70	e283304c	 add         r3, r3, #0x4C
  03b74	e59d1020	 ldr         r1, [sp, #0x20]
  03b78	e5932000	 ldr         r2, [r3]
  03b7c	e3e03080	 mvn         r3, #0x80
  03b80	e0022003	 and         r2, r2, r3
  03b84	e2013001	 and         r3, r1, #1
  03b88	e1a03383	 mov         r3, r3, lsl #7
  03b8c	e1822003	 orr         r2, r2, r3
  03b90	e59d302c	 ldr         r3, [sp, #0x2C]
  03b94	e283304c	 add         r3, r3, #0x4C
  03b98	e5832000	 str         r2, [r3]

; 1256 :     //m_UsbOtgInput.bit.a_bus_req = 
; 1257 : 
; 1258 :     if (rc == TRUE)

  03b9c	e59d3004	 ldr         r3, [sp, #4]
  03ba0	e3530001	 cmp         r3, #1
  03ba4	1a000006	 bne         |$LN1@UpdateInpu|

; 1259 :         StopUSBClock();

  03ba8	e59d302c	 ldr         r3, [sp, #0x2C]
  03bac	e5933000	 ldr         r3, [r3]
  03bb0	e28330e8	 add         r3, r3, #0xE8
  03bb4	e59d002c	 ldr         r0, [sp, #0x2C]
  03bb8	e5933000	 ldr         r3, [r3]
  03bbc	e1a0e00f	 mov         lr, pc
  03bc0	e12fff13	 bx          r3
  03bc4		 |$LN1@UpdateInpu|

; 1260 :     
; 1261 :     return TRUE;

  03bc4	e3a03001	 mov         r3, #1
  03bc8	e58d3008	 str         r3, [sp, #8]

; 1262 : }

  03bcc	e59d0008	 ldr         r0, [sp, #8]
  03bd0	e28dd024	 add         sp, sp, #0x24
  03bd4	e89d6000	 ldmia       sp, {sp, lr}
  03bd8	e12fff1e	 bx          lr
  03bdc		 |$LN17@UpdateInpu|
  03bdc		 |$LN18@UpdateInpu|
  03bdc	00000000	 DCD         |??_C@_1DK@IMMNAKAH@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  03be0		 |$LN19@UpdateInpu|
  03be0	00000000	 DCD         |dpCurSettings|
  03be4		 |$M43628|

			 ENDP  ; |?UpdateInput@OMAPMHSUSBOTG@@UAAHXZ|, OMAPMHSUSBOTG::UpdateInput

	EXPORT	|??_C@_1CK@PMJHPDNG@?$AAI?$AAs?$AAS?$AAE?$AA0?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  000d8			 AREA	 |.pdata|, PDATA
|$T43641| DCD	|$LN8@IsSE0|
	DCD	0x40003d04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@PMJHPDNG@?$AAI?$AAs?$AAS?$AAE?$AA0?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "s", 0x0, "S", 0x0, "E", 0x0, "0", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  03be4			 AREA	 |.text|, CODE, ARM

  03be4		 |?IsSE0@OMAPMHSUSBOTG@@UAAHXZ| PROC	; OMAPMHSUSBOTG::IsSE0

; 1282 : {

  03be4		 |$LN8@IsSE0|
  03be4	e1a0c00d	 mov         r12, sp
  03be8	e92d0001	 stmdb       sp!, {r0}
  03bec	e92d5000	 stmdb       sp!, {r12, lr}
  03bf0	e24dd018	 sub         sp, sp, #0x18
  03bf4		 |$M43638|

; 1283 :     BOOL bIsSE0;
; 1284 :     BOOL rc = FALSE;

  03bf4	e3a03000	 mov         r3, #0
  03bf8	e58d3000	 str         r3, [sp]

; 1285 :     
; 1286 :     rc = StartUSBClock(TRUE);

  03bfc	e3a01001	 mov         r1, #1
  03c00	e59d3020	 ldr         r3, [sp, #0x20]
  03c04	e5933000	 ldr         r3, [r3]
  03c08	e28330e4	 add         r3, r3, #0xE4
  03c0c	e59d0020	 ldr         r0, [sp, #0x20]
  03c10	e5933000	 ldr         r3, [r3]
  03c14	e1a0e00f	 mov         lr, pc
  03c18	e12fff13	 bx          r3
  03c1c	e58d000c	 str         r0, [sp, #0xC]
  03c20	e59d300c	 ldr         r3, [sp, #0xC]
  03c24	e58d3000	 str         r3, [sp]

; 1287 :     bIsSE0 = m_pTransceiver->IsSE0();

  03c28	e59d3020	 ldr         r3, [sp, #0x20]
  03c2c	e28330fc	 add         r3, r3, #0xFC
  03c30	e5932000	 ldr         r2, [r3]
  03c34	e59d3020	 ldr         r3, [sp, #0x20]
  03c38	e28330fc	 add         r3, r3, #0xFC
  03c3c	e5930000	 ldr         r0, [r3]
  03c40	e5923000	 ldr         r3, [r2]
  03c44	e283301c	 add         r3, r3, #0x1C
  03c48	e5933000	 ldr         r3, [r3]
  03c4c	e1a0e00f	 mov         lr, pc
  03c50	e12fff13	 bx          r3
  03c54	e58d0010	 str         r0, [sp, #0x10]
  03c58	e59d3010	 ldr         r3, [sp, #0x10]
  03c5c	e58d3004	 str         r3, [sp, #4]

; 1288 :     if (rc == TRUE)

  03c60	e59d3000	 ldr         r3, [sp]
  03c64	e3530001	 cmp         r3, #1
  03c68	1a000006	 bne         |$LN1@IsSE0|

; 1289 :         StopUSBClock();

  03c6c	e59d3020	 ldr         r3, [sp, #0x20]
  03c70	e5933000	 ldr         r3, [r3]
  03c74	e28330e8	 add         r3, r3, #0xE8
  03c78	e59d0020	 ldr         r0, [sp, #0x20]
  03c7c	e5933000	 ldr         r3, [r3]
  03c80	e1a0e00f	 mov         lr, pc
  03c84	e12fff13	 bx          r3
  03c88		 |$LN1@IsSE0|

; 1290 : 
; 1291 :     DEBUGMSG(ZONE_OTG_INFO, (TEXT("IsSE0 returning %d\r\n"), bIsSE0));

  03c88	e59f3044	 ldr         r3, [pc, #0x44]
  03c8c	e5933440	 ldr         r3, [r3, #0x440]
  03c90	e3130a01	 tst         r3, #1, 20
  03c94	0a000005	 beq         |$LN4@IsSE0|
  03c98	e59d1004	 ldr         r1, [sp, #4]
  03c9c	e59f002c	 ldr         r0, [pc, #0x2C]
  03ca0	eb000000	 bl          NKDbgPrintfW
  03ca4	e3a03001	 mov         r3, #1
  03ca8	e58d3014	 str         r3, [sp, #0x14]
  03cac	ea000001	 b           |$LN5@IsSE0|
  03cb0		 |$LN4@IsSE0|
  03cb0	e3a03000	 mov         r3, #0
  03cb4	e58d3014	 str         r3, [sp, #0x14]
  03cb8		 |$LN5@IsSE0|

; 1292 : 
; 1293 :     return bIsSE0;

  03cb8	e59d3004	 ldr         r3, [sp, #4]
  03cbc	e58d3008	 str         r3, [sp, #8]

; 1294 : }

  03cc0	e59d0008	 ldr         r0, [sp, #8]
  03cc4	e28dd018	 add         sp, sp, #0x18
  03cc8	e89d6000	 ldmia       sp, {sp, lr}
  03ccc	e12fff1e	 bx          lr
  03cd0		 |$LN9@IsSE0|
  03cd0		 |$LN10@IsSE0|
  03cd0	00000000	 DCD         |??_C@_1CK@PMJHPDNG@?$AAI?$AAs?$AAS?$AAE?$AA0?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  03cd4		 |$LN11@IsSE0|
  03cd4	00000000	 DCD         |dpCurSettings|
  03cd8		 |$M43639|

			 ENDP  ; |?IsSE0@OMAPMHSUSBOTG@@UAAHXZ|, OMAPMHSUSBOTG::IsSE0

	EXPORT	|??_C@_1CC@JPLJNHEM@?$AAN?$AAe?$AAw?$AAS?$AAt?$AAa?$AAt?$AAe?$AAA?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|?NewStateAction@USBOTG@@UAAHW4USBOTG_STATES@@T_USBOTG_OUTPUT@@@Z| ; USBOTG::NewStateAction

  000e0			 AREA	 |.pdata|, PDATA
|$T43652| DCD	|$LN7@NewStateAc|
	DCD	0x40001e04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@JPLJNHEM@?$AAN?$AAe?$AAw?$AAS?$AAt?$AAa?$AAt?$AAe?$AAA?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "N"
	DCB	0x0, "e", 0x0, "w", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "A", 0x0, "c", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  03cd8			 AREA	 |.text|, CODE, ARM

  03cd8		 |?NewStateAction@OMAPMHSUSBOTG@@UAAHW4USBOTG_STATES@@T_USBOTG_OUTPUT@@@Z| PROC ; OMAPMHSUSBOTG::NewStateAction

; 1314 : {

  03cd8		 |$LN7@NewStateAc|
  03cd8	e1a0c00d	 mov         r12, sp
  03cdc	e92d0007	 stmdb       sp!, {r0 - r2}
  03ce0	e92d5000	 stmdb       sp!, {r12, lr}
  03ce4	e24dd010	 sub         sp, sp, #0x10
  03ce8		 |$M43649|

; 1315 :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("NewStateAction\r\n")));

  03ce8	e59f305c	 ldr         r3, [pc, #0x5C]
  03cec	e5933440	 ldr         r3, [r3, #0x440]
  03cf0	e3130a02	 tst         r3, #2, 20
  03cf4	0a000004	 beq         |$LN3@NewStateAc|
  03cf8	e59f0048	 ldr         r0, [pc, #0x48]
  03cfc	eb000000	 bl          NKDbgPrintfW
  03d00	e3a03001	 mov         r3, #1
  03d04	e58d3008	 str         r3, [sp, #8]
  03d08	ea000001	 b           |$LN4@NewStateAc|
  03d0c		 |$LN3@NewStateAc|
  03d0c	e3a03000	 mov         r3, #0
  03d10	e58d3008	 str         r3, [sp, #8]
  03d14		 |$LN4@NewStateAc|

; 1316 :     BOOL bReturn = USBOTG::NewStateAction(usbOtgState,usbOtgOutput);

  03d14	e59d2020	 ldr         r2, [sp, #0x20]
  03d18	e59d101c	 ldr         r1, [sp, #0x1C]
  03d1c	e59d0018	 ldr         r0, [sp, #0x18]
  03d20	eb000000	 bl          |?NewStateAction@USBOTG@@UAAHW4USBOTG_STATES@@T_USBOTG_OUTPUT@@@Z|
  03d24	e58d000c	 str         r0, [sp, #0xC]
  03d28	e59d300c	 ldr         r3, [sp, #0xC]
  03d2c	e58d3000	 str         r3, [sp]

; 1317 :     
; 1318 :     // Process extra state action if needed.
; 1319 : 
; 1320 :     return bReturn;

  03d30	e59d3000	 ldr         r3, [sp]
  03d34	e58d3004	 str         r3, [sp, #4]

; 1321 : }

  03d38	e59d0004	 ldr         r0, [sp, #4]
  03d3c	e28dd010	 add         sp, sp, #0x10
  03d40	e89d6000	 ldmia       sp, {sp, lr}
  03d44	e12fff1e	 bx          lr
  03d48		 |$LN8@NewStateAc|
  03d48		 |$LN9@NewStateAc|
  03d48	00000000	 DCD         |??_C@_1CC@JPLJNHEM@?$AAN?$AAe?$AAw?$AAS?$AAt?$AAa?$AAt?$AAe?$AAA?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  03d4c		 |$LN10@NewStateAc|
  03d4c	00000000	 DCD         |dpCurSettings|
  03d50		 |$M43650|

			 ENDP  ; |?NewStateAction@OMAPMHSUSBOTG@@UAAHW4USBOTG_STATES@@T_USBOTG_OUTPUT@@@Z|, OMAPMHSUSBOTG::NewStateAction

	EXPORT	|??_C@_1DG@LFKKPNCF@?$AAE?$AAv?$AAe?$AAn?$AAt?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|?EventNotification@USBOTG@@UAAHXZ|	; USBOTG::EventNotification

  000e8			 AREA	 |.pdata|, PDATA
|$T43663| DCD	|$LN7@EventNotif|
	DCD	0x40001c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@LFKKPNCF@?$AAE?$AAv?$AAe?$AAn?$AAt?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "N", 0x0, "o"
	DCB	0x0, "t", 0x0, "i", 0x0, "f", 0x0, "i", 0x0, "c", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "c"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  03d50			 AREA	 |.text|, CODE, ARM

  03d50		 |?EventNotification@OMAPMHSUSBOTG@@UAAHXZ| PROC ; OMAPMHSUSBOTG::EventNotification

; 1342 : {

  03d50		 |$LN7@EventNotif|
  03d50	e1a0c00d	 mov         r12, sp
  03d54	e92d0001	 stmdb       sp!, {r0}
  03d58	e92d5000	 stmdb       sp!, {r12, lr}
  03d5c	e24dd010	 sub         sp, sp, #0x10
  03d60		 |$M43660|

; 1343 :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("EventNotification called\r\n")));

  03d60	e59f3054	 ldr         r3, [pc, #0x54]
  03d64	e5933440	 ldr         r3, [r3, #0x440]
  03d68	e3130a02	 tst         r3, #2, 20
  03d6c	0a000004	 beq         |$LN3@EventNotif|
  03d70	e59f0040	 ldr         r0, [pc, #0x40]
  03d74	eb000000	 bl          NKDbgPrintfW
  03d78	e3a03001	 mov         r3, #1
  03d7c	e58d3008	 str         r3, [sp, #8]
  03d80	ea000001	 b           |$LN4@EventNotif|
  03d84		 |$LN3@EventNotif|
  03d84	e3a03000	 mov         r3, #0
  03d88	e58d3008	 str         r3, [sp, #8]
  03d8c		 |$LN4@EventNotif|

; 1344 :     BOOL bReturn = USBOTG::EventNotification();

  03d8c	e59d0018	 ldr         r0, [sp, #0x18]
  03d90	eb000000	 bl          |?EventNotification@USBOTG@@UAAHXZ|
  03d94	e58d000c	 str         r0, [sp, #0xC]
  03d98	e59d300c	 ldr         r3, [sp, #0xC]
  03d9c	e58d3000	 str         r3, [sp]

; 1345 : 
; 1346 :     return bReturn;

  03da0	e59d3000	 ldr         r3, [sp]
  03da4	e58d3004	 str         r3, [sp, #4]

; 1347 : }

  03da8	e59d0004	 ldr         r0, [sp, #4]
  03dac	e28dd010	 add         sp, sp, #0x10
  03db0	e89d6000	 ldmia       sp, {sp, lr}
  03db4	e12fff1e	 bx          lr
  03db8		 |$LN8@EventNotif|
  03db8		 |$LN9@EventNotif|
  03db8	00000000	 DCD         |??_C@_1DG@LFKKPNCF@?$AAE?$AAv?$AAe?$AAn?$AAt?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  03dbc		 |$LN10@EventNotif|
  03dbc	00000000	 DCD         |dpCurSettings|
  03dc0		 |$M43661|

			 ENDP  ; |?EventNotification@OMAPMHSUSBOTG@@UAAHXZ|, OMAPMHSUSBOTG::EventNotification

	EXPORT	|??_C@_1DE@IMAHPPGP@?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  000f0			 AREA	 |.pdata|, PDATA
|$T43674| DCD	|$LN10@SessionReq|
	DCD	0x40005404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@IMAHPPGP@?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  03dc0			 AREA	 |.text|, CODE, ARM

  03dc0		 |?SessionRequest@OMAPMHSUSBOTG@@UAAHHH@Z| PROC ; OMAPMHSUSBOTG::SessionRequest

; 1368 : {   

  03dc0		 |$LN10@SessionReq|
  03dc0	e1a0c00d	 mov         r12, sp
  03dc4	e92d0007	 stmdb       sp!, {r0 - r2}
  03dc8	e92d5000	 stmdb       sp!, {r12, lr}
  03dcc	e24dd008	 sub         sp, sp, #8
  03dd0		 |$M43671|

; 1369 :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Session Request(%d, %d)\r\n"), fPulseLocConn, fPulseChrgVBus));

  03dd0	e59f3134	 ldr         r3, [pc, #0x134]
  03dd4	e5933440	 ldr         r3, [r3, #0x440]
  03dd8	e3130a02	 tst         r3, #2, 20
  03ddc	0a000006	 beq         |$LN6@SessionReq|
  03de0	e59d2018	 ldr         r2, [sp, #0x18]
  03de4	e59d1014	 ldr         r1, [sp, #0x14]
  03de8	e59f0118	 ldr         r0, [pc, #0x118]
  03dec	eb000000	 bl          NKDbgPrintfW
  03df0	e3a03001	 mov         r3, #1
  03df4	e58d3004	 str         r3, [sp, #4]
  03df8	ea000001	 b           |$LN7@SessionReq|
  03dfc		 |$LN6@SessionReq|
  03dfc	e3a03000	 mov         r3, #0
  03e00	e58d3004	 str         r3, [sp, #4]
  03e04		 |$LN7@SessionReq|

; 1370 :     if (fPulseLocConn || fPulseChrgVBus)

  03e04	e59d3014	 ldr         r3, [sp, #0x14]
  03e08	e3530000	 cmp         r3, #0
  03e0c	1a000002	 bne         |$LN2@SessionReq|
  03e10	e59d3018	 ldr         r3, [sp, #0x18]
  03e14	e3530000	 cmp         r3, #0
  03e18	0a000022	 beq         |$LN3@SessionReq|
  03e1c		 |$LN2@SessionReq|

; 1371 :     {
; 1372 :         // (workaround) wait and set session bit again.  Otherwise, sometimes USB transceiver VBUS doesn't go to 5V.
; 1373 :         SETREG8(&m_pOTG->pUsbGenRegs->DevCtl, DEVCTL_SESSION);          

  03e1c	e59d3010	 ldr         r3, [sp, #0x10]
  03e20	e2833e15	 add         r3, r3, #0x15, 28
  03e24	e5933000	 ldr         r3, [r3]
  03e28	e2833020	 add         r3, r3, #0x20
  03e2c	e5933000	 ldr         r3, [r3]
  03e30	e2833060	 add         r3, r3, #0x60
  03e34	e5d33000	 ldrb        r3, [r3]
  03e38	e3833001	 orr         r3, r3, #1
  03e3c	e20320ff	 and         r2, r3, #0xFF
  03e40	e59d3010	 ldr         r3, [sp, #0x10]
  03e44	e2833e15	 add         r3, r3, #0x15, 28
  03e48	e5933000	 ldr         r3, [r3]
  03e4c	e2833020	 add         r3, r3, #0x20
  03e50	e5933000	 ldr         r3, [r3]
  03e54	e2833060	 add         r3, r3, #0x60
  03e58	e5c32000	 strb        r2, [r3]

; 1374 :         Sleep(100);

  03e5c	e3a00064	 mov         r0, #0x64
  03e60	eb000000	 bl          Sleep

; 1375 :         SETREG8(&m_pOTG->pUsbGenRegs->DevCtl, DEVCTL_SESSION);

  03e64	e59d3010	 ldr         r3, [sp, #0x10]
  03e68	e2833e15	 add         r3, r3, #0x15, 28
  03e6c	e5933000	 ldr         r3, [r3]
  03e70	e2833020	 add         r3, r3, #0x20
  03e74	e5933000	 ldr         r3, [r3]
  03e78	e2833060	 add         r3, r3, #0x60
  03e7c	e5d33000	 ldrb        r3, [r3]
  03e80	e3833001	 orr         r3, r3, #1
  03e84	e20320ff	 and         r2, r3, #0xFF
  03e88	e59d3010	 ldr         r3, [sp, #0x10]
  03e8c	e2833e15	 add         r3, r3, #0x15, 28
  03e90	e5933000	 ldr         r3, [r3]
  03e94	e2833020	 add         r3, r3, #0x20
  03e98	e5933000	 ldr         r3, [r3]
  03e9c	e2833060	 add         r3, r3, #0x60
  03ea0	e5c32000	 strb        r2, [r3]

; 1376 :     }
; 1377 :     else

  03ea4	ea000011	 b           |$LN1@SessionReq|
  03ea8		 |$LN3@SessionReq|

; 1378 :     {
; 1379 :         CLRREG8(&m_pOTG->pUsbGenRegs->DevCtl, DEVCTL_SESSION);

  03ea8	e59d3010	 ldr         r3, [sp, #0x10]
  03eac	e2833e15	 add         r3, r3, #0x15, 28
  03eb0	e5933000	 ldr         r3, [r3]
  03eb4	e2833020	 add         r3, r3, #0x20
  03eb8	e5933000	 ldr         r3, [r3]
  03ebc	e2833060	 add         r3, r3, #0x60
  03ec0	e5d33000	 ldrb        r3, [r3]
  03ec4	e1a02003	 mov         r2, r3
  03ec8	e3e03001	 mvn         r3, #1
  03ecc	e0023003	 and         r3, r2, r3
  03ed0	e20320ff	 and         r2, r3, #0xFF
  03ed4	e59d3010	 ldr         r3, [sp, #0x10]
  03ed8	e2833e15	 add         r3, r3, #0x15, 28
  03edc	e5933000	 ldr         r3, [r3]
  03ee0	e2833020	 add         r3, r3, #0x20
  03ee4	e5933000	 ldr         r3, [r3]
  03ee8	e2833060	 add         r3, r3, #0x60
  03eec	e5c32000	 strb        r2, [r3]
  03ef0		 |$LN1@SessionReq|

; 1380 :     }
; 1381 : 
; 1382 :     return TRUE;

  03ef0	e3a03001	 mov         r3, #1
  03ef4	e58d3000	 str         r3, [sp]

; 1383 : }

  03ef8	e59d0000	 ldr         r0, [sp]
  03efc	e28dd008	 add         sp, sp, #8
  03f00	e89d6000	 ldmia       sp, {sp, lr}
  03f04	e12fff1e	 bx          lr
  03f08		 |$LN11@SessionReq|
  03f08		 |$LN12@SessionReq|
  03f08	00000000	 DCD         |??_C@_1DE@IMAHPPGP@?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  03f0c		 |$LN13@SessionReq|
  03f0c	00000000	 DCD         |dpCurSettings|
  03f10		 |$M43672|

			 ENDP  ; |?SessionRequest@OMAPMHSUSBOTG@@UAAHHH@Z|, OMAPMHSUSBOTG::SessionRequest


  000f8			 AREA	 |.pdata|, PDATA
|$T43683| DCD	|$LN11@GetMode|
	DCD	0x40002c04
; Function compile flags: /Odtp

  03f10			 AREA	 |.text|, CODE, ARM

  03f10		 |?GetMode@OMAPMHSUSBOTG@@UAAKXZ| PROC	; OMAPMHSUSBOTG::GetMode

; 1399 : {

  03f10		 |$LN11@GetMode|
  03f10	e1a0c00d	 mov         r12, sp
  03f14	e92d0001	 stmdb       sp!, {r0}
  03f18	e92d5000	 stmdb       sp!, {r12, lr}
  03f1c	e24dd008	 sub         sp, sp, #8
  03f20		 |$M43680|

; 1400 :     DWORD mode;
; 1401 : 
; 1402 :     if (INREG8(&m_pOTG->pUsbGenRegs->DevCtl) & DEVCTL_HOSTMODE)

  03f20	e59d3010	 ldr         r3, [sp, #0x10]
  03f24	e2833e15	 add         r3, r3, #0x15, 28
  03f28	e5933000	 ldr         r3, [r3]
  03f2c	e2833020	 add         r3, r3, #0x20
  03f30	e5933000	 ldr         r3, [r3]
  03f34	e2833060	 add         r3, r3, #0x60
  03f38	e5d33000	 ldrb        r3, [r3]
  03f3c	e3130004	 tst         r3, #4
  03f40	0a00000c	 beq         |$LN6@GetMode|

; 1403 :     {
; 1404 :         if (m_pOTG->operateMode == HOST_MODE)

  03f44	e59d3010	 ldr         r3, [sp, #0x10]
  03f48	e2833e15	 add         r3, r3, #0x15, 28
  03f4c	e5933000	 ldr         r3, [r3]
  03f50	e2833035	 add         r3, r3, #0x35
  03f54	e5d33000	 ldrb        r3, [r3]
  03f58	e3530002	 cmp         r3, #2
  03f5c	1a000002	 bne         |$LN5@GetMode|

; 1405 :             mode = HOST_MODE;

  03f60	e3a03002	 mov         r3, #2
  03f64	e58d3000	 str         r3, [sp]

; 1406 :         else

  03f68	ea000001	 b           |$LN4@GetMode|
  03f6c		 |$LN5@GetMode|

; 1407 :             mode = IDLE_MODE;

  03f6c	e3a03000	 mov         r3, #0
  03f70	e58d3000	 str         r3, [sp]
  03f74		 |$LN4@GetMode|

; 1408 :     }
; 1409 :     else

  03f74	ea00000b	 b           |$LN3@GetMode|
  03f78		 |$LN6@GetMode|

; 1410 :     {
; 1411 :         if (m_pOTG->operateMode == DEVICE_MODE)

  03f78	e59d3010	 ldr         r3, [sp, #0x10]
  03f7c	e2833e15	 add         r3, r3, #0x15, 28
  03f80	e5933000	 ldr         r3, [r3]
  03f84	e2833035	 add         r3, r3, #0x35
  03f88	e5d33000	 ldrb        r3, [r3]
  03f8c	e3530001	 cmp         r3, #1
  03f90	1a000002	 bne         |$LN2@GetMode|

; 1412 :             mode = DEVICE_MODE;

  03f94	e3a03001	 mov         r3, #1
  03f98	e58d3000	 str         r3, [sp]

; 1413 :         else

  03f9c	ea000001	 b           |$LN1@GetMode|
  03fa0		 |$LN2@GetMode|

; 1414 :             mode = IDLE_MODE;

  03fa0	e3a03000	 mov         r3, #0
  03fa4	e58d3000	 str         r3, [sp]
  03fa8		 |$LN1@GetMode|
  03fa8		 |$LN3@GetMode|

; 1415 :     }
; 1416 : 
; 1417 :     return mode;

  03fa8	e59d3000	 ldr         r3, [sp]
  03fac	e58d3004	 str         r3, [sp, #4]

; 1418 : 
; 1419 : }

  03fb0	e59d0004	 ldr         r0, [sp, #4]
  03fb4	e28dd008	 add         sp, sp, #8
  03fb8	e89d6000	 ldmia       sp, {sp, lr}
  03fbc	e12fff1e	 bx          lr
  03fc0		 |$M43681|

			 ENDP  ; |?GetMode@OMAPMHSUSBOTG@@UAAKXZ|, OMAPMHSUSBOTG::GetMode

	EXPORT	|??_C@_1CM@ONMBMPDP@?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00100			 AREA	 |.pdata|, PDATA
|$T43690| DCD	|$LN12@PowerDownD|
	DCD	0x4000a004

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@ONMBMPDP@?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "i", 0x0, "s", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "n"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, " ", 0x0, "d", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  03fc0			 AREA	 |.text|, CODE, ARM

  03fc0		 |?PowerDownDisconnect@OMAPMHSUSBOTG@@UAAXXZ| PROC ; OMAPMHSUSBOTG::PowerDownDisconnect

; 1440 : {

  03fc0		 |$LN12@PowerDownD|
  03fc0	e1a0c00d	 mov         r12, sp
  03fc4	e92d0001	 stmdb       sp!, {r0}
  03fc8	e92d5000	 stmdb       sp!, {r12, lr}
  03fcc	e24dd008	 sub         sp, sp, #8
  03fd0		 |$M43687|

; 1441 :     DWORD dwPrevState;
; 1442 :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Disconnect detected\r\n")));

  03fd0	e59f3264	 ldr         r3, [pc, #0x264]
  03fd4	e5933440	 ldr         r3, [r3, #0x440]
  03fd8	e3130a02	 tst         r3, #2, 20
  03fdc	0a000004	 beq         |$LN8@PowerDownD|
  03fe0	e59f0250	 ldr         r0, [pc, #0x250]
  03fe4	eb000000	 bl          NKDbgPrintfW
  03fe8	e3a03001	 mov         r3, #1
  03fec	e58d3004	 str         r3, [sp, #4]
  03ff0	ea000001	 b           |$LN9@PowerDownD|
  03ff4		 |$LN8@PowerDownD|
  03ff4	e3a03000	 mov         r3, #0
  03ff8	e58d3004	 str         r3, [sp, #4]
  03ffc		 |$LN9@PowerDownD|

; 1443 :     m_bSessionDisable = FALSE;

  03ffc	e59d3010	 ldr         r3, [sp, #0x10]
  04000	e2832f5f	 add         r2, r3, #0x5F, 30
  04004	e3a03000	 mov         r3, #0
  04008	e5823000	 str         r3, [r2]

; 1444 :     m_disconnected = TRUE;

  0400c	e59d3010	 ldr         r3, [sp, #0x10]
  04010	e2832f63	 add         r2, r3, #0x63, 30
  04014	e3a03001	 mov         r3, #1
  04018	e5823000	 str         r3, [r2]

; 1445 : 
; 1446 :     ResetEndPoints();

  0401c	e59d3010	 ldr         r3, [sp, #0x10]
  04020	e5933000	 ldr         r3, [r3]
  04024	e28330ec	 add         r3, r3, #0xEC
  04028	e59d0010	 ldr         r0, [sp, #0x10]
  0402c	e5933000	 ldr         r3, [r3]
  04030	e1a0e00f	 mov         lr, pc
  04034	e12fff13	 bx          r3

; 1447 :     // If we have done the disconnect, don't process anymore.
; 1448 :     if ((m_pOTG->connect_status & CONN_DC) == 0)

  04038	e59d3010	 ldr         r3, [sp, #0x10]
  0403c	e2833e15	 add         r3, r3, #0x15, 28
  04040	e5933000	 ldr         r3, [r3]
  04044	e283304c	 add         r3, r3, #0x4C
  04048	e5d33000	 ldrb        r3, [r3]
  0404c	e3130004	 tst         r3, #4
  04050	1a000007	 bne         |$LN5@PowerDownD|

; 1449 :         m_dwStatus |= STATUS_DISCONN_REQUEST|STATUS_WAIT_HOST_DISCONN_COMPLETE;

  04054	e59d3010	 ldr         r3, [sp, #0x10]
  04058	e28330f8	 add         r3, r3, #0xF8
  0405c	e5933000	 ldr         r3, [r3]
  04060	e3832042	 orr         r2, r3, #0x42
  04064	e59d3010	 ldr         r3, [sp, #0x10]
  04068	e28330f8	 add         r3, r3, #0xF8
  0406c	e5832000	 str         r2, [r3]

; 1450 :     else

  04070	ea00000e	 b           |$LN4@PowerDownD|
  04074		 |$LN5@PowerDownD|

; 1451 :     {
; 1452 :         m_dwStatus &= ~STATUS_WAIT_HOST_DISCONN_COMPLETE;

  04074	e59d3010	 ldr         r3, [sp, #0x10]
  04078	e28330f8	 add         r3, r3, #0xF8
  0407c	e5932000	 ldr         r2, [r3]
  04080	e3e03040	 mvn         r3, #0x40
  04084	e0022003	 and         r2, r2, r3
  04088	e59d3010	 ldr         r3, [sp, #0x10]
  0408c	e28330f8	 add         r3, r3, #0xF8
  04090	e5832000	 str         r2, [r3]

; 1453 :         m_dwStatus |= STATUS_DISCONN_COMPLETE;

  04094	e59d3010	 ldr         r3, [sp, #0x10]
  04098	e28330f8	 add         r3, r3, #0xF8
  0409c	e5933000	 ldr         r3, [r3]
  040a0	e3832008	 orr         r2, r3, #8
  040a4	e59d3010	 ldr         r3, [sp, #0x10]
  040a8	e28330f8	 add         r3, r3, #0xF8
  040ac	e5832000	 str         r2, [r3]
  040b0		 |$LN4@PowerDownD|

; 1454 :     }
; 1455 : 
; 1456 :     m_pOTG->operateMode = IDLE_MODE;

  040b0	e59d3010	 ldr         r3, [sp, #0x10]
  040b4	e2833e15	 add         r3, r3, #0x15, 28
  040b8	e5933000	 ldr         r3, [r3]
  040bc	e2832035	 add         r2, r3, #0x35
  040c0	e3a03000	 mov         r3, #0
  040c4	e5c23000	 strb        r3, [r2]

; 1457 :     dwPrevState = m_pOTG->connect_status;

  040c8	e59d3010	 ldr         r3, [sp, #0x10]
  040cc	e2833e15	 add         r3, r3, #0x15, 28
  040d0	e5933000	 ldr         r3, [r3]
  040d4	e283304c	 add         r3, r3, #0x4C
  040d8	e5d33000	 ldrb        r3, [r3]
  040dc	e58d3000	 str         r3, [sp]

; 1458 :     m_pOTG->connect_status &= ~CONN_CCS;

  040e0	e59d3010	 ldr         r3, [sp, #0x10]
  040e4	e2833e15	 add         r3, r3, #0x15, 28
  040e8	e5933000	 ldr         r3, [r3]
  040ec	e283304c	 add         r3, r3, #0x4C
  040f0	e5d33000	 ldrb        r3, [r3]
  040f4	e1a02003	 mov         r2, r3
  040f8	e3e03001	 mvn         r3, #1
  040fc	e0021003	 and         r1, r2, r3
  04100	e59d3010	 ldr         r3, [sp, #0x10]
  04104	e2833e15	 add         r3, r3, #0x15, 28
  04108	e5933000	 ldr         r3, [r3]
  0410c	e283204c	 add         r2, r3, #0x4C
  04110	e20130ff	 and         r3, r1, #0xFF
  04114	e5c23000	 strb        r3, [r2]

; 1459 : 
; 1460 :     if (dwPrevState & CONN_CCS)

  04118	e59d3000	 ldr         r3, [sp]
  0411c	e3130001	 tst         r3, #1
  04120	0a00000c	 beq         |$LN3@PowerDownD|

; 1461 :         m_pOTG->connect_status |= CONN_CSC;

  04124	e59d3010	 ldr         r3, [sp, #0x10]
  04128	e2833e15	 add         r3, r3, #0x15, 28
  0412c	e5933000	 ldr         r3, [r3]
  04130	e283304c	 add         r3, r3, #0x4C
  04134	e5d33000	 ldrb        r3, [r3]
  04138	e3831002	 orr         r1, r3, #2
  0413c	e59d3010	 ldr         r3, [sp, #0x10]
  04140	e2833e15	 add         r3, r3, #0x15, 28
  04144	e5933000	 ldr         r3, [r3]
  04148	e283204c	 add         r2, r3, #0x4C
  0414c	e20130ff	 and         r3, r1, #0xFF
  04150	e5c23000	 strb        r3, [r2]

; 1462 :     else

  04154	ea00000d	 b           |$LN2@PowerDownD|
  04158		 |$LN3@PowerDownD|

; 1463 :         m_pOTG->connect_status &= ~CONN_CSC;

  04158	e59d3010	 ldr         r3, [sp, #0x10]
  0415c	e2833e15	 add         r3, r3, #0x15, 28
  04160	e5933000	 ldr         r3, [r3]
  04164	e283304c	 add         r3, r3, #0x4C
  04168	e5d33000	 ldrb        r3, [r3]
  0416c	e1a02003	 mov         r2, r3
  04170	e3e03002	 mvn         r3, #2
  04174	e0021003	 and         r1, r2, r3
  04178	e59d3010	 ldr         r3, [sp, #0x10]
  0417c	e2833e15	 add         r3, r3, #0x15, 28
  04180	e5933000	 ldr         r3, [r3]
  04184	e283204c	 add         r2, r3, #0x4C
  04188	e20130ff	 and         r3, r1, #0xFF
  0418c	e5c23000	 strb        r3, [r2]
  04190		 |$LN2@PowerDownD|

; 1464 : 
; 1465 :     m_pTransceiver->SetVBusSource(TRUE);

  04190	e3a01001	 mov         r1, #1
  04194	e59d3010	 ldr         r3, [sp, #0x10]
  04198	e28330fc	 add         r3, r3, #0xFC
  0419c	e5932000	 ldr         r2, [r3]
  041a0	e59d3010	 ldr         r3, [sp, #0x10]
  041a4	e28330fc	 add         r3, r3, #0xFC
  041a8	e5930000	 ldr         r0, [r3]
  041ac	e5923000	 ldr         r3, [r2]
  041b0	e2833004	 add         r3, r3, #4
  041b4	e5933000	 ldr         r3, [r3]
  041b8	e1a0e00f	 mov         lr, pc
  041bc	e12fff13	 bx          r3

; 1466 : 
; 1467 :     if (m_pOTG->pFuncs[DEVICE_MODE-1] != NULL)

  041c0	e59d3010	 ldr         r3, [sp, #0x10]
  041c4	e2833e15	 add         r3, r3, #0x15, 28
  041c8	e5933000	 ldr         r3, [r3]
  041cc	e2833008	 add         r3, r3, #8
  041d0	e5933000	 ldr         r3, [r3]
  041d4	e3530000	 cmp         r3, #0
  041d8	0a00000b	 beq         |$LN1@PowerDownD|

; 1468 :         m_pOTG->pFuncs[DEVICE_MODE-1]->Disconnect((void *)m_pOTG);

  041dc	e59d3010	 ldr         r3, [sp, #0x10]
  041e0	e2833e15	 add         r3, r3, #0x15, 28
  041e4	e5930000	 ldr         r0, [r3]
  041e8	e59d3010	 ldr         r3, [sp, #0x10]
  041ec	e2833e15	 add         r3, r3, #0x15, 28
  041f0	e5933000	 ldr         r3, [r3]
  041f4	e2833008	 add         r3, r3, #8
  041f8	e5933000	 ldr         r3, [r3]
  041fc	e2833018	 add         r3, r3, #0x18
  04200	e5933000	 ldr         r3, [r3]
  04204	e1a0e00f	 mov         lr, pc
  04208	e12fff13	 bx          r3
  0420c		 |$LN1@PowerDownD|

; 1469 : 
; 1470 :     SoftResetMUSBController();

  0420c	e3a01000	 mov         r1, #0
  04210	e59d3010	 ldr         r3, [sp, #0x10]
  04214	e5933000	 ldr         r3, [r3]
  04218	e28330f8	 add         r3, r3, #0xF8
  0421c	e59d0010	 ldr         r0, [sp, #0x10]
  04220	e5933000	 ldr         r3, [r3]
  04224	e1a0e00f	 mov         lr, pc
  04228	e12fff13	 bx          r3

; 1471 : }

  0422c	e28dd008	 add         sp, sp, #8
  04230	e89d6000	 ldmia       sp, {sp, lr}
  04234	e12fff1e	 bx          lr
  04238		 |$LN13@PowerDownD|
  04238		 |$LN14@PowerDownD|
  04238	00000000	 DCD         |??_C@_1CM@ONMBMPDP@?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0423c		 |$LN15@PowerDownD|
  0423c	00000000	 DCD         |dpCurSettings|
  04240		 |$M43688|

			 ENDP  ; |?PowerDownDisconnect@OMAPMHSUSBOTG@@UAAXXZ|, OMAPMHSUSBOTG::PowerDownDisconnect

	EXPORT	|??_C@_1IM@GEPODNBC@?$AAB?$AA_?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA?3?$AAH?$AAN?$AAP?$AA?5?$AAs?$AAw?$AAi?$AAt?$AAc?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAn?$AAe?$AAe?$AAd?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HI@JBKOMFKI@?$AAA?$AA_?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA?3?$AAH?$AAN?$AAP?$AA?5?$AAs?$AAw?$AAi?$AAt?$AAc?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAn?$AAe?$AAe?$AAd?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IA@MLDLJNIO@?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AA?5?$AAT?$AAH?$AAI?$AAS?$AA?0?$AA?5?$AAI?$AAT?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@IALLDFA@?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAI?$AAn?$AAt?$AAr?$AA_?$AAU?$AAS?$AAB?$AA?5?$AA?$DN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@FBPMAKFH@?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@HAAKHLDJ@?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAD?$AAe?$AAv?$AAC?$AAt?$AAl?$AA?5?$AA?$DN?$AA?5?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@KNLJNKPA@?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA_?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$DN?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@OPLGEMGP@?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAP?$AAw?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@JMEDNDKE@?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAS?$AAe?$AAs?$AAs?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@CKAHONI@?$AAB?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?ReadULPIReg@OMAPMHSUSBOTG@@QAAEPAUHSMUSB_T@@E@Z| ; OMAPMHSUSBOTG::ReadULPIReg
	EXPORT	|??_C@_1DG@PBLCKCII@?$AAH?$AAo?$AAs?$AAt?$AA?5?$AAd?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|RegSetValueExW|

  00108			 AREA	 |.pdata|, PDATA
|$T43730| DCD	|$LN68@OTG_Config|
	DCD	0x40039704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IM@GEPODNBC@?$AAB?$AA_?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA?3?$AAH?$AAN?$AAP?$AA?5?$AAs?$AAw?$AAi?$AAt?$AAc?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAn?$AAe?$AAe?$AAd?$AA?5@| DCB "B"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C"
	DCB	0x0, "E", 0x0, ":", 0x0, "H", 0x0, "N", 0x0, "P", 0x0, " "
	DCB	0x0, "s", 0x0, "w", 0x0, "i", 0x0, "t", 0x0, "c", 0x0, "h"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, " ", 0x0, "n", 0x0, "e", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "d", 0x0, "i"
	DCB	0x0, "s", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "n", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "m", 0x0, "o"
	DCB	0x0, "d", 0x0, "e", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "C", 0x0, "t", 0x0, "l", 0x0, ":", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@JBKOMFKI@?$AAA?$AA_?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA?3?$AAH?$AAN?$AAP?$AA?5?$AAs?$AAw?$AAi?$AAt?$AAc?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAn?$AAe?$AAe?$AAd?$AA?5@| DCB "A"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C"
	DCB	0x0, "E", 0x0, ":", 0x0, "H", 0x0, "N", 0x0, "P", 0x0, " "
	DCB	0x0, "s", 0x0, "w", 0x0, "i", 0x0, "t", 0x0, "c", 0x0, "h"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, " ", 0x0, "n", 0x0, "e", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "d", 0x0, "i"
	DCB	0x0, "s", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "n", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "m", 0x0, "o"
	DCB	0x0, "d", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IA@MLDLJNIO@?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AA?5?$AAT?$AAH?$AAI?$AAS?$AA?0?$AA?5?$AAI?$AAT?$AA?5@| DCB "#"
	DCB	0x0, "#", 0x0, "#", 0x0, "#", 0x0, "#", 0x0, "#", 0x0, "#"
	DCB	0x0, "#", 0x0, "#", 0x0, "#", 0x0, "#", 0x0, "#", 0x0, "#"
	DCB	0x0, "#", 0x0, "#", 0x0, "#", 0x0, " ", 0x0, "D", 0x0, "E"
	DCB	0x0, "B", 0x0, "U", 0x0, "G", 0x0, " ", 0x0, "T", 0x0, "H"
	DCB	0x0, "I", 0x0, "S", 0x0, ",", 0x0, " ", 0x0, "I", 0x0, "T"
	DCB	0x0, " ", 0x0, "I", 0x0, "S", 0x0, " ", 0x0, "D", 0x0, "E"
	DCB	0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, " ", 0x0, "M"
	DCB	0x0, "O", 0x0, "D", 0x0, "E", 0x0, " ", 0x0, "u", 0x0, "s"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "A", 0x0, "_"
	DCB	0x0, "D", 0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@IALLDFA@?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAI?$AAn?$AAt?$AAr?$AA_?$AAU?$AAS?$AAB?$AA?5?$AA?$DN@| DCB "S"
	DCB	0x0, "u", 0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d"
	DCB	0x0, " ", 0x0, "d", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "w", 0x0, "i"
	DCB	0x0, "t", 0x0, "h", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "_", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@FBPMAKFH@?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx@| DCB "S"
	DCB	0x0, "u", 0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d"
	DCB	0x0, " ", 0x0, "d", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "w", 0x0, "i"
	DCB	0x0, "t", 0x0, "h", 0x0, " ", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@HAAKHLDJ@?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAD?$AAe?$AAv?$AAC?$AAt?$AAl?$AA?5?$AA?$DN?$AA?5?$AA0@| DCB "S"
	DCB	0x0, "u", 0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d"
	DCB	0x0, " ", 0x0, "d", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "w", 0x0, "i"
	DCB	0x0, "t", 0x0, "h", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "C", 0x0, "t", 0x0, "l", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@KNLJNKPA@?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA_?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$DN?$AA0@| DCB "D"
	DCB	0x0, "i", 0x0, "s", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "n"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, " ", 0x0, "w", 0x0, "i"
	DCB	0x0, "t", 0x0, "h", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "_", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, "="
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@OPLGEMGP@?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAP?$AAw?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "i", 0x0, "s", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "n"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, " ", 0x0, "w", 0x0, "i"
	DCB	0x0, "t", 0x0, "h", 0x0, " ", 0x0, "P", 0x0, "w", 0x0, "r"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@JMEDNDKE@?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAS?$AAe?$AAs?$AAs?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "i", 0x0, "s", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "n"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, " ", 0x0, "w", 0x0, "i"
	DCB	0x0, "t", 0x0, "h", 0x0, " ", 0x0, "S", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@CKAHONI@?$AAB?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "B", 0x0, "T", 0x0
	DCB	"Y", 0x0, "P", 0x0, "E", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@PBLCKCII@?$AAH?$AAo?$AAs?$AAt?$AA?5?$AAd?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "H"
	DCB	0x0, "o", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "d", 0x0, "i"
	DCB	0x0, "s", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "n", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  04240			 AREA	 |.text|, CODE, ARM

  04240		 |?OTG_ConfigISR_stage2@OMAPMHSUSBOTG@@UAAKXZ| PROC ; OMAPMHSUSBOTG::OTG_ConfigISR_stage2

; 1492 : {    

  04240		 |$LN68@OTG_Config|
  04240	e1a0c00d	 mov         r12, sp
  04244	e92d0001	 stmdb       sp!, {r0}
  04248	e92d5000	 stmdb       sp!, {r12, lr}
  0424c	e24dd088	 sub         sp, sp, #0x88
  04250		 |$M43727|

; 1493 :     HKEY hkDevice;
; 1494 :     DWORD dwStatus;
; 1495 :     DWORD dwType, dwSize;
; 1496 :     
; 1497 :     // Step 1: Handling of SOF
; 1498 : 
; 1499 :     // Step 2: Handling of disconnect
; 1500 :     if ((((m_pOTG->intr_usb & INTRUSB_DISCONN) == INTRUSB_DISCONN)) || m_bSessionDisable)

  04250	e59d3090	 ldr         r3, [sp, #0x90]
  04254	e2833e15	 add         r3, r3, #0x15, 28
  04258	e5933000	 ldr         r3, [r3]
  0425c	e2833034	 add         r3, r3, #0x34
  04260	e5d33000	 ldrb        r3, [r3]
  04264	e2033020	 and         r3, r3, #0x20
  04268	e3530020	 cmp         r3, #0x20
  0426c	0a000004	 beq         |$LN34@OTG_Config|
  04270	e59d3090	 ldr         r3, [sp, #0x90]
  04274	e2833f5f	 add         r3, r3, #0x5F, 30
  04278	e5933000	 ldr         r3, [r3]
  0427c	e3530000	 cmp         r3, #0
  04280	0a000188	 beq         |$LN35@OTG_Config|
  04284		 |$LN34@OTG_Config|

; 1501 :     {
; 1502 :         DWORD dwPrevState;
; 1503 :         DWORD dwCurMode = m_pOTG->operateMode;              

  04284	e59d3090	 ldr         r3, [sp, #0x90]
  04288	e2833e15	 add         r3, r3, #0x15, 28
  0428c	e5933000	 ldr         r3, [r3]
  04290	e2833035	 add         r3, r3, #0x35
  04294	e5d33000	 ldrb        r3, [r3]
  04298	e58d301c	 str         r3, [sp, #0x1C]

; 1504 :         DEBUGMSG(1, (TEXT("Host disconnect detected\r\n")));        

  0429c	e59f0df4	 ldr         r0, [pc, #0xDF4]
  042a0	eb000000	 bl          NKDbgPrintfW
  042a4	e3a03001	 mov         r3, #1
  042a8	e58d303c	 str         r3, [sp, #0x3C]
  042ac	ea000001	 b           |$LN39@OTG_Config|
  042b0	e3a03000	 mov         r3, #0
  042b4	e58d303c	 str         r3, [sp, #0x3C]
  042b8		 |$LN39@OTG_Config|

; 1505 :         DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Disconnect detected\r\n")));        

  042b8	e59f3da4	 ldr         r3, [pc, #0xDA4]
  042bc	e5933440	 ldr         r3, [r3, #0x440]
  042c0	e3130a02	 tst         r3, #2, 20
  042c4	0a000004	 beq         |$LN40@OTG_Config|
  042c8	e59f0dc4	 ldr         r0, [pc, #0xDC4]
  042cc	eb000000	 bl          NKDbgPrintfW
  042d0	e3a03001	 mov         r3, #1
  042d4	e58d3040	 str         r3, [sp, #0x40]
  042d8	ea000001	 b           |$LN41@OTG_Config|
  042dc		 |$LN40@OTG_Config|
  042dc	e3a03000	 mov         r3, #0
  042e0	e58d3040	 str         r3, [sp, #0x40]
  042e4		 |$LN41@OTG_Config|

; 1506 : 
; 1507 :         if(!(ReadULPIReg( m_pOTG, ULPI_VENDORID_LOW_R)))

  042e4	e3a02000	 mov         r2, #0
  042e8	e59d3090	 ldr         r3, [sp, #0x90]
  042ec	e2833e15	 add         r3, r3, #0x15, 28
  042f0	e5931000	 ldr         r1, [r3]
  042f4	e59d0090	 ldr         r0, [sp, #0x90]
  042f8	eb000000	 bl          |?ReadULPIReg@OMAPMHSUSBOTG@@QAAEPAUHSMUSB_T@@E@Z|
  042fc	e5cd0044	 strb        r0, [sp, #0x44]
  04300	e5dd3044	 ldrb        r3, [sp, #0x44]
  04304	e3530000	 cmp         r3, #0
  04308	1a000006	 bne         |$LN33@OTG_Config|

; 1508 :         {
; 1509 :             SoftResetULPILink();

  0430c	e59d3090	 ldr         r3, [sp, #0x90]
  04310	e5933000	 ldr         r3, [r3]
  04314	e28330fc	 add         r3, r3, #0xFC
  04318	e59d0090	 ldr         r0, [sp, #0x90]
  0431c	e5933000	 ldr         r3, [r3]
  04320	e1a0e00f	 mov         lr, pc
  04324	e12fff13	 bx          r3
  04328		 |$LN33@OTG_Config|

; 1510 :         }
; 1511 :         m_bSessionDisable = FALSE;

  04328	e59d3090	 ldr         r3, [sp, #0x90]
  0432c	e2832f5f	 add         r2, r3, #0x5F, 30
  04330	e3a03000	 mov         r3, #0
  04334	e5823000	 str         r3, [r2]

; 1512 :         m_disconnected = TRUE;

  04338	e59d3090	 ldr         r3, [sp, #0x90]
  0433c	e2832f63	 add         r2, r3, #0x63, 30
  04340	e3a03001	 mov         r3, #1
  04344	e5823000	 str         r3, [r2]

; 1513 :         if ((m_dwStatus & STATUS_HNP_SESSION_MASK) == 0x00)

  04348	e59d3090	 ldr         r3, [sp, #0x90]
  0434c	e28330f8	 add         r3, r3, #0xF8
  04350	e5933000	 ldr         r3, [r3]
  04354	e3130030	 tst         r3, #0x30
  04358	1a0000fa	 bne         |$LN32@OTG_Config|

; 1514 :         {
; 1515 :             ResetEndPoints();

  0435c	e59d3090	 ldr         r3, [sp, #0x90]
  04360	e5933000	 ldr         r3, [r3]
  04364	e28330ec	 add         r3, r3, #0xEC
  04368	e59d0090	 ldr         r0, [sp, #0x90]
  0436c	e5933000	 ldr         r3, [r3]
  04370	e1a0e00f	 mov         lr, pc
  04374	e12fff13	 bx          r3

; 1516 :             // If we have done the disconnect, don't process anymore.
; 1517 :             if ((m_pOTG->connect_status & CONN_DC) == 0)

  04378	e59d3090	 ldr         r3, [sp, #0x90]
  0437c	e2833e15	 add         r3, r3, #0x15, 28
  04380	e5933000	 ldr         r3, [r3]
  04384	e283304c	 add         r3, r3, #0x4C
  04388	e5d33000	 ldrb        r3, [r3]
  0438c	e3130004	 tst         r3, #4
  04390	1a000007	 bne         |$LN31@OTG_Config|

; 1518 :                 m_dwStatus |= STATUS_DISCONN_REQUEST|STATUS_WAIT_HOST_DISCONN_COMPLETE;

  04394	e59d3090	 ldr         r3, [sp, #0x90]
  04398	e28330f8	 add         r3, r3, #0xF8
  0439c	e5933000	 ldr         r3, [r3]
  043a0	e3832042	 orr         r2, r3, #0x42
  043a4	e59d3090	 ldr         r3, [sp, #0x90]
  043a8	e28330f8	 add         r3, r3, #0xF8
  043ac	e5832000	 str         r2, [r3]

; 1519 :             else                         

  043b0	ea00000e	 b           |$LN30@OTG_Config|
  043b4		 |$LN31@OTG_Config|

; 1520 :             {
; 1521 :                 m_dwStatus &= ~STATUS_WAIT_HOST_DISCONN_COMPLETE;

  043b4	e59d3090	 ldr         r3, [sp, #0x90]
  043b8	e28330f8	 add         r3, r3, #0xF8
  043bc	e5932000	 ldr         r2, [r3]
  043c0	e3e03040	 mvn         r3, #0x40
  043c4	e0022003	 and         r2, r2, r3
  043c8	e59d3090	 ldr         r3, [sp, #0x90]
  043cc	e28330f8	 add         r3, r3, #0xF8
  043d0	e5832000	 str         r2, [r3]

; 1522 :                 m_dwStatus |= STATUS_DISCONN_COMPLETE;           

  043d4	e59d3090	 ldr         r3, [sp, #0x90]
  043d8	e28330f8	 add         r3, r3, #0xF8
  043dc	e5933000	 ldr         r3, [r3]
  043e0	e3832008	 orr         r2, r3, #8
  043e4	e59d3090	 ldr         r3, [sp, #0x90]
  043e8	e28330f8	 add         r3, r3, #0xF8
  043ec	e5832000	 str         r2, [r3]
  043f0		 |$LN30@OTG_Config|

; 1523 :             }
; 1524 :             
; 1525 :             //DEBUGMSG(1, (TEXT("operateMode = IDLE (disconnect, ISR_stage2)\r\n")));
; 1526 :             m_pOTG->operateMode = IDLE_MODE;

  043f0	e59d3090	 ldr         r3, [sp, #0x90]
  043f4	e2833e15	 add         r3, r3, #0x15, 28
  043f8	e5933000	 ldr         r3, [r3]
  043fc	e2832035	 add         r2, r3, #0x35
  04400	e3a03000	 mov         r3, #0
  04404	e5c23000	 strb        r3, [r2]

; 1527 :             dwPrevState = m_pOTG->connect_status;

  04408	e59d3090	 ldr         r3, [sp, #0x90]
  0440c	e2833e15	 add         r3, r3, #0x15, 28
  04410	e5933000	 ldr         r3, [r3]
  04414	e283304c	 add         r3, r3, #0x4C
  04418	e5d33000	 ldrb        r3, [r3]
  0441c	e58d3018	 str         r3, [sp, #0x18]

; 1528 :             m_pOTG->connect_status &= ~CONN_CCS;

  04420	e59d3090	 ldr         r3, [sp, #0x90]
  04424	e2833e15	 add         r3, r3, #0x15, 28
  04428	e5933000	 ldr         r3, [r3]
  0442c	e283304c	 add         r3, r3, #0x4C
  04430	e5d33000	 ldrb        r3, [r3]
  04434	e1a02003	 mov         r2, r3
  04438	e3e03001	 mvn         r3, #1
  0443c	e0021003	 and         r1, r2, r3
  04440	e59d3090	 ldr         r3, [sp, #0x90]
  04444	e2833e15	 add         r3, r3, #0x15, 28
  04448	e5933000	 ldr         r3, [r3]
  0444c	e283204c	 add         r2, r3, #0x4C
  04450	e20130ff	 and         r3, r1, #0xFF
  04454	e5c23000	 strb        r3, [r2]

; 1529 :             if (dwPrevState & CONN_CCS) 

  04458	e59d3018	 ldr         r3, [sp, #0x18]
  0445c	e3130001	 tst         r3, #1
  04460	0a00000c	 beq         |$LN29@OTG_Config|

; 1530 :                 m_pOTG->connect_status |= CONN_CSC;

  04464	e59d3090	 ldr         r3, [sp, #0x90]
  04468	e2833e15	 add         r3, r3, #0x15, 28
  0446c	e5933000	 ldr         r3, [r3]
  04470	e283304c	 add         r3, r3, #0x4C
  04474	e5d33000	 ldrb        r3, [r3]
  04478	e3831002	 orr         r1, r3, #2
  0447c	e59d3090	 ldr         r3, [sp, #0x90]
  04480	e2833e15	 add         r3, r3, #0x15, 28
  04484	e5933000	 ldr         r3, [r3]
  04488	e283204c	 add         r2, r3, #0x4C
  0448c	e20130ff	 and         r3, r1, #0xFF
  04490	e5c23000	 strb        r3, [r2]

; 1531 :             else

  04494	ea00000d	 b           |$LN28@OTG_Config|
  04498		 |$LN29@OTG_Config|

; 1532 :                 m_pOTG->connect_status &= ~CONN_CSC;

  04498	e59d3090	 ldr         r3, [sp, #0x90]
  0449c	e2833e15	 add         r3, r3, #0x15, 28
  044a0	e5933000	 ldr         r3, [r3]
  044a4	e283304c	 add         r3, r3, #0x4C
  044a8	e5d33000	 ldrb        r3, [r3]
  044ac	e1a02003	 mov         r2, r3
  044b0	e3e03002	 mvn         r3, #2
  044b4	e0021003	 and         r1, r2, r3
  044b8	e59d3090	 ldr         r3, [sp, #0x90]
  044bc	e2833e15	 add         r3, r3, #0x15, 28
  044c0	e5933000	 ldr         r3, [r3]
  044c4	e283204c	 add         r2, r3, #0x4C
  044c8	e20130ff	 and         r3, r1, #0xFF
  044cc	e5c23000	 strb        r3, [r2]
  044d0		 |$LN28@OTG_Config|

; 1533 : 
; 1534 :             if (dwCurMode == DEVICE_MODE)

  044d0	e59d301c	 ldr         r3, [sp, #0x1C]
  044d4	e3530001	 cmp         r3, #1
  044d8	1a000073	 bne         |$LN27@OTG_Config|

; 1535 :             {
; 1536 :                 m_pTransceiver->SetVBusSource(TRUE);

  044dc	e3a01001	 mov         r1, #1
  044e0	e59d3090	 ldr         r3, [sp, #0x90]
  044e4	e28330fc	 add         r3, r3, #0xFC
  044e8	e5932000	 ldr         r2, [r3]
  044ec	e59d3090	 ldr         r3, [sp, #0x90]
  044f0	e28330fc	 add         r3, r3, #0xFC
  044f4	e5930000	 ldr         r0, [r3]
  044f8	e5923000	 ldr         r3, [r2]
  044fc	e2833004	 add         r3, r3, #4
  04500	e5933000	 ldr         r3, [r3]
  04504	e1a0e00f	 mov         lr, pc
  04508	e12fff13	 bx          r3

; 1537 : 
; 1538 :                 m_dwbTypeConnector = 0;

  0450c	e59d3090	 ldr         r3, [sp, #0x90]
  04510	e2832f66	 add         r2, r3, #0x66, 30
  04514	e3a03000	 mov         r3, #0
  04518	e5823000	 str         r3, [r2]

; 1539 : 
; 1540 :                 dwStatus = ::RegOpenKeyEx(HKEY_LOCAL_MACHINE, (LPCTSTR) REG_USBFN_DRV_PATH, 0, KEY_ALL_ACCESS, &hkDevice);

  0451c	e28d3014	 add         r3, sp, #0x14
  04520	e58d3000	 str         r3, [sp]
  04524	e3a0380f	 mov         r3, #0xF, 16
  04528	e383303f	 orr         r3, r3, #0x3F
  0452c	e3a02000	 mov         r2, #0
  04530	e59f1b50	 ldr         r1, [pc, #0xB50]
  04534	e3a0010a	 mov         r0, #0xA, 2
  04538	eb000000	 bl          RegOpenKeyExW
  0453c	e58d0048	 str         r0, [sp, #0x48]
  04540	e59d3048	 ldr         r3, [sp, #0x48]
  04544	e58d3010	 str         r3, [sp, #0x10]

; 1541 :                 if(dwStatus != ERROR_SUCCESS)

  04548	e59d3010	 ldr         r3, [sp, #0x10]
  0454c	e3530000	 cmp         r3, #0
  04550	0a00000e	 beq         |$LN26@OTG_Config|

; 1542 :                 {
; 1543 :                     DEBUGMSG(ZONE_OTG_INFO, (_T("UfnPdd_Init: OpenDeviceKey('%s') failed %u\r\n"), REG_USBFN_DRV_PATH, dwStatus));

  04554	e59f3b08	 ldr         r3, [pc, #0xB08]
  04558	e5933440	 ldr         r3, [r3, #0x440]
  0455c	e3130a01	 tst         r3, #1, 20
  04560	0a000006	 beq         |$LN42@OTG_Config|
  04564	e59d2010	 ldr         r2, [sp, #0x10]
  04568	e59f1b18	 ldr         r1, [pc, #0xB18]
  0456c	e59f0b1c	 ldr         r0, [pc, #0xB1C]
  04570	eb000000	 bl          NKDbgPrintfW
  04574	e3a03001	 mov         r3, #1
  04578	e58d304c	 str         r3, [sp, #0x4C]
  0457c	ea000001	 b           |$LN43@OTG_Config|
  04580		 |$LN42@OTG_Config|
  04580	e3a03000	 mov         r3, #0
  04584	e58d304c	 str         r3, [sp, #0x4C]
  04588		 |$LN43@OTG_Config|

; 1544 :                     goto cleanUp;

  04588	ea0002ab	 b           |$LN25@OTG_Config|
  0458c	ea0002aa	 b           |$cleanUp$41258|
  04590		 |$LN26@OTG_Config|

; 1545 :                 }
; 1546 : 
; 1547 :                 dwType = REG_DWORD;

  04590	e3a03004	 mov         r3, #4
  04594	e58d3008	 str         r3, [sp, #8]

; 1548 :                 dwSize = sizeof(m_dwbTypeConnector);

  04598	e3a03004	 mov         r3, #4
  0459c	e58d300c	 str         r3, [sp, #0xC]

; 1549 :                 dwStatus = ::RegSetValueEx(hkDevice, REG_VBUS_CHARGE_B_TYPE_CONNECTOR, NULL, dwType, 
; 1550 :                     (LPBYTE) &m_dwbTypeConnector, dwSize);

  045a0	e59d300c	 ldr         r3, [sp, #0xC]
  045a4	e58d3004	 str         r3, [sp, #4]
  045a8	e59d3090	 ldr         r3, [sp, #0x90]
  045ac	e2833f66	 add         r3, r3, #0x66, 30
  045b0	e58d3000	 str         r3, [sp]
  045b4	e59d3008	 ldr         r3, [sp, #8]
  045b8	e3a02000	 mov         r2, #0
  045bc	e59f1ac8	 ldr         r1, [pc, #0xAC8]
  045c0	e59d0014	 ldr         r0, [sp, #0x14]
  045c4	eb000000	 bl          RegSetValueExW
  045c8	e58d0050	 str         r0, [sp, #0x50]
  045cc	e59d3050	 ldr         r3, [sp, #0x50]
  045d0	e58d3010	 str         r3, [sp, #0x10]

; 1551 :                 if(dwStatus != ERROR_SUCCESS || dwType != REG_DWORD)

  045d4	e59d3010	 ldr         r3, [sp, #0x10]
  045d8	e3530000	 cmp         r3, #0
  045dc	1a000002	 bne         |$LN23@OTG_Config|
  045e0	e59d3008	 ldr         r3, [sp, #8]
  045e4	e3530004	 cmp         r3, #4
  045e8	0a000011	 beq         |$LN24@OTG_Config|
  045ec		 |$LN23@OTG_Config|

; 1552 :                 {
; 1553 :                     DEBUGMSG(ZONE_OTG_INFO, (_T("UFNPDD_Init: RegQueryValueEx('%s', '%s') failed %u\r\n"),
; 1554 :                         REG_USBFN_DRV_PATH, REG_VBUS_CHARGE_B_TYPE_CONNECTOR, dwStatus));

  045ec	e59f3a70	 ldr         r3, [pc, #0xA70]
  045f0	e5933440	 ldr         r3, [r3, #0x440]
  045f4	e3130a01	 tst         r3, #1, 20
  045f8	0a000007	 beq         |$LN44@OTG_Config|
  045fc	e59d3010	 ldr         r3, [sp, #0x10]
  04600	e59f2a84	 ldr         r2, [pc, #0xA84]
  04604	e59f1a7c	 ldr         r1, [pc, #0xA7C]
  04608	e59f0a74	 ldr         r0, [pc, #0xA74]
  0460c	eb000000	 bl          NKDbgPrintfW
  04610	e3a03001	 mov         r3, #1
  04614	e58d3054	 str         r3, [sp, #0x54]
  04618	ea000001	 b           |$LN45@OTG_Config|
  0461c		 |$LN44@OTG_Config|
  0461c	e3a03000	 mov         r3, #0
  04620	e58d3054	 str         r3, [sp, #0x54]
  04624		 |$LN45@OTG_Config|

; 1555 :                     RegCloseKey(hkDevice);

  04624	e59d0014	 ldr         r0, [sp, #0x14]
  04628	eb000000	 bl          RegCloseKey
  0462c	ea000282	 b           |$LN22@OTG_Config|

; 1556 :                     goto cleanUp;

  04630	ea000281	 b           |$cleanUp$41258|
  04634		 |$LN24@OTG_Config|

; 1557 :                 }
; 1558 :                 RegCloseKey(hkDevice);

  04634	e59d0014	 ldr         r0, [sp, #0x14]
  04638	eb000000	 bl          RegCloseKey

; 1559 : 
; 1560 :                 if (m_pOTG->pFuncs[DEVICE_MODE-1] != NULL)

  0463c	e59d3090	 ldr         r3, [sp, #0x90]
  04640	e2833e15	 add         r3, r3, #0x15, 28
  04644	e5933000	 ldr         r3, [r3]
  04648	e2833008	 add         r3, r3, #8
  0464c	e5933000	 ldr         r3, [r3]
  04650	e3530000	 cmp         r3, #0
  04654	0a00000b	 beq         |$LN21@OTG_Config|

; 1561 :                     m_pOTG->pFuncs[DEVICE_MODE-1]->Disconnect((void *)m_pOTG);

  04658	e59d3090	 ldr         r3, [sp, #0x90]
  0465c	e2833e15	 add         r3, r3, #0x15, 28
  04660	e5930000	 ldr         r0, [r3]
  04664	e59d3090	 ldr         r3, [sp, #0x90]
  04668	e2833e15	 add         r3, r3, #0x15, 28
  0466c	e5933000	 ldr         r3, [r3]
  04670	e2833008	 add         r3, r3, #8
  04674	e5933000	 ldr         r3, [r3]
  04678	e2833018	 add         r3, r3, #0x18
  0467c	e5933000	 ldr         r3, [r3]
  04680	e1a0e00f	 mov         lr, pc
  04684	e12fff13	 bx          r3
  04688		 |$LN21@OTG_Config|

; 1562 :                 SoftResetMUSBController();

  04688	e3a01000	 mov         r1, #0
  0468c	e59d3090	 ldr         r3, [sp, #0x90]
  04690	e5933000	 ldr         r3, [r3]
  04694	e28330f8	 add         r3, r3, #0xF8
  04698	e59d0090	 ldr         r0, [sp, #0x90]
  0469c	e5933000	 ldr         r3, [r3]
  046a0	e1a0e00f	 mov         lr, pc
  046a4	e12fff13	 bx          r3
  046a8	ea000026	 b           |$LN20@OTG_Config|
  046ac		 |$LN27@OTG_Config|

; 1563 : 
; 1564 :             }
; 1565 :             else if (dwCurMode == HOST_MODE)

  046ac	e59d301c	 ldr         r3, [sp, #0x1C]
  046b0	e3530002	 cmp         r3, #2
  046b4	1a000023	 bne         |$LN19@OTG_Config|

; 1566 :             {
; 1567 :                 if (m_pOTG->pFuncs[HOST_MODE-1] != NULL)

  046b8	e59d3090	 ldr         r3, [sp, #0x90]
  046bc	e2833e15	 add         r3, r3, #0x15, 28
  046c0	e5933000	 ldr         r3, [r3]
  046c4	e283300c	 add         r3, r3, #0xC
  046c8	e5933000	 ldr         r3, [r3]
  046cc	e3530000	 cmp         r3, #0
  046d0	0a00000b	 beq         |$LN18@OTG_Config|

; 1568 :                     m_pOTG->pFuncs[HOST_MODE-1]->Disconnect((void *)m_pOTG);         

  046d4	e59d3090	 ldr         r3, [sp, #0x90]
  046d8	e2833e15	 add         r3, r3, #0x15, 28
  046dc	e5930000	 ldr         r0, [r3]
  046e0	e59d3090	 ldr         r3, [sp, #0x90]
  046e4	e2833e15	 add         r3, r3, #0x15, 28
  046e8	e5933000	 ldr         r3, [r3]
  046ec	e283300c	 add         r3, r3, #0xC
  046f0	e5933000	 ldr         r3, [r3]
  046f4	e2833018	 add         r3, r3, #0x18
  046f8	e5933000	 ldr         r3, [r3]
  046fc	e1a0e00f	 mov         lr, pc
  04700	e12fff13	 bx          r3
  04704		 |$LN18@OTG_Config|

; 1569 : 
; 1570 :                 SessionRequest(FALSE, FALSE);

  04704	e3a02000	 mov         r2, #0
  04708	e3a01000	 mov         r1, #0
  0470c	e59d3090	 ldr         r3, [sp, #0x90]
  04710	e5933000	 ldr         r3, [r3]
  04714	e2833084	 add         r3, r3, #0x84
  04718	e59d0090	 ldr         r0, [sp, #0x90]
  0471c	e5933000	 ldr         r3, [r3]
  04720	e1a0e00f	 mov         lr, pc
  04724	e12fff13	 bx          r3

; 1571 :                 SoftResetMUSBController();

  04728	e3a01000	 mov         r1, #0
  0472c	e59d3090	 ldr         r3, [sp, #0x90]
  04730	e5933000	 ldr         r3, [r3]
  04734	e28330f8	 add         r3, r3, #0xF8
  04738	e59d0090	 ldr         r0, [sp, #0x90]
  0473c	e5933000	 ldr         r3, [r3]
  04740	e1a0e00f	 mov         lr, pc
  04744	e12fff13	 bx          r3
  04748		 |$LN19@OTG_Config|
  04748		 |$LN20@OTG_Config|
  04748		 |$LN32@OTG_Config|

; 1572 : 
; 1573 :             } 
; 1574 :         }
; 1575 : 
; 1576 :         DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Disconnect with Sess = 0x%x\r\n"),INREG8(&m_pOTG->pUsbGenRegs->DevCtl)));            

  04748	e59f3914	 ldr         r3, [pc, #0x914]
  0474c	e5933440	 ldr         r3, [r3, #0x440]
  04750	e3130a02	 tst         r3, #2, 20
  04754	0a00000c	 beq         |$LN46@OTG_Config|
  04758	e59d3090	 ldr         r3, [sp, #0x90]
  0475c	e2833e15	 add         r3, r3, #0x15, 28
  04760	e5933000	 ldr         r3, [r3]
  04764	e2833020	 add         r3, r3, #0x20
  04768	e5933000	 ldr         r3, [r3]
  0476c	e2833060	 add         r3, r3, #0x60
  04770	e5d33000	 ldrb        r3, [r3]
  04774	e1a01003	 mov         r1, r3
  04778	e59f0900	 ldr         r0, [pc, #0x900]
  0477c	eb000000	 bl          NKDbgPrintfW
  04780	e3a03001	 mov         r3, #1
  04784	e58d3058	 str         r3, [sp, #0x58]
  04788	ea000001	 b           |$LN47@OTG_Config|
  0478c		 |$LN46@OTG_Config|
  0478c	e3a03000	 mov         r3, #0
  04790	e58d3058	 str         r3, [sp, #0x58]
  04794		 |$LN47@OTG_Config|

; 1577 :         DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Disconnect with Pwr = 0x%x\r\n"), INREG8(&m_pOTG->pUsbGenRegs->Power)));

  04794	e59f38c8	 ldr         r3, [pc, #0x8C8]
  04798	e5933440	 ldr         r3, [r3, #0x440]
  0479c	e3130a02	 tst         r3, #2, 20
  047a0	0a00000c	 beq         |$LN48@OTG_Config|
  047a4	e59d3090	 ldr         r3, [sp, #0x90]
  047a8	e2833e15	 add         r3, r3, #0x15, 28
  047ac	e5933000	 ldr         r3, [r3]
  047b0	e2833020	 add         r3, r3, #0x20
  047b4	e5933000	 ldr         r3, [r3]
  047b8	e2833001	 add         r3, r3, #1
  047bc	e5d33000	 ldrb        r3, [r3]
  047c0	e1a01003	 mov         r1, r3
  047c4	e59f08b0	 ldr         r0, [pc, #0x8B0]
  047c8	eb000000	 bl          NKDbgPrintfW
  047cc	e3a03001	 mov         r3, #1
  047d0	e58d305c	 str         r3, [sp, #0x5C]
  047d4	ea000001	 b           |$LN49@OTG_Config|
  047d8		 |$LN48@OTG_Config|
  047d8	e3a03000	 mov         r3, #0
  047dc	e58d305c	 str         r3, [sp, #0x5C]
  047e0		 |$LN49@OTG_Config|

; 1578 :         DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Disconnect with connect_status=0x%x\r\n"), INREG8(&m_pOTG->connect_status)));

  047e0	e59f387c	 ldr         r3, [pc, #0x87C]
  047e4	e5933440	 ldr         r3, [r3, #0x440]
  047e8	e3130a02	 tst         r3, #2, 20
  047ec	0a00000a	 beq         |$LN50@OTG_Config|
  047f0	e59d3090	 ldr         r3, [sp, #0x90]
  047f4	e2833e15	 add         r3, r3, #0x15, 28
  047f8	e5933000	 ldr         r3, [r3]
  047fc	e283304c	 add         r3, r3, #0x4C
  04800	e5d33000	 ldrb        r3, [r3]
  04804	e1a01003	 mov         r1, r3
  04808	e59f0868	 ldr         r0, [pc, #0x868]
  0480c	eb000000	 bl          NKDbgPrintfW
  04810	e3a03001	 mov         r3, #1
  04814	e58d3060	 str         r3, [sp, #0x60]
  04818	ea000001	 b           |$LN51@OTG_Config|
  0481c		 |$LN50@OTG_Config|
  0481c	e3a03000	 mov         r3, #0
  04820	e58d3060	 str         r3, [sp, #0x60]
  04824		 |$LN51@OTG_Config|

; 1579 : 
; 1580 :         // disable suspend interrupt as needed
; 1581 :         if (!m_pTransceiver->SupportsTransceiverWakeWithoutClock())

  04824	e59d3090	 ldr         r3, [sp, #0x90]
  04828	e28330fc	 add         r3, r3, #0xFC
  0482c	e5932000	 ldr         r2, [r3]
  04830	e59d3090	 ldr         r3, [sp, #0x90]
  04834	e28330fc	 add         r3, r3, #0xFC
  04838	e5930000	 ldr         r0, [r3]
  0483c	e5923000	 ldr         r3, [r2]
  04840	e2833014	 add         r3, r3, #0x14
  04844	e5933000	 ldr         r3, [r3]
  04848	e1a0e00f	 mov         lr, pc
  0484c	e12fff13	 bx          r3
  04850	e58d0064	 str         r0, [sp, #0x64]
  04854	e59d3064	 ldr         r3, [sp, #0x64]
  04858	e3530000	 cmp         r3, #0
  0485c	1a000011	 bne         |$LN17@OTG_Config|

; 1582 :             CLRREG8(&m_pOTG->pUsbGenRegs->IntrUSBE, INTRUSB_SUSPEND);  

  04860	e59d3090	 ldr         r3, [sp, #0x90]
  04864	e2833e15	 add         r3, r3, #0x15, 28
  04868	e5933000	 ldr         r3, [r3]
  0486c	e2833020	 add         r3, r3, #0x20
  04870	e5933000	 ldr         r3, [r3]
  04874	e283300b	 add         r3, r3, #0xB
  04878	e5d33000	 ldrb        r3, [r3]
  0487c	e1a02003	 mov         r2, r3
  04880	e3e03001	 mvn         r3, #1
  04884	e0023003	 and         r3, r2, r3
  04888	e20320ff	 and         r2, r3, #0xFF
  0488c	e59d3090	 ldr         r3, [sp, #0x90]
  04890	e2833e15	 add         r3, r3, #0x15, 28
  04894	e5933000	 ldr         r3, [r3]
  04898	e2833020	 add         r3, r3, #0x20
  0489c	e5933000	 ldr         r3, [r3]
  048a0	e283300b	 add         r3, r3, #0xB
  048a4	e5c32000	 strb        r2, [r3]
  048a8		 |$LN17@OTG_Config|
  048a8		 |$LN35@OTG_Config|

; 1583 :     }
; 1584 : 
; 1585 :     // Step 3: Handling of suspend
; 1586 :     if ((m_pOTG->intr_usb & INTRUSB_SUSPEND) == INTRUSB_SUSPEND)

  048a8	e59d3090	 ldr         r3, [sp, #0x90]
  048ac	e2833e15	 add         r3, r3, #0x15, 28
  048b0	e5933000	 ldr         r3, [r3]
  048b4	e2833034	 add         r3, r3, #0x34
  048b8	e5d33000	 ldrb        r3, [r3]
  048bc	e2033001	 and         r3, r3, #1
  048c0	e3530001	 cmp         r3, #1
  048c4	1a0001dc	 bne         |$LN16@OTG_Config|

; 1587 :     {
; 1588 :         DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Suspend detected with DevCtl = 0x%x\r\n"), INREG8(&m_pOTG->pUsbGenRegs->DevCtl)));

  048c8	e59f3794	 ldr         r3, [pc, #0x794]
  048cc	e5933440	 ldr         r3, [r3, #0x440]
  048d0	e3130a02	 tst         r3, #2, 20
  048d4	0a00000c	 beq         |$LN52@OTG_Config|
  048d8	e59d3090	 ldr         r3, [sp, #0x90]
  048dc	e2833e15	 add         r3, r3, #0x15, 28
  048e0	e5933000	 ldr         r3, [r3]
  048e4	e2833020	 add         r3, r3, #0x20
  048e8	e5933000	 ldr         r3, [r3]
  048ec	e2833060	 add         r3, r3, #0x60
  048f0	e5d33000	 ldrb        r3, [r3]
  048f4	e1a01003	 mov         r1, r3
  048f8	e59f0774	 ldr         r0, [pc, #0x774]
  048fc	eb000000	 bl          NKDbgPrintfW
  04900	e3a03001	 mov         r3, #1
  04904	e58d3068	 str         r3, [sp, #0x68]
  04908	ea000001	 b           |$LN53@OTG_Config|
  0490c		 |$LN52@OTG_Config|
  0490c	e3a03000	 mov         r3, #0
  04910	e58d3068	 str         r3, [sp, #0x68]
  04914		 |$LN53@OTG_Config|

; 1589 :         DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Suspend detected with Power = 0x%x\r\n"), INREG8(&m_pOTG->pUsbGenRegs->Power)));

  04914	e59f3748	 ldr         r3, [pc, #0x748]
  04918	e5933440	 ldr         r3, [r3, #0x440]
  0491c	e3130a02	 tst         r3, #2, 20
  04920	0a00000c	 beq         |$LN54@OTG_Config|
  04924	e59d3090	 ldr         r3, [sp, #0x90]
  04928	e2833e15	 add         r3, r3, #0x15, 28
  0492c	e5933000	 ldr         r3, [r3]
  04930	e2833020	 add         r3, r3, #0x20
  04934	e5933000	 ldr         r3, [r3]
  04938	e2833001	 add         r3, r3, #1
  0493c	e5d33000	 ldrb        r3, [r3]
  04940	e1a01003	 mov         r1, r3
  04944	e59f0724	 ldr         r0, [pc, #0x724]
  04948	eb000000	 bl          NKDbgPrintfW
  0494c	e3a03001	 mov         r3, #1
  04950	e58d306c	 str         r3, [sp, #0x6C]
  04954	ea000001	 b           |$LN55@OTG_Config|
  04958		 |$LN54@OTG_Config|
  04958	e3a03000	 mov         r3, #0
  0495c	e58d306c	 str         r3, [sp, #0x6C]
  04960		 |$LN55@OTG_Config|

; 1590 :         DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Suspend detected with Intr_USB = 0x%x\r\n"), m_pOTG->intr_usb));

  04960	e59f36fc	 ldr         r3, [pc, #0x6FC]
  04964	e5933440	 ldr         r3, [r3, #0x440]
  04968	e3130a02	 tst         r3, #2, 20
  0496c	0a00000a	 beq         |$LN56@OTG_Config|
  04970	e59d3090	 ldr         r3, [sp, #0x90]
  04974	e2833e15	 add         r3, r3, #0x15, 28
  04978	e5933000	 ldr         r3, [r3]
  0497c	e2833034	 add         r3, r3, #0x34
  04980	e5d33000	 ldrb        r3, [r3]
  04984	e1a01003	 mov         r1, r3
  04988	e59f06dc	 ldr         r0, [pc, #0x6DC]
  0498c	eb000000	 bl          NKDbgPrintfW
  04990	e3a03001	 mov         r3, #1
  04994	e58d3070	 str         r3, [sp, #0x70]
  04998	ea000001	 b           |$LN57@OTG_Config|
  0499c		 |$LN56@OTG_Config|
  0499c	e3a03000	 mov         r3, #0
  049a0	e58d3070	 str         r3, [sp, #0x70]
  049a4		 |$LN57@OTG_Config|

; 1591 : 
; 1592 :         if ((m_pOTG->operateMode == DEVICE_MODE) && (m_pOTG->deviceType == A_DEVICE))

  049a4	e59d3090	 ldr         r3, [sp, #0x90]
  049a8	e2833e15	 add         r3, r3, #0x15, 28
  049ac	e5933000	 ldr         r3, [r3]
  049b0	e2833035	 add         r3, r3, #0x35
  049b4	e5d33000	 ldrb        r3, [r3]
  049b8	e3530001	 cmp         r3, #1
  049bc	1a00009b	 bne         |$LN15@OTG_Config|
  049c0	e59d3090	 ldr         r3, [sp, #0x90]
  049c4	e2833e15	 add         r3, r3, #0x15, 28
  049c8	e5933000	 ldr         r3, [r3]
  049cc	e2833036	 add         r3, r3, #0x36
  049d0	e5d33000	 ldrb        r3, [r3]
  049d4	e3530000	 cmp         r3, #0
  049d8	1a000094	 bne         |$LN15@OTG_Config|

; 1593 :         {
; 1594 :             DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("################ DEBUG THIS, IT IS DEVICE MODE using A_DEVICE\r\n")));

  049dc	e59f3680	 ldr         r3, [pc, #0x680]
  049e0	e5933440	 ldr         r3, [r3, #0x440]
  049e4	e3130a02	 tst         r3, #2, 20
  049e8	0a000004	 beq         |$LN58@OTG_Config|
  049ec	e59f066c	 ldr         r0, [pc, #0x66C]
  049f0	eb000000	 bl          NKDbgPrintfW
  049f4	e3a03001	 mov         r3, #1
  049f8	e58d3074	 str         r3, [sp, #0x74]
  049fc	ea000001	 b           |$LN59@OTG_Config|
  04a00		 |$LN58@OTG_Config|
  04a00	e3a03000	 mov         r3, #0
  04a04	e58d3074	 str         r3, [sp, #0x74]
  04a08		 |$LN59@OTG_Config|

; 1595 :             DWORD dwPrevState;
; 1596 :             RETAILMSG(1, (TEXT("A_DEVICE:HNP switching and need to disconnect device mode\r\n")));

  04a08	e59f0658	 ldr         r0, [pc, #0x658]
  04a0c	eb000000	 bl          NKDbgPrintfW
  04a10	e3a03001	 mov         r3, #1
  04a14	e58d3078	 str         r3, [sp, #0x78]
  04a18	ea000001	 b           |$LN61@OTG_Config|
  04a1c	e3a03000	 mov         r3, #0
  04a20	e58d3078	 str         r3, [sp, #0x78]
  04a24		 |$LN61@OTG_Config|

; 1597 :             m_dwStatus |= STATUS_DISCONN_COMPLETE;

  04a24	e59d3090	 ldr         r3, [sp, #0x90]
  04a28	e28330f8	 add         r3, r3, #0xF8
  04a2c	e5933000	 ldr         r3, [r3]
  04a30	e3832008	 orr         r2, r3, #8
  04a34	e59d3090	 ldr         r3, [sp, #0x90]
  04a38	e28330f8	 add         r3, r3, #0xF8
  04a3c	e5832000	 str         r2, [r3]

; 1598 :             m_dwStatus &= ~STATUS_WAIT_HOST_DISCONN_COMPLETE;

  04a40	e59d3090	 ldr         r3, [sp, #0x90]
  04a44	e28330f8	 add         r3, r3, #0xF8
  04a48	e5932000	 ldr         r2, [r3]
  04a4c	e3e03040	 mvn         r3, #0x40
  04a50	e0022003	 and         r2, r2, r3
  04a54	e59d3090	 ldr         r3, [sp, #0x90]
  04a58	e28330f8	 add         r3, r3, #0xF8
  04a5c	e5832000	 str         r2, [r3]

; 1599 :             //DEBUGMSG(1, (TEXT("operateMode = IDLE (suspend device)\r\n")));
; 1600 :             m_pOTG->operateMode = IDLE_MODE;

  04a60	e59d3090	 ldr         r3, [sp, #0x90]
  04a64	e2833e15	 add         r3, r3, #0x15, 28
  04a68	e5933000	 ldr         r3, [r3]
  04a6c	e2832035	 add         r2, r3, #0x35
  04a70	e3a03000	 mov         r3, #0
  04a74	e5c23000	 strb        r3, [r2]

; 1601 :             m_pOTG->connect_status |= CONN_DC;

  04a78	e59d3090	 ldr         r3, [sp, #0x90]
  04a7c	e2833e15	 add         r3, r3, #0x15, 28
  04a80	e5933000	 ldr         r3, [r3]
  04a84	e283304c	 add         r3, r3, #0x4C
  04a88	e5d33000	 ldrb        r3, [r3]
  04a8c	e3831004	 orr         r1, r3, #4
  04a90	e59d3090	 ldr         r3, [sp, #0x90]
  04a94	e2833e15	 add         r3, r3, #0x15, 28
  04a98	e5933000	 ldr         r3, [r3]
  04a9c	e283204c	 add         r2, r3, #0x4C
  04aa0	e20130ff	 and         r3, r1, #0xFF
  04aa4	e5c23000	 strb        r3, [r2]

; 1602 :             dwPrevState = m_pOTG->connect_status;

  04aa8	e59d3090	 ldr         r3, [sp, #0x90]
  04aac	e2833e15	 add         r3, r3, #0x15, 28
  04ab0	e5933000	 ldr         r3, [r3]
  04ab4	e283304c	 add         r3, r3, #0x4C
  04ab8	e5d33000	 ldrb        r3, [r3]
  04abc	e58d3020	 str         r3, [sp, #0x20]

; 1603 :             m_pOTG->connect_status &= ~CONN_CCS;

  04ac0	e59d3090	 ldr         r3, [sp, #0x90]
  04ac4	e2833e15	 add         r3, r3, #0x15, 28
  04ac8	e5933000	 ldr         r3, [r3]
  04acc	e283304c	 add         r3, r3, #0x4C
  04ad0	e5d33000	 ldrb        r3, [r3]
  04ad4	e1a02003	 mov         r2, r3
  04ad8	e3e03001	 mvn         r3, #1
  04adc	e0021003	 and         r1, r2, r3
  04ae0	e59d3090	 ldr         r3, [sp, #0x90]
  04ae4	e2833e15	 add         r3, r3, #0x15, 28
  04ae8	e5933000	 ldr         r3, [r3]
  04aec	e283204c	 add         r2, r3, #0x4C
  04af0	e20130ff	 and         r3, r1, #0xFF
  04af4	e5c23000	 strb        r3, [r2]

; 1604 :             if (dwPrevState & CONN_CCS) 

  04af8	e59d3020	 ldr         r3, [sp, #0x20]
  04afc	e3130001	 tst         r3, #1
  04b00	0a00000c	 beq         |$LN14@OTG_Config|

; 1605 :                 m_pOTG->connect_status |= CONN_CSC;

  04b04	e59d3090	 ldr         r3, [sp, #0x90]
  04b08	e2833e15	 add         r3, r3, #0x15, 28
  04b0c	e5933000	 ldr         r3, [r3]
  04b10	e283304c	 add         r3, r3, #0x4C
  04b14	e5d33000	 ldrb        r3, [r3]
  04b18	e3831002	 orr         r1, r3, #2
  04b1c	e59d3090	 ldr         r3, [sp, #0x90]
  04b20	e2833e15	 add         r3, r3, #0x15, 28
  04b24	e5933000	 ldr         r3, [r3]
  04b28	e283204c	 add         r2, r3, #0x4C
  04b2c	e20130ff	 and         r3, r1, #0xFF
  04b30	e5c23000	 strb        r3, [r2]

; 1606 :             else

  04b34	ea00000d	 b           |$LN13@OTG_Config|
  04b38		 |$LN14@OTG_Config|

; 1607 :                 m_pOTG->connect_status &= ~CONN_CSC;

  04b38	e59d3090	 ldr         r3, [sp, #0x90]
  04b3c	e2833e15	 add         r3, r3, #0x15, 28
  04b40	e5933000	 ldr         r3, [r3]
  04b44	e283304c	 add         r3, r3, #0x4C
  04b48	e5d33000	 ldrb        r3, [r3]
  04b4c	e1a02003	 mov         r2, r3
  04b50	e3e03002	 mvn         r3, #2
  04b54	e0021003	 and         r1, r2, r3
  04b58	e59d3090	 ldr         r3, [sp, #0x90]
  04b5c	e2833e15	 add         r3, r3, #0x15, 28
  04b60	e5933000	 ldr         r3, [r3]
  04b64	e283204c	 add         r2, r3, #0x4C
  04b68	e20130ff	 and         r3, r1, #0xFF
  04b6c	e5c23000	 strb        r3, [r2]
  04b70		 |$LN13@OTG_Config|

; 1608 : 
; 1609 :             if (m_pOTG->pFuncs[DEVICE_MODE-1] != NULL)

  04b70	e59d3090	 ldr         r3, [sp, #0x90]
  04b74	e2833e15	 add         r3, r3, #0x15, 28
  04b78	e5933000	 ldr         r3, [r3]
  04b7c	e2833008	 add         r3, r3, #8
  04b80	e5933000	 ldr         r3, [r3]
  04b84	e3530000	 cmp         r3, #0
  04b88	0a00000b	 beq         |$LN12@OTG_Config|

; 1610 :                 m_pOTG->pFuncs[DEVICE_MODE-1]->Disconnect((void *)m_pOTG);     

  04b8c	e59d3090	 ldr         r3, [sp, #0x90]
  04b90	e2833e15	 add         r3, r3, #0x15, 28
  04b94	e5930000	 ldr         r0, [r3]
  04b98	e59d3090	 ldr         r3, [sp, #0x90]
  04b9c	e2833e15	 add         r3, r3, #0x15, 28
  04ba0	e5933000	 ldr         r3, [r3]
  04ba4	e2833008	 add         r3, r3, #8
  04ba8	e5933000	 ldr         r3, [r3]
  04bac	e2833018	 add         r3, r3, #0x18
  04bb0	e5933000	 ldr         r3, [r3]
  04bb4	e1a0e00f	 mov         lr, pc
  04bb8	e12fff13	 bx          r3
  04bbc		 |$LN12@OTG_Config|

; 1611 :             
; 1612 :             ResetEndPoints();

  04bbc	e59d3090	 ldr         r3, [sp, #0x90]
  04bc0	e5933000	 ldr         r3, [r3]
  04bc4	e28330ec	 add         r3, r3, #0xEC
  04bc8	e59d0090	 ldr         r0, [sp, #0x90]
  04bcc	e5933000	 ldr         r3, [r3]
  04bd0	e1a0e00f	 mov         lr, pc
  04bd4	e12fff13	 bx          r3

; 1613 :             // clear any disconnect interrupt
; 1614 :             m_pOTG->intr_usb &= ~INTRUSB_DISCONN;           

  04bd8	e59d3090	 ldr         r3, [sp, #0x90]
  04bdc	e2833e15	 add         r3, r3, #0x15, 28
  04be0	e5933000	 ldr         r3, [r3]
  04be4	e2833034	 add         r3, r3, #0x34
  04be8	e5d33000	 ldrb        r3, [r3]
  04bec	e1a02003	 mov         r2, r3
  04bf0	e3e03020	 mvn         r3, #0x20
  04bf4	e0021003	 and         r1, r2, r3
  04bf8	e59d3090	 ldr         r3, [sp, #0x90]
  04bfc	e2833e15	 add         r3, r3, #0x15, 28
  04c00	e5933000	 ldr         r3, [r3]
  04c04	e2832034	 add         r2, r3, #0x34
  04c08	e20130ff	 and         r3, r1, #0xFF
  04c0c	e5c23000	 strb        r3, [r2]

; 1615 :             m_dwStatus |= STATUS_SESSION_RESTART | STATUS_SUSPEND;

  04c10	e59d3090	 ldr         r3, [sp, #0x90]
  04c14	e28330f8	 add         r3, r3, #0xF8
  04c18	e5933000	 ldr         r3, [r3]
  04c1c	e3832084	 orr         r2, r3, #0x84
  04c20	e59d3090	 ldr         r3, [sp, #0x90]
  04c24	e28330f8	 add         r3, r3, #0xF8
  04c28	e5832000	 str         r2, [r3]
  04c2c	ea0000e1	 b           |$LN11@OTG_Config|
  04c30		 |$LN15@OTG_Config|

; 1616 :         }
; 1617 :         else if ((m_pOTG->operateMode == DEVICE_MODE) && (m_pOTG->deviceType == B_DEVICE))

  04c30	e59d3090	 ldr         r3, [sp, #0x90]
  04c34	e2833e15	 add         r3, r3, #0x15, 28
  04c38	e5933000	 ldr         r3, [r3]
  04c3c	e2833035	 add         r3, r3, #0x35
  04c40	e5d33000	 ldrb        r3, [r3]
  04c44	e3530001	 cmp         r3, #1
  04c48	1a0000c3	 bne         |$LN10@OTG_Config|
  04c4c	e59d3090	 ldr         r3, [sp, #0x90]
  04c50	e2833e15	 add         r3, r3, #0x15, 28
  04c54	e5933000	 ldr         r3, [r3]
  04c58	e2833036	 add         r3, r3, #0x36
  04c5c	e5d33000	 ldrb        r3, [r3]
  04c60	e3530001	 cmp         r3, #1
  04c64	1a0000bc	 bne         |$LN10@OTG_Config|

; 1618 :         {
; 1619 :             DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("################ DEBUG THIS, IT IS DEVICE MODE using A_DEVICE\r\n")));

  04c68	e59f33f4	 ldr         r3, [pc, #0x3F4]
  04c6c	e5933440	 ldr         r3, [r3, #0x440]
  04c70	e3130a02	 tst         r3, #2, 20
  04c74	0a000004	 beq         |$LN62@OTG_Config|
  04c78	e59f03e0	 ldr         r0, [pc, #0x3E0]
  04c7c	eb000000	 bl          NKDbgPrintfW
  04c80	e3a03001	 mov         r3, #1
  04c84	e58d307c	 str         r3, [sp, #0x7C]
  04c88	ea000001	 b           |$LN63@OTG_Config|
  04c8c		 |$LN62@OTG_Config|
  04c8c	e3a03000	 mov         r3, #0
  04c90	e58d307c	 str         r3, [sp, #0x7C]
  04c94		 |$LN63@OTG_Config|

; 1620 :          
; 1621 :             BYTE devctl = 0, vbuslevel;

  04c94	e3a03000	 mov         r3, #0
  04c98	e5cd3024	 strb        r3, [sp, #0x24]

; 1622 : 
; 1623 :             devctl = INREG8(&m_pOTG->pUsbGenRegs->DevCtl);

  04c9c	e59d3090	 ldr         r3, [sp, #0x90]
  04ca0	e2833e15	 add         r3, r3, #0x15, 28
  04ca4	e5933000	 ldr         r3, [r3]
  04ca8	e2833020	 add         r3, r3, #0x20
  04cac	e5933000	 ldr         r3, [r3]
  04cb0	e2833060	 add         r3, r3, #0x60
  04cb4	e5d33000	 ldrb        r3, [r3]
  04cb8	e5cd3024	 strb        r3, [sp, #0x24]

; 1624 :             vbuslevel = devctl & DEVCTL_VBUS;

  04cbc	e5dd3024	 ldrb        r3, [sp, #0x24]
  04cc0	e2033018	 and         r3, r3, #0x18
  04cc4	e20330ff	 and         r3, r3, #0xFF
  04cc8	e5cd3025	 strb        r3, [sp, #0x25]

; 1625 :             if(vbuslevel != DEVCTL_VBUSVALID)

  04ccc	e5dd3025	 ldrb        r3, [sp, #0x25]
  04cd0	e3530018	 cmp         r3, #0x18
  04cd4	0a000009	 beq         |$LN9@OTG_Config|

; 1626 :             {
; 1627 :                m_dwStatus |= STATUS_SUSPEND;

  04cd8	e59d3090	 ldr         r3, [sp, #0x90]
  04cdc	e28330f8	 add         r3, r3, #0xF8
  04ce0	e5933000	 ldr         r3, [r3]
  04ce4	e3832004	 orr         r2, r3, #4
  04ce8	e59d3090	 ldr         r3, [sp, #0x90]
  04cec	e28330f8	 add         r3, r3, #0xF8
  04cf0	e5832000	 str         r2, [r3]

; 1628 :                return STATUS_SUSPEND;

  04cf4	e3a03004	 mov         r3, #4
  04cf8	e58d3038	 str         r3, [sp, #0x38]
  04cfc	ea0000d2	 b           |$LN36@OTG_Config|
  04d00		 |$LN9@OTG_Config|

; 1629 :             }
; 1630 : 
; 1631 :             if(m_bHNPEnable)

  04d00	e59d3090	 ldr         r3, [sp, #0x90]
  04d04	e2833f5b	 add         r3, r3, #0x5B, 30
  04d08	e5933000	 ldr         r3, [r3]
  04d0c	e3530000	 cmp         r3, #0
  04d10	0a000090	 beq         |$LN8@OTG_Config|

; 1632 :             {
; 1633 :                 DWORD dwPrevState;
; 1634 :                 RETAILMSG(1, (TEXT("B_DEVICE:HNP switching and need to disconnect device mode DevCtl:%x\r\n"),INREG8(&m_pOTG->pUsbGenRegs->DevCtl)));

  04d14	e59d3090	 ldr         r3, [sp, #0x90]
  04d18	e2833e15	 add         r3, r3, #0x15, 28
  04d1c	e5933000	 ldr         r3, [r3]
  04d20	e2833020	 add         r3, r3, #0x20
  04d24	e5933000	 ldr         r3, [r3]
  04d28	e2833060	 add         r3, r3, #0x60
  04d2c	e5d33000	 ldrb        r3, [r3]
  04d30	e1a01003	 mov         r1, r3
  04d34	e59f0320	 ldr         r0, [pc, #0x320]
  04d38	eb000000	 bl          NKDbgPrintfW
  04d3c	e3a03001	 mov         r3, #1
  04d40	e58d3080	 str         r3, [sp, #0x80]
  04d44	ea000001	 b           |$LN65@OTG_Config|
  04d48	e3a03000	 mov         r3, #0
  04d4c	e58d3080	 str         r3, [sp, #0x80]
  04d50		 |$LN65@OTG_Config|

; 1635 : 
; 1636 :                 m_dwStatus |= STATUS_DISCONN_COMPLETE;

  04d50	e59d3090	 ldr         r3, [sp, #0x90]
  04d54	e28330f8	 add         r3, r3, #0xF8
  04d58	e5933000	 ldr         r3, [r3]
  04d5c	e3832008	 orr         r2, r3, #8
  04d60	e59d3090	 ldr         r3, [sp, #0x90]
  04d64	e28330f8	 add         r3, r3, #0xF8
  04d68	e5832000	 str         r2, [r3]

; 1637 :                 m_dwStatus &= ~STATUS_WAIT_HOST_DISCONN_COMPLETE;

  04d6c	e59d3090	 ldr         r3, [sp, #0x90]
  04d70	e28330f8	 add         r3, r3, #0xF8
  04d74	e5932000	 ldr         r2, [r3]
  04d78	e3e03040	 mvn         r3, #0x40
  04d7c	e0022003	 and         r2, r2, r3
  04d80	e59d3090	 ldr         r3, [sp, #0x90]
  04d84	e28330f8	 add         r3, r3, #0xF8
  04d88	e5832000	 str         r2, [r3]

; 1638 :                 m_pOTG->operateMode = IDLE_MODE;

  04d8c	e59d3090	 ldr         r3, [sp, #0x90]
  04d90	e2833e15	 add         r3, r3, #0x15, 28
  04d94	e5933000	 ldr         r3, [r3]
  04d98	e2832035	 add         r2, r3, #0x35
  04d9c	e3a03000	 mov         r3, #0
  04da0	e5c23000	 strb        r3, [r2]

; 1639 :                 m_pOTG->connect_status |= CONN_DC;

  04da4	e59d3090	 ldr         r3, [sp, #0x90]
  04da8	e2833e15	 add         r3, r3, #0x15, 28
  04dac	e5933000	 ldr         r3, [r3]
  04db0	e283304c	 add         r3, r3, #0x4C
  04db4	e5d33000	 ldrb        r3, [r3]
  04db8	e3831004	 orr         r1, r3, #4
  04dbc	e59d3090	 ldr         r3, [sp, #0x90]
  04dc0	e2833e15	 add         r3, r3, #0x15, 28
  04dc4	e5933000	 ldr         r3, [r3]
  04dc8	e283204c	 add         r2, r3, #0x4C
  04dcc	e20130ff	 and         r3, r1, #0xFF
  04dd0	e5c23000	 strb        r3, [r2]

; 1640 :                 dwPrevState = m_pOTG->connect_status;

  04dd4	e59d3090	 ldr         r3, [sp, #0x90]
  04dd8	e2833e15	 add         r3, r3, #0x15, 28
  04ddc	e5933000	 ldr         r3, [r3]
  04de0	e283304c	 add         r3, r3, #0x4C
  04de4	e5d33000	 ldrb        r3, [r3]
  04de8	e58d3028	 str         r3, [sp, #0x28]

; 1641 :                 m_pOTG->connect_status &= ~CONN_CCS;

  04dec	e59d3090	 ldr         r3, [sp, #0x90]
  04df0	e2833e15	 add         r3, r3, #0x15, 28
  04df4	e5933000	 ldr         r3, [r3]
  04df8	e283304c	 add         r3, r3, #0x4C
  04dfc	e5d33000	 ldrb        r3, [r3]
  04e00	e1a02003	 mov         r2, r3
  04e04	e3e03001	 mvn         r3, #1
  04e08	e0021003	 and         r1, r2, r3
  04e0c	e59d3090	 ldr         r3, [sp, #0x90]
  04e10	e2833e15	 add         r3, r3, #0x15, 28
  04e14	e5933000	 ldr         r3, [r3]
  04e18	e283204c	 add         r2, r3, #0x4C
  04e1c	e20130ff	 and         r3, r1, #0xFF
  04e20	e5c23000	 strb        r3, [r2]

; 1642 :                 if (dwPrevState & CONN_CCS)

  04e24	e59d3028	 ldr         r3, [sp, #0x28]
  04e28	e3130001	 tst         r3, #1
  04e2c	0a00000c	 beq         |$LN7@OTG_Config|

; 1643 :                     m_pOTG->connect_status |= CONN_CSC;

  04e30	e59d3090	 ldr         r3, [sp, #0x90]
  04e34	e2833e15	 add         r3, r3, #0x15, 28
  04e38	e5933000	 ldr         r3, [r3]
  04e3c	e283304c	 add         r3, r3, #0x4C
  04e40	e5d33000	 ldrb        r3, [r3]
  04e44	e3831002	 orr         r1, r3, #2
  04e48	e59d3090	 ldr         r3, [sp, #0x90]
  04e4c	e2833e15	 add         r3, r3, #0x15, 28
  04e50	e5933000	 ldr         r3, [r3]
  04e54	e283204c	 add         r2, r3, #0x4C
  04e58	e20130ff	 and         r3, r1, #0xFF
  04e5c	e5c23000	 strb        r3, [r2]

; 1644 :                 else

  04e60	ea00000d	 b           |$LN6@OTG_Config|
  04e64		 |$LN7@OTG_Config|

; 1645 :                     m_pOTG->connect_status &= ~CONN_CSC;

  04e64	e59d3090	 ldr         r3, [sp, #0x90]
  04e68	e2833e15	 add         r3, r3, #0x15, 28
  04e6c	e5933000	 ldr         r3, [r3]
  04e70	e283304c	 add         r3, r3, #0x4C
  04e74	e5d33000	 ldrb        r3, [r3]
  04e78	e1a02003	 mov         r2, r3
  04e7c	e3e03002	 mvn         r3, #2
  04e80	e0021003	 and         r1, r2, r3
  04e84	e59d3090	 ldr         r3, [sp, #0x90]
  04e88	e2833e15	 add         r3, r3, #0x15, 28
  04e8c	e5933000	 ldr         r3, [r3]
  04e90	e283204c	 add         r2, r3, #0x4C
  04e94	e20130ff	 and         r3, r1, #0xFF
  04e98	e5c23000	 strb        r3, [r2]
  04e9c		 |$LN6@OTG_Config|

; 1646 : 
; 1647 :                 if (m_pOTG->pFuncs[DEVICE_MODE-1] != NULL)

  04e9c	e59d3090	 ldr         r3, [sp, #0x90]
  04ea0	e2833e15	 add         r3, r3, #0x15, 28
  04ea4	e5933000	 ldr         r3, [r3]
  04ea8	e2833008	 add         r3, r3, #8
  04eac	e5933000	 ldr         r3, [r3]
  04eb0	e3530000	 cmp         r3, #0
  04eb4	0a00000b	 beq         |$LN5@OTG_Config|

; 1648 :                     m_pOTG->pFuncs[DEVICE_MODE-1]->Disconnect((void *)m_pOTG);

  04eb8	e59d3090	 ldr         r3, [sp, #0x90]
  04ebc	e2833e15	 add         r3, r3, #0x15, 28
  04ec0	e5930000	 ldr         r0, [r3]
  04ec4	e59d3090	 ldr         r3, [sp, #0x90]
  04ec8	e2833e15	 add         r3, r3, #0x15, 28
  04ecc	e5933000	 ldr         r3, [r3]
  04ed0	e2833008	 add         r3, r3, #8
  04ed4	e5933000	 ldr         r3, [r3]
  04ed8	e2833018	 add         r3, r3, #0x18
  04edc	e5933000	 ldr         r3, [r3]
  04ee0	e1a0e00f	 mov         lr, pc
  04ee4	e12fff13	 bx          r3
  04ee8		 |$LN5@OTG_Config|

; 1649 : 
; 1650 :                 ResetEndPoints();

  04ee8	e59d3090	 ldr         r3, [sp, #0x90]
  04eec	e5933000	 ldr         r3, [r3]
  04ef0	e28330ec	 add         r3, r3, #0xEC
  04ef4	e59d0090	 ldr         r0, [sp, #0x90]
  04ef8	e5933000	 ldr         r3, [r3]
  04efc	e1a0e00f	 mov         lr, pc
  04f00	e12fff13	 bx          r3

; 1651 : 
; 1652 :                 // clear any disconnect interrupt
; 1653 :                 m_pOTG->intr_usb &= ~INTRUSB_DISCONN;

  04f04	e59d3090	 ldr         r3, [sp, #0x90]
  04f08	e2833e15	 add         r3, r3, #0x15, 28
  04f0c	e5933000	 ldr         r3, [r3]
  04f10	e2833034	 add         r3, r3, #0x34
  04f14	e5d33000	 ldrb        r3, [r3]
  04f18	e1a02003	 mov         r2, r3
  04f1c	e3e03020	 mvn         r3, #0x20
  04f20	e0021003	 and         r1, r2, r3
  04f24	e59d3090	 ldr         r3, [sp, #0x90]
  04f28	e2833e15	 add         r3, r3, #0x15, 28
  04f2c	e5933000	 ldr         r3, [r3]
  04f30	e2832034	 add         r2, r3, #0x34
  04f34	e20130ff	 and         r3, r1, #0xFF
  04f38	e5c23000	 strb        r3, [r2]

; 1654 :                 m_dwStatus |= STATUS_SESSION_RESTART | STATUS_SUSPEND;

  04f3c	e59d3090	 ldr         r3, [sp, #0x90]
  04f40	e28330f8	 add         r3, r3, #0xF8
  04f44	e5933000	 ldr         r3, [r3]
  04f48	e3832084	 orr         r2, r3, #0x84
  04f4c	e59d3090	 ldr         r3, [sp, #0x90]
  04f50	e28330f8	 add         r3, r3, #0xF8
  04f54	e5832000	 str         r2, [r3]
  04f58		 |$LN8@OTG_Config|

; 1655 : 
; 1656 :             }
; 1657 :             else
; 1658 :             {
; 1659 :                 // To Do...
; 1660 :                 // Stop the USB clocks and trigger on a USB wakeup interrupt.
; 1661 :                 // ensure we are not charging the battery via the USB port
; 1662 : 
; 1663 :                 // for now... do not set STATUS_SUSPEND, because this will force a reset
; 1664 :             }

  04f58	ea000016	 b           |$LN3@OTG_Config|
  04f5c		 |$LN10@OTG_Config|

; 1665 :         }
; 1666 :         else if(m_pOTG->operateMode == DEVICE_MODE)

  04f5c	e59d3090	 ldr         r3, [sp, #0x90]
  04f60	e2833e15	 add         r3, r3, #0x15, 28
  04f64	e5933000	 ldr         r3, [r3]
  04f68	e2833035	 add         r3, r3, #0x35
  04f6c	e5d33000	 ldrb        r3, [r3]
  04f70	e3530001	 cmp         r3, #1
  04f74	1a00000f	 bne         |$LN2@OTG_Config|

; 1667 :         {
; 1668 :              // ??? unreachable code, what was intended?
; 1669 :              SessionRequest(FALSE, FALSE);

  04f78	e3a02000	 mov         r2, #0
  04f7c	e3a01000	 mov         r1, #0
  04f80	e59d3090	 ldr         r3, [sp, #0x90]
  04f84	e5933000	 ldr         r3, [r3]
  04f88	e2833084	 add         r3, r3, #0x84
  04f8c	e59d0090	 ldr         r0, [sp, #0x90]
  04f90	e5933000	 ldr         r3, [r3]
  04f94	e1a0e00f	 mov         lr, pc
  04f98	e12fff13	 bx          r3

; 1670 :              //m_disconnected = FALSE;
; 1671 :             m_dwStatus |= STATUS_SUSPEND;

  04f9c	e59d3090	 ldr         r3, [sp, #0x90]
  04fa0	e28330f8	 add         r3, r3, #0xF8
  04fa4	e5933000	 ldr         r3, [r3]
  04fa8	e3832004	 orr         r2, r3, #4
  04fac	e59d3090	 ldr         r3, [sp, #0x90]
  04fb0	e28330f8	 add         r3, r3, #0xF8
  04fb4	e5832000	 str         r2, [r3]
  04fb8		 |$LN2@OTG_Config|
  04fb8		 |$LN3@OTG_Config|
  04fb8		 |$LN11@OTG_Config|

; 1672 :         }
; 1673 : 
; 1674 :         // disable suspend interrupt as needed
; 1675 :         if (!m_pTransceiver->SupportsTransceiverWakeWithoutClock())

  04fb8	e59d3090	 ldr         r3, [sp, #0x90]
  04fbc	e28330fc	 add         r3, r3, #0xFC
  04fc0	e5932000	 ldr         r2, [r3]
  04fc4	e59d3090	 ldr         r3, [sp, #0x90]
  04fc8	e28330fc	 add         r3, r3, #0xFC
  04fcc	e5930000	 ldr         r0, [r3]
  04fd0	e5923000	 ldr         r3, [r2]
  04fd4	e2833014	 add         r3, r3, #0x14
  04fd8	e5933000	 ldr         r3, [r3]
  04fdc	e1a0e00f	 mov         lr, pc
  04fe0	e12fff13	 bx          r3
  04fe4	e58d0084	 str         r0, [sp, #0x84]
  04fe8	e59d3084	 ldr         r3, [sp, #0x84]
  04fec	e3530000	 cmp         r3, #0
  04ff0	1a000011	 bne         |$LN1@OTG_Config|

; 1676 :             CLRREG8(&m_pOTG->pUsbGenRegs->IntrUSBE, INTRUSB_SUSPEND);  

  04ff4	e59d3090	 ldr         r3, [sp, #0x90]
  04ff8	e2833e15	 add         r3, r3, #0x15, 28
  04ffc	e5933000	 ldr         r3, [r3]
  05000	e2833020	 add         r3, r3, #0x20
  05004	e5933000	 ldr         r3, [r3]
  05008	e283300b	 add         r3, r3, #0xB
  0500c	e5d33000	 ldrb        r3, [r3]
  05010	e1a02003	 mov         r2, r3
  05014	e3e03001	 mvn         r3, #1
  05018	e0023003	 and         r3, r2, r3
  0501c	e20320ff	 and         r2, r3, #0xFF
  05020	e59d3090	 ldr         r3, [sp, #0x90]
  05024	e2833e15	 add         r3, r3, #0x15, 28
  05028	e5933000	 ldr         r3, [r3]
  0502c	e2833020	 add         r3, r3, #0x20
  05030	e5933000	 ldr         r3, [r3]
  05034	e283300b	 add         r3, r3, #0xB
  05038	e5c32000	 strb        r2, [r3]
  0503c		 |$LN1@OTG_Config|
  0503c		 |$LN16@OTG_Config|
  0503c		 |$LN22@OTG_Config|
  0503c		 |$LN25@OTG_Config|
  0503c		 |$cleanUp$41258|

; 1677 : 
; 1678 :     }
; 1679 : cleanUp:
; 1680 :     return m_dwStatus;

  0503c	e59d3090	 ldr         r3, [sp, #0x90]
  05040	e28330f8	 add         r3, r3, #0xF8
  05044	e5933000	 ldr         r3, [r3]
  05048	e58d3038	 str         r3, [sp, #0x38]
  0504c		 |$LN36@OTG_Config|

; 1681 : }

  0504c	e59d0038	 ldr         r0, [sp, #0x38]
  05050	e28dd088	 add         sp, sp, #0x88
  05054	e89d6000	 ldmia       sp, {sp, lr}
  05058	e12fff1e	 bx          lr
  0505c		 |$LN69@OTG_Config|
  0505c		 |$LN70@OTG_Config|
  0505c	00000000	 DCD         |??_C@_1IM@GEPODNBC@?$AAB?$AA_?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA?3?$AAH?$AAN?$AAP?$AA?5?$AAs?$AAw?$AAi?$AAt?$AAc?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAn?$AAe?$AAe?$AAd?$AA?5@|
  05060		 |$LN71@OTG_Config|
  05060	00000000	 DCD         |??_C@_1IA@MLDLJNIO@?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AA?5?$AAT?$AAH?$AAI?$AAS?$AA?0?$AA?5?$AAI?$AAT?$AA?5@|
  05064		 |$LN72@OTG_Config|
  05064	00000000	 DCD         |dpCurSettings|
  05068		 |$LN73@OTG_Config|
  05068	00000000	 DCD         |??_C@_1HI@JBKOMFKI@?$AAA?$AA_?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA?3?$AAH?$AAN?$AAP?$AA?5?$AAs?$AAw?$AAi?$AAt?$AAc?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAn?$AAe?$AAe?$AAd?$AA?5@|
  0506c		 |$LN74@OTG_Config|
  0506c	00000000	 DCD         |??_C@_1FA@IALLDFA@?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAI?$AAn?$AAt?$AAr?$AA_?$AAU?$AAS?$AAB?$AA?5?$AA?$DN@|
  05070		 |$LN75@OTG_Config|
  05070	00000000	 DCD         |??_C@_1EK@FBPMAKFH@?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx@|
  05074		 |$LN76@OTG_Config|
  05074	00000000	 DCD         |??_C@_1EM@HAAKHLDJ@?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAD?$AAe?$AAv?$AAC?$AAt?$AAl?$AA?5?$AA?$DN?$AA?5?$AA0@|
  05078		 |$LN77@OTG_Config|
  05078	00000000	 DCD         |??_C@_1EM@KNLJNKPA@?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA_?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$DN?$AA0@|
  0507c		 |$LN78@OTG_Config|
  0507c	00000000	 DCD         |??_C@_1DK@OPLGEMGP@?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAP?$AAw?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  05080		 |$LN79@OTG_Config|
  05080	00000000	 DCD         |??_C@_1DM@JMEDNDKE@?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAS?$AAe?$AAs?$AAs?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  05084		 |$LN80@OTG_Config|
  05084	00000000	 DCD         |??_C@_1GK@EDHBDMMN@?$AAU?$AAF?$AAN?$AAP?$AAD?$AAD?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAa?$AAl?$AAu?$AAe?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs@|
  05088		 |$LN81@OTG_Config|
  05088	00000000	 DCD         |??_C@_1DM@GBENJPGN@?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?2?$AAB?$AAu?$AAi?$AAl?$AAt?$AAI?$AAn?$AA?2?$AAM?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?2?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?$AA@|
  0508c		 |$LN82@OTG_Config|
  0508c	00000000	 DCD         |??_C@_1M@CKAHONI@?$AAB?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  05090		 |$LN83@OTG_Config|
  05090	00000000	 DCD         |??_C@_1FK@DCFOIEJO@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAO?$AAp?$AAe?$AAn?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAK?$AAe?$AAy?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ@|
  05094		 |$LN84@OTG_Config|
  05094	00000000	 DCD         |??_C@_1CM@ONMBMPDP@?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  05098		 |$LN85@OTG_Config|
  05098	00000000	 DCD         |??_C@_1DG@PBLCKCII@?$AAH?$AAo?$AAs?$AAt?$AA?5?$AAd?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0509c		 |$M43728|

			 ENDP  ; |?OTG_ConfigISR_stage2@OMAPMHSUSBOTG@@UAAKXZ|, OMAPMHSUSBOTG::OTG_ConfigISR_stage2

	EXPORT	|??_C@_1DM@EBDEEFBM@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@LNCEEOHO@?$AAm?$AA_?$AAp?$AAO?$AAT?$AAG?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@NJEEKKOE@?$AAO?$AAT?$AAG?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAe?$AAp?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAi?$AAs?$AAR?$AAx?$AA?5?$AA?$CF@| [ DATA ] ; `string'

  00110			 AREA	 |.pdata|, PDATA
|$T43761| DCD	|$LN20@OTG_Proces|
	DCD	0x40009f04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@EBDEEFBM@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "g", 0x0, "n", 0x0, "o", 0x0, "r", 0x0, "e", 0x0, " "
	DCB	0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " "
	DCB	0x0, "(", 0x0, "%", 0x0, "s", 0x0, ")", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u"
	DCB	0x0, "p", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@| DCB "O", 0x0, "U", 0x0, "T", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@| DCB "I", 0x0, "N", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@LNCEEOHO@?$AAm?$AA_?$AAp?$AAO?$AAT?$AAG?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "m"
	DCB	0x0, "_", 0x0, "p", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, " "
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, " ", 0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@NJEEKKOE@?$AAO?$AAT?$AAG?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAe?$AAp?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAi?$AAs?$AAR?$AAx?$AA?5?$AA?$CF@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, "_", 0x0, "P", 0x0, "r", 0x0, "o"
	DCB	0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, "E", 0x0, "P"
	DCB	0x0, "x", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "e", 0x0, "p", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "i", 0x0, "s", 0x0, "R", 0x0, "x", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  0509c			 AREA	 |.text|, CODE, ARM

  0509c		 |?OTG_ProcessEPx@OMAPMHSUSBOTG@@UAAKEH@Z| PROC ; OMAPMHSUSBOTG::OTG_ProcessEPx

; 1702 : {    

  0509c		 |$LN20@OTG_Proces|
  0509c	e1a0c00d	 mov         r12, sp
  050a0	e92d0007	 stmdb       sp!, {r0 - r2}
  050a4	e92d5000	 stmdb       sp!, {r12, lr}
  050a8	e24dd02c	 sub         sp, sp, #0x2C
  050ac		 |$M43758|

; 1703 :     DWORD dwStatus = 0;

  050ac	e3a03000	 mov         r3, #0
  050b0	e58d3004	 str         r3, [sp, #4]

; 1704 :     DWORD mode;
; 1705 : 
; 1706 :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("OTG_ProcessEPx for ep %d, isRx %d\r\n"), endpoint, isRx));

  050b4	e59f3250	 ldr         r3, [pc, #0x250]
  050b8	e5933440	 ldr         r3, [r3, #0x440]
  050bc	e3130a02	 tst         r3, #2, 20
  050c0	0a000007	 beq         |$LN10@OTG_Proces|
  050c4	e59d203c	 ldr         r2, [sp, #0x3C]
  050c8	e5dd3038	 ldrb        r3, [sp, #0x38]
  050cc	e1a01003	 mov         r1, r3
  050d0	e59f023c	 ldr         r0, [pc, #0x23C]
  050d4	eb000000	 bl          NKDbgPrintfW
  050d8	e3a03001	 mov         r3, #1
  050dc	e58d300c	 str         r3, [sp, #0xC]
  050e0	ea000001	 b           |$LN11@OTG_Proces|
  050e4		 |$LN10@OTG_Proces|
  050e4	e3a03000	 mov         r3, #0
  050e8	e58d300c	 str         r3, [sp, #0xC]
  050ec		 |$LN11@OTG_Proces|

; 1707 :     // For testing purpose, just dump the value from FIFO
; 1708 :     if (GetMode() == DEVICE_MODE)

  050ec	e59d3034	 ldr         r3, [sp, #0x34]
  050f0	e5933000	 ldr         r3, [r3]
  050f4	e28330e0	 add         r3, r3, #0xE0
  050f8	e59d0034	 ldr         r0, [sp, #0x34]
  050fc	e5933000	 ldr         r3, [r3]
  05100	e1a0e00f	 mov         lr, pc
  05104	e12fff13	 bx          r3
  05108	e58d0010	 str         r0, [sp, #0x10]
  0510c	e59d3010	 ldr         r3, [sp, #0x10]
  05110	e3530001	 cmp         r3, #1
  05114	1a000012	 bne         |$LN7@OTG_Proces|

; 1709 :     {
; 1710 :         DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("m_pOTG Device Mode = 0x%x\r\n"), m_pOTG->pFuncs[DEVICE_MODE-1]));

  05118	e59f31ec	 ldr         r3, [pc, #0x1EC]
  0511c	e5933440	 ldr         r3, [r3, #0x440]
  05120	e3130a02	 tst         r3, #2, 20
  05124	0a000009	 beq         |$LN12@OTG_Proces|
  05128	e59d3034	 ldr         r3, [sp, #0x34]
  0512c	e2833e15	 add         r3, r3, #0x15, 28
  05130	e5933000	 ldr         r3, [r3]
  05134	e2833008	 add         r3, r3, #8
  05138	e5931000	 ldr         r1, [r3]
  0513c	e59f01cc	 ldr         r0, [pc, #0x1CC]
  05140	eb000000	 bl          NKDbgPrintfW
  05144	e3a03001	 mov         r3, #1
  05148	e58d3014	 str         r3, [sp, #0x14]
  0514c	ea000001	 b           |$LN13@OTG_Proces|
  05150		 |$LN12@OTG_Proces|
  05150	e3a03000	 mov         r3, #0
  05154	e58d3014	 str         r3, [sp, #0x14]
  05158		 |$LN13@OTG_Proces|

; 1711 :         mode = DEVICE_MODE;

  05158	e3a03001	 mov         r3, #1
  0515c	e58d3000	 str         r3, [sp]
  05160	ea000026	 b           |$LN6@OTG_Proces|
  05164		 |$LN7@OTG_Proces|

; 1712 :     }
; 1713 :     else if (GetMode() == HOST_MODE)

  05164	e59d3034	 ldr         r3, [sp, #0x34]
  05168	e5933000	 ldr         r3, [r3]
  0516c	e28330e0	 add         r3, r3, #0xE0
  05170	e59d0034	 ldr         r0, [sp, #0x34]
  05174	e5933000	 ldr         r3, [r3]
  05178	e1a0e00f	 mov         lr, pc
  0517c	e12fff13	 bx          r3
  05180	e58d0018	 str         r0, [sp, #0x18]
  05184	e59d3018	 ldr         r3, [sp, #0x18]
  05188	e3530002	 cmp         r3, #2
  0518c	1a000002	 bne         |$LN5@OTG_Proces|

; 1714 :     {        
; 1715 :         mode = HOST_MODE;

  05190	e3a03002	 mov         r3, #2
  05194	e58d3000	 str         r3, [sp]

; 1716 :     }
; 1717 :     else

  05198	ea000018	 b           |$LN4@OTG_Proces|
  0519c		 |$LN5@OTG_Proces|

; 1718 :     {
; 1719 :         DEBUGMSG(ZONE_OTG_INFO, (TEXT("Ignore EP %d (%s) interrupt\r\n"), endpoint, isRx?(TEXT("IN")):(TEXT("OUT"))));

  0519c	e59f3168	 ldr         r3, [pc, #0x168]
  051a0	e5933440	 ldr         r3, [r3, #0x440]
  051a4	e3130a01	 tst         r3, #1, 20
  051a8	0a00000f	 beq         |$LN16@OTG_Proces|
  051ac	e59d303c	 ldr         r3, [sp, #0x3C]
  051b0	e3530000	 cmp         r3, #0
  051b4	0a000002	 beq         |$LN14@OTG_Proces|
  051b8	e59f3148	 ldr         r3, [pc, #0x148]
  051bc	e58d301c	 str         r3, [sp, #0x1C]
  051c0	ea000001	 b           |$LN15@OTG_Proces|
  051c4		 |$LN14@OTG_Proces|
  051c4	e59f3138	 ldr         r3, [pc, #0x138]
  051c8	e58d301c	 str         r3, [sp, #0x1C]
  051cc		 |$LN15@OTG_Proces|
  051cc	e59d201c	 ldr         r2, [sp, #0x1C]
  051d0	e5dd3038	 ldrb        r3, [sp, #0x38]
  051d4	e1a01003	 mov         r1, r3
  051d8	e59f0120	 ldr         r0, [pc, #0x120]
  051dc	eb000000	 bl          NKDbgPrintfW
  051e0	e3a03001	 mov         r3, #1
  051e4	e58d3020	 str         r3, [sp, #0x20]
  051e8	ea000001	 b           |$LN17@OTG_Proces|
  051ec		 |$LN16@OTG_Proces|
  051ec	e3a03000	 mov         r3, #0
  051f0	e58d3020	 str         r3, [sp, #0x20]
  051f4		 |$LN17@OTG_Proces|

; 1720 :         return 0;

  051f4	e3a03000	 mov         r3, #0
  051f8	e58d3008	 str         r3, [sp, #8]
  051fc	ea00003b	 b           |$LN8@OTG_Proces|
  05200		 |$LN4@OTG_Proces|
  05200		 |$LN6@OTG_Proces|

; 1721 :     }
; 1722 : 
; 1723 :     if (m_pOTG->pFuncs[mode-1] != NULL)

  05200	e59d3034	 ldr         r3, [sp, #0x34]
  05204	e2833e15	 add         r3, r3, #0x15, 28
  05208	e5933000	 ldr         r3, [r3]
  0520c	e2831008	 add         r1, r3, #8
  05210	e59d3000	 ldr         r3, [sp]
  05214	e2432001	 sub         r2, r3, #1
  05218	e3a03004	 mov         r3, #4
  0521c	e0030392	 mul         r3, r2, r3
  05220	e0813003	 add         r3, r1, r3
  05224	e5933000	 ldr         r3, [r3]
  05228	e3530000	 cmp         r3, #0
  0522c	0a00002d	 beq         |$LN3@OTG_Proces|

; 1724 :     {   
; 1725 :         if (isRx)

  05230	e59d303c	 ldr         r3, [sp, #0x3C]
  05234	e3530000	 cmp         r3, #0
  05238	0a000015	 beq         |$LN2@OTG_Proces|

; 1726 :             dwStatus = m_pOTG->pFuncs[mode-1]->ProcessEPx_RX((void *)m_pOTG, endpoint);

  0523c	e5dd1038	 ldrb        r1, [sp, #0x38]
  05240	e59d3034	 ldr         r3, [sp, #0x34]
  05244	e2833e15	 add         r3, r3, #0x15, 28
  05248	e5930000	 ldr         r0, [r3]
  0524c	e59d3034	 ldr         r3, [sp, #0x34]
  05250	e2833e15	 add         r3, r3, #0x15, 28
  05254	e5933000	 ldr         r3, [r3]
  05258	e283e008	 add         lr, r3, #8
  0525c	e59d3000	 ldr         r3, [sp]
  05260	e2432001	 sub         r2, r3, #1
  05264	e3a03004	 mov         r3, #4
  05268	e0030392	 mul         r3, r2, r3
  0526c	e08e3003	 add         r3, lr, r3
  05270	e5933000	 ldr         r3, [r3]
  05274	e283300c	 add         r3, r3, #0xC
  05278	e5933000	 ldr         r3, [r3]
  0527c	e1a0e00f	 mov         lr, pc
  05280	e12fff13	 bx          r3
  05284	e58d0024	 str         r0, [sp, #0x24]
  05288	e59d3024	 ldr         r3, [sp, #0x24]
  0528c	e58d3004	 str         r3, [sp, #4]

; 1727 :         else

  05290	ea000014	 b           |$LN1@OTG_Proces|
  05294		 |$LN2@OTG_Proces|

; 1728 :             dwStatus = m_pOTG->pFuncs[mode-1]->ProcessEPx_TX((void *)m_pOTG, endpoint);

  05294	e5dd1038	 ldrb        r1, [sp, #0x38]
  05298	e59d3034	 ldr         r3, [sp, #0x34]
  0529c	e2833e15	 add         r3, r3, #0x15, 28
  052a0	e5930000	 ldr         r0, [r3]
  052a4	e59d3034	 ldr         r3, [sp, #0x34]
  052a8	e2833e15	 add         r3, r3, #0x15, 28
  052ac	e5933000	 ldr         r3, [r3]
  052b0	e283e008	 add         lr, r3, #8
  052b4	e59d3000	 ldr         r3, [sp]
  052b8	e2432001	 sub         r2, r3, #1
  052bc	e3a03004	 mov         r3, #4
  052c0	e0030392	 mul         r3, r2, r3
  052c4	e08e3003	 add         r3, lr, r3
  052c8	e5933000	 ldr         r3, [r3]
  052cc	e2833010	 add         r3, r3, #0x10
  052d0	e5933000	 ldr         r3, [r3]
  052d4	e1a0e00f	 mov         lr, pc
  052d8	e12fff13	 bx          r3
  052dc	e58d0028	 str         r0, [sp, #0x28]
  052e0	e59d3028	 ldr         r3, [sp, #0x28]
  052e4	e58d3004	 str         r3, [sp, #4]
  052e8		 |$LN1@OTG_Proces|
  052e8		 |$LN3@OTG_Proces|

; 1729 :     }
; 1730 :     return dwStatus;

  052e8	e59d3004	 ldr         r3, [sp, #4]
  052ec	e58d3008	 str         r3, [sp, #8]
  052f0		 |$LN8@OTG_Proces|

; 1731 : }

  052f0	e59d0008	 ldr         r0, [sp, #8]
  052f4	e28dd02c	 add         sp, sp, #0x2C
  052f8	e89d6000	 ldmia       sp, {sp, lr}
  052fc	e12fff1e	 bx          lr
  05300		 |$LN21@OTG_Proces|
  05300		 |$LN22@OTG_Proces|
  05300	00000000	 DCD         |??_C@_1DM@EBDEEFBM@?$AAI?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AA?$CF?$AAs?$AA?$CJ?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  05304		 |$LN23@OTG_Proces|
  05304	00000000	 DCD         |??_C@_17HCEMPBGG@?$AAO?$AAU?$AAT?$AA?$AA@|
  05308		 |$LN24@OTG_Proces|
  05308	00000000	 DCD         |??_C@_15BNKBCKPG@?$AAI?$AAN?$AA?$AA@|
  0530c		 |$LN25@OTG_Proces|
  0530c	00000000	 DCD         |dpCurSettings|
  05310		 |$LN26@OTG_Proces|
  05310	00000000	 DCD         |??_C@_1DI@LNCEEOHO@?$AAm?$AA_?$AAp?$AAO?$AAT?$AAG?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  05314		 |$LN27@OTG_Proces|
  05314	00000000	 DCD         |??_C@_1EI@NJEEKKOE@?$AAO?$AAT?$AAG?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAe?$AAp?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAi?$AAs?$AAR?$AAx?$AA?5?$AA?$CF@|
  05318		 |$M43759|

			 ENDP  ; |?OTG_ProcessEPx@OMAPMHSUSBOTG@@UAAKEH@Z|, OMAPMHSUSBOTG::OTG_ProcessEPx

	EXPORT	|??_C@_1FK@FFONKCDK@?$AAE?$AAP?$AA0?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAi?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAd?$AAu?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAc?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@ILAFJIAA@?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAC?$AAS?$AAR?$AA0?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AA?$CI?$AAh?$AAo?$AAs?$AAt?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@CCABKDPK@?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAC?$AAS?$AAR?$AA0?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AA?$CI?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@MJPGJBIP@?$AAO?$AAT?$AAG?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00118			 AREA	 |.pdata|, PDATA
|$T43782| DCD	|$LN18@OTG_Proces@2|
	DCD	0x40009604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FFONKCDK@?$AAE?$AAP?$AA0?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAi?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAd?$AAu?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAc?$AAo@| DCB "E"
	DCB	0x0, "P", 0x0, "0", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, " ", 0x0, "i", 0x0, "g", 0x0, "n", 0x0, "o", 0x0, "r"
	DCB	0x0, "e", 0x0, " ", 0x0, "d", 0x0, "u", 0x0, "e", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "c"
	DCB	0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, " ", 0x0, "m", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@ILAFJIAA@?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAC?$AAS?$AAR?$AA0?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AA?$CI?$AAh?$AAo?$AAs?$AAt?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, ":", 0x0, ":", 0x0, "C", 0x0, "S"
	DCB	0x0, "R", 0x0, "0", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, "(", 0x0, "h"
	DCB	0x0, "o", 0x0, "s", 0x0, "t", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@CCABKDPK@?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAC?$AAS?$AAR?$AA0?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AA?$CI?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, ":", 0x0, ":", 0x0, "C", 0x0, "S"
	DCB	0x0, "R", 0x0, "0", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, "(", 0x0, "d"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@MJPGJBIP@?$AAO?$AAT?$AAG?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, "_", 0x0, "P", 0x0, "r", 0x0, "o"
	DCB	0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, "E", 0x0, "P"
	DCB	0x0, "0", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  05318			 AREA	 |.text|, CODE, ARM

  05318		 |?OTG_ProcessEP0@OMAPMHSUSBOTG@@UAAKXZ| PROC ; OMAPMHSUSBOTG::OTG_ProcessEP0

; 1750 : {    

  05318		 |$LN18@OTG_Proces@2|
  05318	e1a0c00d	 mov         r12, sp
  0531c	e92d0001	 stmdb       sp!, {r0}
  05320	e92d5000	 stmdb       sp!, {r12, lr}
  05324	e24dd028	 sub         sp, sp, #0x28
  05328		 |$M43779|

; 1751 :     DWORD dwStatus = 0;

  05328	e3a03000	 mov         r3, #0
  0532c	e58d3004	 str         r3, [sp, #4]

; 1752 :     DWORD mode;
; 1753 : 
; 1754 :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("OTG_ProcessEP0\r\n")));

  05330	e59f3228	 ldr         r3, [pc, #0x228]
  05334	e5933440	 ldr         r3, [r3, #0x440]
  05338	e3130a02	 tst         r3, #2, 20
  0533c	0a000004	 beq         |$LN8@OTG_Proces@2|
  05340	e59f0224	 ldr         r0, [pc, #0x224]
  05344	eb000000	 bl          NKDbgPrintfW
  05348	e3a03001	 mov         r3, #1
  0534c	e58d300c	 str         r3, [sp, #0xC]
  05350	ea000001	 b           |$LN9@OTG_Proces@2|
  05354		 |$LN8@OTG_Proces@2|
  05354	e3a03000	 mov         r3, #0
  05358	e58d300c	 str         r3, [sp, #0xC]
  0535c		 |$LN9@OTG_Proces@2|

; 1755 :     // For testing purpose, just dump the value from FIFO    
; 1756 :     if (GetMode() == DEVICE_MODE)

  0535c	e59d3030	 ldr         r3, [sp, #0x30]
  05360	e5933000	 ldr         r3, [r3]
  05364	e28330e0	 add         r3, r3, #0xE0
  05368	e59d0030	 ldr         r0, [sp, #0x30]
  0536c	e5933000	 ldr         r3, [r3]
  05370	e1a0e00f	 mov         lr, pc
  05374	e12fff13	 bx          r3
  05378	e58d0010	 str         r0, [sp, #0x10]
  0537c	e59d3010	 ldr         r3, [sp, #0x10]
  05380	e3530001	 cmp         r3, #1
  05384	1a00001a	 bne         |$LN5@OTG_Proces@2|

; 1757 :     {
; 1758 :         DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("OTG::CSR0 = 0x%x (device)\r\n"), INREG16(&m_pOTG->pUsbCsrRegs->ep[0].CSR.CSR0)));        

  05388	e59f31d0	 ldr         r3, [pc, #0x1D0]
  0538c	e5933440	 ldr         r3, [r3, #0x440]
  05390	e3130a02	 tst         r3, #2, 20
  05394	0a000011	 beq         |$LN10@OTG_Proces@2|
  05398	e59d3030	 ldr         r3, [sp, #0x30]
  0539c	e2833e15	 add         r3, r3, #0x15, 28
  053a0	e5933000	 ldr         r3, [r3]
  053a4	e283301c	 add         r3, r3, #0x1C
  053a8	e5933000	 ldr         r3, [r3]
  053ac	e2831002	 add         r1, r3, #2
  053b0	e5d13001	 ldrb        r3, [r1, #1]
  053b4	e1a03403	 mov         r3, r3, lsl #8
  053b8	e1a02803	 mov         r2, r3, lsl #16
  053bc	e1a02822	 mov         r2, r2, lsr #16
  053c0	e5d13000	 ldrb        r3, [r1]
  053c4	e1833002	 orr         r3, r3, r2
  053c8	e1a01003	 mov         r1, r3
  053cc	e59f0194	 ldr         r0, [pc, #0x194]
  053d0	eb000000	 bl          NKDbgPrintfW
  053d4	e3a03001	 mov         r3, #1
  053d8	e58d3014	 str         r3, [sp, #0x14]
  053dc	ea000001	 b           |$LN11@OTG_Proces@2|
  053e0		 |$LN10@OTG_Proces@2|
  053e0	e3a03000	 mov         r3, #0
  053e4	e58d3014	 str         r3, [sp, #0x14]
  053e8		 |$LN11@OTG_Proces@2|

; 1759 :         mode = DEVICE_MODE;

  053e8	e3a03001	 mov         r3, #1
  053ec	e58d3000	 str         r3, [sp]
  053f0	ea000033	 b           |$LN4@OTG_Proces@2|
  053f4		 |$LN5@OTG_Proces@2|

; 1760 :     }
; 1761 :     else if (GetMode() == HOST_MODE)

  053f4	e59d3030	 ldr         r3, [sp, #0x30]
  053f8	e5933000	 ldr         r3, [r3]
  053fc	e28330e0	 add         r3, r3, #0xE0
  05400	e59d0030	 ldr         r0, [sp, #0x30]
  05404	e5933000	 ldr         r3, [r3]
  05408	e1a0e00f	 mov         lr, pc
  0540c	e12fff13	 bx          r3
  05410	e58d0018	 str         r0, [sp, #0x18]
  05414	e59d3018	 ldr         r3, [sp, #0x18]
  05418	e3530002	 cmp         r3, #2
  0541c	1a00001a	 bne         |$LN3@OTG_Proces@2|

; 1762 :     {        
; 1763 :         DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("OTG::CSR0 = 0x%x (host)\r\n"), INREG16(&m_pOTG->pUsbCsrRegs->ep[0].CSR.CSR0)));      

  05420	e59f3138	 ldr         r3, [pc, #0x138]
  05424	e5933440	 ldr         r3, [r3, #0x440]
  05428	e3130a02	 tst         r3, #2, 20
  0542c	0a000011	 beq         |$LN12@OTG_Proces@2|
  05430	e59d3030	 ldr         r3, [sp, #0x30]
  05434	e2833e15	 add         r3, r3, #0x15, 28
  05438	e5933000	 ldr         r3, [r3]
  0543c	e283301c	 add         r3, r3, #0x1C
  05440	e5933000	 ldr         r3, [r3]
  05444	e2831002	 add         r1, r3, #2
  05448	e5d13001	 ldrb        r3, [r1, #1]
  0544c	e1a03403	 mov         r3, r3, lsl #8
  05450	e1a02803	 mov         r2, r3, lsl #16
  05454	e1a02822	 mov         r2, r2, lsr #16
  05458	e5d13000	 ldrb        r3, [r1]
  0545c	e1833002	 orr         r3, r3, r2
  05460	e1a01003	 mov         r1, r3
  05464	e59f00f8	 ldr         r0, [pc, #0xF8]
  05468	eb000000	 bl          NKDbgPrintfW
  0546c	e3a03001	 mov         r3, #1
  05470	e58d301c	 str         r3, [sp, #0x1C]
  05474	ea000001	 b           |$LN13@OTG_Proces@2|
  05478		 |$LN12@OTG_Proces@2|
  05478	e3a03000	 mov         r3, #0
  0547c	e58d301c	 str         r3, [sp, #0x1C]
  05480		 |$LN13@OTG_Proces@2|

; 1764 :         mode = HOST_MODE;

  05480	e3a03002	 mov         r3, #2
  05484	e58d3000	 str         r3, [sp]

; 1765 :     }
; 1766 :     else

  05488	ea00000d	 b           |$LN2@OTG_Proces@2|
  0548c		 |$LN3@OTG_Proces@2|

; 1767 :     {
; 1768 :         DEBUGMSG(ZONE_OTG_INFO, (TEXT("EP0 interrupt ignore due to incorrect mode\r\n")));

  0548c	e59f30cc	 ldr         r3, [pc, #0xCC]
  05490	e5933440	 ldr         r3, [r3, #0x440]
  05494	e3130a01	 tst         r3, #1, 20
  05498	0a000004	 beq         |$LN14@OTG_Proces@2|
  0549c	e59f00b8	 ldr         r0, [pc, #0xB8]
  054a0	eb000000	 bl          NKDbgPrintfW
  054a4	e3a03001	 mov         r3, #1
  054a8	e58d3020	 str         r3, [sp, #0x20]
  054ac	ea000001	 b           |$LN15@OTG_Proces@2|
  054b0		 |$LN14@OTG_Proces@2|
  054b0	e3a03000	 mov         r3, #0
  054b4	e58d3020	 str         r3, [sp, #0x20]
  054b8		 |$LN15@OTG_Proces@2|

; 1769 :         return 0;

  054b8	e3a03000	 mov         r3, #0
  054bc	e58d3008	 str         r3, [sp, #8]
  054c0	ea000021	 b           |$LN6@OTG_Proces@2|
  054c4		 |$LN2@OTG_Proces@2|
  054c4		 |$LN4@OTG_Proces@2|

; 1770 :     }
; 1771 : 
; 1772 :     if (m_pOTG->pFuncs[mode-1] != NULL)

  054c4	e59d3030	 ldr         r3, [sp, #0x30]
  054c8	e2833e15	 add         r3, r3, #0x15, 28
  054cc	e5933000	 ldr         r3, [r3]
  054d0	e2831008	 add         r1, r3, #8
  054d4	e59d3000	 ldr         r3, [sp]
  054d8	e2432001	 sub         r2, r3, #1
  054dc	e3a03004	 mov         r3, #4
  054e0	e0030392	 mul         r3, r2, r3
  054e4	e0813003	 add         r3, r1, r3
  054e8	e5933000	 ldr         r3, [r3]
  054ec	e3530000	 cmp         r3, #0
  054f0	0a000013	 beq         |$LN1@OTG_Proces@2|

; 1773 :         dwStatus = m_pOTG->pFuncs[mode-1]->ProcessEP0((void *)m_pOTG);

  054f4	e59d3030	 ldr         r3, [sp, #0x30]
  054f8	e2833e15	 add         r3, r3, #0x15, 28
  054fc	e5930000	 ldr         r0, [r3]
  05500	e59d3030	 ldr         r3, [sp, #0x30]
  05504	e2833e15	 add         r3, r3, #0x15, 28
  05508	e5933000	 ldr         r3, [r3]
  0550c	e2831008	 add         r1, r3, #8
  05510	e59d3000	 ldr         r3, [sp]
  05514	e2432001	 sub         r2, r3, #1
  05518	e3a03004	 mov         r3, #4
  0551c	e0030392	 mul         r3, r2, r3
  05520	e0813003	 add         r3, r1, r3
  05524	e5933000	 ldr         r3, [r3]
  05528	e2833008	 add         r3, r3, #8
  0552c	e5933000	 ldr         r3, [r3]
  05530	e1a0e00f	 mov         lr, pc
  05534	e12fff13	 bx          r3
  05538	e58d0024	 str         r0, [sp, #0x24]
  0553c	e59d3024	 ldr         r3, [sp, #0x24]
  05540	e58d3004	 str         r3, [sp, #4]
  05544		 |$LN1@OTG_Proces@2|

; 1774 : 
; 1775 :     return dwStatus;

  05544	e59d3004	 ldr         r3, [sp, #4]
  05548	e58d3008	 str         r3, [sp, #8]
  0554c		 |$LN6@OTG_Proces@2|

; 1776 : }

  0554c	e59d0008	 ldr         r0, [sp, #8]
  05550	e28dd028	 add         sp, sp, #0x28
  05554	e89d6000	 ldmia       sp, {sp, lr}
  05558	e12fff1e	 bx          lr
  0555c		 |$LN19@OTG_Proces@2|
  0555c		 |$LN20@OTG_Proces@2|
  0555c	00000000	 DCD         |??_C@_1FK@FFONKCDK@?$AAE?$AAP?$AA0?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAi?$AAg?$AAn?$AAo?$AAr?$AAe?$AA?5?$AAd?$AAu?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAc?$AAo@|
  05560		 |$LN21@OTG_Proces@2|
  05560	00000000	 DCD         |dpCurSettings|
  05564		 |$LN22@OTG_Proces@2|
  05564	00000000	 DCD         |??_C@_1DE@ILAFJIAA@?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAC?$AAS?$AAR?$AA0?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AA?$CI?$AAh?$AAo?$AAs?$AAt?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  05568		 |$LN23@OTG_Proces@2|
  05568	00000000	 DCD         |??_C@_1DI@CCABKDPK@?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAC?$AAS?$AAR?$AA0?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AA?$CI?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0556c		 |$LN24@OTG_Proces@2|
  0556c	00000000	 DCD         |??_C@_1CC@MJPGJBIP@?$AAO?$AAT?$AAG?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?$AN?$AA?6?$AA?$AA@|
  05570		 |$M43780|

			 ENDP  ; |?OTG_ProcessEP0@OMAPMHSUSBOTG@@UAAKXZ|, OMAPMHSUSBOTG::OTG_ProcessEP0

	EXPORT	|??_C@_1DO@HKNBEJLA@?$AAW?$AAa?$AAi?$AAt?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAd?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@JNMODEFH@?$AAU?$AAS?$AAB?$AA?5?$AAB?$AAa?$AAb?$AAb?$AAl?$AAe?$AA?3?$AAD?$AAe?$AAv?$AAC?$AAt?$AAl?$AA?$DL?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@LCAPGLNC@?$AAG?$AAe?$AAt?$AA?5?$AAH?$AAN?$AAP?$AA?5?$AAr?$AAo?$AAl?$AAe?$AA?5?$AAs?$AAw?$AAi?$AAt?$AAc?$AAh?$AA?5?$AAt?$AAo?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@FCKIMFPM@?$AAR?$AAe?$AAs?$AAe?$AAt?$AA?3?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?$FL?$AA?$CF?$AAs?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@JHEGNGJM@?$AAD?$AAM?$AAA?$AA?5?$AAI?$AAN?$AAT?$AAR?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@ECEKCAJF@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@GMMLAPKI@?$AAD?$AAE?$AAV?$AAC?$AAT?$AAL?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@NLLIEMHG@?$AAU?$AAS?$AAB?$AA?5?$AAR?$AAe?$AAs?$AAe?$AAt?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?0?$AA?5?$AAi?$AAt?$AA?5?$AAw?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAb?$AAe?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@NFJBIGJL@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAC?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAD@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@ODENMGML@?$AAC?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?3?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?$FL?$AA?$CF?$AAs?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BC@NMIDBOGD@?$AAA?$AA_?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BC@DGAFMDAB@?$AAB?$AA_?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@GMJJEDKI@?$AAH?$AAN?$AAP?$AA?5?$AAs?$AAw?$AAi?$AAt?$AAc?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAn?$AAe?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAd?$AAi?$AAs?$AAc?$AAo?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@OIHENEJP@?$AAU?$AAS?$AAB?$AA?5?$AAC?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAH?$AAo?$AAs?$AAt?$AA?5?$AAS?$AAi?$AAd?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@MJDDMGMO@?$AAV?$AAB?$AAu?$AAs?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AA?9?$AA?5?$AAO?$AAT?$AAG?$AA_?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAV?$AAB?$AAu?$AAs?$AAE?$AAr?$AAr?$AAo?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@OINKOMCN@?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@PINAMGCP@?$AAC?$AAl?$AAe?$AAa?$AAr?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@OACECNKO@?$AAI?$AAN?$AAT?$AAR?$AAR?$AAX?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5?$AAI?$AAN?$AAT?$AAR?$AAT?$AAX?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@MAFNCEEI@?$AAI?$AAN?$AAT?$AAR?$AA_?$AAU?$AAS?$AAB?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@FONPHCPD@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00120			 AREA	 |.pdata|, PDATA
|$T43853| DCD	|$LN102@OTG_Config@2|
	DCD	0x4004d704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@HKNBEJLA@?$AAW?$AAa?$AAi?$AAt?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAd?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "W"
	DCB	0x0, "a", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "f", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "d", 0x0, "i", 0x0, "s", 0x0, "c"
	DCB	0x0, "o", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@JNMODEFH@?$AAU?$AAS?$AAB?$AA?5?$AAB?$AAa?$AAb?$AAb?$AAl?$AAe?$AA?3?$AAD?$AAe?$AAv?$AAC?$AAt?$AAl?$AA?$DL?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, " ", 0x0, "B", 0x0, "a", 0x0, "b"
	DCB	0x0, "b", 0x0, "l", 0x0, "e", 0x0, ":", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "C", 0x0, "t", 0x0, "l", 0x0, ";", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@LCAPGLNC@?$AAG?$AAe?$AAt?$AA?5?$AAH?$AAN?$AAP?$AA?5?$AAr?$AAo?$AAl?$AAe?$AA?5?$AAs?$AAw?$AAi?$AAt?$AAc?$AAh?$AA?5?$AAt?$AAo?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, " ", 0x0, "H", 0x0, "N", 0x0, "P"
	DCB	0x0, " ", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "e", 0x0, " "
	DCB	0x0, "s", 0x0, "w", 0x0, "i", 0x0, "t", 0x0, "c", 0x0, "h"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "d", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@FCKIMFPM@?$AAR?$AAe?$AAs?$AAe?$AAt?$AA?3?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?$FL?$AA?$CF?$AAs?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "T", 0x0, "y", 0x0, "p", 0x0, "e", 0x0, " ", 0x0, "["
	DCB	0x0, "%", 0x0, "s", 0x0, "]", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@JHEGNGJM@?$AAD?$AAM?$AAA?$AA?5?$AAI?$AAN?$AAT?$AAR?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "M", 0x0, "A", 0x0, " ", 0x0, "I", 0x0, "N", 0x0, "T"
	DCB	0x0, "R", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@ECEKCAJF@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "M"
	DCB	0x0, "o", 0x0, "d", 0x0, "e", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@GMMLAPKI@?$AAD?$AAE?$AAV?$AAC?$AAT?$AAL?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@NLLIEMHG@?$AAU?$AAS?$AAB?$AA?5?$AAR?$AAe?$AAs?$AAe?$AAt?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?0?$AA?5?$AAi?$AAt?$AA?5?$AAw?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAb?$AAe?$AA?5@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "w", 0x0, "o"
	DCB	0x0, "u", 0x0, "l", 0x0, "d", 0x0, " ", 0x0, "b", 0x0, "e"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "n", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "!"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@NFJBIGJL@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAC?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAD@| DCB "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "n", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, "D", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, " ", 0x0, "w", 0x0, "i", 0x0, "t", 0x0, "h", 0x0, " "
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "C", 0x0, "t", 0x0, "l"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@ODENMGML@?$AAC?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?3?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?$FL?$AA?$CF?$AAs?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "T", 0x0, "y", 0x0, "p", 0x0, "e"
	DCB	0x0, " ", 0x0, "[", 0x0, "%", 0x0, "s", 0x0, "]", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@NMIDBOGD@?$AAA?$AA_?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA?$AA@| DCB "A"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C"
	DCB	0x0, "E", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@DGAFMDAB@?$AAB?$AA_?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA?$AA@| DCB "B"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C"
	DCB	0x0, "E", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@GMJJEDKI@?$AAH?$AAN?$AAP?$AA?5?$AAs?$AAw?$AAi?$AAt?$AAc?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAn?$AAe?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAd?$AAi?$AAs?$AAc?$AAo?$AAn@| DCB "H"
	DCB	0x0, "N", 0x0, "P", 0x0, " ", 0x0, "s", 0x0, "w", 0x0, "i"
	DCB	0x0, "t", 0x0, "c", 0x0, "h", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, " ", 0x0, "n"
	DCB	0x0, "e", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "d", 0x0, "i", 0x0, "s", 0x0, "c", 0x0, "o"
	DCB	0x0, "n", 0x0, "n", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, " "
	DCB	0x0, "d", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, " ", 0x0, "m", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@OIHENEJP@?$AAU?$AAS?$AAB?$AA?5?$AAC?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAH?$AAo?$AAs?$AAt?$AA?5?$AAS?$AAi?$AAd?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, " ", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "H", 0x0, "o", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "S"
	DCB	0x0, "i", 0x0, "d", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@MJDDMGMO@?$AAV?$AAB?$AAu?$AAs?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AA?9?$AA?5?$AAO?$AAT?$AAG?$AA_?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAV?$AAB?$AAu?$AAs?$AAE?$AAr?$AAr?$AAo?$AAr@| DCB "V"
	DCB	0x0, "B", 0x0, "u", 0x0, "s", 0x0, " ", 0x0, "E", 0x0, "r"
	DCB	0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "O", 0x0, "T", 0x0, "G", 0x0, "_", 0x0, "H", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "V", 0x0, "B"
	DCB	0x0, "u", 0x0, "s", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "b"
	DCB	0x0, "e", 0x0, " ", 0x0, "i", 0x0, "m", 0x0, "p", 0x0, "l"
	DCB	0x0, "e", 0x0, "m", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@OINKOMCN@?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@PINAMGCP@?$AAC?$AAl?$AAe?$AAa?$AAr?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "l", 0x0, "e", 0x0, "a", 0x0, "r", 0x0, " ", 0x0, "t"
	DCB	0x0, "h", 0x0, "e", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "s"
	DCB	0x0, "u", 0x0, "m", 0x0, "e", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@OACECNKO@?$AAI?$AAN?$AAT?$AAR?$AAR?$AAX?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5?$AAI?$AAN?$AAT?$AAR?$AAT?$AAX?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "R", 0x0, "X", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "I", 0x0, "N", 0x0, "T", 0x0, "R"
	DCB	0x0, "T", 0x0, "X", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@MAFNCEEI@?$AAI?$AAN?$AAT?$AAR?$AA_?$AAU?$AAS?$AAB?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, "_", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@FONPHCPD@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "u", 0x0, "m", 0x0, "e", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  05570			 AREA	 |.text|, CODE, ARM

  05570		 |?OTG_ConfigISR_stage1@OMAPMHSUSBOTG@@UAAKXZ| PROC ; OMAPMHSUSBOTG::OTG_ConfigISR_stage1

; 1796 : {

  05570		 |$LN102@OTG_Config@2|
  05570	e1a0c00d	 mov         r12, sp
  05574	e92d0001	 stmdb       sp!, {r0}
  05578	e92d5000	 stmdb       sp!, {r12, lr}
  0557c	e24dd0b4	 sub         sp, sp, #0xB4
  05580		 |$M43850|

; 1797 :     HKEY hkDevice;
; 1798 :     DWORD dwStatus;
; 1799 :     DWORD dwType, dwSize;
; 1800 :     
; 1801 :     // Step 1. Resume Interrupt
; 1802 :     if ((m_pOTG->intr_usb & INTRUSB_RESUME) == INTRUSB_RESUME)

  05580	e59d30bc	 ldr         r3, [sp, #0xBC]
  05584	e2833e15	 add         r3, r3, #0x15, 28
  05588	e5933000	 ldr         r3, [r3]
  0558c	e2833034	 add         r3, r3, #0x34
  05590	e5d33000	 ldrb        r3, [r3]
  05594	e2033002	 and         r3, r3, #2
  05598	e3530002	 cmp         r3, #2
  0559c	1a000090	 bne         |$LN41@OTG_Config@2|

; 1803 :     {
; 1804 :         DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Resume Interrupt received\r\n")));

  055a0	e59f32e8	 ldr         r3, [pc, #0x2E8]
  055a4	e5933440	 ldr         r3, [r3, #0x440]
  055a8	e3130a02	 tst         r3, #2, 20
  055ac	0a000004	 beq         |$LN44@OTG_Config@2|
  055b0	e59f02f0	 ldr         r0, [pc, #0x2F0]
  055b4	eb000000	 bl          NKDbgPrintfW
  055b8	e3a03001	 mov         r3, #1
  055bc	e58d3030	 str         r3, [sp, #0x30]
  055c0	ea000001	 b           |$LN45@OTG_Config@2|
  055c4		 |$LN44@OTG_Config@2|
  055c4	e3a03000	 mov         r3, #0
  055c8	e58d3030	 str         r3, [sp, #0x30]
  055cc		 |$LN45@OTG_Config@2|

; 1805 :         DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Power = 0x%x\r\n"), INREG8(&m_pOTG->pUsbGenRegs->Power)));

  055cc	e59f32bc	 ldr         r3, [pc, #0x2BC]
  055d0	e5933440	 ldr         r3, [r3, #0x440]
  055d4	e3130a02	 tst         r3, #2, 20
  055d8	0a00000c	 beq         |$LN46@OTG_Config@2|
  055dc	e59d30bc	 ldr         r3, [sp, #0xBC]
  055e0	e2833e15	 add         r3, r3, #0x15, 28
  055e4	e5933000	 ldr         r3, [r3]
  055e8	e2833020	 add         r3, r3, #0x20
  055ec	e5933000	 ldr         r3, [r3]
  055f0	e2833001	 add         r3, r3, #1
  055f4	e5d33000	 ldrb        r3, [r3]
  055f8	e1a01003	 mov         r1, r3
  055fc	e59f02a0	 ldr         r0, [pc, #0x2A0]
  05600	eb000000	 bl          NKDbgPrintfW
  05604	e3a03001	 mov         r3, #1
  05608	e58d3034	 str         r3, [sp, #0x34]
  0560c	ea000001	 b           |$LN47@OTG_Config@2|
  05610		 |$LN46@OTG_Config@2|
  05610	e3a03000	 mov         r3, #0
  05614	e58d3034	 str         r3, [sp, #0x34]
  05618		 |$LN47@OTG_Config@2|

; 1806 :         DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("DevCtl = 0x%x\r\n"), INREG8(&m_pOTG->pUsbGenRegs->DevCtl)));

  05618	e59f3270	 ldr         r3, [pc, #0x270]
  0561c	e5933440	 ldr         r3, [r3, #0x440]
  05620	e3130a02	 tst         r3, #2, 20
  05624	0a00000c	 beq         |$LN48@OTG_Config@2|
  05628	e59d30bc	 ldr         r3, [sp, #0xBC]
  0562c	e2833e15	 add         r3, r3, #0x15, 28
  05630	e5933000	 ldr         r3, [r3]
  05634	e2833020	 add         r3, r3, #0x20
  05638	e5933000	 ldr         r3, [r3]
  0563c	e2833060	 add         r3, r3, #0x60
  05640	e5d33000	 ldrb        r3, [r3]
  05644	e1a01003	 mov         r1, r3
  05648	e59f0250	 ldr         r0, [pc, #0x250]
  0564c	eb000000	 bl          NKDbgPrintfW
  05650	e3a03001	 mov         r3, #1
  05654	e58d3038	 str         r3, [sp, #0x38]
  05658	ea000001	 b           |$LN49@OTG_Config@2|
  0565c		 |$LN48@OTG_Config@2|
  0565c	e3a03000	 mov         r3, #0
  05660	e58d3038	 str         r3, [sp, #0x38]
  05664		 |$LN49@OTG_Config@2|

; 1807 :         DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("INTR_USB = 0x%x\r\n"), m_pOTG->intr_usb));

  05664	e59f3224	 ldr         r3, [pc, #0x224]
  05668	e5933440	 ldr         r3, [r3, #0x440]
  0566c	e3130a02	 tst         r3, #2, 20
  05670	0a00000a	 beq         |$LN50@OTG_Config@2|
  05674	e59d30bc	 ldr         r3, [sp, #0xBC]
  05678	e2833e15	 add         r3, r3, #0x15, 28
  0567c	e5933000	 ldr         r3, [r3]
  05680	e2833034	 add         r3, r3, #0x34
  05684	e5d33000	 ldrb        r3, [r3]
  05688	e1a01003	 mov         r1, r3
  0568c	e59f0208	 ldr         r0, [pc, #0x208]
  05690	eb000000	 bl          NKDbgPrintfW
  05694	e3a03001	 mov         r3, #1
  05698	e58d303c	 str         r3, [sp, #0x3C]
  0569c	ea000001	 b           |$LN51@OTG_Config@2|
  056a0		 |$LN50@OTG_Config@2|
  056a0	e3a03000	 mov         r3, #0
  056a4	e58d303c	 str         r3, [sp, #0x3C]
  056a8		 |$LN51@OTG_Config@2|

; 1808 :         DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("INTRRX = 0x%x, INTRTX = 0x%x\r\n"), m_pOTG->intr_rx, m_pOTG->intr_tx));

  056a8	e59f31e0	 ldr         r3, [pc, #0x1E0]
  056ac	e5933440	 ldr         r3, [r3, #0x440]
  056b0	e3130a02	 tst         r3, #2, 20
  056b4	0a000010	 beq         |$LN52@OTG_Config@2|
  056b8	e59d30bc	 ldr         r3, [sp, #0xBC]
  056bc	e2833e15	 add         r3, r3, #0x15, 28
  056c0	e5933000	 ldr         r3, [r3]
  056c4	e2833032	 add         r3, r3, #0x32
  056c8	e1d330b0	 ldrh        r3, [r3]
  056cc	e1a02003	 mov         r2, r3
  056d0	e59d30bc	 ldr         r3, [sp, #0xBC]
  056d4	e2833e15	 add         r3, r3, #0x15, 28
  056d8	e5933000	 ldr         r3, [r3]
  056dc	e2833030	 add         r3, r3, #0x30
  056e0	e1d330b0	 ldrh        r3, [r3]
  056e4	e1a01003	 mov         r1, r3
  056e8	e59f01a8	 ldr         r0, [pc, #0x1A8]
  056ec	eb000000	 bl          NKDbgPrintfW
  056f0	e3a03001	 mov         r3, #1
  056f4	e58d3040	 str         r3, [sp, #0x40]
  056f8	ea000001	 b           |$LN53@OTG_Config@2|
  056fc		 |$LN52@OTG_Config@2|
  056fc	e3a03000	 mov         r3, #0
  05700	e58d3040	 str         r3, [sp, #0x40]
  05704		 |$LN53@OTG_Config@2|

; 1809 :         // Try to clear it and see if problem solved
; 1810 :         DEBUGMSG(1, (TEXT("Clear the Resume interrupt\r\n")));

  05704	e59f0188	 ldr         r0, [pc, #0x188]
  05708	eb000000	 bl          NKDbgPrintfW
  0570c	e3a03001	 mov         r3, #1
  05710	e58d3044	 str         r3, [sp, #0x44]
  05714	ea000001	 b           |$LN55@OTG_Config@2|
  05718	e3a03000	 mov         r3, #0
  0571c	e58d3044	 str         r3, [sp, #0x44]
  05720		 |$LN55@OTG_Config@2|

; 1811 :         CLRREG8(&m_pOTG->pUsbGenRegs->IntrUSB, INTRUSB_RESUME);

  05720	e59d30bc	 ldr         r3, [sp, #0xBC]
  05724	e2833e15	 add         r3, r3, #0x15, 28
  05728	e5933000	 ldr         r3, [r3]
  0572c	e2833020	 add         r3, r3, #0x20
  05730	e5933000	 ldr         r3, [r3]
  05734	e283300a	 add         r3, r3, #0xA
  05738	e5d33000	 ldrb        r3, [r3]
  0573c	e1a02003	 mov         r2, r3
  05740	e3e03002	 mvn         r3, #2
  05744	e0023003	 and         r3, r2, r3
  05748	e20320ff	 and         r2, r3, #0xFF
  0574c	e59d30bc	 ldr         r3, [sp, #0xBC]
  05750	e2833e15	 add         r3, r3, #0x15, 28
  05754	e5933000	 ldr         r3, [r3]
  05758	e2833020	 add         r3, r3, #0x20
  0575c	e5933000	 ldr         r3, [r3]
  05760	e283300a	 add         r3, r3, #0xA
  05764	e5c32000	 strb        r2, [r3]

; 1812 : 
; 1813 :         // renable suspend interrupt as needed
; 1814 :         if (!m_pTransceiver->SupportsTransceiverWakeWithoutClock())

  05768	e59d30bc	 ldr         r3, [sp, #0xBC]
  0576c	e28330fc	 add         r3, r3, #0xFC
  05770	e5932000	 ldr         r2, [r3]
  05774	e59d30bc	 ldr         r3, [sp, #0xBC]
  05778	e28330fc	 add         r3, r3, #0xFC
  0577c	e5930000	 ldr         r0, [r3]
  05780	e5923000	 ldr         r3, [r2]
  05784	e2833014	 add         r3, r3, #0x14
  05788	e5933000	 ldr         r3, [r3]
  0578c	e1a0e00f	 mov         lr, pc
  05790	e12fff13	 bx          r3
  05794	e58d0048	 str         r0, [sp, #0x48]
  05798	e59d3048	 ldr         r3, [sp, #0x48]
  0579c	e3530000	 cmp         r3, #0
  057a0	1a00000f	 bne         |$LN40@OTG_Config@2|

; 1815 :             SETREG8(&m_pOTG->pUsbGenRegs->IntrUSBE, INTRUSB_SUSPEND);  

  057a4	e59d30bc	 ldr         r3, [sp, #0xBC]
  057a8	e2833e15	 add         r3, r3, #0x15, 28
  057ac	e5933000	 ldr         r3, [r3]
  057b0	e2833020	 add         r3, r3, #0x20
  057b4	e5933000	 ldr         r3, [r3]
  057b8	e283300b	 add         r3, r3, #0xB
  057bc	e5d33000	 ldrb        r3, [r3]
  057c0	e3833001	 orr         r3, r3, #1
  057c4	e20320ff	 and         r2, r3, #0xFF
  057c8	e59d30bc	 ldr         r3, [sp, #0xBC]
  057cc	e2833e15	 add         r3, r3, #0x15, 28
  057d0	e5933000	 ldr         r3, [r3]
  057d4	e2833020	 add         r3, r3, #0x20
  057d8	e5933000	 ldr         r3, [r3]
  057dc	e283300b	 add         r3, r3, #0xB
  057e0	e5c32000	 strb        r2, [r3]
  057e4		 |$LN40@OTG_Config@2|
  057e4		 |$LN41@OTG_Config@2|

; 1816 :     }
; 1817 : 
; 1818 :     // Step 2. Session Request Interrupt on A Device?
; 1819 :     if ((m_pOTG->intr_usb & INTRUSB_SESSREQ) == INTRUSB_SESSREQ)

  057e4	e59d30bc	 ldr         r3, [sp, #0xBC]
  057e8	e2833e15	 add         r3, r3, #0x15, 28
  057ec	e5933000	 ldr         r3, [r3]
  057f0	e2833034	 add         r3, r3, #0x34
  057f4	e5d33000	 ldrb        r3, [r3]
  057f8	e2033040	 and         r3, r3, #0x40
  057fc	e3530040	 cmp         r3, #0x40
  05800	1a000013	 bne         |$LN39@OTG_Config@2|

; 1820 :     {
; 1821 :         DEBUGMSG(ZONE_OTG_INFO, (TEXT("Session Request\r\n")));

  05804	e59f3084	 ldr         r3, [pc, #0x84]
  05808	e5933440	 ldr         r3, [r3, #0x440]
  0580c	e3130a01	 tst         r3, #1, 20
  05810	0a000004	 beq         |$LN56@OTG_Config@2|
  05814	e59f0070	 ldr         r0, [pc, #0x70]
  05818	eb000000	 bl          NKDbgPrintfW
  0581c	e3a03001	 mov         r3, #1
  05820	e58d304c	 str         r3, [sp, #0x4C]
  05824	ea000001	 b           |$LN57@OTG_Config@2|
  05828		 |$LN56@OTG_Config@2|
  05828	e3a03000	 mov         r3, #0
  0582c	e58d304c	 str         r3, [sp, #0x4C]
  05830		 |$LN57@OTG_Config@2|

; 1822 :         SessionRequest(TRUE, TRUE);

  05830	e3a02001	 mov         r2, #1
  05834	e3a01001	 mov         r1, #1
  05838	e59d30bc	 ldr         r3, [sp, #0xBC]
  0583c	e5933000	 ldr         r3, [r3]
  05840	e2833084	 add         r3, r3, #0x84
  05844	e59d00bc	 ldr         r0, [sp, #0xBC]
  05848	e5933000	 ldr         r3, [r3]
  0584c	e1a0e00f	 mov         lr, pc
  05850	e12fff13	 bx          r3
  05854		 |$LN39@OTG_Config@2|

; 1823 :     }
; 1824 : 
; 1825 :     // Step 3. VBus Interrupt on A Device?
; 1826 :     if ((m_pOTG->intr_usb & INTRUSB_VBUSERR) == INTRUSB_VBUSERR)

  05854	e59d30bc	 ldr         r3, [sp, #0xBC]
  05858	e2833e15	 add         r3, r3, #0x15, 28
  0585c	e5933000	 ldr         r3, [r3]
  05860	e2833034	 add         r3, r3, #0x34
  05864	e5d33000	 ldrb        r3, [r3]
  05868	e2033080	 and         r3, r3, #0x80
  0586c	e3530080	 cmp         r3, #0x80
  05870	1a000013	 bne         |$LN38@OTG_Config@2|

; 1827 :     {
; 1828 :         // This handles VBUS error for the case "VBUS error is generated while connecting flash drive"
; 1829 :         RETAILMSG(1, (TEXT("VBus Error - OTG_HandleVBusError to be implemented\r\n")));

  05874	e59f000c	 ldr         r0, [pc, #0xC]
  05878	eb000000	 bl          NKDbgPrintfW
  0587c	e3a03001	 mov         r3, #1
  05880	e58d3050	 str         r3, [sp, #0x50]
  05884	ea00000a	 b           |$LN59@OTG_Config@2|
  05888		 |$LN125@OTG_Config@2|
  05888		 |$LN126@OTG_Config@2|
  05888	00000000	 DCD         |??_C@_1GK@MJDDMGMO@?$AAV?$AAB?$AAu?$AAs?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AA?9?$AA?5?$AAO?$AAT?$AAG?$AA_?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAV?$AAB?$AAu?$AAs?$AAE?$AAr?$AAr?$AAo?$AAr@|
  0588c		 |$LN127@OTG_Config@2|
  0588c	00000000	 DCD         |??_C@_1CE@OINKOMCN@?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  05890		 |$LN128@OTG_Config@2|
  05890	00000000	 DCD         |dpCurSettings|
  05894		 |$LN129@OTG_Config@2|
  05894	00000000	 DCD         |??_C@_1DK@PINAMGCP@?$AAC?$AAl?$AAe?$AAa?$AAr?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  05898		 |$LN130@OTG_Config@2|
  05898	00000000	 DCD         |??_C@_1DO@OACECNKO@?$AAI?$AAN?$AAT?$AAR?$AAR?$AAX?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5?$AAI?$AAN?$AAT?$AAR?$AAT?$AAX?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  0589c		 |$LN131@OTG_Config@2|
  0589c	00000000	 DCD         |??_C@_1CE@MAFNCEEI@?$AAI?$AAN?$AAT?$AAR?$AA_?$AAU?$AAS?$AAB?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  058a0		 |$LN132@OTG_Config@2|
  058a0	00000000	 DCD         |??_C@_1CA@MNOFLILF@?$AAD?$AAe?$AAv?$AAC?$AAt?$AAl?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  058a4		 |$LN133@OTG_Config@2|
  058a4	00000000	 DCD         |??_C@_1BO@IIOMMOE@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  058a8		 |$LN134@OTG_Config@2|
  058a8	00000000	 DCD         |??_C@_1DI@FONPHCPD@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  058ac	e3a03000	 mov         r3, #0
  058b0	e58d3050	 str         r3, [sp, #0x50]
  058b4		 |$LN59@OTG_Config@2|

; 1830 :                 // Suppose to call OTG_HandleVBusError
; 1831 :         m_handleVBUSError = TRUE;

  058b4	e59d30bc	 ldr         r3, [sp, #0xBC]
  058b8	e2832f65	 add         r2, r3, #0x65, 30
  058bc	e3a03001	 mov         r3, #1
  058c0	e5823000	 str         r3, [r2]
  058c4		 |$LN38@OTG_Config@2|

; 1832 :     }
; 1833 :     
; 1834 :     // Step 4: Host Mode connection checking
; 1835 :     if (((m_pOTG->intr_usb & INTRUSB_CONN) == INTRUSB_CONN) && 
; 1836 :         ((INREG8(&m_pOTG->pUsbGenRegs->DevCtl) & DEVCTL_HOSTMODE) == DEVCTL_HOSTMODE))

  058c4	e59d30bc	 ldr         r3, [sp, #0xBC]
  058c8	e2833e15	 add         r3, r3, #0x15, 28
  058cc	e5933000	 ldr         r3, [r3]
  058d0	e2833034	 add         r3, r3, #0x34
  058d4	e5d33000	 ldrb        r3, [r3]
  058d8	e2033010	 and         r3, r3, #0x10
  058dc	e3530010	 cmp         r3, #0x10
  058e0	1a000165	 bne         |$LN37@OTG_Config@2|
  058e4	e59d30bc	 ldr         r3, [sp, #0xBC]
  058e8	e2833e15	 add         r3, r3, #0x15, 28
  058ec	e5933000	 ldr         r3, [r3]
  058f0	e2833020	 add         r3, r3, #0x20
  058f4	e5933000	 ldr         r3, [r3]
  058f8	e2833060	 add         r3, r3, #0x60
  058fc	e5d33000	 ldrb        r3, [r3]
  05900	e2033004	 and         r3, r3, #4
  05904	e3530004	 cmp         r3, #4
  05908	1a00015b	 bne         |$LN37@OTG_Config@2|

; 1837 :     {
; 1838 :         DWORD dwPrevState;
; 1839 :         RETAILMSG(1, (TEXT("USB Connection for Host Side\r\n")));

  0590c	e59f0fb4	 ldr         r0, [pc, #0xFB4]
  05910	eb000000	 bl          NKDbgPrintfW
  05914	e3a03001	 mov         r3, #1
  05918	e58d3054	 str         r3, [sp, #0x54]
  0591c	ea000001	 b           |$LN61@OTG_Config@2|
  05920	e3a03000	 mov         r3, #0
  05924	e58d3054	 str         r3, [sp, #0x54]
  05928		 |$LN61@OTG_Config@2|

; 1840 :         // It may be HNP and perform role switching
; 1841 :         m_disconnected = FALSE;

  05928	e59d30bc	 ldr         r3, [sp, #0xBC]
  0592c	e2832f63	 add         r2, r3, #0x63, 30
  05930	e3a03000	 mov         r3, #0
  05934	e5823000	 str         r3, [r2]

; 1842 : 
; 1843 :         if (m_pOTG->operateMode == DEVICE_MODE)

  05938	e59d30bc	 ldr         r3, [sp, #0xBC]
  0593c	e2833e15	 add         r3, r3, #0x15, 28
  05940	e5933000	 ldr         r3, [r3]
  05944	e2833035	 add         r3, r3, #0x35
  05948	e5d33000	 ldrb        r3, [r3]
  0594c	e3530001	 cmp         r3, #1
  05950	1a000095	 bne         |$LN36@OTG_Config@2|

; 1844 :         {
; 1845 :             RETAILMSG(1, (TEXT("HNP switching and need to disconnect device mode\r\n")));

  05954	e59f0f68	 ldr         r0, [pc, #0xF68]
  05958	eb000000	 bl          NKDbgPrintfW
  0595c	e3a03001	 mov         r3, #1
  05960	e58d3058	 str         r3, [sp, #0x58]
  05964	ea000001	 b           |$LN63@OTG_Config@2|
  05968	e3a03000	 mov         r3, #0
  0596c	e58d3058	 str         r3, [sp, #0x58]
  05970		 |$LN63@OTG_Config@2|

; 1846 :             m_dwStatus |= STATUS_DISCONN_COMPLETE;

  05970	e59d30bc	 ldr         r3, [sp, #0xBC]
  05974	e28330f8	 add         r3, r3, #0xF8
  05978	e5933000	 ldr         r3, [r3]
  0597c	e3832008	 orr         r2, r3, #8
  05980	e59d30bc	 ldr         r3, [sp, #0xBC]
  05984	e28330f8	 add         r3, r3, #0xF8
  05988	e5832000	 str         r2, [r3]

; 1847 :             m_dwStatus &= ~STATUS_WAIT_HOST_DISCONN_COMPLETE;

  0598c	e59d30bc	 ldr         r3, [sp, #0xBC]
  05990	e28330f8	 add         r3, r3, #0xF8
  05994	e5932000	 ldr         r2, [r3]
  05998	e3e03040	 mvn         r3, #0x40
  0599c	e0022003	 and         r2, r2, r3
  059a0	e59d30bc	 ldr         r3, [sp, #0xBC]
  059a4	e28330f8	 add         r3, r3, #0xF8
  059a8	e5832000	 str         r2, [r3]

; 1848 :             //DEBUGMSG(1, (TEXT("operateMode = IDLE (HNP device to host)\r\n")));
; 1849 :             m_pOTG->operateMode = IDLE_MODE;

  059ac	e59d30bc	 ldr         r3, [sp, #0xBC]
  059b0	e2833e15	 add         r3, r3, #0x15, 28
  059b4	e5933000	 ldr         r3, [r3]
  059b8	e2832035	 add         r2, r3, #0x35
  059bc	e3a03000	 mov         r3, #0
  059c0	e5c23000	 strb        r3, [r2]

; 1850 :             m_pOTG->connect_status |= CONN_DC;

  059c4	e59d30bc	 ldr         r3, [sp, #0xBC]
  059c8	e2833e15	 add         r3, r3, #0x15, 28
  059cc	e5933000	 ldr         r3, [r3]
  059d0	e283304c	 add         r3, r3, #0x4C
  059d4	e5d33000	 ldrb        r3, [r3]
  059d8	e3831004	 orr         r1, r3, #4
  059dc	e59d30bc	 ldr         r3, [sp, #0xBC]
  059e0	e2833e15	 add         r3, r3, #0x15, 28
  059e4	e5933000	 ldr         r3, [r3]
  059e8	e283204c	 add         r2, r3, #0x4C
  059ec	e20130ff	 and         r3, r1, #0xFF
  059f0	e5c23000	 strb        r3, [r2]

; 1851 :             dwPrevState = m_pOTG->connect_status;

  059f4	e59d30bc	 ldr         r3, [sp, #0xBC]
  059f8	e2833e15	 add         r3, r3, #0x15, 28
  059fc	e5933000	 ldr         r3, [r3]
  05a00	e283304c	 add         r3, r3, #0x4C
  05a04	e5d33000	 ldrb        r3, [r3]
  05a08	e58d3018	 str         r3, [sp, #0x18]

; 1852 :             m_pOTG->connect_status &= ~CONN_CCS;

  05a0c	e59d30bc	 ldr         r3, [sp, #0xBC]
  05a10	e2833e15	 add         r3, r3, #0x15, 28
  05a14	e5933000	 ldr         r3, [r3]
  05a18	e283304c	 add         r3, r3, #0x4C
  05a1c	e5d33000	 ldrb        r3, [r3]
  05a20	e1a02003	 mov         r2, r3
  05a24	e3e03001	 mvn         r3, #1
  05a28	e0021003	 and         r1, r2, r3
  05a2c	e59d30bc	 ldr         r3, [sp, #0xBC]
  05a30	e2833e15	 add         r3, r3, #0x15, 28
  05a34	e5933000	 ldr         r3, [r3]
  05a38	e283204c	 add         r2, r3, #0x4C
  05a3c	e20130ff	 and         r3, r1, #0xFF
  05a40	e5c23000	 strb        r3, [r2]

; 1853 :             if (dwPrevState & CONN_CCS) 

  05a44	e59d3018	 ldr         r3, [sp, #0x18]
  05a48	e3130001	 tst         r3, #1
  05a4c	0a00000c	 beq         |$LN35@OTG_Config@2|

; 1854 :                 m_pOTG->connect_status |= CONN_CSC;

  05a50	e59d30bc	 ldr         r3, [sp, #0xBC]
  05a54	e2833e15	 add         r3, r3, #0x15, 28
  05a58	e5933000	 ldr         r3, [r3]
  05a5c	e283304c	 add         r3, r3, #0x4C
  05a60	e5d33000	 ldrb        r3, [r3]
  05a64	e3831002	 orr         r1, r3, #2
  05a68	e59d30bc	 ldr         r3, [sp, #0xBC]
  05a6c	e2833e15	 add         r3, r3, #0x15, 28
  05a70	e5933000	 ldr         r3, [r3]
  05a74	e283204c	 add         r2, r3, #0x4C
  05a78	e20130ff	 and         r3, r1, #0xFF
  05a7c	e5c23000	 strb        r3, [r2]

; 1855 :             else

  05a80	ea00000d	 b           |$LN34@OTG_Config@2|
  05a84		 |$LN35@OTG_Config@2|

; 1856 :                 m_pOTG->connect_status &= ~CONN_CSC;

  05a84	e59d30bc	 ldr         r3, [sp, #0xBC]
  05a88	e2833e15	 add         r3, r3, #0x15, 28
  05a8c	e5933000	 ldr         r3, [r3]
  05a90	e283304c	 add         r3, r3, #0x4C
  05a94	e5d33000	 ldrb        r3, [r3]
  05a98	e1a02003	 mov         r2, r3
  05a9c	e3e03002	 mvn         r3, #2
  05aa0	e0021003	 and         r1, r2, r3
  05aa4	e59d30bc	 ldr         r3, [sp, #0xBC]
  05aa8	e2833e15	 add         r3, r3, #0x15, 28
  05aac	e5933000	 ldr         r3, [r3]
  05ab0	e283204c	 add         r2, r3, #0x4C
  05ab4	e20130ff	 and         r3, r1, #0xFF
  05ab8	e5c23000	 strb        r3, [r2]
  05abc		 |$LN34@OTG_Config@2|

; 1857 : 
; 1858 :             m_pTransceiver->SetVBusSource(TRUE);

  05abc	e3a01001	 mov         r1, #1
  05ac0	e59d30bc	 ldr         r3, [sp, #0xBC]
  05ac4	e28330fc	 add         r3, r3, #0xFC
  05ac8	e5932000	 ldr         r2, [r3]
  05acc	e59d30bc	 ldr         r3, [sp, #0xBC]
  05ad0	e28330fc	 add         r3, r3, #0xFC
  05ad4	e5930000	 ldr         r0, [r3]
  05ad8	e5923000	 ldr         r3, [r2]
  05adc	e2833004	 add         r3, r3, #4
  05ae0	e5933000	 ldr         r3, [r3]
  05ae4	e1a0e00f	 mov         lr, pc
  05ae8	e12fff13	 bx          r3

; 1859 :             //UpdateBatteryCharger(BATTERY_USBHOST_DISCONNECT);
; 1860 :             if (m_pOTG->pFuncs[DEVICE_MODE-1] != NULL)

  05aec	e59d30bc	 ldr         r3, [sp, #0xBC]
  05af0	e2833e15	 add         r3, r3, #0x15, 28
  05af4	e5933000	 ldr         r3, [r3]
  05af8	e2833008	 add         r3, r3, #8
  05afc	e5933000	 ldr         r3, [r3]
  05b00	e3530000	 cmp         r3, #0
  05b04	0a00000b	 beq         |$LN33@OTG_Config@2|

; 1861 :                 m_pOTG->pFuncs[DEVICE_MODE-1]->Disconnect((void *)m_pOTG);                  

  05b08	e59d30bc	 ldr         r3, [sp, #0xBC]
  05b0c	e2833e15	 add         r3, r3, #0x15, 28
  05b10	e5930000	 ldr         r0, [r3]
  05b14	e59d30bc	 ldr         r3, [sp, #0xBC]
  05b18	e2833e15	 add         r3, r3, #0x15, 28
  05b1c	e5933000	 ldr         r3, [r3]
  05b20	e2833008	 add         r3, r3, #8
  05b24	e5933000	 ldr         r3, [r3]
  05b28	e2833018	 add         r3, r3, #0x18
  05b2c	e5933000	 ldr         r3, [r3]
  05b30	e1a0e00f	 mov         lr, pc
  05b34	e12fff13	 bx          r3
  05b38		 |$LN33@OTG_Config@2|

; 1862 :             ResetEndPoints();

  05b38	e59d30bc	 ldr         r3, [sp, #0xBC]
  05b3c	e5933000	 ldr         r3, [r3]
  05b40	e28330ec	 add         r3, r3, #0xEC
  05b44	e59d00bc	 ldr         r0, [sp, #0xBC]
  05b48	e5933000	 ldr         r3, [r3]
  05b4c	e1a0e00f	 mov         lr, pc
  05b50	e12fff13	 bx          r3

; 1863 :             // clear any disconnect interrupt
; 1864 :             m_pOTG->intr_usb  &= ~INTRUSB_DISCONN;           

  05b54	e59d30bc	 ldr         r3, [sp, #0xBC]
  05b58	e2833e15	 add         r3, r3, #0x15, 28
  05b5c	e5933000	 ldr         r3, [r3]
  05b60	e2833034	 add         r3, r3, #0x34
  05b64	e5d33000	 ldrb        r3, [r3]
  05b68	e1a02003	 mov         r2, r3
  05b6c	e3e03020	 mvn         r3, #0x20
  05b70	e0021003	 and         r1, r2, r3
  05b74	e59d30bc	 ldr         r3, [sp, #0xBC]
  05b78	e2833e15	 add         r3, r3, #0x15, 28
  05b7c	e5933000	 ldr         r3, [r3]
  05b80	e2832034	 add         r2, r3, #0x34
  05b84	e20130ff	 and         r3, r1, #0xFF
  05b88	e5c23000	 strb        r3, [r2]

; 1865 :             m_dwStatus |= STATUS_HNP_SESSION_INIT;

  05b8c	e59d30bc	 ldr         r3, [sp, #0xBC]
  05b90	e28330f8	 add         r3, r3, #0xF8
  05b94	e5933000	 ldr         r3, [r3]
  05b98	e3832010	 orr         r2, r3, #0x10
  05b9c	e59d30bc	 ldr         r3, [sp, #0xBC]
  05ba0	e28330f8	 add         r3, r3, #0xF8
  05ba4	e5832000	 str         r2, [r3]

; 1866 :         }
; 1867 :         else

  05ba8	ea000093	 b           |$LN32@OTG_Config@2|
  05bac		 |$LN36@OTG_Config@2|

; 1868 :         {
; 1869 :             //DEBUGMSG(1, (TEXT("operateMode = HOST_MODE\r\n")));
; 1870 :             EnterCriticalSection(&m_pOTG->regCS);

  05bac	e59d30bc	 ldr         r3, [sp, #0xBC]
  05bb0	e2833e15	 add         r3, r3, #0x15, 28
  05bb4	e5933000	 ldr         r3, [r3]
  05bb8	e2830038	 add         r0, r3, #0x38
  05bbc	eb000000	 bl          EnterCriticalSection

; 1871 :             if(m_pOTG->dwPwrMgmt !=  MODE_SYSTEM_SUSPEND)

  05bc0	e59d30bc	 ldr         r3, [sp, #0xBC]
  05bc4	e2833e15	 add         r3, r3, #0x15, 28
  05bc8	e5933000	 ldr         r3, [r3]
  05bcc	e2833064	 add         r3, r3, #0x64
  05bd0	e5933000	 ldr         r3, [r3]
  05bd4	e3530001	 cmp         r3, #1
  05bd8	0a000082	 beq         |$LN31@OTG_Config@2|

; 1872 :             {
; 1873 :                 m_pOTG->operateMode = HOST_MODE;

  05bdc	e59d30bc	 ldr         r3, [sp, #0xBC]
  05be0	e2833e15	 add         r3, r3, #0x15, 28
  05be4	e5933000	 ldr         r3, [r3]
  05be8	e2832035	 add         r2, r3, #0x35
  05bec	e3a03002	 mov         r3, #2
  05bf0	e5c23000	 strb        r3, [r2]

; 1874 :                 m_pOTG->deviceType = (INREG8(&m_pOTG->pUsbGenRegs->DevCtl) & DEVCTL_B_DEVICE)? B_DEVICE: A_DEVICE;

  05bf4	e59d30bc	 ldr         r3, [sp, #0xBC]
  05bf8	e2833e15	 add         r3, r3, #0x15, 28
  05bfc	e5933000	 ldr         r3, [r3]
  05c00	e2833020	 add         r3, r3, #0x20
  05c04	e5933000	 ldr         r3, [r3]
  05c08	e2833060	 add         r3, r3, #0x60
  05c0c	e5d33000	 ldrb        r3, [r3]
  05c10	e3130080	 tst         r3, #0x80
  05c14	0a000002	 beq         |$LN64@OTG_Config@2|
  05c18	e3a03001	 mov         r3, #1
  05c1c	e58d305c	 str         r3, [sp, #0x5C]
  05c20	ea000001	 b           |$LN65@OTG_Config@2|
  05c24		 |$LN64@OTG_Config@2|
  05c24	e3a03000	 mov         r3, #0
  05c28	e58d305c	 str         r3, [sp, #0x5C]
  05c2c		 |$LN65@OTG_Config@2|
  05c2c	e59d305c	 ldr         r3, [sp, #0x5C]
  05c30	e20320ff	 and         r2, r3, #0xFF
  05c34	e59d30bc	 ldr         r3, [sp, #0xBC]
  05c38	e2833e15	 add         r3, r3, #0x15, 28
  05c3c	e5933000	 ldr         r3, [r3]
  05c40	e2833036	 add         r3, r3, #0x36
  05c44	e5c32000	 strb        r2, [r3]

; 1875 : 
; 1876 :                 DEBUGMSG(ZONE_OTG_HNP, (TEXT("Connect: DeviceType [%s]\r\n"),
; 1877 :                     ((m_pOTG->deviceType & B_DEVICE)?(TEXT("B_DEVICE")):(TEXT("A_DEVICE"))) ));

  05c48	e59f3c2c	 ldr         r3, [pc, #0xC2C]
  05c4c	e5933440	 ldr         r3, [r3, #0x440]
  05c50	e3130a01	 tst         r3, #1, 20
  05c54	0a000011	 beq         |$LN68@OTG_Config@2|
  05c58	e59d30bc	 ldr         r3, [sp, #0xBC]
  05c5c	e2833e15	 add         r3, r3, #0x15, 28
  05c60	e5933000	 ldr         r3, [r3]
  05c64	e2833036	 add         r3, r3, #0x36
  05c68	e5d33000	 ldrb        r3, [r3]
  05c6c	e3130001	 tst         r3, #1
  05c70	0a000002	 beq         |$LN66@OTG_Config@2|
  05c74	e59f3c24	 ldr         r3, [pc, #0xC24]
  05c78	e58d3060	 str         r3, [sp, #0x60]
  05c7c	ea000001	 b           |$LN67@OTG_Config@2|
  05c80		 |$LN66@OTG_Config@2|
  05c80	e59f3c14	 ldr         r3, [pc, #0xC14]
  05c84	e58d3060	 str         r3, [sp, #0x60]
  05c88		 |$LN67@OTG_Config@2|
  05c88	e59d1060	 ldr         r1, [sp, #0x60]
  05c8c	e59f0c2c	 ldr         r0, [pc, #0xC2C]
  05c90	eb000000	 bl          NKDbgPrintfW
  05c94	e3a03001	 mov         r3, #1
  05c98	e58d3064	 str         r3, [sp, #0x64]
  05c9c	ea000001	 b           |$LN69@OTG_Config@2|
  05ca0		 |$LN68@OTG_Config@2|
  05ca0	e3a03000	 mov         r3, #0
  05ca4	e58d3064	 str         r3, [sp, #0x64]
  05ca8		 |$LN69@OTG_Config@2|

; 1878 : 
; 1879 :                 m_dwStatus |= STATUS_CONNECT;

  05ca8	e59d30bc	 ldr         r3, [sp, #0xBC]
  05cac	e28330f8	 add         r3, r3, #0xF8
  05cb0	e5933000	 ldr         r3, [r3]
  05cb4	e3832001	 orr         r2, r3, #1
  05cb8	e59d30bc	 ldr         r3, [sp, #0xBC]
  05cbc	e28330f8	 add         r3, r3, #0xF8
  05cc0	e5832000	 str         r2, [r3]

; 1880 :                 // Set the current connect status
; 1881 :                 dwPrevState = m_pOTG->connect_status;

  05cc4	e59d30bc	 ldr         r3, [sp, #0xBC]
  05cc8	e2833e15	 add         r3, r3, #0x15, 28
  05ccc	e5933000	 ldr         r3, [r3]
  05cd0	e283304c	 add         r3, r3, #0x4C
  05cd4	e5d33000	 ldrb        r3, [r3]
  05cd8	e58d3018	 str         r3, [sp, #0x18]

; 1882 :                 m_pOTG->connect_status |= CONN_CCS;

  05cdc	e59d30bc	 ldr         r3, [sp, #0xBC]
  05ce0	e2833e15	 add         r3, r3, #0x15, 28
  05ce4	e5933000	 ldr         r3, [r3]
  05ce8	e283304c	 add         r3, r3, #0x4C
  05cec	e5d33000	 ldrb        r3, [r3]
  05cf0	e3831001	 orr         r1, r3, #1
  05cf4	e59d30bc	 ldr         r3, [sp, #0xBC]
  05cf8	e2833e15	 add         r3, r3, #0x15, 28
  05cfc	e5933000	 ldr         r3, [r3]
  05d00	e283204c	 add         r2, r3, #0x4C
  05d04	e20130ff	 and         r3, r1, #0xFF
  05d08	e5c23000	 strb        r3, [r2]

; 1883 :                 if (dwPrevState & CONN_CCS)

  05d0c	e59d3018	 ldr         r3, [sp, #0x18]
  05d10	e3130001	 tst         r3, #1
  05d14	0a00000e	 beq         |$LN30@OTG_Config@2|

; 1884 :                     m_pOTG->connect_status &= ~CONN_CSC;

  05d18	e59d30bc	 ldr         r3, [sp, #0xBC]
  05d1c	e2833e15	 add         r3, r3, #0x15, 28
  05d20	e5933000	 ldr         r3, [r3]
  05d24	e283304c	 add         r3, r3, #0x4C
  05d28	e5d33000	 ldrb        r3, [r3]
  05d2c	e1a02003	 mov         r2, r3
  05d30	e3e03002	 mvn         r3, #2
  05d34	e0021003	 and         r1, r2, r3
  05d38	e59d30bc	 ldr         r3, [sp, #0xBC]
  05d3c	e2833e15	 add         r3, r3, #0x15, 28
  05d40	e5933000	 ldr         r3, [r3]
  05d44	e283204c	 add         r2, r3, #0x4C
  05d48	e20130ff	 and         r3, r1, #0xFF
  05d4c	e5c23000	 strb        r3, [r2]

; 1885 :                 else

  05d50	ea00000b	 b           |$LN29@OTG_Config@2|
  05d54		 |$LN30@OTG_Config@2|

; 1886 :                     m_pOTG->connect_status |= CONN_CSC;

  05d54	e59d30bc	 ldr         r3, [sp, #0xBC]
  05d58	e2833e15	 add         r3, r3, #0x15, 28
  05d5c	e5933000	 ldr         r3, [r3]
  05d60	e283304c	 add         r3, r3, #0x4C
  05d64	e5d33000	 ldrb        r3, [r3]
  05d68	e3831002	 orr         r1, r3, #2
  05d6c	e59d30bc	 ldr         r3, [sp, #0xBC]
  05d70	e2833e15	 add         r3, r3, #0x15, 28
  05d74	e5933000	 ldr         r3, [r3]
  05d78	e283204c	 add         r2, r3, #0x4C
  05d7c	e20130ff	 and         r3, r1, #0xFF
  05d80	e5c23000	 strb        r3, [r2]
  05d84		 |$LN29@OTG_Config@2|

; 1887 : 
; 1888 :                 // Send the message to Host to do Host_Connect
; 1889 :                 if (m_pOTG->pFuncs[HOST_MODE-1] != NULL)

  05d84	e59d30bc	 ldr         r3, [sp, #0xBC]
  05d88	e2833e15	 add         r3, r3, #0x15, 28
  05d8c	e5933000	 ldr         r3, [r3]
  05d90	e283300c	 add         r3, r3, #0xC
  05d94	e5933000	 ldr         r3, [r3]
  05d98	e3530000	 cmp         r3, #0
  05d9c	0a00000b	 beq         |$LN28@OTG_Config@2|

; 1890 :                     m_pOTG->pFuncs[HOST_MODE-1]->Connect((void *)m_pOTG);

  05da0	e59d30bc	 ldr         r3, [sp, #0xBC]
  05da4	e2833e15	 add         r3, r3, #0x15, 28
  05da8	e5930000	 ldr         r0, [r3]
  05dac	e59d30bc	 ldr         r3, [sp, #0xBC]
  05db0	e2833e15	 add         r3, r3, #0x15, 28
  05db4	e5933000	 ldr         r3, [r3]
  05db8	e283300c	 add         r3, r3, #0xC
  05dbc	e5933000	 ldr         r3, [r3]
  05dc0	e2833014	 add         r3, r3, #0x14
  05dc4	e5933000	 ldr         r3, [r3]
  05dc8	e1a0e00f	 mov         lr, pc
  05dcc	e12fff13	 bx          r3
  05dd0		 |$LN28@OTG_Config@2|

; 1891 :                 LeaveCriticalSection(&m_pOTG->regCS);

  05dd0	e59d30bc	 ldr         r3, [sp, #0xBC]
  05dd4	e2833e15	 add         r3, r3, #0x15, 28
  05dd8	e5933000	 ldr         r3, [r3]
  05ddc	e2830038	 add         r0, r3, #0x38
  05de0	eb000000	 bl          LeaveCriticalSection

; 1892 :             }
; 1893 :             else

  05de4	ea000004	 b           |$LN27@OTG_Config@2|
  05de8		 |$LN31@OTG_Config@2|

; 1894 :             {
; 1895 :                 LeaveCriticalSection(&m_pOTG->regCS);

  05de8	e59d30bc	 ldr         r3, [sp, #0xBC]
  05dec	e2833e15	 add         r3, r3, #0x15, 28
  05df0	e5933000	 ldr         r3, [r3]
  05df4	e2830038	 add         r0, r3, #0x38
  05df8	eb000000	 bl          LeaveCriticalSection
  05dfc		 |$LN27@OTG_Config@2|
  05dfc		 |$LN32@OTG_Config@2|

; 1896 :             }
; 1897 :         }
; 1898 : 
; 1899 :         // renable suspend interrupt as needed
; 1900 :         if (!m_pTransceiver->SupportsTransceiverWakeWithoutClock())

  05dfc	e59d30bc	 ldr         r3, [sp, #0xBC]
  05e00	e28330fc	 add         r3, r3, #0xFC
  05e04	e5932000	 ldr         r2, [r3]
  05e08	e59d30bc	 ldr         r3, [sp, #0xBC]
  05e0c	e28330fc	 add         r3, r3, #0xFC
  05e10	e5930000	 ldr         r0, [r3]
  05e14	e5923000	 ldr         r3, [r2]
  05e18	e2833014	 add         r3, r3, #0x14
  05e1c	e5933000	 ldr         r3, [r3]
  05e20	e1a0e00f	 mov         lr, pc
  05e24	e12fff13	 bx          r3
  05e28	e58d0068	 str         r0, [sp, #0x68]
  05e2c	e59d3068	 ldr         r3, [sp, #0x68]
  05e30	e3530000	 cmp         r3, #0
  05e34	1a00000f	 bne         |$LN26@OTG_Config@2|

; 1901 :             SETREG8(&m_pOTG->pUsbGenRegs->IntrUSBE, INTRUSB_SUSPEND);  

  05e38	e59d30bc	 ldr         r3, [sp, #0xBC]
  05e3c	e2833e15	 add         r3, r3, #0x15, 28
  05e40	e5933000	 ldr         r3, [r3]
  05e44	e2833020	 add         r3, r3, #0x20
  05e48	e5933000	 ldr         r3, [r3]
  05e4c	e283300b	 add         r3, r3, #0xB
  05e50	e5d33000	 ldrb        r3, [r3]
  05e54	e3833001	 orr         r3, r3, #1
  05e58	e20320ff	 and         r2, r3, #0xFF
  05e5c	e59d30bc	 ldr         r3, [sp, #0xBC]
  05e60	e2833e15	 add         r3, r3, #0x15, 28
  05e64	e5933000	 ldr         r3, [r3]
  05e68	e2833020	 add         r3, r3, #0x20
  05e6c	e5933000	 ldr         r3, [r3]
  05e70	e283300b	 add         r3, r3, #0xB
  05e74	e5c32000	 strb        r2, [r3]
  05e78		 |$LN26@OTG_Config@2|

; 1902 :     }

  05e78	ea000019	 b           |$LN25@OTG_Config@2|
  05e7c		 |$LN37@OTG_Config@2|

; 1903 :     else if (m_pOTG->intr_usb & INTRUSB_CONN)

  05e7c	e59d30bc	 ldr         r3, [sp, #0xBC]
  05e80	e2833e15	 add         r3, r3, #0x15, 28
  05e84	e5933000	 ldr         r3, [r3]
  05e88	e2833034	 add         r3, r3, #0x34
  05e8c	e5d33000	 ldrb        r3, [r3]
  05e90	e3130010	 tst         r3, #0x10
  05e94	0a000012	 beq         |$LN24@OTG_Config@2|

; 1904 :     {
; 1905 :         DEBUGMSG(ZONE_OTG_INFO, (TEXT("Invalid Connection Detect with DevCtl = 0x%x\r\n"), INREG8(&m_pOTG->pUsbGenRegs->DevCtl)));

  05e98	e59f39dc	 ldr         r3, [pc, #0x9DC]
  05e9c	e5933440	 ldr         r3, [r3, #0x440]
  05ea0	e3130a01	 tst         r3, #1, 20
  05ea4	0a00000c	 beq         |$LN70@OTG_Config@2|
  05ea8	e59d30bc	 ldr         r3, [sp, #0xBC]
  05eac	e2833e15	 add         r3, r3, #0x15, 28
  05eb0	e5933000	 ldr         r3, [r3]
  05eb4	e2833020	 add         r3, r3, #0x20
  05eb8	e5933000	 ldr         r3, [r3]
  05ebc	e2833060	 add         r3, r3, #0x60
  05ec0	e5d33000	 ldrb        r3, [r3]
  05ec4	e1a01003	 mov         r1, r3
  05ec8	e59f09ec	 ldr         r0, [pc, #0x9EC]
  05ecc	eb000000	 bl          NKDbgPrintfW
  05ed0	e3a03001	 mov         r3, #1
  05ed4	e58d306c	 str         r3, [sp, #0x6C]
  05ed8	ea000001	 b           |$LN71@OTG_Config@2|
  05edc		 |$LN70@OTG_Config@2|
  05edc	e3a03000	 mov         r3, #0
  05ee0	e58d306c	 str         r3, [sp, #0x6C]
  05ee4		 |$LN71@OTG_Config@2|
  05ee4		 |$LN24@OTG_Config@2|
  05ee4		 |$LN25@OTG_Config@2|

; 1906 :     }
; 1907 :     
; 1908 :     // Step 5: Reset IRQ
; 1909 :     if ((m_pOTG->intr_usb & INTRUSB_RESET) == INTRUSB_RESET)

  05ee4	e59d30bc	 ldr         r3, [sp, #0xBC]
  05ee8	e2833e15	 add         r3, r3, #0x15, 28
  05eec	e5933000	 ldr         r3, [r3]
  05ef0	e2833034	 add         r3, r3, #0x34
  05ef4	e5d33000	 ldrb        r3, [r3]
  05ef8	e2033004	 and         r3, r3, #4
  05efc	e3530004	 cmp         r3, #4
  05f00	1a000254	 bne         |$LN23@OTG_Config@2|

; 1910 :     {
; 1911 :         if (((INREG8(&m_pOTG->pUsbGenRegs->DevCtl) & DEVCTL_HOSTMODE) == 0x00) 
; 1912 :             && ((m_dwStatus & STATUS_HNP_SESSION_MASK) == 0x00))// Device Mode

  05f04	e59d30bc	 ldr         r3, [sp, #0xBC]
  05f08	e2833e15	 add         r3, r3, #0x15, 28
  05f0c	e5933000	 ldr         r3, [r3]
  05f10	e2833020	 add         r3, r3, #0x20
  05f14	e5933000	 ldr         r3, [r3]
  05f18	e2833060	 add         r3, r3, #0x60
  05f1c	e5d33000	 ldrb        r3, [r3]
  05f20	e3130004	 tst         r3, #4
  05f24	1a000208	 bne         |$LN22@OTG_Config@2|
  05f28	e59d30bc	 ldr         r3, [sp, #0xBC]
  05f2c	e28330f8	 add         r3, r3, #0xF8
  05f30	e5933000	 ldr         r3, [r3]
  05f34	e3130030	 tst         r3, #0x30
  05f38	1a000203	 bne         |$LN22@OTG_Config@2|

; 1913 :         {
; 1914 :             DWORD dwPrevState;
; 1915 :             
; 1916 :             DEBUGMSG(ZONE_OTG_INFO, (TEXT("USB Reset detected, it would be connection!!\r\n")));

  05f3c	e59f3938	 ldr         r3, [pc, #0x938]
  05f40	e5933440	 ldr         r3, [r3, #0x440]
  05f44	e3130a01	 tst         r3, #1, 20
  05f48	0a000004	 beq         |$LN72@OTG_Config@2|
  05f4c	e59f0964	 ldr         r0, [pc, #0x964]
  05f50	eb000000	 bl          NKDbgPrintfW
  05f54	e3a03001	 mov         r3, #1
  05f58	e58d3070	 str         r3, [sp, #0x70]
  05f5c	ea000001	 b           |$LN73@OTG_Config@2|
  05f60		 |$LN72@OTG_Config@2|
  05f60	e3a03000	 mov         r3, #0
  05f64	e58d3070	 str         r3, [sp, #0x70]
  05f68		 |$LN73@OTG_Config@2|

; 1917 :             DEBUGMSG(ZONE_OTG_INFO, (TEXT("INTR_USB = 0x%x\r\n"), m_pOTG->intr_usb));

  05f68	e59f390c	 ldr         r3, [pc, #0x90C]
  05f6c	e5933440	 ldr         r3, [r3, #0x440]
  05f70	e3130a01	 tst         r3, #1, 20
  05f74	0a00000a	 beq         |$LN74@OTG_Config@2|
  05f78	e59d30bc	 ldr         r3, [sp, #0xBC]
  05f7c	e2833e15	 add         r3, r3, #0x15, 28
  05f80	e5933000	 ldr         r3, [r3]
  05f84	e2833034	 add         r3, r3, #0x34
  05f88	e5d33000	 ldrb        r3, [r3]
  05f8c	e1a01003	 mov         r1, r3
  05f90	e59f091c	 ldr         r0, [pc, #0x91C]
  05f94	eb000000	 bl          NKDbgPrintfW
  05f98	e3a03001	 mov         r3, #1
  05f9c	e58d3074	 str         r3, [sp, #0x74]
  05fa0	ea000001	 b           |$LN75@OTG_Config@2|
  05fa4		 |$LN74@OTG_Config@2|
  05fa4	e3a03000	 mov         r3, #0
  05fa8	e58d3074	 str         r3, [sp, #0x74]
  05fac		 |$LN75@OTG_Config@2|

; 1918 :             DEBUGMSG(ZONE_OTG_INFO, (TEXT("DEVCTL = 0x%x\r\n"), INREG8(&m_pOTG->pUsbGenRegs->DevCtl)));

  05fac	e59f38c8	 ldr         r3, [pc, #0x8C8]
  05fb0	e5933440	 ldr         r3, [r3, #0x440]
  05fb4	e3130a01	 tst         r3, #1, 20
  05fb8	0a00000c	 beq         |$LN76@OTG_Config@2|
  05fbc	e59d30bc	 ldr         r3, [sp, #0xBC]
  05fc0	e2833e15	 add         r3, r3, #0x15, 28
  05fc4	e5933000	 ldr         r3, [r3]
  05fc8	e2833020	 add         r3, r3, #0x20
  05fcc	e5933000	 ldr         r3, [r3]
  05fd0	e2833060	 add         r3, r3, #0x60
  05fd4	e5d33000	 ldrb        r3, [r3]
  05fd8	e1a01003	 mov         r1, r3
  05fdc	e59f08cc	 ldr         r0, [pc, #0x8CC]
  05fe0	eb000000	 bl          NKDbgPrintfW
  05fe4	e3a03001	 mov         r3, #1
  05fe8	e58d3078	 str         r3, [sp, #0x78]
  05fec	ea000001	 b           |$LN77@OTG_Config@2|
  05ff0		 |$LN76@OTG_Config@2|
  05ff0	e3a03000	 mov         r3, #0
  05ff4	e58d3078	 str         r3, [sp, #0x78]
  05ff8		 |$LN77@OTG_Config@2|

; 1919 :             DEBUGMSG(ZONE_OTG_INFO, (TEXT("INTRRX = 0x%x, INTRTX = 0x%x\r\n"), m_pOTG->intr_rx, m_pOTG->intr_tx));

  05ff8	e59f387c	 ldr         r3, [pc, #0x87C]
  05ffc	e5933440	 ldr         r3, [r3, #0x440]
  06000	e3130a01	 tst         r3, #1, 20
  06004	0a000010	 beq         |$LN78@OTG_Config@2|
  06008	e59d30bc	 ldr         r3, [sp, #0xBC]
  0600c	e2833e15	 add         r3, r3, #0x15, 28
  06010	e5933000	 ldr         r3, [r3]
  06014	e2833032	 add         r3, r3, #0x32
  06018	e1d330b0	 ldrh        r3, [r3]
  0601c	e1a02003	 mov         r2, r3
  06020	e59d30bc	 ldr         r3, [sp, #0xBC]
  06024	e2833e15	 add         r3, r3, #0x15, 28
  06028	e5933000	 ldr         r3, [r3]
  0602c	e2833030	 add         r3, r3, #0x30
  06030	e1d330b0	 ldrh        r3, [r3]
  06034	e1a01003	 mov         r1, r3
  06038	e59f086c	 ldr         r0, [pc, #0x86C]
  0603c	eb000000	 bl          NKDbgPrintfW
  06040	e3a03001	 mov         r3, #1
  06044	e58d307c	 str         r3, [sp, #0x7C]
  06048	ea000001	 b           |$LN79@OTG_Config@2|
  0604c		 |$LN78@OTG_Config@2|
  0604c	e3a03000	 mov         r3, #0
  06050	e58d307c	 str         r3, [sp, #0x7C]
  06054		 |$LN79@OTG_Config@2|

; 1920 :             DEBUGMSG(ZONE_OTG_INFO, (TEXT("Power Mode = 0x%x\r\n"), INREG8(&m_pOTG->pUsbGenRegs->Power)));

  06054	e59f3820	 ldr         r3, [pc, #0x820]
  06058	e5933440	 ldr         r3, [r3, #0x440]
  0605c	e3130a01	 tst         r3, #1, 20
  06060	0a00000c	 beq         |$LN80@OTG_Config@2|
  06064	e59d30bc	 ldr         r3, [sp, #0xBC]
  06068	e2833e15	 add         r3, r3, #0x15, 28
  0606c	e5933000	 ldr         r3, [r3]
  06070	e2833020	 add         r3, r3, #0x20
  06074	e5933000	 ldr         r3, [r3]
  06078	e2833001	 add         r3, r3, #1
  0607c	e5d33000	 ldrb        r3, [r3]
  06080	e1a01003	 mov         r1, r3
  06084	e59f081c	 ldr         r0, [pc, #0x81C]
  06088	eb000000	 bl          NKDbgPrintfW
  0608c	e3a03001	 mov         r3, #1
  06090	e58d3080	 str         r3, [sp, #0x80]
  06094	ea000001	 b           |$LN81@OTG_Config@2|
  06098		 |$LN80@OTG_Config@2|
  06098	e3a03000	 mov         r3, #0
  0609c	e58d3080	 str         r3, [sp, #0x80]
  060a0		 |$LN81@OTG_Config@2|

; 1921 :             DEBUGMSG(ZONE_OTG_INFO, (TEXT("DMA INTR = 0x%x\r\n"), INREG32(&m_pOTG->pUsbDmaRegs->Intr)));

  060a0	e59f37d4	 ldr         r3, [pc, #0x7D4]
  060a4	e5933440	 ldr         r3, [r3, #0x440]
  060a8	e3130a01	 tst         r3, #1, 20
  060ac	0a00000a	 beq         |$LN82@OTG_Config@2|
  060b0	e59d30bc	 ldr         r3, [sp, #0xBC]
  060b4	e2833e15	 add         r3, r3, #0x15, 28
  060b8	e5933000	 ldr         r3, [r3]
  060bc	e2833024	 add         r3, r3, #0x24
  060c0	e5933000	 ldr         r3, [r3]
  060c4	e5931000	 ldr         r1, [r3]
  060c8	e59f07d4	 ldr         r0, [pc, #0x7D4]
  060cc	eb000000	 bl          NKDbgPrintfW
  060d0	e3a03001	 mov         r3, #1
  060d4	e58d3084	 str         r3, [sp, #0x84]
  060d8	ea000001	 b           |$LN83@OTG_Config@2|
  060dc		 |$LN82@OTG_Config@2|
  060dc	e3a03000	 mov         r3, #0
  060e0	e58d3084	 str         r3, [sp, #0x84]
  060e4		 |$LN83@OTG_Config@2|

; 1922 : 
; 1923 :             m_pOTG->deviceType = ((INREG8(&m_pOTG->pUsbGenRegs->DevCtl) & DEVCTL_B_DEVICE)? B_DEVICE: A_DEVICE);

  060e4	e59d30bc	 ldr         r3, [sp, #0xBC]
  060e8	e2833e15	 add         r3, r3, #0x15, 28
  060ec	e5933000	 ldr         r3, [r3]
  060f0	e2833020	 add         r3, r3, #0x20
  060f4	e5933000	 ldr         r3, [r3]
  060f8	e2833060	 add         r3, r3, #0x60
  060fc	e5d33000	 ldrb        r3, [r3]
  06100	e3130080	 tst         r3, #0x80
  06104	0a000002	 beq         |$LN84@OTG_Config@2|
  06108	e3a03001	 mov         r3, #1
  0610c	e58d3088	 str         r3, [sp, #0x88]
  06110	ea000001	 b           |$LN85@OTG_Config@2|
  06114		 |$LN84@OTG_Config@2|
  06114	e3a03000	 mov         r3, #0
  06118	e58d3088	 str         r3, [sp, #0x88]
  0611c		 |$LN85@OTG_Config@2|
  0611c	e59d3088	 ldr         r3, [sp, #0x88]
  06120	e20320ff	 and         r2, r3, #0xFF
  06124	e59d30bc	 ldr         r3, [sp, #0xBC]
  06128	e2833e15	 add         r3, r3, #0x15, 28
  0612c	e5933000	 ldr         r3, [r3]
  06130	e2833036	 add         r3, r3, #0x36
  06134	e5c32000	 strb        r2, [r3]

; 1924 :             DEBUGMSG(ZONE_OTG_INFO, (TEXT("Reset: DeviceType [%s]\r\n"), 
; 1925 :                 ((m_pOTG->deviceType & B_DEVICE)?(TEXT("B_DEVICE")):(TEXT("A_DEVICE"))) ));

  06138	e59f373c	 ldr         r3, [pc, #0x73C]
  0613c	e5933440	 ldr         r3, [r3, #0x440]
  06140	e3130a01	 tst         r3, #1, 20
  06144	0a000011	 beq         |$LN88@OTG_Config@2|
  06148	e59d30bc	 ldr         r3, [sp, #0xBC]
  0614c	e2833e15	 add         r3, r3, #0x15, 28
  06150	e5933000	 ldr         r3, [r3]
  06154	e2833036	 add         r3, r3, #0x36
  06158	e5d33000	 ldrb        r3, [r3]
  0615c	e3130001	 tst         r3, #1
  06160	0a000002	 beq         |$LN86@OTG_Config@2|
  06164	e59f3734	 ldr         r3, [pc, #0x734]
  06168	e58d308c	 str         r3, [sp, #0x8C]
  0616c	ea000001	 b           |$LN87@OTG_Config@2|
  06170		 |$LN86@OTG_Config@2|
  06170	e59f3724	 ldr         r3, [pc, #0x724]
  06174	e58d308c	 str         r3, [sp, #0x8C]
  06178		 |$LN87@OTG_Config@2|
  06178	e59d108c	 ldr         r1, [sp, #0x8C]
  0617c	e59f0714	 ldr         r0, [pc, #0x714]
  06180	eb000000	 bl          NKDbgPrintfW
  06184	e3a03001	 mov         r3, #1
  06188	e58d3090	 str         r3, [sp, #0x90]
  0618c	ea000001	 b           |$LN89@OTG_Config@2|
  06190		 |$LN88@OTG_Config@2|
  06190	e3a03000	 mov         r3, #0
  06194	e58d3090	 str         r3, [sp, #0x90]
  06198		 |$LN89@OTG_Config@2|

; 1926 : 
; 1927 :             if (m_pOTG->operateMode != HOST_MODE)

  06198	e59d30bc	 ldr         r3, [sp, #0xBC]
  0619c	e2833e15	 add         r3, r3, #0x15, 28
  061a0	e5933000	 ldr         r3, [r3]
  061a4	e2833035	 add         r3, r3, #0x35
  061a8	e5d33000	 ldrb        r3, [r3]
  061ac	e3530002	 cmp         r3, #2
  061b0	0a0000dd	 beq         |$LN21@OTG_Config@2|

; 1928 :             {       
; 1929 :                 //DEBUGMSG(1, (TEXT("operateMode = DEVICE_MODE\r\n")));
; 1930 :                 m_pOTG->operateMode = DEVICE_MODE;            

  061b4	e59d30bc	 ldr         r3, [sp, #0xBC]
  061b8	e2833e15	 add         r3, r3, #0x15, 28
  061bc	e5933000	 ldr         r3, [r3]
  061c0	e2832035	 add         r2, r3, #0x35
  061c4	e3a03001	 mov         r3, #1
  061c8	e5c23000	 strb        r3, [r2]

; 1931 :                 m_dwStatus |= STATUS_CONNECT;

  061cc	e59d30bc	 ldr         r3, [sp, #0xBC]
  061d0	e28330f8	 add         r3, r3, #0xF8
  061d4	e5933000	 ldr         r3, [r3]
  061d8	e3832001	 orr         r2, r3, #1
  061dc	e59d30bc	 ldr         r3, [sp, #0xBC]
  061e0	e28330f8	 add         r3, r3, #0xF8
  061e4	e5832000	 str         r2, [r3]

; 1932 :                 m_dwStatus &= ~(STATUS_DISCONN_REQUEST|STATUS_WAIT_HOST_DISCONN_COMPLETE|STATUS_DISCONN_COMPLETE);

  061e8	e59d30bc	 ldr         r3, [sp, #0xBC]
  061ec	e28330f8	 add         r3, r3, #0xF8
  061f0	e5932000	 ldr         r2, [r3]
  061f4	e3e0304a	 mvn         r3, #0x4A
  061f8	e0022003	 and         r2, r2, r3
  061fc	e59d30bc	 ldr         r3, [sp, #0xBC]
  06200	e28330f8	 add         r3, r3, #0xF8
  06204	e5832000	 str         r2, [r3]

; 1933 :                 dwPrevState = m_pOTG->connect_status;

  06208	e59d30bc	 ldr         r3, [sp, #0xBC]
  0620c	e2833e15	 add         r3, r3, #0x15, 28
  06210	e5933000	 ldr         r3, [r3]
  06214	e283304c	 add         r3, r3, #0x4C
  06218	e5d33000	 ldrb        r3, [r3]
  0621c	e58d301c	 str         r3, [sp, #0x1C]

; 1934 :                 m_pOTG->connect_status |= CONN_CCS;

  06220	e59d30bc	 ldr         r3, [sp, #0xBC]
  06224	e2833e15	 add         r3, r3, #0x15, 28
  06228	e5933000	 ldr         r3, [r3]
  0622c	e283304c	 add         r3, r3, #0x4C
  06230	e5d33000	 ldrb        r3, [r3]
  06234	e3831001	 orr         r1, r3, #1
  06238	e59d30bc	 ldr         r3, [sp, #0xBC]
  0623c	e2833e15	 add         r3, r3, #0x15, 28
  06240	e5933000	 ldr         r3, [r3]
  06244	e283204c	 add         r2, r3, #0x4C
  06248	e20130ff	 and         r3, r1, #0xFF
  0624c	e5c23000	 strb        r3, [r2]

; 1935 :                 if (dwPrevState & CONN_CCS) 

  06250	e59d301c	 ldr         r3, [sp, #0x1C]
  06254	e3130001	 tst         r3, #1
  06258	0a00000e	 beq         |$LN20@OTG_Config@2|

; 1936 :                     m_pOTG->connect_status &= ~CONN_CSC;

  0625c	e59d30bc	 ldr         r3, [sp, #0xBC]
  06260	e2833e15	 add         r3, r3, #0x15, 28
  06264	e5933000	 ldr         r3, [r3]
  06268	e283304c	 add         r3, r3, #0x4C
  0626c	e5d33000	 ldrb        r3, [r3]
  06270	e1a02003	 mov         r2, r3
  06274	e3e03002	 mvn         r3, #2
  06278	e0021003	 and         r1, r2, r3
  0627c	e59d30bc	 ldr         r3, [sp, #0xBC]
  06280	e2833e15	 add         r3, r3, #0x15, 28
  06284	e5933000	 ldr         r3, [r3]
  06288	e283204c	 add         r2, r3, #0x4C
  0628c	e20130ff	 and         r3, r1, #0xFF
  06290	e5c23000	 strb        r3, [r2]

; 1937 :                 else

  06294	ea00000b	 b           |$LN19@OTG_Config@2|
  06298		 |$LN20@OTG_Config@2|

; 1938 :                     m_pOTG->connect_status |= CONN_CSC;

  06298	e59d30bc	 ldr         r3, [sp, #0xBC]
  0629c	e2833e15	 add         r3, r3, #0x15, 28
  062a0	e5933000	 ldr         r3, [r3]
  062a4	e283304c	 add         r3, r3, #0x4C
  062a8	e5d33000	 ldrb        r3, [r3]
  062ac	e3831002	 orr         r1, r3, #2
  062b0	e59d30bc	 ldr         r3, [sp, #0xBC]
  062b4	e2833e15	 add         r3, r3, #0x15, 28
  062b8	e5933000	 ldr         r3, [r3]
  062bc	e283204c	 add         r2, r3, #0x4C
  062c0	e20130ff	 and         r3, r1, #0xFF
  062c4	e5c23000	 strb        r3, [r2]
  062c8		 |$LN19@OTG_Config@2|

; 1939 : 
; 1940 :                 if (m_pOTG->deviceType & B_DEVICE && (INREG8(&m_pOTG->pUsbGenRegs->DevCtl) & DEVCTL_SESSION))

  062c8	e59d30bc	 ldr         r3, [sp, #0xBC]
  062cc	e2833e15	 add         r3, r3, #0x15, 28
  062d0	e5933000	 ldr         r3, [r3]
  062d4	e2833036	 add         r3, r3, #0x36
  062d8	e5d33000	 ldrb        r3, [r3]
  062dc	e3130001	 tst         r3, #1
  062e0	0a000019	 beq         |$LN18@OTG_Config@2|
  062e4	e59d30bc	 ldr         r3, [sp, #0xBC]
  062e8	e2833e15	 add         r3, r3, #0x15, 28
  062ec	e5933000	 ldr         r3, [r3]
  062f0	e2833020	 add         r3, r3, #0x20
  062f4	e5933000	 ldr         r3, [r3]
  062f8	e2833060	 add         r3, r3, #0x60
  062fc	e5d33000	 ldrb        r3, [r3]
  06300	e3130001	 tst         r3, #1
  06304	0a000010	 beq         |$LN18@OTG_Config@2|

; 1941 :                 {
; 1942 :                     m_pTransceiver->SetVBusSource(TRUE);

  06308	e3a01001	 mov         r1, #1
  0630c	e59d30bc	 ldr         r3, [sp, #0xBC]
  06310	e28330fc	 add         r3, r3, #0xFC
  06314	e5932000	 ldr         r2, [r3]
  06318	e59d30bc	 ldr         r3, [sp, #0xBC]
  0631c	e28330fc	 add         r3, r3, #0xFC
  06320	e5930000	 ldr         r0, [r3]
  06324	e5923000	 ldr         r3, [r2]
  06328	e2833004	 add         r3, r3, #4
  0632c	e5933000	 ldr         r3, [r3]
  06330	e1a0e00f	 mov         lr, pc
  06334	e12fff13	 bx          r3

; 1943 :                     m_dwbTypeConnector = 1;

  06338	e59d30bc	 ldr         r3, [sp, #0xBC]
  0633c	e2832f66	 add         r2, r3, #0x66, 30
  06340	e3a03001	 mov         r3, #1
  06344	e5823000	 str         r3, [r2]

; 1944 :                 }
; 1945 :                 else

  06348	ea000003	 b           |$LN17@OTG_Config@2|
  0634c		 |$LN18@OTG_Config@2|

; 1946 :                 {
; 1947 :                     m_dwbTypeConnector = 0;

  0634c	e59d30bc	 ldr         r3, [sp, #0xBC]
  06350	e2832f66	 add         r2, r3, #0x66, 30
  06354	e3a03000	 mov         r3, #0
  06358	e5823000	 str         r3, [r2]
  0635c		 |$LN17@OTG_Config@2|

; 1948 :                 }
; 1949 : 
; 1950 :                 dwStatus = ::RegOpenKeyEx(HKEY_LOCAL_MACHINE, (LPCTSTR) REG_USBFN_DRV_PATH, 0, KEY_ALL_ACCESS, &hkDevice);

  0635c	e28d3014	 add         r3, sp, #0x14
  06360	e58d3000	 str         r3, [sp]
  06364	e3a0380f	 mov         r3, #0xF, 16
  06368	e383303f	 orr         r3, r3, #0x3F
  0636c	e3a02000	 mov         r2, #0
  06370	e59f1514	 ldr         r1, [pc, #0x514]
  06374	e3a0010a	 mov         r0, #0xA, 2
  06378	eb000000	 bl          RegOpenKeyExW
  0637c	e58d0094	 str         r0, [sp, #0x94]
  06380	e59d3094	 ldr         r3, [sp, #0x94]
  06384	e58d3010	 str         r3, [sp, #0x10]

; 1951 :                 if(dwStatus != ERROR_SUCCESS)

  06388	e59d3010	 ldr         r3, [sp, #0x10]
  0638c	e3530000	 cmp         r3, #0
  06390	0a00000e	 beq         |$LN16@OTG_Config@2|

; 1952 :                 {
; 1953 :                     DEBUGMSG(ZONE_OTG_WARN, (_T("UfnPdd_Init: OpenDeviceKey('%s') failed %u\r\n"), REG_USBFN_DRV_PATH, dwStatus));

  06394	e59f34e0	 ldr         r3, [pc, #0x4E0]
  06398	e5933440	 ldr         r3, [r3, #0x440]
  0639c	e3130901	 tst         r3, #1, 18
  063a0	0a000006	 beq         |$LN90@OTG_Config@2|
  063a4	e59d2010	 ldr         r2, [sp, #0x10]
  063a8	e59f14dc	 ldr         r1, [pc, #0x4DC]
  063ac	e59f04e0	 ldr         r0, [pc, #0x4E0]
  063b0	eb000000	 bl          NKDbgPrintfW
  063b4	e3a03001	 mov         r3, #1
  063b8	e58d3098	 str         r3, [sp, #0x98]
  063bc	ea000001	 b           |$LN91@OTG_Config@2|
  063c0		 |$LN90@OTG_Config@2|
  063c0	e3a03000	 mov         r3, #0
  063c4	e58d3098	 str         r3, [sp, #0x98]
  063c8		 |$LN91@OTG_Config@2|

; 1954 :                     goto cleanUp;

  063c8	ea000122	 b           |$LN15@OTG_Config@2|
  063cc	ea000121	 b           |$cleanUp$41464|
  063d0		 |$LN16@OTG_Config@2|

; 1955 :                 }
; 1956 : 
; 1957 :                 dwType = REG_DWORD;

  063d0	e3a03004	 mov         r3, #4
  063d4	e58d3008	 str         r3, [sp, #8]

; 1958 :                 dwSize = sizeof(m_dwbTypeConnector);

  063d8	e3a03004	 mov         r3, #4
  063dc	e58d300c	 str         r3, [sp, #0xC]

; 1959 :                 dwStatus = ::RegSetValueEx(hkDevice, REG_VBUS_CHARGE_B_TYPE_CONNECTOR, NULL, dwType, 
; 1960 :                     (LPBYTE) &m_dwbTypeConnector, dwSize);

  063e0	e59d300c	 ldr         r3, [sp, #0xC]
  063e4	e58d3004	 str         r3, [sp, #4]
  063e8	e59d30bc	 ldr         r3, [sp, #0xBC]
  063ec	e2833f66	 add         r3, r3, #0x66, 30
  063f0	e58d3000	 str         r3, [sp]
  063f4	e59d3008	 ldr         r3, [sp, #8]
  063f8	e3a02000	 mov         r2, #0
  063fc	e59f148c	 ldr         r1, [pc, #0x48C]
  06400	e59d0014	 ldr         r0, [sp, #0x14]
  06404	eb000000	 bl          RegSetValueExW
  06408	e58d009c	 str         r0, [sp, #0x9C]
  0640c	e59d309c	 ldr         r3, [sp, #0x9C]
  06410	e58d3010	 str         r3, [sp, #0x10]

; 1961 :                 if(dwStatus != ERROR_SUCCESS || dwType != REG_DWORD)

  06414	e59d3010	 ldr         r3, [sp, #0x10]
  06418	e3530000	 cmp         r3, #0
  0641c	1a000002	 bne         |$LN13@OTG_Config@2|
  06420	e59d3008	 ldr         r3, [sp, #8]
  06424	e3530004	 cmp         r3, #4
  06428	0a000011	 beq         |$LN14@OTG_Config@2|
  0642c		 |$LN13@OTG_Config@2|

; 1962 :                 {
; 1963 :                     DEBUGMSG(ZONE_OTG_WARN, (_T("UFNPDD_Init: RegQueryValueEx('%s', '%s') failed %u\r\n"),
; 1964 :                         REG_USBFN_DRV_PATH, REG_VBUS_CHARGE_B_TYPE_CONNECTOR, dwStatus));

  0642c	e59f3448	 ldr         r3, [pc, #0x448]
  06430	e5933440	 ldr         r3, [r3, #0x440]
  06434	e3130901	 tst         r3, #1, 18
  06438	0a000007	 beq         |$LN92@OTG_Config@2|
  0643c	e59d3010	 ldr         r3, [sp, #0x10]
  06440	e59f2448	 ldr         r2, [pc, #0x448]
  06444	e59f1440	 ldr         r1, [pc, #0x440]
  06448	e59f0438	 ldr         r0, [pc, #0x438]
  0644c	eb000000	 bl          NKDbgPrintfW
  06450	e3a03001	 mov         r3, #1
  06454	e58d30a0	 str         r3, [sp, #0xA0]
  06458	ea000001	 b           |$LN93@OTG_Config@2|
  0645c		 |$LN92@OTG_Config@2|
  0645c	e3a03000	 mov         r3, #0
  06460	e58d30a0	 str         r3, [sp, #0xA0]
  06464		 |$LN93@OTG_Config@2|

; 1965 :                     RegCloseKey(hkDevice);

  06464	e59d0014	 ldr         r0, [sp, #0x14]
  06468	eb000000	 bl          RegCloseKey
  0646c	ea0000f9	 b           |$LN12@OTG_Config@2|

; 1966 :                     goto cleanUp;

  06470	ea0000f8	 b           |$cleanUp$41464|
  06474		 |$LN14@OTG_Config@2|

; 1967 :                 }
; 1968 :                 RegCloseKey(hkDevice);

  06474	e59d0014	 ldr         r0, [sp, #0x14]
  06478	eb000000	 bl          RegCloseKey

; 1969 : 
; 1970 :                 m_disconnected = FALSE;

  0647c	e59d30bc	 ldr         r3, [sp, #0xBC]
  06480	e2832f63	 add         r2, r3, #0x63, 30
  06484	e3a03000	 mov         r3, #0
  06488	e5823000	 str         r3, [r2]

; 1971 :                 if (m_pOTG->pFuncs[DEVICE_MODE-1] != NULL)

  0648c	e59d30bc	 ldr         r3, [sp, #0xBC]
  06490	e2833e15	 add         r3, r3, #0x15, 28
  06494	e5933000	 ldr         r3, [r3]
  06498	e2833008	 add         r3, r3, #8
  0649c	e5933000	 ldr         r3, [r3]
  064a0	e3530000	 cmp         r3, #0
  064a4	0a00000a	 beq         |$LN11@OTG_Config@2|

; 1972 :                     m_pOTG->pFuncs[DEVICE_MODE-1]->ResetIRQ((void *)m_pOTG);

  064a8	e59d30bc	 ldr         r3, [sp, #0xBC]
  064ac	e2833e15	 add         r3, r3, #0x15, 28
  064b0	e5930000	 ldr         r0, [r3]
  064b4	e59d30bc	 ldr         r3, [sp, #0xBC]
  064b8	e2833e15	 add         r3, r3, #0x15, 28
  064bc	e5933000	 ldr         r3, [r3]
  064c0	e2833008	 add         r3, r3, #8
  064c4	e5933000	 ldr         r3, [r3]
  064c8	e5933000	 ldr         r3, [r3]
  064cc	e1a0e00f	 mov         lr, pc
  064d0	e12fff13	 bx          r3
  064d4		 |$LN11@OTG_Config@2|

; 1973 :                 /* Clear bus suspend if there are any, because after bus reset, 
; 1974 :                 immediately bus suspend is received during host->device HNP */
; 1975 :                 if(m_pOTG->intr_usb & INTRUSB_SUSPEND)

  064d4	e59d30bc	 ldr         r3, [sp, #0xBC]
  064d8	e2833e15	 add         r3, r3, #0x15, 28
  064dc	e5933000	 ldr         r3, [r3]
  064e0	e2833034	 add         r3, r3, #0x34
  064e4	e5d33000	 ldrb        r3, [r3]
  064e8	e3130001	 tst         r3, #1
  064ec	0a00000d	 beq         |$LN10@OTG_Config@2|

; 1976 :                    m_pOTG->intr_usb &= ~INTRUSB_SUSPEND;

  064f0	e59d30bc	 ldr         r3, [sp, #0xBC]
  064f4	e2833e15	 add         r3, r3, #0x15, 28
  064f8	e5933000	 ldr         r3, [r3]
  064fc	e2833034	 add         r3, r3, #0x34
  06500	e5d33000	 ldrb        r3, [r3]
  06504	e1a02003	 mov         r2, r3
  06508	e3e03001	 mvn         r3, #1
  0650c	e0021003	 and         r1, r2, r3
  06510	e59d30bc	 ldr         r3, [sp, #0xBC]
  06514	e2833e15	 add         r3, r3, #0x15, 28
  06518	e5933000	 ldr         r3, [r3]
  0651c	e2832034	 add         r2, r3, #0x34
  06520	e20130ff	 and         r3, r1, #0xFF
  06524	e5c23000	 strb        r3, [r2]
  06528		 |$LN10@OTG_Config@2|

; 1977 :             }
; 1978 :             else

  06528	ea000086	 b           |$LN9@OTG_Config@2|
  0652c		 |$LN21@OTG_Config@2|

; 1979 :             {                
; 1980 :                 DEBUGMSG(ZONE_OTG_HNP, (TEXT("Get HNP role switch to device\r\n")));                    

  0652c	e59f3348	 ldr         r3, [pc, #0x348]
  06530	e5933440	 ldr         r3, [r3, #0x440]
  06534	e3130a01	 tst         r3, #1, 20
  06538	0a000004	 beq         |$LN94@OTG_Config@2|
  0653c	e59f0340	 ldr         r0, [pc, #0x340]
  06540	eb000000	 bl          NKDbgPrintfW
  06544	e3a03001	 mov         r3, #1
  06548	e58d30a4	 str         r3, [sp, #0xA4]
  0654c	ea000001	 b           |$LN95@OTG_Config@2|
  06550		 |$LN94@OTG_Config@2|
  06550	e3a03000	 mov         r3, #0
  06554	e58d30a4	 str         r3, [sp, #0xA4]
  06558		 |$LN95@OTG_Config@2|

; 1981 :                 ResetEndPoints();

  06558	e59d30bc	 ldr         r3, [sp, #0xBC]
  0655c	e5933000	 ldr         r3, [r3]
  06560	e28330ec	 add         r3, r3, #0xEC
  06564	e59d00bc	 ldr         r0, [sp, #0xBC]
  06568	e5933000	 ldr         r3, [r3]
  0656c	e1a0e00f	 mov         lr, pc
  06570	e12fff13	 bx          r3

; 1982 :                 //DEBUGMSG(1, (TEXT("operateMode = IDLE (HNP host to device)\r\n")));
; 1983 :                 m_pOTG->operateMode = IDLE_MODE;

  06574	e59d30bc	 ldr         r3, [sp, #0xBC]
  06578	e2833e15	 add         r3, r3, #0x15, 28
  0657c	e5933000	 ldr         r3, [r3]
  06580	e2832035	 add         r2, r3, #0x35
  06584	e3a03000	 mov         r3, #0
  06588	e5c23000	 strb        r3, [r2]

; 1984 :                 m_dwStatus |= (STATUS_DISCONN_REQUEST|STATUS_WAIT_HOST_DISCONN_COMPLETE|STATUS_HNP_SESSION_INIT);

  0658c	e59d30bc	 ldr         r3, [sp, #0xBC]
  06590	e28330f8	 add         r3, r3, #0xF8
  06594	e5933000	 ldr         r3, [r3]
  06598	e3832052	 orr         r2, r3, #0x52
  0659c	e59d30bc	 ldr         r3, [sp, #0xBC]
  065a0	e28330f8	 add         r3, r3, #0xF8
  065a4	e5832000	 str         r2, [r3]

; 1985 :                 dwPrevState = m_pOTG->connect_status;

  065a8	e59d30bc	 ldr         r3, [sp, #0xBC]
  065ac	e2833e15	 add         r3, r3, #0x15, 28
  065b0	e5933000	 ldr         r3, [r3]
  065b4	e283304c	 add         r3, r3, #0x4C
  065b8	e5d33000	 ldrb        r3, [r3]
  065bc	e58d301c	 str         r3, [sp, #0x1C]

; 1986 :                 m_pOTG->connect_status &= ~CONN_CCS;

  065c0	e59d30bc	 ldr         r3, [sp, #0xBC]
  065c4	e2833e15	 add         r3, r3, #0x15, 28
  065c8	e5933000	 ldr         r3, [r3]
  065cc	e283304c	 add         r3, r3, #0x4C
  065d0	e5d33000	 ldrb        r3, [r3]
  065d4	e1a02003	 mov         r2, r3
  065d8	e3e03001	 mvn         r3, #1
  065dc	e0021003	 and         r1, r2, r3
  065e0	e59d30bc	 ldr         r3, [sp, #0xBC]
  065e4	e2833e15	 add         r3, r3, #0x15, 28
  065e8	e5933000	 ldr         r3, [r3]
  065ec	e283204c	 add         r2, r3, #0x4C
  065f0	e20130ff	 and         r3, r1, #0xFF
  065f4	e5c23000	 strb        r3, [r2]

; 1987 :                 if (dwPrevState & CONN_CCS) 

  065f8	e59d301c	 ldr         r3, [sp, #0x1C]
  065fc	e3130001	 tst         r3, #1
  06600	0a00000c	 beq         |$LN8@OTG_Config@2|

; 1988 :                     m_pOTG->connect_status |= CONN_CSC;

  06604	e59d30bc	 ldr         r3, [sp, #0xBC]
  06608	e2833e15	 add         r3, r3, #0x15, 28
  0660c	e5933000	 ldr         r3, [r3]
  06610	e283304c	 add         r3, r3, #0x4C
  06614	e5d33000	 ldrb        r3, [r3]
  06618	e3831002	 orr         r1, r3, #2
  0661c	e59d30bc	 ldr         r3, [sp, #0xBC]
  06620	e2833e15	 add         r3, r3, #0x15, 28
  06624	e5933000	 ldr         r3, [r3]
  06628	e283204c	 add         r2, r3, #0x4C
  0662c	e20130ff	 and         r3, r1, #0xFF
  06630	e5c23000	 strb        r3, [r2]

; 1989 :                 else

  06634	ea00000d	 b           |$LN7@OTG_Config@2|
  06638		 |$LN8@OTG_Config@2|

; 1990 :                     m_pOTG->connect_status &= ~CONN_CSC;

  06638	e59d30bc	 ldr         r3, [sp, #0xBC]
  0663c	e2833e15	 add         r3, r3, #0x15, 28
  06640	e5933000	 ldr         r3, [r3]
  06644	e283304c	 add         r3, r3, #0x4C
  06648	e5d33000	 ldrb        r3, [r3]
  0664c	e1a02003	 mov         r2, r3
  06650	e3e03002	 mvn         r3, #2
  06654	e0021003	 and         r1, r2, r3
  06658	e59d30bc	 ldr         r3, [sp, #0xBC]
  0665c	e2833e15	 add         r3, r3, #0x15, 28
  06660	e5933000	 ldr         r3, [r3]
  06664	e283204c	 add         r2, r3, #0x4C
  06668	e20130ff	 and         r3, r1, #0xFF
  0666c	e5c23000	 strb        r3, [r2]
  06670		 |$LN7@OTG_Config@2|

; 1991 : 
; 1992 :                 if (m_pOTG->pFuncs[HOST_MODE-1] != NULL)

  06670	e59d30bc	 ldr         r3, [sp, #0xBC]
  06674	e2833e15	 add         r3, r3, #0x15, 28
  06678	e5933000	 ldr         r3, [r3]
  0667c	e283300c	 add         r3, r3, #0xC
  06680	e5933000	 ldr         r3, [r3]
  06684	e3530000	 cmp         r3, #0
  06688	0a00000b	 beq         |$LN6@OTG_Config@2|

; 1993 :                     m_pOTG->pFuncs[HOST_MODE-1]->Disconnect((void *)m_pOTG);                                

  0668c	e59d30bc	 ldr         r3, [sp, #0xBC]
  06690	e2833e15	 add         r3, r3, #0x15, 28
  06694	e5930000	 ldr         r0, [r3]
  06698	e59d30bc	 ldr         r3, [sp, #0xBC]
  0669c	e2833e15	 add         r3, r3, #0x15, 28
  066a0	e5933000	 ldr         r3, [r3]
  066a4	e283300c	 add         r3, r3, #0xC
  066a8	e5933000	 ldr         r3, [r3]
  066ac	e2833018	 add         r3, r3, #0x18
  066b0	e5933000	 ldr         r3, [r3]
  066b4	e1a0e00f	 mov         lr, pc
  066b8	e12fff13	 bx          r3
  066bc		 |$LN6@OTG_Config@2|

; 1994 :                 m_pOTG->intr_usb &= ~INTRUSB_DISCONN;

  066bc	e59d30bc	 ldr         r3, [sp, #0xBC]
  066c0	e2833e15	 add         r3, r3, #0x15, 28
  066c4	e5933000	 ldr         r3, [r3]
  066c8	e2833034	 add         r3, r3, #0x34
  066cc	e5d33000	 ldrb        r3, [r3]
  066d0	e1a02003	 mov         r2, r3
  066d4	e3e03020	 mvn         r3, #0x20
  066d8	e0021003	 and         r1, r2, r3
  066dc	e59d30bc	 ldr         r3, [sp, #0xBC]
  066e0	e2833e15	 add         r3, r3, #0x15, 28
  066e4	e5933000	 ldr         r3, [r3]
  066e8	e2832034	 add         r2, r3, #0x34
  066ec	e20130ff	 and         r3, r1, #0xFF
  066f0	e5c23000	 strb        r3, [r2]

; 1995 : 
; 1996 :                 /* Clear bus suspend if there are any, because after bus reset, 
; 1997 :                 immediately bus suspend is received during host->device HNP */
; 1998 :                 if(m_pOTG->intr_usb & INTRUSB_SUSPEND)

  066f4	e59d30bc	 ldr         r3, [sp, #0xBC]
  066f8	e2833e15	 add         r3, r3, #0x15, 28
  066fc	e5933000	 ldr         r3, [r3]
  06700	e2833034	 add         r3, r3, #0x34
  06704	e5d33000	 ldrb        r3, [r3]
  06708	e3130001	 tst         r3, #1
  0670c	0a00000d	 beq         |$LN5@OTG_Config@2|

; 1999 :                    m_pOTG->intr_usb &= ~INTRUSB_SUSPEND;

  06710	e59d30bc	 ldr         r3, [sp, #0xBC]
  06714	e2833e15	 add         r3, r3, #0x15, 28
  06718	e5933000	 ldr         r3, [r3]
  0671c	e2833034	 add         r3, r3, #0x34
  06720	e5d33000	 ldrb        r3, [r3]
  06724	e1a02003	 mov         r2, r3
  06728	e3e03001	 mvn         r3, #1
  0672c	e0021003	 and         r1, r2, r3
  06730	e59d30bc	 ldr         r3, [sp, #0xBC]
  06734	e2833e15	 add         r3, r3, #0x15, 28
  06738	e5933000	 ldr         r3, [r3]
  0673c	e2832034	 add         r2, r3, #0x34
  06740	e20130ff	 and         r3, r1, #0xFF
  06744	e5c23000	 strb        r3, [r2]
  06748		 |$LN5@OTG_Config@2|
  06748		 |$LN9@OTG_Config@2|

; 2000 : 
; 2001 :             }
; 2002 :         }
; 2003 :         else

  06748	ea000023	 b           |$LN4@OTG_Config@2|
  0674c		 |$LN22@OTG_Config@2|

; 2004 :         {
; 2005 :             if ((m_dwStatus & STATUS_HNP_SESSION_MASK) == 0x00)

  0674c	e59d30bc	 ldr         r3, [sp, #0xBC]
  06750	e28330f8	 add         r3, r3, #0xF8
  06754	e5933000	 ldr         r3, [r3]
  06758	e3130030	 tst         r3, #0x30
  0675c	1a000013	 bne         |$LN3@OTG_Config@2|

; 2006 :                 DEBUGMSG(ZONE_OTG_INFO, (TEXT("USB Babble:DevCtl;0x%x\r\n"),INREG8(&m_pOTG->pUsbGenRegs->DevCtl)));

  06760	e59f3114	 ldr         r3, [pc, #0x114]
  06764	e5933440	 ldr         r3, [r3, #0x440]
  06768	e3130a01	 tst         r3, #1, 20
  0676c	0a00000c	 beq         |$LN96@OTG_Config@2|
  06770	e59d30bc	 ldr         r3, [sp, #0xBC]
  06774	e2833e15	 add         r3, r3, #0x15, 28
  06778	e5933000	 ldr         r3, [r3]
  0677c	e2833020	 add         r3, r3, #0x20
  06780	e5933000	 ldr         r3, [r3]
  06784	e2833060	 add         r3, r3, #0x60
  06788	e5d33000	 ldrb        r3, [r3]
  0678c	e1a01003	 mov         r1, r3
  06790	e59f00e8	 ldr         r0, [pc, #0xE8]
  06794	eb000000	 bl          NKDbgPrintfW
  06798	e3a03001	 mov         r3, #1
  0679c	e58d30a8	 str         r3, [sp, #0xA8]
  067a0	ea000001	 b           |$LN97@OTG_Config@2|
  067a4		 |$LN96@OTG_Config@2|
  067a4	e3a03000	 mov         r3, #0
  067a8	e58d30a8	 str         r3, [sp, #0xA8]
  067ac		 |$LN97@OTG_Config@2|

; 2007 :             else

  067ac	ea00000a	 b           |$LN2@OTG_Config@2|
  067b0		 |$LN3@OTG_Config@2|

; 2008 :                 DEBUGMSG(ZONE_OTG_INFO, (TEXT("Wait for disconnect complete\r\n")));

  067b0	e59f30c4	 ldr         r3, [pc, #0xC4]
  067b4	e5933440	 ldr         r3, [r3, #0x440]
  067b8	e3130a01	 tst         r3, #1, 20
  067bc	0a000004	 beq         |$LN98@OTG_Config@2|
  067c0	e59f00b0	 ldr         r0, [pc, #0xB0]
  067c4	eb000000	 bl          NKDbgPrintfW
  067c8	e3a03001	 mov         r3, #1
  067cc	e58d30ac	 str         r3, [sp, #0xAC]
  067d0	ea000001	 b           |$LN99@OTG_Config@2|
  067d4		 |$LN98@OTG_Config@2|
  067d4	e3a03000	 mov         r3, #0
  067d8	e58d30ac	 str         r3, [sp, #0xAC]
  067dc		 |$LN99@OTG_Config@2|
  067dc		 |$LN2@OTG_Config@2|
  067dc		 |$LN4@OTG_Config@2|

; 2009 :         }
; 2010 : 
; 2011 :         // renable suspend interrupt as needed
; 2012 :         if (!m_pTransceiver->SupportsTransceiverWakeWithoutClock())

  067dc	e59d30bc	 ldr         r3, [sp, #0xBC]
  067e0	e28330fc	 add         r3, r3, #0xFC
  067e4	e5932000	 ldr         r2, [r3]
  067e8	e59d30bc	 ldr         r3, [sp, #0xBC]
  067ec	e28330fc	 add         r3, r3, #0xFC
  067f0	e5930000	 ldr         r0, [r3]
  067f4	e5923000	 ldr         r3, [r2]
  067f8	e2833014	 add         r3, r3, #0x14
  067fc	e5933000	 ldr         r3, [r3]
  06800	e1a0e00f	 mov         lr, pc
  06804	e12fff13	 bx          r3
  06808	e58d00b0	 str         r0, [sp, #0xB0]
  0680c	e59d30b0	 ldr         r3, [sp, #0xB0]
  06810	e3530000	 cmp         r3, #0
  06814	1a00000f	 bne         |$LN1@OTG_Config@2|

; 2013 :             SETREG8(&m_pOTG->pUsbGenRegs->IntrUSBE, INTRUSB_SUSPEND);  

  06818	e59d30bc	 ldr         r3, [sp, #0xBC]
  0681c	e2833e15	 add         r3, r3, #0x15, 28
  06820	e5933000	 ldr         r3, [r3]
  06824	e2833020	 add         r3, r3, #0x20
  06828	e5933000	 ldr         r3, [r3]
  0682c	e283300b	 add         r3, r3, #0xB
  06830	e5d33000	 ldrb        r3, [r3]
  06834	e3833001	 orr         r3, r3, #1
  06838	e20320ff	 and         r2, r3, #0xFF
  0683c	e59d30bc	 ldr         r3, [sp, #0xBC]
  06840	e2833e15	 add         r3, r3, #0x15, 28
  06844	e5933000	 ldr         r3, [r3]
  06848	e2833020	 add         r3, r3, #0x20
  0684c	e5933000	 ldr         r3, [r3]
  06850	e283300b	 add         r3, r3, #0xB
  06854	e5c32000	 strb        r2, [r3]
  06858		 |$LN1@OTG_Config@2|
  06858		 |$LN23@OTG_Config@2|
  06858		 |$LN12@OTG_Config@2|
  06858		 |$LN15@OTG_Config@2|
  06858		 |$cleanUp$41464|

; 2014 :     }
; 2015 : cleanUp:
; 2016 :     return m_dwStatus;

  06858	e59d30bc	 ldr         r3, [sp, #0xBC]
  0685c	e28330f8	 add         r3, r3, #0xF8
  06860	e5933000	 ldr         r3, [r3]
  06864	e58d302c	 str         r3, [sp, #0x2C]

; 2017 : }

  06868	e59d002c	 ldr         r0, [sp, #0x2C]
  0686c	e28dd0b4	 add         sp, sp, #0xB4
  06870	e89d6000	 ldmia       sp, {sp, lr}
  06874	e12fff1e	 bx          lr
  06878		 |$LN103@OTG_Config@2|
  06878		 |$LN104@OTG_Config@2|
  06878	00000000	 DCD         |??_C@_1DO@HKNBEJLA@?$AAW?$AAa?$AAi?$AAt?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAd?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  0687c		 |$LN105@OTG_Config@2|
  0687c	00000000	 DCD         |dpCurSettings|
  06880		 |$LN106@OTG_Config@2|
  06880	00000000	 DCD         |??_C@_1DC@JNMODEFH@?$AAU?$AAS?$AAB?$AA?5?$AAB?$AAa?$AAb?$AAb?$AAl?$AAe?$AA?3?$AAD?$AAe?$AAv?$AAC?$AAt?$AAl?$AA?$DL?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  06884		 |$LN107@OTG_Config@2|
  06884	00000000	 DCD         |??_C@_1EA@LCAPGLNC@?$AAG?$AAe?$AAt?$AA?5?$AAH?$AAN?$AAP?$AA?5?$AAr?$AAo?$AAl?$AAe?$AA?5?$AAs?$AAw?$AAi?$AAt?$AAc?$AAh?$AA?5?$AAt?$AAo?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  06888		 |$LN108@OTG_Config@2|
  06888	00000000	 DCD         |??_C@_1GK@EDHBDMMN@?$AAU?$AAF?$AAN?$AAP?$AAD?$AAD?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAa?$AAl?$AAu?$AAe?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs@|
  0688c		 |$LN109@OTG_Config@2|
  0688c	00000000	 DCD         |??_C@_1DM@GBENJPGN@?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs?$AA?2?$AAB?$AAu?$AAi?$AAl?$AAt?$AAI?$AAn?$AA?2?$AAM?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?2?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?$AA@|
  06890		 |$LN110@OTG_Config@2|
  06890	00000000	 DCD         |??_C@_1M@CKAHONI@?$AAB?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  06894		 |$LN111@OTG_Config@2|
  06894	00000000	 DCD         |??_C@_1FK@DCFOIEJO@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAO?$AAp?$AAe?$AAn?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAK?$AAe?$AAy?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ@|
  06898		 |$LN112@OTG_Config@2|
  06898	00000000	 DCD         |??_C@_1DC@FCKIMFPM@?$AAR?$AAe?$AAs?$AAe?$AAt?$AA?3?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?$FL?$AA?$CF?$AAs?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@|
  0689c		 |$LN113@OTG_Config@2|
  0689c	00000000	 DCD         |??_C@_1BC@NMIDBOGD@?$AAA?$AA_?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA?$AA@|
  068a0		 |$LN114@OTG_Config@2|
  068a0	00000000	 DCD         |??_C@_1BC@DGAFMDAB@?$AAB?$AA_?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA?$AA@|
  068a4		 |$LN115@OTG_Config@2|
  068a4	00000000	 DCD         |??_C@_1CE@JHEGNGJM@?$AAD?$AAM?$AAA?$AA?5?$AAI?$AAN?$AAT?$AAR?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  068a8		 |$LN116@OTG_Config@2|
  068a8	00000000	 DCD         |??_C@_1CI@ECEKCAJF@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  068ac		 |$LN117@OTG_Config@2|
  068ac	00000000	 DCD         |??_C@_1DO@OACECNKO@?$AAI?$AAN?$AAT?$AAR?$AAR?$AAX?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5?$AAI?$AAN?$AAT?$AAR?$AAT?$AAX?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  068b0		 |$LN118@OTG_Config@2|
  068b0	00000000	 DCD         |??_C@_1CA@GMMLAPKI@?$AAD?$AAE?$AAV?$AAC?$AAT?$AAL?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  068b4		 |$LN119@OTG_Config@2|
  068b4	00000000	 DCD         |??_C@_1CE@MAFNCEEI@?$AAI?$AAN?$AAT?$AAR?$AA_?$AAU?$AAS?$AAB?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  068b8		 |$LN120@OTG_Config@2|
  068b8	00000000	 DCD         |??_C@_1FO@NLLIEMHG@?$AAU?$AAS?$AAB?$AA?5?$AAR?$AAe?$AAs?$AAe?$AAt?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?0?$AA?5?$AAi?$AAt?$AA?5?$AAw?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAb?$AAe?$AA?5@|
  068bc		 |$LN121@OTG_Config@2|
  068bc	00000000	 DCD         |??_C@_1FO@NFJBIGJL@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAC?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAD@|
  068c0		 |$LN122@OTG_Config@2|
  068c0	00000000	 DCD         |??_C@_1DG@ODENMGML@?$AAC?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?3?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?$FL?$AA?$CF?$AAs?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@|
  068c4		 |$LN123@OTG_Config@2|
  068c4	00000000	 DCD         |??_C@_1GG@GMJJEDKI@?$AAH?$AAN?$AAP?$AA?5?$AAs?$AAw?$AAi?$AAt?$AAc?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAn?$AAe?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAd?$AAi?$AAs?$AAc?$AAo?$AAn@|
  068c8		 |$LN124@OTG_Config@2|
  068c8	00000000	 DCD         |??_C@_1DO@OIHENEJP@?$AAU?$AAS?$AAB?$AA?5?$AAC?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAH?$AAo?$AAs?$AAt?$AA?5?$AAS?$AAi?$AAd?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  068cc		 |$M43851|

			 ENDP  ; |?OTG_ConfigISR_stage1@OMAPMHSUSBOTG@@UAAKXZ|, OMAPMHSUSBOTG::OTG_ConfigISR_stage1

	EXPORT	|??0OMAPMHSUsbClientDeviceFolder@@QAA@KPBG0KKKKPAXK0@Z| ; OMAPMHSUsbClientDeviceFolder::OMAPMHSUsbClientDeviceFolder
	EXPORT	|??_C@_1DK@MGMAHMKB@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAF?$AAo?$AAl?$AAd?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00128			 AREA	 |.pdata|, PDATA
|$T43903| DCD	|$LN9@CreateFunc|
	DCD	0x40003904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@MGMAHMKB@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAF?$AAo?$AAl?$AAd?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "F"
	DCB	0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c"
	DCB	0x0, "e", 0x0, "F", 0x0, "o", 0x0, "l", 0x0, "d", 0x0, "e"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  068cc			 AREA	 |.text|, CODE, ARM

  068cc		 |?CreateFunctionDeviceFolder@OMAPMHSUSBOTG@@UAAPAVDeviceFolder@@PBG0KKKKPAXK0@Z| PROC ; OMAPMHSUSBOTG::CreateFunctionDeviceFolder

; 2040 : {

  068cc		 |$LN9@CreateFunc|
  068cc	e1a0c00d	 mov         r12, sp
  068d0	e92d000f	 stmdb       sp!, {r0 - r3}
  068d4	e92d5000	 stmdb       sp!, {r12, lr}
  068d8	e24dd050	 sub         sp, sp, #0x50
  068dc		 |$M43900|

; 2041 :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("CreateFunctionDeviceFolder\r\n")));

  068dc	e59f30c8	 ldr         r3, [pc, #0xC8]
  068e0	e5933440	 ldr         r3, [r3, #0x440]
  068e4	e3130a02	 tst         r3, #2, 20
  068e8	0a000004	 beq         |$LN3@CreateFunc|
  068ec	e59f00b4	 ldr         r0, [pc, #0xB4]
  068f0	eb000000	 bl          NKDbgPrintfW
  068f4	e3a03001	 mov         r3, #1
  068f8	e58d3040	 str         r3, [sp, #0x40]
  068fc	ea000001	 b           |$LN4@CreateFunc|
  06900		 |$LN3@CreateFunc|
  06900	e3a03000	 mov         r3, #0
  06904	e58d3040	 str         r3, [sp, #0x40]
  06908		 |$LN4@CreateFunc|

; 2042 :     return new OMAPMHSUsbClientDeviceFolder(OMAP_USBHS_DEV_REGS_PA,
; 2043 :         lpBusName, lpTemplateRegPath, dwBusType, BusNumber, DeviceNumber,FunctionNumber, hParent, dwMaxInitReg, lpDeviceBusName);

  06908	e3a00064	 mov         r0, #0x64
  0690c	eb000000	 bl          |??2@YAPAXI@Z|
  06910	e58d0044	 str         r0, [sp, #0x44]
  06914	e59d3044	 ldr         r3, [sp, #0x44]
  06918	e58d301c	 str         r3, [sp, #0x1C]
  0691c	e59d301c	 ldr         r3, [sp, #0x1C]
  06920	e3530000	 cmp         r3, #0
  06924	0a000017	 beq         |$LN5@CreateFunc|
  06928	e59d307c	 ldr         r3, [sp, #0x7C]
  0692c	e58d3018	 str         r3, [sp, #0x18]
  06930	e59d3078	 ldr         r3, [sp, #0x78]
  06934	e58d3014	 str         r3, [sp, #0x14]
  06938	e59d3074	 ldr         r3, [sp, #0x74]
  0693c	e58d3010	 str         r3, [sp, #0x10]
  06940	e59d3070	 ldr         r3, [sp, #0x70]
  06944	e58d300c	 str         r3, [sp, #0xC]
  06948	e59d306c	 ldr         r3, [sp, #0x6C]
  0694c	e58d3008	 str         r3, [sp, #8]
  06950	e59d3068	 ldr         r3, [sp, #0x68]
  06954	e58d3004	 str         r3, [sp, #4]
  06958	e59d3064	 ldr         r3, [sp, #0x64]
  0695c	e58d3000	 str         r3, [sp]
  06960	e59d3060	 ldr         r3, [sp, #0x60]
  06964	e59d205c	 ldr         r2, [sp, #0x5C]
  06968	e3a01312	 mov         r1, #0x12, 6
  0696c	e3811aab	 orr         r1, r1, #0xAB, 20
  06970	e59d001c	 ldr         r0, [sp, #0x1C]
  06974	eb000000	 bl          |??0OMAPMHSUsbClientDeviceFolder@@QAA@KPBG0KKKKPAXK0@Z|
  06978	e58d0048	 str         r0, [sp, #0x48]
  0697c	e59d3048	 ldr         r3, [sp, #0x48]
  06980	e58d304c	 str         r3, [sp, #0x4C]
  06984	ea000001	 b           |$LN6@CreateFunc|
  06988		 |$LN5@CreateFunc|
  06988	e3a03000	 mov         r3, #0
  0698c	e58d304c	 str         r3, [sp, #0x4C]
  06990		 |$LN6@CreateFunc|
  06990	e59d304c	 ldr         r3, [sp, #0x4C]
  06994	e58d303c	 str         r3, [sp, #0x3C]

; 2044 : }

  06998	e59d003c	 ldr         r0, [sp, #0x3C]
  0699c	e28dd050	 add         sp, sp, #0x50
  069a0	e89d6000	 ldmia       sp, {sp, lr}
  069a4	e12fff1e	 bx          lr
  069a8		 |$LN10@CreateFunc|
  069a8		 |$LN11@CreateFunc|
  069a8	00000000	 DCD         |??_C@_1DK@MGMAHMKB@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAF?$AAo?$AAl?$AAd?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  069ac		 |$LN12@CreateFunc|
  069ac	00000000	 DCD         |dpCurSettings|
  069b0		 |$M43901|

			 ENDP  ; |?CreateFunctionDeviceFolder@OMAPMHSUSBOTG@@UAAPAVDeviceFolder@@PBG0KKKKPAXK0@Z|, OMAPMHSUSBOTG::CreateFunctionDeviceFolder

	EXPORT	|??_C@_1HI@FPKKLME@?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAs?$AAb?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAF?$AAo?$AAl?$AAd?$AAe?$AAr?$AA?$CI?$AA?$CF?$AAs?$AA?0@| [ DATA ] ; `string'
	EXPORT	|??_7OMAPMHSUsbClientDeviceFolder@@6B@| [ DATA ] ; OMAPMHSUsbClientDeviceFolder::`vftable'
	EXPORT	|?Init@DeviceFolder@@UAAHXZ|		; DeviceFolder::Init
	EXPORT	|?LoadDevice@OMAPMHSUsbClientDeviceFolder@@UAAHXZ| ; OMAPMHSUsbClientDeviceFolder::LoadDevice
	EXPORT	|?UnloadDevice@OMAPMHSUsbClientDeviceFolder@@UAAHXZ| ; OMAPMHSUsbClientDeviceFolder::UnloadDevice
	EXPORT	|?SetPowerState@OMAPMHSUsbClientDeviceFolder@@UAAHW4_CEDEVICE_POWER_STATE@@@Z| ; OMAPMHSUsbClientDeviceFolder::SetPowerState
	EXPORT	|?GetPowerState@DeviceFolder@@UAA?AW4_CEDEVICE_POWER_STATE@@XZ| ; DeviceFolder::GetPowerState
	IMPORT	|??0DeviceFolder@@QAA@PBG0KKKKPAXK0@Z|	; DeviceFolder::DeviceFolder
	IMPORT	|??_EOMAPMHSUsbClientDeviceFolder@@UAAPAXI@Z|, WEAK |??_GOMAPMHSUsbClientDeviceFolder@@UAAPAXI@Z| ; OMAPMHSUsbClientDeviceFolder::`vector deleting destructor', OMAPMHSUsbClientDeviceFolder::`scalar deleting destructor'
	IMPORT	|?SetConfigurationData@DeviceFolder@@UAAHPAU_CE_BUS_DEVICE_CONFIGURATION_DATA@@@Z| ; DeviceFolder::SetConfigurationData
	IMPORT	|?GetConfigurationData@DeviceFolder@@UAAHPAU_CE_BUS_DEVICE_CONFIGURATION_DATA@@@Z| ; DeviceFolder::GetConfigurationData
	IMPORT	|?DebugZoneChk@DeviceFolder@@UAAKK@Z|	; DeviceFolder::DebugZoneChk
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbotg\otg.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T43923| DCD	|$LN7@OMAPMHSUsb|
	DCD	0x40003504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@FPKKLME@?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAs?$AAb?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAF?$AAo?$AAl?$AAd?$AAe?$AAr?$AA?$CI?$AA?$CF?$AAs?$AA?0@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "M", 0x0, "H", 0x0, "S"
	DCB	0x0, "U", 0x0, "s", 0x0, "b", 0x0, "C", 0x0, "l", 0x0, "i"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, "F", 0x0, "o", 0x0, "l"
	DCB	0x0, "d", 0x0, "e", 0x0, "r", 0x0, "(", 0x0, "%", 0x0, "s"
	DCB	0x0, ",", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, ",", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ",", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "."
	DCB	0x0, ".", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7OMAPMHSUsbClientDeviceFolder@@6B@| DCD |??_EOMAPMHSUsbClientDeviceFolder@@UAAPAXI@Z| ; OMAPMHSUsbClientDeviceFolder::`vftable'
	DCD	|?Init@DeviceFolder@@UAAHXZ|
	DCD	|?LoadDevice@OMAPMHSUsbClientDeviceFolder@@UAAHXZ|
	DCD	|?UnloadDevice@OMAPMHSUsbClientDeviceFolder@@UAAHXZ|
	DCD	|?SetPowerState@OMAPMHSUsbClientDeviceFolder@@UAAHW4_CEDEVICE_POWER_STATE@@@Z|
	DCD	|?GetPowerState@DeviceFolder@@UAA?AW4_CEDEVICE_POWER_STATE@@XZ|
	DCD	|?SetConfigurationData@DeviceFolder@@UAAHPAU_CE_BUS_DEVICE_CONFIGURATION_DATA@@@Z|
	DCD	|?GetConfigurationData@DeviceFolder@@UAAHPAU_CE_BUS_DEVICE_CONFIGURATION_DATA@@@Z|
	DCD	|?DebugZoneChk@DeviceFolder@@UAAKK@Z|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0OMAPMHSUsbClientDeviceFolder@@QAA@KPBG0KKKKPAXK0@Z| PROC ; OMAPMHSUsbClientDeviceFolder::OMAPMHSUsbClientDeviceFolder

; 195  :     {

  00000		 |$LN7@OMAPMHSUsb|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd048	 sub         sp, sp, #0x48
  00010		 |$M43920|
  00010	e59d3078	 ldr         r3, [sp, #0x78]
  00014	e58d3014	 str         r3, [sp, #0x14]
  00018	e59d3074	 ldr         r3, [sp, #0x74]
  0001c	e58d3010	 str         r3, [sp, #0x10]
  00020	e59d3070	 ldr         r3, [sp, #0x70]
  00024	e58d300c	 str         r3, [sp, #0xC]
  00028	e59d306c	 ldr         r3, [sp, #0x6C]
  0002c	e58d3008	 str         r3, [sp, #8]
  00030	e59d3068	 ldr         r3, [sp, #0x68]
  00034	e58d3004	 str         r3, [sp, #4]
  00038	e59d3064	 ldr         r3, [sp, #0x64]
  0003c	e58d3000	 str         r3, [sp]
  00040	e59d3060	 ldr         r3, [sp, #0x60]
  00044	e59d205c	 ldr         r2, [sp, #0x5C]
  00048	e59d1058	 ldr         r1, [sp, #0x58]
  0004c	e59d0050	 ldr         r0, [sp, #0x50]
  00050	eb000000	 bl          |??0DeviceFolder@@QAA@PBG0KKKKPAXK0@Z|
  00054	e58d0040	 str         r0, [sp, #0x40]
  00058	e59f2070	 ldr         r2, [pc, #0x70]
  0005c	e59d3050	 ldr         r3, [sp, #0x50]
  00060	e5832000	 str         r2, [r3]
  00064	e59d3050	 ldr         r3, [sp, #0x50]
  00068	e2832060	 add         r2, r3, #0x60
  0006c	e59d3054	 ldr         r3, [sp, #0x54]
  00070	e5823000	 str         r3, [r2]

; 196  :         DEBUGMSG(1, (TEXT("OMAPMHSUsbClientDeviceFolder(%s, %s, 0x%x, %d, %d, %d ...\r\n"),

  00074	e59d306c	 ldr         r3, [sp, #0x6C]
  00078	e58d3008	 str         r3, [sp, #8]
  0007c	e59d3068	 ldr         r3, [sp, #0x68]
  00080	e58d3004	 str         r3, [sp, #4]
  00084	e59d3064	 ldr         r3, [sp, #0x64]
  00088	e58d3000	 str         r3, [sp]
  0008c	e59d3060	 ldr         r3, [sp, #0x60]
  00090	e59d205c	 ldr         r2, [sp, #0x5C]
  00094	e59d1058	 ldr         r1, [sp, #0x58]
  00098	e59f002c	 ldr         r0, [pc, #0x2C]
  0009c	eb000000	 bl          NKDbgPrintfW
  000a0	e3a03001	 mov         r3, #1
  000a4	e58d3044	 str         r3, [sp, #0x44]
  000a8	ea000001	 b           |$LN4@OMAPMHSUsb|
  000ac	e3a03000	 mov         r3, #0
  000b0	e58d3044	 str         r3, [sp, #0x44]
  000b4		 |$LN4@OMAPMHSUsb|

; 197  :             lpBusName, lpTemplateRegPath, dwBusType, BusNumber, DeviceNumber, FunctionNumber));
; 198  :     };

  000b4	e59d3050	 ldr         r3, [sp, #0x50]
  000b8	e58d303c	 str         r3, [sp, #0x3C]
  000bc	e59d003c	 ldr         r0, [sp, #0x3C]
  000c0	e28dd048	 add         sp, sp, #0x48
  000c4	e89d6000	 ldmia       sp, {sp, lr}
  000c8	e12fff1e	 bx          lr
  000cc		 |$LN8@OMAPMHSUsb|
  000cc		 |$LN9@OMAPMHSUsb|
  000cc	00000000	 DCD         |??_C@_1HI@FPKKLME@?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAs?$AAb?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAF?$AAo?$AAl?$AAd?$AAe?$AAr?$AA?$CI?$AA?$CF?$AAs?$AA?0@|
  000d0		 |$LN10@OMAPMHSUsb|
  000d0	00000000	 DCD         |??_7OMAPMHSUsbClientDeviceFolder@@6B@|
  000d4		 |$M43921|

			 ENDP  ; |??0OMAPMHSUsbClientDeviceFolder@@QAA@KPBG0KKKKPAXK0@Z|, OMAPMHSUsbClientDeviceFolder::OMAPMHSUsbClientDeviceFolder

; File c:\wince600\public\common\oak\inc\defbus.h

  00000			 AREA	 |.pdata|, PDATA
|$T43936| DCD	|$LN7@Init@4|
	DCD	0x40001404
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Init@DeviceFolder@@UAAHXZ| PROC	; DeviceFolder::Init

; 78   :     virtual BOOL Init() { return (m_dwInitRegArray != NULL); }

  00000		 |$LN7@Init@4|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M43933|
  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e283304c	 add         r3, r3, #0x4C
  00018	e5933000	 ldr         r3, [r3]
  0001c	e3530000	 cmp         r3, #0
  00020	0a000002	 beq         |$LN3@Init@4|
  00024	e3a03001	 mov         r3, #1
  00028	e58d3004	 str         r3, [sp, #4]
  0002c	ea000001	 b           |$LN4@Init@4|
  00030		 |$LN3@Init@4|
  00030	e3a03000	 mov         r3, #0
  00034	e58d3004	 str         r3, [sp, #4]
  00038		 |$LN4@Init@4|
  00038	e59d3004	 ldr         r3, [sp, #4]
  0003c	e58d3000	 str         r3, [sp]
  00040	e59d0000	 ldr         r0, [sp]
  00044	e28dd008	 add         sp, sp, #8
  00048	e89d6000	 ldmia       sp, {sp, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M43934|

			 ENDP  ; |?Init@DeviceFolder@@UAAHXZ|, DeviceFolder::Init


  00000			 AREA	 |.pdata|, PDATA
|$T43944| DCD	|$LN5@GetPowerSt|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPowerState@DeviceFolder@@UAA?AW4_CEDEVICE_POWER_STATE@@XZ| PROC ; DeviceFolder::GetPowerState

; 93   :     virtual CEDEVICE_POWER_STATE  GetPowerState() { return m_CurPowerState; };

  00000		 |$LN5@GetPowerSt|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M43941|
  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e2833020	 add         r3, r3, #0x20
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M43942|

			 ENDP  ; |?GetPowerState@DeviceFolder@@UAA?AW4_CEDEVICE_POWER_STATE@@XZ|, DeviceFolder::GetPowerState

	IMPORT	|?LoadDevice@DeviceFolder@@UAAHXZ|	; DeviceFolder::LoadDevice
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbotg\otg.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T43952| DCD	|$LN6@LoadDevice|
	DCD	0x40002204
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?LoadDevice@OMAPMHSUsbClientDeviceFolder@@UAAHXZ| PROC ; OMAPMHSUsbClientDeviceFolder::LoadDevice

; 206  :     {

  00000		 |$LN6@LoadDevice|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M43949|

; 207  :         SetPowerState(D0);

  00010	e3a01000	 mov         r1, #0
  00014	e59d3014	 ldr         r3, [sp, #0x14]
  00018	e5933000	 ldr         r3, [r3]
  0001c	e2833010	 add         r3, r3, #0x10
  00020	e59d0014	 ldr         r0, [sp, #0x14]
  00024	e5933000	 ldr         r3, [r3]
  00028	e1a0e00f	 mov         lr, pc
  0002c	e12fff13	 bx          r3

; 208  :         BOOL bReturn = DeviceFolder::LoadDevice();

  00030	e59d0014	 ldr         r0, [sp, #0x14]
  00034	eb000000	 bl          |?LoadDevice@DeviceFolder@@UAAHXZ|
  00038	e58d0008	 str         r0, [sp, #8]
  0003c	e59d3008	 ldr         r3, [sp, #8]
  00040	e58d3000	 str         r3, [sp]

; 209  :         if (!bReturn) 

  00044	e59d3000	 ldr         r3, [sp]
  00048	e3530000	 cmp         r3, #0
  0004c	1a000007	 bne         |$LN1@LoadDevice|

; 210  :         { 
; 211  :             // Loading Fails
; 212  :             SetPowerState(D4);

  00050	e3a01004	 mov         r1, #4
  00054	e59d3014	 ldr         r3, [sp, #0x14]
  00058	e5933000	 ldr         r3, [r3]
  0005c	e2833010	 add         r3, r3, #0x10
  00060	e59d0014	 ldr         r0, [sp, #0x14]
  00064	e5933000	 ldr         r3, [r3]
  00068	e1a0e00f	 mov         lr, pc
  0006c	e12fff13	 bx          r3
  00070		 |$LN1@LoadDevice|

; 213  :         }
; 214  :         return bReturn;

  00070	e59d3000	 ldr         r3, [sp]
  00074	e58d3004	 str         r3, [sp, #4]

; 215  :     }

  00078	e59d0004	 ldr         r0, [sp, #4]
  0007c	e28dd00c	 add         sp, sp, #0xC
  00080	e89d6000	 ldmia       sp, {sp, lr}
  00084	e12fff1e	 bx          lr
  00088		 |$M43950|

			 ENDP  ; |?LoadDevice@OMAPMHSUsbClientDeviceFolder@@UAAHXZ|, OMAPMHSUsbClientDeviceFolder::LoadDevice

	IMPORT	|?UnloadDevice@DeviceFolder@@UAAHXZ|	; DeviceFolder::UnloadDevice

  00000			 AREA	 |.pdata|, PDATA
|$T43960| DCD	|$LN6@UnloadDevi|
	DCD	0x40001a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UnloadDevice@OMAPMHSUsbClientDeviceFolder@@UAAHXZ| PROC ; OMAPMHSUsbClientDeviceFolder::UnloadDevice

; 218  :     {

  00000		 |$LN6@UnloadDevi|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M43957|

; 219  :         BOOL bReturn = DeviceFolder::UnloadDevice();

  00010	e59d0014	 ldr         r0, [sp, #0x14]
  00014	eb000000	 bl          |?UnloadDevice@DeviceFolder@@UAAHXZ|
  00018	e58d0008	 str         r0, [sp, #8]
  0001c	e59d3008	 ldr         r3, [sp, #8]
  00020	e58d3000	 str         r3, [sp]

; 220  :         if (bReturn) 

  00024	e59d3000	 ldr         r3, [sp]
  00028	e3530000	 cmp         r3, #0
  0002c	0a000007	 beq         |$LN1@UnloadDevi|

; 221  :         { 
; 222  :             // Unloading Success.
; 223  :             SetPowerState(D4);

  00030	e3a01004	 mov         r1, #4
  00034	e59d3014	 ldr         r3, [sp, #0x14]
  00038	e5933000	 ldr         r3, [r3]
  0003c	e2833010	 add         r3, r3, #0x10
  00040	e59d0014	 ldr         r0, [sp, #0x14]
  00044	e5933000	 ldr         r3, [r3]
  00048	e1a0e00f	 mov         lr, pc
  0004c	e12fff13	 bx          r3
  00050		 |$LN1@UnloadDevi|

; 224  :         }
; 225  :         return bReturn;

  00050	e59d3000	 ldr         r3, [sp]
  00054	e58d3004	 str         r3, [sp, #4]

; 226  :     }

  00058	e59d0004	 ldr         r0, [sp, #4]
  0005c	e28dd00c	 add         sp, sp, #0xC
  00060	e89d6000	 ldmia       sp, {sp, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$M43958|

			 ENDP  ; |?UnloadDevice@OMAPMHSUsbClientDeviceFolder@@UAAHXZ|, OMAPMHSUsbClientDeviceFolder::UnloadDevice

	EXPORT	|?Unlock@CLockObject@@QAAXXZ|		; CLockObject::Unlock
	EXPORT	|?Lock@CLockObject@@QAAXXZ|		; CLockObject::Lock

  00000			 AREA	 |.pdata|, PDATA
|$T43968| DCD	|$LN11@SetPowerSt|
	DCD	0x40001404
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetPowerState@OMAPMHSUsbClientDeviceFolder@@UAAHW4_CEDEVICE_POWER_STATE@@@Z| PROC ; OMAPMHSUsbClientDeviceFolder::SetPowerState

; 229  :     {

  00000		 |$LN11@SetPowerSt|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M43965|

; 230  :         Lock();

  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e283000c	 add         r0, r3, #0xC
  00018	eb000000	 bl          |?Lock@CLockObject@@QAAXXZ|

; 231  :         m_CurPowerState = newPowerState;

  0001c	e59d300c	 ldr         r3, [sp, #0xC]
  00020	e2832020	 add         r2, r3, #0x20
  00024	e59d3010	 ldr         r3, [sp, #0x10]
  00028	e5823000	 str         r3, [r2]

; 232  :         // Should put device into idle according to m_dwDevicePhysAddr
; 233  :         switch (m_CurPowerState) {
; 234  :         case D0:
; 235  :         case D1:
; 236  :         case D2:
; 237  :             // We may want to disable host or function idle.
; 238  :             break;
; 239  :         }
; 240  : 
; 241  :         switch (m_CurPowerState) {
; 242  :         case D3:
; 243  :         case D4:
; 244  :             // We may want to enable USB function idle.
; 245  :             break;
; 246  :         }
; 247  :         Unlock();

  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e283000c	 add         r0, r3, #0xC
  00034	eb000000	 bl          |?Unlock@CLockObject@@QAAXXZ|

; 248  :         return TRUE;

  00038	e3a03001	 mov         r3, #1
  0003c	e58d3000	 str         r3, [sp]

; 249  :     }

  00040	e59d0000	 ldr         r0, [sp]
  00044	e28dd004	 add         sp, sp, #4
  00048	e89d6000	 ldmia       sp, {sp, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M43966|

			 ENDP  ; |?SetPowerState@OMAPMHSUsbClientDeviceFolder@@UAAHW4_CEDEVICE_POWER_STATE@@@Z|, OMAPMHSUsbClientDeviceFolder::SetPowerState

; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T43975| DCD	|$LN5@Lock|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Lock@CLockObject@@QAAXXZ| PROC	; CLockObject::Lock

; 45   :     {

  00000		 |$LN5@Lock|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M43972|

; 46   :         EnterCriticalSection( &m_CSection );

  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          EnterCriticalSection

; 47   :     };

  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M43973|

			 ENDP  ; |?Lock@CLockObject@@QAAXXZ|, CLockObject::Lock


  00000			 AREA	 |.pdata|, PDATA
|$T43982| DCD	|$LN5@Unlock|
	DCD	0x40000703
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Unlock@CLockObject@@QAAXXZ| PROC	; CLockObject::Unlock

; 49   :     {

  00000		 |$LN5@Unlock|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M43979|

; 50   :         LeaveCriticalSection( &m_CSection );

  0000c	e59d0008	 ldr         r0, [sp, #8]
  00010	eb000000	 bl          LeaveCriticalSection

; 51   :     };

  00014	e89d6000	 ldmia       sp, {sp, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M43980|

			 ENDP  ; |?Unlock@CLockObject@@QAAXXZ|, CLockObject::Unlock

	EXPORT	|??1OMAPMHSUsbClientDeviceFolder@@UAA@XZ| ; OMAPMHSUsbClientDeviceFolder::~OMAPMHSUsbClientDeviceFolder

  00000			 AREA	 |.pdata|, PDATA
|$T43990| DCD	|$LN6@scalar@4|
	DCD	0x40001104
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GOMAPMHSUsbClientDeviceFolder@@UAAPAXI@Z| PROC ; OMAPMHSUsbClientDeviceFolder::`scalar deleting destructor'
  00000		 |$LN6@scalar@4|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M43987|
  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |??1OMAPMHSUsbClientDeviceFolder@@UAA@XZ|
  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e3130001	 tst         r3, #1
  00020	0a000001	 beq         |$LN1@scalar@4|
  00024	e59d000c	 ldr         r0, [sp, #0xC]
  00028	eb000000	 bl          |??3@YAXPAX@Z|
  0002c		 |$LN1@scalar@4|
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e58d3000	 str         r3, [sp]
  00034	e59d0000	 ldr         r0, [sp]
  00038	e28dd004	 add         sp, sp, #4
  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M43988|

			 ENDP  ; |??_GOMAPMHSUsbClientDeviceFolder@@UAAPAXI@Z|, OMAPMHSUsbClientDeviceFolder::`scalar deleting destructor'

	IMPORT	|??1DeviceFolder@@UAA@XZ|		; DeviceFolder::~DeviceFolder
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbotg\otg.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T43997| DCD	|$LN5@OMAPMHSUsb@2|
	DCD	0x40000e03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1OMAPMHSUsbClientDeviceFolder@@UAA@XZ| PROC ; OMAPMHSUsbClientDeviceFolder::~OMAPMHSUsbClientDeviceFolder

; 201  :     {

  00000		 |$LN5@OMAPMHSUsb@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M43994|
  0000c	e59f2020	 ldr         r2, [pc, #0x20]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e5832000	 str         r2, [r3]

; 202  :         SetPowerState(D4);

  00018	e3a01004	 mov         r1, #4
  0001c	e59d0008	 ldr         r0, [sp, #8]
  00020	eb000000	 bl          |?SetPowerState@OMAPMHSUsbClientDeviceFolder@@UAAHW4_CEDEVICE_POWER_STATE@@@Z|

; 203  :     };

  00024	e59d0008	 ldr         r0, [sp, #8]
  00028	eb000000	 bl          |??1DeviceFolder@@UAA@XZ|
  0002c	e89d6000	 ldmia       sp, {sp, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$LN6@OMAPMHSUsb@2|
  00034		 |$LN7@OMAPMHSUsb@2|
  00034	00000000	 DCD         |??_7OMAPMHSUsbClientDeviceFolder@@6B@|
  00038		 |$M43995|

			 ENDP  ; |??1OMAPMHSUsbClientDeviceFolder@@UAA@XZ|, OMAPMHSUsbClientDeviceFolder::~OMAPMHSUsbClientDeviceFolder

	EXPORT	|??_C@_1DC@NOPCCLFJ@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAH?$AAo?$AAs?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAF?$AAo?$AAl?$AAd?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00130			 AREA	 |.pdata|, PDATA
|$T44019| DCD	|$LN9@CreateHost|
	DCD	0x40003904
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbotg\otg.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@NOPCCLFJ@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAH?$AAo?$AAs?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAF?$AAo?$AAl?$AAd?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "H"
	DCB	0x0, "o", 0x0, "s", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, "F", 0x0, "o", 0x0, "l"
	DCB	0x0, "d", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  069b0			 AREA	 |.text|, CODE, ARM

  069b0		 |?CreateHostDeviceFolder@OMAPMHSUSBOTG@@UAAPAVDeviceFolder@@PBG0KKKKPAXK0@Z| PROC ; OMAPMHSUSBOTG::CreateHostDeviceFolder

; 2068 : {

  069b0		 |$LN9@CreateHost|
  069b0	e1a0c00d	 mov         r12, sp
  069b4	e92d000f	 stmdb       sp!, {r0 - r3}
  069b8	e92d5000	 stmdb       sp!, {r12, lr}
  069bc	e24dd050	 sub         sp, sp, #0x50
  069c0		 |$M44016|

; 2069 :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("CreateHostDeviceFolder\r\n")));

  069c0	e59f30c8	 ldr         r3, [pc, #0xC8]
  069c4	e5933440	 ldr         r3, [r3, #0x440]
  069c8	e3130a02	 tst         r3, #2, 20
  069cc	0a000004	 beq         |$LN3@CreateHost|
  069d0	e59f00b4	 ldr         r0, [pc, #0xB4]
  069d4	eb000000	 bl          NKDbgPrintfW
  069d8	e3a03001	 mov         r3, #1
  069dc	e58d3040	 str         r3, [sp, #0x40]
  069e0	ea000001	 b           |$LN4@CreateHost|
  069e4		 |$LN3@CreateHost|
  069e4	e3a03000	 mov         r3, #0
  069e8	e58d3040	 str         r3, [sp, #0x40]
  069ec		 |$LN4@CreateHost|

; 2070 :     return new OMAPMHSUsbClientDeviceFolder(OMAP_USBHS_HOST_REGS_PA,
; 2071 :         lpBusName, lpTemplateRegPath, dwBusType, BusNumber, DeviceNumber,FunctionNumber, hParent, dwMaxInitReg, lpDeviceBusName);

  069ec	e3a00064	 mov         r0, #0x64
  069f0	eb000000	 bl          |??2@YAPAXI@Z|
  069f4	e58d0044	 str         r0, [sp, #0x44]
  069f8	e59d3044	 ldr         r3, [sp, #0x44]
  069fc	e58d301c	 str         r3, [sp, #0x1C]
  06a00	e59d301c	 ldr         r3, [sp, #0x1C]
  06a04	e3530000	 cmp         r3, #0
  06a08	0a000017	 beq         |$LN5@CreateHost|
  06a0c	e59d307c	 ldr         r3, [sp, #0x7C]
  06a10	e58d3018	 str         r3, [sp, #0x18]
  06a14	e59d3078	 ldr         r3, [sp, #0x78]
  06a18	e58d3014	 str         r3, [sp, #0x14]
  06a1c	e59d3074	 ldr         r3, [sp, #0x74]
  06a20	e58d3010	 str         r3, [sp, #0x10]
  06a24	e59d3070	 ldr         r3, [sp, #0x70]
  06a28	e58d300c	 str         r3, [sp, #0xC]
  06a2c	e59d306c	 ldr         r3, [sp, #0x6C]
  06a30	e58d3008	 str         r3, [sp, #8]
  06a34	e59d3068	 ldr         r3, [sp, #0x68]
  06a38	e58d3004	 str         r3, [sp, #4]
  06a3c	e59d3064	 ldr         r3, [sp, #0x64]
  06a40	e58d3000	 str         r3, [sp]
  06a44	e59d3060	 ldr         r3, [sp, #0x60]
  06a48	e59d205c	 ldr         r2, [sp, #0x5C]
  06a4c	e3a01312	 mov         r1, #0x12, 6
  06a50	e3811aab	 orr         r1, r1, #0xAB, 20
  06a54	e59d001c	 ldr         r0, [sp, #0x1C]
  06a58	eb000000	 bl          |??0OMAPMHSUsbClientDeviceFolder@@QAA@KPBG0KKKKPAXK0@Z|
  06a5c	e58d0048	 str         r0, [sp, #0x48]
  06a60	e59d3048	 ldr         r3, [sp, #0x48]
  06a64	e58d304c	 str         r3, [sp, #0x4C]
  06a68	ea000001	 b           |$LN6@CreateHost|
  06a6c		 |$LN5@CreateHost|
  06a6c	e3a03000	 mov         r3, #0
  06a70	e58d304c	 str         r3, [sp, #0x4C]
  06a74		 |$LN6@CreateHost|
  06a74	e59d304c	 ldr         r3, [sp, #0x4C]
  06a78	e58d303c	 str         r3, [sp, #0x3C]

; 2072 : }

  06a7c	e59d003c	 ldr         r0, [sp, #0x3C]
  06a80	e28dd050	 add         sp, sp, #0x50
  06a84	e89d6000	 ldmia       sp, {sp, lr}
  06a88	e12fff1e	 bx          lr
  06a8c		 |$LN10@CreateHost|
  06a8c		 |$LN11@CreateHost|
  06a8c	00000000	 DCD         |??_C@_1DC@NOPCCLFJ@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAH?$AAo?$AAs?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAF?$AAo?$AAl?$AAd?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  06a90		 |$LN12@CreateHost|
  06a90	00000000	 DCD         |dpCurSettings|
  06a94		 |$M44017|

			 ENDP  ; |?CreateHostDeviceFolder@OMAPMHSUSBOTG@@UAAPAVDeviceFolder@@PBG0KKKKPAXK0@Z|, OMAPMHSUSBOTG::CreateHostDeviceFolder


  00138			 AREA	 |.pdata|, PDATA
|$T44028| DCD	|$LN9@EnableSusp|
	DCD	0x40002d04
; Function compile flags: /Odtp

  06a94			 AREA	 |.text|, CODE, ARM

  06a94		 |?EnableSuspend@OMAPMHSUSBOTG@@UAAHH@Z| PROC ; OMAPMHSUSBOTG::EnableSuspend

; 2087 : {

  06a94		 |$LN9@EnableSusp|
  06a94	e1a0c00d	 mov         r12, sp
  06a98	e92d0003	 stmdb       sp!, {r0, r1}
  06a9c	e92d5000	 stmdb       sp!, {r12, lr}
  06aa0	e24dd004	 sub         sp, sp, #4
  06aa4		 |$M44025|

; 2088 :     if (fEnable)

  06aa4	e59d3010	 ldr         r3, [sp, #0x10]
  06aa8	e3530000	 cmp         r3, #0
  06aac	0a000004	 beq         |$LN4@EnableSusp|

; 2089 :     {
; 2090 :         if (!m_bEnableSuspend)
; 2091 :         { 
; 2092 : 		  //PCSP_MUSB_GEN_REGS pGen = m_pOTG->pUsbGenRegs;
; 2093 :           //Keep the transceiver on during system suspend and when a USB device is attached
; 2094 :           //SETREG8(&pGen->Power, POWER_EN_SUSPENDM);       
; 2095 :         }
; 2096 :         m_bEnableSuspend = TRUE;

  06ab0	e59d300c	 ldr         r3, [sp, #0xC]
  06ab4	e2832f5a	 add         r2, r3, #0x5A, 30
  06ab8	e3a03001	 mov         r3, #1
  06abc	e5823000	 str         r3, [r2]

; 2097 :     }
; 2098 :     else

  06ac0	ea00001a	 b           |$LN2@EnableSusp|
  06ac4		 |$LN4@EnableSusp|

; 2099 :     {
; 2100 :         if (m_bEnableSuspend)

  06ac4	e59d300c	 ldr         r3, [sp, #0xC]
  06ac8	e2833f5a	 add         r3, r3, #0x5A, 30
  06acc	e5933000	 ldr         r3, [r3]
  06ad0	e3530000	 cmp         r3, #0
  06ad4	0a000011	 beq         |$LN1@EnableSusp|

; 2101 :         {
; 2102 :           CLRREG8(&m_pOTG->pUsbGenRegs->Power, POWER_EN_SUSPENDM);

  06ad8	e59d300c	 ldr         r3, [sp, #0xC]
  06adc	e2833e15	 add         r3, r3, #0x15, 28
  06ae0	e5933000	 ldr         r3, [r3]
  06ae4	e2833020	 add         r3, r3, #0x20
  06ae8	e5933000	 ldr         r3, [r3]
  06aec	e2833001	 add         r3, r3, #1
  06af0	e5d33000	 ldrb        r3, [r3]
  06af4	e1a02003	 mov         r2, r3
  06af8	e3e03001	 mvn         r3, #1
  06afc	e0023003	 and         r3, r2, r3
  06b00	e20320ff	 and         r2, r3, #0xFF
  06b04	e59d300c	 ldr         r3, [sp, #0xC]
  06b08	e2833e15	 add         r3, r3, #0x15, 28
  06b0c	e5933000	 ldr         r3, [r3]
  06b10	e2833020	 add         r3, r3, #0x20
  06b14	e5933000	 ldr         r3, [r3]
  06b18	e2833001	 add         r3, r3, #1
  06b1c	e5c32000	 strb        r2, [r3]
  06b20		 |$LN1@EnableSusp|

; 2103 :         }
; 2104 :         m_bEnableSuspend = FALSE;

  06b20	e59d300c	 ldr         r3, [sp, #0xC]
  06b24	e2832f5a	 add         r2, r3, #0x5A, 30
  06b28	e3a03000	 mov         r3, #0
  06b2c	e5823000	 str         r3, [r2]
  06b30		 |$LN2@EnableSusp|

; 2105 :     }
; 2106 :     return TRUE;

  06b30	e3a03001	 mov         r3, #1
  06b34	e58d3000	 str         r3, [sp]

; 2107 : }

  06b38	e59d0000	 ldr         r0, [sp]
  06b3c	e28dd004	 add         sp, sp, #4
  06b40	e89d6000	 ldmia       sp, {sp, lr}
  06b44	e12fff1e	 bx          lr
  06b48		 |$M44026|

			 ENDP  ; |?EnableSuspend@OMAPMHSUSBOTG@@UAAHH@Z|, OMAPMHSUSBOTG::EnableSuspend

	EXPORT	|??_C@_1CA@MGJHBELE@?$AA?9?$AAS?$AAt?$AAo?$AAp?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@FECLMJFB@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?$CD?$AA?$CD?$AA?$CD?$AAS?$AAt?$AAo?$AAp?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?3?$AA?5?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAW?$AAa?$AAk?$AAe?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@MABNJEHH@?$AAO?$AAT?$AAG?$AA?5?$AAS?$AAy?$AAs?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@IPNIADIL@?$AA?$CL?$AAS?$AAt?$AAo?$AAp?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00140			 AREA	 |.pdata|, PDATA
|$T44046| DCD	|$LN20@StopUSBClo|
	DCD	0x4000c004

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@MGJHBELE@?$AA?9?$AAS?$AAt?$AAo?$AAp?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "S", 0x0, "t", 0x0, "o", 0x0, "p", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@FECLMJFB@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?$CD?$AA?$CD?$AA?$CD?$AAS?$AAt?$AAo?$AAp?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?3?$AA?5?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAW?$AAa?$AAk?$AAe?$AAu@| DCB "*"
	DCB	0x0, "*", 0x0, "*", 0x0, "#", 0x0, "#", 0x0, "#", 0x0, "S"
	DCB	0x0, "t", 0x0, "o", 0x0, "p", 0x0, "U", 0x0, "S", 0x0, "B"
	DCB	0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, ":"
	DCB	0x0, " ", 0x0, " ", 0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, "W", 0x0, "a", 0x0, "k", 0x0, "e"
	DCB	0x0, "u", 0x0, "p", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "("
	DCB	0x0, "T", 0x0, "R", 0x0, "U", 0x0, "E", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@MABNJEHH@?$AAO?$AAT?$AAG?$AA?5?$AAS?$AAy?$AAs?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, " ", 0x0, "S", 0x0, "y", 0x0, "s"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "f", 0x0, "i", 0x0, "g"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@IPNIADIL@?$AA?$CL?$AAS?$AAt?$AAo?$AAp?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "S", 0x0, "t", 0x0, "o", 0x0, "p", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  06b48			 AREA	 |.text|, CODE, ARM

  06b48		 |?StopUSBClock@OMAPMHSUSBOTG@@UAAHXZ| PROC ; OMAPMHSUSBOTG::StopUSBClock

; 2120 : {

  06b48		 |$LN20@StopUSBClo|
  06b48	e1a0c00d	 mov         r12, sp
  06b4c	e92d0001	 stmdb       sp!, {r0}
  06b50	e92d5000	 stmdb       sp!, {r12, lr}
  06b54	e24dd020	 sub         sp, sp, #0x20
  06b58		 |$M44043|

; 2121 :     PCSP_MUSB_OTG_REGS pOtg;    
; 2122 : 
; 2123 :     //DWORD *pSysControlRegs;
; 2124 :     // Configure the rest of the stuff:    
; 2125 :     EnterCriticalSection(&m_csUSBClock);        

  06b58	e59d3028	 ldr         r3, [sp, #0x28]
  06b5c	e2830f49	 add         r0, r3, #0x49, 30
  06b60	eb000000	 bl          EnterCriticalSection

; 2126 : 
; 2127 :     if (m_bUSBClockEnable == FALSE)

  06b64	e59d3028	 ldr         r3, [sp, #0x28]
  06b68	e2833f57	 add         r3, r3, #0x57, 30
  06b6c	e5933000	 ldr         r3, [r3]
  06b70	e3530000	 cmp         r3, #0
  06b74	1a000005	 bne         |$LN3@StopUSBClo|

; 2128 :     {
; 2129 :         LeaveCriticalSection(&m_csUSBClock);

  06b78	e59d3028	 ldr         r3, [sp, #0x28]
  06b7c	e2830f49	 add         r0, r3, #0x49, 30
  06b80	eb000000	 bl          LeaveCriticalSection

; 2130 :         return FALSE;

  06b84	e3a03000	 mov         r3, #0
  06b88	e58d3004	 str         r3, [sp, #4]
  06b8c	ea0000a4	 b           |$LN4@StopUSBClo|
  06b90		 |$LN3@StopUSBClo|

; 2131 :     }
; 2132 : 
; 2133 :         (m_dwUSBUsageCount == 0)? m_dwUSBUsageCount:(m_dwUSBUsageCount--);

  06b90	e59d3028	 ldr         r3, [sp, #0x28]
  06b94	e2833e16	 add         r3, r3, #0x16, 28
  06b98	e5933000	 ldr         r3, [r3]
  06b9c	e3530000	 cmp         r3, #0
  06ba0	1a000004	 bne         |$LN6@StopUSBClo|
  06ba4	e59d3028	 ldr         r3, [sp, #0x28]
  06ba8	e2833e16	 add         r3, r3, #0x16, 28
  06bac	e5933000	 ldr         r3, [r3]
  06bb0	e58d3008	 str         r3, [sp, #8]
  06bb4	ea00000a	 b           |$LN7@StopUSBClo|
  06bb8		 |$LN6@StopUSBClo|
  06bb8	e59d3028	 ldr         r3, [sp, #0x28]
  06bbc	e2833e16	 add         r3, r3, #0x16, 28
  06bc0	e5933000	 ldr         r3, [r3]
  06bc4	e58d3008	 str         r3, [sp, #8]
  06bc8	e59d3028	 ldr         r3, [sp, #0x28]
  06bcc	e2833e16	 add         r3, r3, #0x16, 28
  06bd0	e5933000	 ldr         r3, [r3]
  06bd4	e2432001	 sub         r2, r3, #1
  06bd8	e59d3028	 ldr         r3, [sp, #0x28]
  06bdc	e2833e16	 add         r3, r3, #0x16, 28
  06be0	e5832000	 str         r2, [r3]
  06be4		 |$LN7@StopUSBClo|

; 2134 :         if (m_dwUSBUsageCount > 0)

  06be4	e59d3028	 ldr         r3, [sp, #0x28]
  06be8	e2833e16	 add         r3, r3, #0x16, 28
  06bec	e5933000	 ldr         r3, [r3]
  06bf0	e3530000	 cmp         r3, #0
  06bf4	9a000005	 bls         |$LN2@StopUSBClo|

; 2135 :         {            
; 2136 :             LeaveCriticalSection(&m_csUSBClock);

  06bf8	e59d3028	 ldr         r3, [sp, #0x28]
  06bfc	e2830f49	 add         r0, r3, #0x49, 30
  06c00	eb000000	 bl          LeaveCriticalSection

; 2137 :             return FALSE;

  06c04	e3a03000	 mov         r3, #0
  06c08	e58d3004	 str         r3, [sp, #4]
  06c0c	ea000084	 b           |$LN4@StopUSBClo|
  06c10		 |$LN2@StopUSBClo|

; 2138 :         }
; 2139 :         DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("+StopUSBClock\r\n")));

  06c10	e59f3220	 ldr         r3, [pc, #0x220]
  06c14	e5933440	 ldr         r3, [r3, #0x440]
  06c18	e3130a02	 tst         r3, #2, 20
  06c1c	0a000004	 beq         |$LN8@StopUSBClo|
  06c20	e59f021c	 ldr         r0, [pc, #0x21C]
  06c24	eb000000	 bl          NKDbgPrintfW
  06c28	e3a03001	 mov         r3, #1
  06c2c	e58d300c	 str         r3, [sp, #0xC]
  06c30	ea000001	 b           |$LN9@StopUSBClo|
  06c34		 |$LN8@StopUSBClo|
  06c34	e3a03000	 mov         r3, #0
  06c38	e58d300c	 str         r3, [sp, #0xC]
  06c3c		 |$LN9@StopUSBClo|

; 2140 :     EnableSuspend(TRUE);

  06c3c	e3a01001	 mov         r1, #1
  06c40	e59d3028	 ldr         r3, [sp, #0x28]
  06c44	e5933000	 ldr         r3, [r3]
  06c48	e28330f0	 add         r3, r3, #0xF0
  06c4c	e59d0028	 ldr         r0, [sp, #0x28]
  06c50	e5933000	 ldr         r3, [r3]
  06c54	e1a0e00f	 mov         lr, pc
  06c58	e12fff13	 bx          r3

; 2141 : 
; 2142 :         pOtg = m_pOTG->pUsbOtgRegs;        

  06c5c	e59d3028	 ldr         r3, [sp, #0x28]
  06c60	e2833e15	 add         r3, r3, #0x15, 28
  06c64	e5933000	 ldr         r3, [r3]
  06c68	e2833018	 add         r3, r3, #0x18
  06c6c	e5933000	 ldr         r3, [r3]
  06c70	e58d3000	 str         r3, [sp]

; 2143 :  
; 2144 :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("+StopUSBClock\r\n")));

  06c74	e59f31bc	 ldr         r3, [pc, #0x1BC]
  06c78	e5933440	 ldr         r3, [r3, #0x440]
  06c7c	e3130a02	 tst         r3, #2, 20
  06c80	0a000004	 beq         |$LN10@StopUSBClo|
  06c84	e59f01b8	 ldr         r0, [pc, #0x1B8]
  06c88	eb000000	 bl          NKDbgPrintfW
  06c8c	e3a03001	 mov         r3, #1
  06c90	e58d3010	 str         r3, [sp, #0x10]
  06c94	ea000001	 b           |$LN11@StopUSBClo|
  06c98		 |$LN10@StopUSBClo|
  06c98	e3a03000	 mov         r3, #0
  06c9c	e58d3010	 str         r3, [sp, #0x10]
  06ca0		 |$LN11@StopUSBClo|

; 2145 : 
; 2146 :     // According to TI Spec TRM Version H 25.12.3.1
; 2147 :     // Master Interface Management - force standy mode
; 2148 :     CLRREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_M_MASK);

  06ca0	e59d3000	 ldr         r3, [sp]
  06ca4	e2833004	 add         r3, r3, #4
  06ca8	e5932000	 ldr         r2, [r3]
  06cac	e3e03a03	 mvn         r3, #3, 20
  06cb0	e0022003	 and         r2, r2, r3
  06cb4	e59d3000	 ldr         r3, [sp]
  06cb8	e2833004	 add         r3, r3, #4
  06cbc	e5832000	 str         r2, [r3]

; 2149 :     // Side Interface Management - force standby mode
; 2150 :     CLRREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_S_MASK);

  06cc0	e59d3000	 ldr         r3, [sp]
  06cc4	e2833004	 add         r3, r3, #4
  06cc8	e5932000	 ldr         r2, [r3]
  06ccc	e3e03018	 mvn         r3, #0x18
  06cd0	e0022003	 and         r2, r2, r3
  06cd4	e59d3000	 ldr         r3, [sp]
  06cd8	e2833004	 add         r3, r3, #4
  06cdc	e5832000	 str         r2, [r3]

; 2151 :     // Enable Auto Idle
; 2152 :     SETREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_AUTOIDLE);

  06ce0	e59d3000	 ldr         r3, [sp]
  06ce4	e2833004	 add         r3, r3, #4
  06ce8	e5933000	 ldr         r3, [r3]
  06cec	e3832001	 orr         r2, r3, #1
  06cf0	e59d3000	 ldr         r3, [sp]
  06cf4	e2833004	 add         r3, r3, #4
  06cf8	e5832000	 str         r2, [r3]

; 2153 :     // Enable Wakeup
; 2154 :     SETREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_ENABLEWAKEUP);

  06cfc	e59d3000	 ldr         r3, [sp]
  06d00	e2833004	 add         r3, r3, #4
  06d04	e5933000	 ldr         r3, [r3]
  06d08	e3832004	 orr         r2, r3, #4
  06d0c	e59d3000	 ldr         r3, [sp]
  06d10	e2833004	 add         r3, r3, #4
  06d14	e5832000	 str         r2, [r3]

; 2155 :     // Enable Force Standby
; 2156 :     SETREG32(&pOtg->OTG_FORCESTDBY, OTG_FORCESTDY_ENABLEFORCE);

  06d18	e59d3000	 ldr         r3, [sp]
  06d1c	e2833014	 add         r3, r3, #0x14
  06d20	e5933000	 ldr         r3, [r3]
  06d24	e3832001	 orr         r2, r3, #1
  06d28	e59d3000	 ldr         r3, [sp]
  06d2c	e2833014	 add         r3, r3, #0x14
  06d30	e5832000	 str         r2, [r3]

; 2157 : 
; 2158 :     DEBUGMSG(1, (TEXT("OTG SysConfig = 0x%x\r\n"), INREG32(&pOtg->OTG_SYSCONFIG)));

  06d34	e59d3000	 ldr         r3, [sp]
  06d38	e2833004	 add         r3, r3, #4
  06d3c	e5931000	 ldr         r1, [r3]
  06d40	e59f00f8	 ldr         r0, [pc, #0xF8]
  06d44	eb000000	 bl          NKDbgPrintfW
  06d48	e3a03001	 mov         r3, #1
  06d4c	e58d3014	 str         r3, [sp, #0x14]
  06d50	ea000001	 b           |$LN13@StopUSBClo|
  06d54	e3a03000	 mov         r3, #0
  06d58	e58d3014	 str         r3, [sp, #0x14]
  06d5c		 |$LN13@StopUSBClo|

; 2159 : 
; 2160 :     if(m_pOTG->operateMode == IDLE_MODE)

  06d5c	e59d3028	 ldr         r3, [sp, #0x28]
  06d60	e2833e15	 add         r3, r3, #0x15, 28
  06d64	e5933000	 ldr         r3, [r3]
  06d68	e2833035	 add         r3, r3, #0x35
  06d6c	e5d33000	 ldrb        r3, [r3]
  06d70	e3530000	 cmp         r3, #0
  06d74	1a000016	 bne         |$LN1@StopUSBClo|

; 2161 :     {
; 2162 :         DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("***###StopUSBClock:  EnableWakeupInterrupt(TRUE)\r\n")));

  06d78	e59f30b8	 ldr         r3, [pc, #0xB8]
  06d7c	e5933440	 ldr         r3, [r3, #0x440]
  06d80	e3130a02	 tst         r3, #2, 20
  06d84	0a000004	 beq         |$LN14@StopUSBClo|
  06d88	e59f00ac	 ldr         r0, [pc, #0xAC]
  06d8c	eb000000	 bl          NKDbgPrintfW
  06d90	e3a03001	 mov         r3, #1
  06d94	e58d3018	 str         r3, [sp, #0x18]
  06d98	ea000001	 b           |$LN15@StopUSBClo|
  06d9c		 |$LN14@StopUSBClo|
  06d9c	e3a03000	 mov         r3, #0
  06da0	e58d3018	 str         r3, [sp, #0x18]
  06da4		 |$LN15@StopUSBClo|

; 2163 :         m_pTransceiver->EnableWakeupInterrupt(TRUE);

  06da4	e3a01001	 mov         r1, #1
  06da8	e59d3028	 ldr         r3, [sp, #0x28]
  06dac	e28330fc	 add         r3, r3, #0xFC
  06db0	e5932000	 ldr         r2, [r3]
  06db4	e59d3028	 ldr         r3, [sp, #0x28]
  06db8	e28330fc	 add         r3, r3, #0xFC
  06dbc	e5930000	 ldr         r0, [r3]
  06dc0	e5923000	 ldr         r3, [r2]
  06dc4	e2833008	 add         r3, r3, #8
  06dc8	e5933000	 ldr         r3, [r3]
  06dcc	e1a0e00f	 mov         lr, pc
  06dd0	e12fff13	 bx          r3
  06dd4		 |$LN1@StopUSBClo|

; 2164 :     }
; 2165 : 
; 2166 :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("-StopUSBClock\r\n")));

  06dd4	e59f305c	 ldr         r3, [pc, #0x5C]
  06dd8	e5933440	 ldr         r3, [r3, #0x440]
  06ddc	e3130a02	 tst         r3, #2, 20
  06de0	0a000004	 beq         |$LN16@StopUSBClo|
  06de4	e59f0048	 ldr         r0, [pc, #0x48]
  06de8	eb000000	 bl          NKDbgPrintfW
  06dec	e3a03001	 mov         r3, #1
  06df0	e58d301c	 str         r3, [sp, #0x1C]
  06df4	ea000001	 b           |$LN17@StopUSBClo|
  06df8		 |$LN16@StopUSBClo|
  06df8	e3a03000	 mov         r3, #0
  06dfc	e58d301c	 str         r3, [sp, #0x1C]
  06e00		 |$LN17@StopUSBClo|

; 2167 :     m_bUSBClockEnable = FALSE;

  06e00	e59d3028	 ldr         r3, [sp, #0x28]
  06e04	e2832f57	 add         r2, r3, #0x57, 30
  06e08	e3a03000	 mov         r3, #0
  06e0c	e5823000	 str         r3, [r2]

; 2168 :     LeaveCriticalSection(&m_csUSBClock);

  06e10	e59d3028	 ldr         r3, [sp, #0x28]
  06e14	e2830f49	 add         r0, r3, #0x49, 30
  06e18	eb000000	 bl          LeaveCriticalSection

; 2169 :     return TRUE;

  06e1c	e3a03001	 mov         r3, #1
  06e20	e58d3004	 str         r3, [sp, #4]
  06e24		 |$LN4@StopUSBClo|

; 2170 : 
; 2171 : }

  06e24	e59d0004	 ldr         r0, [sp, #4]
  06e28	e28dd020	 add         sp, sp, #0x20
  06e2c	e89d6000	 ldmia       sp, {sp, lr}
  06e30	e12fff1e	 bx          lr
  06e34		 |$LN21@StopUSBClo|
  06e34		 |$LN22@StopUSBClo|
  06e34	00000000	 DCD         |??_C@_1CA@MGJHBELE@?$AA?9?$AAS?$AAt?$AAo?$AAp?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@|
  06e38		 |$LN23@StopUSBClo|
  06e38	00000000	 DCD         |dpCurSettings|
  06e3c		 |$LN24@StopUSBClo|
  06e3c	00000000	 DCD         |??_C@_1GG@FECLMJFB@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?$CD?$AA?$CD?$AA?$CD?$AAS?$AAt?$AAo?$AAp?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?3?$AA?5?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAW?$AAa?$AAk?$AAe?$AAu@|
  06e40		 |$LN25@StopUSBClo|
  06e40	00000000	 DCD         |??_C@_1CO@MABNJEHH@?$AAO?$AAT?$AAG?$AA?5?$AAS?$AAy?$AAs?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  06e44		 |$LN26@StopUSBClo|
  06e44	00000000	 DCD         |??_C@_1CA@IPNIADIL@?$AA?$CL?$AAS?$AAt?$AAo?$AAp?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@|
  06e48		 |$M44044|

			 ENDP  ; |?StopUSBClock@OMAPMHSUSBOTG@@UAAHXZ|, OMAPMHSUSBOTG::StopUSBClock

	EXPORT	|??_C@_1CC@HHIOHOMJ@?$AA?9?$AAS?$AAt?$AAa?$AAr?$AAt?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@KMIDJIHN@?$AA?$CL?$AAS?$AAt?$AAa?$AAr?$AAt?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@KBEBJIKI@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?$CD?$AA?$CD?$AA?$CD?$AAS?$AAt?$AAa?$AAr?$AAt?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?3?$AA?5?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAW?$AAa?$AAk?$AAe@| [ DATA ] ; `string'

  00148			 AREA	 |.pdata|, PDATA
|$T44064| DCD	|$LN14@StartUSBCl|
	DCD	0x4000c104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@HHIOHOMJ@?$AA?9?$AAS?$AAt?$AAa?$AAr?$AAt?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@KMIDJIHN@?$AA?$CL?$AAS?$AAt?$AAa?$AAr?$AAt?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@KBEBJIKI@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?$CD?$AA?$CD?$AA?$CD?$AAS?$AAt?$AAa?$AAr?$AAt?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?3?$AA?5?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAW?$AAa?$AAk?$AAe@| DCB "*"
	DCB	0x0, "*", 0x0, "*", 0x0, "#", 0x0, "#", 0x0, "#", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k"
	DCB	0x0, ":", 0x0, " ", 0x0, " ", 0x0, "E", 0x0, "n", 0x0, "a"
	DCB	0x0, "b", 0x0, "l", 0x0, "e", 0x0, "W", 0x0, "a", 0x0, "k"
	DCB	0x0, "e", 0x0, "u", 0x0, "p", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, "(", 0x0, "F", 0x0, "A", 0x0, "L", 0x0, "S", 0x0, "E"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  06e48			 AREA	 |.text|, CODE, ARM

  06e48		 |?StartUSBClock@OMAPMHSUSBOTG@@UAAHH@Z| PROC ; OMAPMHSUSBOTG::StartUSBClock

; 2182 : {

  06e48		 |$LN14@StartUSBCl|
  06e48	e1a0c00d	 mov         r12, sp
  06e4c	e92d0003	 stmdb       sp!, {r0, r1}
  06e50	e92d5000	 stmdb       sp!, {r12, lr}
  06e54	e24dd014	 sub         sp, sp, #0x14
  06e58		 |$M44061|

; 2183 :     PCSP_MUSB_OTG_REGS pOtg;
; 2184 : 
; 2185 :     // Configure the rest of the stuff:
; 2186 :     EnterCriticalSection(&m_csUSBClock);

  06e58	e59d301c	 ldr         r3, [sp, #0x1C]
  06e5c	e2830f49	 add         r0, r3, #0x49, 30
  06e60	eb000000	 bl          EnterCriticalSection

; 2187 : 
; 2188 :     if (m_bUSBClockEnable == TRUE)

  06e64	e59d301c	 ldr         r3, [sp, #0x1C]
  06e68	e2833f57	 add         r3, r3, #0x57, 30
  06e6c	e5933000	 ldr         r3, [r3]
  06e70	e3530001	 cmp         r3, #1
  06e74	1a000005	 bne         |$LN3@StartUSBCl|

; 2189 :     {
; 2190 :         LeaveCriticalSection(&m_csUSBClock);

  06e78	e59d301c	 ldr         r3, [sp, #0x1C]
  06e7c	e2830f49	 add         r0, r3, #0x49, 30
  06e80	eb000000	 bl          LeaveCriticalSection

; 2191 :         return FALSE;

  06e84	e3a03000	 mov         r3, #0
  06e88	e58d3004	 str         r3, [sp, #4]
  06e8c	ea0000a6	 b           |$LN4@StartUSBCl|
  06e90		 |$LN3@StartUSBCl|

; 2192 :     }
; 2193 : 
; 2194 :     if(m_pOTG->operateMode == IDLE_MODE)

  06e90	e59d301c	 ldr         r3, [sp, #0x1C]
  06e94	e2833e15	 add         r3, r3, #0x15, 28
  06e98	e5933000	 ldr         r3, [r3]
  06e9c	e2833035	 add         r3, r3, #0x35
  06ea0	e5d33000	 ldrb        r3, [r3]
  06ea4	e3530000	 cmp         r3, #0
  06ea8	1a000016	 bne         |$LN2@StartUSBCl|

; 2195 :     {
; 2196 :         DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("***###StartUSBClock:  EnableWakeupInterrupt(FALSE)\r\n")));

  06eac	e59f328c	 ldr         r3, [pc, #0x28C]
  06eb0	e5933440	 ldr         r3, [r3, #0x440]
  06eb4	e3130a02	 tst         r3, #2, 20
  06eb8	0a000004	 beq         |$LN6@StartUSBCl|
  06ebc	e59f0284	 ldr         r0, [pc, #0x284]
  06ec0	eb000000	 bl          NKDbgPrintfW
  06ec4	e3a03001	 mov         r3, #1
  06ec8	e58d3008	 str         r3, [sp, #8]
  06ecc	ea000001	 b           |$LN7@StartUSBCl|
  06ed0		 |$LN6@StartUSBCl|
  06ed0	e3a03000	 mov         r3, #0
  06ed4	e58d3008	 str         r3, [sp, #8]
  06ed8		 |$LN7@StartUSBCl|

; 2197 :         m_pTransceiver->EnableWakeupInterrupt(FALSE);

  06ed8	e3a01000	 mov         r1, #0
  06edc	e59d301c	 ldr         r3, [sp, #0x1C]
  06ee0	e28330fc	 add         r3, r3, #0xFC
  06ee4	e5932000	 ldr         r2, [r3]
  06ee8	e59d301c	 ldr         r3, [sp, #0x1C]
  06eec	e28330fc	 add         r3, r3, #0xFC
  06ef0	e5930000	 ldr         r0, [r3]
  06ef4	e5923000	 ldr         r3, [r2]
  06ef8	e2833008	 add         r3, r3, #8
  06efc	e5933000	 ldr         r3, [r3]
  06f00	e1a0e00f	 mov         lr, pc
  06f04	e12fff13	 bx          r3
  06f08		 |$LN2@StartUSBCl|

; 2198 :     }
; 2199 :     pOtg = m_pOTG->pUsbOtgRegs;

  06f08	e59d301c	 ldr         r3, [sp, #0x1C]
  06f0c	e2833e15	 add         r3, r3, #0x15, 28
  06f10	e5933000	 ldr         r3, [r3]
  06f14	e2833018	 add         r3, r3, #0x18
  06f18	e5933000	 ldr         r3, [r3]
  06f1c	e58d3000	 str         r3, [sp]

; 2200 : 
; 2201 : 
; 2202 :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("+StartUSBClock\r\n")));

  06f20	e59f3218	 ldr         r3, [pc, #0x218]
  06f24	e5933440	 ldr         r3, [r3, #0x440]
  06f28	e3130a02	 tst         r3, #2, 20
  06f2c	0a000004	 beq         |$LN8@StartUSBCl|
  06f30	e59f020c	 ldr         r0, [pc, #0x20C]
  06f34	eb000000	 bl          NKDbgPrintfW
  06f38	e3a03001	 mov         r3, #1
  06f3c	e58d300c	 str         r3, [sp, #0xC]
  06f40	ea000001	 b           |$LN9@StartUSBCl|
  06f44		 |$LN8@StartUSBCl|
  06f44	e3a03000	 mov         r3, #0
  06f48	e58d300c	 str         r3, [sp, #0xC]
  06f4c		 |$LN9@StartUSBCl|

; 2203 : 
; 2204 :     EnterCriticalSection(&m_pOTG->regCS);

  06f4c	e59d301c	 ldr         r3, [sp, #0x1C]
  06f50	e2833e15	 add         r3, r3, #0x15, 28
  06f54	e5933000	 ldr         r3, [r3]
  06f58	e2830038	 add         r0, r3, #0x38
  06f5c	eb000000	 bl          EnterCriticalSection

; 2205 :     UpdateDevicePower(m_hParent, D0, NULL);

  06f60	e3a02000	 mov         r2, #0
  06f64	e3a01000	 mov         r1, #0
  06f68	e59d301c	 ldr         r3, [sp, #0x1C]
  06f6c	e2833d05	 add         r3, r3, #5, 26
  06f70	e5930000	 ldr         r0, [r3]
  06f74	eb000000	 bl          |?UpdateDevicePower@@YAXPAXW4_CEDEVICE_POWER_STATE@@0@Z|

; 2206 :     LeaveCriticalSection(&m_pOTG->regCS);

  06f78	e59d301c	 ldr         r3, [sp, #0x1C]
  06f7c	e2833e15	 add         r3, r3, #0x15, 28
  06f80	e5933000	 ldr         r3, [r3]
  06f84	e2830038	 add         r0, r3, #0x38
  06f88	eb000000	 bl          LeaveCriticalSection

; 2207 : 
; 2208 :     EnableSuspend(FALSE);

  06f8c	e3a01000	 mov         r1, #0
  06f90	e59d301c	 ldr         r3, [sp, #0x1C]
  06f94	e5933000	 ldr         r3, [r3]
  06f98	e28330f0	 add         r3, r3, #0xF0
  06f9c	e59d001c	 ldr         r0, [sp, #0x1C]
  06fa0	e5933000	 ldr         r3, [r3]
  06fa4	e1a0e00f	 mov         lr, pc
  06fa8	e12fff13	 bx          r3

; 2209 : 
; 2210 :     // TI spec TRM V.H 25.12.3.2 & 25.12.3.3
; 2211 :     // Clear the EnableForce bit
; 2212 :     CLRREG32(&pOtg->OTG_FORCESTDBY, OTG_FORCESTDY_ENABLEFORCE);

  06fac	e59d3000	 ldr         r3, [sp]
  06fb0	e2833014	 add         r3, r3, #0x14
  06fb4	e5932000	 ldr         r2, [r3]
  06fb8	e3e03001	 mvn         r3, #1
  06fbc	e0022003	 and         r2, r2, r3
  06fc0	e59d3000	 ldr         r3, [sp]
  06fc4	e2833014	 add         r3, r3, #0x14
  06fc8	e5832000	 str         r2, [r3]

; 2213 : 
; 2214 : #if 1
; 2215 :     // Enable Wakeup
; 2216 :     SETREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_ENABLEWAKEUP);

  06fcc	e59d3000	 ldr         r3, [sp]
  06fd0	e2833004	 add         r3, r3, #4
  06fd4	e5933000	 ldr         r3, [r3]
  06fd8	e3832004	 orr         r2, r3, #4
  06fdc	e59d3000	 ldr         r3, [sp]
  06fe0	e2833004	 add         r3, r3, #4
  06fe4	e5832000	 str         r2, [r3]

; 2217 : 
; 2218 :     // Set the MIDLEMODE to SmartStandy
; 2219 :     CLRREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_M_MASK);

  06fe8	e59d3000	 ldr         r3, [sp]
  06fec	e2833004	 add         r3, r3, #4
  06ff0	e5932000	 ldr         r2, [r3]
  06ff4	e3e03a03	 mvn         r3, #3, 20
  06ff8	e0022003	 and         r2, r2, r3
  06ffc	e59d3000	 ldr         r3, [sp]
  07000	e2833004	 add         r3, r3, #4
  07004	e5832000	 str         r2, [r3]

; 2220 :     SETREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_M_SMARTSTDBY);

  07008	e59d3000	 ldr         r3, [sp]
  0700c	e2833004	 add         r3, r3, #4
  07010	e5933000	 ldr         r3, [r3]
  07014	e3832a02	 orr         r2, r3, #2, 20
  07018	e59d3000	 ldr         r3, [sp]
  0701c	e2833004	 add         r3, r3, #4
  07020	e5832000	 str         r2, [r3]

; 2221 : 
; 2222 :     // Set the SIDLEMODE to SmartIdle
; 2223 :     CLRREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_S_MASK);

  07024	e59d3000	 ldr         r3, [sp]
  07028	e2833004	 add         r3, r3, #4
  0702c	e5932000	 ldr         r2, [r3]
  07030	e3e03018	 mvn         r3, #0x18
  07034	e0022003	 and         r2, r2, r3
  07038	e59d3000	 ldr         r3, [sp]
  0703c	e2833004	 add         r3, r3, #4
  07040	e5832000	 str         r2, [r3]

; 2224 :     SETREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_S_SMARTIDLE);

  07044	e59d3000	 ldr         r3, [sp]
  07048	e2833004	 add         r3, r3, #4
  0704c	e5933000	 ldr         r3, [r3]
  07050	e3832010	 orr         r2, r3, #0x10
  07054	e59d3000	 ldr         r3, [sp]
  07058	e2833004	 add         r3, r3, #4
  0705c	e5832000	 str         r2, [r3]

; 2225 : 
; 2226 :     // Clear the AutoIdle mode
; 2227 :     CLRREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_AUTOIDLE);

  07060	e59d3000	 ldr         r3, [sp]
  07064	e2833004	 add         r3, r3, #4
  07068	e5932000	 ldr         r2, [r3]
  0706c	e3e03001	 mvn         r3, #1
  07070	e0022003	 and         r2, r2, r3
  07074	e59d3000	 ldr         r3, [sp]
  07078	e2833004	 add         r3, r3, #4
  0707c	e5832000	 str         r2, [r3]

; 2228 : 
; 2229 :     // Set back the AutoIdle mode to 1
; 2230 :     SETREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_AUTOIDLE);

  07080	e59d3000	 ldr         r3, [sp]
  07084	e2833004	 add         r3, r3, #4
  07088	e5933000	 ldr         r3, [r3]
  0708c	e3832001	 orr         r2, r3, #1
  07090	e59d3000	 ldr         r3, [sp]
  07094	e2833004	 add         r3, r3, #4
  07098	e5832000	 str         r2, [r3]

; 2231 : #else
; 2232 :     // Set the MIDLEMODE to NoStandy.  For smartfon, if use SmartStandy, system doesn't wake up from retention.
; 2233 :     CLRREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_M_MASK);
; 2234 :     //SETREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_M_SMARTSTDBY);
; 2235 : 
; 2236 :     // Set the SIDLEMODE to SmartIdle
; 2237 :     CLRREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_S_MASK);
; 2238 :     //SETREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_S_SMARTIDLE);
; 2239 : 
; 2240 :     // Clear the AutoIdle mode
; 2241 :     //CLRREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_AUTOIDLE);
; 2242 : 
; 2243 :     // Set back the AutoIdle mode to 1
; 2244 :     //SETREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_AUTOIDLE);
; 2245 : #endif
; 2246 : 	
; 2247 :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("-StartUSBClock\r\n")));

  0709c	e59f309c	 ldr         r3, [pc, #0x9C]
  070a0	e5933440	 ldr         r3, [r3, #0x440]
  070a4	e3130a02	 tst         r3, #2, 20
  070a8	0a000004	 beq         |$LN10@StartUSBCl|
  070ac	e59f0088	 ldr         r0, [pc, #0x88]
  070b0	eb000000	 bl          NKDbgPrintfW
  070b4	e3a03001	 mov         r3, #1
  070b8	e58d3010	 str         r3, [sp, #0x10]
  070bc	ea000001	 b           |$LN11@StartUSBCl|
  070c0		 |$LN10@StartUSBCl|
  070c0	e3a03000	 mov         r3, #0
  070c4	e58d3010	 str         r3, [sp, #0x10]
  070c8		 |$LN11@StartUSBCl|

; 2248 : 
; 2249 :     if (fInc)

  070c8	e59d3020	 ldr         r3, [sp, #0x20]
  070cc	e3530000	 cmp         r3, #0
  070d0	0a000006	 beq         |$LN1@StartUSBCl|

; 2250 :         m_dwUSBUsageCount++;

  070d4	e59d301c	 ldr         r3, [sp, #0x1C]
  070d8	e2833e16	 add         r3, r3, #0x16, 28
  070dc	e5933000	 ldr         r3, [r3]
  070e0	e2832001	 add         r2, r3, #1
  070e4	e59d301c	 ldr         r3, [sp, #0x1C]
  070e8	e2833e16	 add         r3, r3, #0x16, 28
  070ec	e5832000	 str         r2, [r3]
  070f0		 |$LN1@StartUSBCl|

; 2251 : 
; 2252 :     m_bUSBClockEnable = TRUE;

  070f0	e59d301c	 ldr         r3, [sp, #0x1C]
  070f4	e2832f57	 add         r2, r3, #0x57, 30
  070f8	e3a03001	 mov         r3, #1
  070fc	e5823000	 str         r3, [r2]

; 2253 :     m_pOTG->bClockStatus = TRUE;

  07100	e59d301c	 ldr         r3, [sp, #0x1C]
  07104	e2833e15	 add         r3, r3, #0x15, 28
  07108	e5933000	 ldr         r3, [r3]
  0710c	e2832060	 add         r2, r3, #0x60
  07110	e3a03001	 mov         r3, #1
  07114	e5823000	 str         r3, [r2]

; 2254 :     LeaveCriticalSection(&m_csUSBClock);

  07118	e59d301c	 ldr         r3, [sp, #0x1C]
  0711c	e2830f49	 add         r0, r3, #0x49, 30
  07120	eb000000	 bl          LeaveCriticalSection

; 2255 : 
; 2256 :     return TRUE;

  07124	e3a03001	 mov         r3, #1
  07128	e58d3004	 str         r3, [sp, #4]
  0712c		 |$LN4@StartUSBCl|

; 2257 : 
; 2258 : }

  0712c	e59d0004	 ldr         r0, [sp, #4]
  07130	e28dd014	 add         sp, sp, #0x14
  07134	e89d6000	 ldmia       sp, {sp, lr}
  07138	e12fff1e	 bx          lr
  0713c		 |$LN15@StartUSBCl|
  0713c		 |$LN16@StartUSBCl|
  0713c	00000000	 DCD         |??_C@_1CC@HHIOHOMJ@?$AA?9?$AAS?$AAt?$AAa?$AAr?$AAt?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@|
  07140		 |$LN17@StartUSBCl|
  07140	00000000	 DCD         |dpCurSettings|
  07144		 |$LN18@StartUSBCl|
  07144	00000000	 DCD         |??_C@_1CC@KMIDJIHN@?$AA?$CL?$AAS?$AAt?$AAa?$AAr?$AAt?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@|
  07148		 |$LN19@StartUSBCl|
  07148	00000000	 DCD         |??_C@_1GK@KBEBJIKI@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?$CD?$AA?$CD?$AA?$CD?$AAS?$AAt?$AAa?$AAr?$AAt?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?3?$AA?5?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAW?$AAa?$AAk?$AAe@|
  0714c		 |$M44062|

			 ENDP  ; |?StartUSBClock@OMAPMHSUSBOTG@@UAAHH@Z|, OMAPMHSUSBOTG::StartUSBClock

	EXPORT	|??_C@_1FA@FGNHMBFK@?$AAO?$AAT?$AAG?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAD?$AAo?$AAw?$AAn?$AA?5?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@FMBCMIED@?$AAO?$AAT?$AAG?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAD?$AAo?$AAw?$AAn?$AA?5?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@KODBPIDB@?$AAO?$AAT?$AAG?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAD?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00150			 AREA	 |.pdata|, PDATA
|$T44088| DCD	|$LN39@SetPowerSt@2|
	DCD	0x40025404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@FGNHMBFK@?$AAO?$AAT?$AAG?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAD?$AAo?$AAw?$AAn?$AA?5?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, " ", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "D", 0x0, "o", 0x0, "w"
	DCB	0x0, "n", 0x0, " ", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "D", 0x0, "4"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@FMBCMIED@?$AAO?$AAT?$AAG?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAD?$AAo?$AAw?$AAn?$AA?5?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, " ", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "D", 0x0, "o", 0x0, "w"
	DCB	0x0, "n", 0x0, " ", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "D", 0x0, "3"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@KODBPIDB@?$AAO?$AAT?$AAG?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAD?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, " ", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "D", 0x0, "o", 0x0, "w"
	DCB	0x0, "n", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  0714c			 AREA	 |.text|, CODE, ARM

  0714c		 |?SetPowerState@OMAPMHSUSBOTG@@UAAHW4_CEDEVICE_POWER_STATE@@@Z| PROC ; OMAPMHSUSBOTG::SetPowerState

; 2261 : {

  0714c		 |$LN39@SetPowerSt@2|
  0714c	e1a0c00d	 mov         r12, sp
  07150	e92d0003	 stmdb       sp!, {r0, r1}
  07154	e92d5000	 stmdb       sp!, {r12, lr}
  07158	e24dd034	 sub         sp, sp, #0x34
  0715c		 |$M44085|

; 2262 :     PCSP_MUSB_GEN_REGS pGen = m_pOTG->pUsbGenRegs;

  0715c	e59d303c	 ldr         r3, [sp, #0x3C]
  07160	e2833e15	 add         r3, r3, #0x15, 28
  07164	e5933000	 ldr         r3, [r3]
  07168	e2833020	 add         r3, r3, #0x20
  0716c	e5933000	 ldr         r3, [r3]
  07170	e58d3000	 str         r3, [sp]

; 2263 : 
; 2264 :     switch (reqDx)

  07174	e59d3040	 ldr         r3, [sp, #0x40]
  07178	e58d3010	 str         r3, [sp, #0x10]
  0717c	e59d3010	 ldr         r3, [sp, #0x10]
  07180	e3530004	 cmp         r3, #4
  07184	8a00023a	 bhi         |$LN20@SetPowerSt@2|
  07188	e59d2010	 ldr         r2, [sp, #0x10]
  0718c	e1a03102	 mov         r3, r2, lsl #2
  07190	e083300f	 add         r3, r3, pc
  07194	e5933004	 ldr         r3, [r3, #4]
  07198	e08ff003	 add         pc, pc, r3
  0719c		 |$LN31@SetPowerSt@2|
  0719c		 |$LN30@SetPowerSt@2|
  0719c		 |$LN32@SetPowerSt@2|
  0719c	00000010	 DCD         0x10
  071a0		 |$LN33@SetPowerSt@2|
  071a0	00000010	 DCD         0x10
  071a4		 |$LN34@SetPowerSt@2|
  071a4	00000010	 DCD         0x10
  071a8		 |$LN35@SetPowerSt@2|
  071a8	00000548	 DCD         0x548
  071ac		 |$LN36@SetPowerSt@2|
  071ac	00000548	 DCD         0x548
  071b0		 |$LN19@SetPowerSt@2|

; 2265 :     {
; 2266 :         case D0:
; 2267 :         case D1:
; 2268 :         case D2:
; 2269 :         {
; 2270 :             BOOL a_device_present;
; 2271 :             BOOL b_device_present;
; 2272 : 
; 2273 :             if (m_pTransceiver->SupportsTransceiverWakeWithoutClock())

  071b0	e59d303c	 ldr         r3, [sp, #0x3C]
  071b4	e28330fc	 add         r3, r3, #0xFC
  071b8	e5932000	 ldr         r2, [r3]
  071bc	e59d303c	 ldr         r3, [sp, #0x3C]
  071c0	e28330fc	 add         r3, r3, #0xFC
  071c4	e5930000	 ldr         r0, [r3]
  071c8	e5923000	 ldr         r3, [r2]
  071cc	e2833014	 add         r3, r3, #0x14
  071d0	e5933000	 ldr         r3, [r3]
  071d4	e1a0e00f	 mov         lr, pc
  071d8	e12fff13	 bx          r3
  071dc	e58d0014	 str         r0, [sp, #0x14]
  071e0	e59d3014	 ldr         r3, [sp, #0x14]
  071e4	e3530000	 cmp         r3, #0
  071e8	0a000116	 beq         |$LN18@SetPowerSt@2|

; 2274 : 			{
; 2275 :                 // *** Transceiver in TWL4030/TPS659xx ***
; 2276 : 
; 2277 :                 a_device_present = m_pTransceiver->IsADeviceConnected();

  071ec	e59d303c	 ldr         r3, [sp, #0x3C]
  071f0	e28330fc	 add         r3, r3, #0xFC
  071f4	e5932000	 ldr         r2, [r3]
  071f8	e59d303c	 ldr         r3, [sp, #0x3C]
  071fc	e28330fc	 add         r3, r3, #0xFC
  07200	e5930000	 ldr         r0, [r3]
  07204	e5923000	 ldr         r3, [r2]
  07208	e2833030	 add         r3, r3, #0x30
  0720c	e5933000	 ldr         r3, [r3]
  07210	e1a0e00f	 mov         lr, pc
  07214	e12fff13	 bx          r3
  07218	e58d0018	 str         r0, [sp, #0x18]
  0721c	e59d3018	 ldr         r3, [sp, #0x18]
  07220	e58d3008	 str         r3, [sp, #8]

; 2278 :                 b_device_present = m_pTransceiver->IsBDeviceConnected();

  07224	e59d303c	 ldr         r3, [sp, #0x3C]
  07228	e28330fc	 add         r3, r3, #0xFC
  0722c	e5932000	 ldr         r2, [r3]
  07230	e59d303c	 ldr         r3, [sp, #0x3C]
  07234	e28330fc	 add         r3, r3, #0xFC
  07238	e5930000	 ldr         r0, [r3]
  0723c	e5923000	 ldr         r3, [r2]
  07240	e2833034	 add         r3, r3, #0x34
  07244	e5933000	 ldr         r3, [r3]
  07248	e1a0e00f	 mov         lr, pc
  0724c	e12fff13	 bx          r3
  07250	e58d001c	 str         r0, [sp, #0x1C]
  07254	e59d301c	 ldr         r3, [sp, #0x1C]
  07258	e58d3004	 str         r3, [sp, #4]

; 2279 : 
; 2280 :                 m_bIncCount = FALSE;

  0725c	e59d303c	 ldr         r3, [sp, #0x3C]
  07260	e2832d06	 add         r2, r3, #6, 26
  07264	e3a03000	 mov         r3, #0
  07268	e5823000	 str         r3, [r2]

; 2281 :                 m_pOTG->dwPwrMgmt = MODE_SYSTEM_RESUME;

  0726c	e59d303c	 ldr         r3, [sp, #0x3C]
  07270	e2833e15	 add         r3, r3, #0x15, 28
  07274	e5933000	 ldr         r3, [r3]
  07278	e2832064	 add         r2, r3, #0x64
  0727c	e3a03002	 mov         r3, #2
  07280	e5823000	 str         r3, [r2]

; 2282 : 
; 2283 :                 StartUSBClock(TRUE);

  07284	e3a01001	 mov         r1, #1
  07288	e59d303c	 ldr         r3, [sp, #0x3C]
  0728c	e5933000	 ldr         r3, [r3]
  07290	e28330e4	 add         r3, r3, #0xE4
  07294	e59d003c	 ldr         r0, [sp, #0x3C]
  07298	e5933000	 ldr         r3, [r3]
  0729c	e1a0e00f	 mov         lr, pc
  072a0	e12fff13	 bx          r3

; 2284 : 
; 2285 :                 if(m_disconnected)

  072a4	e59d303c	 ldr         r3, [sp, #0x3C]
  072a8	e2833f63	 add         r3, r3, #0x63, 30
  072ac	e5933000	 ldr         r3, [r3]
  072b0	e3530000	 cmp         r3, #0
  072b4	0a0000a5	 beq         |$LN17@SetPowerSt@2|

; 2286 :                 {
; 2287 :                     if(a_device_present)

  072b8	e59d3008	 ldr         r3, [sp, #8]
  072bc	e3530000	 cmp         r3, #0
  072c0	0a00004a	 beq         |$LN16@SetPowerSt@2|

; 2288 :                     {
; 2289 :                         OUTREG8(&pGen->IntrUSBE, INTRUSB_ALL&~INTRUSB_SOF);

  072c4	e59d3000	 ldr         r3, [sp]
  072c8	e283200b	 add         r2, r3, #0xB
  072cc	e3a030f7	 mov         r3, #0xF7
  072d0	e5c23000	 strb        r3, [r2]

; 2290 :                         OUTREG16(&pGen->IntrTxE, 0xffff);

  072d4	e59d3000	 ldr         r3, [sp]
  072d8	e2832006	 add         r2, r3, #6
  072dc	e3a03cff	 mov         r3, #0xFF, 24
  072e0	e38330ff	 orr         r3, r3, #0xFF
  072e4	e5c23000	 strb        r3, [r2]
  072e8	e1a03423	 mov         r3, r3, lsr #8
  072ec	e5c23001	 strb        r3, [r2, #1]

; 2291 :                         OUTREG16(&pGen->IntrRxE, 0xfffe);

  072f0	e59d3000	 ldr         r3, [sp]
  072f4	e2832008	 add         r2, r3, #8
  072f8	e3a03cff	 mov         r3, #0xFF, 24
  072fc	e38330fe	 orr         r3, r3, #0xFE
  07300	e5c23000	 strb        r3, [r2]
  07304	e1a03423	 mov         r3, r3, lsr #8
  07308	e5c23001	 strb        r3, [r2, #1]

; 2292 : 
; 2293 :                         if (m_OTGRegCfg.DisableHighSpeed)

  0730c	e59d303c	 ldr         r3, [sp, #0x3C]
  07310	e2833c01	 add         r3, r3, #1, 24
  07314	e5933000	 ldr         r3, [r3]
  07318	e3530000	 cmp         r3, #0
  0731c	0a000022	 beq         |$LN15@SetPowerSt@2|

; 2294 : 						{
; 2295 :                             CLRREG8(&m_pOTG->pUsbGenRegs->Power, POWER_HSENABLE);

  07320	e59d303c	 ldr         r3, [sp, #0x3C]
  07324	e2833e15	 add         r3, r3, #0x15, 28
  07328	e5933000	 ldr         r3, [r3]
  0732c	e2833020	 add         r3, r3, #0x20
  07330	e5933000	 ldr         r3, [r3]
  07334	e2833001	 add         r3, r3, #1
  07338	e5d33000	 ldrb        r3, [r3]
  0733c	e1a02003	 mov         r2, r3
  07340	e3e03020	 mvn         r3, #0x20
  07344	e0023003	 and         r3, r2, r3
  07348	e20320ff	 and         r2, r3, #0xFF
  0734c	e59d303c	 ldr         r3, [sp, #0x3C]
  07350	e2833e15	 add         r3, r3, #0x15, 28
  07354	e5933000	 ldr         r3, [r3]
  07358	e2833020	 add         r3, r3, #0x20
  0735c	e5933000	 ldr         r3, [r3]
  07360	e2833001	 add         r3, r3, #1
  07364	e5c32000	 strb        r2, [r3]

; 2296 :                             SETREG8(&m_pOTG->pUsbGenRegs->Power, POWER_SOFTCONN);

  07368	e59d303c	 ldr         r3, [sp, #0x3C]
  0736c	e2833e15	 add         r3, r3, #0x15, 28
  07370	e5933000	 ldr         r3, [r3]
  07374	e2833020	 add         r3, r3, #0x20
  07378	e5933000	 ldr         r3, [r3]
  0737c	e2833001	 add         r3, r3, #1
  07380	e5d33000	 ldrb        r3, [r3]
  07384	e3833040	 orr         r3, r3, #0x40
  07388	e20320ff	 and         r2, r3, #0xFF
  0738c	e59d303c	 ldr         r3, [sp, #0x3C]
  07390	e2833e15	 add         r3, r3, #0x15, 28
  07394	e5933000	 ldr         r3, [r3]
  07398	e2833020	 add         r3, r3, #0x20
  0739c	e5933000	 ldr         r3, [r3]
  073a0	e2833001	 add         r3, r3, #1
  073a4	e5c32000	 strb        r2, [r3]

; 2297 : 						}
; 2298 :                         else

  073a8	ea00000f	 b           |$LN14@SetPowerSt@2|
  073ac		 |$LN15@SetPowerSt@2|

; 2299 :                             SETREG8(&m_pOTG->pUsbGenRegs->Power, POWER_HSENABLE|POWER_SOFTCONN);

  073ac	e59d303c	 ldr         r3, [sp, #0x3C]
  073b0	e2833e15	 add         r3, r3, #0x15, 28
  073b4	e5933000	 ldr         r3, [r3]
  073b8	e2833020	 add         r3, r3, #0x20
  073bc	e5933000	 ldr         r3, [r3]
  073c0	e2833001	 add         r3, r3, #1
  073c4	e5d33000	 ldrb        r3, [r3]
  073c8	e3833060	 orr         r3, r3, #0x60
  073cc	e20320ff	 and         r2, r3, #0xFF
  073d0	e59d303c	 ldr         r3, [sp, #0x3C]
  073d4	e2833e15	 add         r3, r3, #0x15, 28
  073d8	e5933000	 ldr         r3, [r3]
  073dc	e2833020	 add         r3, r3, #0x20
  073e0	e5933000	 ldr         r3, [r3]
  073e4	e2833001	 add         r3, r3, #1
  073e8	e5c32000	 strb        r2, [r3]
  073ec		 |$LN14@SetPowerSt@2|
  073ec	ea000056	 b           |$LN13@SetPowerSt@2|
  073f0		 |$LN16@SetPowerSt@2|

; 2300 :                     }
; 2301 :                     else if(b_device_present)

  073f0	e59d3004	 ldr         r3, [sp, #4]
  073f4	e3530000	 cmp         r3, #0
  073f8	0a000034	 beq         |$LN12@SetPowerSt@2|

; 2302 :                     {
; 2303 :                         OUTREG8(&pGen->IntrUSBE, INTRUSB_ALL&~INTRUSB_SOF);

  073fc	e59d3000	 ldr         r3, [sp]
  07400	e283200b	 add         r2, r3, #0xB
  07404	e3a030f7	 mov         r3, #0xF7
  07408	e5c23000	 strb        r3, [r2]

; 2304 :                         OUTREG16(&pGen->IntrTxE, 0xffff);

  0740c	e59d3000	 ldr         r3, [sp]
  07410	e2832006	 add         r2, r3, #6
  07414	e3a03cff	 mov         r3, #0xFF, 24
  07418	e38330ff	 orr         r3, r3, #0xFF
  0741c	e5c23000	 strb        r3, [r2]
  07420	e1a03423	 mov         r3, r3, lsr #8
  07424	e5c23001	 strb        r3, [r2, #1]

; 2305 :                         OUTREG16(&pGen->IntrRxE, 0xfffe);

  07428	e59d3000	 ldr         r3, [sp]
  0742c	e2832008	 add         r2, r3, #8
  07430	e3a03cff	 mov         r3, #0xFF, 24
  07434	e38330fe	 orr         r3, r3, #0xFE
  07438	e5c23000	 strb        r3, [r2]
  0743c	e1a03423	 mov         r3, r3, lsr #8
  07440	e5c23001	 strb        r3, [r2, #1]

; 2306 : 
; 2307 :                         m_dwStatus = STATUS_SESSION_RESTART;

  07444	e59d303c	 ldr         r3, [sp, #0x3C]
  07448	e28320f8	 add         r2, r3, #0xF8
  0744c	e3a03080	 mov         r3, #0x80
  07450	e5823000	 str         r3, [r2]

; 2308 :                         CLRREG8(&m_pOTG->pUsbGenRegs->Power, POWER_SUSPENDM);

  07454	e59d303c	 ldr         r3, [sp, #0x3C]
  07458	e2833e15	 add         r3, r3, #0x15, 28
  0745c	e5933000	 ldr         r3, [r3]
  07460	e2833020	 add         r3, r3, #0x20
  07464	e5933000	 ldr         r3, [r3]
  07468	e2833001	 add         r3, r3, #1
  0746c	e5d33000	 ldrb        r3, [r3]
  07470	e1a02003	 mov         r2, r3
  07474	e3e03002	 mvn         r3, #2
  07478	e0023003	 and         r3, r2, r3
  0747c	e20320ff	 and         r2, r3, #0xFF
  07480	e59d303c	 ldr         r3, [sp, #0x3C]
  07484	e2833e15	 add         r3, r3, #0x15, 28
  07488	e5933000	 ldr         r3, [r3]
  0748c	e2833020	 add         r3, r3, #0x20
  07490	e5933000	 ldr         r3, [r3]
  07494	e2833001	 add         r3, r3, #1
  07498	e5c32000	 strb        r2, [r3]

; 2309 :                         m_pTransceiver->SetVBusSource(TRUE);

  0749c	e3a01001	 mov         r1, #1
  074a0	e59d303c	 ldr         r3, [sp, #0x3C]
  074a4	e28330fc	 add         r3, r3, #0xFC
  074a8	e5932000	 ldr         r2, [r3]
  074ac	e59d303c	 ldr         r3, [sp, #0x3C]
  074b0	e28330fc	 add         r3, r3, #0xFC
  074b4	e5930000	 ldr         r0, [r3]
  074b8	e5923000	 ldr         r3, [r2]
  074bc	e2833004	 add         r3, r3, #4
  074c0	e5933000	 ldr         r3, [r3]
  074c4	e1a0e00f	 mov         lr, pc
  074c8	e12fff13	 bx          r3

; 2310 :                     }
; 2311 :                     else

  074cc	ea00001e	 b           |$LN11@SetPowerSt@2|
  074d0		 |$LN12@SetPowerSt@2|

; 2312 :                     {
; 2313 :                         StopUSBClock();

  074d0	e59d303c	 ldr         r3, [sp, #0x3C]
  074d4	e5933000	 ldr         r3, [r3]
  074d8	e28330e8	 add         r3, r3, #0xE8
  074dc	e59d003c	 ldr         r0, [sp, #0x3C]
  074e0	e5933000	 ldr         r3, [r3]
  074e4	e1a0e00f	 mov         lr, pc
  074e8	e12fff13	 bx          r3

; 2314 : 
; 2315 :                         m_pOTG->bClockStatus = FALSE;

  074ec	e59d303c	 ldr         r3, [sp, #0x3C]
  074f0	e2833e15	 add         r3, r3, #0x15, 28
  074f4	e5933000	 ldr         r3, [r3]
  074f8	e2832060	 add         r2, r3, #0x60
  074fc	e3a03000	 mov         r3, #0
  07500	e5823000	 str         r3, [r2]

; 2316 :                         UpdateDevicePower(m_hParent, D4, NULL);

  07504	e3a02000	 mov         r2, #0
  07508	e3a01004	 mov         r1, #4
  0750c	e59d303c	 ldr         r3, [sp, #0x3C]
  07510	e2833d05	 add         r3, r3, #5, 26
  07514	e5930000	 ldr         r0, [r3]
  07518	eb000000	 bl          |?UpdateDevicePower@@YAXPAXW4_CEDEVICE_POWER_STATE@@0@Z|

; 2317 :                         m_pTransceiver->EnableWakeupInterrupt(TRUE);

  0751c	e3a01001	 mov         r1, #1
  07520	e59d303c	 ldr         r3, [sp, #0x3C]
  07524	e28330fc	 add         r3, r3, #0xFC
  07528	e5932000	 ldr         r2, [r3]
  0752c	e59d303c	 ldr         r3, [sp, #0x3C]
  07530	e28330fc	 add         r3, r3, #0xFC
  07534	e5930000	 ldr         r0, [r3]
  07538	e5923000	 ldr         r3, [r2]
  0753c	e2833008	 add         r3, r3, #8
  07540	e5933000	 ldr         r3, [r3]
  07544	e1a0e00f	 mov         lr, pc
  07548	e12fff13	 bx          r3
  0754c		 |$LN11@SetPowerSt@2|
  0754c		 |$LN13@SetPowerSt@2|

; 2318 :                     }
; 2319 :                 }
; 2320 :                 else

  0754c	ea00003c	 b           |$LN10@SetPowerSt@2|
  07550		 |$LN17@SetPowerSt@2|

; 2321 :                 {
; 2322 :                     StopUSBClock();

  07550	e59d303c	 ldr         r3, [sp, #0x3C]
  07554	e5933000	 ldr         r3, [r3]
  07558	e28330e8	 add         r3, r3, #0xE8
  0755c	e59d003c	 ldr         r0, [sp, #0x3C]
  07560	e5933000	 ldr         r3, [r3]
  07564	e1a0e00f	 mov         lr, pc
  07568	e12fff13	 bx          r3

; 2323 : 
; 2324 :                     CLRREG8(&m_pOTG->pUsbGenRegs->Power, POWER_SUSPENDM);

  0756c	e59d303c	 ldr         r3, [sp, #0x3C]
  07570	e2833e15	 add         r3, r3, #0x15, 28
  07574	e5933000	 ldr         r3, [r3]
  07578	e2833020	 add         r3, r3, #0x20
  0757c	e5933000	 ldr         r3, [r3]
  07580	e2833001	 add         r3, r3, #1
  07584	e5d33000	 ldrb        r3, [r3]
  07588	e1a02003	 mov         r2, r3
  0758c	e3e03002	 mvn         r3, #2
  07590	e0023003	 and         r3, r2, r3
  07594	e20320ff	 and         r2, r3, #0xFF
  07598	e59d303c	 ldr         r3, [sp, #0x3C]
  0759c	e2833e15	 add         r3, r3, #0x15, 28
  075a0	e5933000	 ldr         r3, [r3]
  075a4	e2833020	 add         r3, r3, #0x20
  075a8	e5933000	 ldr         r3, [r3]
  075ac	e2833001	 add         r3, r3, #1
  075b0	e5c32000	 strb        r2, [r3]

; 2325 :                     m_pTransceiver->SetVBusSource(TRUE);

  075b4	e3a01001	 mov         r1, #1
  075b8	e59d303c	 ldr         r3, [sp, #0x3C]
  075bc	e28330fc	 add         r3, r3, #0xFC
  075c0	e5932000	 ldr         r2, [r3]
  075c4	e59d303c	 ldr         r3, [sp, #0x3C]
  075c8	e28330fc	 add         r3, r3, #0xFC
  075cc	e5930000	 ldr         r0, [r3]
  075d0	e5923000	 ldr         r3, [r2]
  075d4	e2833004	 add         r3, r3, #4
  075d8	e5933000	 ldr         r3, [r3]
  075dc	e1a0e00f	 mov         lr, pc
  075e0	e12fff13	 bx          r3

; 2326 : 
; 2327 :                     m_pOTG->bClockStatus = FALSE;

  075e4	e59d303c	 ldr         r3, [sp, #0x3C]
  075e8	e2833e15	 add         r3, r3, #0x15, 28
  075ec	e5933000	 ldr         r3, [r3]
  075f0	e2832060	 add         r2, r3, #0x60
  075f4	e3a03000	 mov         r3, #0
  075f8	e5823000	 str         r3, [r2]

; 2328 :                     UpdateDevicePower(m_hParent, D4, NULL);

  075fc	e3a02000	 mov         r2, #0
  07600	e3a01004	 mov         r1, #4
  07604	e59d303c	 ldr         r3, [sp, #0x3C]
  07608	e2833d05	 add         r3, r3, #5, 26
  0760c	e5930000	 ldr         r0, [r3]
  07610	eb000000	 bl          |?UpdateDevicePower@@YAXPAXW4_CEDEVICE_POWER_STATE@@0@Z|

; 2329 : 
; 2330 :                     m_pTransceiver->EnableWakeupInterrupt(TRUE);

  07614	e3a01001	 mov         r1, #1
  07618	e59d303c	 ldr         r3, [sp, #0x3C]
  0761c	e28330fc	 add         r3, r3, #0xFC
  07620	e5932000	 ldr         r2, [r3]
  07624	e59d303c	 ldr         r3, [sp, #0x3C]
  07628	e28330fc	 add         r3, r3, #0xFC
  0762c	e5930000	 ldr         r0, [r3]
  07630	e5923000	 ldr         r3, [r2]
  07634	e2833008	 add         r3, r3, #8
  07638	e5933000	 ldr         r3, [r3]
  0763c	e1a0e00f	 mov         lr, pc
  07640	e12fff13	 bx          r3
  07644		 |$LN10@SetPowerSt@2|

; 2331 :                 }
; 2332 : 			}
; 2333 : 			else

  07644	ea000026	 b           |$LN9@SetPowerSt@2|
  07648		 |$LN18@SetPowerSt@2|

; 2334 : 			{
; 2335 :                 // *** Transceiver is pure ULPI interface ***
; 2336 : 
; 2337 : 				// clock control moved to PowerUp
; 2338 : 
; 2339 : 				// resume transceiver configuration (may restore external VBUS control)
; 2340 : 				m_pTransceiver->Resume();

  07648	e59d303c	 ldr         r3, [sp, #0x3C]
  0764c	e28330fc	 add         r3, r3, #0xFC
  07650	e5932000	 ldr         r2, [r3]
  07654	e59d303c	 ldr         r3, [sp, #0x3C]
  07658	e28330fc	 add         r3, r3, #0xFC
  0765c	e5930000	 ldr         r0, [r3]
  07660	e5923000	 ldr         r3, [r2]
  07664	e2833028	 add         r3, r3, #0x28
  07668	e5933000	 ldr         r3, [r3]
  0766c	e1a0e00f	 mov         lr, pc
  07670	e12fff13	 bx          r3

; 2341 : 
; 2342 :                 OUTREG8(&pGen->IntrUSBE, INTRUSB_ALL&~INTRUSB_SOF);

  07674	e59d3000	 ldr         r3, [sp]
  07678	e283200b	 add         r2, r3, #0xB
  0767c	e3a030f7	 mov         r3, #0xF7
  07680	e5c23000	 strb        r3, [r2]

; 2343 :                 OUTREG16(&pGen->IntrTxE, 0xffff);

  07684	e59d3000	 ldr         r3, [sp]
  07688	e2832006	 add         r2, r3, #6
  0768c	e3a03cff	 mov         r3, #0xFF, 24
  07690	e38330ff	 orr         r3, r3, #0xFF
  07694	e5c23000	 strb        r3, [r2]
  07698	e1a03423	 mov         r3, r3, lsr #8
  0769c	e5c23001	 strb        r3, [r2, #1]

; 2344 :                 OUTREG16(&pGen->IntrRxE, 0xfffe);

  076a0	e59d3000	 ldr         r3, [sp]
  076a4	e2832008	 add         r2, r3, #8
  076a8	e3a03cff	 mov         r3, #0xFF, 24
  076ac	e38330fe	 orr         r3, r3, #0xFE
  076b0	e5c23000	 strb        r3, [r2]
  076b4	e1a03423	 mov         r3, r3, lsr #8
  076b8	e5c23001	 strb        r3, [r2, #1]

; 2345 : 
; 2346 :                 m_pOTG->dwPwrMgmt = MODE_SYSTEM_RESUME;

  076bc	e59d303c	 ldr         r3, [sp, #0x3C]
  076c0	e2833e15	 add         r3, r3, #0x15, 28
  076c4	e5933000	 ldr         r3, [r3]
  076c8	e2832064	 add         r2, r3, #0x64
  076cc	e3a03002	 mov         r3, #2
  076d0	e5823000	 str         r3, [r2]

; 2347 : 				
; 2348 :                 SetInterruptEvent(m_dwSysIntr);

  076d4	e59d303c	 ldr         r3, [sp, #0x3C]
  076d8	e2833f51	 add         r3, r3, #0x51, 30
  076dc	e5930000	 ldr         r0, [r3]
  076e0	eb000000	 bl          SetInterruptEvent
  076e4		 |$LN9@SetPowerSt@2|

; 2349 : 			}
; 2350 :         }
; 2351 :         break;

  076e4	ea0000e2	 b           |$LN20@SetPowerSt@2|
  076e8		 |$LN8@SetPowerSt@2|

; 2352 : 
; 2353 :         case D3:
; 2354 :         case D4:
; 2355 :         {
; 2356 :             pGen = m_pOTG->pUsbGenRegs;

  076e8	e59d303c	 ldr         r3, [sp, #0x3C]
  076ec	e2833e15	 add         r3, r3, #0x15, 28
  076f0	e5933000	 ldr         r3, [r3]
  076f4	e2833020	 add         r3, r3, #0x20
  076f8	e5933000	 ldr         r3, [r3]
  076fc	e58d3000	 str         r3, [sp]

; 2357 :             if (!m_disconnected)

  07700	e59d303c	 ldr         r3, [sp, #0x3C]
  07704	e2833f63	 add         r3, r3, #0x63, 30
  07708	e5933000	 ldr         r3, [r3]
  0770c	e3530000	 cmp         r3, #0
  07710	1a0000b8	 bne         |$LN7@SetPowerSt@2|

; 2358 :             {
; 2359 :                 m_pOTG->dwPwrMgmt = MODE_SYSTEM_SUSPEND;

  07714	e59d303c	 ldr         r3, [sp, #0x3C]
  07718	e2833e15	 add         r3, r3, #0x15, 28
  0771c	e5933000	 ldr         r3, [r3]
  07720	e2832064	 add         r2, r3, #0x64
  07724	e3a03001	 mov         r3, #1
  07728	e5823000	 str         r3, [r2]

; 2360 :                 DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("OTG Power Down\r\n")));

  0772c	e59f335c	 ldr         r3, [pc, #0x35C]
  07730	e5933440	 ldr         r3, [r3, #0x440]
  07734	e3130a02	 tst         r3, #2, 20
  07738	0a000004	 beq         |$LN24@SetPowerSt@2|
  0773c	e59f0354	 ldr         r0, [pc, #0x354]
  07740	eb000000	 bl          NKDbgPrintfW
  07744	e3a03001	 mov         r3, #1
  07748	e58d3020	 str         r3, [sp, #0x20]
  0774c	ea000001	 b           |$LN25@SetPowerSt@2|
  07750		 |$LN24@SetPowerSt@2|
  07750	e3a03000	 mov         r3, #0
  07754	e58d3020	 str         r3, [sp, #0x20]
  07758		 |$LN25@SetPowerSt@2|

; 2361 : 
; 2362 :                 if(m_pOTG->bClockStatus != TRUE)

  07758	e59d303c	 ldr         r3, [sp, #0x3C]
  0775c	e2833e15	 add         r3, r3, #0x15, 28
  07760	e5933000	 ldr         r3, [r3]
  07764	e2833060	 add         r3, r3, #0x60
  07768	e5933000	 ldr         r3, [r3]
  0776c	e3530001	 cmp         r3, #1
  07770	0a000001	 beq         |$LN6@SetPowerSt@2|
  07774	ea0000be	 b           |$LN5@SetPowerSt@2|

; 2363 :                     goto cleanUp;

  07778	ea0000bd	 b           |$cleanUp$41669|
  0777c		 |$LN6@SetPowerSt@2|

; 2364 : 
; 2365 :                 if (m_pOTG->pUsbGenRegs->DevCtl & DEVCTL_HOSTMODE)

  0777c	e59d303c	 ldr         r3, [sp, #0x3C]
  07780	e2833e15	 add         r3, r3, #0x15, 28
  07784	e5933000	 ldr         r3, [r3]
  07788	e2833020	 add         r3, r3, #0x20
  0778c	e5933000	 ldr         r3, [r3]
  07790	e2833060	 add         r3, r3, #0x60
  07794	e5d33000	 ldrb        r3, [r3]
  07798	e3130004	 tst         r3, #4
  0779c	0a00003f	 beq         |$LN4@SetPowerSt@2|

; 2366 :                 {
; 2367 :                     DEBUGMSG(ZONE_OTG_INFO, (TEXT("OTG Power Down SetDevicePowerState D3\r\n")));

  077a0	e59f32e8	 ldr         r3, [pc, #0x2E8]
  077a4	e5933440	 ldr         r3, [r3, #0x440]
  077a8	e3130a01	 tst         r3, #1, 20
  077ac	0a000004	 beq         |$LN26@SetPowerSt@2|
  077b0	e59f02dc	 ldr         r0, [pc, #0x2DC]
  077b4	eb000000	 bl          NKDbgPrintfW
  077b8	e3a03001	 mov         r3, #1
  077bc	e58d3024	 str         r3, [sp, #0x24]
  077c0	ea000001	 b           |$LN27@SetPowerSt@2|
  077c4		 |$LN26@SetPowerSt@2|
  077c4	e3a03000	 mov         r3, #0
  077c8	e58d3024	 str         r3, [sp, #0x24]
  077cc		 |$LN27@SetPowerSt@2|

; 2368 : 
; 2369 : 				    CLRREG8(&m_pOTG->pUsbGenRegs->DevCtl, DEVCTL_SESSION);

  077cc	e59d303c	 ldr         r3, [sp, #0x3C]
  077d0	e2833e15	 add         r3, r3, #0x15, 28
  077d4	e5933000	 ldr         r3, [r3]
  077d8	e2833020	 add         r3, r3, #0x20
  077dc	e5933000	 ldr         r3, [r3]
  077e0	e2833060	 add         r3, r3, #0x60
  077e4	e5d33000	 ldrb        r3, [r3]
  077e8	e1a02003	 mov         r2, r3
  077ec	e3e03001	 mvn         r3, #1
  077f0	e0023003	 and         r3, r2, r3
  077f4	e20320ff	 and         r2, r3, #0xFF
  077f8	e59d303c	 ldr         r3, [sp, #0x3C]
  077fc	e2833e15	 add         r3, r3, #0x15, 28
  07800	e5933000	 ldr         r3, [r3]
  07804	e2833020	 add         r3, r3, #0x20
  07808	e5933000	 ldr         r3, [r3]
  0780c	e2833060	 add         r3, r3, #0x60
  07810	e5c32000	 strb        r2, [r3]

; 2370 : 					
; 2371 : //					Sleep(100);
; 2372 : 
; 2373 :                     SETREG8(&m_pOTG->pUsbGenRegs->Power, POWER_EN_SUSPENDM);

  07814	e59d303c	 ldr         r3, [sp, #0x3C]
  07818	e2833e15	 add         r3, r3, #0x15, 28
  0781c	e5933000	 ldr         r3, [r3]
  07820	e2833020	 add         r3, r3, #0x20
  07824	e5933000	 ldr         r3, [r3]
  07828	e2833001	 add         r3, r3, #1
  0782c	e5d33000	 ldrb        r3, [r3]
  07830	e3833001	 orr         r3, r3, #1
  07834	e20320ff	 and         r2, r3, #0xFF
  07838	e59d303c	 ldr         r3, [sp, #0x3C]
  0783c	e2833e15	 add         r3, r3, #0x15, 28
  07840	e5933000	 ldr         r3, [r3]
  07844	e2833020	 add         r3, r3, #0x20
  07848	e5933000	 ldr         r3, [r3]
  0784c	e2833001	 add         r3, r3, #1
  07850	e5c32000	 strb        r2, [r3]

; 2374 :                     SETREG8(&m_pOTG->pUsbGenRegs->Power, POWER_SUSPENDM);

  07854	e59d303c	 ldr         r3, [sp, #0x3C]
  07858	e2833e15	 add         r3, r3, #0x15, 28
  0785c	e5933000	 ldr         r3, [r3]
  07860	e2833020	 add         r3, r3, #0x20
  07864	e5933000	 ldr         r3, [r3]
  07868	e2833001	 add         r3, r3, #1
  0786c	e5d33000	 ldrb        r3, [r3]
  07870	e3833002	 orr         r3, r3, #2
  07874	e20320ff	 and         r2, r3, #0xFF
  07878	e59d303c	 ldr         r3, [sp, #0x3C]
  0787c	e2833e15	 add         r3, r3, #0x15, 28
  07880	e5933000	 ldr         r3, [r3]
  07884	e2833020	 add         r3, r3, #0x20
  07888	e5933000	 ldr         r3, [r3]
  0788c	e2833001	 add         r3, r3, #1
  07890	e5c32000	 strb        r2, [r3]

; 2375 : 
; 2376 : 					Sleep(100);

  07894	e3a00064	 mov         r0, #0x64
  07898	eb000000	 bl          Sleep

; 2377 : 
; 2378 : 					// clock control moved to PowerDown
; 2379 :                 }
; 2380 :                 else

  0789c	ea000054	 b           |$LN3@SetPowerSt@2|
  078a0		 |$LN4@SetPowerSt@2|

; 2381 :                 {
; 2382 :                     DEBUGMSG(ZONE_OTG_INFO, (TEXT("OTG Power Down SetDevicePowerState D4\r\n")));

  078a0	e59f31e8	 ldr         r3, [pc, #0x1E8]
  078a4	e5933440	 ldr         r3, [r3, #0x440]
  078a8	e3130a01	 tst         r3, #1, 20
  078ac	0a000004	 beq         |$LN28@SetPowerSt@2|
  078b0	e59f01d4	 ldr         r0, [pc, #0x1D4]
  078b4	eb000000	 bl          NKDbgPrintfW
  078b8	e3a03001	 mov         r3, #1
  078bc	e58d3028	 str         r3, [sp, #0x28]
  078c0	ea000001	 b           |$LN29@SetPowerSt@2|
  078c4		 |$LN28@SetPowerSt@2|
  078c4	e3a03000	 mov         r3, #0
  078c8	e58d3028	 str         r3, [sp, #0x28]
  078cc		 |$LN29@SetPowerSt@2|

; 2383 : 
; 2384 :                     OUTREG8(&pGen->IntrUSBE, 0);

  078cc	e59d3000	 ldr         r3, [sp]
  078d0	e283200b	 add         r2, r3, #0xB
  078d4	e3a03000	 mov         r3, #0
  078d8	e5c23000	 strb        r3, [r2]

; 2385 :                     OUTREG16(&pGen->IntrTxE, 0);

  078dc	e59d3000	 ldr         r3, [sp]
  078e0	e2832006	 add         r2, r3, #6
  078e4	e3a03000	 mov         r3, #0
  078e8	e5c23000	 strb        r3, [r2]
  078ec	e1a03423	 mov         r3, r3, lsr #8
  078f0	e5c23001	 strb        r3, [r2, #1]

; 2386 :                     OUTREG16(&pGen->IntrRxE, 0);

  078f4	e59d3000	 ldr         r3, [sp]
  078f8	e2832008	 add         r2, r3, #8
  078fc	e3a03000	 mov         r3, #0
  07900	e5c23000	 strb        r3, [r2]
  07904	e1a03423	 mov         r3, r3, lsr #8
  07908	e5c23001	 strb        r3, [r2, #1]

; 2387 : 
; 2388 :                     // Simulate disconnect.
; 2389 :                     CLRREG8(&m_pOTG->pUsbGenRegs->Power, POWER_SOFTCONN);

  0790c	e59d303c	 ldr         r3, [sp, #0x3C]
  07910	e2833e15	 add         r3, r3, #0x15, 28
  07914	e5933000	 ldr         r3, [r3]
  07918	e2833020	 add         r3, r3, #0x20
  0791c	e5933000	 ldr         r3, [r3]
  07920	e2833001	 add         r3, r3, #1
  07924	e5d33000	 ldrb        r3, [r3]
  07928	e1a02003	 mov         r2, r3
  0792c	e3e03040	 mvn         r3, #0x40
  07930	e0023003	 and         r3, r2, r3
  07934	e20320ff	 and         r2, r3, #0xFF
  07938	e59d303c	 ldr         r3, [sp, #0x3C]
  0793c	e2833e15	 add         r3, r3, #0x15, 28
  07940	e5933000	 ldr         r3, [r3]
  07944	e2833020	 add         r3, r3, #0x20
  07948	e5933000	 ldr         r3, [r3]
  0794c	e2833001	 add         r3, r3, #1
  07950	e5c32000	 strb        r2, [r3]

; 2390 : 
; 2391 :                     // Read Interrupt status registers to clear outstanding interrupts
; 2392 :                     INREG8(&pGen->IntrUSB);

  07954	e59d3000	 ldr         r3, [sp]
  07958	e283300a	 add         r3, r3, #0xA
  0795c	e5d33000	 ldrb        r3, [r3]
  07960	e5cd302c	 strb        r3, [sp, #0x2C]

; 2393 :                     INREG16(&pGen->IntrTx);

  07964	e59d3000	 ldr         r3, [sp]
  07968	e2831002	 add         r1, r3, #2
  0796c	e5d13001	 ldrb        r3, [r1, #1]
  07970	e1a03403	 mov         r3, r3, lsl #8
  07974	e1a02803	 mov         r2, r3, lsl #16
  07978	e1a02822	 mov         r2, r2, lsr #16
  0797c	e5d13000	 ldrb        r3, [r1]
  07980	e1833002	 orr         r3, r3, r2
  07984	e1cd32be	 strh        r3, [sp, #0x2E]

; 2394 :                     INREG16(&pGen->IntrRx);

  07988	e59d3000	 ldr         r3, [sp]
  0798c	e2831004	 add         r1, r3, #4
  07990	e5d13001	 ldrb        r3, [r1, #1]
  07994	e1a03403	 mov         r3, r3, lsl #8
  07998	e1a02803	 mov         r2, r3, lsl #16
  0799c	e1a02822	 mov         r2, r2, lsr #16
  079a0	e5d13000	 ldrb        r3, [r1]
  079a4	e1833002	 orr         r3, r3, r2
  079a8	e1cd33b0	 strh        r3, [sp, #0x30]

; 2395 : 
; 2396 :                     SessionRequest(FALSE, FALSE);

  079ac	e3a02000	 mov         r2, #0
  079b0	e3a01000	 mov         r1, #0
  079b4	e59d303c	 ldr         r3, [sp, #0x3C]
  079b8	e5933000	 ldr         r3, [r3]
  079bc	e2833084	 add         r3, r3, #0x84
  079c0	e59d003c	 ldr         r0, [sp, #0x3C]
  079c4	e5933000	 ldr         r3, [r3]
  079c8	e1a0e00f	 mov         lr, pc
  079cc	e12fff13	 bx          r3

; 2397 : 
; 2398 :                     PowerDownDisconnect();

  079d0	e59d303c	 ldr         r3, [sp, #0x3C]
  079d4	e5933000	 ldr         r3, [r3]
  079d8	e28330d4	 add         r3, r3, #0xD4
  079dc	e59d003c	 ldr         r0, [sp, #0x3C]
  079e0	e5933000	 ldr         r3, [r3]
  079e4	e1a0e00f	 mov         lr, pc
  079e8	e12fff13	 bx          r3

; 2399 : 
; 2400 : 					Sleep(100);

  079ec	e3a00064	 mov         r0, #0x64
  079f0	eb000000	 bl          Sleep
  079f4		 |$LN3@SetPowerSt@2|

; 2401 : 
; 2402 : 					// clock control moved to PowerDown
; 2403 :                 }
; 2404 :             }
; 2405 :             else

  079f4	ea000012	 b           |$LN2@SetPowerSt@2|
  079f8		 |$LN7@SetPowerSt@2|

; 2406 :             {
; 2407 :                 if(m_pOTG->bClockStatus == TRUE)

  079f8	e59d303c	 ldr         r3, [sp, #0x3C]
  079fc	e2833e15	 add         r3, r3, #0x15, 28
  07a00	e5933000	 ldr         r3, [r3]
  07a04	e2833060	 add         r3, r3, #0x60
  07a08	e5933000	 ldr         r3, [r3]
  07a0c	e3530001	 cmp         r3, #1
  07a10	1a000005	 bne         |$LN1@SetPowerSt@2|

; 2408 :                 {
; 2409 : 	                m_pOTG->dwPwrMgmt = MODE_SYSTEM_SUSPEND;

  07a14	e59d303c	 ldr         r3, [sp, #0x3C]
  07a18	e2833e15	 add         r3, r3, #0x15, 28
  07a1c	e5933000	 ldr         r3, [r3]
  07a20	e2832064	 add         r2, r3, #0x64
  07a24	e3a03001	 mov         r3, #1
  07a28	e5823000	 str         r3, [r2]
  07a2c		 |$LN1@SetPowerSt@2|

; 2410 : 					// clock control moved to PowerDown
; 2411 :                 }
; 2412 : 
; 2413 :                 m_pOTG->dwPwrMgmt = MODE_SYSTEM_SUSPEND;

  07a2c	e59d303c	 ldr         r3, [sp, #0x3C]
  07a30	e2833e15	 add         r3, r3, #0x15, 28
  07a34	e5933000	 ldr         r3, [r3]
  07a38	e2832064	 add         r2, r3, #0x64
  07a3c	e3a03001	 mov         r3, #1
  07a40	e5823000	 str         r3, [r2]
  07a44		 |$LN2@SetPowerSt@2|

; 2414 :             }
; 2415 :             m_pTransceiver->EnableWakeupInterrupt(TRUE);

  07a44	e3a01001	 mov         r1, #1
  07a48	e59d303c	 ldr         r3, [sp, #0x3C]
  07a4c	e28330fc	 add         r3, r3, #0xFC
  07a50	e5932000	 ldr         r2, [r3]
  07a54	e59d303c	 ldr         r3, [sp, #0x3C]
  07a58	e28330fc	 add         r3, r3, #0xFC
  07a5c	e5930000	 ldr         r0, [r3]
  07a60	e5923000	 ldr         r3, [r2]
  07a64	e2833008	 add         r3, r3, #8
  07a68	e5933000	 ldr         r3, [r3]
  07a6c	e1a0e00f	 mov         lr, pc
  07a70	e12fff13	 bx          r3
  07a74		 |$LN20@SetPowerSt@2|
  07a74		 |$LN5@SetPowerSt@2|
  07a74		 |$cleanUp$41669|

; 2416 :         }
; 2417 :         break;
; 2418 :     }
; 2419 : cleanUp:
; 2420 :     return TRUE;

  07a74	e3a03001	 mov         r3, #1
  07a78	e58d300c	 str         r3, [sp, #0xC]

; 2421 : }

  07a7c	e59d000c	 ldr         r0, [sp, #0xC]
  07a80	e28dd034	 add         sp, sp, #0x34
  07a84	e89d6000	 ldmia       sp, {sp, lr}
  07a88	e12fff1e	 bx          lr
  07a8c		 |$LN40@SetPowerSt@2|
  07a8c		 |$LN41@SetPowerSt@2|
  07a8c	00000000	 DCD         |??_C@_1FA@FGNHMBFK@?$AAO?$AAT?$AAG?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAD?$AAo?$AAw?$AAn?$AA?5?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa@|
  07a90		 |$LN42@SetPowerSt@2|
  07a90	00000000	 DCD         |dpCurSettings|
  07a94		 |$LN43@SetPowerSt@2|
  07a94	00000000	 DCD         |??_C@_1FA@FMBCMIED@?$AAO?$AAT?$AAG?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAD?$AAo?$AAw?$AAn?$AA?5?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa@|
  07a98		 |$LN44@SetPowerSt@2|
  07a98	00000000	 DCD         |??_C@_1CC@KODBPIDB@?$AAO?$AAT?$AAG?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAD?$AAo?$AAw?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  07a9c		 |$M44086|

			 ENDP  ; |?SetPowerState@OMAPMHSUSBOTG@@UAAHW4_CEDEVICE_POWER_STATE@@@Z|, OMAPMHSUSBOTG::SetPowerState


  00158			 AREA	 |.pdata|, PDATA
|$T44099| DCD	|$LN5@PowerUp|
	DCD	0x40001c04
; Function compile flags: /Odtp

  07a9c			 AREA	 |.text|, CODE, ARM

  07a9c		 |?PowerUp@OMAPMHSUSBOTG@@UAAHXZ| PROC	; OMAPMHSUSBOTG::PowerUp

; 2440 : {

  07a9c		 |$LN5@PowerUp|
  07a9c	e1a0c00d	 mov         r12, sp
  07aa0	e92d0001	 stmdb       sp!, {r0}
  07aa4	e92d5000	 stmdb       sp!, {r12, lr}
  07aa8	e24dd004	 sub         sp, sp, #4
  07aac		 |$M44096|

; 2441 : 	m_bIncCount = FALSE;

  07aac	e59d300c	 ldr         r3, [sp, #0xC]
  07ab0	e2832d06	 add         r2, r3, #6, 26
  07ab4	e3a03000	 mov         r3, #0
  07ab8	e5823000	 str         r3, [r2]

; 2442 : 				
; 2443 :     StartUSBClock(TRUE);

  07abc	e3a01001	 mov         r1, #1
  07ac0	e59d300c	 ldr         r3, [sp, #0xC]
  07ac4	e5933000	 ldr         r3, [r3]
  07ac8	e28330e4	 add         r3, r3, #0xE4
  07acc	e59d000c	 ldr         r0, [sp, #0xC]
  07ad0	e5933000	 ldr         r3, [r3]
  07ad4	e1a0e00f	 mov         lr, pc
  07ad8	e12fff13	 bx          r3

; 2444 :     UpdateDevicePower(m_hParent, D0, NULL);

  07adc	e3a02000	 mov         r2, #0
  07ae0	e3a01000	 mov         r1, #0
  07ae4	e59d300c	 ldr         r3, [sp, #0xC]
  07ae8	e2833d05	 add         r3, r3, #5, 26
  07aec	e5930000	 ldr         r0, [r3]
  07af0	eb000000	 bl          |?UpdateDevicePower@@YAXPAXW4_CEDEVICE_POWER_STATE@@0@Z|

; 2445 :     return TRUE;

  07af4	e3a03001	 mov         r3, #1
  07af8	e58d3000	 str         r3, [sp]

; 2446 : }

  07afc	e59d0000	 ldr         r0, [sp]
  07b00	e28dd004	 add         sp, sp, #4
  07b04	e89d6000	 ldmia       sp, {sp, lr}
  07b08	e12fff1e	 bx          lr
  07b0c		 |$M44097|

			 ENDP  ; |?PowerUp@OMAPMHSUSBOTG@@UAAHXZ|, OMAPMHSUSBOTG::PowerUp


  00160			 AREA	 |.pdata|, PDATA
|$T44105| DCD	|$LN5@PowerDown|
	DCD	0x40002104
; Function compile flags: /Odtp

  07b0c			 AREA	 |.text|, CODE, ARM

  07b0c		 |?PowerDown@OMAPMHSUSBOTG@@UAAHXZ| PROC ; OMAPMHSUSBOTG::PowerDown

; 2465 : {

  07b0c		 |$LN5@PowerDown|
  07b0c	e1a0c00d	 mov         r12, sp
  07b10	e92d0001	 stmdb       sp!, {r0}
  07b14	e92d5000	 stmdb       sp!, {r12, lr}
  07b18	e24dd004	 sub         sp, sp, #4
  07b1c		 |$M44102|

; 2466 :     m_dwUSBUsageCount = 0;

  07b1c	e59d300c	 ldr         r3, [sp, #0xC]
  07b20	e2832e16	 add         r2, r3, #0x16, 28
  07b24	e3a03000	 mov         r3, #0
  07b28	e5823000	 str         r3, [r2]

; 2467 :     StopUSBClock();

  07b2c	e59d300c	 ldr         r3, [sp, #0xC]
  07b30	e5933000	 ldr         r3, [r3]
  07b34	e28330e8	 add         r3, r3, #0xE8
  07b38	e59d000c	 ldr         r0, [sp, #0xC]
  07b3c	e5933000	 ldr         r3, [r3]
  07b40	e1a0e00f	 mov         lr, pc
  07b44	e12fff13	 bx          r3

; 2468 : 
; 2469 :     m_pOTG->bClockStatus = FALSE;

  07b48	e59d300c	 ldr         r3, [sp, #0xC]
  07b4c	e2833e15	 add         r3, r3, #0x15, 28
  07b50	e5933000	 ldr         r3, [r3]
  07b54	e2832060	 add         r2, r3, #0x60
  07b58	e3a03000	 mov         r3, #0
  07b5c	e5823000	 str         r3, [r2]

; 2470 :     UpdateDevicePower(m_hParent, D4, NULL);

  07b60	e3a02000	 mov         r2, #0
  07b64	e3a01004	 mov         r1, #4
  07b68	e59d300c	 ldr         r3, [sp, #0xC]
  07b6c	e2833d05	 add         r3, r3, #5, 26
  07b70	e5930000	 ldr         r0, [r3]
  07b74	eb000000	 bl          |?UpdateDevicePower@@YAXPAXW4_CEDEVICE_POWER_STATE@@0@Z|

; 2471 :      return TRUE;

  07b78	e3a03001	 mov         r3, #1
  07b7c	e58d3000	 str         r3, [sp]

; 2472 : }

  07b80	e59d0000	 ldr         r0, [sp]
  07b84	e28dd004	 add         sp, sp, #4
  07b88	e89d6000	 ldmia       sp, {sp, lr}
  07b8c	e12fff1e	 bx          lr
  07b90		 |$M44103|

			 ENDP  ; |?PowerDown@OMAPMHSUSBOTG@@UAAHXZ|, OMAPMHSUSBOTG::PowerDown

	EXPORT	|?DelayByRegisterRead@OMAPMHSUSBOTG@@QAAXXZ| ; OMAPMHSUSBOTG::DelayByRegisterRead

  00168			 AREA	 |.pdata|, PDATA
|$T44110| DCD	|$LN8@DelayByReg|
	DCD	0x40001a04
; Function compile flags: /Odtp

  07b90			 AREA	 |.text|, CODE, ARM

  07b90		 |?DelayByRegisterRead@OMAPMHSUSBOTG@@QAAXXZ| PROC ; OMAPMHSUSBOTG::DelayByRegisterRead

; 2479 : {

  07b90		 |$LN8@DelayByReg|
  07b90	e1a0c00d	 mov         r12, sp
  07b94	e92d0001	 stmdb       sp!, {r0}
  07b98	e92d5000	 stmdb       sp!, {r12, lr}
  07b9c	e24dd00c	 sub         sp, sp, #0xC
  07ba0		 |$M44107|

; 2480 :     PCSP_MUSB_OTG_REGS pOtg;
; 2481 :     DWORD i;
; 2482 : 
; 2483 :     pOtg = m_pOTG->pUsbOtgRegs;

  07ba0	e59d3014	 ldr         r3, [sp, #0x14]
  07ba4	e2833e15	 add         r3, r3, #0x15, 28
  07ba8	e5933000	 ldr         r3, [r3]
  07bac	e2833018	 add         r3, r3, #0x18
  07bb0	e5933000	 ldr         r3, [r3]
  07bb4	e58d3004	 str         r3, [sp, #4]

; 2484 : 
; 2485 :     for(i=0;i<12;i++)

  07bb8	e3a03000	 mov         r3, #0
  07bbc	e58d3000	 str         r3, [sp]
  07bc0	ea000002	 b           |$LN3@DelayByReg|
  07bc4		 |$LN2@DelayByReg|
  07bc4	e59d3000	 ldr         r3, [sp]
  07bc8	e2833001	 add         r3, r3, #1
  07bcc	e58d3000	 str         r3, [sp]
  07bd0		 |$LN3@DelayByReg|
  07bd0	e59d3000	 ldr         r3, [sp]
  07bd4	e353000c	 cmp         r3, #0xC
  07bd8	2a000003	 bcs         |$LN1@DelayByReg|

; 2486 :     INREG32(&pOtg->OTG_Rev);

  07bdc	e59d3004	 ldr         r3, [sp, #4]
  07be0	e5933000	 ldr         r3, [r3]
  07be4	e58d3008	 str         r3, [sp, #8]
  07be8	eafffff5	 b           |$LN2@DelayByReg|
  07bec		 |$LN1@DelayByReg|

; 2487 : }

  07bec	e28dd00c	 add         sp, sp, #0xC
  07bf0	e89d6000	 ldmia       sp, {sp, lr}
  07bf4	e12fff1e	 bx          lr
  07bf8		 |$M44108|

			 ENDP  ; |?DelayByRegisterRead@OMAPMHSUSBOTG@@QAAXXZ|, OMAPMHSUSBOTG::DelayByRegisterRead


  00170			 AREA	 |.pdata|, PDATA
|$T44116| DCD	|$LN5@ContextRes|
	DCD	0x40000a04
; Function compile flags: /Odtp

  07bf8			 AREA	 |.text|, CODE, ARM

  07bf8		 |?ContextRestore@OMAPMHSUSBOTG@@UAAHXZ| PROC ; OMAPMHSUSBOTG::ContextRestore

; 2493 : {

  07bf8		 |$LN5@ContextRes|
  07bf8	e1a0c00d	 mov         r12, sp
  07bfc	e92d0001	 stmdb       sp!, {r0}
  07c00	e92d5000	 stmdb       sp!, {r12, lr}
  07c04	e24dd004	 sub         sp, sp, #4
  07c08		 |$M44113|

; 2494 :     // We do nothing here. Everything necessary is moved to SetPowerState(D2)
; 2495 :     return TRUE;

  07c08	e3a03001	 mov         r3, #1
  07c0c	e58d3000	 str         r3, [sp]

; 2496 : }

  07c10	e59d0000	 ldr         r0, [sp]
  07c14	e28dd004	 add         sp, sp, #4
  07c18	e89d6000	 ldmia       sp, {sp, lr}
  07c1c	e12fff1e	 bx          lr
  07c20		 |$M44114|

			 ENDP  ; |?ContextRestore@OMAPMHSUSBOTG@@UAAHXZ|, OMAPMHSUSBOTG::ContextRestore

	EXPORT	|??_C@_1CO@DLKKJIDB@?$AAR?$AAe?$AAs?$AAt?$AAo?$AAr?$AAe?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAS?$AAi?$AAg?$AAn?$AAa?$AAl?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@PAEGICHA@?$AAA?$AAs?$AAs?$AAi?$AAg?$AAn?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAs?$AA?5?$AAt?$AAo?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?LinkRecoveryProcedure1@OMAPMHSUSBOTG@@QAAHXZ| ; OMAPMHSUSBOTG::LinkRecoveryProcedure1
	IMPORT	|GPIOClose|
	IMPORT	|GPIOClrBit|
	IMPORT	|GPIOSetBit|
	IMPORT	|GPIOSetMode|
	IMPORT	|GPIOOpen|

  00178			 AREA	 |.pdata|, PDATA
|$T44126| DCD	|$LN10@LinkRecove|
	DCD	0x4000d104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@DLKKJIDB@?$AAR?$AAe?$AAs?$AAt?$AAo?$AAr?$AAe?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAS?$AAi?$AAg?$AAn?$AAa?$AAl?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, "o", 0x0, "r", 0x0, "e"
	DCB	0x0, " ", 0x0, "U", 0x0, "L", 0x0, "P", 0x0, "I", 0x0, " "
	DCB	0x0, "S", 0x0, "i", 0x0, "g", 0x0, "n", 0x0, "a", 0x0, "l"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@PAEGICHA@?$AAA?$AAs?$AAs?$AAi?$AAg?$AAn?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAs?$AA?5?$AAt?$AAo?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA?$AN?$AA?6?$AA?$AA@| DCB "A"
	DCB	0x0, "s", 0x0, "s", 0x0, "i", 0x0, "g", 0x0, "n", 0x0, " "
	DCB	0x0, "U", 0x0, "L", 0x0, "P", 0x0, "I", 0x0, " ", 0x0, "s"
	DCB	0x0, "i", 0x0, "g", 0x0, "n", 0x0, "a", 0x0, "l", 0x0, "s"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "G", 0x0, "P"
	DCB	0x0, "I", 0x0, "O", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  07c20			 AREA	 |.text|, CODE, ARM

  07c20		 |?LinkRecoveryProcedure1@OMAPMHSUSBOTG@@QAAHXZ| PROC ; OMAPMHSUSBOTG::LinkRecoveryProcedure1

; 2502 : {

  07c20		 |$LN10@LinkRecove|
  07c20	e1a0c00d	 mov         r12, sp
  07c24	e92d0001	 stmdb       sp!, {r0}
  07c28	e92d5000	 stmdb       sp!, {r12, lr}
  07c2c	e24dd020	 sub         sp, sp, #0x20
  07c30		 |$M44123|

; 2503 :     OMAP_SYSC_PADCONFS_REGS   *pConfig=NULL;

  07c30	e3a03000	 mov         r3, #0
  07c34	e58d3004	 str         r3, [sp, #4]

; 2504 :     HANDLE hGpio=NULL;

  07c38	e3a03000	 mov         r3, #0
  07c3c	e58d3008	 str         r3, [sp, #8]

; 2505 :     BOOL ret = FALSE;

  07c40	e3a03000	 mov         r3, #0
  07c44	e58d3000	 str         r3, [sp]

; 2506 : 
; 2507 :     pConfig = (OMAP_SYSC_PADCONFS_REGS*)m_pOTG->pPadControlRegs;

  07c48	e59d3028	 ldr         r3, [sp, #0x28]
  07c4c	e2833e15	 add         r3, r3, #0x15, 28
  07c50	e5933000	 ldr         r3, [r3]
  07c54	e2833028	 add         r3, r3, #0x28
  07c58	e5933000	 ldr         r3, [r3]
  07c5c	e58d3004	 str         r3, [sp, #4]

; 2508 :     hGpio = GPIOOpen();

  07c60	eb000000	 bl          GPIOOpen
  07c64	e58d0010	 str         r0, [sp, #0x10]
  07c68	e59d3010	 ldr         r3, [sp, #0x10]
  07c6c	e58d3008	 str         r3, [sp, #8]

; 2509 : 
; 2510 :     RETAILMSG(1, (TEXT("Assign ULPI signals to GPIO\r\n")));

  07c70	e59f02e8	 ldr         r0, [pc, #0x2E8]
  07c74	eb000000	 bl          NKDbgPrintfW
  07c78	e3a03001	 mov         r3, #1
  07c7c	e58d3014	 str         r3, [sp, #0x14]
  07c80	ea000001	 b           |$LN5@LinkRecove|
  07c84	e3a03000	 mov         r3, #0
  07c88	e58d3014	 str         r3, [sp, #0x14]
  07c8c		 |$LN5@LinkRecove|

; 2511 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_STP, (INPUT_DISABLE | PULL_INACTIVE | MUX_MODE_4));          /*HSUSB0_STP*/

  07c8c	e59d3004	 ldr         r3, [sp, #4]
  07c90	e2832f5d	 add         r2, r3, #0x5D, 30
  07c94	e3a03004	 mov         r3, #4
  07c98	e1c230b0	 strh        r3, [r2]

; 2512 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA0, (INPUT_DISABLE | PULL_INACTIVE | MUX_MODE_4));        /*HSUSB0_DATA0*/

  07c9c	e59d3004	 ldr         r3, [sp, #4]
  07ca0	e2833c01	 add         r3, r3, #1, 24
  07ca4	e283207a	 add         r2, r3, #0x7A
  07ca8	e3a03004	 mov         r3, #4
  07cac	e1c230b0	 strh        r3, [r2]

; 2513 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA1, (INPUT_DISABLE | PULL_INACTIVE | MUX_MODE_4));        /*HSUSB0_DATA1*/

  07cb0	e59d3004	 ldr         r3, [sp, #4]
  07cb4	e2832f5f	 add         r2, r3, #0x5F, 30
  07cb8	e3a03004	 mov         r3, #4
  07cbc	e1c230b0	 strh        r3, [r2]

; 2514 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA2, (INPUT_DISABLE | PULL_INACTIVE | MUX_MODE_4));        /*HSUSB0_DATA2*/

  07cc0	e59d3004	 ldr         r3, [sp, #4]
  07cc4	e2833c01	 add         r3, r3, #1, 24
  07cc8	e283207e	 add         r2, r3, #0x7E
  07ccc	e3a03004	 mov         r3, #4
  07cd0	e1c230b0	 strh        r3, [r2]

; 2515 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA3, (INPUT_DISABLE | PULL_INACTIVE | MUX_MODE_4));        /*HSUSB0_DATA3*/

  07cd4	e59d3004	 ldr         r3, [sp, #4]
  07cd8	e2832d06	 add         r2, r3, #6, 26
  07cdc	e3a03004	 mov         r3, #4
  07ce0	e1c230b0	 strh        r3, [r2]

; 2516 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA4, (INPUT_DISABLE | PULL_INACTIVE | MUX_MODE_4));        /*HSUSB0_DATA4*/

  07ce4	e59d3004	 ldr         r3, [sp, #4]
  07ce8	e2833c01	 add         r3, r3, #1, 24
  07cec	e2832082	 add         r2, r3, #0x82
  07cf0	e3a03004	 mov         r3, #4
  07cf4	e1c230b0	 strh        r3, [r2]

; 2517 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA5, (INPUT_DISABLE | PULL_INACTIVE | MUX_MODE_4));        /*HSUSB0_DATA5*/

  07cf8	e59d3004	 ldr         r3, [sp, #4]
  07cfc	e2832f61	 add         r2, r3, #0x61, 30
  07d00	e3a03004	 mov         r3, #4
  07d04	e1c230b0	 strh        r3, [r2]

; 2518 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA6, (INPUT_DISABLE | PULL_INACTIVE | MUX_MODE_4));        /*HSUSB0_DATA6*/

  07d08	e59d3004	 ldr         r3, [sp, #4]
  07d0c	e2833c01	 add         r3, r3, #1, 24
  07d10	e2832086	 add         r2, r3, #0x86
  07d14	e3a03004	 mov         r3, #4
  07d18	e1c230b0	 strh        r3, [r2]

; 2519 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA7, (INPUT_DISABLE | PULL_INACTIVE | MUX_MODE_4));        /*HSUSB0_DATA7*/

  07d1c	e59d3004	 ldr         r3, [sp, #4]
  07d20	e2832f62	 add         r2, r3, #0x62, 30
  07d24	e3a03004	 mov         r3, #4
  07d28	e1c230b0	 strh        r3, [r2]

; 2520 : 
; 2521 :     // Do the recover stuff here!
; 2522 :     GPIOSetMode(hGpio, 121, GPIO_DIR_OUTPUT); // STP

  07d2c	e3a02000	 mov         r2, #0
  07d30	e3a01079	 mov         r1, #0x79
  07d34	e59d0008	 ldr         r0, [sp, #8]
  07d38	eb000000	 bl          GPIOSetMode

; 2523 :     GPIOSetMode(hGpio, 125, GPIO_DIR_OUTPUT); // D0

  07d3c	e3a02000	 mov         r2, #0
  07d40	e3a0107d	 mov         r1, #0x7D
  07d44	e59d0008	 ldr         r0, [sp, #8]
  07d48	eb000000	 bl          GPIOSetMode

; 2524 :     GPIOSetMode(hGpio, 130, GPIO_DIR_OUTPUT); // D1

  07d4c	e3a02000	 mov         r2, #0
  07d50	e3a01082	 mov         r1, #0x82
  07d54	e59d0008	 ldr         r0, [sp, #8]
  07d58	eb000000	 bl          GPIOSetMode

; 2525 :     GPIOSetMode(hGpio, 131, GPIO_DIR_OUTPUT); // D2

  07d5c	e3a02000	 mov         r2, #0
  07d60	e3a01083	 mov         r1, #0x83
  07d64	e59d0008	 ldr         r0, [sp, #8]
  07d68	eb000000	 bl          GPIOSetMode

; 2526 :     GPIOSetMode(hGpio, 169, GPIO_DIR_OUTPUT); // D3

  07d6c	e3a02000	 mov         r2, #0
  07d70	e3a010a9	 mov         r1, #0xA9
  07d74	e59d0008	 ldr         r0, [sp, #8]
  07d78	eb000000	 bl          GPIOSetMode

; 2527 :     GPIOSetMode(hGpio, 188, GPIO_DIR_OUTPUT); // D4

  07d7c	e3a02000	 mov         r2, #0
  07d80	e3a010bc	 mov         r1, #0xBC
  07d84	e59d0008	 ldr         r0, [sp, #8]
  07d88	eb000000	 bl          GPIOSetMode

; 2528 :     GPIOSetMode(hGpio, 189, GPIO_DIR_OUTPUT); // D5

  07d8c	e3a02000	 mov         r2, #0
  07d90	e3a010bd	 mov         r1, #0xBD
  07d94	e59d0008	 ldr         r0, [sp, #8]
  07d98	eb000000	 bl          GPIOSetMode

; 2529 :     GPIOSetMode(hGpio, 190, GPIO_DIR_OUTPUT); // D6

  07d9c	e3a02000	 mov         r2, #0
  07da0	e3a010be	 mov         r1, #0xBE
  07da4	e59d0008	 ldr         r0, [sp, #8]
  07da8	eb000000	 bl          GPIOSetMode

; 2530 :     GPIOSetMode(hGpio, 191, GPIO_DIR_OUTPUT); // D7

  07dac	e3a02000	 mov         r2, #0
  07db0	e3a010bf	 mov         r1, #0xBF
  07db4	e59d0008	 ldr         r0, [sp, #8]
  07db8	eb000000	 bl          GPIOSetMode

; 2531 : 
; 2532 :     // Attempt recovery procedure 1
; 2533 :     //RETAILMSG(1, (TEXT("Attempt Recovery Procedure 1\r\n")));
; 2534 : 
; 2535 :     GPIOSetBit(hGpio, 121); // Set   STP

  07dbc	e3a01079	 mov         r1, #0x79
  07dc0	e59d0008	 ldr         r0, [sp, #8]
  07dc4	eb000000	 bl          GPIOSetBit

; 2536 :     GPIOSetBit(hGpio, 190); // Set   D6

  07dc8	e3a010be	 mov         r1, #0xBE
  07dcc	e59d0008	 ldr         r0, [sp, #8]
  07dd0	eb000000	 bl          GPIOSetBit

; 2537 :     GPIOClrBit(hGpio, 191); // Clear D7

  07dd4	e3a010bf	 mov         r1, #0xBF
  07dd8	e59d0008	 ldr         r0, [sp, #8]
  07ddc	eb000000	 bl          GPIOClrBit

; 2538 :     GPIOClrBit(hGpio, 125); // Clear D0

  07de0	e3a0107d	 mov         r1, #0x7D
  07de4	e59d0008	 ldr         r0, [sp, #8]
  07de8	eb000000	 bl          GPIOClrBit

; 2539 :     GPIOClrBit(hGpio, 130); // Clear D1

  07dec	e3a01082	 mov         r1, #0x82
  07df0	e59d0008	 ldr         r0, [sp, #8]
  07df4	eb000000	 bl          GPIOClrBit

; 2540 :     GPIOClrBit(hGpio, 131); // Clear D2

  07df8	e3a01083	 mov         r1, #0x83
  07dfc	e59d0008	 ldr         r0, [sp, #8]
  07e00	eb000000	 bl          GPIOClrBit

; 2541 :     GPIOClrBit(hGpio, 169); // Clear D3

  07e04	e3a010a9	 mov         r1, #0xA9
  07e08	e59d0008	 ldr         r0, [sp, #8]
  07e0c	eb000000	 bl          GPIOClrBit

; 2542 :     GPIOClrBit(hGpio, 188); // Clear D4

  07e10	e3a010bc	 mov         r1, #0xBC
  07e14	e59d0008	 ldr         r0, [sp, #8]
  07e18	eb000000	 bl          GPIOClrBit

; 2543 :     GPIOClrBit(hGpio, 189); // Clear D5

  07e1c	e3a010bd	 mov         r1, #0xBD
  07e20	e59d0008	 ldr         r0, [sp, #8]
  07e24	eb000000	 bl          GPIOClrBit

; 2544 : 
; 2545 :     DelayByRegisterRead();

  07e28	e59d0028	 ldr         r0, [sp, #0x28]
  07e2c	eb000000	 bl          |?DelayByRegisterRead@OMAPMHSUSBOTG@@QAAXXZ|

; 2546 : 
; 2547 :     GPIOClrBit(hGpio, 190); // Clear D6

  07e30	e3a010be	 mov         r1, #0xBE
  07e34	e59d0008	 ldr         r0, [sp, #8]
  07e38	eb000000	 bl          GPIOClrBit

; 2548 :     DelayByRegisterRead();

  07e3c	e59d0028	 ldr         r0, [sp, #0x28]
  07e40	eb000000	 bl          |?DelayByRegisterRead@OMAPMHSUSBOTG@@QAAXXZ|

; 2549 :     GPIOClrBit(hGpio, 121); // Clear STP

  07e44	e3a01079	 mov         r1, #0x79
  07e48	e59d0008	 ldr         r0, [sp, #8]
  07e4c	eb000000	 bl          GPIOClrBit

; 2550 : 
; 2551 :     GPIOClose(hGpio);

  07e50	e59d0008	 ldr         r0, [sp, #8]
  07e54	eb000000	 bl          GPIOClose

; 2552 : 
; 2553 :     RETAILMSG(1, (TEXT("Restore ULPI Signals\r\n")));

  07e58	e59f00fc	 ldr         r0, [pc, #0xFC]
  07e5c	eb000000	 bl          NKDbgPrintfW
  07e60	e3a03001	 mov         r3, #1
  07e64	e58d3018	 str         r3, [sp, #0x18]
  07e68	ea000001	 b           |$LN7@LinkRecove|
  07e6c	e3a03000	 mov         r3, #0
  07e70	e58d3018	 str         r3, [sp, #0x18]
  07e74		 |$LN7@LinkRecove|

; 2554 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_STP, (OFF_OUTPUT_PULL_INACTIVE | INPUT_DISABLE | PULL_UP | MUX_MODE_0));          /*HSUSB0_STP*/

  07e74	e59d3004	 ldr         r3, [sp, #4]
  07e78	e2832f5d	 add         r2, r3, #0x5D, 30
  07e7c	e3a03f86	 mov         r3, #0x86, 30
  07e80	e1c230b0	 strh        r3, [r2]

; 2555 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA0, (OFF_INPUT_PULL_DOWN | INPUT_ENABLE | PULL_INACTIVE | MUX_MODE_0));        /*HSUSB0_DATA0*/

  07e84	e59d3004	 ldr         r3, [sp, #4]
  07e88	e2833c01	 add         r3, r3, #1, 24
  07e8c	e283207a	 add         r2, r3, #0x7A
  07e90	e3a03c17	 mov         r3, #0x17, 24
  07e94	e1c230b0	 strh        r3, [r2]

; 2556 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA1, (OFF_INPUT_PULL_DOWN | INPUT_ENABLE | PULL_INACTIVE | MUX_MODE_0));        /*HSUSB0_DATA1*/

  07e98	e59d3004	 ldr         r3, [sp, #4]
  07e9c	e2832f5f	 add         r2, r3, #0x5F, 30
  07ea0	e3a03c17	 mov         r3, #0x17, 24
  07ea4	e1c230b0	 strh        r3, [r2]

; 2557 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA2, (OFF_INPUT_PULL_DOWN | INPUT_ENABLE | PULL_INACTIVE | MUX_MODE_0));        /*HSUSB0_DATA2*/

  07ea8	e59d3004	 ldr         r3, [sp, #4]
  07eac	e2833c01	 add         r3, r3, #1, 24
  07eb0	e283207e	 add         r2, r3, #0x7E
  07eb4	e3a03c17	 mov         r3, #0x17, 24
  07eb8	e1c230b0	 strh        r3, [r2]

; 2558 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA3, (OFF_INPUT_PULL_DOWN | INPUT_ENABLE | PULL_INACTIVE | MUX_MODE_0));        /*HSUSB0_DATA3*/

  07ebc	e59d3004	 ldr         r3, [sp, #4]
  07ec0	e2832d06	 add         r2, r3, #6, 26
  07ec4	e3a03c17	 mov         r3, #0x17, 24
  07ec8	e1c230b0	 strh        r3, [r2]

; 2559 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA4, (OFF_INPUT_PULL_DOWN | INPUT_ENABLE | PULL_INACTIVE | MUX_MODE_0));        /*HSUSB0_DATA4*/

  07ecc	e59d3004	 ldr         r3, [sp, #4]
  07ed0	e2833c01	 add         r3, r3, #1, 24
  07ed4	e2832082	 add         r2, r3, #0x82
  07ed8	e3a03c17	 mov         r3, #0x17, 24
  07edc	e1c230b0	 strh        r3, [r2]

; 2560 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA5, (OFF_INPUT_PULL_DOWN | INPUT_ENABLE | PULL_INACTIVE | MUX_MODE_0));        /*HSUSB0_DATA5*/

  07ee0	e59d3004	 ldr         r3, [sp, #4]
  07ee4	e2832f61	 add         r2, r3, #0x61, 30
  07ee8	e3a03c17	 mov         r3, #0x17, 24
  07eec	e1c230b0	 strh        r3, [r2]

; 2561 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA6, (OFF_INPUT_PULL_DOWN | INPUT_ENABLE | PULL_INACTIVE | MUX_MODE_0));        /*HSUSB0_DATA6*/

  07ef0	e59d3004	 ldr         r3, [sp, #4]
  07ef4	e2833c01	 add         r3, r3, #1, 24
  07ef8	e2832086	 add         r2, r3, #0x86
  07efc	e3a03c17	 mov         r3, #0x17, 24
  07f00	e1c230b0	 strh        r3, [r2]

; 2562 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA7, (OFF_INPUT_PULL_DOWN | INPUT_ENABLE | PULL_INACTIVE | MUX_MODE_0));        /*HSUSB0_DATA7*/

  07f04	e59d3004	 ldr         r3, [sp, #4]
  07f08	e2832f62	 add         r2, r3, #0x62, 30
  07f0c	e3a03c17	 mov         r3, #0x17, 24
  07f10	e1c230b0	 strh        r3, [r2]

; 2563 : 
; 2564 :     if((ReadULPIReg( m_pOTG, ULPI_VENDORID_LOW_R)))

  07f14	e3a02000	 mov         r2, #0
  07f18	e59d3028	 ldr         r3, [sp, #0x28]
  07f1c	e2833e15	 add         r3, r3, #0x15, 28
  07f20	e5931000	 ldr         r1, [r3]
  07f24	e59d0028	 ldr         r0, [sp, #0x28]
  07f28	eb000000	 bl          |?ReadULPIReg@OMAPMHSUSBOTG@@QAAEPAUHSMUSB_T@@E@Z|
  07f2c	e5cd001c	 strb        r0, [sp, #0x1C]
  07f30	e5dd301c	 ldrb        r3, [sp, #0x1C]
  07f34	e3530000	 cmp         r3, #0
  07f38	0a000001	 beq         |$LN1@LinkRecove|

; 2565 :     {
; 2566 :         //RETAILMSG(1, (TEXT("Recovery Procedure 1. ULPI Link Functional\r\n")));
; 2567 :         ret = TRUE;

  07f3c	e3a03001	 mov         r3, #1
  07f40	e58d3000	 str         r3, [sp]
  07f44		 |$LN1@LinkRecove|

; 2568 :     }
; 2569 : 
; 2570 :     return ret;

  07f44	e59d3000	 ldr         r3, [sp]
  07f48	e58d300c	 str         r3, [sp, #0xC]

; 2571 : }

  07f4c	e59d000c	 ldr         r0, [sp, #0xC]
  07f50	e28dd020	 add         sp, sp, #0x20
  07f54	e89d6000	 ldmia       sp, {sp, lr}
  07f58	e12fff1e	 bx          lr
  07f5c		 |$LN11@LinkRecove|
  07f5c		 |$LN12@LinkRecove|
  07f5c	00000000	 DCD         |??_C@_1CO@DLKKJIDB@?$AAR?$AAe?$AAs?$AAt?$AAo?$AAr?$AAe?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAS?$AAi?$AAg?$AAn?$AAa?$AAl?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  07f60		 |$LN13@LinkRecove|
  07f60	00000000	 DCD         |??_C@_1DM@PAEGICHA@?$AAA?$AAs?$AAs?$AAi?$AAg?$AAn?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAs?$AA?5?$AAt?$AAo?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA?$AN?$AA?6?$AA?$AA@|
  07f64		 |$M44124|

			 ENDP  ; |?LinkRecoveryProcedure1@OMAPMHSUSBOTG@@QAAHXZ|, OMAPMHSUSBOTG::LinkRecoveryProcedure1

	EXPORT	|?LinkRecoveryProcedure2@OMAPMHSUSBOTG@@QAAHXZ| ; OMAPMHSUSBOTG::LinkRecoveryProcedure2

  00180			 AREA	 |.pdata|, PDATA
|$T44139| DCD	|$LN10@LinkRecove@2|
	DCD	0x4000d304
; Function compile flags: /Odtp

  07f64			 AREA	 |.text|, CODE, ARM

  07f64		 |?LinkRecoveryProcedure2@OMAPMHSUSBOTG@@QAAHXZ| PROC ; OMAPMHSUSBOTG::LinkRecoveryProcedure2

; 2578 : {

  07f64		 |$LN10@LinkRecove@2|
  07f64	e1a0c00d	 mov         r12, sp
  07f68	e92d0001	 stmdb       sp!, {r0}
  07f6c	e92d5000	 stmdb       sp!, {r12, lr}
  07f70	e24dd020	 sub         sp, sp, #0x20
  07f74		 |$M44136|

; 2579 :     OMAP_SYSC_PADCONFS_REGS   *pConfig=NULL;

  07f74	e3a03000	 mov         r3, #0
  07f78	e58d3004	 str         r3, [sp, #4]

; 2580 :     HANDLE hGpio=NULL;

  07f7c	e3a03000	 mov         r3, #0
  07f80	e58d3008	 str         r3, [sp, #8]

; 2581 :     BOOL ret = FALSE;

  07f84	e3a03000	 mov         r3, #0
  07f88	e58d3000	 str         r3, [sp]

; 2582 : 
; 2583 :     pConfig = (OMAP_SYSC_PADCONFS_REGS*)m_pOTG->pPadControlRegs;

  07f8c	e59d3028	 ldr         r3, [sp, #0x28]
  07f90	e2833e15	 add         r3, r3, #0x15, 28
  07f94	e5933000	 ldr         r3, [r3]
  07f98	e2833028	 add         r3, r3, #0x28
  07f9c	e5933000	 ldr         r3, [r3]
  07fa0	e58d3004	 str         r3, [sp, #4]

; 2584 :     hGpio = GPIOOpen();

  07fa4	eb000000	 bl          GPIOOpen
  07fa8	e58d0010	 str         r0, [sp, #0x10]
  07fac	e59d3010	 ldr         r3, [sp, #0x10]
  07fb0	e58d3008	 str         r3, [sp, #8]

; 2585 : 
; 2586 :     RETAILMSG(1, (TEXT("Assign ULPI signals to GPIO\r\n")));

  07fb4	e59f02f0	 ldr         r0, [pc, #0x2F0]
  07fb8	eb000000	 bl          NKDbgPrintfW
  07fbc	e3a03001	 mov         r3, #1
  07fc0	e58d3014	 str         r3, [sp, #0x14]
  07fc4	ea000001	 b           |$LN5@LinkRecove@2|
  07fc8	e3a03000	 mov         r3, #0
  07fcc	e58d3014	 str         r3, [sp, #0x14]
  07fd0		 |$LN5@LinkRecove@2|

; 2587 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_STP, (INPUT_DISABLE | PULL_INACTIVE | MUX_MODE_4));          /*HSUSB0_STP*/

  07fd0	e59d3004	 ldr         r3, [sp, #4]
  07fd4	e2832f5d	 add         r2, r3, #0x5D, 30
  07fd8	e3a03004	 mov         r3, #4
  07fdc	e1c230b0	 strh        r3, [r2]

; 2588 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA0, (INPUT_DISABLE | PULL_INACTIVE | MUX_MODE_4));        /*HSUSB0_DATA0*/

  07fe0	e59d3004	 ldr         r3, [sp, #4]
  07fe4	e2833c01	 add         r3, r3, #1, 24
  07fe8	e283207a	 add         r2, r3, #0x7A
  07fec	e3a03004	 mov         r3, #4
  07ff0	e1c230b0	 strh        r3, [r2]

; 2589 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA1, (INPUT_DISABLE | PULL_INACTIVE | MUX_MODE_4));        /*HSUSB0_DATA1*/

  07ff4	e59d3004	 ldr         r3, [sp, #4]
  07ff8	e2832f5f	 add         r2, r3, #0x5F, 30
  07ffc	e3a03004	 mov         r3, #4
  08000	e1c230b0	 strh        r3, [r2]

; 2590 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA2, (INPUT_DISABLE | PULL_INACTIVE | MUX_MODE_4));        /*HSUSB0_DATA2*/

  08004	e59d3004	 ldr         r3, [sp, #4]
  08008	e2833c01	 add         r3, r3, #1, 24
  0800c	e283207e	 add         r2, r3, #0x7E
  08010	e3a03004	 mov         r3, #4
  08014	e1c230b0	 strh        r3, [r2]

; 2591 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA3, (INPUT_DISABLE | PULL_INACTIVE | MUX_MODE_4));        /*HSUSB0_DATA3*/

  08018	e59d3004	 ldr         r3, [sp, #4]
  0801c	e2832d06	 add         r2, r3, #6, 26
  08020	e3a03004	 mov         r3, #4
  08024	e1c230b0	 strh        r3, [r2]

; 2592 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA4, (INPUT_DISABLE | PULL_INACTIVE | MUX_MODE_4));        /*HSUSB0_DATA4*/

  08028	e59d3004	 ldr         r3, [sp, #4]
  0802c	e2833c01	 add         r3, r3, #1, 24
  08030	e2832082	 add         r2, r3, #0x82
  08034	e3a03004	 mov         r3, #4
  08038	e1c230b0	 strh        r3, [r2]

; 2593 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA5, (INPUT_DISABLE | PULL_INACTIVE | MUX_MODE_4));        /*HSUSB0_DATA5*/

  0803c	e59d3004	 ldr         r3, [sp, #4]
  08040	e2832f61	 add         r2, r3, #0x61, 30
  08044	e3a03004	 mov         r3, #4
  08048	e1c230b0	 strh        r3, [r2]

; 2594 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA6, (INPUT_DISABLE | PULL_INACTIVE | MUX_MODE_4));        /*HSUSB0_DATA6*/

  0804c	e59d3004	 ldr         r3, [sp, #4]
  08050	e2833c01	 add         r3, r3, #1, 24
  08054	e2832086	 add         r2, r3, #0x86
  08058	e3a03004	 mov         r3, #4
  0805c	e1c230b0	 strh        r3, [r2]

; 2595 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA7, (INPUT_DISABLE | PULL_INACTIVE | MUX_MODE_4));        /*HSUSB0_DATA7*/

  08060	e59d3004	 ldr         r3, [sp, #4]
  08064	e2832f62	 add         r2, r3, #0x62, 30
  08068	e3a03004	 mov         r3, #4
  0806c	e1c230b0	 strh        r3, [r2]

; 2596 : 
; 2597 :     // Do the recover stuff here!
; 2598 :     GPIOSetMode(hGpio, 121, GPIO_DIR_OUTPUT); // STP

  08070	e3a02000	 mov         r2, #0
  08074	e3a01079	 mov         r1, #0x79
  08078	e59d0008	 ldr         r0, [sp, #8]
  0807c	eb000000	 bl          GPIOSetMode

; 2599 :     GPIOSetMode(hGpio, 125, GPIO_DIR_OUTPUT); // D0

  08080	e3a02000	 mov         r2, #0
  08084	e3a0107d	 mov         r1, #0x7D
  08088	e59d0008	 ldr         r0, [sp, #8]
  0808c	eb000000	 bl          GPIOSetMode

; 2600 :     GPIOSetMode(hGpio, 130, GPIO_DIR_OUTPUT); // D1

  08090	e3a02000	 mov         r2, #0
  08094	e3a01082	 mov         r1, #0x82
  08098	e59d0008	 ldr         r0, [sp, #8]
  0809c	eb000000	 bl          GPIOSetMode

; 2601 :     GPIOSetMode(hGpio, 131, GPIO_DIR_OUTPUT); // D2

  080a0	e3a02000	 mov         r2, #0
  080a4	e3a01083	 mov         r1, #0x83
  080a8	e59d0008	 ldr         r0, [sp, #8]
  080ac	eb000000	 bl          GPIOSetMode

; 2602 :     GPIOSetMode(hGpio, 169, GPIO_DIR_OUTPUT); // D3

  080b0	e3a02000	 mov         r2, #0
  080b4	e3a010a9	 mov         r1, #0xA9
  080b8	e59d0008	 ldr         r0, [sp, #8]
  080bc	eb000000	 bl          GPIOSetMode

; 2603 :     GPIOSetMode(hGpio, 188, GPIO_DIR_OUTPUT); // D4

  080c0	e3a02000	 mov         r2, #0
  080c4	e3a010bc	 mov         r1, #0xBC
  080c8	e59d0008	 ldr         r0, [sp, #8]
  080cc	eb000000	 bl          GPIOSetMode

; 2604 :     GPIOSetMode(hGpio, 189, GPIO_DIR_OUTPUT); // D5

  080d0	e3a02000	 mov         r2, #0
  080d4	e3a010bd	 mov         r1, #0xBD
  080d8	e59d0008	 ldr         r0, [sp, #8]
  080dc	eb000000	 bl          GPIOSetMode

; 2605 :     GPIOSetMode(hGpio, 190, GPIO_DIR_OUTPUT); // D6

  080e0	e3a02000	 mov         r2, #0
  080e4	e3a010be	 mov         r1, #0xBE
  080e8	e59d0008	 ldr         r0, [sp, #8]
  080ec	eb000000	 bl          GPIOSetMode

; 2606 :     GPIOSetMode(hGpio, 191, GPIO_DIR_OUTPUT); // D7

  080f0	e3a02000	 mov         r2, #0
  080f4	e3a010bf	 mov         r1, #0xBF
  080f8	e59d0008	 ldr         r0, [sp, #8]
  080fc	eb000000	 bl          GPIOSetMode

; 2607 : 
; 2608 :     // Attempt recovery procedure 1
; 2609 :     //RETAILMSG(1, (TEXT("Attempt Recovery Procedure 2\r\n")));
; 2610 : 
; 2611 :     GPIOSetBit(hGpio, 190); // Set   D6

  08100	e3a010be	 mov         r1, #0xBE
  08104	e59d0008	 ldr         r0, [sp, #8]
  08108	eb000000	 bl          GPIOSetBit

; 2612 :     GPIOClrBit(hGpio, 191); // Clear D7

  0810c	e3a010bf	 mov         r1, #0xBF
  08110	e59d0008	 ldr         r0, [sp, #8]
  08114	eb000000	 bl          GPIOClrBit

; 2613 :     GPIOClrBit(hGpio, 125); // Clear D0

  08118	e3a0107d	 mov         r1, #0x7D
  0811c	e59d0008	 ldr         r0, [sp, #8]
  08120	eb000000	 bl          GPIOClrBit

; 2614 :     GPIOClrBit(hGpio, 130); // Clear D1

  08124	e3a01082	 mov         r1, #0x82
  08128	e59d0008	 ldr         r0, [sp, #8]
  0812c	eb000000	 bl          GPIOClrBit

; 2615 :     GPIOClrBit(hGpio, 131); // Clear D2

  08130	e3a01083	 mov         r1, #0x83
  08134	e59d0008	 ldr         r0, [sp, #8]
  08138	eb000000	 bl          GPIOClrBit

; 2616 :     GPIOClrBit(hGpio, 169); // Clear D3

  0813c	e3a010a9	 mov         r1, #0xA9
  08140	e59d0008	 ldr         r0, [sp, #8]
  08144	eb000000	 bl          GPIOClrBit

; 2617 :     GPIOClrBit(hGpio, 188); // Clear D4

  08148	e3a010bc	 mov         r1, #0xBC
  0814c	e59d0008	 ldr         r0, [sp, #8]
  08150	eb000000	 bl          GPIOClrBit

; 2618 :     GPIOClrBit(hGpio, 189); // Clear D5

  08154	e3a010bd	 mov         r1, #0xBD
  08158	e59d0008	 ldr         r0, [sp, #8]
  0815c	eb000000	 bl          GPIOClrBit

; 2619 : 
; 2620 :     DelayByRegisterRead();

  08160	e59d0028	 ldr         r0, [sp, #0x28]
  08164	eb000000	 bl          |?DelayByRegisterRead@OMAPMHSUSBOTG@@QAAXXZ|

; 2621 : 
; 2622 :     GPIOSetBit(hGpio, 121); // Set   STP

  08168	e3a01079	 mov         r1, #0x79
  0816c	e59d0008	 ldr         r0, [sp, #8]
  08170	eb000000	 bl          GPIOSetBit

; 2623 : 
; 2624 : 
; 2625 :     DelayByRegisterRead();

  08174	e59d0028	 ldr         r0, [sp, #0x28]
  08178	eb000000	 bl          |?DelayByRegisterRead@OMAPMHSUSBOTG@@QAAXXZ|

; 2626 : 
; 2627 :     GPIOClrBit(hGpio, 190); // Clear D6

  0817c	e3a010be	 mov         r1, #0xBE
  08180	e59d0008	 ldr         r0, [sp, #8]
  08184	eb000000	 bl          GPIOClrBit

; 2628 :     DelayByRegisterRead();

  08188	e59d0028	 ldr         r0, [sp, #0x28]
  0818c	eb000000	 bl          |?DelayByRegisterRead@OMAPMHSUSBOTG@@QAAXXZ|

; 2629 :     GPIOClrBit(hGpio, 121); // Clear STP

  08190	e3a01079	 mov         r1, #0x79
  08194	e59d0008	 ldr         r0, [sp, #8]
  08198	eb000000	 bl          GPIOClrBit

; 2630 : 
; 2631 :     GPIOClose(hGpio);

  0819c	e59d0008	 ldr         r0, [sp, #8]
  081a0	eb000000	 bl          GPIOClose

; 2632 : 
; 2633 : 
; 2634 :     RETAILMSG(1, (TEXT("Restore ULPI Signals\r\n")));

  081a4	e59f00fc	 ldr         r0, [pc, #0xFC]
  081a8	eb000000	 bl          NKDbgPrintfW
  081ac	e3a03001	 mov         r3, #1
  081b0	e58d3018	 str         r3, [sp, #0x18]
  081b4	ea000001	 b           |$LN7@LinkRecove@2|
  081b8	e3a03000	 mov         r3, #0
  081bc	e58d3018	 str         r3, [sp, #0x18]
  081c0		 |$LN7@LinkRecove@2|

; 2635 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_STP, (OFF_OUTPUT_PULL_INACTIVE | INPUT_DISABLE | PULL_UP | MUX_MODE_0));          /*HSUSB0_STP*/

  081c0	e59d3004	 ldr         r3, [sp, #4]
  081c4	e2832f5d	 add         r2, r3, #0x5D, 30
  081c8	e3a03f86	 mov         r3, #0x86, 30
  081cc	e1c230b0	 strh        r3, [r2]

; 2636 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA0, (OFF_INPUT_PULL_DOWN | INPUT_ENABLE | PULL_INACTIVE | MUX_MODE_0));        /*HSUSB0_DATA0*/

  081d0	e59d3004	 ldr         r3, [sp, #4]
  081d4	e2833c01	 add         r3, r3, #1, 24
  081d8	e283207a	 add         r2, r3, #0x7A
  081dc	e3a03c17	 mov         r3, #0x17, 24
  081e0	e1c230b0	 strh        r3, [r2]

; 2637 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA1, (OFF_INPUT_PULL_DOWN | INPUT_ENABLE | PULL_INACTIVE | MUX_MODE_0));        /*HSUSB0_DATA1*/

  081e4	e59d3004	 ldr         r3, [sp, #4]
  081e8	e2832f5f	 add         r2, r3, #0x5F, 30
  081ec	e3a03c17	 mov         r3, #0x17, 24
  081f0	e1c230b0	 strh        r3, [r2]

; 2638 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA2, (OFF_INPUT_PULL_DOWN | INPUT_ENABLE | PULL_INACTIVE | MUX_MODE_0));        /*HSUSB0_DATA2*/

  081f4	e59d3004	 ldr         r3, [sp, #4]
  081f8	e2833c01	 add         r3, r3, #1, 24
  081fc	e283207e	 add         r2, r3, #0x7E
  08200	e3a03c17	 mov         r3, #0x17, 24
  08204	e1c230b0	 strh        r3, [r2]

; 2639 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA3, (OFF_INPUT_PULL_DOWN | INPUT_ENABLE | PULL_INACTIVE | MUX_MODE_0));        /*HSUSB0_DATA3*/

  08208	e59d3004	 ldr         r3, [sp, #4]
  0820c	e2832d06	 add         r2, r3, #6, 26
  08210	e3a03c17	 mov         r3, #0x17, 24
  08214	e1c230b0	 strh        r3, [r2]

; 2640 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA4, (OFF_INPUT_PULL_DOWN | INPUT_ENABLE | PULL_INACTIVE | MUX_MODE_0));        /*HSUSB0_DATA4*/

  08218	e59d3004	 ldr         r3, [sp, #4]
  0821c	e2833c01	 add         r3, r3, #1, 24
  08220	e2832082	 add         r2, r3, #0x82
  08224	e3a03c17	 mov         r3, #0x17, 24
  08228	e1c230b0	 strh        r3, [r2]

; 2641 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA5, (OFF_INPUT_PULL_DOWN | INPUT_ENABLE | PULL_INACTIVE | MUX_MODE_0));        /*HSUSB0_DATA5*/

  0822c	e59d3004	 ldr         r3, [sp, #4]
  08230	e2832f61	 add         r2, r3, #0x61, 30
  08234	e3a03c17	 mov         r3, #0x17, 24
  08238	e1c230b0	 strh        r3, [r2]

; 2642 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA6, (OFF_INPUT_PULL_DOWN | INPUT_ENABLE | PULL_INACTIVE | MUX_MODE_0));        /*HSUSB0_DATA6*/

  0823c	e59d3004	 ldr         r3, [sp, #4]
  08240	e2833c01	 add         r3, r3, #1, 24
  08244	e2832086	 add         r2, r3, #0x86
  08248	e3a03c17	 mov         r3, #0x17, 24
  0824c	e1c230b0	 strh        r3, [r2]

; 2643 :     OUTREG16(&pConfig->CONTROL_PADCONF_HSUSB0_DATA7, (OFF_INPUT_PULL_DOWN | INPUT_ENABLE | PULL_INACTIVE | MUX_MODE_0));        /*HSUSB0_DATA7*/

  08250	e59d3004	 ldr         r3, [sp, #4]
  08254	e2832f62	 add         r2, r3, #0x62, 30
  08258	e3a03c17	 mov         r3, #0x17, 24
  0825c	e1c230b0	 strh        r3, [r2]

; 2644 : 
; 2645 :     if((ReadULPIReg( m_pOTG, ULPI_VENDORID_LOW_R)))

  08260	e3a02000	 mov         r2, #0
  08264	e59d3028	 ldr         r3, [sp, #0x28]
  08268	e2833e15	 add         r3, r3, #0x15, 28
  0826c	e5931000	 ldr         r1, [r3]
  08270	e59d0028	 ldr         r0, [sp, #0x28]
  08274	eb000000	 bl          |?ReadULPIReg@OMAPMHSUSBOTG@@QAAEPAUHSMUSB_T@@E@Z|
  08278	e5cd001c	 strb        r0, [sp, #0x1C]
  0827c	e5dd301c	 ldrb        r3, [sp, #0x1C]
  08280	e3530000	 cmp         r3, #0
  08284	0a000001	 beq         |$LN1@LinkRecove@2|

; 2646 :     {
; 2647 :         //RETAILMSG(1, (TEXT("Recovery Procedure 2. ULPI Link Functional\r\n")));
; 2648 :         ret = TRUE;

  08288	e3a03001	 mov         r3, #1
  0828c	e58d3000	 str         r3, [sp]
  08290		 |$LN1@LinkRecove@2|

; 2649 :     }
; 2650 : 
; 2651 :     return ret;

  08290	e59d3000	 ldr         r3, [sp]
  08294	e58d300c	 str         r3, [sp, #0xC]

; 2652 : }

  08298	e59d000c	 ldr         r0, [sp, #0xC]
  0829c	e28dd020	 add         sp, sp, #0x20
  082a0	e89d6000	 ldmia       sp, {sp, lr}
  082a4	e12fff1e	 bx          lr
  082a8		 |$LN11@LinkRecove@2|
  082a8		 |$LN12@LinkRecove@2|
  082a8	00000000	 DCD         |??_C@_1CO@DLKKJIDB@?$AAR?$AAe?$AAs?$AAt?$AAo?$AAr?$AAe?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAS?$AAi?$AAg?$AAn?$AAa?$AAl?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  082ac		 |$LN13@LinkRecove@2|
  082ac	00000000	 DCD         |??_C@_1DM@PAEGICHA@?$AAA?$AAs?$AAs?$AAi?$AAg?$AAn?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAs?$AA?5?$AAt?$AAo?$AA?5?$AAG?$AAP?$AAI?$AAO?$AA?$AN?$AA?6?$AA?$AA@|
  082b0		 |$M44137|

			 ENDP  ; |?LinkRecoveryProcedure2@OMAPMHSUSBOTG@@QAAHXZ|, OMAPMHSUSBOTG::LinkRecoveryProcedure2

	EXPORT	|??_C@_1GM@IAJAHOFG@?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAL?$AAi?$AAn?$AAk?$AA?5?$AAr?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy?$AA?5?$AAa?$AAt?$AAt?$AAe?$AAm?$AAp?$AAt?$AAe?$AAd?$AA?4?$AA?5?$AAE?$AAx@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@DDAPPDML@?$AAR?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAd?$AAu?$AAr?$AAe?$AA?5?$AA1?$AA?4?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAL?$AAi?$AAn?$AAk?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@IJFKPHNM@?$AAR?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAd?$AAu?$AAr?$AAe?$AA?5?$AA2?$AA?4?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAL?$AAi?$AAn?$AAk?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@OAJGALNB@?$AAR?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAd?$AAu?$AAr?$AAe?$AA?5?$AA3?$AA?4?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAL?$AAi?$AAn?$AAk?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@GOEGMFKN@?$AAA?$AAt?$AAt?$AAe?$AAm?$AAp?$AAt?$AA?5?$AAR?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAd?$AAu?$AAr?$AAe?$AA?5?$AA3?$AA?$CB?$AA?5?$AAR?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@LLECKEKC@?$AAA?$AAt?$AAt?$AAe?$AAm?$AAp?$AAt?$AA?5?$AAR?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAd?$AAu?$AAr?$AAe?$AA?5?$AA2?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@DFMNKDEB@?$AAA?$AAt?$AAt?$AAe?$AAm?$AAp?$AAt?$AA?5?$AAR?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAd?$AAu?$AAr?$AAe?$AA?5?$AA1?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00188			 AREA	 |.pdata|, PDATA
|$T44162| DCD	|$LN28@SoftResetU|
	DCD	0x40007b04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@IAJAHOFG@?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAL?$AAi?$AAn?$AAk?$AA?5?$AAr?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy?$AA?5?$AAa?$AAt?$AAt?$AAe?$AAm?$AAp?$AAt?$AAe?$AAd?$AA?4?$AA?5?$AAE?$AAx@| DCB "U"
	DCB	0x0, "L", 0x0, "P", 0x0, "I", 0x0, " ", 0x0, "L", 0x0, "i"
	DCB	0x0, "n", 0x0, "k", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "o", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, "y", 0x0, " "
	DCB	0x0, "a", 0x0, "t", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, "p"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, ".", 0x0, " ", 0x0, "E"
	DCB	0x0, "x", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "c", 0x0, "o", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, "y"
	DCB	0x0, " ", 0x0, "p", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@DDAPPDML@?$AAR?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAd?$AAu?$AAr?$AAe?$AA?5?$AA1?$AA?4?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAL?$AAi?$AAn?$AAk?$AA?5@| DCB "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "o", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, "y", 0x0, " ", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c"
	DCB	0x0, "e", 0x0, "d", 0x0, "u", 0x0, "r", 0x0, "e", 0x0, " "
	DCB	0x0, "1", 0x0, ".", 0x0, " ", 0x0, "U", 0x0, "L", 0x0, "P"
	DCB	0x0, "I", 0x0, " ", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "k"
	DCB	0x0, " ", 0x0, "F", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, "a", 0x0, "l", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@IJFKPHNM@?$AAR?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAd?$AAu?$AAr?$AAe?$AA?5?$AA2?$AA?4?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAL?$AAi?$AAn?$AAk?$AA?5@| DCB "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "o", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, "y", 0x0, " ", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c"
	DCB	0x0, "e", 0x0, "d", 0x0, "u", 0x0, "r", 0x0, "e", 0x0, " "
	DCB	0x0, "2", 0x0, ".", 0x0, " ", 0x0, "U", 0x0, "L", 0x0, "P"
	DCB	0x0, "I", 0x0, " ", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "k"
	DCB	0x0, " ", 0x0, "F", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, "a", 0x0, "l", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@OAJGALNB@?$AAR?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAd?$AAu?$AAr?$AAe?$AA?5?$AA3?$AA?4?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAL?$AAi?$AAn?$AAk?$AA?5@| DCB "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "o", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, "y", 0x0, " ", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c"
	DCB	0x0, "e", 0x0, "d", 0x0, "u", 0x0, "r", 0x0, "e", 0x0, " "
	DCB	0x0, "3", 0x0, ".", 0x0, " ", 0x0, "U", 0x0, "L", 0x0, "P"
	DCB	0x0, "I", 0x0, " ", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "k"
	DCB	0x0, " ", 0x0, "F", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, "a", 0x0, "l", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@GOEGMFKN@?$AAA?$AAt?$AAt?$AAe?$AAm?$AAp?$AAt?$AA?5?$AAR?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAd?$AAu?$AAr?$AAe?$AA?5?$AA3?$AA?$CB?$AA?5?$AAR?$AAe@| DCB "A"
	DCB	0x0, "t", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, "p", 0x0, "t"
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "c", 0x0, "o", 0x0, "v"
	DCB	0x0, "e", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "P", 0x0, "r"
	DCB	0x0, "o", 0x0, "c", 0x0, "e", 0x0, "d", 0x0, "u", 0x0, "r"
	DCB	0x0, "e", 0x0, " ", 0x0, "3", 0x0, "!", 0x0, " ", 0x0, "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "P"
	DCB	0x0, "H", 0x0, "Y", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@LLECKEKC@?$AAA?$AAt?$AAt?$AAe?$AAm?$AAp?$AAt?$AA?5?$AAR?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAd?$AAu?$AAr?$AAe?$AA?5?$AA2?$AA?$AN?$AA?6?$AA?$AA@| DCB "A"
	DCB	0x0, "t", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, "p", 0x0, "t"
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "c", 0x0, "o", 0x0, "v"
	DCB	0x0, "e", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "P", 0x0, "r"
	DCB	0x0, "o", 0x0, "c", 0x0, "e", 0x0, "d", 0x0, "u", 0x0, "r"
	DCB	0x0, "e", 0x0, " ", 0x0, "2", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@DFMNKDEB@?$AAA?$AAt?$AAt?$AAe?$AAm?$AAp?$AAt?$AA?5?$AAR?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAd?$AAu?$AAr?$AAe?$AA?5?$AA1?$AA?$AN?$AA?6?$AA?$AA@| DCB "A"
	DCB	0x0, "t", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, "p", 0x0, "t"
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "c", 0x0, "o", 0x0, "v"
	DCB	0x0, "e", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "P", 0x0, "r"
	DCB	0x0, "o", 0x0, "c", 0x0, "e", 0x0, "d", 0x0, "u", 0x0, "r"
	DCB	0x0, "e", 0x0, " ", 0x0, "1", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  082b0			 AREA	 |.text|, CODE, ARM

  082b0		 |?SoftResetULPILink@OMAPMHSUSBOTG@@UAAHXZ| PROC ; OMAPMHSUSBOTG::SoftResetULPILink

; 2656 : {

  082b0		 |$LN28@SoftResetU|
  082b0	e1a0c00d	 mov         r12, sp
  082b4	e92d0001	 stmdb       sp!, {r0}
  082b8	e92d5000	 stmdb       sp!, {r12, lr}
  082bc	e24dd038	 sub         sp, sp, #0x38
  082c0		 |$M44159|

; 2657 :     HANDLE hGpio=NULL;

  082c0	e3a03000	 mov         r3, #0
  082c4	e58d3000	 str         r3, [sp]

; 2658 :     DWORD j=5;

  082c8	e3a03005	 mov         r3, #5
  082cc	e58d3004	 str         r3, [sp, #4]

; 2659 : 
; 2660 :     hGpio = GPIOOpen();

  082d0	eb000000	 bl          GPIOOpen
  082d4	e58d000c	 str         r0, [sp, #0xC]
  082d8	e59d300c	 ldr         r3, [sp, #0xC]
  082dc	e58d3000	 str         r3, [sp]
  082e0		 |$LN9@SoftResetU|

; 2661 : 
; 2662 :     do
; 2663 :     {
; 2664 : 
; 2665 :         // Attempt recovery procedure 1
; 2666 :         RETAILMSG(1, (TEXT("Attempt Recovery Procedure 1\r\n")));

  082e0	e59f01b0	 ldr         r0, [pc, #0x1B0]
  082e4	eb000000	 bl          NKDbgPrintfW
  082e8	e3a03001	 mov         r3, #1
  082ec	e58d3010	 str         r3, [sp, #0x10]
  082f0	ea000001	 b           |$LN13@SoftResetU|
  082f4	e3a03000	 mov         r3, #0
  082f8	e58d3010	 str         r3, [sp, #0x10]
  082fc		 |$LN13@SoftResetU|

; 2667 :         if(!LinkRecoveryProcedure1())

  082fc	e59d0040	 ldr         r0, [sp, #0x40]
  08300	eb000000	 bl          |?LinkRecoveryProcedure1@OMAPMHSUSBOTG@@QAAHXZ|
  08304	e58d0014	 str         r0, [sp, #0x14]
  08308	e59d3014	 ldr         r3, [sp, #0x14]
  0830c	e3530000	 cmp         r3, #0
  08310	1a00003a	 bne         |$LN6@SoftResetU|

; 2668 :         {
; 2669 :             // Attempt recovery procedure 2
; 2670 :             RETAILMSG(1, (TEXT("Attempt Recovery Procedure 2\r\n")));

  08314	e59f0178	 ldr         r0, [pc, #0x178]
  08318	eb000000	 bl          NKDbgPrintfW
  0831c	e3a03001	 mov         r3, #1
  08320	e58d3018	 str         r3, [sp, #0x18]
  08324	ea000001	 b           |$LN15@SoftResetU|
  08328	e3a03000	 mov         r3, #0
  0832c	e58d3018	 str         r3, [sp, #0x18]
  08330		 |$LN15@SoftResetU|

; 2671 :             if(!LinkRecoveryProcedure2())

  08330	e59d0040	 ldr         r0, [sp, #0x40]
  08334	eb000000	 bl          |?LinkRecoveryProcedure2@OMAPMHSUSBOTG@@QAAHXZ|
  08338	e58d001c	 str         r0, [sp, #0x1C]
  0833c	e59d301c	 ldr         r3, [sp, #0x1C]
  08340	e3530000	 cmp         r3, #0
  08344	1a000024	 bne         |$LN5@SoftResetU|

; 2672 :             {
; 2673 :                 // Attempt recovery procedure 3
; 2674 :                 RETAILMSG(1, (TEXT("Attempt Recovery Procedure 3! Reset PHY\r\n")));

  08348	e59f0140	 ldr         r0, [pc, #0x140]
  0834c	eb000000	 bl          NKDbgPrintfW
  08350	e3a03001	 mov         r3, #1
  08354	e58d3020	 str         r3, [sp, #0x20]
  08358	ea000001	 b           |$LN17@SoftResetU|
  0835c	e3a03000	 mov         r3, #0
  08360	e58d3020	 str         r3, [sp, #0x20]
  08364		 |$LN17@SoftResetU|

; 2675 :                 m_pTransceiver->ResetPHY();

  08364	e59d3040	 ldr         r3, [sp, #0x40]
  08368	e28330fc	 add         r3, r3, #0xFC
  0836c	e5932000	 ldr         r2, [r3]
  08370	e59d3040	 ldr         r3, [sp, #0x40]
  08374	e28330fc	 add         r3, r3, #0xFC
  08378	e5930000	 ldr         r0, [r3]
  0837c	e5923000	 ldr         r3, [r2]
  08380	e283302c	 add         r3, r3, #0x2C
  08384	e5933000	 ldr         r3, [r3]
  08388	e1a0e00f	 mov         lr, pc
  0838c	e12fff13	 bx          r3

; 2676 : 
; 2677 :                 // Check whether LINK is functional. Otherwise restart
; 2678 :                 // Recovery Procedures.
; 2679 :                 if((ReadULPIReg( m_pOTG, ULPI_VENDORID_LOW_R)))

  08390	e3a02000	 mov         r2, #0
  08394	e59d3040	 ldr         r3, [sp, #0x40]
  08398	e2833e15	 add         r3, r3, #0x15, 28
  0839c	e5931000	 ldr         r1, [r3]
  083a0	e59d0040	 ldr         r0, [sp, #0x40]
  083a4	eb000000	 bl          |?ReadULPIReg@OMAPMHSUSBOTG@@QAAEPAUHSMUSB_T@@E@Z|
  083a8	e5cd0024	 strb        r0, [sp, #0x24]
  083ac	e5dd3024	 ldrb        r3, [sp, #0x24]
  083b0	e3530000	 cmp         r3, #0
  083b4	0a000007	 beq         |$LN4@SoftResetU|

; 2680 :                 {
; 2681 :                     RETAILMSG(1, (TEXT("Recovery Procedure 3. ULPI Link Functional\r\n")));

  083b8	e59f00cc	 ldr         r0, [pc, #0xCC]
  083bc	eb000000	 bl          NKDbgPrintfW
  083c0	e3a03001	 mov         r3, #1
  083c4	e58d3028	 str         r3, [sp, #0x28]
  083c8	ea000001	 b           |$LN19@SoftResetU|
  083cc	e3a03000	 mov         r3, #0
  083d0	e58d3028	 str         r3, [sp, #0x28]
  083d4		 |$LN19@SoftResetU|

; 2682 :                     break;

  083d4	ea000021	 b           |$LN7@SoftResetU|
  083d8		 |$LN4@SoftResetU|

; 2683 :                 }
; 2684 :             }
; 2685 :             else

  083d8	ea000007	 b           |$LN3@SoftResetU|
  083dc		 |$LN5@SoftResetU|

; 2686 :             {
; 2687 :                 RETAILMSG(1, (TEXT("Recovery Procedure 2. ULPI Link Functional\r\n")));

  083dc	e59f00a4	 ldr         r0, [pc, #0xA4]
  083e0	eb000000	 bl          NKDbgPrintfW
  083e4	e3a03001	 mov         r3, #1
  083e8	e58d302c	 str         r3, [sp, #0x2C]
  083ec	ea000001	 b           |$LN21@SoftResetU|
  083f0	e3a03000	 mov         r3, #0
  083f4	e58d302c	 str         r3, [sp, #0x2C]
  083f8		 |$LN21@SoftResetU|

; 2688 :                 break;

  083f8	ea000018	 b           |$LN7@SoftResetU|
  083fc		 |$LN3@SoftResetU|

; 2689 :             }
; 2690 :         }
; 2691 :         else

  083fc	ea000007	 b           |$LN2@SoftResetU|
  08400		 |$LN6@SoftResetU|

; 2692 :         {
; 2693 :             RETAILMSG(1, (TEXT("Recovery Procedure 1. ULPI Link Functional\r\n")));

  08400	e59f007c	 ldr         r0, [pc, #0x7C]
  08404	eb000000	 bl          NKDbgPrintfW
  08408	e3a03001	 mov         r3, #1
  0840c	e58d3030	 str         r3, [sp, #0x30]
  08410	ea000001	 b           |$LN23@SoftResetU|
  08414	e3a03000	 mov         r3, #0
  08418	e58d3030	 str         r3, [sp, #0x30]
  0841c		 |$LN23@SoftResetU|

; 2694 :             break;

  0841c	ea00000f	 b           |$LN7@SoftResetU|
  08420		 |$LN2@SoftResetU|

; 2695 :         }
; 2696 : 
; 2697 : 
; 2698 :         if (j == 0)

  08420	e59d3004	 ldr         r3, [sp, #4]
  08424	e3530000	 cmp         r3, #0
  08428	1a000006	 bne         |$LN1@SoftResetU|

; 2699 :             RETAILMSG(1, (TEXT("ULPI Link recovery attempted. Exit recovery process\r\n")));

  0842c	e59f004c	 ldr         r0, [pc, #0x4C]
  08430	eb000000	 bl          NKDbgPrintfW
  08434	e3a03001	 mov         r3, #1
  08438	e58d3034	 str         r3, [sp, #0x34]
  0843c	ea000001	 b           |$LN25@SoftResetU|
  08440	e3a03000	 mov         r3, #0
  08444	e58d3034	 str         r3, [sp, #0x34]
  08448		 |$LN25@SoftResetU|
  08448		 |$LN1@SoftResetU|

; 2700 : 
; 2701 :     }while(j--);

  08448	e59d3004	 ldr         r3, [sp, #4]
  0844c	e3530000	 cmp         r3, #0
  08450	e59d3004	 ldr         r3, [sp, #4]
  08454	e2433001	 sub         r3, r3, #1
  08458	e58d3004	 str         r3, [sp, #4]
  0845c	1affff9f	 bne         |$LN9@SoftResetU|
  08460		 |$LN7@SoftResetU|

; 2702 : 
; 2703 :     GPIOClose(hGpio);

  08460	e59d0000	 ldr         r0, [sp]
  08464	eb000000	 bl          GPIOClose

; 2704 :     return TRUE;

  08468	e3a03001	 mov         r3, #1
  0846c	e58d3008	 str         r3, [sp, #8]

; 2705 : }

  08470	e59d0008	 ldr         r0, [sp, #8]
  08474	e28dd038	 add         sp, sp, #0x38
  08478	e89d6000	 ldmia       sp, {sp, lr}
  0847c	e12fff1e	 bx          lr
  08480		 |$LN29@SoftResetU|
  08480		 |$LN30@SoftResetU|
  08480	00000000	 DCD         |??_C@_1GM@IAJAHOFG@?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAL?$AAi?$AAn?$AAk?$AA?5?$AAr?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy?$AA?5?$AAa?$AAt?$AAt?$AAe?$AAm?$AAp?$AAt?$AAe?$AAd?$AA?4?$AA?5?$AAE?$AAx@|
  08484		 |$LN31@SoftResetU|
  08484	00000000	 DCD         |??_C@_1FK@DDAPPDML@?$AAR?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAd?$AAu?$AAr?$AAe?$AA?5?$AA1?$AA?4?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAL?$AAi?$AAn?$AAk?$AA?5@|
  08488		 |$LN32@SoftResetU|
  08488	00000000	 DCD         |??_C@_1FK@IJFKPHNM@?$AAR?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAd?$AAu?$AAr?$AAe?$AA?5?$AA2?$AA?4?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAL?$AAi?$AAn?$AAk?$AA?5@|
  0848c		 |$LN33@SoftResetU|
  0848c	00000000	 DCD         |??_C@_1FK@OAJGALNB@?$AAR?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAd?$AAu?$AAr?$AAe?$AA?5?$AA3?$AA?4?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAL?$AAi?$AAn?$AAk?$AA?5@|
  08490		 |$LN34@SoftResetU|
  08490	00000000	 DCD         |??_C@_1FE@GOEGMFKN@?$AAA?$AAt?$AAt?$AAe?$AAm?$AAp?$AAt?$AA?5?$AAR?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAd?$AAu?$AAr?$AAe?$AA?5?$AA3?$AA?$CB?$AA?5?$AAR?$AAe@|
  08494		 |$LN35@SoftResetU|
  08494	00000000	 DCD         |??_C@_1DO@LLECKEKC@?$AAA?$AAt?$AAt?$AAe?$AAm?$AAp?$AAt?$AA?5?$AAR?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAd?$AAu?$AAr?$AAe?$AA?5?$AA2?$AA?$AN?$AA?6?$AA?$AA@|
  08498		 |$LN36@SoftResetU|
  08498	00000000	 DCD         |??_C@_1DO@DFMNKDEB@?$AAA?$AAt?$AAt?$AAe?$AAm?$AAp?$AAt?$AA?5?$AAR?$AAe?$AAc?$AAo?$AAv?$AAe?$AAr?$AAy?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAd?$AAu?$AAr?$AAe?$AA?5?$AA1?$AA?$AN?$AA?6?$AA?$AA@|
  0849c		 |$M44160|

			 ENDP  ; |?SoftResetULPILink@OMAPMHSUSBOTG@@UAAHXZ|, OMAPMHSUSBOTG::SoftResetULPILink

	EXPORT	|??_C@_1CC@DJBKMJBG@?$AAR?$AAe?$AAs?$AAe?$AAt?$AAE?$AAn?$AAd?$AAP?$AAo?$AAi?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00190			 AREA	 |.pdata|, PDATA
|$T44177| DCD	|$LN14@ResetEndPo|
	DCD	0x40008204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@DJBKMJBG@?$AAR?$AAe?$AAs?$AAe?$AAt?$AAE?$AAn?$AAd?$AAP?$AAo?$AAi?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, "E", 0x0, "n"
	DCB	0x0, "d", 0x0, "P", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  0849c			 AREA	 |.text|, CODE, ARM

  0849c		 |?ResetEndPoints@OMAPMHSUSBOTG@@UAAXXZ| PROC ; OMAPMHSUSBOTG::ResetEndPoints

; 2713 : {

  0849c		 |$LN14@ResetEndPo|
  0849c	e1a0c00d	 mov         r12, sp
  084a0	e92d0001	 stmdb       sp!, {r0}
  084a4	e92d5000	 stmdb       sp!, {r12, lr}
  084a8	e24dd010	 sub         sp, sp, #0x10
  084ac		 |$M44174|

; 2714 :     PCSP_MUSB_GEN_REGS pGen;
; 2715 :     PCSP_MUSB_CSR_REGS pCsr;
; 2716 : 
; 2717 :     pGen = m_pOTG->pUsbGenRegs;

  084ac	e59d3018	 ldr         r3, [sp, #0x18]
  084b0	e2833e15	 add         r3, r3, #0x15, 28
  084b4	e5933000	 ldr         r3, [r3]
  084b8	e2833020	 add         r3, r3, #0x20
  084bc	e5933000	 ldr         r3, [r3]
  084c0	e58d3008	 str         r3, [sp, #8]

; 2718 :     pCsr = m_pOTG->pUsbCsrRegs;

  084c4	e59d3018	 ldr         r3, [sp, #0x18]
  084c8	e2833e15	 add         r3, r3, #0x15, 28
  084cc	e5933000	 ldr         r3, [r3]
  084d0	e283301c	 add         r3, r3, #0x1C
  084d4	e5933000	 ldr         r3, [r3]
  084d8	e58d3000	 str         r3, [sp]

; 2719 : 
; 2720 :     DEBUGMSG(ZONE_OTG_INIT || ZONE_OTG_FUNCTION, (TEXT("ResetEndPoints\r\n")));    

  084dc	e59f31bc	 ldr         r3, [pc, #0x1BC]
  084e0	e5933440	 ldr         r3, [r3, #0x440]
  084e4	e3130001	 tst         r3, #1
  084e8	1a000006	 bne         |$LN10@ResetEndPo|
  084ec	e59f31ac	 ldr         r3, [pc, #0x1AC]
  084f0	e5933440	 ldr         r3, [r3, #0x440]
  084f4	e3130a02	 tst         r3, #2, 20
  084f8	1a000002	 bne         |$LN10@ResetEndPo|
  084fc	e3a03000	 mov         r3, #0
  08500	e58d300c	 str         r3, [sp, #0xC]
  08504	ea000003	 b           |$LN11@ResetEndPo|
  08508		 |$LN10@ResetEndPo|
  08508	e59f018c	 ldr         r0, [pc, #0x18C]
  0850c	eb000000	 bl          NKDbgPrintfW
  08510	e3a03001	 mov         r3, #1
  08514	e58d300c	 str         r3, [sp, #0xC]
  08518		 |$LN11@ResetEndPo|

; 2721 :     int i = 0;

  08518	e3a03000	 mov         r3, #0
  0851c	e58d3004	 str         r3, [sp, #4]

; 2722 : 
; 2723 :     for (i = 0; i < 15; i++)

  08520	e3a03000	 mov         r3, #0
  08524	e58d3004	 str         r3, [sp, #4]
  08528	ea000002	 b           |$LN7@ResetEndPo|
  0852c		 |$LN6@ResetEndPo|
  0852c	e59d3004	 ldr         r3, [sp, #4]
  08530	e2833001	 add         r3, r3, #1
  08534	e58d3004	 str         r3, [sp, #4]
  08538		 |$LN7@ResetEndPo|
  08538	e59d3004	 ldr         r3, [sp, #4]
  0853c	e353000f	 cmp         r3, #0xF
  08540	aa000052	 bge         |$LN5@ResetEndPo|

; 2724 :     {
; 2725 :         OUTREG8(&pGen->Index, i);

  08544	e59d3004	 ldr         r3, [sp, #4]
  08548	e20320ff	 and         r2, r3, #0xFF
  0854c	e59d3008	 ldr         r3, [sp, #8]
  08550	e283300e	 add         r3, r3, #0xE
  08554	e5c32000	 strb        r2, [r3]

; 2726 : 
; 2727 :         if (i == 0)

  08558	e59d3004	 ldr         r3, [sp, #4]
  0855c	e3530000	 cmp         r3, #0
  08560	1a000022	 bne         |$LN4@ResetEndPo|

; 2728 :         {
; 2729 :             SETREG16(&pCsr->ep[0].CSR.CSR0, CSR0_P_FLUSHFIFO);

  08564	e59d3000	 ldr         r3, [sp]
  08568	e2831002	 add         r1, r3, #2
  0856c	e5d13001	 ldrb        r3, [r1, #1]
  08570	e1a03403	 mov         r3, r3, lsl #8
  08574	e1a02803	 mov         r2, r3, lsl #16
  08578	e1a02822	 mov         r2, r2, lsr #16
  0857c	e5d13000	 ldrb        r3, [r1]
  08580	e1833002	 orr         r3, r3, r2
  08584	e3833c01	 orr         r3, r3, #1, 24
  08588	e1a01803	 mov         r1, r3, lsl #16
  0858c	e1a01821	 mov         r1, r1, lsr #16
  08590	e59d3000	 ldr         r3, [sp]
  08594	e2832002	 add         r2, r3, #2
  08598	e1a03001	 mov         r3, r1
  0859c	e5c23000	 strb        r3, [r2]
  085a0	e1a03423	 mov         r3, r3, lsr #8
  085a4	e5c23001	 strb        r3, [r2, #1]
  085a8		 |$LN3@ResetEndPo|

; 2730 :             while (INREG16(&pCsr->ep[0].CSR.CSR0) & CSR0_P_FLUSHFIFO);

  085a8	e59d3000	 ldr         r3, [sp]
  085ac	e2831002	 add         r1, r3, #2
  085b0	e5d13001	 ldrb        r3, [r1, #1]
  085b4	e1a03403	 mov         r3, r3, lsl #8
  085b8	e1a02803	 mov         r2, r3, lsl #16
  085bc	e1a02822	 mov         r2, r2, lsr #16
  085c0	e5d13000	 ldrb        r3, [r1]
  085c4	e1833002	 orr         r3, r3, r2
  085c8	e3130c01	 tst         r3, #1, 24
  085cc	0a000000	 beq         |$LN2@ResetEndPo|
  085d0	eafffff4	 b           |$LN3@ResetEndPo|
  085d4		 |$LN2@ResetEndPo|

; 2731 :             OUTREG16(&pCsr->ep[0].CSR.CSR0, 0);

  085d4	e59d3000	 ldr         r3, [sp]
  085d8	e2832002	 add         r2, r3, #2
  085dc	e3a03000	 mov         r3, #0
  085e0	e5c23000	 strb        r3, [r2]
  085e4	e1a03423	 mov         r3, r3, lsr #8
  085e8	e5c23001	 strb        r3, [r2, #1]

; 2732 :         }
; 2733 :         else

  085ec	ea000026	 b           |$LN1@ResetEndPo|
  085f0		 |$LN4@ResetEndPo|

; 2734 :         {
; 2735 :             OUTREG16(&pCsr->ep[i].CSR.TxCSR, 0);

  085f0	e59d1004	 ldr         r1, [sp, #4]
  085f4	e3a03010	 mov         r3, #0x10
  085f8	e0020391	 mul         r2, r1, r3
  085fc	e59d3000	 ldr         r3, [sp]
  08600	e0833002	 add         r3, r3, r2
  08604	e2832002	 add         r2, r3, #2
  08608	e3a03000	 mov         r3, #0
  0860c	e5c23000	 strb        r3, [r2]
  08610	e1a03423	 mov         r3, r3, lsr #8
  08614	e5c23001	 strb        r3, [r2, #1]

; 2736 :             OUTREG16(&pCsr->ep[i].RxCSR, 0);

  08618	e59d1004	 ldr         r1, [sp, #4]
  0861c	e3a03010	 mov         r3, #0x10
  08620	e0020391	 mul         r2, r1, r3
  08624	e59d3000	 ldr         r3, [sp]
  08628	e0833002	 add         r3, r3, r2
  0862c	e2832006	 add         r2, r3, #6
  08630	e3a03000	 mov         r3, #0
  08634	e5c23000	 strb        r3, [r2]
  08638	e1a03423	 mov         r3, r3, lsr #8
  0863c	e5c23001	 strb        r3, [r2, #1]

; 2737 :             OUTREG16(&pCsr->ep[i].TxMaxP, 0);

  08640	e59d1004	 ldr         r1, [sp, #4]
  08644	e3a03010	 mov         r3, #0x10
  08648	e0020391	 mul         r2, r1, r3
  0864c	e59d3000	 ldr         r3, [sp]
  08650	e0832002	 add         r2, r3, r2
  08654	e3a03000	 mov         r3, #0
  08658	e5c23000	 strb        r3, [r2]
  0865c	e1a03423	 mov         r3, r3, lsr #8
  08660	e5c23001	 strb        r3, [r2, #1]

; 2738 :             OUTREG16(&pCsr->ep[i].RxMaxP, 0);

  08664	e59d1004	 ldr         r1, [sp, #4]
  08668	e3a03010	 mov         r3, #0x10
  0866c	e0020391	 mul         r2, r1, r3
  08670	e59d3000	 ldr         r3, [sp]
  08674	e0833002	 add         r3, r3, r2
  08678	e2832004	 add         r2, r3, #4
  0867c	e3a03000	 mov         r3, #0
  08680	e5c23000	 strb        r3, [r2]
  08684	e1a03423	 mov         r3, r3, lsr #8
  08688	e5c23001	 strb        r3, [r2, #1]
  0868c		 |$LN1@ResetEndPo|

; 2739 :         }        
; 2740 :     }

  0868c	eaffffa6	 b           |$LN6@ResetEndPo|
  08690		 |$LN5@ResetEndPo|

; 2741 : 
; 2742 :     return;
; 2743 : }

  08690	e28dd010	 add         sp, sp, #0x10
  08694	e89d6000	 ldmia       sp, {sp, lr}
  08698	e12fff1e	 bx          lr
  0869c		 |$LN15@ResetEndPo|
  0869c		 |$LN16@ResetEndPo|
  0869c	00000000	 DCD         |??_C@_1CC@DJBKMJBG@?$AAR?$AAe?$AAs?$AAe?$AAt?$AAE?$AAn?$AAd?$AAP?$AAo?$AAi?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  086a0		 |$LN17@ResetEndPo|
  086a0	00000000	 DCD         |dpCurSettings|
  086a4		 |$M44175|

			 ENDP  ; |?ResetEndPoints@OMAPMHSUSBOTG@@UAAXXZ|, OMAPMHSUSBOTG::ResetEndPoints

	EXPORT	|??_C@_1FI@GJKGKFGD@?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AAC?$AAh?$AAa?$AAr@| [ DATA ] ; `string'
	IMPORT	|SetEventData|

  00198			 AREA	 |.pdata|, PDATA
|$T44187| DCD	|$LN9@UpdateBatt|
	DCD	0x40003204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@GJKGKFGD@?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AAC?$AAh?$AAa?$AAr@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "M", 0x0, "H", 0x0, "S"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G"
	DCB	0x0, ":", 0x0, ":", 0x0, "U", 0x0, "p", 0x0, "d", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, "B", 0x0, "a", 0x0, "t", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "y", 0x0, "C", 0x0, "h", 0x0, "a"
	DCB	0x0, "r", 0x0, "g", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  086a4			 AREA	 |.text|, CODE, ARM

  086a4		 |?UpdateBatteryCharger@OMAPMHSUSBOTG@@UAAXK@Z| PROC ; OMAPMHSUSBOTG::UpdateBatteryCharger

; 2759 : {

  086a4		 |$LN9@UpdateBatt|
  086a4	e1a0c00d	 mov         r12, sp
  086a8	e92d0003	 stmdb       sp!, {r0, r1}
  086ac	e92d5000	 stmdb       sp!, {r12, lr}
  086b0	e24dd004	 sub         sp, sp, #4
  086b4		 |$M44184|

; 2760 :     if ((m_BatteryChargeStatus == dwCurValue) || (m_BatteryChargeEvent == NULL))

  086b4	e59d300c	 ldr         r3, [sp, #0xC]
  086b8	e2833f5e	 add         r3, r3, #0x5E, 30
  086bc	e5932000	 ldr         r2, [r3]
  086c0	e59d3010	 ldr         r3, [sp, #0x10]
  086c4	e1520003	 cmp         r2, r3
  086c8	0a000004	 beq         |$LN1@UpdateBatt|
  086cc	e59d300c	 ldr         r3, [sp, #0xC]
  086d0	e2833f5d	 add         r3, r3, #0x5D, 30
  086d4	e5933000	 ldr         r3, [r3]
  086d8	e3530000	 cmp         r3, #0
  086dc	1a000000	 bne         |$LN2@UpdateBatt|
  086e0		 |$LN1@UpdateBatt|

; 2761 :         return;

  086e0	ea00001c	 b           |$LN3@UpdateBatt|
  086e4		 |$LN2@UpdateBatt|

; 2762 : 
; 2763 :     m_BatteryChargeStatus = dwCurValue;

  086e4	e59d300c	 ldr         r3, [sp, #0xC]
  086e8	e2832f5e	 add         r2, r3, #0x5E, 30
  086ec	e59d3010	 ldr         r3, [sp, #0x10]
  086f0	e5823000	 str         r3, [r2]

; 2764 :     SetEventData(m_BatteryChargeEvent, m_BatteryChargeStatus);

  086f4	e59d300c	 ldr         r3, [sp, #0xC]
  086f8	e2833f5e	 add         r3, r3, #0x5E, 30
  086fc	e5931000	 ldr         r1, [r3]
  08700	e59d300c	 ldr         r3, [sp, #0xC]
  08704	e2833f5d	 add         r3, r3, #0x5D, 30
  08708	e5930000	 ldr         r0, [r3]
  0870c	eb000000	 bl          SetEventData

; 2765 :     SetEvent(m_BatteryChargeEvent);

  08710	e59d300c	 ldr         r3, [sp, #0xC]
  08714	e2833f5d	 add         r3, r3, #0x5D, 30
  08718	e5930000	 ldr         r0, [r3]
  0871c	eb000000	 bl          SetEvent

; 2766 :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("OMAPMHSUSBOTG::UpdateBatteryCharger to %d\r\n"), m_BatteryChargeStatus));

  08720	e59f3040	 ldr         r3, [pc, #0x40]
  08724	e5933440	 ldr         r3, [r3, #0x440]
  08728	e3130a02	 tst         r3, #2, 20
  0872c	0a000007	 beq         |$LN5@UpdateBatt|
  08730	e59d300c	 ldr         r3, [sp, #0xC]
  08734	e2833f5e	 add         r3, r3, #0x5E, 30
  08738	e5931000	 ldr         r1, [r3]
  0873c	e59f0020	 ldr         r0, [pc, #0x20]
  08740	eb000000	 bl          NKDbgPrintfW
  08744	e3a03001	 mov         r3, #1
  08748	e58d3000	 str         r3, [sp]
  0874c	ea000001	 b           |$LN6@UpdateBatt|
  08750		 |$LN5@UpdateBatt|
  08750	e3a03000	 mov         r3, #0
  08754	e58d3000	 str         r3, [sp]
  08758		 |$LN6@UpdateBatt|
  08758		 |$LN3@UpdateBatt|

; 2767 :     return;
; 2768 : }

  08758	e28dd004	 add         sp, sp, #4
  0875c	e89d6000	 ldmia       sp, {sp, lr}
  08760	e12fff1e	 bx          lr
  08764		 |$LN10@UpdateBatt|
  08764		 |$LN11@UpdateBatt|
  08764	00000000	 DCD         |??_C@_1FI@GJKGKFGD@?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AAC?$AAh?$AAa?$AAr@|
  08768		 |$LN12@UpdateBatt|
  08768	00000000	 DCD         |dpCurSettings|
  0876c		 |$M44185|

			 ENDP  ; |?UpdateBatteryCharger@OMAPMHSUSBOTG@@UAAXK@Z|, OMAPMHSUSBOTG::UpdateBatteryCharger

	EXPORT	|??_C@_1DE@HOMNFCDB@?$AAS?$AAo?$AAf?$AAt?$AAR?$AAe?$AAs?$AAe?$AAt?$AAM?$AAU?$AAS?$AAB?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|CeGetThreadPriority|

  001a0			 AREA	 |.pdata|, PDATA
|$T44198| DCD	|$LN12@SoftResetM|
	DCD	0x40011804

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@HOMNFCDB@?$AAS?$AAo?$AAf?$AAt?$AAR?$AAe?$AAs?$AAe?$AAt?$AAM?$AAU?$AAS?$AAB?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "o", 0x0, "f", 0x0, "t", 0x0, "R", 0x0, "e", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "U", 0x0, "S", 0x0, "B"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  0876c			 AREA	 |.text|, CODE, ARM

  0876c		 |?SoftResetMUSBController@OMAPMHSUSBOTG@@UAAHH@Z| PROC ; OMAPMHSUSBOTG::SoftResetMUSBController

; 2782 : {

  0876c		 |$LN12@SoftResetM|
  0876c	e1a0c00d	 mov         r12, sp
  08770	e92d0003	 stmdb       sp!, {r0, r1}
  08774	e92d5000	 stmdb       sp!, {r12, lr}
  08778	e24dd024	 sub         sp, sp, #0x24
  0877c		 |$M44195|

; 2783 :     PCSP_MUSB_OTG_REGS pOtg = m_pOTG->pUsbOtgRegs;      

  0877c	e59d302c	 ldr         r3, [sp, #0x2C]
  08780	e2833e15	 add         r3, r3, #0x15, 28
  08784	e5933000	 ldr         r3, [r3]
  08788	e2833018	 add         r3, r3, #0x18
  0878c	e5933000	 ldr         r3, [r3]
  08790	e58d3008	 str         r3, [sp, #8]

; 2784 :     PCSP_MUSB_GEN_REGS pGen = m_pOTG->pUsbGenRegs;

  08794	e59d302c	 ldr         r3, [sp, #0x2C]
  08798	e2833e15	 add         r3, r3, #0x15, 28
  0879c	e5933000	 ldr         r3, [r3]
  087a0	e2833020	 add         r3, r3, #0x20
  087a4	e5933000	 ldr         r3, [r3]
  087a8	e58d3004	 str         r3, [sp, #4]

; 2785 : 
; 2786 : 	UNREFERENCED_PARAMETER(bCalledFromPowerThread);
; 2787 : 
; 2788 :     DEBUGMSG(ZONE_OTG_INIT || ZONE_OTG_FUNCTION, (TEXT("SoftResetMUSBController\r\n")));    

  087ac	e59f3414	 ldr         r3, [pc, #0x414]
  087b0	e5933440	 ldr         r3, [r3, #0x440]
  087b4	e3130001	 tst         r3, #1
  087b8	1a000006	 bne         |$LN8@SoftResetM|
  087bc	e59f3404	 ldr         r3, [pc, #0x404]
  087c0	e5933440	 ldr         r3, [r3, #0x440]
  087c4	e3130a02	 tst         r3, #2, 20
  087c8	1a000002	 bne         |$LN8@SoftResetM|
  087cc	e3a03000	 mov         r3, #0
  087d0	e58d3010	 str         r3, [sp, #0x10]
  087d4	ea000003	 b           |$LN9@SoftResetM|
  087d8		 |$LN8@SoftResetM|
  087d8	e59f03e4	 ldr         r0, [pc, #0x3E4]
  087dc	eb000000	 bl          NKDbgPrintfW
  087e0	e3a03001	 mov         r3, #1
  087e4	e58d3010	 str         r3, [sp, #0x10]
  087e8		 |$LN9@SoftResetM|

; 2789 : 
; 2790 :     m_timeout = m_OTGRegCfg.startupTimeout;

  087e8	e59d302c	 ldr         r3, [sp, #0x2C]
  087ec	e2831f41	 add         r1, r3, #0x41, 30
  087f0	e59d302c	 ldr         r3, [sp, #0x2C]
  087f4	e2832e17	 add         r2, r3, #0x17, 28
  087f8	e5913000	 ldr         r3, [r1]
  087fc	e5823000	 str         r3, [r2]

; 2791 :     m_bRequestSession = FALSE;        

  08800	e59d302c	 ldr         r3, [sp, #0x2C]
  08804	e2832f59	 add         r2, r3, #0x59, 30
  08808	e3a03000	 mov         r3, #0
  0880c	e5823000	 str         r3, [r2]

; 2792 :     m_dwStatus = 0;

  08810	e59d302c	 ldr         r3, [sp, #0x2C]
  08814	e28320f8	 add         r2, r3, #0xF8
  08818	e3a03000	 mov         r3, #0
  0881c	e5823000	 str         r3, [r2]

; 2793 :     m_disconnected = TRUE;

  08820	e59d302c	 ldr         r3, [sp, #0x2C]
  08824	e2832f63	 add         r2, r3, #0x63, 30
  08828	e3a03001	 mov         r3, #1
  0882c	e5823000	 str         r3, [r2]

; 2794 :     m_bSuspendTransceiver = FALSE;

  08830	e59d302c	 ldr         r3, [sp, #0x2C]
  08834	e2832e19	 add         r2, r3, #0x19, 28
  08838	e3a03000	 mov         r3, #0
  0883c	e5823000	 str         r3, [r2]

; 2795 :     m_handleVBUSError = FALSE;

  08840	e59d302c	 ldr         r3, [sp, #0x2C]
  08844	e2832f65	 add         r2, r3, #0x65, 30
  08848	e3a03000	 mov         r3, #0
  0884c	e5823000	 str         r3, [r2]

; 2796 : 
; 2797 :     // Softreset the MUSB controller
; 2798 :     EnterCriticalSection(&m_pOTG->regCS);

  08850	e59d302c	 ldr         r3, [sp, #0x2C]
  08854	e2833e15	 add         r3, r3, #0x15, 28
  08858	e5933000	 ldr         r3, [r3]
  0885c	e2830038	 add         r0, r3, #0x38
  08860	eb000000	 bl          EnterCriticalSection

; 2799 :     DWORD dwPriority = CeGetThreadPriority(GetCurrentThread());

  08864	eb000000	 bl          GetCurrentThread
  08868	e58d0014	 str         r0, [sp, #0x14]
  0886c	e59d0014	 ldr         r0, [sp, #0x14]
  08870	eb000000	 bl          CeGetThreadPriority
  08874	e58d0018	 str         r0, [sp, #0x18]
  08878	e59d3018	 ldr         r3, [sp, #0x18]
  0887c	e58d3000	 str         r3, [sp]

; 2800 :     CeSetThreadPriority(GetCurrentThread(), 1);

  08880	eb000000	 bl          GetCurrentThread
  08884	e58d001c	 str         r0, [sp, #0x1C]
  08888	e3a01001	 mov         r1, #1
  0888c	e59d001c	 ldr         r0, [sp, #0x1C]
  08890	eb000000	 bl          CeSetThreadPriority

; 2801 :     SETREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_SOFTRESET);

  08894	e59d3008	 ldr         r3, [sp, #8]
  08898	e2833004	 add         r3, r3, #4
  0889c	e5933000	 ldr         r3, [r3]
  088a0	e3832002	 orr         r2, r3, #2
  088a4	e59d3008	 ldr         r3, [sp, #8]
  088a8	e2833004	 add         r3, r3, #4
  088ac	e5832000	 str         r2, [r3]
  088b0		 |$LN5@SoftResetM|

; 2802 :     // wait for reset done
; 2803 :     while ((INREG32(&pOtg->OTG_SYSSTATUS) & OTG_SYSSTATUS_RESETDONE) == 0)

  088b0	e59d3008	 ldr         r3, [sp, #8]
  088b4	e2833008	 add         r3, r3, #8
  088b8	e5933000	 ldr         r3, [r3]
  088bc	e3130001	 tst         r3, #1
  088c0	1a000000	 bne         |$LN4@SoftResetM|

; 2804 : 	{
; 2805 : 	}

  088c4	eafffff9	 b           |$LN5@SoftResetM|
  088c8		 |$LN4@SoftResetM|

; 2806 : 
; 2807 :     EnterCriticalSection(&m_csUSBClock);        

  088c8	e59d302c	 ldr         r3, [sp, #0x2C]
  088cc	e2830f49	 add         r0, r3, #0x49, 30
  088d0	eb000000	 bl          EnterCriticalSection

; 2808 : 	m_dwUSBUsageCount = 0;

  088d4	e59d302c	 ldr         r3, [sp, #0x2C]
  088d8	e2832e16	 add         r2, r3, #0x16, 28
  088dc	e3a03000	 mov         r3, #0
  088e0	e5823000	 str         r3, [r2]

; 2809 :     m_bUSBClockEnable = FALSE;

  088e4	e59d302c	 ldr         r3, [sp, #0x2C]
  088e8	e2832f57	 add         r2, r3, #0x57, 30
  088ec	e3a03000	 mov         r3, #0
  088f0	e5823000	 str         r3, [r2]

; 2810 :     StartUSBClock(TRUE);

  088f4	e3a01001	 mov         r1, #1
  088f8	e59d302c	 ldr         r3, [sp, #0x2C]
  088fc	e5933000	 ldr         r3, [r3]
  08900	e28330e4	 add         r3, r3, #0xE4
  08904	e59d002c	 ldr         r0, [sp, #0x2C]
  08908	e5933000	 ldr         r3, [r3]
  0890c	e1a0e00f	 mov         lr, pc
  08910	e12fff13	 bx          r3

; 2811 :     LeaveCriticalSection(&m_csUSBClock);        

  08914	e59d302c	 ldr         r3, [sp, #0x2C]
  08918	e2830f49	 add         r0, r3, #0x49, 30
  0891c	eb000000	 bl          LeaveCriticalSection

; 2812 : 
; 2813 :     if (m_OTGRegCfg.DisableHighSpeed)

  08920	e59d302c	 ldr         r3, [sp, #0x2C]
  08924	e2833c01	 add         r3, r3, #1, 24
  08928	e5933000	 ldr         r3, [r3]
  0892c	e3530000	 cmp         r3, #0
  08930	0a000009	 beq         |$LN3@SoftResetM|

; 2814 :         CLRREG8(&pGen->Power, POWER_HSENABLE);

  08934	e59d3004	 ldr         r3, [sp, #4]
  08938	e2833001	 add         r3, r3, #1
  0893c	e5d33000	 ldrb        r3, [r3]
  08940	e1a02003	 mov         r2, r3
  08944	e3e03020	 mvn         r3, #0x20
  08948	e0023003	 and         r3, r2, r3
  0894c	e20320ff	 and         r2, r3, #0xFF
  08950	e59d3004	 ldr         r3, [sp, #4]
  08954	e2833001	 add         r3, r3, #1
  08958	e5c32000	 strb        r2, [r3]
  0895c		 |$LN3@SoftResetM|

; 2815 :     CeSetThreadPriority(GetCurrentThread(), dwPriority);

  0895c	eb000000	 bl          GetCurrentThread
  08960	e58d0020	 str         r0, [sp, #0x20]
  08964	e59d1000	 ldr         r1, [sp]
  08968	e59d0020	 ldr         r0, [sp, #0x20]
  0896c	eb000000	 bl          CeSetThreadPriority

; 2816 : 
; 2817 :     ResetEndPoints();

  08970	e59d302c	 ldr         r3, [sp, #0x2C]
  08974	e5933000	 ldr         r3, [r3]
  08978	e28330ec	 add         r3, r3, #0xEC
  0897c	e59d002c	 ldr         r0, [sp, #0x2C]
  08980	e5933000	 ldr         r3, [r3]
  08984	e1a0e00f	 mov         lr, pc
  08988	e12fff13	 bx          r3

; 2818 :     LeaveCriticalSection(&m_pOTG->regCS);

  0898c	e59d302c	 ldr         r3, [sp, #0x2C]
  08990	e2833e15	 add         r3, r3, #0x15, 28
  08994	e5933000	 ldr         r3, [r3]
  08998	e2830038	 add         r0, r3, #0x38
  0899c	eb000000	 bl          LeaveCriticalSection

; 2819 : 
; 2820 :     // manually reset transceiver (Advisory 3.0.1.144)
; 2821 :     m_pTransceiver->Reset();

  089a0	e59d302c	 ldr         r3, [sp, #0x2C]
  089a4	e28330fc	 add         r3, r3, #0xFC
  089a8	e5932000	 ldr         r2, [r3]
  089ac	e59d302c	 ldr         r3, [sp, #0x2C]
  089b0	e28330fc	 add         r3, r3, #0xFC
  089b4	e5930000	 ldr         r0, [r3]
  089b8	e5923000	 ldr         r3, [r2]
  089bc	e2833024	 add         r3, r3, #0x24
  089c0	e5933000	 ldr         r3, [r3]
  089c4	e1a0e00f	 mov         lr, pc
  089c8	e12fff13	 bx          r3

; 2822 : 
; 2823 :     Sleep(100);

  089cc	e3a00064	 mov         r0, #0x64
  089d0	eb000000	 bl          Sleep

; 2824 : 
; 2825 :     EnterCriticalSection(&m_pOTG->regCS);

  089d4	e59d302c	 ldr         r3, [sp, #0x2C]
  089d8	e2833e15	 add         r3, r3, #0x15, 28
  089dc	e5933000	 ldr         r3, [r3]
  089e0	e2830038	 add         r0, r3, #0x38
  089e4	eb000000	 bl          EnterCriticalSection

; 2826 : 
; 2827 :     // TI spec TRM V.H 25.12.3.2 & 25.12.3.3
; 2828 : 
; 2829 :     // Clear the EnableForce bit 
; 2830 :     CLRREG32(&pOtg->OTG_FORCESTDBY, OTG_FORCESTDY_ENABLEFORCE);

  089e8	e59d3008	 ldr         r3, [sp, #8]
  089ec	e2833014	 add         r3, r3, #0x14
  089f0	e5932000	 ldr         r2, [r3]
  089f4	e3e03001	 mvn         r3, #1
  089f8	e0022003	 and         r2, r2, r3
  089fc	e59d3008	 ldr         r3, [sp, #8]
  08a00	e2833014	 add         r3, r3, #0x14
  08a04	e5832000	 str         r2, [r3]

; 2831 : 
; 2832 :     // Set the MIDLEMODE to NoStandy.  For smartfon, if use SmartStandy, system doesn't wake up from retention.
; 2833 :     CLRREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_M_MASK);

  08a08	e59d3008	 ldr         r3, [sp, #8]
  08a0c	e2833004	 add         r3, r3, #4
  08a10	e5932000	 ldr         r2, [r3]
  08a14	e3e03a03	 mvn         r3, #3, 20
  08a18	e0022003	 and         r2, r2, r3
  08a1c	e59d3008	 ldr         r3, [sp, #8]
  08a20	e2833004	 add         r3, r3, #4
  08a24	e5832000	 str         r2, [r3]

; 2834 :     //SETREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_M_SMARTSTDBY);
; 2835 : 
; 2836 :     // Set the SIDLEMODE to SmartIdle
; 2837 :     CLRREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_S_MASK);

  08a28	e59d3008	 ldr         r3, [sp, #8]
  08a2c	e2833004	 add         r3, r3, #4
  08a30	e5932000	 ldr         r2, [r3]
  08a34	e3e03018	 mvn         r3, #0x18
  08a38	e0022003	 and         r2, r2, r3
  08a3c	e59d3008	 ldr         r3, [sp, #8]
  08a40	e2833004	 add         r3, r3, #4
  08a44	e5832000	 str         r2, [r3]

; 2838 :     //SETREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_S_SMARTIDLE);
; 2839 : 
; 2840 :     // Clear the AutoIdle mode
; 2841 :     //CLRREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_AUTOIDLE);
; 2842 : 
; 2843 :     // Set back the AutoIdle mode to 1
; 2844 :     SETREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_AUTOIDLE);

  08a48	e59d3008	 ldr         r3, [sp, #8]
  08a4c	e2833004	 add         r3, r3, #4
  08a50	e5933000	 ldr         r3, [r3]
  08a54	e3832001	 orr         r2, r3, #1
  08a58	e59d3008	 ldr         r3, [sp, #8]
  08a5c	e2833004	 add         r3, r3, #4
  08a60	e5832000	 str         r2, [r3]

; 2845 : 
; 2846 :     // Configure to 12-pin, 8 bit ULPI    
; 2847 :     OUTREG32(&pOtg->OTG_INTERFSEL, OTG_INTERFSEL_12_PIN_ULPI);

  08a64	e59d3008	 ldr         r3, [sp, #8]
  08a68	e283200c	 add         r2, r3, #0xC
  08a6c	e3a03001	 mov         r3, #1
  08a70	e5823000	 str         r3, [r2]

; 2848 : 
; 2849 :     // Enable all interrupts except SOF.
; 2850 :     OUTREG8(&pGen->IntrUSBE, INTRUSB_ALL&~INTRUSB_SOF);  

  08a74	e59d3004	 ldr         r3, [sp, #4]
  08a78	e283200b	 add         r2, r3, #0xB
  08a7c	e3a030f7	 mov         r3, #0xF7
  08a80	e5c23000	 strb        r3, [r2]

; 2851 :     OUTREG16(&pGen->IntrTxE, 0xffff);

  08a84	e59d3004	 ldr         r3, [sp, #4]
  08a88	e2832006	 add         r2, r3, #6
  08a8c	e3a03cff	 mov         r3, #0xFF, 24
  08a90	e38330ff	 orr         r3, r3, #0xFF
  08a94	e5c23000	 strb        r3, [r2]
  08a98	e1a03423	 mov         r3, r3, lsr #8
  08a9c	e5c23001	 strb        r3, [r2, #1]

; 2852 :     OUTREG16(&pGen->IntrRxE, 0xfffe);

  08aa0	e59d3004	 ldr         r3, [sp, #4]
  08aa4	e2832008	 add         r2, r3, #8
  08aa8	e3a03cff	 mov         r3, #0xFF, 24
  08aac	e38330fe	 orr         r3, r3, #0xFE
  08ab0	e5c23000	 strb        r3, [r2]
  08ab4	e1a03423	 mov         r3, r3, lsr #8
  08ab8	e5c23001	 strb        r3, [r2, #1]

; 2853 : 
; 2854 :     OUTREG8(&pGen->Testmode,0);    

  08abc	e59d3004	 ldr         r3, [sp, #4]
  08ac0	e283200f	 add         r2, r3, #0xF
  08ac4	e3a03000	 mov         r3, #0
  08ac8	e5c23000	 strb        r3, [r2]

; 2855 : 
; 2856 :     ResetEndPoints();

  08acc	e59d302c	 ldr         r3, [sp, #0x2C]
  08ad0	e5933000	 ldr         r3, [r3]
  08ad4	e28330ec	 add         r3, r3, #0xEC
  08ad8	e59d002c	 ldr         r0, [sp, #0x2C]
  08adc	e5933000	 ldr         r3, [r3]
  08ae0	e1a0e00f	 mov         lr, pc
  08ae4	e12fff13	 bx          r3

; 2857 : 
; 2858 :     if (m_OTGRegCfg.DisableHighSpeed)

  08ae8	e59d302c	 ldr         r3, [sp, #0x2C]
  08aec	e2833c01	 add         r3, r3, #1, 24
  08af0	e5933000	 ldr         r3, [r3]
  08af4	e3530000	 cmp         r3, #0
  08af8	0a000012	 beq         |$LN2@SoftResetM|

; 2859 : 	{
; 2860 :         CLRREG8(&pGen->Power, POWER_HSENABLE);

  08afc	e59d3004	 ldr         r3, [sp, #4]
  08b00	e2833001	 add         r3, r3, #1
  08b04	e5d33000	 ldrb        r3, [r3]
  08b08	e1a02003	 mov         r2, r3
  08b0c	e3e03020	 mvn         r3, #0x20
  08b10	e0023003	 and         r3, r2, r3
  08b14	e20320ff	 and         r2, r3, #0xFF
  08b18	e59d3004	 ldr         r3, [sp, #4]
  08b1c	e2833001	 add         r3, r3, #1
  08b20	e5c32000	 strb        r2, [r3]

; 2861 :         SETREG8(&pGen->Power, POWER_SOFTCONN);

  08b24	e59d3004	 ldr         r3, [sp, #4]
  08b28	e2833001	 add         r3, r3, #1
  08b2c	e5d33000	 ldrb        r3, [r3]
  08b30	e3833040	 orr         r3, r3, #0x40
  08b34	e20320ff	 and         r2, r3, #0xFF
  08b38	e59d3004	 ldr         r3, [sp, #4]
  08b3c	e2833001	 add         r3, r3, #1
  08b40	e5c32000	 strb        r2, [r3]

; 2862 : 	}
; 2863 :     else

  08b44	ea000007	 b           |$LN1@SoftResetM|
  08b48		 |$LN2@SoftResetM|

; 2864 : 	{
; 2865 :         SETREG8(&pGen->Power, POWER_SOFTCONN | POWER_HSENABLE);

  08b48	e59d3004	 ldr         r3, [sp, #4]
  08b4c	e2833001	 add         r3, r3, #1
  08b50	e5d33000	 ldrb        r3, [r3]
  08b54	e3833060	 orr         r3, r3, #0x60
  08b58	e20320ff	 and         r2, r3, #0xFF
  08b5c	e59d3004	 ldr         r3, [sp, #4]
  08b60	e2833001	 add         r3, r3, #1
  08b64	e5c32000	 strb        r2, [r3]
  08b68		 |$LN1@SoftResetM|

; 2866 : 	}
; 2867 :         
; 2868 :     CLRREG8(&pGen->Power, POWER_SUSPENDM|POWER_EN_SUSPENDM);

  08b68	e59d3004	 ldr         r3, [sp, #4]
  08b6c	e2833001	 add         r3, r3, #1
  08b70	e5d33000	 ldrb        r3, [r3]
  08b74	e1a02003	 mov         r2, r3
  08b78	e3e03003	 mvn         r3, #3
  08b7c	e0023003	 and         r3, r2, r3
  08b80	e20320ff	 and         r2, r3, #0xFF
  08b84	e59d3004	 ldr         r3, [sp, #4]
  08b88	e2833001	 add         r3, r3, #1
  08b8c	e5c32000	 strb        r2, [r3]

; 2869 : 
; 2870 :     Sleep(10);

  08b90	e3a0000a	 mov         r0, #0xA
  08b94	eb000000	 bl          Sleep

; 2871 :     
; 2872 :     LeaveCriticalSection(&m_pOTG->regCS);

  08b98	e59d302c	 ldr         r3, [sp, #0x2C]
  08b9c	e2833e15	 add         r3, r3, #0x15, 28
  08ba0	e5933000	 ldr         r3, [r3]
  08ba4	e2830038	 add         r0, r3, #0x38
  08ba8	eb000000	 bl          LeaveCriticalSection

; 2873 : 
; 2874 :     return TRUE;

  08bac	e3a03001	 mov         r3, #1
  08bb0	e58d300c	 str         r3, [sp, #0xC]

; 2875 : }

  08bb4	e59d000c	 ldr         r0, [sp, #0xC]
  08bb8	e28dd024	 add         sp, sp, #0x24
  08bbc	e89d6000	 ldmia       sp, {sp, lr}
  08bc0	e12fff1e	 bx          lr
  08bc4		 |$LN13@SoftResetM|
  08bc4		 |$LN14@SoftResetM|
  08bc4	00000000	 DCD         |??_C@_1DE@HOMNFCDB@?$AAS?$AAo?$AAf?$AAt?$AAR?$AAe?$AAs?$AAe?$AAt?$AAM?$AAU?$AAS?$AAB?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  08bc8		 |$LN15@SoftResetM|
  08bc8	00000000	 DCD         |dpCurSettings|
  08bcc		 |$M44196|

			 ENDP  ; |?SoftResetMUSBController@OMAPMHSUSBOTG@@UAAHH@Z|, OMAPMHSUSBOTG::SoftResetMUSBController

	EXPORT	|??_C@_1CC@DPCJFHOC@?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@HPFGJLOI@?$AAM?$AAO?$AAD?$AAE?$AA_?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA_?$AAR?$AAE?$AAS?$AAU?$AAM?$AAE?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KE@JOHDDKAJ@?$AAO?$AAT?$AAG?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAI?$AAN?$AAT?$AAR?$AAU?$AAS?$AAB?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAT?$AAX?$AA?$CI@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@BIBJLHPE@?$AAO?$AAT?$AAG?$AA?3?$AA?5?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAP?$AAO?$AAW?$AAE?$AAR?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@JAMFAJPO@?$AAO?$AAT?$AAG?$AA?5?$AAm?$AA_?$AAf?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAD?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@EOFHGECP@?$AAm?$AA_?$AAb?$AAH?$AAN?$AAP?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@NMEPNECL@?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?5?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAS?$AAe?$AAt?$AA?5?$AAI?$AAO?$AAC?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@NOKHKCHD@?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAA?$AAg?$AAa?$AAi?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@HNLLBEOD@?$AAW?$AAe?$AA?5?$AAc?$AAa?$AAn?$AA?5?$AAp?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAr?$AAo?$AAl?$AAe?$AA?5?$AAs?$AAw?$AAi?$AAt?$AAc?$AAh?$AA?5?$AAl?$AAo?$AAa?$AAd?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@CEBDPKGH@?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAR?$AAe?$AAt?$AAe?$AAn?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAD?$AAe?$AAv?$AAC?$AAt?$AAl?$AA?5?$AAS?$AAe?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KO@NJLAEFJF@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAV?$AAa?$AAr?$AAi?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAI?$AAN?$AAT?$AAR?$AAU?$AAS?$AAB?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@HPHKMJJN@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAV?$AAa?$AAr?$AAi?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAI?$AAN?$AAT?$AAR?$AAU?$AAS?$AAB?$AA?5?$AAN?$AAo?$AA?5?$AAi?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@LCDIMNKM@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAV?$AAa?$AAr?$AAi?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAI?$AAN?$AAT?$AAR?$AAU?$AAS?$AAB?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@FHMCBMIA@?$AAN?$AAO?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAC?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@FCJJDMMJ@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAH?$AAo?$AAs?$AAt?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAs?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@EAGDHFMC@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAo?$AAn?$AA?5?$AAH?$AAo?$AAs?$AAt?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@CBPALHGG@?$AAO?$AAT?$AAG?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAs?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?5?$AAi?$AAn?$AAt?$AAr?$AA_?$AAt?$AAx?$AA?$CI?$AA0?$AAx?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HI@BAJMDGPM@?$AA?$CL?$AA?$CI?$AAm?$AA_?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CG?$AA?5?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAW?$AAA?$AAI?$AAT?$AA_?$AAH?$AAO?$AAS?$AAT?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@DPLIIPKK@?$AAT?$AAr?$AAy?$AA?5?$AAs?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAr?$AAe?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@CPNPIDG@?$AAS?$AAt?$AAo?$AAp?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$DN?$AA?$CF?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@GOCKJHDI@?$AA?$CL?$AA?$CI?$AAm?$AA_?$AAt?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAD?$AAO?$AA_?$AAT?$AAR?$AAA?$AAN?$AAS?$AAC?$AAE?$AAI?$AAV?$AAE?$AAR?$AA_?$AAS?$AAU@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@POPBHNLK@?$AAC?$AAa?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@PKNGFJOB@?$AAI?$AAn?$AAt?$AAr?$AAU?$AAS?$AAB?$AAE?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@KDCPHJJJ@?$AAI?$AAn?$AAt?$AAr?$AAR?$AAx?$AAE?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@JMPBKECI@?$AAI?$AAn?$AAt?$AAr?$AAT?$AAx?$AAE?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@CCNINLIC@?$AAW?$AAa?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@MODPKEGP@?$AAO?$AAT?$AAG?$AA?5?$AA?9?$AA?$DO?$AA?5?$AAS?$AAe?$AAt?$AA?5?$AAS?$AAY?$AAS?$AAI?$AAN?$AAT?$AAR?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@LJDGIGFM@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@GEMPOIGJ@?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@LIKFMDNI@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@JHHHCBHN@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAh?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@NBLBKOBI@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAh?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IO@FPNCIHBH@?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?3?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@LFHPFHCD@?$AA?$CL?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|IsAPIReady|
	IMPORT	|GetTickCount|
	IMPORT	|WaitForAPIReady|
	IMPORT	|WaitForMultipleObjects|

  001a8			 AREA	 |.pdata|, PDATA
|$T44319| DCD	|$LN289@ThreadRun@3|
	DCD	0x4010e304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@DPCJFHOC@?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "R"
	DCB	0x0, "u", 0x0, "n", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "i"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@HPFGJLOI@?$AAM?$AAO?$AAD?$AAE?$AA_?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA_?$AAR?$AAE?$AAS?$AAU?$AAM?$AAE?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "O", 0x0, "D", 0x0, "E", 0x0, "_", 0x0, "S", 0x0, "Y"
	DCB	0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "_", 0x0, "R"
	DCB	0x0, "E", 0x0, "S", 0x0, "U", 0x0, "M", 0x0, "E", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KE@JOHDDKAJ@?$AAO?$AAT?$AAG?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAI?$AAN?$AAT?$AAR?$AAU?$AAS?$AAB?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAT?$AAX?$AA?$CI@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, " ", 0x0, "I", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ")", 0x0, ",", 0x0, " ", 0x0, "T", 0x0, "X"
	DCB	0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")"
	DCB	0x0, ",", 0x0, " ", 0x0, "R", 0x0, "X", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, ",", 0x0, " "
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "C", 0x0, "t", 0x0, "l"
	DCB	0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")"
	DCB	0x0, ",", 0x0, " ", 0x0, "m", 0x0, "_", 0x0, "d", 0x0, "w"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s"
	DCB	0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@BIBJLHPE@?$AAO?$AAT?$AAG?$AA?3?$AA?5?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAP?$AAO?$AAW?$AAE?$AAR?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, ":", 0x0, " ", 0x0, "S", 0x0, "Y"
	DCB	0x0, "S", 0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I"
	DCB	0x0, "G", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, ",", 0x0, " ", 0x0, "P", 0x0, "O", 0x0, "W"
	DCB	0x0, "E", 0x0, "R", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ")", 0x0, ",", 0x0, " ", 0x0, "D", 0x0, "E"
	DCB	0x0, "V", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@JAMFAJPO@?$AAO?$AAT?$AAG?$AA?5?$AAm?$AA_?$AAf?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAD?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, " ", 0x0, "m", 0x0, "_", 0x0, "f"
	DCB	0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "R"
	DCB	0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t"
	DCB	0x0, " ", 0x0, "D", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@EOFHGECP@?$AAm?$AA_?$AAb?$AAH?$AAN?$AAP?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "m"
	DCB	0x0, "_", 0x0, "b", 0x0, "H", 0x0, "N", 0x0, "P", 0x0, "S"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u"
	DCB	0x0, "p", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@NMEPNECL@?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?5?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAS?$AAe?$AAt?$AA?5?$AAI?$AAO?$AAC?$AAT@| DCB "D"
	DCB	0x0, "i", 0x0, "s", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "n"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, " ", 0x0, "C", 0x0, "o"
	DCB	0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, " ", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, " ", 0x0, "S"
	DCB	0x0, "e", 0x0, "t", 0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "T", 0x0, "R", 0x0, "L", 0x0, " ", 0x0, "a", 0x0, "g"
	DCB	0x0, "a", 0x0, "i", 0x0, "n", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@NOKHKCHD@?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAA?$AAg?$AAa?$AAi?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t"
	DCB	0x0, " ", 0x0, "S", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, " ", 0x0, "A", 0x0, "g", 0x0, "a"
	DCB	0x0, "i", 0x0, "n", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@HNLLBEOD@?$AAW?$AAe?$AA?5?$AAc?$AAa?$AAn?$AA?5?$AAp?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAr?$AAo?$AAl?$AAe?$AA?5?$AAs?$AAw?$AAi?$AAt?$AAc?$AAh?$AA?5?$AAl?$AAo?$AAa?$AAd?$AAi@| DCB "W"
	DCB	0x0, "e", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "n", 0x0, " "
	DCB	0x0, "p", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, " ", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "e"
	DCB	0x0, " ", 0x0, "s", 0x0, "w", 0x0, "i", 0x0, "t", 0x0, "c"
	DCB	0x0, "h", 0x0, " ", 0x0, "l", 0x0, "o", 0x0, "a", 0x0, "d"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "w", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@CEBDPKGH@?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAR?$AAe?$AAt?$AAe?$AAn?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAD?$AAe?$AAv?$AAC?$AAt?$AAl?$AA?5?$AAS?$AAe?$AAs@| DCB "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, " "
	DCB	0x0, "R", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "w", 0x0, "i"
	DCB	0x0, "t", 0x0, "h", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "C", 0x0, "t", 0x0, "l", 0x0, " ", 0x0, "S", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KO@NJLAEFJF@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAV?$AAa?$AAr?$AAi?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAI?$AAN?$AAT?$AAR?$AAU?$AAS?$AAB?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ@| DCB "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u"
	DCB	0x0, "p", 0x0, "t", 0x0, " ", 0x0, "V", 0x0, "a", 0x0, "r"
	DCB	0x0, "i", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, " "
	DCB	0x0, "I", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, ",", 0x0, " ", 0x0, "T", 0x0, "X", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, ","
	DCB	0x0, " ", 0x0, "R", 0x0, "X", 0x0, "(", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, ")", 0x0, ",", 0x0, " ", 0x0, "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "C", 0x0, "t", 0x0, "l", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, ","
	DCB	0x0, " ", 0x0, "m", 0x0, "_", 0x0, "d", 0x0, "w", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@HPHKMJJN@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAV?$AAa?$AAr?$AAi?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAI?$AAN?$AAT?$AAR?$AAU?$AAS?$AAB?$AA?5?$AAN?$AAo?$AA?5?$AAi?$AAn@| DCB "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u"
	DCB	0x0, "p", 0x0, "t", 0x0, " ", 0x0, "V", 0x0, "a", 0x0, "r"
	DCB	0x0, "i", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, " "
	DCB	0x0, "I", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, " ", 0x0, "N", 0x0, "o", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u"
	DCB	0x0, "p", 0x0, "t", 0x0, " ", 0x0, "a", 0x0, "t", 0x0, " "
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@LCDIMNKM@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAV?$AAa?$AAr?$AAi?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAI?$AAN?$AAT?$AAR?$AAU?$AAS?$AAB?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ@| DCB "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u"
	DCB	0x0, "p", 0x0, "t", 0x0, " ", 0x0, "V", 0x0, "a", 0x0, "r"
	DCB	0x0, "i", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, " "
	DCB	0x0, "I", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "c"
	DCB	0x0, "t", 0x0, "l", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@FHMCBMIA@?$AAN?$AAO?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAC?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?6?$AA?$AA@| DCB "N"
	DCB	0x0, "O", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, " ", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d"
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@FCJJDMMJ@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAH?$AAo?$AAs?$AAt?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAs?$AAe@| DCB "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "u", 0x0, "m", 0x0, "e", 0x0, " "
	DCB	0x0, "H", 0x0, "o", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "M"
	DCB	0x0, "o", 0x0, "d", 0x0, "e", 0x0, " ", 0x0, "w", 0x0, "i"
	DCB	0x0, "t", 0x0, "h", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "q"
	DCB	0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "s"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "a", 0x0, "g", 0x0, "a", 0x0, "i", 0x0, "n"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@EAGDHFMC@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAo?$AAn?$AA?5?$AAH?$AAo?$AAs?$AAt?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "u", 0x0, "m", 0x0, "e", 0x0, " "
	DCB	0x0, "o", 0x0, "n", 0x0, " ", 0x0, "H", 0x0, "o", 0x0, "s"
	DCB	0x0, "t", 0x0, " ", 0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@CBPALHGG@?$AAO?$AAT?$AAG?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAs?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?5?$AAi?$AAn?$AAt?$AAr?$AA_?$AAt?$AAx?$AA?$CI?$AA0?$AAx?$AA?$CF@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, "s", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "_", 0x0, "t", 0x0, "x", 0x0, "(", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, ")", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "_", 0x0, "r", 0x0, "x", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@BAJMDGPM@?$AA?$CL?$AA?$CI?$AAm?$AA_?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CG?$AA?5?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAW?$AAA?$AAI?$AAT?$AA_?$AAH?$AAO?$AAS?$AAT?$AA_@| DCB "+"
	DCB	0x0, "(", 0x0, "m", 0x0, "_", 0x0, "d", 0x0, "w", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, " "
	DCB	0x0, "&", 0x0, " ", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T"
	DCB	0x0, "U", 0x0, "S", 0x0, "_", 0x0, "W", 0x0, "A", 0x0, "I"
	DCB	0x0, "T", 0x0, "_", 0x0, "H", 0x0, "O", 0x0, "S", 0x0, "T"
	DCB	0x0, "_", 0x0, "D", 0x0, "I", 0x0, "S", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "N", 0x0, "_", 0x0, "C", 0x0, "O", 0x0, "M"
	DCB	0x0, "P", 0x0, "L", 0x0, "E", 0x0, "T", 0x0, "E", 0x0, ")"
	DCB	0x0, " ", 0x0, "=", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "0", 0x0, "0", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@DPLIIPKK@?$AAT?$AAr?$AAy?$AA?5?$AAs?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAr?$AAe?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "r", 0x0, "y", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@CPNPIDG@?$AAS?$AAt?$AAo?$AAp?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$DN?$AA?$CF?$AAd@| DCB "S"
	DCB	0x0, "t", 0x0, "o", 0x0, "p", 0x0, "U", 0x0, "S", 0x0, "B"
	DCB	0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " "
	DCB	0x0, "w", 0x0, "i", 0x0, "t", 0x0, "h", 0x0, " ", 0x0, "o"
	DCB	0x0, "p", 0x0, "e", 0x0, "r", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, "=", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "m", 0x0, "_", 0x0, "d"
	DCB	0x0, "w", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "s", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@GOCKJHDI@?$AA?$CL?$AA?$CI?$AAm?$AA_?$AAt?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAD?$AAO?$AA_?$AAT?$AAR?$AAA?$AAN?$AAS?$AAC?$AAE?$AAI?$AAV?$AAE?$AAR?$AA_?$AAS?$AAU@| DCB "+"
	DCB	0x0, "(", 0x0, "m", 0x0, "_", 0x0, "t", 0x0, "i", 0x0, "m"
	DCB	0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "="
	DCB	0x0, "=", 0x0, " ", 0x0, "D", 0x0, "O", 0x0, "_", 0x0, "T"
	DCB	0x0, "R", 0x0, "A", 0x0, "N", 0x0, "S", 0x0, "C", 0x0, "E"
	DCB	0x0, "I", 0x0, "V", 0x0, "E", 0x0, "R", 0x0, "_", 0x0, "S"
	DCB	0x0, "U", 0x0, "S", 0x0, "P", 0x0, "E", 0x0, "N", 0x0, "D"
	DCB	0x0, "_", 0x0, "T", 0x0, "I", 0x0, "M", 0x0, "E", 0x0, "O"
	DCB	0x0, "U", 0x0, "T", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@POPBHNLK@?$AAC?$AAa?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "S", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "q"
	DCB	0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@PKNGFJOB@?$AAI?$AAn?$AAt?$AAr?$AAU?$AAS?$AAB?$AAE?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "U", 0x0, "S", 0x0, "B"
	DCB	0x0, "E", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@KDCPHJJJ@?$AAI?$AAn?$AAt?$AAr?$AAR?$AAx?$AAE?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "R", 0x0, "x", 0x0, "E"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@JMPBKECI@?$AAI?$AAn?$AAt?$AAr?$AAT?$AAx?$AAE?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "T", 0x0, "x", 0x0, "E"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@CCNINLIC@?$AAW?$AAa?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB "W"
	DCB	0x0, "a", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, ".", 0x0, ".", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@MODPKEGP@?$AAO?$AAT?$AAG?$AA?5?$AA?9?$AA?$DO?$AA?5?$AAS?$AAe?$AAt?$AA?5?$AAS?$AAY?$AAS?$AAI?$AAN?$AAT?$AAR?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, " ", 0x0, "-", 0x0, ">", 0x0, " "
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "S", 0x0, "Y"
	DCB	0x0, "S", 0x0, "I", 0x0, "N", 0x0, "T", 0x0, "R", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@LJDGIGFM@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "e", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, " ", 0x0, "r", 0x0, "o"
	DCB	0x0, "u", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@GEMPOIGJ@?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5@| DCB "T"
	DCB	0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "R"
	DCB	0x0, "u", 0x0, "n", 0x0, ":", 0x0, ":", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, " ", 0x0, "w", 0x0, "i", 0x0, "t", 0x0, "h", 0x0, " "
	DCB	0x0, "s", 0x0, "y", 0x0, "s", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@LIKFMDNI@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "c", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, " ", 0x0, "E", 0x0, "v", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, " ", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@JHHHCBHN@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAh?$AAa@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "c", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "s", 0x0, "u", 0x0, "m", 0x0, "e", 0x0, " ", 0x0, "E"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@NBLBKOBI@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAh?$AAa?$AAn@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "c", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "E", 0x0, "v"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "h", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IO@FPNCIHBH@?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?3?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "M", 0x0, "H", 0x0, "S"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G"
	DCB	0x0, ":", 0x0, ":", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, "R", 0x0, "u", 0x0, "n", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, " "
	DCB	0x0, "w", 0x0, "a", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "c", 0x0, "o", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "!", 0x0, "!"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@LFHPFHCD@?$AA?$CL?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, "M", 0x0, "H"
	DCB	0x0, "S", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T"
	DCB	0x0, "G", 0x0, ":", 0x0, ":", 0x0, "T", 0x0, "h", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, "R", 0x0, "u", 0x0, "n"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  08bcc			 AREA	 |.text|, CODE, ARM

  08bcc		 |?ThreadRun@OMAPMHSUSBOTG@@EAAKXZ| PROC ; OMAPMHSUSBOTG::ThreadRun

; 2894 : {

  08bcc		 |$LN289@ThreadRun@3|
  08bcc	e1a0c00d	 mov         r12, sp
  08bd0	e92d0001	 stmdb       sp!, {r0}
  08bd4	e92d5000	 stmdb       sp!, {r12, lr}
  08bd8	e24ddf59	 sub         sp, sp, #0x59, 30
  08bdc		 |$M44316|

; 2895 :     DWORD   dwEvent;
; 2896 :     DWORD   dwReady = 0x00;

  08bdc	e3a03000	 mov         r3, #0
  08be0	e58d300c	 str         r3, [sp, #0xC]

; 2897 :     BOOL    fTerminated = FALSE;

  08be4	e3a03000	 mov         r3, #0
  08be8	e58d3008	 str         r3, [sp, #8]

; 2898 :     PCSP_MUSB_GEN_REGS pGen;
; 2899 :     PCSP_MUSB_OTG_REGS pOtg;        
; 2900 :     DWORD dwSysConfigValue;
; 2901 :     int i;
; 2902 :     BOOL  bStratupWaitDone = FALSE;

  08bec	e3a03000	 mov         r3, #0
  08bf0	e58d3014	 str         r3, [sp, #0x14]

; 2903 :     DWORD dwStartTime;
; 2904 :     pGen = m_pOTG->pUsbGenRegs;

  08bf4	e59d316c	 ldr         r3, [sp, #0x16C]
  08bf8	e24330dc	 sub         r3, r3, #0xDC
  08bfc	e2833e15	 add         r3, r3, #0x15, 28
  08c00	e5933000	 ldr         r3, [r3]
  08c04	e2833020	 add         r3, r3, #0x20
  08c08	e5933000	 ldr         r3, [r3]
  08c0c	e58d301c	 str         r3, [sp, #0x1C]

; 2905 : 
; 2906 :     CeSetThreadPriority(GetCurrentThread(), m_OTGRegCfg.otgIstPrio);

  08c10	eb000000	 bl          GetCurrentThread
  08c14	e58d0054	 str         r0, [sp, #0x54]
  08c18	e59d316c	 ldr         r3, [sp, #0x16C]
  08c1c	e24330dc	 sub         r3, r3, #0xDC
  08c20	e2833f47	 add         r3, r3, #0x47, 30
  08c24	e5931000	 ldr         r1, [r3]
  08c28	e59d0054	 ldr         r0, [sp, #0x54]
  08c2c	eb000000	 bl          CeSetThreadPriority

; 2907 : 
; 2908 :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("+OMAPMHSUSBOTG::ThreadRun\r\n")));        

  08c30	e59f3020	 ldr         r3, [pc, #0x20]
  08c34	e5933440	 ldr         r3, [r3, #0x440]
  08c38	e3130a02	 tst         r3, #2, 20
  08c3c	0a000006	 beq         |$LN179@ThreadRun@3|
  08c40	e59f000c	 ldr         r0, [pc, #0xC]
  08c44	eb000000	 bl          NKDbgPrintfW
  08c48	e3a03001	 mov         r3, #1
  08c4c	e58d3058	 str         r3, [sp, #0x58]
  08c50	ea000003	 b           |$LN180@ThreadRun@3|
  08c54		 |$LN344@ThreadRun@3|
  08c54		 |$LN345@ThreadRun@3|
  08c54	00000000	 DCD         |??_C@_1DI@LFHPFHCD@?$AA?$CL?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  08c58		 |$LN346@ThreadRun@3|
  08c58	00000000	 DCD         |dpCurSettings|
  08c5c		 |$LN179@ThreadRun@3|
  08c5c	e3a03000	 mov         r3, #0
  08c60	e58d3058	 str         r3, [sp, #0x58]
  08c64		 |$LN180@ThreadRun@3|
  08c64		 |$LN176@ThreadRun@3|

; 2909 :     // Wait for both musbhost and musbfn drivers to load
; 2910 :     while ((dwEvent = WaitForMultipleObjects(2, m_pOTG->hReadyEvents, FALSE, INFINITE))!= WAIT_FAILED)

  08c64	e3e03000	 mvn         r3, #0
  08c68	e3a02000	 mov         r2, #0
  08c6c	e59d116c	 ldr         r1, [sp, #0x16C]
  08c70	e24110dc	 sub         r1, r1, #0xDC
  08c74	e2811e15	 add         r1, r1, #0x15, 28
  08c78	e5911000	 ldr         r1, [r1]
  08c7c	e3a00002	 mov         r0, #2
  08c80	eb000000	 bl          WaitForMultipleObjects
  08c84	e58d005c	 str         r0, [sp, #0x5C]
  08c88	e59d305c	 ldr         r3, [sp, #0x5C]
  08c8c	e58d3010	 str         r3, [sp, #0x10]
  08c90	e59d3010	 ldr         r3, [sp, #0x10]
  08c94	e3730001	 cmn         r3, #1
  08c98	0a000011	 beq         |$LN175@ThreadRun@3|

; 2911 :     {
; 2912 :         if (dwEvent == WAIT_OBJECT_0) // Device

  08c9c	e59d3010	 ldr         r3, [sp, #0x10]
  08ca0	e3530000	 cmp         r3, #0
  08ca4	1a000003	 bne         |$LN174@ThreadRun@3|

; 2913 :             dwReady |= 0x01;

  08ca8	e59d300c	 ldr         r3, [sp, #0xC]
  08cac	e3833001	 orr         r3, r3, #1
  08cb0	e58d300c	 str         r3, [sp, #0xC]
  08cb4	ea000005	 b           |$LN173@ThreadRun@3|
  08cb8		 |$LN174@ThreadRun@3|

; 2914 :         else if (dwEvent == WAIT_OBJECT_0+1) // Host

  08cb8	e59d3010	 ldr         r3, [sp, #0x10]
  08cbc	e3530001	 cmp         r3, #1
  08cc0	1a000002	 bne         |$LN172@ThreadRun@3|

; 2915 :             dwReady |= 0x02;

  08cc4	e59d300c	 ldr         r3, [sp, #0xC]
  08cc8	e3833002	 orr         r3, r3, #2
  08ccc	e58d300c	 str         r3, [sp, #0xC]
  08cd0		 |$LN172@ThreadRun@3|
  08cd0		 |$LN173@ThreadRun@3|

; 2916 : 
; 2917 :         if (dwReady == 0x03)

  08cd0	e59d300c	 ldr         r3, [sp, #0xC]
  08cd4	e3530003	 cmp         r3, #3
  08cd8	1a000000	 bne         |$LN171@ThreadRun@3|

; 2918 :             break;

  08cdc	ea000000	 b           |$LN175@ThreadRun@3|
  08ce0		 |$LN171@ThreadRun@3|

; 2919 :     }

  08ce0	eaffffdf	 b           |$LN176@ThreadRun@3|
  08ce4		 |$LN175@ThreadRun@3|

; 2920 : 
; 2921 :     // wait for shell API
; 2922 :     WaitForAPIReady(SH_SHELL, 45000);

  08ce4	e3a01caf	 mov         r1, #0xAF, 24
  08ce8	e38110c8	 orr         r1, r1, #0xC8
  08cec	e3a00055	 mov         r0, #0x55
  08cf0	eb000000	 bl          WaitForAPIReady

; 2923 : 	
; 2924 :     m_bIncCount = FALSE;    

  08cf4	e59d316c	 ldr         r3, [sp, #0x16C]
  08cf8	e24330dc	 sub         r3, r3, #0xDC
  08cfc	e2832d06	 add         r2, r3, #6, 26
  08d00	e3a03000	 mov         r3, #0
  08d04	e5823000	 str         r3, [r2]

; 2925 :     m_bExtendOTGSuspend = FALSE;

  08d08	e59d316c	 ldr         r3, [sp, #0x16C]
  08d0c	e24330dc	 sub         r3, r3, #0xDC
  08d10	e2832f61	 add         r2, r3, #0x61, 30
  08d14	e3a03000	 mov         r3, #0
  08d18	e5823000	 str         r3, [r2]

; 2926 :     // Here to update the state to idle state
; 2927 :     m_UsbOtgState = USBOTG_b_idle;

  08d1c	e59d316c	 ldr         r3, [sp, #0x16C]
  08d20	e24330dc	 sub         r3, r3, #0xDC
  08d24	e2832070	 add         r2, r3, #0x70
  08d28	e3a03009	 mov         r3, #9
  08d2c	e5823000	 str         r3, [r2]

; 2928 :     m_UsbOtgInput.bit.id = 1;

  08d30	e59d316c	 ldr         r3, [sp, #0x16C]
  08d34	e24330dc	 sub         r3, r3, #0xDC
  08d38	e283304c	 add         r3, r3, #0x4C
  08d3c	e5933000	 ldr         r3, [r3]
  08d40	e3832902	 orr         r2, r3, #2, 18
  08d44	e59d316c	 ldr         r3, [sp, #0x16C]
  08d48	e24330dc	 sub         r3, r3, #0xDC
  08d4c	e283304c	 add         r3, r3, #0x4C
  08d50	e5832000	 str         r2, [r3]

; 2929 :     EventNotification();

  08d54	e59d316c	 ldr         r3, [sp, #0x16C]
  08d58	e24320dc	 sub         r2, r3, #0xDC
  08d5c	e59d316c	 ldr         r3, [sp, #0x16C]
  08d60	e24300dc	 sub         r0, r3, #0xDC
  08d64	e5923000	 ldr         r3, [r2]
  08d68	e2833074	 add         r3, r3, #0x74
  08d6c	e5933000	 ldr         r3, [r3]
  08d70	e1a0e00f	 mov         lr, pc
  08d74	e12fff13	 bx          r3

; 2930 : 
; 2931 :     m_disconnected = TRUE;

  08d78	e59d316c	 ldr         r3, [sp, #0x16C]
  08d7c	e24330dc	 sub         r3, r3, #0xDC
  08d80	e2832f63	 add         r2, r3, #0x63, 30
  08d84	e3a03001	 mov         r3, #1
  08d88	e5823000	 str         r3, [r2]

; 2932 :     m_bSuspendTransceiver = FALSE;

  08d8c	e59d316c	 ldr         r3, [sp, #0x16C]
  08d90	e24330dc	 sub         r3, r3, #0xDC
  08d94	e2832e19	 add         r2, r3, #0x19, 28
  08d98	e3a03000	 mov         r3, #0
  08d9c	e5823000	 str         r3, [r2]

; 2933 :     m_handleVBUSError = FALSE;

  08da0	e59d316c	 ldr         r3, [sp, #0x16C]
  08da4	e24330dc	 sub         r3, r3, #0xDC
  08da8	e2832f65	 add         r2, r3, #0x65, 30
  08dac	e3a03000	 mov         r3, #0
  08db0	e5823000	 str         r3, [r2]

; 2934 :     dwStartTime = GetTickCount();

  08db4	eb000000	 bl          GetTickCount
  08db8	e58d0060	 str         r0, [sp, #0x60]
  08dbc	e59d3060	 ldr         r3, [sp, #0x60]
  08dc0	e58d3024	 str         r3, [sp, #0x24]

; 2935 : 
; 2936 :     // Now you have all drivers loading and hence can do the register on the bus...
; 2937 :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("OMAPMHSUSBOTG::ThreadRun: Enable Interrupt waiting for connection!!!\r\n")));

  08dc4	e59f3fa8	 ldr         r3, [pc, #0xFA8]
  08dc8	e5933440	 ldr         r3, [r3, #0x440]
  08dcc	e3130a02	 tst         r3, #2, 20
  08dd0	0a000004	 beq         |$LN181@ThreadRun@3|
  08dd4	e59f0fd8	 ldr         r0, [pc, #0xFD8]
  08dd8	eb000000	 bl          NKDbgPrintfW
  08ddc	e3a03001	 mov         r3, #1
  08de0	e58d3064	 str         r3, [sp, #0x64]
  08de4	ea000001	 b           |$LN182@ThreadRun@3|
  08de8		 |$LN181@ThreadRun@3|
  08de8	e3a03000	 mov         r3, #0
  08dec	e58d3064	 str         r3, [sp, #0x64]
  08df0		 |$LN182@ThreadRun@3|

; 2938 : 
; 2939 :     StartUSBClock(TRUE);

  08df0	e3a01001	 mov         r1, #1
  08df4	e59d316c	 ldr         r3, [sp, #0x16C]
  08df8	e24320dc	 sub         r2, r3, #0xDC
  08dfc	e59d316c	 ldr         r3, [sp, #0x16C]
  08e00	e24300dc	 sub         r0, r3, #0xDC
  08e04	e5923000	 ldr         r3, [r2]
  08e08	e28330e4	 add         r3, r3, #0xE4
  08e0c	e5933000	 ldr         r3, [r3]
  08e10	e1a0e00f	 mov         lr, pc
  08e14	e12fff13	 bx          r3

; 2940 :     // Configure the rest of the stuff:
; 2941 :     pOtg = m_pOTG->pUsbOtgRegs;

  08e18	e59d316c	 ldr         r3, [sp, #0x16C]
  08e1c	e24330dc	 sub         r3, r3, #0xDC
  08e20	e2833e15	 add         r3, r3, #0x15, 28
  08e24	e5933000	 ldr         r3, [r3]
  08e28	e2833018	 add         r3, r3, #0x18
  08e2c	e5933000	 ldr         r3, [r3]
  08e30	e58d3028	 str         r3, [sp, #0x28]

; 2942 : 
; 2943 :     if (m_OTGRegCfg.DisableHighSpeed)

  08e34	e59d316c	 ldr         r3, [sp, #0x16C]
  08e38	e24330dc	 sub         r3, r3, #0xDC
  08e3c	e2833c01	 add         r3, r3, #1, 24
  08e40	e5933000	 ldr         r3, [r3]
  08e44	e3530000	 cmp         r3, #0
  08e48	0a000009	 beq         |$LN170@ThreadRun@3|

; 2944 :         CLRREG8(&pGen->Power, POWER_HSENABLE);

  08e4c	e59d301c	 ldr         r3, [sp, #0x1C]
  08e50	e2833001	 add         r3, r3, #1
  08e54	e5d33000	 ldrb        r3, [r3]
  08e58	e1a02003	 mov         r2, r3
  08e5c	e3e03020	 mvn         r3, #0x20
  08e60	e0023003	 and         r3, r2, r3
  08e64	e20320ff	 and         r2, r3, #0xFF
  08e68	e59d301c	 ldr         r3, [sp, #0x1C]
  08e6c	e2833001	 add         r3, r3, #1
  08e70	e5c32000	 strb        r2, [r3]
  08e74		 |$LN170@ThreadRun@3|

; 2945 :     
; 2946 :     // Configuring according to TI spec TRM V.H 25.12.3.2 & 25.12.3.3
; 2947 :     // Clear the EnableForce bit 
; 2948 :     CLRREG32(&pOtg->OTG_FORCESTDBY, OTG_FORCESTDY_ENABLEFORCE);

  08e74	e59d3028	 ldr         r3, [sp, #0x28]
  08e78	e2833014	 add         r3, r3, #0x14
  08e7c	e5932000	 ldr         r2, [r3]
  08e80	e3e03001	 mvn         r3, #1
  08e84	e0022003	 and         r2, r2, r3
  08e88	e59d3028	 ldr         r3, [sp, #0x28]
  08e8c	e2833014	 add         r3, r3, #0x14
  08e90	e5832000	 str         r2, [r3]

; 2949 : 
; 2950 :     // Set the MIDLEMODE to SmartStandy
; 2951 :     CLRREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_M_MASK);

  08e94	e59d3028	 ldr         r3, [sp, #0x28]
  08e98	e2833004	 add         r3, r3, #4
  08e9c	e5932000	 ldr         r2, [r3]
  08ea0	e3e03a03	 mvn         r3, #3, 20
  08ea4	e0022003	 and         r2, r2, r3
  08ea8	e59d3028	 ldr         r3, [sp, #0x28]
  08eac	e2833004	 add         r3, r3, #4
  08eb0	e5832000	 str         r2, [r3]

; 2952 :     SETREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_M_SMARTSTDBY);

  08eb4	e59d3028	 ldr         r3, [sp, #0x28]
  08eb8	e2833004	 add         r3, r3, #4
  08ebc	e5933000	 ldr         r3, [r3]
  08ec0	e3832a02	 orr         r2, r3, #2, 20
  08ec4	e59d3028	 ldr         r3, [sp, #0x28]
  08ec8	e2833004	 add         r3, r3, #4
  08ecc	e5832000	 str         r2, [r3]

; 2953 : 
; 2954 :     // Set the SIDLEMODE to SmartIdle
; 2955 :     CLRREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_S_MASK);

  08ed0	e59d3028	 ldr         r3, [sp, #0x28]
  08ed4	e2833004	 add         r3, r3, #4
  08ed8	e5932000	 ldr         r2, [r3]
  08edc	e3e03018	 mvn         r3, #0x18
  08ee0	e0022003	 and         r2, r2, r3
  08ee4	e59d3028	 ldr         r3, [sp, #0x28]
  08ee8	e2833004	 add         r3, r3, #4
  08eec	e5832000	 str         r2, [r3]

; 2956 :     SETREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_S_SMARTIDLE);

  08ef0	e59d3028	 ldr         r3, [sp, #0x28]
  08ef4	e2833004	 add         r3, r3, #4
  08ef8	e5933000	 ldr         r3, [r3]
  08efc	e3832010	 orr         r2, r3, #0x10
  08f00	e59d3028	 ldr         r3, [sp, #0x28]
  08f04	e2833004	 add         r3, r3, #4
  08f08	e5832000	 str         r2, [r3]

; 2957 : 
; 2958 :     // Clear the AutoIdle mode
; 2959 :     CLRREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_AUTOIDLE);

  08f0c	e59d3028	 ldr         r3, [sp, #0x28]
  08f10	e2833004	 add         r3, r3, #4
  08f14	e5932000	 ldr         r2, [r3]
  08f18	e3e03001	 mvn         r3, #1
  08f1c	e0022003	 and         r2, r2, r3
  08f20	e59d3028	 ldr         r3, [sp, #0x28]
  08f24	e2833004	 add         r3, r3, #4
  08f28	e5832000	 str         r2, [r3]

; 2960 : 
; 2961 :     // Set back the AutoIdle mode to 1
; 2962 :     SETREG32(&pOtg->OTG_SYSCONFIG, OTG_SYSCONF_AUTOIDLE);

  08f2c	e59d3028	 ldr         r3, [sp, #0x28]
  08f30	e2833004	 add         r3, r3, #4
  08f34	e5933000	 ldr         r3, [r3]
  08f38	e3832001	 orr         r2, r3, #1
  08f3c	e59d3028	 ldr         r3, [sp, #0x28]
  08f40	e2833004	 add         r3, r3, #4
  08f44	e5832000	 str         r2, [r3]

; 2963 : 
; 2964 :     // Configure to 12-pin, 8 bit ULPI    
; 2965 :     OUTREG32(&pOtg->OTG_INTERFSEL, OTG_INTERFSEL_12_PIN_ULPI);

  08f48	e59d3028	 ldr         r3, [sp, #0x28]
  08f4c	e283200c	 add         r2, r3, #0xC
  08f50	e3a03001	 mov         r3, #1
  08f54	e5823000	 str         r3, [r2]

; 2966 : 
; 2967 :     m_bRequestSession = FALSE;        

  08f58	e59d316c	 ldr         r3, [sp, #0x16C]
  08f5c	e24330dc	 sub         r3, r3, #0xDC
  08f60	e2832f59	 add         r2, r3, #0x59, 30
  08f64	e3a03000	 mov         r3, #0
  08f68	e5823000	 str         r3, [r2]

; 2968 : 
; 2969 :     m_dwStatus = 0;

  08f6c	e59d316c	 ldr         r3, [sp, #0x16C]
  08f70	e24330dc	 sub         r3, r3, #0xDC
  08f74	e28320f8	 add         r2, r3, #0xF8
  08f78	e3a03000	 mov         r3, #0
  08f7c	e5823000	 str         r3, [r2]

; 2970 :     
; 2971 :     m_pOTG->hPowerEvent = CreateEvent(0, TRUE, FALSE, NULL);

  08f80	e3a03000	 mov         r3, #0
  08f84	e3a02000	 mov         r2, #0
  08f88	e3a01001	 mov         r1, #1
  08f8c	e3a00000	 mov         r0, #0
  08f90	eb000000	 bl          CreateEventW
  08f94	e58d0068	 str         r0, [sp, #0x68]
  08f98	e59d316c	 ldr         r3, [sp, #0x16C]
  08f9c	e24330dc	 sub         r3, r3, #0xDC
  08fa0	e2833e15	 add         r3, r3, #0x15, 28
  08fa4	e5933000	 ldr         r3, [r3]
  08fa8	e2832058	 add         r2, r3, #0x58
  08fac	e59d3068	 ldr         r3, [sp, #0x68]
  08fb0	e5823000	 str         r3, [r2]

; 2972 :     if (m_pOTG->hPowerEvent == NULL)

  08fb4	e59d316c	 ldr         r3, [sp, #0x16C]
  08fb8	e24330dc	 sub         r3, r3, #0xDC
  08fbc	e2833e15	 add         r3, r3, #0x15, 28
  08fc0	e5933000	 ldr         r3, [r3]
  08fc4	e2833058	 add         r3, r3, #0x58
  08fc8	e5933000	 ldr         r3, [r3]
  08fcc	e3530000	 cmp         r3, #0
  08fd0	1a00000d	 bne         |$LN169@ThreadRun@3|

; 2973 :     {
; 2974 :         DEBUGMSG(ZONE_OTG_ERROR, (TEXT("Failed to create Power Event handle\r\n")));

  08fd4	e59f3d98	 ldr         r3, [pc, #0xD98]
  08fd8	e5933440	 ldr         r3, [r3, #0x440]
  08fdc	e3130902	 tst         r3, #2, 18
  08fe0	0a000004	 beq         |$LN183@ThreadRun@3|
  08fe4	e59f0dc4	 ldr         r0, [pc, #0xDC4]
  08fe8	eb000000	 bl          NKDbgPrintfW
  08fec	e3a03001	 mov         r3, #1
  08ff0	e58d306c	 str         r3, [sp, #0x6C]
  08ff4	ea000001	 b           |$LN184@ThreadRun@3|
  08ff8		 |$LN183@ThreadRun@3|
  08ff8	e3a03000	 mov         r3, #0
  08ffc	e58d306c	 str         r3, [sp, #0x6C]
  09000		 |$LN184@ThreadRun@3|

; 2975 :         return FALSE;

  09000	e3a03000	 mov         r3, #0
  09004	e58d3040	 str         r3, [sp, #0x40]
  09008	ea000fc3	 b           |$LN177@ThreadRun@3|
  0900c		 |$LN169@ThreadRun@3|

; 2976 :     }
; 2977 : 
; 2978 :     m_pOTG->hResumeEvent = CreateEvent(0, TRUE, FALSE, NULL);

  0900c	e3a03000	 mov         r3, #0
  09010	e3a02000	 mov         r2, #0
  09014	e3a01001	 mov         r1, #1
  09018	e3a00000	 mov         r0, #0
  0901c	eb000000	 bl          CreateEventW
  09020	e58d0070	 str         r0, [sp, #0x70]
  09024	e59d316c	 ldr         r3, [sp, #0x16C]
  09028	e24330dc	 sub         r3, r3, #0xDC
  0902c	e2833e15	 add         r3, r3, #0x15, 28
  09030	e5933000	 ldr         r3, [r3]
  09034	e283205c	 add         r2, r3, #0x5C
  09038	e59d3070	 ldr         r3, [sp, #0x70]
  0903c	e5823000	 str         r3, [r2]

; 2979 :     if (m_pOTG->hResumeEvent == NULL)

  09040	e59d316c	 ldr         r3, [sp, #0x16C]
  09044	e24330dc	 sub         r3, r3, #0xDC
  09048	e2833e15	 add         r3, r3, #0x15, 28
  0904c	e5933000	 ldr         r3, [r3]
  09050	e283305c	 add         r3, r3, #0x5C
  09054	e5933000	 ldr         r3, [r3]
  09058	e3530000	 cmp         r3, #0
  0905c	1a00000d	 bne         |$LN168@ThreadRun@3|

; 2980 :     {
; 2981 :         DEBUGMSG(ZONE_OTG_ERROR, (TEXT("Failed to create Resume Event handle\r\n")));

  09060	e59f3d0c	 ldr         r3, [pc, #0xD0C]
  09064	e5933440	 ldr         r3, [r3, #0x440]
  09068	e3130902	 tst         r3, #2, 18
  0906c	0a000004	 beq         |$LN185@ThreadRun@3|
  09070	e59f0d34	 ldr         r0, [pc, #0xD34]
  09074	eb000000	 bl          NKDbgPrintfW
  09078	e3a03001	 mov         r3, #1
  0907c	e58d3074	 str         r3, [sp, #0x74]
  09080	ea000001	 b           |$LN186@ThreadRun@3|
  09084		 |$LN185@ThreadRun@3|
  09084	e3a03000	 mov         r3, #0
  09088	e58d3074	 str         r3, [sp, #0x74]
  0908c		 |$LN186@ThreadRun@3|

; 2982 :         return FALSE;

  0908c	e3a03000	 mov         r3, #0
  09090	e58d3040	 str         r3, [sp, #0x40]
  09094	ea000fa0	 b           |$LN177@ThreadRun@3|
  09098		 |$LN168@ThreadRun@3|

; 2983 :     }
; 2984 : 
; 2985 :     // Now we can set the interrupt routine
; 2986 :     m_hIntrEvent = CreateEvent(0, FALSE, FALSE, NULL);

  09098	e3a03000	 mov         r3, #0
  0909c	e3a02000	 mov         r2, #0
  090a0	e3a01000	 mov         r1, #0
  090a4	e3a00000	 mov         r0, #0
  090a8	eb000000	 bl          CreateEventW
  090ac	e58d0078	 str         r0, [sp, #0x78]
  090b0	e59d316c	 ldr         r3, [sp, #0x16C]
  090b4	e24330dc	 sub         r3, r3, #0xDC
  090b8	e2832f53	 add         r2, r3, #0x53, 30
  090bc	e59d3078	 ldr         r3, [sp, #0x78]
  090c0	e5823000	 str         r3, [r2]

; 2987 :     if (m_hIntrEvent == NULL)

  090c4	e59d316c	 ldr         r3, [sp, #0x16C]
  090c8	e24330dc	 sub         r3, r3, #0xDC
  090cc	e2833f53	 add         r3, r3, #0x53, 30
  090d0	e5933000	 ldr         r3, [r3]
  090d4	e3530000	 cmp         r3, #0
  090d8	1a00000d	 bne         |$LN167@ThreadRun@3|

; 2988 :     {
; 2989 :         DEBUGMSG(ZONE_OTG_ERROR, (TEXT("Failed to create Interrupt Event handle\r\n")));

  090dc	e59f3c90	 ldr         r3, [pc, #0xC90]
  090e0	e5933440	 ldr         r3, [r3, #0x440]
  090e4	e3130902	 tst         r3, #2, 18
  090e8	0a000004	 beq         |$LN187@ThreadRun@3|
  090ec	e59f0cb4	 ldr         r0, [pc, #0xCB4]
  090f0	eb000000	 bl          NKDbgPrintfW
  090f4	e3a03001	 mov         r3, #1
  090f8	e58d307c	 str         r3, [sp, #0x7C]
  090fc	ea000001	 b           |$LN188@ThreadRun@3|
  09100		 |$LN187@ThreadRun@3|
  09100	e3a03000	 mov         r3, #0
  09104	e58d307c	 str         r3, [sp, #0x7C]
  09108		 |$LN188@ThreadRun@3|

; 2990 :         return FALSE;

  09108	e3a03000	 mov         r3, #0
  0910c	e58d3040	 str         r3, [sp, #0x40]
  09110	ea000f81	 b           |$LN177@ThreadRun@3|
  09114		 |$LN167@ThreadRun@3|

; 2991 :     }
; 2992 : 
; 2993 :     // Register the interrupt routine now
; 2994 :     // Initialize interrupt
; 2995 :     DEBUGMSG(ZONE_OTG_INFO, (TEXT("ThreadRun::Initialize Interrupt with sysintr = 0x%x\r\n"), m_dwSysIntr));

  09114	e59f3c58	 ldr         r3, [pc, #0xC58]
  09118	e5933440	 ldr         r3, [r3, #0x440]
  0911c	e3130a01	 tst         r3, #1, 20
  09120	0a000008	 beq         |$LN189@ThreadRun@3|
  09124	e59d316c	 ldr         r3, [sp, #0x16C]
  09128	e24330dc	 sub         r3, r3, #0xDC
  0912c	e2833f51	 add         r3, r3, #0x51, 30
  09130	e5931000	 ldr         r1, [r3]
  09134	e59f0c68	 ldr         r0, [pc, #0xC68]
  09138	eb000000	 bl          NKDbgPrintfW
  0913c	e3a03001	 mov         r3, #1
  09140	e58d3080	 str         r3, [sp, #0x80]
  09144	ea000001	 b           |$LN190@ThreadRun@3|
  09148		 |$LN189@ThreadRun@3|
  09148	e3a03000	 mov         r3, #0
  0914c	e58d3080	 str         r3, [sp, #0x80]
  09150		 |$LN190@ThreadRun@3|

; 2996 :     if (!InterruptInitialize(m_dwSysIntr, m_hIntrEvent, NULL, 0))

  09150	e3a03000	 mov         r3, #0
  09154	e3a02000	 mov         r2, #0
  09158	e59d116c	 ldr         r1, [sp, #0x16C]
  0915c	e24110dc	 sub         r1, r1, #0xDC
  09160	e2811f53	 add         r1, r1, #0x53, 30
  09164	e5911000	 ldr         r1, [r1]
  09168	e59d016c	 ldr         r0, [sp, #0x16C]
  0916c	e24000dc	 sub         r0, r0, #0xDC
  09170	e2800f51	 add         r0, r0, #0x51, 30
  09174	e5900000	 ldr         r0, [r0]
  09178	eb000000	 bl          InterruptInitialize
  0917c	e58d0084	 str         r0, [sp, #0x84]
  09180	e59d3084	 ldr         r3, [sp, #0x84]
  09184	e3530000	 cmp         r3, #0
  09188	1a00000d	 bne         |$LN166@ThreadRun@3|

; 2997 :     {
; 2998 :         DEBUGMSG(ZONE_OTG_ERROR, (TEXT("Failed to initialize the interrupt routine\r\n")));

  0918c	e59f3be0	 ldr         r3, [pc, #0xBE0]
  09190	e5933440	 ldr         r3, [r3, #0x440]
  09194	e3130902	 tst         r3, #2, 18
  09198	0a000004	 beq         |$LN191@ThreadRun@3|
  0919c	e59f0bfc	 ldr         r0, [pc, #0xBFC]
  091a0	eb000000	 bl          NKDbgPrintfW
  091a4	e3a03001	 mov         r3, #1
  091a8	e58d3088	 str         r3, [sp, #0x88]
  091ac	ea000001	 b           |$LN192@ThreadRun@3|
  091b0		 |$LN191@ThreadRun@3|
  091b0	e3a03000	 mov         r3, #0
  091b4	e58d3088	 str         r3, [sp, #0x88]
  091b8		 |$LN192@ThreadRun@3|

; 2999 :         // We need to do clean up here
; 3000 :         return FALSE;

  091b8	e3a03000	 mov         r3, #0
  091bc	e58d3040	 str         r3, [sp, #0x40]
  091c0	ea000f55	 b           |$LN177@ThreadRun@3|
  091c4		 |$LN166@ThreadRun@3|

; 3001 :     }
; 3002 : 
; 3003 :     m_pOTG->dwSysIntr = m_dwSysIntr;    

  091c4	e59d316c	 ldr         r3, [sp, #0x16C]
  091c8	e24330dc	 sub         r3, r3, #0xDC
  091cc	e2831f51	 add         r1, r3, #0x51, 30
  091d0	e59d316c	 ldr         r3, [sp, #0x16C]
  091d4	e24330dc	 sub         r3, r3, #0xDC
  091d8	e2833e15	 add         r3, r3, #0x15, 28
  091dc	e5933000	 ldr         r3, [r3]
  091e0	e2832050	 add         r2, r3, #0x50
  091e4	e5913000	 ldr         r3, [r1]
  091e8	e5823000	 str         r3, [r2]

; 3004 :     m_pOTG->hSysIntrEvent = m_hIntrEvent;

  091ec	e59d316c	 ldr         r3, [sp, #0x16C]
  091f0	e24330dc	 sub         r3, r3, #0xDC
  091f4	e2831f53	 add         r1, r3, #0x53, 30
  091f8	e59d316c	 ldr         r3, [sp, #0x16C]
  091fc	e24330dc	 sub         r3, r3, #0xDC
  09200	e2833e15	 add         r3, r3, #0x15, 28
  09204	e5933000	 ldr         r3, [r3]
  09208	e2832054	 add         r2, r3, #0x54
  0920c	e5913000	 ldr         r3, [r1]
  09210	e5823000	 str         r3, [r2]

; 3005 :     DEBUGMSG(ZONE_OTG_INFO, (TEXT("OTG -> Set SYSINTR = 0x%x\r\n"), m_pOTG->dwSysIntr));

  09214	e59f3b58	 ldr         r3, [pc, #0xB58]
  09218	e5933440	 ldr         r3, [r3, #0x440]
  0921c	e3130a01	 tst         r3, #1, 20
  09220	0a00000a	 beq         |$LN193@ThreadRun@3|
  09224	e59d316c	 ldr         r3, [sp, #0x16C]
  09228	e24330dc	 sub         r3, r3, #0xDC
  0922c	e2833e15	 add         r3, r3, #0x15, 28
  09230	e5933000	 ldr         r3, [r3]
  09234	e2833050	 add         r3, r3, #0x50
  09238	e5931000	 ldr         r1, [r3]
  0923c	e59f0b58	 ldr         r0, [pc, #0xB58]
  09240	eb000000	 bl          NKDbgPrintfW
  09244	e3a03001	 mov         r3, #1
  09248	e58d308c	 str         r3, [sp, #0x8C]
  0924c	ea000001	 b           |$LN194@ThreadRun@3|
  09250		 |$LN193@ThreadRun@3|
  09250	e3a03000	 mov         r3, #0
  09254	e58d308c	 str         r3, [sp, #0x8C]
  09258		 |$LN194@ThreadRun@3|

; 3006 :     // Ready to run the DMA thread
; 3007 :     m_pIdGnd->Init();

  09258	e59d316c	 ldr         r3, [sp, #0x16C]
  0925c	e24330dc	 sub         r3, r3, #0xDC
  09260	e2833f56	 add         r3, r3, #0x56, 30
  09264	e5932000	 ldr         r2, [r3]
  09268	e59d316c	 ldr         r3, [sp, #0x16C]
  0926c	e24330dc	 sub         r3, r3, #0xDC
  09270	e2833f56	 add         r3, r3, #0x56, 30
  09274	e5930000	 ldr         r0, [r3]
  09278	e5923000	 ldr         r3, [r2]
  0927c	e2833008	 add         r3, r3, #8
  09280	e5933000	 ldr         r3, [r3]
  09284	e1a0e00f	 mov         lr, pc
  09288	e12fff13	 bx          r3

; 3008 :     m_pDMA->Init();

  0928c	e59d316c	 ldr         r3, [sp, #0x16C]
  09290	e24330dc	 sub         r3, r3, #0xDC
  09294	e2833f55	 add         r3, r3, #0x55, 30
  09298	e5932000	 ldr         r2, [r3]
  0929c	e59d316c	 ldr         r3, [sp, #0x16C]
  092a0	e24330dc	 sub         r3, r3, #0xDC
  092a4	e2833f55	 add         r3, r3, #0x55, 30
  092a8	e5930000	 ldr         r0, [r3]
  092ac	e5923000	 ldr         r3, [r2]
  092b0	e2833008	 add         r3, r3, #8
  092b4	e5933000	 ldr         r3, [r3]
  092b8	e1a0e00f	 mov         lr, pc
  092bc	e12fff13	 bx          r3

; 3009 : 
; 3010 :     // Enable the interrupt now
; 3011 :     OUTREG8(&pGen->IntrUSBE, INTRUSB_ALL&~INTRUSB_SOF);  // Enable all interrupts except SOF.

  092c0	e59d301c	 ldr         r3, [sp, #0x1C]
  092c4	e283200b	 add         r2, r3, #0xB
  092c8	e3a030f7	 mov         r3, #0xF7
  092cc	e5c23000	 strb        r3, [r2]

; 3012 :     OUTREG16(&pGen->IntrTxE, 0xffff);

  092d0	e59d301c	 ldr         r3, [sp, #0x1C]
  092d4	e2832006	 add         r2, r3, #6
  092d8	e3a03cff	 mov         r3, #0xFF, 24
  092dc	e38330ff	 orr         r3, r3, #0xFF
  092e0	e5c23000	 strb        r3, [r2]
  092e4	e1a03423	 mov         r3, r3, lsr #8
  092e8	e5c23001	 strb        r3, [r2, #1]

; 3013 :     OUTREG16(&pGen->IntrRxE, 0xfffe);

  092ec	e59d301c	 ldr         r3, [sp, #0x1C]
  092f0	e2832008	 add         r2, r3, #8
  092f4	e3a03cff	 mov         r3, #0xFF, 24
  092f8	e38330fe	 orr         r3, r3, #0xFE
  092fc	e5c23000	 strb        r3, [r2]
  09300	e1a03423	 mov         r3, r3, lsr #8
  09304	e5c23001	 strb        r3, [r2, #1]

; 3014 : 
; 3015 :     OUTREG8(&pGen->Testmode,0);    

  09308	e59d301c	 ldr         r3, [sp, #0x1C]
  0930c	e283200f	 add         r2, r3, #0xF
  09310	e3a03000	 mov         r3, #0
  09314	e5c23000	 strb        r3, [r2]

; 3016 : 
; 3017 :     // Set connection bit here, ready to process
; 3018 : 
; 3019 :     // Disable the session request bit for devctl
; 3020 :     DEBUGMSG(ZONE_OTG_INFO, (TEXT("DevCtl = 0x%x\r\n"), INREG8(&pGen->DevCtl)));

  09318	e59f3a54	 ldr         r3, [pc, #0xA54]
  0931c	e5933440	 ldr         r3, [r3, #0x440]
  09320	e3130a01	 tst         r3, #1, 20
  09324	0a000008	 beq         |$LN195@ThreadRun@3|
  09328	e59d301c	 ldr         r3, [sp, #0x1C]
  0932c	e2833060	 add         r3, r3, #0x60
  09330	e5d33000	 ldrb        r3, [r3]
  09334	e1a01003	 mov         r1, r3
  09338	e59f0a54	 ldr         r0, [pc, #0xA54]
  0933c	eb000000	 bl          NKDbgPrintfW
  09340	e3a03001	 mov         r3, #1
  09344	e58d3090	 str         r3, [sp, #0x90]
  09348	ea000001	 b           |$LN196@ThreadRun@3|
  0934c		 |$LN195@ThreadRun@3|
  0934c	e3a03000	 mov         r3, #0
  09350	e58d3090	 str         r3, [sp, #0x90]
  09354		 |$LN196@ThreadRun@3|

; 3021 :     CLRREG8(&pGen->DevCtl, DEVCTL_SESSION);

  09354	e59d301c	 ldr         r3, [sp, #0x1C]
  09358	e2833060	 add         r3, r3, #0x60
  0935c	e5d33000	 ldrb        r3, [r3]
  09360	e1a02003	 mov         r2, r3
  09364	e3e03001	 mvn         r3, #1
  09368	e0023003	 and         r3, r2, r3
  0936c	e20320ff	 and         r2, r3, #0xFF
  09370	e59d301c	 ldr         r3, [sp, #0x1C]
  09374	e2833060	 add         r3, r3, #0x60
  09378	e5c32000	 strb        r2, [r3]

; 3022 :     DEBUGMSG(ZONE_OTG_INFO, (TEXT("Waiting ...\r\n")));

  0937c	e59f39f0	 ldr         r3, [pc, #0x9F0]
  09380	e5933440	 ldr         r3, [r3, #0x440]
  09384	e3130a01	 tst         r3, #1, 20
  09388	0a000004	 beq         |$LN197@ThreadRun@3|
  0938c	e59f0a04	 ldr         r0, [pc, #0xA04]
  09390	eb000000	 bl          NKDbgPrintfW
  09394	e3a03001	 mov         r3, #1
  09398	e58d3094	 str         r3, [sp, #0x94]
  0939c	ea000001	 b           |$LN198@ThreadRun@3|
  093a0		 |$LN197@ThreadRun@3|
  093a0	e3a03000	 mov         r3, #0
  093a4	e58d3094	 str         r3, [sp, #0x94]
  093a8		 |$LN198@ThreadRun@3|

; 3023 :     DEBUGMSG(ZONE_OTG_INFO, (TEXT("DevCtl = 0x%x\r\n"), INREG8(&pGen->DevCtl)));

  093a8	e59f39c4	 ldr         r3, [pc, #0x9C4]
  093ac	e5933440	 ldr         r3, [r3, #0x440]
  093b0	e3130a01	 tst         r3, #1, 20
  093b4	0a000008	 beq         |$LN199@ThreadRun@3|
  093b8	e59d301c	 ldr         r3, [sp, #0x1C]
  093bc	e2833060	 add         r3, r3, #0x60
  093c0	e5d33000	 ldrb        r3, [r3]
  093c4	e1a01003	 mov         r1, r3
  093c8	e59f09c4	 ldr         r0, [pc, #0x9C4]
  093cc	eb000000	 bl          NKDbgPrintfW
  093d0	e3a03001	 mov         r3, #1
  093d4	e58d3098	 str         r3, [sp, #0x98]
  093d8	ea000001	 b           |$LN200@ThreadRun@3|
  093dc		 |$LN199@ThreadRun@3|
  093dc	e3a03000	 mov         r3, #0
  093e0	e58d3098	 str         r3, [sp, #0x98]
  093e4		 |$LN200@ThreadRun@3|

; 3024 :     DEBUGMSG(ZONE_OTG_INFO, (TEXT("IntrTxE = 0x%x\r\n"), INREG16(&pGen->IntrTxE)));

  093e4	e59f3988	 ldr         r3, [pc, #0x988]
  093e8	e5933440	 ldr         r3, [r3, #0x440]
  093ec	e3130a01	 tst         r3, #1, 20
  093f0	0a00000d	 beq         |$LN201@ThreadRun@3|
  093f4	e59d301c	 ldr         r3, [sp, #0x1C]
  093f8	e2831006	 add         r1, r3, #6
  093fc	e5d13001	 ldrb        r3, [r1, #1]
  09400	e1a03403	 mov         r3, r3, lsl #8
  09404	e1a02803	 mov         r2, r3, lsl #16
  09408	e1a02822	 mov         r2, r2, lsr #16
  0940c	e5d13000	 ldrb        r3, [r1]
  09410	e1833002	 orr         r3, r3, r2
  09414	e1a01003	 mov         r1, r3
  09418	e59f0970	 ldr         r0, [pc, #0x970]
  0941c	eb000000	 bl          NKDbgPrintfW
  09420	e3a03001	 mov         r3, #1
  09424	e58d309c	 str         r3, [sp, #0x9C]
  09428	ea000001	 b           |$LN202@ThreadRun@3|
  0942c		 |$LN201@ThreadRun@3|
  0942c	e3a03000	 mov         r3, #0
  09430	e58d309c	 str         r3, [sp, #0x9C]
  09434		 |$LN202@ThreadRun@3|

; 3025 :     DEBUGMSG(ZONE_OTG_INFO, (TEXT("IntrRxE = 0x%x\r\n"), INREG16(&pGen->IntrRxE)));

  09434	e59f3938	 ldr         r3, [pc, #0x938]
  09438	e5933440	 ldr         r3, [r3, #0x440]
  0943c	e3130a01	 tst         r3, #1, 20
  09440	0a00000d	 beq         |$LN203@ThreadRun@3|
  09444	e59d301c	 ldr         r3, [sp, #0x1C]
  09448	e2831008	 add         r1, r3, #8
  0944c	e5d13001	 ldrb        r3, [r1, #1]
  09450	e1a03403	 mov         r3, r3, lsl #8
  09454	e1a02803	 mov         r2, r3, lsl #16
  09458	e1a02822	 mov         r2, r2, lsr #16
  0945c	e5d13000	 ldrb        r3, [r1]
  09460	e1833002	 orr         r3, r3, r2
  09464	e1a01003	 mov         r1, r3
  09468	e59f091c	 ldr         r0, [pc, #0x91C]
  0946c	eb000000	 bl          NKDbgPrintfW
  09470	e3a03001	 mov         r3, #1
  09474	e58d30a0	 str         r3, [sp, #0xA0]
  09478	ea000001	 b           |$LN204@ThreadRun@3|
  0947c		 |$LN203@ThreadRun@3|
  0947c	e3a03000	 mov         r3, #0
  09480	e58d30a0	 str         r3, [sp, #0xA0]
  09484		 |$LN204@ThreadRun@3|

; 3026 :     DEBUGMSG(ZONE_OTG_INFO, (TEXT("IntrUSBE = 0x%x\r\n"), INREG8(&pGen->IntrUSBE)));

  09484	e59f38e8	 ldr         r3, [pc, #0x8E8]
  09488	e5933440	 ldr         r3, [r3, #0x440]
  0948c	e3130a01	 tst         r3, #1, 20
  09490	0a000008	 beq         |$LN205@ThreadRun@3|
  09494	e59d301c	 ldr         r3, [sp, #0x1C]
  09498	e283300b	 add         r3, r3, #0xB
  0949c	e5d33000	 ldrb        r3, [r3]
  094a0	e1a01003	 mov         r1, r3
  094a4	e59f08dc	 ldr         r0, [pc, #0x8DC]
  094a8	eb000000	 bl          NKDbgPrintfW
  094ac	e3a03001	 mov         r3, #1
  094b0	e58d30a4	 str         r3, [sp, #0xA4]
  094b4	ea000001	 b           |$LN206@ThreadRun@3|
  094b8		 |$LN205@ThreadRun@3|
  094b8	e3a03000	 mov         r3, #0
  094bc	e58d30a4	 str         r3, [sp, #0xA4]
  094c0		 |$LN206@ThreadRun@3|

; 3027 :     DEBUGMSG(ZONE_OTG_INFO, (TEXT("Power = 0x%x\r\n"), INREG8(&pGen->Power)));    

  094c0	e59f38ac	 ldr         r3, [pc, #0x8AC]
  094c4	e5933440	 ldr         r3, [r3, #0x440]
  094c8	e3130a01	 tst         r3, #1, 20
  094cc	0a000008	 beq         |$LN207@ThreadRun@3|
  094d0	e59d301c	 ldr         r3, [sp, #0x1C]
  094d4	e2833001	 add         r3, r3, #1
  094d8	e5d33000	 ldrb        r3, [r3]
  094dc	e1a01003	 mov         r1, r3
  094e0	e59f089c	 ldr         r0, [pc, #0x89C]
  094e4	eb000000	 bl          NKDbgPrintfW
  094e8	e3a03001	 mov         r3, #1
  094ec	e58d30a8	 str         r3, [sp, #0xA8]
  094f0	ea000001	 b           |$LN208@ThreadRun@3|
  094f4		 |$LN207@ThreadRun@3|
  094f4	e3a03000	 mov         r3, #0
  094f8	e58d30a8	 str         r3, [sp, #0xA8]
  094fc		 |$LN208@ThreadRun@3|

; 3028 : 
; 3029 :     ResetEndPoints();

  094fc	e59d316c	 ldr         r3, [sp, #0x16C]
  09500	e24320dc	 sub         r2, r3, #0xDC
  09504	e59d316c	 ldr         r3, [sp, #0x16C]
  09508	e24300dc	 sub         r0, r3, #0xDC
  0950c	e5923000	 ldr         r3, [r2]
  09510	e28330ec	 add         r3, r3, #0xEC
  09514	e5933000	 ldr         r3, [r3]
  09518	e1a0e00f	 mov         lr, pc
  0951c	e12fff13	 bx          r3

; 3030 : 
; 3031 :     m_timeout = m_OTGRegCfg.startupTimeout;

  09520	e59d316c	 ldr         r3, [sp, #0x16C]
  09524	e24330dc	 sub         r3, r3, #0xDC
  09528	e2831f41	 add         r1, r3, #0x41, 30
  0952c	e59d316c	 ldr         r3, [sp, #0x16C]
  09530	e24330dc	 sub         r3, r3, #0xDC
  09534	e2832e17	 add         r2, r3, #0x17, 28
  09538	e5913000	 ldr         r3, [r1]
  0953c	e5823000	 str         r3, [r2]

; 3032 : 
; 3033 :     if (m_OTGRegCfg.DisableHighSpeed)

  09540	e59d316c	 ldr         r3, [sp, #0x16C]
  09544	e24330dc	 sub         r3, r3, #0xDC
  09548	e2833c01	 add         r3, r3, #1, 24
  0954c	e5933000	 ldr         r3, [r3]
  09550	e3530000	 cmp         r3, #0
  09554	0a000012	 beq         |$LN165@ThreadRun@3|

; 3034 :     {
; 3035 :         CLRREG8(&pGen->Power, POWER_HSENABLE);

  09558	e59d301c	 ldr         r3, [sp, #0x1C]
  0955c	e2833001	 add         r3, r3, #1
  09560	e5d33000	 ldrb        r3, [r3]
  09564	e1a02003	 mov         r2, r3
  09568	e3e03020	 mvn         r3, #0x20
  0956c	e0023003	 and         r3, r2, r3
  09570	e20320ff	 and         r2, r3, #0xFF
  09574	e59d301c	 ldr         r3, [sp, #0x1C]
  09578	e2833001	 add         r3, r3, #1
  0957c	e5c32000	 strb        r2, [r3]

; 3036 :         SETREG8(&pGen->Power, POWER_SOFTCONN);

  09580	e59d301c	 ldr         r3, [sp, #0x1C]
  09584	e2833001	 add         r3, r3, #1
  09588	e5d33000	 ldrb        r3, [r3]
  0958c	e3833040	 orr         r3, r3, #0x40
  09590	e20320ff	 and         r2, r3, #0xFF
  09594	e59d301c	 ldr         r3, [sp, #0x1C]
  09598	e2833001	 add         r3, r3, #1
  0959c	e5c32000	 strb        r2, [r3]

; 3037 :     }
; 3038 :     else

  095a0	ea000007	 b           |$LN164@ThreadRun@3|
  095a4		 |$LN165@ThreadRun@3|

; 3039 :     {
; 3040 :         SETREG8(&pGen->Power, POWER_SOFTCONN|POWER_HSENABLE);

  095a4	e59d301c	 ldr         r3, [sp, #0x1C]
  095a8	e2833001	 add         r3, r3, #1
  095ac	e5d33000	 ldrb        r3, [r3]
  095b0	e3833060	 orr         r3, r3, #0x60
  095b4	e20320ff	 and         r2, r3, #0xFF
  095b8	e59d301c	 ldr         r3, [sp, #0x1C]
  095bc	e2833001	 add         r3, r3, #1
  095c0	e5c32000	 strb        r2, [r3]
  095c4		 |$LN164@ThreadRun@3|

; 3041 :     }
; 3042 :         
; 3043 :     CLRREG8(&pGen->Power, POWER_EN_SUSPENDM);    

  095c4	e59d301c	 ldr         r3, [sp, #0x1C]
  095c8	e2833001	 add         r3, r3, #1
  095cc	e5d33000	 ldrb        r3, [r3]
  095d0	e1a02003	 mov         r2, r3
  095d4	e3e03001	 mvn         r3, #1
  095d8	e0023003	 and         r3, r2, r3
  095dc	e20320ff	 and         r2, r3, #0xFF
  095e0	e59d301c	 ldr         r3, [sp, #0x1C]
  095e4	e2833001	 add         r3, r3, #1
  095e8	e5c32000	 strb        r2, [r3]

; 3044 :     
; 3045 :     m_pTransceiver->SetVBusSource(TRUE);

  095ec	e3a01001	 mov         r1, #1
  095f0	e59d316c	 ldr         r3, [sp, #0x16C]
  095f4	e24330dc	 sub         r3, r3, #0xDC
  095f8	e28330fc	 add         r3, r3, #0xFC
  095fc	e5932000	 ldr         r2, [r3]
  09600	e59d316c	 ldr         r3, [sp, #0x16C]
  09604	e24330dc	 sub         r3, r3, #0xDC
  09608	e28330fc	 add         r3, r3, #0xFC
  0960c	e5930000	 ldr         r0, [r3]
  09610	e5923000	 ldr         r3, [r2]
  09614	e2833004	 add         r3, r3, #4
  09618	e5933000	 ldr         r3, [r3]
  0961c	e1a0e00f	 mov         lr, pc
  09620	e12fff13	 bx          r3

; 3046 : 
; 3047 :     m_bOTGReady = TRUE;

  09624	e59d316c	 ldr         r3, [sp, #0x16C]
  09628	e24330dc	 sub         r3, r3, #0xDC
  0962c	e2832f62	 add         r2, r3, #0x62, 30
  09630	e3a03001	 mov         r3, #1
  09634	e5823000	 str         r3, [r2]
  09638		 |$LN286@ThreadRun@3|
  09638		 |$LN285@ThreadRun@3|
  09638		 |$LN284@ThreadRun@3|
  09638		 |$LN283@ThreadRun@3|
  09638		 |$LN282@ThreadRun@3|
  09638		 |$LN281@ThreadRun@3|
  09638		 |$LN280@ThreadRun@3|
  09638		 |$LN279@ThreadRun@3|
  09638		 |$LN278@ThreadRun@3|
  09638		 |$LN277@ThreadRun@3|
  09638		 |$LN276@ThreadRun@3|
  09638		 |$LN275@ThreadRun@3|
  09638		 |$LN163@ThreadRun@3|

; 3048 : 
; 3049 :     while (!fTerminated)

  09638	e59d3008	 ldr         r3, [sp, #8]
  0963c	e3530000	 cmp         r3, #0
  09640	1a000e23	 bne         |$LN162@ThreadRun@3|

; 3050 :     {                        
; 3051 :         DWORD rc;
; 3052 : 
; 3053 :         if (m_pTransceiver->SupportsTransceiverWakeWithoutClock())

  09644	e59d316c	 ldr         r3, [sp, #0x16C]
  09648	e24330dc	 sub         r3, r3, #0xDC
  0964c	e28330fc	 add         r3, r3, #0xFC
  09650	e5932000	 ldr         r2, [r3]
  09654	e59d316c	 ldr         r3, [sp, #0x16C]
  09658	e24330dc	 sub         r3, r3, #0xDC
  0965c	e28330fc	 add         r3, r3, #0xFC
  09660	e5930000	 ldr         r0, [r3]
  09664	e5923000	 ldr         r3, [r2]
  09668	e2833014	 add         r3, r3, #0x14
  0966c	e5933000	 ldr         r3, [r3]
  09670	e1a0e00f	 mov         lr, pc
  09674	e12fff13	 bx          r3
  09678	e58d00ac	 str         r0, [sp, #0xAC]
  0967c	e59d30ac	 ldr         r3, [sp, #0xAC]
  09680	e3530000	 cmp         r3, #0
  09684	0a00080f	 beq         |$LN161@ThreadRun@3|

; 3054 : 		{
; 3055 : 		    DWORD delta;
; 3056 : 
; 3057 :             // *** Using transceiver in TWL4030/TPS65xxx ***
; 3058 :             rc = WaitForSingleObject(m_hIntrEvent, m_timeout);

  09688	e59d316c	 ldr         r3, [sp, #0x16C]
  0968c	e24330dc	 sub         r3, r3, #0xDC
  09690	e2833e17	 add         r3, r3, #0x17, 28
  09694	e5931000	 ldr         r1, [r3]
  09698	e59d316c	 ldr         r3, [sp, #0x16C]
  0969c	e24330dc	 sub         r3, r3, #0xDC
  096a0	e2833f53	 add         r3, r3, #0x53, 30
  096a4	e5930000	 ldr         r0, [r3]
  096a8	eb000000	 bl          WaitForSingleObject
  096ac	e58d00b0	 str         r0, [sp, #0xB0]
  096b0	e59d30b0	 ldr         r3, [sp, #0xB0]
  096b4	e58d302c	 str         r3, [sp, #0x2C]

; 3059 : 
; 3060 :             if (m_fPowerRequest)

  096b8	e59d316c	 ldr         r3, [sp, #0x16C]
  096bc	e24330dc	 sub         r3, r3, #0xDC
  096c0	e2833e1a	 add         r3, r3, #0x1A, 28
  096c4	e5933000	 ldr         r3, [r3]
  096c8	e3530000	 cmp         r3, #0
  096cc	0a000030	 beq         |$LN160@ThreadRun@3|

; 3061 :             {
; 3062 :                 m_fPowerRequest = FALSE;

  096d0	e59d316c	 ldr         r3, [sp, #0x16C]
  096d4	e24330dc	 sub         r3, r3, #0xDC
  096d8	e2832e1a	 add         r2, r3, #0x1A, 28
  096dc	e3a03000	 mov         r3, #0
  096e0	e5823000	 str         r3, [r2]

; 3063 :                 SetPowerState(m_Dx);

  096e4	e59d316c	 ldr         r3, [sp, #0x16C]
  096e8	e24330dc	 sub         r3, r3, #0xDC
  096ec	e28330f4	 add         r3, r3, #0xF4
  096f0	e5931000	 ldr         r1, [r3]
  096f4	e59d316c	 ldr         r3, [sp, #0x16C]
  096f8	e24320dc	 sub         r2, r3, #0xDC
  096fc	e59d316c	 ldr         r3, [sp, #0x16C]
  09700	e24300dc	 sub         r0, r3, #0xDC
  09704	e5923000	 ldr         r3, [r2]
  09708	e2833f41	 add         r3, r3, #0x41, 30
  0970c	e5933000	 ldr         r3, [r3]
  09710	e1a0e00f	 mov         lr, pc
  09714	e12fff13	 bx          r3

; 3064 :                 if (m_Dx == D4)

  09718	e59d316c	 ldr         r3, [sp, #0x16C]
  0971c	e24330dc	 sub         r3, r3, #0xDC
  09720	e28330f4	 add         r3, r3, #0xF4
  09724	e5933000	 ldr         r3, [r3]
  09728	e3530004	 cmp         r3, #4
  0972c	1a000011	 bne         |$LN159@ThreadRun@3|

; 3065 :                 {
; 3066 :                     ResetEvent(m_hIntrEvent);

  09730	e59d316c	 ldr         r3, [sp, #0x16C]
  09734	e24330dc	 sub         r3, r3, #0xDC
  09738	e2833f53	 add         r3, r3, #0x53, 30
  0973c	e5930000	 ldr         r0, [r3]
  09740	eb000000	 bl          ResetEvent

; 3067 :                     m_timeout = INFINITE;

  09744	e59d316c	 ldr         r3, [sp, #0x16C]
  09748	e24330dc	 sub         r3, r3, #0xDC
  0974c	e2832e17	 add         r2, r3, #0x17, 28
  09750	e3e03000	 mvn         r3, #0
  09754	e5823000	 str         r3, [r2]

; 3068 :                     SetEvent(m_pOTG->hPowerEvent);

  09758	e59d316c	 ldr         r3, [sp, #0x16C]
  0975c	e24330dc	 sub         r3, r3, #0xDC
  09760	e2833e15	 add         r3, r3, #0x15, 28
  09764	e5933000	 ldr         r3, [r3]
  09768	e2833058	 add         r3, r3, #0x58
  0976c	e5930000	 ldr         r0, [r3]
  09770	eb000000	 bl          SetEvent

; 3069 :                     continue;

  09774	eaffffaf	 b           |$LN163@ThreadRun@3|
  09778		 |$LN159@ThreadRun@3|

; 3070 :                 }
; 3071 :                 SetEvent(m_pOTG->hPowerEvent);

  09778	e59d316c	 ldr         r3, [sp, #0x16C]
  0977c	e24330dc	 sub         r3, r3, #0xDC
  09780	e2833e15	 add         r3, r3, #0x15, 28
  09784	e5933000	 ldr         r3, [r3]
  09788	e2833058	 add         r3, r3, #0x58
  0978c	e5930000	 ldr         r0, [r3]
  09790	eb000000	 bl          SetEvent
  09794		 |$LN160@ThreadRun@3|

; 3072 :             }
; 3073 : 
; 3074 :             if (rc == WAIT_TIMEOUT)

  09794	e59d202c	 ldr         r2, [sp, #0x2C]
  09798	e3a03c01	 mov         r3, #1, 24
  0979c	e3833002	 orr         r3, r3, #2
  097a0	e1520003	 cmp         r2, r3
  097a4	1a00021b	 bne         |$LN158@ThreadRun@3|

; 3075 :             {
; 3076 :                 m_pTransceiver->EnableWakeupInterrupt(TRUE);

  097a8	e3a01001	 mov         r1, #1
  097ac	e59d316c	 ldr         r3, [sp, #0x16C]
  097b0	e24330dc	 sub         r3, r3, #0xDC
  097b4	e28330fc	 add         r3, r3, #0xFC
  097b8	e5932000	 ldr         r2, [r3]
  097bc	e59d316c	 ldr         r3, [sp, #0x16C]
  097c0	e24330dc	 sub         r3, r3, #0xDC
  097c4	e28330fc	 add         r3, r3, #0xFC
  097c8	e5930000	 ldr         r0, [r3]
  097cc	e5923000	 ldr         r3, [r2]
  097d0	e2833008	 add         r3, r3, #8
  097d4	e5933000	 ldr         r3, [r3]
  097d8	e1a0e00f	 mov         lr, pc
  097dc	e12fff13	 bx          r3

; 3077 :                 if(m_timeout == DO_INACTIVITY_TIMEOUT || m_timeout == DO_DISCONNECT_TIMEOUT)

  097e0	e59d316c	 ldr         r3, [sp, #0x16C]
  097e4	e24330dc	 sub         r3, r3, #0xDC
  097e8	e2833e17	 add         r3, r3, #0x17, 28
  097ec	e5932000	 ldr         r2, [r3]
  097f0	e3a03c27	 mov         r3, #0x27, 24
  097f4	e3833010	 orr         r3, r3, #0x10
  097f8	e1520003	 cmp         r2, r3
  097fc	0a000005	 beq         |$LN156@ThreadRun@3|
  09800	e59d316c	 ldr         r3, [sp, #0x16C]
  09804	e24330dc	 sub         r3, r3, #0xDC
  09808	e2833e17	 add         r3, r3, #0x17, 28
  0980c	e5933000	 ldr         r3, [r3]
  09810	e3530ffa	 cmp         r3, #0xFA, 30
  09814	1a000014	 bne         |$LN157@ThreadRun@3|
  09818		 |$LN156@ThreadRun@3|

; 3078 :                 {
; 3079 :                     if(!(ReadULPIReg( m_pOTG, ULPI_VENDORID_LOW_R)))

  09818	e3a02000	 mov         r2, #0
  0981c	e59d316c	 ldr         r3, [sp, #0x16C]
  09820	e24330dc	 sub         r3, r3, #0xDC
  09824	e2833e15	 add         r3, r3, #0x15, 28
  09828	e5931000	 ldr         r1, [r3]
  0982c	e59d316c	 ldr         r3, [sp, #0x16C]
  09830	e24300dc	 sub         r0, r3, #0xDC
  09834	eb000000	 bl          |?ReadULPIReg@OMAPMHSUSBOTG@@QAAEPAUHSMUSB_T@@E@Z|
  09838	e5cd00b4	 strb        r0, [sp, #0xB4]
  0983c	e5dd30b4	 ldrb        r3, [sp, #0xB4]
  09840	e3530000	 cmp         r3, #0
  09844	1a000008	 bne         |$LN155@ThreadRun@3|

; 3080 :                     {
; 3081 :                         SoftResetULPILink();

  09848	e59d316c	 ldr         r3, [sp, #0x16C]
  0984c	e24320dc	 sub         r2, r3, #0xDC
  09850	e59d316c	 ldr         r3, [sp, #0x16C]
  09854	e24300dc	 sub         r0, r3, #0xDC
  09858	e5923000	 ldr         r3, [r2]
  0985c	e28330fc	 add         r3, r3, #0xFC
  09860	e5933000	 ldr         r3, [r3]
  09864	e1a0e00f	 mov         lr, pc
  09868	e12fff13	 bx          r3
  0986c		 |$LN155@ThreadRun@3|
  0986c		 |$LN157@ThreadRun@3|

; 3082 :                     }
; 3083 :                 }
; 3084 :                 if(m_bSuspendTransceiver)

  0986c	e59d316c	 ldr         r3, [sp, #0x16C]
  09870	e24330dc	 sub         r3, r3, #0xDC
  09874	e2833e19	 add         r3, r3, #0x19, 28
  09878	e5933000	 ldr         r3, [r3]
  0987c	e3530000	 cmp         r3, #0
  09880	0a0000ea	 beq         |$LN154@ThreadRun@3|

; 3085 :                 {
; 3086 :                     if (m_pTransceiver->IsADeviceConnected())

  09884	e59d316c	 ldr         r3, [sp, #0x16C]
  09888	e24330dc	 sub         r3, r3, #0xDC
  0988c	e28330fc	 add         r3, r3, #0xFC
  09890	e5932000	 ldr         r2, [r3]
  09894	e59d316c	 ldr         r3, [sp, #0x16C]
  09898	e24330dc	 sub         r3, r3, #0xDC
  0989c	e28330fc	 add         r3, r3, #0xFC
  098a0	e5930000	 ldr         r0, [r3]
  098a4	e5923000	 ldr         r3, [r2]
  098a8	e2833030	 add         r3, r3, #0x30
  098ac	e5933000	 ldr         r3, [r3]
  098b0	e1a0e00f	 mov         lr, pc
  098b4	e12fff13	 bx          r3
  098b8	e58d00b8	 str         r0, [sp, #0xB8]
  098bc	e59d30b8	 ldr         r3, [sp, #0xB8]
  098c0	e3530000	 cmp         r3, #0
  098c4	0a00005b	 beq         |$LN153@ThreadRun@3|

; 3087 :                     {
; 3088 :                         // Enable to SOFTCONN bit for PC to see the connection
; 3089 :                         CLRREG8(&pGen->Power, POWER_SOFTCONN);

  098c8	e59d301c	 ldr         r3, [sp, #0x1C]
  098cc	e2833001	 add         r3, r3, #1
  098d0	e5d33000	 ldrb        r3, [r3]
  098d4	e1a02003	 mov         r2, r3
  098d8	e3e03040	 mvn         r3, #0x40
  098dc	e0023003	 and         r3, r2, r3
  098e0	e20320ff	 and         r2, r3, #0xFF
  098e4	e59d301c	 ldr         r3, [sp, #0x1C]
  098e8	e2833001	 add         r3, r3, #1
  098ec	e5c32000	 strb        r2, [r3]
  098f0		 |$LN152@ThreadRun@3|

; 3090 : 
; 3091 :                         // Wait for 45 sec or until shell is ready which ever happens first
; 3092 :                         do{
; 3093 :                         delta = GetTickCount() - dwStartTime;

  098f0	eb000000	 bl          GetTickCount
  098f4	e58d00bc	 str         r0, [sp, #0xBC]
  098f8	e59d20bc	 ldr         r2, [sp, #0xBC]
  098fc	e59d3024	 ldr         r3, [sp, #0x24]
  09900	e0423003	 sub         r3, r2, r3
  09904	e58d3030	 str         r3, [sp, #0x30]

; 3094 :                         // Check wheather
; 3095 :                         if(bStratupWaitDone || delta >= m_OTGRegCfg.dwActiveSyncDelay )

  09908	e59d3014	 ldr         r3, [sp, #0x14]
  0990c	e3530000	 cmp         r3, #0
  09910	1a000006	 bne         |$LN148@ThreadRun@3|
  09914	e59d316c	 ldr         r3, [sp, #0x16C]
  09918	e24330dc	 sub         r3, r3, #0xDC
  0991c	e2833e11	 add         r3, r3, #0x11, 28
  09920	e59d2030	 ldr         r2, [sp, #0x30]
  09924	e5933000	 ldr         r3, [r3]
  09928	e1520003	 cmp         r2, r3
  0992c	3a000000	 bcc         |$LN149@ThreadRun@3|
  09930		 |$LN148@ThreadRun@3|

; 3096 :                         break;

  09930	ea000007	 b           |$LN150@ThreadRun@3|
  09934		 |$LN149@ThreadRun@3|

; 3097 :                         Sleep(1000);

  09934	e3a00ffa	 mov         r0, #0xFA, 30
  09938	eb000000	 bl          Sleep

; 3098 :                         }while (IsAPIReady(SH_SHELL) == FALSE);

  0993c	e3a00055	 mov         r0, #0x55
  09940	eb000000	 bl          IsAPIReady
  09944	e58d00c0	 str         r0, [sp, #0xC0]
  09948	e59d30c0	 ldr         r3, [sp, #0xC0]
  0994c	e3530000	 cmp         r3, #0
  09950	0affffe6	 beq         |$LN152@ThreadRun@3|
  09954		 |$LN150@ThreadRun@3|

; 3099 : 
; 3100 :                         bStratupWaitDone = TRUE;

  09954	e3a03001	 mov         r3, #1
  09958	e58d3014	 str         r3, [sp, #0x14]

; 3101 : 
; 3102 :                         // Enable to SOFTCONN bit for PC to see the connection
; 3103 :                         if (m_OTGRegCfg.DisableHighSpeed)

  0995c	e59d316c	 ldr         r3, [sp, #0x16C]
  09960	e24330dc	 sub         r3, r3, #0xDC
  09964	e2833c01	 add         r3, r3, #1, 24
  09968	e5933000	 ldr         r3, [r3]
  0996c	e3530000	 cmp         r3, #0
  09970	0a000012	 beq         |$LN147@ThreadRun@3|

; 3104 : 						{
; 3105 :                             CLRREG8(&pGen->Power, POWER_HSENABLE);

  09974	e59d301c	 ldr         r3, [sp, #0x1C]
  09978	e2833001	 add         r3, r3, #1
  0997c	e5d33000	 ldrb        r3, [r3]
  09980	e1a02003	 mov         r2, r3
  09984	e3e03020	 mvn         r3, #0x20
  09988	e0023003	 and         r3, r2, r3
  0998c	e20320ff	 and         r2, r3, #0xFF
  09990	e59d301c	 ldr         r3, [sp, #0x1C]
  09994	e2833001	 add         r3, r3, #1
  09998	e5c32000	 strb        r2, [r3]

; 3106 :                             SETREG8(&pGen->Power, POWER_SOFTCONN);

  0999c	e59d301c	 ldr         r3, [sp, #0x1C]
  099a0	e2833001	 add         r3, r3, #1
  099a4	e5d33000	 ldrb        r3, [r3]
  099a8	e3833040	 orr         r3, r3, #0x40
  099ac	e20320ff	 and         r2, r3, #0xFF
  099b0	e59d301c	 ldr         r3, [sp, #0x1C]
  099b4	e2833001	 add         r3, r3, #1
  099b8	e5c32000	 strb        r2, [r3]

; 3107 : 						}
; 3108 :                         else

  099bc	ea000007	 b           |$LN146@ThreadRun@3|
  099c0		 |$LN147@ThreadRun@3|

; 3109 :                             SETREG8(&pGen->Power, POWER_SOFTCONN|POWER_HSENABLE);

  099c0	e59d301c	 ldr         r3, [sp, #0x1C]
  099c4	e2833001	 add         r3, r3, #1
  099c8	e5d33000	 ldrb        r3, [r3]
  099cc	e3833060	 orr         r3, r3, #0x60
  099d0	e20320ff	 and         r2, r3, #0xFF
  099d4	e59d301c	 ldr         r3, [sp, #0x1C]
  099d8	e2833001	 add         r3, r3, #1
  099dc	e5c32000	 strb        r2, [r3]
  099e0		 |$LN146@ThreadRun@3|

; 3110 : 
; 3111 :                         // This is to put MUSB Controller functional if it is in host mode
; 3112 :                         CLRREG8(&pGen->Power, POWER_EN_SUSPENDM);

  099e0	e59d301c	 ldr         r3, [sp, #0x1C]
  099e4	e2833001	 add         r3, r3, #1
  099e8	e5d33000	 ldrb        r3, [r3]
  099ec	e1a02003	 mov         r2, r3
  099f0	e3e03001	 mvn         r3, #1
  099f4	e0023003	 and         r3, r2, r3
  099f8	e20320ff	 and         r2, r3, #0xFF
  099fc	e59d301c	 ldr         r3, [sp, #0x1C]
  09a00	e2833001	 add         r3, r3, #1
  09a04	e5c32000	 strb        r2, [r3]

; 3113 :                         CLRREG8(&pGen->Power, POWER_SUSPENDM);

  09a08	e59d301c	 ldr         r3, [sp, #0x1C]
  09a0c	e2833001	 add         r3, r3, #1
  09a10	e5d33000	 ldrb        r3, [r3]
  09a14	e1a02003	 mov         r2, r3
  09a18	e3e03002	 mvn         r3, #2
  09a1c	e0023003	 and         r3, r2, r3
  09a20	e20320ff	 and         r2, r3, #0xFF
  09a24	e59d301c	 ldr         r3, [sp, #0x1C]
  09a28	e2833001	 add         r3, r3, #1
  09a2c	e5c32000	 strb        r2, [r3]
  09a30	eaffff00	 b           |$LN275@ThreadRun@3|

; 3114 :                         continue;

  09a34	ea000038	 b           |$LN145@ThreadRun@3|
  09a38		 |$LN153@ThreadRun@3|

; 3115 :                     }
; 3116 :                     else if(m_pTransceiver->IsBDeviceConnected())

  09a38	e59d316c	 ldr         r3, [sp, #0x16C]
  09a3c	e24330dc	 sub         r3, r3, #0xDC
  09a40	e28330fc	 add         r3, r3, #0xFC
  09a44	e5932000	 ldr         r2, [r3]
  09a48	e59d316c	 ldr         r3, [sp, #0x16C]
  09a4c	e24330dc	 sub         r3, r3, #0xDC
  09a50	e28330fc	 add         r3, r3, #0xFC
  09a54	e5930000	 ldr         r0, [r3]
  09a58	e5923000	 ldr         r3, [r2]
  09a5c	e2833034	 add         r3, r3, #0x34
  09a60	e5933000	 ldr         r3, [r3]
  09a64	e1a0e00f	 mov         lr, pc
  09a68	e12fff13	 bx          r3
  09a6c	e58d00c4	 str         r0, [sp, #0xC4]
  09a70	e59d30c4	 ldr         r3, [sp, #0xC4]
  09a74	e3530000	 cmp         r3, #0
  09a78	0a000027	 beq         |$LN144@ThreadRun@3|

; 3117 :                     {
; 3118 :                         RETAILMSG(1, (TEXT("Calling Session Request%d\r\n"),__LINE__));

  09a7c	e3a01b03	 mov         r1, #3, 22
  09a80	e381102e	 orr         r1, r1, #0x2E
  09a84	e59f02f4	 ldr         r0, [pc, #0x2F4]
  09a88	eb000000	 bl          NKDbgPrintfW
  09a8c	e3a03001	 mov         r3, #1
  09a90	e58d30c8	 str         r3, [sp, #0xC8]
  09a94	ea000001	 b           |$LN210@ThreadRun@3|
  09a98	e3a03000	 mov         r3, #0
  09a9c	e58d30c8	 str         r3, [sp, #0xC8]
  09aa0		 |$LN210@ThreadRun@3|

; 3119 :                         SessionRequest(FALSE, FALSE);

  09aa0	e3a02000	 mov         r2, #0
  09aa4	e3a01000	 mov         r1, #0
  09aa8	e59d316c	 ldr         r3, [sp, #0x16C]
  09aac	e243e0dc	 sub         lr, r3, #0xDC
  09ab0	e59d316c	 ldr         r3, [sp, #0x16C]
  09ab4	e24300dc	 sub         r0, r3, #0xDC
  09ab8	e59e3000	 ldr         r3, [lr]
  09abc	e2833084	 add         r3, r3, #0x84
  09ac0	e5933000	 ldr         r3, [r3]
  09ac4	e1a0e00f	 mov         lr, pc
  09ac8	e12fff13	 bx          r3

; 3120 :                         CLRREG8(&m_pOTG->pUsbGenRegs->DevCtl, DEVCTL_HOSTREQ);

  09acc	e59d316c	 ldr         r3, [sp, #0x16C]
  09ad0	e24330dc	 sub         r3, r3, #0xDC
  09ad4	e2833e15	 add         r3, r3, #0x15, 28
  09ad8	e5933000	 ldr         r3, [r3]
  09adc	e2833020	 add         r3, r3, #0x20
  09ae0	e5933000	 ldr         r3, [r3]
  09ae4	e2833060	 add         r3, r3, #0x60
  09ae8	e5d33000	 ldrb        r3, [r3]
  09aec	e1a02003	 mov         r2, r3
  09af0	e3e03002	 mvn         r3, #2
  09af4	e0023003	 and         r3, r2, r3
  09af8	e20320ff	 and         r2, r3, #0xFF
  09afc	e59d316c	 ldr         r3, [sp, #0x16C]
  09b00	e24330dc	 sub         r3, r3, #0xDC
  09b04	e2833e15	 add         r3, r3, #0x15, 28
  09b08	e5933000	 ldr         r3, [r3]
  09b0c	e2833020	 add         r3, r3, #0x20
  09b10	e5933000	 ldr         r3, [r3]
  09b14	e2833060	 add         r3, r3, #0x60
  09b18	e5c32000	 strb        r2, [r3]
  09b1c		 |$LN144@ThreadRun@3|
  09b1c		 |$LN145@ThreadRun@3|

; 3121 :                     }
; 3122 : 
; 3123 :                     m_dwUSBUsageCount = 0;

  09b1c	e59d316c	 ldr         r3, [sp, #0x16C]
  09b20	e24330dc	 sub         r3, r3, #0xDC
  09b24	e2832e16	 add         r2, r3, #0x16, 28
  09b28	e3a03000	 mov         r3, #0
  09b2c	e5823000	 str         r3, [r2]

; 3124 : 
; 3125 :                     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("+(m_timeout == DO_TRANSCEIVER_SUSPEND_TIMEOUT)\r\n")));

  09b30	e59f323c	 ldr         r3, [pc, #0x23C]
  09b34	e5933440	 ldr         r3, [r3, #0x440]
  09b38	e3130a02	 tst         r3, #2, 20
  09b3c	0a000004	 beq         |$LN211@ThreadRun@3|
  09b40	e59f0234	 ldr         r0, [pc, #0x234]
  09b44	eb000000	 bl          NKDbgPrintfW
  09b48	e3a03001	 mov         r3, #1
  09b4c	e58d30cc	 str         r3, [sp, #0xCC]
  09b50	ea000001	 b           |$LN212@ThreadRun@3|
  09b54		 |$LN211@ThreadRun@3|
  09b54	e3a03000	 mov         r3, #0
  09b58	e58d30cc	 str         r3, [sp, #0xCC]
  09b5c		 |$LN212@ThreadRun@3|

; 3126 : 
; 3127 :                     StopUSBClock();

  09b5c	e59d316c	 ldr         r3, [sp, #0x16C]
  09b60	e24320dc	 sub         r2, r3, #0xDC
  09b64	e59d316c	 ldr         r3, [sp, #0x16C]
  09b68	e24300dc	 sub         r0, r3, #0xDC
  09b6c	e5923000	 ldr         r3, [r2]
  09b70	e28330e8	 add         r3, r3, #0xE8
  09b74	e5933000	 ldr         r3, [r3]
  09b78	e1a0e00f	 mov         lr, pc
  09b7c	e12fff13	 bx          r3

; 3128 :                     EnterCriticalSection(&m_pOTG->regCS);

  09b80	e59d316c	 ldr         r3, [sp, #0x16C]
  09b84	e24330dc	 sub         r3, r3, #0xDC
  09b88	e2833e15	 add         r3, r3, #0x15, 28
  09b8c	e5933000	 ldr         r3, [r3]
  09b90	e2830038	 add         r0, r3, #0x38
  09b94	eb000000	 bl          EnterCriticalSection

; 3129 :                     m_pOTG->bClockStatus = FALSE;

  09b98	e59d316c	 ldr         r3, [sp, #0x16C]
  09b9c	e24330dc	 sub         r3, r3, #0xDC
  09ba0	e2833e15	 add         r3, r3, #0x15, 28
  09ba4	e5933000	 ldr         r3, [r3]
  09ba8	e2832060	 add         r2, r3, #0x60
  09bac	e3a03000	 mov         r3, #0
  09bb0	e5823000	 str         r3, [r2]

; 3130 :                     UpdateDevicePower(m_hParent, D4, NULL);

  09bb4	e3a02000	 mov         r2, #0
  09bb8	e3a01004	 mov         r1, #4
  09bbc	e59d316c	 ldr         r3, [sp, #0x16C]
  09bc0	e24330dc	 sub         r3, r3, #0xDC
  09bc4	e2833d05	 add         r3, r3, #5, 26
  09bc8	e5930000	 ldr         r0, [r3]
  09bcc	eb000000	 bl          |?UpdateDevicePower@@YAXPAXW4_CEDEVICE_POWER_STATE@@0@Z|

; 3131 :                     LeaveCriticalSection(&m_pOTG->regCS);

  09bd0	e59d316c	 ldr         r3, [sp, #0x16C]
  09bd4	e24330dc	 sub         r3, r3, #0xDC
  09bd8	e2833e15	 add         r3, r3, #0x15, 28
  09bdc	e5933000	 ldr         r3, [r3]
  09be0	e2830038	 add         r0, r3, #0x38
  09be4	eb000000	 bl          LeaveCriticalSection

; 3132 : 
; 3133 :                     m_timeout = INFINITE;

  09be8	e59d316c	 ldr         r3, [sp, #0x16C]
  09bec	e24330dc	 sub         r3, r3, #0xDC
  09bf0	e2832e17	 add         r2, r3, #0x17, 28
  09bf4	e3e03000	 mvn         r3, #0
  09bf8	e5823000	 str         r3, [r2]

; 3134 :                     m_bSuspendTransceiver = FALSE;

  09bfc	e59d316c	 ldr         r3, [sp, #0x16C]
  09c00	e24330dc	 sub         r3, r3, #0xDC
  09c04	e2832e19	 add         r2, r3, #0x19, 28
  09c08	e3a03000	 mov         r3, #0
  09c0c	e5823000	 str         r3, [r2]

; 3135 :                     m_pOTG->dwPwrMgmt = MODE_SYSTEM_SUSPEND;

  09c10	e59d316c	 ldr         r3, [sp, #0x16C]
  09c14	e24330dc	 sub         r3, r3, #0xDC
  09c18	e2833e15	 add         r3, r3, #0x15, 28
  09c1c	e5933000	 ldr         r3, [r3]
  09c20	e2832064	 add         r2, r3, #0x64
  09c24	e3a03001	 mov         r3, #1
  09c28	e5823000	 str         r3, [r2]

; 3136 : 
; 3137 :                     continue;

  09c2c	eafffe81	 b           |$LN276@ThreadRun@3|
  09c30		 |$LN154@ThreadRun@3|

; 3138 :                 }
; 3139 : 
; 3140 :                 m_timeout = INFINITE;

  09c30	e59d316c	 ldr         r3, [sp, #0x16C]
  09c34	e24330dc	 sub         r3, r3, #0xDC
  09c38	e2832e17	 add         r2, r3, #0x17, 28
  09c3c	e3e03000	 mvn         r3, #0
  09c40	e5823000	 str         r3, [r2]

; 3141 : 
; 3142 :                 if (m_pOTG->operateMode == HOST_MODE)

  09c44	e59d316c	 ldr         r3, [sp, #0x16C]
  09c48	e24330dc	 sub         r3, r3, #0xDC
  09c4c	e2833e15	 add         r3, r3, #0x15, 28
  09c50	e5933000	 ldr         r3, [r3]
  09c54	e2833035	 add         r3, r3, #0x35
  09c58	e5d33000	 ldrb        r3, [r3]
  09c5c	e3530002	 cmp         r3, #2
  09c60	1a000000	 bne         |$LN143@ThreadRun@3|
  09c64	ea0000e9	 b           |$LN142@ThreadRun@3|
  09c68		 |$LN143@ThreadRun@3|

; 3143 :                 {
; 3144 :                     //EnableSuspend(TRUE);
; 3145 :                 }
; 3146 :                 else if (m_pOTG->operateMode == DEVICE_MODE)

  09c68	e59d316c	 ldr         r3, [sp, #0x16C]
  09c6c	e24330dc	 sub         r3, r3, #0xDC
  09c70	e2833e15	 add         r3, r3, #0x15, 28
  09c74	e5933000	 ldr         r3, [r3]
  09c78	e2833035	 add         r3, r3, #0x35
  09c7c	e5d33000	 ldrb        r3, [r3]
  09c80	e3530001	 cmp         r3, #1
  09c84	1a000000	 bne         |$LN141@ThreadRun@3|

; 3147 :                 {
; 3148 :                 }
; 3149 :                 else

  09c88	ea0000e0	 b           |$LN140@ThreadRun@3|
  09c8c		 |$LN141@ThreadRun@3|

; 3150 :                 {
; 3151 :                     // If you are here, it can be either IDLE_MODE or SUSPEND_MODE
; 3152 :                     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("StopUSBClock with operateMode=%d, m_dwStatus=0x%x\r\n"),
; 3153 :                         m_pOTG->operateMode, m_dwStatus));

  09c8c	e59f30e0	 ldr         r3, [pc, #0xE0]
  09c90	e5933440	 ldr         r3, [r3, #0x440]
  09c94	e3130a02	 tst         r3, #2, 20
  09c98	0a00000f	 beq         |$LN213@ThreadRun@3|
  09c9c	e59d316c	 ldr         r3, [sp, #0x16C]
  09ca0	e24330dc	 sub         r3, r3, #0xDC
  09ca4	e28330f8	 add         r3, r3, #0xF8
  09ca8	e5932000	 ldr         r2, [r3]
  09cac	e59d316c	 ldr         r3, [sp, #0x16C]
  09cb0	e24330dc	 sub         r3, r3, #0xDC
  09cb4	e2833e15	 add         r3, r3, #0x15, 28
  09cb8	e5933000	 ldr         r3, [r3]
  09cbc	e2833035	 add         r3, r3, #0x35
  09cc0	e5d33000	 ldrb        r3, [r3]
  09cc4	e1a01003	 mov         r1, r3
  09cc8	e59f00a8	 ldr         r0, [pc, #0xA8]
  09ccc	eb000000	 bl          NKDbgPrintfW
  09cd0	e3a03001	 mov         r3, #1
  09cd4	e58d30d0	 str         r3, [sp, #0xD0]
  09cd8	ea000001	 b           |$LN214@ThreadRun@3|
  09cdc		 |$LN213@ThreadRun@3|
  09cdc	e3a03000	 mov         r3, #0
  09ce0	e58d30d0	 str         r3, [sp, #0xD0]
  09ce4		 |$LN214@ThreadRun@3|

; 3154 : 
; 3155 :                     if ((m_dwStatus & STATUS_HNP_SESSION_MASK) == 0)

  09ce4	e59d316c	 ldr         r3, [sp, #0x16C]
  09ce8	e24330dc	 sub         r3, r3, #0xDC
  09cec	e28330f8	 add         r3, r3, #0xF8
  09cf0	e5933000	 ldr         r3, [r3]
  09cf4	e3130030	 tst         r3, #0x30
  09cf8	1a0000c4	 bne         |$LN139@ThreadRun@3|

; 3156 :                     {
; 3157 : 
; 3158 :                         if ((m_dwStatus & STATUS_SESSION_RESTART)
; 3159 :                             && ((m_dwStatus & STATUS_WAIT_HOST_DISCONN_COMPLETE) == 0x00)
; 3160 :                             && (m_pOTG->operateMode == IDLE_MODE))

  09cfc	e59d316c	 ldr         r3, [sp, #0x16C]
  09d00	e24330dc	 sub         r3, r3, #0xDC
  09d04	e28330f8	 add         r3, r3, #0xF8
  09d08	e5933000	 ldr         r3, [r3]
  09d0c	e3130080	 tst         r3, #0x80
  09d10	0a00007b	 beq         |$LN138@ThreadRun@3|
  09d14	e59d316c	 ldr         r3, [sp, #0x16C]
  09d18	e24330dc	 sub         r3, r3, #0xDC
  09d1c	e28330f8	 add         r3, r3, #0xF8
  09d20	e5933000	 ldr         r3, [r3]
  09d24	e3130040	 tst         r3, #0x40
  09d28	1a000075	 bne         |$LN138@ThreadRun@3|
  09d2c	e59d316c	 ldr         r3, [sp, #0x16C]
  09d30	e24330dc	 sub         r3, r3, #0xDC
  09d34	e2833e15	 add         r3, r3, #0x15, 28
  09d38	e5933000	 ldr         r3, [r3]
  09d3c	e2833035	 add         r3, r3, #0x35
  09d40	e5d33000	 ldrb        r3, [r3]
  09d44	e3530000	 cmp         r3, #0
  09d48	1a00006d	 bne         |$LN138@ThreadRun@3|

; 3161 :                         {
; 3162 : 
; 3163 :                             DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Try session restart\r\n")));

  09d4c	e59f3020	 ldr         r3, [pc, #0x20]
  09d50	e5933440	 ldr         r3, [r3, #0x440]
  09d54	e3130a02	 tst         r3, #2, 20
  09d58	0a000016	 beq         |$LN215@ThreadRun@3|
  09d5c	e59f000c	 ldr         r0, [pc, #0xC]
  09d60	eb000000	 bl          NKDbgPrintfW
  09d64	e3a03001	 mov         r3, #1
  09d68	e58d30d4	 str         r3, [sp, #0xD4]
  09d6c	ea000013	 b           |$LN216@ThreadRun@3|
  09d70		 |$LN325@ThreadRun@3|
  09d70		 |$LN326@ThreadRun@3|
  09d70	00000000	 DCD         |??_C@_1CM@DPLIIPKK@?$AAT?$AAr?$AAy?$AA?5?$AAs?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAr?$AAe?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  09d74		 |$LN327@ThreadRun@3|
  09d74	00000000	 DCD         |dpCurSettings|
  09d78		 |$LN328@ThreadRun@3|
  09d78	00000000	 DCD         |??_C@_1GI@CPNPIDG@?$AAS?$AAt?$AAo?$AAp?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$DN?$AA?$CF?$AAd@|
  09d7c		 |$LN329@ThreadRun@3|
  09d7c	00000000	 DCD         |??_C@_1GC@GOCKJHDI@?$AA?$CL?$AA?$CI?$AAm?$AA_?$AAt?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAD?$AAO?$AA_?$AAT?$AAR?$AAA?$AAN?$AAS?$AAC?$AAE?$AAI?$AAV?$AAE?$AAR?$AA_?$AAS?$AAU@|
  09d80		 |$LN330@ThreadRun@3|
  09d80	00000000	 DCD         |??_C@_1DI@POPBHNLK@?$AAC?$AAa?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  09d84		 |$LN331@ThreadRun@3|
  09d84	00000000	 DCD         |??_C@_1BO@IIOMMOE@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  09d88		 |$LN332@ThreadRun@3|
  09d88	00000000	 DCD         |??_C@_1CE@PKNGFJOB@?$AAI?$AAn?$AAt?$AAr?$AAU?$AAS?$AAB?$AAE?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  09d8c		 |$LN333@ThreadRun@3|
  09d8c	00000000	 DCD         |??_C@_1CC@KDCPHJJJ@?$AAI?$AAn?$AAt?$AAr?$AAR?$AAx?$AAE?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  09d90		 |$LN334@ThreadRun@3|
  09d90	00000000	 DCD         |??_C@_1CC@JMPBKECI@?$AAI?$AAn?$AAt?$AAr?$AAT?$AAx?$AAE?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  09d94		 |$LN335@ThreadRun@3|
  09d94	00000000	 DCD         |??_C@_1CA@MNOFLILF@?$AAD?$AAe?$AAv?$AAC?$AAt?$AAl?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  09d98		 |$LN336@ThreadRun@3|
  09d98	00000000	 DCD         |??_C@_1BM@CCNINLIC@?$AAW?$AAa?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  09d9c		 |$LN337@ThreadRun@3|
  09d9c	00000000	 DCD         |??_C@_1DI@MODPKEGP@?$AAO?$AAT?$AAG?$AA?5?$AA?9?$AA?$DO?$AA?5?$AAS?$AAe?$AAt?$AA?5?$AAS?$AAY?$AAS?$AAI?$AAN?$AAT?$AAR?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  09da0		 |$LN338@ThreadRun@3|
  09da0	00000000	 DCD         |??_C@_1FK@LJDGIGFM@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu@|
  09da4		 |$LN339@ThreadRun@3|
  09da4	00000000	 DCD         |??_C@_1GM@GEMPOIGJ@?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5@|
  09da8		 |$LN340@ThreadRun@3|
  09da8	00000000	 DCD         |??_C@_1FE@LIKFMDNI@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt@|
  09dac		 |$LN341@ThreadRun@3|
  09dac	00000000	 DCD         |??_C@_1EO@JHHHCBHN@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAh?$AAa@|
  09db0		 |$LN342@ThreadRun@3|
  09db0	00000000	 DCD         |??_C@_1EM@NBLBKOBI@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAh?$AAa?$AAn@|
  09db4		 |$LN343@ThreadRun@3|
  09db4	00000000	 DCD         |??_C@_1IO@FPNCIHBH@?$AAO?$AAM?$AAA?$AAP?$AAM?$AAH?$AAS?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?3?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe@|
  09db8		 |$LN215@ThreadRun@3|
  09db8	e3a03000	 mov         r3, #0
  09dbc	e58d30d4	 str         r3, [sp, #0xD4]
  09dc0		 |$LN216@ThreadRun@3|

; 3164 :                             if (m_pOTG->pFuncs[DEVICE_MODE-1] != NULL)

  09dc0	e59d316c	 ldr         r3, [sp, #0x16C]
  09dc4	e24330dc	 sub         r3, r3, #0xDC
  09dc8	e2833e15	 add         r3, r3, #0x15, 28
  09dcc	e5933000	 ldr         r3, [r3]
  09dd0	e2833008	 add         r3, r3, #8
  09dd4	e5933000	 ldr         r3, [r3]
  09dd8	e3530000	 cmp         r3, #0
  09ddc	0a00000d	 beq         |$LN137@ThreadRun@3|

; 3165 :                                 m_pOTG->pFuncs[DEVICE_MODE-1]->Disconnect((void *)m_pOTG);

  09de0	e59d316c	 ldr         r3, [sp, #0x16C]
  09de4	e24330dc	 sub         r3, r3, #0xDC
  09de8	e2833e15	 add         r3, r3, #0x15, 28
  09dec	e5930000	 ldr         r0, [r3]
  09df0	e59d316c	 ldr         r3, [sp, #0x16C]
  09df4	e24330dc	 sub         r3, r3, #0xDC
  09df8	e2833e15	 add         r3, r3, #0x15, 28
  09dfc	e5933000	 ldr         r3, [r3]
  09e00	e2833008	 add         r3, r3, #8
  09e04	e5933000	 ldr         r3, [r3]
  09e08	e2833018	 add         r3, r3, #0x18
  09e0c	e5933000	 ldr         r3, [r3]
  09e10	e1a0e00f	 mov         lr, pc
  09e14	e12fff13	 bx          r3
  09e18		 |$LN137@ThreadRun@3|

; 3166 : 
; 3167 :                             SessionRequest(FALSE, FALSE);

  09e18	e3a02000	 mov         r2, #0
  09e1c	e3a01000	 mov         r1, #0
  09e20	e59d316c	 ldr         r3, [sp, #0x16C]
  09e24	e243e0dc	 sub         lr, r3, #0xDC
  09e28	e59d316c	 ldr         r3, [sp, #0x16C]
  09e2c	e24300dc	 sub         r0, r3, #0xDC
  09e30	e59e3000	 ldr         r3, [lr]
  09e34	e2833084	 add         r3, r3, #0x84
  09e38	e5933000	 ldr         r3, [r3]
  09e3c	e1a0e00f	 mov         lr, pc
  09e40	e12fff13	 bx          r3

; 3168 :                             CLRREG8(&m_pOTG->pUsbGenRegs->DevCtl, DEVCTL_HOSTREQ);

  09e44	e59d316c	 ldr         r3, [sp, #0x16C]
  09e48	e24330dc	 sub         r3, r3, #0xDC
  09e4c	e2833e15	 add         r3, r3, #0x15, 28
  09e50	e5933000	 ldr         r3, [r3]
  09e54	e2833020	 add         r3, r3, #0x20
  09e58	e5933000	 ldr         r3, [r3]
  09e5c	e2833060	 add         r3, r3, #0x60
  09e60	e5d33000	 ldrb        r3, [r3]
  09e64	e1a02003	 mov         r2, r3
  09e68	e3e03002	 mvn         r3, #2
  09e6c	e0023003	 and         r3, r2, r3
  09e70	e20320ff	 and         r2, r3, #0xFF
  09e74	e59d316c	 ldr         r3, [sp, #0x16C]
  09e78	e24330dc	 sub         r3, r3, #0xDC
  09e7c	e2833e15	 add         r3, r3, #0x15, 28
  09e80	e5933000	 ldr         r3, [r3]
  09e84	e2833020	 add         r3, r3, #0x20
  09e88	e5933000	 ldr         r3, [r3]
  09e8c	e2833060	 add         r3, r3, #0x60
  09e90	e5c32000	 strb        r2, [r3]

; 3169 :                             SessionRequest(TRUE, TRUE);

  09e94	e3a02001	 mov         r2, #1
  09e98	e3a01001	 mov         r1, #1
  09e9c	e59d316c	 ldr         r3, [sp, #0x16C]
  09ea0	e243e0dc	 sub         lr, r3, #0xDC
  09ea4	e59d316c	 ldr         r3, [sp, #0x16C]
  09ea8	e24300dc	 sub         r0, r3, #0xDC
  09eac	e59e3000	 ldr         r3, [lr]
  09eb0	e2833084	 add         r3, r3, #0x84
  09eb4	e5933000	 ldr         r3, [r3]
  09eb8	e1a0e00f	 mov         lr, pc
  09ebc	e12fff13	 bx          r3

; 3170 :                             m_dwStatus &= ~STATUS_SESSION_RESTART;

  09ec0	e59d316c	 ldr         r3, [sp, #0x16C]
  09ec4	e24330dc	 sub         r3, r3, #0xDC
  09ec8	e28330f8	 add         r3, r3, #0xF8
  09ecc	e5932000	 ldr         r2, [r3]
  09ed0	e3e03080	 mvn         r3, #0x80
  09ed4	e0022003	 and         r2, r2, r3
  09ed8	e59d316c	 ldr         r3, [sp, #0x16C]
  09edc	e24330dc	 sub         r3, r3, #0xDC
  09ee0	e28330f8	 add         r3, r3, #0xF8
  09ee4	e5832000	 str         r2, [r3]

; 3171 :                             m_timeout = DO_SESSCHK_TIMEOUT;

  09ee8	e59d316c	 ldr         r3, [sp, #0x16C]
  09eec	e24330dc	 sub         r3, r3, #0xDC
  09ef0	e2832e17	 add         r2, r3, #0x17, 28
  09ef4	e3a03c13	 mov         r3, #0x13, 24
  09ef8	e3833088	 orr         r3, r3, #0x88
  09efc	e5823000	 str         r3, [r2]
  09f00	ea000042	 b           |$LN136@ThreadRun@3|
  09f04		 |$LN138@ThreadRun@3|

; 3172 :                         }
; 3173 :                         else if ((m_dwStatus & STATUS_WAIT_HOST_DISCONN_COMPLETE) == 0x00)

  09f04	e59d316c	 ldr         r3, [sp, #0x16C]
  09f08	e24330dc	 sub         r3, r3, #0xDC
  09f0c	e28330f8	 add         r3, r3, #0xF8
  09f10	e5933000	 ldr         r3, [r3]
  09f14	e3130040	 tst         r3, #0x40
  09f18	1a00003c	 bne         |$LN135@ThreadRun@3|

; 3174 :                         {
; 3175 :                             DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("+(m_dwStatus & STATUS_WAIT_HOST_DISCONN_COMPLETE) == 0x00\r\n")));

  09f1c	e59f3f00	 ldr         r3, [pc, #0xF00]
  09f20	e5933440	 ldr         r3, [r3, #0x440]
  09f24	e3130a02	 tst         r3, #2, 20
  09f28	0a000004	 beq         |$LN217@ThreadRun@3|
  09f2c	e59f0f14	 ldr         r0, [pc, #0xF14]
  09f30	eb000000	 bl          NKDbgPrintfW
  09f34	e3a03001	 mov         r3, #1
  09f38	e58d30d8	 str         r3, [sp, #0xD8]
  09f3c	ea000001	 b           |$LN218@ThreadRun@3|
  09f40		 |$LN217@ThreadRun@3|
  09f40	e3a03000	 mov         r3, #0
  09f44	e58d30d8	 str         r3, [sp, #0xD8]
  09f48		 |$LN218@ThreadRun@3|

; 3176 :                             if(m_disconnected || ((INREG8(&pGen->DevCtl) & DEVCTL_SESSION) == 0))

  09f48	e59d316c	 ldr         r3, [sp, #0x16C]
  09f4c	e24330dc	 sub         r3, r3, #0xDC
  09f50	e2833f63	 add         r3, r3, #0x63, 30
  09f54	e5933000	 ldr         r3, [r3]
  09f58	e3530000	 cmp         r3, #0
  09f5c	1a000004	 bne         |$LN133@ThreadRun@3|
  09f60	e59d301c	 ldr         r3, [sp, #0x1C]
  09f64	e2833060	 add         r3, r3, #0x60
  09f68	e5d33000	 ldrb        r3, [r3]
  09f6c	e3130001	 tst         r3, #1
  09f70	1a000026	 bne         |$LN134@ThreadRun@3|
  09f74		 |$LN133@ThreadRun@3|

; 3177 :                             {
; 3178 :                                 ResetEndPoints();

  09f74	e59d316c	 ldr         r3, [sp, #0x16C]
  09f78	e24320dc	 sub         r2, r3, #0xDC
  09f7c	e59d316c	 ldr         r3, [sp, #0x16C]
  09f80	e24300dc	 sub         r0, r3, #0xDC
  09f84	e5923000	 ldr         r3, [r2]
  09f88	e28330ec	 add         r3, r3, #0xEC
  09f8c	e5933000	 ldr         r3, [r3]
  09f90	e1a0e00f	 mov         lr, pc
  09f94	e12fff13	 bx          r3

; 3179 :                                 m_pTransceiver->EnableWakeupInterrupt(TRUE);

  09f98	e3a01001	 mov         r1, #1
  09f9c	e59d316c	 ldr         r3, [sp, #0x16C]
  09fa0	e24330dc	 sub         r3, r3, #0xDC
  09fa4	e28330fc	 add         r3, r3, #0xFC
  09fa8	e5932000	 ldr         r2, [r3]
  09fac	e59d316c	 ldr         r3, [sp, #0x16C]
  09fb0	e24330dc	 sub         r3, r3, #0xDC
  09fb4	e28330fc	 add         r3, r3, #0xFC
  09fb8	e5930000	 ldr         r0, [r3]
  09fbc	e5923000	 ldr         r3, [r2]
  09fc0	e2833008	 add         r3, r3, #8
  09fc4	e5933000	 ldr         r3, [r3]
  09fc8	e1a0e00f	 mov         lr, pc
  09fcc	e12fff13	 bx          r3

; 3180 : 
; 3181 :                                 m_timeout = DO_TRANSCEIVER_SUSPEND_TIMEOUT;

  09fd0	e59d316c	 ldr         r3, [sp, #0x16C]
  09fd4	e24330dc	 sub         r3, r3, #0xDC
  09fd8	e2832e17	 add         r2, r3, #0x17, 28
  09fdc	e3a03c0b	 mov         r3, #0xB, 24
  09fe0	e38330c7	 orr         r3, r3, #0xC7
  09fe4	e5823000	 str         r3, [r2]

; 3182 :                                 m_bIncCount = TRUE;

  09fe8	e59d316c	 ldr         r3, [sp, #0x16C]
  09fec	e24330dc	 sub         r3, r3, #0xDC
  09ff0	e2832d06	 add         r2, r3, #6, 26
  09ff4	e3a03001	 mov         r3, #1
  09ff8	e5823000	 str         r3, [r2]

; 3183 :                                 //m_disconnected = FALSE;
; 3184 :                                 m_bSuspendTransceiver = TRUE;

  09ffc	e59d316c	 ldr         r3, [sp, #0x16C]
  0a000	e24330dc	 sub         r3, r3, #0xDC
  0a004	e2832e19	 add         r2, r3, #0x19, 28
  0a008	e3a03001	 mov         r3, #1
  0a00c	e5823000	 str         r3, [r2]
  0a010		 |$LN134@ThreadRun@3|
  0a010		 |$LN135@ThreadRun@3|
  0a010		 |$LN136@ThreadRun@3|
  0a010		 |$LN139@ThreadRun@3|
  0a010		 |$LN140@ThreadRun@3|
  0a010		 |$LN142@ThreadRun@3|

; 3185 :                             }
; 3186 :                         }
; 3187 :                     }
; 3188 :                 }
; 3189 : 
; 3190 :                 continue;

  0a010	eafffd88	 b           |$LN277@ThreadRun@3|

; 3191 :             }
; 3192 :             else

  0a014	ea000057	 b           |$LN132@ThreadRun@3|
  0a018		 |$LN158@ThreadRun@3|

; 3193 :             {
; 3194 :                 if ((m_dwStatus & STATUS_SESSION_RESTART)
; 3195 :                     && ((m_dwStatus & STATUS_WAIT_HOST_DISCONN_COMPLETE) == 0x00)
; 3196 :                     && (m_pOTG->operateMode == IDLE_MODE))

  0a018	e59d316c	 ldr         r3, [sp, #0x16C]
  0a01c	e24330dc	 sub         r3, r3, #0xDC
  0a020	e28330f8	 add         r3, r3, #0xF8
  0a024	e5933000	 ldr         r3, [r3]
  0a028	e3130080	 tst         r3, #0x80
  0a02c	0a00002d	 beq         |$LN131@ThreadRun@3|
  0a030	e59d316c	 ldr         r3, [sp, #0x16C]
  0a034	e24330dc	 sub         r3, r3, #0xDC
  0a038	e28330f8	 add         r3, r3, #0xF8
  0a03c	e5933000	 ldr         r3, [r3]
  0a040	e3130040	 tst         r3, #0x40
  0a044	1a000027	 bne         |$LN131@ThreadRun@3|
  0a048	e59d316c	 ldr         r3, [sp, #0x16C]
  0a04c	e24330dc	 sub         r3, r3, #0xDC
  0a050	e2833e15	 add         r3, r3, #0x15, 28
  0a054	e5933000	 ldr         r3, [r3]
  0a058	e2833035	 add         r3, r3, #0x35
  0a05c	e5d33000	 ldrb        r3, [r3]
  0a060	e3530000	 cmp         r3, #0
  0a064	1a00001f	 bne         |$LN131@ThreadRun@3|

; 3197 :                 {
; 3198 : 
; 3199 :                     if (m_pOTG->pFuncs[DEVICE_MODE-1] != NULL)

  0a068	e59d316c	 ldr         r3, [sp, #0x16C]
  0a06c	e24330dc	 sub         r3, r3, #0xDC
  0a070	e2833e15	 add         r3, r3, #0x15, 28
  0a074	e5933000	 ldr         r3, [r3]
  0a078	e2833008	 add         r3, r3, #8
  0a07c	e5933000	 ldr         r3, [r3]
  0a080	e3530000	 cmp         r3, #0
  0a084	0a00000d	 beq         |$LN130@ThreadRun@3|

; 3200 :                         m_pOTG->pFuncs[DEVICE_MODE-1]->Disconnect((void *)m_pOTG);

  0a088	e59d316c	 ldr         r3, [sp, #0x16C]
  0a08c	e24330dc	 sub         r3, r3, #0xDC
  0a090	e2833e15	 add         r3, r3, #0x15, 28
  0a094	e5930000	 ldr         r0, [r3]
  0a098	e59d316c	 ldr         r3, [sp, #0x16C]
  0a09c	e24330dc	 sub         r3, r3, #0xDC
  0a0a0	e2833e15	 add         r3, r3, #0x15, 28
  0a0a4	e5933000	 ldr         r3, [r3]
  0a0a8	e2833008	 add         r3, r3, #8
  0a0ac	e5933000	 ldr         r3, [r3]
  0a0b0	e2833018	 add         r3, r3, #0x18
  0a0b4	e5933000	 ldr         r3, [r3]
  0a0b8	e1a0e00f	 mov         lr, pc
  0a0bc	e12fff13	 bx          r3
  0a0c0		 |$LN130@ThreadRun@3|

; 3201 : 
; 3202 :                     m_dwStatus &= ~STATUS_SESSION_RESTART;

  0a0c0	e59d316c	 ldr         r3, [sp, #0x16C]
  0a0c4	e24330dc	 sub         r3, r3, #0xDC
  0a0c8	e28330f8	 add         r3, r3, #0xF8
  0a0cc	e5932000	 ldr         r2, [r3]
  0a0d0	e3e03080	 mvn         r3, #0x80
  0a0d4	e0022003	 and         r2, r2, r3
  0a0d8	e59d316c	 ldr         r3, [sp, #0x16C]
  0a0dc	e24330dc	 sub         r3, r3, #0xDC
  0a0e0	e28330f8	 add         r3, r3, #0xF8
  0a0e4	e5832000	 str         r2, [r3]
  0a0e8		 |$LN131@ThreadRun@3|

; 3203 :                 }
; 3204 : 
; 3205 :                 StartUSBClock(m_bIncCount);

  0a0e8	e59d316c	 ldr         r3, [sp, #0x16C]
  0a0ec	e24330dc	 sub         r3, r3, #0xDC
  0a0f0	e2833d06	 add         r3, r3, #6, 26
  0a0f4	e5931000	 ldr         r1, [r3]
  0a0f8	e59d316c	 ldr         r3, [sp, #0x16C]
  0a0fc	e24320dc	 sub         r2, r3, #0xDC
  0a100	e59d316c	 ldr         r3, [sp, #0x16C]
  0a104	e24300dc	 sub         r0, r3, #0xDC
  0a108	e5923000	 ldr         r3, [r2]
  0a10c	e28330e4	 add         r3, r3, #0xE4
  0a110	e5933000	 ldr         r3, [r3]
  0a114	e1a0e00f	 mov         lr, pc
  0a118	e12fff13	 bx          r3

; 3206 :                 m_bIncCount = FALSE;

  0a11c	e59d316c	 ldr         r3, [sp, #0x16C]
  0a120	e24330dc	 sub         r3, r3, #0xDC
  0a124	e2832d06	 add         r2, r3, #6, 26
  0a128	e3a03000	 mov         r3, #0
  0a12c	e5823000	 str         r3, [r2]

; 3207 :                 if (m_dwStatus & STATUS_SESSION_RESTART)

  0a130	e59d316c	 ldr         r3, [sp, #0x16C]
  0a134	e24330dc	 sub         r3, r3, #0xDC
  0a138	e28330f8	 add         r3, r3, #0xF8
  0a13c	e5933000	 ldr         r3, [r3]
  0a140	e3130080	 tst         r3, #0x80
  0a144	0a000006	 beq         |$LN129@ThreadRun@3|

; 3208 :                     m_timeout = DO_SUSPEND_TIMEOUT;

  0a148	e59d316c	 ldr         r3, [sp, #0x16C]
  0a14c	e24330dc	 sub         r3, r3, #0xDC
  0a150	e2832e17	 add         r2, r3, #0x17, 28
  0a154	e3a03c0b	 mov         r3, #0xB, 24
  0a158	e38330b8	 orr         r3, r3, #0xB8
  0a15c	e5823000	 str         r3, [r2]

; 3209 :                 else

  0a160	ea000004	 b           |$LN128@ThreadRun@3|
  0a164		 |$LN129@ThreadRun@3|

; 3210 :                     m_timeout = INFINITE;

  0a164	e59d316c	 ldr         r3, [sp, #0x16C]
  0a168	e24330dc	 sub         r3, r3, #0xDC
  0a16c	e2832e17	 add         r2, r3, #0x17, 28
  0a170	e3e03000	 mvn         r3, #0
  0a174	e5823000	 str         r3, [r2]
  0a178		 |$LN128@ThreadRun@3|
  0a178		 |$LN132@ThreadRun@3|

; 3211 : 
; 3212 :             }
; 3213 : 
; 3214 :             m_pOTG->intr_usb = INREG8(&m_pOTG->pUsbGenRegs->IntrUSB);

  0a178	e59d316c	 ldr         r3, [sp, #0x16C]
  0a17c	e24330dc	 sub         r3, r3, #0xDC
  0a180	e2833e15	 add         r3, r3, #0x15, 28
  0a184	e5933000	 ldr         r3, [r3]
  0a188	e2833020	 add         r3, r3, #0x20
  0a18c	e5933000	 ldr         r3, [r3]
  0a190	e283300a	 add         r3, r3, #0xA
  0a194	e5d32000	 ldrb        r2, [r3]
  0a198	e59d316c	 ldr         r3, [sp, #0x16C]
  0a19c	e24330dc	 sub         r3, r3, #0xDC
  0a1a0	e2833e15	 add         r3, r3, #0x15, 28
  0a1a4	e5933000	 ldr         r3, [r3]
  0a1a8	e2833034	 add         r3, r3, #0x34
  0a1ac	e5c32000	 strb        r2, [r3]

; 3215 :             m_pOTG->intr_tx  |= INREG16(&m_pOTG->pUsbGenRegs->IntrTx);

  0a1b0	e59d316c	 ldr         r3, [sp, #0x16C]
  0a1b4	e24330dc	 sub         r3, r3, #0xDC
  0a1b8	e2833e15	 add         r3, r3, #0x15, 28
  0a1bc	e5933000	 ldr         r3, [r3]
  0a1c0	e2830032	 add         r0, r3, #0x32
  0a1c4	e59d316c	 ldr         r3, [sp, #0x16C]
  0a1c8	e24330dc	 sub         r3, r3, #0xDC
  0a1cc	e2833e15	 add         r3, r3, #0x15, 28
  0a1d0	e5933000	 ldr         r3, [r3]
  0a1d4	e2833020	 add         r3, r3, #0x20
  0a1d8	e5933000	 ldr         r3, [r3]
  0a1dc	e2831002	 add         r1, r3, #2
  0a1e0	e5d13001	 ldrb        r3, [r1, #1]
  0a1e4	e1a03403	 mov         r3, r3, lsl #8
  0a1e8	e1a02803	 mov         r2, r3, lsl #16
  0a1ec	e1a02822	 mov         r2, r2, lsr #16
  0a1f0	e5d13000	 ldrb        r3, [r1]
  0a1f4	e1833002	 orr         r3, r3, r2
  0a1f8	e1a02003	 mov         r2, r3
  0a1fc	e1d030b0	 ldrh        r3, [r0]
  0a200	e1831002	 orr         r1, r3, r2
  0a204	e59d316c	 ldr         r3, [sp, #0x16C]
  0a208	e24330dc	 sub         r3, r3, #0xDC
  0a20c	e2833e15	 add         r3, r3, #0x15, 28
  0a210	e5933000	 ldr         r3, [r3]
  0a214	e2832032	 add         r2, r3, #0x32
  0a218	e1a03801	 mov         r3, r1, lsl #16
  0a21c	e1a03823	 mov         r3, r3, lsr #16
  0a220	e1c230b0	 strh        r3, [r2]

; 3216 :             m_pOTG->intr_rx  |= INREG16(&m_pOTG->pUsbGenRegs->IntrRx);

  0a224	e59d316c	 ldr         r3, [sp, #0x16C]
  0a228	e24330dc	 sub         r3, r3, #0xDC
  0a22c	e2833e15	 add         r3, r3, #0x15, 28
  0a230	e5933000	 ldr         r3, [r3]
  0a234	e2830030	 add         r0, r3, #0x30
  0a238	e59d316c	 ldr         r3, [sp, #0x16C]
  0a23c	e24330dc	 sub         r3, r3, #0xDC
  0a240	e2833e15	 add         r3, r3, #0x15, 28
  0a244	e5933000	 ldr         r3, [r3]
  0a248	e2833020	 add         r3, r3, #0x20
  0a24c	e5933000	 ldr         r3, [r3]
  0a250	e2831004	 add         r1, r3, #4
  0a254	e5d13001	 ldrb        r3, [r1, #1]
  0a258	e1a03403	 mov         r3, r3, lsl #8
  0a25c	e1a02803	 mov         r2, r3, lsl #16
  0a260	e1a02822	 mov         r2, r2, lsr #16
  0a264	e5d13000	 ldrb        r3, [r1]
  0a268	e1833002	 orr         r3, r3, r2
  0a26c	e1a02003	 mov         r2, r3
  0a270	e1d030b0	 ldrh        r3, [r0]
  0a274	e1831002	 orr         r1, r3, r2
  0a278	e59d316c	 ldr         r3, [sp, #0x16C]
  0a27c	e24330dc	 sub         r3, r3, #0xDC
  0a280	e2833e15	 add         r3, r3, #0x15, 28
  0a284	e5933000	 ldr         r3, [r3]
  0a288	e2832030	 add         r2, r3, #0x30
  0a28c	e1a03801	 mov         r3, r1, lsl #16
  0a290	e1a03823	 mov         r3, r3, lsr #16
  0a294	e1c230b0	 strh        r3, [r2]

; 3217 : 
; 3218 :             DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("OTG Interrupts(0x%x) intr_tx(0x%x) intr_rx(0x%x)\n"), m_pOTG->intr_usb, m_pOTG->intr_tx, m_pOTG->intr_rx ));

  0a298	e59f3b84	 ldr         r3, [pc, #0xB84]
  0a29c	e5933440	 ldr         r3, [r3, #0x440]
  0a2a0	e3130a02	 tst         r3, #2, 20
  0a2a4	0a000016	 beq         |$LN219@ThreadRun@3|
  0a2a8	e59d316c	 ldr         r3, [sp, #0x16C]
  0a2ac	e24330dc	 sub         r3, r3, #0xDC
  0a2b0	e2833e15	 add         r3, r3, #0x15, 28
  0a2b4	e5933000	 ldr         r3, [r3]
  0a2b8	e2833030	 add         r3, r3, #0x30
  0a2bc	e1d330b0	 ldrh        r3, [r3]
  0a2c0	e59d216c	 ldr         r2, [sp, #0x16C]
  0a2c4	e24220dc	 sub         r2, r2, #0xDC
  0a2c8	e2822e15	 add         r2, r2, #0x15, 28
  0a2cc	e5922000	 ldr         r2, [r2]
  0a2d0	e2822032	 add         r2, r2, #0x32
  0a2d4	e1d220b0	 ldrh        r2, [r2]
  0a2d8	e59d116c	 ldr         r1, [sp, #0x16C]
  0a2dc	e24110dc	 sub         r1, r1, #0xDC
  0a2e0	e2811e15	 add         r1, r1, #0x15, 28
  0a2e4	e5911000	 ldr         r1, [r1]
  0a2e8	e2811034	 add         r1, r1, #0x34
  0a2ec	e5d11000	 ldrb        r1, [r1]
  0a2f0	e59f0b4c	 ldr         r0, [pc, #0xB4C]
  0a2f4	eb000000	 bl          NKDbgPrintfW
  0a2f8	e3a03001	 mov         r3, #1
  0a2fc	e58d30dc	 str         r3, [sp, #0xDC]
  0a300	ea000001	 b           |$LN220@ThreadRun@3|
  0a304		 |$LN219@ThreadRun@3|
  0a304	e3a03000	 mov         r3, #0
  0a308	e58d30dc	 str         r3, [sp, #0xDC]
  0a30c		 |$LN220@ThreadRun@3|

; 3219 : 
; 3220 :             if (m_pOTG->dwPwrMgmt == MODE_SYSTEM_RESUME)

  0a30c	e59d316c	 ldr         r3, [sp, #0x16C]
  0a310	e24330dc	 sub         r3, r3, #0xDC
  0a314	e2833e15	 add         r3, r3, #0x15, 28
  0a318	e5933000	 ldr         r3, [r3]
  0a31c	e2833064	 add         r3, r3, #0x64
  0a320	e5933000	 ldr         r3, [r3]
  0a324	e3530002	 cmp         r3, #2
  0a328	1a000137	 bne         |$LN127@ThreadRun@3|

; 3221 :             {
; 3222 :                 if (m_pOTG->operateMode == HOST_MODE)

  0a32c	e59d316c	 ldr         r3, [sp, #0x16C]
  0a330	e24330dc	 sub         r3, r3, #0xDC
  0a334	e2833e15	 add         r3, r3, #0x15, 28
  0a338	e5933000	 ldr         r3, [r3]
  0a33c	e2833035	 add         r3, r3, #0x35
  0a340	e5d33000	 ldrb        r3, [r3]
  0a344	e3530002	 cmp         r3, #2
  0a348	1a0000d7	 bne         |$LN126@ThreadRun@3|

; 3223 :                 {
; 3224 :                     DWORD dwPrevState = 0;

  0a34c	e3a03000	 mov         r3, #0
  0a350	e58d3034	 str         r3, [sp, #0x34]

; 3225 : 
; 3226 :                     DEBUGMSG(1, (TEXT("Resume on Host Mode\r\n")));

  0a354	e59f0ae4	 ldr         r0, [pc, #0xAE4]
  0a358	eb000000	 bl          NKDbgPrintfW
  0a35c	e3a03001	 mov         r3, #1
  0a360	e58d30e0	 str         r3, [sp, #0xE0]
  0a364	ea000001	 b           |$LN222@ThreadRun@3|
  0a368	e3a03000	 mov         r3, #0
  0a36c	e58d30e0	 str         r3, [sp, #0xE0]
  0a370		 |$LN222@ThreadRun@3|

; 3227 :                     if (INREG8(&pGen->Power) & POWER_RESUME)

  0a370	e59d301c	 ldr         r3, [sp, #0x1C]
  0a374	e2833001	 add         r3, r3, #1
  0a378	e5d33000	 ldrb        r3, [r3]
  0a37c	e3130004	 tst         r3, #4
  0a380	0a000009	 beq         |$LN125@ThreadRun@3|

; 3228 :                         CLRREG8(&pGen->Power, POWER_RESUME);

  0a384	e59d301c	 ldr         r3, [sp, #0x1C]
  0a388	e2833001	 add         r3, r3, #1
  0a38c	e5d33000	 ldrb        r3, [r3]
  0a390	e1a02003	 mov         r2, r3
  0a394	e3e03004	 mvn         r3, #4
  0a398	e0023003	 and         r3, r2, r3
  0a39c	e20320ff	 and         r2, r3, #0xFF
  0a3a0	e59d301c	 ldr         r3, [sp, #0x1C]
  0a3a4	e2833001	 add         r3, r3, #1
  0a3a8	e5c32000	 strb        r2, [r3]
  0a3ac		 |$LN125@ThreadRun@3|

; 3229 : 
; 3230 :                     if ( ((INREG8(&pGen->DevCtl) & DEVCTL_SESSION) == 0) || ((m_pOTG->intr_usb & INTRUSB_SUSPEND) != 0) )

  0a3ac	e59d301c	 ldr         r3, [sp, #0x1C]
  0a3b0	e2833060	 add         r3, r3, #0x60
  0a3b4	e5d33000	 ldrb        r3, [r3]
  0a3b8	e3130001	 tst         r3, #1
  0a3bc	0a000007	 beq         |$LN123@ThreadRun@3|
  0a3c0	e59d316c	 ldr         r3, [sp, #0x16C]
  0a3c4	e24330dc	 sub         r3, r3, #0xDC
  0a3c8	e2833e15	 add         r3, r3, #0x15, 28
  0a3cc	e5933000	 ldr         r3, [r3]
  0a3d0	e2833034	 add         r3, r3, #0x34
  0a3d4	e5d33000	 ldrb        r3, [r3]
  0a3d8	e3130001	 tst         r3, #1
  0a3dc	0a0000a2	 beq         |$LN124@ThreadRun@3|
  0a3e0		 |$LN123@ThreadRun@3|

; 3231 :                     {
; 3232 :                         DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Resume Host Mode with request session again\r\n")));

  0a3e0	e59f3a3c	 ldr         r3, [pc, #0xA3C]
  0a3e4	e5933440	 ldr         r3, [r3, #0x440]
  0a3e8	e3130a02	 tst         r3, #2, 20
  0a3ec	0a000004	 beq         |$LN223@ThreadRun@3|
  0a3f0	e59f0a44	 ldr         r0, [pc, #0xA44]
  0a3f4	eb000000	 bl          NKDbgPrintfW
  0a3f8	e3a03001	 mov         r3, #1
  0a3fc	e58d30e4	 str         r3, [sp, #0xE4]
  0a400	ea000001	 b           |$LN224@ThreadRun@3|
  0a404		 |$LN223@ThreadRun@3|
  0a404	e3a03000	 mov         r3, #0
  0a408	e58d30e4	 str         r3, [sp, #0xE4]
  0a40c		 |$LN224@ThreadRun@3|

; 3233 :                         ResetEndPoints();

  0a40c	e59d316c	 ldr         r3, [sp, #0x16C]
  0a410	e24320dc	 sub         r2, r3, #0xDC
  0a414	e59d316c	 ldr         r3, [sp, #0x16C]
  0a418	e24300dc	 sub         r0, r3, #0xDC
  0a41c	e5923000	 ldr         r3, [r2]
  0a420	e28330ec	 add         r3, r3, #0xEC
  0a424	e5933000	 ldr         r3, [r3]
  0a428	e1a0e00f	 mov         lr, pc
  0a42c	e12fff13	 bx          r3

; 3234 :                         m_bRequestSession = TRUE;

  0a430	e59d316c	 ldr         r3, [sp, #0x16C]
  0a434	e24330dc	 sub         r3, r3, #0xDC
  0a438	e2832f59	 add         r2, r3, #0x59, 30
  0a43c	e3a03001	 mov         r3, #1
  0a440	e5823000	 str         r3, [r2]

; 3235 :                         m_pOTG->operateMode = IDLE_MODE;

  0a444	e59d316c	 ldr         r3, [sp, #0x16C]
  0a448	e24330dc	 sub         r3, r3, #0xDC
  0a44c	e2833e15	 add         r3, r3, #0x15, 28
  0a450	e5933000	 ldr         r3, [r3]
  0a454	e2832035	 add         r2, r3, #0x35
  0a458	e3a03000	 mov         r3, #0
  0a45c	e5c23000	 strb        r3, [r2]

; 3236 :                         m_dwStatus |= STATUS_DISCONN_REQUEST;

  0a460	e59d316c	 ldr         r3, [sp, #0x16C]
  0a464	e24330dc	 sub         r3, r3, #0xDC
  0a468	e28330f8	 add         r3, r3, #0xF8
  0a46c	e5933000	 ldr         r3, [r3]
  0a470	e3832002	 orr         r2, r3, #2
  0a474	e59d316c	 ldr         r3, [sp, #0x16C]
  0a478	e24330dc	 sub         r3, r3, #0xDC
  0a47c	e28330f8	 add         r3, r3, #0xF8
  0a480	e5832000	 str         r2, [r3]

; 3237 :                         dwPrevState = m_pOTG->connect_status;

  0a484	e59d316c	 ldr         r3, [sp, #0x16C]
  0a488	e24330dc	 sub         r3, r3, #0xDC
  0a48c	e2833e15	 add         r3, r3, #0x15, 28
  0a490	e5933000	 ldr         r3, [r3]
  0a494	e283304c	 add         r3, r3, #0x4C
  0a498	e5d33000	 ldrb        r3, [r3]
  0a49c	e58d3034	 str         r3, [sp, #0x34]

; 3238 :                         m_pOTG->connect_status &= ~CONN_CCS;

  0a4a0	e59d316c	 ldr         r3, [sp, #0x16C]
  0a4a4	e24330dc	 sub         r3, r3, #0xDC
  0a4a8	e2833e15	 add         r3, r3, #0x15, 28
  0a4ac	e5933000	 ldr         r3, [r3]
  0a4b0	e283304c	 add         r3, r3, #0x4C
  0a4b4	e5d33000	 ldrb        r3, [r3]
  0a4b8	e1a02003	 mov         r2, r3
  0a4bc	e3e03001	 mvn         r3, #1
  0a4c0	e0021003	 and         r1, r2, r3
  0a4c4	e59d316c	 ldr         r3, [sp, #0x16C]
  0a4c8	e24330dc	 sub         r3, r3, #0xDC
  0a4cc	e2833e15	 add         r3, r3, #0x15, 28
  0a4d0	e5933000	 ldr         r3, [r3]
  0a4d4	e283204c	 add         r2, r3, #0x4C
  0a4d8	e20130ff	 and         r3, r1, #0xFF
  0a4dc	e5c23000	 strb        r3, [r2]

; 3239 :                         if (dwPrevState & CONN_CCS)

  0a4e0	e59d3034	 ldr         r3, [sp, #0x34]
  0a4e4	e3130001	 tst         r3, #1
  0a4e8	0a00000e	 beq         |$LN122@ThreadRun@3|

; 3240 :                             m_pOTG->connect_status |= CONN_CSC;

  0a4ec	e59d316c	 ldr         r3, [sp, #0x16C]
  0a4f0	e24330dc	 sub         r3, r3, #0xDC
  0a4f4	e2833e15	 add         r3, r3, #0x15, 28
  0a4f8	e5933000	 ldr         r3, [r3]
  0a4fc	e283304c	 add         r3, r3, #0x4C
  0a500	e5d33000	 ldrb        r3, [r3]
  0a504	e3831002	 orr         r1, r3, #2
  0a508	e59d316c	 ldr         r3, [sp, #0x16C]
  0a50c	e24330dc	 sub         r3, r3, #0xDC
  0a510	e2833e15	 add         r3, r3, #0x15, 28
  0a514	e5933000	 ldr         r3, [r3]
  0a518	e283204c	 add         r2, r3, #0x4C
  0a51c	e20130ff	 and         r3, r1, #0xFF
  0a520	e5c23000	 strb        r3, [r2]

; 3241 :                         else

  0a524	ea00000f	 b           |$LN121@ThreadRun@3|
  0a528		 |$LN122@ThreadRun@3|

; 3242 :                             m_pOTG->connect_status &= ~CONN_CSC;

  0a528	e59d316c	 ldr         r3, [sp, #0x16C]
  0a52c	e24330dc	 sub         r3, r3, #0xDC
  0a530	e2833e15	 add         r3, r3, #0x15, 28
  0a534	e5933000	 ldr         r3, [r3]
  0a538	e283304c	 add         r3, r3, #0x4C
  0a53c	e5d33000	 ldrb        r3, [r3]
  0a540	e1a02003	 mov         r2, r3
  0a544	e3e03002	 mvn         r3, #2
  0a548	e0021003	 and         r1, r2, r3
  0a54c	e59d316c	 ldr         r3, [sp, #0x16C]
  0a550	e24330dc	 sub         r3, r3, #0xDC
  0a554	e2833e15	 add         r3, r3, #0x15, 28
  0a558	e5933000	 ldr         r3, [r3]
  0a55c	e283204c	 add         r2, r3, #0x4C
  0a560	e20130ff	 and         r3, r1, #0xFF
  0a564	e5c23000	 strb        r3, [r2]
  0a568		 |$LN121@ThreadRun@3|

; 3243 : 
; 3244 :                         if (m_pOTG->pFuncs[HOST_MODE-1] != NULL)

  0a568	e59d316c	 ldr         r3, [sp, #0x16C]
  0a56c	e24330dc	 sub         r3, r3, #0xDC
  0a570	e2833e15	 add         r3, r3, #0x15, 28
  0a574	e5933000	 ldr         r3, [r3]
  0a578	e283300c	 add         r3, r3, #0xC
  0a57c	e5933000	 ldr         r3, [r3]
  0a580	e3530000	 cmp         r3, #0
  0a584	0a00000d	 beq         |$LN120@ThreadRun@3|

; 3245 :                             m_pOTG->pFuncs[HOST_MODE-1]->Disconnect((void *)m_pOTG);

  0a588	e59d316c	 ldr         r3, [sp, #0x16C]
  0a58c	e24330dc	 sub         r3, r3, #0xDC
  0a590	e2833e15	 add         r3, r3, #0x15, 28
  0a594	e5930000	 ldr         r0, [r3]
  0a598	e59d316c	 ldr         r3, [sp, #0x16C]
  0a59c	e24330dc	 sub         r3, r3, #0xDC
  0a5a0	e2833e15	 add         r3, r3, #0x15, 28
  0a5a4	e5933000	 ldr         r3, [r3]
  0a5a8	e283300c	 add         r3, r3, #0xC
  0a5ac	e5933000	 ldr         r3, [r3]
  0a5b0	e2833018	 add         r3, r3, #0x18
  0a5b4	e5933000	 ldr         r3, [r3]
  0a5b8	e1a0e00f	 mov         lr, pc
  0a5bc	e12fff13	 bx          r3
  0a5c0		 |$LN120@ThreadRun@3|

; 3246 : 
; 3247 :                         SessionRequest(FALSE, FALSE);

  0a5c0	e3a02000	 mov         r2, #0
  0a5c4	e3a01000	 mov         r1, #0
  0a5c8	e59d316c	 ldr         r3, [sp, #0x16C]
  0a5cc	e243e0dc	 sub         lr, r3, #0xDC
  0a5d0	e59d316c	 ldr         r3, [sp, #0x16C]
  0a5d4	e24300dc	 sub         r0, r3, #0xDC
  0a5d8	e59e3000	 ldr         r3, [lr]
  0a5dc	e2833084	 add         r3, r3, #0x84
  0a5e0	e5933000	 ldr         r3, [r3]
  0a5e4	e1a0e00f	 mov         lr, pc
  0a5e8	e12fff13	 bx          r3

; 3248 : 
; 3249 :                         m_disconnected = TRUE;

  0a5ec	e59d316c	 ldr         r3, [sp, #0x16C]
  0a5f0	e24330dc	 sub         r3, r3, #0xDC
  0a5f4	e2832f63	 add         r2, r3, #0x63, 30
  0a5f8	e3a03001	 mov         r3, #1
  0a5fc	e5823000	 str         r3, [r2]

; 3250 :                         m_timeout = DO_SUSPEND_TIMEOUT;

  0a600	e59d316c	 ldr         r3, [sp, #0x16C]
  0a604	e24330dc	 sub         r3, r3, #0xDC
  0a608	e2832e17	 add         r2, r3, #0x17, 28
  0a60c	e3a03c0b	 mov         r3, #0xB, 24
  0a610	e38330b8	 orr         r3, r3, #0xB8
  0a614	e5823000	 str         r3, [r2]

; 3251 :                         Sleep(200);

  0a618	e3a000c8	 mov         r0, #0xC8
  0a61c	eb000000	 bl          Sleep

; 3252 :                         // Softreset the MUSB controller to recover from
; 3253 :                         // babble errors when Activesync is connected
; 3254 :                         SoftResetMUSBController();

  0a620	e3a01000	 mov         r1, #0
  0a624	e59d316c	 ldr         r3, [sp, #0x16C]
  0a628	e24320dc	 sub         r2, r3, #0xDC
  0a62c	e59d316c	 ldr         r3, [sp, #0x16C]
  0a630	e24300dc	 sub         r0, r3, #0xDC
  0a634	e5923000	 ldr         r3, [r2]
  0a638	e28330f8	 add         r3, r3, #0xF8
  0a63c	e5933000	 ldr         r3, [r3]
  0a640	e1a0e00f	 mov         lr, pc
  0a644	e12fff13	 bx          r3

; 3255 : 
; 3256 : 		                m_pOTG->dwPwrMgmt = MODE_SYSTEM_NORMAL;

  0a648	e59d316c	 ldr         r3, [sp, #0x16C]
  0a64c	e24330dc	 sub         r3, r3, #0xDC
  0a650	e2833e15	 add         r3, r3, #0x15, 28
  0a654	e5933000	 ldr         r3, [r3]
  0a658	e2832064	 add         r2, r3, #0x64
  0a65c	e3a03000	 mov         r3, #0
  0a660	e5823000	 str         r3, [r2]

; 3257 :                         continue;

  0a664	eafffbf3	 b           |$LN278@ThreadRun@3|

; 3258 :                     }
; 3259 :                     else

  0a668	ea00000e	 b           |$LN119@ThreadRun@3|
  0a66c		 |$LN124@ThreadRun@3|

; 3260 :                     {
; 3261 :                         SoftResetMUSBController();

  0a66c	e3a01000	 mov         r1, #0
  0a670	e59d316c	 ldr         r3, [sp, #0x16C]
  0a674	e24320dc	 sub         r2, r3, #0xDC
  0a678	e59d316c	 ldr         r3, [sp, #0x16C]
  0a67c	e24300dc	 sub         r0, r3, #0xDC
  0a680	e5923000	 ldr         r3, [r2]
  0a684	e28330f8	 add         r3, r3, #0xF8
  0a688	e5933000	 ldr         r3, [r3]
  0a68c	e1a0e00f	 mov         lr, pc
  0a690	e12fff13	 bx          r3

; 3262 :                         m_timeout = DO_USBHOST_TIMEOUT;

  0a694	e59d316c	 ldr         r3, [sp, #0x16C]
  0a698	e24330dc	 sub         r3, r3, #0xDC
  0a69c	e2832e17	 add         r2, r3, #0x17, 28
  0a6a0	e3a03003	 mov         r3, #3
  0a6a4	e5823000	 str         r3, [r2]
  0a6a8		 |$LN119@ThreadRun@3|

; 3263 :                     }
; 3264 :                 }
; 3265 :                 else

  0a6a8	ea000050	 b           |$LN118@ThreadRun@3|
  0a6ac		 |$LN126@ThreadRun@3|

; 3266 :                 {
; 3267 :                     BYTE  devCtl = INREG8(&m_pOTG->pUsbGenRegs->DevCtl);

  0a6ac	e59d316c	 ldr         r3, [sp, #0x16C]
  0a6b0	e24330dc	 sub         r3, r3, #0xDC
  0a6b4	e2833e15	 add         r3, r3, #0x15, 28
  0a6b8	e5933000	 ldr         r3, [r3]
  0a6bc	e2833020	 add         r3, r3, #0x20
  0a6c0	e5933000	 ldr         r3, [r3]
  0a6c4	e2833060	 add         r3, r3, #0x60
  0a6c8	e5d33000	 ldrb        r3, [r3]
  0a6cc	e5cd3038	 strb        r3, [sp, #0x38]

; 3268 : 
; 3269 :                     // This condition occur either on wakeup from suspend (no devices connected before suspend)
; 3270 :                     // or an USB_PRES interrupt detected
; 3271 : 
; 3272 :                     // Identify if a A or B device is connected and set the session bit only when there is a
; 3273 :                     // device connected.
; 3274 :                     // Setting a session bit without any device connected is causing USB_PRES interrupt
; 3275 : 
; 3276 :                     // VBUS state changes  immediately from VBUSVALID to "VBUS Above AValid, below VBusValid" on
; 3277 :                     // cable removal so check for VBUSVALID instead of T2 TWL_STS_VBUS
; 3278 :                     SoftResetMUSBController();

  0a6d0	e3a01000	 mov         r1, #0
  0a6d4	e59d316c	 ldr         r3, [sp, #0x16C]
  0a6d8	e24320dc	 sub         r2, r3, #0xDC
  0a6dc	e59d316c	 ldr         r3, [sp, #0x16C]
  0a6e0	e24300dc	 sub         r0, r3, #0xDC
  0a6e4	e5923000	 ldr         r3, [r2]
  0a6e8	e28330f8	 add         r3, r3, #0xF8
  0a6ec	e5933000	 ldr         r3, [r3]
  0a6f0	e1a0e00f	 mov         lr, pc
  0a6f4	e12fff13	 bx          r3

; 3279 :                     if (m_pTransceiver->IsBDeviceConnected() ||
; 3280 :                         ((devCtl & DEVCTL_VBUS) == DEVCTL_VBUSVALID))

  0a6f8	e59d316c	 ldr         r3, [sp, #0x16C]
  0a6fc	e24330dc	 sub         r3, r3, #0xDC
  0a700	e28330fc	 add         r3, r3, #0xFC
  0a704	e5932000	 ldr         r2, [r3]
  0a708	e59d316c	 ldr         r3, [sp, #0x16C]
  0a70c	e24330dc	 sub         r3, r3, #0xDC
  0a710	e28330fc	 add         r3, r3, #0xFC
  0a714	e5930000	 ldr         r0, [r3]
  0a718	e5923000	 ldr         r3, [r2]
  0a71c	e2833034	 add         r3, r3, #0x34
  0a720	e5933000	 ldr         r3, [r3]
  0a724	e1a0e00f	 mov         lr, pc
  0a728	e12fff13	 bx          r3
  0a72c	e58d00e8	 str         r0, [sp, #0xE8]
  0a730	e59d30e8	 ldr         r3, [sp, #0xE8]
  0a734	e3530000	 cmp         r3, #0
  0a738	1a000003	 bne         |$LN116@ThreadRun@3|
  0a73c	e5dd3038	 ldrb        r3, [sp, #0x38]
  0a740	e2033018	 and         r3, r3, #0x18
  0a744	e3530018	 cmp         r3, #0x18
  0a748	1a000010	 bne         |$LN117@ThreadRun@3|
  0a74c		 |$LN116@ThreadRun@3|

; 3281 :                         {
; 3282 :                         SessionRequest(TRUE, TRUE);

  0a74c	e3a02001	 mov         r2, #1
  0a750	e3a01001	 mov         r1, #1
  0a754	e59d316c	 ldr         r3, [sp, #0x16C]
  0a758	e243e0dc	 sub         lr, r3, #0xDC
  0a75c	e59d316c	 ldr         r3, [sp, #0x16C]
  0a760	e24300dc	 sub         r0, r3, #0xDC
  0a764	e59e3000	 ldr         r3, [lr]
  0a768	e2833084	 add         r3, r3, #0x84
  0a76c	e5933000	 ldr         r3, [r3]
  0a770	e1a0e00f	 mov         lr, pc
  0a774	e12fff13	 bx          r3

; 3283 :                         m_timeout = DO_USBCLK_TIMEOUT;

  0a778	e59d316c	 ldr         r3, [sp, #0x16C]
  0a77c	e24330dc	 sub         r3, r3, #0xDC
  0a780	e2832e17	 add         r2, r3, #0x17, 28
  0a784	e3a03003	 mov         r3, #3
  0a788	e5823000	 str         r3, [r2]

; 3284 :                         }
; 3285 :                     else

  0a78c	ea000017	 b           |$LN115@ThreadRun@3|
  0a790		 |$LN117@ThreadRun@3|

; 3286 :                         {
; 3287 :                         // No Device attached
; 3288 :                         DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("NO Device Connected\n")));

  0a790	e59f368c	 ldr         r3, [pc, #0x68C]
  0a794	e5933440	 ldr         r3, [r3, #0x440]
  0a798	e3130a02	 tst         r3, #2, 20
  0a79c	0a000004	 beq         |$LN225@ThreadRun@3|
  0a7a0	e59f0690	 ldr         r0, [pc, #0x690]
  0a7a4	eb000000	 bl          NKDbgPrintfW
  0a7a8	e3a03001	 mov         r3, #1
  0a7ac	e58d30ec	 str         r3, [sp, #0xEC]
  0a7b0	ea000001	 b           |$LN226@ThreadRun@3|
  0a7b4		 |$LN225@ThreadRun@3|
  0a7b4	e3a03000	 mov         r3, #0
  0a7b8	e58d30ec	 str         r3, [sp, #0xEC]
  0a7bc		 |$LN226@ThreadRun@3|

; 3289 : 
; 3290 :                         // wait for interrupt
; 3291 :                         m_timeout = DO_USBCLK_TIMEOUT;

  0a7bc	e59d316c	 ldr         r3, [sp, #0x16C]
  0a7c0	e24330dc	 sub         r3, r3, #0xDC
  0a7c4	e2832e17	 add         r2, r3, #0x17, 28
  0a7c8	e3a03003	 mov         r3, #3
  0a7cc	e5823000	 str         r3, [r2]

; 3292 :                         m_pOTG->dwPwrMgmt = MODE_SYSTEM_NORMAL;

  0a7d0	e59d316c	 ldr         r3, [sp, #0x16C]
  0a7d4	e24330dc	 sub         r3, r3, #0xDC
  0a7d8	e2833e15	 add         r3, r3, #0x15, 28
  0a7dc	e5933000	 ldr         r3, [r3]
  0a7e0	e2832064	 add         r2, r3, #0x64
  0a7e4	e3a03000	 mov         r3, #0
  0a7e8	e5823000	 str         r3, [r2]

; 3293 :                         continue;

  0a7ec	eafffb91	 b           |$LN279@ThreadRun@3|
  0a7f0		 |$LN115@ThreadRun@3|
  0a7f0		 |$LN118@ThreadRun@3|

; 3294 :                         }
; 3295 :                 }
; 3296 : 
; 3297 :                 m_pOTG->dwPwrMgmt = MODE_SYSTEM_NORMAL;

  0a7f0	e59d316c	 ldr         r3, [sp, #0x16C]
  0a7f4	e24330dc	 sub         r3, r3, #0xDC
  0a7f8	e2833e15	 add         r3, r3, #0x15, 28
  0a7fc	e5933000	 ldr         r3, [r3]
  0a800	e2832064	 add         r2, r3, #0x64
  0a804	e3a03000	 mov         r3, #0
  0a808	e5823000	 str         r3, [r2]
  0a80c		 |$LN127@ThreadRun@3|

; 3298 :             }
; 3299 : 
; 3300 :             DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("Interrupt Variable INTRUSB(0x%x) Devctl(0x%x)\n"), m_pOTG->intr_usb, INREG8(&m_pOTG->pUsbGenRegs->DevCtl)));

  0a80c	e59f3610	 ldr         r3, [pc, #0x610]
  0a810	e5933440	 ldr         r3, [r3, #0x440]
  0a814	e3130a02	 tst         r3, #2, 20
  0a818	0a000014	 beq         |$LN227@ThreadRun@3|
  0a81c	e59d316c	 ldr         r3, [sp, #0x16C]
  0a820	e24330dc	 sub         r3, r3, #0xDC
  0a824	e2833e15	 add         r3, r3, #0x15, 28
  0a828	e5933000	 ldr         r3, [r3]
  0a82c	e2833020	 add         r3, r3, #0x20
  0a830	e5933000	 ldr         r3, [r3]
  0a834	e2833060	 add         r3, r3, #0x60
  0a838	e5d33000	 ldrb        r3, [r3]
  0a83c	e1a02003	 mov         r2, r3
  0a840	e59d316c	 ldr         r3, [sp, #0x16C]
  0a844	e24330dc	 sub         r3, r3, #0xDC
  0a848	e2833e15	 add         r3, r3, #0x15, 28
  0a84c	e5933000	 ldr         r3, [r3]
  0a850	e2833034	 add         r3, r3, #0x34
  0a854	e5d33000	 ldrb        r3, [r3]
  0a858	e1a01003	 mov         r1, r3
  0a85c	e59f05d0	 ldr         r0, [pc, #0x5D0]
  0a860	eb000000	 bl          NKDbgPrintfW
  0a864	e3a03001	 mov         r3, #1
  0a868	e58d30f0	 str         r3, [sp, #0xF0]
  0a86c	ea000001	 b           |$LN228@ThreadRun@3|
  0a870		 |$LN227@ThreadRun@3|
  0a870	e3a03000	 mov         r3, #0
  0a874	e58d30f0	 str         r3, [sp, #0xF0]
  0a878		 |$LN228@ThreadRun@3|

; 3301 :             if((!m_pOTG->intr_usb) && (!m_pOTG->intr_tx) && (!m_pOTG->intr_rx))

  0a878	e59d316c	 ldr         r3, [sp, #0x16C]
  0a87c	e24330dc	 sub         r3, r3, #0xDC
  0a880	e2833e15	 add         r3, r3, #0x15, 28
  0a884	e5933000	 ldr         r3, [r3]
  0a888	e2833034	 add         r3, r3, #0x34
  0a88c	e5d33000	 ldrb        r3, [r3]
  0a890	e3530000	 cmp         r3, #0
  0a894	1a000026	 bne         |$LN114@ThreadRun@3|
  0a898	e59d316c	 ldr         r3, [sp, #0x16C]
  0a89c	e24330dc	 sub         r3, r3, #0xDC
  0a8a0	e2833e15	 add         r3, r3, #0x15, 28
  0a8a4	e5933000	 ldr         r3, [r3]
  0a8a8	e2833032	 add         r3, r3, #0x32
  0a8ac	e1d330b0	 ldrh        r3, [r3]
  0a8b0	e3530000	 cmp         r3, #0
  0a8b4	1a00001e	 bne         |$LN114@ThreadRun@3|
  0a8b8	e59d316c	 ldr         r3, [sp, #0x16C]
  0a8bc	e24330dc	 sub         r3, r3, #0xDC
  0a8c0	e2833e15	 add         r3, r3, #0x15, 28
  0a8c4	e5933000	 ldr         r3, [r3]
  0a8c8	e2833030	 add         r3, r3, #0x30
  0a8cc	e1d330b0	 ldrh        r3, [r3]
  0a8d0	e3530000	 cmp         r3, #0
  0a8d4	1a000016	 bne         |$LN114@ThreadRun@3|

; 3302 :             {
; 3303 :                 if(m_timeout == INFINITE)

  0a8d8	e59d316c	 ldr         r3, [sp, #0x16C]
  0a8dc	e24330dc	 sub         r3, r3, #0xDC
  0a8e0	e2833e17	 add         r3, r3, #0x17, 28
  0a8e4	e5933000	 ldr         r3, [r3]
  0a8e8	e3730001	 cmn         r3, #1
  0a8ec	1a000005	 bne         |$LN113@ThreadRun@3|

; 3304 :                 {
; 3305 :                     m_timeout = DO_SUSPEND_TIMEOUT;

  0a8f0	e59d316c	 ldr         r3, [sp, #0x16C]
  0a8f4	e24330dc	 sub         r3, r3, #0xDC
  0a8f8	e2832e17	 add         r2, r3, #0x17, 28
  0a8fc	e3a03c0b	 mov         r3, #0xB, 24
  0a900	e38330b8	 orr         r3, r3, #0xB8
  0a904	e5823000	 str         r3, [r2]
  0a908		 |$LN113@ThreadRun@3|

; 3306 :                 }
; 3307 :                 DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("Interrupt Variable INTRUSB No interrupt at all\n")));

  0a908	e59f3514	 ldr         r3, [pc, #0x514]
  0a90c	e5933440	 ldr         r3, [r3, #0x440]
  0a910	e3130a02	 tst         r3, #2, 20
  0a914	0a000004	 beq         |$LN229@ThreadRun@3|
  0a918	e59f0510	 ldr         r0, [pc, #0x510]
  0a91c	eb000000	 bl          NKDbgPrintfW
  0a920	e3a03001	 mov         r3, #1
  0a924	e58d30f4	 str         r3, [sp, #0xF4]
  0a928	ea000001	 b           |$LN230@ThreadRun@3|
  0a92c		 |$LN229@ThreadRun@3|
  0a92c	e3a03000	 mov         r3, #0
  0a930	e58d30f4	 str         r3, [sp, #0xF4]
  0a934		 |$LN230@ThreadRun@3|
  0a934		 |$LN114@ThreadRun@3|

; 3308 :             }
; 3309 : 
; 3310 :             DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Interrupt Variable INTRUSB(0x%x), TX(0x%x), RX(0x%x), DevCtl(0x%x), m_dwStatus(0x%x)\r\n"),
; 3311 :                 m_pOTG->intr_usb, m_pOTG->intr_tx, m_pOTG->intr_rx, INREG8(&m_pOTG->pUsbGenRegs->DevCtl), m_dwStatus));

  0a934	e59f34e8	 ldr         r3, [pc, #0x4E8]
  0a938	e5933440	 ldr         r3, [r3, #0x440]
  0a93c	e3130a02	 tst         r3, #2, 20
  0a940	0a000024	 beq         |$LN231@ThreadRun@3|
  0a944	e59d316c	 ldr         r3, [sp, #0x16C]
  0a948	e24330dc	 sub         r3, r3, #0xDC
  0a94c	e28330f8	 add         r3, r3, #0xF8
  0a950	e5933000	 ldr         r3, [r3]
  0a954	e58d3004	 str         r3, [sp, #4]
  0a958	e59d316c	 ldr         r3, [sp, #0x16C]
  0a95c	e24330dc	 sub         r3, r3, #0xDC
  0a960	e2833e15	 add         r3, r3, #0x15, 28
  0a964	e5933000	 ldr         r3, [r3]
  0a968	e2833020	 add         r3, r3, #0x20
  0a96c	e5933000	 ldr         r3, [r3]
  0a970	e2833060	 add         r3, r3, #0x60
  0a974	e5d33000	 ldrb        r3, [r3]
  0a978	e58d3000	 str         r3, [sp]
  0a97c	e59d316c	 ldr         r3, [sp, #0x16C]
  0a980	e24330dc	 sub         r3, r3, #0xDC
  0a984	e2833e15	 add         r3, r3, #0x15, 28
  0a988	e5933000	 ldr         r3, [r3]
  0a98c	e2833030	 add         r3, r3, #0x30
  0a990	e1d330b0	 ldrh        r3, [r3]
  0a994	e59d216c	 ldr         r2, [sp, #0x16C]
  0a998	e24220dc	 sub         r2, r2, #0xDC
  0a99c	e2822e15	 add         r2, r2, #0x15, 28
  0a9a0	e5922000	 ldr         r2, [r2]
  0a9a4	e2822032	 add         r2, r2, #0x32
  0a9a8	e1d220b0	 ldrh        r2, [r2]
  0a9ac	e59d116c	 ldr         r1, [sp, #0x16C]
  0a9b0	e24110dc	 sub         r1, r1, #0xDC
  0a9b4	e2811e15	 add         r1, r1, #0x15, 28
  0a9b8	e5911000	 ldr         r1, [r1]
  0a9bc	e2811034	 add         r1, r1, #0x34
  0a9c0	e5d11000	 ldrb        r1, [r1]
  0a9c4	e59f0460	 ldr         r0, [pc, #0x460]
  0a9c8	eb000000	 bl          NKDbgPrintfW
  0a9cc	e3a03001	 mov         r3, #1
  0a9d0	e58d30f8	 str         r3, [sp, #0xF8]
  0a9d4	ea000001	 b           |$LN232@ThreadRun@3|
  0a9d8		 |$LN231@ThreadRun@3|
  0a9d8	e3a03000	 mov         r3, #0
  0a9dc	e58d30f8	 str         r3, [sp, #0xF8]
  0a9e0		 |$LN232@ThreadRun@3|

; 3312 : 
; 3313 :             if (m_dwStatus & STATUS_RETENTION_WAKEUP)

  0a9e0	e59d316c	 ldr         r3, [sp, #0x16C]
  0a9e4	e24330dc	 sub         r3, r3, #0xDC
  0a9e8	e28330f8	 add         r3, r3, #0xF8
  0a9ec	e5933000	 ldr         r3, [r3]
  0a9f0	e3130c01	 tst         r3, #1, 24
  0a9f4	0a0000fa	 beq         |$LN112@ThreadRun@3|

; 3314 :             {
; 3315 :                 DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Status Retention with DevCtl Session = 0x%x\r\n"),
; 3316 :                     INREG8(&m_pOTG->pUsbGenRegs->DevCtl)));

  0a9f8	e59f3424	 ldr         r3, [pc, #0x424]
  0a9fc	e5933440	 ldr         r3, [r3, #0x440]
  0aa00	e3130a02	 tst         r3, #2, 20
  0aa04	0a00000d	 beq         |$LN233@ThreadRun@3|
  0aa08	e59d316c	 ldr         r3, [sp, #0x16C]
  0aa0c	e24330dc	 sub         r3, r3, #0xDC
  0aa10	e2833e15	 add         r3, r3, #0x15, 28
  0aa14	e5933000	 ldr         r3, [r3]
  0aa18	e2833020	 add         r3, r3, #0x20
  0aa1c	e5933000	 ldr         r3, [r3]
  0aa20	e2833060	 add         r3, r3, #0x60
  0aa24	e5d33000	 ldrb        r3, [r3]
  0aa28	e1a01003	 mov         r1, r3
  0aa2c	e59f03f4	 ldr         r0, [pc, #0x3F4]
  0aa30	eb000000	 bl          NKDbgPrintfW
  0aa34	e3a03001	 mov         r3, #1
  0aa38	e58d30fc	 str         r3, [sp, #0xFC]
  0aa3c	ea000001	 b           |$LN234@ThreadRun@3|
  0aa40		 |$LN233@ThreadRun@3|
  0aa40	e3a03000	 mov         r3, #0
  0aa44	e58d30fc	 str         r3, [sp, #0xFC]
  0aa48		 |$LN234@ThreadRun@3|

; 3317 : 
; 3318 :                 if(!(ReadULPIReg( m_pOTG, ULPI_VENDORID_LOW_R)))

  0aa48	e3a02000	 mov         r2, #0
  0aa4c	e59d316c	 ldr         r3, [sp, #0x16C]
  0aa50	e24330dc	 sub         r3, r3, #0xDC
  0aa54	e2833e15	 add         r3, r3, #0x15, 28
  0aa58	e5931000	 ldr         r1, [r3]
  0aa5c	e59d316c	 ldr         r3, [sp, #0x16C]
  0aa60	e24300dc	 sub         r0, r3, #0xDC
  0aa64	eb000000	 bl          |?ReadULPIReg@OMAPMHSUSBOTG@@QAAEPAUHSMUSB_T@@E@Z|
  0aa68	e5cd0100	 strb        r0, [sp, #0x100]
  0aa6c	e5dd3100	 ldrb        r3, [sp, #0x100]
  0aa70	e3530000	 cmp         r3, #0
  0aa74	1a000008	 bne         |$LN111@ThreadRun@3|

; 3319 :                 {
; 3320 :                     SoftResetULPILink();

  0aa78	e59d316c	 ldr         r3, [sp, #0x16C]
  0aa7c	e24320dc	 sub         r2, r3, #0xDC
  0aa80	e59d316c	 ldr         r3, [sp, #0x16C]
  0aa84	e24300dc	 sub         r0, r3, #0xDC
  0aa88	e5923000	 ldr         r3, [r2]
  0aa8c	e28330fc	 add         r3, r3, #0xFC
  0aa90	e5933000	 ldr         r3, [r3]
  0aa94	e1a0e00f	 mov         lr, pc
  0aa98	e12fff13	 bx          r3
  0aa9c		 |$LN111@ThreadRun@3|

; 3321 :                 }
; 3322 :                 if (m_pTransceiver->IsADeviceConnected())

  0aa9c	e59d316c	 ldr         r3, [sp, #0x16C]
  0aaa0	e24330dc	 sub         r3, r3, #0xDC
  0aaa4	e28330fc	 add         r3, r3, #0xFC
  0aaa8	e5932000	 ldr         r2, [r3]
  0aaac	e59d316c	 ldr         r3, [sp, #0x16C]
  0aab0	e24330dc	 sub         r3, r3, #0xDC
  0aab4	e28330fc	 add         r3, r3, #0xFC
  0aab8	e5930000	 ldr         r0, [r3]
  0aabc	e5923000	 ldr         r3, [r2]
  0aac0	e2833030	 add         r3, r3, #0x30
  0aac4	e5933000	 ldr         r3, [r3]
  0aac8	e1a0e00f	 mov         lr, pc
  0aacc	e12fff13	 bx          r3
  0aad0	e58d0104	 str         r0, [sp, #0x104]
  0aad4	e59d3104	 ldr         r3, [sp, #0x104]
  0aad8	e3530000	 cmp         r3, #0
  0aadc	0a00005a	 beq         |$LN110@ThreadRun@3|

; 3323 :                 {
; 3324 :                     // Enable to SOFTCONN bit for PC to see the connection
; 3325 :                     CLRREG8(&pGen->Power, POWER_SOFTCONN);

  0aae0	e59d301c	 ldr         r3, [sp, #0x1C]
  0aae4	e2833001	 add         r3, r3, #1
  0aae8	e5d33000	 ldrb        r3, [r3]
  0aaec	e1a02003	 mov         r2, r3
  0aaf0	e3e03040	 mvn         r3, #0x40
  0aaf4	e0023003	 and         r3, r2, r3
  0aaf8	e20320ff	 and         r2, r3, #0xFF
  0aafc	e59d301c	 ldr         r3, [sp, #0x1C]
  0ab00	e2833001	 add         r3, r3, #1
  0ab04	e5c32000	 strb        r2, [r3]
  0ab08		 |$LN109@ThreadRun@3|

; 3326 : 
; 3327 :                     // Wait for 45 sec or until shell is ready which ever happens first
; 3328 :                     do{
; 3329 :                         delta = GetTickCount() - dwStartTime;

  0ab08	eb000000	 bl          GetTickCount
  0ab0c	e58d0108	 str         r0, [sp, #0x108]
  0ab10	e59d2108	 ldr         r2, [sp, #0x108]
  0ab14	e59d3024	 ldr         r3, [sp, #0x24]
  0ab18	e0423003	 sub         r3, r2, r3
  0ab1c	e58d3030	 str         r3, [sp, #0x30]

; 3330 :                         // Check wheather
; 3331 :                         if(bStratupWaitDone || delta >= m_OTGRegCfg.dwActiveSyncDelay )

  0ab20	e59d3014	 ldr         r3, [sp, #0x14]
  0ab24	e3530000	 cmp         r3, #0
  0ab28	1a000006	 bne         |$LN105@ThreadRun@3|
  0ab2c	e59d316c	 ldr         r3, [sp, #0x16C]
  0ab30	e24330dc	 sub         r3, r3, #0xDC
  0ab34	e2833e11	 add         r3, r3, #0x11, 28
  0ab38	e59d2030	 ldr         r2, [sp, #0x30]
  0ab3c	e5933000	 ldr         r3, [r3]
  0ab40	e1520003	 cmp         r2, r3
  0ab44	3a000000	 bcc         |$LN106@ThreadRun@3|
  0ab48		 |$LN105@ThreadRun@3|

; 3332 :                             break;

  0ab48	ea000007	 b           |$LN107@ThreadRun@3|
  0ab4c		 |$LN106@ThreadRun@3|

; 3333 :                         Sleep(1000);

  0ab4c	e3a00ffa	 mov         r0, #0xFA, 30
  0ab50	eb000000	 bl          Sleep

; 3334 :                     }while (IsAPIReady(SH_SHELL) == FALSE);

  0ab54	e3a00055	 mov         r0, #0x55
  0ab58	eb000000	 bl          IsAPIReady
  0ab5c	e58d010c	 str         r0, [sp, #0x10C]
  0ab60	e59d310c	 ldr         r3, [sp, #0x10C]
  0ab64	e3530000	 cmp         r3, #0
  0ab68	0affffe6	 beq         |$LN109@ThreadRun@3|
  0ab6c		 |$LN107@ThreadRun@3|

; 3335 : 
; 3336 : 
; 3337 :                     bStratupWaitDone = TRUE;

  0ab6c	e3a03001	 mov         r3, #1
  0ab70	e58d3014	 str         r3, [sp, #0x14]

; 3338 :                     // Enable to SOFTCONN bit for PC to see the connection
; 3339 :                     if (m_OTGRegCfg.DisableHighSpeed)

  0ab74	e59d316c	 ldr         r3, [sp, #0x16C]
  0ab78	e24330dc	 sub         r3, r3, #0xDC
  0ab7c	e2833c01	 add         r3, r3, #1, 24
  0ab80	e5933000	 ldr         r3, [r3]
  0ab84	e3530000	 cmp         r3, #0
  0ab88	0a000012	 beq         |$LN104@ThreadRun@3|

; 3340 : 					{
; 3341 :                         CLRREG8(&pGen->Power, POWER_HSENABLE);

  0ab8c	e59d301c	 ldr         r3, [sp, #0x1C]
  0ab90	e2833001	 add         r3, r3, #1
  0ab94	e5d33000	 ldrb        r3, [r3]
  0ab98	e1a02003	 mov         r2, r3
  0ab9c	e3e03020	 mvn         r3, #0x20
  0aba0	e0023003	 and         r3, r2, r3
  0aba4	e20320ff	 and         r2, r3, #0xFF
  0aba8	e59d301c	 ldr         r3, [sp, #0x1C]
  0abac	e2833001	 add         r3, r3, #1
  0abb0	e5c32000	 strb        r2, [r3]

; 3342 :                         SETREG8(&pGen->Power, POWER_SOFTCONN);

  0abb4	e59d301c	 ldr         r3, [sp, #0x1C]
  0abb8	e2833001	 add         r3, r3, #1
  0abbc	e5d33000	 ldrb        r3, [r3]
  0abc0	e3833040	 orr         r3, r3, #0x40
  0abc4	e20320ff	 and         r2, r3, #0xFF
  0abc8	e59d301c	 ldr         r3, [sp, #0x1C]
  0abcc	e2833001	 add         r3, r3, #1
  0abd0	e5c32000	 strb        r2, [r3]

; 3343 : 					}
; 3344 :                     else

  0abd4	ea000007	 b           |$LN103@ThreadRun@3|
  0abd8		 |$LN104@ThreadRun@3|

; 3345 :                         SETREG8(&pGen->Power, POWER_SOFTCONN|POWER_HSENABLE);

  0abd8	e59d301c	 ldr         r3, [sp, #0x1C]
  0abdc	e2833001	 add         r3, r3, #1
  0abe0	e5d33000	 ldrb        r3, [r3]
  0abe4	e3833060	 orr         r3, r3, #0x60
  0abe8	e20320ff	 and         r2, r3, #0xFF
  0abec	e59d301c	 ldr         r3, [sp, #0x1C]
  0abf0	e2833001	 add         r3, r3, #1
  0abf4	e5c32000	 strb        r2, [r3]
  0abf8		 |$LN103@ThreadRun@3|

; 3346 : 
; 3347 :                     // This is to put MUSB Controller functional if it is in host mode
; 3348 :                     CLRREG8(&pGen->Power, POWER_EN_SUSPENDM);

  0abf8	e59d301c	 ldr         r3, [sp, #0x1C]
  0abfc	e2833001	 add         r3, r3, #1
  0ac00	e5d33000	 ldrb        r3, [r3]
  0ac04	e1a02003	 mov         r2, r3
  0ac08	e3e03001	 mvn         r3, #1
  0ac0c	e0023003	 and         r3, r2, r3
  0ac10	e20320ff	 and         r2, r3, #0xFF
  0ac14	e59d301c	 ldr         r3, [sp, #0x1C]
  0ac18	e2833001	 add         r3, r3, #1
  0ac1c	e5c32000	 strb        r2, [r3]

; 3349 :                     CLRREG8(&pGen->Power, POWER_SUSPENDM);

  0ac20	e59d301c	 ldr         r3, [sp, #0x1C]
  0ac24	e2833001	 add         r3, r3, #1
  0ac28	e5d33000	 ldrb        r3, [r3]
  0ac2c	e1a02003	 mov         r2, r3
  0ac30	e3e03002	 mvn         r3, #2
  0ac34	e0023003	 and         r3, r2, r3
  0ac38	e20320ff	 and         r2, r3, #0xFF
  0ac3c	e59d301c	 ldr         r3, [sp, #0x1C]
  0ac40	e2833001	 add         r3, r3, #1
  0ac44	e5c32000	 strb        r2, [r3]

; 3350 :                 }
; 3351 :                 else

  0ac48	ea000049	 b           |$LN102@ThreadRun@3|
  0ac4c		 |$LN110@ThreadRun@3|

; 3352 :                 {
; 3353 :                     // Enable to SOFTCONN bit for PC to see the connection
; 3354 :                     if (m_OTGRegCfg.DisableHighSpeed)

  0ac4c	e59d316c	 ldr         r3, [sp, #0x16C]
  0ac50	e24330dc	 sub         r3, r3, #0xDC
  0ac54	e2833c01	 add         r3, r3, #1, 24
  0ac58	e5933000	 ldr         r3, [r3]
  0ac5c	e3530000	 cmp         r3, #0
  0ac60	0a000012	 beq         |$LN101@ThreadRun@3|

; 3355 : 					{
; 3356 :                         CLRREG8(&pGen->Power, POWER_HSENABLE);

  0ac64	e59d301c	 ldr         r3, [sp, #0x1C]
  0ac68	e2833001	 add         r3, r3, #1
  0ac6c	e5d33000	 ldrb        r3, [r3]
  0ac70	e1a02003	 mov         r2, r3
  0ac74	e3e03020	 mvn         r3, #0x20
  0ac78	e0023003	 and         r3, r2, r3
  0ac7c	e20320ff	 and         r2, r3, #0xFF
  0ac80	e59d301c	 ldr         r3, [sp, #0x1C]
  0ac84	e2833001	 add         r3, r3, #1
  0ac88	e5c32000	 strb        r2, [r3]

; 3357 :                         SETREG8(&pGen->Power, POWER_SOFTCONN);

  0ac8c	e59d301c	 ldr         r3, [sp, #0x1C]
  0ac90	e2833001	 add         r3, r3, #1
  0ac94	e5d33000	 ldrb        r3, [r3]
  0ac98	e3833040	 orr         r3, r3, #0x40
  0ac9c	e20320ff	 and         r2, r3, #0xFF
  0aca0	e59d301c	 ldr         r3, [sp, #0x1C]
  0aca4	e2833001	 add         r3, r3, #1
  0aca8	e5c32000	 strb        r2, [r3]

; 3358 : 					}
; 3359 :                     else

  0acac	ea000007	 b           |$LN100@ThreadRun@3|
  0acb0		 |$LN101@ThreadRun@3|

; 3360 :                         SETREG8(&pGen->Power, POWER_SOFTCONN|POWER_HSENABLE);

  0acb0	e59d301c	 ldr         r3, [sp, #0x1C]
  0acb4	e2833001	 add         r3, r3, #1
  0acb8	e5d33000	 ldrb        r3, [r3]
  0acbc	e3833060	 orr         r3, r3, #0x60
  0acc0	e20320ff	 and         r2, r3, #0xFF
  0acc4	e59d301c	 ldr         r3, [sp, #0x1C]
  0acc8	e2833001	 add         r3, r3, #1
  0accc	e5c32000	 strb        r2, [r3]
  0acd0		 |$LN100@ThreadRun@3|

; 3361 : 
; 3362 :                     // This is to put MUSB Controller functional if it is in host mode
; 3363 :                     CLRREG8(&pGen->Power, POWER_EN_SUSPENDM);

  0acd0	e59d301c	 ldr         r3, [sp, #0x1C]
  0acd4	e2833001	 add         r3, r3, #1
  0acd8	e5d33000	 ldrb        r3, [r3]
  0acdc	e1a02003	 mov         r2, r3
  0ace0	e3e03001	 mvn         r3, #1
  0ace4	e0023003	 and         r3, r2, r3
  0ace8	e20320ff	 and         r2, r3, #0xFF
  0acec	e59d301c	 ldr         r3, [sp, #0x1C]
  0acf0	e2833001	 add         r3, r3, #1
  0acf4	e5c32000	 strb        r2, [r3]

; 3364 :                     CLRREG8(&pGen->Power, POWER_SUSPENDM);

  0acf8	e59d301c	 ldr         r3, [sp, #0x1C]
  0acfc	e2833001	 add         r3, r3, #1
  0ad00	e5d33000	 ldrb        r3, [r3]
  0ad04	e1a02003	 mov         r2, r3
  0ad08	e3e03002	 mvn         r3, #2
  0ad0c	e0023003	 and         r3, r2, r3
  0ad10	e20320ff	 and         r2, r3, #0xFF
  0ad14	e59d301c	 ldr         r3, [sp, #0x1C]
  0ad18	e2833001	 add         r3, r3, #1
  0ad1c	e5c32000	 strb        r2, [r3]

; 3365 : 
; 3366 :                     if ((INREG8(&m_pOTG->pUsbGenRegs->DevCtl) & DEVCTL_SESSION) == 0)

  0ad20	e59d316c	 ldr         r3, [sp, #0x16C]
  0ad24	e24330dc	 sub         r3, r3, #0xDC
  0ad28	e2833e15	 add         r3, r3, #0x15, 28
  0ad2c	e5933000	 ldr         r3, [r3]
  0ad30	e2833020	 add         r3, r3, #0x20
  0ad34	e5933000	 ldr         r3, [r3]
  0ad38	e2833060	 add         r3, r3, #0x60
  0ad3c	e5d33000	 ldrb        r3, [r3]
  0ad40	e3130001	 tst         r3, #1
  0ad44	1a00000a	 bne         |$LN99@ThreadRun@3|

; 3367 :                     {
; 3368 :                         SessionRequest(TRUE, TRUE);

  0ad48	e3a02001	 mov         r2, #1
  0ad4c	e3a01001	 mov         r1, #1
  0ad50	e59d316c	 ldr         r3, [sp, #0x16C]
  0ad54	e243e0dc	 sub         lr, r3, #0xDC
  0ad58	e59d316c	 ldr         r3, [sp, #0x16C]
  0ad5c	e24300dc	 sub         r0, r3, #0xDC
  0ad60	e59e3000	 ldr         r3, [lr]
  0ad64	e2833084	 add         r3, r3, #0x84
  0ad68	e5933000	 ldr         r3, [r3]
  0ad6c	e1a0e00f	 mov         lr, pc
  0ad70	e12fff13	 bx          r3
  0ad74		 |$LN99@ThreadRun@3|
  0ad74		 |$LN102@ThreadRun@3|

; 3369 :                     }
; 3370 :                 }
; 3371 : 
; 3372 :                 m_pOTG->dwPwrMgmt = MODE_SYSTEM_RESUME;

  0ad74	e59d316c	 ldr         r3, [sp, #0x16C]
  0ad78	e24330dc	 sub         r3, r3, #0xDC
  0ad7c	e2833e15	 add         r3, r3, #0x15, 28
  0ad80	e5933000	 ldr         r3, [r3]
  0ad84	e2832064	 add         r2, r3, #0x64
  0ad88	e3a03002	 mov         r3, #2
  0ad8c	e5823000	 str         r3, [r2]

; 3373 : 
; 3374 :                 m_bSuspendTransceiver = FALSE;

  0ad90	e59d316c	 ldr         r3, [sp, #0x16C]
  0ad94	e24330dc	 sub         r3, r3, #0xDC
  0ad98	e2832e19	 add         r2, r3, #0x19, 28
  0ad9c	e3a03000	 mov         r3, #0
  0ada0	e5823000	 str         r3, [r2]

; 3375 :                 m_dwStatus &= ~STATUS_RETENTION_WAKEUP;

  0ada4	e59d316c	 ldr         r3, [sp, #0x16C]
  0ada8	e24330dc	 sub         r3, r3, #0xDC
  0adac	e28330f8	 add         r3, r3, #0xF8
  0adb0	e5932000	 ldr         r2, [r3]
  0adb4	e3e03c01	 mvn         r3, #1, 24
  0adb8	e0022003	 and         r2, r2, r3
  0adbc	e59d316c	 ldr         r3, [sp, #0x16C]
  0adc0	e24330dc	 sub         r3, r3, #0xDC
  0adc4	e28330f8	 add         r3, r3, #0xF8
  0adc8	e5832000	 str         r2, [r3]

; 3376 :                 m_timeout = DO_SESSCHK_TIMEOUT;

  0adcc	e59d316c	 ldr         r3, [sp, #0x16C]
  0add0	e24330dc	 sub         r3, r3, #0xDC
  0add4	e2832e17	 add         r2, r3, #0x17, 28
  0add8	e3a03c13	 mov         r3, #0x13, 24
  0addc	e3833088	 orr         r3, r3, #0x88
  0ade0	e5823000	 str         r3, [r2]
  0ade4		 |$LN112@ThreadRun@3|

; 3377 :             }
; 3378 : 
; 3379 :             if (m_dwStatus & STATUS_HNP_SESSION_PROCESS)

  0ade4	e59d316c	 ldr         r3, [sp, #0x16C]
  0ade8	e24330dc	 sub         r3, r3, #0xDC
  0adec	e28330f8	 add         r3, r3, #0xF8
  0adf0	e5933000	 ldr         r3, [r3]
  0adf4	e3130020	 tst         r3, #0x20
  0adf8	0a000046	 beq         |$LN98@ThreadRun@3|

; 3380 :             {
; 3381 :                 DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("We can process role switch loading now\r\n")));

  0adfc	e59f3020	 ldr         r3, [pc, #0x20]
  0ae00	e5933440	 ldr         r3, [r3, #0x440]
  0ae04	e3130a02	 tst         r3, #2, 20
  0ae08	0a00000f	 beq         |$LN235@ThreadRun@3|
  0ae0c	e59f000c	 ldr         r0, [pc, #0xC]
  0ae10	eb000000	 bl          NKDbgPrintfW
  0ae14	e3a03001	 mov         r3, #1
  0ae18	e58d3110	 str         r3, [sp, #0x110]
  0ae1c	ea00000c	 b           |$LN236@ThreadRun@3|
  0ae20		 |$LN313@ThreadRun@3|
  0ae20		 |$LN314@ThreadRun@3|
  0ae20	00000000	 DCD         |??_C@_1FC@HNLLBEOD@?$AAW?$AAe?$AA?5?$AAc?$AAa?$AAn?$AA?5?$AAp?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAr?$AAo?$AAl?$AAe?$AA?5?$AAs?$AAw?$AAi?$AAt?$AAc?$AAh?$AA?5?$AAl?$AAo?$AAa?$AAd?$AAi@|
  0ae24		 |$LN315@ThreadRun@3|
  0ae24	00000000	 DCD         |dpCurSettings|
  0ae28		 |$LN316@ThreadRun@3|
  0ae28	00000000	 DCD         |??_C@_1FM@CEBDPKGH@?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAR?$AAe?$AAt?$AAe?$AAn?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAD?$AAe?$AAv?$AAC?$AAt?$AAl?$AA?5?$AAS?$AAe?$AAs@|
  0ae2c		 |$LN317@ThreadRun@3|
  0ae2c	00000000	 DCD         |??_C@_1KO@NJLAEFJF@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAV?$AAa?$AAr?$AAi?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAI?$AAN?$AAT?$AAR?$AAU?$AAS?$AAB?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ@|
  0ae30		 |$LN318@ThreadRun@3|
  0ae30	00000000	 DCD         |??_C@_1GA@HPHKMJJN@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAV?$AAa?$AAr?$AAi?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAI?$AAN?$AAT?$AAR?$AAU?$AAS?$AAB?$AA?5?$AAN?$AAo?$AA?5?$AAi?$AAn@|
  0ae34		 |$LN319@ThreadRun@3|
  0ae34	00000000	 DCD         |??_C@_1FO@LCDIMNKM@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAV?$AAa?$AAr?$AAi?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAI?$AAN?$AAT?$AAR?$AAU?$AAS?$AAB?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ@|
  0ae38		 |$LN320@ThreadRun@3|
  0ae38	00000000	 DCD         |??_C@_1CK@FHMCBMIA@?$AAN?$AAO?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAC?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?6?$AA?$AA@|
  0ae3c		 |$LN321@ThreadRun@3|
  0ae3c	00000000	 DCD         |??_C@_1FM@FCJJDMMJ@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAH?$AAo?$AAs?$AAt?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAs?$AAe@|
  0ae40		 |$LN322@ThreadRun@3|
  0ae40	00000000	 DCD         |??_C@_1CM@EAGDHFMC@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAo?$AAn?$AA?5?$AAH?$AAo?$AAs?$AAt?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  0ae44		 |$LN323@ThreadRun@3|
  0ae44	00000000	 DCD         |??_C@_1GE@CBPALHGG@?$AAO?$AAT?$AAG?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAs?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?5?$AAi?$AAn?$AAt?$AAr?$AA_?$AAt?$AAx?$AA?$CI?$AA0?$AAx?$AA?$CF@|
  0ae48		 |$LN324@ThreadRun@3|
  0ae48	00000000	 DCD         |??_C@_1HI@BAJMDGPM@?$AA?$CL?$AA?$CI?$AAm?$AA_?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CG?$AA?5?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAW?$AAA?$AAI?$AAT?$AA_?$AAH?$AAO?$AAS?$AAT?$AA_@|
  0ae4c		 |$LN235@ThreadRun@3|
  0ae4c	e3a03000	 mov         r3, #0
  0ae50	e58d3110	 str         r3, [sp, #0x110]
  0ae54		 |$LN236@ThreadRun@3|

; 3382 :                 if ((INREG8(&m_pOTG->pUsbGenRegs->DevCtl) & DEVCTL_HOSTMODE) == 0x00)

  0ae54	e59d316c	 ldr         r3, [sp, #0x16C]
  0ae58	e24330dc	 sub         r3, r3, #0xDC
  0ae5c	e2833e15	 add         r3, r3, #0x15, 28
  0ae60	e5933000	 ldr         r3, [r3]
  0ae64	e2833020	 add         r3, r3, #0x20
  0ae68	e5933000	 ldr         r3, [r3]
  0ae6c	e2833060	 add         r3, r3, #0x60
  0ae70	e5d33000	 ldrb        r3, [r3]
  0ae74	e3130004	 tst         r3, #4
  0ae78	1a00000e	 bne         |$LN97@ThreadRun@3|

; 3383 :                     m_pOTG->intr_usb |= INTRUSB_RESET;

  0ae7c	e59d316c	 ldr         r3, [sp, #0x16C]
  0ae80	e24330dc	 sub         r3, r3, #0xDC
  0ae84	e2833e15	 add         r3, r3, #0x15, 28
  0ae88	e5933000	 ldr         r3, [r3]
  0ae8c	e2833034	 add         r3, r3, #0x34
  0ae90	e5d33000	 ldrb        r3, [r3]
  0ae94	e3831004	 orr         r1, r3, #4
  0ae98	e59d316c	 ldr         r3, [sp, #0x16C]
  0ae9c	e24330dc	 sub         r3, r3, #0xDC
  0aea0	e2833e15	 add         r3, r3, #0x15, 28
  0aea4	e5933000	 ldr         r3, [r3]
  0aea8	e2832034	 add         r2, r3, #0x34
  0aeac	e20130ff	 and         r3, r1, #0xFF
  0aeb0	e5c23000	 strb        r3, [r2]

; 3384 :                 else

  0aeb4	ea00000d	 b           |$LN96@ThreadRun@3|
  0aeb8		 |$LN97@ThreadRun@3|

; 3385 :                     m_pOTG->intr_usb |= INTRUSB_CONN;

  0aeb8	e59d316c	 ldr         r3, [sp, #0x16C]
  0aebc	e24330dc	 sub         r3, r3, #0xDC
  0aec0	e2833e15	 add         r3, r3, #0x15, 28
  0aec4	e5933000	 ldr         r3, [r3]
  0aec8	e2833034	 add         r3, r3, #0x34
  0aecc	e5d33000	 ldrb        r3, [r3]
  0aed0	e3831010	 orr         r1, r3, #0x10
  0aed4	e59d316c	 ldr         r3, [sp, #0x16C]
  0aed8	e24330dc	 sub         r3, r3, #0xDC
  0aedc	e2833e15	 add         r3, r3, #0x15, 28
  0aee0	e5933000	 ldr         r3, [r3]
  0aee4	e2832034	 add         r2, r3, #0x34
  0aee8	e20130ff	 and         r3, r1, #0xFF
  0aeec	e5c23000	 strb        r3, [r2]
  0aef0		 |$LN96@ThreadRun@3|

; 3386 :                 m_dwStatus &= ~STATUS_HNP_SESSION_PROCESS;

  0aef0	e59d316c	 ldr         r3, [sp, #0x16C]
  0aef4	e24330dc	 sub         r3, r3, #0xDC
  0aef8	e28330f8	 add         r3, r3, #0xF8
  0aefc	e5932000	 ldr         r2, [r3]
  0af00	e3e03020	 mvn         r3, #0x20
  0af04	e0022003	 and         r2, r2, r3
  0af08	e59d316c	 ldr         r3, [sp, #0x16C]
  0af0c	e24330dc	 sub         r3, r3, #0xDC
  0af10	e28330f8	 add         r3, r3, #0xF8
  0af14	e5832000	 str         r2, [r3]
  0af18		 |$LN98@ThreadRun@3|

; 3387 :             }
; 3388 : 
; 3389 :             // Implement according to USB Interrupt Service Routine
; 3390 :             // USBOTGHS Functional Spec Rev 0.1 Figure 8.1 (89/174)
; 3391 : 
; 3392 :             if (m_pOTG->intr_usb)

  0af18	e59d316c	 ldr         r3, [sp, #0x16C]
  0af1c	e24330dc	 sub         r3, r3, #0xDC
  0af20	e2833e15	 add         r3, r3, #0x15, 28
  0af24	e5933000	 ldr         r3, [r3]
  0af28	e2833034	 add         r3, r3, #0x34
  0af2c	e5d33000	 ldrb        r3, [r3]
  0af30	e3530000	 cmp         r3, #0
  0af34	0a000008	 beq         |$LN95@ThreadRun@3|

; 3393 :             {
; 3394 :                 OTG_ConfigISR_stage1();

  0af38	e59d316c	 ldr         r3, [sp, #0x16C]
  0af3c	e24320dc	 sub         r2, r3, #0xDC
  0af40	e59d316c	 ldr         r3, [sp, #0x16C]
  0af44	e24300dc	 sub         r0, r3, #0xDC
  0af48	e5923000	 ldr         r3, [r2]
  0af4c	e28330cc	 add         r3, r3, #0xCC
  0af50	e5933000	 ldr         r3, [r3]
  0af54	e1a0e00f	 mov         lr, pc
  0af58	e12fff13	 bx          r3
  0af5c		 |$LN95@ThreadRun@3|

; 3395 :             }
; 3396 : 
; 3397 :             if ((m_dwStatus & STATUS_HNP_SESSION_MASK) == 0x00)

  0af5c	e59d316c	 ldr         r3, [sp, #0x16C]
  0af60	e24330dc	 sub         r3, r3, #0xDC
  0af64	e28330f8	 add         r3, r3, #0xF8
  0af68	e5933000	 ldr         r3, [r3]
  0af6c	e3130030	 tst         r3, #0x30
  0af70	1a000058	 bne         |$LN94@ThreadRun@3|

; 3398 :             {
; 3399 :                 // Here is the handling of Tx/Rx
; 3400 :                 // First handling of Endpoint 0 interrupt first.
; 3401 :                 if (m_pOTG->intr_tx & INTR_EP(0))

  0af74	e59d316c	 ldr         r3, [sp, #0x16C]
  0af78	e24330dc	 sub         r3, r3, #0xDC
  0af7c	e2833e15	 add         r3, r3, #0x15, 28
  0af80	e5933000	 ldr         r3, [r3]
  0af84	e2833032	 add         r3, r3, #0x32
  0af88	e1d330b0	 ldrh        r3, [r3]
  0af8c	e3130001	 tst         r3, #1
  0af90	0a000008	 beq         |$LN93@ThreadRun@3|

; 3402 :                 {
; 3403 :                     OTG_ProcessEP0();

  0af94	e59d316c	 ldr         r3, [sp, #0x16C]
  0af98	e24320dc	 sub         r2, r3, #0xDC
  0af9c	e59d316c	 ldr         r3, [sp, #0x16C]
  0afa0	e24300dc	 sub         r0, r3, #0xDC
  0afa4	e5923000	 ldr         r3, [r2]
  0afa8	e28330d8	 add         r3, r3, #0xD8
  0afac	e5933000	 ldr         r3, [r3]
  0afb0	e1a0e00f	 mov         lr, pc
  0afb4	e12fff13	 bx          r3
  0afb8		 |$LN93@ThreadRun@3|

; 3404 :                 }
; 3405 : 
; 3406 :                 // It may be a bit odd of why not doing all the things in same loop
; 3407 :                 // but this is according to the functional spec. Reference: Inventra MUSBMHDRC
; 3408 :                 // Programmer's Guide pg 46
; 3409 :                 // Second now handling of Rx 1-15
; 3410 :                 i = 1;

  0afb8	e3a03001	 mov         r3, #1
  0afbc	e58d3018	 str         r3, [sp, #0x18]
  0afc0		 |$LN92@ThreadRun@3|

; 3411 :                 while (i <= 15)

  0afc0	e59d3018	 ldr         r3, [sp, #0x18]
  0afc4	e353000f	 cmp         r3, #0xF
  0afc8	ca00001b	 bgt         |$LN91@ThreadRun@3|

; 3412 :                 {
; 3413 :                     if (m_pOTG->intr_rx & INTR_EP(i))

  0afcc	e59d316c	 ldr         r3, [sp, #0x16C]
  0afd0	e24330dc	 sub         r3, r3, #0xDC
  0afd4	e2833e15	 add         r3, r3, #0x15, 28
  0afd8	e5933000	 ldr         r3, [r3]
  0afdc	e2833030	 add         r3, r3, #0x30
  0afe0	e1d330b0	 ldrh        r3, [r3]
  0afe4	e1a01003	 mov         r1, r3
  0afe8	e59d2018	 ldr         r2, [sp, #0x18]
  0afec	e3a03001	 mov         r3, #1
  0aff0	e1a03213	 mov         r3, r3, lsl r2
  0aff4	e1110003	 tst         r1, r3
  0aff8	0a00000b	 beq         |$LN90@ThreadRun@3|

; 3414 :                         OTG_ProcessEPx((UCHAR)i, TRUE);

  0affc	e3a02001	 mov         r2, #1
  0b000	e59d3018	 ldr         r3, [sp, #0x18]
  0b004	e20310ff	 and         r1, r3, #0xFF
  0b008	e59d316c	 ldr         r3, [sp, #0x16C]
  0b00c	e243e0dc	 sub         lr, r3, #0xDC
  0b010	e59d316c	 ldr         r3, [sp, #0x16C]
  0b014	e24300dc	 sub         r0, r3, #0xDC
  0b018	e59e3000	 ldr         r3, [lr]
  0b01c	e28330dc	 add         r3, r3, #0xDC
  0b020	e5933000	 ldr         r3, [r3]
  0b024	e1a0e00f	 mov         lr, pc
  0b028	e12fff13	 bx          r3
  0b02c		 |$LN90@ThreadRun@3|

; 3415 :                     i++;

  0b02c	e59d3018	 ldr         r3, [sp, #0x18]
  0b030	e2833001	 add         r3, r3, #1
  0b034	e58d3018	 str         r3, [sp, #0x18]

; 3416 :                 }

  0b038	eaffffe0	 b           |$LN92@ThreadRun@3|
  0b03c		 |$LN91@ThreadRun@3|

; 3417 : 
; 3418 :                 // Third now handling of Tx 1-15
; 3419 :                 i = 1;

  0b03c	e3a03001	 mov         r3, #1
  0b040	e58d3018	 str         r3, [sp, #0x18]

; 3420 :                 if (!(m_dwStatus & (STATUS_DISCONN_COMPLETE|STATUS_DISCONN_REQUEST)))

  0b044	e59d316c	 ldr         r3, [sp, #0x16C]
  0b048	e24330dc	 sub         r3, r3, #0xDC
  0b04c	e28330f8	 add         r3, r3, #0xF8
  0b050	e5933000	 ldr         r3, [r3]
  0b054	e313000a	 tst         r3, #0xA
  0b058	1a00001e	 bne         |$LN89@ThreadRun@3|
  0b05c		 |$LN88@ThreadRun@3|

; 3421 :                 {
; 3422 :                     while (i <= 15)

  0b05c	e59d3018	 ldr         r3, [sp, #0x18]
  0b060	e353000f	 cmp         r3, #0xF
  0b064	ca00001b	 bgt         |$LN87@ThreadRun@3|

; 3423 :                     {
; 3424 :                         if (m_pOTG->intr_tx & INTR_EP(i))

  0b068	e59d316c	 ldr         r3, [sp, #0x16C]
  0b06c	e24330dc	 sub         r3, r3, #0xDC
  0b070	e2833e15	 add         r3, r3, #0x15, 28
  0b074	e5933000	 ldr         r3, [r3]
  0b078	e2833032	 add         r3, r3, #0x32
  0b07c	e1d330b0	 ldrh        r3, [r3]
  0b080	e1a01003	 mov         r1, r3
  0b084	e59d2018	 ldr         r2, [sp, #0x18]
  0b088	e3a03001	 mov         r3, #1
  0b08c	e1a03213	 mov         r3, r3, lsl r2
  0b090	e1110003	 tst         r1, r3
  0b094	0a00000b	 beq         |$LN86@ThreadRun@3|

; 3425 :                             OTG_ProcessEPx((UCHAR)i, FALSE);

  0b098	e3a02000	 mov         r2, #0
  0b09c	e59d3018	 ldr         r3, [sp, #0x18]
  0b0a0	e20310ff	 and         r1, r3, #0xFF
  0b0a4	e59d316c	 ldr         r3, [sp, #0x16C]
  0b0a8	e243e0dc	 sub         lr, r3, #0xDC
  0b0ac	e59d316c	 ldr         r3, [sp, #0x16C]
  0b0b0	e24300dc	 sub         r0, r3, #0xDC
  0b0b4	e59e3000	 ldr         r3, [lr]
  0b0b8	e28330dc	 add         r3, r3, #0xDC
  0b0bc	e5933000	 ldr         r3, [r3]
  0b0c0	e1a0e00f	 mov         lr, pc
  0b0c4	e12fff13	 bx          r3
  0b0c8		 |$LN86@ThreadRun@3|

; 3426 :                         i++;

  0b0c8	e59d3018	 ldr         r3, [sp, #0x18]
  0b0cc	e2833001	 add         r3, r3, #1
  0b0d0	e58d3018	 str         r3, [sp, #0x18]

; 3427 :                     }

  0b0d4	eaffffe0	 b           |$LN88@ThreadRun@3|
  0b0d8		 |$LN87@ThreadRun@3|
  0b0d8		 |$LN89@ThreadRun@3|
  0b0d8		 |$LN94@ThreadRun@3|

; 3428 :                 }
; 3429 :             }
; 3430 : 
; 3431 :             if (m_pOTG->intr_usb)

  0b0d8	e59d316c	 ldr         r3, [sp, #0x16C]
  0b0dc	e24330dc	 sub         r3, r3, #0xDC
  0b0e0	e2833e15	 add         r3, r3, #0x15, 28
  0b0e4	e5933000	 ldr         r3, [r3]
  0b0e8	e2833034	 add         r3, r3, #0x34
  0b0ec	e5d33000	 ldrb        r3, [r3]
  0b0f0	e3530000	 cmp         r3, #0
  0b0f4	0a000008	 beq         |$LN85@ThreadRun@3|

; 3432 :             {
; 3433 :                 OTG_ConfigISR_stage2();

  0b0f8	e59d316c	 ldr         r3, [sp, #0x16C]
  0b0fc	e24320dc	 sub         r2, r3, #0xDC
  0b100	e59d316c	 ldr         r3, [sp, #0x16C]
  0b104	e24300dc	 sub         r0, r3, #0xDC
  0b108	e5923000	 ldr         r3, [r2]
  0b10c	e28330d0	 add         r3, r3, #0xD0
  0b110	e5933000	 ldr         r3, [r3]
  0b114	e1a0e00f	 mov         lr, pc
  0b118	e12fff13	 bx          r3
  0b11c		 |$LN85@ThreadRun@3|

; 3434 :             }
; 3435 : 
; 3436 :             if(m_handleVBUSError)

  0b11c	e59d316c	 ldr         r3, [sp, #0x16C]
  0b120	e24330dc	 sub         r3, r3, #0xDC
  0b124	e2833f65	 add         r3, r3, #0x65, 30
  0b128	e5933000	 ldr         r3, [r3]
  0b12c	e3530000	 cmp         r3, #0
  0b130	0a000017	 beq         |$LN84@ThreadRun@3|

; 3437 :             {
; 3438 :                 SessionRequest(TRUE, TRUE);

  0b134	e3a02001	 mov         r2, #1
  0b138	e3a01001	 mov         r1, #1
  0b13c	e59d316c	 ldr         r3, [sp, #0x16C]
  0b140	e243e0dc	 sub         lr, r3, #0xDC
  0b144	e59d316c	 ldr         r3, [sp, #0x16C]
  0b148	e24300dc	 sub         r0, r3, #0xDC
  0b14c	e59e3000	 ldr         r3, [lr]
  0b150	e2833084	 add         r3, r3, #0x84
  0b154	e5933000	 ldr         r3, [r3]
  0b158	e1a0e00f	 mov         lr, pc
  0b15c	e12fff13	 bx          r3

; 3439 : 			    m_timeout = m_OTGRegCfg.startupTimeout;

  0b160	e59d316c	 ldr         r3, [sp, #0x16C]
  0b164	e24330dc	 sub         r3, r3, #0xDC
  0b168	e2831f41	 add         r1, r3, #0x41, 30
  0b16c	e59d316c	 ldr         r3, [sp, #0x16C]
  0b170	e24330dc	 sub         r3, r3, #0xDC
  0b174	e2832e17	 add         r2, r3, #0x17, 28
  0b178	e5913000	 ldr         r3, [r1]
  0b17c	e5823000	 str         r3, [r2]

; 3440 :                 m_handleVBUSError = FALSE;

  0b180	e59d316c	 ldr         r3, [sp, #0x16C]
  0b184	e24330dc	 sub         r3, r3, #0xDC
  0b188	e2832f65	 add         r2, r3, #0x65, 30
  0b18c	e3a03000	 mov         r3, #0
  0b190	e5823000	 str         r3, [r2]
  0b194		 |$LN84@ThreadRun@3|

; 3441 :             }
; 3442 : 
; 3443 :             // We can clear the intr_usb, intr_tx & intr_rx
; 3444 :             if ((m_dwStatus & STATUS_HNP_SESSION_MASK) == 0x00)

  0b194	e59d316c	 ldr         r3, [sp, #0x16C]
  0b198	e24330dc	 sub         r3, r3, #0xDC
  0b19c	e28330f8	 add         r3, r3, #0xF8
  0b1a0	e5933000	 ldr         r3, [r3]
  0b1a4	e3130030	 tst         r3, #0x30
  0b1a8	1a00000d	 bne         |$LN83@ThreadRun@3|

; 3445 :             {
; 3446 :                 m_pOTG->intr_rx = 0;

  0b1ac	e59d316c	 ldr         r3, [sp, #0x16C]
  0b1b0	e24330dc	 sub         r3, r3, #0xDC
  0b1b4	e2833e15	 add         r3, r3, #0x15, 28
  0b1b8	e5933000	 ldr         r3, [r3]
  0b1bc	e2832030	 add         r2, r3, #0x30
  0b1c0	e3a03000	 mov         r3, #0
  0b1c4	e1c230b0	 strh        r3, [r2]

; 3447 :                 m_pOTG->intr_tx = 0;

  0b1c8	e59d316c	 ldr         r3, [sp, #0x16C]
  0b1cc	e24330dc	 sub         r3, r3, #0xDC
  0b1d0	e2833e15	 add         r3, r3, #0x15, 28
  0b1d4	e5933000	 ldr         r3, [r3]
  0b1d8	e2832032	 add         r2, r3, #0x32
  0b1dc	e3a03000	 mov         r3, #0
  0b1e0	e1c230b0	 strh        r3, [r2]
  0b1e4		 |$LN83@ThreadRun@3|

; 3448 :             }
; 3449 :             m_pOTG->intr_usb = 0;

  0b1e4	e59d316c	 ldr         r3, [sp, #0x16C]
  0b1e8	e24330dc	 sub         r3, r3, #0xDC
  0b1ec	e2833e15	 add         r3, r3, #0x15, 28
  0b1f0	e5933000	 ldr         r3, [r3]
  0b1f4	e2832034	 add         r2, r3, #0x34
  0b1f8	e3a03000	 mov         r3, #0
  0b1fc	e5c23000	 strb        r3, [r2]

; 3450 : 
; 3451 :             if (m_dwStatus & STATUS_CONNECT)

  0b200	e59d316c	 ldr         r3, [sp, #0x16C]
  0b204	e24330dc	 sub         r3, r3, #0xDC
  0b208	e28330f8	 add         r3, r3, #0xF8
  0b20c	e5933000	 ldr         r3, [r3]
  0b210	e3130001	 tst         r3, #1
  0b214	0a00001c	 beq         |$LN82@ThreadRun@3|

; 3452 :             {
; 3453 :                 m_dwStatus &= ~STATUS_CONNECT;

  0b218	e59d316c	 ldr         r3, [sp, #0x16C]
  0b21c	e24330dc	 sub         r3, r3, #0xDC
  0b220	e28330f8	 add         r3, r3, #0xF8
  0b224	e5932000	 ldr         r2, [r3]
  0b228	e3e03001	 mvn         r3, #1
  0b22c	e0022003	 and         r2, r2, r3
  0b230	e59d316c	 ldr         r3, [sp, #0x16C]
  0b234	e24330dc	 sub         r3, r3, #0xDC
  0b238	e28330f8	 add         r3, r3, #0xF8
  0b23c	e5832000	 str         r2, [r3]

; 3454 :                 if (m_pOTG->operateMode == HOST_MODE)

  0b240	e59d316c	 ldr         r3, [sp, #0x16C]
  0b244	e24330dc	 sub         r3, r3, #0xDC
  0b248	e2833e15	 add         r3, r3, #0x15, 28
  0b24c	e5933000	 ldr         r3, [r3]
  0b250	e2833035	 add         r3, r3, #0x35
  0b254	e5d33000	 ldrb        r3, [r3]
  0b258	e3530002	 cmp         r3, #2
  0b25c	1a000005	 bne         |$LN81@ThreadRun@3|

; 3455 :                     m_timeout = DO_USBHOST_TIMEOUT;

  0b260	e59d316c	 ldr         r3, [sp, #0x16C]
  0b264	e24330dc	 sub         r3, r3, #0xDC
  0b268	e2832e17	 add         r2, r3, #0x17, 28
  0b26c	e3a03003	 mov         r3, #3
  0b270	e5823000	 str         r3, [r2]

; 3456 :                 else

  0b274	ea000004	 b           |$LN80@ThreadRun@3|
  0b278		 |$LN81@ThreadRun@3|

; 3457 :                     m_timeout = INFINITE;

  0b278	e59d316c	 ldr         r3, [sp, #0x16C]
  0b27c	e24330dc	 sub         r3, r3, #0xDC
  0b280	e2832e17	 add         r2, r3, #0x17, 28
  0b284	e3e03000	 mvn         r3, #0
  0b288	e5823000	 str         r3, [r2]
  0b28c		 |$LN80@ThreadRun@3|
  0b28c		 |$LN82@ThreadRun@3|

; 3458 :             }
; 3459 : 
; 3460 :             if ((m_dwStatus & STATUS_DISCONN_COMPLETE) && (m_pOTG->connect_status & CONN_DC))

  0b28c	e59d316c	 ldr         r3, [sp, #0x16C]
  0b290	e24330dc	 sub         r3, r3, #0xDC
  0b294	e28330f8	 add         r3, r3, #0xF8
  0b298	e5933000	 ldr         r3, [r3]
  0b29c	e3130008	 tst         r3, #8
  0b2a0	0a0000b0	 beq         |$LN79@ThreadRun@3|
  0b2a4	e59d316c	 ldr         r3, [sp, #0x16C]
  0b2a8	e24330dc	 sub         r3, r3, #0xDC
  0b2ac	e2833e15	 add         r3, r3, #0x15, 28
  0b2b0	e5933000	 ldr         r3, [r3]
  0b2b4	e283304c	 add         r3, r3, #0x4C
  0b2b8	e5d33000	 ldrb        r3, [r3]
  0b2bc	e3130004	 tst         r3, #4
  0b2c0	0a0000a8	 beq         |$LN79@ThreadRun@3|

; 3461 :             {
; 3462 :                 m_dwStatus &= ~(STATUS_DISCONN_COMPLETE|STATUS_WAIT_HOST_DISCONN_COMPLETE);

  0b2c4	e59d316c	 ldr         r3, [sp, #0x16C]
  0b2c8	e24330dc	 sub         r3, r3, #0xDC
  0b2cc	e28330f8	 add         r3, r3, #0xF8
  0b2d0	e5932000	 ldr         r2, [r3]
  0b2d4	e3e03048	 mvn         r3, #0x48
  0b2d8	e0022003	 and         r2, r2, r3
  0b2dc	e59d316c	 ldr         r3, [sp, #0x16C]
  0b2e0	e24330dc	 sub         r3, r3, #0xDC
  0b2e4	e28330f8	 add         r3, r3, #0xF8
  0b2e8	e5832000	 str         r2, [r3]

; 3463 :                 m_pOTG->connect_status &= ~CONN_DC;

  0b2ec	e59d316c	 ldr         r3, [sp, #0x16C]
  0b2f0	e24330dc	 sub         r3, r3, #0xDC
  0b2f4	e2833e15	 add         r3, r3, #0x15, 28
  0b2f8	e5933000	 ldr         r3, [r3]
  0b2fc	e283304c	 add         r3, r3, #0x4C
  0b300	e5d33000	 ldrb        r3, [r3]
  0b304	e1a02003	 mov         r2, r3
  0b308	e3e03004	 mvn         r3, #4
  0b30c	e0021003	 and         r1, r2, r3
  0b310	e59d316c	 ldr         r3, [sp, #0x16C]
  0b314	e24330dc	 sub         r3, r3, #0xDC
  0b318	e2833e15	 add         r3, r3, #0x15, 28
  0b31c	e5933000	 ldr         r3, [r3]
  0b320	e283204c	 add         r2, r3, #0x4C
  0b324	e20130ff	 and         r3, r1, #0xFF
  0b328	e5c23000	 strb        r3, [r2]

; 3464 :                 if (m_bRequestSession)

  0b32c	e59d316c	 ldr         r3, [sp, #0x16C]
  0b330	e24330dc	 sub         r3, r3, #0xDC
  0b334	e2833f59	 add         r3, r3, #0x59, 30
  0b338	e5933000	 ldr         r3, [r3]
  0b33c	e3530000	 cmp         r3, #0
  0b340	0a00001b	 beq         |$LN78@ThreadRun@3|

; 3465 :                 {
; 3466 :                     m_bRequestSession = FALSE;

  0b344	e59d316c	 ldr         r3, [sp, #0x16C]
  0b348	e24330dc	 sub         r3, r3, #0xDC
  0b34c	e2832f59	 add         r2, r3, #0x59, 30
  0b350	e3a03000	 mov         r3, #0
  0b354	e5823000	 str         r3, [r2]

; 3467 :                     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Request Session Again\r\n")));

  0b358	e59f3bc4	 ldr         r3, [pc, #0xBC4]
  0b35c	e5933440	 ldr         r3, [r3, #0x440]
  0b360	e3130a02	 tst         r3, #2, 20
  0b364	0a000004	 beq         |$LN237@ThreadRun@3|
  0b368	e59f0bd4	 ldr         r0, [pc, #0xBD4]
  0b36c	eb000000	 bl          NKDbgPrintfW
  0b370	e3a03001	 mov         r3, #1
  0b374	e58d3114	 str         r3, [sp, #0x114]
  0b378	ea000001	 b           |$LN238@ThreadRun@3|
  0b37c		 |$LN237@ThreadRun@3|
  0b37c	e3a03000	 mov         r3, #0
  0b380	e58d3114	 str         r3, [sp, #0x114]
  0b384		 |$LN238@ThreadRun@3|

; 3468 :                     SessionRequest(TRUE, TRUE);

  0b384	e3a02001	 mov         r2, #1
  0b388	e3a01001	 mov         r1, #1
  0b38c	e59d316c	 ldr         r3, [sp, #0x16C]
  0b390	e243e0dc	 sub         lr, r3, #0xDC
  0b394	e59d316c	 ldr         r3, [sp, #0x16C]
  0b398	e24300dc	 sub         r0, r3, #0xDC
  0b39c	e59e3000	 ldr         r3, [lr]
  0b3a0	e2833084	 add         r3, r3, #0x84
  0b3a4	e5933000	 ldr         r3, [r3]
  0b3a8	e1a0e00f	 mov         lr, pc
  0b3ac	e12fff13	 bx          r3

; 3469 :                 }
; 3470 :                 else

  0b3b0	ea00003e	 b           |$LN77@ThreadRun@3|
  0b3b4		 |$LN78@ThreadRun@3|

; 3471 :                 {
; 3472 :                     if (m_bExtendOTGSuspend)

  0b3b4	e59d316c	 ldr         r3, [sp, #0x16C]
  0b3b8	e24330dc	 sub         r3, r3, #0xDC
  0b3bc	e2833f61	 add         r3, r3, #0x61, 30
  0b3c0	e5933000	 ldr         r3, [r3]
  0b3c4	e3530000	 cmp         r3, #0
  0b3c8	0a00000b	 beq         |$LN76@ThreadRun@3|

; 3473 :                     {
; 3474 :                         m_bExtendOTGSuspend = FALSE;

  0b3cc	e59d316c	 ldr         r3, [sp, #0x16C]
  0b3d0	e24330dc	 sub         r3, r3, #0xDC
  0b3d4	e2832f61	 add         r2, r3, #0x61, 30
  0b3d8	e3a03000	 mov         r3, #0
  0b3dc	e5823000	 str         r3, [r2]

; 3475 :                         m_timeout = DO_SESSCHK_TIMEOUT;

  0b3e0	e59d316c	 ldr         r3, [sp, #0x16C]
  0b3e4	e24330dc	 sub         r3, r3, #0xDC
  0b3e8	e2832e17	 add         r2, r3, #0x17, 28
  0b3ec	e3a03c13	 mov         r3, #0x13, 24
  0b3f0	e3833088	 orr         r3, r3, #0x88
  0b3f4	e5823000	 str         r3, [r2]

; 3476 :                     }
; 3477 :                     else

  0b3f8	ea000004	 b           |$LN75@ThreadRun@3|
  0b3fc		 |$LN76@ThreadRun@3|

; 3478 :                     {
; 3479 :                         m_timeout = DO_USBCLK_TIMEOUT;

  0b3fc	e59d316c	 ldr         r3, [sp, #0x16C]
  0b400	e24330dc	 sub         r3, r3, #0xDC
  0b404	e2832e17	 add         r2, r3, #0x17, 28
  0b408	e3a03003	 mov         r3, #3
  0b40c	e5823000	 str         r3, [r2]
  0b410		 |$LN75@ThreadRun@3|

; 3480 :                     }
; 3481 :                     // Perform reset of all the endpoints, we need to do that.
; 3482 :                     if ((m_dwStatus & STATUS_HNP_SESSION_MASK) == 0x00)

  0b410	e59d316c	 ldr         r3, [sp, #0x16C]
  0b414	e24330dc	 sub         r3, r3, #0xDC
  0b418	e28330f8	 add         r3, r3, #0xF8
  0b41c	e5933000	 ldr         r3, [r3]
  0b420	e3130030	 tst         r3, #0x30
  0b424	1a000008	 bne         |$LN74@ThreadRun@3|

; 3483 :                         ResetEndPoints();

  0b428	e59d316c	 ldr         r3, [sp, #0x16C]
  0b42c	e24320dc	 sub         r2, r3, #0xDC
  0b430	e59d316c	 ldr         r3, [sp, #0x16C]
  0b434	e24300dc	 sub         r0, r3, #0xDC
  0b438	e5923000	 ldr         r3, [r2]
  0b43c	e28330ec	 add         r3, r3, #0xEC
  0b440	e5933000	 ldr         r3, [r3]
  0b444	e1a0e00f	 mov         lr, pc
  0b448	e12fff13	 bx          r3
  0b44c		 |$LN74@ThreadRun@3|

; 3484 :                     m_pTransceiver->EnableWakeupInterrupt(TRUE);

  0b44c	e3a01001	 mov         r1, #1
  0b450	e59d316c	 ldr         r3, [sp, #0x16C]
  0b454	e24330dc	 sub         r3, r3, #0xDC
  0b458	e28330fc	 add         r3, r3, #0xFC
  0b45c	e5932000	 ldr         r2, [r3]
  0b460	e59d316c	 ldr         r3, [sp, #0x16C]
  0b464	e24330dc	 sub         r3, r3, #0xDC
  0b468	e28330fc	 add         r3, r3, #0xFC
  0b46c	e5930000	 ldr         r0, [r3]
  0b470	e5923000	 ldr         r3, [r2]
  0b474	e2833008	 add         r3, r3, #8
  0b478	e5933000	 ldr         r3, [r3]
  0b47c	e1a0e00f	 mov         lr, pc
  0b480	e12fff13	 bx          r3

; 3485 : 
; 3486 :                     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Disconnect Complete and Set IOCTRL again\r\n")));

  0b484	e59f3a98	 ldr         r3, [pc, #0xA98]
  0b488	e5933440	 ldr         r3, [r3, #0x440]
  0b48c	e3130a02	 tst         r3, #2, 20
  0b490	0a000004	 beq         |$LN239@ThreadRun@3|
  0b494	e59f0aa4	 ldr         r0, [pc, #0xAA4]
  0b498	eb000000	 bl          NKDbgPrintfW
  0b49c	e3a03001	 mov         r3, #1
  0b4a0	e58d3118	 str         r3, [sp, #0x118]
  0b4a4	ea000001	 b           |$LN240@ThreadRun@3|
  0b4a8		 |$LN239@ThreadRun@3|
  0b4a8	e3a03000	 mov         r3, #0
  0b4ac	e58d3118	 str         r3, [sp, #0x118]
  0b4b0		 |$LN240@ThreadRun@3|
  0b4b0		 |$LN77@ThreadRun@3|

; 3487 :                 }
; 3488 : 
; 3489 :                 if (m_dwStatus & STATUS_HNP_SESSION_INIT)

  0b4b0	e59d316c	 ldr         r3, [sp, #0x16C]
  0b4b4	e24330dc	 sub         r3, r3, #0xDC
  0b4b8	e28330f8	 add         r3, r3, #0xF8
  0b4bc	e5933000	 ldr         r3, [r3]
  0b4c0	e3130010	 tst         r3, #0x10
  0b4c4	0a000027	 beq         |$LN73@ThreadRun@3|

; 3490 :                 {
; 3491 :                     // Check whether it is host mode connection or device mode connection
; 3492 :                     SetEvent(m_hIntrEvent);

  0b4c8	e59d316c	 ldr         r3, [sp, #0x16C]
  0b4cc	e24330dc	 sub         r3, r3, #0xDC
  0b4d0	e2833f53	 add         r3, r3, #0x53, 30
  0b4d4	e5930000	 ldr         r0, [r3]
  0b4d8	eb000000	 bl          SetEvent

; 3493 :                     m_dwStatus |= STATUS_HNP_SESSION_PROCESS;

  0b4dc	e59d316c	 ldr         r3, [sp, #0x16C]
  0b4e0	e24330dc	 sub         r3, r3, #0xDC
  0b4e4	e28330f8	 add         r3, r3, #0xF8
  0b4e8	e5933000	 ldr         r3, [r3]
  0b4ec	e3832020	 orr         r2, r3, #0x20
  0b4f0	e59d316c	 ldr         r3, [sp, #0x16C]
  0b4f4	e24330dc	 sub         r3, r3, #0xDC
  0b4f8	e28330f8	 add         r3, r3, #0xF8
  0b4fc	e5832000	 str         r2, [r3]

; 3494 :                     m_dwStatus &= ~STATUS_HNP_SESSION_INIT;

  0b500	e59d316c	 ldr         r3, [sp, #0x16C]
  0b504	e24330dc	 sub         r3, r3, #0xDC
  0b508	e28330f8	 add         r3, r3, #0xF8
  0b50c	e5932000	 ldr         r2, [r3]
  0b510	e3e03010	 mvn         r3, #0x10
  0b514	e0022003	 and         r2, r2, r3
  0b518	e59d316c	 ldr         r3, [sp, #0x16C]
  0b51c	e24330dc	 sub         r3, r3, #0xDC
  0b520	e28330f8	 add         r3, r3, #0xF8
  0b524	e5832000	 str         r2, [r3]

; 3495 :                     DEBUGMSG(ZONE_OTG_HNP, (TEXT("m_bHNPSession set interrupt\r\n")));

  0b528	e59f39f4	 ldr         r3, [pc, #0x9F4]
  0b52c	e5933440	 ldr         r3, [r3, #0x440]
  0b530	e3130a01	 tst         r3, #1, 20
  0b534	0a000004	 beq         |$LN241@ThreadRun@3|
  0b538	e59f09fc	 ldr         r0, [pc, #0x9FC]
  0b53c	eb000000	 bl          NKDbgPrintfW
  0b540	e3a03001	 mov         r3, #1
  0b544	e58d311c	 str         r3, [sp, #0x11C]
  0b548	ea000001	 b           |$LN242@ThreadRun@3|
  0b54c		 |$LN241@ThreadRun@3|
  0b54c	e3a03000	 mov         r3, #0
  0b550	e58d311c	 str         r3, [sp, #0x11C]
  0b554		 |$LN242@ThreadRun@3|

; 3496 :                     m_timeout = INFINITE;

  0b554	e59d316c	 ldr         r3, [sp, #0x16C]
  0b558	e24330dc	 sub         r3, r3, #0xDC
  0b55c	e2832e17	 add         r2, r3, #0x17, 28
  0b560	e3e03000	 mvn         r3, #0
  0b564	e5823000	 str         r3, [r2]
  0b568		 |$LN73@ThreadRun@3|
  0b568		 |$LN79@ThreadRun@3|

; 3497 :                 }
; 3498 :             }
; 3499 : 
; 3500 :             if (m_dwStatus & STATUS_DISCONN_REQUEST)

  0b568	e59d316c	 ldr         r3, [sp, #0x16C]
  0b56c	e24330dc	 sub         r3, r3, #0xDC
  0b570	e28330f8	 add         r3, r3, #0xF8
  0b574	e5933000	 ldr         r3, [r3]
  0b578	e3130002	 tst         r3, #2
  0b57c	0a000017	 beq         |$LN72@ThreadRun@3|

; 3501 :             {
; 3502 :                 m_dwStatus &= ~STATUS_DISCONN_REQUEST;

  0b580	e59d316c	 ldr         r3, [sp, #0x16C]
  0b584	e24330dc	 sub         r3, r3, #0xDC
  0b588	e28330f8	 add         r3, r3, #0xF8
  0b58c	e5932000	 ldr         r2, [r3]
  0b590	e3e03002	 mvn         r3, #2
  0b594	e0022003	 and         r2, r2, r3
  0b598	e59d316c	 ldr         r3, [sp, #0x16C]
  0b59c	e24330dc	 sub         r3, r3, #0xDC
  0b5a0	e28330f8	 add         r3, r3, #0xF8
  0b5a4	e5832000	 str         r2, [r3]

; 3503 :                 m_dwStatus |= STATUS_DISCONN_COMPLETE;

  0b5a8	e59d316c	 ldr         r3, [sp, #0x16C]
  0b5ac	e24330dc	 sub         r3, r3, #0xDC
  0b5b0	e28330f8	 add         r3, r3, #0xF8
  0b5b4	e5933000	 ldr         r3, [r3]
  0b5b8	e3832008	 orr         r2, r3, #8
  0b5bc	e59d316c	 ldr         r3, [sp, #0x16C]
  0b5c0	e24330dc	 sub         r3, r3, #0xDC
  0b5c4	e28330f8	 add         r3, r3, #0xF8
  0b5c8	e5832000	 str         r2, [r3]

; 3504 :                 m_timeout = INFINITE;

  0b5cc	e59d316c	 ldr         r3, [sp, #0x16C]
  0b5d0	e24330dc	 sub         r3, r3, #0xDC
  0b5d4	e2832e17	 add         r2, r3, #0x17, 28
  0b5d8	e3e03000	 mvn         r3, #0
  0b5dc	e5823000	 str         r3, [r2]
  0b5e0		 |$LN72@ThreadRun@3|

; 3505 :             }
; 3506 : 
; 3507 :             if (m_dwStatus & STATUS_SUSPEND)

  0b5e0	e59d316c	 ldr         r3, [sp, #0x16C]
  0b5e4	e24330dc	 sub         r3, r3, #0xDC
  0b5e8	e28330f8	 add         r3, r3, #0xF8
  0b5ec	e5933000	 ldr         r3, [r3]
  0b5f0	e3130004	 tst         r3, #4
  0b5f4	0a00001b	 beq         |$LN71@ThreadRun@3|

; 3508 :             {
; 3509 :                 m_dwStatus &= ~STATUS_SUSPEND;

  0b5f8	e59d316c	 ldr         r3, [sp, #0x16C]
  0b5fc	e24330dc	 sub         r3, r3, #0xDC
  0b600	e28330f8	 add         r3, r3, #0xF8
  0b604	e5932000	 ldr         r2, [r3]
  0b608	e3e03004	 mvn         r3, #4
  0b60c	e0022003	 and         r2, r2, r3
  0b610	e59d316c	 ldr         r3, [sp, #0x16C]
  0b614	e24330dc	 sub         r3, r3, #0xDC
  0b618	e28330f8	 add         r3, r3, #0xF8
  0b61c	e5832000	 str         r2, [r3]

; 3510 :                 // Need to set the infinite and wait for the disconnect signal complete
; 3511 :                 if (m_dwStatus & STATUS_WAIT_HOST_DISCONN_COMPLETE)

  0b620	e59d316c	 ldr         r3, [sp, #0x16C]
  0b624	e24330dc	 sub         r3, r3, #0xDC
  0b628	e28330f8	 add         r3, r3, #0xF8
  0b62c	e5933000	 ldr         r3, [r3]
  0b630	e3130040	 tst         r3, #0x40
  0b634	0a000005	 beq         |$LN70@ThreadRun@3|

; 3512 :                     m_timeout = INFINITE;

  0b638	e59d316c	 ldr         r3, [sp, #0x16C]
  0b63c	e24330dc	 sub         r3, r3, #0xDC
  0b640	e2832e17	 add         r2, r3, #0x17, 28
  0b644	e3e03000	 mvn         r3, #0
  0b648	e5823000	 str         r3, [r2]

; 3513 :                 else

  0b64c	ea000005	 b           |$LN69@ThreadRun@3|
  0b650		 |$LN70@ThreadRun@3|

; 3514 :                     m_timeout = DO_SUSPEND_TIMEOUT;

  0b650	e59d316c	 ldr         r3, [sp, #0x16C]
  0b654	e24330dc	 sub         r3, r3, #0xDC
  0b658	e2832e17	 add         r2, r3, #0x17, 28
  0b65c	e3a03c0b	 mov         r3, #0xB, 24
  0b660	e38330b8	 orr         r3, r3, #0xB8
  0b664	e5823000	 str         r3, [r2]
  0b668		 |$LN69@ThreadRun@3|
  0b668		 |$LN71@ThreadRun@3|

; 3515 :             }
; 3516 :             if(m_disconnected)

  0b668	e59d316c	 ldr         r3, [sp, #0x16C]
  0b66c	e24330dc	 sub         r3, r3, #0xDC
  0b670	e2833f63	 add         r3, r3, #0x63, 30
  0b674	e5933000	 ldr         r3, [r3]
  0b678	e3530000	 cmp         r3, #0
  0b67c	0a000005	 beq         |$LN68@ThreadRun@3|

; 3517 :             {
; 3518 :                 m_timeout = DO_DISCONNECT_TIMEOUT;

  0b680	e59d316c	 ldr         r3, [sp, #0x16C]
  0b684	e24330dc	 sub         r3, r3, #0xDC
  0b688	e2832e17	 add         r2, r3, #0x17, 28
  0b68c	e3a03ffa	 mov         r3, #0xFA, 30
  0b690	e5823000	 str         r3, [r2]

; 3519 :             }
; 3520 :             else

  0b694	ea000005	 b           |$LN67@ThreadRun@3|
  0b698		 |$LN68@ThreadRun@3|

; 3521 :             {
; 3522 :                 m_timeout = DO_INACTIVITY_TIMEOUT;

  0b698	e59d316c	 ldr         r3, [sp, #0x16C]
  0b69c	e24330dc	 sub         r3, r3, #0xDC
  0b6a0	e2832e17	 add         r2, r3, #0x17, 28
  0b6a4	e3a03c27	 mov         r3, #0x27, 24
  0b6a8	e3833010	 orr         r3, r3, #0x10
  0b6ac	e5823000	 str         r3, [r2]
  0b6b0		 |$LN67@ThreadRun@3|

; 3523 :             }
; 3524 : 
; 3525 :             InterruptDone(m_dwSysIntr);

  0b6b0	e59d316c	 ldr         r3, [sp, #0x16C]
  0b6b4	e24330dc	 sub         r3, r3, #0xDC
  0b6b8	e2833f51	 add         r3, r3, #0x51, 30
  0b6bc	e5930000	 ldr         r0, [r3]
  0b6c0	eb000000	 bl          InterruptDone

; 3526 :         }
; 3527 : 		else

  0b6c4	ea000601	 b           |$LN66@ThreadRun@3|
  0b6c8		 |$LN161@ThreadRun@3|

; 3528 :         {
; 3529 :             // *** Using transceiver with pure ULPI interface ***
; 3530 : 
; 3531 :             rc = WaitForSingleObject(m_hIntrEvent, m_timeout);

  0b6c8	e59d316c	 ldr         r3, [sp, #0x16C]
  0b6cc	e24330dc	 sub         r3, r3, #0xDC
  0b6d0	e2833e17	 add         r3, r3, #0x17, 28
  0b6d4	e5931000	 ldr         r1, [r3]
  0b6d8	e59d316c	 ldr         r3, [sp, #0x16C]
  0b6dc	e24330dc	 sub         r3, r3, #0xDC
  0b6e0	e2833f53	 add         r3, r3, #0x53, 30
  0b6e4	e5930000	 ldr         r0, [r3]
  0b6e8	eb000000	 bl          WaitForSingleObject
  0b6ec	e58d0120	 str         r0, [sp, #0x120]
  0b6f0	e59d3120	 ldr         r3, [sp, #0x120]
  0b6f4	e58d302c	 str         r3, [sp, #0x2C]

; 3532 : 
; 3533 :             if (m_fPowerRequest)

  0b6f8	e59d316c	 ldr         r3, [sp, #0x16C]
  0b6fc	e24330dc	 sub         r3, r3, #0xDC
  0b700	e2833e1a	 add         r3, r3, #0x1A, 28
  0b704	e5933000	 ldr         r3, [r3]
  0b708	e3530000	 cmp         r3, #0
  0b70c	0a00003b	 beq         |$LN65@ThreadRun@3|

; 3534 :             {
; 3535 :                 DEBUGMSG(1, (TEXT("OTG m_fPowerRequest D%d\r\n"), m_Dx));

  0b710	e59d316c	 ldr         r3, [sp, #0x16C]
  0b714	e24330dc	 sub         r3, r3, #0xDC
  0b718	e28330f4	 add         r3, r3, #0xF4
  0b71c	e5931000	 ldr         r1, [r3]
  0b720	e59f0810	 ldr         r0, [pc, #0x810]
  0b724	eb000000	 bl          NKDbgPrintfW
  0b728	e3a03001	 mov         r3, #1
  0b72c	e58d3124	 str         r3, [sp, #0x124]
  0b730	ea000001	 b           |$LN244@ThreadRun@3|
  0b734	e3a03000	 mov         r3, #0
  0b738	e58d3124	 str         r3, [sp, #0x124]
  0b73c		 |$LN244@ThreadRun@3|

; 3536 :                 m_fPowerRequest = FALSE;

  0b73c	e59d316c	 ldr         r3, [sp, #0x16C]
  0b740	e24330dc	 sub         r3, r3, #0xDC
  0b744	e2832e1a	 add         r2, r3, #0x1A, 28
  0b748	e3a03000	 mov         r3, #0
  0b74c	e5823000	 str         r3, [r2]

; 3537 :                 SetPowerState(m_Dx);

  0b750	e59d316c	 ldr         r3, [sp, #0x16C]
  0b754	e24330dc	 sub         r3, r3, #0xDC
  0b758	e28330f4	 add         r3, r3, #0xF4
  0b75c	e5931000	 ldr         r1, [r3]
  0b760	e59d316c	 ldr         r3, [sp, #0x16C]
  0b764	e24320dc	 sub         r2, r3, #0xDC
  0b768	e59d316c	 ldr         r3, [sp, #0x16C]
  0b76c	e24300dc	 sub         r0, r3, #0xDC
  0b770	e5923000	 ldr         r3, [r2]
  0b774	e2833f41	 add         r3, r3, #0x41, 30
  0b778	e5933000	 ldr         r3, [r3]
  0b77c	e1a0e00f	 mov         lr, pc
  0b780	e12fff13	 bx          r3

; 3538 :                 if (m_Dx == D4)

  0b784	e59d316c	 ldr         r3, [sp, #0x16C]
  0b788	e24330dc	 sub         r3, r3, #0xDC
  0b78c	e28330f4	 add         r3, r3, #0xF4
  0b790	e5933000	 ldr         r3, [r3]
  0b794	e3530004	 cmp         r3, #4
  0b798	1a000011	 bne         |$LN64@ThreadRun@3|

; 3539 :                 {
; 3540 :                     ResetEvent(m_hIntrEvent);

  0b79c	e59d316c	 ldr         r3, [sp, #0x16C]
  0b7a0	e24330dc	 sub         r3, r3, #0xDC
  0b7a4	e2833f53	 add         r3, r3, #0x53, 30
  0b7a8	e5930000	 ldr         r0, [r3]
  0b7ac	eb000000	 bl          ResetEvent

; 3541 :                     m_timeout = INFINITE;

  0b7b0	e59d316c	 ldr         r3, [sp, #0x16C]
  0b7b4	e24330dc	 sub         r3, r3, #0xDC
  0b7b8	e2832e17	 add         r2, r3, #0x17, 28
  0b7bc	e3e03000	 mvn         r3, #0
  0b7c0	e5823000	 str         r3, [r2]

; 3542 :                     SetEvent(m_pOTG->hPowerEvent);

  0b7c4	e59d316c	 ldr         r3, [sp, #0x16C]
  0b7c8	e24330dc	 sub         r3, r3, #0xDC
  0b7cc	e2833e15	 add         r3, r3, #0x15, 28
  0b7d0	e5933000	 ldr         r3, [r3]
  0b7d4	e2833058	 add         r3, r3, #0x58
  0b7d8	e5930000	 ldr         r0, [r3]
  0b7dc	eb000000	 bl          SetEvent

; 3543 :                     continue;

  0b7e0	eafff794	 b           |$LN280@ThreadRun@3|
  0b7e4		 |$LN64@ThreadRun@3|

; 3544 :                 }
; 3545 :                 SetEvent(m_pOTG->hPowerEvent);

  0b7e4	e59d316c	 ldr         r3, [sp, #0x16C]
  0b7e8	e24330dc	 sub         r3, r3, #0xDC
  0b7ec	e2833e15	 add         r3, r3, #0x15, 28
  0b7f0	e5933000	 ldr         r3, [r3]
  0b7f4	e2833058	 add         r3, r3, #0x58
  0b7f8	e5930000	 ldr         r0, [r3]
  0b7fc	eb000000	 bl          SetEvent
  0b800		 |$LN65@ThreadRun@3|

; 3546 :             }
; 3547 : 
; 3548 :             if (m_pOTG->dwPwrMgmt == MODE_SYSTEM_SUSPEND)

  0b800	e59d316c	 ldr         r3, [sp, #0x16C]
  0b804	e24330dc	 sub         r3, r3, #0xDC
  0b808	e2833e15	 add         r3, r3, #0x15, 28
  0b80c	e5933000	 ldr         r3, [r3]
  0b810	e2833064	 add         r3, r3, #0x64
  0b814	e5933000	 ldr         r3, [r3]
  0b818	e3530001	 cmp         r3, #1
  0b81c	1a00000c	 bne         |$LN63@ThreadRun@3|

; 3549 : 			{
; 3550 :                 Sleep(100);

  0b820	e3a00064	 mov         r0, #0x64
  0b824	eb000000	 bl          Sleep

; 3551 :                 if (rc != WAIT_TIMEOUT)

  0b828	e59d202c	 ldr         r2, [sp, #0x2C]
  0b82c	e3a03c01	 mov         r3, #1, 24
  0b830	e3833002	 orr         r3, r3, #2
  0b834	e1520003	 cmp         r2, r3
  0b838	0a000004	 beq         |$LN62@ThreadRun@3|

; 3552 :                 	InterruptDone(m_dwSysIntr);

  0b83c	e59d316c	 ldr         r3, [sp, #0x16C]
  0b840	e24330dc	 sub         r3, r3, #0xDC
  0b844	e2833f51	 add         r3, r3, #0x51, 30
  0b848	e5930000	 ldr         r0, [r3]
  0b84c	eb000000	 bl          InterruptDone
  0b850		 |$LN62@ThreadRun@3|

; 3553 : 			    continue;

  0b850	eafff778	 b           |$LN281@ThreadRun@3|
  0b854		 |$LN63@ThreadRun@3|

; 3554 : 			}
; 3555 : 
; 3556 : 			#if SUSPEND_RESUME_DEBUG_ENABLE
; 3557 : 	            if (m_pOTG->dwPwrMgmt == MODE_SYSTEM_RESUME)
; 3558 : 				{
; 3559 : 	                RETAILMSG(1, (L"OTG ThreadRun MODE_SYSTEM_RESUME\r\n"));
; 3560 : 	                BYTE DevCtlValue = INREG8(&m_pOTG->pUsbGenRegs->DevCtl);
; 3561 : 	                dwSysConfigValue = INREG32(&m_pOTG->pUsbOtgRegs->OTG_SYSCONFIG);
; 3562 : 	                BYTE dwPowerValue = INREG8(&m_pOTG->pUsbGenRegs->Power);
; 3563 : 
; 3564 : 	                RETAILMSG(1, (TEXT("OTG: SYSCONFIG(0x%x), POWER(0x%x), DEVCTL(0x%x)\r\n"),
; 3565 : 	                    dwSysConfigValue, dwPowerValue, DevCtlValue));
; 3566 : 						
; 3567 : 	                RETAILMSG(1, (TEXT("OTG: operateMode %s\r\n"), m_pOTG->operateMode == HOST_MODE ? L"host" : m_pOTG->operateMode == DEVICE_MODE ? L"device" : L"idle"));
; 3568 : 				}
; 3569 : 			#endif
; 3570 : 				
; 3571 :             // OTG port ID pin changes will only be detected if session bit in DEVCTL register is set
; 3572 :             if (m_pOTG->dwPwrMgmt == MODE_SYSTEM_NORMAL && !(INREG8(&m_pOTG->pUsbGenRegs->DevCtl) & DEVCTL_SESSION))

  0b854	e59d316c	 ldr         r3, [sp, #0x16C]
  0b858	e24330dc	 sub         r3, r3, #0xDC
  0b85c	e2833e15	 add         r3, r3, #0x15, 28
  0b860	e5933000	 ldr         r3, [r3]
  0b864	e2833064	 add         r3, r3, #0x64
  0b868	e5933000	 ldr         r3, [r3]
  0b86c	e3530000	 cmp         r3, #0
  0b870	1a000028	 bne         |$LN61@ThreadRun@3|
  0b874	e59d316c	 ldr         r3, [sp, #0x16C]
  0b878	e24330dc	 sub         r3, r3, #0xDC
  0b87c	e2833e15	 add         r3, r3, #0x15, 28
  0b880	e5933000	 ldr         r3, [r3]
  0b884	e2833020	 add         r3, r3, #0x20
  0b888	e5933000	 ldr         r3, [r3]
  0b88c	e2833060	 add         r3, r3, #0x60
  0b890	e5d33000	 ldrb        r3, [r3]
  0b894	e3130001	 tst         r3, #1
  0b898	1a00001e	 bne         |$LN61@ThreadRun@3|

; 3573 : 			{
; 3574 :                 SETREG8(&m_pOTG->pUsbGenRegs->DevCtl, DEVCTL_SESSION);          

  0b89c	e59d316c	 ldr         r3, [sp, #0x16C]
  0b8a0	e24330dc	 sub         r3, r3, #0xDC
  0b8a4	e2833e15	 add         r3, r3, #0x15, 28
  0b8a8	e5933000	 ldr         r3, [r3]
  0b8ac	e2833020	 add         r3, r3, #0x20
  0b8b0	e5933000	 ldr         r3, [r3]
  0b8b4	e2833060	 add         r3, r3, #0x60
  0b8b8	e5d33000	 ldrb        r3, [r3]
  0b8bc	e3833001	 orr         r3, r3, #1
  0b8c0	e20320ff	 and         r2, r3, #0xFF
  0b8c4	e59d316c	 ldr         r3, [sp, #0x16C]
  0b8c8	e24330dc	 sub         r3, r3, #0xDC
  0b8cc	e2833e15	 add         r3, r3, #0x15, 28
  0b8d0	e5933000	 ldr         r3, [r3]
  0b8d4	e2833020	 add         r3, r3, #0x20
  0b8d8	e5933000	 ldr         r3, [r3]
  0b8dc	e2833060	 add         r3, r3, #0x60
  0b8e0	e5c32000	 strb        r2, [r3]

; 3575 : 
; 3576 : 				Sleep(1);

  0b8e4	e3a00001	 mov         r0, #1
  0b8e8	eb000000	 bl          Sleep

; 3577 : 				
; 3578 : 				#if SUSPEND_RESUME_DEBUG_ENABLE
; 3579 : 		            BYTE DevCtlValue = INREG8(&m_pOTG->pUsbGenRegs->DevCtl);
; 3580 : 		            dwSysConfigValue = INREG32(&m_pOTG->pUsbOtgRegs->OTG_SYSCONFIG);
; 3581 : 		            BYTE dwPowerValue = INREG8(&m_pOTG->pUsbGenRegs->Power);
; 3582 : 
; 3583 : 		            RETAILMSG(1, (TEXT("OTG: SYSCONFIG(0x%x), POWER(0x%x), DEVCTL(0x%x), CCS %d, CSC %d\r\n"),
; 3584 : 		                      dwSysConfigValue, dwPowerValue, DevCtlValue, m_pOTG->connect_status & CONN_CCS ? 1 : 0, m_pOTG->connect_status & CONN_CSC ? 1 : 0));
; 3585 : 				#endif
; 3586 : 							  
; 3587 : 				m_timeout = 100;

  0b8ec	e59d316c	 ldr         r3, [sp, #0x16C]
  0b8f0	e24330dc	 sub         r3, r3, #0xDC
  0b8f4	e2832e17	 add         r2, r3, #0x17, 28
  0b8f8	e3a03064	 mov         r3, #0x64
  0b8fc	e5823000	 str         r3, [r2]

; 3588 : 
; 3589 :                 if (rc == WAIT_TIMEOUT)

  0b900	e59d202c	 ldr         r2, [sp, #0x2C]
  0b904	e3a03c01	 mov         r3, #1, 24
  0b908	e3833002	 orr         r3, r3, #2
  0b90c	e1520003	 cmp         r2, r3
  0b910	1a000000	 bne         |$LN60@ThreadRun@3|

; 3590 :     				continue;

  0b914	eafff747	 b           |$LN282@ThreadRun@3|
  0b918		 |$LN60@ThreadRun@3|
  0b918		 |$LN61@ThreadRun@3|

; 3591 :             }
; 3592 : 
; 3593 :             OUTREG8(&pGen->IntrUSBE, INTRUSB_ALL&~INTRUSB_SOF);

  0b918	e59d301c	 ldr         r3, [sp, #0x1C]
  0b91c	e283200b	 add         r2, r3, #0xB
  0b920	e3a030f7	 mov         r3, #0xF7
  0b924	e5c23000	 strb        r3, [r2]

; 3594 : 
; 3595 : #ifdef DEBUG
; 3596 :             BYTE DevCtlValue = INREG8(&m_pOTG->pUsbGenRegs->DevCtl);

  0b928	e59d316c	 ldr         r3, [sp, #0x16C]
  0b92c	e24330dc	 sub         r3, r3, #0xDC
  0b930	e2833e15	 add         r3, r3, #0x15, 28
  0b934	e5933000	 ldr         r3, [r3]
  0b938	e2833020	 add         r3, r3, #0x20
  0b93c	e5933000	 ldr         r3, [r3]
  0b940	e2833060	 add         r3, r3, #0x60
  0b944	e5d33000	 ldrb        r3, [r3]
  0b948	e5cd3039	 strb        r3, [sp, #0x39]

; 3597 :             BYTE dwPowerValue = INREG8(&m_pOTG->pUsbGenRegs->Power);

  0b94c	e59d316c	 ldr         r3, [sp, #0x16C]
  0b950	e24330dc	 sub         r3, r3, #0xDC
  0b954	e2833e15	 add         r3, r3, #0x15, 28
  0b958	e5933000	 ldr         r3, [r3]
  0b95c	e2833020	 add         r3, r3, #0x20
  0b960	e5933000	 ldr         r3, [r3]
  0b964	e2833001	 add         r3, r3, #1
  0b968	e5d33000	 ldrb        r3, [r3]
  0b96c	e5cd303a	 strb        r3, [sp, #0x3A]

; 3598 : #endif
; 3599 :             dwSysConfigValue = INREG32(&m_pOTG->pUsbOtgRegs->OTG_SYSCONFIG);

  0b970	e59d316c	 ldr         r3, [sp, #0x16C]
  0b974	e24330dc	 sub         r3, r3, #0xDC
  0b978	e2833e15	 add         r3, r3, #0x15, 28
  0b97c	e5933000	 ldr         r3, [r3]
  0b980	e2833018	 add         r3, r3, #0x18
  0b984	e5933000	 ldr         r3, [r3]
  0b988	e2833004	 add         r3, r3, #4
  0b98c	e5933000	 ldr         r3, [r3]
  0b990	e58d3020	 str         r3, [sp, #0x20]

; 3600 : 
; 3601 :             DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("OTG: SYSCONFIG(0x%x), POWER(0x%x), DEVCTL(0x%x)\r\n"),
; 3602 :                     dwSysConfigValue, dwPowerValue, DevCtlValue));

  0b994	e59f3588	 ldr         r3, [pc, #0x588]
  0b998	e5933440	 ldr         r3, [r3, #0x440]
  0b99c	e3130a02	 tst         r3, #2, 20
  0b9a0	0a000007	 beq         |$LN245@ThreadRun@3|
  0b9a4	e5dd3039	 ldrb        r3, [sp, #0x39]
  0b9a8	e5dd203a	 ldrb        r2, [sp, #0x3A]
  0b9ac	e59d1020	 ldr         r1, [sp, #0x20]
  0b9b0	e59f057c	 ldr         r0, [pc, #0x57C]
  0b9b4	eb000000	 bl          NKDbgPrintfW
  0b9b8	e3a03001	 mov         r3, #1
  0b9bc	e58d3128	 str         r3, [sp, #0x128]
  0b9c0	ea000001	 b           |$LN246@ThreadRun@3|
  0b9c4		 |$LN245@ThreadRun@3|
  0b9c4	e3a03000	 mov         r3, #0
  0b9c8	e58d3128	 str         r3, [sp, #0x128]
  0b9cc		 |$LN246@ThreadRun@3|

; 3603 : 
; 3604 :             if (rc == WAIT_TIMEOUT)

  0b9cc	e59d202c	 ldr         r2, [sp, #0x2C]
  0b9d0	e3a03c01	 mov         r3, #1, 24
  0b9d4	e3833002	 orr         r3, r3, #2
  0b9d8	e1520003	 cmp         r2, r3
  0b9dc	1a0000ba	 bne         |$LN59@ThreadRun@3|

; 3605 :             {                        
; 3606 :                 m_timeout = INFINITE;

  0b9e0	e59d316c	 ldr         r3, [sp, #0x16C]
  0b9e4	e24330dc	 sub         r3, r3, #0xDC
  0b9e8	e2832e17	 add         r2, r3, #0x17, 28
  0b9ec	e3e03000	 mvn         r3, #0
  0b9f0	e5823000	 str         r3, [r2]

; 3607 : 
; 3608 :                 if (m_pOTG->operateMode == HOST_MODE)

  0b9f4	e59d316c	 ldr         r3, [sp, #0x16C]
  0b9f8	e24330dc	 sub         r3, r3, #0xDC
  0b9fc	e2833e15	 add         r3, r3, #0x15, 28
  0ba00	e5933000	 ldr         r3, [r3]
  0ba04	e2833035	 add         r3, r3, #0x35
  0ba08	e5d33000	 ldrb        r3, [r3]
  0ba0c	e3530002	 cmp         r3, #2
  0ba10	1a000000	 bne         |$LN58@ThreadRun@3|

; 3609 :                 {   
; 3610 :                     //EnableSuspend(TRUE);
; 3611 :                 }
; 3612 :                 else

  0ba14	ea0000aa	 b           |$LN57@ThreadRun@3|
  0ba18		 |$LN58@ThreadRun@3|

; 3613 :                 {
; 3614 :                     // If you are here, it can be either IDLE_MODE or SUSPEND_MODE
; 3615 :                     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("StopUSBClock with operateMode=%d, m_dwStatus=0x%x\r\n"), 
; 3616 :                         m_pOTG->operateMode, m_dwStatus));

  0ba18	e59f3504	 ldr         r3, [pc, #0x504]
  0ba1c	e5933440	 ldr         r3, [r3, #0x440]
  0ba20	e3130a02	 tst         r3, #2, 20
  0ba24	0a00000f	 beq         |$LN247@ThreadRun@3|
  0ba28	e59d316c	 ldr         r3, [sp, #0x16C]
  0ba2c	e24330dc	 sub         r3, r3, #0xDC
  0ba30	e28330f8	 add         r3, r3, #0xF8
  0ba34	e5932000	 ldr         r2, [r3]
  0ba38	e59d316c	 ldr         r3, [sp, #0x16C]
  0ba3c	e24330dc	 sub         r3, r3, #0xDC
  0ba40	e2833e15	 add         r3, r3, #0x15, 28
  0ba44	e5933000	 ldr         r3, [r3]
  0ba48	e2833035	 add         r3, r3, #0x35
  0ba4c	e5d33000	 ldrb        r3, [r3]
  0ba50	e1a01003	 mov         r1, r3
  0ba54	e59f04d4	 ldr         r0, [pc, #0x4D4]
  0ba58	eb000000	 bl          NKDbgPrintfW
  0ba5c	e3a03001	 mov         r3, #1
  0ba60	e58d312c	 str         r3, [sp, #0x12C]
  0ba64	ea000001	 b           |$LN248@ThreadRun@3|
  0ba68		 |$LN247@ThreadRun@3|
  0ba68	e3a03000	 mov         r3, #0
  0ba6c	e58d312c	 str         r3, [sp, #0x12C]
  0ba70		 |$LN248@ThreadRun@3|

; 3617 : 
; 3618 :                     if ((m_dwStatus & STATUS_HNP_SESSION_MASK) == 0)

  0ba70	e59d316c	 ldr         r3, [sp, #0x16C]
  0ba74	e24330dc	 sub         r3, r3, #0xDC
  0ba78	e28330f8	 add         r3, r3, #0xF8
  0ba7c	e5933000	 ldr         r3, [r3]
  0ba80	e3130030	 tst         r3, #0x30
  0ba84	1a00008e	 bne         |$LN56@ThreadRun@3|

; 3619 :                     {
; 3620 : 
; 3621 :                         if ((m_dwStatus & STATUS_SESSION_RESTART) 
; 3622 :                             && ((m_dwStatus & STATUS_WAIT_HOST_DISCONN_COMPLETE) == 0x00) 
; 3623 :                             && (m_pOTG->operateMode == IDLE_MODE))

  0ba88	e59d316c	 ldr         r3, [sp, #0x16C]
  0ba8c	e24330dc	 sub         r3, r3, #0xDC
  0ba90	e28330f8	 add         r3, r3, #0xF8
  0ba94	e5933000	 ldr         r3, [r3]
  0ba98	e3130080	 tst         r3, #0x80
  0ba9c	0a000053	 beq         |$LN55@ThreadRun@3|
  0baa0	e59d316c	 ldr         r3, [sp, #0x16C]
  0baa4	e24330dc	 sub         r3, r3, #0xDC
  0baa8	e28330f8	 add         r3, r3, #0xF8
  0baac	e5933000	 ldr         r3, [r3]
  0bab0	e3130040	 tst         r3, #0x40
  0bab4	1a00004d	 bne         |$LN55@ThreadRun@3|
  0bab8	e59d316c	 ldr         r3, [sp, #0x16C]
  0babc	e24330dc	 sub         r3, r3, #0xDC
  0bac0	e2833e15	 add         r3, r3, #0x15, 28
  0bac4	e5933000	 ldr         r3, [r3]
  0bac8	e2833035	 add         r3, r3, #0x35
  0bacc	e5d33000	 ldrb        r3, [r3]
  0bad0	e3530000	 cmp         r3, #0
  0bad4	1a000045	 bne         |$LN55@ThreadRun@3|

; 3624 :                         {
; 3625 : 
; 3626 :                             DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Try session restart\r\n")));                        

  0bad8	e59f3444	 ldr         r3, [pc, #0x444]
  0badc	e5933440	 ldr         r3, [r3, #0x440]
  0bae0	e3130a02	 tst         r3, #2, 20
  0bae4	0a000004	 beq         |$LN249@ThreadRun@3|
  0bae8	e59f043c	 ldr         r0, [pc, #0x43C]
  0baec	eb000000	 bl          NKDbgPrintfW
  0baf0	e3a03001	 mov         r3, #1
  0baf4	e58d3130	 str         r3, [sp, #0x130]
  0baf8	ea000001	 b           |$LN250@ThreadRun@3|
  0bafc		 |$LN249@ThreadRun@3|
  0bafc	e3a03000	 mov         r3, #0
  0bb00	e58d3130	 str         r3, [sp, #0x130]
  0bb04		 |$LN250@ThreadRun@3|

; 3627 :                             SessionRequest(FALSE, FALSE);

  0bb04	e3a02000	 mov         r2, #0
  0bb08	e3a01000	 mov         r1, #0
  0bb0c	e59d316c	 ldr         r3, [sp, #0x16C]
  0bb10	e243e0dc	 sub         lr, r3, #0xDC
  0bb14	e59d316c	 ldr         r3, [sp, #0x16C]
  0bb18	e24300dc	 sub         r0, r3, #0xDC
  0bb1c	e59e3000	 ldr         r3, [lr]
  0bb20	e2833084	 add         r3, r3, #0x84
  0bb24	e5933000	 ldr         r3, [r3]
  0bb28	e1a0e00f	 mov         lr, pc
  0bb2c	e12fff13	 bx          r3

; 3628 :                             CLRREG8(&m_pOTG->pUsbGenRegs->DevCtl, DEVCTL_HOSTREQ);

  0bb30	e59d316c	 ldr         r3, [sp, #0x16C]
  0bb34	e24330dc	 sub         r3, r3, #0xDC
  0bb38	e2833e15	 add         r3, r3, #0x15, 28
  0bb3c	e5933000	 ldr         r3, [r3]
  0bb40	e2833020	 add         r3, r3, #0x20
  0bb44	e5933000	 ldr         r3, [r3]
  0bb48	e2833060	 add         r3, r3, #0x60
  0bb4c	e5d33000	 ldrb        r3, [r3]
  0bb50	e1a02003	 mov         r2, r3
  0bb54	e3e03002	 mvn         r3, #2
  0bb58	e0023003	 and         r3, r2, r3
  0bb5c	e20320ff	 and         r2, r3, #0xFF
  0bb60	e59d316c	 ldr         r3, [sp, #0x16C]
  0bb64	e24330dc	 sub         r3, r3, #0xDC
  0bb68	e2833e15	 add         r3, r3, #0x15, 28
  0bb6c	e5933000	 ldr         r3, [r3]
  0bb70	e2833020	 add         r3, r3, #0x20
  0bb74	e5933000	 ldr         r3, [r3]
  0bb78	e2833060	 add         r3, r3, #0x60
  0bb7c	e5c32000	 strb        r2, [r3]

; 3629 :                             SessionRequest(TRUE, TRUE);

  0bb80	e3a02001	 mov         r2, #1
  0bb84	e3a01001	 mov         r1, #1
  0bb88	e59d316c	 ldr         r3, [sp, #0x16C]
  0bb8c	e243e0dc	 sub         lr, r3, #0xDC
  0bb90	e59d316c	 ldr         r3, [sp, #0x16C]
  0bb94	e24300dc	 sub         r0, r3, #0xDC
  0bb98	e59e3000	 ldr         r3, [lr]
  0bb9c	e2833084	 add         r3, r3, #0x84
  0bba0	e5933000	 ldr         r3, [r3]
  0bba4	e1a0e00f	 mov         lr, pc
  0bba8	e12fff13	 bx          r3

; 3630 :                             m_dwStatus &= ~STATUS_SESSION_RESTART;

  0bbac	e59d316c	 ldr         r3, [sp, #0x16C]
  0bbb0	e24330dc	 sub         r3, r3, #0xDC
  0bbb4	e28330f8	 add         r3, r3, #0xF8
  0bbb8	e5932000	 ldr         r2, [r3]
  0bbbc	e3e03080	 mvn         r3, #0x80
  0bbc0	e0022003	 and         r2, r2, r3
  0bbc4	e59d316c	 ldr         r3, [sp, #0x16C]
  0bbc8	e24330dc	 sub         r3, r3, #0xDC
  0bbcc	e28330f8	 add         r3, r3, #0xF8
  0bbd0	e5832000	 str         r2, [r3]

; 3631 :                             m_timeout = DO_SESSCHK_TIMEOUT;

  0bbd4	e59d316c	 ldr         r3, [sp, #0x16C]
  0bbd8	e24330dc	 sub         r3, r3, #0xDC
  0bbdc	e2832e17	 add         r2, r3, #0x17, 28
  0bbe0	e3a03c13	 mov         r3, #0x13, 24
  0bbe4	e3833088	 orr         r3, r3, #0x88
  0bbe8	e5823000	 str         r3, [r2]
  0bbec	ea000034	 b           |$LN54@ThreadRun@3|
  0bbf0		 |$LN55@ThreadRun@3|

; 3632 :                         }
; 3633 :                         else if ((m_dwStatus & STATUS_WAIT_HOST_DISCONN_COMPLETE) == 0x00)

  0bbf0	e59d316c	 ldr         r3, [sp, #0x16C]
  0bbf4	e24330dc	 sub         r3, r3, #0xDC
  0bbf8	e28330f8	 add         r3, r3, #0xF8
  0bbfc	e5933000	 ldr         r3, [r3]
  0bc00	e3130040	 tst         r3, #0x40
  0bc04	1a00002e	 bne         |$LN53@ThreadRun@3|

; 3634 :                         {              
; 3635 :                             DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("+(m_dwStatus & STATUS_WAIT_HOST_DISCONN_COMPLETE) == 0x00\r\n")));

  0bc08	e59f3314	 ldr         r3, [pc, #0x314]
  0bc0c	e5933440	 ldr         r3, [r3, #0x440]
  0bc10	e3130a02	 tst         r3, #2, 20
  0bc14	0a000004	 beq         |$LN251@ThreadRun@3|
  0bc18	e59f0308	 ldr         r0, [pc, #0x308]
  0bc1c	eb000000	 bl          NKDbgPrintfW
  0bc20	e3a03001	 mov         r3, #1
  0bc24	e58d3134	 str         r3, [sp, #0x134]
  0bc28	ea000001	 b           |$LN252@ThreadRun@3|
  0bc2c		 |$LN251@ThreadRun@3|
  0bc2c	e3a03000	 mov         r3, #0
  0bc30	e58d3134	 str         r3, [sp, #0x134]
  0bc34		 |$LN252@ThreadRun@3|

; 3636 :                             if(m_disconnected || ((INREG8(&pGen->DevCtl) & DEVCTL_SESSION) == 0))

  0bc34	e59d316c	 ldr         r3, [sp, #0x16C]
  0bc38	e24330dc	 sub         r3, r3, #0xDC
  0bc3c	e2833f63	 add         r3, r3, #0x63, 30
  0bc40	e5933000	 ldr         r3, [r3]
  0bc44	e3530000	 cmp         r3, #0
  0bc48	1a000004	 bne         |$LN51@ThreadRun@3|
  0bc4c	e59d301c	 ldr         r3, [sp, #0x1C]
  0bc50	e2833060	 add         r3, r3, #0x60
  0bc54	e5d33000	 ldrb        r3, [r3]
  0bc58	e3130001	 tst         r3, #1
  0bc5c	1a000018	 bne         |$LN52@ThreadRun@3|
  0bc60		 |$LN51@ThreadRun@3|

; 3637 :                             {
; 3638 :                                 // avoid continous stream of suspend interrupts
; 3639 :                                 CLRREG8(&m_pOTG->pUsbGenRegs->IntrUSBE, INTRUSB_SUSPEND);  

  0bc60	e59d316c	 ldr         r3, [sp, #0x16C]
  0bc64	e24330dc	 sub         r3, r3, #0xDC
  0bc68	e2833e15	 add         r3, r3, #0x15, 28
  0bc6c	e5933000	 ldr         r3, [r3]
  0bc70	e2833020	 add         r3, r3, #0x20
  0bc74	e5933000	 ldr         r3, [r3]
  0bc78	e283300b	 add         r3, r3, #0xB
  0bc7c	e5d33000	 ldrb        r3, [r3]
  0bc80	e1a02003	 mov         r2, r3
  0bc84	e3e03001	 mvn         r3, #1
  0bc88	e0023003	 and         r3, r2, r3
  0bc8c	e20320ff	 and         r2, r3, #0xFF
  0bc90	e59d316c	 ldr         r3, [sp, #0x16C]
  0bc94	e24330dc	 sub         r3, r3, #0xDC
  0bc98	e2833e15	 add         r3, r3, #0x15, 28
  0bc9c	e5933000	 ldr         r3, [r3]
  0bca0	e2833020	 add         r3, r3, #0x20
  0bca4	e5933000	 ldr         r3, [r3]
  0bca8	e283300b	 add         r3, r3, #0xB
  0bcac	e5c32000	 strb        r2, [r3]

; 3640 :                                 // in effect, we must continuously set the session bit to get host mode to work
; 3641 :                                 m_timeout = 1000;

  0bcb0	e59d316c	 ldr         r3, [sp, #0x16C]
  0bcb4	e24330dc	 sub         r3, r3, #0xDC
  0bcb8	e2832e17	 add         r2, r3, #0x17, 28
  0bcbc	e3a03ffa	 mov         r3, #0xFA, 30
  0bcc0	e5823000	 str         r3, [r2]
  0bcc4		 |$LN52@ThreadRun@3|
  0bcc4		 |$LN53@ThreadRun@3|
  0bcc4		 |$LN54@ThreadRun@3|
  0bcc4		 |$LN56@ThreadRun@3|
  0bcc4		 |$LN57@ThreadRun@3|

; 3642 :                             }
; 3643 :                         }
; 3644 :                     }
; 3645 :                 }
; 3646 : 
; 3647 :                 continue;

  0bcc4	eafff65b	 b           |$LN283@ThreadRun@3|

; 3648 :             }
; 3649 :             else

  0bcc8	ea000023	 b           |$LN50@ThreadRun@3|
  0bccc		 |$LN59@ThreadRun@3|

; 3650 :             {   
; 3651 :                 StartUSBClock(m_bIncCount);         

  0bccc	e59d316c	 ldr         r3, [sp, #0x16C]
  0bcd0	e24330dc	 sub         r3, r3, #0xDC
  0bcd4	e2833d06	 add         r3, r3, #6, 26
  0bcd8	e5931000	 ldr         r1, [r3]
  0bcdc	e59d316c	 ldr         r3, [sp, #0x16C]
  0bce0	e24320dc	 sub         r2, r3, #0xDC
  0bce4	e59d316c	 ldr         r3, [sp, #0x16C]
  0bce8	e24300dc	 sub         r0, r3, #0xDC
  0bcec	e5923000	 ldr         r3, [r2]
  0bcf0	e28330e4	 add         r3, r3, #0xE4
  0bcf4	e5933000	 ldr         r3, [r3]
  0bcf8	e1a0e00f	 mov         lr, pc
  0bcfc	e12fff13	 bx          r3

; 3652 :                 m_bIncCount = FALSE;            

  0bd00	e59d316c	 ldr         r3, [sp, #0x16C]
  0bd04	e24330dc	 sub         r3, r3, #0xDC
  0bd08	e2832d06	 add         r2, r3, #6, 26
  0bd0c	e3a03000	 mov         r3, #0
  0bd10	e5823000	 str         r3, [r2]

; 3653 :                 if (m_dwStatus & STATUS_SESSION_RESTART)

  0bd14	e59d316c	 ldr         r3, [sp, #0x16C]
  0bd18	e24330dc	 sub         r3, r3, #0xDC
  0bd1c	e28330f8	 add         r3, r3, #0xF8
  0bd20	e5933000	 ldr         r3, [r3]
  0bd24	e3130080	 tst         r3, #0x80
  0bd28	0a000006	 beq         |$LN49@ThreadRun@3|

; 3654 :                     m_timeout = DO_SUSPEND_TIMEOUT;

  0bd2c	e59d316c	 ldr         r3, [sp, #0x16C]
  0bd30	e24330dc	 sub         r3, r3, #0xDC
  0bd34	e2832e17	 add         r2, r3, #0x17, 28
  0bd38	e3a03c0b	 mov         r3, #0xB, 24
  0bd3c	e38330b8	 orr         r3, r3, #0xB8
  0bd40	e5823000	 str         r3, [r2]

; 3655 :                 else

  0bd44	ea000004	 b           |$LN48@ThreadRun@3|
  0bd48		 |$LN49@ThreadRun@3|

; 3656 :                     m_timeout = INFINITE;

  0bd48	e59d316c	 ldr         r3, [sp, #0x16C]
  0bd4c	e24330dc	 sub         r3, r3, #0xDC
  0bd50	e2832e17	 add         r2, r3, #0x17, 28
  0bd54	e3e03000	 mvn         r3, #0
  0bd58	e5823000	 str         r3, [r2]
  0bd5c		 |$LN48@ThreadRun@3|
  0bd5c		 |$LN50@ThreadRun@3|

; 3657 :             }
; 3658 : 
; 3659 :             m_pOTG->intr_usb = INREG8(&m_pOTG->pUsbGenRegs->IntrUSB);

  0bd5c	e59d316c	 ldr         r3, [sp, #0x16C]
  0bd60	e24330dc	 sub         r3, r3, #0xDC
  0bd64	e2833e15	 add         r3, r3, #0x15, 28
  0bd68	e5933000	 ldr         r3, [r3]
  0bd6c	e2833020	 add         r3, r3, #0x20
  0bd70	e5933000	 ldr         r3, [r3]
  0bd74	e283300a	 add         r3, r3, #0xA
  0bd78	e5d32000	 ldrb        r2, [r3]
  0bd7c	e59d316c	 ldr         r3, [sp, #0x16C]
  0bd80	e24330dc	 sub         r3, r3, #0xDC
  0bd84	e2833e15	 add         r3, r3, #0x15, 28
  0bd88	e5933000	 ldr         r3, [r3]
  0bd8c	e2833034	 add         r3, r3, #0x34
  0bd90	e5c32000	 strb        r2, [r3]

; 3660 :             m_pOTG->intr_tx  |= INREG16(&m_pOTG->pUsbGenRegs->IntrTx);

  0bd94	e59d316c	 ldr         r3, [sp, #0x16C]
  0bd98	e24330dc	 sub         r3, r3, #0xDC
  0bd9c	e2833e15	 add         r3, r3, #0x15, 28
  0bda0	e5933000	 ldr         r3, [r3]
  0bda4	e2830032	 add         r0, r3, #0x32
  0bda8	e59d316c	 ldr         r3, [sp, #0x16C]
  0bdac	e24330dc	 sub         r3, r3, #0xDC
  0bdb0	e2833e15	 add         r3, r3, #0x15, 28
  0bdb4	e5933000	 ldr         r3, [r3]
  0bdb8	e2833020	 add         r3, r3, #0x20
  0bdbc	e5933000	 ldr         r3, [r3]
  0bdc0	e2831002	 add         r1, r3, #2
  0bdc4	e5d13001	 ldrb        r3, [r1, #1]
  0bdc8	e1a03403	 mov         r3, r3, lsl #8
  0bdcc	e1a02803	 mov         r2, r3, lsl #16
  0bdd0	e1a02822	 mov         r2, r2, lsr #16
  0bdd4	e5d13000	 ldrb        r3, [r1]
  0bdd8	e1833002	 orr         r3, r3, r2
  0bddc	e1a02003	 mov         r2, r3
  0bde0	e1d030b0	 ldrh        r3, [r0]
  0bde4	e1831002	 orr         r1, r3, r2
  0bde8	e59d316c	 ldr         r3, [sp, #0x16C]
  0bdec	e24330dc	 sub         r3, r3, #0xDC
  0bdf0	e2833e15	 add         r3, r3, #0x15, 28
  0bdf4	e5933000	 ldr         r3, [r3]
  0bdf8	e2832032	 add         r2, r3, #0x32
  0bdfc	e1a03801	 mov         r3, r1, lsl #16
  0be00	e1a03823	 mov         r3, r3, lsr #16
  0be04	e1c230b0	 strh        r3, [r2]

; 3661 :             m_pOTG->intr_rx  |= INREG16(&m_pOTG->pUsbGenRegs->IntrRx);

  0be08	e59d316c	 ldr         r3, [sp, #0x16C]
  0be0c	e24330dc	 sub         r3, r3, #0xDC
  0be10	e2833e15	 add         r3, r3, #0x15, 28
  0be14	e5933000	 ldr         r3, [r3]
  0be18	e2830030	 add         r0, r3, #0x30
  0be1c	e59d316c	 ldr         r3, [sp, #0x16C]
  0be20	e24330dc	 sub         r3, r3, #0xDC
  0be24	e2833e15	 add         r3, r3, #0x15, 28
  0be28	e5933000	 ldr         r3, [r3]
  0be2c	e2833020	 add         r3, r3, #0x20
  0be30	e5933000	 ldr         r3, [r3]
  0be34	e2831004	 add         r1, r3, #4
  0be38	e5d13001	 ldrb        r3, [r1, #1]
  0be3c	e1a03403	 mov         r3, r3, lsl #8
  0be40	e1a02803	 mov         r2, r3, lsl #16
  0be44	e1a02822	 mov         r2, r2, lsr #16
  0be48	e5d13000	 ldrb        r3, [r1]
  0be4c	e1833002	 orr         r3, r3, r2
  0be50	e1a02003	 mov         r2, r3
  0be54	e1d030b0	 ldrh        r3, [r0]
  0be58	e1831002	 orr         r1, r3, r2
  0be5c	e59d316c	 ldr         r3, [sp, #0x16C]
  0be60	e24330dc	 sub         r3, r3, #0xDC
  0be64	e2833e15	 add         r3, r3, #0x15, 28
  0be68	e5933000	 ldr         r3, [r3]
  0be6c	e2832030	 add         r2, r3, #0x30
  0be70	e1a03801	 mov         r3, r1, lsl #16
  0be74	e1a03823	 mov         r3, r3, lsr #16
  0be78	e1c230b0	 strh        r3, [r2]

; 3662 : 
; 3663 : 			#if SUSPEND_RESUME_DEBUG_ENABLE
; 3664 : 	            if (m_pOTG->intr_usb & (INTRUSB_VBUSERR | INTRUSB_SESSREQ | INTRUSB_DISCONN  | INTRUSB_CONN | INTRUSB_RESET | INTRUSB_BABBLE | INTRUSB_RESUME | INTRUSB_SUSPEND))
; 3665 : 	            {
; 3666 : 	                RETAILMSG(1, (TEXT("OTG INTRUSB(0x%x), TX(0x%x), RX(0x%x), DevCtl(0x%x), m_dwStatus(0x%x)\r\n"),
; 3667 : 	                    m_pOTG->intr_usb, m_pOTG->intr_tx, m_pOTG->intr_rx, INREG8(&m_pOTG->pUsbGenRegs->DevCtl), m_dwStatus));
; 3668 : 	            }
; 3669 : 			#endif
; 3670 : 				
; 3671 :             //DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("OTG Interrupts(0x%x) intr_tx(0x%x) intr_rx(0x%x)\n"), m_pOTG->intr_usb, m_pOTG->intr_tx, m_pOTG->intr_rx ));
; 3672 :             DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("OTG Interrupt INTRUSB(0x%x), TX(0x%x), RX(0x%x), DevCtl(0x%x), m_dwStatus(0x%x)\r\n"),
; 3673 :                 m_pOTG->intr_usb, m_pOTG->intr_tx, m_pOTG->intr_rx, INREG8(&m_pOTG->pUsbGenRegs->DevCtl), m_dwStatus));

  0be7c	e59f30a0	 ldr         r3, [pc, #0xA0]
  0be80	e5933440	 ldr         r3, [r3, #0x440]
  0be84	e3130a02	 tst         r3, #2, 20
  0be88	0a00002e	 beq         |$LN253@ThreadRun@3|
  0be8c	e59d316c	 ldr         r3, [sp, #0x16C]
  0be90	e24330dc	 sub         r3, r3, #0xDC
  0be94	e28330f8	 add         r3, r3, #0xF8
  0be98	e5933000	 ldr         r3, [r3]
  0be9c	e58d3004	 str         r3, [sp, #4]
  0bea0	e59d316c	 ldr         r3, [sp, #0x16C]
  0bea4	e24330dc	 sub         r3, r3, #0xDC
  0bea8	e2833e15	 add         r3, r3, #0x15, 28
  0beac	e5933000	 ldr         r3, [r3]
  0beb0	e2833020	 add         r3, r3, #0x20
  0beb4	e5933000	 ldr         r3, [r3]
  0beb8	e2833060	 add         r3, r3, #0x60
  0bebc	e5d33000	 ldrb        r3, [r3]
  0bec0	e58d3000	 str         r3, [sp]
  0bec4	e59d316c	 ldr         r3, [sp, #0x16C]
  0bec8	e24330dc	 sub         r3, r3, #0xDC
  0becc	e2833e15	 add         r3, r3, #0x15, 28
  0bed0	e5933000	 ldr         r3, [r3]
  0bed4	e2833030	 add         r3, r3, #0x30
  0bed8	e1d330b0	 ldrh        r3, [r3]
  0bedc	e59d216c	 ldr         r2, [sp, #0x16C]
  0bee0	e24220dc	 sub         r2, r2, #0xDC
  0bee4	e2822e15	 add         r2, r2, #0x15, 28
  0bee8	e5922000	 ldr         r2, [r2]
  0beec	e2822032	 add         r2, r2, #0x32
  0bef0	e1d220b0	 ldrh        r2, [r2]
  0bef4	e59d116c	 ldr         r1, [sp, #0x16C]
  0bef8	e24110dc	 sub         r1, r1, #0xDC
  0befc	e2811e15	 add         r1, r1, #0x15, 28
  0bf00	e5911000	 ldr         r1, [r1]
  0bf04	e2811034	 add         r1, r1, #0x34
  0bf08	e5d11000	 ldrb        r1, [r1]
  0bf0c	e59f000c	 ldr         r0, [pc, #0xC]
  0bf10	eb000000	 bl          NKDbgPrintfW
  0bf14	e3a03001	 mov         r3, #1
  0bf18	e58d3138	 str         r3, [sp, #0x138]
  0bf1c	ea00000b	 b           |$LN254@ThreadRun@3|
  0bf20		 |$LN302@ThreadRun@3|
  0bf20		 |$LN303@ThreadRun@3|
  0bf20	00000000	 DCD         |??_C@_1KE@JOHDDKAJ@?$AAO?$AAT?$AAG?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAI?$AAN?$AAT?$AAR?$AAU?$AAS?$AAB?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAT?$AAX?$AA?$CI@|
  0bf24		 |$LN304@ThreadRun@3|
  0bf24	00000000	 DCD         |dpCurSettings|
  0bf28		 |$LN305@ThreadRun@3|
  0bf28	00000000	 DCD         |??_C@_1HI@BAJMDGPM@?$AA?$CL?$AA?$CI?$AAm?$AA_?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CG?$AA?5?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAW?$AAA?$AAI?$AAT?$AA_?$AAH?$AAO?$AAS?$AAT?$AA_@|
  0bf2c		 |$LN306@ThreadRun@3|
  0bf2c	00000000	 DCD         |??_C@_1CM@DPLIIPKK@?$AAT?$AAr?$AAy?$AA?5?$AAs?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAr?$AAe?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  0bf30		 |$LN307@ThreadRun@3|
  0bf30	00000000	 DCD         |??_C@_1GI@CPNPIDG@?$AAS?$AAt?$AAo?$AAp?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAe?$AAM?$AAo?$AAd?$AAe?$AA?$DN?$AA?$CF?$AAd@|
  0bf34		 |$LN308@ThreadRun@3|
  0bf34	00000000	 DCD         |??_C@_1GE@BIBJLHPE@?$AAO?$AAT?$AAG?$AA?3?$AA?5?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?0?$AA?5?$AAP?$AAO?$AAW?$AAE?$AAR?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx@|
  0bf38		 |$LN309@ThreadRun@3|
  0bf38	00000000	 DCD         |??_C@_1DE@JAMFAJPO@?$AAO?$AAT?$AAG?$AA?5?$AAm?$AA_?$AAf?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAD?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0bf3c		 |$LN310@ThreadRun@3|
  0bf3c	00000000	 DCD         |??_C@_1DM@EOFHGECP@?$AAm?$AA_?$AAb?$AAH?$AAN?$AAP?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  0bf40		 |$LN311@ThreadRun@3|
  0bf40	00000000	 DCD         |??_C@_1FG@NMEPNECL@?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?5?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAS?$AAe?$AAt?$AA?5?$AAI?$AAO?$AAC?$AAT@|
  0bf44		 |$LN312@ThreadRun@3|
  0bf44	00000000	 DCD         |??_C@_1DA@NOKHKCHD@?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAA?$AAg?$AAa?$AAi?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  0bf48		 |$LN253@ThreadRun@3|
  0bf48	e3a03000	 mov         r3, #0
  0bf4c	e58d3138	 str         r3, [sp, #0x138]
  0bf50		 |$LN254@ThreadRun@3|

; 3674 : 
; 3675 :             if (m_pOTG->dwPwrMgmt == MODE_SYSTEM_RESUME)

  0bf50	e59d316c	 ldr         r3, [sp, #0x16C]
  0bf54	e24330dc	 sub         r3, r3, #0xDC
  0bf58	e2833e15	 add         r3, r3, #0x15, 28
  0bf5c	e5933000	 ldr         r3, [r3]
  0bf60	e2833064	 add         r3, r3, #0x64
  0bf64	e5933000	 ldr         r3, [r3]
  0bf68	e3530002	 cmp         r3, #2
  0bf6c	1a000101	 bne         |$LN47@ThreadRun@3|

; 3676 :             {
; 3677 :                 DEBUGMSG(1, (TEXT("MODE_SYSTEM_RESUME\r\n")));

  0bf70	e59f0fdc	 ldr         r0, [pc, #0xFDC]
  0bf74	eb000000	 bl          NKDbgPrintfW
  0bf78	e3a03001	 mov         r3, #1
  0bf7c	e58d313c	 str         r3, [sp, #0x13C]
  0bf80	ea000001	 b           |$LN256@ThreadRun@3|
  0bf84	e3a03000	 mov         r3, #0
  0bf88	e58d313c	 str         r3, [sp, #0x13C]
  0bf8c		 |$LN256@ThreadRun@3|

; 3678 :                 if (m_pOTG->operateMode == HOST_MODE)

  0bf8c	e59d316c	 ldr         r3, [sp, #0x16C]
  0bf90	e24330dc	 sub         r3, r3, #0xDC
  0bf94	e2833e15	 add         r3, r3, #0x15, 28
  0bf98	e5933000	 ldr         r3, [r3]
  0bf9c	e2833035	 add         r3, r3, #0x35
  0bfa0	e5d33000	 ldrb        r3, [r3]
  0bfa4	e3530002	 cmp         r3, #2
  0bfa8	1a0000db	 bne         |$LN46@ThreadRun@3|

; 3679 :                 {
; 3680 :                     DWORD dwPrevState = 0;

  0bfac	e3a03000	 mov         r3, #0
  0bfb0	e58d303c	 str         r3, [sp, #0x3C]

; 3681 : 
; 3682 :                     DEBUGMSG(1, (TEXT("Resume on Host Mode\r\n")));

  0bfb4	e59f0f94	 ldr         r0, [pc, #0xF94]
  0bfb8	eb000000	 bl          NKDbgPrintfW
  0bfbc	e3a03001	 mov         r3, #1
  0bfc0	e58d3140	 str         r3, [sp, #0x140]
  0bfc4	ea000001	 b           |$LN258@ThreadRun@3|
  0bfc8	e3a03000	 mov         r3, #0
  0bfcc	e58d3140	 str         r3, [sp, #0x140]
  0bfd0		 |$LN258@ThreadRun@3|

; 3683 :                     if (INREG8(&pGen->Power) & POWER_RESUME)

  0bfd0	e59d301c	 ldr         r3, [sp, #0x1C]
  0bfd4	e2833001	 add         r3, r3, #1
  0bfd8	e5d33000	 ldrb        r3, [r3]
  0bfdc	e3130004	 tst         r3, #4
  0bfe0	0a000009	 beq         |$LN45@ThreadRun@3|

; 3684 :                         CLRREG8(&pGen->Power, POWER_RESUME);                                

  0bfe4	e59d301c	 ldr         r3, [sp, #0x1C]
  0bfe8	e2833001	 add         r3, r3, #1
  0bfec	e5d33000	 ldrb        r3, [r3]
  0bff0	e1a02003	 mov         r2, r3
  0bff4	e3e03004	 mvn         r3, #4
  0bff8	e0023003	 and         r3, r2, r3
  0bffc	e20320ff	 and         r2, r3, #0xFF
  0c000	e59d301c	 ldr         r3, [sp, #0x1C]
  0c004	e2833001	 add         r3, r3, #1
  0c008	e5c32000	 strb        r2, [r3]
  0c00c		 |$LN45@ThreadRun@3|

; 3685 : 
; 3686 :                     if ( ((INREG8(&pGen->DevCtl) & DEVCTL_SESSION) == 0) || ((m_pOTG->intr_usb & INTRUSB_SUSPEND) != 0) )

  0c00c	e59d301c	 ldr         r3, [sp, #0x1C]
  0c010	e2833060	 add         r3, r3, #0x60
  0c014	e5d33000	 ldrb        r3, [r3]
  0c018	e3130001	 tst         r3, #1
  0c01c	0a000007	 beq         |$LN43@ThreadRun@3|
  0c020	e59d316c	 ldr         r3, [sp, #0x16C]
  0c024	e24330dc	 sub         r3, r3, #0xDC
  0c028	e2833e15	 add         r3, r3, #0x15, 28
  0c02c	e5933000	 ldr         r3, [r3]
  0c030	e2833034	 add         r3, r3, #0x34
  0c034	e5d33000	 ldrb        r3, [r3]
  0c038	e3130001	 tst         r3, #1
  0c03c	0a0000b0	 beq         |$LN44@ThreadRun@3|
  0c040		 |$LN43@ThreadRun@3|

; 3687 :                     {
; 3688 :                         DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Resume Host Mode with request session again\r\n")));

  0c040	e59f3ee8	 ldr         r3, [pc, #0xEE8]
  0c044	e5933440	 ldr         r3, [r3, #0x440]
  0c048	e3130a02	 tst         r3, #2, 20
  0c04c	0a000004	 beq         |$LN259@ThreadRun@3|
  0c050	e59f0ef4	 ldr         r0, [pc, #0xEF4]
  0c054	eb000000	 bl          NKDbgPrintfW
  0c058	e3a03001	 mov         r3, #1
  0c05c	e58d3144	 str         r3, [sp, #0x144]
  0c060	ea000001	 b           |$LN260@ThreadRun@3|
  0c064		 |$LN259@ThreadRun@3|
  0c064	e3a03000	 mov         r3, #0
  0c068	e58d3144	 str         r3, [sp, #0x144]
  0c06c		 |$LN260@ThreadRun@3|

; 3689 :                         ResetEndPoints();

  0c06c	e59d316c	 ldr         r3, [sp, #0x16C]
  0c070	e24320dc	 sub         r2, r3, #0xDC
  0c074	e59d316c	 ldr         r3, [sp, #0x16C]
  0c078	e24300dc	 sub         r0, r3, #0xDC
  0c07c	e5923000	 ldr         r3, [r2]
  0c080	e28330ec	 add         r3, r3, #0xEC
  0c084	e5933000	 ldr         r3, [r3]
  0c088	e1a0e00f	 mov         lr, pc
  0c08c	e12fff13	 bx          r3

; 3690 :                         m_bRequestSession = TRUE;

  0c090	e59d316c	 ldr         r3, [sp, #0x16C]
  0c094	e24330dc	 sub         r3, r3, #0xDC
  0c098	e2832f59	 add         r2, r3, #0x59, 30
  0c09c	e3a03001	 mov         r3, #1
  0c0a0	e5823000	 str         r3, [r2]

; 3691 :                         //DEBUGMSG(1, (TEXT("operateMode = IDLE (resume host)\r\n")));
; 3692 :                         m_pOTG->operateMode = IDLE_MODE;

  0c0a4	e59d316c	 ldr         r3, [sp, #0x16C]
  0c0a8	e24330dc	 sub         r3, r3, #0xDC
  0c0ac	e2833e15	 add         r3, r3, #0x15, 28
  0c0b0	e5933000	 ldr         r3, [r3]
  0c0b4	e2832035	 add         r2, r3, #0x35
  0c0b8	e3a03000	 mov         r3, #0
  0c0bc	e5c23000	 strb        r3, [r2]

; 3693 :                         m_dwStatus |= STATUS_DISCONN_REQUEST/*|STATUS_WAIT_HOST_DISCONN_COMPLETE*/;

  0c0c0	e59d316c	 ldr         r3, [sp, #0x16C]
  0c0c4	e24330dc	 sub         r3, r3, #0xDC
  0c0c8	e28330f8	 add         r3, r3, #0xF8
  0c0cc	e5933000	 ldr         r3, [r3]
  0c0d0	e3832002	 orr         r2, r3, #2
  0c0d4	e59d316c	 ldr         r3, [sp, #0x16C]
  0c0d8	e24330dc	 sub         r3, r3, #0xDC
  0c0dc	e28330f8	 add         r3, r3, #0xF8
  0c0e0	e5832000	 str         r2, [r3]

; 3694 :                         dwPrevState = m_pOTG->connect_status;

  0c0e4	e59d316c	 ldr         r3, [sp, #0x16C]
  0c0e8	e24330dc	 sub         r3, r3, #0xDC
  0c0ec	e2833e15	 add         r3, r3, #0x15, 28
  0c0f0	e5933000	 ldr         r3, [r3]
  0c0f4	e283304c	 add         r3, r3, #0x4C
  0c0f8	e5d33000	 ldrb        r3, [r3]
  0c0fc	e58d303c	 str         r3, [sp, #0x3C]

; 3695 :                         m_pOTG->connect_status &= ~CONN_CCS;

  0c100	e59d316c	 ldr         r3, [sp, #0x16C]
  0c104	e24330dc	 sub         r3, r3, #0xDC
  0c108	e2833e15	 add         r3, r3, #0x15, 28
  0c10c	e5933000	 ldr         r3, [r3]
  0c110	e283304c	 add         r3, r3, #0x4C
  0c114	e5d33000	 ldrb        r3, [r3]
  0c118	e1a02003	 mov         r2, r3
  0c11c	e3e03001	 mvn         r3, #1
  0c120	e0021003	 and         r1, r2, r3
  0c124	e59d316c	 ldr         r3, [sp, #0x16C]
  0c128	e24330dc	 sub         r3, r3, #0xDC
  0c12c	e2833e15	 add         r3, r3, #0x15, 28
  0c130	e5933000	 ldr         r3, [r3]
  0c134	e283204c	 add         r2, r3, #0x4C
  0c138	e20130ff	 and         r3, r1, #0xFF
  0c13c	e5c23000	 strb        r3, [r2]

; 3696 :                         if (dwPrevState & CONN_CCS) 

  0c140	e59d303c	 ldr         r3, [sp, #0x3C]
  0c144	e3130001	 tst         r3, #1
  0c148	0a00000e	 beq         |$LN42@ThreadRun@3|

; 3697 :                             m_pOTG->connect_status |= CONN_CSC;

  0c14c	e59d316c	 ldr         r3, [sp, #0x16C]
  0c150	e24330dc	 sub         r3, r3, #0xDC
  0c154	e2833e15	 add         r3, r3, #0x15, 28
  0c158	e5933000	 ldr         r3, [r3]
  0c15c	e283304c	 add         r3, r3, #0x4C
  0c160	e5d33000	 ldrb        r3, [r3]
  0c164	e3831002	 orr         r1, r3, #2
  0c168	e59d316c	 ldr         r3, [sp, #0x16C]
  0c16c	e24330dc	 sub         r3, r3, #0xDC
  0c170	e2833e15	 add         r3, r3, #0x15, 28
  0c174	e5933000	 ldr         r3, [r3]
  0c178	e283204c	 add         r2, r3, #0x4C
  0c17c	e20130ff	 and         r3, r1, #0xFF
  0c180	e5c23000	 strb        r3, [r2]

; 3698 :                         else

  0c184	ea00000f	 b           |$LN41@ThreadRun@3|
  0c188		 |$LN42@ThreadRun@3|

; 3699 :                             m_pOTG->connect_status &= ~CONN_CSC;

  0c188	e59d316c	 ldr         r3, [sp, #0x16C]
  0c18c	e24330dc	 sub         r3, r3, #0xDC
  0c190	e2833e15	 add         r3, r3, #0x15, 28
  0c194	e5933000	 ldr         r3, [r3]
  0c198	e283304c	 add         r3, r3, #0x4C
  0c19c	e5d33000	 ldrb        r3, [r3]
  0c1a0	e1a02003	 mov         r2, r3
  0c1a4	e3e03002	 mvn         r3, #2
  0c1a8	e0021003	 and         r1, r2, r3
  0c1ac	e59d316c	 ldr         r3, [sp, #0x16C]
  0c1b0	e24330dc	 sub         r3, r3, #0xDC
  0c1b4	e2833e15	 add         r3, r3, #0x15, 28
  0c1b8	e5933000	 ldr         r3, [r3]
  0c1bc	e283204c	 add         r2, r3, #0x4C
  0c1c0	e20130ff	 and         r3, r1, #0xFF
  0c1c4	e5c23000	 strb        r3, [r2]
  0c1c8		 |$LN41@ThreadRun@3|

; 3700 : 
; 3701 :                         if (m_pOTG->pFuncs[HOST_MODE-1] != NULL)

  0c1c8	e59d316c	 ldr         r3, [sp, #0x16C]
  0c1cc	e24330dc	 sub         r3, r3, #0xDC
  0c1d0	e2833e15	 add         r3, r3, #0x15, 28
  0c1d4	e5933000	 ldr         r3, [r3]
  0c1d8	e283300c	 add         r3, r3, #0xC
  0c1dc	e5933000	 ldr         r3, [r3]
  0c1e0	e3530000	 cmp         r3, #0
  0c1e4	0a00000d	 beq         |$LN40@ThreadRun@3|

; 3702 :                            m_pOTG->pFuncs[HOST_MODE-1]->Disconnect((void *)m_pOTG);       

  0c1e8	e59d316c	 ldr         r3, [sp, #0x16C]
  0c1ec	e24330dc	 sub         r3, r3, #0xDC
  0c1f0	e2833e15	 add         r3, r3, #0x15, 28
  0c1f4	e5930000	 ldr         r0, [r3]
  0c1f8	e59d316c	 ldr         r3, [sp, #0x16C]
  0c1fc	e24330dc	 sub         r3, r3, #0xDC
  0c200	e2833e15	 add         r3, r3, #0x15, 28
  0c204	e5933000	 ldr         r3, [r3]
  0c208	e283300c	 add         r3, r3, #0xC
  0c20c	e5933000	 ldr         r3, [r3]
  0c210	e2833018	 add         r3, r3, #0x18
  0c214	e5933000	 ldr         r3, [r3]
  0c218	e1a0e00f	 mov         lr, pc
  0c21c	e12fff13	 bx          r3
  0c220		 |$LN40@ThreadRun@3|

; 3703 : 
; 3704 :                         SessionRequest(FALSE, FALSE);

  0c220	e3a02000	 mov         r2, #0
  0c224	e3a01000	 mov         r1, #0
  0c228	e59d316c	 ldr         r3, [sp, #0x16C]
  0c22c	e243e0dc	 sub         lr, r3, #0xDC
  0c230	e59d316c	 ldr         r3, [sp, #0x16C]
  0c234	e24300dc	 sub         r0, r3, #0xDC
  0c238	e59e3000	 ldr         r3, [lr]
  0c23c	e2833084	 add         r3, r3, #0x84
  0c240	e5933000	 ldr         r3, [r3]
  0c244	e1a0e00f	 mov         lr, pc
  0c248	e12fff13	 bx          r3

; 3705 : 
; 3706 :                         m_disconnected = TRUE;

  0c24c	e59d316c	 ldr         r3, [sp, #0x16C]
  0c250	e24330dc	 sub         r3, r3, #0xDC
  0c254	e2832f63	 add         r2, r3, #0x63, 30
  0c258	e3a03001	 mov         r3, #1
  0c25c	e5823000	 str         r3, [r2]

; 3707 :                         m_timeout = DO_SUSPEND_TIMEOUT;

  0c260	e59d316c	 ldr         r3, [sp, #0x16C]
  0c264	e24330dc	 sub         r3, r3, #0xDC
  0c268	e2832e17	 add         r2, r3, #0x17, 28
  0c26c	e3a03c0b	 mov         r3, #0xB, 24
  0c270	e38330b8	 orr         r3, r3, #0xB8
  0c274	e5823000	 str         r3, [r2]

; 3708 :                         Sleep(200);

  0c278	e3a000c8	 mov         r0, #0xC8
  0c27c	eb000000	 bl          Sleep

; 3709 :                         // Softreset the MUSB controller to recover from
; 3710 :                         // babble errors when Activesync is connected
; 3711 :                         SoftResetMUSBController();

  0c280	e3a01000	 mov         r1, #0
  0c284	e59d316c	 ldr         r3, [sp, #0x16C]
  0c288	e24320dc	 sub         r2, r3, #0xDC
  0c28c	e59d316c	 ldr         r3, [sp, #0x16C]
  0c290	e24300dc	 sub         r0, r3, #0xDC
  0c294	e5923000	 ldr         r3, [r2]
  0c298	e28330f8	 add         r3, r3, #0xF8
  0c29c	e5933000	 ldr         r3, [r3]
  0c2a0	e1a0e00f	 mov         lr, pc
  0c2a4	e12fff13	 bx          r3

; 3712 : 
; 3713 :                         // ??? enable the session bit in OTG devctl register
; 3714 :                         SessionRequest(TRUE, TRUE);

  0c2a8	e3a02001	 mov         r2, #1
  0c2ac	e3a01001	 mov         r1, #1
  0c2b0	e59d316c	 ldr         r3, [sp, #0x16C]
  0c2b4	e243e0dc	 sub         lr, r3, #0xDC
  0c2b8	e59d316c	 ldr         r3, [sp, #0x16C]
  0c2bc	e24300dc	 sub         r0, r3, #0xDC
  0c2c0	e59e3000	 ldr         r3, [lr]
  0c2c4	e2833084	 add         r3, r3, #0x84
  0c2c8	e5933000	 ldr         r3, [r3]
  0c2cc	e1a0e00f	 mov         lr, pc
  0c2d0	e12fff13	 bx          r3

; 3715 : 
; 3716 :                         if (rc != WAIT_TIMEOUT)

  0c2d4	e59d202c	 ldr         r2, [sp, #0x2C]
  0c2d8	e3a03c01	 mov         r3, #1, 24
  0c2dc	e3833002	 orr         r3, r3, #2
  0c2e0	e1520003	 cmp         r2, r3
  0c2e4	0a000004	 beq         |$LN39@ThreadRun@3|

; 3717 :                             InterruptDone(m_dwSysIntr);

  0c2e8	e59d316c	 ldr         r3, [sp, #0x16C]
  0c2ec	e24330dc	 sub         r3, r3, #0xDC
  0c2f0	e2833f51	 add         r3, r3, #0x51, 30
  0c2f4	e5930000	 ldr         r0, [r3]
  0c2f8	eb000000	 bl          InterruptDone
  0c2fc		 |$LN39@ThreadRun@3|

; 3718 : 
; 3719 :                         continue;

  0c2fc	eafff4cd	 b           |$LN284@ThreadRun@3|

; 3720 :                     }
; 3721 :                     else

  0c300	ea000004	 b           |$LN38@ThreadRun@3|
  0c304		 |$LN44@ThreadRun@3|

; 3722 :                         m_timeout = DO_USBHOST_TIMEOUT;

  0c304	e59d316c	 ldr         r3, [sp, #0x16C]
  0c308	e24330dc	 sub         r3, r3, #0xDC
  0c30c	e2832e17	 add         r2, r3, #0x17, 28
  0c310	e3a03003	 mov         r3, #3
  0c314	e5823000	 str         r3, [r2]
  0c318		 |$LN38@ThreadRun@3|

; 3723 :                 }            
; 3724 :                 else

  0c318	ea00000f	 b           |$LN37@ThreadRun@3|
  0c31c		 |$LN46@ThreadRun@3|

; 3725 :                 {
; 3726 :                     SessionRequest(TRUE, TRUE);

  0c31c	e3a02001	 mov         r2, #1
  0c320	e3a01001	 mov         r1, #1
  0c324	e59d316c	 ldr         r3, [sp, #0x16C]
  0c328	e243e0dc	 sub         lr, r3, #0xDC
  0c32c	e59d316c	 ldr         r3, [sp, #0x16C]
  0c330	e24300dc	 sub         r0, r3, #0xDC
  0c334	e59e3000	 ldr         r3, [lr]
  0c338	e2833084	 add         r3, r3, #0x84
  0c33c	e5933000	 ldr         r3, [r3]
  0c340	e1a0e00f	 mov         lr, pc
  0c344	e12fff13	 bx          r3

; 3727 :                     m_timeout = DO_USBCLK_TIMEOUT;

  0c348	e59d316c	 ldr         r3, [sp, #0x16C]
  0c34c	e24330dc	 sub         r3, r3, #0xDC
  0c350	e2832e17	 add         r2, r3, #0x17, 28
  0c354	e3a03003	 mov         r3, #3
  0c358	e5823000	 str         r3, [r2]
  0c35c		 |$LN37@ThreadRun@3|

; 3728 :                 }
; 3729 : 
; 3730 :                 m_pOTG->dwPwrMgmt = MODE_SYSTEM_NORMAL;

  0c35c	e59d316c	 ldr         r3, [sp, #0x16C]
  0c360	e24330dc	 sub         r3, r3, #0xDC
  0c364	e2833e15	 add         r3, r3, #0x15, 28
  0c368	e5933000	 ldr         r3, [r3]
  0c36c	e2832064	 add         r2, r3, #0x64
  0c370	e3a03000	 mov         r3, #0
  0c374	e5823000	 str         r3, [r2]
  0c378		 |$LN47@ThreadRun@3|

; 3731 :             }
; 3732 :         
; 3733 :             //DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("Interrupt Variable INTRUSB(0x%x) Devctl(0x%x)\n"), m_pOTG->intr_usb, INREG8(&m_pOTG->pUsbGenRegs->DevCtl)));
; 3734 :             if((!m_pOTG->intr_usb) && (!m_pOTG->intr_tx) && (!m_pOTG->intr_rx))

  0c378	e59d316c	 ldr         r3, [sp, #0x16C]
  0c37c	e24330dc	 sub         r3, r3, #0xDC
  0c380	e2833e15	 add         r3, r3, #0x15, 28
  0c384	e5933000	 ldr         r3, [r3]
  0c388	e2833034	 add         r3, r3, #0x34
  0c38c	e5d33000	 ldrb        r3, [r3]
  0c390	e3530000	 cmp         r3, #0
  0c394	1a000026	 bne         |$LN36@ThreadRun@3|
  0c398	e59d316c	 ldr         r3, [sp, #0x16C]
  0c39c	e24330dc	 sub         r3, r3, #0xDC
  0c3a0	e2833e15	 add         r3, r3, #0x15, 28
  0c3a4	e5933000	 ldr         r3, [r3]
  0c3a8	e2833032	 add         r3, r3, #0x32
  0c3ac	e1d330b0	 ldrh        r3, [r3]
  0c3b0	e3530000	 cmp         r3, #0
  0c3b4	1a00001e	 bne         |$LN36@ThreadRun@3|
  0c3b8	e59d316c	 ldr         r3, [sp, #0x16C]
  0c3bc	e24330dc	 sub         r3, r3, #0xDC
  0c3c0	e2833e15	 add         r3, r3, #0x15, 28
  0c3c4	e5933000	 ldr         r3, [r3]
  0c3c8	e2833030	 add         r3, r3, #0x30
  0c3cc	e1d330b0	 ldrh        r3, [r3]
  0c3d0	e3530000	 cmp         r3, #0
  0c3d4	1a000016	 bne         |$LN36@ThreadRun@3|

; 3735 :             {
; 3736 :                if(m_timeout == INFINITE)

  0c3d8	e59d316c	 ldr         r3, [sp, #0x16C]
  0c3dc	e24330dc	 sub         r3, r3, #0xDC
  0c3e0	e2833e17	 add         r3, r3, #0x17, 28
  0c3e4	e5933000	 ldr         r3, [r3]
  0c3e8	e3730001	 cmn         r3, #1
  0c3ec	1a000005	 bne         |$LN35@ThreadRun@3|

; 3737 :                {
; 3738 :                   m_timeout = DO_SUSPEND_TIMEOUT;

  0c3f0	e59d316c	 ldr         r3, [sp, #0x16C]
  0c3f4	e24330dc	 sub         r3, r3, #0xDC
  0c3f8	e2832e17	 add         r2, r3, #0x17, 28
  0c3fc	e3a03c0b	 mov         r3, #0xB, 24
  0c400	e38330b8	 orr         r3, r3, #0xB8
  0c404	e5823000	 str         r3, [r2]
  0c408		 |$LN35@ThreadRun@3|

; 3739 :                }
; 3740 :                DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("Interrupt Variable INTRUSB No interrupt at all\n")));

  0c408	e59f3b20	 ldr         r3, [pc, #0xB20]
  0c40c	e5933440	 ldr         r3, [r3, #0x440]
  0c410	e3130a02	 tst         r3, #2, 20
  0c414	0a000004	 beq         |$LN261@ThreadRun@3|
  0c418	e59f0b28	 ldr         r0, [pc, #0xB28]
  0c41c	eb000000	 bl          NKDbgPrintfW
  0c420	e3a03001	 mov         r3, #1
  0c424	e58d3148	 str         r3, [sp, #0x148]
  0c428	ea000001	 b           |$LN262@ThreadRun@3|
  0c42c		 |$LN261@ThreadRun@3|
  0c42c	e3a03000	 mov         r3, #0
  0c430	e58d3148	 str         r3, [sp, #0x148]
  0c434		 |$LN262@ThreadRun@3|
  0c434		 |$LN36@ThreadRun@3|

; 3741 :             }
; 3742 : 
; 3743 :             // STATUS_RETENTION_WAKEUP is set when IDGND event is signaled
; 3744 :             if (m_dwStatus & STATUS_RETENTION_WAKEUP)

  0c434	e59d316c	 ldr         r3, [sp, #0x16C]
  0c438	e24330dc	 sub         r3, r3, #0xDC
  0c43c	e28330f8	 add         r3, r3, #0xF8
  0c440	e5933000	 ldr         r3, [r3]
  0c444	e3130c01	 tst         r3, #1, 24
  0c448	0a000053	 beq         |$LN34@ThreadRun@3|

; 3745 :             {
; 3746 :                 DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Status Retention with DevCtl Session = 0x%x\r\n"), 
; 3747 :                     INREG8(&m_pOTG->pUsbGenRegs->DevCtl)));

  0c44c	e59f3adc	 ldr         r3, [pc, #0xADC]
  0c450	e5933440	 ldr         r3, [r3, #0x440]
  0c454	e3130a02	 tst         r3, #2, 20
  0c458	0a00000d	 beq         |$LN263@ThreadRun@3|
  0c45c	e59d316c	 ldr         r3, [sp, #0x16C]
  0c460	e24330dc	 sub         r3, r3, #0xDC
  0c464	e2833e15	 add         r3, r3, #0x15, 28
  0c468	e5933000	 ldr         r3, [r3]
  0c46c	e2833020	 add         r3, r3, #0x20
  0c470	e5933000	 ldr         r3, [r3]
  0c474	e2833060	 add         r3, r3, #0x60
  0c478	e5d33000	 ldrb        r3, [r3]
  0c47c	e1a01003	 mov         r1, r3
  0c480	e59f0abc	 ldr         r0, [pc, #0xABC]
  0c484	eb000000	 bl          NKDbgPrintfW
  0c488	e3a03001	 mov         r3, #1
  0c48c	e58d314c	 str         r3, [sp, #0x14C]
  0c490	ea000001	 b           |$LN264@ThreadRun@3|
  0c494		 |$LN263@ThreadRun@3|
  0c494	e3a03000	 mov         r3, #0
  0c498	e58d314c	 str         r3, [sp, #0x14C]
  0c49c		 |$LN264@ThreadRun@3|

; 3748 : 
; 3749 :                 if ((INREG8(&m_pOTG->pUsbGenRegs->DevCtl) & DEVCTL_SESSION) == 0)

  0c49c	e59d316c	 ldr         r3, [sp, #0x16C]
  0c4a0	e24330dc	 sub         r3, r3, #0xDC
  0c4a4	e2833e15	 add         r3, r3, #0x15, 28
  0c4a8	e5933000	 ldr         r3, [r3]
  0c4ac	e2833020	 add         r3, r3, #0x20
  0c4b0	e5933000	 ldr         r3, [r3]
  0c4b4	e2833060	 add         r3, r3, #0x60
  0c4b8	e5d33000	 ldrb        r3, [r3]
  0c4bc	e3130001	 tst         r3, #1
  0c4c0	1a000025	 bne         |$LN33@ThreadRun@3|

; 3750 :                 {
; 3751 :                     SETREG8(&m_pOTG->pUsbGenRegs->DevCtl, DEVCTL_SESSION);

  0c4c4	e59d316c	 ldr         r3, [sp, #0x16C]
  0c4c8	e24330dc	 sub         r3, r3, #0xDC
  0c4cc	e2833e15	 add         r3, r3, #0x15, 28
  0c4d0	e5933000	 ldr         r3, [r3]
  0c4d4	e2833020	 add         r3, r3, #0x20
  0c4d8	e5933000	 ldr         r3, [r3]
  0c4dc	e2833060	 add         r3, r3, #0x60
  0c4e0	e5d33000	 ldrb        r3, [r3]
  0c4e4	e3833001	 orr         r3, r3, #1
  0c4e8	e20320ff	 and         r2, r3, #0xFF
  0c4ec	e59d316c	 ldr         r3, [sp, #0x16C]
  0c4f0	e24330dc	 sub         r3, r3, #0xDC
  0c4f4	e2833e15	 add         r3, r3, #0x15, 28
  0c4f8	e5933000	 ldr         r3, [r3]
  0c4fc	e2833020	 add         r3, r3, #0x20
  0c500	e5933000	 ldr         r3, [r3]
  0c504	e2833060	 add         r3, r3, #0x60
  0c508	e5c32000	 strb        r2, [r3]

; 3752 : 
; 3753 :                     // (workaround) wait and set session bit again.  Otherwise, sometimes USB transceiver VBUS doesn't go to 5V.
; 3754 :                     Sleep(100);

  0c50c	e3a00064	 mov         r0, #0x64
  0c510	eb000000	 bl          Sleep

; 3755 :                     SETREG8(&m_pOTG->pUsbGenRegs->DevCtl, DEVCTL_SESSION);

  0c514	e59d316c	 ldr         r3, [sp, #0x16C]
  0c518	e24330dc	 sub         r3, r3, #0xDC
  0c51c	e2833e15	 add         r3, r3, #0x15, 28
  0c520	e5933000	 ldr         r3, [r3]
  0c524	e2833020	 add         r3, r3, #0x20
  0c528	e5933000	 ldr         r3, [r3]
  0c52c	e2833060	 add         r3, r3, #0x60
  0c530	e5d33000	 ldrb        r3, [r3]
  0c534	e3833001	 orr         r3, r3, #1
  0c538	e20320ff	 and         r2, r3, #0xFF
  0c53c	e59d316c	 ldr         r3, [sp, #0x16C]
  0c540	e24330dc	 sub         r3, r3, #0xDC
  0c544	e2833e15	 add         r3, r3, #0x15, 28
  0c548	e5933000	 ldr         r3, [r3]
  0c54c	e2833020	 add         r3, r3, #0x20
  0c550	e5933000	 ldr         r3, [r3]
  0c554	e2833060	 add         r3, r3, #0x60
  0c558	e5c32000	 strb        r2, [r3]
  0c55c		 |$LN33@ThreadRun@3|

; 3756 :                 }
; 3757 :             
; 3758 :                 m_dwStatus &= ~STATUS_RETENTION_WAKEUP;

  0c55c	e59d316c	 ldr         r3, [sp, #0x16C]
  0c560	e24330dc	 sub         r3, r3, #0xDC
  0c564	e28330f8	 add         r3, r3, #0xF8
  0c568	e5932000	 ldr         r2, [r3]
  0c56c	e3e03c01	 mvn         r3, #1, 24
  0c570	e0022003	 and         r2, r2, r3
  0c574	e59d316c	 ldr         r3, [sp, #0x16C]
  0c578	e24330dc	 sub         r3, r3, #0xDC
  0c57c	e28330f8	 add         r3, r3, #0xF8
  0c580	e5832000	 str         r2, [r3]

; 3759 :                 m_timeout = DO_SESSCHK_TIMEOUT;            

  0c584	e59d316c	 ldr         r3, [sp, #0x16C]
  0c588	e24330dc	 sub         r3, r3, #0xDC
  0c58c	e2832e17	 add         r2, r3, #0x17, 28
  0c590	e3a03c13	 mov         r3, #0x13, 24
  0c594	e3833088	 orr         r3, r3, #0x88
  0c598	e5823000	 str         r3, [r2]
  0c59c		 |$LN34@ThreadRun@3|

; 3760 :             }
; 3761 : 
; 3762 :             if (m_dwStatus & STATUS_HNP_SESSION_PROCESS)

  0c59c	e59d316c	 ldr         r3, [sp, #0x16C]
  0c5a0	e24330dc	 sub         r3, r3, #0xDC
  0c5a4	e28330f8	 add         r3, r3, #0xF8
  0c5a8	e5933000	 ldr         r3, [r3]
  0c5ac	e3130020	 tst         r3, #0x20
  0c5b0	0a00003b	 beq         |$LN32@ThreadRun@3|

; 3763 :             {
; 3764 :                 DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("We can process role switch loading now\r\n")));

  0c5b4	e59f3974	 ldr         r3, [pc, #0x974]
  0c5b8	e5933440	 ldr         r3, [r3, #0x440]
  0c5bc	e3130a02	 tst         r3, #2, 20
  0c5c0	0a000004	 beq         |$LN265@ThreadRun@3|
  0c5c4	e59f0974	 ldr         r0, [pc, #0x974]
  0c5c8	eb000000	 bl          NKDbgPrintfW
  0c5cc	e3a03001	 mov         r3, #1
  0c5d0	e58d3150	 str         r3, [sp, #0x150]
  0c5d4	ea000001	 b           |$LN266@ThreadRun@3|
  0c5d8		 |$LN265@ThreadRun@3|
  0c5d8	e3a03000	 mov         r3, #0
  0c5dc	e58d3150	 str         r3, [sp, #0x150]
  0c5e0		 |$LN266@ThreadRun@3|

; 3765 :                 if ((INREG8(&m_pOTG->pUsbGenRegs->DevCtl) & DEVCTL_HOSTMODE) == 0x00)

  0c5e0	e59d316c	 ldr         r3, [sp, #0x16C]
  0c5e4	e24330dc	 sub         r3, r3, #0xDC
  0c5e8	e2833e15	 add         r3, r3, #0x15, 28
  0c5ec	e5933000	 ldr         r3, [r3]
  0c5f0	e2833020	 add         r3, r3, #0x20
  0c5f4	e5933000	 ldr         r3, [r3]
  0c5f8	e2833060	 add         r3, r3, #0x60
  0c5fc	e5d33000	 ldrb        r3, [r3]
  0c600	e3130004	 tst         r3, #4
  0c604	1a00000e	 bne         |$LN31@ThreadRun@3|

; 3766 :                     m_pOTG->intr_usb |= INTRUSB_RESET;

  0c608	e59d316c	 ldr         r3, [sp, #0x16C]
  0c60c	e24330dc	 sub         r3, r3, #0xDC
  0c610	e2833e15	 add         r3, r3, #0x15, 28
  0c614	e5933000	 ldr         r3, [r3]
  0c618	e2833034	 add         r3, r3, #0x34
  0c61c	e5d33000	 ldrb        r3, [r3]
  0c620	e3831004	 orr         r1, r3, #4
  0c624	e59d316c	 ldr         r3, [sp, #0x16C]
  0c628	e24330dc	 sub         r3, r3, #0xDC
  0c62c	e2833e15	 add         r3, r3, #0x15, 28
  0c630	e5933000	 ldr         r3, [r3]
  0c634	e2832034	 add         r2, r3, #0x34
  0c638	e20130ff	 and         r3, r1, #0xFF
  0c63c	e5c23000	 strb        r3, [r2]

; 3767 :                 else

  0c640	ea00000d	 b           |$LN30@ThreadRun@3|
  0c644		 |$LN31@ThreadRun@3|

; 3768 :                     m_pOTG->intr_usb |= INTRUSB_CONN;

  0c644	e59d316c	 ldr         r3, [sp, #0x16C]
  0c648	e24330dc	 sub         r3, r3, #0xDC
  0c64c	e2833e15	 add         r3, r3, #0x15, 28
  0c650	e5933000	 ldr         r3, [r3]
  0c654	e2833034	 add         r3, r3, #0x34
  0c658	e5d33000	 ldrb        r3, [r3]
  0c65c	e3831010	 orr         r1, r3, #0x10
  0c660	e59d316c	 ldr         r3, [sp, #0x16C]
  0c664	e24330dc	 sub         r3, r3, #0xDC
  0c668	e2833e15	 add         r3, r3, #0x15, 28
  0c66c	e5933000	 ldr         r3, [r3]
  0c670	e2832034	 add         r2, r3, #0x34
  0c674	e20130ff	 and         r3, r1, #0xFF
  0c678	e5c23000	 strb        r3, [r2]
  0c67c		 |$LN30@ThreadRun@3|

; 3769 :                 m_dwStatus &= ~STATUS_HNP_SESSION_PROCESS;

  0c67c	e59d316c	 ldr         r3, [sp, #0x16C]
  0c680	e24330dc	 sub         r3, r3, #0xDC
  0c684	e28330f8	 add         r3, r3, #0xF8
  0c688	e5932000	 ldr         r2, [r3]
  0c68c	e3e03020	 mvn         r3, #0x20
  0c690	e0022003	 and         r2, r2, r3
  0c694	e59d316c	 ldr         r3, [sp, #0x16C]
  0c698	e24330dc	 sub         r3, r3, #0xDC
  0c69c	e28330f8	 add         r3, r3, #0xF8
  0c6a0	e5832000	 str         r2, [r3]
  0c6a4		 |$LN32@ThreadRun@3|

; 3770 :             }
; 3771 :      
; 3772 :             // Implement according to USB Interrupt Service Routine
; 3773 :             // USBOTGHS Functional Spec Rev 0.1 Figure 8.1 (89/174)
; 3774 : 
; 3775 :             if (m_pOTG->intr_usb)

  0c6a4	e59d316c	 ldr         r3, [sp, #0x16C]
  0c6a8	e24330dc	 sub         r3, r3, #0xDC
  0c6ac	e2833e15	 add         r3, r3, #0x15, 28
  0c6b0	e5933000	 ldr         r3, [r3]
  0c6b4	e2833034	 add         r3, r3, #0x34
  0c6b8	e5d33000	 ldrb        r3, [r3]
  0c6bc	e3530000	 cmp         r3, #0
  0c6c0	0a000008	 beq         |$LN29@ThreadRun@3|

; 3776 :             {            
; 3777 :                 OTG_ConfigISR_stage1();         

  0c6c4	e59d316c	 ldr         r3, [sp, #0x16C]
  0c6c8	e24320dc	 sub         r2, r3, #0xDC
  0c6cc	e59d316c	 ldr         r3, [sp, #0x16C]
  0c6d0	e24300dc	 sub         r0, r3, #0xDC
  0c6d4	e5923000	 ldr         r3, [r2]
  0c6d8	e28330cc	 add         r3, r3, #0xCC
  0c6dc	e5933000	 ldr         r3, [r3]
  0c6e0	e1a0e00f	 mov         lr, pc
  0c6e4	e12fff13	 bx          r3
  0c6e8		 |$LN29@ThreadRun@3|

; 3778 :             }
; 3779 : 
; 3780 :             if ((m_dwStatus & STATUS_HNP_SESSION_MASK) == 0x00)

  0c6e8	e59d316c	 ldr         r3, [sp, #0x16C]
  0c6ec	e24330dc	 sub         r3, r3, #0xDC
  0c6f0	e28330f8	 add         r3, r3, #0xF8
  0c6f4	e5933000	 ldr         r3, [r3]
  0c6f8	e3130030	 tst         r3, #0x30
  0c6fc	1a000058	 bne         |$LN28@ThreadRun@3|

; 3781 :             {
; 3782 :                 // Here is the handling of Tx/Rx
; 3783 :                 // First handling of Endpoint 0 interrupt first.
; 3784 :                 if (m_pOTG->intr_tx & INTR_EP(0))

  0c700	e59d316c	 ldr         r3, [sp, #0x16C]
  0c704	e24330dc	 sub         r3, r3, #0xDC
  0c708	e2833e15	 add         r3, r3, #0x15, 28
  0c70c	e5933000	 ldr         r3, [r3]
  0c710	e2833032	 add         r3, r3, #0x32
  0c714	e1d330b0	 ldrh        r3, [r3]
  0c718	e3130001	 tst         r3, #1
  0c71c	0a000008	 beq         |$LN27@ThreadRun@3|

; 3785 :                 {
; 3786 :                     OTG_ProcessEP0();

  0c720	e59d316c	 ldr         r3, [sp, #0x16C]
  0c724	e24320dc	 sub         r2, r3, #0xDC
  0c728	e59d316c	 ldr         r3, [sp, #0x16C]
  0c72c	e24300dc	 sub         r0, r3, #0xDC
  0c730	e5923000	 ldr         r3, [r2]
  0c734	e28330d8	 add         r3, r3, #0xD8
  0c738	e5933000	 ldr         r3, [r3]
  0c73c	e1a0e00f	 mov         lr, pc
  0c740	e12fff13	 bx          r3
  0c744		 |$LN27@ThreadRun@3|

; 3787 :                 }
; 3788 : 
; 3789 :                 // It may be a bit odd of why not doing all the things in same loop
; 3790 :                 // but this is according to the functional spec. Reference: Inventra MUSBMHDRC 
; 3791 :                 // Programmer's Guide pg 46
; 3792 :                 // Second now handling of Rx 1-15 
; 3793 :                 i = 1;

  0c744	e3a03001	 mov         r3, #1
  0c748	e58d3018	 str         r3, [sp, #0x18]
  0c74c		 |$LN26@ThreadRun@3|

; 3794 :                 while (i <= 15)

  0c74c	e59d3018	 ldr         r3, [sp, #0x18]
  0c750	e353000f	 cmp         r3, #0xF
  0c754	ca00001b	 bgt         |$LN25@ThreadRun@3|

; 3795 :                 {
; 3796 :                     if (m_pOTG->intr_rx & INTR_EP(i))

  0c758	e59d316c	 ldr         r3, [sp, #0x16C]
  0c75c	e24330dc	 sub         r3, r3, #0xDC
  0c760	e2833e15	 add         r3, r3, #0x15, 28
  0c764	e5933000	 ldr         r3, [r3]
  0c768	e2833030	 add         r3, r3, #0x30
  0c76c	e1d330b0	 ldrh        r3, [r3]
  0c770	e1a01003	 mov         r1, r3
  0c774	e59d2018	 ldr         r2, [sp, #0x18]
  0c778	e3a03001	 mov         r3, #1
  0c77c	e1a03213	 mov         r3, r3, lsl r2
  0c780	e1110003	 tst         r1, r3
  0c784	0a00000b	 beq         |$LN24@ThreadRun@3|

; 3797 :                         OTG_ProcessEPx((UCHAR)i, TRUE);

  0c788	e3a02001	 mov         r2, #1
  0c78c	e59d3018	 ldr         r3, [sp, #0x18]
  0c790	e20310ff	 and         r1, r3, #0xFF
  0c794	e59d316c	 ldr         r3, [sp, #0x16C]
  0c798	e243e0dc	 sub         lr, r3, #0xDC
  0c79c	e59d316c	 ldr         r3, [sp, #0x16C]
  0c7a0	e24300dc	 sub         r0, r3, #0xDC
  0c7a4	e59e3000	 ldr         r3, [lr]
  0c7a8	e28330dc	 add         r3, r3, #0xDC
  0c7ac	e5933000	 ldr         r3, [r3]
  0c7b0	e1a0e00f	 mov         lr, pc
  0c7b4	e12fff13	 bx          r3
  0c7b8		 |$LN24@ThreadRun@3|

; 3798 :                     i++;

  0c7b8	e59d3018	 ldr         r3, [sp, #0x18]
  0c7bc	e2833001	 add         r3, r3, #1
  0c7c0	e58d3018	 str         r3, [sp, #0x18]

; 3799 :                 }

  0c7c4	eaffffe0	 b           |$LN26@ThreadRun@3|
  0c7c8		 |$LN25@ThreadRun@3|

; 3800 : 
; 3801 :                 // Third now handling of Tx 1-15
; 3802 :                 i = 1;

  0c7c8	e3a03001	 mov         r3, #1
  0c7cc	e58d3018	 str         r3, [sp, #0x18]

; 3803 :                 if (!(m_dwStatus & (STATUS_DISCONN_COMPLETE|STATUS_DISCONN_REQUEST)))

  0c7d0	e59d316c	 ldr         r3, [sp, #0x16C]
  0c7d4	e24330dc	 sub         r3, r3, #0xDC
  0c7d8	e28330f8	 add         r3, r3, #0xF8
  0c7dc	e5933000	 ldr         r3, [r3]
  0c7e0	e313000a	 tst         r3, #0xA
  0c7e4	1a00001e	 bne         |$LN23@ThreadRun@3|
  0c7e8		 |$LN22@ThreadRun@3|

; 3804 :                 {
; 3805 :                     while (i <= 15)

  0c7e8	e59d3018	 ldr         r3, [sp, #0x18]
  0c7ec	e353000f	 cmp         r3, #0xF
  0c7f0	ca00001b	 bgt         |$LN21@ThreadRun@3|

; 3806 :                     {
; 3807 :                         if (m_pOTG->intr_tx & INTR_EP(i))

  0c7f4	e59d316c	 ldr         r3, [sp, #0x16C]
  0c7f8	e24330dc	 sub         r3, r3, #0xDC
  0c7fc	e2833e15	 add         r3, r3, #0x15, 28
  0c800	e5933000	 ldr         r3, [r3]
  0c804	e2833032	 add         r3, r3, #0x32
  0c808	e1d330b0	 ldrh        r3, [r3]
  0c80c	e1a01003	 mov         r1, r3
  0c810	e59d2018	 ldr         r2, [sp, #0x18]
  0c814	e3a03001	 mov         r3, #1
  0c818	e1a03213	 mov         r3, r3, lsl r2
  0c81c	e1110003	 tst         r1, r3
  0c820	0a00000b	 beq         |$LN20@ThreadRun@3|

; 3808 :                             OTG_ProcessEPx((UCHAR)i, FALSE);

  0c824	e3a02000	 mov         r2, #0
  0c828	e59d3018	 ldr         r3, [sp, #0x18]
  0c82c	e20310ff	 and         r1, r3, #0xFF
  0c830	e59d316c	 ldr         r3, [sp, #0x16C]
  0c834	e243e0dc	 sub         lr, r3, #0xDC
  0c838	e59d316c	 ldr         r3, [sp, #0x16C]
  0c83c	e24300dc	 sub         r0, r3, #0xDC
  0c840	e59e3000	 ldr         r3, [lr]
  0c844	e28330dc	 add         r3, r3, #0xDC
  0c848	e5933000	 ldr         r3, [r3]
  0c84c	e1a0e00f	 mov         lr, pc
  0c850	e12fff13	 bx          r3
  0c854		 |$LN20@ThreadRun@3|

; 3809 :                         i++;

  0c854	e59d3018	 ldr         r3, [sp, #0x18]
  0c858	e2833001	 add         r3, r3, #1
  0c85c	e58d3018	 str         r3, [sp, #0x18]

; 3810 :                     }

  0c860	eaffffe0	 b           |$LN22@ThreadRun@3|
  0c864		 |$LN21@ThreadRun@3|
  0c864		 |$LN23@ThreadRun@3|
  0c864		 |$LN28@ThreadRun@3|

; 3811 :                 }
; 3812 :             }
; 3813 : 
; 3814 :             if (m_pOTG->intr_usb)

  0c864	e59d316c	 ldr         r3, [sp, #0x16C]
  0c868	e24330dc	 sub         r3, r3, #0xDC
  0c86c	e2833e15	 add         r3, r3, #0x15, 28
  0c870	e5933000	 ldr         r3, [r3]
  0c874	e2833034	 add         r3, r3, #0x34
  0c878	e5d33000	 ldrb        r3, [r3]
  0c87c	e3530000	 cmp         r3, #0
  0c880	0a000008	 beq         |$LN19@ThreadRun@3|

; 3815 :             {            
; 3816 :                 OTG_ConfigISR_stage2();         

  0c884	e59d316c	 ldr         r3, [sp, #0x16C]
  0c888	e24320dc	 sub         r2, r3, #0xDC
  0c88c	e59d316c	 ldr         r3, [sp, #0x16C]
  0c890	e24300dc	 sub         r0, r3, #0xDC
  0c894	e5923000	 ldr         r3, [r2]
  0c898	e28330d0	 add         r3, r3, #0xD0
  0c89c	e5933000	 ldr         r3, [r3]
  0c8a0	e1a0e00f	 mov         lr, pc
  0c8a4	e12fff13	 bx          r3
  0c8a8		 |$LN19@ThreadRun@3|

; 3817 :             }
; 3818 : 
; 3819 :             if(m_handleVBUSError)

  0c8a8	e59d316c	 ldr         r3, [sp, #0x16C]
  0c8ac	e24330dc	 sub         r3, r3, #0xDC
  0c8b0	e2833f65	 add         r3, r3, #0x65, 30
  0c8b4	e5933000	 ldr         r3, [r3]
  0c8b8	e3530000	 cmp         r3, #0
  0c8bc	0a000018	 beq         |$LN18@ThreadRun@3|

; 3820 :             {
; 3821 :                 SessionRequest(FALSE, FALSE);

  0c8c0	e3a02000	 mov         r2, #0
  0c8c4	e3a01000	 mov         r1, #0
  0c8c8	e59d316c	 ldr         r3, [sp, #0x16C]
  0c8cc	e243e0dc	 sub         lr, r3, #0xDC
  0c8d0	e59d316c	 ldr         r3, [sp, #0x16C]
  0c8d4	e24300dc	 sub         r0, r3, #0xDC
  0c8d8	e59e3000	 ldr         r3, [lr]
  0c8dc	e2833084	 add         r3, r3, #0x84
  0c8e0	e5933000	 ldr         r3, [r3]
  0c8e4	e1a0e00f	 mov         lr, pc
  0c8e8	e12fff13	 bx          r3

; 3822 :                 m_handleVBUSError = FALSE;

  0c8ec	e59d316c	 ldr         r3, [sp, #0x16C]
  0c8f0	e24330dc	 sub         r3, r3, #0xDC
  0c8f4	e2832f65	 add         r2, r3, #0x65, 30
  0c8f8	e3a03000	 mov         r3, #0
  0c8fc	e5823000	 str         r3, [r2]

; 3823 : 			    m_timeout = m_OTGRegCfg.startupTimeout;

  0c900	e59d316c	 ldr         r3, [sp, #0x16C]
  0c904	e24330dc	 sub         r3, r3, #0xDC
  0c908	e2831f41	 add         r1, r3, #0x41, 30
  0c90c	e59d316c	 ldr         r3, [sp, #0x16C]
  0c910	e24330dc	 sub         r3, r3, #0xDC
  0c914	e2832e17	 add         r2, r3, #0x17, 28
  0c918	e5913000	 ldr         r3, [r1]
  0c91c	e5823000	 str         r3, [r2]

; 3824 :                 continue;

  0c920	eafff344	 b           |$LN285@ThreadRun@3|
  0c924		 |$LN18@ThreadRun@3|

; 3825 :             }
; 3826 : 
; 3827 :             // We can clear the intr_usb, intr_tx & intr_rx
; 3828 :             if ((m_dwStatus & STATUS_HNP_SESSION_MASK) == 0x00)

  0c924	e59d316c	 ldr         r3, [sp, #0x16C]
  0c928	e24330dc	 sub         r3, r3, #0xDC
  0c92c	e28330f8	 add         r3, r3, #0xF8
  0c930	e5933000	 ldr         r3, [r3]
  0c934	e3130030	 tst         r3, #0x30
  0c938	1a00000d	 bne         |$LN17@ThreadRun@3|

; 3829 :             {
; 3830 :                 m_pOTG->intr_rx = 0;

  0c93c	e59d316c	 ldr         r3, [sp, #0x16C]
  0c940	e24330dc	 sub         r3, r3, #0xDC
  0c944	e2833e15	 add         r3, r3, #0x15, 28
  0c948	e5933000	 ldr         r3, [r3]
  0c94c	e2832030	 add         r2, r3, #0x30
  0c950	e3a03000	 mov         r3, #0
  0c954	e1c230b0	 strh        r3, [r2]

; 3831 :                 m_pOTG->intr_tx = 0;

  0c958	e59d316c	 ldr         r3, [sp, #0x16C]
  0c95c	e24330dc	 sub         r3, r3, #0xDC
  0c960	e2833e15	 add         r3, r3, #0x15, 28
  0c964	e5933000	 ldr         r3, [r3]
  0c968	e2832032	 add         r2, r3, #0x32
  0c96c	e3a03000	 mov         r3, #0
  0c970	e1c230b0	 strh        r3, [r2]
  0c974		 |$LN17@ThreadRun@3|

; 3832 :             }
; 3833 :             m_pOTG->intr_usb = 0;

  0c974	e59d316c	 ldr         r3, [sp, #0x16C]
  0c978	e24330dc	 sub         r3, r3, #0xDC
  0c97c	e2833e15	 add         r3, r3, #0x15, 28
  0c980	e5933000	 ldr         r3, [r3]
  0c984	e2832034	 add         r2, r3, #0x34
  0c988	e3a03000	 mov         r3, #0
  0c98c	e5c23000	 strb        r3, [r2]

; 3834 :         
; 3835 :             if (m_dwStatus & STATUS_CONNECT)

  0c990	e59d316c	 ldr         r3, [sp, #0x16C]
  0c994	e24330dc	 sub         r3, r3, #0xDC
  0c998	e28330f8	 add         r3, r3, #0xF8
  0c99c	e5933000	 ldr         r3, [r3]
  0c9a0	e3130001	 tst         r3, #1
  0c9a4	0a00001c	 beq         |$LN16@ThreadRun@3|

; 3836 :             {
; 3837 :                 m_dwStatus &= ~STATUS_CONNECT;

  0c9a8	e59d316c	 ldr         r3, [sp, #0x16C]
  0c9ac	e24330dc	 sub         r3, r3, #0xDC
  0c9b0	e28330f8	 add         r3, r3, #0xF8
  0c9b4	e5932000	 ldr         r2, [r3]
  0c9b8	e3e03001	 mvn         r3, #1
  0c9bc	e0022003	 and         r2, r2, r3
  0c9c0	e59d316c	 ldr         r3, [sp, #0x16C]
  0c9c4	e24330dc	 sub         r3, r3, #0xDC
  0c9c8	e28330f8	 add         r3, r3, #0xF8
  0c9cc	e5832000	 str         r2, [r3]

; 3838 :                 if (m_pOTG->operateMode == HOST_MODE)

  0c9d0	e59d316c	 ldr         r3, [sp, #0x16C]
  0c9d4	e24330dc	 sub         r3, r3, #0xDC
  0c9d8	e2833e15	 add         r3, r3, #0x15, 28
  0c9dc	e5933000	 ldr         r3, [r3]
  0c9e0	e2833035	 add         r3, r3, #0x35
  0c9e4	e5d33000	 ldrb        r3, [r3]
  0c9e8	e3530002	 cmp         r3, #2
  0c9ec	1a000005	 bne         |$LN15@ThreadRun@3|

; 3839 :                     m_timeout = DO_USBHOST_TIMEOUT;

  0c9f0	e59d316c	 ldr         r3, [sp, #0x16C]
  0c9f4	e24330dc	 sub         r3, r3, #0xDC
  0c9f8	e2832e17	 add         r2, r3, #0x17, 28
  0c9fc	e3a03003	 mov         r3, #3
  0ca00	e5823000	 str         r3, [r2]

; 3840 :                 else

  0ca04	ea000004	 b           |$LN14@ThreadRun@3|
  0ca08		 |$LN15@ThreadRun@3|

; 3841 :                     m_timeout = INFINITE;            

  0ca08	e59d316c	 ldr         r3, [sp, #0x16C]
  0ca0c	e24330dc	 sub         r3, r3, #0xDC
  0ca10	e2832e17	 add         r2, r3, #0x17, 28
  0ca14	e3e03000	 mvn         r3, #0
  0ca18	e5823000	 str         r3, [r2]
  0ca1c		 |$LN14@ThreadRun@3|
  0ca1c		 |$LN16@ThreadRun@3|

; 3842 :             }
; 3843 : 
; 3844 : 
; 3845 :             if ((m_dwStatus & STATUS_DISCONN_COMPLETE) && (m_pOTG->connect_status & CONN_DC)) 

  0ca1c	e59d316c	 ldr         r3, [sp, #0x16C]
  0ca20	e24330dc	 sub         r3, r3, #0xDC
  0ca24	e28330f8	 add         r3, r3, #0xF8
  0ca28	e5933000	 ldr         r3, [r3]
  0ca2c	e3130008	 tst         r3, #8
  0ca30	0a0000cb	 beq         |$LN13@ThreadRun@3|
  0ca34	e59d316c	 ldr         r3, [sp, #0x16C]
  0ca38	e24330dc	 sub         r3, r3, #0xDC
  0ca3c	e2833e15	 add         r3, r3, #0x15, 28
  0ca40	e5933000	 ldr         r3, [r3]
  0ca44	e283304c	 add         r3, r3, #0x4C
  0ca48	e5d33000	 ldrb        r3, [r3]
  0ca4c	e3130004	 tst         r3, #4
  0ca50	0a0000c3	 beq         |$LN13@ThreadRun@3|

; 3846 :             {                        
; 3847 :                 m_dwStatus &= ~(STATUS_DISCONN_COMPLETE|STATUS_WAIT_HOST_DISCONN_COMPLETE);                       

  0ca54	e59d316c	 ldr         r3, [sp, #0x16C]
  0ca58	e24330dc	 sub         r3, r3, #0xDC
  0ca5c	e28330f8	 add         r3, r3, #0xF8
  0ca60	e5932000	 ldr         r2, [r3]
  0ca64	e3e03048	 mvn         r3, #0x48
  0ca68	e0022003	 and         r2, r2, r3
  0ca6c	e59d316c	 ldr         r3, [sp, #0x16C]
  0ca70	e24330dc	 sub         r3, r3, #0xDC
  0ca74	e28330f8	 add         r3, r3, #0xF8
  0ca78	e5832000	 str         r2, [r3]

; 3848 :                 m_pOTG->connect_status &= ~CONN_DC;

  0ca7c	e59d316c	 ldr         r3, [sp, #0x16C]
  0ca80	e24330dc	 sub         r3, r3, #0xDC
  0ca84	e2833e15	 add         r3, r3, #0x15, 28
  0ca88	e5933000	 ldr         r3, [r3]
  0ca8c	e283304c	 add         r3, r3, #0x4C
  0ca90	e5d33000	 ldrb        r3, [r3]
  0ca94	e1a02003	 mov         r2, r3
  0ca98	e3e03004	 mvn         r3, #4
  0ca9c	e0021003	 and         r1, r2, r3
  0caa0	e59d316c	 ldr         r3, [sp, #0x16C]
  0caa4	e24330dc	 sub         r3, r3, #0xDC
  0caa8	e2833e15	 add         r3, r3, #0x15, 28
  0caac	e5933000	 ldr         r3, [r3]
  0cab0	e283204c	 add         r2, r3, #0x4C
  0cab4	e20130ff	 and         r3, r1, #0xFF
  0cab8	e5c23000	 strb        r3, [r2]

; 3849 :                 if (m_bRequestSession)

  0cabc	e59d316c	 ldr         r3, [sp, #0x16C]
  0cac0	e24330dc	 sub         r3, r3, #0xDC
  0cac4	e2833f59	 add         r3, r3, #0x59, 30
  0cac8	e5933000	 ldr         r3, [r3]
  0cacc	e3530000	 cmp         r3, #0
  0cad0	0a000036	 beq         |$LN12@ThreadRun@3|

; 3850 :                 {
; 3851 :                     m_bRequestSession = FALSE;                                

  0cad4	e59d316c	 ldr         r3, [sp, #0x16C]
  0cad8	e24330dc	 sub         r3, r3, #0xDC
  0cadc	e2832f59	 add         r2, r3, #0x59, 30
  0cae0	e3a03000	 mov         r3, #0
  0cae4	e5823000	 str         r3, [r2]

; 3852 :                     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Request Session Again\r\n")));

  0cae8	e59f3440	 ldr         r3, [pc, #0x440]
  0caec	e5933440	 ldr         r3, [r3, #0x440]
  0caf0	e3130a02	 tst         r3, #2, 20
  0caf4	0a000004	 beq         |$LN267@ThreadRun@3|
  0caf8	e59f043c	 ldr         r0, [pc, #0x43C]
  0cafc	eb000000	 bl          NKDbgPrintfW
  0cb00	e3a03001	 mov         r3, #1
  0cb04	e58d3154	 str         r3, [sp, #0x154]
  0cb08	ea000001	 b           |$LN268@ThreadRun@3|
  0cb0c		 |$LN267@ThreadRun@3|
  0cb0c	e3a03000	 mov         r3, #0
  0cb10	e58d3154	 str         r3, [sp, #0x154]
  0cb14		 |$LN268@ThreadRun@3|

; 3853 :                     SETREG8(&m_pOTG->pUsbGenRegs->DevCtl, DEVCTL_SESSION);  

  0cb14	e59d316c	 ldr         r3, [sp, #0x16C]
  0cb18	e24330dc	 sub         r3, r3, #0xDC
  0cb1c	e2833e15	 add         r3, r3, #0x15, 28
  0cb20	e5933000	 ldr         r3, [r3]
  0cb24	e2833020	 add         r3, r3, #0x20
  0cb28	e5933000	 ldr         r3, [r3]
  0cb2c	e2833060	 add         r3, r3, #0x60
  0cb30	e5d33000	 ldrb        r3, [r3]
  0cb34	e3833001	 orr         r3, r3, #1
  0cb38	e20320ff	 and         r2, r3, #0xFF
  0cb3c	e59d316c	 ldr         r3, [sp, #0x16C]
  0cb40	e24330dc	 sub         r3, r3, #0xDC
  0cb44	e2833e15	 add         r3, r3, #0x15, 28
  0cb48	e5933000	 ldr         r3, [r3]
  0cb4c	e2833020	 add         r3, r3, #0x20
  0cb50	e5933000	 ldr         r3, [r3]
  0cb54	e2833060	 add         r3, r3, #0x60
  0cb58	e5c32000	 strb        r2, [r3]

; 3854 : 
; 3855 :                     // (workaround) wait and set session bit again.  Otherwise, sometimes USB transceiver VBUS doesn't go to 5V.
; 3856 :                     Sleep(100);

  0cb5c	e3a00064	 mov         r0, #0x64
  0cb60	eb000000	 bl          Sleep

; 3857 :                     SETREG8(&m_pOTG->pUsbGenRegs->DevCtl, DEVCTL_SESSION);      

  0cb64	e59d316c	 ldr         r3, [sp, #0x16C]
  0cb68	e24330dc	 sub         r3, r3, #0xDC
  0cb6c	e2833e15	 add         r3, r3, #0x15, 28
  0cb70	e5933000	 ldr         r3, [r3]
  0cb74	e2833020	 add         r3, r3, #0x20
  0cb78	e5933000	 ldr         r3, [r3]
  0cb7c	e2833060	 add         r3, r3, #0x60
  0cb80	e5d33000	 ldrb        r3, [r3]
  0cb84	e3833001	 orr         r3, r3, #1
  0cb88	e20320ff	 and         r2, r3, #0xFF
  0cb8c	e59d316c	 ldr         r3, [sp, #0x16C]
  0cb90	e24330dc	 sub         r3, r3, #0xDC
  0cb94	e2833e15	 add         r3, r3, #0x15, 28
  0cb98	e5933000	 ldr         r3, [r3]
  0cb9c	e2833020	 add         r3, r3, #0x20
  0cba0	e5933000	 ldr         r3, [r3]
  0cba4	e2833060	 add         r3, r3, #0x60
  0cba8	e5c32000	 strb        r2, [r3]

; 3858 : 
; 3859 :                 }
; 3860 :                 else

  0cbac	ea00003e	 b           |$LN11@ThreadRun@3|
  0cbb0		 |$LN12@ThreadRun@3|

; 3861 :                 {
; 3862 :                     if (m_bExtendOTGSuspend)

  0cbb0	e59d316c	 ldr         r3, [sp, #0x16C]
  0cbb4	e24330dc	 sub         r3, r3, #0xDC
  0cbb8	e2833f61	 add         r3, r3, #0x61, 30
  0cbbc	e5933000	 ldr         r3, [r3]
  0cbc0	e3530000	 cmp         r3, #0
  0cbc4	0a00000b	 beq         |$LN10@ThreadRun@3|

; 3863 :                     {
; 3864 :                         m_bExtendOTGSuspend = FALSE;

  0cbc8	e59d316c	 ldr         r3, [sp, #0x16C]
  0cbcc	e24330dc	 sub         r3, r3, #0xDC
  0cbd0	e2832f61	 add         r2, r3, #0x61, 30
  0cbd4	e3a03000	 mov         r3, #0
  0cbd8	e5823000	 str         r3, [r2]

; 3865 :                         m_timeout = DO_SESSCHK_TIMEOUT;

  0cbdc	e59d316c	 ldr         r3, [sp, #0x16C]
  0cbe0	e24330dc	 sub         r3, r3, #0xDC
  0cbe4	e2832e17	 add         r2, r3, #0x17, 28
  0cbe8	e3a03c13	 mov         r3, #0x13, 24
  0cbec	e3833088	 orr         r3, r3, #0x88
  0cbf0	e5823000	 str         r3, [r2]

; 3866 :                     }
; 3867 :                     else

  0cbf4	ea000004	 b           |$LN9@ThreadRun@3|
  0cbf8		 |$LN10@ThreadRun@3|

; 3868 :                         m_timeout = DO_USBCLK_TIMEOUT;

  0cbf8	e59d316c	 ldr         r3, [sp, #0x16C]
  0cbfc	e24330dc	 sub         r3, r3, #0xDC
  0cc00	e2832e17	 add         r2, r3, #0x17, 28
  0cc04	e3a03003	 mov         r3, #3
  0cc08	e5823000	 str         r3, [r2]
  0cc0c		 |$LN9@ThreadRun@3|

; 3869 :                     // Perform reset of all the endpoints, we need to do that.                                
; 3870 :                     if ((m_dwStatus & STATUS_HNP_SESSION_MASK) == 0x00)

  0cc0c	e59d316c	 ldr         r3, [sp, #0x16C]
  0cc10	e24330dc	 sub         r3, r3, #0xDC
  0cc14	e28330f8	 add         r3, r3, #0xF8
  0cc18	e5933000	 ldr         r3, [r3]
  0cc1c	e3130030	 tst         r3, #0x30
  0cc20	1a000008	 bne         |$LN8@ThreadRun@3|

; 3871 :                         ResetEndPoints();

  0cc24	e59d316c	 ldr         r3, [sp, #0x16C]
  0cc28	e24320dc	 sub         r2, r3, #0xDC
  0cc2c	e59d316c	 ldr         r3, [sp, #0x16C]
  0cc30	e24300dc	 sub         r0, r3, #0xDC
  0cc34	e5923000	 ldr         r3, [r2]
  0cc38	e28330ec	 add         r3, r3, #0xEC
  0cc3c	e5933000	 ldr         r3, [r3]
  0cc40	e1a0e00f	 mov         lr, pc
  0cc44	e12fff13	 bx          r3
  0cc48		 |$LN8@ThreadRun@3|

; 3872 :                     m_pTransceiver->EnableWakeupInterrupt(TRUE);

  0cc48	e3a01001	 mov         r1, #1
  0cc4c	e59d316c	 ldr         r3, [sp, #0x16C]
  0cc50	e24330dc	 sub         r3, r3, #0xDC
  0cc54	e28330fc	 add         r3, r3, #0xFC
  0cc58	e5932000	 ldr         r2, [r3]
  0cc5c	e59d316c	 ldr         r3, [sp, #0x16C]
  0cc60	e24330dc	 sub         r3, r3, #0xDC
  0cc64	e28330fc	 add         r3, r3, #0xFC
  0cc68	e5930000	 ldr         r0, [r3]
  0cc6c	e5923000	 ldr         r3, [r2]
  0cc70	e2833008	 add         r3, r3, #8
  0cc74	e5933000	 ldr         r3, [r3]
  0cc78	e1a0e00f	 mov         lr, pc
  0cc7c	e12fff13	 bx          r3

; 3873 :                 
; 3874 :                     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("Disconnect Complete and Set IOCTRL again\r\n")));                

  0cc80	e59f32a8	 ldr         r3, [pc, #0x2A8]
  0cc84	e5933440	 ldr         r3, [r3, #0x440]
  0cc88	e3130a02	 tst         r3, #2, 20
  0cc8c	0a000004	 beq         |$LN269@ThreadRun@3|
  0cc90	e59f02a0	 ldr         r0, [pc, #0x2A0]
  0cc94	eb000000	 bl          NKDbgPrintfW
  0cc98	e3a03001	 mov         r3, #1
  0cc9c	e58d3158	 str         r3, [sp, #0x158]
  0cca0	ea000001	 b           |$LN270@ThreadRun@3|
  0cca4		 |$LN269@ThreadRun@3|
  0cca4	e3a03000	 mov         r3, #0
  0cca8	e58d3158	 str         r3, [sp, #0x158]
  0ccac		 |$LN270@ThreadRun@3|
  0ccac		 |$LN11@ThreadRun@3|

; 3875 :                 }
; 3876 : 
; 3877 :                 if (m_dwStatus & STATUS_HNP_SESSION_INIT)

  0ccac	e59d316c	 ldr         r3, [sp, #0x16C]
  0ccb0	e24330dc	 sub         r3, r3, #0xDC
  0ccb4	e28330f8	 add         r3, r3, #0xF8
  0ccb8	e5933000	 ldr         r3, [r3]
  0ccbc	e3130010	 tst         r3, #0x10
  0ccc0	0a000027	 beq         |$LN7@ThreadRun@3|

; 3878 :                 {
; 3879 :                     // Check whether it is host mode connection or device mode connection
; 3880 :                     SetEvent(m_hIntrEvent);

  0ccc4	e59d316c	 ldr         r3, [sp, #0x16C]
  0ccc8	e24330dc	 sub         r3, r3, #0xDC
  0cccc	e2833f53	 add         r3, r3, #0x53, 30
  0ccd0	e5930000	 ldr         r0, [r3]
  0ccd4	eb000000	 bl          SetEvent

; 3881 :                     m_dwStatus |= STATUS_HNP_SESSION_PROCESS;

  0ccd8	e59d316c	 ldr         r3, [sp, #0x16C]
  0ccdc	e24330dc	 sub         r3, r3, #0xDC
  0cce0	e28330f8	 add         r3, r3, #0xF8
  0cce4	e5933000	 ldr         r3, [r3]
  0cce8	e3832020	 orr         r2, r3, #0x20
  0ccec	e59d316c	 ldr         r3, [sp, #0x16C]
  0ccf0	e24330dc	 sub         r3, r3, #0xDC
  0ccf4	e28330f8	 add         r3, r3, #0xF8
  0ccf8	e5832000	 str         r2, [r3]

; 3882 :                     m_dwStatus &= ~STATUS_HNP_SESSION_INIT;

  0ccfc	e59d316c	 ldr         r3, [sp, #0x16C]
  0cd00	e24330dc	 sub         r3, r3, #0xDC
  0cd04	e28330f8	 add         r3, r3, #0xF8
  0cd08	e5932000	 ldr         r2, [r3]
  0cd0c	e3e03010	 mvn         r3, #0x10
  0cd10	e0022003	 and         r2, r2, r3
  0cd14	e59d316c	 ldr         r3, [sp, #0x16C]
  0cd18	e24330dc	 sub         r3, r3, #0xDC
  0cd1c	e28330f8	 add         r3, r3, #0xF8
  0cd20	e5832000	 str         r2, [r3]

; 3883 :                     DEBUGMSG(ZONE_OTG_HNP, (TEXT("m_bHNPSession set interrupt\r\n")));

  0cd24	e59f3204	 ldr         r3, [pc, #0x204]
  0cd28	e5933440	 ldr         r3, [r3, #0x440]
  0cd2c	e3130a01	 tst         r3, #1, 20
  0cd30	0a000004	 beq         |$LN271@ThreadRun@3|
  0cd34	e59f01f8	 ldr         r0, [pc, #0x1F8]
  0cd38	eb000000	 bl          NKDbgPrintfW
  0cd3c	e3a03001	 mov         r3, #1
  0cd40	e58d315c	 str         r3, [sp, #0x15C]
  0cd44	ea000001	 b           |$LN272@ThreadRun@3|
  0cd48		 |$LN271@ThreadRun@3|
  0cd48	e3a03000	 mov         r3, #0
  0cd4c	e58d315c	 str         r3, [sp, #0x15C]
  0cd50		 |$LN272@ThreadRun@3|

; 3884 :                     m_timeout = INFINITE;

  0cd50	e59d316c	 ldr         r3, [sp, #0x16C]
  0cd54	e24330dc	 sub         r3, r3, #0xDC
  0cd58	e2832e17	 add         r2, r3, #0x17, 28
  0cd5c	e3e03000	 mvn         r3, #0
  0cd60	e5823000	 str         r3, [r2]
  0cd64		 |$LN7@ThreadRun@3|
  0cd64		 |$LN13@ThreadRun@3|

; 3885 :                 }
; 3886 :             }
; 3887 : 
; 3888 :             if (m_dwStatus & STATUS_DISCONN_REQUEST)

  0cd64	e59d316c	 ldr         r3, [sp, #0x16C]
  0cd68	e24330dc	 sub         r3, r3, #0xDC
  0cd6c	e28330f8	 add         r3, r3, #0xF8
  0cd70	e5933000	 ldr         r3, [r3]
  0cd74	e3130002	 tst         r3, #2
  0cd78	0a000017	 beq         |$LN6@ThreadRun@3|

; 3889 :             {
; 3890 :                 m_dwStatus &= ~STATUS_DISCONN_REQUEST;

  0cd7c	e59d316c	 ldr         r3, [sp, #0x16C]
  0cd80	e24330dc	 sub         r3, r3, #0xDC
  0cd84	e28330f8	 add         r3, r3, #0xF8
  0cd88	e5932000	 ldr         r2, [r3]
  0cd8c	e3e03002	 mvn         r3, #2
  0cd90	e0022003	 and         r2, r2, r3
  0cd94	e59d316c	 ldr         r3, [sp, #0x16C]
  0cd98	e24330dc	 sub         r3, r3, #0xDC
  0cd9c	e28330f8	 add         r3, r3, #0xF8
  0cda0	e5832000	 str         r2, [r3]

; 3891 :                 m_dwStatus |= STATUS_DISCONN_COMPLETE;

  0cda4	e59d316c	 ldr         r3, [sp, #0x16C]
  0cda8	e24330dc	 sub         r3, r3, #0xDC
  0cdac	e28330f8	 add         r3, r3, #0xF8
  0cdb0	e5933000	 ldr         r3, [r3]
  0cdb4	e3832008	 orr         r2, r3, #8
  0cdb8	e59d316c	 ldr         r3, [sp, #0x16C]
  0cdbc	e24330dc	 sub         r3, r3, #0xDC
  0cdc0	e28330f8	 add         r3, r3, #0xF8
  0cdc4	e5832000	 str         r2, [r3]

; 3892 :                 m_timeout = INFINITE;

  0cdc8	e59d316c	 ldr         r3, [sp, #0x16C]
  0cdcc	e24330dc	 sub         r3, r3, #0xDC
  0cdd0	e2832e17	 add         r2, r3, #0x17, 28
  0cdd4	e3e03000	 mvn         r3, #0
  0cdd8	e5823000	 str         r3, [r2]
  0cddc		 |$LN6@ThreadRun@3|

; 3893 :             }
; 3894 : 
; 3895 : 
; 3896 :             if (m_dwStatus & STATUS_SUSPEND)

  0cddc	e59d316c	 ldr         r3, [sp, #0x16C]
  0cde0	e24330dc	 sub         r3, r3, #0xDC
  0cde4	e28330f8	 add         r3, r3, #0xF8
  0cde8	e5933000	 ldr         r3, [r3]
  0cdec	e3130004	 tst         r3, #4
  0cdf0	0a00001f	 beq         |$LN5@ThreadRun@3|

; 3897 :             {
; 3898 :                 m_dwStatus &= ~STATUS_SUSPEND;

  0cdf4	e59d316c	 ldr         r3, [sp, #0x16C]
  0cdf8	e24330dc	 sub         r3, r3, #0xDC
  0cdfc	e28330f8	 add         r3, r3, #0xF8
  0ce00	e5932000	 ldr         r2, [r3]
  0ce04	e3e03004	 mvn         r3, #4
  0ce08	e0022003	 and         r2, r2, r3
  0ce0c	e59d316c	 ldr         r3, [sp, #0x16C]
  0ce10	e24330dc	 sub         r3, r3, #0xDC
  0ce14	e28330f8	 add         r3, r3, #0xF8
  0ce18	e5832000	 str         r2, [r3]

; 3899 :                 // Need to set the infinite and wait for the disconnect signal complete
; 3900 :                 if (m_dwStatus & STATUS_WAIT_HOST_DISCONN_COMPLETE)

  0ce1c	e59d316c	 ldr         r3, [sp, #0x16C]
  0ce20	e24330dc	 sub         r3, r3, #0xDC
  0ce24	e28330f8	 add         r3, r3, #0xF8
  0ce28	e5933000	 ldr         r3, [r3]
  0ce2c	e3130040	 tst         r3, #0x40
  0ce30	0a000005	 beq         |$LN4@ThreadRun@3|

; 3901 :                     m_timeout = INFINITE;

  0ce34	e59d316c	 ldr         r3, [sp, #0x16C]
  0ce38	e24330dc	 sub         r3, r3, #0xDC
  0ce3c	e2832e17	 add         r2, r3, #0x17, 28
  0ce40	e3e03000	 mvn         r3, #0
  0ce44	e5823000	 str         r3, [r2]

; 3902 :                 else

  0ce48	ea000009	 b           |$LN3@ThreadRun@3|
  0ce4c		 |$LN4@ThreadRun@3|

; 3903 :                 {
; 3904 :                     m_timeout = DO_SUSPEND_TIMEOUT;

  0ce4c	e59d316c	 ldr         r3, [sp, #0x16C]
  0ce50	e24330dc	 sub         r3, r3, #0xDC
  0ce54	e2832e17	 add         r2, r3, #0x17, 28
  0ce58	e3a03c0b	 mov         r3, #0xB, 24
  0ce5c	e38330b8	 orr         r3, r3, #0xB8
  0ce60	e5823000	 str         r3, [r2]

; 3905 :                     OUTREG8(&pGen->IntrUSBE, 0xF6/*INTRUSB_ALL&~INTRUSB_SOF&~INTRSUSPEND*/);

  0ce64	e59d301c	 ldr         r3, [sp, #0x1C]
  0ce68	e283200b	 add         r2, r3, #0xB
  0ce6c	e3a030f6	 mov         r3, #0xF6
  0ce70	e5c23000	 strb        r3, [r2]
  0ce74		 |$LN3@ThreadRun@3|
  0ce74		 |$LN5@ThreadRun@3|

; 3906 :                 }
; 3907 :             }
; 3908 :             if(m_disconnected)

  0ce74	e59d316c	 ldr         r3, [sp, #0x16C]
  0ce78	e24330dc	 sub         r3, r3, #0xDC
  0ce7c	e2833f63	 add         r3, r3, #0x63, 30
  0ce80	e5933000	 ldr         r3, [r3]
  0ce84	e3530000	 cmp         r3, #0
  0ce88	0a000005	 beq         |$LN2@ThreadRun@3|

; 3909 :             {
; 3910 :                m_timeout = DO_DISCONNECT_TIMEOUT;

  0ce8c	e59d316c	 ldr         r3, [sp, #0x16C]
  0ce90	e24330dc	 sub         r3, r3, #0xDC
  0ce94	e2832e17	 add         r2, r3, #0x17, 28
  0ce98	e3a03ffa	 mov         r3, #0xFA, 30
  0ce9c	e5823000	 str         r3, [r2]

; 3911 :             }
; 3912 :             else

  0cea0	ea000005	 b           |$LN1@ThreadRun@3|
  0cea4		 |$LN2@ThreadRun@3|

; 3913 :             {
; 3914 :                m_timeout = DO_INACTIVITY_TIMEOUT;

  0cea4	e59d316c	 ldr         r3, [sp, #0x16C]
  0cea8	e24330dc	 sub         r3, r3, #0xDC
  0ceac	e2832e17	 add         r2, r3, #0x17, 28
  0ceb0	e3a03c27	 mov         r3, #0x27, 24
  0ceb4	e3833010	 orr         r3, r3, #0x10
  0ceb8	e5823000	 str         r3, [r2]
  0cebc		 |$LN1@ThreadRun@3|

; 3915 :             }
; 3916 : 
; 3917 :             InterruptDone(m_dwSysIntr);

  0cebc	e59d316c	 ldr         r3, [sp, #0x16C]
  0cec0	e24330dc	 sub         r3, r3, #0xDC
  0cec4	e2833f51	 add         r3, r3, #0x51, 30
  0cec8	e5930000	 ldr         r0, [r3]
  0cecc	eb000000	 bl          InterruptDone
  0ced0		 |$LN66@ThreadRun@3|

; 3918 :         }
; 3919 :     }

  0ced0	eafff1d8	 b           |$LN286@ThreadRun@3|
  0ced4		 |$LN162@ThreadRun@3|

; 3920 :     
; 3921 :     CloseHandle(m_hIntrEvent);

  0ced4	e59d316c	 ldr         r3, [sp, #0x16C]
  0ced8	e24330dc	 sub         r3, r3, #0xDC
  0cedc	e2833f53	 add         r3, r3, #0x53, 30
  0cee0	e5930000	 ldr         r0, [r3]
  0cee4	eb000000	 bl          CloseHandle

; 3922 :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("ThreadRun exit\r\n")));

  0cee8	e59f3040	 ldr         r3, [pc, #0x40]
  0ceec	e5933440	 ldr         r3, [r3, #0x440]
  0cef0	e3130a02	 tst         r3, #2, 20
  0cef4	0a000004	 beq         |$LN273@ThreadRun@3|
  0cef8	e59f002c	 ldr         r0, [pc, #0x2C]
  0cefc	eb000000	 bl          NKDbgPrintfW
  0cf00	e3a03001	 mov         r3, #1
  0cf04	e58d3160	 str         r3, [sp, #0x160]
  0cf08	ea000001	 b           |$LN274@ThreadRun@3|
  0cf0c		 |$LN273@ThreadRun@3|
  0cf0c	e3a03000	 mov         r3, #0
  0cf10	e58d3160	 str         r3, [sp, #0x160]
  0cf14		 |$LN274@ThreadRun@3|

; 3923 :     return 1;

  0cf14	e3a03001	 mov         r3, #1
  0cf18	e58d3040	 str         r3, [sp, #0x40]
  0cf1c		 |$LN177@ThreadRun@3|

; 3924 : }

  0cf1c	e59d0040	 ldr         r0, [sp, #0x40]
  0cf20	e28ddf59	 add         sp, sp, #0x59, 30
  0cf24	e89d6000	 ldmia       sp, {sp, lr}
  0cf28	e12fff1e	 bx          lr
  0cf2c		 |$LN290@ThreadRun@3|
  0cf2c		 |$LN291@ThreadRun@3|
  0cf2c	00000000	 DCD         |??_C@_1CC@DPCJFHOC@?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  0cf30		 |$LN292@ThreadRun@3|
  0cf30	00000000	 DCD         |dpCurSettings|
  0cf34		 |$LN293@ThreadRun@3|
  0cf34	00000000	 DCD         |??_C@_1DM@EOFHGECP@?$AAm?$AA_?$AAb?$AAH?$AAN?$AAP?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  0cf38		 |$LN294@ThreadRun@3|
  0cf38	00000000	 DCD         |??_C@_1FG@NMEPNECL@?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?5?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAS?$AAe?$AAt?$AA?5?$AAI?$AAO?$AAC?$AAT@|
  0cf3c		 |$LN295@ThreadRun@3|
  0cf3c	00000000	 DCD         |??_C@_1DA@NOKHKCHD@?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAA?$AAg?$AAa?$AAi?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  0cf40		 |$LN296@ThreadRun@3|
  0cf40	00000000	 DCD         |??_C@_1FC@HNLLBEOD@?$AAW?$AAe?$AA?5?$AAc?$AAa?$AAn?$AA?5?$AAp?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAr?$AAo?$AAl?$AAe?$AA?5?$AAs?$AAw?$AAi?$AAt?$AAc?$AAh?$AA?5?$AAl?$AAo?$AAa?$AAd?$AAi@|
  0cf44		 |$LN297@ThreadRun@3|
  0cf44	00000000	 DCD         |??_C@_1FM@CEBDPKGH@?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAR?$AAe?$AAt?$AAe?$AAn?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAD?$AAe?$AAv?$AAC?$AAt?$AAl?$AA?5?$AAS?$AAe?$AAs@|
  0cf48		 |$LN298@ThreadRun@3|
  0cf48	00000000	 DCD         |??_C@_1GA@HPHKMJJN@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAV?$AAa?$AAr?$AAi?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAI?$AAN?$AAT?$AAR?$AAU?$AAS?$AAB?$AA?5?$AAN?$AAo?$AA?5?$AAi?$AAn@|
  0cf4c		 |$LN299@ThreadRun@3|
  0cf4c	00000000	 DCD         |??_C@_1FM@FCJJDMMJ@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAH?$AAo?$AAs?$AAt?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAs?$AAe@|
  0cf50		 |$LN300@ThreadRun@3|
  0cf50	00000000	 DCD         |??_C@_1CM@EAGDHFMC@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAo?$AAn?$AA?5?$AAH?$AAo?$AAs?$AAt?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  0cf54		 |$LN301@ThreadRun@3|
  0cf54	00000000	 DCD         |??_C@_1CK@HPFGJLOI@?$AAM?$AAO?$AAD?$AAE?$AA_?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA_?$AAR?$AAE?$AAS?$AAU?$AAM?$AAE?$AA?$AN?$AA?6?$AA?$AA@|
  0cf58		 |$M44317|

			 ENDP  ; |?ThreadRun@OMAPMHSUSBOTG@@EAAKXZ|, OMAPMHSUSBOTG::ThreadRun

	EXPORT	|??_C@_1GA@KDAFPHFP@?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?5?$AAF?$AAA?$AAI?$AAL?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAR?$AAe?$AAg?$AA?0?$AA?5?$AAC@| [ DATA ] ; `string'

  001b0			 AREA	 |.pdata|, PDATA
|$T44384| DCD	|$LN10@ReadULPIRe|
	DCD	0x40004704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@KDAFPHFP@?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?5?$AAF?$AAA?$AAI?$AAL?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAR?$AAe?$AAg?$AA?0?$AA?5?$AAC@| DCB "#"
	DCB	0x0, "#", 0x0, "#", 0x0, "#", 0x0, "#", 0x0, "#", 0x0, "#"
	DCB	0x0, " ", 0x0, "F", 0x0, "A", 0x0, "I", 0x0, "L", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, " ", 0x0, "U", 0x0, "L", 0x0, "P", 0x0, "I"
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g", 0x0, ",", 0x0, " "
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  0cf58			 AREA	 |.text|, CODE, ARM

  0cf58		 |?ReadULPIReg@OMAPMHSUSBOTG@@QAAEPAUHSMUSB_T@@E@Z| PROC ; OMAPMHSUSBOTG::ReadULPIReg

; 3927 : {

  0cf58		 |$LN10@ReadULPIRe|
  0cf58	e1a0c00d	 mov         r12, sp
  0cf5c	e92d0007	 stmdb       sp!, {r0 - r2}
  0cf60	e92d5000	 stmdb       sp!, {r12, lr}
  0cf64	e24dd010	 sub         sp, sp, #0x10
  0cf68		 |$M44381|

; 3928 :     DWORD dwCount = 100;

  0cf68	e3a03064	 mov         r3, #0x64
  0cf6c	e58d3004	 str         r3, [sp, #4]

; 3929 :     UCHAR ucData = 0x00;

  0cf70	e3a03000	 mov         r3, #0
  0cf74	e5cd3000	 strb        r3, [sp]

; 3930 :     pOTG->pUsbGenRegs->ulpi_regs.ULPIRegAddr = idx;

  0cf78	e59d301c	 ldr         r3, [sp, #0x1C]
  0cf7c	e2833020	 add         r3, r3, #0x20
  0cf80	e5933000	 ldr         r3, [r3]
  0cf84	e2832075	 add         r2, r3, #0x75
  0cf88	e5dd3020	 ldrb        r3, [sp, #0x20]
  0cf8c	e5c23000	 strb        r3, [r2]

; 3931 :     pOTG->pUsbGenRegs->ulpi_regs.ULPIRegControl = ULPI_REG_REQ | ULPI_RD_N_WR;

  0cf90	e59d301c	 ldr         r3, [sp, #0x1C]
  0cf94	e2833020	 add         r3, r3, #0x20
  0cf98	e5933000	 ldr         r3, [r3]
  0cf9c	e2832076	 add         r2, r3, #0x76
  0cfa0	e3a03005	 mov         r3, #5
  0cfa4	e5c23000	 strb        r3, [r2]
  0cfa8		 |$LN3@ReadULPIRe|

; 3932 : 
; 3933 :     while ((pOTG->pUsbGenRegs->ulpi_regs.ULPIRegControl & ULPI_REG_CMPLT) == 0)

  0cfa8	e59d301c	 ldr         r3, [sp, #0x1C]
  0cfac	e2833020	 add         r3, r3, #0x20
  0cfb0	e5933000	 ldr         r3, [r3]
  0cfb4	e2833076	 add         r3, r3, #0x76
  0cfb8	e5d33000	 ldrb        r3, [r3]
  0cfbc	e3130002	 tst         r3, #2
  0cfc0	1a000018	 bne         |$LN2@ReadULPIRe|

; 3934 :     {
; 3935 :         Sleep(20);

  0cfc4	e3a00014	 mov         r0, #0x14
  0cfc8	eb000000	 bl          Sleep

; 3936 :         dwCount--;

  0cfcc	e59d3004	 ldr         r3, [sp, #4]
  0cfd0	e2433001	 sub         r3, r3, #1
  0cfd4	e58d3004	 str         r3, [sp, #4]

; 3937 :         if (dwCount == 0)

  0cfd8	e59d3004	 ldr         r3, [sp, #4]
  0cfdc	e3530000	 cmp         r3, #0
  0cfe0	1a00000f	 bne         |$LN1@ReadULPIRe|

; 3938 :         {
; 3939 :             RETAILMSG(1, (TEXT("####### FAIL to read ULPI Reg, Control = 0x%x\r\n"), 
; 3940 :                 pOTG->pUsbGenRegs->ulpi_regs.ULPIRegControl));

  0cfe4	e59d301c	 ldr         r3, [sp, #0x1C]
  0cfe8	e2833020	 add         r3, r3, #0x20
  0cfec	e5933000	 ldr         r3, [r3]
  0cff0	e2833076	 add         r3, r3, #0x76
  0cff4	e5d33000	 ldrb        r3, [r3]
  0cff8	e1a01003	 mov         r1, r3
  0cffc	e59f006c	 ldr         r0, [pc, #0x6C]
  0d000	eb000000	 bl          NKDbgPrintfW
  0d004	e3a03001	 mov         r3, #1
  0d008	e58d300c	 str         r3, [sp, #0xC]
  0d00c	ea000001	 b           |$LN7@ReadULPIRe|
  0d010	e3a03000	 mov         r3, #0
  0d014	e58d300c	 str         r3, [sp, #0xC]
  0d018		 |$LN7@ReadULPIRe|

; 3941 :             return 0x00;

  0d018	e3a03000	 mov         r3, #0
  0d01c	e5cd3008	 strb        r3, [sp, #8]
  0d020	ea00000e	 b           |$LN4@ReadULPIRe|
  0d024		 |$LN1@ReadULPIRe|

; 3942 :         }
; 3943 :     }

  0d024	eaffffdf	 b           |$LN3@ReadULPIRe|
  0d028		 |$LN2@ReadULPIRe|

; 3944 :     ucData = pOTG->pUsbGenRegs->ulpi_regs.ULPIRegData;

  0d028	e59d301c	 ldr         r3, [sp, #0x1C]
  0d02c	e2833020	 add         r3, r3, #0x20
  0d030	e5933000	 ldr         r3, [r3]
  0d034	e2833074	 add         r3, r3, #0x74
  0d038	e5d33000	 ldrb        r3, [r3]
  0d03c	e5cd3000	 strb        r3, [sp]

; 3945 : 
; 3946 :     pOTG->pUsbGenRegs->ulpi_regs.ULPIRegControl = 0;

  0d040	e59d301c	 ldr         r3, [sp, #0x1C]
  0d044	e2833020	 add         r3, r3, #0x20
  0d048	e5933000	 ldr         r3, [r3]
  0d04c	e2832076	 add         r2, r3, #0x76
  0d050	e3a03000	 mov         r3, #0
  0d054	e5c23000	 strb        r3, [r2]

; 3947 : 
; 3948 :     return ucData;

  0d058	e5dd3000	 ldrb        r3, [sp]
  0d05c	e5cd3008	 strb        r3, [sp, #8]
  0d060		 |$LN4@ReadULPIRe|

; 3949 : }

  0d060	e5dd0008	 ldrb        r0, [sp, #8]
  0d064	e28dd010	 add         sp, sp, #0x10
  0d068	e89d6000	 ldmia       sp, {sp, lr}
  0d06c	e12fff1e	 bx          lr
  0d070		 |$LN11@ReadULPIRe|
  0d070		 |$LN12@ReadULPIRe|
  0d070	00000000	 DCD         |??_C@_1GA@KDAFPHFP@?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?5?$AAF?$AAA?$AAI?$AAL?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAR?$AAe?$AAg?$AA?0?$AA?5?$AAC@|
  0d074		 |$M44382|

			 ENDP  ; |?ReadULPIReg@OMAPMHSUSBOTG@@QAAEPAUHSMUSB_T@@E@Z|, OMAPMHSUSBOTG::ReadULPIReg

	EXPORT	|??_C@_1CI@IICMFGFK@?$AAO?$AAT?$AAG?$AAA?$AAt?$AAt?$AAa?$AAc?$AAh?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|OTGAttach|

  001b8			 AREA	 |.pdata|, PDATA
|$T44394| DCD	|$LN8@OTGAttach|
	DCD	0x40003704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@IICMFGFK@?$AAO?$AAT?$AAG?$AAA?$AAt?$AAt?$AAa?$AAc?$AAh?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, "A", 0x0, "t", 0x0, "t", 0x0, "a"
	DCB	0x0, "c", 0x0, "h", 0x0, " ", 0x0, "m", 0x0, "o", 0x0, "d"
	DCB	0x0, "e", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  0d074			 AREA	 |.text|, CODE, ARM

  0d074		 |OTGAttach| PROC

; 3975 : {

  0d074		 |$LN8@OTGAttach|
  0d074	e1a0c00d	 mov         r12, sp
  0d078	e92d0007	 stmdb       sp!, {r0 - r2}
  0d07c	e92d5000	 stmdb       sp!, {r12, lr}
  0d080	e24dd014	 sub         sp, sp, #0x14
  0d084		 |$M44391|

; 3976 :     BOOL bRet = FALSE;

  0d084	e3a03000	 mov         r3, #0
  0d088	e58d3004	 str         r3, [sp, #4]

; 3977 :     PHSMUSB_T pOTG = NULL;

  0d08c	e3a03000	 mov         r3, #0
  0d090	e58d3000	 str         r3, [sp]

; 3978 :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("OTGAttach mode=%d\r\n"), mode));

  0d094	e59f30b0	 ldr         r3, [pc, #0xB0]
  0d098	e5933440	 ldr         r3, [r3, #0x440]
  0d09c	e3130a02	 tst         r3, #2, 20
  0d0a0	0a000005	 beq         |$LN4@OTGAttach|
  0d0a4	e59d1020	 ldr         r1, [sp, #0x20]
  0d0a8	e59f0098	 ldr         r0, [pc, #0x98]
  0d0ac	eb000000	 bl          NKDbgPrintfW
  0d0b0	e3a03001	 mov         r3, #1
  0d0b4	e58d300c	 str         r3, [sp, #0xC]
  0d0b8	ea000001	 b           |$LN5@OTGAttach|
  0d0bc		 |$LN4@OTGAttach|
  0d0bc	e3a03000	 mov         r3, #0
  0d0c0	e58d300c	 str         r3, [sp, #0xC]
  0d0c4		 |$LN5@OTGAttach|

; 3979 :     
; 3980 :     // Set the corresponding MUSB_FUNCS.
; 3981 :     if ((mode >= DEVICE_MODE) && ( mode <= HOST_MODE))

  0d0c4	e59d3020	 ldr         r3, [sp, #0x20]
  0d0c8	e3530001	 cmp         r3, #1
  0d0cc	ba000013	 blt         |$LN1@OTGAttach|
  0d0d0	e59d3020	 ldr         r3, [sp, #0x20]
  0d0d4	e3530002	 cmp         r3, #2
  0d0d8	ca000010	 bgt         |$LN1@OTGAttach|

; 3982 :     {
; 3983 :         pOTG = gpHsUsbOtg->GetHsMusb();

  0d0dc	e59f3060	 ldr         r3, [pc, #0x60]
  0d0e0	e5930000	 ldr         r0, [r3]
  0d0e4	eb000000	 bl          |?GetHsMusb@OMAPMHSUSBOTG@@QAAPAUHSMUSB_T@@XZ|
  0d0e8	e58d0010	 str         r0, [sp, #0x10]
  0d0ec	e59d3010	 ldr         r3, [sp, #0x10]
  0d0f0	e58d3000	 str         r3, [sp]

; 3984 :         pOTG->pFuncs[mode-1] = pFuncs; 

  0d0f4	e59d3000	 ldr         r3, [sp]
  0d0f8	e2831008	 add         r1, r3, #8
  0d0fc	e59d3020	 ldr         r3, [sp, #0x20]
  0d100	e2432001	 sub         r2, r3, #1
  0d104	e3a03004	 mov         r3, #4
  0d108	e0030392	 mul         r3, r2, r3
  0d10c	e0812003	 add         r2, r1, r3
  0d110	e59d301c	 ldr         r3, [sp, #0x1C]
  0d114	e5823000	 str         r3, [r2]

; 3985 :         bRet = TRUE;       

  0d118	e3a03001	 mov         r3, #1
  0d11c	e58d3004	 str         r3, [sp, #4]
  0d120		 |$LN1@OTGAttach|

; 3986 :     }
; 3987 : 
; 3988 :     // Pass the gmHsUsb context back to device or host driver       
; 3989 :     *lppvContext = (LPVOID)pOTG;

  0d120	e59d2000	 ldr         r2, [sp]
  0d124	e59d3024	 ldr         r3, [sp, #0x24]
  0d128	e5832000	 str         r2, [r3]

; 3990 :     
; 3991 :     return bRet;

  0d12c	e59d3004	 ldr         r3, [sp, #4]
  0d130	e58d3008	 str         r3, [sp, #8]

; 3992 : }

  0d134	e59d0008	 ldr         r0, [sp, #8]
  0d138	e28dd014	 add         sp, sp, #0x14
  0d13c	e89d6000	 ldmia       sp, {sp, lr}
  0d140	e12fff1e	 bx          lr
  0d144		 |$LN9@OTGAttach|
  0d144		 |$LN10@OTGAttach|
  0d144	00000000	 DCD         |?gpHsUsbOtg@@3PAVOMAPMHSUSBOTG@@A|
  0d148		 |$LN11@OTGAttach|
  0d148	00000000	 DCD         |??_C@_1CI@IICMFGFK@?$AAO?$AAT?$AAG?$AAA?$AAt?$AAt?$AAa?$AAc?$AAh?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0d14c		 |$LN12@OTGAttach|
  0d14c	00000000	 DCD         |dpCurSettings|
  0d150		 |$M44392|

			 ENDP  ; |OTGAttach|

	EXPORT	|??_C@_1DI@FEBMCDIH@?$AAO?$AAT?$AAG?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAs?$AAe?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@KMDAEIMB@?$AAO?$AAT?$AAG?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|OTGUSBClock|

  001c0			 AREA	 |.pdata|, PDATA
|$T44408| DCD	|$LN13@OTGUSBCloc|
	DCD	0x40004004

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@FEBMCDIH@?$AAO?$AAT?$AAG?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAs?$AAe?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "C"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@KMDAEIMB@?$AAO?$AAT?$AAG?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "C"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  0d150			 AREA	 |.text|, CODE, ARM

  0d150		 |OTGUSBClock| PROC

; 4007 : {

  0d150		 |$LN13@OTGUSBCloc|
  0d150	e1a0c00d	 mov         r12, sp
  0d154	e92d0001	 stmdb       sp!, {r0}
  0d158	e92d5000	 stmdb       sp!, {r12, lr}
  0d15c	e24dd018	 sub         sp, sp, #0x18
  0d160		 |$M44405|

; 4008 :     BOOL bReturn;
; 4009 : 
; 4010 :     DEBUGMSG(1, (TEXT("OTGUSBClock(%d) called\r\n"), fStart));

  0d160	e59d1020	 ldr         r1, [sp, #0x20]
  0d164	e59f00e0	 ldr         r0, [pc, #0xE0]
  0d168	eb000000	 bl          NKDbgPrintfW
  0d16c	e3a03001	 mov         r3, #1
  0d170	e58d3008	 str         r3, [sp, #8]
  0d174	ea000001	 b           |$LN8@OTGUSBCloc|
  0d178	e3a03000	 mov         r3, #0
  0d17c	e58d3008	 str         r3, [sp, #8]
  0d180		 |$LN8@OTGUSBCloc|

; 4011 :     if (gpHsUsbOtg)

  0d180	e59f30c0	 ldr         r3, [pc, #0xC0]
  0d184	e5933000	 ldr         r3, [r3]
  0d188	e3530000	 cmp         r3, #0
  0d18c	0a00001d	 beq         |$LN4@OTGUSBCloc|

; 4012 :     {
; 4013 :         if (fStart)

  0d190	e59d3020	 ldr         r3, [sp, #0x20]
  0d194	e3530000	 cmp         r3, #0
  0d198	0a00000d	 beq         |$LN3@OTGUSBCloc|

; 4014 :             bReturn = gpHsUsbOtg->StartUSBClock(TRUE);

  0d19c	e3a01001	 mov         r1, #1
  0d1a0	e59f30a0	 ldr         r3, [pc, #0xA0]
  0d1a4	e5933000	 ldr         r3, [r3]
  0d1a8	e5933000	 ldr         r3, [r3]
  0d1ac	e28320e4	 add         r2, r3, #0xE4
  0d1b0	e59f3090	 ldr         r3, [pc, #0x90]
  0d1b4	e5930000	 ldr         r0, [r3]
  0d1b8	e5923000	 ldr         r3, [r2]
  0d1bc	e1a0e00f	 mov         lr, pc
  0d1c0	e12fff13	 bx          r3
  0d1c4	e58d000c	 str         r0, [sp, #0xC]
  0d1c8	e59d300c	 ldr         r3, [sp, #0xC]
  0d1cc	e58d3000	 str         r3, [sp]

; 4015 :         else

  0d1d0	ea00000b	 b           |$LN2@OTGUSBCloc|
  0d1d4		 |$LN3@OTGUSBCloc|

; 4016 :             bReturn = gpHsUsbOtg->StopUSBClock();

  0d1d4	e59f306c	 ldr         r3, [pc, #0x6C]
  0d1d8	e5933000	 ldr         r3, [r3]
  0d1dc	e5933000	 ldr         r3, [r3]
  0d1e0	e28320e8	 add         r2, r3, #0xE8
  0d1e4	e59f305c	 ldr         r3, [pc, #0x5C]
  0d1e8	e5930000	 ldr         r0, [r3]
  0d1ec	e5923000	 ldr         r3, [r2]
  0d1f0	e1a0e00f	 mov         lr, pc
  0d1f4	e12fff13	 bx          r3
  0d1f8	e58d0010	 str         r0, [sp, #0x10]
  0d1fc	e59d3010	 ldr         r3, [sp, #0x10]
  0d200	e58d3000	 str         r3, [sp]
  0d204		 |$LN2@OTGUSBCloc|

; 4017 :     }
; 4018 :     else

  0d204	ea000008	 b           |$LN1@OTGUSBCloc|
  0d208		 |$LN4@OTGUSBCloc|

; 4019 :     {
; 4020 :         DEBUGMSG(1, (TEXT("OTGUSBClock failed to set\r\n")));

  0d208	e59f0034	 ldr         r0, [pc, #0x34]
  0d20c	eb000000	 bl          NKDbgPrintfW
  0d210	e3a03001	 mov         r3, #1
  0d214	e58d3014	 str         r3, [sp, #0x14]
  0d218	ea000001	 b           |$LN10@OTGUSBCloc|
  0d21c	e3a03000	 mov         r3, #0
  0d220	e58d3014	 str         r3, [sp, #0x14]
  0d224		 |$LN10@OTGUSBCloc|

; 4021 :         bReturn = FALSE;

  0d224	e3a03000	 mov         r3, #0
  0d228	e58d3000	 str         r3, [sp]
  0d22c		 |$LN1@OTGUSBCloc|

; 4022 :     }
; 4023 :     return bReturn;

  0d22c	e59d3000	 ldr         r3, [sp]
  0d230	e58d3004	 str         r3, [sp, #4]

; 4024 : }

  0d234	e59d0004	 ldr         r0, [sp, #4]
  0d238	e28dd018	 add         sp, sp, #0x18
  0d23c	e89d6000	 ldmia       sp, {sp, lr}
  0d240	e12fff1e	 bx          lr
  0d244		 |$LN14@OTGUSBCloc|
  0d244		 |$LN15@OTGUSBCloc|
  0d244	00000000	 DCD         |??_C@_1DI@FEBMCDIH@?$AAO?$AAT?$AAG?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAs?$AAe?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  0d248		 |$LN16@OTGUSBCloc|
  0d248	00000000	 DCD         |?gpHsUsbOtg@@3PAVOMAPMHSUSBOTG@@A|
  0d24c		 |$LN17@OTGUSBCloc|
  0d24c	00000000	 DCD         |??_C@_1DC@KMDAEIMB@?$AAO?$AAT?$AAG?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0d250		 |$M44406|

			 ENDP  ; |OTGUSBClock|

	EXPORT	|??_C@_1BO@CDMCIFON@?$AAd?$AAm?$AAa?$AAI?$AAs?$AAt?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@HHIOKHGA@?$AAo?$AAt?$AAg?$AAI?$AAs?$AAt?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@NBEJDCFF@?$AAi?$AAd?$AAg?$AAn?$AAd?$AAI?$AAs?$AAt?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@GPPIHNAH@?$AAV?$AAb?$AAu?$AAs?$AAD?$AAi?$AAs?$AAc?$AAh?$AAa?$AAr?$AAg?$AAe?$AAT?$AAi?$AAm?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@KFOJGKH@?$AAD?$AAM?$AAA?$AAI?$AAr?$AAq?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T44417| DCD	|$LN5@dynamic|
	DCD	0x40006600

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@CDMCIFON@?$AAd?$AAm?$AAa?$AAI?$AAs?$AAt?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| DCB "d"
	DCB	0x0, "m", 0x0, "a", 0x0, "I", 0x0, "s", 0x0, "t", 0x0, "P"
	DCB	0x0, "r", 0x0, "i", 0x0, "o", 0x0, "r", 0x0, "i", 0x0, "t"
	DCB	0x0, "y", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@HHIOKHGA@?$AAo?$AAt?$AAg?$AAI?$AAs?$AAt?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| DCB "o"
	DCB	0x0, "t", 0x0, "g", 0x0, "I", 0x0, "s", 0x0, "t", 0x0, "P"
	DCB	0x0, "r", 0x0, "i", 0x0, "o", 0x0, "r", 0x0, "i", 0x0, "t"
	DCB	0x0, "y", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@NBEJDCFF@?$AAi?$AAd?$AAg?$AAn?$AAd?$AAI?$AAs?$AAt?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| DCB "i"
	DCB	0x0, "d", 0x0, "g", 0x0, "n", 0x0, "d", 0x0, "I", 0x0, "s"
	DCB	0x0, "t", 0x0, "P", 0x0, "r", 0x0, "i", 0x0, "o", 0x0, "r"
	DCB	0x0, "i", 0x0, "t", 0x0, "y", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@GPPIHNAH@?$AAV?$AAb?$AAu?$AAs?$AAD?$AAi?$AAs?$AAc?$AAh?$AAa?$AAr?$AAg?$AAe?$AAT?$AAi?$AAm?$AAe?$AA?$AA@| DCB "V"
	DCB	0x0, "b", 0x0, "u", 0x0, "s", 0x0, "D", 0x0, "i", 0x0, "s"
	DCB	0x0, "c", 0x0, "h", 0x0, "a", 0x0, "r", 0x0, "g", 0x0, "e"
	DCB	0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@KFOJGKH@?$AAD?$AAM?$AAA?$AAI?$AAr?$AAq?$AA?$AA@| DCB "D", 0x0, "M"
	DCB	0x0, "A", 0x0, "I", 0x0, "r", 0x0, "q", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text$yc|, CODE, ARM

  00000		 |??__Es_deviceRegParams@@YAXXZ| PROC	; `dynamic initializer for 's_deviceRegParams''

; 108  :     }, 

  00000		 |$LN5@dynamic|
  00000		 |$M44414|
  00000	e59f318c	 ldr         r3, [pc, #0x18C]
  00004	e5932000	 ldr         r2, [r3]
  00008	e59f316c	 ldr         r3, [pc, #0x16C]
  0000c	e5832044	 str         r2, [r3, #0x44]

; 109  :     {
; 110  :         L"DMAIrq", PARAM_DWORD, FALSE, offset(MUsbOTGRegCfg_t, DMAIrq),

  00010	e59f2178	 ldr         r2, [pc, #0x178]
  00014	e59f3160	 ldr         r3, [pc, #0x160]
  00018	e5832048	 str         r2, [r3, #0x48]
  0001c	e59f2158	 ldr         r2, [pc, #0x158]
  00020	e3a03001	 mov         r3, #1
  00024	e582304c	 str         r3, [r2, #0x4C]
  00028	e59f214c	 ldr         r2, [pc, #0x14C]
  0002c	e3a03000	 mov         r3, #0
  00030	e5823050	 str         r3, [r2, #0x50]
  00034	e59f2140	 ldr         r2, [pc, #0x140]
  00038	e3a0300c	 mov         r3, #0xC
  0003c	e5823054	 str         r3, [r2, #0x54]

; 111  :             fieldsize(MUsbOTGRegCfg_t, DMAIrq), (void *) 93

  00040	e59f2134	 ldr         r2, [pc, #0x134]
  00044	e3a03004	 mov         r3, #4
  00048	e5823058	 str         r3, [r2, #0x58]

; 112  :     },

  0004c	e59f2128	 ldr         r2, [pc, #0x128]
  00050	e3a0305d	 mov         r3, #0x5D
  00054	e582305c	 str         r3, [r2, #0x5C]

; 113  :     {
; 114  :         L"VbusDischargeTime", PARAM_DWORD, FALSE, offset(MUsbOTGRegCfg_t, vbusDischargeTime),

  00058	e59f212c	 ldr         r2, [pc, #0x12C]
  0005c	e59f3118	 ldr         r3, [pc, #0x118]
  00060	e5832060	 str         r2, [r3, #0x60]
  00064	e59f2110	 ldr         r2, [pc, #0x110]
  00068	e3a03001	 mov         r3, #1
  0006c	e5823064	 str         r3, [r2, #0x64]
  00070	e59f2104	 ldr         r2, [pc, #0x104]
  00074	e3a03000	 mov         r3, #0
  00078	e5823068	 str         r3, [r2, #0x68]
  0007c	e59f20f8	 ldr         r2, [pc, #0xF8]
  00080	e3a03014	 mov         r3, #0x14
  00084	e582306c	 str         r3, [r2, #0x6C]

; 115  :             fieldsize(MUsbOTGRegCfg_t, vbusDischargeTime), (void *) 100

  00088	e59f20ec	 ldr         r2, [pc, #0xEC]
  0008c	e3a03004	 mov         r3, #4
  00090	e5823070	 str         r3, [r2, #0x70]

; 116  :     },

  00094	e59f20e0	 ldr         r2, [pc, #0xE0]
  00098	e3a03064	 mov         r3, #0x64
  0009c	e5823074	 str         r3, [r2, #0x74]

; 117  :     {
; 118  :         L"idgndIstPriority", PARAM_DWORD, FALSE, offset(MUsbOTGRegCfg_t, idgndIstPrio),

  000a0	e59f20e0	 ldr         r2, [pc, #0xE0]
  000a4	e59f30d0	 ldr         r3, [pc, #0xD0]
  000a8	e5832078	 str         r2, [r3, #0x78]
  000ac	e59f20c8	 ldr         r2, [pc, #0xC8]
  000b0	e3a03001	 mov         r3, #1
  000b4	e582307c	 str         r3, [r2, #0x7C]
  000b8	e59f20bc	 ldr         r2, [pc, #0xBC]
  000bc	e3a03000	 mov         r3, #0
  000c0	e5823080	 str         r3, [r2, #0x80]
  000c4	e59f20b0	 ldr         r2, [pc, #0xB0]
  000c8	e3a03018	 mov         r3, #0x18
  000cc	e5823084	 str         r3, [r2, #0x84]

; 119  :             fieldsize(MUsbOTGRegCfg_t, idgndIstPrio), (void *) IDGND_IST_PRIORITY

  000d0	e59f20a4	 ldr         r2, [pc, #0xA4]
  000d4	e3a03004	 mov         r3, #4
  000d8	e5823088	 str         r3, [r2, #0x88]

; 120  :     }, 

  000dc	e59f2098	 ldr         r2, [pc, #0x98]
  000e0	e3a03083	 mov         r3, #0x83
  000e4	e582308c	 str         r3, [r2, #0x8C]

; 121  :     {
; 122  :         L"otgIstPriority", PARAM_DWORD, FALSE, offset(MUsbOTGRegCfg_t, otgIstPrio),

  000e8	e59f2094	 ldr         r2, [pc, #0x94]
  000ec	e59f3088	 ldr         r3, [pc, #0x88]
  000f0	e5832090	 str         r2, [r3, #0x90]
  000f4	e59f2080	 ldr         r2, [pc, #0x80]
  000f8	e3a03001	 mov         r3, #1
  000fc	e5823094	 str         r3, [r2, #0x94]
  00100	e59f2074	 ldr         r2, [pc, #0x74]
  00104	e3a03000	 mov         r3, #0
  00108	e5823098	 str         r3, [r2, #0x98]
  0010c	e59f2068	 ldr         r2, [pc, #0x68]
  00110	e3a0301c	 mov         r3, #0x1C
  00114	e582309c	 str         r3, [r2, #0x9C]

; 123  :             fieldsize(MUsbOTGRegCfg_t, otgIstPrio), (void *) OTG_IST_PRIORITY

  00118	e59f205c	 ldr         r2, [pc, #0x5C]
  0011c	e3a03004	 mov         r3, #4
  00120	e58230a0	 str         r3, [r2, #0xA0]

; 124  :     },

  00124	e59f2050	 ldr         r2, [pc, #0x50]
  00128	e3a03082	 mov         r3, #0x82
  0012c	e58230a4	 str         r3, [r2, #0xA4]

; 125  :     {
; 126  :         L"dmaIstPriority", PARAM_DWORD, FALSE, offset(MUsbOTGRegCfg_t, dmaIstPrio),

  00130	e59f2048	 ldr         r2, [pc, #0x48]
  00134	e59f3040	 ldr         r3, [pc, #0x40]
  00138	e58320a8	 str         r2, [r3, #0xA8]
  0013c	e59f2038	 ldr         r2, [pc, #0x38]
  00140	e3a03001	 mov         r3, #1
  00144	e58230ac	 str         r3, [r2, #0xAC]
  00148	e59f202c	 ldr         r2, [pc, #0x2C]
  0014c	e3a03000	 mov         r3, #0
  00150	e58230b0	 str         r3, [r2, #0xB0]
  00154	e59f2020	 ldr         r2, [pc, #0x20]
  00158	e3a03020	 mov         r3, #0x20
  0015c	e58230b4	 str         r3, [r2, #0xB4]

; 127  :             fieldsize(MUsbOTGRegCfg_t, dmaIstPrio), (void *) DMA_IST_PRIORITY

  00160	e59f2014	 ldr         r2, [pc, #0x14]
  00164	e3a03004	 mov         r3, #4
  00168	e58230b8	 str         r3, [r2, #0xB8]

; 128  :     }

  0016c	e59f2008	 ldr         r2, [pc, #8]
  00170	e3a03081	 mov         r3, #0x81
  00174	e58230bc	 str         r3, [r2, #0xBC]

; 129  :     
; 130  : };

  00178	e12fff1e	 bx          lr
  0017c		 |$LN6@dynamic|
  0017c		 |$LN7@dynamic|
  0017c	00000000	 DCD         |s_deviceRegParams|
  00180		 |$LN8@dynamic|
  00180	00000000	 DCD         |??_C@_1BO@CDMCIFON@?$AAd?$AAm?$AAa?$AAI?$AAs?$AAt?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@|
  00184		 |$LN9@dynamic|
  00184	00000000	 DCD         |??_C@_1BO@HHIOKHGA@?$AAo?$AAt?$AAg?$AAI?$AAs?$AAt?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@|
  00188		 |$LN10@dynamic|
  00188	00000000	 DCD         |??_C@_1CC@NBEJDCFF@?$AAi?$AAd?$AAg?$AAn?$AAd?$AAI?$AAs?$AAt?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@|
  0018c		 |$LN11@dynamic|
  0018c	00000000	 DCD         |??_C@_1CE@GPPIHNAH@?$AAV?$AAb?$AAu?$AAs?$AAD?$AAi?$AAs?$AAc?$AAh?$AAa?$AAr?$AAg?$AAe?$AAT?$AAi?$AAm?$AAe?$AA?$AA@|
  00190		 |$LN12@dynamic|
  00190	00000000	 DCD         |??_C@_1O@KFOJGKH@?$AAD?$AAM?$AAA?$AAI?$AAr?$AAq?$AA?$AA@|
  00194		 |$LN13@dynamic|
  00194	00000000	 DCD         |pChargerNameEvt|
  00198		 |$M44415|

			 ENDP  ; |??__Es_deviceRegParams@@YAXXZ|, `dynamic initializer for 's_deviceRegParams''


  00008			 AREA	 |.data|, DATA
|s_deviceRegParams| DCD |??_C@_1BO@DFKBGJHN@?$AAs?$AAt?$AAa?$AAr?$AAt?$AAu?$AAp?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x4
	DCD	0x4
	DCD	0x1388
	DCD	|??_C@_1CC@EBHGALEG@?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAH?$AAi?$AAg?$AAh?$AAS?$AAp?$AAe?$AAe?$AAd?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x0
	DCD	0x4
	DCD	0x1
	DCD	|??_C@_1CC@CKFJFILD@?$AAU?$AAS?$AAB?$AAC?$AAh?$AAa?$AAr?$AAg?$AAe?$AAr?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x8
	DCD	0x4
	%	124

  00000			 AREA	 |.CRT$XCU|, DATA
|s_deviceRegParams$initializer$| DCD |??__Es_deviceRegParams@@YAXXZ|
	END
