; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\NLED\nleddrvr.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.data|, DATA
	 COMMON	|g_BlinkParams|, 0x4

	 COMMON	|g_NLedCurrentState|, 0x4


  00000			 AREA	 |.bss|, NOINIT
|g_hGPIO| %	0x4
|g_bExitThread| % 0x4

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|??_C@_1DM@KJMKIDAH@?$AAN?$AAL?$AAe?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$CB?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@PMPALDEJ@?$AAN?$AAL?$AAE?$AAD?$AA?5?$AA?$CD?$AA?5?$AA?$CF?$AAd?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AAc?$AAh@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@EOFNDGEH@?$AAN?$AAL?$AAE?$AAD?$AA?5?$AA?$CD?$AA?5?$AA?$CF?$AAd?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAa?$AAw?$AAa?$AAk?$AAe?$AAn?$AAe?$AAd@| [ DATA ] ; `string'
	EXPORT	|NLedControlThread|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
	IMPORT	|WaitForSingleObject|
	IMPORT	|__rt_sdiv|

  00008			 AREA	 |.bss|, NOINIT
|g_hLedHandle| % 0x4

  00000			 AREA	 |.pdata|, PDATA
|$T44808| DCD	|$LN32@NLedContro|
	DCD	0x40013b04
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\nled\nleddrvr.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@KJMKIDAH@?$AAN?$AAL?$AAe?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$CB?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| DCB "N"
	DCB	0x0, "L", 0x0, "e", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "T", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "e"
	DCB	0x0, "x", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "!", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@PMPALDEJ@?$AAN?$AAL?$AAE?$AAD?$AA?5?$AA?$CD?$AA?5?$AA?$CF?$AAd?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AAc?$AAh@| DCB "N"
	DCB	0x0, "L", 0x0, "E", 0x0, "D", 0x0, " ", 0x0, "#", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, "d", 0x0, "r", 0x0, "i"
	DCB	0x0, "v", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, ":", 0x0, " "
	DCB	0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, " ", 0x0, "c"
	DCB	0x0, "h", 0x0, "a", 0x0, "n", 0x0, "g", 0x0, "e", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@EOFNDGEH@?$AAN?$AAL?$AAE?$AAD?$AA?5?$AA?$CD?$AA?5?$AA?$CF?$AAd?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAa?$AAw?$AAa?$AAk?$AAe?$AAn?$AAe?$AAd@| DCB "N"
	DCB	0x0, "L", 0x0, "E", 0x0, "D", 0x0, " ", 0x0, "#", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, "d", 0x0, "r", 0x0, "i"
	DCB	0x0, "v", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "a"
	DCB	0x0, "w", 0x0, "a", 0x0, "k", 0x0, "e", 0x0, "n", 0x0, "e"
	DCB	0x0, "d", 0x0, ":", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |NLedControlThread| PROC

; 112  : {

  00000		 |$LN32@NLedContro|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd024	 sub         sp, sp, #0x24
  00010		 |$M44805|

; 113  :     int i;
; 114  : 
; 115  :     // turn NLED off
; 116  :     NLedDriverSetLedState(NLedID, 0);

  00010	e3a01000	 mov         r1, #0
  00014	e59d002c	 ldr         r0, [sp, #0x2C]
  00018	eb000000	 bl          NLedDriverSetLedState
  0001c		 |$LN17@NLedContro|
  0001c		 |$LN29@NLedContro|
  0001c		 |$LN28@NLedContro|
  0001c		 |$StateChangeDueToApiCall$44623|

; 117  : 
; 118  :     for(;;)
; 119  :     {
; 120  :         StateChangeDueToApiCall:
; 121  : 
; 122  :         if (g_bExitThread == TRUE)

  0001c	e59f34c4	 ldr         r3, [pc, #0x4C4]
  00020	e5933000	 ldr         r3, [r3]
  00024	e3530001	 cmp         r3, #1
  00028	1a000000	 bne         |$LN15@NLedContro|

; 123  :             break;

  0002c	ea000114	 b           |$LN16@NLedContro|
  00030		 |$LN15@NLedContro|

; 124  : 
; 125  :         // check unchanged NLED state
; 126  :         if ( g_NLedCurrentState[NLedID] == g_BlinkParams[NLedID].OffOnBlink )

  00030	e59d102c	 ldr         r1, [sp, #0x2C]
  00034	e3a03004	 mov         r3, #4
  00038	e0020391	 mul         r2, r1, r3
  0003c	e59f3490	 ldr         r3, [pc, #0x490]
  00040	e5933000	 ldr         r3, [r3]
  00044	e0830002	 add         r0, r3, r2
  00048	e59d102c	 ldr         r1, [sp, #0x2C]
  0004c	e3a0301c	 mov         r3, #0x1C
  00050	e0020391	 mul         r2, r1, r3
  00054	e59f347c	 ldr         r3, [pc, #0x47C]
  00058	e5933000	 ldr         r3, [r3]
  0005c	e0833002	 add         r3, r3, r2
  00060	e2833004	 add         r3, r3, #4
  00064	e5902000	 ldr         r2, [r0]
  00068	e5933000	 ldr         r3, [r3]
  0006c	e1520003	 cmp         r2, r3
  00070	1a0000b2	 bne         |$LN14@NLedContro|

; 127  :         {
; 128  :             // handle blinking state
; 129  :             if ( g_NLedCurrentState[NLedID] == 2 )

  00074	e59d102c	 ldr         r1, [sp, #0x2C]
  00078	e3a03004	 mov         r3, #4
  0007c	e0020391	 mul         r2, r1, r3
  00080	e59f344c	 ldr         r3, [pc, #0x44C]
  00084	e5933000	 ldr         r3, [r3]
  00088	e0833002	 add         r3, r3, r2
  0008c	e5933000	 ldr         r3, [r3]
  00090	e3530002	 cmp         r3, #2
  00094	1a000093	 bne         |$LN13@NLedContro|

; 130  :             {
; 131  :                 // Do meta cycle on blinks (just do regular blink cycle if Meta is 0)
; 132  :                 //DEBUGMSG(ZONE_FUNCTION, (TEXT("NLED%d MetaCycleOn %d periods\r\n"), NLedID, g_BlinkParams[NLedID].MetaCycleOn));
; 133  :                 for (i = 0; i < (g_BlinkParams[NLedID].MetaCycleOn == 0 ? 1 : g_BlinkParams[NLedID].MetaCycleOn); i++)

  00098	e3a03000	 mov         r3, #0
  0009c	e58d3000	 str         r3, [sp]
  000a0	ea000002	 b           |$LN12@NLedContro|
  000a4		 |$LN11@NLedContro|
  000a4	e59d3000	 ldr         r3, [sp]
  000a8	e2833001	 add         r3, r3, #1
  000ac	e58d3000	 str         r3, [sp]
  000b0		 |$LN12@NLedContro|
  000b0	e59d102c	 ldr         r1, [sp, #0x2C]
  000b4	e3a0301c	 mov         r3, #0x1C
  000b8	e0020391	 mul         r2, r1, r3
  000bc	e59f3414	 ldr         r3, [pc, #0x414]
  000c0	e5933000	 ldr         r3, [r3]
  000c4	e0833002	 add         r3, r3, r2
  000c8	e2833014	 add         r3, r3, #0x14
  000cc	e5933000	 ldr         r3, [r3]
  000d0	e3530000	 cmp         r3, #0
  000d4	1a000002	 bne         |$LN20@NLedContro|
  000d8	e3a03001	 mov         r3, #1
  000dc	e58d3008	 str         r3, [sp, #8]
  000e0	ea000008	 b           |$LN21@NLedContro|
  000e4		 |$LN20@NLedContro|
  000e4	e59d102c	 ldr         r1, [sp, #0x2C]
  000e8	e3a0301c	 mov         r3, #0x1C
  000ec	e0020391	 mul         r2, r1, r3
  000f0	e59f33e0	 ldr         r3, [pc, #0x3E0]
  000f4	e5933000	 ldr         r3, [r3]
  000f8	e0833002	 add         r3, r3, r2
  000fc	e2833014	 add         r3, r3, #0x14
  00100	e5933000	 ldr         r3, [r3]
  00104	e58d3008	 str         r3, [sp, #8]
  00108		 |$LN21@NLedContro|
  00108	e59d2000	 ldr         r2, [sp]
  0010c	e59d3008	 ldr         r3, [sp, #8]
  00110	e1520003	 cmp         r2, r3
  00114	aa00003f	 bge         |$LN10@NLedContro|

; 134  :                 {
; 135  :                     // turn NLED on
; 136  :                     NLedDriverSetLedState(NLedID, 1);

  00118	e3a01001	 mov         r1, #1
  0011c	e59d002c	 ldr         r0, [sp, #0x2C]
  00120	eb000000	 bl          NLedDriverSetLedState

; 137  : 
; 138  :                     // wait for on time (or change from API call)
; 139  :                     if ( WaitForSingleObject(g_hLedHandle[NLedID], (g_BlinkParams[NLedID].OnTime / 1000)) == WAIT_OBJECT_0 )

  00124	e59d102c	 ldr         r1, [sp, #0x2C]
  00128	e3a0301c	 mov         r3, #0x1C
  0012c	e0020391	 mul         r2, r1, r3
  00130	e59f33a0	 ldr         r3, [pc, #0x3A0]
  00134	e5933000	 ldr         r3, [r3]
  00138	e0833002	 add         r3, r3, r2
  0013c	e283300c	 add         r3, r3, #0xC
  00140	e5931000	 ldr         r1, [r3]
  00144	e3a00ffa	 mov         r0, #0xFA, 30
  00148	eb000000	 bl          __rt_sdiv
  0014c	e1a01000	 mov         r1, r0
  00150	e59d002c	 ldr         r0, [sp, #0x2C]
  00154	e3a03004	 mov         r3, #4
  00158	e0020390	 mul         r2, r0, r3
  0015c	e59f3380	 ldr         r3, [pc, #0x380]
  00160	e5933000	 ldr         r3, [r3]
  00164	e0833002	 add         r3, r3, r2
  00168	e5930000	 ldr         r0, [r3]
  0016c	eb000000	 bl          WaitForSingleObject
  00170	e58d000c	 str         r0, [sp, #0xC]
  00174	e59d300c	 ldr         r3, [sp, #0xC]
  00178	e3530000	 cmp         r3, #0
  0017c	1a000000	 bne         |$LN9@NLedContro|

; 140  :                         goto StateChangeDueToApiCall;

  00180	eaffffa5	 b           |$StateChangeDueToApiCall$44623|
  00184		 |$LN9@NLedContro|

; 141  : 
; 142  :                     // turn NLED off
; 143  :                     NLedDriverSetLedState(NLedID, 0);

  00184	e3a01000	 mov         r1, #0
  00188	e59d002c	 ldr         r0, [sp, #0x2C]
  0018c	eb000000	 bl          NLedDriverSetLedState

; 144  : 
; 145  :                     // wait for off time (or change from API call)
; 146  :                     if ( WaitForSingleObject(g_hLedHandle[NLedID], ((g_BlinkParams[NLedID].TotalCycleTime - g_BlinkParams[NLedID].OnTime) / 1000)) == WAIT_OBJECT_0 )

  00190	e59d102c	 ldr         r1, [sp, #0x2C]
  00194	e3a0301c	 mov         r3, #0x1C
  00198	e0020391	 mul         r2, r1, r3
  0019c	e59f3334	 ldr         r3, [pc, #0x334]
  001a0	e5933000	 ldr         r3, [r3]
  001a4	e0833002	 add         r3, r3, r2
  001a8	e2830008	 add         r0, r3, #8
  001ac	e59d102c	 ldr         r1, [sp, #0x2C]
  001b0	e3a0301c	 mov         r3, #0x1C
  001b4	e0020391	 mul         r2, r1, r3
  001b8	e59f3318	 ldr         r3, [pc, #0x318]
  001bc	e5933000	 ldr         r3, [r3]
  001c0	e0833002	 add         r3, r3, r2
  001c4	e283300c	 add         r3, r3, #0xC
  001c8	e5902000	 ldr         r2, [r0]
  001cc	e5933000	 ldr         r3, [r3]
  001d0	e0421003	 sub         r1, r2, r3
  001d4	e3a00ffa	 mov         r0, #0xFA, 30
  001d8	eb000000	 bl          __rt_sdiv
  001dc	e1a01000	 mov         r1, r0
  001e0	e59d002c	 ldr         r0, [sp, #0x2C]
  001e4	e3a03004	 mov         r3, #4
  001e8	e0020390	 mul         r2, r0, r3
  001ec	e59f32f0	 ldr         r3, [pc, #0x2F0]
  001f0	e5933000	 ldr         r3, [r3]
  001f4	e0833002	 add         r3, r3, r2
  001f8	e5930000	 ldr         r0, [r3]
  001fc	eb000000	 bl          WaitForSingleObject
  00200	e58d0010	 str         r0, [sp, #0x10]
  00204	e59d3010	 ldr         r3, [sp, #0x10]
  00208	e3530000	 cmp         r3, #0
  0020c	1a000000	 bne         |$LN8@NLedContro|

; 147  :                         goto StateChangeDueToApiCall;

  00210	eaffff81	 b           |$LN28@NLedContro|
  00214		 |$LN8@NLedContro|

; 148  :                 }

  00214	eaffffa2	 b           |$LN11@NLedContro|
  00218		 |$LN10@NLedContro|

; 149  : 
; 150  :                 // check for meta off specified, wait for that time period (or change from API call)
; 151  :                 //DEBUGMSG(ZONE_FUNCTION, (TEXT("NLED%d MetaCycleOff %d periods\r\n"), NLedID, g_BlinkParams[NLedID].MetaCycleOff));
; 152  :                 if ( g_BlinkParams[NLedID].MetaCycleOff > 0 )

  00218	e59d102c	 ldr         r1, [sp, #0x2C]
  0021c	e3a0301c	 mov         r3, #0x1C
  00220	e0020391	 mul         r2, r1, r3
  00224	e59f32ac	 ldr         r3, [pc, #0x2AC]
  00228	e5933000	 ldr         r3, [r3]
  0022c	e0833002	 add         r3, r3, r2
  00230	e2833018	 add         r3, r3, #0x18
  00234	e5933000	 ldr         r3, [r3]
  00238	e3530000	 cmp         r3, #0
  0023c	da000028	 ble         |$LN7@NLedContro|

; 153  :                 {
; 154  :                     if ( WaitForSingleObject(g_hLedHandle[NLedID], (((g_BlinkParams[NLedID].OffTime + g_BlinkParams[NLedID].OnTime) / 1000) * g_BlinkParams[NLedID].MetaCycleOff)) == WAIT_OBJECT_0 )

  00240	e59d102c	 ldr         r1, [sp, #0x2C]
  00244	e3a0301c	 mov         r3, #0x1C
  00248	e0020391	 mul         r2, r1, r3
  0024c	e59f3284	 ldr         r3, [pc, #0x284]
  00250	e5933000	 ldr         r3, [r3]
  00254	e0833002	 add         r3, r3, r2
  00258	e2830010	 add         r0, r3, #0x10
  0025c	e59d102c	 ldr         r1, [sp, #0x2C]
  00260	e3a0301c	 mov         r3, #0x1C
  00264	e0020391	 mul         r2, r1, r3
  00268	e59f3268	 ldr         r3, [pc, #0x268]
  0026c	e5933000	 ldr         r3, [r3]
  00270	e0833002	 add         r3, r3, r2
  00274	e283300c	 add         r3, r3, #0xC
  00278	e5902000	 ldr         r2, [r0]
  0027c	e5933000	 ldr         r3, [r3]
  00280	e0821003	 add         r1, r2, r3
  00284	e3a00ffa	 mov         r0, #0xFA, 30
  00288	eb000000	 bl          __rt_sdiv
  0028c	e59d102c	 ldr         r1, [sp, #0x2C]
  00290	e3a0301c	 mov         r3, #0x1C
  00294	e0020391	 mul         r2, r1, r3
  00298	e59f3238	 ldr         r3, [pc, #0x238]
  0029c	e5933000	 ldr         r3, [r3]
  002a0	e0833002	 add         r3, r3, r2
  002a4	e2833018	 add         r3, r3, #0x18
  002a8	e5933000	 ldr         r3, [r3]
  002ac	e0010390	 mul         r1, r0, r3
  002b0	e59d002c	 ldr         r0, [sp, #0x2C]
  002b4	e3a03004	 mov         r3, #4
  002b8	e0020390	 mul         r2, r0, r3
  002bc	e59f3220	 ldr         r3, [pc, #0x220]
  002c0	e5933000	 ldr         r3, [r3]
  002c4	e0833002	 add         r3, r3, r2
  002c8	e5930000	 ldr         r0, [r3]
  002cc	eb000000	 bl          WaitForSingleObject
  002d0	e58d0014	 str         r0, [sp, #0x14]
  002d4	e59d3014	 ldr         r3, [sp, #0x14]
  002d8	e3530000	 cmp         r3, #0
  002dc	1a000000	 bne         |$LN6@NLedContro|

; 155  :                         goto StateChangeDueToApiCall;

  002e0	eaffff4d	 b           |$LN29@NLedContro|
  002e4		 |$LN6@NLedContro|
  002e4		 |$LN7@NLedContro|

; 156  :                 }
; 157  :             }
; 158  :             else

  002e4	ea000014	 b           |$LN5@NLedContro|
  002e8		 |$LN13@NLedContro|

; 159  :             {
; 160  :                 // LED state unchanged, do nothing for on or off state except wait for API change
; 161  :                 WaitForSingleObject(g_hLedHandle[NLedID], INFINITE);

  002e8	e3e01000	 mvn         r1, #0
  002ec	e59d002c	 ldr         r0, [sp, #0x2C]
  002f0	e3a03004	 mov         r3, #4
  002f4	e0020390	 mul         r2, r0, r3
  002f8	e59f31e4	 ldr         r3, [pc, #0x1E4]
  002fc	e5933000	 ldr         r3, [r3]
  00300	e0833002	 add         r3, r3, r2
  00304	e5930000	 ldr         r0, [r3]
  00308	eb000000	 bl          WaitForSingleObject

; 162  :                 #if ENABLE_DEBUG_MESSAGES
; 163  :                     DEBUGMSG(ZONE_FUNCTION, (TEXT("NLED # %d driver thread awakened:\r\n"), NLedID));

  0030c	e59f31bc	 ldr         r3, [pc, #0x1BC]
  00310	e5933440	 ldr         r3, [r3, #0x440]
  00314	e3130040	 tst         r3, #0x40
  00318	0a000005	 beq         |$LN22@NLedContro|
  0031c	e59d102c	 ldr         r1, [sp, #0x2C]
  00320	e59f01b8	 ldr         r0, [pc, #0x1B8]
  00324	eb000000	 bl          NKDbgPrintfW
  00328	e3a03001	 mov         r3, #1
  0032c	e58d3018	 str         r3, [sp, #0x18]
  00330	ea000001	 b           |$LN23@NLedContro|
  00334		 |$LN22@NLedContro|
  00334	e3a03000	 mov         r3, #0
  00338	e58d3018	 str         r3, [sp, #0x18]
  0033c		 |$LN23@NLedContro|
  0033c		 |$LN5@NLedContro|

; 164  :                 #endif
; 165  :             }
; 166  :         }
; 167  :         else

  0033c	ea00004f	 b           |$LN4@NLedContro|
  00340		 |$LN14@NLedContro|

; 168  :         {
; 169  :             // LED state changed, update NLED for new state
; 170  :             #if ENABLE_DEBUG_MESSAGES
; 171  :                 DEBUGMSG(ZONE_FUNCTION, (TEXT("NLED # %d driver thread: Mode change to %d\r\n"), NLedID, g_BlinkParams[NLedID].OffOnBlink));

  00340	e59f3188	 ldr         r3, [pc, #0x188]
  00344	e5933440	 ldr         r3, [r3, #0x440]
  00348	e3130040	 tst         r3, #0x40
  0034c	0a00000d	 beq         |$LN24@NLedContro|
  00350	e59d102c	 ldr         r1, [sp, #0x2C]
  00354	e3a0301c	 mov         r3, #0x1C
  00358	e0020391	 mul         r2, r1, r3
  0035c	e59f3174	 ldr         r3, [pc, #0x174]
  00360	e5933000	 ldr         r3, [r3]
  00364	e0833002	 add         r3, r3, r2
  00368	e2833004	 add         r3, r3, #4
  0036c	e5932000	 ldr         r2, [r3]
  00370	e59d102c	 ldr         r1, [sp, #0x2C]
  00374	e59f0160	 ldr         r0, [pc, #0x160]
  00378	eb000000	 bl          NKDbgPrintfW
  0037c	e3a03001	 mov         r3, #1
  00380	e58d301c	 str         r3, [sp, #0x1C]
  00384	ea000001	 b           |$LN25@NLedContro|
  00388		 |$LN24@NLedContro|
  00388	e3a03000	 mov         r3, #0
  0038c	e58d301c	 str         r3, [sp, #0x1C]
  00390		 |$LN25@NLedContro|

; 172  :             #endif
; 173  :             if ( g_BlinkParams[NLedID].OffOnBlink == 0 )

  00390	e59d102c	 ldr         r1, [sp, #0x2C]
  00394	e3a0301c	 mov         r3, #0x1C
  00398	e0020391	 mul         r2, r1, r3
  0039c	e59f3134	 ldr         r3, [pc, #0x134]
  003a0	e5933000	 ldr         r3, [r3]
  003a4	e0833002	 add         r3, r3, r2
  003a8	e2833004	 add         r3, r3, #4
  003ac	e5933000	 ldr         r3, [r3]
  003b0	e3530000	 cmp         r3, #0
  003b4	1a00000a	 bne         |$LN3@NLedContro|

; 174  :             {
; 175  :                 NLedDriverSetLedState(NLedID, 0);

  003b8	e3a01000	 mov         r1, #0
  003bc	e59d002c	 ldr         r0, [sp, #0x2C]
  003c0	eb000000	 bl          NLedDriverSetLedState

; 176  :                 g_NLedCurrentState[NLedID] = 0;

  003c4	e59d102c	 ldr         r1, [sp, #0x2C]
  003c8	e3a03004	 mov         r3, #4
  003cc	e0020391	 mul         r2, r1, r3
  003d0	e59f30fc	 ldr         r3, [pc, #0xFC]
  003d4	e5933000	 ldr         r3, [r3]
  003d8	e0832002	 add         r2, r3, r2
  003dc	e3a03000	 mov         r3, #0
  003e0	e5823000	 str         r3, [r2]
  003e4		 |$LN3@NLedContro|

; 177  :             }
; 178  :             if ( g_BlinkParams[NLedID].OffOnBlink == 1 )

  003e4	e59d102c	 ldr         r1, [sp, #0x2C]
  003e8	e3a0301c	 mov         r3, #0x1C
  003ec	e0020391	 mul         r2, r1, r3
  003f0	e59f30e0	 ldr         r3, [pc, #0xE0]
  003f4	e5933000	 ldr         r3, [r3]
  003f8	e0833002	 add         r3, r3, r2
  003fc	e2833004	 add         r3, r3, #4
  00400	e5933000	 ldr         r3, [r3]
  00404	e3530001	 cmp         r3, #1
  00408	1a00000a	 bne         |$LN2@NLedContro|

; 179  :             {
; 180  :                 NLedDriverSetLedState(NLedID, 1);

  0040c	e3a01001	 mov         r1, #1
  00410	e59d002c	 ldr         r0, [sp, #0x2C]
  00414	eb000000	 bl          NLedDriverSetLedState

; 181  :                 g_NLedCurrentState[NLedID] = 1;

  00418	e59d102c	 ldr         r1, [sp, #0x2C]
  0041c	e3a03004	 mov         r3, #4
  00420	e0020391	 mul         r2, r1, r3
  00424	e59f30a8	 ldr         r3, [pc, #0xA8]
  00428	e5933000	 ldr         r3, [r3]
  0042c	e0832002	 add         r2, r3, r2
  00430	e3a03001	 mov         r3, #1
  00434	e5823000	 str         r3, [r2]
  00438		 |$LN2@NLedContro|

; 182  :             }
; 183  :             if ( g_BlinkParams[NLedID].OffOnBlink == 2 )

  00438	e59d102c	 ldr         r1, [sp, #0x2C]
  0043c	e3a0301c	 mov         r3, #0x1C
  00440	e0020391	 mul         r2, r1, r3
  00444	e59f308c	 ldr         r3, [pc, #0x8C]
  00448	e5933000	 ldr         r3, [r3]
  0044c	e0833002	 add         r3, r3, r2
  00450	e2833004	 add         r3, r3, #4
  00454	e5933000	 ldr         r3, [r3]
  00458	e3530002	 cmp         r3, #2
  0045c	1a000007	 bne         |$LN1@NLedContro|

; 184  :                 g_NLedCurrentState[NLedID] = 2;

  00460	e59d102c	 ldr         r1, [sp, #0x2C]
  00464	e3a03004	 mov         r3, #4
  00468	e0020391	 mul         r2, r1, r3
  0046c	e59f3060	 ldr         r3, [pc, #0x60]
  00470	e5933000	 ldr         r3, [r3]
  00474	e0832002	 add         r2, r3, r2
  00478	e3a03002	 mov         r3, #2
  0047c	e5823000	 str         r3, [r2]
  00480		 |$LN1@NLedContro|
  00480		 |$LN4@NLedContro|

; 185  :         }
; 186  :     }

  00480	eafffee5	 b           |$LN17@NLedContro|
  00484		 |$LN16@NLedContro|

; 187  : 
; 188  :     DEBUGMSG(ZONE_INIT, (TEXT("NLedControlThread exiting!!\r\n"), NLedID));

  00484	e59f3044	 ldr         r3, [pc, #0x44]
  00488	e5933440	 ldr         r3, [r3, #0x440]
  0048c	e3130004	 tst         r3, #4
  00490	0a000005	 beq         |$LN26@NLedContro|
  00494	e59d102c	 ldr         r1, [sp, #0x2C]
  00498	e59f002c	 ldr         r0, [pc, #0x2C]
  0049c	eb000000	 bl          NKDbgPrintfW
  004a0	e3a03001	 mov         r3, #1
  004a4	e58d3020	 str         r3, [sp, #0x20]
  004a8	ea000001	 b           |$LN27@NLedContro|
  004ac		 |$LN26@NLedContro|
  004ac	e3a03000	 mov         r3, #0
  004b0	e58d3020	 str         r3, [sp, #0x20]
  004b4		 |$LN27@NLedContro|

; 189  : 
; 190  :     return 0;

  004b4	e3a03000	 mov         r3, #0
  004b8	e58d3004	 str         r3, [sp, #4]

; 191  : }

  004bc	e59d0004	 ldr         r0, [sp, #4]
  004c0	e28dd024	 add         sp, sp, #0x24
  004c4	e89d6000	 ldmia       sp, {sp, lr}
  004c8	e12fff1e	 bx          lr
  004cc		 |$LN33@NLedContro|
  004cc		 |$LN34@NLedContro|
  004cc	00000000	 DCD         |??_C@_1DM@KJMKIDAH@?$AAN?$AAL?$AAe?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$CB?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@|
  004d0		 |$LN35@NLedContro|
  004d0	00000000	 DCD         |dpCurSettings|
  004d4		 |$LN36@NLedContro|
  004d4	00000000	 DCD         |g_NLedCurrentState|
  004d8		 |$LN37@NLedContro|
  004d8	00000000	 DCD         |g_BlinkParams|
  004dc		 |$LN38@NLedContro|
  004dc	00000000	 DCD         |??_C@_1FK@PMPALDEJ@?$AAN?$AAL?$AAE?$AAD?$AA?5?$AA?$CD?$AA?5?$AA?$CF?$AAd?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AAc?$AAh@|
  004e0		 |$LN39@NLedContro|
  004e0	00000000	 DCD         |??_C@_1EI@EOFNDGEH@?$AAN?$AAL?$AAE?$AAD?$AA?5?$AA?$CD?$AA?5?$AA?$CF?$AAd?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAa?$AAw?$AAa?$AAk?$AAe?$AAn?$AAe?$AAd@|
  004e4		 |$LN40@NLedContro|
  004e4	00000000	 DCD         |g_hLedHandle|
  004e8		 |$LN41@NLedContro|
  004e8	00000000	 DCD         |g_bExitThread|
  004ec		 |$M44806|

			 ENDP  ; |NLedControlThread|

	EXPORT	|??_C@_1HA@JOLELBJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAN?$AAL?$AAe?$AAd?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAS?$AAe?$AAt?$AAL?$AAe?$AAd?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?3?$AA?5?$AAi?$AAn@| [ DATA ] ; `string'
	IMPORT	|GPIOSetBit|
	IMPORT	|GPIOClrBit|
	IMPORT	|g_GPIOId|
	IMPORT	|g_GPIOActiveState|
	IMPORT	|g_dwNbLeds|

  00008			 AREA	 |.pdata|, PDATA
|$T44824| DCD	|$LN16@NLedDriver|
	DCD	0x40005f04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@JOLELBJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAN?$AAL?$AAe?$AAd?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAS?$AAe?$AAt?$AAL?$AAe?$AAd?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?3?$AA?5?$AAi?$AAn@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "N", 0x0, "L", 0x0, "e", 0x0, "d", 0x0, "D", 0x0, "r"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "L", 0x0, "e", 0x0, "d", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "N", 0x0, "L", 0x0, "E", 0x0, "D", 0x0, " "
	DCB	0x0, "n", 0x0, "u", 0x0, "m", 0x0, "b", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  004ec			 AREA	 |.text|, CODE, ARM

  004ec		 |NLedDriverSetLedState| PROC

; 82   : {

  004ec		 |$LN16@NLedDriver|
  004ec	e1a0c00d	 mov         r12, sp
  004f0	e92d0003	 stmdb       sp!, {r0, r1}
  004f4	e92d5000	 stmdb       sp!, {r12, lr}
  004f8	e24dd008	 sub         sp, sp, #8
  004fc		 |$M44821|

; 83   :     if (LedNum >= g_dwNbLeds)

  004fc	e59d2010	 ldr         r2, [sp, #0x10]
  00500	e59f315c	 ldr         r3, [pc, #0x15C]
  00504	e5933000	 ldr         r3, [r3]
  00508	e1520003	 cmp         r2, r3
  0050c	3a00000c	 bcc         |$LN9@NLedDriver|

; 84   :     {
; 85   :         DEBUGMSG(ZONE_ERROR, (TEXT("ERROR: NLedDriverSetLedState: invalid NLED number: %d\r\n"), LedNum));

  00510	e59f3148	 ldr         r3, [pc, #0x148]
  00514	e5933440	 ldr         r3, [r3, #0x440]
  00518	e3130001	 tst         r3, #1
  0051c	0a000005	 beq         |$LN12@NLedDriver|
  00520	e59d1010	 ldr         r1, [sp, #0x10]
  00524	e59f0130	 ldr         r0, [pc, #0x130]
  00528	eb000000	 bl          NKDbgPrintfW
  0052c	e3a03001	 mov         r3, #1
  00530	e58d3000	 str         r3, [sp]
  00534	ea000001	 b           |$LN13@NLedDriver|
  00538		 |$LN12@NLedDriver|
  00538	e3a03000	 mov         r3, #0
  0053c	e58d3000	 str         r3, [sp]
  00540		 |$LN13@NLedDriver|

; 86   :         return;

  00540	ea00003f	 b           |$LN10@NLedDriver|
  00544		 |$LN9@NLedDriver|

; 87   :     }
; 88   : 
; 89   :     switch (LedState)

  00544	e59d3014	 ldr         r3, [sp, #0x14]
  00548	e58d3004	 str         r3, [sp, #4]
  0054c	e59d3004	 ldr         r3, [sp, #4]
  00550	e3530000	 cmp         r3, #0
  00554	0a000003	 beq         |$LN6@NLedDriver|
  00558	e59d3004	 ldr         r3, [sp, #4]
  0055c	e3530001	 cmp         r3, #1
  00560	0a00001c	 beq         |$LN3@NLedDriver|
  00564	ea000036	 b           |$LN7@NLedDriver|
  00568		 |$LN6@NLedDriver|

; 90   :     {
; 91   :         case 0:
; 92   :             // turn LED off 
; 93   :             if (g_GPIOActiveState[LedNum])

  00568	e59d1010	 ldr         r1, [sp, #0x10]
  0056c	e3a03004	 mov         r3, #4
  00570	e0020391	 mul         r2, r1, r3
  00574	e59f30dc	 ldr         r3, [pc, #0xDC]
  00578	e0833002	 add         r3, r3, r2
  0057c	e5933000	 ldr         r3, [r3]
  00580	e3530000	 cmp         r3, #0
  00584	0a000009	 beq         |$LN5@NLedDriver|

; 94   :                 GPIOClrBit(g_hGPIO, g_GPIOId[LedNum]);

  00588	e59d1010	 ldr         r1, [sp, #0x10]
  0058c	e3a03004	 mov         r3, #4
  00590	e0020391	 mul         r2, r1, r3
  00594	e59f30b8	 ldr         r3, [pc, #0xB8]
  00598	e0833002	 add         r3, r3, r2
  0059c	e5931000	 ldr         r1, [r3]
  005a0	e59f30a8	 ldr         r3, [pc, #0xA8]
  005a4	e5930000	 ldr         r0, [r3]
  005a8	eb000000	 bl          GPIOClrBit

; 95   :             else

  005ac	ea000008	 b           |$LN4@NLedDriver|
  005b0		 |$LN5@NLedDriver|

; 96   :                 GPIOSetBit(g_hGPIO, g_GPIOId[LedNum]);

  005b0	e59d1010	 ldr         r1, [sp, #0x10]
  005b4	e3a03004	 mov         r3, #4
  005b8	e0020391	 mul         r2, r1, r3
  005bc	e59f3090	 ldr         r3, [pc, #0x90]
  005c0	e0833002	 add         r3, r3, r2
  005c4	e5931000	 ldr         r1, [r3]
  005c8	e59f3080	 ldr         r3, [pc, #0x80]
  005cc	e5930000	 ldr         r0, [r3]
  005d0	eb000000	 bl          GPIOSetBit
  005d4		 |$LN4@NLedDriver|

; 97   :             break;

  005d4	ea00001a	 b           |$LN7@NLedDriver|
  005d8		 |$LN3@NLedDriver|

; 98   : 
; 99   :         case 1:
; 100  :             // turn LED on
; 101  :             if (g_GPIOActiveState[LedNum])

  005d8	e59d1010	 ldr         r1, [sp, #0x10]
  005dc	e3a03004	 mov         r3, #4
  005e0	e0020391	 mul         r2, r1, r3
  005e4	e59f306c	 ldr         r3, [pc, #0x6C]
  005e8	e0833002	 add         r3, r3, r2
  005ec	e5933000	 ldr         r3, [r3]
  005f0	e3530000	 cmp         r3, #0
  005f4	0a000009	 beq         |$LN2@NLedDriver|

; 102  :                 GPIOSetBit(g_hGPIO, g_GPIOId[LedNum]);

  005f8	e59d1010	 ldr         r1, [sp, #0x10]
  005fc	e3a03004	 mov         r3, #4
  00600	e0020391	 mul         r2, r1, r3
  00604	e59f3048	 ldr         r3, [pc, #0x48]
  00608	e0833002	 add         r3, r3, r2
  0060c	e5931000	 ldr         r1, [r3]
  00610	e59f3038	 ldr         r3, [pc, #0x38]
  00614	e5930000	 ldr         r0, [r3]
  00618	eb000000	 bl          GPIOSetBit

; 103  :             else

  0061c	ea000008	 b           |$LN1@NLedDriver|
  00620		 |$LN2@NLedDriver|

; 104  :                 GPIOClrBit(g_hGPIO, g_GPIOId[LedNum]);

  00620	e59d1010	 ldr         r1, [sp, #0x10]
  00624	e3a03004	 mov         r3, #4
  00628	e0020391	 mul         r2, r1, r3
  0062c	e59f3020	 ldr         r3, [pc, #0x20]
  00630	e0833002	 add         r3, r3, r2
  00634	e5931000	 ldr         r1, [r3]
  00638	e59f3010	 ldr         r3, [pc, #0x10]
  0063c	e5930000	 ldr         r0, [r3]
  00640	eb000000	 bl          GPIOClrBit
  00644		 |$LN1@NLedDriver|
  00644		 |$LN7@NLedDriver|
  00644		 |$LN10@NLedDriver|

; 105  :             break;
; 106  :     }
; 107  : }

  00644	e28dd008	 add         sp, sp, #8
  00648	e89d6000	 ldmia       sp, {sp, lr}
  0064c	e12fff1e	 bx          lr
  00650		 |$LN17@NLedDriver|
  00650		 |$LN18@NLedDriver|
  00650	00000000	 DCD         |g_hGPIO|
  00654		 |$LN19@NLedDriver|
  00654	00000000	 DCD         |g_GPIOId|
  00658		 |$LN20@NLedDriver|
  00658	00000000	 DCD         |g_GPIOActiveState|
  0065c		 |$LN21@NLedDriver|
  0065c	00000000	 DCD         |??_C@_1HA@JOLELBJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAN?$AAL?$AAe?$AAd?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAS?$AAe?$AAt?$AAL?$AAe?$AAd?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?3?$AA?5?$AAi?$AAn@|
  00660		 |$LN22@NLedDriver|
  00660	00000000	 DCD         |dpCurSettings|
  00664		 |$LN23@NLedDriver|
  00664	00000000	 DCD         |g_dwNbLeds|
  00668		 |$M44822|

			 ENDP  ; |NLedDriverSetLedState|

	EXPORT	|??_C@_1JI@CKDILNDN@?$AAN?$AAL?$AAE?$AAD?$AAD?$AAR?$AAV?$AA?3?$AA?5?$AAN?$AAL?$AAe?$AAd?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo@| [ DATA ] ; `string'
	EXPORT	|NLedDriverGetDeviceInfo|
	IMPORT	|SetLastError|
	IMPORT	|g_LastLEDIsVibrator|

  00010			 AREA	 |.pdata|, PDATA
|$T44839| DCD	|$LN18@NLedDriver@2|
	DCD	0x4000d804

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JI@CKDILNDN@?$AAN?$AAL?$AAE?$AAD?$AAD?$AAR?$AAV?$AA?3?$AA?5?$AAN?$AAL?$AAe?$AAd?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo@| DCB "N"
	DCB	0x0, "L", 0x0, "E", 0x0, "D", 0x0, "D", 0x0, "R", 0x0, "V"
	DCB	0x0, ":", 0x0, " ", 0x0, "N", 0x0, "L", 0x0, "e", 0x0, "d"
	DCB	0x0, "D", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, "G", 0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "f"
	DCB	0x0, "o", 0x0, "(", 0x0, "N", 0x0, "L", 0x0, "E", 0x0, "D"
	DCB	0x0, "_", 0x0, "C", 0x0, "O", 0x0, "U", 0x0, "N", 0x0, "T"
	DCB	0x0, "_", 0x0, "I", 0x0, "N", 0x0, "F", 0x0, "O", 0x0, "_"
	DCB	0x0, "I", 0x0, "D", 0x0, ".", 0x0, ".", 0x0, ".", 0x0, ")"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "r"
	DCB	0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "N", 0x0, "L", 0x0, "E", 0x0, "D"
	DCB	0x0, "s", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00668			 AREA	 |.text|, CODE, ARM

  00668		 |NLedDriverGetDeviceInfo| PROC

; 200  : {

  00668		 |$LN18@NLedDriver@2|
  00668	e1a0c00d	 mov         r12, sp
  0066c	e92d0003	 stmdb       sp!, {r0, r1}
  00670	e92d5000	 stmdb       sp!, {r12, lr}
  00674	e24dd014	 sub         sp, sp, #0x14
  00678		 |$M44836|

; 201  :     if ( nInfoId == NLED_COUNT_INFO_ID )

  00678	e59d301c	 ldr         r3, [sp, #0x1C]
  0067c	e3530000	 cmp         r3, #0
  00680	1a000019	 bne         |$LN11@NLedDriver@2|

; 202  :     {
; 203  :         struct NLED_COUNT_INFO * p = (struct NLED_COUNT_INFO*)pOutput;

  00684	e59d3020	 ldr         r3, [sp, #0x20]
  00688	e58d3000	 str         r3, [sp]

; 204  : 
; 205  :         if (p == NULL)

  0068c	e59d3000	 ldr         r3, [sp]
  00690	e3530000	 cmp         r3, #0
  00694	1a000000	 bne         |$LN10@NLedDriver@2|

; 206  :             goto ReturnError;

  00698	ea0000bd	 b           |$ReturnError$44655|
  0069c		 |$LN10@NLedDriver@2|

; 207  : 
; 208  :         // Fill in number of leds
; 209  :         p->cLeds = g_dwNbLeds;

  0069c	e59f3314	 ldr         r3, [pc, #0x314]
  006a0	e5932000	 ldr         r2, [r3]
  006a4	e59d3000	 ldr         r3, [sp]
  006a8	e5832000	 str         r2, [r3]

; 210  :         DEBUGMSG(ZONE_INIT, (TEXT("NLEDDRV: NLedDriverGetDeviceInfo(NLED_COUNT_INFO_ID...) returning %d NLEDs\n"), g_dwNbLeds));

  006ac	e59f3310	 ldr         r3, [pc, #0x310]
  006b0	e5933440	 ldr         r3, [r3, #0x440]
  006b4	e3130004	 tst         r3, #4
  006b8	0a000006	 beq         |$LN14@NLedDriver@2|
  006bc	e59f32f4	 ldr         r3, [pc, #0x2F4]
  006c0	e5931000	 ldr         r1, [r3]
  006c4	e59f02f4	 ldr         r0, [pc, #0x2F4]
  006c8	eb000000	 bl          NKDbgPrintfW
  006cc	e3a03001	 mov         r3, #1
  006d0	e58d3010	 str         r3, [sp, #0x10]
  006d4	ea000001	 b           |$LN15@NLedDriver@2|
  006d8		 |$LN14@NLedDriver@2|
  006d8	e3a03000	 mov         r3, #0
  006dc	e58d3010	 str         r3, [sp, #0x10]
  006e0		 |$LN15@NLedDriver@2|

; 211  :         return TRUE;

  006e0	e3a03001	 mov         r3, #1
  006e4	e58d300c	 str         r3, [sp, #0xC]
  006e8	ea0000ad	 b           |$LN12@NLedDriver@2|
  006ec		 |$LN11@NLedDriver@2|

; 212  :     }
; 213  : 
; 214  :     if ( nInfoId == NLED_SUPPORTS_INFO_ID )

  006ec	e59d301c	 ldr         r3, [sp, #0x1C]
  006f0	e3530001	 cmp         r3, #1
  006f4	1a00004b	 bne         |$LN9@NLedDriver@2|

; 215  :     {
; 216  :         struct NLED_SUPPORTS_INFO * p = (struct NLED_SUPPORTS_INFO *)pOutput;

  006f8	e59d3020	 ldr         r3, [sp, #0x20]
  006fc	e58d3004	 str         r3, [sp, #4]

; 217  : 
; 218  :         if (p == NULL)

  00700	e59d3004	 ldr         r3, [sp, #4]
  00704	e3530000	 cmp         r3, #0
  00708	1a000000	 bne         |$LN8@NLedDriver@2|

; 219  :             goto ReturnError;

  0070c	ea0000a0	 b           |$ReturnError$44655|
  00710		 |$LN8@NLedDriver@2|

; 220  : 
; 221  :         if ( p->LedNum >= g_dwNbLeds )

  00710	e59d3004	 ldr         r3, [sp, #4]
  00714	e5932000	 ldr         r2, [r3]
  00718	e59f3298	 ldr         r3, [pc, #0x298]
  0071c	e5933000	 ldr         r3, [r3]
  00720	e1520003	 cmp         r2, r3
  00724	3a000000	 bcc         |$LN7@NLedDriver@2|

; 222  :             goto ReturnError;

  00728	ea000099	 b           |$ReturnError$44655|
  0072c		 |$LN7@NLedDriver@2|

; 223  : 
; 224  :         // Fill in LED capabilities
; 225  :         p->lCycleAdjust = 1000;         // Granularity of cycle time adjustments (microseconds)

  0072c	e59d3004	 ldr         r3, [sp, #4]
  00730	e2832004	 add         r2, r3, #4
  00734	e3a03ffa	 mov         r3, #0xFA, 30
  00738	e5823000	 str         r3, [r2]

; 226  :         p->fAdjustTotalCycleTime = TRUE;    // LED has an adjustable total cycle time

  0073c	e59d3004	 ldr         r3, [sp, #4]
  00740	e2832008	 add         r2, r3, #8
  00744	e3a03001	 mov         r3, #1
  00748	e5823000	 str         r3, [r2]

; 227  :         p->fAdjustOnTime = TRUE;            // @FIELD   LED has separate on time

  0074c	e59d3004	 ldr         r3, [sp, #4]
  00750	e283200c	 add         r2, r3, #0xC
  00754	e3a03001	 mov         r3, #1
  00758	e5823000	 str         r3, [r2]

; 228  :         p->fAdjustOffTime = TRUE;           // @FIELD   LED has separate off time

  0075c	e59d3004	 ldr         r3, [sp, #4]
  00760	e2832010	 add         r2, r3, #0x10
  00764	e3a03001	 mov         r3, #1
  00768	e5823000	 str         r3, [r2]

; 229  :         p->fMetaCycleOn = TRUE;             // @FIELD   LED can do blink n, pause, blink n, ...

  0076c	e59d3004	 ldr         r3, [sp, #4]
  00770	e2832014	 add         r2, r3, #0x14
  00774	e3a03001	 mov         r3, #1
  00778	e5823000	 str         r3, [r2]

; 230  :         p->fMetaCycleOff = TRUE;            // @FIELD   LED can do blink n, pause n, blink n, ...

  0077c	e59d3004	 ldr         r3, [sp, #4]
  00780	e2832018	 add         r2, r3, #0x18
  00784	e3a03001	 mov         r3, #1
  00788	e5823000	 str         r3, [r2]

; 231  : 
; 232  :         // override individual LED capabilities
; 233  :         if (g_LastLEDIsVibrator)

  0078c	e59f3228	 ldr         r3, [pc, #0x228]
  00790	e5933000	 ldr         r3, [r3]
  00794	e3530000	 cmp         r3, #0
  00798	0a00001e	 beq         |$LN6@NLedDriver@2|

; 234  :         {
; 235  :             if (p->LedNum == (g_dwNbLeds - 1))

  0079c	e59f3214	 ldr         r3, [pc, #0x214]
  007a0	e5933000	 ldr         r3, [r3]
  007a4	e2432001	 sub         r2, r3, #1
  007a8	e59d3004	 ldr         r3, [sp, #4]
  007ac	e5933000	 ldr         r3, [r3]
  007b0	e1530002	 cmp         r3, r2
  007b4	1a000017	 bne         |$LN5@NLedDriver@2|

; 236  :             {
; 237  :                 // vibrate must be last NLED, reports special lCycleAdjust value
; 238  :                 p->lCycleAdjust = -1;               // Well that was obvious!

  007b8	e59d3004	 ldr         r3, [sp, #4]
  007bc	e2832004	 add         r2, r3, #4
  007c0	e3e03000	 mvn         r3, #0
  007c4	e5823000	 str         r3, [r2]

; 239  :                 p->fAdjustTotalCycleTime = FALSE;   // LED has an adjustable total cycle time

  007c8	e59d3004	 ldr         r3, [sp, #4]
  007cc	e2832008	 add         r2, r3, #8
  007d0	e3a03000	 mov         r3, #0
  007d4	e5823000	 str         r3, [r2]

; 240  :                 p->fAdjustOnTime = FALSE;           // @FIELD   LED has separate on time

  007d8	e59d3004	 ldr         r3, [sp, #4]
  007dc	e283200c	 add         r2, r3, #0xC
  007e0	e3a03000	 mov         r3, #0
  007e4	e5823000	 str         r3, [r2]

; 241  :                 p->fAdjustOffTime = FALSE;          // @FIELD   LED has separate off time

  007e8	e59d3004	 ldr         r3, [sp, #4]
  007ec	e2832010	 add         r2, r3, #0x10
  007f0	e3a03000	 mov         r3, #0
  007f4	e5823000	 str         r3, [r2]

; 242  :                 p->fMetaCycleOn = FALSE;            // @FIELD   LED can do blink n, pause, blink n, ...

  007f8	e59d3004	 ldr         r3, [sp, #4]
  007fc	e2832014	 add         r2, r3, #0x14
  00800	e3a03000	 mov         r3, #0
  00804	e5823000	 str         r3, [r2]

; 243  :                 p->fMetaCycleOff = FALSE;           // @FIELD   LED can do blink n, pause n, blink n, ...

  00808	e59d3004	 ldr         r3, [sp, #4]
  0080c	e2832018	 add         r2, r3, #0x18
  00810	e3a03000	 mov         r3, #0
  00814	e5823000	 str         r3, [r2]
  00818		 |$LN5@NLedDriver@2|
  00818		 |$LN6@NLedDriver@2|

; 244  :             }
; 245  :         }
; 246  :         return TRUE;

  00818	e3a03001	 mov         r3, #1
  0081c	e58d300c	 str         r3, [sp, #0xC]
  00820	ea00005f	 b           |$LN12@NLedDriver@2|
  00824	ea00005a	 b           |$LN4@NLedDriver@2|
  00828		 |$LN9@NLedDriver@2|

; 247  :     }
; 248  :     else if ( nInfoId == NLED_SETTINGS_INFO_ID )

  00828	e59d301c	 ldr         r3, [sp, #0x1C]
  0082c	e3530002	 cmp         r3, #2
  00830	1a000057	 bne         |$LN3@NLedDriver@2|

; 249  :     {
; 250  :         struct NLED_SETTINGS_INFO * p = (struct NLED_SETTINGS_INFO *)pOutput;

  00834	e59d3020	 ldr         r3, [sp, #0x20]
  00838	e58d3008	 str         r3, [sp, #8]

; 251  : 
; 252  :         if (p == NULL)

  0083c	e59d3008	 ldr         r3, [sp, #8]
  00840	e3530000	 cmp         r3, #0
  00844	1a000000	 bne         |$LN2@NLedDriver@2|

; 253  :             goto ReturnError;

  00848	ea000051	 b           |$ReturnError$44655|
  0084c		 |$LN2@NLedDriver@2|

; 254  : 
; 255  :         if ( p->LedNum >= g_dwNbLeds )

  0084c	e59d3008	 ldr         r3, [sp, #8]
  00850	e5932000	 ldr         r2, [r3]
  00854	e59f315c	 ldr         r3, [pc, #0x15C]
  00858	e5933000	 ldr         r3, [r3]
  0085c	e1520003	 cmp         r2, r3
  00860	3a000000	 bcc         |$LN1@NLedDriver@2|

; 256  :             goto ReturnError;

  00864	ea00004a	 b           |$ReturnError$44655|
  00868		 |$LN1@NLedDriver@2|

; 257  : 
; 258  :         // Fill in current LED settings
; 259  : 
; 260  :         // Get any individual current settings
; 261  :         p->OffOnBlink = g_BlinkParams[p->LedNum].OffOnBlink;

  00868	e59d3008	 ldr         r3, [sp, #8]
  0086c	e5931000	 ldr         r1, [r3]
  00870	e3a0301c	 mov         r3, #0x1C
  00874	e0020391	 mul         r2, r1, r3
  00878	e59f3134	 ldr         r3, [pc, #0x134]
  0087c	e5933000	 ldr         r3, [r3]
  00880	e0833002	 add         r3, r3, r2
  00884	e2831004	 add         r1, r3, #4
  00888	e59d3008	 ldr         r3, [sp, #8]
  0088c	e2832004	 add         r2, r3, #4
  00890	e5913000	 ldr         r3, [r1]
  00894	e5823000	 str         r3, [r2]

; 262  :         p->TotalCycleTime = g_BlinkParams[p->LedNum].TotalCycleTime;

  00898	e59d3008	 ldr         r3, [sp, #8]
  0089c	e5931000	 ldr         r1, [r3]
  008a0	e3a0301c	 mov         r3, #0x1C
  008a4	e0020391	 mul         r2, r1, r3
  008a8	e59f3104	 ldr         r3, [pc, #0x104]
  008ac	e5933000	 ldr         r3, [r3]
  008b0	e0833002	 add         r3, r3, r2
  008b4	e2831008	 add         r1, r3, #8
  008b8	e59d3008	 ldr         r3, [sp, #8]
  008bc	e2832008	 add         r2, r3, #8
  008c0	e5913000	 ldr         r3, [r1]
  008c4	e5823000	 str         r3, [r2]

; 263  :         p->OnTime = g_BlinkParams[p->LedNum].OnTime;

  008c8	e59d3008	 ldr         r3, [sp, #8]
  008cc	e5931000	 ldr         r1, [r3]
  008d0	e3a0301c	 mov         r3, #0x1C
  008d4	e0020391	 mul         r2, r1, r3
  008d8	e59f30d4	 ldr         r3, [pc, #0xD4]
  008dc	e5933000	 ldr         r3, [r3]
  008e0	e0833002	 add         r3, r3, r2
  008e4	e283100c	 add         r1, r3, #0xC
  008e8	e59d3008	 ldr         r3, [sp, #8]
  008ec	e283200c	 add         r2, r3, #0xC
  008f0	e5913000	 ldr         r3, [r1]
  008f4	e5823000	 str         r3, [r2]

; 264  :         p->OffTime = g_BlinkParams[p->LedNum].OffTime;

  008f8	e59d3008	 ldr         r3, [sp, #8]
  008fc	e5931000	 ldr         r1, [r3]
  00900	e3a0301c	 mov         r3, #0x1C
  00904	e0020391	 mul         r2, r1, r3
  00908	e59f30a4	 ldr         r3, [pc, #0xA4]
  0090c	e5933000	 ldr         r3, [r3]
  00910	e0833002	 add         r3, r3, r2
  00914	e2831010	 add         r1, r3, #0x10
  00918	e59d3008	 ldr         r3, [sp, #8]
  0091c	e2832010	 add         r2, r3, #0x10
  00920	e5913000	 ldr         r3, [r1]
  00924	e5823000	 str         r3, [r2]

; 265  :         p->MetaCycleOn = g_BlinkParams[p->LedNum].MetaCycleOn;

  00928	e59d3008	 ldr         r3, [sp, #8]
  0092c	e5931000	 ldr         r1, [r3]
  00930	e3a0301c	 mov         r3, #0x1C
  00934	e0020391	 mul         r2, r1, r3
  00938	e59f3074	 ldr         r3, [pc, #0x74]
  0093c	e5933000	 ldr         r3, [r3]
  00940	e0833002	 add         r3, r3, r2
  00944	e2831014	 add         r1, r3, #0x14
  00948	e59d3008	 ldr         r3, [sp, #8]
  0094c	e2832014	 add         r2, r3, #0x14
  00950	e5913000	 ldr         r3, [r1]
  00954	e5823000	 str         r3, [r2]

; 266  :         p->MetaCycleOff = g_BlinkParams[p->LedNum].MetaCycleOff;

  00958	e59d3008	 ldr         r3, [sp, #8]
  0095c	e5931000	 ldr         r1, [r3]
  00960	e3a0301c	 mov         r3, #0x1C
  00964	e0020391	 mul         r2, r1, r3
  00968	e59f3044	 ldr         r3, [pc, #0x44]
  0096c	e5933000	 ldr         r3, [r3]
  00970	e0833002	 add         r3, r3, r2
  00974	e2831018	 add         r1, r3, #0x18
  00978	e59d3008	 ldr         r3, [sp, #8]
  0097c	e2832018	 add         r2, r3, #0x18
  00980	e5913000	 ldr         r3, [r1]
  00984	e5823000	 str         r3, [r2]

; 267  : 
; 268  :         return TRUE;

  00988	e3a03001	 mov         r3, #1
  0098c	e58d300c	 str         r3, [sp, #0xC]
  00990	ea000003	 b           |$LN12@NLedDriver@2|
  00994		 |$LN3@NLedDriver@2|
  00994		 |$LN4@NLedDriver@2|
  00994		 |$ReturnError$44655|

; 269  :     }
; 270  : 
; 271  : ReturnError:
; 272  : 
; 273  :     SetLastError(ERROR_INVALID_PARAMETER);

  00994	e3a00057	 mov         r0, #0x57
  00998	eb000000	 bl          SetLastError

; 274  :     return FALSE;

  0099c	e3a03000	 mov         r3, #0
  009a0	e58d300c	 str         r3, [sp, #0xC]
  009a4		 |$LN12@NLedDriver@2|

; 275  : }

  009a4	e59d000c	 ldr         r0, [sp, #0xC]
  009a8	e28dd014	 add         sp, sp, #0x14
  009ac	e89d6000	 ldmia       sp, {sp, lr}
  009b0	e12fff1e	 bx          lr
  009b4		 |$LN19@NLedDriver@2|
  009b4		 |$LN20@NLedDriver@2|
  009b4	00000000	 DCD         |g_BlinkParams|
  009b8		 |$LN21@NLedDriver@2|
  009b8	00000000	 DCD         |g_dwNbLeds|
  009bc		 |$LN22@NLedDriver@2|
  009bc	00000000	 DCD         |g_LastLEDIsVibrator|
  009c0		 |$LN23@NLedDriver@2|
  009c0	00000000	 DCD         |??_C@_1JI@CKDILNDN@?$AAN?$AAL?$AAE?$AAD?$AAD?$AAR?$AAV?$AA?3?$AA?5?$AAN?$AAL?$AAe?$AAd?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo@|
  009c4		 |$LN24@NLedDriver@2|
  009c4	00000000	 DCD         |dpCurSettings|
  009c8		 |$M44837|

			 ENDP  ; |NLedDriverGetDeviceInfo|

	EXPORT	|??_C@_1HA@KIADNLIP@?$AAN?$AAL?$AAE?$AAD?$AA?3?$AA?5?$AAN?$AAL?$AAe?$AAd?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?3?$AA?5?$AAN?$AAL?$AAE?$AAD?$AA?5@| [ DATA ] ; `string'
	EXPORT	|SetEvent|
	EXPORT	|??_C@_1DI@LOBPBEL@?$AAN?$AAL?$AAE?$AAD?$AA?5?$AA?$CD?$AA?5?$AA?$CF?$AAd?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|NLedDriverSetDevice|

  00018			 AREA	 |.pdata|, PDATA
|$T44855| DCD	|$LN20@NLedDriver@3|
	DCD	0x40012d04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@KIADNLIP@?$AAN?$AAL?$AAE?$AAD?$AA?3?$AA?5?$AAN?$AAL?$AAe?$AAd?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?3?$AA?5?$AAN?$AAL?$AAE?$AAD?$AA?5@| DCB "N"
	DCB	0x0, "L", 0x0, "E", 0x0, "D", 0x0, ":", 0x0, " ", 0x0, "N"
	DCB	0x0, "L", 0x0, "e", 0x0, "d", 0x0, "D", 0x0, "r", 0x0, "i"
	DCB	0x0, "v", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, ":", 0x0, " ", 0x0, "N", 0x0, "L", 0x0, "E", 0x0, "D"
	DCB	0x0, " ", 0x0, "%", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@LOBPBEL@?$AAN?$AAL?$AAE?$AAD?$AA?5?$AA?$CD?$AA?5?$AA?$CF?$AAd?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "N"
	DCB	0x0, "L", 0x0, "E", 0x0, "D", 0x0, " ", 0x0, "#", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, "c", 0x0, "h", 0x0, "a"
	DCB	0x0, "n", 0x0, "g", 0x0, "e", 0x0, " ", 0x0, "s", 0x0, "i"
	DCB	0x0, "g", 0x0, "n", 0x0, "a", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  009c8			 AREA	 |.text|, CODE, ARM

  009c8		 |NLedDriverSetDevice| PROC

; 284  : {

  009c8		 |$LN20@NLedDriver@3|
  009c8	e1a0c00d	 mov         r12, sp
  009cc	e92d0003	 stmdb       sp!, {r0, r1}
  009d0	e92d5000	 stmdb       sp!, {r12, lr}
  009d4	e24dd010	 sub         sp, sp, #0x10
  009d8		 |$M44852|

; 285  :     struct NLED_SETTINGS_INFO * p = (struct NLED_SETTINGS_INFO *)pInput;

  009d8	e59d301c	 ldr         r3, [sp, #0x1C]
  009dc	e58d3000	 str         r3, [sp]

; 286  : 
; 287  :     if ( nInfoId == NLED_SETTINGS_INFO_ID )

  009e0	e59d3018	 ldr         r3, [sp, #0x18]
  009e4	e3530002	 cmp         r3, #2
  009e8	1a000105	 bne         |$LN11@NLedDriver@3|

; 288  :     {
; 289  :         if (pInput == NULL)

  009ec	e59d301c	 ldr         r3, [sp, #0x1C]
  009f0	e3530000	 cmp         r3, #0
  009f4	1a000000	 bne         |$LN10@NLedDriver@3|

; 290  :             goto ReturnError;

  009f8	ea000101	 b           |$ReturnError$44683|
  009fc		 |$LN10@NLedDriver@3|

; 291  : 
; 292  :         if ( p->LedNum >= g_dwNbLeds )

  009fc	e59d3000	 ldr         r3, [sp]
  00a00	e5932000	 ldr         r2, [r3]
  00a04	e59f346c	 ldr         r3, [pc, #0x46C]
  00a08	e5933000	 ldr         r3, [r3]
  00a0c	e1520003	 cmp         r2, r3
  00a10	3a000000	 bcc         |$LN9@NLedDriver@3|

; 293  :             goto ReturnError;

  00a14	ea0000fa	 b           |$ReturnError$44683|
  00a18		 |$LN9@NLedDriver@3|

; 294  : 
; 295  :         // check for invalid parameters
; 296  :         if ( p->OffOnBlink < 0 || p->OffOnBlink > 2 )

  00a18	e59d3000	 ldr         r3, [sp]
  00a1c	e2833004	 add         r3, r3, #4
  00a20	e5933000	 ldr         r3, [r3]
  00a24	e3530000	 cmp         r3, #0
  00a28	ba000004	 blt         |$LN7@NLedDriver@3|
  00a2c	e59d3000	 ldr         r3, [sp]
  00a30	e2833004	 add         r3, r3, #4
  00a34	e5933000	 ldr         r3, [r3]
  00a38	e3530002	 cmp         r3, #2
  00a3c	da000000	 ble         |$LN8@NLedDriver@3|
  00a40		 |$LN7@NLedDriver@3|

; 297  :             goto ReturnError;

  00a40	ea0000ef	 b           |$ReturnError$44683|
  00a44		 |$LN8@NLedDriver@3|

; 298  : 
; 299  :         // for blink state, check for valid times (why were integers used?)
; 300  :         if ( p->OffOnBlink == 2 )

  00a44	e59d3000	 ldr         r3, [sp]
  00a48	e2833004	 add         r3, r3, #4
  00a4c	e5933000	 ldr         r3, [r3]
  00a50	e3530002	 cmp         r3, #2
  00a54	1a000035	 bne         |$LN6@NLedDriver@3|

; 301  :             if (p->TotalCycleTime < p->OnTime ||
; 302  :                 p->TotalCycleTime < p->OffTime ||
; 303  :                 p->MetaCycleOn < 0 ||
; 304  :                 p->MetaCycleOff < 0 ||
; 305  :                 p->TotalCycleTime < 0 ||
; 306  :                 p->OnTime < 0 ||
; 307  :                 p->OffTime < 0 ||
; 308  :                 p->TotalCycleTime < p->OnTime + p->OffTime
; 309  :             )

  00a58	e59d3000	 ldr         r3, [sp]
  00a5c	e2832008	 add         r2, r3, #8
  00a60	e59d3000	 ldr         r3, [sp]
  00a64	e283300c	 add         r3, r3, #0xC
  00a68	e5922000	 ldr         r2, [r2]
  00a6c	e5933000	 ldr         r3, [r3]
  00a70	e1520003	 cmp         r2, r3
  00a74	ba00002c	 blt         |$LN4@NLedDriver@3|
  00a78	e59d3000	 ldr         r3, [sp]
  00a7c	e2832008	 add         r2, r3, #8
  00a80	e59d3000	 ldr         r3, [sp]
  00a84	e2833010	 add         r3, r3, #0x10
  00a88	e5922000	 ldr         r2, [r2]
  00a8c	e5933000	 ldr         r3, [r3]
  00a90	e1520003	 cmp         r2, r3
  00a94	ba000024	 blt         |$LN4@NLedDriver@3|
  00a98	e59d3000	 ldr         r3, [sp]
  00a9c	e2833014	 add         r3, r3, #0x14
  00aa0	e5933000	 ldr         r3, [r3]
  00aa4	e3530000	 cmp         r3, #0
  00aa8	ba00001f	 blt         |$LN4@NLedDriver@3|
  00aac	e59d3000	 ldr         r3, [sp]
  00ab0	e2833018	 add         r3, r3, #0x18
  00ab4	e5933000	 ldr         r3, [r3]
  00ab8	e3530000	 cmp         r3, #0
  00abc	ba00001a	 blt         |$LN4@NLedDriver@3|
  00ac0	e59d3000	 ldr         r3, [sp]
  00ac4	e2833008	 add         r3, r3, #8
  00ac8	e5933000	 ldr         r3, [r3]
  00acc	e3530000	 cmp         r3, #0
  00ad0	ba000015	 blt         |$LN4@NLedDriver@3|
  00ad4	e59d3000	 ldr         r3, [sp]
  00ad8	e283300c	 add         r3, r3, #0xC
  00adc	e5933000	 ldr         r3, [r3]
  00ae0	e3530000	 cmp         r3, #0
  00ae4	ba000010	 blt         |$LN4@NLedDriver@3|
  00ae8	e59d3000	 ldr         r3, [sp]
  00aec	e2833010	 add         r3, r3, #0x10
  00af0	e5933000	 ldr         r3, [r3]
  00af4	e3530000	 cmp         r3, #0
  00af8	ba00000b	 blt         |$LN4@NLedDriver@3|
  00afc	e59d3000	 ldr         r3, [sp]
  00b00	e2831008	 add         r1, r3, #8
  00b04	e59d3000	 ldr         r3, [sp]
  00b08	e283200c	 add         r2, r3, #0xC
  00b0c	e59d3000	 ldr         r3, [sp]
  00b10	e2833010	 add         r3, r3, #0x10
  00b14	e5922000	 ldr         r2, [r2]
  00b18	e5933000	 ldr         r3, [r3]
  00b1c	e0822003	 add         r2, r2, r3
  00b20	e5913000	 ldr         r3, [r1]
  00b24	e1530002	 cmp         r3, r2
  00b28	aa000000	 bge         |$LN5@NLedDriver@3|
  00b2c		 |$LN4@NLedDriver@3|

; 310  :                 goto ReturnError;

  00b2c	ea0000b4	 b           |$ReturnError$44683|
  00b30		 |$LN5@NLedDriver@3|
  00b30		 |$LN6@NLedDriver@3|

; 311  : 
; 312  :         // check for any changed NLED settings
; 313  :         if ( g_BlinkParams[p->LedNum].OffOnBlink != p->OffOnBlink ||
; 314  :              g_BlinkParams[p->LedNum].TotalCycleTime != p->TotalCycleTime ||
; 315  :              g_BlinkParams[p->LedNum].OnTime != p->OnTime ||
; 316  :              g_BlinkParams[p->LedNum].OffTime != p->OffTime ||
; 317  :              g_BlinkParams[p->LedNum].MetaCycleOn != p->MetaCycleOn ||
; 318  :              g_BlinkParams[p->LedNum].MetaCycleOff != p->MetaCycleOff
; 319  :         )

  00b30	e59d3000	 ldr         r3, [sp]
  00b34	e5931000	 ldr         r1, [r3]
  00b38	e3a0301c	 mov         r3, #0x1C
  00b3c	e0020391	 mul         r2, r1, r3
  00b40	e59f332c	 ldr         r3, [pc, #0x32C]
  00b44	e5933000	 ldr         r3, [r3]
  00b48	e0833002	 add         r3, r3, r2
  00b4c	e2832004	 add         r2, r3, #4
  00b50	e59d3000	 ldr         r3, [sp]
  00b54	e2833004	 add         r3, r3, #4
  00b58	e5922000	 ldr         r2, [r2]
  00b5c	e5933000	 ldr         r3, [r3]
  00b60	e1520003	 cmp         r2, r3
  00b64	1a000045	 bne         |$LN2@NLedDriver@3|
  00b68	e59d3000	 ldr         r3, [sp]
  00b6c	e5931000	 ldr         r1, [r3]
  00b70	e3a0301c	 mov         r3, #0x1C
  00b74	e0020391	 mul         r2, r1, r3
  00b78	e59f32f4	 ldr         r3, [pc, #0x2F4]
  00b7c	e5933000	 ldr         r3, [r3]
  00b80	e0833002	 add         r3, r3, r2
  00b84	e2832008	 add         r2, r3, #8
  00b88	e59d3000	 ldr         r3, [sp]
  00b8c	e2833008	 add         r3, r3, #8
  00b90	e5922000	 ldr         r2, [r2]
  00b94	e5933000	 ldr         r3, [r3]
  00b98	e1520003	 cmp         r2, r3
  00b9c	1a000037	 bne         |$LN2@NLedDriver@3|
  00ba0	e59d3000	 ldr         r3, [sp]
  00ba4	e5931000	 ldr         r1, [r3]
  00ba8	e3a0301c	 mov         r3, #0x1C
  00bac	e0020391	 mul         r2, r1, r3
  00bb0	e59f32bc	 ldr         r3, [pc, #0x2BC]
  00bb4	e5933000	 ldr         r3, [r3]
  00bb8	e0833002	 add         r3, r3, r2
  00bbc	e283200c	 add         r2, r3, #0xC
  00bc0	e59d3000	 ldr         r3, [sp]
  00bc4	e283300c	 add         r3, r3, #0xC
  00bc8	e5922000	 ldr         r2, [r2]
  00bcc	e5933000	 ldr         r3, [r3]
  00bd0	e1520003	 cmp         r2, r3
  00bd4	1a000029	 bne         |$LN2@NLedDriver@3|
  00bd8	e59d3000	 ldr         r3, [sp]
  00bdc	e5931000	 ldr         r1, [r3]
  00be0	e3a0301c	 mov         r3, #0x1C
  00be4	e0020391	 mul         r2, r1, r3
  00be8	e59f3284	 ldr         r3, [pc, #0x284]
  00bec	e5933000	 ldr         r3, [r3]
  00bf0	e0833002	 add         r3, r3, r2
  00bf4	e2832010	 add         r2, r3, #0x10
  00bf8	e59d3000	 ldr         r3, [sp]
  00bfc	e2833010	 add         r3, r3, #0x10
  00c00	e5922000	 ldr         r2, [r2]
  00c04	e5933000	 ldr         r3, [r3]
  00c08	e1520003	 cmp         r2, r3
  00c0c	1a00001b	 bne         |$LN2@NLedDriver@3|
  00c10	e59d3000	 ldr         r3, [sp]
  00c14	e5931000	 ldr         r1, [r3]
  00c18	e3a0301c	 mov         r3, #0x1C
  00c1c	e0020391	 mul         r2, r1, r3
  00c20	e59f324c	 ldr         r3, [pc, #0x24C]
  00c24	e5933000	 ldr         r3, [r3]
  00c28	e0833002	 add         r3, r3, r2
  00c2c	e2832014	 add         r2, r3, #0x14
  00c30	e59d3000	 ldr         r3, [sp]
  00c34	e2833014	 add         r3, r3, #0x14
  00c38	e5922000	 ldr         r2, [r2]
  00c3c	e5933000	 ldr         r3, [r3]
  00c40	e1520003	 cmp         r2, r3
  00c44	1a00000d	 bne         |$LN2@NLedDriver@3|
  00c48	e59d3000	 ldr         r3, [sp]
  00c4c	e5931000	 ldr         r1, [r3]
  00c50	e3a0301c	 mov         r3, #0x1C
  00c54	e0020391	 mul         r2, r1, r3
  00c58	e59f3214	 ldr         r3, [pc, #0x214]
  00c5c	e5933000	 ldr         r3, [r3]
  00c60	e0833002	 add         r3, r3, r2
  00c64	e2832018	 add         r2, r3, #0x18
  00c68	e59d3000	 ldr         r3, [sp]
  00c6c	e2833018	 add         r3, r3, #0x18
  00c70	e5922000	 ldr         r2, [r2]
  00c74	e5933000	 ldr         r3, [r3]
  00c78	e1520003	 cmp         r2, r3
  00c7c	0a00005d	 beq         |$LN3@NLedDriver@3|
  00c80		 |$LN2@NLedDriver@3|

; 320  :         {
; 321  :             // Update NLED settings
; 322  :             g_BlinkParams[p->LedNum].OffOnBlink = p->OffOnBlink;

  00c80	e59d3000	 ldr         r3, [sp]
  00c84	e2830004	 add         r0, r3, #4
  00c88	e59d3000	 ldr         r3, [sp]
  00c8c	e5931000	 ldr         r1, [r3]
  00c90	e3a0301c	 mov         r3, #0x1C
  00c94	e0020391	 mul         r2, r1, r3
  00c98	e59f31d4	 ldr         r3, [pc, #0x1D4]
  00c9c	e5933000	 ldr         r3, [r3]
  00ca0	e0833002	 add         r3, r3, r2
  00ca4	e2832004	 add         r2, r3, #4
  00ca8	e5903000	 ldr         r3, [r0]
  00cac	e5823000	 str         r3, [r2]

; 323  :             g_BlinkParams[p->LedNum].TotalCycleTime = p->TotalCycleTime;

  00cb0	e59d3000	 ldr         r3, [sp]
  00cb4	e2830008	 add         r0, r3, #8
  00cb8	e59d3000	 ldr         r3, [sp]
  00cbc	e5931000	 ldr         r1, [r3]
  00cc0	e3a0301c	 mov         r3, #0x1C
  00cc4	e0020391	 mul         r2, r1, r3
  00cc8	e59f31a4	 ldr         r3, [pc, #0x1A4]
  00ccc	e5933000	 ldr         r3, [r3]
  00cd0	e0833002	 add         r3, r3, r2
  00cd4	e2832008	 add         r2, r3, #8
  00cd8	e5903000	 ldr         r3, [r0]
  00cdc	e5823000	 str         r3, [r2]

; 324  :             g_BlinkParams[p->LedNum].OnTime = p->OnTime;

  00ce0	e59d3000	 ldr         r3, [sp]
  00ce4	e283000c	 add         r0, r3, #0xC
  00ce8	e59d3000	 ldr         r3, [sp]
  00cec	e5931000	 ldr         r1, [r3]
  00cf0	e3a0301c	 mov         r3, #0x1C
  00cf4	e0020391	 mul         r2, r1, r3
  00cf8	e59f3174	 ldr         r3, [pc, #0x174]
  00cfc	e5933000	 ldr         r3, [r3]
  00d00	e0833002	 add         r3, r3, r2
  00d04	e283200c	 add         r2, r3, #0xC
  00d08	e5903000	 ldr         r3, [r0]
  00d0c	e5823000	 str         r3, [r2]

; 325  :             g_BlinkParams[p->LedNum].OffTime = p->OffTime;

  00d10	e59d3000	 ldr         r3, [sp]
  00d14	e2830010	 add         r0, r3, #0x10
  00d18	e59d3000	 ldr         r3, [sp]
  00d1c	e5931000	 ldr         r1, [r3]
  00d20	e3a0301c	 mov         r3, #0x1C
  00d24	e0020391	 mul         r2, r1, r3
  00d28	e59f3144	 ldr         r3, [pc, #0x144]
  00d2c	e5933000	 ldr         r3, [r3]
  00d30	e0833002	 add         r3, r3, r2
  00d34	e2832010	 add         r2, r3, #0x10
  00d38	e5903000	 ldr         r3, [r0]
  00d3c	e5823000	 str         r3, [r2]

; 326  :             g_BlinkParams[p->LedNum].MetaCycleOn = p->MetaCycleOn;

  00d40	e59d3000	 ldr         r3, [sp]
  00d44	e2830014	 add         r0, r3, #0x14
  00d48	e59d3000	 ldr         r3, [sp]
  00d4c	e5931000	 ldr         r1, [r3]
  00d50	e3a0301c	 mov         r3, #0x1C
  00d54	e0020391	 mul         r2, r1, r3
  00d58	e59f3114	 ldr         r3, [pc, #0x114]
  00d5c	e5933000	 ldr         r3, [r3]
  00d60	e0833002	 add         r3, r3, r2
  00d64	e2832014	 add         r2, r3, #0x14
  00d68	e5903000	 ldr         r3, [r0]
  00d6c	e5823000	 str         r3, [r2]

; 327  :             g_BlinkParams[p->LedNum].MetaCycleOff = p->MetaCycleOff;

  00d70	e59d3000	 ldr         r3, [sp]
  00d74	e2830018	 add         r0, r3, #0x18
  00d78	e59d3000	 ldr         r3, [sp]
  00d7c	e5931000	 ldr         r1, [r3]
  00d80	e3a0301c	 mov         r3, #0x1C
  00d84	e0020391	 mul         r2, r1, r3
  00d88	e59f30e4	 ldr         r3, [pc, #0xE4]
  00d8c	e5933000	 ldr         r3, [r3]
  00d90	e0833002	 add         r3, r3, r2
  00d94	e2832018	 add         r2, r3, #0x18
  00d98	e5903000	 ldr         r3, [r0]
  00d9c	e5823000	 str         r3, [r2]

; 328  : 
; 329  :             // wake up appropriate NLED thread
; 330  :             #if ENABLE_DEBUG_MESSAGES
; 331  :                 DEBUGMSG(ZONE_FUNCTION, (TEXT("NLED # %d change signaled\r\n"), p->LedNum));

  00da0	e59f30c0	 ldr         r3, [pc, #0xC0]
  00da4	e5933440	 ldr         r3, [r3, #0x440]
  00da8	e3130040	 tst         r3, #0x40
  00dac	0a000006	 beq         |$LN14@NLedDriver@3|
  00db0	e59d3000	 ldr         r3, [sp]
  00db4	e5931000	 ldr         r1, [r3]
  00db8	e59f00b0	 ldr         r0, [pc, #0xB0]
  00dbc	eb000000	 bl          NKDbgPrintfW
  00dc0	e3a03001	 mov         r3, #1
  00dc4	e58d3008	 str         r3, [sp, #8]
  00dc8	ea000001	 b           |$LN15@NLedDriver@3|
  00dcc		 |$LN14@NLedDriver@3|
  00dcc	e3a03000	 mov         r3, #0
  00dd0	e58d3008	 str         r3, [sp, #8]
  00dd4		 |$LN15@NLedDriver@3|

; 332  :             #endif
; 333  : 
; 334  :             SetEvent(g_hLedHandle[p->LedNum]);

  00dd4	e59d3000	 ldr         r3, [sp]
  00dd8	e5931000	 ldr         r1, [r3]
  00ddc	e3a03004	 mov         r3, #4
  00de0	e0020391	 mul         r2, r1, r3
  00de4	e59f3080	 ldr         r3, [pc, #0x80]
  00de8	e5933000	 ldr         r3, [r3]
  00dec	e0833002	 add         r3, r3, r2
  00df0	e5930000	 ldr         r0, [r3]
  00df4	eb000000	 bl          SetEvent
  00df8		 |$LN3@NLedDriver@3|

; 335  :         }
; 336  : 
; 337  :         return TRUE;

  00df8	e3a03001	 mov         r3, #1
  00dfc	e58d3004	 str         r3, [sp, #4]
  00e00	ea000013	 b           |$LN12@NLedDriver@3|
  00e04		 |$LN11@NLedDriver@3|
  00e04		 |$ReturnError$44683|

; 338  :     }
; 339  : 
; 340  : ReturnError:
; 341  : 
; 342  :     #if ENABLE_DEBUG_MESSAGES
; 343  :         if (p != NULL)

  00e04	e59d3000	 ldr         r3, [sp]
  00e08	e3530000	 cmp         r3, #0
  00e0c	0a00000c	 beq         |$LN1@NLedDriver@3|

; 344  :             DEBUGMSG(ZONE_ERROR, (TEXT("NLED: NLedDriverSetDevice: NLED %x, Invalid parameter\r\n"), p->LedNum));

  00e10	e59f3050	 ldr         r3, [pc, #0x50]
  00e14	e5933440	 ldr         r3, [r3, #0x440]
  00e18	e3130001	 tst         r3, #1
  00e1c	0a000006	 beq         |$LN16@NLedDriver@3|
  00e20	e59d3000	 ldr         r3, [sp]
  00e24	e5931000	 ldr         r1, [r3]
  00e28	e59f0034	 ldr         r0, [pc, #0x34]
  00e2c	eb000000	 bl          NKDbgPrintfW
  00e30	e3a03001	 mov         r3, #1
  00e34	e58d300c	 str         r3, [sp, #0xC]
  00e38	ea000001	 b           |$LN17@NLedDriver@3|
  00e3c		 |$LN16@NLedDriver@3|
  00e3c	e3a03000	 mov         r3, #0
  00e40	e58d300c	 str         r3, [sp, #0xC]
  00e44		 |$LN17@NLedDriver@3|
  00e44		 |$LN1@NLedDriver@3|

; 345  :     #endif
; 346  : 
; 347  :     SetLastError(ERROR_INVALID_PARAMETER);

  00e44	e3a00057	 mov         r0, #0x57
  00e48	eb000000	 bl          SetLastError

; 348  : 
; 349  :     return FALSE;

  00e4c	e3a03000	 mov         r3, #0
  00e50	e58d3004	 str         r3, [sp, #4]
  00e54		 |$LN12@NLedDriver@3|

; 350  : }

  00e54	e59d0004	 ldr         r0, [sp, #4]
  00e58	e28dd010	 add         sp, sp, #0x10
  00e5c	e89d6000	 ldmia       sp, {sp, lr}
  00e60	e12fff1e	 bx          lr
  00e64		 |$LN21@NLedDriver@3|
  00e64		 |$LN22@NLedDriver@3|
  00e64	00000000	 DCD         |??_C@_1HA@KIADNLIP@?$AAN?$AAL?$AAE?$AAD?$AA?3?$AA?5?$AAN?$AAL?$AAe?$AAd?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?3?$AA?5?$AAN?$AAL?$AAE?$AAD?$AA?5@|
  00e68		 |$LN23@NLedDriver@3|
  00e68	00000000	 DCD         |dpCurSettings|
  00e6c		 |$LN24@NLedDriver@3|
  00e6c	00000000	 DCD         |g_hLedHandle|
  00e70		 |$LN25@NLedDriver@3|
  00e70	00000000	 DCD         |??_C@_1DI@LOBPBEL@?$AAN?$AAL?$AAE?$AAD?$AA?5?$AA?$CD?$AA?5?$AA?$CF?$AAd?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00e74		 |$LN26@NLedDriver@3|
  00e74	00000000	 DCD         |g_BlinkParams|
  00e78		 |$LN27@NLedDriver@3|
  00e78	00000000	 DCD         |g_dwNbLeds|
  00e7c		 |$M44853|

			 ENDP  ; |NLedDriverSetDevice|

	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T44868| DCD	|$LN5@SetEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M44865|

; 236  : 	return EventModify(h,EVENT_SET);

  00010	e3a01003	 mov         r1, #3
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 237  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M44866|

			 ENDP  ; |SetEvent|

	EXPORT	|NLedDriverPowerDown|

  00020			 AREA	 |.pdata|, PDATA
|$T44875| DCD	|$LN14@NLedDriver@4|
	DCD	0x40004604
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\nled\nleddrvr.c

  00e7c			 AREA	 |.text|, CODE, ARM

  00e7c		 |NLedDriverPowerDown| PROC

; 360  : {

  00e7c		 |$LN14@NLedDriver@4|
  00e7c	e1a0c00d	 mov         r12, sp
  00e80	e92d0001	 stmdb       sp!, {r0}
  00e84	e92d5000	 stmdb       sp!, {r12, lr}
  00e88	e24dd004	 sub         sp, sp, #4
  00e8c		 |$M44872|

; 361  :     UINT NledNum;
; 362  : 
; 363  :     if ( power_down )

  00e8c	e59d300c	 ldr         r3, [sp, #0xC]
  00e90	e3530000	 cmp         r3, #0
  00e94	0a000017	 beq         |$LN9@NLedDriver@4|

; 364  :     {
; 365  :         // shut off all NLEDs
; 366  :         for (NledNum = 0; NledNum < g_dwNbLeds; NledNum++)

  00e98	e3a03000	 mov         r3, #0
  00e9c	e58d3000	 str         r3, [sp]
  00ea0	ea000002	 b           |$LN8@NLedDriver@4|
  00ea4		 |$LN7@NLedDriver@4|
  00ea4	e59d3000	 ldr         r3, [sp]
  00ea8	e2833001	 add         r3, r3, #1
  00eac	e58d3000	 str         r3, [sp]
  00eb0		 |$LN8@NLedDriver@4|
  00eb0	e59d2000	 ldr         r2, [sp]
  00eb4	e59f30d4	 ldr         r3, [pc, #0xD4]
  00eb8	e5933000	 ldr         r3, [r3]
  00ebc	e1520003	 cmp         r2, r3
  00ec0	2a00000b	 bcs         |$LN6@NLedDriver@4|

; 367  :         {
; 368  :             NLedDriverSetLedState(NledNum, 0);

  00ec4	e3a01000	 mov         r1, #0
  00ec8	e59d0000	 ldr         r0, [sp]
  00ecc	eb000000	 bl          NLedDriverSetLedState

; 369  :             g_NLedCurrentState[NledNum] = 0;

  00ed0	e59d1000	 ldr         r1, [sp]
  00ed4	e3a03004	 mov         r3, #4
  00ed8	e0020391	 mul         r2, r1, r3
  00edc	e59f30a4	 ldr         r3, [pc, #0xA4]
  00ee0	e5933000	 ldr         r3, [r3]
  00ee4	e0832002	 add         r2, r3, r2
  00ee8	e3a03000	 mov         r3, #0
  00eec	e5823000	 str         r3, [r2]

; 370  :         }

  00ef0	eaffffeb	 b           |$LN7@NLedDriver@4|
  00ef4		 |$LN6@NLedDriver@4|

; 371  :     }
; 372  :     else

  00ef4	ea000020	 b           |$LN5@NLedDriver@4|
  00ef8		 |$LN9@NLedDriver@4|

; 373  :     {
; 374  :         for (NledNum = 0; NledNum < g_dwNbLeds; NledNum++)

  00ef8	e3a03000	 mov         r3, #0
  00efc	e58d3000	 str         r3, [sp]
  00f00	ea000002	 b           |$LN4@NLedDriver@4|
  00f04		 |$LN3@NLedDriver@4|
  00f04	e59d3000	 ldr         r3, [sp]
  00f08	e2833001	 add         r3, r3, #1
  00f0c	e58d3000	 str         r3, [sp]
  00f10		 |$LN4@NLedDriver@4|
  00f10	e59d2000	 ldr         r2, [sp]
  00f14	e59f3074	 ldr         r3, [pc, #0x74]
  00f18	e5933000	 ldr         r3, [r3]
  00f1c	e1520003	 cmp         r2, r3
  00f20	2a000015	 bcs         |$LN2@NLedDriver@4|

; 375  :         {
; 376  :             // On Power Up (Resume) turn on any LEDs that should be "ON".
; 377  :             //  the individual LED control threads will put the Blinking
; 378  :             //  LEDs back in their proper pre suspend state while "OFF" LEDs
; 379  :             //  will stay off.
; 380  :             if ( g_BlinkParams[NledNum].OffOnBlink == 1 )

  00f24	e59d1000	 ldr         r1, [sp]
  00f28	e3a0301c	 mov         r3, #0x1C
  00f2c	e0020391	 mul         r2, r1, r3
  00f30	e59f3054	 ldr         r3, [pc, #0x54]
  00f34	e5933000	 ldr         r3, [r3]
  00f38	e0833002	 add         r3, r3, r2
  00f3c	e2833004	 add         r3, r3, #4
  00f40	e5933000	 ldr         r3, [r3]
  00f44	e3530001	 cmp         r3, #1
  00f48	1a00000a	 bne         |$LN1@NLedDriver@4|

; 381  :             {
; 382  :                 NLedDriverSetLedState(NledNum, 1);

  00f4c	e3a01001	 mov         r1, #1
  00f50	e59d0000	 ldr         r0, [sp]
  00f54	eb000000	 bl          NLedDriverSetLedState

; 383  :                 g_NLedCurrentState[NledNum] = 1;

  00f58	e59d1000	 ldr         r1, [sp]
  00f5c	e3a03004	 mov         r3, #4
  00f60	e0020391	 mul         r2, r1, r3
  00f64	e59f301c	 ldr         r3, [pc, #0x1C]
  00f68	e5933000	 ldr         r3, [r3]
  00f6c	e0832002	 add         r2, r3, r2
  00f70	e3a03001	 mov         r3, #1
  00f74	e5823000	 str         r3, [r2]
  00f78		 |$LN1@NLedDriver@4|

; 384  :             }
; 385  :         }

  00f78	eaffffe1	 b           |$LN3@NLedDriver@4|
  00f7c		 |$LN2@NLedDriver@4|
  00f7c		 |$LN5@NLedDriver@4|

; 386  :     }
; 387  : }

  00f7c	e28dd004	 add         sp, sp, #4
  00f80	e89d6000	 ldmia       sp, {sp, lr}
  00f84	e12fff1e	 bx          lr
  00f88		 |$LN15@NLedDriver@4|
  00f88		 |$LN16@NLedDriver@4|
  00f88	00000000	 DCD         |g_NLedCurrentState|
  00f8c		 |$LN17@NLedDriver@4|
  00f8c	00000000	 DCD         |g_BlinkParams|
  00f90		 |$LN18@NLedDriver@4|
  00f90	00000000	 DCD         |g_dwNbLeds|
  00f94		 |$M44873|

			 ENDP  ; |NLedDriverPowerDown|

	EXPORT	|??_C@_1IC@HJKAENF@?$AAN?$AAL?$AAe?$AAd?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAN?$AAL?$AAE?$AAD?$AA?5?$AA?$CD?$AA?5?$AA?$CF?$AAd?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JG@FJFELDOA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAN?$AAL?$AAe?$AAd?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAC?$AAo?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@LJAJMEMA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAN?$AAL?$AAe?$AAd?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi@| [ DATA ] ; `string'
	EXPORT	|NLedDriverInitialize|
	IMPORT	|CreateThread|
	IMPORT	|CreateEventW|
	IMPORT	|GPIOSetMode|
	IMPORT	|malloc|
	IMPORT	|GPIOOpen|
	IMPORT	|NLedBoardInit|
	IMPORT	|NLedCpuFamily|

  0000c			 AREA	 |.bss|, NOINIT
|g_hNewThread| % 0x4

  00028			 AREA	 |.pdata|, PDATA
|$T44893| DCD	|$LN30@NLedDriver@5|
	DCD	0x40014b02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@HJKAENF@?$AAN?$AAL?$AAe?$AAd?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAN?$AAL?$AAE?$AAD?$AA?5?$AA?$CD?$AA?5?$AA?$CF?$AAd?$AA?5@| DCB "N"
	DCB	0x0, "L", 0x0, "e", 0x0, "d", 0x0, "D", 0x0, "r", 0x0, "i"
	DCB	0x0, "v", 0x0, "e", 0x0, "r", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, ":", 0x0, " ", 0x0, "N", 0x0, "L", 0x0, "E"
	DCB	0x0, "D", 0x0, " ", 0x0, "#", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "d", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "X", 0x0, ")", 0x0, " ", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "e", 0x0, "d"
	DCB	0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JG@FJFELDOA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAN?$AAL?$AAe?$AAd?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAC?$AAo?$AAu@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "N", 0x0, "L", 0x0, "e", 0x0, "d", 0x0, "D", 0x0, "r"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "o"
	DCB	0x0, "u", 0x0, "l", 0x0, "d", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "t", 0x0, " ", 0x0, "c", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "e", 0x0, "v", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, " ", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "/", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "r", 0x0, "t", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@LJAJMEMA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAN?$AAL?$AAe?$AAd?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "N", 0x0, "L", 0x0, "e", 0x0, "d", 0x0, "D", 0x0, "r"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "o", 0x0, "p", 0x0, "e", 0x0, "n"
	DCB	0x0, " ", 0x0, "G", 0x0, "p", 0x0, "i", 0x0, "o", 0x0, " "
	DCB	0x0, "d", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00f94			 AREA	 |.text|, CODE, ARM

  00f94		 |NLedDriverInitialize| PROC

; 394  : {

  00f94		 |$LN30@NLedDriver@5|
  00f94	e52de004	 str         lr, [sp, #-4]!
  00f98	e24dd048	 sub         sp, sp, #0x48
  00f9c		 |$M44890|

; 395  :     BOOL bResult = TRUE;

  00f9c	e3a03001	 mov         r3, #1
  00fa0	e58d300c	 str         r3, [sp, #0xC]

; 396  : 
; 397  :     DWORD i;
; 398  : 
; 399  :     if( NLedCpuFamily == CPU_FAMILY_DM37XX)

  00fa4	e59f3510	 ldr         r3, [pc, #0x510]
  00fa8	e5933000	 ldr         r3, [r3]
  00fac	e3530001	 cmp         r3, #1
  00fb0	1a000002	 bne         |$LN19@NLedDriver@5|

; 400  :     {
; 401  :         g_dwNbLeds=0;

  00fb4	e59f24e8	 ldr         r2, [pc, #0x4E8]
  00fb8	e3a03000	 mov         r3, #0
  00fbc	e5823000	 str         r3, [r2]
  00fc0		 |$LN19@NLedDriver@5|

; 402  :     }
; 403  : 
; 404  :     if (g_dwNbLeds <=0)

  00fc0	e59f34dc	 ldr         r3, [pc, #0x4DC]
  00fc4	e5933000	 ldr         r3, [r3]
  00fc8	e3530000	 cmp         r3, #0
  00fcc	8a000002	 bhi         |$LN18@NLedDriver@5|

; 405  :     {
; 406  :         return FALSE;

  00fd0	e3a03000	 mov         r3, #0
  00fd4	e58d3010	 str         r3, [sp, #0x10]
  00fd8	ea000127	 b           |$LN20@NLedDriver@5|
  00fdc		 |$LN18@NLedDriver@5|

; 407  :     }
; 408  : 
; 409  :     if (NLedBoardInit() == FALSE)

  00fdc	eb000000	 bl          NLedBoardInit
  00fe0	e58d001c	 str         r0, [sp, #0x1C]
  00fe4	e59d301c	 ldr         r3, [sp, #0x1C]
  00fe8	e3530000	 cmp         r3, #0
  00fec	1a000002	 bne         |$LN17@NLedDriver@5|

; 410  :     {
; 411  :         return FALSE;

  00ff0	e3a03000	 mov         r3, #0
  00ff4	e58d3010	 str         r3, [sp, #0x10]
  00ff8	ea00011f	 b           |$LN20@NLedDriver@5|
  00ffc		 |$LN17@NLedDriver@5|

; 412  :     }
; 413  :     
; 414  :     // Open gpio driver
; 415  :     g_hGPIO = GPIOOpen();

  00ffc	eb000000	 bl          GPIOOpen
  01000	e58d0020	 str         r0, [sp, #0x20]
  01004	e59d2020	 ldr         r2, [sp, #0x20]
  01008	e59f3498	 ldr         r3, [pc, #0x498]
  0100c	e5832000	 str         r2, [r3]

; 416  :     if (g_hGPIO == NULL)

  01010	e59f3490	 ldr         r3, [pc, #0x490]
  01014	e5933000	 ldr         r3, [r3]
  01018	e3530000	 cmp         r3, #0
  0101c	1a00000d	 bne         |$LN16@NLedDriver@5|

; 417  :     {
; 418  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: NLedDriverInitialize: Failed to open Gpio driver!\r\n"));

  01020	e59f346c	 ldr         r3, [pc, #0x46C]
  01024	e5933440	 ldr         r3, [r3, #0x440]
  01028	e3130001	 tst         r3, #1
  0102c	0a000004	 beq         |$LN22@NLedDriver@5|
  01030	e59f0480	 ldr         r0, [pc, #0x480]
  01034	eb000000	 bl          NKDbgPrintfW
  01038	e3a03001	 mov         r3, #1
  0103c	e58d3024	 str         r3, [sp, #0x24]
  01040	ea000001	 b           |$LN23@NLedDriver@5|
  01044		 |$LN22@NLedDriver@5|
  01044	e3a03000	 mov         r3, #0
  01048	e58d3024	 str         r3, [sp, #0x24]
  0104c		 |$LN23@NLedDriver@5|

; 419  :         return FALSE;

  0104c	e3a03000	 mov         r3, #0
  01050	e58d3010	 str         r3, [sp, #0x10]
  01054	ea000108	 b           |$LN20@NLedDriver@5|
  01058		 |$LN16@NLedDriver@5|

; 420  :     }
; 421  :     g_BlinkParams = (struct NLED_SETTINGS_INFO*) malloc(g_dwNbLeds*sizeof(struct NLED_SETTINGS_INFO));

  01058	e59f3444	 ldr         r3, [pc, #0x444]
  0105c	e5932000	 ldr         r2, [r3]
  01060	e3a0301c	 mov         r3, #0x1C
  01064	e0000392	 mul         r0, r2, r3
  01068	eb000000	 bl          malloc
  0106c	e58d0028	 str         r0, [sp, #0x28]
  01070	e59d2028	 ldr         r2, [sp, #0x28]
  01074	e59f3438	 ldr         r3, [pc, #0x438]
  01078	e5832000	 str         r2, [r3]

; 422  :     g_NLedCurrentState = (int*) malloc(g_dwNbLeds*sizeof(int));

  0107c	e59f3420	 ldr         r3, [pc, #0x420]
  01080	e5932000	 ldr         r2, [r3]
  01084	e3a03004	 mov         r3, #4
  01088	e0000392	 mul         r0, r2, r3
  0108c	eb000000	 bl          malloc
  01090	e58d002c	 str         r0, [sp, #0x2C]
  01094	e59d202c	 ldr         r2, [sp, #0x2C]
  01098	e59f3410	 ldr         r3, [pc, #0x410]
  0109c	e5832000	 str         r2, [r3]

; 423  :     g_hLedHandle = (HANDLE*) malloc(g_dwNbLeds*sizeof(HANDLE));

  010a0	e59f33fc	 ldr         r3, [pc, #0x3FC]
  010a4	e5932000	 ldr         r2, [r3]
  010a8	e3a03004	 mov         r3, #4
  010ac	e0000392	 mul         r0, r2, r3
  010b0	eb000000	 bl          malloc
  010b4	e58d0030	 str         r0, [sp, #0x30]
  010b8	e59d2030	 ldr         r2, [sp, #0x30]
  010bc	e59f33d8	 ldr         r3, [pc, #0x3D8]
  010c0	e5832000	 str         r2, [r3]

; 424  :     g_hNewThread = (HANDLE*) malloc(g_dwNbLeds*sizeof(HANDLE));

  010c4	e59f33d8	 ldr         r3, [pc, #0x3D8]
  010c8	e5932000	 ldr         r2, [r3]
  010cc	e3a03004	 mov         r3, #4
  010d0	e0000392	 mul         r0, r2, r3
  010d4	eb000000	 bl          malloc
  010d8	e58d0034	 str         r0, [sp, #0x34]
  010dc	e59d2034	 ldr         r2, [sp, #0x34]
  010e0	e59f33a8	 ldr         r3, [pc, #0x3A8]
  010e4	e5832000	 str         r2, [r3]

; 425  : 
; 426  : 
; 427  : 
; 428  :     // initialize the NLED state array and blink parameter structure
; 429  :     for (i = 0; i < g_dwNbLeds; i++)

  010e8	e3a03000	 mov         r3, #0
  010ec	e58d3008	 str         r3, [sp, #8]
  010f0	ea000002	 b           |$LN15@NLedDriver@5|
  010f4		 |$LN14@NLedDriver@5|
  010f4	e59d3008	 ldr         r3, [sp, #8]
  010f8	e2833001	 add         r3, r3, #1
  010fc	e58d3008	 str         r3, [sp, #8]
  01100		 |$LN15@NLedDriver@5|
  01100	e59d2008	 ldr         r2, [sp, #8]
  01104	e59f3398	 ldr         r3, [pc, #0x398]
  01108	e5933000	 ldr         r3, [r3]
  0110c	e1520003	 cmp         r2, r3
  01110	2a000046	 bcs         |$LN13@NLedDriver@5|

; 430  :     {
; 431  :         g_BlinkParams[i].LedNum = i;

  01114	e59d1008	 ldr         r1, [sp, #8]
  01118	e3a0301c	 mov         r3, #0x1C
  0111c	e0020391	 mul         r2, r1, r3
  01120	e59f338c	 ldr         r3, [pc, #0x38C]
  01124	e5933000	 ldr         r3, [r3]
  01128	e0832002	 add         r2, r3, r2
  0112c	e59d3008	 ldr         r3, [sp, #8]
  01130	e5823000	 str         r3, [r2]

; 432  :         g_BlinkParams[i].OffOnBlink = 0;

  01134	e59d1008	 ldr         r1, [sp, #8]
  01138	e3a0301c	 mov         r3, #0x1C
  0113c	e0020391	 mul         r2, r1, r3
  01140	e59f336c	 ldr         r3, [pc, #0x36C]
  01144	e5933000	 ldr         r3, [r3]
  01148	e0833002	 add         r3, r3, r2
  0114c	e2832004	 add         r2, r3, #4
  01150	e3a03000	 mov         r3, #0
  01154	e5823000	 str         r3, [r2]

; 433  :         g_BlinkParams[i].TotalCycleTime = 0;

  01158	e59d1008	 ldr         r1, [sp, #8]
  0115c	e3a0301c	 mov         r3, #0x1C
  01160	e0020391	 mul         r2, r1, r3
  01164	e59f3348	 ldr         r3, [pc, #0x348]
  01168	e5933000	 ldr         r3, [r3]
  0116c	e0833002	 add         r3, r3, r2
  01170	e2832008	 add         r2, r3, #8
  01174	e3a03000	 mov         r3, #0
  01178	e5823000	 str         r3, [r2]

; 434  :         g_BlinkParams[i].OnTime = 0;

  0117c	e59d1008	 ldr         r1, [sp, #8]
  01180	e3a0301c	 mov         r3, #0x1C
  01184	e0020391	 mul         r2, r1, r3
  01188	e59f3324	 ldr         r3, [pc, #0x324]
  0118c	e5933000	 ldr         r3, [r3]
  01190	e0833002	 add         r3, r3, r2
  01194	e283200c	 add         r2, r3, #0xC
  01198	e3a03000	 mov         r3, #0
  0119c	e5823000	 str         r3, [r2]

; 435  :         g_BlinkParams[i].OffTime = 0;

  011a0	e59d1008	 ldr         r1, [sp, #8]
  011a4	e3a0301c	 mov         r3, #0x1C
  011a8	e0020391	 mul         r2, r1, r3
  011ac	e59f3300	 ldr         r3, [pc, #0x300]
  011b0	e5933000	 ldr         r3, [r3]
  011b4	e0833002	 add         r3, r3, r2
  011b8	e2832010	 add         r2, r3, #0x10
  011bc	e3a03000	 mov         r3, #0
  011c0	e5823000	 str         r3, [r2]

; 436  :         g_BlinkParams[i].MetaCycleOn = 0;

  011c4	e59d1008	 ldr         r1, [sp, #8]
  011c8	e3a0301c	 mov         r3, #0x1C
  011cc	e0020391	 mul         r2, r1, r3
  011d0	e59f32dc	 ldr         r3, [pc, #0x2DC]
  011d4	e5933000	 ldr         r3, [r3]
  011d8	e0833002	 add         r3, r3, r2
  011dc	e2832014	 add         r2, r3, #0x14
  011e0	e3a03000	 mov         r3, #0
  011e4	e5823000	 str         r3, [r2]

; 437  :         g_BlinkParams[i].MetaCycleOff = 0;

  011e8	e59d1008	 ldr         r1, [sp, #8]
  011ec	e3a0301c	 mov         r3, #0x1C
  011f0	e0020391	 mul         r2, r1, r3
  011f4	e59f32b8	 ldr         r3, [pc, #0x2B8]
  011f8	e5933000	 ldr         r3, [r3]
  011fc	e0833002	 add         r3, r3, r2
  01200	e2832018	 add         r2, r3, #0x18
  01204	e3a03000	 mov         r3, #0
  01208	e5823000	 str         r3, [r2]

; 438  :         g_NLedCurrentState[i] = 0;

  0120c	e59d1008	 ldr         r1, [sp, #8]
  01210	e3a03004	 mov         r3, #4
  01214	e0020391	 mul         r2, r1, r3
  01218	e59f3290	 ldr         r3, [pc, #0x290]
  0121c	e5933000	 ldr         r3, [r3]
  01220	e0832002	 add         r2, r3, r2
  01224	e3a03000	 mov         r3, #0
  01228	e5823000	 str         r3, [r2]

; 439  :     }

  0122c	eaffffb0	 b           |$LN14@NLedDriver@5|
  01230		 |$LN13@NLedDriver@5|

; 440  : 
; 441  :     for ( i = 0; i < g_dwNbLeds; i++ )

  01230	e3a03000	 mov         r3, #0
  01234	e58d3008	 str         r3, [sp, #8]
  01238	ea000002	 b           |$LN12@NLedDriver@5|
  0123c		 |$LN11@NLedDriver@5|
  0123c	e59d3008	 ldr         r3, [sp, #8]
  01240	e2833001	 add         r3, r3, #1
  01244	e58d3008	 str         r3, [sp, #8]
  01248		 |$LN12@NLedDriver@5|
  01248	e59d2008	 ldr         r2, [sp, #8]
  0124c	e59f3250	 ldr         r3, [pc, #0x250]
  01250	e5933000	 ldr         r3, [r3]
  01254	e1520003	 cmp         r2, r3
  01258	2a000010	 bcs         |$LN10@NLedDriver@5|

; 442  :     {
; 443  :         g_hLedHandle[i] = NULL;

  0125c	e59d1008	 ldr         r1, [sp, #8]
  01260	e3a03004	 mov         r3, #4
  01264	e0020391	 mul         r2, r1, r3
  01268	e59f322c	 ldr         r3, [pc, #0x22C]
  0126c	e5933000	 ldr         r3, [r3]
  01270	e0832002	 add         r2, r3, r2
  01274	e3a03000	 mov         r3, #0
  01278	e5823000	 str         r3, [r2]

; 444  :         g_hNewThread[i] = NULL;

  0127c	e59d1008	 ldr         r1, [sp, #8]
  01280	e3a03004	 mov         r3, #4
  01284	e0020391	 mul         r2, r1, r3
  01288	e59f3200	 ldr         r3, [pc, #0x200]
  0128c	e5933000	 ldr         r3, [r3]
  01290	e0832002	 add         r2, r3, r2
  01294	e3a03000	 mov         r3, #0
  01298	e5823000	 str         r3, [r2]

; 445  :     }

  0129c	eaffffe6	 b           |$LN11@NLedDriver@5|
  012a0		 |$LN10@NLedDriver@5|

; 446  : 
; 447  :     // make NLED GPIO pins outputs
; 448  :     for ( i = 0; i < g_dwNbLeds; i++ )

  012a0	e3a03000	 mov         r3, #0
  012a4	e58d3008	 str         r3, [sp, #8]
  012a8	ea000002	 b           |$LN9@NLedDriver@5|
  012ac		 |$LN8@NLedDriver@5|
  012ac	e59d3008	 ldr         r3, [sp, #8]
  012b0	e2833001	 add         r3, r3, #1
  012b4	e58d3008	 str         r3, [sp, #8]
  012b8		 |$LN9@NLedDriver@5|
  012b8	e59d2008	 ldr         r2, [sp, #8]
  012bc	e59f31e0	 ldr         r3, [pc, #0x1E0]
  012c0	e5933000	 ldr         r3, [r3]
  012c4	e1520003	 cmp         r2, r3
  012c8	2a00000a	 bcs         |$LN7@NLedDriver@5|

; 449  :     {
; 450  :         GPIOSetMode(g_hGPIO, g_GPIOId[i], GPIO_DIR_OUTPUT);

  012cc	e3a02000	 mov         r2, #0
  012d0	e59d0008	 ldr         r0, [sp, #8]
  012d4	e3a03004	 mov         r3, #4
  012d8	e0010390	 mul         r1, r0, r3
  012dc	e59f31c8	 ldr         r3, [pc, #0x1C8]
  012e0	e0833001	 add         r3, r3, r1
  012e4	e5931000	 ldr         r1, [r3]
  012e8	e59f31b8	 ldr         r3, [pc, #0x1B8]
  012ec	e5930000	 ldr         r0, [r3]
  012f0	eb000000	 bl          GPIOSetMode

; 451  :     }

  012f4	eaffffec	 b           |$LN8@NLedDriver@5|
  012f8		 |$LN7@NLedDriver@5|

; 452  :         
; 453  :     for ( i = 0; i < g_dwNbLeds; i++ )

  012f8	e3a03000	 mov         r3, #0
  012fc	e58d3008	 str         r3, [sp, #8]
  01300	ea000002	 b           |$LN6@NLedDriver@5|
  01304		 |$LN5@NLedDriver@5|
  01304	e59d3008	 ldr         r3, [sp, #8]
  01308	e2833001	 add         r3, r3, #1
  0130c	e58d3008	 str         r3, [sp, #8]
  01310		 |$LN6@NLedDriver@5|
  01310	e59d2008	 ldr         r2, [sp, #8]
  01314	e59f3188	 ldr         r3, [pc, #0x188]
  01318	e5933000	 ldr         r3, [r3]
  0131c	e1520003	 cmp         r2, r3
  01320	2a000053	 bcs         |$LN4@NLedDriver@5|

; 454  :     {
; 455  :         g_hLedHandle[i] = CreateEvent(0, FALSE, FALSE, NULL);

  01324	e3a03000	 mov         r3, #0
  01328	e3a02000	 mov         r2, #0
  0132c	e3a01000	 mov         r1, #0
  01330	e3a00000	 mov         r0, #0
  01334	eb000000	 bl          CreateEventW
  01338	e58d0038	 str         r0, [sp, #0x38]
  0133c	e59d1008	 ldr         r1, [sp, #8]
  01340	e3a03004	 mov         r3, #4
  01344	e0020391	 mul         r2, r1, r3
  01348	e59f314c	 ldr         r3, [pc, #0x14C]
  0134c	e5933000	 ldr         r3, [r3]
  01350	e0832002	 add         r2, r3, r2
  01354	e59d3038	 ldr         r3, [sp, #0x38]
  01358	e5823000	 str         r3, [r2]

; 456  :         g_hNewThread[i] = CreateThread(0, 0, (LPTHREAD_START_ROUTINE)NLedControlThread, (LPVOID)i, 0, NULL);

  0135c	e3a03000	 mov         r3, #0
  01360	e58d3004	 str         r3, [sp, #4]
  01364	e3a03000	 mov         r3, #0
  01368	e58d3000	 str         r3, [sp]
  0136c	e59d3008	 ldr         r3, [sp, #8]
  01370	e59f2128	 ldr         r2, [pc, #0x128]
  01374	e3a01000	 mov         r1, #0
  01378	e3a00000	 mov         r0, #0
  0137c	eb000000	 bl          CreateThread
  01380	e58d003c	 str         r0, [sp, #0x3C]
  01384	e59d1008	 ldr         r1, [sp, #8]
  01388	e3a03004	 mov         r3, #4
  0138c	e0020391	 mul         r2, r1, r3
  01390	e59f30f8	 ldr         r3, [pc, #0xF8]
  01394	e5933000	 ldr         r3, [r3]
  01398	e0832002	 add         r2, r3, r2
  0139c	e59d303c	 ldr         r3, [sp, #0x3C]
  013a0	e5823000	 str         r3, [r2]

; 457  : 
; 458  :         if ( g_hNewThread[i] == NULL || g_hLedHandle[i] == NULL)

  013a4	e59d1008	 ldr         r1, [sp, #8]
  013a8	e3a03004	 mov         r3, #4
  013ac	e0020391	 mul         r2, r1, r3
  013b0	e59f30d8	 ldr         r3, [pc, #0xD8]
  013b4	e5933000	 ldr         r3, [r3]
  013b8	e0833002	 add         r3, r3, r2
  013bc	e5933000	 ldr         r3, [r3]
  013c0	e3530000	 cmp         r3, #0
  013c4	0a000008	 beq         |$LN2@NLedDriver@5|
  013c8	e59d1008	 ldr         r1, [sp, #8]
  013cc	e3a03004	 mov         r3, #4
  013d0	e0020391	 mul         r2, r1, r3
  013d4	e59f30c0	 ldr         r3, [pc, #0xC0]
  013d8	e5933000	 ldr         r3, [r3]
  013dc	e0833002	 add         r3, r3, r2
  013e0	e5933000	 ldr         r3, [r3]
  013e4	e3530000	 cmp         r3, #0
  013e8	1a00000d	 bne         |$LN3@NLedDriver@5|
  013ec		 |$LN2@NLedDriver@5|

; 459  :         {
; 460  :             DEBUGMSG(ZONE_ERROR, (TEXT("ERROR: NLedDriverInitialize: Could not create event and/or start thread.\r\n")));

  013ec	e59f30a0	 ldr         r3, [pc, #0xA0]
  013f0	e5933440	 ldr         r3, [r3, #0x440]
  013f4	e3130001	 tst         r3, #1
  013f8	0a000004	 beq         |$LN24@NLedDriver@5|
  013fc	e59f0094	 ldr         r0, [pc, #0x94]
  01400	eb000000	 bl          NKDbgPrintfW
  01404	e3a03001	 mov         r3, #1
  01408	e58d3040	 str         r3, [sp, #0x40]
  0140c	ea000001	 b           |$LN25@NLedDriver@5|
  01410		 |$LN24@NLedDriver@5|
  01410	e3a03000	 mov         r3, #0
  01414	e58d3040	 str         r3, [sp, #0x40]
  01418		 |$LN25@NLedDriver@5|

; 461  :             bResult = FALSE;

  01418	e3a03000	 mov         r3, #0
  0141c	e58d300c	 str         r3, [sp, #0xC]

; 462  :         }
; 463  :         else

  01420	ea000012	 b           |$LN1@NLedDriver@5|
  01424		 |$LN3@NLedDriver@5|

; 464  :         {
; 465  :             DEBUGMSG(ZONE_INIT, (TEXT("NLedDriverInitialize: NLED # %d driver thread: (0x%X) started.\r\n"), i, g_hNewThread[i]));

  01424	e59f3068	 ldr         r3, [pc, #0x68]
  01428	e5933440	 ldr         r3, [r3, #0x440]
  0142c	e3130004	 tst         r3, #4
  01430	0a00000c	 beq         |$LN26@NLedDriver@5|
  01434	e59d1008	 ldr         r1, [sp, #8]
  01438	e3a03004	 mov         r3, #4
  0143c	e0020391	 mul         r2, r1, r3
  01440	e59f3048	 ldr         r3, [pc, #0x48]
  01444	e5933000	 ldr         r3, [r3]
  01448	e0833002	 add         r3, r3, r2
  0144c	e5932000	 ldr         r2, [r3]
  01450	e59d1008	 ldr         r1, [sp, #8]
  01454	e59f0030	 ldr         r0, [pc, #0x30]
  01458	eb000000	 bl          NKDbgPrintfW
  0145c	e3a03001	 mov         r3, #1
  01460	e58d3044	 str         r3, [sp, #0x44]
  01464	ea000001	 b           |$LN27@NLedDriver@5|
  01468		 |$LN26@NLedDriver@5|
  01468	e3a03000	 mov         r3, #0
  0146c	e58d3044	 str         r3, [sp, #0x44]
  01470		 |$LN27@NLedDriver@5|
  01470		 |$LN1@NLedDriver@5|

; 466  :         }
; 467  :     }

  01470	eaffffa3	 b           |$LN5@NLedDriver@5|
  01474		 |$LN4@NLedDriver@5|

; 468  : 
; 469  :     return bResult;

  01474	e59d300c	 ldr         r3, [sp, #0xC]
  01478	e58d3010	 str         r3, [sp, #0x10]
  0147c		 |$LN20@NLedDriver@5|

; 470  : }

  0147c	e59d0010	 ldr         r0, [sp, #0x10]
  01480	e28dd048	 add         sp, sp, #0x48
  01484	e49de004	 ldr         lr, [sp], #4
  01488	e12fff1e	 bx          lr
  0148c		 |$LN31@NLedDriver@5|
  0148c		 |$LN32@NLedDriver@5|
  0148c	00000000	 DCD         |??_C@_1IC@HJKAENF@?$AAN?$AAL?$AAe?$AAd?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAN?$AAL?$AAE?$AAD?$AA?5?$AA?$CD?$AA?5?$AA?$CF?$AAd?$AA?5@|
  01490		 |$LN33@NLedDriver@5|
  01490	00000000	 DCD         |g_hNewThread|
  01494		 |$LN34@NLedDriver@5|
  01494	00000000	 DCD         |dpCurSettings|
  01498		 |$LN35@NLedDriver@5|
  01498	00000000	 DCD         |??_C@_1JG@FJFELDOA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAN?$AAL?$AAe?$AAd?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAC?$AAo?$AAu@|
  0149c		 |$LN36@NLedDriver@5|
  0149c	00000000	 DCD         |g_hLedHandle|
  014a0		 |$LN37@NLedDriver@5|
  014a0	00000000	 DCD         |NLedControlThread|
  014a4		 |$LN38@NLedDriver@5|
  014a4	00000000	 DCD         |g_dwNbLeds|
  014a8		 |$LN39@NLedDriver@5|
  014a8	00000000	 DCD         |g_hGPIO|
  014ac		 |$LN40@NLedDriver@5|
  014ac	00000000	 DCD         |g_GPIOId|
  014b0		 |$LN41@NLedDriver@5|
  014b0	00000000	 DCD         |g_NLedCurrentState|
  014b4		 |$LN42@NLedDriver@5|
  014b4	00000000	 DCD         |g_BlinkParams|
  014b8		 |$LN43@NLedDriver@5|
  014b8	00000000	 DCD         |??_C@_1HG@LJAJMEMA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAN?$AAL?$AAe?$AAd?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AAF?$AAa?$AAi@|
  014bc		 |$LN44@NLedDriver@5|
  014bc	00000000	 DCD         |NLedCpuFamily|
  014c0		 |$M44891|

			 ENDP  ; |NLedDriverInitialize|

	EXPORT	|??_C@_1HC@PEFJFGOG@?$AAN?$AAL?$AAE?$AAD?$AAD?$AAR?$AAV?$AA?3?$AA?5?$AA?5?$AAN?$AAL?$AAe?$AAd?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAD?$AAe?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe@| [ DATA ] ; `string'
	EXPORT	|NLedDriverDeInitialize|
	IMPORT	|NLedBoardDeinit|
	IMPORT	|GPIOClose|
	IMPORT	|free|
	IMPORT	|CloseHandle|

  00030			 AREA	 |.pdata|, PDATA
|$T44915| DCD	|$LN13@NLedDriver@6|
	DCD	0x40008702

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@PEFJFGOG@?$AAN?$AAL?$AAE?$AAD?$AAD?$AAR?$AAV?$AA?3?$AA?5?$AA?5?$AAN?$AAL?$AAe?$AAd?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAD?$AAe?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe@| DCB "N"
	DCB	0x0, "L", 0x0, "E", 0x0, "D", 0x0, "D", 0x0, "R", 0x0, "V"
	DCB	0x0, ":", 0x0, " ", 0x0, " ", 0x0, "N", 0x0, "L", 0x0, "e"
	DCB	0x0, "d", 0x0, "D", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "r", 0x0, "D", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "U", 0x0, "n"
	DCB	0x0, "l", 0x0, "o", 0x0, "a", 0x0, "d", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "d", 0x0, "r", 0x0, "i", 0x0, "v"
	DCB	0x0, "e", 0x0, "r", 0x0, ".", 0x0, ".", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  014c0			 AREA	 |.text|, CODE, ARM

  014c0		 |NLedDriverDeInitialize| PROC

; 476  : {

  014c0		 |$LN13@NLedDriver@6|
  014c0	e52de004	 str         lr, [sp, #-4]!
  014c4	e24dd00c	 sub         sp, sp, #0xC
  014c8		 |$M44912|

; 477  :     DWORD i;
; 478  : 
; 479  :     DEBUGMSG(ZONE_INIT, (TEXT("NLEDDRV:  NLedDriverDeInitialize() Unloading driver...\r\n")));

  014c8	e59f3208	 ldr         r3, [pc, #0x208]
  014cc	e5933440	 ldr         r3, [r3, #0x440]
  014d0	e3130004	 tst         r3, #4
  014d4	0a000004	 beq         |$LN9@NLedDriver@6|
  014d8	e59f01f4	 ldr         r0, [pc, #0x1F4]
  014dc	eb000000	 bl          NKDbgPrintfW
  014e0	e3a03001	 mov         r3, #1
  014e4	e58d3008	 str         r3, [sp, #8]
  014e8	ea000001	 b           |$LN10@NLedDriver@6|
  014ec		 |$LN9@NLedDriver@6|
  014ec	e3a03000	 mov         r3, #0
  014f0	e58d3008	 str         r3, [sp, #8]
  014f4		 |$LN10@NLedDriver@6|

; 480  : 
; 481  :     // Stop all threads, close handles
; 482  :     g_bExitThread = TRUE;

  014f4	e59f21d4	 ldr         r2, [pc, #0x1D4]
  014f8	e3a03001	 mov         r3, #1
  014fc	e5823000	 str         r3, [r2]

; 483  :     for ( i = 0; i < g_dwNbLeds; i++ )

  01500	e3a03000	 mov         r3, #0
  01504	e58d3000	 str         r3, [sp]
  01508	ea000002	 b           |$LN6@NLedDriver@6|
  0150c		 |$LN5@NLedDriver@6|
  0150c	e59d3000	 ldr         r3, [sp]
  01510	e2833001	 add         r3, r3, #1
  01514	e58d3000	 str         r3, [sp]
  01518		 |$LN6@NLedDriver@6|
  01518	e59d2000	 ldr         r2, [sp]
  0151c	e59f31a8	 ldr         r3, [pc, #0x1A8]
  01520	e5933000	 ldr         r3, [r3]
  01524	e1520003	 cmp         r2, r3
  01528	2a00004c	 bcs         |$LN4@NLedDriver@6|

; 484  :     {
; 485  :         if (g_hLedHandle[i])

  0152c	e59d1000	 ldr         r1, [sp]
  01530	e3a03004	 mov         r3, #4
  01534	e0020391	 mul         r2, r1, r3
  01538	e59f3180	 ldr         r3, [pc, #0x180]
  0153c	e5933000	 ldr         r3, [r3]
  01540	e0833002	 add         r3, r3, r2
  01544	e5933000	 ldr         r3, [r3]
  01548	e3530000	 cmp         r3, #0
  0154c	0a000007	 beq         |$LN3@NLedDriver@6|

; 486  :             SetEvent(g_hLedHandle[i]);

  01550	e59d1000	 ldr         r1, [sp]
  01554	e3a03004	 mov         r3, #4
  01558	e0020391	 mul         r2, r1, r3
  0155c	e59f315c	 ldr         r3, [pc, #0x15C]
  01560	e5933000	 ldr         r3, [r3]
  01564	e0833002	 add         r3, r3, r2
  01568	e5930000	 ldr         r0, [r3]
  0156c	eb000000	 bl          SetEvent
  01570		 |$LN3@NLedDriver@6|

; 487  : 
; 488  :         if (g_hNewThread[i])

  01570	e59d1000	 ldr         r1, [sp]
  01574	e3a03004	 mov         r3, #4
  01578	e0020391	 mul         r2, r1, r3
  0157c	e59f3138	 ldr         r3, [pc, #0x138]
  01580	e5933000	 ldr         r3, [r3]
  01584	e0833002	 add         r3, r3, r2
  01588	e5933000	 ldr         r3, [r3]
  0158c	e3530000	 cmp         r3, #0
  01590	0a000010	 beq         |$LN2@NLedDriver@6|

; 489  :         {
; 490  :             WaitForSingleObject(g_hNewThread[i], INFINITE);

  01594	e3e01000	 mvn         r1, #0
  01598	e59d0000	 ldr         r0, [sp]
  0159c	e3a03004	 mov         r3, #4
  015a0	e0020390	 mul         r2, r0, r3
  015a4	e59f3110	 ldr         r3, [pc, #0x110]
  015a8	e5933000	 ldr         r3, [r3]
  015ac	e0833002	 add         r3, r3, r2
  015b0	e5930000	 ldr         r0, [r3]
  015b4	eb000000	 bl          WaitForSingleObject

; 491  :             CloseHandle(g_hNewThread[i]);

  015b8	e59d1000	 ldr         r1, [sp]
  015bc	e3a03004	 mov         r3, #4
  015c0	e0020391	 mul         r2, r1, r3
  015c4	e59f30f0	 ldr         r3, [pc, #0xF0]
  015c8	e5933000	 ldr         r3, [r3]
  015cc	e0833002	 add         r3, r3, r2
  015d0	e5930000	 ldr         r0, [r3]
  015d4	eb000000	 bl          CloseHandle
  015d8		 |$LN2@NLedDriver@6|

; 492  :         }
; 493  : 
; 494  :         if (g_hLedHandle[i])

  015d8	e59d1000	 ldr         r1, [sp]
  015dc	e3a03004	 mov         r3, #4
  015e0	e0020391	 mul         r2, r1, r3
  015e4	e59f30d4	 ldr         r3, [pc, #0xD4]
  015e8	e5933000	 ldr         r3, [r3]
  015ec	e0833002	 add         r3, r3, r2
  015f0	e5933000	 ldr         r3, [r3]
  015f4	e3530000	 cmp         r3, #0
  015f8	0a000007	 beq         |$LN1@NLedDriver@6|

; 495  :             CloseHandle(g_hLedHandle[i]);

  015fc	e59d1000	 ldr         r1, [sp]
  01600	e3a03004	 mov         r3, #4
  01604	e0020391	 mul         r2, r1, r3
  01608	e59f30b0	 ldr         r3, [pc, #0xB0]
  0160c	e5933000	 ldr         r3, [r3]
  01610	e0833002	 add         r3, r3, r2
  01614	e5930000	 ldr         r0, [r3]
  01618	eb000000	 bl          CloseHandle
  0161c		 |$LN1@NLedDriver@6|

; 496  : 
; 497  :         g_hNewThread[i] = NULL;

  0161c	e59d1000	 ldr         r1, [sp]
  01620	e3a03004	 mov         r3, #4
  01624	e0020391	 mul         r2, r1, r3
  01628	e59f308c	 ldr         r3, [pc, #0x8C]
  0162c	e5933000	 ldr         r3, [r3]
  01630	e0832002	 add         r2, r3, r2
  01634	e3a03000	 mov         r3, #0
  01638	e5823000	 str         r3, [r2]

; 498  :         g_hLedHandle[i] = NULL;

  0163c	e59d1000	 ldr         r1, [sp]
  01640	e3a03004	 mov         r3, #4
  01644	e0020391	 mul         r2, r1, r3
  01648	e59f3070	 ldr         r3, [pc, #0x70]
  0164c	e5933000	 ldr         r3, [r3]
  01650	e0832002	 add         r2, r3, r2
  01654	e3a03000	 mov         r3, #0
  01658	e5823000	 str         r3, [r2]

; 499  :     }

  0165c	eaffffaa	 b           |$LN5@NLedDriver@6|
  01660		 |$LN4@NLedDriver@6|

; 500  : 
; 501  :     free(g_BlinkParams);

  01660	e59f3060	 ldr         r3, [pc, #0x60]
  01664	e5930000	 ldr         r0, [r3]
  01668	eb000000	 bl          free

; 502  :     free(g_NLedCurrentState);

  0166c	e59f3050	 ldr         r3, [pc, #0x50]
  01670	e5930000	 ldr         r0, [r3]
  01674	eb000000	 bl          free

; 503  :     free(g_hLedHandle);

  01678	e59f3040	 ldr         r3, [pc, #0x40]
  0167c	e5930000	 ldr         r0, [r3]
  01680	eb000000	 bl          free

; 504  :     free(g_hNewThread);

  01684	e59f3030	 ldr         r3, [pc, #0x30]
  01688	e5930000	 ldr         r0, [r3]
  0168c	eb000000	 bl          free

; 505  : 
; 506  :     GPIOClose(g_hGPIO);

  01690	e59f3020	 ldr         r3, [pc, #0x20]
  01694	e5930000	 ldr         r0, [r3]
  01698	eb000000	 bl          GPIOClose

; 507  :     
; 508  :     NLedBoardDeinit();

  0169c	eb000000	 bl          NLedBoardDeinit

; 509  : 
; 510  :     return TRUE;

  016a0	e3a03001	 mov         r3, #1
  016a4	e58d3004	 str         r3, [sp, #4]

; 511  : }

  016a8	e59d0004	 ldr         r0, [sp, #4]
  016ac	e28dd00c	 add         sp, sp, #0xC
  016b0	e49de004	 ldr         lr, [sp], #4
  016b4	e12fff1e	 bx          lr
  016b8		 |$LN14@NLedDriver@6|
  016b8		 |$LN15@NLedDriver@6|
  016b8	00000000	 DCD         |g_hGPIO|
  016bc		 |$LN16@NLedDriver@6|
  016bc	00000000	 DCD         |g_hNewThread|
  016c0		 |$LN17@NLedDriver@6|
  016c0	00000000	 DCD         |g_hLedHandle|
  016c4		 |$LN18@NLedDriver@6|
  016c4	00000000	 DCD         |g_NLedCurrentState|
  016c8		 |$LN19@NLedDriver@6|
  016c8	00000000	 DCD         |g_BlinkParams|
  016cc		 |$LN20@NLedDriver@6|
  016cc	00000000	 DCD         |g_dwNbLeds|
  016d0		 |$LN21@NLedDriver@6|
  016d0	00000000	 DCD         |g_bExitThread|
  016d4		 |$LN22@NLedDriver@6|
  016d4	00000000	 DCD         |??_C@_1HC@PEFJFGOG@?$AAN?$AAL?$AAE?$AAD?$AAD?$AAR?$AAV?$AA?3?$AA?5?$AA?5?$AAN?$AAL?$AAe?$AAd?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAD?$AAe?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe@|
  016d8		 |$LN23@NLedDriver@6|
  016d8	00000000	 DCD         |dpCurSettings|
  016dc		 |$M44913|

			 ENDP  ; |NLedDriverDeInitialize|

	END
