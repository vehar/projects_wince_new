; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\EMAC\Emac_NDIS.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|dpCurSettings| [ DATA ]

  00000			 AREA	 |.data|, DATA
|dpCurSettings| DCB "E", 0x0, "m", 0x0, "a", 0x0, "c", 0x0, 0x0, 0x0
	%	54
	DCB	"I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0x0, 0x0
	%	54
	DCB	"C", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "c", 0x0
	DCB	"a", 0x0, "l", 0x0, 0x0, 0x0
	%	46
	DCB	"I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0
	DCB	"u", 0x0, "p", 0x0, "t", 0x0, 0x0, 0x0
	%	44
	DCB	"M", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, "a", 0x0, "g", 0x0
	DCB	"e", 0x0, 0x0, 0x0
	%	48
	DCB	"S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, 0x0, 0x0
	%	54
	DCB	"R", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0
	DCB	"e", 0x0, 0x0, 0x0
	%	48
	DCB	"I", 0x0, "n", 0x0, "f", 0x0, "o", 0x0, 0x0, 0x0
	%	54
	DCB	"F", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i", 0x0
	DCB	"o", 0x0, "n", 0x0, 0x0, 0x0
	%	46
	DCB	"O", 0x0, "i", 0x0, "d", 0x0, 0x0, 0x0
	%	56
	DCB	0x0, 0x0
	%	62
	DCB	0x0, 0x0
	%	62
	DCB	0x0, 0x0
	%	62
	DCB	0x0, 0x0
	%	62
	DCB	0x0, 0x0
	%	62
	DCB	"W", 0x0, "a", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0
	DCB	"g", 0x0, "s", 0x0, 0x0, 0x0
	%	46
	DCB	"E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, "s", 0x0
	DCB	0x0, 0x0
	%	50
	DCD	0xc001

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|??_C@_1DO@JACAKCHM@?$AA?$DM?$AA?9?$AA?9?$AA?9?$AA?5?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAE?$AAn?$AAt?$AAr?$AAy?$AA?0?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$DN?$AA?5?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1MI@OHHPHLII@?$AAC?$AAa?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAN?$AAd?$AAi?$AAs?$AAM?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAM?$AAi?$AAn?$AAi?$AAp?$AAo?$AAr?$AAt?$AA?5?$AAw?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@ENNJBCDC@?$AA?$DM?$AA?9?$AA?9?$AA?9?$AA?5?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAE?$AAn?$AAt?$AAr?$AAy?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAW@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@PPABPALB@?$AA?9?$AA?9?$AA?9?$AA?$DO?$AA?5?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAE?$AAn?$AAt?$AAr?$AAy?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|DriverEntry|
	IMPORT	|NdisTerminateWrapper|
	IMPORT	|NdisMRegisterMiniport|
	IMPORT	|Emac_MiniportSendPacketsHandler|
	IMPORT	|Emac_MiniportReturnPacket|
	IMPORT	|Emac_MiniportSetInformation|
	IMPORT	|Emac_MiniportReset|
	IMPORT	|Emac_MiniportQueryInformation|
	IMPORT	|Emac_MiniportIsr|
	IMPORT	|Emac_MiniportInitialize|
	IMPORT	|Emac_MiniportHandleInterrupt|
	IMPORT	|Emac_MiniportHalt|
	IMPORT	|Emac_MiniportDisableInterrupt|
	IMPORT	|Emac_MiniportCheckForHang|
	IMPORT	|memset|
	IMPORT	|NdisInitializeWrapper|
	IMPORT	|NKDbgPrintfW|

  00000			 AREA	 |.pdata|, PDATA
|$T50229| DCD	|$LN13@DriverEntr|
	DCD	0x40008204
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\emac\emac_ndis.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@JACAKCHM@?$AA?$DM?$AA?9?$AA?9?$AA?9?$AA?5?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAE?$AAn?$AAt?$AAr?$AAy?$AA?0?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$DN?$AA?5?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "<"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, " ", 0x0, "D", 0x0, "r"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, "E", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "y", 0x0, ",", 0x0, " ", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1MI@OHHPHLII@?$AAC?$AAa?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAN?$AAd?$AAi?$AAs?$AAM?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAM?$AAi?$AAn?$AAi?$AAp?$AAo?$AAr?$AAt?$AA?5?$AAw?$AAi@| DCB "C"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "N", 0x0, "d", 0x0, "i", 0x0, "s", 0x0, "M"
	DCB	0x0, "R", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "M", 0x0, "i", 0x0, "n", 0x0, "i"
	DCB	0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, " ", 0x0, "w"
	DCB	0x0, "i", 0x0, "t", 0x0, "h", 0x0, " ", 0x0, "N", 0x0, "D"
	DCB	0x0, "I", 0x0, "S", 0x0, "_", 0x0, "M", 0x0, "I", 0x0, "N"
	DCB	0x0, "I", 0x0, "P", 0x0, "O", 0x0, "R", 0x0, "T", 0x0, "_"
	DCB	0x0, "M", 0x0, "A", 0x0, "J", 0x0, "O", 0x0, "R", 0x0, "_"
	DCB	0x0, "V", 0x0, "E", 0x0, "R", 0x0, "S", 0x0, "I", 0x0, "O"
	DCB	0x0, "N", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, "&", 0x0, " "
	DCB	0x0, "N", 0x0, "D", 0x0, "I", 0x0, "S", 0x0, "_", 0x0, "M"
	DCB	0x0, "I", 0x0, "N", 0x0, "I", 0x0, "P", 0x0, "O", 0x0, "R"
	DCB	0x0, "T", 0x0, "_", 0x0, "M", 0x0, "I", 0x0, "N", 0x0, "O"
	DCB	0x0, "R", 0x0, "_", 0x0, "V", 0x0, "E", 0x0, "R", 0x0, "S"
	DCB	0x0, "I", 0x0, "O", 0x0, "N", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@ENNJBCDC@?$AA?$DM?$AA?9?$AA?9?$AA?9?$AA?5?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAE?$AAn?$AAt?$AAr?$AAy?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAW@| DCB "<"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, " ", 0x0, "D", 0x0, "r"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, "E", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "W", 0x0, "r", 0x0, "a", 0x0, "p", 0x0, "p", 0x0, "e"
	DCB	0x0, "r", 0x0, ",", 0x0, " ", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "u", 0x0, "s", 0x0, "=", 0x0, "%", 0x0, "x"
	DCB	0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@PPABPALB@?$AA?9?$AA?9?$AA?9?$AA?$DO?$AA?5?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAE?$AAn?$AAt?$AAr?$AAy?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "-", 0x0, "-", 0x0, ">", 0x0, " ", 0x0, "D", 0x0, "r"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, "E", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "y", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DriverEntry| PROC

; 51   : {

  00000		 |$LN13@DriverEntr|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd098	 sub         sp, sp, #0x98
  00010		 |$M50226|

; 52   :     NDIS_STATUS                   Status;
; 53   :     NDIS_HANDLE                   NdisWrapperHandle;
; 54   :     NDIS_MINIPORT_CHARACTERISTICS EmacChar;
; 55   : 
; 56   :     DEBUGMSG(DBG_FUNC, (L"---> DriverEntry\r\n"));

  00010	e59f31b4	 ldr         r3, [pc, #0x1B4]
  00014	e5933440	 ldr         r3, [r3, #0x440]
  00018	e3130080	 tst         r3, #0x80
  0001c	0a000004	 beq         |$LN5@DriverEntr|
  00020	e59f01dc	 ldr         r0, [pc, #0x1DC]
  00024	eb000000	 bl          NKDbgPrintfW
  00028	e3a03001	 mov         r3, #1
  0002c	e58d3088	 str         r3, [sp, #0x88]
  00030	ea000001	 b           |$LN6@DriverEntr|
  00034		 |$LN5@DriverEntr|
  00034	e3a03000	 mov         r3, #0
  00038	e58d3088	 str         r3, [sp, #0x88]
  0003c		 |$LN6@DriverEntr|

; 57   : 
; 58   :     /*  Notify the  NDIS library that driver is about to register itself as
; 59   :      *  a miniport. NDIS sets up the state it needs to track the driver and
; 60   :      *  returns an NDISWrapperHandle which driver uses for subsequent calls.
; 61   :      */
; 62   :     
; 63   :      NdisMInitializeWrapper(
; 64   :         &NdisWrapperHandle,
; 65   :         DriverObject,
; 66   :         RegistryPath,
; 67   :         NULL);

  0003c	e3a03000	 mov         r3, #0
  00040	e59d20a4	 ldr         r2, [sp, #0xA4]
  00044	e59d10a0	 ldr         r1, [sp, #0xA0]
  00048	e28d0080	 add         r0, sp, #0x80
  0004c	eb000000	 bl          NdisInitializeWrapper

; 68   : 
; 69   :     if (NdisWrapperHandle == NULL)

  00050	e59d3080	 ldr         r3, [sp, #0x80]
  00054	e3530000	 cmp         r3, #0
  00058	1a00000f	 bne         |$LN2@DriverEntr|

; 70   :     {
; 71   :         Status = NDIS_STATUS_FAILURE;

  0005c	e3a03107	 mov         r3, #7, 2
  00060	e58d307c	 str         r3, [sp, #0x7C]

; 72   : 
; 73   :         DEBUGMSG(Status, (L"<--- DriverEntry failed to InitWrapper, Status=%x \r\n", Status));

  00064	e59d307c	 ldr         r3, [sp, #0x7C]
  00068	e3530000	 cmp         r3, #0
  0006c	0a000005	 beq         |$LN7@DriverEntr|
  00070	e59d107c	 ldr         r1, [sp, #0x7C]
  00074	e59f0184	 ldr         r0, [pc, #0x184]
  00078	eb000000	 bl          NKDbgPrintfW
  0007c	e3a03001	 mov         r3, #1
  00080	e58d308c	 str         r3, [sp, #0x8C]
  00084	ea000001	 b           |$LN8@DriverEntr|
  00088		 |$LN7@DriverEntr|
  00088	e3a03000	 mov         r3, #0
  0008c	e58d308c	 str         r3, [sp, #0x8C]
  00090		 |$LN8@DriverEntr|

; 74   :         return Status;

  00090	e59d307c	 ldr         r3, [sp, #0x7C]
  00094	e58d3084	 str         r3, [sp, #0x84]
  00098	ea000046	 b           |$LN3@DriverEntr|
  0009c		 |$LN2@DriverEntr|

; 75   :     }
; 76   : 
; 77   :     /* Fill in the Miniport characteristics structure with the version numbers 
; 78   :      * and the entry points for driver-supplied MiniportXxx 
; 79   :      */
; 80   :      
; 81   :     NdisZeroMemory(&EmacChar, sizeof(EmacChar));

  0009c	e3a0207c	 mov         r2, #0x7C
  000a0	e3a01000	 mov         r1, #0
  000a4	e28d0000	 add         r0, sp, #0
  000a8	eb000000	 bl          memset

; 82   : 
; 83   :     EmacChar.MajorNdisVersion         = EMAC_NDIS_MAJOR_VERSION;

  000ac	e3a03005	 mov         r3, #5
  000b0	e5cd3000	 strb        r3, [sp]

; 84   :     EmacChar.MinorNdisVersion         = EMAC_NDIS_MINOR_VERSION;

  000b4	e3a03000	 mov         r3, #0
  000b8	e5cd3001	 strb        r3, [sp, #1]

; 85   : 
; 86   :     EmacChar.CheckForHangHandler      = Emac_MiniportCheckForHang;

  000bc	e59f3138	 ldr         r3, [pc, #0x138]
  000c0	e58d3008	 str         r3, [sp, #8]

; 87   :     EmacChar.DisableInterruptHandler  = Emac_MiniportDisableInterrupt;

  000c4	e59f312c	 ldr         r3, [pc, #0x12C]
  000c8	e58d300c	 str         r3, [sp, #0xC]

; 88   :     EmacChar.EnableInterruptHandler   = NULL;

  000cc	e3a03000	 mov         r3, #0
  000d0	e58d3010	 str         r3, [sp, #0x10]

; 89   :     EmacChar.HaltHandler              = Emac_MiniportHalt;

  000d4	e59f3118	 ldr         r3, [pc, #0x118]
  000d8	e58d3014	 str         r3, [sp, #0x14]

; 90   :     EmacChar.HandleInterruptHandler   = Emac_MiniportHandleInterrupt;  

  000dc	e59f310c	 ldr         r3, [pc, #0x10C]
  000e0	e58d3018	 str         r3, [sp, #0x18]

; 91   :     EmacChar.InitializeHandler        = Emac_MiniportInitialize;

  000e4	e59f3100	 ldr         r3, [pc, #0x100]
  000e8	e58d301c	 str         r3, [sp, #0x1C]

; 92   :     EmacChar.ISRHandler               = Emac_MiniportIsr;  

  000ec	e59f30f4	 ldr         r3, [pc, #0xF4]
  000f0	e58d3020	 str         r3, [sp, #0x20]

; 93   :     EmacChar.QueryInformationHandler  = Emac_MiniportQueryInformation;

  000f4	e59f30e8	 ldr         r3, [pc, #0xE8]
  000f8	e58d3024	 str         r3, [sp, #0x24]

; 94   :     EmacChar.ReconfigureHandler       = NULL;  

  000fc	e3a03000	 mov         r3, #0
  00100	e58d3028	 str         r3, [sp, #0x28]

; 95   :     EmacChar.ResetHandler             = Emac_MiniportReset;

  00104	e59f30d4	 ldr         r3, [pc, #0xD4]
  00108	e58d302c	 str         r3, [sp, #0x2C]

; 96   :     EmacChar.SendHandler              = NULL;

  0010c	e3a03000	 mov         r3, #0
  00110	e58d3030	 str         r3, [sp, #0x30]

; 97   :     EmacChar.SetInformationHandler    = Emac_MiniportSetInformation;

  00114	e59f30c0	 ldr         r3, [pc, #0xC0]
  00118	e58d3034	 str         r3, [sp, #0x34]

; 98   :     EmacChar.TransferDataHandler      = NULL;  

  0011c	e3a03000	 mov         r3, #0
  00120	e58d3038	 str         r3, [sp, #0x38]

; 99   :     EmacChar.ReturnPacketHandler      = Emac_MiniportReturnPacket;

  00124	e59f30ac	 ldr         r3, [pc, #0xAC]
  00128	e58d303c	 str         r3, [sp, #0x3C]

; 100  :     EmacChar.SendPacketsHandler       = Emac_MiniportSendPacketsHandler;

  0012c	e59f30a0	 ldr         r3, [pc, #0xA0]
  00130	e58d3040	 str         r3, [sp, #0x40]

; 101  :     EmacChar.AllocateCompleteHandler  = NULL;

  00134	e3a03000	 mov         r3, #0
  00138	e58d3044	 str         r3, [sp, #0x44]

; 102  :     
; 103  :     DEBUGMSG(TRUE, (L"Calling NdisMRegisterMiniport with NDIS_MINIPORT_MAJOR_VERSION %d" \
; 104  :                      L"& NDIS_MINIPORT_MINOR_VERSION %d\r\n",
; 105  :                       NDIS_MINIPORT_MAJOR_VERSION,NDIS_MINIPORT_MINOR_VERSION));

  0013c	e3a02001	 mov         r2, #1
  00140	e3a01005	 mov         r1, #5
  00144	e59f0084	 ldr         r0, [pc, #0x84]
  00148	eb000000	 bl          NKDbgPrintfW

; 106  :     
; 107  :     /* Calling NdisMRegisterMiniport causes driver's MiniportInitialise
; 108  :      * function to run in the context of NdisMRegisterMiniport.
; 109  :      */
; 110  :      
; 111  :     
; 112  :     Status = NdisMRegisterMiniport(
; 113  :                  NdisWrapperHandle,
; 114  :                  &EmacChar,
; 115  :                  sizeof(NDIS_MINIPORT_CHARACTERISTICS));

  0014c	e3a0207c	 mov         r2, #0x7C
  00150	e28d1000	 add         r1, sp, #0
  00154	e59d0080	 ldr         r0, [sp, #0x80]
  00158	eb000000	 bl          NdisMRegisterMiniport
  0015c	e58d0090	 str         r0, [sp, #0x90]
  00160	e59d3090	 ldr         r3, [sp, #0x90]
  00164	e58d307c	 str         r3, [sp, #0x7C]

; 116  :     
; 117  :     if(Status != NDIS_STATUS_SUCCESS)

  00168	e59d307c	 ldr         r3, [sp, #0x7C]
  0016c	e3530000	 cmp         r3, #0
  00170	0a000002	 beq         |$LN1@DriverEntr|

; 118  :     {
; 119  :         /* Call NdisTerminateWrapper, and return the error code to the OS. */
; 120  :         NdisTerminateWrapper(
; 121  :             NdisWrapperHandle, 
; 122  :             NULL);          /* Ignored */            

  00174	e3a01000	 mov         r1, #0
  00178	e59d0080	 ldr         r0, [sp, #0x80]
  0017c	eb000000	 bl          NdisTerminateWrapper
  00180		 |$LN1@DriverEntr|

; 123  :     }
; 124  :         
; 125  :     DEBUGMSG(DBG_INFO, (L"<--- DriverEntry, Status= %x\r\n", Status));

  00180	e59f3044	 ldr         r3, [pc, #0x44]
  00184	e5933440	 ldr         r3, [r3, #0x440]
  00188	e3130040	 tst         r3, #0x40
  0018c	0a000005	 beq         |$LN9@DriverEntr|
  00190	e59d107c	 ldr         r1, [sp, #0x7C]
  00194	e59f002c	 ldr         r0, [pc, #0x2C]
  00198	eb000000	 bl          NKDbgPrintfW
  0019c	e3a03001	 mov         r3, #1
  001a0	e58d3094	 str         r3, [sp, #0x94]
  001a4	ea000001	 b           |$LN10@DriverEntr|
  001a8		 |$LN9@DriverEntr|
  001a8	e3a03000	 mov         r3, #0
  001ac	e58d3094	 str         r3, [sp, #0x94]
  001b0		 |$LN10@DriverEntr|

; 126  : 
; 127  :     return Status;

  001b0	e59d307c	 ldr         r3, [sp, #0x7C]
  001b4	e58d3084	 str         r3, [sp, #0x84]
  001b8		 |$LN3@DriverEntr|

; 128  :     
; 129  : }

  001b8	e59d0084	 ldr         r0, [sp, #0x84]
  001bc	e28dd098	 add         sp, sp, #0x98
  001c0	e89d6000	 ldmia       sp, {sp, lr}
  001c4	e12fff1e	 bx          lr
  001c8		 |$LN14@DriverEntr|
  001c8		 |$LN15@DriverEntr|
  001c8	00000000	 DCD         |??_C@_1DO@JACAKCHM@?$AA?$DM?$AA?9?$AA?9?$AA?9?$AA?5?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAE?$AAn?$AAt?$AAr?$AAy?$AA?0?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$DN?$AA?5?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  001cc		 |$LN16@DriverEntr|
  001cc	00000000	 DCD         |dpCurSettings|
  001d0		 |$LN17@DriverEntr|
  001d0	00000000	 DCD         |??_C@_1MI@OHHPHLII@?$AAC?$AAa?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAN?$AAd?$AAi?$AAs?$AAM?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAM?$AAi?$AAn?$AAi?$AAp?$AAo?$AAr?$AAt?$AA?5?$AAw?$AAi@|
  001d4		 |$LN18@DriverEntr|
  001d4	00000000	 DCD         |Emac_MiniportSendPacketsHandler|
  001d8		 |$LN19@DriverEntr|
  001d8	00000000	 DCD         |Emac_MiniportReturnPacket|
  001dc		 |$LN20@DriverEntr|
  001dc	00000000	 DCD         |Emac_MiniportSetInformation|
  001e0		 |$LN21@DriverEntr|
  001e0	00000000	 DCD         |Emac_MiniportReset|
  001e4		 |$LN22@DriverEntr|
  001e4	00000000	 DCD         |Emac_MiniportQueryInformation|
  001e8		 |$LN23@DriverEntr|
  001e8	00000000	 DCD         |Emac_MiniportIsr|
  001ec		 |$LN24@DriverEntr|
  001ec	00000000	 DCD         |Emac_MiniportInitialize|
  001f0		 |$LN25@DriverEntr|
  001f0	00000000	 DCD         |Emac_MiniportHandleInterrupt|
  001f4		 |$LN26@DriverEntr|
  001f4	00000000	 DCD         |Emac_MiniportHalt|
  001f8		 |$LN27@DriverEntr|
  001f8	00000000	 DCD         |Emac_MiniportDisableInterrupt|
  001fc		 |$LN28@DriverEntr|
  001fc	00000000	 DCD         |Emac_MiniportCheckForHang|
  00200		 |$LN29@DriverEntr|
  00200	00000000	 DCD         |??_C@_1GK@ENNJBCDC@?$AA?$DM?$AA?9?$AA?9?$AA?9?$AA?5?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAE?$AAn?$AAt?$AAr?$AAy?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAW@|
  00204		 |$LN30@DriverEntr|
  00204	00000000	 DCD         |??_C@_1CG@PPABPALB@?$AA?9?$AA?9?$AA?9?$AA?$DO?$AA?5?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAE?$AAn?$AAt?$AAr?$AAy?$AA?$AN?$AA?6?$AA?$AA@|
  00208		 |$M50227|

			 ENDP  ; |DriverEntry|

	EXPORT	|??_C@_1EK@NJKNADAA@?$AAE?$AAm?$AAa?$AAc?$AAM?$AAi?$AAn?$AAi?$AAp?$AAo?$AAr?$AAt?$AA?5?$AA?3?$AA?5?$AA?5?$AAD?$AAL?$AAL?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAD?$AAe?$AAt?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@HNNCIDLB@?$AAE?$AAm?$AAa?$AAc?$AAM?$AAi?$AAn?$AAi?$AAp?$AAo?$AAr?$AAt?$AA?5?$AA?3?$AA?5?$AAD?$AAL?$AAL?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAA?$AAt?$AAt?$AAa?$AAc@| [ DATA ] ; `string'
	EXPORT	|DllMain|
	IMPORT	|DisableThreadLibraryCalls|
	IMPORT	|RegisterDbgZones|

  00008			 AREA	 |.pdata|, PDATA
|$T50256| DCD	|$LN13@DllMain|
	DCD	0x40003204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@NJKNADAA@?$AAE?$AAm?$AAa?$AAc?$AAM?$AAi?$AAn?$AAi?$AAp?$AAo?$AAr?$AAt?$AA?5?$AA?3?$AA?5?$AA?5?$AAD?$AAL?$AAL?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAD?$AAe?$AAt?$AAa@| DCB "E"
	DCB	0x0, "m", 0x0, "a", 0x0, "c", 0x0, "M", 0x0, "i", 0x0, "n"
	DCB	0x0, "i", 0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, " "
	DCB	0x0, ":", 0x0, " ", 0x0, " ", 0x0, "D", 0x0, "L", 0x0, "L"
	DCB	0x0, " ", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "t"
	DCB	0x0, "a", 0x0, "c", 0x0, "h", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@HNNCIDLB@?$AAE?$AAm?$AAa?$AAc?$AAM?$AAi?$AAn?$AAi?$AAp?$AAo?$AAr?$AAt?$AA?5?$AA?3?$AA?5?$AAD?$AAL?$AAL?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAA?$AAt?$AAt?$AAa?$AAc@| DCB "E"
	DCB	0x0, "m", 0x0, "a", 0x0, "c", 0x0, "M", 0x0, "i", 0x0, "n"
	DCB	0x0, "i", 0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, " "
	DCB	0x0, ":", 0x0, " ", 0x0, "D", 0x0, "L", 0x0, "L", 0x0, " "
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, " ", 0x0, "A", 0x0, "t", 0x0, "t", 0x0, "a"
	DCB	0x0, "c", 0x0, "h", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00208			 AREA	 |.text|, CODE, ARM

  00208		 |DllMain| PROC

; 147  : {

  00208		 |$LN13@DllMain|
  00208	e1a0c00d	 mov         r12, sp
  0020c	e92d0007	 stmdb       sp!, {r0 - r2}
  00210	e92d5000	 stmdb       sp!, {r12, lr}
  00214	e24dd010	 sub         sp, sp, #0x10
  00218		 |$M50253|

; 148  :     switch (Reason)

  00218	e59d301c	 ldr         r3, [sp, #0x1C]
  0021c	e58d3004	 str         r3, [sp, #4]
  00220	e59d3004	 ldr         r3, [sp, #4]
  00224	e3530000	 cmp         r3, #0
  00228	0a000014	 beq         |$LN1@DllMain|
  0022c	e59d3004	 ldr         r3, [sp, #4]
  00230	e3530001	 cmp         r3, #1
  00234	0a000000	 beq         |$LN2@DllMain|
  00238	ea00001b	 b           |$LN3@DllMain|
  0023c		 |$LN2@DllMain|

; 149  :     {
; 150  :         case DLL_PROCESS_ATTACH:
; 151  :                 DEBUGREGISTER(DllInstance);

  0023c	e59f1084	 ldr         r1, [pc, #0x84]
  00240	e59d0018	 ldr         r0, [sp, #0x18]
  00244	eb000000	 bl          RegisterDbgZones

; 152  :                 DEBUGMSG(DBG_INIT, (L"EmacMiniport : DLL Process Attach\r\n"));

  00248	e59f3078	 ldr         r3, [pc, #0x78]
  0024c	e5933440	 ldr         r3, [r3, #0x440]
  00250	e3130001	 tst         r3, #1
  00254	0a000004	 beq         |$LN7@DllMain|
  00258	e59f006c	 ldr         r0, [pc, #0x6C]
  0025c	eb000000	 bl          NKDbgPrintfW
  00260	e3a03001	 mov         r3, #1
  00264	e58d3008	 str         r3, [sp, #8]
  00268	ea000001	 b           |$LN8@DllMain|
  0026c		 |$LN7@DllMain|
  0026c	e3a03000	 mov         r3, #0
  00270	e58d3008	 str         r3, [sp, #8]
  00274		 |$LN8@DllMain|

; 153  :                 DisableThreadLibraryCalls((HMODULE) DllInstance);

  00274	e59d0018	 ldr         r0, [sp, #0x18]
  00278	eb000000	 bl          DisableThreadLibraryCalls

; 154  :                 break;

  0027c	ea00000a	 b           |$LN3@DllMain|
  00280		 |$LN1@DllMain|

; 155  :                 
; 156  :         case DLL_PROCESS_DETACH:
; 157  :                 DEBUGMSG(DBG_INIT, (L"EmacMiniport :  DLL Process Detach\r\n"));

  00280	e59f3040	 ldr         r3, [pc, #0x40]
  00284	e5933440	 ldr         r3, [r3, #0x440]
  00288	e3130001	 tst         r3, #1
  0028c	0a000004	 beq         |$LN9@DllMain|
  00290	e59f002c	 ldr         r0, [pc, #0x2C]
  00294	eb000000	 bl          NKDbgPrintfW
  00298	e3a03001	 mov         r3, #1
  0029c	e58d300c	 str         r3, [sp, #0xC]
  002a0	ea000001	 b           |$LN10@DllMain|
  002a4		 |$LN9@DllMain|
  002a4	e3a03000	 mov         r3, #0
  002a8	e58d300c	 str         r3, [sp, #0xC]
  002ac		 |$LN10@DllMain|
  002ac		 |$LN3@DllMain|

; 158  :                 break;
; 159  :     }
; 160  :     return TRUE;

  002ac	e3a03001	 mov         r3, #1
  002b0	e58d3000	 str         r3, [sp]

; 161  : }

  002b4	e59d0000	 ldr         r0, [sp]
  002b8	e28dd010	 add         sp, sp, #0x10
  002bc	e89d6000	 ldmia       sp, {sp, lr}
  002c0	e12fff1e	 bx          lr
  002c4		 |$LN14@DllMain|
  002c4		 |$LN15@DllMain|
  002c4	00000000	 DCD         |??_C@_1EK@NJKNADAA@?$AAE?$AAm?$AAa?$AAc?$AAM?$AAi?$AAn?$AAi?$AAp?$AAo?$AAr?$AAt?$AA?5?$AA?3?$AA?5?$AA?5?$AAD?$AAL?$AAL?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAD?$AAe?$AAt?$AAa@|
  002c8		 |$LN16@DllMain|
  002c8	00000000	 DCD         |dpCurSettings|
  002cc		 |$LN17@DllMain|
  002cc	00000000	 DCD         |??_C@_1EI@HNNCIDLB@?$AAE?$AAm?$AAa?$AAc?$AAM?$AAi?$AAn?$AAi?$AAp?$AAo?$AAr?$AAt?$AA?5?$AA?3?$AA?5?$AAD?$AAL?$AAL?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAA?$AAt?$AAt?$AAa?$AAc@|
  002d0		 |$M50254|

			 ENDP  ; |DllMain|

	END
