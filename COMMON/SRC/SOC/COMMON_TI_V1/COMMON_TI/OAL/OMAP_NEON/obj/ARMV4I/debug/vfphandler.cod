; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\OAL\OMAP_NEON\vfphandler.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|g_oalNeonStat| [ DATA ]

  00000			 AREA	 |.bss|, NOINIT
|g_oalNeonStat| % 0x20

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|OALHandleVFPException|

  00000			 AREA	 |.pdata|, PDATA
|$T44070| DCD	|$LN5@OALHandleV|
	DCD	0x40000a04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\oal\omap_neon\vfphandler.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALHandleVFPException| PROC

; 45   : {

  00000		 |$LN5@OALHandleV|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M44067|

; 46   :     UNREFERENCED_PARAMETER(pctx);
; 47   :     UNREFERENCED_PARAMETER(er);
; 48   :     //  All VPF exceptions handed off to OS kernel
; 49   :     return FALSE;

  00010	e3a03000	 mov         r3, #0
  00014	e58d3000	 str         r3, [sp]

; 50   : }

  00018	e59d0000	 ldr         r0, [sp]
  0001c	e28dd004	 add         sp, sp, #4
  00020	e89d6000	 ldmia       sp, {sp, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M44068|

			 ENDP  ; |OALHandleVFPException|

	EXPORT	|OALSaveVFPCtrlRegs|

  00008			 AREA	 |.pdata|, PDATA
|$T44075| DCD	|$LN5@OALSaveVFP|
	DCD	0x40000503
; Function compile flags: /Odtp

  00028			 AREA	 |.text|, CODE, ARM

  00028		 |OALSaveVFPCtrlRegs| PROC

; 65   : {

  00028		 |$LN5@OALSaveVFP|
  00028	e1a0c00d	 mov         r12, sp
  0002c	e92d0003	 stmdb       sp!, {r0, r1}
  00030	e92d5000	 stmdb       sp!, {r12, lr}
  00034		 |$M44072|

; 66   :     UNREFERENCED_PARAMETER(nMaxRegs);
; 67   :     UNREFERENCED_PARAMETER(lpExtra);
; 68   : }

  00034	e89d6000	 ldmia       sp, {sp, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M44073|

			 ENDP  ; |OALSaveVFPCtrlRegs|

	EXPORT	|OALRestoreVFPCtrlRegs|

  00010			 AREA	 |.pdata|, PDATA
|$T44080| DCD	|$LN5@OALRestore|
	DCD	0x40000503
; Function compile flags: /Odtp

  0003c			 AREA	 |.text|, CODE, ARM

  0003c		 |OALRestoreVFPCtrlRegs| PROC

; 82   : {

  0003c		 |$LN5@OALRestore|
  0003c	e1a0c00d	 mov         r12, sp
  00040	e92d0003	 stmdb       sp!, {r0, r1}
  00044	e92d5000	 stmdb       sp!, {r12, lr}
  00048		 |$M44077|

; 83   :     UNREFERENCED_PARAMETER(nMaxRegs);
; 84   :     UNREFERENCED_PARAMETER(lpExtra);
; 85   : }

  00048	e89d6000	 ldmia       sp, {sp, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M44078|

			 ENDP  ; |OALRestoreVFPCtrlRegs|

	EXPORT	|OALInitNeonSaveArea|

  00018			 AREA	 |.pdata|, PDATA
|$T44085| DCD	|$LN5@OALInitNeo|
	DCD	0x40000503
; Function compile flags: /Odtp

  00050			 AREA	 |.text|, CODE, ARM

  00050		 |OALInitNeonSaveArea| PROC

; 97   : {

  00050		 |$LN5@OALInitNeo|
  00050	e1a0c00d	 mov         r12, sp
  00054	e92d0001	 stmdb       sp!, {r0}
  00058	e92d5000	 stmdb       sp!, {r12, lr}
  0005c		 |$M44082|

; 98   :     UNREFERENCED_PARAMETER(pArea);
; 99   : }

  0005c	e89d6000	 ldmia       sp, {sp, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M44083|

			 ENDP  ; |OALInitNeonSaveArea|

	EXPORT	|OALSaveNeonRegistersEx|
	IMPORT	|OALSaveNeonRegisters|

  00020			 AREA	 |.pdata|, PDATA
|$T44090| DCD	|$LN14@OALSaveNeo|
	DCD	0x40005004
; Function compile flags: /Odtp

  00064			 AREA	 |.text|, CODE, ARM

  00064		 |OALSaveNeonRegistersEx| PROC

; 126  : {

  00064		 |$LN14@OALSaveNeo|
  00064	e1a0c00d	 mov         r12, sp
  00068	e92d0001	 stmdb       sp!, {r0}
  0006c	e92d5000	 stmdb       sp!, {r12, lr}
  00070	e24dd004	 sub         sp, sp, #4
  00074		 |$M44087|

; 127  :     LPBYTE pAreaToSave = NULL;     

  00074	e3a03000	 mov         r3, #0
  00078	e58d3000	 str         r3, [sp]

; 128  :        
; 129  :     /* check pArea magicNumber */
; 130  :     if (*((DWORD *)(pArea+(32*8)+4)) == SaveRestoreTagMN) 

  0007c	e59d300c	 ldr         r3, [sp, #0xC]
  00080	e2833f41	 add         r3, r3, #0x41, 30
  00084	e5932000	 ldr         r2, [r3]
  00088	e59f3110	 ldr         r3, [pc, #0x110]
  0008c	e1520003	 cmp         r2, r3
  00090	1a000012	 bne         |$LN9@OALSaveNeo|

; 131  :     {
; 132  :         pAreaToSave = pArea;    

  00094	e59d300c	 ldr         r3, [sp, #0xC]
  00098	e58d3000	 str         r3, [sp]

; 133  :         if (pArea != g_oalNeonStat.pLastRestoredCoProcArea)

  0009c	e59d200c	 ldr         r2, [sp, #0xC]
  000a0	e59f30f4	 ldr         r3, [pc, #0xF4]
  000a4	e5933018	 ldr         r3, [r3, #0x18]
  000a8	e1520003	 cmp         r2, r3
  000ac	0a000005	 beq         |$LN8@OALSaveNeo|

; 134  :             g_oalNeonStat.dwErrCond4++; /* Kernel Screwed up bad */        

  000b0	e59f30e4	 ldr         r3, [pc, #0xE4]
  000b4	e593300c	 ldr         r3, [r3, #0xC]
  000b8	e2832001	 add         r2, r3, #1
  000bc	e59f30d8	 ldr         r3, [pc, #0xD8]
  000c0	e583200c	 str         r2, [r3, #0xC]

; 135  :         else

  000c4	ea000004	 b           |$LN7@OALSaveNeo|
  000c8		 |$LN8@OALSaveNeo|

; 136  :             g_oalNeonStat.dwNumCorrectSave++; /* This is what should happen always ! */

  000c8	e59f30cc	 ldr         r3, [pc, #0xCC]
  000cc	e5933010	 ldr         r3, [r3, #0x10]
  000d0	e2832001	 add         r2, r3, #1
  000d4	e59f30c0	 ldr         r3, [pc, #0xC0]
  000d8	e5832010	 str         r2, [r3, #0x10]
  000dc		 |$LN7@OALSaveNeo|

; 137  :         
; 138  :     }
; 139  :     /* oops - error conditions - lets try to restore */
; 140  :     else if (*((DWORD *)(g_oalNeonStat.pLastRestoredCoProcArea +(32*8)+4)) == SaveRestoreTagMN)

  000dc	ea00001f	 b           |$LN6@OALSaveNeo|
  000e0		 |$LN9@OALSaveNeo|
  000e0	e59f30b4	 ldr         r3, [pc, #0xB4]
  000e4	e5933018	 ldr         r3, [r3, #0x18]
  000e8	e2833f41	 add         r3, r3, #0x41, 30
  000ec	e5932000	 ldr         r2, [r3]
  000f0	e59f30a8	 ldr         r3, [pc, #0xA8]
  000f4	e1520003	 cmp         r2, r3
  000f8	1a000013	 bne         |$LN5@OALSaveNeo|

; 141  :     {
; 142  :         pAreaToSave = g_oalNeonStat.pLastRestoredCoProcArea;       

  000fc	e59f3098	 ldr         r3, [pc, #0x98]
  00100	e5933018	 ldr         r3, [r3, #0x18]
  00104	e58d3000	 str         r3, [sp]

; 143  :         /* get some stats on type of Kernel error */
; 144  :         if (pArea == g_oalNeonStat.pLastSavedCoProcArea) /* Back-to-Back Thread Switch Scenario */

  00108	e59d200c	 ldr         r2, [sp, #0xC]
  0010c	e59f3088	 ldr         r3, [pc, #0x88]
  00110	e593301c	 ldr         r3, [r3, #0x1C]
  00114	e1520003	 cmp         r2, r3
  00118	1a000005	 bne         |$LN4@OALSaveNeo|

; 145  :             g_oalNeonStat.dwErrCond1++;

  0011c	e59f3078	 ldr         r3, [pc, #0x78]
  00120	e5933000	 ldr         r3, [r3]
  00124	e2832001	 add         r2, r3, #1
  00128	e59f306c	 ldr         r3, [pc, #0x6C]
  0012c	e5832000	 str         r2, [r3]

; 146  :         else {               

  00130	ea000004	 b           |$LN3@OALSaveNeo|
  00134		 |$LN4@OALSaveNeo|

; 147  :             g_oalNeonStat.dwErrCond2++; /* Multiple Thread Switch Scenario */

  00134	e59f3060	 ldr         r3, [pc, #0x60]
  00138	e5933004	 ldr         r3, [r3, #4]
  0013c	e2832001	 add         r2, r3, #1
  00140	e59f3054	 ldr         r3, [pc, #0x54]
  00144	e5832004	 str         r2, [r3, #4]
  00148		 |$LN3@OALSaveNeo|

; 148  :         }
; 149  :     }
; 150  :     /* oops oops - dont know what to do - lets log and skip */
; 151  :     else

  00148	ea000004	 b           |$LN2@OALSaveNeo|
  0014c		 |$LN5@OALSaveNeo|

; 152  :     {
; 153  :         g_oalNeonStat.dwErrCond3++;

  0014c	e59f3048	 ldr         r3, [pc, #0x48]
  00150	e5933008	 ldr         r3, [r3, #8]
  00154	e2832001	 add         r2, r3, #1
  00158	e59f303c	 ldr         r3, [pc, #0x3C]
  0015c	e5832008	 str         r2, [r3, #8]
  00160		 |$LN2@OALSaveNeo|
  00160		 |$LN6@OALSaveNeo|

; 154  :     }
; 155  : 
; 156  :     /* if valid Area to Save */
; 157  :     if (pAreaToSave)

  00160	e59d3000	 ldr         r3, [sp]
  00164	e3530000	 cmp         r3, #0
  00168	0a000008	 beq         |$LN1@OALSaveNeo|

; 158  :     {
; 159  :         OALSaveNeonRegisters(pAreaToSave);        

  0016c	e59d0000	 ldr         r0, [sp]
  00170	eb000000	 bl          OALSaveNeonRegisters

; 160  :         *((DWORD *)(pAreaToSave+(32*8)+4)) = 0;

  00174	e59d3000	 ldr         r3, [sp]
  00178	e2832f41	 add         r2, r3, #0x41, 30
  0017c	e3a03000	 mov         r3, #0
  00180	e5823000	 str         r3, [r2]

; 161  :         g_oalNeonStat.pLastSavedCoProcArea = pAreaToSave;        

  00184	e59d2000	 ldr         r2, [sp]
  00188	e59f300c	 ldr         r3, [pc, #0xC]
  0018c	e583201c	 str         r2, [r3, #0x1C]
  00190		 |$LN1@OALSaveNeo|

; 162  :     }    
; 163  : 
; 164  :     
; 165  :     return;
; 166  : }

  00190	e28dd004	 add         sp, sp, #4
  00194	e89d6000	 ldmia       sp, {sp, lr}
  00198	e12fff1e	 bx          lr
  0019c		 |$LN15@OALSaveNeo|
  0019c		 |$LN16@OALSaveNeo|
  0019c	00000000	 DCD         |g_oalNeonStat|
  001a0		 |$LN17@OALSaveNeo|
  001a0	1a2b3c4d	 DCD         0x1a2b3c4d
  001a4		 |$M44088|

			 ENDP  ; |OALSaveNeonRegistersEx|

	EXPORT	|OALRestoreNeonRegistersEx|
	IMPORT	|OALRestoreNeonRegisters|

  00028			 AREA	 |.pdata|, PDATA
|$T44098| DCD	|$LN5@OALRestore@2|
	DCD	0x40001904
; Function compile flags: /Odtp

  001a4			 AREA	 |.text|, CODE, ARM

  001a4		 |OALRestoreNeonRegistersEx| PROC

; 176  : {    

  001a4		 |$LN5@OALRestore@2|
  001a4	e1a0c00d	 mov         r12, sp
  001a8	e92d0001	 stmdb       sp!, {r0}
  001ac	e92d5000	 stmdb       sp!, {r12, lr}
  001b0	e24dd004	 sub         sp, sp, #4
  001b4		 |$M44095|

; 177  :     DWORD * lastSaveRestoreStatus = (DWORD *)(pArea+(32*8)+4);      

  001b4	e59d300c	 ldr         r3, [sp, #0xC]
  001b8	e2833f41	 add         r3, r3, #0x41, 30
  001bc	e58d3000	 str         r3, [sp]

; 178  :     OALRestoreNeonRegisters(pArea);    

  001c0	e59d000c	 ldr         r0, [sp, #0xC]
  001c4	eb000000	 bl          OALRestoreNeonRegisters

; 179  :     *lastSaveRestoreStatus = SaveRestoreTagMN;        

  001c8	e59d2000	 ldr         r2, [sp]
  001cc	e59f3030	 ldr         r3, [pc, #0x30]
  001d0	e5823000	 str         r3, [r2]

; 180  :     g_oalNeonStat.pLastRestoredCoProcArea = pArea;

  001d4	e59d200c	 ldr         r2, [sp, #0xC]
  001d8	e59f3020	 ldr         r3, [pc, #0x20]
  001dc	e5832018	 str         r2, [r3, #0x18]

; 181  :     g_oalNeonStat.dwNumRestore++;     

  001e0	e59f3018	 ldr         r3, [pc, #0x18]
  001e4	e5933014	 ldr         r3, [r3, #0x14]
  001e8	e2832001	 add         r2, r3, #1
  001ec	e59f300c	 ldr         r3, [pc, #0xC]
  001f0	e5832014	 str         r2, [r3, #0x14]

; 182  :     return;
; 183  : }

  001f4	e28dd004	 add         sp, sp, #4
  001f8	e89d6000	 ldmia       sp, {sp, lr}
  001fc	e12fff1e	 bx          lr
  00200		 |$LN6@OALRestore@2|
  00200		 |$LN7@OALRestore@2|
  00200	00000000	 DCD         |g_oalNeonStat|
  00204		 |$LN8@OALRestore@2|
  00204	1a2b3c4d	 DCD         0x1a2b3c4d
  00208		 |$M44096|

			 ENDP  ; |OALRestoreNeonRegistersEx|

	EXPORT	|OALVFPInitialize|
	IMPORT	|OALVFPEnable|

  00030			 AREA	 |.pdata|, PDATA
|$T44106| DCD	|$LN5@OALVFPInit|
	DCD	0x40002c03
; Function compile flags: /Odtp

  00208			 AREA	 |.text|, CODE, ARM

  00208		 |OALVFPInitialize| PROC

; 193  : {

  00208		 |$LN5@OALVFPInit|
  00208	e1a0c00d	 mov         r12, sp
  0020c	e92d0001	 stmdb       sp!, {r0}
  00210	e92d5000	 stmdb       sp!, {r12, lr}
  00214		 |$M44103|

; 194  :     //  Enable the VFP    
; 195  :     OALVFPEnable();

  00214	eb000000	 bl          OALVFPEnable

; 196  : 
; 197  :     // Vector Floating Point support
; 198  :     pOemGlobal->pfnHandleVFPExcp      = OALHandleVFPException;

  00218	e59d3008	 ldr         r3, [sp, #8]
  0021c	e2832f4a	 add         r2, r3, #0x4A, 30
  00220	e59f308c	 ldr         r3, [pc, #0x8C]
  00224	e5823000	 str         r3, [r2]

; 199  :     pOemGlobal->pfnSaveVFPCtrlRegs    = OALSaveVFPCtrlRegs;

  00228	e59d3008	 ldr         r3, [sp, #8]
  0022c	e2832e12	 add         r2, r3, #0x12, 28
  00230	e59f3078	 ldr         r3, [pc, #0x78]
  00234	e5823000	 str         r3, [r2]

; 200  :     pOemGlobal->pfnRestoreVFPCtrlRegs = OALRestoreVFPCtrlRegs;

  00238	e59d3008	 ldr         r3, [sp, #8]
  0023c	e2832f49	 add         r2, r3, #0x49, 30
  00240	e59f3064	 ldr         r3, [pc, #0x64]
  00244	e5823000	 str         r3, [r2]

; 201  : 
; 202  :     // Note: VFP and NEON share the same registers. Although CE6 kernel saves/restores
; 203  :     //       VFPv2 regs (16 64 bit regs) but not on all thread switches, 
; 204  :     //       so need to save/restore all VFPv3 VFP/NEON regs at every thread switch.
; 205  :     pOemGlobal->pfnInitCoProcRegs    = OALInitNeonSaveArea;

  00248	e59d3008	 ldr         r3, [sp, #8]
  0024c	e2832078	 add         r2, r3, #0x78
  00250	e59f3050	 ldr         r3, [pc, #0x50]
  00254	e5823000	 str         r3, [r2]

; 206  :     pOemGlobal->pfnSaveCoProcRegs    = OALSaveNeonRegisters; //use Extended functions

  00258	e59d3008	 ldr         r3, [sp, #8]
  0025c	e283207c	 add         r2, r3, #0x7C
  00260	e59f303c	 ldr         r3, [pc, #0x3C]
  00264	e5823000	 str         r3, [r2]

; 207  :     pOemGlobal->pfnRestoreCoProcRegs = OALRestoreNeonRegisters; // Use Extended funtions

  00268	e59d3008	 ldr         r3, [sp, #8]
  0026c	e2832080	 add         r2, r3, #0x80
  00270	e59f3028	 ldr         r3, [pc, #0x28]
  00274	e5823000	 str         r3, [r2]

; 208  :     pOemGlobal->cbCoProcRegSize      = NEON_SAVEAREA_SIZE;

  00278	e59d3008	 ldr         r3, [sp, #8]
  0027c	e2832084	 add         r2, r3, #0x84
  00280	e3a03f42	 mov         r3, #0x42, 30
  00284	e5823000	 str         r3, [r2]

; 209  :     pOemGlobal->fSaveCoProcReg       = TRUE;

  00288	e59d3008	 ldr         r3, [sp, #8]
  0028c	e2832088	 add         r2, r3, #0x88
  00290	e3a03001	 mov         r3, #1
  00294	e5823000	 str         r3, [r2]

; 210  : }

  00298	e89d6000	 ldmia       sp, {sp, lr}
  0029c	e12fff1e	 bx          lr
  002a0		 |$LN6@OALVFPInit|
  002a0		 |$LN7@OALVFPInit|
  002a0	00000000	 DCD         |OALRestoreNeonRegisters|
  002a4		 |$LN8@OALVFPInit|
  002a4	00000000	 DCD         |OALSaveNeonRegisters|
  002a8		 |$LN9@OALVFPInit|
  002a8	00000000	 DCD         |OALInitNeonSaveArea|
  002ac		 |$LN10@OALVFPInit|
  002ac	00000000	 DCD         |OALRestoreVFPCtrlRegs|
  002b0		 |$LN11@OALVFPInit|
  002b0	00000000	 DCD         |OALSaveVFPCtrlRegs|
  002b4		 |$LN12@OALVFPInit|
  002b4	00000000	 DCD         |OALHandleVFPException|
  002b8		 |$M44104|

			 ENDP  ; |OALVFPInitialize|

	END
