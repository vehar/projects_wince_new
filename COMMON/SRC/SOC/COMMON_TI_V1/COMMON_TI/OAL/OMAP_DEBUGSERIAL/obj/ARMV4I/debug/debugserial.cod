; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\OAL\OMAP_DEBUGSERIAL\debugserial.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.bss|, NOINIT
|s_pUartRegs| %	0x4
|g_pCfg| %	0x4
|bInitializationDone| % 0x4

  00000			 AREA	 |.data|, DATA
|bEnableDebugMessages| DCD 0x1

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|OEMInitDebugSerial|
	IMPORT	|OALPAtoVA|
	IMPORT	|GetAddressByDevice|
	IMPORT	|BSPGetDebugUARTConfig|

  00000			 AREA	 |.pdata|, PDATA
|$T43706| DCD	|$LN7@OEMInitDeb|
	DCD	0x40005b02
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\oal\omap_debugserial\debugserial.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMInitDebugSerial| PROC

; 43   : {    

  00000		 |$LN7@OEMInitDeb|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M43703|

; 44   :     g_pCfg = BSPGetDebugUARTConfig();

  00008	eb000000	 bl          BSPGetDebugUARTConfig
  0000c	e58d0000	 str         r0, [sp]
  00010	e59d2000	 ldr         r2, [sp]
  00014	e59f314c	 ldr         r3, [pc, #0x14C]
  00018	e5832000	 str         r2, [r3]

; 45   :     //----------------------------------------------------------------------
; 46   :     //  Initialize UART
; 47   :     //----------------------------------------------------------------------
; 48   : 
; 49   :     s_pUartRegs = OALPAtoUA(GetAddressByDevice(g_pCfg->dev));

  0001c	e59f3144	 ldr         r3, [pc, #0x144]
  00020	e5933000	 ldr         r3, [r3]
  00024	e5930000	 ldr         r0, [r3]
  00028	eb000000	 bl          GetAddressByDevice
  0002c	e58d0004	 str         r0, [sp, #4]
  00030	e3a01000	 mov         r1, #0
  00034	e59d0004	 ldr         r0, [sp, #4]
  00038	eb000000	 bl          OALPAtoVA
  0003c	e58d0008	 str         r0, [sp, #8]
  00040	e59d2008	 ldr         r2, [sp, #8]
  00044	e59f3118	 ldr         r3, [pc, #0x118]
  00048	e5832000	 str         r2, [r3]

; 50   : 
; 51   :     // Reset UART & wait until it completes
; 52   :     OUTREG8(&s_pUartRegs->SYSC, UART_SYSC_RST);

  0004c	e59f3110	 ldr         r3, [pc, #0x110]
  00050	e5933000	 ldr         r3, [r3]
  00054	e2832054	 add         r2, r3, #0x54
  00058	e3a03002	 mov         r3, #2
  0005c	e5c23000	 strb        r3, [r2]
  00060		 |$LN2@OEMInitDeb|

; 53   :     while ((INREG8(&s_pUartRegs->SYSS) & UART_SYSS_RST_DONE) == 0);

  00060	e59f30fc	 ldr         r3, [pc, #0xFC]
  00064	e5933000	 ldr         r3, [r3]
  00068	e2833058	 add         r3, r3, #0x58
  0006c	e5d33000	 ldrb        r3, [r3]
  00070	e3130001	 tst         r3, #1
  00074	1a000000	 bne         |$LN1@OEMInitDeb|
  00078	eafffff8	 b           |$LN2@OEMInitDeb|
  0007c		 |$LN1@OEMInitDeb|

; 54   :     // Set baud rate
; 55   :     OUTREG8(&s_pUartRegs->LCR, UART_LCR_DLAB);

  0007c	e59f30e0	 ldr         r3, [pc, #0xE0]
  00080	e5933000	 ldr         r3, [r3]
  00084	e283200c	 add         r2, r3, #0xC
  00088	e3a03080	 mov         r3, #0x80
  0008c	e5c23000	 strb        r3, [r2]

; 56   :     OUTREG8(&s_pUartRegs->DLL, g_pCfg->DLL);

  00090	e59f30d0	 ldr         r3, [pc, #0xD0]
  00094	e5933000	 ldr         r3, [r3]
  00098	e2833008	 add         r3, r3, #8
  0009c	e5933000	 ldr         r3, [r3]
  000a0	e20320ff	 and         r2, r3, #0xFF
  000a4	e59f30b8	 ldr         r3, [pc, #0xB8]
  000a8	e5933000	 ldr         r3, [r3]
  000ac	e5c32000	 strb        r2, [r3]

; 57   :     OUTREG8(&s_pUartRegs->DLH, g_pCfg->DLH);

  000b0	e59f30b0	 ldr         r3, [pc, #0xB0]
  000b4	e5933000	 ldr         r3, [r3]
  000b8	e283300c	 add         r3, r3, #0xC
  000bc	e5933000	 ldr         r3, [r3]
  000c0	e20320ff	 and         r2, r3, #0xFF
  000c4	e59f3098	 ldr         r3, [pc, #0x98]
  000c8	e5933000	 ldr         r3, [r3]
  000cc	e2833004	 add         r3, r3, #4
  000d0	e5c32000	 strb        r2, [r3]

; 58   :     // 8 bit, 1 stop bit, no parity
; 59   :     OUTREG8(&s_pUartRegs->LCR, g_pCfg->LCR);

  000d4	e59f308c	 ldr         r3, [pc, #0x8C]
  000d8	e5933000	 ldr         r3, [r3]
  000dc	e2833004	 add         r3, r3, #4
  000e0	e5933000	 ldr         r3, [r3]
  000e4	e20320ff	 and         r2, r3, #0xFF
  000e8	e59f3074	 ldr         r3, [pc, #0x74]
  000ec	e5933000	 ldr         r3, [r3]
  000f0	e283300c	 add         r3, r3, #0xC
  000f4	e5c32000	 strb        r2, [r3]

; 60   :     // Enable FIFO
; 61   :     OUTREG8(&s_pUartRegs->FCR, UART_FCR_FIFO_EN|UART_FCR_RX_FIFO_CLEAR|UART_FCR_TX_FIFO_CLEAR);

  000f8	e59f3064	 ldr         r3, [pc, #0x64]
  000fc	e5933000	 ldr         r3, [r3]
  00100	e2832008	 add         r2, r3, #8
  00104	e3a03007	 mov         r3, #7
  00108	e5c23000	 strb        r3, [r2]

; 62   :     // Pool
; 63   :     OUTREG8(&s_pUartRegs->IER, 0);

  0010c	e59f3050	 ldr         r3, [pc, #0x50]
  00110	e5933000	 ldr         r3, [r3]
  00114	e2832004	 add         r2, r3, #4
  00118	e3a03000	 mov         r3, #0
  0011c	e5c23000	 strb        r3, [r2]

; 64   :     // Set DTR/RTS signals
; 65   :     OUTREG8(&s_pUartRegs->MCR, UART_MCR_DTR|UART_MCR_RTS);

  00120	e59f303c	 ldr         r3, [pc, #0x3C]
  00124	e5933000	 ldr         r3, [r3]
  00128	e2832010	 add         r2, r3, #0x10
  0012c	e3a03003	 mov         r3, #3
  00130	e5c23000	 strb        r3, [r2]

; 66   :     // Configuration complete so select UART 16x mode
; 67   :     OUTREG8(&s_pUartRegs->MDR1, UART_MDR1_UART16);

  00134	e59f3028	 ldr         r3, [pc, #0x28]
  00138	e5933000	 ldr         r3, [r3]
  0013c	e2832020	 add         r2, r3, #0x20
  00140	e3a03000	 mov         r3, #0
  00144	e5c23000	 strb        r3, [r2]

; 68   : 
; 69   :     bInitializationDone = TRUE;

  00148	e59f2010	 ldr         r2, [pc, #0x10]
  0014c	e3a03001	 mov         r3, #1
  00150	e5823000	 str         r3, [r2]

; 70   : }

  00154	e28dd00c	 add         sp, sp, #0xC
  00158	e49de004	 ldr         lr, [sp], #4
  0015c	e12fff1e	 bx          lr
  00160		 |$LN8@OEMInitDeb|
  00160		 |$LN9@OEMInitDeb|
  00160	00000000	 DCD         |bInitializationDone|
  00164		 |$LN10@OEMInitDeb|
  00164	00000000	 DCD         |s_pUartRegs|
  00168		 |$LN11@OEMInitDeb|
  00168	00000000	 DCD         |g_pCfg|
  0016c		 |$M43704|

			 ENDP  ; |OEMInitDebugSerial|

	EXPORT	|OEMDebugInit|

  00008			 AREA	 |.pdata|, PDATA
|$T43716| DCD	|$LN5@OEMDebugIn|
	DCD	0x40000902
; Function compile flags: /Odtp

  0016c			 AREA	 |.text|, CODE, ARM

  0016c		 |OEMDebugInit| PROC

; 73   : {

  0016c		 |$LN5@OEMDebugIn|
  0016c	e52de004	 str         lr, [sp, #-4]!
  00170	e24dd004	 sub         sp, sp, #4
  00174		 |$M43713|

; 74   :     OEMInitDebugSerial();

  00174	eb000000	 bl          OEMInitDebugSerial

; 75   :     return TRUE;

  00178	e3a03001	 mov         r3, #1
  0017c	e58d3000	 str         r3, [sp]

; 76   : }

  00180	e59d0000	 ldr         r0, [sp]
  00184	e28dd004	 add         sp, sp, #4
  00188	e49de004	 ldr         lr, [sp], #4
  0018c	e12fff1e	 bx          lr
  00190		 |$M43714|

			 ENDP  ; |OEMDebugInit|

	EXPORT	|OEMDeinitDebugSerial|
	IMPORT	|EnableDeviceClocks|

  00010			 AREA	 |.pdata|, PDATA
|$T43721| DCD	|$LN8@OEMDeinitD|
	DCD	0x40001c01
; Function compile flags: /Odtp

  00190			 AREA	 |.text|, CODE, ARM

  00190		 |OEMDeinitDebugSerial| PROC

; 83   : {

  00190		 |$LN8@OEMDeinitD|
  00190	e52de004	 str         lr, [sp, #-4]!
  00194		 |$M43718|

; 84   :     // Wait while FIFO isn't empty
; 85   :     if (s_pUartRegs != NULL)

  00194	e59f3060	 ldr         r3, [pc, #0x60]
  00198	e5933000	 ldr         r3, [r3]
  0019c	e3530000	 cmp         r3, #0
  001a0	0a000006	 beq         |$LN3@OEMDeinitD|
  001a4		 |$LN2@OEMDeinitD|

; 86   :         {
; 87   :         while ((INREG8(&s_pUartRegs->LSR) & UART_LSR_TX_SR_E) == 0);

  001a4	e59f3050	 ldr         r3, [pc, #0x50]
  001a8	e5933000	 ldr         r3, [r3]
  001ac	e2833014	 add         r3, r3, #0x14
  001b0	e5d33000	 ldrb        r3, [r3]
  001b4	e3130040	 tst         r3, #0x40
  001b8	1a000000	 bne         |$LN1@OEMDeinitD|
  001bc	eafffff8	 b           |$LN2@OEMDeinitD|
  001c0		 |$LN1@OEMDeinitD|
  001c0		 |$LN3@OEMDeinitD|

; 88   :         }
; 89   : 
; 90   :     s_pUartRegs = NULL;

  001c0	e59f2034	 ldr         r2, [pc, #0x34]
  001c4	e3a03000	 mov         r3, #0
  001c8	e5823000	 str         r3, [r2]

; 91   :     EnableDeviceClocks(g_pCfg->dev, FALSE);

  001cc	e3a01000	 mov         r1, #0
  001d0	e59f3020	 ldr         r3, [pc, #0x20]
  001d4	e5933000	 ldr         r3, [r3]
  001d8	e5930000	 ldr         r0, [r3]
  001dc	eb000000	 bl          EnableDeviceClocks

; 92   : 
; 93   :     bInitializationDone = FALSE;

  001e0	e59f200c	 ldr         r2, [pc, #0xC]
  001e4	e3a03000	 mov         r3, #0
  001e8	e5823000	 str         r3, [r2]

; 94   : }

  001ec	e49de004	 ldr         lr, [sp], #4
  001f0	e12fff1e	 bx          lr
  001f4		 |$LN9@OEMDeinitD|
  001f4		 |$LN10@OEMDeinitD|
  001f4	00000000	 DCD         |bInitializationDone|
  001f8		 |$LN11@OEMDeinitD|
  001f8	00000000	 DCD         |g_pCfg|
  001fc		 |$LN12@OEMDeinitD|
  001fc	00000000	 DCD         |s_pUartRegs|
  00200		 |$M43719|

			 ENDP  ; |OEMDeinitDebugSerial|

	EXPORT	|OEMWriteDebugByte|

  00018			 AREA	 |.pdata|, PDATA
|$T43730| DCD	|$LN9@OEMWriteDe|
	DCD	0x40001f03
; Function compile flags: /Odtp

  00200			 AREA	 |.text|, CODE, ARM

  00200		 |OEMWriteDebugByte| PROC

; 103  : {

  00200		 |$LN9@OEMWriteDe|
  00200	e1a0c00d	 mov         r12, sp
  00204	e92d0001	 stmdb       sp!, {r0}
  00208	e92d5000	 stmdb       sp!, {r12, lr}
  0020c		 |$M43727|

; 104  :     if (bInitializationDone)

  0020c	e59f3064	 ldr         r3, [pc, #0x64]
  00210	e5933000	 ldr         r3, [r3]
  00214	e3530000	 cmp         r3, #0
  00218	0a000012	 beq         |$LN4@OEMWriteDe|

; 105  :     {
; 106  :       if (s_pUartRegs != NULL && bEnableDebugMessages)

  0021c	e59f304c	 ldr         r3, [pc, #0x4C]
  00220	e5933000	 ldr         r3, [r3]
  00224	e3530000	 cmp         r3, #0
  00228	0a00000e	 beq         |$LN3@OEMWriteDe|
  0022c	e59f3040	 ldr         r3, [pc, #0x40]
  00230	e5933000	 ldr         r3, [r3]
  00234	e3530000	 cmp         r3, #0
  00238	0a00000a	 beq         |$LN3@OEMWriteDe|
  0023c		 |$LN2@OEMWriteDe|

; 107  :             {
; 108  :             // Wait while FIFO is full
; 109  :             while ((INREG8(&s_pUartRegs->SSR) & UART_SSR_TX_FIFO_FULL) != 0);

  0023c	e59f302c	 ldr         r3, [pc, #0x2C]
  00240	e5933000	 ldr         r3, [r3]
  00244	e2833044	 add         r3, r3, #0x44
  00248	e5d33000	 ldrb        r3, [r3]
  0024c	e3130001	 tst         r3, #1
  00250	0a000000	 beq         |$LN1@OEMWriteDe|
  00254	eafffff8	 b           |$LN2@OEMWriteDe|
  00258		 |$LN1@OEMWriteDe|

; 110  :             // Send byte
; 111  :             OUTREG8(&s_pUartRegs->THR, ch);

  00258	e5dd2008	 ldrb        r2, [sp, #8]
  0025c	e59f300c	 ldr         r3, [pc, #0xC]
  00260	e5933000	 ldr         r3, [r3]
  00264	e5c32000	 strb        r2, [r3]
  00268		 |$LN3@OEMWriteDe|
  00268		 |$LN4@OEMWriteDe|

; 112  :             }
; 113  :     }
; 114  : }

  00268	e89d6000	 ldmia       sp, {sp, lr}
  0026c	e12fff1e	 bx          lr
  00270		 |$LN10@OEMWriteDe|
  00270		 |$LN11@OEMWriteDe|
  00270	00000000	 DCD         |s_pUartRegs|
  00274		 |$LN12@OEMWriteDe|
  00274	00000000	 DCD         |bEnableDebugMessages|
  00278		 |$LN13@OEMWriteDe|
  00278	00000000	 DCD         |bInitializationDone|
  0027c		 |$M43728|

			 ENDP  ; |OEMWriteDebugByte|

	EXPORT	|OEMReadDebugByte|

  00020			 AREA	 |.pdata|, PDATA
|$T43740| DCD	|$LN10@OEMReadDeb|
	DCD	0x40002f01
; Function compile flags: /Odtp

  0027c			 AREA	 |.text|, CODE, ARM

  0027c		 |OEMReadDebugByte| PROC

; 123  : {

  0027c		 |$LN10@OEMReadDeb|
  0027c	e24dd008	 sub         sp, sp, #8
  00280		 |$M43737|

; 124  :     UINT8 ch = (UINT8)OEM_DEBUG_READ_NODATA;

  00280	e3a030ff	 mov         r3, #0xFF
  00284	e5cd3001	 strb        r3, [sp, #1]

; 125  :     UINT8 status;
; 126  : 
; 127  :     if (bInitializationDone)

  00288	e59f30a4	 ldr         r3, [pc, #0xA4]
  0028c	e5933000	 ldr         r3, [r3]
  00290	e3530000	 cmp         r3, #0
  00294	0a00001f	 beq         |$LN5@OEMReadDeb|

; 128  :     {
; 129  :         if ((s_pUartRegs == NULL) || !bEnableDebugMessages) return OEM_DEBUG_READ_NODATA;

  00298	e59f308c	 ldr         r3, [pc, #0x8C]
  0029c	e5933000	 ldr         r3, [r3]
  002a0	e3530000	 cmp         r3, #0
  002a4	0a000003	 beq         |$LN3@OEMReadDeb|
  002a8	e59f3080	 ldr         r3, [pc, #0x80]
  002ac	e5933000	 ldr         r3, [r3]
  002b0	e3530000	 cmp         r3, #0
  002b4	1a000002	 bne         |$LN4@OEMReadDeb|
  002b8		 |$LN3@OEMReadDeb|
  002b8	e3e03000	 mvn         r3, #0
  002bc	e58d3004	 str         r3, [sp, #4]
  002c0	ea000016	 b           |$LN6@OEMReadDeb|
  002c4		 |$LN4@OEMReadDeb|

; 130  : 
; 131  :         status = INREG8(&s_pUartRegs->LSR);

  002c4	e59f3060	 ldr         r3, [pc, #0x60]
  002c8	e5933000	 ldr         r3, [r3]
  002cc	e2833014	 add         r3, r3, #0x14
  002d0	e5d33000	 ldrb        r3, [r3]
  002d4	e5cd3000	 strb        r3, [sp]

; 132  : 	    if ((status & UART_LSR_RX_FIFO_E) == 0) return OEM_DEBUG_READ_NODATA;

  002d8	e5dd3000	 ldrb        r3, [sp]
  002dc	e3130001	 tst         r3, #1
  002e0	1a000002	 bne         |$LN2@OEMReadDeb|
  002e4	e3e03000	 mvn         r3, #0
  002e8	e58d3004	 str         r3, [sp, #4]
  002ec	ea00000b	 b           |$LN6@OEMReadDeb|
  002f0		 |$LN2@OEMReadDeb|

; 133  : 
; 134  :         ch = INREG8(&s_pUartRegs->RHR);

  002f0	e59f3034	 ldr         r3, [pc, #0x34]
  002f4	e5933000	 ldr         r3, [r3]
  002f8	e5d33000	 ldrb        r3, [r3]
  002fc	e5cd3001	 strb        r3, [sp, #1]

; 135  : 	    if ((status & UART_LSR_RX_ERROR) != 0)  return OEM_DEBUG_COM_ERROR;

  00300	e5dd3000	 ldrb        r3, [sp]
  00304	e313001e	 tst         r3, #0x1E
  00308	0a000002	 beq         |$LN1@OEMReadDeb|
  0030c	e3e03001	 mvn         r3, #1
  00310	e58d3004	 str         r3, [sp, #4]
  00314	ea000001	 b           |$LN6@OEMReadDeb|
  00318		 |$LN1@OEMReadDeb|
  00318		 |$LN5@OEMReadDeb|

; 136  :     }
; 137  : 
; 138  : 	return (INT)ch;

  00318	e5dd3001	 ldrb        r3, [sp, #1]
  0031c	e58d3004	 str         r3, [sp, #4]
  00320		 |$LN6@OEMReadDeb|

; 139  : }

  00320	e59d0004	 ldr         r0, [sp, #4]
  00324	e28dd008	 add         sp, sp, #8
  00328	e12fff1e	 bx          lr
  0032c		 |$LN11@OEMReadDeb|
  0032c		 |$LN12@OEMReadDeb|
  0032c	00000000	 DCD         |s_pUartRegs|
  00330		 |$LN13@OEMReadDeb|
  00330	00000000	 DCD         |bEnableDebugMessages|
  00334		 |$LN14@OEMReadDeb|
  00334	00000000	 DCD         |bInitializationDone|
  00338		 |$M43738|

			 ENDP  ; |OEMReadDebugByte|

	EXPORT	|OEMEnableDebugOutput|

  00028			 AREA	 |.pdata|, PDATA
|$T43749| DCD	|$LN5@OEMEnableD|
	DCD	0x40000903
; Function compile flags: /Odtp

  00338			 AREA	 |.text|, CODE, ARM

  00338		 |OEMEnableDebugOutput| PROC

; 151  : {

  00338		 |$LN5@OEMEnableD|
  00338	e1a0c00d	 mov         r12, sp
  0033c	e92d0001	 stmdb       sp!, {r0}
  00340	e92d5000	 stmdb       sp!, {r12, lr}
  00344		 |$M43746|

; 152  :     bEnableDebugMessages = bEnable;

  00344	e59d2008	 ldr         r2, [sp, #8]
  00348	e59f3008	 ldr         r3, [pc, #8]
  0034c	e5832000	 str         r2, [r3]

; 153  : }

  00350	e89d6000	 ldmia       sp, {sp, lr}
  00354	e12fff1e	 bx          lr
  00358		 |$LN6@OEMEnableD|
  00358		 |$LN7@OEMEnableD|
  00358	00000000	 DCD         |bEnableDebugMessages|
  0035c		 |$M43747|

			 ENDP  ; |OEMEnableDebugOutput|

	EXPORT	|OEMWriteDebugString|

  00030			 AREA	 |.pdata|, PDATA
|$T43756| DCD	|$LN7@OEMWriteDe@2|
	DCD	0x40001504
; Function compile flags: /Odtp

  0035c			 AREA	 |.text|, CODE, ARM

  0035c		 |OEMWriteDebugString| PROC

; 162  : {

  0035c		 |$LN7@OEMWriteDe@2|
  0035c	e1a0c00d	 mov         r12, sp
  00360	e92d0001	 stmdb       sp!, {r0}
  00364	e92d5000	 stmdb       sp!, {r12, lr}
  00368	e24dd004	 sub         sp, sp, #4
  0036c		 |$M43753|
  0036c		 |$LN2@OEMWriteDe@2|

; 163  :     while (*string != L'\0') OEMWriteDebugByte((UINT8)*string++);

  0036c	e59d300c	 ldr         r3, [sp, #0xC]
  00370	e1d330b0	 ldrh        r3, [r3]
  00374	e3530000	 cmp         r3, #0
  00378	0a000009	 beq         |$LN1@OEMWriteDe@2|
  0037c	e59d300c	 ldr         r3, [sp, #0xC]
  00380	e1d330b0	 ldrh        r3, [r3]
  00384	e20330ff	 and         r3, r3, #0xFF
  00388	e5cd3000	 strb        r3, [sp]
  0038c	e5dd0000	 ldrb        r0, [sp]
  00390	eb000000	 bl          OEMWriteDebugByte
  00394	e59d300c	 ldr         r3, [sp, #0xC]
  00398	e2833002	 add         r3, r3, #2
  0039c	e58d300c	 str         r3, [sp, #0xC]
  003a0	eafffff1	 b           |$LN2@OEMWriteDe@2|
  003a4		 |$LN1@OEMWriteDe@2|

; 164  : }

  003a4	e28dd004	 add         sp, sp, #4
  003a8	e89d6000	 ldmia       sp, {sp, lr}
  003ac	e12fff1e	 bx          lr
  003b0		 |$M43754|

			 ENDP  ; |OEMWriteDebugString|

	EXPORT	|OEMWriteDebugLED|

  00038			 AREA	 |.pdata|, PDATA
|$T43761| DCD	|$LN5@OEMWriteDe@3|
	DCD	0x40000503
; Function compile flags: /Odtp

  003b0			 AREA	 |.text|, CODE, ARM

  003b0		 |OEMWriteDebugLED| PROC

; 183  : {

  003b0		 |$LN5@OEMWriteDe@3|
  003b0	e1a0c00d	 mov         r12, sp
  003b4	e92d0003	 stmdb       sp!, {r0, r1}
  003b8	e92d5000	 stmdb       sp!, {r12, lr}
  003bc		 |$M43758|

; 184  :     UNREFERENCED_PARAMETER(index);
; 185  :     UNREFERENCED_PARAMETER(data);
; 186  : }

  003bc	e89d6000	 ldmia       sp, {sp, lr}
  003c0	e12fff1e	 bx          lr
  003c4		 |$M43759|

			 ENDP  ; |OEMWriteDebugLED|

	END
