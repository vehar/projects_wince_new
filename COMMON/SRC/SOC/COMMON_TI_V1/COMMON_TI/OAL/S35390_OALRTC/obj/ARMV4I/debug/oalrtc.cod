; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\OAL\S35390_OALRTC\oalrtc.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.bss|, NOINIT
|g_hI2C| %	0x4

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|RTCI2CWrite|
	IMPORT	|I2CWrite|
	IMPORT	|I2CSetSlaveAddress|

  00004			 AREA	 |.bss|, NOINIT
|g_devAddr| %	0x2

  00000			 AREA	 |.pdata|, PDATA
|$T44435| DCD	|$LN7@RTCI2CWrit|
	DCD	0x40002604
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\oal\s35390_oalrtc\oalrtc.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |RTCI2CWrite| PROC

; 121  : {

  00000		 |$LN7@RTCI2CWrit|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M44432|

; 122  :     I2CSetSlaveAddress(g_hI2C, g_devAddr + subAddr);

  00010	e59f307c	 ldr         r3, [pc, #0x7C]
  00014	e1d330b0	 ldrh        r3, [r3]
  00018	e1a02003	 mov         r2, r3
  0001c	e1dd31b4	 ldrh        r3, [sp, #0x14]
  00020	e0823003	 add         r3, r2, r3
  00024	e1a01803	 mov         r1, r3, lsl #16
  00028	e1a01821	 mov         r1, r1, lsr #16
  0002c	e59f305c	 ldr         r3, [pc, #0x5C]
  00030	e5930000	 ldr         r0, [r3]
  00034	eb000000	 bl          I2CSetSlaveAddress

; 123  :     return (I2CWrite(g_hI2C, 0, pBuffer, size) == size) ? TRUE : FALSE;

  00038	e59d301c	 ldr         r3, [sp, #0x1C]
  0003c	e59d2018	 ldr         r2, [sp, #0x18]
  00040	e3a01000	 mov         r1, #0
  00044	e59f0044	 ldr         r0, [pc, #0x44]
  00048	e5900000	 ldr         r0, [r0]
  0004c	eb000000	 bl          I2CWrite
  00050	e58d0004	 str         r0, [sp, #4]
  00054	e59d2004	 ldr         r2, [sp, #4]
  00058	e59d301c	 ldr         r3, [sp, #0x1C]
  0005c	e1520003	 cmp         r2, r3
  00060	1a000002	 bne         |$LN3@RTCI2CWrit|
  00064	e3a03001	 mov         r3, #1
  00068	e58d3008	 str         r3, [sp, #8]
  0006c	ea000001	 b           |$LN4@RTCI2CWrit|
  00070		 |$LN3@RTCI2CWrit|
  00070	e3a03000	 mov         r3, #0
  00074	e58d3008	 str         r3, [sp, #8]
  00078		 |$LN4@RTCI2CWrit|
  00078	e59d3008	 ldr         r3, [sp, #8]
  0007c	e58d3000	 str         r3, [sp]

; 124  : }

  00080	e59d0000	 ldr         r0, [sp]
  00084	e28dd00c	 add         sp, sp, #0xC
  00088	e89d6000	 ldmia       sp, {sp, lr}
  0008c	e12fff1e	 bx          lr
  00090		 |$LN8@RTCI2CWrit|
  00090		 |$LN9@RTCI2CWrit|
  00090	00000000	 DCD         |g_hI2C|
  00094		 |$LN10@RTCI2CWrit|
  00094	00000000	 DCD         |g_devAddr|
  00098		 |$M44433|

			 ENDP  ; |RTCI2CWrite|

	EXPORT	|RTCI2CRead|
	IMPORT	|I2CRead|

  00008			 AREA	 |.pdata|, PDATA
|$T44446| DCD	|$LN7@RTCI2CRead|
	DCD	0x40002604
; Function compile flags: /Odtp

  00098			 AREA	 |.text|, CODE, ARM

  00098		 |RTCI2CRead| PROC

; 126  : {

  00098		 |$LN7@RTCI2CRead|
  00098	e1a0c00d	 mov         r12, sp
  0009c	e92d0007	 stmdb       sp!, {r0 - r2}
  000a0	e92d5000	 stmdb       sp!, {r12, lr}
  000a4	e24dd00c	 sub         sp, sp, #0xC
  000a8		 |$M44443|

; 127  :     I2CSetSlaveAddress(g_hI2C, g_devAddr + subAddr);

  000a8	e59f307c	 ldr         r3, [pc, #0x7C]
  000ac	e1d330b0	 ldrh        r3, [r3]
  000b0	e1a02003	 mov         r2, r3
  000b4	e1dd31b4	 ldrh        r3, [sp, #0x14]
  000b8	e0823003	 add         r3, r2, r3
  000bc	e1a01803	 mov         r1, r3, lsl #16
  000c0	e1a01821	 mov         r1, r1, lsr #16
  000c4	e59f305c	 ldr         r3, [pc, #0x5C]
  000c8	e5930000	 ldr         r0, [r3]
  000cc	eb000000	 bl          I2CSetSlaveAddress

; 128  :     return (I2CRead(g_hI2C, 0, pBuffer, size) == size) ? TRUE : FALSE;

  000d0	e59d301c	 ldr         r3, [sp, #0x1C]
  000d4	e59d2018	 ldr         r2, [sp, #0x18]
  000d8	e3a01000	 mov         r1, #0
  000dc	e59f0044	 ldr         r0, [pc, #0x44]
  000e0	e5900000	 ldr         r0, [r0]
  000e4	eb000000	 bl          I2CRead
  000e8	e58d0004	 str         r0, [sp, #4]
  000ec	e59d2004	 ldr         r2, [sp, #4]
  000f0	e59d301c	 ldr         r3, [sp, #0x1C]
  000f4	e1520003	 cmp         r2, r3
  000f8	1a000002	 bne         |$LN3@RTCI2CRead|
  000fc	e3a03001	 mov         r3, #1
  00100	e58d3008	 str         r3, [sp, #8]
  00104	ea000001	 b           |$LN4@RTCI2CRead|
  00108		 |$LN3@RTCI2CRead|
  00108	e3a03000	 mov         r3, #0
  0010c	e58d3008	 str         r3, [sp, #8]
  00110		 |$LN4@RTCI2CRead|
  00110	e59d3008	 ldr         r3, [sp, #8]
  00114	e58d3000	 str         r3, [sp]

; 129  : }

  00118	e59d0000	 ldr         r0, [sp]
  0011c	e28dd00c	 add         sp, sp, #0xC
  00120	e89d6000	 ldmia       sp, {sp, lr}
  00124	e12fff1e	 bx          lr
  00128		 |$LN8@RTCI2CRead|
  00128		 |$LN9@RTCI2CRead|
  00128	00000000	 DCD         |g_hI2C|
  0012c		 |$LN10@RTCI2CRead|
  0012c	00000000	 DCD         |g_devAddr|
  00130		 |$M44444|

			 ENDP  ; |RTCI2CRead|

	EXPORT	|??_C@_1HI@CIMKKNOO@?$AAR?$AAT?$AAC?$AA_?$AAG?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAt?$AAh@| [ DATA ] ; `string'
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|RTC_GetTime|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
	IMPORT	|__security_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_check_cookie|

  00006			 AREA	 |.bss|, NOINIT
|g_baseYear| %	0x2

  00010			 AREA	 |.pdata|, PDATA
|$T44462| DCD	|$LN9@RTC_GetTim|
	DCD	0xc0007304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@CIMKKNOO@?$AAR?$AAT?$AAC?$AA_?$AAG?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAt?$AAh@| DCB "R"
	DCB	0x0, "T", 0x0, "C", 0x0, "_", 0x0, "G", 0x0, "e", 0x0, "t"
	DCB	0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "h", 0x0, "e", 0x0, " ", 0x0, "d", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "/", 0x0, "t", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, " ", 0x0, "f", 0x0, "r", 0x0, "o", 0x0, "m", 0x0, " "
	DCB	0x0, "t", 0x0, "h", 0x0, "e", 0x0, " ", 0x0, "R", 0x0, "T"
	DCB	0x0, "C", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.xdata|, DATA
|$T44458| DCD	0xffffffdc
; Function compile flags: /Odtp

  00130			 AREA	 |.text|, CODE, ARM

  00130	00000000	 DCD         |__GSHandlerCheck|
  00134	00000000	 DCD         |$T44458|

  00138		 |RTC_GetTime| PROC

; 132  : {

  00138		 |$LN9@RTC_GetTim|
  00138	e1a0c00d	 mov         r12, sp
  0013c	e92d0001	 stmdb       sp!, {r0}
  00140	e92d5000	 stmdb       sp!, {r12, lr}
  00144	e24dd020	 sub         sp, sp, #0x20
  00148		 |$M44459|
  00148	e59f31b0	 ldr         r3, [pc, #0x1B0]
  0014c	e5933000	 ldr         r3, [r3]
  00150	e58d3008	 str         r3, [sp, #8]

; 133  :     UCHAR receiveBuffer[7];
; 134  : 
; 135  : 	if (g_hI2C == NULL)

  00154	e59f31a0	 ldr         r3, [pc, #0x1A0]
  00158	e5933000	 ldr         r3, [r3]
  0015c	e3530000	 cmp         r3, #0
  00160	1a000004	 bne         |$LN2@RTC_GetTim|

; 136  : 		return FALSE;

  00164	e59d0008	 ldr         r0, [sp, #8]
  00168	eb000000	 bl          __security_check_cookie
  0016c	e3a03000	 mov         r3, #0
  00170	e58d300c	 str         r3, [sp, #0xC]
  00174	ea000059	 b           |$LN3@RTC_GetTim|
  00178		 |$LN2@RTC_GetTim|

; 137  : 
; 138  :     if (RTCI2CRead(RTC_CMD_REAL_TIME_DATA_1, receiveBuffer, 7) == FALSE)

  00178	e3a02007	 mov         r2, #7
  0017c	e28d1000	 add         r1, sp, #0
  00180	e3a00002	 mov         r0, #2
  00184	eb000000	 bl          RTCI2CRead
  00188	e58d0010	 str         r0, [sp, #0x10]
  0018c	e59d3010	 ldr         r3, [sp, #0x10]
  00190	e3530000	 cmp         r3, #0
  00194	1a00000f	 bne         |$LN1@RTC_GetTim|

; 139  :     {
; 140  :         OALMSG(OAL_ERROR, (L"RTC_GetTime(): Failed to read the date/time from the RTC.\r\n"));

  00198	e59f3158	 ldr         r3, [pc, #0x158]
  0019c	e5933440	 ldr         r3, [r3, #0x440]
  001a0	e3130001	 tst         r3, #1
  001a4	0a000004	 beq         |$LN5@RTC_GetTim|
  001a8	e59f0144	 ldr         r0, [pc, #0x144]
  001ac	eb000000	 bl          NKDbgPrintfW
  001b0	e3a03001	 mov         r3, #1
  001b4	e58d3014	 str         r3, [sp, #0x14]
  001b8	ea000001	 b           |$LN6@RTC_GetTim|
  001bc		 |$LN5@RTC_GetTim|
  001bc	e3a03000	 mov         r3, #0
  001c0	e58d3014	 str         r3, [sp, #0x14]
  001c4		 |$LN6@RTC_GetTim|

; 141  : 		return FALSE;

  001c4	e59d0008	 ldr         r0, [sp, #8]
  001c8	eb000000	 bl          __security_check_cookie
  001cc	e3a03000	 mov         r3, #0
  001d0	e58d300c	 str         r3, [sp, #0xC]
  001d4	ea000041	 b           |$LN3@RTC_GetTim|
  001d8		 |$LN1@RTC_GetTim|

; 142  : 	}
; 143  : 
; 144  : 	time->wYear = ReversedBCDtoBIN(receiveBuffer[RTC_RTD1_YEAR]) + g_baseYear;

  001d8	e5dd0000	 ldrb        r0, [sp]
  001dc	eb000000	 bl          ReversedBCDtoBIN
  001e0	e5cd0018	 strb        r0, [sp, #0x18]
  001e4	e5dd3018	 ldrb        r3, [sp, #0x18]
  001e8	e1a02003	 mov         r2, r3
  001ec	e59f30fc	 ldr         r3, [pc, #0xFC]
  001f0	e1d330b0	 ldrh        r3, [r3]
  001f4	e0823003	 add         r3, r2, r3
  001f8	e1a02803	 mov         r2, r3, lsl #16
  001fc	e1a02822	 mov         r2, r2, lsr #16
  00200	e59d3028	 ldr         r3, [sp, #0x28]
  00204	e1c320b0	 strh        r2, [r3]

; 145  : 	time->wMonth = ReversedBCDtoBIN(receiveBuffer[RTC_RTD1_MONTH]);

  00208	e5dd0001	 ldrb        r0, [sp, #1]
  0020c	eb000000	 bl          ReversedBCDtoBIN
  00210	e5cd0019	 strb        r0, [sp, #0x19]
  00214	e59d3028	 ldr         r3, [sp, #0x28]
  00218	e2832002	 add         r2, r3, #2
  0021c	e5dd3019	 ldrb        r3, [sp, #0x19]
  00220	e1c230b0	 strh        r3, [r2]

; 146  : 	time->wDay = ReversedBCDtoBIN(receiveBuffer[RTC_RTD1_DAY]);

  00224	e5dd0002	 ldrb        r0, [sp, #2]
  00228	eb000000	 bl          ReversedBCDtoBIN
  0022c	e5cd001a	 strb        r0, [sp, #0x1A]
  00230	e59d3028	 ldr         r3, [sp, #0x28]
  00234	e2832006	 add         r2, r3, #6
  00238	e5dd301a	 ldrb        r3, [sp, #0x1A]
  0023c	e1c230b0	 strh        r3, [r2]

; 147  : 	time->wHour = ReversedBCDtoBIN(receiveBuffer[RTC_RTD1_HOUR] & ~(RTC_AMPM_BIT));

  00240	e5dd3004	 ldrb        r3, [sp, #4]
  00244	e1a02003	 mov         r2, r3
  00248	e3e03002	 mvn         r3, #2
  0024c	e0023003	 and         r3, r2, r3
  00250	e20300ff	 and         r0, r3, #0xFF
  00254	eb000000	 bl          ReversedBCDtoBIN
  00258	e5cd001b	 strb        r0, [sp, #0x1B]
  0025c	e59d3028	 ldr         r3, [sp, #0x28]
  00260	e2832008	 add         r2, r3, #8
  00264	e5dd301b	 ldrb        r3, [sp, #0x1B]
  00268	e1c230b0	 strh        r3, [r2]

; 148  : 	time->wMinute = ReversedBCDtoBIN(receiveBuffer[RTC_RTD1_MINUTE]);

  0026c	e5dd0005	 ldrb        r0, [sp, #5]
  00270	eb000000	 bl          ReversedBCDtoBIN
  00274	e5cd001c	 strb        r0, [sp, #0x1C]
  00278	e59d3028	 ldr         r3, [sp, #0x28]
  0027c	e283200a	 add         r2, r3, #0xA
  00280	e5dd301c	 ldrb        r3, [sp, #0x1C]
  00284	e1c230b0	 strh        r3, [r2]

; 149  : 	time->wSecond = ReversedBCDtoBIN(receiveBuffer[RTC_RTD1_SECOND]);

  00288	e5dd0006	 ldrb        r0, [sp, #6]
  0028c	eb000000	 bl          ReversedBCDtoBIN
  00290	e5cd001d	 strb        r0, [sp, #0x1D]
  00294	e59d3028	 ldr         r3, [sp, #0x28]
  00298	e283200c	 add         r2, r3, #0xC
  0029c	e5dd301d	 ldrb        r3, [sp, #0x1D]
  002a0	e1c230b0	 strh        r3, [r2]

; 150  : 	time->wDayOfWeek = ReversedBCDtoBIN(receiveBuffer[RTC_RTD1_DAY_OF_WEEK]);

  002a4	e5dd0003	 ldrb        r0, [sp, #3]
  002a8	eb000000	 bl          ReversedBCDtoBIN
  002ac	e5cd001e	 strb        r0, [sp, #0x1E]
  002b0	e59d3028	 ldr         r3, [sp, #0x28]
  002b4	e2832004	 add         r2, r3, #4
  002b8	e5dd301e	 ldrb        r3, [sp, #0x1E]
  002bc	e1c230b0	 strh        r3, [r2]

; 151  : 	time->wMilliseconds = 0;

  002c0	e59d3028	 ldr         r3, [sp, #0x28]
  002c4	e283200e	 add         r2, r3, #0xE
  002c8	e3a03000	 mov         r3, #0
  002cc	e1c230b0	 strh        r3, [r2]

; 152  : 
; 153  : 	return TRUE;

  002d0	e59d0008	 ldr         r0, [sp, #8]
  002d4	eb000000	 bl          __security_check_cookie
  002d8	e3a03001	 mov         r3, #1
  002dc	e58d300c	 str         r3, [sp, #0xC]
  002e0		 |$LN3@RTC_GetTim|

; 154  : }

  002e0	e59d000c	 ldr         r0, [sp, #0xC]
  002e4	e28dd020	 add         sp, sp, #0x20
  002e8	e89d6000	 ldmia       sp, {sp, lr}
  002ec	e12fff1e	 bx          lr
  002f0		 |$LN10@RTC_GetTim|
  002f0		 |$LN11@RTC_GetTim|
  002f0	00000000	 DCD         |g_baseYear|
  002f4		 |$LN12@RTC_GetTim|
  002f4	00000000	 DCD         |??_C@_1HI@CIMKKNOO@?$AAR?$AAT?$AAC?$AA_?$AAG?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAt?$AAh@|
  002f8		 |$LN13@RTC_GetTim|
  002f8	00000000	 DCD         |dpCurSettings|
  002fc		 |$LN14@RTC_GetTim|
  002fc	00000000	 DCD         |g_hI2C|
  00300		 |$LN15@RTC_GetTim|
  00300	00000000	 DCD         |__security_cookie|
  00304		 |$M44460|

			 ENDP  ; |RTC_GetTime|


  00018			 AREA	 |.pdata|, PDATA
|$T44474| DCD	|$LN5@ReversedBC|
	DCD	0x40001604
; Function compile flags: /Odtp

  00304			 AREA	 |.text|, CODE, ARM

  00304		 |ReversedBCDtoBIN| PROC

; 108  : {    

  00304		 |$LN5@ReversedBC|
  00304	e1a0c00d	 mov         r12, sp
  00308	e92d0001	 stmdb       sp!, {r0}
  0030c	e92d5000	 stmdb       sp!, {r12, lr}
  00310	e24dd00c	 sub         sp, sp, #0xC
  00314		 |$M44471|

; 109  :     BYTE reversed = reverse(bcd);

  00314	e5dd0014	 ldrb        r0, [sp, #0x14]
  00318	eb000000	 bl          reverse
  0031c	e5cd0008	 strb        r0, [sp, #8]
  00320	e5dd3008	 ldrb        r3, [sp, #8]
  00324	e5cd3000	 strb        r3, [sp]

; 110  :     return (reversed >> 4) * 10 + (reversed & 0x0F);

  00328	e5dd3000	 ldrb        r3, [sp]
  0032c	e1a01243	 mov         r1, r3, asr #4
  00330	e3a0300a	 mov         r3, #0xA
  00334	e0020391	 mul         r2, r1, r3
  00338	e5dd3000	 ldrb        r3, [sp]
  0033c	e203300f	 and         r3, r3, #0xF
  00340	e0823003	 add         r3, r2, r3
  00344	e20330ff	 and         r3, r3, #0xFF
  00348	e5cd3004	 strb        r3, [sp, #4]

; 111  : }

  0034c	e5dd0004	 ldrb        r0, [sp, #4]
  00350	e28dd00c	 add         sp, sp, #0xC
  00354	e89d6000	 ldmia       sp, {sp, lr}
  00358	e12fff1e	 bx          lr
  0035c		 |$M44472|

			 ENDP  ; |ReversedBCDtoBIN|


  00020			 AREA	 |.pdata|, PDATA
|$T44480| DCD	|$LN9@reverse|
	DCD	0x40002704
; Function compile flags: /Odtp

  0035c			 AREA	 |.text|, CODE, ARM

  0035c		 |reverse| PROC

; 93   : {

  0035c		 |$LN9@reverse|
  0035c	e1a0c00d	 mov         r12, sp
  00360	e92d0001	 stmdb       sp!, {r0}
  00364	e92d5000	 stmdb       sp!, {r12, lr}
  00368	e24dd00c	 sub         sp, sp, #0xC
  0036c		 |$M44477|

; 94   :     int i;
; 95   :     BYTE j;
; 96   :     BYTE result=0;

  0036c	e3a03000	 mov         r3, #0
  00370	e5cd3004	 strb        r3, [sp, #4]

; 97   : 
; 98   :     for (i=0x1,j=0x80;i<0x100;i<<=1,j>>=1)

  00374	e3a03001	 mov         r3, #1
  00378	e58d3000	 str         r3, [sp]
  0037c	e3a03080	 mov         r3, #0x80
  00380	e5cd3005	 strb        r3, [sp, #5]
  00384	ea000006	 b           |$LN4@reverse|
  00388		 |$LN3@reverse|
  00388	e59d3000	 ldr         r3, [sp]
  0038c	e1a03083	 mov         r3, r3, lsl #1
  00390	e58d3000	 str         r3, [sp]
  00394	e5dd3005	 ldrb        r3, [sp, #5]
  00398	e1a030a3	 mov         r3, r3, lsr #1
  0039c	e20330ff	 and         r3, r3, #0xFF
  003a0	e5cd3005	 strb        r3, [sp, #5]
  003a4		 |$LN4@reverse|
  003a4	e59d3000	 ldr         r3, [sp]
  003a8	e3530c01	 cmp         r3, #1, 24
  003ac	aa00000b	 bge         |$LN2@reverse|

; 99   :     {
; 100  :         if (b & i)

  003b0	e5dd3014	 ldrb        r3, [sp, #0x14]
  003b4	e1a02003	 mov         r2, r3
  003b8	e59d3000	 ldr         r3, [sp]
  003bc	e1120003	 tst         r2, r3
  003c0	0a000005	 beq         |$LN1@reverse|

; 101  :         {
; 102  :             result |= j;

  003c4	e5dd3005	 ldrb        r3, [sp, #5]
  003c8	e1a02003	 mov         r2, r3
  003cc	e5dd3004	 ldrb        r3, [sp, #4]
  003d0	e1833002	 orr         r3, r3, r2
  003d4	e20330ff	 and         r3, r3, #0xFF
  003d8	e5cd3004	 strb        r3, [sp, #4]
  003dc		 |$LN1@reverse|

; 103  :         }
; 104  :     }

  003dc	eaffffe9	 b           |$LN3@reverse|
  003e0		 |$LN2@reverse|

; 105  :     return result;

  003e0	e5dd3004	 ldrb        r3, [sp, #4]
  003e4	e5cd3008	 strb        r3, [sp, #8]

; 106  : }

  003e8	e5dd0008	 ldrb        r0, [sp, #8]
  003ec	e28dd00c	 add         sp, sp, #0xC
  003f0	e89d6000	 ldmia       sp, {sp, lr}
  003f4	e12fff1e	 bx          lr
  003f8		 |$M44478|

			 ENDP  ; |reverse|

	EXPORT	|??_C@_1HG@GONGOGNI@?$AAR?$AAT?$AAC?$AA_?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1PM@BDJCONEL@?$AAR?$AAT?$AAC?$AA_?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAD?$AAu?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAh?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?5?$AAl@| [ DATA ] ; `string'
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|RTC_SetTime|

  00028			 AREA	 |.pdata|, PDATA
|$T44492| DCD	|$LN13@RTC_SetTim|
	DCD	0xc0009204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@GONGOGNI@?$AAR?$AAT?$AAC?$AA_?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAt@| DCB "R"
	DCB	0x0, "T", 0x0, "C", 0x0, "_", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "w", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "t", 0x0, "h", 0x0, "e", 0x0, " ", 0x0, "d", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, "/", 0x0, "t", 0x0, "i", 0x0, "m"
	DCB	0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "t"
	DCB	0x0, "h", 0x0, "e", 0x0, " ", 0x0, "R", 0x0, "T", 0x0, "C"
	DCB	0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1PM@BDJCONEL@?$AAR?$AAT?$AAC?$AA_?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAD?$AAu?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAh?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?5?$AAl@| DCB "R"
	DCB	0x0, "T", 0x0, "C", 0x0, "_", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "D", 0x0, "u", 0x0, "e", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "h", 0x0, "a", 0x0, "r"
	DCB	0x0, "d", 0x0, "w", 0x0, "a", 0x0, "r", 0x0, "e", 0x0, " "
	DCB	0x0, "l", 0x0, "i", 0x0, "m", 0x0, "i", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, ",", 0x0, " "
	DCB	0x0, "s", 0x0, "e", 0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "a", 0x0, " ", 0x0, "y", 0x0, "e"
	DCB	0x0, "a", 0x0, "r", 0x0, " ", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, " ", 0x0, "o", 0x0, "f", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, "-", 0x0, "%"
	DCB	0x0, "u", 0x0, " ", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "g"
	DCB	0x0, "e", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "y", 0x0, " "
	DCB	0x0, "c", 0x0, "a", 0x0, "u", 0x0, "s", 0x0, "e", 0x0, " "
	DCB	0x0, "u", 0x0, "n", 0x0, "e", 0x0, "x", 0x0, "p", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "b"
	DCB	0x0, "e", 0x0, "h", 0x0, "a", 0x0, "v", 0x0, "i", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "a", 0x0, "f", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "e"
	DCB	0x0, "t", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00004			 AREA	 |.xdata|, DATA
|$T44488| DCD	0xffffffd8
; Function compile flags: /Odtp

  003f8			 AREA	 |.text|, CODE, ARM

  003f8	00000000	 DCD         |__GSHandlerCheck|
  003fc	00000000	 DCD         |$T44488|

  00400		 |RTC_SetTime| PROC

; 157  : {

  00400		 |$LN13@RTC_SetTim|
  00400	e1a0c00d	 mov         r12, sp
  00404	e92d0001	 stmdb       sp!, {r0}
  00408	e92d5000	 stmdb       sp!, {r12, lr}
  0040c	e24dd024	 sub         sp, sp, #0x24
  00410		 |$M44489|
  00410	e59f322c	 ldr         r3, [pc, #0x22C]
  00414	e5933000	 ldr         r3, [r3]
  00418	e58d3008	 str         r3, [sp, #8]

; 158  :     UCHAR cmdBuffer[7];
; 159  : 
; 160  : 	if((time->wYear < g_baseYear) || (time->wYear > g_baseYear + RTC_MAX_YEARS))

  0041c	e59d302c	 ldr         r3, [sp, #0x2C]
  00420	e1d330b0	 ldrh        r3, [r3]
  00424	e1a02003	 mov         r2, r3
  00428	e59f3208	 ldr         r3, [pc, #0x208]
  0042c	e1d330b0	 ldrh        r3, [r3]
  00430	e1520003	 cmp         r2, r3
  00434	ba000007	 blt         |$LN3@RTC_SetTim|
  00438	e59d302c	 ldr         r3, [sp, #0x2C]
  0043c	e1d330b0	 ldrh        r3, [r3]
  00440	e1a02003	 mov         r2, r3
  00444	e59f31ec	 ldr         r3, [pc, #0x1EC]
  00448	e1d330b0	 ldrh        r3, [r3]
  0044c	e2833063	 add         r3, r3, #0x63
  00450	e1520003	 cmp         r2, r3
  00454	da000011	 ble         |$LN4@RTC_SetTim|
  00458		 |$LN3@RTC_SetTim|

; 161  : 	{
; 162  : 		// warning
; 163  : 		OALMSG(OAL_WARN, (TEXT("RTC_SetTime(): Due to hardware limitation, setting a year out of the %u-%u range may cause unexpected behavior after reset.\r\n")
; 164  : 							,RTC_DEFAULT_BASE_YEAR,RTC_DEFAULT_BASE_YEAR+RTC_MAX_YEARS));

  00458	e59f31d4	 ldr         r3, [pc, #0x1D4]
  0045c	e5933440	 ldr         r3, [r3, #0x440]
  00460	e3130002	 tst         r3, #2
  00464	0a000007	 beq         |$LN7@RTC_SetTim|
  00468	e3a02b02	 mov         r2, #2, 22
  0046c	e3822033	 orr         r2, r2, #0x33
  00470	e3a01e7d	 mov         r1, #0x7D, 28
  00474	e59f01c4	 ldr         r0, [pc, #0x1C4]
  00478	eb000000	 bl          NKDbgPrintfW
  0047c	e3a03001	 mov         r3, #1
  00480	e58d3010	 str         r3, [sp, #0x10]
  00484	ea000001	 b           |$LN8@RTC_SetTim|
  00488		 |$LN7@RTC_SetTim|
  00488	e3a03000	 mov         r3, #0
  0048c	e58d3010	 str         r3, [sp, #0x10]
  00490		 |$LN8@RTC_SetTim|

; 165  : 		g_baseYear = time->wYear;

  00490	e59d302c	 ldr         r3, [sp, #0x2C]
  00494	e1d320b0	 ldrh        r2, [r3]
  00498	e59f3198	 ldr         r3, [pc, #0x198]
  0049c	e1c320b0	 strh        r2, [r3]
  004a0		 |$LN4@RTC_SetTim|

; 166  : 	}
; 167  : 
; 168  : 	if (g_hI2C == NULL)

  004a0	e59f3194	 ldr         r3, [pc, #0x194]
  004a4	e5933000	 ldr         r3, [r3]
  004a8	e3530000	 cmp         r3, #0
  004ac	1a000004	 bne         |$LN2@RTC_SetTim|

; 169  : 		return FALSE;

  004b0	e59d0008	 ldr         r0, [sp, #8]
  004b4	eb000000	 bl          __security_check_cookie
  004b8	e3a03000	 mov         r3, #0
  004bc	e58d300c	 str         r3, [sp, #0xC]
  004c0	ea000056	 b           |$LN5@RTC_SetTim|
  004c4		 |$LN2@RTC_SetTim|

; 170  : 
; 171  : 	cmdBuffer[RTC_RTD1_YEAR] = BINtoReversedBCD((UINT8)(time->wYear - g_baseYear));

  004c4	e59d302c	 ldr         r3, [sp, #0x2C]
  004c8	e1d330b0	 ldrh        r3, [r3]
  004cc	e1a02003	 mov         r2, r3
  004d0	e59f3160	 ldr         r3, [pc, #0x160]
  004d4	e1d330b0	 ldrh        r3, [r3]
  004d8	e0423003	 sub         r3, r2, r3
  004dc	e20300ff	 and         r0, r3, #0xFF
  004e0	eb000000	 bl          BINtoReversedBCD
  004e4	e5cd0014	 strb        r0, [sp, #0x14]
  004e8	e5dd3014	 ldrb        r3, [sp, #0x14]
  004ec	e5cd3000	 strb        r3, [sp]

; 172  : 	cmdBuffer[RTC_RTD1_MONTH] = BINtoReversedBCD((UINT8)time->wMonth);

  004f0	e59d302c	 ldr         r3, [sp, #0x2C]
  004f4	e2833002	 add         r3, r3, #2
  004f8	e1d330b0	 ldrh        r3, [r3]
  004fc	e20300ff	 and         r0, r3, #0xFF
  00500	eb000000	 bl          BINtoReversedBCD
  00504	e5cd0015	 strb        r0, [sp, #0x15]
  00508	e5dd3015	 ldrb        r3, [sp, #0x15]
  0050c	e5cd3001	 strb        r3, [sp, #1]

; 173  : 	cmdBuffer[RTC_RTD1_DAY] = BINtoReversedBCD((UINT8)time->wDay);

  00510	e59d302c	 ldr         r3, [sp, #0x2C]
  00514	e2833006	 add         r3, r3, #6
  00518	e1d330b0	 ldrh        r3, [r3]
  0051c	e20300ff	 and         r0, r3, #0xFF
  00520	eb000000	 bl          BINtoReversedBCD
  00524	e5cd0016	 strb        r0, [sp, #0x16]
  00528	e5dd3016	 ldrb        r3, [sp, #0x16]
  0052c	e5cd3002	 strb        r3, [sp, #2]

; 174  : 	cmdBuffer[RTC_RTD1_HOUR] = BINtoReversedBCD((UINT8)time->wHour);

  00530	e59d302c	 ldr         r3, [sp, #0x2C]
  00534	e2833008	 add         r3, r3, #8
  00538	e1d330b0	 ldrh        r3, [r3]
  0053c	e20300ff	 and         r0, r3, #0xFF
  00540	eb000000	 bl          BINtoReversedBCD
  00544	e5cd0017	 strb        r0, [sp, #0x17]
  00548	e5dd3017	 ldrb        r3, [sp, #0x17]
  0054c	e5cd3004	 strb        r3, [sp, #4]

; 175  : 	cmdBuffer[RTC_RTD1_MINUTE] = BINtoReversedBCD((UINT8)time->wMinute);

  00550	e59d302c	 ldr         r3, [sp, #0x2C]
  00554	e283300a	 add         r3, r3, #0xA
  00558	e1d330b0	 ldrh        r3, [r3]
  0055c	e20300ff	 and         r0, r3, #0xFF
  00560	eb000000	 bl          BINtoReversedBCD
  00564	e5cd0018	 strb        r0, [sp, #0x18]
  00568	e5dd3018	 ldrb        r3, [sp, #0x18]
  0056c	e5cd3005	 strb        r3, [sp, #5]

; 176  : 	cmdBuffer[RTC_RTD1_SECOND] = BINtoReversedBCD((UINT8)time->wSecond);

  00570	e59d302c	 ldr         r3, [sp, #0x2C]
  00574	e283300c	 add         r3, r3, #0xC
  00578	e1d330b0	 ldrh        r3, [r3]
  0057c	e20300ff	 and         r0, r3, #0xFF
  00580	eb000000	 bl          BINtoReversedBCD
  00584	e5cd0019	 strb        r0, [sp, #0x19]
  00588	e5dd3019	 ldrb        r3, [sp, #0x19]
  0058c	e5cd3006	 strb        r3, [sp, #6]

; 177  : 	cmdBuffer[RTC_RTD1_DAY_OF_WEEK] = BINtoReversedBCD((UINT8)time->wDayOfWeek);

  00590	e59d302c	 ldr         r3, [sp, #0x2C]
  00594	e2833004	 add         r3, r3, #4
  00598	e1d330b0	 ldrh        r3, [r3]
  0059c	e20300ff	 and         r0, r3, #0xFF
  005a0	eb000000	 bl          BINtoReversedBCD
  005a4	e5cd001a	 strb        r0, [sp, #0x1A]
  005a8	e5dd301a	 ldrb        r3, [sp, #0x1A]
  005ac	e5cd3003	 strb        r3, [sp, #3]

; 178  : 
; 179  : 	if (RTCI2CWrite(RTC_CMD_REAL_TIME_DATA_1,cmdBuffer,7)==FALSE)

  005b0	e3a02007	 mov         r2, #7
  005b4	e28d1000	 add         r1, sp, #0
  005b8	e3a00002	 mov         r0, #2
  005bc	eb000000	 bl          RTCI2CWrite
  005c0	e58d001c	 str         r0, [sp, #0x1C]
  005c4	e59d301c	 ldr         r3, [sp, #0x1C]
  005c8	e3530000	 cmp         r3, #0
  005cc	1a00000f	 bne         |$LN1@RTC_SetTim|

; 180  : 	{
; 181  : 		OALMSG(OAL_ERROR, (L"RTC_SetTime(): Failed to write the date/time to the RTC.\r\n"));

  005d0	e59f305c	 ldr         r3, [pc, #0x5C]
  005d4	e5933440	 ldr         r3, [r3, #0x440]
  005d8	e3130001	 tst         r3, #1
  005dc	0a000004	 beq         |$LN9@RTC_SetTim|
  005e0	e59f0048	 ldr         r0, [pc, #0x48]
  005e4	eb000000	 bl          NKDbgPrintfW
  005e8	e3a03001	 mov         r3, #1
  005ec	e58d3020	 str         r3, [sp, #0x20]
  005f0	ea000001	 b           |$LN10@RTC_SetTim|
  005f4		 |$LN9@RTC_SetTim|
  005f4	e3a03000	 mov         r3, #0
  005f8	e58d3020	 str         r3, [sp, #0x20]
  005fc		 |$LN10@RTC_SetTim|

; 182  : 		return FALSE;

  005fc	e59d0008	 ldr         r0, [sp, #8]
  00600	eb000000	 bl          __security_check_cookie
  00604	e3a03000	 mov         r3, #0
  00608	e58d300c	 str         r3, [sp, #0xC]
  0060c	ea000003	 b           |$LN5@RTC_SetTim|
  00610		 |$LN1@RTC_SetTim|

; 183  : 	}
; 184  : 
; 185  : 	return TRUE;

  00610	e59d0008	 ldr         r0, [sp, #8]
  00614	eb000000	 bl          __security_check_cookie
  00618	e3a03001	 mov         r3, #1
  0061c	e58d300c	 str         r3, [sp, #0xC]
  00620		 |$LN5@RTC_SetTim|

; 186  : }

  00620	e59d000c	 ldr         r0, [sp, #0xC]
  00624	e28dd024	 add         sp, sp, #0x24
  00628	e89d6000	 ldmia       sp, {sp, lr}
  0062c	e12fff1e	 bx          lr
  00630		 |$LN14@RTC_SetTim|
  00630		 |$LN15@RTC_SetTim|
  00630	00000000	 DCD         |??_C@_1HG@GONGOGNI@?$AAR?$AAT?$AAC?$AA_?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAt@|
  00634		 |$LN16@RTC_SetTim|
  00634	00000000	 DCD         |dpCurSettings|
  00638		 |$LN17@RTC_SetTim|
  00638	00000000	 DCD         |g_baseYear|
  0063c		 |$LN18@RTC_SetTim|
  0063c	00000000	 DCD         |g_hI2C|
  00640		 |$LN19@RTC_SetTim|
  00640	00000000	 DCD         |??_C@_1PM@BDJCONEL@?$AAR?$AAT?$AAC?$AA_?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAD?$AAu?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAh?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?5?$AAl@|
  00644		 |$LN20@RTC_SetTim|
  00644	00000000	 DCD         |__security_cookie|
  00648		 |$M44490|

			 ENDP  ; |RTC_SetTime|

	IMPORT	|__rt_sdiv|

  00030			 AREA	 |.pdata|, PDATA
|$T44506| DCD	|$LN5@BINtoRever|
	DCD	0x40002004
; Function compile flags: /Odtp

  00648			 AREA	 |.text|, CODE, ARM

  00648		 |BINtoReversedBCD| PROC

; 113  : {

  00648		 |$LN5@BINtoRever|
  00648	e1a0c00d	 mov         r12, sp
  0064c	e92d0001	 stmdb       sp!, {r0}
  00650	e92d5000	 stmdb       sp!, {r12, lr}
  00654	e24dd00c	 sub         sp, sp, #0xC
  00658		 |$M44503|

; 114  :     BYTE unit,deci;
; 115  :     deci = binary / 10;

  00658	e5dd3014	 ldrb        r3, [sp, #0x14]
  0065c	e1a01003	 mov         r1, r3
  00660	e3a0000a	 mov         r0, #0xA
  00664	eb000000	 bl          __rt_sdiv
  00668	e20030ff	 and         r3, r0, #0xFF
  0066c	e5cd3000	 strb        r3, [sp]

; 116  :     unit = binary - (deci * 10);    

  00670	e5dd3014	 ldrb        r3, [sp, #0x14]
  00674	e1a01003	 mov         r1, r3
  00678	e5dd3000	 ldrb        r3, [sp]
  0067c	e1a02003	 mov         r2, r3
  00680	e3a0300a	 mov         r3, #0xA
  00684	e0030392	 mul         r3, r2, r3
  00688	e0413003	 sub         r3, r1, r3
  0068c	e20330ff	 and         r3, r3, #0xFF
  00690	e5cd3001	 strb        r3, [sp, #1]

; 117  :     return reverse((deci << 4) | (unit));

  00694	e5dd3000	 ldrb        r3, [sp]
  00698	e1a02203	 mov         r2, r3, lsl #4
  0069c	e5dd3001	 ldrb        r3, [sp, #1]
  006a0	e1823003	 orr         r3, r2, r3
  006a4	e20300ff	 and         r0, r3, #0xFF
  006a8	eb000000	 bl          reverse
  006ac	e5cd0008	 strb        r0, [sp, #8]
  006b0	e5dd3008	 ldrb        r3, [sp, #8]
  006b4	e5cd3004	 strb        r3, [sp, #4]

; 118  : }

  006b8	e5dd0004	 ldrb        r0, [sp, #4]
  006bc	e28dd00c	 add         sp, sp, #0xC
  006c0	e89d6000	 ldmia       sp, {sp, lr}
  006c4	e12fff1e	 bx          lr
  006c8		 |$M44504|

			 ENDP  ; |BINtoReversedBCD|

	EXPORT	|??_C@_1HK@MAICPOOB@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@OLNGCDJJ@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@GOCBJLIN@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@KCDDHNHA@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BBM@MHIGKPGP@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AAR?$AAT?$AAC?$AA?5?$AAn?$AAe?$AAe?$AAd?$AA?5?$AAa?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IM@DAECHCMP@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| [ DATA ] ; `string'
	EXPORT	|OALS35390RTCInit|
	IMPORT	|OALIoCtlHalEnableWake|
	IMPORT	|OEMInterruptEnable|
	IMPORT	|OALIntrStaticTranslate|
	IMPORT	|BSPGetRTCGpioIrq|
	IMPORT	|I2CSetSubAddressMode|
	IMPORT	|I2CSetBaudIndex|
	IMPORT	|I2COpen|

  00008			 AREA	 |.bss|, NOINIT
|g_NeedReinit| % 0x4

  00038			 AREA	 |.pdata|, PDATA
|$T44528| DCD	|$LN29@OALS35390R|
	DCD	0x4000f204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@MAICPOOB@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "R", 0x0, "T", 0x0, "C", 0x0, "("
	DCB	0x0, ")", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, " "
	DCB	0x0, "o", 0x0, "f", 0x0, "f", 0x0, " ", 0x0, "c", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "k", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "r", 0x0, "r", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@OLNGCDJJ@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "R", 0x0, "T", 0x0, "C", 0x0, "("
	DCB	0x0, ")", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "d", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "R", 0x0, "T", 0x0, "C"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "s", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@GOCBJLIN@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "R", 0x0, "T", 0x0, "C", 0x0, "("
	DCB	0x0, ")", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "2"
	DCB	0x0, "4", 0x0, " ", 0x0, "h", 0x0, "o", 0x0, "u", 0x0, "r"
	DCB	0x0, " ", 0x0, "t", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, "m", 0x0, "a", 0x0, "t"
	DCB	0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@KCDDHNHA@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "R", 0x0, "T", 0x0, "C", 0x0, "("
	DCB	0x0, ")", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "e", 0x0, "t"
	DCB	0x0, " ", 0x0, "R", 0x0, "T", 0x0, "C", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BBM@MHIGKPGP@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AAR?$AAT?$AAC?$AA?5?$AAn?$AAe?$AAe?$AAd?$AA?5?$AAa?$AA?5@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "R", 0x0, "T", 0x0, "C", 0x0, "("
	DCB	0x0, ")", 0x0, ":", 0x0, "R", 0x0, "T", 0x0, "C", 0x0, " "
	DCB	0x0, "n", 0x0, "e", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "a"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, " ", 0x0, "b", 0x0, "e", 0x0, "c", 0x0, "a"
	DCB	0x0, "u", 0x0, "s", 0x0, "e", 0x0, " ", 0x0, "e", 0x0, "i"
	DCB	0x0, "t", 0x0, "h", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "R"
	DCB	0x0, "T", 0x0, "C", 0x0, " ", 0x0, "h", 0x0, "a", 0x0, "d"
	DCB	0x0, " ", 0x0, "b", 0x0, "e", 0x0, "e", 0x0, "n", 0x0, " "
	DCB	0x0, "p", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "o", 0x0, "f", 0x0, "f", 0x0, " "
	DCB	0x0, "a", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "e", 0x0, " ", 0x0, "R", 0x0, "T", 0x0, "C", 0x0, " "
	DCB	0x0, "h", 0x0, "a", 0x0, "s", 0x0, " ", 0x0, "d", 0x0, "r"
	DCB	0x0, "o", 0x0, "p", 0x0, "p", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "b", 0x0, "e", 0x0, "l", 0x0, "o", 0x0, "w", 0x0, " "
	DCB	0x0, "t", 0x0, "h", 0x0, "e", 0x0, " ", 0x0, "a", 0x0, "l"
	DCB	0x0, "l", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "l", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, "l", 0x0, " "
	DCB	0x0, "(", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "s", 0x0, " ", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IM@DAECHCMP@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "R", 0x0, "T", 0x0, "C", 0x0, "("
	DCB	0x0, ")", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " "
	DCB	0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "1", 0x0, " "
	DCB	0x0, "a", 0x0, "f", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  006c8			 AREA	 |.text|, CODE, ARM

  006c8		 |OALS35390RTCInit| PROC

; 189  : {    

  006c8		 |$LN29@OALS35390R|
  006c8	e1a0c00d	 mov         r12, sp
  006cc	e92d000f	 stmdb       sp!, {r0 - r3}
  006d0	e92d5000	 stmdb       sp!, {r12, lr}
  006d4	e24dd058	 sub         sp, sp, #0x58
  006d8		 |$M44525|

; 190  :     UCHAR cmd;
; 191  :     UCHAR status;
; 192  : 
; 193  :     g_NeedReinit = FALSE;

  006d8	e59f2398	 ldr         r2, [pc, #0x398]
  006dc	e3a03000	 mov         r3, #0
  006e0	e5823000	 str         r3, [r2]

; 194  : 
; 195  : 	g_baseYear = RTC_DEFAULT_BASE_YEAR;

  006e4	e59f23a0	 ldr         r2, [pc, #0x3A0]
  006e8	e3a03e7d	 mov         r3, #0x7D, 28
  006ec	e1c230b0	 strh        r3, [r2]

; 196  : 
; 197  :     // Open I2C instance
; 198  :     g_hI2C = I2COpen(i2cdev);

  006f0	e59d0060	 ldr         r0, [sp, #0x60]
  006f4	eb000000	 bl          I2COpen
  006f8	e58d001c	 str         r0, [sp, #0x1C]
  006fc	e59d201c	 ldr         r2, [sp, #0x1C]
  00700	e59f337c	 ldr         r3, [pc, #0x37C]
  00704	e5832000	 str         r2, [r3]

; 199  :     if (g_hI2C == NULL)

  00708	e59f3374	 ldr         r3, [pc, #0x374]
  0070c	e5933000	 ldr         r3, [r3]
  00710	e3530000	 cmp         r3, #0
  00714	1a000002	 bne         |$LN10@OALS35390R|

; 200  :     {
; 201  :         return FALSE;

  00718	e3a03000	 mov         r3, #0
  0071c	e58d3010	 str         r3, [sp, #0x10]
  00720	ea0000cb	 b           |$LN11@OALS35390R|
  00724		 |$LN10@OALS35390R|

; 202  :     }
; 203  :     g_devAddr = slaveAddress;

  00724	e1dd26b8	 ldrh        r2, [sp, #0x68]
  00728	e59f3358	 ldr         r3, [pc, #0x358]
  0072c	e1c320b0	 strh        r2, [r3]

; 204  :     // Set baud rate
; 205  :     I2CSetBaudIndex(g_hI2C, i2cBaudIndex);	

  00730	e59d1064	 ldr         r1, [sp, #0x64]
  00734	e59f3348	 ldr         r3, [pc, #0x348]
  00738	e5930000	 ldr         r0, [r3]
  0073c	eb000000	 bl          I2CSetBaudIndex

; 206  :     // Set sub address mode
; 207  : 	I2CSetSubAddressMode(g_hI2C, I2C_SUBADDRESS_MODE_0);

  00740	e3a01000	 mov         r1, #0
  00744	e59f3338	 ldr         r3, [pc, #0x338]
  00748	e5930000	 ldr         r0, [r3]
  0074c	eb000000	 bl          I2CSetSubAddressMode

; 208  : 
; 209  :     // Get the BLD and POC flags that will tell if the circuit muste be reinitialized    
; 210  : 	// Read status register 1	
; 211  : 	if (RTCI2CRead(RTC_CMD_STATUS_1, &status, 1) == FALSE)

  00750	e3a02001	 mov         r2, #1
  00754	e28d1009	 add         r1, sp, #9
  00758	e3a00000	 mov         r0, #0
  0075c	eb000000	 bl          RTCI2CRead
  00760	e58d0020	 str         r0, [sp, #0x20]
  00764	e59d3020	 ldr         r3, [sp, #0x20]
  00768	e3530000	 cmp         r3, #0
  0076c	1a00000d	 bne         |$LN9@OALS35390R|

; 212  :     {
; 213  :         OALMSG(OAL_ERROR, (L"OALIoCtlHalInitRTC(): Failed to read status register 1 after reset.\r\n"));

  00770	e59f32f0	 ldr         r3, [pc, #0x2F0]
  00774	e5933440	 ldr         r3, [r3, #0x440]
  00778	e3130001	 tst         r3, #1
  0077c	0a000004	 beq         |$LN13@OALS35390R|
  00780	e59f02f8	 ldr         r0, [pc, #0x2F8]
  00784	eb000000	 bl          NKDbgPrintfW
  00788	e3a03001	 mov         r3, #1
  0078c	e58d3024	 str         r3, [sp, #0x24]
  00790	ea000001	 b           |$LN14@OALS35390R|
  00794		 |$LN13@OALS35390R|
  00794	e3a03000	 mov         r3, #0
  00798	e58d3024	 str         r3, [sp, #0x24]
  0079c		 |$LN14@OALS35390R|

; 214  :         return FALSE;

  0079c	e3a03000	 mov         r3, #0
  007a0	e58d3010	 str         r3, [sp, #0x10]
  007a4	ea0000aa	 b           |$LN11@OALS35390R|
  007a8		 |$LN9@OALS35390R|

; 215  :     }
; 216  :     if (status & (RTC_POC | RTC_BLD))

  007a8	e5dd3009	 ldrb        r3, [sp, #9]
  007ac	e3130003	 tst         r3, #3
  007b0	0a000012	 beq         |$LN8@OALS35390R|

; 217  :     {
; 218  :         g_NeedReinit = TRUE;

  007b4	e59f22bc	 ldr         r2, [pc, #0x2BC]
  007b8	e3a03001	 mov         r3, #1
  007bc	e5823000	 str         r3, [r2]

; 219  :         OALMSG(OAL_INFO | OAL_WARN, (L"OALIoCtlHalInitRTC():RTC need a reinit because either RTC had been powered off aor the RTC has dropped below the allowed level (status %x).\r\n",status));

  007c0	e59f32a0	 ldr         r3, [pc, #0x2A0]
  007c4	e5933440	 ldr         r3, [r3, #0x440]
  007c8	e2032008	 and         r2, r3, #8
  007cc	e59f3294	 ldr         r3, [pc, #0x294]
  007d0	e5933440	 ldr         r3, [r3, #0x440]
  007d4	e2033002	 and         r3, r3, #2
  007d8	e1923003	 orrs        r3, r2, r3
  007dc	0a000005	 beq         |$LN15@OALS35390R|
  007e0	e5dd1009	 ldrb        r1, [sp, #9]
  007e4	e59f0290	 ldr         r0, [pc, #0x290]
  007e8	eb000000	 bl          NKDbgPrintfW
  007ec	e3a03001	 mov         r3, #1
  007f0	e58d3028	 str         r3, [sp, #0x28]
  007f4	ea000001	 b           |$LN16@OALS35390R|
  007f8		 |$LN15@OALS35390R|
  007f8	e3a03000	 mov         r3, #0
  007fc	e58d3028	 str         r3, [sp, #0x28]
  00800		 |$LN16@OALS35390R|
  00800		 |$LN8@OALS35390R|

; 220  :     }
; 221  : 
; 222  :     if (g_NeedReinit)

  00800	e59f3270	 ldr         r3, [pc, #0x270]
  00804	e5933000	 ldr         r3, [r3]
  00808	e3530000	 cmp         r3, #0
  0080c	0a000077	 beq         |$LN7@OALS35390R|

; 223  :     {
; 224  :         // Reset the RTC
; 225  :         cmd = RTC_RESET;

  00810	e3a03080	 mov         r3, #0x80
  00814	e5cd3008	 strb        r3, [sp, #8]

; 226  : 	    if (RTCI2CWrite(RTC_CMD_STATUS_1, &cmd, 1) == FALSE)

  00818	e3a02001	 mov         r2, #1
  0081c	e28d1008	 add         r1, sp, #8
  00820	e3a00000	 mov         r0, #0
  00824	eb000000	 bl          RTCI2CWrite
  00828	e58d002c	 str         r0, [sp, #0x2C]
  0082c	e59d302c	 ldr         r3, [sp, #0x2C]
  00830	e3530000	 cmp         r3, #0
  00834	1a00000d	 bne         |$LN6@OALS35390R|

; 227  : 	    {
; 228  : 		    OALMSG(OAL_ERROR, (L"OALIoCtlHalInitRTC(): Failed to reset RTC.\r\n"));

  00838	e59f3228	 ldr         r3, [pc, #0x228]
  0083c	e5933440	 ldr         r3, [r3, #0x440]
  00840	e3130001	 tst         r3, #1
  00844	0a000004	 beq         |$LN17@OALS35390R|
  00848	e59f0224	 ldr         r0, [pc, #0x224]
  0084c	eb000000	 bl          NKDbgPrintfW
  00850	e3a03001	 mov         r3, #1
  00854	e58d3030	 str         r3, [sp, #0x30]
  00858	ea000001	 b           |$LN18@OALS35390R|
  0085c		 |$LN17@OALS35390R|
  0085c	e3a03000	 mov         r3, #0
  00860	e58d3030	 str         r3, [sp, #0x30]
  00864		 |$LN18@OALS35390R|

; 229  : 		    return FALSE;

  00864	e3a03000	 mov         r3, #0
  00868	e58d3010	 str         r3, [sp, #0x10]
  0086c	ea000078	 b           |$LN11@OALS35390R|
  00870		 |$LN6@OALS35390R|

; 230  : 	    }
; 231  : 
; 232  :         // Set 24 hour time format
; 233  :         if (RTCI2CRead(RTC_CMD_STATUS_1,&status,1) == FALSE)

  00870	e3a02001	 mov         r2, #1
  00874	e28d1009	 add         r1, sp, #9
  00878	e3a00000	 mov         r0, #0
  0087c	eb000000	 bl          RTCI2CRead
  00880	e58d0034	 str         r0, [sp, #0x34]
  00884	e59d3034	 ldr         r3, [sp, #0x34]
  00888	e3530000	 cmp         r3, #0
  0088c	1a00000d	 bne         |$LN5@OALS35390R|

; 234  :         {
; 235  :             OALMSG(OAL_ERROR, (L"OALIoCtlHalInitRTC(): Failed to set 24 hour time format.\r\n"));

  00890	e59f31d0	 ldr         r3, [pc, #0x1D0]
  00894	e5933440	 ldr         r3, [r3, #0x440]
  00898	e3130001	 tst         r3, #1
  0089c	0a000004	 beq         |$LN19@OALS35390R|
  008a0	e59f01c8	 ldr         r0, [pc, #0x1C8]
  008a4	eb000000	 bl          NKDbgPrintfW
  008a8	e3a03001	 mov         r3, #1
  008ac	e58d3038	 str         r3, [sp, #0x38]
  008b0	ea000001	 b           |$LN20@OALS35390R|
  008b4		 |$LN19@OALS35390R|
  008b4	e3a03000	 mov         r3, #0
  008b8	e58d3038	 str         r3, [sp, #0x38]
  008bc		 |$LN20@OALS35390R|

; 236  :             return FALSE;

  008bc	e3a03000	 mov         r3, #0
  008c0	e58d3010	 str         r3, [sp, #0x10]
  008c4	ea000062	 b           |$LN11@OALS35390R|
  008c8		 |$LN5@OALS35390R|

; 237  :         }
; 238  :         status |= RTC_24_HOUR_FORMAT;

  008c8	e5dd3009	 ldrb        r3, [sp, #9]
  008cc	e3833040	 orr         r3, r3, #0x40
  008d0	e20330ff	 and         r3, r3, #0xFF
  008d4	e5cd3009	 strb        r3, [sp, #9]

; 239  :         if (RTCI2CWrite(RTC_CMD_STATUS_1,&status,1) == FALSE)

  008d8	e3a02001	 mov         r2, #1
  008dc	e28d1009	 add         r1, sp, #9
  008e0	e3a00000	 mov         r0, #0
  008e4	eb000000	 bl          RTCI2CWrite
  008e8	e58d003c	 str         r0, [sp, #0x3C]
  008ec	e59d303c	 ldr         r3, [sp, #0x3C]
  008f0	e3530000	 cmp         r3, #0
  008f4	1a00000d	 bne         |$LN4@OALS35390R|

; 240  :         {
; 241  :             OALMSG(OAL_ERROR, (L"OALIoCtlHalInitRTC(): Failed to set 24 hour time format.\r\n"));

  008f8	e59f3168	 ldr         r3, [pc, #0x168]
  008fc	e5933440	 ldr         r3, [r3, #0x440]
  00900	e3130001	 tst         r3, #1
  00904	0a000004	 beq         |$LN21@OALS35390R|
  00908	e59f0160	 ldr         r0, [pc, #0x160]
  0090c	eb000000	 bl          NKDbgPrintfW
  00910	e3a03001	 mov         r3, #1
  00914	e58d3040	 str         r3, [sp, #0x40]
  00918	ea000001	 b           |$LN22@OALS35390R|
  0091c		 |$LN21@OALS35390R|
  0091c	e3a03000	 mov         r3, #0
  00920	e58d3040	 str         r3, [sp, #0x40]
  00924		 |$LN22@OALS35390R|

; 242  :             return FALSE;

  00924	e3a03000	 mov         r3, #0
  00928	e58d3010	 str         r3, [sp, #0x10]
  0092c	ea000048	 b           |$LN11@OALS35390R|
  00930		 |$LN4@OALS35390R|

; 243  :         }
; 244  :         // Disable RTC interrupts
; 245  :         status = RTC_NO_INTERRUPTS;

  00930	e3a03000	 mov         r3, #0
  00934	e5cd3009	 strb        r3, [sp, #9]

; 246  :         if (RTCI2CWrite(RTC_CMD_STATUS_2,&status,1) == FALSE)

  00938	e3a02001	 mov         r2, #1
  0093c	e28d1009	 add         r1, sp, #9
  00940	e3a00001	 mov         r0, #1
  00944	eb000000	 bl          RTCI2CWrite
  00948	e58d0044	 str         r0, [sp, #0x44]
  0094c	e59d3044	 ldr         r3, [sp, #0x44]
  00950	e3530000	 cmp         r3, #0
  00954	1a00000d	 bne         |$LN3@OALS35390R|

; 247  :         {
; 248  :             OALMSG(OAL_ERROR, (L"OALIoCtlHalInitRTC(): Failed to disable RTC interrupts.\r\n"));

  00958	e59f3108	 ldr         r3, [pc, #0x108]
  0095c	e5933440	 ldr         r3, [r3, #0x440]
  00960	e3130001	 tst         r3, #1
  00964	0a000004	 beq         |$LN23@OALS35390R|
  00968	e59f00fc	 ldr         r0, [pc, #0xFC]
  0096c	eb000000	 bl          NKDbgPrintfW
  00970	e3a03001	 mov         r3, #1
  00974	e58d3048	 str         r3, [sp, #0x48]
  00978	ea000001	 b           |$LN24@OALS35390R|
  0097c		 |$LN23@OALS35390R|
  0097c	e3a03000	 mov         r3, #0
  00980	e58d3048	 str         r3, [sp, #0x48]
  00984		 |$LN24@OALS35390R|

; 249  :             return FALSE;

  00984	e3a03000	 mov         r3, #0
  00988	e58d3010	 str         r3, [sp, #0x10]
  0098c	ea000030	 b           |$LN11@OALS35390R|
  00990		 |$LN3@OALS35390R|

; 250  :         }
; 251  :         // Turn off clock correction        
; 252  :         cmd = RTC_NO_CLOCK_CORRECTION;

  00990	e3a03000	 mov         r3, #0
  00994	e5cd3008	 strb        r3, [sp, #8]

; 253  :         if (RTCI2CWrite(RTC_CMD_CLOCK_CORRECTION,&cmd,1) == FALSE)

  00998	e3a02001	 mov         r2, #1
  0099c	e28d1008	 add         r1, sp, #8
  009a0	e3a00006	 mov         r0, #6
  009a4	eb000000	 bl          RTCI2CWrite
  009a8	e58d004c	 str         r0, [sp, #0x4C]
  009ac	e59d304c	 ldr         r3, [sp, #0x4C]
  009b0	e3530000	 cmp         r3, #0
  009b4	1a00000d	 bne         |$LN2@OALS35390R|

; 254  :         {
; 255  :             OALMSG(OAL_ERROR, (L"OALIoCtlHalInitRTC(): Failed to turn off clock correction.\r\n"));

  009b8	e59f30a8	 ldr         r3, [pc, #0xA8]
  009bc	e5933440	 ldr         r3, [r3, #0x440]
  009c0	e3130001	 tst         r3, #1
  009c4	0a000004	 beq         |$LN25@OALS35390R|
  009c8	e59f0094	 ldr         r0, [pc, #0x94]
  009cc	eb000000	 bl          NKDbgPrintfW
  009d0	e3a03001	 mov         r3, #1
  009d4	e58d3050	 str         r3, [sp, #0x50]
  009d8	ea000001	 b           |$LN26@OALS35390R|
  009dc		 |$LN25@OALS35390R|
  009dc	e3a03000	 mov         r3, #0
  009e0	e58d3050	 str         r3, [sp, #0x50]
  009e4		 |$LN26@OALS35390R|

; 256  :             return FALSE;

  009e4	e3a03000	 mov         r3, #0
  009e8	e58d3010	 str         r3, [sp, #0x10]
  009ec	ea000018	 b           |$LN11@OALS35390R|
  009f0		 |$LN2@OALS35390R|
  009f0		 |$LN7@OALS35390R|

; 257  :         }
; 258  :     }
; 259  :     OALIntrStaticTranslate(SYSINTR_RTC_ALARM, BSPGetRTCGpioIrq());

  009f0	eb000000	 bl          BSPGetRTCGpioIrq
  009f4	e58d0054	 str         r0, [sp, #0x54]
  009f8	e59d1054	 ldr         r1, [sp, #0x54]
  009fc	e3a0000d	 mov         r0, #0xD
  00a00	eb000000	 bl          OALIntrStaticTranslate

; 260  :     OEMInterruptEnable(SYSINTR_RTC_ALARM,NULL,0);

  00a04	e3a02000	 mov         r2, #0
  00a08	e3a01000	 mov         r1, #0
  00a0c	e3a0000d	 mov         r0, #0xD
  00a10	eb000000	 bl          OEMInterruptEnable

; 261  :     
; 262  :     if (fEnableAsWakeUpSource)

  00a14	e59d306c	 ldr         r3, [sp, #0x6C]
  00a18	e3530000	 cmp         r3, #0
  00a1c	0a00000a	 beq         |$LN1@OALS35390R|

; 263  :     {
; 264  :         DWORD dwSysintr = SYSINTR_RTC_ALARM;

  00a20	e3a0300d	 mov         r3, #0xD
  00a24	e58d300c	 str         r3, [sp, #0xC]

; 265  :         OALIoCtlHalEnableWake(0,&dwSysintr,sizeof(dwSysintr),NULL,0,NULL);

  00a28	e3a03000	 mov         r3, #0
  00a2c	e58d3004	 str         r3, [sp, #4]
  00a30	e3a03000	 mov         r3, #0
  00a34	e58d3000	 str         r3, [sp]
  00a38	e3a03000	 mov         r3, #0
  00a3c	e3a02004	 mov         r2, #4
  00a40	e28d100c	 add         r1, sp, #0xC
  00a44	e3a00000	 mov         r0, #0
  00a48	eb000000	 bl          OALIoCtlHalEnableWake
  00a4c		 |$LN1@OALS35390R|

; 266  :     }
; 267  : 
; 268  :     return TRUE;

  00a4c	e3a03001	 mov         r3, #1
  00a50	e58d3010	 str         r3, [sp, #0x10]
  00a54		 |$LN11@OALS35390R|

; 269  : }

  00a54	e59d0010	 ldr         r0, [sp, #0x10]
  00a58	e28dd058	 add         sp, sp, #0x58
  00a5c	e89d6000	 ldmia       sp, {sp, lr}
  00a60	e12fff1e	 bx          lr
  00a64		 |$LN30@OALS35390R|
  00a64		 |$LN31@OALS35390R|
  00a64	00000000	 DCD         |??_C@_1HK@MAICPOOB@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@|
  00a68		 |$LN32@OALS35390R|
  00a68	00000000	 DCD         |dpCurSettings|
  00a6c		 |$LN33@OALS35390R|
  00a6c	00000000	 DCD         |??_C@_1HE@OLNGCDJJ@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@|
  00a70		 |$LN34@OALS35390R|
  00a70	00000000	 DCD         |??_C@_1HG@GOCBJLIN@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@|
  00a74		 |$LN35@OALS35390R|
  00a74	00000000	 DCD         |??_C@_1FK@KCDDHNHA@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@|
  00a78		 |$LN36@OALS35390R|
  00a78	00000000	 DCD         |g_NeedReinit|
  00a7c		 |$LN37@OALS35390R|
  00a7c	00000000	 DCD         |??_C@_1BBM@MHIGKPGP@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AAR?$AAT?$AAC?$AA?5?$AAn?$AAe?$AAe?$AAd?$AA?5?$AAa?$AA?5@|
  00a80		 |$LN38@OALS35390R|
  00a80	00000000	 DCD         |??_C@_1IM@DAECHCMP@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@|
  00a84		 |$LN39@OALS35390R|
  00a84	00000000	 DCD         |g_hI2C|
  00a88		 |$LN40@OALS35390R|
  00a88	00000000	 DCD         |g_devAddr|
  00a8c		 |$LN41@OALS35390R|
  00a8c	00000000	 DCD         |g_baseYear|
  00a90		 |$M44526|

			 ENDP  ; |OALS35390RTCInit|

	EXPORT	|??_C@_1CG@EBGNPL@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg?$AA?5?$AAR?$AAT?$AAC?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|OALIoCtlHalInitRTC|

  00040			 AREA	 |.pdata|, PDATA
|$T44546| DCD	|$LN6@OALIoCtlHa|
	DCD	0x40001c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@EBGNPL@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg?$AA?5?$AAR?$AAT?$AAC?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l"
	DCB	0x0, "i", 0x0, "z", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "R", 0x0, "T", 0x0, "C", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  00a90			 AREA	 |.text|, CODE, ARM

  00a90		 |OALIoCtlHalInitRTC| PROC

; 287  : {

  00a90		 |$LN6@OALIoCtlHa|
  00a90	e1a0c00d	 mov         r12, sp
  00a94	e92d000f	 stmdb       sp!, {r0 - r3}
  00a98	e92d5000	 stmdb       sp!, {r12, lr}
  00a9c	e24dd008	 sub         sp, sp, #8
  00aa0		 |$M44543|

; 288  : 	SYSTEMTIME *pGivenTime = (LPSYSTEMTIME)pInBuffer;

  00aa0	e59d3014	 ldr         r3, [sp, #0x14]
  00aa4	e58d3000	 str         r3, [sp]

; 289  : 
; 290  : 	UNREFERENCED_PARAMETER(code);
; 291  : 	UNREFERENCED_PARAMETER(inSize);
; 292  : 	UNREFERENCED_PARAMETER(pOutBuffer);
; 293  : 	UNREFERENCED_PARAMETER(outSize);
; 294  : 	UNREFERENCED_PARAMETER(pOutSize);
; 295  : 
; 296  : 	RETAILMSG(1, (L"Initializing RTC\r\n"));

  00aa8	e59f004c	 ldr         r0, [pc, #0x4C]
  00aac	eb000000	 bl          NKDbgPrintfW

; 297  : 
; 298  : 	// Initialize the time if needed
; 299  : 	if (g_NeedReinit && pGivenTime != NULL)

  00ab0	e59f3040	 ldr         r3, [pc, #0x40]
  00ab4	e5933000	 ldr         r3, [r3]
  00ab8	e3530000	 cmp         r3, #0
  00abc	0a000007	 beq         |$LN1@OALIoCtlHa|
  00ac0	e59d3000	 ldr         r3, [sp]
  00ac4	e3530000	 cmp         r3, #0
  00ac8	0a000004	 beq         |$LN1@OALIoCtlHa|

; 300  : 	{
; 301  :         g_NeedReinit = FALSE;

  00acc	e59f2024	 ldr         r2, [pc, #0x24]
  00ad0	e3a03000	 mov         r3, #0
  00ad4	e5823000	 str         r3, [r2]

; 302  : 		RTC_SetTime(pGivenTime);

  00ad8	e59d0000	 ldr         r0, [sp]
  00adc	eb000000	 bl          RTC_SetTime
  00ae0		 |$LN1@OALIoCtlHa|

; 303  : 	}
; 304  : 
; 305  : 	return TRUE;

  00ae0	e3a03001	 mov         r3, #1
  00ae4	e58d3004	 str         r3, [sp, #4]

; 306  : }

  00ae8	e59d0004	 ldr         r0, [sp, #4]
  00aec	e28dd008	 add         sp, sp, #8
  00af0	e89d6000	 ldmia       sp, {sp, lr}
  00af4	e12fff1e	 bx          lr
  00af8		 |$LN7@OALIoCtlHa|
  00af8		 |$LN8@OALIoCtlHa|
  00af8	00000000	 DCD         |g_NeedReinit|
  00afc		 |$LN9@OALIoCtlHa|
  00afc	00000000	 DCD         |??_C@_1CG@EBGNPL@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg?$AA?5?$AAR?$AAT?$AAC?$AA?$AN?$AA?6?$AA?$AA@|
  00b00		 |$M44544|

			 ENDP  ; |OALIoCtlHalInitRTC|

	EXPORT	|OEMGetRealTime|

  00048			 AREA	 |.pdata|, PDATA
|$T44555| DCD	|$LN6@OEMGetReal|
	DCD	0x40001504
; Function compile flags: /Odtp

  00b00			 AREA	 |.text|, CODE, ARM

  00b00		 |OEMGetRealTime| PROC

; 319  : {

  00b00		 |$LN6@OEMGetReal|
  00b00	e1a0c00d	 mov         r12, sp
  00b04	e92d0001	 stmdb       sp!, {r0}
  00b08	e92d5000	 stmdb       sp!, {r12, lr}
  00b0c	e24dd008	 sub         sp, sp, #8
  00b10		 |$M44552|

; 320  :     if (g_NeedReinit)

  00b10	e59f3038	 ldr         r3, [pc, #0x38]
  00b14	e5933000	 ldr         r3, [r3]
  00b18	e3530000	 cmp         r3, #0
  00b1c	0a000002	 beq         |$LN1@OEMGetReal|

; 321  :     {
; 322  :         return FALSE;

  00b20	e3a03000	 mov         r3, #0
  00b24	e58d3000	 str         r3, [sp]
  00b28	ea000004	 b           |$LN2@OEMGetReal|
  00b2c		 |$LN1@OEMGetReal|

; 323  :     }
; 324  : 	return RTC_GetTime(pSystemTime);

  00b2c	e59d0010	 ldr         r0, [sp, #0x10]
  00b30	eb000000	 bl          RTC_GetTime
  00b34	e58d0004	 str         r0, [sp, #4]
  00b38	e59d3004	 ldr         r3, [sp, #4]
  00b3c	e58d3000	 str         r3, [sp]
  00b40		 |$LN2@OEMGetReal|

; 325  : }

  00b40	e59d0000	 ldr         r0, [sp]
  00b44	e28dd008	 add         sp, sp, #8
  00b48	e89d6000	 ldmia       sp, {sp, lr}
  00b4c	e12fff1e	 bx          lr
  00b50		 |$LN7@OEMGetReal|
  00b50		 |$LN8@OEMGetReal|
  00b50	00000000	 DCD         |g_NeedReinit|
  00b54		 |$M44553|

			 ENDP  ; |OEMGetRealTime|

	EXPORT	|OEMSetRealTime|

  00050			 AREA	 |.pdata|, PDATA
|$T44563| DCD	|$LN6@OEMSetReal|
	DCD	0x40001a04
; Function compile flags: /Odtp

  00b54			 AREA	 |.text|, CODE, ARM

  00b54		 |OEMSetRealTime| PROC

; 339  : {

  00b54		 |$LN6@OEMSetReal|
  00b54	e1a0c00d	 mov         r12, sp
  00b58	e92d0001	 stmdb       sp!, {r0}
  00b5c	e92d5000	 stmdb       sp!, {r12, lr}
  00b60	e24dd00c	 sub         sp, sp, #0xC
  00b64		 |$M44560|

; 340  :     BOOL fResult = RTC_SetTime(pSystemTime);

  00b64	e59d0014	 ldr         r0, [sp, #0x14]
  00b68	eb000000	 bl          RTC_SetTime
  00b6c	e58d0008	 str         r0, [sp, #8]
  00b70	e59d3008	 ldr         r3, [sp, #8]
  00b74	e58d3000	 str         r3, [sp]

; 341  : 
; 342  :     if (fResult && g_NeedReinit)

  00b78	e59d3000	 ldr         r3, [sp]
  00b7c	e3530000	 cmp         r3, #0
  00b80	0a000006	 beq         |$LN1@OEMSetReal|
  00b84	e59f302c	 ldr         r3, [pc, #0x2C]
  00b88	e5933000	 ldr         r3, [r3]
  00b8c	e3530000	 cmp         r3, #0
  00b90	0a000002	 beq         |$LN1@OEMSetReal|

; 343  :     {
; 344  :         g_NeedReinit = FALSE;

  00b94	e59f201c	 ldr         r2, [pc, #0x1C]
  00b98	e3a03000	 mov         r3, #0
  00b9c	e5823000	 str         r3, [r2]
  00ba0		 |$LN1@OEMSetReal|

; 345  :     }
; 346  : 	return fResult;

  00ba0	e59d3000	 ldr         r3, [sp]
  00ba4	e58d3004	 str         r3, [sp, #4]

; 347  : }

  00ba8	e59d0004	 ldr         r0, [sp, #4]
  00bac	e28dd00c	 add         sp, sp, #0xC
  00bb0	e89d6000	 ldmia       sp, {sp, lr}
  00bb4	e12fff1e	 bx          lr
  00bb8		 |$LN7@OEMSetReal|
  00bb8		 |$LN8@OEMSetReal|
  00bb8	00000000	 DCD         |g_NeedReinit|
  00bbc		 |$M44561|

			 ENDP  ; |OEMSetRealTime|

	EXPORT	|??_C@_1HM@BAOOGNJE@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| [ DATA ] ; `string'
	EXPORT	|OEMSetAlarmTime|
	IMPORT	|OEMInterruptDone|

  00058			 AREA	 |.pdata|, PDATA
|$T44581| DCD	|$LN21@OEMSetAlar|
	DCD	0x4000a604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@BAOOGNJE@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "R", 0x0, "T", 0x0, "C", 0x0, "("
	DCB	0x0, ")", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "e", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, " ", 0x0, "R", 0x0, "T", 0x0, "C", 0x0, " "
	DCB	0x0, "a", 0x0, "l", 0x0, "a", 0x0, "r", 0x0, "m", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00bbc			 AREA	 |.text|, CODE, ARM

  00bbc		 |OEMSetAlarmTime| PROC

; 359  : {

  00bbc		 |$LN21@OEMSetAlar|
  00bbc	e1a0c00d	 mov         r12, sp
  00bc0	e92d0001	 stmdb       sp!, {r0}
  00bc4	e92d5000	 stmdb       sp!, {r12, lr}
  00bc8	e24dd034	 sub         sp, sp, #0x34
  00bcc		 |$M44578|

; 360  : 	UCHAR cmdBuffer[3];
; 361  : 	UCHAR status;
; 362  : 
; 363  :     if (g_NeedReinit)

  00bcc	e59f327c	 ldr         r3, [pc, #0x27C]
  00bd0	e5933000	 ldr         r3, [r3]
  00bd4	e3530000	 cmp         r3, #0
  00bd8	0a000002	 beq         |$LN6@OEMSetAlar|

; 364  :     {
; 365  :         return FALSE;

  00bdc	e3a03000	 mov         r3, #0
  00be0	e58d3004	 str         r3, [sp, #4]
  00be4	ea000090	 b           |$LN7@OEMSetAlar|
  00be8		 |$LN6@OEMSetAlar|

; 366  :     }
; 367  : 
; 368  : 	if (g_hI2C == NULL)

  00be8	e59f325c	 ldr         r3, [pc, #0x25C]
  00bec	e5933000	 ldr         r3, [r3]
  00bf0	e3530000	 cmp         r3, #0
  00bf4	1a000002	 bne         |$LN5@OEMSetAlar|

; 369  : 	{
; 370  : 		return FALSE;

  00bf8	e3a03000	 mov         r3, #0
  00bfc	e58d3004	 str         r3, [sp, #4]
  00c00	ea000089	 b           |$LN7@OEMSetAlar|
  00c04		 |$LN5@OEMSetAlar|

; 371  : 	}
; 372  : 
; 373  : 	// Deactivate RTC alarm interrupt first
; 374  :     status = RTC_NO_INTERRUPTS;

  00c04	e3a03000	 mov         r3, #0
  00c08	e5cd3003	 strb        r3, [sp, #3]

; 375  :     if (RTCI2CWrite(RTC_CMD_STATUS_2,&status,1) == FALSE)

  00c0c	e3a02001	 mov         r2, #1
  00c10	e28d1003	 add         r1, sp, #3
  00c14	e3a00001	 mov         r0, #1
  00c18	eb000000	 bl          RTCI2CWrite
  00c1c	e58d0008	 str         r0, [sp, #8]
  00c20	e59d3008	 ldr         r3, [sp, #8]
  00c24	e3530000	 cmp         r3, #0
  00c28	1a00000d	 bne         |$LN4@OEMSetAlar|

; 376  :     {
; 377  :         OALMSG(OAL_ERROR, (L"OALIoCtlHalInitRTC(): Failed to enable RTC alarm interrupt.\r\n"));

  00c2c	e59f320c	 ldr         r3, [pc, #0x20C]
  00c30	e5933440	 ldr         r3, [r3, #0x440]
  00c34	e3130001	 tst         r3, #1
  00c38	0a000004	 beq         |$LN9@OEMSetAlar|
  00c3c	e59f0200	 ldr         r0, [pc, #0x200]
  00c40	eb000000	 bl          NKDbgPrintfW
  00c44	e3a03001	 mov         r3, #1
  00c48	e58d300c	 str         r3, [sp, #0xC]
  00c4c	ea000001	 b           |$LN10@OEMSetAlar|
  00c50		 |$LN9@OEMSetAlar|
  00c50	e3a03000	 mov         r3, #0
  00c54	e58d300c	 str         r3, [sp, #0xC]
  00c58		 |$LN10@OEMSetAlar|

; 378  :         return FALSE;

  00c58	e3a03000	 mov         r3, #0
  00c5c	e58d3004	 str         r3, [sp, #4]
  00c60	ea000071	 b           |$LN7@OEMSetAlar|
  00c64		 |$LN4@OEMSetAlar|

; 379  :     }
; 380  :     if (RTCI2CRead(RTC_CMD_STATUS_1,&status,1) == FALSE)

  00c64	e3a02001	 mov         r2, #1
  00c68	e28d1003	 add         r1, sp, #3
  00c6c	e3a00000	 mov         r0, #0
  00c70	eb000000	 bl          RTCI2CRead
  00c74	e58d0010	 str         r0, [sp, #0x10]
  00c78	e59d3010	 ldr         r3, [sp, #0x10]
  00c7c	e3530000	 cmp         r3, #0
  00c80	1a00000d	 bne         |$LN3@OEMSetAlar|

; 381  :     {
; 382  :         OALMSG(OAL_ERROR, (L"OALIoCtlHalInitRTC(): Failed to set 24 hour time format.\r\n"));

  00c84	e59f31b4	 ldr         r3, [pc, #0x1B4]
  00c88	e5933440	 ldr         r3, [r3, #0x440]
  00c8c	e3130001	 tst         r3, #1
  00c90	0a000004	 beq         |$LN11@OEMSetAlar|
  00c94	e59f01ac	 ldr         r0, [pc, #0x1AC]
  00c98	eb000000	 bl          NKDbgPrintfW
  00c9c	e3a03001	 mov         r3, #1
  00ca0	e58d3014	 str         r3, [sp, #0x14]
  00ca4	ea000001	 b           |$LN12@OEMSetAlar|
  00ca8		 |$LN11@OEMSetAlar|
  00ca8	e3a03000	 mov         r3, #0
  00cac	e58d3014	 str         r3, [sp, #0x14]
  00cb0		 |$LN12@OEMSetAlar|

; 383  :         return FALSE;

  00cb0	e3a03000	 mov         r3, #0
  00cb4	e58d3004	 str         r3, [sp, #4]
  00cb8	ea00005b	 b           |$LN7@OEMSetAlar|
  00cbc		 |$LN3@OEMSetAlar|

; 384  :     }
; 385  : 
; 386  : 	// Activate RTC alarm interrupt first (for access to the INT1 alarm registers)
; 387  :     status = RTC_ALARM_INTERRUPT;

  00cbc	e3a03020	 mov         r3, #0x20
  00cc0	e5cd3003	 strb        r3, [sp, #3]

; 388  :     if (RTCI2CWrite(RTC_CMD_STATUS_2,&status,1) == FALSE)

  00cc4	e3a02001	 mov         r2, #1
  00cc8	e28d1003	 add         r1, sp, #3
  00ccc	e3a00001	 mov         r0, #1
  00cd0	eb000000	 bl          RTCI2CWrite
  00cd4	e58d0018	 str         r0, [sp, #0x18]
  00cd8	e59d3018	 ldr         r3, [sp, #0x18]
  00cdc	e3530000	 cmp         r3, #0
  00ce0	1a00000d	 bne         |$LN2@OEMSetAlar|

; 389  :     {
; 390  :         OALMSG(OAL_ERROR, (L"OALIoCtlHalInitRTC(): Failed to enable RTC alarm interrupt.\r\n"));

  00ce4	e59f3154	 ldr         r3, [pc, #0x154]
  00ce8	e5933440	 ldr         r3, [r3, #0x440]
  00cec	e3130001	 tst         r3, #1
  00cf0	0a000004	 beq         |$LN13@OEMSetAlar|
  00cf4	e59f0148	 ldr         r0, [pc, #0x148]
  00cf8	eb000000	 bl          NKDbgPrintfW
  00cfc	e3a03001	 mov         r3, #1
  00d00	e58d301c	 str         r3, [sp, #0x1C]
  00d04	ea000001	 b           |$LN14@OEMSetAlar|
  00d08		 |$LN13@OEMSetAlar|
  00d08	e3a03000	 mov         r3, #0
  00d0c	e58d301c	 str         r3, [sp, #0x1C]
  00d10		 |$LN14@OEMSetAlar|

; 391  :         return FALSE;

  00d10	e3a03000	 mov         r3, #0
  00d14	e58d3004	 str         r3, [sp, #4]
  00d18	ea000043	 b           |$LN7@OEMSetAlar|
  00d1c		 |$LN2@OEMSetAlar|

; 392  :     }
; 393  : 
; 394  : 	// Set alarm
; 395  : 	cmdBuffer[RTC_INT_WEEK] = RTC_ALARM_ENABLE | BINtoReversedBCD((UINT8)pSystemTime->wDayOfWeek);

  00d1c	e59d303c	 ldr         r3, [sp, #0x3C]
  00d20	e2833004	 add         r3, r3, #4
  00d24	e1d330b0	 ldrh        r3, [r3]
  00d28	e20300ff	 and         r0, r3, #0xFF
  00d2c	eb000000	 bl          BINtoReversedBCD
  00d30	e5cd0020	 strb        r0, [sp, #0x20]
  00d34	e5dd3020	 ldrb        r3, [sp, #0x20]
  00d38	e3833001	 orr         r3, r3, #1
  00d3c	e20330ff	 and         r3, r3, #0xFF
  00d40	e5cd3000	 strb        r3, [sp]

; 396  :     cmdBuffer[RTC_INT_HOUR] = RTC_ALARM_ENABLE | BINtoReversedBCD((UINT8)pSystemTime->wHour) | ((pSystemTime->wHour>=12) ? (1<<1) : 0);

  00d44	e59d303c	 ldr         r3, [sp, #0x3C]
  00d48	e2833008	 add         r3, r3, #8
  00d4c	e1d330b0	 ldrh        r3, [r3]
  00d50	e20300ff	 and         r0, r3, #0xFF
  00d54	eb000000	 bl          BINtoReversedBCD
  00d58	e5cd0021	 strb        r0, [sp, #0x21]
  00d5c	e59d303c	 ldr         r3, [sp, #0x3C]
  00d60	e2833008	 add         r3, r3, #8
  00d64	e1d330b0	 ldrh        r3, [r3]
  00d68	e353000c	 cmp         r3, #0xC
  00d6c	ba000002	 blt         |$LN15@OEMSetAlar|
  00d70	e3a03002	 mov         r3, #2
  00d74	e58d3024	 str         r3, [sp, #0x24]
  00d78	ea000001	 b           |$LN16@OEMSetAlar|
  00d7c		 |$LN15@OEMSetAlar|
  00d7c	e3a03000	 mov         r3, #0
  00d80	e58d3024	 str         r3, [sp, #0x24]
  00d84		 |$LN16@OEMSetAlar|
  00d84	e5dd3021	 ldrb        r3, [sp, #0x21]
  00d88	e3832001	 orr         r2, r3, #1
  00d8c	e59d3024	 ldr         r3, [sp, #0x24]
  00d90	e1823003	 orr         r3, r2, r3
  00d94	e20330ff	 and         r3, r3, #0xFF
  00d98	e5cd3001	 strb        r3, [sp, #1]

; 397  : 	cmdBuffer[RTC_INT_MINUTE] = RTC_ALARM_ENABLE | BINtoReversedBCD((UINT8)pSystemTime->wMinute);

  00d9c	e59d303c	 ldr         r3, [sp, #0x3C]
  00da0	e283300a	 add         r3, r3, #0xA
  00da4	e1d330b0	 ldrh        r3, [r3]
  00da8	e20300ff	 and         r0, r3, #0xFF
  00dac	eb000000	 bl          BINtoReversedBCD
  00db0	e5cd0028	 strb        r0, [sp, #0x28]
  00db4	e5dd3028	 ldrb        r3, [sp, #0x28]
  00db8	e3833001	 orr         r3, r3, #1
  00dbc	e20330ff	 and         r3, r3, #0xFF
  00dc0	e5cd3002	 strb        r3, [sp, #2]

; 398  : 
; 399  : 	if (RTCI2CWrite(RTC_CMD_INT1,cmdBuffer,3)==FALSE)

  00dc4	e3a02003	 mov         r2, #3
  00dc8	e28d1000	 add         r1, sp, #0
  00dcc	e3a00004	 mov         r0, #4
  00dd0	eb000000	 bl          RTCI2CWrite
  00dd4	e58d002c	 str         r0, [sp, #0x2C]
  00dd8	e59d302c	 ldr         r3, [sp, #0x2C]
  00ddc	e3530000	 cmp         r3, #0
  00de0	1a00000d	 bne         |$LN1@OEMSetAlar|

; 400  : 	{
; 401  : 		OALMSG(OAL_ERROR, (L"RTC_SetTime(): Failed to write the date/time to the RTC.\r\n"));

  00de4	e59f3054	 ldr         r3, [pc, #0x54]
  00de8	e5933440	 ldr         r3, [r3, #0x440]
  00dec	e3130001	 tst         r3, #1
  00df0	0a000004	 beq         |$LN17@OEMSetAlar|
  00df4	e59f0040	 ldr         r0, [pc, #0x40]
  00df8	eb000000	 bl          NKDbgPrintfW
  00dfc	e3a03001	 mov         r3, #1
  00e00	e58d3030	 str         r3, [sp, #0x30]
  00e04	ea000001	 b           |$LN18@OEMSetAlar|
  00e08		 |$LN17@OEMSetAlar|
  00e08	e3a03000	 mov         r3, #0
  00e0c	e58d3030	 str         r3, [sp, #0x30]
  00e10		 |$LN18@OEMSetAlar|

; 402  : 		return FALSE;

  00e10	e3a03000	 mov         r3, #0
  00e14	e58d3004	 str         r3, [sp, #4]
  00e18	ea000003	 b           |$LN7@OEMSetAlar|
  00e1c		 |$LN1@OEMSetAlar|

; 403  : 	}
; 404  : 
; 405  :     OEMInterruptDone(SYSINTR_RTC_ALARM);

  00e1c	e3a0000d	 mov         r0, #0xD
  00e20	eb000000	 bl          OEMInterruptDone

; 406  : 
; 407  : 	return TRUE;

  00e24	e3a03001	 mov         r3, #1
  00e28	e58d3004	 str         r3, [sp, #4]
  00e2c		 |$LN7@OEMSetAlar|

; 408  : }

  00e2c	e59d0004	 ldr         r0, [sp, #4]
  00e30	e28dd034	 add         sp, sp, #0x34
  00e34	e89d6000	 ldmia       sp, {sp, lr}
  00e38	e12fff1e	 bx          lr
  00e3c		 |$LN22@OEMSetAlar|
  00e3c		 |$LN23@OEMSetAlar|
  00e3c	00000000	 DCD         |??_C@_1HG@GONGOGNI@?$AAR?$AAT?$AAC?$AA_?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAt@|
  00e40		 |$LN24@OEMSetAlar|
  00e40	00000000	 DCD         |dpCurSettings|
  00e44		 |$LN25@OEMSetAlar|
  00e44	00000000	 DCD         |??_C@_1HM@BAOOGNJE@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@|
  00e48		 |$LN26@OEMSetAlar|
  00e48	00000000	 DCD         |??_C@_1HG@GOCBJLIN@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@|
  00e4c		 |$LN27@OEMSetAlar|
  00e4c	00000000	 DCD         |g_hI2C|
  00e50		 |$LN28@OEMSetAlar|
  00e50	00000000	 DCD         |g_NeedReinit|
  00e54		 |$M44579|

			 ENDP  ; |OEMSetAlarmTime|

	END
