; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\OAL\OMAP_ALLOC\alloc.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.data|, DATA
	 COMMON	|pool|, 0x4

	 COMMON	|poolSize|, 0x4

	 COMMON	|nbBlock|, 0x4

	 COMMON	|map|, 0x4


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|OALLocalAllocInit|
	IMPORT	|memset|
	IMPORT	|__rt_udiv|

  00000			 AREA	 |.pdata|, PDATA
|$T43119| DCD	|$LN5@OALLocalAl|
	DCD	0x40003304
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\oal\omap_alloc\alloc.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALLocalAllocInit| PROC

; 35   : {

  00000		 |$LN5@OALLocalAl|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M43116|

; 36   :     DWORD mapSize;
; 37   : 
; 38   :     DEBUGMSG(0, (TEXT("OALLocalAllocInit (0x%x,0x%x)\r\n"), buffer,size));
; 39   :     
; 40   :     nbBlock = (size + BLOCK_SIZE - 1)/ BLOCK_SIZE;	//128

  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e2833004	 add         r3, r3, #4
  00018	e2431001	 sub         r1, r3, #1
  0001c	e3a00004	 mov         r0, #4
  00020	eb000000	 bl          __rt_udiv
  00024	e59f3098	 ldr         r3, [pc, #0x98]
  00028	e5830000	 str         r0, [r3]

; 41   :     mapSize = (nbBlock + (8*sizeof(*map))-1) / (8*sizeof(*map));//16

  0002c	e59f3090	 ldr         r3, [pc, #0x90]
  00030	e5933000	 ldr         r3, [r3]
  00034	e2833008	 add         r3, r3, #8
  00038	e2431001	 sub         r1, r3, #1
  0003c	e3a00008	 mov         r0, #8
  00040	eb000000	 bl          __rt_udiv
  00044	e58d0000	 str         r0, [sp]

; 42   :     poolSize = size - (mapSize*sizeof(*map)); //496

  00048	e59d2010	 ldr         r2, [sp, #0x10]
  0004c	e59d3000	 ldr         r3, [sp]
  00050	e0422003	 sub         r2, r2, r3
  00054	e59f306c	 ldr         r3, [pc, #0x6C]
  00058	e5832000	 str         r2, [r3]

; 43   :     nbBlock = (poolSize+BLOCK_SIZE- 1)/ BLOCK_SIZE;    //124

  0005c	e59f3064	 ldr         r3, [pc, #0x64]
  00060	e5933000	 ldr         r3, [r3]
  00064	e2833004	 add         r3, r3, #4
  00068	e2431001	 sub         r1, r3, #1
  0006c	e3a00004	 mov         r0, #4
  00070	eb000000	 bl          __rt_udiv
  00074	e59f3048	 ldr         r3, [pc, #0x48]
  00078	e5830000	 str         r0, [r3]

; 44   :     map = buffer;

  0007c	e59d200c	 ldr         r2, [sp, #0xC]
  00080	e59f3038	 ldr         r3, [pc, #0x38]
  00084	e5832000	 str         r2, [r3]

; 45   :     pool = map + mapSize*sizeof(*map);

  00088	e59f3030	 ldr         r3, [pc, #0x30]
  0008c	e5932000	 ldr         r2, [r3]
  00090	e59d3000	 ldr         r3, [sp]
  00094	e0822003	 add         r2, r2, r3
  00098	e59f301c	 ldr         r3, [pc, #0x1C]
  0009c	e5832000	 str         r2, [r3]

; 46   :     memset(buffer,0,size);

  000a0	e59d2010	 ldr         r2, [sp, #0x10]
  000a4	e3a01000	 mov         r1, #0
  000a8	e59d000c	 ldr         r0, [sp, #0xC]
  000ac	eb000000	 bl          memset

; 47   : 
; 48   :     DEBUGMSG(0,(TEXT("nbBlock 0x%x\r\n"),nbBlock));
; 49   : }

  000b0	e28dd004	 add         sp, sp, #4
  000b4	e89d6000	 ldmia       sp, {sp, lr}
  000b8	e12fff1e	 bx          lr
  000bc		 |$LN6@OALLocalAl|
  000bc		 |$LN7@OALLocalAl|
  000bc	00000000	 DCD         |pool|
  000c0		 |$LN8@OALLocalAl|
  000c0	00000000	 DCD         |map|
  000c4		 |$LN9@OALLocalAl|
  000c4	00000000	 DCD         |nbBlock|
  000c8		 |$LN10@OALLocalAl|
  000c8	00000000	 DCD         |poolSize|
  000cc		 |$M43117|

			 ENDP  ; |OALLocalAllocInit|

	EXPORT	|??_C@_1EA@CJMKJJJH@?$AAO?$AAA?$AAL?$AAL?$AAo?$AAc?$AAa?$AAl?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?5?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|OALLocalAlloc|
	IMPORT	|NKDbgPrintfW|

  00008			 AREA	 |.pdata|, PDATA
|$T43130| DCD	|$LN18@OALLocalAl@2|
	DCD	0x40008604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@CJMKJJJH@?$AAO?$AAA?$AAL?$AAL?$AAo?$AAc?$AAa?$AAl?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?5?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "L", 0x0, "o", 0x0, "c", 0x0, "a"
	DCB	0x0, "l", 0x0, "A", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "r"
	DCB	0x0, "n", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "N", 0x0, "U"
	DCB	0x0, "L", 0x0, "L", 0x0, " ", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  000cc			 AREA	 |.text|, CODE, ARM

  000cc		 |OALLocalAlloc| PROC

; 56   : {

  000cc		 |$LN18@OALLocalAl@2|
  000cc	e1a0c00d	 mov         r12, sp
  000d0	e92d0003	 stmdb       sp!, {r0, r1}
  000d4	e92d5010	 stmdb       sp!, {r4, r12, lr}
  000d8	e24dd018	 sub         sp, sp, #0x18
  000dc		 |$M43127|

; 57   :     DWORD i;
; 58   :     DWORD startBlock = (DWORD) -1;

  000dc	e3e03000	 mvn         r3, #0
  000e0	e58d300c	 str         r3, [sp, #0xC]

; 59   :     DWORD contiguous = 0;

  000e4	e3a03000	 mov         r3, #0
  000e8	e58d3000	 str         r3, [sp]

; 60   :     T_BLOCK_COUNT_TYPE nbRequestBlock = (T_BLOCK_COUNT_TYPE) (((size+BLOCK_COUNT_SIZE) + BLOCK_SIZE- 1)/ BLOCK_SIZE);

  000ec	e59d3028	 ldr         r3, [sp, #0x28]
  000f0	e2833008	 add         r3, r3, #8
  000f4	e2431001	 sub         r1, r3, #1
  000f8	e3a00004	 mov         r0, #4
  000fc	eb000000	 bl          __rt_udiv
  00100	e58d0008	 str         r0, [sp, #8]

; 61   : 
; 62   :     UNREFERENCED_PARAMETER(flags);
; 63   : 
; 64   :     DEBUGMSG(0,(TEXT("OALLocalAlloc request for %d bytes => %d block\r\n"),size,nbRequestBlock));
; 65   : 
; 66   :     for (i=0;i<nbBlock;i++)

  00104	e3a03000	 mov         r3, #0
  00108	e58d3004	 str         r3, [sp, #4]
  0010c	ea000002	 b           |$LN13@OALLocalAl@2|
  00110		 |$LN12@OALLocalAl@2|
  00110	e59d3004	 ldr         r3, [sp, #4]
  00114	e2833001	 add         r3, r3, #1
  00118	e58d3004	 str         r3, [sp, #4]
  0011c		 |$LN13@OALLocalAl@2|
  0011c	e59d2004	 ldr         r2, [sp, #4]
  00120	e59f31b8	 ldr         r3, [pc, #0x1B8]
  00124	e5933000	 ldr         r3, [r3]
  00128	e1520003	 cmp         r2, r3
  0012c	2a000020	 bcs         |$LN11@OALLocalAl@2|

; 67   :     {
; 68   :         if (IS_BLOCK_USED(i))

  00130	e59d1004	 ldr         r1, [sp, #4]
  00134	e3a00008	 mov         r0, #8
  00138	eb000000	 bl          __rt_udiv
  0013c	e59f3194	 ldr         r3, [pc, #0x194]
  00140	e5933000	 ldr         r3, [r3]
  00144	e0833000	 add         r3, r3, r0
  00148	e5d33000	 ldrb        r3, [r3]
  0014c	e1a01003	 mov         r1, r3
  00150	e59d3004	 ldr         r3, [sp, #4]
  00154	e2032007	 and         r2, r3, #7
  00158	e3a03001	 mov         r3, #1
  0015c	e1a03213	 mov         r3, r3, lsl r2
  00160	e1110003	 tst         r1, r3
  00164	0a000004	 beq         |$LN10@OALLocalAl@2|

; 69   :         {
; 70   :             DEBUGMSG(0,(TEXT("block %d is used\r\n"),i));
; 71   :             contiguous = 0;

  00168	e3a03000	 mov         r3, #0
  0016c	e58d3000	 str         r3, [sp]

; 72   :             startBlock = (DWORD) -1;

  00170	e3e03000	 mvn         r3, #0
  00174	e58d300c	 str         r3, [sp, #0xC]

; 73   :         }
; 74   :         else

  00178	ea00000c	 b           |$LN9@OALLocalAl@2|
  0017c		 |$LN10@OALLocalAl@2|

; 75   :         {
; 76   :             if (contiguous == 0)

  0017c	e59d3000	 ldr         r3, [sp]
  00180	e3530000	 cmp         r3, #0
  00184	1a000001	 bne         |$LN8@OALLocalAl@2|

; 77   :             {
; 78   :                 DEBUGMSG(0,(TEXT("block %d is unused\r\n"),i));
; 79   :                 startBlock = i;

  00188	e59d3004	 ldr         r3, [sp, #4]
  0018c	e58d300c	 str         r3, [sp, #0xC]
  00190		 |$LN8@OALLocalAl@2|

; 80   :             }
; 81   :             contiguous++;      

  00190	e59d3000	 ldr         r3, [sp]
  00194	e2833001	 add         r3, r3, #1
  00198	e58d3000	 str         r3, [sp]

; 82   :             if (nbRequestBlock == contiguous)

  0019c	e59d2008	 ldr         r2, [sp, #8]
  001a0	e59d3000	 ldr         r3, [sp]
  001a4	e1520003	 cmp         r2, r3
  001a8	1a000000	 bne         |$LN7@OALLocalAl@2|

; 83   :             {
; 84   :                 DEBUGMSG(0,(TEXT("found %d free blocks (%d,%d)\r\n"),nbRequestBlock,startBlock,i));
; 85   :                 break;

  001ac	ea000000	 b           |$LN11@OALLocalAl@2|
  001b0		 |$LN7@OALLocalAl@2|
  001b0		 |$LN9@OALLocalAl@2|

; 86   :             }
; 87   :         }
; 88   :     }

  001b0	eaffffd6	 b           |$LN12@OALLocalAl@2|
  001b4		 |$LN11@OALLocalAl@2|

; 89   :     if ((startBlock == (DWORD) -1) || (nbRequestBlock != contiguous))

  001b4	e59d300c	 ldr         r3, [sp, #0xC]
  001b8	e3730001	 cmn         r3, #1
  001bc	0a000003	 beq         |$LN5@OALLocalAl@2|
  001c0	e59d2008	 ldr         r2, [sp, #8]
  001c4	e59d3000	 ldr         r3, [sp]
  001c8	e1520003	 cmp         r2, r3
  001cc	0a000005	 beq         |$LN6@OALLocalAl@2|
  001d0		 |$LN5@OALLocalAl@2|

; 90   :     {
; 91   :         RETAILMSG(1, (TEXT("OALLocalAlloc returned NULL !\r\n")));

  001d0	e59f0104	 ldr         r0, [pc, #0x104]
  001d4	eb000000	 bl          NKDbgPrintfW

; 92   :         return NULL;

  001d8	e3a03000	 mov         r3, #0
  001dc	e58d3014	 str         r3, [sp, #0x14]
  001e0	ea000037	 b           |$LN14@OALLocalAl@2|

; 93   :     }
; 94   :     else

  001e4	ea000036	 b           |$LN4@OALLocalAl@2|
  001e8		 |$LN6@OALLocalAl@2|

; 95   :     {        
; 96   :         T_BLOCK_COUNT_TYPE* p = (T_BLOCK_COUNT_TYPE*) (pool + (startBlock * BLOCK_SIZE));

  001e8	e59d100c	 ldr         r1, [sp, #0xC]
  001ec	e3a03004	 mov         r3, #4
  001f0	e0020391	 mul         r2, r1, r3
  001f4	e59f30d8	 ldr         r3, [pc, #0xD8]
  001f8	e5933000	 ldr         r3, [r3]
  001fc	e0833002	 add         r3, r3, r2
  00200	e58d3010	 str         r3, [sp, #0x10]

; 97   :         *p = nbRequestBlock;

  00204	e59d2008	 ldr         r2, [sp, #8]
  00208	e59d3010	 ldr         r3, [sp, #0x10]
  0020c	e5832000	 str         r2, [r3]

; 98   :         for (i=0;i<nbRequestBlock;i++)

  00210	e3a03000	 mov         r3, #0
  00214	e58d3004	 str         r3, [sp, #4]
  00218	ea000002	 b           |$LN3@OALLocalAl@2|
  0021c		 |$LN2@OALLocalAl@2|
  0021c	e59d3004	 ldr         r3, [sp, #4]
  00220	e2833001	 add         r3, r3, #1
  00224	e58d3004	 str         r3, [sp, #4]
  00228		 |$LN3@OALLocalAl@2|
  00228	e59d2004	 ldr         r2, [sp, #4]
  0022c	e59d3008	 ldr         r3, [sp, #8]
  00230	e1520003	 cmp         r2, r3
  00234	2a00001a	 bcs         |$LN1@OALLocalAl@2|

; 99   :         {
; 100  :             DEBUGMSG(0,(TEXT("marking block %d used\r\n"),i+startBlock));
; 101  :             MARK_BLOCK_USED(i+startBlock);

  00238	e59d2004	 ldr         r2, [sp, #4]
  0023c	e59d300c	 ldr         r3, [sp, #0xC]
  00240	e0821003	 add         r1, r2, r3
  00244	e3a00008	 mov         r0, #8
  00248	eb000000	 bl          __rt_udiv
  0024c	e59f3084	 ldr         r3, [pc, #0x84]
  00250	e5933000	 ldr         r3, [r3]
  00254	e0831000	 add         r1, r3, r0
  00258	e59d2004	 ldr         r2, [sp, #4]
  0025c	e59d300c	 ldr         r3, [sp, #0xC]
  00260	e0823003	 add         r3, r2, r3
  00264	e2032007	 and         r2, r3, #7
  00268	e3a03001	 mov         r3, #1
  0026c	e1a02213	 mov         r2, r3, lsl r2
  00270	e5d13000	 ldrb        r3, [r1]
  00274	e1834002	 orr         r4, r3, r2
  00278	e59d2004	 ldr         r2, [sp, #4]
  0027c	e59d300c	 ldr         r3, [sp, #0xC]
  00280	e0821003	 add         r1, r2, r3
  00284	e3a00008	 mov         r0, #8
  00288	eb000000	 bl          __rt_udiv
  0028c	e59f3044	 ldr         r3, [pc, #0x44]
  00290	e5933000	 ldr         r3, [r3]
  00294	e0832000	 add         r2, r3, r0
  00298	e20430ff	 and         r3, r4, #0xFF
  0029c	e5c23000	 strb        r3, [r2]

; 102  :         }

  002a0	eaffffdd	 b           |$LN2@OALLocalAl@2|
  002a4		 |$LN1@OALLocalAl@2|

; 103  :         DEBUGMSG(0,(TEXT("returned value is 0x%x\r\n"),(HLOCAL) (pool + (startBlock * BLOCK_SIZE) + BLOCK_COUNT_SIZE)));
; 104  :         return (HLOCAL) (pool + (startBlock * BLOCK_SIZE) + BLOCK_COUNT_SIZE);

  002a4	e59d100c	 ldr         r1, [sp, #0xC]
  002a8	e3a03004	 mov         r3, #4
  002ac	e0020391	 mul         r2, r1, r3
  002b0	e59f301c	 ldr         r3, [pc, #0x1C]
  002b4	e5933000	 ldr         r3, [r3]
  002b8	e0833002	 add         r3, r3, r2
  002bc	e2833004	 add         r3, r3, #4
  002c0	e58d3014	 str         r3, [sp, #0x14]
  002c4		 |$LN4@OALLocalAl@2|
  002c4		 |$LN14@OALLocalAl@2|

; 105  :     }
; 106  : }

  002c4	e59d0014	 ldr         r0, [sp, #0x14]
  002c8	e28dd018	 add         sp, sp, #0x18
  002cc	e89d6010	 ldmia       sp, {r4, sp, lr}
  002d0	e12fff1e	 bx          lr
  002d4		 |$LN19@OALLocalAl@2|
  002d4		 |$LN20@OALLocalAl@2|
  002d4	00000000	 DCD         |pool|
  002d8		 |$LN21@OALLocalAl@2|
  002d8	00000000	 DCD         |map|
  002dc		 |$LN22@OALLocalAl@2|
  002dc	00000000	 DCD         |??_C@_1EA@CJMKJJJH@?$AAO?$AAA?$AAL?$AAL?$AAo?$AAc?$AAa?$AAl?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?5?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@|
  002e0		 |$LN23@OALLocalAl@2|
  002e0	00000000	 DCD         |nbBlock|
  002e4		 |$M43128|

			 ENDP  ; |OALLocalAlloc|

	EXPORT	|OALLocalFree|
	IMPORT	|__rt_sdiv|

  00010			 AREA	 |.pdata|, PDATA
|$T43142| DCD	|$LN8@OALLocalFr|
	DCD	0x40003a04
; Function compile flags: /Odtp

  002e4			 AREA	 |.text|, CODE, ARM

  002e4		 |OALLocalFree| PROC

; 112  : {

  002e4		 |$LN8@OALLocalFr|
  002e4	e1a0c00d	 mov         r12, sp
  002e8	e92d0001	 stmdb       sp!, {r0}
  002ec	e92d5010	 stmdb       sp!, {r4, r12, lr}
  002f0	e24dd010	 sub         sp, sp, #0x10
  002f4		 |$M43139|

; 113  :     T_BLOCK_COUNT_TYPE index,start;
; 114  :     T_BLOCK_COUNT_TYPE count = *((T_BLOCK_COUNT_TYPE*) ((UCHAR*) hMemory - BLOCK_COUNT_SIZE));

  002f4	e59d301c	 ldr         r3, [sp, #0x1C]
  002f8	e2433004	 sub         r3, r3, #4
  002fc	e5933000	 ldr         r3, [r3]
  00300	e58d3000	 str         r3, [sp]

; 115  :     DEBUGMSG(0,(TEXT("OALLocalFree freeing 0x%x (%d blocks) \r\n"),hMemory,count));
; 116  : 
; 117  :     start = ((UCHAR*)hMemory - BLOCK_COUNT_SIZE - pool) / BLOCK_SIZE;

  00304	e59d301c	 ldr         r3, [sp, #0x1C]
  00308	e2432004	 sub         r2, r3, #4
  0030c	e59f30b4	 ldr         r3, [pc, #0xB4]
  00310	e5933000	 ldr         r3, [r3]
  00314	e0421003	 sub         r1, r2, r3
  00318	e3a00004	 mov         r0, #4
  0031c	eb000000	 bl          __rt_sdiv
  00320	e58d0008	 str         r0, [sp, #8]

; 118  :     for (index=start;index<start+count;index++)

  00324	e59d3008	 ldr         r3, [sp, #8]
  00328	e58d3004	 str         r3, [sp, #4]
  0032c	ea000002	 b           |$LN3@OALLocalFr|
  00330		 |$LN2@OALLocalFr|
  00330	e59d3004	 ldr         r3, [sp, #4]
  00334	e2833001	 add         r3, r3, #1
  00338	e58d3004	 str         r3, [sp, #4]
  0033c		 |$LN3@OALLocalFr|
  0033c	e59d2008	 ldr         r2, [sp, #8]
  00340	e59d3000	 ldr         r3, [sp]
  00344	e0822003	 add         r2, r2, r3
  00348	e59d3004	 ldr         r3, [sp, #4]
  0034c	e1530002	 cmp         r3, r2
  00350	2a000015	 bcs         |$LN1@OALLocalFr|

; 119  :     {
; 120  :         DEBUGMSG(0,(TEXT("marking block %d unused\r\n"),index));
; 121  :         MARK_BLOCK_UNUSED(index);

  00354	e59d1004	 ldr         r1, [sp, #4]
  00358	e3a00008	 mov         r0, #8
  0035c	eb000000	 bl          __rt_udiv
  00360	e59f305c	 ldr         r3, [pc, #0x5C]
  00364	e5933000	 ldr         r3, [r3]
  00368	e0831000	 add         r1, r3, r0
  0036c	e59d3004	 ldr         r3, [sp, #4]
  00370	e2032007	 and         r2, r3, #7
  00374	e3a03001	 mov         r3, #1
  00378	e1a03213	 mov         r3, r3, lsl r2
  0037c	e1e02003	 mvn         r2, r3
  00380	e5d13000	 ldrb        r3, [r1]
  00384	e0034002	 and         r4, r3, r2
  00388	e59d1004	 ldr         r1, [sp, #4]
  0038c	e3a00008	 mov         r0, #8
  00390	eb000000	 bl          __rt_udiv
  00394	e59f3028	 ldr         r3, [pc, #0x28]
  00398	e5933000	 ldr         r3, [r3]
  0039c	e0832000	 add         r2, r3, r0
  003a0	e20430ff	 and         r3, r4, #0xFF
  003a4	e5c23000	 strb        r3, [r2]

; 122  :     }

  003a8	eaffffe0	 b           |$LN2@OALLocalFr|
  003ac		 |$LN1@OALLocalFr|

; 123  :     return NULL;

  003ac	e3a03000	 mov         r3, #0
  003b0	e58d300c	 str         r3, [sp, #0xC]

; 124  : }

  003b4	e59d000c	 ldr         r0, [sp, #0xC]
  003b8	e28dd010	 add         sp, sp, #0x10
  003bc	e89d6010	 ldmia       sp, {r4, sp, lr}
  003c0	e12fff1e	 bx          lr
  003c4		 |$LN9@OALLocalFr|
  003c4		 |$LN10@OALLocalFr|
  003c4	00000000	 DCD         |map|
  003c8		 |$LN11@OALLocalFr|
  003c8	00000000	 DCD         |pool|
  003cc		 |$M43140|

			 ENDP  ; |OALLocalFree|

	END
