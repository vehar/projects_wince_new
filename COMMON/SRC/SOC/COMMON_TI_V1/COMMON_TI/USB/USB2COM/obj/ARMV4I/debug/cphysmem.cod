; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\USB\USB2COM\cphysmem.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?ReInit@CPhysMem@@QAAXXZ|		; CPhysMem::ReInit
	EXPORT	|??_C@_1KA@FJCCGHGB@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AA?5?$AAN?$AAo?$AAr?$AAm?$AAa?$AAl?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KA@PJOEMMCM@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAH?$AAi?$AAg?$AAh?$AAP?$AAr?$AAi?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KA@JBKPJKEP@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAS?$AAp?$AAe?$AAc?$AAi?$AAa?$AAl?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KA@PIBOCLFE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AA?5?$AA?5?$AAT?$AAo?$AAt?$AAa?$AAl?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@ICCPJKCO@?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@LENIGCOC@?$AAD?$AAM?$AAA?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAP?$AAD?$AAD?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KM@IMBMOFHC@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|??0CPhysMem@@QAA@KKPAE0@Z|		; CPhysMem::CPhysMem
	IMPORT	|InitializeCriticalSection|
	IMPORT	|CreateEventW|
	IMPORT	|memset|
	IMPORT	|AllocPhysMem|
	IMPORT	|dpCurSettings|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|__rt_udiv|

  00000			 AREA	 |.pdata|, PDATA
|$T34074| DCD	|$LN28@CPhysMem|
	DCD	0x4001a604
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\usb\usb2com\cphysmem.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KA@FJCCGHGB@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AA?5?$AAN?$AAo?$AAr?$AAm?$AAa?$AAl?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, " ", 0x0, "N", 0x0, "o", 0x0, "r"
	DCB	0x0, "m", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "A", 0x0, "l"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "P"
	DCB	0x0, "h", 0x0, "y", 0x0, "s", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " "
	DCB	0x0, "V", 0x0, "i", 0x0, "r", 0x0, "t", 0x0, "A", 0x0, "d"
	DCB	0x0, "d", 0x0, "r", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ","
	DCB	0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KA@PJOEMMCM@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAH?$AAi?$AAg?$AAh?$AAP?$AAr?$AAi?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "H", 0x0, "i", 0x0, "g", 0x0, "h"
	DCB	0x0, "P", 0x0, "r", 0x0, "i", 0x0, " ", 0x0, "A", 0x0, "l"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "P"
	DCB	0x0, "h", 0x0, "y", 0x0, "s", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " "
	DCB	0x0, "V", 0x0, "i", 0x0, "r", 0x0, "t", 0x0, "A", 0x0, "d"
	DCB	0x0, "d", 0x0, "r", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ","
	DCB	0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KA@JBKPJKEP@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAS?$AAp?$AAe?$AAc?$AAi?$AAa?$AAl?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "S", 0x0, "p", 0x0, "e", 0x0, "c"
	DCB	0x0, "i", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "A", 0x0, "l"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "P"
	DCB	0x0, "h", 0x0, "y", 0x0, "s", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " "
	DCB	0x0, "V", 0x0, "i", 0x0, "r", 0x0, "t", 0x0, "A", 0x0, "d"
	DCB	0x0, "d", 0x0, "r", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ","
	DCB	0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KA@PIBOCLFE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AA?5?$AA?5?$AAT?$AAo?$AAt?$AAa?$AAl?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "T", 0x0, "o"
	DCB	0x0, "t", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "A", 0x0, "l"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "P"
	DCB	0x0, "h", 0x0, "y", 0x0, "s", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " "
	DCB	0x0, "V", 0x0, "i", 0x0, "r", 0x0, "t", 0x0, "A", 0x0, "d"
	DCB	0x0, "d", 0x0, "r", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ","
	DCB	0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@ICCPJKCO@?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe@| DCB "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "D", 0x0, "M"
	DCB	0x0, "A", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "f", 0x0, "r", 0x0, "o"
	DCB	0x0, "m", 0x0, " ", 0x0, "s", 0x0, "y", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "m", 0x0, " ", 0x0, "R", 0x0, "A", 0x0, "M"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@LENIGCOC@?$AAD?$AAM?$AAA?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAP?$AAD?$AAD?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "M", 0x0, "A", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "p", 0x0, "a"
	DCB	0x0, "s", 0x0, "s", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, " ", 0x0, "f", 0x0, "r", 0x0, "o", 0x0, "m"
	DCB	0x0, " ", 0x0, "P", 0x0, "D", 0x0, "D", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "E", 0x0, "B"
	DCB	0x0, "U", 0x0, "G", 0x0, "C", 0x0, "H", 0x0, "K", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, "t", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| DCB "U", 0x0
	DCB	"n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KM@IMBMOFHC@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "C"
	DCB	0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N", 0x0, "_"
	DCB	0x0, "T", 0x0, "I", 0x0, "_", 0x0, "V", 0x0, "1", 0x0, "\\"
	DCB	0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N"
	DCB	0x0, "_", 0x0, "T", 0x0, "I", 0x0, "\\", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "\\", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "2"
	DCB	0x0, "C", 0x0, "O", 0x0, "M", 0x0, "\\", 0x0, ".", 0x0, "\\"
	DCB	0x0, "c", 0x0, "p", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "m"
	DCB	0x0, "e", 0x0, "m", 0x0, ".", 0x0, "c", 0x0, "p", 0x0, "p"
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CPhysMem@@QAA@KKPAE0@Z| PROC	; CPhysMem::CPhysMem

; 45   : {

  00000		 |$LN28@CPhysMem|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd040	 sub         sp, sp, #0x40
  00010		 |$M34071|
  00010	e59d204c	 ldr         r2, [sp, #0x4C]
  00014	e59d3048	 ldr         r3, [sp, #0x48]
  00018	e5832000	 str         r2, [r3]
  0001c	e59d3048	 ldr         r3, [sp, #0x48]
  00020	e2832004	 add         r2, r3, #4
  00024	e59d3050	 ldr         r3, [sp, #0x50]
  00028	e5823000	 str         r3, [r2]
  0002c	e59d3048	 ldr         r3, [sp, #0x48]
  00030	e2832008	 add         r2, r3, #8
  00034	e59d3054	 ldr         r3, [sp, #0x54]
  00038	e5823000	 str         r3, [r2]
  0003c	e59d3048	 ldr         r3, [sp, #0x48]
  00040	e283200c	 add         r2, r3, #0xC
  00044	e59d3058	 ldr         r3, [sp, #0x58]
  00048	e5823000	 str         r3, [r2]

; 46   : 
; 47   :     ASSERT(cbSize > 0 && cbHighPrioritySize > 0); // must be so or the driver cannot work.

  0004c	e59d304c	 ldr         r3, [sp, #0x4C]
  00050	e3530000	 cmp         r3, #0
  00054	9a000005	 bls         |$LN6@CPhysMem|
  00058	e59d3050	 ldr         r3, [sp, #0x50]
  0005c	e3530000	 cmp         r3, #0
  00060	9a000002	 bls         |$LN6@CPhysMem|
  00064	e3a03001	 mov         r3, #1
  00068	e58d3010	 str         r3, [sp, #0x10]
  0006c	ea000007	 b           |$LN7@CPhysMem|
  00070		 |$LN6@CPhysMem|
  00070	e3a0302f	 mov         r3, #0x2F
  00074	e59f260c	 ldr         r2, [pc, #0x60C]
  00078	e59f1614	 ldr         r1, [pc, #0x614]
  0007c	e59f0600	 ldr         r0, [pc, #0x600]
  00080	eb000000	 bl          NKDbgPrintfW
  00084	e6000010	 __debugbreak_ce
  00088	e3a03000	 mov         r3, #0
  0008c	e58d3010	 str         r3, [sp, #0x10]
  00090		 |$LN7@CPhysMem|

; 48   : 
; 49   :     //
; 50   :     // The PDD can pass in a physical buffer, or we'll try to allocate one from 
; 51   :     // system RAM.
; 52   :     //
; 53   :     if (pVirtAddr && pPhysAddr) {

  00090	e59d3054	 ldr         r3, [sp, #0x54]
  00094	e3530000	 cmp         r3, #0
  00098	0a00001e	 beq         |$LN3@CPhysMem|
  0009c	e59d3058	 ldr         r3, [sp, #0x58]
  000a0	e3530000	 cmp         r3, #0
  000a4	0a00001b	 beq         |$LN3@CPhysMem|

; 54   :         DEBUGMSG(ZONE_INIT,(TEXT("DMA buffer passed in from PDD\r\n")));

  000a8	e59f35c4	 ldr         r3, [pc, #0x5C4]
  000ac	e5933440	 ldr         r3, [r3, #0x440]
  000b0	e3130002	 tst         r3, #2
  000b4	0a000004	 beq         |$LN8@CPhysMem|
  000b8	e59f05d0	 ldr         r0, [pc, #0x5D0]
  000bc	eb000000	 bl          NKDbgPrintfW
  000c0	e3a03001	 mov         r3, #1
  000c4	e58d3014	 str         r3, [sp, #0x14]
  000c8	ea000001	 b           |$LN9@CPhysMem|
  000cc		 |$LN8@CPhysMem|
  000cc	e3a03000	 mov         r3, #0
  000d0	e58d3014	 str         r3, [sp, #0x14]
  000d4		 |$LN9@CPhysMem|

; 55   :         m_pPhysicalBufferAddr = pVirtAddr;

  000d4	e59d3048	 ldr         r3, [sp, #0x48]
  000d8	e283203c	 add         r2, r3, #0x3C
  000dc	e59d3054	 ldr         r3, [sp, #0x54]
  000e0	e5823000	 str         r3, [r2]

; 56   :         m_dwNormalVA = (DWORD) pVirtAddr;

  000e4	e59d3048	 ldr         r3, [sp, #0x48]
  000e8	e2832054	 add         r2, r3, #0x54
  000ec	e59d3054	 ldr         r3, [sp, #0x54]
  000f0	e5823000	 str         r3, [r2]

; 57   :         m_dwNormalPA = (DWORD) pPhysAddr;

  000f4	e59d3048	 ldr         r3, [sp, #0x48]
  000f8	e2832050	 add         r2, r3, #0x50
  000fc	e59d3058	 ldr         r3, [sp, #0x58]
  00100	e5823000	 str         r3, [r2]

; 58   :         m_fPhysFromPlat = TRUE;

  00104	e59d3048	 ldr         r3, [sp, #0x48]
  00108	e2832028	 add         r2, r3, #0x28
  0010c	e3a03001	 mov         r3, #1
  00110	e5823000	 str         r3, [r2]

; 59   :     }
; 60   :     else {

  00114	ea000021	 b           |$LN2@CPhysMem|
  00118		 |$LN3@CPhysMem|

; 61   :         DEBUGMSG(ZONE_INIT,(TEXT("Allocating DMA buffer from system RAM\r\n")));

  00118	e59f3554	 ldr         r3, [pc, #0x554]
  0011c	e5933440	 ldr         r3, [r3, #0x440]
  00120	e3130002	 tst         r3, #2
  00124	0a000004	 beq         |$LN10@CPhysMem|
  00128	e59f055c	 ldr         r0, [pc, #0x55C]
  0012c	eb000000	 bl          NKDbgPrintfW
  00130	e3a03001	 mov         r3, #1
  00134	e58d3018	 str         r3, [sp, #0x18]
  00138	ea000001	 b           |$LN11@CPhysMem|
  0013c		 |$LN10@CPhysMem|
  0013c	e3a03000	 mov         r3, #0
  00140	e58d3018	 str         r3, [sp, #0x18]
  00144		 |$LN11@CPhysMem|

; 62   : 
; 63   :         m_pPhysicalBufferAddr = (PUCHAR)AllocPhysMem(cbSize,
; 64   :                                              PAGE_READWRITE|PAGE_NOCACHE,
; 65   :                                              0,    // Default alignment
; 66   :                                              0,    // Reserved
; 67   :                                              &m_dwNormalPA);

  00144	e59d3048	 ldr         r3, [sp, #0x48]
  00148	e2833050	 add         r3, r3, #0x50
  0014c	e58d3000	 str         r3, [sp]
  00150	e3a03000	 mov         r3, #0
  00154	e3a02000	 mov         r2, #0
  00158	e3a01f81	 mov         r1, #0x81, 30
  0015c	e59d004c	 ldr         r0, [sp, #0x4C]
  00160	eb000000	 bl          AllocPhysMem
  00164	e58d001c	 str         r0, [sp, #0x1C]
  00168	e59d3048	 ldr         r3, [sp, #0x48]
  0016c	e283203c	 add         r2, r3, #0x3C
  00170	e59d301c	 ldr         r3, [sp, #0x1C]
  00174	e5823000	 str         r3, [r2]

; 68   :         
; 69   :         m_dwNormalVA = (DWORD) m_pPhysicalBufferAddr;

  00178	e59d3048	 ldr         r3, [sp, #0x48]
  0017c	e283103c	 add         r1, r3, #0x3C
  00180	e59d3048	 ldr         r3, [sp, #0x48]
  00184	e2832054	 add         r2, r3, #0x54
  00188	e5913000	 ldr         r3, [r1]
  0018c	e5823000	 str         r3, [r2]

; 70   :         m_fPhysFromPlat = FALSE;

  00190	e59d3048	 ldr         r3, [sp, #0x48]
  00194	e2832028	 add         r2, r3, #0x28
  00198	e3a03000	 mov         r3, #0
  0019c	e5823000	 str         r3, [r2]
  001a0		 |$LN2@CPhysMem|

; 71   :     }
; 72   :     {   // we want all blocks to have their Phys Addr divisible by
; 73   :         // CPHYSMEM_MEMORY_ALIGNMENT. To achieve this, we start off
; 74   :         // having the physical memory block aligned properly, and
; 75   :         // then allocate memory only in blocks divisible by 
; 76   :         // CPHYSMEM_MEMORY_ALIGNMENT
; 77   :         const DWORD dwOffset = m_dwNormalPA & (CPHYSMEM_MEMORY_ALIGNMENT - 1);

  001a0	e59d3048	 ldr         r3, [sp, #0x48]
  001a4	e2833050	 add         r3, r3, #0x50
  001a8	e5933000	 ldr         r3, [r3]
  001ac	e203301f	 and         r3, r3, #0x1F
  001b0	e58d3004	 str         r3, [sp, #4]

; 78   :         DEBUGCHK( dwOffset == m_dwNormalPA % CPHYSMEM_MEMORY_ALIGNMENT );

  001b4	e59d3048	 ldr         r3, [sp, #0x48]
  001b8	e2833050	 add         r3, r3, #0x50
  001bc	e5931000	 ldr         r1, [r3]
  001c0	e3a00020	 mov         r0, #0x20
  001c4	eb000000	 bl          __rt_udiv
  001c8	e59d3004	 ldr         r3, [sp, #4]
  001cc	e1530001	 cmp         r3, r1
  001d0	1a000002	 bne         |$LN12@CPhysMem|
  001d4	e3a03001	 mov         r3, #1
  001d8	e58d3020	 str         r3, [sp, #0x20]
  001dc	ea000007	 b           |$LN13@CPhysMem|
  001e0		 |$LN12@CPhysMem|
  001e0	e3a0304e	 mov         r3, #0x4E
  001e4	e59f249c	 ldr         r2, [pc, #0x49C]
  001e8	e59f1484	 ldr         r1, [pc, #0x484]
  001ec	e59f0490	 ldr         r0, [pc, #0x490]
  001f0	eb000000	 bl          NKDbgPrintfW
  001f4	e6000010	 __debugbreak_ce
  001f8	e3a03000	 mov         r3, #0
  001fc	e58d3020	 str         r3, [sp, #0x20]
  00200		 |$LN13@CPhysMem|

; 79   :         DEBUGCHK( cbSize > CPHYSMEM_MEMORY_ALIGNMENT );

  00200	e59d304c	 ldr         r3, [sp, #0x4C]
  00204	e3530020	 cmp         r3, #0x20
  00208	9a000002	 bls         |$LN14@CPhysMem|
  0020c	e3a03001	 mov         r3, #1
  00210	e58d3024	 str         r3, [sp, #0x24]
  00214	ea000007	 b           |$LN15@CPhysMem|
  00218		 |$LN14@CPhysMem|
  00218	e3a0304f	 mov         r3, #0x4F
  0021c	e59f2464	 ldr         r2, [pc, #0x464]
  00220	e59f144c	 ldr         r1, [pc, #0x44C]
  00224	e59f0458	 ldr         r0, [pc, #0x458]
  00228	eb000000	 bl          NKDbgPrintfW
  0022c	e6000010	 __debugbreak_ce
  00230	e3a03000	 mov         r3, #0
  00234	e58d3024	 str         r3, [sp, #0x24]
  00238		 |$LN15@CPhysMem|

; 80   :         if ( dwOffset != 0 ) {

  00238	e59d3004	 ldr         r3, [sp, #4]
  0023c	e3530000	 cmp         r3, #0
  00240	0a000022	 beq         |$LN1@CPhysMem|

; 81   :             // skip over the first few bytes of memory, as it is not
; 82   :             // aligned properly. This shouldn't happen though, because
; 83   :             // the new memory should have been aligned on a page boundary
; 84   :             DEBUGCHK( 0 );

  00244	ea000002	 b           |$LN16@CPhysMem|
  00248	e3a03001	 mov         r3, #1
  0024c	e58d3028	 str         r3, [sp, #0x28]
  00250	ea000007	 b           |$LN17@CPhysMem|
  00254		 |$LN16@CPhysMem|
  00254	e3a03054	 mov         r3, #0x54
  00258	e59f2428	 ldr         r2, [pc, #0x428]
  0025c	e59f1410	 ldr         r1, [pc, #0x410]
  00260	e59f041c	 ldr         r0, [pc, #0x41C]
  00264	eb000000	 bl          NKDbgPrintfW
  00268	e6000010	 __debugbreak_ce
  0026c	e3a03000	 mov         r3, #0
  00270	e58d3028	 str         r3, [sp, #0x28]
  00274		 |$LN17@CPhysMem|

; 85   :             // we can't code -= dwOffset because then we'll enter
; 86   :             // memory that we don't own.
; 87   :             m_dwNormalVA += CPHYSMEM_MEMORY_ALIGNMENT - dwOffset;

  00274	e59d3048	 ldr         r3, [sp, #0x48]
  00278	e2831054	 add         r1, r3, #0x54
  0027c	e59d3004	 ldr         r3, [sp, #4]
  00280	e2632020	 rsb         r2, r3, #0x20
  00284	e5913000	 ldr         r3, [r1]
  00288	e0832002	 add         r2, r3, r2
  0028c	e59d3048	 ldr         r3, [sp, #0x48]
  00290	e2833054	 add         r3, r3, #0x54
  00294	e5832000	 str         r2, [r3]

; 88   :             m_dwNormalPA += CPHYSMEM_MEMORY_ALIGNMENT - dwOffset;

  00298	e59d3048	 ldr         r3, [sp, #0x48]
  0029c	e2831050	 add         r1, r3, #0x50
  002a0	e59d3004	 ldr         r3, [sp, #4]
  002a4	e2632020	 rsb         r2, r3, #0x20
  002a8	e5913000	 ldr         r3, [r1]
  002ac	e0832002	 add         r2, r3, r2
  002b0	e59d3048	 ldr         r3, [sp, #0x48]
  002b4	e2833050	 add         r3, r3, #0x50
  002b8	e5832000	 str         r2, [r3]

; 89   :             cbSize -= CPHYSMEM_MEMORY_ALIGNMENT - dwOffset;

  002bc	e59d3004	 ldr         r3, [sp, #4]
  002c0	e2632020	 rsb         r2, r3, #0x20
  002c4	e59d304c	 ldr         r3, [sp, #0x4C]
  002c8	e0433002	 sub         r3, r3, r2
  002cc	e58d304c	 str         r3, [sp, #0x4C]
  002d0		 |$LN1@CPhysMem|

; 90   :         }
; 91   :     }
; 92   :     
; 93   :     m_dwTotalPhysMemSize = cbSize;

  002d0	e59d3048	 ldr         r3, [sp, #0x48]
  002d4	e2832038	 add         r2, r3, #0x38
  002d8	e59d304c	 ldr         r3, [sp, #0x4C]
  002dc	e5823000	 str         r3, [r2]

; 94   :     m_PaVaConversion = m_dwNormalPA - m_dwNormalVA;

  002e0	e59d3048	 ldr         r3, [sp, #0x48]
  002e4	e2832050	 add         r2, r3, #0x50
  002e8	e59d3048	 ldr         r3, [sp, #0x48]
  002ec	e2833054	 add         r3, r3, #0x54
  002f0	e5922000	 ldr         r2, [r2]
  002f4	e5933000	 ldr         r3, [r3]
  002f8	e0422003	 sub         r2, r2, r3
  002fc	e59d3048	 ldr         r3, [sp, #0x48]
  00300	e2833034	 add         r3, r3, #0x34
  00304	e5832000	 str         r2, [r3]

; 95   :     
; 96   :     DEBUGMSG(ZONE_INIT,
; 97   :         (TEXT("CPhysMem   Total Alloc Region PhysAddr = 0x%08X, VirtAddr = 0x%08X, size = %d\r\n"),
; 98   :         m_dwNormalPA, m_dwNormalVA, m_dwTotalPhysMemSize));

  00308	e59f3364	 ldr         r3, [pc, #0x364]
  0030c	e5933440	 ldr         r3, [r3, #0x440]
  00310	e3130002	 tst         r3, #2
  00314	0a00000d	 beq         |$LN18@CPhysMem|
  00318	e59d3048	 ldr         r3, [sp, #0x48]
  0031c	e2833038	 add         r3, r3, #0x38
  00320	e5933000	 ldr         r3, [r3]
  00324	e59d2048	 ldr         r2, [sp, #0x48]
  00328	e2822054	 add         r2, r2, #0x54
  0032c	e5922000	 ldr         r2, [r2]
  00330	e59d1048	 ldr         r1, [sp, #0x48]
  00334	e2811050	 add         r1, r1, #0x50
  00338	e5911000	 ldr         r1, [r1]
  0033c	e59f033c	 ldr         r0, [pc, #0x33C]
  00340	eb000000	 bl          NKDbgPrintfW
  00344	e3a03001	 mov         r3, #1
  00348	e58d302c	 str         r3, [sp, #0x2C]
  0034c	ea000001	 b           |$LN19@CPhysMem|
  00350		 |$LN18@CPhysMem|
  00350	e3a03000	 mov         r3, #0
  00354	e58d302c	 str         r3, [sp, #0x2C]
  00358		 |$LN19@CPhysMem|

; 99   : 
; 100  :     //
; 101  :     // Set aside a page for the special request.
; 102  :     //
; 103  :     m_dwSpecialVA = (DWORD) m_dwNormalVA;

  00358	e59d3048	 ldr         r3, [sp, #0x48]
  0035c	e2831054	 add         r1, r3, #0x54
  00360	e59d3048	 ldr         r3, [sp, #0x48]
  00364	e2832048	 add         r2, r3, #0x48
  00368	e5913000	 ldr         r3, [r1]
  0036c	e5823000	 str         r3, [r2]

; 104  :     m_dwSpecialPA = (DWORD) m_dwNormalPA;

  00370	e59d3048	 ldr         r3, [sp, #0x48]
  00374	e2831050	 add         r1, r3, #0x50
  00378	e59d3048	 ldr         r3, [sp, #0x48]
  0037c	e2832044	 add         r2, r3, #0x44
  00380	e5913000	 ldr         r3, [r1]
  00384	e5823000	 str         r3, [r2]

; 105  :     m_dwNormalVA += USBPAGESIZE;

  00388	e59d3048	 ldr         r3, [sp, #0x48]
  0038c	e2833054	 add         r3, r3, #0x54
  00390	e5933000	 ldr         r3, [r3]
  00394	e2832a01	 add         r2, r3, #1, 20
  00398	e59d3048	 ldr         r3, [sp, #0x48]
  0039c	e2833054	 add         r3, r3, #0x54
  003a0	e5832000	 str         r2, [r3]

; 106  :     m_dwNormalPA += USBPAGESIZE;

  003a4	e59d3048	 ldr         r3, [sp, #0x48]
  003a8	e2833050	 add         r3, r3, #0x50
  003ac	e5933000	 ldr         r3, [r3]
  003b0	e2832a01	 add         r2, r3, #1, 20
  003b4	e59d3048	 ldr         r3, [sp, #0x48]
  003b8	e2833050	 add         r3, r3, #0x50
  003bc	e5832000	 str         r2, [r3]

; 107  :     cbSize -= USBPAGESIZE;

  003c0	e59d304c	 ldr         r3, [sp, #0x4C]
  003c4	e2433a01	 sub         r3, r3, #1, 20
  003c8	e58d304c	 str         r3, [sp, #0x4C]

; 108  :     m_bSpecialTaken = FALSE;

  003cc	e59d3048	 ldr         r3, [sp, #0x48]
  003d0	e283204c	 add         r2, r3, #0x4C
  003d4	e3a03000	 mov         r3, #0
  003d8	e5823000	 str         r3, [r2]

; 109  :     memset((PVOID) m_dwSpecialVA, 0x00, USBPAGESIZE);

  003dc	e3a02a01	 mov         r2, #1, 20
  003e0	e3a01000	 mov         r1, #0
  003e4	e59d3048	 ldr         r3, [sp, #0x48]
  003e8	e2833048	 add         r3, r3, #0x48
  003ec	e5930000	 ldr         r0, [r3]
  003f0	eb000000	 bl          memset

; 110  : 
; 111  :     DEBUGMSG(ZONE_INIT,
; 112  :         (TEXT("CPhysMem Special Alloc Region PhysAddr = 0x%08X, VirtAddr = 0x%08X, size = %d\r\n"),
; 113  :         m_dwSpecialPA, m_dwSpecialVA, USBPAGESIZE));

  003f4	e59f3278	 ldr         r3, [pc, #0x278]
  003f8	e5933440	 ldr         r3, [r3, #0x440]
  003fc	e3130002	 tst         r3, #2
  00400	0a00000b	 beq         |$LN20@CPhysMem|
  00404	e3a03a01	 mov         r3, #1, 20
  00408	e59d2048	 ldr         r2, [sp, #0x48]
  0040c	e2822048	 add         r2, r2, #0x48
  00410	e5922000	 ldr         r2, [r2]
  00414	e59d1048	 ldr         r1, [sp, #0x48]
  00418	e2811044	 add         r1, r1, #0x44
  0041c	e5911000	 ldr         r1, [r1]
  00420	e59f0254	 ldr         r0, [pc, #0x254]
  00424	eb000000	 bl          NKDbgPrintfW
  00428	e3a03001	 mov         r3, #1
  0042c	e58d3030	 str         r3, [sp, #0x30]
  00430	ea000001	 b           |$LN21@CPhysMem|
  00434		 |$LN20@CPhysMem|
  00434	e3a03000	 mov         r3, #0
  00438	e58d3030	 str         r3, [sp, #0x30]
  0043c		 |$LN21@CPhysMem|

; 114  : 
; 115  :     //
; 116  :     // Set aside the High Priority region.
; 117  :     //
; 118  :     m_dwHighPriorityVA = (DWORD) m_dwNormalVA;

  0043c	e59d3048	 ldr         r3, [sp, #0x48]
  00440	e2831054	 add         r1, r3, #0x54
  00444	e59d3048	 ldr         r3, [sp, #0x48]
  00448	e2832068	 add         r2, r3, #0x68
  0044c	e5913000	 ldr         r3, [r1]
  00450	e5823000	 str         r3, [r2]

; 119  :     m_dwHighPriorityPA = (DWORD) m_dwNormalPA;

  00454	e59d3048	 ldr         r3, [sp, #0x48]
  00458	e2831050	 add         r1, r3, #0x50
  0045c	e59d3048	 ldr         r3, [sp, #0x48]
  00460	e2832064	 add         r2, r3, #0x64
  00464	e5913000	 ldr         r3, [r1]
  00468	e5823000	 str         r3, [r2]

; 120  :     m_dwNormalVA += cbHighPrioritySize;

  0046c	e59d3048	 ldr         r3, [sp, #0x48]
  00470	e2833054	 add         r3, r3, #0x54
  00474	e5932000	 ldr         r2, [r3]
  00478	e59d3050	 ldr         r3, [sp, #0x50]
  0047c	e0822003	 add         r2, r2, r3
  00480	e59d3048	 ldr         r3, [sp, #0x48]
  00484	e2833054	 add         r3, r3, #0x54
  00488	e5832000	 str         r2, [r3]

; 121  :     m_dwNormalPA += cbHighPrioritySize;

  0048c	e59d3048	 ldr         r3, [sp, #0x48]
  00490	e2833050	 add         r3, r3, #0x50
  00494	e5932000	 ldr         r2, [r3]
  00498	e59d3050	 ldr         r3, [sp, #0x50]
  0049c	e0822003	 add         r2, r2, r3
  004a0	e59d3048	 ldr         r3, [sp, #0x48]
  004a4	e2833050	 add         r3, r3, #0x50
  004a8	e5832000	 str         r2, [r3]

; 122  :     cbSize -= cbHighPrioritySize;

  004ac	e59d204c	 ldr         r2, [sp, #0x4C]
  004b0	e59d3050	 ldr         r3, [sp, #0x50]
  004b4	e0423003	 sub         r3, r2, r3
  004b8	e58d304c	 str         r3, [sp, #0x4C]

; 123  :     m_dwHighPrioritySize = cbHighPrioritySize;

  004bc	e59d3048	 ldr         r3, [sp, #0x48]
  004c0	e283206c	 add         r2, r3, #0x6C
  004c4	e59d3050	 ldr         r3, [sp, #0x50]
  004c8	e5823000	 str         r3, [r2]

; 124  :     memset((PVOID) m_dwHighPriorityVA, 0x00, m_dwHighPrioritySize);

  004cc	e59d3048	 ldr         r3, [sp, #0x48]
  004d0	e283306c	 add         r3, r3, #0x6C
  004d4	e5932000	 ldr         r2, [r3]
  004d8	e3a01000	 mov         r1, #0
  004dc	e59d3048	 ldr         r3, [sp, #0x48]
  004e0	e2833068	 add         r3, r3, #0x68
  004e4	e5930000	 ldr         r0, [r3]
  004e8	eb000000	 bl          memset

; 125  : 
; 126  :     DEBUGMSG(ZONE_INIT,
; 127  :         (TEXT("CPhysMem HighPri Alloc Region PhysAddr = 0x%08X, VirtAddr = 0x%08X, size = %d\r\n"),
; 128  :         m_dwHighPriorityPA, m_dwHighPriorityVA, m_dwHighPrioritySize));

  004ec	e59f3180	 ldr         r3, [pc, #0x180]
  004f0	e5933440	 ldr         r3, [r3, #0x440]
  004f4	e3130002	 tst         r3, #2
  004f8	0a00000d	 beq         |$LN22@CPhysMem|
  004fc	e59d3048	 ldr         r3, [sp, #0x48]
  00500	e283306c	 add         r3, r3, #0x6C
  00504	e5933000	 ldr         r3, [r3]
  00508	e59d2048	 ldr         r2, [sp, #0x48]
  0050c	e2822068	 add         r2, r2, #0x68
  00510	e5922000	 ldr         r2, [r2]
  00514	e59d1048	 ldr         r1, [sp, #0x48]
  00518	e2811064	 add         r1, r1, #0x64
  0051c	e5911000	 ldr         r1, [r1]
  00520	e59f0150	 ldr         r0, [pc, #0x150]
  00524	eb000000	 bl          NKDbgPrintfW
  00528	e3a03001	 mov         r3, #1
  0052c	e58d3034	 str         r3, [sp, #0x34]
  00530	ea000001	 b           |$LN23@CPhysMem|
  00534		 |$LN22@CPhysMem|
  00534	e3a03000	 mov         r3, #0
  00538	e58d3034	 str         r3, [sp, #0x34]
  0053c		 |$LN23@CPhysMem|

; 129  : 
; 130  :     //
; 131  :     // And the rest is for normal allocations.
; 132  :     //
; 133  :     m_dwNormalSize = cbSize;

  0053c	e59d3048	 ldr         r3, [sp, #0x48]
  00540	e2832058	 add         r2, r3, #0x58
  00544	e59d304c	 ldr         r3, [sp, #0x4C]
  00548	e5823000	 str         r3, [r2]

; 134  :     memset((PVOID) m_dwNormalVA, 0x00, m_dwNormalSize);

  0054c	e59d3048	 ldr         r3, [sp, #0x48]
  00550	e2833058	 add         r3, r3, #0x58
  00554	e5932000	 ldr         r2, [r3]
  00558	e3a01000	 mov         r1, #0
  0055c	e59d3048	 ldr         r3, [sp, #0x48]
  00560	e2833054	 add         r3, r3, #0x54
  00564	e5930000	 ldr         r0, [r3]
  00568	eb000000	 bl          memset

; 135  :     
; 136  :     DEBUGMSG(ZONE_INIT,
; 137  :         (TEXT("CPhysMem  Normal Alloc Region PhysAddr = 0x%08X, VirtAddr = 0x%08X, size = %d\r\n"),
; 138  :         m_dwNormalPA, m_dwNormalVA, m_dwNormalSize));

  0056c	e59f3100	 ldr         r3, [pc, #0x100]
  00570	e5933440	 ldr         r3, [r3, #0x440]
  00574	e3130002	 tst         r3, #2
  00578	0a00000d	 beq         |$LN24@CPhysMem|
  0057c	e59d3048	 ldr         r3, [sp, #0x48]
  00580	e2833058	 add         r3, r3, #0x58
  00584	e5933000	 ldr         r3, [r3]
  00588	e59d2048	 ldr         r2, [sp, #0x48]
  0058c	e2822054	 add         r2, r2, #0x54
  00590	e5922000	 ldr         r2, [r2]
  00594	e59d1048	 ldr         r1, [sp, #0x48]
  00598	e2811050	 add         r1, r1, #0x50
  0059c	e5911000	 ldr         r1, [r1]
  005a0	e59f00c8	 ldr         r0, [pc, #0xC8]
  005a4	eb000000	 bl          NKDbgPrintfW
  005a8	e3a03001	 mov         r3, #1
  005ac	e58d3038	 str         r3, [sp, #0x38]
  005b0	ea000001	 b           |$LN25@CPhysMem|
  005b4		 |$LN24@CPhysMem|
  005b4	e3a03000	 mov         r3, #0
  005b8	e58d3038	 str         r3, [sp, #0x38]
  005bc		 |$LN25@CPhysMem|

; 139  : 
; 140  : 
; 141  : 
; 142  :     m_hFreeMemEvent = CreateEvent(NULL, TRUE, FALSE, NULL);

  005bc	e3a03000	 mov         r3, #0
  005c0	e3a02000	 mov         r2, #0
  005c4	e3a01001	 mov         r1, #1
  005c8	e3a00000	 mov         r0, #0
  005cc	eb000000	 bl          CreateEventW
  005d0	e58d003c	 str         r0, [sp, #0x3C]
  005d4	e59d3048	 ldr         r3, [sp, #0x48]
  005d8	e283202c	 add         r2, r3, #0x2C
  005dc	e59d303c	 ldr         r3, [sp, #0x3C]
  005e0	e5823000	 str         r3, [r2]

; 143  :     m_fHasBlocked = FALSE;

  005e4	e59d3048	 ldr         r3, [sp, #0x48]
  005e8	e2832030	 add         r2, r3, #0x30
  005ec	e3a03000	 mov         r3, #0
  005f0	e5823000	 str         r3, [r2]

; 144  :     InitializeCriticalSection(&m_csLock);

  005f4	e59d3048	 ldr         r3, [sp, #0x48]
  005f8	e2830010	 add         r0, r3, #0x10
  005fc	eb000000	 bl          InitializeCriticalSection

; 145  : 
; 146  :     m_pInUseListHead = NULL;

  00600	e59d3048	 ldr         r3, [sp, #0x48]
  00604	e2832060	 add         r2, r3, #0x60
  00608	e3a03000	 mov         r3, #0
  0060c	e5823000	 str         r3, [r2]

; 147  :     m_pFreeListHead = NULL;

  00610	e59d3048	 ldr         r3, [sp, #0x48]
  00614	e283205c	 add         r2, r3, #0x5C
  00618	e3a03000	 mov         r3, #0
  0061c	e5823000	 str         r3, [r2]

; 148  :     m_pHighPriorityInUseListHead = NULL;

  00620	e59d3048	 ldr         r3, [sp, #0x48]
  00624	e2832070	 add         r2, r3, #0x70
  00628	e3a03000	 mov         r3, #0
  0062c	e5823000	 str         r3, [r2]

; 149  :     m_pHighPriorityFreeListHead = NULL;

  00630	e59d3048	 ldr         r3, [sp, #0x48]
  00634	e2832074	 add         r2, r3, #0x74
  00638	e3a03000	 mov         r3, #0
  0063c	e5823000	 str         r3, [r2]

; 150  :     m_pNodeFreeListHead = NULL;

  00640	e59d3048	 ldr         r3, [sp, #0x48]
  00644	e2832040	 add         r2, r3, #0x40
  00648	e3a03000	 mov         r3, #0
  0064c	e5823000	 str         r3, [r2]

; 151  : 
; 152  :     ReInit();

  00650	e59d0048	 ldr         r0, [sp, #0x48]
  00654	eb000000	 bl          |?ReInit@CPhysMem@@QAAXXZ|

; 153  : 
; 154  : }

  00658	e59d3048	 ldr         r3, [sp, #0x48]
  0065c	e58d300c	 str         r3, [sp, #0xC]
  00660	e59d000c	 ldr         r0, [sp, #0xC]
  00664	e28dd040	 add         sp, sp, #0x40
  00668	e89d6000	 ldmia       sp, {sp, lr}
  0066c	e12fff1e	 bx          lr
  00670		 |$LN29@CPhysMem|
  00670		 |$LN30@CPhysMem|
  00670	00000000	 DCD         |??_C@_1KA@FJCCGHGB@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AA?5?$AAN?$AAo?$AAr?$AAm?$AAa?$AAl?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@|
  00674		 |$LN31@CPhysMem|
  00674	00000000	 DCD         |dpCurSettings|
  00678		 |$LN32@CPhysMem|
  00678	00000000	 DCD         |??_C@_1KA@PJOEMMCM@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAH?$AAi?$AAg?$AAh?$AAP?$AAr?$AAi?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@|
  0067c		 |$LN33@CPhysMem|
  0067c	00000000	 DCD         |??_C@_1KA@JBKPJKEP@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAS?$AAp?$AAe?$AAc?$AAi?$AAa?$AAl?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@|
  00680		 |$LN34@CPhysMem|
  00680	00000000	 DCD         |??_C@_1KA@PIBOCLFE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AA?5?$AA?5?$AAT?$AAo?$AAt?$AAa?$AAl?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAR?$AAe?$AAg?$AAi?$AAo?$AAn?$AA?5?$AAP?$AAh@|
  00684		 |$LN35@CPhysMem|
  00684	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  00688		 |$LN36@CPhysMem|
  00688	00000000	 DCD         |??_C@_1KM@IMBMOFHC@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  0068c		 |$LN37@CPhysMem|
  0068c	00000000	 DCD         |??_C@_1FA@ICCPJKCO@?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe@|
  00690		 |$LN38@CPhysMem|
  00690	00000000	 DCD         |??_C@_1EA@LENIGCOC@?$AAD?$AAM?$AAA?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAP?$AAD?$AAD?$AA?$AN?$AA?6?$AA?$AA@|
  00694		 |$LN39@CPhysMem|
  00694	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  00698		 |$M34072|

			 ENDP  ; |??0CPhysMem@@QAA@KKPAE0@Z|, CPhysMem::CPhysMem

	EXPORT	|??_C@_1GE@MMCCLEGJ@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAH?$AAi?$AAg?$AAh?$AAP?$AAr?$AAi?$AA?5?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAH?$AAe?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@NLPJGAMO@?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAH?$AAi?$AAg?$AAh?$AA?5?$AAP?$AAr?$AAi?$AA?5?$AAM?$AAe?$AAm?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?ValidateHeaps@CPhysMem@@AAAHH@Z|	; CPhysMem::ValidateHeaps
	EXPORT	|?InsertNodeBefore@@YAXPAUtMEMLIST@@0@Z| ; InsertNodeBefore
	EXPORT	|?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|	; FirstNode
	EXPORT	|??_C@_1FO@GMLOFHA@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAM?$AAa?$AAi?$AAn?$AA?5?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@BENCJCHP@?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAL?$AAo?$AAw?$AA?5?$AAP?$AAr?$AAi?$AA?5?$AAM?$AAe?$AAm?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JM@GLIPFLD@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAH?$AAi?$AAg?$AAh?$AAP?$AAr?$AAi?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AAH@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IA@BJAEEMDH@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AAH?$AAe?$AAa?$AAd?$AA?5?$AA?$DN?$AA?5?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@PMOPNGBB@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAN?$AAo?$AAd?$AAe?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AAH?$AAe?$AAa?$AAd@| [ DATA ] ; `string'
	EXPORT	|?InitializeListHead@@YAXPAUtMEMLIST@@@Z| ; InitializeListHead
	EXPORT	|?CreateNewNode@CPhysMem@@AAAPAUtMEMLIST@@KKK@Z| ; CPhysMem::CreateNewNode
	EXPORT	|?FreeList@CPhysMem@@AAAHPAPAUtMEMLIST@@@Z| ; CPhysMem::FreeList
	IMPORT	|LeaveCriticalSection|
	IMPORT	|wcscpy|
	IMPORT	|EnterCriticalSection|

  00008			 AREA	 |.pdata|, PDATA
|$T34102| DCD	|$LN26@ReInit|
	DCD	0x40015004

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@MMCCLEGJ@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAH?$AAi?$AAg?$AAh?$AAP?$AAr?$AAi?$AA?5?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAH?$AAe?$AAa@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, " ", 0x0, ":", 0x0, " ", 0x0, "H", 0x0, "i", 0x0, "g"
	DCB	0x0, "h", 0x0, "P", 0x0, "r", 0x0, "i", 0x0, " ", 0x0, "F"
	DCB	0x0, "r", 0x0, "e", 0x0, "e", 0x0, " ", 0x0, "H", 0x0, "e"
	DCB	0x0, "a", 0x0, "p", 0x0, " ", 0x0, "N", 0x0, "o", 0x0, "d"
	DCB	0x0, "e", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@NLPJGAMO@?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAH?$AAi?$AAg?$AAh?$AA?5?$AAP?$AAr?$AAi?$AA?5?$AAM?$AAe?$AAm?$AA?$AA@| DCB "F"
	DCB	0x0, "r", 0x0, "e", 0x0, "e", 0x0, " ", 0x0, "H", 0x0, "i"
	DCB	0x0, "g", 0x0, "h", 0x0, " ", 0x0, "P", 0x0, "r", 0x0, "i"
	DCB	0x0, " ", 0x0, "M", 0x0, "e", 0x0, "m", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@GMLOFHA@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAM?$AAa?$AAi?$AAn?$AA?5?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAN@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, " ", 0x0, ":", 0x0, " ", 0x0, "M", 0x0, "a", 0x0, "i"
	DCB	0x0, "n", 0x0, " ", 0x0, "F", 0x0, "r", 0x0, "e", 0x0, "e"
	DCB	0x0, " ", 0x0, "H", 0x0, "e", 0x0, "a", 0x0, "p", 0x0, " "
	DCB	0x0, "N", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@BENCJCHP@?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAL?$AAo?$AAw?$AA?5?$AAP?$AAr?$AAi?$AA?5?$AAM?$AAe?$AAm?$AA?$AA@| DCB "F"
	DCB	0x0, "r", 0x0, "e", 0x0, "e", 0x0, " ", 0x0, "L", 0x0, "o"
	DCB	0x0, "w", 0x0, " ", 0x0, "P", 0x0, "r", 0x0, "i", 0x0, " "
	DCB	0x0, "M", 0x0, "e", 0x0, "m", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JM@GLIPFLD@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAH?$AAi?$AAg?$AAh?$AAP?$AAr?$AAi?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AAH@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, " ", 0x0, ":", 0x0, " ", 0x0, "H", 0x0, "i", 0x0, "g"
	DCB	0x0, "h", 0x0, "P", 0x0, "r", 0x0, "i", 0x0, "F", 0x0, "r"
	DCB	0x0, "e", 0x0, "e", 0x0, "L", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "H", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, ",", 0x0, " ", 0x0, "H", 0x0, "i", 0x0, "g"
	DCB	0x0, "h", 0x0, "P", 0x0, "r", 0x0, "i", 0x0, "I", 0x0, "n"
	DCB	0x0, "U", 0x0, "s", 0x0, "e", 0x0, "L", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "H", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IA@BJAEEMDH@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AAH?$AAe?$AAa?$AAd?$AA?5?$AA?$DN?$AA?5?$AA0@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, " ", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "r", 0x0, "e"
	DCB	0x0, "e", 0x0, "L", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "H"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, ",", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "U", 0x0, "s"
	DCB	0x0, "e", 0x0, "L", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "H"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@PMOPNGBB@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAN?$AAo?$AAd?$AAe?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AAH?$AAe?$AAa?$AAd@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, " ", 0x0, ":", 0x0, " ", 0x0, "N", 0x0, "o", 0x0, "d"
	DCB	0x0, "e", 0x0, "F", 0x0, "r", 0x0, "e", 0x0, "e", 0x0, "L"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "H", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00698			 AREA	 |.text|, CODE, ARM

  00698		 |?ReInit@CPhysMem@@QAAXXZ| PROC	; CPhysMem::ReInit

; 156  : {

  00698		 |$LN26@ReInit|
  00698	e1a0c00d	 mov         r12, sp
  0069c	e92d0001	 stmdb       sp!, {r0}
  006a0	e92d5000	 stmdb       sp!, {r12, lr}
  006a4	e24dd040	 sub         sp, sp, #0x40
  006a8		 |$M34099|

; 157  :     PMEMLIST pNode;
; 158  :     EnterCriticalSection(&m_csLock);

  006a8	e59d3048	 ldr         r3, [sp, #0x48]
  006ac	e2830010	 add         r0, r3, #0x10
  006b0	eb000000	 bl          EnterCriticalSection

; 159  :     //
; 160  :     // Create dummy entries for the list head (simpler linked list code)
; 161  :     //
; 162  :     FreeList(&m_pInUseListHead);

  006b4	e59d3048	 ldr         r3, [sp, #0x48]
  006b8	e2831060	 add         r1, r3, #0x60
  006bc	e59d0048	 ldr         r0, [sp, #0x48]
  006c0	eb000000	 bl          |?FreeList@CPhysMem@@AAAHPAPAUtMEMLIST@@@Z|

; 163  :     FreeList(&m_pFreeListHead);

  006c4	e59d3048	 ldr         r3, [sp, #0x48]
  006c8	e283105c	 add         r1, r3, #0x5C
  006cc	e59d0048	 ldr         r0, [sp, #0x48]
  006d0	eb000000	 bl          |?FreeList@CPhysMem@@AAAHPAPAUtMEMLIST@@@Z|

; 164  :     FreeList(&m_pHighPriorityInUseListHead);

  006d4	e59d3048	 ldr         r3, [sp, #0x48]
  006d8	e2831070	 add         r1, r3, #0x70
  006dc	e59d0048	 ldr         r0, [sp, #0x48]
  006e0	eb000000	 bl          |?FreeList@CPhysMem@@AAAHPAPAUtMEMLIST@@@Z|

; 165  :     FreeList(&m_pHighPriorityFreeListHead);

  006e4	e59d3048	 ldr         r3, [sp, #0x48]
  006e8	e2831074	 add         r1, r3, #0x74
  006ec	e59d0048	 ldr         r0, [sp, #0x48]
  006f0	eb000000	 bl          |?FreeList@CPhysMem@@AAAHPAPAUtMEMLIST@@@Z|

; 166  :     FreeList(&m_pNodeFreeListHead);

  006f4	e59d3048	 ldr         r3, [sp, #0x48]
  006f8	e2831040	 add         r1, r3, #0x40
  006fc	e59d0048	 ldr         r0, [sp, #0x48]
  00700	eb000000	 bl          |?FreeList@CPhysMem@@AAAHPAPAUtMEMLIST@@@Z|

; 167  :     
; 168  :     m_pNodeFreeListHead = CreateNewNode(0, 0, 0);

  00704	e3a03000	 mov         r3, #0
  00708	e3a02000	 mov         r2, #0
  0070c	e3a01000	 mov         r1, #0
  00710	e59d0048	 ldr         r0, [sp, #0x48]
  00714	eb000000	 bl          |?CreateNewNode@CPhysMem@@AAAPAUtMEMLIST@@KKK@Z|
  00718	e58d0004	 str         r0, [sp, #4]
  0071c	e59d3048	 ldr         r3, [sp, #0x48]
  00720	e2832040	 add         r2, r3, #0x40
  00724	e59d3004	 ldr         r3, [sp, #4]
  00728	e5823000	 str         r3, [r2]

; 169  :     if (m_pNodeFreeListHead) InitializeListHead(m_pNodeFreeListHead);

  0072c	e59d3048	 ldr         r3, [sp, #0x48]
  00730	e2833040	 add         r3, r3, #0x40
  00734	e5933000	 ldr         r3, [r3]
  00738	e3530000	 cmp         r3, #0
  0073c	0a000003	 beq         |$LN9@ReInit|
  00740	e59d3048	 ldr         r3, [sp, #0x48]
  00744	e2833040	 add         r3, r3, #0x40
  00748	e5930000	 ldr         r0, [r3]
  0074c	eb000000	 bl          |?InitializeListHead@@YAXPAUtMEMLIST@@@Z|
  00750		 |$LN9@ReInit|

; 170  : 
; 171  :     DEBUGMSG(ZONE_CPHYSMEM && ZONE_VERBOSE, (TEXT("CPhysMem Init : NodeFreeListHead = 0x%08X\r\n"),
; 172  :                           m_pNodeFreeListHead));

  00750	e59f3464	 ldr         r3, [pc, #0x464]
  00754	e5933440	 ldr         r3, [r3, #0x440]
  00758	e3130b02	 tst         r3, #2, 22
  0075c	0a00000b	 beq         |$LN12@ReInit|
  00760	e59f3454	 ldr         r3, [pc, #0x454]
  00764	e5933440	 ldr         r3, [r3, #0x440]
  00768	e3130a01	 tst         r3, #1, 20
  0076c	0a000007	 beq         |$LN12@ReInit|
  00770	e59d3048	 ldr         r3, [sp, #0x48]
  00774	e2833040	 add         r3, r3, #0x40
  00778	e5931000	 ldr         r1, [r3]
  0077c	e59f0450	 ldr         r0, [pc, #0x450]
  00780	eb000000	 bl          NKDbgPrintfW
  00784	e3a03001	 mov         r3, #1
  00788	e58d3008	 str         r3, [sp, #8]
  0078c	ea000001	 b           |$LN13@ReInit|
  00790		 |$LN12@ReInit|
  00790	e3a03000	 mov         r3, #0
  00794	e58d3008	 str         r3, [sp, #8]
  00798		 |$LN13@ReInit|

; 173  :     
; 174  :     m_pFreeListHead = CreateNewNode(0, 0, 0);

  00798	e3a03000	 mov         r3, #0
  0079c	e3a02000	 mov         r2, #0
  007a0	e3a01000	 mov         r1, #0
  007a4	e59d0048	 ldr         r0, [sp, #0x48]
  007a8	eb000000	 bl          |?CreateNewNode@CPhysMem@@AAAPAUtMEMLIST@@KKK@Z|
  007ac	e58d000c	 str         r0, [sp, #0xC]
  007b0	e59d3048	 ldr         r3, [sp, #0x48]
  007b4	e283205c	 add         r2, r3, #0x5C
  007b8	e59d300c	 ldr         r3, [sp, #0xC]
  007bc	e5823000	 str         r3, [r2]

; 175  :     if (m_pFreeListHead) InitializeListHead(m_pFreeListHead);

  007c0	e59d3048	 ldr         r3, [sp, #0x48]
  007c4	e283305c	 add         r3, r3, #0x5C
  007c8	e5933000	 ldr         r3, [r3]
  007cc	e3530000	 cmp         r3, #0
  007d0	0a000003	 beq         |$LN8@ReInit|
  007d4	e59d3048	 ldr         r3, [sp, #0x48]
  007d8	e283305c	 add         r3, r3, #0x5C
  007dc	e5930000	 ldr         r0, [r3]
  007e0	eb000000	 bl          |?InitializeListHead@@YAXPAUtMEMLIST@@@Z|
  007e4		 |$LN8@ReInit|

; 176  : 
; 177  :     m_pInUseListHead = CreateNewNode(0, 0, 0);

  007e4	e3a03000	 mov         r3, #0
  007e8	e3a02000	 mov         r2, #0
  007ec	e3a01000	 mov         r1, #0
  007f0	e59d0048	 ldr         r0, [sp, #0x48]
  007f4	eb000000	 bl          |?CreateNewNode@CPhysMem@@AAAPAUtMEMLIST@@KKK@Z|
  007f8	e58d0010	 str         r0, [sp, #0x10]
  007fc	e59d3048	 ldr         r3, [sp, #0x48]
  00800	e2832060	 add         r2, r3, #0x60
  00804	e59d3010	 ldr         r3, [sp, #0x10]
  00808	e5823000	 str         r3, [r2]

; 178  :     if (m_pInUseListHead) InitializeListHead(m_pInUseListHead);

  0080c	e59d3048	 ldr         r3, [sp, #0x48]
  00810	e2833060	 add         r3, r3, #0x60
  00814	e5933000	 ldr         r3, [r3]
  00818	e3530000	 cmp         r3, #0
  0081c	0a000003	 beq         |$LN7@ReInit|
  00820	e59d3048	 ldr         r3, [sp, #0x48]
  00824	e2833060	 add         r3, r3, #0x60
  00828	e5930000	 ldr         r0, [r3]
  0082c	eb000000	 bl          |?InitializeListHead@@YAXPAUtMEMLIST@@@Z|
  00830		 |$LN7@ReInit|

; 179  :     
; 180  : 
; 181  :     DEBUGMSG(ZONE_CPHYSMEM && ZONE_VERBOSE, (TEXT("CPhysMem Init : FreeListHead = 0x%08X, InUseListHead = 0x%08X\r\n"), m_pFreeListHead, m_pInUseListHead));

  00830	e59f3384	 ldr         r3, [pc, #0x384]
  00834	e5933440	 ldr         r3, [r3, #0x440]
  00838	e3130b02	 tst         r3, #2, 22
  0083c	0a00000e	 beq         |$LN14@ReInit|
  00840	e59f3374	 ldr         r3, [pc, #0x374]
  00844	e5933440	 ldr         r3, [r3, #0x440]
  00848	e3130a01	 tst         r3, #1, 20
  0084c	0a00000a	 beq         |$LN14@ReInit|
  00850	e59d3048	 ldr         r3, [sp, #0x48]
  00854	e2833060	 add         r3, r3, #0x60
  00858	e5932000	 ldr         r2, [r3]
  0085c	e59d3048	 ldr         r3, [sp, #0x48]
  00860	e283305c	 add         r3, r3, #0x5C
  00864	e5931000	 ldr         r1, [r3]
  00868	e59f0360	 ldr         r0, [pc, #0x360]
  0086c	eb000000	 bl          NKDbgPrintfW
  00870	e3a03001	 mov         r3, #1
  00874	e58d3014	 str         r3, [sp, #0x14]
  00878	ea000001	 b           |$LN15@ReInit|
  0087c		 |$LN14@ReInit|
  0087c	e3a03000	 mov         r3, #0
  00880	e58d3014	 str         r3, [sp, #0x14]
  00884		 |$LN15@ReInit|

; 182  : 
; 183  :     m_pHighPriorityFreeListHead = CreateNewNode(0, 0, 0);

  00884	e3a03000	 mov         r3, #0
  00888	e3a02000	 mov         r2, #0
  0088c	e3a01000	 mov         r1, #0
  00890	e59d0048	 ldr         r0, [sp, #0x48]
  00894	eb000000	 bl          |?CreateNewNode@CPhysMem@@AAAPAUtMEMLIST@@KKK@Z|
  00898	e58d0018	 str         r0, [sp, #0x18]
  0089c	e59d3048	 ldr         r3, [sp, #0x48]
  008a0	e2832074	 add         r2, r3, #0x74
  008a4	e59d3018	 ldr         r3, [sp, #0x18]
  008a8	e5823000	 str         r3, [r2]

; 184  :     if (m_pHighPriorityFreeListHead) InitializeListHead(m_pHighPriorityFreeListHead);

  008ac	e59d3048	 ldr         r3, [sp, #0x48]
  008b0	e2833074	 add         r3, r3, #0x74
  008b4	e5933000	 ldr         r3, [r3]
  008b8	e3530000	 cmp         r3, #0
  008bc	0a000003	 beq         |$LN6@ReInit|
  008c0	e59d3048	 ldr         r3, [sp, #0x48]
  008c4	e2833074	 add         r3, r3, #0x74
  008c8	e5930000	 ldr         r0, [r3]
  008cc	eb000000	 bl          |?InitializeListHead@@YAXPAUtMEMLIST@@@Z|
  008d0		 |$LN6@ReInit|

; 185  : 
; 186  :     m_pHighPriorityInUseListHead = CreateNewNode(0, 0, 0);

  008d0	e3a03000	 mov         r3, #0
  008d4	e3a02000	 mov         r2, #0
  008d8	e3a01000	 mov         r1, #0
  008dc	e59d0048	 ldr         r0, [sp, #0x48]
  008e0	eb000000	 bl          |?CreateNewNode@CPhysMem@@AAAPAUtMEMLIST@@KKK@Z|
  008e4	e58d001c	 str         r0, [sp, #0x1C]
  008e8	e59d3048	 ldr         r3, [sp, #0x48]
  008ec	e2832070	 add         r2, r3, #0x70
  008f0	e59d301c	 ldr         r3, [sp, #0x1C]
  008f4	e5823000	 str         r3, [r2]

; 187  :     if (m_pHighPriorityInUseListHead) InitializeListHead(m_pHighPriorityInUseListHead);

  008f8	e59d3048	 ldr         r3, [sp, #0x48]
  008fc	e2833070	 add         r3, r3, #0x70
  00900	e5933000	 ldr         r3, [r3]
  00904	e3530000	 cmp         r3, #0
  00908	0a000003	 beq         |$LN5@ReInit|
  0090c	e59d3048	 ldr         r3, [sp, #0x48]
  00910	e2833070	 add         r3, r3, #0x70
  00914	e5930000	 ldr         r0, [r3]
  00918	eb000000	 bl          |?InitializeListHead@@YAXPAUtMEMLIST@@@Z|
  0091c		 |$LN5@ReInit|

; 188  : 
; 189  :     DEBUGMSG(ZONE_CPHYSMEM && ZONE_VERBOSE, (TEXT("CPhysMem Init : HighPriFreeListHead = 0x%08X, HighPriInUseListHead = 0x%08X\r\n"),
; 190  :                           m_pHighPriorityFreeListHead, m_pHighPriorityInUseListHead));

  0091c	e59f3298	 ldr         r3, [pc, #0x298]
  00920	e5933440	 ldr         r3, [r3, #0x440]
  00924	e3130b02	 tst         r3, #2, 22
  00928	0a00000e	 beq         |$LN16@ReInit|
  0092c	e59f3288	 ldr         r3, [pc, #0x288]
  00930	e5933440	 ldr         r3, [r3, #0x440]
  00934	e3130a01	 tst         r3, #1, 20
  00938	0a00000a	 beq         |$LN16@ReInit|
  0093c	e59d3048	 ldr         r3, [sp, #0x48]
  00940	e2833070	 add         r3, r3, #0x70
  00944	e5932000	 ldr         r2, [r3]
  00948	e59d3048	 ldr         r3, [sp, #0x48]
  0094c	e2833074	 add         r3, r3, #0x74
  00950	e5931000	 ldr         r1, [r3]
  00954	e59f0270	 ldr         r0, [pc, #0x270]
  00958	eb000000	 bl          NKDbgPrintfW
  0095c	e3a03001	 mov         r3, #1
  00960	e58d3020	 str         r3, [sp, #0x20]
  00964	ea000001	 b           |$LN17@ReInit|
  00968		 |$LN16@ReInit|
  00968	e3a03000	 mov         r3, #0
  0096c	e58d3020	 str         r3, [sp, #0x20]
  00970		 |$LN17@ReInit|

; 191  : 
; 192  :     // Send an alert if we're being constructed under OOM conditions.
; 193  :     m_fInitted =
; 194  :         (m_pNodeFreeListHead && m_pFreeListHead && m_pInUseListHead &&
; 195  :          m_pHighPriorityFreeListHead && m_pHighPriorityInUseListHead);

  00970	e59d3048	 ldr         r3, [sp, #0x48]
  00974	e2833040	 add         r3, r3, #0x40
  00978	e5933000	 ldr         r3, [r3]
  0097c	e3530000	 cmp         r3, #0
  00980	0a000016	 beq         |$LN18@ReInit|
  00984	e59d3048	 ldr         r3, [sp, #0x48]
  00988	e283305c	 add         r3, r3, #0x5C
  0098c	e5933000	 ldr         r3, [r3]
  00990	e3530000	 cmp         r3, #0
  00994	0a000011	 beq         |$LN18@ReInit|
  00998	e59d3048	 ldr         r3, [sp, #0x48]
  0099c	e2833060	 add         r3, r3, #0x60
  009a0	e5933000	 ldr         r3, [r3]
  009a4	e3530000	 cmp         r3, #0
  009a8	0a00000c	 beq         |$LN18@ReInit|
  009ac	e59d3048	 ldr         r3, [sp, #0x48]
  009b0	e2833074	 add         r3, r3, #0x74
  009b4	e5933000	 ldr         r3, [r3]
  009b8	e3530000	 cmp         r3, #0
  009bc	0a000007	 beq         |$LN18@ReInit|
  009c0	e59d3048	 ldr         r3, [sp, #0x48]
  009c4	e2833070	 add         r3, r3, #0x70
  009c8	e5933000	 ldr         r3, [r3]
  009cc	e3530000	 cmp         r3, #0
  009d0	0a000002	 beq         |$LN18@ReInit|
  009d4	e3a03001	 mov         r3, #1
  009d8	e58d3024	 str         r3, [sp, #0x24]
  009dc	ea000001	 b           |$LN19@ReInit|
  009e0		 |$LN18@ReInit|
  009e0	e3a03000	 mov         r3, #0
  009e4	e58d3024	 str         r3, [sp, #0x24]
  009e8		 |$LN19@ReInit|
  009e8	e59d3048	 ldr         r3, [sp, #0x48]
  009ec	e2832024	 add         r2, r3, #0x24
  009f0	e59d3024	 ldr         r3, [sp, #0x24]
  009f4	e5823000	 str         r3, [r2]

; 196  : 
; 197  :     //
; 198  :     // One big chunk on the free list to start things off.
; 199  :     //
; 200  :     pNode = CreateNewNode(m_dwNormalSize, m_dwNormalVA, m_dwNormalPA);

  009f8	e59d3048	 ldr         r3, [sp, #0x48]
  009fc	e2833050	 add         r3, r3, #0x50
  00a00	e5933000	 ldr         r3, [r3]
  00a04	e59d2048	 ldr         r2, [sp, #0x48]
  00a08	e2822054	 add         r2, r2, #0x54
  00a0c	e5922000	 ldr         r2, [r2]
  00a10	e59d1048	 ldr         r1, [sp, #0x48]
  00a14	e2811058	 add         r1, r1, #0x58
  00a18	e5911000	 ldr         r1, [r1]
  00a1c	e59d0048	 ldr         r0, [sp, #0x48]
  00a20	eb000000	 bl          |?CreateNewNode@CPhysMem@@AAAPAUtMEMLIST@@KKK@Z|
  00a24	e58d0028	 str         r0, [sp, #0x28]
  00a28	e59d3028	 ldr         r3, [sp, #0x28]
  00a2c	e58d3000	 str         r3, [sp]

; 201  :     if (pNode) {

  00a30	e59d3000	 ldr         r3, [sp]
  00a34	e3530000	 cmp         r3, #0
  00a38	0a00001f	 beq         |$LN4@ReInit|

; 202  : #ifdef DEBUG
; 203  :         _tcscpy( pNode->szDescription, TEXT("Free Low Pri Mem") );

  00a3c	e59f1184	 ldr         r1, [pc, #0x184]
  00a40	e59d3000	 ldr         r3, [sp]
  00a44	e2830014	 add         r0, r3, #0x14
  00a48	eb000000	 bl          wcscpy

; 204  : #endif // DEBUG
; 205  :     
; 206  :         DEBUGMSG(ZONE_CPHYSMEM && ZONE_VERBOSE, (TEXT("CPhysMem Init : Main Free Heap Node = 0x%08X\r\n"), pNode));

  00a4c	e59f3168	 ldr         r3, [pc, #0x168]
  00a50	e5933440	 ldr         r3, [r3, #0x440]
  00a54	e3130b02	 tst         r3, #2, 22
  00a58	0a000009	 beq         |$LN20@ReInit|
  00a5c	e59f3158	 ldr         r3, [pc, #0x158]
  00a60	e5933440	 ldr         r3, [r3, #0x440]
  00a64	e3130a01	 tst         r3, #1, 20
  00a68	0a000005	 beq         |$LN20@ReInit|
  00a6c	e59d1000	 ldr         r1, [sp]
  00a70	e59f014c	 ldr         r0, [pc, #0x14C]
  00a74	eb000000	 bl          NKDbgPrintfW
  00a78	e3a03001	 mov         r3, #1
  00a7c	e58d302c	 str         r3, [sp, #0x2C]
  00a80	ea000001	 b           |$LN21@ReInit|
  00a84		 |$LN20@ReInit|
  00a84	e3a03000	 mov         r3, #0
  00a88	e58d302c	 str         r3, [sp, #0x2C]
  00a8c		 |$LN21@ReInit|

; 207  :     
; 208  :         InsertNodeBefore(pNode, FirstNode(m_pFreeListHead));

  00a8c	e59d3048	 ldr         r3, [sp, #0x48]
  00a90	e283305c	 add         r3, r3, #0x5C
  00a94	e5930000	 ldr         r0, [r3]
  00a98	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  00a9c	e58d0030	 str         r0, [sp, #0x30]
  00aa0	e59d1030	 ldr         r1, [sp, #0x30]
  00aa4	e59d0000	 ldr         r0, [sp]
  00aa8	eb000000	 bl          |?InsertNodeBefore@@YAXPAUtMEMLIST@@0@Z|

; 209  : 
; 210  :         VALIDATE_HEAPS(FALSE);

  00aac	e3a01000	 mov         r1, #0
  00ab0	e59d0048	 ldr         r0, [sp, #0x48]
  00ab4	eb000000	 bl          |?ValidateHeaps@CPhysMem@@AAAHH@Z|

; 211  :     } else

  00ab8	ea000003	 b           |$LN3@ReInit|
  00abc		 |$LN4@ReInit|

; 212  :         m_fInitted = FALSE;

  00abc	e59d3048	 ldr         r3, [sp, #0x48]
  00ac0	e2832024	 add         r2, r3, #0x24
  00ac4	e3a03000	 mov         r3, #0
  00ac8	e5823000	 str         r3, [r2]
  00acc		 |$LN3@ReInit|

; 213  :     
; 214  :     //
; 215  :     // Same thing for High Priority Region
; 216  :     //
; 217  :     pNode = CreateNewNode(m_dwHighPrioritySize, m_dwHighPriorityVA, m_dwHighPriorityPA);

  00acc	e59d3048	 ldr         r3, [sp, #0x48]
  00ad0	e2833064	 add         r3, r3, #0x64
  00ad4	e5933000	 ldr         r3, [r3]
  00ad8	e59d2048	 ldr         r2, [sp, #0x48]
  00adc	e2822068	 add         r2, r2, #0x68
  00ae0	e5922000	 ldr         r2, [r2]
  00ae4	e59d1048	 ldr         r1, [sp, #0x48]
  00ae8	e281106c	 add         r1, r1, #0x6C
  00aec	e5911000	 ldr         r1, [r1]
  00af0	e59d0048	 ldr         r0, [sp, #0x48]
  00af4	eb000000	 bl          |?CreateNewNode@CPhysMem@@AAAPAUtMEMLIST@@KKK@Z|
  00af8	e58d0034	 str         r0, [sp, #0x34]
  00afc	e59d3034	 ldr         r3, [sp, #0x34]
  00b00	e58d3000	 str         r3, [sp]

; 218  :     if (pNode) {

  00b04	e59d3000	 ldr         r3, [sp]
  00b08	e3530000	 cmp         r3, #0
  00b0c	0a00001f	 beq         |$LN2@ReInit|

; 219  : #ifdef DEBUG
; 220  :         _tcscpy( pNode->szDescription, TEXT("Free High Pri Mem") );

  00b10	e59f10a8	 ldr         r1, [pc, #0xA8]
  00b14	e59d3000	 ldr         r3, [sp]
  00b18	e2830014	 add         r0, r3, #0x14
  00b1c	eb000000	 bl          wcscpy

; 221  : #endif // DEBUG
; 222  :     
; 223  :         DEBUGMSG(ZONE_CPHYSMEM && ZONE_VERBOSE, (TEXT("CPhysMem Init : HighPri Free Heap Node = 0x%08X\r\n"),
; 224  :                                                  pNode));

  00b20	e59f3094	 ldr         r3, [pc, #0x94]
  00b24	e5933440	 ldr         r3, [r3, #0x440]
  00b28	e3130b02	 tst         r3, #2, 22
  00b2c	0a000009	 beq         |$LN22@ReInit|
  00b30	e59f3084	 ldr         r3, [pc, #0x84]
  00b34	e5933440	 ldr         r3, [r3, #0x440]
  00b38	e3130a01	 tst         r3, #1, 20
  00b3c	0a000005	 beq         |$LN22@ReInit|
  00b40	e59d1000	 ldr         r1, [sp]
  00b44	e59f006c	 ldr         r0, [pc, #0x6C]
  00b48	eb000000	 bl          NKDbgPrintfW
  00b4c	e3a03001	 mov         r3, #1
  00b50	e58d3038	 str         r3, [sp, #0x38]
  00b54	ea000001	 b           |$LN23@ReInit|
  00b58		 |$LN22@ReInit|
  00b58	e3a03000	 mov         r3, #0
  00b5c	e58d3038	 str         r3, [sp, #0x38]
  00b60		 |$LN23@ReInit|

; 225  :     
; 226  :         InsertNodeBefore(pNode, FirstNode(m_pHighPriorityFreeListHead));

  00b60	e59d3048	 ldr         r3, [sp, #0x48]
  00b64	e2833074	 add         r3, r3, #0x74
  00b68	e5930000	 ldr         r0, [r3]
  00b6c	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  00b70	e58d003c	 str         r0, [sp, #0x3C]
  00b74	e59d103c	 ldr         r1, [sp, #0x3C]
  00b78	e59d0000	 ldr         r0, [sp]
  00b7c	eb000000	 bl          |?InsertNodeBefore@@YAXPAUtMEMLIST@@0@Z|

; 227  :     
; 228  :         VALIDATE_HEAPS(TRUE);

  00b80	e3a01001	 mov         r1, #1
  00b84	e59d0048	 ldr         r0, [sp, #0x48]
  00b88	eb000000	 bl          |?ValidateHeaps@CPhysMem@@AAAHH@Z|

; 229  :     } else

  00b8c	ea000003	 b           |$LN1@ReInit|
  00b90		 |$LN2@ReInit|

; 230  :         m_fInitted = FALSE;

  00b90	e59d3048	 ldr         r3, [sp, #0x48]
  00b94	e2832024	 add         r2, r3, #0x24
  00b98	e3a03000	 mov         r3, #0
  00b9c	e5823000	 str         r3, [r2]
  00ba0		 |$LN1@ReInit|

; 231  : 
; 232  :     LeaveCriticalSection(&m_csLock);

  00ba0	e59d3048	 ldr         r3, [sp, #0x48]
  00ba4	e2830010	 add         r0, r3, #0x10
  00ba8	eb000000	 bl          LeaveCriticalSection

; 233  : }

  00bac	e28dd040	 add         sp, sp, #0x40
  00bb0	e89d6000	 ldmia       sp, {sp, lr}
  00bb4	e12fff1e	 bx          lr
  00bb8		 |$LN27@ReInit|
  00bb8		 |$LN28@ReInit|
  00bb8	00000000	 DCD         |??_C@_1GE@MMCCLEGJ@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAH?$AAi?$AAg?$AAh?$AAP?$AAr?$AAi?$AA?5?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAH?$AAe?$AAa@|
  00bbc		 |$LN29@ReInit|
  00bbc	00000000	 DCD         |dpCurSettings|
  00bc0		 |$LN30@ReInit|
  00bc0	00000000	 DCD         |??_C@_1CE@NLPJGAMO@?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAH?$AAi?$AAg?$AAh?$AA?5?$AAP?$AAr?$AAi?$AA?5?$AAM?$AAe?$AAm?$AA?$AA@|
  00bc4		 |$LN31@ReInit|
  00bc4	00000000	 DCD         |??_C@_1FO@GMLOFHA@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAM?$AAa?$AAi?$AAn?$AA?5?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAN@|
  00bc8		 |$LN32@ReInit|
  00bc8	00000000	 DCD         |??_C@_1CC@BENCJCHP@?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAL?$AAo?$AAw?$AA?5?$AAP?$AAr?$AAi?$AA?5?$AAM?$AAe?$AAm?$AA?$AA@|
  00bcc		 |$LN33@ReInit|
  00bcc	00000000	 DCD         |??_C@_1JM@GLIPFLD@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAH?$AAi?$AAg?$AAh?$AAP?$AAr?$AAi?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AAH@|
  00bd0		 |$LN34@ReInit|
  00bd0	00000000	 DCD         |??_C@_1IA@BJAEEMDH@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AAH?$AAe?$AAa?$AAd?$AA?5?$AA?$DN?$AA?5?$AA0@|
  00bd4		 |$LN35@ReInit|
  00bd4	00000000	 DCD         |??_C@_1FI@PMOPNGBB@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?3?$AA?5?$AAN?$AAo?$AAd?$AAe?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AAH?$AAe?$AAa?$AAd@|
  00bd8		 |$M34100|

			 ENDP  ; |?ReInit@CPhysMem@@QAAXXZ|, CPhysMem::ReInit

; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\usb\usb2com\cphysmem.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T34116| DCD	|$LN5@Initialize|
	DCD	0x40000d03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InitializeListHead@@YAXPAUtMEMLIST@@@Z| PROC ; InitializeListHead

; 210  : {

  00000		 |$LN5@Initialize|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M34113|

; 211  :     _ListHead->next = _ListHead->prev = _ListHead;

  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2832010	 add         r2, r3, #0x10
  00014	e59d3008	 ldr         r3, [sp, #8]
  00018	e5823000	 str         r3, [r2]
  0001c	e59d3008	 ldr         r3, [sp, #8]
  00020	e283200c	 add         r2, r3, #0xC
  00024	e59d3008	 ldr         r3, [sp, #8]
  00028	e5823000	 str         r3, [r2]

; 212  : }

  0002c	e89d6000	 ldmia       sp, {sp, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$M34114|

			 ENDP  ; |?InitializeListHead@@YAXPAUtMEMLIST@@@Z|, InitializeListHead


  00000			 AREA	 |.pdata|, PDATA
|$T34124| DCD	|$LN5@FirstNode|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z| PROC ; FirstNode

; 219  : { 

  00000		 |$LN5@FirstNode|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M34121|

; 220  :     return(_ListHead->next); 

  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e283300c	 add         r3, r3, #0xC
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3000	 str         r3, [sp]

; 221  : }

  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M34122|

			 ENDP  ; |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|, FirstNode


  00000			 AREA	 |.pdata|, PDATA
|$T34131| DCD	|$LN5@InsertNode|
	DCD	0x40001903
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InsertNodeBefore@@YAXPAUtMEMLIST@@0@Z| PROC ; InsertNodeBefore

; 241  : {

  00000		 |$LN5@InsertNode|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M34128|

; 242  :     pNodeExisting->prev->next = pNodeNew;

  0000c	e59d300c	 ldr         r3, [sp, #0xC]
  00010	e2833010	 add         r3, r3, #0x10
  00014	e5933000	 ldr         r3, [r3]
  00018	e283200c	 add         r2, r3, #0xC
  0001c	e59d3008	 ldr         r3, [sp, #8]
  00020	e5823000	 str         r3, [r2]

; 243  :     pNodeNew->prev = pNodeExisting->prev;

  00024	e59d300c	 ldr         r3, [sp, #0xC]
  00028	e2831010	 add         r1, r3, #0x10
  0002c	e59d3008	 ldr         r3, [sp, #8]
  00030	e2832010	 add         r2, r3, #0x10
  00034	e5913000	 ldr         r3, [r1]
  00038	e5823000	 str         r3, [r2]

; 244  :     pNodeNew->next = pNodeExisting;

  0003c	e59d3008	 ldr         r3, [sp, #8]
  00040	e283200c	 add         r2, r3, #0xC
  00044	e59d300c	 ldr         r3, [sp, #0xC]
  00048	e5823000	 str         r3, [r2]

; 245  :     pNodeExisting->prev = pNodeNew;

  0004c	e59d300c	 ldr         r3, [sp, #0xC]
  00050	e2832010	 add         r2, r3, #0x10
  00054	e59d3008	 ldr         r3, [sp, #8]
  00058	e5823000	 str         r3, [r2]

; 246  : }

  0005c	e89d6000	 ldmia       sp, {sp, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M34129|

			 ENDP  ; |?InsertNodeBefore@@YAXPAUtMEMLIST@@0@Z|, InsertNodeBefore

	EXPORT	|??_C@_1FG@KBIHBEP@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAN?$AAo?$AAd?$AAe?$AAs?$AA?5?$AAF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@BKCBJCLG@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HI@EIJALODG@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAW?$AAe?$AA?8?$AAv?$AAe?$AA?5?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IK@IOHNCDME@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAF?$AAr?$AAe?$AAe?$AAS?$AAi?$AAz@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@BBFMJBGE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JM@FJJCMIHE@?$AAI?$AAn?$AAU?$AAs?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AA?3?$AA?5?$AAp?$AAN?$AAo?$AAd?$AAe?$AA?5?$AAs?$AAi?$AAz?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@JDBBEPGD@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@LFOBKGBN@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAL?$AAi@| [ DATA ] ; `string'
	EXPORT	|?PaToVa@CPhysMem@@QAAPAEK@Z|		; CPhysMem::PaToVa
	EXPORT	|??_C@_1JK@ENFIOHDK@?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AA?3?$AA?5?$AAp?$AAN?$AAo?$AAd?$AAe?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5@| [ DATA ] ; `string'

  00010			 AREA	 |.pdata|, PDATA
|$T34197| DCD	|$LN77@ValidateHe|
	DCD	0x40026d04
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\usb\usb2com\cphysmem.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@KBIHBEP@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAN?$AAo?$AAd?$AAe?$AAs?$AA?5?$AAF@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "V", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "H", 0x0, "e"
	DCB	0x0, "a", 0x0, "p", 0x0, "s", 0x0, " ", 0x0, ":", 0x0, " "
	DCB	0x0, "N", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, "s", 0x0, " "
	DCB	0x0, "F", 0x0, "r", 0x0, "e", 0x0, "e", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@BKCBJCLG@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "V", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "H", 0x0, "e"
	DCB	0x0, "a", 0x0, "p", 0x0, "s", 0x0, " ", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "k"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, " ", 0x0, "(", 0x0, "n", 0x0, "o", 0x0, "d"
	DCB	0x0, "e", 0x0, "f", 0x0, "r", 0x0, "e", 0x0, "e", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@EIJALODG@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAW?$AAe?$AA?8?$AAv?$AAe?$AA?5?$AAl@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "V", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "H", 0x0, "e"
	DCB	0x0, "a", 0x0, "p", 0x0, "s", 0x0, " ", 0x0, ":", 0x0, " "
	DCB	0x0, "W", 0x0, "e", 0x0, "'", 0x0, "v", 0x0, "e", 0x0, " "
	DCB	0x0, "l", 0x0, "o", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "s"
	DCB	0x0, "o", 0x0, "m", 0x0, "e", 0x0, " ", 0x0, "m", 0x0, "e"
	DCB	0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "s"
	DCB	0x0, "o", 0x0, "m", 0x0, "e", 0x0, "w", 0x0, "h", 0x0, "e"
	DCB	0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@IOHNCDME@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAF?$AAr?$AAe?$AAe?$AAS?$AAi?$AAz@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "V", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "H", 0x0, "e"
	DCB	0x0, "a", 0x0, "p", 0x0, "s", 0x0, " ", 0x0, ":", 0x0, " "
	DCB	0x0, "F", 0x0, "r", 0x0, "e", 0x0, "e", 0x0, "S", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e"
	DCB	0x0, "s", 0x0, ";", 0x0, " ", 0x0, "T", 0x0, "o", 0x0, "t"
	DCB	0x0, "a", 0x0, "l", 0x0, "S", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " "
	DCB	0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@BBFMJBGE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "V", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "H", 0x0, "e"
	DCB	0x0, "a", 0x0, "p", 0x0, "s", 0x0, " ", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "k"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, " ", 0x0, "(", 0x0, "i", 0x0, "n", 0x0, "u"
	DCB	0x0, "s", 0x0, "e", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JM@FJJCMIHE@?$AAI?$AAn?$AAU?$AAs?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AA?3?$AA?5?$AAp?$AAN?$AAo?$AAd?$AAe?$AA?5?$AAs?$AAi?$AAz?$AAe@| DCB "I"
	DCB	0x0, "n", 0x0, "U", 0x0, "s", 0x0, "e", 0x0, "L", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "(", 0x0, "p", 0x0, "r", 0x0, "i"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, " ", 0x0, ":", 0x0, " ", 0x0, "p", 0x0, "N", 0x0, "o"
	DCB	0x0, "d", 0x0, "e", 0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "4"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "P", 0x0, "A", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "V", 0x0, "A"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "D"
	DCB	0x0, "e", 0x0, "s", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@JDBBEPGD@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "V", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "H", 0x0, "e"
	DCB	0x0, "a", 0x0, "p", 0x0, "s", 0x0, " ", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "k"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, " ", 0x0, "(", 0x0, "f", 0x0, "r", 0x0, "e"
	DCB	0x0, "e", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@LFOBKGBN@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAL?$AAi@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "V", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "H", 0x0, "e"
	DCB	0x0, "a", 0x0, "p", 0x0, "s", 0x0, " ", 0x0, ":", 0x0, " "
	DCB	0x0, "F", 0x0, "r", 0x0, "e", 0x0, "e", 0x0, " ", 0x0, "L"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "t", 0x0, " ", 0x0, "s", 0x0, "o", 0x0, "r", 0x0, "t"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "(", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, ">", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JK@ENFIOHDK@?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AA?3?$AA?5?$AAp?$AAN?$AAo?$AAd?$AAe?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5@| DCB "F"
	DCB	0x0, "r", 0x0, "e", 0x0, "e", 0x0, "L", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "(", 0x0, "p", 0x0, "r", 0x0, "i", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, " "
	DCB	0x0, ":", 0x0, " ", 0x0, "p", 0x0, "N", 0x0, "o", 0x0, "d"
	DCB	0x0, "e", 0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "4", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "P", 0x0, "A", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "V", 0x0, "A", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "s", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00bd8			 AREA	 |.text|, CODE, ARM

  00bd8		 |?ValidateHeaps@CPhysMem@@AAAHH@Z| PROC ; CPhysMem::ValidateHeaps

; 241  : {

  00bd8		 |$LN77@ValidateHe|
  00bd8	e1a0c00d	 mov         r12, sp
  00bdc	e92d0003	 stmdb       sp!, {r0, r1}
  00be0	e92d5000	 stmdb       sp!, {r12, lr}
  00be4	e24dd0b0	 sub         sp, sp, #0xB0
  00be8		 |$M34194|

; 242  :     PMEMLIST pNode = FirstNode(FREELIST(fHighPri));

  00be8	e59d30bc	 ldr         r3, [sp, #0xBC]
  00bec	e3530000	 cmp         r3, #0
  00bf0	0a000004	 beq         |$LN21@ValidateHe|
  00bf4	e59d30b8	 ldr         r3, [sp, #0xB8]
  00bf8	e2833074	 add         r3, r3, #0x74
  00bfc	e5933000	 ldr         r3, [r3]
  00c00	e58d3030	 str         r3, [sp, #0x30]
  00c04	ea000003	 b           |$LN22@ValidateHe|
  00c08		 |$LN21@ValidateHe|
  00c08	e59d30b8	 ldr         r3, [sp, #0xB8]
  00c0c	e283305c	 add         r3, r3, #0x5C
  00c10	e5933000	 ldr         r3, [r3]
  00c14	e58d3030	 str         r3, [sp, #0x30]
  00c18		 |$LN22@ValidateHe|
  00c18	e59d0030	 ldr         r0, [sp, #0x30]
  00c1c	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  00c20	e58d0034	 str         r0, [sp, #0x34]
  00c24	e59d3034	 ldr         r3, [sp, #0x34]
  00c28	e58d3018	 str         r3, [sp, #0x18]

; 243  :     DWORD dwSizeTotal = 0;

  00c2c	e3a03000	 mov         r3, #0
  00c30	e58d3014	 str         r3, [sp, #0x14]

; 244  :     DWORD dwSizePrev = 0;

  00c34	e3a03000	 mov         r3, #0
  00c38	e58d300c	 str         r3, [sp, #0xC]

; 245  :     DWORD dwSizeFree = 0;

  00c3c	e3a03000	 mov         r3, #0
  00c40	e58d3008	 str         r3, [sp, #8]

; 246  :     DWORD dwNodesFree = 0;

  00c44	e3a03000	 mov         r3, #0
  00c48	e58d3010	 str         r3, [sp, #0x10]
  00c4c		 |$LN18@ValidateHe|

; 247  : 
; 248  :     while (!EndOfList(FREELIST(fHighPri), pNode)) {

  00c4c	e59d30bc	 ldr         r3, [sp, #0xBC]
  00c50	e3530000	 cmp         r3, #0
  00c54	0a000004	 beq         |$LN23@ValidateHe|
  00c58	e59d30b8	 ldr         r3, [sp, #0xB8]
  00c5c	e2833074	 add         r3, r3, #0x74
  00c60	e5933000	 ldr         r3, [r3]
  00c64	e58d3038	 str         r3, [sp, #0x38]
  00c68	ea000003	 b           |$LN24@ValidateHe|
  00c6c		 |$LN23@ValidateHe|
  00c6c	e59d30b8	 ldr         r3, [sp, #0xB8]
  00c70	e283305c	 add         r3, r3, #0x5C
  00c74	e5933000	 ldr         r3, [r3]
  00c78	e58d3038	 str         r3, [sp, #0x38]
  00c7c		 |$LN24@ValidateHe|
  00c7c	e59d2038	 ldr         r2, [sp, #0x38]
  00c80	e59d3018	 ldr         r3, [sp, #0x18]
  00c84	e1520003	 cmp         r2, r3
  00c88	1a000002	 bne         |$LN25@ValidateHe|
  00c8c	e3a03001	 mov         r3, #1
  00c90	e58d303c	 str         r3, [sp, #0x3C]
  00c94	ea000001	 b           |$LN26@ValidateHe|
  00c98		 |$LN25@ValidateHe|
  00c98	e3a03000	 mov         r3, #0
  00c9c	e58d303c	 str         r3, [sp, #0x3C]
  00ca0		 |$LN26@ValidateHe|
  00ca0	e59d303c	 ldr         r3, [sp, #0x3C]
  00ca4	e3530000	 cmp         r3, #0
  00ca8	1a0000be	 bne         |$LN17@ValidateHe|

; 249  :         
; 250  :         DEBUGMSG(ZONE_VERBOSE && ZONE_CPHYSMEM, (TEXT("FreeList(pri = %d) : pNode size = %4d, PA = 0x%08x, VA = 0x%08X, Desc = %s\r\n"),
; 251  :                               fHighPri, pNode->dwSize, pNode->dwPhysAddr, pNode->dwVirtAddr, pNode->szDescription ));

  00cac	e59f38a8	 ldr         r3, [pc, #0x8A8]
  00cb0	e5933440	 ldr         r3, [r3, #0x440]
  00cb4	e3130a01	 tst         r3, #1, 20
  00cb8	0a000015	 beq         |$LN27@ValidateHe|
  00cbc	e59f3898	 ldr         r3, [pc, #0x898]
  00cc0	e5933440	 ldr         r3, [r3, #0x440]
  00cc4	e3130b02	 tst         r3, #2, 22
  00cc8	0a000011	 beq         |$LN27@ValidateHe|
  00ccc	e59d3018	 ldr         r3, [sp, #0x18]
  00cd0	e2833014	 add         r3, r3, #0x14
  00cd4	e58d3004	 str         r3, [sp, #4]
  00cd8	e59d3018	 ldr         r3, [sp, #0x18]
  00cdc	e5933000	 ldr         r3, [r3]
  00ce0	e58d3000	 str         r3, [sp]
  00ce4	e59d3018	 ldr         r3, [sp, #0x18]
  00ce8	e2833004	 add         r3, r3, #4
  00cec	e5933000	 ldr         r3, [r3]
  00cf0	e59d2018	 ldr         r2, [sp, #0x18]
  00cf4	e2822008	 add         r2, r2, #8
  00cf8	e5922000	 ldr         r2, [r2]
  00cfc	e59d10bc	 ldr         r1, [sp, #0xBC]
  00d00	e59f0880	 ldr         r0, [pc, #0x880]
  00d04	eb000000	 bl          NKDbgPrintfW
  00d08	e3a03001	 mov         r3, #1
  00d0c	e58d3040	 str         r3, [sp, #0x40]
  00d10	ea000001	 b           |$LN28@ValidateHe|
  00d14		 |$LN27@ValidateHe|
  00d14	e3a03000	 mov         r3, #0
  00d18	e58d3040	 str         r3, [sp, #0x40]
  00d1c		 |$LN28@ValidateHe|

; 252  : 
; 253  :         if ( pNode->dwSize == 0 ) {

  00d1c	e59d3018	 ldr         r3, [sp, #0x18]
  00d20	e2833008	 add         r3, r3, #8
  00d24	e5933000	 ldr         r3, [r3]
  00d28	e3530000	 cmp         r3, #0
  00d2c	1a000014	 bne         |$LN16@ValidateHe|

; 254  :             DEBUGCHK( pNode->dwVirtAddr == 0 &&
; 255  :                       pNode->dwPhysAddr == 0 );

  00d30	e59d3018	 ldr         r3, [sp, #0x18]
  00d34	e5933000	 ldr         r3, [r3]
  00d38	e3530000	 cmp         r3, #0
  00d3c	1a000007	 bne         |$LN29@ValidateHe|
  00d40	e59d3018	 ldr         r3, [sp, #0x18]
  00d44	e2833004	 add         r3, r3, #4
  00d48	e5933000	 ldr         r3, [r3]
  00d4c	e3530000	 cmp         r3, #0
  00d50	1a000002	 bne         |$LN29@ValidateHe|
  00d54	e3a03001	 mov         r3, #1
  00d58	e58d3044	 str         r3, [sp, #0x44]
  00d5c	ea000007	 b           |$LN30@ValidateHe|
  00d60		 |$LN29@ValidateHe|
  00d60	e3a030ff	 mov         r3, #0xFF
  00d64	e59f27f8	 ldr         r2, [pc, #0x7F8]
  00d68	e59f17ec	 ldr         r1, [pc, #0x7EC]
  00d6c	e59f07ec	 ldr         r0, [pc, #0x7EC]
  00d70	eb000000	 bl          NKDbgPrintfW
  00d74	e6000010	 __debugbreak_ce
  00d78	e3a03000	 mov         r3, #0
  00d7c	e58d3044	 str         r3, [sp, #0x44]
  00d80		 |$LN30@ValidateHe|

; 256  :         } else {

  00d80	ea000024	 b           |$LN15@ValidateHe|
  00d84		 |$LN16@ValidateHe|

; 257  :             DEBUGCHK( pNode->dwSize % CPHYSMEM_MEMORY_ALIGNMENT == 0 &&
; 258  :                       pNode->dwPhysAddr % CPHYSMEM_MEMORY_ALIGNMENT == 0 &&
; 259  :                       PUCHAR(pNode->dwVirtAddr) == PaToVa( pNode->dwPhysAddr ) );

  00d84	e59d3018	 ldr         r3, [sp, #0x18]
  00d88	e2833008	 add         r3, r3, #8
  00d8c	e5931000	 ldr         r1, [r3]
  00d90	e3a00020	 mov         r0, #0x20
  00d94	eb000000	 bl          __rt_udiv
  00d98	e3510000	 cmp         r1, #0
  00d9c	1a000014	 bne         |$LN31@ValidateHe|
  00da0	e59d3018	 ldr         r3, [sp, #0x18]
  00da4	e2833004	 add         r3, r3, #4
  00da8	e5931000	 ldr         r1, [r3]
  00dac	e3a00020	 mov         r0, #0x20
  00db0	eb000000	 bl          __rt_udiv
  00db4	e3510000	 cmp         r1, #0
  00db8	1a00000d	 bne         |$LN31@ValidateHe|
  00dbc	e59d3018	 ldr         r3, [sp, #0x18]
  00dc0	e2833004	 add         r3, r3, #4
  00dc4	e5931000	 ldr         r1, [r3]
  00dc8	e59d00b8	 ldr         r0, [sp, #0xB8]
  00dcc	eb000000	 bl          |?PaToVa@CPhysMem@@QAAPAEK@Z|
  00dd0	e58d0048	 str         r0, [sp, #0x48]
  00dd4	e59d3018	 ldr         r3, [sp, #0x18]
  00dd8	e5932000	 ldr         r2, [r3]
  00ddc	e59d3048	 ldr         r3, [sp, #0x48]
  00de0	e1520003	 cmp         r2, r3
  00de4	1a000002	 bne         |$LN31@ValidateHe|
  00de8	e3a03001	 mov         r3, #1
  00dec	e58d304c	 str         r3, [sp, #0x4C]
  00df0	ea000008	 b           |$LN32@ValidateHe|
  00df4		 |$LN31@ValidateHe|
  00df4	e3a03c01	 mov         r3, #1, 24
  00df8	e3833003	 orr         r3, r3, #3
  00dfc	e59f2760	 ldr         r2, [pc, #0x760]
  00e00	e59f1754	 ldr         r1, [pc, #0x754]
  00e04	e59f0754	 ldr         r0, [pc, #0x754]
  00e08	eb000000	 bl          NKDbgPrintfW
  00e0c	e6000010	 __debugbreak_ce
  00e10	e3a03000	 mov         r3, #0
  00e14	e58d304c	 str         r3, [sp, #0x4C]
  00e18		 |$LN32@ValidateHe|
  00e18		 |$LN15@ValidateHe|

; 260  :         }
; 261  : 
; 262  :         dwSizeTotal += pNode->dwSize;

  00e18	e59d3018	 ldr         r3, [sp, #0x18]
  00e1c	e2833008	 add         r3, r3, #8
  00e20	e59d2014	 ldr         r2, [sp, #0x14]
  00e24	e5933000	 ldr         r3, [r3]
  00e28	e0823003	 add         r3, r2, r3
  00e2c	e58d3014	 str         r3, [sp, #0x14]

; 263  :         dwSizeFree  += pNode->dwSize;

  00e30	e59d3018	 ldr         r3, [sp, #0x18]
  00e34	e2833008	 add         r3, r3, #8
  00e38	e59d2008	 ldr         r2, [sp, #8]
  00e3c	e5933000	 ldr         r3, [r3]
  00e40	e0823003	 add         r3, r2, r3
  00e44	e58d3008	 str         r3, [sp, #8]

; 264  :         
; 265  :         if (dwSizePrev > pNode->dwSize) {

  00e48	e59d3018	 ldr         r3, [sp, #0x18]
  00e4c	e2833008	 add         r3, r3, #8
  00e50	e59d200c	 ldr         r2, [sp, #0xC]
  00e54	e5933000	 ldr         r3, [r3]
  00e58	e1520003	 cmp         r2, r3
  00e5c	9a00001d	 bls         |$LN14@ValidateHe|

; 266  :             DEBUGMSG(ZONE_ERROR, (TEXT("CPhysMem ValidateHeaps : Free List not sorted (%d > %d)\r\n"), 
; 267  :                          dwSizePrev, pNode->dwSize));

  00e60	e59f36f4	 ldr         r3, [pc, #0x6F4]
  00e64	e5933440	 ldr         r3, [r3, #0x440]
  00e68	e3130901	 tst         r3, #1, 18
  00e6c	0a000008	 beq         |$LN33@ValidateHe|
  00e70	e59d3018	 ldr         r3, [sp, #0x18]
  00e74	e2833008	 add         r3, r3, #8
  00e78	e5932000	 ldr         r2, [r3]
  00e7c	e59d100c	 ldr         r1, [sp, #0xC]
  00e80	e59f06fc	 ldr         r0, [pc, #0x6FC]
  00e84	eb000000	 bl          NKDbgPrintfW
  00e88	e3a03001	 mov         r3, #1
  00e8c	e58d3050	 str         r3, [sp, #0x50]
  00e90	ea000001	 b           |$LN34@ValidateHe|
  00e94		 |$LN33@ValidateHe|
  00e94	e3a03000	 mov         r3, #0
  00e98	e58d3050	 str         r3, [sp, #0x50]
  00e9c		 |$LN34@ValidateHe|

; 268  :             DEBUGCHK(0);

  00e9c	ea000002	 b           |$LN35@ValidateHe|
  00ea0	e3a03001	 mov         r3, #1
  00ea4	e58d3054	 str         r3, [sp, #0x54]
  00ea8	ea000007	 b           |$LN36@ValidateHe|
  00eac		 |$LN35@ValidateHe|
  00eac	e3a03f43	 mov         r3, #0x43, 30
  00eb0	e59f26ac	 ldr         r2, [pc, #0x6AC]
  00eb4	e59f16a0	 ldr         r1, [pc, #0x6A0]
  00eb8	e59f06a0	 ldr         r0, [pc, #0x6A0]
  00ebc	eb000000	 bl          NKDbgPrintfW
  00ec0	e6000010	 __debugbreak_ce
  00ec4	e3a03000	 mov         r3, #0
  00ec8	e58d3054	 str         r3, [sp, #0x54]
  00ecc		 |$LN36@ValidateHe|

; 269  :             return(FALSE);

  00ecc	e3a03000	 mov         r3, #0
  00ed0	e58d3024	 str         r3, [sp, #0x24]
  00ed4	ea00019b	 b           |$LN19@ValidateHe|
  00ed8		 |$LN14@ValidateHe|

; 270  :         }
; 271  : 
; 272  :         if ((pNode->next->prev != pNode) || (pNode->prev->next != pNode)) {

  00ed8	e59d3018	 ldr         r3, [sp, #0x18]
  00edc	e283300c	 add         r3, r3, #0xC
  00ee0	e5933000	 ldr         r3, [r3]
  00ee4	e2833010	 add         r3, r3, #0x10
  00ee8	e5932000	 ldr         r2, [r3]
  00eec	e59d3018	 ldr         r3, [sp, #0x18]
  00ef0	e1520003	 cmp         r2, r3
  00ef4	1a000007	 bne         |$LN12@ValidateHe|
  00ef8	e59d3018	 ldr         r3, [sp, #0x18]
  00efc	e2833010	 add         r3, r3, #0x10
  00f00	e5933000	 ldr         r3, [r3]
  00f04	e283300c	 add         r3, r3, #0xC
  00f08	e5932000	 ldr         r2, [r3]
  00f0c	e59d3018	 ldr         r3, [sp, #0x18]
  00f10	e1520003	 cmp         r2, r3
  00f14	0a00001a	 beq         |$LN13@ValidateHe|
  00f18		 |$LN12@ValidateHe|

; 273  :             DEBUGMSG(ZONE_ERROR, (TEXT("CPhysMem ValidateHeaps : Invalid linked list (free)\r\n")));

  00f18	e59f363c	 ldr         r3, [pc, #0x63C]
  00f1c	e5933440	 ldr         r3, [r3, #0x440]
  00f20	e3130901	 tst         r3, #1, 18
  00f24	0a000004	 beq         |$LN37@ValidateHe|
  00f28	e59f0650	 ldr         r0, [pc, #0x650]
  00f2c	eb000000	 bl          NKDbgPrintfW
  00f30	e3a03001	 mov         r3, #1
  00f34	e58d3058	 str         r3, [sp, #0x58]
  00f38	ea000001	 b           |$LN38@ValidateHe|
  00f3c		 |$LN37@ValidateHe|
  00f3c	e3a03000	 mov         r3, #0
  00f40	e58d3058	 str         r3, [sp, #0x58]
  00f44		 |$LN38@ValidateHe|

; 274  :             DEBUGCHK(0);

  00f44	ea000002	 b           |$LN39@ValidateHe|
  00f48	e3a03001	 mov         r3, #1
  00f4c	e58d305c	 str         r3, [sp, #0x5C]
  00f50	ea000008	 b           |$LN40@ValidateHe|
  00f54		 |$LN39@ValidateHe|
  00f54	e3a03c01	 mov         r3, #1, 24
  00f58	e3833012	 orr         r3, r3, #0x12
  00f5c	e59f2600	 ldr         r2, [pc, #0x600]
  00f60	e59f15f4	 ldr         r1, [pc, #0x5F4]
  00f64	e59f05f4	 ldr         r0, [pc, #0x5F4]
  00f68	eb000000	 bl          NKDbgPrintfW
  00f6c	e6000010	 __debugbreak_ce
  00f70	e3a03000	 mov         r3, #0
  00f74	e58d305c	 str         r3, [sp, #0x5C]
  00f78		 |$LN40@ValidateHe|

; 275  :             return(FALSE);

  00f78	e3a03000	 mov         r3, #0
  00f7c	e58d3024	 str         r3, [sp, #0x24]
  00f80	ea000170	 b           |$LN19@ValidateHe|
  00f84		 |$LN13@ValidateHe|

; 276  :         }
; 277  : 
; 278  :         dwSizePrev = pNode->dwSize;

  00f84	e59d3018	 ldr         r3, [sp, #0x18]
  00f88	e2833008	 add         r3, r3, #8
  00f8c	e5933000	 ldr         r3, [r3]
  00f90	e58d300c	 str         r3, [sp, #0xC]

; 279  :         pNode = pNode->next;

  00f94	e59d3018	 ldr         r3, [sp, #0x18]
  00f98	e283300c	 add         r3, r3, #0xC
  00f9c	e5933000	 ldr         r3, [r3]
  00fa0	e58d3018	 str         r3, [sp, #0x18]

; 280  :     }

  00fa4	eaffff28	 b           |$LN18@ValidateHe|
  00fa8		 |$LN17@ValidateHe|

; 281  :     
; 282  :     pNode = FirstNode(INUSELIST(fHighPri));

  00fa8	e59d30bc	 ldr         r3, [sp, #0xBC]
  00fac	e3530000	 cmp         r3, #0
  00fb0	0a000004	 beq         |$LN41@ValidateHe|
  00fb4	e59d30b8	 ldr         r3, [sp, #0xB8]
  00fb8	e2833070	 add         r3, r3, #0x70
  00fbc	e5933000	 ldr         r3, [r3]
  00fc0	e58d3060	 str         r3, [sp, #0x60]
  00fc4	ea000003	 b           |$LN42@ValidateHe|
  00fc8		 |$LN41@ValidateHe|
  00fc8	e59d30b8	 ldr         r3, [sp, #0xB8]
  00fcc	e2833060	 add         r3, r3, #0x60
  00fd0	e5933000	 ldr         r3, [r3]
  00fd4	e58d3060	 str         r3, [sp, #0x60]
  00fd8		 |$LN42@ValidateHe|
  00fd8	e59d0060	 ldr         r0, [sp, #0x60]
  00fdc	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  00fe0	e58d0064	 str         r0, [sp, #0x64]
  00fe4	e59d3064	 ldr         r3, [sp, #0x64]
  00fe8	e58d3018	 str         r3, [sp, #0x18]
  00fec		 |$LN11@ValidateHe|

; 283  : 
; 284  :     while (!EndOfList(INUSELIST(fHighPri), pNode)) {

  00fec	e59d30bc	 ldr         r3, [sp, #0xBC]
  00ff0	e3530000	 cmp         r3, #0
  00ff4	0a000004	 beq         |$LN43@ValidateHe|
  00ff8	e59d30b8	 ldr         r3, [sp, #0xB8]
  00ffc	e2833070	 add         r3, r3, #0x70
  01000	e5933000	 ldr         r3, [r3]
  01004	e58d3068	 str         r3, [sp, #0x68]
  01008	ea000003	 b           |$LN44@ValidateHe|
  0100c		 |$LN43@ValidateHe|
  0100c	e59d30b8	 ldr         r3, [sp, #0xB8]
  01010	e2833060	 add         r3, r3, #0x60
  01014	e5933000	 ldr         r3, [r3]
  01018	e58d3068	 str         r3, [sp, #0x68]
  0101c		 |$LN44@ValidateHe|
  0101c	e59d2068	 ldr         r2, [sp, #0x68]
  01020	e59d3018	 ldr         r3, [sp, #0x18]
  01024	e1520003	 cmp         r2, r3
  01028	1a000002	 bne         |$LN45@ValidateHe|
  0102c	e3a03001	 mov         r3, #1
  01030	e58d306c	 str         r3, [sp, #0x6C]
  01034	ea000001	 b           |$LN46@ValidateHe|
  01038		 |$LN45@ValidateHe|
  01038	e3a03000	 mov         r3, #0
  0103c	e58d306c	 str         r3, [sp, #0x6C]
  01040		 |$LN46@ValidateHe|
  01040	e59d306c	 ldr         r3, [sp, #0x6C]
  01044	e3530000	 cmp         r3, #0
  01048	1a000091	 bne         |$LN10@ValidateHe|

; 285  :         
; 286  :         DEBUGMSG(ZONE_VERBOSE && ZONE_CPHYSMEM, (TEXT("InUseList(pri = %d) : pNode size = %4d, PA = 0x%08x, VA = 0x%08X, Desc = %s\r\n"),
; 287  :                               fHighPri, pNode->dwSize, pNode->dwPhysAddr, pNode->dwVirtAddr, pNode->szDescription ));

  0104c	e59f3508	 ldr         r3, [pc, #0x508]
  01050	e5933440	 ldr         r3, [r3, #0x440]
  01054	e3130a01	 tst         r3, #1, 20
  01058	0a000015	 beq         |$LN47@ValidateHe|
  0105c	e59f34f8	 ldr         r3, [pc, #0x4F8]
  01060	e5933440	 ldr         r3, [r3, #0x440]
  01064	e3130b02	 tst         r3, #2, 22
  01068	0a000011	 beq         |$LN47@ValidateHe|
  0106c	e59d3018	 ldr         r3, [sp, #0x18]
  01070	e2833014	 add         r3, r3, #0x14
  01074	e58d3004	 str         r3, [sp, #4]
  01078	e59d3018	 ldr         r3, [sp, #0x18]
  0107c	e5933000	 ldr         r3, [r3]
  01080	e58d3000	 str         r3, [sp]
  01084	e59d3018	 ldr         r3, [sp, #0x18]
  01088	e2833004	 add         r3, r3, #4
  0108c	e5933000	 ldr         r3, [r3]
  01090	e59d2018	 ldr         r2, [sp, #0x18]
  01094	e2822008	 add         r2, r2, #8
  01098	e5922000	 ldr         r2, [r2]
  0109c	e59d10bc	 ldr         r1, [sp, #0xBC]
  010a0	e59f04d4	 ldr         r0, [pc, #0x4D4]
  010a4	eb000000	 bl          NKDbgPrintfW
  010a8	e3a03001	 mov         r3, #1
  010ac	e58d3070	 str         r3, [sp, #0x70]
  010b0	ea000001	 b           |$LN48@ValidateHe|
  010b4		 |$LN47@ValidateHe|
  010b4	e3a03000	 mov         r3, #0
  010b8	e58d3070	 str         r3, [sp, #0x70]
  010bc		 |$LN48@ValidateHe|

; 288  : 
; 289  :         if ( pNode->dwSize == 0 ) {

  010bc	e59d3018	 ldr         r3, [sp, #0x18]
  010c0	e2833008	 add         r3, r3, #8
  010c4	e5933000	 ldr         r3, [r3]
  010c8	e3530000	 cmp         r3, #0
  010cc	1a000015	 bne         |$LN9@ValidateHe|

; 290  :             DEBUGCHK( pNode->dwVirtAddr == 0 &&
; 291  :                       pNode->dwPhysAddr == 0 );

  010d0	e59d3018	 ldr         r3, [sp, #0x18]
  010d4	e5933000	 ldr         r3, [r3]
  010d8	e3530000	 cmp         r3, #0
  010dc	1a000007	 bne         |$LN49@ValidateHe|
  010e0	e59d3018	 ldr         r3, [sp, #0x18]
  010e4	e2833004	 add         r3, r3, #4
  010e8	e5933000	 ldr         r3, [r3]
  010ec	e3530000	 cmp         r3, #0
  010f0	1a000002	 bne         |$LN49@ValidateHe|
  010f4	e3a03001	 mov         r3, #1
  010f8	e58d3074	 str         r3, [sp, #0x74]
  010fc	ea000008	 b           |$LN50@ValidateHe|
  01100		 |$LN49@ValidateHe|
  01100	e3a03c01	 mov         r3, #1, 24
  01104	e3833023	 orr         r3, r3, #0x23
  01108	e59f2454	 ldr         r2, [pc, #0x454]
  0110c	e59f1448	 ldr         r1, [pc, #0x448]
  01110	e59f0448	 ldr         r0, [pc, #0x448]
  01114	eb000000	 bl          NKDbgPrintfW
  01118	e6000010	 __debugbreak_ce
  0111c	e3a03000	 mov         r3, #0
  01120	e58d3074	 str         r3, [sp, #0x74]
  01124		 |$LN50@ValidateHe|

; 292  :         } else {

  01124	ea000024	 b           |$LN8@ValidateHe|
  01128		 |$LN9@ValidateHe|

; 293  :             DEBUGCHK( pNode->dwSize % CPHYSMEM_MEMORY_ALIGNMENT == 0 &&
; 294  :                       pNode->dwPhysAddr % CPHYSMEM_MEMORY_ALIGNMENT == 0 &&
; 295  :                       PUCHAR(pNode->dwVirtAddr) == PaToVa( pNode->dwPhysAddr ) );

  01128	e59d3018	 ldr         r3, [sp, #0x18]
  0112c	e2833008	 add         r3, r3, #8
  01130	e5931000	 ldr         r1, [r3]
  01134	e3a00020	 mov         r0, #0x20
  01138	eb000000	 bl          __rt_udiv
  0113c	e3510000	 cmp         r1, #0
  01140	1a000014	 bne         |$LN51@ValidateHe|
  01144	e59d3018	 ldr         r3, [sp, #0x18]
  01148	e2833004	 add         r3, r3, #4
  0114c	e5931000	 ldr         r1, [r3]
  01150	e3a00020	 mov         r0, #0x20
  01154	eb000000	 bl          __rt_udiv
  01158	e3510000	 cmp         r1, #0
  0115c	1a00000d	 bne         |$LN51@ValidateHe|
  01160	e59d3018	 ldr         r3, [sp, #0x18]
  01164	e2833004	 add         r3, r3, #4
  01168	e5931000	 ldr         r1, [r3]
  0116c	e59d00b8	 ldr         r0, [sp, #0xB8]
  01170	eb000000	 bl          |?PaToVa@CPhysMem@@QAAPAEK@Z|
  01174	e58d0078	 str         r0, [sp, #0x78]
  01178	e59d3018	 ldr         r3, [sp, #0x18]
  0117c	e5932000	 ldr         r2, [r3]
  01180	e59d3078	 ldr         r3, [sp, #0x78]
  01184	e1520003	 cmp         r2, r3
  01188	1a000002	 bne         |$LN51@ValidateHe|
  0118c	e3a03001	 mov         r3, #1
  01190	e58d307c	 str         r3, [sp, #0x7C]
  01194	ea000008	 b           |$LN52@ValidateHe|
  01198		 |$LN51@ValidateHe|
  01198	e3a03c01	 mov         r3, #1, 24
  0119c	e3833027	 orr         r3, r3, #0x27
  011a0	e59f23bc	 ldr         r2, [pc, #0x3BC]
  011a4	e59f13b0	 ldr         r1, [pc, #0x3B0]
  011a8	e59f03b0	 ldr         r0, [pc, #0x3B0]
  011ac	eb000000	 bl          NKDbgPrintfW
  011b0	e6000010	 __debugbreak_ce
  011b4	e3a03000	 mov         r3, #0
  011b8	e58d307c	 str         r3, [sp, #0x7C]
  011bc		 |$LN52@ValidateHe|
  011bc		 |$LN8@ValidateHe|

; 296  :         }
; 297  : 
; 298  :         dwSizeTotal += pNode->dwSize;

  011bc	e59d3018	 ldr         r3, [sp, #0x18]
  011c0	e2833008	 add         r3, r3, #8
  011c4	e59d2014	 ldr         r2, [sp, #0x14]
  011c8	e5933000	 ldr         r3, [r3]
  011cc	e0823003	 add         r3, r2, r3
  011d0	e58d3014	 str         r3, [sp, #0x14]

; 299  :         
; 300  :         if ((pNode->next->prev != pNode) || (pNode->prev->next != pNode)) {

  011d4	e59d3018	 ldr         r3, [sp, #0x18]
  011d8	e283300c	 add         r3, r3, #0xC
  011dc	e5933000	 ldr         r3, [r3]
  011e0	e2833010	 add         r3, r3, #0x10
  011e4	e5932000	 ldr         r2, [r3]
  011e8	e59d3018	 ldr         r3, [sp, #0x18]
  011ec	e1520003	 cmp         r2, r3
  011f0	1a000007	 bne         |$LN6@ValidateHe|
  011f4	e59d3018	 ldr         r3, [sp, #0x18]
  011f8	e2833010	 add         r3, r3, #0x10
  011fc	e5933000	 ldr         r3, [r3]
  01200	e283300c	 add         r3, r3, #0xC
  01204	e5932000	 ldr         r2, [r3]
  01208	e59d3018	 ldr         r3, [sp, #0x18]
  0120c	e1520003	 cmp         r2, r3
  01210	0a00001a	 beq         |$LN7@ValidateHe|
  01214		 |$LN6@ValidateHe|

; 301  :             DEBUGMSG(ZONE_ERROR, (TEXT("CPhysMem ValidateHeaps : Invalid linked list (inuse)\r\n")));

  01214	e59f3340	 ldr         r3, [pc, #0x340]
  01218	e5933440	 ldr         r3, [r3, #0x440]
  0121c	e3130901	 tst         r3, #1, 18
  01220	0a000004	 beq         |$LN53@ValidateHe|
  01224	e59f034c	 ldr         r0, [pc, #0x34C]
  01228	eb000000	 bl          NKDbgPrintfW
  0122c	e3a03001	 mov         r3, #1
  01230	e58d3080	 str         r3, [sp, #0x80]
  01234	ea000001	 b           |$LN54@ValidateHe|
  01238		 |$LN53@ValidateHe|
  01238	e3a03000	 mov         r3, #0
  0123c	e58d3080	 str         r3, [sp, #0x80]
  01240		 |$LN54@ValidateHe|

; 302  :             DEBUGCHK(0);

  01240	ea000002	 b           |$LN55@ValidateHe|
  01244	e3a03001	 mov         r3, #1
  01248	e58d3084	 str         r3, [sp, #0x84]
  0124c	ea000008	 b           |$LN56@ValidateHe|
  01250		 |$LN55@ValidateHe|
  01250	e3a03c01	 mov         r3, #1, 24
  01254	e383302e	 orr         r3, r3, #0x2E
  01258	e59f2304	 ldr         r2, [pc, #0x304]
  0125c	e59f12f8	 ldr         r1, [pc, #0x2F8]
  01260	e59f02f8	 ldr         r0, [pc, #0x2F8]
  01264	eb000000	 bl          NKDbgPrintfW
  01268	e6000010	 __debugbreak_ce
  0126c	e3a03000	 mov         r3, #0
  01270	e58d3084	 str         r3, [sp, #0x84]
  01274		 |$LN56@ValidateHe|

; 303  :             return(FALSE);

  01274	e3a03000	 mov         r3, #0
  01278	e58d3024	 str         r3, [sp, #0x24]
  0127c	ea0000b1	 b           |$LN19@ValidateHe|
  01280		 |$LN7@ValidateHe|

; 304  :         }
; 305  : 
; 306  :         pNode = pNode->next;

  01280	e59d3018	 ldr         r3, [sp, #0x18]
  01284	e283300c	 add         r3, r3, #0xC
  01288	e5933000	 ldr         r3, [r3]
  0128c	e58d3018	 str         r3, [sp, #0x18]

; 307  :     }

  01290	eaffff55	 b           |$LN11@ValidateHe|
  01294		 |$LN10@ValidateHe|

; 308  :     
; 309  :     DEBUGMSG(ZONE_CPHYSMEM, (TEXT("CPhysMem ValidateHeaps : FreeSize = %d bytes; TotalSize = %d bytes\r\n"),
; 310  :                           dwSizeFree, dwSizeTotal));

  01294	e59f32c0	 ldr         r3, [pc, #0x2C0]
  01298	e5933440	 ldr         r3, [r3, #0x440]
  0129c	e3130b02	 tst         r3, #2, 22
  012a0	0a000006	 beq         |$LN57@ValidateHe|
  012a4	e59d2014	 ldr         r2, [sp, #0x14]
  012a8	e59d1008	 ldr         r1, [sp, #8]
  012ac	e59f02c0	 ldr         r0, [pc, #0x2C0]
  012b0	eb000000	 bl          NKDbgPrintfW
  012b4	e3a03001	 mov         r3, #1
  012b8	e58d3088	 str         r3, [sp, #0x88]
  012bc	ea000001	 b           |$LN58@ValidateHe|
  012c0		 |$LN57@ValidateHe|
  012c0	e3a03000	 mov         r3, #0
  012c4	e58d3088	 str         r3, [sp, #0x88]
  012c8		 |$LN58@ValidateHe|

; 311  : 
; 312  :     if (dwSizeTotal != (fHighPri ? m_dwHighPrioritySize : m_dwNormalSize)) {

  012c8	e59d30bc	 ldr         r3, [sp, #0xBC]
  012cc	e3530000	 cmp         r3, #0
  012d0	0a000004	 beq         |$LN59@ValidateHe|
  012d4	e59d30b8	 ldr         r3, [sp, #0xB8]
  012d8	e283306c	 add         r3, r3, #0x6C
  012dc	e5933000	 ldr         r3, [r3]
  012e0	e58d308c	 str         r3, [sp, #0x8C]
  012e4	ea000003	 b           |$LN60@ValidateHe|
  012e8		 |$LN59@ValidateHe|
  012e8	e59d30b8	 ldr         r3, [sp, #0xB8]
  012ec	e2833058	 add         r3, r3, #0x58
  012f0	e5933000	 ldr         r3, [r3]
  012f4	e58d308c	 str         r3, [sp, #0x8C]
  012f8		 |$LN60@ValidateHe|
  012f8	e59d2014	 ldr         r2, [sp, #0x14]
  012fc	e59d308c	 ldr         r3, [sp, #0x8C]
  01300	e1520003	 cmp         r2, r3
  01304	0a00001a	 beq         |$LN5@ValidateHe|

; 313  :         DEBUGMSG(ZONE_ERROR, (TEXT("CPhysMem ValidateHeaps : We've lost some memory somewhere\r\n")));

  01308	e59f324c	 ldr         r3, [pc, #0x24C]
  0130c	e5933440	 ldr         r3, [r3, #0x440]
  01310	e3130901	 tst         r3, #1, 18
  01314	0a000004	 beq         |$LN61@ValidateHe|
  01318	e59f0250	 ldr         r0, [pc, #0x250]
  0131c	eb000000	 bl          NKDbgPrintfW
  01320	e3a03001	 mov         r3, #1
  01324	e58d3090	 str         r3, [sp, #0x90]
  01328	ea000001	 b           |$LN62@ValidateHe|
  0132c		 |$LN61@ValidateHe|
  0132c	e3a03000	 mov         r3, #0
  01330	e58d3090	 str         r3, [sp, #0x90]
  01334		 |$LN62@ValidateHe|

; 314  :         DEBUGCHK(0);

  01334	ea000002	 b           |$LN63@ValidateHe|
  01338	e3a03001	 mov         r3, #1
  0133c	e58d3094	 str         r3, [sp, #0x94]
  01340	ea000008	 b           |$LN64@ValidateHe|
  01344		 |$LN63@ValidateHe|
  01344	e3a03c01	 mov         r3, #1, 24
  01348	e383303a	 orr         r3, r3, #0x3A
  0134c	e59f2210	 ldr         r2, [pc, #0x210]
  01350	e59f1204	 ldr         r1, [pc, #0x204]
  01354	e59f0204	 ldr         r0, [pc, #0x204]
  01358	eb000000	 bl          NKDbgPrintfW
  0135c	e6000010	 __debugbreak_ce
  01360	e3a03000	 mov         r3, #0
  01364	e58d3094	 str         r3, [sp, #0x94]
  01368		 |$LN64@ValidateHe|

; 315  :         return(FALSE);

  01368	e3a03000	 mov         r3, #0
  0136c	e58d3024	 str         r3, [sp, #0x24]
  01370	ea000074	 b           |$LN19@ValidateHe|
  01374		 |$LN5@ValidateHe|

; 316  :     }
; 317  :     
; 318  :     //
; 319  :     // Validate the NODES free list.
; 320  :     //
; 321  :     pNode = FirstNode(m_pNodeFreeListHead);

  01374	e59d30b8	 ldr         r3, [sp, #0xB8]
  01378	e2833040	 add         r3, r3, #0x40
  0137c	e5930000	 ldr         r0, [r3]
  01380	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  01384	e58d0098	 str         r0, [sp, #0x98]
  01388	e59d3098	 ldr         r3, [sp, #0x98]
  0138c	e58d3018	 str         r3, [sp, #0x18]
  01390		 |$LN4@ValidateHe|

; 322  :     while (!EndOfList(m_pNodeFreeListHead, pNode)) {

  01390	e59d30b8	 ldr         r3, [sp, #0xB8]
  01394	e2833040	 add         r3, r3, #0x40
  01398	e5932000	 ldr         r2, [r3]
  0139c	e59d3018	 ldr         r3, [sp, #0x18]
  013a0	e1520003	 cmp         r2, r3
  013a4	1a000002	 bne         |$LN65@ValidateHe|
  013a8	e3a03001	 mov         r3, #1
  013ac	e58d309c	 str         r3, [sp, #0x9C]
  013b0	ea000001	 b           |$LN66@ValidateHe|
  013b4		 |$LN65@ValidateHe|
  013b4	e3a03000	 mov         r3, #0
  013b8	e58d309c	 str         r3, [sp, #0x9C]
  013bc		 |$LN66@ValidateHe|
  013bc	e59d309c	 ldr         r3, [sp, #0x9C]
  013c0	e3530000	 cmp         r3, #0
  013c4	1a00004d	 bne         |$LN3@ValidateHe|

; 323  : 
; 324  :         dwNodesFree++;

  013c8	e59d3010	 ldr         r3, [sp, #0x10]
  013cc	e2833001	 add         r3, r3, #1
  013d0	e58d3010	 str         r3, [sp, #0x10]

; 325  :         // these are set in DeleteNode
; 326  :         DEBUGCHK( pNode->dwSize == 0xdeadbeef &&
; 327  :                   pNode->dwPhysAddr == 0xdeadbeef &&
; 328  :                   pNode->dwVirtAddr == 0xdeadbeef );

  013d4	e59d3018	 ldr         r3, [sp, #0x18]
  013d8	e2833008	 add         r3, r3, #8
  013dc	e5932000	 ldr         r2, [r3]
  013e0	e59f3184	 ldr         r3, [pc, #0x184]
  013e4	e1520003	 cmp         r2, r3
  013e8	1a00000d	 bne         |$LN67@ValidateHe|
  013ec	e59d3018	 ldr         r3, [sp, #0x18]
  013f0	e2833004	 add         r3, r3, #4
  013f4	e5932000	 ldr         r2, [r3]
  013f8	e59f316c	 ldr         r3, [pc, #0x16C]
  013fc	e1520003	 cmp         r2, r3
  01400	1a000007	 bne         |$LN67@ValidateHe|
  01404	e59d3018	 ldr         r3, [sp, #0x18]
  01408	e5932000	 ldr         r2, [r3]
  0140c	e59f3158	 ldr         r3, [pc, #0x158]
  01410	e1520003	 cmp         r2, r3
  01414	1a000002	 bne         |$LN67@ValidateHe|
  01418	e3a03001	 mov         r3, #1
  0141c	e58d30a0	 str         r3, [sp, #0xA0]
  01420	ea000007	 b           |$LN68@ValidateHe|
  01424		 |$LN67@ValidateHe|
  01424	e3a03f52	 mov         r3, #0x52, 30
  01428	e59f2134	 ldr         r2, [pc, #0x134]
  0142c	e59f1128	 ldr         r1, [pc, #0x128]
  01430	e59f0128	 ldr         r0, [pc, #0x128]
  01434	eb000000	 bl          NKDbgPrintfW
  01438	e6000010	 __debugbreak_ce
  0143c	e3a03000	 mov         r3, #0
  01440	e58d30a0	 str         r3, [sp, #0xA0]
  01444		 |$LN68@ValidateHe|

; 329  :         
; 330  :         if ((pNode->next->prev != pNode) || (pNode->prev->next != pNode)) {

  01444	e59d3018	 ldr         r3, [sp, #0x18]
  01448	e283300c	 add         r3, r3, #0xC
  0144c	e5933000	 ldr         r3, [r3]
  01450	e2833010	 add         r3, r3, #0x10
  01454	e5932000	 ldr         r2, [r3]
  01458	e59d3018	 ldr         r3, [sp, #0x18]
  0145c	e1520003	 cmp         r2, r3
  01460	1a000007	 bne         |$LN1@ValidateHe|
  01464	e59d3018	 ldr         r3, [sp, #0x18]
  01468	e2833010	 add         r3, r3, #0x10
  0146c	e5933000	 ldr         r3, [r3]
  01470	e283300c	 add         r3, r3, #0xC
  01474	e5932000	 ldr         r2, [r3]
  01478	e59d3018	 ldr         r3, [sp, #0x18]
  0147c	e1520003	 cmp         r2, r3
  01480	0a000019	 beq         |$LN2@ValidateHe|
  01484		 |$LN1@ValidateHe|

; 331  :             DEBUGMSG(ZONE_ERROR, (TEXT("CPhysMem ValidateHeaps : Invalid linked list (nodefree)\r\n")));

  01484	e59f30d0	 ldr         r3, [pc, #0xD0]
  01488	e5933440	 ldr         r3, [r3, #0x440]
  0148c	e3130901	 tst         r3, #1, 18
  01490	0a000004	 beq         |$LN69@ValidateHe|
  01494	e59f00cc	 ldr         r0, [pc, #0xCC]
  01498	eb000000	 bl          NKDbgPrintfW
  0149c	e3a03001	 mov         r3, #1
  014a0	e58d30a4	 str         r3, [sp, #0xA4]
  014a4	ea000001	 b           |$LN70@ValidateHe|
  014a8		 |$LN69@ValidateHe|
  014a8	e3a03000	 mov         r3, #0
  014ac	e58d30a4	 str         r3, [sp, #0xA4]
  014b0		 |$LN70@ValidateHe|

; 332  :             DEBUGCHK(0);

  014b0	ea000002	 b           |$LN71@ValidateHe|
  014b4	e3a03001	 mov         r3, #1
  014b8	e58d30a8	 str         r3, [sp, #0xA8]
  014bc	ea000007	 b           |$LN72@ValidateHe|
  014c0		 |$LN71@ValidateHe|
  014c0	e3a03f53	 mov         r3, #0x53, 30
  014c4	e59f2098	 ldr         r2, [pc, #0x98]
  014c8	e59f108c	 ldr         r1, [pc, #0x8C]
  014cc	e59f008c	 ldr         r0, [pc, #0x8C]
  014d0	eb000000	 bl          NKDbgPrintfW
  014d4	e6000010	 __debugbreak_ce
  014d8	e3a03000	 mov         r3, #0
  014dc	e58d30a8	 str         r3, [sp, #0xA8]
  014e0		 |$LN72@ValidateHe|

; 333  :             return(FALSE);

  014e0	e3a03000	 mov         r3, #0
  014e4	e58d3024	 str         r3, [sp, #0x24]
  014e8	ea000016	 b           |$LN19@ValidateHe|
  014ec		 |$LN2@ValidateHe|

; 334  :         }
; 335  :         pNode = pNode->next;

  014ec	e59d3018	 ldr         r3, [sp, #0x18]
  014f0	e283300c	 add         r3, r3, #0xC
  014f4	e5933000	 ldr         r3, [r3]
  014f8	e58d3018	 str         r3, [sp, #0x18]

; 336  :     }

  014fc	eaffffa3	 b           |$LN4@ValidateHe|
  01500		 |$LN3@ValidateHe|

; 337  :     DEBUGMSG(ZONE_CPHYSMEM && ZONE_VERBOSE, (TEXT("CPhysMem ValidateHeaps : Nodes Free = %d\r\n"),dwNodesFree));

  01500	e59f3054	 ldr         r3, [pc, #0x54]
  01504	e5933440	 ldr         r3, [r3, #0x440]
  01508	e3130b02	 tst         r3, #2, 22
  0150c	0a000009	 beq         |$LN73@ValidateHe|
  01510	e59f3044	 ldr         r3, [pc, #0x44]
  01514	e5933440	 ldr         r3, [r3, #0x440]
  01518	e3130a01	 tst         r3, #1, 20
  0151c	0a000005	 beq         |$LN73@ValidateHe|
  01520	e59d1010	 ldr         r1, [sp, #0x10]
  01524	e59f002c	 ldr         r0, [pc, #0x2C]
  01528	eb000000	 bl          NKDbgPrintfW
  0152c	e3a03001	 mov         r3, #1
  01530	e58d30ac	 str         r3, [sp, #0xAC]
  01534	ea000001	 b           |$LN74@ValidateHe|
  01538		 |$LN73@ValidateHe|
  01538	e3a03000	 mov         r3, #0
  0153c	e58d30ac	 str         r3, [sp, #0xAC]
  01540		 |$LN74@ValidateHe|

; 338  :     
; 339  :     return (TRUE);

  01540	e3a03001	 mov         r3, #1
  01544	e58d3024	 str         r3, [sp, #0x24]
  01548		 |$LN19@ValidateHe|

; 340  : }

  01548	e59d0024	 ldr         r0, [sp, #0x24]
  0154c	e28dd0b0	 add         sp, sp, #0xB0
  01550	e89d6000	 ldmia       sp, {sp, lr}
  01554	e12fff1e	 bx          lr
  01558		 |$LN78@ValidateHe|
  01558		 |$LN79@ValidateHe|
  01558	00000000	 DCD         |??_C@_1FG@KBIHBEP@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAN?$AAo?$AAd?$AAe?$AAs?$AA?5?$AAF@|
  0155c		 |$LN80@ValidateHe|
  0155c	00000000	 DCD         |dpCurSettings|
  01560		 |$LN81@ValidateHe|
  01560	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  01564		 |$LN82@ValidateHe|
  01564	00000000	 DCD         |??_C@_1KM@IMBMOFHC@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  01568		 |$LN83@ValidateHe|
  01568	00000000	 DCD         |??_C@_1HE@BKCBJCLG@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@|
  0156c		 |$LN84@ValidateHe|
  0156c	deadbeef	 DCD         0xdeadbeef
  01570		 |$LN85@ValidateHe|
  01570	00000000	 DCD         |??_C@_1HI@EIJALODG@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAW?$AAe?$AA?8?$AAv?$AAe?$AA?5?$AAl@|
  01574		 |$LN86@ValidateHe|
  01574	00000000	 DCD         |??_C@_1IK@IOHNCDME@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAF?$AAr?$AAe?$AAe?$AAS?$AAi?$AAz@|
  01578		 |$LN87@ValidateHe|
  01578	00000000	 DCD         |??_C@_1GO@BBFMJBGE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@|
  0157c		 |$LN88@ValidateHe|
  0157c	00000000	 DCD         |??_C@_1JM@FJJCMIHE@?$AAI?$AAn?$AAU?$AAs?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AA?3?$AA?5?$AAp?$AAN?$AAo?$AAd?$AAe?$AA?5?$AAs?$AAi?$AAz?$AAe@|
  01580		 |$LN89@ValidateHe|
  01580	00000000	 DCD         |??_C@_1GM@JDBBEPGD@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd@|
  01584		 |$LN90@ValidateHe|
  01584	00000000	 DCD         |??_C@_1HE@LFOBKGBN@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAH?$AAe?$AAa?$AAp?$AAs?$AA?5?$AA?3?$AA?5?$AAF?$AAr?$AAe?$AAe?$AA?5?$AAL?$AAi@|
  01588		 |$LN91@ValidateHe|
  01588	00000000	 DCD         |??_C@_1JK@ENFIOHDK@?$AAF?$AAr?$AAe?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AA?3?$AA?5?$AAp?$AAN?$AAo?$AAd?$AAe?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5@|
  0158c		 |$M34195|

			 ENDP  ; |?ValidateHeaps@CPhysMem@@AAAHH@Z|, CPhysMem::ValidateHeaps

	EXPORT	|??_C@_1KI@HHPGNKFN@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA6?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo?$AAn?$AA?2?$AAs?$AAr?$AAc?$AA?2@| [ DATA ] ; `string'
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\usb\usb2com\cphysmem.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T34221| DCD	|$LN9@PaToVa|
	DCD	0x40003c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KI@HHPGNKFN@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA6?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo?$AAn?$AA?2?$AAs?$AAr?$AAc?$AA?2@| DCB "c"
	DCB	0x0, ":", 0x0, "\\", 0x0, "w", 0x0, "i", 0x0, "n", 0x0, "c"
	DCB	0x0, "e", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "p"
	DCB	0x0, "l", 0x0, "a", 0x0, "t", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, "m", 0x0, "\\", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "o", 0x0, "n", 0x0, "\\", 0x0, "s", 0x0, "r", 0x0, "c"
	DCB	0x0, "\\", 0x0, "s", 0x0, "o", 0x0, "c", 0x0, "\\", 0x0, "c"
	DCB	0x0, "o", 0x0, "m", 0x0, "m", 0x0, "o", 0x0, "n", 0x0, "_"
	DCB	0x0, "t", 0x0, "i", 0x0, "_", 0x0, "v", 0x0, "1", 0x0, "\\"
	DCB	0x0, "c", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "o", 0x0, "n"
	DCB	0x0, "_", 0x0, "t", 0x0, "i", 0x0, "\\", 0x0, "u", 0x0, "s"
	DCB	0x0, "b", 0x0, "\\", 0x0, "u", 0x0, "s", 0x0, "b", 0x0, "2"
	DCB	0x0, "c", 0x0, "o", 0x0, "m", 0x0, "\\", 0x0, "c", 0x0, "p"
	DCB	0x0, "h", 0x0, "y", 0x0, "s", 0x0, "m", 0x0, "e", 0x0, "m"
	DCB	0x0, ".", 0x0, "h", 0x0, "p", 0x0, "p", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PaToVa@CPhysMem@@QAAPAEK@Z| PROC	; CPhysMem::PaToVa

; 193  : {

  00000		 |$LN9@PaToVa|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd010	 sub         sp, sp, #0x10
  00010		 |$M34218|

; 194  :     DEBUGCHK( physAddr != 0 );

  00010	e59d301c	 ldr         r3, [sp, #0x1C]
  00014	e3530000	 cmp         r3, #0
  00018	0a000002	 beq         |$LN3@PaToVa|
  0001c	e3a03001	 mov         r3, #1
  00020	e58d3008	 str         r3, [sp, #8]
  00024	ea000007	 b           |$LN4@PaToVa|
  00028		 |$LN3@PaToVa|
  00028	e3a030c2	 mov         r3, #0xC2
  0002c	e59f20b4	 ldr         r2, [pc, #0xB4]
  00030	e59f10b4	 ldr         r1, [pc, #0xB4]
  00034	e59f00a4	 ldr         r0, [pc, #0xA4]
  00038	eb000000	 bl          NKDbgPrintfW
  0003c	e6000010	 __debugbreak_ce
  00040	e3a03000	 mov         r3, #0
  00044	e58d3008	 str         r3, [sp, #8]
  00048		 |$LN4@PaToVa|

; 195  :     PUCHAR virtAddr= PUCHAR(physAddr - m_PaVaConversion);

  00048	e59d3018	 ldr         r3, [sp, #0x18]
  0004c	e2833034	 add         r3, r3, #0x34
  00050	e59d201c	 ldr         r2, [sp, #0x1C]
  00054	e5933000	 ldr         r3, [r3]
  00058	e0423003	 sub         r3, r2, r3
  0005c	e58d3000	 str         r3, [sp]

; 196  :     ASSERT((DWORD)m_pPhysicalBufferAddr <=(DWORD)virtAddr && (DWORD)virtAddr <(DWORD) m_pPhysicalBufferAddr + m_cbTotal);

  00060	e59d3018	 ldr         r3, [sp, #0x18]
  00064	e283303c	 add         r3, r3, #0x3C
  00068	e5932000	 ldr         r2, [r3]
  0006c	e59d3000	 ldr         r3, [sp]
  00070	e1520003	 cmp         r2, r3
  00074	8a00000b	 bhi         |$LN5@PaToVa|
  00078	e59d3018	 ldr         r3, [sp, #0x18]
  0007c	e283303c	 add         r3, r3, #0x3C
  00080	e5932000	 ldr         r2, [r3]
  00084	e59d3018	 ldr         r3, [sp, #0x18]
  00088	e5933000	 ldr         r3, [r3]
  0008c	e0822003	 add         r2, r2, r3
  00090	e59d3000	 ldr         r3, [sp]
  00094	e1530002	 cmp         r3, r2
  00098	2a000002	 bcs         |$LN5@PaToVa|
  0009c	e3a03001	 mov         r3, #1
  000a0	e58d300c	 str         r3, [sp, #0xC]
  000a4	ea000007	 b           |$LN6@PaToVa|
  000a8		 |$LN5@PaToVa|
  000a8	e3a030c4	 mov         r3, #0xC4
  000ac	e59f2034	 ldr         r2, [pc, #0x34]
  000b0	e59f102c	 ldr         r1, [pc, #0x2C]
  000b4	e59f0024	 ldr         r0, [pc, #0x24]
  000b8	eb000000	 bl          NKDbgPrintfW
  000bc	e6000010	 __debugbreak_ce
  000c0	e3a03000	 mov         r3, #0
  000c4	e58d300c	 str         r3, [sp, #0xC]
  000c8		 |$LN6@PaToVa|

; 197  :     return virtAddr;    

  000c8	e59d3000	 ldr         r3, [sp]
  000cc	e58d3004	 str         r3, [sp, #4]

; 198  : }

  000d0	e59d0004	 ldr         r0, [sp, #4]
  000d4	e28dd010	 add         sp, sp, #0x10
  000d8	e89d6000	 ldmia       sp, {sp, lr}
  000dc	e12fff1e	 bx          lr
  000e0		 |$LN10@PaToVa|
  000e0		 |$LN11@PaToVa|
  000e0	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  000e4		 |$LN12@PaToVa|
  000e4	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  000e8		 |$LN13@PaToVa|
  000e8	00000000	 DCD         |??_C@_1KI@HHPGNKFN@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA6?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo?$AAn?$AA?2?$AAs?$AAr?$AAc?$AA?2@|
  000ec		 |$LN14@PaToVa|
  000ec	00000000	 DCD         |dpCurSettings|
  000f0		 |$M34219|

			 ENDP  ; |?PaToVa@CPhysMem@@QAAPAEK@Z|, CPhysMem::PaToVa

	EXPORT	|??_C@_1BK@HELANJJ@?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAD?$AAe?$AAs?$AAc?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?RemoveNode@@YAXPAUtMEMLIST@@@Z|	; RemoveNode
	IMPORT	|LocalAlloc|

  00018			 AREA	 |.pdata|, PDATA
|$T34240| DCD	|$LN17@CreateNewN|
	DCD	0x40007f04
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\usb\usb2com\cphysmem.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@HELANJJ@?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAD?$AAe?$AAs?$AAc?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "f", 0x0, "a", 0x0, "u", 0x0, "l", 0x0, "t"
	DCB	0x0, " ", 0x0, "D", 0x0, "e", 0x0, "s", 0x0, "c", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  0158c			 AREA	 |.text|, CODE, ARM

  0158c		 |?CreateNewNode@CPhysMem@@AAAPAUtMEMLIST@@KKK@Z| PROC ; CPhysMem::CreateNewNode

; 352  : {

  0158c		 |$LN17@CreateNewN|
  0158c	e1a0c00d	 mov         r12, sp
  01590	e92d000f	 stmdb       sp!, {r0 - r3}
  01594	e92d5000	 stmdb       sp!, {r12, lr}
  01598	e24dd020	 sub         sp, sp, #0x20
  0159c		 |$M34237|

; 353  : #ifdef DEBUG
; 354  :     if ( dwSize == 0 ) {

  0159c	e59d302c	 ldr         r3, [sp, #0x2C]
  015a0	e3530000	 cmp         r3, #0
  015a4	1a000011	 bne         |$LN6@CreateNewN|

; 355  :         DEBUGCHK( dwVirtAddr == 0 &&
; 356  :                   dwPhysAddr == 0 );

  015a8	e59d3030	 ldr         r3, [sp, #0x30]
  015ac	e3530000	 cmp         r3, #0
  015b0	1a000005	 bne         |$LN9@CreateNewN|
  015b4	e59d3034	 ldr         r3, [sp, #0x34]
  015b8	e3530000	 cmp         r3, #0
  015bc	1a000002	 bne         |$LN9@CreateNewN|
  015c0	e3a03001	 mov         r3, #1
  015c4	e58d3008	 str         r3, [sp, #8]
  015c8	ea000007	 b           |$LN10@CreateNewN|
  015cc		 |$LN9@CreateNewN|
  015cc	e3a03f59	 mov         r3, #0x59, 30
  015d0	e59f21ac	 ldr         r2, [pc, #0x1AC]
  015d4	e59f11a4	 ldr         r1, [pc, #0x1A4]
  015d8	e59f019c	 ldr         r0, [pc, #0x19C]
  015dc	eb000000	 bl          NKDbgPrintfW
  015e0	e6000010	 __debugbreak_ce
  015e4	e3a03000	 mov         r3, #0
  015e8	e58d3008	 str         r3, [sp, #8]
  015ec		 |$LN10@CreateNewN|

; 357  :     } else {

  015ec	ea00001c	 b           |$LN5@CreateNewN|
  015f0		 |$LN6@CreateNewN|

; 358  :         DEBUGCHK( dwSize % CPHYSMEM_MEMORY_ALIGNMENT == 0 &&
; 359  :                   dwPhysAddr % CPHYSMEM_MEMORY_ALIGNMENT == 0 &&
; 360  :                   PUCHAR(dwVirtAddr) == PaToVa( dwPhysAddr ) );

  015f0	e59d102c	 ldr         r1, [sp, #0x2C]
  015f4	e3a00020	 mov         r0, #0x20
  015f8	eb000000	 bl          __rt_udiv
  015fc	e3510000	 cmp         r1, #0
  01600	1a00000f	 bne         |$LN11@CreateNewN|
  01604	e59d1034	 ldr         r1, [sp, #0x34]
  01608	e3a00020	 mov         r0, #0x20
  0160c	eb000000	 bl          __rt_udiv
  01610	e3510000	 cmp         r1, #0
  01614	1a00000a	 bne         |$LN11@CreateNewN|
  01618	e59d1034	 ldr         r1, [sp, #0x34]
  0161c	e59d0028	 ldr         r0, [sp, #0x28]
  01620	eb000000	 bl          |?PaToVa@CPhysMem@@QAAPAEK@Z|
  01624	e58d000c	 str         r0, [sp, #0xC]
  01628	e59d2030	 ldr         r2, [sp, #0x30]
  0162c	e59d300c	 ldr         r3, [sp, #0xC]
  01630	e1520003	 cmp         r2, r3
  01634	1a000002	 bne         |$LN11@CreateNewN|
  01638	e3a03001	 mov         r3, #1
  0163c	e58d3010	 str         r3, [sp, #0x10]
  01640	ea000007	 b           |$LN12@CreateNewN|
  01644		 |$LN11@CreateNewN|
  01644	e3a03f5a	 mov         r3, #0x5A, 30
  01648	e59f2134	 ldr         r2, [pc, #0x134]
  0164c	e59f112c	 ldr         r1, [pc, #0x12C]
  01650	e59f0124	 ldr         r0, [pc, #0x124]
  01654	eb000000	 bl          NKDbgPrintfW
  01658	e6000010	 __debugbreak_ce
  0165c	e3a03000	 mov         r3, #0
  01660	e58d3010	 str         r3, [sp, #0x10]
  01664		 |$LN12@CreateNewN|
  01664		 |$LN5@CreateNewN|

; 361  :     }
; 362  : #endif // DEBUG
; 363  : 
; 364  :     PMEMLIST pNode;
; 365  :     //
; 366  :     // If we already have a node allocated and sitting around, use it.
; 367  :     //
; 368  :     if ((dwSize == 0) || IsListEmpty(m_pNodeFreeListHead)) {

  01664	e59d302c	 ldr         r3, [sp, #0x2C]
  01668	e3530000	 cmp         r3, #0
  0166c	0a000011	 beq         |$LN3@CreateNewN|
  01670	e59d3028	 ldr         r3, [sp, #0x28]
  01674	e2833040	 add         r3, r3, #0x40
  01678	e5933000	 ldr         r3, [r3]
  0167c	e283200c	 add         r2, r3, #0xC
  01680	e59d3028	 ldr         r3, [sp, #0x28]
  01684	e2833040	 add         r3, r3, #0x40
  01688	e5922000	 ldr         r2, [r2]
  0168c	e5933000	 ldr         r3, [r3]
  01690	e1520003	 cmp         r2, r3
  01694	1a000002	 bne         |$LN13@CreateNewN|
  01698	e3a03001	 mov         r3, #1
  0169c	e58d3014	 str         r3, [sp, #0x14]
  016a0	ea000001	 b           |$LN14@CreateNewN|
  016a4		 |$LN13@CreateNewN|
  016a4	e3a03000	 mov         r3, #0
  016a8	e58d3014	 str         r3, [sp, #0x14]
  016ac		 |$LN14@CreateNewN|
  016ac	e59d3014	 ldr         r3, [sp, #0x14]
  016b0	e3530000	 cmp         r3, #0
  016b4	0a000006	 beq         |$LN4@CreateNewN|
  016b8		 |$LN3@CreateNewN|

; 369  :         pNode = (PMEMLIST) CPhysMem_Alloc(LPTR, sizeof(MEMLIST));

  016b8	e3a010b4	 mov         r1, #0xB4
  016bc	e3a00040	 mov         r0, #0x40
  016c0	eb000000	 bl          LocalAlloc
  016c4	e58d0018	 str         r0, [sp, #0x18]
  016c8	e59d3018	 ldr         r3, [sp, #0x18]
  016cc	e58d3000	 str         r3, [sp]

; 370  :     } else {

  016d0	ea000008	 b           |$LN2@CreateNewN|
  016d4		 |$LN4@CreateNewN|

; 371  :         pNode = FirstNode(m_pNodeFreeListHead);

  016d4	e59d3028	 ldr         r3, [sp, #0x28]
  016d8	e2833040	 add         r3, r3, #0x40
  016dc	e5930000	 ldr         r0, [r3]
  016e0	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  016e4	e58d001c	 str         r0, [sp, #0x1C]
  016e8	e59d301c	 ldr         r3, [sp, #0x1C]
  016ec	e58d3000	 str         r3, [sp]

; 372  :         RemoveNode(pNode);

  016f0	e59d0000	 ldr         r0, [sp]
  016f4	eb000000	 bl          |?RemoveNode@@YAXPAUtMEMLIST@@@Z|
  016f8		 |$LN2@CreateNewN|

; 373  :     }
; 374  : 
; 375  :     if (pNode != NULL) {

  016f8	e59d3000	 ldr         r3, [sp]
  016fc	e3530000	 cmp         r3, #0
  01700	0a000016	 beq         |$LN1@CreateNewN|

; 376  :         pNode->dwVirtAddr = dwVirtAddr;

  01704	e59d2030	 ldr         r2, [sp, #0x30]
  01708	e59d3000	 ldr         r3, [sp]
  0170c	e5832000	 str         r2, [r3]

; 377  :         pNode->dwPhysAddr = dwPhysAddr;

  01710	e59d3000	 ldr         r3, [sp]
  01714	e2832004	 add         r2, r3, #4
  01718	e59d3034	 ldr         r3, [sp, #0x34]
  0171c	e5823000	 str         r3, [r2]

; 378  :         pNode->dwSize = dwSize;

  01720	e59d3000	 ldr         r3, [sp]
  01724	e2832008	 add         r2, r3, #8
  01728	e59d302c	 ldr         r3, [sp, #0x2C]
  0172c	e5823000	 str         r3, [r2]

; 379  :         pNode->next = NULL;

  01730	e59d3000	 ldr         r3, [sp]
  01734	e283200c	 add         r2, r3, #0xC
  01738	e3a03000	 mov         r3, #0
  0173c	e5823000	 str         r3, [r2]

; 380  :         pNode->prev = NULL;

  01740	e59d3000	 ldr         r3, [sp]
  01744	e2832010	 add         r2, r3, #0x10
  01748	e3a03000	 mov         r3, #0
  0174c	e5823000	 str         r3, [r2]

; 381  :     #ifdef DEBUG
; 382  :         _tcscpy( pNode->szDescription, TEXT("Default Desc") );

  01750	e59f1020	 ldr         r1, [pc, #0x20]
  01754	e59d3000	 ldr         r3, [sp]
  01758	e2830014	 add         r0, r3, #0x14
  0175c	eb000000	 bl          wcscpy
  01760		 |$LN1@CreateNewN|

; 383  :     #endif // DEBUG
; 384  :     }
; 385  :     
; 386  :     return (pNode);

  01760	e59d3000	 ldr         r3, [sp]
  01764	e58d3004	 str         r3, [sp, #4]

; 387  : }

  01768	e59d0004	 ldr         r0, [sp, #4]
  0176c	e28dd020	 add         sp, sp, #0x20
  01770	e89d6000	 ldmia       sp, {sp, lr}
  01774	e12fff1e	 bx          lr
  01778		 |$LN18@CreateNewN|
  01778		 |$LN19@CreateNewN|
  01778	00000000	 DCD         |??_C@_1BK@HELANJJ@?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAD?$AAe?$AAs?$AAc?$AA?$AA@|
  0177c		 |$LN20@CreateNewN|
  0177c	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  01780		 |$LN21@CreateNewN|
  01780	00000000	 DCD         |dpCurSettings|
  01784		 |$LN22@CreateNewN|
  01784	00000000	 DCD         |??_C@_1KM@IMBMOFHC@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  01788		 |$M34238|

			 ENDP  ; |?CreateNewNode@CPhysMem@@AAAPAUtMEMLIST@@KKK@Z|, CPhysMem::CreateNewNode

; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\usb\usb2com\cphysmem.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T34250| DCD	|$LN5@RemoveNode|
	DCD	0x40001d03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RemoveNode@@YAXPAUtMEMLIST@@@Z| PROC	; RemoveNode

; 228  : {

  00000		 |$LN5@RemoveNode|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M34247|

; 229  :     pNode->prev->next = pNode->next;

  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e283100c	 add         r1, r3, #0xC
  00014	e59d3008	 ldr         r3, [sp, #8]
  00018	e2833010	 add         r3, r3, #0x10
  0001c	e5933000	 ldr         r3, [r3]
  00020	e283200c	 add         r2, r3, #0xC
  00024	e5913000	 ldr         r3, [r1]
  00028	e5823000	 str         r3, [r2]

; 230  :     pNode->next->prev = pNode->prev;

  0002c	e59d3008	 ldr         r3, [sp, #8]
  00030	e2831010	 add         r1, r3, #0x10
  00034	e59d3008	 ldr         r3, [sp, #8]
  00038	e283300c	 add         r3, r3, #0xC
  0003c	e5933000	 ldr         r3, [r3]
  00040	e2832010	 add         r2, r3, #0x10
  00044	e5913000	 ldr         r3, [r1]
  00048	e5823000	 str         r3, [r2]

; 231  :     pNode->next = NULL;

  0004c	e59d3008	 ldr         r3, [sp, #8]
  00050	e283200c	 add         r2, r3, #0xC
  00054	e3a03000	 mov         r3, #0
  00058	e5823000	 str         r3, [r2]

; 232  :     pNode->prev = NULL;

  0005c	e59d3008	 ldr         r3, [sp, #8]
  00060	e2832010	 add         r2, r3, #0x10
  00064	e3a03000	 mov         r3, #0
  00068	e5823000	 str         r3, [r2]

; 233  : }

  0006c	e89d6000	 ldmia       sp, {sp, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$M34248|

			 ENDP  ; |?RemoveNode@@YAXPAUtMEMLIST@@@Z|, RemoveNode

	EXPORT	|??_C@_1BK@DHHEGMON@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AAd?$AA?5?$AAN?$AAo?$AAd?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?DeleteNode@CPhysMem@@AAAHPAUtMEMLIST@@@Z| ; CPhysMem::DeleteNode

  00020			 AREA	 |.pdata|, PDATA
|$T34258| DCD	|$LN5@DeleteNode|
	DCD	0x40002304
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\usb\usb2com\cphysmem.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@DHHEGMON@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AAd?$AA?5?$AAN?$AAo?$AAd?$AAe?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "N", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  01788			 AREA	 |.text|, CODE, ARM

  01788		 |?DeleteNode@CPhysMem@@AAAHPAUtMEMLIST@@@Z| PROC ; CPhysMem::DeleteNode

; 397  : {

  01788		 |$LN5@DeleteNode|
  01788	e1a0c00d	 mov         r12, sp
  0178c	e92d0003	 stmdb       sp!, {r0, r1}
  01790	e92d5000	 stmdb       sp!, {r12, lr}
  01794	e24dd008	 sub         sp, sp, #8
  01798		 |$M34255|

; 398  :     //
; 399  :     // We don't actually delete any of the nodes. We just keep them on our
; 400  :     // free list to use later. Keeps us from thrashing on the heap.
; 401  :     //
; 402  : #ifdef DEBUG
; 403  :     pNode->dwSize = 0xdeadbeef;

  01798	e59d3014	 ldr         r3, [sp, #0x14]
  0179c	e2832008	 add         r2, r3, #8
  017a0	e59f3068	 ldr         r3, [pc, #0x68]
  017a4	e5823000	 str         r3, [r2]

; 404  :     pNode->dwPhysAddr = 0xdeadbeef;

  017a8	e59d3014	 ldr         r3, [sp, #0x14]
  017ac	e2832004	 add         r2, r3, #4
  017b0	e59f3058	 ldr         r3, [pc, #0x58]
  017b4	e5823000	 str         r3, [r2]

; 405  :     pNode->dwVirtAddr = 0xdeadbeef;

  017b8	e59d2014	 ldr         r2, [sp, #0x14]
  017bc	e59f304c	 ldr         r3, [pc, #0x4C]
  017c0	e5823000	 str         r3, [r2]

; 406  :     _tcscpy( pNode->szDescription, TEXT("Deleted Node") );

  017c4	e59f1040	 ldr         r1, [pc, #0x40]
  017c8	e59d3014	 ldr         r3, [sp, #0x14]
  017cc	e2830014	 add         r0, r3, #0x14
  017d0	eb000000	 bl          wcscpy

; 407  : #endif // DEBUG
; 408  :     InsertNodeBefore(pNode, FirstNode(m_pNodeFreeListHead));

  017d4	e59d3010	 ldr         r3, [sp, #0x10]
  017d8	e2833040	 add         r3, r3, #0x40
  017dc	e5930000	 ldr         r0, [r3]
  017e0	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  017e4	e58d0004	 str         r0, [sp, #4]
  017e8	e59d1004	 ldr         r1, [sp, #4]
  017ec	e59d0014	 ldr         r0, [sp, #0x14]
  017f0	eb000000	 bl          |?InsertNodeBefore@@YAXPAUtMEMLIST@@0@Z|

; 409  :     return(TRUE);

  017f4	e3a03001	 mov         r3, #1
  017f8	e58d3000	 str         r3, [sp]

; 410  : }

  017fc	e59d0000	 ldr         r0, [sp]
  01800	e28dd008	 add         sp, sp, #8
  01804	e89d6000	 ldmia       sp, {sp, lr}
  01808	e12fff1e	 bx          lr
  0180c		 |$LN6@DeleteNode|
  0180c		 |$LN7@DeleteNode|
  0180c	00000000	 DCD         |??_C@_1BK@DHHEGMON@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AAd?$AA?5?$AAN?$AAo?$AAd?$AAe?$AA?$AA@|
  01810		 |$LN8@DeleteNode|
  01810	deadbeef	 DCD         0xdeadbeef
  01814		 |$M34256|

			 ENDP  ; |?DeleteNode@CPhysMem@@AAAHPAUtMEMLIST@@@Z|, CPhysMem::DeleteNode

	EXPORT	|?FindFreeBlock@CPhysMem@@AAAPAUtMEMLIST@@KH@Z| ; CPhysMem::FindFreeBlock

  00028			 AREA	 |.pdata|, PDATA
|$T34275| DCD	|$LN16@FindFreeBl|
	DCD	0x40005a04
; Function compile flags: /Odtp

  01814			 AREA	 |.text|, CODE, ARM

  01814		 |?FindFreeBlock@CPhysMem@@AAAPAUtMEMLIST@@KH@Z| PROC ; CPhysMem::FindFreeBlock

; 421  : {

  01814		 |$LN16@FindFreeBl|
  01814	e1a0c00d	 mov         r12, sp
  01818	e92d0007	 stmdb       sp!, {r0 - r2}
  0181c	e92d5000	 stmdb       sp!, {r12, lr}
  01820	e24dd01c	 sub         sp, sp, #0x1C
  01824		 |$M34272|

; 422  :     DEBUGCHK( dwSize >= CPHYSMEM_MEMORY_ALIGNMENT &&
; 423  :               dwSize % CPHYSMEM_MEMORY_ALIGNMENT == 0 );

  01824	e59d3028	 ldr         r3, [sp, #0x28]
  01828	e3530020	 cmp         r3, #0x20
  0182c	3a000007	 bcc         |$LN6@FindFreeBl|
  01830	e59d1028	 ldr         r1, [sp, #0x28]
  01834	e3a00020	 mov         r0, #0x20
  01838	eb000000	 bl          __rt_udiv
  0183c	e3510000	 cmp         r1, #0
  01840	1a000002	 bne         |$LN6@FindFreeBl|
  01844	e3a03001	 mov         r3, #1
  01848	e58d3008	 str         r3, [sp, #8]
  0184c	ea000008	 b           |$LN7@FindFreeBl|
  01850		 |$LN6@FindFreeBl|
  01850	e3a03c01	 mov         r3, #1, 24
  01854	e38330a7	 orr         r3, r3, #0xA7
  01858	e59f2118	 ldr         r2, [pc, #0x118]
  0185c	e59f1110	 ldr         r1, [pc, #0x110]
  01860	e59f0108	 ldr         r0, [pc, #0x108]
  01864	eb000000	 bl          NKDbgPrintfW
  01868	e6000010	 __debugbreak_ce
  0186c	e3a03000	 mov         r3, #0
  01870	e58d3008	 str         r3, [sp, #8]
  01874		 |$LN7@FindFreeBl|

; 424  :     //
; 425  :     // The free list is sorted by increasing block sizes, so just find the 
; 426  :     // first block that's at least "dwSize" big.
; 427  :     //
; 428  :     PMEMLIST pNode = FirstNode(FREELIST(fHighPri));

  01874	e59d302c	 ldr         r3, [sp, #0x2C]
  01878	e3530000	 cmp         r3, #0
  0187c	0a000004	 beq         |$LN8@FindFreeBl|
  01880	e59d3024	 ldr         r3, [sp, #0x24]
  01884	e2833074	 add         r3, r3, #0x74
  01888	e5933000	 ldr         r3, [r3]
  0188c	e58d300c	 str         r3, [sp, #0xC]
  01890	ea000003	 b           |$LN9@FindFreeBl|
  01894		 |$LN8@FindFreeBl|
  01894	e59d3024	 ldr         r3, [sp, #0x24]
  01898	e283305c	 add         r3, r3, #0x5C
  0189c	e5933000	 ldr         r3, [r3]
  018a0	e58d300c	 str         r3, [sp, #0xC]
  018a4		 |$LN9@FindFreeBl|
  018a4	e59d000c	 ldr         r0, [sp, #0xC]
  018a8	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  018ac	e58d0010	 str         r0, [sp, #0x10]
  018b0	e59d3010	 ldr         r3, [sp, #0x10]
  018b4	e58d3000	 str         r3, [sp]
  018b8		 |$LN3@FindFreeBl|

; 429  :     
; 430  :     while (!EndOfList(FREELIST(fHighPri), pNode)) {

  018b8	e59d302c	 ldr         r3, [sp, #0x2C]
  018bc	e3530000	 cmp         r3, #0
  018c0	0a000004	 beq         |$LN10@FindFreeBl|
  018c4	e59d3024	 ldr         r3, [sp, #0x24]
  018c8	e2833074	 add         r3, r3, #0x74
  018cc	e5933000	 ldr         r3, [r3]
  018d0	e58d3014	 str         r3, [sp, #0x14]
  018d4	ea000003	 b           |$LN11@FindFreeBl|
  018d8		 |$LN10@FindFreeBl|
  018d8	e59d3024	 ldr         r3, [sp, #0x24]
  018dc	e283305c	 add         r3, r3, #0x5C
  018e0	e5933000	 ldr         r3, [r3]
  018e4	e58d3014	 str         r3, [sp, #0x14]
  018e8		 |$LN11@FindFreeBl|
  018e8	e59d2014	 ldr         r2, [sp, #0x14]
  018ec	e59d3000	 ldr         r3, [sp]
  018f0	e1520003	 cmp         r2, r3
  018f4	1a000002	 bne         |$LN12@FindFreeBl|
  018f8	e3a03001	 mov         r3, #1
  018fc	e58d3018	 str         r3, [sp, #0x18]
  01900	ea000001	 b           |$LN13@FindFreeBl|
  01904		 |$LN12@FindFreeBl|
  01904	e3a03000	 mov         r3, #0
  01908	e58d3018	 str         r3, [sp, #0x18]
  0190c		 |$LN13@FindFreeBl|
  0190c	e59d3018	 ldr         r3, [sp, #0x18]
  01910	e3530000	 cmp         r3, #0
  01914	1a00000f	 bne         |$LN2@FindFreeBl|

; 431  :         if (dwSize <= pNode->dwSize) {

  01918	e59d3000	 ldr         r3, [sp]
  0191c	e2833008	 add         r3, r3, #8
  01920	e59d2028	 ldr         r2, [sp, #0x28]
  01924	e5933000	 ldr         r3, [r3]
  01928	e1520003	 cmp         r2, r3
  0192c	8a000004	 bhi         |$LN1@FindFreeBl|

; 432  :             RemoveNode(pNode);

  01930	e59d0000	 ldr         r0, [sp]
  01934	eb000000	 bl          |?RemoveNode@@YAXPAUtMEMLIST@@@Z|

; 433  :             return (pNode);

  01938	e59d3000	 ldr         r3, [sp]
  0193c	e58d3004	 str         r3, [sp, #4]
  01940	ea000006	 b           |$LN4@FindFreeBl|
  01944		 |$LN1@FindFreeBl|

; 434  :         }
; 435  :         pNode = pNode->next;

  01944	e59d3000	 ldr         r3, [sp]
  01948	e283300c	 add         r3, r3, #0xC
  0194c	e5933000	 ldr         r3, [r3]
  01950	e58d3000	 str         r3, [sp]

; 436  :     }

  01954	eaffffd7	 b           |$LN3@FindFreeBl|
  01958		 |$LN2@FindFreeBl|

; 437  :     
; 438  :     return (NULL);

  01958	e3a03000	 mov         r3, #0
  0195c	e58d3004	 str         r3, [sp, #4]
  01960		 |$LN4@FindFreeBl|

; 439  : }

  01960	e59d0004	 ldr         r0, [sp, #4]
  01964	e28dd01c	 add         sp, sp, #0x1C
  01968	e89d6000	 ldmia       sp, {sp, lr}
  0196c	e12fff1e	 bx          lr
  01970		 |$LN17@FindFreeBl|
  01970		 |$LN18@FindFreeBl|
  01970	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  01974		 |$LN19@FindFreeBl|
  01974	00000000	 DCD         |dpCurSettings|
  01978		 |$LN20@FindFreeBl|
  01978	00000000	 DCD         |??_C@_1KM@IMBMOFHC@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  0197c		 |$M34273|

			 ENDP  ; |?FindFreeBlock@CPhysMem@@AAAPAUtMEMLIST@@KH@Z|, CPhysMem::FindFreeBlock

	EXPORT	|?AddNodeToFreeList@CPhysMem@@AAAHPAUtMEMLIST@@H@Z| ; CPhysMem::AddNodeToFreeList

  00030			 AREA	 |.pdata|, PDATA
|$T34297| DCD	|$LN30@AddNodeToF|
	DCD	0x4000d204
; Function compile flags: /Odtp

  0197c			 AREA	 |.text|, CODE, ARM

  0197c		 |?AddNodeToFreeList@CPhysMem@@AAAHPAUtMEMLIST@@H@Z| PROC ; CPhysMem::AddNodeToFreeList

; 450  : {

  0197c		 |$LN30@AddNodeToF|
  0197c	e1a0c00d	 mov         r12, sp
  01980	e92d0007	 stmdb       sp!, {r0 - r2}
  01984	e92d5000	 stmdb       sp!, {r12, lr}
  01988	e24dd038	 sub         sp, sp, #0x38
  0198c		 |$M34294|

; 451  :     //
; 452  :     // The free list is sorted by increasing block sizes, not by increasing
; 453  :     // address so we must scan the list for any possible connecting free blocks,
; 454  :     // and then coalesce them into a single free block. There will be at most
; 455  :     // two blocks to find (one on either end) so scan for both of them.
; 456  :     //
; 457  :     PMEMLIST pNodeTraverse = FirstNode(FREELIST(fHighPri));

  0198c	e59d3048	 ldr         r3, [sp, #0x48]
  01990	e3530000	 cmp         r3, #0
  01994	0a000004	 beq         |$LN16@AddNodeToF|
  01998	e59d3040	 ldr         r3, [sp, #0x40]
  0199c	e2833074	 add         r3, r3, #0x74
  019a0	e5933000	 ldr         r3, [r3]
  019a4	e58d3018	 str         r3, [sp, #0x18]
  019a8	ea000003	 b           |$LN17@AddNodeToF|
  019ac		 |$LN16@AddNodeToF|
  019ac	e59d3040	 ldr         r3, [sp, #0x40]
  019b0	e283305c	 add         r3, r3, #0x5C
  019b4	e5933000	 ldr         r3, [r3]
  019b8	e58d3018	 str         r3, [sp, #0x18]
  019bc		 |$LN17@AddNodeToF|
  019bc	e59d0018	 ldr         r0, [sp, #0x18]
  019c0	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  019c4	e58d001c	 str         r0, [sp, #0x1C]
  019c8	e59d301c	 ldr         r3, [sp, #0x1C]
  019cc	e58d3010	 str         r3, [sp, #0x10]

; 458  :     
; 459  :     PMEMLIST pNodePrevious = NULL; // Points to the previous connecting free block

  019d0	e3a03000	 mov         r3, #0
  019d4	e58d300c	 str         r3, [sp, #0xC]

; 460  :     PMEMLIST pNodeNext = NULL;     // Points to the next connecting free block

  019d8	e3a03000	 mov         r3, #0
  019dc	e58d3008	 str         r3, [sp, #8]

; 461  :     //
; 462  :     // The endpoints that we are trying to match up to.
; 463  :     //
; 464  :     DWORD dwThisPA = pNode->dwPhysAddr;

  019e0	e59d3044	 ldr         r3, [sp, #0x44]
  019e4	e2833004	 add         r3, r3, #4
  019e8	e5933000	 ldr         r3, [r3]
  019ec	e58d3004	 str         r3, [sp, #4]

; 465  :     DWORD dwNextPA = MEMLIST_NEXT_PA(pNode);

  019f0	e59d3044	 ldr         r3, [sp, #0x44]
  019f4	e2832004	 add         r2, r3, #4
  019f8	e59d3044	 ldr         r3, [sp, #0x44]
  019fc	e2833008	 add         r3, r3, #8
  01a00	e5922000	 ldr         r2, [r2]
  01a04	e5933000	 ldr         r3, [r3]
  01a08	e0823003	 add         r3, r2, r3
  01a0c	e58d3000	 str         r3, [sp]
  01a10		 |$LN13@AddNodeToF|

; 466  : 
; 467  :     //
; 468  :     // Walk the list looking for blocks that are next to this one.
; 469  :     //
; 470  :     while (!EndOfList(FREELIST(fHighPri), pNodeTraverse)) {

  01a10	e59d3048	 ldr         r3, [sp, #0x48]
  01a14	e3530000	 cmp         r3, #0
  01a18	0a000004	 beq         |$LN18@AddNodeToF|
  01a1c	e59d3040	 ldr         r3, [sp, #0x40]
  01a20	e2833074	 add         r3, r3, #0x74
  01a24	e5933000	 ldr         r3, [r3]
  01a28	e58d3020	 str         r3, [sp, #0x20]
  01a2c	ea000003	 b           |$LN19@AddNodeToF|
  01a30		 |$LN18@AddNodeToF|
  01a30	e59d3040	 ldr         r3, [sp, #0x40]
  01a34	e283305c	 add         r3, r3, #0x5C
  01a38	e5933000	 ldr         r3, [r3]
  01a3c	e58d3020	 str         r3, [sp, #0x20]
  01a40		 |$LN19@AddNodeToF|
  01a40	e59d2020	 ldr         r2, [sp, #0x20]
  01a44	e59d3010	 ldr         r3, [sp, #0x10]
  01a48	e1520003	 cmp         r2, r3
  01a4c	1a000002	 bne         |$LN20@AddNodeToF|
  01a50	e3a03001	 mov         r3, #1
  01a54	e58d3024	 str         r3, [sp, #0x24]
  01a58	ea000001	 b           |$LN21@AddNodeToF|
  01a5c		 |$LN20@AddNodeToF|
  01a5c	e3a03000	 mov         r3, #0
  01a60	e58d3024	 str         r3, [sp, #0x24]
  01a64		 |$LN21@AddNodeToF|
  01a64	e59d3024	 ldr         r3, [sp, #0x24]
  01a68	e3530000	 cmp         r3, #0
  01a6c	1a000021	 bne         |$LN12@AddNodeToF|

; 471  : 
; 472  :         if (dwThisPA == MEMLIST_NEXT_PA(pNodeTraverse)) {

  01a70	e59d3010	 ldr         r3, [sp, #0x10]
  01a74	e2832004	 add         r2, r3, #4
  01a78	e59d3010	 ldr         r3, [sp, #0x10]
  01a7c	e2833008	 add         r3, r3, #8
  01a80	e5922000	 ldr         r2, [r2]
  01a84	e5933000	 ldr         r3, [r3]
  01a88	e0822003	 add         r2, r2, r3
  01a8c	e59d3004	 ldr         r3, [sp, #4]
  01a90	e1530002	 cmp         r3, r2
  01a94	1a000002	 bne         |$LN11@AddNodeToF|

; 473  :             //
; 474  :             // We've found the block just ahead of this one. Remember it.
; 475  :             //
; 476  :             pNodePrevious = pNodeTraverse;

  01a98	e59d3010	 ldr         r3, [sp, #0x10]
  01a9c	e58d300c	 str         r3, [sp, #0xC]
  01aa0	ea000007	 b           |$LN10@AddNodeToF|
  01aa4		 |$LN11@AddNodeToF|

; 477  : 
; 478  :         } else if (dwNextPA == pNodeTraverse->dwPhysAddr) {

  01aa4	e59d3010	 ldr         r3, [sp, #0x10]
  01aa8	e2833004	 add         r3, r3, #4
  01aac	e59d2000	 ldr         r2, [sp]
  01ab0	e5933000	 ldr         r3, [r3]
  01ab4	e1520003	 cmp         r2, r3
  01ab8	1a000001	 bne         |$LN9@AddNodeToF|

; 479  :             //
; 480  :             // We've found the block just after of this one.
; 481  :             //
; 482  :             pNodeNext = pNodeTraverse;

  01abc	e59d3010	 ldr         r3, [sp, #0x10]
  01ac0	e58d3008	 str         r3, [sp, #8]
  01ac4		 |$LN9@AddNodeToF|
  01ac4		 |$LN10@AddNodeToF|

; 483  :         }
; 484  : 
; 485  :         if ((pNodePrevious == NULL) || (pNodeNext == NULL)) {

  01ac4	e59d300c	 ldr         r3, [sp, #0xC]
  01ac8	e3530000	 cmp         r3, #0
  01acc	0a000002	 beq         |$LN7@AddNodeToF|
  01ad0	e59d3008	 ldr         r3, [sp, #8]
  01ad4	e3530000	 cmp         r3, #0
  01ad8	1a000004	 bne         |$LN8@AddNodeToF|
  01adc		 |$LN7@AddNodeToF|

; 486  :             //
; 487  :             // We haven't connected both ends, so keep on looking...
; 488  :             //
; 489  :             pNodeTraverse = pNodeTraverse->next;

  01adc	e59d3010	 ldr         r3, [sp, #0x10]
  01ae0	e283300c	 add         r3, r3, #0xC
  01ae4	e5933000	 ldr         r3, [r3]
  01ae8	e58d3010	 str         r3, [sp, #0x10]

; 490  :         } else {

  01aec	ea000000	 b           |$LN6@AddNodeToF|
  01af0		 |$LN8@AddNodeToF|

; 491  :             //
; 492  :             // We've found blocks to connect on both ends, let's get on with it.
; 493  :             //
; 494  :             break;

  01af0	ea000000	 b           |$LN12@AddNodeToF|
  01af4		 |$LN6@AddNodeToF|

; 495  :         }
; 496  :     }

  01af4	eaffffc5	 b           |$LN13@AddNodeToF|
  01af8		 |$LN12@AddNodeToF|

; 497  :     
; 498  : 
; 499  :     if (pNodePrevious != NULL) {

  01af8	e59d300c	 ldr         r3, [sp, #0xC]
  01afc	e3530000	 cmp         r3, #0
  01b00	0a000018	 beq         |$LN5@AddNodeToF|

; 500  :         //
; 501  :         // Combine with the previous block.
; 502  :         //
; 503  :         RemoveNode(pNodePrevious);

  01b04	e59d000c	 ldr         r0, [sp, #0xC]
  01b08	eb000000	 bl          |?RemoveNode@@YAXPAUtMEMLIST@@@Z|

; 504  :         //
; 505  :         // Grow pNode to hold both.
; 506  :         //
; 507  :         pNode->dwSize = pNode->dwSize + pNodePrevious->dwSize;

  01b0c	e59d3044	 ldr         r3, [sp, #0x44]
  01b10	e2832008	 add         r2, r3, #8
  01b14	e59d300c	 ldr         r3, [sp, #0xC]
  01b18	e2833008	 add         r3, r3, #8
  01b1c	e5922000	 ldr         r2, [r2]
  01b20	e5933000	 ldr         r3, [r3]
  01b24	e0822003	 add         r2, r2, r3
  01b28	e59d3044	 ldr         r3, [sp, #0x44]
  01b2c	e2833008	 add         r3, r3, #8
  01b30	e5832000	 str         r2, [r3]

; 508  :         pNode->dwVirtAddr = pNodePrevious->dwVirtAddr;

  01b34	e59d300c	 ldr         r3, [sp, #0xC]
  01b38	e5932000	 ldr         r2, [r3]
  01b3c	e59d3044	 ldr         r3, [sp, #0x44]
  01b40	e5832000	 str         r2, [r3]

; 509  :         pNode->dwPhysAddr = pNodePrevious->dwPhysAddr;

  01b44	e59d300c	 ldr         r3, [sp, #0xC]
  01b48	e2831004	 add         r1, r3, #4
  01b4c	e59d3044	 ldr         r3, [sp, #0x44]
  01b50	e2832004	 add         r2, r3, #4
  01b54	e5913000	 ldr         r3, [r1]
  01b58	e5823000	 str         r3, [r2]

; 510  :         DeleteNode(pNodePrevious);

  01b5c	e59d100c	 ldr         r1, [sp, #0xC]
  01b60	e59d0040	 ldr         r0, [sp, #0x40]
  01b64	eb000000	 bl          |?DeleteNode@CPhysMem@@AAAHPAUtMEMLIST@@@Z|
  01b68		 |$LN5@AddNodeToF|

; 511  :     }
; 512  : 
; 513  :     if (pNodeNext != NULL) {

  01b68	e59d3008	 ldr         r3, [sp, #8]
  01b6c	e3530000	 cmp         r3, #0
  01b70	0a000013	 beq         |$LN4@AddNodeToF|

; 514  :         //
; 515  :         // Combine with the next block.
; 516  :         //
; 517  :         RemoveNode(pNodeNext);

  01b74	e59d0008	 ldr         r0, [sp, #8]
  01b78	eb000000	 bl          |?RemoveNode@@YAXPAUtMEMLIST@@@Z|

; 518  :         //
; 519  :         // Grow pNode to hold both.
; 520  :         //
; 521  :         pNode->dwSize = pNode->dwSize + pNodeNext->dwSize;

  01b7c	e59d3044	 ldr         r3, [sp, #0x44]
  01b80	e2832008	 add         r2, r3, #8
  01b84	e59d3008	 ldr         r3, [sp, #8]
  01b88	e2833008	 add         r3, r3, #8
  01b8c	e5922000	 ldr         r2, [r2]
  01b90	e5933000	 ldr         r3, [r3]
  01b94	e0822003	 add         r2, r2, r3
  01b98	e59d3044	 ldr         r3, [sp, #0x44]
  01b9c	e2833008	 add         r3, r3, #8
  01ba0	e5832000	 str         r2, [r3]

; 522  :     #ifdef DEBUG
; 523  :         // take description of the largest block
; 524  :         _tcscpy( pNode->szDescription, pNodeNext->szDescription );

  01ba4	e59d3008	 ldr         r3, [sp, #8]
  01ba8	e2831014	 add         r1, r3, #0x14
  01bac	e59d3044	 ldr         r3, [sp, #0x44]
  01bb0	e2830014	 add         r0, r3, #0x14
  01bb4	eb000000	 bl          wcscpy

; 525  :     #endif // DEBUG
; 526  :         DeleteNode(pNodeNext);

  01bb8	e59d1008	 ldr         r1, [sp, #8]
  01bbc	e59d0040	 ldr         r0, [sp, #0x40]
  01bc0	eb000000	 bl          |?DeleteNode@CPhysMem@@AAAHPAUtMEMLIST@@@Z|
  01bc4		 |$LN4@AddNodeToF|

; 527  :     }
; 528  : 
; 529  :     //
; 530  :     // Add pNode to the free list in sorted size order.
; 531  :     //
; 532  :     pNodeTraverse = FirstNode(FREELIST(fHighPri));

  01bc4	e59d3048	 ldr         r3, [sp, #0x48]
  01bc8	e3530000	 cmp         r3, #0
  01bcc	0a000004	 beq         |$LN22@AddNodeToF|
  01bd0	e59d3040	 ldr         r3, [sp, #0x40]
  01bd4	e2833074	 add         r3, r3, #0x74
  01bd8	e5933000	 ldr         r3, [r3]
  01bdc	e58d3028	 str         r3, [sp, #0x28]
  01be0	ea000003	 b           |$LN23@AddNodeToF|
  01be4		 |$LN22@AddNodeToF|
  01be4	e59d3040	 ldr         r3, [sp, #0x40]
  01be8	e283305c	 add         r3, r3, #0x5C
  01bec	e5933000	 ldr         r3, [r3]
  01bf0	e58d3028	 str         r3, [sp, #0x28]
  01bf4		 |$LN23@AddNodeToF|
  01bf4	e59d0028	 ldr         r0, [sp, #0x28]
  01bf8	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  01bfc	e58d002c	 str         r0, [sp, #0x2C]
  01c00	e59d302c	 ldr         r3, [sp, #0x2C]
  01c04	e58d3010	 str         r3, [sp, #0x10]
  01c08		 |$LN3@AddNodeToF|

; 533  :     
; 534  :     while (!EndOfList(FREELIST(fHighPri), pNodeTraverse)) {

  01c08	e59d3048	 ldr         r3, [sp, #0x48]
  01c0c	e3530000	 cmp         r3, #0
  01c10	0a000004	 beq         |$LN24@AddNodeToF|
  01c14	e59d3040	 ldr         r3, [sp, #0x40]
  01c18	e2833074	 add         r3, r3, #0x74
  01c1c	e5933000	 ldr         r3, [r3]
  01c20	e58d3030	 str         r3, [sp, #0x30]
  01c24	ea000003	 b           |$LN25@AddNodeToF|
  01c28		 |$LN24@AddNodeToF|
  01c28	e59d3040	 ldr         r3, [sp, #0x40]
  01c2c	e283305c	 add         r3, r3, #0x5C
  01c30	e5933000	 ldr         r3, [r3]
  01c34	e58d3030	 str         r3, [sp, #0x30]
  01c38		 |$LN25@AddNodeToF|
  01c38	e59d2030	 ldr         r2, [sp, #0x30]
  01c3c	e59d3010	 ldr         r3, [sp, #0x10]
  01c40	e1520003	 cmp         r2, r3
  01c44	1a000002	 bne         |$LN26@AddNodeToF|
  01c48	e3a03001	 mov         r3, #1
  01c4c	e58d3034	 str         r3, [sp, #0x34]
  01c50	ea000001	 b           |$LN27@AddNodeToF|
  01c54		 |$LN26@AddNodeToF|
  01c54	e3a03000	 mov         r3, #0
  01c58	e58d3034	 str         r3, [sp, #0x34]
  01c5c		 |$LN27@AddNodeToF|
  01c5c	e59d3034	 ldr         r3, [sp, #0x34]
  01c60	e3530000	 cmp         r3, #0
  01c64	1a00000d	 bne         |$LN2@AddNodeToF|

; 535  : 
; 536  :         if (pNode->dwSize <= pNodeTraverse->dwSize) {

  01c68	e59d3044	 ldr         r3, [sp, #0x44]
  01c6c	e2832008	 add         r2, r3, #8
  01c70	e59d3010	 ldr         r3, [sp, #0x10]
  01c74	e2833008	 add         r3, r3, #8
  01c78	e5922000	 ldr         r2, [r2]
  01c7c	e5933000	 ldr         r3, [r3]
  01c80	e1520003	 cmp         r2, r3
  01c84	8a000000	 bhi         |$LN1@AddNodeToF|

; 537  :             break;

  01c88	ea000004	 b           |$LN2@AddNodeToF|
  01c8c		 |$LN1@AddNodeToF|

; 538  :         }
; 539  :         pNodeTraverse = pNodeTraverse->next;

  01c8c	e59d3010	 ldr         r3, [sp, #0x10]
  01c90	e283300c	 add         r3, r3, #0xC
  01c94	e5933000	 ldr         r3, [r3]
  01c98	e58d3010	 str         r3, [sp, #0x10]

; 540  :     }

  01c9c	eaffffd9	 b           |$LN3@AddNodeToF|
  01ca0		 |$LN2@AddNodeToF|

; 541  : 
; 542  :     //
; 543  :     // Insert this node before the traverse node.
; 544  :     //
; 545  :     InsertNodeBefore(pNode, pNodeTraverse);

  01ca0	e59d1010	 ldr         r1, [sp, #0x10]
  01ca4	e59d0044	 ldr         r0, [sp, #0x44]
  01ca8	eb000000	 bl          |?InsertNodeBefore@@YAXPAUtMEMLIST@@0@Z|

; 546  : 
; 547  :     return TRUE;

  01cac	e3a03001	 mov         r3, #1
  01cb0	e58d3014	 str         r3, [sp, #0x14]

; 548  : }

  01cb4	e59d0014	 ldr         r0, [sp, #0x14]
  01cb8	e28dd038	 add         sp, sp, #0x38
  01cbc	e89d6000	 ldmia       sp, {sp, lr}
  01cc0	e12fff1e	 bx          lr
  01cc4		 |$M34295|

			 ENDP  ; |?AddNodeToFreeList@CPhysMem@@AAAHPAUtMEMLIST@@H@Z|, CPhysMem::AddNodeToFreeList

	EXPORT	|??1CPhysMem@@QAA@XZ|			; CPhysMem::~CPhysMem
	IMPORT	|FreePhysMem|
	IMPORT	|CloseHandle|
	IMPORT	|DeleteCriticalSection|

  00038			 AREA	 |.pdata|, PDATA
|$T34302| DCD	|$LN6@CPhysMem@2|
	DCD	0x40002903
; Function compile flags: /Odtp

  01cc4			 AREA	 |.text|, CODE, ARM

  01cc4		 |??1CPhysMem@@QAA@XZ| PROC		; CPhysMem::~CPhysMem

; 555  : {

  01cc4		 |$LN6@CPhysMem@2|
  01cc4	e1a0c00d	 mov         r12, sp
  01cc8	e92d0001	 stmdb       sp!, {r0}
  01ccc	e92d5000	 stmdb       sp!, {r12, lr}
  01cd0		 |$M34299|

; 556  :     DeleteCriticalSection(&m_csLock);

  01cd0	e59d3008	 ldr         r3, [sp, #8]
  01cd4	e2830010	 add         r0, r3, #0x10
  01cd8	eb000000	 bl          DeleteCriticalSection

; 557  :     CloseHandle(m_hFreeMemEvent);

  01cdc	e59d3008	 ldr         r3, [sp, #8]
  01ce0	e283302c	 add         r3, r3, #0x2C
  01ce4	e5930000	 ldr         r0, [r3]
  01ce8	eb000000	 bl          CloseHandle

; 558  : 
; 559  :     FreeList(&m_pInUseListHead);

  01cec	e59d3008	 ldr         r3, [sp, #8]
  01cf0	e2831060	 add         r1, r3, #0x60
  01cf4	e59d0008	 ldr         r0, [sp, #8]
  01cf8	eb000000	 bl          |?FreeList@CPhysMem@@AAAHPAPAUtMEMLIST@@@Z|

; 560  :     FreeList(&m_pFreeListHead);

  01cfc	e59d3008	 ldr         r3, [sp, #8]
  01d00	e283105c	 add         r1, r3, #0x5C
  01d04	e59d0008	 ldr         r0, [sp, #8]
  01d08	eb000000	 bl          |?FreeList@CPhysMem@@AAAHPAPAUtMEMLIST@@@Z|

; 561  :     FreeList(&m_pHighPriorityInUseListHead);

  01d0c	e59d3008	 ldr         r3, [sp, #8]
  01d10	e2831070	 add         r1, r3, #0x70
  01d14	e59d0008	 ldr         r0, [sp, #8]
  01d18	eb000000	 bl          |?FreeList@CPhysMem@@AAAHPAPAUtMEMLIST@@@Z|

; 562  :     FreeList(&m_pHighPriorityFreeListHead);

  01d1c	e59d3008	 ldr         r3, [sp, #8]
  01d20	e2831074	 add         r1, r3, #0x74
  01d24	e59d0008	 ldr         r0, [sp, #8]
  01d28	eb000000	 bl          |?FreeList@CPhysMem@@AAAHPAPAUtMEMLIST@@@Z|

; 563  : 
; 564  :     FreeList(&m_pNodeFreeListHead);

  01d2c	e59d3008	 ldr         r3, [sp, #8]
  01d30	e2831040	 add         r1, r3, #0x40
  01d34	e59d0008	 ldr         r0, [sp, #8]
  01d38	eb000000	 bl          |?FreeList@CPhysMem@@AAAHPAPAUtMEMLIST@@@Z|

; 565  : 
; 566  :     if (!m_fPhysFromPlat)

  01d3c	e59d3008	 ldr         r3, [sp, #8]
  01d40	e2833028	 add         r3, r3, #0x28
  01d44	e5933000	 ldr         r3, [r3]
  01d48	e3530000	 cmp         r3, #0
  01d4c	1a000003	 bne         |$LN1@CPhysMem@2|

; 567  :         FreePhysMem(m_pPhysicalBufferAddr);

  01d50	e59d3008	 ldr         r3, [sp, #8]
  01d54	e283303c	 add         r3, r3, #0x3C
  01d58	e5930000	 ldr         r0, [r3]
  01d5c	eb000000	 bl          FreePhysMem
  01d60		 |$LN1@CPhysMem@2|

; 568  : }

  01d60	e89d6000	 ldmia       sp, {sp, lr}
  01d64	e12fff1e	 bx          lr
  01d68		 |$M34300|

			 ENDP  ; |??1CPhysMem@@QAA@XZ|, CPhysMem::~CPhysMem

	IMPORT	|LocalFree|

  00040			 AREA	 |.pdata|, PDATA
|$T34310| DCD	|$LN10@FreeList|
	DCD	0x40003904
; Function compile flags: /Odtp

  01d68			 AREA	 |.text|, CODE, ARM

  01d68		 |?FreeList@CPhysMem@@AAAHPAPAUtMEMLIST@@@Z| PROC ; CPhysMem::FreeList

; 575  : {

  01d68		 |$LN10@FreeList|
  01d68	e1a0c00d	 mov         r12, sp
  01d6c	e92d0003	 stmdb       sp!, {r0, r1}
  01d70	e92d5000	 stmdb       sp!, {r12, lr}
  01d74	e24dd010	 sub         sp, sp, #0x10
  01d78		 |$M34307|

; 576  :     PMEMLIST pCurrent;
; 577  :     PMEMLIST pNext;
; 578  : 
; 579  :     if ( *ppHead != NULL ) {

  01d78	e59d301c	 ldr         r3, [sp, #0x1C]
  01d7c	e5933000	 ldr         r3, [r3]
  01d80	e3530000	 cmp         r3, #0
  01d84	0a000027	 beq         |$LN3@FreeList|

; 580  :         pCurrent = (*ppHead)->next;

  01d88	e59d301c	 ldr         r3, [sp, #0x1C]
  01d8c	e5933000	 ldr         r3, [r3]
  01d90	e283300c	 add         r3, r3, #0xC
  01d94	e5933000	 ldr         r3, [r3]
  01d98	e58d3004	 str         r3, [sp, #4]
  01d9c		 |$LN2@FreeList|

; 581  :         while ( pCurrent != *ppHead ) {

  01d9c	e59d2004	 ldr         r2, [sp, #4]
  01da0	e59d301c	 ldr         r3, [sp, #0x1C]
  01da4	e5933000	 ldr         r3, [r3]
  01da8	e1520003	 cmp         r2, r3
  01dac	0a000017	 beq         |$LN1@FreeList|

; 582  :             DEBUGCHK( pCurrent != NULL );

  01db0	e59d3004	 ldr         r3, [sp, #4]
  01db4	e3530000	 cmp         r3, #0
  01db8	0a000002	 beq         |$LN6@FreeList|
  01dbc	e3a03001	 mov         r3, #1
  01dc0	e58d300c	 str         r3, [sp, #0xC]
  01dc4	ea000008	 b           |$LN7@FreeList|
  01dc8		 |$LN6@FreeList|
  01dc8	e3a03c02	 mov         r3, #2, 24
  01dcc	e3833046	 orr         r3, r3, #0x46
  01dd0	e59f2070	 ldr         r2, [pc, #0x70]
  01dd4	e59f1068	 ldr         r1, [pc, #0x68]
  01dd8	e59f0060	 ldr         r0, [pc, #0x60]
  01ddc	eb000000	 bl          NKDbgPrintfW
  01de0	e6000010	 __debugbreak_ce
  01de4	e3a03000	 mov         r3, #0
  01de8	e58d300c	 str         r3, [sp, #0xC]
  01dec		 |$LN7@FreeList|

; 583  :             pNext = pCurrent->next;

  01dec	e59d3004	 ldr         r3, [sp, #4]
  01df0	e283300c	 add         r3, r3, #0xC
  01df4	e5933000	 ldr         r3, [r3]
  01df8	e58d3000	 str         r3, [sp]

; 584  :             CPhysMem_Free( pCurrent );

  01dfc	e59d0004	 ldr         r0, [sp, #4]
  01e00	eb000000	 bl          LocalFree

; 585  :             pCurrent = pNext;

  01e04	e59d3000	 ldr         r3, [sp]
  01e08	e58d3004	 str         r3, [sp, #4]

; 586  :         }

  01e0c	eaffffe2	 b           |$LN2@FreeList|
  01e10		 |$LN1@FreeList|

; 587  :         CPhysMem_Free( *ppHead );

  01e10	e59d301c	 ldr         r3, [sp, #0x1C]
  01e14	e5930000	 ldr         r0, [r3]
  01e18	eb000000	 bl          LocalFree

; 588  :         *ppHead = NULL;

  01e1c	e59d201c	 ldr         r2, [sp, #0x1C]
  01e20	e3a03000	 mov         r3, #0
  01e24	e5823000	 str         r3, [r2]
  01e28		 |$LN3@FreeList|

; 589  :     }
; 590  : 
; 591  :     return(TRUE);

  01e28	e3a03001	 mov         r3, #1
  01e2c	e58d3008	 str         r3, [sp, #8]

; 592  : }

  01e30	e59d0008	 ldr         r0, [sp, #8]
  01e34	e28dd010	 add         sp, sp, #0x10
  01e38	e89d6000	 ldmia       sp, {sp, lr}
  01e3c	e12fff1e	 bx          lr
  01e40		 |$LN11@FreeList|
  01e40		 |$LN12@FreeList|
  01e40	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  01e44		 |$LN13@FreeList|
  01e44	00000000	 DCD         |dpCurSettings|
  01e48		 |$LN14@FreeList|
  01e48	00000000	 DCD         |??_C@_1KM@IMBMOFHC@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  01e4c		 |$M34308|

			 ENDP  ; |?FreeList@CPhysMem@@AAAHPAPAUtMEMLIST@@@Z|, CPhysMem::FreeList

	EXPORT	|??_C@_1FO@DKILOPHK@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAb?$AAS?$AAp?$AAe?$AAc?$AAi@| [ DATA ] ; `string'
	EXPORT	|?VaToPa@CPhysMem@@QAAKPAE@Z|		; CPhysMem::VaToPa
	EXPORT	|?AllocateSpecialMemory@CPhysMem@@QAAHKQAPAE@Z| ; CPhysMem::AllocateSpecialMemory

  00048			 AREA	 |.pdata|, PDATA
|$T34330| DCD	|$LN16@AllocateSp|
	DCD	0x40007204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@DKILOPHK@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAb?$AAS?$AAp?$AAe?$AAc?$AAi@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "A", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, ":"
	DCB	0x0, " ", 0x0, "b", 0x0, "S", 0x0, "p", 0x0, "e", 0x0, "c"
	DCB	0x0, "i", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "a", 0x0, "l"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  01e4c			 AREA	 |.text|, CODE, ARM

  01e4c		 |?AllocateSpecialMemory@CPhysMem@@QAAHKQAPAE@Z| PROC ; CPhysMem::AllocateSpecialMemory

; 603  : {

  01e4c		 |$LN16@AllocateSp|
  01e4c	e1a0c00d	 mov         r12, sp
  01e50	e92d0007	 stmdb       sp!, {r0 - r2}
  01e54	e92d5000	 stmdb       sp!, {r12, lr}
  01e58	e24dd01c	 sub         sp, sp, #0x1C
  01e5c		 |$M34327|

; 604  :     DEBUGCHK( dwSize <= USBPAGESIZE );

  01e5c	e59d3028	 ldr         r3, [sp, #0x28]
  01e60	e3530a01	 cmp         r3, #1, 20
  01e64	8a000002	 bhi         |$LN4@AllocateSp|
  01e68	e3a03001	 mov         r3, #1
  01e6c	e58d3004	 str         r3, [sp, #4]
  01e70	ea000007	 b           |$LN5@AllocateSp|
  01e74		 |$LN4@AllocateSp|
  01e74	e3a03f97	 mov         r3, #0x97, 30
  01e78	e59f2190	 ldr         r2, [pc, #0x190]
  01e7c	e59f1184	 ldr         r1, [pc, #0x184]
  01e80	e59f0184	 ldr         r0, [pc, #0x184]
  01e84	eb000000	 bl          NKDbgPrintfW
  01e88	e6000010	 __debugbreak_ce
  01e8c	e3a03000	 mov         r3, #0
  01e90	e58d3004	 str         r3, [sp, #4]
  01e94		 |$LN5@AllocateSp|

; 605  :     PREFAST_DEBUGCHK( pVirtAddr != NULL );

  01e94	e59d302c	 ldr         r3, [sp, #0x2C]
  01e98	e3530000	 cmp         r3, #0
  01e9c	0a000002	 beq         |$LN6@AllocateSp|
  01ea0	e3a03001	 mov         r3, #1
  01ea4	e58d3008	 str         r3, [sp, #8]
  01ea8	ea000008	 b           |$LN7@AllocateSp|
  01eac		 |$LN6@AllocateSp|
  01eac	e3a03c02	 mov         r3, #2, 24
  01eb0	e383305d	 orr         r3, r3, #0x5D
  01eb4	e59f2154	 ldr         r2, [pc, #0x154]
  01eb8	e59f1148	 ldr         r1, [pc, #0x148]
  01ebc	e59f0148	 ldr         r0, [pc, #0x148]
  01ec0	eb000000	 bl          NKDbgPrintfW
  01ec4	e6000010	 __debugbreak_ce
  01ec8	e3a03000	 mov         r3, #0
  01ecc	e58d3008	 str         r3, [sp, #8]
  01ed0		 |$LN7@AllocateSp|

; 606  : 
; 607  :     // during suspend/resume this routine will be called again; we can safely
; 608  :     // leave the special memory set aside since we will always need the same amount.
; 609  :     if(!m_bSpecialTaken) {

  01ed0	e59d3024	 ldr         r3, [sp, #0x24]
  01ed4	e283304c	 add         r3, r3, #0x4C
  01ed8	e5933000	 ldr         r3, [r3]
  01edc	e3530000	 cmp         r3, #0
  01ee0	1a00002d	 bne         |$LN1@AllocateSp|

; 610  :         m_bSpecialTaken = TRUE;

  01ee4	e59d3024	 ldr         r3, [sp, #0x24]
  01ee8	e283204c	 add         r2, r3, #0x4C
  01eec	e3a03001	 mov         r3, #1
  01ef0	e5823000	 str         r3, [r2]

; 611  :         DEBUGCHK( m_dwSpecialPA == VaToPa( PUCHAR(m_dwSpecialVA) ) );

  01ef4	e59d3024	 ldr         r3, [sp, #0x24]
  01ef8	e2833048	 add         r3, r3, #0x48
  01efc	e5931000	 ldr         r1, [r3]
  01f00	e59d0024	 ldr         r0, [sp, #0x24]
  01f04	eb000000	 bl          |?VaToPa@CPhysMem@@QAAKPAE@Z|
  01f08	e58d000c	 str         r0, [sp, #0xC]
  01f0c	e59d3024	 ldr         r3, [sp, #0x24]
  01f10	e2833044	 add         r3, r3, #0x44
  01f14	e5932000	 ldr         r2, [r3]
  01f18	e59d300c	 ldr         r3, [sp, #0xC]
  01f1c	e1520003	 cmp         r2, r3
  01f20	1a000002	 bne         |$LN8@AllocateSp|
  01f24	e3a03001	 mov         r3, #1
  01f28	e58d3010	 str         r3, [sp, #0x10]
  01f2c	ea000008	 b           |$LN9@AllocateSp|
  01f30		 |$LN8@AllocateSp|
  01f30	e3a03c02	 mov         r3, #2, 24
  01f34	e3833063	 orr         r3, r3, #0x63
  01f38	e59f20d0	 ldr         r2, [pc, #0xD0]
  01f3c	e59f10c4	 ldr         r1, [pc, #0xC4]
  01f40	e59f00c4	 ldr         r0, [pc, #0xC4]
  01f44	eb000000	 bl          NKDbgPrintfW
  01f48	e6000010	 __debugbreak_ce
  01f4c	e3a03000	 mov         r3, #0
  01f50	e58d3010	 str         r3, [sp, #0x10]
  01f54		 |$LN9@AllocateSp|

; 612  :         DEBUGCHK( m_dwSpecialPA % CPHYSMEM_MEMORY_ALIGNMENT == 0 );

  01f54	e59d3024	 ldr         r3, [sp, #0x24]
  01f58	e2833044	 add         r3, r3, #0x44
  01f5c	e5931000	 ldr         r1, [r3]
  01f60	e3a00020	 mov         r0, #0x20
  01f64	eb000000	 bl          __rt_udiv
  01f68	e3510000	 cmp         r1, #0
  01f6c	1a000002	 bne         |$LN10@AllocateSp|
  01f70	e3a03001	 mov         r3, #1
  01f74	e58d3014	 str         r3, [sp, #0x14]
  01f78	ea000007	 b           |$LN11@AllocateSp|
  01f7c		 |$LN10@AllocateSp|
  01f7c	e3a03f99	 mov         r3, #0x99, 30
  01f80	e59f2088	 ldr         r2, [pc, #0x88]
  01f84	e59f107c	 ldr         r1, [pc, #0x7C]
  01f88	e59f007c	 ldr         r0, [pc, #0x7C]
  01f8c	eb000000	 bl          NKDbgPrintfW
  01f90	e6000010	 __debugbreak_ce
  01f94	e3a03000	 mov         r3, #0
  01f98	e58d3014	 str         r3, [sp, #0x14]
  01f9c		 |$LN11@AllocateSp|
  01f9c		 |$LN1@AllocateSp|

; 613  :     }
; 614  : 
; 615  :     *pVirtAddr = (PUCHAR) m_dwSpecialVA;

  01f9c	e59d3024	 ldr         r3, [sp, #0x24]
  01fa0	e2833048	 add         r3, r3, #0x48
  01fa4	e5932000	 ldr         r2, [r3]
  01fa8	e59d302c	 ldr         r3, [sp, #0x2C]
  01fac	e5832000	 str         r2, [r3]

; 616  : 
; 617  :     DEBUGMSG(ZONE_CPHYSMEM && ZONE_VERBOSE,(TEXT("CPhysMem AllocateMemory : bSpecial allocated\r\n")));

  01fb0	e59f3050	 ldr         r3, [pc, #0x50]
  01fb4	e5933440	 ldr         r3, [r3, #0x440]
  01fb8	e3130b02	 tst         r3, #2, 22
  01fbc	0a000008	 beq         |$LN12@AllocateSp|
  01fc0	e59f3040	 ldr         r3, [pc, #0x40]
  01fc4	e5933440	 ldr         r3, [r3, #0x440]
  01fc8	e3130a01	 tst         r3, #1, 20
  01fcc	0a000004	 beq         |$LN12@AllocateSp|
  01fd0	e59f002c	 ldr         r0, [pc, #0x2C]
  01fd4	eb000000	 bl          NKDbgPrintfW
  01fd8	e3a03001	 mov         r3, #1
  01fdc	e58d3018	 str         r3, [sp, #0x18]
  01fe0	ea000001	 b           |$LN13@AllocateSp|
  01fe4		 |$LN12@AllocateSp|
  01fe4	e3a03000	 mov         r3, #0
  01fe8	e58d3018	 str         r3, [sp, #0x18]
  01fec		 |$LN13@AllocateSp|

; 618  :     return(TRUE);

  01fec	e3a03001	 mov         r3, #1
  01ff0	e58d3000	 str         r3, [sp]

; 619  : }

  01ff4	e59d0000	 ldr         r0, [sp]
  01ff8	e28dd01c	 add         sp, sp, #0x1C
  01ffc	e89d6000	 ldmia       sp, {sp, lr}
  02000	e12fff1e	 bx          lr
  02004		 |$LN17@AllocateSp|
  02004		 |$LN18@AllocateSp|
  02004	00000000	 DCD         |??_C@_1FO@DKILOPHK@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAb?$AAS?$AAp?$AAe?$AAc?$AAi@|
  02008		 |$LN19@AllocateSp|
  02008	00000000	 DCD         |dpCurSettings|
  0200c		 |$LN20@AllocateSp|
  0200c	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  02010		 |$LN21@AllocateSp|
  02010	00000000	 DCD         |??_C@_1KM@IMBMOFHC@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  02014		 |$M34328|

			 ENDP  ; |?AllocateSpecialMemory@CPhysMem@@QAAHKQAPAE@Z|, CPhysMem::AllocateSpecialMemory

; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\usb\usb2com\cphysmem.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T34345| DCD	|$LN9@VaToPa|
	DCD	0x40003a04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?VaToPa@CPhysMem@@QAAKPAE@Z| PROC	; CPhysMem::VaToPa

; 185  : {

  00000		 |$LN9@VaToPa|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M34342|

; 186  :     DEBUGCHK( virtAddr != NULL );

  00010	e59d3018	 ldr         r3, [sp, #0x18]
  00014	e3530000	 cmp         r3, #0
  00018	0a000002	 beq         |$LN3@VaToPa|
  0001c	e3a03001	 mov         r3, #1
  00020	e58d3004	 str         r3, [sp, #4]
  00024	ea000007	 b           |$LN4@VaToPa|
  00028		 |$LN3@VaToPa|
  00028	e3a030ba	 mov         r3, #0xBA
  0002c	e59f20ac	 ldr         r2, [pc, #0xAC]
  00030	e59f10ac	 ldr         r1, [pc, #0xAC]
  00034	e59f009c	 ldr         r0, [pc, #0x9C]
  00038	eb000000	 bl          NKDbgPrintfW
  0003c	e6000010	 __debugbreak_ce
  00040	e3a03000	 mov         r3, #0
  00044	e58d3004	 str         r3, [sp, #4]
  00048		 |$LN4@VaToPa|

; 187  :     ASSERT((DWORD)m_pPhysicalBufferAddr <=(DWORD)virtAddr && (DWORD)virtAddr <(DWORD) m_pPhysicalBufferAddr + m_cbTotal);

  00048	e59d3014	 ldr         r3, [sp, #0x14]
  0004c	e283303c	 add         r3, r3, #0x3C
  00050	e5932000	 ldr         r2, [r3]
  00054	e59d3018	 ldr         r3, [sp, #0x18]
  00058	e1520003	 cmp         r2, r3
  0005c	8a00000b	 bhi         |$LN5@VaToPa|
  00060	e59d3014	 ldr         r3, [sp, #0x14]
  00064	e283303c	 add         r3, r3, #0x3C
  00068	e5932000	 ldr         r2, [r3]
  0006c	e59d3014	 ldr         r3, [sp, #0x14]
  00070	e5933000	 ldr         r3, [r3]
  00074	e0822003	 add         r2, r2, r3
  00078	e59d3018	 ldr         r3, [sp, #0x18]
  0007c	e1530002	 cmp         r3, r2
  00080	2a000002	 bcs         |$LN5@VaToPa|
  00084	e3a03001	 mov         r3, #1
  00088	e58d3008	 str         r3, [sp, #8]
  0008c	ea000007	 b           |$LN6@VaToPa|
  00090		 |$LN5@VaToPa|
  00090	e3a030bb	 mov         r3, #0xBB
  00094	e59f2044	 ldr         r2, [pc, #0x44]
  00098	e59f103c	 ldr         r1, [pc, #0x3C]
  0009c	e59f0034	 ldr         r0, [pc, #0x34]
  000a0	eb000000	 bl          NKDbgPrintfW
  000a4	e6000010	 __debugbreak_ce
  000a8	e3a03000	 mov         r3, #0
  000ac	e58d3008	 str         r3, [sp, #8]
  000b0		 |$LN6@VaToPa|

; 188  :     return ULONG(ULONG(virtAddr) + m_PaVaConversion);

  000b0	e59d3014	 ldr         r3, [sp, #0x14]
  000b4	e2833034	 add         r3, r3, #0x34
  000b8	e59d2018	 ldr         r2, [sp, #0x18]
  000bc	e5933000	 ldr         r3, [r3]
  000c0	e0823003	 add         r3, r2, r3
  000c4	e58d3000	 str         r3, [sp]

; 189  : }

  000c8	e59d0000	 ldr         r0, [sp]
  000cc	e28dd00c	 add         sp, sp, #0xC
  000d0	e89d6000	 ldmia       sp, {sp, lr}
  000d4	e12fff1e	 bx          lr
  000d8		 |$LN10@VaToPa|
  000d8		 |$LN11@VaToPa|
  000d8	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  000dc		 |$LN12@VaToPa|
  000dc	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  000e0		 |$LN13@VaToPa|
  000e0	00000000	 DCD         |??_C@_1KI@HHPGNKFN@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA6?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo?$AAn?$AA?2?$AAs?$AAr?$AAc?$AA?2@|
  000e4		 |$LN14@VaToPa|
  000e4	00000000	 DCD         |dpCurSettings|
  000e8		 |$M34343|

			 ENDP  ; |?VaToPa@CPhysMem@@QAAKPAE@Z|, CPhysMem::VaToPa

	EXPORT	|?FreeSpecialMemory@CPhysMem@@QAAXQAE@Z| ; CPhysMem::FreeSpecialMemory

  00050			 AREA	 |.pdata|, PDATA
|$T34361| DCD	|$LN9@FreeSpecia|
	DCD	0x40003104
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\usb\usb2com\cphysmem.cpp

  02014			 AREA	 |.text|, CODE, ARM

  02014		 |?FreeSpecialMemory@CPhysMem@@QAAXQAE@Z| PROC ; CPhysMem::FreeSpecialMemory

; 624  : {

  02014		 |$LN9@FreeSpecia|
  02014	e1a0c00d	 mov         r12, sp
  02018	e92d0003	 stmdb       sp!, {r0, r1}
  0201c	e92d5000	 stmdb       sp!, {r12, lr}
  02020	e24dd008	 sub         sp, sp, #8
  02024		 |$M34358|

; 625  : 
; 626  :     DEBUGCHK( m_dwSpecialVA == (DWORD) virtAddr );

  02024	e59d3010	 ldr         r3, [sp, #0x10]
  02028	e2833048	 add         r3, r3, #0x48
  0202c	e5932000	 ldr         r2, [r3]
  02030	e59d3014	 ldr         r3, [sp, #0x14]
  02034	e1520003	 cmp         r2, r3
  02038	1a000002	 bne         |$LN3@FreeSpecia|
  0203c	e3a03001	 mov         r3, #1
  02040	e58d3000	 str         r3, [sp]
  02044	ea000008	 b           |$LN4@FreeSpecia|
  02048		 |$LN3@FreeSpecia|
  02048	e3a03c02	 mov         r3, #2, 24
  0204c	e3833072	 orr         r3, r3, #0x72
  02050	e59f207c	 ldr         r2, [pc, #0x7C]
  02054	e59f1074	 ldr         r1, [pc, #0x74]
  02058	e59f006c	 ldr         r0, [pc, #0x6C]
  0205c	eb000000	 bl          NKDbgPrintfW
  02060	e6000010	 __debugbreak_ce
  02064	e3a03000	 mov         r3, #0
  02068	e58d3000	 str         r3, [sp]
  0206c		 |$LN4@FreeSpecia|

; 627  :     DEBUGCHK( m_bSpecialTaken );

  0206c	e59d3010	 ldr         r3, [sp, #0x10]
  02070	e283304c	 add         r3, r3, #0x4C
  02074	e5933000	 ldr         r3, [r3]
  02078	e3530000	 cmp         r3, #0
  0207c	0a000002	 beq         |$LN5@FreeSpecia|
  02080	e3a03001	 mov         r3, #1
  02084	e58d3004	 str         r3, [sp, #4]
  02088	ea000008	 b           |$LN6@FreeSpecia|
  0208c		 |$LN5@FreeSpecia|
  0208c	e3a03c02	 mov         r3, #2, 24
  02090	e3833073	 orr         r3, r3, #0x73
  02094	e59f2038	 ldr         r2, [pc, #0x38]
  02098	e59f1030	 ldr         r1, [pc, #0x30]
  0209c	e59f0028	 ldr         r0, [pc, #0x28]
  020a0	eb000000	 bl          NKDbgPrintfW
  020a4	e6000010	 __debugbreak_ce
  020a8	e3a03000	 mov         r3, #0
  020ac	e58d3004	 str         r3, [sp, #4]
  020b0		 |$LN6@FreeSpecia|

; 628  : 
; 629  :     m_bSpecialTaken = FALSE;

  020b0	e59d3010	 ldr         r3, [sp, #0x10]
  020b4	e283204c	 add         r2, r3, #0x4C
  020b8	e3a03000	 mov         r3, #0
  020bc	e5823000	 str         r3, [r2]

; 630  : }

  020c0	e28dd008	 add         sp, sp, #8
  020c4	e89d6000	 ldmia       sp, {sp, lr}
  020c8	e12fff1e	 bx          lr
  020cc		 |$LN10@FreeSpecia|
  020cc		 |$LN11@FreeSpecia|
  020cc	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  020d0		 |$LN12@FreeSpecia|
  020d0	00000000	 DCD         |dpCurSettings|
  020d4		 |$LN13@FreeSpecia|
  020d4	00000000	 DCD         |??_C@_1KM@IMBMOFHC@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  020d8		 |$M34359|

			 ENDP  ; |?FreeSpecialMemory@CPhysMem@@QAAXQAE@Z|, CPhysMem::FreeSpecialMemory

	EXPORT	|??_C@_1JG@MNOBEEOD@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAP?$AAA?$AA?5?$AA?$DN?$AA?5?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@OOLOAMIO@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAN?$AAo?$AA?5?$AAm?$AAe?$AAm@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@LDBHCAGE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@GOKAFDHN@?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAD?$AAe?$AAs?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CI?$AAr?$AAo?$AAu?$AAn?$AAd@| [ DATA ] ; `string'
	EXPORT	|?AllocateMemory@CPhysMem@@QAAHPBGKQAPAEKPAH@Z| ; CPhysMem::AllocateMemory
	IMPORT	|wcslen|
	IMPORT	|WaitForSingleObject|
	IMPORT	|GetTickCount|

  00058			 AREA	 |.pdata|, PDATA
|$T34412| DCD	|$LN56@AllocateMe|
	DCD	0x4001f304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JG@MNOBEEOD@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAP?$AAA?$AA?5?$AA?$DN?$AA?5?$AA0@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "A", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, ":"
	DCB	0x0, " ", 0x0, "P", 0x0, "A", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, ",", 0x0, " ", 0x0, "V", 0x0, "A", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, ",", 0x0, " ", 0x0, "S", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "s", 0x0, "c"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@OOLOAMIO@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAN?$AAo?$AA?5?$AAm?$AAe?$AAm@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "A", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, ":"
	DCB	0x0, " ", 0x0, "N", 0x0, "o", 0x0, " ", 0x0, "m", 0x0, "e"
	DCB	0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "a"
	DCB	0x0, "v", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@LDBHCAGE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe?$AA?5?$AAa@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, ":", 0x0, " ", 0x0, "H", 0x0, "e", 0x0, "a"
	DCB	0x0, "p", 0x0, " ", 0x0, "p", 0x0, "r", 0x0, "i", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "b"
	DCB	0x0, "e", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, "e", 0x0, " "
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "o"
	DCB	0x0, "f", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "b"
	DCB	0x0, "y", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, ":", 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@GOKAFDHN@?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAD?$AAe?$AAs?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CI?$AAr?$AAo?$AAu?$AAn?$AAd@| DCB "A"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "M", 0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r"
	DCB	0x0, "y", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "s", 0x0, "c"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, ":"
	DCB	0x0, " ", 0x0, "(", 0x0, "r", 0x0, "o", 0x0, "u", 0x0, "n"
	DCB	0x0, "d", 0x0, "u", 0x0, "p", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, "-", 0x0, ">", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  020d8			 AREA	 |.text|, CODE, ARM

  020d8		 |?AllocateMemory@CPhysMem@@QAAHPBGKQAPAEKPAH@Z| PROC ; CPhysMem::AllocateMemory

; 640  : {

  020d8		 |$LN56@AllocateMe|
  020d8	e1a0c00d	 mov         r12, sp
  020dc	e92d000f	 stmdb       sp!, {r0 - r3}
  020e0	e92d5000	 stmdb       sp!, {r12, lr}
  020e4	e24dd09c	 sub         sp, sp, #0x9C
  020e8		 |$M34409|

; 641  : #ifdef DEBUG
; 642  :     PREFAST_DEBUGCHK( pszMemDescription != NULL );

  020e8	e59d30a8	 ldr         r3, [sp, #0xA8]
  020ec	e3530000	 cmp         r3, #0
  020f0	0a000002	 beq         |$LN16@AllocateMe|
  020f4	e3a03001	 mov         r3, #1
  020f8	e58d3030	 str         r3, [sp, #0x30]
  020fc	ea000008	 b           |$LN17@AllocateMe|
  02100		 |$LN16@AllocateMe|
  02100	e3a03c02	 mov         r3, #2, 24
  02104	e3833082	 orr         r3, r3, #0x82
  02108	e59f2780	 ldr         r2, [pc, #0x780]
  0210c	e59f1778	 ldr         r1, [pc, #0x778]
  02110	e59f0770	 ldr         r0, [pc, #0x770]
  02114	eb000000	 bl          NKDbgPrintfW
  02118	e6000010	 __debugbreak_ce
  0211c	e3a03000	 mov         r3, #0
  02120	e58d3030	 str         r3, [sp, #0x30]
  02124		 |$LN17@AllocateMe|

; 643  :     DEBUGCHK( dwPassedInSize > 0 );

  02124	e59d30ac	 ldr         r3, [sp, #0xAC]
  02128	e3530000	 cmp         r3, #0
  0212c	9a000002	 bls         |$LN18@AllocateMe|
  02130	e3a03001	 mov         r3, #1
  02134	e58d3034	 str         r3, [sp, #0x34]
  02138	ea000008	 b           |$LN19@AllocateMe|
  0213c		 |$LN18@AllocateMe|
  0213c	e3a03c02	 mov         r3, #2, 24
  02140	e3833083	 orr         r3, r3, #0x83
  02144	e59f2744	 ldr         r2, [pc, #0x744]
  02148	e59f173c	 ldr         r1, [pc, #0x73C]
  0214c	e59f0734	 ldr         r0, [pc, #0x734]
  02150	eb000000	 bl          NKDbgPrintfW
  02154	e6000010	 __debugbreak_ce
  02158	e3a03000	 mov         r3, #0
  0215c	e58d3034	 str         r3, [sp, #0x34]
  02160		 |$LN19@AllocateMe|

; 644  :     // for now, only the following sets of flags should be passed in
; 645  :     DEBUGCHK( dwFlags == 0 || // low priority, allow blocking
; 646  :               dwFlags == CPHYSMEM_FLAG_NOBLOCK || // low priority, no blocking
; 647  :               dwFlags == (CPHYSMEM_FLAG_HIGHPRIORITY | CPHYSMEM_FLAG_NOBLOCK) ); // high pri, no blocking

  02160	e59d30b4	 ldr         r3, [sp, #0xB4]
  02164	e3530000	 cmp         r3, #0
  02168	0a00000f	 beq         |$LN20@AllocateMe|
  0216c	e59d30b4	 ldr         r3, [sp, #0xB4]
  02170	e3530002	 cmp         r3, #2
  02174	0a00000c	 beq         |$LN20@AllocateMe|
  02178	e59d30b4	 ldr         r3, [sp, #0xB4]
  0217c	e3530003	 cmp         r3, #3
  02180	0a000009	 beq         |$LN20@AllocateMe|
  02184	e3a03c02	 mov         r3, #2, 24
  02188	e3833087	 orr         r3, r3, #0x87
  0218c	e59f26fc	 ldr         r2, [pc, #0x6FC]
  02190	e59f16f4	 ldr         r1, [pc, #0x6F4]
  02194	e59f06ec	 ldr         r0, [pc, #0x6EC]
  02198	eb000000	 bl          NKDbgPrintfW
  0219c	e6000010	 __debugbreak_ce
  021a0	e3a03000	 mov         r3, #0
  021a4	e58d3038	 str         r3, [sp, #0x38]
  021a8	ea000001	 b           |$LN21@AllocateMe|
  021ac		 |$LN20@AllocateMe|
  021ac	e3a03001	 mov         r3, #1
  021b0	e58d3038	 str         r3, [sp, #0x38]
  021b4		 |$LN21@AllocateMe|

; 648  : 
; 649  :     if ( dwFlags & CPHYSMEM_FLAG_NOBLOCK ) {

  021b4	e59d30b4	 ldr         r3, [sp, #0xB4]
  021b8	e3130002	 tst         r3, #2
  021bc	0a00000f	 beq         |$LN13@AllocateMe|

; 650  :         // pfRequestingAbort will be ignored for NO_BLOCK transfers,
; 651  :         // so why is caller passing it in? Note that nothing
; 652  :         // bad will happen if pfRequestingAbort != NULL, so
; 653  :         // this check can be removed in the future if need be.
; 654  :         DEBUGCHK( pfRequestingAbort == NULL );

  021c0	e59d30b8	 ldr         r3, [sp, #0xB8]
  021c4	e3530000	 cmp         r3, #0
  021c8	1a000002	 bne         |$LN22@AllocateMe|
  021cc	e3a03001	 mov         r3, #1
  021d0	e58d303c	 str         r3, [sp, #0x3C]
  021d4	ea000008	 b           |$LN23@AllocateMe|
  021d8		 |$LN22@AllocateMe|
  021d8	e3a03c02	 mov         r3, #2, 24
  021dc	e383308e	 orr         r3, r3, #0x8E
  021e0	e59f26a8	 ldr         r2, [pc, #0x6A8]
  021e4	e59f16a0	 ldr         r1, [pc, #0x6A0]
  021e8	e59f0698	 ldr         r0, [pc, #0x698]
  021ec	eb000000	 bl          NKDbgPrintfW
  021f0	e6000010	 __debugbreak_ce
  021f4	e3a03000	 mov         r3, #0
  021f8	e58d303c	 str         r3, [sp, #0x3C]
  021fc		 |$LN23@AllocateMe|

; 655  :     } else {

  021fc	ea000012	 b           |$LN12@AllocateMe|
  02200		 |$LN13@AllocateMe|

; 656  :         // blocking transfers must pass in a pointer
; 657  :         // for allowing the transfer to abort, and
; 658  :         // the original state of this abort request
; 659  :         // should be FALSE. If not, the blocking
; 660  :         // request is ignored.
; 661  :         DEBUGCHK( pfRequestingAbort != NULL &&
; 662  :                   *pfRequestingAbort == FALSE );

  02200	e59d30b8	 ldr         r3, [sp, #0xB8]
  02204	e3530000	 cmp         r3, #0
  02208	0a000006	 beq         |$LN24@AllocateMe|
  0220c	e59d30b8	 ldr         r3, [sp, #0xB8]
  02210	e5933000	 ldr         r3, [r3]
  02214	e3530000	 cmp         r3, #0
  02218	1a000002	 bne         |$LN24@AllocateMe|
  0221c	e3a03001	 mov         r3, #1
  02220	e58d3040	 str         r3, [sp, #0x40]
  02224	ea000008	 b           |$LN25@AllocateMe|
  02228		 |$LN24@AllocateMe|
  02228	e3a03c02	 mov         r3, #2, 24
  0222c	e3833096	 orr         r3, r3, #0x96
  02230	e59f2658	 ldr         r2, [pc, #0x658]
  02234	e59f1650	 ldr         r1, [pc, #0x650]
  02238	e59f0648	 ldr         r0, [pc, #0x648]
  0223c	eb000000	 bl          NKDbgPrintfW
  02240	e6000010	 __debugbreak_ce
  02244	e3a03000	 mov         r3, #0
  02248	e58d3040	 str         r3, [sp, #0x40]
  0224c		 |$LN25@AllocateMe|
  0224c		 |$LN12@AllocateMe|

; 663  :     }
; 664  : #endif // DEBUG
; 665  : 
; 666  :     PMEMLIST    pNode = NULL;

  0224c	e3a03000	 mov         r3, #0
  02250	e58d3014	 str         r3, [sp, #0x14]

; 667  :     const BOOL  fHighPri = !!(dwFlags & CPHYSMEM_FLAG_HIGHPRIORITY);

  02254	e59d30b4	 ldr         r3, [sp, #0xB4]
  02258	e3130001	 tst         r3, #1
  0225c	0a000002	 beq         |$LN26@AllocateMe|
  02260	e3a03001	 mov         r3, #1
  02264	e58d3044	 str         r3, [sp, #0x44]
  02268	ea000001	 b           |$LN27@AllocateMe|
  0226c		 |$LN26@AllocateMe|
  0226c	e3a03000	 mov         r3, #0
  02270	e58d3044	 str         r3, [sp, #0x44]
  02274		 |$LN27@AllocateMe|
  02274	e59d3044	 ldr         r3, [sp, #0x44]
  02278	e58d3010	 str         r3, [sp, #0x10]

; 668  :     const BOOL  fNoBlock = !!(dwFlags & CPHYSMEM_FLAG_NOBLOCK);

  0227c	e59d30b4	 ldr         r3, [sp, #0xB4]
  02280	e3130002	 tst         r3, #2
  02284	0a000002	 beq         |$LN28@AllocateMe|
  02288	e3a03001	 mov         r3, #1
  0228c	e58d3048	 str         r3, [sp, #0x48]
  02290	ea000001	 b           |$LN29@AllocateMe|
  02294		 |$LN28@AllocateMe|
  02294	e3a03000	 mov         r3, #0
  02298	e58d3048	 str         r3, [sp, #0x48]
  0229c		 |$LN29@AllocateMe|
  0229c	e59d3048	 ldr         r3, [sp, #0x48]
  022a0	e58d300c	 str         r3, [sp, #0xC]

; 669  :     // We keep our block sizes in multiples of CPHYSMEM_MEMORY_ALIGNMENT
; 670  :     DWORD       dwSize = ( (dwPassedInSize - 1) & ~(CPHYSMEM_MEMORY_ALIGNMENT - 1) )
; 671  :                                  + CPHYSMEM_MEMORY_ALIGNMENT;

  022a4	e59d30ac	 ldr         r3, [sp, #0xAC]
  022a8	e2432001	 sub         r2, r3, #1
  022ac	e3e0301f	 mvn         r3, #0x1F
  022b0	e0023003	 and         r3, r2, r3
  022b4	e2833020	 add         r3, r3, #0x20
  022b8	e58d3008	 str         r3, [sp, #8]

; 672  : 
; 673  :     PREFAST_DEBUGCHK( pVirtAddr != NULL );

  022bc	e59d30b0	 ldr         r3, [sp, #0xB0]
  022c0	e3530000	 cmp         r3, #0
  022c4	0a000002	 beq         |$LN30@AllocateMe|
  022c8	e3a03001	 mov         r3, #1
  022cc	e58d304c	 str         r3, [sp, #0x4C]
  022d0	ea000008	 b           |$LN31@AllocateMe|
  022d4		 |$LN30@AllocateMe|
  022d4	e3a03c02	 mov         r3, #2, 24
  022d8	e38330a1	 orr         r3, r3, #0xA1
  022dc	e59f25ac	 ldr         r2, [pc, #0x5AC]
  022e0	e59f15a4	 ldr         r1, [pc, #0x5A4]
  022e4	e59f059c	 ldr         r0, [pc, #0x59C]
  022e8	eb000000	 bl          NKDbgPrintfW
  022ec	e6000010	 __debugbreak_ce
  022f0	e3a03000	 mov         r3, #0
  022f4	e58d304c	 str         r3, [sp, #0x4C]
  022f8		 |$LN31@AllocateMe|

; 674  :     DEBUGCHK( dwSize % CPHYSMEM_MEMORY_ALIGNMENT == 0 );

  022f8	e59d1008	 ldr         r1, [sp, #8]
  022fc	e3a00020	 mov         r0, #0x20
  02300	eb000000	 bl          __rt_udiv
  02304	e3510000	 cmp         r1, #0
  02308	1a000002	 bne         |$LN32@AllocateMe|
  0230c	e3a03001	 mov         r3, #1
  02310	e58d3050	 str         r3, [sp, #0x50]
  02314	ea000008	 b           |$LN33@AllocateMe|
  02318		 |$LN32@AllocateMe|
  02318	e3a03c02	 mov         r3, #2, 24
  0231c	e38330a2	 orr         r3, r3, #0xA2
  02320	e59f2568	 ldr         r2, [pc, #0x568]
  02324	e59f1560	 ldr         r1, [pc, #0x560]
  02328	e59f0558	 ldr         r0, [pc, #0x558]
  0232c	eb000000	 bl          NKDbgPrintfW
  02330	e6000010	 __debugbreak_ce
  02334	e3a03000	 mov         r3, #0
  02338	e58d3050	 str         r3, [sp, #0x50]
  0233c		 |$LN33@AllocateMe|

; 675  :     DEBUGCHK( dwSize - dwPassedInSize < CPHYSMEM_MEMORY_ALIGNMENT );

  0233c	e59d2008	 ldr         r2, [sp, #8]
  02340	e59d30ac	 ldr         r3, [sp, #0xAC]
  02344	e0423003	 sub         r3, r2, r3
  02348	e3530020	 cmp         r3, #0x20
  0234c	2a000002	 bcs         |$LN34@AllocateMe|
  02350	e3a03001	 mov         r3, #1
  02354	e58d3054	 str         r3, [sp, #0x54]
  02358	ea000008	 b           |$LN35@AllocateMe|
  0235c		 |$LN34@AllocateMe|
  0235c	e3a03c02	 mov         r3, #2, 24
  02360	e38330a3	 orr         r3, r3, #0xA3
  02364	e59f2524	 ldr         r2, [pc, #0x524]
  02368	e59f151c	 ldr         r1, [pc, #0x51C]
  0236c	e59f0514	 ldr         r0, [pc, #0x514]
  02370	eb000000	 bl          NKDbgPrintfW
  02374	e6000010	 __debugbreak_ce
  02378	e3a03000	 mov         r3, #0
  0237c	e58d3054	 str         r3, [sp, #0x54]
  02380		 |$LN35@AllocateMe|

; 676  :     DEBUGMSG(ZONE_CPHYSMEM && ZONE_VERBOSE && (dwSize != dwPassedInSize),
; 677  :              (TEXT("AllocateMemory Desc = %s: (roundup %d->%d)\r\n"), pszMemDescription, dwPassedInSize, dwSize ));

  02380	e59f3504	 ldr         r3, [pc, #0x504]
  02384	e5933440	 ldr         r3, [r3, #0x440]
  02388	e3130b02	 tst         r3, #2, 22
  0238c	0a00000f	 beq         |$LN36@AllocateMe|
  02390	e59f34f4	 ldr         r3, [pc, #0x4F4]
  02394	e5933440	 ldr         r3, [r3, #0x440]
  02398	e3130a01	 tst         r3, #1, 20
  0239c	0a00000b	 beq         |$LN36@AllocateMe|
  023a0	e59d2008	 ldr         r2, [sp, #8]
  023a4	e59d30ac	 ldr         r3, [sp, #0xAC]
  023a8	e1520003	 cmp         r2, r3
  023ac	0a000007	 beq         |$LN36@AllocateMe|
  023b0	e59d3008	 ldr         r3, [sp, #8]
  023b4	e59d20ac	 ldr         r2, [sp, #0xAC]
  023b8	e59d10a8	 ldr         r1, [sp, #0xA8]
  023bc	e59f04dc	 ldr         r0, [pc, #0x4DC]
  023c0	eb000000	 bl          NKDbgPrintfW
  023c4	e3a03001	 mov         r3, #1
  023c8	e58d3058	 str         r3, [sp, #0x58]
  023cc	ea000001	 b           |$LN37@AllocateMe|
  023d0		 |$LN36@AllocateMe|
  023d0	e3a03000	 mov         r3, #0
  023d4	e58d3058	 str         r3, [sp, #0x58]
  023d8		 |$LN37@AllocateMe|

; 678  : 
; 679  :     EnterCriticalSection( &m_csLock );

  023d8	e59d30a4	 ldr         r3, [sp, #0xA4]
  023dc	e2830010	 add         r0, r3, #0x10
  023e0	eb000000	 bl          EnterCriticalSection

; 680  : 
; 681  :     DEBUGMSG( ZONE_CPHYSMEM && ZONE_VERBOSE, (TEXT("CPhysMem: Heap pri = %d before allocation of %d bytes:\n"), fHighPri, dwSize ) );

  023e4	e59f34a0	 ldr         r3, [pc, #0x4A0]
  023e8	e5933440	 ldr         r3, [r3, #0x440]
  023ec	e3130b02	 tst         r3, #2, 22
  023f0	0a00000a	 beq         |$LN38@AllocateMe|
  023f4	e59f3490	 ldr         r3, [pc, #0x490]
  023f8	e5933440	 ldr         r3, [r3, #0x440]
  023fc	e3130a01	 tst         r3, #1, 20
  02400	0a000006	 beq         |$LN38@AllocateMe|
  02404	e59d2008	 ldr         r2, [sp, #8]
  02408	e59d1010	 ldr         r1, [sp, #0x10]
  0240c	e59f0488	 ldr         r0, [pc, #0x488]
  02410	eb000000	 bl          NKDbgPrintfW
  02414	e3a03001	 mov         r3, #1
  02418	e58d305c	 str         r3, [sp, #0x5C]
  0241c	ea000001	 b           |$LN39@AllocateMe|
  02420		 |$LN38@AllocateMe|
  02420	e3a03000	 mov         r3, #0
  02424	e58d305c	 str         r3, [sp, #0x5C]
  02428		 |$LN39@AllocateMe|

; 682  :     VALIDATE_HEAPS(fHighPri);

  02428	e59d1010	 ldr         r1, [sp, #0x10]
  0242c	e59d00a4	 ldr         r0, [sp, #0xA4]
  02430	eb000000	 bl          |?ValidateHeaps@CPhysMem@@AAAHH@Z|

; 683  : 
; 684  :     //
; 685  :     // Scan the free list for the first chunk that's just big enough to satisfy
; 686  :     // this request. Remove from the free list. Chop it up (unless the result 
; 687  :     // is less than CPHYSMEM_MEMORY_ALIGNMENT bytes). Then re-sort the remaining
; 688  :     // free chunk back into the free list and place the newly allocated chunk on
; 689  :     // the IN USE list.
; 690  :     //
; 691  :     pNode = FindFreeBlock(dwSize, fHighPri);

  02434	e59d2010	 ldr         r2, [sp, #0x10]
  02438	e59d1008	 ldr         r1, [sp, #8]
  0243c	e59d00a4	 ldr         r0, [sp, #0xA4]
  02440	eb000000	 bl          |?FindFreeBlock@CPhysMem@@AAAPAUtMEMLIST@@KH@Z|
  02444	e58d0060	 str         r0, [sp, #0x60]
  02448	e59d3060	 ldr         r3, [sp, #0x60]
  0244c	e58d3014	 str         r3, [sp, #0x14]

; 692  :     if ( pNode == NULL ) {

  02450	e59d3014	 ldr         r3, [sp, #0x14]
  02454	e3530000	 cmp         r3, #0
  02458	1a00007d	 bne         |$LN11@AllocateMe|

; 693  :         if ( fHighPri ) {

  0245c	e59d3010	 ldr         r3, [sp, #0x10]
  02460	e3530000	 cmp         r3, #0
  02464	0a00001f	 beq         |$LN10@AllocateMe|

; 694  :             //
; 695  :             // Not available from High Priority region, try allocating from Normal region.
; 696  :             //
; 697  :             LeaveCriticalSection(&m_csLock);

  02468	e59d30a4	 ldr         r3, [sp, #0xA4]
  0246c	e2830010	 add         r0, r3, #0x10
  02470	eb000000	 bl          LeaveCriticalSection

; 698  : 
; 699  :             DEBUGCHK( dwFlags == (CPHYSMEM_FLAG_HIGHPRIORITY | CPHYSMEM_FLAG_NOBLOCK) );

  02474	e59d30b4	 ldr         r3, [sp, #0xB4]
  02478	e3530003	 cmp         r3, #3
  0247c	1a000002	 bne         |$LN40@AllocateMe|
  02480	e3a03001	 mov         r3, #1
  02484	e58d3064	 str         r3, [sp, #0x64]
  02488	ea000008	 b           |$LN41@AllocateMe|
  0248c		 |$LN40@AllocateMe|
  0248c	e3a03c02	 mov         r3, #2, 24
  02490	e38330bb	 orr         r3, r3, #0xBB
  02494	e59f23f4	 ldr         r2, [pc, #0x3F4]
  02498	e59f13ec	 ldr         r1, [pc, #0x3EC]
  0249c	e59f03e4	 ldr         r0, [pc, #0x3E4]
  024a0	eb000000	 bl          NKDbgPrintfW
  024a4	e6000010	 __debugbreak_ce
  024a8	e3a03000	 mov         r3, #0
  024ac	e58d3064	 str         r3, [sp, #0x64]
  024b0		 |$LN41@AllocateMe|

; 700  :             return AllocateMemory( DEBUG_PARAM( pszMemDescription )
; 701  :                                    dwPassedInSize,
; 702  :                                    pVirtAddr,
; 703  :                                    CPHYSMEM_FLAG_NOBLOCK, // dwFlags & ~CPHYSMEM_FLAG_HIGHPRIORITY,
; 704  :                                    pfRequestingAbort );

  024b0	e59d30b8	 ldr         r3, [sp, #0xB8]
  024b4	e58d3004	 str         r3, [sp, #4]
  024b8	e3a03002	 mov         r3, #2
  024bc	e58d3000	 str         r3, [sp]
  024c0	e59d30b0	 ldr         r3, [sp, #0xB0]
  024c4	e59d20ac	 ldr         r2, [sp, #0xAC]
  024c8	e59d10a8	 ldr         r1, [sp, #0xA8]
  024cc	e59d00a4	 ldr         r0, [sp, #0xA4]
  024d0	eb000000	 bl          |?AllocateMemory@CPhysMem@@QAAHPBGKQAPAEKPAH@Z|
  024d4	e58d0068	 str         r0, [sp, #0x68]
  024d8	e59d3068	 ldr         r3, [sp, #0x68]
  024dc	e58d3028	 str         r3, [sp, #0x28]
  024e0	ea0000e4	 b           |$LN14@AllocateMe|

; 705  : 
; 706  :         } else if ( !fNoBlock &&

  024e4	ea00005a	 b           |$LN9@AllocateMe|
  024e8		 |$LN10@AllocateMe|

; 707  :                     pfRequestingAbort != NULL ) {

  024e8	e59d300c	 ldr         r3, [sp, #0xC]
  024ec	e3530000	 cmp         r3, #0
  024f0	1a000043	 bne         |$LN8@AllocateMe|
  024f4	e59d30b8	 ldr         r3, [sp, #0xB8]
  024f8	e3530000	 cmp         r3, #0
  024fc	0a000040	 beq         |$LN8@AllocateMe|

; 708  :             //
; 709  :             // Caller requested block for memory 
; 710  :             //
; 711  :         #ifdef DEBUG
; 712  :             DWORD dwStartBlockTickCount = GetTickCount();

  02500	eb000000	 bl          GetTickCount
  02504	e58d006c	 str         r0, [sp, #0x6C]
  02508	e59d306c	 ldr         r3, [sp, #0x6C]
  0250c	e58d3018	 str         r3, [sp, #0x18]
  02510		 |$LN7@AllocateMe|

; 713  :         #endif // DEBUG
; 714  :             do {
; 715  :                 LeaveCriticalSection(&m_csLock);

  02510	e59d30a4	 ldr         r3, [sp, #0xA4]
  02514	e2830010	 add         r0, r3, #0x10
  02518	eb000000	 bl          LeaveCriticalSection

; 716  : 
; 717  :                 if ( *pfRequestingAbort == FALSE ) {

  0251c	e59d30b8	 ldr         r3, [sp, #0xB8]
  02520	e5933000	 ldr         r3, [r3]
  02524	e3530000	 cmp         r3, #0
  02528	1a000027	 bne         |$LN4@AllocateMe|

; 718  :                     m_fHasBlocked = TRUE;

  0252c	e59d30a4	 ldr         r3, [sp, #0xA4]
  02530	e2832030	 add         r2, r3, #0x30
  02534	e3a03001	 mov         r3, #1
  02538	e5823000	 str         r3, [r2]

; 719  :                     WaitForSingleObject(m_hFreeMemEvent, CPHYSMEM_BLOCK_FOR_MEM_INTERVAL );

  0253c	e3a01ffa	 mov         r1, #0xFA, 30
  02540	e59d30a4	 ldr         r3, [sp, #0xA4]
  02544	e283302c	 add         r3, r3, #0x2C
  02548	e5930000	 ldr         r0, [r3]
  0254c	eb000000	 bl          WaitForSingleObject

; 720  : 
; 721  :                     if ( *pfRequestingAbort ) {

  02550	e59d30b8	 ldr         r3, [sp, #0xB8]
  02554	e5933000	 ldr         r3, [r3]
  02558	e3530000	 cmp         r3, #0
  0255c	0a000005	 beq         |$LN3@AllocateMe|

; 722  :                         *pVirtAddr = NULL;

  02560	e59d20b0	 ldr         r2, [sp, #0xB0]
  02564	e3a03000	 mov         r3, #0
  02568	e5823000	 str         r3, [r2]

; 723  :                         return FALSE;

  0256c	e3a03000	 mov         r3, #0
  02570	e58d3028	 str         r3, [sp, #0x28]
  02574	ea0000bf	 b           |$LN14@AllocateMe|
  02578		 |$LN3@AllocateMe|

; 724  :                     }
; 725  : 
; 726  :                     // if this fails, we've been waiting for memory too long
; 727  :                     DEBUGCHK( GetTickCount() - dwStartBlockTickCount < CPHYSMEM_DEBUG_MAXIMUM_BLOCK_TIME );

  02578	eb000000	 bl          GetTickCount
  0257c	e58d0070	 str         r0, [sp, #0x70]
  02580	e59d2070	 ldr         r2, [sp, #0x70]
  02584	e59d3018	 ldr         r3, [sp, #0x18]
  02588	e0422003	 sub         r2, r2, r3
  0258c	e3a03c13	 mov         r3, #0x13, 24
  02590	e3833088	 orr         r3, r3, #0x88
  02594	e1520003	 cmp         r2, r3
  02598	2a000002	 bcs         |$LN42@AllocateMe|
  0259c	e3a03001	 mov         r3, #1
  025a0	e58d3074	 str         r3, [sp, #0x74]
  025a4	ea000008	 b           |$LN43@AllocateMe|
  025a8		 |$LN42@AllocateMe|
  025a8	e3a03c02	 mov         r3, #2, 24
  025ac	e38330d7	 orr         r3, r3, #0xD7
  025b0	e59f22d8	 ldr         r2, [pc, #0x2D8]
  025b4	e59f12d0	 ldr         r1, [pc, #0x2D0]
  025b8	e59f02c8	 ldr         r0, [pc, #0x2C8]
  025bc	eb000000	 bl          NKDbgPrintfW
  025c0	e6000010	 __debugbreak_ce
  025c4	e3a03000	 mov         r3, #0
  025c8	e58d3074	 str         r3, [sp, #0x74]
  025cc		 |$LN43@AllocateMe|
  025cc		 |$LN4@AllocateMe|

; 728  :                 }
; 729  : 
; 730  :                 EnterCriticalSection(&m_csLock);

  025cc	e59d30a4	 ldr         r3, [sp, #0xA4]
  025d0	e2830010	 add         r0, r3, #0x10
  025d4	eb000000	 bl          EnterCriticalSection

; 731  : 
; 732  :                 pNode = FindFreeBlock(dwSize, fHighPri);

  025d8	e59d2010	 ldr         r2, [sp, #0x10]
  025dc	e59d1008	 ldr         r1, [sp, #8]
  025e0	e59d00a4	 ldr         r0, [sp, #0xA4]
  025e4	eb000000	 bl          |?FindFreeBlock@CPhysMem@@AAAPAUtMEMLIST@@KH@Z|
  025e8	e58d0078	 str         r0, [sp, #0x78]
  025ec	e59d3078	 ldr         r3, [sp, #0x78]
  025f0	e58d3014	 str         r3, [sp, #0x14]

; 733  :             } while ( pNode == NULL );

  025f4	e59d3014	 ldr         r3, [sp, #0x14]
  025f8	e3530000	 cmp         r3, #0
  025fc	0affffc3	 beq         |$LN7@AllocateMe|

; 734  :             // rest of processing done below
; 735  :         } else {

  02600	ea000013	 b           |$LN2@AllocateMe|
  02604		 |$LN8@AllocateMe|

; 736  :             DEBUGMSG( ZONE_WARNING, (TEXT("CPhysMem AllocateMemory : No memory available") ));

  02604	e59f3280	 ldr         r3, [pc, #0x280]
  02608	e5933440	 ldr         r3, [r3, #0x440]
  0260c	e3130a02	 tst         r3, #2, 20
  02610	0a000004	 beq         |$LN44@AllocateMe|
  02614	e59f027c	 ldr         r0, [pc, #0x27C]
  02618	eb000000	 bl          NKDbgPrintfW
  0261c	e3a03001	 mov         r3, #1
  02620	e58d307c	 str         r3, [sp, #0x7C]
  02624	ea000001	 b           |$LN45@AllocateMe|
  02628		 |$LN44@AllocateMe|
  02628	e3a03000	 mov         r3, #0
  0262c	e58d307c	 str         r3, [sp, #0x7C]
  02630		 |$LN45@AllocateMe|

; 737  :             LeaveCriticalSection(&m_csLock);

  02630	e59d30a4	 ldr         r3, [sp, #0xA4]
  02634	e2830010	 add         r0, r3, #0x10
  02638	eb000000	 bl          LeaveCriticalSection

; 738  :             *pVirtAddr = NULL;

  0263c	e59d20b0	 ldr         r2, [sp, #0xB0]
  02640	e3a03000	 mov         r3, #0
  02644	e5823000	 str         r3, [r2]

; 739  :             return FALSE;

  02648	e3a03000	 mov         r3, #0
  0264c	e58d3028	 str         r3, [sp, #0x28]
  02650	ea000088	 b           |$LN14@AllocateMe|
  02654		 |$LN2@AllocateMe|
  02654		 |$LN9@AllocateMe|
  02654		 |$LN11@AllocateMe|

; 740  :         }
; 741  :     }
; 742  : 
; 743  :     // case pNode == NULL should have been handled above
; 744  : 
; 745  :     if ( pNode->dwSize - dwSize >= CPHYSMEM_MEMORY_ALIGNMENT) {

  02654	e59d3014	 ldr         r3, [sp, #0x14]
  02658	e2833008	 add         r3, r3, #8
  0265c	e5932000	 ldr         r2, [r3]
  02660	e59d3008	 ldr         r3, [sp, #8]
  02664	e0423003	 sub         r3, r2, r3
  02668	e3530020	 cmp         r3, #0x20
  0266c	3a00001f	 bcc         |$LN1@AllocateMe|

; 746  :         // There's enough left over to create a new block.
; 747  :         PMEMLIST pNodeNew = CreateNewNode(pNode->dwSize - dwSize,
; 748  :                                           pNode->dwVirtAddr + dwSize, 
; 749  :                                           pNode->dwPhysAddr + dwSize);

  02670	e59d3014	 ldr         r3, [sp, #0x14]
  02674	e2833004	 add         r3, r3, #4
  02678	e5932000	 ldr         r2, [r3]
  0267c	e59d3008	 ldr         r3, [sp, #8]
  02680	e0823003	 add         r3, r2, r3
  02684	e59d2014	 ldr         r2, [sp, #0x14]
  02688	e5921000	 ldr         r1, [r2]
  0268c	e59d2008	 ldr         r2, [sp, #8]
  02690	e0812002	 add         r2, r1, r2
  02694	e59d1014	 ldr         r1, [sp, #0x14]
  02698	e2811008	 add         r1, r1, #8
  0269c	e5910000	 ldr         r0, [r1]
  026a0	e59d1008	 ldr         r1, [sp, #8]
  026a4	e0401001	 sub         r1, r0, r1
  026a8	e59d00a4	 ldr         r0, [sp, #0xA4]
  026ac	eb000000	 bl          |?CreateNewNode@CPhysMem@@AAAPAUtMEMLIST@@KKK@Z|
  026b0	e58d0080	 str         r0, [sp, #0x80]
  026b4	e59d3080	 ldr         r3, [sp, #0x80]
  026b8	e58d301c	 str         r3, [sp, #0x1C]

; 750  :     #ifdef DEBUG
; 751  :         _tcscpy( pNodeNew->szDescription, pNode->szDescription );

  026bc	e59d3014	 ldr         r3, [sp, #0x14]
  026c0	e2831014	 add         r1, r3, #0x14
  026c4	e59d301c	 ldr         r3, [sp, #0x1C]
  026c8	e2830014	 add         r0, r3, #0x14
  026cc	eb000000	 bl          wcscpy

; 752  :     #endif // DEBUG
; 753  :         AddNodeToFreeList(pNodeNew, fHighPri);

  026d0	e59d2010	 ldr         r2, [sp, #0x10]
  026d4	e59d101c	 ldr         r1, [sp, #0x1C]
  026d8	e59d00a4	 ldr         r0, [sp, #0xA4]
  026dc	eb000000	 bl          |?AddNodeToFreeList@CPhysMem@@AAAHPAUtMEMLIST@@H@Z|

; 754  : 
; 755  :         pNode->dwSize = dwSize; // remember to resize old block

  026e0	e59d3014	 ldr         r3, [sp, #0x14]
  026e4	e2832008	 add         r2, r3, #8
  026e8	e59d3008	 ldr         r3, [sp, #8]
  026ec	e5823000	 str         r3, [r2]
  026f0		 |$LN1@AllocateMe|

; 756  :     }
; 757  : 
; 758  : #ifdef DEBUG
; 759  :     // add description to block
; 760  :     DEBUGCHK( _tcslen( pszMemDescription ) < CPHYSMEM_MAX_DEBUG_NODE_DESCRIPTION_LENGTH );

  026f0	e59d00a8	 ldr         r0, [sp, #0xA8]
  026f4	eb000000	 bl          wcslen
  026f8	e58d0084	 str         r0, [sp, #0x84]
  026fc	e59d3084	 ldr         r3, [sp, #0x84]
  02700	e3530050	 cmp         r3, #0x50
  02704	2a000002	 bcs         |$LN46@AllocateMe|
  02708	e3a03001	 mov         r3, #1
  0270c	e58d3088	 str         r3, [sp, #0x88]
  02710	ea000007	 b           |$LN47@AllocateMe|
  02714		 |$LN46@AllocateMe|
  02714	e3a03fbe	 mov         r3, #0xBE, 30
  02718	e59f2170	 ldr         r2, [pc, #0x170]
  0271c	e59f1168	 ldr         r1, [pc, #0x168]
  02720	e59f0160	 ldr         r0, [pc, #0x160]
  02724	eb000000	 bl          NKDbgPrintfW
  02728	e6000010	 __debugbreak_ce
  0272c	e3a03000	 mov         r3, #0
  02730	e58d3088	 str         r3, [sp, #0x88]
  02734		 |$LN47@AllocateMe|

; 761  :     _tcscpy( pNode->szDescription, pszMemDescription );

  02734	e59d10a8	 ldr         r1, [sp, #0xA8]
  02738	e59d3014	 ldr         r3, [sp, #0x14]
  0273c	e2830014	 add         r0, r3, #0x14
  02740	eb000000	 bl          wcscpy

; 762  :     // trash the memory before we return it to caller
; 763  :     memset( PUCHAR( pNode->dwVirtAddr ), GARBAGE, pNode->dwSize );

  02744	e59d3014	 ldr         r3, [sp, #0x14]
  02748	e2833008	 add         r3, r3, #8
  0274c	e5932000	 ldr         r2, [r3]
  02750	e3a010aa	 mov         r1, #0xAA
  02754	e59d3014	 ldr         r3, [sp, #0x14]
  02758	e5930000	 ldr         r0, [r3]
  0275c	eb000000	 bl          memset

; 764  : #endif // DEBUG
; 765  : 
; 766  :     DEBUGMSG(ZONE_CPHYSMEM, (TEXT("CPhysMem AllocateMemory : PA = 0x%08X, VA = 0x%08X, Size = %d, Desc = %s\r\n"),
; 767  :                           pNode->dwPhysAddr, pNode->dwVirtAddr, pNode->dwSize, pNode->szDescription ) );

  02760	e59f3124	 ldr         r3, [pc, #0x124]
  02764	e5933440	 ldr         r3, [r3, #0x440]
  02768	e3130b02	 tst         r3, #2, 22
  0276c	0a00000f	 beq         |$LN48@AllocateMe|
  02770	e59d3014	 ldr         r3, [sp, #0x14]
  02774	e2833014	 add         r3, r3, #0x14
  02778	e58d3000	 str         r3, [sp]
  0277c	e59d3014	 ldr         r3, [sp, #0x14]
  02780	e2833008	 add         r3, r3, #8
  02784	e5933000	 ldr         r3, [r3]
  02788	e59d2014	 ldr         r2, [sp, #0x14]
  0278c	e5922000	 ldr         r2, [r2]
  02790	e59d1014	 ldr         r1, [sp, #0x14]
  02794	e2811004	 add         r1, r1, #4
  02798	e5911000	 ldr         r1, [r1]
  0279c	e59f00f0	 ldr         r0, [pc, #0xF0]
  027a0	eb000000	 bl          NKDbgPrintfW
  027a4	e3a03001	 mov         r3, #1
  027a8	e58d308c	 str         r3, [sp, #0x8C]
  027ac	ea000001	 b           |$LN49@AllocateMe|
  027b0		 |$LN48@AllocateMe|
  027b0	e3a03000	 mov         r3, #0
  027b4	e58d308c	 str         r3, [sp, #0x8C]
  027b8		 |$LN49@AllocateMe|

; 768  : 
; 769  :     // mark this node used
; 770  :     InsertNodeBefore(pNode, FirstNode(INUSELIST(fHighPri)));

  027b8	e59d3010	 ldr         r3, [sp, #0x10]
  027bc	e3530000	 cmp         r3, #0
  027c0	0a000004	 beq         |$LN50@AllocateMe|
  027c4	e59d30a4	 ldr         r3, [sp, #0xA4]
  027c8	e2833070	 add         r3, r3, #0x70
  027cc	e5933000	 ldr         r3, [r3]
  027d0	e58d3090	 str         r3, [sp, #0x90]
  027d4	ea000003	 b           |$LN51@AllocateMe|
  027d8		 |$LN50@AllocateMe|
  027d8	e59d30a4	 ldr         r3, [sp, #0xA4]
  027dc	e2833060	 add         r3, r3, #0x60
  027e0	e5933000	 ldr         r3, [r3]
  027e4	e58d3090	 str         r3, [sp, #0x90]
  027e8		 |$LN51@AllocateMe|
  027e8	e59d0090	 ldr         r0, [sp, #0x90]
  027ec	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  027f0	e58d0094	 str         r0, [sp, #0x94]
  027f4	e59d1094	 ldr         r1, [sp, #0x94]
  027f8	e59d0014	 ldr         r0, [sp, #0x14]
  027fc	eb000000	 bl          |?InsertNodeBefore@@YAXPAUtMEMLIST@@0@Z|

; 771  : 
; 772  :     VALIDATE_HEAPS(fHighPri);

  02800	e59d1010	 ldr         r1, [sp, #0x10]
  02804	e59d00a4	 ldr         r0, [sp, #0xA4]
  02808	eb000000	 bl          |?ValidateHeaps@CPhysMem@@AAAHH@Z|

; 773  : 
; 774  :     LeaveCriticalSection(&m_csLock);

  0280c	e59d30a4	 ldr         r3, [sp, #0xA4]
  02810	e2830010	 add         r0, r3, #0x10
  02814	eb000000	 bl          LeaveCriticalSection

; 775  : 
; 776  :     DEBUGCHK( pNode->dwPhysAddr % CPHYSMEM_MEMORY_ALIGNMENT == 0 );

  02818	e59d3014	 ldr         r3, [sp, #0x14]
  0281c	e2833004	 add         r3, r3, #4
  02820	e5931000	 ldr         r1, [r3]
  02824	e3a00020	 mov         r0, #0x20
  02828	eb000000	 bl          __rt_udiv
  0282c	e3510000	 cmp         r1, #0
  02830	1a000002	 bne         |$LN52@AllocateMe|
  02834	e3a03001	 mov         r3, #1
  02838	e58d3098	 str         r3, [sp, #0x98]
  0283c	ea000007	 b           |$LN53@AllocateMe|
  02840		 |$LN52@AllocateMe|
  02840	e3a03fc2	 mov         r3, #0xC2, 30
  02844	e59f2044	 ldr         r2, [pc, #0x44]
  02848	e59f103c	 ldr         r1, [pc, #0x3C]
  0284c	e59f0034	 ldr         r0, [pc, #0x34]
  02850	eb000000	 bl          NKDbgPrintfW
  02854	e6000010	 __debugbreak_ce
  02858	e3a03000	 mov         r3, #0
  0285c	e58d3098	 str         r3, [sp, #0x98]
  02860		 |$LN53@AllocateMe|

; 777  :     *pVirtAddr = PUCHAR( pNode->dwVirtAddr );

  02860	e59d3014	 ldr         r3, [sp, #0x14]
  02864	e5932000	 ldr         r2, [r3]
  02868	e59d30b0	 ldr         r3, [sp, #0xB0]
  0286c	e5832000	 str         r2, [r3]

; 778  :     return TRUE;

  02870	e3a03001	 mov         r3, #1
  02874	e58d3028	 str         r3, [sp, #0x28]
  02878		 |$LN14@AllocateMe|

; 779  : }

  02878	e59d0028	 ldr         r0, [sp, #0x28]
  0287c	e28dd09c	 add         sp, sp, #0x9C
  02880	e89d6000	 ldmia       sp, {sp, lr}
  02884	e12fff1e	 bx          lr
  02888		 |$LN57@AllocateMe|
  02888		 |$LN58@AllocateMe|
  02888	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  0288c		 |$LN59@AllocateMe|
  0288c	00000000	 DCD         |dpCurSettings|
  02890		 |$LN60@AllocateMe|
  02890	00000000	 DCD         |??_C@_1KM@IMBMOFHC@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  02894		 |$LN61@AllocateMe|
  02894	00000000	 DCD         |??_C@_1JG@MNOBEEOD@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAP?$AAA?$AA?5?$AA?$DN?$AA?5?$AA0@|
  02898		 |$LN62@AllocateMe|
  02898	00000000	 DCD         |??_C@_1FM@OOLOAMIO@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAN?$AAo?$AA?5?$AAm?$AAe?$AAm@|
  0289c		 |$LN63@AllocateMe|
  0289c	00000000	 DCD         |??_C@_1HA@LDBHCAGE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe?$AA?5?$AAa@|
  028a0		 |$LN64@AllocateMe|
  028a0	00000000	 DCD         |??_C@_1FK@GOKAFDHN@?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAD?$AAe?$AAs?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CI?$AAr?$AAo?$AAu?$AAn?$AAd@|
  028a4		 |$M34410|

			 ENDP  ; |?AllocateMemory@CPhysMem@@QAAHPBGKQAPAEKPAH@Z|, CPhysMem::AllocateMemory

	EXPORT	|PulseEvent|
	EXPORT	|??_C@_1GC@CLHBJKAN@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAa?$AAf?$AAt?$AAe?$AAr?$AA?5?$AAf?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@BIHKKMPG@?$AAF?$AAr?$AAe?$AAe?$AAd?$AA?5?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IO@GHNBCJEB@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAF?$AAr?$AAe?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAP?$AAA?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@CAKPDPGE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe?$AA?5?$AAf@| [ DATA ] ; `string'
	EXPORT	|?FreeMemory@CPhysMem@@QAAXQAEKK@Z|	; CPhysMem::FreeMemory

  00060			 AREA	 |.pdata|, PDATA
|$T34454| DCD	|$LN38@FreeMemory|
	DCD	0x40013d04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@CLHBJKAN@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAa?$AAf?$AAt?$AAe?$AAr?$AA?5?$AAf?$AAr@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, ":", 0x0, " ", 0x0, "H", 0x0, "e", 0x0, "a"
	DCB	0x0, "p", 0x0, " ", 0x0, "p", 0x0, "r", 0x0, "i", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "a"
	DCB	0x0, "f", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "f"
	DCB	0x0, "r", 0x0, "e", 0x0, "e", 0x0, " ", 0x0, "V", 0x0, "A"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ":", 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@BIHKKMPG@?$AAF?$AAr?$AAe?$AAe?$AAd?$AA?5?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?$AA@| DCB "F"
	DCB	0x0, "r", 0x0, "e", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "M"
	DCB	0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IO@GHNBCJEB@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAF?$AAr?$AAe?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAP?$AAA?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "F", 0x0, "r", 0x0, "e", 0x0, "e"
	DCB	0x0, "M", 0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y"
	DCB	0x0, " ", 0x0, ":", 0x0, " ", 0x0, "P", 0x0, "A", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "V", 0x0, "A"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "S"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "s", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@CAKPDPGE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe?$AA?5?$AAf@| DCB "C"
	DCB	0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, ":", 0x0, " ", 0x0, "H", 0x0, "e", 0x0, "a"
	DCB	0x0, "p", 0x0, " ", 0x0, "p", 0x0, "r", 0x0, "i", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "b"
	DCB	0x0, "e", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, "e", 0x0, " "
	DCB	0x0, "f", 0x0, "r", 0x0, "e", 0x0, "e", 0x0, " ", 0x0, "V"
	DCB	0x0, "A", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ":", 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  028a4			 AREA	 |.text|, CODE, ARM

  028a4		 |?FreeMemory@CPhysMem@@QAAXQAEKK@Z| PROC ; CPhysMem::FreeMemory

; 789  : {

  028a4		 |$LN38@FreeMemory|
  028a4	e1a0c00d	 mov         r12, sp
  028a8	e92d000f	 stmdb       sp!, {r0 - r3}
  028ac	e92d5000	 stmdb       sp!, {r12, lr}
  028b0	e24dd054	 sub         sp, sp, #0x54
  028b4		 |$M34451|

; 790  :     // for now, only the following sets of flags should be passed in
; 791  :     DEBUGCHK( dwFlags == 0 || // low priority, allow blocking
; 792  :               dwFlags == CPHYSMEM_FLAG_NOBLOCK || // low priority, no blocking
; 793  :               dwFlags == (CPHYSMEM_FLAG_HIGHPRIORITY | CPHYSMEM_FLAG_NOBLOCK) ); // high pri, no blocking

  028b4	e59d3068	 ldr         r3, [sp, #0x68]
  028b8	e3530000	 cmp         r3, #0
  028bc	0a00000f	 beq         |$LN8@FreeMemory|
  028c0	e59d3068	 ldr         r3, [sp, #0x68]
  028c4	e3530002	 cmp         r3, #2
  028c8	0a00000c	 beq         |$LN8@FreeMemory|
  028cc	e59d3068	 ldr         r3, [sp, #0x68]
  028d0	e3530003	 cmp         r3, #3
  028d4	0a000009	 beq         |$LN8@FreeMemory|
  028d8	e3a03c03	 mov         r3, #3, 24
  028dc	e3833019	 orr         r3, r3, #0x19
  028e0	e59f24a0	 ldr         r2, [pc, #0x4A0]
  028e4	e59f1494	 ldr         r1, [pc, #0x494]
  028e8	e59f0494	 ldr         r0, [pc, #0x494]
  028ec	eb000000	 bl          NKDbgPrintfW
  028f0	e6000010	 __debugbreak_ce
  028f4	e3a03000	 mov         r3, #0
  028f8	e58d3014	 str         r3, [sp, #0x14]
  028fc	ea000001	 b           |$LN9@FreeMemory|
  02900		 |$LN8@FreeMemory|
  02900	e3a03001	 mov         r3, #1
  02904	e58d3014	 str         r3, [sp, #0x14]
  02908		 |$LN9@FreeMemory|

; 794  : 
; 795  :     BOOL fRemoved = FALSE;

  02908	e3a03000	 mov         r3, #0
  0290c	e58d3004	 str         r3, [sp, #4]

; 796  :     BOOL fHighPri = !!(dwFlags & CPHYSMEM_FLAG_HIGHPRIORITY);

  02910	e59d3068	 ldr         r3, [sp, #0x68]
  02914	e3130001	 tst         r3, #1
  02918	0a000002	 beq         |$LN10@FreeMemory|
  0291c	e3a03001	 mov         r3, #1
  02920	e58d3018	 str         r3, [sp, #0x18]
  02924	ea000001	 b           |$LN11@FreeMemory|
  02928		 |$LN10@FreeMemory|
  02928	e3a03000	 mov         r3, #0
  0292c	e58d3018	 str         r3, [sp, #0x18]
  02930		 |$LN11@FreeMemory|
  02930	e59d3018	 ldr         r3, [sp, #0x18]
  02934	e58d300c	 str         r3, [sp, #0xC]

; 797  : 
; 798  :     // caller of FreeMemory is capable of calling
; 799  :     // PaToVa or VaToPa if they need to. Also, 
; 800  :     // we shouldn't be called to free NULL memory.
; 801  :     DEBUGCHK( virtAddr != NULL && physAddr != 0 ); 

  02938	e59d3060	 ldr         r3, [sp, #0x60]
  0293c	e3530000	 cmp         r3, #0
  02940	0a000005	 beq         |$LN12@FreeMemory|
  02944	e59d3064	 ldr         r3, [sp, #0x64]
  02948	e3530000	 cmp         r3, #0
  0294c	0a000002	 beq         |$LN12@FreeMemory|
  02950	e3a03001	 mov         r3, #1
  02954	e58d301c	 str         r3, [sp, #0x1C]
  02958	ea000008	 b           |$LN13@FreeMemory|
  0295c		 |$LN12@FreeMemory|
  0295c	e3a03c03	 mov         r3, #3, 24
  02960	e3833021	 orr         r3, r3, #0x21
  02964	e59f241c	 ldr         r2, [pc, #0x41C]
  02968	e59f1410	 ldr         r1, [pc, #0x410]
  0296c	e59f0410	 ldr         r0, [pc, #0x410]
  02970	eb000000	 bl          NKDbgPrintfW
  02974	e6000010	 __debugbreak_ce
  02978	e3a03000	 mov         r3, #0
  0297c	e58d301c	 str         r3, [sp, #0x1C]
  02980		 |$LN13@FreeMemory|

; 802  :     DEBUGCHK( virtAddr == PaToVa( physAddr ) );

  02980	e59d1064	 ldr         r1, [sp, #0x64]
  02984	e59d005c	 ldr         r0, [sp, #0x5C]
  02988	eb000000	 bl          |?PaToVa@CPhysMem@@QAAPAEK@Z|
  0298c	e58d0020	 str         r0, [sp, #0x20]
  02990	e59d2060	 ldr         r2, [sp, #0x60]
  02994	e59d3020	 ldr         r3, [sp, #0x20]
  02998	e1520003	 cmp         r2, r3
  0299c	1a000002	 bne         |$LN14@FreeMemory|
  029a0	e3a03001	 mov         r3, #1
  029a4	e58d3024	 str         r3, [sp, #0x24]
  029a8	ea000008	 b           |$LN15@FreeMemory|
  029ac		 |$LN14@FreeMemory|
  029ac	e3a03c03	 mov         r3, #3, 24
  029b0	e3833022	 orr         r3, r3, #0x22
  029b4	e59f23cc	 ldr         r2, [pc, #0x3CC]
  029b8	e59f13c0	 ldr         r1, [pc, #0x3C0]
  029bc	e59f03c0	 ldr         r0, [pc, #0x3C0]
  029c0	eb000000	 bl          NKDbgPrintfW
  029c4	e6000010	 __debugbreak_ce
  029c8	e3a03000	 mov         r3, #0
  029cc	e58d3024	 str         r3, [sp, #0x24]
  029d0		 |$LN15@FreeMemory|

; 803  :     DEBUGCHK( physAddr % CPHYSMEM_MEMORY_ALIGNMENT == 0 );

  029d0	e59d1064	 ldr         r1, [sp, #0x64]
  029d4	e3a00020	 mov         r0, #0x20
  029d8	eb000000	 bl          __rt_udiv
  029dc	e3510000	 cmp         r1, #0
  029e0	1a000002	 bne         |$LN16@FreeMemory|
  029e4	e3a03001	 mov         r3, #1
  029e8	e58d3028	 str         r3, [sp, #0x28]
  029ec	ea000008	 b           |$LN17@FreeMemory|
  029f0		 |$LN16@FreeMemory|
  029f0	e3a03c03	 mov         r3, #3, 24
  029f4	e3833023	 orr         r3, r3, #0x23
  029f8	e59f2388	 ldr         r2, [pc, #0x388]
  029fc	e59f137c	 ldr         r1, [pc, #0x37C]
  02a00	e59f037c	 ldr         r0, [pc, #0x37C]
  02a04	eb000000	 bl          NKDbgPrintfW
  02a08	e6000010	 __debugbreak_ce
  02a0c	e3a03000	 mov         r3, #0
  02a10	e58d3028	 str         r3, [sp, #0x28]
  02a14		 |$LN17@FreeMemory|

; 804  : 
; 805  :     EnterCriticalSection(&m_csLock);

  02a14	e59d305c	 ldr         r3, [sp, #0x5C]
  02a18	e2830010	 add         r0, r3, #0x10
  02a1c	eb000000	 bl          EnterCriticalSection

; 806  : 
; 807  :     PMEMLIST pNode = FirstNode(INUSELIST(fHighPri));

  02a20	e59d300c	 ldr         r3, [sp, #0xC]
  02a24	e3530000	 cmp         r3, #0
  02a28	0a000004	 beq         |$LN18@FreeMemory|
  02a2c	e59d305c	 ldr         r3, [sp, #0x5C]
  02a30	e2833070	 add         r3, r3, #0x70
  02a34	e5933000	 ldr         r3, [r3]
  02a38	e58d302c	 str         r3, [sp, #0x2C]
  02a3c	ea000003	 b           |$LN19@FreeMemory|
  02a40		 |$LN18@FreeMemory|
  02a40	e59d305c	 ldr         r3, [sp, #0x5C]
  02a44	e2833060	 add         r3, r3, #0x60
  02a48	e5933000	 ldr         r3, [r3]
  02a4c	e58d302c	 str         r3, [sp, #0x2C]
  02a50		 |$LN19@FreeMemory|
  02a50	e59d002c	 ldr         r0, [sp, #0x2C]
  02a54	eb000000	 bl          |?FirstNode@@YAPAUtMEMLIST@@PAU1@@Z|
  02a58	e58d0030	 str         r0, [sp, #0x30]
  02a5c	e59d3030	 ldr         r3, [sp, #0x30]
  02a60	e58d3008	 str         r3, [sp, #8]

; 808  :     
; 809  :     DEBUGMSG( ZONE_CPHYSMEM && ZONE_VERBOSE, (TEXT("CPhysMem: Heap pri = %d before free VA = 0x%08x:\n"), fHighPri, virtAddr ) );

  02a64	e59f3314	 ldr         r3, [pc, #0x314]
  02a68	e5933440	 ldr         r3, [r3, #0x440]
  02a6c	e3130b02	 tst         r3, #2, 22
  02a70	0a00000a	 beq         |$LN20@FreeMemory|
  02a74	e59f3304	 ldr         r3, [pc, #0x304]
  02a78	e5933440	 ldr         r3, [r3, #0x440]
  02a7c	e3130a01	 tst         r3, #1, 20
  02a80	0a000006	 beq         |$LN20@FreeMemory|
  02a84	e59d2060	 ldr         r2, [sp, #0x60]
  02a88	e59d100c	 ldr         r1, [sp, #0xC]
  02a8c	e59f0300	 ldr         r0, [pc, #0x300]
  02a90	eb000000	 bl          NKDbgPrintfW
  02a94	e3a03001	 mov         r3, #1
  02a98	e58d3034	 str         r3, [sp, #0x34]
  02a9c	ea000001	 b           |$LN21@FreeMemory|
  02aa0		 |$LN20@FreeMemory|
  02aa0	e3a03000	 mov         r3, #0
  02aa4	e58d3034	 str         r3, [sp, #0x34]
  02aa8		 |$LN21@FreeMemory|

; 810  :     VALIDATE_HEAPS(fHighPri);

  02aa8	e59d100c	 ldr         r1, [sp, #0xC]
  02aac	e59d005c	 ldr         r0, [sp, #0x5C]
  02ab0	eb000000	 bl          |?ValidateHeaps@CPhysMem@@AAAHH@Z|
  02ab4		 |$LN5@FreeMemory|

; 811  : 
; 812  :     //
; 813  :     // Walk the list looking for this block
; 814  :     //
; 815  :     while (!EndOfList(INUSELIST(fHighPri), pNode)) {

  02ab4	e59d300c	 ldr         r3, [sp, #0xC]
  02ab8	e3530000	 cmp         r3, #0
  02abc	0a000004	 beq         |$LN22@FreeMemory|
  02ac0	e59d305c	 ldr         r3, [sp, #0x5C]
  02ac4	e2833070	 add         r3, r3, #0x70
  02ac8	e5933000	 ldr         r3, [r3]
  02acc	e58d3038	 str         r3, [sp, #0x38]
  02ad0	ea000003	 b           |$LN23@FreeMemory|
  02ad4		 |$LN22@FreeMemory|
  02ad4	e59d305c	 ldr         r3, [sp, #0x5C]
  02ad8	e2833060	 add         r3, r3, #0x60
  02adc	e5933000	 ldr         r3, [r3]
  02ae0	e58d3038	 str         r3, [sp, #0x38]
  02ae4		 |$LN23@FreeMemory|
  02ae4	e59d2038	 ldr         r2, [sp, #0x38]
  02ae8	e59d3008	 ldr         r3, [sp, #8]
  02aec	e1520003	 cmp         r2, r3
  02af0	1a000002	 bne         |$LN24@FreeMemory|
  02af4	e3a03001	 mov         r3, #1
  02af8	e58d303c	 str         r3, [sp, #0x3C]
  02afc	ea000001	 b           |$LN25@FreeMemory|
  02b00		 |$LN24@FreeMemory|
  02b00	e3a03000	 mov         r3, #0
  02b04	e58d303c	 str         r3, [sp, #0x3C]
  02b08		 |$LN25@FreeMemory|
  02b08	e59d303c	 ldr         r3, [sp, #0x3C]
  02b0c	e3530000	 cmp         r3, #0
  02b10	1a00004a	 bne         |$LN4@FreeMemory|

; 816  : 
; 817  :         if ((pNode->dwVirtAddr == (DWORD) virtAddr) &&
; 818  :             (pNode->dwPhysAddr == (DWORD) physAddr)) {

  02b14	e59d3008	 ldr         r3, [sp, #8]
  02b18	e5932000	 ldr         r2, [r3]
  02b1c	e59d3060	 ldr         r3, [sp, #0x60]
  02b20	e1520003	 cmp         r2, r3
  02b24	1a000040	 bne         |$LN3@FreeMemory|
  02b28	e59d3008	 ldr         r3, [sp, #8]
  02b2c	e2833004	 add         r3, r3, #4
  02b30	e5932000	 ldr         r2, [r3]
  02b34	e59d3064	 ldr         r3, [sp, #0x64]
  02b38	e1520003	 cmp         r2, r3
  02b3c	1a00003a	 bne         |$LN3@FreeMemory|

; 819  :             
; 820  :         #ifdef DEBUG
; 821  :             // trash this memory
; 822  :             DEBUGCHK( pNode->dwSize > 0 ); // otherwise, why are we calling FreeMemory??

  02b40	e59d3008	 ldr         r3, [sp, #8]
  02b44	e2833008	 add         r3, r3, #8
  02b48	e5933000	 ldr         r3, [r3]
  02b4c	e3530000	 cmp         r3, #0
  02b50	9a000002	 bls         |$LN26@FreeMemory|
  02b54	e3a03001	 mov         r3, #1
  02b58	e58d3040	 str         r3, [sp, #0x40]
  02b5c	ea000008	 b           |$LN27@FreeMemory|
  02b60		 |$LN26@FreeMemory|
  02b60	e3a03c03	 mov         r3, #3, 24
  02b64	e3833036	 orr         r3, r3, #0x36
  02b68	e59f2218	 ldr         r2, [pc, #0x218]
  02b6c	e59f120c	 ldr         r1, [pc, #0x20C]
  02b70	e59f020c	 ldr         r0, [pc, #0x20C]
  02b74	eb000000	 bl          NKDbgPrintfW
  02b78	e6000010	 __debugbreak_ce
  02b7c	e3a03000	 mov         r3, #0
  02b80	e58d3040	 str         r3, [sp, #0x40]
  02b84		 |$LN27@FreeMemory|

; 823  :             memset( PUCHAR( pNode->dwVirtAddr ), GARBAGE, pNode->dwSize );

  02b84	e59d3008	 ldr         r3, [sp, #8]
  02b88	e2833008	 add         r3, r3, #8
  02b8c	e5932000	 ldr         r2, [r3]
  02b90	e3a010aa	 mov         r1, #0xAA
  02b94	e59d3008	 ldr         r3, [sp, #8]
  02b98	e5930000	 ldr         r0, [r3]
  02b9c	eb000000	 bl          memset

; 824  : 
; 825  :             DEBUGMSG(ZONE_CPHYSMEM, 
; 826  :                      (TEXT("CPhysMem FreeMemory : PA = 0x%08X, VA = 0x%08X, Size = %d, Desc = %s\r\n"),
; 827  :                      pNode->dwPhysAddr, pNode->dwVirtAddr, pNode->dwSize, pNode->szDescription ));

  02ba0	e59f31d8	 ldr         r3, [pc, #0x1D8]
  02ba4	e5933440	 ldr         r3, [r3, #0x440]
  02ba8	e3130b02	 tst         r3, #2, 22
  02bac	0a00000f	 beq         |$LN28@FreeMemory|
  02bb0	e59d3008	 ldr         r3, [sp, #8]
  02bb4	e2833014	 add         r3, r3, #0x14
  02bb8	e58d3000	 str         r3, [sp]
  02bbc	e59d3008	 ldr         r3, [sp, #8]
  02bc0	e2833008	 add         r3, r3, #8
  02bc4	e5933000	 ldr         r3, [r3]
  02bc8	e59d2008	 ldr         r2, [sp, #8]
  02bcc	e5922000	 ldr         r2, [r2]
  02bd0	e59d1008	 ldr         r1, [sp, #8]
  02bd4	e2811004	 add         r1, r1, #4
  02bd8	e5911000	 ldr         r1, [r1]
  02bdc	e59f01ac	 ldr         r0, [pc, #0x1AC]
  02be0	eb000000	 bl          NKDbgPrintfW
  02be4	e3a03001	 mov         r3, #1
  02be8	e58d3044	 str         r3, [sp, #0x44]
  02bec	ea000001	 b           |$LN29@FreeMemory|
  02bf0		 |$LN28@FreeMemory|
  02bf0	e3a03000	 mov         r3, #0
  02bf4	e58d3044	 str         r3, [sp, #0x44]
  02bf8		 |$LN29@FreeMemory|

; 828  : 
; 829  :             // change description
; 830  :             _tcscpy( pNode->szDescription, TEXT("Freed Memory") );

  02bf8	e59f118c	 ldr         r1, [pc, #0x18C]
  02bfc	e59d3008	 ldr         r3, [sp, #8]
  02c00	e2830014	 add         r0, r3, #0x14
  02c04	eb000000	 bl          wcscpy

; 831  :         #endif // DEBUG
; 832  :             RemoveNode(pNode);

  02c08	e59d0008	 ldr         r0, [sp, #8]
  02c0c	eb000000	 bl          |?RemoveNode@@YAXPAUtMEMLIST@@@Z|

; 833  :             AddNodeToFreeList(pNode, fHighPri);

  02c10	e59d200c	 ldr         r2, [sp, #0xC]
  02c14	e59d1008	 ldr         r1, [sp, #8]
  02c18	e59d005c	 ldr         r0, [sp, #0x5C]
  02c1c	eb000000	 bl          |?AddNodeToFreeList@CPhysMem@@AAAHPAUtMEMLIST@@H@Z|

; 834  :             fRemoved = TRUE;

  02c20	e3a03001	 mov         r3, #1
  02c24	e58d3004	 str         r3, [sp, #4]

; 835  :             break;

  02c28	ea000004	 b           |$LN4@FreeMemory|
  02c2c		 |$LN3@FreeMemory|

; 836  :         }
; 837  :         pNode = pNode->next;

  02c2c	e59d3008	 ldr         r3, [sp, #8]
  02c30	e283300c	 add         r3, r3, #0xC
  02c34	e5933000	 ldr         r3, [r3]
  02c38	e58d3008	 str         r3, [sp, #8]

; 838  :     }

  02c3c	eaffff9c	 b           |$LN5@FreeMemory|
  02c40		 |$LN4@FreeMemory|

; 839  :     
; 840  :     if (fHighPri && !fRemoved) {

  02c40	e59d300c	 ldr         r3, [sp, #0xC]
  02c44	e3530000	 cmp         r3, #0
  02c48	0a00001a	 beq         |$LN2@FreeMemory|
  02c4c	e59d3004	 ldr         r3, [sp, #4]
  02c50	e3530000	 cmp         r3, #0
  02c54	1a000017	 bne         |$LN2@FreeMemory|

; 841  :         LeaveCriticalSection(&m_csLock);

  02c58	e59d305c	 ldr         r3, [sp, #0x5C]
  02c5c	e2830010	 add         r0, r3, #0x10
  02c60	eb000000	 bl          LeaveCriticalSection

; 842  : 
; 843  :         //
; 844  :         // Try removing from normal region.
; 845  :         //
; 846  :         DEBUGCHK( dwFlags == ( CPHYSMEM_FLAG_HIGHPRIORITY | CPHYSMEM_FLAG_NOBLOCK ) );

  02c64	e59d3068	 ldr         r3, [sp, #0x68]
  02c68	e3530003	 cmp         r3, #3
  02c6c	1a000002	 bne         |$LN30@FreeMemory|
  02c70	e3a03001	 mov         r3, #1
  02c74	e58d3048	 str         r3, [sp, #0x48]
  02c78	ea000008	 b           |$LN31@FreeMemory|
  02c7c		 |$LN30@FreeMemory|
  02c7c	e3a03c03	 mov         r3, #3, 24
  02c80	e383304e	 orr         r3, r3, #0x4E
  02c84	e59f20fc	 ldr         r2, [pc, #0xFC]
  02c88	e59f10f0	 ldr         r1, [pc, #0xF0]
  02c8c	e59f00f0	 ldr         r0, [pc, #0xF0]
  02c90	eb000000	 bl          NKDbgPrintfW
  02c94	e6000010	 __debugbreak_ce
  02c98	e3a03000	 mov         r3, #0
  02c9c	e58d3048	 str         r3, [sp, #0x48]
  02ca0		 |$LN31@FreeMemory|

; 847  :         FreeMemory( virtAddr,
; 848  :                     physAddr,
; 849  :                     CPHYSMEM_FLAG_NOBLOCK ); // dwFlags & ~CPHYSMEM_FLAG_HIGHPRIORITY

  02ca0	e3a03002	 mov         r3, #2
  02ca4	e59d2064	 ldr         r2, [sp, #0x64]
  02ca8	e59d1060	 ldr         r1, [sp, #0x60]
  02cac	e59d005c	 ldr         r0, [sp, #0x5C]
  02cb0	eb000000	 bl          |?FreeMemory@CPhysMem@@QAAXQAEKK@Z|

; 850  :         return;

  02cb4	ea00002d	 b           |$LN6@FreeMemory|
  02cb8		 |$LN2@FreeMemory|

; 851  :     }
; 852  :     DEBUGCHK( fRemoved );

  02cb8	e59d3004	 ldr         r3, [sp, #4]
  02cbc	e3530000	 cmp         r3, #0
  02cc0	0a000002	 beq         |$LN32@FreeMemory|
  02cc4	e3a03001	 mov         r3, #1
  02cc8	e58d304c	 str         r3, [sp, #0x4C]
  02ccc	ea000007	 b           |$LN33@FreeMemory|
  02cd0		 |$LN32@FreeMemory|
  02cd0	e3a03fd5	 mov         r3, #0xD5, 30
  02cd4	e59f20ac	 ldr         r2, [pc, #0xAC]
  02cd8	e59f10a0	 ldr         r1, [pc, #0xA0]
  02cdc	e59f00a0	 ldr         r0, [pc, #0xA0]
  02ce0	eb000000	 bl          NKDbgPrintfW
  02ce4	e6000010	 __debugbreak_ce
  02ce8	e3a03000	 mov         r3, #0
  02cec	e58d304c	 str         r3, [sp, #0x4C]
  02cf0		 |$LN33@FreeMemory|

; 853  :     
; 854  :     DEBUGMSG( ZONE_CPHYSMEM && ZONE_VERBOSE, (TEXT("CPhysMem: Heap pri = %d after free VA = 0x%08x:\n"), fHighPri, virtAddr ) );

  02cf0	e59f3088	 ldr         r3, [pc, #0x88]
  02cf4	e5933440	 ldr         r3, [r3, #0x440]
  02cf8	e3130b02	 tst         r3, #2, 22
  02cfc	0a00000a	 beq         |$LN34@FreeMemory|
  02d00	e59f3078	 ldr         r3, [pc, #0x78]
  02d04	e5933440	 ldr         r3, [r3, #0x440]
  02d08	e3130a01	 tst         r3, #1, 20
  02d0c	0a000006	 beq         |$LN34@FreeMemory|
  02d10	e59d2060	 ldr         r2, [sp, #0x60]
  02d14	e59d100c	 ldr         r1, [sp, #0xC]
  02d18	e59f005c	 ldr         r0, [pc, #0x5C]
  02d1c	eb000000	 bl          NKDbgPrintfW
  02d20	e3a03001	 mov         r3, #1
  02d24	e58d3050	 str         r3, [sp, #0x50]
  02d28	ea000001	 b           |$LN35@FreeMemory|
  02d2c		 |$LN34@FreeMemory|
  02d2c	e3a03000	 mov         r3, #0
  02d30	e58d3050	 str         r3, [sp, #0x50]
  02d34		 |$LN35@FreeMemory|

; 855  :     VALIDATE_HEAPS(fHighPri);

  02d34	e59d100c	 ldr         r1, [sp, #0xC]
  02d38	e59d005c	 ldr         r0, [sp, #0x5C]
  02d3c	eb000000	 bl          |?ValidateHeaps@CPhysMem@@AAAHH@Z|

; 856  : 
; 857  :     LeaveCriticalSection(&m_csLock);

  02d40	e59d305c	 ldr         r3, [sp, #0x5C]
  02d44	e2830010	 add         r0, r3, #0x10
  02d48	eb000000	 bl          LeaveCriticalSection

; 858  : 
; 859  :     //
; 860  :     // Signal everyone waiting for memory that some just became available.
; 861  :     //
; 862  :     if (m_fHasBlocked)

  02d4c	e59d305c	 ldr         r3, [sp, #0x5C]
  02d50	e2833030	 add         r3, r3, #0x30
  02d54	e5933000	 ldr         r3, [r3]
  02d58	e3530000	 cmp         r3, #0
  02d5c	0a000003	 beq         |$LN1@FreeMemory|

; 863  :         PulseEvent(m_hFreeMemEvent);

  02d60	e59d305c	 ldr         r3, [sp, #0x5C]
  02d64	e283302c	 add         r3, r3, #0x2C
  02d68	e5930000	 ldr         r0, [r3]
  02d6c	eb000000	 bl          PulseEvent
  02d70		 |$LN1@FreeMemory|
  02d70		 |$LN6@FreeMemory|

; 864  : }

  02d70	e28dd054	 add         sp, sp, #0x54
  02d74	e89d6000	 ldmia       sp, {sp, lr}
  02d78	e12fff1e	 bx          lr
  02d7c		 |$LN39@FreeMemory|
  02d7c		 |$LN40@FreeMemory|
  02d7c	00000000	 DCD         |??_C@_1GC@CLHBJKAN@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAa?$AAf?$AAt?$AAe?$AAr?$AA?5?$AAf?$AAr@|
  02d80		 |$LN41@FreeMemory|
  02d80	00000000	 DCD         |dpCurSettings|
  02d84		 |$LN42@FreeMemory|
  02d84	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  02d88		 |$LN43@FreeMemory|
  02d88	00000000	 DCD         |??_C@_1KM@IMBMOFHC@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  02d8c		 |$LN44@FreeMemory|
  02d8c	00000000	 DCD         |??_C@_1BK@BIHKKMPG@?$AAF?$AAr?$AAe?$AAe?$AAd?$AA?5?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?$AA@|
  02d90		 |$LN45@FreeMemory|
  02d90	00000000	 DCD         |??_C@_1IO@GHNBCJEB@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?5?$AAF?$AAr?$AAe?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AA?3?$AA?5?$AAP?$AAA?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8@|
  02d94		 |$LN46@FreeMemory|
  02d94	00000000	 DCD         |??_C@_1GE@CAKPDPGE@?$AAC?$AAP?$AAh?$AAy?$AAs?$AAM?$AAe?$AAm?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AA?5?$AAp?$AAr?$AAi?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe?$AA?5?$AAf@|
  02d98		 |$M34452|

			 ENDP  ; |?FreeMemory@CPhysMem@@QAAXQAEKK@Z|, CPhysMem::FreeMemory

	IMPORT	|EventModify|
; File c:\wince600\osdesigns\z2170p\z2170p\wince600\z2170p_armv4i\cesysgen\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T34468| DCD	|$LN5@PulseEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PulseEvent| PROC

; 211  : _inline BOOL PulseEvent(HANDLE h) {

  00000		 |$LN5@PulseEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M34465|

; 212  : 	return EventModify(h,EVENT_PULSE);

  00010	e3a01001	 mov         r1, #1
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 213  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M34466|

			 ENDP  ; |PulseEvent|

	EXPORT	|?ReleaseBlockedCalls@CPhysMem@@QAAHXZ|	; CPhysMem::ReleaseBlockedCalls

  00068			 AREA	 |.pdata|, PDATA
|$T34476| DCD	|$LN6@ReleaseBlo|
	DCD	0x40001304
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\usb\usb2com\cphysmem.cpp

  02d98			 AREA	 |.text|, CODE, ARM

  02d98		 |?ReleaseBlockedCalls@CPhysMem@@QAAHXZ| PROC ; CPhysMem::ReleaseBlockedCalls

; 872  : {

  02d98		 |$LN6@ReleaseBlo|
  02d98	e1a0c00d	 mov         r12, sp
  02d9c	e92d0001	 stmdb       sp!, {r0}
  02da0	e92d5000	 stmdb       sp!, {r12, lr}
  02da4	e24dd004	 sub         sp, sp, #4
  02da8		 |$M34473|

; 873  :     //
; 874  :     // Signal everyone waiting for memory to check if they have been aborted.
; 875  :     //
; 876  :     if (m_fHasBlocked)

  02da8	e59d300c	 ldr         r3, [sp, #0xC]
  02dac	e2833030	 add         r3, r3, #0x30
  02db0	e5933000	 ldr         r3, [r3]
  02db4	e3530000	 cmp         r3, #0
  02db8	0a000003	 beq         |$LN1@ReleaseBlo|

; 877  :         PulseEvent(m_hFreeMemEvent);

  02dbc	e59d300c	 ldr         r3, [sp, #0xC]
  02dc0	e283302c	 add         r3, r3, #0x2C
  02dc4	e5930000	 ldr         r0, [r3]
  02dc8	eb000000	 bl          PulseEvent
  02dcc		 |$LN1@ReleaseBlo|

; 878  :     
; 879  :     return(TRUE);

  02dcc	e3a03001	 mov         r3, #1
  02dd0	e58d3000	 str         r3, [sp]

; 880  : }

  02dd4	e59d0000	 ldr         r0, [sp]
  02dd8	e28dd004	 add         sp, sp, #4
  02ddc	e89d6000	 ldmia       sp, {sp, lr}
  02de0	e12fff1e	 bx          lr
  02de4		 |$M34474|

			 ENDP  ; |?ReleaseBlockedCalls@CPhysMem@@QAAHXZ|, CPhysMem::ReleaseBlockedCalls

	END
