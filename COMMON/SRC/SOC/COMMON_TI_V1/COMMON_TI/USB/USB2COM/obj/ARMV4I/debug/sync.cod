; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\USB\USB2COM\sync.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|SetEvent|
	EXPORT	|GetCurrentThreadId|
	EXPORT	|?EnterCritSec_Ex@CritSec_Ex@@QAA?AW4e_CritSec_Status@@K@Z| ; CritSec_Ex::EnterCritSec_Ex
	IMPORT	|WaitForSingleObject|
	IMPORT	|LeaveCriticalSection|
	IMPORT	|EnterCriticalSection|
	IMPORT	|GetTickCount|

  00000			 AREA	 |.pdata|, PDATA
|$T33653| DCD	|$LN22@EnterCritS|
	DCD	0x40008f04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\usb\usb2com\sync.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?EnterCritSec_Ex@CritSec_Ex@@QAA?AW4e_CritSec_Status@@K@Z| PROC ; CritSec_Ex::EnterCritSec_Ex

; 131  : {

  00000		 |$LN22@EnterCritS|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd030	 sub         sp, sp, #0x30
  00010		 |$M33650|

; 132  :     DWORD r;
; 133  :     ULONG tStart, tNow, tLeft;
; 134  :     CritSec_Status retval;
; 135  :     BOOL fWaiting;
; 136  :     DWORD me;
; 137  : 
; 138  :     tStart = GetTickCount();

  00010	eb000000	 bl          GetTickCount
  00014	e58d0020	 str         r0, [sp, #0x20]
  00018	e59d3020	 ldr         r3, [sp, #0x20]
  0001c	e58d3004	 str         r3, [sp, #4]

; 139  :     r = ! WAIT_TIMEOUT;  // anything other than WAIT_TIMEOUT will suffice

  00020	e3a03000	 mov         r3, #0
  00024	e58d300c	 str         r3, [sp, #0xC]

; 140  :     me = GetCurrentThreadId();

  00028	eb000000	 bl          GetCurrentThreadId
  0002c	e58d0024	 str         r0, [sp, #0x24]
  00030	e59d3024	 ldr         r3, [sp, #0x24]
  00034	e58d3010	 str         r3, [sp, #0x10]

; 141  : 
; 142  :     // Help destruction proceed more quickly by preventing anyone new from using
; 143  :     // the IPC objects when we're pending destruction. Do this here for speed
; 144  :     // and again within the critical section for correctness.
; 145  :     if (m_fClosing)

  00038	e59d3038	 ldr         r3, [sp, #0x38]
  0003c	e2833024	 add         r3, r3, #0x24
  00040	e5933000	 ldr         r3, [r3]
  00044	e3530000	 cmp         r3, #0
  00048	0a000002	 beq         |$LN17@EnterCritS|

; 146  :         return CSS_DESTROYED;

  0004c	e3a03001	 mov         r3, #1
  00050	e58d301c	 str         r3, [sp, #0x1C]
  00054	ea000074	 b           |$LN18@EnterCritS|
  00058		 |$LN17@EnterCritS|

; 147  : 
; 148  :     EnterCriticalSection(&m_cs);

  00058	e59d3038	 ldr         r3, [sp, #0x38]
  0005c	e2830010	 add         r0, r3, #0x10
  00060	eb000000	 bl          EnterCriticalSection
  00064		 |$LN16@EnterCritS|

; 149  :     do {
; 150  :         fWaiting = FALSE;

  00064	e3a03000	 mov         r3, #0
  00068	e58d3014	 str         r3, [sp, #0x14]

; 151  : 
; 152  :         if (m_fClosing) {

  0006c	e59d3038	 ldr         r3, [sp, #0x38]
  00070	e2833024	 add         r3, r3, #0x24
  00074	e5933000	 ldr         r3, [r3]
  00078	e3530000	 cmp         r3, #0
  0007c	0a000006	 beq         |$LN13@EnterCritS|

; 153  :             SetEvent(m_hev);

  00080	e59d3038	 ldr         r3, [sp, #0x38]
  00084	e283300c	 add         r3, r3, #0xC
  00088	e5930000	 ldr         r0, [r3]
  0008c	eb000000	 bl          SetEvent

; 154  :             retval = CSS_DESTROYED;

  00090	e3a03001	 mov         r3, #1
  00094	e58d3000	 str         r3, [sp]
  00098	ea00002d	 b           |$LN12@EnterCritS|
  0009c		 |$LN13@EnterCritS|

; 155  :         }
; 156  :         else if (r == WAIT_TIMEOUT) {

  0009c	e59d200c	 ldr         r2, [sp, #0xC]
  000a0	e3a03c01	 mov         r3, #1, 24
  000a4	e3833002	 orr         r3, r3, #2
  000a8	e1520003	 cmp         r2, r3
  000ac	1a000002	 bne         |$LN11@EnterCritS|

; 157  :             retval = CSS_TIMEOUT;

  000b0	e3a03002	 mov         r3, #2
  000b4	e58d3000	 str         r3, [sp]
  000b8	ea000025	 b           |$LN10@EnterCritS|
  000bc		 |$LN11@EnterCritS|

; 158  :         }
; 159  :         else if (m_hOwnerThread == 0) {

  000bc	e59d3038	 ldr         r3, [sp, #0x38]
  000c0	e5933000	 ldr         r3, [r3]
  000c4	e3530000	 cmp         r3, #0
  000c8	1a000009	 bne         |$LN9@EnterCritS|

; 160  :             m_hOwnerThread = me;

  000cc	e59d2010	 ldr         r2, [sp, #0x10]
  000d0	e59d3038	 ldr         r3, [sp, #0x38]
  000d4	e5832000	 str         r2, [r3]

; 161  :             m_cOwnerReferences = 1;

  000d8	e59d3038	 ldr         r3, [sp, #0x38]
  000dc	e2832004	 add         r2, r3, #4
  000e0	e3a03001	 mov         r3, #1
  000e4	e5823000	 str         r3, [r2]

; 162  :             retval = CSS_SUCCESS;

  000e8	e3a03000	 mov         r3, #0
  000ec	e58d3000	 str         r3, [sp]
  000f0	ea000017	 b           |$LN8@EnterCritS|
  000f4		 |$LN9@EnterCritS|

; 163  :         }
; 164  :         else if (m_hOwnerThread == me) {

  000f4	e59d3038	 ldr         r3, [sp, #0x38]
  000f8	e5932000	 ldr         r2, [r3]
  000fc	e59d3010	 ldr         r3, [sp, #0x10]
  00100	e1520003	 cmp         r2, r3
  00104	1a000009	 bne         |$LN7@EnterCritS|

; 165  :             ++m_cOwnerReferences;

  00108	e59d3038	 ldr         r3, [sp, #0x38]
  0010c	e2833004	 add         r3, r3, #4
  00110	e5933000	 ldr         r3, [r3]
  00114	e2832001	 add         r2, r3, #1
  00118	e59d3038	 ldr         r3, [sp, #0x38]
  0011c	e2833004	 add         r3, r3, #4
  00120	e5832000	 str         r2, [r3]

; 166  :             retval = CSS_SUCCESS;

  00124	e3a03000	 mov         r3, #0
  00128	e58d3000	 str         r3, [sp]

; 167  :         }
; 168  :         else {

  0012c	ea000008	 b           |$LN6@EnterCritS|
  00130		 |$LN7@EnterCritS|

; 169  :             // Oh well, we've got to wait.
; 170  :             ++m_cWaitingThreads;

  00130	e59d3038	 ldr         r3, [sp, #0x38]
  00134	e2833008	 add         r3, r3, #8
  00138	e5933000	 ldr         r3, [r3]
  0013c	e2832001	 add         r2, r3, #1
  00140	e59d3038	 ldr         r3, [sp, #0x38]
  00144	e2833008	 add         r3, r3, #8
  00148	e5832000	 str         r2, [r3]

; 171  :             fWaiting = TRUE;

  0014c	e3a03001	 mov         r3, #1
  00150	e58d3014	 str         r3, [sp, #0x14]
  00154		 |$LN6@EnterCritS|
  00154		 |$LN8@EnterCritS|
  00154		 |$LN10@EnterCritS|
  00154		 |$LN12@EnterCritS|

; 172  :         }
; 173  :         LeaveCriticalSection(&m_cs);

  00154	e59d3038	 ldr         r3, [sp, #0x38]
  00158	e2830010	 add         r0, r3, #0x10
  0015c	eb000000	 bl          LeaveCriticalSection

; 174  : 
; 175  :         if (fWaiting) {

  00160	e59d3014	 ldr         r3, [sp, #0x14]
  00164	e3530000	 cmp         r3, #0
  00168	0a00002a	 beq         |$LN5@EnterCritS|

; 176  :             if (ulTimeout != INFINITE) {

  0016c	e59d303c	 ldr         r3, [sp, #0x3C]
  00170	e3730001	 cmn         r3, #1
  00174	0a000013	 beq         |$LN4@EnterCritS|

; 177  :                 tNow = GetTickCount();

  00178	eb000000	 bl          GetTickCount
  0017c	e58d0028	 str         r0, [sp, #0x28]
  00180	e59d3028	 ldr         r3, [sp, #0x28]
  00184	e58d3018	 str         r3, [sp, #0x18]

; 178  :                 if (tNow - tStart < ulTimeout)

  00188	e59d2018	 ldr         r2, [sp, #0x18]
  0018c	e59d3004	 ldr         r3, [sp, #4]
  00190	e0422003	 sub         r2, r2, r3
  00194	e59d303c	 ldr         r3, [sp, #0x3C]
  00198	e1520003	 cmp         r2, r3
  0019c	2a000006	 bcs         |$LN3@EnterCritS|

; 179  :                     tLeft = ulTimeout - (tNow - tStart);

  001a0	e59d2018	 ldr         r2, [sp, #0x18]
  001a4	e59d3004	 ldr         r3, [sp, #4]
  001a8	e0422003	 sub         r2, r2, r3
  001ac	e59d303c	 ldr         r3, [sp, #0x3C]
  001b0	e0433002	 sub         r3, r3, r2
  001b4	e58d3008	 str         r3, [sp, #8]

; 180  :                 else

  001b8	ea000001	 b           |$LN2@EnterCritS|
  001bc		 |$LN3@EnterCritS|

; 181  :                     tLeft = 0; // poll one more time

  001bc	e3a03000	 mov         r3, #0
  001c0	e58d3008	 str         r3, [sp, #8]
  001c4		 |$LN2@EnterCritS|

; 182  :             } else {

  001c4	ea000001	 b           |$LN1@EnterCritS|
  001c8		 |$LN4@EnterCritS|

; 183  :                 tLeft = INFINITE;

  001c8	e3e03000	 mvn         r3, #0
  001cc	e58d3008	 str         r3, [sp, #8]
  001d0		 |$LN1@EnterCritS|

; 184  :             }
; 185  :             r = WaitForSingleObject(m_hev, tLeft);

  001d0	e59d1008	 ldr         r1, [sp, #8]
  001d4	e59d3038	 ldr         r3, [sp, #0x38]
  001d8	e283300c	 add         r3, r3, #0xC
  001dc	e5930000	 ldr         r0, [r3]
  001e0	eb000000	 bl          WaitForSingleObject
  001e4	e58d002c	 str         r0, [sp, #0x2C]
  001e8	e59d302c	 ldr         r3, [sp, #0x2C]
  001ec	e58d300c	 str         r3, [sp, #0xC]

; 186  :             EnterCriticalSection(&m_cs);

  001f0	e59d3038	 ldr         r3, [sp, #0x38]
  001f4	e2830010	 add         r0, r3, #0x10
  001f8	eb000000	 bl          EnterCriticalSection

; 187  :             --m_cWaitingThreads;

  001fc	e59d3038	 ldr         r3, [sp, #0x38]
  00200	e2833008	 add         r3, r3, #8
  00204	e5933000	 ldr         r3, [r3]
  00208	e2432001	 sub         r2, r3, #1
  0020c	e59d3038	 ldr         r3, [sp, #0x38]
  00210	e2833008	 add         r3, r3, #8
  00214	e5832000	 str         r2, [r3]
  00218		 |$LN5@EnterCritS|

; 188  :         }
; 189  :     } while (fWaiting);

  00218	e59d3014	 ldr         r3, [sp, #0x14]
  0021c	e3530000	 cmp         r3, #0
  00220	1affff8f	 bne         |$LN16@EnterCritS|

; 190  : 
; 191  :     return retval;

  00224	e59d3000	 ldr         r3, [sp]
  00228	e58d301c	 str         r3, [sp, #0x1C]
  0022c		 |$LN18@EnterCritS|

; 192  : }

  0022c	e59d001c	 ldr         r0, [sp, #0x1C]
  00230	e28dd030	 add         sp, sp, #0x30
  00234	e89d6000	 ldmia       sp, {sp, lr}
  00238	e12fff1e	 bx          lr
  0023c		 |$M33651|

			 ENDP  ; |?EnterCritSec_Ex@CritSec_Ex@@QAA?AW4e_CritSec_Status@@K@Z|, CritSec_Ex::EnterCritSec_Ex

	IMPORT	|EventModify|
; File c:\wince600\osdesigns\z2170p\z2170p\wince600\z2170p_armv4i\cesysgen\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T33659| DCD	|$LN5@SetEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M33656|

; 236  : 	return EventModify(h,EVENT_SET);

  00010	e3a01003	 mov         r1, #3
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 237  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M33657|

			 ENDP  ; |SetEvent|

	IMPORT	|__GetUserKData|

  00000			 AREA	 |.pdata|, PDATA
|$T33667| DCD	|$LN5@GetCurrent|
	DCD	0x40000b02
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentThreadId| PROC

; 369  : _inline DWORD GetCurrentThreadId(void) {

  00000		 |$LN5@GetCurrent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M33664|

; 370  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURTHREAD * sizeof(HANDLE)));

  00008	e3a00008	 mov         r0, #8
  0000c	eb000000	 bl          __GetUserKData
  00010	e58d0004	 str         r0, [sp, #4]
  00014	e59d3004	 ldr         r3, [sp, #4]
  00018	e58d3000	 str         r3, [sp]

; 371  : }

  0001c	e59d0000	 ldr         r0, [sp]
  00020	e28dd008	 add         sp, sp, #8
  00024	e49de004	 ldr         lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$M33665|

			 ENDP  ; |GetCurrentThreadId|

	EXPORT	|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KE@MMKLMOBM@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|?LeaveCritSec_Ex@CritSec_Ex@@QAAXXZ|	; CritSec_Ex::LeaveCritSec_Ex
	IMPORT	|NKDbgPrintfW|

  00008			 AREA	 |.pdata|, PDATA
|$T33678| DCD	|$LN10@LeaveCritS|
	DCD	0x40004504
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\usb\usb2com\sync.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "E", 0x0, "B"
	DCB	0x0, "U", 0x0, "G", 0x0, "C", 0x0, "H", 0x0, "K", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, "t", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| DCB "U", 0x0
	DCB	"n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KE@MMKLMOBM@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "C"
	DCB	0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N", 0x0, "_"
	DCB	0x0, "T", 0x0, "I", 0x0, "_", 0x0, "V", 0x0, "1", 0x0, "\\"
	DCB	0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N"
	DCB	0x0, "_", 0x0, "T", 0x0, "I", 0x0, "\\", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "\\", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "2"
	DCB	0x0, "C", 0x0, "O", 0x0, "M", 0x0, "\\", 0x0, ".", 0x0, "\\"
	DCB	0x0, "s", 0x0, "y", 0x0, "n", 0x0, "c", 0x0, ".", 0x0, "c"
	DCB	0x0, "p", 0x0, "p", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  0023c			 AREA	 |.text|, CODE, ARM

  0023c		 |?LeaveCritSec_Ex@CritSec_Ex@@QAAXXZ| PROC ; CritSec_Ex::LeaveCritSec_Ex

; 195  : {

  0023c		 |$LN10@LeaveCritS|
  0023c	e1a0c00d	 mov         r12, sp
  00240	e92d0001	 stmdb       sp!, {r0}
  00244	e92d5000	 stmdb       sp!, {r12, lr}
  00248	e24dd00c	 sub         sp, sp, #0xC
  0024c		 |$M33675|

; 196  : #ifdef POLITE // but not by default // default is to fail so the debugger knows you botched
; 197  :     if (m_fClosing && m_hOwnerThread == NULL)
; 198  :         // our caller violated protocol but we'll ignore it
; 199  :         return;
; 200  : #endif
; 201  :     ASSERT(m_hOwnerThread == GetCurrentThreadId());

  0024c	eb000000	 bl          GetCurrentThreadId
  00250	e58d0000	 str         r0, [sp]
  00254	e59d3014	 ldr         r3, [sp, #0x14]
  00258	e5932000	 ldr         r2, [r3]
  0025c	e59d3000	 ldr         r3, [sp]
  00260	e1520003	 cmp         r2, r3
  00264	1a000002	 bne         |$LN4@LeaveCritS|
  00268	e3a03001	 mov         r3, #1
  0026c	e58d3004	 str         r3, [sp, #4]
  00270	ea000007	 b           |$LN5@LeaveCritS|
  00274		 |$LN4@LeaveCritS|
  00274	e3a030c9	 mov         r3, #0xC9
  00278	e59f20cc	 ldr         r2, [pc, #0xCC]
  0027c	e59f10c4	 ldr         r1, [pc, #0xC4]
  00280	e59f00bc	 ldr         r0, [pc, #0xBC]
  00284	eb000000	 bl          NKDbgPrintfW
  00288	e6000010	 __debugbreak_ce
  0028c	e3a03000	 mov         r3, #0
  00290	e58d3004	 str         r3, [sp, #4]
  00294		 |$LN5@LeaveCritS|

; 202  :     
; 203  :     EnterCriticalSection(&m_cs);

  00294	e59d3014	 ldr         r3, [sp, #0x14]
  00298	e2830010	 add         r0, r3, #0x10
  0029c	eb000000	 bl          EnterCriticalSection

; 204  : 
; 205  :     // this would be symptomatic of a logic error in the caller
; 206  :     ASSERT(m_cOwnerReferences > 0);

  002a0	e59d3014	 ldr         r3, [sp, #0x14]
  002a4	e2833004	 add         r3, r3, #4
  002a8	e5933000	 ldr         r3, [r3]
  002ac	e3530000	 cmp         r3, #0
  002b0	9a000002	 bls         |$LN6@LeaveCritS|
  002b4	e3a03001	 mov         r3, #1
  002b8	e58d3008	 str         r3, [sp, #8]
  002bc	ea000007	 b           |$LN7@LeaveCritS|
  002c0		 |$LN6@LeaveCritS|
  002c0	e3a030ce	 mov         r3, #0xCE
  002c4	e59f2080	 ldr         r2, [pc, #0x80]
  002c8	e59f1078	 ldr         r1, [pc, #0x78]
  002cc	e59f0070	 ldr         r0, [pc, #0x70]
  002d0	eb000000	 bl          NKDbgPrintfW
  002d4	e6000010	 __debugbreak_ce
  002d8	e3a03000	 mov         r3, #0
  002dc	e58d3008	 str         r3, [sp, #8]
  002e0		 |$LN7@LeaveCritS|

; 207  : 
; 208  :     if (--m_cOwnerReferences == 0) {

  002e0	e59d3014	 ldr         r3, [sp, #0x14]
  002e4	e2833004	 add         r3, r3, #4
  002e8	e5933000	 ldr         r3, [r3]
  002ec	e2432001	 sub         r2, r3, #1
  002f0	e59d3014	 ldr         r3, [sp, #0x14]
  002f4	e2833004	 add         r3, r3, #4
  002f8	e5832000	 str         r2, [r3]
  002fc	e59d3014	 ldr         r3, [sp, #0x14]
  00300	e2833004	 add         r3, r3, #4
  00304	e5933000	 ldr         r3, [r3]
  00308	e3530000	 cmp         r3, #0
  0030c	1a000006	 bne         |$LN1@LeaveCritS|

; 209  :         m_hOwnerThread = 0;

  00310	e59d2014	 ldr         r2, [sp, #0x14]
  00314	e3a03000	 mov         r3, #0
  00318	e5823000	 str         r3, [r2]

; 210  :         SetEvent(m_hev);

  0031c	e59d3014	 ldr         r3, [sp, #0x14]
  00320	e283300c	 add         r3, r3, #0xC
  00324	e5930000	 ldr         r0, [r3]
  00328	eb000000	 bl          SetEvent
  0032c		 |$LN1@LeaveCritS|

; 211  :     }
; 212  : 
; 213  :     LeaveCriticalSection(&m_cs);

  0032c	e59d3014	 ldr         r3, [sp, #0x14]
  00330	e2830010	 add         r0, r3, #0x10
  00334	eb000000	 bl          LeaveCriticalSection

; 214  : }

  00338	e28dd00c	 add         sp, sp, #0xC
  0033c	e89d6000	 ldmia       sp, {sp, lr}
  00340	e12fff1e	 bx          lr
  00344		 |$LN11@LeaveCritS|
  00344		 |$LN12@LeaveCritS|
  00344	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  00348		 |$LN13@LeaveCritS|
  00348	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  0034c		 |$LN14@LeaveCritS|
  0034c	00000000	 DCD         |??_C@_1KE@MMKLMOBM@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  00350		 |$M33676|

			 ENDP  ; |?LeaveCritSec_Ex@CritSec_Ex@@QAAXXZ|, CritSec_Ex::LeaveCritSec_Ex

	EXPORT	|?Initialize@CritSec_Ex@@QAAXXZ|	; CritSec_Ex::Initialize
	EXPORT	|??0CritSec_Ex@@QAA@XZ|			; CritSec_Ex::CritSec_Ex
	IMPORT	|InitializeCriticalSection|
	IMPORT	|RaiseException|
	IMPORT	|CreateEventW|

  00010			 AREA	 |.pdata|, PDATA
|$T33688| DCD	|$LN6@CritSec_Ex|
	DCD	0x40002304
; Function compile flags: /Odtp

  00350			 AREA	 |.text|, CODE, ARM

  00350		 |??0CritSec_Ex@@QAA@XZ| PROC		; CritSec_Ex::CritSec_Ex

; 217  : {

  00350		 |$LN6@CritSec_Ex|
  00350	e1a0c00d	 mov         r12, sp
  00354	e92d0001	 stmdb       sp!, {r0}
  00358	e92d5000	 stmdb       sp!, {r12, lr}
  0035c	e24dd008	 sub         sp, sp, #8
  00360		 |$M33685|

; 218  :     m_hev = CreateEvent(NULL, FALSE, TRUE, 0);   // initially set!

  00360	e3a03000	 mov         r3, #0
  00364	e3a02001	 mov         r2, #1
  00368	e3a01000	 mov         r1, #0
  0036c	e3a00000	 mov         r0, #0
  00370	eb000000	 bl          CreateEventW
  00374	e58d0004	 str         r0, [sp, #4]
  00378	e59d3010	 ldr         r3, [sp, #0x10]
  0037c	e283200c	 add         r2, r3, #0xC
  00380	e59d3004	 ldr         r3, [sp, #4]
  00384	e5823000	 str         r3, [r2]

; 219  :     if (m_hev == NULL) {

  00388	e59d3010	 ldr         r3, [sp, #0x10]
  0038c	e283300c	 add         r3, r3, #0xC
  00390	e5933000	 ldr         r3, [r3]
  00394	e3530000	 cmp         r3, #0
  00398	1a000004	 bne         |$LN1@CritSec_Ex|

; 220  :         // simulate InitializeCriticalSection - see docs
; 221  :         RaiseException(STATUS_NO_MEMORY, 0, 0, NULL);

  0039c	e3a03000	 mov         r3, #0
  003a0	e3a02000	 mov         r2, #0
  003a4	e3a01000	 mov         r1, #0
  003a8	e3a0015f	 mov         r0, #0x5F, 2
  003ac	eb000000	 bl          RaiseException
  003b0		 |$LN1@CritSec_Ex|

; 222  :     }
; 223  :     InitializeCriticalSection(&m_cs);

  003b0	e59d3010	 ldr         r3, [sp, #0x10]
  003b4	e2830010	 add         r0, r3, #0x10
  003b8	eb000000	 bl          InitializeCriticalSection

; 224  :     Initialize();

  003bc	e59d0010	 ldr         r0, [sp, #0x10]
  003c0	eb000000	 bl          |?Initialize@CritSec_Ex@@QAAXXZ|

; 225  : }

  003c4	e59d3010	 ldr         r3, [sp, #0x10]
  003c8	e58d3000	 str         r3, [sp]
  003cc	e59d0000	 ldr         r0, [sp]
  003d0	e28dd008	 add         sp, sp, #8
  003d4	e89d6000	 ldmia       sp, {sp, lr}
  003d8	e12fff1e	 bx          lr
  003dc		 |$M33686|

			 ENDP  ; |??0CritSec_Ex@@QAA@XZ|, CritSec_Ex::CritSec_Ex


  00018			 AREA	 |.pdata|, PDATA
|$T33693| DCD	|$LN5@Initialize|
	DCD	0x40001a03
; Function compile flags: /Odtp

  003dc			 AREA	 |.text|, CODE, ARM

  003dc		 |?Initialize@CritSec_Ex@@QAAXXZ| PROC	; CritSec_Ex::Initialize

; 227  : {

  003dc		 |$LN5@Initialize|
  003dc	e1a0c00d	 mov         r12, sp
  003e0	e92d0001	 stmdb       sp!, {r0}
  003e4	e92d5000	 stmdb       sp!, {r12, lr}
  003e8		 |$M33690|

; 228  :     EnterCriticalSection(&m_cs);

  003e8	e59d3008	 ldr         r3, [sp, #8]
  003ec	e2830010	 add         r0, r3, #0x10
  003f0	eb000000	 bl          EnterCriticalSection

; 229  :     m_hOwnerThread = 0;

  003f4	e59d2008	 ldr         r2, [sp, #8]
  003f8	e3a03000	 mov         r3, #0
  003fc	e5823000	 str         r3, [r2]

; 230  :     m_cOwnerReferences = 0;

  00400	e59d3008	 ldr         r3, [sp, #8]
  00404	e2832004	 add         r2, r3, #4
  00408	e3a03000	 mov         r3, #0
  0040c	e5823000	 str         r3, [r2]

; 231  :     m_cWaitingThreads = 0;

  00410	e59d3008	 ldr         r3, [sp, #8]
  00414	e2832008	 add         r2, r3, #8
  00418	e3a03000	 mov         r3, #0
  0041c	e5823000	 str         r3, [r2]

; 232  :     m_fClosing = FALSE;

  00420	e59d3008	 ldr         r3, [sp, #8]
  00424	e2832024	 add         r2, r3, #0x24
  00428	e3a03000	 mov         r3, #0
  0042c	e5823000	 str         r3, [r2]

; 233  :     LeaveCriticalSection(&m_cs);

  00430	e59d3008	 ldr         r3, [sp, #8]
  00434	e2830010	 add         r0, r3, #0x10
  00438	eb000000	 bl          LeaveCriticalSection

; 234  : }

  0043c	e89d6000	 ldmia       sp, {sp, lr}
  00440	e12fff1e	 bx          lr
  00444		 |$M33691|

			 ENDP  ; |?Initialize@CritSec_Ex@@QAAXXZ|, CritSec_Ex::Initialize

	EXPORT	|?PrepareDeleteCritSec_Ex@CritSec_Ex@@QAAXXZ| ; CritSec_Ex::PrepareDeleteCritSec_Ex

  00020			 AREA	 |.pdata|, PDATA
|$T33698| DCD	|$LN6@PrepareDel|
	DCD	0x40002104
; Function compile flags: /Odtp

  00444			 AREA	 |.text|, CODE, ARM

  00444		 |?PrepareDeleteCritSec_Ex@CritSec_Ex@@QAAXXZ| PROC ; CritSec_Ex::PrepareDeleteCritSec_Ex

; 237  : {

  00444		 |$LN6@PrepareDel|
  00444	e1a0c00d	 mov         r12, sp
  00448	e92d0001	 stmdb       sp!, {r0}
  0044c	e92d5000	 stmdb       sp!, {r12, lr}
  00450	e24dd008	 sub         sp, sp, #8
  00454		 |$M33695|

; 238  :     DWORD me = GetCurrentThreadId();

  00454	eb000000	 bl          GetCurrentThreadId
  00458	e58d0004	 str         r0, [sp, #4]
  0045c	e59d3004	 ldr         r3, [sp, #4]
  00460	e58d3000	 str         r3, [sp]

; 239  :     
; 240  :     EnterCriticalSection(&m_cs);

  00464	e59d3010	 ldr         r3, [sp, #0x10]
  00468	e2830010	 add         r0, r3, #0x10
  0046c	eb000000	 bl          EnterCriticalSection

; 241  :     m_fClosing = TRUE;

  00470	e59d3010	 ldr         r3, [sp, #0x10]
  00474	e2832024	 add         r2, r3, #0x24
  00478	e3a03001	 mov         r3, #1
  0047c	e5823000	 str         r3, [r2]

; 242  :     if (m_hOwnerThread == me) {

  00480	e59d3010	 ldr         r3, [sp, #0x10]
  00484	e5932000	 ldr         r2, [r3]
  00488	e59d3000	 ldr         r3, [sp]
  0048c	e1520003	 cmp         r2, r3
  00490	1a000002	 bne         |$LN1@PrepareDel|

; 243  :         // m_cOwnerReferences is >=1 but the caller had better not Leave after this...
; 244  :         m_hOwnerThread = 0;

  00494	e59d2010	 ldr         r2, [sp, #0x10]
  00498	e3a03000	 mov         r3, #0
  0049c	e5823000	 str         r3, [r2]
  004a0		 |$LN1@PrepareDel|

; 245  :     }
; 246  :     LeaveCriticalSection(&m_cs);

  004a0	e59d3010	 ldr         r3, [sp, #0x10]
  004a4	e2830010	 add         r0, r3, #0x10
  004a8	eb000000	 bl          LeaveCriticalSection

; 247  : 
; 248  :     // start waking up threads blocked on this critsec;
; 249  :     // each thread woken this way will set the event again.
; 250  :     SetEvent(m_hev);

  004ac	e59d3010	 ldr         r3, [sp, #0x10]
  004b0	e283300c	 add         r3, r3, #0xC
  004b4	e5930000	 ldr         r0, [r3]
  004b8	eb000000	 bl          SetEvent

; 251  : }

  004bc	e28dd008	 add         sp, sp, #8
  004c0	e89d6000	 ldmia       sp, {sp, lr}
  004c4	e12fff1e	 bx          lr
  004c8		 |$M33696|

			 ENDP  ; |?PrepareDeleteCritSec_Ex@CritSec_Ex@@QAAXXZ|, CritSec_Ex::PrepareDeleteCritSec_Ex

	EXPORT	|PulseEvent|
	EXPORT	|??1CritSec_Ex@@QAA@XZ|			; CritSec_Ex::~CritSec_Ex
	IMPORT	|DeleteCriticalSection|
	IMPORT	|CloseHandle|

  00028			 AREA	 |.pdata|, PDATA
|$T33707| DCD	|$LN11@CritSec_Ex@2|
	DCD	0x40004904
; Function compile flags: /Odtp

  004c8			 AREA	 |.text|, CODE, ARM

  004c8		 |??1CritSec_Ex@@QAA@XZ| PROC		; CritSec_Ex::~CritSec_Ex

; 254  : {

  004c8		 |$LN11@CritSec_Ex@2|
  004c8	e1a0c00d	 mov         r12, sp
  004cc	e92d0001	 stmdb       sp!, {r0}
  004d0	e92d5000	 stmdb       sp!, {r12, lr}
  004d4	e24dd00c	 sub         sp, sp, #0xC
  004d8		 |$M33704|

; 255  :     BOOL bDone;
; 256  : 
; 257  :     // In case it wasn't already done:
; 258  :     PrepareDeleteCritSec_Ex();

  004d8	e59d0014	 ldr         r0, [sp, #0x14]
  004dc	eb000000	 bl          |?PrepareDeleteCritSec_Ex@CritSec_Ex@@QAAXXZ|

; 259  : 
; 260  :     EnterCriticalSection(&m_cs);

  004e0	e59d3014	 ldr         r3, [sp, #0x14]
  004e4	e2830010	 add         r0, r3, #0x10
  004e8	eb000000	 bl          EnterCriticalSection

; 261  :     bDone = m_hOwnerThread == 0 && m_cWaitingThreads == 0;

  004ec	e59d3014	 ldr         r3, [sp, #0x14]
  004f0	e5933000	 ldr         r3, [r3]
  004f4	e3530000	 cmp         r3, #0
  004f8	1a000007	 bne         |$LN5@CritSec_Ex@2|
  004fc	e59d3014	 ldr         r3, [sp, #0x14]
  00500	e2833008	 add         r3, r3, #8
  00504	e5933000	 ldr         r3, [r3]
  00508	e3530000	 cmp         r3, #0
  0050c	1a000002	 bne         |$LN5@CritSec_Ex@2|
  00510	e3a03001	 mov         r3, #1
  00514	e58d3004	 str         r3, [sp, #4]
  00518	ea000001	 b           |$LN6@CritSec_Ex@2|
  0051c		 |$LN5@CritSec_Ex@2|
  0051c	e3a03000	 mov         r3, #0
  00520	e58d3004	 str         r3, [sp, #4]
  00524		 |$LN6@CritSec_Ex@2|
  00524	e59d3004	 ldr         r3, [sp, #4]
  00528	e58d3000	 str         r3, [sp]

; 262  :     LeaveCriticalSection(&m_cs);

  0052c	e59d3014	 ldr         r3, [sp, #0x14]
  00530	e2830010	 add         r0, r3, #0x10
  00534	eb000000	 bl          LeaveCriticalSection
  00538		 |$LN2@CritSec_Ex@2|

; 263  : 
; 264  :     while (!bDone) {

  00538	e59d3000	 ldr         r3, [sp]
  0053c	e3530000	 cmp         r3, #0
  00540	1a00001f	 bne         |$LN1@CritSec_Ex@2|

; 265  :         // force someone to wake up, leaving the event reset
; 266  :         // so that the next statement can actually block.
; 267  :         PulseEvent(m_hev);

  00544	e59d3014	 ldr         r3, [sp, #0x14]
  00548	e283300c	 add         r3, r3, #0xC
  0054c	e5930000	 ldr         r0, [r3]
  00550	eb000000	 bl          PulseEvent

; 268  : 
; 269  :         // and wait for the next waiting thread to set the event again
; 270  :         // which will happen when they relinquish or when they note the
; 271  :         // m_fClosing flag.
; 272  :         WaitForSingleObject(m_hev, INFINITE);

  00554	e3e01000	 mvn         r1, #0
  00558	e59d3014	 ldr         r3, [sp, #0x14]
  0055c	e283300c	 add         r3, r3, #0xC
  00560	e5930000	 ldr         r0, [r3]
  00564	eb000000	 bl          WaitForSingleObject

; 273  : 
; 274  :         EnterCriticalSection(&m_cs);

  00568	e59d3014	 ldr         r3, [sp, #0x14]
  0056c	e2830010	 add         r0, r3, #0x10
  00570	eb000000	 bl          EnterCriticalSection

; 275  :         bDone = m_hOwnerThread == 0 && m_cWaitingThreads == 0;

  00574	e59d3014	 ldr         r3, [sp, #0x14]
  00578	e5933000	 ldr         r3, [r3]
  0057c	e3530000	 cmp         r3, #0
  00580	1a000007	 bne         |$LN7@CritSec_Ex@2|
  00584	e59d3014	 ldr         r3, [sp, #0x14]
  00588	e2833008	 add         r3, r3, #8
  0058c	e5933000	 ldr         r3, [r3]
  00590	e3530000	 cmp         r3, #0
  00594	1a000002	 bne         |$LN7@CritSec_Ex@2|
  00598	e3a03001	 mov         r3, #1
  0059c	e58d3008	 str         r3, [sp, #8]
  005a0	ea000001	 b           |$LN8@CritSec_Ex@2|
  005a4		 |$LN7@CritSec_Ex@2|
  005a4	e3a03000	 mov         r3, #0
  005a8	e58d3008	 str         r3, [sp, #8]
  005ac		 |$LN8@CritSec_Ex@2|
  005ac	e59d3008	 ldr         r3, [sp, #8]
  005b0	e58d3000	 str         r3, [sp]

; 276  :         LeaveCriticalSection(&m_cs);

  005b4	e59d3014	 ldr         r3, [sp, #0x14]
  005b8	e2830010	 add         r0, r3, #0x10
  005bc	eb000000	 bl          LeaveCriticalSection

; 277  :     }

  005c0	eaffffdc	 b           |$LN2@CritSec_Ex@2|
  005c4		 |$LN1@CritSec_Ex@2|

; 278  : 
; 279  :     CloseHandle(m_hev);

  005c4	e59d3014	 ldr         r3, [sp, #0x14]
  005c8	e283300c	 add         r3, r3, #0xC
  005cc	e5930000	 ldr         r0, [r3]
  005d0	eb000000	 bl          CloseHandle

; 280  :     DeleteCriticalSection(&m_cs);

  005d4	e59d3014	 ldr         r3, [sp, #0x14]
  005d8	e2830010	 add         r0, r3, #0x10
  005dc	eb000000	 bl          DeleteCriticalSection

; 281  : }

  005e0	e28dd00c	 add         sp, sp, #0xC
  005e4	e89d6000	 ldmia       sp, {sp, lr}
  005e8	e12fff1e	 bx          lr
  005ec		 |$M33705|

			 ENDP  ; |??1CritSec_Ex@@QAA@XZ|, CritSec_Ex::~CritSec_Ex

; File c:\wince600\osdesigns\z2170p\z2170p\wince600\z2170p_armv4i\cesysgen\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T33713| DCD	|$LN5@PulseEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PulseEvent| PROC

; 211  : _inline BOOL PulseEvent(HANDLE h) {

  00000		 |$LN5@PulseEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M33710|

; 212  : 	return EventModify(h,EVENT_PULSE);

  00010	e3a01001	 mov         r1, #1
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 213  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M33711|

			 ENDP  ; |PulseEvent|

	EXPORT	|??0Countdown@@QAA@K@Z|			; Countdown::Countdown

  00030			 AREA	 |.pdata|, PDATA
|$T33723| DCD	|$LN7@Countdown|
	DCD	0x40002604
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\usb\usb2com\sync.cpp

  005ec			 AREA	 |.text|, CODE, ARM

  005ec		 |??0Countdown@@QAA@K@Z| PROC		; Countdown::Countdown

; 285  : {

  005ec		 |$LN7@Countdown|
  005ec	e1a0c00d	 mov         r12, sp
  005f0	e92d0003	 stmdb       sp!, {r0, r1}
  005f4	e92d5000	 stmdb       sp!, {r12, lr}
  005f8	e24dd00c	 sub         sp, sp, #0xC
  005fc		 |$M33720|

; 286  :     count = cInitial;

  005fc	e59d3014	 ldr         r3, [sp, #0x14]
  00600	e283201c	 add         r2, r3, #0x1C
  00604	e59d3018	 ldr         r3, [sp, #0x18]
  00608	e5823000	 str         r3, [r2]

; 287  :     hev = CreateEvent(NULL, TRUE, cInitial ? FALSE : TRUE, NULL);

  0060c	e59d3018	 ldr         r3, [sp, #0x18]
  00610	e3530000	 cmp         r3, #0
  00614	0a000002	 beq         |$LN3@Countdown|
  00618	e3a03000	 mov         r3, #0
  0061c	e58d3004	 str         r3, [sp, #4]
  00620	ea000001	 b           |$LN4@Countdown|
  00624		 |$LN3@Countdown|
  00624	e3a03001	 mov         r3, #1
  00628	e58d3004	 str         r3, [sp, #4]
  0062c		 |$LN4@Countdown|
  0062c	e3a03000	 mov         r3, #0
  00630	e59d2004	 ldr         r2, [sp, #4]
  00634	e3a01001	 mov         r1, #1
  00638	e3a00000	 mov         r0, #0
  0063c	eb000000	 bl          CreateEventW
  00640	e58d0008	 str         r0, [sp, #8]
  00644	e59d3014	 ldr         r3, [sp, #0x14]
  00648	e2832014	 add         r2, r3, #0x14
  0064c	e59d3008	 ldr         r3, [sp, #8]
  00650	e5823000	 str         r3, [r2]

; 288  :     InitializeCriticalSection(&cs);

  00654	e59d0014	 ldr         r0, [sp, #0x14]
  00658	eb000000	 bl          InitializeCriticalSection

; 289  :     lock = FALSE;

  0065c	e59d3014	 ldr         r3, [sp, #0x14]
  00660	e2832018	 add         r2, r3, #0x18
  00664	e3a03000	 mov         r3, #0
  00668	e5823000	 str         r3, [r2]

; 290  : }

  0066c	e59d3014	 ldr         r3, [sp, #0x14]
  00670	e58d3000	 str         r3, [sp]
  00674	e59d0000	 ldr         r0, [sp]
  00678	e28dd00c	 add         sp, sp, #0xC
  0067c	e89d6000	 ldmia       sp, {sp, lr}
  00680	e12fff1e	 bx          lr
  00684		 |$M33721|

			 ENDP  ; |??0Countdown@@QAA@K@Z|, Countdown::Countdown

	EXPORT	|ResetEvent|
	EXPORT	|?IncrCountdown@Countdown@@QAAHXZ|	; Countdown::IncrCountdown

  00038			 AREA	 |.pdata|, PDATA
|$T33729| DCD	|$LN8@IncrCountd|
	DCD	0x40002804
; Function compile flags: /Odtp

  00684			 AREA	 |.text|, CODE, ARM

  00684		 |?IncrCountdown@Countdown@@QAAHXZ| PROC ; Countdown::IncrCountdown

; 293  : {

  00684		 |$LN8@IncrCountd|
  00684	e1a0c00d	 mov         r12, sp
  00688	e92d0001	 stmdb       sp!, {r0}
  0068c	e92d5000	 stmdb       sp!, {r12, lr}
  00690	e24dd008	 sub         sp, sp, #8
  00694		 |$M33726|

; 294  :     BOOL r = TRUE;

  00694	e3a03001	 mov         r3, #1
  00698	e58d3000	 str         r3, [sp]

; 295  : 
; 296  :     EnterCriticalSection(&cs);

  0069c	e59d0010	 ldr         r0, [sp, #0x10]
  006a0	eb000000	 bl          EnterCriticalSection

; 297  :     if (lock)

  006a4	e59d3010	 ldr         r3, [sp, #0x10]
  006a8	e2833018	 add         r3, r3, #0x18
  006ac	e5933000	 ldr         r3, [r3]
  006b0	e3530000	 cmp         r3, #0
  006b4	0a000002	 beq         |$LN3@IncrCountd|

; 298  :         r = FALSE;

  006b8	e3a03000	 mov         r3, #0
  006bc	e58d3000	 str         r3, [sp]

; 299  :     else

  006c0	ea00000f	 b           |$LN2@IncrCountd|
  006c4		 |$LN3@IncrCountd|

; 300  :         if (count++ == 0)

  006c4	e59d3010	 ldr         r3, [sp, #0x10]
  006c8	e283301c	 add         r3, r3, #0x1C
  006cc	e5933000	 ldr         r3, [r3]
  006d0	e3530000	 cmp         r3, #0
  006d4	e59d3010	 ldr         r3, [sp, #0x10]
  006d8	e283301c	 add         r3, r3, #0x1C
  006dc	e5933000	 ldr         r3, [r3]
  006e0	e2832001	 add         r2, r3, #1
  006e4	e59d3010	 ldr         r3, [sp, #0x10]
  006e8	e283301c	 add         r3, r3, #0x1C
  006ec	e5832000	 str         r2, [r3]
  006f0	1a000003	 bne         |$LN1@IncrCountd|

; 301  :             ResetEvent(hev);

  006f4	e59d3010	 ldr         r3, [sp, #0x10]
  006f8	e2833014	 add         r3, r3, #0x14
  006fc	e5930000	 ldr         r0, [r3]
  00700	eb000000	 bl          ResetEvent
  00704		 |$LN1@IncrCountd|
  00704		 |$LN2@IncrCountd|

; 302  :     LeaveCriticalSection(&cs);

  00704	e59d0010	 ldr         r0, [sp, #0x10]
  00708	eb000000	 bl          LeaveCriticalSection

; 303  : 
; 304  :     return r;

  0070c	e59d3000	 ldr         r3, [sp]
  00710	e58d3004	 str         r3, [sp, #4]

; 305  : }

  00714	e59d0004	 ldr         r0, [sp, #4]
  00718	e28dd008	 add         sp, sp, #8
  0071c	e89d6000	 ldmia       sp, {sp, lr}
  00720	e12fff1e	 bx          lr
  00724		 |$M33727|

			 ENDP  ; |?IncrCountdown@Countdown@@QAAHXZ|, Countdown::IncrCountdown

; File c:\wince600\osdesigns\z2170p\z2170p\wince600\z2170p_armv4i\cesysgen\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T33735| DCD	|$LN5@ResetEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ResetEvent| PROC

; 223  : _inline BOOL ResetEvent(HANDLE h) {

  00000		 |$LN5@ResetEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M33732|

; 224  : 	return EventModify(h,EVENT_RESET);

  00010	e3a01002	 mov         r1, #2
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 225  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M33733|

			 ENDP  ; |ResetEvent|

	EXPORT	|?DecrCountdown@Countdown@@QAAXXZ|	; Countdown::DecrCountdown

  00040			 AREA	 |.pdata|, PDATA
|$T33744| DCD	|$LN8@DecrCountd@2|
	DCD	0x40002f04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\usb\usb2com\sync.cpp

  00724			 AREA	 |.text|, CODE, ARM

  00724		 |?DecrCountdown@Countdown@@QAAXXZ| PROC ; Countdown::DecrCountdown

; 308  : {

  00724		 |$LN8@DecrCountd@2|
  00724	e1a0c00d	 mov         r12, sp
  00728	e92d0001	 stmdb       sp!, {r0}
  0072c	e92d5000	 stmdb       sp!, {r12, lr}
  00730	e24dd004	 sub         sp, sp, #4
  00734		 |$M33741|

; 309  :     EnterCriticalSection(&cs);

  00734	e59d000c	 ldr         r0, [sp, #0xC]
  00738	eb000000	 bl          EnterCriticalSection

; 310  :     ASSERT(count > 0);

  0073c	e59d300c	 ldr         r3, [sp, #0xC]
  00740	e283301c	 add         r3, r3, #0x1C
  00744	e5933000	 ldr         r3, [r3]
  00748	e3530000	 cmp         r3, #0
  0074c	9a000002	 bls         |$LN4@DecrCountd@2|
  00750	e3a03001	 mov         r3, #1
  00754	e58d3000	 str         r3, [sp]
  00758	ea000008	 b           |$LN5@DecrCountd@2|
  0075c		 |$LN4@DecrCountd@2|
  0075c	e3a03c01	 mov         r3, #1, 24
  00760	e3833036	 orr         r3, r3, #0x36
  00764	e59f2070	 ldr         r2, [pc, #0x70]
  00768	e59f1068	 ldr         r1, [pc, #0x68]
  0076c	e59f0060	 ldr         r0, [pc, #0x60]
  00770	eb000000	 bl          NKDbgPrintfW
  00774	e6000010	 __debugbreak_ce
  00778	e3a03000	 mov         r3, #0
  0077c	e58d3000	 str         r3, [sp]
  00780		 |$LN5@DecrCountd@2|

; 311  :     if (--count == 0)

  00780	e59d300c	 ldr         r3, [sp, #0xC]
  00784	e283301c	 add         r3, r3, #0x1C
  00788	e5933000	 ldr         r3, [r3]
  0078c	e2432001	 sub         r2, r3, #1
  00790	e59d300c	 ldr         r3, [sp, #0xC]
  00794	e283301c	 add         r3, r3, #0x1C
  00798	e5832000	 str         r2, [r3]
  0079c	e59d300c	 ldr         r3, [sp, #0xC]
  007a0	e283301c	 add         r3, r3, #0x1C
  007a4	e5933000	 ldr         r3, [r3]
  007a8	e3530000	 cmp         r3, #0
  007ac	1a000003	 bne         |$LN1@DecrCountd@2|

; 312  :         SetEvent(hev);

  007b0	e59d300c	 ldr         r3, [sp, #0xC]
  007b4	e2833014	 add         r3, r3, #0x14
  007b8	e5930000	 ldr         r0, [r3]
  007bc	eb000000	 bl          SetEvent
  007c0		 |$LN1@DecrCountd@2|

; 313  :     LeaveCriticalSection(&cs);

  007c0	e59d000c	 ldr         r0, [sp, #0xC]
  007c4	eb000000	 bl          LeaveCriticalSection

; 314  : }

  007c8	e28dd004	 add         sp, sp, #4
  007cc	e89d6000	 ldmia       sp, {sp, lr}
  007d0	e12fff1e	 bx          lr
  007d4		 |$LN9@DecrCountd@2|
  007d4		 |$LN10@DecrCountd@2|
  007d4	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  007d8		 |$LN11@DecrCountd@2|
  007d8	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  007dc		 |$LN12@DecrCountd@2|
  007dc	00000000	 DCD         |??_C@_1KE@MMKLMOBM@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  007e0		 |$M33742|

			 ENDP  ; |?DecrCountdown@Countdown@@QAAXXZ|, Countdown::DecrCountdown

	EXPORT	|?LockCountdown@Countdown@@AAAXXZ|	; Countdown::LockCountdown

  00048			 AREA	 |.pdata|, PDATA
|$T33753| DCD	|$LN5@LockCountd|
	DCD	0x40000d03
; Function compile flags: /Odtp

  007e0			 AREA	 |.text|, CODE, ARM

  007e0		 |?LockCountdown@Countdown@@AAAXXZ| PROC ; Countdown::LockCountdown

; 317  : {

  007e0		 |$LN5@LockCountd|
  007e0	e1a0c00d	 mov         r12, sp
  007e4	e92d0001	 stmdb       sp!, {r0}
  007e8	e92d5000	 stmdb       sp!, {r12, lr}
  007ec		 |$M33750|

; 318  :     EnterCriticalSection(&cs);

  007ec	e59d0008	 ldr         r0, [sp, #8]
  007f0	eb000000	 bl          EnterCriticalSection

; 319  :     lock = TRUE;

  007f4	e59d3008	 ldr         r3, [sp, #8]
  007f8	e2832018	 add         r2, r3, #0x18
  007fc	e3a03001	 mov         r3, #1
  00800	e5823000	 str         r3, [r2]

; 320  :     LeaveCriticalSection(&cs);

  00804	e59d0008	 ldr         r0, [sp, #8]
  00808	eb000000	 bl          LeaveCriticalSection

; 321  : }

  0080c	e89d6000	 ldmia       sp, {sp, lr}
  00810	e12fff1e	 bx          lr
  00814		 |$M33751|

			 ENDP  ; |?LockCountdown@Countdown@@AAAXXZ|, Countdown::LockCountdown

	EXPORT	|?WaitForCountdown@Countdown@@QAAXH@Z|	; Countdown::WaitForCountdown

  00050			 AREA	 |.pdata|, PDATA
|$T33760| DCD	|$LN7@WaitForCou|
	DCD	0x40002604
; Function compile flags: /Odtp

  00814			 AREA	 |.text|, CODE, ARM

  00814		 |?WaitForCountdown@Countdown@@QAAXH@Z| PROC ; Countdown::WaitForCountdown

; 325  : {

  00814		 |$LN7@WaitForCou|
  00814	e1a0c00d	 mov         r12, sp
  00818	e92d0003	 stmdb       sp!, {r0, r1}
  0081c	e92d5000	 stmdb       sp!, {r12, lr}
  00820	e24dd004	 sub         sp, sp, #4
  00824		 |$M33757|

; 326  :     LockCountdown();

  00824	e59d000c	 ldr         r0, [sp, #0xC]
  00828	eb000000	 bl          |?LockCountdown@Countdown@@AAAXXZ|

; 327  :     
; 328  :     WaitForSingleObject(hev, INFINITE);

  0082c	e3e01000	 mvn         r1, #0
  00830	e59d300c	 ldr         r3, [sp, #0xC]
  00834	e2833014	 add         r3, r3, #0x14
  00838	e5930000	 ldr         r0, [r3]
  0083c	eb000000	 bl          WaitForSingleObject

; 329  :     ASSERT(count == 0);

  00840	e59d300c	 ldr         r3, [sp, #0xC]
  00844	e283301c	 add         r3, r3, #0x1C
  00848	e5933000	 ldr         r3, [r3]
  0084c	e3530000	 cmp         r3, #0
  00850	1a000002	 bne         |$LN3@WaitForCou|
  00854	e3a03001	 mov         r3, #1
  00858	e58d3000	 str         r3, [sp]
  0085c	ea000008	 b           |$LN4@WaitForCou|
  00860		 |$LN3@WaitForCou|
  00860	e3a03c01	 mov         r3, #1, 24
  00864	e3833049	 orr         r3, r3, #0x49
  00868	e59f2038	 ldr         r2, [pc, #0x38]
  0086c	e59f1030	 ldr         r1, [pc, #0x30]
  00870	e59f0028	 ldr         r0, [pc, #0x28]
  00874	eb000000	 bl          NKDbgPrintfW
  00878	e6000010	 __debugbreak_ce
  0087c	e3a03000	 mov         r3, #0
  00880	e58d3000	 str         r3, [sp]
  00884		 |$LN4@WaitForCou|

; 330  : 
; 331  :     lock = keepLocked;

  00884	e59d300c	 ldr         r3, [sp, #0xC]
  00888	e2832018	 add         r2, r3, #0x18
  0088c	e59d3010	 ldr         r3, [sp, #0x10]
  00890	e5823000	 str         r3, [r2]

; 332  : }

  00894	e28dd004	 add         sp, sp, #4
  00898	e89d6000	 ldmia       sp, {sp, lr}
  0089c	e12fff1e	 bx          lr
  008a0		 |$LN8@WaitForCou|
  008a0		 |$LN9@WaitForCou|
  008a0	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  008a4		 |$LN10@WaitForCou|
  008a4	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  008a8		 |$LN11@WaitForCou|
  008a8	00000000	 DCD         |??_C@_1KE@MMKLMOBM@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  008ac		 |$M33758|

			 ENDP  ; |?WaitForCountdown@Countdown@@QAAXH@Z|, Countdown::WaitForCountdown

	EXPORT	|??1Countdown@@QAA@XZ|			; Countdown::~Countdown

  00058			 AREA	 |.pdata|, PDATA
|$T33769| DCD	|$LN5@Countdown@2|
	DCD	0x40000e03
; Function compile flags: /Odtp

  008ac			 AREA	 |.text|, CODE, ARM

  008ac		 |??1Countdown@@QAA@XZ| PROC		; Countdown::~Countdown

; 335  : {

  008ac		 |$LN5@Countdown@2|
  008ac	e1a0c00d	 mov         r12, sp
  008b0	e92d0001	 stmdb       sp!, {r0}
  008b4	e92d5000	 stmdb       sp!, {r12, lr}
  008b8		 |$M33766|

; 336  :     WaitForCountdown( TRUE);

  008b8	e3a01001	 mov         r1, #1
  008bc	e59d0008	 ldr         r0, [sp, #8]
  008c0	eb000000	 bl          |?WaitForCountdown@Countdown@@QAAXH@Z|

; 337  : 
; 338  :     CloseHandle(hev);

  008c4	e59d3008	 ldr         r3, [sp, #8]
  008c8	e2833014	 add         r3, r3, #0x14
  008cc	e5930000	 ldr         r0, [r3]
  008d0	eb000000	 bl          CloseHandle

; 339  :     DeleteCriticalSection(&cs);

  008d4	e59d0008	 ldr         r0, [sp, #8]
  008d8	eb000000	 bl          DeleteCriticalSection

; 340  : }

  008dc	e89d6000	 ldmia       sp, {sp, lr}
  008e0	e12fff1e	 bx          lr
  008e4		 |$M33767|

			 ENDP  ; |??1Countdown@@QAA@XZ|, Countdown::~Countdown

	END
