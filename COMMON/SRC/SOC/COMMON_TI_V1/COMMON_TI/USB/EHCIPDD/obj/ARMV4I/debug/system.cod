; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\USB\EHCIPDD\system.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1BE@EKANOLAD@?$AAD?$AAV?$AAF?$AAS?$AAO?$AAr?$AAd?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@KPOFJNCO@?$AAP?$AAo?$AAr?$AAt?$AA3?$AAP?$AAw?$AAr?$AAL?$AAe?$AAv?$AAe?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@MKICKGGI@?$AAP?$AAo?$AAr?$AAt?$AA2?$AAP?$AAw?$AAr?$AAL?$AAe?$AAv?$AAe?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@GFCLOLKC@?$AAP?$AAo?$AAr?$AAt?$AA1?$AAP?$AAw?$AAr?$AAL?$AAe?$AAv?$AAe?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@LKINDMOC@?$AAP?$AAo?$AAr?$AAt?$AA3?$AAR?$AAs?$AAt?$AAG?$AAp?$AAi?$AAo?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@FFNPIKAD@?$AAP?$AAo?$AAr?$AAt?$AA2?$AAR?$AAs?$AAt?$AAG?$AAp?$AAi?$AAo?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@LPFJFHGB@?$AAP?$AAo?$AAr?$AAt?$AA1?$AAR?$AAs?$AAt?$AAG?$AAp?$AAi?$AAo?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@MLLMDDHK@?$AAP?$AAo?$AAr?$AAt?$AA3?$AAP?$AAw?$AAr?$AAG?$AAp?$AAi?$AAo?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@CEOOIFJL@?$AAP?$AAo?$AAr?$AAt?$AA2?$AAP?$AAw?$AAr?$AAG?$AAp?$AAi?$AAo?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@MOGIFIPJ@?$AAP?$AAo?$AAr?$AAt?$AA1?$AAP?$AAw?$AAr?$AAG?$AAp?$AAi?$AAo?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@BAADJND@?$AAP?$AAo?$AAr?$AAt?$AA3?$AAM?$AAo?$AAd?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@JKKFHFLM@?$AAP?$AAo?$AAr?$AAt?$AA2?$AAM?$AAo?$AAd?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@ONDLKHEM@?$AAP?$AAo?$AAr?$AAt?$AA1?$AAM?$AAo?$AAd?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@BCHLEGNP@?$AAB?$AAu?$AAs?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@LBBNFMDB@?$AAM?$AAe?$AAm?$AAL?$AAe?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@INLDIDEN@?$AAM?$AAe?$AAm?$AAB?$AAa?$AAs?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|g_fOmapEhciSuspended| [ DATA ]

  00000			 AREA	 |.bss|, NOINIT
|g_fOmapEhciSuspended| % 0x4

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@EKANOLAD@?$AAD?$AAV?$AAF?$AAS?$AAO?$AAr?$AAd?$AAe?$AAr?$AA?$AA@| DCB "D"
	DCB	0x0, "V", 0x0, "F", 0x0, "S", 0x0, "O", 0x0, "r", 0x0, "d"
	DCB	0x0, "e", 0x0, "r", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@KPOFJNCO@?$AAP?$AAo?$AAr?$AAt?$AA3?$AAP?$AAw?$AAr?$AAL?$AAe?$AAv?$AAe?$AAl?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "r", 0x0, "t", 0x0, "3", 0x0, "P", 0x0, "w"
	DCB	0x0, "r", 0x0, "L", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, "l"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@MKICKGGI@?$AAP?$AAo?$AAr?$AAt?$AA2?$AAP?$AAw?$AAr?$AAL?$AAe?$AAv?$AAe?$AAl?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "r", 0x0, "t", 0x0, "2", 0x0, "P", 0x0, "w"
	DCB	0x0, "r", 0x0, "L", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, "l"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@GFCLOLKC@?$AAP?$AAo?$AAr?$AAt?$AA1?$AAP?$AAw?$AAr?$AAL?$AAe?$AAv?$AAe?$AAl?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "r", 0x0, "t", 0x0, "1", 0x0, "P", 0x0, "w"
	DCB	0x0, "r", 0x0, "L", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, "l"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@LKINDMOC@?$AAP?$AAo?$AAr?$AAt?$AA3?$AAR?$AAs?$AAt?$AAG?$AAp?$AAi?$AAo?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "r", 0x0, "t", 0x0, "3", 0x0, "R", 0x0, "s"
	DCB	0x0, "t", 0x0, "G", 0x0, "p", 0x0, "i", 0x0, "o", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@FFNPIKAD@?$AAP?$AAo?$AAr?$AAt?$AA2?$AAR?$AAs?$AAt?$AAG?$AAp?$AAi?$AAo?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "r", 0x0, "t", 0x0, "2", 0x0, "R", 0x0, "s"
	DCB	0x0, "t", 0x0, "G", 0x0, "p", 0x0, "i", 0x0, "o", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@LPFJFHGB@?$AAP?$AAo?$AAr?$AAt?$AA1?$AAR?$AAs?$AAt?$AAG?$AAp?$AAi?$AAo?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "r", 0x0, "t", 0x0, "1", 0x0, "R", 0x0, "s"
	DCB	0x0, "t", 0x0, "G", 0x0, "p", 0x0, "i", 0x0, "o", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@MLLMDDHK@?$AAP?$AAo?$AAr?$AAt?$AA3?$AAP?$AAw?$AAr?$AAG?$AAp?$AAi?$AAo?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "r", 0x0, "t", 0x0, "3", 0x0, "P", 0x0, "w"
	DCB	0x0, "r", 0x0, "G", 0x0, "p", 0x0, "i", 0x0, "o", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@CEOOIFJL@?$AAP?$AAo?$AAr?$AAt?$AA2?$AAP?$AAw?$AAr?$AAG?$AAp?$AAi?$AAo?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "r", 0x0, "t", 0x0, "2", 0x0, "P", 0x0, "w"
	DCB	0x0, "r", 0x0, "G", 0x0, "p", 0x0, "i", 0x0, "o", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@MOGIFIPJ@?$AAP?$AAo?$AAr?$AAt?$AA1?$AAP?$AAw?$AAr?$AAG?$AAp?$AAi?$AAo?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "r", 0x0, "t", 0x0, "1", 0x0, "P", 0x0, "w"
	DCB	0x0, "r", 0x0, "G", 0x0, "p", 0x0, "i", 0x0, "o", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@BAADJND@?$AAP?$AAo?$AAr?$AAt?$AA3?$AAM?$AAo?$AAd?$AAe?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "r", 0x0, "t", 0x0, "3", 0x0, "M", 0x0, "o"
	DCB	0x0, "d", 0x0, "e", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@JKKFHFLM@?$AAP?$AAo?$AAr?$AAt?$AA2?$AAM?$AAo?$AAd?$AAe?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "r", 0x0, "t", 0x0, "2", 0x0, "M", 0x0, "o"
	DCB	0x0, "d", 0x0, "e", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@ONDLKHEM@?$AAP?$AAo?$AAr?$AAt?$AA1?$AAM?$AAo?$AAd?$AAe?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "r", 0x0, "t", 0x0, "1", 0x0, "M", 0x0, "o"
	DCB	0x0, "d", 0x0, "e", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@BCHLEGNP@?$AAB?$AAu?$AAs?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?$AA@| DCB "B"
	DCB	0x0, "u", 0x0, "s", 0x0, "S", 0x0, "u", 0x0, "s", 0x0, "p"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "R", 0x0, "e", 0x0, "s"
	DCB	0x0, "u", 0x0, "m", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@LBBNFMDB@?$AAM?$AAe?$AAm?$AAL?$AAe?$AAn?$AA?$AA@| DCB "M", 0x0, "e"
	DCB	0x0, "m", 0x0, "L", 0x0, "e", 0x0, "n", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@INLDIDEN@?$AAM?$AAe?$AAm?$AAB?$AAa?$AAs?$AAe?$AA?$AA@| DCB "M", 0x0
	DCB	"e", 0x0, "m", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
|g_deviceRegParams| DCD |??_C@_1BA@INLDIDEN@?$AAM?$AAe?$AAm?$AAB?$AAa?$AAs?$AAe?$AA?$AA@|
	DCD	0x1
	DCD	0x1
	DCD	0x0
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1O@LBBNFMDB@?$AAM?$AAe?$AAm?$AAL?$AAe?$AAn?$AA?$AA@|
	DCD	0x1
	DCD	0x1
	DCD	0x4
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1CC@BCHLEGNP@?$AAB?$AAu?$AAs?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x8
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1BE@ONDLKHEM@?$AAP?$AAo?$AAr?$AAt?$AA1?$AAM?$AAo?$AAd?$AAe?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x260
	DCD	0x4
	DCD	0x1
	DCD	|??_C@_1BE@JKKFHFLM@?$AAP?$AAo?$AAr?$AAt?$AA2?$AAM?$AAo?$AAd?$AAe?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x264
	DCD	0x4
	DCD	0x1
	DCD	|??_C@_1BE@BAADJND@?$AAP?$AAo?$AAr?$AAt?$AA3?$AAM?$AAo?$AAd?$AAe?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x268
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1BK@MOGIFIPJ@?$AAP?$AAo?$AAr?$AAt?$AA1?$AAP?$AAw?$AAr?$AAG?$AAp?$AAi?$AAo?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x26c
	DCD	0x4
	DCD	0xffffffff
	DCD	|??_C@_1BK@CEOOIFJL@?$AAP?$AAo?$AAr?$AAt?$AA2?$AAP?$AAw?$AAr?$AAG?$AAp?$AAi?$AAo?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x270
	DCD	0x4
	DCD	0xffffffff
	DCD	|??_C@_1BK@MLLMDDHK@?$AAP?$AAo?$AAr?$AAt?$AA3?$AAP?$AAw?$AAr?$AAG?$AAp?$AAi?$AAo?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x274
	DCD	0x4
	DCD	0xffffffff
	DCD	|??_C@_1BK@LPFJFHGB@?$AAP?$AAo?$AAr?$AAt?$AA1?$AAR?$AAs?$AAt?$AAG?$AAp?$AAi?$AAo?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x278
	DCD	0x4
	DCD	0xffffffff
	DCD	|??_C@_1BK@FFNPIKAD@?$AAP?$AAo?$AAr?$AAt?$AA2?$AAR?$AAs?$AAt?$AAG?$AAp?$AAi?$AAo?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x27c
	DCD	0x4
	DCD	0xffffffff
	DCD	|??_C@_1BK@LKINDMOC@?$AAP?$AAo?$AAr?$AAt?$AA3?$AAR?$AAs?$AAt?$AAG?$AAp?$AAi?$AAo?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x280
	DCD	0x4
	DCD	0xffffffff
	DCD	|??_C@_1BM@GFCLOLKC@?$AAP?$AAo?$AAr?$AAt?$AA1?$AAP?$AAw?$AAr?$AAL?$AAe?$AAv?$AAe?$AAl?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x284
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1BM@MKICKGGI@?$AAP?$AAo?$AAr?$AAt?$AA2?$AAP?$AAw?$AAr?$AAL?$AAe?$AAv?$AAe?$AAl?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x288
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1BM@KPOFJNCO@?$AAP?$AAo?$AAr?$AAt?$AA3?$AAP?$AAw?$AAr?$AAL?$AAe?$AAv?$AAe?$AAl?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x28c
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1BE@EKANOLAD@?$AAD?$AAV?$AAF?$AAS?$AAO?$AAr?$AAd?$AAe?$AAr?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x2c4
	DCD	0x4
	DCD	0x96
	EXPORT	|DelayMilliSeconds|
	IMPORT	|Sleep|
	IMPORT	|GetTickCount|

  00000			 AREA	 |.pdata|, PDATA
|$T45492| DCD	|$LN9@DelayMilli|
	DCD	0x40001b04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\usb\ehcipdd\system.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DelayMilliSeconds| PROC

; 164  : {

  00000		 |$LN9@DelayMilli|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M45489|

; 165  :     if (bInPowerHandler)

  00010	e59d3018	 ldr         r3, [sp, #0x18]
  00014	e3530000	 cmp         r3, #0
  00018	0a00000e	 beq         |$LN4@DelayMilli|

; 166  :     {
; 167  :         DWORD StartingTickCount;
; 168  : 
; 169  :         StartingTickCount = GetTickCount();

  0001c	eb000000	 bl          GetTickCount
  00020	e58d0004	 str         r0, [sp, #4]
  00024	e59d3004	 ldr         r3, [sp, #4]
  00028	e58d3000	 str         r3, [sp]
  0002c		 |$LN3@DelayMilli|

; 170  :         while (GetTickCount() - StartingTickCount < dwMilliSeconds + 1)

  0002c	eb000000	 bl          GetTickCount
  00030	e58d0008	 str         r0, [sp, #8]
  00034	e59d2008	 ldr         r2, [sp, #8]
  00038	e59d3000	 ldr         r3, [sp]
  0003c	e0422003	 sub         r2, r2, r3
  00040	e59d3014	 ldr         r3, [sp, #0x14]
  00044	e2833001	 add         r3, r3, #1
  00048	e1520003	 cmp         r2, r3
  0004c	2a000000	 bcs         |$LN2@DelayMilli|

; 171  :         {
; 172  :         }

  00050	eafffff5	 b           |$LN3@DelayMilli|
  00054		 |$LN2@DelayMilli|

; 173  :     }
; 174  :     else

  00054	ea000001	 b           |$LN1@DelayMilli|
  00058		 |$LN4@DelayMilli|

; 175  :     {
; 176  :         Sleep(dwMilliSeconds);

  00058	e59d0014	 ldr         r0, [sp, #0x14]
  0005c	eb000000	 bl          Sleep
  00060		 |$LN1@DelayMilli|

; 177  :     }
; 178  : }

  00060	e28dd00c	 add         sp, sp, #0xC
  00064	e89d6000	 ldmia       sp, {sp, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$M45490|

			 ENDP  ; |DelayMilliSeconds|

	EXPORT	|EhciWriteReg|

  00008			 AREA	 |.pdata|, PDATA
|$T45497| DCD	|$LN5@EhciWriteR|
	DCD	0x40000e04
; Function compile flags: /Odtp

  0006c			 AREA	 |.text|, CODE, ARM

  0006c		 |EhciWriteReg| PROC

; 181  : {

  0006c		 |$LN5@EhciWriteR|
  0006c	e1a0c00d	 mov         r12, sp
  00070	e92d0007	 stmdb       sp!, {r0 - r2}
  00074	e92d5000	 stmdb       sp!, {r12, lr}
  00078	e24dd004	 sub         sp, sp, #4
  0007c		 |$M45494|

; 182  :     volatile DWORD * pEhciReg = (volatile DWORD *)(EhciRegBase + Offset);

  0007c	e59d200c	 ldr         r2, [sp, #0xC]
  00080	e59d3010	 ldr         r3, [sp, #0x10]
  00084	e0823003	 add         r3, r2, r3
  00088	e58d3000	 str         r3, [sp]

; 183  : 
; 184  :     *pEhciReg = Data;

  0008c	e59d2014	 ldr         r2, [sp, #0x14]
  00090	e59d3000	 ldr         r3, [sp]
  00094	e5832000	 str         r2, [r3]

; 185  : }

  00098	e28dd004	 add         sp, sp, #4
  0009c	e89d6000	 ldmia       sp, {sp, lr}
  000a0	e12fff1e	 bx          lr
  000a4		 |$M45495|

			 ENDP  ; |EhciWriteReg|

	EXPORT	|??_C@_1GC@HAPGDLPP@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAa?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAp?$AAo?$AAr?$AAt?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt@| [ DATA ] ; `string'
	EXPORT	|UlpiWriteReg|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|

  00010			 AREA	 |.pdata|, PDATA
|$T45504| DCD	|$LN10@UlpiWriteR|
	DCD	0x40002b04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@HAPGDLPP@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAa?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAp?$AAo?$AAr?$AAt?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, " ", 0x0, "U", 0x0, "L"
	DCB	0x0, "P", 0x0, "I", 0x0, " ", 0x0, "a", 0x0, "c", 0x0, "c"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, " ", 0x0, "p", 0x0, "o"
	DCB	0x0, "r", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  000a4			 AREA	 |.text|, CODE, ARM

  000a4		 |UlpiWriteReg| PROC

; 188  : {

  000a4		 |$LN10@UlpiWriteR|
  000a4	e1a0c00d	 mov         r12, sp
  000a8	e92d000f	 stmdb       sp!, {r0 - r3}
  000ac	e92d5000	 stmdb       sp!, {r12, lr}
  000b0	e24dd00c	 sub         sp, sp, #0xC
  000b4		 |$M45501|

; 189  :     volatile DWORD * pEhciUlpiAccess = (volatile DWORD *)(EhciRegBase + 0xa4);

  000b4	e59d3014	 ldr         r3, [sp, #0x14]
  000b8	e28330a4	 add         r3, r3, #0xA4
  000bc	e58d3004	 str         r3, [sp, #4]

; 190  :     DWORD ReadData;
; 191  : 
; 192  :     *pEhciUlpiAccess = START_WRITE_ULPI_DATA(Port, Register, Data);

  000c0	e59d3018	 ldr         r3, [sp, #0x18]
  000c4	e1a03c03	 mov         r3, r3, lsl #24
  000c8	e3833102	 orr         r3, r3, #2, 2
  000cc	e3832502	 orr         r2, r3, #2, 10
  000d0	e59d301c	 ldr         r3, [sp, #0x1C]
  000d4	e1a03803	 mov         r3, r3, lsl #16
  000d8	e1822003	 orr         r2, r2, r3
  000dc	e5dd3020	 ldrb        r3, [sp, #0x20]
  000e0	e1822003	 orr         r2, r2, r3
  000e4	e59d3004	 ldr         r3, [sp, #4]
  000e8	e5832000	 str         r2, [r3]
  000ec		 |$LN3@UlpiWriteR|

; 193  : 
; 194  :     // wait for register access done
; 195  :     do
; 196  :     {
; 197  :         ReadData = *pEhciUlpiAccess;

  000ec	e59d3004	 ldr         r3, [sp, #4]
  000f0	e5933000	 ldr         r3, [r3]
  000f4	e58d3000	 str         r3, [sp]

; 198  :         DEBUGMSG(ZONE_INFO, (TEXT("EHCI ULPI access port %d, register 0x%x = 0x%x\r\n"), Port, Register, ReadData));

  000f8	e59f304c	 ldr         r3, [pc, #0x4C]
  000fc	e5933440	 ldr         r3, [r3, #0x440]
  00100	e3130b01	 tst         r3, #1, 22
  00104	0a000007	 beq         |$LN6@UlpiWriteR|
  00108	e59d3000	 ldr         r3, [sp]
  0010c	e59d201c	 ldr         r2, [sp, #0x1C]
  00110	e59d1018	 ldr         r1, [sp, #0x18]
  00114	e59f002c	 ldr         r0, [pc, #0x2C]
  00118	eb000000	 bl          NKDbgPrintfW
  0011c	e3a03001	 mov         r3, #1
  00120	e58d3008	 str         r3, [sp, #8]
  00124	ea000001	 b           |$LN7@UlpiWriteR|
  00128		 |$LN6@UlpiWriteR|
  00128	e3a03000	 mov         r3, #0
  0012c	e58d3008	 str         r3, [sp, #8]
  00130		 |$LN7@UlpiWriteR|

; 199  :     }
; 200  :     while (ReadData & 0x80000000);

  00130	e59d3000	 ldr         r3, [sp]
  00134	e3130102	 tst         r3, #2, 2
  00138	1affffeb	 bne         |$LN3@UlpiWriteR|

; 201  : }

  0013c	e28dd00c	 add         sp, sp, #0xC
  00140	e89d6000	 ldmia       sp, {sp, lr}
  00144	e12fff1e	 bx          lr
  00148		 |$LN11@UlpiWriteR|
  00148		 |$LN12@UlpiWriteR|
  00148	00000000	 DCD         |??_C@_1GC@HAPGDLPP@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAa?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAp?$AAo?$AAr?$AAt?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt@|
  0014c		 |$LN13@UlpiWriteR|
  0014c	00000000	 DCD         |dpCurSettings|
  00150		 |$M45502|

			 ENDP  ; |UlpiWriteReg|

	EXPORT	|UlpiReadReg|

  00018			 AREA	 |.pdata|, PDATA
|$T45514| DCD	|$LN10@UlpiReadRe|
	DCD	0x40002d04
; Function compile flags: /Odtp

  00150			 AREA	 |.text|, CODE, ARM

  00150		 |UlpiReadReg| PROC

; 204  : {

  00150		 |$LN10@UlpiReadRe|
  00150	e1a0c00d	 mov         r12, sp
  00154	e92d000f	 stmdb       sp!, {r0 - r3}
  00158	e92d5000	 stmdb       sp!, {r12, lr}
  0015c	e24dd00c	 sub         sp, sp, #0xC
  00160		 |$M45511|

; 205  :     volatile DWORD * pEhciUlpiAccess = (volatile DWORD *)(EhciRegBase + 0xa4);

  00160	e59d3014	 ldr         r3, [sp, #0x14]
  00164	e28330a4	 add         r3, r3, #0xA4
  00168	e58d3004	 str         r3, [sp, #4]

; 206  :     DWORD ReadData;
; 207  : 
; 208  :     *pEhciUlpiAccess = START_READ_ULPI_DATA(Port, Register);

  0016c	e59d3018	 ldr         r3, [sp, #0x18]
  00170	e1a03c03	 mov         r3, r3, lsl #24
  00174	e3833102	 orr         r3, r3, #2, 2
  00178	e3832503	 orr         r2, r3, #3, 10
  0017c	e59d301c	 ldr         r3, [sp, #0x1C]
  00180	e1a03803	 mov         r3, r3, lsl #16
  00184	e1822003	 orr         r2, r2, r3
  00188	e59d3004	 ldr         r3, [sp, #4]
  0018c	e5832000	 str         r2, [r3]
  00190		 |$LN3@UlpiReadRe|

; 209  : 
; 210  :     // wait for register access done
; 211  :     do
; 212  :     {
; 213  :         ReadData = *pEhciUlpiAccess;

  00190	e59d3004	 ldr         r3, [sp, #4]
  00194	e5933000	 ldr         r3, [r3]
  00198	e58d3000	 str         r3, [sp]

; 214  :         DEBUGMSG(ZONE_INFO, (TEXT("EHCI ULPI access port %d, register 0x%x = 0x%x\r\n"), Port, Register, ReadData));

  0019c	e59f305c	 ldr         r3, [pc, #0x5C]
  001a0	e5933440	 ldr         r3, [r3, #0x440]
  001a4	e3130b01	 tst         r3, #1, 22
  001a8	0a000007	 beq         |$LN6@UlpiReadRe|
  001ac	e59d3000	 ldr         r3, [sp]
  001b0	e59d201c	 ldr         r2, [sp, #0x1C]
  001b4	e59d1018	 ldr         r1, [sp, #0x18]
  001b8	e59f003c	 ldr         r0, [pc, #0x3C]
  001bc	eb000000	 bl          NKDbgPrintfW
  001c0	e3a03001	 mov         r3, #1
  001c4	e58d3008	 str         r3, [sp, #8]
  001c8	ea000001	 b           |$LN7@UlpiReadRe|
  001cc		 |$LN6@UlpiReadRe|
  001cc	e3a03000	 mov         r3, #0
  001d0	e58d3008	 str         r3, [sp, #8]
  001d4		 |$LN7@UlpiReadRe|

; 215  :     }
; 216  :     while (ReadData & 0x80000000);

  001d4	e59d3000	 ldr         r3, [sp]
  001d8	e3130102	 tst         r3, #2, 2
  001dc	1affffeb	 bne         |$LN3@UlpiReadRe|

; 217  : 
; 218  :     *pData = (BYTE)ReadData;

  001e0	e59d3000	 ldr         r3, [sp]
  001e4	e20320ff	 and         r2, r3, #0xFF
  001e8	e59d3020	 ldr         r3, [sp, #0x20]
  001ec	e5c32000	 strb        r2, [r3]

; 219  : }

  001f0	e28dd00c	 add         sp, sp, #0xC
  001f4	e89d6000	 ldmia       sp, {sp, lr}
  001f8	e12fff1e	 bx          lr
  001fc		 |$LN11@UlpiReadRe|
  001fc		 |$LN12@UlpiReadRe|
  001fc	00000000	 DCD         |??_C@_1GC@HAPGDLPP@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AAU?$AAL?$AAP?$AAI?$AA?5?$AAa?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?5?$AAp?$AAo?$AAr?$AAt?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt@|
  00200		 |$LN13@UlpiReadRe|
  00200	00000000	 DCD         |dpCurSettings|
  00204		 |$M45512|

			 ENDP  ; |UlpiReadReg|

	EXPORT	|PHY_AssertReset|
	IMPORT	|GPIOClrBit|

  00020			 AREA	 |.pdata|, PDATA
|$T45523| DCD	|$LN8@PHY_Assert|
	DCD	0x40003104
; Function compile flags: /Odtp

  00204			 AREA	 |.text|, CODE, ARM

  00204		 |PHY_AssertReset| PROC

; 222  : {

  00204		 |$LN8@PHY_Assert|
  00204	e1a0c00d	 mov         r12, sp
  00208	e92d0003	 stmdb       sp!, {r0, r1}
  0020c	e92d5000	 stmdb       sp!, {r12, lr}
  00210	e24dd004	 sub         sp, sp, #4
  00214		 |$M45520|

; 223  : 	if (pPddObject->Port1RstGpio != -1)

  00214	e59d300c	 ldr         r3, [sp, #0xC]
  00218	e2833f9e	 add         r3, r3, #0x9E, 30
  0021c	e5933000	 ldr         r3, [r3]
  00220	e3730001	 cmn         r3, #1
  00224	0a000006	 beq         |$LN3@PHY_Assert|

; 224  : 	{
; 225  : 		GPIOClrBit(pPddObject->hGpio, pPddObject->Port1RstGpio);

  00228	e59d300c	 ldr         r3, [sp, #0xC]
  0022c	e2833f9e	 add         r3, r3, #0x9E, 30
  00230	e5931000	 ldr         r1, [r3]
  00234	e59d300c	 ldr         r3, [sp, #0xC]
  00238	e2833e29	 add         r3, r3, #0x29, 28
  0023c	e5930000	 ldr         r0, [r3]
  00240	eb000000	 bl          GPIOClrBit
  00244		 |$LN3@PHY_Assert|

; 226  : 	}
; 227  : 
; 228  : 	if (pPddObject->Port2RstGpio != -1)

  00244	e59d300c	 ldr         r3, [sp, #0xC]
  00248	e2833f9f	 add         r3, r3, #0x9F, 30
  0024c	e5933000	 ldr         r3, [r3]
  00250	e3730001	 cmn         r3, #1
  00254	0a000006	 beq         |$LN2@PHY_Assert|

; 229  : 	{
; 230  : 		GPIOClrBit(pPddObject->hGpio, pPddObject->Port2RstGpio);

  00258	e59d300c	 ldr         r3, [sp, #0xC]
  0025c	e2833f9f	 add         r3, r3, #0x9F, 30
  00260	e5931000	 ldr         r1, [r3]
  00264	e59d300c	 ldr         r3, [sp, #0xC]
  00268	e2833e29	 add         r3, r3, #0x29, 28
  0026c	e5930000	 ldr         r0, [r3]
  00270	eb000000	 bl          GPIOClrBit
  00274		 |$LN2@PHY_Assert|

; 231  : 	}
; 232  : 
; 233  : 	if (pPddObject->Port3RstGpio != -1)

  00274	e59d300c	 ldr         r3, [sp, #0xC]
  00278	e2833d0a	 add         r3, r3, #0xA, 26
  0027c	e5933000	 ldr         r3, [r3]
  00280	e3730001	 cmn         r3, #1
  00284	0a000006	 beq         |$LN1@PHY_Assert|

; 234  : 	{
; 235  : 		GPIOClrBit(pPddObject->hGpio, pPddObject->Port3RstGpio);

  00288	e59d300c	 ldr         r3, [sp, #0xC]
  0028c	e2833d0a	 add         r3, r3, #0xA, 26
  00290	e5931000	 ldr         r1, [r3]
  00294	e59d300c	 ldr         r3, [sp, #0xC]
  00298	e2833e29	 add         r3, r3, #0x29, 28
  0029c	e5930000	 ldr         r0, [r3]
  002a0	eb000000	 bl          GPIOClrBit
  002a4		 |$LN1@PHY_Assert|

; 236  : 	}
; 237  : 
; 238  :     DelayMilliSeconds(10, bCalledFromPowerUp);

  002a4	e59d1010	 ldr         r1, [sp, #0x10]
  002a8	e3a0000a	 mov         r0, #0xA
  002ac	eb000000	 bl          DelayMilliSeconds

; 239  : 
; 240  :     return TRUE;

  002b0	e3a03001	 mov         r3, #1
  002b4	e58d3000	 str         r3, [sp]

; 241  : }

  002b8	e59d0000	 ldr         r0, [sp]
  002bc	e28dd004	 add         sp, sp, #4
  002c0	e89d6000	 ldmia       sp, {sp, lr}
  002c4	e12fff1e	 bx          lr
  002c8		 |$M45521|

			 ENDP  ; |PHY_AssertReset|

	EXPORT	|PHY_DeassertReset|
	IMPORT	|GPIOSetBit|

  00028			 AREA	 |.pdata|, PDATA
|$T45529| DCD	|$LN8@PHY_Deasse|
	DCD	0x40002e04
; Function compile flags: /Odtp

  002c8			 AREA	 |.text|, CODE, ARM

  002c8		 |PHY_DeassertReset| PROC

; 244  : {

  002c8		 |$LN8@PHY_Deasse|
  002c8	e1a0c00d	 mov         r12, sp
  002cc	e92d0001	 stmdb       sp!, {r0}
  002d0	e92d5000	 stmdb       sp!, {r12, lr}
  002d4	e24dd004	 sub         sp, sp, #4
  002d8		 |$M45526|

; 245  : 	if (pPddObject->Port1RstGpio != -1)

  002d8	e59d300c	 ldr         r3, [sp, #0xC]
  002dc	e2833f9e	 add         r3, r3, #0x9E, 30
  002e0	e5933000	 ldr         r3, [r3]
  002e4	e3730001	 cmn         r3, #1
  002e8	0a000006	 beq         |$LN3@PHY_Deasse|

; 246  : 	{
; 247  : 		GPIOSetBit(pPddObject->hGpio, pPddObject->Port1RstGpio);

  002ec	e59d300c	 ldr         r3, [sp, #0xC]
  002f0	e2833f9e	 add         r3, r3, #0x9E, 30
  002f4	e5931000	 ldr         r1, [r3]
  002f8	e59d300c	 ldr         r3, [sp, #0xC]
  002fc	e2833e29	 add         r3, r3, #0x29, 28
  00300	e5930000	 ldr         r0, [r3]
  00304	eb000000	 bl          GPIOSetBit
  00308		 |$LN3@PHY_Deasse|

; 248  : 	}
; 249  : 
; 250  : 	if (pPddObject->Port2RstGpio != -1)

  00308	e59d300c	 ldr         r3, [sp, #0xC]
  0030c	e2833f9f	 add         r3, r3, #0x9F, 30
  00310	e5933000	 ldr         r3, [r3]
  00314	e3730001	 cmn         r3, #1
  00318	0a000006	 beq         |$LN2@PHY_Deasse|

; 251  : 	{
; 252  : 		GPIOSetBit(pPddObject->hGpio, pPddObject->Port2RstGpio);

  0031c	e59d300c	 ldr         r3, [sp, #0xC]
  00320	e2833f9f	 add         r3, r3, #0x9F, 30
  00324	e5931000	 ldr         r1, [r3]
  00328	e59d300c	 ldr         r3, [sp, #0xC]
  0032c	e2833e29	 add         r3, r3, #0x29, 28
  00330	e5930000	 ldr         r0, [r3]
  00334	eb000000	 bl          GPIOSetBit
  00338		 |$LN2@PHY_Deasse|

; 253  : 	}
; 254  : 
; 255  : 	if (pPddObject->Port3RstGpio != -1)

  00338	e59d300c	 ldr         r3, [sp, #0xC]
  0033c	e2833d0a	 add         r3, r3, #0xA, 26
  00340	e5933000	 ldr         r3, [r3]
  00344	e3730001	 cmn         r3, #1
  00348	0a000006	 beq         |$LN1@PHY_Deasse|

; 256  : 	{
; 257  : 		GPIOSetBit(pPddObject->hGpio, pPddObject->Port3RstGpio);

  0034c	e59d300c	 ldr         r3, [sp, #0xC]
  00350	e2833d0a	 add         r3, r3, #0xA, 26
  00354	e5931000	 ldr         r1, [r3]
  00358	e59d300c	 ldr         r3, [sp, #0xC]
  0035c	e2833e29	 add         r3, r3, #0x29, 28
  00360	e5930000	 ldr         r0, [r3]
  00364	eb000000	 bl          GPIOSetBit
  00368		 |$LN1@PHY_Deasse|

; 258  : 	}
; 259  : 
; 260  :     return TRUE;

  00368	e3a03001	 mov         r3, #1
  0036c	e58d3000	 str         r3, [sp]

; 261  : }

  00370	e59d0000	 ldr         r0, [sp]
  00374	e28dd004	 add         sp, sp, #4
  00378	e89d6000	 ldmia       sp, {sp, lr}
  0037c	e12fff1e	 bx          lr
  00380		 |$M45527|

			 ENDP  ; |PHY_DeassertReset|

	EXPORT	|TLLDevice_AssertReset|

  00030			 AREA	 |.pdata|, PDATA
|$T45535| DCD	|$LN5@TLLDevice_|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00380			 AREA	 |.text|, CODE, ARM

  00380		 |TLLDevice_AssertReset| PROC

; 264  : {

  00380		 |$LN5@TLLDevice_|
  00380	e1a0c00d	 mov         r12, sp
  00384	e92d0001	 stmdb       sp!, {r0}
  00388	e92d5000	 stmdb       sp!, {r12, lr}
  0038c	e24dd004	 sub         sp, sp, #4
  00390		 |$M45532|

; 265  : 	UNREFERENCED_PARAMETER(pPddObject);
; 266  : 
; 267  :     return TRUE;

  00390	e3a03001	 mov         r3, #1
  00394	e58d3000	 str         r3, [sp]

; 268  : }

  00398	e59d0000	 ldr         r0, [sp]
  0039c	e28dd004	 add         sp, sp, #4
  003a0	e89d6000	 ldmia       sp, {sp, lr}
  003a4	e12fff1e	 bx          lr
  003a8		 |$M45533|

			 ENDP  ; |TLLDevice_AssertReset|

	EXPORT	|TLLDevice_DeassertReset|

  00038			 AREA	 |.pdata|, PDATA
|$T45541| DCD	|$LN5@TLLDevice_@2|
	DCD	0x40000a04
; Function compile flags: /Odtp

  003a8			 AREA	 |.text|, CODE, ARM

  003a8		 |TLLDevice_DeassertReset| PROC

; 271  : {

  003a8		 |$LN5@TLLDevice_@2|
  003a8	e1a0c00d	 mov         r12, sp
  003ac	e92d0001	 stmdb       sp!, {r0}
  003b0	e92d5000	 stmdb       sp!, {r12, lr}
  003b4	e24dd004	 sub         sp, sp, #4
  003b8		 |$M45538|

; 272  : 	UNREFERENCED_PARAMETER(pPddObject);
; 273  : 
; 274  :     return TRUE;

  003b8	e3a03001	 mov         r3, #1
  003bc	e58d3000	 str         r3, [sp]

; 275  : }

  003c0	e59d0000	 ldr         r0, [sp]
  003c4	e28dd004	 add         sp, sp, #4
  003c8	e89d6000	 ldmia       sp, {sp, lr}
  003cc	e12fff1e	 bx          lr
  003d0		 |$M45539|

			 ENDP  ; |TLLDevice_DeassertReset|

	EXPORT	|ExternalDeviceAssertReset|

  00040			 AREA	 |.pdata|, PDATA
|$T45546| DCD	|$LN9@ExternalDe|
	DCD	0x40002803
; Function compile flags: /Odtp

  003d0			 AREA	 |.text|, CODE, ARM

  003d0		 |ExternalDeviceAssertReset| PROC

; 278  : {

  003d0		 |$LN9@ExternalDe|
  003d0	e1a0c00d	 mov         r12, sp
  003d4	e92d0003	 stmdb       sp!, {r0, r1}
  003d8	e92d5000	 stmdb       sp!, {r12, lr}
  003dc		 |$M45543|

; 279  :     if ((pPddObject->port1Mode == USB_PORT_TLL_MODE) ||
; 280  :         (pPddObject->port2Mode == USB_PORT_TLL_MODE) ||
; 281  :         (pPddObject->port3Mode == USB_PORT_TLL_MODE))

  003dc	e59d3008	 ldr         r3, [sp, #8]
  003e0	e2833e26	 add         r3, r3, #0x26, 28
  003e4	e5933000	 ldr         r3, [r3]
  003e8	e3530002	 cmp         r3, #2
  003ec	0a000009	 beq         |$LN3@ExternalDe|
  003f0	e59d3008	 ldr         r3, [sp, #8]
  003f4	e2833f99	 add         r3, r3, #0x99, 30
  003f8	e5933000	 ldr         r3, [r3]
  003fc	e3530002	 cmp         r3, #2
  00400	0a000004	 beq         |$LN3@ExternalDe|
  00404	e59d3008	 ldr         r3, [sp, #8]
  00408	e2833f9a	 add         r3, r3, #0x9A, 30
  0040c	e5933000	 ldr         r3, [r3]
  00410	e3530002	 cmp         r3, #2
  00414	1a000001	 bne         |$LN4@ExternalDe|
  00418		 |$LN3@ExternalDe|

; 282  :     {
; 283  :        TLLDevice_AssertReset(pPddObject);

  00418	e59d0008	 ldr         r0, [sp, #8]
  0041c	eb000000	 bl          TLLDevice_AssertReset
  00420		 |$LN4@ExternalDe|

; 284  :     }
; 285  : 
; 286  :     if ((pPddObject->port1Mode == USB_PORT_PHY_MODE) ||
; 287  :         (pPddObject->port2Mode == USB_PORT_PHY_MODE) ||
; 288  :         (pPddObject->port3Mode == USB_PORT_PHY_MODE))

  00420	e59d3008	 ldr         r3, [sp, #8]
  00424	e2833e26	 add         r3, r3, #0x26, 28
  00428	e5933000	 ldr         r3, [r3]
  0042c	e3530001	 cmp         r3, #1
  00430	0a000009	 beq         |$LN1@ExternalDe|
  00434	e59d3008	 ldr         r3, [sp, #8]
  00438	e2833f99	 add         r3, r3, #0x99, 30
  0043c	e5933000	 ldr         r3, [r3]
  00440	e3530001	 cmp         r3, #1
  00444	0a000004	 beq         |$LN1@ExternalDe|
  00448	e59d3008	 ldr         r3, [sp, #8]
  0044c	e2833f9a	 add         r3, r3, #0x9A, 30
  00450	e5933000	 ldr         r3, [r3]
  00454	e3530001	 cmp         r3, #1
  00458	1a000002	 bne         |$LN2@ExternalDe|
  0045c		 |$LN1@ExternalDe|

; 289  :     {
; 290  :        PHY_AssertReset(pPddObject, bCalledFromPowerUp);

  0045c	e59d100c	 ldr         r1, [sp, #0xC]
  00460	e59d0008	 ldr         r0, [sp, #8]
  00464	eb000000	 bl          PHY_AssertReset
  00468		 |$LN2@ExternalDe|

; 291  :     }
; 292  : }

  00468	e89d6000	 ldmia       sp, {sp, lr}
  0046c	e12fff1e	 bx          lr
  00470		 |$M45544|

			 ENDP  ; |ExternalDeviceAssertReset|

	EXPORT	|ExternalDeviceDeassertReset|

  00048			 AREA	 |.pdata|, PDATA
|$T45551| DCD	|$LN9@ExternalDe@2|
	DCD	0x40002703
; Function compile flags: /Odtp

  00470			 AREA	 |.text|, CODE, ARM

  00470		 |ExternalDeviceDeassertReset| PROC

; 295  : {

  00470		 |$LN9@ExternalDe@2|
  00470	e1a0c00d	 mov         r12, sp
  00474	e92d0001	 stmdb       sp!, {r0}
  00478	e92d5000	 stmdb       sp!, {r12, lr}
  0047c		 |$M45548|

; 296  :     if ((pPddObject->port1Mode == USB_PORT_TLL_MODE) ||
; 297  :         (pPddObject->port2Mode == USB_PORT_TLL_MODE) ||
; 298  :         (pPddObject->port3Mode == USB_PORT_TLL_MODE))

  0047c	e59d3008	 ldr         r3, [sp, #8]
  00480	e2833e26	 add         r3, r3, #0x26, 28
  00484	e5933000	 ldr         r3, [r3]
  00488	e3530002	 cmp         r3, #2
  0048c	0a000009	 beq         |$LN3@ExternalDe@2|
  00490	e59d3008	 ldr         r3, [sp, #8]
  00494	e2833f99	 add         r3, r3, #0x99, 30
  00498	e5933000	 ldr         r3, [r3]
  0049c	e3530002	 cmp         r3, #2
  004a0	0a000004	 beq         |$LN3@ExternalDe@2|
  004a4	e59d3008	 ldr         r3, [sp, #8]
  004a8	e2833f9a	 add         r3, r3, #0x9A, 30
  004ac	e5933000	 ldr         r3, [r3]
  004b0	e3530002	 cmp         r3, #2
  004b4	1a000001	 bne         |$LN4@ExternalDe@2|
  004b8		 |$LN3@ExternalDe@2|

; 299  :     {
; 300  :        TLLDevice_DeassertReset(pPddObject);

  004b8	e59d0008	 ldr         r0, [sp, #8]
  004bc	eb000000	 bl          TLLDevice_DeassertReset
  004c0		 |$LN4@ExternalDe@2|

; 301  :     }
; 302  : 
; 303  :     if ((pPddObject->port1Mode == USB_PORT_PHY_MODE) ||
; 304  :         (pPddObject->port2Mode == USB_PORT_PHY_MODE) ||
; 305  :         (pPddObject->port3Mode == USB_PORT_PHY_MODE))

  004c0	e59d3008	 ldr         r3, [sp, #8]
  004c4	e2833e26	 add         r3, r3, #0x26, 28
  004c8	e5933000	 ldr         r3, [r3]
  004cc	e3530001	 cmp         r3, #1
  004d0	0a000009	 beq         |$LN1@ExternalDe@2|
  004d4	e59d3008	 ldr         r3, [sp, #8]
  004d8	e2833f99	 add         r3, r3, #0x99, 30
  004dc	e5933000	 ldr         r3, [r3]
  004e0	e3530001	 cmp         r3, #1
  004e4	0a000004	 beq         |$LN1@ExternalDe@2|
  004e8	e59d3008	 ldr         r3, [sp, #8]
  004ec	e2833f9a	 add         r3, r3, #0x9A, 30
  004f0	e5933000	 ldr         r3, [r3]
  004f4	e3530001	 cmp         r3, #1
  004f8	1a000001	 bne         |$LN2@ExternalDe@2|
  004fc		 |$LN1@ExternalDe@2|

; 306  :     {
; 307  :        PHY_DeassertReset(pPddObject);

  004fc	e59d0008	 ldr         r0, [sp, #8]
  00500	eb000000	 bl          PHY_DeassertReset
  00504		 |$LN2@ExternalDe@2|

; 308  :     }
; 309  : }

  00504	e89d6000	 ldmia       sp, {sp, lr}
  00508	e12fff1e	 bx          lr
  0050c		 |$M45549|

			 ENDP  ; |ExternalDeviceDeassertReset|

	EXPORT	|??_C@_1FC@BJFCIGFC@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAE?$AAx?$AAt?$AAe?$AAr?$AAn?$AAa?$AAl?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAt?$AA?5?$AAd?$AAe?$AAa?$AAs@| [ DATA ] ; `string'
	EXPORT	|DelayExtDevDeassertReset|

  00050			 AREA	 |.pdata|, PDATA
|$T45559| DCD	|$LN7@DelayExtDe|
	DCD	0x40001e04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@BJFCIGFC@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAE?$AAx?$AAt?$AAe?$AAr?$AAn?$AAa?$AAl?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAt?$AA?5?$AAd?$AAe?$AAa?$AAs@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "E"
	DCB	0x0, "x", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "n", 0x0, "a"
	DCB	0x0, "l", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "a"
	DCB	0x0, "s", 0x0, "s", 0x0, "e", 0x0, "r", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  0050c			 AREA	 |.text|, CODE, ARM

  0050c		 |DelayExtDevDeassertReset| PROC

; 312  : {

  0050c		 |$LN7@DelayExtDe|
  0050c	e1a0c00d	 mov         r12, sp
  00510	e92d0001	 stmdb       sp!, {r0}
  00514	e92d5000	 stmdb       sp!, {r12, lr}
  00518	e24dd008	 sub         sp, sp, #8
  0051c		 |$M45556|

; 313  :     Sleep(5000);

  0051c	e3a00c13	 mov         r0, #0x13, 24
  00520	e3800088	 orr         r0, r0, #0x88
  00524	eb000000	 bl          Sleep

; 314  :     ExternalDeviceDeassertReset(pPddObject);

  00528	e59d0010	 ldr         r0, [sp, #0x10]
  0052c	eb000000	 bl          ExternalDeviceDeassertReset

; 315  :     Sleep(10);

  00530	e3a0000a	 mov         r0, #0xA
  00534	eb000000	 bl          Sleep

; 316  :     DEBUGMSG(ZONE_INFO, (TEXT("EHCI: External device reset deasserted\r\n")));

  00538	e59f3040	 ldr         r3, [pc, #0x40]
  0053c	e5933440	 ldr         r3, [r3, #0x440]
  00540	e3130b01	 tst         r3, #1, 22
  00544	0a000004	 beq         |$LN3@DelayExtDe|
  00548	e59f002c	 ldr         r0, [pc, #0x2C]
  0054c	eb000000	 bl          NKDbgPrintfW
  00550	e3a03001	 mov         r3, #1
  00554	e58d3004	 str         r3, [sp, #4]
  00558	ea000001	 b           |$LN4@DelayExtDe|
  0055c		 |$LN3@DelayExtDe|
  0055c	e3a03000	 mov         r3, #0
  00560	e58d3004	 str         r3, [sp, #4]
  00564		 |$LN4@DelayExtDe|

; 317  :     return 0;

  00564	e3a03000	 mov         r3, #0
  00568	e58d3000	 str         r3, [sp]

; 318  : }

  0056c	e59d0000	 ldr         r0, [sp]
  00570	e28dd008	 add         sp, sp, #8
  00574	e89d6000	 ldmia       sp, {sp, lr}
  00578	e12fff1e	 bx          lr
  0057c		 |$LN8@DelayExtDe|
  0057c		 |$LN9@DelayExtDe|
  0057c	00000000	 DCD         |??_C@_1FC@BJFCIGFC@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAE?$AAx?$AAt?$AAe?$AAr?$AAn?$AAa?$AAl?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAt?$AA?5?$AAd?$AAe?$AAa?$AAs@|
  00580		 |$LN10@DelayExtDe|
  00580	00000000	 DCD         |dpCurSettings|
  00584		 |$M45557|

			 ENDP  ; |DelayExtDevDeassertReset|

	EXPORT	|HcdPdd_DllMain|

  00058			 AREA	 |.pdata|, PDATA
|$T45568| DCD	|$LN5@HcdPdd_Dll|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00584			 AREA	 |.text|, CODE, ARM

  00584		 |HcdPdd_DllMain| PROC

; 553  : {

  00584		 |$LN5@HcdPdd_Dll|
  00584	e1a0c00d	 mov         r12, sp
  00588	e92d0007	 stmdb       sp!, {r0 - r2}
  0058c	e92d5000	 stmdb       sp!, {r12, lr}
  00590	e24dd004	 sub         sp, sp, #4
  00594		 |$M45565|

; 554  :     UNREFERENCED_PARAMETER(hinstDLL);
; 555  :     UNREFERENCED_PARAMETER(dwReason);
; 556  :     UNREFERENCED_PARAMETER(lpvReserved);
; 557  : 
; 558  :     return TRUE;

  00594	e3a03001	 mov         r3, #1
  00598	e58d3000	 str         r3, [sp]

; 559  : }

  0059c	e59d0000	 ldr         r0, [sp]
  005a0	e28dd004	 add         sp, sp, #4
  005a4	e89d6000	 ldmia       sp, {sp, lr}
  005a8	e12fff1e	 bx          lr
  005ac		 |$M45566|

			 ENDP  ; |HcdPdd_DllMain|

	EXPORT	|??_C@_1DO@BGOILBIF@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAH?$AAo?$AAs?$AAt?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?9?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@IMLKMNNK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@EABAMNEE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@MOJPMKKH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@PLLBBFCP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAB?$AAU?$AAS?$AA_?$AAR?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@CMFPDCNE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@IMFGGFBL@?$AAB?$AAU?$AAS?$AA1?$AA?3?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@JLDMBBMG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAo?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@PPCCOIND@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAb?$AAu?$AAs?$AA?5?$AAa?$AAc?$AAc?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@MNDCEPAB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@PNHPMIEA@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAH?$AAo?$AAs?$AAt?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CL?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|HcdPdd_Init|
	IMPORT	|CloseBusAccessHandle|
	IMPORT	|KernelIoControl|
	IMPORT	|HcdMdd_DestroyMemoryObject|
	IMPORT	|HcdMdd_DestroyHcdObject|
	IMPORT	|free|
	IMPORT	|DeleteCriticalSection|
	IMPORT	|HcdMdd_SetCapability|
	IMPORT	|GPIOSetMode|
	IMPORT	|RequestDevicePads|
	IMPORT	|DeviceIoControl|
	IMPORT	|CreateFileW|
	IMPORT	|GPIOOpen|
	IMPORT	|SOCGetUSBHInfo|
	IMPORT	|SetDevicePowerState|
	IMPORT	|CreateBusAccessHandle|
	IMPORT	|g_dwContext|
	IMPORT	|GetDeviceRegistryParams|
	IMPORT	|InitializeCriticalSection|
	IMPORT	|malloc|

  00060			 AREA	 |.pdata|, PDATA
|$T45599| DCD	|$LN44@HcdPdd_Ini|
	DCD	0x40018f04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@BGOILBIF@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAH?$AAo?$AAs?$AAt?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?9?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, " ", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, " ", 0x0, "H", 0x0, "o", 0x0, "s", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "H", 0x0, "c", 0x0, "d", 0x0, "P"
	DCB	0x0, "d", 0x0, "d", 0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, " ", 0x0, "-", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@IMLKMNNK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "c", 0x0, "d", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "d", 0x0, "s", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "p", 0x0, "o"
	DCB	0x0, "r", 0x0, "t", 0x0, " ", 0x0, "3", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@EABAMNEE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "c", 0x0, "d", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "d", 0x0, "s", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "p", 0x0, "o"
	DCB	0x0, "r", 0x0, "t", 0x0, " ", 0x0, "2", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@MOJPMKKH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "c", 0x0, "d", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "d", 0x0, "s", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "p", 0x0, "o"
	DCB	0x0, "r", 0x0, "t", 0x0, " ", 0x0, "1", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@PLLBBFCP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAB?$AAU?$AAS?$AA_?$AAR?$AAE@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "c", 0x0, "d", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, "_", 0x0, "B", 0x0, "U", 0x0, "S", 0x0, "_", 0x0, "R"
	DCB	0x0, "E", 0x0, "Q", 0x0, "U", 0x0, "E", 0x0, "S", 0x0, "T"
	DCB	0x0, "_", 0x0, "C", 0x0, "L", 0x0, "O", 0x0, "C", 0x0, "K"
	DCB	0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@CMFPDCNE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "c", 0x0, "d", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "o", 0x0, "p", 0x0, "e", 0x0, "n"
	DCB	0x0, " ", 0x0, "r", 0x0, "o", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "b", 0x0, "u", 0x0, "s", 0x0, " ", 0x0, "d", 0x0, "r"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@IMFGGFBL@?$AAB?$AAU?$AAS?$AA1?$AA?3?$AA?$AA@| DCB "B", 0x0, "U", 0x0
	DCB	"S", 0x0, "1", 0x0, ":", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@JLDMBBMG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAo?$AAp@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "c", 0x0, "d", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "o"
	DCB	0x0, "p", 0x0, "e", 0x0, "n", 0x0, " ", 0x0, "G", 0x0, "P"
	DCB	0x0, "I", 0x0, "O", 0x0, " ", 0x0, "d", 0x0, "r", 0x0, "i"
	DCB	0x0, "v", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@PPCCOIND@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAb?$AAu?$AAs?$AA?5?$AAa?$AAc?$AAc?$AAe@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "u", 0x0, "r", 0x0, "e"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "c", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "s", 0x0, " ", 0x0, "a", 0x0, "c", 0x0, "c"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, " ", 0x0, "h", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, ".", 0x0, " "
	DCB	0x0, " ", 0x0, "g", 0x0, "_", 0x0, "d", 0x0, "w", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@MNDCEPAB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "c", 0x0, "d", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "p", 0x0, "a"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@PNHPMIEA@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAH?$AAo?$AAs?$AAt?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CL?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, " ", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, " ", 0x0, "H", 0x0, "o", 0x0, "s", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "H", 0x0, "c", 0x0, "d", 0x0, "P"
	DCB	0x0, "d", 0x0, "d", 0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "+", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  005ac			 AREA	 |.text|, CODE, ARM

  005ac		 |HcdPdd_Init| PROC

; 762  : {

  005ac		 |$LN44@HcdPdd_Ini|
  005ac	e1a0c00d	 mov         r12, sp
  005b0	e92d0001	 stmdb       sp!, {r0}
  005b4	e92d5000	 stmdb       sp!, {r12, lr}
  005b8	e24dd08c	 sub         sp, sp, #0x8C
  005bc		 |$M45596|

; 763  :     SEHCDPdd *  pPddObject = malloc(sizeof(SEHCDPdd));

  005bc	e3a00fb2	 mov         r0, #0xB2, 30
  005c0	eb000000	 bl          malloc
  005c4	e58d0044	 str         r0, [sp, #0x44]
  005c8	e59d3044	 ldr         r3, [sp, #0x44]
  005cc	e58d3010	 str         r3, [sp, #0x10]

; 764  :     BOOL        fRet = FALSE;

  005d0	e3a03000	 mov         r3, #0
  005d4	e58d3014	 str         r3, [sp, #0x14]

; 765  :     extern DWORD g_dwContext;
; 766  : 	DWORD dwClock = OMAP_DEVICE_NONE;

  005d8	e3e03000	 mvn         r3, #0
  005dc	e58d3018	 str         r3, [sp, #0x18]

; 767  : 
; 768  :     DEBUGMSG(ZONE_INFO, (TEXT("EHCI USB Host: HcdPdd_Init+\r\n")));

  005e0	e59f35c8	 ldr         r3, [pc, #0x5C8]
  005e4	e5933440	 ldr         r3, [r3, #0x440]
  005e8	e3130b01	 tst         r3, #1, 22
  005ec	0a000004	 beq         |$LN26@HcdPdd_Ini|
  005f0	e59f05ec	 ldr         r0, [pc, #0x5EC]
  005f4	eb000000	 bl          NKDbgPrintfW
  005f8	e3a03001	 mov         r3, #1
  005fc	e58d3048	 str         r3, [sp, #0x48]
  00600	ea000001	 b           |$LN27@HcdPdd_Ini|
  00604		 |$LN26@HcdPdd_Ini|
  00604	e3a03000	 mov         r3, #0
  00608	e58d3048	 str         r3, [sp, #0x48]
  0060c		 |$LN27@HcdPdd_Ini|

; 769  : 
; 770  :     if (pPddObject)

  0060c	e59d3010	 ldr         r3, [sp, #0x10]
  00610	e3530000	 cmp         r3, #0
  00614	0a000124	 beq         |$LN23@HcdPdd_Ini|

; 771  :     {
; 772  :         pPddObject->pvVirtualAddress = NULL;

  00618	e59d3010	 ldr         r3, [sp, #0x10]
  0061c	e2832014	 add         r2, r3, #0x14
  00620	e3a03000	 mov         r3, #0
  00624	e5823000	 str         r3, [r2]

; 773  :         InitializeCriticalSection(&pPddObject->csPdd);

  00628	e59d3010	 ldr         r3, [sp, #0x10]
  0062c	e2830f91	 add         r0, r3, #0x91, 30
  00630	eb000000	 bl          InitializeCriticalSection

; 774  :         pPddObject->IsrHandle = NULL;

  00634	e59d3010	 ldr         r3, [sp, #0x10]
  00638	e2832f96	 add         r2, r3, #0x96, 30
  0063c	e3a03000	 mov         r3, #0
  00640	e5823000	 str         r3, [r2]

; 775  : 
; 776  :         // Read device parameters
; 777  :         if (GetDeviceRegistryParams((LPCWSTR)dwContext, pPddObject,
; 778  :             dimof(g_deviceRegParams), g_deviceRegParams) != ERROR_SUCCESS)

  00644	e59f3594	 ldr         r3, [pc, #0x594]
  00648	e3a02010	 mov         r2, #0x10
  0064c	e59d1010	 ldr         r1, [sp, #0x10]
  00650	e59d0094	 ldr         r0, [sp, #0x94]
  00654	eb000000	 bl          GetDeviceRegistryParams
  00658	e58d004c	 str         r0, [sp, #0x4C]
  0065c	e59d304c	 ldr         r3, [sp, #0x4C]
  00660	e3530000	 cmp         r3, #0
  00664	0a00000b	 beq         |$LN22@HcdPdd_Ini|

; 779  :         {
; 780  :             DEBUGMSG(ZONE_ERROR, (L"ERROR: HcdPdd_Init: Failed read registry parameters\r\n"));

  00668	e59f3540	 ldr         r3, [pc, #0x540]
  0066c	e5933440	 ldr         r3, [r3, #0x440]
  00670	e3130901	 tst         r3, #1, 18
  00674	0a000004	 beq         |$LN28@HcdPdd_Ini|
  00678	e59f055c	 ldr         r0, [pc, #0x55C]
  0067c	eb000000	 bl          NKDbgPrintfW
  00680	e3a03001	 mov         r3, #1
  00684	e58d3050	 str         r3, [sp, #0x50]
  00688	ea000001	 b           |$LN29@HcdPdd_Ini|
  0068c		 |$LN28@HcdPdd_Ini|
  0068c	e3a03000	 mov         r3, #0
  00690	e58d3050	 str         r3, [sp, #0x50]
  00694		 |$LN29@HcdPdd_Ini|

; 781  :             goto cleanUp;

  00694	ea000104	 b           |$cleanUp$45211|
  00698		 |$LN22@HcdPdd_Ini|

; 782  :         }
; 783  : 
; 784  :         pPddObject->hParentBusHandle = CreateBusAccessHandle( (LPCTSTR) g_dwContext ) ;

  00698	e59f3538	 ldr         r3, [pc, #0x538]
  0069c	e5930000	 ldr         r0, [r3]
  006a0	eb000000	 bl          CreateBusAccessHandle
  006a4	e58d0054	 str         r0, [sp, #0x54]
  006a8	e59d3010	 ldr         r3, [sp, #0x10]
  006ac	e2832faf	 add         r2, r3, #0xAF, 30
  006b0	e59d3054	 ldr         r3, [sp, #0x54]
  006b4	e5823000	 str         r3, [r2]

; 785  :         if (pPddObject->hParentBusHandle == NULL)

  006b8	e59d3010	 ldr         r3, [sp, #0x10]
  006bc	e2833faf	 add         r3, r3, #0xAF, 30
  006c0	e5933000	 ldr         r3, [r3]
  006c4	e3530000	 cmp         r3, #0
  006c8	1a000004	 bne         |$LN21@HcdPdd_Ini|

; 786  : 		{
; 787  :             RETAILMSG(TRUE, (TEXT("EHCI: Failure to create bus access handle.  g_dwContext = %s\r\n"), (char *)g_dwContext));

  006cc	e59f3504	 ldr         r3, [pc, #0x504]
  006d0	e5931000	 ldr         r1, [r3]
  006d4	e59f04f8	 ldr         r0, [pc, #0x4F8]
  006d8	eb000000	 bl          NKDbgPrintfW

; 788  : 			goto cleanUp;

  006dc	ea0000f2	 b           |$cleanUp$45211|
  006e0		 |$LN21@HcdPdd_Ini|

; 789  : 		}
; 790  : 
; 791  :         SetDevicePowerState(pPddObject->hParentBusHandle, D0, NULL);

  006e0	e3a02000	 mov         r2, #0
  006e4	e3a01000	 mov         r1, #0
  006e8	e59d3010	 ldr         r3, [sp, #0x10]
  006ec	e2833faf	 add         r3, r3, #0xAF, 30
  006f0	e5930000	 ldr         r0, [r3]
  006f4	eb000000	 bl          SetDevicePowerState

; 792  : 
; 793  : 		// Retrieve SOC specific info
; 794  : 		SOCGetUSBHInfo(&pPddObject->USBHInfo);

  006f8	e59d3010	 ldr         r3, [sp, #0x10]
  006fc	e2830fa5	 add         r0, r3, #0xA5, 30
  00700	eb000000	 bl          SOCGetUSBHInfo

; 795  : 
; 796  :         // Open GPIO driver
; 797  :         pPddObject->hGpio = GPIOOpen();

  00704	eb000000	 bl          GPIOOpen
  00708	e58d0058	 str         r0, [sp, #0x58]
  0070c	e59d3010	 ldr         r3, [sp, #0x10]
  00710	e2832e29	 add         r2, r3, #0x29, 28
  00714	e59d3058	 ldr         r3, [sp, #0x58]
  00718	e5823000	 str         r3, [r2]

; 798  :         if (pPddObject->hGpio == INVALID_HANDLE_VALUE)

  0071c	e59d3010	 ldr         r3, [sp, #0x10]
  00720	e2833e29	 add         r3, r3, #0x29, 28
  00724	e5933000	 ldr         r3, [r3]
  00728	e3730001	 cmn         r3, #1
  0072c	1a00000b	 bne         |$LN20@HcdPdd_Ini|

; 799  : 		{
; 800  :             DEBUGMSG(ZONE_ERROR, (L"ERROR: HcdPdd_Init: Failed to open GPIO driver\r\n"));

  00730	e59f3478	 ldr         r3, [pc, #0x478]
  00734	e5933440	 ldr         r3, [r3, #0x440]
  00738	e3130901	 tst         r3, #1, 18
  0073c	0a000004	 beq         |$LN30@HcdPdd_Ini|
  00740	e59f0488	 ldr         r0, [pc, #0x488]
  00744	eb000000	 bl          NKDbgPrintfW
  00748	e3a03001	 mov         r3, #1
  0074c	e58d305c	 str         r3, [sp, #0x5C]
  00750	ea000001	 b           |$LN31@HcdPdd_Ini|
  00754		 |$LN30@HcdPdd_Ini|
  00754	e3a03000	 mov         r3, #0
  00758	e58d305c	 str         r3, [sp, #0x5C]
  0075c		 |$LN31@HcdPdd_Ini|

; 801  :             goto cleanUp;

  0075c	ea0000d2	 b           |$cleanUp$45211|
  00760		 |$LN20@HcdPdd_Ini|

; 802  : 		}
; 803  : 
; 804  :         // open root bus driver
; 805  :         pPddObject->hRootBus = CreateFile(L"BUS1:", 0, 0, NULL, 0, 0, 0 );

  00760	e3a03000	 mov         r3, #0
  00764	e58d3008	 str         r3, [sp, #8]
  00768	e3a03000	 mov         r3, #0
  0076c	e58d3004	 str         r3, [sp, #4]
  00770	e3a03000	 mov         r3, #0
  00774	e58d3000	 str         r3, [sp]
  00778	e3a03000	 mov         r3, #0
  0077c	e3a02000	 mov         r2, #0
  00780	e3a01000	 mov         r1, #0
  00784	e59f0440	 ldr         r0, [pc, #0x440]
  00788	eb000000	 bl          CreateFileW
  0078c	e58d0060	 str         r0, [sp, #0x60]
  00790	e59d3010	 ldr         r3, [sp, #0x10]
  00794	e2832d0b	 add         r2, r3, #0xB, 26
  00798	e59d3060	 ldr         r3, [sp, #0x60]
  0079c	e5823000	 str         r3, [r2]

; 806  :         if (pPddObject->hRootBus == NULL)

  007a0	e59d3010	 ldr         r3, [sp, #0x10]
  007a4	e2833d0b	 add         r3, r3, #0xB, 26
  007a8	e5933000	 ldr         r3, [r3]
  007ac	e3530000	 cmp         r3, #0
  007b0	1a000002	 bne         |$LN19@HcdPdd_Ini|

; 807  :         {
; 808  :             RETAILMSG(TRUE, (L"ERROR: HcdPdd_Init: Failed open root bus driver handle\r\n"));

  007b4	e59f040c	 ldr         r0, [pc, #0x40C]
  007b8	eb000000	 bl          NKDbgPrintfW

; 809  :             goto cleanUp;

  007bc	ea0000ba	 b           |$cleanUp$45211|
  007c0		 |$LN19@HcdPdd_Ini|

; 810  :         }
; 811  : 
; 812  :         // enable USBTLL clocks
; 813  : 		dwClock = pPddObject->USBHInfo.TLLDevice;

  007c0	e59d3010	 ldr         r3, [sp, #0x10]
  007c4	e2833fa6	 add         r3, r3, #0xA6, 30
  007c8	e5933000	 ldr         r3, [r3]
  007cc	e58d3018	 str         r3, [sp, #0x18]

; 814  :         if (!DeviceIoControl(pPddObject->hRootBus, IOCTL_BUS_REQUEST_CLOCK, &dwClock, sizeof(dwClock), NULL, 0, NULL, NULL))

  007d0	e3a03000	 mov         r3, #0
  007d4	e58d300c	 str         r3, [sp, #0xC]
  007d8	e3a03000	 mov         r3, #0
  007dc	e58d3008	 str         r3, [sp, #8]
  007e0	e3a03000	 mov         r3, #0
  007e4	e58d3004	 str         r3, [sp, #4]
  007e8	e3a03000	 mov         r3, #0
  007ec	e58d3000	 str         r3, [sp]
  007f0	e3a03004	 mov         r3, #4
  007f4	e28d2018	 add         r2, sp, #0x18
  007f8	e3a01822	 mov         r1, #0x22, 16
  007fc	e3811b03	 orr         r1, r1, #3, 22
  00800	e59d0010	 ldr         r0, [sp, #0x10]
  00804	e2800d0b	 add         r0, r0, #0xB, 26
  00808	e5900000	 ldr         r0, [r0]
  0080c	eb000000	 bl          DeviceIoControl
  00810	e58d0064	 str         r0, [sp, #0x64]
  00814	e59d3064	 ldr         r3, [sp, #0x64]
  00818	e3530000	 cmp         r3, #0
  0081c	1a00000b	 bne         |$LN18@HcdPdd_Ini|

; 815  :         {
; 816  :             DEBUGMSG(ZONE_ERROR, (L"ERROR: HcdPdd_Init: IOCTL_BUS_REQUEST_CLOCK failed\r\n"));

  00820	e59f3388	 ldr         r3, [pc, #0x388]
  00824	e5933440	 ldr         r3, [r3, #0x440]
  00828	e3130901	 tst         r3, #1, 18
  0082c	0a000004	 beq         |$LN32@HcdPdd_Ini|
  00830	e59f038c	 ldr         r0, [pc, #0x38C]
  00834	eb000000	 bl          NKDbgPrintfW
  00838	e3a03001	 mov         r3, #1
  0083c	e58d3068	 str         r3, [sp, #0x68]
  00840	ea000001	 b           |$LN33@HcdPdd_Ini|
  00844		 |$LN32@HcdPdd_Ini|
  00844	e3a03000	 mov         r3, #0
  00848	e58d3068	 str         r3, [sp, #0x68]
  0084c		 |$LN33@HcdPdd_Ini|

; 817  :             goto cleanUp;

  0084c	ea000096	 b           |$cleanUp$45211|
  00850		 |$LN18@HcdPdd_Ini|

; 818  :         }
; 819  : 
; 820  : 		// Request Pads and enable clocks for each host device if enabled
; 821  : 		if (pPddObject->port1Mode != USB_PORT_NOT_USED)

  00850	e59d3010	 ldr         r3, [sp, #0x10]
  00854	e2833e26	 add         r3, r3, #0x26, 28
  00858	e5933000	 ldr         r3, [r3]
  0085c	e3530000	 cmp         r3, #0
  00860	0a000013	 beq         |$LN17@HcdPdd_Ini|

; 822  : 		{
; 823  : 			if (!RequestDevicePads(pPddObject->USBHInfo.Host1Device))

  00864	e59d3010	 ldr         r3, [sp, #0x10]
  00868	e2833fa7	 add         r3, r3, #0xA7, 30
  0086c	e5930000	 ldr         r0, [r3]
  00870	eb000000	 bl          RequestDevicePads
  00874	e58d006c	 str         r0, [sp, #0x6C]
  00878	e59d306c	 ldr         r3, [sp, #0x6C]
  0087c	e3530000	 cmp         r3, #0
  00880	1a00000b	 bne         |$LN16@HcdPdd_Ini|

; 824  :             {
; 825  :                 DEBUGMSG(ZONE_ERROR, (L"ERROR: HcdPdd_Init: Failed to request pads for port 1\r\n"));

  00884	e59f3324	 ldr         r3, [pc, #0x324]
  00888	e5933440	 ldr         r3, [r3, #0x440]
  0088c	e3130901	 tst         r3, #1, 18
  00890	0a000004	 beq         |$LN34@HcdPdd_Ini|
  00894	e59f0324	 ldr         r0, [pc, #0x324]
  00898	eb000000	 bl          NKDbgPrintfW
  0089c	e3a03001	 mov         r3, #1
  008a0	e58d3070	 str         r3, [sp, #0x70]
  008a4	ea000001	 b           |$LN35@HcdPdd_Ini|
  008a8		 |$LN34@HcdPdd_Ini|
  008a8	e3a03000	 mov         r3, #0
  008ac	e58d3070	 str         r3, [sp, #0x70]
  008b0		 |$LN35@HcdPdd_Ini|

; 826  :                 goto cleanUp;

  008b0	ea00007d	 b           |$cleanUp$45211|
  008b4		 |$LN16@HcdPdd_Ini|
  008b4		 |$LN17@HcdPdd_Ini|

; 827  :             }
; 828  : 
; 829  : 		}
; 830  : 		if (pPddObject->port2Mode != USB_PORT_NOT_USED)

  008b4	e59d3010	 ldr         r3, [sp, #0x10]
  008b8	e2833f99	 add         r3, r3, #0x99, 30
  008bc	e5933000	 ldr         r3, [r3]
  008c0	e3530000	 cmp         r3, #0
  008c4	0a000013	 beq         |$LN15@HcdPdd_Ini|

; 831  : 		{
; 832  :             if (!RequestDevicePads(pPddObject->USBHInfo.Host2Device))

  008c8	e59d3010	 ldr         r3, [sp, #0x10]
  008cc	e2833e2a	 add         r3, r3, #0x2A, 28
  008d0	e5930000	 ldr         r0, [r3]
  008d4	eb000000	 bl          RequestDevicePads
  008d8	e58d0074	 str         r0, [sp, #0x74]
  008dc	e59d3074	 ldr         r3, [sp, #0x74]
  008e0	e3530000	 cmp         r3, #0
  008e4	1a00000b	 bne         |$LN14@HcdPdd_Ini|

; 833  :             {
; 834  :                 DEBUGMSG(ZONE_ERROR, (L"ERROR: HcdPdd_Init: Failed to request pads for port 2\r\n"));

  008e8	e59f32c0	 ldr         r3, [pc, #0x2C0]
  008ec	e5933440	 ldr         r3, [r3, #0x440]
  008f0	e3130901	 tst         r3, #1, 18
  008f4	0a000004	 beq         |$LN36@HcdPdd_Ini|
  008f8	e59f02bc	 ldr         r0, [pc, #0x2BC]
  008fc	eb000000	 bl          NKDbgPrintfW
  00900	e3a03001	 mov         r3, #1
  00904	e58d3078	 str         r3, [sp, #0x78]
  00908	ea000001	 b           |$LN37@HcdPdd_Ini|
  0090c		 |$LN36@HcdPdd_Ini|
  0090c	e3a03000	 mov         r3, #0
  00910	e58d3078	 str         r3, [sp, #0x78]
  00914		 |$LN37@HcdPdd_Ini|

; 835  :                 goto cleanUp;

  00914	ea000064	 b           |$cleanUp$45211|
  00918		 |$LN14@HcdPdd_Ini|
  00918		 |$LN15@HcdPdd_Ini|

; 836  :             }
; 837  : 		}
; 838  : 		if (pPddObject->port3Mode != USB_PORT_NOT_USED)

  00918	e59d3010	 ldr         r3, [sp, #0x10]
  0091c	e2833f9a	 add         r3, r3, #0x9A, 30
  00920	e5933000	 ldr         r3, [r3]
  00924	e3530000	 cmp         r3, #0
  00928	0a000013	 beq         |$LN13@HcdPdd_Ini|

; 839  : 		{
; 840  : 			if (!RequestDevicePads(pPddObject->USBHInfo.Host3Device))

  0092c	e59d3010	 ldr         r3, [sp, #0x10]
  00930	e2833fa9	 add         r3, r3, #0xA9, 30
  00934	e5930000	 ldr         r0, [r3]
  00938	eb000000	 bl          RequestDevicePads
  0093c	e58d007c	 str         r0, [sp, #0x7C]
  00940	e59d307c	 ldr         r3, [sp, #0x7C]
  00944	e3530000	 cmp         r3, #0
  00948	1a00000b	 bne         |$LN12@HcdPdd_Ini|

; 841  :             {
; 842  :                 DEBUGMSG(ZONE_ERROR, (L"ERROR: HcdPdd_Init: Failed to request pads for port 3\r\n"));

  0094c	e59f325c	 ldr         r3, [pc, #0x25C]
  00950	e5933440	 ldr         r3, [r3, #0x440]
  00954	e3130901	 tst         r3, #1, 18
  00958	0a000004	 beq         |$LN38@HcdPdd_Ini|
  0095c	e59f0254	 ldr         r0, [pc, #0x254]
  00960	eb000000	 bl          NKDbgPrintfW
  00964	e3a03001	 mov         r3, #1
  00968	e58d3080	 str         r3, [sp, #0x80]
  0096c	ea000001	 b           |$LN39@HcdPdd_Ini|
  00970		 |$LN38@HcdPdd_Ini|
  00970	e3a03000	 mov         r3, #0
  00974	e58d3080	 str         r3, [sp, #0x80]
  00978		 |$LN39@HcdPdd_Ini|

; 843  :                 goto cleanUp;

  00978	ea00004b	 b           |$cleanUp$45211|
  0097c		 |$LN12@HcdPdd_Ini|
  0097c		 |$LN13@HcdPdd_Ini|

; 844  :             }
; 845  : 		}
; 846  : 
; 847  : 		// Configure reset pins as outputs
; 848  : 		if (pPddObject->Port1RstGpio != -1)

  0097c	e59d3010	 ldr         r3, [sp, #0x10]
  00980	e2833f9e	 add         r3, r3, #0x9E, 30
  00984	e5933000	 ldr         r3, [r3]
  00988	e3730001	 cmn         r3, #1
  0098c	0a000007	 beq         |$LN11@HcdPdd_Ini|

; 849  : 		{
; 850  : 			GPIOSetMode(pPddObject->hGpio, pPddObject->Port1RstGpio ,GPIO_DIR_OUTPUT);

  00990	e3a02000	 mov         r2, #0
  00994	e59d3010	 ldr         r3, [sp, #0x10]
  00998	e2833f9e	 add         r3, r3, #0x9E, 30
  0099c	e5931000	 ldr         r1, [r3]
  009a0	e59d3010	 ldr         r3, [sp, #0x10]
  009a4	e2833e29	 add         r3, r3, #0x29, 28
  009a8	e5930000	 ldr         r0, [r3]
  009ac	eb000000	 bl          GPIOSetMode
  009b0		 |$LN11@HcdPdd_Ini|

; 851  : 		}
; 852  : 		if (pPddObject->Port2RstGpio != -1)

  009b0	e59d3010	 ldr         r3, [sp, #0x10]
  009b4	e2833f9f	 add         r3, r3, #0x9F, 30
  009b8	e5933000	 ldr         r3, [r3]
  009bc	e3730001	 cmn         r3, #1
  009c0	0a000007	 beq         |$LN10@HcdPdd_Ini|

; 853  : 		{
; 854  : 			GPIOSetMode(pPddObject->hGpio, pPddObject->Port2RstGpio ,GPIO_DIR_OUTPUT);

  009c4	e3a02000	 mov         r2, #0
  009c8	e59d3010	 ldr         r3, [sp, #0x10]
  009cc	e2833f9f	 add         r3, r3, #0x9F, 30
  009d0	e5931000	 ldr         r1, [r3]
  009d4	e59d3010	 ldr         r3, [sp, #0x10]
  009d8	e2833e29	 add         r3, r3, #0x29, 28
  009dc	e5930000	 ldr         r0, [r3]
  009e0	eb000000	 bl          GPIOSetMode
  009e4		 |$LN10@HcdPdd_Ini|

; 855  : 		}
; 856  : 		if (pPddObject->Port3RstGpio != -1)

  009e4	e59d3010	 ldr         r3, [sp, #0x10]
  009e8	e2833d0a	 add         r3, r3, #0xA, 26
  009ec	e5933000	 ldr         r3, [r3]
  009f0	e3730001	 cmn         r3, #1
  009f4	0a000007	 beq         |$LN9@HcdPdd_Ini|

; 857  : 		{
; 858  : 			GPIOSetMode(pPddObject->hGpio, pPddObject->Port3RstGpio ,GPIO_DIR_OUTPUT);

  009f8	e3a02000	 mov         r2, #0
  009fc	e59d3010	 ldr         r3, [sp, #0x10]
  00a00	e2833d0a	 add         r3, r3, #0xA, 26
  00a04	e5931000	 ldr         r1, [r3]
  00a08	e59d3010	 ldr         r3, [sp, #0x10]
  00a0c	e2833e29	 add         r3, r3, #0x29, 28
  00a10	e5930000	 ldr         r0, [r3]
  00a14	eb000000	 bl          GPIOSetMode
  00a18		 |$LN9@HcdPdd_Ini|

; 859  : 		}
; 860  : 
; 861  :         Sleep(10);

  00a18	e3a0000a	 mov         r0, #0xA
  00a1c	eb000000	 bl          Sleep

; 862  : 
; 863  :         fRet = InitializeEHCI(pPddObject, (LPCWSTR)dwContext);

  00a20	e59d1094	 ldr         r1, [sp, #0x94]
  00a24	e59d0010	 ldr         r0, [sp, #0x10]
  00a28	eb000000	 bl          InitializeEHCI
  00a2c	e58d0084	 str         r0, [sp, #0x84]
  00a30	e59d3084	 ldr         r3, [sp, #0x84]
  00a34	e58d3014	 str         r3, [sp, #0x14]

; 864  : 
; 865  :         if (fRet)

  00a38	e59d3014	 ldr         r3, [sp, #0x14]
  00a3c	e3530000	 cmp         r3, #0
  00a40	0a00000f	 beq         |$LN8@HcdPdd_Ini|

; 866  : 		{
; 867  : 			if (pPddObject->BusSuspendResume)

  00a44	e59d3010	 ldr         r3, [sp, #0x10]
  00a48	e2833008	 add         r3, r3, #8
  00a4c	e5933000	 ldr         r3, [r3]
  00a50	e3530000	 cmp         r3, #0
  00a54	0a000005	 beq         |$LN7@HcdPdd_Ini|

; 868  : 	            HcdMdd_SetCapability(pPddObject->lpvEHCDMddObject, HCD_SUSPEND_RESUME | HCD_ROOT_HUB_INTERRUPT);

  00a58	e3a01003	 mov         r1, #3
  00a5c	e59d3010	 ldr         r3, [sp, #0x10]
  00a60	e2833010	 add         r3, r3, #0x10
  00a64	e5930000	 ldr         r0, [r3]
  00a68	eb000000	 bl          HcdMdd_SetCapability

; 869  :     	    else

  00a6c	ea000004	 b           |$LN6@HcdPdd_Ini|
  00a70		 |$LN7@HcdPdd_Ini|

; 870  :         	    HcdMdd_SetCapability(pPddObject->lpvEHCDMddObject, HCD_ROOT_HUB_INTERRUPT);

  00a70	e3a01002	 mov         r1, #2
  00a74	e59d3010	 ldr         r3, [sp, #0x10]
  00a78	e2833010	 add         r3, r3, #0x10
  00a7c	e5930000	 ldr         r0, [r3]
  00a80	eb000000	 bl          HcdMdd_SetCapability
  00a84		 |$LN6@HcdPdd_Ini|
  00a84		 |$LN8@HcdPdd_Ini|

; 871  : 		}
; 872  : 
; 873  :         if(!fRet)

  00a84	e59d3014	 ldr         r3, [sp, #0x14]
  00a88	e3530000	 cmp         r3, #0
  00a8c	1a000006	 bne         |$LN5@HcdPdd_Ini|

; 874  :         {
; 875  :             DeleteCriticalSection(&pPddObject->csPdd);

  00a90	e59d3010	 ldr         r3, [sp, #0x10]
  00a94	e2830f91	 add         r0, r3, #0x91, 30
  00a98	eb000000	 bl          DeleteCriticalSection

; 876  :             free(pPddObject);

  00a9c	e59d0010	 ldr         r0, [sp, #0x10]
  00aa0	eb000000	 bl          free

; 877  :             pPddObject = NULL;

  00aa4	e3a03000	 mov         r3, #0
  00aa8	e58d3010	 str         r3, [sp, #0x10]
  00aac		 |$LN5@HcdPdd_Ini|
  00aac		 |$LN23@HcdPdd_Ini|
  00aac		 |$cleanUp$45211|

; 878  :         }
; 879  :     }
; 880  : 
; 881  : cleanUp:
; 882  :     if (!fRet && pPddObject != NULL)

  00aac	e59d3014	 ldr         r3, [sp, #0x14]
  00ab0	e3530000	 cmp         r3, #0
  00ab4	1a00002b	 bne         |$LN4@HcdPdd_Ini|
  00ab8	e59d3010	 ldr         r3, [sp, #0x10]
  00abc	e3530000	 cmp         r3, #0
  00ac0	0a000028	 beq         |$LN4@HcdPdd_Ini|

; 883  :     {
; 884  :         if (pPddObject->lpvEHCDMddObject != NULL)

  00ac4	e59d3010	 ldr         r3, [sp, #0x10]
  00ac8	e2833010	 add         r3, r3, #0x10
  00acc	e5933000	 ldr         r3, [r3]
  00ad0	e3530000	 cmp         r3, #0
  00ad4	0a000003	 beq         |$LN3@HcdPdd_Ini|

; 885  :         HcdMdd_DestroyHcdObject(pPddObject->lpvEHCDMddObject);

  00ad8	e59d3010	 ldr         r3, [sp, #0x10]
  00adc	e2833010	 add         r3, r3, #0x10
  00ae0	e5930000	 ldr         r0, [r3]
  00ae4	eb000000	 bl          HcdMdd_DestroyHcdObject
  00ae8		 |$LN3@HcdPdd_Ini|

; 886  :         if (pPddObject->lpvMemoryObject != NULL)

  00ae8	e59d3010	 ldr         r3, [sp, #0x10]
  00aec	e283300c	 add         r3, r3, #0xC
  00af0	e5933000	 ldr         r3, [r3]
  00af4	e3530000	 cmp         r3, #0
  00af8	0a000003	 beq         |$LN2@HcdPdd_Ini|

; 887  :         HcdMdd_DestroyMemoryObject(pPddObject->lpvMemoryObject);

  00afc	e59d3010	 ldr         r3, [sp, #0x10]
  00b00	e283300c	 add         r3, r3, #0xC
  00b04	e5930000	 ldr         r0, [r3]
  00b08	eb000000	 bl          HcdMdd_DestroyMemoryObject
  00b0c		 |$LN2@HcdPdd_Ini|

; 888  :         if (pPddObject->dwSysIntr != 0)

  00b0c	e59d3010	 ldr         r3, [sp, #0x10]
  00b10	e2833d09	 add         r3, r3, #9, 26
  00b14	e5933000	 ldr         r3, [r3]
  00b18	e3530000	 cmp         r3, #0
  00b1c	0a000009	 beq         |$LN1@HcdPdd_Ini|

; 889  :         KernelIoControl(IOCTL_HAL_RELEASE_SYSINTR, (PVOID)&pPddObject->dwSysIntr,
; 890  :             sizeof(&pPddObject->dwSysIntr), NULL, 0, NULL);

  00b20	e3a03000	 mov         r3, #0
  00b24	e58d3004	 str         r3, [sp, #4]
  00b28	e3a03000	 mov         r3, #0
  00b2c	e58d3000	 str         r3, [sp]
  00b30	e3a03000	 mov         r3, #0
  00b34	e3a02004	 mov         r2, #4
  00b38	e59d1010	 ldr         r1, [sp, #0x10]
  00b3c	e2811d09	 add         r1, r1, #9, 26
  00b40	e59f006c	 ldr         r0, [pc, #0x6C]
  00b44	eb000000	 bl          KernelIoControl
  00b48		 |$LN1@HcdPdd_Ini|

; 891  :         CloseBusAccessHandle(pPddObject->hParentBusHandle);

  00b48	e59d3010	 ldr         r3, [sp, #0x10]
  00b4c	e2833faf	 add         r3, r3, #0xAF, 30
  00b50	e5930000	 ldr         r0, [r3]
  00b54	eb000000	 bl          CloseBusAccessHandle

; 892  :         free(pPddObject);

  00b58	e59d0010	 ldr         r0, [sp, #0x10]
  00b5c	eb000000	 bl          free

; 893  :         pPddObject = NULL;

  00b60	e3a03000	 mov         r3, #0
  00b64	e58d3010	 str         r3, [sp, #0x10]
  00b68		 |$LN4@HcdPdd_Ini|

; 894  :     }
; 895  : 
; 896  :     DEBUGMSG(ZONE_INFO, (TEXT("EHCI USB Host: HcdPdd_Init -\r\n")));

  00b68	e59f3040	 ldr         r3, [pc, #0x40]
  00b6c	e5933440	 ldr         r3, [r3, #0x440]
  00b70	e3130b01	 tst         r3, #1, 22
  00b74	0a000004	 beq         |$LN40@HcdPdd_Ini|
  00b78	e59f002c	 ldr         r0, [pc, #0x2C]
  00b7c	eb000000	 bl          NKDbgPrintfW
  00b80	e3a03001	 mov         r3, #1
  00b84	e58d3088	 str         r3, [sp, #0x88]
  00b88	ea000001	 b           |$LN41@HcdPdd_Ini|
  00b8c		 |$LN40@HcdPdd_Ini|
  00b8c	e3a03000	 mov         r3, #0
  00b90	e58d3088	 str         r3, [sp, #0x88]
  00b94		 |$LN41@HcdPdd_Ini|

; 897  : 
; 898  :     return (DWORD)pPddObject;

  00b94	e59d3010	 ldr         r3, [sp, #0x10]
  00b98	e58d3040	 str         r3, [sp, #0x40]

; 899  : }

  00b9c	e59d0040	 ldr         r0, [sp, #0x40]
  00ba0	e28dd08c	 add         sp, sp, #0x8C
  00ba4	e89d6000	 ldmia       sp, {sp, lr}
  00ba8	e12fff1e	 bx          lr
  00bac		 |$LN45@HcdPdd_Ini|
  00bac		 |$LN46@HcdPdd_Ini|
  00bac	00000000	 DCD         |??_C@_1DO@BGOILBIF@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAH?$AAo?$AAs?$AAt?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?5?$AA?9?$AA?$AN?$AA?6?$AA?$AA@|
  00bb0		 |$LN47@HcdPdd_Ini|
  00bb0	00000000	 DCD         |dpCurSettings|
  00bb4		 |$LN48@HcdPdd_Ini|
  00bb4	010100d8	 DCD         0x10100d8
  00bb8		 |$LN49@HcdPdd_Ini|
  00bb8	00000000	 DCD         |??_C@_1HA@IMLKMNNK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe@|
  00bbc		 |$LN50@HcdPdd_Ini|
  00bbc	00000000	 DCD         |??_C@_1HA@EABAMNEE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe@|
  00bc0		 |$LN51@HcdPdd_Ini|
  00bc0	00000000	 DCD         |??_C@_1HA@MOJPMKKH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe@|
  00bc4		 |$LN52@HcdPdd_Ini|
  00bc4	00000000	 DCD         |??_C@_1GK@PLLBBFCP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAB?$AAU?$AAS?$AA_?$AAR?$AAE@|
  00bc8		 |$LN53@HcdPdd_Ini|
  00bc8	00000000	 DCD         |??_C@_1HC@CMFPDCNE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5@|
  00bcc		 |$LN54@HcdPdd_Ini|
  00bcc	00000000	 DCD         |??_C@_1M@IMFGGFBL@?$AAB?$AAU?$AAS?$AA1?$AA?3?$AA?$AA@|
  00bd0		 |$LN55@HcdPdd_Ini|
  00bd0	00000000	 DCD         |??_C@_1GC@JLDMBBMG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAo?$AAp@|
  00bd4		 |$LN56@HcdPdd_Ini|
  00bd4	00000000	 DCD         |??_C@_1HO@PPCCOIND@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAb?$AAu?$AAs?$AA?5?$AAa?$AAc?$AAc?$AAe@|
  00bd8		 |$LN57@HcdPdd_Ini|
  00bd8	00000000	 DCD         |g_dwContext|
  00bdc		 |$LN58@HcdPdd_Ini|
  00bdc	00000000	 DCD         |??_C@_1GM@MNDCEPAB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5@|
  00be0		 |$LN59@HcdPdd_Ini|
  00be0	00000000	 DCD         |g_deviceRegParams|
  00be4		 |$LN60@HcdPdd_Ini|
  00be4	00000000	 DCD         |??_C@_1DM@PNHPMIEA@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AAU?$AAS?$AAB?$AA?5?$AAH?$AAo?$AAs?$AAt?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CL?$AA?$AN?$AA?6?$AA?$AA@|
  00be8		 |$M45597|

			 ENDP  ; |HcdPdd_Init|

	EXPORT	|??_C@_1BM@KKKMKIHE@?$AAH?$AAc?$AAd?$AAC?$AAa?$AAp?$AAa?$AAb?$AAi?$AAl?$AAi?$AAt?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@IEKBDFBE@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AA?9?$AA?5?$AAH?$AAc?$AAd?$AAM?$AAd?$AAd?$AA_?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAH?$AAc?$AAd?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?5?$AAF?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@MAIJNCNN@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AA?9?$AA?5?$AAH?$AAc?$AAd?$AAM?$AAd?$AAd?$AA_?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@HMEHJEEO@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAS?$AAY?$AAS?$AAI?$AAN?$AAT?$AAR?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@GFJBIFDL@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAq?$AAu?$AAi?$AAr?$AAe?$AA?5?$AAI?$AAR?$AAQ?$AA_?$AAU?$AAS?$AAB?$AA_?$AAH@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@DGIPKAGD@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@IFCIGIJA@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAE?$AAH?$AAC?$AAI?$AA?3?$AAG?$AAe?$AAt?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg@| [ DATA ] ; `string'
	IMPORT	|HalFreeCommonBuffer|
	IMPORT	|FreeIntChainHandler|
	IMPORT	|RegCloseKey|
	IMPORT	|RegQueryValueExW|
	IMPORT	|wcsncpy|
	IMPORT	|HcdMdd_CreateHcdObject|
	IMPORT	|GetLastError|
	IMPORT	|HcdMdd_CreateMemoryObject|
	IMPORT	|MmMapIoSpace|
	IMPORT	|RegOpenKeyExW|
	IMPORT	|GetIrqByDevice|
	IMPORT	|__rt_udiv|

  00068			 AREA	 |.pdata|, PDATA
|$T45642| DCD	|$LN32@Initialize|
	DCD	0x40017004

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@KKKMKIHE@?$AAH?$AAc?$AAd?$AAC?$AAa?$AAp?$AAa?$AAb?$AAi?$AAl?$AAi?$AAt?$AAy?$AA?$AA@| DCB "H"
	DCB	0x0, "c", 0x0, "d", 0x0, "C", 0x0, "a", 0x0, "p", 0x0, "a"
	DCB	0x0, "b", 0x0, "i", 0x0, "l", 0x0, "i", 0x0, "t", 0x0, "y"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@IEKBDFBE@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AA?9?$AA?5?$AAH?$AAc?$AAd?$AAM?$AAd?$AAd?$AA_?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAH?$AAc?$AAd?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?5?$AAF?$AAa@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "H", 0x0, "c", 0x0, "d", 0x0, "M", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "C", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "H", 0x0, "c", 0x0, "d", 0x0, "O", 0x0, "b"
	DCB	0x0, "j", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@MAIJNCNN@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AA?9?$AA?5?$AAH?$AAc?$AAd?$AAM?$AAd?$AAd?$AA_?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "H", 0x0, "c", 0x0, "d", 0x0, "M", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "C", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "M", 0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r"
	DCB	0x0, "y", 0x0, "O", 0x0, "b", 0x0, "j", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@HMEHJEEO@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAS?$AAY?$AAS?$AAI?$AAN?$AAT?$AAR?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "I", 0x0, "N", 0x0, "T", 0x0, "R"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@GFJBIFDL@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAq?$AAu?$AAi?$AAr?$AAe?$AA?5?$AAI?$AAR?$AAQ?$AA_?$AAU?$AAS?$AAB?$AA_?$AAH@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "a", 0x0, "q", 0x0, "u"
	DCB	0x0, "i", 0x0, "r", 0x0, "e", 0x0, " ", 0x0, "I", 0x0, "R"
	DCB	0x0, "Q", 0x0, "_", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "_"
	DCB	0x0, "H", 0x0, "G", 0x0, "E", 0x0, "N", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@DGIPKAGD@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "p"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, "."
	DCB	0x0, ".", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@IFCIGIJA@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAE?$AAH?$AAC?$AAI?$AA?3?$AAG?$AAe?$AAt?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg@| DCB "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, "E", 0x0, "H", 0x0, "C"
	DCB	0x0, "I", 0x0, ":", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "R"
	DCB	0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "r"
	DCB	0x0, "y", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "f", 0x0, "i"
	DCB	0x0, "g", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g", 0x0, "O"
	DCB	0x0, "p", 0x0, "e", 0x0, "n", 0x0, "K", 0x0, "e", 0x0, "y"
	DCB	0x0, "E", 0x0, "x", 0x0, "(", 0x0, "%", 0x0, "s", 0x0, ")"
	DCB	0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00be8			 AREA	 |.text|, CODE, ARM

  00be8		 |InitializeEHCI| PROC

; 610  : {

  00be8		 |$LN32@Initialize|
  00be8	e1a0c00d	 mov         r12, sp
  00bec	e92d0003	 stmdb       sp!, {r0, r1}
  00bf0	e92d5000	 stmdb       sp!, {r12, lr}
  00bf4	e24dd098	 sub         sp, sp, #0x98
  00bf8		 |$M45639|

; 611  :     LPVOID  pobMem = NULL;

  00bf8	e3a03000	 mov         r3, #0
  00bfc	e58d3020	 str         r3, [sp, #0x20]

; 612  :     LPVOID  pobEHCD = NULL;

  00c00	e3a03000	 mov         r3, #0
  00c04	e58d300c	 str         r3, [sp, #0xC]

; 613  :     DWORD   dwHPPhysicalMemSize = 0;

  00c08	e3a03000	 mov         r3, #0
  00c0c	e58d3018	 str         r3, [sp, #0x18]

; 614  :     HKEY    hKey;
; 615  :     DWORD   dwIrq = 0;

  00c10	e3a03000	 mov         r3, #0
  00c14	e58d301c	 str         r3, [sp, #0x1C]

; 616  : 	PHYSICAL_ADDRESS pa;
; 617  : 
; 618  : 	// Retrieve IRQ number
; 619  : 	dwIrq = GetIrqByDevice(pPddObject->USBHInfo.EHCIDevice, NULL);

  00c18	e3a01000	 mov         r1, #0
  00c1c	e59d30a0	 ldr         r3, [sp, #0xA0]
  00c20	e2833fa5	 add         r3, r3, #0xA5, 30
  00c24	e5930000	 ldr         r0, [r3]
  00c28	eb000000	 bl          GetIrqByDevice
  00c2c	e58d0054	 str         r0, [sp, #0x54]
  00c30	e59d3054	 ldr         r3, [sp, #0x54]
  00c34	e58d301c	 str         r3, [sp, #0x1C]

; 620  : 
; 621  :     Configure_EHCI(pPddObject, FALSE);

  00c38	e3a01000	 mov         r1, #0
  00c3c	e59d00a0	 ldr         r0, [sp, #0xA0]
  00c40	eb000000	 bl          Configure_EHCI

; 622  : 
; 623  :     if (RegOpenKeyEx(HKEY_LOCAL_MACHINE, szDriverRegKey, 0, 0, &hKey)!= ERROR_SUCCESS)

  00c44	e28d3008	 add         r3, sp, #8
  00c48	e58d3000	 str         r3, [sp]
  00c4c	e3a03000	 mov         r3, #0
  00c50	e3a02000	 mov         r2, #0
  00c54	e59d10a4	 ldr         r1, [sp, #0xA4]
  00c58	e3a0010a	 mov         r0, #0xA, 2
  00c5c	eb000000	 bl          RegOpenKeyExW
  00c60	e58d0058	 str         r0, [sp, #0x58]
  00c64	e59d3058	 ldr         r3, [sp, #0x58]
  00c68	e3530000	 cmp         r3, #0
  00c6c	0a00000e	 beq         |$LN15@Initialize|

; 624  :     {
; 625  :         DEBUGMSG(ZONE_ERROR, (TEXT("InitializeEHCI:GetRegistryConfig RegOpenKeyEx(%s) failed\r\n"), szDriverRegKey));

  00c70	e59f3514	 ldr         r3, [pc, #0x514]
  00c74	e5933440	 ldr         r3, [r3, #0x440]
  00c78	e3130901	 tst         r3, #1, 18
  00c7c	0a000005	 beq         |$LN18@Initialize|
  00c80	e59d10a4	 ldr         r1, [sp, #0xA4]
  00c84	e59f0518	 ldr         r0, [pc, #0x518]
  00c88	eb000000	 bl          NKDbgPrintfW
  00c8c	e3a03001	 mov         r3, #1
  00c90	e58d305c	 str         r3, [sp, #0x5C]
  00c94	ea000001	 b           |$LN19@Initialize|
  00c98		 |$LN18@Initialize|
  00c98	e3a03000	 mov         r3, #0
  00c9c	e58d305c	 str         r3, [sp, #0x5C]
  00ca0		 |$LN19@Initialize|

; 626  :         return FALSE;

  00ca0	e3a03000	 mov         r3, #0
  00ca4	e58d3034	 str         r3, [sp, #0x34]
  00ca8	ea000131	 b           |$LN16@Initialize|
  00cac		 |$LN15@Initialize|

; 627  :     }
; 628  : 
; 629  :     // Map register base to virtual address
; 630  : 	pa.QuadPart = pPddObject->USBHInfo.EHCI_REGS_PA;

  00cac	e59d30a0	 ldr         r3, [sp, #0xA0]
  00cb0	e2833e2b	 add         r3, r3, #0x2B, 28
  00cb4	e5933000	 ldr         r3, [r3]
  00cb8	e58d3010	 str         r3, [sp, #0x10]
  00cbc	e3a03000	 mov         r3, #0
  00cc0	e58d3014	 str         r3, [sp, #0x14]

; 631  :     pPddObject->ioPortBase  =(UCHAR *)MmMapIoSpace(pa, OMAP_EHCI_REGS_SIZE, FALSE);

  00cc4	e3a03000	 mov         r3, #0
  00cc8	e3a02b01	 mov         r2, #1, 22
  00ccc	e59d0010	 ldr         r0, [sp, #0x10]
  00cd0	e59d1014	 ldr         r1, [sp, #0x14]
  00cd4	eb000000	 bl          MmMapIoSpace
  00cd8	e58d0060	 str         r0, [sp, #0x60]
  00cdc	e59d30a0	 ldr         r3, [sp, #0xA0]
  00ce0	e2832f8f	 add         r2, r3, #0x8F, 30
  00ce4	e59d3060	 ldr         r3, [sp, #0x60]
  00ce8	e5823000	 str         r3, [r2]

; 632  :     if (pPddObject->ioPortBase == NULL)

  00cec	e59d30a0	 ldr         r3, [sp, #0xA0]
  00cf0	e2833f8f	 add         r3, r3, #0x8F, 30
  00cf4	e5933000	 ldr         r3, [r3]
  00cf8	e3530000	 cmp         r3, #0
  00cfc	1a000010	 bne         |$LN14@Initialize|

; 633  :     {
; 634  :         DEBUGMSG(ZONE_ERROR, (TEXT("EHCI: Failed to map 0x%x...\r\n"), pPddObject->USBHInfo.EHCI_REGS_PA));

  00d00	e59f3484	 ldr         r3, [pc, #0x484]
  00d04	e5933440	 ldr         r3, [r3, #0x440]
  00d08	e3130901	 tst         r3, #1, 18
  00d0c	0a000007	 beq         |$LN20@Initialize|
  00d10	e59d30a0	 ldr         r3, [sp, #0xA0]
  00d14	e2833e2b	 add         r3, r3, #0x2B, 28
  00d18	e5931000	 ldr         r1, [r3]
  00d1c	e59f047c	 ldr         r0, [pc, #0x47C]
  00d20	eb000000	 bl          NKDbgPrintfW
  00d24	e3a03001	 mov         r3, #1
  00d28	e58d3064	 str         r3, [sp, #0x64]
  00d2c	ea000001	 b           |$LN21@Initialize|
  00d30		 |$LN20@Initialize|
  00d30	e3a03000	 mov         r3, #0
  00d34	e58d3064	 str         r3, [sp, #0x64]
  00d38		 |$LN21@Initialize|

; 635  :         return FALSE;

  00d38	e3a03000	 mov         r3, #0
  00d3c	e58d3034	 str         r3, [sp, #0x34]
  00d40	ea00010b	 b           |$LN16@Initialize|
  00d44		 |$LN14@Initialize|

; 636  :     }
; 637  : 
; 638  :     // Request SYSINTR for interrupt
; 639  :     if (!KernelIoControl(IOCTL_HAL_REQUEST_SYSINTR,
; 640  :         &dwIrq,
; 641  :         sizeof(dwIrq),
; 642  :         &pPddObject->dwSysIntr,
; 643  :         sizeof(pPddObject->dwSysIntr),
; 644  :         NULL))

  00d44	e3a03000	 mov         r3, #0
  00d48	e58d3004	 str         r3, [sp, #4]
  00d4c	e3a03004	 mov         r3, #4
  00d50	e58d3000	 str         r3, [sp]
  00d54	e59d30a0	 ldr         r3, [sp, #0xA0]
  00d58	e2833d09	 add         r3, r3, #9, 26
  00d5c	e3a02004	 mov         r2, #4
  00d60	e28d101c	 add         r1, sp, #0x1C
  00d64	e59f0430	 ldr         r0, [pc, #0x430]
  00d68	eb000000	 bl          KernelIoControl
  00d6c	e58d0068	 str         r0, [sp, #0x68]
  00d70	e59d3068	 ldr         r3, [sp, #0x68]
  00d74	e3530000	 cmp         r3, #0
  00d78	1a00000d	 bne         |$LN13@Initialize|

; 645  :     {
; 646  :         DEBUGMSG(ZONE_ERROR, (TEXT("EHCI: Failed to aquire IRQ_USB_HGEN")));

  00d7c	e59f3408	 ldr         r3, [pc, #0x408]
  00d80	e5933440	 ldr         r3, [r3, #0x440]
  00d84	e3130901	 tst         r3, #1, 18
  00d88	0a000004	 beq         |$LN22@Initialize|
  00d8c	e59f0404	 ldr         r0, [pc, #0x404]
  00d90	eb000000	 bl          NKDbgPrintfW
  00d94	e3a03001	 mov         r3, #1
  00d98	e58d306c	 str         r3, [sp, #0x6C]
  00d9c	ea000001	 b           |$LN23@Initialize|
  00da0		 |$LN22@Initialize|
  00da0	e3a03000	 mov         r3, #0
  00da4	e58d306c	 str         r3, [sp, #0x6C]
  00da8		 |$LN23@Initialize|

; 647  :         return FALSE;

  00da8	e3a03000	 mov         r3, #0
  00dac	e58d3034	 str         r3, [sp, #0x34]
  00db0	ea0000ef	 b           |$LN16@Initialize|
  00db4		 |$LN13@Initialize|

; 648  :     }
; 649  : 
; 650  :     DEBUGMSG(ZONE_INFO, (L"EHCI: SYSINTR %d\r\n", pPddObject->dwSysIntr));

  00db4	e59f33d0	 ldr         r3, [pc, #0x3D0]
  00db8	e5933440	 ldr         r3, [r3, #0x440]
  00dbc	e3130b01	 tst         r3, #1, 22
  00dc0	0a000007	 beq         |$LN24@Initialize|
  00dc4	e59d30a0	 ldr         r3, [sp, #0xA0]
  00dc8	e2833d09	 add         r3, r3, #9, 26
  00dcc	e5931000	 ldr         r1, [r3]
  00dd0	e59f03bc	 ldr         r0, [pc, #0x3BC]
  00dd4	eb000000	 bl          NKDbgPrintfW
  00dd8	e3a03001	 mov         r3, #1
  00ddc	e58d3070	 str         r3, [sp, #0x70]
  00de0	ea000001	 b           |$LN25@Initialize|
  00de4		 |$LN24@Initialize|
  00de4	e3a03000	 mov         r3, #0
  00de8	e58d3070	 str         r3, [sp, #0x70]
  00dec		 |$LN25@Initialize|

; 651  : 
; 652  :     ////////////////////////////////////////////////////////////////////////////////////////////////////
; 653  :     // The PDD can supply a buffer of contiguous physical memory here, or can let the
; 654  :     // MDD try to allocate the memory from system RAM.  We will use the HalAllocateCommonBuffer()
; 655  :     // API to allocate the memory and bus controller physical addresses and pass this information
; 656  :     // into the MDD.
; 657  :     ////////////////////////////////////////////////////////////////////////////////////////////////////
; 658  :     if (GetRegistryPhysicalMemSize(szDriverRegKey, &pPddObject->dwPhysicalMemSize))

  00dec	e59d30a0	 ldr         r3, [sp, #0xA0]
  00df0	e2831018	 add         r1, r3, #0x18
  00df4	e59d00a4	 ldr         r0, [sp, #0xA4]
  00df8	eb000000	 bl          GetRegistryPhysicalMemSize
  00dfc	e58d0074	 str         r0, [sp, #0x74]
  00e00	e59d3074	 ldr         r3, [sp, #0x74]
  00e04	e3530000	 cmp         r3, #0
  00e08	0a000024	 beq         |$LN12@Initialize|

; 659  :     {
; 660  :         // A quarter for High priority Memory.
; 661  :         dwHPPhysicalMemSize = pPddObject->dwPhysicalMemSize/4;

  00e0c	e59d30a0	 ldr         r3, [sp, #0xA0]
  00e10	e2833018	 add         r3, r3, #0x18
  00e14	e5931000	 ldr         r1, [r3]
  00e18	e3a00004	 mov         r0, #4
  00e1c	eb000000	 bl          __rt_udiv
  00e20	e58d0018	 str         r0, [sp, #0x18]

; 662  :         // Align with page size.
; 663  :         pPddObject->dwPhysicalMemSize =(pPddObject->dwPhysicalMemSize + PAGE_SIZE -1) & ~(PAGE_SIZE -1);

  00e24	e59d30a0	 ldr         r3, [sp, #0xA0]
  00e28	e2832018	 add         r2, r3, #0x18
  00e2c	e3e03b0d	 mvn         r3, #0xD, 22
  00e30	e22330fb	 eor         r3, r3, #0xFB
  00e34	e5922000	 ldr         r2, [r2]
  00e38	e5933000	 ldr         r3, [r3]
  00e3c	e0823003	 add         r3, r2, r3
  00e40	e2432001	 sub         r2, r3, #1
  00e44	e3e03b0d	 mvn         r3, #0xD, 22
  00e48	e22330fb	 eor         r3, r3, #0xFB
  00e4c	e5933000	 ldr         r3, [r3]
  00e50	e2433001	 sub         r3, r3, #1
  00e54	e1e03003	 mvn         r3, r3
  00e58	e0022003	 and         r2, r2, r3
  00e5c	e59d30a0	 ldr         r3, [sp, #0xA0]
  00e60	e2833018	 add         r3, r3, #0x18
  00e64	e5832000	 str         r2, [r3]

; 664  :         dwHPPhysicalMemSize =((dwHPPhysicalMemSize +  PAGE_SIZE -1) & ~(PAGE_SIZE -1));

  00e68	e3e03b0d	 mvn         r3, #0xD, 22
  00e6c	e22330fb	 eor         r3, r3, #0xFB
  00e70	e59d2018	 ldr         r2, [sp, #0x18]
  00e74	e5933000	 ldr         r3, [r3]
  00e78	e0823003	 add         r3, r2, r3
  00e7c	e2432001	 sub         r2, r3, #1
  00e80	e3e03b0d	 mvn         r3, #0xD, 22
  00e84	e22330fb	 eor         r3, r3, #0xFB
  00e88	e5933000	 ldr         r3, [r3]
  00e8c	e2433001	 sub         r3, r3, #1
  00e90	e1e03003	 mvn         r3, r3
  00e94	e0023003	 and         r3, r2, r3
  00e98	e58d3018	 str         r3, [sp, #0x18]

; 665  :     }
; 666  :     else

  00e9c	ea000003	 b           |$LN11@Initialize|
  00ea0		 |$LN12@Initialize|

; 667  :     {
; 668  :         pPddObject->dwPhysicalMemSize = 0;

  00ea0	e59d30a0	 ldr         r3, [sp, #0xA0]
  00ea4	e2832018	 add         r2, r3, #0x18
  00ea8	e3a03000	 mov         r3, #0
  00eac	e5823000	 str         r3, [r2]
  00eb0		 |$LN11@Initialize|

; 669  :     }
; 670  : 
; 671  :     if (pPddObject->dwPhysicalMemSize < gcTotalAvailablePhysicalMemory)

  00eb0	e59d30a0	 ldr         r3, [sp, #0xA0]
  00eb4	e2833018	 add         r3, r3, #0x18
  00eb8	e5933000	 ldr         r3, [r3]
  00ebc	e3530802	 cmp         r3, #2, 16
  00ec0	2a000005	 bcs         |$LN10@Initialize|

; 672  :     {
; 673  :         pPddObject->dwPhysicalMemSize = gcTotalAvailablePhysicalMemory;

  00ec4	e59d30a0	 ldr         r3, [sp, #0xA0]
  00ec8	e2832018	 add         r2, r3, #0x18
  00ecc	e3a03802	 mov         r3, #2, 16
  00ed0	e5823000	 str         r3, [r2]

; 674  :         dwHPPhysicalMemSize = gcHighPriorityPhysicalMemory;

  00ed4	e3a03902	 mov         r3, #2, 18
  00ed8	e58d3018	 str         r3, [sp, #0x18]
  00edc		 |$LN10@Initialize|

; 675  :     }
; 676  : 
; 677  : #if (EHCI_DMA_ALLOC)
; 678  :     // Fill out the DMA adapter descriptor.  The bus address and type is irrelevant
; 679  :     pPddObject->AdapterObject.ObjectSize    = sizeof(DMA_ADAPTER_OBJECT);
; 680  :     pPddObject->AdapterObject.InterfaceType = PCIBus;
; 681  :     pPddObject->AdapterObject.BusNumber     = 0;
; 682  : 
; 683  : 
; 684  :     if ((pPddObject->pvVirtualAddress = HalAllocateCommonBuffer(&pPddObject->AdapterObject, pPddObject->dwPhysicalMemSize, &pPddObject->LogicalAddress, FALSE)) == NULL)
; 685  :     {
; 686  :         DEBUGMSG(ZONE_ERROR, (TEXT("EHCI - HalAllocateCommonBuffer Failed 0x%x\r\n"), GetLastError()));
; 687  :         goto InitializeEHCI_Error;
; 688  :     }
; 689  : 
; 690  : 
; 691  :     pobMem = HcdMdd_CreateMemoryObject(pPddObject->dwPhysicalMemSize, dwHPPhysicalMemSize, (PUCHAR) pPddObject->pvVirtualAddress, (PUCHAR) pPddObject->LogicalAddress.LowPart);
; 692  : #endif
; 693  : 
; 694  : 	pobMem = HcdMdd_CreateMemoryObject(pPddObject->dwPhysicalMemSize, dwHPPhysicalMemSize, NULL, NULL);

  00edc	e3a03000	 mov         r3, #0
  00ee0	e3a02000	 mov         r2, #0
  00ee4	e59d1018	 ldr         r1, [sp, #0x18]
  00ee8	e59d00a0	 ldr         r0, [sp, #0xA0]
  00eec	e2800018	 add         r0, r0, #0x18
  00ef0	e5900000	 ldr         r0, [r0]
  00ef4	eb000000	 bl          HcdMdd_CreateMemoryObject
  00ef8	e58d0078	 str         r0, [sp, #0x78]
  00efc	e59d3078	 ldr         r3, [sp, #0x78]
  00f00	e58d3020	 str         r3, [sp, #0x20]

; 695  :     if (!pobMem)

  00f04	e59d3020	 ldr         r3, [sp, #0x20]
  00f08	e3530000	 cmp         r3, #0
  00f0c	1a00000e	 bne         |$LN9@Initialize|

; 696  :     {
; 697  :         DEBUGMSG(ZONE_ERROR, (TEXT("EHCI - HcdMdd_CreateMemoryObject Failed 0x%x\r\n"), GetLastError()));

  00f10	e59f3274	 ldr         r3, [pc, #0x274]
  00f14	e5933440	 ldr         r3, [r3, #0x440]
  00f18	e3130901	 tst         r3, #1, 18
  00f1c	0a000007	 beq         |$LN26@Initialize|
  00f20	eb000000	 bl          GetLastError
  00f24	e58d007c	 str         r0, [sp, #0x7C]
  00f28	e59d107c	 ldr         r1, [sp, #0x7C]
  00f2c	e59f025c	 ldr         r0, [pc, #0x25C]
  00f30	eb000000	 bl          NKDbgPrintfW
  00f34	e3a03001	 mov         r3, #1
  00f38	e58d3080	 str         r3, [sp, #0x80]
  00f3c	ea000001	 b           |$LN27@Initialize|
  00f40		 |$LN26@Initialize|
  00f40	e3a03000	 mov         r3, #0
  00f44	e58d3080	 str         r3, [sp, #0x80]
  00f48		 |$LN27@Initialize|

; 698  :         goto InitializeEHCI_Error;

  00f48	ea000048	 b           |$InitializeEHCI_Error$45170|
  00f4c		 |$LN9@Initialize|

; 699  :     }
; 700  : 
; 701  : 	pobEHCD = HcdMdd_CreateHcdObject(pPddObject, pobMem, szDriverRegKey, pPddObject->ioPortBase, pPddObject->dwSysIntr);

  00f4c	e59d30a0	 ldr         r3, [sp, #0xA0]
  00f50	e2833d09	 add         r3, r3, #9, 26
  00f54	e5933000	 ldr         r3, [r3]
  00f58	e58d3000	 str         r3, [sp]
  00f5c	e59d30a0	 ldr         r3, [sp, #0xA0]
  00f60	e2833f8f	 add         r3, r3, #0x8F, 30
  00f64	e5933000	 ldr         r3, [r3]
  00f68	e59d20a4	 ldr         r2, [sp, #0xA4]
  00f6c	e59d1020	 ldr         r1, [sp, #0x20]
  00f70	e59d00a0	 ldr         r0, [sp, #0xA0]
  00f74	eb000000	 bl          HcdMdd_CreateHcdObject
  00f78	e58d0084	 str         r0, [sp, #0x84]
  00f7c	e59d3084	 ldr         r3, [sp, #0x84]
  00f80	e58d300c	 str         r3, [sp, #0xC]

; 702  :     if (!pobEHCD)

  00f84	e59d300c	 ldr         r3, [sp, #0xC]
  00f88	e3530000	 cmp         r3, #0
  00f8c	1a00000e	 bne         |$LN8@Initialize|

; 703  :     {
; 704  :         DEBUGMSG(ZONE_ERROR, (TEXT("EHCI - HcdMdd_CreateHcdObject Failed 0x%x\r\n"), GetLastError()));

  00f90	e59f31f4	 ldr         r3, [pc, #0x1F4]
  00f94	e5933440	 ldr         r3, [r3, #0x440]
  00f98	e3130901	 tst         r3, #1, 18
  00f9c	0a000007	 beq         |$LN28@Initialize|
  00fa0	eb000000	 bl          GetLastError
  00fa4	e58d0088	 str         r0, [sp, #0x88]
  00fa8	e59d1088	 ldr         r1, [sp, #0x88]
  00fac	e59f01d4	 ldr         r0, [pc, #0x1D4]
  00fb0	eb000000	 bl          NKDbgPrintfW
  00fb4	e3a03001	 mov         r3, #1
  00fb8	e58d308c	 str         r3, [sp, #0x8C]
  00fbc	ea000001	 b           |$LN29@Initialize|
  00fc0		 |$LN28@Initialize|
  00fc0	e3a03000	 mov         r3, #0
  00fc4	e58d308c	 str         r3, [sp, #0x8C]
  00fc8		 |$LN29@Initialize|

; 705  :         goto InitializeEHCI_Error;

  00fc8	ea000028	 b           |$InitializeEHCI_Error$45170|
  00fcc		 |$LN8@Initialize|

; 706  :     }
; 707  : 
; 708  :     pPddObject->lpvMemoryObject  = pobMem;

  00fcc	e59d30a0	 ldr         r3, [sp, #0xA0]
  00fd0	e283200c	 add         r2, r3, #0xC
  00fd4	e59d3020	 ldr         r3, [sp, #0x20]
  00fd8	e5823000	 str         r3, [r2]

; 709  :     pPddObject->lpvEHCDMddObject = pobEHCD;

  00fdc	e59d30a0	 ldr         r3, [sp, #0xA0]
  00fe0	e2832010	 add         r2, r3, #0x10
  00fe4	e59d300c	 ldr         r3, [sp, #0xC]
  00fe8	e5823000	 str         r3, [r2]

; 710  : 
; 711  :     _tcsncpy(pPddObject->szDriverRegKey, szDriverRegKey, MAX_PATH);

  00fec	e3a02f41	 mov         r2, #0x41, 30
  00ff0	e59d10a4	 ldr         r1, [sp, #0xA4]
  00ff4	e59d30a0	 ldr         r3, [sp, #0xA0]
  00ff8	e2830034	 add         r0, r3, #0x34
  00ffc	eb000000	 bl          wcsncpy

; 712  : 
; 713  :     if (hKey != NULL)

  01000	e59d3008	 ldr         r3, [sp, #8]
  01004	e3530000	 cmp         r3, #0
  01008	0a000013	 beq         |$LN7@Initialize|

; 714  :     {
; 715  :         DWORD dwCapability;
; 716  :         DWORD dwType;
; 717  :         DWORD dwLength = sizeof(DWORD);

  0100c	e3a03004	 mov         r3, #4
  01010	e58d302c	 str         r3, [sp, #0x2C]

; 718  :         if (RegQueryValueEx(hKey, HCD_CAPABILITY_VALNAME, 0, &dwType, (PUCHAR)&dwCapability, &dwLength) == ERROR_SUCCESS)

  01014	e28d302c	 add         r3, sp, #0x2C
  01018	e58d3004	 str         r3, [sp, #4]
  0101c	e28d3028	 add         r3, sp, #0x28
  01020	e58d3000	 str         r3, [sp]
  01024	e28d3024	 add         r3, sp, #0x24
  01028	e3a02000	 mov         r2, #0
  0102c	e59f1150	 ldr         r1, [pc, #0x150]
  01030	e59d0008	 ldr         r0, [sp, #8]
  01034	eb000000	 bl          RegQueryValueExW
  01038	e58d0090	 str         r0, [sp, #0x90]
  0103c	e59d3090	 ldr         r3, [sp, #0x90]
  01040	e3530000	 cmp         r3, #0
  01044	1a000002	 bne         |$LN6@Initialize|

; 719  :         {
; 720  :             HcdMdd_SetCapability(pobEHCD, dwCapability);

  01048	e59d1028	 ldr         r1, [sp, #0x28]
  0104c	e59d000c	 ldr         r0, [sp, #0xC]
  01050	eb000000	 bl          HcdMdd_SetCapability
  01054		 |$LN6@Initialize|

; 721  :         }
; 722  :         RegCloseKey(hKey);

  01054	e59d0008	 ldr         r0, [sp, #8]
  01058	eb000000	 bl          RegCloseKey
  0105c		 |$LN7@Initialize|

; 723  :     }
; 724  : 
; 725  :     ExternalDeviceDeassertReset(pPddObject);

  0105c	e59d00a0	 ldr         r0, [sp, #0xA0]
  01060	eb000000	 bl          ExternalDeviceDeassertReset

; 726  :     return TRUE;

  01064	e3a03001	 mov         r3, #1
  01068	e58d3034	 str         r3, [sp, #0x34]
  0106c	ea000040	 b           |$LN16@Initialize|
  01070		 |$InitializeEHCI_Error$45170|

; 727  : 
; 728  : InitializeEHCI_Error:
; 729  :     if (pPddObject->IsrHandle)

  01070	e59d30a0	 ldr         r3, [sp, #0xA0]
  01074	e2833f96	 add         r3, r3, #0x96, 30
  01078	e5933000	 ldr         r3, [r3]
  0107c	e3530000	 cmp         r3, #0
  01080	0a000007	 beq         |$LN5@Initialize|

; 730  :     {
; 731  :         FreeIntChainHandler(pPddObject->IsrHandle);

  01084	e59d30a0	 ldr         r3, [sp, #0xA0]
  01088	e2833f96	 add         r3, r3, #0x96, 30
  0108c	e5930000	 ldr         r0, [r3]
  01090	eb000000	 bl          FreeIntChainHandler

; 732  :         pPddObject->IsrHandle = NULL;

  01094	e59d30a0	 ldr         r3, [sp, #0xA0]
  01098	e2832f96	 add         r2, r3, #0x96, 30
  0109c	e3a03000	 mov         r3, #0
  010a0	e5823000	 str         r3, [r2]
  010a4		 |$LN5@Initialize|

; 733  :     }
; 734  : 
; 735  :     if (pobEHCD)

  010a4	e59d300c	 ldr         r3, [sp, #0xC]
  010a8	e3530000	 cmp         r3, #0
  010ac	0a000001	 beq         |$LN4@Initialize|

; 736  :         HcdMdd_DestroyHcdObject(pobEHCD);

  010b0	e59d000c	 ldr         r0, [sp, #0xC]
  010b4	eb000000	 bl          HcdMdd_DestroyHcdObject
  010b8		 |$LN4@Initialize|

; 737  :     if (pobMem)

  010b8	e59d3020	 ldr         r3, [sp, #0x20]
  010bc	e3530000	 cmp         r3, #0
  010c0	0a000001	 beq         |$LN3@Initialize|

; 738  :         HcdMdd_DestroyMemoryObject(pobMem);

  010c4	e59d0020	 ldr         r0, [sp, #0x20]
  010c8	eb000000	 bl          HcdMdd_DestroyMemoryObject
  010cc		 |$LN3@Initialize|

; 739  :     if (pPddObject->pvVirtualAddress)

  010cc	e59d30a0	 ldr         r3, [sp, #0xA0]
  010d0	e2833014	 add         r3, r3, #0x14
  010d4	e5933000	 ldr         r3, [r3]
  010d8	e3530000	 cmp         r3, #0
  010dc	0a000011	 beq         |$LN2@Initialize|

; 740  :         HalFreeCommonBuffer(&pPddObject->AdapterObject, pPddObject->dwPhysicalMemSize, pPddObject->LogicalAddress, pPddObject->pvVirtualAddress, FALSE);

  010e0	e3a03000	 mov         r3, #0
  010e4	e58d3004	 str         r3, [sp, #4]
  010e8	e59d30a0	 ldr         r3, [sp, #0xA0]
  010ec	e2833014	 add         r3, r3, #0x14
  010f0	e5933000	 ldr         r3, [r3]
  010f4	e58d3000	 str         r3, [sp]
  010f8	e59d30a0	 ldr         r3, [sp, #0xA0]
  010fc	e2833020	 add         r3, r3, #0x20
  01100	e58d3094	 str         r3, [sp, #0x94]
  01104	e59d3094	 ldr         r3, [sp, #0x94]
  01108	e5932000	 ldr         r2, [r3]
  0110c	e5933004	 ldr         r3, [r3, #4]
  01110	e59d10a0	 ldr         r1, [sp, #0xA0]
  01114	e2811018	 add         r1, r1, #0x18
  01118	e5911000	 ldr         r1, [r1]
  0111c	e59d00a0	 ldr         r0, [sp, #0xA0]
  01120	e2800028	 add         r0, r0, #0x28
  01124	eb000000	 bl          HalFreeCommonBuffer
  01128		 |$LN2@Initialize|

; 741  : 
; 742  :     pPddObject->lpvMemoryObject = NULL;

  01128	e59d30a0	 ldr         r3, [sp, #0xA0]
  0112c	e283200c	 add         r2, r3, #0xC
  01130	e3a03000	 mov         r3, #0
  01134	e5823000	 str         r3, [r2]

; 743  :     pPddObject->lpvEHCDMddObject = NULL;

  01138	e59d30a0	 ldr         r3, [sp, #0xA0]
  0113c	e2832010	 add         r2, r3, #0x10
  01140	e3a03000	 mov         r3, #0
  01144	e5823000	 str         r3, [r2]

; 744  :     pPddObject->pvVirtualAddress = NULL;

  01148	e59d30a0	 ldr         r3, [sp, #0xA0]
  0114c	e2832014	 add         r2, r3, #0x14
  01150	e3a03000	 mov         r3, #0
  01154	e5823000	 str         r3, [r2]

; 745  :     if (hKey != NULL)

  01158	e59d3008	 ldr         r3, [sp, #8]
  0115c	e3530000	 cmp         r3, #0
  01160	0a000001	 beq         |$LN1@Initialize|

; 746  :         RegCloseKey(hKey);

  01164	e59d0008	 ldr         r0, [sp, #8]
  01168	eb000000	 bl          RegCloseKey
  0116c		 |$LN1@Initialize|

; 747  : 
; 748  :     return FALSE;

  0116c	e3a03000	 mov         r3, #0
  01170	e58d3034	 str         r3, [sp, #0x34]
  01174		 |$LN16@Initialize|

; 749  : }

  01174	e59d0034	 ldr         r0, [sp, #0x34]
  01178	e28dd098	 add         sp, sp, #0x98
  0117c	e89d6000	 ldmia       sp, {sp, lr}
  01180	e12fff1e	 bx          lr
  01184		 |$LN33@Initialize|
  01184		 |$LN34@Initialize|
  01184	00000000	 DCD         |??_C@_1BM@KKKMKIHE@?$AAH?$AAc?$AAd?$AAC?$AAa?$AAp?$AAa?$AAb?$AAi?$AAl?$AAi?$AAt?$AAy?$AA?$AA@|
  01188		 |$LN35@Initialize|
  01188	00000000	 DCD         |??_C@_1FI@IEKBDFBE@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AA?9?$AA?5?$AAH?$AAc?$AAd?$AAM?$AAd?$AAd?$AA_?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAH?$AAc?$AAd?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?5?$AAF?$AAa@|
  0118c		 |$LN36@Initialize|
  0118c	00000000	 DCD         |dpCurSettings|
  01190		 |$LN37@Initialize|
  01190	00000000	 DCD         |??_C@_1FO@MAIJNCNN@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AA?9?$AA?5?$AAH?$AAc?$AAd?$AAM?$AAd?$AAd?$AA_?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt@|
  01194		 |$LN38@Initialize|
  01194	00000000	 DCD         |??_C@_1CG@HMEHJEEO@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAS?$AAY?$AAS?$AAI?$AAN?$AAT?$AAR?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  01198		 |$LN39@Initialize|
  01198	00000000	 DCD         |??_C@_1EI@GFJBIFDL@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAq?$AAu?$AAi?$AAr?$AAe?$AA?5?$AAI?$AAR?$AAQ?$AA_?$AAU?$AAS?$AAB?$AA_?$AAH@|
  0119c		 |$LN40@Initialize|
  0119c	01010098	 DCD         0x1010098
  011a0		 |$LN41@Initialize|
  011a0	00000000	 DCD         |??_C@_1DM@DGIPKAGD@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  011a4		 |$LN42@Initialize|
  011a4	00000000	 DCD         |??_C@_1HG@IFCIGIJA@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAE?$AAH?$AAC?$AAI?$AA?3?$AAG?$AAe?$AAt?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg@|
  011a8		 |$M45640|

			 ENDP  ; |InitializeEHCI|

	EXPORT	|??_C@_1IA@KLIIDMJE@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAe?$AAP?$AAR?$AAC?$AAM?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAm?$AAm@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@BDCKHJKG@?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AAU?$AAS?$AAB?$AAT?$AAL?$AAL?$AA_?$AAS?$AAY?$AAS?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?5?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@MFPHDPLF@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAT?$AAL?$AAL?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?4?$AA?4?$AA?4?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@HJNLGMND@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAP?$AAH?$AAY?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAn?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@NCLNLDHP@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AA?9?$AA?5?$AA?5?$AAU?$AAH?$AAH?$AA?5?$AAS?$AAY?$AAS?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@BBJINPCJ@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AA?9?$AA?5?$AA?5?$AAU?$AAH?$AAH?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAt?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@CNBIPCFC@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AA?9?$AA?5?$AA?5?$AAU?$AAS?$AAB?$AA_?$AAT?$AAL?$AAL?$AA?5?$AA1?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAt?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5@| [ DATA ] ; `string'
	IMPORT	|CreateThread|
	IMPORT	|MmUnmapIoSpace|
	IMPORT	|SOCEhciConfigure|

  00070			 AREA	 |.pdata|, PDATA
|$T45676| DCD	|$LN55@Configure_|
	DCD	0x4001d204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IA@KLIIDMJE@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAe?$AAP?$AAR?$AAC?$AAM?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAm?$AAm@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "f", 0x0, "i", 0x0, "g"
	DCB	0x0, "u", 0x0, "r", 0x0, "e", 0x0, "P", 0x0, "R", 0x0, "C"
	DCB	0x0, "M", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "m"
	DCB	0x0, "m", 0x0, "a", 0x0, "p", 0x0, " ", 0x0, "O", 0x0, "M"
	DCB	0x0, "A", 0x0, "P", 0x0, "_", 0x0, "P", 0x0, "R", 0x0, "C"
	DCB	0x0, "M", 0x0, "_", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "H"
	DCB	0x0, "O", 0x0, "S", 0x0, "T", 0x0, "_", 0x0, "C", 0x0, "M"
	DCB	0x0, "_", 0x0, "R", 0x0, "E", 0x0, "G", 0x0, "S", 0x0, "_"
	DCB	0x0, "P", 0x0, "A", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@BDCKHJKG@?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AAU?$AAS?$AAB?$AAT?$AAL?$AAL?$AA_?$AAS?$AAY?$AAS?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?5?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx@| DCB "#"
	DCB	0x0, "#", 0x0, "#", 0x0, "#", 0x0, "#", 0x0, "#", 0x0, "#"
	DCB	0x0, "#", 0x0, "#", 0x0, "#", 0x0, "U", 0x0, "S", 0x0, "B"
	DCB	0x0, "T", 0x0, "L", 0x0, "L", 0x0, "_", 0x0, "S", 0x0, "Y"
	DCB	0x0, "S", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, " ", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@MFPHDPLF@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAT?$AAL?$AAL?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?4?$AA?4?$AA?4?$AA?$AN@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "T"
	DCB	0x0, "L", 0x0, "L", 0x0, " ", 0x0, "M", 0x0, "o", 0x0, "d"
	DCB	0x0, "e", 0x0, " ", 0x0, "P", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "r", 0x0, "t", 0x0, ".", 0x0, ".", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@HJNLGMND@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAP?$AAH?$AAY?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAn?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "P"
	DCB	0x0, "H", 0x0, "Y", 0x0, " ", 0x0, "M", 0x0, "o", 0x0, "d"
	DCB	0x0, "e", 0x0, " ", 0x0, "P", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "d", 0x0, "o"
	DCB	0x0, "n", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@NCLNLDHP@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AA?9?$AA?5?$AA?5?$AAU?$AAH?$AAH?$AA?5?$AAS?$AAY?$AAS?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, " ", 0x0, "U", 0x0, "H", 0x0, "H", 0x0, " ", 0x0, "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T"
	DCB	0x0, "U", 0x0, "S", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@BBJINPCJ@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AA?9?$AA?5?$AA?5?$AAU?$AAH?$AAH?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAt?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, " ", 0x0, "U", 0x0, "H", 0x0, "H", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "T"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@CNBIPCFC@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AA?9?$AA?5?$AA?5?$AAU?$AAS?$AAB?$AA_?$AAT?$AAL?$AAL?$AA?5?$AA1?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAt?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, " ", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "_", 0x0, "T"
	DCB	0x0, "L", 0x0, "L", 0x0, " ", 0x0, "1", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "T"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  011a8			 AREA	 |.text|, CODE, ARM

  011a8		 |Configure_EHCI| PROC

; 368  : {

  011a8		 |$LN55@Configure_|
  011a8	e1a0c00d	 mov         r12, sp
  011ac	e92d0003	 stmdb       sp!, {r0, r1}
  011b0	e92d5000	 stmdb       sp!, {r12, lr}
  011b4	e24dd080	 sub         sp, sp, #0x80
  011b8		 |$M45673|

; 369  :     BOOL rv													= TRUE;

  011b8	e3a03001	 mov         r3, #1
  011bc	e58d302c	 str         r3, [sp, #0x2C]

; 370  : 	DWORD dwStartTickCount									= 0;

  011c0	e3a03000	 mov         r3, #0
  011c4	e58d3030	 str         r3, [sp, #0x30]

; 371  :     PHYSICAL_ADDRESS pa;
; 372  : 	DWORD dwCnt												= 0;

  011c8	e3a03000	 mov         r3, #0
  011cc	e58d301c	 str         r3, [sp, #0x1C]

; 373  : 	DWORD dwHostConfig										= 0;

  011d0	e3a03000	 mov         r3, #0
  011d4	e58d3018	 str         r3, [sp, #0x18]

; 374  :     OMAP_USB_TLL_REGS* pOMAP_USB_TLL_REGS					= NULL;

  011d8	e3a03000	 mov         r3, #0
  011dc	e58d3020	 str         r3, [sp, #0x20]

; 375  :     OMAP_UHH_REGS* pUHHRegs									= NULL;

  011e0	e3a03000	 mov         r3, #0
  011e4	e58d3014	 str         r3, [sp, #0x14]

; 376  :     DWORD StartingTickCount									= 0;

  011e8	e3a03000	 mov         r3, #0
  011ec	e58d3034	 str         r3, [sp, #0x34]

; 377  : 	BOOL bPortTLLmode[NUM_PORTS];
; 378  : 
; 379  : 	// Map registers
; 380  : 	pa.QuadPart = pPddObject->USBHInfo.UHH_REGS_PA;

  011f0	e59d3088	 ldr         r3, [sp, #0x88]
  011f4	e2833faa	 add         r3, r3, #0xAA, 30
  011f8	e5933000	 ldr         r3, [r3]
  011fc	e58d3024	 str         r3, [sp, #0x24]
  01200	e3a03000	 mov         r3, #0
  01204	e58d3028	 str         r3, [sp, #0x28]

; 381  :     pUHHRegs    =(OMAP_UHH_REGS *)MmMapIoSpace(pa, sizeof(OMAP_UHH_REGS), FALSE);

  01208	e3a03000	 mov         r3, #0
  0120c	e3a02048	 mov         r2, #0x48
  01210	e59d0024	 ldr         r0, [sp, #0x24]
  01214	e59d1028	 ldr         r1, [sp, #0x28]
  01218	eb000000	 bl          MmMapIoSpace
  0121c	e58d0044	 str         r0, [sp, #0x44]
  01220	e59d3044	 ldr         r3, [sp, #0x44]
  01224	e58d3014	 str         r3, [sp, #0x14]

; 382  : 
; 383  : 	pa.QuadPart = pPddObject->USBHInfo.USBTLL_REGS_PA;

  01228	e59d3088	 ldr         r3, [sp, #0x88]
  0122c	e2833fab	 add         r3, r3, #0xAB, 30
  01230	e5933000	 ldr         r3, [r3]
  01234	e58d3024	 str         r3, [sp, #0x24]
  01238	e3a03000	 mov         r3, #0
  0123c	e58d3028	 str         r3, [sp, #0x28]

; 384  :     pOMAP_USB_TLL_REGS =(OMAP_USB_TLL_REGS*)MmMapIoSpace(pa, sizeof(OMAP_USB_TLL_REGS), FALSE);

  01240	e3a03000	 mov         r3, #0
  01244	e3a0204c	 mov         r2, #0x4C
  01248	e59d0024	 ldr         r0, [sp, #0x24]
  0124c	e59d1028	 ldr         r1, [sp, #0x28]
  01250	eb000000	 bl          MmMapIoSpace
  01254	e58d0048	 str         r0, [sp, #0x48]
  01258	e59d3048	 ldr         r3, [sp, #0x48]
  0125c	e58d3020	 str         r3, [sp, #0x20]

; 385  : 
; 386  : 	// Perform SOC specific configuration
; 387  : 	SOCEhciConfigure(pPddObject);

  01260	e59d0088	 ldr         r0, [sp, #0x88]
  01264	eb000000	 bl          SOCEhciConfigure

; 388  : 
; 389  : 	// put external USB devices in reset before enabling EHCI controller.
; 390  :     // Some USB transceivers require to be held in reset before USB host supplies ULPI clock.
; 391  :     ExternalDeviceAssertReset(pPddObject, bCalledFromPowerUp);

  01268	e59d108c	 ldr         r1, [sp, #0x8C]
  0126c	e59d0088	 ldr         r0, [sp, #0x88]
  01270	eb000000	 bl          ExternalDeviceAssertReset

; 392  : 
; 393  :     if (pOMAP_USB_TLL_REGS)

  01274	e59d3020	 ldr         r3, [sp, #0x20]
  01278	e3530000	 cmp         r3, #0
  0127c	0a000158	 beq         |$LN34@Configure_|

; 394  :     {
; 395  :         /* start a soft reset on usb tll*/
; 396  :         pOMAP_USB_TLL_REGS->USBTLL_SYSCONFIG = USBTLL_SYSCONFIG_SOFTRESET | USBTLL_SYSCONFIG_ENAWAKEUP | USBTLL_SYSCONFIG_SIDLEMODE(SIDLE_IGNORE)| USBTLL_SYSCONFIG_CACTIVITY;

  01280	e59d3020	 ldr         r3, [sp, #0x20]
  01284	e2832010	 add         r2, r3, #0x10
  01288	e3a03c01	 mov         r3, #1, 24
  0128c	e383300e	 orr         r3, r3, #0xE
  01290	e5823000	 str         r3, [r2]

; 397  :         dwStartTickCount = GetTickCount();

  01294	eb000000	 bl          GetTickCount
  01298	e58d004c	 str         r0, [sp, #0x4C]
  0129c	e59d304c	 ldr         r3, [sp, #0x4C]
  012a0	e58d3030	 str         r3, [sp, #0x30]
  012a4		 |$LN33@Configure_|

; 398  :         while (!(pOMAP_USB_TLL_REGS->USBTLL_SYSSTATUS & USBTLL_SYSSTATUS_RESETDONE))

  012a4	e59d3020	 ldr         r3, [sp, #0x20]
  012a8	e2833014	 add         r3, r3, #0x14
  012ac	e5933000	 ldr         r3, [r3]
  012b0	e3130001	 tst         r3, #1
  012b4	1a000019	 bne         |$LN32@Configure_|

; 399  :         {
; 400  :             if (GetTickCount() - dwStartTickCount > EHCI_PRCM_TIMEOUT)

  012b8	eb000000	 bl          GetTickCount
  012bc	e58d0050	 str         r0, [sp, #0x50]
  012c0	e59d2050	 ldr         r2, [sp, #0x50]
  012c4	e59d3030	 ldr         r3, [sp, #0x30]
  012c8	e0423003	 sub         r3, r2, r3
  012cc	e3530ffa	 cmp         r3, #0xFA, 30
  012d0	9a00000e	 bls         |$LN31@Configure_|

; 401  :             {
; 402  :                 DEBUGMSG(ZONE_INFO, (TEXT("EHCI -  USB_TLL 1 reset Timeout 0x%x\r\n"), pOMAP_USB_TLL_REGS->USBTLL_SYSSTATUS));

  012d4	e59f35f8	 ldr         r3, [pc, #0x5F8]
  012d8	e5933440	 ldr         r3, [r3, #0x440]
  012dc	e3130b01	 tst         r3, #1, 22
  012e0	0a000007	 beq         |$LN37@Configure_|
  012e4	e59d3020	 ldr         r3, [sp, #0x20]
  012e8	e2833014	 add         r3, r3, #0x14
  012ec	e5931000	 ldr         r1, [r3]
  012f0	e59f05f4	 ldr         r0, [pc, #0x5F4]
  012f4	eb000000	 bl          NKDbgPrintfW
  012f8	e3a03001	 mov         r3, #1
  012fc	e58d3054	 str         r3, [sp, #0x54]
  01300	ea000001	 b           |$LN38@Configure_|
  01304		 |$LN37@Configure_|
  01304	e3a03000	 mov         r3, #0
  01308	e58d3054	 str         r3, [sp, #0x54]
  0130c		 |$LN38@Configure_|

; 403  :                 break;

  0130c	ea000003	 b           |$LN32@Configure_|
  01310		 |$LN31@Configure_|

; 404  :             }
; 405  :             DelayMilliSeconds(1, bCalledFromPowerUp);

  01310	e59d108c	 ldr         r1, [sp, #0x8C]
  01314	e3a00001	 mov         r0, #1
  01318	eb000000	 bl          DelayMilliSeconds

; 406  :         }

  0131c	eaffffe0	 b           |$LN33@Configure_|
  01320		 |$LN32@Configure_|

; 407  : 
; 408  :         pUHHRegs->SYSCONFIG |= UHH_SYSCONFIG_AUTOIDLE | UHH_SYSCONFIG_SOFTRESET;

  01320	e59d3014	 ldr         r3, [sp, #0x14]
  01324	e2833010	 add         r3, r3, #0x10
  01328	e5933000	 ldr         r3, [r3]
  0132c	e3832003	 orr         r2, r3, #3
  01330	e59d3014	 ldr         r3, [sp, #0x14]
  01334	e2833010	 add         r3, r3, #0x10
  01338	e5832000	 str         r2, [r3]
  0133c		 |$LN30@Configure_|

; 409  :         while (!(pUHHRegs->SYSSTATUS & UHH_SYSSTATUS_RESETDONE))

  0133c	e59d3014	 ldr         r3, [sp, #0x14]
  01340	e2833014	 add         r3, r3, #0x14
  01344	e5933000	 ldr         r3, [r3]
  01348	e3130001	 tst         r3, #1
  0134c	1a000019	 bne         |$LN29@Configure_|

; 410  :         {
; 411  :             if (GetTickCount() - dwStartTickCount > EHCI_PRCM_TIMEOUT)

  01350	eb000000	 bl          GetTickCount
  01354	e58d0058	 str         r0, [sp, #0x58]
  01358	e59d2058	 ldr         r2, [sp, #0x58]
  0135c	e59d3030	 ldr         r3, [sp, #0x30]
  01360	e0423003	 sub         r3, r2, r3
  01364	e3530ffa	 cmp         r3, #0xFA, 30
  01368	9a00000e	 bls         |$LN28@Configure_|

; 412  :             {
; 413  :                 DEBUGMSG(ZONE_INFO, (TEXT("EHCI -  UHH reset Timeout 0x%x\r\n"), pUHHRegs->SYSSTATUS));

  0136c	e59f3560	 ldr         r3, [pc, #0x560]
  01370	e5933440	 ldr         r3, [r3, #0x440]
  01374	e3130b01	 tst         r3, #1, 22
  01378	0a000007	 beq         |$LN39@Configure_|
  0137c	e59d3014	 ldr         r3, [sp, #0x14]
  01380	e2833014	 add         r3, r3, #0x14
  01384	e5931000	 ldr         r1, [r3]
  01388	e59f0558	 ldr         r0, [pc, #0x558]
  0138c	eb000000	 bl          NKDbgPrintfW
  01390	e3a03001	 mov         r3, #1
  01394	e58d305c	 str         r3, [sp, #0x5C]
  01398	ea000001	 b           |$LN40@Configure_|
  0139c		 |$LN39@Configure_|
  0139c	e3a03000	 mov         r3, #0
  013a0	e58d305c	 str         r3, [sp, #0x5C]
  013a4		 |$LN40@Configure_|

; 414  :                 break;

  013a4	ea000003	 b           |$LN29@Configure_|
  013a8		 |$LN28@Configure_|

; 415  :             }
; 416  :             DelayMilliSeconds(1, bCalledFromPowerUp);

  013a8	e59d108c	 ldr         r1, [sp, #0x8C]
  013ac	e3a00001	 mov         r0, #1
  013b0	eb000000	 bl          DelayMilliSeconds

; 417  :         }

  013b4	eaffffe0	 b           |$LN30@Configure_|
  013b8		 |$LN29@Configure_|

; 418  :         DEBUGMSG(ZONE_INFO, (TEXT("EHCI -  UHH SYSSTATUS 0x%x\r\n"), pUHHRegs->SYSSTATUS));

  013b8	e59f3514	 ldr         r3, [pc, #0x514]
  013bc	e5933440	 ldr         r3, [r3, #0x440]
  013c0	e3130b01	 tst         r3, #1, 22
  013c4	0a000007	 beq         |$LN41@Configure_|
  013c8	e59d3014	 ldr         r3, [sp, #0x14]
  013cc	e2833014	 add         r3, r3, #0x14
  013d0	e5931000	 ldr         r1, [r3]
  013d4	e59f0508	 ldr         r0, [pc, #0x508]
  013d8	eb000000	 bl          NKDbgPrintfW
  013dc	e3a03001	 mov         r3, #1
  013e0	e58d3060	 str         r3, [sp, #0x60]
  013e4	ea000001	 b           |$LN42@Configure_|
  013e8		 |$LN41@Configure_|
  013e8	e3a03000	 mov         r3, #0
  013ec	e58d3060	 str         r3, [sp, #0x60]
  013f0		 |$LN42@Configure_|

; 419  :         pUHHRegs->SYSCONFIG &= ~UHH_SYSCONFIG_SOFTRESET;

  013f0	e59d3014	 ldr         r3, [sp, #0x14]
  013f4	e2833010	 add         r3, r3, #0x10
  013f8	e5932000	 ldr         r2, [r3]
  013fc	e3e03002	 mvn         r3, #2
  01400	e0022003	 and         r2, r2, r3
  01404	e59d3014	 ldr         r3, [sp, #0x14]
  01408	e2833010	 add         r3, r3, #0x10
  0140c	e5832000	 str         r2, [r3]

; 420  : 
; 421  :         pUHHRegs->SYSCONFIG = UHH_SYSCONFIG_ENAWAKEUP |
; 422  :                               UHH_SYSCONFIG_SIDLEMODE(SIDLE_SMART) |
; 423  :                               UHH_SYSCONFIG_MIDLEMODE(MIDLE_SMART);

  01410	e59d3014	 ldr         r3, [sp, #0x14]
  01414	e2832010	 add         r2, r3, #0x10
  01418	e3a03a02	 mov         r3, #2, 20
  0141c	e3833014	 orr         r3, r3, #0x14
  01420	e5823000	 str         r3, [r2]

; 424  : 
; 425  :         for (dwCnt = 0; dwCnt < NUM_PORTS; dwCnt++)

  01424	e3a03000	 mov         r3, #0
  01428	e58d301c	 str         r3, [sp, #0x1C]
  0142c	ea000002	 b           |$LN27@Configure_|
  01430		 |$LN26@Configure_|
  01430	e59d301c	 ldr         r3, [sp, #0x1C]
  01434	e2833001	 add         r3, r3, #1
  01438	e58d301c	 str         r3, [sp, #0x1C]
  0143c		 |$LN27@Configure_|
  0143c	e59d301c	 ldr         r3, [sp, #0x1C]
  01440	e3530003	 cmp         r3, #3
  01444	2a000007	 bcs         |$LN25@Configure_|

; 426  :             bPortTLLmode[dwCnt] = FALSE;

  01448	e59d101c	 ldr         r1, [sp, #0x1C]
  0144c	e3a03004	 mov         r3, #4
  01450	e0020391	 mul         r2, r1, r3
  01454	e28d3008	 add         r3, sp, #8
  01458	e0832002	 add         r2, r3, r2
  0145c	e3a03000	 mov         r3, #0
  01460	e5823000	 str         r3, [r2]
  01464	eafffff1	 b           |$LN26@Configure_|
  01468		 |$LN25@Configure_|

; 427  : 
; 428  :         if (pPddObject->port1Mode == USB_PORT_TLL_MODE)

  01468	e59d3088	 ldr         r3, [sp, #0x88]
  0146c	e2833e26	 add         r3, r3, #0x26, 28
  01470	e5933000	 ldr         r3, [r3]
  01474	e3530002	 cmp         r3, #2
  01478	1a000004	 bne         |$LN24@Configure_|

; 429  :         {
; 430  :             dwHostConfig |= UHH_HOSTCONFIG_P1_ULPI_BYPASS;

  0147c	e59d3018	 ldr         r3, [sp, #0x18]
  01480	e3833001	 orr         r3, r3, #1
  01484	e58d3018	 str         r3, [sp, #0x18]

; 431  :             bPortTLLmode[0] = TRUE;

  01488	e3a03001	 mov         r3, #1
  0148c	e58d3008	 str         r3, [sp, #8]
  01490		 |$LN24@Configure_|

; 432  :         }
; 433  : 
; 434  :         // bypass bits were added for ports 2 and 3
; 435  :         if (pPddObject->port2Mode == USB_PORT_TLL_MODE)

  01490	e59d3088	 ldr         r3, [sp, #0x88]
  01494	e2833f99	 add         r3, r3, #0x99, 30
  01498	e5933000	 ldr         r3, [r3]
  0149c	e3530002	 cmp         r3, #2
  014a0	1a000004	 bne         |$LN23@Configure_|

; 436  :         {
; 437  :             dwHostConfig |= UHH_HOSTCONFIG_P2_ULPI_BYPASS;

  014a4	e59d3018	 ldr         r3, [sp, #0x18]
  014a8	e3833b02	 orr         r3, r3, #2, 22
  014ac	e58d3018	 str         r3, [sp, #0x18]

; 438  :             bPortTLLmode[1] = TRUE;

  014b0	e3a03001	 mov         r3, #1
  014b4	e58d300c	 str         r3, [sp, #0xC]
  014b8		 |$LN23@Configure_|

; 439  :         }
; 440  : 
; 441  :         if (pPddObject->port3Mode == USB_PORT_TLL_MODE)

  014b8	e59d3088	 ldr         r3, [sp, #0x88]
  014bc	e2833f9a	 add         r3, r3, #0x9A, 30
  014c0	e5933000	 ldr         r3, [r3]
  014c4	e3530002	 cmp         r3, #2
  014c8	1a000004	 bne         |$LN22@Configure_|

; 442  :         {
; 443  :             dwHostConfig |= UHH_HOSTCONFIG_P3_ULPI_BYPASS;

  014cc	e59d3018	 ldr         r3, [sp, #0x18]
  014d0	e3833a01	 orr         r3, r3, #1, 20
  014d4	e58d3018	 str         r3, [sp, #0x18]

; 444  :             bPortTLLmode[2] = TRUE;

  014d8	e3a03001	 mov         r3, #1
  014dc	e58d3010	 str         r3, [sp, #0x10]
  014e0		 |$LN22@Configure_|

; 445  :         }
; 446  : 
; 447  :         dwHostConfig |= UHH_HOSTCONFIG_ENA_INCR4 |
; 448  :             UHH_HOSTCONFIG_ENA_INCR8 | UHH_HOSTCONFIG_ENA_INCR16;

  014e0	e59d3018	 ldr         r3, [sp, #0x18]
  014e4	e383301c	 orr         r3, r3, #0x1C
  014e8	e58d3018	 str         r3, [sp, #0x18]

; 449  : 
; 450  :         pUHHRegs->HOSTCONFIG = dwHostConfig;

  014ec	e59d3014	 ldr         r3, [sp, #0x14]
  014f0	e2832040	 add         r2, r3, #0x40
  014f4	e59d3018	 ldr         r3, [sp, #0x18]
  014f8	e5823000	 str         r3, [r2]

; 451  : 
; 452  :         // Not sure what this polling loop is for...
; 453  :         if (pPddObject->port1Mode == USB_PORT_PHY_MODE)

  014fc	e59d3088	 ldr         r3, [sp, #0x88]
  01500	e2833e26	 add         r3, r3, #0x26, 28
  01504	e5933000	 ldr         r3, [r3]
  01508	e3530001	 cmp         r3, #1
  0150c	1a000010	 bne         |$LN21@Configure_|
  01510		 |$LN20@Configure_|

; 454  :         {
; 455  :             while (pUHHRegs->HOSTCONFIG & UHH_HOSTCONFIG_P1_ULPI_BYPASS);

  01510	e59d3014	 ldr         r3, [sp, #0x14]
  01514	e2833040	 add         r3, r3, #0x40
  01518	e5933000	 ldr         r3, [r3]
  0151c	e3130001	 tst         r3, #1
  01520	0a000000	 beq         |$LN19@Configure_|
  01524	eafffff9	 b           |$LN20@Configure_|
  01528		 |$LN19@Configure_|

; 456  : 
; 457  :             DEBUGMSG(ZONE_INFO, (TEXT("EHCI: PHY Mode Polling done\r\n")));

  01528	e59f33a4	 ldr         r3, [pc, #0x3A4]
  0152c	e5933440	 ldr         r3, [r3, #0x440]
  01530	e3130b01	 tst         r3, #1, 22
  01534	0a000004	 beq         |$LN43@Configure_|
  01538	e59f03a0	 ldr         r0, [pc, #0x3A0]
  0153c	eb000000	 bl          NKDbgPrintfW
  01540	e3a03001	 mov         r3, #1
  01544	e58d3064	 str         r3, [sp, #0x64]
  01548	ea000001	 b           |$LN44@Configure_|
  0154c		 |$LN43@Configure_|
  0154c	e3a03000	 mov         r3, #0
  01550	e58d3064	 str         r3, [sp, #0x64]
  01554		 |$LN44@Configure_|
  01554		 |$LN21@Configure_|

; 458  :         }
; 459  : 
; 460  :         if ((pPddObject->port1Mode == USB_PORT_TLL_MODE) ||
; 461  :             (pPddObject->port2Mode == USB_PORT_TLL_MODE) ||
; 462  :             (pPddObject->port3Mode == USB_PORT_TLL_MODE)
; 463  :             )

  01554	e59d3088	 ldr         r3, [sp, #0x88]
  01558	e2833e26	 add         r3, r3, #0x26, 28
  0155c	e5933000	 ldr         r3, [r3]
  01560	e3530002	 cmp         r3, #2
  01564	0a000009	 beq         |$LN17@Configure_|
  01568	e59d3088	 ldr         r3, [sp, #0x88]
  0156c	e2833f99	 add         r3, r3, #0x99, 30
  01570	e5933000	 ldr         r3, [r3]
  01574	e3530002	 cmp         r3, #2
  01578	0a000004	 beq         |$LN17@Configure_|
  0157c	e59d3088	 ldr         r3, [sp, #0x88]
  01580	e2833f9a	 add         r3, r3, #0x9A, 30
  01584	e5933000	 ldr         r3, [r3]
  01588	e3530002	 cmp         r3, #2
  0158c	1a000072	 bne         |$LN18@Configure_|
  01590		 |$LN17@Configure_|

; 464  :         {
; 465  :             DEBUGMSG(ZONE_INFO, (TEXT("EHCI: TLL Mode Polling start...\r\n")));

  01590	e59f333c	 ldr         r3, [pc, #0x33C]
  01594	e5933440	 ldr         r3, [r3, #0x440]
  01598	e3130b01	 tst         r3, #1, 22
  0159c	0a000004	 beq         |$LN45@Configure_|
  015a0	e59f0334	 ldr         r0, [pc, #0x334]
  015a4	eb000000	 bl          NKDbgPrintfW
  015a8	e3a03001	 mov         r3, #1
  015ac	e58d3068	 str         r3, [sp, #0x68]
  015b0	ea000001	 b           |$LN46@Configure_|
  015b4		 |$LN45@Configure_|
  015b4	e3a03000	 mov         r3, #0
  015b8	e58d3068	 str         r3, [sp, #0x68]
  015bc		 |$LN46@Configure_|

; 466  :             DEBUGMSG(ZONE_INFO, (TEXT("##########USBTLL_SYSSTATUS =0x%x\r\n"), pOMAP_USB_TLL_REGS->USBTLL_SYSSTATUS));

  015bc	e59f3310	 ldr         r3, [pc, #0x310]
  015c0	e5933440	 ldr         r3, [r3, #0x440]
  015c4	e3130b01	 tst         r3, #1, 22
  015c8	0a000007	 beq         |$LN47@Configure_|
  015cc	e59d3020	 ldr         r3, [sp, #0x20]
  015d0	e2833014	 add         r3, r3, #0x14
  015d4	e5931000	 ldr         r1, [r3]
  015d8	e59f02f8	 ldr         r0, [pc, #0x2F8]
  015dc	eb000000	 bl          NKDbgPrintfW
  015e0	e3a03001	 mov         r3, #1
  015e4	e58d306c	 str         r3, [sp, #0x6C]
  015e8	ea000001	 b           |$LN48@Configure_|
  015ec		 |$LN47@Configure_|
  015ec	e3a03000	 mov         r3, #0
  015f0	e58d306c	 str         r3, [sp, #0x6C]
  015f4		 |$LN48@Configure_|

; 467  : 
; 468  :             for (dwCnt = 0; dwCnt < NUM_PORTS; dwCnt++)

  015f4	e3a03000	 mov         r3, #0
  015f8	e58d301c	 str         r3, [sp, #0x1C]
  015fc	ea000002	 b           |$LN16@Configure_|
  01600		 |$LN15@Configure_|
  01600	e59d301c	 ldr         r3, [sp, #0x1C]
  01604	e2833001	 add         r3, r3, #1
  01608	e58d301c	 str         r3, [sp, #0x1C]
  0160c		 |$LN16@Configure_|
  0160c	e59d301c	 ldr         r3, [sp, #0x1C]
  01610	e3530003	 cmp         r3, #3
  01614	2a000018	 bcs         |$LN14@Configure_|

; 469  :             {
; 470  :                 if (bPortTLLmode[dwCnt] == TRUE)

  01618	e59d101c	 ldr         r1, [sp, #0x1C]
  0161c	e3a03004	 mov         r3, #4
  01620	e0020391	 mul         r2, r1, r3
  01624	e28d3008	 add         r3, sp, #8
  01628	e0833002	 add         r3, r3, r2
  0162c	e5933000	 ldr         r3, [r3]
  01630	e3530001	 cmp         r3, #1
  01634	1a00000f	 bne         |$LN13@Configure_|

; 471  :                     pOMAP_USB_TLL_REGS->TLL_CHANNEL_CONF[dwCnt] &=
; 472  :                              ~(USBTLL_CHANNEL_CONF_i_ULPIDDRMODE |
; 473  :                              USBTLL_CHANNEL_CONF_i_UTMIAUTOIDLE |
; 474  :                              USBTLL_CHANNEL_CONF_i_ULPIAUTOIDLE);

  01638	e59d3020	 ldr         r3, [sp, #0x20]
  0163c	e2831040	 add         r1, r3, #0x40
  01640	e59d201c	 ldr         r2, [sp, #0x1C]
  01644	e3a03004	 mov         r3, #4
  01648	e0030392	 mul         r3, r2, r3
  0164c	e0813003	 add         r3, r1, r3
  01650	e5932000	 ldr         r2, [r3]
  01654	e3e03c07	 mvn         r3, #7, 24
  01658	e0020003	 and         r0, r2, r3
  0165c	e59d101c	 ldr         r1, [sp, #0x1C]
  01660	e3a03004	 mov         r3, #4
  01664	e0020391	 mul         r2, r1, r3
  01668	e59d3020	 ldr         r3, [sp, #0x20]
  0166c	e2833040	 add         r3, r3, #0x40
  01670	e0833002	 add         r3, r3, r2
  01674	e5830000	 str         r0, [r3]
  01678		 |$LN13@Configure_|

; 475  :             }

  01678	eaffffe0	 b           |$LN15@Configure_|
  0167c		 |$LN14@Configure_|

; 476  : 
; 477  :             DEBUGMSG(ZONE_INFO, (TEXT("##########USBTLL_SYSSTATUS =0x%x\r\n"), pOMAP_USB_TLL_REGS->USBTLL_SYSSTATUS));

  0167c	e59f3250	 ldr         r3, [pc, #0x250]
  01680	e5933440	 ldr         r3, [r3, #0x440]
  01684	e3130b01	 tst         r3, #1, 22
  01688	0a000007	 beq         |$LN49@Configure_|
  0168c	e59d3020	 ldr         r3, [sp, #0x20]
  01690	e2833014	 add         r3, r3, #0x14
  01694	e5931000	 ldr         r1, [r3]
  01698	e59f0238	 ldr         r0, [pc, #0x238]
  0169c	eb000000	 bl          NKDbgPrintfW
  016a0	e3a03001	 mov         r3, #1
  016a4	e58d3070	 str         r3, [sp, #0x70]
  016a8	ea000001	 b           |$LN50@Configure_|
  016ac		 |$LN49@Configure_|
  016ac	e3a03000	 mov         r3, #0
  016b0	e58d3070	 str         r3, [sp, #0x70]
  016b4		 |$LN50@Configure_|

; 478  :             pOMAP_USB_TLL_REGS->TLL_SHARED_CONF |= USBTLL_SHARED_CONF_FCLK_IS_ON | USBTLL_SHARED_CONF_USB_DIVRATIO(1);

  016b4	e59d3020	 ldr         r3, [sp, #0x20]
  016b8	e2833030	 add         r3, r3, #0x30
  016bc	e5933000	 ldr         r3, [r3]
  016c0	e3832005	 orr         r2, r3, #5
  016c4	e59d3020	 ldr         r3, [sp, #0x20]
  016c8	e2833030	 add         r3, r3, #0x30
  016cc	e5832000	 str         r2, [r3]

; 479  : 
; 480  :             for (dwCnt = 0; dwCnt < NUM_PORTS; dwCnt++)

  016d0	e3a03000	 mov         r3, #0
  016d4	e58d301c	 str         r3, [sp, #0x1C]
  016d8	ea000002	 b           |$LN12@Configure_|
  016dc		 |$LN11@Configure_|
  016dc	e59d301c	 ldr         r3, [sp, #0x1C]
  016e0	e2833001	 add         r3, r3, #1
  016e4	e58d301c	 str         r3, [sp, #0x1C]
  016e8		 |$LN12@Configure_|
  016e8	e59d301c	 ldr         r3, [sp, #0x1C]
  016ec	e3530003	 cmp         r3, #3
  016f0	2a000019	 bcs         |$LN10@Configure_|

; 481  :             {
; 482  :                 if (bPortTLLmode[dwCnt] == TRUE)

  016f4	e59d101c	 ldr         r1, [sp, #0x1C]
  016f8	e3a03004	 mov         r3, #4
  016fc	e0020391	 mul         r2, r1, r3
  01700	e28d3008	 add         r3, sp, #8
  01704	e0833002	 add         r3, r3, r2
  01708	e5933000	 ldr         r3, [r3]
  0170c	e3530001	 cmp         r3, #1
  01710	1a000010	 bne         |$LN9@Configure_|

; 483  :                     pOMAP_USB_TLL_REGS->TLL_CHANNEL_CONF[dwCnt] |=
; 484  :                         USBTLL_CHANNEL_CONF_i_CHANEN | USBTLL_CHANNEL_CONF_i_ULPINOBITSTUFF;

  01714	e59d3020	 ldr         r3, [sp, #0x20]
  01718	e2831040	 add         r1, r3, #0x40
  0171c	e59d201c	 ldr         r2, [sp, #0x1C]
  01720	e3a03004	 mov         r3, #4
  01724	e0030392	 mul         r3, r2, r3
  01728	e0813003	 add         r3, r1, r3
  0172c	e5932000	 ldr         r2, [r3]
  01730	e3a03b02	 mov         r3, #2, 22
  01734	e3833001	 orr         r3, r3, #1
  01738	e1820003	 orr         r0, r2, r3
  0173c	e59d101c	 ldr         r1, [sp, #0x1C]
  01740	e3a03004	 mov         r3, #4
  01744	e0020391	 mul         r2, r1, r3
  01748	e59d3020	 ldr         r3, [sp, #0x20]
  0174c	e2833040	 add         r3, r3, #0x40
  01750	e0833002	 add         r3, r3, r2
  01754	e5830000	 str         r0, [r3]
  01758		 |$LN9@Configure_|

; 485  :             }

  01758	eaffffdf	 b           |$LN11@Configure_|
  0175c		 |$LN10@Configure_|
  0175c		 |$LN18@Configure_|

; 486  :         }
; 487  : 
; 488  :         if (pPddObject->port1Mode == USB_PORT_PHY_MODE)

  0175c	e59d3088	 ldr         r3, [sp, #0x88]
  01760	e2833e26	 add         r3, r3, #0x26, 28
  01764	e5933000	 ldr         r3, [r3]
  01768	e3530001	 cmp         r3, #1
  0176c	1a000003	 bne         |$LN8@Configure_|

; 489  :         {
; 490  :             pOMAP_USB_TLL_REGS->TLL_CHANNEL_CONF[0] =
; 491  :                 USBTLL_CHANNEL_CONF_i_ULPIOUTCLKMODE |
; 492  :                 USBTLL_CHANNEL_CONF_i_CHANMODE(2) |
; 493  :                 USBTLL_CHANNEL_CONF_i_CHANEN;

  01770	e59d3020	 ldr         r3, [sp, #0x20]
  01774	e2832040	 add         r2, r3, #0x40
  01778	e3a03085	 mov         r3, #0x85
  0177c	e5823000	 str         r3, [r2]
  01780		 |$LN8@Configure_|

; 494  :         }
; 495  : 
; 496  :         if (pPddObject->port2Mode == USB_PORT_PHY_MODE)

  01780	e59d3088	 ldr         r3, [sp, #0x88]
  01784	e2833f99	 add         r3, r3, #0x99, 30
  01788	e5933000	 ldr         r3, [r3]
  0178c	e3530001	 cmp         r3, #1
  01790	1a000003	 bne         |$LN7@Configure_|

; 497  :         {
; 498  :             pOMAP_USB_TLL_REGS->TLL_CHANNEL_CONF[1] =
; 499  :                 USBTLL_CHANNEL_CONF_i_ULPIOUTCLKMODE |
; 500  :                 USBTLL_CHANNEL_CONF_i_CHANMODE(2) |
; 501  :                 USBTLL_CHANNEL_CONF_i_CHANEN;

  01794	e59d3020	 ldr         r3, [sp, #0x20]
  01798	e2832044	 add         r2, r3, #0x44
  0179c	e3a03085	 mov         r3, #0x85
  017a0	e5823000	 str         r3, [r2]
  017a4		 |$LN7@Configure_|

; 502  :         }
; 503  : 
; 504  :         if (pPddObject->port3Mode == USB_PORT_PHY_MODE)

  017a4	e59d3088	 ldr         r3, [sp, #0x88]
  017a8	e2833f9a	 add         r3, r3, #0x9A, 30
  017ac	e5933000	 ldr         r3, [r3]
  017b0	e3530001	 cmp         r3, #1
  017b4	1a000003	 bne         |$LN6@Configure_|

; 505  :         {
; 506  :             pOMAP_USB_TLL_REGS->TLL_CHANNEL_CONF[2] =
; 507  :                 USBTLL_CHANNEL_CONF_i_ULPIOUTCLKMODE |
; 508  :                 USBTLL_CHANNEL_CONF_i_CHANMODE(2) |
; 509  :                 USBTLL_CHANNEL_CONF_i_CHANEN;

  017b8	e59d3020	 ldr         r3, [sp, #0x20]
  017bc	e2832048	 add         r2, r3, #0x48
  017c0	e3a03085	 mov         r3, #0x85
  017c4	e5823000	 str         r3, [r2]
  017c8		 |$LN6@Configure_|

; 510  :         }
; 511  : 
; 512  :         MmUnmapIoSpace((PVOID)pOMAP_USB_TLL_REGS, sizeof(OMAP_USB_TLL_REGS));

  017c8	e3a0104c	 mov         r1, #0x4C
  017cc	e59d0020	 ldr         r0, [sp, #0x20]
  017d0	eb000000	 bl          MmUnmapIoSpace

; 513  :         MmUnmapIoSpace((PVOID)pUHHRegs, sizeof(OMAP_UHH_REGS));

  017d4	e3a01048	 mov         r1, #0x48
  017d8	e59d0014	 ldr         r0, [sp, #0x14]
  017dc	eb000000	 bl          MmUnmapIoSpace

; 514  :     }
; 515  :     else

  017e0	ea00000c	 b           |$LN5@Configure_|
  017e4		 |$LN34@Configure_|

; 516  :     {
; 517  :         DEBUGMSG(ZONE_ERROR, (TEXT("EHCI - ConfigurePRCMFailed to mmap OMAP_PRCM_USBHOST_CM_REGS_PA")));

  017e4	e59f30e8	 ldr         r3, [pc, #0xE8]
  017e8	e5933440	 ldr         r3, [r3, #0x440]
  017ec	e3130901	 tst         r3, #1, 18
  017f0	0a000004	 beq         |$LN51@Configure_|
  017f4	e59f00d4	 ldr         r0, [pc, #0xD4]
  017f8	eb000000	 bl          NKDbgPrintfW
  017fc	e3a03001	 mov         r3, #1
  01800	e58d3074	 str         r3, [sp, #0x74]
  01804	ea000001	 b           |$LN52@Configure_|
  01808		 |$LN51@Configure_|
  01808	e3a03000	 mov         r3, #0
  0180c	e58d3074	 str         r3, [sp, #0x74]
  01810		 |$LN52@Configure_|

; 518  :         rv = FALSE;

  01810	e3a03000	 mov         r3, #0
  01814	e58d302c	 str         r3, [sp, #0x2C]
  01818		 |$LN5@Configure_|

; 519  :     }
; 520  : 
; 521  :     // power up ports
; 522  :     PortPowerControl(pPddObject, 1, TRUE);

  01818	e3a02001	 mov         r2, #1
  0181c	e3a01001	 mov         r1, #1
  01820	e59d0088	 ldr         r0, [sp, #0x88]
  01824	eb000000	 bl          PortPowerControl

; 523  :     PortPowerControl(pPddObject, 2, TRUE);

  01828	e3a02001	 mov         r2, #1
  0182c	e3a01002	 mov         r1, #2
  01830	e59d0088	 ldr         r0, [sp, #0x88]
  01834	eb000000	 bl          PortPowerControl

; 524  :     PortPowerControl(pPddObject, 3, TRUE);

  01838	e3a02001	 mov         r2, #1
  0183c	e3a01003	 mov         r1, #3
  01840	e59d0088	 ldr         r0, [sp, #0x88]
  01844	eb000000	 bl          PortPowerControl

; 525  : 
; 526  :     #if DUMP_REGS
; 527  :         dumpRegs(pPddObject);
; 528  :     #endif
; 529  : 
; 530  :     if (!bCalledFromPowerUp)

  01848	e59d308c	 ldr         r3, [sp, #0x8C]
  0184c	e3530000	 cmp         r3, #0
  01850	1a000009	 bne         |$LN4@Configure_|

; 531  :     {
; 532  :         CreateThread(NULL, 0, DelayExtDevDeassertReset, (LPVOID)pPddObject, 0, 0);

  01854	e3a03000	 mov         r3, #0
  01858	e58d3004	 str         r3, [sp, #4]
  0185c	e3a03000	 mov         r3, #0
  01860	e58d3000	 str         r3, [sp]
  01864	e59d3088	 ldr         r3, [sp, #0x88]
  01868	e59f205c	 ldr         r2, [pc, #0x5C]
  0186c	e3a01000	 mov         r1, #0
  01870	e3a00000	 mov         r0, #0
  01874	eb000000	 bl          CreateThread

; 533  :     }
; 534  :     else

  01878	ea00000d	 b           |$LN3@Configure_|
  0187c		 |$LN4@Configure_|

; 535  :     {
; 536  :         StartingTickCount = GetTickCount();

  0187c	eb000000	 bl          GetTickCount
  01880	e58d0078	 str         r0, [sp, #0x78]
  01884	e59d3078	 ldr         r3, [sp, #0x78]
  01888	e58d3034	 str         r3, [sp, #0x34]
  0188c		 |$LN2@Configure_|

; 537  :         while (GetTickCount() - StartingTickCount < 500)

  0188c	eb000000	 bl          GetTickCount
  01890	e58d007c	 str         r0, [sp, #0x7C]
  01894	e59d207c	 ldr         r2, [sp, #0x7C]
  01898	e59d3034	 ldr         r3, [sp, #0x34]
  0189c	e0423003	 sub         r3, r2, r3
  018a0	e3530f7d	 cmp         r3, #0x7D, 30
  018a4	2a000000	 bcs         |$LN1@Configure_|

; 538  :         {
; 539  :         }

  018a8	eafffff7	 b           |$LN2@Configure_|
  018ac		 |$LN1@Configure_|

; 540  :         ExternalDeviceDeassertReset(pPddObject);

  018ac	e59d0088	 ldr         r0, [sp, #0x88]
  018b0	eb000000	 bl          ExternalDeviceDeassertReset
  018b4		 |$LN3@Configure_|

; 541  :     }
; 542  : 
; 543  :     return rv;

  018b4	e59d302c	 ldr         r3, [sp, #0x2C]
  018b8	e58d3040	 str         r3, [sp, #0x40]

; 544  : }

  018bc	e59d0040	 ldr         r0, [sp, #0x40]
  018c0	e28dd080	 add         sp, sp, #0x80
  018c4	e89d6000	 ldmia       sp, {sp, lr}
  018c8	e12fff1e	 bx          lr
  018cc		 |$LN56@Configure_|
  018cc		 |$LN57@Configure_|
  018cc	00000000	 DCD         |DelayExtDevDeassertReset|
  018d0		 |$LN58@Configure_|
  018d0	00000000	 DCD         |??_C@_1IA@KLIIDMJE@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AA?9?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAe?$AAP?$AAR?$AAC?$AAM?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAm?$AAm@|
  018d4		 |$LN59@Configure_|
  018d4	00000000	 DCD         |dpCurSettings|
  018d8		 |$LN60@Configure_|
  018d8	00000000	 DCD         |??_C@_1EG@BDCKHJKG@?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AA?$CD?$AAU?$AAS?$AAB?$AAT?$AAL?$AAL?$AA_?$AAS?$AAY?$AAS?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?5?$AA?$DN?$AA0?$AAx?$AA?$CF?$AAx@|
  018dc		 |$LN61@Configure_|
  018dc	00000000	 DCD         |??_C@_1EE@MFPHDPLF@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAT?$AAL?$AAL?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?4?$AA?4?$AA?4?$AA?$AN@|
  018e0		 |$LN62@Configure_|
  018e0	00000000	 DCD         |??_C@_1DM@HJNLGMND@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAP?$AAH?$AAY?$AA?5?$AAM?$AAo?$AAd?$AAe?$AA?5?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAn?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  018e4		 |$LN63@Configure_|
  018e4	00000000	 DCD         |??_C@_1DK@NCLNLDHP@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AA?9?$AA?5?$AA?5?$AAU?$AAH?$AAH?$AA?5?$AAS?$AAY?$AAS?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  018e8		 |$LN64@Configure_|
  018e8	00000000	 DCD         |??_C@_1EC@BBJINPCJ@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AA?9?$AA?5?$AA?5?$AAU?$AAH?$AAH?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAt?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6@|
  018ec		 |$LN65@Configure_|
  018ec	00000000	 DCD         |??_C@_1EO@CNBIPCFC@?$AAE?$AAH?$AAC?$AAI?$AA?5?$AA?9?$AA?5?$AA?5?$AAU?$AAS?$AAB?$AA_?$AAT?$AAL?$AAL?$AA?5?$AA1?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAt?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5@|
  018f0		 |$M45674|

			 ENDP  ; |Configure_EHCI|


  00078			 AREA	 |.pdata|, PDATA
|$T45691| DCD	|$LN18@PortPowerC|
	DCD	0x40005904
; Function compile flags: /Odtp

  018f0			 AREA	 |.text|, CODE, ARM

  018f0		 |PortPowerControl| PROC

; 321  : {

  018f0		 |$LN18@PortPowerC|
  018f0	e1a0c00d	 mov         r12, sp
  018f4	e92d0007	 stmdb       sp!, {r0 - r2}
  018f8	e92d5000	 stmdb       sp!, {r12, lr}
  018fc	e24dd00c	 sub         sp, sp, #0xC
  01900		 |$M45688|

; 322  :     DWORD PortPwrLevel;
; 323  :     DWORD PortPwrGpio;
; 324  : 
; 325  :     switch (dwPortNumber)

  01900	e59d3018	 ldr         r3, [sp, #0x18]
  01904	e58d3008	 str         r3, [sp, #8]
  01908	e59d3008	 ldr         r3, [sp, #8]
  0190c	e3530001	 cmp         r3, #1
  01910	0a000006	 beq         |$LN11@PortPowerC|
  01914	e59d3008	 ldr         r3, [sp, #8]
  01918	e3530002	 cmp         r3, #2
  0191c	0a00000c	 beq         |$LN10@PortPowerC|
  01920	e59d3008	 ldr         r3, [sp, #8]
  01924	e3530003	 cmp         r3, #3
  01928	0a000012	 beq         |$LN9@PortPowerC|
  0192c	ea00001a	 b           |$LN8@PortPowerC|
  01930		 |$LN11@PortPowerC|

; 326  :     {
; 327  :         case 1:
; 328  :             PortPwrLevel = pPddObject->Port1PwrLevel;

  01930	e59d3014	 ldr         r3, [sp, #0x14]
  01934	e2833fa1	 add         r3, r3, #0xA1, 30
  01938	e5933000	 ldr         r3, [r3]
  0193c	e58d3004	 str         r3, [sp, #4]

; 329  :             PortPwrGpio = pPddObject->Port1PwrGpio;

  01940	e59d3014	 ldr         r3, [sp, #0x14]
  01944	e2833f9b	 add         r3, r3, #0x9B, 30
  01948	e5933000	 ldr         r3, [r3]
  0194c	e58d3000	 str         r3, [sp]

; 330  :             break;

  01950	ea000012	 b           |$LN12@PortPowerC|
  01954		 |$LN10@PortPowerC|

; 331  : 
; 332  :         case 2:
; 333  :             PortPwrLevel = pPddObject->Port2PwrLevel;

  01954	e59d3014	 ldr         r3, [sp, #0x14]
  01958	e2833fa2	 add         r3, r3, #0xA2, 30
  0195c	e5933000	 ldr         r3, [r3]
  01960	e58d3004	 str         r3, [sp, #4]

; 334  :             PortPwrGpio = pPddObject->Port2PwrGpio;

  01964	e59d3014	 ldr         r3, [sp, #0x14]
  01968	e2833e27	 add         r3, r3, #0x27, 28
  0196c	e5933000	 ldr         r3, [r3]
  01970	e58d3000	 str         r3, [sp]

; 335  :             break;

  01974	ea000009	 b           |$LN12@PortPowerC|
  01978		 |$LN9@PortPowerC|

; 336  : 
; 337  :         case 3:
; 338  :             PortPwrLevel = pPddObject->Port3PwrLevel;

  01978	e59d3014	 ldr         r3, [sp, #0x14]
  0197c	e2833fa3	 add         r3, r3, #0xA3, 30
  01980	e5933000	 ldr         r3, [r3]
  01984	e58d3004	 str         r3, [sp, #4]

; 339  :             PortPwrGpio = pPddObject->Port3PwrGpio;

  01988	e59d3014	 ldr         r3, [sp, #0x14]
  0198c	e2833f9d	 add         r3, r3, #0x9D, 30
  01990	e5933000	 ldr         r3, [r3]
  01994	e58d3000	 str         r3, [sp]

; 340  :             break;

  01998	ea000000	 b           |$LN12@PortPowerC|
  0199c		 |$LN8@PortPowerC|

; 341  : 
; 342  :         default:
; 343  :             return;

  0199c	ea000029	 b           |$LN14@PortPowerC|
  019a0		 |$LN12@PortPowerC|

; 344  :     }
; 345  : 
; 346  :     if (PortPwrGpio == -1)

  019a0	e59d3000	 ldr         r3, [sp]
  019a4	e3730001	 cmn         r3, #1
  019a8	1a000000	 bne         |$LN7@PortPowerC|

; 347  :         return;

  019ac	ea000025	 b           |$LN14@PortPowerC|
  019b0		 |$LN7@PortPowerC|

; 348  : 
; 349  :     GPIOSetMode(pPddObject->hGpio, PortPwrGpio, GPIO_DIR_OUTPUT);

  019b0	e3a02000	 mov         r2, #0
  019b4	e59d1000	 ldr         r1, [sp]
  019b8	e59d3014	 ldr         r3, [sp, #0x14]
  019bc	e2833e29	 add         r3, r3, #0x29, 28
  019c0	e5930000	 ldr         r0, [r3]
  019c4	eb000000	 bl          GPIOSetMode

; 350  : 
; 351  :     if (bPowerOn)

  019c8	e59d301c	 ldr         r3, [sp, #0x1C]
  019cc	e3530000	 cmp         r3, #0
  019d0	0a00000e	 beq         |$LN6@PortPowerC|

; 352  :     {
; 353  :         if (PortPwrLevel == 0)

  019d4	e59d3004	 ldr         r3, [sp, #4]
  019d8	e3530000	 cmp         r3, #0
  019dc	1a000005	 bne         |$LN5@PortPowerC|

; 354  :             GPIOClrBit(pPddObject->hGpio , PortPwrGpio);

  019e0	e59d1000	 ldr         r1, [sp]
  019e4	e59d3014	 ldr         r3, [sp, #0x14]
  019e8	e2833e29	 add         r3, r3, #0x29, 28
  019ec	e5930000	 ldr         r0, [r3]
  019f0	eb000000	 bl          GPIOClrBit

; 355  :         else

  019f4	ea000004	 b           |$LN4@PortPowerC|
  019f8		 |$LN5@PortPowerC|

; 356  :             GPIOSetBit(pPddObject->hGpio , PortPwrGpio);

  019f8	e59d1000	 ldr         r1, [sp]
  019fc	e59d3014	 ldr         r3, [sp, #0x14]
  01a00	e2833e29	 add         r3, r3, #0x29, 28
  01a04	e5930000	 ldr         r0, [r3]
  01a08	eb000000	 bl          GPIOSetBit
  01a0c		 |$LN4@PortPowerC|

; 357  :     }
; 358  :     else

  01a0c	ea00000d	 b           |$LN3@PortPowerC|
  01a10		 |$LN6@PortPowerC|

; 359  :     {
; 360  :         if (PortPwrLevel == 0)

  01a10	e59d3004	 ldr         r3, [sp, #4]
  01a14	e3530000	 cmp         r3, #0
  01a18	1a000005	 bne         |$LN2@PortPowerC|

; 361  :             GPIOSetBit(pPddObject->hGpio , PortPwrGpio);

  01a1c	e59d1000	 ldr         r1, [sp]
  01a20	e59d3014	 ldr         r3, [sp, #0x14]
  01a24	e2833e29	 add         r3, r3, #0x29, 28
  01a28	e5930000	 ldr         r0, [r3]
  01a2c	eb000000	 bl          GPIOSetBit

; 362  :         else

  01a30	ea000004	 b           |$LN1@PortPowerC|
  01a34		 |$LN2@PortPowerC|

; 363  :             GPIOClrBit(pPddObject->hGpio , PortPwrGpio);

  01a34	e59d1000	 ldr         r1, [sp]
  01a38	e59d3014	 ldr         r3, [sp, #0x14]
  01a3c	e2833e29	 add         r3, r3, #0x29, 28
  01a40	e5930000	 ldr         r0, [r3]
  01a44	eb000000	 bl          GPIOClrBit
  01a48		 |$LN1@PortPowerC|
  01a48		 |$LN3@PortPowerC|
  01a48		 |$LN14@PortPowerC|

; 364  :     }
; 365  : }

  01a48	e28dd00c	 add         sp, sp, #0xC
  01a4c	e89d6000	 ldmia       sp, {sp, lr}
  01a50	e12fff1e	 bx          lr
  01a54		 |$M45689|

			 ENDP  ; |PortPowerControl|

	EXPORT	|??_C@_1CC@NPEFILDH@?$AAP?$AAh?$AAy?$AAs?$AAi?$AAc?$AAa?$AAl?$AAP?$AAa?$AAg?$AAe?$AAS?$AAi?$AAz?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@IJPFPALO@?$AAE?$AAH?$AAC?$AAD?$AA?3?$AAG?$AAe?$AAt?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AA?5?$AAR?$AAe?$AAg?$AAO?$AAp?$AAe?$AAn?$AAK?$AAe@| [ DATA ] ; `string'

  00080			 AREA	 |.pdata|, PDATA
|$T45702| DCD	|$LN10@GetRegistr|
	DCD	0x40004704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@NPEFILDH@?$AAP?$AAh?$AAy?$AAs?$AAi?$AAc?$AAa?$AAl?$AAP?$AAa?$AAg?$AAe?$AAS?$AAi?$AAz?$AAe?$AA?$AA@| DCB "P"
	DCB	0x0, "h", 0x0, "y", 0x0, "s", 0x0, "i", 0x0, "c", 0x0, "a"
	DCB	0x0, "l", 0x0, "P", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "S"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@IJPFPALO@?$AAE?$AAH?$AAC?$AAD?$AA?3?$AAG?$AAe?$AAt?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AA?5?$AAR?$AAe?$AAg?$AAO?$AAp?$AAe?$AAn?$AAK?$AAe@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "D", 0x0, ":", 0x0, "G", 0x0, "e"
	DCB	0x0, "t", 0x0, "R", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "r", 0x0, "y", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "f", 0x0, "i", 0x0, "g", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "g", 0x0, "O", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "K"
	DCB	0x0, "e", 0x0, "y", 0x0, "E", 0x0, "x", 0x0, "(", 0x0, "%"
	DCB	0x0, "s", 0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  01a54			 AREA	 |.text|, CODE, ARM

  01a54		 |GetRegistryPhysicalMemSize| PROC

; 571  : {

  01a54		 |$LN10@GetRegistr|
  01a54	e1a0c00d	 mov         r12, sp
  01a58	e92d0003	 stmdb       sp!, {r0, r1}
  01a5c	e92d5000	 stmdb       sp!, {r12, lr}
  01a60	e24dd03c	 sub         sp, sp, #0x3C
  01a64		 |$M45699|

; 572  :     HKEY hKey;
; 573  :     DWORD dwData;
; 574  :     DWORD dwSize;
; 575  :     DWORD dwType;
; 576  :     BOOL  fRet=FALSE;

  01a64	e3a03000	 mov         r3, #0
  01a68	e58d301c	 str         r3, [sp, #0x1C]

; 577  :     DWORD dwRet;
; 578  : 
; 579  :     // Open key
; 580  :     dwRet = RegOpenKeyEx(HKEY_LOCAL_MACHINE,RegKeyPath,0,0,&hKey);

  01a6c	e28d3018	 add         r3, sp, #0x18
  01a70	e58d3000	 str         r3, [sp]
  01a74	e3a03000	 mov         r3, #0
  01a78	e3a02000	 mov         r2, #0
  01a7c	e59d1044	 ldr         r1, [sp, #0x44]
  01a80	e3a0010a	 mov         r0, #0xA, 2
  01a84	eb000000	 bl          RegOpenKeyExW
  01a88	e58d0030	 str         r0, [sp, #0x30]
  01a8c	e59d3030	 ldr         r3, [sp, #0x30]
  01a90	e58d3008	 str         r3, [sp, #8]

; 581  :     if (dwRet != ERROR_SUCCESS) {

  01a94	e59d3008	 ldr         r3, [sp, #8]
  01a98	e3530000	 cmp         r3, #0
  01a9c	0a00000f	 beq         |$LN3@GetRegistr|

; 582  :         DEBUGMSG(ZONE_ERROR,(TEXT("EHCD:GetRegistryConfig RegOpenKeyEx(%s) failed %d\r\n"),
; 583  :                              RegKeyPath, dwRet));

  01aa0	e59f30c4	 ldr         r3, [pc, #0xC4]
  01aa4	e5933440	 ldr         r3, [r3, #0x440]
  01aa8	e3130901	 tst         r3, #1, 18
  01aac	0a000006	 beq         |$LN6@GetRegistr|
  01ab0	e59d2008	 ldr         r2, [sp, #8]
  01ab4	e59d1044	 ldr         r1, [sp, #0x44]
  01ab8	e59f00a8	 ldr         r0, [pc, #0xA8]
  01abc	eb000000	 bl          NKDbgPrintfW
  01ac0	e3a03001	 mov         r3, #1
  01ac4	e58d3034	 str         r3, [sp, #0x34]
  01ac8	ea000001	 b           |$LN7@GetRegistr|
  01acc		 |$LN6@GetRegistr|
  01acc	e3a03000	 mov         r3, #0
  01ad0	e58d3034	 str         r3, [sp, #0x34]
  01ad4		 |$LN7@GetRegistr|

; 584  :         return FALSE;

  01ad4	e3a03000	 mov         r3, #0
  01ad8	e58d3024	 str         r3, [sp, #0x24]
  01adc	ea00001c	 b           |$LN4@GetRegistr|
  01ae0		 |$LN3@GetRegistr|

; 585  :     }
; 586  : 
; 587  :     // Read base address, range from registry and determine IOSpace
; 588  :     dwSize = sizeof(dwData);

  01ae0	e3a03004	 mov         r3, #4
  01ae4	e58d3014	 str         r3, [sp, #0x14]

; 589  :     dwRet = RegQueryValueEx(hKey, REG_PHYSICAL_PAGE_SIZE, 0, &dwType, (PUCHAR)&dwData, &dwSize);

  01ae8	e28d3014	 add         r3, sp, #0x14
  01aec	e58d3004	 str         r3, [sp, #4]
  01af0	e28d3010	 add         r3, sp, #0x10
  01af4	e58d3000	 str         r3, [sp]
  01af8	e28d300c	 add         r3, sp, #0xC
  01afc	e3a02000	 mov         r2, #0
  01b00	e59f105c	 ldr         r1, [pc, #0x5C]
  01b04	e59d0018	 ldr         r0, [sp, #0x18]
  01b08	eb000000	 bl          RegQueryValueExW
  01b0c	e58d0038	 str         r0, [sp, #0x38]
  01b10	e59d3038	 ldr         r3, [sp, #0x38]
  01b14	e58d3008	 str         r3, [sp, #8]

; 590  :     if (dwRet == ERROR_SUCCESS) {

  01b18	e59d3008	 ldr         r3, [sp, #8]
  01b1c	e3530000	 cmp         r3, #0
  01b20	1a000007	 bne         |$LN2@GetRegistr|

; 591  :         if (lpdwPhyscialMemSize)

  01b24	e59d3048	 ldr         r3, [sp, #0x48]
  01b28	e3530000	 cmp         r3, #0
  01b2c	0a000002	 beq         |$LN1@GetRegistr|

; 592  :             *lpdwPhyscialMemSize = dwData;

  01b30	e59d2010	 ldr         r2, [sp, #0x10]
  01b34	e59d3048	 ldr         r3, [sp, #0x48]
  01b38	e5832000	 str         r2, [r3]
  01b3c		 |$LN1@GetRegistr|

; 593  :         fRet=TRUE;

  01b3c	e3a03001	 mov         r3, #1
  01b40	e58d301c	 str         r3, [sp, #0x1C]
  01b44		 |$LN2@GetRegistr|

; 594  :     }
; 595  :     RegCloseKey(hKey);

  01b44	e59d0018	 ldr         r0, [sp, #0x18]
  01b48	eb000000	 bl          RegCloseKey

; 596  :     return fRet;

  01b4c	e59d301c	 ldr         r3, [sp, #0x1C]
  01b50	e58d3024	 str         r3, [sp, #0x24]
  01b54		 |$LN4@GetRegistr|

; 597  : }

  01b54	e59d0024	 ldr         r0, [sp, #0x24]
  01b58	e28dd03c	 add         sp, sp, #0x3C
  01b5c	e89d6000	 ldmia       sp, {sp, lr}
  01b60	e12fff1e	 bx          lr
  01b64		 |$LN11@GetRegistr|
  01b64		 |$LN12@GetRegistr|
  01b64	00000000	 DCD         |??_C@_1CC@NPEFILDH@?$AAP?$AAh?$AAy?$AAs?$AAi?$AAc?$AAa?$AAl?$AAP?$AAa?$AAg?$AAe?$AAS?$AAi?$AAz?$AAe?$AA?$AA@|
  01b68		 |$LN13@GetRegistr|
  01b68	00000000	 DCD         |??_C@_1GI@IJPFPALO@?$AAE?$AAH?$AAC?$AAD?$AA?3?$AAG?$AAe?$AAt?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AA?5?$AAR?$AAe?$AAg?$AAO?$AAp?$AAe?$AAn?$AAK?$AAe@|
  01b6c		 |$LN14@GetRegistr|
  01b6c	00000000	 DCD         |dpCurSettings|
  01b70		 |$M45700|

			 ENDP  ; |GetRegistryPhysicalMemSize|

	EXPORT	|HcdPdd_CheckConfigPower|

  00088			 AREA	 |.pdata|, PDATA
|$T45714| DCD	|$LN7@HcdPdd_Che|
	DCD	0x40001404
; Function compile flags: /Odtp

  01b70			 AREA	 |.text|, CODE, ARM

  01b70		 |HcdPdd_CheckConfigPower| PROC

; 915  : {

  01b70		 |$LN7@HcdPdd_Che|
  01b70	e1a0c00d	 mov         r12, sp
  01b74	e92d0007	 stmdb       sp!, {r0 - r2}
  01b78	e92d5000	 stmdb       sp!, {r12, lr}
  01b7c	e24dd008	 sub         sp, sp, #8
  01b80		 |$M45711|

; 916  : 	UNREFERENCED_PARAMETER(bPort);
; 917  : 
; 918  :     return ((dwCfgPower + dwTotalPower) > 500) ? FALSE : TRUE;

  01b80	e59d2014	 ldr         r2, [sp, #0x14]
  01b84	e59d3018	 ldr         r3, [sp, #0x18]
  01b88	e0823003	 add         r3, r2, r3
  01b8c	e3530f7d	 cmp         r3, #0x7D, 30
  01b90	9a000002	 bls         |$LN3@HcdPdd_Che|
  01b94	e3a03000	 mov         r3, #0
  01b98	e58d3004	 str         r3, [sp, #4]
  01b9c	ea000001	 b           |$LN4@HcdPdd_Che|
  01ba0		 |$LN3@HcdPdd_Che|
  01ba0	e3a03001	 mov         r3, #1
  01ba4	e58d3004	 str         r3, [sp, #4]
  01ba8		 |$LN4@HcdPdd_Che|
  01ba8	e59d3004	 ldr         r3, [sp, #4]
  01bac	e58d3000	 str         r3, [sp]

; 919  : }

  01bb0	e59d0000	 ldr         r0, [sp]
  01bb4	e28dd008	 add         sp, sp, #8
  01bb8	e89d6000	 ldmia       sp, {sp, lr}
  01bbc	e12fff1e	 bx          lr
  01bc0		 |$M45712|

			 ENDP  ; |HcdPdd_CheckConfigPower|

	EXPORT	|HcdPdd_PowerUp|

  00090			 AREA	 |.pdata|, PDATA
|$T45719| DCD	|$LN5@HcdPdd_Pow|
	DCD	0x40000503
; Function compile flags: /Odtp

  01bc0			 AREA	 |.text|, CODE, ARM

  01bc0		 |HcdPdd_PowerUp| PROC

; 922  : {

  01bc0		 |$LN5@HcdPdd_Pow|
  01bc0	e1a0c00d	 mov         r12, sp
  01bc4	e92d0001	 stmdb       sp!, {r0}
  01bc8	e92d5000	 stmdb       sp!, {r12, lr}
  01bcc		 |$M45716|

; 923  :     UNREFERENCED_PARAMETER(hDeviceContext);
; 924  : }

  01bcc	e89d6000	 ldmia       sp, {sp, lr}
  01bd0	e12fff1e	 bx          lr
  01bd4		 |$M45717|

			 ENDP  ; |HcdPdd_PowerUp|

	EXPORT	|HcdPdd_PowerDown|

  00098			 AREA	 |.pdata|, PDATA
|$T45728| DCD	|$LN5@HcdPdd_Pow@2|
	DCD	0x40002304
; Function compile flags: /Odtp

  01bd4			 AREA	 |.text|, CODE, ARM

  01bd4		 |HcdPdd_PowerDown| PROC

; 927  : {

  01bd4		 |$LN5@HcdPdd_Pow@2|
  01bd4	e1a0c00d	 mov         r12, sp
  01bd8	e92d0001	 stmdb       sp!, {r0}
  01bdc	e92d5000	 stmdb       sp!, {r12, lr}
  01be0	e24dd028	 sub         sp, sp, #0x28
  01be4		 |$M45725|

; 928  : 	SEHCDPdd * pPddObject = (SEHCDPdd *)hDeviceContext;

  01be4	e59d3030	 ldr         r3, [sp, #0x30]
  01be8	e58d3010	 str         r3, [sp, #0x10]

; 929  : 	DWORD dwClock = pPddObject->USBHInfo.TLLDevice;

  01bec	e59d3010	 ldr         r3, [sp, #0x10]
  01bf0	e2833fa6	 add         r3, r3, #0xA6, 30
  01bf4	e5933000	 ldr         r3, [r3]
  01bf8	e58d3014	 str         r3, [sp, #0x14]

; 930  : 
; 931  :     SetDevicePowerState(pPddObject->hParentBusHandle, D4, NULL);

  01bfc	e3a02000	 mov         r2, #0
  01c00	e3a01004	 mov         r1, #4
  01c04	e59d3010	 ldr         r3, [sp, #0x10]
  01c08	e2833faf	 add         r3, r3, #0xAF, 30
  01c0c	e5930000	 ldr         r0, [r3]
  01c10	eb000000	 bl          SetDevicePowerState

; 932  :     DeviceIoControl(pPddObject->hRootBus, IOCTL_BUS_RELEASE_CLOCK, &dwClock, sizeof(dwClock), NULL, 0, NULL, NULL);

  01c14	e3a03000	 mov         r3, #0
  01c18	e58d300c	 str         r3, [sp, #0xC]
  01c1c	e3a03000	 mov         r3, #0
  01c20	e58d3008	 str         r3, [sp, #8]
  01c24	e3a03000	 mov         r3, #0
  01c28	e58d3004	 str         r3, [sp, #4]
  01c2c	e3a03000	 mov         r3, #0
  01c30	e58d3000	 str         r3, [sp]
  01c34	e3a03004	 mov         r3, #4
  01c38	e28d2014	 add         r2, sp, #0x14
  01c3c	e59f1018	 ldr         r1, [pc, #0x18]
  01c40	e59d0010	 ldr         r0, [sp, #0x10]
  01c44	e2800d0b	 add         r0, r0, #0xB, 26
  01c48	e5900000	 ldr         r0, [r0]
  01c4c	eb000000	 bl          DeviceIoControl

; 933  : }

  01c50	e28dd028	 add         sp, sp, #0x28
  01c54	e89d6000	 ldmia       sp, {sp, lr}
  01c58	e12fff1e	 bx          lr
  01c5c		 |$LN6@HcdPdd_Pow@2|
  01c5c		 |$LN7@HcdPdd_Pow@2|
  01c5c	00220c04	 DCD         0x220c04
  01c60		 |$M45726|

			 ENDP  ; |HcdPdd_PowerDown|

	EXPORT	|HcdPdd_Deinit|
	IMPORT	|CloseHandle|

  000a0			 AREA	 |.pdata|, PDATA
|$T45738| DCD	|$LN10@HcdPdd_Dei@3|
	DCD	0x40004f04
; Function compile flags: /Odtp

  01c60			 AREA	 |.text|, CODE, ARM

  01c60		 |HcdPdd_Deinit| PROC

; 936  : {

  01c60		 |$LN10@HcdPdd_Dei@3|
  01c60	e1a0c00d	 mov         r12, sp
  01c64	e92d0001	 stmdb       sp!, {r0}
  01c68	e92d5000	 stmdb       sp!, {r12, lr}
  01c6c	e24dd01c	 sub         sp, sp, #0x1C
  01c70		 |$M45735|

; 937  :     SEHCDPdd * pPddObject = (SEHCDPdd *)hDeviceContext;

  01c70	e59d3024	 ldr         r3, [sp, #0x24]
  01c74	e58d3008	 str         r3, [sp, #8]

; 938  : 
; 939  :     if(pPddObject->lpvEHCDMddObject)

  01c78	e59d3008	 ldr         r3, [sp, #8]
  01c7c	e2833010	 add         r3, r3, #0x10
  01c80	e5933000	 ldr         r3, [r3]
  01c84	e3530000	 cmp         r3, #0
  01c88	0a000003	 beq         |$LN5@HcdPdd_Dei@3|

; 940  :         HcdMdd_DestroyHcdObject(pPddObject->lpvEHCDMddObject);

  01c8c	e59d3008	 ldr         r3, [sp, #8]
  01c90	e2833010	 add         r3, r3, #0x10
  01c94	e5930000	 ldr         r0, [r3]
  01c98	eb000000	 bl          HcdMdd_DestroyHcdObject
  01c9c		 |$LN5@HcdPdd_Dei@3|

; 941  :     if(pPddObject->lpvMemoryObject)

  01c9c	e59d3008	 ldr         r3, [sp, #8]
  01ca0	e283300c	 add         r3, r3, #0xC
  01ca4	e5933000	 ldr         r3, [r3]
  01ca8	e3530000	 cmp         r3, #0
  01cac	0a000003	 beq         |$LN4@HcdPdd_Dei@3|

; 942  :         HcdMdd_DestroyMemoryObject(pPddObject->lpvMemoryObject);

  01cb0	e59d3008	 ldr         r3, [sp, #8]
  01cb4	e283300c	 add         r3, r3, #0xC
  01cb8	e5930000	 ldr         r0, [r3]
  01cbc	eb000000	 bl          HcdMdd_DestroyMemoryObject
  01cc0		 |$LN4@HcdPdd_Dei@3|

; 943  :     if(pPddObject->pvVirtualAddress)

  01cc0	e59d3008	 ldr         r3, [sp, #8]
  01cc4	e2833014	 add         r3, r3, #0x14
  01cc8	e5933000	 ldr         r3, [r3]
  01ccc	e3530000	 cmp         r3, #0
  01cd0	0a000011	 beq         |$LN3@HcdPdd_Dei@3|

; 944  :         HalFreeCommonBuffer(&pPddObject->AdapterObject, pPddObject->dwPhysicalMemSize, pPddObject->LogicalAddress, pPddObject->pvVirtualAddress, FALSE);

  01cd4	e3a03000	 mov         r3, #0
  01cd8	e58d3004	 str         r3, [sp, #4]
  01cdc	e59d3008	 ldr         r3, [sp, #8]
  01ce0	e2833014	 add         r3, r3, #0x14
  01ce4	e5933000	 ldr         r3, [r3]
  01ce8	e58d3000	 str         r3, [sp]
  01cec	e59d3008	 ldr         r3, [sp, #8]
  01cf0	e2833020	 add         r3, r3, #0x20
  01cf4	e58d3018	 str         r3, [sp, #0x18]
  01cf8	e59d3018	 ldr         r3, [sp, #0x18]
  01cfc	e5932000	 ldr         r2, [r3]
  01d00	e5933004	 ldr         r3, [r3, #4]
  01d04	e59d1008	 ldr         r1, [sp, #8]
  01d08	e2811018	 add         r1, r1, #0x18
  01d0c	e5911000	 ldr         r1, [r1]
  01d10	e59d0008	 ldr         r0, [sp, #8]
  01d14	e2800028	 add         r0, r0, #0x28
  01d18	eb000000	 bl          HalFreeCommonBuffer
  01d1c		 |$LN3@HcdPdd_Dei@3|

; 945  :     SetDevicePowerState(pPddObject->hParentBusHandle, D4, NULL);

  01d1c	e3a02000	 mov         r2, #0
  01d20	e3a01004	 mov         r1, #4
  01d24	e59d3008	 ldr         r3, [sp, #8]
  01d28	e2833faf	 add         r3, r3, #0xAF, 30
  01d2c	e5930000	 ldr         r0, [r3]
  01d30	eb000000	 bl          SetDevicePowerState

; 946  :     if (pPddObject->hParentBusHandle)

  01d34	e59d3008	 ldr         r3, [sp, #8]
  01d38	e2833faf	 add         r3, r3, #0xAF, 30
  01d3c	e5933000	 ldr         r3, [r3]
  01d40	e3530000	 cmp         r3, #0
  01d44	0a000003	 beq         |$LN2@HcdPdd_Dei@3|

; 947  :         CloseBusAccessHandle(pPddObject->hParentBusHandle);

  01d48	e59d3008	 ldr         r3, [sp, #8]
  01d4c	e2833faf	 add         r3, r3, #0xAF, 30
  01d50	e5930000	 ldr         r0, [r3]
  01d54	eb000000	 bl          CloseBusAccessHandle
  01d58		 |$LN2@HcdPdd_Dei@3|

; 948  : 	if (pPddObject->hRootBus)

  01d58	e59d3008	 ldr         r3, [sp, #8]
  01d5c	e2833d0b	 add         r3, r3, #0xB, 26
  01d60	e5933000	 ldr         r3, [r3]
  01d64	e3530000	 cmp         r3, #0
  01d68	0a000003	 beq         |$LN1@HcdPdd_Dei@3|

; 949  : 		CloseHandle(pPddObject->hRootBus);

  01d6c	e59d3008	 ldr         r3, [sp, #8]
  01d70	e2833d0b	 add         r3, r3, #0xB, 26
  01d74	e5930000	 ldr         r0, [r3]
  01d78	eb000000	 bl          CloseHandle
  01d7c		 |$LN1@HcdPdd_Dei@3|

; 950  : 
; 951  :     free(pPddObject);

  01d7c	e59d0008	 ldr         r0, [sp, #8]
  01d80	eb000000	 bl          free

; 952  :     return TRUE;

  01d84	e3a03001	 mov         r3, #1
  01d88	e58d3014	 str         r3, [sp, #0x14]

; 953  : }

  01d8c	e59d0014	 ldr         r0, [sp, #0x14]
  01d90	e28dd01c	 add         sp, sp, #0x1C
  01d94	e89d6000	 ldmia       sp, {sp, lr}
  01d98	e12fff1e	 bx          lr
  01d9c		 |$M45736|

			 ENDP  ; |HcdPdd_Deinit|

	EXPORT	|HcdPdd_Open|

  000a8			 AREA	 |.pdata|, PDATA
|$T45744| DCD	|$LN5@HcdPdd_Ope|
	DCD	0x40000a04
; Function compile flags: /Odtp

  01d9c			 AREA	 |.text|, CODE, ARM

  01d9c		 |HcdPdd_Open| PROC

; 957  : {

  01d9c		 |$LN5@HcdPdd_Ope|
  01d9c	e1a0c00d	 mov         r12, sp
  01da0	e92d0007	 stmdb       sp!, {r0 - r2}
  01da4	e92d5000	 stmdb       sp!, {r12, lr}
  01da8	e24dd004	 sub         sp, sp, #4
  01dac		 |$M45741|

; 958  :     UNREFERENCED_PARAMETER(hDeviceContext);
; 959  :     UNREFERENCED_PARAMETER(AccessCode);
; 960  :     UNREFERENCED_PARAMETER(ShareMode);
; 961  : #ifdef USB_IF_ELECTRICAL_TEST_MODE
; 962  :     return (DWORD) (((SEHCDPdd*)hDeviceContext)->lpvEHCDMddObject);
; 963  : #endif //#ifdef USB_IF_ELECTRICAL_TEST_MODE
; 964  : 
; 965  :     return hDeviceContext;

  01dac	e59d300c	 ldr         r3, [sp, #0xC]
  01db0	e58d3000	 str         r3, [sp]

; 966  : }

  01db4	e59d0000	 ldr         r0, [sp]
  01db8	e28dd004	 add         sp, sp, #4
  01dbc	e89d6000	 ldmia       sp, {sp, lr}
  01dc0	e12fff1e	 bx          lr
  01dc4		 |$M45742|

			 ENDP  ; |HcdPdd_Open|

	EXPORT	|HcdPdd_Close|

  000b0			 AREA	 |.pdata|, PDATA
|$T45750| DCD	|$LN5@HcdPdd_Clo|
	DCD	0x40000a04
; Function compile flags: /Odtp

  01dc4			 AREA	 |.text|, CODE, ARM

  01dc4		 |HcdPdd_Close| PROC

; 969  : {

  01dc4		 |$LN5@HcdPdd_Clo|
  01dc4	e1a0c00d	 mov         r12, sp
  01dc8	e92d0001	 stmdb       sp!, {r0}
  01dcc	e92d5000	 stmdb       sp!, {r12, lr}
  01dd0	e24dd004	 sub         sp, sp, #4
  01dd4		 |$M45747|

; 970  :     UNREFERENCED_PARAMETER(hOpenContext);
; 971  : 
; 972  :     return TRUE;

  01dd4	e3a03001	 mov         r3, #1
  01dd8	e58d3000	 str         r3, [sp]

; 973  : }

  01ddc	e59d0000	 ldr         r0, [sp]
  01de0	e28dd004	 add         sp, sp, #4
  01de4	e89d6000	 ldmia       sp, {sp, lr}
  01de8	e12fff1e	 bx          lr
  01dec		 |$M45748|

			 ENDP  ; |HcdPdd_Close|

	EXPORT	|HcdPdd_Read|

  000b8			 AREA	 |.pdata|, PDATA
|$T45756| DCD	|$LN5@HcdPdd_Rea|
	DCD	0x40000a04
; Function compile flags: /Odtp

  01dec			 AREA	 |.text|, CODE, ARM

  01dec		 |HcdPdd_Read| PROC

; 976  : {

  01dec		 |$LN5@HcdPdd_Rea|
  01dec	e1a0c00d	 mov         r12, sp
  01df0	e92d0007	 stmdb       sp!, {r0 - r2}
  01df4	e92d5000	 stmdb       sp!, {r12, lr}
  01df8	e24dd004	 sub         sp, sp, #4
  01dfc		 |$M45753|

; 977  :     UNREFERENCED_PARAMETER(hOpenContext);
; 978  :     UNREFERENCED_PARAMETER(pBuffer);
; 979  :     UNREFERENCED_PARAMETER(Count);
; 980  : 
; 981  :     return (DWORD)-1; // an error occured

  01dfc	e3e03000	 mvn         r3, #0
  01e00	e58d3000	 str         r3, [sp]

; 982  : }

  01e04	e59d0000	 ldr         r0, [sp]
  01e08	e28dd004	 add         sp, sp, #4
  01e0c	e89d6000	 ldmia       sp, {sp, lr}
  01e10	e12fff1e	 bx          lr
  01e14		 |$M45754|

			 ENDP  ; |HcdPdd_Read|

	EXPORT	|HcdPdd_Write|

  000c0			 AREA	 |.pdata|, PDATA
|$T45762| DCD	|$LN5@HcdPdd_Wri|
	DCD	0x40000a04
; Function compile flags: /Odtp

  01e14			 AREA	 |.text|, CODE, ARM

  01e14		 |HcdPdd_Write| PROC

; 986  : {

  01e14		 |$LN5@HcdPdd_Wri|
  01e14	e1a0c00d	 mov         r12, sp
  01e18	e92d0007	 stmdb       sp!, {r0 - r2}
  01e1c	e92d5000	 stmdb       sp!, {r12, lr}
  01e20	e24dd004	 sub         sp, sp, #4
  01e24		 |$M45759|

; 987  :     UNREFERENCED_PARAMETER(hOpenContext);
; 988  :     UNREFERENCED_PARAMETER(pSourceBytes);
; 989  :     UNREFERENCED_PARAMETER(NumberOfBytes);
; 990  : 
; 991  :     return (DWORD)-1;

  01e24	e3e03000	 mvn         r3, #0
  01e28	e58d3000	 str         r3, [sp]

; 992  : }

  01e2c	e59d0000	 ldr         r0, [sp]
  01e30	e28dd004	 add         sp, sp, #4
  01e34	e89d6000	 ldmia       sp, {sp, lr}
  01e38	e12fff1e	 bx          lr
  01e3c		 |$M45760|

			 ENDP  ; |HcdPdd_Write|

	EXPORT	|HcdPdd_Seek|

  000c8			 AREA	 |.pdata|, PDATA
|$T45768| DCD	|$LN5@HcdPdd_See|
	DCD	0x40000a04
; Function compile flags: /Odtp

  01e3c			 AREA	 |.text|, CODE, ARM

  01e3c		 |HcdPdd_Seek| PROC

; 995  : {

  01e3c		 |$LN5@HcdPdd_See|
  01e3c	e1a0c00d	 mov         r12, sp
  01e40	e92d0007	 stmdb       sp!, {r0 - r2}
  01e44	e92d5000	 stmdb       sp!, {r12, lr}
  01e48	e24dd004	 sub         sp, sp, #4
  01e4c		 |$M45765|

; 996  :     UNREFERENCED_PARAMETER(hOpenContext);
; 997  :     UNREFERENCED_PARAMETER(Amount);
; 998  :     UNREFERENCED_PARAMETER(Type);
; 999  : 
; 1000 :     return (DWORD)-1;

  01e4c	e3e03000	 mvn         r3, #0
  01e50	e58d3000	 str         r3, [sp]

; 1001 : }

  01e54	e59d0000	 ldr         r0, [sp]
  01e58	e28dd004	 add         sp, sp, #4
  01e5c	e89d6000	 ldmia       sp, {sp, lr}
  01e60	e12fff1e	 bx          lr
  01e64		 |$M45766|

			 ENDP  ; |HcdPdd_Seek|

	EXPORT	|??_C@_1DK@IHPPGEJG@?$AA?9?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@FDEPLPGD@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAN?$AAo?$AAt?$AA?5?$AAh?$AAa?$AAn?$AAd?$AAl?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA?5?$AA0?$AAx?$AA?$CF?$AAX?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@OBPLBNBH@?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAi?$AAo?$AAc?$AAt?$AAl?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@OLHGKBLE@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF?$AAu?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@EAHIBMJP@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@FJEIBADC@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@PGPOIEBA@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF?$AAu?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@EPGGMKBM@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@GFAJAJFH@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAQ?$AAU?$AAE?$AAR?$AAY@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@MHJHMPML@?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAi?$AAo?$AAc?$AAt?$AAl?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@NKCLLFNP@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAC?$AAA?$AAP?$AAA?$AAB@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@OOJDEKIJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe@| [ DATA ] ; `string'
	EXPORT	|HcdPdd_IOControl|
	IMPORT	|HcdMdd_PowerDown|
	IMPORT	|HcdMdd_PowerUp|
	IMPORT	|memset|
	IMPORT	|__C_specific_handler|

  000d0			 AREA	 |.pdata|, PDATA
|$T45827| DCD	|$LN70@HcdPdd_IOC|
	DCD	0xc0015c05
|$T45829| DCD	|$LN58@HcdPdd_IOC|
	DCD	0x40000502
|$T45831| DCD	|$LN51@HcdPdd_IOC|
	DCD	0x40000502
|$T45833| DCD	|$LN44@HcdPdd_IOC|
	DCD	0x40001302

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@IHPPGEJG@?$AA?9?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "H", 0x0, "c", 0x0, "d", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "(", 0x0, "r"
	DCB	0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@FDEPLPGD@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAN?$AAo?$AAt?$AA?5?$AAh?$AAa?$AAn?$AAd?$AAl?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA?5?$AA0?$AAx?$AA?$CF?$AAX?$AA?$AA@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "N"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "I"
	DCB	0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "X", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@OBPLBNBH@?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAi?$AAo?$AAc?$AAt?$AAl?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "x", 0x0, "c", 0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, " "
	DCB	0x0, "i", 0x0, "o", 0x0, "c", 0x0, "t", 0x0, "l", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@OLHGKBLE@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF?$AAu?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "P"
	DCB	0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R", 0x0, "_", 0x0, "G"
	DCB	0x0, "E", 0x0, "T", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "D", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@EAHIBMJP@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?$AN?$AA?6@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T"
	DCB	0x0, "L", 0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E"
	DCB	0x0, "R", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@FJEIBADC@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "E"
	DCB	0x0, "x", 0x0, "c", 0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, " "
	DCB	0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_"
	DCB	0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R", 0x0, "_"
	DCB	0x0, "S", 0x0, "E", 0x0, "T", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@PGPOIEBA@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF?$AAu?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "P"
	DCB	0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R", 0x0, "_", 0x0, "S"
	DCB	0x0, "E", 0x0, "T", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "D", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@EPGGMKBM@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?$AN?$AA?6@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T"
	DCB	0x0, "L", 0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E"
	DCB	0x0, "R", 0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@GFAJAJFH@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAQ?$AAU?$AAE?$AAR?$AAY@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T"
	DCB	0x0, "L", 0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E"
	DCB	0x0, "R", 0x0, "_", 0x0, "Q", 0x0, "U", 0x0, "E", 0x0, "R"
	DCB	0x0, "Y", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@MHJHMPML@?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAi?$AAo?$AAc?$AAt?$AAl?$AA?$AN?$AA?6?$AA?$AA@| DCB "e"
	DCB	0x0, "x", 0x0, "c", 0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, " "
	DCB	0x0, "i", 0x0, "o", 0x0, "c", 0x0, "t", 0x0, "l", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@NKCLLFNP@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAC?$AAA?$AAP?$AAA?$AAB@| DCB "E"
	DCB	0x0, "H", 0x0, "C", 0x0, "I", 0x0, ":", 0x0, " ", 0x0, "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T"
	DCB	0x0, "L", 0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E"
	DCB	0x0, "R", 0x0, "_", 0x0, "C", 0x0, "A", 0x0, "P", 0x0, "A"
	DCB	0x0, "B", 0x0, "I", 0x0, "L", 0x0, "I", 0x0, "T", 0x0, "I"
	DCB	0x0, "E", 0x0, "S", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@OOJDEKIJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "c", 0x0, "d", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, " "
	DCB	0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.xdata|, DATA
|$T45825| DCD	0x3
	DCD	|$LN62@HcdPdd_IOC|
	DCD	|$LN63@HcdPdd_IOC|
	DCD	|$LN58@HcdPdd_IOC|
	DCD	|$LN59@HcdPdd_IOC|
	DCD	|$LN55@HcdPdd_IOC|
	DCD	|$LN56@HcdPdd_IOC|
	DCD	|$LN51@HcdPdd_IOC|
	DCD	|$LN52@HcdPdd_IOC|
	DCD	|$LN48@HcdPdd_IOC|
	DCD	|$LN49@HcdPdd_IOC|
	DCD	|$LN44@HcdPdd_IOC|
	DCD	|$LN45@HcdPdd_IOC|
; Function compile flags: /Odtp

  01e64			 AREA	 |.text|, CODE, ARM

  01e64	00000000	 DCD         |__C_specific_handler|
  01e68	00000000	 DCD         |$T45825|

  01e6c		 |HcdPdd_IOControl| PROC

; 1005 : {

  01e6c		 |$LN70@HcdPdd_IOC|
  01e6c	e1a0c00d	 mov         r12, sp
  01e70	e92d000f	 stmdb       sp!, {r0 - r3}
  01e74	e92d5800	 stmdb       sp!, {r11, r12, lr}
  01e78	e28db00c	 add         r11, sp, #0xC
  01e7c	e24dd080	 sub         sp, sp, #0x80
  01e80		 |$LN68@HcdPdd_IOC|

; 1006 :     BOOL rc = FALSE;

  01e80	e3a03000	 mov         r3, #0
  01e84	e50b307c	 str         r3, [r11, #-0x7C]

; 1007 :     SEHCDPdd *pPddObject = (SEHCDPdd *)hOpenContext;

  01e88	e59b3000	 ldr         r3, [r11]
  01e8c	e50b3078	 str         r3, [r11, #-0x78]

; 1008 :     DWORD dwClock = pPddObject->USBHInfo.TLLDevice;

  01e90	e51b3078	 ldr         r3, [r11, #-0x78]
  01e94	e2833fa6	 add         r3, r3, #0xA6, 30
  01e98	e5933000	 ldr         r3, [r3]
  01e9c	e50b3074	 str         r3, [r11, #-0x74]

; 1009 : 
; 1010 :     UNREFERENCED_PARAMETER(pBufIn);
; 1011 :     UNREFERENCED_PARAMETER(dwLenIn);
; 1012 : 
; 1013 :     // Check if we get correct context
; 1014 :     if (pPddObject == NULL)

  01ea0	e51b3078	 ldr         r3, [r11, #-0x78]
  01ea4	e3530000	 cmp         r3, #0
  01ea8	1a00000b	 bne         |$LN18@HcdPdd_IOC|

; 1015 :         {
; 1016 :         DEBUGMSG(ZONE_ERROR, (L"ERROR: HcdPdd_IOControl: Incorrect context paramer\r\n"));

  01eac	e59f3568	 ldr         r3, [pc, #0x568]
  01eb0	e5933440	 ldr         r3, [r3, #0x440]
  01eb4	e3130901	 tst         r3, #1, 18
  01eb8	0a000004	 beq         |$LN21@HcdPdd_IOC|
  01ebc	e59f0588	 ldr         r0, [pc, #0x588]
  01ec0	eb000000	 bl          NKDbgPrintfW
  01ec4	e3a03001	 mov         r3, #1
  01ec8	e50b3044	 str         r3, [r11, #-0x44]
  01ecc	ea000001	 b           |$LN22@HcdPdd_IOC|
  01ed0		 |$LN21@HcdPdd_IOC|
  01ed0	e3a03000	 mov         r3, #0
  01ed4	e50b3044	 str         r3, [r11, #-0x44]
  01ed8		 |$LN22@HcdPdd_IOC|

; 1017 :         goto cleanUp;

  01ed8	ea00012d	 b           |$cleanUp$45356|
  01edc		 |$LN18@HcdPdd_IOC|

; 1018 :         }
; 1019 : 
; 1020 :     switch (dwCode)

  01edc	e59b3004	 ldr         r3, [r11, #4]
  01ee0	e50b3040	 str         r3, [r11, #-0x40]
  01ee4	e51b2040	 ldr         r2, [r11, #-0x40]
  01ee8	e3a03832	 mov         r3, #0x32, 16
  01eec	e3833a01	 orr         r3, r3, #1, 20
  01ef0	e0423003	 sub         r3, r2, r3
  01ef4	e50b3040	 str         r3, [r11, #-0x40]
  01ef8	e51b3040	 ldr         r3, [r11, #-0x40]
  01efc	e353000c	 cmp         r3, #0xC
  01f00	8a000117	 bhi         |$LN1@HcdPdd_IOC|
  01f04	e51b2040	 ldr         r2, [r11, #-0x40]
  01f08	e1a03102	 mov         r3, r2, lsl #2
  01f0c	e083300f	 add         r3, r3, pc
  01f10	e5933004	 ldr         r3, [r3, #4]
  01f14	e08ff003	 add         pc, pc, r3
  01f18		 |$LN75@HcdPdd_IOC|
  01f18		 |$LN74@HcdPdd_IOC|
  01f18		 |$LN76@HcdPdd_IOC|
  01f18	00000030	 DCD         0x30
  01f1c		 |$LN77@HcdPdd_IOC|
  01f1c	00000448	 DCD         0x448
  01f20		 |$LN78@HcdPdd_IOC|
  01f20	00000448	 DCD         0x448
  01f24		 |$LN79@HcdPdd_IOC|
  01f24	00000448	 DCD         0x448
  01f28		 |$LN80@HcdPdd_IOC|
  01f28	00000378	 DCD         0x378
  01f2c		 |$LN81@HcdPdd_IOC|
  01f2c	00000448	 DCD         0x448
  01f30		 |$LN82@HcdPdd_IOC|
  01f30	00000448	 DCD         0x448
  01f34		 |$LN83@HcdPdd_IOC|
  01f34	00000448	 DCD         0x448
  01f38		 |$LN84@HcdPdd_IOC|
  01f38	00000128	 DCD         0x128
  01f3c		 |$LN85@HcdPdd_IOC|
  01f3c	00000448	 DCD         0x448
  01f40		 |$LN86@HcdPdd_IOC|
  01f40	00000448	 DCD         0x448
  01f44		 |$LN87@HcdPdd_IOC|
  01f44	00000448	 DCD         0x448
  01f48		 |$LN88@HcdPdd_IOC|
  01f48	000000f0	 DCD         0xf0
  01f4c		 |$LN15@HcdPdd_IOC|

; 1021 :         {
; 1022 :         case IOCTL_POWER_CAPABILITIES:
; 1023 :             DEBUGMSG(ZONE_INFO, (L"EHCI: Received IOCTL_POWER_CAPABILITIES\r\n"));

  01f4c	e59f34c8	 ldr         r3, [pc, #0x4C8]
  01f50	e5933440	 ldr         r3, [r3, #0x440]
  01f54	e3130b01	 tst         r3, #1, 22
  01f58	0a000004	 beq         |$LN23@HcdPdd_IOC|
  01f5c	e59f04e4	 ldr         r0, [pc, #0x4E4]
  01f60	eb000000	 bl          NKDbgPrintfW
  01f64	e3a03001	 mov         r3, #1
  01f68	e50b303c	 str         r3, [r11, #-0x3C]
  01f6c	ea000001	 b           |$LN24@HcdPdd_IOC|
  01f70		 |$LN23@HcdPdd_IOC|
  01f70	e3a03000	 mov         r3, #0
  01f74	e50b303c	 str         r3, [r11, #-0x3C]
  01f78		 |$LN24@HcdPdd_IOC|

; 1024 :             if (pBufOut && dwLenOut >= sizeof (POWER_CAPABILITIES) &&
; 1025 :                 pdwActualOut)

  01f78	e59b3010	 ldr         r3, [r11, #0x10]
  01f7c	e3530000	 cmp         r3, #0
  01f80	0a000020	 beq         |$LN14@HcdPdd_IOC|
  01f84	e59b3014	 ldr         r3, [r11, #0x14]
  01f88	e3530030	 cmp         r3, #0x30
  01f8c	3a00001d	 bcc         |$LN14@HcdPdd_IOC|
  01f90	e59b3018	 ldr         r3, [r11, #0x18]
  01f94	e3530000	 cmp         r3, #0
  01f98	0a00001a	 beq         |$LN14@HcdPdd_IOC|
  01f9c		 |$LN48@HcdPdd_IOC|

; 1026 :                 {
; 1027 :                     __try
; 1028 :                         {
; 1029 :                         PPOWER_CAPABILITIES PowerCaps;
; 1030 :                         PowerCaps = (PPOWER_CAPABILITIES)pBufOut;

  01f9c	e59b3010	 ldr         r3, [r11, #0x10]
  01fa0	e50b3070	 str         r3, [r11, #-0x70]

; 1031 : 
; 1032 :                         // Only supports D0 (permanently on) and D4(off).
; 1033 :                         memset(PowerCaps, 0, sizeof(*PowerCaps));

  01fa4	e3a02030	 mov         r2, #0x30
  01fa8	e3a01000	 mov         r1, #0
  01fac	e51b0070	 ldr         r0, [r11, #-0x70]
  01fb0	eb000000	 bl          memset

; 1034 :                         PowerCaps->DeviceDx = (DX_MASK(D0) |
; 1035 :                                                DX_MASK(D4));

  01fb4	e51b2070	 ldr         r2, [r11, #-0x70]
  01fb8	e3a03011	 mov         r3, #0x11
  01fbc	e5c23000	 strb        r3, [r2]

; 1036 :                         *pdwActualOut = sizeof(*PowerCaps);

  01fc0	e59b2018	 ldr         r2, [r11, #0x18]
  01fc4	e3a03030	 mov         r3, #0x30
  01fc8	e5823000	 str         r3, [r2]

; 1037 :                         rc = TRUE;

  01fcc	e3a03001	 mov         r3, #1
  01fd0	e50b307c	 str         r3, [r11, #-0x7C]
  01fd4		 |$LN49@HcdPdd_IOC|

; 1038 :                         }

  01fd4	ea00000b	 b           |$LN50@HcdPdd_IOC|
  01fd8		 |$LN45@HcdPdd_IOC|

; 1040 :                         {
; 1041 :                         DEBUGMSG(ZONE_ERROR, (L"exception in ioctl\r\n"));

  01fd8	e59f343c	 ldr         r3, [pc, #0x43C]
  01fdc	e5933440	 ldr         r3, [r3, #0x440]
  01fe0	e3130901	 tst         r3, #1, 18
  01fe4	0a000004	 beq         |$LN25@HcdPdd_IOC|
  01fe8	e59f0454	 ldr         r0, [pc, #0x454]
  01fec	eb000000	 bl          NKDbgPrintfW
  01ff0	e3a03001	 mov         r3, #1
  01ff4	e50b3038	 str         r3, [r11, #-0x38]
  01ff8	ea000001	 b           |$LN26@HcdPdd_IOC|
  01ffc		 |$LN25@HcdPdd_IOC|
  01ffc	e3a03000	 mov         r3, #0
  02000	e50b3038	 str         r3, [r11, #-0x38]
  02004		 |$LN26@HcdPdd_IOC|
  02004	eaffffff	 b           |$LN50@HcdPdd_IOC|
  02008		 |$LN50@HcdPdd_IOC|
  02008		 |$LN14@HcdPdd_IOC|

; 1042 :                         }
; 1043 :                 }
; 1044 :             break;

  02008	ea0000e1	 b           |$LN16@HcdPdd_IOC|
  0200c		 |$LN12@HcdPdd_IOC|

; 1045 : 
; 1046 :         // deprecated
; 1047 :         case IOCTL_POWER_QUERY:
; 1048 :             rc = TRUE;

  0200c	e3a03001	 mov         r3, #1
  02010	e50b307c	 str         r3, [r11, #-0x7C]

; 1049 :             DEBUGMSG(ZONE_INFO,(L"EHCI: Received IOCTL_POWER_QUERY\r\n"));

  02014	e59f3400	 ldr         r3, [pc, #0x400]
  02018	e5933440	 ldr         r3, [r3, #0x440]
  0201c	e3130b01	 tst         r3, #1, 22
  02020	0a000004	 beq         |$LN27@HcdPdd_IOC|
  02024	e59f0414	 ldr         r0, [pc, #0x414]
  02028	eb000000	 bl          NKDbgPrintfW
  0202c	e3a03001	 mov         r3, #1
  02030	e50b3034	 str         r3, [r11, #-0x34]
  02034	ea000001	 b           |$LN28@HcdPdd_IOC|
  02038		 |$LN27@HcdPdd_IOC|
  02038	e3a03000	 mov         r3, #0
  0203c	e50b3034	 str         r3, [r11, #-0x34]
  02040		 |$LN28@HcdPdd_IOC|

; 1050 :             break;

  02040	ea0000d3	 b           |$LN16@HcdPdd_IOC|
  02044		 |$LN11@HcdPdd_IOC|

; 1051 : 
; 1052 :         // requests a change from one device power state to another
; 1053 :         case IOCTL_POWER_SET:
; 1054 :             DEBUGMSG(ZONE_INFO,(L"EHCI: Received IOCTL_POWER_SET\r\n"));

  02044	e59f33d0	 ldr         r3, [pc, #0x3D0]
  02048	e5933440	 ldr         r3, [r3, #0x440]
  0204c	e3130b01	 tst         r3, #1, 22
  02050	0a000004	 beq         |$LN29@HcdPdd_IOC|
  02054	e59f03e0	 ldr         r0, [pc, #0x3E0]
  02058	eb000000	 bl          NKDbgPrintfW
  0205c	e3a03001	 mov         r3, #1
  02060	e50b3030	 str         r3, [r11, #-0x30]
  02064	ea000001	 b           |$LN30@HcdPdd_IOC|
  02068		 |$LN29@HcdPdd_IOC|
  02068	e3a03000	 mov         r3, #0
  0206c	e50b3030	 str         r3, [r11, #-0x30]
  02070		 |$LN30@HcdPdd_IOC|

; 1055 :             if (pBufOut && dwLenOut >= sizeof(CEDEVICE_POWER_STATE))

  02070	e59b3010	 ldr         r3, [r11, #0x10]
  02074	e3530000	 cmp         r3, #0
  02078	0a000084	 beq         |$LN10@HcdPdd_IOC|
  0207c	e59b3014	 ldr         r3, [r11, #0x14]
  02080	e3530004	 cmp         r3, #4
  02084	3a000081	 bcc         |$LN10@HcdPdd_IOC|
  02088		 |$LN55@HcdPdd_IOC|

; 1056 :             {
; 1057 :                 __try
; 1058 :                 {
; 1059 :                     PHYSICAL_ADDRESS pa;
; 1060 :                     OMAP_UHH_REGS * pUHHRegs;
; 1061 :                     CEDEVICE_POWER_STATE ReqDx = *(PCEDEVICE_POWER_STATE)pBufOut;

  02088	e59b3010	 ldr         r3, [r11, #0x10]
  0208c	e5933000	 ldr         r3, [r3]
  02090	e50b3068	 str         r3, [r11, #-0x68]

; 1062 :                     DWORD RegVal = 0;

  02094	e3a03000	 mov         r3, #0
  02098	e50b305c	 str         r3, [r11, #-0x5C]

; 1063 : 
; 1064 :                     pa.QuadPart = pPddObject->USBHInfo.UHH_REGS_PA;

  0209c	e51b3078	 ldr         r3, [r11, #-0x78]
  020a0	e2833faa	 add         r3, r3, #0xAA, 30
  020a4	e5933000	 ldr         r3, [r3]
  020a8	e50b3064	 str         r3, [r11, #-0x64]
  020ac	e3a03000	 mov         r3, #0
  020b0	e50b3060	 str         r3, [r11, #-0x60]

; 1065 :                     pUHHRegs =(OMAP_UHH_REGS *)MmMapIoSpace(pa, sizeof(OMAP_UHH_REGS), FALSE);

  020b4	e3a03000	 mov         r3, #0
  020b8	e3a02048	 mov         r2, #0x48
  020bc	e51b0064	 ldr         r0, [r11, #-0x64]
  020c0	e51b1060	 ldr         r1, [r11, #-0x60]
  020c4	eb000000	 bl          MmMapIoSpace
  020c8	e50b002c	 str         r0, [r11, #-0x2C]
  020cc	e51b302c	 ldr         r3, [r11, #-0x2C]
  020d0	e50b306c	 str         r3, [r11, #-0x6C]

; 1066 : 
; 1067 :                     switch (ReqDx)

  020d4	e51b3068	 ldr         r3, [r11, #-0x68]
  020d8	e50b3028	 str         r3, [r11, #-0x28]
  020dc	e51b3028	 ldr         r3, [r11, #-0x28]
  020e0	e3530000	 cmp         r3, #0
  020e4	0a000003	 beq         |$LN6@HcdPdd_IOC|
  020e8	e51b3028	 ldr         r3, [r11, #-0x28]
  020ec	e3530004	 cmp         r3, #4
  020f0	0a000032	 beq         |$LN5@HcdPdd_IOC|
  020f4	ea00004b	 b           |$LN7@HcdPdd_IOC|
  020f8		 |$LN6@HcdPdd_IOC|

; 1068 :                         {
; 1069 :                         case D0:
; 1070 : 		                    DeviceIoControl(pPddObject->hRootBus, IOCTL_BUS_REQUEST_CLOCK, &dwClock, sizeof(dwClock), NULL, 0, NULL, NULL);

  020f8	e3a03000	 mov         r3, #0
  020fc	e58d300c	 str         r3, [sp, #0xC]
  02100	e3a03000	 mov         r3, #0
  02104	e58d3008	 str         r3, [sp, #8]
  02108	e3a03000	 mov         r3, #0
  0210c	e58d3004	 str         r3, [sp, #4]
  02110	e3a03000	 mov         r3, #0
  02114	e58d3000	 str         r3, [sp]
  02118	e3a03004	 mov         r3, #4
  0211c	e24b2074	 sub         r2, r11, #0x74
  02120	e3a01822	 mov         r1, #0x22, 16
  02124	e3811b03	 orr         r1, r1, #3, 22
  02128	e51b0078	 ldr         r0, [r11, #-0x78]
  0212c	e2800d0b	 add         r0, r0, #0xB, 26
  02130	e5900000	 ldr         r0, [r0]
  02134	eb000000	 bl          DeviceIoControl

; 1071 :                             SetDevicePowerState(pPddObject->hParentBusHandle, D0, NULL);

  02138	e3a02000	 mov         r2, #0
  0213c	e3a01000	 mov         r1, #0
  02140	e51b3078	 ldr         r3, [r11, #-0x78]
  02144	e2833faf	 add         r3, r3, #0xAF, 30
  02148	e5930000	 ldr         r0, [r3]
  0214c	eb000000	 bl          SetDevicePowerState

; 1072 :                             DelayMilliSeconds(200, FALSE);

  02150	e3a01000	 mov         r1, #0
  02154	e3a000c8	 mov         r0, #0xC8
  02158	eb000000	 bl          DelayMilliSeconds

; 1073 :                             RegVal = pUHHRegs->SYSCONFIG & ~(UHH_SYSCONFIG_MIDLEMODE(0x03) | UHH_SYSCONFIG_SIDLEMODE(0x03));

  0215c	e51b306c	 ldr         r3, [r11, #-0x6C]
  02160	e2833010	 add         r3, r3, #0x10
  02164	e5932000	 ldr         r2, [r3]
  02168	e3e03a03	 mvn         r3, #3, 20
  0216c	e2233018	 eor         r3, r3, #0x18
  02170	e0023003	 and         r3, r2, r3
  02174	e50b305c	 str         r3, [r11, #-0x5C]

; 1074 :                             pUHHRegs->SYSCONFIG = RegVal | UHH_SYSCONFIG_MIDLEMODE(MIDLE_SMART) | UHH_SYSCONFIG_SIDLEMODE(SIDLE_SMART);

  02178	e51b305c	 ldr         r3, [r11, #-0x5C]
  0217c	e3833a02	 orr         r3, r3, #2, 20
  02180	e3832010	 orr         r2, r3, #0x10
  02184	e51b306c	 ldr         r3, [r11, #-0x6C]
  02188	e2833010	 add         r3, r3, #0x10
  0218c	e5832000	 str         r2, [r3]

; 1075 :                             HcdMdd_PowerUp(pPddObject->lpvEHCDMddObject);

  02190	e51b3078	 ldr         r3, [r11, #-0x78]
  02194	e2833010	 add         r3, r3, #0x10
  02198	e5930000	 ldr         r0, [r3]
  0219c	eb000000	 bl          HcdMdd_PowerUp

; 1076 :                             g_fOmapEhciSuspended = FALSE;

  021a0	e59f2290	 ldr         r2, [pc, #0x290]
  021a4	e3a03000	 mov         r3, #0
  021a8	e5823000	 str         r3, [r2]

; 1077 :                             pPddObject->dwActualPowerState = ReqDx;

  021ac	e51b3078	 ldr         r3, [r11, #-0x78]
  021b0	e2832f97	 add         r2, r3, #0x97, 30
  021b4	e51b3068	 ldr         r3, [r11, #-0x68]
  021b8	e5823000	 str         r3, [r2]

; 1078 :                             #if DUMP_REGS
; 1079 :                                 dumpRegs(pPddObject);
; 1080 :                             #endif
; 1081 :                             break;

  021bc	ea000019	 b           |$LN7@HcdPdd_IOC|
  021c0		 |$LN5@HcdPdd_IOC|

; 1082 : 
; 1083 :                         case D4:
; 1084 :                             HcdMdd_PowerDown(pPddObject->lpvEHCDMddObject);

  021c0	e51b3078	 ldr         r3, [r11, #-0x78]
  021c4	e2833010	 add         r3, r3, #0x10
  021c8	e5930000	 ldr         r0, [r3]
  021cc	eb000000	 bl          HcdMdd_PowerDown

; 1085 :                             g_fOmapEhciSuspended = TRUE;

  021d0	e59f2260	 ldr         r2, [pc, #0x260]
  021d4	e3a03001	 mov         r3, #1
  021d8	e5823000	 str         r3, [r2]

; 1086 :                             pUHHRegs->SYSCONFIG &= ~(UHH_SYSCONFIG_MIDLEMODE(0x03) | UHH_SYSCONFIG_SIDLEMODE(0x03));

  021dc	e51b306c	 ldr         r3, [r11, #-0x6C]
  021e0	e2833010	 add         r3, r3, #0x10
  021e4	e5932000	 ldr         r2, [r3]
  021e8	e3e03a03	 mvn         r3, #3, 20
  021ec	e2233018	 eor         r3, r3, #0x18
  021f0	e0022003	 and         r2, r2, r3
  021f4	e51b306c	 ldr         r3, [r11, #-0x6C]
  021f8	e2833010	 add         r3, r3, #0x10
  021fc	e5832000	 str         r2, [r3]

; 1087 :                             pUHHRegs->SYSCONFIG |= (UHH_SYSCONFIG_MIDLEMODE(MIDLE_FORCE) | UHH_SYSCONFIG_SIDLEMODE(SIDLE_FORCE));

  02200	e51b306c	 ldr         r3, [r11, #-0x6C]
  02204	e2833010	 add         r3, r3, #0x10
  02208	e5932000	 ldr         r2, [r3]
  0220c	e51b306c	 ldr         r3, [r11, #-0x6C]
  02210	e2833010	 add         r3, r3, #0x10
  02214	e5832000	 str         r2, [r3]

; 1088 :                             pPddObject->dwActualPowerState = ReqDx;

  02218	e51b3078	 ldr         r3, [r11, #-0x78]
  0221c	e2832f97	 add         r2, r3, #0x97, 30
  02220	e51b3068	 ldr         r3, [r11, #-0x68]
  02224	e5823000	 str         r3, [r2]
  02228		 |$LN7@HcdPdd_IOC|

; 1089 :                             break;
; 1090 :                         }
; 1091 :                     *pdwActualOut = sizeof(CEDEVICE_POWER_STATE);

  02228	e59b2018	 ldr         r2, [r11, #0x18]
  0222c	e3a03004	 mov         r3, #4
  02230	e5823000	 str         r3, [r2]

; 1092 :                     DEBUGMSG(ZONE_INFO, (L"EHCI: IOCTL_POWER_SET to D%u \r\n", pPddObject->dwActualPowerState));

  02234	e59f31e0	 ldr         r3, [pc, #0x1E0]
  02238	e5933440	 ldr         r3, [r3, #0x440]
  0223c	e3130b01	 tst         r3, #1, 22
  02240	0a000007	 beq         |$LN31@HcdPdd_IOC|
  02244	e51b3078	 ldr         r3, [r11, #-0x78]
  02248	e2833f97	 add         r3, r3, #0x97, 30
  0224c	e5931000	 ldr         r1, [r3]
  02250	e59f01dc	 ldr         r0, [pc, #0x1DC]
  02254	eb000000	 bl          NKDbgPrintfW
  02258	e3a03001	 mov         r3, #1
  0225c	e50b3024	 str         r3, [r11, #-0x24]
  02260	ea000001	 b           |$LN32@HcdPdd_IOC|
  02264		 |$LN31@HcdPdd_IOC|
  02264	e3a03000	 mov         r3, #0
  02268	e50b3024	 str         r3, [r11, #-0x24]
  0226c		 |$LN32@HcdPdd_IOC|

; 1093 :                     rc = TRUE;

  0226c	e3a03001	 mov         r3, #1
  02270	e50b307c	 str         r3, [r11, #-0x7C]

; 1094 : 
; 1095 :                     MmUnmapIoSpace((PVOID)pUHHRegs, sizeof(OMAP_UHH_REGS));

  02274	e3a01048	 mov         r1, #0x48
  02278	e51b006c	 ldr         r0, [r11, #-0x6C]
  0227c	eb000000	 bl          MmUnmapIoSpace
  02280		 |$LN56@HcdPdd_IOC|

; 1096 :                     }

  02280	ea000002	 b           |$LN57@HcdPdd_IOC|
  02284		 |$LN52@HcdPdd_IOC|

; 1098 :                     {
; 1099 : 					RETAILMSG(1, (L"EHCI: Exception in IOCTL_POWER_SET\r\n"));

  02284	e59f01a4	 ldr         r0, [pc, #0x1A4]
  02288	eb000000	 bl          NKDbgPrintfW
  0228c	eaffffff	 b           |$LN57@HcdPdd_IOC|
  02290		 |$LN57@HcdPdd_IOC|
  02290		 |$LN10@HcdPdd_IOC|

; 1100 :                     }
; 1101 :                 }
; 1102 :             break;

  02290	ea00003f	 b           |$LN16@HcdPdd_IOC|
  02294		 |$LN4@HcdPdd_IOC|

; 1103 : 
; 1104 :         // gets the current device power state
; 1105 :         case IOCTL_POWER_GET:
; 1106 :             DEBUGMSG(ZONE_INFO, (L"EHCI: Received IOCTL_POWER_GET\r\n"));

  02294	e59f3180	 ldr         r3, [pc, #0x180]
  02298	e5933440	 ldr         r3, [r3, #0x440]
  0229c	e3130b01	 tst         r3, #1, 22
  022a0	0a000004	 beq         |$LN33@HcdPdd_IOC|
  022a4	e59f0180	 ldr         r0, [pc, #0x180]
  022a8	eb000000	 bl          NKDbgPrintfW
  022ac	e3a03001	 mov         r3, #1
  022b0	e50b3020	 str         r3, [r11, #-0x20]
  022b4	ea000001	 b           |$LN34@HcdPdd_IOC|
  022b8		 |$LN33@HcdPdd_IOC|
  022b8	e3a03000	 mov         r3, #0
  022bc	e50b3020	 str         r3, [r11, #-0x20]
  022c0		 |$LN34@HcdPdd_IOC|

; 1107 :             if (pBufOut != NULL && dwLenOut >= sizeof(CEDEVICE_POWER_STATE))

  022c0	e59b3010	 ldr         r3, [r11, #0x10]
  022c4	e3530000	 cmp         r3, #0
  022c8	0a000024	 beq         |$LN3@HcdPdd_IOC|
  022cc	e59b3014	 ldr         r3, [r11, #0x14]
  022d0	e3530004	 cmp         r3, #4
  022d4	3a000021	 bcc         |$LN3@HcdPdd_IOC|
  022d8		 |$LN62@HcdPdd_IOC|

; 1108 :                 {
; 1109 :                 __try
; 1110 :                     {
; 1111 :                     *(PCEDEVICE_POWER_STATE)pBufOut = pPddObject->dwActualPowerState;

  022d8	e51b3078	 ldr         r3, [r11, #-0x78]
  022dc	e2833f97	 add         r3, r3, #0x97, 30
  022e0	e5932000	 ldr         r2, [r3]
  022e4	e59b3010	 ldr         r3, [r11, #0x10]
  022e8	e5832000	 str         r2, [r3]

; 1112 : 
; 1113 :                     rc = TRUE;

  022ec	e3a03001	 mov         r3, #1
  022f0	e50b307c	 str         r3, [r11, #-0x7C]

; 1114 : 
; 1115 :                     DEBUGMSG(ZONE_INFO, (L"EHCI: IOCTL_POWER_GET to D%u \r\n", pPddObject->dwActualPowerState));

  022f4	e59f3120	 ldr         r3, [pc, #0x120]
  022f8	e5933440	 ldr         r3, [r3, #0x440]
  022fc	e3130b01	 tst         r3, #1, 22
  02300	0a000007	 beq         |$LN35@HcdPdd_IOC|
  02304	e51b3078	 ldr         r3, [r11, #-0x78]
  02308	e2833f97	 add         r3, r3, #0x97, 30
  0230c	e5931000	 ldr         r1, [r3]
  02310	e59f0110	 ldr         r0, [pc, #0x110]
  02314	eb000000	 bl          NKDbgPrintfW
  02318	e3a03001	 mov         r3, #1
  0231c	e50b301c	 str         r3, [r11, #-0x1C]
  02320	ea000001	 b           |$LN36@HcdPdd_IOC|
  02324		 |$LN35@HcdPdd_IOC|
  02324	e3a03000	 mov         r3, #0
  02328	e50b301c	 str         r3, [r11, #-0x1C]
  0232c		 |$LN36@HcdPdd_IOC|
  0232c		 |$LN63@HcdPdd_IOC|

; 1116 :                     }

  0232c	ea00000b	 b           |$LN64@HcdPdd_IOC|
  02330		 |$LN59@HcdPdd_IOC|

; 1118 :                     {
; 1119 :                     DEBUGMSG(ZONE_ERROR, (L"Exception in ioctl\r\n"));

  02330	e59f30e4	 ldr         r3, [pc, #0xE4]
  02334	e5933440	 ldr         r3, [r3, #0x440]
  02338	e3130901	 tst         r3, #1, 18
  0233c	0a000004	 beq         |$LN37@HcdPdd_IOC|
  02340	e59f00dc	 ldr         r0, [pc, #0xDC]
  02344	eb000000	 bl          NKDbgPrintfW
  02348	e3a03001	 mov         r3, #1
  0234c	e50b3018	 str         r3, [r11, #-0x18]
  02350	ea000001	 b           |$LN38@HcdPdd_IOC|
  02354		 |$LN37@HcdPdd_IOC|
  02354	e3a03000	 mov         r3, #0
  02358	e50b3018	 str         r3, [r11, #-0x18]
  0235c		 |$LN38@HcdPdd_IOC|
  0235c	eaffffff	 b           |$LN64@HcdPdd_IOC|
  02360		 |$LN64@HcdPdd_IOC|
  02360		 |$LN3@HcdPdd_IOC|

; 1120 :                     }
; 1121 :                 }
; 1122 :             break;

  02360	ea00000b	 b           |$LN16@HcdPdd_IOC|
  02364		 |$LN1@HcdPdd_IOC|

; 1123 : 
; 1124 :         default:
; 1125 :             DEBUGMSG(ZONE_CONTROL, (L"EHCI: Not handled IOCTL 0x%X", dwCode));

  02364	e59f30b0	 ldr         r3, [pc, #0xB0]
  02368	e5933440	 ldr         r3, [r3, #0x440]
  0236c	e3130020	 tst         r3, #0x20
  02370	0a000005	 beq         |$LN39@HcdPdd_IOC|
  02374	e59b1004	 ldr         r1, [r11, #4]
  02378	e59f00a0	 ldr         r0, [pc, #0xA0]
  0237c	eb000000	 bl          NKDbgPrintfW
  02380	e3a03001	 mov         r3, #1
  02384	e50b3014	 str         r3, [r11, #-0x14]
  02388	ea000001	 b           |$LN40@HcdPdd_IOC|
  0238c		 |$LN39@HcdPdd_IOC|
  0238c	e3a03000	 mov         r3, #0
  02390	e50b3014	 str         r3, [r11, #-0x14]
  02394		 |$LN40@HcdPdd_IOC|
  02394		 |$LN16@HcdPdd_IOC|
  02394		 |$cleanUp$45356|

; 1126 :             break;
; 1127 :         }
; 1128 : 
; 1129 : cleanUp:
; 1130 :     DEBUGMSG(ZONE_CONTROL, (L"-HcdPdd_IOControl(rc = %d)\r\n", rc));

  02394	e59f3080	 ldr         r3, [pc, #0x80]
  02398	e5933440	 ldr         r3, [r3, #0x440]
  0239c	e3130020	 tst         r3, #0x20
  023a0	0a000005	 beq         |$LN41@HcdPdd_IOC|
  023a4	e51b107c	 ldr         r1, [r11, #-0x7C]
  023a8	e59f0068	 ldr         r0, [pc, #0x68]
  023ac	eb000000	 bl          NKDbgPrintfW
  023b0	e3a03001	 mov         r3, #1
  023b4	e50b3010	 str         r3, [r11, #-0x10]
  023b8	ea000001	 b           |$LN42@HcdPdd_IOC|
  023bc		 |$LN41@HcdPdd_IOC|
  023bc	e3a03000	 mov         r3, #0
  023c0	e50b3010	 str         r3, [r11, #-0x10]
  023c4		 |$LN42@HcdPdd_IOC|

; 1131 :     return rc;

  023c4	e51b307c	 ldr         r3, [r11, #-0x7C]
  023c8	e50b3048	 str         r3, [r11, #-0x48]
  023cc		 |$LN43@HcdPdd_IOC|

; 1132 : }

  023cc	e51b0048	 ldr         r0, [r11, #-0x48]
  023d0	e24bd00c	 sub         sp, r11, #0xC
  023d4	e89d6800	 ldmia       sp, {r11, sp, lr}
  023d8	e12fff1e	 bx          lr

			 ENDP  ; |HcdPdd_IOControl|

  023dc		 |$LN58@HcdPdd_IOC|
  023dc		 |$LN69@HcdPdd_IOC|

; 1117 :                 __except(EXCEPTION_EXECUTE_HANDLER)

  023dc	e52de004	 str         lr, [sp, #-4]!
  023e0	e24dd010	 sub         sp, sp, #0x10
  023e4		 |$LN61@HcdPdd_IOC|
  023e4		 |$LN89@HcdPdd_IOC|
  023e4	e3a00001	 mov         r0, #1
  023e8		 |$LN60@HcdPdd_IOC|
  023e8	e28dd010	 add         sp, sp, #0x10
  023ec	e49df004	 ldr         pc, [sp], #4
  023f0		 |$LN90@HcdPdd_IOC|
  023f0		 |$LN51@HcdPdd_IOC|
  023f0		 |$LN71@HcdPdd_IOC|

; 1097 :                 __except(EXCEPTION_EXECUTE_HANDLER)

  023f0	e52de004	 str         lr, [sp, #-4]!
  023f4	e24dd010	 sub         sp, sp, #0x10
  023f8		 |$LN54@HcdPdd_IOC|
  023f8		 |$LN91@HcdPdd_IOC|
  023f8	e3a00001	 mov         r0, #1
  023fc		 |$LN53@HcdPdd_IOC|
  023fc	e28dd010	 add         sp, sp, #0x10
  02400	e49df004	 ldr         pc, [sp], #4
  02404		 |$LN92@HcdPdd_IOC|
  02404		 |$LN44@HcdPdd_IOC|
  02404		 |$LN72@HcdPdd_IOC|

; 1039 :                     __except(EXCEPTION_EXECUTE_HANDLER)

  02404	e52de004	 str         lr, [sp, #-4]!
  02408	e24dd010	 sub         sp, sp, #0x10
  0240c		 |$LN47@HcdPdd_IOC|
  0240c		 |$LN93@HcdPdd_IOC|
  0240c	e3a00001	 mov         r0, #1
  02410		 |$LN46@HcdPdd_IOC|
  02410	e28dd010	 add         sp, sp, #0x10
  02414	e49df004	 ldr         pc, [sp], #4
  02418		 |$LN95@HcdPdd_IOC|
  02418		 |$LN96@HcdPdd_IOC|
  02418	00000000	 DCD         |??_C@_1DK@IHPPGEJG@?$AA?9?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0241c		 |$LN97@HcdPdd_IOC|
  0241c	00000000	 DCD         |dpCurSettings|
  02420		 |$LN98@HcdPdd_IOC|
  02420	00000000	 DCD         |??_C@_1DK@FDEPLPGD@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAN?$AAo?$AAt?$AA?5?$AAh?$AAa?$AAn?$AAd?$AAl?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA?5?$AA0?$AAx?$AA?$CF?$AAX?$AA?$AA@|
  02424		 |$LN99@HcdPdd_IOC|
  02424	00000000	 DCD         |??_C@_1CK@OBPLBNBH@?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAi?$AAo?$AAc?$AAt?$AAl?$AA?$AN?$AA?6?$AA?$AA@|
  02428		 |$LN100@HcdPdd_IOC|
  02428	00000000	 DCD         |??_C@_1EA@OLHGKBLE@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF?$AAu?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  0242c		 |$LN101@HcdPdd_IOC|
  0242c	00000000	 DCD         |??_C@_1EC@EAHIBMJP@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?$AN?$AA?6@|
  02430		 |$LN102@HcdPdd_IOC|
  02430	00000000	 DCD         |??_C@_1EK@FJEIBADC@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS@|
  02434		 |$LN103@HcdPdd_IOC|
  02434	00000000	 DCD         |??_C@_1EA@PGPOIEBA@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF?$AAu?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  02438		 |$LN104@HcdPdd_IOC|
  02438	00000000	 DCD         |g_fOmapEhciSuspended|
  0243c		 |$LN105@HcdPdd_IOC|
  0243c	00000000	 DCD         |??_C@_1EC@EPGGMKBM@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?$AN?$AA?6@|
  02440		 |$LN106@HcdPdd_IOC|
  02440	00000000	 DCD         |??_C@_1EG@GFAJAJFH@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAQ?$AAU?$AAE?$AAR?$AAY@|
  02444		 |$LN107@HcdPdd_IOC|
  02444	00000000	 DCD         |??_C@_1CK@MHJHMPML@?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAi?$AAo?$AAc?$AAt?$AAl?$AA?$AN?$AA?6?$AA?$AA@|
  02448		 |$LN108@HcdPdd_IOC|
  02448	00000000	 DCD         |??_C@_1FE@NKCLLFNP@?$AAE?$AAH?$AAC?$AAI?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAC?$AAA?$AAP?$AAA?$AAB@|
  0244c		 |$LN109@HcdPdd_IOC|
  0244c	00000000	 DCD         |??_C@_1GK@OOJDEKIJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAc?$AAd?$AAP?$AAd?$AAd?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe@|
  02450		 |$LN94@HcdPdd_IOC|
  02450		 |$LN73@HcdPdd_IOC|
	EXPORT	|HcdPdd_InitiatePowerUp|

  000f0			 AREA	 |.pdata|, PDATA
|$T45874| DCD	|$LN5@HcdPdd_Ini@2|
	DCD	0x40000503
; Function compile flags: /Odtp

  02450			 AREA	 |.text|, CODE, ARM

  02450		 |HcdPdd_InitiatePowerUp| PROC

; 1140 : {

  02450		 |$LN5@HcdPdd_Ini@2|
  02450	e1a0c00d	 mov         r12, sp
  02454	e92d0001	 stmdb       sp!, {r0}
  02458	e92d5000	 stmdb       sp!, {r12, lr}
  0245c		 |$M45871|

; 1141 : 	UNREFERENCED_PARAMETER(hDeviceContext);
; 1142 : }

  0245c	e89d6000	 ldmia       sp, {sp, lr}
  02460	e12fff1e	 bx          lr
  02464		 |$M45872|

			 ENDP  ; |HcdPdd_InitiatePowerUp|

	END
