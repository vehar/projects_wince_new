; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\CEDDK\PMEXT\pmext.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.bss|, NOINIT
|_hPmExt| %	0x4
|_PmIfc| %	0x34
	EXPORT	|HalContextUpdateDirtyRegister|
	IMPORT	|KernelIoControl|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\ceddk\pmext\pmext.cpp

  00000			 AREA	 |.bss|, NOINIT
|?pKernelContextSaveMask@?1??HalContextUpdateDirtyRegister@@9@4PAIA| % 0x4 ; `HalContextUpdateDirtyRegister'::`2'::pKernelContextSaveMask

  00000			 AREA	 |.pdata|, PDATA
|$T36669| DCD	|$LN6@HalContext|
	DCD	0x40001e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HalContextUpdateDirtyRegister| PROC

; 45   : {

  00000		 |$LN6@HalContext|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd010	 sub         sp, sp, #0x10
  00010		 |$M36666|

; 46   : #if 1
; 47   : #if (_WINCEOSVER<600)
; 48   :     BOOL bOldMode = SetKMode(TRUE);
; 49   : #endif
; 50   : 
; 51   :     static UINT32 *pKernelContextSaveMask = NULL;
; 52   : 
; 53   :     if (pKernelContextSaveMask == NULL)

  00010	e59f3058	 ldr         r3, [pc, #0x58]
  00014	e5933000	 ldr         r3, [r3]
  00018	e3530000	 cmp         r3, #0
  0001c	1a000008	 bne         |$LN1@HalContext|

; 54   :         {
; 55   :         KernelIoControl(IOCTL_HAL_CONTEXTSAVE_GETBUFFER, 
; 56   :             NULL, 
; 57   :             0, 
; 58   :             &pKernelContextSaveMask, 
; 59   :             sizeof(UINT**), 
; 60   :             0
; 61   :             );

  00020	e3a03000	 mov         r3, #0
  00024	e58d3004	 str         r3, [sp, #4]
  00028	e3a03004	 mov         r3, #4
  0002c	e58d3000	 str         r3, [sp]
  00030	e59f3038	 ldr         r3, [pc, #0x38]
  00034	e3a02000	 mov         r2, #0
  00038	e3a01000	 mov         r1, #0
  0003c	e59f0030	 ldr         r0, [pc, #0x30]
  00040	eb000000	 bl          KernelIoControl
  00044		 |$LN1@HalContext|

; 62   :         }
; 63   : 
; 64   :     *pKernelContextSaveMask |= ffRegister;

  00044	e59f3024	 ldr         r3, [pc, #0x24]
  00048	e5933000	 ldr         r3, [r3]
  0004c	e5932000	 ldr         r2, [r3]
  00050	e59d3018	 ldr         r3, [sp, #0x18]
  00054	e1822003	 orr         r2, r2, r3
  00058	e59f3010	 ldr         r3, [pc, #0x10]
  0005c	e5933000	 ldr         r3, [r3]
  00060	e5832000	 str         r2, [r3]

; 65   : 
; 66   : #if (_WINCEOSVER<600)
; 67   :     SetKMode(bOldMode);
; 68   : #endif
; 69   : #else
; 70   :     UNREFERENCED_PARAMETER(ffRegister);
; 71   : #endif
; 72   : }

  00064	e28dd010	 add         sp, sp, #0x10
  00068	e89d6000	 ldmia       sp, {sp, lr}
  0006c	e12fff1e	 bx          lr
  00070		 |$LN7@HalContext|
  00070		 |$LN8@HalContext|
  00070	00000000	 DCD         |?pKernelContextSaveMask@?1??HalContextUpdateDirtyRegister@@9@4PAIA|
  00074		 |$LN9@HalContext|
  00074	01f50fd8	 DCD         0x1f50fd8
  00078		 |$M36667|

			 ENDP  ; |HalContextUpdateDirtyRegister|

	EXPORT	|PmxSendDeviceNotification|

  00008			 AREA	 |.pdata|, PDATA
|$T36685| DCD	|$LN9@PmxSendDev|
	DCD	0x40003004
; Function compile flags: /Odtp

  00078			 AREA	 |.text|, CODE, ARM

  00078		 |PmxSendDeviceNotification| PROC

; 157  : {

  00078		 |$LN9@PmxSendDev|
  00078	e1a0c00d	 mov         r12, sp
  0007c	e92d000f	 stmdb       sp!, {r0 - r3}
  00080	e92d5010	 stmdb       sp!, {r4, r12, lr}
  00084	e24dd034	 sub         sp, sp, #0x34
  00088		 |$M36682|

; 158  :     DWORD rc = FALSE;

  00088	e3a03000	 mov         r3, #0
  0008c	e58d3010	 str         r3, [sp, #0x10]

; 159  : 
; 160  :     // sanity check
; 161  :     if (IsPmExtValid() == FALSE) goto cleanUp;

  00090	e59f309c	 ldr         r3, [pc, #0x9C]
  00094	e5933000	 ldr         r3, [r3]
  00098	e3530000	 cmp         r3, #0
  0009c	0a000002	 beq         |$LN5@PmxSendDev|
  000a0	e3a03001	 mov         r3, #1
  000a4	e58d3028	 str         r3, [sp, #0x28]
  000a8	ea000003	 b           |$LN6@PmxSendDev|
  000ac		 |$LN5@PmxSendDev|
  000ac	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  000b0	e58d002c	 str         r0, [sp, #0x2C]
  000b4	e59d302c	 ldr         r3, [sp, #0x2C]
  000b8	e58d3028	 str         r3, [sp, #0x28]
  000bc		 |$LN6@PmxSendDev|
  000bc	e59d3028	 ldr         r3, [sp, #0x28]
  000c0	e3530000	 cmp         r3, #0
  000c4	1a000001	 bne         |$LN2@PmxSendDev|
  000c8	ea000013	 b           |$LN1@PmxSendDev|
  000cc	ea000012	 b           |$cleanUp$36576|
  000d0		 |$LN2@PmxSendDev|

; 162  : 
; 163  :     // make call
; 164  :     rc = _PmIfc.PmxSendDeviceNotification(listId, dwParam, 
; 165  :                 dwIoControlCode, lpInBuf, nInBufSize, lpOutBuf, 
; 166  :                 nOutBufSize, pdwBytesRet
; 167  :                 );

  000d0	e59d305c	 ldr         r3, [sp, #0x5C]
  000d4	e58d300c	 str         r3, [sp, #0xC]
  000d8	e59d3058	 ldr         r3, [sp, #0x58]
  000dc	e58d3008	 str         r3, [sp, #8]
  000e0	e59d3054	 ldr         r3, [sp, #0x54]
  000e4	e58d3004	 str         r3, [sp, #4]
  000e8	e59d3050	 ldr         r3, [sp, #0x50]
  000ec	e58d3000	 str         r3, [sp]
  000f0	e59d304c	 ldr         r3, [sp, #0x4C]
  000f4	e59d2048	 ldr         r2, [sp, #0x48]
  000f8	e59d1044	 ldr         r1, [sp, #0x44]
  000fc	e59d0040	 ldr         r0, [sp, #0x40]
  00100	e59fe02c	 ldr         lr, [pc, #0x2C]
  00104	e59e4004	 ldr         r4, [lr, #4]
  00108	e1a0e00f	 mov         lr, pc
  0010c	e12fff14	 bx          r4
  00110	e58d0030	 str         r0, [sp, #0x30]
  00114	e59d3030	 ldr         r3, [sp, #0x30]
  00118	e58d3010	 str         r3, [sp, #0x10]
  0011c		 |$LN1@PmxSendDev|
  0011c		 |$cleanUp$36576|

; 168  : 
; 169  : cleanUp:
; 170  :     return rc;

  0011c	e59d3010	 ldr         r3, [sp, #0x10]
  00120	e58d3024	 str         r3, [sp, #0x24]

; 171  : }

  00124	e59d0024	 ldr         r0, [sp, #0x24]
  00128	e28dd034	 add         sp, sp, #0x34
  0012c	e89d6010	 ldmia       sp, {r4, sp, lr}
  00130	e12fff1e	 bx          lr
  00134		 |$LN10@PmxSendDev|
  00134		 |$LN11@PmxSendDev|
  00134	00000000	 DCD         |_PmIfc|
  00138		 |$M36683|

			 ENDP  ; |PmxSendDeviceNotification|

	EXPORT	|??_C@_1CC@CELKBIKF@?$AAO?$AAm?$AAa?$AAp?$AAP?$AAm?$AAE?$AAx?$AAt?$AAe?$AAn?$AAs?$AAi?$AAo?$AAn?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_17DJMMGLBL@?$AAD?$AAl?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@EKFPKFFC@?$AA?2?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo@| [ DATA ] ; `string'
	EXPORT	|__$ArrayPad$| [ DATA ]
	IMPORT	|FreeLibrary|
	IMPORT	|RegCloseKey|
	IMPORT	|GetProcAddressW|
	IMPORT	|LoadLibraryW|
	IMPORT	|RegQueryValueExW|
	IMPORT	|RegOpenKeyExW|
	IMPORT	|__security_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_check_cookie|

  00010			 AREA	 |.pdata|, PDATA
|$T36701| DCD	|$LN19@LoadPmExt|
	DCD	0xc0007502

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@CELKBIKF@?$AAO?$AAm?$AAa?$AAp?$AAP?$AAm?$AAE?$AAx?$AAt?$AAe?$AAn?$AAs?$AAi?$AAo?$AAn?$AAs?$AA?$AA@| DCB "O"
	DCB	0x0, "m", 0x0, "a", 0x0, "p", 0x0, "P", 0x0, "m", 0x0, "E"
	DCB	0x0, "x", 0x0, "t", 0x0, "e", 0x0, "n", 0x0, "s", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "s", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17DJMMGLBL@?$AAD?$AAl?$AAl?$AA?$AA@| DCB "D", 0x0, "l", 0x0, "l", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@EKFPKFFC@?$AA?2?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo@| DCB "\\"
	DCB	0x0, "S", 0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M"
	DCB	0x0, "\\", 0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "\\", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "\\", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, "\\", 0x0, "E", 0x0, "x", 0x0, "t"
	DCB	0x0, "e", 0x0, "n", 0x0, "s", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, "\\", 0x0, "O", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.xdata|, DATA
|$T36697| DCD	0xffffffd8
; Function compile flags: /Odtp

  00138			 AREA	 |.text|, CODE, ARM

  00138	00000000	 DCD         |__GSHandlerCheck|
  0013c	00000000	 DCD         |$T36697|

  00140		 |?LoadPmExt@@YAHXZ| PROC		; LoadPmExt

; 83   : {

  00140		 |$LN19@LoadPmExt|
  00140	e52de004	 str         lr, [sp, #-4]!
  00144	e24ddf92	 sub         sp, sp, #0x92, 30
  00148		 |$M36698|
  00148	e59f31c0	 ldr         r3, [pc, #0x1C0]
  0014c	e5933000	 ldr         r3, [r3]
  00150	e58d3224	 str         r3, [sp, #0x224]

; 84   :     DWORD dwType;
; 85   :     DWORD dwSize;
; 86   :     BOOL rc = FALSE;

  00154	e3a03000	 mov         r3, #0
  00158	e58d3008	 str         r3, [sp, #8]

; 87   :     HKEY hKey = NULL;

  0015c	e3a03000	 mov         r3, #0
  00160	e58d3014	 str         r3, [sp, #0x14]

; 88   :     _TCHAR szBuffer[MAX_PATH];
; 89   :     fnOmapPmExtensions OmapPmExtensions;
; 90   : 
; 91   :     // check if an attempt was already made, if so don't do it again
; 92   :     if (_PmIfc.bInitialized == TRUE) goto cleanUp;

  00164	e59f3194	 ldr         r3, [pc, #0x194]
  00168	e5933000	 ldr         r3, [r3]
  0016c	e3530001	 cmp         r3, #1
  00170	1a000001	 bne         |$LN14@LoadPmExt|
  00174	ea00004a	 b           |$LN13@LoadPmExt|
  00178	ea000049	 b           |$cleanUp$36539|
  0017c		 |$LN14@LoadPmExt|

; 93   : 
; 94   :     // open registery key to the power management extension
; 95   :     RegOpenKeyEx(HKEY_LOCAL_MACHINE, PMEXT_MODULE_PATH, 0, 0, &hKey);

  0017c	e28d3014	 add         r3, sp, #0x14
  00180	e58d3000	 str         r3, [sp]
  00184	e3a03000	 mov         r3, #0
  00188	e3a02000	 mov         r2, #0
  0018c	e59f1178	 ldr         r1, [pc, #0x178]
  00190	e3a0010a	 mov         r0, #0xA, 2
  00194	eb000000	 bl          RegOpenKeyExW

; 96   :     if (hKey == NULL) goto cleanUp;

  00198	e59d3014	 ldr         r3, [sp, #0x14]
  0019c	e3530000	 cmp         r3, #0
  001a0	1a000001	 bne         |$LN12@LoadPmExt|
  001a4	ea00003e	 b           |$LN11@LoadPmExt|
  001a8	ea00003d	 b           |$cleanUp$36539|
  001ac		 |$LN12@LoadPmExt|

; 97   : 
; 98   :     // get power management extension module which containts the framework
; 99   :     dwType = REG_SZ;

  001ac	e3a03001	 mov         r3, #1
  001b0	e58d300c	 str         r3, [sp, #0xC]

; 100  :     dwSize = sizeof(szBuffer);

  001b4	e3a03f82	 mov         r3, #0x82, 30
  001b8	e58d3010	 str         r3, [sp, #0x10]

; 101  :     if (RegQueryValueEx(hKey, PMEXT_MODULE_KEY, NULL, &dwType, 
; 102  :             (BYTE*)szBuffer, &dwSize) != ERROR_SUCCESS)

  001bc	e28d3010	 add         r3, sp, #0x10
  001c0	e58d3004	 str         r3, [sp, #4]
  001c4	e28d301c	 add         r3, sp, #0x1C
  001c8	e58d3000	 str         r3, [sp]
  001cc	e28d300c	 add         r3, sp, #0xC
  001d0	e3a02000	 mov         r2, #0
  001d4	e59f112c	 ldr         r1, [pc, #0x12C]
  001d8	e59d0014	 ldr         r0, [sp, #0x14]
  001dc	eb000000	 bl          RegQueryValueExW
  001e0	e58d0238	 str         r0, [sp, #0x238]
  001e4	e59d3238	 ldr         r3, [sp, #0x238]
  001e8	e3530000	 cmp         r3, #0
  001ec	0a000001	 beq         |$LN10@LoadPmExt|
  001f0	ea00002b	 b           |$LN9@LoadPmExt|

; 103  :         {
; 104  :         goto cleanUp;

  001f4	ea00002a	 b           |$cleanUp$36539|
  001f8		 |$LN10@LoadPmExt|

; 105  :         }
; 106  : 
; 107  :     // load module
; 108  :     _hPmExt = (HMODULE)LoadLibrary(szBuffer);

  001f8	e28d001c	 add         r0, sp, #0x1C
  001fc	eb000000	 bl          LoadLibraryW
  00200	e58d023c	 str         r0, [sp, #0x23C]
  00204	e59d223c	 ldr         r2, [sp, #0x23C]
  00208	e59f30ec	 ldr         r3, [pc, #0xEC]
  0020c	e5832000	 str         r2, [r3]

; 109  :     if (_hPmExt == NULL) goto cleanUp;

  00210	e59f30e4	 ldr         r3, [pc, #0xE4]
  00214	e5933000	 ldr         r3, [r3]
  00218	e3530000	 cmp         r3, #0
  0021c	1a000001	 bne         |$LN8@LoadPmExt|
  00220	ea00001f	 b           |$LN7@LoadPmExt|
  00224	ea00001e	 b           |$cleanUp$36539|
  00228		 |$LN8@LoadPmExt|

; 110  : 
; 111  :     // extract exported functions
; 112  :     OmapPmExtensions = (fnOmapPmExtensions)GetProcAddress(
; 113  :                                     _hPmExt, 
; 114  :                                     L"OmapPmExtensions"
; 115  :                                     );

  00228	e59f10d4	 ldr         r1, [pc, #0xD4]
  0022c	e59f30c8	 ldr         r3, [pc, #0xC8]
  00230	e5930000	 ldr         r0, [r3]
  00234	eb000000	 bl          GetProcAddressW
  00238	e58d0240	 str         r0, [sp, #0x240]
  0023c	e59d3240	 ldr         r3, [sp, #0x240]
  00240	e58d3018	 str         r3, [sp, #0x18]

; 116  : 
; 117  :     // validate library and routine
; 118  :     if (OmapPmExtensions == NULL) goto cleanUp;

  00244	e59d3018	 ldr         r3, [sp, #0x18]
  00248	e3530000	 cmp         r3, #0
  0024c	1a000001	 bne         |$LN6@LoadPmExt|
  00250	ea000013	 b           |$LN5@LoadPmExt|
  00254	ea000012	 b           |$cleanUp$36539|
  00258		 |$LN6@LoadPmExt|

; 119  :     if (OmapPmExtensions(&_PmIfc, sizeof(OMAP_PMEXT_IFC)) == FALSE)

  00258	e3a01034	 mov         r1, #0x34
  0025c	e59f009c	 ldr         r0, [pc, #0x9C]
  00260	e59d3018	 ldr         r3, [sp, #0x18]
  00264	e1a0e00f	 mov         lr, pc
  00268	e12fff13	 bx          r3
  0026c	e58d0244	 str         r0, [sp, #0x244]
  00270	e59d3244	 ldr         r3, [sp, #0x244]
  00274	e3530000	 cmp         r3, #0
  00278	1a000004	 bne         |$LN4@LoadPmExt|

; 120  :         {
; 121  :         _PmIfc.bInitialized = FALSE;

  0027c	e59f207c	 ldr         r2, [pc, #0x7C]
  00280	e3a03000	 mov         r3, #0
  00284	e5823000	 str         r3, [r2]
  00288	ea000005	 b           |$LN3@LoadPmExt|

; 122  :         goto cleanUp;

  0028c	ea000004	 b           |$cleanUp$36539|
  00290		 |$LN4@LoadPmExt|

; 123  :         }
; 124  : 
; 125  :     _PmIfc.bInitialized = TRUE;

  00290	e59f2068	 ldr         r2, [pc, #0x68]
  00294	e3a03001	 mov         r3, #1
  00298	e5823000	 str         r3, [r2]

; 126  :     rc = TRUE;

  0029c	e3a03001	 mov         r3, #1
  002a0	e58d3008	 str         r3, [sp, #8]
  002a4		 |$LN3@LoadPmExt|
  002a4		 |$LN5@LoadPmExt|
  002a4		 |$LN7@LoadPmExt|
  002a4		 |$LN9@LoadPmExt|
  002a4		 |$LN11@LoadPmExt|
  002a4		 |$LN13@LoadPmExt|
  002a4		 |$cleanUp$36539|

; 127  :     
; 128  : cleanUp:    
; 129  :     if (hKey != NULL) RegCloseKey(hKey);

  002a4	e59d3014	 ldr         r3, [sp, #0x14]
  002a8	e3530000	 cmp         r3, #0
  002ac	0a000001	 beq         |$LN2@LoadPmExt|
  002b0	e59d0014	 ldr         r0, [sp, #0x14]
  002b4	eb000000	 bl          RegCloseKey
  002b8		 |$LN2@LoadPmExt|

; 130  :     if (rc == FALSE)

  002b8	e59d3008	 ldr         r3, [sp, #8]
  002bc	e3530000	 cmp         r3, #0
  002c0	1a000005	 bne         |$LN1@LoadPmExt|

; 131  :         {
; 132  :         // something failed, don't attempt to reload module
; 133  :         FreeLibrary(_hPmExt);

  002c4	e59f3030	 ldr         r3, [pc, #0x30]
  002c8	e5930000	 ldr         r0, [r3]
  002cc	eb000000	 bl          FreeLibrary

; 134  :         _hPmExt = (HMODULE)INVALID_HANDLE_VALUE;

  002d0	e59f2024	 ldr         r2, [pc, #0x24]
  002d4	e3e03000	 mvn         r3, #0
  002d8	e5823000	 str         r3, [r2]
  002dc		 |$LN1@LoadPmExt|

; 135  :         }
; 136  :             
; 137  :     return rc;

  002dc	e59d0224	 ldr         r0, [sp, #0x224]
  002e0	eb000000	 bl          __security_check_cookie
  002e4	e59d3008	 ldr         r3, [sp, #8]
  002e8	e58d3234	 str         r3, [sp, #0x234]

; 138  : }

  002ec	e59d0234	 ldr         r0, [sp, #0x234]
  002f0	e28ddf92	 add         sp, sp, #0x92, 30
  002f4	e49de004	 ldr         lr, [sp], #4
  002f8	e12fff1e	 bx          lr
  002fc		 |$LN20@LoadPmExt|
  002fc		 |$LN21@LoadPmExt|
  002fc	00000000	 DCD         |_hPmExt|
  00300		 |$LN22@LoadPmExt|
  00300	00000000	 DCD         |_PmIfc|
  00304		 |$LN23@LoadPmExt|
  00304	00000000	 DCD         |??_C@_1CC@CELKBIKF@?$AAO?$AAm?$AAa?$AAp?$AAP?$AAm?$AAE?$AAx?$AAt?$AAe?$AAn?$AAs?$AAi?$AAo?$AAn?$AAs?$AA?$AA@|
  00308		 |$LN24@LoadPmExt|
  00308	00000000	 DCD         |??_C@_17DJMMGLBL@?$AAD?$AAl?$AAl?$AA?$AA@|
  0030c		 |$LN25@LoadPmExt|
  0030c	00000000	 DCD         |??_C@_1GO@EKFPKFFC@?$AA?2?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo@|
  00310		 |$LN26@LoadPmExt|
  00310	00000000	 DCD         |__security_cookie|
  00314		 |$M36699|

			 ENDP  ; |?LoadPmExt@@YAHXZ|, LoadPmExt

	EXPORT	|PmxSetConstraintByClass|

  00018			 AREA	 |.pdata|, PDATA
|$T36716| DCD	|$LN9@PmxSetCons|
	DCD	0x40002804
; Function compile flags: /Odtp

  00314			 AREA	 |.text|, CODE, ARM

  00314		 |PmxSetConstraintByClass| PROC

; 186  : {

  00314		 |$LN9@PmxSetCons|
  00314	e1a0c00d	 mov         r12, sp
  00318	e92d000f	 stmdb       sp!, {r0 - r3}
  0031c	e92d5010	 stmdb       sp!, {r4, r12, lr}
  00320	e24dd014	 sub         sp, sp, #0x14
  00324		 |$M36713|

; 187  :     HANDLE rc = NULL;

  00324	e3a03000	 mov         r3, #0
  00328	e58d3000	 str         r3, [sp]

; 188  : 
; 189  :     // sanity check
; 190  :     if (IsPmExtValid() == FALSE) goto cleanUp;

  0032c	e59f307c	 ldr         r3, [pc, #0x7C]
  00330	e5933000	 ldr         r3, [r3]
  00334	e3530000	 cmp         r3, #0
  00338	0a000002	 beq         |$LN5@PmxSetCons|
  0033c	e3a03001	 mov         r3, #1
  00340	e58d3008	 str         r3, [sp, #8]
  00344	ea000003	 b           |$LN6@PmxSetCons|
  00348		 |$LN5@PmxSetCons|
  00348	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  0034c	e58d000c	 str         r0, [sp, #0xC]
  00350	e59d300c	 ldr         r3, [sp, #0xC]
  00354	e58d3008	 str         r3, [sp, #8]
  00358		 |$LN6@PmxSetCons|
  00358	e59d3008	 ldr         r3, [sp, #8]
  0035c	e3530000	 cmp         r3, #0
  00360	1a000001	 bne         |$LN2@PmxSetCons|
  00364	ea00000b	 b           |$LN1@PmxSetCons|
  00368	ea00000a	 b           |$cleanUp$36586|
  0036c		 |$LN2@PmxSetCons|

; 191  : 
; 192  :     // make call
; 193  :     rc = _PmIfc.PmxSetConstraintByClass(classId, msg, pParam, size);

  0036c	e59d302c	 ldr         r3, [sp, #0x2C]
  00370	e59d2028	 ldr         r2, [sp, #0x28]
  00374	e59d1024	 ldr         r1, [sp, #0x24]
  00378	e59d0020	 ldr         r0, [sp, #0x20]
  0037c	e59fe02c	 ldr         lr, [pc, #0x2C]
  00380	e59e4008	 ldr         r4, [lr, #8]
  00384	e1a0e00f	 mov         lr, pc
  00388	e12fff14	 bx          r4
  0038c	e58d0010	 str         r0, [sp, #0x10]
  00390	e59d3010	 ldr         r3, [sp, #0x10]
  00394	e58d3000	 str         r3, [sp]
  00398		 |$LN1@PmxSetCons|
  00398		 |$cleanUp$36586|

; 194  : 
; 195  : cleanUp:
; 196  :     return rc;

  00398	e59d3000	 ldr         r3, [sp]
  0039c	e58d3004	 str         r3, [sp, #4]

; 197  : }

  003a0	e59d0004	 ldr         r0, [sp, #4]
  003a4	e28dd014	 add         sp, sp, #0x14
  003a8	e89d6010	 ldmia       sp, {r4, sp, lr}
  003ac	e12fff1e	 bx          lr
  003b0		 |$LN10@PmxSetCons|
  003b0		 |$LN11@PmxSetCons|
  003b0	00000000	 DCD         |_PmIfc|
  003b4		 |$M36714|

			 ENDP  ; |PmxSetConstraintByClass|

	EXPORT	|PmxSetConstraintById|

  00020			 AREA	 |.pdata|, PDATA
|$T36726| DCD	|$LN9@PmxSetCons@2|
	DCD	0x40002804
; Function compile flags: /Odtp

  003b4			 AREA	 |.text|, CODE, ARM

  003b4		 |PmxSetConstraintById| PROC

; 212  : {

  003b4		 |$LN9@PmxSetCons@2|
  003b4	e1a0c00d	 mov         r12, sp
  003b8	e92d000f	 stmdb       sp!, {r0 - r3}
  003bc	e92d5010	 stmdb       sp!, {r4, r12, lr}
  003c0	e24dd014	 sub         sp, sp, #0x14
  003c4		 |$M36723|

; 213  :     HANDLE rc = NULL;

  003c4	e3a03000	 mov         r3, #0
  003c8	e58d3000	 str         r3, [sp]

; 214  : 
; 215  :     // sanity check
; 216  :     if (IsPmExtValid() == FALSE) goto cleanUp;

  003cc	e59f307c	 ldr         r3, [pc, #0x7C]
  003d0	e5933000	 ldr         r3, [r3]
  003d4	e3530000	 cmp         r3, #0
  003d8	0a000002	 beq         |$LN5@PmxSetCons@2|
  003dc	e3a03001	 mov         r3, #1
  003e0	e58d3008	 str         r3, [sp, #8]
  003e4	ea000003	 b           |$LN6@PmxSetCons@2|
  003e8		 |$LN5@PmxSetCons@2|
  003e8	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  003ec	e58d000c	 str         r0, [sp, #0xC]
  003f0	e59d300c	 ldr         r3, [sp, #0xC]
  003f4	e58d3008	 str         r3, [sp, #8]
  003f8		 |$LN6@PmxSetCons@2|
  003f8	e59d3008	 ldr         r3, [sp, #8]
  003fc	e3530000	 cmp         r3, #0
  00400	1a000001	 bne         |$LN2@PmxSetCons@2|
  00404	ea00000b	 b           |$LN1@PmxSetCons@2|
  00408	ea00000a	 b           |$cleanUp$36596|
  0040c		 |$LN2@PmxSetCons@2|

; 217  : 
; 218  :     // make call
; 219  :     rc = _PmIfc.PmxSetConstraintById(szId, msg, pParam, size);

  0040c	e59d302c	 ldr         r3, [sp, #0x2C]
  00410	e59d2028	 ldr         r2, [sp, #0x28]
  00414	e59d1024	 ldr         r1, [sp, #0x24]
  00418	e59d0020	 ldr         r0, [sp, #0x20]
  0041c	e59fe02c	 ldr         lr, [pc, #0x2C]
  00420	e59e400c	 ldr         r4, [lr, #0xC]
  00424	e1a0e00f	 mov         lr, pc
  00428	e12fff14	 bx          r4
  0042c	e58d0010	 str         r0, [sp, #0x10]
  00430	e59d3010	 ldr         r3, [sp, #0x10]
  00434	e58d3000	 str         r3, [sp]
  00438		 |$LN1@PmxSetCons@2|
  00438		 |$cleanUp$36596|

; 220  : 
; 221  : cleanUp:
; 222  :     return rc;

  00438	e59d3000	 ldr         r3, [sp]
  0043c	e58d3004	 str         r3, [sp, #4]

; 223  : }

  00440	e59d0004	 ldr         r0, [sp, #4]
  00444	e28dd014	 add         sp, sp, #0x14
  00448	e89d6010	 ldmia       sp, {r4, sp, lr}
  0044c	e12fff1e	 bx          lr
  00450		 |$LN10@PmxSetCons@2|
  00450		 |$LN11@PmxSetCons@2|
  00450	00000000	 DCD         |_PmIfc|
  00454		 |$M36724|

			 ENDP  ; |PmxSetConstraintById|

	EXPORT	|PmxUpdateConstraint|

  00028			 AREA	 |.pdata|, PDATA
|$T36736| DCD	|$LN9@PmxUpdateC|
	DCD	0x40002804
; Function compile flags: /Odtp

  00454			 AREA	 |.text|, CODE, ARM

  00454		 |PmxUpdateConstraint| PROC

; 238  : {

  00454		 |$LN9@PmxUpdateC|
  00454	e1a0c00d	 mov         r12, sp
  00458	e92d000f	 stmdb       sp!, {r0 - r3}
  0045c	e92d5010	 stmdb       sp!, {r4, r12, lr}
  00460	e24dd014	 sub         sp, sp, #0x14
  00464		 |$M36733|

; 239  :     DWORD rc = FALSE;

  00464	e3a03000	 mov         r3, #0
  00468	e58d3000	 str         r3, [sp]

; 240  : 
; 241  :     // sanity check
; 242  :     if (IsPmExtValid() == FALSE) goto cleanUp;

  0046c	e59f307c	 ldr         r3, [pc, #0x7C]
  00470	e5933000	 ldr         r3, [r3]
  00474	e3530000	 cmp         r3, #0
  00478	0a000002	 beq         |$LN5@PmxUpdateC|
  0047c	e3a03001	 mov         r3, #1
  00480	e58d3008	 str         r3, [sp, #8]
  00484	ea000003	 b           |$LN6@PmxUpdateC|
  00488		 |$LN5@PmxUpdateC|
  00488	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  0048c	e58d000c	 str         r0, [sp, #0xC]
  00490	e59d300c	 ldr         r3, [sp, #0xC]
  00494	e58d3008	 str         r3, [sp, #8]
  00498		 |$LN6@PmxUpdateC|
  00498	e59d3008	 ldr         r3, [sp, #8]
  0049c	e3530000	 cmp         r3, #0
  004a0	1a000001	 bne         |$LN2@PmxUpdateC|
  004a4	ea00000b	 b           |$LN1@PmxUpdateC|
  004a8	ea00000a	 b           |$cleanUp$36606|
  004ac		 |$LN2@PmxUpdateC|

; 243  : 
; 244  :     // make call
; 245  :     rc = _PmIfc.PmxUpdateConstraint(hConstraintContext, msg, pParam, size);

  004ac	e59d302c	 ldr         r3, [sp, #0x2C]
  004b0	e59d2028	 ldr         r2, [sp, #0x28]
  004b4	e59d1024	 ldr         r1, [sp, #0x24]
  004b8	e59d0020	 ldr         r0, [sp, #0x20]
  004bc	e59fe02c	 ldr         lr, [pc, #0x2C]
  004c0	e59e4010	 ldr         r4, [lr, #0x10]
  004c4	e1a0e00f	 mov         lr, pc
  004c8	e12fff14	 bx          r4
  004cc	e58d0010	 str         r0, [sp, #0x10]
  004d0	e59d3010	 ldr         r3, [sp, #0x10]
  004d4	e58d3000	 str         r3, [sp]
  004d8		 |$LN1@PmxUpdateC|
  004d8		 |$cleanUp$36606|

; 246  : 
; 247  : cleanUp:
; 248  :     return rc;

  004d8	e59d3000	 ldr         r3, [sp]
  004dc	e58d3004	 str         r3, [sp, #4]

; 249  : }

  004e0	e59d0004	 ldr         r0, [sp, #4]
  004e4	e28dd014	 add         sp, sp, #0x14
  004e8	e89d6010	 ldmia       sp, {r4, sp, lr}
  004ec	e12fff1e	 bx          lr
  004f0		 |$LN10@PmxUpdateC|
  004f0		 |$LN11@PmxUpdateC|
  004f0	00000000	 DCD         |_PmIfc|
  004f4		 |$M36734|

			 ENDP  ; |PmxUpdateConstraint|

	EXPORT	|PmxReleaseConstraint|

  00030			 AREA	 |.pdata|, PDATA
|$T36745| DCD	|$LN8@PmxRelease|
	DCD	0x40001c04
; Function compile flags: /Odtp

  004f4			 AREA	 |.text|, CODE, ARM

  004f4		 |PmxReleaseConstraint| PROC

; 261  : {

  004f4		 |$LN8@PmxRelease|
  004f4	e1a0c00d	 mov         r12, sp
  004f8	e92d0001	 stmdb       sp!, {r0}
  004fc	e92d5000	 stmdb       sp!, {r12, lr}
  00500	e24dd008	 sub         sp, sp, #8
  00504		 |$M36742|

; 262  :     // sanity check
; 263  :     if (IsPmExtValid() == FALSE) return;

  00504	e59f3054	 ldr         r3, [pc, #0x54]
  00508	e5933000	 ldr         r3, [r3]
  0050c	e3530000	 cmp         r3, #0
  00510	0a000002	 beq         |$LN4@PmxRelease|
  00514	e3a03001	 mov         r3, #1
  00518	e58d3000	 str         r3, [sp]
  0051c	ea000003	 b           |$LN5@PmxRelease|
  00520		 |$LN4@PmxRelease|
  00520	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  00524	e58d0004	 str         r0, [sp, #4]
  00528	e59d3004	 ldr         r3, [sp, #4]
  0052c	e58d3000	 str         r3, [sp]
  00530		 |$LN5@PmxRelease|
  00530	e59d3000	 ldr         r3, [sp]
  00534	e3530000	 cmp         r3, #0
  00538	1a000000	 bne         |$LN1@PmxRelease|
  0053c	ea000004	 b           |$LN2@PmxRelease|
  00540		 |$LN1@PmxRelease|

; 264  : 
; 265  :     // make call
; 266  :     _PmIfc.PmxReleaseConstraint(hConstraintContext);

  00540	e59d0010	 ldr         r0, [sp, #0x10]
  00544	e59f3014	 ldr         r3, [pc, #0x14]
  00548	e5933014	 ldr         r3, [r3, #0x14]
  0054c	e1a0e00f	 mov         lr, pc
  00550	e12fff13	 bx          r3
  00554		 |$LN2@PmxRelease|

; 267  : }

  00554	e28dd008	 add         sp, sp, #8
  00558	e89d6000	 ldmia       sp, {sp, lr}
  0055c	e12fff1e	 bx          lr
  00560		 |$LN9@PmxRelease|
  00560		 |$LN10@PmxRelease|
  00560	00000000	 DCD         |_PmIfc|
  00564		 |$M36743|

			 ENDP  ; |PmxReleaseConstraint|

	EXPORT	|PmxRegisterConstraintCallback|

  00038			 AREA	 |.pdata|, PDATA
|$T36756| DCD	|$LN8@PmxRegiste|
	DCD	0x40002704
; Function compile flags: /Odtp

  00564			 AREA	 |.text|, CODE, ARM

  00564		 |PmxRegisterConstraintCallback| PROC

; 283  : {

  00564		 |$LN8@PmxRegiste|
  00564	e1a0c00d	 mov         r12, sp
  00568	e92d000f	 stmdb       sp!, {r0 - r3}
  0056c	e92d5010	 stmdb       sp!, {r4, r12, lr}
  00570	e24dd018	 sub         sp, sp, #0x18
  00574		 |$M36753|

; 284  :     // sanity check
; 285  :     if (IsPmExtValid() == FALSE) return NULL;

  00574	e59f3080	 ldr         r3, [pc, #0x80]
  00578	e5933000	 ldr         r3, [r3]
  0057c	e3530000	 cmp         r3, #0
  00580	0a000002	 beq         |$LN4@PmxRegiste|
  00584	e3a03001	 mov         r3, #1
  00588	e58d300c	 str         r3, [sp, #0xC]
  0058c	ea000003	 b           |$LN5@PmxRegiste|
  00590		 |$LN4@PmxRegiste|
  00590	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  00594	e58d0010	 str         r0, [sp, #0x10]
  00598	e59d3010	 ldr         r3, [sp, #0x10]
  0059c	e58d300c	 str         r3, [sp, #0xC]
  005a0		 |$LN5@PmxRegiste|
  005a0	e59d300c	 ldr         r3, [sp, #0xC]
  005a4	e3530000	 cmp         r3, #0
  005a8	1a000002	 bne         |$LN1@PmxRegiste|
  005ac	e3a03000	 mov         r3, #0
  005b0	e58d3004	 str         r3, [sp, #4]
  005b4	ea00000c	 b           |$LN2@PmxRegiste|
  005b8		 |$LN1@PmxRegiste|

; 286  : 
; 287  :     // make call
; 288  :     return _PmIfc.PmxRegisterConstraintCallback(hConstraintContext, 
; 289  :                     fnCallback, 
; 290  :                     pParam, 
; 291  :                     size, 
; 292  :                     hRefContext
; 293  :                     );

  005b8	e59d3034	 ldr         r3, [sp, #0x34]
  005bc	e58d3000	 str         r3, [sp]
  005c0	e59d3030	 ldr         r3, [sp, #0x30]
  005c4	e59d202c	 ldr         r2, [sp, #0x2C]
  005c8	e59d1028	 ldr         r1, [sp, #0x28]
  005cc	e59d0024	 ldr         r0, [sp, #0x24]
  005d0	e59fe024	 ldr         lr, [pc, #0x24]
  005d4	e59e4018	 ldr         r4, [lr, #0x18]
  005d8	e1a0e00f	 mov         lr, pc
  005dc	e12fff14	 bx          r4
  005e0	e58d0014	 str         r0, [sp, #0x14]
  005e4	e59d3014	 ldr         r3, [sp, #0x14]
  005e8	e58d3004	 str         r3, [sp, #4]
  005ec		 |$LN2@PmxRegiste|

; 294  : }

  005ec	e59d0004	 ldr         r0, [sp, #4]
  005f0	e28dd018	 add         sp, sp, #0x18
  005f4	e89d6010	 ldmia       sp, {r4, sp, lr}
  005f8	e12fff1e	 bx          lr
  005fc		 |$LN9@PmxRegiste|
  005fc		 |$LN10@PmxRegiste|
  005fc	00000000	 DCD         |_PmIfc|
  00600		 |$M36754|

			 ENDP  ; |PmxRegisterConstraintCallback|

	EXPORT	|PmxUnregisterConstraintCallback|

  00040			 AREA	 |.pdata|, PDATA
|$T36766| DCD	|$LN8@PmxUnregis|
	DCD	0x40002304
; Function compile flags: /Odtp

  00600			 AREA	 |.text|, CODE, ARM

  00600		 |PmxUnregisterConstraintCallback| PROC

; 307  : {

  00600		 |$LN8@PmxUnregis|
  00600	e1a0c00d	 mov         r12, sp
  00604	e92d0003	 stmdb       sp!, {r0, r1}
  00608	e92d5000	 stmdb       sp!, {r12, lr}
  0060c	e24dd010	 sub         sp, sp, #0x10
  00610		 |$M36763|

; 308  :     // sanity check
; 309  :     if (IsPmExtValid() == FALSE) return FALSE;

  00610	e59f3070	 ldr         r3, [pc, #0x70]
  00614	e5933000	 ldr         r3, [r3]
  00618	e3530000	 cmp         r3, #0
  0061c	0a000002	 beq         |$LN4@PmxUnregis|
  00620	e3a03001	 mov         r3, #1
  00624	e58d3004	 str         r3, [sp, #4]
  00628	ea000003	 b           |$LN5@PmxUnregis|
  0062c		 |$LN4@PmxUnregis|
  0062c	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  00630	e58d0008	 str         r0, [sp, #8]
  00634	e59d3008	 ldr         r3, [sp, #8]
  00638	e58d3004	 str         r3, [sp, #4]
  0063c		 |$LN5@PmxUnregis|
  0063c	e59d3004	 ldr         r3, [sp, #4]
  00640	e3530000	 cmp         r3, #0
  00644	1a000002	 bne         |$LN1@PmxUnregis|
  00648	e3a03000	 mov         r3, #0
  0064c	e58d3000	 str         r3, [sp]
  00650	ea000008	 b           |$LN2@PmxUnregis|
  00654		 |$LN1@PmxUnregis|

; 310  : 
; 311  :     // make call
; 312  :     return _PmIfc.PmxUnregisterConstraintCallback(hConstraintContext, 
; 313  :                 hConstraintCallback
; 314  :                 );

  00654	e59d101c	 ldr         r1, [sp, #0x1C]
  00658	e59d0018	 ldr         r0, [sp, #0x18]
  0065c	e59f3024	 ldr         r3, [pc, #0x24]
  00660	e593301c	 ldr         r3, [r3, #0x1C]
  00664	e1a0e00f	 mov         lr, pc
  00668	e12fff13	 bx          r3
  0066c	e58d000c	 str         r0, [sp, #0xC]
  00670	e59d300c	 ldr         r3, [sp, #0xC]
  00674	e58d3000	 str         r3, [sp]
  00678		 |$LN2@PmxUnregis|

; 315  : }

  00678	e59d0000	 ldr         r0, [sp]
  0067c	e28dd010	 add         sp, sp, #0x10
  00680	e89d6000	 ldmia       sp, {sp, lr}
  00684	e12fff1e	 bx          lr
  00688		 |$LN9@PmxUnregis|
  00688		 |$LN10@PmxUnregis|
  00688	00000000	 DCD         |_PmIfc|
  0068c		 |$M36764|

			 ENDP  ; |PmxUnregisterConstraintCallback|

	EXPORT	|PmxOpenPolicy|

  00048			 AREA	 |.pdata|, PDATA
|$T36776| DCD	|$LN8@PmxOpenPol|
	DCD	0x40002204
; Function compile flags: /Odtp

  0068c			 AREA	 |.text|, CODE, ARM

  0068c		 |PmxOpenPolicy| PROC

; 327  : {

  0068c		 |$LN8@PmxOpenPol|
  0068c	e1a0c00d	 mov         r12, sp
  00690	e92d0001	 stmdb       sp!, {r0}
  00694	e92d5000	 stmdb       sp!, {r12, lr}
  00698	e24dd010	 sub         sp, sp, #0x10
  0069c		 |$M36773|

; 328  :     // sanity check
; 329  :     if (IsPmExtValid() == FALSE) return NULL;

  0069c	e59f306c	 ldr         r3, [pc, #0x6C]
  006a0	e5933000	 ldr         r3, [r3]
  006a4	e3530000	 cmp         r3, #0
  006a8	0a000002	 beq         |$LN4@PmxOpenPol|
  006ac	e3a03001	 mov         r3, #1
  006b0	e58d3004	 str         r3, [sp, #4]
  006b4	ea000003	 b           |$LN5@PmxOpenPol|
  006b8		 |$LN4@PmxOpenPol|
  006b8	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  006bc	e58d0008	 str         r0, [sp, #8]
  006c0	e59d3008	 ldr         r3, [sp, #8]
  006c4	e58d3004	 str         r3, [sp, #4]
  006c8		 |$LN5@PmxOpenPol|
  006c8	e59d3004	 ldr         r3, [sp, #4]
  006cc	e3530000	 cmp         r3, #0
  006d0	1a000002	 bne         |$LN1@PmxOpenPol|
  006d4	e3a03000	 mov         r3, #0
  006d8	e58d3000	 str         r3, [sp]
  006dc	ea000007	 b           |$LN2@PmxOpenPol|
  006e0		 |$LN1@PmxOpenPol|

; 330  : 
; 331  :     // make call
; 332  :     return _PmIfc.PmxOpenPolicy(szId);    

  006e0	e59d0018	 ldr         r0, [sp, #0x18]
  006e4	e59f3024	 ldr         r3, [pc, #0x24]
  006e8	e5933020	 ldr         r3, [r3, #0x20]
  006ec	e1a0e00f	 mov         lr, pc
  006f0	e12fff13	 bx          r3
  006f4	e58d000c	 str         r0, [sp, #0xC]
  006f8	e59d300c	 ldr         r3, [sp, #0xC]
  006fc	e58d3000	 str         r3, [sp]
  00700		 |$LN2@PmxOpenPol|

; 333  : }

  00700	e59d0000	 ldr         r0, [sp]
  00704	e28dd010	 add         sp, sp, #0x10
  00708	e89d6000	 ldmia       sp, {sp, lr}
  0070c	e12fff1e	 bx          lr
  00710		 |$LN9@PmxOpenPol|
  00710		 |$LN10@PmxOpenPol|
  00710	00000000	 DCD         |_PmIfc|
  00714		 |$M36774|

			 ENDP  ; |PmxOpenPolicy|

	EXPORT	|PmxNotifyPolicy|

  00050			 AREA	 |.pdata|, PDATA
|$T36786| DCD	|$LN8@PmxNotifyP|
	DCD	0x40002504
; Function compile flags: /Odtp

  00714			 AREA	 |.text|, CODE, ARM

  00714		 |PmxNotifyPolicy| PROC

; 348  : {

  00714		 |$LN8@PmxNotifyP|
  00714	e1a0c00d	 mov         r12, sp
  00718	e92d000f	 stmdb       sp!, {r0 - r3}
  0071c	e92d5010	 stmdb       sp!, {r4, r12, lr}
  00720	e24dd010	 sub         sp, sp, #0x10
  00724		 |$M36783|

; 349  :     // sanity check
; 350  :     if (IsPmExtValid() == FALSE) return FALSE;

  00724	e59f3078	 ldr         r3, [pc, #0x78]
  00728	e5933000	 ldr         r3, [r3]
  0072c	e3530000	 cmp         r3, #0
  00730	0a000002	 beq         |$LN4@PmxNotifyP|
  00734	e3a03001	 mov         r3, #1
  00738	e58d3004	 str         r3, [sp, #4]
  0073c	ea000003	 b           |$LN5@PmxNotifyP|
  00740		 |$LN4@PmxNotifyP|
  00740	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  00744	e58d0008	 str         r0, [sp, #8]
  00748	e59d3008	 ldr         r3, [sp, #8]
  0074c	e58d3004	 str         r3, [sp, #4]
  00750		 |$LN5@PmxNotifyP|
  00750	e59d3004	 ldr         r3, [sp, #4]
  00754	e3530000	 cmp         r3, #0
  00758	1a000002	 bne         |$LN1@PmxNotifyP|
  0075c	e3a03000	 mov         r3, #0
  00760	e58d3000	 str         r3, [sp]
  00764	ea00000a	 b           |$LN2@PmxNotifyP|
  00768		 |$LN1@PmxNotifyP|

; 351  : 
; 352  :     // make call
; 353  :     return _PmIfc.PmxNotifyPolicy(hPolicyContext, msg, pParam, size);    

  00768	e59d3028	 ldr         r3, [sp, #0x28]
  0076c	e59d2024	 ldr         r2, [sp, #0x24]
  00770	e59d1020	 ldr         r1, [sp, #0x20]
  00774	e59d001c	 ldr         r0, [sp, #0x1C]
  00778	e59fe024	 ldr         lr, [pc, #0x24]
  0077c	e59e4024	 ldr         r4, [lr, #0x24]
  00780	e1a0e00f	 mov         lr, pc
  00784	e12fff14	 bx          r4
  00788	e58d000c	 str         r0, [sp, #0xC]
  0078c	e59d300c	 ldr         r3, [sp, #0xC]
  00790	e58d3000	 str         r3, [sp]
  00794		 |$LN2@PmxNotifyP|

; 354  : }

  00794	e59d0000	 ldr         r0, [sp]
  00798	e28dd010	 add         sp, sp, #0x10
  0079c	e89d6010	 ldmia       sp, {r4, sp, lr}
  007a0	e12fff1e	 bx          lr
  007a4		 |$LN9@PmxNotifyP|
  007a4		 |$LN10@PmxNotifyP|
  007a4	00000000	 DCD         |_PmIfc|
  007a8		 |$M36784|

			 ENDP  ; |PmxNotifyPolicy|

	EXPORT	|PmxClosePolicy|

  00058			 AREA	 |.pdata|, PDATA
|$T36795| DCD	|$LN8@PmxClosePo|
	DCD	0x40001c04
; Function compile flags: /Odtp

  007a8			 AREA	 |.text|, CODE, ARM

  007a8		 |PmxClosePolicy| PROC

; 366  : {

  007a8		 |$LN8@PmxClosePo|
  007a8	e1a0c00d	 mov         r12, sp
  007ac	e92d0001	 stmdb       sp!, {r0}
  007b0	e92d5000	 stmdb       sp!, {r12, lr}
  007b4	e24dd008	 sub         sp, sp, #8
  007b8		 |$M36792|

; 367  :     // sanity check
; 368  :     if (IsPmExtValid() == FALSE) return;

  007b8	e59f3054	 ldr         r3, [pc, #0x54]
  007bc	e5933000	 ldr         r3, [r3]
  007c0	e3530000	 cmp         r3, #0
  007c4	0a000002	 beq         |$LN4@PmxClosePo|
  007c8	e3a03001	 mov         r3, #1
  007cc	e58d3000	 str         r3, [sp]
  007d0	ea000003	 b           |$LN5@PmxClosePo|
  007d4		 |$LN4@PmxClosePo|
  007d4	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  007d8	e58d0004	 str         r0, [sp, #4]
  007dc	e59d3004	 ldr         r3, [sp, #4]
  007e0	e58d3000	 str         r3, [sp]
  007e4		 |$LN5@PmxClosePo|
  007e4	e59d3000	 ldr         r3, [sp]
  007e8	e3530000	 cmp         r3, #0
  007ec	1a000000	 bne         |$LN1@PmxClosePo|
  007f0	ea000004	 b           |$LN2@PmxClosePo|
  007f4		 |$LN1@PmxClosePo|

; 369  : 
; 370  :     // make call
; 371  :     _PmIfc.PmxClosePolicy(hPolicyContext);

  007f4	e59d0010	 ldr         r0, [sp, #0x10]
  007f8	e59f3014	 ldr         r3, [pc, #0x14]
  007fc	e5933028	 ldr         r3, [r3, #0x28]
  00800	e1a0e00f	 mov         lr, pc
  00804	e12fff13	 bx          r3
  00808		 |$LN2@PmxClosePo|

; 372  : }

  00808	e28dd008	 add         sp, sp, #8
  0080c	e89d6000	 ldmia       sp, {sp, lr}
  00810	e12fff1e	 bx          lr
  00814		 |$LN9@PmxClosePo|
  00814		 |$LN10@PmxClosePo|
  00814	00000000	 DCD         |_PmIfc|
  00818		 |$M36793|

			 ENDP  ; |PmxClosePolicy|

	EXPORT	|PmxLoadConstraint|

  00060			 AREA	 |.pdata|, PDATA
|$T36805| DCD	|$LN8@PmxLoadCon|
	DCD	0x40002204
; Function compile flags: /Odtp

  00818			 AREA	 |.text|, CODE, ARM

  00818		 |PmxLoadConstraint| PROC

; 384  : {

  00818		 |$LN8@PmxLoadCon|
  00818	e1a0c00d	 mov         r12, sp
  0081c	e92d0001	 stmdb       sp!, {r0}
  00820	e92d5000	 stmdb       sp!, {r12, lr}
  00824	e24dd010	 sub         sp, sp, #0x10
  00828		 |$M36802|

; 385  :     // sanity check
; 386  :     if (IsPmExtValid() == FALSE) return NULL;

  00828	e59f306c	 ldr         r3, [pc, #0x6C]
  0082c	e5933000	 ldr         r3, [r3]
  00830	e3530000	 cmp         r3, #0
  00834	0a000002	 beq         |$LN4@PmxLoadCon|
  00838	e3a03001	 mov         r3, #1
  0083c	e58d3004	 str         r3, [sp, #4]
  00840	ea000003	 b           |$LN5@PmxLoadCon|
  00844		 |$LN4@PmxLoadCon|
  00844	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  00848	e58d0008	 str         r0, [sp, #8]
  0084c	e59d3008	 ldr         r3, [sp, #8]
  00850	e58d3004	 str         r3, [sp, #4]
  00854		 |$LN5@PmxLoadCon|
  00854	e59d3004	 ldr         r3, [sp, #4]
  00858	e3530000	 cmp         r3, #0
  0085c	1a000002	 bne         |$LN1@PmxLoadCon|
  00860	e3a03000	 mov         r3, #0
  00864	e58d3000	 str         r3, [sp]
  00868	ea000007	 b           |$LN2@PmxLoadCon|
  0086c		 |$LN1@PmxLoadCon|

; 387  : 
; 388  :     // make call
; 389  :     return _PmIfc.PmxLoadConstraint(context);    

  0086c	e59d0018	 ldr         r0, [sp, #0x18]
  00870	e59f3024	 ldr         r3, [pc, #0x24]
  00874	e593302c	 ldr         r3, [r3, #0x2C]
  00878	e1a0e00f	 mov         lr, pc
  0087c	e12fff13	 bx          r3
  00880	e58d000c	 str         r0, [sp, #0xC]
  00884	e59d300c	 ldr         r3, [sp, #0xC]
  00888	e58d3000	 str         r3, [sp]
  0088c		 |$LN2@PmxLoadCon|

; 390  : }

  0088c	e59d0000	 ldr         r0, [sp]
  00890	e28dd010	 add         sp, sp, #0x10
  00894	e89d6000	 ldmia       sp, {sp, lr}
  00898	e12fff1e	 bx          lr
  0089c		 |$LN9@PmxLoadCon|
  0089c		 |$LN10@PmxLoadCon|
  0089c	00000000	 DCD         |_PmIfc|
  008a0		 |$M36803|

			 ENDP  ; |PmxLoadConstraint|

	EXPORT	|PmxLoadPolicy|

  00068			 AREA	 |.pdata|, PDATA
|$T36815| DCD	|$LN8@PmxLoadPol|
	DCD	0x40002204
; Function compile flags: /Odtp

  008a0			 AREA	 |.text|, CODE, ARM

  008a0		 |PmxLoadPolicy| PROC

; 402  : {

  008a0		 |$LN8@PmxLoadPol|
  008a0	e1a0c00d	 mov         r12, sp
  008a4	e92d0001	 stmdb       sp!, {r0}
  008a8	e92d5000	 stmdb       sp!, {r12, lr}
  008ac	e24dd010	 sub         sp, sp, #0x10
  008b0		 |$M36812|

; 403  :     // sanity check
; 404  :     if (IsPmExtValid() == FALSE) return NULL;

  008b0	e59f306c	 ldr         r3, [pc, #0x6C]
  008b4	e5933000	 ldr         r3, [r3]
  008b8	e3530000	 cmp         r3, #0
  008bc	0a000002	 beq         |$LN4@PmxLoadPol|
  008c0	e3a03001	 mov         r3, #1
  008c4	e58d3004	 str         r3, [sp, #4]
  008c8	ea000003	 b           |$LN5@PmxLoadPol|
  008cc		 |$LN4@PmxLoadPol|
  008cc	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  008d0	e58d0008	 str         r0, [sp, #8]
  008d4	e59d3008	 ldr         r3, [sp, #8]
  008d8	e58d3004	 str         r3, [sp, #4]
  008dc		 |$LN5@PmxLoadPol|
  008dc	e59d3004	 ldr         r3, [sp, #4]
  008e0	e3530000	 cmp         r3, #0
  008e4	1a000002	 bne         |$LN1@PmxLoadPol|
  008e8	e3a03000	 mov         r3, #0
  008ec	e58d3000	 str         r3, [sp]
  008f0	ea000007	 b           |$LN2@PmxLoadPol|
  008f4		 |$LN1@PmxLoadPol|

; 405  : 
; 406  :     // make call
; 407  :     return _PmIfc.PmxLoadPolicy(context);    

  008f4	e59d0018	 ldr         r0, [sp, #0x18]
  008f8	e59f3024	 ldr         r3, [pc, #0x24]
  008fc	e5933030	 ldr         r3, [r3, #0x30]
  00900	e1a0e00f	 mov         lr, pc
  00904	e12fff13	 bx          r3
  00908	e58d000c	 str         r0, [sp, #0xC]
  0090c	e59d300c	 ldr         r3, [sp, #0xC]
  00910	e58d3000	 str         r3, [sp]
  00914		 |$LN2@PmxLoadPol|

; 408  : }

  00914	e59d0000	 ldr         r0, [sp]
  00918	e28dd010	 add         sp, sp, #0x10
  0091c	e89d6000	 ldmia       sp, {sp, lr}
  00920	e12fff1e	 bx          lr
  00924		 |$LN9@PmxLoadPol|
  00924		 |$LN10@PmxLoadPol|
  00924	00000000	 DCD         |_PmIfc|
  00928		 |$M36813|

			 ENDP  ; |PmxLoadPolicy|

	END
