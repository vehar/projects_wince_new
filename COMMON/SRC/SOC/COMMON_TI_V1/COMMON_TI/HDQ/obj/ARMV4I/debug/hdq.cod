; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\HDQ\hdq.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1CA@CCIKILKA@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@DIEKGMHP@?$AAR?$AAx?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@LMGJPBKK@?$AAT?$AAx?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@KPFHKDCL@?$AAB?$AAr?$AAe?$AAa?$AAk?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BC@NEHLNCLJ@?$AAB?$AAu?$AAs?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|DEVICE_IFC_HDQ_GUID| [ DATA ]
	EXPORT	|dpCurSettings| [ DATA ]

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@CCIKILKA@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "A"
	DCB	0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v", 0x0, "i", 0x0, "t"
	DCB	0x0, "y", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o"
	DCB	0x0, "u", 0x0, "t", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@DIEKGMHP@?$AAR?$AAx?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "R"
	DCB	0x0, "x", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o"
	DCB	0x0, "u", 0x0, "t", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@LMGJPBKK@?$AAT?$AAx?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "T"
	DCB	0x0, "x", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o"
	DCB	0x0, "u", 0x0, "t", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@KPFHKDCL@?$AAB?$AAr?$AAe?$AAa?$AAk?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "B"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "k", 0x0, "T", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@NEHLNCLJ@?$AAB?$AAu?$AAs?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?$AA@| DCB "B"
	DCB	0x0, "u", 0x0, "s", 0x0, "I", 0x0, "n", 0x0, "d", 0x0, "e"
	DCB	0x0, "x", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.data|, DATA
|dpCurSettings| DCB "H", 0x0, "D", 0x0, "Q", 0x0, 0x0, 0x0
	%	56
	DCB	"I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0x0, 0x0
	%	54
	DCB	"E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, "s", 0x0
	DCB	0x0, 0x0
	%	50
	DCB	"W", 0x0, "a", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0
	DCB	"g", 0x0, "s", 0x0, 0x0, 0x0
	%	46
	DCB	"F", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i", 0x0
	DCB	"o", 0x0, "n", 0x0, 0x0, 0x0
	%	46
	DCB	"I", 0x0, "n", 0x0, "f", 0x0, "o", 0x0, 0x0, 0x0
	%	54
	DCB	"I", 0x0, "S", 0x0, "T", 0x0, 0x0, 0x0
	%	56
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "l", 0x0, "o", 0x0
	DCB	"g", 0x0, 0x0, 0x0
	%	48
	DCD	0x3

  00000			 AREA	 |.rdata|, DATA, READONLY
|DEVICE_IFC_HDQ_GUID| DCD 0x8d6ec8e0
	DCW	0xa631
	DCW	0x4bdc
	DCB	0xbc
	DCB	0xb3
	DCB	0xcc
	DCB	0x5b
	DCB	0xbb
	DCB	0x9b
	DCB	0x62
	DCB	0x4a
|g_deviceRegParams| DCD |??_C@_1BC@NEHLNCLJ@?$AAB?$AAu?$AAs?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x4
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1BK@KPFHKDCL@?$AAB?$AAr?$AAe?$AAa?$AAk?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0xc
	DCD	0x4
	DCD	0x3e8
	DCD	|??_C@_1BE@LMGJPBKK@?$AAT?$AAx?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x10
	DCD	0x4
	DCD	0x3e8
	DCD	|??_C@_1BE@DIEKGMHP@?$AAR?$AAx?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x14
	DCD	0x4
	DCD	0x3e8
	DCD	|??_C@_1CA@CCIKILKA@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x44
	DCD	0x4
	DCD	0x1
	EXPORT	|??_C@_1II@FCNECDPE@?$AAH?$AAD?$AAQ?$AA?5?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?9@| [ DATA ] ; `string'
	EXPORT	|ResetEvent|
	EXPORT	|?HDQPowerTimerThread@@YAKPAX@Z|	; HDQPowerTimerThread
	IMPORT	|LeaveCriticalSection|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|EnableDeviceClocks|
	IMPORT	|EnterCriticalSection|
	IMPORT	|WaitForSingleObject|

  00000			 AREA	 |.pdata|, PDATA
|$T36639| DCD	|$LN14@HDQPowerTi|
	DCD	0x40005204
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\hdq\hdq.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1II@FCNECDPE@?$AAH?$AAD?$AAQ?$AA?5?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?9@| DCB "H"
	DCB	0x0, "D", 0x0, "Q", 0x0, " ", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "(", 0x0, "p"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "-", 0x0, ">", 0x0, "h", 0x0, "P", 0x0, "a", 0x0, "r"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, ",", 0x0, " ", 0x0, "D"
	DCB	0x0, "4", 0x0, ",", 0x0, " ", 0x0, "N", 0x0, "U", 0x0, "L"
	DCB	0x0, "L", 0x0, ")", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, " "
	DCB	0x0, "t", 0x0, "h", 0x0, "e", 0x0, " ", 0x0, "T", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HDQPowerTimerThread@@YAKPAX@Z| PROC	; HDQPowerTimerThread

; 157  : {

  00000		 |$LN14@HDQPowerTi|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd010	 sub         sp, sp, #0x10
  00010		 |$M36636|

; 158  :     DWORD nTimeout = INFINITE;

  00010	e3e03000	 mvn         r3, #0
  00014	e58d3004	 str         r3, [sp, #4]

; 159  :     Device_t *pDevice = (Device_t*)(pv);

  00018	e59d3018	 ldr         r3, [sp, #0x18]
  0001c	e58d3000	 str         r3, [sp]
  00020		 |$LN7@HDQPowerTi|

; 160  : 
; 161  :     for(;;)
; 162  :         {
; 163  :         WaitForSingleObject(pDevice->hTimerEvent, nTimeout);

  00020	e59d1004	 ldr         r1, [sp, #4]
  00024	e59d3000	 ldr         r3, [sp]
  00028	e283304c	 add         r3, r3, #0x4C
  0002c	e5930000	 ldr         r0, [r3]
  00030	eb000000	 bl          WaitForSingleObject

; 164  : 
; 165  :         if (pDevice->bExitThread == TRUE) break;

  00034	e59d3000	 ldr         r3, [sp]
  00038	e2833054	 add         r3, r3, #0x54
  0003c	e5933000	 ldr         r3, [r3]
  00040	e3530001	 cmp         r3, #1
  00044	1a000000	 bne         |$LN5@HDQPowerTi|
  00048	ea000036	 b           |$LN6@HDQPowerTi|
  0004c		 |$LN5@HDQPowerTi|

; 166  : 
; 167  :         // serialize access to power state changes
; 168  :         EnterCriticalSection(&pDevice->cs);

  0004c	e59d3000	 ldr         r3, [sp]
  00050	e2830024	 add         r0, r3, #0x24
  00054	eb000000	 bl          EnterCriticalSection

; 169  : 
; 170  :         // by the time this thread got the cs hTimerEvent may 
; 171  :         // have gotten resignaled.  Clear the event to  make
; 172  :         // sure the activity timer thread isn't awaken prematurely
; 173  :         //
; 174  :         ResetEvent(pDevice->hTimerEvent);

  00058	e59d3000	 ldr         r3, [sp]
  0005c	e283304c	 add         r3, r3, #0x4C
  00060	e5930000	 ldr         r0, [r3]
  00064	eb000000	 bl          ResetEvent

; 175  : 
; 176  :         // check if we need to reset the timer
; 177  :         if (pDevice->nPowerCounter == 0)

  00068	e59d3000	 ldr         r3, [sp]
  0006c	e2833058	 add         r3, r3, #0x58
  00070	e5933000	 ldr         r3, [r3]
  00074	e3530000	 cmp         r3, #0
  00078	1a000024	 bne         |$LN4@HDQPowerTi|

; 178  :             {
; 179  :             // We disable the power only when this thread
; 180  :             // wakes-up twice in a row with no power state
; 181  :             // change to D0.  This is achieved by using the
; 182  :             // bDisablePower flag to determine if power state
; 183  :             // changed since the last time this thread woke-up
; 184  :             //
; 185  :             if (pDevice->bDisablePower == TRUE)

  0007c	e59d3000	 ldr         r3, [sp]
  00080	e2833050	 add         r3, r3, #0x50
  00084	e5933000	 ldr         r3, [r3]
  00088	e3530001	 cmp         r3, #1
  0008c	1a000016	 bne         |$LN3@HDQPowerTi|

; 186  :                 {
; 187  :                 //SetDevicePowerState(pDevice->hParent, D4, 0);
; 188  :                 EnableDeviceClocks(pDevice->dwDeviceId,FALSE);

  00090	e3a01000	 mov         r1, #0
  00094	e59d3000	 ldr         r3, [sp]
  00098	e2833008	 add         r3, r3, #8
  0009c	e5930000	 ldr         r0, [r3]
  000a0	eb000000	 bl          EnableDeviceClocks

; 189  :                 pDevice->nPowerState = D4;

  000a4	e59d3000	 ldr         r3, [sp]
  000a8	e2832040	 add         r2, r3, #0x40
  000ac	e3a03004	 mov         r3, #4
  000b0	e5823000	 str         r3, [r2]

; 190  :                 DEBUGMSG(ZONE_FUNCTION, (L"HDQ SetDevicePowerState(pDevice->hParent, D4, NULL) in the Thread\r\n"));

  000b4	e59f3088	 ldr         r3, [pc, #0x88]
  000b8	e5933440	 ldr         r3, [r3, #0x440]
  000bc	e3130008	 tst         r3, #8
  000c0	0a000004	 beq         |$LN10@HDQPowerTi|
  000c4	e59f0074	 ldr         r0, [pc, #0x74]
  000c8	eb000000	 bl          NKDbgPrintfW
  000cc	e3a03001	 mov         r3, #1
  000d0	e58d300c	 str         r3, [sp, #0xC]
  000d4	ea000001	 b           |$LN11@HDQPowerTi|
  000d8		 |$LN10@HDQPowerTi|
  000d8	e3a03000	 mov         r3, #0
  000dc	e58d300c	 str         r3, [sp, #0xC]
  000e0		 |$LN11@HDQPowerTi|

; 191  :                 nTimeout = INFINITE;

  000e0	e3e03000	 mvn         r3, #0
  000e4	e58d3004	 str         r3, [sp, #4]

; 192  :                 }
; 193  :             else

  000e8	ea000007	 b           |$LN2@HDQPowerTi|
  000ec		 |$LN3@HDQPowerTi|

; 194  :                 {
; 195  :                 // wait for activity time-out before shutting off power.
; 196  :                 pDevice->bDisablePower = TRUE;

  000ec	e59d3000	 ldr         r3, [sp]
  000f0	e2832050	 add         r2, r3, #0x50
  000f4	e3a03001	 mov         r3, #1
  000f8	e5823000	 str         r3, [r2]

; 197  :                 nTimeout = pDevice->nActivityTimeout;

  000fc	e59d3000	 ldr         r3, [sp]
  00100	e2833044	 add         r3, r3, #0x44
  00104	e5933000	 ldr         r3, [r3]
  00108	e58d3004	 str         r3, [sp, #4]
  0010c		 |$LN2@HDQPowerTi|

; 198  :                 }
; 199  :             }
; 200  :         else

  0010c	ea000001	 b           |$LN1@HDQPowerTi|
  00110		 |$LN4@HDQPowerTi|

; 201  :             {
; 202  :             nTimeout = INFINITE;

  00110	e3e03000	 mvn         r3, #0
  00114	e58d3004	 str         r3, [sp, #4]
  00118		 |$LN1@HDQPowerTi|

; 203  :             }
; 204  :         LeaveCriticalSection(&pDevice->cs);

  00118	e59d3000	 ldr         r3, [sp]
  0011c	e2830024	 add         r0, r3, #0x24
  00120	eb000000	 bl          LeaveCriticalSection

; 205  :         }

  00124	eaffffbd	 b           |$LN7@HDQPowerTi|
  00128		 |$LN6@HDQPowerTi|

; 206  : 
; 207  :     return 1;

  00128	e3a03001	 mov         r3, #1
  0012c	e58d3008	 str         r3, [sp, #8]

; 208  : }

  00130	e59d0008	 ldr         r0, [sp, #8]
  00134	e28dd010	 add         sp, sp, #0x10
  00138	e89d6000	 ldmia       sp, {sp, lr}
  0013c	e12fff1e	 bx          lr
  00140		 |$LN15@HDQPowerTi|
  00140		 |$LN16@HDQPowerTi|
  00140	00000000	 DCD         |??_C@_1II@FCNECDPE@?$AAH?$AAD?$AAQ?$AA?5?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?9@|
  00144		 |$LN17@HDQPowerTi|
  00144	00000000	 DCD         |dpCurSettings|
  00148		 |$M36637|

			 ENDP  ; |?HDQPowerTimerThread@@YAKPAX@Z|, HDQPowerTimerThread

	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T36648| DCD	|$LN5@ResetEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ResetEvent| PROC

; 223  : _inline BOOL ResetEvent(HANDLE h) {

  00000		 |$LN5@ResetEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36645|

; 224  : 	return EventModify(h,EVENT_RESET);

  00010	e3a01002	 mov         r1, #2
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 225  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M36646|

			 ENDP  ; |ResetEvent|

	EXPORT	|??_C@_1CG@OHMAENGN@?$AA?9?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@FGCGFMOI@?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAX?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@JONBDBCD@?$AA?$CL?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$CI?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?TransmitBreak@@YAXPAUInstance_t@@@Z|	; TransmitBreak
	IMPORT	|InterruptDone|

  00008			 AREA	 |.pdata|, PDATA
|$T36661| DCD	|$LN11@TransmitBr|
	DCD	0x40005404
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\hdq\hdq.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@OHMAENGN@?$AA?9?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, "B", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "k", 0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@FGCGFMOI@?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAX?$AA?$AN?$AA?6@| DCB "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m", 0x0, "i"
	DCB	0x0, "t", 0x0, "B", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "k"
	DCB	0x0, ":", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "u", 0x0, "s", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "X", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@JONBDBCD@?$AA?$CL?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$CI?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, "B", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "k", 0x0, "(", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00148			 AREA	 |.text|, CODE, ARM

  00148		 |?TransmitBreak@@YAXPAUInstance_t@@@Z| PROC ; TransmitBreak

; 269  : {

  00148		 |$LN11@TransmitBr|
  00148	e1a0c00d	 mov         r12, sp
  0014c	e92d0001	 stmdb       sp!, {r0}
  00150	e92d5000	 stmdb       sp!, {r12, lr}
  00154	e24dd014	 sub         sp, sp, #0x14
  00158		 |$M36658|

; 270  :     DWORD status;
; 271  :     
; 272  :     DEBUGMSG(ZONE_FUNCTION, (L"+TransmitBreak(x%08x)\r\n", pInstance));

  00158	e59f312c	 ldr         r3, [pc, #0x12C]
  0015c	e5933440	 ldr         r3, [r3, #0x440]
  00160	e3130008	 tst         r3, #8
  00164	0a000005	 beq         |$LN3@TransmitBr|
  00168	e59d101c	 ldr         r1, [sp, #0x1C]
  0016c	e59f0120	 ldr         r0, [pc, #0x120]
  00170	eb000000	 bl          NKDbgPrintfW
  00174	e3a03001	 mov         r3, #1
  00178	e58d3008	 str         r3, [sp, #8]
  0017c	ea000001	 b           |$LN4@TransmitBr|
  00180		 |$LN3@TransmitBr|
  00180	e3a03000	 mov         r3, #0
  00184	e58d3008	 str         r3, [sp, #8]
  00188		 |$LN4@TransmitBr|

; 273  : 
; 274  :     // set break command to slave
; 275  :     Device_t *pDevice = pInstance->pDevice;

  00188	e59d301c	 ldr         r3, [sp, #0x1C]
  0018c	e2833008	 add         r3, r3, #8
  00190	e5933000	 ldr         r3, [r3]
  00194	e58d3000	 str         r3, [sp]

; 276  :     OUTREG32(&pDevice->pHDQRegs->CTRL_STATUS, 
; 277  :         HDQ_CTRL_INITIALIZE | HDQ_CTRL_GO | HDQ_CTRL_CLOCK_ENABLE | 
; 278  :         pInstance->mode);

  00198	e59d301c	 ldr         r3, [sp, #0x1C]
  0019c	e2833004	 add         r3, r3, #4
  001a0	e5933000	 ldr         r3, [r3]
  001a4	e3832034	 orr         r2, r3, #0x34
  001a8	e59d3000	 ldr         r3, [sp]
  001ac	e2833018	 add         r3, r3, #0x18
  001b0	e5933000	 ldr         r3, [r3]
  001b4	e283300c	 add         r3, r3, #0xC
  001b8	e5832000	 str         r2, [r3]

; 279  : 
; 280  :     // wait for timeout
; 281  :     WaitForSingleObject(pDevice->hIntrEvent, pDevice->breakTimeout);

  001bc	e59d3000	 ldr         r3, [sp]
  001c0	e283300c	 add         r3, r3, #0xC
  001c4	e5931000	 ldr         r1, [r3]
  001c8	e59d3000	 ldr         r3, [sp]
  001cc	e283303c	 add         r3, r3, #0x3C
  001d0	e5930000	 ldr         r0, [r3]
  001d4	eb000000	 bl          WaitForSingleObject

; 282  :         
; 283  :     // Clear interrupt.
; 284  :     status = INREG32(&pDevice->pHDQRegs->INT_STATUS);

  001d8	e59d3000	 ldr         r3, [sp]
  001dc	e2833018	 add         r3, r3, #0x18
  001e0	e5933000	 ldr         r3, [r3]
  001e4	e2833010	 add         r3, r3, #0x10
  001e8	e5933000	 ldr         r3, [r3]
  001ec	e58d3004	 str         r3, [sp, #4]

; 285  :     InterruptDone(pDevice->sysIntr);

  001f0	e59d3000	 ldr         r3, [sp]
  001f4	e2833038	 add         r3, r3, #0x38
  001f8	e5930000	 ldr         r0, [r3]
  001fc	eb000000	 bl          InterruptDone

; 286  : 
; 287  :     DEBUGMSG(ZONE_INFO, (L"TransmitBreak: status = 0x%02X\r\n", status));

  00200	e59f3084	 ldr         r3, [pc, #0x84]
  00204	e5933440	 ldr         r3, [r3, #0x440]
  00208	e3130010	 tst         r3, #0x10
  0020c	0a000005	 beq         |$LN5@TransmitBr|
  00210	e59d1004	 ldr         r1, [sp, #4]
  00214	e59f0074	 ldr         r0, [pc, #0x74]
  00218	eb000000	 bl          NKDbgPrintfW
  0021c	e3a03001	 mov         r3, #1
  00220	e58d300c	 str         r3, [sp, #0xC]
  00224	ea000001	 b           |$LN6@TransmitBr|
  00228		 |$LN5@TransmitBr|
  00228	e3a03000	 mov         r3, #0
  0022c	e58d300c	 str         r3, [sp, #0xC]
  00230		 |$LN6@TransmitBr|

; 288  : 
; 289  :     // disable clock and reset to mode
; 290  :     OUTREG32(&pDevice->pHDQRegs->CTRL_STATUS, pInstance->mode);

  00230	e59d301c	 ldr         r3, [sp, #0x1C]
  00234	e2831004	 add         r1, r3, #4
  00238	e59d3000	 ldr         r3, [sp]
  0023c	e2833018	 add         r3, r3, #0x18
  00240	e5933000	 ldr         r3, [r3]
  00244	e283200c	 add         r2, r3, #0xC
  00248	e5913000	 ldr         r3, [r1]
  0024c	e5823000	 str         r3, [r2]

; 291  : 
; 292  :     DEBUGMSG(ZONE_FUNCTION, (L"-TransmitBreak()\r\n"));

  00250	e59f3034	 ldr         r3, [pc, #0x34]
  00254	e5933440	 ldr         r3, [r3, #0x440]
  00258	e3130008	 tst         r3, #8
  0025c	0a000004	 beq         |$LN7@TransmitBr|
  00260	e59f0020	 ldr         r0, [pc, #0x20]
  00264	eb000000	 bl          NKDbgPrintfW
  00268	e3a03001	 mov         r3, #1
  0026c	e58d3010	 str         r3, [sp, #0x10]
  00270	ea000001	 b           |$LN8@TransmitBr|
  00274		 |$LN7@TransmitBr|
  00274	e3a03000	 mov         r3, #0
  00278	e58d3010	 str         r3, [sp, #0x10]
  0027c		 |$LN8@TransmitBr|

; 293  : }

  0027c	e28dd014	 add         sp, sp, #0x14
  00280	e89d6000	 ldmia       sp, {sp, lr}
  00284	e12fff1e	 bx          lr
  00288		 |$LN12@TransmitBr|
  00288		 |$LN13@TransmitBr|
  00288	00000000	 DCD         |??_C@_1CG@OHMAENGN@?$AA?9?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0028c		 |$LN14@TransmitBr|
  0028c	00000000	 DCD         |dpCurSettings|
  00290		 |$LN15@TransmitBr|
  00290	00000000	 DCD         |??_C@_1EC@FGCGFMOI@?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAX?$AA?$AN?$AA?6@|
  00294		 |$LN16@TransmitBr|
  00294	00000000	 DCD         |??_C@_1DA@JONBDBCD@?$AA?$CL?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$CI?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00298		 |$M36659|

			 ENDP  ; |?TransmitBreak@@YAXPAUInstance_t@@@Z|, TransmitBreak

	EXPORT	|??_C@_1DO@LKJBMLFK@?$AA?9?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?$CI?$AAc?$AAm?$AAd?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAX?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@MJKLLLGD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?3?$AA?5?$AAT?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@BEOKNJPH@?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?3?$AA?5?$AA?$CK?$AAp?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@PCHADPOL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?3?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@LICLIGPI@?$AA?$CL?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?$CI?$AAc?$AAm?$AAd?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAX?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?TransmitCommand@@YAHPAUInstance_t@@EPAK@Z| ; TransmitCommand

  00010			 AREA	 |.pdata|, PDATA
|$T36682| DCD	|$LN19@TransmitCo|
	DCD	0x40008a04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@LKJBMLFK@?$AA?9?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?$CI?$AAc?$AAm?$AAd?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAX?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "(", 0x0, "c", 0x0, "m"
	DCB	0x0, "d", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "X", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@MJKLLLGD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?3?$AA?5?$AAT?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "T"
	DCB	0x0, "X", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "e"
	DCB	0x0, "x", 0x0, "p", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@BEOKNJPH@?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?3?$AA?5?$AA?$CK?$AAp?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@| DCB "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m", 0x0, "i"
	DCB	0x0, "t", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "*", 0x0, "p"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@PCHADPOL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?3?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "T"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "T", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@LICLIGPI@?$AA?$CL?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?$CI?$AAc?$AAm?$AAd?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAX?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "(", 0x0, "c", 0x0, "m"
	DCB	0x0, "d", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "X", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  00298			 AREA	 |.text|, CODE, ARM

  00298		 |?TransmitCommand@@YAHPAUInstance_t@@EPAK@Z| PROC ; TransmitCommand

; 308  : {

  00298		 |$LN19@TransmitCo|
  00298	e1a0c00d	 mov         r12, sp
  0029c	e92d0007	 stmdb       sp!, {r0 - r2}
  002a0	e92d5000	 stmdb       sp!, {r12, lr}
  002a4	e24dd02c	 sub         sp, sp, #0x2C
  002a8		 |$M36679|

; 309  :     DWORD mask;
; 310  :     BOOL rc = FALSE;

  002a8	e3a03000	 mov         r3, #0
  002ac	e58d3004	 str         r3, [sp, #4]

; 311  :     Device_t *pDevice = pInstance->pDevice;

  002b0	e59d3034	 ldr         r3, [sp, #0x34]
  002b4	e2833008	 add         r3, r3, #8
  002b8	e5933000	 ldr         r3, [r3]
  002bc	e58d3000	 str         r3, [sp]

; 312  :     OMAP_HDQ_1WIRE_REGS *pHDQRegs = pDevice->pHDQRegs;

  002c0	e59d3000	 ldr         r3, [sp]
  002c4	e2833018	 add         r3, r3, #0x18
  002c8	e5933000	 ldr         r3, [r3]
  002cc	e58d300c	 str         r3, [sp, #0xC]

; 313  : 
; 314  :     DEBUGMSG(ZONE_FUNCTION, (L"+TransmitCommand(cmd=0x%02X)\r\n", cmd));

  002d0	e59f31d4	 ldr         r3, [pc, #0x1D4]
  002d4	e5933440	 ldr         r3, [r3, #0x440]
  002d8	e3130008	 tst         r3, #8
  002dc	0a000006	 beq         |$LN7@TransmitCo|
  002e0	e5dd3038	 ldrb        r3, [sp, #0x38]
  002e4	e1a01003	 mov         r1, r3
  002e8	e59f01cc	 ldr         r0, [pc, #0x1CC]
  002ec	eb000000	 bl          NKDbgPrintfW
  002f0	e3a03001	 mov         r3, #1
  002f4	e58d3014	 str         r3, [sp, #0x14]
  002f8	ea000001	 b           |$LN8@TransmitCo|
  002fc		 |$LN7@TransmitCo|
  002fc	e3a03000	 mov         r3, #0
  00300	e58d3014	 str         r3, [sp, #0x14]
  00304		 |$LN8@TransmitCo|

; 315  : 
; 316  :     // setup mask
; 317  :     mask = HDQ_CTRL_GO | HDQ_CTRL_WRITE | 
; 318  :            HDQ_CTRL_CLOCK_ENABLE | pInstance->mode;

  00304	e59d3034	 ldr         r3, [sp, #0x34]
  00308	e2833004	 add         r3, r3, #4
  0030c	e5933000	 ldr         r3, [r3]
  00310	e3833030	 orr         r3, r3, #0x30
  00314	e58d3008	 str         r3, [sp, #8]

; 319  :     
; 320  :     // write the command
; 321  :     OUTREG32(&pHDQRegs->TX_DATA, cmd);

  00318	e5dd2038	 ldrb        r2, [sp, #0x38]
  0031c	e59d300c	 ldr         r3, [sp, #0xC]
  00320	e2833004	 add         r3, r3, #4
  00324	e5832000	 str         r2, [r3]

; 322  : 
; 323  :     // send signal to write
; 324  :     OUTREG32(&pHDQRegs->CTRL_STATUS, mask);

  00328	e59d300c	 ldr         r3, [sp, #0xC]
  0032c	e283200c	 add         r2, r3, #0xC
  00330	e59d3008	 ldr         r3, [sp, #8]
  00334	e5823000	 str         r3, [r2]

; 325  :             
; 326  :     // Wait on TX complete interrupt.
; 327  :     if (WaitForSingleObject(pDevice->hIntrEvent, 
; 328  :         pDevice->txTimeout) == WAIT_TIMEOUT) 

  00338	e59d3000	 ldr         r3, [sp]
  0033c	e2833010	 add         r3, r3, #0x10
  00340	e5931000	 ldr         r1, [r3]
  00344	e59d3000	 ldr         r3, [sp]
  00348	e283303c	 add         r3, r3, #0x3C
  0034c	e5930000	 ldr         r0, [r3]
  00350	eb000000	 bl          WaitForSingleObject
  00354	e58d0018	 str         r0, [sp, #0x18]
  00358	e59d2018	 ldr         r2, [sp, #0x18]
  0035c	e3a03c01	 mov         r3, #1, 24
  00360	e3833002	 orr         r3, r3, #2
  00364	e1520003	 cmp         r2, r3
  00368	1a00000e	 bne         |$LN4@TransmitCo|

; 329  :         {
; 330  :         DEBUGMSG(ZONE_ERROR && ZONE_HDQ, (L"ERROR: TransmitCommand: "
; 331  :             L"Timeout in Tx\r\n"
; 332  :             ));

  0036c	e59f3138	 ldr         r3, [pc, #0x138]
  00370	e5933440	 ldr         r3, [r3, #0x440]
  00374	e3130902	 tst         r3, #2, 18
  00378	0a000004	 beq         |$LN9@TransmitCo|
  0037c	e59f0134	 ldr         r0, [pc, #0x134]
  00380	eb000000	 bl          NKDbgPrintfW
  00384	e3a03001	 mov         r3, #1
  00388	e58d301c	 str         r3, [sp, #0x1C]
  0038c	ea000001	 b           |$LN10@TransmitCo|
  00390		 |$LN9@TransmitCo|
  00390	e3a03000	 mov         r3, #0
  00394	e58d301c	 str         r3, [sp, #0x1C]
  00398		 |$LN10@TransmitCo|

; 333  :         TransmitBreak(pInstance);

  00398	e59d0034	 ldr         r0, [sp, #0x34]
  0039c	eb000000	 bl          |?TransmitBreak@@YAXPAUInstance_t@@@Z|
  003a0	ea00002d	 b           |$LN3@TransmitCo|

; 334  :         goto cleanUp;

  003a4	ea00002c	 b           |$cleanUp$36176|
  003a8		 |$LN4@TransmitCo|

; 335  :         }
; 336  :     
; 337  :     // Clear interrupt.
; 338  :     *pStatus = INREG32(&pHDQRegs->INT_STATUS);

  003a8	e59d300c	 ldr         r3, [sp, #0xC]
  003ac	e2833010	 add         r3, r3, #0x10
  003b0	e5932000	 ldr         r2, [r3]
  003b4	e59d303c	 ldr         r3, [sp, #0x3C]
  003b8	e5832000	 str         r2, [r3]

; 339  :     InterruptDone(pDevice->sysIntr);

  003bc	e59d3000	 ldr         r3, [sp]
  003c0	e2833038	 add         r3, r3, #0x38
  003c4	e5930000	 ldr         r0, [r3]
  003c8	eb000000	 bl          InterruptDone

; 340  : 
; 341  :     DEBUGMSG(ZONE_INFO, (L"TransmitCommand: *pStatus = 0x%02X\r\n", *pStatus));

  003cc	e59f30d8	 ldr         r3, [pc, #0xD8]
  003d0	e5933440	 ldr         r3, [r3, #0x440]
  003d4	e3130010	 tst         r3, #0x10
  003d8	0a000006	 beq         |$LN11@TransmitCo|
  003dc	e59d303c	 ldr         r3, [sp, #0x3C]
  003e0	e5931000	 ldr         r1, [r3]
  003e4	e59f00c8	 ldr         r0, [pc, #0xC8]
  003e8	eb000000	 bl          NKDbgPrintfW
  003ec	e3a03001	 mov         r3, #1
  003f0	e58d3020	 str         r3, [sp, #0x20]
  003f4	ea000001	 b           |$LN12@TransmitCo|
  003f8		 |$LN11@TransmitCo|
  003f8	e3a03000	 mov         r3, #0
  003fc	e58d3020	 str         r3, [sp, #0x20]
  00400		 |$LN12@TransmitCo|

; 342  :     
; 343  :     // Verify interrupt source
; 344  :     if ((*pStatus & HDQ_INT_TX_COMPLETE) == 0) 

  00400	e59d303c	 ldr         r3, [sp, #0x3C]
  00404	e5933000	 ldr         r3, [r3]
  00408	e3130004	 tst         r3, #4
  0040c	1a000010	 bne         |$LN2@TransmitCo|

; 345  :         {
; 346  :         DEBUGMSG(ZONE_ERROR && ZONE_HDQ, (L"ERROR: TransmitCommand: "
; 347  :             L"TX complete expected (0x%x)\r\n", *pStatus
; 348  :             ));

  00410	e59f3094	 ldr         r3, [pc, #0x94]
  00414	e5933440	 ldr         r3, [r3, #0x440]
  00418	e3130902	 tst         r3, #2, 18
  0041c	0a000006	 beq         |$LN13@TransmitCo|
  00420	e59d303c	 ldr         r3, [sp, #0x3C]
  00424	e5931000	 ldr         r1, [r3]
  00428	e59f0080	 ldr         r0, [pc, #0x80]
  0042c	eb000000	 bl          NKDbgPrintfW
  00430	e3a03001	 mov         r3, #1
  00434	e58d3024	 str         r3, [sp, #0x24]
  00438	ea000001	 b           |$LN14@TransmitCo|
  0043c		 |$LN13@TransmitCo|
  0043c	e3a03000	 mov         r3, #0
  00440	e58d3024	 str         r3, [sp, #0x24]
  00444		 |$LN14@TransmitCo|

; 349  :         TransmitBreak(pInstance);

  00444	e59d0034	 ldr         r0, [sp, #0x34]
  00448	eb000000	 bl          |?TransmitBreak@@YAXPAUInstance_t@@@Z|
  0044c	ea000002	 b           |$LN1@TransmitCo|

; 350  :         goto cleanUp;

  00450	ea000001	 b           |$cleanUp$36176|
  00454		 |$LN2@TransmitCo|

; 351  :         }
; 352  :     rc = TRUE;

  00454	e3a03001	 mov         r3, #1
  00458	e58d3004	 str         r3, [sp, #4]
  0045c		 |$LN1@TransmitCo|
  0045c		 |$LN3@TransmitCo|
  0045c		 |$cleanUp$36176|

; 353  :     
; 354  : cleanUp:
; 355  :     DEBUGMSG(ZONE_FUNCTION, (L"-TransmitCommand(cmd=0x%02X)\r\n", cmd));

  0045c	e59f3048	 ldr         r3, [pc, #0x48]
  00460	e5933440	 ldr         r3, [r3, #0x440]
  00464	e3130008	 tst         r3, #8
  00468	0a000006	 beq         |$LN15@TransmitCo|
  0046c	e5dd3038	 ldrb        r3, [sp, #0x38]
  00470	e1a01003	 mov         r1, r3
  00474	e59f002c	 ldr         r0, [pc, #0x2C]
  00478	eb000000	 bl          NKDbgPrintfW
  0047c	e3a03001	 mov         r3, #1
  00480	e58d3028	 str         r3, [sp, #0x28]
  00484	ea000001	 b           |$LN16@TransmitCo|
  00488		 |$LN15@TransmitCo|
  00488	e3a03000	 mov         r3, #0
  0048c	e58d3028	 str         r3, [sp, #0x28]
  00490		 |$LN16@TransmitCo|

; 356  :     return rc;

  00490	e59d3004	 ldr         r3, [sp, #4]
  00494	e58d3010	 str         r3, [sp, #0x10]

; 357  : }

  00498	e59d0010	 ldr         r0, [sp, #0x10]
  0049c	e28dd02c	 add         sp, sp, #0x2C
  004a0	e89d6000	 ldmia       sp, {sp, lr}
  004a4	e12fff1e	 bx          lr
  004a8		 |$LN20@TransmitCo|
  004a8		 |$LN21@TransmitCo|
  004a8	00000000	 DCD         |??_C@_1DO@LKJBMLFK@?$AA?9?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?$CI?$AAc?$AAm?$AAd?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAX?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  004ac		 |$LN22@TransmitCo|
  004ac	00000000	 DCD         |dpCurSettings|
  004b0		 |$LN23@TransmitCo|
  004b0	00000000	 DCD         |??_C@_1GM@MJKLLLGD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?3?$AA?5?$AAT?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl@|
  004b4		 |$LN24@TransmitCo|
  004b4	00000000	 DCD         |??_C@_1EK@BEOKNJPH@?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?3?$AA?5?$AA?$CK?$AAp?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@|
  004b8		 |$LN25@TransmitCo|
  004b8	00000000	 DCD         |??_C@_1FA@PCHADPOL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?3?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5@|
  004bc		 |$LN26@TransmitCo|
  004bc	00000000	 DCD         |??_C@_1DO@LICLIGPI@?$AA?$CL?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?$CI?$AAc?$AAm?$AAd?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAX?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  004c0		 |$M36680|

			 ENDP  ; |?TransmitCommand@@YAHPAUInstance_t@@EPAK@Z|, TransmitCommand

	EXPORT	|??_C@_1CO@IGFDDNOO@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?HDQ_Deinit@@YAHK@Z|			; HDQ_Deinit
	EXPORT	|??_C@_1FM@NIFBDGAK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@EMLNJMED@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HK@KKEFJMCD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAH?$AAD?$AAQ?$AA?1@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@DNKNIELJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAH?$AAD?$AAQ?$AA?5@| [ DATA ] ; `string'
	EXPORT	|?SetHDQPower@@YAHPAUDevice_t@@W4_CEDEVICE_POWER_STATE@@@Z| ; SetHDQPower
	EXPORT	|??_C@_1GC@KICBKBMF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAp?$AAa?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@KFDBANDB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAH?$AAD?$AAQ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HI@PJLGIFCB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@CKFFDCLA@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CF?$AAs?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?HDQ_Init@@YAKPBGPBX@Z|		; HDQ_Init
	IMPORT	|InterruptInitialize|
	IMPORT	|KernelIoControl|
	IMPORT	|GetIrqByDevice|
	IMPORT	|MmMapIoSpace|
	IMPORT	|GetAddressByDevice|
	IMPORT	|SOCGetHDQDevice|
	IMPORT	|CeSetThreadPriority|
	IMPORT	|CreateThread|
	IMPORT	|CreateEventW|
	IMPORT	|CreateBusAccessHandle|
	IMPORT	|GetDeviceRegistryParams|
	IMPORT	|InitializeCriticalSection|
	IMPORT	|InterlockedIncrement|
	IMPORT	|memset|
	IMPORT	|LocalAlloc|

  00018			 AREA	 |.pdata|, PDATA
|$T36717| DCD	|$LN41@HDQ_Init|
	DCD	0x40016d04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@IGFDDNOO@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "(", 0x0, "r", 0x0, "c", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@NIFBDGAK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@EMLNJMED@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAi@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "c"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, " ", 0x0, "e", 0x0, "v"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@KKEFJMCD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAH?$AAD?$AAQ?$AA?1@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "m"
	DCB	0x0, "a", 0x0, "p", 0x0, " ", 0x0, "H", 0x0, "D", 0x0, "Q"
	DCB	0x0, "/", 0x0, "1", 0x0, "W", 0x0, "I", 0x0, "R", 0x0, "E"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@DNKNIELJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAH?$AAD?$AAQ?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "m"
	DCB	0x0, "a", 0x0, "p", 0x0, " ", 0x0, "H", 0x0, "D", 0x0, "Q"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@KICBKBMF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAp?$AAa?$AAr@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "o"
	DCB	0x0, "p", 0x0, "e", 0x0, "n", 0x0, " ", 0x0, "p", 0x0, "a"
	DCB	0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "s", 0x0, " ", 0x0, "d", 0x0, "r", 0x0, "i"
	DCB	0x0, "v", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@KFDBANDB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAH?$AAD?$AAQ@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "H", 0x0, "D"
	DCB	0x0, "Q", 0x0, " ", 0x0, "d", 0x0, "r", 0x0, "i", 0x0, "v"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "r", 0x0, "y", 0x0, " "
	DCB	0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@PJLGIFCB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, " ", 0x0, "H", 0x0, "D", 0x0, "Q", 0x0, " "
	DCB	0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "s"
	DCB	0x0, "t", 0x0, "r", 0x0, "u", 0x0, "c", 0x0, "t", 0x0, "u"
	DCB	0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@CKFFDCLA@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CF?$AAs?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "(", 0x0, "%", 0x0, "s", 0x0, ","
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  004c0			 AREA	 |.text|, CODE, ARM

  004c0		 |?HDQ_Init@@YAKPBGPBX@Z| PROC		; HDQ_Init

; 371  : {

  004c0		 |$LN41@HDQ_Init|
  004c0	e1a0c00d	 mov         r12, sp
  004c4	e92d0003	 stmdb       sp!, {r0, r1}
  004c8	e92d5000	 stmdb       sp!, {r12, lr}
  004cc	e24dd088	 sub         sp, sp, #0x88
  004d0		 |$M36714|

; 372  :     DEBUGMSG(ZONE_FUNCTION, (L"+HDQ_Init(%s, 0x%08x)\r\n", 
; 373  :         szContext, pBusContext
; 374  :         ));

  004d0	e59f3568	 ldr         r3, [pc, #0x568]
  004d4	e5933440	 ldr         r3, [r3, #0x440]
  004d8	e3130008	 tst         r3, #8
  004dc	0a000006	 beq         |$LN21@HDQ_Init|
  004e0	e59d2094	 ldr         r2, [sp, #0x94]
  004e4	e59d1090	 ldr         r1, [sp, #0x90]
  004e8	e59f0580	 ldr         r0, [pc, #0x580]
  004ec	eb000000	 bl          NKDbgPrintfW
  004f0	e3a03001	 mov         r3, #1
  004f4	e58d3030	 str         r3, [sp, #0x30]
  004f8	ea000001	 b           |$LN22@HDQ_Init|
  004fc		 |$LN21@HDQ_Init|
  004fc	e3a03000	 mov         r3, #0
  00500	e58d3030	 str         r3, [sp, #0x30]
  00504		 |$LN22@HDQ_Init|

; 375  : 
; 376  :     UNREFERENCED_PARAMETER(pBusContext);    
; 377  :     
; 378  :     DWORD rc = (DWORD)NULL;

  00504	e3a03000	 mov         r3, #0
  00508	e58d300c	 str         r3, [sp, #0xC]

; 379  :     Device_t *pDevice = NULL;

  0050c	e3a03000	 mov         r3, #0
  00510	e58d3008	 str         r3, [sp, #8]

; 380  :     PHYSICAL_ADDRESS pa;
; 381  : 
; 382  :     // Create device structure
; 383  :     pDevice = (Device_t *)LocalAlloc(LPTR, sizeof(Device_t));

  00514	e3a01060	 mov         r1, #0x60
  00518	e3a00040	 mov         r0, #0x40
  0051c	eb000000	 bl          LocalAlloc
  00520	e58d0034	 str         r0, [sp, #0x34]
  00524	e59d3034	 ldr         r3, [sp, #0x34]
  00528	e58d3008	 str         r3, [sp, #8]

; 384  :     if (pDevice == NULL) 

  0052c	e59d3008	 ldr         r3, [sp, #8]
  00530	e3530000	 cmp         r3, #0
  00534	1a00000c	 bne         |$LN18@HDQ_Init|

; 385  :         {
; 386  :         DEBUGMSG(ZONE_ERROR && ZONE_HDQ, (L"ERROR: HDQ_Init: "
; 387  :             L"Failed allocate HDQ controller structure\r\n"
; 388  :             ));

  00538	e59f3500	 ldr         r3, [pc, #0x500]
  0053c	e5933440	 ldr         r3, [r3, #0x440]
  00540	e3130902	 tst         r3, #2, 18
  00544	0a000004	 beq         |$LN23@HDQ_Init|
  00548	e59f051c	 ldr         r0, [pc, #0x51C]
  0054c	eb000000	 bl          NKDbgPrintfW
  00550	e3a03001	 mov         r3, #1
  00554	e58d3038	 str         r3, [sp, #0x38]
  00558	ea000001	 b           |$LN24@HDQ_Init|
  0055c		 |$LN23@HDQ_Init|
  0055c	e3a03000	 mov         r3, #0
  00560	e58d3038	 str         r3, [sp, #0x38]
  00564		 |$LN24@HDQ_Init|

; 389  :         goto cleanUp;

  00564	ea000117	 b           |$LN17@HDQ_Init|
  00568	ea000116	 b           |$cleanUp$36202|
  0056c		 |$LN18@HDQ_Init|

; 390  :         }
; 391  :     memset(pDevice, 0, sizeof(Device_t));

  0056c	e3a02060	 mov         r2, #0x60
  00570	e3a01000	 mov         r1, #0
  00574	e59d0008	 ldr         r0, [sp, #8]
  00578	eb000000	 bl          memset

; 392  : 
; 393  :     // Set cookie
; 394  :     pDevice->cookie = HDQ_DEVICE_COOKIE;

  0057c	e59d2008	 ldr         r2, [sp, #8]
  00580	e59f34e0	 ldr         r3, [pc, #0x4E0]
  00584	e5823000	 str         r3, [r2]

; 395  :     pDevice->nPowerState = D4;

  00588	e59d3008	 ldr         r3, [sp, #8]
  0058c	e2832040	 add         r2, r3, #0x40
  00590	e3a03004	 mov         r3, #4
  00594	e5823000	 str         r3, [r2]

; 396  : 
; 397  :     // set device reference count to 1
; 398  :     InterlockedIncrement(&pDevice->instances);

  00598	e59d3008	 ldr         r3, [sp, #8]
  0059c	e2830020	 add         r0, r3, #0x20
  005a0	eb000000	 bl          InterlockedIncrement

; 399  : 
; 400  :     // Initalize critical section
; 401  :     InitializeCriticalSection(&pDevice->cs);

  005a4	e59d3008	 ldr         r3, [sp, #8]
  005a8	e2830024	 add         r0, r3, #0x24
  005ac	eb000000	 bl          InitializeCriticalSection

; 402  : 
; 403  :     // Read device parameters
; 404  :     if (GetDeviceRegistryParams(szContext, pDevice, dimof(g_deviceRegParams), 
; 405  :         g_deviceRegParams) != ERROR_SUCCESS) 

  005b0	e59f34ac	 ldr         r3, [pc, #0x4AC]
  005b4	e3a02005	 mov         r2, #5
  005b8	e59d1008	 ldr         r1, [sp, #8]
  005bc	e59d0090	 ldr         r0, [sp, #0x90]
  005c0	eb000000	 bl          GetDeviceRegistryParams
  005c4	e58d003c	 str         r0, [sp, #0x3C]
  005c8	e59d303c	 ldr         r3, [sp, #0x3C]
  005cc	e3530000	 cmp         r3, #0
  005d0	0a00000c	 beq         |$LN16@HDQ_Init|

; 406  :         {
; 407  :         DEBUGMSG(ZONE_ERROR && ZONE_HDQ, (L"ERROR: HDQ_Init: "
; 408  :             L"Failed read HDQ driver registry parameters\r\n"
; 409  :             ));

  005d4	e59f3464	 ldr         r3, [pc, #0x464]
  005d8	e5933440	 ldr         r3, [r3, #0x440]
  005dc	e3130902	 tst         r3, #2, 18
  005e0	0a000004	 beq         |$LN25@HDQ_Init|
  005e4	e59f0474	 ldr         r0, [pc, #0x474]
  005e8	eb000000	 bl          NKDbgPrintfW
  005ec	e3a03001	 mov         r3, #1
  005f0	e58d3040	 str         r3, [sp, #0x40]
  005f4	ea000001	 b           |$LN26@HDQ_Init|
  005f8		 |$LN25@HDQ_Init|
  005f8	e3a03000	 mov         r3, #0
  005fc	e58d3040	 str         r3, [sp, #0x40]
  00600		 |$LN26@HDQ_Init|

; 410  :         goto cleanUp;

  00600	ea0000f0	 b           |$LN15@HDQ_Init|
  00604	ea0000ef	 b           |$cleanUp$36202|
  00608		 |$LN16@HDQ_Init|

; 411  :         }
; 412  : 
; 413  :     // Open parent bus
; 414  :     pDevice->hParent = CreateBusAccessHandle(szContext);

  00608	e59d0090	 ldr         r0, [sp, #0x90]
  0060c	eb000000	 bl          CreateBusAccessHandle
  00610	e58d0044	 str         r0, [sp, #0x44]
  00614	e59d3008	 ldr         r3, [sp, #8]
  00618	e283201c	 add         r2, r3, #0x1C
  0061c	e59d3044	 ldr         r3, [sp, #0x44]
  00620	e5823000	 str         r3, [r2]

; 415  :     if (pDevice->hParent == NULL) 

  00624	e59d3008	 ldr         r3, [sp, #8]
  00628	e283301c	 add         r3, r3, #0x1C
  0062c	e5933000	 ldr         r3, [r3]
  00630	e3530000	 cmp         r3, #0
  00634	1a00000c	 bne         |$LN14@HDQ_Init|

; 416  :         {
; 417  :         DEBUGMSG(ZONE_ERROR && ZONE_HDQ, (L"ERROR: HDQ_Init: "
; 418  :             L"Failed open parent bus driver\r\n"
; 419  :             ));

  00638	e59f3400	 ldr         r3, [pc, #0x400]
  0063c	e5933440	 ldr         r3, [r3, #0x440]
  00640	e3130902	 tst         r3, #2, 18
  00644	0a000004	 beq         |$LN27@HDQ_Init|
  00648	e59f040c	 ldr         r0, [pc, #0x40C]
  0064c	eb000000	 bl          NKDbgPrintfW
  00650	e3a03001	 mov         r3, #1
  00654	e58d3048	 str         r3, [sp, #0x48]
  00658	ea000001	 b           |$LN28@HDQ_Init|
  0065c		 |$LN27@HDQ_Init|
  0065c	e3a03000	 mov         r3, #0
  00660	e58d3048	 str         r3, [sp, #0x48]
  00664		 |$LN28@HDQ_Init|

; 420  :         goto cleanUp;

  00664	ea0000d7	 b           |$LN13@HDQ_Init|
  00668	ea0000d6	 b           |$cleanUp$36202|
  0066c		 |$LN14@HDQ_Init|

; 421  :         }
; 422  :     
; 423  :     // start timer thread
; 424  :     pDevice->hTimerEvent = CreateEvent(NULL, FALSE, FALSE, NULL);

  0066c	e3a03000	 mov         r3, #0
  00670	e3a02000	 mov         r2, #0
  00674	e3a01000	 mov         r1, #0
  00678	e3a00000	 mov         r0, #0
  0067c	eb000000	 bl          CreateEventW
  00680	e58d004c	 str         r0, [sp, #0x4C]
  00684	e59d3008	 ldr         r3, [sp, #8]
  00688	e283204c	 add         r2, r3, #0x4C
  0068c	e59d304c	 ldr         r3, [sp, #0x4C]
  00690	e5823000	 str         r3, [r2]

; 425  :     if (pDevice->hTimerEvent != NULL)

  00694	e59d3008	 ldr         r3, [sp, #8]
  00698	e283304c	 add         r3, r3, #0x4C
  0069c	e5933000	 ldr         r3, [r3]
  006a0	e3530000	 cmp         r3, #0
  006a4	0a000017	 beq         |$LN12@HDQ_Init|

; 426  :         {
; 427  :         pDevice->hTimerThread = CreateThread(NULL, 0, HDQPowerTimerThread, 
; 428  :             pDevice, 0, NULL
; 429  :             );

  006a8	e3a03000	 mov         r3, #0
  006ac	e58d3004	 str         r3, [sp, #4]
  006b0	e3a03000	 mov         r3, #0
  006b4	e58d3000	 str         r3, [sp]
  006b8	e59d3008	 ldr         r3, [sp, #8]
  006bc	e59f2394	 ldr         r2, [pc, #0x394]
  006c0	e3a01000	 mov         r1, #0
  006c4	e3a00000	 mov         r0, #0
  006c8	eb000000	 bl          CreateThread
  006cc	e58d0050	 str         r0, [sp, #0x50]
  006d0	e59d3008	 ldr         r3, [sp, #8]
  006d4	e2832048	 add         r2, r3, #0x48
  006d8	e59d3050	 ldr         r3, [sp, #0x50]
  006dc	e5823000	 str         r3, [r2]

; 430  :         
; 431  :         if (pDevice->hTimerThread != NULL)

  006e0	e59d3008	 ldr         r3, [sp, #8]
  006e4	e2833048	 add         r3, r3, #0x48
  006e8	e5933000	 ldr         r3, [r3]
  006ec	e3530000	 cmp         r3, #0
  006f0	0a000004	 beq         |$LN11@HDQ_Init|

; 432  :             {
; 433  :             CeSetThreadPriority(pDevice->hTimerThread, TIMERTHREAD_PRIORITY);

  006f4	e3a01098	 mov         r1, #0x98
  006f8	e59d3008	 ldr         r3, [sp, #8]
  006fc	e2833048	 add         r3, r3, #0x48
  00700	e5930000	 ldr         r0, [r3]
  00704	eb000000	 bl          CeSetThreadPriority
  00708		 |$LN11@HDQ_Init|
  00708		 |$LN12@HDQ_Init|

; 434  :             }
; 435  :         }
; 436  : 
; 437  :     pDevice->dwDeviceId = SOCGetHDQDevice(pDevice->dwHDQBusIndex);

  00708	e59d3008	 ldr         r3, [sp, #8]
  0070c	e2833004	 add         r3, r3, #4
  00710	e5930000	 ldr         r0, [r3]
  00714	eb000000	 bl          SOCGetHDQDevice
  00718	e58d0054	 str         r0, [sp, #0x54]
  0071c	e59d3008	 ldr         r3, [sp, #8]
  00720	e2832008	 add         r2, r3, #8
  00724	e59d3054	 ldr         r3, [sp, #0x54]
  00728	e5823000	 str         r3, [r2]

; 438  : 
; 439  :     // Set hardware to full power
; 440  :     SetHDQPower(pDevice, D0);

  0072c	e3a01000	 mov         r1, #0
  00730	e59d0008	 ldr         r0, [sp, #8]
  00734	eb000000	 bl          |?SetHDQPower@@YAHPAUDevice_t@@W4_CEDEVICE_POWER_STATE@@@Z|

; 441  : 
; 442  :     // Map HDQ_1WIRE controller
; 443  :     pa.QuadPart = GetAddressByDevice(pDevice->dwDeviceId);

  00738	e59d3008	 ldr         r3, [sp, #8]
  0073c	e2833008	 add         r3, r3, #8
  00740	e5930000	 ldr         r0, [r3]
  00744	eb000000	 bl          GetAddressByDevice
  00748	e58d0058	 str         r0, [sp, #0x58]
  0074c	e59d3058	 ldr         r3, [sp, #0x58]
  00750	e58d3014	 str         r3, [sp, #0x14]
  00754	e3a03000	 mov         r3, #0
  00758	e58d3018	 str         r3, [sp, #0x18]

; 444  :     pDevice->pHDQRegs = (OMAP_HDQ_1WIRE_REGS*)MmMapIoSpace(pa, 
; 445  :                             sizeof(OMAP_HDQ_1WIRE_REGS), FALSE
; 446  :                             );

  0075c	e3a03000	 mov         r3, #0
  00760	e3a0201c	 mov         r2, #0x1C
  00764	e59d0014	 ldr         r0, [sp, #0x14]
  00768	e59d1018	 ldr         r1, [sp, #0x18]
  0076c	eb000000	 bl          MmMapIoSpace
  00770	e58d005c	 str         r0, [sp, #0x5C]
  00774	e59d3008	 ldr         r3, [sp, #8]
  00778	e2832018	 add         r2, r3, #0x18
  0077c	e59d305c	 ldr         r3, [sp, #0x5C]
  00780	e5823000	 str         r3, [r2]

; 447  :     
; 448  :     if (pDevice->pHDQRegs == NULL) 

  00784	e59d3008	 ldr         r3, [sp, #8]
  00788	e2833018	 add         r3, r3, #0x18
  0078c	e5933000	 ldr         r3, [r3]
  00790	e3530000	 cmp         r3, #0
  00794	1a00000c	 bne         |$LN10@HDQ_Init|

; 449  :         {
; 450  :         DEBUGMSG(ZONE_ERROR && ZONE_HDQ, (L"ERROR: HDQ_Init: "
; 451  :             L"Failed map HDQ controller registers\r\n"
; 452  :             ));

  00798	e59f32a0	 ldr         r3, [pc, #0x2A0]
  0079c	e5933440	 ldr         r3, [r3, #0x440]
  007a0	e3130902	 tst         r3, #2, 18
  007a4	0a000004	 beq         |$LN29@HDQ_Init|
  007a8	e59f02a4	 ldr         r0, [pc, #0x2A4]
  007ac	eb000000	 bl          NKDbgPrintfW
  007b0	e3a03001	 mov         r3, #1
  007b4	e58d3060	 str         r3, [sp, #0x60]
  007b8	ea000001	 b           |$LN30@HDQ_Init|
  007bc		 |$LN29@HDQ_Init|
  007bc	e3a03000	 mov         r3, #0
  007c0	e58d3060	 str         r3, [sp, #0x60]
  007c4		 |$LN30@HDQ_Init|

; 453  :         goto cleanUp;

  007c4	ea00007f	 b           |$LN9@HDQ_Init|
  007c8	ea00007e	 b           |$cleanUp$36202|
  007cc		 |$LN10@HDQ_Init|

; 454  :         }
; 455  : 
; 456  :     DWORD irq = GetIrqByDevice(pDevice->dwDeviceId,NULL);

  007cc	e3a01000	 mov         r1, #0
  007d0	e59d3008	 ldr         r3, [sp, #8]
  007d4	e2833008	 add         r3, r3, #8
  007d8	e5930000	 ldr         r0, [r3]
  007dc	eb000000	 bl          GetIrqByDevice
  007e0	e58d0064	 str         r0, [sp, #0x64]
  007e4	e59d3064	 ldr         r3, [sp, #0x64]
  007e8	e58d3010	 str         r3, [sp, #0x10]

; 457  :     // Map HDQ_1WIRE interrupt
; 458  :     if (!KernelIoControl(IOCTL_HAL_REQUEST_SYSINTR, &irq, 
; 459  :         sizeof(irq), &pDevice->sysIntr, 
; 460  :         sizeof(pDevice->sysIntr), NULL
; 461  :         )) 

  007ec	e3a03000	 mov         r3, #0
  007f0	e58d3004	 str         r3, [sp, #4]
  007f4	e3a03004	 mov         r3, #4
  007f8	e58d3000	 str         r3, [sp]
  007fc	e59d3008	 ldr         r3, [sp, #8]
  00800	e2833038	 add         r3, r3, #0x38
  00804	e3a02004	 mov         r2, #4
  00808	e28d1010	 add         r1, sp, #0x10
  0080c	e59f023c	 ldr         r0, [pc, #0x23C]
  00810	eb000000	 bl          KernelIoControl
  00814	e58d0068	 str         r0, [sp, #0x68]
  00818	e59d3068	 ldr         r3, [sp, #0x68]
  0081c	e3530000	 cmp         r3, #0
  00820	1a00000c	 bne         |$LN8@HDQ_Init|

; 462  :         {
; 463  :         DEBUGMSG(ZONE_ERROR && ZONE_HDQ, (L"ERROR: HDQ_Init: "
; 464  :             L"Failed map HDQ/1WIRE controller interrupt\r\n"
; 465  :             ));

  00824	e59f3214	 ldr         r3, [pc, #0x214]
  00828	e5933440	 ldr         r3, [r3, #0x440]
  0082c	e3130902	 tst         r3, #2, 18
  00830	0a000004	 beq         |$LN31@HDQ_Init|
  00834	e59f0210	 ldr         r0, [pc, #0x210]
  00838	eb000000	 bl          NKDbgPrintfW
  0083c	e3a03001	 mov         r3, #1
  00840	e58d306c	 str         r3, [sp, #0x6C]
  00844	ea000001	 b           |$LN32@HDQ_Init|
  00848		 |$LN31@HDQ_Init|
  00848	e3a03000	 mov         r3, #0
  0084c	e58d306c	 str         r3, [sp, #0x6C]
  00850		 |$LN32@HDQ_Init|

; 466  :         goto cleanUp;

  00850	ea00005c	 b           |$LN7@HDQ_Init|
  00854	ea00005b	 b           |$cleanUp$36202|
  00858		 |$LN8@HDQ_Init|

; 467  :         }
; 468  : 
; 469  :     // Create interrupt event
; 470  :     pDevice->hIntrEvent = CreateEvent(NULL, FALSE, FALSE, NULL);

  00858	e3a03000	 mov         r3, #0
  0085c	e3a02000	 mov         r2, #0
  00860	e3a01000	 mov         r1, #0
  00864	e3a00000	 mov         r0, #0
  00868	eb000000	 bl          CreateEventW
  0086c	e58d0070	 str         r0, [sp, #0x70]
  00870	e59d3008	 ldr         r3, [sp, #8]
  00874	e283203c	 add         r2, r3, #0x3C
  00878	e59d3070	 ldr         r3, [sp, #0x70]
  0087c	e5823000	 str         r3, [r2]

; 471  :     if (pDevice->hIntrEvent == NULL) 

  00880	e59d3008	 ldr         r3, [sp, #8]
  00884	e283303c	 add         r3, r3, #0x3C
  00888	e5933000	 ldr         r3, [r3]
  0088c	e3530000	 cmp         r3, #0
  00890	1a00000c	 bne         |$LN6@HDQ_Init|

; 472  :         {
; 473  :         DEBUGMSG(ZONE_ERROR && ZONE_HDQ, (L"ERROR: HDQ_Init: "
; 474  :             L"Failed create interrupt event\r\n"
; 475  :             ));

  00894	e59f31a4	 ldr         r3, [pc, #0x1A4]
  00898	e5933440	 ldr         r3, [r3, #0x440]
  0089c	e3130902	 tst         r3, #2, 18
  008a0	0a000004	 beq         |$LN33@HDQ_Init|
  008a4	e59f019c	 ldr         r0, [pc, #0x19C]
  008a8	eb000000	 bl          NKDbgPrintfW
  008ac	e3a03001	 mov         r3, #1
  008b0	e58d3074	 str         r3, [sp, #0x74]
  008b4	ea000001	 b           |$LN34@HDQ_Init|
  008b8		 |$LN33@HDQ_Init|
  008b8	e3a03000	 mov         r3, #0
  008bc	e58d3074	 str         r3, [sp, #0x74]
  008c0		 |$LN34@HDQ_Init|

; 476  :         goto cleanUp;

  008c0	ea000040	 b           |$LN5@HDQ_Init|
  008c4	ea00003f	 b           |$cleanUp$36202|
  008c8		 |$LN6@HDQ_Init|

; 477  :         }
; 478  :     
; 479  :     if (InterruptInitialize(pDevice->sysIntr, pDevice->hIntrEvent, NULL, 0) == FALSE)

  008c8	e3a03000	 mov         r3, #0
  008cc	e3a02000	 mov         r2, #0
  008d0	e59d1008	 ldr         r1, [sp, #8]
  008d4	e281103c	 add         r1, r1, #0x3C
  008d8	e5911000	 ldr         r1, [r1]
  008dc	e59d0008	 ldr         r0, [sp, #8]
  008e0	e2800038	 add         r0, r0, #0x38
  008e4	e5900000	 ldr         r0, [r0]
  008e8	eb000000	 bl          InterruptInitialize
  008ec	e58d0078	 str         r0, [sp, #0x78]
  008f0	e59d3078	 ldr         r3, [sp, #0x78]
  008f4	e3530000	 cmp         r3, #0
  008f8	1a000008	 bne         |$LN4@HDQ_Init|

; 480  :         {
; 481  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: HDQ_Init: "
; 482  :             L"InterruptInitialize failed\r\n"
; 483  :             ));

  008fc	e59f0140	 ldr         r0, [pc, #0x140]
  00900	eb000000	 bl          NKDbgPrintfW
  00904	e3a03001	 mov         r3, #1
  00908	e58d307c	 str         r3, [sp, #0x7C]
  0090c	ea000001	 b           |$LN36@HDQ_Init|
  00910	e3a03000	 mov         r3, #0
  00914	e58d307c	 str         r3, [sp, #0x7C]
  00918		 |$LN36@HDQ_Init|

; 484  :         goto cleanUp;

  00918	ea00002a	 b           |$LN3@HDQ_Init|
  0091c	ea000029	 b           |$cleanUp$36202|
  00920		 |$LN4@HDQ_Init|

; 485  :         }
; 486  : 
; 487  :     // Enable the clock.
; 488  :     SETREG32(&pDevice->pHDQRegs->CTRL_STATUS, HDQ_CTRL_CLOCK_ENABLE);

  00920	e59d3008	 ldr         r3, [sp, #8]
  00924	e2833018	 add         r3, r3, #0x18
  00928	e5933000	 ldr         r3, [r3]
  0092c	e283300c	 add         r3, r3, #0xC
  00930	e5933000	 ldr         r3, [r3]
  00934	e3832020	 orr         r2, r3, #0x20
  00938	e59d3008	 ldr         r3, [sp, #8]
  0093c	e2833018	 add         r3, r3, #0x18
  00940	e5933000	 ldr         r3, [r3]
  00944	e283300c	 add         r3, r3, #0xC
  00948	e5832000	 str         r2, [r3]

; 489  :     
; 490  :     // Set to HDQ mode as default
; 491  :     CLRREG32(&pDevice->pHDQRegs->CTRL_STATUS, HDQ_MODE_1WIRE);

  0094c	e59d3008	 ldr         r3, [sp, #8]
  00950	e2833018	 add         r3, r3, #0x18
  00954	e5933000	 ldr         r3, [r3]
  00958	e283300c	 add         r3, r3, #0xC
  0095c	e5932000	 ldr         r2, [r3]
  00960	e3e03001	 mvn         r3, #1
  00964	e0022003	 and         r2, r2, r3
  00968	e59d3008	 ldr         r3, [sp, #8]
  0096c	e2833018	 add         r3, r3, #0x18
  00970	e5933000	 ldr         r3, [r3]
  00974	e283300c	 add         r3, r3, #0xC
  00978	e5832000	 str         r2, [r3]

; 492  :     
; 493  :     // Clear the interrupt
; 494  :     INREG32(&pDevice->pHDQRegs->INT_STATUS);

  0097c	e59d3008	 ldr         r3, [sp, #8]
  00980	e2833018	 add         r3, r3, #0x18
  00984	e5933000	 ldr         r3, [r3]
  00988	e2833010	 add         r3, r3, #0x10
  0098c	e5933000	 ldr         r3, [r3]
  00990	e58d3080	 str         r3, [sp, #0x80]

; 495  :     
; 496  :     // Enable interrupt
; 497  :     SETREG32(&pDevice->pHDQRegs->CTRL_STATUS, HDQ_CTRL_INTERRUPT_MASK);

  00994	e59d3008	 ldr         r3, [sp, #8]
  00998	e2833018	 add         r3, r3, #0x18
  0099c	e5933000	 ldr         r3, [r3]
  009a0	e283300c	 add         r3, r3, #0xC
  009a4	e5933000	 ldr         r3, [r3]
  009a8	e3832040	 orr         r2, r3, #0x40
  009ac	e59d3008	 ldr         r3, [sp, #8]
  009b0	e2833018	 add         r3, r3, #0x18
  009b4	e5933000	 ldr         r3, [r3]
  009b8	e283300c	 add         r3, r3, #0xC
  009bc	e5832000	 str         r2, [r3]

; 498  : 
; 499  :     // Return non-null value
; 500  :     rc = (DWORD)pDevice;

  009c0	e59d3008	 ldr         r3, [sp, #8]
  009c4	e58d300c	 str         r3, [sp, #0xC]
  009c8		 |$LN3@HDQ_Init|
  009c8		 |$LN5@HDQ_Init|
  009c8		 |$LN7@HDQ_Init|
  009c8		 |$LN9@HDQ_Init|
  009c8		 |$LN13@HDQ_Init|
  009c8		 |$LN15@HDQ_Init|
  009c8		 |$LN17@HDQ_Init|
  009c8		 |$cleanUp$36202|

; 501  : 
; 502  : cleanUp:
; 503  :     if (pDevice != NULL) SetHDQPower(pDevice, D4);

  009c8	e59d3008	 ldr         r3, [sp, #8]
  009cc	e3530000	 cmp         r3, #0
  009d0	0a000002	 beq         |$LN2@HDQ_Init|
  009d4	e3a01004	 mov         r1, #4
  009d8	e59d0008	 ldr         r0, [sp, #8]
  009dc	eb000000	 bl          |?SetHDQPower@@YAHPAUDevice_t@@W4_CEDEVICE_POWER_STATE@@@Z|
  009e0		 |$LN2@HDQ_Init|

; 504  :     if (rc == 0) HDQ_Deinit((DWORD)pDevice);

  009e0	e59d300c	 ldr         r3, [sp, #0xC]
  009e4	e3530000	 cmp         r3, #0
  009e8	1a000001	 bne         |$LN1@HDQ_Init|
  009ec	e59d0008	 ldr         r0, [sp, #8]
  009f0	eb000000	 bl          |?HDQ_Deinit@@YAHK@Z|
  009f4		 |$LN1@HDQ_Init|

; 505  :     DEBUGMSG(ZONE_FUNCTION, (L"-HDQ_Init(rc = 0x%x)\r\n", rc));

  009f4	e59f3044	 ldr         r3, [pc, #0x44]
  009f8	e5933440	 ldr         r3, [r3, #0x440]
  009fc	e3130008	 tst         r3, #8
  00a00	0a000005	 beq         |$LN37@HDQ_Init|
  00a04	e59d100c	 ldr         r1, [sp, #0xC]
  00a08	e59f002c	 ldr         r0, [pc, #0x2C]
  00a0c	eb000000	 bl          NKDbgPrintfW
  00a10	e3a03001	 mov         r3, #1
  00a14	e58d3084	 str         r3, [sp, #0x84]
  00a18	ea000001	 b           |$LN38@HDQ_Init|
  00a1c		 |$LN37@HDQ_Init|
  00a1c	e3a03000	 mov         r3, #0
  00a20	e58d3084	 str         r3, [sp, #0x84]
  00a24		 |$LN38@HDQ_Init|

; 506  :     return rc;

  00a24	e59d300c	 ldr         r3, [sp, #0xC]
  00a28	e58d302c	 str         r3, [sp, #0x2C]

; 507  : }

  00a2c	e59d002c	 ldr         r0, [sp, #0x2C]
  00a30	e28dd088	 add         sp, sp, #0x88
  00a34	e89d6000	 ldmia       sp, {sp, lr}
  00a38	e12fff1e	 bx          lr
  00a3c		 |$LN42@HDQ_Init|
  00a3c		 |$LN43@HDQ_Init|
  00a3c	00000000	 DCD         |??_C@_1CO@IGFDDNOO@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00a40		 |$LN44@HDQ_Init|
  00a40	00000000	 DCD         |dpCurSettings|
  00a44		 |$LN45@HDQ_Init|
  00a44	00000000	 DCD         |??_C@_1FM@NIFBDGAK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa@|
  00a48		 |$LN46@HDQ_Init|
  00a48	00000000	 DCD         |??_C@_1GC@EMLNJMED@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAi@|
  00a4c		 |$LN47@HDQ_Init|
  00a4c	00000000	 DCD         |??_C@_1HK@KKEFJMCD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAH?$AAD?$AAQ?$AA?1@|
  00a50		 |$LN48@HDQ_Init|
  00a50	01010098	 DCD         0x1010098
  00a54		 |$LN49@HDQ_Init|
  00a54	00000000	 DCD         |??_C@_1GO@DNKNIELJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAH?$AAD?$AAQ?$AA?5@|
  00a58		 |$LN50@HDQ_Init|
  00a58	00000000	 DCD         |?HDQPowerTimerThread@@YAKPAX@Z|
  00a5c		 |$LN51@HDQ_Init|
  00a5c	00000000	 DCD         |??_C@_1GC@KICBKBMF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAp?$AAa?$AAr@|
  00a60		 |$LN52@HDQ_Init|
  00a60	00000000	 DCD         |??_C@_1HM@KFDBANDB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAH?$AAD?$AAQ@|
  00a64		 |$LN53@HDQ_Init|
  00a64	00000000	 DCD         |g_deviceRegParams|
  00a68		 |$LN54@HDQ_Init|
  00a68	68647144	 DCD         0x68647144
  00a6c		 |$LN55@HDQ_Init|
  00a6c	00000000	 DCD         |??_C@_1HI@PJLGIFCB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe@|
  00a70		 |$LN56@HDQ_Init|
  00a70	00000000	 DCD         |??_C@_1DA@CKFFDCLA@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CF?$AAs?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00a74		 |$M36715|

			 ENDP  ; |?HDQ_Init@@YAKPBGPBX@Z|, HDQ_Init

	EXPORT	|??_C@_1GM@GBBGDCNG@?$AAH?$AAD?$AAQ?$AA?5?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?9@| [ DATA ] ; `string'
	EXPORT	|SetEvent|

  00000			 AREA	 |.pdata|, PDATA
|$T36740| DCD	|$LN13@SetHDQPowe|
	DCD	0x40005904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@GBBGDCNG@?$AAH?$AAD?$AAQ?$AA?5?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?9@| DCB "H"
	DCB	0x0, "D", 0x0, "Q", 0x0, " ", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "(", 0x0, "p"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "-", 0x0, ">", 0x0, "h", 0x0, "P", 0x0, "a", 0x0, "r"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, ",", 0x0, " ", 0x0, "D"
	DCB	0x0, "4", 0x0, ",", 0x0, " ", 0x0, "N", 0x0, "U", 0x0, "L"
	DCB	0x0, "L", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetHDQPower@@YAHPAUDevice_t@@W4_CEDEVICE_POWER_STATE@@@Z| PROC ; SetHDQPower

; 221  : {

  00000		 |$LN13@SetHDQPowe|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36737|

; 222  :     // enable power when the power state request is D0-D2
; 223  :     EnterCriticalSection(&pDevice->cs);

  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e2830024	 add         r0, r3, #0x24
  00018	eb000000	 bl          EnterCriticalSection

; 224  : 
; 225  :     if (state < D3)

  0001c	e59d3014	 ldr         r3, [sp, #0x14]
  00020	e3530003	 cmp         r3, #3
  00024	aa000019	 bge         |$LN6@SetHDQPowe|

; 226  :         {
; 227  :         if (pDevice->nPowerState >= D3)

  00028	e59d3010	 ldr         r3, [sp, #0x10]
  0002c	e2833040	 add         r3, r3, #0x40
  00030	e5933000	 ldr         r3, [r3]
  00034	e3530003	 cmp         r3, #3
  00038	3a000008	 bcc         |$LN5@SetHDQPowe|

; 228  :             {
; 229  :                 //SetDevicePowerState(pDevice->hParent, D0, NULL);
; 230  :                 EnableDeviceClocks(pDevice->dwDeviceId,TRUE);

  0003c	e3a01001	 mov         r1, #1
  00040	e59d3010	 ldr         r3, [sp, #0x10]
  00044	e2833008	 add         r3, r3, #8
  00048	e5930000	 ldr         r0, [r3]
  0004c	eb000000	 bl          EnableDeviceClocks

; 231  :                 pDevice->nPowerState = D0;

  00050	e59d3010	 ldr         r3, [sp, #0x10]
  00054	e2832040	 add         r2, r3, #0x40
  00058	e3a03000	 mov         r3, #0
  0005c	e5823000	 str         r3, [r2]
  00060		 |$LN5@SetHDQPowe|

; 232  :             }
; 233  :         pDevice->bDisablePower = FALSE;

  00060	e59d3010	 ldr         r3, [sp, #0x10]
  00064	e2832050	 add         r2, r3, #0x50
  00068	e3a03000	 mov         r3, #0
  0006c	e5823000	 str         r3, [r2]

; 234  :         pDevice->nPowerCounter++;

  00070	e59d3010	 ldr         r3, [sp, #0x10]
  00074	e2833058	 add         r3, r3, #0x58
  00078	e5933000	 ldr         r3, [r3]
  0007c	e2832001	 add         r2, r3, #1
  00080	e59d3010	 ldr         r3, [sp, #0x10]
  00084	e2833058	 add         r3, r3, #0x58
  00088	e5832000	 str         r2, [r3]

; 235  :         }
; 236  :     else 

  0008c	ea000029	 b           |$LN4@SetHDQPowe|
  00090		 |$LN6@SetHDQPowe|

; 237  :         {
; 238  :         pDevice->nPowerCounter--;

  00090	e59d3010	 ldr         r3, [sp, #0x10]
  00094	e2833058	 add         r3, r3, #0x58
  00098	e5933000	 ldr         r3, [r3]
  0009c	e2432001	 sub         r2, r3, #1
  000a0	e59d3010	 ldr         r3, [sp, #0x10]
  000a4	e2833058	 add         r3, r3, #0x58
  000a8	e5832000	 str         r2, [r3]

; 239  :         if (pDevice->nPowerCounter == 0)

  000ac	e59d3010	 ldr         r3, [sp, #0x10]
  000b0	e2833058	 add         r3, r3, #0x58
  000b4	e5933000	 ldr         r3, [r3]
  000b8	e3530000	 cmp         r3, #0
  000bc	1a00001d	 bne         |$LN3@SetHDQPowe|

; 240  :             {
; 241  :             if (pDevice->hTimerEvent != NULL)

  000c0	e59d3010	 ldr         r3, [sp, #0x10]
  000c4	e283304c	 add         r3, r3, #0x4C
  000c8	e5933000	 ldr         r3, [r3]
  000cc	e3530000	 cmp         r3, #0
  000d0	0a000004	 beq         |$LN2@SetHDQPowe|

; 242  :                 {
; 243  :                 SetEvent(pDevice->hTimerEvent);

  000d4	e59d3010	 ldr         r3, [sp, #0x10]
  000d8	e283304c	 add         r3, r3, #0x4C
  000dc	e5930000	 ldr         r0, [r3]
  000e0	eb000000	 bl          SetEvent

; 244  :                 }
; 245  :             else

  000e4	ea000013	 b           |$LN1@SetHDQPowe|
  000e8		 |$LN2@SetHDQPowe|

; 246  :                 {
; 247  :                 //SetDevicePowerState(pDevice->hParent, D4, NULL);
; 248  :                 EnableDeviceClocks(pDevice->dwDeviceId,FALSE);

  000e8	e3a01000	 mov         r1, #0
  000ec	e59d3010	 ldr         r3, [sp, #0x10]
  000f0	e2833008	 add         r3, r3, #8
  000f4	e5930000	 ldr         r0, [r3]
  000f8	eb000000	 bl          EnableDeviceClocks

; 249  :                 pDevice->nPowerState = D4;

  000fc	e59d3010	 ldr         r3, [sp, #0x10]
  00100	e2832040	 add         r2, r3, #0x40
  00104	e3a03004	 mov         r3, #4
  00108	e5823000	 str         r3, [r2]

; 250  :                 DEBUGMSG(ZONE_FUNCTION, (L"HDQ SetDevicePowerState(pDevice->hParent, D4, NULL)\r\n"));

  0010c	e59f304c	 ldr         r3, [pc, #0x4C]
  00110	e5933440	 ldr         r3, [r3, #0x440]
  00114	e3130008	 tst         r3, #8
  00118	0a000004	 beq         |$LN9@SetHDQPowe|
  0011c	e59f0038	 ldr         r0, [pc, #0x38]
  00120	eb000000	 bl          NKDbgPrintfW
  00124	e3a03001	 mov         r3, #1
  00128	e58d3004	 str         r3, [sp, #4]
  0012c	ea000001	 b           |$LN10@SetHDQPowe|
  00130		 |$LN9@SetHDQPowe|
  00130	e3a03000	 mov         r3, #0
  00134	e58d3004	 str         r3, [sp, #4]
  00138		 |$LN10@SetHDQPowe|
  00138		 |$LN1@SetHDQPowe|
  00138		 |$LN3@SetHDQPowe|
  00138		 |$LN4@SetHDQPowe|

; 251  :                 }
; 252  :             }
; 253  :         }
; 254  :     
; 255  :     LeaveCriticalSection(&pDevice->cs);

  00138	e59d3010	 ldr         r3, [sp, #0x10]
  0013c	e2830024	 add         r0, r3, #0x24
  00140	eb000000	 bl          LeaveCriticalSection

; 256  :     return TRUE;

  00144	e3a03001	 mov         r3, #1
  00148	e58d3000	 str         r3, [sp]

; 257  : }

  0014c	e59d0000	 ldr         r0, [sp]
  00150	e28dd008	 add         sp, sp, #8
  00154	e89d6000	 ldmia       sp, {sp, lr}
  00158	e12fff1e	 bx          lr
  0015c		 |$LN14@SetHDQPowe|
  0015c		 |$LN15@SetHDQPowe|
  0015c	00000000	 DCD         |??_C@_1GM@GBBGDCNG@?$AAH?$AAD?$AAQ?$AA?5?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$CI?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?9@|
  00160		 |$LN16@SetHDQPowe|
  00160	00000000	 DCD         |dpCurSettings|
  00164		 |$M36738|

			 ENDP  ; |?SetHDQPower@@YAHPAUDevice_t@@W4_CEDEVICE_POWER_STATE@@@Z|, SetHDQPower

; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T36751| DCD	|$LN5@SetEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M36748|

; 236  : 	return EventModify(h,EVENT_SET);

  00010	e3a01003	 mov         r1, #3
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 237  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M36749|

			 ENDP  ; |SetEvent|

	EXPORT	|??_C@_1CO@KHBDIGHD@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JC@FHLAGIAG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@DDEPBKDF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@DLCGNLL@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|LocalFree|
	IMPORT	|InterruptDisable|
	IMPORT	|MmUnmapIoSpace|
	IMPORT	|DeleteCriticalSection|
	IMPORT	|CloseBusAccessHandle|
	IMPORT	|CloseHandle|
	IMPORT	|InterlockedDecrement|

  00020			 AREA	 |.pdata|, PDATA
|$T36767| DCD	|$LN22@HDQ_Deinit|
	DCD	0x4000b604
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\hdq\hdq.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@KHBDIGHD@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "D", 0x0, "e"
	DCB	0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, "r"
	DCB	0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "E", 0x0, "B"
	DCB	0x0, "U", 0x0, "G", 0x0, "C", 0x0, "H", 0x0, "K", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, "t", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| DCB "U", 0x0
	DCB	"n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JC@FHLAGIAG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "C"
	DCB	0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N", 0x0, "_"
	DCB	0x0, "T", 0x0, "I", 0x0, "_", 0x0, "V", 0x0, "1", 0x0, "\\"
	DCB	0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N"
	DCB	0x0, "_", 0x0, "T", 0x0, "I", 0x0, "\\", 0x0, "H", 0x0, "D"
	DCB	0x0, "Q", 0x0, "\\", 0x0, ".", 0x0, "\\", 0x0, "h", 0x0, "d"
	DCB	0x0, "q", 0x0, ".", 0x0, "c", 0x0, "p", 0x0, "p", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@DDEPBKDF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "D", 0x0, "e"
	DCB	0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, " "
	DCB	0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@DLCGNLL@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "D", 0x0, "e"
	DCB	0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00a74			 AREA	 |.text|, CODE, ARM

  00a74		 |?HDQ_Deinit@@YAHK@Z| PROC		; HDQ_Deinit

; 520  : {

  00a74		 |$LN22@HDQ_Deinit|
  00a74	e1a0c00d	 mov         r12, sp
  00a78	e92d0001	 stmdb       sp!, {r0}
  00a7c	e92d5000	 stmdb       sp!, {r12, lr}
  00a80	e24dd020	 sub         sp, sp, #0x20
  00a84		 |$M36764|

; 521  :     DEBUGMSG(ZONE_FUNCTION, (L"+HDQ_Deinit(0x%08x)\r\n", context));

  00a84	e59f32a4	 ldr         r3, [pc, #0x2A4]
  00a88	e5933440	 ldr         r3, [r3, #0x440]
  00a8c	e3130008	 tst         r3, #8
  00a90	0a000005	 beq         |$LN12@HDQ_Deinit|
  00a94	e59d1028	 ldr         r1, [sp, #0x28]
  00a98	e59f02a8	 ldr         r0, [pc, #0x2A8]
  00a9c	eb000000	 bl          NKDbgPrintfW
  00aa0	e3a03001	 mov         r3, #1
  00aa4	e58d300c	 str         r3, [sp, #0xC]
  00aa8	ea000001	 b           |$LN13@HDQ_Deinit|
  00aac		 |$LN12@HDQ_Deinit|
  00aac	e3a03000	 mov         r3, #0
  00ab0	e58d300c	 str         r3, [sp, #0xC]
  00ab4		 |$LN13@HDQ_Deinit|

; 522  :     
; 523  :     BOOL rc = FALSE;

  00ab4	e3a03000	 mov         r3, #0
  00ab8	e58d3004	 str         r3, [sp, #4]

; 524  :     Device_t *pDevice = (Device_t*)context;

  00abc	e59d3028	 ldr         r3, [sp, #0x28]
  00ac0	e58d3000	 str         r3, [sp]

; 525  : 
; 526  :     // Check if we get correct context
; 527  :     if (pDevice == NULL || pDevice->cookie != HDQ_DEVICE_COOKIE) 

  00ac4	e59d3000	 ldr         r3, [sp]
  00ac8	e3530000	 cmp         r3, #0
  00acc	0a000004	 beq         |$LN8@HDQ_Deinit|
  00ad0	e59d3000	 ldr         r3, [sp]
  00ad4	e5932000	 ldr         r2, [r3]
  00ad8	e59f3264	 ldr         r3, [pc, #0x264]
  00adc	e1520003	 cmp         r2, r3
  00ae0	0a000008	 beq         |$LN9@HDQ_Deinit|
  00ae4		 |$LN8@HDQ_Deinit|

; 528  :         {
; 529  :         DEBUGMSG (ZONE_ERROR, (L"ERROR: HDQ_Deinit: "
; 530  :             L"Incorrect context paramer\r\n"
; 531  :             ));

  00ae4	e59f0254	 ldr         r0, [pc, #0x254]
  00ae8	eb000000	 bl          NKDbgPrintfW
  00aec	e3a03001	 mov         r3, #1
  00af0	e58d3010	 str         r3, [sp, #0x10]
  00af4	ea000001	 b           |$LN15@HDQ_Deinit|
  00af8	e3a03000	 mov         r3, #0
  00afc	e58d3010	 str         r3, [sp, #0x10]
  00b00		 |$LN15@HDQ_Deinit|

; 532  :         goto cleanUp;

  00b00	ea000077	 b           |$LN7@HDQ_Deinit|
  00b04	ea000076	 b           |$cleanUp$36262|
  00b08		 |$LN9@HDQ_Deinit|

; 533  :         }
; 534  : 
; 535  :     InterlockedDecrement(&pDevice->instances);

  00b08	e59d3000	 ldr         r3, [sp]
  00b0c	e2830020	 add         r0, r3, #0x20
  00b10	eb000000	 bl          InterlockedDecrement

; 536  :     ASSERT(pDevice->instances == 0);

  00b14	e59d3000	 ldr         r3, [sp]
  00b18	e2833020	 add         r3, r3, #0x20
  00b1c	e5933000	 ldr         r3, [r3]
  00b20	e3530000	 cmp         r3, #0
  00b24	1a000002	 bne         |$LN16@HDQ_Deinit|
  00b28	e3a03001	 mov         r3, #1
  00b2c	e58d3014	 str         r3, [sp, #0x14]
  00b30	ea000007	 b           |$LN17@HDQ_Deinit|
  00b34		 |$LN16@HDQ_Deinit|
  00b34	e3a03f86	 mov         r3, #0x86, 30
  00b38	e59f21fc	 ldr         r2, [pc, #0x1FC]
  00b3c	e59f11f4	 ldr         r1, [pc, #0x1F4]
  00b40	e59f01ec	 ldr         r0, [pc, #0x1EC]
  00b44	eb000000	 bl          NKDbgPrintfW
  00b48	e6000010	 __debugbreak_ce
  00b4c	e3a03000	 mov         r3, #0
  00b50	e58d3014	 str         r3, [sp, #0x14]
  00b54		 |$LN17@HDQ_Deinit|

; 537  : 
; 538  :     // Disable interrupt.
; 539  :     CLRREG32(&pDevice->pHDQRegs->CTRL_STATUS, HDQ_CTRL_INTERRUPT_MASK);

  00b54	e59d3000	 ldr         r3, [sp]
  00b58	e2833018	 add         r3, r3, #0x18
  00b5c	e5933000	 ldr         r3, [r3]
  00b60	e283300c	 add         r3, r3, #0xC
  00b64	e5932000	 ldr         r2, [r3]
  00b68	e3e03040	 mvn         r3, #0x40
  00b6c	e0022003	 and         r2, r2, r3
  00b70	e59d3000	 ldr         r3, [sp]
  00b74	e2833018	 add         r3, r3, #0x18
  00b78	e5933000	 ldr         r3, [r3]
  00b7c	e283300c	 add         r3, r3, #0xC
  00b80	e5832000	 str         r2, [r3]

; 540  : 
; 541  :     // Clear the interrupt.
; 542  :     INREG32(&pDevice->pHDQRegs->INT_STATUS);

  00b84	e59d3000	 ldr         r3, [sp]
  00b88	e2833018	 add         r3, r3, #0x18
  00b8c	e5933000	 ldr         r3, [r3]
  00b90	e2833010	 add         r3, r3, #0x10
  00b94	e5933000	 ldr         r3, [r3]
  00b98	e58d3018	 str         r3, [sp, #0x18]

; 543  : 
; 544  :     // stop interrupt thread
; 545  :     if (pDevice->hTimerThread != NULL)

  00b9c	e59d3000	 ldr         r3, [sp]
  00ba0	e2833048	 add         r3, r3, #0x48
  00ba4	e5933000	 ldr         r3, [r3]
  00ba8	e3530000	 cmp         r3, #0
  00bac	0a000014	 beq         |$LN6@HDQ_Deinit|

; 546  :         {
; 547  :         pDevice->bExitThread = TRUE;

  00bb0	e59d3000	 ldr         r3, [sp]
  00bb4	e2832054	 add         r2, r3, #0x54
  00bb8	e3a03001	 mov         r3, #1
  00bbc	e5823000	 str         r3, [r2]

; 548  :         SetEvent(pDevice->hTimerEvent);

  00bc0	e59d3000	 ldr         r3, [sp]
  00bc4	e283304c	 add         r3, r3, #0x4C
  00bc8	e5930000	 ldr         r0, [r3]
  00bcc	eb000000	 bl          SetEvent

; 549  :         WaitForSingleObject(pDevice->hTimerThread, INFINITE);

  00bd0	e3e01000	 mvn         r1, #0
  00bd4	e59d3000	 ldr         r3, [sp]
  00bd8	e2833048	 add         r3, r3, #0x48
  00bdc	e5930000	 ldr         r0, [r3]
  00be0	eb000000	 bl          WaitForSingleObject

; 550  :         CloseHandle(pDevice->hTimerThread);

  00be4	e59d3000	 ldr         r3, [sp]
  00be8	e2833048	 add         r3, r3, #0x48
  00bec	e5930000	 ldr         r0, [r3]
  00bf0	eb000000	 bl          CloseHandle

; 551  :         pDevice->hTimerThread = NULL;

  00bf4	e59d3000	 ldr         r3, [sp]
  00bf8	e2832048	 add         r2, r3, #0x48
  00bfc	e3a03000	 mov         r3, #0
  00c00	e5823000	 str         r3, [r2]
  00c04		 |$LN6@HDQ_Deinit|

; 552  :         }
; 553  : 
; 554  :     if (pDevice->hTimerEvent != NULL)

  00c04	e59d3000	 ldr         r3, [sp]
  00c08	e283304c	 add         r3, r3, #0x4C
  00c0c	e5933000	 ldr         r3, [r3]
  00c10	e3530000	 cmp         r3, #0
  00c14	0a000003	 beq         |$LN5@HDQ_Deinit|

; 555  :         {
; 556  :         CloseHandle(pDevice->hTimerEvent);

  00c18	e59d3000	 ldr         r3, [sp]
  00c1c	e283304c	 add         r3, r3, #0x4C
  00c20	e5930000	 ldr         r0, [r3]
  00c24	eb000000	 bl          CloseHandle
  00c28		 |$LN5@HDQ_Deinit|

; 557  :         }
; 558  : 
; 559  :     // Set hardware to D4 and close parent bus driver
; 560  :     if (pDevice->hParent != NULL) 

  00c28	e59d3000	 ldr         r3, [sp]
  00c2c	e283301c	 add         r3, r3, #0x1C
  00c30	e5933000	 ldr         r3, [r3]
  00c34	e3530000	 cmp         r3, #0
  00c38	0a000006	 beq         |$LN4@HDQ_Deinit|

; 561  :         {
; 562  :         SetHDQPower(pDevice, D4);

  00c3c	e3a01004	 mov         r1, #4
  00c40	e59d0000	 ldr         r0, [sp]
  00c44	eb000000	 bl          |?SetHDQPower@@YAHPAUDevice_t@@W4_CEDEVICE_POWER_STATE@@@Z|

; 563  :         CloseBusAccessHandle(pDevice->hParent);

  00c48	e59d3000	 ldr         r3, [sp]
  00c4c	e283301c	 add         r3, r3, #0x1C
  00c50	e5930000	 ldr         r0, [r3]
  00c54	eb000000	 bl          CloseBusAccessHandle
  00c58		 |$LN4@HDQ_Deinit|

; 564  :         }
; 565  : 
; 566  :     // Delete critical section
; 567  :     DeleteCriticalSection(&pDevice->cs);

  00c58	e59d3000	 ldr         r3, [sp]
  00c5c	e2830024	 add         r0, r3, #0x24
  00c60	eb000000	 bl          DeleteCriticalSection

; 568  : 
; 569  :     // Unmap HDQ_1Wire controller registers
; 570  :     if (pDevice->pHDQRegs != NULL) 

  00c64	e59d3000	 ldr         r3, [sp]
  00c68	e2833018	 add         r3, r3, #0x18
  00c6c	e5933000	 ldr         r3, [r3]
  00c70	e3530000	 cmp         r3, #0
  00c74	0a000004	 beq         |$LN3@HDQ_Deinit|

; 571  :         {
; 572  :         MmUnmapIoSpace((VOID*)pDevice->pHDQRegs, sizeof(OMAP_HDQ_1WIRE_REGS));

  00c78	e3a0101c	 mov         r1, #0x1C
  00c7c	e59d3000	 ldr         r3, [sp]
  00c80	e2833018	 add         r3, r3, #0x18
  00c84	e5930000	 ldr         r0, [r3]
  00c88	eb000000	 bl          MmUnmapIoSpace
  00c8c		 |$LN3@HDQ_Deinit|

; 573  :         }
; 574  : 
; 575  :     // Release HDQ_1Wire controller interrupt
; 576  :     if (pDevice->sysIntr != 0) 

  00c8c	e59d3000	 ldr         r3, [sp]
  00c90	e2833038	 add         r3, r3, #0x38
  00c94	e5933000	 ldr         r3, [r3]
  00c98	e3530000	 cmp         r3, #0
  00c9c	0a000003	 beq         |$LN2@HDQ_Deinit|

; 577  :         {
; 578  :         InterruptDisable(pDevice->sysIntr);

  00ca0	e59d3000	 ldr         r3, [sp]
  00ca4	e2833038	 add         r3, r3, #0x38
  00ca8	e5930000	 ldr         r0, [r3]
  00cac	eb000000	 bl          InterruptDisable
  00cb0		 |$LN2@HDQ_Deinit|

; 579  :         }
; 580  : 
; 581  :     // Close interrupt handler
; 582  :     if (pDevice->hIntrEvent != NULL) CloseHandle(pDevice->hIntrEvent);

  00cb0	e59d3000	 ldr         r3, [sp]
  00cb4	e283303c	 add         r3, r3, #0x3C
  00cb8	e5933000	 ldr         r3, [r3]
  00cbc	e3530000	 cmp         r3, #0
  00cc0	0a000003	 beq         |$LN1@HDQ_Deinit|
  00cc4	e59d3000	 ldr         r3, [sp]
  00cc8	e283303c	 add         r3, r3, #0x3C
  00ccc	e5930000	 ldr         r0, [r3]
  00cd0	eb000000	 bl          CloseHandle
  00cd4		 |$LN1@HDQ_Deinit|

; 583  : 
; 584  :     // Free device structure
; 585  :     LocalFree(pDevice);

  00cd4	e59d0000	 ldr         r0, [sp]
  00cd8	eb000000	 bl          LocalFree

; 586  : 
; 587  :     // Done
; 588  :     rc = TRUE;

  00cdc	e3a03001	 mov         r3, #1
  00ce0	e58d3004	 str         r3, [sp, #4]
  00ce4		 |$LN7@HDQ_Deinit|
  00ce4		 |$cleanUp$36262|

; 589  : 
; 590  : cleanUp:
; 591  :     DEBUGMSG(ZONE_FUNCTION, (L"-HDQ_Deinit(rc = %d)\r\n", rc));

  00ce4	e59f3044	 ldr         r3, [pc, #0x44]
  00ce8	e5933440	 ldr         r3, [r3, #0x440]
  00cec	e3130008	 tst         r3, #8
  00cf0	0a000005	 beq         |$LN18@HDQ_Deinit|
  00cf4	e59d1004	 ldr         r1, [sp, #4]
  00cf8	e59f002c	 ldr         r0, [pc, #0x2C]
  00cfc	eb000000	 bl          NKDbgPrintfW
  00d00	e3a03001	 mov         r3, #1
  00d04	e58d301c	 str         r3, [sp, #0x1C]
  00d08	ea000001	 b           |$LN19@HDQ_Deinit|
  00d0c		 |$LN18@HDQ_Deinit|
  00d0c	e3a03000	 mov         r3, #0
  00d10	e58d301c	 str         r3, [sp, #0x1C]
  00d14		 |$LN19@HDQ_Deinit|

; 592  :     return rc;

  00d14	e59d3004	 ldr         r3, [sp, #4]
  00d18	e58d3008	 str         r3, [sp, #8]

; 593  : }

  00d1c	e59d0008	 ldr         r0, [sp, #8]
  00d20	e28dd020	 add         sp, sp, #0x20
  00d24	e89d6000	 ldmia       sp, {sp, lr}
  00d28	e12fff1e	 bx          lr
  00d2c		 |$LN23@HDQ_Deinit|
  00d2c		 |$LN24@HDQ_Deinit|
  00d2c	00000000	 DCD         |??_C@_1CO@KHBDIGHD@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00d30		 |$LN25@HDQ_Deinit|
  00d30	00000000	 DCD         |dpCurSettings|
  00d34		 |$LN26@HDQ_Deinit|
  00d34	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  00d38		 |$LN27@HDQ_Deinit|
  00d38	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  00d3c		 |$LN28@HDQ_Deinit|
  00d3c	00000000	 DCD         |??_C@_1JC@FHLAGIAG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  00d40		 |$LN29@HDQ_Deinit|
  00d40	00000000	 DCD         |??_C@_1FO@DDEPBKDF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn@|
  00d44		 |$LN30@HDQ_Deinit|
  00d44	68647144	 DCD         0x68647144
  00d48		 |$LN31@HDQ_Deinit|
  00d48	00000000	 DCD         |??_C@_1CM@DLCGNLL@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00d4c		 |$M36765|

			 ENDP  ; |?HDQ_Deinit@@YAHK@Z|, HDQ_Deinit

	EXPORT	|??_C@_1DI@IGCBIFKF@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AAc?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@NLGIHAC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$CB?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@LONKENOC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$CB?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@HLIKMCBC@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@| [ DATA ] ; `string'
	EXPORT	|?HDQ_Open@@YAKKKK@Z|			; HDQ_Open
	IMPORT	|GetLastError|

  00028			 AREA	 |.pdata|, PDATA
|$T36790| DCD	|$LN18@HDQ_Open|
	DCD	0x40006b04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@IGCBIFKF@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AAc?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "O", 0x0, "p"
	DCB	0x0, "e", 0x0, "n", 0x0, "(", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, "=", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@NLGIHAC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$CB?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, "!", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "O", 0x0, "p"
	DCB	0x0, "e", 0x0, "n", 0x0, ":", 0x0, " ", 0x0, "U", 0x0, "n"
	DCB	0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "n", 0x0, "c"
	DCB	0x0, "e", 0x0, " ", 0x0, "(", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, ")", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@LONKENOC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$CB?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, "!", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "O", 0x0, "p"
	DCB	0x0, "e", 0x0, "n", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "p", 0x0, "a"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "r", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@HLIKMCBC@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@| DCB "+"
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "O", 0x0, "p"
	DCB	0x0, "e", 0x0, "n", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ","
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00d4c			 AREA	 |.text|, CODE, ARM

  00d4c		 |?HDQ_Open@@YAKKKK@Z| PROC		; HDQ_Open

; 608  : {

  00d4c		 |$LN18@HDQ_Open|
  00d4c	e1a0c00d	 mov         r12, sp
  00d50	e92d0007	 stmdb       sp!, {r0 - r2}
  00d54	e92d5000	 stmdb       sp!, {r12, lr}
  00d58	e24dd024	 sub         sp, sp, #0x24
  00d5c		 |$M36787|

; 609  :     Instance_t *pInstance = NULL;

  00d5c	e3a03000	 mov         r3, #0
  00d60	e58d3004	 str         r3, [sp, #4]

; 610  :     Device_t *pDevice = (Device_t *)context;

  00d64	e59d302c	 ldr         r3, [sp, #0x2C]
  00d68	e58d3000	 str         r3, [sp]

; 611  : 
; 612  :     UNREFERENCED_PARAMETER(shareMode);
; 613  :     UNREFERENCED_PARAMETER(accessCode);
; 614  : 
; 615  :     DEBUGMSG(ZONE_FUNCTION, (L"+HDQ_Open(0x%08x, 0x%08x, 0x%08x)\r\n", 
; 616  :         context, accessCode, shareMode
; 617  :         ));

  00d6c	e59f316c	 ldr         r3, [pc, #0x16C]
  00d70	e5933440	 ldr         r3, [r3, #0x440]
  00d74	e3130008	 tst         r3, #8
  00d78	0a000007	 beq         |$LN8@HDQ_Open|
  00d7c	e59d3034	 ldr         r3, [sp, #0x34]
  00d80	e59d2030	 ldr         r2, [sp, #0x30]
  00d84	e59d102c	 ldr         r1, [sp, #0x2C]
  00d88	e59f0164	 ldr         r0, [pc, #0x164]
  00d8c	eb000000	 bl          NKDbgPrintfW
  00d90	e3a03001	 mov         r3, #1
  00d94	e58d300c	 str         r3, [sp, #0xC]
  00d98	ea000001	 b           |$LN9@HDQ_Open|
  00d9c		 |$LN8@HDQ_Open|
  00d9c	e3a03000	 mov         r3, #0
  00da0	e58d300c	 str         r3, [sp, #0xC]
  00da4		 |$LN9@HDQ_Open|

; 618  : 
; 619  :     // Check if we get correct context
; 620  :     if (pDevice == NULL || pDevice->cookie != HDQ_DEVICE_COOKIE) 

  00da4	e59d3000	 ldr         r3, [sp]
  00da8	e3530000	 cmp         r3, #0
  00dac	0a000004	 beq         |$LN4@HDQ_Open|
  00db0	e59d3000	 ldr         r3, [sp]
  00db4	e5932000	 ldr         r2, [r3]
  00db8	e59f3130	 ldr         r3, [pc, #0x130]
  00dbc	e1520003	 cmp         r2, r3
  00dc0	0a00000c	 beq         |$LN5@HDQ_Open|
  00dc4		 |$LN4@HDQ_Open|

; 621  :         {
; 622  :         DEBUGMSG(ZONE_ERROR && ZONE_HDQ, (L"ERROR! HDQ_Open: "
; 623  :             L"Incorrect context paramer\r\n"
; 624  :             ));

  00dc4	e59f3114	 ldr         r3, [pc, #0x114]
  00dc8	e5933440	 ldr         r3, [r3, #0x440]
  00dcc	e3130902	 tst         r3, #2, 18
  00dd0	0a000004	 beq         |$LN10@HDQ_Open|
  00dd4	e59f0110	 ldr         r0, [pc, #0x110]
  00dd8	eb000000	 bl          NKDbgPrintfW
  00ddc	e3a03001	 mov         r3, #1
  00de0	e58d3010	 str         r3, [sp, #0x10]
  00de4	ea000001	 b           |$LN11@HDQ_Open|
  00de8		 |$LN10@HDQ_Open|
  00de8	e3a03000	 mov         r3, #0
  00dec	e58d3010	 str         r3, [sp, #0x10]
  00df0		 |$LN11@HDQ_Open|

; 625  :         goto cleanUp;

  00df0	ea000027	 b           |$LN3@HDQ_Open|
  00df4	ea000026	 b           |$cleanUp$36297|
  00df8		 |$LN5@HDQ_Open|

; 626  :         }
; 627  : 
; 628  :     pInstance = (Instance_t*)LocalAlloc(LPTR, sizeof(Instance_t));

  00df8	e3a0100c	 mov         r1, #0xC
  00dfc	e3a00040	 mov         r0, #0x40
  00e00	eb000000	 bl          LocalAlloc
  00e04	e58d0014	 str         r0, [sp, #0x14]
  00e08	e59d3014	 ldr         r3, [sp, #0x14]
  00e0c	e58d3004	 str         r3, [sp, #4]

; 629  :     if (pInstance == NULL)

  00e10	e59d3004	 ldr         r3, [sp, #4]
  00e14	e3530000	 cmp         r3, #0
  00e18	1a00000f	 bne         |$LN2@HDQ_Open|

; 630  :         {
; 631  :         DEBUGMSG(ZONE_ERROR && ZONE_HDQ, (L"ERROR! HDQ_Open: "
; 632  :             L"Unable to allocate instance (err=0x%08X)",
; 633  :             GetLastError()
; 634  :             ));

  00e1c	e59f30bc	 ldr         r3, [pc, #0xBC]
  00e20	e5933440	 ldr         r3, [r3, #0x440]
  00e24	e3130902	 tst         r3, #2, 18
  00e28	0a000007	 beq         |$LN12@HDQ_Open|
  00e2c	eb000000	 bl          GetLastError
  00e30	e58d0018	 str         r0, [sp, #0x18]
  00e34	e59d1018	 ldr         r1, [sp, #0x18]
  00e38	e59f00a8	 ldr         r0, [pc, #0xA8]
  00e3c	eb000000	 bl          NKDbgPrintfW
  00e40	e3a03001	 mov         r3, #1
  00e44	e58d301c	 str         r3, [sp, #0x1C]
  00e48	ea000001	 b           |$LN13@HDQ_Open|
  00e4c		 |$LN12@HDQ_Open|
  00e4c	e3a03000	 mov         r3, #0
  00e50	e58d301c	 str         r3, [sp, #0x1C]
  00e54		 |$LN13@HDQ_Open|

; 635  :         goto cleanUp;

  00e54	ea00000e	 b           |$LN1@HDQ_Open|
  00e58	ea00000d	 b           |$cleanUp$36297|
  00e5c		 |$LN2@HDQ_Open|

; 636  :         }
; 637  : 
; 638  :     // initialize variable
; 639  :     pInstance->cookie = HDQ_INSTANCE_COOKIE;

  00e5c	e59d2004	 ldr         r2, [sp, #4]
  00e60	e59f307c	 ldr         r3, [pc, #0x7C]
  00e64	e5823000	 str         r3, [r2]

; 640  :     pInstance->mode = HDQ_CTRL_INTERRUPT_MASK;

  00e68	e59d3004	 ldr         r3, [sp, #4]
  00e6c	e2832004	 add         r2, r3, #4
  00e70	e3a03040	 mov         r3, #0x40
  00e74	e5823000	 str         r3, [r2]

; 641  :     pInstance->pDevice = pDevice;

  00e78	e59d3004	 ldr         r3, [sp, #4]
  00e7c	e2832008	 add         r2, r3, #8
  00e80	e59d3000	 ldr         r3, [sp]
  00e84	e5823000	 str         r3, [r2]

; 642  : 
; 643  :     // increment reference count
; 644  :     InterlockedIncrement(&pDevice->instances);

  00e88	e59d3000	 ldr         r3, [sp]
  00e8c	e2830020	 add         r0, r3, #0x20
  00e90	eb000000	 bl          InterlockedIncrement
  00e94		 |$LN1@HDQ_Open|
  00e94		 |$LN3@HDQ_Open|
  00e94		 |$cleanUp$36297|

; 645  : 
; 646  : cleanUp:
; 647  :     DEBUGMSG(ZONE_FUNCTION, (L"-HDQ_Open(context=0x%08X)\r\n", context));

  00e94	e59f3044	 ldr         r3, [pc, #0x44]
  00e98	e5933440	 ldr         r3, [r3, #0x440]
  00e9c	e3130008	 tst         r3, #8
  00ea0	0a000005	 beq         |$LN14@HDQ_Open|
  00ea4	e59d102c	 ldr         r1, [sp, #0x2C]
  00ea8	e59f002c	 ldr         r0, [pc, #0x2C]
  00eac	eb000000	 bl          NKDbgPrintfW
  00eb0	e3a03001	 mov         r3, #1
  00eb4	e58d3020	 str         r3, [sp, #0x20]
  00eb8	ea000001	 b           |$LN15@HDQ_Open|
  00ebc		 |$LN14@HDQ_Open|
  00ebc	e3a03000	 mov         r3, #0
  00ec0	e58d3020	 str         r3, [sp, #0x20]
  00ec4		 |$LN15@HDQ_Open|

; 648  :     return (DWORD)pInstance;

  00ec4	e59d3004	 ldr         r3, [sp, #4]
  00ec8	e58d3008	 str         r3, [sp, #8]

; 649  : }

  00ecc	e59d0008	 ldr         r0, [sp, #8]
  00ed0	e28dd024	 add         sp, sp, #0x24
  00ed4	e89d6000	 ldmia       sp, {sp, lr}
  00ed8	e12fff1e	 bx          lr
  00edc		 |$LN19@HDQ_Open|
  00edc		 |$LN20@HDQ_Open|
  00edc	00000000	 DCD         |??_C@_1DI@IGCBIFKF@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AAc?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00ee0		 |$LN21@HDQ_Open|
  00ee0	00000000	 DCD         |dpCurSettings|
  00ee4		 |$LN22@HDQ_Open|
  00ee4	68647149	 DCD         0x68647149
  00ee8		 |$LN23@HDQ_Open|
  00ee8	00000000	 DCD         |??_C@_1HE@NLGIHAC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$CB?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc@|
  00eec		 |$LN24@HDQ_Open|
  00eec	00000000	 DCD         |??_C@_1FK@LONKENOC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$CB?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe@|
  00ef0		 |$LN25@HDQ_Open|
  00ef0	68647144	 DCD         0x68647144
  00ef4		 |$LN26@HDQ_Open|
  00ef4	00000000	 DCD         |??_C@_1EI@HLIKMCBC@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@|
  00ef8		 |$M36788|

			 ENDP  ; |?HDQ_Open@@YAKKKK@Z|, HDQ_Open

	EXPORT	|?ContextRestore@@YAXPAUDevice_t@@@Z|	; ContextRestore

  00030			 AREA	 |.pdata|, PDATA
|$T36803| DCD	|$LN5@ContextRes|
	DCD	0x40002f04
; Function compile flags: /Odtp

  00ef8			 AREA	 |.text|, CODE, ARM

  00ef8		 |?ContextRestore@@YAXPAUDevice_t@@@Z| PROC ; ContextRestore

; 653  : {

  00ef8		 |$LN5@ContextRes|
  00ef8	e1a0c00d	 mov         r12, sp
  00efc	e92d0001	 stmdb       sp!, {r0}
  00f00	e92d5000	 stmdb       sp!, {r12, lr}
  00f04	e24dd004	 sub         sp, sp, #4
  00f08		 |$M36800|

; 654  :     // Enable the clock.
; 655  :     SETREG32(&pDevice->pHDQRegs->CTRL_STATUS, HDQ_CTRL_CLOCK_ENABLE);

  00f08	e59d300c	 ldr         r3, [sp, #0xC]
  00f0c	e2833018	 add         r3, r3, #0x18
  00f10	e5933000	 ldr         r3, [r3]
  00f14	e283300c	 add         r3, r3, #0xC
  00f18	e5933000	 ldr         r3, [r3]
  00f1c	e3832020	 orr         r2, r3, #0x20
  00f20	e59d300c	 ldr         r3, [sp, #0xC]
  00f24	e2833018	 add         r3, r3, #0x18
  00f28	e5933000	 ldr         r3, [r3]
  00f2c	e283300c	 add         r3, r3, #0xC
  00f30	e5832000	 str         r2, [r3]

; 656  :     
; 657  :     // Set to HDQ mode as default
; 658  :     CLRREG32(&pDevice->pHDQRegs->CTRL_STATUS, HDQ_MODE_1WIRE);

  00f34	e59d300c	 ldr         r3, [sp, #0xC]
  00f38	e2833018	 add         r3, r3, #0x18
  00f3c	e5933000	 ldr         r3, [r3]
  00f40	e283300c	 add         r3, r3, #0xC
  00f44	e5932000	 ldr         r2, [r3]
  00f48	e3e03001	 mvn         r3, #1
  00f4c	e0022003	 and         r2, r2, r3
  00f50	e59d300c	 ldr         r3, [sp, #0xC]
  00f54	e2833018	 add         r3, r3, #0x18
  00f58	e5933000	 ldr         r3, [r3]
  00f5c	e283300c	 add         r3, r3, #0xC
  00f60	e5832000	 str         r2, [r3]

; 659  :     
; 660  :     // Clear the interrupt
; 661  :     INREG32(&pDevice->pHDQRegs->INT_STATUS);

  00f64	e59d300c	 ldr         r3, [sp, #0xC]
  00f68	e2833018	 add         r3, r3, #0x18
  00f6c	e5933000	 ldr         r3, [r3]
  00f70	e2833010	 add         r3, r3, #0x10
  00f74	e5933000	 ldr         r3, [r3]
  00f78	e58d3000	 str         r3, [sp]

; 662  :     
; 663  :     // Enable interrupt
; 664  :     SETREG32(&pDevice->pHDQRegs->CTRL_STATUS, HDQ_CTRL_INTERRUPT_MASK);

  00f7c	e59d300c	 ldr         r3, [sp, #0xC]
  00f80	e2833018	 add         r3, r3, #0x18
  00f84	e5933000	 ldr         r3, [r3]
  00f88	e283300c	 add         r3, r3, #0xC
  00f8c	e5933000	 ldr         r3, [r3]
  00f90	e3832040	 orr         r2, r3, #0x40
  00f94	e59d300c	 ldr         r3, [sp, #0xC]
  00f98	e2833018	 add         r3, r3, #0x18
  00f9c	e5933000	 ldr         r3, [r3]
  00fa0	e283300c	 add         r3, r3, #0xC
  00fa4	e5832000	 str         r2, [r3]

; 665  : }

  00fa8	e28dd004	 add         sp, sp, #4
  00fac	e89d6000	 ldmia       sp, {sp, lr}
  00fb0	e12fff1e	 bx          lr
  00fb4		 |$M36801|

			 ENDP  ; |?ContextRestore@@YAXPAUDevice_t@@@Z|, ContextRestore

	EXPORT	|??_C@_1CM@EGDDMOKD@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@PMODCPPC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$CB?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@OLPACAGM@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?HDQ_Close@@YAHK@Z|			; HDQ_Close

  00038			 AREA	 |.pdata|, PDATA
|$T36819| DCD	|$LN21@HDQ_Close|
	DCD	0x40007504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@EGDDMOKD@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "C", 0x0, "l"
	DCB	0x0, "o", 0x0, "s", 0x0, "e", 0x0, "(", 0x0, "r", 0x0, "c"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@PMODCPPC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$CB?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, "!", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "C", 0x0, "l"
	DCB	0x0, "o", 0x0, "s", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "p"
	DCB	0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "r"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@OLPACAGM@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "C", 0x0, "l"
	DCB	0x0, "o", 0x0, "s", 0x0, "e", 0x0, "(", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  00fb4			 AREA	 |.text|, CODE, ARM

  00fb4		 |?HDQ_Close@@YAHK@Z| PROC		; HDQ_Close

; 677  : {

  00fb4		 |$LN21@HDQ_Close|
  00fb4	e1a0c00d	 mov         r12, sp
  00fb8	e92d0001	 stmdb       sp!, {r0}
  00fbc	e92d5000	 stmdb       sp!, {r12, lr}
  00fc0	e24dd024	 sub         sp, sp, #0x24
  00fc4		 |$M36816|

; 678  :     BOOL rc = FALSE;

  00fc4	e3a03000	 mov         r3, #0
  00fc8	e58d3004	 str         r3, [sp, #4]

; 679  :     Device_t *pDevice;
; 680  :     Instance_t *pInstance = (Instance_t*)context;

  00fcc	e59d302c	 ldr         r3, [sp, #0x2C]
  00fd0	e58d3008	 str         r3, [sp, #8]

; 681  :     
; 682  :     DEBUGMSG(ZONE_FUNCTION, (L"+HDQ_Close(0x%08x)\r\n", context));

  00fd4	e59f318c	 ldr         r3, [pc, #0x18C]
  00fd8	e5933440	 ldr         r3, [r3, #0x440]
  00fdc	e3130008	 tst         r3, #8
  00fe0	0a000005	 beq         |$LN9@HDQ_Close|
  00fe4	e59d102c	 ldr         r1, [sp, #0x2C]
  00fe8	e59f0194	 ldr         r0, [pc, #0x194]
  00fec	eb000000	 bl          NKDbgPrintfW
  00ff0	e3a03001	 mov         r3, #1
  00ff4	e58d3010	 str         r3, [sp, #0x10]
  00ff8	ea000001	 b           |$LN10@HDQ_Close|
  00ffc		 |$LN9@HDQ_Close|
  00ffc	e3a03000	 mov         r3, #0
  01000	e58d3010	 str         r3, [sp, #0x10]
  01004		 |$LN10@HDQ_Close|

; 683  : 
; 684  :     // Check if we get correct context
; 685  :     if (pInstance == NULL || pInstance->cookie != HDQ_INSTANCE_COOKIE) 

  01004	e59d3008	 ldr         r3, [sp, #8]
  01008	e3530000	 cmp         r3, #0
  0100c	0a000004	 beq         |$LN5@HDQ_Close|
  01010	e59d3008	 ldr         r3, [sp, #8]
  01014	e5932000	 ldr         r2, [r3]
  01018	e59f3160	 ldr         r3, [pc, #0x160]
  0101c	e1520003	 cmp         r2, r3
  01020	0a00000c	 beq         |$LN6@HDQ_Close|
  01024		 |$LN5@HDQ_Close|

; 686  :         {
; 687  :         DEBUGMSG(ZONE_ERROR && ZONE_HDQ, (L"ERROR! HDQ_Close: "
; 688  :             L"Incorrect context paramer\r\n"
; 689  :         ));

  01024	e59f313c	 ldr         r3, [pc, #0x13C]
  01028	e5933440	 ldr         r3, [r3, #0x440]
  0102c	e3130902	 tst         r3, #2, 18
  01030	0a000004	 beq         |$LN11@HDQ_Close|
  01034	e59f013c	 ldr         r0, [pc, #0x13C]
  01038	eb000000	 bl          NKDbgPrintfW
  0103c	e3a03001	 mov         r3, #1
  01040	e58d3014	 str         r3, [sp, #0x14]
  01044	ea000001	 b           |$LN12@HDQ_Close|
  01048		 |$LN11@HDQ_Close|
  01048	e3a03000	 mov         r3, #0
  0104c	e58d3014	 str         r3, [sp, #0x14]
  01050		 |$LN12@HDQ_Close|

; 690  :         goto cleanUp;

  01050	ea000031	 b           |$LN4@HDQ_Close|
  01054	ea000030	 b           |$cleanUp$36334|
  01058		 |$LN6@HDQ_Close|

; 691  :         }
; 692  : 
; 693  :     pDevice = pInstance->pDevice;

  01058	e59d3008	 ldr         r3, [sp, #8]
  0105c	e2833008	 add         r3, r3, #8
  01060	e5933000	 ldr         r3, [r3]
  01064	e58d3000	 str         r3, [sp]

; 694  :     if (pDevice == NULL || pDevice->cookie != HDQ_DEVICE_COOKIE) 

  01068	e59d3000	 ldr         r3, [sp]
  0106c	e3530000	 cmp         r3, #0
  01070	0a000004	 beq         |$LN2@HDQ_Close|
  01074	e59d3000	 ldr         r3, [sp]
  01078	e5932000	 ldr         r2, [r3]
  0107c	e59f30f8	 ldr         r3, [pc, #0xF8]
  01080	e1520003	 cmp         r2, r3
  01084	0a00000c	 beq         |$LN3@HDQ_Close|
  01088		 |$LN2@HDQ_Close|

; 695  :         {
; 696  :         DEBUGMSG(ZONE_ERROR && ZONE_HDQ, (L"ERROR! HDQ_Close: "
; 697  :             L"Incorrect context paramer\r\n"
; 698  :         ));

  01088	e59f30d8	 ldr         r3, [pc, #0xD8]
  0108c	e5933440	 ldr         r3, [r3, #0x440]
  01090	e3130902	 tst         r3, #2, 18
  01094	0a000004	 beq         |$LN13@HDQ_Close|
  01098	e59f00d8	 ldr         r0, [pc, #0xD8]
  0109c	eb000000	 bl          NKDbgPrintfW
  010a0	e3a03001	 mov         r3, #1
  010a4	e58d3018	 str         r3, [sp, #0x18]
  010a8	ea000001	 b           |$LN14@HDQ_Close|
  010ac		 |$LN13@HDQ_Close|
  010ac	e3a03000	 mov         r3, #0
  010b0	e58d3018	 str         r3, [sp, #0x18]
  010b4		 |$LN14@HDQ_Close|

; 699  :         goto cleanUp;

  010b4	ea000018	 b           |$LN1@HDQ_Close|
  010b8	ea000017	 b           |$cleanUp$36334|
  010bc		 |$LN3@HDQ_Close|

; 700  :         }
; 701  : 
; 702  :     InterlockedDecrement(&pDevice->instances);

  010bc	e59d3000	 ldr         r3, [sp]
  010c0	e2830020	 add         r0, r3, #0x20
  010c4	eb000000	 bl          InterlockedDecrement

; 703  :     ASSERT(pDevice->instances > 0);

  010c8	e59d3000	 ldr         r3, [sp]
  010cc	e2833020	 add         r3, r3, #0x20
  010d0	e5933000	 ldr         r3, [r3]
  010d4	e3530000	 cmp         r3, #0
  010d8	da000002	 ble         |$LN15@HDQ_Close|
  010dc	e3a03001	 mov         r3, #1
  010e0	e58d301c	 str         r3, [sp, #0x1C]
  010e4	ea000008	 b           |$LN16@HDQ_Close|
  010e8		 |$LN15@HDQ_Close|
  010e8	e3a03c02	 mov         r3, #2, 24
  010ec	e38330bf	 orr         r3, r3, #0xBF
  010f0	e59f207c	 ldr         r2, [pc, #0x7C]
  010f4	e59f1074	 ldr         r1, [pc, #0x74]
  010f8	e59f006c	 ldr         r0, [pc, #0x6C]
  010fc	eb000000	 bl          NKDbgPrintfW
  01100	e6000010	 __debugbreak_ce
  01104	e3a03000	 mov         r3, #0
  01108	e58d301c	 str         r3, [sp, #0x1C]
  0110c		 |$LN16@HDQ_Close|

; 704  :     LocalFree(pInstance);

  0110c	e59d0008	 ldr         r0, [sp, #8]
  01110	eb000000	 bl          LocalFree

; 705  : 
; 706  :     // Done
; 707  :     rc = TRUE;

  01114	e3a03001	 mov         r3, #1
  01118	e58d3004	 str         r3, [sp, #4]
  0111c		 |$LN1@HDQ_Close|
  0111c		 |$LN4@HDQ_Close|
  0111c		 |$cleanUp$36334|

; 708  : 
; 709  : cleanUp:
; 710  :     DEBUGMSG(ZONE_FUNCTION, (L"-HDQ_Close(rc = %d)\r\n", rc));

  0111c	e59f3044	 ldr         r3, [pc, #0x44]
  01120	e5933440	 ldr         r3, [r3, #0x440]
  01124	e3130008	 tst         r3, #8
  01128	0a000005	 beq         |$LN17@HDQ_Close|
  0112c	e59d1004	 ldr         r1, [sp, #4]
  01130	e59f002c	 ldr         r0, [pc, #0x2C]
  01134	eb000000	 bl          NKDbgPrintfW
  01138	e3a03001	 mov         r3, #1
  0113c	e58d3020	 str         r3, [sp, #0x20]
  01140	ea000001	 b           |$LN18@HDQ_Close|
  01144		 |$LN17@HDQ_Close|
  01144	e3a03000	 mov         r3, #0
  01148	e58d3020	 str         r3, [sp, #0x20]
  0114c		 |$LN18@HDQ_Close|

; 711  :     return rc;

  0114c	e59d3004	 ldr         r3, [sp, #4]
  01150	e58d300c	 str         r3, [sp, #0xC]

; 712  : }

  01154	e59d000c	 ldr         r0, [sp, #0xC]
  01158	e28dd024	 add         sp, sp, #0x24
  0115c	e89d6000	 ldmia       sp, {sp, lr}
  01160	e12fff1e	 bx          lr
  01164		 |$LN22@HDQ_Close|
  01164		 |$LN23@HDQ_Close|
  01164	00000000	 DCD         |??_C@_1CM@EGDDMOKD@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01168		 |$LN24@HDQ_Close|
  01168	00000000	 DCD         |dpCurSettings|
  0116c		 |$LN25@HDQ_Close|
  0116c	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  01170		 |$LN26@HDQ_Close|
  01170	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  01174		 |$LN27@HDQ_Close|
  01174	00000000	 DCD         |??_C@_1JC@FHLAGIAG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  01178		 |$LN28@HDQ_Close|
  01178	00000000	 DCD         |??_C@_1FM@PMODCPPC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$CB?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt@|
  0117c		 |$LN29@HDQ_Close|
  0117c	68647144	 DCD         0x68647144
  01180		 |$LN30@HDQ_Close|
  01180	68647149	 DCD         0x68647149
  01184		 |$LN31@HDQ_Close|
  01184	00000000	 DCD         |??_C@_1CK@OLPACAGM@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01188		 |$M36817|

			 ENDP  ; |?HDQ_Close@@YAHK@Z|, HDQ_Close

	EXPORT	|?HDQ_PowerDown@@YAXK@Z|		; HDQ_PowerDown

  00040			 AREA	 |.pdata|, PDATA
|$T36834| DCD	|$LN6@HDQ_PowerD|
	DCD	0x40001304
; Function compile flags: /Odtp

  01188			 AREA	 |.text|, CODE, ARM

  01188		 |?HDQ_PowerDown@@YAXK@Z| PROC		; HDQ_PowerDown

; 725  : {

  01188		 |$LN6@HDQ_PowerD|
  01188	e1a0c00d	 mov         r12, sp
  0118c	e92d0001	 stmdb       sp!, {r0}
  01190	e92d5000	 stmdb       sp!, {r12, lr}
  01194	e24dd004	 sub         sp, sp, #4
  01198		 |$M36831|

; 726  :     Device_t *pDevice = (Device_t*)dwContext;

  01198	e59d300c	 ldr         r3, [sp, #0xC]
  0119c	e58d3000	 str         r3, [sp]

; 727  :     if (pDevice->nPowerState == D0)

  011a0	e59d3000	 ldr         r3, [sp]
  011a4	e2833040	 add         r3, r3, #0x40
  011a8	e5933000	 ldr         r3, [r3]
  011ac	e3530000	 cmp         r3, #0
  011b0	1a000004	 bne         |$LN1@HDQ_PowerD|

; 728  :         {
; 729  :         //SetDevicePowerState(pDevice->hParent, D4, NULL);
; 730  :         EnableDeviceClocks(pDevice->dwDeviceId,FALSE);

  011b4	e3a01000	 mov         r1, #0
  011b8	e59d3000	 ldr         r3, [sp]
  011bc	e2833008	 add         r3, r3, #8
  011c0	e5930000	 ldr         r0, [r3]
  011c4	eb000000	 bl          EnableDeviceClocks
  011c8		 |$LN1@HDQ_PowerD|

; 731  :         }
; 732  : }

  011c8	e28dd004	 add         sp, sp, #4
  011cc	e89d6000	 ldmia       sp, {sp, lr}
  011d0	e12fff1e	 bx          lr
  011d4		 |$M36832|

			 ENDP  ; |?HDQ_PowerDown@@YAXK@Z|, HDQ_PowerDown

	EXPORT	|?HDQ_PowerUp@@YAXK@Z|			; HDQ_PowerUp

  00048			 AREA	 |.pdata|, PDATA
|$T36839| DCD	|$LN6@HDQ_PowerU|
	DCD	0x40001304
; Function compile flags: /Odtp

  011d4			 AREA	 |.text|, CODE, ARM

  011d4		 |?HDQ_PowerUp@@YAXK@Z| PROC		; HDQ_PowerUp

; 745  : {

  011d4		 |$LN6@HDQ_PowerU|
  011d4	e1a0c00d	 mov         r12, sp
  011d8	e92d0001	 stmdb       sp!, {r0}
  011dc	e92d5000	 stmdb       sp!, {r12, lr}
  011e0	e24dd004	 sub         sp, sp, #4
  011e4		 |$M36836|

; 746  :     Device_t *pDevice = (Device_t*)dwContext;

  011e4	e59d300c	 ldr         r3, [sp, #0xC]
  011e8	e58d3000	 str         r3, [sp]

; 747  :     if (pDevice->nPowerState == D0)

  011ec	e59d3000	 ldr         r3, [sp]
  011f0	e2833040	 add         r3, r3, #0x40
  011f4	e5933000	 ldr         r3, [r3]
  011f8	e3530000	 cmp         r3, #0
  011fc	1a000004	 bne         |$LN1@HDQ_PowerU|

; 748  :         {
; 749  :         //SetDevicePowerState(pDevice->hParent, D0, NULL);
; 750  :         EnableDeviceClocks(pDevice->dwDeviceId,TRUE);

  01200	e3a01001	 mov         r1, #1
  01204	e59d3000	 ldr         r3, [sp]
  01208	e2833008	 add         r3, r3, #8
  0120c	e5930000	 ldr         r0, [r3]
  01210	eb000000	 bl          EnableDeviceClocks
  01214		 |$LN1@HDQ_PowerU|

; 751  :         }
; 752  : }

  01214	e28dd004	 add         sp, sp, #4
  01218	e89d6000	 ldmia       sp, {sp, lr}
  0121c	e12fff1e	 bx          lr
  01220		 |$M36837|

			 ENDP  ; |?HDQ_PowerUp@@YAXK@Z|, HDQ_PowerUp

	EXPORT	|??_C@_1DE@FNGPNDJC@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@CEKHJNGB@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@OEAGKEKL@?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAE?$AAX?$AAT?$AA_?$AAR?$AAE?$AAS@| [ DATA ] ; `string'
	EXPORT	|HDQ_Write|
	EXPORT	|HDQ_Read|
	EXPORT	|?IsEqualGUID@@YAHABU_GUID@@0@Z|	; IsEqualGUID
	EXPORT	|??_C@_1OG@GMNKDBNG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAD?$AAD?$AAK?$AA_@| [ DATA ] ; `string'
	EXPORT	|GetCurrentProcessId|
	EXPORT	|??_C@_1GE@HFALDCNA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@BFHFIKBE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$CB?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IC@IDAFFJME@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0@| [ DATA ] ; `string'
	EXPORT	|?HDQ_IOControl@@YAHKKPAEK0KPAK@Z|	; HDQ_IOControl
	IMPORT	|CeSafeCopyMemory|
	IMPORT	|SetLastError|
	IMPORT	|GetCallerProcess|

  00050			 AREA	 |.pdata|, PDATA
|$T36863| DCD	|$LN38@HDQ_IOCont|
	DCD	0x4000e304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@FNGPNDJC@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "O"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "(", 0x0, "r", 0x0, "c", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@CEKHJNGB@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd@| DCB "W"
	DCB	0x0, "A", 0x0, "R", 0x0, "N", 0x0, ":", 0x0, " ", 0x0, "H"
	DCB	0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, ":", 0x0, " ", 0x0, "U", 0x0, "n", 0x0, "s", 0x0, "u"
	DCB	0x0, "p", 0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "d", 0x0, "e"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@OEAGKEKL@?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAE?$AAX?$AAT?$AA_?$AAR?$AAE?$AAS@| DCB "H"
	DCB	0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T"
	DCB	0x0, "L", 0x0, "_", 0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T"
	DCB	0x0, "E", 0x0, "X", 0x0, "T", 0x0, "_", 0x0, "R", 0x0, "E"
	DCB	0x0, "S", 0x0, "T", 0x0, "O", 0x0, "R", 0x0, "E", 0x0, "_"
	DCB	0x0, "N", 0x0, "O", 0x0, "T", 0x0, "I", 0x0, "F", 0x0, "Y"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1OG@GMNKDBNG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAD?$AAD?$AAK?$AA_@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "O"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "T", 0x0, "L", 0x0, "_", 0x0, "D", 0x0, "D", 0x0, "K"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D"
	DCB	0x0, "R", 0x0, "I", 0x0, "V", 0x0, "E", 0x0, "R", 0x0, "_"
	DCB	0x0, "I", 0x0, "F", 0x0, "C", 0x0, " ", 0x0, "c", 0x0, "a"
	DCB	0x0, "n", 0x0, " ", 0x0, "b", 0x0, "e", 0x0, " ", 0x0, "c"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "o", 0x0, "n", 0x0, "l", 0x0, "y", 0x0, " ", 0x0, "f"
	DCB	0x0, "r", 0x0, "o", 0x0, "m", 0x0, " ", 0x0, "d", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "p"
	DCB	0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, " ", 0x0, "(", 0x0, "c", 0x0, "a", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "p", 0x0, "r", 0x0, "o"
	DCB	0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, " ", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@HFALDCNA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "O"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "c"
	DCB	0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "x", 0x0, "t", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@BFHFIKBE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$CB?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, "!", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "O"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "c"
	DCB	0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "x", 0x0, "t", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@IDAFFJME@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0@| DCB "+"
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "I", 0x0, "O"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  01220			 AREA	 |.text|, CODE, ARM

  01220		 |?HDQ_IOControl@@YAHKKPAEK0KPAK@Z| PROC ; HDQ_IOControl

; 771  : {

  01220		 |$LN38@HDQ_IOCont|
  01220	e1a0c00d	 mov         r12, sp
  01224	e92d000f	 stmdb       sp!, {r0 - r3}
  01228	e92d5000	 stmdb       sp!, {r12, lr}
  0122c	e24dd070	 sub         sp, sp, #0x70
  01230		 |$M36860|

; 772  :     BOOL rc = FALSE;

  01230	e3a03000	 mov         r3, #0
  01234	e58d3014	 str         r3, [sp, #0x14]

; 773  :     Device_t *pDevice;
; 774  :     DEVICE_IFC_HDQ ifc;
; 775  :     Instance_t *pInstance = (Instance_t*)context;

  01238	e59d3078	 ldr         r3, [sp, #0x78]
  0123c	e58d3018	 str         r3, [sp, #0x18]

; 776  :     
; 777  :     DEBUGMSG(ZONE_FUNCTION, (L"+HDQ_IOControl"
; 778  :         L"(0x%08x, 0x%08x, 0x%08x, %d, 0x%08x, %d, 0x%08x)\r\n",
; 779  :         context, code, pInBuffer, inSize, pOutBuffer, outSize, pOutSize
; 780  :         ));

  01240	e59f3330	 ldr         r3, [pc, #0x330]
  01244	e5933440	 ldr         r3, [r3, #0x440]
  01248	e3130008	 tst         r3, #8
  0124c	0a00000f	 beq         |$LN22@HDQ_IOCont|
  01250	e59d3090	 ldr         r3, [sp, #0x90]
  01254	e58d300c	 str         r3, [sp, #0xC]
  01258	e59d308c	 ldr         r3, [sp, #0x8C]
  0125c	e58d3008	 str         r3, [sp, #8]
  01260	e59d3088	 ldr         r3, [sp, #0x88]
  01264	e58d3004	 str         r3, [sp, #4]
  01268	e59d3084	 ldr         r3, [sp, #0x84]
  0126c	e58d3000	 str         r3, [sp]
  01270	e59d3080	 ldr         r3, [sp, #0x80]
  01274	e59d207c	 ldr         r2, [sp, #0x7C]
  01278	e59d1078	 ldr         r1, [sp, #0x78]
  0127c	e59f0324	 ldr         r0, [pc, #0x324]
  01280	eb000000	 bl          NKDbgPrintfW
  01284	e3a03001	 mov         r3, #1
  01288	e58d303c	 str         r3, [sp, #0x3C]
  0128c	ea000001	 b           |$LN23@HDQ_IOCont|
  01290		 |$LN22@HDQ_IOCont|
  01290	e3a03000	 mov         r3, #0
  01294	e58d303c	 str         r3, [sp, #0x3C]
  01298		 |$LN23@HDQ_IOCont|

; 781  : 
; 782  :     // Check if we get correct context
; 783  :     if (pInstance == NULL || pInstance->cookie != HDQ_INSTANCE_COOKIE) 

  01298	e59d3018	 ldr         r3, [sp, #0x18]
  0129c	e3530000	 cmp         r3, #0
  012a0	0a000004	 beq         |$LN18@HDQ_IOCont|
  012a4	e59d3018	 ldr         r3, [sp, #0x18]
  012a8	e5932000	 ldr         r2, [r3]
  012ac	e59f32f0	 ldr         r3, [pc, #0x2F0]
  012b0	e1520003	 cmp         r2, r3
  012b4	0a00000c	 beq         |$LN19@HDQ_IOCont|
  012b8		 |$LN18@HDQ_IOCont|

; 784  :         {
; 785  :         DEBUGMSG(ZONE_ERROR && ZONE_HDQ, (L"ERROR! HDQ_IOControl: "
; 786  :             L"Incorrect context paramer\r\n"
; 787  :             ));

  012b8	e59f32b8	 ldr         r3, [pc, #0x2B8]
  012bc	e5933440	 ldr         r3, [r3, #0x440]
  012c0	e3130902	 tst         r3, #2, 18
  012c4	0a000004	 beq         |$LN24@HDQ_IOCont|
  012c8	e59f02d0	 ldr         r0, [pc, #0x2D0]
  012cc	eb000000	 bl          NKDbgPrintfW
  012d0	e3a03001	 mov         r3, #1
  012d4	e58d3040	 str         r3, [sp, #0x40]
  012d8	ea000001	 b           |$LN25@HDQ_IOCont|
  012dc		 |$LN24@HDQ_IOCont|
  012dc	e3a03000	 mov         r3, #0
  012e0	e58d3040	 str         r3, [sp, #0x40]
  012e4		 |$LN25@HDQ_IOCont|

; 788  :         goto cleanUp;

  012e4	ea000090	 b           |$LN17@HDQ_IOCont|
  012e8	ea00008f	 b           |$cleanUp$36376|
  012ec		 |$LN19@HDQ_IOCont|

; 789  :         }
; 790  : 
; 791  :     // Check if we get correct context
; 792  :     pDevice = pInstance->pDevice;

  012ec	e59d3018	 ldr         r3, [sp, #0x18]
  012f0	e2833008	 add         r3, r3, #8
  012f4	e5933000	 ldr         r3, [r3]
  012f8	e58d3010	 str         r3, [sp, #0x10]

; 793  :     if (pDevice == NULL || pDevice->cookie != HDQ_DEVICE_COOKIE) 

  012fc	e59d3010	 ldr         r3, [sp, #0x10]
  01300	e3530000	 cmp         r3, #0
  01304	0a000004	 beq         |$LN15@HDQ_IOCont|
  01308	e59d3010	 ldr         r3, [sp, #0x10]
  0130c	e5932000	 ldr         r2, [r3]
  01310	e59f3284	 ldr         r3, [pc, #0x284]
  01314	e1520003	 cmp         r2, r3
  01318	0a00000c	 beq         |$LN16@HDQ_IOCont|
  0131c		 |$LN15@HDQ_IOCont|

; 794  :         {
; 795  :         DEBUGMSG(ZONE_ERROR && ZONE_HDQ, (L"ERROR: HDQ_IOControl: "
; 796  :             L"Incorrect context paramer\r\n"
; 797  :             ));

  0131c	e59f3254	 ldr         r3, [pc, #0x254]
  01320	e5933440	 ldr         r3, [r3, #0x440]
  01324	e3130902	 tst         r3, #2, 18
  01328	0a000004	 beq         |$LN26@HDQ_IOCont|
  0132c	e59f0264	 ldr         r0, [pc, #0x264]
  01330	eb000000	 bl          NKDbgPrintfW
  01334	e3a03001	 mov         r3, #1
  01338	e58d3044	 str         r3, [sp, #0x44]
  0133c	ea000001	 b           |$LN27@HDQ_IOCont|
  01340		 |$LN26@HDQ_IOCont|
  01340	e3a03000	 mov         r3, #0
  01344	e58d3044	 str         r3, [sp, #0x44]
  01348		 |$LN27@HDQ_IOCont|

; 798  :         goto cleanUp;

  01348	ea000077	 b           |$LN14@HDQ_IOCont|
  0134c	ea000076	 b           |$cleanUp$36376|
  01350		 |$LN16@HDQ_IOCont|

; 799  :         }
; 800  : 
; 801  :     switch (code) 

  01350	e59d307c	 ldr         r3, [sp, #0x7C]
  01354	e58d3048	 str         r3, [sp, #0x48]
  01358	e59d2048	 ldr         r2, [sp, #0x48]
  0135c	e3a03822	 mov         r3, #0x22, 16
  01360	e3833b01	 orr         r3, r3, #1, 22
  01364	e1520003	 cmp         r2, r3
  01368	0a000004	 beq         |$LN11@HDQ_IOCont|
  0136c	e59d2048	 ldr         r2, [sp, #0x48]
  01370	e59f321c	 ldr         r3, [pc, #0x21C]
  01374	e1520003	 cmp         r2, r3
  01378	0a00004f	 beq         |$LN2@HDQ_IOCont|
  0137c	ea00005c	 b           |$LN1@HDQ_IOCont|
  01380		 |$LN11@HDQ_IOCont|

; 802  :         {
; 803  :         case IOCTL_DDK_GET_DRIVER_IFC:
; 804  :             // We can give interface only to our peer in device process
; 805  :             if (GetCurrentProcessId() != (DWORD)GetCallerProcess()) 

  01380	eb000000	 bl          GetCurrentProcessId
  01384	e58d004c	 str         r0, [sp, #0x4C]
  01388	eb000000	 bl          GetCallerProcess
  0138c	e58d0050	 str         r0, [sp, #0x50]
  01390	e59d204c	 ldr         r2, [sp, #0x4C]
  01394	e59d3050	 ldr         r3, [sp, #0x50]
  01398	e1520003	 cmp         r2, r3
  0139c	0a000010	 beq         |$LN10@HDQ_IOCont|

; 806  :                 {
; 807  :                 DEBUGMSG(ZONE_ERROR && ZONE_HDQ, (L"ERROR: HDQ_IOControl: "
; 808  :                     L"IOCTL_DDK_GET_DRIVER_IFC can be called only from "
; 809  :                     L"device process (caller process id 0x%08x)\r\n",
; 810  :                     GetCallerProcess()
; 811  :                 ));

  013a0	e59f31d0	 ldr         r3, [pc, #0x1D0]
  013a4	e5933440	 ldr         r3, [r3, #0x440]
  013a8	e3130902	 tst         r3, #2, 18
  013ac	0a000007	 beq         |$LN28@HDQ_IOCont|
  013b0	eb000000	 bl          GetCallerProcess
  013b4	e58d0054	 str         r0, [sp, #0x54]
  013b8	e59d1054	 ldr         r1, [sp, #0x54]
  013bc	e59f01cc	 ldr         r0, [pc, #0x1CC]
  013c0	eb000000	 bl          NKDbgPrintfW
  013c4	e3a03001	 mov         r3, #1
  013c8	e58d3058	 str         r3, [sp, #0x58]
  013cc	ea000001	 b           |$LN29@HDQ_IOCont|
  013d0		 |$LN28@HDQ_IOCont|
  013d0	e3a03000	 mov         r3, #0
  013d4	e58d3058	 str         r3, [sp, #0x58]
  013d8		 |$LN29@HDQ_IOCont|

; 812  :                 SetLastError(ERROR_ACCESS_DENIED);

  013d8	e3a00005	 mov         r0, #5
  013dc	eb000000	 bl          SetLastError

; 813  :                 break;

  013e0	ea000051	 b           |$LN12@HDQ_IOCont|
  013e4		 |$LN10@HDQ_IOCont|

; 814  :                 }
; 815  :             
; 816  :             if (pInBuffer == NULL || inSize < sizeof(GUID)) 

  013e4	e59d3080	 ldr         r3, [sp, #0x80]
  013e8	e3530000	 cmp         r3, #0
  013ec	0a000002	 beq         |$LN8@HDQ_IOCont|
  013f0	e59d3084	 ldr         r3, [sp, #0x84]
  013f4	e3530010	 cmp         r3, #0x10
  013f8	2a000002	 bcs         |$LN9@HDQ_IOCont|
  013fc		 |$LN8@HDQ_IOCont|

; 817  :                 {
; 818  :                 SetLastError(ERROR_INVALID_PARAMETER);

  013fc	e3a00057	 mov         r0, #0x57
  01400	eb000000	 bl          SetLastError

; 819  :                 break;

  01404	ea000048	 b           |$LN12@HDQ_IOCont|
  01408		 |$LN9@HDQ_IOCont|

; 820  :                 }
; 821  :             
; 822  :             if (IsEqualGUID(*(GUID*)pInBuffer, DEVICE_IFC_HDQ_GUID)) 

  01408	e59f117c	 ldr         r1, [pc, #0x17C]
  0140c	e59d0080	 ldr         r0, [sp, #0x80]
  01410	eb000000	 bl          |?IsEqualGUID@@YAHABU_GUID@@0@Z|
  01414	e58d005c	 str         r0, [sp, #0x5C]
  01418	e59d305c	 ldr         r3, [sp, #0x5C]
  0141c	e3530000	 cmp         r3, #0
  01420	0a000022	 beq         |$LN7@HDQ_IOCont|

; 823  :                 {
; 824  :                 if (pOutSize != NULL) *pOutSize = sizeof(DEVICE_IFC_HDQ);

  01424	e59d3090	 ldr         r3, [sp, #0x90]
  01428	e3530000	 cmp         r3, #0
  0142c	0a000002	 beq         |$LN6@HDQ_IOCont|
  01430	e59d2090	 ldr         r2, [sp, #0x90]
  01434	e3a0300c	 mov         r3, #0xC
  01438	e5823000	 str         r3, [r2]
  0143c		 |$LN6@HDQ_IOCont|

; 825  :                 if (pOutBuffer == NULL || outSize < sizeof(DEVICE_IFC_HDQ)) 

  0143c	e59d3088	 ldr         r3, [sp, #0x88]
  01440	e3530000	 cmp         r3, #0
  01444	0a000002	 beq         |$LN4@HDQ_IOCont|
  01448	e59d308c	 ldr         r3, [sp, #0x8C]
  0144c	e353000c	 cmp         r3, #0xC
  01450	2a000002	 bcs         |$LN5@HDQ_IOCont|
  01454		 |$LN4@HDQ_IOCont|

; 826  :                     {
; 827  :                     SetLastError(ERROR_INVALID_PARAMETER);

  01454	e3a00057	 mov         r0, #0x57
  01458	eb000000	 bl          SetLastError

; 828  :                     break;

  0145c	ea000032	 b           |$LN12@HDQ_IOCont|
  01460		 |$LN5@HDQ_IOCont|

; 829  :                     }
; 830  :                 
; 831  :                 ifc.context = context;

  01460	e59d3078	 ldr         r3, [sp, #0x78]
  01464	e58d301c	 str         r3, [sp, #0x1C]

; 832  :                 ifc.pfnRead = HDQ_Read;

  01468	e59f3118	 ldr         r3, [pc, #0x118]
  0146c	e58d3024	 str         r3, [sp, #0x24]

; 833  :                 ifc.pfnWrite = HDQ_Write;           

  01470	e59f310c	 ldr         r3, [pc, #0x10C]
  01474	e58d3020	 str         r3, [sp, #0x20]

; 834  :                 if (!CeSafeCopyMemory(pOutBuffer, &ifc, sizeof(DEVICE_IFC_HDQ))) 

  01478	e3a0200c	 mov         r2, #0xC
  0147c	e28d101c	 add         r1, sp, #0x1C
  01480	e59d0088	 ldr         r0, [sp, #0x88]
  01484	eb000000	 bl          CeSafeCopyMemory
  01488	e58d0060	 str         r0, [sp, #0x60]
  0148c	e59d3060	 ldr         r3, [sp, #0x60]
  01490	e3530000	 cmp         r3, #0
  01494	1a000002	 bne         |$LN3@HDQ_IOCont|

; 835  :                     {
; 836  :                     SetLastError(ERROR_INVALID_PARAMETER);

  01498	e3a00057	 mov         r0, #0x57
  0149c	eb000000	 bl          SetLastError

; 837  :                     break;

  014a0	ea000021	 b           |$LN12@HDQ_IOCont|
  014a4		 |$LN3@HDQ_IOCont|

; 838  :                     }
; 839  :                 rc = TRUE;

  014a4	e3a03001	 mov         r3, #1
  014a8	e58d3014	 str         r3, [sp, #0x14]

; 840  :                 break;

  014ac	ea00001e	 b           |$LN12@HDQ_IOCont|
  014b0		 |$LN7@HDQ_IOCont|

; 841  :                 }
; 842  :             
; 843  :             SetLastError(ERROR_INVALID_PARAMETER);

  014b0	e3a00057	 mov         r0, #0x57
  014b4	eb000000	 bl          SetLastError

; 844  :             break;

  014b8	ea00001b	 b           |$LN12@HDQ_IOCont|
  014bc		 |$LN2@HDQ_IOCont|

; 845  : 
; 846  :     case IOCTL_CONTEXT_RESTORE:
; 847  :             DEBUGMSG(ZONE_FUNCTION, (L"HDQ_IOControl: IOCTL_CONTEXT_RESTORE_NOTIFY\r\n"));

  014bc	e59f30b4	 ldr         r3, [pc, #0xB4]
  014c0	e5933440	 ldr         r3, [r3, #0x440]
  014c4	e3130008	 tst         r3, #8
  014c8	0a000004	 beq         |$LN30@HDQ_IOCont|
  014cc	e59f00ac	 ldr         r0, [pc, #0xAC]
  014d0	eb000000	 bl          NKDbgPrintfW
  014d4	e3a03001	 mov         r3, #1
  014d8	e58d3064	 str         r3, [sp, #0x64]
  014dc	ea000001	 b           |$LN31@HDQ_IOCont|
  014e0		 |$LN30@HDQ_IOCont|
  014e0	e3a03000	 mov         r3, #0
  014e4	e58d3064	 str         r3, [sp, #0x64]
  014e8		 |$LN31@HDQ_IOCont|

; 848  :             ContextRestore(pDevice);

  014e8	e59d0010	 ldr         r0, [sp, #0x10]
  014ec	eb000000	 bl          |?ContextRestore@@YAXPAUDevice_t@@@Z|

; 849  :             break;

  014f0	ea00000d	 b           |$LN12@HDQ_IOCont|
  014f4		 |$LN1@HDQ_IOCont|

; 850  :       
; 851  :     default:
; 852  :             DEBUGMSG(ZONE_WARN, (L"WARN: HDQ_IOControl: "
; 853  :                 L"Unsupported code 0x%08x\r\n", code
; 854  :                 ));

  014f4	e59f307c	 ldr         r3, [pc, #0x7C]
  014f8	e5933440	 ldr         r3, [r3, #0x440]
  014fc	e3130004	 tst         r3, #4
  01500	0a000005	 beq         |$LN32@HDQ_IOCont|
  01504	e59d107c	 ldr         r1, [sp, #0x7C]
  01508	e59f006c	 ldr         r0, [pc, #0x6C]
  0150c	eb000000	 bl          NKDbgPrintfW
  01510	e3a03001	 mov         r3, #1
  01514	e58d3068	 str         r3, [sp, #0x68]
  01518	ea000001	 b           |$LN33@HDQ_IOCont|
  0151c		 |$LN32@HDQ_IOCont|
  0151c	e3a03000	 mov         r3, #0
  01520	e58d3068	 str         r3, [sp, #0x68]
  01524		 |$LN33@HDQ_IOCont|

; 855  :             SetLastError(ERROR_INVALID_PARAMETER);

  01524	e3a00057	 mov         r0, #0x57
  01528	eb000000	 bl          SetLastError
  0152c		 |$LN12@HDQ_IOCont|
  0152c		 |$LN14@HDQ_IOCont|
  0152c		 |$LN17@HDQ_IOCont|
  0152c		 |$cleanUp$36376|

; 856  :             break;
; 857  :     }
; 858  : 
; 859  : cleanUp:
; 860  :     DEBUGMSG(ZONE_FUNCTION, (L"-HDQ_IOControl(rc = %d)\r\n", rc));

  0152c	e59f3044	 ldr         r3, [pc, #0x44]
  01530	e5933440	 ldr         r3, [r3, #0x440]
  01534	e3130008	 tst         r3, #8
  01538	0a000005	 beq         |$LN34@HDQ_IOCont|
  0153c	e59d1014	 ldr         r1, [sp, #0x14]
  01540	e59f002c	 ldr         r0, [pc, #0x2C]
  01544	eb000000	 bl          NKDbgPrintfW
  01548	e3a03001	 mov         r3, #1
  0154c	e58d306c	 str         r3, [sp, #0x6C]
  01550	ea000001	 b           |$LN35@HDQ_IOCont|
  01554		 |$LN34@HDQ_IOCont|
  01554	e3a03000	 mov         r3, #0
  01558	e58d306c	 str         r3, [sp, #0x6C]
  0155c		 |$LN35@HDQ_IOCont|

; 861  :     return rc;

  0155c	e59d3014	 ldr         r3, [sp, #0x14]
  01560	e58d3038	 str         r3, [sp, #0x38]

; 862  : }

  01564	e59d0038	 ldr         r0, [sp, #0x38]
  01568	e28dd070	 add         sp, sp, #0x70
  0156c	e89d6000	 ldmia       sp, {sp, lr}
  01570	e12fff1e	 bx          lr
  01574		 |$LN39@HDQ_IOCont|
  01574		 |$LN40@HDQ_IOCont|
  01574	00000000	 DCD         |??_C@_1DE@FNGPNDJC@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01578		 |$LN41@HDQ_IOCont|
  01578	00000000	 DCD         |dpCurSettings|
  0157c		 |$LN42@HDQ_IOCont|
  0157c	00000000	 DCD         |??_C@_1FO@CEKHJNGB@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd@|
  01580		 |$LN43@HDQ_IOCont|
  01580	00000000	 DCD         |??_C@_1FM@OEAGKEKL@?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAE?$AAX?$AAT?$AA_?$AAR?$AAE?$AAS@|
  01584		 |$LN44@HDQ_IOCont|
  01584	00000000	 DCD         |HDQ_Write|
  01588		 |$LN45@HDQ_IOCont|
  01588	00000000	 DCD         |HDQ_Read|
  0158c		 |$LN46@HDQ_IOCont|
  0158c	00000000	 DCD         |DEVICE_IFC_HDQ_GUID|
  01590		 |$LN47@HDQ_IOCont|
  01590	00000000	 DCD         |??_C@_1OG@GMNKDBNG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAD?$AAD?$AAK?$AA_@|
  01594		 |$LN48@HDQ_IOCont|
  01594	80038140	 DCD         0x80038140
  01598		 |$LN49@HDQ_IOCont|
  01598	00000000	 DCD         |??_C@_1GE@HFALDCNA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5@|
  0159c		 |$LN50@HDQ_IOCont|
  0159c	68647144	 DCD         0x68647144
  015a0		 |$LN51@HDQ_IOCont|
  015a0	00000000	 DCD         |??_C@_1GE@BFHFIKBE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$CB?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5@|
  015a4		 |$LN52@HDQ_IOCont|
  015a4	68647149	 DCD         0x68647149
  015a8		 |$LN53@HDQ_IOCont|
  015a8	00000000	 DCD         |??_C@_1IC@IDAFFJME@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0@|
  015ac		 |$M36861|

			 ENDP  ; |?HDQ_IOControl@@YAHKKPAEK0KPAK@Z|, HDQ_IOControl

	IMPORT	|__GetUserKData|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T36884| DCD	|$LN5@GetCurrent|
	DCD	0x40000b02
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentProcessId| PROC

; 373  : _inline DWORD GetCurrentProcessId(void) {

  00000		 |$LN5@GetCurrent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M36881|

; 374  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURPROC * sizeof(HANDLE)));

  00008	e3a0000c	 mov         r0, #0xC
  0000c	eb000000	 bl          __GetUserKData
  00010	e58d0004	 str         r0, [sp, #4]
  00014	e59d3004	 ldr         r3, [sp, #4]
  00018	e58d3000	 str         r3, [sp]

; 375  : }

  0001c	e59d0000	 ldr         r0, [sp]
  00020	e28dd008	 add         sp, sp, #8
  00024	e49de004	 ldr         lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$M36882|

			 ENDP  ; |GetCurrentProcessId|

	IMPORT	|memcmp|
; File c:\wince600\public\common\sdk\inc\objbase.h

  00000			 AREA	 |.pdata|, PDATA
|$T36894| DCD	|$LN7@IsEqualGUI|
	DCD	0x40001704
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsEqualGUID@@YAHABU_GUID@@0@Z| PROC	; IsEqualGUID

; 493  : {

  00000		 |$LN7@IsEqualGUI|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M36891|

; 494  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00010	e3a02010	 mov         r2, #0x10
  00014	e59d1018	 ldr         r1, [sp, #0x18]
  00018	e59d0014	 ldr         r0, [sp, #0x14]
  0001c	eb000000	 bl          memcmp
  00020	e58d0004	 str         r0, [sp, #4]
  00024	e59d3004	 ldr         r3, [sp, #4]
  00028	e3530000	 cmp         r3, #0
  0002c	1a000002	 bne         |$LN3@IsEqualGUI|
  00030	e3a03001	 mov         r3, #1
  00034	e58d3008	 str         r3, [sp, #8]
  00038	ea000001	 b           |$LN4@IsEqualGUI|
  0003c		 |$LN3@IsEqualGUI|
  0003c	e3a03000	 mov         r3, #0
  00040	e58d3008	 str         r3, [sp, #8]
  00044		 |$LN4@IsEqualGUI|
  00044	e59d3008	 ldr         r3, [sp, #8]
  00048	e58d3000	 str         r3, [sp]

; 495  : }

  0004c	e59d0000	 ldr         r0, [sp]
  00050	e28dd00c	 add         sp, sp, #0xC
  00054	e89d6000	 ldmia       sp, {sp, lr}
  00058	e12fff1e	 bx          lr
  0005c		 |$M36892|

			 ENDP  ; |?IsEqualGUID@@YAHABU_GUID@@0@Z|, IsEqualGUID

	EXPORT	|??_C@_1CM@MLMFGHDJ@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@FONCJPAC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAT?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?5?$AAe?$AAx@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@DGMHCICA@?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@NIJJBKAI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAi?$AAn?$AA?5?$AAT?$AAx?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@MBJFDPCH@?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA1?$AA?$CJ?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@JCBIABAG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@FPMNHPHI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$CB?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@BGIBEIJL@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ@| [ DATA ] ; `string'

  00058			 AREA	 |.pdata|, PDATA
|$T36918| DCD	|$LN38@HDQ_Write|
	DCD	0x40011004
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\hdq\hdq.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@MLMFGHDJ@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "W", 0x0, "r"
	DCB	0x0, "i", 0x0, "t", 0x0, "e", 0x0, "(", 0x0, "r", 0x0, "c"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@FONCJPAC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAT?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?5?$AAe?$AAx@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "W", 0x0, "r"
	DCB	0x0, "i", 0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "T"
	DCB	0x0, "X", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "e"
	DCB	0x0, "x", 0x0, "p", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@DGMHCICA@?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ@| DCB "H"
	DCB	0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "W", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "u", 0x0, "s", 0x0, " ", 0x0, "(", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, " ", 0x0, "w", 0x0, "a", 0x0, "s", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@NIJJBKAI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAi?$AAn?$AA?5?$AAT?$AAx?$AA?$AN@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "W", 0x0, "r"
	DCB	0x0, "i", 0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "T"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "T", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@MBJFDPCH@?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA1?$AA?$CJ?$AA?5@| DCB "H"
	DCB	0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "W", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "u", 0x0, "s", 0x0, " ", 0x0, "(", 0x0, "1", 0x0, ")"
	DCB	0x0, " ", 0x0, "w", 0x0, "a", 0x0, "s", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@JCBIABAG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "W", 0x0, "r"
	DCB	0x0, "i", 0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "p"
	DCB	0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@FPMNHPHI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$CB?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, "!", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "W", 0x0, "r"
	DCB	0x0, "i", 0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "p"
	DCB	0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "r"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@BGIBEIJL@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ@| DCB "+"
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "W", 0x0, "r"
	DCB	0x0, "i", 0x0, "t", 0x0, "e", 0x0, "(", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  015ac			 AREA	 |.text|, CODE, ARM

  015ac		 |HDQ_Write| PROC

; 877  : {

  015ac		 |$LN38@HDQ_Write|
  015ac	e1a0c00d	 mov         r12, sp
  015b0	e92d0007	 stmdb       sp!, {r0 - r2}
  015b4	e92d5000	 stmdb       sp!, {r12, lr}
  015b8	e24dd050	 sub         sp, sp, #0x50
  015bc		 |$M36915|

; 878  :     DWORD mask;
; 879  :     DWORD status, i;
; 880  :     BOOL rc = FALSE;

  015bc	e3a03000	 mov         r3, #0
  015c0	e58d3008	 str         r3, [sp, #8]

; 881  :     Device_t *pDevice=NULL;

  015c4	e3a03000	 mov         r3, #0
  015c8	e58d3000	 str         r3, [sp]

; 882  :     BOOL bLocked = FALSE;

  015cc	e3a03000	 mov         r3, #0
  015d0	e58d300c	 str         r3, [sp, #0xC]

; 883  :     OMAP_HDQ_1WIRE_REGS *pHDQRegs;
; 884  :     UINT8 *pData = (UINT8*)pBuffer;

  015d4	e59d305c	 ldr         r3, [sp, #0x5C]
  015d8	e58d3004	 str         r3, [sp, #4]

; 885  :     Instance_t *pInstance = (Instance_t*)context;

  015dc	e59d3058	 ldr         r3, [sp, #0x58]
  015e0	e58d3018	 str         r3, [sp, #0x18]

; 886  : 
; 887  :     DEBUGMSG(ZONE_FUNCTION, (L"+HDQ_Write(0x%08x, 0x%02x, 0x%x)\r\n",
; 888  :         context, pBuffer, size
; 889  :         ));

  015e4	e59f33d8	 ldr         r3, [pc, #0x3D8]
  015e8	e5933440	 ldr         r3, [r3, #0x440]
  015ec	e3130008	 tst         r3, #8
  015f0	0a000007	 beq         |$LN20@HDQ_Write|
  015f4	e59d3060	 ldr         r3, [sp, #0x60]
  015f8	e59d205c	 ldr         r2, [sp, #0x5C]
  015fc	e59d1058	 ldr         r1, [sp, #0x58]
  01600	e59f03e0	 ldr         r0, [pc, #0x3E0]
  01604	eb000000	 bl          NKDbgPrintfW
  01608	e3a03001	 mov         r3, #1
  0160c	e58d3028	 str         r3, [sp, #0x28]
  01610	ea000001	 b           |$LN21@HDQ_Write|
  01614		 |$LN20@HDQ_Write|
  01614	e3a03000	 mov         r3, #0
  01618	e58d3028	 str         r3, [sp, #0x28]
  0161c		 |$LN21@HDQ_Write|

; 890  : 
; 891  :     // Check if we get correct context
; 892  :     if (pInstance == NULL || pInstance->cookie != HDQ_INSTANCE_COOKIE || 
; 893  :         pBuffer == NULL || size <= 1) 

  0161c	e59d3018	 ldr         r3, [sp, #0x18]
  01620	e3530000	 cmp         r3, #0
  01624	0a00000a	 beq         |$LN16@HDQ_Write|
  01628	e59d3018	 ldr         r3, [sp, #0x18]
  0162c	e5932000	 ldr         r2, [r3]
  01630	e59f33ac	 ldr         r3, [pc, #0x3AC]
  01634	e1520003	 cmp         r2, r3
  01638	1a000005	 bne         |$LN16@HDQ_Write|
  0163c	e59d305c	 ldr         r3, [sp, #0x5C]
  01640	e3530000	 cmp         r3, #0
  01644	0a000002	 beq         |$LN16@HDQ_Write|
  01648	e59d3060	 ldr         r3, [sp, #0x60]
  0164c	e3530001	 cmp         r3, #1
  01650	8a00000c	 bhi         |$LN17@HDQ_Write|
  01654		 |$LN16@HDQ_Write|

; 894  :         {
; 895  :         DEBUGMSG(ZONE_ERROR && ZONE_HDQ, (L"ERROR! HDQ_Write: "
; 896  :             L"Incorrect context paramer\r\n"
; 897  :             ));

  01654	e59f3368	 ldr         r3, [pc, #0x368]
  01658	e5933440	 ldr         r3, [r3, #0x440]
  0165c	e3130902	 tst         r3, #2, 18
  01660	0a000004	 beq         |$LN22@HDQ_Write|
  01664	e59f0374	 ldr         r0, [pc, #0x374]
  01668	eb000000	 bl          NKDbgPrintfW
  0166c	e3a03001	 mov         r3, #1
  01670	e58d302c	 str         r3, [sp, #0x2C]
  01674	ea000001	 b           |$LN23@HDQ_Write|
  01678		 |$LN22@HDQ_Write|
  01678	e3a03000	 mov         r3, #0
  0167c	e58d302c	 str         r3, [sp, #0x2C]
  01680		 |$LN23@HDQ_Write|

; 898  :         goto cleanUp;

  01680	ea0000b0	 b           |$LN15@HDQ_Write|
  01684	ea0000af	 b           |$cleanUp$36435|
  01688		 |$LN17@HDQ_Write|

; 899  :         }
; 900  : 
; 901  :     // Check if we get correct context
; 902  :     pDevice = pInstance->pDevice;

  01688	e59d3018	 ldr         r3, [sp, #0x18]
  0168c	e2833008	 add         r3, r3, #8
  01690	e5933000	 ldr         r3, [r3]
  01694	e58d3000	 str         r3, [sp]

; 903  :     if (pDevice == NULL || pDevice->cookie != HDQ_DEVICE_COOKIE) 

  01698	e59d3000	 ldr         r3, [sp]
  0169c	e3530000	 cmp         r3, #0
  016a0	0a000004	 beq         |$LN13@HDQ_Write|
  016a4	e59d3000	 ldr         r3, [sp]
  016a8	e5932000	 ldr         r2, [r3]
  016ac	e59f3328	 ldr         r3, [pc, #0x328]
  016b0	e1520003	 cmp         r2, r3
  016b4	0a00000c	 beq         |$LN14@HDQ_Write|
  016b8		 |$LN13@HDQ_Write|

; 904  :         {
; 905  :         DEBUGMSG(ZONE_ERROR && ZONE_HDQ, (L"ERROR: HDQ_Write: "
; 906  :             L"Incorrect context parameter\r\n"
; 907  :             ));

  016b8	e59f3304	 ldr         r3, [pc, #0x304]
  016bc	e5933440	 ldr         r3, [r3, #0x440]
  016c0	e3130902	 tst         r3, #2, 18
  016c4	0a000004	 beq         |$LN24@HDQ_Write|
  016c8	e59f0308	 ldr         r0, [pc, #0x308]
  016cc	eb000000	 bl          NKDbgPrintfW
  016d0	e3a03001	 mov         r3, #1
  016d4	e58d3030	 str         r3, [sp, #0x30]
  016d8	ea000001	 b           |$LN25@HDQ_Write|
  016dc		 |$LN24@HDQ_Write|
  016dc	e3a03000	 mov         r3, #0
  016e0	e58d3030	 str         r3, [sp, #0x30]
  016e4		 |$LN25@HDQ_Write|

; 908  :         goto cleanUp;

  016e4	ea000097	 b           |$LN12@HDQ_Write|
  016e8	ea000096	 b           |$cleanUp$36435|
  016ec		 |$LN14@HDQ_Write|

; 909  :         }
; 910  : 
; 911  :     // Get hardware
; 912  :     pHDQRegs = pDevice->pHDQRegs;

  016ec	e59d3000	 ldr         r3, [sp]
  016f0	e2833018	 add         r3, r3, #0x18
  016f4	e5933000	 ldr         r3, [r3]
  016f8	e58d3020	 str         r3, [sp, #0x20]

; 913  :     EnterCriticalSection(&pDevice->cs);

  016fc	e59d3000	 ldr         r3, [sp]
  01700	e2830024	 add         r0, r3, #0x24
  01704	eb000000	 bl          EnterCriticalSection

; 914  : 
; 915  :     // set flag so we properly release critical section
; 916  :     bLocked = TRUE;

  01708	e3a03001	 mov         r3, #1
  0170c	e58d300c	 str         r3, [sp, #0xC]

; 917  : 
; 918  :     // Make sure that clock is present
; 919  :     SetHDQPower(pDevice, D0);

  01710	e3a01000	 mov         r1, #0
  01714	e59d0000	 ldr         r0, [sp]
  01718	eb000000	 bl          |?SetHDQPower@@YAHPAUDevice_t@@W4_CEDEVICE_POWER_STATE@@@Z|

; 920  : 
; 921  :     // Clear the interrupt.
; 922  :     status = INREG32(&pHDQRegs->INT_STATUS);

  0171c	e59d3020	 ldr         r3, [sp, #0x20]
  01720	e2833010	 add         r3, r3, #0x10
  01724	e5933000	 ldr         r3, [r3]
  01728	e58d301c	 str         r3, [sp, #0x1C]

; 923  :     InterruptDone(pDevice->sysIntr);

  0172c	e59d3000	 ldr         r3, [sp]
  01730	e2833038	 add         r3, r3, #0x38
  01734	e5930000	 ldr         r0, [r3]
  01738	eb000000	 bl          InterruptDone

; 924  :     DEBUGMSG(ZONE_INFO, (L"HDQ_Write: "
; 925  :         L"Interrupt status (1) was 0x%02x\r\n", status
; 926  :         ));

  0173c	e59f3280	 ldr         r3, [pc, #0x280]
  01740	e5933440	 ldr         r3, [r3, #0x440]
  01744	e3130010	 tst         r3, #0x10
  01748	0a000005	 beq         |$LN26@HDQ_Write|
  0174c	e59d101c	 ldr         r1, [sp, #0x1C]
  01750	e59f027c	 ldr         r0, [pc, #0x27C]
  01754	eb000000	 bl          NKDbgPrintfW
  01758	e3a03001	 mov         r3, #1
  0175c	e58d3034	 str         r3, [sp, #0x34]
  01760	ea000001	 b           |$LN27@HDQ_Write|
  01764		 |$LN26@HDQ_Write|
  01764	e3a03000	 mov         r3, #0
  01768	e58d3034	 str         r3, [sp, #0x34]
  0176c		 |$LN27@HDQ_Write|

; 927  : 
; 928  :     // send command to slave device
; 929  :     TransmitBreak(pInstance);

  0176c	e59d0018	 ldr         r0, [sp, #0x18]
  01770	eb000000	 bl          |?TransmitBreak@@YAXPAUInstance_t@@@Z|

; 930  :     if (TransmitCommand(pInstance, pData[0] | HDQ_WRITE_CMD, &status) == FALSE)

  01774	e28d201c	 add         r2, sp, #0x1C
  01778	e59d3004	 ldr         r3, [sp, #4]
  0177c	e5d33000	 ldrb        r3, [r3]
  01780	e3833c01	 orr         r3, r3, #1, 24
  01784	e20310ff	 and         r1, r3, #0xFF
  01788	e59d0018	 ldr         r0, [sp, #0x18]
  0178c	eb000000	 bl          |?TransmitCommand@@YAHPAUInstance_t@@EPAK@Z|
  01790	e58d0038	 str         r0, [sp, #0x38]
  01794	e59d3038	 ldr         r3, [sp, #0x38]
  01798	e3530000	 cmp         r3, #0
  0179c	1a000001	 bne         |$LN11@HDQ_Write|
  017a0	ea000068	 b           |$LN10@HDQ_Write|

; 931  :         {
; 932  :         goto cleanUp;

  017a4	ea000067	 b           |$cleanUp$36435|
  017a8		 |$LN11@HDQ_Write|

; 933  :         }
; 934  : 
; 935  :     // setup mask for read
; 936  :     mask = HDQ_CTRL_GO | HDQ_CTRL_WRITE | 
; 937  :            HDQ_CTRL_CLOCK_ENABLE | pInstance->mode; 

  017a8	e59d3018	 ldr         r3, [sp, #0x18]
  017ac	e2833004	 add         r3, r3, #4
  017b0	e5933000	 ldr         r3, [r3]
  017b4	e3833030	 orr         r3, r3, #0x30
  017b8	e58d3014	 str         r3, [sp, #0x14]

; 938  : 
; 939  :     // Two write cycles required
; 940  :     for (i = 1; i < size; ++i) 

  017bc	e3a03001	 mov         r3, #1
  017c0	e58d3010	 str         r3, [sp, #0x10]
  017c4	ea000002	 b           |$LN9@HDQ_Write|
  017c8		 |$LN8@HDQ_Write|
  017c8	e59d3010	 ldr         r3, [sp, #0x10]
  017cc	e2833001	 add         r3, r3, #1
  017d0	e58d3010	 str         r3, [sp, #0x10]
  017d4		 |$LN9@HDQ_Write|
  017d4	e59d2010	 ldr         r2, [sp, #0x10]
  017d8	e59d3060	 ldr         r3, [sp, #0x60]
  017dc	e1520003	 cmp         r2, r3
  017e0	2a000050	 bcs         |$LN7@HDQ_Write|

; 941  :         {
; 942  :         // Write address or data to TX write register
; 943  :         OUTREG32(&pHDQRegs->TX_DATA, pData[i]);

  017e4	e59d2004	 ldr         r2, [sp, #4]
  017e8	e59d3010	 ldr         r3, [sp, #0x10]
  017ec	e0823003	 add         r3, r2, r3
  017f0	e5d32000	 ldrb        r2, [r3]
  017f4	e59d3020	 ldr         r3, [sp, #0x20]
  017f8	e2833004	 add         r3, r3, #4
  017fc	e5832000	 str         r2, [r3]

; 944  : 
; 945  :         // send signal to write
; 946  :         OUTREG32(&pHDQRegs->CTRL_STATUS, mask);

  01800	e59d3020	 ldr         r3, [sp, #0x20]
  01804	e283200c	 add         r2, r3, #0xC
  01808	e59d3014	 ldr         r3, [sp, #0x14]
  0180c	e5823000	 str         r3, [r2]

; 947  :                 
; 948  :         // Wait on TX complete interrupt.
; 949  :         if (WaitForSingleObject(pDevice->hIntrEvent, 
; 950  :             pDevice->txTimeout) == WAIT_TIMEOUT) 

  01810	e59d3000	 ldr         r3, [sp]
  01814	e2833010	 add         r3, r3, #0x10
  01818	e5931000	 ldr         r1, [r3]
  0181c	e59d3000	 ldr         r3, [sp]
  01820	e283303c	 add         r3, r3, #0x3C
  01824	e5930000	 ldr         r0, [r3]
  01828	eb000000	 bl          WaitForSingleObject
  0182c	e58d003c	 str         r0, [sp, #0x3C]
  01830	e59d203c	 ldr         r2, [sp, #0x3C]
  01834	e3a03c01	 mov         r3, #1, 24
  01838	e3833002	 orr         r3, r3, #2
  0183c	e1520003	 cmp         r2, r3
  01840	1a00000e	 bne         |$LN6@HDQ_Write|

; 951  :             {
; 952  :             DEBUGMSG(ZONE_ERROR && ZONE_HDQ, (L"ERROR: HDQ_Write: "
; 953  :                 L"Timeout in Tx\r\n"
; 954  :                 ));

  01844	e59f3178	 ldr         r3, [pc, #0x178]
  01848	e5933440	 ldr         r3, [r3, #0x440]
  0184c	e3130902	 tst         r3, #2, 18
  01850	0a000004	 beq         |$LN28@HDQ_Write|
  01854	e59f0174	 ldr         r0, [pc, #0x174]
  01858	eb000000	 bl          NKDbgPrintfW
  0185c	e3a03001	 mov         r3, #1
  01860	e58d3040	 str         r3, [sp, #0x40]
  01864	ea000001	 b           |$LN29@HDQ_Write|
  01868		 |$LN28@HDQ_Write|
  01868	e3a03000	 mov         r3, #0
  0186c	e58d3040	 str         r3, [sp, #0x40]
  01870		 |$LN29@HDQ_Write|

; 955  :             
; 956  :             TransmitBreak(pInstance);

  01870	e59d0018	 ldr         r0, [sp, #0x18]
  01874	eb000000	 bl          |?TransmitBreak@@YAXPAUInstance_t@@@Z|
  01878	ea000032	 b           |$LN5@HDQ_Write|

; 957  :             goto cleanUp;

  0187c	ea000031	 b           |$cleanUp$36435|
  01880		 |$LN6@HDQ_Write|

; 958  :             }
; 959  :         
; 960  :         // Clear interrupt.
; 961  :         status = INREG32(&pHDQRegs->INT_STATUS);

  01880	e59d3020	 ldr         r3, [sp, #0x20]
  01884	e2833010	 add         r3, r3, #0x10
  01888	e5933000	 ldr         r3, [r3]
  0188c	e58d301c	 str         r3, [sp, #0x1C]

; 962  :         InterruptDone(pDevice->sysIntr);

  01890	e59d3000	 ldr         r3, [sp]
  01894	e2833038	 add         r3, r3, #0x38
  01898	e5930000	 ldr         r0, [r3]
  0189c	eb000000	 bl          InterruptDone

; 963  :         DEBUGMSG(ZONE_INFO, (L"HDQ_Write: "
; 964  :             L"Interrupt status (%d) was 0x%x\r\n", 3 + i, status
; 965  :             ));

  018a0	e59f311c	 ldr         r3, [pc, #0x11C]
  018a4	e5933440	 ldr         r3, [r3, #0x440]
  018a8	e3130010	 tst         r3, #0x10
  018ac	0a000007	 beq         |$LN30@HDQ_Write|
  018b0	e59d201c	 ldr         r2, [sp, #0x1C]
  018b4	e59d3010	 ldr         r3, [sp, #0x10]
  018b8	e2831003	 add         r1, r3, #3
  018bc	e59f0108	 ldr         r0, [pc, #0x108]
  018c0	eb000000	 bl          NKDbgPrintfW
  018c4	e3a03001	 mov         r3, #1
  018c8	e58d3044	 str         r3, [sp, #0x44]
  018cc	ea000001	 b           |$LN31@HDQ_Write|
  018d0		 |$LN30@HDQ_Write|
  018d0	e3a03000	 mov         r3, #0
  018d4	e58d3044	 str         r3, [sp, #0x44]
  018d8		 |$LN31@HDQ_Write|

; 966  :         
; 967  :         // Verify interrupt source
; 968  :         if ((status & HDQ_INT_TX_COMPLETE) == 0) 

  018d8	e59d301c	 ldr         r3, [sp, #0x1C]
  018dc	e3130004	 tst         r3, #4
  018e0	1a00000f	 bne         |$LN4@HDQ_Write|

; 969  :             {
; 970  :             DEBUGMSG(ZONE_ERROR && ZONE_HDQ, (L"ERROR: HDQ_Write: "
; 971  :                 L"TX complete expected (0x%x)\r\n", status
; 972  :                 ));

  018e4	e59f30d8	 ldr         r3, [pc, #0xD8]
  018e8	e5933440	 ldr         r3, [r3, #0x440]
  018ec	e3130902	 tst         r3, #2, 18
  018f0	0a000005	 beq         |$LN32@HDQ_Write|
  018f4	e59d101c	 ldr         r1, [sp, #0x1C]
  018f8	e59f00c8	 ldr         r0, [pc, #0xC8]
  018fc	eb000000	 bl          NKDbgPrintfW
  01900	e3a03001	 mov         r3, #1
  01904	e58d3048	 str         r3, [sp, #0x48]
  01908	ea000001	 b           |$LN33@HDQ_Write|
  0190c		 |$LN32@HDQ_Write|
  0190c	e3a03000	 mov         r3, #0
  01910	e58d3048	 str         r3, [sp, #0x48]
  01914		 |$LN33@HDQ_Write|

; 973  :             
; 974  :             TransmitBreak(pInstance);

  01914	e59d0018	 ldr         r0, [sp, #0x18]
  01918	eb000000	 bl          |?TransmitBreak@@YAXPAUInstance_t@@@Z|
  0191c	ea000009	 b           |$LN3@HDQ_Write|

; 975  :             goto cleanUp;

  01920	ea000008	 b           |$cleanUp$36435|
  01924		 |$LN4@HDQ_Write|

; 976  :             }
; 977  :         }

  01924	eaffffa7	 b           |$LN8@HDQ_Write|
  01928		 |$LN7@HDQ_Write|

; 978  : 
; 979  :     // disable clock
; 980  :     OUTREG32(&pHDQRegs->CTRL_STATUS, pInstance->mode);

  01928	e59d3018	 ldr         r3, [sp, #0x18]
  0192c	e2831004	 add         r1, r3, #4
  01930	e59d3020	 ldr         r3, [sp, #0x20]
  01934	e283200c	 add         r2, r3, #0xC
  01938	e5913000	 ldr         r3, [r1]
  0193c	e5823000	 str         r3, [r2]

; 981  : 
; 982  :     // Done
; 983  :     rc = TRUE;

  01940	e3a03001	 mov         r3, #1
  01944	e58d3008	 str         r3, [sp, #8]
  01948		 |$LN3@HDQ_Write|
  01948		 |$LN5@HDQ_Write|
  01948		 |$LN10@HDQ_Write|
  01948		 |$LN12@HDQ_Write|
  01948		 |$LN15@HDQ_Write|
  01948		 |$cleanUp$36435|

; 984  : 
; 985  : cleanUp:
; 986  :     if(pDevice != NULL) 

  01948	e59d3000	 ldr         r3, [sp]
  0194c	e3530000	 cmp         r3, #0
  01950	0a000014	 beq         |$LN2@HDQ_Write|

; 987  :     {
; 988  :        SetHDQPower(pDevice, D4);   

  01954	e3a01004	 mov         r1, #4
  01958	e59d0000	 ldr         r0, [sp]
  0195c	eb000000	 bl          |?SetHDQPower@@YAHPAUDevice_t@@W4_CEDEVICE_POWER_STATE@@@Z|

; 989  :     
; 990  :        if (bLocked == TRUE) LeaveCriticalSection(&pDevice->cs);

  01960	e59d300c	 ldr         r3, [sp, #0xC]
  01964	e3530001	 cmp         r3, #1
  01968	1a000002	 bne         |$LN1@HDQ_Write|
  0196c	e59d3000	 ldr         r3, [sp]
  01970	e2830024	 add         r0, r3, #0x24
  01974	eb000000	 bl          LeaveCriticalSection
  01978		 |$LN1@HDQ_Write|

; 991  :        DEBUGMSG(ZONE_FUNCTION, (L"-HDQ_Write(rc = %d)\r\n", rc));

  01978	e59f3044	 ldr         r3, [pc, #0x44]
  0197c	e5933440	 ldr         r3, [r3, #0x440]
  01980	e3130008	 tst         r3, #8
  01984	0a000005	 beq         |$LN34@HDQ_Write|
  01988	e59d1008	 ldr         r1, [sp, #8]
  0198c	e59f002c	 ldr         r0, [pc, #0x2C]
  01990	eb000000	 bl          NKDbgPrintfW
  01994	e3a03001	 mov         r3, #1
  01998	e58d304c	 str         r3, [sp, #0x4C]
  0199c	ea000001	 b           |$LN35@HDQ_Write|
  019a0		 |$LN34@HDQ_Write|
  019a0	e3a03000	 mov         r3, #0
  019a4	e58d304c	 str         r3, [sp, #0x4C]
  019a8		 |$LN35@HDQ_Write|
  019a8		 |$LN2@HDQ_Write|

; 992  :     }   
; 993  :     return rc;

  019a8	e59d3008	 ldr         r3, [sp, #8]
  019ac	e58d3024	 str         r3, [sp, #0x24]

; 994  : }

  019b0	e59d0024	 ldr         r0, [sp, #0x24]
  019b4	e28dd050	 add         sp, sp, #0x50
  019b8	e89d6000	 ldmia       sp, {sp, lr}
  019bc	e12fff1e	 bx          lr
  019c0		 |$LN39@HDQ_Write|
  019c0		 |$LN40@HDQ_Write|
  019c0	00000000	 DCD         |??_C@_1CM@MLMFGHDJ@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  019c4		 |$LN41@HDQ_Write|
  019c4	00000000	 DCD         |dpCurSettings|
  019c8		 |$LN42@HDQ_Write|
  019c8	00000000	 DCD         |??_C@_1GA@FONCJPAC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAT?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?5?$AAe?$AAx@|
  019cc		 |$LN43@HDQ_Write|
  019cc	00000000	 DCD         |??_C@_1FI@DGMHCICA@?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ@|
  019d0		 |$LN44@HDQ_Write|
  019d0	00000000	 DCD         |??_C@_1EE@NIJJBKAI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAi?$AAn?$AA?5?$AAT?$AAx?$AA?$AN@|
  019d4		 |$LN45@HDQ_Write|
  019d4	00000000	 DCD         |??_C@_1FK@MBJFDPCH@?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA1?$AA?$CJ?$AA?5@|
  019d8		 |$LN46@HDQ_Write|
  019d8	00000000	 DCD         |??_C@_1GA@JCBIABAG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt@|
  019dc		 |$LN47@HDQ_Write|
  019dc	68647144	 DCD         0x68647144
  019e0		 |$LN48@HDQ_Write|
  019e0	00000000	 DCD         |??_C@_1FM@FPMNHPHI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$CB?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt@|
  019e4		 |$LN49@HDQ_Write|
  019e4	68647149	 DCD         0x68647149
  019e8		 |$LN50@HDQ_Write|
  019e8	00000000	 DCD         |??_C@_1EG@BGIBEIJL@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAW?$AAr?$AAi?$AAt?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ@|
  019ec		 |$M36916|

			 ENDP  ; |HDQ_Write|

	EXPORT	|??_C@_1CK@EEIDAJAJ@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@JGIJIMNP@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAd?$AAa?$AAt?$AAa?$AA?$FL?$AAi?$AA?$FN?$AA?5?$AA?$DN?$AA?5?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@CKFCNIA@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@KJINGCIC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAR?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?5?$AAe?$AAx?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@EDPPAOKN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAi?$AAn?$AA?5?$AAR?$AAx?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@OBNDMAJK@?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA1?$AA?$CJ?$AA?5?$AAw@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@EFNENMIL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@EIAJFCNL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$CB?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@BHPDGECK@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@| [ DATA ] ; `string'

  00060			 AREA	 |.pdata|, PDATA
|$T36954| DCD	|$LN41@HDQ_Read|
	DCD	0x40012404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@EEIDAJAJ@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "R", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, "(", 0x0, "r", 0x0, "c", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@JGIJIMNP@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAd?$AAa?$AAt?$AAa?$AA?$FL?$AAi?$AA?$FN?$AA?5?$AA?$DN?$AA?5?$AA0@| DCB "I"
	DCB	0x0, "N", 0x0, "F", 0x0, "O", 0x0, ":", 0x0, " ", 0x0, "H"
	DCB	0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "R", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, " ", 0x0, "d", 0x0, "a", 0x0, "t", 0x0, "a"
	DCB	0x0, "[", 0x0, "i", 0x0, "]", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@CKFCNIA@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx@| DCB "I"
	DCB	0x0, "N", 0x0, "F", 0x0, "O", 0x0, ":", 0x0, " ", 0x0, "H"
	DCB	0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "R", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "u", 0x0, "s", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "X", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@KJINGCIC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAR?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?5?$AAe?$AAx?$AAp@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "R", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "X"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "e", 0x0, "x"
	DCB	0x0, "p", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@EDPPAOKN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAi?$AAn?$AA?5?$AAR?$AAx?$AA?$AN?$AA?6@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "R", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "T", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, " ", 0x0, "R", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@OBNDMAJK@?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA1?$AA?$CJ?$AA?5?$AAw@| DCB "H"
	DCB	0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "R", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "s", 0x0, " ", 0x0, "(", 0x0, "1", 0x0, ")", 0x0, " "
	DCB	0x0, "w", 0x0, "a", 0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@EFNENMIL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "R", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "p", 0x0, "a"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@EIAJFCNL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$CB?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, "!", 0x0, " "
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "R", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "p", 0x0, "a"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "r", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@BHPDGECK@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@| DCB "+"
	DCB	0x0, "H", 0x0, "D", 0x0, "Q", 0x0, "_", 0x0, "R", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, ","
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  019ec			 AREA	 |.text|, CODE, ARM

  019ec		 |HDQ_Read| PROC

; 1009 : {

  019ec		 |$LN41@HDQ_Read|
  019ec	e1a0c00d	 mov         r12, sp
  019f0	e92d0007	 stmdb       sp!, {r0 - r2}
  019f4	e92d5000	 stmdb       sp!, {r12, lr}
  019f8	e24dd054	 sub         sp, sp, #0x54
  019fc		 |$M36951|

; 1010 :     DWORD mask;
; 1011 :     DWORD status, i;
; 1012 :     BOOL rc = FALSE;

  019fc	e3a03000	 mov         r3, #0
  01a00	e58d3008	 str         r3, [sp, #8]

; 1013 :     Device_t *pDevice = NULL;

  01a04	e3a03000	 mov         r3, #0
  01a08	e58d3000	 str         r3, [sp]

; 1014 :     BOOL bLocked = FALSE;

  01a0c	e3a03000	 mov         r3, #0
  01a10	e58d300c	 str         r3, [sp, #0xC]

; 1015 :     OMAP_HDQ_1WIRE_REGS *pHDQRegs;
; 1016 :     UINT8 *pData = (UINT8*)pBuffer;

  01a14	e59d3060	 ldr         r3, [sp, #0x60]
  01a18	e58d3004	 str         r3, [sp, #4]

; 1017 :     Instance_t *pInstance = (Instance_t*)context;

  01a1c	e59d305c	 ldr         r3, [sp, #0x5C]
  01a20	e58d3018	 str         r3, [sp, #0x18]

; 1018 : 
; 1019 :     DEBUGMSG(ZONE_FUNCTION, (L"+HDQ_Read"
; 1020 :         L"(0x%08x, 0x%02x, 0x%08x)\r\n", context, pBuffer, size
; 1021 :         ));

  01a24	e59f3424	 ldr         r3, [pc, #0x424]
  01a28	e5933440	 ldr         r3, [r3, #0x440]
  01a2c	e3130008	 tst         r3, #8
  01a30	0a000007	 beq         |$LN21@HDQ_Read|
  01a34	e59d3064	 ldr         r3, [sp, #0x64]
  01a38	e59d2060	 ldr         r2, [sp, #0x60]
  01a3c	e59d105c	 ldr         r1, [sp, #0x5C]
  01a40	e59f0430	 ldr         r0, [pc, #0x430]
  01a44	eb000000	 bl          NKDbgPrintfW
  01a48	e3a03001	 mov         r3, #1
  01a4c	e58d3028	 str         r3, [sp, #0x28]
  01a50	ea000001	 b           |$LN22@HDQ_Read|
  01a54		 |$LN21@HDQ_Read|
  01a54	e3a03000	 mov         r3, #0
  01a58	e58d3028	 str         r3, [sp, #0x28]
  01a5c		 |$LN22@HDQ_Read|

; 1022 : 
; 1023 :     // Check if we get correct context
; 1024 :     if (pInstance == NULL || pInstance->cookie != HDQ_INSTANCE_COOKIE || 
; 1025 :         pBuffer == NULL || size <= 1) 

  01a5c	e59d3018	 ldr         r3, [sp, #0x18]
  01a60	e3530000	 cmp         r3, #0
  01a64	0a00000a	 beq         |$LN17@HDQ_Read|
  01a68	e59d3018	 ldr         r3, [sp, #0x18]
  01a6c	e5932000	 ldr         r2, [r3]
  01a70	e59f33fc	 ldr         r3, [pc, #0x3FC]
  01a74	e1520003	 cmp         r2, r3
  01a78	1a000005	 bne         |$LN17@HDQ_Read|
  01a7c	e59d3060	 ldr         r3, [sp, #0x60]
  01a80	e3530000	 cmp         r3, #0
  01a84	0a000002	 beq         |$LN17@HDQ_Read|
  01a88	e59d3064	 ldr         r3, [sp, #0x64]
  01a8c	e3530001	 cmp         r3, #1
  01a90	8a00000c	 bhi         |$LN18@HDQ_Read|
  01a94		 |$LN17@HDQ_Read|

; 1026 :         {
; 1027 :         DEBUGMSG(ZONE_ERROR && ZONE_HDQ, (L"ERROR! HDQ_Read: "
; 1028 :             L"Incorrect context paramer\r\n"
; 1029 :             ));

  01a94	e59f33b4	 ldr         r3, [pc, #0x3B4]
  01a98	e5933440	 ldr         r3, [r3, #0x440]
  01a9c	e3130902	 tst         r3, #2, 18
  01aa0	0a000004	 beq         |$LN23@HDQ_Read|
  01aa4	e59f03c4	 ldr         r0, [pc, #0x3C4]
  01aa8	eb000000	 bl          NKDbgPrintfW
  01aac	e3a03001	 mov         r3, #1
  01ab0	e58d302c	 str         r3, [sp, #0x2C]
  01ab4	ea000001	 b           |$LN24@HDQ_Read|
  01ab8		 |$LN23@HDQ_Read|
  01ab8	e3a03000	 mov         r3, #0
  01abc	e58d302c	 str         r3, [sp, #0x2C]
  01ac0		 |$LN24@HDQ_Read|

; 1030 :         goto cleanUp;

  01ac0	ea0000c3	 b           |$LN16@HDQ_Read|
  01ac4	ea0000c2	 b           |$cleanUp$36493|
  01ac8		 |$LN18@HDQ_Read|

; 1031 :         }
; 1032 : 
; 1033 :     // Check if we get correct context
; 1034 :     pDevice = pInstance->pDevice;

  01ac8	e59d3018	 ldr         r3, [sp, #0x18]
  01acc	e2833008	 add         r3, r3, #8
  01ad0	e5933000	 ldr         r3, [r3]
  01ad4	e58d3000	 str         r3, [sp]

; 1035 :     if (pDevice == NULL || pDevice->cookie != HDQ_DEVICE_COOKIE) 

  01ad8	e59d3000	 ldr         r3, [sp]
  01adc	e3530000	 cmp         r3, #0
  01ae0	0a000004	 beq         |$LN14@HDQ_Read|
  01ae4	e59d3000	 ldr         r3, [sp]
  01ae8	e5932000	 ldr         r2, [r3]
  01aec	e59f3378	 ldr         r3, [pc, #0x378]
  01af0	e1520003	 cmp         r2, r3
  01af4	0a00000c	 beq         |$LN15@HDQ_Read|
  01af8		 |$LN14@HDQ_Read|

; 1036 :         {
; 1037 :         DEBUGMSG(ZONE_ERROR && ZONE_HDQ, (L"ERROR: HDQ_Read: "
; 1038 :             L"Incorrect context parameter\r\n"
; 1039 :             ));

  01af8	e59f3350	 ldr         r3, [pc, #0x350]
  01afc	e5933440	 ldr         r3, [r3, #0x440]
  01b00	e3130902	 tst         r3, #2, 18
  01b04	0a000004	 beq         |$LN25@HDQ_Read|
  01b08	e59f0358	 ldr         r0, [pc, #0x358]
  01b0c	eb000000	 bl          NKDbgPrintfW
  01b10	e3a03001	 mov         r3, #1
  01b14	e58d3030	 str         r3, [sp, #0x30]
  01b18	ea000001	 b           |$LN26@HDQ_Read|
  01b1c		 |$LN25@HDQ_Read|
  01b1c	e3a03000	 mov         r3, #0
  01b20	e58d3030	 str         r3, [sp, #0x30]
  01b24		 |$LN26@HDQ_Read|

; 1040 :         goto cleanUp;

  01b24	ea0000aa	 b           |$LN13@HDQ_Read|
  01b28	ea0000a9	 b           |$cleanUp$36493|
  01b2c		 |$LN15@HDQ_Read|

; 1041 :         }
; 1042 : 
; 1043 :     // Get hardware
; 1044 :     pHDQRegs = pDevice->pHDQRegs;

  01b2c	e59d3000	 ldr         r3, [sp]
  01b30	e2833018	 add         r3, r3, #0x18
  01b34	e5933000	 ldr         r3, [r3]
  01b38	e58d3020	 str         r3, [sp, #0x20]

; 1045 :     EnterCriticalSection(&pDevice->cs);

  01b3c	e59d3000	 ldr         r3, [sp]
  01b40	e2830024	 add         r0, r3, #0x24
  01b44	eb000000	 bl          EnterCriticalSection

; 1046 :     bLocked = TRUE;

  01b48	e3a03001	 mov         r3, #1
  01b4c	e58d300c	 str         r3, [sp, #0xC]

; 1047 : 
; 1048 :     // Make sure that clock is present
; 1049 :     SetHDQPower(pDevice, D0);

  01b50	e3a01000	 mov         r1, #0
  01b54	e59d0000	 ldr         r0, [sp]
  01b58	eb000000	 bl          |?SetHDQPower@@YAHPAUDevice_t@@W4_CEDEVICE_POWER_STATE@@@Z|

; 1050 : 
; 1051 :     // Clear the interrupt.
; 1052 :     status = INREG32(&pHDQRegs->INT_STATUS);

  01b5c	e59d3020	 ldr         r3, [sp, #0x20]
  01b60	e2833010	 add         r3, r3, #0x10
  01b64	e5933000	 ldr         r3, [r3]
  01b68	e58d301c	 str         r3, [sp, #0x1C]

; 1053 :     InterruptDone(pDevice->sysIntr);

  01b6c	e59d3000	 ldr         r3, [sp]
  01b70	e2833038	 add         r3, r3, #0x38
  01b74	e5930000	 ldr         r0, [r3]
  01b78	eb000000	 bl          InterruptDone

; 1054 :     DEBUGMSG(ZONE_INFO, (L"HDQ_Read: "
; 1055 :         L"Interrupt status (1) was 0x%02x\r\n", status
; 1056 :         ));

  01b7c	e59f32cc	 ldr         r3, [pc, #0x2CC]
  01b80	e5933440	 ldr         r3, [r3, #0x440]
  01b84	e3130010	 tst         r3, #0x10
  01b88	0a000005	 beq         |$LN27@HDQ_Read|
  01b8c	e59d101c	 ldr         r1, [sp, #0x1C]
  01b90	e59f02cc	 ldr         r0, [pc, #0x2CC]
  01b94	eb000000	 bl          NKDbgPrintfW
  01b98	e3a03001	 mov         r3, #1
  01b9c	e58d3034	 str         r3, [sp, #0x34]
  01ba0	ea000001	 b           |$LN28@HDQ_Read|
  01ba4		 |$LN27@HDQ_Read|
  01ba4	e3a03000	 mov         r3, #0
  01ba8	e58d3034	 str         r3, [sp, #0x34]
  01bac		 |$LN28@HDQ_Read|

; 1057 : 
; 1058 :     // send command to slave device
; 1059 :     TransmitBreak(pInstance);

  01bac	e59d0018	 ldr         r0, [sp, #0x18]
  01bb0	eb000000	 bl          |?TransmitBreak@@YAXPAUInstance_t@@@Z|

; 1060 :     if (TransmitCommand(pInstance, pData[0], &status) == FALSE)

  01bb4	e28d201c	 add         r2, sp, #0x1C
  01bb8	e59d3004	 ldr         r3, [sp, #4]
  01bbc	e5d31000	 ldrb        r1, [r3]
  01bc0	e59d0018	 ldr         r0, [sp, #0x18]
  01bc4	eb000000	 bl          |?TransmitCommand@@YAHPAUInstance_t@@EPAK@Z|
  01bc8	e58d0038	 str         r0, [sp, #0x38]
  01bcc	e59d3038	 ldr         r3, [sp, #0x38]
  01bd0	e3530000	 cmp         r3, #0
  01bd4	1a000001	 bne         |$LN12@HDQ_Read|
  01bd8	ea00007d	 b           |$LN11@HDQ_Read|

; 1061 :         {
; 1062 :         goto cleanUp;

  01bdc	ea00007c	 b           |$cleanUp$36493|
  01be0		 |$LN12@HDQ_Read|

; 1063 :         }
; 1064 : 
; 1065 :     // setup mask for read
; 1066 :     mask = HDQ_CTRL_GO | HDQ_CTRL_READ | 
; 1067 :            HDQ_CTRL_CLOCK_ENABLE | pInstance->mode; 

  01be0	e59d3018	 ldr         r3, [sp, #0x18]
  01be4	e2833004	 add         r3, r3, #4
  01be8	e5933000	 ldr         r3, [r3]
  01bec	e3833032	 orr         r3, r3, #0x32
  01bf0	e58d3014	 str         r3, [sp, #0x14]

; 1068 : 
; 1069 :     for (i = 1; i < size; ++i)

  01bf4	e3a03001	 mov         r3, #1
  01bf8	e58d3010	 str         r3, [sp, #0x10]
  01bfc	ea000002	 b           |$LN10@HDQ_Read|
  01c00		 |$LN9@HDQ_Read|
  01c00	e59d3010	 ldr         r3, [sp, #0x10]
  01c04	e2833001	 add         r3, r3, #1
  01c08	e58d3010	 str         r3, [sp, #0x10]
  01c0c		 |$LN10@HDQ_Read|
  01c0c	e59d2010	 ldr         r2, [sp, #0x10]
  01c10	e59d3064	 ldr         r3, [sp, #0x64]
  01c14	e1520003	 cmp         r2, r3
  01c18	2a000065	 bcs         |$LN8@HDQ_Read|

; 1070 :         {
; 1071 :         // it's possible to receive data soon after transmit resulting
; 1072 :         // in both receive and transmit flags being set.  So need to
; 1073 :         // check if data was recieved.
; 1074 :         if ((status & HDQ_INT_RX_COMPLETE) == 0)

  01c1c	e59d301c	 ldr         r3, [sp, #0x1C]
  01c20	e3130002	 tst         r3, #2
  01c24	1a000027	 bne         |$LN7@HDQ_Read|

; 1075 :             {
; 1076 :             // initiate receive
; 1077 :             OUTREG32(&pHDQRegs->CTRL_STATUS, mask);

  01c28	e59d3020	 ldr         r3, [sp, #0x20]
  01c2c	e283200c	 add         r2, r3, #0xC
  01c30	e59d3014	 ldr         r3, [sp, #0x14]
  01c34	e5823000	 str         r3, [r2]

; 1078 :             if (WaitForSingleObject(pDevice->hIntrEvent, 
; 1079 :                 pDevice->rxTimeout) == WAIT_TIMEOUT)

  01c38	e59d3000	 ldr         r3, [sp]
  01c3c	e2833014	 add         r3, r3, #0x14
  01c40	e5931000	 ldr         r1, [r3]
  01c44	e59d3000	 ldr         r3, [sp]
  01c48	e283303c	 add         r3, r3, #0x3C
  01c4c	e5930000	 ldr         r0, [r3]
  01c50	eb000000	 bl          WaitForSingleObject
  01c54	e58d003c	 str         r0, [sp, #0x3C]
  01c58	e59d203c	 ldr         r2, [sp, #0x3C]
  01c5c	e3a03c01	 mov         r3, #1, 24
  01c60	e3833002	 orr         r3, r3, #2
  01c64	e1520003	 cmp         r2, r3
  01c68	1a00000e	 bne         |$LN6@HDQ_Read|

; 1080 :                 {
; 1081 :                 DEBUGMSG(ZONE_ERROR && ZONE_HDQ, (L"ERROR: HDQ_Read: "
; 1082 :                     L"Timeout in Rx\r\n"
; 1083 :                     ));

  01c6c	e59f31dc	 ldr         r3, [pc, #0x1DC]
  01c70	e5933440	 ldr         r3, [r3, #0x440]
  01c74	e3130902	 tst         r3, #2, 18
  01c78	0a000004	 beq         |$LN29@HDQ_Read|
  01c7c	e59f01dc	 ldr         r0, [pc, #0x1DC]
  01c80	eb000000	 bl          NKDbgPrintfW
  01c84	e3a03001	 mov         r3, #1
  01c88	e58d3040	 str         r3, [sp, #0x40]
  01c8c	ea000001	 b           |$LN30@HDQ_Read|
  01c90		 |$LN29@HDQ_Read|
  01c90	e3a03000	 mov         r3, #0
  01c94	e58d3040	 str         r3, [sp, #0x40]
  01c98		 |$LN30@HDQ_Read|

; 1084 : 
; 1085 :                 TransmitBreak(pInstance);

  01c98	e59d0018	 ldr         r0, [sp, #0x18]
  01c9c	eb000000	 bl          |?TransmitBreak@@YAXPAUInstance_t@@@Z|
  01ca0	ea00004b	 b           |$LN5@HDQ_Read|

; 1086 :                 goto cleanUp;

  01ca4	ea00004a	 b           |$cleanUp$36493|
  01ca8		 |$LN6@HDQ_Read|

; 1087 :                 
; 1088 :                 }
; 1089 : 
; 1090 :             // Clear interrupt
; 1091 :             status = INREG32(&pHDQRegs->INT_STATUS);

  01ca8	e59d3020	 ldr         r3, [sp, #0x20]
  01cac	e2833010	 add         r3, r3, #0x10
  01cb0	e5933000	 ldr         r3, [r3]
  01cb4	e58d301c	 str         r3, [sp, #0x1C]

; 1092 :             InterruptDone(pDevice->sysIntr);

  01cb8	e59d3000	 ldr         r3, [sp]
  01cbc	e2833038	 add         r3, r3, #0x38
  01cc0	e5930000	 ldr         r0, [r3]
  01cc4	eb000000	 bl          InterruptDone
  01cc8		 |$LN7@HDQ_Read|

; 1093 :             }
; 1094 :         
; 1095 :         // Verify interrupt source
; 1096 :         if ((status & HDQ_INT_RX_COMPLETE) == 0) 

  01cc8	e59d301c	 ldr         r3, [sp, #0x1C]
  01ccc	e3130002	 tst         r3, #2
  01cd0	1a00000f	 bne         |$LN4@HDQ_Read|

; 1097 :             {
; 1098 :             DEBUGMSG(ZONE_ERROR && ZONE_HDQ, (L"ERROR: HDQ_Read: "
; 1099 :                 L"RX complete expected (0x%02x)\r\n", status
; 1100 :                 ));

  01cd4	e59f3174	 ldr         r3, [pc, #0x174]
  01cd8	e5933440	 ldr         r3, [r3, #0x440]
  01cdc	e3130902	 tst         r3, #2, 18
  01ce0	0a000005	 beq         |$LN31@HDQ_Read|
  01ce4	e59d101c	 ldr         r1, [sp, #0x1C]
  01ce8	e59f016c	 ldr         r0, [pc, #0x16C]
  01cec	eb000000	 bl          NKDbgPrintfW
  01cf0	e3a03001	 mov         r3, #1
  01cf4	e58d3044	 str         r3, [sp, #0x44]
  01cf8	ea000001	 b           |$LN32@HDQ_Read|
  01cfc		 |$LN31@HDQ_Read|
  01cfc	e3a03000	 mov         r3, #0
  01d00	e58d3044	 str         r3, [sp, #0x44]
  01d04		 |$LN32@HDQ_Read|

; 1101 : 
; 1102 :             TransmitBreak(pInstance);

  01d04	e59d0018	 ldr         r0, [sp, #0x18]
  01d08	eb000000	 bl          |?TransmitBreak@@YAXPAUInstance_t@@@Z|
  01d0c	ea000030	 b           |$LN3@HDQ_Read|

; 1103 :             goto cleanUp;

  01d10	ea00002f	 b           |$cleanUp$36493|
  01d14		 |$LN4@HDQ_Read|

; 1104 :             }
; 1105 :             
; 1106 :         DEBUGMSG(ZONE_INFO, (L"INFO: HDQ_Read: "
; 1107 :             L"Read status = 0x%02X\r\n", status
; 1108 :             ));

  01d14	e59f3134	 ldr         r3, [pc, #0x134]
  01d18	e5933440	 ldr         r3, [r3, #0x440]
  01d1c	e3130010	 tst         r3, #0x10
  01d20	0a000005	 beq         |$LN33@HDQ_Read|
  01d24	e59d101c	 ldr         r1, [sp, #0x1C]
  01d28	e59f0128	 ldr         r0, [pc, #0x128]
  01d2c	eb000000	 bl          NKDbgPrintfW
  01d30	e3a03001	 mov         r3, #1
  01d34	e58d3048	 str         r3, [sp, #0x48]
  01d38	ea000001	 b           |$LN34@HDQ_Read|
  01d3c		 |$LN33@HDQ_Read|
  01d3c	e3a03000	 mov         r3, #0
  01d40	e58d3048	 str         r3, [sp, #0x48]
  01d44		 |$LN34@HDQ_Read|

; 1109 :         
; 1110 :         // read data
; 1111 :         pData[i] = (UINT8)INREG32(&pHDQRegs->RX_DATA);

  01d44	e59d3020	 ldr         r3, [sp, #0x20]
  01d48	e2833008	 add         r3, r3, #8
  01d4c	e5933000	 ldr         r3, [r3]
  01d50	e20310ff	 and         r1, r3, #0xFF
  01d54	e59d2004	 ldr         r2, [sp, #4]
  01d58	e59d3010	 ldr         r3, [sp, #0x10]
  01d5c	e0823003	 add         r3, r2, r3
  01d60	e5c31000	 strb        r1, [r3]

; 1112 :         DEBUGMSG(ZONE_INFO, (L"INFO: HDQ_Read: "
; 1113 :             L"Read data[i] = 0x%02X\r\n", i, pData[i]
; 1114 :             ));

  01d64	e59f30e4	 ldr         r3, [pc, #0xE4]
  01d68	e5933440	 ldr         r3, [r3, #0x440]
  01d6c	e3130010	 tst         r3, #0x10
  01d70	0a00000a	 beq         |$LN35@HDQ_Read|
  01d74	e59d2004	 ldr         r2, [sp, #4]
  01d78	e59d3010	 ldr         r3, [sp, #0x10]
  01d7c	e0823003	 add         r3, r2, r3
  01d80	e5d33000	 ldrb        r3, [r3]
  01d84	e1a02003	 mov         r2, r3
  01d88	e59d1010	 ldr         r1, [sp, #0x10]
  01d8c	e59f00c0	 ldr         r0, [pc, #0xC0]
  01d90	eb000000	 bl          NKDbgPrintfW
  01d94	e3a03001	 mov         r3, #1
  01d98	e58d304c	 str         r3, [sp, #0x4C]
  01d9c	ea000001	 b           |$LN36@HDQ_Read|
  01da0		 |$LN35@HDQ_Read|
  01da0	e3a03000	 mov         r3, #0
  01da4	e58d304c	 str         r3, [sp, #0x4C]
  01da8		 |$LN36@HDQ_Read|

; 1115 :         
; 1116 :         // reset status to force read request
; 1117 :         status = 0;

  01da8	e3a03000	 mov         r3, #0
  01dac	e58d301c	 str         r3, [sp, #0x1C]

; 1118 :         }

  01db0	eaffff92	 b           |$LN9@HDQ_Read|
  01db4		 |$LN8@HDQ_Read|

; 1119 : 
; 1120 :     // disable clock
; 1121 :     OUTREG32(&pHDQRegs->CTRL_STATUS, pInstance->mode);

  01db4	e59d3018	 ldr         r3, [sp, #0x18]
  01db8	e2831004	 add         r1, r3, #4
  01dbc	e59d3020	 ldr         r3, [sp, #0x20]
  01dc0	e283200c	 add         r2, r3, #0xC
  01dc4	e5913000	 ldr         r3, [r1]
  01dc8	e5823000	 str         r3, [r2]

; 1122 :     
; 1123 :     // Done
; 1124 :     rc = TRUE;

  01dcc	e3a03001	 mov         r3, #1
  01dd0	e58d3008	 str         r3, [sp, #8]
  01dd4		 |$LN3@HDQ_Read|
  01dd4		 |$LN5@HDQ_Read|
  01dd4		 |$LN11@HDQ_Read|
  01dd4		 |$LN13@HDQ_Read|
  01dd4		 |$LN16@HDQ_Read|
  01dd4		 |$cleanUp$36493|

; 1125 : 
; 1126 : cleanUp:
; 1127 :     if(pDevice != NULL) 

  01dd4	e59d3000	 ldr         r3, [sp]
  01dd8	e3530000	 cmp         r3, #0
  01ddc	0a000014	 beq         |$LN2@HDQ_Read|

; 1128 :     {
; 1129 :        SetHDQPower(pDevice, D4);

  01de0	e3a01004	 mov         r1, #4
  01de4	e59d0000	 ldr         r0, [sp]
  01de8	eb000000	 bl          |?SetHDQPower@@YAHPAUDevice_t@@W4_CEDEVICE_POWER_STATE@@@Z|

; 1130 :     
; 1131 :        if (bLocked == TRUE) LeaveCriticalSection(&pDevice->cs);

  01dec	e59d300c	 ldr         r3, [sp, #0xC]
  01df0	e3530001	 cmp         r3, #1
  01df4	1a000002	 bne         |$LN1@HDQ_Read|
  01df8	e59d3000	 ldr         r3, [sp]
  01dfc	e2830024	 add         r0, r3, #0x24
  01e00	eb000000	 bl          LeaveCriticalSection
  01e04		 |$LN1@HDQ_Read|

; 1132 :        DEBUGMSG(ZONE_FUNCTION, (L"-HDQ_Read(rc = %d)\r\n", rc));

  01e04	e59f3044	 ldr         r3, [pc, #0x44]
  01e08	e5933440	 ldr         r3, [r3, #0x440]
  01e0c	e3130008	 tst         r3, #8
  01e10	0a000005	 beq         |$LN37@HDQ_Read|
  01e14	e59d1008	 ldr         r1, [sp, #8]
  01e18	e59f002c	 ldr         r0, [pc, #0x2C]
  01e1c	eb000000	 bl          NKDbgPrintfW
  01e20	e3a03001	 mov         r3, #1
  01e24	e58d3050	 str         r3, [sp, #0x50]
  01e28	ea000001	 b           |$LN38@HDQ_Read|
  01e2c		 |$LN37@HDQ_Read|
  01e2c	e3a03000	 mov         r3, #0
  01e30	e58d3050	 str         r3, [sp, #0x50]
  01e34		 |$LN38@HDQ_Read|
  01e34		 |$LN2@HDQ_Read|

; 1133 :     }
; 1134 :     return rc;

  01e34	e59d3008	 ldr         r3, [sp, #8]
  01e38	e58d3024	 str         r3, [sp, #0x24]

; 1135 : }

  01e3c	e59d0024	 ldr         r0, [sp, #0x24]
  01e40	e28dd054	 add         sp, sp, #0x54
  01e44	e89d6000	 ldmia       sp, {sp, lr}
  01e48	e12fff1e	 bx          lr
  01e4c		 |$LN42@HDQ_Read|
  01e4c		 |$LN43@HDQ_Read|
  01e4c	00000000	 DCD         |??_C@_1CK@EEIDAJAJ@?$AA?9?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01e50		 |$LN44@HDQ_Read|
  01e50	00000000	 DCD         |dpCurSettings|
  01e54		 |$LN45@HDQ_Read|
  01e54	00000000	 DCD         |??_C@_1FA@JGIJIMNP@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAd?$AAa?$AAt?$AAa?$AA?$FL?$AAi?$AA?$FN?$AA?5?$AA?$DN?$AA?5?$AA0@|
  01e58		 |$LN46@HDQ_Read|
  01e58	00000000	 DCD         |??_C@_1EO@CKFCNIA@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx@|
  01e5c		 |$LN47@HDQ_Read|
  01e5c	00000000	 DCD         |??_C@_1GC@KJINGCIC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAR?$AAX?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?5?$AAe?$AAx?$AAp@|
  01e60		 |$LN48@HDQ_Read|
  01e60	00000000	 DCD         |??_C@_1EC@EDPPAOKN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAi?$AAn?$AA?5?$AAR?$AAx?$AA?$AN?$AA?6@|
  01e64		 |$LN49@HDQ_Read|
  01e64	00000000	 DCD         |??_C@_1FI@OBNDMAJK@?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CI?$AA1?$AA?$CJ?$AA?5?$AAw@|
  01e68		 |$LN50@HDQ_Read|
  01e68	00000000	 DCD         |??_C@_1FO@EFNENMIL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe@|
  01e6c		 |$LN51@HDQ_Read|
  01e6c	68647144	 DCD         0x68647144
  01e70		 |$LN52@HDQ_Read|
  01e70	00000000	 DCD         |??_C@_1FK@EIAJFCNL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$CB?$AA?5?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe@|
  01e74		 |$LN53@HDQ_Read|
  01e74	68647149	 DCD         0x68647149
  01e78		 |$LN54@HDQ_Read|
  01e78	00000000	 DCD         |??_C@_1EI@BHPDGECK@?$AA?$CL?$AAH?$AAD?$AAQ?$AA_?$AAR?$AAe?$AAa?$AAd?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@|
  01e7c		 |$M36952|

			 ENDP  ; |HDQ_Read|

	EXPORT	|DllMain|
	IMPORT	|DisableThreadLibraryCalls|
	IMPORT	|RegisterDbgZones|

  00068			 AREA	 |.pdata|, PDATA
|$T36973| DCD	|$LN8@DllMain|
	DCD	0x40001404
; Function compile flags: /Odtp

  01e7c			 AREA	 |.text|, CODE, ARM

  01e7c		 |DllMain| PROC

; 1151 : {

  01e7c		 |$LN8@DllMain|
  01e7c	e1a0c00d	 mov         r12, sp
  01e80	e92d0007	 stmdb       sp!, {r0 - r2}
  01e84	e92d5000	 stmdb       sp!, {r12, lr}
  01e88	e24dd004	 sub         sp, sp, #4
  01e8c		 |$M36970|

; 1152 :     
; 1153 :     UNREFERENCED_PARAMETER(pReserved);
; 1154 : 
; 1155 :     switch (reason)

  01e8c	e59d3010	 ldr         r3, [sp, #0x10]
  01e90	e3530001	 cmp         r3, #1
  01e94	0a000000	 beq         |$LN1@DllMain|
  01e98	ea000004	 b           |$LN2@DllMain|
  01e9c		 |$LN1@DllMain|

; 1156 :         {
; 1157 :         case DLL_PROCESS_ATTACH:
; 1158 :             RETAILREGISTERZONES((HMODULE)hDLL);

  01e9c	e59f1024	 ldr         r1, [pc, #0x24]
  01ea0	e59d000c	 ldr         r0, [sp, #0xC]
  01ea4	eb000000	 bl          RegisterDbgZones

; 1159 :             DisableThreadLibraryCalls((HMODULE)hDLL);

  01ea8	e59d000c	 ldr         r0, [sp, #0xC]
  01eac	eb000000	 bl          DisableThreadLibraryCalls
  01eb0		 |$LN2@DllMain|

; 1160 :             break;
; 1161 :         }
; 1162 :     return TRUE;

  01eb0	e3a03001	 mov         r3, #1
  01eb4	e58d3000	 str         r3, [sp]

; 1163 : }

  01eb8	e59d0000	 ldr         r0, [sp]
  01ebc	e28dd004	 add         sp, sp, #4
  01ec0	e89d6000	 ldmia       sp, {sp, lr}
  01ec4	e12fff1e	 bx          lr
  01ec8		 |$LN9@DllMain|
  01ec8		 |$LN10@DllMain|
  01ec8	00000000	 DCD         |dpCurSettings|
  01ecc		 |$M36971|

			 ENDP  ; |DllMain|

	END
