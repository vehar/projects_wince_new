; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\SDHC\BASE\sdhc.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1BG@PCNFFOOE@?$AAS?$AAl?$AAo?$AAt?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@EJNOAJAN@?$AAS?$AAD?$AAC?$AAl?$AAo?$AAc?$AAk?$AAM?$AAo?$AAd?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@CNGMEHNJ@?$AAS?$AAD?$AAH?$AAi?$AAg?$AAh?$AAS?$AAp?$AAe?$AAe?$AAd?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@JHFMHONC@?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AAS?$AAi?$AAz?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@KLIJNKLI@?$AAC?$AAa?$AAr?$AAd?$AAW?$AAr?$AAi?$AAt?$AAe?$AAP?$AAr?$AAo?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@HDJCPCIJ@?$AAC?$AAa?$AAr?$AAd?$AAW?$AAP?$AAG?$AAP?$AAI?$AAO?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@MKPLCKIN@?$AAC?$AAa?$AAr?$AAd?$AAI?$AAn?$AAs?$AAe?$AAr?$AAt?$AAe?$AAd?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@LKNMDJEA@?$AAC?$AAa?$AAr?$AAd?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAG?$AAP?$AAI?$AAO?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@NNIPIGOJ@?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@LMBBBPNF@?$AAR?$AAe?$AAa?$AAd?$AAW?$AAr?$AAi?$AAt?$AAe?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@OOJEOPHC@?$AAB?$AAa?$AAs?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk?$AAF?$AAr?$AAe?$AAq?$AAu?$AAe?$AAn?$AAc?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@NAMMPMDB@?$AAC?$AAD?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@KBGNDCFC@?$AAS?$AAD?$AAI?$AAO?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@BPLBIFEM@?$AAD?$AAT?$AAO?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@HKGILLAM@?$AAC?$AAT?$AAO?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@HBIKPBAC@?$AAS?$AAd?$AAM?$AAe?$AAm?$AA4?$AAB?$AAi?$AAt?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@JDJLDHKA@?$AAS?$AAd?$AAi?$AAo?$AA4?$AAB?$AAi?$AAt?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@KFEHNIN@?$AAL?$AAo?$AAw?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAS?$AAl?$AAo?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@MAOJDGGP@?$AAF?$AAa?$AAs?$AAt?$AAP?$AAa?$AAt?$AAh?$AA_?$AAS?$AAD?$AAI?$AAO?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@GBHAIPGE@?$AAF?$AAa?$AAs?$AAt?$AAP?$AAa?$AAt?$AAh?$AA_?$AAS?$AAD?$AAM?$AAE?$AAM?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@MJKCNHDK@?$AAS?$AAD?$AAI?$AAO?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@BIPPPOIB@?$AAN?$AAo?$AAn?$AAS?$AAD?$AAI?$AAO?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?szHexBuf@@3PADA| [ DATA ]		; szHexBuf
	EXPORT	|?m_cmdArrSize@CSDIOControllerBase@@2KB| [ DATA ] ; CSDIOControllerBase::m_cmdArrSize
	EXPORT	|?gwaCMD@@3PAUCMD@@A| [ DATA ]		; gwaCMD
	EXPORT	|?gwaCMD60_HS@@3UCMD@@A| [ DATA ]	; gwaCMD60_HS

  00000			 AREA	 |.bss|, NOINIT
|?szHexBuf@@3PADA| % 0x400				; szHexBuf

  00000			 AREA	 |.data|, DATA
|?gwaCMD@@3PAUCMD@@A| DCB 0x1				; gwaCMD
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x0
	DCB	0x0
	DCB	0x1
	%	1
	DCD	0x120000
	DCB	0x1
	DCB	0x0
	DCB	0x1
	%	1
	DCD	0x90000
	DCB	0x1
	DCB	0x0
	DCB	0x1
	%	1
	DCD	0x20000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x2
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x20000
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x30000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x20000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x20000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x10000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x10000
	DCB	0x0
	DCB	0x0
	DCB	0x1
	%	1
	DCD	0x220010
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0xc30000
	DCB	0x1
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x20000
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x1a0000
	DCB	0x1
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x220032
	DCB	0x1
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x220032
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x0
	DCB	0x1
	DCB	0x1
	%	1
	DCD	0x230000
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x20010
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x1
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x220022
	DCB	0x1
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x220022
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x20000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x20000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x30000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x30000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x20010
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x20000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x20000
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x1
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x30000
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x20000
	DCB	0x1
	DCB	0x1
	DCB	0x1
	%	1
	DCD	0x20000
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x20000
	DCB	0x1
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x20000
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x0
	DCB	0x1
	DCB	0x0
	%	1
	DCD	0x220000
	DCB	0x2
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x20000
	DCB	0x2
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x220000
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x20000
	DCB	0x1
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x20000
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x0
	DCB	0x0
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x0
|?gwaCMD60_HS@@3UCMD@@A| DCB 0x1			; gwaCMD60_HS
	DCB	0x0
	DCB	0x0
	%	1
	DCD	0x220032

  00000			 AREA	 |.rdata|, DATA, READONLY
|s_deviceRegParams| DCD |??_C@_1CO@BIPPPOIB@?$AAN?$AAo?$AAn?$AAS?$AAD?$AAI?$AAO?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x1b0
	DCD	0x4
	DCD	0x1
	DCD	|??_C@_1CI@MJKCNHDK@?$AAS?$AAD?$AAI?$AAO?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x1b4
	DCD	0x4
	DCD	0x7d0
	DCD	|??_C@_1BO@GBHAIPGE@?$AAF?$AAa?$AAs?$AAt?$AAP?$AAa?$AAt?$AAh?$AA_?$AAS?$AAD?$AAM?$AAE?$AAM?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x184
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1BM@MAOJDGGP@?$AAF?$AAa?$AAs?$AAt?$AAP?$AAa?$AAt?$AAh?$AA_?$AAS?$AAD?$AAI?$AAO?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x180
	DCD	0x4
	DCD	0x1
	DCD	|??_C@_1BO@KFEHNIN@?$AAL?$AAo?$AAw?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAS?$AAl?$AAo?$AAt?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x18c
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1CA@JDJLDHKA@?$AAS?$AAd?$AAi?$AAo?$AA4?$AAB?$AAi?$AAt?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x190
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1CC@HBIKPBAC@?$AAS?$AAd?$AAM?$AAe?$AAm?$AA4?$AAB?$AAi?$AAt?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x194
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1BG@HKGILLAM@?$AAC?$AAT?$AAO?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x140
	DCD	0x4
	DCD	0x5
	DCD	|??_C@_1BG@BPLBIFEM@?$AAD?$AAT?$AAO?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x144
	DCD	0x4
	DCD	0x200
	DCD	|??_C@_1BK@KBGNDCFC@?$AAS?$AAD?$AAI?$AAO?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x128
	DCD	0x4
	DCD	0x97
	DCD	|??_C@_1BG@NAMMPMDB@?$AAC?$AAD?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x12c
	DCD	0x4
	DCD	0x98
	DCD	|??_C@_1CG@OOJEOPHC@?$AAB?$AAa?$AAs?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk?$AAF?$AAr?$AAe?$AAq?$AAu?$AAe?$AAn?$AAc?$AAy?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x148
	DCD	0x4
	DCD	0x2dc6c00
	DCD	|??_C@_1CC@LMBBBPNF@?$AAR?$AAe?$AAa?$AAd?$AAW?$AAr?$AAi?$AAt?$AAe?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x150
	DCD	0x4
	DCD	0x2710
	DCD	|??_C@_1BM@NNIPIGOJ@?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAs?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0xe8
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1BO@LKNMDJEA@?$AAC?$AAa?$AAr?$AAd?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAG?$AAP?$AAI?$AAO?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x1e4
	DCD	0x4
	DCD	0xffffffff
	DCD	|??_C@_1CE@MKPLCKIN@?$AAC?$AAa?$AAr?$AAd?$AAI?$AAn?$AAs?$AAe?$AAr?$AAt?$AAe?$AAd?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x1dc
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1BG@HDJCPCIJ@?$AAC?$AAa?$AAr?$AAd?$AAW?$AAP?$AAG?$AAP?$AAI?$AAO?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x1e8
	DCD	0x4
	DCD	0xffffffff
	DCD	|??_C@_1DA@KLIJNKLI@?$AAC?$AAa?$AAr?$AAd?$AAW?$AAr?$AAi?$AAt?$AAe?$AAP?$AAr?$AAo?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x1e0
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1BM@JHFMHONC@?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AAS?$AAi?$AAz?$AAe?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x1fc
	DCD	0x4
	DCD	0x20000
	DCD	|??_C@_1CG@CNGMEHNJ@?$AAS?$AAD?$AAH?$AAi?$AAg?$AAh?$AAS?$AAp?$AAe?$AAe?$AAd?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x198
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1BI@EJNOAJAN@?$AAS?$AAD?$AAC?$AAl?$AAo?$AAc?$AAk?$AAM?$AAo?$AAd?$AAe?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x19c
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1BG@PCNFFOOE@?$AAS?$AAl?$AAo?$AAt?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x170
	DCD	0x4
	DCD	0x1

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@PCNFFOOE@?$AAS?$AAl?$AAo?$AAt?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?$AA@| DCB "S"
	DCB	0x0, "l", 0x0, "o", 0x0, "t", 0x0, "N", 0x0, "u", 0x0, "m"
	DCB	0x0, "b", 0x0, "e", 0x0, "r", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@EJNOAJAN@?$AAS?$AAD?$AAC?$AAl?$AAo?$AAc?$AAk?$AAM?$AAo?$AAd?$AAe?$AA?$AA@| DCB "S"
	DCB	0x0, "D", 0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k"
	DCB	0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@CNGMEHNJ@?$AAS?$AAD?$AAH?$AAi?$AAg?$AAh?$AAS?$AAp?$AAe?$AAe?$AAd?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AA?$AA@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "i", 0x0, "g", 0x0, "h", 0x0, "S"
	DCB	0x0, "p", 0x0, "e", 0x0, "e", 0x0, "d", 0x0, "S", 0x0, "u"
	DCB	0x0, "p", 0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@JHFMHONC@?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AAS?$AAi?$AAz?$AAe?$AA?$AA@| DCB "D"
	DCB	0x0, "M", 0x0, "A", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "S", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@KLIJNKLI@?$AAC?$AAa?$AAr?$AAd?$AAW?$AAr?$AAi?$AAt?$AAe?$AAP?$AAr?$AAo?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| DCB "C"
	DCB	0x0, "a", 0x0, "r", 0x0, "d", 0x0, "W", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "e", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "t"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@HDJCPCIJ@?$AAC?$AAa?$AAr?$AAd?$AAW?$AAP?$AAG?$AAP?$AAI?$AAO?$AA?$AA@| DCB "C"
	DCB	0x0, "a", 0x0, "r", 0x0, "d", 0x0, "W", 0x0, "P", 0x0, "G"
	DCB	0x0, "P", 0x0, "I", 0x0, "O", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@MKPLCKIN@?$AAC?$AAa?$AAr?$AAd?$AAI?$AAn?$AAs?$AAe?$AAr?$AAt?$AAe?$AAd?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| DCB "C"
	DCB	0x0, "a", 0x0, "r", 0x0, "d", 0x0, "I", 0x0, "n", 0x0, "s"
	DCB	0x0, "e", 0x0, "r", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@LKNMDJEA@?$AAC?$AAa?$AAr?$AAd?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAG?$AAP?$AAI?$AAO?$AA?$AA@| DCB "C"
	DCB	0x0, "a", 0x0, "r", 0x0, "d", 0x0, "D", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, "G", 0x0, "P", 0x0, "I"
	DCB	0x0, "O", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@NNIPIGOJ@?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAs?$AA?$AA@| DCB "W"
	DCB	0x0, "a", 0x0, "k", 0x0, "e", 0x0, "u", 0x0, "p", 0x0, "S"
	DCB	0x0, "o", 0x0, "u", 0x0, "r", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@LMBBBPNF@?$AAR?$AAe?$AAa?$AAd?$AAW?$AAr?$AAi?$AAt?$AAe?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, "W", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "e", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@OOJEOPHC@?$AAB?$AAa?$AAs?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk?$AAF?$AAr?$AAe?$AAq?$AAu?$AAe?$AAn?$AAc?$AAy?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "s", 0x0, "e", 0x0, "C", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "k", 0x0, "F", 0x0, "r", 0x0, "e", 0x0, "q"
	DCB	0x0, "u", 0x0, "e", 0x0, "n", 0x0, "c", 0x0, "y", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@NAMMPMDB@?$AAC?$AAD?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| DCB "C"
	DCB	0x0, "D", 0x0, "P", 0x0, "r", 0x0, "i", 0x0, "o", 0x0, "r"
	DCB	0x0, "i", 0x0, "t", 0x0, "y", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@KBGNDCFC@?$AAS?$AAD?$AAI?$AAO?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| DCB "S"
	DCB	0x0, "D", 0x0, "I", 0x0, "O", 0x0, "P", 0x0, "r", 0x0, "i"
	DCB	0x0, "o", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "y", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@BPLBIFEM@?$AAD?$AAT?$AAO?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "D"
	DCB	0x0, "T", 0x0, "O", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@HKGILLAM@?$AAC?$AAT?$AAO?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "C"
	DCB	0x0, "T", 0x0, "O", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@HBIKPBAC@?$AAS?$AAd?$AAM?$AAe?$AAm?$AA4?$AAB?$AAi?$AAt?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?$AA@| DCB "S"
	DCB	0x0, "d", 0x0, "M", 0x0, "e", 0x0, "m", 0x0, "4", 0x0, "B"
	DCB	0x0, "i", 0x0, "t", 0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a"
	DCB	0x0, "b", 0x0, "l", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@JDJLDHKA@?$AAS?$AAd?$AAi?$AAo?$AA4?$AAB?$AAi?$AAt?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?$AA@| DCB "S"
	DCB	0x0, "d", 0x0, "i", 0x0, "o", 0x0, "4", 0x0, "B", 0x0, "i"
	DCB	0x0, "t", 0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@KFEHNIN@?$AAL?$AAo?$AAw?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAS?$AAl?$AAo?$AAt?$AA?$AA@| DCB "L"
	DCB	0x0, "o", 0x0, "w", 0x0, "V", 0x0, "o", 0x0, "l", 0x0, "t"
	DCB	0x0, "a", 0x0, "g", 0x0, "e", 0x0, "S", 0x0, "l", 0x0, "o"
	DCB	0x0, "t", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@MAOJDGGP@?$AAF?$AAa?$AAs?$AAt?$AAP?$AAa?$AAt?$AAh?$AA_?$AAS?$AAD?$AAI?$AAO?$AA?$AA@| DCB "F"
	DCB	0x0, "a", 0x0, "s", 0x0, "t", 0x0, "P", 0x0, "a", 0x0, "t"
	DCB	0x0, "h", 0x0, "_", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@GBHAIPGE@?$AAF?$AAa?$AAs?$AAt?$AAP?$AAa?$AAt?$AAh?$AA_?$AAS?$AAD?$AAM?$AAE?$AAM?$AA?$AA@| DCB "F"
	DCB	0x0, "a", 0x0, "s", 0x0, "t", 0x0, "P", 0x0, "a", 0x0, "t"
	DCB	0x0, "h", 0x0, "_", 0x0, "S", 0x0, "D", 0x0, "M", 0x0, "E"
	DCB	0x0, "M", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@MJKCNHDK@?$AAS?$AAD?$AAI?$AAO?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "S"
	DCB	0x0, "D", 0x0, "I", 0x0, "O", 0x0, "A", 0x0, "c", 0x0, "t"
	DCB	0x0, "i", 0x0, "v", 0x0, "i", 0x0, "t", 0x0, "y", 0x0, "T"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@BIPPPOIB@?$AAN?$AAo?$AAn?$AAS?$AAD?$AAI?$AAO?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "N"
	DCB	0x0, "o", 0x0, "n", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O"
	DCB	0x0, "A", 0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v", 0x0, "i"
	DCB	0x0, "t", 0x0, "y", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|?m_cmdArrSize@CSDIOControllerBase@@2KB| DCD 0x20	; CSDIOControllerBase::m_cmdArrSize
	EXPORT	|??_7CSDIOControllerBase@@6B@| [ DATA ]	; CSDIOControllerBase::`vftable'
	EXPORT	|??0CSDIOControllerBase@@QAA@XZ|	; CSDIOControllerBase::CSDIOControllerBase
	EXPORT	|?InterpretCapabilities@CSDIOControllerBase@@UAAHXZ| ; CSDIOControllerBase::InterpretCapabilities
	IMPORT	|InitializeCriticalSection|
	IMPORT	|_purecall|

  00000			 AREA	 |.pdata|, PDATA
|$T45082| DCD	|$LN5@CSDIOContr|
	DCD	0x4000cf04
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\sdhc\base\sdhc.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CSDIOControllerBase@@6B@| DCD |_purecall|		; CSDIOControllerBase::`vftable'
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|?InterpretCapabilities@CSDIOControllerBase@@UAAHXZ|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CSDIOControllerBase@@QAA@XZ| PROC	; CSDIOControllerBase::CSDIOControllerBase

; 267  : {

  00000		 |$LN5@CSDIOContr|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M45079|
  00010	e59f2320	 ldr         r2, [pc, #0x320]
  00014	e59d3010	 ldr         r3, [sp, #0x10]
  00018	e5832000	 str         r2, [r3]

; 268  :     InitializeCriticalSection( &m_critSec );

  0001c	e59d3010	 ldr         r3, [sp, #0x10]
  00020	e28300b0	 add         r0, r3, #0xB0
  00024	eb000000	 bl          InitializeCriticalSection

; 269  :     InitializeCriticalSection( &m_powerCS );

  00028	e59d3010	 ldr         r3, [sp, #0x10]
  0002c	e28300c4	 add         r0, r3, #0xC4
  00030	eb000000	 bl          InitializeCriticalSection

; 270  :     m_fSDIOInterruptInService = FALSE;

  00034	e59d3010	 ldr         r3, [sp, #0x10]
  00038	e28320d8	 add         r2, r3, #0xD8
  0003c	e3a03000	 mov         r3, #0
  00040	e5823000	 str         r3, [r2]

; 271  :     m_fFirstTime = TRUE;

  00044	e59d3010	 ldr         r3, [sp, #0x10]
  00048	e2832f55	 add         r2, r3, #0x55, 30
  0004c	e3a03001	 mov         r3, #1
  00050	e5823000	 str         r3, [r2]

; 272  :     m_hControllerISTEvent = NULL;

  00054	e59d3010	 ldr         r3, [sp, #0x10]
  00058	e2832f46	 add         r2, r3, #0x46, 30
  0005c	e3a03000	 mov         r3, #0
  00060	e5823000	 str         r3, [r2]

; 273  :     m_htControllerIST = NULL;

  00064	e59d3010	 ldr         r3, [sp, #0x10]
  00068	e2832f47	 add         r2, r3, #0x47, 30
  0006c	e3a03000	 mov         r3, #0
  00070	e5823000	 str         r3, [r2]

; 274  :     m_dwControllerSysIntr = SYSINTR_UNDEFINED;

  00074	e59d3010	 ldr         r3, [sp, #0x10]
  00078	e2832f4d	 add         r2, r3, #0x4D, 30
  0007c	e3e03000	 mvn         r3, #0
  00080	e5823000	 str         r3, [r2]

; 275  :     m_hCardDetectEvent = NULL;

  00084	e59d3010	 ldr         r3, [sp, #0x10]
  00088	e2832e12	 add         r2, r3, #0x12, 28
  0008c	e3a03000	 mov         r3, #0
  00090	e5823000	 str         r3, [r2]

; 276  :     m_htCardDetectIST = NULL;

  00094	e59d3010	 ldr         r3, [sp, #0x10]
  00098	e2832f49	 add         r2, r3, #0x49, 30
  0009c	e3a03000	 mov         r3, #0
  000a0	e5823000	 str         r3, [r2]

; 277  :     m_fAppCmdMode = FALSE;

  000a4	e59d3010	 ldr         r3, [sp, #0x10]
  000a8	e2832f45	 add         r2, r3, #0x45, 30
  000ac	e3a03000	 mov         r3, #0
  000b0	e5823000	 str         r3, [r2]

; 278  : 
; 279  :     m_pbRegisters = NULL;

  000b4	e59d3010	 ldr         r3, [sp, #0x10]
  000b8	e2832f57	 add         r2, r3, #0x57, 30
  000bc	e3a03000	 mov         r3, #0
  000c0	e5823000	 str         r3, [r2]

; 280  :     m_fCardPresent = FALSE;

  000c4	e59d3010	 ldr         r3, [sp, #0x10]
  000c8	e28320f0	 add         r2, r3, #0xF0
  000cc	e3a03000	 mov         r3, #0
  000d0	e5823000	 str         r3, [r2]

; 281  :     m_fSDIOInterruptsEnabled = FALSE;

  000d4	e59d3010	 ldr         r3, [sp, #0x10]
  000d8	e28320f4	 add         r2, r3, #0xF4
  000dc	e3a03000	 mov         r3, #0
  000e0	e5823000	 str         r3, [r2]

; 282  :     m_pDmaBuffer = NULL;

  000e4	e59d3010	 ldr         r3, [sp, #0x10]
  000e8	e28320fc	 add         r2, r3, #0xFC
  000ec	e3a03000	 mov         r3, #0
  000f0	e5823000	 str         r3, [r2]

; 283  :     m_pCachedDmaBuffer = NULL;

  000f4	e59d3010	 ldr         r3, [sp, #0x10]
  000f8	e2832c01	 add         r2, r3, #1, 24
  000fc	e3a03000	 mov         r3, #0
  00100	e5823000	 str         r3, [r2]

; 284  :     m_pDmaBufferPhys.QuadPart = 0;

  00104	e59d3010	 ldr         r3, [sp, #0x10]
  00108	e2833f42	 add         r3, r3, #0x42, 30
  0010c	e58d3004	 str         r3, [sp, #4]
  00110	e59d2004	 ldr         r2, [sp, #4]
  00114	e3a03000	 mov         r3, #0
  00118	e5823000	 str         r3, [r2]
  0011c	e59d2004	 ldr         r2, [sp, #4]
  00120	e3a03000	 mov         r3, #0
  00124	e5823004	 str         r3, [r2, #4]

; 285  : 
; 286  :     m_dwMaxTimeout = DEFAULT_TIMEOUT_VALUE;

  00128	e59d3010	 ldr         r3, [sp, #0x10]
  0012c	e2832e15	 add         r2, r3, #0x15, 28
  00130	e3a03c27	 mov         r3, #0x27, 24
  00134	e3833010	 orr         r3, r3, #0x10
  00138	e5823000	 str         r3, [r2]

; 287  :     m_bReinsertTheCard = FALSE;

  0013c	e59d3010	 ldr         r3, [sp, #0x10]
  00140	e28320e4	 add         r2, r3, #0xE4
  00144	e3a03000	 mov         r3, #0
  00148	e5823000	 str         r3, [r2]

; 288  :     m_dwWakeupSources = 0;

  0014c	e59d3010	 ldr         r3, [sp, #0x10]
  00150	e28320e8	 add         r2, r3, #0xE8
  00154	e3a03000	 mov         r3, #0
  00158	e5823000	 str         r3, [r2]

; 289  :     m_dwCurrentWakeupSources = 0;

  0015c	e59d3010	 ldr         r3, [sp, #0x10]
  00160	e28320ec	 add         r2, r3, #0xEC
  00164	e3a03000	 mov         r3, #0
  00168	e5823000	 str         r3, [r2]

; 290  :     m_fMMCMode = FALSE;

  0016c	e59d3010	 ldr         r3, [sp, #0x10]
  00170	e28320f8	 add         r2, r3, #0xF8
  00174	e3a03000	 mov         r3, #0
  00178	e5823000	 str         r3, [r2]

; 291  : 
; 292  :     m_InternPowerState = D4;

  0017c	e59d3010	 ldr         r3, [sp, #0x10]
  00180	e28320dc	 add         r2, r3, #0xDC
  00184	e3a03004	 mov         r3, #4
  00188	e5823000	 str         r3, [r2]

; 293  :     m_ActualPowerState = D4;

  0018c	e59d3010	 ldr         r3, [sp, #0x10]
  00190	e28320e0	 add         r2, r3, #0xE0
  00194	e3a03004	 mov         r3, #4
  00198	e5823000	 str         r3, [r2]

; 294  :     m_hParentBus = NULL;

  0019c	e59d3010	 ldr         r3, [sp, #0x10]
  001a0	e28320ac	 add         r2, r3, #0xAC
  001a4	e3a03000	 mov         r3, #0
  001a8	e5823000	 str         r3, [r2]

; 295  :     m_hGPIO = NULL;

  001ac	e59d3010	 ldr         r3, [sp, #0x10]
  001b0	e2832f59	 add         r2, r3, #0x59, 30
  001b4	e3a03000	 mov         r3, #0
  001b8	e5823000	 str         r3, [r2]

; 296  : 
; 297  :     m_dwSlot = MMCSLOT_1;

  001bc	e59d3010	 ldr         r3, [sp, #0x10]
  001c0	e2832e17	 add         r2, r3, #0x17, 28
  001c4	e3a03001	 mov         r3, #1
  001c8	e5823000	 str         r3, [r2]

; 298  : 	m_dwDeviceID = OMAP_DEVICE_NONE;

  001cc	e59d3010	 ldr         r3, [sp, #0x10]
  001d0	e2832f5d	 add         r2, r3, #0x5D, 30
  001d4	e3e03000	 mvn         r3, #0
  001d8	e5823000	 str         r3, [r2]

; 299  :     m_dwSDIOCard = 0;

  001dc	e59d3010	 ldr         r3, [sp, #0x10]
  001e0	e2832f5e	 add         r2, r3, #0x5E, 30
  001e4	e3a03000	 mov         r3, #0
  001e8	e5823000	 str         r3, [r2]

; 300  :     m_fDriverShutdown = FALSE;

  001ec	e59d3010	 ldr         r3, [sp, #0x10]
  001f0	e2832e13	 add         r2, r3, #0x13, 28
  001f4	e3a03000	 mov         r3, #0
  001f8	e5823000	 str         r3, [r2]

; 301  : 
; 302  :     bRxDmaActive = FALSE;

  001fc	e59d3010	 ldr         r3, [sp, #0x10]
  00200	e2832e1d	 add         r2, r3, #0x1D, 28
  00204	e3a03000	 mov         r3, #0
  00208	e5823000	 str         r3, [r2]

; 303  :     bTxDmaActive = FALSE;

  0020c	e59d3010	 ldr         r3, [sp, #0x10]
  00210	e2832f75	 add         r2, r3, #0x75, 30
  00214	e3a03000	 mov         r3, #0
  00218	e5823000	 str         r3, [r2]

; 304  :     m_dwClockCnt = 0;

  0021c	e59d3010	 ldr         r3, [sp, #0x10]
  00220	e2832e1a	 add         r2, r3, #0x1A, 28
  00224	e3a03000	 mov         r3, #0
  00228	e5823000	 str         r3, [r2]

; 305  :     m_fCardInitialized = FALSE;

  0022c	e59d3010	 ldr         r3, [sp, #0x10]
  00230	e2832f4f	 add         r2, r3, #0x4F, 30
  00234	e3a03000	 mov         r3, #0
  00238	e5823000	 str         r3, [r2]

; 306  :     m_bExitThread = FALSE;

  0023c	e59d3010	 ldr         r3, [sp, #0x10]
  00240	e2832f69	 add         r2, r3, #0x69, 30
  00244	e3a03000	 mov         r3, #0
  00248	e5823000	 str         r3, [r2]

; 307  : 	m_hTimerThreadIST = NULL;

  0024c	e59d3010	 ldr         r3, [sp, #0x10]
  00250	e2832f6b	 add         r2, r3, #0x6B, 30
  00254	e3a03000	 mov         r3, #0
  00258	e5823000	 str         r3, [r2]

; 308  : 	m_hTimerEvent = NULL;

  0025c	e59d3010	 ldr         r3, [sp, #0x10]
  00260	e2832f6a	 add         r2, r3, #0x6A, 30
  00264	e3a03000	 mov         r3, #0
  00268	e5823000	 str         r3, [r2]

; 309  :     //m_TransferClass = NULL;
; 310  : 
; 311  :     m_pCurrentRecieveBuffer = NULL;

  0026c	e59d3010	 ldr         r3, [sp, #0x10]
  00270	e2832f7b	 add         r2, r3, #0x7B, 30
  00274	e3a03000	 mov         r3, #0
  00278	e5823000	 str         r3, [r2]

; 312  :     m_dwCurrentRecieveBufferLength = 0;

  0027c	e59d3010	 ldr         r3, [sp, #0x10]
  00280	e2832e1f	 add         r2, r3, #0x1F, 28
  00284	e3a03000	 mov         r3, #0
  00288	e5823000	 str         r3, [r2]

; 313  :     m_CardDetectInterruptStatus = 0;

  0028c	e59d3010	 ldr         r3, [sp, #0x10]
  00290	e2832f7d	 add         r2, r3, #0x7D, 30
  00294	e3a03000	 mov         r3, #0
  00298	e5823000	 str         r3, [r2]

; 314  :     m_bCommandPending = FALSE;

  0029c	e59d3010	 ldr         r3, [sp, #0x10]
  002a0	e2832f7e	 add         r2, r3, #0x7E, 30
  002a4	e3a03000	 mov         r3, #0
  002a8	e5823000	 str         r3, [r2]

; 315  : 
; 316  :     m_sContext.dwClockRate = MMCSD_CLOCK_INIT;

  002ac	e59d3010	 ldr         r3, [sp, #0x10]
  002b0	e2832c02	 add         r2, r3, #2, 24
  002b4	e3a03a61	 mov         r3, #0x61, 20
  002b8	e3833d2a	 orr         r3, r3, #0x2A, 26
  002bc	e5823000	 str         r3, [r2]

; 317  :     m_sContext.eSDHCIntr = SDHC_INTR_DISABLED;

  002c0	e59d3010	 ldr         r3, [sp, #0x10]
  002c4	e2832f81	 add         r2, r3, #0x81, 30
  002c8	e3a03000	 mov         r3, #0
  002cc	e5823000	 str         r3, [r2]

; 318  :     m_sContext.eInterfaceMode = SD_INTERFACE_SD_MMC_1BIT;

  002d0	e59d3010	 ldr         r3, [sp, #0x10]
  002d4	e2832f82	 add         r2, r3, #0x82, 30
  002d8	e3a03000	 mov         r3, #0
  002dc	e5823000	 str         r3, [r2]

; 319  : 
; 320  : #ifdef SDIO_DMA_ENABLED
; 321  : 	m_TxDmaInfo = NULL;

  002e0	e59d3010	 ldr         r3, [sp, #0x10]
  002e4	e2832098	 add         r2, r3, #0x98
  002e8	e3a03000	 mov         r3, #0
  002ec	e5823000	 str         r3, [r2]

; 322  :     m_RxDmaInfo = NULL;

  002f0	e59d3010	 ldr         r3, [sp, #0x10]
  002f4	e28320a0	 add         r2, r3, #0xA0
  002f8	e3a03000	 mov         r3, #0
  002fc	e5823000	 str         r3, [r2]

; 323  :     m_hTxDmaChannel = NULL;

  00300	e59d3010	 ldr         r3, [sp, #0x10]
  00304	e283209c	 add         r2, r3, #0x9C
  00308	e3a03000	 mov         r3, #0
  0030c	e5823000	 str         r3, [r2]

; 324  :     m_hRxDmaChannel = NULL;

  00310	e59d3010	 ldr         r3, [sp, #0x10]
  00314	e28320a4	 add         r2, r3, #0xA4
  00318	e3a03000	 mov         r3, #0
  0031c	e5823000	 str         r3, [r2]

; 325  : #endif
; 326  : }

  00320	e59d3010	 ldr         r3, [sp, #0x10]
  00324	e58d3000	 str         r3, [sp]
  00328	e59d0000	 ldr         r0, [sp]
  0032c	e28dd008	 add         sp, sp, #8
  00330	e89d6000	 ldmia       sp, {sp, lr}
  00334	e12fff1e	 bx          lr
  00338		 |$LN6@CSDIOContr|
  00338		 |$LN7@CSDIOContr|
  00338	00000000	 DCD         |??_7CSDIOControllerBase@@6B@|
  0033c		 |$M45080|

			 ENDP  ; |??0CSDIOControllerBase@@QAA@XZ|, CSDIOControllerBase::CSDIOControllerBase

	EXPORT	|??_C@_1EG@EIMIGIOI@?$AAS?$AAo?$AAf?$AAt?$AAw?$AAa?$AAr?$AAe?$AAR?$AAe?$AAs?$AAe?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAT?$AAI?$AAM?$AAE?$AAO?$AAU?$AAT?$AA?4@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KA@CLLCPJCJ@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|?SoftwareReset@CSDIOControllerBase@@QAAXK@Z| ; CSDIOControllerBase::SoftwareReset
	IMPORT	|Sleep|
	IMPORT	|GetTickCount|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|

  00008			 AREA	 |.pdata|, PDATA
|$T45093| DCD	|$LN12@SoftwareRe|
	DCD	0x40004604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@EIMIGIOI@?$AAS?$AAo?$AAf?$AAt?$AAw?$AAa?$AAr?$AAe?$AAR?$AAe?$AAs?$AAe?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAT?$AAI?$AAM?$AAE?$AAO?$AAU?$AAT?$AA?4@| DCB "S"
	DCB	0x0, "o", 0x0, "f", 0x0, "t", 0x0, "w", 0x0, "a", 0x0, "r"
	DCB	0x0, "e", 0x0, "R", 0x0, "e", 0x0, "s", 0x0, "e", 0x0, "t"
	DCB	0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "e"
	DCB	0x0, "x", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "T"
	DCB	0x0, "I", 0x0, "M", 0x0, "E", 0x0, "O", 0x0, "U", 0x0, "T"
	DCB	0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "E", 0x0, "B"
	DCB	0x0, "U", 0x0, "G", 0x0, "C", 0x0, "H", 0x0, "K", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, "t", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KA@CLLCPJCJ@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "C"
	DCB	0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N", 0x0, "_"
	DCB	0x0, "T", 0x0, "I", 0x0, "_", 0x0, "V", 0x0, "1", 0x0, "\\"
	DCB	0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N"
	DCB	0x0, "_", 0x0, "T", 0x0, "I", 0x0, "\\", 0x0, "S", 0x0, "D"
	DCB	0x0, "H", 0x0, "C", 0x0, "\\", 0x0, "B", 0x0, "A", 0x0, "S"
	DCB	0x0, "E", 0x0, "\\", 0x0, ".", 0x0, "\\", 0x0, "s", 0x0, "d"
	DCB	0x0, "h", 0x0, "c", 0x0, ".", 0x0, "c", 0x0, "p", 0x0, "p"
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  0033c			 AREA	 |.text|, CODE, ARM

  0033c		 |?SoftwareReset@CSDIOControllerBase@@QAAXK@Z| PROC ; CSDIOControllerBase::SoftwareReset

; 357  : {

  0033c		 |$LN12@SoftwareRe|
  0033c	e1a0c00d	 mov         r12, sp
  00340	e92d0003	 stmdb       sp!, {r0, r1}
  00344	e92d5000	 stmdb       sp!, {r12, lr}
  00348	e24dd014	 sub         sp, sp, #0x14
  0034c		 |$M45090|

; 358  :     DWORD               dwCountStart;
; 359  : 
; 360  :     DEBUGCHK(sizeof(OMAP_MMCHS_REGS) % sizeof(DWORD) == 0);

  0034c	e3a03001	 mov         r3, #1
  00350	e58d3004	 str         r3, [sp, #4]
  00354	ea000007	 b           |$LN7@SoftwareRe|
  00358	e3a03f5a	 mov         r3, #0x5A, 30
  0035c	e59f20ec	 ldr         r2, [pc, #0xEC]
  00360	e59f10e4	 ldr         r1, [pc, #0xE4]
  00364	e59f00dc	 ldr         r0, [pc, #0xDC]
  00368	eb000000	 bl          NKDbgPrintfW
  0036c	e6000010	 __debugbreak_ce
  00370	e3a03000	 mov         r3, #0
  00374	e58d3004	 str         r3, [sp, #4]
  00378		 |$LN7@SoftwareRe|

; 361  : 
; 362  :     dwResetBits &= (MMCHS_SYSCTL_SRA | MMCHS_SYSCTL_SRC | MMCHS_SYSCTL_SRD);

  00378	e59d3020	 ldr         r3, [sp, #0x20]
  0037c	e2033407	 and         r3, r3, #7, 8
  00380	e58d3020	 str         r3, [sp, #0x20]

; 363  : 
; 364  :     // Reset the controller
; 365  :     SETREG32(&m_pbRegisters->MMCHS_SYSCTL, dwResetBits);

  00384	e59d301c	 ldr         r3, [sp, #0x1C]
  00388	e2833f57	 add         r3, r3, #0x57, 30
  0038c	e5933000	 ldr         r3, [r3]
  00390	e2833f4b	 add         r3, r3, #0x4B, 30
  00394	e5932000	 ldr         r2, [r3]
  00398	e59d3020	 ldr         r3, [sp, #0x20]
  0039c	e1822003	 orr         r2, r2, r3
  003a0	e59d301c	 ldr         r3, [sp, #0x1C]
  003a4	e2833f57	 add         r3, r3, #0x57, 30
  003a8	e5933000	 ldr         r3, [r3]
  003ac	e2833f4b	 add         r3, r3, #0x4B, 30
  003b0	e5832000	 str         r2, [r3]

; 366  : 
; 367  :     // get starting tick count for timeout
; 368  :     dwCountStart = GetTickCount();

  003b4	eb000000	 bl          GetTickCount
  003b8	e58d0008	 str         r0, [sp, #8]
  003bc	e59d3008	 ldr         r3, [sp, #8]
  003c0	e58d3000	 str         r3, [sp]
  003c4		 |$LN3@SoftwareRe|

; 369  : 
; 370  :     // Verify that reset has completed.
; 371  :     while ((INREG32(&m_pbRegisters->MMCHS_SYSCTL) & dwResetBits))

  003c4	e59d301c	 ldr         r3, [sp, #0x1C]
  003c8	e2833f57	 add         r3, r3, #0x57, 30
  003cc	e5933000	 ldr         r3, [r3]
  003d0	e2833f4b	 add         r3, r3, #0x4B, 30
  003d4	e5932000	 ldr         r2, [r3]
  003d8	e59d3020	 ldr         r3, [sp, #0x20]
  003dc	e1120003	 tst         r2, r3
  003e0	0a000014	 beq         |$LN2@SoftwareRe|

; 372  :     {
; 373  :         // check for timeout (see CE Help to understand how this calculation works)
; 374  :         if (GetTickCount() - dwCountStart > m_dwMaxTimeout)

  003e4	eb000000	 bl          GetTickCount
  003e8	e58d000c	 str         r0, [sp, #0xC]
  003ec	e59d200c	 ldr         r2, [sp, #0xC]
  003f0	e59d3000	 ldr         r3, [sp]
  003f4	e0422003	 sub         r2, r2, r3
  003f8	e59d301c	 ldr         r3, [sp, #0x1C]
  003fc	e2833e15	 add         r3, r3, #0x15, 28
  00400	e5933000	 ldr         r3, [r3]
  00404	e1520003	 cmp         r2, r3
  00408	9a000007	 bls         |$LN1@SoftwareRe|

; 375  :         {
; 376  :             DEBUGMSG(ZONE_ENABLE_ERROR, (TEXT("SoftwareReset() - exit: TIMEOUT.\r\n")));

  0040c	e59f0030	 ldr         r0, [pc, #0x30]
  00410	eb000000	 bl          NKDbgPrintfW
  00414	e3a03001	 mov         r3, #1
  00418	e58d3010	 str         r3, [sp, #0x10]
  0041c	ea000001	 b           |$LN9@SoftwareRe|
  00420	e3a03000	 mov         r3, #0
  00424	e58d3010	 str         r3, [sp, #0x10]
  00428		 |$LN9@SoftwareRe|

; 377  :             break;

  00428	ea000002	 b           |$LN2@SoftwareRe|
  0042c		 |$LN1@SoftwareRe|

; 378  :         }
; 379  : 
; 380  :         Sleep(0);

  0042c	e3a00000	 mov         r0, #0
  00430	eb000000	 bl          Sleep

; 381  :     }

  00434	eaffffe2	 b           |$LN3@SoftwareRe|
  00438		 |$LN2@SoftwareRe|

; 382  : }

  00438	e28dd014	 add         sp, sp, #0x14
  0043c	e89d6000	 ldmia       sp, {sp, lr}
  00440	e12fff1e	 bx          lr
  00444		 |$LN13@SoftwareRe|
  00444		 |$LN14@SoftwareRe|
  00444	00000000	 DCD         |??_C@_1EG@EIMIGIOI@?$AAS?$AAo?$AAf?$AAt?$AAw?$AAa?$AAr?$AAe?$AAR?$AAe?$AAs?$AAe?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAT?$AAI?$AAM?$AAE?$AAO?$AAU?$AAT?$AA?4@|
  00448		 |$LN15@SoftwareRe|
  00448	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  0044c		 |$LN16@SoftwareRe|
  0044c	00000000	 DCD         |dpCurSettings|
  00450		 |$LN17@SoftwareRe|
  00450	00000000	 DCD         |??_C@_1KA@CLLCPJCJ@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  00454		 |$M45091|

			 ENDP  ; |?SoftwareReset@CSDIOControllerBase@@QAAXK@Z|, CSDIOControllerBase::SoftwareReset

	EXPORT	|??_C@_1FG@KBLCJKOK@?$AAS?$AAD?$AAH?$AAC?$AA?$CB?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9?$AA?5?$AAU?$AAn?$AAe?$AAx?$AAp?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAS?$AAD?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@IEOEGBIJ@?$AAS?$AAe?$AAt?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?5?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAH?$AAC?$AAT?$AAL?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$DN?$AA?5@| [ DATA ] ; `string'
	EXPORT	|?SetSDInterfaceMode@CSDIOControllerBase@@IAAXW4SD_INTERFACE_MODE@@@Z| ; CSDIOControllerBase::SetSDInterfaceMode

  00010			 AREA	 |.pdata|, PDATA
|$T45109| DCD	|$LN15@SetSDInter|
	DCD	0x40005504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@KBLCJKOK@?$AAS?$AAD?$AAH?$AAC?$AA?$CB?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9?$AA?5?$AAU?$AAn?$AAe?$AAx?$AAp?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAS?$AAD?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, "!", 0x0, "E", 0x0, "R"
	DCB	0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "U", 0x0, "n", 0x0, "e", 0x0, "x", 0x0, "p", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "S"
	DCB	0x0, "D", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "f", 0x0, "a", 0x0, "c", 0x0, "e", 0x0, "("
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@IEOEGBIJ@?$AAS?$AAe?$AAt?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?5?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAH?$AAC?$AAT?$AAL?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$DN?$AA?5@| DCB "S"
	DCB	0x0, "e", 0x0, "t", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "f", 0x0, "a", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "M", 0x0, "M", 0x0, "C", 0x0, "H", 0x0, "S", 0x0, "_"
	DCB	0x0, "H", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, " ", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "u", 0x0, "e", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  00454			 AREA	 |.text|, CODE, ARM

  00454		 |?SetSDInterfaceMode@CSDIOControllerBase@@IAAXW4SD_INTERFACE_MODE@@@Z| PROC ; CSDIOControllerBase::SetSDInterfaceMode

; 387  : {

  00454		 |$LN15@SetSDInter|
  00454	e1a0c00d	 mov         r12, sp
  00458	e92d0003	 stmdb       sp!, {r0, r1}
  0045c	e92d5000	 stmdb       sp!, {r12, lr}
  00460	e24dd00c	 sub         sp, sp, #0xC
  00464		 |$M45106|

; 388  :     if (SD_INTERFACE_SD_MMC_1BIT == eSDInterfaceMode)

  00464	e59d3018	 ldr         r3, [sp, #0x18]
  00468	e3530000	 cmp         r3, #0
  0046c	1a00001c	 bne         |$LN4@SetSDInter|

; 389  :     {
; 390  :         CLRREG32(&m_pbRegisters->MMCHS_HCTL, MMCHS_HCTL_DTW);

  00470	e59d3014	 ldr         r3, [sp, #0x14]
  00474	e2833f57	 add         r3, r3, #0x57, 30
  00478	e5933000	 ldr         r3, [r3]
  0047c	e2833f4a	 add         r3, r3, #0x4A, 30
  00480	e5932000	 ldr         r2, [r3]
  00484	e3e03002	 mvn         r3, #2
  00488	e0022003	 and         r2, r2, r3
  0048c	e59d3014	 ldr         r3, [sp, #0x14]
  00490	e2833f57	 add         r3, r3, #0x57, 30
  00494	e5933000	 ldr         r3, [r3]
  00498	e2833f4a	 add         r3, r3, #0x4A, 30
  0049c	e5832000	 str         r2, [r3]

; 391  :         DEBUGMSG(SDCARD_ZONE_INIT,(TEXT("SetInterface MMCHS_HCTL value = %X\r\n"), m_pbRegisters->MMCHS_HCTL ));

  004a0	e59f30f8	 ldr         r3, [pc, #0xF8]
  004a4	e5933440	 ldr         r3, [r3, #0x440]
  004a8	e3130a02	 tst         r3, #2, 20
  004ac	0a000009	 beq         |$LN7@SetSDInter|
  004b0	e59d3014	 ldr         r3, [sp, #0x14]
  004b4	e2833f57	 add         r3, r3, #0x57, 30
  004b8	e5933000	 ldr         r3, [r3]
  004bc	e2833f4a	 add         r3, r3, #0x4A, 30
  004c0	e5931000	 ldr         r1, [r3]
  004c4	e59f00d8	 ldr         r0, [pc, #0xD8]
  004c8	eb000000	 bl          NKDbgPrintfW
  004cc	e3a03001	 mov         r3, #1
  004d0	e58d3000	 str         r3, [sp]
  004d4	ea000001	 b           |$LN8@SetSDInter|
  004d8		 |$LN7@SetSDInter|
  004d8	e3a03000	 mov         r3, #0
  004dc	e58d3000	 str         r3, [sp]
  004e0		 |$LN8@SetSDInter|

; 392  :     }
; 393  :     else if (SD_INTERFACE_SD_4BIT == eSDInterfaceMode)

  004e0	ea00002a	 b           |$LN3@SetSDInter|
  004e4		 |$LN4@SetSDInter|
  004e4	e59d3018	 ldr         r3, [sp, #0x18]
  004e8	e3530001	 cmp         r3, #1
  004ec	1a00001b	 bne         |$LN2@SetSDInter|

; 394  :     {
; 395  :         SETREG32(&m_pbRegisters->MMCHS_HCTL, MMCHS_HCTL_DTW);

  004f0	e59d3014	 ldr         r3, [sp, #0x14]
  004f4	e2833f57	 add         r3, r3, #0x57, 30
  004f8	e5933000	 ldr         r3, [r3]
  004fc	e2833f4a	 add         r3, r3, #0x4A, 30
  00500	e5933000	 ldr         r3, [r3]
  00504	e3832002	 orr         r2, r3, #2
  00508	e59d3014	 ldr         r3, [sp, #0x14]
  0050c	e2833f57	 add         r3, r3, #0x57, 30
  00510	e5933000	 ldr         r3, [r3]
  00514	e2833f4a	 add         r3, r3, #0x4A, 30
  00518	e5832000	 str         r2, [r3]

; 396  :         DEBUGMSG(SDCARD_ZONE_INIT,(TEXT("SetInterface MMCHS_HCTL value = %X\r\n"), m_pbRegisters->MMCHS_HCTL ));

  0051c	e59f307c	 ldr         r3, [pc, #0x7C]
  00520	e5933440	 ldr         r3, [r3, #0x440]
  00524	e3130a02	 tst         r3, #2, 20
  00528	0a000009	 beq         |$LN9@SetSDInter|
  0052c	e59d3014	 ldr         r3, [sp, #0x14]
  00530	e2833f57	 add         r3, r3, #0x57, 30
  00534	e5933000	 ldr         r3, [r3]
  00538	e2833f4a	 add         r3, r3, #0x4A, 30
  0053c	e5931000	 ldr         r1, [r3]
  00540	e59f005c	 ldr         r0, [pc, #0x5C]
  00544	eb000000	 bl          NKDbgPrintfW
  00548	e3a03001	 mov         r3, #1
  0054c	e58d3004	 str         r3, [sp, #4]
  00550	ea000001	 b           |$LN10@SetSDInter|
  00554		 |$LN9@SetSDInter|
  00554	e3a03000	 mov         r3, #0
  00558	e58d3004	 str         r3, [sp, #4]
  0055c		 |$LN10@SetSDInter|

; 397  :     }
; 398  :     else

  0055c	ea00000b	 b           |$LN1@SetSDInter|
  00560		 |$LN2@SetSDInter|

; 399  :     {
; 400  :         RETAILMSG(SDCARD_ZONE_ERROR, 
; 401  :             (L"SDHC!ERROR - Unexpected SD interface(%d)\r\n",
; 402  :             eSDInterfaceMode)
; 403  :             );

  00560	e59f3038	 ldr         r3, [pc, #0x38]
  00564	e5933440	 ldr         r3, [r3, #0x440]
  00568	e3130902	 tst         r3, #2, 18
  0056c	0a000005	 beq         |$LN11@SetSDInter|
  00570	e59d1018	 ldr         r1, [sp, #0x18]
  00574	e59f0020	 ldr         r0, [pc, #0x20]
  00578	eb000000	 bl          NKDbgPrintfW
  0057c	e3a03001	 mov         r3, #1
  00580	e58d3008	 str         r3, [sp, #8]
  00584	ea000001	 b           |$LN12@SetSDInter|
  00588		 |$LN11@SetSDInter|
  00588	e3a03000	 mov         r3, #0
  0058c	e58d3008	 str         r3, [sp, #8]
  00590		 |$LN12@SetSDInter|
  00590		 |$LN1@SetSDInter|
  00590		 |$LN3@SetSDInter|

; 404  :         }
; 405  :     }

  00590	e28dd00c	 add         sp, sp, #0xC
  00594	e89d6000	 ldmia       sp, {sp, lr}
  00598	e12fff1e	 bx          lr
  0059c		 |$LN16@SetSDInter|
  0059c		 |$LN17@SetSDInter|
  0059c	00000000	 DCD         |??_C@_1FG@KBLCJKOK@?$AAS?$AAD?$AAH?$AAC?$AA?$CB?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9?$AA?5?$AAU?$AAn?$AAe?$AAx?$AAp?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAS?$AAD?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr@|
  005a0		 |$LN18@SetSDInter|
  005a0	00000000	 DCD         |dpCurSettings|
  005a4		 |$LN19@SetSDInter|
  005a4	00000000	 DCD         |??_C@_1EK@IEOEGBIJ@?$AAS?$AAe?$AAt?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?5?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAH?$AAC?$AAT?$AAL?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$DN?$AA?5@|
  005a8		 |$M45107|

			 ENDP  ; |?SetSDInterfaceMode@CSDIOControllerBase@@IAAXW4SD_INTERFACE_MODE@@@Z|, CSDIOControllerBase::SetSDInterfaceMode

	EXPORT	|?SetClockRate@CSDIOControllerBase@@QAAXPAK@Z| ; CSDIOControllerBase::SetClockRate
	EXPORT	|?UpdateSystemClock@CSDIOControllerBase@@QAAHH@Z| ; CSDIOControllerBase::UpdateSystemClock
	EXPORT	|?SetInterface@CSDIOControllerBase@@QAAXPAU_SD_CARD_INTERFACE_EX@@@Z| ; CSDIOControllerBase::SetInterface

  00018			 AREA	 |.pdata|, PDATA
|$T45120| DCD	|$LN8@SetInterfa|
	DCD	0x40002b04
; Function compile flags: /Odtp

  005a8			 AREA	 |.text|, CODE, ARM

  005a8		 |?SetInterface@CSDIOControllerBase@@QAAXPAU_SD_CARD_INTERFACE_EX@@@Z| PROC ; CSDIOControllerBase::SetInterface

; 410  : {

  005a8		 |$LN8@SetInterfa|
  005a8	e1a0c00d	 mov         r12, sp
  005ac	e92d0003	 stmdb       sp!, {r0, r1}
  005b0	e92d5000	 stmdb       sp!, {r12, lr}
  005b4	e24dd004	 sub         sp, sp, #4
  005b8		 |$M45117|

; 411  :     if(m_ActualPowerState == D4) return;

  005b8	e59d300c	 ldr         r3, [sp, #0xC]
  005bc	e28330e0	 add         r3, r3, #0xE0
  005c0	e5933000	 ldr         r3, [r3]
  005c4	e3530004	 cmp         r3, #4
  005c8	1a000000	 bne         |$LN1@SetInterfa|
  005cc	ea00001d	 b           |$LN2@SetInterfa|
  005d0		 |$LN1@SetInterfa|

; 412  : 
; 413  :     UpdateSystemClock(TRUE);

  005d0	e3a01001	 mov         r1, #1
  005d4	e59d000c	 ldr         r0, [sp, #0xC]
  005d8	eb000000	 bl          |?UpdateSystemClock@CSDIOControllerBase@@QAAHH@Z|

; 414  : 
; 415  :     Sleep(2);

  005dc	e3a00002	 mov         r0, #2
  005e0	eb000000	 bl          Sleep

; 416  : 
; 417  :     m_sContext.eInterfaceMode = (pInterface->InterfaceModeEx.bit.sd4Bit) ? SD_INTERFACE_SD_4BIT : SD_INTERFACE_SD_MMC_1BIT;

  005e4	e59d3010	 ldr         r3, [sp, #0x10]
  005e8	e5933000	 ldr         r3, [r3]
  005ec	e3130001	 tst         r3, #1
  005f0	0a000002	 beq         |$LN4@SetInterfa|
  005f4	e3a03001	 mov         r3, #1
  005f8	e58d3000	 str         r3, [sp]
  005fc	ea000001	 b           |$LN5@SetInterfa|
  00600		 |$LN4@SetInterfa|
  00600	e3a03000	 mov         r3, #0
  00604	e58d3000	 str         r3, [sp]
  00608		 |$LN5@SetInterfa|
  00608	e59d300c	 ldr         r3, [sp, #0xC]
  0060c	e2832f82	 add         r2, r3, #0x82, 30
  00610	e59d3000	 ldr         r3, [sp]
  00614	e5823000	 str         r3, [r2]

; 418  :     SetSDInterfaceMode(m_sContext.eInterfaceMode);

  00618	e59d300c	 ldr         r3, [sp, #0xC]
  0061c	e2833f82	 add         r3, r3, #0x82, 30
  00620	e5931000	 ldr         r1, [r3]
  00624	e59d000c	 ldr         r0, [sp, #0xC]
  00628	eb000000	 bl          |?SetSDInterfaceMode@CSDIOControllerBase@@IAAXW4SD_INTERFACE_MODE@@@Z|

; 419  : 
; 420  :     SetClockRate(&pInterface->ClockRate);

  0062c	e59d3010	 ldr         r3, [sp, #0x10]
  00630	e2831004	 add         r1, r3, #4
  00634	e59d000c	 ldr         r0, [sp, #0xC]
  00638	eb000000	 bl          |?SetClockRate@CSDIOControllerBase@@QAAXPAK@Z|

; 421  :     UpdateSystemClock(FALSE);

  0063c	e3a01000	 mov         r1, #0
  00640	e59d000c	 ldr         r0, [sp, #0xC]
  00644	eb000000	 bl          |?UpdateSystemClock@CSDIOControllerBase@@QAAHH@Z|
  00648		 |$LN2@SetInterfa|

; 422  : }

  00648	e28dd004	 add         sp, sp, #4
  0064c	e89d6000	 ldmia       sp, {sp, lr}
  00650	e12fff1e	 bx          lr
  00654		 |$M45118|

			 ENDP  ; |?SetInterface@CSDIOControllerBase@@QAAXPAU_SD_CARD_INTERFACE_EX@@@Z|, CSDIOControllerBase::SetInterface

	EXPORT	|?EnableSDHCInterrupts@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::EnableSDHCInterrupts
	IMPORT	|LeaveCriticalSection|
	IMPORT	|EnterCriticalSection|

  00020			 AREA	 |.pdata|, PDATA
|$T45125| DCD	|$LN5@EnableSDHC|
	DCD	0x40001d03
; Function compile flags: /Odtp

  00654			 AREA	 |.text|, CODE, ARM

  00654		 |?EnableSDHCInterrupts@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::EnableSDHCInterrupts

; 427  : {

  00654		 |$LN5@EnableSDHC|
  00654	e1a0c00d	 mov         r12, sp
  00658	e92d0001	 stmdb       sp!, {r0}
  0065c	e92d5000	 stmdb       sp!, {r12, lr}
  00660		 |$M45122|

; 428  :     EnterCriticalSection( &m_critSec );

  00660	e59d3008	 ldr         r3, [sp, #8]
  00664	e28300b0	 add         r0, r3, #0xB0
  00668	eb000000	 bl          EnterCriticalSection

; 429  :     OUTREG32(&m_pbRegisters->MMCHS_ISE, MMC_INT_EN_MASK);

  0066c	e59d3008	 ldr         r3, [sp, #8]
  00670	e2833f57	 add         r3, r3, #0x57, 30
  00674	e5933000	 ldr         r3, [r3]
  00678	e2832f4e	 add         r2, r3, #0x4E, 30
  0067c	e3a03833	 mov         r3, #0x33, 16
  00680	e3833033	 orr         r3, r3, #0x33
  00684	e5823000	 str         r3, [r2]

; 430  :     OUTREG32(&m_pbRegisters->MMCHS_IE,  MMC_INT_EN_MASK);

  00688	e59d3008	 ldr         r3, [sp, #8]
  0068c	e2833f57	 add         r3, r3, #0x57, 30
  00690	e5933000	 ldr         r3, [r3]
  00694	e2832f4d	 add         r2, r3, #0x4D, 30
  00698	e3a03833	 mov         r3, #0x33, 16
  0069c	e3833033	 orr         r3, r3, #0x33
  006a0	e5823000	 str         r3, [r2]

; 431  :     m_sContext.eSDHCIntr = SDHC_MMC_INTR_ENABLED;

  006a4	e59d3008	 ldr         r3, [sp, #8]
  006a8	e2832f81	 add         r2, r3, #0x81, 30
  006ac	e3a03001	 mov         r3, #1
  006b0	e5823000	 str         r3, [r2]

; 432  :     LeaveCriticalSection( &m_critSec );

  006b4	e59d3008	 ldr         r3, [sp, #8]
  006b8	e28300b0	 add         r0, r3, #0xB0
  006bc	eb000000	 bl          LeaveCriticalSection

; 433  : }

  006c0	e89d6000	 ldmia       sp, {sp, lr}
  006c4	e12fff1e	 bx          lr
  006c8		 |$M45123|

			 ENDP  ; |?EnableSDHCInterrupts@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::EnableSDHCInterrupts

	EXPORT	|?DisableSDHCInterrupts@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::DisableSDHCInterrupts

  00028			 AREA	 |.pdata|, PDATA
|$T45130| DCD	|$LN5@DisableSDH|
	DCD	0x40001b03
; Function compile flags: /Odtp

  006c8			 AREA	 |.text|, CODE, ARM

  006c8		 |?DisableSDHCInterrupts@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::DisableSDHCInterrupts

; 438  : {

  006c8		 |$LN5@DisableSDH|
  006c8	e1a0c00d	 mov         r12, sp
  006cc	e92d0001	 stmdb       sp!, {r0}
  006d0	e92d5000	 stmdb       sp!, {r12, lr}
  006d4		 |$M45127|

; 439  :     EnterCriticalSection( &m_critSec );

  006d4	e59d3008	 ldr         r3, [sp, #8]
  006d8	e28300b0	 add         r0, r3, #0xB0
  006dc	eb000000	 bl          EnterCriticalSection

; 440  :     OUTREG32(&m_pbRegisters->MMCHS_ISE, 0);

  006e0	e59d3008	 ldr         r3, [sp, #8]
  006e4	e2833f57	 add         r3, r3, #0x57, 30
  006e8	e5933000	 ldr         r3, [r3]
  006ec	e2832f4e	 add         r2, r3, #0x4E, 30
  006f0	e3a03000	 mov         r3, #0
  006f4	e5823000	 str         r3, [r2]

; 441  :     OUTREG32(&m_pbRegisters->MMCHS_IE,  0);

  006f8	e59d3008	 ldr         r3, [sp, #8]
  006fc	e2833f57	 add         r3, r3, #0x57, 30
  00700	e5933000	 ldr         r3, [r3]
  00704	e2832f4d	 add         r2, r3, #0x4D, 30
  00708	e3a03000	 mov         r3, #0
  0070c	e5823000	 str         r3, [r2]

; 442  :     m_sContext.eSDHCIntr = SDHC_INTR_DISABLED;

  00710	e59d3008	 ldr         r3, [sp, #8]
  00714	e2832f81	 add         r2, r3, #0x81, 30
  00718	e3a03000	 mov         r3, #0
  0071c	e5823000	 str         r3, [r2]

; 443  :     LeaveCriticalSection( &m_critSec );

  00720	e59d3008	 ldr         r3, [sp, #8]
  00724	e28300b0	 add         r0, r3, #0xB0
  00728	eb000000	 bl          LeaveCriticalSection

; 444  : }

  0072c	e89d6000	 ldmia       sp, {sp, lr}
  00730	e12fff1e	 bx          lr
  00734		 |$M45128|

			 ENDP  ; |?DisableSDHCInterrupts@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::DisableSDHCInterrupts

	EXPORT	|??_C@_1EE@HBJAMAKC@?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAS?$AAD?$AAI?$AAO?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAs?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?EnableSDIOInterrupts@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::EnableSDIOInterrupts

  00030			 AREA	 |.pdata|, PDATA
|$T45139| DCD	|$LN10@EnableSDIO|
	DCD	0x40006c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@HBJAMAKC@?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAS?$AAD?$AAI?$AAO?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAs?$AA?$AN@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C", 0x0, "S", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, ":", 0x0, ":", 0x0, "E", 0x0, "n"
	DCB	0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, "S", 0x0, "D"
	DCB	0x0, "I", 0x0, "O", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| DCB "U", 0x0
	DCB	"n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n", 0x0
	DCB	0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00734			 AREA	 |.text|, CODE, ARM

  00734		 |?EnableSDIOInterrupts@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::EnableSDIOInterrupts

; 449  : {

  00734		 |$LN10@EnableSDIO|
  00734	e1a0c00d	 mov         r12, sp
  00738	e92d0001	 stmdb       sp!, {r0}
  0073c	e92d5000	 stmdb       sp!, {r12, lr}
  00740	e24dd008	 sub         sp, sp, #8
  00744		 |$M45136|

; 450  :     ASSERT( !m_fSDIOInterruptsEnabled );

  00744	e59d3010	 ldr         r3, [sp, #0x10]
  00748	e28330f4	 add         r3, r3, #0xF4
  0074c	e5933000	 ldr         r3, [r3]
  00750	e3530000	 cmp         r3, #0
  00754	1a000002	 bne         |$LN4@EnableSDIO|
  00758	e3a03001	 mov         r3, #1
  0075c	e58d3000	 str         r3, [sp]
  00760	ea000008	 b           |$LN5@EnableSDIO|
  00764		 |$LN4@EnableSDIO|
  00764	e3a03c01	 mov         r3, #1, 24
  00768	e38330c2	 orr         r3, r3, #0xC2
  0076c	e59f216c	 ldr         r2, [pc, #0x16C]
  00770	e59f1164	 ldr         r1, [pc, #0x164]
  00774	e59f015c	 ldr         r0, [pc, #0x15C]
  00778	eb000000	 bl          NKDbgPrintfW
  0077c	e6000010	 __debugbreak_ce
  00780	e3a03000	 mov         r3, #0
  00784	e58d3000	 str         r3, [sp]
  00788		 |$LN5@EnableSDIO|

; 451  :     m_fSDIOInterruptsEnabled = TRUE;

  00788	e59d3010	 ldr         r3, [sp, #0x10]
  0078c	e28320f4	 add         r2, r3, #0xF4
  00790	e3a03001	 mov         r3, #1
  00794	e5823000	 str         r3, [r2]

; 452  : 
; 453  :     DEBUGMSG(SHC_INTERRUPT_ZONE, (TEXT("CSDHCSlot::EnableSDIOInterrupts\r\n")));

  00798	e59f3134	 ldr         r3, [pc, #0x134]
  0079c	e5933440	 ldr         r3, [r3, #0x440]
  007a0	e3130001	 tst         r3, #1
  007a4	0a000004	 beq         |$LN6@EnableSDIO|
  007a8	e59f0120	 ldr         r0, [pc, #0x120]
  007ac	eb000000	 bl          NKDbgPrintfW
  007b0	e3a03001	 mov         r3, #1
  007b4	e58d3004	 str         r3, [sp, #4]
  007b8	ea000001	 b           |$LN7@EnableSDIO|
  007bc		 |$LN6@EnableSDIO|
  007bc	e3a03000	 mov         r3, #0
  007c0	e58d3004	 str         r3, [sp, #4]
  007c4		 |$LN7@EnableSDIO|

; 454  : #ifdef ENABLE_RETAIL_OUTPUT
; 455  :         RETAILMSG(1, (TEXT("CSDHCSlot::EnableSDIOInterrupts\r\n")));
; 456  : #endif
; 457  :     EnterCriticalSection( &m_critSec );

  007c4	e59d3010	 ldr         r3, [sp, #0x10]
  007c8	e28300b0	 add         r0, r3, #0xB0
  007cc	eb000000	 bl          EnterCriticalSection

; 458  :     SETREG32(&m_pbRegisters->MMCHS_CON, MMCHS_CON_CTPL);

  007d0	e59d3010	 ldr         r3, [sp, #0x10]
  007d4	e2833f57	 add         r3, r3, #0x57, 30
  007d8	e5933000	 ldr         r3, [r3]
  007dc	e283302c	 add         r3, r3, #0x2C
  007e0	e5933000	 ldr         r3, [r3]
  007e4	e3832b02	 orr         r2, r3, #2, 22
  007e8	e59d3010	 ldr         r3, [sp, #0x10]
  007ec	e2833f57	 add         r3, r3, #0x57, 30
  007f0	e5933000	 ldr         r3, [r3]
  007f4	e283302c	 add         r3, r3, #0x2C
  007f8	e5832000	 str         r2, [r3]

; 459  :     if (!m_Sdio4BitDisable && (m_sContext.eInterfaceMode == SD_INTERFACE_SD_4BIT))

  007fc	e59d3010	 ldr         r3, [sp, #0x10]
  00800	e2833e19	 add         r3, r3, #0x19, 28
  00804	e5933000	 ldr         r3, [r3]
  00808	e3530000	 cmp         r3, #0
  0080c	1a00000f	 bne         |$LN1@EnableSDIO|
  00810	e59d3010	 ldr         r3, [sp, #0x10]
  00814	e2833f82	 add         r3, r3, #0x82, 30
  00818	e5933000	 ldr         r3, [r3]
  0081c	e3530001	 cmp         r3, #1
  00820	1a00000a	 bne         |$LN1@EnableSDIO|

; 460  :     {
; 461  :         SETREG32(&m_pbRegisters->MMCHS_CON, MMCHS_CON_CLKEXTFREE);

  00824	e59d3010	 ldr         r3, [sp, #0x10]
  00828	e2833f57	 add         r3, r3, #0x57, 30
  0082c	e5933000	 ldr         r3, [r3]
  00830	e283302c	 add         r3, r3, #0x2C
  00834	e5933000	 ldr         r3, [r3]
  00838	e3832801	 orr         r2, r3, #1, 16
  0083c	e59d3010	 ldr         r3, [sp, #0x10]
  00840	e2833f57	 add         r3, r3, #0x57, 30
  00844	e5933000	 ldr         r3, [r3]
  00848	e283302c	 add         r3, r3, #0x2C
  0084c	e5832000	 str         r2, [r3]
  00850		 |$LN1@EnableSDIO|

; 462  :     }
; 463  : 
; 464  :     // enable exit from smart idle mode on SD/SDIO card interrupt
; 465  :     SETREG32(&m_pbRegisters->MMCHS_ISE, MMCHS_ISE_CIRQ);

  00850	e59d3010	 ldr         r3, [sp, #0x10]
  00854	e2833f57	 add         r3, r3, #0x57, 30
  00858	e5933000	 ldr         r3, [r3]
  0085c	e2833f4e	 add         r3, r3, #0x4E, 30
  00860	e5933000	 ldr         r3, [r3]
  00864	e3832c01	 orr         r2, r3, #1, 24
  00868	e59d3010	 ldr         r3, [sp, #0x10]
  0086c	e2833f57	 add         r3, r3, #0x57, 30
  00870	e5933000	 ldr         r3, [r3]
  00874	e2833f4e	 add         r3, r3, #0x4E, 30
  00878	e5832000	 str         r2, [r3]

; 466  :     // enable SD/SDIO card interrupt
; 467  :     SETREG32(&m_pbRegisters->MMCHS_IE, MMCHS_IE_CIRQ);

  0087c	e59d3010	 ldr         r3, [sp, #0x10]
  00880	e2833f57	 add         r3, r3, #0x57, 30
  00884	e5933000	 ldr         r3, [r3]
  00888	e2833f4d	 add         r3, r3, #0x4D, 30
  0088c	e5933000	 ldr         r3, [r3]
  00890	e3832c01	 orr         r2, r3, #1, 24
  00894	e59d3010	 ldr         r3, [sp, #0x10]
  00898	e2833f57	 add         r3, r3, #0x57, 30
  0089c	e5933000	 ldr         r3, [r3]
  008a0	e2833f4d	 add         r3, r3, #0x4D, 30
  008a4	e5832000	 str         r2, [r3]

; 468  : 
; 469  :     m_sContext.eSDHCIntr = SDHC_SDIO_INTR_ENABLED;

  008a8	e59d3010	 ldr         r3, [sp, #0x10]
  008ac	e2832f81	 add         r2, r3, #0x81, 30
  008b0	e3a03002	 mov         r3, #2
  008b4	e5823000	 str         r3, [r2]

; 470  :     LeaveCriticalSection( &m_critSec );

  008b8	e59d3010	 ldr         r3, [sp, #0x10]
  008bc	e28300b0	 add         r0, r3, #0xB0
  008c0	eb000000	 bl          LeaveCriticalSection

; 471  : }

  008c4	e28dd008	 add         sp, sp, #8
  008c8	e89d6000	 ldmia       sp, {sp, lr}
  008cc	e12fff1e	 bx          lr
  008d0		 |$LN11@EnableSDIO|
  008d0		 |$LN12@EnableSDIO|
  008d0	00000000	 DCD         |??_C@_1EE@HBJAMAKC@?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAS?$AAD?$AAI?$AAO?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAs?$AA?$AN@|
  008d4		 |$LN13@EnableSDIO|
  008d4	00000000	 DCD         |dpCurSettings|
  008d8		 |$LN14@EnableSDIO|
  008d8	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  008dc		 |$LN15@EnableSDIO|
  008dc	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  008e0		 |$LN16@EnableSDIO|
  008e0	00000000	 DCD         |??_C@_1KA@CLLCPJCJ@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  008e4		 |$M45137|

			 ENDP  ; |?EnableSDIOInterrupts@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::EnableSDIOInterrupts

	EXPORT	|?Set_MMC_STAT@CSDIOControllerBase@@QAAXK@Z| ; CSDIOControllerBase::Set_MMC_STAT
	EXPORT	|?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ| ; CSDIOControllerBase::Read_MMC_STAT
	EXPORT	|??_C@_1DM@MAMLMBJK@?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAA?$AAc?$AAk?$AAS?$AAD?$AAI?$AAO?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?AckSDIOInterrupt@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::AckSDIOInterrupt
	IMPORT	|SDHCDIndicateSlotStateChange|

  00038			 AREA	 |.pdata|, PDATA
|$T45154| DCD	|$LN11@AckSDIOInt|
	DCD	0x40004f04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@MAMLMBJK@?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAA?$AAc?$AAk?$AAS?$AAD?$AAI?$AAO?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C", 0x0, "S", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, ":", 0x0, ":", 0x0, "A", 0x0, "c"
	DCB	0x0, "k", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u"
	DCB	0x0, "p", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  008e4			 AREA	 |.text|, CODE, ARM

  008e4		 |?AckSDIOInterrupt@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::AckSDIOInterrupt

; 477  : {

  008e4		 |$LN11@AckSDIOInt|
  008e4	e1a0c00d	 mov         r12, sp
  008e8	e92d0001	 stmdb       sp!, {r0}
  008ec	e92d5000	 stmdb       sp!, {r12, lr}
  008f0	e24dd010	 sub         sp, sp, #0x10
  008f4		 |$M45151|

; 478  :     ASSERT( m_fSDIOInterruptsEnabled );

  008f4	e59d3018	 ldr         r3, [sp, #0x18]
  008f8	e28330f4	 add         r3, r3, #0xF4
  008fc	e5933000	 ldr         r3, [r3]
  00900	e3530000	 cmp         r3, #0
  00904	0a000002	 beq         |$LN5@AckSDIOInt|
  00908	e3a03001	 mov         r3, #1
  0090c	e58d3004	 str         r3, [sp, #4]
  00910	ea000008	 b           |$LN6@AckSDIOInt|
  00914		 |$LN5@AckSDIOInt|
  00914	e3a03c01	 mov         r3, #1, 24
  00918	e38330de	 orr         r3, r3, #0xDE
  0091c	e59f20f8	 ldr         r2, [pc, #0xF8]
  00920	e59f10f0	 ldr         r1, [pc, #0xF0]
  00924	e59f00e8	 ldr         r0, [pc, #0xE8]
  00928	eb000000	 bl          NKDbgPrintfW
  0092c	e6000010	 __debugbreak_ce
  00930	e3a03000	 mov         r3, #0
  00934	e58d3004	 str         r3, [sp, #4]
  00938		 |$LN6@AckSDIOInt|

; 479  :     DEBUGMSG(SHC_INTERRUPT_ZONE, (TEXT("CSDHCSlot::AckSDIOInterrupt\r\n")));

  00938	e59f30d0	 ldr         r3, [pc, #0xD0]
  0093c	e5933440	 ldr         r3, [r3, #0x440]
  00940	e3130001	 tst         r3, #1
  00944	0a000004	 beq         |$LN7@AckSDIOInt|
  00948	e59f00bc	 ldr         r0, [pc, #0xBC]
  0094c	eb000000	 bl          NKDbgPrintfW
  00950	e3a03001	 mov         r3, #1
  00954	e58d3008	 str         r3, [sp, #8]
  00958	ea000001	 b           |$LN8@AckSDIOInt|
  0095c		 |$LN7@AckSDIOInt|
  0095c	e3a03000	 mov         r3, #0
  00960	e58d3008	 str         r3, [sp, #8]
  00964		 |$LN8@AckSDIOInt|

; 480  : #ifdef ENABLE_RETAIL_OUTPUT
; 481  :         RETAILMSG(1, (TEXT("CSDHCSlot::AckSDIOInterrupt\r\n")));
; 482  : #endif
; 483  :     DWORD dwRegValue = Read_MMC_STAT();

  00964	e59d0018	 ldr         r0, [sp, #0x18]
  00968	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  0096c	e58d000c	 str         r0, [sp, #0xC]
  00970	e59d300c	 ldr         r3, [sp, #0xC]
  00974	e58d3000	 str         r3, [sp]

; 484  :     if( dwRegValue & MMCHS_STAT_CIRQ )

  00978	e59d3000	 ldr         r3, [sp]
  0097c	e3130c01	 tst         r3, #1, 24
  00980	0a000009	 beq         |$LN2@AckSDIOInt|

; 485  :     {
; 486  :         Set_MMC_STAT(MMCHS_STAT_CIRQ);

  00984	e3a01c01	 mov         r1, #1, 24
  00988	e59d0018	 ldr         r0, [sp, #0x18]
  0098c	eb000000	 bl          |?Set_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|

; 487  :         SDHCDIndicateSlotStateChange(m_pHCContext, 0, DeviceInterrupting);

  00990	e3a02003	 mov         r2, #3
  00994	e3a01000	 mov         r1, #0
  00998	e59d3018	 ldr         r3, [sp, #0x18]
  0099c	e28330a8	 add         r3, r3, #0xA8
  009a0	e5930000	 ldr         r0, [r3]
  009a4	eb000000	 bl          SDHCDIndicateSlotStateChange

; 488  :     }
; 489  :     else

  009a8	ea000014	 b           |$LN1@AckSDIOInt|
  009ac		 |$LN2@AckSDIOInt|

; 490  :     {
; 491  :         EnterCriticalSection( &m_critSec );

  009ac	e59d3018	 ldr         r3, [sp, #0x18]
  009b0	e28300b0	 add         r0, r3, #0xB0
  009b4	eb000000	 bl          EnterCriticalSection

; 492  :         SETREG32(&m_pbRegisters->MMCHS_IE,  MMCHS_IE_CIRQ);

  009b8	e59d3018	 ldr         r3, [sp, #0x18]
  009bc	e2833f57	 add         r3, r3, #0x57, 30
  009c0	e5933000	 ldr         r3, [r3]
  009c4	e2833f4d	 add         r3, r3, #0x4D, 30
  009c8	e5933000	 ldr         r3, [r3]
  009cc	e3832c01	 orr         r2, r3, #1, 24
  009d0	e59d3018	 ldr         r3, [sp, #0x18]
  009d4	e2833f57	 add         r3, r3, #0x57, 30
  009d8	e5933000	 ldr         r3, [r3]
  009dc	e2833f4d	 add         r3, r3, #0x4D, 30
  009e0	e5832000	 str         r2, [r3]

; 493  :         LeaveCriticalSection( &m_critSec );

  009e4	e59d3018	 ldr         r3, [sp, #0x18]
  009e8	e28300b0	 add         r0, r3, #0xB0
  009ec	eb000000	 bl          LeaveCriticalSection

; 494  :         m_fSDIOInterruptInService = FALSE;

  009f0	e59d3018	 ldr         r3, [sp, #0x18]
  009f4	e28320d8	 add         r2, r3, #0xD8
  009f8	e3a03000	 mov         r3, #0
  009fc	e5823000	 str         r3, [r2]
  00a00		 |$LN1@AckSDIOInt|

; 495  :     }
; 496  : }

  00a00	e28dd010	 add         sp, sp, #0x10
  00a04	e89d6000	 ldmia       sp, {sp, lr}
  00a08	e12fff1e	 bx          lr
  00a0c		 |$LN12@AckSDIOInt|
  00a0c		 |$LN13@AckSDIOInt|
  00a0c	00000000	 DCD         |??_C@_1DM@MAMLMBJK@?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAA?$AAc?$AAk?$AAS?$AAD?$AAI?$AAO?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  00a10		 |$LN14@AckSDIOInt|
  00a10	00000000	 DCD         |dpCurSettings|
  00a14		 |$LN15@AckSDIOInt|
  00a14	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  00a18		 |$LN16@AckSDIOInt|
  00a18	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  00a1c		 |$LN17@AckSDIOInt|
  00a1c	00000000	 DCD         |??_C@_1KA@CLLCPJCJ@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  00a20		 |$M45152|

			 ENDP  ; |?AckSDIOInterrupt@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::AckSDIOInterrupt


  00000			 AREA	 |.pdata|, PDATA
|$T45166| DCD	|$LN5@Read_MMC_S|
	DCD	0x40001604
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ| PROC ; CSDIOControllerBase::Read_MMC_STAT

; 330  : {

  00000		 |$LN5@Read_MMC_S|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M45163|

; 331  :     DWORD dwVal;
; 332  :     EnterCriticalSection( &m_critSec );

  00010	e59d3010	 ldr         r3, [sp, #0x10]
  00014	e28300b0	 add         r0, r3, #0xB0
  00018	eb000000	 bl          EnterCriticalSection

; 333  :     dwVal = INREG32(&m_pbRegisters->MMCHS_STAT);

  0001c	e59d3010	 ldr         r3, [sp, #0x10]
  00020	e2833f57	 add         r3, r3, #0x57, 30
  00024	e5933000	 ldr         r3, [r3]
  00028	e2833e13	 add         r3, r3, #0x13, 28
  0002c	e5933000	 ldr         r3, [r3]
  00030	e58d3000	 str         r3, [sp]

; 334  :     LeaveCriticalSection( &m_critSec );

  00034	e59d3010	 ldr         r3, [sp, #0x10]
  00038	e28300b0	 add         r0, r3, #0xB0
  0003c	eb000000	 bl          LeaveCriticalSection

; 335  :     return dwVal;

  00040	e59d3000	 ldr         r3, [sp]
  00044	e58d3004	 str         r3, [sp, #4]

; 336  : }

  00048	e59d0004	 ldr         r0, [sp, #4]
  0004c	e28dd008	 add         sp, sp, #8
  00050	e89d6000	 ldmia       sp, {sp, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$M45164|

			 ENDP  ; |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|, CSDIOControllerBase::Read_MMC_STAT


  00000			 AREA	 |.pdata|, PDATA
|$T45173| DCD	|$LN5@Set_MMC_ST|
	DCD	0x40001103
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Set_MMC_STAT@CSDIOControllerBase@@QAAXK@Z| PROC ; CSDIOControllerBase::Set_MMC_STAT

; 348  : {

  00000		 |$LN5@Set_MMC_ST|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M45170|

; 349  :     EnterCriticalSection( &m_critSec );

  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e28300b0	 add         r0, r3, #0xB0
  00014	eb000000	 bl          EnterCriticalSection

; 350  :     OUTREG32(&m_pbRegisters->MMCHS_STAT, dwVal);

  00018	e59d3008	 ldr         r3, [sp, #8]
  0001c	e2833f57	 add         r3, r3, #0x57, 30
  00020	e5933000	 ldr         r3, [r3]
  00024	e2832e13	 add         r2, r3, #0x13, 28
  00028	e59d300c	 ldr         r3, [sp, #0xC]
  0002c	e5823000	 str         r3, [r2]

; 351  :     LeaveCriticalSection( &m_critSec );

  00030	e59d3008	 ldr         r3, [sp, #8]
  00034	e28300b0	 add         r0, r3, #0xB0
  00038	eb000000	 bl          LeaveCriticalSection

; 352  : }

  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M45171|

			 ENDP  ; |?Set_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|, CSDIOControllerBase::Set_MMC_STAT

	EXPORT	|??_C@_1EG@ODHEMBHO@?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAS?$AAD?$AAI?$AAO?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAs@| [ DATA ] ; `string'
	EXPORT	|?DisableSDIOInterrupts@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::DisableSDIOInterrupts

  00040			 AREA	 |.pdata|, PDATA
|$T45184| DCD	|$LN9@DisableSDI|
	DCD	0x40004e04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@ODHEMBHO@?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAS?$AAD?$AAI?$AAO?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAs@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C", 0x0, "S", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, ":", 0x0, ":", 0x0, "D", 0x0, "i"
	DCB	0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, "S"
	DCB	0x0, "D", 0x0, "I", 0x0, "O", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00a20			 AREA	 |.text|, CODE, ARM

  00a20		 |?DisableSDIOInterrupts@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::DisableSDIOInterrupts

; 501  : {

  00a20		 |$LN9@DisableSDI|
  00a20	e1a0c00d	 mov         r12, sp
  00a24	e92d0001	 stmdb       sp!, {r0}
  00a28	e92d5000	 stmdb       sp!, {r12, lr}
  00a2c	e24dd008	 sub         sp, sp, #8
  00a30		 |$M45181|

; 502  :     ASSERT( m_fSDIOInterruptsEnabled );

  00a30	e59d3010	 ldr         r3, [sp, #0x10]
  00a34	e28330f4	 add         r3, r3, #0xF4
  00a38	e5933000	 ldr         r3, [r3]
  00a3c	e3530000	 cmp         r3, #0
  00a40	0a000002	 beq         |$LN3@DisableSDI|
  00a44	e3a03001	 mov         r3, #1
  00a48	e58d3000	 str         r3, [sp]
  00a4c	ea000008	 b           |$LN4@DisableSDI|
  00a50		 |$LN3@DisableSDI|
  00a50	e3a03c01	 mov         r3, #1, 24
  00a54	e38330f6	 orr         r3, r3, #0xF6
  00a58	e59f20f4	 ldr         r2, [pc, #0xF4]
  00a5c	e59f10ec	 ldr         r1, [pc, #0xEC]
  00a60	e59f00e4	 ldr         r0, [pc, #0xE4]
  00a64	eb000000	 bl          NKDbgPrintfW
  00a68	e6000010	 __debugbreak_ce
  00a6c	e3a03000	 mov         r3, #0
  00a70	e58d3000	 str         r3, [sp]
  00a74		 |$LN4@DisableSDI|

; 503  :     m_fSDIOInterruptsEnabled = FALSE;

  00a74	e59d3010	 ldr         r3, [sp, #0x10]
  00a78	e28320f4	 add         r2, r3, #0xF4
  00a7c	e3a03000	 mov         r3, #0
  00a80	e5823000	 str         r3, [r2]

; 504  : 
; 505  :     DEBUGMSG(SHC_INTERRUPT_ZONE, (TEXT("CSDHCSlot::DisableSDIOInterrupts\r\n")));

  00a84	e59f30bc	 ldr         r3, [pc, #0xBC]
  00a88	e5933440	 ldr         r3, [r3, #0x440]
  00a8c	e3130001	 tst         r3, #1
  00a90	0a000004	 beq         |$LN5@DisableSDI|
  00a94	e59f00a8	 ldr         r0, [pc, #0xA8]
  00a98	eb000000	 bl          NKDbgPrintfW
  00a9c	e3a03001	 mov         r3, #1
  00aa0	e58d3004	 str         r3, [sp, #4]
  00aa4	ea000001	 b           |$LN6@DisableSDI|
  00aa8		 |$LN5@DisableSDI|
  00aa8	e3a03000	 mov         r3, #0
  00aac	e58d3004	 str         r3, [sp, #4]
  00ab0		 |$LN6@DisableSDI|

; 506  : #ifdef ENABLE_RETAIL_OUTPUT
; 507  :         RETAILMSG(1, (TEXT("CSDHCSlot::DisableSDIOInterrupts\r\n")));
; 508  : #endif
; 509  :     EnterCriticalSection( &m_critSec );

  00ab0	e59d3010	 ldr         r3, [sp, #0x10]
  00ab4	e28300b0	 add         r0, r3, #0xB0
  00ab8	eb000000	 bl          EnterCriticalSection

; 510  :     CLRREG32(&m_pbRegisters->MMCHS_ISE, MMCHS_ISE_CIRQ);

  00abc	e59d3010	 ldr         r3, [sp, #0x10]
  00ac0	e2833f57	 add         r3, r3, #0x57, 30
  00ac4	e5933000	 ldr         r3, [r3]
  00ac8	e2833f4e	 add         r3, r3, #0x4E, 30
  00acc	e5932000	 ldr         r2, [r3]
  00ad0	e3e03c01	 mvn         r3, #1, 24
  00ad4	e0022003	 and         r2, r2, r3
  00ad8	e59d3010	 ldr         r3, [sp, #0x10]
  00adc	e2833f57	 add         r3, r3, #0x57, 30
  00ae0	e5933000	 ldr         r3, [r3]
  00ae4	e2833f4e	 add         r3, r3, #0x4E, 30
  00ae8	e5832000	 str         r2, [r3]

; 511  :     CLRREG32(&m_pbRegisters->MMCHS_IE,  MMCHS_IE_CIRQ);

  00aec	e59d3010	 ldr         r3, [sp, #0x10]
  00af0	e2833f57	 add         r3, r3, #0x57, 30
  00af4	e5933000	 ldr         r3, [r3]
  00af8	e2833f4d	 add         r3, r3, #0x4D, 30
  00afc	e5932000	 ldr         r2, [r3]
  00b00	e3e03c01	 mvn         r3, #1, 24
  00b04	e0022003	 and         r2, r2, r3
  00b08	e59d3010	 ldr         r3, [sp, #0x10]
  00b0c	e2833f57	 add         r3, r3, #0x57, 30
  00b10	e5933000	 ldr         r3, [r3]
  00b14	e2833f4d	 add         r3, r3, #0x4D, 30
  00b18	e5832000	 str         r2, [r3]

; 512  :     m_sContext.eSDHCIntr = SDHC_INTR_DISABLED;

  00b1c	e59d3010	 ldr         r3, [sp, #0x10]
  00b20	e2832f81	 add         r2, r3, #0x81, 30
  00b24	e3a03000	 mov         r3, #0
  00b28	e5823000	 str         r3, [r2]

; 513  :     LeaveCriticalSection( &m_critSec );

  00b2c	e59d3010	 ldr         r3, [sp, #0x10]
  00b30	e28300b0	 add         r0, r3, #0xB0
  00b34	eb000000	 bl          LeaveCriticalSection

; 514  : }

  00b38	e28dd008	 add         sp, sp, #8
  00b3c	e89d6000	 ldmia       sp, {sp, lr}
  00b40	e12fff1e	 bx          lr
  00b44		 |$LN10@DisableSDI|
  00b44		 |$LN11@DisableSDI|
  00b44	00000000	 DCD         |??_C@_1EG@ODHEMBHO@?$AAC?$AAS?$AAD?$AAH?$AAC?$AAS?$AAl?$AAo?$AAt?$AA?3?$AA?3?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAS?$AAD?$AAI?$AAO?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAs@|
  00b48		 |$LN12@DisableSDI|
  00b48	00000000	 DCD         |dpCurSettings|
  00b4c		 |$LN13@DisableSDI|
  00b4c	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  00b50		 |$LN14@DisableSDI|
  00b50	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  00b54		 |$LN15@DisableSDI|
  00b54	00000000	 DCD         |??_C@_1KA@CLLCPJCJ@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  00b58		 |$M45182|

			 ENDP  ; |?DisableSDIOInterrupts@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::DisableSDIOInterrupts

	EXPORT	|??_C@_1HM@OPPOLJBB@?$AAS?$AAD?$AAH?$AAC?$AAS?$AAe?$AAt?$AAR?$AAa?$AAt?$AAe?$AA?5?$AA?9?$AA?5?$AAA?$AAc?$AAt?$AAu?$AAa?$AAl?$AA?5?$AAc?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAr?$AAa?$AAt?$AAe?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@OGFECBHL@?$AAd?$AAw?$AAD?$AAi?$AAv?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@EMNPHMF@?$AAa?$AAc?$AAt?$AAu?$AAa?$AAl?$AA?5?$AAw?$AAD?$AAi?$AAv?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAe?$AAd?$AA?3?$AA0?$AAx@| [ DATA ] ; `string'
	IMPORT	|__rt_udiv|

  00048			 AREA	 |.pdata|, PDATA
|$T45202| DCD	|$LN17@SetClockRa|
	DCD	0x4000d104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@OPPOLJBB@?$AAS?$AAD?$AAH?$AAC?$AAS?$AAe?$AAt?$AAR?$AAa?$AAt?$AAe?$AA?5?$AA?9?$AA?5?$AAA?$AAc?$AAt?$AAu?$AAa?$AAl?$AA?5?$AAc?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAr?$AAa?$AAt?$AAe?$AA?5@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "R", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "A", 0x0, "c", 0x0, "t", 0x0, "u", 0x0, "a"
	DCB	0x0, "l", 0x0, " ", 0x0, "c", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, " ", 0x0, "r", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "M", 0x0, "M", 0x0, "C"
	DCB	0x0, "H", 0x0, "S", 0x0, "_", 0x0, "S", 0x0, "Y", 0x0, "S"
	DCB	0x0, "C", 0x0, "T", 0x0, "L", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@OGFECBHL@?$AAd?$AAw?$AAD?$AAi?$AAv?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AA@| DCB "d"
	DCB	0x0, "w", 0x0, "D", 0x0, "i", 0x0, "v", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@EMNPHMF@?$AAa?$AAc?$AAt?$AAu?$AAa?$AAl?$AA?5?$AAw?$AAD?$AAi?$AAv?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAe?$AAd?$AA?3?$AA0?$AAx@| DCB "a"
	DCB	0x0, "c", 0x0, "t", 0x0, "u", 0x0, "a", 0x0, "l", 0x0, " "
	DCB	0x0, "w", 0x0, "D", 0x0, "i", 0x0, "v", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " "
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, ":", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00b58			 AREA	 |.text|, CODE, ARM

  00b58		 |?SetClockRate@CSDIOControllerBase@@QAAXPAK@Z| PROC ; CSDIOControllerBase::SetClockRate

; 519  : {

  00b58		 |$LN17@SetClockRa|
  00b58	e1a0c00d	 mov         r12, sp
  00b5c	e92d0003	 stmdb       sp!, {r0, r1}
  00b60	e92d5000	 stmdb       sp!, {r12, lr}
  00b64	e24dd01c	 sub         sp, sp, #0x1C
  00b68		 |$M45199|

; 520  :     DWORD dwClockRate = *pdwRate;

  00b68	e59d3028	 ldr         r3, [sp, #0x28]
  00b6c	e5933000	 ldr         r3, [r3]
  00b70	e58d3004	 str         r3, [sp, #4]

; 521  : 
; 522  :     if(dwClockRate > m_dwMaxClockRate) dwClockRate = m_dwMaxClockRate;

  00b74	e59d3024	 ldr         r3, [sp, #0x24]
  00b78	e2833f52	 add         r3, r3, #0x52, 30
  00b7c	e59d2004	 ldr         r2, [sp, #4]
  00b80	e5933000	 ldr         r3, [r3]
  00b84	e1520003	 cmp         r2, r3
  00b88	9a000003	 bls         |$LN6@SetClockRa|
  00b8c	e59d3024	 ldr         r3, [sp, #0x24]
  00b90	e2833f52	 add         r3, r3, #0x52, 30
  00b94	e5933000	 ldr         r3, [r3]
  00b98	e58d3004	 str         r3, [sp, #4]
  00b9c		 |$LN6@SetClockRa|

; 523  : 
; 524  :     // calculate the register value
; 525  :     DWORD dwDiv = (DWORD)((MMCSD_CLOCK_INPUT + dwClockRate - 1) / dwClockRate);

  00b9c	e59d2004	 ldr         r2, [sp, #4]
  00ba0	e59f32e8	 ldr         r3, [pc, #0x2E8]
  00ba4	e0823003	 add         r3, r2, r3
  00ba8	e2431001	 sub         r1, r3, #1
  00bac	e59d0004	 ldr         r0, [sp, #4]
  00bb0	eb000000	 bl          __rt_udiv
  00bb4	e58d0000	 str         r0, [sp]

; 526  : 
; 527  :     DEBUGMSG(SHC_CLOCK_ZONE, (TEXT("actual wDiv = 0x%x  requested:0x%x"), dwDiv, *pdwRate));

  00bb8	e59f32cc	 ldr         r3, [pc, #0x2CC]
  00bbc	e5933440	 ldr         r3, [r3, #0x440]
  00bc0	e3130010	 tst         r3, #0x10
  00bc4	0a000007	 beq         |$LN9@SetClockRa|
  00bc8	e59d3028	 ldr         r3, [sp, #0x28]
  00bcc	e5932000	 ldr         r2, [r3]
  00bd0	e59d1000	 ldr         r1, [sp]
  00bd4	e59f02bc	 ldr         r0, [pc, #0x2BC]
  00bd8	eb000000	 bl          NKDbgPrintfW
  00bdc	e3a03001	 mov         r3, #1
  00be0	e58d3010	 str         r3, [sp, #0x10]
  00be4	ea000001	 b           |$LN10@SetClockRa|
  00be8		 |$LN9@SetClockRa|
  00be8	e3a03000	 mov         r3, #0
  00bec	e58d3010	 str         r3, [sp, #0x10]
  00bf0		 |$LN10@SetClockRa|

; 528  :     // Only 10 bits available for the divider, so mmc base clock / 1024 is minimum.
; 529  :     if ( dwDiv > 0x03FF )

  00bf0	e59d2000	 ldr         r2, [sp]
  00bf4	e3a03c03	 mov         r3, #3, 24
  00bf8	e38330ff	 orr         r3, r3, #0xFF
  00bfc	e1520003	 cmp         r2, r3
  00c00	9a000002	 bls         |$LN5@SetClockRa|

; 530  :         dwDiv = 0x03FF;

  00c04	e3a03c03	 mov         r3, #3, 24
  00c08	e38330ff	 orr         r3, r3, #0xFF
  00c0c	e58d3000	 str         r3, [sp]
  00c10		 |$LN5@SetClockRa|

; 531  : 
; 532  :     DEBUGMSG(SHC_CLOCK_ZONE, (TEXT("dwDiv = 0x%x 0x%x"), dwDiv, *pdwRate));

  00c10	e59f3274	 ldr         r3, [pc, #0x274]
  00c14	e5933440	 ldr         r3, [r3, #0x440]
  00c18	e3130010	 tst         r3, #0x10
  00c1c	0a000007	 beq         |$LN11@SetClockRa|
  00c20	e59d3028	 ldr         r3, [sp, #0x28]
  00c24	e5932000	 ldr         r2, [r3]
  00c28	e59d1000	 ldr         r1, [sp]
  00c2c	e59f0260	 ldr         r0, [pc, #0x260]
  00c30	eb000000	 bl          NKDbgPrintfW
  00c34	e3a03001	 mov         r3, #1
  00c38	e58d3014	 str         r3, [sp, #0x14]
  00c3c	ea000001	 b           |$LN12@SetClockRa|
  00c40		 |$LN11@SetClockRa|
  00c40	e3a03000	 mov         r3, #0
  00c44	e58d3014	 str         r3, [sp, #0x14]
  00c48		 |$LN12@SetClockRa|

; 533  : 
; 534  :     // Program the divisor, but leave the rest of the register alone.
; 535  :     INT32 dwRegValue = INREG32(&m_pbRegisters->MMCHS_SYSCTL);

  00c48	e59d3024	 ldr         r3, [sp, #0x24]
  00c4c	e2833f57	 add         r3, r3, #0x57, 30
  00c50	e5933000	 ldr         r3, [r3]
  00c54	e2833f4b	 add         r3, r3, #0x4B, 30
  00c58	e5933000	 ldr         r3, [r3]
  00c5c	e58d3008	 str         r3, [sp, #8]

; 536  : 
; 537  :     dwRegValue = (dwRegValue & ~MMCHS_SYSCTL_CLKD_MASK) | MMCHS_SYSCTL_CLKD(dwDiv);

  00c60	e59d2008	 ldr         r2, [sp, #8]
  00c64	e3e03cff	 mvn         r3, #0xFF, 24
  00c68	e22330c0	 eor         r3, r3, #0xC0
  00c6c	e0022003	 and         r2, r2, r3
  00c70	e59d3000	 ldr         r3, [sp]
  00c74	e1a03303	 mov         r3, r3, lsl #6
  00c78	e1823003	 orr         r3, r2, r3
  00c7c	e58d3008	 str         r3, [sp, #8]

; 538  :     dwRegValue = (dwRegValue & ~MMCHS_SYSCTL_DTO_MASK) | MMCHS_SYSCTL_DTO(0x0e); // DTO

  00c80	e59d2008	 ldr         r2, [sp, #8]
  00c84	e3e0380f	 mvn         r3, #0xF, 16
  00c88	e0023003	 and         r3, r2, r3
  00c8c	e383380e	 orr         r3, r3, #0xE, 16
  00c90	e58d3008	 str         r3, [sp, #8]

; 539  :     dwRegValue &= ~MMCHS_SYSCTL_CEN;

  00c94	e59d2008	 ldr         r2, [sp, #8]
  00c98	e3e03004	 mvn         r3, #4
  00c9c	e0023003	 and         r3, r2, r3
  00ca0	e58d3008	 str         r3, [sp, #8]

; 540  :     dwRegValue &= ~MMCHS_SYSCTL_ICE;

  00ca4	e59d2008	 ldr         r2, [sp, #8]
  00ca8	e3e03001	 mvn         r3, #1
  00cac	e0023003	 and         r3, r2, r3
  00cb0	e58d3008	 str         r3, [sp, #8]

; 541  : 
; 542  :     CLRREG32(&m_pbRegisters->MMCHS_SYSCTL, MMCHS_SYSCTL_CEN);

  00cb4	e59d3024	 ldr         r3, [sp, #0x24]
  00cb8	e2833f57	 add         r3, r3, #0x57, 30
  00cbc	e5933000	 ldr         r3, [r3]
  00cc0	e2833f4b	 add         r3, r3, #0x4B, 30
  00cc4	e5932000	 ldr         r2, [r3]
  00cc8	e3e03004	 mvn         r3, #4
  00ccc	e0022003	 and         r2, r2, r3
  00cd0	e59d3024	 ldr         r3, [sp, #0x24]
  00cd4	e2833f57	 add         r3, r3, #0x57, 30
  00cd8	e5933000	 ldr         r3, [r3]
  00cdc	e2833f4b	 add         r3, r3, #0x4B, 30
  00ce0	e5832000	 str         r2, [r3]

; 543  : 
; 544  :     OUTREG32(&m_pbRegisters->MMCHS_SYSCTL, dwRegValue);

  00ce4	e59d3024	 ldr         r3, [sp, #0x24]
  00ce8	e2833f57	 add         r3, r3, #0x57, 30
  00cec	e5933000	 ldr         r3, [r3]
  00cf0	e2832f4b	 add         r2, r3, #0x4B, 30
  00cf4	e59d3008	 ldr         r3, [sp, #8]
  00cf8	e5823000	 str         r3, [r2]

; 545  : 
; 546  :     SETREG32(&m_pbRegisters->MMCHS_SYSCTL, MMCHS_SYSCTL_ICE); // enable internal clock

  00cfc	e59d3024	 ldr         r3, [sp, #0x24]
  00d00	e2833f57	 add         r3, r3, #0x57, 30
  00d04	e5933000	 ldr         r3, [r3]
  00d08	e2833f4b	 add         r3, r3, #0x4B, 30
  00d0c	e5933000	 ldr         r3, [r3]
  00d10	e3832001	 orr         r2, r3, #1
  00d14	e59d3024	 ldr         r3, [sp, #0x24]
  00d18	e2833f57	 add         r3, r3, #0x57, 30
  00d1c	e5933000	 ldr         r3, [r3]
  00d20	e2833f4b	 add         r3, r3, #0x4B, 30
  00d24	e5832000	 str         r2, [r3]

; 547  : 
; 548  :     DWORD dwTimeout = 500;

  00d28	e3a03f7d	 mov         r3, #0x7D, 30
  00d2c	e58d300c	 str         r3, [sp, #0xC]
  00d30		 |$LN4@SetClockRa|

; 549  :     while(((INREG32(&m_pbRegisters->MMCHS_SYSCTL) & MMCHS_SYSCTL_ICS) != MMCHS_SYSCTL_ICS) && (dwTimeout>0))

  00d30	e59d3024	 ldr         r3, [sp, #0x24]
  00d34	e2833f57	 add         r3, r3, #0x57, 30
  00d38	e5933000	 ldr         r3, [r3]
  00d3c	e2833f4b	 add         r3, r3, #0x4B, 30
  00d40	e5933000	 ldr         r3, [r3]
  00d44	e2033002	 and         r3, r3, #2
  00d48	e3530002	 cmp         r3, #2
  00d4c	0a000006	 beq         |$LN3@SetClockRa|
  00d50	e59d300c	 ldr         r3, [sp, #0xC]
  00d54	e3530000	 cmp         r3, #0
  00d58	9a000003	 bls         |$LN3@SetClockRa|

; 550  :     {
; 551  :         dwTimeout--;

  00d5c	e59d300c	 ldr         r3, [sp, #0xC]
  00d60	e2433001	 sub         r3, r3, #1
  00d64	e58d300c	 str         r3, [sp, #0xC]

; 552  :     }

  00d68	eafffff0	 b           |$LN4@SetClockRa|
  00d6c		 |$LN3@SetClockRa|

; 553  : 
; 554  :     SETREG32(&m_pbRegisters->MMCHS_SYSCTL, MMCHS_SYSCTL_CEN);

  00d6c	e59d3024	 ldr         r3, [sp, #0x24]
  00d70	e2833f57	 add         r3, r3, #0x57, 30
  00d74	e5933000	 ldr         r3, [r3]
  00d78	e2833f4b	 add         r3, r3, #0x4B, 30
  00d7c	e5933000	 ldr         r3, [r3]
  00d80	e3832004	 orr         r2, r3, #4
  00d84	e59d3024	 ldr         r3, [sp, #0x24]
  00d88	e2833f57	 add         r3, r3, #0x57, 30
  00d8c	e5933000	 ldr         r3, [r3]
  00d90	e2833f4b	 add         r3, r3, #0x4B, 30
  00d94	e5832000	 str         r2, [r3]

; 555  :     SETREG32(&m_pbRegisters->MMCHS_HCTL, MMCHS_HCTL_SDBP); // power up the card

  00d98	e59d3024	 ldr         r3, [sp, #0x24]
  00d9c	e2833f57	 add         r3, r3, #0x57, 30
  00da0	e5933000	 ldr         r3, [r3]
  00da4	e2833f4a	 add         r3, r3, #0x4A, 30
  00da8	e5933000	 ldr         r3, [r3]
  00dac	e3832c01	 orr         r2, r3, #1, 24
  00db0	e59d3024	 ldr         r3, [sp, #0x24]
  00db4	e2833f57	 add         r3, r3, #0x57, 30
  00db8	e5933000	 ldr         r3, [r3]
  00dbc	e2833f4a	 add         r3, r3, #0x4A, 30
  00dc0	e5832000	 str         r2, [r3]

; 556  : 
; 557  :     dwTimeout = 500;

  00dc4	e3a03f7d	 mov         r3, #0x7D, 30
  00dc8	e58d300c	 str         r3, [sp, #0xC]
  00dcc		 |$LN2@SetClockRa|

; 558  :     while(((INREG32(&m_pbRegisters->MMCHS_SYSCTL) & MMCHS_SYSCTL_CEN) != MMCHS_SYSCTL_CEN) && (dwTimeout>0))

  00dcc	e59d3024	 ldr         r3, [sp, #0x24]
  00dd0	e2833f57	 add         r3, r3, #0x57, 30
  00dd4	e5933000	 ldr         r3, [r3]
  00dd8	e2833f4b	 add         r3, r3, #0x4B, 30
  00ddc	e5933000	 ldr         r3, [r3]
  00de0	e2033004	 and         r3, r3, #4
  00de4	e3530004	 cmp         r3, #4
  00de8	0a000006	 beq         |$LN1@SetClockRa|
  00dec	e59d300c	 ldr         r3, [sp, #0xC]
  00df0	e3530000	 cmp         r3, #0
  00df4	9a000003	 bls         |$LN1@SetClockRa|

; 559  :     {
; 560  :         dwTimeout--;

  00df8	e59d300c	 ldr         r3, [sp, #0xC]
  00dfc	e2433001	 sub         r3, r3, #1
  00e00	e58d300c	 str         r3, [sp, #0xC]

; 561  :     }

  00e04	eafffff0	 b           |$LN2@SetClockRa|
  00e08		 |$LN1@SetClockRa|

; 562  : 
; 563  :     *pdwRate = MMCSD_CLOCK_INPUT / dwDiv;

  00e08	e59d0000	 ldr         r0, [sp]
  00e0c	e59f107c	 ldr         r1, [pc, #0x7C]
  00e10	eb000000	 bl          __rt_udiv
  00e14	e59d3028	 ldr         r3, [sp, #0x28]
  00e18	e5830000	 str         r0, [r3]

; 564  :     m_sContext.dwClockRate = MMCSD_CLOCK_INPUT / dwDiv;

  00e1c	e59d0000	 ldr         r0, [sp]
  00e20	e59f1068	 ldr         r1, [pc, #0x68]
  00e24	eb000000	 bl          __rt_udiv
  00e28	e59d3024	 ldr         r3, [sp, #0x24]
  00e2c	e2833c02	 add         r3, r3, #2, 24
  00e30	e5830000	 str         r0, [r3]

; 565  : 
; 566  :     DEBUGMSG(SHC_CLOCK_ZONE,(TEXT("SDHCSetRate - Actual clock rate = 0x%x, MMCHS_SYSCTL = 0x%x\r\n"), *pdwRate, INREG32(&m_pbRegisters->MMCHS_SYSCTL)));

  00e34	e59f3050	 ldr         r3, [pc, #0x50]
  00e38	e5933440	 ldr         r3, [r3, #0x440]
  00e3c	e3130010	 tst         r3, #0x10
  00e40	0a00000b	 beq         |$LN13@SetClockRa|
  00e44	e59d3024	 ldr         r3, [sp, #0x24]
  00e48	e2833f57	 add         r3, r3, #0x57, 30
  00e4c	e5933000	 ldr         r3, [r3]
  00e50	e2833f4b	 add         r3, r3, #0x4B, 30
  00e54	e5932000	 ldr         r2, [r3]
  00e58	e59d3028	 ldr         r3, [sp, #0x28]
  00e5c	e5931000	 ldr         r1, [r3]
  00e60	e59f0020	 ldr         r0, [pc, #0x20]
  00e64	eb000000	 bl          NKDbgPrintfW
  00e68	e3a03001	 mov         r3, #1
  00e6c	e58d3018	 str         r3, [sp, #0x18]
  00e70	ea000001	 b           |$LN14@SetClockRa|
  00e74		 |$LN13@SetClockRa|
  00e74	e3a03000	 mov         r3, #0
  00e78	e58d3018	 str         r3, [sp, #0x18]
  00e7c		 |$LN14@SetClockRa|

; 567  :     //RETAILMSG(1,(TEXT("SDHCSetRate - Actual clock rate = %d, MMCHS_SYSCTL = 0x%x\r\n"), *pdwRate, INREG32(&m_pbRegisters->MMCHS_SYSCTL)));
; 568  : }

  00e7c	e28dd01c	 add         sp, sp, #0x1C
  00e80	e89d6000	 ldmia       sp, {sp, lr}
  00e84	e12fff1e	 bx          lr
  00e88		 |$LN18@SetClockRa|
  00e88		 |$LN19@SetClockRa|
  00e88	00000000	 DCD         |??_C@_1HM@OPPOLJBB@?$AAS?$AAD?$AAH?$AAC?$AAS?$AAe?$AAt?$AAR?$AAa?$AAt?$AAe?$AA?5?$AA?9?$AA?5?$AAA?$AAc?$AAt?$AAu?$AAa?$AAl?$AA?5?$AAc?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAr?$AAa?$AAt?$AAe?$AA?5@|
  00e8c		 |$LN20@SetClockRa|
  00e8c	00000000	 DCD         |dpCurSettings|
  00e90		 |$LN21@SetClockRa|
  00e90	05b8d800	 DCD         0x5b8d800
  00e94		 |$LN22@SetClockRa|
  00e94	00000000	 DCD         |??_C@_1CE@OGFECBHL@?$AAd?$AAw?$AAD?$AAi?$AAv?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AA@|
  00e98		 |$LN23@SetClockRa|
  00e98	00000000	 DCD         |??_C@_1EG@EMNPHMF@?$AAa?$AAc?$AAt?$AAu?$AAa?$AAl?$AA?5?$AAw?$AAD?$AAi?$AAv?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAe?$AAd?$AA?3?$AA0?$AAx@|
  00e9c		 |$M45200|

			 ENDP  ; |?SetClockRate@CSDIOControllerBase@@QAAXPAK@Z|, CSDIOControllerBase::SetClockRate

	EXPORT	|?IsMultipleBlockReadSupported@CSDIOControllerBase@@IAAHXZ| ; CSDIOControllerBase::IsMultipleBlockReadSupported

  00050			 AREA	 |.pdata|, PDATA
|$T45214| DCD	|$LN6@IsMultiple|
	DCD	0x40001304
; Function compile flags: /Odtp

  00e9c			 AREA	 |.text|, CODE, ARM

  00e9c		 |?IsMultipleBlockReadSupported@CSDIOControllerBase@@IAAHXZ| PROC ; CSDIOControllerBase::IsMultipleBlockReadSupported

; 571  : {

  00e9c		 |$LN6@IsMultiple|
  00e9c	e1a0c00d	 mov         r12, sp
  00ea0	e92d0001	 stmdb       sp!, {r0}
  00ea4	e92d5000	 stmdb       sp!, {r12, lr}
  00ea8	e24dd008	 sub         sp, sp, #8
  00eac		 |$M45211|

; 572  :     BOOL bVal = FALSE;//TRUE;

  00eac	e3a03000	 mov         r3, #0
  00eb0	e58d3000	 str         r3, [sp]

; 573  :     // work around for a OMAP35XX silicon issue (data CRC error on READ_MULTIPLE_BLOCK command)
; 574  :     // This is present in earley processor revisions
; 575  :     if(m_dwCPURev <= CPU_FAMILY_35XX_REVISION_ES_3_0)

  00eb4	e59d3010	 ldr         r3, [sp, #0x10]
  00eb8	e2833f5f	 add         r3, r3, #0x5F, 30
  00ebc	e5933000	 ldr         r3, [r3]
  00ec0	e3530005	 cmp         r3, #5
  00ec4	8a000001	 bhi         |$LN1@IsMultiple|

; 576  :     {
; 577  :         bVal = FALSE;

  00ec8	e3a03000	 mov         r3, #0
  00ecc	e58d3000	 str         r3, [sp]
  00ed0		 |$LN1@IsMultiple|

; 578  :     }
; 579  :     return bVal;

  00ed0	e59d3000	 ldr         r3, [sp]
  00ed4	e58d3004	 str         r3, [sp, #4]

; 580  : }

  00ed8	e59d0004	 ldr         r0, [sp, #4]
  00edc	e28dd008	 add         sp, sp, #8
  00ee0	e89d6000	 ldmia       sp, {sp, lr}
  00ee4	e12fff1e	 bx          lr
  00ee8		 |$M45212|

			 ENDP  ; |?IsMultipleBlockReadSupported@CSDIOControllerBase@@IAAHXZ|, CSDIOControllerBase::IsMultipleBlockReadSupported

	EXPORT	|??_C@_1DO@OCDBIGLO@?$AAM?$AAM?$AAC?$AA?5?$AAS?$AAl?$AAo?$AAt?$AA?5?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?SetSDVSVoltage@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::SetSDVSVoltage

  00058			 AREA	 |.pdata|, PDATA
|$T45221| DCD	|$LN27@SetSDVSVol|
	DCD	0x4000a804

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@OCDBIGLO@?$AAM?$AAM?$AAC?$AA?5?$AAS?$AAl?$AAo?$AAt?$AA?5?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, " ", 0x0, "S", 0x0, "l", 0x0, "o"
	DCB	0x0, "t", 0x0, " ", 0x0, "n", 0x0, "u", 0x0, "m", 0x0, "b"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " "
	DCB	0x0, "n", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "V", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  00ee8			 AREA	 |.text|, CODE, ARM

  00ee8		 |?SetSDVSVoltage@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::SetSDVSVoltage

; 585  : {

  00ee8		 |$LN27@SetSDVSVol|
  00ee8	e1a0c00d	 mov         r12, sp
  00eec	e92d0001	 stmdb       sp!, {r0}
  00ef0	e92d5000	 stmdb       sp!, {r12, lr}
  00ef4	e24dd00c	 sub         sp, sp, #0xC
  00ef8		 |$M45218|

; 586  :     UINT32 val1, val2;
; 587  : 
; 588  :     if ( m_dwSlot == MMCSLOT_1 )

  00ef8	e59d3014	 ldr         r3, [sp, #0x14]
  00efc	e2833e17	 add         r3, r3, #0x17, 28
  00f00	e5933000	 ldr         r3, [r3]
  00f04	e3530001	 cmp         r3, #1
  00f08	1a000044	 bne         |$LN20@SetSDVSVol|

; 589  :     {
; 590  :         if(m_dwCPURev == CPU_FAMILY_35XX_REVISION_ES_1_0) // ES 1.0

  00f0c	e59d3014	 ldr         r3, [sp, #0x14]
  00f10	e2833f5f	 add         r3, r3, #0x5F, 30
  00f14	e5933000	 ldr         r3, [r3]
  00f18	e3530000	 cmp         r3, #0
  00f1c	1a000004	 bne         |$LN19@SetSDVSVol|

; 591  :         {
; 592  :           val1 = MMCHS_CAPA_VS30;

  00f20	e3a03402	 mov         r3, #2, 8
  00f24	e58d3004	 str         r3, [sp, #4]

; 593  :           val2 = MMCHS_HCTL_SDVS_3V0;

  00f28	e3a03b03	 mov         r3, #3, 22
  00f2c	e58d3000	 str         r3, [sp]
  00f30	ea000021	 b           |$LN18@SetSDVSVol|
  00f34		 |$LN19@SetSDVSVol|

; 594  :         }
; 595  :         else if(m_dwCPURev == CPU_FAMILY_35XX_REVISION_ES_2_0) // ES 2.0

  00f34	e59d3014	 ldr         r3, [sp, #0x14]
  00f38	e2833f5f	 add         r3, r3, #0x5F, 30
  00f3c	e5933000	 ldr         r3, [r3]
  00f40	e3530001	 cmp         r3, #1
  00f44	1a000004	 bne         |$LN17@SetSDVSVol|

; 596  :         {
; 597  :           val1 = MMCHS_CAPA_VS18;

  00f48	e3a03301	 mov         r3, #1, 6
  00f4c	e58d3004	 str         r3, [sp, #4]

; 598  :           val2 = MMCHS_HCTL_SDVS_1V8;

  00f50	e3a03c0a	 mov         r3, #0xA, 24
  00f54	e58d3000	 str         r3, [sp]
  00f58	ea000017	 b           |$LN16@SetSDVSVol|
  00f5c		 |$LN17@SetSDVSVol|

; 599  :         }
; 600  :         else if(m_dwCPURev == CPU_FAMILY_35XX_REVISION_ES_2_1) // ES 2.1

  00f5c	e59d3014	 ldr         r3, [sp, #0x14]
  00f60	e2833f5f	 add         r3, r3, #0x5F, 30
  00f64	e5933000	 ldr         r3, [r3]
  00f68	e3530002	 cmp         r3, #2
  00f6c	1a00000e	 bne         |$LN15@SetSDVSVol|

; 601  :         {
; 602  :             if (m_LowVoltageSlot)

  00f70	e59d3014	 ldr         r3, [sp, #0x14]
  00f74	e2833f63	 add         r3, r3, #0x63, 30
  00f78	e5933000	 ldr         r3, [r3]
  00f7c	e3530000	 cmp         r3, #0
  00f80	0a000004	 beq         |$LN14@SetSDVSVol|

; 603  :             {
; 604  :                 val1 = MMCHS_CAPA_VS18;

  00f84	e3a03301	 mov         r3, #1, 6
  00f88	e58d3004	 str         r3, [sp, #4]

; 605  :                 val2 = MMCHS_HCTL_SDVS_1V8;

  00f8c	e3a03c0a	 mov         r3, #0xA, 24
  00f90	e58d3000	 str         r3, [sp]

; 606  :             }
; 607  :             else

  00f94	ea000003	 b           |$LN13@SetSDVSVol|
  00f98		 |$LN14@SetSDVSVol|

; 608  :             {
; 609  :                 val1 = MMCHS_CAPA_VS30;

  00f98	e3a03402	 mov         r3, #2, 8
  00f9c	e58d3004	 str         r3, [sp, #4]

; 610  :                 val2 = MMCHS_HCTL_SDVS_3V0;

  00fa0	e3a03b03	 mov         r3, #3, 22
  00fa4	e58d3000	 str         r3, [sp]
  00fa8		 |$LN13@SetSDVSVol|

; 611  :             }
; 612  :         }
; 613  :         else // ES3.x and later

  00fa8	ea000003	 b           |$LN12@SetSDVSVol|
  00fac		 |$LN15@SetSDVSVol|

; 614  :         {
; 615  :           val1 = MMCHS_CAPA_VS30;

  00fac	e3a03402	 mov         r3, #2, 8
  00fb0	e58d3004	 str         r3, [sp, #4]

; 616  :           val2 = MMCHS_HCTL_SDVS_3V0;

  00fb4	e3a03b03	 mov         r3, #3, 22
  00fb8	e58d3000	 str         r3, [sp]
  00fbc		 |$LN12@SetSDVSVol|
  00fbc		 |$LN16@SetSDVSVol|
  00fbc		 |$LN18@SetSDVSVol|

; 617  :         }
; 618  : 
; 619  :         SETREG32(&m_pbRegisters->MMCHS_CAPA, val1);

  00fbc	e59d3014	 ldr         r3, [sp, #0x14]
  00fc0	e2833f57	 add         r3, r3, #0x57, 30
  00fc4	e5933000	 ldr         r3, [r3]
  00fc8	e2833d05	 add         r3, r3, #5, 26
  00fcc	e5932000	 ldr         r2, [r3]
  00fd0	e59d3004	 ldr         r3, [sp, #4]
  00fd4	e1822003	 orr         r2, r2, r3
  00fd8	e59d3014	 ldr         r3, [sp, #0x14]
  00fdc	e2833f57	 add         r3, r3, #0x57, 30
  00fe0	e5933000	 ldr         r3, [r3]
  00fe4	e2833d05	 add         r3, r3, #5, 26
  00fe8	e5832000	 str         r2, [r3]

; 620  :         SETREG32(&m_pbRegisters->MMCHS_HCTL, val2);

  00fec	e59d3014	 ldr         r3, [sp, #0x14]
  00ff0	e2833f57	 add         r3, r3, #0x57, 30
  00ff4	e5933000	 ldr         r3, [r3]
  00ff8	e2833f4a	 add         r3, r3, #0x4A, 30
  00ffc	e5932000	 ldr         r2, [r3]
  01000	e59d3000	 ldr         r3, [sp]
  01004	e1822003	 orr         r2, r2, r3
  01008	e59d3014	 ldr         r3, [sp, #0x14]
  0100c	e2833f57	 add         r3, r3, #0x57, 30
  01010	e5933000	 ldr         r3, [r3]
  01014	e2833f4a	 add         r3, r3, #0x4A, 30
  01018	e5832000	 str         r2, [r3]
  0101c	ea000054	 b           |$LN11@SetSDVSVol|
  01020		 |$LN20@SetSDVSVol|

; 621  :     }
; 622  :     else if (m_dwSlot == MMCSLOT_2)

  01020	e59d3014	 ldr         r3, [sp, #0x14]
  01024	e2833e17	 add         r3, r3, #0x17, 28
  01028	e5933000	 ldr         r3, [r3]
  0102c	e3530002	 cmp         r3, #2
  01030	1a000044	 bne         |$LN10@SetSDVSVol|

; 623  :     {
; 624  :         if(m_dwCPURev == CPU_FAMILY_35XX_REVISION_ES_1_0) // ES 1.0

  01034	e59d3014	 ldr         r3, [sp, #0x14]
  01038	e2833f5f	 add         r3, r3, #0x5F, 30
  0103c	e5933000	 ldr         r3, [r3]
  01040	e3530000	 cmp         r3, #0
  01044	1a000004	 bne         |$LN9@SetSDVSVol|

; 625  :         {
; 626  :           val1 = MMCHS_CAPA_VS18;

  01048	e3a03301	 mov         r3, #1, 6
  0104c	e58d3004	 str         r3, [sp, #4]

; 627  :           val2 = MMCHS_HCTL_SDVS_1V8;

  01050	e3a03c0a	 mov         r3, #0xA, 24
  01054	e58d3000	 str         r3, [sp]
  01058	ea000021	 b           |$LN8@SetSDVSVol|
  0105c		 |$LN9@SetSDVSVol|

; 628  :         }
; 629  :         else if(m_dwCPURev == CPU_FAMILY_35XX_REVISION_ES_2_0) // ES 2.0

  0105c	e59d3014	 ldr         r3, [sp, #0x14]
  01060	e2833f5f	 add         r3, r3, #0x5F, 30
  01064	e5933000	 ldr         r3, [r3]
  01068	e3530001	 cmp         r3, #1
  0106c	1a000004	 bne         |$LN7@SetSDVSVol|

; 630  :         {
; 631  :           val1 = MMCHS_CAPA_VS18;

  01070	e3a03301	 mov         r3, #1, 6
  01074	e58d3004	 str         r3, [sp, #4]

; 632  :           val2 = MMCHS_HCTL_SDVS_1V8;

  01078	e3a03c0a	 mov         r3, #0xA, 24
  0107c	e58d3000	 str         r3, [sp]
  01080	ea000017	 b           |$LN6@SetSDVSVol|
  01084		 |$LN7@SetSDVSVol|

; 633  :         }
; 634  :         else if(m_dwCPURev == CPU_FAMILY_35XX_REVISION_ES_2_1) // ES 2.1

  01084	e59d3014	 ldr         r3, [sp, #0x14]
  01088	e2833f5f	 add         r3, r3, #0x5F, 30
  0108c	e5933000	 ldr         r3, [r3]
  01090	e3530002	 cmp         r3, #2
  01094	1a00000e	 bne         |$LN5@SetSDVSVol|

; 635  :         {
; 636  :             if (m_LowVoltageSlot)

  01098	e59d3014	 ldr         r3, [sp, #0x14]
  0109c	e2833f63	 add         r3, r3, #0x63, 30
  010a0	e5933000	 ldr         r3, [r3]
  010a4	e3530000	 cmp         r3, #0
  010a8	0a000004	 beq         |$LN4@SetSDVSVol|

; 637  :             {
; 638  :                 val1 = MMCHS_CAPA_VS18;

  010ac	e3a03301	 mov         r3, #1, 6
  010b0	e58d3004	 str         r3, [sp, #4]

; 639  :                 val2 = MMCHS_HCTL_SDVS_1V8;

  010b4	e3a03c0a	 mov         r3, #0xA, 24
  010b8	e58d3000	 str         r3, [sp]

; 640  :             }
; 641  :             else

  010bc	ea000003	 b           |$LN3@SetSDVSVol|
  010c0		 |$LN4@SetSDVSVol|

; 642  :             {
; 643  :                 val1 = MMCHS_CAPA_VS30;

  010c0	e3a03402	 mov         r3, #2, 8
  010c4	e58d3004	 str         r3, [sp, #4]

; 644  :                 val2 = MMCHS_HCTL_SDVS_3V0;

  010c8	e3a03b03	 mov         r3, #3, 22
  010cc	e58d3000	 str         r3, [sp]
  010d0		 |$LN3@SetSDVSVol|

; 645  :             }
; 646  :         }
; 647  :         else // ES 3.x and later

  010d0	ea000003	 b           |$LN2@SetSDVSVol|
  010d4		 |$LN5@SetSDVSVol|

; 648  :         {
; 649  :           val1 = MMCHS_CAPA_VS18;

  010d4	e3a03301	 mov         r3, #1, 6
  010d8	e58d3004	 str         r3, [sp, #4]

; 650  :           val2 = MMCHS_HCTL_SDVS_1V8;

  010dc	e3a03c0a	 mov         r3, #0xA, 24
  010e0	e58d3000	 str         r3, [sp]
  010e4		 |$LN2@SetSDVSVol|
  010e4		 |$LN6@SetSDVSVol|
  010e4		 |$LN8@SetSDVSVol|

; 651  :         }
; 652  :         SETREG32(&m_pbRegisters->MMCHS_CAPA, val1);

  010e4	e59d3014	 ldr         r3, [sp, #0x14]
  010e8	e2833f57	 add         r3, r3, #0x57, 30
  010ec	e5933000	 ldr         r3, [r3]
  010f0	e2833d05	 add         r3, r3, #5, 26
  010f4	e5932000	 ldr         r2, [r3]
  010f8	e59d3004	 ldr         r3, [sp, #4]
  010fc	e1822003	 orr         r2, r2, r3
  01100	e59d3014	 ldr         r3, [sp, #0x14]
  01104	e2833f57	 add         r3, r3, #0x57, 30
  01108	e5933000	 ldr         r3, [r3]
  0110c	e2833d05	 add         r3, r3, #5, 26
  01110	e5832000	 str         r2, [r3]

; 653  :         SETREG32(&m_pbRegisters->MMCHS_HCTL, val2);

  01114	e59d3014	 ldr         r3, [sp, #0x14]
  01118	e2833f57	 add         r3, r3, #0x57, 30
  0111c	e5933000	 ldr         r3, [r3]
  01120	e2833f4a	 add         r3, r3, #0x4A, 30
  01124	e5932000	 ldr         r2, [r3]
  01128	e59d3000	 ldr         r3, [sp]
  0112c	e1822003	 orr         r2, r2, r3
  01130	e59d3014	 ldr         r3, [sp, #0x14]
  01134	e2833f57	 add         r3, r3, #0x57, 30
  01138	e5933000	 ldr         r3, [r3]
  0113c	e2833f4a	 add         r3, r3, #0x4A, 30
  01140	e5832000	 str         r2, [r3]

; 654  :     }
; 655  :     else

  01144	ea00000a	 b           |$LN1@SetSDVSVol|
  01148		 |$LN10@SetSDVSVol|

; 656  :     {
; 657  :         RETAILMSG(SDCARD_ZONE_WARN, (L"MMC Slot number is not Valid\r\n"));

  01148	e59f3034	 ldr         r3, [pc, #0x34]
  0114c	e5933440	 ldr         r3, [r3, #0x440]
  01150	e3130901	 tst         r3, #1, 18
  01154	0a000004	 beq         |$LN23@SetSDVSVol|
  01158	e59f0020	 ldr         r0, [pc, #0x20]
  0115c	eb000000	 bl          NKDbgPrintfW
  01160	e3a03001	 mov         r3, #1
  01164	e58d3008	 str         r3, [sp, #8]
  01168	ea000001	 b           |$LN24@SetSDVSVol|
  0116c		 |$LN23@SetSDVSVol|
  0116c	e3a03000	 mov         r3, #0
  01170	e58d3008	 str         r3, [sp, #8]
  01174		 |$LN24@SetSDVSVol|
  01174		 |$LN1@SetSDVSVol|
  01174		 |$LN11@SetSDVSVol|

; 658  :         return;
; 659  :     }
; 660  : }

  01174	e28dd00c	 add         sp, sp, #0xC
  01178	e89d6000	 ldmia       sp, {sp, lr}
  0117c	e12fff1e	 bx          lr
  01180		 |$LN28@SetSDVSVol|
  01180		 |$LN29@SetSDVSVol|
  01180	00000000	 DCD         |??_C@_1DO@OCDBIGLO@?$AAM?$AAM?$AAC?$AA?5?$AAS?$AAl?$AAo?$AAt?$AA?5?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAV?$AAa?$AAl?$AAi?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  01184		 |$LN30@SetSDVSVol|
  01184	00000000	 DCD         |dpCurSettings|
  01188		 |$M45219|

			 ENDP  ; |?SetSDVSVoltage@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::SetSDVSVoltage

	EXPORT	|?SDHCPowerTimerThreadImpl@CSDIOControllerBase@@QAAKXZ| ; CSDIOControllerBase::SDHCPowerTimerThreadImpl
	EXPORT	|?SDHCPowerTimerThread@CSDIOControllerBase@@SAKPAX@Z| ; CSDIOControllerBase::SDHCPowerTimerThread

  00060			 AREA	 |.pdata|, PDATA
|$T45230| DCD	|$LN5@SDHCPowerT|
	DCD	0x40000f04
; Function compile flags: /Odtp

  01188			 AREA	 |.text|, CODE, ARM

  01188		 |?SDHCPowerTimerThread@CSDIOControllerBase@@SAKPAX@Z| PROC ; CSDIOControllerBase::SDHCPowerTimerThread

; 672  : {

  01188		 |$LN5@SDHCPowerT|
  01188	e1a0c00d	 mov         r12, sp
  0118c	e92d0001	 stmdb       sp!, {r0}
  01190	e92d5000	 stmdb       sp!, {r12, lr}
  01194	e24dd00c	 sub         sp, sp, #0xC
  01198		 |$M45227|

; 673  :     CSDIOControllerBase *pController = (CSDIOControllerBase*)lpParameter;

  01198	e59d3014	 ldr         r3, [sp, #0x14]
  0119c	e58d3000	 str         r3, [sp]

; 674  :     return pController->SDHCPowerTimerThreadImpl();

  011a0	e59d0000	 ldr         r0, [sp]
  011a4	eb000000	 bl          |?SDHCPowerTimerThreadImpl@CSDIOControllerBase@@QAAKXZ|
  011a8	e58d0008	 str         r0, [sp, #8]
  011ac	e59d3008	 ldr         r3, [sp, #8]
  011b0	e58d3004	 str         r3, [sp, #4]

; 675  : }

  011b4	e59d0004	 ldr         r0, [sp, #4]
  011b8	e28dd00c	 add         sp, sp, #0xC
  011bc	e89d6000	 ldmia       sp, {sp, lr}
  011c0	e12fff1e	 bx          lr
  011c4		 |$M45228|

			 ENDP  ; |?SDHCPowerTimerThread@CSDIOControllerBase@@SAKPAX@Z|, CSDIOControllerBase::SDHCPowerTimerThread

	EXPORT	|?UpdateDevicePowerState@CSDIOControllerBase@@QAAXH@Z| ; CSDIOControllerBase::UpdateDevicePowerState
	EXPORT	|ResetEvent|
	EXPORT	|GetCurrentThread|
	EXPORT	|??_C@_1EO@LECFDIFC@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AAS?$AAD?$AAH?$AAC?$AAP?$AAo?$AAw?$AAe?$AAr?$AAT?$AAi?$AAm?$AAe?$AAr?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAI?$AAm@| [ DATA ] ; `string'
	IMPORT	|WaitForSingleObject|
	IMPORT	|CeSetThreadPriority|

  00068			 AREA	 |.pdata|, PDATA
|$T45240| DCD	|$LN21@SDHCPowerT@2|
	DCD	0x40007d04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@LECFDIFC@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AAS?$AAD?$AAH?$AAC?$AAP?$AAo?$AAw?$AAe?$AAr?$AAT?$AAi?$AAm?$AAe?$AAr?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAI?$AAm@| DCB "*"
	DCB	0x0, "*", 0x0, "*", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "r", 0x0, "t", 0x0, " ", 0x0, "S", 0x0, "D", 0x0, "H"
	DCB	0x0, "C", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r"
	DCB	0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "r", 0x0, "T"
	DCB	0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "I"
	DCB	0x0, "m", 0x0, "p", 0x0, "l", 0x0, "(", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  011c4			 AREA	 |.text|, CODE, ARM

  011c4		 |?SDHCPowerTimerThreadImpl@CSDIOControllerBase@@QAAKXZ| PROC ; CSDIOControllerBase::SDHCPowerTimerThreadImpl

; 684  : {

  011c4		 |$LN21@SDHCPowerT@2|
  011c4	e1a0c00d	 mov         r12, sp
  011c8	e92d0001	 stmdb       sp!, {r0}
  011cc	e92d5000	 stmdb       sp!, {r12, lr}
  011d0	e24dd014	 sub         sp, sp, #0x14
  011d4		 |$M45237|

; 685  :     DWORD nTimeout = INFINITE;

  011d4	e3e03000	 mvn         r3, #0
  011d8	e58d3000	 str         r3, [sp]

; 686  :     RETAILMSG(0, (TEXT("*** start SDHCPowerTimerThreadImpl()\r\n")));

  011dc	ea000004	 b           |$LN15@SDHCPowerT@2|
  011e0	e59f01cc	 ldr         r0, [pc, #0x1CC]
  011e4	eb000000	 bl          NKDbgPrintfW
  011e8	e3a03001	 mov         r3, #1
  011ec	e58d3008	 str         r3, [sp, #8]
  011f0	ea000001	 b           |$LN16@SDHCPowerT@2|
  011f4		 |$LN15@SDHCPowerT@2|
  011f4	e3a03000	 mov         r3, #0
  011f8	e58d3008	 str         r3, [sp, #8]
  011fc		 |$LN16@SDHCPowerT@2|

; 687  : 
; 688  :     CeSetThreadPriority(GetCurrentThread(), TIMERTHREAD_PRIORITY);

  011fc	eb000000	 bl          GetCurrentThread
  01200	e58d000c	 str         r0, [sp, #0xC]
  01204	e3a010fc	 mov         r1, #0xFC
  01208	e59d000c	 ldr         r0, [sp, #0xC]
  0120c	eb000000	 bl          CeSetThreadPriority
  01210		 |$LN12@SDHCPowerT@2|

; 689  : 
; 690  :     for(;;)
; 691  :     {
; 692  :         WaitForSingleObject(m_hTimerEvent, nTimeout);

  01210	e59d1000	 ldr         r1, [sp]
  01214	e59d301c	 ldr         r3, [sp, #0x1C]
  01218	e2833f6a	 add         r3, r3, #0x6A, 30
  0121c	e5930000	 ldr         r0, [r3]
  01220	eb000000	 bl          WaitForSingleObject

; 693  : 
; 694  :         if (m_bExitThread == TRUE) 

  01224	e59d301c	 ldr         r3, [sp, #0x1C]
  01228	e2833f69	 add         r3, r3, #0x69, 30
  0122c	e5933000	 ldr         r3, [r3]
  01230	e3530001	 cmp         r3, #1
  01234	1a000000	 bne         |$LN10@SDHCPowerT@2|

; 695  : 		    break;

  01238	ea000057	 b           |$LN11@SDHCPowerT@2|
  0123c		 |$LN10@SDHCPowerT@2|

; 696  : 
; 697  :         // serialize access to power state changes
; 698  :         EnterCriticalSection(&m_critSec);

  0123c	e59d301c	 ldr         r3, [sp, #0x1C]
  01240	e28300b0	 add         r0, r3, #0xB0
  01244	eb000000	 bl          EnterCriticalSection

; 699  : 
; 700  :         // by the time this thread got the cs hTimerEvent may
; 701  :         // have gotten resignaled.  Clear the event to  make
; 702  :         // sure the activity timer thread isn't awaken prematurely
; 703  :         //
; 704  :         ResetEvent(m_hTimerEvent);

  01248	e59d301c	 ldr         r3, [sp, #0x1C]
  0124c	e2833f6a	 add         r3, r3, #0x6A, 30
  01250	e5930000	 ldr         r0, [r3]
  01254	eb000000	 bl          ResetEvent

; 705  : 
; 706  :         // check if we need to reset the timer
; 707  :         if (m_dwClockCnt == 0)

  01258	e59d301c	 ldr         r3, [sp, #0x1C]
  0125c	e2833e1a	 add         r3, r3, #0x1A, 28
  01260	e5933000	 ldr         r3, [r3]
  01264	e3530000	 cmp         r3, #0
  01268	1a000045	 bne         |$LN9@SDHCPowerT@2|

; 708  :         {
; 709  :             // We disable the clocks only when this thread
; 710  :             // wakes-up twice in a row with no power state
; 711  :             // change to D0.  This is achieved by using the
; 712  :             // bDisablePower flag to determine if power state
; 713  :             // changed since the last time this thread woke-up
; 714  :             //
; 715  :             if ((m_bDisablePower == TRUE) || (m_fCardPresent == FALSE))

  0126c	e59d301c	 ldr         r3, [sp, #0x1C]
  01270	e2833f73	 add         r3, r3, #0x73, 30
  01274	e5933000	 ldr         r3, [r3]
  01278	e3530001	 cmp         r3, #1
  0127c	0a000004	 beq         |$LN7@SDHCPowerT@2|
  01280	e59d301c	 ldr         r3, [sp, #0x1C]
  01284	e28330f0	 add         r3, r3, #0xF0
  01288	e5933000	 ldr         r3, [r3]
  0128c	e3530000	 cmp         r3, #0
  01290	1a000021	 bne         |$LN8@SDHCPowerT@2|
  01294		 |$LN7@SDHCPowerT@2|

; 716  :             {
; 717  :                 if (m_ActualPowerState < D3)

  01294	e59d301c	 ldr         r3, [sp, #0x1C]
  01298	e28330e0	 add         r3, r3, #0xE0
  0129c	e5933000	 ldr         r3, [r3]
  012a0	e3530003	 cmp         r3, #3
  012a4	aa000019	 bge         |$LN6@SDHCPowerT@2|

; 718  :                 {
; 719  :                     // update clock control
; 720  :                     if (!m_dwSDClockMode || !m_fCardPresent /*|| !(m_dwWakeupSources & WAKEUP_SDIO)*/)

  012a8	e59d301c	 ldr         r3, [sp, #0x1C]
  012ac	e2833f67	 add         r3, r3, #0x67, 30
  012b0	e5933000	 ldr         r3, [r3]
  012b4	e3530000	 cmp         r3, #0
  012b8	0a000004	 beq         |$LN4@SDHCPowerT@2|
  012bc	e59d301c	 ldr         r3, [sp, #0x1C]
  012c0	e28330f0	 add         r3, r3, #0xF0
  012c4	e5933000	 ldr         r3, [r3]
  012c8	e3530000	 cmp         r3, #0
  012cc	1a000006	 bne         |$LN5@SDHCPowerT@2|
  012d0		 |$LN4@SDHCPowerT@2|

; 721  : 					{
; 722  :                         OUTREG32(&m_pbRegisters->MMCHS_SYSCONFIG, 
; 723  :                             MMCHS_SYSCONFIG_CLOCKACTIVITY(0) | 
; 724  :                             MMCHS_SYSCONFIG_SIDLEMODE(SIDLE_FORCE) |
; 725  :                             MMCHS_SYSCONFIG_AUTOIDLE 
; 726  :                             );

  012d0	e59d301c	 ldr         r3, [sp, #0x1C]
  012d4	e2833f57	 add         r3, r3, #0x57, 30
  012d8	e5933000	 ldr         r3, [r3]
  012dc	e2832010	 add         r2, r3, #0x10
  012e0	e3a03001	 mov         r3, #1
  012e4	e5823000	 str         r3, [r2]

; 727  :                     }
; 728  : 					else

  012e8	ea000005	 b           |$LN3@SDHCPowerT@2|
  012ec		 |$LN5@SDHCPowerT@2|

; 729  : 					{
; 730  :     	                OUTREG32(&m_pbRegisters->MMCHS_SYSCONFIG, 
; 731  : 	    				    MMCHS_SYSCONFIG_SIDLEMODE(SIDLE_IGNORE) | 
; 732  : 		    				MMCHS_SYSCONFIG_CLOCKACTIVITY(3)
; 733  : 			    			);

  012ec	e59d301c	 ldr         r3, [sp, #0x1C]
  012f0	e2833f57	 add         r3, r3, #0x57, 30
  012f4	e5933000	 ldr         r3, [r3]
  012f8	e2832010	 add         r2, r3, #0x10
  012fc	e3a03fc2	 mov         r3, #0xC2, 30
  01300	e5823000	 str         r3, [r2]
  01304		 |$LN3@SDHCPowerT@2|

; 734  :                     }
; 735  :                     UpdateDevicePowerState(FALSE);

  01304	e3a01000	 mov         r1, #0
  01308	e59d001c	 ldr         r0, [sp, #0x1C]
  0130c	eb000000	 bl          |?UpdateDevicePowerState@CSDIOControllerBase@@QAAXH@Z|
  01310		 |$LN6@SDHCPowerT@2|

; 736  :                  }
; 737  :                 nTimeout = INFINITE;

  01310	e3e03000	 mvn         r3, #0
  01314	e58d3000	 str         r3, [sp]

; 738  :             }
; 739  :             else

  01318	ea000018	 b           |$LN2@SDHCPowerT@2|
  0131c		 |$LN8@SDHCPowerT@2|

; 740  :             {
; 741  :                 // wait for activity time-out before shutting off power.
; 742  :                 m_bDisablePower = TRUE;

  0131c	e59d301c	 ldr         r3, [sp, #0x1C]
  01320	e2832f73	 add         r2, r3, #0x73, 30
  01324	e3a03001	 mov         r3, #1
  01328	e5823000	 str         r3, [r2]

; 743  :                 nTimeout = (m_fCardInitialized && !m_dwSDIOCard) ? m_nNonSDIOActivityTimeout : m_nSDIOActivityTimeout;

  0132c	e59d301c	 ldr         r3, [sp, #0x1C]
  01330	e2833f4f	 add         r3, r3, #0x4F, 30
  01334	e5933000	 ldr         r3, [r3]
  01338	e3530000	 cmp         r3, #0
  0133c	0a000009	 beq         |$LN17@SDHCPowerT@2|
  01340	e59d301c	 ldr         r3, [sp, #0x1C]
  01344	e2833f5e	 add         r3, r3, #0x5E, 30
  01348	e5933000	 ldr         r3, [r3]
  0134c	e3530000	 cmp         r3, #0
  01350	1a000004	 bne         |$LN17@SDHCPowerT@2|
  01354	e59d301c	 ldr         r3, [sp, #0x1C]
  01358	e2833e1b	 add         r3, r3, #0x1B, 28
  0135c	e5933000	 ldr         r3, [r3]
  01360	e58d3010	 str         r3, [sp, #0x10]
  01364	ea000003	 b           |$LN18@SDHCPowerT@2|
  01368		 |$LN17@SDHCPowerT@2|
  01368	e59d301c	 ldr         r3, [sp, #0x1C]
  0136c	e2833f6d	 add         r3, r3, #0x6D, 30
  01370	e5933000	 ldr         r3, [r3]
  01374	e58d3010	 str         r3, [sp, #0x10]
  01378		 |$LN18@SDHCPowerT@2|
  01378	e59d3010	 ldr         r3, [sp, #0x10]
  0137c	e58d3000	 str         r3, [sp]
  01380		 |$LN2@SDHCPowerT@2|

; 744  :             }
; 745  :         }
; 746  :         else

  01380	ea000001	 b           |$LN1@SDHCPowerT@2|
  01384		 |$LN9@SDHCPowerT@2|

; 747  :         {
; 748  :             nTimeout = INFINITE;

  01384	e3e03000	 mvn         r3, #0
  01388	e58d3000	 str         r3, [sp]
  0138c		 |$LN1@SDHCPowerT@2|

; 749  :         }
; 750  :         LeaveCriticalSection(&m_critSec);

  0138c	e59d301c	 ldr         r3, [sp, #0x1C]
  01390	e28300b0	 add         r0, r3, #0xB0
  01394	eb000000	 bl          LeaveCriticalSection

; 751  :     }

  01398	eaffff9c	 b           |$LN12@SDHCPowerT@2|
  0139c		 |$LN11@SDHCPowerT@2|

; 752  : 
; 753  :     return 1;

  0139c	e3a03001	 mov         r3, #1
  013a0	e58d3004	 str         r3, [sp, #4]

; 754  : }

  013a4	e59d0004	 ldr         r0, [sp, #4]
  013a8	e28dd014	 add         sp, sp, #0x14
  013ac	e89d6000	 ldmia       sp, {sp, lr}
  013b0	e12fff1e	 bx          lr
  013b4		 |$LN22@SDHCPowerT@2|
  013b4		 |$LN23@SDHCPowerT@2|
  013b4	00000000	 DCD         |??_C@_1EO@LECFDIFC@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AAS?$AAD?$AAH?$AAC?$AAP?$AAo?$AAw?$AAe?$AAr?$AAT?$AAi?$AAm?$AAe?$AAr?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAI?$AAm@|
  013b8		 |$M45238|

			 ENDP  ; |?SDHCPowerTimerThreadImpl@CSDIOControllerBase@@QAAKXZ|, CSDIOControllerBase::SDHCPowerTimerThreadImpl

	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T45248| DCD	|$LN5@ResetEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ResetEvent| PROC

; 223  : _inline BOOL ResetEvent(HANDLE h) {

  00000		 |$LN5@ResetEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M45245|

; 224  : 	return EventModify(h,EVENT_RESET);

  00010	e3a01002	 mov         r1, #2
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 225  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M45246|

			 ENDP  ; |ResetEvent|


  00000			 AREA	 |.pdata|, PDATA
|$T45256| DCD	|$LN5@GetCurrent|
	DCD	0x40000601
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentThread| PROC

; 351  : _inline HANDLE GetCurrentThread(void) {

  00000		 |$LN5@GetCurrent|
  00000	e24dd004	 sub         sp, sp, #4
  00004		 |$M45253|

; 352  : 	return ((HANDLE)(SH_CURTHREAD+SYS_HANDLE_BASE));

  00004	e3a03041	 mov         r3, #0x41
  00008	e58d3000	 str         r3, [sp]

; 353  : }

  0000c	e59d0000	 ldr         r0, [sp]
  00010	e28dd004	 add         sp, sp, #4
  00014	e12fff1e	 bx          lr
  00018		 |$M45254|

			 ENDP  ; |GetCurrentThread|

	EXPORT	|SetEvent|
	EXPORT	|??_C@_1CO@NJOFCHKF@?$AA?$CL?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|InterlockedDecrement|
	IMPORT	|InterlockedIncrement|

  00070			 AREA	 |.pdata|, PDATA
|$T45266| DCD	|$LN20@UpdateSyst|
	DCD	0x40008204
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\sdhc\base\sdhc.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@NJOFCHKF@?$AA?$CL?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "U", 0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m"
	DCB	0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "("
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  013b8			 AREA	 |.text|, CODE, ARM

  013b8		 |?UpdateSystemClock@CSDIOControllerBase@@QAAHH@Z| PROC ; CSDIOControllerBase::UpdateSystemClock

; 765  : {

  013b8		 |$LN20@UpdateSyst|
  013b8	e1a0c00d	 mov         r12, sp
  013bc	e92d0003	 stmdb       sp!, {r0, r1}
  013c0	e92d5000	 stmdb       sp!, {r12, lr}
  013c4	e24dd014	 sub         sp, sp, #0x14
  013c8		 |$M45263|

; 766  :     LONG   lClockCount;
; 767  : 
; 768  :     DEBUGMSG(SDCARD_ZONE_FUNC, (L"+UpdateSystemClock()\r\n"));

  013c8	e59f31ec	 ldr         r3, [pc, #0x1EC]
  013cc	e5933440	 ldr         r3, [r3, #0x440]
  013d0	e3130b02	 tst         r3, #2, 22
  013d4	0a000004	 beq         |$LN16@UpdateSyst|
  013d8	e59f01d8	 ldr         r0, [pc, #0x1D8]
  013dc	eb000000	 bl          NKDbgPrintfW
  013e0	e3a03001	 mov         r3, #1
  013e4	e58d3008	 str         r3, [sp, #8]
  013e8	ea000001	 b           |$LN17@UpdateSyst|
  013ec		 |$LN16@UpdateSyst|
  013ec	e3a03000	 mov         r3, #0
  013f0	e58d3008	 str         r3, [sp, #8]
  013f4		 |$LN17@UpdateSyst|

; 769  : 
; 770  :     if (enable)

  013f4	e59d3020	 ldr         r3, [sp, #0x20]
  013f8	e3530000	 cmp         r3, #0
  013fc	0a000031	 beq         |$LN13@UpdateSyst|

; 771  :     {
; 772  :         lClockCount = InterlockedIncrement(&m_dwClockCnt);

  01400	e59d301c	 ldr         r3, [sp, #0x1C]
  01404	e2830e1a	 add         r0, r3, #0x1A, 28
  01408	eb000000	 bl          InterlockedIncrement
  0140c	e58d000c	 str         r0, [sp, #0xC]
  01410	e59d300c	 ldr         r3, [sp, #0xC]
  01414	e58d3000	 str         r3, [sp]

; 773  : 
; 774  :         EnterCriticalSection( &m_critSec );

  01418	e59d301c	 ldr         r3, [sp, #0x1C]
  0141c	e28300b0	 add         r0, r3, #0xB0
  01420	eb000000	 bl          EnterCriticalSection

; 775  :         m_InternPowerState = D0;

  01424	e59d301c	 ldr         r3, [sp, #0x1C]
  01428	e28320dc	 add         r2, r3, #0xDC
  0142c	e3a03000	 mov         r3, #0
  01430	e5823000	 str         r3, [r2]

; 776  :         if(lClockCount == 1)

  01434	e59d3000	 ldr         r3, [sp]
  01438	e3530001	 cmp         r3, #1
  0143c	1a000019	 bne         |$LN12@UpdateSyst|

; 777  :         {
; 778  :             if (m_ActualPowerState >= D3)

  01440	e59d301c	 ldr         r3, [sp, #0x1C]
  01444	e28330e0	 add         r3, r3, #0xE0
  01448	e5933000	 ldr         r3, [r3]
  0144c	e3530003	 cmp         r3, #3
  01450	ba000014	 blt         |$LN11@UpdateSyst|

; 779  :             {
; 780  :                 UpdateDevicePowerState(FALSE);

  01454	e3a01000	 mov         r1, #0
  01458	e59d001c	 ldr         r0, [sp, #0x1C]
  0145c	eb000000	 bl          |?UpdateDevicePowerState@CSDIOControllerBase@@QAAXH@Z|

; 781  :                 
; 782  :                 if (m_dwSDClockMode)

  01460	e59d301c	 ldr         r3, [sp, #0x1C]
  01464	e2833f67	 add         r3, r3, #0x67, 30
  01468	e5933000	 ldr         r3, [r3]
  0146c	e3530000	 cmp         r3, #0
  01470	0a000006	 beq         |$LN10@UpdateSyst|

; 783  : 				{
; 784  :                     OUTREG32(&m_pbRegisters->MMCHS_SYSCONFIG, 
; 785  :                         MMCHS_SYSCONFIG_SIDLEMODE(SIDLE_IGNORE) | 
; 786  :                         MMCHS_SYSCONFIG_CLOCKACTIVITY(3)
; 787  :                         );

  01474	e59d301c	 ldr         r3, [sp, #0x1C]
  01478	e2833f57	 add         r3, r3, #0x57, 30
  0147c	e5933000	 ldr         r3, [r3]
  01480	e2832010	 add         r2, r3, #0x10
  01484	e3a03fc2	 mov         r3, #0xC2, 30
  01488	e5823000	 str         r3, [r2]

; 788  :                 }
; 789  : 				else

  0148c	ea000005	 b           |$LN9@UpdateSyst|
  01490		 |$LN10@UpdateSyst|

; 790  : 				{
; 791  :                     // update clock control
; 792  :                     OUTREG32(&m_pbRegisters->MMCHS_SYSCONFIG, 
; 793  :                         MMCHS_SYSCONFIG_CLOCKACTIVITY(0) | 
; 794  :                         MMCHS_SYSCONFIG_SIDLEMODE(SIDLE_SMART) |
; 795  :                         MMCHS_SYSCONFIG_ENAWAKEUP |
; 796  :                         MMCHS_SYSCONFIG_AUTOIDLE 
; 797  :                         );

  01490	e59d301c	 ldr         r3, [sp, #0x1C]
  01494	e2833f57	 add         r3, r3, #0x57, 30
  01498	e5933000	 ldr         r3, [r3]
  0149c	e2832010	 add         r2, r3, #0x10
  014a0	e3a03015	 mov         r3, #0x15
  014a4	e5823000	 str         r3, [r2]
  014a8		 |$LN9@UpdateSyst|
  014a8		 |$LN11@UpdateSyst|
  014a8		 |$LN12@UpdateSyst|

; 798  :                 }
; 799  :             }
; 800  :         }
; 801  :         m_bDisablePower = FALSE;

  014a8	e59d301c	 ldr         r3, [sp, #0x1C]
  014ac	e2832f73	 add         r2, r3, #0x73, 30
  014b0	e3a03000	 mov         r3, #0
  014b4	e5823000	 str         r3, [r2]

; 802  :         LeaveCriticalSection( &m_critSec );

  014b8	e59d301c	 ldr         r3, [sp, #0x1C]
  014bc	e28300b0	 add         r0, r3, #0xB0
  014c0	eb000000	 bl          LeaveCriticalSection

; 803  :     }
; 804  :     else

  014c4	ea000035	 b           |$LN8@UpdateSyst|
  014c8		 |$LN13@UpdateSyst|

; 805  :     {
; 806  :         lClockCount = InterlockedDecrement(&m_dwClockCnt);

  014c8	e59d301c	 ldr         r3, [sp, #0x1C]
  014cc	e2830e1a	 add         r0, r3, #0x1A, 28
  014d0	eb000000	 bl          InterlockedDecrement
  014d4	e58d0010	 str         r0, [sp, #0x10]
  014d8	e59d3010	 ldr         r3, [sp, #0x10]
  014dc	e58d3000	 str         r3, [sp]

; 807  :         if(lClockCount < 0)

  014e0	e59d3000	 ldr         r3, [sp]
  014e4	e3530000	 cmp         r3, #0
  014e8	aa000003	 bge         |$LN7@UpdateSyst|

; 808  :             m_dwClockCnt = 0;

  014ec	e59d301c	 ldr         r3, [sp, #0x1C]
  014f0	e2832e1a	 add         r2, r3, #0x1A, 28
  014f4	e3a03000	 mov         r3, #0
  014f8	e5823000	 str         r3, [r2]
  014fc		 |$LN7@UpdateSyst|

; 809  : 
; 810  :         if(lClockCount <= 0)

  014fc	e59d3000	 ldr         r3, [sp]
  01500	e3530000	 cmp         r3, #0
  01504	ca000025	 bgt         |$LN6@UpdateSyst|

; 811  :         {
; 812  :             m_InternPowerState = D4;

  01508	e59d301c	 ldr         r3, [sp, #0x1C]
  0150c	e28320dc	 add         r2, r3, #0xDC
  01510	e3a03004	 mov         r3, #4
  01514	e5823000	 str         r3, [r2]

; 813  :             if (m_hTimerEvent != NULL)

  01518	e59d301c	 ldr         r3, [sp, #0x1C]
  0151c	e2833f6a	 add         r3, r3, #0x6A, 30
  01520	e5933000	 ldr         r3, [r3]
  01524	e3530000	 cmp         r3, #0
  01528	0a000004	 beq         |$LN5@UpdateSyst|

; 814  :             {
; 815  :                 SetEvent(m_hTimerEvent);

  0152c	e59d301c	 ldr         r3, [sp, #0x1C]
  01530	e2833f6a	 add         r3, r3, #0x6A, 30
  01534	e5930000	 ldr         r0, [r3]
  01538	eb000000	 bl          SetEvent

; 816  :             }
; 817  :             else

  0153c	ea000017	 b           |$LN4@UpdateSyst|
  01540		 |$LN5@UpdateSyst|

; 818  :             {
; 819  :                 if (m_ActualPowerState < D3)

  01540	e59d301c	 ldr         r3, [sp, #0x1C]
  01544	e28330e0	 add         r3, r3, #0xE0
  01548	e5933000	 ldr         r3, [r3]
  0154c	e3530003	 cmp         r3, #3
  01550	aa00000f	 bge         |$LN3@UpdateSyst|

; 820  :                 {
; 821  :                     // update clock control
; 822  :                     if (!m_dwSDClockMode || m_InternPowerState == D4)

  01554	e59d301c	 ldr         r3, [sp, #0x1C]
  01558	e2833f67	 add         r3, r3, #0x67, 30
  0155c	e5933000	 ldr         r3, [r3]
  01560	e3530000	 cmp         r3, #0
  01564	0a000004	 beq         |$LN1@UpdateSyst|
  01568	e59d301c	 ldr         r3, [sp, #0x1C]
  0156c	e28330dc	 add         r3, r3, #0xDC
  01570	e5933000	 ldr         r3, [r3]
  01574	e3530004	 cmp         r3, #4
  01578	1a000005	 bne         |$LN2@UpdateSyst|
  0157c		 |$LN1@UpdateSyst|

; 823  : 		    		{
; 824  :                         OUTREG32(&m_pbRegisters->MMCHS_SYSCONFIG, 
; 825  :                             MMCHS_SYSCONFIG_AUTOIDLE | 
; 826  :                             MMCHS_SYSCONFIG_CLOCKACTIVITY(0) | 
; 827  :                             MMCHS_SYSCONFIG_SIDLEMODE(SIDLE_FORCE)
; 828  :                             );

  0157c	e59d301c	 ldr         r3, [sp, #0x1C]
  01580	e2833f57	 add         r3, r3, #0x57, 30
  01584	e5933000	 ldr         r3, [r3]
  01588	e2832010	 add         r2, r3, #0x10
  0158c	e3a03001	 mov         r3, #1
  01590	e5823000	 str         r3, [r2]
  01594		 |$LN2@UpdateSyst|
  01594		 |$LN3@UpdateSyst|

; 829  : 					}
; 830  :                 }
; 831  :                 UpdateDevicePowerState(FALSE);

  01594	e3a01000	 mov         r1, #0
  01598	e59d001c	 ldr         r0, [sp, #0x1C]
  0159c	eb000000	 bl          |?UpdateDevicePowerState@CSDIOControllerBase@@QAAXH@Z|
  015a0		 |$LN4@UpdateSyst|
  015a0		 |$LN6@UpdateSyst|
  015a0		 |$LN8@UpdateSyst|

; 832  :             }
; 833  :         }
; 834  :     }
; 835  : 
; 836  :     return TRUE;

  015a0	e3a03001	 mov         r3, #1
  015a4	e58d3004	 str         r3, [sp, #4]

; 837  : }

  015a8	e59d0004	 ldr         r0, [sp, #4]
  015ac	e28dd014	 add         sp, sp, #0x14
  015b0	e89d6000	 ldmia       sp, {sp, lr}
  015b4	e12fff1e	 bx          lr
  015b8		 |$LN21@UpdateSyst|
  015b8		 |$LN22@UpdateSyst|
  015b8	00000000	 DCD         |??_C@_1CO@NJOFCHKF@?$AA?$CL?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  015bc		 |$LN23@UpdateSyst|
  015bc	00000000	 DCD         |dpCurSettings|
  015c0		 |$M45264|

			 ENDP  ; |?UpdateSystemClock@CSDIOControllerBase@@QAAHH@Z|, CSDIOControllerBase::UpdateSystemClock

; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T45275| DCD	|$LN5@SetEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M45272|

; 236  : 	return EventModify(h,EVENT_SET);

  00010	e3a01003	 mov         r1, #3
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 237  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M45273|

			 ENDP  ; |SetEvent|

	IMPORT	|SetDevicePowerState|

  00078			 AREA	 |.pdata|, PDATA
|$T45284| DCD	|$LN14@UpdateDevi|
	DCD	0x40005b04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\sdhc\base\sdhc.cpp

  015c0			 AREA	 |.text|, CODE, ARM

  015c0		 |?UpdateDevicePowerState@CSDIOControllerBase@@QAAXH@Z| PROC ; CSDIOControllerBase::UpdateDevicePowerState

; 841  : {

  015c0		 |$LN14@UpdateDevi|
  015c0	e1a0c00d	 mov         r12, sp
  015c4	e92d0003	 stmdb       sp!, {r0, r1}
  015c8	e92d5000	 stmdb       sp!, {r12, lr}
  015cc	e24dd008	 sub         sp, sp, #8
  015d0		 |$M45281|

; 842  :     CEDEVICE_POWER_STATE curPowerState = D4;

  015d0	e3a03004	 mov         r3, #4
  015d4	e58d3000	 str         r3, [sp]

; 843  : 
; 844  :     // if card is present then lowest power state is D3
; 845  :     if (m_fCardPresent)

  015d8	e59d3010	 ldr         r3, [sp, #0x10]
  015dc	e28330f0	 add         r3, r3, #0xF0
  015e0	e5933000	 ldr         r3, [r3]
  015e4	e3530000	 cmp         r3, #0
  015e8	0a000001	 beq         |$LN7@UpdateDevi|

; 846  :         curPowerState = D3;

  015ec	e3a03003	 mov         r3, #3
  015f0	e58d3000	 str         r3, [sp]
  015f4		 |$LN7@UpdateDevi|

; 847  : 
; 848  :     curPowerState = min(curPowerState, m_InternPowerState);

  015f4	e59d3010	 ldr         r3, [sp, #0x10]
  015f8	e28330dc	 add         r3, r3, #0xDC
  015fc	e59d2000	 ldr         r2, [sp]
  01600	e5933000	 ldr         r3, [r3]
  01604	e1520003	 cmp         r2, r3
  01608	aa000002	 bge         |$LN10@UpdateDevi|
  0160c	e59d3000	 ldr         r3, [sp]
  01610	e58d3004	 str         r3, [sp, #4]
  01614	ea000003	 b           |$LN11@UpdateDevi|
  01618		 |$LN10@UpdateDevi|
  01618	e59d3010	 ldr         r3, [sp, #0x10]
  0161c	e28330dc	 add         r3, r3, #0xDC
  01620	e5933000	 ldr         r3, [r3]
  01624	e58d3004	 str         r3, [sp, #4]
  01628		 |$LN11@UpdateDevi|
  01628	e59d3004	 ldr         r3, [sp, #4]
  0162c	e58d3000	 str         r3, [sp]

; 849  : 
; 850  :     if((m_ActualPowerState == D4 && curPowerState < D4 ) || (m_ActualPowerState < D4 && curPowerState == D4 ))

  01630	e59d3010	 ldr         r3, [sp, #0x10]
  01634	e28330e0	 add         r3, r3, #0xE0
  01638	e5933000	 ldr         r3, [r3]
  0163c	e3530004	 cmp         r3, #4
  01640	1a000002	 bne         |$LN4@UpdateDevi|
  01644	e59d3000	 ldr         r3, [sp]
  01648	e3530004	 cmp         r3, #4
  0164c	ba000007	 blt         |$LN5@UpdateDevi|
  01650		 |$LN4@UpdateDevi|
  01650	e59d3010	 ldr         r3, [sp, #0x10]
  01654	e28330e0	 add         r3, r3, #0xE0
  01658	e5933000	 ldr         r3, [r3]
  0165c	e3530004	 cmp         r3, #4
  01660	aa00000b	 bge         |$LN6@UpdateDevi|
  01664	e59d3000	 ldr         r3, [sp]
  01668	e3530004	 cmp         r3, #4
  0166c	1a000008	 bne         |$LN6@UpdateDevi|
  01670		 |$LN5@UpdateDevi|

; 851  :         PreparePowerChange(curPowerState, bInPowerHandler);

  01670	e59d2014	 ldr         r2, [sp, #0x14]
  01674	e59d1000	 ldr         r1, [sp]
  01678	e59d3010	 ldr         r3, [sp, #0x10]
  0167c	e5933000	 ldr         r3, [r3]
  01680	e283301c	 add         r3, r3, #0x1C
  01684	e59d0010	 ldr         r0, [sp, #0x10]
  01688	e5933000	 ldr         r3, [r3]
  0168c	e1a0e00f	 mov         lr, pc
  01690	e12fff13	 bx          r3
  01694		 |$LN6@UpdateDevi|

; 852  : 
; 853  :     SetDevicePowerState( m_hParentBus, curPowerState, NULL );

  01694	e3a02000	 mov         r2, #0
  01698	e59d1000	 ldr         r1, [sp]
  0169c	e59d3010	 ldr         r3, [sp, #0x10]
  016a0	e28330ac	 add         r3, r3, #0xAC
  016a4	e5930000	 ldr         r0, [r3]
  016a8	eb000000	 bl          SetDevicePowerState

; 854  : 
; 855  :     if((m_ActualPowerState == D4 && curPowerState < D4 ) || (m_ActualPowerState < D4 && curPowerState == D4 ))

  016ac	e59d3010	 ldr         r3, [sp, #0x10]
  016b0	e28330e0	 add         r3, r3, #0xE0
  016b4	e5933000	 ldr         r3, [r3]
  016b8	e3530004	 cmp         r3, #4
  016bc	1a000002	 bne         |$LN1@UpdateDevi|
  016c0	e59d3000	 ldr         r3, [sp]
  016c4	e3530004	 cmp         r3, #4
  016c8	ba000007	 blt         |$LN2@UpdateDevi|
  016cc		 |$LN1@UpdateDevi|
  016cc	e59d3010	 ldr         r3, [sp, #0x10]
  016d0	e28330e0	 add         r3, r3, #0xE0
  016d4	e5933000	 ldr         r3, [r3]
  016d8	e3530004	 cmp         r3, #4
  016dc	aa00000b	 bge         |$LN3@UpdateDevi|
  016e0	e59d3000	 ldr         r3, [sp]
  016e4	e3530004	 cmp         r3, #4
  016e8	1a000008	 bne         |$LN3@UpdateDevi|
  016ec		 |$LN2@UpdateDevi|

; 856  :         PostPowerChange(curPowerState, bInPowerHandler);

  016ec	e59d2014	 ldr         r2, [sp, #0x14]
  016f0	e59d1000	 ldr         r1, [sp]
  016f4	e59d3010	 ldr         r3, [sp, #0x10]
  016f8	e5933000	 ldr         r3, [r3]
  016fc	e2833020	 add         r3, r3, #0x20
  01700	e59d0010	 ldr         r0, [sp, #0x10]
  01704	e5933000	 ldr         r3, [r3]
  01708	e1a0e00f	 mov         lr, pc
  0170c	e12fff13	 bx          r3
  01710		 |$LN3@UpdateDevi|

; 857  : 
; 858  :     m_ActualPowerState = curPowerState;

  01710	e59d3010	 ldr         r3, [sp, #0x10]
  01714	e28320e0	 add         r2, r3, #0xE0
  01718	e59d3000	 ldr         r3, [sp]
  0171c	e5823000	 str         r3, [r2]

; 859  : }

  01720	e28dd008	 add         sp, sp, #8
  01724	e89d6000	 ldmia       sp, {sp, lr}
  01728	e12fff1e	 bx          lr
  0172c		 |$M45282|

			 ENDP  ; |?UpdateDevicePowerState@CSDIOControllerBase@@QAAXH@Z|, CSDIOControllerBase::UpdateDevicePowerState

	EXPORT	|?SendCmdNoResp@CSDIOControllerBase@@QAAJKK@Z| ; CSDIOControllerBase::SendCmdNoResp

  00080			 AREA	 |.pdata|, PDATA
|$T45293| DCD	|$LN12@SendCmdNoR|
	DCD	0x40006d04
; Function compile flags: /Odtp

  0172c			 AREA	 |.text|, CODE, ARM

  0172c		 |?SendCmdNoResp@CSDIOControllerBase@@QAAJKK@Z| PROC ; CSDIOControllerBase::SendCmdNoResp

; 864  : {

  0172c		 |$LN12@SendCmdNoR|
  0172c	e1a0c00d	 mov         r12, sp
  01730	e92d0007	 stmdb       sp!, {r0 - r2}
  01734	e92d5000	 stmdb       sp!, {r12, lr}
  01738	e24dd018	 sub         sp, sp, #0x18
  0173c		 |$M45290|

; 865  :     DWORD MMC_CMD;
; 866  :     DWORD dwTimeout;
; 867  : 
; 868  :     OUTREG32(&m_pbRegisters->MMCHS_STAT, 0xFFFFFFFF);

  0173c	e59d3020	 ldr         r3, [sp, #0x20]
  01740	e2833f57	 add         r3, r3, #0x57, 30
  01744	e5933000	 ldr         r3, [r3]
  01748	e2832e13	 add         r2, r3, #0x13, 28
  0174c	e3e03000	 mvn         r3, #0
  01750	e5823000	 str         r3, [r2]

; 869  :     dwTimeout = 80000;

  01754	e3a03b4e	 mov         r3, #0x4E, 22
  01758	e3833080	 orr         r3, r3, #0x80
  0175c	e58d3008	 str         r3, [sp, #8]
  01760		 |$LN5@SendCmdNoR|

; 870  :     while(((INREG32(&m_pbRegisters->MMCHS_PSTATE) & MMCHS_PSTAT_CMDI)) && (dwTimeout>0))

  01760	e59d3020	 ldr         r3, [sp, #0x20]
  01764	e2833f57	 add         r3, r3, #0x57, 30
  01768	e5933000	 ldr         r3, [r3]
  0176c	e2833f49	 add         r3, r3, #0x49, 30
  01770	e5933000	 ldr         r3, [r3]
  01774	e3130001	 tst         r3, #1
  01778	0a000006	 beq         |$LN4@SendCmdNoR|
  0177c	e59d3008	 ldr         r3, [sp, #8]
  01780	e3530000	 cmp         r3, #0
  01784	9a000003	 bls         |$LN4@SendCmdNoR|

; 871  :     {
; 872  :         dwTimeout--;

  01788	e59d3008	 ldr         r3, [sp, #8]
  0178c	e2433001	 sub         r3, r3, #1
  01790	e58d3008	 str         r3, [sp, #8]

; 873  :     }

  01794	eafffff1	 b           |$LN5@SendCmdNoR|
  01798		 |$LN4@SendCmdNoR|

; 874  : 
; 875  :     MMC_CMD = MMCHS_INDX(cmd);

  01798	e59d3024	 ldr         r3, [sp, #0x24]
  0179c	e1a03c03	 mov         r3, r3, lsl #24
  017a0	e58d3004	 str         r3, [sp, #4]

; 876  :     MMC_CMD |= LOOKUP_CMD(cmd).flags;

  017a4	e59d3024	 ldr         r3, [sp, #0x24]
  017a8	e353003c	 cmp         r3, #0x3C
  017ac	1a000007	 bne         |$LN8@SendCmdNoR|
  017b0	e59d3020	 ldr         r3, [sp, #0x20]
  017b4	e2833f66	 add         r3, r3, #0x66, 30
  017b8	e5933000	 ldr         r3, [r3]
  017bc	e3530000	 cmp         r3, #0
  017c0	0a000002	 beq         |$LN8@SendCmdNoR|
  017c4	e59f3110	 ldr         r3, [pc, #0x110]
  017c8	e58d3014	 str         r3, [sp, #0x14]
  017cc	ea000005	 b           |$LN9@SendCmdNoR|
  017d0		 |$LN8@SendCmdNoR|
  017d0	e59d1024	 ldr         r1, [sp, #0x24]
  017d4	e3a03008	 mov         r3, #8
  017d8	e0020391	 mul         r2, r1, r3
  017dc	e59f30f4	 ldr         r3, [pc, #0xF4]
  017e0	e0833002	 add         r3, r3, r2
  017e4	e58d3014	 str         r3, [sp, #0x14]
  017e8		 |$LN9@SendCmdNoR|
  017e8	e59d3014	 ldr         r3, [sp, #0x14]
  017ec	e58d300c	 str         r3, [sp, #0xC]
  017f0	e59d300c	 ldr         r3, [sp, #0xC]
  017f4	e2833004	 add         r3, r3, #4
  017f8	e59d2004	 ldr         r2, [sp, #4]
  017fc	e5933000	 ldr         r3, [r3]
  01800	e1823003	 orr         r3, r2, r3
  01804	e58d3004	 str         r3, [sp, #4]

; 877  : 
; 878  :     // Program the argument into the argument registers
; 879  :     OUTREG32(&m_pbRegisters->MMCHS_ARG, arg);

  01808	e59d3020	 ldr         r3, [sp, #0x20]
  0180c	e2833f57	 add         r3, r3, #0x57, 30
  01810	e5933000	 ldr         r3, [r3]
  01814	e2832f42	 add         r2, r3, #0x42, 30
  01818	e59d3028	 ldr         r3, [sp, #0x28]
  0181c	e5823000	 str         r3, [r2]

; 880  :     // Issue the command.
; 881  :     OUTREG32(&m_pbRegisters->MMCHS_CMD, MMC_CMD);

  01820	e59d3020	 ldr         r3, [sp, #0x20]
  01824	e2833f57	 add         r3, r3, #0x57, 30
  01828	e5933000	 ldr         r3, [r3]
  0182c	e2832f43	 add         r2, r3, #0x43, 30
  01830	e59d3004	 ldr         r3, [sp, #4]
  01834	e5823000	 str         r3, [r2]

; 882  : 
; 883  :     dwTimeout = 5000;

  01838	e3a03c13	 mov         r3, #0x13, 24
  0183c	e3833088	 orr         r3, r3, #0x88
  01840	e58d3008	 str         r3, [sp, #8]
  01844		 |$LN3@SendCmdNoR|

; 884  :     DWORD dwVal;
; 885  :     while(dwTimeout > 0)

  01844	e59d3008	 ldr         r3, [sp, #8]
  01848	e3530000	 cmp         r3, #0
  0184c	9a00000f	 bls         |$LN2@SendCmdNoR|

; 886  :     {
; 887  :         dwTimeout --;

  01850	e59d3008	 ldr         r3, [sp, #8]
  01854	e2433001	 sub         r3, r3, #1
  01858	e58d3008	 str         r3, [sp, #8]

; 888  :         dwVal = INREG32(&m_pbRegisters->MMCHS_STAT);

  0185c	e59d3020	 ldr         r3, [sp, #0x20]
  01860	e2833f57	 add         r3, r3, #0x57, 30
  01864	e5933000	 ldr         r3, [r3]
  01868	e2833e13	 add         r3, r3, #0x13, 28
  0186c	e5933000	 ldr         r3, [r3]
  01870	e58d3000	 str         r3, [sp]

; 889  :         if(dwVal & (MMCHS_STAT_CC | MMCHS_STAT_CTO | MMCHS_STAT_CERR)) break;

  01874	e59d2000	 ldr         r2, [sp]
  01878	e3a03211	 mov         r3, #0x11, 4
  0187c	e3833801	 orr         r3, r3, #1, 16
  01880	e1120003	 tst         r2, r3
  01884	0a000000	 beq         |$LN1@SendCmdNoR|
  01888	ea000000	 b           |$LN2@SendCmdNoR|
  0188c		 |$LN1@SendCmdNoR|

; 890  :     }

  0188c	eaffffec	 b           |$LN3@SendCmdNoR|
  01890		 |$LN2@SendCmdNoR|

; 891  : 
; 892  :     dwVal = INREG32(&m_pbRegisters->MMCHS_STAT);

  01890	e59d3020	 ldr         r3, [sp, #0x20]
  01894	e2833f57	 add         r3, r3, #0x57, 30
  01898	e5933000	 ldr         r3, [r3]
  0189c	e2833e13	 add         r3, r3, #0x13, 28
  018a0	e5933000	 ldr         r3, [r3]
  018a4	e58d3000	 str         r3, [sp]

; 893  :     OUTREG32(&m_pbRegisters->MMCHS_STAT, dwVal);

  018a8	e59d3020	 ldr         r3, [sp, #0x20]
  018ac	e2833f57	 add         r3, r3, #0x57, 30
  018b0	e5933000	 ldr         r3, [r3]
  018b4	e2832e13	 add         r2, r3, #0x13, 28
  018b8	e59d3000	 ldr         r3, [sp]
  018bc	e5823000	 str         r3, [r2]

; 894  : 
; 895  :     // always return 0 if no response needed
; 896  :     return SD_API_STATUS_SUCCESS;

  018c0	e3a03000	 mov         r3, #0
  018c4	e58d3010	 str         r3, [sp, #0x10]

; 897  : }

  018c8	e59d0010	 ldr         r0, [sp, #0x10]
  018cc	e28dd018	 add         sp, sp, #0x18
  018d0	e89d6000	 ldmia       sp, {sp, lr}
  018d4	e12fff1e	 bx          lr
  018d8		 |$LN13@SendCmdNoR|
  018d8		 |$LN14@SendCmdNoR|
  018d8	00000000	 DCD         |?gwaCMD@@3PAUCMD@@A|
  018dc		 |$LN15@SendCmdNoR|
  018dc	00000000	 DCD         |?gwaCMD60_HS@@3UCMD@@A|
  018e0		 |$M45291|

			 ENDP  ; |?SendCmdNoResp@CSDIOControllerBase@@QAAJKK@Z|, CSDIOControllerBase::SendCmdNoResp

	EXPORT	|?SendInitSequence@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::SendInitSequence

  00088			 AREA	 |.pdata|, PDATA
|$T45301| DCD	|$LN8@SendInitSe|
	DCD	0x40003e04
; Function compile flags: /Odtp

  018e0			 AREA	 |.text|, CODE, ARM

  018e0		 |?SendInitSequence@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::SendInitSequence

; 902  : {

  018e0		 |$LN8@SendInitSe|
  018e0	e1a0c00d	 mov         r12, sp
  018e4	e92d0001	 stmdb       sp!, {r0}
  018e8	e92d5000	 stmdb       sp!, {r12, lr}
  018ec	e24dd004	 sub         sp, sp, #4
  018f0		 |$M45298|

; 903  :     EnterCriticalSection( &m_critSec );

  018f0	e59d300c	 ldr         r3, [sp, #0xC]
  018f4	e28300b0	 add         r0, r3, #0xB0
  018f8	eb000000	 bl          EnterCriticalSection

; 904  :     OUTREG32(&m_pbRegisters->MMCHS_IE,  0xFFFFFEFF);

  018fc	e59d300c	 ldr         r3, [sp, #0xC]
  01900	e2833f57	 add         r3, r3, #0x57, 30
  01904	e5933000	 ldr         r3, [r3]
  01908	e2832f4d	 add         r2, r3, #0x4D, 30
  0190c	e3e03c01	 mvn         r3, #1, 24
  01910	e5823000	 str         r3, [r2]

; 905  :     SETREG32(&m_pbRegisters->MMCHS_CON, MMCHS_CON_INIT);

  01914	e59d300c	 ldr         r3, [sp, #0xC]
  01918	e2833f57	 add         r3, r3, #0x57, 30
  0191c	e5933000	 ldr         r3, [r3]
  01920	e283302c	 add         r3, r3, #0x2C
  01924	e5933000	 ldr         r3, [r3]
  01928	e3832002	 orr         r2, r3, #2
  0192c	e59d300c	 ldr         r3, [sp, #0xC]
  01930	e2833f57	 add         r3, r3, #0x57, 30
  01934	e5933000	 ldr         r3, [r3]
  01938	e283302c	 add         r3, r3, #0x2C
  0193c	e5832000	 str         r2, [r3]

; 906  : 
; 907  :     DWORD dwCount;
; 908  :     for(dwCount = 0; dwCount < 10; dwCount ++)

  01940	e3a03000	 mov         r3, #0
  01944	e58d3000	 str         r3, [sp]
  01948	ea000002	 b           |$LN3@SendInitSe|
  0194c		 |$LN2@SendInitSe|
  0194c	e59d3000	 ldr         r3, [sp]
  01950	e2833001	 add         r3, r3, #1
  01954	e58d3000	 str         r3, [sp]
  01958		 |$LN3@SendInitSe|
  01958	e59d3000	 ldr         r3, [sp]
  0195c	e353000a	 cmp         r3, #0xA
  01960	2a000004	 bcs         |$LN1@SendInitSe|

; 909  :     {
; 910  :         SendCmdNoResp(SD_CMD_GO_IDLE_STATE, 0xFFFFFFFF);

  01964	e3e02000	 mvn         r2, #0
  01968	e3a01000	 mov         r1, #0
  0196c	e59d000c	 ldr         r0, [sp, #0xC]
  01970	eb000000	 bl          |?SendCmdNoResp@CSDIOControllerBase@@QAAJKK@Z|

; 911  :     }

  01974	eafffff4	 b           |$LN2@SendInitSe|
  01978		 |$LN1@SendInitSe|

; 912  :     OUTREG32(&m_pbRegisters->MMCHS_STAT, 0xFFFFFFFF);

  01978	e59d300c	 ldr         r3, [sp, #0xC]
  0197c	e2833f57	 add         r3, r3, #0x57, 30
  01980	e5933000	 ldr         r3, [r3]
  01984	e2832e13	 add         r2, r3, #0x13, 28
  01988	e3e03000	 mvn         r3, #0
  0198c	e5823000	 str         r3, [r2]

; 913  :     CLRREG32(&m_pbRegisters->MMCHS_CON, MMCHS_CON_INIT);

  01990	e59d300c	 ldr         r3, [sp, #0xC]
  01994	e2833f57	 add         r3, r3, #0x57, 30
  01998	e5933000	 ldr         r3, [r3]
  0199c	e283302c	 add         r3, r3, #0x2C
  019a0	e5932000	 ldr         r2, [r3]
  019a4	e3e03002	 mvn         r3, #2
  019a8	e0022003	 and         r2, r2, r3
  019ac	e59d300c	 ldr         r3, [sp, #0xC]
  019b0	e2833f57	 add         r3, r3, #0x57, 30
  019b4	e5933000	 ldr         r3, [r3]
  019b8	e283302c	 add         r3, r3, #0x2C
  019bc	e5832000	 str         r2, [r3]

; 914  :     LeaveCriticalSection( &m_critSec );

  019c0	e59d300c	 ldr         r3, [sp, #0xC]
  019c4	e28300b0	 add         r0, r3, #0xB0
  019c8	eb000000	 bl          LeaveCriticalSection

; 915  : }

  019cc	e28dd004	 add         sp, sp, #4
  019d0	e89d6000	 ldmia       sp, {sp, lr}
  019d4	e12fff1e	 bx          lr
  019d8		 |$M45299|

			 ENDP  ; |?SendInitSequence@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::SendInitSequence

	EXPORT	|??_C@_1HO@LOCLBPFC@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@OEOLMLE@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?3?$AA?3?$AA?5?$AAb?$AAr?$AAa?$AAn?$AAc?$AAh?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAs?$AAw?$AAi?$AAt?$AAc?$AAh?$AA?5@| [ DATA ] ; `string'
	EXPORT	|?Write_MMC_STAT@CSDIOControllerBase@@QAAXK@Z| ; CSDIOControllerBase::Write_MMC_STAT
	EXPORT	|??_C@_1JE@FAMEDKFO@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?5?$AA?$CI?$AAC?$AAm?$AAd?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?0?$AA?5?$AAA?$AAr?$AAg?$AA?$DN?$AA0?$AAx?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KE@KBBNINAM@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?5?$AA?$CI?$AAC?$AAm?$AAd?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?0?$AA?5?$AAA?$AAr?$AAg?$AA?$DN?$AA0?$AAx?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JO@GHLNKHDB@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAm?$AAd?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAA?$AAr?$AAg?$AA?5?$AA?$DN@| [ DATA ] ; `string'
	EXPORT	|?SendCommand@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z| ; CSDIOControllerBase::SendCommand
	IMPORT	|?SDIO_InitOutputDMA@CSDIOControllerBase@@QAAXKK@Z| ; CSDIOControllerBase::SDIO_InitOutputDMA
	IMPORT	|?SDIO_InitInputDMA@CSDIOControllerBase@@QAAXKK@Z| ; CSDIOControllerBase::SDIO_InitInputDMA

  00090			 AREA	 |.pdata|, PDATA
|$T45334| DCD	|$LN50@SendComman|
	DCD	0x40023504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@LOCLBPFC@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn@| DCB "S"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "s"
	DCB	0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "H", 0x0, "S", 0x0, "_", 0x0, "A"
	DCB	0x0, "R", 0x0, "G", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@OEOLMLE@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?3?$AA?3?$AA?5?$AAb?$AAr?$AAa?$AAn?$AAc?$AAh?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAs?$AAw?$AAi?$AAt?$AAc?$AAh?$AA?5@| DCB "S"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, ":", 0x0, ":"
	DCB	0x0, " ", 0x0, "b", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "c"
	DCB	0x0, "h", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "s", 0x0, "w", 0x0, "i", 0x0, "t", 0x0, "c", 0x0, "h"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JE@FAMEDKFO@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?5?$AA?$CI?$AAC?$AAm?$AAd?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?0?$AA?5?$AAA?$AAr?$AAg?$AA?$DN?$AA0?$AAx?$AA?$CF@| DCB "S"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, " ", 0x0, "("
	DCB	0x0, "C", 0x0, "m", 0x0, "d", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " "
	DCB	0x0, "A", 0x0, "r", 0x0, "g", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " "
	DCB	0x0, "R", 0x0, "e", 0x0, "s", 0x0, "p", 0x0, "T", 0x0, "y"
	DCB	0x0, "p", 0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "D"
	DCB	0x0, "a", 0x0, "t", 0x0, "a", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, ")", 0x0, " ", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "r", 0x0, "t", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KE@KBBNINAM@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?5?$AA?$CI?$AAC?$AAm?$AAd?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?0?$AA?5?$AAA?$AAr?$AAg?$AA?$DN?$AA0?$AAx?$AA?$CF@| DCB "S"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, " ", 0x0, "("
	DCB	0x0, "C", 0x0, "m", 0x0, "d", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " "
	DCB	0x0, "A", 0x0, "r", 0x0, "g", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " "
	DCB	0x0, "R", 0x0, "e", 0x0, "s", 0x0, "p", 0x0, "T", 0x0, "y"
	DCB	0x0, "p", 0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "D"
	DCB	0x0, "a", 0x0, "t", 0x0, "a", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, " ", 0x0, "<", 0x0, "%", 0x0, "d"
	DCB	0x0, "x", 0x0, "%", 0x0, "d", 0x0, ">", 0x0, ")", 0x0, " "
	DCB	0x0, "s", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JO@GHLNKHDB@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAm?$AAd?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAA?$AAr?$AAg?$AA?5?$AA?$DN@| DCB "S"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "C", 0x0, "m", 0x0, "d"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, " ", 0x0, "A", 0x0, "r", 0x0, "g", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "p", 0x0, "T"
	DCB	0x0, "y", 0x0, "p", 0x0, "e", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, "m"
	DCB	0x0, "_", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, "C", 0x0, "l", 0x0, "a"
	DCB	0x0, "s", 0x0, "s", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  019d8			 AREA	 |.text|, CODE, ARM

  019d8		 |?SendCommand@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z| PROC ; CSDIOControllerBase::SendCommand

; 920  : {

  019d8		 |$LN50@SendComman|
  019d8	e1a0c00d	 mov         r12, sp
  019dc	e92d0003	 stmdb       sp!, {r0, r1}
  019e0	e92d5000	 stmdb       sp!, {r12, lr}
  019e4	e24dd06c	 sub         sp, sp, #0x6C
  019e8		 |$M45331|

; 921  :     DWORD MMC_CMD;
; 922  :     DWORD dwTimeout;
; 923  :     DWORD Cmd = pRequest->CommandCode;

  019e8	e59d3078	 ldr         r3, [sp, #0x78]
  019ec	e2833014	 add         r3, r3, #0x14
  019f0	e5d33000	 ldrb        r3, [r3]
  019f4	e58d301c	 str         r3, [sp, #0x1C]

; 924  :     DWORD Arg = pRequest->CommandArgument;

  019f8	e59d3078	 ldr         r3, [sp, #0x78]
  019fc	e2833018	 add         r3, r3, #0x18
  01a00	e5933000	 ldr         r3, [r3]
  01a04	e58d300c	 str         r3, [sp, #0xC]

; 925  :     UINT16 respType = (UINT16)pRequest->CommandResponse.ResponseType;

  01a08	e59d3078	 ldr         r3, [sp, #0x78]
  01a0c	e283301c	 add         r3, r3, #0x1C
  01a10	e5933000	 ldr         r3, [r3]
  01a14	e1a03803	 mov         r3, r3, lsl #16
  01a18	e1a03823	 mov         r3, r3, lsr #16
  01a1c	e1cd31b8	 strh        r3, [sp, #0x18]

; 926  :     DWORD dwRegVal;
; 927  : 
; 928  :     m_TransferClass = pRequest->TransferClass;

  01a20	e59d3078	 ldr         r3, [sp, #0x78]
  01a24	e2831010	 add         r1, r3, #0x10
  01a28	e59d3074	 ldr         r3, [sp, #0x74]
  01a2c	e2832f76	 add         r2, r3, #0x76, 30
  01a30	e5913000	 ldr         r3, [r1]
  01a34	e5823000	 str         r3, [r2]

; 929  : 
; 930  :     DEBUGMSG(SHC_SEND_ZONE, (TEXT("SendCommand() - Cmd = 0x%x Arg = 0x%x respType = 0x%x m_TransferClass = 0x%x\r\n"),
; 931  :         Cmd, Arg, respType, m_TransferClass));

  01a38	e59f3850	 ldr         r3, [pc, #0x850]
  01a3c	e5933440	 ldr         r3, [r3, #0x440]
  01a40	e3130002	 tst         r3, #2
  01a44	0a00000b	 beq         |$LN28@SendComman|
  01a48	e59d3074	 ldr         r3, [sp, #0x74]
  01a4c	e2833f76	 add         r3, r3, #0x76, 30
  01a50	e5933000	 ldr         r3, [r3]
  01a54	e58d3000	 str         r3, [sp]
  01a58	e1dd31b8	 ldrh        r3, [sp, #0x18]
  01a5c	e59d200c	 ldr         r2, [sp, #0xC]
  01a60	e59d101c	 ldr         r1, [sp, #0x1C]
  01a64	e59f083c	 ldr         r0, [pc, #0x83C]
  01a68	eb000000	 bl          NKDbgPrintfW
  01a6c	e3a03001	 mov         r3, #1
  01a70	e58d3044	 str         r3, [sp, #0x44]
  01a74	ea000001	 b           |$LN29@SendComman|
  01a78		 |$LN28@SendComman|
  01a78	e3a03000	 mov         r3, #0
  01a7c	e58d3044	 str         r3, [sp, #0x44]
  01a80		 |$LN29@SendComman|

; 932  : 
; 933  :     if ((Cmd == SD_CMD_IO_RW_EXTENDED) || (Cmd == SD_CMD_IO_RW_DIRECT))

  01a80	e59d301c	 ldr         r3, [sp, #0x1C]
  01a84	e3530035	 cmp         r3, #0x35
  01a88	0a000002	 beq         |$LN24@SendComman|
  01a8c	e59d301c	 ldr         r3, [sp, #0x1C]
  01a90	e3530034	 cmp         r3, #0x34
  01a94	1a000004	 bne         |$LN25@SendComman|
  01a98		 |$LN24@SendComman|

; 934  :     {
; 935  :         m_dwSDIOCard = 1;

  01a98	e59d3074	 ldr         r3, [sp, #0x74]
  01a9c	e2832f5e	 add         r2, r3, #0x5E, 30
  01aa0	e3a03001	 mov         r3, #1
  01aa4	e5823000	 str         r3, [r2]

; 936  :     } else

  01aa8	ea000009	 b           |$LN23@SendComman|
  01aac		 |$LN25@SendComman|

; 937  :     if ((Cmd == SD_CMD_MMC_SEND_OPCOND) || (Cmd == SD_CMD_GO_IDLE_STATE))

  01aac	e59d301c	 ldr         r3, [sp, #0x1C]
  01ab0	e3530001	 cmp         r3, #1
  01ab4	0a000002	 beq         |$LN21@SendComman|
  01ab8	e59d301c	 ldr         r3, [sp, #0x1C]
  01abc	e3530000	 cmp         r3, #0
  01ac0	1a000003	 bne         |$LN22@SendComman|
  01ac4		 |$LN21@SendComman|

; 938  :     {
; 939  :         m_dwSDIOCard = 0;

  01ac4	e59d3074	 ldr         r3, [sp, #0x74]
  01ac8	e2832f5e	 add         r2, r3, #0x5E, 30
  01acc	e3a03000	 mov         r3, #0
  01ad0	e5823000	 str         r3, [r2]
  01ad4		 |$LN22@SendComman|
  01ad4		 |$LN23@SendComman|

; 940  :     }
; 941  : 
; 942  :     if( m_TransferClass == SD_READ || m_TransferClass == SD_WRITE )

  01ad4	e59d3074	 ldr         r3, [sp, #0x74]
  01ad8	e2833f76	 add         r3, r3, #0x76, 30
  01adc	e5933000	 ldr         r3, [r3]
  01ae0	e3530000	 cmp         r3, #0
  01ae4	0a000004	 beq         |$LN19@SendComman|
  01ae8	e59d3074	 ldr         r3, [sp, #0x74]
  01aec	e2833f76	 add         r3, r3, #0x76, 30
  01af0	e5933000	 ldr         r3, [r3]
  01af4	e3530001	 cmp         r3, #1
  01af8	1a000022	 bne         |$LN20@SendComman|
  01afc		 |$LN19@SendComman|

; 943  :     {
; 944  :         DEBUGMSG(SHC_SDBUS_INTERACT_ZONE, (TEXT("SendCommand (Cmd=0x%08X, Arg=0x%08x, RespType=0x%08X, Data=0x%x <%dx%d>) starts\r\n"),
; 945  :             Cmd, Arg, respType, (m_TransferClass==SD_COMMAND)?FALSE:TRUE, pRequest->NumBlocks, pRequest->BlockSize ) );

  01afc	e59f378c	 ldr         r3, [pc, #0x78C]
  01b00	e5933440	 ldr         r3, [r3, #0x440]
  01b04	e3130040	 tst         r3, #0x40
  01b08	0a00001b	 beq         |$LN32@SendComman|
  01b0c	e59d3074	 ldr         r3, [sp, #0x74]
  01b10	e2833f76	 add         r3, r3, #0x76, 30
  01b14	e5933000	 ldr         r3, [r3]
  01b18	e3530002	 cmp         r3, #2
  01b1c	1a000002	 bne         |$LN30@SendComman|
  01b20	e3a03000	 mov         r3, #0
  01b24	e58d3048	 str         r3, [sp, #0x48]
  01b28	ea000001	 b           |$LN31@SendComman|
  01b2c		 |$LN30@SendComman|
  01b2c	e3a03001	 mov         r3, #1
  01b30	e58d3048	 str         r3, [sp, #0x48]
  01b34		 |$LN31@SendComman|
  01b34	e59d3078	 ldr         r3, [sp, #0x78]
  01b38	e2833040	 add         r3, r3, #0x40
  01b3c	e5933000	 ldr         r3, [r3]
  01b40	e58d3008	 str         r3, [sp, #8]
  01b44	e59d3078	 ldr         r3, [sp, #0x78]
  01b48	e283303c	 add         r3, r3, #0x3C
  01b4c	e5933000	 ldr         r3, [r3]
  01b50	e58d3004	 str         r3, [sp, #4]
  01b54	e59d3048	 ldr         r3, [sp, #0x48]
  01b58	e58d3000	 str         r3, [sp]
  01b5c	e1dd31b8	 ldrh        r3, [sp, #0x18]
  01b60	e59d200c	 ldr         r2, [sp, #0xC]
  01b64	e59d101c	 ldr         r1, [sp, #0x1C]
  01b68	e59f0734	 ldr         r0, [pc, #0x734]
  01b6c	eb000000	 bl          NKDbgPrintfW
  01b70	e3a03001	 mov         r3, #1
  01b74	e58d304c	 str         r3, [sp, #0x4C]
  01b78	ea000001	 b           |$LN33@SendComman|
  01b7c		 |$LN32@SendComman|
  01b7c	e3a03000	 mov         r3, #0
  01b80	e58d304c	 str         r3, [sp, #0x4C]
  01b84		 |$LN33@SendComman|

; 946  : #ifdef ENABLE_RETAIL_OUTPUT
; 947  :         RETAILMSG(1, (TEXT("SendCommand (Cmd=0x%08X, Arg=0x%08x, RespType=0x%08X, Data=0x%x <%dx%d>) starts\r\n"),
; 948  :             Cmd, Arg, respType, (m_TransferClass==SD_COMMAND)?FALSE:TRUE, pRequest->NumBlocks, pRequest->BlockSize ) );
; 949  : #endif
; 950  :     }
; 951  :     else

  01b84	ea000019	 b           |$LN18@SendComman|
  01b88		 |$LN20@SendComman|

; 952  :     {
; 953  :         DEBUGMSG(SHC_SDBUS_INTERACT_ZONE, (TEXT("SendCommand (Cmd=0x%08X, Arg=0x%08x, RespType=0x%08X, Data=0x%x) starts\r\n"),
; 954  :             Cmd, Arg, respType, (m_TransferClass==SD_COMMAND)?FALSE:TRUE) );

  01b88	e59f3700	 ldr         r3, [pc, #0x700]
  01b8c	e5933440	 ldr         r3, [r3, #0x440]
  01b90	e3130040	 tst         r3, #0x40
  01b94	0a000013	 beq         |$LN36@SendComman|
  01b98	e59d3074	 ldr         r3, [sp, #0x74]
  01b9c	e2833f76	 add         r3, r3, #0x76, 30
  01ba0	e5933000	 ldr         r3, [r3]
  01ba4	e3530002	 cmp         r3, #2
  01ba8	1a000002	 bne         |$LN34@SendComman|
  01bac	e3a03000	 mov         r3, #0
  01bb0	e58d3050	 str         r3, [sp, #0x50]
  01bb4	ea000001	 b           |$LN35@SendComman|
  01bb8		 |$LN34@SendComman|
  01bb8	e3a03001	 mov         r3, #1
  01bbc	e58d3050	 str         r3, [sp, #0x50]
  01bc0		 |$LN35@SendComman|
  01bc0	e59d3050	 ldr         r3, [sp, #0x50]
  01bc4	e58d3000	 str         r3, [sp]
  01bc8	e1dd31b8	 ldrh        r3, [sp, #0x18]
  01bcc	e59d200c	 ldr         r2, [sp, #0xC]
  01bd0	e59d101c	 ldr         r1, [sp, #0x1C]
  01bd4	e59f06c4	 ldr         r0, [pc, #0x6C4]
  01bd8	eb000000	 bl          NKDbgPrintfW
  01bdc	e3a03001	 mov         r3, #1
  01be0	e58d3054	 str         r3, [sp, #0x54]
  01be4	ea000001	 b           |$LN37@SendComman|
  01be8		 |$LN36@SendComman|
  01be8	e3a03000	 mov         r3, #0
  01bec	e58d3054	 str         r3, [sp, #0x54]
  01bf0		 |$LN37@SendComman|
  01bf0		 |$LN18@SendComman|

; 955  : #ifdef ENABLE_RETAIL_OUTPUT
; 956  :         RETAILMSG(1, (TEXT("SendCommand (Cmd=0x%08X, Arg=0x%08x, RespType=0x%08X, Data=0x%x) starts\r\n"),
; 957  :             Cmd, Arg, respType, (m_TransferClass==SD_COMMAND)?FALSE:TRUE) );
; 958  : #endif
; 959  :     }
; 960  : 
; 961  :     // turn the clock on
; 962  :     //if(!(pRequest->SystemFlags & SD_FAST_PATH_AVAILABLE))
; 963  :     //   UpdateSystemClock(TRUE);
; 964  : 
; 965  :     Write_MMC_STAT(0xFFFFFFFF);

  01bf0	e3e01000	 mvn         r1, #0
  01bf4	e59d0074	 ldr         r0, [sp, #0x74]
  01bf8	eb000000	 bl          |?Write_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|

; 966  :     dwTimeout = 2000;

  01bfc	e3a03e7d	 mov         r3, #0x7D, 28
  01c00	e58d3020	 str         r3, [sp, #0x20]
  01c04		 |$LN17@SendComman|

; 967  :     while(((INREG32(&m_pbRegisters->MMCHS_PSTATE) & MMCHS_PSTAT_CMDI)) && (dwTimeout>0))

  01c04	e59d3074	 ldr         r3, [sp, #0x74]
  01c08	e2833f57	 add         r3, r3, #0x57, 30
  01c0c	e5933000	 ldr         r3, [r3]
  01c10	e2833f49	 add         r3, r3, #0x49, 30
  01c14	e5933000	 ldr         r3, [r3]
  01c18	e3130001	 tst         r3, #1
  01c1c	0a000006	 beq         |$LN16@SendComman|
  01c20	e59d3020	 ldr         r3, [sp, #0x20]
  01c24	e3530000	 cmp         r3, #0
  01c28	9a000003	 bls         |$LN16@SendComman|

; 968  :     {
; 969  :         dwTimeout--;

  01c2c	e59d3020	 ldr         r3, [sp, #0x20]
  01c30	e2433001	 sub         r3, r3, #1
  01c34	e58d3020	 str         r3, [sp, #0x20]

; 970  :     }

  01c38	eafffff1	 b           |$LN17@SendComman|
  01c3c		 |$LN16@SendComman|

; 971  :     MMC_CMD = MMCHS_INDX(Cmd);

  01c3c	e59d301c	 ldr         r3, [sp, #0x1C]
  01c40	e1a03c03	 mov         r3, r3, lsl #24
  01c44	e58d3014	 str         r3, [sp, #0x14]

; 972  : 
; 973  :     // CMD6 is defined differently in MMC and SD specifications, try to identify them here 
; 974  :     // and use appropriate controller settings. 
; 975  :     if (IS_SDHC_SWITCH_COMMAND(pRequest,Cmd))

  01c48	e59d3074	 ldr         r3, [sp, #0x74]
  01c4c	e2833f66	 add         r3, r3, #0x66, 30
  01c50	e5933000	 ldr         r3, [r3]
  01c54	e3530000	 cmp         r3, #0
  01c58	0a00000a	 beq         |$LN38@SendComman|
  01c5c	e59d3078	 ldr         r3, [sp, #0x78]
  01c60	e2833010	 add         r3, r3, #0x10
  01c64	e5933000	 ldr         r3, [r3]
  01c68	e3530000	 cmp         r3, #0
  01c6c	1a000005	 bne         |$LN38@SendComman|
  01c70	e59d301c	 ldr         r3, [sp, #0x1C]
  01c74	e3530006	 cmp         r3, #6
  01c78	1a000002	 bne         |$LN38@SendComman|
  01c7c	e3a03001	 mov         r3, #1
  01c80	e58d3058	 str         r3, [sp, #0x58]
  01c84	ea000001	 b           |$LN39@SendComman|
  01c88		 |$LN38@SendComman|
  01c88	e3a03000	 mov         r3, #0
  01c8c	e58d3058	 str         r3, [sp, #0x58]
  01c90		 |$LN39@SendComman|
  01c90	e59d3058	 ldr         r3, [sp, #0x58]
  01c94	e3530000	 cmp         r3, #0
  01c98	0a000028	 beq         |$LN15@SendComman|

; 976  :     	{
; 977  :         DEBUGMSG(SHC_SDBUS_INTERACT_ZONE,(TEXT("SendCommand:: branch for switch command\r\n")));

  01c9c	e59f35ec	 ldr         r3, [pc, #0x5EC]
  01ca0	e5933440	 ldr         r3, [r3, #0x440]
  01ca4	e3130040	 tst         r3, #0x40
  01ca8	0a000004	 beq         |$LN40@SendComman|
  01cac	e59f05e8	 ldr         r0, [pc, #0x5E8]
  01cb0	eb000000	 bl          NKDbgPrintfW
  01cb4	e3a03001	 mov         r3, #1
  01cb8	e58d305c	 str         r3, [sp, #0x5C]
  01cbc	ea000001	 b           |$LN41@SendComman|
  01cc0		 |$LN40@SendComman|
  01cc0	e3a03000	 mov         r3, #0
  01cc4	e58d305c	 str         r3, [sp, #0x5C]
  01cc8		 |$LN41@SendComman|

; 978  :         MMC_CMD |= ADJUST_FOR_SDHC_SWITCH_CMD(Cmd);

  01cc8	e59d201c	 ldr         r2, [sp, #0x1C]
  01ccc	e3a0300a	 mov         r3, #0xA
  01cd0	e0030392	 mul         r3, r2, r3
  01cd4	e353003c	 cmp         r3, #0x3C
  01cd8	1a000007	 bne         |$LN42@SendComman|
  01cdc	e59d3074	 ldr         r3, [sp, #0x74]
  01ce0	e2833f66	 add         r3, r3, #0x66, 30
  01ce4	e5933000	 ldr         r3, [r3]
  01ce8	e3530000	 cmp         r3, #0
  01cec	0a000002	 beq         |$LN42@SendComman|
  01cf0	e59f35a0	 ldr         r3, [pc, #0x5A0]
  01cf4	e58d3060	 str         r3, [sp, #0x60]
  01cf8	ea000007	 b           |$LN43@SendComman|
  01cfc		 |$LN42@SendComman|
  01cfc	e59d201c	 ldr         r2, [sp, #0x1C]
  01d00	e3a0300a	 mov         r3, #0xA
  01d04	e0010392	 mul         r1, r2, r3
  01d08	e3a03008	 mov         r3, #8
  01d0c	e0020391	 mul         r2, r1, r3
  01d10	e59f357c	 ldr         r3, [pc, #0x57C]
  01d14	e0833002	 add         r3, r3, r2
  01d18	e58d3060	 str         r3, [sp, #0x60]
  01d1c		 |$LN43@SendComman|
  01d1c	e59d3060	 ldr         r3, [sp, #0x60]
  01d20	e58d3024	 str         r3, [sp, #0x24]
  01d24	e59d3024	 ldr         r3, [sp, #0x24]
  01d28	e2833004	 add         r3, r3, #4
  01d2c	e59d2014	 ldr         r2, [sp, #0x14]
  01d30	e5933000	 ldr         r3, [r3]
  01d34	e1823003	 orr         r3, r2, r3
  01d38	e58d3014	 str         r3, [sp, #0x14]

; 979  :     	}
; 980  :     else

  01d3c	ea000018	 b           |$LN14@SendComman|
  01d40		 |$LN15@SendComman|

; 981  :         MMC_CMD |= LOOKUP_CMD(Cmd).flags;

  01d40	e59d301c	 ldr         r3, [sp, #0x1C]
  01d44	e353003c	 cmp         r3, #0x3C
  01d48	1a000007	 bne         |$LN44@SendComman|
  01d4c	e59d3074	 ldr         r3, [sp, #0x74]
  01d50	e2833f66	 add         r3, r3, #0x66, 30
  01d54	e5933000	 ldr         r3, [r3]
  01d58	e3530000	 cmp         r3, #0
  01d5c	0a000002	 beq         |$LN44@SendComman|
  01d60	e59f3530	 ldr         r3, [pc, #0x530]
  01d64	e58d3064	 str         r3, [sp, #0x64]
  01d68	ea000005	 b           |$LN45@SendComman|
  01d6c		 |$LN44@SendComman|
  01d6c	e59d101c	 ldr         r1, [sp, #0x1C]
  01d70	e3a03008	 mov         r3, #8
  01d74	e0020391	 mul         r2, r1, r3
  01d78	e59f3514	 ldr         r3, [pc, #0x514]
  01d7c	e0833002	 add         r3, r3, r2
  01d80	e58d3064	 str         r3, [sp, #0x64]
  01d84		 |$LN45@SendComman|
  01d84	e59d3064	 ldr         r3, [sp, #0x64]
  01d88	e58d3028	 str         r3, [sp, #0x28]
  01d8c	e59d3028	 ldr         r3, [sp, #0x28]
  01d90	e2833004	 add         r3, r3, #4
  01d94	e59d2014	 ldr         r2, [sp, #0x14]
  01d98	e5933000	 ldr         r3, [r3]
  01d9c	e1823003	 orr         r3, r2, r3
  01da0	e58d3014	 str         r3, [sp, #0x14]
  01da4		 |$LN14@SendComman|

; 982  : 	
; 983  :     if ((Cmd == SD_CMD_SELECT_DESELECT_CARD) && (respType == NoResponse))

  01da4	e59d301c	 ldr         r3, [sp, #0x1C]
  01da8	e3530007	 cmp         r3, #7
  01dac	1a000008	 bne         |$LN13@SendComman|
  01db0	e1dd31b8	 ldrh        r3, [sp, #0x18]
  01db4	e3530000	 cmp         r3, #0
  01db8	1a000005	 bne         |$LN13@SendComman|

; 984  :     {
; 985  :         MMC_CMD &= ~MMCHS_RSP_MASK;

  01dbc	e59d2014	 ldr         r2, [sp, #0x14]
  01dc0	e3e03803	 mvn         r3, #3, 16
  01dc4	e0023003	 and         r3, r2, r3
  01dc8	e58d3014	 str         r3, [sp, #0x14]

; 986  :         MMC_CMD |= MMCHS_RSP_NONE;

  01dcc	e59d3014	 ldr         r3, [sp, #0x14]
  01dd0	e58d3014	 str         r3, [sp, #0x14]
  01dd4		 |$LN13@SendComman|

; 987  :     }
; 988  : 
; 989  :     m_fDMATransfer = FALSE;

  01dd4	e59d3074	 ldr         r3, [sp, #0x74]
  01dd8	e2832e11	 add         r2, r3, #0x11, 28
  01ddc	e3a03000	 mov         r3, #0
  01de0	e5823000	 str         r3, [r2]

; 990  :     MMC_CMD &= ~MMCHS_CMD_DE;

  01de4	e59d2014	 ldr         r2, [sp, #0x14]
  01de8	e3e03001	 mvn         r3, #1
  01dec	e0023003	 and         r3, r2, r3
  01df0	e58d3014	 str         r3, [sp, #0x14]

; 991  : 
; 992  :     if (Cmd == SD_CMD_IO_RW_EXTENDED)

  01df4	e59d301c	 ldr         r3, [sp, #0x1C]
  01df8	e3530035	 cmp         r3, #0x35
  01dfc	1a000007	 bne         |$LN12@SendComman|

; 993  :     {
; 994  :         if(pRequest->NumBlocks > 1)

  01e00	e59d3078	 ldr         r3, [sp, #0x78]
  01e04	e283303c	 add         r3, r3, #0x3C
  01e08	e5933000	 ldr         r3, [r3]
  01e0c	e3530001	 cmp         r3, #1
  01e10	9a000002	 bls         |$LN11@SendComman|

; 995  :         {
; 996  :            MMC_CMD |= MMCHS_CMD_MSBS | MMCHS_CMD_BCE;

  01e14	e59d3014	 ldr         r3, [sp, #0x14]
  01e18	e3833022	 orr         r3, r3, #0x22
  01e1c	e58d3014	 str         r3, [sp, #0x14]
  01e20		 |$LN11@SendComman|
  01e20		 |$LN12@SendComman|

; 997  :         }
; 998  :     }
; 999  : 
; 1000 :     if( m_TransferClass == SD_READ )

  01e20	e59d3074	 ldr         r3, [sp, #0x74]
  01e24	e2833f76	 add         r3, r3, #0x76, 30
  01e28	e5933000	 ldr         r3, [r3]
  01e2c	e3530000	 cmp         r3, #0
  01e30	1a000070	 bne         |$LN10@SendComman|

; 1001 :     {
; 1002 :         MMC_CMD |= MMCHS_CMD_DDIR;

  01e34	e59d3014	 ldr         r3, [sp, #0x14]
  01e38	e3833010	 orr         r3, r3, #0x10
  01e3c	e58d3014	 str         r3, [sp, #0x14]

; 1003 : 
; 1004 : #ifdef SDIO_DMA_READ_ENABLED
; 1005 :        // if we can use the DMA for transfer...
; 1006 :        if( ((( pRequest->NumBlocks > 1) && !(pRequest->SystemFlags & SD_FAST_PATH_AVAILABLE)) || 
; 1007 :        (( pRequest->NumBlocks > 0) && (pRequest->SystemFlags & SD_FAST_PATH_AVAILABLE))) &&
; 1008 :             ( TRANSFER_SIZE(pRequest) % MIN_MMC_BLOCK_SIZE == 0 ) &&
; 1009 :             ( TRANSFER_SIZE(pRequest) <= m_dwDMABufferSize ) )

  01e40	e59d3078	 ldr         r3, [sp, #0x78]
  01e44	e283303c	 add         r3, r3, #0x3C
  01e48	e5933000	 ldr         r3, [r3]
  01e4c	e3530001	 cmp         r3, #1
  01e50	9a000004	 bls         |$LN7@SendComman|
  01e54	e59d3078	 ldr         r3, [sp, #0x78]
  01e58	e283300c	 add         r3, r3, #0xC
  01e5c	e5933000	 ldr         r3, [r3]
  01e60	e3130102	 tst         r3, #2, 2
  01e64	0a000009	 beq         |$LN8@SendComman|
  01e68		 |$LN7@SendComman|
  01e68	e59d3078	 ldr         r3, [sp, #0x78]
  01e6c	e283303c	 add         r3, r3, #0x3C
  01e70	e5933000	 ldr         r3, [r3]
  01e74	e3530000	 cmp         r3, #0
  01e78	9a000046	 bls         |$LN9@SendComman|
  01e7c	e59d3078	 ldr         r3, [sp, #0x78]
  01e80	e283300c	 add         r3, r3, #0xC
  01e84	e5933000	 ldr         r3, [r3]
  01e88	e3130102	 tst         r3, #2, 2
  01e8c	0a000041	 beq         |$LN9@SendComman|
  01e90		 |$LN8@SendComman|
  01e90	e59d3078	 ldr         r3, [sp, #0x78]
  01e94	e2832040	 add         r2, r3, #0x40
  01e98	e59d3078	 ldr         r3, [sp, #0x78]
  01e9c	e283303c	 add         r3, r3, #0x3C
  01ea0	e5922000	 ldr         r2, [r2]
  01ea4	e5933000	 ldr         r3, [r3]
  01ea8	e0010392	 mul         r1, r2, r3
  01eac	e3a00004	 mov         r0, #4
  01eb0	eb000000	 bl          __rt_udiv
  01eb4	e3510000	 cmp         r1, #0
  01eb8	1a000036	 bne         |$LN9@SendComman|
  01ebc	e59d3078	 ldr         r3, [sp, #0x78]
  01ec0	e2832040	 add         r2, r3, #0x40
  01ec4	e59d3078	 ldr         r3, [sp, #0x78]
  01ec8	e283303c	 add         r3, r3, #0x3C
  01ecc	e5921000	 ldr         r1, [r2]
  01ed0	e5933000	 ldr         r3, [r3]
  01ed4	e0020391	 mul         r2, r1, r3
  01ed8	e59d3074	 ldr         r3, [sp, #0x74]
  01edc	e2833f7f	 add         r3, r3, #0x7F, 30
  01ee0	e5933000	 ldr         r3, [r3]
  01ee4	e1520003	 cmp         r2, r3
  01ee8	8a00002a	 bhi         |$LN9@SendComman|

; 1010 :         {
; 1011 :             MMC_CMD |= MMCHS_CMD_DE;

  01eec	e59d3014	 ldr         r3, [sp, #0x14]
  01ef0	e3833001	 orr         r3, r3, #1
  01ef4	e58d3014	 str         r3, [sp, #0x14]

; 1012 :             m_fDMATransfer = TRUE;

  01ef8	e59d3074	 ldr         r3, [sp, #0x74]
  01efc	e2832e11	 add         r2, r3, #0x11, 28
  01f00	e3a03001	 mov         r3, #1
  01f04	e5823000	 str         r3, [r2]

; 1013 :             // program the DMA controller
; 1014 :             EnterCriticalSection( &m_critSec );

  01f08	e59d3074	 ldr         r3, [sp, #0x74]
  01f0c	e28300b0	 add         r0, r3, #0xB0
  01f10	eb000000	 bl          EnterCriticalSection

; 1015 :             SETREG32(&m_pbRegisters->MMCHS_IE, MMCHS_IE_BRR);

  01f14	e59d3074	 ldr         r3, [sp, #0x74]
  01f18	e2833f57	 add         r3, r3, #0x57, 30
  01f1c	e5933000	 ldr         r3, [r3]
  01f20	e2833f4d	 add         r3, r3, #0x4D, 30
  01f24	e5933000	 ldr         r3, [r3]
  01f28	e3832020	 orr         r2, r3, #0x20
  01f2c	e59d3074	 ldr         r3, [sp, #0x74]
  01f30	e2833f57	 add         r3, r3, #0x57, 30
  01f34	e5933000	 ldr         r3, [r3]
  01f38	e2833f4d	 add         r3, r3, #0x4D, 30
  01f3c	e5832000	 str         r2, [r3]

; 1016 :             SETREG32(&m_pbRegisters->MMCHS_ISE, MMCHS_IE_BRR);

  01f40	e59d3074	 ldr         r3, [sp, #0x74]
  01f44	e2833f57	 add         r3, r3, #0x57, 30
  01f48	e5933000	 ldr         r3, [r3]
  01f4c	e2833f4e	 add         r3, r3, #0x4E, 30
  01f50	e5933000	 ldr         r3, [r3]
  01f54	e3832020	 orr         r2, r3, #0x20
  01f58	e59d3074	 ldr         r3, [sp, #0x74]
  01f5c	e2833f57	 add         r3, r3, #0x57, 30
  01f60	e5933000	 ldr         r3, [r3]
  01f64	e2833f4e	 add         r3, r3, #0x4E, 30
  01f68	e5832000	 str         r2, [r3]

; 1017 :             LeaveCriticalSection( &m_critSec );

  01f6c	e59d3074	 ldr         r3, [sp, #0x74]
  01f70	e28300b0	 add         r0, r3, #0xB0
  01f74	eb000000	 bl          LeaveCriticalSection

; 1018 :             SDIO_InitInputDMA( pRequest->NumBlocks,  pRequest->BlockSize);

  01f78	e59d3078	 ldr         r3, [sp, #0x78]
  01f7c	e2833040	 add         r3, r3, #0x40
  01f80	e5932000	 ldr         r2, [r3]
  01f84	e59d3078	 ldr         r3, [sp, #0x78]
  01f88	e283303c	 add         r3, r3, #0x3C
  01f8c	e5931000	 ldr         r1, [r3]
  01f90	e59d0074	 ldr         r0, [sp, #0x74]
  01f94	eb000000	 bl          |?SDIO_InitInputDMA@CSDIOControllerBase@@QAAXKK@Z|
  01f98		 |$LN9@SendComman|

; 1019 :         }
; 1020 : #endif
; 1021 :         dwRegVal = (DWORD)(pRequest->BlockSize & 0xFFFF);

  01f98	e59d3078	 ldr         r3, [sp, #0x78]
  01f9c	e2833040	 add         r3, r3, #0x40
  01fa0	e5932000	 ldr         r2, [r3]
  01fa4	e3a03cff	 mov         r3, #0xFF, 24
  01fa8	e38330ff	 orr         r3, r3, #0xFF
  01fac	e0023003	 and         r3, r2, r3
  01fb0	e58d3010	 str         r3, [sp, #0x10]

; 1022 :         dwRegVal += ((DWORD)(pRequest->NumBlocks & 0xFFFF)) << 16;

  01fb4	e59d3078	 ldr         r3, [sp, #0x78]
  01fb8	e283303c	 add         r3, r3, #0x3C
  01fbc	e5932000	 ldr         r2, [r3]
  01fc0	e3a03cff	 mov         r3, #0xFF, 24
  01fc4	e38330ff	 orr         r3, r3, #0xFF
  01fc8	e0023003	 and         r3, r2, r3
  01fcc	e1a02803	 mov         r2, r3, lsl #16
  01fd0	e59d3010	 ldr         r3, [sp, #0x10]
  01fd4	e0833002	 add         r3, r3, r2
  01fd8	e58d3010	 str         r3, [sp, #0x10]

; 1023 :         OUTREG32(&m_pbRegisters->MMCHS_BLK, dwRegVal);

  01fdc	e59d3074	 ldr         r3, [sp, #0x74]
  01fe0	e2833f57	 add         r3, r3, #0x57, 30
  01fe4	e5933000	 ldr         r3, [r3]
  01fe8	e2832f41	 add         r2, r3, #0x41, 30
  01fec	e59d3010	 ldr         r3, [sp, #0x10]
  01ff0	e5823000	 str         r3, [r2]
  01ff4	ea000075	 b           |$LN6@SendComman|
  01ff8		 |$LN10@SendComman|

; 1024 :     }
; 1025 :     else if( m_TransferClass == SD_WRITE )

  01ff8	e59d3074	 ldr         r3, [sp, #0x74]
  01ffc	e2833f76	 add         r3, r3, #0x76, 30
  02000	e5933000	 ldr         r3, [r3]
  02004	e3530001	 cmp         r3, #1
  02008	1a000070	 bne         |$LN5@SendComman|

; 1026 :     {
; 1027 :         MMC_CMD &= ~MMCHS_CMD_DDIR;

  0200c	e59d2014	 ldr         r2, [sp, #0x14]
  02010	e3e03010	 mvn         r3, #0x10
  02014	e0023003	 and         r3, r2, r3
  02018	e58d3014	 str         r3, [sp, #0x14]

; 1028 : 
; 1029 : #ifdef SDIO_DMA_WRITE_ENABLED
; 1030 :         // if we can use the DMA for transfer...
; 1031 :        if( ((( pRequest->NumBlocks > 1) && !(pRequest->SystemFlags & SD_FAST_PATH_AVAILABLE)) || 
; 1032 :        (( pRequest->NumBlocks > 0) && (pRequest->SystemFlags & SD_FAST_PATH_AVAILABLE))) &&
; 1033 :             ( TRANSFER_SIZE(pRequest) % MIN_MMC_BLOCK_SIZE == 0 ) &&
; 1034 :             ( TRANSFER_SIZE(pRequest) <= m_dwDMABufferSize ) )

  0201c	e59d3078	 ldr         r3, [sp, #0x78]
  02020	e283303c	 add         r3, r3, #0x3C
  02024	e5933000	 ldr         r3, [r3]
  02028	e3530001	 cmp         r3, #1
  0202c	9a000004	 bls         |$LN2@SendComman|
  02030	e59d3078	 ldr         r3, [sp, #0x78]
  02034	e283300c	 add         r3, r3, #0xC
  02038	e5933000	 ldr         r3, [r3]
  0203c	e3130102	 tst         r3, #2, 2
  02040	0a000009	 beq         |$LN3@SendComman|
  02044		 |$LN2@SendComman|
  02044	e59d3078	 ldr         r3, [sp, #0x78]
  02048	e283303c	 add         r3, r3, #0x3C
  0204c	e5933000	 ldr         r3, [r3]
  02050	e3530000	 cmp         r3, #0
  02054	9a000046	 bls         |$LN4@SendComman|
  02058	e59d3078	 ldr         r3, [sp, #0x78]
  0205c	e283300c	 add         r3, r3, #0xC
  02060	e5933000	 ldr         r3, [r3]
  02064	e3130102	 tst         r3, #2, 2
  02068	0a000041	 beq         |$LN4@SendComman|
  0206c		 |$LN3@SendComman|
  0206c	e59d3078	 ldr         r3, [sp, #0x78]
  02070	e2832040	 add         r2, r3, #0x40
  02074	e59d3078	 ldr         r3, [sp, #0x78]
  02078	e283303c	 add         r3, r3, #0x3C
  0207c	e5922000	 ldr         r2, [r2]
  02080	e5933000	 ldr         r3, [r3]
  02084	e0010392	 mul         r1, r2, r3
  02088	e3a00004	 mov         r0, #4
  0208c	eb000000	 bl          __rt_udiv
  02090	e3510000	 cmp         r1, #0
  02094	1a000036	 bne         |$LN4@SendComman|
  02098	e59d3078	 ldr         r3, [sp, #0x78]
  0209c	e2832040	 add         r2, r3, #0x40
  020a0	e59d3078	 ldr         r3, [sp, #0x78]
  020a4	e283303c	 add         r3, r3, #0x3C
  020a8	e5921000	 ldr         r1, [r2]
  020ac	e5933000	 ldr         r3, [r3]
  020b0	e0020391	 mul         r2, r1, r3
  020b4	e59d3074	 ldr         r3, [sp, #0x74]
  020b8	e2833f7f	 add         r3, r3, #0x7F, 30
  020bc	e5933000	 ldr         r3, [r3]
  020c0	e1520003	 cmp         r2, r3
  020c4	8a00002a	 bhi         |$LN4@SendComman|

; 1035 :         {
; 1036 :             MMC_CMD |= MMCHS_CMD_DE;

  020c8	e59d3014	 ldr         r3, [sp, #0x14]
  020cc	e3833001	 orr         r3, r3, #1
  020d0	e58d3014	 str         r3, [sp, #0x14]

; 1037 :             m_fDMATransfer = TRUE;

  020d4	e59d3074	 ldr         r3, [sp, #0x74]
  020d8	e2832e11	 add         r2, r3, #0x11, 28
  020dc	e3a03001	 mov         r3, #1
  020e0	e5823000	 str         r3, [r2]

; 1038 :             // program the DMA controller
; 1039 :             EnterCriticalSection( &m_critSec );

  020e4	e59d3074	 ldr         r3, [sp, #0x74]
  020e8	e28300b0	 add         r0, r3, #0xB0
  020ec	eb000000	 bl          EnterCriticalSection

; 1040 :             SETREG32(&m_pbRegisters->MMCHS_IE, MMCHS_IE_BWR);

  020f0	e59d3074	 ldr         r3, [sp, #0x74]
  020f4	e2833f57	 add         r3, r3, #0x57, 30
  020f8	e5933000	 ldr         r3, [r3]
  020fc	e2833f4d	 add         r3, r3, #0x4D, 30
  02100	e5933000	 ldr         r3, [r3]
  02104	e3832010	 orr         r2, r3, #0x10
  02108	e59d3074	 ldr         r3, [sp, #0x74]
  0210c	e2833f57	 add         r3, r3, #0x57, 30
  02110	e5933000	 ldr         r3, [r3]
  02114	e2833f4d	 add         r3, r3, #0x4D, 30
  02118	e5832000	 str         r2, [r3]

; 1041 :             SETREG32(&m_pbRegisters->MMCHS_ISE, MMCHS_ISE_BWR);

  0211c	e59d3074	 ldr         r3, [sp, #0x74]
  02120	e2833f57	 add         r3, r3, #0x57, 30
  02124	e5933000	 ldr         r3, [r3]
  02128	e2833f4e	 add         r3, r3, #0x4E, 30
  0212c	e5933000	 ldr         r3, [r3]
  02130	e3832010	 orr         r2, r3, #0x10
  02134	e59d3074	 ldr         r3, [sp, #0x74]
  02138	e2833f57	 add         r3, r3, #0x57, 30
  0213c	e5933000	 ldr         r3, [r3]
  02140	e2833f4e	 add         r3, r3, #0x4E, 30
  02144	e5832000	 str         r2, [r3]

; 1042 :             LeaveCriticalSection( &m_critSec );

  02148	e59d3074	 ldr         r3, [sp, #0x74]
  0214c	e28300b0	 add         r0, r3, #0xB0
  02150	eb000000	 bl          LeaveCriticalSection

; 1043 :             SDIO_InitOutputDMA( pRequest->NumBlocks,  pRequest->BlockSize );

  02154	e59d3078	 ldr         r3, [sp, #0x78]
  02158	e2833040	 add         r3, r3, #0x40
  0215c	e5932000	 ldr         r2, [r3]
  02160	e59d3078	 ldr         r3, [sp, #0x78]
  02164	e283303c	 add         r3, r3, #0x3C
  02168	e5931000	 ldr         r1, [r3]
  0216c	e59d0074	 ldr         r0, [sp, #0x74]
  02170	eb000000	 bl          |?SDIO_InitOutputDMA@CSDIOControllerBase@@QAAXKK@Z|
  02174		 |$LN4@SendComman|

; 1044 :         }
; 1045 : #endif
; 1046 :         dwRegVal = (DWORD)(pRequest->BlockSize & 0xFFFF);

  02174	e59d3078	 ldr         r3, [sp, #0x78]
  02178	e2833040	 add         r3, r3, #0x40
  0217c	e5932000	 ldr         r2, [r3]
  02180	e3a03cff	 mov         r3, #0xFF, 24
  02184	e38330ff	 orr         r3, r3, #0xFF
  02188	e0023003	 and         r3, r2, r3
  0218c	e58d3010	 str         r3, [sp, #0x10]

; 1047 :         dwRegVal += ((DWORD)(pRequest->NumBlocks & 0xFFFF)) << 16;

  02190	e59d3078	 ldr         r3, [sp, #0x78]
  02194	e283303c	 add         r3, r3, #0x3C
  02198	e5932000	 ldr         r2, [r3]
  0219c	e3a03cff	 mov         r3, #0xFF, 24
  021a0	e38330ff	 orr         r3, r3, #0xFF
  021a4	e0023003	 and         r3, r2, r3
  021a8	e1a02803	 mov         r2, r3, lsl #16
  021ac	e59d3010	 ldr         r3, [sp, #0x10]
  021b0	e0833002	 add         r3, r3, r2
  021b4	e58d3010	 str         r3, [sp, #0x10]

; 1048 :         OUTREG32(&m_pbRegisters->MMCHS_BLK, dwRegVal);

  021b8	e59d3074	 ldr         r3, [sp, #0x74]
  021bc	e2833f57	 add         r3, r3, #0x57, 30
  021c0	e5933000	 ldr         r3, [r3]
  021c4	e2832f41	 add         r2, r3, #0x41, 30
  021c8	e59d3010	 ldr         r3, [sp, #0x10]
  021cc	e5823000	 str         r3, [r2]
  021d0		 |$LN5@SendComman|
  021d0		 |$LN6@SendComman|

; 1049 :     }
; 1050 :     //check for card initialization is done.
; 1051 :     if(!m_fCardInitialized && (Cmd == SD_CMD_READ_SINGLE_BLOCK))

  021d0	e59d3074	 ldr         r3, [sp, #0x74]
  021d4	e2833f4f	 add         r3, r3, #0x4F, 30
  021d8	e5933000	 ldr         r3, [r3]
  021dc	e3530000	 cmp         r3, #0
  021e0	1a000006	 bne         |$LN1@SendComman|
  021e4	e59d301c	 ldr         r3, [sp, #0x1C]
  021e8	e3530011	 cmp         r3, #0x11
  021ec	1a000003	 bne         |$LN1@SendComman|

; 1052 :         m_fCardInitialized = TRUE;

  021f0	e59d3074	 ldr         r3, [sp, #0x74]
  021f4	e2832f4f	 add         r2, r3, #0x4F, 30
  021f8	e3a03001	 mov         r3, #1
  021fc	e5823000	 str         r3, [r2]
  02200		 |$LN1@SendComman|

; 1053 : 
; 1054 :     // Program the argument into the argument registers
; 1055 :     OUTREG32(&m_pbRegisters->MMCHS_ARG, Arg);

  02200	e59d3074	 ldr         r3, [sp, #0x74]
  02204	e2833f57	 add         r3, r3, #0x57, 30
  02208	e5933000	 ldr         r3, [r3]
  0220c	e2832f42	 add         r2, r3, #0x42, 30
  02210	e59d300c	 ldr         r3, [sp, #0xC]
  02214	e5823000	 str         r3, [r2]

; 1056 : 
; 1057 :     DEBUGMSG(SHC_SEND_ZONE, (TEXT("SendCommand() - registers:Command = 0x%x, MMCHS_ARG = 0x%x%x\r\n"), MMC_CMD, INREG32(&m_pbRegisters->MMCHS_ARG)));

  02218	e59f3070	 ldr         r3, [pc, #0x70]
  0221c	e5933440	 ldr         r3, [r3, #0x440]
  02220	e3130002	 tst         r3, #2
  02224	0a00000a	 beq         |$LN46@SendComman|
  02228	e59d3074	 ldr         r3, [sp, #0x74]
  0222c	e2833f57	 add         r3, r3, #0x57, 30
  02230	e5933000	 ldr         r3, [r3]
  02234	e2833f42	 add         r3, r3, #0x42, 30
  02238	e5932000	 ldr         r2, [r3]
  0223c	e59d1014	 ldr         r1, [sp, #0x14]
  02240	e59f0044	 ldr         r0, [pc, #0x44]
  02244	eb000000	 bl          NKDbgPrintfW
  02248	e3a03001	 mov         r3, #1
  0224c	e58d3068	 str         r3, [sp, #0x68]
  02250	ea000001	 b           |$LN47@SendComman|
  02254		 |$LN46@SendComman|
  02254	e3a03000	 mov         r3, #0
  02258	e58d3068	 str         r3, [sp, #0x68]
  0225c		 |$LN47@SendComman|

; 1058 : 
; 1059 :     // Issue the command.
; 1060 :     OUTREG32(&m_pbRegisters->MMCHS_CMD, MMC_CMD);

  0225c	e59d3074	 ldr         r3, [sp, #0x74]
  02260	e2833f57	 add         r3, r3, #0x57, 30
  02264	e5933000	 ldr         r3, [r3]
  02268	e2832f43	 add         r2, r3, #0x43, 30
  0226c	e59d3014	 ldr         r3, [sp, #0x14]
  02270	e5823000	 str         r3, [r2]

; 1061 : 
; 1062 :     return SD_API_STATUS_SUCCESS;

  02274	e3a03000	 mov         r3, #0
  02278	e58d3040	 str         r3, [sp, #0x40]

; 1063 : }

  0227c	e59d0040	 ldr         r0, [sp, #0x40]
  02280	e28dd06c	 add         sp, sp, #0x6C
  02284	e89d6000	 ldmia       sp, {sp, lr}
  02288	e12fff1e	 bx          lr
  0228c		 |$LN51@SendComman|
  0228c		 |$LN52@SendComman|
  0228c	00000000	 DCD         |??_C@_1HO@LOCLBPFC@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAs?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn@|
  02290		 |$LN53@SendComman|
  02290	00000000	 DCD         |dpCurSettings|
  02294		 |$LN54@SendComman|
  02294	00000000	 DCD         |?gwaCMD@@3PAUCMD@@A|
  02298		 |$LN55@SendComman|
  02298	00000000	 DCD         |?gwaCMD60_HS@@3UCMD@@A|
  0229c		 |$LN56@SendComman|
  0229c	00000000	 DCD         |??_C@_1FE@OEOLMLE@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?3?$AA?3?$AA?5?$AAb?$AAr?$AAa?$AAn?$AAc?$AAh?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAs?$AAw?$AAi?$AAt?$AAc?$AAh?$AA?5@|
  022a0		 |$LN57@SendComman|
  022a0	00000000	 DCD         |??_C@_1JE@FAMEDKFO@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?5?$AA?$CI?$AAC?$AAm?$AAd?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?0?$AA?5?$AAA?$AAr?$AAg?$AA?$DN?$AA0?$AAx?$AA?$CF@|
  022a4		 |$LN58@SendComman|
  022a4	00000000	 DCD         |??_C@_1KE@KBBNINAM@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?5?$AA?$CI?$AAC?$AAm?$AAd?$AA?$DN?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?0?$AA?5?$AAA?$AAr?$AAg?$AA?$DN?$AA0?$AAx?$AA?$CF@|
  022a8		 |$LN59@SendComman|
  022a8	00000000	 DCD         |??_C@_1JO@GHLNKHDB@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAm?$AAd?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAA?$AAr?$AAg?$AA?5?$AA?$DN@|
  022ac		 |$M45332|

			 ENDP  ; |?SendCommand@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z|, CSDIOControllerBase::SendCommand


  00000			 AREA	 |.pdata|, PDATA
|$T45348| DCD	|$LN5@Write_MMC_|
	DCD	0x40001103
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Write_MMC_STAT@CSDIOControllerBase@@QAAXK@Z| PROC ; CSDIOControllerBase::Write_MMC_STAT

; 340  : {

  00000		 |$LN5@Write_MMC_|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M45345|

; 341  :     EnterCriticalSection( &m_critSec );

  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e28300b0	 add         r0, r3, #0xB0
  00014	eb000000	 bl          EnterCriticalSection

; 342  :     OUTREG32(&m_pbRegisters->MMCHS_STAT, dwVal);

  00018	e59d3008	 ldr         r3, [sp, #8]
  0001c	e2833f57	 add         r3, r3, #0x57, 30
  00020	e5933000	 ldr         r3, [r3]
  00024	e2832e13	 add         r2, r3, #0x13, 28
  00028	e59d300c	 ldr         r3, [sp, #0xC]
  0002c	e5823000	 str         r3, [r2]

; 343  :     LeaveCriticalSection( &m_critSec );

  00030	e59d3008	 ldr         r3, [sp, #8]
  00034	e28300b0	 add         r0, r3, #0xB0
  00038	eb000000	 bl          LeaveCriticalSection

; 344  : }

  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M45346|

			 ENDP  ; |?Write_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|, CSDIOControllerBase::Write_MMC_STAT

	EXPORT	|??_C@_1CI@ELMHMHCH@?$AAC?$AAa?$AAr?$AAd?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?CardInterrupt@CSDIOControllerBase@@QAAXH@Z| ; CSDIOControllerBase::CardInterrupt

  00098			 AREA	 |.pdata|, PDATA
|$T45359| DCD	|$LN9@CardInterr|
	DCD	0x40002f04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@ELMHMHCH@?$AAC?$AAa?$AAr?$AAd?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "a", 0x0, "r", 0x0, "d", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  022ac			 AREA	 |.text|, CODE, ARM

  022ac		 |?CardInterrupt@CSDIOControllerBase@@QAAXH@Z| PROC ; CSDIOControllerBase::CardInterrupt

; 1070 : {

  022ac		 |$LN9@CardInterr|
  022ac	e1a0c00d	 mov         r12, sp
  022b0	e92d0003	 stmdb       sp!, {r0, r1}
  022b4	e92d5000	 stmdb       sp!, {r12, lr}
  022b8	e24dd008	 sub         sp, sp, #8
  022bc		 |$M45356|

; 1071 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("CardInterrupt(%d)\r\n"), bInsert));

  022bc	e59f30a0	 ldr         r3, [pc, #0xA0]
  022c0	e5933440	 ldr         r3, [r3, #0x440]
  022c4	e3130a02	 tst         r3, #2, 20
  022c8	0a000005	 beq         |$LN3@CardInterr|
  022cc	e59d1014	 ldr         r1, [sp, #0x14]
  022d0	e59f0088	 ldr         r0, [pc, #0x88]
  022d4	eb000000	 bl          NKDbgPrintfW
  022d8	e3a03001	 mov         r3, #1
  022dc	e58d3000	 str         r3, [sp]
  022e0	ea000001	 b           |$LN4@CardInterr|
  022e4		 |$LN3@CardInterr|
  022e4	e3a03000	 mov         r3, #0
  022e8	e58d3000	 str         r3, [sp]
  022ec		 |$LN4@CardInterr|

; 1072 : 
; 1073 :     EnterCriticalSection( &m_critSec );

  022ec	e59d3010	 ldr         r3, [sp, #0x10]
  022f0	e28300b0	 add         r0, r3, #0xB0
  022f4	eb000000	 bl          EnterCriticalSection

; 1074 :     m_CardDetectInterruptStatus |= (bInsert ? EXT_MMCHS_STAT_CD_INSERT_INTR : EXT_MMCHS_STAT_CD_REMOVE_INTR);

  022f8	e59d3014	 ldr         r3, [sp, #0x14]
  022fc	e3530000	 cmp         r3, #0
  02300	0a000002	 beq         |$LN5@CardInterr|
  02304	e3a03102	 mov         r3, #2, 2
  02308	e58d3004	 str         r3, [sp, #4]
  0230c	ea000001	 b           |$LN6@CardInterr|
  02310		 |$LN5@CardInterr|
  02310	e3a03101	 mov         r3, #1, 2
  02314	e58d3004	 str         r3, [sp, #4]
  02318		 |$LN6@CardInterr|
  02318	e59d3010	 ldr         r3, [sp, #0x10]
  0231c	e2833f7d	 add         r3, r3, #0x7D, 30
  02320	e5932000	 ldr         r2, [r3]
  02324	e59d3004	 ldr         r3, [sp, #4]
  02328	e1822003	 orr         r2, r2, r3
  0232c	e59d3010	 ldr         r3, [sp, #0x10]
  02330	e2833f7d	 add         r3, r3, #0x7D, 30
  02334	e5832000	 str         r2, [r3]

; 1075 :     LeaveCriticalSection( &m_critSec );

  02338	e59d3010	 ldr         r3, [sp, #0x10]
  0233c	e28300b0	 add         r0, r3, #0xB0
  02340	eb000000	 bl          LeaveCriticalSection

; 1076 : 
; 1077 :     SetEvent(m_hControllerISTEvent);

  02344	e59d3010	 ldr         r3, [sp, #0x10]
  02348	e2833f46	 add         r3, r3, #0x46, 30
  0234c	e5930000	 ldr         r0, [r3]
  02350	eb000000	 bl          SetEvent

; 1078 : }

  02354	e28dd008	 add         sp, sp, #8
  02358	e89d6000	 ldmia       sp, {sp, lr}
  0235c	e12fff1e	 bx          lr
  02360		 |$LN10@CardInterr|
  02360		 |$LN11@CardInterr|
  02360	00000000	 DCD         |??_C@_1CI@ELMHMHCH@?$AAC?$AAa?$AAr?$AAd?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  02364		 |$LN12@CardInterr|
  02364	00000000	 DCD         |dpCurSettings|
  02368		 |$M45357|

			 ENDP  ; |?CardInterrupt@CSDIOControllerBase@@QAAXH@Z|, CSDIOControllerBase::CardInterrupt

	EXPORT	|?HandleInsertion@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::HandleInsertion
	EXPORT	|?HandleRemoval@CSDIOControllerBase@@QAAXH@Z| ; CSDIOControllerBase::HandleRemoval
	EXPORT	|?HandleCardDetectInterrupt@CSDIOControllerBase@@QAAHK@Z| ; CSDIOControllerBase::HandleCardDetectInterrupt

  000a0			 AREA	 |.pdata|, PDATA
|$T45368| DCD	|$LN7@HandleCard|
	DCD	0x40003704
; Function compile flags: /Odtp

  02368			 AREA	 |.text|, CODE, ARM

  02368		 |?HandleCardDetectInterrupt@CSDIOControllerBase@@QAAHK@Z| PROC ; CSDIOControllerBase::HandleCardDetectInterrupt

; 1083 : {

  02368		 |$LN7@HandleCard|
  02368	e1a0c00d	 mov         r12, sp
  0236c	e92d0003	 stmdb       sp!, {r0, r1}
  02370	e92d5000	 stmdb       sp!, {r12, lr}
  02374	e24dd008	 sub         sp, sp, #8
  02378		 |$M45365|

; 1084 :     BOOL    bRetValue = FALSE;

  02378	e3a03000	 mov         r3, #0
  0237c	e58d3000	 str         r3, [sp]

; 1085 : 
; 1086 :     #ifdef ENABLE_RETAIL_OUTPUT
; 1087 :         DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("CardDetectInterrupt\r\n")));
; 1088 :     #endif
; 1089 : 		
; 1090 :     if (dwStatus & EXT_MMCHS_STAT_CD_REMOVE_INTR)

  02380	e59d3014	 ldr         r3, [sp, #0x14]
  02384	e3130101	 tst         r3, #1, 2
  02388	0a000012	 beq         |$LN2@HandleCard|

; 1091 :     {
; 1092 :         #ifdef ENABLE_RETAIL_OUTPUT
; 1093 :             RETAILMSG(1, (TEXT("CardDetectInterrupt: Card removed!\r\n")));
; 1094 :         #endif
; 1095 : 
; 1096 :         HandleRemoval(TRUE);

  0238c	e3a01001	 mov         r1, #1
  02390	e59d0010	 ldr         r0, [sp, #0x10]
  02394	eb000000	 bl          |?HandleRemoval@CSDIOControllerBase@@QAAXH@Z|

; 1097 : 
; 1098 :         EnterCriticalSection( &m_critSec );

  02398	e59d3010	 ldr         r3, [sp, #0x10]
  0239c	e28300b0	 add         r0, r3, #0xB0
  023a0	eb000000	 bl          EnterCriticalSection

; 1099 :         m_CardDetectInterruptStatus &= ~EXT_MMCHS_STAT_CD_REMOVE_INTR;

  023a4	e59d3010	 ldr         r3, [sp, #0x10]
  023a8	e2833f7d	 add         r3, r3, #0x7D, 30
  023ac	e5932000	 ldr         r2, [r3]
  023b0	e3e03101	 mvn         r3, #1, 2
  023b4	e0022003	 and         r2, r2, r3
  023b8	e59d3010	 ldr         r3, [sp, #0x10]
  023bc	e2833f7d	 add         r3, r3, #0x7D, 30
  023c0	e5832000	 str         r2, [r3]

; 1100 :         LeaveCriticalSection( &m_critSec );

  023c4	e59d3010	 ldr         r3, [sp, #0x10]
  023c8	e28300b0	 add         r0, r3, #0xB0
  023cc	eb000000	 bl          LeaveCriticalSection

; 1101 : 
; 1102 :         bRetValue = FALSE;

  023d0	e3a03000	 mov         r3, #0
  023d4	e58d3000	 str         r3, [sp]
  023d8		 |$LN2@HandleCard|

; 1103 :     }
; 1104 : 
; 1105 :     if (dwStatus & EXT_MMCHS_STAT_CD_INSERT_INTR)

  023d8	e59d3014	 ldr         r3, [sp, #0x14]
  023dc	e3130102	 tst         r3, #2, 2
  023e0	0a000011	 beq         |$LN1@HandleCard|

; 1106 :     {
; 1107 :         EnterCriticalSection( &m_critSec );

  023e4	e59d3010	 ldr         r3, [sp, #0x10]
  023e8	e28300b0	 add         r0, r3, #0xB0
  023ec	eb000000	 bl          EnterCriticalSection

; 1108 :         m_CardDetectInterruptStatus &= ~EXT_MMCHS_STAT_CD_INSERT_INTR;

  023f0	e59d3010	 ldr         r3, [sp, #0x10]
  023f4	e2833f7d	 add         r3, r3, #0x7D, 30
  023f8	e5932000	 ldr         r2, [r3]
  023fc	e3e03102	 mvn         r3, #2, 2
  02400	e0022003	 and         r2, r2, r3
  02404	e59d3010	 ldr         r3, [sp, #0x10]
  02408	e2833f7d	 add         r3, r3, #0x7D, 30
  0240c	e5832000	 str         r2, [r3]

; 1109 :         LeaveCriticalSection( &m_critSec );

  02410	e59d3010	 ldr         r3, [sp, #0x10]
  02414	e28300b0	 add         r0, r3, #0xB0
  02418	eb000000	 bl          LeaveCriticalSection

; 1110 : 
; 1111 :         #ifdef ENABLE_RETAIL_OUTPUT
; 1112 :             RETAILMSG(1, (TEXT("CardDetectInterrupt: Card inserted!\r\n")));
; 1113 :         #endif
; 1114 : 			
; 1115 :         HandleInsertion();

  0241c	e59d0010	 ldr         r0, [sp, #0x10]
  02420	eb000000	 bl          |?HandleInsertion@CSDIOControllerBase@@QAAXXZ|

; 1116 : 
; 1117 :         bRetValue = TRUE;

  02424	e3a03001	 mov         r3, #1
  02428	e58d3000	 str         r3, [sp]
  0242c		 |$LN1@HandleCard|

; 1118 :     }
; 1119 : 
; 1120 :     return bRetValue;

  0242c	e59d3000	 ldr         r3, [sp]
  02430	e58d3004	 str         r3, [sp, #4]

; 1121 : }

  02434	e59d0004	 ldr         r0, [sp, #4]
  02438	e28dd008	 add         sp, sp, #8
  0243c	e89d6000	 ldmia       sp, {sp, lr}
  02440	e12fff1e	 bx          lr
  02444		 |$M45366|

			 ENDP  ; |?HandleCardDetectInterrupt@CSDIOControllerBase@@QAAHK@Z|, CSDIOControllerBase::HandleCardDetectInterrupt

	EXPORT	|??_C@_1JC@HAEMKOLC@?$AAC?$AAa?$AAr?$AAd?$AA?5?$AAR?$AAe?$AAm?$AAo?$AAv?$AAa?$AAl?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AA?9?$AA?5?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAi?$AAn@| [ DATA ] ; `string'
	EXPORT	|?SystemClockOn@CSDIOControllerBase@@QAAXH@Z| ; CSDIOControllerBase::SystemClockOn
	EXPORT	|??_C@_1CA@LKFKMGBK@?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAR?$AAe?$AAm?$AAo?$AAv?$AAa?$AAl?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|SDHCDIndicateBusRequestComplete|
	IMPORT	|SDHCDGetAndLockCurrentRequest|

  000a8			 AREA	 |.pdata|, PDATA
|$T45377| DCD	|$LN16@HandleRemo|
	DCD	0x4000a104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JC@HAEMKOLC@?$AAC?$AAa?$AAr?$AAd?$AA?5?$AAR?$AAe?$AAm?$AAo?$AAv?$AAa?$AAl?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AA?9?$AA?5?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAi?$AAn@| DCB "C"
	DCB	0x0, "a", 0x0, "r", 0x0, "d", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "m", 0x0, "o", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, " "
	DCB	0x0, "D", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "C"
	DCB	0x0, "a", 0x0, "n", 0x0, "c", 0x0, "e", 0x0, "l", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "c", 0x0, "u", 0x0, "r"
	DCB	0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, ":"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@LKFKMGBK@?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAR?$AAe?$AAm?$AAo?$AAv?$AAa?$AAl?$AA?$AN?$AA?6?$AA?$AA@| DCB "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "R"
	DCB	0x0, "e", 0x0, "m", 0x0, "o", 0x0, "v", 0x0, "a", 0x0, "l"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  02444			 AREA	 |.text|, CODE, ARM

  02444		 |?HandleRemoval@CSDIOControllerBase@@QAAXH@Z| PROC ; CSDIOControllerBase::HandleRemoval

; 1126 : {

  02444		 |$LN16@HandleRemo|
  02444	e1a0c00d	 mov         r12, sp
  02448	e92d0003	 stmdb       sp!, {r0, r1}
  0244c	e92d5000	 stmdb       sp!, {r12, lr}
  02450	e24dd014	 sub         sp, sp, #0x14
  02454		 |$M45374|

; 1127 :     PSD_BUS_REQUEST pRequest = NULL;

  02454	e3a03000	 mov         r3, #0
  02458	e58d3000	 str         r3, [sp]

; 1128 : 
; 1129 :     m_fCardPresent = FALSE;

  0245c	e59d301c	 ldr         r3, [sp, #0x1C]
  02460	e28320f0	 add         r2, r3, #0xF0
  02464	e3a03000	 mov         r3, #0
  02468	e5823000	 str         r3, [r2]

; 1130 :     m_fMMCMode = FALSE;

  0246c	e59d301c	 ldr         r3, [sp, #0x1C]
  02470	e28320f8	 add         r2, r3, #0xF8
  02474	e3a03000	 mov         r3, #0
  02478	e5823000	 str         r3, [r2]

; 1131 : 
; 1132 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("HandleRemoval\r\n")));

  0247c	e59f323c	 ldr         r3, [pc, #0x23C]
  02480	e5933440	 ldr         r3, [r3, #0x440]
  02484	e3130a02	 tst         r3, #2, 20
  02488	0a000004	 beq         |$LN10@HandleRemo|
  0248c	e59f0230	 ldr         r0, [pc, #0x230]
  02490	eb000000	 bl          NKDbgPrintfW
  02494	e3a03001	 mov         r3, #1
  02498	e58d3004	 str         r3, [sp, #4]
  0249c	ea000001	 b           |$LN11@HandleRemo|
  024a0		 |$LN10@HandleRemo|
  024a0	e3a03000	 mov         r3, #0
  024a4	e58d3004	 str         r3, [sp, #4]
  024a8		 |$LN11@HandleRemo|

; 1133 : 
; 1134 :     TurnCardPowerOn();  // try to turn slot power on

  024a8	e59d301c	 ldr         r3, [sp, #0x1C]
  024ac	e5933000	 ldr         r3, [r3]
  024b0	e2833014	 add         r3, r3, #0x14
  024b4	e59d001c	 ldr         r0, [sp, #0x1C]
  024b8	e5933000	 ldr         r3, [r3]
  024bc	e1a0e00f	 mov         lr, pc
  024c0	e12fff13	 bx          r3

; 1135 : 
; 1136 :     IndicateSlotStateChange(DeviceEjected);

  024c4	e3a02001	 mov         r2, #1
  024c8	e3a01000	 mov         r1, #0
  024cc	e59d301c	 ldr         r3, [sp, #0x1C]
  024d0	e28330a8	 add         r3, r3, #0xA8
  024d4	e5930000	 ldr         r0, [r3]
  024d8	eb000000	 bl          SDHCDIndicateSlotStateChange

; 1137 :     SystemClockOn(FALSE);

  024dc	e3a01000	 mov         r1, #0
  024e0	e59d001c	 ldr         r0, [sp, #0x1C]
  024e4	eb000000	 bl          |?SystemClockOn@CSDIOControllerBase@@QAAXH@Z|

; 1138 : 
; 1139 :     // turn off SDIO interrupts
; 1140 :     if( m_fSDIOInterruptsEnabled )

  024e8	e59d301c	 ldr         r3, [sp, #0x1C]
  024ec	e28330f4	 add         r3, r3, #0xF4
  024f0	e5933000	 ldr         r3, [r3]
  024f4	e3530000	 cmp         r3, #0
  024f8	0a000001	 beq         |$LN7@HandleRemo|

; 1141 :         {
; 1142 :     DisableSDIOInterrupts();

  024fc	e59d001c	 ldr         r0, [sp, #0x1C]
  02500	eb000000	 bl          |?DisableSDIOInterrupts@CSDIOControllerBase@@QAAXXZ|
  02504		 |$LN7@HandleRemo|

; 1143 :         }
; 1144 : 
; 1145 :     if (fCancelRequest)

  02504	e59d3020	 ldr         r3, [sp, #0x20]
  02508	e3530000	 cmp         r3, #0
  0250c	0a000022	 beq         |$LN6@HandleRemo|

; 1146 :     {
; 1147 :         // get the current request
; 1148 :         pRequest = GetAndLockCurrentRequest();

  02510	e3a01000	 mov         r1, #0
  02514	e59d301c	 ldr         r3, [sp, #0x1C]
  02518	e28330a8	 add         r3, r3, #0xA8
  0251c	e5930000	 ldr         r0, [r3]
  02520	eb000000	 bl          SDHCDGetAndLockCurrentRequest
  02524	e58d0008	 str         r0, [sp, #8]
  02528	e59d3008	 ldr         r3, [sp, #8]
  0252c	e58d3000	 str         r3, [sp]

; 1149 : 
; 1150 :         if (pRequest != NULL)

  02530	e59d3000	 ldr         r3, [sp]
  02534	e3530000	 cmp         r3, #0
  02538	0a000017	 beq         |$LN5@HandleRemo|

; 1151 :         {
; 1152 :             DEBUGMSG(SDCARD_ZONE_WARN,
; 1153 :                 (TEXT("Card Removal Detected - Canceling current request: 0x%08X, command: %d\r\n"),
; 1154 :                 pRequest, pRequest->CommandCode));

  0253c	e59f317c	 ldr         r3, [pc, #0x17C]
  02540	e5933440	 ldr         r3, [r3, #0x440]
  02544	e3130901	 tst         r3, #1, 18
  02548	0a000009	 beq         |$LN12@HandleRemo|
  0254c	e59d3000	 ldr         r3, [sp]
  02550	e2833014	 add         r3, r3, #0x14
  02554	e5d33000	 ldrb        r3, [r3]
  02558	e1a02003	 mov         r2, r3
  0255c	e59d1000	 ldr         r1, [sp]
  02560	e59f0154	 ldr         r0, [pc, #0x154]
  02564	eb000000	 bl          NKDbgPrintfW
  02568	e3a03001	 mov         r3, #1
  0256c	e58d300c	 str         r3, [sp, #0xC]
  02570	ea000001	 b           |$LN13@HandleRemo|
  02574		 |$LN12@HandleRemo|
  02574	e3a03000	 mov         r3, #0
  02578	e58d300c	 str         r3, [sp, #0xC]
  0257c		 |$LN13@HandleRemo|

; 1155 :             DumpRequest(pRequest);

  0257c	e59d0000	 ldr         r0, [sp]
  02580	eb000000	 bl          |?DumpRequest@@YAXPAU_SD_BUS_REQUEST@@@Z|

; 1156 :             IndicateBusRequestComplete(pRequest, SD_API_STATUS_DEVICE_REMOVED);

  02584	e3a02147	 mov         r2, #0x47, 2
  02588	e59d1000	 ldr         r1, [sp]
  0258c	e59d301c	 ldr         r3, [sp, #0x1C]
  02590	e28330a8	 add         r3, r3, #0xA8
  02594	e5930000	 ldr         r0, [r3]
  02598	eb000000	 bl          SDHCDIndicateBusRequestComplete
  0259c		 |$LN5@HandleRemo|
  0259c		 |$LN6@HandleRemo|

; 1157 :         }
; 1158 :     }
; 1159 :     
; 1160 :     if(m_ActualPowerState == D4) return;

  0259c	e59d301c	 ldr         r3, [sp, #0x1C]
  025a0	e28330e0	 add         r3, r3, #0xE0
  025a4	e5933000	 ldr         r3, [r3]
  025a8	e3530004	 cmp         r3, #4
  025ac	1a000000	 bne         |$LN4@HandleRemo|
  025b0	ea00003e	 b           |$LN8@HandleRemo|
  025b4		 |$LN4@HandleRemo|

; 1161 :     SoftwareReset(SOFT_RESET_ALL);

  025b4	e3a01401	 mov         r1, #1, 8
  025b8	e59d001c	 ldr         r0, [sp, #0x1C]
  025bc	eb000000	 bl          |?SoftwareReset@CSDIOControllerBase@@QAAXK@Z|

; 1162 :     DisableSDHCInterrupts();

  025c0	e59d001c	 ldr         r0, [sp, #0x1C]
  025c4	eb000000	 bl          |?DisableSDHCInterrupts@CSDIOControllerBase@@QAAXXZ|

; 1163 : 
; 1164 :     if (m_dwSDClockMode)

  025c8	e59d301c	 ldr         r3, [sp, #0x1C]
  025cc	e2833f67	 add         r3, r3, #0x67, 30
  025d0	e5933000	 ldr         r3, [r3]
  025d4	e3530000	 cmp         r3, #0
  025d8	0a000005	 beq         |$LN3@HandleRemo|

; 1165 :     {
; 1166 :     // turn clock off and remove power from the slot
; 1167 :     OUTREG32(&m_pbRegisters->MMCHS_SYSCONFIG, MMCHS_SYSCONFIG_AUTOIDLE | MMCHS_SYSCONFIG_SIDLEMODE(SIDLE_FORCE));

  025dc	e59d301c	 ldr         r3, [sp, #0x1C]
  025e0	e2833f57	 add         r3, r3, #0x57, 30
  025e4	e5933000	 ldr         r3, [r3]
  025e8	e2832010	 add         r2, r3, #0x10
  025ec	e3a03001	 mov         r3, #1
  025f0	e5823000	 str         r3, [r2]
  025f4		 |$LN3@HandleRemo|

; 1168 :     }
; 1169 :     
; 1170 :     ResetEvent(m_hControllerISTEvent);

  025f4	e59d301c	 ldr         r3, [sp, #0x1C]
  025f8	e2833f46	 add         r3, r3, #0x46, 30
  025fc	e5930000	 ldr         r0, [r3]
  02600	eb000000	 bl          ResetEvent

; 1171 :     Sleep(100);

  02604	e3a00064	 mov         r0, #0x64
  02608	eb000000	 bl          Sleep

; 1172 : 
; 1173 :     m_fCardInitialized = FALSE;

  0260c	e59d301c	 ldr         r3, [sp, #0x1C]
  02610	e2832f4f	 add         r2, r3, #0x4F, 30
  02614	e3a03000	 mov         r3, #0
  02618	e5823000	 str         r3, [r2]

; 1174 : 
; 1175 :     CLRREG32(&m_pbRegisters->MMCHS_CON, MMCHS_CON_CLKEXTFREE);

  0261c	e59d301c	 ldr         r3, [sp, #0x1C]
  02620	e2833f57	 add         r3, r3, #0x57, 30
  02624	e5933000	 ldr         r3, [r3]
  02628	e283302c	 add         r3, r3, #0x2C
  0262c	e5932000	 ldr         r2, [r3]
  02630	e3e03801	 mvn         r3, #1, 16
  02634	e0022003	 and         r2, r2, r3
  02638	e59d301c	 ldr         r3, [sp, #0x1C]
  0263c	e2833f57	 add         r3, r3, #0x57, 30
  02640	e5933000	 ldr         r3, [r3]
  02644	e283302c	 add         r3, r3, #0x2C
  02648	e5832000	 str         r2, [r3]
  0264c		 |$LN2@HandleRemo|

; 1176 : 
; 1177 : #if 0
; 1178 :     // get and lock the current bus request
; 1179 :     while(SDHCDGetAndLockCurrentRequest(m_pHCContext, 0) != NULL)
; 1180 :     {
; 1181 :         CommandCompleteHandler();
; 1182 :     }
; 1183 : #else
; 1184 :     // get and lock the current bus request
; 1185 :     while((pRequest = SDHCDGetAndLockCurrentRequest(m_pHCContext, 0)) != NULL)

  0264c	e3a01000	 mov         r1, #0
  02650	e59d301c	 ldr         r3, [sp, #0x1C]
  02654	e28330a8	 add         r3, r3, #0xA8
  02658	e5930000	 ldr         r0, [r3]
  0265c	eb000000	 bl          SDHCDGetAndLockCurrentRequest
  02660	e58d0010	 str         r0, [sp, #0x10]
  02664	e59d3010	 ldr         r3, [sp, #0x10]
  02668	e58d3000	 str         r3, [sp]
  0266c	e59d3000	 ldr         r3, [sp]
  02670	e3530000	 cmp         r3, #0
  02674	0a000006	 beq         |$LN1@HandleRemo|

; 1186 :     {
; 1187 :         IndicateBusRequestComplete(pRequest, SD_API_STATUS_DEVICE_REMOVED);

  02678	e3a02147	 mov         r2, #0x47, 2
  0267c	e59d1000	 ldr         r1, [sp]
  02680	e59d301c	 ldr         r3, [sp, #0x1C]
  02684	e28330a8	 add         r3, r3, #0xA8
  02688	e5930000	 ldr         r0, [r3]
  0268c	eb000000	 bl          SDHCDIndicateBusRequestComplete

; 1188 :     }

  02690	eaffffed	 b           |$LN2@HandleRemo|
  02694		 |$LN1@HandleRemo|

; 1189 : #endif
; 1190 : 
; 1191 :     TurnCardPowerOff();  // try to turn slot power off

  02694	e59d301c	 ldr         r3, [sp, #0x1C]
  02698	e5933000	 ldr         r3, [r3]
  0269c	e2833018	 add         r3, r3, #0x18
  026a0	e59d001c	 ldr         r0, [sp, #0x1C]
  026a4	e5933000	 ldr         r3, [r3]
  026a8	e1a0e00f	 mov         lr, pc
  026ac	e12fff13	 bx          r3
  026b0		 |$LN8@HandleRemo|

; 1192 : }

  026b0	e28dd014	 add         sp, sp, #0x14
  026b4	e89d6000	 ldmia       sp, {sp, lr}
  026b8	e12fff1e	 bx          lr
  026bc		 |$LN17@HandleRemo|
  026bc		 |$LN18@HandleRemo|
  026bc	00000000	 DCD         |??_C@_1JC@HAEMKOLC@?$AAC?$AAa?$AAr?$AAd?$AA?5?$AAR?$AAe?$AAm?$AAo?$AAv?$AAa?$AAl?$AA?5?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AA?9?$AA?5?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAi?$AAn@|
  026c0		 |$LN19@HandleRemo|
  026c0	00000000	 DCD         |dpCurSettings|
  026c4		 |$LN20@HandleRemo|
  026c4	00000000	 DCD         |??_C@_1CA@LKFKMGBK@?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAR?$AAe?$AAm?$AAo?$AAv?$AAa?$AAl?$AA?$AN?$AA?6?$AA?$AA@|
  026c8		 |$M45375|

			 ENDP  ; |?HandleRemoval@CSDIOControllerBase@@QAAXH@Z|, CSDIOControllerBase::HandleRemoval

; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\inc\sdhc.h

  00000			 AREA	 |.pdata|, PDATA
|$T45386| DCD	|$LN5@SystemCloc|
	DCD	0x40000c03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SystemClockOn@CSDIOControllerBase@@QAAXH@Z| PROC ; CSDIOControllerBase::SystemClockOn

; 194  :     VOID SystemClockOn(BOOL bInPowerHandler) {

  00000		 |$LN5@SystemCloc|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M45383|

; 195  :         m_InternPowerState = D0;

  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e28320dc	 add         r2, r3, #0xDC
  00014	e3a03000	 mov         r3, #0
  00018	e5823000	 str         r3, [r2]

; 196  :         UpdateDevicePowerState(bInPowerHandler);

  0001c	e59d100c	 ldr         r1, [sp, #0xC]
  00020	e59d0008	 ldr         r0, [sp, #8]
  00024	eb000000	 bl          |?UpdateDevicePowerState@CSDIOControllerBase@@QAAXH@Z|

; 197  :     }

  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M45384|

			 ENDP  ; |?SystemClockOn@CSDIOControllerBase@@QAAXH@Z|, CSDIOControllerBase::SystemClockOn

	EXPORT	|??_C@_1CA@DNEINKPE@?$AA?7?$AA?5?$AAH?$AAC?$AAP?$AAa?$AAr?$AAa?$AAm?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@KFDEONKD@?$AA?7?$AA?5?$AAB?$AAl?$AAo?$AAc?$AAk?$AAS?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@PODDKJIC@?$AA?7?$AA?5?$AAN?$AAu?$AAm?$AAB?$AAl?$AAo?$AAc?$AAk?$AAs?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@MGLECOGG@?$AA?7?$AA?5?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@PIELIBDA@?$AA?7?$AA?5?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@KOBHFAMI@?$AAD?$AAu?$AAm?$AAp?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  000b0			 AREA	 |.pdata|, PDATA
|$T45407| DCD	|$LN19@DumpReques|
	DCD	0x40007104
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\sdhc\base\sdhc.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@DNEINKPE@?$AA?7?$AA?5?$AAH?$AAC?$AAP?$AAa?$AAr?$AAa?$AAm?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, " ", 0x0, "H", 0x0, "C", 0x0, "P", 0x0, "a", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@KFDEONKD@?$AA?7?$AA?5?$AAB?$AAl?$AAo?$AAc?$AAk?$AAS?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, " ", 0x0, "B", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k"
	DCB	0x0, "S", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@PODDKJIC@?$AA?7?$AA?5?$AAN?$AAu?$AAm?$AAB?$AAl?$AAo?$AAc?$AAk?$AAs?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, " ", 0x0, "N", 0x0, "u", 0x0, "m", 0x0, "B", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "k", 0x0, "s", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@MGLECOGG@?$AA?7?$AA?5?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "s", 0x0, "p", 0x0, "o"
	DCB	0x0, "n", 0x0, "s", 0x0, "e", 0x0, "T", 0x0, "y", 0x0, "p"
	DCB	0x0, "e", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@PIELIBDA@?$AA?7?$AA?5?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, " ", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@KOBHFAMI@?$AAD?$AAu?$AAm?$AAp?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "u", 0x0, "m", 0x0, "p", 0x0, "C", 0x0, "u", 0x0, "r"
	DCB	0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "R", 0x0, "e"
	DCB	0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  026c8			 AREA	 |.text|, CODE, ARM

  026c8		 |?DumpRequest@@YAXPAU_SD_BUS_REQUEST@@@Z| PROC ; DumpRequest

; 164  : {

  026c8		 |$LN19@DumpReques|
  026c8	e1a0c00d	 mov         r12, sp
  026cc	e92d0001	 stmdb       sp!, {r0}
  026d0	e92d5000	 stmdb       sp!, {r12, lr}
  026d4	e24dd01c	 sub         sp, sp, #0x1C
  026d8		 |$M45404|

; 165  :     DEBUGCHK(pRequest);

  026d8	e59d3024	 ldr         r3, [sp, #0x24]
  026dc	e3530000	 cmp         r3, #0
  026e0	0a000002	 beq         |$LN3@DumpReques|
  026e4	e3a03001	 mov         r3, #1
  026e8	e58d3000	 str         r3, [sp]
  026ec	ea000007	 b           |$LN4@DumpReques|
  026f0		 |$LN3@DumpReques|
  026f0	e3a030a5	 mov         r3, #0xA5
  026f4	e59f218c	 ldr         r2, [pc, #0x18C]
  026f8	e59f116c	 ldr         r1, [pc, #0x16C]
  026fc	e59f0180	 ldr         r0, [pc, #0x180]
  02700	eb000000	 bl          NKDbgPrintfW
  02704	e6000010	 __debugbreak_ce
  02708	e3a03000	 mov         r3, #0
  0270c	e58d3000	 str         r3, [sp]
  02710		 |$LN4@DumpReques|

; 166  : 
; 167  :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("DumpCurrentRequest: 0x%08X\r\n"), pRequest));

  02710	e59f3154	 ldr         r3, [pc, #0x154]
  02714	e5933440	 ldr         r3, [r3, #0x440]
  02718	e3130a02	 tst         r3, #2, 20
  0271c	0a000005	 beq         |$LN5@DumpReques|
  02720	e59d1024	 ldr         r1, [sp, #0x24]
  02724	e59f0154	 ldr         r0, [pc, #0x154]
  02728	eb000000	 bl          NKDbgPrintfW
  0272c	e3a03001	 mov         r3, #1
  02730	e58d3004	 str         r3, [sp, #4]
  02734	ea000001	 b           |$LN6@DumpReques|
  02738		 |$LN5@DumpReques|
  02738	e3a03000	 mov         r3, #0
  0273c	e58d3004	 str         r3, [sp, #4]
  02740		 |$LN6@DumpReques|

; 168  :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("\t Command: %d\r\n"),  pRequest->CommandCode));

  02740	e59f3124	 ldr         r3, [pc, #0x124]
  02744	e5933440	 ldr         r3, [r3, #0x440]
  02748	e3130a02	 tst         r3, #2, 20
  0274c	0a000008	 beq         |$LN7@DumpReques|
  02750	e59d3024	 ldr         r3, [sp, #0x24]
  02754	e2833014	 add         r3, r3, #0x14
  02758	e5d33000	 ldrb        r3, [r3]
  0275c	e1a01003	 mov         r1, r3
  02760	e59f0114	 ldr         r0, [pc, #0x114]
  02764	eb000000	 bl          NKDbgPrintfW
  02768	e3a03001	 mov         r3, #1
  0276c	e58d3008	 str         r3, [sp, #8]
  02770	ea000001	 b           |$LN8@DumpReques|
  02774		 |$LN7@DumpReques|
  02774	e3a03000	 mov         r3, #0
  02778	e58d3008	 str         r3, [sp, #8]
  0277c		 |$LN8@DumpReques|

; 169  :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("\t ResponseType: %d\r\n"),  pRequest->CommandResponse.ResponseType));

  0277c	e59f30e8	 ldr         r3, [pc, #0xE8]
  02780	e5933440	 ldr         r3, [r3, #0x440]
  02784	e3130a02	 tst         r3, #2, 20
  02788	0a000007	 beq         |$LN9@DumpReques|
  0278c	e59d3024	 ldr         r3, [sp, #0x24]
  02790	e283301c	 add         r3, r3, #0x1C
  02794	e5931000	 ldr         r1, [r3]
  02798	e59f00d8	 ldr         r0, [pc, #0xD8]
  0279c	eb000000	 bl          NKDbgPrintfW
  027a0	e3a03001	 mov         r3, #1
  027a4	e58d300c	 str         r3, [sp, #0xC]
  027a8	ea000001	 b           |$LN10@DumpReques|
  027ac		 |$LN9@DumpReques|
  027ac	e3a03000	 mov         r3, #0
  027b0	e58d300c	 str         r3, [sp, #0xC]
  027b4		 |$LN10@DumpReques|

; 170  :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("\t NumBlocks: %d\r\n"),  pRequest->NumBlocks));

  027b4	e59f30b0	 ldr         r3, [pc, #0xB0]
  027b8	e5933440	 ldr         r3, [r3, #0x440]
  027bc	e3130a02	 tst         r3, #2, 20
  027c0	0a000007	 beq         |$LN11@DumpReques|
  027c4	e59d3024	 ldr         r3, [sp, #0x24]
  027c8	e283303c	 add         r3, r3, #0x3C
  027cc	e5931000	 ldr         r1, [r3]
  027d0	e59f009c	 ldr         r0, [pc, #0x9C]
  027d4	eb000000	 bl          NKDbgPrintfW
  027d8	e3a03001	 mov         r3, #1
  027dc	e58d3010	 str         r3, [sp, #0x10]
  027e0	ea000001	 b           |$LN12@DumpReques|
  027e4		 |$LN11@DumpReques|
  027e4	e3a03000	 mov         r3, #0
  027e8	e58d3010	 str         r3, [sp, #0x10]
  027ec		 |$LN12@DumpReques|

; 171  :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("\t BlockSize: %d\r\n"),  pRequest->BlockSize));

  027ec	e59f3078	 ldr         r3, [pc, #0x78]
  027f0	e5933440	 ldr         r3, [r3, #0x440]
  027f4	e3130a02	 tst         r3, #2, 20
  027f8	0a000007	 beq         |$LN13@DumpReques|
  027fc	e59d3024	 ldr         r3, [sp, #0x24]
  02800	e2833040	 add         r3, r3, #0x40
  02804	e5931000	 ldr         r1, [r3]
  02808	e59f0060	 ldr         r0, [pc, #0x60]
  0280c	eb000000	 bl          NKDbgPrintfW
  02810	e3a03001	 mov         r3, #1
  02814	e58d3014	 str         r3, [sp, #0x14]
  02818	ea000001	 b           |$LN14@DumpReques|
  0281c		 |$LN13@DumpReques|
  0281c	e3a03000	 mov         r3, #0
  02820	e58d3014	 str         r3, [sp, #0x14]
  02824		 |$LN14@DumpReques|

; 172  :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("\t HCParam: %d\r\n"),    pRequest->HCParam));

  02824	e59f3040	 ldr         r3, [pc, #0x40]
  02828	e5933440	 ldr         r3, [r3, #0x440]
  0282c	e3130a02	 tst         r3, #2, 20
  02830	0a000007	 beq         |$LN15@DumpReques|
  02834	e59d3024	 ldr         r3, [sp, #0x24]
  02838	e2833044	 add         r3, r3, #0x44
  0283c	e5931000	 ldr         r1, [r3]
  02840	e59f0020	 ldr         r0, [pc, #0x20]
  02844	eb000000	 bl          NKDbgPrintfW
  02848	e3a03001	 mov         r3, #1
  0284c	e58d3018	 str         r3, [sp, #0x18]
  02850	ea000001	 b           |$LN16@DumpReques|
  02854		 |$LN15@DumpReques|
  02854	e3a03000	 mov         r3, #0
  02858	e58d3018	 str         r3, [sp, #0x18]
  0285c		 |$LN16@DumpReques|

; 173  : 
; 174  : }

  0285c	e28dd01c	 add         sp, sp, #0x1C
  02860	e89d6000	 ldmia       sp, {sp, lr}
  02864	e12fff1e	 bx          lr
  02868		 |$LN20@DumpReques|
  02868		 |$LN21@DumpReques|
  02868	00000000	 DCD         |??_C@_1CA@DNEINKPE@?$AA?7?$AA?5?$AAH?$AAC?$AAP?$AAa?$AAr?$AAa?$AAm?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0286c		 |$LN22@DumpReques|
  0286c	00000000	 DCD         |dpCurSettings|
  02870		 |$LN23@DumpReques|
  02870	00000000	 DCD         |??_C@_1CE@KFDEONKD@?$AA?7?$AA?5?$AAB?$AAl?$AAo?$AAc?$AAk?$AAS?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  02874		 |$LN24@DumpReques|
  02874	00000000	 DCD         |??_C@_1CE@PODDKJIC@?$AA?7?$AA?5?$AAN?$AAu?$AAm?$AAB?$AAl?$AAo?$AAc?$AAk?$AAs?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  02878		 |$LN25@DumpReques|
  02878	00000000	 DCD         |??_C@_1CK@MGLECOGG@?$AA?7?$AA?5?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0287c		 |$LN26@DumpReques|
  0287c	00000000	 DCD         |??_C@_1CA@PIELIBDA@?$AA?7?$AA?5?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  02880		 |$LN27@DumpReques|
  02880	00000000	 DCD         |??_C@_1DK@KOBHFAMI@?$AAD?$AAu?$AAm?$AAp?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  02884		 |$LN28@DumpReques|
  02884	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  02888		 |$LN29@DumpReques|
  02888	00000000	 DCD         |??_C@_1KA@CLLCPJCJ@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  0288c		 |$M45405|

			 ENDP  ; |?DumpRequest@@YAXPAU_SD_BUS_REQUEST@@@Z|, DumpRequest

	EXPORT	|??_C@_1CE@KDINBGED@?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAI?$AAn?$AAs?$AAe?$AAr?$AAt?$AAi?$AAo?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  000b8			 AREA	 |.pdata|, PDATA
|$T45424| DCD	|$LN10@HandleInse|
	DCD	0x40006604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@KDINBGED@?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAI?$AAn?$AAs?$AAe?$AAr?$AAt?$AAi?$AAo?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "I"
	DCB	0x0, "n", 0x0, "s", 0x0, "e", 0x0, "r", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  0288c			 AREA	 |.text|, CODE, ARM

  0288c		 |?HandleInsertion@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::HandleInsertion

; 1197 : {

  0288c		 |$LN10@HandleInse|
  0288c	e1a0c00d	 mov         r12, sp
  02890	e92d0001	 stmdb       sp!, {r0}
  02894	e92d5000	 stmdb       sp!, {r12, lr}
  02898	e24dd00c	 sub         sp, sp, #0xC
  0289c		 |$M45421|

; 1198 :     DWORD dwClockRate = SD_DEFAULT_CARD_ID_CLOCK_RATE;

  0289c	e3a03b61	 mov         r3, #0x61, 22
  028a0	e3833e2a	 orr         r3, r3, #0x2A, 28
  028a4	e58d3000	 str         r3, [sp]

; 1199 : 
; 1200 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("HandleInsertion\r\n")));

  028a8	e59f3170	 ldr         r3, [pc, #0x170]
  028ac	e5933440	 ldr         r3, [r3, #0x440]
  028b0	e3130a02	 tst         r3, #2, 20
  028b4	0a000004	 beq         |$LN6@HandleInse|
  028b8	e59f015c	 ldr         r0, [pc, #0x15C]
  028bc	eb000000	 bl          NKDbgPrintfW
  028c0	e3a03001	 mov         r3, #1
  028c4	e58d3008	 str         r3, [sp, #8]
  028c8	ea000001	 b           |$LN7@HandleInse|
  028cc		 |$LN6@HandleInse|
  028cc	e3a03000	 mov         r3, #0
  028d0	e58d3008	 str         r3, [sp, #8]
  028d4		 |$LN7@HandleInse|

; 1201 : 
; 1202 :     m_fCardPresent = TRUE;

  028d4	e59d3014	 ldr         r3, [sp, #0x14]
  028d8	e28320f0	 add         r2, r3, #0xF0
  028dc	e3a03001	 mov         r3, #1
  028e0	e5823000	 str         r3, [r2]

; 1203 :     m_dwSDIOCard = 0;

  028e4	e59d3014	 ldr         r3, [sp, #0x14]
  028e8	e2832f5e	 add         r2, r3, #0x5E, 30
  028ec	e3a03000	 mov         r3, #0
  028f0	e5823000	 str         r3, [r2]

; 1204 : 
; 1205 :     // turn power to the card on
; 1206 :     TurnCardPowerOn();

  028f4	e59d3014	 ldr         r3, [sp, #0x14]
  028f8	e5933000	 ldr         r3, [r3]
  028fc	e2833014	 add         r3, r3, #0x14
  02900	e59d0014	 ldr         r0, [sp, #0x14]
  02904	e5933000	 ldr         r3, [r3]
  02908	e1a0e00f	 mov         lr, pc
  0290c	e12fff13	 bx          r3

; 1207 : 
; 1208 :     SoftwareReset(SOFT_RESET_ALL);

  02910	e3a01401	 mov         r1, #1, 8
  02914	e59d0014	 ldr         r0, [sp, #0x14]
  02918	eb000000	 bl          |?SoftwareReset@CSDIOControllerBase@@QAAXK@Z|

; 1209 : 
; 1210 :     // Check for debounce stable
; 1211 :     DWORD dwTimeout = 5000;

  0291c	e3a03c13	 mov         r3, #0x13, 24
  02920	e3833088	 orr         r3, r3, #0x88
  02924	e58d3004	 str         r3, [sp, #4]
  02928		 |$LN3@HandleInse|

; 1212 :     while(((INREG32(&m_pbRegisters->MMCHS_PSTATE) & 0x00020000)!= 0x00020000) && (dwTimeout>0))

  02928	e59d3014	 ldr         r3, [sp, #0x14]
  0292c	e2833f57	 add         r3, r3, #0x57, 30
  02930	e5933000	 ldr         r3, [r3]
  02934	e2833f49	 add         r3, r3, #0x49, 30
  02938	e5933000	 ldr         r3, [r3]
  0293c	e2033802	 and         r3, r3, #2, 16
  02940	e3530802	 cmp         r3, #2, 16
  02944	0a000006	 beq         |$LN2@HandleInse|
  02948	e59d3004	 ldr         r3, [sp, #4]
  0294c	e3530000	 cmp         r3, #0
  02950	9a000003	 bls         |$LN2@HandleInse|

; 1213 :     {
; 1214 :         dwTimeout--;

  02954	e59d3004	 ldr         r3, [sp, #4]
  02958	e2433001	 sub         r3, r3, #1
  0295c	e58d3004	 str         r3, [sp, #4]

; 1215 :     }

  02960	eafffff0	 b           |$LN3@HandleInse|
  02964		 |$LN2@HandleInse|

; 1216 : 
; 1217 :     OUTREG32(&m_pbRegisters->MMCHS_CON, 0x01 << 7); // CDP

  02964	e59d3014	 ldr         r3, [sp, #0x14]
  02968	e2833f57	 add         r3, r3, #0x57, 30
  0296c	e5933000	 ldr         r3, [r3]
  02970	e283202c	 add         r2, r3, #0x2C
  02974	e3a03080	 mov         r3, #0x80
  02978	e5823000	 str         r3, [r2]

; 1218 : 
; 1219 :     SetSDVSVoltage();

  0297c	e59d0014	 ldr         r0, [sp, #0x14]
  02980	eb000000	 bl          |?SetSDVSVoltage@CSDIOControllerBase@@QAAXXZ|

; 1220 : 
; 1221 :     SetClockRate(&dwClockRate);

  02984	e28d1000	 add         r1, sp, #0
  02988	e59d0014	 ldr         r0, [sp, #0x14]
  0298c	eb000000	 bl          |?SetClockRate@CSDIOControllerBase@@QAAXPAK@Z|

; 1222 :     if (m_LowVoltageSlot && m_dwSlot == MMCSLOT_1 && m_dwCPURev == CPU_FAMILY_35XX_REVISION_ES_2_1)

  02990	e59d3014	 ldr         r3, [sp, #0x14]
  02994	e2833f63	 add         r3, r3, #0x63, 30
  02998	e5933000	 ldr         r3, [r3]
  0299c	e3530000	 cmp         r3, #0
  029a0	0a00000b	 beq         |$LN1@HandleInse|
  029a4	e59d3014	 ldr         r3, [sp, #0x14]
  029a8	e2833e17	 add         r3, r3, #0x17, 28
  029ac	e5933000	 ldr         r3, [r3]
  029b0	e3530001	 cmp         r3, #1
  029b4	1a000006	 bne         |$LN1@HandleInse|
  029b8	e59d3014	 ldr         r3, [sp, #0x14]
  029bc	e2833f5f	 add         r3, r3, #0x5F, 30
  029c0	e5933000	 ldr         r3, [r3]
  029c4	e3530002	 cmp         r3, #2
  029c8	1a000001	 bne         |$LN1@HandleInse|

; 1223 :     {
; 1224 :         SendInitSequence();

  029cc	e59d0014	 ldr         r0, [sp, #0x14]
  029d0	eb000000	 bl          |?SendInitSequence@CSDIOControllerBase@@QAAXXZ|
  029d4		 |$LN1@HandleInse|

; 1225 :     }
; 1226 :     EnableSDHCInterrupts();

  029d4	e59d0014	 ldr         r0, [sp, #0x14]
  029d8	eb000000	 bl          |?EnableSDHCInterrupts@CSDIOControllerBase@@QAAXXZ|

; 1227 : 
; 1228 :     // indicate device arrival
; 1229 :     IndicateSlotStateChange(DeviceInserted);

  029dc	e3a02002	 mov         r2, #2
  029e0	e3a01000	 mov         r1, #0
  029e4	e59d3014	 ldr         r3, [sp, #0x14]
  029e8	e28330a8	 add         r3, r3, #0xA8
  029ec	e5930000	 ldr         r0, [r3]
  029f0	eb000000	 bl          SDHCDIndicateSlotStateChange

; 1230 : 
; 1231 :     TurnCardPowerOff();

  029f4	e59d3014	 ldr         r3, [sp, #0x14]
  029f8	e5933000	 ldr         r3, [r3]
  029fc	e2833018	 add         r3, r3, #0x18
  02a00	e59d0014	 ldr         r0, [sp, #0x14]
  02a04	e5933000	 ldr         r3, [r3]
  02a08	e1a0e00f	 mov         lr, pc
  02a0c	e12fff13	 bx          r3

; 1232 : }

  02a10	e28dd00c	 add         sp, sp, #0xC
  02a14	e89d6000	 ldmia       sp, {sp, lr}
  02a18	e12fff1e	 bx          lr
  02a1c		 |$LN11@HandleInse|
  02a1c		 |$LN12@HandleInse|
  02a1c	00000000	 DCD         |??_C@_1CE@KDINBGED@?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAI?$AAn?$AAs?$AAe?$AAr?$AAt?$AAi?$AAo?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  02a20		 |$LN13@HandleInse|
  02a20	00000000	 DCD         |dpCurSettings|
  02a24		 |$M45422|

			 ENDP  ; |?HandleInsertion@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::HandleInsertion

	EXPORT	|??1CSDIOControllerBase@@QAA@XZ|	; CSDIOControllerBase::~CSDIOControllerBase
	IMPORT	|DeleteCriticalSection|

  000c0			 AREA	 |.pdata|, PDATA
|$T45432| DCD	|$LN5@CSDIOContr@2|
	DCD	0x40000f03
; Function compile flags: /Odtp

  02a24			 AREA	 |.text|, CODE, ARM

  02a24		 |??1CSDIOControllerBase@@QAA@XZ| PROC	; CSDIOControllerBase::~CSDIOControllerBase

; 1236 : {

  02a24		 |$LN5@CSDIOContr@2|
  02a24	e1a0c00d	 mov         r12, sp
  02a28	e92d0001	 stmdb       sp!, {r0}
  02a2c	e92d5000	 stmdb       sp!, {r12, lr}
  02a30		 |$M45429|
  02a30	e59f2024	 ldr         r2, [pc, #0x24]
  02a34	e59d3008	 ldr         r3, [sp, #8]
  02a38	e5832000	 str         r2, [r3]

; 1237 :     DeleteCriticalSection( &m_critSec );

  02a3c	e59d3008	 ldr         r3, [sp, #8]
  02a40	e28300b0	 add         r0, r3, #0xB0
  02a44	eb000000	 bl          DeleteCriticalSection

; 1238 :     DeleteCriticalSection( &m_powerCS );

  02a48	e59d3008	 ldr         r3, [sp, #8]
  02a4c	e28300c4	 add         r0, r3, #0xC4
  02a50	eb000000	 bl          DeleteCriticalSection

; 1239 : }

  02a54	e89d6000	 ldmia       sp, {sp, lr}
  02a58	e12fff1e	 bx          lr
  02a5c		 |$LN6@CSDIOContr@2|
  02a5c		 |$LN7@CSDIOContr@2|
  02a5c	00000000	 DCD         |??_7CSDIOControllerBase@@6B@|
  02a60		 |$M45430|

			 ENDP  ; |??1CSDIOControllerBase@@QAA@XZ|, CSDIOControllerBase::~CSDIOControllerBase

	EXPORT	|??1CReg@@QAA@XZ|			; CReg::~CReg
	EXPORT	|??_C@_1BK@NBDOGJEG@?$AAS?$AAD?$AAH?$AAC?$AA?5?$AA?9?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?FreeHostContext@CSDIOControllerBase@@QAAXHH@Z| ; CSDIOControllerBase::FreeHostContext
	EXPORT	|?SDHCCardDetectIstThread@CSDIOControllerBase@@SAKPAX@Z| ; CSDIOControllerBase::SDHCCardDetectIstThread
	EXPORT	|??_C@_1GG@KKOKFLBP@?$AAS?$AAD?$AAH?$AAC?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAh?$AAo?$AAs?$AAt?$AA?5?$AAc?$AAo?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@PIFNHAEP@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAc?$AAo?$AAn?$AAf?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HK@NAJMOFNG@?$AAS?$AAD?$AAH?$AAC?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@HPCKCMKC@?$AAS?$AAD?$AAH?$AAC?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAo?$AAp?$AAe?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@JCPNFEIG@?$AAS?$AAD?$AAH?$AAC?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAi?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JA@BHKFNOIC@?$AAS?$AAD?$AAH?$AAC?$AA?5?$AAh?$AAo?$AAs?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JO@HLNGLJCK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@EMFJIEOJ@?$AAS?$AAD?$AAH?$AAC?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@POCCLIOD@?$AAS?$AAD?$AAH?$AAC?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAo?$AAb?$AAt?$AAa?$AAi?$AAn?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@PNOEBOJA@?$AAS?$AAD?$AAH?$AAC?$AA?3?$AA?5?$AAC?$AAP?$AAU?$AA?5?$AAr?$AAe?$AAv?$AAi?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@MBLOOMKA@?$AAS?$AAD?$AAH?$AAC?$AA?5?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAR?$AAe?$AAg?$AAP?$AAa?$AAt?$AAh?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@ICKPAAKC@?$AAS?$AAD?$AAH?$AAC?$AA?5?$AA?$CL?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??0CReg@@QAA@XZ|			; CReg::CReg
	EXPORT	|?Init@CSDIOControllerBase@@QAAHPBG@Z|	; CSDIOControllerBase::Init
	IMPORT	|CreateThread|
	IMPORT	|SDHCDRegisterHostController|
	IMPORT	|SocSdhcDevconf|
	IMPORT	|MmMapIoSpace|
	IMPORT	|GetAddressByDevice|
	IMPORT	|GPIOOpen|
	IMPORT	|BSPGetSDHCCardDetect|
	IMPORT	|RequestDevicePads|
	IMPORT	|SOCGetSDHCDeviceBySlot|
	IMPORT	|GetDeviceRegistryParams|
	IMPORT	|SDHCDAllocateContext|
	IMPORT	|CreateBusAccessHandle|
	IMPORT	|KernelIoControl|
	IMPORT	|CalibrateStallCounter|

  000c8			 AREA	 |.pdata|, PDATA
|$T45479| DCD	|$LN61@Init|
	DCD	0x4001fc04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@NBDOGJEG@?$AAS?$AAD?$AAH?$AAC?$AA?5?$AA?9?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, " ", 0x0, "-", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@KKOKFLBP@?$AAS?$AAD?$AAH?$AAC?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAh?$AAo?$AAs?$AAt?$AA?5?$AAc?$AAo?$AAn@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "h"
	DCB	0x0, "o", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "0"
	DCB	0x0, "x", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@PIFNHAEP@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAc?$AAo?$AAn?$AAf?$AAi@| DCB "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, "H", 0x0, "a", 0x0, "r"
	DCB	0x0, "d", 0x0, "w", 0x0, "a", 0x0, "r", 0x0, "e", 0x0, ":"
	DCB	0x0, ":", 0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "f"
	DCB	0x0, "i", 0x0, "g", 0x0, "u", 0x0, "r", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, " ", 0x0, "h", 0x0, "a", 0x0, "r", 0x0, "d", 0x0, "w"
	DCB	0x0, "a", 0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@NAJMOFNG@?$AAS?$AAD?$AAH?$AAC?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, ":", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "r"
	DCB	0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "a", 0x0, "l"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "S", 0x0, "D", 0x0, "H"
	DCB	0x0, "C", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@HPCKCMKC@?$AAS?$AAD?$AAH?$AAC?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAo?$AAp?$AAe?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAt@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, ":", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "r"
	DCB	0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "o", 0x0, "p"
	DCB	0x0, "e", 0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "t", 0x0, "h", 0x0, "e", 0x0, " ", 0x0, "G", 0x0, "P"
	DCB	0x0, "I", 0x0, "O", 0x0, " ", 0x0, "d", 0x0, "r", 0x0, "i"
	DCB	0x0, "v", 0x0, "e", 0x0, "r", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@JCPNFEIG@?$AAS?$AAD?$AAH?$AAC?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAi?$AAn@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, ":", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "r"
	DCB	0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "d"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ":", 0x0, " "
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JA@BHKFNOIC@?$AAS?$AAD?$AAH?$AAC?$AA?5?$AAh?$AAo?$AAs?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, " ", 0x0, "h", 0x0, "o"
	DCB	0x0, "s", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, ":", 0x0, " ", 0x0, "m", 0x0, "_", 0x0, "f", 0x0, "a"
	DCB	0x0, "s", 0x0, "t", 0x0, "P", 0x0, "a", 0x0, "t", 0x0, "h"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, ":", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "m", 0x0, "_", 0x0, "f", 0x0, "a"
	DCB	0x0, "s", 0x0, "t", 0x0, "P", 0x0, "a", 0x0, "t", 0x0, "h"
	DCB	0x0, "S", 0x0, "D", 0x0, "M", 0x0, "E", 0x0, "M", 0x0, ":"
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JO@HLNGLJCK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "C", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s"
	DCB	0x0, "e", 0x0, ":", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, " ", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, " ", 0x0, "d", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "p"
	DCB	0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@EMFJIEOJ@?$AAS?$AAD?$AAH?$AAC?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@POCCLIOD@?$AAS?$AAD?$AAH?$AAC?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAo?$AAb?$AAt?$AAa?$AAi?$AAn?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "o", 0x0, "b", 0x0, "t"
	DCB	0x0, "a", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "p", 0x0, "a"
	DCB	0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "s", 0x0, " ", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, "l", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@PNOEBOJA@?$AAS?$AAD?$AAH?$AAC?$AA?3?$AA?5?$AAC?$AAP?$AAU?$AA?5?$AAr?$AAe?$AAv?$AAi?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "P", 0x0, "U", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "s", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@MBLOOMKA@?$AAS?$AAD?$AAH?$AAC?$AA?5?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAR?$AAe?$AAg?$AAP?$AAa?$AAt?$AAh?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, " ", 0x0, "A", 0x0, "c"
	DCB	0x0, "t", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, " ", 0x0, "R"
	DCB	0x0, "e", 0x0, "g", 0x0, "P", 0x0, "a", 0x0, "t", 0x0, "h"
	DCB	0x0, ":", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@ICKPAAKC@?$AAS?$AAD?$AAH?$AAC?$AA?5?$AA?$CL?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, " ", 0x0, "+", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  02a60			 AREA	 |.text|, CODE, ARM

  02a60		 |?Init@CSDIOControllerBase@@QAAHPBG@Z| PROC ; CSDIOControllerBase::Init

; 1243 : {

  02a60		 |$LN61@Init|
  02a60	e1a0c00d	 mov         r12, sp
  02a64	e92d0003	 stmdb       sp!, {r0, r1}
  02a68	e92d5000	 stmdb       sp!, {r12, lr}
  02a6c	e24dd0bc	 sub         sp, sp, #0xBC
  02a70		 |$M45476|

; 1244 :     SD_API_STATUS      status;              // SD status
; 1245 :     CReg               regDevice;           // encapsulated device key

  02a70	e28d0014	 add         r0, sp, #0x14
  02a74	eb000000	 bl          |??0CReg@@QAA@XZ|
  02a78	e58d0040	 str         r0, [sp, #0x40]

; 1246 :     DWORD              dwRet = 0;           // return value

  02a7c	e3a03000	 mov         r3, #0
  02a80	e58d3008	 str         r3, [sp, #8]

; 1247 : 
; 1248 :     PHYSICAL_ADDRESS PortAddress;
; 1249 : 
; 1250 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"SDHC +Init\r\n"));

  02a84	e59f377c	 ldr         r3, [pc, #0x77C]
  02a88	e5933440	 ldr         r3, [r3, #0x440]
  02a8c	e3130a02	 tst         r3, #2, 20
  02a90	0a000004	 beq         |$LN25@Init|
  02a94	e59f07b0	 ldr         r0, [pc, #0x7B0]
  02a98	eb000000	 bl          NKDbgPrintfW
  02a9c	e3a03001	 mov         r3, #1
  02aa0	e58d3044	 str         r3, [sp, #0x44]
  02aa4	ea000001	 b           |$LN26@Init|
  02aa8		 |$LN25@Init|
  02aa8	e3a03000	 mov         r3, #0
  02aac	e58d3044	 str         r3, [sp, #0x44]
  02ab0		 |$LN26@Init|

; 1251 :     DEBUGMSG(SDCARD_ZONE_INIT, (L"SDHC Active RegPath: %s \r\n",pszActiveKey));

  02ab0	e59f3750	 ldr         r3, [pc, #0x750]
  02ab4	e5933440	 ldr         r3, [r3, #0x440]
  02ab8	e3130a02	 tst         r3, #2, 20
  02abc	0a000005	 beq         |$LN27@Init|
  02ac0	e59d10c8	 ldr         r1, [sp, #0xC8]
  02ac4	e59f077c	 ldr         r0, [pc, #0x77C]
  02ac8	eb000000	 bl          NKDbgPrintfW
  02acc	e3a03001	 mov         r3, #1
  02ad0	e58d3048	 str         r3, [sp, #0x48]
  02ad4	ea000001	 b           |$LN28@Init|
  02ad8		 |$LN27@Init|
  02ad8	e3a03000	 mov         r3, #0
  02adc	e58d3048	 str         r3, [sp, #0x48]
  02ae0		 |$LN28@Init|

; 1252 : 
; 1253 :     CalibrateStallCounter();

  02ae0	eb000000	 bl          CalibrateStallCounter

; 1254 : 
; 1255 :     m_dwCPURev = (DWORD)CPU_REVISION_UNKNOWN;

  02ae4	e59d30c4	 ldr         r3, [sp, #0xC4]
  02ae8	e2832f5f	 add         r2, r3, #0x5F, 30
  02aec	e3e03000	 mvn         r3, #0
  02af0	e5823000	 str         r3, [r2]

; 1256 :     KernelIoControl(IOCTL_HAL_GET_CPUREVISION, NULL, 0, &m_dwCPURev, sizeof(m_dwCPURev), NULL);

  02af4	e3a03000	 mov         r3, #0
  02af8	e58d3004	 str         r3, [sp, #4]
  02afc	e3a03004	 mov         r3, #4
  02b00	e58d3000	 str         r3, [sp]
  02b04	e59d30c4	 ldr         r3, [sp, #0xC4]
  02b08	e2833f5f	 add         r3, r3, #0x5F, 30
  02b0c	e3a02000	 mov         r2, #0
  02b10	e3a01000	 mov         r1, #0
  02b14	e59f0728	 ldr         r0, [pc, #0x728]
  02b18	eb000000	 bl          KernelIoControl

; 1257 :     RETAILMSG(1, (L"SDHC: CPU revision 0x%x\r\n", m_dwCPURev));

  02b1c	e59d30c4	 ldr         r3, [sp, #0xC4]
  02b20	e2833f5f	 add         r3, r3, #0x5F, 30
  02b24	e5931000	 ldr         r1, [r3]
  02b28	e59f0710	 ldr         r0, [pc, #0x710]
  02b2c	eb000000	 bl          NKDbgPrintfW
  02b30	e3a03001	 mov         r3, #1
  02b34	e58d304c	 str         r3, [sp, #0x4C]
  02b38	ea000001	 b           |$LN30@Init|
  02b3c	e3a03000	 mov         r3, #0
  02b40	e58d304c	 str         r3, [sp, #0x4C]
  02b44		 |$LN30@Init|

; 1258 : 
; 1259 :     // open the parent bus driver handle
; 1260 :     m_hParentBus = CreateBusAccessHandle(pszActiveKey);

  02b44	e59d00c8	 ldr         r0, [sp, #0xC8]
  02b48	eb000000	 bl          CreateBusAccessHandle
  02b4c	e58d0050	 str         r0, [sp, #0x50]
  02b50	e59d30c4	 ldr         r3, [sp, #0xC4]
  02b54	e28320ac	 add         r2, r3, #0xAC
  02b58	e59d3050	 ldr         r3, [sp, #0x50]
  02b5c	e5823000	 str         r3, [r2]

; 1261 :     if ( m_hParentBus == NULL )

  02b60	e59d30c4	 ldr         r3, [sp, #0xC4]
  02b64	e28330ac	 add         r3, r3, #0xAC
  02b68	e5933000	 ldr         r3, [r3]
  02b6c	e3530000	 cmp         r3, #0
  02b70	1a00000b	 bne         |$LN22@Init|

; 1262 :     {
; 1263 :         DEBUGMSG(SDCARD_ZONE_ERROR, 
; 1264 :             (L"SDHC: Failed to obtain parent bus handle\r\n")
; 1265 :             );

  02b74	e59f368c	 ldr         r3, [pc, #0x68C]
  02b78	e5933440	 ldr         r3, [r3, #0x440]
  02b7c	e3130902	 tst         r3, #2, 18
  02b80	0a000004	 beq         |$LN31@Init|
  02b84	e59f06b0	 ldr         r0, [pc, #0x6B0]
  02b88	eb000000	 bl          NKDbgPrintfW
  02b8c	e3a03001	 mov         r3, #1
  02b90	e58d3054	 str         r3, [sp, #0x54]
  02b94	ea000001	 b           |$LN32@Init|
  02b98		 |$LN31@Init|
  02b98	e3a03000	 mov         r3, #0
  02b9c	e58d3054	 str         r3, [sp, #0x54]
  02ba0		 |$LN32@Init|

; 1266 :         goto cleanUp;

  02ba0	ea000176	 b           |$cleanUp$42870|
  02ba4		 |$LN22@Init|

; 1267 :     }
; 1268 : 
; 1269 :     // allocate the context - we only support one slot
; 1270 :     status = SDHCDAllocateContext(1, &m_pHCContext);

  02ba4	e59d30c4	 ldr         r3, [sp, #0xC4]
  02ba8	e28310a8	 add         r1, r3, #0xA8
  02bac	e3a00001	 mov         r0, #1
  02bb0	eb000000	 bl          SDHCDAllocateContext
  02bb4	e58d0058	 str         r0, [sp, #0x58]
  02bb8	e59d3058	 ldr         r3, [sp, #0x58]
  02bbc	e58d3024	 str         r3, [sp, #0x24]

; 1271 :     if (!SD_API_SUCCESS(status))

  02bc0	e59d3024	 ldr         r3, [sp, #0x24]
  02bc4	e3530000	 cmp         r3, #0
  02bc8	aa00000c	 bge         |$LN20@Init|

; 1272 :     {
; 1273 :         DEBUGMSG(SDCARD_ZONE_ERROR, (L"SDHC Failed to allocate context: 0x%08X \r\n", status));

  02bcc	e59f3634	 ldr         r3, [pc, #0x634]
  02bd0	e5933440	 ldr         r3, [r3, #0x440]
  02bd4	e3130902	 tst         r3, #2, 18
  02bd8	0a000005	 beq         |$LN33@Init|
  02bdc	e59d1024	 ldr         r1, [sp, #0x24]
  02be0	e59f0650	 ldr         r0, [pc, #0x650]
  02be4	eb000000	 bl          NKDbgPrintfW
  02be8	e3a03001	 mov         r3, #1
  02bec	e58d305c	 str         r3, [sp, #0x5C]
  02bf0	ea000001	 b           |$LN34@Init|
  02bf4		 |$LN33@Init|
  02bf4	e3a03000	 mov         r3, #0
  02bf8	e58d305c	 str         r3, [sp, #0x5C]
  02bfc		 |$LN34@Init|

; 1274 :         goto cleanUp;

  02bfc	ea00015f	 b           |$cleanUp$42870|
  02c00		 |$LN20@Init|

; 1275 :     }
; 1276 : 
; 1277 :     // Set our extension
; 1278 :     m_pHCContext->pHCSpecificContext = this;

  02c00	e59d30c4	 ldr         r3, [sp, #0xC4]
  02c04	e28330a8	 add         r3, r3, #0xA8
  02c08	e5933000	 ldr         r3, [r3]
  02c0c	e283204c	 add         r2, r3, #0x4C
  02c10	e59d30c4	 ldr         r3, [sp, #0xC4]
  02c14	e5823000	 str         r3, [r2]

; 1279 :     if (GetDeviceRegistryParams(pszActiveKey, this, dimof(s_deviceRegParams), 
; 1280 :         s_deviceRegParams) != ERROR_SUCCESS)

  02c18	e59f3614	 ldr         r3, [pc, #0x614]
  02c1c	e3a02016	 mov         r2, #0x16
  02c20	e59d10c4	 ldr         r1, [sp, #0xC4]
  02c24	e59d00c8	 ldr         r0, [sp, #0xC8]
  02c28	eb000000	 bl          GetDeviceRegistryParams
  02c2c	e58d0060	 str         r0, [sp, #0x60]
  02c30	e59d3060	 ldr         r3, [sp, #0x60]
  02c34	e3530000	 cmp         r3, #0
  02c38	0a00000b	 beq         |$LN18@Init|

; 1281 :     {
; 1282 :         DEBUGMSG(SDCARD_ZONE_ERROR, (L"ERROR: CSDIOControllerBase:Init: "
; 1283 :             L"Failed read SDHC driver registry parameters\r\n"
; 1284 :             ));

  02c3c	e59f35c4	 ldr         r3, [pc, #0x5C4]
  02c40	e5933440	 ldr         r3, [r3, #0x440]
  02c44	e3130902	 tst         r3, #2, 18
  02c48	0a000004	 beq         |$LN35@Init|
  02c4c	e59f05dc	 ldr         r0, [pc, #0x5DC]
  02c50	eb000000	 bl          NKDbgPrintfW
  02c54	e3a03001	 mov         r3, #1
  02c58	e58d3064	 str         r3, [sp, #0x64]
  02c5c	ea000001	 b           |$LN36@Init|
  02c60		 |$LN35@Init|
  02c60	e3a03000	 mov         r3, #0
  02c64	e58d3064	 str         r3, [sp, #0x64]
  02c68		 |$LN36@Init|

; 1285 :         goto cleanUp;

  02c68	ea000144	 b           |$cleanUp$42870|
  02c6c		 |$LN18@Init|

; 1286 :     }
; 1287 : 
; 1288 :     // get the Command and Data timeouts
; 1289 :     m_dwCurrentWakeupSources = m_dwWakeupSources & (~WAKEUP_SDIO);

  02c6c	e59d30c4	 ldr         r3, [sp, #0xC4]
  02c70	e28330e8	 add         r3, r3, #0xE8
  02c74	e5932000	 ldr         r2, [r3]
  02c78	e3e03001	 mvn         r3, #1
  02c7c	e0022003	 and         r2, r2, r3
  02c80	e59d30c4	 ldr         r3, [sp, #0xC4]
  02c84	e28330ec	 add         r3, r3, #0xEC
  02c88	e5832000	 str         r2, [r3]

; 1290 :     m_wCTOTimeout = min(m_wCTOTimeout, MMC_CTO_CONTROL_MAX);

  02c8c	e59d30c4	 ldr         r3, [sp, #0xC4]
  02c90	e2833d05	 add         r3, r3, #5, 26
  02c94	e5933000	 ldr         r3, [r3]
  02c98	e35300fd	 cmp         r3, #0xFD
  02c9c	2a000004	 bcs         |$LN37@Init|
  02ca0	e59d30c4	 ldr         r3, [sp, #0xC4]
  02ca4	e2833d05	 add         r3, r3, #5, 26
  02ca8	e5933000	 ldr         r3, [r3]
  02cac	e58d3068	 str         r3, [sp, #0x68]
  02cb0	ea000001	 b           |$LN38@Init|
  02cb4		 |$LN37@Init|
  02cb4	e3a030fd	 mov         r3, #0xFD
  02cb8	e58d3068	 str         r3, [sp, #0x68]
  02cbc		 |$LN38@Init|
  02cbc	e59d30c4	 ldr         r3, [sp, #0xC4]
  02cc0	e2832d05	 add         r2, r3, #5, 26
  02cc4	e59d3068	 ldr         r3, [sp, #0x68]
  02cc8	e5823000	 str         r3, [r2]

; 1291 :     m_wDTOTimeout = min(m_wDTOTimeout, MMC_DTO_CONTROL_MAX);

  02ccc	e59d30c4	 ldr         r3, [sp, #0xC4]
  02cd0	e2833f51	 add         r3, r3, #0x51, 30
  02cd4	e5932000	 ldr         r2, [r3]
  02cd8	e3a03cff	 mov         r3, #0xFF, 24
  02cdc	e38330fd	 orr         r3, r3, #0xFD
  02ce0	e1520003	 cmp         r2, r3
  02ce4	2a000004	 bcs         |$LN39@Init|
  02ce8	e59d30c4	 ldr         r3, [sp, #0xC4]
  02cec	e2833f51	 add         r3, r3, #0x51, 30
  02cf0	e5933000	 ldr         r3, [r3]
  02cf4	e58d306c	 str         r3, [sp, #0x6C]
  02cf8	ea000002	 b           |$LN40@Init|
  02cfc		 |$LN39@Init|
  02cfc	e3a03cff	 mov         r3, #0xFF, 24
  02d00	e38330fd	 orr         r3, r3, #0xFD
  02d04	e58d306c	 str         r3, [sp, #0x6C]
  02d08		 |$LN40@Init|
  02d08	e59d30c4	 ldr         r3, [sp, #0xC4]
  02d0c	e2832f51	 add         r2, r3, #0x51, 30
  02d10	e59d306c	 ldr         r3, [sp, #0x6C]
  02d14	e5823000	 str         r3, [r2]

; 1292 :     m_dwMaxClockRate = m_dwMaxClockRate == 0 ? STD_HC_MAX_CLOCK_FREQUENCY : 
; 1293 :                                                min(m_dwMaxClockRate, STD_HC_MAX_CLOCK_FREQUENCY);

  02d18	e59d30c4	 ldr         r3, [sp, #0xC4]
  02d1c	e2833f52	 add         r3, r3, #0x52, 30
  02d20	e5933000	 ldr         r3, [r3]
  02d24	e3530000	 cmp         r3, #0
  02d28	1a000003	 bne         |$LN43@Init|
  02d2c	e3a037b7	 mov         r3, #0xB7, 14
  02d30	e3833b1b	 orr         r3, r3, #0x1B, 22
  02d34	e58d3070	 str         r3, [sp, #0x70]
  02d38	ea000010	 b           |$LN44@Init|
  02d3c		 |$LN43@Init|
  02d3c	e59d30c4	 ldr         r3, [sp, #0xC4]
  02d40	e2833f52	 add         r3, r3, #0x52, 30
  02d44	e5932000	 ldr         r2, [r3]
  02d48	e3a037b7	 mov         r3, #0xB7, 14
  02d4c	e3833b1b	 orr         r3, r3, #0x1B, 22
  02d50	e1520003	 cmp         r2, r3
  02d54	2a000004	 bcs         |$LN41@Init|
  02d58	e59d30c4	 ldr         r3, [sp, #0xC4]
  02d5c	e2833f52	 add         r3, r3, #0x52, 30
  02d60	e5933000	 ldr         r3, [r3]
  02d64	e58d3074	 str         r3, [sp, #0x74]
  02d68	ea000002	 b           |$LN42@Init|
  02d6c		 |$LN41@Init|
  02d6c	e3a037b7	 mov         r3, #0xB7, 14
  02d70	e3833b1b	 orr         r3, r3, #0x1B, 22
  02d74	e58d3074	 str         r3, [sp, #0x74]
  02d78		 |$LN42@Init|
  02d78	e59d3074	 ldr         r3, [sp, #0x74]
  02d7c	e58d3070	 str         r3, [sp, #0x70]
  02d80		 |$LN44@Init|
  02d80	e59d30c4	 ldr         r3, [sp, #0xC4]
  02d84	e2832f52	 add         r2, r3, #0x52, 30
  02d88	e59d3070	 ldr         r3, [sp, #0x70]
  02d8c	e5823000	 str         r3, [r2]

; 1294 : 
; 1295 : 
; 1296 :     RETAILMSG(SDCARD_ZONE_INFO, 
; 1297 :         (L"SDHC host controller initialize: m_fastPathSDIO:%d m_fastPathSDMEM:%d\r\n",
; 1298 :         m_fastPathSDIO, m_fastPathSDMEM)
; 1299 :         );

  02d90	e59f3470	 ldr         r3, [pc, #0x470]
  02d94	e5933440	 ldr         r3, [r3, #0x440]
  02d98	e3130a01	 tst         r3, #1, 20
  02d9c	0a00000a	 beq         |$LN45@Init|
  02da0	e59d30c4	 ldr         r3, [sp, #0xC4]
  02da4	e2833f61	 add         r3, r3, #0x61, 30
  02da8	e5932000	 ldr         r2, [r3]
  02dac	e59d30c4	 ldr         r3, [sp, #0xC4]
  02db0	e2833d06	 add         r3, r3, #6, 26
  02db4	e5931000	 ldr         r1, [r3]
  02db8	e59f046c	 ldr         r0, [pc, #0x46C]
  02dbc	eb000000	 bl          NKDbgPrintfW
  02dc0	e3a03001	 mov         r3, #1
  02dc4	e58d3078	 str         r3, [sp, #0x78]
  02dc8	ea000001	 b           |$LN46@Init|
  02dcc		 |$LN45@Init|
  02dcc	e3a03000	 mov         r3, #0
  02dd0	e58d3078	 str         r3, [sp, #0x78]
  02dd4		 |$LN46@Init|

; 1300 :     
; 1301 : 	m_dwDeviceID = SOCGetSDHCDeviceBySlot(m_dwSlot);

  02dd4	e59d30c4	 ldr         r3, [sp, #0xC4]
  02dd8	e2833e17	 add         r3, r3, #0x17, 28
  02ddc	e5930000	 ldr         r0, [r3]
  02de0	eb000000	 bl          SOCGetSDHCDeviceBySlot
  02de4	e58d007c	 str         r0, [sp, #0x7C]
  02de8	e59d30c4	 ldr         r3, [sp, #0xC4]
  02dec	e2832f5d	 add         r2, r3, #0x5D, 30
  02df0	e59d307c	 ldr         r3, [sp, #0x7C]
  02df4	e5823000	 str         r3, [r2]

; 1302 : 
; 1303 :     if (!RequestDevicePads(m_dwDeviceID))

  02df8	e59d30c4	 ldr         r3, [sp, #0xC4]
  02dfc	e2833f5d	 add         r3, r3, #0x5D, 30
  02e00	e5930000	 ldr         r0, [r3]
  02e04	eb000000	 bl          RequestDevicePads
  02e08	e58d0080	 str         r0, [sp, #0x80]
  02e0c	e59d3080	 ldr         r3, [sp, #0x80]
  02e10	e3530000	 cmp         r3, #0
  02e14	1a00000e	 bne         |$LN16@Init|

; 1304 : 	{
; 1305 : 	    ERRORMSG(1, (_T("SDHCInitialize:: Error requesting pads\r\n")));

  02e18	e3a02c05	 mov         r2, #5, 24
  02e1c	e3822019	 orr         r2, r2, #0x19
  02e20	e59f13f8	 ldr         r1, [pc, #0x3F8]
  02e24	e59f03f0	 ldr         r0, [pc, #0x3F0]
  02e28	eb000000	 bl          NKDbgPrintfW
  02e2c	e59f03f4	 ldr         r0, [pc, #0x3F4]
  02e30	eb000000	 bl          NKDbgPrintfW
  02e34	e3a03001	 mov         r3, #1
  02e38	e58d3084	 str         r3, [sp, #0x84]
  02e3c	ea000001	 b           |$LN48@Init|
  02e40	e3a03000	 mov         r3, #0
  02e44	e58d3084	 str         r3, [sp, #0x84]
  02e48		 |$LN48@Init|

; 1306 :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;

  02e48	e3a0313b	 mov         r3, #0x3B, 2
  02e4c	e58d3024	 str         r3, [sp, #0x24]

; 1307 :         goto cleanUp;

  02e50	ea0000ca	 b           |$cleanUp$42870|
  02e54		 |$LN16@Init|

; 1308 : 	}
; 1309 : 
; 1310 :     if (m_dwCardDetectGPIO == -1)

  02e54	e59d30c4	 ldr         r3, [sp, #0xC4]
  02e58	e2833f79	 add         r3, r3, #0x79, 30
  02e5c	e5933000	 ldr         r3, [r3]
  02e60	e3730001	 cmn         r3, #1
  02e64	1a000008	 bne         |$LN14@Init|

; 1311 :     {
; 1312 :         m_dwCardDetectGPIO = BSPGetSDHCCardDetect(m_dwSlot);

  02e68	e59d30c4	 ldr         r3, [sp, #0xC4]
  02e6c	e2833e17	 add         r3, r3, #0x17, 28
  02e70	e5930000	 ldr         r0, [r3]
  02e74	eb000000	 bl          BSPGetSDHCCardDetect
  02e78	e58d0088	 str         r0, [sp, #0x88]
  02e7c	e59d30c4	 ldr         r3, [sp, #0xC4]
  02e80	e2832f79	 add         r2, r3, #0x79, 30
  02e84	e59d3088	 ldr         r3, [sp, #0x88]
  02e88	e5823000	 str         r3, [r2]
  02e8c		 |$LN14@Init|

; 1313 :     }
; 1314 : 
; 1315 :     // Open the GPIO driver
; 1316 :     m_hGPIO = GPIOOpen();

  02e8c	eb000000	 bl          GPIOOpen
  02e90	e58d008c	 str         r0, [sp, #0x8C]
  02e94	e59d30c4	 ldr         r3, [sp, #0xC4]
  02e98	e2832f59	 add         r2, r3, #0x59, 30
  02e9c	e59d308c	 ldr         r3, [sp, #0x8C]
  02ea0	e5823000	 str         r3, [r2]

; 1317 :     if( m_hGPIO == NULL )

  02ea4	e59d30c4	 ldr         r3, [sp, #0xC4]
  02ea8	e2833f59	 add         r3, r3, #0x59, 30
  02eac	e5933000	 ldr         r3, [r3]
  02eb0	e3530000	 cmp         r3, #0
  02eb4	1a00000e	 bne         |$LN13@Init|

; 1318 :     {
; 1319 :         ERRORMSG(1, (_T("SDHCInitialize:: Error opening the GPIO driver!\r\n")));

  02eb8	e3a02c05	 mov         r2, #5, 24
  02ebc	e3822027	 orr         r2, r2, #0x27
  02ec0	e59f1358	 ldr         r1, [pc, #0x358]
  02ec4	e59f0350	 ldr         r0, [pc, #0x350]
  02ec8	eb000000	 bl          NKDbgPrintfW
  02ecc	e59f0350	 ldr         r0, [pc, #0x350]
  02ed0	eb000000	 bl          NKDbgPrintfW
  02ed4	e3a03001	 mov         r3, #1
  02ed8	e58d3090	 str         r3, [sp, #0x90]
  02edc	ea000001	 b           |$LN50@Init|
  02ee0	e3a03000	 mov         r3, #0
  02ee4	e58d3090	 str         r3, [sp, #0x90]
  02ee8		 |$LN50@Init|

; 1320 :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;

  02ee8	e3a0313b	 mov         r3, #0x3B, 2
  02eec	e58d3024	 str         r3, [sp, #0x24]

; 1321 :         goto cleanUp;

  02ef0	ea0000a2	 b           |$cleanUp$42870|
  02ef4		 |$LN13@Init|

; 1322 :     }
; 1323 : 
; 1324 :     // map hardware memory space
; 1325 :     PortAddress.QuadPart = GetAddressByDevice(m_dwDeviceID);

  02ef4	e59d30c4	 ldr         r3, [sp, #0xC4]
  02ef8	e2833f5d	 add         r3, r3, #0x5D, 30
  02efc	e5930000	 ldr         r0, [r3]
  02f00	eb000000	 bl          GetAddressByDevice
  02f04	e58d0094	 str         r0, [sp, #0x94]
  02f08	e59d3094	 ldr         r3, [sp, #0x94]
  02f0c	e58d300c	 str         r3, [sp, #0xC]
  02f10	e3a03000	 mov         r3, #0
  02f14	e58d3010	 str         r3, [sp, #0x10]

; 1326 :     m_pbRegisters = (OMAP_MMCHS_REGS *)MmMapIoSpace(PortAddress, sizeof(OMAP_MMCHS_REGS), FALSE );

  02f18	e3a03000	 mov         r3, #0
  02f1c	e3a02c02	 mov         r2, #2, 24
  02f20	e59d000c	 ldr         r0, [sp, #0xC]
  02f24	e59d1010	 ldr         r1, [sp, #0x10]
  02f28	eb000000	 bl          MmMapIoSpace
  02f2c	e58d0098	 str         r0, [sp, #0x98]
  02f30	e59d30c4	 ldr         r3, [sp, #0xC4]
  02f34	e2832f57	 add         r2, r3, #0x57, 30
  02f38	e59d3098	 ldr         r3, [sp, #0x98]
  02f3c	e5823000	 str         r3, [r2]

; 1327 :     if ( !m_pbRegisters )

  02f40	e59d30c4	 ldr         r3, [sp, #0xC4]
  02f44	e2833f57	 add         r3, r3, #0x57, 30
  02f48	e5933000	 ldr         r3, [r3]
  02f4c	e3530000	 cmp         r3, #0
  02f50	1a00000e	 bne         |$LN11@Init|

; 1328 :     {
; 1329 :         ERRORMSG(1, (_T("SDHCInitialize:: Error allocating SDHC controller register\r\n")));

  02f54	e3a02c05	 mov         r2, #5, 24
  02f58	e3822031	 orr         r2, r2, #0x31
  02f5c	e59f12bc	 ldr         r1, [pc, #0x2BC]
  02f60	e59f02b4	 ldr         r0, [pc, #0x2B4]
  02f64	eb000000	 bl          NKDbgPrintfW
  02f68	e59f02a8	 ldr         r0, [pc, #0x2A8]
  02f6c	eb000000	 bl          NKDbgPrintfW
  02f70	e3a03001	 mov         r3, #1
  02f74	e58d309c	 str         r3, [sp, #0x9C]
  02f78	ea000001	 b           |$LN52@Init|
  02f7c	e3a03000	 mov         r3, #0
  02f80	e58d309c	 str         r3, [sp, #0x9C]
  02f84		 |$LN52@Init|

; 1330 :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;

  02f84	e3a0313b	 mov         r3, #0x3B, 2
  02f88	e58d3024	 str         r3, [sp, #0x24]

; 1331 :         goto cleanUp;

  02f8c	ea00007b	 b           |$cleanUp$42870|
  02f90		 |$LN11@Init|

; 1332 :     }
; 1333 : 
; 1334 :     // turn power and system clocks on
; 1335 :     TurnCardPowerOn();

  02f90	e59d30c4	 ldr         r3, [sp, #0xC4]
  02f94	e5933000	 ldr         r3, [r3]
  02f98	e2833014	 add         r3, r3, #0x14
  02f9c	e59d00c4	 ldr         r0, [sp, #0xC4]
  02fa0	e5933000	 ldr         r3, [r3]
  02fa4	e1a0e00f	 mov         lr, pc
  02fa8	e12fff13	 bx          r3

; 1336 :     if( !InitializeHardware() )

  02fac	e59d30c4	 ldr         r3, [sp, #0xC4]
  02fb0	e5933000	 ldr         r3, [r3]
  02fb4	e59d00c4	 ldr         r0, [sp, #0xC4]
  02fb8	e5933000	 ldr         r3, [r3]
  02fbc	e1a0e00f	 mov         lr, pc
  02fc0	e12fff13	 bx          r3
  02fc4	e58d00a0	 str         r0, [sp, #0xA0]
  02fc8	e59d30a0	 ldr         r3, [sp, #0xA0]
  02fcc	e3530000	 cmp         r3, #0
  02fd0	1a000014	 bne         |$LN9@Init|

; 1337 :     {
; 1338 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("InitializeHardware:: Error configuring SDHC hardware\r\n")));

  02fd4	e59f322c	 ldr         r3, [pc, #0x22C]
  02fd8	e5933440	 ldr         r3, [r3, #0x440]
  02fdc	e3130902	 tst         r3, #2, 18
  02fe0	0a000004	 beq         |$LN53@Init|
  02fe4	e59f0228	 ldr         r0, [pc, #0x228]
  02fe8	eb000000	 bl          NKDbgPrintfW
  02fec	e3a03001	 mov         r3, #1
  02ff0	e58d30a4	 str         r3, [sp, #0xA4]
  02ff4	ea000001	 b           |$LN54@Init|
  02ff8		 |$LN53@Init|
  02ff8	e3a03000	 mov         r3, #0
  02ffc	e58d30a4	 str         r3, [sp, #0xA4]
  03000		 |$LN54@Init|

; 1339 :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;

  03000	e3a0313b	 mov         r3, #0x3B, 2
  03004	e58d3024	 str         r3, [sp, #0x24]

; 1340 :         TurnCardPowerOff();

  03008	e59d30c4	 ldr         r3, [sp, #0xC4]
  0300c	e5933000	 ldr         r3, [r3]
  03010	e2833018	 add         r3, r3, #0x18
  03014	e59d00c4	 ldr         r0, [sp, #0xC4]
  03018	e5933000	 ldr         r3, [r3]
  0301c	e1a0e00f	 mov         lr, pc
  03020	e12fff13	 bx          r3

; 1341 :         goto cleanUp;

  03024	ea000055	 b           |$cleanUp$42870|
  03028		 |$LN9@Init|

; 1342 :     }
; 1343 : 
; 1344 : 	// Perform SOC-specific configuration
; 1345 : 	SocSdhcDevconf(m_dwSlot);

  03028	e59d30c4	 ldr         r3, [sp, #0xC4]
  0302c	e2833e17	 add         r3, r3, #0x17, 28
  03030	e5930000	 ldr         r0, [r3]
  03034	eb000000	 bl          SocSdhcDevconf

; 1346 : 
; 1347 :     // Read SD Host Controller Info from register.
; 1348 :     if (!InterpretCapabilities())

  03038	e59d30c4	 ldr         r3, [sp, #0xC4]
  0303c	e5933000	 ldr         r3, [r3]
  03040	e2833024	 add         r3, r3, #0x24
  03044	e59d00c4	 ldr         r0, [sp, #0xC4]
  03048	e5933000	 ldr         r3, [r3]
  0304c	e1a0e00f	 mov         lr, pc
  03050	e12fff13	 bx          r3
  03054	e58d00a8	 str         r0, [sp, #0xA8]
  03058	e59d30a8	 ldr         r3, [sp, #0xA8]
  0305c	e3530000	 cmp         r3, #0
  03060	1a000007	 bne         |$LN7@Init|

; 1349 :     {
; 1350 :         TurnCardPowerOff();

  03064	e59d30c4	 ldr         r3, [sp, #0xC4]
  03068	e5933000	 ldr         r3, [r3]
  0306c	e2833018	 add         r3, r3, #0x18
  03070	e59d00c4	 ldr         r0, [sp, #0xC4]
  03074	e5933000	 ldr         r3, [r3]
  03078	e1a0e00f	 mov         lr, pc
  0307c	e12fff13	 bx          r3

; 1351 :         goto cleanUp;

  03080	ea00003e	 b           |$cleanUp$42870|
  03084		 |$LN7@Init|

; 1352 :     }
; 1353 : 
; 1354 :     // now register the host controller
; 1355 :     status = SDHCDRegisterHostController(m_pHCContext);

  03084	e59d30c4	 ldr         r3, [sp, #0xC4]
  03088	e28330a8	 add         r3, r3, #0xA8
  0308c	e5930000	 ldr         r0, [r3]
  03090	eb000000	 bl          SDHCDRegisterHostController
  03094	e58d00ac	 str         r0, [sp, #0xAC]
  03098	e59d30ac	 ldr         r3, [sp, #0xAC]
  0309c	e58d3024	 str         r3, [sp, #0x24]

; 1356 :     if (!SD_API_SUCCESS(status))

  030a0	e59d3024	 ldr         r3, [sp, #0x24]
  030a4	e3530000	 cmp         r3, #0
  030a8	aa000013	 bge         |$LN5@Init|

; 1357 :     {
; 1358 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDHC Failed to register host controller: %0x08X \r\n"),status));

  030ac	e59f3154	 ldr         r3, [pc, #0x154]
  030b0	e5933440	 ldr         r3, [r3, #0x440]
  030b4	e3130902	 tst         r3, #2, 18
  030b8	0a000005	 beq         |$LN55@Init|
  030bc	e59d1024	 ldr         r1, [sp, #0x24]
  030c0	e59f0148	 ldr         r0, [pc, #0x148]
  030c4	eb000000	 bl          NKDbgPrintfW
  030c8	e3a03001	 mov         r3, #1
  030cc	e58d30b0	 str         r3, [sp, #0xB0]
  030d0	ea000001	 b           |$LN56@Init|
  030d4		 |$LN55@Init|
  030d4	e3a03000	 mov         r3, #0
  030d8	e58d30b0	 str         r3, [sp, #0xB0]
  030dc		 |$LN56@Init|

; 1359 :         TurnCardPowerOff();

  030dc	e59d30c4	 ldr         r3, [sp, #0xC4]
  030e0	e5933000	 ldr         r3, [r3]
  030e4	e2833018	 add         r3, r3, #0x18
  030e8	e59d00c4	 ldr         r0, [sp, #0xC4]
  030ec	e5933000	 ldr         r3, [r3]
  030f0	e1a0e00f	 mov         lr, pc
  030f4	e12fff13	 bx          r3

; 1360 :         goto cleanUp;

  030f8	ea000020	 b           |$cleanUp$42870|
  030fc		 |$LN5@Init|

; 1361 :     }
; 1362 : 
; 1363 :     EnableSDHCInterrupts();

  030fc	e59d00c4	 ldr         r0, [sp, #0xC4]
  03100	eb000000	 bl          |?EnableSDHCInterrupts@CSDIOControllerBase@@QAAXXZ|

; 1364 :     TurnCardPowerOff();

  03104	e59d30c4	 ldr         r3, [sp, #0xC4]
  03108	e5933000	 ldr         r3, [r3]
  0310c	e2833018	 add         r3, r3, #0x18
  03110	e59d00c4	 ldr         r0, [sp, #0xC4]
  03114	e5933000	 ldr         r3, [r3]
  03118	e1a0e00f	 mov         lr, pc
  0311c	e12fff13	 bx          r3

; 1365 : 
; 1366 :     // create the card detect IST thread
; 1367 :     m_htCardDetectIST = CreateThread(NULL, 0, SDHCCardDetectIstThread, this, 0, NULL);

  03120	e3a03000	 mov         r3, #0
  03124	e58d3004	 str         r3, [sp, #4]
  03128	e3a03000	 mov         r3, #0
  0312c	e58d3000	 str         r3, [sp]
  03130	e59d30c4	 ldr         r3, [sp, #0xC4]
  03134	e59f20d0	 ldr         r2, [pc, #0xD0]
  03138	e3a01000	 mov         r1, #0
  0313c	e3a00000	 mov         r0, #0
  03140	eb000000	 bl          CreateThread
  03144	e58d00b4	 str         r0, [sp, #0xB4]
  03148	e59d30c4	 ldr         r3, [sp, #0xC4]
  0314c	e2832f49	 add         r2, r3, #0x49, 30
  03150	e59d30b4	 ldr         r3, [sp, #0xB4]
  03154	e5823000	 str         r3, [r2]

; 1368 : 
; 1369 :     if (NULL == m_htCardDetectIST)

  03158	e59d30c4	 ldr         r3, [sp, #0xC4]
  0315c	e2833f49	 add         r3, r3, #0x49, 30
  03160	e5933000	 ldr         r3, [r3]
  03164	e3530000	 cmp         r3, #0
  03168	1a000002	 bne         |$LN3@Init|

; 1370 :         {
; 1371 :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;

  0316c	e3a0313b	 mov         r3, #0x3B, 2
  03170	e58d3024	 str         r3, [sp, #0x24]

; 1372 :         goto cleanUp;

  03174	ea000001	 b           |$cleanUp$42870|
  03178		 |$LN3@Init|

; 1373 :         }
; 1374 : 
; 1375 :     // return the controller context
; 1376 :     dwRet = (DWORD) this;

  03178	e59d30c4	 ldr         r3, [sp, #0xC4]
  0317c	e58d3008	 str         r3, [sp, #8]
  03180		 |$cleanUp$42870|

; 1377 : 
; 1378 : cleanUp:
; 1379 :     if ( (dwRet == 0) && m_pHCContext )

  03180	e59d3008	 ldr         r3, [sp, #8]
  03184	e3530000	 cmp         r3, #0
  03188	1a000008	 bne         |$LN1@Init|
  0318c	e59d30c4	 ldr         r3, [sp, #0xC4]
  03190	e28330a8	 add         r3, r3, #0xA8
  03194	e5933000	 ldr         r3, [r3]
  03198	e3530000	 cmp         r3, #0
  0319c	0a000003	 beq         |$LN1@Init|

; 1380 :     {
; 1381 :         FreeHostContext(FALSE, TRUE);

  031a0	e3a02001	 mov         r2, #1
  031a4	e3a01000	 mov         r1, #0
  031a8	e59d00c4	 ldr         r0, [sp, #0xC4]
  031ac	eb000000	 bl          |?FreeHostContext@CSDIOControllerBase@@QAAXHH@Z|
  031b0		 |$LN1@Init|

; 1382 :     }
; 1383 : 
; 1384 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("SDHC -Init\r\n")));

  031b0	e59f3050	 ldr         r3, [pc, #0x50]
  031b4	e5933440	 ldr         r3, [r3, #0x440]
  031b8	e3130a02	 tst         r3, #2, 20
  031bc	0a000004	 beq         |$LN57@Init|
  031c0	e59f003c	 ldr         r0, [pc, #0x3C]
  031c4	eb000000	 bl          NKDbgPrintfW
  031c8	e3a03001	 mov         r3, #1
  031cc	e58d30b8	 str         r3, [sp, #0xB8]
  031d0	ea000001	 b           |$LN58@Init|
  031d4		 |$LN57@Init|
  031d4	e3a03000	 mov         r3, #0
  031d8	e58d30b8	 str         r3, [sp, #0xB8]
  031dc		 |$LN58@Init|

; 1385 :     return dwRet;

  031dc	e59d3008	 ldr         r3, [sp, #8]
  031e0	e58d3028	 str         r3, [sp, #0x28]
  031e4	e28d0014	 add         r0, sp, #0x14
  031e8	eb000000	 bl          |??1CReg@@QAA@XZ|
  031ec	e59d3028	 ldr         r3, [sp, #0x28]
  031f0	e58d303c	 str         r3, [sp, #0x3C]

; 1386 : }

  031f4	e59d003c	 ldr         r0, [sp, #0x3C]
  031f8	e28dd0bc	 add         sp, sp, #0xBC
  031fc	e89d6000	 ldmia       sp, {sp, lr}
  03200	e12fff1e	 bx          lr
  03204		 |$LN62@Init|
  03204		 |$LN63@Init|
  03204	00000000	 DCD         |??_C@_1BK@NBDOGJEG@?$AAS?$AAD?$AAH?$AAC?$AA?5?$AA?9?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  03208		 |$LN64@Init|
  03208	00000000	 DCD         |dpCurSettings|
  0320c		 |$LN65@Init|
  0320c	00000000	 DCD         |?SDHCCardDetectIstThread@CSDIOControllerBase@@SAKPAX@Z|
  03210		 |$LN66@Init|
  03210	00000000	 DCD         |??_C@_1GG@KKOKFLBP@?$AAS?$AAD?$AAH?$AAC?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAh?$AAo?$AAs?$AAt?$AA?5?$AAc?$AAo?$AAn@|
  03214		 |$LN67@Init|
  03214	00000000	 DCD         |??_C@_1GO@PIFNHAEP@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAc?$AAo?$AAn?$AAf?$AAi@|
  03218		 |$LN68@Init|
  03218	00000000	 DCD         |??_C@_1HK@NAJMOFNG@?$AAS?$AAD?$AAH?$AAC?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn@|
  0321c		 |$LN69@Init|
  0321c	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  03220		 |$LN70@Init|
  03220	00000000	 DCD         |??_C@_1KA@CLLCPJCJ@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  03224		 |$LN71@Init|
  03224	00000000	 DCD         |??_C@_1GE@HPCKCMKC@?$AAS?$AAD?$AAH?$AAC?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAo?$AAp?$AAe?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAt@|
  03228		 |$LN72@Init|
  03228	00000000	 DCD         |??_C@_1FC@JCPNFEIG@?$AAS?$AAD?$AAH?$AAC?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAi?$AAn@|
  0322c		 |$LN73@Init|
  0322c	00000000	 DCD         |??_C@_1JA@BHKFNOIC@?$AAS?$AAD?$AAH?$AAC?$AA?5?$AAh?$AAo?$AAs?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?3@|
  03230		 |$LN74@Init|
  03230	00000000	 DCD         |??_C@_1JO@HLNGLJCK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?3@|
  03234		 |$LN75@Init|
  03234	00000000	 DCD         |s_deviceRegParams|
  03238		 |$LN76@Init|
  03238	00000000	 DCD         |??_C@_1FG@EMFJIEOJ@?$AAS?$AAD?$AAH?$AAC?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?3@|
  0323c		 |$LN77@Init|
  0323c	00000000	 DCD         |??_C@_1FG@POCCLIOD@?$AAS?$AAD?$AAH?$AAC?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAo?$AAb?$AAt?$AAa?$AAi?$AAn?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu@|
  03240		 |$LN78@Init|
  03240	00000000	 DCD         |??_C@_1DE@PNOEBOJA@?$AAS?$AAD?$AAH?$AAC?$AA?3?$AA?5?$AAC?$AAP?$AAU?$AA?5?$AAr?$AAe?$AAv?$AAi?$AAs?$AAi?$AAo?$AAn?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  03244		 |$LN79@Init|
  03244	01012010	 DCD         0x1012010
  03248		 |$LN80@Init|
  03248	00000000	 DCD         |??_C@_1DG@MBLOOMKA@?$AAS?$AAD?$AAH?$AAC?$AA?5?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAR?$AAe?$AAg?$AAP?$AAa?$AAt?$AAh?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  0324c		 |$LN81@Init|
  0324c	00000000	 DCD         |??_C@_1BK@ICKPAAKC@?$AAS?$AAD?$AAH?$AAC?$AA?5?$AA?$CL?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  03250		 |$M45477|

			 ENDP  ; |?Init@CSDIOControllerBase@@QAAHPBG@Z|, CSDIOControllerBase::Init

	EXPORT	|?ZeroEntries@CReg@@AAAXXZ|		; CReg::ZeroEntries
; File c:\wince600\public\common\sdk\inc\creg.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T45505| DCD	|$LN5@CReg|
	DCD	0x40000c04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CReg@@QAA@XZ| PROC			; CReg::CReg

; 63   : 	CReg() {

  00000		 |$LN5@CReg|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M45502|

; 64   : 		ZeroEntries();

  00010	e59d000c	 ldr         r0, [sp, #0xC]
  00014	eb000000	 bl          |?ZeroEntries@CReg@@AAAXXZ|

; 65   : 	}

  00018	e59d300c	 ldr         r3, [sp, #0xC]
  0001c	e58d3000	 str         r3, [sp]
  00020	e59d0000	 ldr         r0, [sp]
  00024	e28dd004	 add         sp, sp, #4
  00028	e89d6000	 ldmia       sp, {sp, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M45503|

			 ENDP  ; |??0CReg@@QAA@XZ|, CReg::CReg


  00000			 AREA	 |.pdata|, PDATA
|$T45512| DCD	|$LN5@ZeroEntrie|
	DCD	0x40001403
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ZeroEntries@CReg@@AAAXXZ| PROC	; CReg::ZeroEntries

; 35   : 	void ZeroEntries() {

  00000		 |$LN5@ZeroEntrie|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M45509|

; 36   : 		m_hKey      = NULL;

  0000c	e59d2008	 ldr         r2, [sp, #8]
  00010	e3a03000	 mov         r3, #0
  00014	e5823000	 str         r3, [r2]

; 37   : 		m_Index     = 0;

  00018	e59d3008	 ldr         r3, [sp, #8]
  0001c	e2832004	 add         r2, r3, #4
  00020	e3a03000	 mov         r3, #0
  00024	e5823000	 str         r3, [r2]

; 38   : 		m_lpbValue  = NULL;

  00028	e59d3008	 ldr         r3, [sp, #8]
  0002c	e2832008	 add         r2, r3, #8
  00030	e3a03000	 mov         r3, #0
  00034	e5823000	 str         r3, [r2]

; 39   : 		m_iValueLen = 0;

  00038	e59d3008	 ldr         r3, [sp, #8]
  0003c	e283200c	 add         r2, r3, #0xC
  00040	e3a03000	 mov         r3, #0
  00044	e5823000	 str         r3, [r2]

; 40   : 	}

  00048	e89d6000	 ldmia       sp, {sp, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M45510|

			 ENDP  ; |?ZeroEntries@CReg@@AAAXXZ|, CReg::ZeroEntries

	EXPORT	|??_C@_1FG@JGKPJKKG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo?$AAn?$AA?2?$AAs?$AAd?$AAk?$AA?2?$AAi?$AAn@| [ DATA ] ; `string'
	IMPORT	|LocalFree|
	IMPORT	|RegCloseKey|

  00000			 AREA	 |.pdata|, PDATA
|$T45521| DCD	|$LN9@CReg@2|
	DCD	0x40002a04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@JGKPJKKG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo?$AAn?$AA?2?$AAs?$AAd?$AAk?$AA?2?$AAi?$AAn@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "p"
	DCB	0x0, "u", 0x0, "b", 0x0, "l", 0x0, "i", 0x0, "c", 0x0, "\\"
	DCB	0x0, "c", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "o", 0x0, "n"
	DCB	0x0, "\\", 0x0, "s", 0x0, "d", 0x0, "k", 0x0, "\\", 0x0, "i"
	DCB	0x0, "n", 0x0, "c", 0x0, "\\", 0x0, "c", 0x0, "r", 0x0, "e"
	DCB	0x0, "g", 0x0, ".", 0x0, "h", 0x0, "x", 0x0, "x", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CReg@@QAA@XZ| PROC			; CReg::~CReg

; 67   : 	~CReg() { 

  00000		 |$LN9@CReg@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M45518|

; 68   : 		if(m_hKey) RegCloseKey(m_hKey); 

  00010	e59d300c	 ldr         r3, [sp, #0xC]
  00014	e5933000	 ldr         r3, [r3]
  00018	e3530000	 cmp         r3, #0
  0001c	0a000002	 beq         |$LN2@CReg@2|
  00020	e59d300c	 ldr         r3, [sp, #0xC]
  00024	e5930000	 ldr         r0, [r3]
  00028	eb000000	 bl          RegCloseKey
  0002c		 |$LN2@CReg@2|

; 69   : 		if (m_lpbValue) {

  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e2833008	 add         r3, r3, #8
  00034	e5933000	 ldr         r3, [r3]
  00038	e3530000	 cmp         r3, #0
  0003c	0a000013	 beq         |$LN1@CReg@2|

; 70   : 			ASSERT(m_iValueLen != 0);

  00040	e59d300c	 ldr         r3, [sp, #0xC]
  00044	e283300c	 add         r3, r3, #0xC
  00048	e5933000	 ldr         r3, [r3]
  0004c	e3530000	 cmp         r3, #0
  00050	0a000002	 beq         |$LN5@CReg@2|
  00054	e3a03001	 mov         r3, #1
  00058	e58d3000	 str         r3, [sp]
  0005c	ea000007	 b           |$LN6@CReg@2|
  00060		 |$LN5@CReg@2|
  00060	e3a03046	 mov         r3, #0x46
  00064	e59f2038	 ldr         r2, [pc, #0x38]
  00068	e59f1030	 ldr         r1, [pc, #0x30]
  0006c	e59f0028	 ldr         r0, [pc, #0x28]
  00070	eb000000	 bl          NKDbgPrintfW
  00074	e6000010	 __debugbreak_ce
  00078	e3a03000	 mov         r3, #0
  0007c	e58d3000	 str         r3, [sp]
  00080		 |$LN6@CReg@2|

; 71   : 			LocalFree(m_lpbValue);

  00080	e59d300c	 ldr         r3, [sp, #0xC]
  00084	e2833008	 add         r3, r3, #8
  00088	e5930000	 ldr         r0, [r3]
  0008c	eb000000	 bl          LocalFree
  00090		 |$LN1@CReg@2|

; 72   : 		}
; 73   : 	}

  00090	e28dd004	 add         sp, sp, #4
  00094	e89d6000	 ldmia       sp, {sp, lr}
  00098	e12fff1e	 bx          lr
  0009c		 |$LN10@CReg@2|
  0009c		 |$LN11@CReg@2|
  0009c	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  000a0		 |$LN12@CReg@2|
  000a0	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  000a4		 |$LN13@CReg@2|
  000a4	00000000	 DCD         |??_C@_1FG@JGKPJKKG@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAp?$AAu?$AAb?$AAl?$AAi?$AAc?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo?$AAn?$AA?2?$AAs?$AAd?$AAk?$AA?2?$AAi?$AAn@|
  000a8		 |$M45519|

			 ENDP  ; |??1CReg@@QAA@XZ|, CReg::~CReg

	IMPORT	|SDHCDDeleteContext|
	IMPORT	|GPIOClose|
	IMPORT	|CloseBusAccessHandle|
	IMPORT	|MmUnmapIoSpace|
	IMPORT	|SDHCDDeregisterHostController|

  000d0			 AREA	 |.pdata|, PDATA
|$T45534| DCD	|$LN11@FreeHostCo|
	DCD	0x40005804
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\sdhc\base\sdhc.cpp

  03250			 AREA	 |.text|, CODE, ARM

  03250		 |?FreeHostContext@CSDIOControllerBase@@QAAXHH@Z| PROC ; CSDIOControllerBase::FreeHostContext

; 1391 : {

  03250		 |$LN11@FreeHostCo|
  03250	e1a0c00d	 mov         r12, sp
  03254	e92d0007	 stmdb       sp!, {r0 - r2}
  03258	e92d5000	 stmdb       sp!, {r12, lr}
  0325c	e24dd004	 sub         sp, sp, #4
  03260		 |$M45531|

; 1392 :     UNREFERENCED_PARAMETER(fHardwareInitialized);
; 1393 :     DEBUGCHK(m_pHCContext);

  03260	e59d300c	 ldr         r3, [sp, #0xC]
  03264	e28330a8	 add         r3, r3, #0xA8
  03268	e5933000	 ldr         r3, [r3]
  0326c	e3530000	 cmp         r3, #0
  03270	0a000002	 beq         |$LN7@FreeHostCo|
  03274	e3a03001	 mov         r3, #1
  03278	e58d3000	 str         r3, [sp]
  0327c	ea000008	 b           |$LN8@FreeHostCo|
  03280		 |$LN7@FreeHostCo|
  03280	e3a03c05	 mov         r3, #5, 24
  03284	e3833071	 orr         r3, r3, #0x71
  03288	e59f211c	 ldr         r2, [pc, #0x11C]
  0328c	e59f1114	 ldr         r1, [pc, #0x114]
  03290	e59f010c	 ldr         r0, [pc, #0x10C]
  03294	eb000000	 bl          NKDbgPrintfW
  03298	e6000010	 __debugbreak_ce
  0329c	e3a03000	 mov         r3, #0
  032a0	e58d3000	 str         r3, [sp]
  032a4		 |$LN8@FreeHostCo|

; 1394 : 
; 1395 :     if (fRegisteredWithBusDriver)

  032a4	e59d3010	 ldr         r3, [sp, #0x10]
  032a8	e3530000	 cmp         r3, #0
  032ac	0a000003	 beq         |$LN4@FreeHostCo|

; 1396 :     {
; 1397 :         // deregister the host controller
; 1398 :         SDHCDDeregisterHostController(m_pHCContext);

  032b0	e59d300c	 ldr         r3, [sp, #0xC]
  032b4	e28330a8	 add         r3, r3, #0xA8
  032b8	e5930000	 ldr         r0, [r3]
  032bc	eb000000	 bl          SDHCDDeregisterHostController
  032c0		 |$LN4@FreeHostCo|

; 1399 :     }
; 1400 : 
; 1401 :     // unmap hardware memory space
; 1402 : 
; 1403 :     DeinitializeHardware();

  032c0	e59d300c	 ldr         r3, [sp, #0xC]
  032c4	e5933000	 ldr         r3, [r3]
  032c8	e2833004	 add         r3, r3, #4
  032cc	e59d000c	 ldr         r0, [sp, #0xC]
  032d0	e5933000	 ldr         r3, [r3]
  032d4	e1a0e00f	 mov         lr, pc
  032d8	e12fff13	 bx          r3

; 1404 :     if (m_pbRegisters)  

  032dc	e59d300c	 ldr         r3, [sp, #0xC]
  032e0	e2833f57	 add         r3, r3, #0x57, 30
  032e4	e5933000	 ldr         r3, [r3]
  032e8	e3530000	 cmp         r3, #0
  032ec	0a000004	 beq         |$LN3@FreeHostCo|

; 1405 : 	    MmUnmapIoSpace((PVOID)m_pbRegisters, sizeof(OMAP_MMCHS_REGS));

  032f0	e3a01c02	 mov         r1, #2, 24
  032f4	e59d300c	 ldr         r3, [sp, #0xC]
  032f8	e2833f57	 add         r3, r3, #0x57, 30
  032fc	e5930000	 ldr         r0, [r3]
  03300	eb000000	 bl          MmUnmapIoSpace
  03304		 |$LN3@FreeHostCo|

; 1406 : 
; 1407 :     if( m_hParentBus != NULL )

  03304	e59d300c	 ldr         r3, [sp, #0xC]
  03308	e28330ac	 add         r3, r3, #0xAC
  0330c	e5933000	 ldr         r3, [r3]
  03310	e3530000	 cmp         r3, #0
  03314	0a00000e	 beq         |$LN2@FreeHostCo|

; 1408 :     {
; 1409 :         TurnCardPowerOff();

  03318	e59d300c	 ldr         r3, [sp, #0xC]
  0331c	e5933000	 ldr         r3, [r3]
  03320	e2833018	 add         r3, r3, #0x18
  03324	e59d000c	 ldr         r0, [sp, #0xC]
  03328	e5933000	 ldr         r3, [r3]
  0332c	e1a0e00f	 mov         lr, pc
  03330	e12fff13	 bx          r3

; 1410 :         CloseBusAccessHandle( m_hParentBus );

  03334	e59d300c	 ldr         r3, [sp, #0xC]
  03338	e28330ac	 add         r3, r3, #0xAC
  0333c	e5930000	 ldr         r0, [r3]
  03340	eb000000	 bl          CloseBusAccessHandle

; 1411 :         m_hParentBus = NULL;

  03344	e59d300c	 ldr         r3, [sp, #0xC]
  03348	e28320ac	 add         r2, r3, #0xAC
  0334c	e3a03000	 mov         r3, #0
  03350	e5823000	 str         r3, [r2]
  03354		 |$LN2@FreeHostCo|

; 1412 :     }
; 1413 : 
; 1414 :     if( m_hGPIO != NULL )

  03354	e59d300c	 ldr         r3, [sp, #0xC]
  03358	e2833f59	 add         r3, r3, #0x59, 30
  0335c	e5933000	 ldr         r3, [r3]
  03360	e3530000	 cmp         r3, #0
  03364	0a000007	 beq         |$LN1@FreeHostCo|

; 1415 :     {
; 1416 :         GPIOClose( m_hGPIO );

  03368	e59d300c	 ldr         r3, [sp, #0xC]
  0336c	e2833f59	 add         r3, r3, #0x59, 30
  03370	e5930000	 ldr         r0, [r3]
  03374	eb000000	 bl          GPIOClose

; 1417 :         m_hGPIO = NULL;

  03378	e59d300c	 ldr         r3, [sp, #0xC]
  0337c	e2832f59	 add         r2, r3, #0x59, 30
  03380	e3a03000	 mov         r3, #0
  03384	e5823000	 str         r3, [r2]
  03388		 |$LN1@FreeHostCo|

; 1418 :     }
; 1419 : 
; 1420 :     // cleanup the host context
; 1421 :     SDHCDDeleteContext(m_pHCContext);

  03388	e59d300c	 ldr         r3, [sp, #0xC]
  0338c	e28330a8	 add         r3, r3, #0xA8
  03390	e5930000	 ldr         r0, [r3]
  03394	eb000000	 bl          SDHCDDeleteContext

; 1422 : }

  03398	e28dd004	 add         sp, sp, #4
  0339c	e89d6000	 ldmia       sp, {sp, lr}
  033a0	e12fff1e	 bx          lr
  033a4		 |$LN12@FreeHostCo|
  033a4		 |$LN13@FreeHostCo|
  033a4	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  033a8		 |$LN14@FreeHostCo|
  033a8	00000000	 DCD         |dpCurSettings|
  033ac		 |$LN15@FreeHostCo|
  033ac	00000000	 DCD         |??_C@_1KA@CLLCPJCJ@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  033b0		 |$M45532|

			 ENDP  ; |?FreeHostContext@CSDIOControllerBase@@QAAXHH@Z|, CSDIOControllerBase::FreeHostContext

	EXPORT	|?SDHCSlotOptionHandler@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@KW4_SD_SLOT_OPTION_CODE@@PAXK@Z| ; CSDIOControllerBase::SDHCSlotOptionHandler
	EXPORT	|?SDHCCancelIoHandler@CSDIOControllerBase@@SAEPAU_SDCARD_HC_CONTEXT@@KPAU_SD_BUS_REQUEST@@@Z| ; CSDIOControllerBase::SDHCCancelIoHandler
	EXPORT	|?SDHCBusRequestHandler@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@KPAU_SD_BUS_REQUEST@@@Z| ; CSDIOControllerBase::SDHCBusRequestHandler
	EXPORT	|?SDHCDeinitialize@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@@Z| ; CSDIOControllerBase::SDHCDeinitialize
	EXPORT	|?SDHCInitialize@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@@Z| ; CSDIOControllerBase::SDHCInitialize
	EXPORT	|??_C@_19IJCLBJAH@?$AAS?$AAD?$AAH?$AAC?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|wcsncpy|

  000d8			 AREA	 |.pdata|, PDATA
|$T45544| DCD	|$LN5@InterpretC|
	DCD	0x40003b04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_19IJCLBJAH@?$AAS?$AAD?$AAH?$AAC?$AA?$AA@| DCB "S", 0x0, "D", 0x0, "H"
	DCB	0x0, "C", 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  033b0			 AREA	 |.text|, CODE, ARM

  033b0		 |?InterpretCapabilities@CSDIOControllerBase@@UAAHXZ| PROC ; CSDIOControllerBase::InterpretCapabilities

; 1427 : {

  033b0		 |$LN5@InterpretC|
  033b0	e1a0c00d	 mov         r12, sp
  033b4	e92d0001	 stmdb       sp!, {r0}
  033b8	e92d5000	 stmdb       sp!, {r12, lr}
  033bc	e24dd008	 sub         sp, sp, #8
  033c0		 |$M45541|

; 1428 :     BOOL fRet = TRUE;

  033c0	e3a03001	 mov         r3, #1
  033c4	e58d3000	 str         r3, [sp]

; 1429 : 
; 1430 :     // set the host controller name
; 1431 :     SDHCDSetHCName(m_pHCContext, TEXT("SDHC"));

  033c8	e3a0200f	 mov         r2, #0xF
  033cc	e59f10c4	 ldr         r1, [pc, #0xC4]
  033d0	e59d3010	 ldr         r3, [sp, #0x10]
  033d4	e28330a8	 add         r3, r3, #0xA8
  033d8	e5933000	 ldr         r3, [r3]
  033dc	e2830004	 add         r0, r3, #4
  033e0	eb000000	 bl          wcsncpy

; 1432 : 
; 1433 :     // set init handler
; 1434 :     SDHCDSetControllerInitHandler(m_pHCContext, CSDIOControllerBase::SDHCInitialize);

  033e4	e59d3010	 ldr         r3, [sp, #0x10]
  033e8	e28330a8	 add         r3, r3, #0xA8
  033ec	e5933000	 ldr         r3, [r3]
  033f0	e2832044	 add         r2, r3, #0x44
  033f4	e59f3098	 ldr         r3, [pc, #0x98]
  033f8	e5823000	 str         r3, [r2]

; 1435 : 
; 1436 :     // set deinit handler
; 1437 :     SDHCDSetControllerDeinitHandler(m_pHCContext, CSDIOControllerBase::SDHCDeinitialize);

  033fc	e59d3010	 ldr         r3, [sp, #0x10]
  03400	e28330a8	 add         r3, r3, #0xA8
  03404	e5933000	 ldr         r3, [r3]
  03408	e2832048	 add         r2, r3, #0x48
  0340c	e59f307c	 ldr         r3, [pc, #0x7C]
  03410	e5823000	 str         r3, [r2]

; 1438 : 
; 1439 :     // set the Send packet handler
; 1440 :     SDHCDSetBusRequestHandler(m_pHCContext, CSDIOControllerBase::SDHCBusRequestHandler);

  03414	e59d3010	 ldr         r3, [sp, #0x10]
  03418	e28330a8	 add         r3, r3, #0xA8
  0341c	e5933000	 ldr         r3, [r3]
  03420	e2832038	 add         r2, r3, #0x38
  03424	e59f3060	 ldr         r3, [pc, #0x60]
  03428	e5823000	 str         r3, [r2]

; 1441 : 
; 1442 :     // set the cancel I/O handler
; 1443 :     SDHCDSetCancelIOHandler(m_pHCContext, CSDIOControllerBase::SDHCCancelIoHandler);

  0342c	e59d3010	 ldr         r3, [sp, #0x10]
  03430	e28330a8	 add         r3, r3, #0xA8
  03434	e5933000	 ldr         r3, [r3]
  03438	e2832040	 add         r2, r3, #0x40
  0343c	e59f3044	 ldr         r3, [pc, #0x44]
  03440	e5823000	 str         r3, [r2]

; 1444 : 
; 1445 :     // set the slot option handler
; 1446 :     SDHCDSetSlotOptionHandler(m_pHCContext, CSDIOControllerBase::SDHCSlotOptionHandler);

  03444	e59d3010	 ldr         r3, [sp, #0x10]
  03448	e28330a8	 add         r3, r3, #0xA8
  0344c	e5933000	 ldr         r3, [r3]
  03450	e283203c	 add         r2, r3, #0x3C
  03454	e59f3028	 ldr         r3, [pc, #0x28]
  03458	e5823000	 str         r3, [r2]

; 1447 : 
; 1448 :     // set maximum block length
; 1449 :     m_usMaxBlockLen = STD_HC_MAX_BLOCK_LENGTH;

  0345c	e59d3010	 ldr         r3, [sp, #0x10]
  03460	e2832f53	 add         r2, r3, #0x53, 30
  03464	e3a03b02	 mov         r3, #2, 22
  03468	e1c230b0	 strh        r3, [r2]

; 1450 : 
; 1451 :     return fRet;

  0346c	e59d3000	 ldr         r3, [sp]
  03470	e58d3004	 str         r3, [sp, #4]

; 1452 : }

  03474	e59d0004	 ldr         r0, [sp, #4]
  03478	e28dd008	 add         sp, sp, #8
  0347c	e89d6000	 ldmia       sp, {sp, lr}
  03480	e12fff1e	 bx          lr
  03484		 |$LN6@InterpretC|
  03484		 |$LN7@InterpretC|
  03484	00000000	 DCD         |?SDHCSlotOptionHandler@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@KW4_SD_SLOT_OPTION_CODE@@PAXK@Z|
  03488		 |$LN8@InterpretC|
  03488	00000000	 DCD         |?SDHCCancelIoHandler@CSDIOControllerBase@@SAEPAU_SDCARD_HC_CONTEXT@@KPAU_SD_BUS_REQUEST@@@Z|
  0348c		 |$LN9@InterpretC|
  0348c	00000000	 DCD         |?SDHCBusRequestHandler@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@KPAU_SD_BUS_REQUEST@@@Z|
  03490		 |$LN10@InterpretC|
  03490	00000000	 DCD         |?SDHCDeinitialize@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@@Z|
  03494		 |$LN11@InterpretC|
  03494	00000000	 DCD         |?SDHCInitialize@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@@Z|
  03498		 |$LN12@InterpretC|
  03498	00000000	 DCD         |??_C@_19IJCLBJAH@?$AAS?$AAD?$AAH?$AAC?$AA?$AA@|
  0349c		 |$M45542|

			 ENDP  ; |?InterpretCapabilities@CSDIOControllerBase@@UAAHXZ|, CSDIOControllerBase::InterpretCapabilities

	EXPORT	|?SDHCControllerIstThreadImpl@CSDIOControllerBase@@QAAKXZ| ; CSDIOControllerBase::SDHCControllerIstThreadImpl
	EXPORT	|?SDHCControllerIstThread@CSDIOControllerBase@@SAKPAX@Z| ; CSDIOControllerBase::SDHCControllerIstThread

  000e0			 AREA	 |.pdata|, PDATA
|$T45557| DCD	|$LN5@SDHCContro|
	DCD	0x40000f04
; Function compile flags: /Odtp

  0349c			 AREA	 |.text|, CODE, ARM

  0349c		 |?SDHCControllerIstThread@CSDIOControllerBase@@SAKPAX@Z| PROC ; CSDIOControllerBase::SDHCControllerIstThread

; 1463 : {

  0349c		 |$LN5@SDHCContro|
  0349c	e1a0c00d	 mov         r12, sp
  034a0	e92d0001	 stmdb       sp!, {r0}
  034a4	e92d5000	 stmdb       sp!, {r12, lr}
  034a8	e24dd00c	 sub         sp, sp, #0xC
  034ac		 |$M45554|

; 1464 :     CSDIOControllerBase *pController = (CSDIOControllerBase*)lpParameter;

  034ac	e59d3014	 ldr         r3, [sp, #0x14]
  034b0	e58d3000	 str         r3, [sp]

; 1465 :     return pController->SDHCControllerIstThreadImpl();

  034b4	e59d0000	 ldr         r0, [sp]
  034b8	eb000000	 bl          |?SDHCControllerIstThreadImpl@CSDIOControllerBase@@QAAKXZ|
  034bc	e58d0008	 str         r0, [sp, #8]
  034c0	e59d3008	 ldr         r3, [sp, #8]
  034c4	e58d3004	 str         r3, [sp, #4]

; 1466 : }

  034c8	e59d0004	 ldr         r0, [sp, #4]
  034cc	e28dd00c	 add         sp, sp, #0xC
  034d0	e89d6000	 ldmia       sp, {sp, lr}
  034d4	e12fff1e	 bx          lr
  034d8		 |$M45555|

			 ENDP  ; |?SDHCControllerIstThread@CSDIOControllerBase@@SAKPAX@Z|, CSDIOControllerBase::SDHCControllerIstThread

	EXPORT	|??_C@_1FE@LIEKDEAC@?$AAS?$AAD?$AAH?$AAC?$AAC?$AAa?$AAr?$AAd?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAI?$AAs?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@ENIDFIDN@?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAS?$AAD?$AAI?$AAO?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1II@LJLMNJCL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LK@CIILNCON@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC@| [ DATA ] ; `string'
	EXPORT	|?CardBusyCompletedHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@KPAW4SDHCCONTROLLERIST_STATE@@@Z| ; CSDIOControllerBase::CardBusyCompletedHandler
	EXPORT	|?DataTransmitCompletedHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@KPAW4SDHCCONTROLLERIST_STATE@@@Z| ; CSDIOControllerBase::DataTransmitCompletedHandler
	EXPORT	|?DataReceiveCompletedHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@KPAW4SDHCCONTROLLERIST_STATE@@@Z| ; CSDIOControllerBase::DataReceiveCompletedHandler
	EXPORT	|?CommandTransferCompleteHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@KPAW4SDHCCONTROLLERIST_STATE@@@Z| ; CSDIOControllerBase::CommandTransferCompleteHandler
	EXPORT	|??_C@_1MC@HCAPPLJJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@ICAAKCJA@?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAI?$AAs?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAI?$AAm?$AAp?$AAl?$AA?3?$AA?5?$AAR?$AAe?$AAg@| [ DATA ] ; `string'
	EXPORT	|??_C@_1II@PONIODHP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@HPLEKHDI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LE@CEKGAIHL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| [ DATA ] ; `string'
	IMPORT	|InterruptDone|

  000e8			 AREA	 |.pdata|, PDATA
|$T45598| DCD	|$LN58@SDHCContro@2|
	DCD	0x40018804

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@LIEKDEAC@?$AAS?$AAD?$AAH?$AAC?$AAC?$AAa?$AAr?$AAd?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAI?$AAs?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, "C", 0x0, "a", 0x0, "r"
	DCB	0x0, "d", 0x0, "D", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, "I", 0x0, "s", 0x0, "t", 0x0, "T", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, ":", 0x0, " "
	DCB	0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, " ", 0x0, "E", 0x0, "x", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@ENIDFIDN@?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAS?$AAD?$AAI?$AAO?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1II@LJLMNJCL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I", 0x0, "s"
	DCB	0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, ":", 0x0, " ", 0x0, "g", 0x0, "o", 0x0, "t"
	DCB	0x0, " ", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LK@CIILNCON@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "C", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s"
	DCB	0x0, "e", 0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H"
	DCB	0x0, "C", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I"
	DCB	0x0, "s", 0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "n", 0x0, "a", 0x0, "l"
	DCB	0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r"
	DCB	0x0, ".", 0x0, " ", 0x0, "S", 0x0, "h", 0x0, "o", 0x0, "u"
	DCB	0x0, "l", 0x0, "d", 0x0, " ", 0x0, "g", 0x0, "e", 0x0, "t"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "h", 0x0, "e"
	DCB	0x0, "r", 0x0, "e", 0x0, "!", 0x0, "!", 0x0, "!", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1MC@HCAPPLJJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "C", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s"
	DCB	0x0, "e", 0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H"
	DCB	0x0, "C", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I"
	DCB	0x0, "s", 0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "n", 0x0, "a", 0x0, "l"
	DCB	0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r"
	DCB	0x0, ".", 0x0, " ", 0x0, "N", 0x0, "o", 0x0, " ", 0x0, "S"
	DCB	0x0, "D", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "r", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "e", 0x0, " ", 0x0, "s", 0x0, "l", 0x0, "o", 0x0, "t"
	DCB	0x0, "!", 0x0, "!", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@ICAAKCJA@?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAI?$AAs?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAI?$AAm?$AAp?$AAl?$AA?3?$AA?5?$AAR?$AAe?$AAg@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e"
	DCB	0x0, "r", 0x0, "I", 0x0, "s", 0x0, "t", 0x0, "T", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "I", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "a", 0x0, "c", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, " ", 0x0, "a", 0x0, "t", 0x0, " ", 0x0, "D"
	DCB	0x0, "4", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1II@PONIODHP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I", 0x0, "s"
	DCB	0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "I", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "("
	DCB	0x0, ")", 0x0, ":", 0x0, " ", 0x0, "d", 0x0, "w", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@HPLEKHDI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I", 0x0, "s"
	DCB	0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "I", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "("
	DCB	0x0, ")", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "S", 0x0, "T"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LE@CEKGAIHL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I", 0x0, "s"
	DCB	0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "I", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "!"
	DCB	0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "s", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "C", 0x0, "E"
	DCB	0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, "P", 0x0, "r", 0x0, "i", 0x0, "o", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "y", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  034d8			 AREA	 |.text|, CODE, ARM

  034d8		 |?SDHCControllerIstThreadImpl@CSDIOControllerBase@@QAAKXZ| PROC ; CSDIOControllerBase::SDHCControllerIstThreadImpl

; 1478 : {

  034d8		 |$LN58@SDHCContro@2|
  034d8	e1a0c00d	 mov         r12, sp
  034dc	e92d0001	 stmdb       sp!, {r0}
  034e0	e92d5000	 stmdb       sp!, {r12, lr}
  034e4	e24dd07c	 sub         sp, sp, #0x7C
  034e8		 |$M45595|

; 1479 :     DWORD code;
; 1480 :     DWORD dwStat;
; 1481 : 
; 1482 :     SDHCCONTROLLERIST_STATE eCurrentState   = CARD_REMOVED_STATE; // COMMAND_TRANSFER_STATE;

  034e8	e3a03000	 mov         r3, #0
  034ec	e58d3014	 str         r3, [sp, #0x14]

; 1483 :     PSD_BUS_REQUEST         pRequest = NULL;

  034f0	e3a03000	 mov         r3, #0
  034f4	e58d3008	 str         r3, [sp, #8]

; 1484 :     SDHCCONTROLLERIST_STATE eNextState = CARD_REMOVED_STATE;

  034f8	e3a03000	 mov         r3, #0
  034fc	e58d300c	 str         r3, [sp, #0xC]

; 1485 :     SD_API_STATUS           status = 0;

  03500	e3a03000	 mov         r3, #0
  03504	e58d3010	 str         r3, [sp, #0x10]

; 1486 : 
; 1487 :     if (!CeSetThreadPriority(GetCurrentThread(), m_dwSDIOPriority))

  03508	eb000000	 bl          GetCurrentThread
  0350c	e58d001c	 str         r0, [sp, #0x1C]
  03510	e59d3084	 ldr         r3, [sp, #0x84]
  03514	e2833f4a	 add         r3, r3, #0x4A, 30
  03518	e5931000	 ldr         r1, [r3]
  0351c	e59d001c	 ldr         r0, [sp, #0x1C]
  03520	eb000000	 bl          CeSetThreadPriority
  03524	e58d0020	 str         r0, [sp, #0x20]
  03528	e59d3020	 ldr         r3, [sp, #0x20]
  0352c	e3530000	 cmp         r3, #0
  03530	1a00000a	 bne         |$LN18@SDHCContro@2|

; 1488 :     {
; 1489 :         DEBUGMSG(SDCARD_ZONE_ERROR, 
; 1490 :             (L"CSDIOControllerBase::SDHCControllerIstThreadImpl!ERROR - "
; 1491 :              L"failed to set CEThreadPriority\r\n")
; 1492 :             );

  03534	e59f358c	 ldr         r3, [pc, #0x58C]
  03538	e5933440	 ldr         r3, [r3, #0x440]
  0353c	e3130902	 tst         r3, #2, 18
  03540	0a000004	 beq         |$LN21@SDHCContro@2|
  03544	e59f05a8	 ldr         r0, [pc, #0x5A8]
  03548	eb000000	 bl          NKDbgPrintfW
  0354c	e3a03001	 mov         r3, #1
  03550	e58d3024	 str         r3, [sp, #0x24]
  03554	ea000001	 b           |$LN22@SDHCContro@2|
  03558		 |$LN21@SDHCContro@2|
  03558	e3a03000	 mov         r3, #0
  0355c	e58d3024	 str         r3, [sp, #0x24]
  03560		 |$LN22@SDHCContro@2|
  03560		 |$LN18@SDHCContro@2|
  03560		 |$LN48@SDHCContro@2|
  03560		 |$LN47@SDHCContro@2|
  03560		 |$LN17@SDHCContro@2|

; 1493 :     }
; 1494 : 
; 1495 :     for(;;)
; 1496 :     {
; 1497 : 
; 1498 :         // wait for the SDIO/controller interrupt
; 1499 :         code = WaitForSingleObject(m_hControllerISTEvent, INFINITE);

  03560	e3e01000	 mvn         r1, #0
  03564	e59d3084	 ldr         r3, [sp, #0x84]
  03568	e2833f46	 add         r3, r3, #0x46, 30
  0356c	e5930000	 ldr         r0, [r3]
  03570	eb000000	 bl          WaitForSingleObject
  03574	e58d0028	 str         r0, [sp, #0x28]
  03578	e59d3028	 ldr         r3, [sp, #0x28]
  0357c	e58d3004	 str         r3, [sp, #4]

; 1500 : 
; 1501 :         // check for shutdown
; 1502 :         if (m_fDriverShutdown) break;

  03580	e59d3084	 ldr         r3, [sp, #0x84]
  03584	e2833e13	 add         r3, r3, #0x13, 28
  03588	e5933000	 ldr         r3, [r3]
  0358c	e3530000	 cmp         r3, #0
  03590	0a000000	 beq         |$LN15@SDHCContro@2|
  03594	ea000139	 b           |$LN16@SDHCContro@2|
  03598		 |$LN15@SDHCContro@2|

; 1503 : 
; 1504 :         DEBUGMSG(SHC_INTERRUPT_ZONE, 
; 1505 :             (L"CSDIOControllerBase::SDHCControllerIstThreadImpl(): IST\r\n")
; 1506 :             );       

  03598	e59f3528	 ldr         r3, [pc, #0x528]
  0359c	e5933440	 ldr         r3, [r3, #0x440]
  035a0	e3130001	 tst         r3, #1
  035a4	0a000004	 beq         |$LN23@SDHCContro@2|
  035a8	e59f0540	 ldr         r0, [pc, #0x540]
  035ac	eb000000	 bl          NKDbgPrintfW
  035b0	e3a03001	 mov         r3, #1
  035b4	e58d302c	 str         r3, [sp, #0x2C]
  035b8	ea000001	 b           |$LN24@SDHCContro@2|
  035bc		 |$LN23@SDHCContro@2|
  035bc	e3a03000	 mov         r3, #0
  035c0	e58d302c	 str         r3, [sp, #0x2C]
  035c4		 |$LN24@SDHCContro@2|

; 1507 : 
; 1508 :         // request clocks        
; 1509 :         UpdateSystemClock(TRUE);

  035c4	e3a01001	 mov         r1, #1
  035c8	e59d0084	 ldr         r0, [sp, #0x84]
  035cc	eb000000	 bl          |?UpdateSystemClock@CSDIOControllerBase@@QAAHH@Z|

; 1510 : 
; 1511 :         EnterCriticalSection( &m_critSec );

  035d0	e59d3084	 ldr         r3, [sp, #0x84]
  035d4	e28300b0	 add         r0, r3, #0xB0
  035d8	eb000000	 bl          EnterCriticalSection

; 1512 :         dwStat = READ_EXT_MMC_STATUS();

  035dc	e59d3084	 ldr         r3, [sp, #0x84]
  035e0	e2833f7d	 add         r3, r3, #0x7D, 30
  035e4	e5933000	 ldr         r3, [r3]
  035e8	e3530000	 cmp         r3, #0
  035ec	0a000004	 beq         |$LN27@SDHCContro@2|
  035f0	e59d3084	 ldr         r3, [sp, #0x84]
  035f4	e2833f7d	 add         r3, r3, #0x7D, 30
  035f8	e5933000	 ldr         r3, [r3]
  035fc	e58d3030	 str         r3, [sp, #0x30]
  03600	ea000014	 b           |$LN28@SDHCContro@2|
  03604		 |$LN27@SDHCContro@2|
  03604	e59d3084	 ldr         r3, [sp, #0x84]
  03608	e28330e0	 add         r3, r3, #0xE0
  0360c	e5933000	 ldr         r3, [r3]
  03610	e3530003	 cmp         r3, #3
  03614	aa00000b	 bge         |$LN25@SDHCContro@2|
  03618	e59d0084	 ldr         r0, [sp, #0x84]
  0361c	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  03620	e58d0034	 str         r0, [sp, #0x34]
  03624	e59d3084	 ldr         r3, [sp, #0x84]
  03628	e2833f57	 add         r3, r3, #0x57, 30
  0362c	e5933000	 ldr         r3, [r3]
  03630	e2833f4d	 add         r3, r3, #0x4D, 30
  03634	e5932000	 ldr         r2, [r3]
  03638	e59d3034	 ldr         r3, [sp, #0x34]
  0363c	e0033002	 and         r3, r3, r2
  03640	e58d3038	 str         r3, [sp, #0x38]
  03644	ea000001	 b           |$LN26@SDHCContro@2|
  03648		 |$LN25@SDHCContro@2|
  03648	e3a03000	 mov         r3, #0
  0364c	e58d3038	 str         r3, [sp, #0x38]
  03650		 |$LN26@SDHCContro@2|
  03650	e59d3038	 ldr         r3, [sp, #0x38]
  03654	e58d3030	 str         r3, [sp, #0x30]
  03658		 |$LN28@SDHCContro@2|
  03658	e59d3030	 ldr         r3, [sp, #0x30]
  0365c	e58d3000	 str         r3, [sp]

; 1513 :         LeaveCriticalSection( &m_critSec );

  03660	e59d3084	 ldr         r3, [sp, #0x84]
  03664	e28300b0	 add         r0, r3, #0xB0
  03668	eb000000	 bl          LeaveCriticalSection

; 1514 : 
; 1515 :         DEBUGMSG(SHC_INTERRUPT_ZONE, 
; 1516 :             (L"CSDIOControllerBase::SDHCControllerIstThreadImpl(): dwStat=0x%08X\r\n", 
; 1517 :             dwStat)
; 1518 :             );

  0366c	e59f3454	 ldr         r3, [pc, #0x454]
  03670	e5933440	 ldr         r3, [r3, #0x440]
  03674	e3130001	 tst         r3, #1
  03678	0a000005	 beq         |$LN29@SDHCContro@2|
  0367c	e59d1000	 ldr         r1, [sp]
  03680	e59f0464	 ldr         r0, [pc, #0x464]
  03684	eb000000	 bl          NKDbgPrintfW
  03688	e3a03001	 mov         r3, #1
  0368c	e58d303c	 str         r3, [sp, #0x3C]
  03690	ea000001	 b           |$LN30@SDHCContro@2|
  03694		 |$LN29@SDHCContro@2|
  03694	e3a03000	 mov         r3, #0
  03698	e58d303c	 str         r3, [sp, #0x3C]
  0369c		 |$LN30@SDHCContro@2|

; 1519 : 
; 1520 :         if (dwStat & EXT_MMCHS_STAT_CD_INTR)

  0369c	e59d3000	 ldr         r3, [sp]
  036a0	e3130103	 tst         r3, #3, 2
  036a4	0a000021	 beq         |$LN14@SDHCContro@2|

; 1521 :     {
; 1522 :             eCurrentState = (HandleCardDetectInterrupt(dwStat) ? COMMAND_TRANSFER_STATE : CARD_REMOVED_STATE);

  036a8	e59d1000	 ldr         r1, [sp]
  036ac	e59d0084	 ldr         r0, [sp, #0x84]
  036b0	eb000000	 bl          |?HandleCardDetectInterrupt@CSDIOControllerBase@@QAAHK@Z|
  036b4	e58d0040	 str         r0, [sp, #0x40]
  036b8	e59d3040	 ldr         r3, [sp, #0x40]
  036bc	e3530000	 cmp         r3, #0
  036c0	0a000002	 beq         |$LN31@SDHCContro@2|
  036c4	e3a03001	 mov         r3, #1
  036c8	e58d3044	 str         r3, [sp, #0x44]
  036cc	ea000001	 b           |$LN32@SDHCContro@2|
  036d0		 |$LN31@SDHCContro@2|
  036d0	e3a03000	 mov         r3, #0
  036d4	e58d3044	 str         r3, [sp, #0x44]
  036d8		 |$LN32@SDHCContro@2|
  036d8	e59d3044	 ldr         r3, [sp, #0x44]
  036dc	e58d3014	 str         r3, [sp, #0x14]

; 1523 :             UpdateSystemClock(FALSE);

  036e0	e3a01000	 mov         r1, #0
  036e4	e59d0084	 ldr         r0, [sp, #0x84]
  036e8	eb000000	 bl          |?UpdateSystemClock@CSDIOControllerBase@@QAAHH@Z|

; 1524 :             if (m_bCommandPending == TRUE)

  036ec	e59d3084	 ldr         r3, [sp, #0x84]
  036f0	e2833f7e	 add         r3, r3, #0x7E, 30
  036f4	e5933000	 ldr         r3, [r3]
  036f8	e3530001	 cmp         r3, #1
  036fc	1a000006	 bne         |$LN13@SDHCContro@2|

; 1525 :         {
; 1526 :                 m_bCommandPending = FALSE;

  03700	e59d3084	 ldr         r3, [sp, #0x84]
  03704	e2832f7e	 add         r2, r3, #0x7E, 30
  03708	e3a03000	 mov         r3, #0
  0370c	e5823000	 str         r3, [r2]

; 1527 :                 UpdateSystemClock(FALSE);

  03710	e3a01000	 mov         r1, #0
  03714	e59d0084	 ldr         r0, [sp, #0x84]
  03718	eb000000	 bl          |?UpdateSystemClock@CSDIOControllerBase@@QAAHH@Z|
  0371c		 |$LN13@SDHCContro@2|

; 1528 :         }
; 1529 :             InterruptDone( m_dwControllerSysIntr );

  0371c	e59d3084	 ldr         r3, [sp, #0x84]
  03720	e2833f4d	 add         r3, r3, #0x4D, 30
  03724	e5930000	 ldr         r0, [r3]
  03728	eb000000	 bl          InterruptDone

; 1530 :             continue;

  0372c	eaffff8b	 b           |$LN17@SDHCContro@2|
  03730		 |$LN14@SDHCContro@2|

; 1531 :         }
; 1532 : 
; 1533 :         if(m_ActualPowerState == D4)

  03730	e59d3084	 ldr         r3, [sp, #0x84]
  03734	e28330e0	 add         r3, r3, #0xE0
  03738	e5933000	 ldr         r3, [r3]
  0373c	e3530004	 cmp         r3, #4
  03740	1a000012	 bne         |$LN12@SDHCContro@2|

; 1534 :         {
; 1535 :             DEBUGMSG(SHC_INTERRUPT_ZONE, 
; 1536 :                 (L"SDHCControllerIstThreadImpl: Register access at D4\r\n")
; 1537 :                 );

  03744	e59f337c	 ldr         r3, [pc, #0x37C]
  03748	e5933440	 ldr         r3, [r3, #0x440]
  0374c	e3130001	 tst         r3, #1
  03750	0a000004	 beq         |$LN33@SDHCContro@2|
  03754	e59f038c	 ldr         r0, [pc, #0x38C]
  03758	eb000000	 bl          NKDbgPrintfW
  0375c	e3a03001	 mov         r3, #1
  03760	e58d3048	 str         r3, [sp, #0x48]
  03764	ea000001	 b           |$LN34@SDHCContro@2|
  03768		 |$LN33@SDHCContro@2|
  03768	e3a03000	 mov         r3, #0
  0376c	e58d3048	 str         r3, [sp, #0x48]
  03770		 |$LN34@SDHCContro@2|

; 1538 :             
; 1539 :             UpdateSystemClock(FALSE);

  03770	e3a01000	 mov         r1, #0
  03774	e59d0084	 ldr         r0, [sp, #0x84]
  03778	eb000000	 bl          |?UpdateSystemClock@CSDIOControllerBase@@QAAHH@Z|

; 1540 :             InterruptDone( m_dwControllerSysIntr );

  0377c	e59d3084	 ldr         r3, [sp, #0x84]
  03780	e2833f4d	 add         r3, r3, #0x4D, 30
  03784	e5930000	 ldr         r0, [r3]
  03788	eb000000	 bl          InterruptDone

; 1541 :             continue;

  0378c	eaffff73	 b           |$LN47@SDHCContro@2|
  03790		 |$LN12@SDHCContro@2|

; 1542 :         }
; 1543 : 
; 1544 :         switch (eCurrentState)

  03790	e59d3014	 ldr         r3, [sp, #0x14]
  03794	e58d304c	 str         r3, [sp, #0x4C]
  03798	e59d304c	 ldr         r3, [sp, #0x4C]
  0379c	e3530004	 cmp         r3, #4
  037a0	8a000043	 bhi         |$LN4@SDHCContro@2|
  037a4	e59d204c	 ldr         r2, [sp, #0x4C]
  037a8	e1a03102	 mov         r3, r2, lsl #2
  037ac	e083300f	 add         r3, r3, pc
  037b0	e5933004	 ldr         r3, [r3, #4]
  037b4	e08ff003	 add         pc, pc, r3
  037b8		 |$LN50@SDHCContro@2|
  037b8		 |$LN49@SDHCContro@2|
  037b8		 |$LN51@SDHCContro@2|
  037b8	00000010	 DCD         0x10
  037bc		 |$LN52@SDHCContro@2|
  037bc	00000048	 DCD         0x48
  037c0		 |$LN53@SDHCContro@2|
  037c0	0000008c	 DCD         0x8c
  037c4		 |$LN54@SDHCContro@2|
  037c4	000000b0	 DCD         0xb0
  037c8		 |$LN55@SDHCContro@2|
  037c8	000000d4	 DCD         0xd4
  037cc		 |$LN9@SDHCContro@2|

; 1545 :         {
; 1546 :             case CARD_REMOVED_STATE:
; 1547 :                 DEBUGMSG(SHC_INTERRUPT_ZONE, 
; 1548 :                     (TEXT("ERROR: CSDIOControllerBase::SDHCControllerIstThread: Internal error. No SD card in the slot!!!\r\n"))
; 1549 :                     );

  037cc	e59f32f4	 ldr         r3, [pc, #0x2F4]
  037d0	e5933440	 ldr         r3, [r3, #0x440]
  037d4	e3130001	 tst         r3, #1
  037d8	0a000004	 beq         |$LN35@SDHCContro@2|
  037dc	e59f0300	 ldr         r0, [pc, #0x300]
  037e0	eb000000	 bl          NKDbgPrintfW
  037e4	e3a03001	 mov         r3, #1
  037e8	e58d3050	 str         r3, [sp, #0x50]
  037ec	ea000001	 b           |$LN36@SDHCContro@2|
  037f0		 |$LN35@SDHCContro@2|
  037f0	e3a03000	 mov         r3, #0
  037f4	e58d3050	 str         r3, [sp, #0x50]
  037f8		 |$LN36@SDHCContro@2|

; 1550 :                 eNextState = CARD_REMOVED_STATE;

  037f8	e3a03000	 mov         r3, #0
  037fc	e58d300c	 str         r3, [sp, #0xC]

; 1551 :                 break;

  03800	ea000036	 b           |$LN10@SDHCContro@2|
  03804		 |$LN8@SDHCContro@2|

; 1552 :             case COMMAND_TRANSFER_STATE:
; 1553 :                 // get and lock the current bus request
; 1554 :                 pRequest = SDHCDGetAndLockCurrentRequest(m_pHCContext, 0);

  03804	e3a01000	 mov         r1, #0
  03808	e59d3084	 ldr         r3, [sp, #0x84]
  0380c	e28330a8	 add         r3, r3, #0xA8
  03810	e5930000	 ldr         r0, [r3]
  03814	eb000000	 bl          SDHCDGetAndLockCurrentRequest
  03818	e58d0054	 str         r0, [sp, #0x54]
  0381c	e59d3054	 ldr         r3, [sp, #0x54]
  03820	e58d3008	 str         r3, [sp, #8]

; 1555 :                 status = CommandTransferCompleteHandler(pRequest, dwStat, &eNextState);

  03824	e28d300c	 add         r3, sp, #0xC
  03828	e59d2000	 ldr         r2, [sp]
  0382c	e59d1008	 ldr         r1, [sp, #8]
  03830	e59d0084	 ldr         r0, [sp, #0x84]
  03834	eb000000	 bl          |?CommandTransferCompleteHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@KPAW4SDHCCONTROLLERIST_STATE@@@Z|
  03838	e58d0058	 str         r0, [sp, #0x58]
  0383c	e59d3058	 ldr         r3, [sp, #0x58]
  03840	e58d3010	 str         r3, [sp, #0x10]

; 1556 :                 break;

  03844	ea000025	 b           |$LN10@SDHCContro@2|
  03848		 |$LN7@SDHCContro@2|

; 1557 :             case DATA_RECEIVE_STATE:
; 1558 :                 status = DataReceiveCompletedHandler(pRequest, dwStat, &eNextState);

  03848	e28d300c	 add         r3, sp, #0xC
  0384c	e59d2000	 ldr         r2, [sp]
  03850	e59d1008	 ldr         r1, [sp, #8]
  03854	e59d0084	 ldr         r0, [sp, #0x84]
  03858	eb000000	 bl          |?DataReceiveCompletedHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@KPAW4SDHCCONTROLLERIST_STATE@@@Z|
  0385c	e58d005c	 str         r0, [sp, #0x5C]
  03860	e59d305c	 ldr         r3, [sp, #0x5C]
  03864	e58d3010	 str         r3, [sp, #0x10]

; 1559 :                 break;

  03868	ea00001c	 b           |$LN10@SDHCContro@2|
  0386c		 |$LN6@SDHCContro@2|

; 1560 :             case DATA_TRANSMIT_STATE:
; 1561 :                 status = DataTransmitCompletedHandler(pRequest, dwStat, &eNextState);

  0386c	e28d300c	 add         r3, sp, #0xC
  03870	e59d2000	 ldr         r2, [sp]
  03874	e59d1008	 ldr         r1, [sp, #8]
  03878	e59d0084	 ldr         r0, [sp, #0x84]
  0387c	eb000000	 bl          |?DataTransmitCompletedHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@KPAW4SDHCCONTROLLERIST_STATE@@@Z|
  03880	e58d0060	 str         r0, [sp, #0x60]
  03884	e59d3060	 ldr         r3, [sp, #0x60]
  03888	e58d3010	 str         r3, [sp, #0x10]

; 1562 :                 break;

  0388c	ea000013	 b           |$LN10@SDHCContro@2|
  03890		 |$LN5@SDHCContro@2|

; 1563 :             case CARDBUSY_STATE:
; 1564 :                 status = CardBusyCompletedHandler(pRequest, dwStat, &eNextState);

  03890	e28d300c	 add         r3, sp, #0xC
  03894	e59d2000	 ldr         r2, [sp]
  03898	e59d1008	 ldr         r1, [sp, #8]
  0389c	e59d0084	 ldr         r0, [sp, #0x84]
  038a0	eb000000	 bl          |?CardBusyCompletedHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@KPAW4SDHCCONTROLLERIST_STATE@@@Z|
  038a4	e58d0064	 str         r0, [sp, #0x64]
  038a8	e59d3064	 ldr         r3, [sp, #0x64]
  038ac	e58d3010	 str         r3, [sp, #0x10]

; 1565 :                 break;

  038b0	ea00000a	 b           |$LN10@SDHCContro@2|
  038b4		 |$LN4@SDHCContro@2|

; 1566 :             default:
; 1567 :                 RETAILMSG(SDCARD_ZONE_WARN, 
; 1568 :                     (TEXT("ERROR: CSDIOControllerBase::SDHCControllerIstThread: Internal error. Should get to here!!!\r\n"))
; 1569 :                     );

  038b4	e59f320c	 ldr         r3, [pc, #0x20C]
  038b8	e5933440	 ldr         r3, [r3, #0x440]
  038bc	e3130901	 tst         r3, #1, 18
  038c0	0a000004	 beq         |$LN37@SDHCContro@2|
  038c4	e59f0214	 ldr         r0, [pc, #0x214]
  038c8	eb000000	 bl          NKDbgPrintfW
  038cc	e3a03001	 mov         r3, #1
  038d0	e58d3068	 str         r3, [sp, #0x68]
  038d4	ea000001	 b           |$LN38@SDHCContro@2|
  038d8		 |$LN37@SDHCContro@2|
  038d8	e3a03000	 mov         r3, #0
  038dc	e58d3068	 str         r3, [sp, #0x68]
  038e0		 |$LN38@SDHCContro@2|
  038e0		 |$LN10@SDHCContro@2|

; 1570 :                 break;
; 1571 :         }
; 1572 : 
; 1573 :         if( ((eNextState == COMMAND_TRANSFER_STATE)) && (dwStat & MMCHS_STAT_CIRQ))

  038e0	e59d300c	 ldr         r3, [sp, #0xC]
  038e4	e3530001	 cmp         r3, #1
  038e8	1a000045	 bne         |$LN3@SDHCContro@2|
  038ec	e59d3000	 ldr         r3, [sp]
  038f0	e3130c01	 tst         r3, #1, 24
  038f4	0a000042	 beq         |$LN3@SDHCContro@2|

; 1574 :         {
; 1575 : 
; 1576 :             ASSERT( m_fSDIOInterruptsEnabled );

  038f8	e59d3084	 ldr         r3, [sp, #0x84]
  038fc	e28330f4	 add         r3, r3, #0xF4
  03900	e5933000	 ldr         r3, [r3]
  03904	e3530000	 cmp         r3, #0
  03908	0a000002	 beq         |$LN39@SDHCContro@2|
  0390c	e3a03001	 mov         r3, #1
  03910	e58d306c	 str         r3, [sp, #0x6C]
  03914	ea000008	 b           |$LN40@SDHCContro@2|
  03918		 |$LN39@SDHCContro@2|
  03918	e3a03c06	 mov         r3, #6, 24
  0391c	e3833028	 orr         r3, r3, #0x28
  03920	e59f21b4	 ldr         r2, [pc, #0x1B4]
  03924	e59f11ac	 ldr         r1, [pc, #0x1AC]
  03928	e59f01a4	 ldr         r0, [pc, #0x1A4]
  0392c	eb000000	 bl          NKDbgPrintfW
  03930	e6000010	 __debugbreak_ce
  03934	e3a03000	 mov         r3, #0
  03938	e58d306c	 str         r3, [sp, #0x6C]
  0393c		 |$LN40@SDHCContro@2|

; 1577 :             // indicate that the card is interrupting
; 1578 :             DEBUGMSG(SHC_INTERRUPT_ZONE, (TEXT("CSDIOControllerBase::SDHCControllerIstThread: got SDIO interrupt!\r\n")));

  0393c	e59f3184	 ldr         r3, [pc, #0x184]
  03940	e5933440	 ldr         r3, [r3, #0x440]
  03944	e3130001	 tst         r3, #1
  03948	0a000004	 beq         |$LN41@SDHCContro@2|
  0394c	e59f017c	 ldr         r0, [pc, #0x17C]
  03950	eb000000	 bl          NKDbgPrintfW
  03954	e3a03001	 mov         r3, #1
  03958	e58d3070	 str         r3, [sp, #0x70]
  0395c	ea000001	 b           |$LN42@SDHCContro@2|
  03960		 |$LN41@SDHCContro@2|
  03960	e3a03000	 mov         r3, #0
  03964	e58d3070	 str         r3, [sp, #0x70]
  03968		 |$LN42@SDHCContro@2|

; 1579 :             DEBUGMSG(SHC_SDBUS_INTERACT_ZONE, (TEXT("Received SDIO interrupt\r\n")));

  03968	e59f3158	 ldr         r3, [pc, #0x158]
  0396c	e5933440	 ldr         r3, [r3, #0x440]
  03970	e3130040	 tst         r3, #0x40
  03974	0a000004	 beq         |$LN43@SDHCContro@2|
  03978	e59f014c	 ldr         r0, [pc, #0x14C]
  0397c	eb000000	 bl          NKDbgPrintfW
  03980	e3a03001	 mov         r3, #1
  03984	e58d3074	 str         r3, [sp, #0x74]
  03988	ea000001	 b           |$LN44@SDHCContro@2|
  0398c		 |$LN43@SDHCContro@2|
  0398c	e3a03000	 mov         r3, #0
  03990	e58d3074	 str         r3, [sp, #0x74]
  03994		 |$LN44@SDHCContro@2|

; 1580 : 
; 1581 :             // disable the SDIO interrupt
; 1582 :             EnterCriticalSection( &m_critSec );

  03994	e59d3084	 ldr         r3, [sp, #0x84]
  03998	e28300b0	 add         r0, r3, #0xB0
  0399c	eb000000	 bl          EnterCriticalSection

; 1583 :             CLRREG32(&m_pbRegisters->MMCHS_IE, MMCHS_IE_CIRQ);

  039a0	e59d3084	 ldr         r3, [sp, #0x84]
  039a4	e2833f57	 add         r3, r3, #0x57, 30
  039a8	e5933000	 ldr         r3, [r3]
  039ac	e2833f4d	 add         r3, r3, #0x4D, 30
  039b0	e5932000	 ldr         r2, [r3]
  039b4	e3e03c01	 mvn         r3, #1, 24
  039b8	e0022003	 and         r2, r2, r3
  039bc	e59d3084	 ldr         r3, [sp, #0x84]
  039c0	e2833f57	 add         r3, r3, #0x57, 30
  039c4	e5933000	 ldr         r3, [r3]
  039c8	e2833f4d	 add         r3, r3, #0x4D, 30
  039cc	e5832000	 str         r2, [r3]

; 1584 :             LeaveCriticalSection( &m_critSec );

  039d0	e59d3084	 ldr         r3, [sp, #0x84]
  039d4	e28300b0	 add         r0, r3, #0xB0
  039d8	eb000000	 bl          LeaveCriticalSection

; 1585 : 
; 1586 :             // notify the SDBusDriver of the SDIO interrupt
; 1587 :             m_fSDIOInterruptInService = TRUE;

  039dc	e59d3084	 ldr         r3, [sp, #0x84]
  039e0	e28320d8	 add         r2, r3, #0xD8
  039e4	e3a03001	 mov         r3, #1
  039e8	e5823000	 str         r3, [r2]

; 1588 :             SDHCDIndicateSlotStateChange(m_pHCContext, 0, DeviceInterrupting);

  039ec	e3a02003	 mov         r2, #3
  039f0	e3a01000	 mov         r1, #0
  039f4	e59d3084	 ldr         r3, [sp, #0x84]
  039f8	e28330a8	 add         r3, r3, #0xA8
  039fc	e5930000	 ldr         r0, [r3]
  03a00	eb000000	 bl          SDHCDIndicateSlotStateChange
  03a04		 |$LN3@SDHCContro@2|

; 1589 :             }
; 1590 : 
; 1591 :         UpdateSystemClock(FALSE);

  03a04	e3a01000	 mov         r1, #0
  03a08	e59d0084	 ldr         r0, [sp, #0x84]
  03a0c	eb000000	 bl          |?UpdateSystemClock@CSDIOControllerBase@@QAAHH@Z|

; 1592 :         InterruptDone( m_dwControllerSysIntr );

  03a10	e59d3084	 ldr         r3, [sp, #0x84]
  03a14	e2833f4d	 add         r3, r3, #0x4D, 30
  03a18	e5930000	 ldr         r0, [r3]
  03a1c	eb000000	 bl          InterruptDone

; 1593 : 
; 1594 :         if (eNextState == COMMAND_TRANSFER_STATE)

  03a20	e59d300c	 ldr         r3, [sp, #0xC]
  03a24	e3530001	 cmp         r3, #1
  03a28	1a000011	 bne         |$LN2@SDHCContro@2|

; 1595 :             {
; 1596 :             // We need to release the clock once more when a command is completed because the 
; 1597 :             // we requested the clock before sending out a command the via normal path and didn't 
; 1598 :             // release the clock there. We also request the clock again when interrupt occurs, to make
; 1599 :             // sure the clock is on to avoid crash, so we need to release the clock twice when
; 1600 :             // a command is completed.
; 1601 :             //RETAILMSG(1, (TEXT("=2===========> %d %d\r\n"), eNextState, m_dwClockCnt ));
; 1602 :         UpdateSystemClock(FALSE);

  03a2c	e3a01000	 mov         r1, #0
  03a30	e59d0084	 ldr         r0, [sp, #0x84]
  03a34	eb000000	 bl          |?UpdateSystemClock@CSDIOControllerBase@@QAAHH@Z|

; 1603 :             m_bCommandPending = FALSE;

  03a38	e59d3084	 ldr         r3, [sp, #0x84]
  03a3c	e2832f7e	 add         r2, r3, #0x7E, 30
  03a40	e3a03000	 mov         r3, #0
  03a44	e5823000	 str         r3, [r2]

; 1604 :             if (pRequest != NULL) 

  03a48	e59d3008	 ldr         r3, [sp, #8]
  03a4c	e3530000	 cmp         r3, #0
  03a50	0a000007	 beq         |$LN1@SDHCContro@2|

; 1605 :                 {
; 1606 :                 SDHCDIndicateBusRequestComplete(m_pHCContext, pRequest, status);

  03a54	e59d2010	 ldr         r2, [sp, #0x10]
  03a58	e59d1008	 ldr         r1, [sp, #8]
  03a5c	e59d3084	 ldr         r3, [sp, #0x84]
  03a60	e28330a8	 add         r3, r3, #0xA8
  03a64	e5930000	 ldr         r0, [r3]
  03a68	eb000000	 bl          SDHCDIndicateBusRequestComplete

; 1607 :                 pRequest = NULL;

  03a6c	e3a03000	 mov         r3, #0
  03a70	e58d3008	 str         r3, [sp, #8]
  03a74		 |$LN1@SDHCContro@2|
  03a74		 |$LN2@SDHCContro@2|

; 1608 :                 }
; 1609 :             }
; 1610 : 
; 1611 :         eCurrentState = eNextState;

  03a74	e59d300c	 ldr         r3, [sp, #0xC]
  03a78	e58d3014	 str         r3, [sp, #0x14]

; 1612 :     }

  03a7c	eafffeb7	 b           |$LN48@SDHCContro@2|
  03a80		 |$LN16@SDHCContro@2|

; 1613 : 
; 1614 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("SDHCCardDetectIstThread: Thread Exiting\r\n")));

  03a80	e59f3040	 ldr         r3, [pc, #0x40]
  03a84	e5933440	 ldr         r3, [r3, #0x440]
  03a88	e3130a02	 tst         r3, #2, 20
  03a8c	0a000004	 beq         |$LN45@SDHCContro@2|
  03a90	e59f002c	 ldr         r0, [pc, #0x2C]
  03a94	eb000000	 bl          NKDbgPrintfW
  03a98	e3a03001	 mov         r3, #1
  03a9c	e58d3078	 str         r3, [sp, #0x78]
  03aa0	ea000001	 b           |$LN46@SDHCContro@2|
  03aa4		 |$LN45@SDHCContro@2|
  03aa4	e3a03000	 mov         r3, #0
  03aa8	e58d3078	 str         r3, [sp, #0x78]
  03aac		 |$LN46@SDHCContro@2|

; 1615 :     return 0;

  03aac	e3a03000	 mov         r3, #0
  03ab0	e58d3018	 str         r3, [sp, #0x18]

; 1616 : }

  03ab4	e59d0018	 ldr         r0, [sp, #0x18]
  03ab8	e28dd07c	 add         sp, sp, #0x7C
  03abc	e89d6000	 ldmia       sp, {sp, lr}
  03ac0	e12fff1e	 bx          lr
  03ac4		 |$LN59@SDHCContro@2|
  03ac4		 |$LN60@SDHCContro@2|
  03ac4	00000000	 DCD         |??_C@_1FE@LIEKDEAC@?$AAS?$AAD?$AAH?$AAC?$AAC?$AAa?$AAr?$AAd?$AAD?$AAe?$AAt?$AAe?$AAc?$AAt?$AAI?$AAs?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5@|
  03ac8		 |$LN61@SDHCContro@2|
  03ac8	00000000	 DCD         |dpCurSettings|
  03acc		 |$LN62@SDHCContro@2|
  03acc	00000000	 DCD         |??_C@_1DE@ENIDFIDN@?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAS?$AAD?$AAI?$AAO?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  03ad0		 |$LN63@SDHCContro@2|
  03ad0	00000000	 DCD         |??_C@_1II@LJLMNJCL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  03ad4		 |$LN64@SDHCContro@2|
  03ad4	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  03ad8		 |$LN65@SDHCContro@2|
  03ad8	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  03adc		 |$LN66@SDHCContro@2|
  03adc	00000000	 DCD         |??_C@_1KA@CLLCPJCJ@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  03ae0		 |$LN67@SDHCContro@2|
  03ae0	00000000	 DCD         |??_C@_1LK@CIILNCON@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC@|
  03ae4		 |$LN68@SDHCContro@2|
  03ae4	00000000	 DCD         |??_C@_1MC@HCAPPLJJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC@|
  03ae8		 |$LN69@SDHCContro@2|
  03ae8	00000000	 DCD         |??_C@_1GK@ICAAKCJA@?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAI?$AAs?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAI?$AAm?$AAp?$AAl?$AA?3?$AA?5?$AAR?$AAe?$AAg@|
  03aec		 |$LN70@SDHCContro@2|
  03aec	00000000	 DCD         |??_C@_1II@PONIODHP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  03af0		 |$LN71@SDHCContro@2|
  03af0	00000000	 DCD         |??_C@_1HE@HPLEKHDI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  03af4		 |$LN72@SDHCContro@2|
  03af4	00000000	 DCD         |??_C@_1LE@CEKGAIHL@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  03af8		 |$M45596|

			 ENDP  ; |?SDHCControllerIstThreadImpl@CSDIOControllerBase@@QAAKXZ|, CSDIOControllerBase::SDHCControllerIstThreadImpl

	EXPORT	|??_C@_1HG@KEDPGBBM@?$AAS?$AAD?$AAH?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAI?$AAs?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAG?$AAo?$AAt?$AA?5?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@BPLEJHBA@?$AAS?$AAD?$AAH?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAI?$AAs?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAG?$AAo?$AAt?$AA?5?$AAc@| [ DATA ] ; `string'
	EXPORT	|?CheckIntrStatus@CSDIOControllerBase@@QAAJKPAK@Z| ; CSDIOControllerBase::CheckIntrStatus

  000f0			 AREA	 |.pdata|, PDATA
|$T45626| DCD	|$LN19@CheckIntrS|
	DCD	0x40006904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@KEDPGBBM@?$AAS?$AAD?$AAH?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAI?$AAs?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAG?$AAo?$AAt?$AA?5?$AAc@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, "I", 0x0, "s", 0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, "(", 0x0, ")", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "G", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "c", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "p"
	DCB	0x0, "o", 0x0, "n", 0x0, "s", 0x0, "e", 0x0, " ", 0x0, "t"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@BPLEJHBA@?$AAS?$AAD?$AAH?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAI?$AAs?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAG?$AAo?$AAt?$AA?5?$AAc@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, "I", 0x0, "s", 0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, "(", 0x0, ")", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "G", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "c", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, " ", 0x0, "C", 0x0, "R", 0x0, "C", 0x0, " "
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, "!"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  03af8			 AREA	 |.text|, CODE, ARM

  03af8		 |?CheckIntrStatus@CSDIOControllerBase@@QAAJKPAK@Z| PROC ; CSDIOControllerBase::CheckIntrStatus

; 1631 : {

  03af8		 |$LN19@CheckIntrS|
  03af8	e1a0c00d	 mov         r12, sp
  03afc	e92d0007	 stmdb       sp!, {r0 - r2}
  03b00	e92d5000	 stmdb       sp!, {r12, lr}
  03b04	e24dd01c	 sub         sp, sp, #0x1C
  03b08		 |$M45623|

; 1632 :     SD_API_STATUS status        = SD_API_STATUS_PENDING;  

  03b08	e3a03001	 mov         r3, #1
  03b0c	e58d3000	 str         r3, [sp]

; 1633 :     DWORD         dwOverwrite   = 0;

  03b10	e3a03000	 mov         r3, #0
  03b14	e58d3004	 str         r3, [sp, #4]

; 1634 : 
; 1635 :     if( dwIntrStatus & MMCHS_STAT_CCRC ) // command CRC error

  03b18	e59d3028	 ldr         r3, [sp, #0x28]
  03b1c	e3130802	 tst         r3, #2, 16
  03b20	0a00000f	 beq         |$LN6@CheckIntrS|

; 1636 :         {
; 1637 :         status = SD_API_STATUS_CRC_ERROR;

  03b24	e3a03137	 mov         r3, #0x37, 2
  03b28	e58d3000	 str         r3, [sp]

; 1638 :         dwOverwrite |= MMCHS_STAT_CCRC;

  03b2c	e59d3004	 ldr         r3, [sp, #4]
  03b30	e3833802	 orr         r3, r3, #2, 16
  03b34	e58d3004	 str         r3, [sp, #4]

; 1639 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDHControllerIstThread() - Got command CRC error!\r\n")));

  03b38	e59f3154	 ldr         r3, [pc, #0x154]
  03b3c	e5933440	 ldr         r3, [r3, #0x440]
  03b40	e3130902	 tst         r3, #2, 18
  03b44	0a000004	 beq         |$LN9@CheckIntrS|
  03b48	e59f0148	 ldr         r0, [pc, #0x148]
  03b4c	eb000000	 bl          NKDbgPrintfW
  03b50	e3a03001	 mov         r3, #1
  03b54	e58d300c	 str         r3, [sp, #0xC]
  03b58	ea000001	 b           |$LN10@CheckIntrS|
  03b5c		 |$LN9@CheckIntrS|
  03b5c	e3a03000	 mov         r3, #0
  03b60	e58d300c	 str         r3, [sp, #0xC]
  03b64		 |$LN10@CheckIntrS|
  03b64		 |$LN6@CheckIntrS|

; 1640 :         }
; 1641 :     if( dwIntrStatus & MMCHS_STAT_CTO ) // command response timeout

  03b64	e59d3028	 ldr         r3, [sp, #0x28]
  03b68	e3130801	 tst         r3, #1, 16
  03b6c	0a00000f	 beq         |$LN5@CheckIntrS|

; 1642 :     {
; 1643 :         status = SD_API_STATUS_RESPONSE_TIMEOUT;

  03b70	e3a03153	 mov         r3, #0x53, 2
  03b74	e58d3000	 str         r3, [sp]

; 1644 :         dwOverwrite |= MMCHS_STAT_CTO;

  03b78	e59d3004	 ldr         r3, [sp, #4]
  03b7c	e3833801	 orr         r3, r3, #1, 16
  03b80	e58d3004	 str         r3, [sp, #4]

; 1645 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDHControllerIstThread() - Got command response timeout!\r\n")));

  03b84	e59f3108	 ldr         r3, [pc, #0x108]
  03b88	e5933440	 ldr         r3, [r3, #0x440]
  03b8c	e3130902	 tst         r3, #2, 18
  03b90	0a000004	 beq         |$LN11@CheckIntrS|
  03b94	e59f00f4	 ldr         r0, [pc, #0xF4]
  03b98	eb000000	 bl          NKDbgPrintfW
  03b9c	e3a03001	 mov         r3, #1
  03ba0	e58d3010	 str         r3, [sp, #0x10]
  03ba4	ea000001	 b           |$LN12@CheckIntrS|
  03ba8		 |$LN11@CheckIntrS|
  03ba8	e3a03000	 mov         r3, #0
  03bac	e58d3010	 str         r3, [sp, #0x10]
  03bb0		 |$LN12@CheckIntrS|
  03bb0		 |$LN5@CheckIntrS|

; 1646 :         }
; 1647 :     if( dwIntrStatus & MMCHS_STAT_DTO ) // data timeout

  03bb0	e59d3028	 ldr         r3, [sp, #0x28]
  03bb4	e3130601	 tst         r3, #1, 12
  03bb8	0a00000f	 beq         |$LN4@CheckIntrS|

; 1648 :         {
; 1649 :         status = SD_API_STATUS_RESPONSE_TIMEOUT;

  03bbc	e3a03153	 mov         r3, #0x53, 2
  03bc0	e58d3000	 str         r3, [sp]

; 1650 :         dwOverwrite |= MMCHS_STAT_DTO;

  03bc4	e59d3004	 ldr         r3, [sp, #4]
  03bc8	e3833601	 orr         r3, r3, #1, 12
  03bcc	e58d3004	 str         r3, [sp, #4]

; 1651 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDHControllerIstThread() - Got command response timeout!\r\n")));

  03bd0	e59f30bc	 ldr         r3, [pc, #0xBC]
  03bd4	e5933440	 ldr         r3, [r3, #0x440]
  03bd8	e3130902	 tst         r3, #2, 18
  03bdc	0a000004	 beq         |$LN13@CheckIntrS|
  03be0	e59f00a8	 ldr         r0, [pc, #0xA8]
  03be4	eb000000	 bl          NKDbgPrintfW
  03be8	e3a03001	 mov         r3, #1
  03bec	e58d3014	 str         r3, [sp, #0x14]
  03bf0	ea000001	 b           |$LN14@CheckIntrS|
  03bf4		 |$LN13@CheckIntrS|
  03bf4	e3a03000	 mov         r3, #0
  03bf8	e58d3014	 str         r3, [sp, #0x14]
  03bfc		 |$LN14@CheckIntrS|
  03bfc		 |$LN4@CheckIntrS|

; 1652 :         }
; 1653 :     if( dwIntrStatus & MMCHS_STAT_DCRC ) // data CRC error

  03bfc	e59d3028	 ldr         r3, [sp, #0x28]
  03c00	e3130602	 tst         r3, #2, 12
  03c04	0a00000f	 beq         |$LN3@CheckIntrS|

; 1654 :         {
; 1655 :         status = SD_API_STATUS_RESPONSE_TIMEOUT;

  03c08	e3a03153	 mov         r3, #0x53, 2
  03c0c	e58d3000	 str         r3, [sp]

; 1656 :         dwOverwrite |= MMCHS_STAT_DCRC;

  03c10	e59d3004	 ldr         r3, [sp, #4]
  03c14	e3833602	 orr         r3, r3, #2, 12
  03c18	e58d3004	 str         r3, [sp, #4]

; 1657 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDHControllerIstThread() - Got command response timeout!\r\n")));

  03c1c	e59f3070	 ldr         r3, [pc, #0x70]
  03c20	e5933440	 ldr         r3, [r3, #0x440]
  03c24	e3130902	 tst         r3, #2, 18
  03c28	0a000004	 beq         |$LN15@CheckIntrS|
  03c2c	e59f005c	 ldr         r0, [pc, #0x5C]
  03c30	eb000000	 bl          NKDbgPrintfW
  03c34	e3a03001	 mov         r3, #1
  03c38	e58d3018	 str         r3, [sp, #0x18]
  03c3c	ea000001	 b           |$LN16@CheckIntrS|
  03c40		 |$LN15@CheckIntrS|
  03c40	e3a03000	 mov         r3, #0
  03c44	e58d3018	 str         r3, [sp, #0x18]
  03c48		 |$LN16@CheckIntrS|
  03c48		 |$LN3@CheckIntrS|

; 1658 :         }
; 1659 :     if( dwOverwrite ) // clear the status error bits

  03c48	e59d3004	 ldr         r3, [sp, #4]
  03c4c	e3530000	 cmp         r3, #0
  03c50	0a000002	 beq         |$LN2@CheckIntrS|

; 1660 :         {
; 1661 :         Write_MMC_STAT(dwOverwrite);

  03c54	e59d1004	 ldr         r1, [sp, #4]
  03c58	e59d0024	 ldr         r0, [sp, #0x24]
  03c5c	eb000000	 bl          |?Write_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|
  03c60		 |$LN2@CheckIntrS|

; 1662 :         }
; 1663 : 
; 1664 :     if (pOverwrite != NULL)

  03c60	e59d302c	 ldr         r3, [sp, #0x2C]
  03c64	e3530000	 cmp         r3, #0
  03c68	0a000002	 beq         |$LN1@CheckIntrS|

; 1665 :         {
; 1666 :         *pOverwrite = dwOverwrite;

  03c6c	e59d2004	 ldr         r2, [sp, #4]
  03c70	e59d302c	 ldr         r3, [sp, #0x2C]
  03c74	e5832000	 str         r2, [r3]
  03c78		 |$LN1@CheckIntrS|

; 1667 :         }
; 1668 : 
; 1669 :     return status;

  03c78	e59d3000	 ldr         r3, [sp]
  03c7c	e58d3008	 str         r3, [sp, #8]

; 1670 : }

  03c80	e59d0008	 ldr         r0, [sp, #8]
  03c84	e28dd01c	 add         sp, sp, #0x1C
  03c88	e89d6000	 ldmia       sp, {sp, lr}
  03c8c	e12fff1e	 bx          lr
  03c90		 |$LN20@CheckIntrS|
  03c90		 |$LN21@CheckIntrS|
  03c90	00000000	 DCD         |??_C@_1HG@KEDPGBBM@?$AAS?$AAD?$AAH?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAI?$AAs?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAG?$AAo?$AAt?$AA?5?$AAc@|
  03c94		 |$LN22@CheckIntrS|
  03c94	00000000	 DCD         |dpCurSettings|
  03c98		 |$LN23@CheckIntrS|
  03c98	00000000	 DCD         |??_C@_1GI@BPLEJHBA@?$AAS?$AAD?$AAH?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAI?$AAs?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAG?$AAo?$AAt?$AA?5?$AAc@|
  03c9c		 |$M45624|

			 ENDP  ; |?CheckIntrStatus@CSDIOControllerBase@@QAAJKPAK@Z|, CSDIOControllerBase::CheckIntrStatus

	EXPORT	|?ProcessCommandTransferStatus@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@JK@Z| ; CSDIOControllerBase::ProcessCommandTransferStatus
	EXPORT	|??_C@_1JG@COCDFBMJ@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAT?$AAr?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LM@FKCHLBGK@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAT?$AAr?$AAa@| [ DATA ] ; `string'
	EXPORT	|?TransmitHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@PAW4SDHCCONTROLLERIST_STATE@@@Z| ; CSDIOControllerBase::TransmitHandler
	EXPORT	|??_C@_1KK@MHCIAMFA@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAT?$AAr?$AAa@| [ DATA ] ; `string'
	EXPORT	|?ReceiveHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@PAW4SDHCCONTROLLERIST_STATE@@@Z| ; CSDIOControllerBase::ReceiveHandler
	EXPORT	|??_C@_1IO@NDIJHNLB@?$AAS?$AAD?$AAH?$AAC?$AAD?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@| [ DATA ] ; `string'
	EXPORT	|?GetCommandResponse@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z| ; CSDIOControllerBase::GetCommandResponse
	EXPORT	|??_C@_1HK@FCAFMKID@?$AAG?$AAe?$AAt?$AAC?$AAm?$AAd?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AAn?$AAo?$AA?5?$AAr?$AAe?$AAs?$AAp?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LI@OJJGGKHG@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAT?$AAr?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@PEBCHFBD@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAT?$AAr?$AAa@| [ DATA ] ; `string'

  000f8			 AREA	 |.pdata|, PDATA
|$T45650| DCD	|$LN39@CommandTra|
	DCD	0x4000eb04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JG@COCDFBMJ@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAT?$AAr?$AAa@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s"
	DCB	0x0, "e", 0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LM@FKCHLBGK@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAT?$AAr?$AAa@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s"
	DCB	0x0, "e", 0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "c", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "s", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KK@MHCIAMFA@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAT?$AAr?$AAa@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s"
	DCB	0x0, "e", 0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "r"
	DCB	0x0, "n", 0x0, "s", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IO@NDIJHNLB@?$AAS?$AAD?$AAH?$AAC?$AAD?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, "D", 0x0, "B", 0x0, "u"
	DCB	0x0, "s", 0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "(", 0x0, ")", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "g", 0x0, "e", 0x0, "t", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, "e"
	DCB	0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, ":", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@FCAFMKID@?$AAG?$AAe?$AAt?$AAC?$AAm?$AAd?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AAn?$AAo?$AA?5?$AAr?$AAe?$AAs?$AAp?$AAo@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "C", 0x0, "m", 0x0, "d", 0x0, "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n", 0x0, "s"
	DCB	0x0, "e", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u"
	DCB	0x0, "r", 0x0, "n", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "p"
	DCB	0x0, "o", 0x0, "n", 0x0, "s", 0x0, "e", 0x0, " ", 0x0, "("
	DCB	0x0, "n", 0x0, "o", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s"
	DCB	0x0, "p", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, "e", 0x0, " "
	DCB	0x0, "e", 0x0, "x", 0x0, "p", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, "e", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LI@OJJGGKHG@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAT?$AAr?$AAa?$AAn@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "C"
	DCB	0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "U"
	DCB	0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "g", 0x0, "e", 0x0, "t"
	DCB	0x0, "/", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " "
	DCB	0x0, "c", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "q", 0x0, "u"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@PEBCHFBD@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAT?$AAr?$AAa@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s"
	DCB	0x0, "e", 0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  03c9c			 AREA	 |.text|, CODE, ARM

  03c9c		 |?CommandTransferCompleteHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@KPAW4SDHCCONTROLLERIST_STATE@@@Z| PROC ; CSDIOControllerBase::CommandTransferCompleteHandler

; 1687 : {

  03c9c		 |$LN39@CommandTra|
  03c9c	e1a0c00d	 mov         r12, sp
  03ca0	e92d000f	 stmdb       sp!, {r0 - r3}
  03ca4	e92d5000	 stmdb       sp!, {r12, lr}
  03ca8	e24dd050	 sub         sp, sp, #0x50
  03cac		 |$M45647|

; 1688 :     SDHCCONTROLLERIST_STATE eNextControllerState = COMMAND_TRANSFER_STATE;

  03cac	e3a03001	 mov         r3, #1
  03cb0	e58d3004	 str         r3, [sp, #4]

; 1689 :     DWORD           dwStatusOverwrite = 0;

  03cb4	e3a03000	 mov         r3, #0
  03cb8	e58d3000	 str         r3, [sp]

; 1690 :     SD_API_STATUS   status            = SD_API_STATUS_PENDING;

  03cbc	e3a03001	 mov         r3, #1
  03cc0	e58d300c	 str         r3, [sp, #0xC]

; 1691 :     DWORD           MMC_STAT          = Read_MMC_STAT();

  03cc4	e59d0058	 ldr         r0, [sp, #0x58]
  03cc8	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  03ccc	e58d0018	 str         r0, [sp, #0x18]
  03cd0	e59d3018	 ldr         r3, [sp, #0x18]
  03cd4	e58d3008	 str         r3, [sp, #8]

; 1692 : 
; 1693 :     UNREFERENCED_PARAMETER(dwIntrStatus);
; 1694 : 
; 1695 :     DEBUGMSG(SHC_SDBUS_INTERACT_ZONE, (TEXT("+CSDIOControllerBase::CommandTransferCompleteHandler\r\n")));

  03cd8	e59f334c	 ldr         r3, [pc, #0x34C]
  03cdc	e5933440	 ldr         r3, [r3, #0x440]
  03ce0	e3130040	 tst         r3, #0x40
  03ce4	0a000004	 beq         |$LN23@CommandTra|
  03ce8	e59f0354	 ldr         r0, [pc, #0x354]
  03cec	eb000000	 bl          NKDbgPrintfW
  03cf0	e3a03001	 mov         r3, #1
  03cf4	e58d301c	 str         r3, [sp, #0x1C]
  03cf8	ea000001	 b           |$LN24@CommandTra|
  03cfc		 |$LN23@CommandTra|
  03cfc	e3a03000	 mov         r3, #0
  03d00	e58d301c	 str         r3, [sp, #0x1C]
  03d04		 |$LN24@CommandTra|

; 1696 : 
; 1697 :     // get and lock the current bus request
; 1698 :     if (pRequest == NULL)

  03d04	e59d305c	 ldr         r3, [sp, #0x5C]
  03d08	e3530000	 cmp         r3, #0
  03d0c	1a000011	 bne         |$LN20@CommandTra|

; 1699 :         {
; 1700 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("CSDIOControllerBase::CommandTransferCompleteHandler - Unable to get/lock current request!\r\n")));

  03d10	e59f3314	 ldr         r3, [pc, #0x314]
  03d14	e5933440	 ldr         r3, [r3, #0x440]
  03d18	e3130902	 tst         r3, #2, 18
  03d1c	0a000004	 beq         |$LN25@CommandTra|
  03d20	e59f0318	 ldr         r0, [pc, #0x318]
  03d24	eb000000	 bl          NKDbgPrintfW
  03d28	e3a03001	 mov         r3, #1
  03d2c	e58d3020	 str         r3, [sp, #0x20]
  03d30	ea000001	 b           |$LN26@CommandTra|
  03d34		 |$LN25@CommandTra|
  03d34	e3a03000	 mov         r3, #0
  03d38	e58d3020	 str         r3, [sp, #0x20]
  03d3c		 |$LN26@CommandTra|

; 1701 :         status = SD_API_STATUS_INVALID_DEVICE_REQUEST;

  03d3c	e3a03127	 mov         r3, #0x27, 2
  03d40	e58d300c	 str         r3, [sp, #0xC]

; 1702 : 
; 1703 :         Write_MMC_STAT(MMC_STAT);

  03d44	e59d1008	 ldr         r1, [sp, #8]
  03d48	e59d0058	 ldr         r0, [sp, #0x58]
  03d4c	eb000000	 bl          |?Write_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|
  03d50	ea0000a0	 b           |$LN19@CommandTra|

; 1704 : 
; 1705 :         goto TRANSFER_DONE;

  03d54	ea00009f	 b           |$TRANSFER_DONE$43035|
  03d58		 |$LN20@CommandTra|

; 1706 :         }
; 1707 : 
; 1708 :     DWORD MMC_PSTAT = INREG32(&m_pbRegisters->MMCHS_PSTATE);

  03d58	e59d3058	 ldr         r3, [sp, #0x58]
  03d5c	e2833f57	 add         r3, r3, #0x57, 30
  03d60	e5933000	 ldr         r3, [r3]
  03d64	e2833f49	 add         r3, r3, #0x49, 30
  03d68	e5933000	 ldr         r3, [r3]
  03d6c	e58d3010	 str         r3, [sp, #0x10]

; 1709 :  
; 1710 :     if ((MMC_PSTAT & MMCHS_PSTAT_DATI) && (pRequest->CommandResponse.ResponseType == ResponseR1b))

  03d70	e59d3010	 ldr         r3, [sp, #0x10]
  03d74	e3130002	 tst         r3, #2
  03d78	0a00000e	 beq         |$LN18@CommandTra|
  03d7c	e59d305c	 ldr         r3, [sp, #0x5C]
  03d80	e283301c	 add         r3, r3, #0x1C
  03d84	e5933000	 ldr         r3, [r3]
  03d88	e3530002	 cmp         r3, #2
  03d8c	1a000009	 bne         |$LN18@CommandTra|

; 1711 :         {
; 1712 :         if (!( MMC_STAT & ( MMCHS_STAT_CCRC | MMCHS_STAT_CTO | MMCHS_STAT_DCRC | MMCHS_STAT_DTO) ))

  03d90	e59d3008	 ldr         r3, [sp, #8]
  03d94	e3130833	 tst         r3, #0x33, 16
  03d98	1a000006	 bne         |$LN17@CommandTra|

; 1713 :             {
; 1714 :             eNextControllerState = CARDBUSY_STATE;

  03d9c	e3a03004	 mov         r3, #4
  03da0	e58d3004	 str         r3, [sp, #4]

; 1715 : 
; 1716 :             Write_MMC_STAT(MMC_STAT);

  03da4	e59d1008	 ldr         r1, [sp, #8]
  03da8	e59d0058	 ldr         r0, [sp, #0x58]
  03dac	eb000000	 bl          |?Write_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|
  03db0	ea000090	 b           |$LN16@CommandTra|

; 1717 : 
; 1718 :             goto cleanUp;

  03db4	ea00008f	 b           |$cleanUp$43041|
  03db8		 |$LN17@CommandTra|
  03db8		 |$LN18@CommandTra|

; 1719 :             }
; 1720 :         }
; 1721 : 
; 1722 :     status = CheckIntrStatus(MMC_STAT, &dwStatusOverwrite);

  03db8	e28d2000	 add         r2, sp, #0
  03dbc	e59d1008	 ldr         r1, [sp, #8]
  03dc0	e59d0058	 ldr         r0, [sp, #0x58]
  03dc4	eb000000	 bl          |?CheckIntrStatus@CSDIOControllerBase@@QAAJKPAK@Z|
  03dc8	e58d0024	 str         r0, [sp, #0x24]
  03dcc	e59d3024	 ldr         r3, [sp, #0x24]
  03dd0	e58d300c	 str         r3, [sp, #0xC]

; 1723 : 
; 1724 :     if (dwStatusOverwrite != 0)

  03dd4	e59d3000	 ldr         r3, [sp]
  03dd8	e3530000	 cmp         r3, #0
  03ddc	0a000001	 beq         |$LN15@CommandTra|
  03de0	ea00007c	 b           |$LN14@CommandTra|

; 1725 :         {
; 1726 :         goto TRANSFER_DONE;

  03de4	ea00007b	 b           |$TRANSFER_DONE$43035|
  03de8		 |$LN15@CommandTra|

; 1727 :         }
; 1728 : 
; 1729 :     // get the response information
; 1730 :     if(pRequest->CommandResponse.ResponseType == NoResponse)

  03de8	e59d305c	 ldr         r3, [sp, #0x5C]
  03dec	e283301c	 add         r3, r3, #0x1C
  03df0	e5933000	 ldr         r3, [r3]
  03df4	e3530000	 cmp         r3, #0
  03df8	1a00000d	 bne         |$LN13@CommandTra|

; 1731 :         {
; 1732 :         DEBUGMSG (SHC_SDBUS_INTERACT_ZONE,(TEXT("GetCmdResponse returned no response (no response expected)\r\n")));

  03dfc	e59f3228	 ldr         r3, [pc, #0x228]
  03e00	e5933440	 ldr         r3, [r3, #0x440]
  03e04	e3130040	 tst         r3, #0x40
  03e08	0a000004	 beq         |$LN27@CommandTra|
  03e0c	e59f0228	 ldr         r0, [pc, #0x228]
  03e10	eb000000	 bl          NKDbgPrintfW
  03e14	e3a03001	 mov         r3, #1
  03e18	e58d3028	 str         r3, [sp, #0x28]
  03e1c	ea000001	 b           |$LN28@CommandTra|
  03e20		 |$LN27@CommandTra|
  03e20	e3a03000	 mov         r3, #0
  03e24	e58d3028	 str         r3, [sp, #0x28]
  03e28		 |$LN28@CommandTra|

; 1733 :         goto TRANSFER_DONE;

  03e28	ea00006a	 b           |$LN12@CommandTra|
  03e2c	ea000069	 b           |$TRANSFER_DONE$43035|

; 1734 :         }
; 1735 :     else

  03e30	ea000019	 b           |$LN11@CommandTra|
  03e34		 |$LN13@CommandTra|

; 1736 :         {
; 1737 :         status =  GetCommandResponse(pRequest);

  03e34	e59d105c	 ldr         r1, [sp, #0x5C]
  03e38	e59d0058	 ldr         r0, [sp, #0x58]
  03e3c	eb000000	 bl          |?GetCommandResponse@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z|
  03e40	e58d002c	 str         r0, [sp, #0x2C]
  03e44	e59d302c	 ldr         r3, [sp, #0x2C]
  03e48	e58d300c	 str         r3, [sp, #0xC]

; 1738 :         if(!SD_API_SUCCESS(status))

  03e4c	e59d300c	 ldr         r3, [sp, #0xC]
  03e50	e3530000	 cmp         r3, #0
  03e54	aa000010	 bge         |$LN10@CommandTra|

; 1739 :             {
; 1740 :             DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDHCDBusRequestHandler() - Error getting response for command:0x%02x\r\n"), pRequest->CommandCode));

  03e58	e59f31cc	 ldr         r3, [pc, #0x1CC]
  03e5c	e5933440	 ldr         r3, [r3, #0x440]
  03e60	e3130902	 tst         r3, #2, 18
  03e64	0a000008	 beq         |$LN29@CommandTra|
  03e68	e59d305c	 ldr         r3, [sp, #0x5C]
  03e6c	e2833014	 add         r3, r3, #0x14
  03e70	e5d33000	 ldrb        r3, [r3]
  03e74	e1a01003	 mov         r1, r3
  03e78	e59f01b8	 ldr         r0, [pc, #0x1B8]
  03e7c	eb000000	 bl          NKDbgPrintfW
  03e80	e3a03001	 mov         r3, #1
  03e84	e58d3030	 str         r3, [sp, #0x30]
  03e88	ea000001	 b           |$LN30@CommandTra|
  03e8c		 |$LN29@CommandTra|
  03e8c	e3a03000	 mov         r3, #0
  03e90	e58d3030	 str         r3, [sp, #0x30]
  03e94		 |$LN30@CommandTra|

; 1741 :             goto TRANSFER_DONE;

  03e94	ea00004f	 b           |$LN9@CommandTra|
  03e98	ea00004e	 b           |$TRANSFER_DONE$43035|
  03e9c		 |$LN10@CommandTra|
  03e9c		 |$LN11@CommandTra|

; 1742 :             }
; 1743 :         }
; 1744 : 
; 1745 :     switch(pRequest->TransferClass)

  03e9c	e59d305c	 ldr         r3, [sp, #0x5C]
  03ea0	e2833010	 add         r3, r3, #0x10
  03ea4	e5933000	 ldr         r3, [r3]
  03ea8	e58d3034	 str         r3, [sp, #0x34]
  03eac	e59d3034	 ldr         r3, [sp, #0x34]
  03eb0	e3530000	 cmp         r3, #0
  03eb4	0a000003	 beq         |$LN6@CommandTra|
  03eb8	e59d3034	 ldr         r3, [sp, #0x34]
  03ebc	e3530001	 cmp         r3, #1
  03ec0	0a000015	 beq         |$LN5@CommandTra|
  03ec4	ea000029	 b           |$LN4@CommandTra|
  03ec8		 |$LN6@CommandTra|

; 1746 :         {
; 1747 :         case SD_READ:
; 1748 :             status = ReceiveHandler(pRequest, &eNextControllerState);

  03ec8	e28d2004	 add         r2, sp, #4
  03ecc	e59d105c	 ldr         r1, [sp, #0x5C]
  03ed0	e59d0058	 ldr         r0, [sp, #0x58]
  03ed4	eb000000	 bl          |?ReceiveHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@PAW4SDHCCONTROLLERIST_STATE@@@Z|
  03ed8	e58d0038	 str         r0, [sp, #0x38]
  03edc	e59d3038	 ldr         r3, [sp, #0x38]
  03ee0	e58d300c	 str         r3, [sp, #0xC]

; 1749 :             DEBUGMSG (SHC_SDBUS_INTERACT_ZONE, (TEXT("+CSDIOControllerBase::CommandTransferCompleteHandler ReceiveHandler returns %d, %d\r\n"), status, eNextControllerState));

  03ee4	e59f3140	 ldr         r3, [pc, #0x140]
  03ee8	e5933440	 ldr         r3, [r3, #0x440]
  03eec	e3130040	 tst         r3, #0x40
  03ef0	0a000006	 beq         |$LN31@CommandTra|
  03ef4	e59d2004	 ldr         r2, [sp, #4]
  03ef8	e59d100c	 ldr         r1, [sp, #0xC]
  03efc	e59f0130	 ldr         r0, [pc, #0x130]
  03f00	eb000000	 bl          NKDbgPrintfW
  03f04	e3a03001	 mov         r3, #1
  03f08	e58d303c	 str         r3, [sp, #0x3C]
  03f0c	ea000001	 b           |$LN32@CommandTra|
  03f10		 |$LN31@CommandTra|
  03f10	e3a03000	 mov         r3, #0
  03f14	e58d303c	 str         r3, [sp, #0x3C]
  03f18		 |$LN32@CommandTra|

; 1750 :             break;

  03f18	ea000027	 b           |$LN7@CommandTra|
  03f1c		 |$LN5@CommandTra|

; 1751 :         case SD_WRITE:
; 1752 :             status = TransmitHandler(pRequest, &eNextControllerState);

  03f1c	e28d2004	 add         r2, sp, #4
  03f20	e59d105c	 ldr         r1, [sp, #0x5C]
  03f24	e59d0058	 ldr         r0, [sp, #0x58]
  03f28	eb000000	 bl          |?TransmitHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@PAW4SDHCCONTROLLERIST_STATE@@@Z|
  03f2c	e58d0040	 str         r0, [sp, #0x40]
  03f30	e59d3040	 ldr         r3, [sp, #0x40]
  03f34	e58d300c	 str         r3, [sp, #0xC]

; 1753 :             DEBUGMSG (SHC_SDBUS_INTERACT_ZONE, (TEXT("+CSDIOControllerBase::CommandTransferCompleteHandler calling TransmitHandler returns %d, %d\r\n"), status, eNextControllerState));

  03f38	e59f30ec	 ldr         r3, [pc, #0xEC]
  03f3c	e5933440	 ldr         r3, [r3, #0x440]
  03f40	e3130040	 tst         r3, #0x40
  03f44	0a000006	 beq         |$LN33@CommandTra|
  03f48	e59d2004	 ldr         r2, [sp, #4]
  03f4c	e59d100c	 ldr         r1, [sp, #0xC]
  03f50	e59f00d8	 ldr         r0, [pc, #0xD8]
  03f54	eb000000	 bl          NKDbgPrintfW
  03f58	e3a03001	 mov         r3, #1
  03f5c	e58d3044	 str         r3, [sp, #0x44]
  03f60	ea000001	 b           |$LN34@CommandTra|
  03f64		 |$LN33@CommandTra|
  03f64	e3a03000	 mov         r3, #0
  03f68	e58d3044	 str         r3, [sp, #0x44]
  03f6c		 |$LN34@CommandTra|

; 1754 :             break;

  03f6c	ea000012	 b           |$LN7@CommandTra|
  03f70		 |$LN4@CommandTra|

; 1755 :         default:
; 1756 :             MMC_STAT = Read_MMC_STAT();

  03f70	e59d0058	 ldr         r0, [sp, #0x58]
  03f74	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  03f78	e58d0048	 str         r0, [sp, #0x48]
  03f7c	e59d3048	 ldr         r3, [sp, #0x48]
  03f80	e58d3008	 str         r3, [sp, #8]

; 1757 :             Write_MMC_STAT(MMC_STAT);

  03f84	e59d1008	 ldr         r1, [sp, #8]
  03f88	e59d0058	 ldr         r0, [sp, #0x58]
  03f8c	eb000000	 bl          |?Write_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|

; 1758 :             DEBUGMSG (SHC_SDBUS_INTERACT_ZONE, (TEXT("+CSDIOControllerBase::CommandTransferCompleteHandler: command completed.\r\n")));

  03f90	e59f3094	 ldr         r3, [pc, #0x94]
  03f94	e5933440	 ldr         r3, [r3, #0x440]
  03f98	e3130040	 tst         r3, #0x40
  03f9c	0a000004	 beq         |$LN35@CommandTra|
  03fa0	e59f0080	 ldr         r0, [pc, #0x80]
  03fa4	eb000000	 bl          NKDbgPrintfW
  03fa8	e3a03001	 mov         r3, #1
  03fac	e58d304c	 str         r3, [sp, #0x4C]
  03fb0	ea000001	 b           |$LN36@CommandTra|
  03fb4		 |$LN35@CommandTra|
  03fb4	e3a03000	 mov         r3, #0
  03fb8	e58d304c	 str         r3, [sp, #0x4C]
  03fbc		 |$LN36@CommandTra|
  03fbc		 |$LN7@CommandTra|

; 1759 :             break;
; 1760 :         }
; 1761 : 
; 1762 :     if(!m_fCardPresent)

  03fbc	e59d3058	 ldr         r3, [sp, #0x58]
  03fc0	e28330f0	 add         r3, r3, #0xF0
  03fc4	e5933000	 ldr         r3, [r3]
  03fc8	e3530000	 cmp         r3, #0
  03fcc	1a000001	 bne         |$LN3@CommandTra|

; 1763 :         {
; 1764 :         status = SD_API_STATUS_DEVICE_REMOVED;

  03fd0	e3a03147	 mov         r3, #0x47, 2
  03fd4	e58d300c	 str         r3, [sp, #0xC]
  03fd8		 |$LN3@CommandTra|
  03fd8		 |$LN9@CommandTra|
  03fd8		 |$LN12@CommandTra|
  03fd8		 |$LN14@CommandTra|
  03fd8		 |$LN19@CommandTra|
  03fd8		 |$TRANSFER_DONE$43035|

; 1765 :         }
; 1766 : 
; 1767 : TRANSFER_DONE:
; 1768 : 
; 1769 :     if (eNextControllerState == COMMAND_TRANSFER_STATE)

  03fd8	e59d3004	 ldr         r3, [sp, #4]
  03fdc	e3530001	 cmp         r3, #1
  03fe0	1a000004	 bne         |$LN2@CommandTra|

; 1770 :         {
; 1771 :         ProcessCommandTransferStatus(pRequest, status, dwStatusOverwrite);

  03fe4	e59d3000	 ldr         r3, [sp]
  03fe8	e59d200c	 ldr         r2, [sp, #0xC]
  03fec	e59d105c	 ldr         r1, [sp, #0x5C]
  03ff0	e59d0058	 ldr         r0, [sp, #0x58]
  03ff4	eb000000	 bl          |?ProcessCommandTransferStatus@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@JK@Z|
  03ff8		 |$LN2@CommandTra|
  03ff8		 |$LN16@CommandTra|
  03ff8		 |$cleanUp$43041|

; 1772 :         }
; 1773 : 
; 1774 : cleanUp:
; 1775 : 
; 1776 :     if (pNextState != NULL)

  03ff8	e59d3064	 ldr         r3, [sp, #0x64]
  03ffc	e3530000	 cmp         r3, #0
  04000	0a000002	 beq         |$LN1@CommandTra|

; 1777 :         {
; 1778 :         *pNextState = eNextControllerState;

  04004	e59d2004	 ldr         r2, [sp, #4]
  04008	e59d3064	 ldr         r3, [sp, #0x64]
  0400c	e5832000	 str         r2, [r3]
  04010		 |$LN1@CommandTra|

; 1779 :         }
; 1780 :     
; 1781 :     return status;

  04010	e59d300c	 ldr         r3, [sp, #0xC]
  04014	e58d3014	 str         r3, [sp, #0x14]

; 1782 : }

  04018	e59d0014	 ldr         r0, [sp, #0x14]
  0401c	e28dd050	 add         sp, sp, #0x50
  04020	e89d6000	 ldmia       sp, {sp, lr}
  04024	e12fff1e	 bx          lr
  04028		 |$LN40@CommandTra|
  04028		 |$LN41@CommandTra|
  04028	00000000	 DCD         |??_C@_1JG@COCDFBMJ@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAT?$AAr?$AAa@|
  0402c		 |$LN42@CommandTra|
  0402c	00000000	 DCD         |dpCurSettings|
  04030		 |$LN43@CommandTra|
  04030	00000000	 DCD         |??_C@_1LM@FKCHLBGK@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAT?$AAr?$AAa@|
  04034		 |$LN44@CommandTra|
  04034	00000000	 DCD         |??_C@_1KK@MHCIAMFA@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAT?$AAr?$AAa@|
  04038		 |$LN45@CommandTra|
  04038	00000000	 DCD         |??_C@_1IO@NDIJHNLB@?$AAS?$AAD?$AAH?$AAC?$AAD?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@|
  0403c		 |$LN46@CommandTra|
  0403c	00000000	 DCD         |??_C@_1HK@FCAFMKID@?$AAG?$AAe?$AAt?$AAC?$AAm?$AAd?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AAn?$AAo?$AA?5?$AAr?$AAe?$AAs?$AAp?$AAo@|
  04040		 |$LN47@CommandTra|
  04040	00000000	 DCD         |??_C@_1LI@OJJGGKHG@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAT?$AAr?$AAa?$AAn@|
  04044		 |$LN48@CommandTra|
  04044	00000000	 DCD         |??_C@_1GO@PEBCHFBD@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAT?$AAr?$AAa@|
  04048		 |$M45648|

			 ENDP  ; |?CommandTransferCompleteHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@KPAW4SDHCCONTROLLERIST_STATE@@@Z|, CSDIOControllerBase::CommandTransferCompleteHandler

	EXPORT	|??_C@_1IG@DEOJBMID@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAH?$AAa?$AAn?$AAd@| [ DATA ] ; `string'
	EXPORT	|?SDIPollingReceive@CSDIOControllerBase@@QAAHPAEK@Z| ; CSDIOControllerBase::SDIPollingReceive
	EXPORT	|??_C@_1IC@MLCCBHI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAH?$AAa?$AAn?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IE@CDIAGFCB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAH?$AAa?$AAn?$AAd@| [ DATA ] ; `string'
	EXPORT	|?StartDMAReceive@CSDIOControllerBase@@QAAHPAEK@Z| ; CSDIOControllerBase::StartDMAReceive
	EXPORT	|?SDIReceive@CSDIOControllerBase@@QAAHPAEKH@Z| ; CSDIOControllerBase::SDIReceive
	EXPORT	|??_C@_1HE@HKBDPKB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAH?$AAa?$AAn?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@KHPMAJH@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAH?$AAa?$AAn?$AAd@| [ DATA ] ; `string'
	IMPORT	|SDProcessException|
	IMPORT	|__C_specific_handler|

  00100			 AREA	 |.pdata|, PDATA
|$T45689| DCD	|$LN34@ReceiveHan|
	DCD	0xc0009305
|$T45691| DCD	|$LN24@ReceiveHan|
	DCD	0x40001002

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IG@DEOJBMID@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAH?$AAa?$AAn?$AAd@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "R", 0x0, "e", 0x0, "c", 0x0, "e"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, "H", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P", 0x0, "o"
	DCB	0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "(", 0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@MLCCBHI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAH?$AAa?$AAn?$AAd@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "R", 0x0, "e", 0x0, "c", 0x0, "e"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, "H", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " "
	DCB	0x0, "c", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "R", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@CDIAGFCB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAH?$AAa?$AAn?$AAd@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "R", 0x0, "e", 0x0, "c", 0x0, "e"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, "H", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " "
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "D"
	DCB	0x0, "M", 0x0, "A", 0x0, "R", 0x0, "e", 0x0, "c", 0x0, "e"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "s", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@HKBDPKB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAH?$AAa?$AAn?$AAd@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "R", 0x0, "e", 0x0, "c", 0x0, "e"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, "H", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " "
	DCB	0x0, "c", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@KHPMAJH@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAH?$AAa?$AAn?$AAd@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "R", 0x0, "e", 0x0, "c", 0x0, "e"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, "H", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " "
	DCB	0x0, "c", 0x0, "b", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "=", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.xdata|, DATA
|$T45687| DCD	0x1
	DCD	|$LN28@ReceiveHan|
	DCD	|$LN29@ReceiveHan|
	DCD	|$LN24@ReceiveHan|
	DCD	|$LN25@ReceiveHan|
; Function compile flags: /Odtp

  04048			 AREA	 |.text|, CODE, ARM

  04048	00000000	 DCD         |__C_specific_handler|
  0404c	00000000	 DCD         |$T45687|

  04050		 |?ReceiveHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@PAW4SDHCCONTROLLERIST_STATE@@@Z| PROC ; CSDIOControllerBase::ReceiveHandler

; 1796 : {

  04050		 |$LN34@ReceiveHan|
  04050	e1a0c00d	 mov         r12, sp
  04054	e92d0007	 stmdb       sp!, {r0 - r2}
  04058	e92d5800	 stmdb       sp!, {r11, r12, lr}
  0405c	e28db00c	 add         r11, sp, #0xC
  04060	e24dd044	 sub         sp, sp, #0x44
  04064		 |$LN32@ReceiveHan|

; 1797 :     SD_API_STATUS   status          = SD_API_STATUS_SUCCESS ;

  04064	e3a03000	 mov         r3, #0
  04068	e50b3048	 str         r3, [r11, #-0x48]

; 1798 :     BOOL            FastPathMode    = FALSE;

  0406c	e3a03000	 mov         r3, #0
  04070	e50b304c	 str         r3, [r11, #-0x4C]

; 1799 :     BOOL            fRet;
; 1800 : 
; 1801 :     FastPathMode = ((pRequest->SystemFlags & SD_FAST_PATH_AVAILABLE)) ? TRUE : FALSE;

  04074	e59b3004	 ldr         r3, [r11, #4]
  04078	e283300c	 add         r3, r3, #0xC
  0407c	e5933000	 ldr         r3, [r3]
  04080	e3130102	 tst         r3, #2, 2
  04084	0a000002	 beq         |$LN11@ReceiveHan|
  04088	e3a03001	 mov         r3, #1
  0408c	e50b3038	 str         r3, [r11, #-0x38]
  04090	ea000001	 b           |$LN12@ReceiveHan|
  04094		 |$LN11@ReceiveHan|
  04094	e3a03000	 mov         r3, #0
  04098	e50b3038	 str         r3, [r11, #-0x38]
  0409c		 |$LN12@ReceiveHan|
  0409c	e51b3038	 ldr         r3, [r11, #-0x38]
  040a0	e50b304c	 str         r3, [r11, #-0x4C]
  040a4		 |$LN28@ReceiveHan|

; 1802 : 
; 1803 :     __try
; 1804 :         {
; 1805 :         DWORD cbTransfer = TRANSFER_SIZE(pRequest);

  040a4	e59b3004	 ldr         r3, [r11, #4]
  040a8	e2832040	 add         r2, r3, #0x40
  040ac	e59b3004	 ldr         r3, [r11, #4]
  040b0	e283303c	 add         r3, r3, #0x3C
  040b4	e5922000	 ldr         r2, [r2]
  040b8	e5933000	 ldr         r3, [r3]
  040bc	e0030392	 mul         r3, r2, r3
  040c0	e50b3044	 str         r3, [r11, #-0x44]

; 1806 : 
; 1807 :         RETAILMSG (0, (TEXT("CSDIOControllerBase::ReceiveHandler: cbTransfer=%d\r\n"),cbTransfer));

  040c4	ea000005	 b           |$LN13@ReceiveHan|
  040c8	e51b1044	 ldr         r1, [r11, #-0x44]
  040cc	e59f0204	 ldr         r0, [pc, #0x204]
  040d0	eb000000	 bl          NKDbgPrintfW
  040d4	e3a03001	 mov         r3, #1
  040d8	e50b3034	 str         r3, [r11, #-0x34]
  040dc	ea000001	 b           |$LN14@ReceiveHan|
  040e0		 |$LN13@ReceiveHan|
  040e0	e3a03000	 mov         r3, #0
  040e4	e50b3034	 str         r3, [r11, #-0x34]
  040e8		 |$LN14@ReceiveHan|

; 1808 :         if(FastPathMode)

  040e8	e51b304c	 ldr         r3, [r11, #-0x4C]
  040ec	e3530000	 cmp         r3, #0
  040f0	0a000015	 beq         |$LN7@ReceiveHan|

; 1809 :             {
; 1810 :             DEBUGMSG (SHC_SDBUS_INTERACT_ZONE, (TEXT("CSDIOControllerBase::ReceiveHandler: calling SDIReceive\r\n")));

  040f4	e59f31cc	 ldr         r3, [pc, #0x1CC]
  040f8	e5933440	 ldr         r3, [r3, #0x440]
  040fc	e3130040	 tst         r3, #0x40
  04100	0a000004	 beq         |$LN15@ReceiveHan|
  04104	e59f01c8	 ldr         r0, [pc, #0x1C8]
  04108	eb000000	 bl          NKDbgPrintfW
  0410c	e3a03001	 mov         r3, #1
  04110	e50b3030	 str         r3, [r11, #-0x30]
  04114	ea000001	 b           |$LN16@ReceiveHan|
  04118		 |$LN15@ReceiveHan|
  04118	e3a03000	 mov         r3, #0
  0411c	e50b3030	 str         r3, [r11, #-0x30]
  04120		 |$LN16@ReceiveHan|

; 1811 :             fRet = SDIReceive(pRequest->pBlockBuffer, cbTransfer, FastPathMode);

  04120	e51b304c	 ldr         r3, [r11, #-0x4C]
  04124	e51b2044	 ldr         r2, [r11, #-0x44]
  04128	e59b1004	 ldr         r1, [r11, #4]
  0412c	e2811048	 add         r1, r1, #0x48
  04130	e5911000	 ldr         r1, [r1]
  04134	e59b0000	 ldr         r0, [r11]
  04138	eb000000	 bl          |?SDIReceive@CSDIOControllerBase@@QAAHPAEKH@Z|
  0413c	e50b002c	 str         r0, [r11, #-0x2C]
  04140	e51b302c	 ldr         r3, [r11, #-0x2C]
  04144	e50b3050	 str         r3, [r11, #-0x50]

; 1812 :             }
; 1813 :         else

  04148	ea000039	 b           |$LN6@ReceiveHan|
  0414c		 |$LN7@ReceiveHan|

; 1814 :             {
; 1815 : #ifdef SDIO_DMA_ENABLED
; 1816 :             if( m_fDMATransfer )

  0414c	e59b3000	 ldr         r3, [r11]
  04150	e2833e11	 add         r3, r3, #0x11, 28
  04154	e5933000	 ldr         r3, [r3]
  04158	e3530000	 cmp         r3, #0
  0415c	0a000020	 beq         |$LN5@ReceiveHan|

; 1817 :                 {
; 1818 :                 fRet = StartDMAReceive(pRequest->pBlockBuffer, cbTransfer);

  04160	e51b2044	 ldr         r2, [r11, #-0x44]
  04164	e59b3004	 ldr         r3, [r11, #4]
  04168	e2833048	 add         r3, r3, #0x48
  0416c	e5931000	 ldr         r1, [r3]
  04170	e59b0000	 ldr         r0, [r11]
  04174	eb000000	 bl          |?StartDMAReceive@CSDIOControllerBase@@QAAHPAEK@Z|
  04178	e50b0028	 str         r0, [r11, #-0x28]
  0417c	e51b3028	 ldr         r3, [r11, #-0x28]
  04180	e50b3050	 str         r3, [r11, #-0x50]

; 1819 :                 DEBUGMSG (SHC_SDBUS_INTERACT_ZONE, (TEXT("CSDIOControllerBase::ReceiveHandler: StartDMAReceive returns %d\r\n"), fRet));

  04184	e59f313c	 ldr         r3, [pc, #0x13C]
  04188	e5933440	 ldr         r3, [r3, #0x440]
  0418c	e3130040	 tst         r3, #0x40
  04190	0a000005	 beq         |$LN17@ReceiveHan|
  04194	e51b1050	 ldr         r1, [r11, #-0x50]
  04198	e59f0130	 ldr         r0, [pc, #0x130]
  0419c	eb000000	 bl          NKDbgPrintfW
  041a0	e3a03001	 mov         r3, #1
  041a4	e50b3024	 str         r3, [r11, #-0x24]
  041a8	ea000001	 b           |$LN18@ReceiveHan|
  041ac		 |$LN17@ReceiveHan|
  041ac	e3a03000	 mov         r3, #0
  041b0	e50b3024	 str         r3, [r11, #-0x24]
  041b4		 |$LN18@ReceiveHan|

; 1820 :                 if (fRet == TRUE)

  041b4	e51b3050	 ldr         r3, [r11, #-0x50]
  041b8	e3530001	 cmp         r3, #1
  041bc	1a000007	 bne         |$LN4@ReceiveHan|

; 1821 :                     {
; 1822 :                     status = SD_API_STATUS_PENDING;

  041c0	e3a03001	 mov         r3, #1
  041c4	e50b3048	 str         r3, [r11, #-0x48]

; 1823 :                     if (peNextState != NULL)

  041c8	e59b3008	 ldr         r3, [r11, #8]
  041cc	e3530000	 cmp         r3, #0
  041d0	0a000002	 beq         |$LN3@ReceiveHan|

; 1824 :                         {
; 1825 :                         *peNextState = DATA_RECEIVE_STATE;

  041d4	e59b2008	 ldr         r2, [r11, #8]
  041d8	e3a03002	 mov         r3, #2
  041dc	e5823000	 str         r3, [r2]
  041e0		 |$LN3@ReceiveHan|
  041e0		 |$LN4@ReceiveHan|

; 1826 :                         }
; 1827 :                     }
; 1828 :                 }
; 1829 :             else

  041e0	ea000013	 b           |$LN2@ReceiveHan|
  041e4		 |$LN5@ReceiveHan|

; 1830 : #endif
; 1831 :                 {
; 1832 :                 DEBUGMSG (SHC_SDBUS_INTERACT_ZONE, (TEXT("CSDIOControllerBase::ReceiveHandler: calling SDIPollingReceive\r\n")));

  041e4	e59f30dc	 ldr         r3, [pc, #0xDC]
  041e8	e5933440	 ldr         r3, [r3, #0x440]
  041ec	e3130040	 tst         r3, #0x40
  041f0	0a000004	 beq         |$LN19@ReceiveHan|
  041f4	e59f00d0	 ldr         r0, [pc, #0xD0]
  041f8	eb000000	 bl          NKDbgPrintfW
  041fc	e3a03001	 mov         r3, #1
  04200	e50b3020	 str         r3, [r11, #-0x20]
  04204	ea000001	 b           |$LN20@ReceiveHan|
  04208		 |$LN19@ReceiveHan|
  04208	e3a03000	 mov         r3, #0
  0420c	e50b3020	 str         r3, [r11, #-0x20]
  04210		 |$LN20@ReceiveHan|

; 1833 :                 fRet = SDIPollingReceive(pRequest->pBlockBuffer, cbTransfer);

  04210	e51b2044	 ldr         r2, [r11, #-0x44]
  04214	e59b3004	 ldr         r3, [r11, #4]
  04218	e2833048	 add         r3, r3, #0x48
  0421c	e5931000	 ldr         r1, [r3]
  04220	e59b0000	 ldr         r0, [r11]
  04224	eb000000	 bl          |?SDIPollingReceive@CSDIOControllerBase@@QAAHPAEK@Z|
  04228	e50b001c	 str         r0, [r11, #-0x1C]
  0422c	e51b301c	 ldr         r3, [r11, #-0x1C]
  04230	e50b3050	 str         r3, [r11, #-0x50]
  04234		 |$LN2@ReceiveHan|
  04234		 |$LN6@ReceiveHan|
  04234		 |$LN29@ReceiveHan|

; 1834 :                 }
; 1835 :             }
; 1836 :         }

  04234	ea000002	 b           |$LN30@ReceiveHan|
  04238		 |$LN25@ReceiveHan|

; 1838 :         {
; 1839 :         fRet = FALSE;

  04238	e3a03000	 mov         r3, #0
  0423c	e50b3050	 str         r3, [r11, #-0x50]
  04240	eaffffff	 b           |$LN30@ReceiveHan|
  04244		 |$LN30@ReceiveHan|

; 1840 :         }
; 1841 : 
; 1842 :     if (!fRet)

  04244	e51b3050	 ldr         r3, [r11, #-0x50]
  04248	e3530000	 cmp         r3, #0
  0424c	1a00000c	 bne         |$LN1@ReceiveHan|

; 1843 :         {
; 1844 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("CSDIOControllerBase::ReceiveHandler - SDIPollingReceive() failed\r\n")));

  04250	e59f3070	 ldr         r3, [pc, #0x70]
  04254	e5933440	 ldr         r3, [r3, #0x440]
  04258	e3130902	 tst         r3, #2, 18
  0425c	0a000004	 beq         |$LN21@ReceiveHan|
  04260	e59f005c	 ldr         r0, [pc, #0x5C]
  04264	eb000000	 bl          NKDbgPrintfW
  04268	e3a03001	 mov         r3, #1
  0426c	e50b3010	 str         r3, [r11, #-0x10]
  04270	ea000001	 b           |$LN22@ReceiveHan|
  04274		 |$LN21@ReceiveHan|
  04274	e3a03000	 mov         r3, #0
  04278	e50b3010	 str         r3, [r11, #-0x10]
  0427c		 |$LN22@ReceiveHan|

; 1845 :         status = SD_API_STATUS_DATA_ERROR;

  0427c	e3a03133	 mov         r3, #0x33, 2
  04280	e50b3048	 str         r3, [r11, #-0x48]
  04284		 |$LN1@ReceiveHan|

; 1846 :         }
; 1847 : 
; 1848 :     return status;

  04284	e51b3048	 ldr         r3, [r11, #-0x48]
  04288	e50b303c	 str         r3, [r11, #-0x3C]
  0428c		 |$LN23@ReceiveHan|

; 1849 : }

  0428c	e51b003c	 ldr         r0, [r11, #-0x3C]
  04290	e24bd00c	 sub         sp, r11, #0xC
  04294	e89d6800	 ldmia       sp, {r11, sp, lr}
  04298	e12fff1e	 bx          lr

			 ENDP  ; |?ReceiveHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@PAW4SDHCCONTROLLERIST_STATE@@@Z|, CSDIOControllerBase::ReceiveHandler

  0429c		 |$LN24@ReceiveHan|
  0429c		 |$LN33@ReceiveHan|

; 1837 :     __except(SDProcessException(GetExceptionInformation())) 

  0429c	e52de004	 str         lr, [sp, #-4]!
  042a0	e24bb00c	 sub         r11, r11, #0xC
  042a4		 |$LN27@ReceiveHan|
  042a4		 |$LN36@ReceiveHan|
  042a4	e50b0040	 str         r0, [r11, #-0x40]
  042a8	e51b3040	 ldr         r3, [r11, #-0x40]
  042ac	e50b3018	 str         r3, [r11, #-0x18]
  042b0	e51b0018	 ldr         r0, [r11, #-0x18]
  042b4	eb000000	 bl          SDProcessException
  042b8	e50b0014	 str         r0, [r11, #-0x14]
  042bc	e51b0014	 ldr         r0, [r11, #-0x14]
  042c0		 |$LN26@ReceiveHan|
  042c0	e49df004	 ldr         pc, [sp], #4
  042c4		 |$LN38@ReceiveHan|
  042c4		 |$LN39@ReceiveHan|
  042c4	00000000	 DCD         |??_C@_1IG@DEOJBMID@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAH?$AAa?$AAn?$AAd@|
  042c8		 |$LN40@ReceiveHan|
  042c8	00000000	 DCD         |dpCurSettings|
  042cc		 |$LN41@ReceiveHan|
  042cc	00000000	 DCD         |??_C@_1IC@MLCCBHI@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAH?$AAa?$AAn?$AAd@|
  042d0		 |$LN42@ReceiveHan|
  042d0	00000000	 DCD         |??_C@_1IE@CDIAGFCB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAH?$AAa?$AAn?$AAd@|
  042d4		 |$LN43@ReceiveHan|
  042d4	00000000	 DCD         |??_C@_1HE@HKBDPKB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAH?$AAa?$AAn?$AAd@|
  042d8		 |$LN44@ReceiveHan|
  042d8	00000000	 DCD         |??_C@_1GK@KHPMAJH@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAH?$AAa?$AAn?$AAd@|
  042dc		 |$LN37@ReceiveHan|
  042dc		 |$LN35@ReceiveHan|
	EXPORT	|??_C@_1FI@EGMBENGA@?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAs?$AAe?$AAn?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@JFCCAKPF@?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAs?$AAe?$AAn?$AAd?$AA?5?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IK@MMDGNKPG@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAH?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IM@JHOGKDAH@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAH?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|?SDIPollingTransmit@CSDIOControllerBase@@QAAHPAEK@Z| ; CSDIOControllerBase::SDIPollingTransmit
	EXPORT	|??_C@_1II@FEFFLNKG@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAH?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|?StartDMATransmit@CSDIOControllerBase@@QAAHPAEK@Z| ; CSDIOControllerBase::StartDMATransmit
	EXPORT	|??_C@_1HO@CFIOOBHB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAH?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|?SDITransmit@CSDIOControllerBase@@QAAHPAEKH@Z| ; CSDIOControllerBase::SDITransmit

  00110			 AREA	 |.pdata|, PDATA
|$T45731| DCD	|$LN38@TransmitHa|
	DCD	0xc000ad05
|$T45733| DCD	|$LN28@TransmitHa|
	DCD	0x40001102

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@EGMBENGA@?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAs?$AAe?$AAn?$AAt@| DCB "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, " ", 0x0, "s", 0x0, "u", 0x0, "c"
	DCB	0x0, "c", 0x0, "e", 0x0, "s", 0x0, "f", 0x0, "u", 0x0, "l"
	DCB	0x0, "l", 0x0, "y", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "b"
	DCB	0x0, "y", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@JFCCAKPF@?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAs?$AAe?$AAn?$AAd?$AA?5?$AA?$CF@| DCB "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "s", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t"
	DCB	0x0, "e", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@MMDGNKPG@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAH?$AAa?$AAn@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "m", 0x0, "i", 0x0, "t", 0x0, "H", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IM@JHOGKDAH@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAH?$AAa?$AAn@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "m", 0x0, "i", 0x0, "t", 0x0, "H", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P", 0x0, "o"
	DCB	0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m", 0x0, "i"
	DCB	0x0, "t", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u"
	DCB	0x0, "r", 0x0, "n", 0x0, "s", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1II@FEFFLNKG@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAH?$AAa?$AAn@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "m", 0x0, "i", 0x0, "t", 0x0, "H", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t"
	DCB	0x0, "D", 0x0, "M", 0x0, "A", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "m", 0x0, "i", 0x0, "t", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n"
	DCB	0x0, "s", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@CFIOOBHB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAH?$AAa?$AAn@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "m", 0x0, "i", 0x0, "t", 0x0, "H", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m", 0x0, "i", 0x0, "t"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "r"
	DCB	0x0, "n", 0x0, "s", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00014			 AREA	 |.xdata|, DATA
|$T45729| DCD	0x1
	DCD	|$LN32@TransmitHa|
	DCD	|$LN33@TransmitHa|
	DCD	|$LN28@TransmitHa|
	DCD	|$LN29@TransmitHa|
; Function compile flags: /Odtp

  042dc			 AREA	 |.text|, CODE, ARM

  042dc	00000000	 DCD         |__C_specific_handler|
  042e0	00000000	 DCD         |$T45729|

  042e4		 |?TransmitHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@PAW4SDHCCONTROLLERIST_STATE@@@Z| PROC ; CSDIOControllerBase::TransmitHandler

; 1864 : {

  042e4		 |$LN38@TransmitHa|
  042e4	e1a0c00d	 mov         r12, sp
  042e8	e92d0007	 stmdb       sp!, {r0 - r2}
  042ec	e92d5800	 stmdb       sp!, {r11, r12, lr}
  042f0	e28db00c	 add         r11, sp, #0xC
  042f4	e24dd048	 sub         sp, sp, #0x48
  042f8		 |$LN36@TransmitHa|

; 1865 :     SD_API_STATUS   status            = SD_API_STATUS_PENDING;

  042f8	e3a03001	 mov         r3, #1
  042fc	e50b3048	 str         r3, [r11, #-0x48]

; 1866 :     DWORD cbTransfer = TRANSFER_SIZE(pRequest);

  04300	e59b3004	 ldr         r3, [r11, #4]
  04304	e2832040	 add         r2, r3, #0x40
  04308	e59b3004	 ldr         r3, [r11, #4]
  0430c	e283303c	 add         r3, r3, #0x3C
  04310	e5922000	 ldr         r2, [r2]
  04314	e5933000	 ldr         r3, [r3]
  04318	e0030392	 mul         r3, r2, r3
  0431c	e50b3054	 str         r3, [r11, #-0x54]

; 1867 : 
; 1868 :     BOOL            FastPathMode    = FALSE;

  04320	e3a03000	 mov         r3, #0
  04324	e50b304c	 str         r3, [r11, #-0x4C]

; 1869 :     BOOL            fRet;
; 1870 : 
; 1871 :     FastPathMode = ((pRequest->SystemFlags & SD_FAST_PATH_AVAILABLE)) ? TRUE : FALSE;

  04328	e59b3004	 ldr         r3, [r11, #4]
  0432c	e283300c	 add         r3, r3, #0xC
  04330	e5933000	 ldr         r3, [r3]
  04334	e3130102	 tst         r3, #2, 2
  04338	0a000002	 beq         |$LN13@TransmitHa|
  0433c	e3a03001	 mov         r3, #1
  04340	e50b303c	 str         r3, [r11, #-0x3C]
  04344	ea000001	 b           |$LN14@TransmitHa|
  04348		 |$LN13@TransmitHa|
  04348	e3a03000	 mov         r3, #0
  0434c	e50b303c	 str         r3, [r11, #-0x3C]
  04350		 |$LN14@TransmitHa|
  04350	e51b303c	 ldr         r3, [r11, #-0x3C]
  04354	e50b304c	 str         r3, [r11, #-0x4C]
  04358		 |$LN32@TransmitHa|

; 1872 : 
; 1873 :     __try 
; 1874 :         {
; 1875 :         if(FastPathMode)

  04358	e51b304c	 ldr         r3, [r11, #-0x4C]
  0435c	e3530000	 cmp         r3, #0
  04360	0a00001e	 beq         |$LN9@TransmitHa|

; 1876 :             {
; 1877 :             fRet = SDITransmit(pRequest->pBlockBuffer, cbTransfer, FastPathMode);

  04364	e51b304c	 ldr         r3, [r11, #-0x4C]
  04368	e51b2054	 ldr         r2, [r11, #-0x54]
  0436c	e59b1004	 ldr         r1, [r11, #4]
  04370	e2811048	 add         r1, r1, #0x48
  04374	e5911000	 ldr         r1, [r1]
  04378	e59b0000	 ldr         r0, [r11]
  0437c	eb000000	 bl          |?SDITransmit@CSDIOControllerBase@@QAAHPAEKH@Z|
  04380	e50b0038	 str         r0, [r11, #-0x38]
  04384	e51b3038	 ldr         r3, [r11, #-0x38]
  04388	e50b3050	 str         r3, [r11, #-0x50]

; 1878 :             DEBUGMSG (SHC_SDBUS_INTERACT_ZONE, (TEXT("CSDIOControllerBase::TransmitHandler: SDITransmit returns %d\r\n"), fRet));

  0438c	e59f3230	 ldr         r3, [pc, #0x230]
  04390	e5933440	 ldr         r3, [r3, #0x440]
  04394	e3130040	 tst         r3, #0x40
  04398	0a000005	 beq         |$LN15@TransmitHa|
  0439c	e51b1050	 ldr         r1, [r11, #-0x50]
  043a0	e59f0230	 ldr         r0, [pc, #0x230]
  043a4	eb000000	 bl          NKDbgPrintfW
  043a8	e3a03001	 mov         r3, #1
  043ac	e50b3034	 str         r3, [r11, #-0x34]
  043b0	ea000001	 b           |$LN16@TransmitHa|
  043b4		 |$LN15@TransmitHa|
  043b4	e3a03000	 mov         r3, #0
  043b8	e50b3034	 str         r3, [r11, #-0x34]
  043bc		 |$LN16@TransmitHa|

; 1879 :             status = SD_API_STATUS_PENDING;

  043bc	e3a03001	 mov         r3, #1
  043c0	e50b3048	 str         r3, [r11, #-0x48]

; 1880 :             if (peNextState != NULL)

  043c4	e59b3008	 ldr         r3, [r11, #8]
  043c8	e3530000	 cmp         r3, #0
  043cc	0a000002	 beq         |$LN8@TransmitHa|

; 1881 :                 {
; 1882 :                 *peNextState = DATA_TRANSMIT_STATE;

  043d0	e59b2008	 ldr         r2, [r11, #8]
  043d4	e3a03003	 mov         r3, #3
  043d8	e5823000	 str         r3, [r2]
  043dc		 |$LN8@TransmitHa|

; 1883 :                 }
; 1884 :             }
; 1885 :         else

  043dc	ea00003a	 b           |$LN7@TransmitHa|
  043e0		 |$LN9@TransmitHa|

; 1886 :             {
; 1887 : #ifdef SDIO_DMA_ENABLED
; 1888 :             if( m_fDMATransfer )

  043e0	e59b3000	 ldr         r3, [r11]
  043e4	e2833e11	 add         r3, r3, #0x11, 28
  043e8	e5933000	 ldr         r3, [r3]
  043ec	e3530000	 cmp         r3, #0
  043f0	0a000020	 beq         |$LN6@TransmitHa|

; 1889 :                 {
; 1890 :                 fRet = StartDMATransmit(pRequest->pBlockBuffer, cbTransfer);

  043f4	e51b2054	 ldr         r2, [r11, #-0x54]
  043f8	e59b3004	 ldr         r3, [r11, #4]
  043fc	e2833048	 add         r3, r3, #0x48
  04400	e5931000	 ldr         r1, [r3]
  04404	e59b0000	 ldr         r0, [r11]
  04408	eb000000	 bl          |?StartDMATransmit@CSDIOControllerBase@@QAAHPAEK@Z|
  0440c	e50b0030	 str         r0, [r11, #-0x30]
  04410	e51b3030	 ldr         r3, [r11, #-0x30]
  04414	e50b3050	 str         r3, [r11, #-0x50]

; 1891 :                 DEBUGMSG (SHC_SDBUS_INTERACT_ZONE, (TEXT("CSDIOControllerBase::TransmitHandler: StartDMATransmit returns %d\r\n"), fRet));

  04418	e59f31a4	 ldr         r3, [pc, #0x1A4]
  0441c	e5933440	 ldr         r3, [r3, #0x440]
  04420	e3130040	 tst         r3, #0x40
  04424	0a000005	 beq         |$LN17@TransmitHa|
  04428	e51b1050	 ldr         r1, [r11, #-0x50]
  0442c	e59f01a0	 ldr         r0, [pc, #0x1A0]
  04430	eb000000	 bl          NKDbgPrintfW
  04434	e3a03001	 mov         r3, #1
  04438	e50b302c	 str         r3, [r11, #-0x2C]
  0443c	ea000001	 b           |$LN18@TransmitHa|
  04440		 |$LN17@TransmitHa|
  04440	e3a03000	 mov         r3, #0
  04444	e50b302c	 str         r3, [r11, #-0x2C]
  04448		 |$LN18@TransmitHa|

; 1892 :                 if (fRet == TRUE)

  04448	e51b3050	 ldr         r3, [r11, #-0x50]
  0444c	e3530001	 cmp         r3, #1
  04450	1a000007	 bne         |$LN5@TransmitHa|

; 1893 :                     {
; 1894 :                     status = SD_API_STATUS_PENDING;

  04454	e3a03001	 mov         r3, #1
  04458	e50b3048	 str         r3, [r11, #-0x48]

; 1895 :                     if (peNextState != NULL)

  0445c	e59b3008	 ldr         r3, [r11, #8]
  04460	e3530000	 cmp         r3, #0
  04464	0a000002	 beq         |$LN4@TransmitHa|

; 1896 :                         {
; 1897 :                         *peNextState = DATA_TRANSMIT_STATE;

  04468	e59b2008	 ldr         r2, [r11, #8]
  0446c	e3a03003	 mov         r3, #3
  04470	e5823000	 str         r3, [r2]
  04474		 |$LN4@TransmitHa|
  04474		 |$LN5@TransmitHa|

; 1898 :                         }
; 1899 :                     }
; 1900 :                 }
; 1901 :             else

  04474	ea000014	 b           |$LN3@TransmitHa|
  04478		 |$LN6@TransmitHa|

; 1902 : #endif
; 1903 :                 {
; 1904 :                 fRet = SDIPollingTransmit(pRequest->pBlockBuffer, cbTransfer);

  04478	e51b2054	 ldr         r2, [r11, #-0x54]
  0447c	e59b3004	 ldr         r3, [r11, #4]
  04480	e2833048	 add         r3, r3, #0x48
  04484	e5931000	 ldr         r1, [r3]
  04488	e59b0000	 ldr         r0, [r11]
  0448c	eb000000	 bl          |?SDIPollingTransmit@CSDIOControllerBase@@QAAHPAEK@Z|
  04490	e50b0028	 str         r0, [r11, #-0x28]
  04494	e51b3028	 ldr         r3, [r11, #-0x28]
  04498	e50b3050	 str         r3, [r11, #-0x50]

; 1905 :                 DEBUGMSG (SHC_SDBUS_INTERACT_ZONE, (TEXT("CSDIOControllerBase::TransmitHandler: SDIPollingTransmit returns %d\r\n"), fRet));

  0449c	e59f3120	 ldr         r3, [pc, #0x120]
  044a0	e5933440	 ldr         r3, [r3, #0x440]
  044a4	e3130040	 tst         r3, #0x40
  044a8	0a000005	 beq         |$LN19@TransmitHa|
  044ac	e51b1050	 ldr         r1, [r11, #-0x50]
  044b0	e59f0118	 ldr         r0, [pc, #0x118]
  044b4	eb000000	 bl          NKDbgPrintfW
  044b8	e3a03001	 mov         r3, #1
  044bc	e50b3024	 str         r3, [r11, #-0x24]
  044c0	ea000001	 b           |$LN20@TransmitHa|
  044c4		 |$LN19@TransmitHa|
  044c4	e3a03000	 mov         r3, #0
  044c8	e50b3024	 str         r3, [r11, #-0x24]
  044cc		 |$LN20@TransmitHa|
  044cc		 |$LN3@TransmitHa|
  044cc		 |$LN7@TransmitHa|
  044cc		 |$LN33@TransmitHa|

; 1906 :                 }
; 1907 :             }
; 1908 :         }

  044cc	ea000002	 b           |$LN34@TransmitHa|
  044d0		 |$LN29@TransmitHa|

; 1910 :         {
; 1911 :         fRet = FALSE;

  044d0	e3a03000	 mov         r3, #0
  044d4	e50b3050	 str         r3, [r11, #-0x50]
  044d8	eaffffff	 b           |$LN34@TransmitHa|
  044dc		 |$LN34@TransmitHa|

; 1912 :         }
; 1913 : 
; 1914 :     if( !fRet )

  044dc	e51b3050	 ldr         r3, [r11, #-0x50]
  044e0	e3530000	 cmp         r3, #0
  044e4	1a000019	 bne         |$LN2@TransmitHa|

; 1915 :         {
; 1916 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("CSDIOControllerBase::TransmitHandler - SDIPollingTransmit() failed\r\n")));

  044e8	e59f30d4	 ldr         r3, [pc, #0xD4]
  044ec	e5933440	 ldr         r3, [r3, #0x440]
  044f0	e3130902	 tst         r3, #2, 18
  044f4	0a000004	 beq         |$LN21@TransmitHa|
  044f8	e59f00cc	 ldr         r0, [pc, #0xCC]
  044fc	eb000000	 bl          NKDbgPrintfW
  04500	e3a03001	 mov         r3, #1
  04504	e50b3018	 str         r3, [r11, #-0x18]
  04508	ea000001	 b           |$LN22@TransmitHa|
  0450c		 |$LN21@TransmitHa|
  0450c	e3a03000	 mov         r3, #0
  04510	e50b3018	 str         r3, [r11, #-0x18]
  04514		 |$LN22@TransmitHa|

; 1917 :         DEBUGMSG (SHC_SDBUS_INTERACT_ZONE,(TEXT("PollingTransmit failed to send %d bytes\r\n"), cbTransfer));

  04514	e59f30a8	 ldr         r3, [pc, #0xA8]
  04518	e5933440	 ldr         r3, [r3, #0x440]
  0451c	e3130040	 tst         r3, #0x40
  04520	0a000005	 beq         |$LN23@TransmitHa|
  04524	e51b1054	 ldr         r1, [r11, #-0x54]
  04528	e59f0098	 ldr         r0, [pc, #0x98]
  0452c	eb000000	 bl          NKDbgPrintfW
  04530	e3a03001	 mov         r3, #1
  04534	e50b3014	 str         r3, [r11, #-0x14]
  04538	ea000001	 b           |$LN24@TransmitHa|
  0453c		 |$LN23@TransmitHa|
  0453c	e3a03000	 mov         r3, #0
  04540	e50b3014	 str         r3, [r11, #-0x14]
  04544		 |$LN24@TransmitHa|

; 1918 :         status = SD_API_STATUS_DATA_ERROR;

  04544	e3a03133	 mov         r3, #0x33, 2
  04548	e50b3048	 str         r3, [r11, #-0x48]

; 1919 :         }
; 1920 :     else

  0454c	ea00000b	 b           |$LN1@TransmitHa|
  04550		 |$LN2@TransmitHa|

; 1921 :         {
; 1922 :         DEBUGMSG (SHC_SDBUS_INTERACT_ZONE,(TEXT("PollingTransmit succesfully sent %d bytes\r\n"), cbTransfer));

  04550	e59f306c	 ldr         r3, [pc, #0x6C]
  04554	e5933440	 ldr         r3, [r3, #0x440]
  04558	e3130040	 tst         r3, #0x40
  0455c	0a000005	 beq         |$LN25@TransmitHa|
  04560	e51b1054	 ldr         r1, [r11, #-0x54]
  04564	e59f0054	 ldr         r0, [pc, #0x54]
  04568	eb000000	 bl          NKDbgPrintfW
  0456c	e3a03001	 mov         r3, #1
  04570	e50b3010	 str         r3, [r11, #-0x10]
  04574	ea000001	 b           |$LN26@TransmitHa|
  04578		 |$LN25@TransmitHa|
  04578	e3a03000	 mov         r3, #0
  0457c	e50b3010	 str         r3, [r11, #-0x10]
  04580		 |$LN26@TransmitHa|
  04580		 |$LN1@TransmitHa|

; 1923 :         }
; 1924 : 
; 1925 :     return status;

  04580	e51b3048	 ldr         r3, [r11, #-0x48]
  04584	e50b3040	 str         r3, [r11, #-0x40]
  04588		 |$LN27@TransmitHa|

; 1926 : }

  04588	e51b0040	 ldr         r0, [r11, #-0x40]
  0458c	e24bd00c	 sub         sp, r11, #0xC
  04590	e89d6800	 ldmia       sp, {r11, sp, lr}
  04594	e12fff1e	 bx          lr

			 ENDP  ; |?TransmitHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@PAW4SDHCCONTROLLERIST_STATE@@@Z|, CSDIOControllerBase::TransmitHandler

  04598		 |$LN28@TransmitHa|
  04598		 |$LN37@TransmitHa|

; 1909 :     __except(SDProcessException(GetExceptionInformation())) 

  04598	e52de004	 str         lr, [sp, #-4]!
  0459c	e24bb00c	 sub         r11, r11, #0xC
  045a0		 |$LN31@TransmitHa|
  045a0		 |$LN40@TransmitHa|
  045a0	e50b0044	 str         r0, [r11, #-0x44]
  045a4	e51b3044	 ldr         r3, [r11, #-0x44]
  045a8	e50b3020	 str         r3, [r11, #-0x20]
  045ac	e51b0020	 ldr         r0, [r11, #-0x20]
  045b0	eb000000	 bl          SDProcessException
  045b4	e50b001c	 str         r0, [r11, #-0x1C]
  045b8	e51b001c	 ldr         r0, [r11, #-0x1C]
  045bc		 |$LN30@TransmitHa|
  045bc	e49df004	 ldr         pc, [sp], #4
  045c0		 |$LN42@TransmitHa|
  045c0		 |$LN43@TransmitHa|
  045c0	00000000	 DCD         |??_C@_1FI@EGMBENGA@?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAs?$AAe?$AAn?$AAt@|
  045c4		 |$LN44@TransmitHa|
  045c4	00000000	 DCD         |dpCurSettings|
  045c8		 |$LN45@TransmitHa|
  045c8	00000000	 DCD         |??_C@_1FE@JFCCAKPF@?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAs?$AAe?$AAn?$AAd?$AA?5?$AA?$CF@|
  045cc		 |$LN46@TransmitHa|
  045cc	00000000	 DCD         |??_C@_1IK@MMDGNKPG@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAH?$AAa?$AAn@|
  045d0		 |$LN47@TransmitHa|
  045d0	00000000	 DCD         |??_C@_1IM@JHOGKDAH@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAH?$AAa?$AAn@|
  045d4		 |$LN48@TransmitHa|
  045d4	00000000	 DCD         |??_C@_1II@FEFFLNKG@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAH?$AAa?$AAn@|
  045d8		 |$LN49@TransmitHa|
  045d8	00000000	 DCD         |??_C@_1HO@CFIOOBHB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAH?$AAa?$AAn@|
  045dc		 |$LN41@TransmitHa|
  045dc		 |$LN39@TransmitHa|
	EXPORT	|??_C@_1IE@FENGKJHJ@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KA@FBMFGCOB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAm@| [ DATA ] ; `string'
	EXPORT	|??_C@_1MI@MHMHIOHA@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAm@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LA@FJKMKMMP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAm@| [ DATA ] ; `string'

  00120			 AREA	 |.pdata|, PDATA
|$T45757| DCD	|$LN21@ProcessCom|
	DCD	0x40007a04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@FENGKJHJ@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s"
	DCB	0x0, "e", 0x0, ":", 0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o"
	DCB	0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o"
	DCB	0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "u", 0x0, "s", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KA@FBMFGCOB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAm@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s"
	DCB	0x0, " ", 0x0, "C", 0x0, "a", 0x0, "r", 0x0, "d", 0x0, " "
	DCB	0x0, "i", 0x0, "s", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "o", 0x0, "g", 0x0, "n", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "a", 0x0, "s", 0x0, " ", 0x0, "a"
	DCB	0x0, " ", 0x0, "M", 0x0, "M", 0x0, "C", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1MI@MHMHIOHA@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAm@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "S", 0x0, "w", 0x0, "i"
	DCB	0x0, "t", 0x0, "c", 0x0, "h", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "A", 0x0, "p", 0x0, "p"
	DCB	0x0, "l", 0x0, "i", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, " ", 0x0, "S", 0x0, "p", 0x0, "e"
	DCB	0x0, "c", 0x0, "i", 0x0, "f", 0x0, "i", 0x0, "c", 0x0, " "
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, " ", 0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LA@FJKMKMMP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAm@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "S", 0x0, "w", 0x0, "i"
	DCB	0x0, "t", 0x0, "c", 0x0, "h", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "a", 0x0, "r", 0x0, "d", 0x0, " "
	DCB	0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, " ", 0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  045dc			 AREA	 |.text|, CODE, ARM

  045dc		 |?ProcessCommandTransferStatus@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@JK@Z| PROC ; CSDIOControllerBase::ProcessCommandTransferStatus

; 1943 : {

  045dc		 |$LN21@ProcessCom|
  045dc	e1a0c00d	 mov         r12, sp
  045e0	e92d000f	 stmdb       sp!, {r0 - r3}
  045e4	e92d5000	 stmdb       sp!, {r12, lr}
  045e8	e24dd01c	 sub         sp, sp, #0x1C
  045ec		 |$M45754|

; 1944 :     UNREFERENCED_PARAMETER(dwStatusOverwrite);
; 1945 : 
; 1946 :     if( status == SD_API_STATUS_SUCCESS )

  045ec	e59d302c	 ldr         r3, [sp, #0x2C]
  045f0	e3530000	 cmp         r3, #0
  045f4	1a00003f	 bne         |$LN8@ProcessCom|

; 1947 :         {
; 1948 :         if( m_fAppCmdMode )

  045f8	e59d3024	 ldr         r3, [sp, #0x24]
  045fc	e2833f45	 add         r3, r3, #0x45, 30
  04600	e5933000	 ldr         r3, [r3]
  04604	e3530000	 cmp         r3, #0
  04608	0a00000f	 beq         |$LN7@ProcessCom|

; 1949 :             {
; 1950 :             m_fAppCmdMode = FALSE;

  0460c	e59d3024	 ldr         r3, [sp, #0x24]
  04610	e2832f45	 add         r2, r3, #0x45, 30
  04614	e3a03000	 mov         r3, #0
  04618	e5823000	 str         r3, [r2]

; 1951 :             DEBUGMSG(SHC_SEND_ZONE, (TEXT("CSDIOControllerBase::ProcessCommandTransferStatus - Switched to Standard Command Mode\r\n")));

  0461c	e59f3190	 ldr         r3, [pc, #0x190]
  04620	e5933440	 ldr         r3, [r3, #0x440]
  04624	e3130002	 tst         r3, #2
  04628	0a000004	 beq         |$LN11@ProcessCom|
  0462c	e59f018c	 ldr         r0, [pc, #0x18C]
  04630	eb000000	 bl          NKDbgPrintfW
  04634	e3a03001	 mov         r3, #1
  04638	e58d3008	 str         r3, [sp, #8]
  0463c	ea000001	 b           |$LN12@ProcessCom|
  04640		 |$LN11@ProcessCom|
  04640	e3a03000	 mov         r3, #0
  04644	e58d3008	 str         r3, [sp, #8]
  04648		 |$LN12@ProcessCom|

; 1952 :             }
; 1953 :         else if( pRequest && pRequest->CommandCode == 55 )

  04648	ea000016	 b           |$LN6@ProcessCom|
  0464c		 |$LN7@ProcessCom|
  0464c	e59d3028	 ldr         r3, [sp, #0x28]
  04650	e3530000	 cmp         r3, #0
  04654	0a000013	 beq         |$LN5@ProcessCom|
  04658	e59d3028	 ldr         r3, [sp, #0x28]
  0465c	e2833014	 add         r3, r3, #0x14
  04660	e5d33000	 ldrb        r3, [r3]
  04664	e3530037	 cmp         r3, #0x37
  04668	1a00000e	 bne         |$LN5@ProcessCom|

; 1954 :             {
; 1955 :             m_fAppCmdMode = TRUE;

  0466c	e59d3024	 ldr         r3, [sp, #0x24]
  04670	e2832f45	 add         r2, r3, #0x45, 30
  04674	e3a03001	 mov         r3, #1
  04678	e5823000	 str         r3, [r2]

; 1956 :             DEBUGMSG(SHC_SEND_ZONE, (TEXT("CSDIOControllerBase::ProcessCommandTransferStatus - Switched to Application Specific Command Mode\r\n")));

  0467c	e59f3130	 ldr         r3, [pc, #0x130]
  04680	e5933440	 ldr         r3, [r3, #0x440]
  04684	e3130002	 tst         r3, #2
  04688	0a000004	 beq         |$LN13@ProcessCom|
  0468c	e59f0128	 ldr         r0, [pc, #0x128]
  04690	eb000000	 bl          NKDbgPrintfW
  04694	e3a03001	 mov         r3, #1
  04698	e58d300c	 str         r3, [sp, #0xC]
  0469c	ea000001	 b           |$LN14@ProcessCom|
  046a0		 |$LN13@ProcessCom|
  046a0	e3a03000	 mov         r3, #0
  046a4	e58d300c	 str         r3, [sp, #0xC]
  046a8		 |$LN14@ProcessCom|
  046a8		 |$LN5@ProcessCom|
  046a8		 |$LN6@ProcessCom|

; 1957 :             }
; 1958 : 
; 1959 :         if( pRequest->CommandCode == SD_CMD_MMC_SEND_OPCOND )

  046a8	e59d3028	 ldr         r3, [sp, #0x28]
  046ac	e2833014	 add         r3, r3, #0x14
  046b0	e5d33000	 ldrb        r3, [r3]
  046b4	e3530001	 cmp         r3, #1
  046b8	1a00000e	 bne         |$LN4@ProcessCom|

; 1960 :             {
; 1961 :             DEBUGMSG(SHC_SDBUS_INTERACT_ZONE, (TEXT("CSDIOControllerBase::ProcessCommandTransferStatus Card is recognized as a MMC\r\n") ) );

  046bc	e59f30f0	 ldr         r3, [pc, #0xF0]
  046c0	e5933440	 ldr         r3, [r3, #0x440]
  046c4	e3130040	 tst         r3, #0x40
  046c8	0a000004	 beq         |$LN15@ProcessCom|
  046cc	e59f00e4	 ldr         r0, [pc, #0xE4]
  046d0	eb000000	 bl          NKDbgPrintfW
  046d4	e3a03001	 mov         r3, #1
  046d8	e58d3010	 str         r3, [sp, #0x10]
  046dc	ea000001	 b           |$LN16@ProcessCom|
  046e0		 |$LN15@ProcessCom|
  046e0	e3a03000	 mov         r3, #0
  046e4	e58d3010	 str         r3, [sp, #0x10]
  046e8		 |$LN16@ProcessCom|

; 1962 :             m_fMMCMode = TRUE;

  046e8	e59d3024	 ldr         r3, [sp, #0x24]
  046ec	e28320f8	 add         r2, r3, #0xF8
  046f0	e3a03001	 mov         r3, #1
  046f4	e5823000	 str         r3, [r2]
  046f8		 |$LN4@ProcessCom|
  046f8		 |$LN8@ProcessCom|

; 1963 :             }
; 1964 :         }
; 1965 : 
; 1966 :     if(m_ActualPowerState == D4)

  046f8	e59d3024	 ldr         r3, [sp, #0x24]
  046fc	e28330e0	 add         r3, r3, #0xE0
  04700	e5933000	 ldr         r3, [r3]
  04704	e3530004	 cmp         r3, #4
  04708	1a00000b	 bne         |$LN3@ProcessCom|

; 1967 :         {
; 1968 :         if( pRequest != NULL )

  0470c	e59d3028	 ldr         r3, [sp, #0x28]
  04710	e3530000	 cmp         r3, #0
  04714	0a000005	 beq         |$LN2@ProcessCom|

; 1969 :             SDHCDIndicateBusRequestComplete(m_pHCContext, pRequest, status);

  04718	e59d202c	 ldr         r2, [sp, #0x2C]
  0471c	e59d1028	 ldr         r1, [sp, #0x28]
  04720	e59d3024	 ldr         r3, [sp, #0x24]
  04724	e28330a8	 add         r3, r3, #0xA8
  04728	e5930000	 ldr         r0, [r3]
  0472c	eb000000	 bl          SDHCDIndicateBusRequestComplete
  04730		 |$LN2@ProcessCom|

; 1970 :         return TRUE;

  04730	e3a03001	 mov         r3, #1
  04734	e58d3004	 str         r3, [sp, #4]
  04738	ea000018	 b           |$LN9@ProcessCom|
  0473c		 |$LN3@ProcessCom|

; 1971 :         }
; 1972 : 
; 1973 : 
; 1974 :     // Clear the MMC_STAT register
; 1975 :     DWORD MMC_STAT = Read_MMC_STAT();

  0473c	e59d0024	 ldr         r0, [sp, #0x24]
  04740	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  04744	e58d0014	 str         r0, [sp, #0x14]
  04748	e59d3014	 ldr         r3, [sp, #0x14]
  0474c	e58d3000	 str         r3, [sp]

; 1976 :     Write_MMC_STAT(MMC_STAT);

  04750	e59d1000	 ldr         r1, [sp]
  04754	e59d0024	 ldr         r0, [sp, #0x24]
  04758	eb000000	 bl          |?Write_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|

; 1977 : 
; 1978 :     if (MMC_STAT)

  0475c	e59d3000	 ldr         r3, [sp]
  04760	e3530000	 cmp         r3, #0
  04764	0a00000b	 beq         |$LN1@ProcessCom|

; 1979 :         {
; 1980 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("+CSDIOControllerBase::ProcessCommandTransferStatus: status = %x\r\n"), MMC_STAT));

  04768	e59f3044	 ldr         r3, [pc, #0x44]
  0476c	e5933440	 ldr         r3, [r3, #0x440]
  04770	e3130902	 tst         r3, #2, 18
  04774	0a000005	 beq         |$LN17@ProcessCom|
  04778	e59d1000	 ldr         r1, [sp]
  0477c	e59f002c	 ldr         r0, [pc, #0x2C]
  04780	eb000000	 bl          NKDbgPrintfW
  04784	e3a03001	 mov         r3, #1
  04788	e58d3018	 str         r3, [sp, #0x18]
  0478c	ea000001	 b           |$LN18@ProcessCom|
  04790		 |$LN17@ProcessCom|
  04790	e3a03000	 mov         r3, #0
  04794	e58d3018	 str         r3, [sp, #0x18]
  04798		 |$LN18@ProcessCom|
  04798		 |$LN1@ProcessCom|

; 1981 :         }
; 1982 : 
; 1983 :     return status;

  04798	e59d302c	 ldr         r3, [sp, #0x2C]
  0479c	e58d3004	 str         r3, [sp, #4]
  047a0		 |$LN9@ProcessCom|

; 1984 : }

  047a0	e59d0004	 ldr         r0, [sp, #4]
  047a4	e28dd01c	 add         sp, sp, #0x1C
  047a8	e89d6000	 ldmia       sp, {sp, lr}
  047ac	e12fff1e	 bx          lr
  047b0		 |$LN22@ProcessCom|
  047b0		 |$LN23@ProcessCom|
  047b0	00000000	 DCD         |??_C@_1IE@FENGKJHJ@?$AA?$CL?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm@|
  047b4		 |$LN24@ProcessCom|
  047b4	00000000	 DCD         |dpCurSettings|
  047b8		 |$LN25@ProcessCom|
  047b8	00000000	 DCD         |??_C@_1KA@FBMFGCOB@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAm@|
  047bc		 |$LN26@ProcessCom|
  047bc	00000000	 DCD         |??_C@_1MI@MHMHIOHA@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAm@|
  047c0		 |$LN27@ProcessCom|
  047c0	00000000	 DCD         |??_C@_1LA@FJKMKMMP@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAC?$AAo?$AAm?$AAm@|
  047c4		 |$M45755|

			 ENDP  ; |?ProcessCommandTransferStatus@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@JK@Z|, CSDIOControllerBase::ProcessCommandTransferStatus

	EXPORT	|??_C@_1LI@MLCDNMID@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe?$AAg@| [ DATA ] ; `string'
	IMPORT	|CacheRangeFlush|
	IMPORT	|?SDIO_StartInputDMA@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::SDIO_StartInputDMA

  00128			 AREA	 |.pdata|, PDATA
|$T45771| DCD	|$LN10@StartDMARe|
	DCD	0x40004b04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LI@MLCDNMID@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe?$AAg@| DCB "S"
	DCB	0x0, "D", 0x0, "I", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "e"
	DCB	0x0, "x", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "S"
	DCB	0x0, "T", 0x0, "A", 0x0, "T", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "d", 0x0, "i", 0x0, "c"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, " ", 0x0, "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A"
	DCB	0x0, "T", 0x0, "_", 0x0, "D", 0x0, "T", 0x0, "O", 0x0, " "
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "M", 0x0, "M", 0x0, "C"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "_"
	DCB	0x0, "D", 0x0, "C", 0x0, "R", 0x0, "C", 0x0, " ", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "("
	DCB	0x0, "%", 0x0, "x", 0x0, ")", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  047c4			 AREA	 |.text|, CODE, ARM

  047c4		 |?StartDMAReceive@CSDIOControllerBase@@QAAHPAEK@Z| PROC ; CSDIOControllerBase::StartDMAReceive

; 1997 : {

  047c4		 |$LN10@StartDMARe|
  047c4	e1a0c00d	 mov         r12, sp
  047c8	e92d0007	 stmdb       sp!, {r0 - r2}
  047cc	e92d5000	 stmdb       sp!, {r12, lr}
  047d0	e24dd014	 sub         sp, sp, #0x14
  047d4		 |$M45768|

; 1998 :     BOOL    bRet = TRUE;

  047d4	e3a03001	 mov         r3, #1
  047d8	e58d3004	 str         r3, [sp, #4]

; 1999 : 
; 2000 :     DWORD MMC_STAT = Read_MMC_STAT();

  047dc	e59d001c	 ldr         r0, [sp, #0x1C]
  047e0	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  047e4	e58d000c	 str         r0, [sp, #0xC]
  047e8	e59d300c	 ldr         r3, [sp, #0xC]
  047ec	e58d3000	 str         r3, [sp]

; 2001 : 
; 2002 :     Write_MMC_STAT(MMC_STAT);

  047f0	e59d1000	 ldr         r1, [sp]
  047f4	e59d001c	 ldr         r0, [sp, #0x1C]
  047f8	eb000000	 bl          |?Write_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|

; 2003 : 
; 2004 :     if( MMC_STAT & (MMCHS_STAT_DTO | MMCHS_STAT_DCRC))

  047fc	e59d3000	 ldr         r3, [sp]
  04800	e3130603	 tst         r3, #3, 12
  04804	0a00000e	 beq         |$LN3@StartDMARe|

; 2005 :         {
; 2006 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDIDMAReceive() - exit: STAT register indicates MMC_STAT_DTO or MMC_STAT_DCRC error (%x).\r\n"), MMC_STAT));

  04808	e59f30dc	 ldr         r3, [pc, #0xDC]
  0480c	e5933440	 ldr         r3, [r3, #0x440]
  04810	e3130902	 tst         r3, #2, 18
  04814	0a000005	 beq         |$LN6@StartDMARe|
  04818	e59d1000	 ldr         r1, [sp]
  0481c	e59f00c4	 ldr         r0, [pc, #0xC4]
  04820	eb000000	 bl          NKDbgPrintfW
  04824	e3a03001	 mov         r3, #1
  04828	e58d3010	 str         r3, [sp, #0x10]
  0482c	ea000001	 b           |$LN7@StartDMARe|
  04830		 |$LN6@StartDMARe|
  04830	e3a03000	 mov         r3, #0
  04834	e58d3010	 str         r3, [sp, #0x10]
  04838		 |$LN7@StartDMARe|

; 2007 :         bRet = FALSE;

  04838	e3a03000	 mov         r3, #0
  0483c	e58d3004	 str         r3, [sp, #4]

; 2008 :         }
; 2009 :     else

  04840	ea000022	 b           |$LN2@StartDMARe|
  04844		 |$LN3@StartDMARe|

; 2010 :         {
; 2011 :         EnterCriticalSection( &m_critSec );

  04844	e59d301c	 ldr         r3, [sp, #0x1C]
  04848	e28300b0	 add         r0, r3, #0xB0
  0484c	eb000000	 bl          EnterCriticalSection

; 2012 :         OUTREG32(&m_pbRegisters->MMCHS_STAT, 0xFFFFFFFF);

  04850	e59d301c	 ldr         r3, [sp, #0x1C]
  04854	e2833f57	 add         r3, r3, #0x57, 30
  04858	e5933000	 ldr         r3, [r3]
  0485c	e2832e13	 add         r2, r3, #0x13, 28
  04860	e3e03000	 mvn         r3, #0
  04864	e5823000	 str         r3, [r2]

; 2013 :         LeaveCriticalSection( &m_critSec );

  04868	e59d301c	 ldr         r3, [sp, #0x1C]
  0486c	e28300b0	 add         r0, r3, #0xB0
  04870	eb000000	 bl          LeaveCriticalSection

; 2014 : 
; 2015 :         m_pCurrentRecieveBuffer = pBuff;

  04874	e59d301c	 ldr         r3, [sp, #0x1C]
  04878	e2832f7b	 add         r2, r3, #0x7B, 30
  0487c	e59d3020	 ldr         r3, [sp, #0x20]
  04880	e5823000	 str         r3, [r2]

; 2016 :         m_dwCurrentRecieveBufferLength = dwLen;

  04884	e59d301c	 ldr         r3, [sp, #0x1C]
  04888	e2832e1f	 add         r2, r3, #0x1F, 28
  0488c	e59d3024	 ldr         r3, [sp, #0x24]
  04890	e5823000	 str         r3, [r2]

; 2017 : 
; 2018 :         // start the DMA
; 2019 :         SDIO_StartInputDMA();

  04894	e59d001c	 ldr         r0, [sp, #0x1C]
  04898	eb000000	 bl          |?SDIO_StartInputDMA@CSDIOControllerBase@@QAAXXZ|

; 2020 : 
; 2021 :         if (m_pCachedDmaBuffer != NULL)

  0489c	e59d301c	 ldr         r3, [sp, #0x1C]
  048a0	e2833c01	 add         r3, r3, #1, 24
  048a4	e5933000	 ldr         r3, [r3]
  048a8	e3530000	 cmp         r3, #0
  048ac	0a000007	 beq         |$LN1@StartDMARe|

; 2022 :             {
; 2023 :             CacheRangeFlush(m_pCachedDmaBuffer, m_dwCurrentRecieveBufferLength, TI_CACHE_SYNC_INVALIDATE);

  048b0	e3a02102	 mov         r2, #2, 2
  048b4	e59d301c	 ldr         r3, [sp, #0x1C]
  048b8	e2833e1f	 add         r3, r3, #0x1F, 28
  048bc	e5931000	 ldr         r1, [r3]
  048c0	e59d301c	 ldr         r3, [sp, #0x1C]
  048c4	e2833c01	 add         r3, r3, #1, 24
  048c8	e5930000	 ldr         r0, [r3]
  048cc	eb000000	 bl          CacheRangeFlush
  048d0		 |$LN1@StartDMARe|
  048d0		 |$LN2@StartDMARe|

; 2024 :             }
; 2025 :         }
; 2026 : 
; 2027 :     return bRet;

  048d0	e59d3004	 ldr         r3, [sp, #4]
  048d4	e58d3008	 str         r3, [sp, #8]

; 2028 : }

  048d8	e59d0008	 ldr         r0, [sp, #8]
  048dc	e28dd014	 add         sp, sp, #0x14
  048e0	e89d6000	 ldmia       sp, {sp, lr}
  048e4	e12fff1e	 bx          lr
  048e8		 |$LN11@StartDMARe|
  048e8		 |$LN12@StartDMARe|
  048e8	00000000	 DCD         |??_C@_1LI@MLCDNMID@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe?$AAg@|
  048ec		 |$LN13@StartDMARe|
  048ec	00000000	 DCD         |dpCurSettings|
  048f0		 |$M45769|

			 ENDP  ; |?StartDMAReceive@CSDIOControllerBase@@QAAHPAEK@Z|, CSDIOControllerBase::StartDMAReceive

	EXPORT	|??_C@_1LI@KFAFFOAL@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe@| [ DATA ] ; `string'
	IMPORT	|?SDIO_StartOutputDMA@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::SDIO_StartOutputDMA
	IMPORT	|SDPerformSafeCopy|

  00130			 AREA	 |.pdata|, PDATA
|$T45782| DCD	|$LN11@StartDMATr|
	DCD	0x40005804

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LI@KFAFFOAL@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe@| DCB "S"
	DCB	0x0, "D", 0x0, "I", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m", 0x0, "i"
	DCB	0x0, "t", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "e", 0x0, "x", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "d", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, " "
	DCB	0x0, "M", 0x0, "M", 0x0, "C", 0x0, "_", 0x0, "S", 0x0, "T"
	DCB	0x0, "A", 0x0, "T", 0x0, "_", 0x0, "D", 0x0, "T", 0x0, "O"
	DCB	0x0, " ", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "M", 0x0, "M"
	DCB	0x0, "C", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T"
	DCB	0x0, "_", 0x0, "D", 0x0, "C", 0x0, "R", 0x0, "C", 0x0, " "
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, "("
	DCB	0x0, "%", 0x0, "x", 0x0, ")", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  048f0			 AREA	 |.text|, CODE, ARM

  048f0		 |?StartDMATransmit@CSDIOControllerBase@@QAAHPAEK@Z| PROC ; CSDIOControllerBase::StartDMATransmit

; 2040 : {

  048f0		 |$LN11@StartDMATr|
  048f0	e1a0c00d	 mov         r12, sp
  048f4	e92d0007	 stmdb       sp!, {r0 - r2}
  048f8	e92d5000	 stmdb       sp!, {r12, lr}
  048fc	e24dd018	 sub         sp, sp, #0x18
  04900		 |$M45779|

; 2041 :     BOOL    bRet;
; 2042 : 
; 2043 :     // first copy the data to the DMA buffer, then to the user buffer, which maybe SG buffer,
; 2044 : #if 1
; 2045 :     // We use uncached DMA buffer instead of cached DMA for write operation because it give
; 2046 :     // better performance. 
; 2047 :     bRet = SDPerformSafeCopy( m_pDmaBuffer, pBuff, dwLen );

  04900	e59d2028	 ldr         r2, [sp, #0x28]
  04904	e59d1024	 ldr         r1, [sp, #0x24]
  04908	e59d3020	 ldr         r3, [sp, #0x20]
  0490c	e28330fc	 add         r3, r3, #0xFC
  04910	e5930000	 ldr         r0, [r3]
  04914	eb000000	 bl          SDPerformSafeCopy
  04918	e5cd000c	 strb        r0, [sp, #0xC]
  0491c	e5dd300c	 ldrb        r3, [sp, #0xC]
  04920	e58d3004	 str         r3, [sp, #4]

; 2048 : #else
; 2049 :     if (m_pCachedDmaBuffer == NULL)
; 2050 :         {
; 2051 :         bRet = SDPerformSafeCopy( m_pDmaBuffer, pBuff, dwLen );
; 2052 :         }
; 2053 :     else
; 2054 :         {
; 2055 :         bRet = SDPerformSafeCopy( m_pCachedDmaBuffer, pBuff, dwLen );
; 2056 :         CacheRangeFlush(m_pCachedDmaBuffer, dwLen, CACHE_SYNC_WRITEBACK);
; 2057 :         }
; 2058 : #endif
; 2059 : 
; 2060 :     if( bRet == FALSE)

  04924	e59d3004	 ldr         r3, [sp, #4]
  04928	e3530000	 cmp         r3, #0
  0492c	1a000001	 bne         |$LN4@StartDMATr|
  04930	ea00003e	 b           |$LN3@StartDMATr|

; 2061 :         {
; 2062 :         goto cleanUp;

  04934	ea00003d	 b           |$cleanUp$43183|
  04938		 |$LN4@StartDMATr|

; 2063 :         }
; 2064 : 
; 2065 :     DWORD MMC_STAT = Read_MMC_STAT();

  04938	e59d0020	 ldr         r0, [sp, #0x20]
  0493c	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  04940	e58d0010	 str         r0, [sp, #0x10]
  04944	e59d3010	 ldr         r3, [sp, #0x10]
  04948	e58d3000	 str         r3, [sp]

; 2066 : 
; 2067 :     Write_MMC_STAT(MMC_STAT);

  0494c	e59d1000	 ldr         r1, [sp]
  04950	e59d0020	 ldr         r0, [sp, #0x20]
  04954	eb000000	 bl          |?Write_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|

; 2068 : 
; 2069 :     if( MMC_STAT & (MMCHS_STAT_DTO | MMCHS_STAT_DCRC))

  04958	e59d3000	 ldr         r3, [sp]
  0495c	e3130603	 tst         r3, #3, 12
  04960	0a00000e	 beq         |$LN2@StartDMATr|

; 2070 :         {
; 2071 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDIDMATransmit() - exit: STAT register indicates MMC_STAT_DTO or MMC_STAT_DCRC error(%x).\r\n"), MMC_STAT));

  04964	e59f30e0	 ldr         r3, [pc, #0xE0]
  04968	e5933440	 ldr         r3, [r3, #0x440]
  0496c	e3130902	 tst         r3, #2, 18
  04970	0a000005	 beq         |$LN7@StartDMATr|
  04974	e59d1000	 ldr         r1, [sp]
  04978	e59f00c8	 ldr         r0, [pc, #0xC8]
  0497c	eb000000	 bl          NKDbgPrintfW
  04980	e3a03001	 mov         r3, #1
  04984	e58d3014	 str         r3, [sp, #0x14]
  04988	ea000001	 b           |$LN8@StartDMATr|
  0498c		 |$LN7@StartDMATr|
  0498c	e3a03000	 mov         r3, #0
  04990	e58d3014	 str         r3, [sp, #0x14]
  04994		 |$LN8@StartDMATr|

; 2072 :         bRet = FALSE;

  04994	e3a03000	 mov         r3, #0
  04998	e58d3004	 str         r3, [sp, #4]

; 2073 :         }
; 2074 :     else

  0499c	ea000023	 b           |$LN1@StartDMATr|
  049a0		 |$LN2@StartDMATr|

; 2075 :         {
; 2076 :         // start the DMA
; 2077 :         EnterCriticalSection( &m_critSec );

  049a0	e59d3020	 ldr         r3, [sp, #0x20]
  049a4	e28300b0	 add         r0, r3, #0xB0
  049a8	eb000000	 bl          EnterCriticalSection

; 2078 :         SETREG32(&m_pbRegisters->MMCHS_IE, MMCHS_IE_TC);

  049ac	e59d3020	 ldr         r3, [sp, #0x20]
  049b0	e2833f57	 add         r3, r3, #0x57, 30
  049b4	e5933000	 ldr         r3, [r3]
  049b8	e2833f4d	 add         r3, r3, #0x4D, 30
  049bc	e5933000	 ldr         r3, [r3]
  049c0	e3832002	 orr         r2, r3, #2
  049c4	e59d3020	 ldr         r3, [sp, #0x20]
  049c8	e2833f57	 add         r3, r3, #0x57, 30
  049cc	e5933000	 ldr         r3, [r3]
  049d0	e2833f4d	 add         r3, r3, #0x4D, 30
  049d4	e5832000	 str         r2, [r3]

; 2079 :         SETREG32(&m_pbRegisters->MMCHS_ISE, MMCHS_ISE_TC);

  049d8	e59d3020	 ldr         r3, [sp, #0x20]
  049dc	e2833f57	 add         r3, r3, #0x57, 30
  049e0	e5933000	 ldr         r3, [r3]
  049e4	e2833f4e	 add         r3, r3, #0x4E, 30
  049e8	e5933000	 ldr         r3, [r3]
  049ec	e3832002	 orr         r2, r3, #2
  049f0	e59d3020	 ldr         r3, [sp, #0x20]
  049f4	e2833f57	 add         r3, r3, #0x57, 30
  049f8	e5933000	 ldr         r3, [r3]
  049fc	e2833f4e	 add         r3, r3, #0x4E, 30
  04a00	e5832000	 str         r2, [r3]

; 2080 :         OUTREG32(&m_pbRegisters->MMCHS_STAT, 0xFFFFFFFF);

  04a04	e59d3020	 ldr         r3, [sp, #0x20]
  04a08	e2833f57	 add         r3, r3, #0x57, 30
  04a0c	e5933000	 ldr         r3, [r3]
  04a10	e2832e13	 add         r2, r3, #0x13, 28
  04a14	e3e03000	 mvn         r3, #0
  04a18	e5823000	 str         r3, [r2]

; 2081 :         LeaveCriticalSection( &m_critSec );

  04a1c	e59d3020	 ldr         r3, [sp, #0x20]
  04a20	e28300b0	 add         r0, r3, #0xB0
  04a24	eb000000	 bl          LeaveCriticalSection

; 2082 : 
; 2083 :         SDIO_StartOutputDMA();

  04a28	e59d0020	 ldr         r0, [sp, #0x20]
  04a2c	eb000000	 bl          |?SDIO_StartOutputDMA@CSDIOControllerBase@@QAAXXZ|
  04a30		 |$LN1@StartDMATr|
  04a30		 |$LN3@StartDMATr|
  04a30		 |$cleanUp$43183|

; 2084 :         }
; 2085 : 
; 2086 : cleanUp:
; 2087 : 
; 2088 :     return bRet;

  04a30	e59d3004	 ldr         r3, [sp, #4]
  04a34	e58d3008	 str         r3, [sp, #8]

; 2089 : }

  04a38	e59d0008	 ldr         r0, [sp, #8]
  04a3c	e28dd018	 add         sp, sp, #0x18
  04a40	e89d6000	 ldmia       sp, {sp, lr}
  04a44	e12fff1e	 bx          lr
  04a48		 |$LN12@StartDMATr|
  04a48		 |$LN13@StartDMATr|
  04a48	00000000	 DCD         |??_C@_1LI@KFAFFOAL@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe@|
  04a4c		 |$LN14@StartDMATr|
  04a4c	00000000	 DCD         |dpCurSettings|
  04a50		 |$M45780|

			 ENDP  ; |?StartDMATransmit@CSDIOControllerBase@@QAAHPAEK@Z|, CSDIOControllerBase::StartDMATransmit

	EXPORT	|??_C@_1IO@OIEJLMJB@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe?$AAg@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IM@MIGEBLMJ@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe?$AAg@| [ DATA ] ; `string'
	IMPORT	|?SDIO_StopInputDMA@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::SDIO_StopInputDMA

  00138			 AREA	 |.pdata|, PDATA
|$T45797| DCD	|$LN17@DataReceiv|
	DCD	0x40006804

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IO@OIEJLMJB@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe?$AAg@| DCB "S"
	DCB	0x0, "D", 0x0, "I", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "e"
	DCB	0x0, "x", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "S"
	DCB	0x0, "T", 0x0, "A", 0x0, "T", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "d", 0x0, "i", 0x0, "c"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, " ", 0x0, "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A"
	DCB	0x0, "T", 0x0, "_", 0x0, "D", 0x0, "C", 0x0, "R", 0x0, "C"
	DCB	0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r"
	DCB	0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IM@MIGEBLMJ@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe?$AAg@| DCB "S"
	DCB	0x0, "D", 0x0, "I", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "e"
	DCB	0x0, "x", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "S"
	DCB	0x0, "T", 0x0, "A", 0x0, "T", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "d", 0x0, "i", 0x0, "c"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, " ", 0x0, "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A"
	DCB	0x0, "T", 0x0, "_", 0x0, "D", 0x0, "T", 0x0, "O", 0x0, " "
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  04a50			 AREA	 |.text|, CODE, ARM

  04a50		 |?DataReceiveCompletedHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@KPAW4SDHCCONTROLLERIST_STATE@@@Z| PROC ; CSDIOControllerBase::DataReceiveCompletedHandler

; 2106 : {

  04a50		 |$LN17@DataReceiv|
  04a50	e1a0c00d	 mov         r12, sp
  04a54	e92d000f	 stmdb       sp!, {r0 - r3}
  04a58	e92d5000	 stmdb       sp!, {r12, lr}
  04a5c	e24dd014	 sub         sp, sp, #0x14
  04a60		 |$M45794|

; 2107 :     SD_API_STATUS   status      = SD_API_STATUS_SUCCESS;

  04a60	e3a03000	 mov         r3, #0
  04a64	e58d3000	 str         r3, [sp]

; 2108 : 
; 2109 :     UNREFERENCED_PARAMETER(pRequest);
; 2110 : 
; 2111 :     static DWORD           dwSize      = 0;
; 2112 : 
; 2113 :     if(dwIntrStatus & (MMCHS_STAT_BRR | MMCHS_STAT_TC))

  04a68	e59d3024	 ldr         r3, [sp, #0x24]
  04a6c	e3130022	 tst         r3, #0x22
  04a70	0a00002f	 beq         |$LN6@DataReceiv|

; 2114 :         {
; 2115 :         Read_MMC_STAT();

  04a74	e59d001c	 ldr         r0, [sp, #0x1C]
  04a78	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|

; 2116 :    
; 2117 :         // stop DMA
; 2118 :         SDIO_StopInputDMA();

  04a7c	e59d001c	 ldr         r0, [sp, #0x1C]
  04a80	eb000000	 bl          |?SDIO_StopInputDMA@CSDIOControllerBase@@QAAXXZ|

; 2119 : 
; 2120 :         Set_MMC_STAT(MMCHS_STAT_TC);

  04a84	e3a01002	 mov         r1, #2
  04a88	e59d001c	 ldr         r0, [sp, #0x1C]
  04a8c	eb000000	 bl          |?Set_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|

; 2121 : 
; 2122 :         if ((m_pCurrentRecieveBuffer != NULL) && (m_dwCurrentRecieveBufferLength != 0))

  04a90	e59d301c	 ldr         r3, [sp, #0x1C]
  04a94	e2833f7b	 add         r3, r3, #0x7B, 30
  04a98	e5933000	 ldr         r3, [r3]
  04a9c	e3530000	 cmp         r3, #0
  04aa0	0a000022	 beq         |$LN5@DataReceiv|
  04aa4	e59d301c	 ldr         r3, [sp, #0x1C]
  04aa8	e2833e1f	 add         r3, r3, #0x1F, 28
  04aac	e5933000	 ldr         r3, [r3]
  04ab0	e3530000	 cmp         r3, #0
  04ab4	0a00001d	 beq         |$LN5@DataReceiv|

; 2123 :             {
; 2124 :             // finally, copy the data from DMA buffer to the user buffer, which maybe SG buffer,
; 2125 :             SDPerformSafeCopy(m_pCurrentRecieveBuffer, (m_pCachedDmaBuffer!=NULL) ? m_pCachedDmaBuffer : m_pDmaBuffer, m_dwCurrentRecieveBufferLength);

  04ab8	e59d301c	 ldr         r3, [sp, #0x1C]
  04abc	e2833c01	 add         r3, r3, #1, 24
  04ac0	e5933000	 ldr         r3, [r3]
  04ac4	e3530000	 cmp         r3, #0
  04ac8	0a000004	 beq         |$LN9@DataReceiv|
  04acc	e59d301c	 ldr         r3, [sp, #0x1C]
  04ad0	e2833c01	 add         r3, r3, #1, 24
  04ad4	e5933000	 ldr         r3, [r3]
  04ad8	e58d3008	 str         r3, [sp, #8]
  04adc	ea000003	 b           |$LN10@DataReceiv|
  04ae0		 |$LN9@DataReceiv|
  04ae0	e59d301c	 ldr         r3, [sp, #0x1C]
  04ae4	e28330fc	 add         r3, r3, #0xFC
  04ae8	e5933000	 ldr         r3, [r3]
  04aec	e58d3008	 str         r3, [sp, #8]
  04af0		 |$LN10@DataReceiv|
  04af0	e59d301c	 ldr         r3, [sp, #0x1C]
  04af4	e2833e1f	 add         r3, r3, #0x1F, 28
  04af8	e5932000	 ldr         r2, [r3]
  04afc	e59d1008	 ldr         r1, [sp, #8]
  04b00	e59d301c	 ldr         r3, [sp, #0x1C]
  04b04	e2833f7b	 add         r3, r3, #0x7B, 30
  04b08	e5930000	 ldr         r0, [r3]
  04b0c	eb000000	 bl          SDPerformSafeCopy

; 2126 : 
; 2127 :             m_pCurrentRecieveBuffer = NULL;

  04b10	e59d301c	 ldr         r3, [sp, #0x1C]
  04b14	e2832f7b	 add         r2, r3, #0x7B, 30
  04b18	e3a03000	 mov         r3, #0
  04b1c	e5823000	 str         r3, [r2]

; 2128 :             m_dwCurrentRecieveBufferLength = 0;

  04b20	e59d301c	 ldr         r3, [sp, #0x1C]
  04b24	e2832e1f	 add         r2, r3, #0x1F, 28
  04b28	e3a03000	 mov         r3, #0
  04b2c	e5823000	 str         r3, [r2]
  04b30		 |$LN5@DataReceiv|

; 2129 :             }
; 2130 :         }
; 2131 :     else

  04b30	ea00001f	 b           |$LN4@DataReceiv|
  04b34		 |$LN6@DataReceiv|

; 2132 :         {
; 2133 :         if( dwIntrStatus & MMCHS_STAT_DTO )

  04b34	e59d3024	 ldr         r3, [sp, #0x24]
  04b38	e3130601	 tst         r3, #1, 12
  04b3c	0a00000c	 beq         |$LN3@DataReceiv|

; 2134 :             {
; 2135 :             DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDIDMAReceive() - exit: STAT register indicates MMC_STAT_DTO error.\r\n")));

  04b40	e59f30a0	 ldr         r3, [pc, #0xA0]
  04b44	e5933440	 ldr         r3, [r3, #0x440]
  04b48	e3130902	 tst         r3, #2, 18
  04b4c	0a000004	 beq         |$LN11@DataReceiv|
  04b50	e59f0094	 ldr         r0, [pc, #0x94]
  04b54	eb000000	 bl          NKDbgPrintfW
  04b58	e3a03001	 mov         r3, #1
  04b5c	e58d300c	 str         r3, [sp, #0xC]
  04b60	ea000001	 b           |$LN12@DataReceiv|
  04b64		 |$LN11@DataReceiv|
  04b64	e3a03000	 mov         r3, #0
  04b68	e58d300c	 str         r3, [sp, #0xC]
  04b6c		 |$LN12@DataReceiv|

; 2136 :             status = SD_API_STATUS_RESPONSE_TIMEOUT;

  04b6c	e3a03153	 mov         r3, #0x53, 2
  04b70	e58d3000	 str         r3, [sp]
  04b74		 |$LN3@DataReceiv|

; 2137 :             }
; 2138 :         if( dwIntrStatus & MMCHS_STAT_DCRC ) // DATA CRC Error

  04b74	e59d3024	 ldr         r3, [sp, #0x24]
  04b78	e3130602	 tst         r3, #2, 12
  04b7c	0a00000c	 beq         |$LN2@DataReceiv|

; 2139 :             {
; 2140 :             DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDIDMAReceive() - exit: STAT register indicates MMC_STAT_DCRC error.\r\n")));

  04b80	e59f3060	 ldr         r3, [pc, #0x60]
  04b84	e5933440	 ldr         r3, [r3, #0x440]
  04b88	e3130902	 tst         r3, #2, 18
  04b8c	0a000004	 beq         |$LN13@DataReceiv|
  04b90	e59f004c	 ldr         r0, [pc, #0x4C]
  04b94	eb000000	 bl          NKDbgPrintfW
  04b98	e3a03001	 mov         r3, #1
  04b9c	e58d3010	 str         r3, [sp, #0x10]
  04ba0	ea000001	 b           |$LN14@DataReceiv|
  04ba4		 |$LN13@DataReceiv|
  04ba4	e3a03000	 mov         r3, #0
  04ba8	e58d3010	 str         r3, [sp, #0x10]
  04bac		 |$LN14@DataReceiv|

; 2141 :             status = SD_API_STATUS_RESPONSE_TIMEOUT;

  04bac	e3a03153	 mov         r3, #0x53, 2
  04bb0	e58d3000	 str         r3, [sp]
  04bb4		 |$LN2@DataReceiv|
  04bb4		 |$LN4@DataReceiv|

; 2142 :             }
; 2143 :         }
; 2144 : 
; 2145 :     if (pNextState != NULL)

  04bb4	e59d3028	 ldr         r3, [sp, #0x28]
  04bb8	e3530000	 cmp         r3, #0
  04bbc	0a000002	 beq         |$LN1@DataReceiv|

; 2146 :         {
; 2147 :         *pNextState = COMMAND_TRANSFER_STATE;

  04bc0	e59d2028	 ldr         r2, [sp, #0x28]
  04bc4	e3a03001	 mov         r3, #1
  04bc8	e5823000	 str         r3, [r2]
  04bcc		 |$LN1@DataReceiv|

; 2148 :         }
; 2149 : 
; 2150 :     return status;

  04bcc	e59d3000	 ldr         r3, [sp]
  04bd0	e58d3004	 str         r3, [sp, #4]

; 2151 : }

  04bd4	e59d0004	 ldr         r0, [sp, #4]
  04bd8	e28dd014	 add         sp, sp, #0x14
  04bdc	e89d6000	 ldmia       sp, {sp, lr}
  04be0	e12fff1e	 bx          lr
  04be4		 |$LN18@DataReceiv|
  04be4		 |$LN19@DataReceiv|
  04be4	00000000	 DCD         |??_C@_1IO@OIEJLMJB@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe?$AAg@|
  04be8		 |$LN20@DataReceiv|
  04be8	00000000	 DCD         |dpCurSettings|
  04bec		 |$LN21@DataReceiv|
  04bec	00000000	 DCD         |??_C@_1IM@MIGEBLMJ@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe?$AAg@|
  04bf0		 |$M45795|

			 ENDP  ; |?DataReceiveCompletedHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@KPAW4SDHCCONTROLLERIST_STATE@@@Z|, CSDIOControllerBase::DataReceiveCompletedHandler

	EXPORT	|??_C@_1LG@CHMLHAPG@?$AAD?$AAa?$AAt?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AAd?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KK@HPIMIBJI@?$AAD?$AAa?$AAt?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AAd?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9@| [ DATA ] ; `string'
	IMPORT	|?SDIO_StopOutputDMA@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::SDIO_StopOutputDMA

  00140			 AREA	 |.pdata|, PDATA
|$T45811| DCD	|$LN14@DataTransm|
	DCD	0x40004204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LG@CHMLHAPG@?$AAD?$AAa?$AAt?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AAd?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9@| DCB "D"
	DCB	0x0, "a", 0x0, "t", 0x0, "a", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "m", 0x0, "i", 0x0, "t", 0x0, "C"
	DCB	0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, "d", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "(", 0x0, ")", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "i", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "d", 0x0, "i", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, "s", 0x0, " ", 0x0, "M", 0x0, "M", 0x0, "C", 0x0, "_"
	DCB	0x0, "C", 0x0, "R", 0x0, "C", 0x0, "_", 0x0, "E", 0x0, "R"
	DCB	0x0, "R", 0x0, "O", 0x0, "R", 0x0, "_", 0x0, "R", 0x0, "C"
	DCB	0x0, "V", 0x0, "D", 0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "o", 0x0, "r", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KK@HPIMIBJI@?$AAD?$AAa?$AAt?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AAd?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9@| DCB "D"
	DCB	0x0, "a", 0x0, "t", 0x0, "a", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "m", 0x0, "i", 0x0, "t", 0x0, "C"
	DCB	0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, "d", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "(", 0x0, ")", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "i", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "d", 0x0, "i", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, "s", 0x0, " ", 0x0, "M", 0x0, "M", 0x0, "C", 0x0, "_"
	DCB	0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "_", 0x0, "D"
	DCB	0x0, "T", 0x0, "O", 0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "o", 0x0, "r", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  04bf0			 AREA	 |.text|, CODE, ARM

  04bf0		 |?DataTransmitCompletedHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@KPAW4SDHCCONTROLLERIST_STATE@@@Z| PROC ; CSDIOControllerBase::DataTransmitCompletedHandler

; 2167 : {

  04bf0		 |$LN14@DataTransm|
  04bf0	e1a0c00d	 mov         r12, sp
  04bf4	e92d000f	 stmdb       sp!, {r0 - r3}
  04bf8	e92d5000	 stmdb       sp!, {r12, lr}
  04bfc	e24dd010	 sub         sp, sp, #0x10
  04c00		 |$M45808|

; 2168 :     SD_API_STATUS   status = SD_API_STATUS_SUCCESS;

  04c00	e3a03000	 mov         r3, #0
  04c04	e58d3000	 str         r3, [sp]

; 2169 : 
; 2170 :     UNREFERENCED_PARAMETER(pRequest);
; 2171 : 
; 2172 :     if (dwIntrStatus & MMCHS_STAT_TC)

  04c08	e59d3020	 ldr         r3, [sp, #0x20]
  04c0c	e3130002	 tst         r3, #2
  04c10	0a000007	 beq         |$LN5@DataTransm|

; 2173 :         {
; 2174 :         Read_MMC_STAT();

  04c14	e59d0018	 ldr         r0, [sp, #0x18]
  04c18	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|

; 2175 : 
; 2176 :         // stop DMA
; 2177 :         SDIO_StopOutputDMA();

  04c1c	e59d0018	 ldr         r0, [sp, #0x18]
  04c20	eb000000	 bl          |?SDIO_StopOutputDMA@CSDIOControllerBase@@QAAXXZ|

; 2178 : 
; 2179 :         Set_MMC_STAT(MMCHS_STAT_TC);

  04c24	e3a01002	 mov         r1, #2
  04c28	e59d0018	 ldr         r0, [sp, #0x18]
  04c2c	eb000000	 bl          |?Set_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|

; 2180 :         }
; 2181 :     else

  04c30	ea000021	 b           |$LN4@DataTransm|
  04c34		 |$LN5@DataTransm|

; 2182 :         {
; 2183 :         // stop DMA
; 2184 :         SDIO_StopOutputDMA();

  04c34	e59d0018	 ldr         r0, [sp, #0x18]
  04c38	eb000000	 bl          |?SDIO_StopOutputDMA@CSDIOControllerBase@@QAAXXZ|

; 2185 : 
; 2186 :         if( dwIntrStatus & MMCHS_STAT_DTO )

  04c3c	e59d3020	 ldr         r3, [sp, #0x20]
  04c40	e3130601	 tst         r3, #1, 12
  04c44	0a00000c	 beq         |$LN3@DataTransm|

; 2187 :             {
; 2188 :             DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("DataTransmitCompletedHandler() - exit: STAT register indicates MMC_STAT_DTO error.\r\n")));

  04c48	e59f30a0	 ldr         r3, [pc, #0xA0]
  04c4c	e5933440	 ldr         r3, [r3, #0x440]
  04c50	e3130902	 tst         r3, #2, 18
  04c54	0a000004	 beq         |$LN8@DataTransm|
  04c58	e59f0094	 ldr         r0, [pc, #0x94]
  04c5c	eb000000	 bl          NKDbgPrintfW
  04c60	e3a03001	 mov         r3, #1
  04c64	e58d3008	 str         r3, [sp, #8]
  04c68	ea000001	 b           |$LN9@DataTransm|
  04c6c		 |$LN8@DataTransm|
  04c6c	e3a03000	 mov         r3, #0
  04c70	e58d3008	 str         r3, [sp, #8]
  04c74		 |$LN9@DataTransm|

; 2189 :             status = SD_API_STATUS_RESPONSE_TIMEOUT;

  04c74	e3a03153	 mov         r3, #0x53, 2
  04c78	e58d3000	 str         r3, [sp]
  04c7c		 |$LN3@DataTransm|

; 2190 :             }
; 2191 :         if( dwIntrStatus & MMCHS_STAT_DCRC ) // DATA CRC Error

  04c7c	e59d3020	 ldr         r3, [sp, #0x20]
  04c80	e3130602	 tst         r3, #2, 12
  04c84	0a00000c	 beq         |$LN2@DataTransm|

; 2192 :             {
; 2193 :             DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("DataTransmitCompletedHandler() - exit: STAT register indicates MMC_CRC_ERROR_RCVD error.\r\n")));

  04c88	e59f3060	 ldr         r3, [pc, #0x60]
  04c8c	e5933440	 ldr         r3, [r3, #0x440]
  04c90	e3130902	 tst         r3, #2, 18
  04c94	0a000004	 beq         |$LN10@DataTransm|
  04c98	e59f004c	 ldr         r0, [pc, #0x4C]
  04c9c	eb000000	 bl          NKDbgPrintfW
  04ca0	e3a03001	 mov         r3, #1
  04ca4	e58d300c	 str         r3, [sp, #0xC]
  04ca8	ea000001	 b           |$LN11@DataTransm|
  04cac		 |$LN10@DataTransm|
  04cac	e3a03000	 mov         r3, #0
  04cb0	e58d300c	 str         r3, [sp, #0xC]
  04cb4		 |$LN11@DataTransm|

; 2194 :             status = SD_API_STATUS_RESPONSE_TIMEOUT;

  04cb4	e3a03153	 mov         r3, #0x53, 2
  04cb8	e58d3000	 str         r3, [sp]
  04cbc		 |$LN2@DataTransm|
  04cbc		 |$LN4@DataTransm|

; 2195 :             }
; 2196 :         }
; 2197 : 
; 2198 :     if (pNextState != NULL)

  04cbc	e59d3024	 ldr         r3, [sp, #0x24]
  04cc0	e3530000	 cmp         r3, #0
  04cc4	0a000002	 beq         |$LN1@DataTransm|

; 2199 :         {
; 2200 :         *pNextState = COMMAND_TRANSFER_STATE;

  04cc8	e59d2024	 ldr         r2, [sp, #0x24]
  04ccc	e3a03001	 mov         r3, #1
  04cd0	e5823000	 str         r3, [r2]
  04cd4		 |$LN1@DataTransm|

; 2201 :         }
; 2202 : 
; 2203 :     return status;

  04cd4	e59d3000	 ldr         r3, [sp]
  04cd8	e58d3004	 str         r3, [sp, #4]

; 2204 : }

  04cdc	e59d0004	 ldr         r0, [sp, #4]
  04ce0	e28dd010	 add         sp, sp, #0x10
  04ce4	e89d6000	 ldmia       sp, {sp, lr}
  04ce8	e12fff1e	 bx          lr
  04cec		 |$LN15@DataTransm|
  04cec		 |$LN16@DataTransm|
  04cec	00000000	 DCD         |??_C@_1LG@CHMLHAPG@?$AAD?$AAa?$AAt?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AAd?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9@|
  04cf0		 |$LN17@DataTransm|
  04cf0	00000000	 DCD         |dpCurSettings|
  04cf4		 |$LN18@DataTransm|
  04cf4	00000000	 DCD         |??_C@_1KK@HPIMIBJI@?$AAD?$AAa?$AAt?$AAa?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AAd?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9@|
  04cf8		 |$M45809|

			 ENDP  ; |?DataTransmitCompletedHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@KPAW4SDHCCONTROLLERIST_STATE@@@Z|, CSDIOControllerBase::DataTransmitCompletedHandler


  00148			 AREA	 |.pdata|, PDATA
|$T45821| DCD	|$LN5@CardBusyCo|
	DCD	0x40001004
; Function compile flags: /Odtp

  04cf8			 AREA	 |.text|, CODE, ARM

  04cf8		 |?CardBusyCompletedHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@KPAW4SDHCCONTROLLERIST_STATE@@@Z| PROC ; CSDIOControllerBase::CardBusyCompletedHandler

; 2220 : {

  04cf8		 |$LN5@CardBusyCo|
  04cf8	e1a0c00d	 mov         r12, sp
  04cfc	e92d000f	 stmdb       sp!, {r0 - r3}
  04d00	e92d5000	 stmdb       sp!, {r12, lr}
  04d04	e24dd008	 sub         sp, sp, #8
  04d08		 |$M45818|

; 2221 :     // when card busy is complete, process it as a normal command complete interrupt.
; 2222 :     return CommandTransferCompleteHandler(pRequest, dwIntrStatus, pNextState);

  04d08	e59d301c	 ldr         r3, [sp, #0x1C]
  04d0c	e59d2018	 ldr         r2, [sp, #0x18]
  04d10	e59d1014	 ldr         r1, [sp, #0x14]
  04d14	e59d0010	 ldr         r0, [sp, #0x10]
  04d18	eb000000	 bl          |?CommandTransferCompleteHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@KPAW4SDHCCONTROLLERIST_STATE@@@Z|
  04d1c	e58d0004	 str         r0, [sp, #4]
  04d20	e59d3004	 ldr         r3, [sp, #4]
  04d24	e58d3000	 str         r3, [sp]

; 2223 : }

  04d28	e59d0000	 ldr         r0, [sp]
  04d2c	e28dd008	 add         sp, sp, #8
  04d30	e89d6000	 ldmia       sp, {sp, lr}
  04d34	e12fff1e	 bx          lr
  04d38		 |$M45819|

			 ENDP  ; |?CardBusyCompletedHandler@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@KPAW4SDHCCONTROLLERIST_STATE@@@Z|, CSDIOControllerBase::CardBusyCompletedHandler


  00150			 AREA	 |.pdata|, PDATA
|$T45827| DCD	|$LN5@SDHCCardDe|
	DCD	0x40001404
; Function compile flags: /Odtp

  04d38			 AREA	 |.text|, CODE, ARM

  04d38		 |?SDHCCardDetectIstThread@CSDIOControllerBase@@SAKPAX@Z| PROC ; CSDIOControllerBase::SDHCCardDetectIstThread

; 2233 : {

  04d38		 |$LN5@SDHCCardDe|
  04d38	e1a0c00d	 mov         r12, sp
  04d3c	e92d0001	 stmdb       sp!, {r0}
  04d40	e92d5000	 stmdb       sp!, {r12, lr}
  04d44	e24dd00c	 sub         sp, sp, #0xC
  04d48		 |$M45824|

; 2234 :     CSDIOControllerBase *pController = (CSDIOControllerBase*)lpParameter;

  04d48	e59d3014	 ldr         r3, [sp, #0x14]
  04d4c	e58d3000	 str         r3, [sp]

; 2235 :     return pController->SDHCCardDetectIstThreadImpl();

  04d50	e59d3000	 ldr         r3, [sp]
  04d54	e5933000	 ldr         r3, [r3]
  04d58	e2833010	 add         r3, r3, #0x10
  04d5c	e59d0000	 ldr         r0, [sp]
  04d60	e5933000	 ldr         r3, [r3]
  04d64	e1a0e00f	 mov         lr, pc
  04d68	e12fff13	 bx          r3
  04d6c	e58d0008	 str         r0, [sp, #8]
  04d70	e59d3008	 ldr         r3, [sp, #8]
  04d74	e58d3004	 str         r3, [sp, #4]

; 2236 : }

  04d78	e59d0004	 ldr         r0, [sp, #4]
  04d7c	e28dd00c	 add         sp, sp, #0xC
  04d80	e89d6000	 ldmia       sp, {sp, lr}
  04d84	e12fff1e	 bx          lr
  04d88		 |$M45825|

			 ENDP  ; |?SDHCCardDetectIstThread@CSDIOControllerBase@@SAKPAX@Z|, CSDIOControllerBase::SDHCCardDetectIstThread

	EXPORT	|??_C@_1FM@HOOCDBFD@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAi@| [ DATA ] ; `string'
	EXPORT	|?SDHCDeinitializeImpl@CSDIOControllerBase@@QAAJXZ| ; CSDIOControllerBase::SDHCDeinitializeImpl
	IMPORT	|ReleaseDevicePads|
	IMPORT	|?SDIO_DeinitDMA@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::SDIO_DeinitDMA
	IMPORT	|CloseHandle|
	IMPORT	|InterruptDisable|

  00158			 AREA	 |.pdata|, PDATA
|$T45839| DCD	|$LN17@SDHCDeinit|
	DCD	0x4000c204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@HOOCDBFD@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAi@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "D", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, "I", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "+", 0x0, "+"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  04d88			 AREA	 |.text|, CODE, ARM

  04d88		 |?SDHCDeinitializeImpl@CSDIOControllerBase@@QAAJXZ| PROC ; CSDIOControllerBase::SDHCDeinitializeImpl

; 2249 : {

  04d88		 |$LN17@SDHCDeinit|
  04d88	e1a0c00d	 mov         r12, sp
  04d8c	e92d0001	 stmdb       sp!, {r0}
  04d90	e92d5000	 stmdb       sp!, {r12, lr}
  04d94	e24dd024	 sub         sp, sp, #0x24
  04d98		 |$M45836|

; 2250 :     DEBUGMSG(SDCARD_ZONE_INFO, (L"CSDIOControllerBase::SDHCDeinitializeImpl++\r\n"));

  04d98	e59f32ec	 ldr         r3, [pc, #0x2EC]
  04d9c	e5933440	 ldr         r3, [r3, #0x440]
  04da0	e3130a01	 tst         r3, #1, 20
  04da4	0a000004	 beq         |$LN13@SDHCDeinit|
  04da8	e59f02d8	 ldr         r0, [pc, #0x2D8]
  04dac	eb000000	 bl          NKDbgPrintfW
  04db0	e3a03001	 mov         r3, #1
  04db4	e58d301c	 str         r3, [sp, #0x1C]
  04db8	ea000001	 b           |$LN14@SDHCDeinit|
  04dbc		 |$LN13@SDHCDeinit|
  04dbc	e3a03000	 mov         r3, #0
  04dc0	e58d301c	 str         r3, [sp, #0x1C]
  04dc4		 |$LN14@SDHCDeinit|

; 2251 :     
; 2252 :     // mark for shutdown
; 2253 :     m_fDriverShutdown = TRUE;

  04dc4	e59d302c	 ldr         r3, [sp, #0x2C]
  04dc8	e2832e13	 add         r2, r3, #0x13, 28
  04dcc	e3a03001	 mov         r3, #1
  04dd0	e5823000	 str         r3, [r2]

; 2254 : 
; 2255 :     if (m_fInitialized)

  04dd4	e59d302c	 ldr         r3, [sp, #0x2C]
  04dd8	e2833f4e	 add         r3, r3, #0x4E, 30
  04ddc	e5933000	 ldr         r3, [r3]
  04de0	e3530000	 cmp         r3, #0
  04de4	0a00002d	 beq         |$LN10@SDHCDeinit|

; 2256 :     {
; 2257 :         if( m_dwControllerSysIntr != SYSINTR_UNDEFINED )

  04de8	e59d302c	 ldr         r3, [sp, #0x2C]
  04dec	e2833f4d	 add         r3, r3, #0x4D, 30
  04df0	e5933000	 ldr         r3, [r3]
  04df4	e3730001	 cmn         r3, #1
  04df8	0a000020	 beq         |$LN9@SDHCDeinit|

; 2258 :         {
; 2259 :             // disable wakeup on SDIO interrupt
; 2260 :             if ( m_dwCurrentWakeupSources & WAKEUP_SDIO )

  04dfc	e59d302c	 ldr         r3, [sp, #0x2C]
  04e00	e28330ec	 add         r3, r3, #0xEC
  04e04	e5933000	 ldr         r3, [r3]
  04e08	e3130001	 tst         r3, #1
  04e0c	0a000009	 beq         |$LN8@SDHCDeinit|

; 2261 :             {
; 2262 :                 KernelIoControl( IOCTL_HAL_DISABLE_WAKE,
; 2263 :                     &m_dwControllerSysIntr,
; 2264 :                     sizeof( m_dwControllerSysIntr ),
; 2265 :                     NULL,
; 2266 :                     0,
; 2267 :                     NULL );

  04e10	e3a03000	 mov         r3, #0
  04e14	e58d3004	 str         r3, [sp, #4]
  04e18	e3a03000	 mov         r3, #0
  04e1c	e58d3000	 str         r3, [sp]
  04e20	e3a03000	 mov         r3, #0
  04e24	e3a02004	 mov         r2, #4
  04e28	e59d102c	 ldr         r1, [sp, #0x2C]
  04e2c	e2811f4d	 add         r1, r1, #0x4D, 30
  04e30	e59f024c	 ldr         r0, [pc, #0x24C]
  04e34	eb000000	 bl          KernelIoControl
  04e38		 |$LN8@SDHCDeinit|

; 2268 :             }
; 2269 : 
; 2270 :             // disable controller interrupt
; 2271 :             InterruptDisable(m_dwControllerSysIntr);

  04e38	e59d302c	 ldr         r3, [sp, #0x2C]
  04e3c	e2833f4d	 add         r3, r3, #0x4D, 30
  04e40	e5930000	 ldr         r0, [r3]
  04e44	eb000000	 bl          InterruptDisable

; 2272 : 
; 2273 :             // release the SYSINTR value
; 2274 :             KernelIoControl(IOCTL_HAL_RELEASE_SYSINTR, &m_dwControllerSysIntr, sizeof(DWORD), NULL, 0, NULL);

  04e48	e3a03000	 mov         r3, #0
  04e4c	e58d3004	 str         r3, [sp, #4]
  04e50	e3a03000	 mov         r3, #0
  04e54	e58d3000	 str         r3, [sp]
  04e58	e3a03000	 mov         r3, #0
  04e5c	e3a02004	 mov         r2, #4
  04e60	e59d102c	 ldr         r1, [sp, #0x2C]
  04e64	e2811f4d	 add         r1, r1, #0x4D, 30
  04e68	e59f0210	 ldr         r0, [pc, #0x210]
  04e6c	eb000000	 bl          KernelIoControl

; 2275 :             m_dwControllerSysIntr = SYSINTR_UNDEFINED;

  04e70	e59d302c	 ldr         r3, [sp, #0x2C]
  04e74	e2832f4d	 add         r2, r3, #0x4D, 30
  04e78	e3e03000	 mvn         r3, #0
  04e7c	e5823000	 str         r3, [r2]
  04e80		 |$LN9@SDHCDeinit|

; 2276 :         }
; 2277 : 
; 2278 : 
; 2279 :         if (m_fCardPresent)

  04e80	e59d302c	 ldr         r3, [sp, #0x2C]
  04e84	e28330f0	 add         r3, r3, #0xF0
  04e88	e5933000	 ldr         r3, [r3]
  04e8c	e3530000	 cmp         r3, #0
  04e90	0a000002	 beq         |$LN7@SDHCDeinit|

; 2280 :         {
; 2281 :            // remove device
; 2282 :            HandleRemoval(FALSE);

  04e94	e3a01000	 mov         r1, #0
  04e98	e59d002c	 ldr         r0, [sp, #0x2C]
  04e9c	eb000000	 bl          |?HandleRemoval@CSDIOControllerBase@@QAAXH@Z|
  04ea0		 |$LN7@SDHCDeinit|
  04ea0		 |$LN10@SDHCDeinit|

; 2283 :         }
; 2284 :     }
; 2285 : 
; 2286 :     // clean up controller IST
; 2287 :     if (NULL != m_htControllerIST)

  04ea0	e59d302c	 ldr         r3, [sp, #0x2C]
  04ea4	e2833f47	 add         r3, r3, #0x47, 30
  04ea8	e5933000	 ldr         r3, [r3]
  04eac	e3530000	 cmp         r3, #0
  04eb0	0a000010	 beq         |$LN6@SDHCDeinit|

; 2288 :     {
; 2289 :         // wake up the IST
; 2290 :         SetEvent(m_hControllerISTEvent);

  04eb4	e59d302c	 ldr         r3, [sp, #0x2C]
  04eb8	e2833f46	 add         r3, r3, #0x46, 30
  04ebc	e5930000	 ldr         r0, [r3]
  04ec0	eb000000	 bl          SetEvent

; 2291 :         // wait for the thread to exit
; 2292 :         WaitForSingleObject(m_htControllerIST, INFINITE);

  04ec4	e3e01000	 mvn         r1, #0
  04ec8	e59d302c	 ldr         r3, [sp, #0x2C]
  04ecc	e2833f47	 add         r3, r3, #0x47, 30
  04ed0	e5930000	 ldr         r0, [r3]
  04ed4	eb000000	 bl          WaitForSingleObject

; 2293 :         CloseHandle(m_htControllerIST);

  04ed8	e59d302c	 ldr         r3, [sp, #0x2C]
  04edc	e2833f47	 add         r3, r3, #0x47, 30
  04ee0	e5930000	 ldr         r0, [r3]
  04ee4	eb000000	 bl          CloseHandle

; 2294 :         m_htControllerIST = NULL;

  04ee8	e59d302c	 ldr         r3, [sp, #0x2C]
  04eec	e2832f47	 add         r2, r3, #0x47, 30
  04ef0	e3a03000	 mov         r3, #0
  04ef4	e5823000	 str         r3, [r2]
  04ef8		 |$LN6@SDHCDeinit|

; 2295 :     }
; 2296 : 
; 2297 :     // free controller interrupt event
; 2298 :     if (NULL != m_hControllerISTEvent)

  04ef8	e59d302c	 ldr         r3, [sp, #0x2C]
  04efc	e2833f46	 add         r3, r3, #0x46, 30
  04f00	e5933000	 ldr         r3, [r3]
  04f04	e3530000	 cmp         r3, #0
  04f08	0a000007	 beq         |$LN5@SDHCDeinit|

; 2299 :     {
; 2300 :         CloseHandle(m_hControllerISTEvent);

  04f0c	e59d302c	 ldr         r3, [sp, #0x2C]
  04f10	e2833f46	 add         r3, r3, #0x46, 30
  04f14	e5930000	 ldr         r0, [r3]
  04f18	eb000000	 bl          CloseHandle

; 2301 :         m_hControllerISTEvent = NULL;

  04f1c	e59d302c	 ldr         r3, [sp, #0x2C]
  04f20	e2832f46	 add         r2, r3, #0x46, 30
  04f24	e3a03000	 mov         r3, #0
  04f28	e5823000	 str         r3, [r2]
  04f2c		 |$LN5@SDHCDeinit|

; 2302 :     }
; 2303 : 
; 2304 :     // clean up card detect IST
; 2305 :     if (NULL != m_htCardDetectIST)

  04f2c	e59d302c	 ldr         r3, [sp, #0x2C]
  04f30	e2833f49	 add         r3, r3, #0x49, 30
  04f34	e5933000	 ldr         r3, [r3]
  04f38	e3530000	 cmp         r3, #0
  04f3c	0a000010	 beq         |$LN4@SDHCDeinit|

; 2306 :     {
; 2307 :         // wake up the IST
; 2308 :         SetEvent(m_hCardDetectEvent);

  04f40	e59d302c	 ldr         r3, [sp, #0x2C]
  04f44	e2833e12	 add         r3, r3, #0x12, 28
  04f48	e5930000	 ldr         r0, [r3]
  04f4c	eb000000	 bl          SetEvent

; 2309 :         // wait for the thread to exit
; 2310 :         WaitForSingleObject(m_htCardDetectIST, INFINITE);

  04f50	e3e01000	 mvn         r1, #0
  04f54	e59d302c	 ldr         r3, [sp, #0x2C]
  04f58	e2833f49	 add         r3, r3, #0x49, 30
  04f5c	e5930000	 ldr         r0, [r3]
  04f60	eb000000	 bl          WaitForSingleObject

; 2311 :         CloseHandle(m_htCardDetectIST);

  04f64	e59d302c	 ldr         r3, [sp, #0x2C]
  04f68	e2833f49	 add         r3, r3, #0x49, 30
  04f6c	e5930000	 ldr         r0, [r3]
  04f70	eb000000	 bl          CloseHandle

; 2312 :         m_htCardDetectIST = NULL;

  04f74	e59d302c	 ldr         r3, [sp, #0x2C]
  04f78	e2832f49	 add         r2, r3, #0x49, 30
  04f7c	e3a03000	 mov         r3, #0
  04f80	e5823000	 str         r3, [r2]
  04f84		 |$LN4@SDHCDeinit|

; 2313 :     }
; 2314 : 
; 2315 :     // free card detect interrupt event
; 2316 :     if (NULL != m_hCardDetectEvent)

  04f84	e59d302c	 ldr         r3, [sp, #0x2C]
  04f88	e2833e12	 add         r3, r3, #0x12, 28
  04f8c	e5933000	 ldr         r3, [r3]
  04f90	e3530000	 cmp         r3, #0
  04f94	0a000007	 beq         |$LN3@SDHCDeinit|

; 2317 :     {
; 2318 :         CloseHandle(m_hCardDetectEvent);

  04f98	e59d302c	 ldr         r3, [sp, #0x2C]
  04f9c	e2833e12	 add         r3, r3, #0x12, 28
  04fa0	e5930000	 ldr         r0, [r3]
  04fa4	eb000000	 bl          CloseHandle

; 2319 :         m_hCardDetectEvent = NULL;

  04fa8	e59d302c	 ldr         r3, [sp, #0x2C]
  04fac	e2832e12	 add         r2, r3, #0x12, 28
  04fb0	e3a03000	 mov         r3, #0
  04fb4	e5823000	 str         r3, [r2]
  04fb8		 |$LN3@SDHCDeinit|

; 2320 :     }
; 2321 :     // clean up power thread
; 2322 :     if (NULL != m_hTimerThreadIST)

  04fb8	e59d302c	 ldr         r3, [sp, #0x2C]
  04fbc	e2833f6b	 add         r3, r3, #0x6B, 30
  04fc0	e5933000	 ldr         r3, [r3]
  04fc4	e3530000	 cmp         r3, #0
  04fc8	0a000014	 beq         |$LN2@SDHCDeinit|

; 2323 :         {
; 2324 :         m_bExitThread = TRUE;

  04fcc	e59d302c	 ldr         r3, [sp, #0x2C]
  04fd0	e2832f69	 add         r2, r3, #0x69, 30
  04fd4	e3a03001	 mov         r3, #1
  04fd8	e5823000	 str         r3, [r2]

; 2325 :         SetEvent(m_hTimerEvent);

  04fdc	e59d302c	 ldr         r3, [sp, #0x2C]
  04fe0	e2833f6a	 add         r3, r3, #0x6A, 30
  04fe4	e5930000	 ldr         r0, [r3]
  04fe8	eb000000	 bl          SetEvent

; 2326 :         WaitForSingleObject(m_hTimerThreadIST, INFINITE);

  04fec	e3e01000	 mvn         r1, #0
  04ff0	e59d302c	 ldr         r3, [sp, #0x2C]
  04ff4	e2833f6b	 add         r3, r3, #0x6B, 30
  04ff8	e5930000	 ldr         r0, [r3]
  04ffc	eb000000	 bl          WaitForSingleObject

; 2327 :         CloseHandle(m_hTimerThreadIST);

  05000	e59d302c	 ldr         r3, [sp, #0x2C]
  05004	e2833f6b	 add         r3, r3, #0x6B, 30
  05008	e5930000	 ldr         r0, [r3]
  0500c	eb000000	 bl          CloseHandle

; 2328 :         m_hTimerThreadIST = NULL;

  05010	e59d302c	 ldr         r3, [sp, #0x2C]
  05014	e2832f6b	 add         r2, r3, #0x6B, 30
  05018	e3a03000	 mov         r3, #0
  0501c	e5823000	 str         r3, [r2]
  05020		 |$LN2@SDHCDeinit|

; 2329 :         }
; 2330 : 
; 2331 :     if (m_hTimerEvent != NULL)

  05020	e59d302c	 ldr         r3, [sp, #0x2C]
  05024	e2833f6a	 add         r3, r3, #0x6A, 30
  05028	e5933000	 ldr         r3, [r3]
  0502c	e3530000	 cmp         r3, #0
  05030	0a000003	 beq         |$LN1@SDHCDeinit|

; 2332 :         {
; 2333 :         CloseHandle(m_hTimerEvent);

  05034	e59d302c	 ldr         r3, [sp, #0x2C]
  05038	e2833f6a	 add         r3, r3, #0x6A, 30
  0503c	e5930000	 ldr         r0, [r3]
  05040	eb000000	 bl          CloseHandle
  05044		 |$LN1@SDHCDeinit|

; 2334 :         }
; 2335 : 
; 2336 : #ifdef SDIO_DMA_ENABLED
; 2337 :     SDIO_DeinitDMA();

  05044	e59d002c	 ldr         r0, [sp, #0x2C]
  05048	eb000000	 bl          |?SDIO_DeinitDMA@CSDIOControllerBase@@QAAXXZ|

; 2338 : #endif
; 2339 : 
; 2340 : 	// Release pads
; 2341 : 	ReleaseDevicePads(SOCGetSDHCDeviceBySlot(m_dwSlot));

  0504c	e59d302c	 ldr         r3, [sp, #0x2C]
  05050	e2833e17	 add         r3, r3, #0x17, 28
  05054	e5930000	 ldr         r0, [r3]
  05058	eb000000	 bl          SOCGetSDHCDeviceBySlot
  0505c	e58d0020	 str         r0, [sp, #0x20]
  05060	e59d0020	 ldr         r0, [sp, #0x20]
  05064	eb000000	 bl          ReleaseDevicePads

; 2342 : 
; 2343 :     return SD_API_STATUS_SUCCESS;

  05068	e3a03000	 mov         r3, #0
  0506c	e58d3018	 str         r3, [sp, #0x18]

; 2344 : }

  05070	e59d0018	 ldr         r0, [sp, #0x18]
  05074	e28dd024	 add         sp, sp, #0x24
  05078	e89d6000	 ldmia       sp, {sp, lr}
  0507c	e12fff1e	 bx          lr
  05080		 |$LN18@SDHCDeinit|
  05080		 |$LN19@SDHCDeinit|
  05080	010100d8	 DCD         0x10100d8
  05084		 |$LN20@SDHCDeinit|
  05084	010100a4	 DCD         0x10100a4
  05088		 |$LN21@SDHCDeinit|
  05088	00000000	 DCD         |??_C@_1FM@HOOCDBFD@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AAi@|
  0508c		 |$LN22@SDHCDeinit|
  0508c	00000000	 DCD         |dpCurSettings|
  05090		 |$M45837|

			 ENDP  ; |?SDHCDeinitializeImpl@CSDIOControllerBase@@QAAJXZ|, CSDIOControllerBase::SDHCDeinitializeImpl

	EXPORT	|??_C@_1EM@DKKLKFIG@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAo?$AAb?$AAt?$AAa?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAD?$AAI?$AAO?$AA?5?$AAS?$AAY?$AAS?$AAI?$AAN?$AAT?$AAR?$AA?5?$AAv?$AAa?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@LKBAGCMJ@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAI?$AAn?$AAs?$AAt?$AAa?$AAn?$AAc?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAm?$AAa?$AAp?$AAp?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@DHFJACJH@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAI?$AAn?$AAs?$AAt?$AAa?$AAn?$AAc?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JM@LFKFDBK@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAI?$AAn?$AAs?$AAt?$AAa?$AAn?$AAc?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe@| [ DATA ] ; `string'
	EXPORT	|CeSetMemoryAttributes|
	EXPORT	|??_C@_1GI@LBAFKHEB@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAI?$AAn?$AAs?$AAt?$AAa?$AAn?$AAc?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@EIBOOCCN@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl@| [ DATA ] ; `string'
	EXPORT	|?SDHCInitializeImpl@CSDIOControllerBase@@QAAJXZ| ; CSDIOControllerBase::SDHCInitializeImpl
	IMPORT	|?SDIO_InitDMA@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::SDIO_InitDMA
	IMPORT	|InterruptInitialize|
	IMPORT	|CreateEventW|
	IMPORT	|GetIrqByDevice|
	IMPORT	|VirtualFree|
	IMPORT	|VirtualCopy|
	IMPORT	|VirtualAlloc|
	IMPORT	|HalAllocateCommonBuffer|

  00160			 AREA	 |.pdata|, PDATA
|$T45870| DCD	|$LN42@SDHCInitia|
	DCD	0x40019604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@DKKLKFIG@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAo?$AAb?$AAt?$AAa?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAD?$AAI?$AAO?$AA?5?$AAS?$AAY?$AAS?$AAI?$AAN?$AAT?$AAR?$AA?5?$AAv?$AAa?$AAl@| DCB "E"
	DCB	0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "o"
	DCB	0x0, "b", 0x0, "t", 0x0, "a", 0x0, "i", 0x0, "n", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "S", 0x0, "D", 0x0, "I"
	DCB	0x0, "O", 0x0, " ", 0x0, "S", 0x0, "Y", 0x0, "S", 0x0, "I"
	DCB	0x0, "N", 0x0, "T", 0x0, "R", 0x0, " ", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, "u", 0x0, "e", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@LKBAGCMJ@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAI?$AAn?$AAs?$AAt?$AAa?$AAn?$AAc?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAm?$AAa?$AAp?$AAp?$AAi@| DCB "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "n", 0x0, "c", 0x0, "e", 0x0, ":"
	DCB	0x0, ":", 0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, "p"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "D", 0x0, "M"
	DCB	0x0, "A", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "c", 0x0, "h"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@DHFJACJH@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAI?$AAn?$AAs?$AAt?$AAa?$AAn?$AAc?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc@| DCB "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "n", 0x0, "c", 0x0, "e", 0x0, ":"
	DCB	0x0, ":", 0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " ", 0x0, "c"
	DCB	0x0, "a", 0x0, "c", 0x0, "h", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JM@LFKFDBK@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAI?$AAn?$AAs?$AAt?$AAa?$AAn?$AAc?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe@| DCB "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "n", 0x0, "c", 0x0, "e", 0x0, ":"
	DCB	0x0, ":", 0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "C", 0x0, "e", 0x0, "S"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "e", 0x0, "m", 0x0, "o"
	DCB	0x0, "r", 0x0, "y", 0x0, "A", 0x0, "t", 0x0, "t", 0x0, "r"
	DCB	0x0, "i", 0x0, "b", 0x0, "u", 0x0, "t", 0x0, "e", 0x0, "s"
	DCB	0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, " ", 0x0, "D", 0x0, "M"
	DCB	0x0, "A", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@LBAFKHEB@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAI?$AAn?$AAs?$AAt?$AAa?$AAn?$AAc?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc@| DCB "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "n", 0x0, "c", 0x0, "e", 0x0, ":"
	DCB	0x0, ":", 0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "!"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@EIBOOCCN@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, "I", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "+", 0x0, "+", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  05090			 AREA	 |.text|, CODE, ARM

  05090		 |?SDHCInitializeImpl@CSDIOControllerBase@@QAAJXZ| PROC ; CSDIOControllerBase::SDHCInitializeImpl

; 2354 : {

  05090		 |$LN42@SDHCInitia|
  05090	e1a0c00d	 mov         r12, sp
  05094	e92d0001	 stmdb       sp!, {r0}
  05098	e92d5000	 stmdb       sp!, {r12, lr}
  0509c	e24dd0a4	 sub         sp, sp, #0xA4
  050a0		 |$M45867|

; 2355 :     SD_API_STATUS status = SD_API_STATUS_INSUFFICIENT_RESOURCES; // intermediate status

  050a0	e3a0313b	 mov         r3, #0x3B, 2
  050a4	e58d302c	 str         r3, [sp, #0x2C]

; 2356 :     DMA_ADAPTER_OBJECT dmaAdapter;
; 2357 :     DWORD         threadID;
; 2358 :     DWORD *pdwSDIOIrq;
; 2359 :     DWORD dwSDIOIrqLen;
; 2360 :     DWORD dwClockRate;
; 2361 : 
; 2362 :     DEBUGMSG(SDCARD_ZONE_INFO, (L"CSDIOControllerBase::SDHCInitializeImpl++\r\n"));

  050a8	e59f3610	 ldr         r3, [pc, #0x610]
  050ac	e5933440	 ldr         r3, [r3, #0x440]
  050b0	e3130a01	 tst         r3, #1, 20
  050b4	0a000004	 beq         |$LN26@SDHCInitia|
  050b8	e59f0624	 ldr         r0, [pc, #0x624]
  050bc	eb000000	 bl          NKDbgPrintfW
  050c0	e3a03001	 mov         r3, #1
  050c4	e58d304c	 str         r3, [sp, #0x4C]
  050c8	ea000001	 b           |$LN27@SDHCInitia|
  050cc		 |$LN26@SDHCInitia|
  050cc	e3a03000	 mov         r3, #0
  050d0	e58d304c	 str         r3, [sp, #0x4C]
  050d4		 |$LN27@SDHCInitia|

; 2363 : 
; 2364 :     // allocate the DMA buffer
; 2365 :     dmaAdapter.ObjectSize = sizeof(dmaAdapter);

  050d4	e3a0300c	 mov         r3, #0xC
  050d8	e1cd31bc	 strh        r3, [sp, #0x1C]

; 2366 :     dmaAdapter.InterfaceType = Internal;

  050dc	e3a03000	 mov         r3, #0
  050e0	e58d3020	 str         r3, [sp, #0x20]

; 2367 :     dmaAdapter.BusNumber = 0;

  050e4	e3a03000	 mov         r3, #0
  050e8	e58d3024	 str         r3, [sp, #0x24]

; 2368 :     m_pDmaBuffer = (PBYTE)HalAllocateCommonBuffer( &dmaAdapter, m_dwDMABufferSize, &m_pDmaBufferPhys, FALSE );

  050ec	e3a03000	 mov         r3, #0
  050f0	e59d20ac	 ldr         r2, [sp, #0xAC]
  050f4	e2822f42	 add         r2, r2, #0x42, 30
  050f8	e59d10ac	 ldr         r1, [sp, #0xAC]
  050fc	e2811f7f	 add         r1, r1, #0x7F, 30
  05100	e5911000	 ldr         r1, [r1]
  05104	e28d001c	 add         r0, sp, #0x1C
  05108	eb000000	 bl          HalAllocateCommonBuffer
  0510c	e58d0050	 str         r0, [sp, #0x50]
  05110	e59d30ac	 ldr         r3, [sp, #0xAC]
  05114	e28320fc	 add         r2, r3, #0xFC
  05118	e59d3050	 ldr         r3, [sp, #0x50]
  0511c	e5823000	 str         r3, [r2]

; 2369 :     ASSERT(m_pDmaBuffer);

  05120	e59d30ac	 ldr         r3, [sp, #0xAC]
  05124	e28330fc	 add         r3, r3, #0xFC
  05128	e5933000	 ldr         r3, [r3]
  0512c	e3530000	 cmp         r3, #0
  05130	0a000002	 beq         |$LN28@SDHCInitia|
  05134	e3a03001	 mov         r3, #1
  05138	e58d3054	 str         r3, [sp, #0x54]
  0513c	ea000008	 b           |$LN29@SDHCInitia|
  05140		 |$LN28@SDHCInitia|
  05140	e3a03c09	 mov         r3, #9, 24
  05144	e3833041	 orr         r3, r3, #0x41
  05148	e59f2590	 ldr         r2, [pc, #0x590]
  0514c	e59f1588	 ldr         r1, [pc, #0x588]
  05150	e59f0580	 ldr         r0, [pc, #0x580]
  05154	eb000000	 bl          NKDbgPrintfW
  05158	e6000010	 __debugbreak_ce
  0515c	e3a03000	 mov         r3, #0
  05160	e58d3054	 str         r3, [sp, #0x54]
  05164		 |$LN29@SDHCInitia|

; 2370 : 
; 2371 :     if( m_pDmaBuffer == NULL )

  05164	e59d30ac	 ldr         r3, [sp, #0xAC]
  05168	e28330fc	 add         r3, r3, #0xFC
  0516c	e5933000	 ldr         r3, [r3]
  05170	e3530000	 cmp         r3, #0
  05174	1a00000e	 bne         |$LN23@SDHCInitia|

; 2372 :     {
; 2373 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("InitializeInstance:: Error allocating DMA buffer!\r\n")));

  05178	e59f3540	 ldr         r3, [pc, #0x540]
  0517c	e5933440	 ldr         r3, [r3, #0x440]
  05180	e3130902	 tst         r3, #2, 18
  05184	0a000004	 beq         |$LN30@SDHCInitia|
  05188	e59f0544	 ldr         r0, [pc, #0x544]
  0518c	eb000000	 bl          NKDbgPrintfW
  05190	e3a03001	 mov         r3, #1
  05194	e58d3058	 str         r3, [sp, #0x58]
  05198	ea000001	 b           |$LN31@SDHCInitia|
  0519c		 |$LN30@SDHCInitia|
  0519c	e3a03000	 mov         r3, #0
  051a0	e58d3058	 str         r3, [sp, #0x58]
  051a4		 |$LN31@SDHCInitia|

; 2374 :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;

  051a4	e3a0313b	 mov         r3, #0x3B, 2
  051a8	e58d302c	 str         r3, [sp, #0x2C]
  051ac	ea000135	 b           |$LN22@SDHCInitia|

; 2375 :         goto cleanUp;

  051b0	ea000134	 b           |$cleanUp$43286|
  051b4		 |$LN23@SDHCInitia|

; 2376 :     }
; 2377 : 
; 2378 :     //  Change the attributes of the buffer for cache write combine to improve write performance.
; 2379 :     if( !CeSetMemoryAttributes(m_pDmaBuffer, (void *)(m_pDmaBufferPhys.LowPart >> 8), m_dwDMABufferSize, PAGE_WRITECOMBINE))

  051b4	e3a03b01	 mov         r3, #1, 22
  051b8	e59d20ac	 ldr         r2, [sp, #0xAC]
  051bc	e2822f7f	 add         r2, r2, #0x7F, 30
  051c0	e5922000	 ldr         r2, [r2]
  051c4	e59d10ac	 ldr         r1, [sp, #0xAC]
  051c8	e2811f42	 add         r1, r1, #0x42, 30
  051cc	e5911000	 ldr         r1, [r1]
  051d0	e1a01421	 mov         r1, r1, lsr #8
  051d4	e59d00ac	 ldr         r0, [sp, #0xAC]
  051d8	e28000fc	 add         r0, r0, #0xFC
  051dc	e5900000	 ldr         r0, [r0]
  051e0	eb000000	 bl          CeSetMemoryAttributes
  051e4	e58d005c	 str         r0, [sp, #0x5C]
  051e8	e59d305c	 ldr         r3, [sp, #0x5C]
  051ec	e3530000	 cmp         r3, #0
  051f0	1a00000e	 bne         |$LN21@SDHCInitia|

; 2380 :     {
; 2381 :         DEBUGMSG(SDCARD_ZONE_ERROR, (L"InitializeInstance:: Error failed CeSetMemoryAttributes for SDHC DMA buffer\r\n"));

  051f4	e59f34c4	 ldr         r3, [pc, #0x4C4]
  051f8	e5933440	 ldr         r3, [r3, #0x440]
  051fc	e3130902	 tst         r3, #2, 18
  05200	0a000004	 beq         |$LN32@SDHCInitia|
  05204	e59f04c4	 ldr         r0, [pc, #0x4C4]
  05208	eb000000	 bl          NKDbgPrintfW
  0520c	e3a03001	 mov         r3, #1
  05210	e58d3060	 str         r3, [sp, #0x60]
  05214	ea000001	 b           |$LN33@SDHCInitia|
  05218		 |$LN32@SDHCInitia|
  05218	e3a03000	 mov         r3, #0
  0521c	e58d3060	 str         r3, [sp, #0x60]
  05220		 |$LN33@SDHCInitia|

; 2382 :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;

  05220	e3a0313b	 mov         r3, #0x3B, 2
  05224	e58d302c	 str         r3, [sp, #0x2C]
  05228	ea000116	 b           |$LN20@SDHCInitia|

; 2383 :         goto cleanUp;

  0522c	ea000115	 b           |$cleanUp$43286|
  05230		 |$LN21@SDHCInitia|

; 2384 :     }
; 2385 : 
; 2386 :     // map DMA buffer to cached memory so we can get better performance in the read operations. The will need to invalidate 
; 2387 :     // (not writeback) the cahced memory before copying data from the cached DMA to the MDD buffer!!!  
; 2388 :     m_pCachedDmaBuffer = (PBYTE)VirtualAlloc(NULL, m_dwDMABufferSize, MEM_RESERVE, PAGE_READWRITE);

  05230	e3a03004	 mov         r3, #4
  05234	e3a02a02	 mov         r2, #2, 20
  05238	e59d10ac	 ldr         r1, [sp, #0xAC]
  0523c	e2811f7f	 add         r1, r1, #0x7F, 30
  05240	e5911000	 ldr         r1, [r1]
  05244	e3a00000	 mov         r0, #0
  05248	eb000000	 bl          VirtualAlloc
  0524c	e58d0064	 str         r0, [sp, #0x64]
  05250	e59d30ac	 ldr         r3, [sp, #0xAC]
  05254	e2832c01	 add         r2, r3, #1, 24
  05258	e59d3064	 ldr         r3, [sp, #0x64]
  0525c	e5823000	 str         r3, [r2]

; 2389 : 
; 2390 :     if (m_pCachedDmaBuffer == NULL)

  05260	e59d30ac	 ldr         r3, [sp, #0xAC]
  05264	e2833c01	 add         r3, r3, #1, 24
  05268	e5933000	 ldr         r3, [r3]
  0526c	e3530000	 cmp         r3, #0
  05270	1a00000b	 bne         |$LN19@SDHCInitia|

; 2391 :         {
; 2392 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("InitializeInstance:: Error allocating DMA cached buffer!\r\n")));

  05274	e59f3444	 ldr         r3, [pc, #0x444]
  05278	e5933440	 ldr         r3, [r3, #0x440]
  0527c	e3130902	 tst         r3, #2, 18
  05280	0a000004	 beq         |$LN34@SDHCInitia|
  05284	e59f0440	 ldr         r0, [pc, #0x440]
  05288	eb000000	 bl          NKDbgPrintfW
  0528c	e3a03001	 mov         r3, #1
  05290	e58d3068	 str         r3, [sp, #0x68]
  05294	ea000001	 b           |$LN35@SDHCInitia|
  05298		 |$LN34@SDHCInitia|
  05298	e3a03000	 mov         r3, #0
  0529c	e58d3068	 str         r3, [sp, #0x68]
  052a0		 |$LN35@SDHCInitia|

; 2393 :         }
; 2394 :     else

  052a0	ea000027	 b           |$LN18@SDHCInitia|
  052a4		 |$LN19@SDHCInitia|

; 2395 :         {
; 2396 :         if (!VirtualCopy(m_pCachedDmaBuffer, (PVOID)(m_pDmaBufferPhys.LowPart>>8), m_dwDMABufferSize, PAGE_READWRITE | PAGE_PHYSICAL))

  052a4	e3a03b01	 mov         r3, #1, 22
  052a8	e3833004	 orr         r3, r3, #4
  052ac	e59d20ac	 ldr         r2, [sp, #0xAC]
  052b0	e2822f7f	 add         r2, r2, #0x7F, 30
  052b4	e5922000	 ldr         r2, [r2]
  052b8	e59d10ac	 ldr         r1, [sp, #0xAC]
  052bc	e2811f42	 add         r1, r1, #0x42, 30
  052c0	e5911000	 ldr         r1, [r1]
  052c4	e1a01421	 mov         r1, r1, lsr #8
  052c8	e59d00ac	 ldr         r0, [sp, #0xAC]
  052cc	e2800c01	 add         r0, r0, #1, 24
  052d0	e5900000	 ldr         r0, [r0]
  052d4	eb000000	 bl          VirtualCopy
  052d8	e58d006c	 str         r0, [sp, #0x6C]
  052dc	e59d306c	 ldr         r3, [sp, #0x6C]
  052e0	e3530000	 cmp         r3, #0
  052e4	1a000016	 bne         |$LN17@SDHCInitia|

; 2397 :             {
; 2398 :             DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("InitializeInstance:: Error mapping DMA cached buffer!\r\n")));

  052e8	e59f33d0	 ldr         r3, [pc, #0x3D0]
  052ec	e5933440	 ldr         r3, [r3, #0x440]
  052f0	e3130902	 tst         r3, #2, 18
  052f4	0a000004	 beq         |$LN36@SDHCInitia|
  052f8	e59f03c8	 ldr         r0, [pc, #0x3C8]
  052fc	eb000000	 bl          NKDbgPrintfW
  05300	e3a03001	 mov         r3, #1
  05304	e58d3070	 str         r3, [sp, #0x70]
  05308	ea000001	 b           |$LN37@SDHCInitia|
  0530c		 |$LN36@SDHCInitia|
  0530c	e3a03000	 mov         r3, #0
  05310	e58d3070	 str         r3, [sp, #0x70]
  05314		 |$LN37@SDHCInitia|

; 2399 :             VirtualFree(m_pCachedDmaBuffer, m_dwDMABufferSize, MEM_RELEASE);

  05314	e3a02902	 mov         r2, #2, 18
  05318	e59d30ac	 ldr         r3, [sp, #0xAC]
  0531c	e2833f7f	 add         r3, r3, #0x7F, 30
  05320	e5931000	 ldr         r1, [r3]
  05324	e59d30ac	 ldr         r3, [sp, #0xAC]
  05328	e2833c01	 add         r3, r3, #1, 24
  0532c	e5930000	 ldr         r0, [r3]
  05330	eb000000	 bl          VirtualFree

; 2400 :             m_pCachedDmaBuffer = NULL;

  05334	e59d30ac	 ldr         r3, [sp, #0xAC]
  05338	e2832c01	 add         r2, r3, #1, 24
  0533c	e3a03000	 mov         r3, #0
  05340	e5823000	 str         r3, [r2]
  05344		 |$LN17@SDHCInitia|
  05344		 |$LN18@SDHCInitia|

; 2401 :             }
; 2402 :         }
; 2403 : 
; 2404 :     SoftwareReset(SOFT_RESET_ALL);

  05344	e3a01401	 mov         r1, #1, 8
  05348	e59d00ac	 ldr         r0, [sp, #0xAC]
  0534c	eb000000	 bl          |?SoftwareReset@CSDIOControllerBase@@QAAXK@Z|

; 2405 : 
; 2406 :     dwClockRate = MMCSD_CLOCK_INIT;

  05350	e3a03a61	 mov         r3, #0x61, 20
  05354	e3833d2a	 orr         r3, r3, #0x2A, 26
  05358	e58d3014	 str         r3, [sp, #0x14]

; 2407 :     SetClockRate(&dwClockRate);

  0535c	e28d1014	 add         r1, sp, #0x14
  05360	e59d00ac	 ldr         r0, [sp, #0xAC]
  05364	eb000000	 bl          |?SetClockRate@CSDIOControllerBase@@QAAXPAK@Z|

; 2408 : 
; 2409 :     // convert the SDIO hardware IRQ into a logical SYSINTR value
; 2410 :     DWORD rgdwSDIOIrq[] = {
; 2411 :         GetIrqByDevice(SOCGetSDHCDeviceBySlot(MMCSLOT_1), NULL),

  05368	e3a00001	 mov         r0, #1
  0536c	eb000000	 bl          SOCGetSDHCDeviceBySlot
  05370	e58d0074	 str         r0, [sp, #0x74]
  05374	e3a01000	 mov         r1, #0
  05378	e59d0074	 ldr         r0, [sp, #0x74]
  0537c	eb000000	 bl          GetIrqByDevice
  05380	e58d0078	 str         r0, [sp, #0x78]
  05384	e59d3078	 ldr         r3, [sp, #0x78]
  05388	e58d3008	 str         r3, [sp, #8]

; 2412 :         GetIrqByDevice(SOCGetSDHCDeviceBySlot(MMCSLOT_2), NULL)
; 2413 :         };

  0538c	e3a00002	 mov         r0, #2
  05390	eb000000	 bl          SOCGetSDHCDeviceBySlot
  05394	e58d007c	 str         r0, [sp, #0x7C]
  05398	e3a01000	 mov         r1, #0
  0539c	e59d007c	 ldr         r0, [sp, #0x7C]
  053a0	eb000000	 bl          GetIrqByDevice
  053a4	e58d0080	 str         r0, [sp, #0x80]
  053a8	e59d3080	 ldr         r3, [sp, #0x80]
  053ac	e58d300c	 str         r3, [sp, #0xC]

; 2414 :     if(m_dwSlot == MMCSLOT_1)

  053b0	e59d30ac	 ldr         r3, [sp, #0xAC]
  053b4	e2833e17	 add         r3, r3, #0x17, 28
  053b8	e5933000	 ldr         r3, [r3]
  053bc	e3530001	 cmp         r3, #1
  053c0	1a000002	 bne         |$LN16@SDHCInitia|

; 2415 :       pdwSDIOIrq = &rgdwSDIOIrq[0];

  053c4	e28d3008	 add         r3, sp, #8
  053c8	e58d3010	 str         r3, [sp, #0x10]

; 2416 :     else

  053cc	ea000002	 b           |$LN15@SDHCInitia|
  053d0		 |$LN16@SDHCInitia|

; 2417 :       pdwSDIOIrq = &rgdwSDIOIrq[1];

  053d0	e28d3008	 add         r3, sp, #8
  053d4	e2833004	 add         r3, r3, #4
  053d8	e58d3010	 str         r3, [sp, #0x10]
  053dc		 |$LN15@SDHCInitia|

; 2418 :     dwSDIOIrqLen = sizeof(DWORD);

  053dc	e3a03004	 mov         r3, #4
  053e0	e58d3028	 str         r3, [sp, #0x28]

; 2419 : 
; 2420 :     if (!KernelIoControl(IOCTL_HAL_REQUEST_SYSINTR, pdwSDIOIrq, dwSDIOIrqLen, &m_dwControllerSysIntr, sizeof(DWORD), NULL))

  053e4	e3a03000	 mov         r3, #0
  053e8	e58d3004	 str         r3, [sp, #4]
  053ec	e3a03004	 mov         r3, #4
  053f0	e58d3000	 str         r3, [sp]
  053f4	e59d30ac	 ldr         r3, [sp, #0xAC]
  053f8	e2833f4d	 add         r3, r3, #0x4D, 30
  053fc	e59d2028	 ldr         r2, [sp, #0x28]
  05400	e59d1010	 ldr         r1, [sp, #0x10]
  05404	e59f02b8	 ldr         r0, [pc, #0x2B8]
  05408	eb000000	 bl          KernelIoControl
  0540c	e58d0084	 str         r0, [sp, #0x84]
  05410	e59d3084	 ldr         r3, [sp, #0x84]
  05414	e3530000	 cmp         r3, #0
  05418	1a000012	 bne         |$LN14@SDHCInitia|

; 2421 :     {
; 2422 :         // invalid SDIO SYSINTR value!
; 2423 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("Error obtaining SDIO SYSINTR value!\r\n")));

  0541c	e59f329c	 ldr         r3, [pc, #0x29C]
  05420	e5933440	 ldr         r3, [r3, #0x440]
  05424	e3130902	 tst         r3, #2, 18
  05428	0a000004	 beq         |$LN38@SDHCInitia|
  0542c	e59f0288	 ldr         r0, [pc, #0x288]
  05430	eb000000	 bl          NKDbgPrintfW
  05434	e3a03001	 mov         r3, #1
  05438	e58d3088	 str         r3, [sp, #0x88]
  0543c	ea000001	 b           |$LN39@SDHCInitia|
  05440		 |$LN38@SDHCInitia|
  05440	e3a03000	 mov         r3, #0
  05444	e58d3088	 str         r3, [sp, #0x88]
  05448		 |$LN39@SDHCInitia|

; 2424 :         m_dwControllerSysIntr = SYSINTR_UNDEFINED;

  05448	e59d30ac	 ldr         r3, [sp, #0xAC]
  0544c	e2832f4d	 add         r2, r3, #0x4D, 30
  05450	e3e03000	 mvn         r3, #0
  05454	e5823000	 str         r3, [r2]

; 2425 :         status = SD_API_STATUS_UNSUCCESSFUL;

  05458	e3a0310f	 mov         r3, #0xF, 2
  0545c	e58d302c	 str         r3, [sp, #0x2C]
  05460	ea000088	 b           |$LN13@SDHCInitia|

; 2426 :         goto cleanUp;

  05464	ea000087	 b           |$cleanUp$43286|
  05468		 |$LN14@SDHCInitia|

; 2427 :     }
; 2428 : 
; 2429 :     // allocate the interrupt event for the SDIO/controller interrupt
; 2430 :     m_hControllerISTEvent = CreateEvent( NULL, FALSE, FALSE, NULL );

  05468	e3a03000	 mov         r3, #0
  0546c	e3a02000	 mov         r2, #0
  05470	e3a01000	 mov         r1, #0
  05474	e3a00000	 mov         r0, #0
  05478	eb000000	 bl          CreateEventW
  0547c	e58d008c	 str         r0, [sp, #0x8C]
  05480	e59d30ac	 ldr         r3, [sp, #0xAC]
  05484	e2832f46	 add         r2, r3, #0x46, 30
  05488	e59d308c	 ldr         r3, [sp, #0x8C]
  0548c	e5823000	 str         r3, [r2]

; 2431 : 
; 2432 :     if (NULL == m_hControllerISTEvent)

  05490	e59d30ac	 ldr         r3, [sp, #0xAC]
  05494	e2833f46	 add         r3, r3, #0x46, 30
  05498	e5933000	 ldr         r3, [r3]
  0549c	e3530000	 cmp         r3, #0
  054a0	1a000003	 bne         |$LN12@SDHCInitia|

; 2433 :     {
; 2434 :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;

  054a4	e3a0313b	 mov         r3, #0x3B, 2
  054a8	e58d302c	 str         r3, [sp, #0x2C]
  054ac	ea000075	 b           |$LN11@SDHCInitia|

; 2435 :         goto cleanUp;

  054b0	ea000074	 b           |$cleanUp$43286|
  054b4		 |$LN12@SDHCInitia|

; 2436 :     }
; 2437 : 
; 2438 :     if ( !InterruptInitialize( m_dwControllerSysIntr, m_hControllerISTEvent, NULL, 0 ) )

  054b4	e3a03000	 mov         r3, #0
  054b8	e3a02000	 mov         r2, #0
  054bc	e59d10ac	 ldr         r1, [sp, #0xAC]
  054c0	e2811f46	 add         r1, r1, #0x46, 30
  054c4	e5911000	 ldr         r1, [r1]
  054c8	e59d00ac	 ldr         r0, [sp, #0xAC]
  054cc	e2800f4d	 add         r0, r0, #0x4D, 30
  054d0	e5900000	 ldr         r0, [r0]
  054d4	eb000000	 bl          InterruptInitialize
  054d8	e58d0090	 str         r0, [sp, #0x90]
  054dc	e59d3090	 ldr         r3, [sp, #0x90]
  054e0	e3530000	 cmp         r3, #0
  054e4	1a000003	 bne         |$LN10@SDHCInitia|

; 2439 :     {
; 2440 :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;

  054e8	e3a0313b	 mov         r3, #0x3B, 2
  054ec	e58d302c	 str         r3, [sp, #0x2C]
  054f0	ea000064	 b           |$LN9@SDHCInitia|

; 2441 :         goto cleanUp;

  054f4	ea000063	 b           |$cleanUp$43286|
  054f8		 |$LN10@SDHCInitia|

; 2442 :     }
; 2443 : 
; 2444 :     // allocate the interrupt event for card detection
; 2445 :     m_hCardDetectEvent = CreateEvent(NULL, FALSE, FALSE,NULL);

  054f8	e3a03000	 mov         r3, #0
  054fc	e3a02000	 mov         r2, #0
  05500	e3a01000	 mov         r1, #0
  05504	e3a00000	 mov         r0, #0
  05508	eb000000	 bl          CreateEventW
  0550c	e58d0094	 str         r0, [sp, #0x94]
  05510	e59d30ac	 ldr         r3, [sp, #0xAC]
  05514	e2832e12	 add         r2, r3, #0x12, 28
  05518	e59d3094	 ldr         r3, [sp, #0x94]
  0551c	e5823000	 str         r3, [r2]

; 2446 : 
; 2447 :     if (NULL == m_hCardDetectEvent)

  05520	e59d30ac	 ldr         r3, [sp, #0xAC]
  05524	e2833e12	 add         r3, r3, #0x12, 28
  05528	e5933000	 ldr         r3, [r3]
  0552c	e3530000	 cmp         r3, #0
  05530	1a000003	 bne         |$LN8@SDHCInitia|

; 2448 :     {
; 2449 :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;

  05534	e3a0313b	 mov         r3, #0x3B, 2
  05538	e58d302c	 str         r3, [sp, #0x2C]
  0553c	ea000051	 b           |$LN7@SDHCInitia|

; 2450 :         goto cleanUp;

  05540	ea000050	 b           |$cleanUp$43286|
  05544		 |$LN8@SDHCInitia|

; 2451 :     }
; 2452 : 
; 2453 :     // create the Controller IST thread
; 2454 :     m_htControllerIST = CreateThread(NULL,
; 2455 :         0,
; 2456 :         CSDIOControllerBase::SDHCControllerIstThread,
; 2457 :         this,
; 2458 :         0,
; 2459 :         &threadID);

  05544	e28d3018	 add         r3, sp, #0x18
  05548	e58d3004	 str         r3, [sp, #4]
  0554c	e3a03000	 mov         r3, #0
  05550	e58d3000	 str         r3, [sp]
  05554	e59d30ac	 ldr         r3, [sp, #0xAC]
  05558	e59f2158	 ldr         r2, [pc, #0x158]
  0555c	e3a01000	 mov         r1, #0
  05560	e3a00000	 mov         r0, #0
  05564	eb000000	 bl          CreateThread
  05568	e58d0098	 str         r0, [sp, #0x98]
  0556c	e59d30ac	 ldr         r3, [sp, #0xAC]
  05570	e2832f47	 add         r2, r3, #0x47, 30
  05574	e59d3098	 ldr         r3, [sp, #0x98]
  05578	e5823000	 str         r3, [r2]

; 2460 : 
; 2461 :     if (NULL == m_htControllerIST) 

  0557c	e59d30ac	 ldr         r3, [sp, #0xAC]
  05580	e2833f47	 add         r3, r3, #0x47, 30
  05584	e5933000	 ldr         r3, [r3]
  05588	e3530000	 cmp         r3, #0
  0558c	1a000003	 bne         |$LN6@SDHCInitia|

; 2462 :     {
; 2463 :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;

  05590	e3a0313b	 mov         r3, #0x3B, 2
  05594	e58d302c	 str         r3, [sp, #0x2C]
  05598	ea00003a	 b           |$LN5@SDHCInitia|

; 2464 :         goto cleanUp;

  0559c	ea000039	 b           |$cleanUp$43286|
  055a0		 |$LN6@SDHCInitia|

; 2465 :     }
; 2466 : 
; 2467 : #ifdef SDIO_PRINT_THREAD
; 2468 : 
; 2469 :         m_cmdRdIndex = m_cmdWrIndex = 0;
; 2470 :     m_hPrintEvent = CreateEvent(NULL, FALSE, FALSE,NULL);
; 2471 : 
; 2472 :     if (NULL == m_hPrintEvent)
; 2473 :     {
; 2474 :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;
; 2475 :         goto cleanUp;
; 2476 :     }
; 2477 : 
; 2478 :     m_hPrintIST = CreateThread(NULL,
; 2479 :         0,
; 2480 :         CSDIOControllerBase::SDHCPrintThread,
; 2481 :         this,
; 2482 :         0,
; 2483 :         &threadID);
; 2484 : 
; 2485 :     if (NULL == m_hPrintIST)
; 2486 :     {
; 2487 :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;
; 2488 :         goto cleanUp;
; 2489 :     }
; 2490 : 
; 2491 : #endif
; 2492 : 
; 2493 :     // start timer thread
; 2494 :     m_bDisablePower = FALSE;

  055a0	e59d30ac	 ldr         r3, [sp, #0xAC]
  055a4	e2832f73	 add         r2, r3, #0x73, 30
  055a8	e3a03000	 mov         r3, #0
  055ac	e5823000	 str         r3, [r2]

; 2495 :     m_hTimerThreadIST = NULL;

  055b0	e59d30ac	 ldr         r3, [sp, #0xAC]
  055b4	e2832f6b	 add         r2, r3, #0x6B, 30
  055b8	e3a03000	 mov         r3, #0
  055bc	e5823000	 str         r3, [r2]

; 2496 :     m_hTimerEvent = CreateEvent(NULL, FALSE, FALSE, NULL);

  055c0	e3a03000	 mov         r3, #0
  055c4	e3a02000	 mov         r2, #0
  055c8	e3a01000	 mov         r1, #0
  055cc	e3a00000	 mov         r0, #0
  055d0	eb000000	 bl          CreateEventW
  055d4	e58d009c	 str         r0, [sp, #0x9C]
  055d8	e59d30ac	 ldr         r3, [sp, #0xAC]
  055dc	e2832f6a	 add         r2, r3, #0x6A, 30
  055e0	e59d309c	 ldr         r3, [sp, #0x9C]
  055e4	e5823000	 str         r3, [r2]

; 2497 :     if (m_hTimerEvent != NULL)

  055e8	e59d30ac	 ldr         r3, [sp, #0xAC]
  055ec	e2833f6a	 add         r3, r3, #0x6A, 30
  055f0	e5933000	 ldr         r3, [r3]
  055f4	e3530000	 cmp         r3, #0
  055f8	0a00000d	 beq         |$LN4@SDHCInitia|

; 2498 :         {
; 2499 :         m_hTimerThreadIST = CreateThread(NULL,
; 2500 :             0,
; 2501 :             CSDIOControllerBase::SDHCPowerTimerThread,
; 2502 :             this,
; 2503 :             0,
; 2504 :             &threadID);

  055fc	e28d3018	 add         r3, sp, #0x18
  05600	e58d3004	 str         r3, [sp, #4]
  05604	e3a03000	 mov         r3, #0
  05608	e58d3000	 str         r3, [sp]
  0560c	e59d30ac	 ldr         r3, [sp, #0xAC]
  05610	e59f209c	 ldr         r2, [pc, #0x9C]
  05614	e3a01000	 mov         r1, #0
  05618	e3a00000	 mov         r0, #0
  0561c	eb000000	 bl          CreateThread
  05620	e58d00a0	 str         r0, [sp, #0xA0]
  05624	e59d30ac	 ldr         r3, [sp, #0xAC]
  05628	e2832f6b	 add         r2, r3, #0x6B, 30
  0562c	e59d30a0	 ldr         r3, [sp, #0xA0]
  05630	e5823000	 str         r3, [r2]
  05634		 |$LN4@SDHCInitia|

; 2505 :         }
; 2506 : 
; 2507 :     if (NULL == m_hTimerThreadIST)

  05634	e59d30ac	 ldr         r3, [sp, #0xAC]
  05638	e2833f6b	 add         r3, r3, #0x6B, 30
  0563c	e5933000	 ldr         r3, [r3]
  05640	e3530000	 cmp         r3, #0
  05644	1a000003	 bne         |$LN3@SDHCInitia|

; 2508 :     {
; 2509 :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;

  05648	e3a0313b	 mov         r3, #0x3B, 2
  0564c	e58d302c	 str         r3, [sp, #0x2C]
  05650	ea00000c	 b           |$LN2@SDHCInitia|

; 2510 :         goto cleanUp;

  05654	ea00000b	 b           |$cleanUp$43286|
  05658		 |$LN3@SDHCInitia|

; 2511 :     }
; 2512 : 
; 2513 :     m_fInitialized = TRUE;

  05658	e59d30ac	 ldr         r3, [sp, #0xAC]
  0565c	e2832f4e	 add         r2, r3, #0x4E, 30
  05660	e3a03001	 mov         r3, #1
  05664	e5823000	 str         r3, [r2]

; 2514 : 
; 2515 :     // on start we need the IST to check the slot for a card
; 2516 :     SetEvent(m_hCardDetectEvent);

  05668	e59d30ac	 ldr         r3, [sp, #0xAC]
  0566c	e2833e12	 add         r3, r3, #0x12, 28
  05670	e5930000	 ldr         r0, [r3]
  05674	eb000000	 bl          SetEvent

; 2517 : 
; 2518 : #ifdef SDIO_DMA_ENABLED
; 2519 :     SDIO_InitDMA();

  05678	e59d00ac	 ldr         r0, [sp, #0xAC]
  0567c	eb000000	 bl          |?SDIO_InitDMA@CSDIOControllerBase@@QAAXXZ|

; 2520 : #endif
; 2521 : 
; 2522 :     status = SD_API_STATUS_SUCCESS;

  05680	e3a03000	 mov         r3, #0
  05684	e58d302c	 str         r3, [sp, #0x2C]
  05688		 |$LN2@SDHCInitia|
  05688		 |$LN5@SDHCInitia|
  05688		 |$LN7@SDHCInitia|
  05688		 |$LN9@SDHCInitia|
  05688		 |$LN11@SDHCInitia|
  05688		 |$LN13@SDHCInitia|
  05688		 |$LN20@SDHCInitia|
  05688		 |$LN22@SDHCInitia|
  05688		 |$cleanUp$43286|

; 2523 : 
; 2524 : cleanUp:
; 2525 : 
; 2526 :     if (!SD_API_SUCCESS(status))

  05688	e59d302c	 ldr         r3, [sp, #0x2C]
  0568c	e3530000	 cmp         r3, #0
  05690	aa000001	 bge         |$LN1@SDHCInitia|

; 2527 :     {
; 2528 :         // just call the deinit handler directly to cleanup
; 2529 :         SDHCDeinitializeImpl();

  05694	e59d00ac	 ldr         r0, [sp, #0xAC]
  05698	eb000000	 bl          |?SDHCDeinitializeImpl@CSDIOControllerBase@@QAAJXZ|
  0569c		 |$LN1@SDHCInitia|

; 2530 :     }
; 2531 :     return status;

  0569c	e59d302c	 ldr         r3, [sp, #0x2C]
  056a0	e58d3048	 str         r3, [sp, #0x48]

; 2532 : }

  056a4	e59d0048	 ldr         r0, [sp, #0x48]
  056a8	e28dd0a4	 add         sp, sp, #0xA4
  056ac	e89d6000	 ldmia       sp, {sp, lr}
  056b0	e12fff1e	 bx          lr
  056b4		 |$LN43@SDHCInitia|
  056b4		 |$LN44@SDHCInitia|
  056b4	00000000	 DCD         |?SDHCPowerTimerThread@CSDIOControllerBase@@SAKPAX@Z|
  056b8		 |$LN45@SDHCInitia|
  056b8	00000000	 DCD         |?SDHCControllerIstThread@CSDIOControllerBase@@SAKPAX@Z|
  056bc		 |$LN46@SDHCInitia|
  056bc	00000000	 DCD         |??_C@_1EM@DKKLKFIG@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAo?$AAb?$AAt?$AAa?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAD?$AAI?$AAO?$AA?5?$AAS?$AAY?$AAS?$AAI?$AAN?$AAT?$AAR?$AA?5?$AAv?$AAa?$AAl@|
  056c0		 |$LN47@SDHCInitia|
  056c0	00000000	 DCD         |dpCurSettings|
  056c4		 |$LN48@SDHCInitia|
  056c4	01010098	 DCD         0x1010098
  056c8		 |$LN49@SDHCInitia|
  056c8	00000000	 DCD         |??_C@_1HA@LKBAGCMJ@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAI?$AAn?$AAs?$AAt?$AAa?$AAn?$AAc?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAm?$AAa?$AAp?$AAp?$AAi@|
  056cc		 |$LN50@SDHCInitia|
  056cc	00000000	 DCD         |??_C@_1HG@DHFJACJH@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAI?$AAn?$AAs?$AAt?$AAa?$AAn?$AAc?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc@|
  056d0		 |$LN51@SDHCInitia|
  056d0	00000000	 DCD         |??_C@_1JM@LFKFDBK@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAI?$AAn?$AAs?$AAt?$AAa?$AAn?$AAc?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe@|
  056d4		 |$LN52@SDHCInitia|
  056d4	00000000	 DCD         |??_C@_1GI@LBAFKHEB@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAI?$AAn?$AAs?$AAt?$AAa?$AAn?$AAc?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc@|
  056d8		 |$LN53@SDHCInitia|
  056d8	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  056dc		 |$LN54@SDHCInitia|
  056dc	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  056e0		 |$LN55@SDHCInitia|
  056e0	00000000	 DCD         |??_C@_1KA@CLLCPJCJ@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  056e4		 |$LN56@SDHCInitia|
  056e4	00000000	 DCD         |??_C@_1FI@EIBOOCCN@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl@|
  056e8		 |$M45868|

			 ENDP  ; |?SDHCInitializeImpl@CSDIOControllerBase@@QAAJXZ|, CSDIOControllerBase::SDHCInitializeImpl

	IMPORT	|KernelLibIoControl|
; File c:\wince600\public\common\oak\inc\pkfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T45893| DCD	|$LN5@CeSetMemor|
	DCD	0x40001604
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |CeSetMemoryAttributes| PROC

; 1422 : {

  00000		 |$LN5@CeSetMemor|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd020	 sub         sp, sp, #0x20
  00010		 |$M45890|

; 1423 :     return KernelLibIoControl ((HANDLE) KMOD_CORE, IOCTL_KLIB_SETMEMORYATTR,
; 1424 :         pVirtualAddr, cbSize, pShiftedPhysAddr, dwAttributes, NULL);

  00010	e3a03000	 mov         r3, #0
  00014	e58d3008	 str         r3, [sp, #8]
  00018	e59d3034	 ldr         r3, [sp, #0x34]
  0001c	e58d3004	 str         r3, [sp, #4]
  00020	e59d302c	 ldr         r3, [sp, #0x2C]
  00024	e58d3000	 str         r3, [sp]
  00028	e59d3030	 ldr         r3, [sp, #0x30]
  0002c	e59d2028	 ldr         r2, [sp, #0x28]
  00030	e3a0100c	 mov         r1, #0xC
  00034	e3a00001	 mov         r0, #1
  00038	eb000000	 bl          KernelLibIoControl
  0003c	e58d001c	 str         r0, [sp, #0x1C]
  00040	e59d301c	 ldr         r3, [sp, #0x1C]
  00044	e58d3018	 str         r3, [sp, #0x18]

; 1425 : }

  00048	e59d0018	 ldr         r0, [sp, #0x18]
  0004c	e28dd020	 add         sp, sp, #0x20
  00050	e89d6000	 ldmia       sp, {sp, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$M45891|

			 ENDP  ; |CeSetMemoryAttributes|

	EXPORT	|?SDHCCancelIoHandlerImpl@CSDIOControllerBase@@QAAEEPAU_SD_BUS_REQUEST@@@Z| ; CSDIOControllerBase::SDHCCancelIoHandlerImpl

  00168			 AREA	 |.pdata|, PDATA
|$T45903| DCD	|$LN7@SDHCCancel|
	DCD	0x40001a04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\sdhc\base\sdhc.cpp

  056e8			 AREA	 |.text|, CODE, ARM

  056e8		 |?SDHCCancelIoHandlerImpl@CSDIOControllerBase@@QAAEEPAU_SD_BUS_REQUEST@@@Z| PROC ; CSDIOControllerBase::SDHCCancelIoHandlerImpl

; 2545 : {

  056e8		 |$LN7@SDHCCancel|
  056e8	e1a0c00d	 mov         r12, sp
  056ec	e92d0007	 stmdb       sp!, {r0 - r2}
  056f0	e92d5000	 stmdb       sp!, {r12, lr}
  056f4	e24dd008	 sub         sp, sp, #8
  056f8		 |$M45900|

; 2546 :     // for now, we should never get here because all requests are non-cancelable
; 2547 :     // the hardware supports timeouts so it is impossible for the controller to get stuck
; 2548 :     DEBUGCHK(FALSE);

  056f8	ea000002	 b           |$LN3@SDHCCancel|
  056fc	e3a03001	 mov         r3, #1
  05700	e58d3004	 str         r3, [sp, #4]
  05704	ea000008	 b           |$LN4@SDHCCancel|
  05708		 |$LN3@SDHCCancel|
  05708	e3a03c09	 mov         r3, #9, 24
  0570c	e38330f4	 orr         r3, r3, #0xF4
  05710	e59f2034	 ldr         r2, [pc, #0x34]
  05714	e59f102c	 ldr         r1, [pc, #0x2C]
  05718	e59f0024	 ldr         r0, [pc, #0x24]
  0571c	eb000000	 bl          NKDbgPrintfW
  05720	e6000010	 __debugbreak_ce
  05724	e3a03000	 mov         r3, #0
  05728	e58d3004	 str         r3, [sp, #4]
  0572c		 |$LN4@SDHCCancel|

; 2549 : 
; 2550 :     UNREFERENCED_PARAMETER(Slot);
; 2551 :     UNREFERENCED_PARAMETER(pRequest);
; 2552 : 
; 2553 :     return TRUE;

  0572c	e3a03001	 mov         r3, #1
  05730	e5cd3000	 strb        r3, [sp]

; 2554 : }

  05734	e5dd0000	 ldrb        r0, [sp]
  05738	e28dd008	 add         sp, sp, #8
  0573c	e89d6000	 ldmia       sp, {sp, lr}
  05740	e12fff1e	 bx          lr
  05744		 |$LN8@SDHCCancel|
  05744		 |$LN9@SDHCCancel|
  05744	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  05748		 |$LN10@SDHCCancel|
  05748	00000000	 DCD         |dpCurSettings|
  0574c		 |$LN11@SDHCCancel|
  0574c	00000000	 DCD         |??_C@_1KA@CLLCPJCJ@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  05750		 |$M45901|

			 ENDP  ; |?SDHCCancelIoHandlerImpl@CSDIOControllerBase@@QAAEEPAU_SD_BUS_REQUEST@@@Z|, CSDIOControllerBase::SDHCCancelIoHandlerImpl

	EXPORT	|?CommandCompleteHandler_FastPath@CSDIOControllerBase@@QAAHPAU_SD_BUS_REQUEST@@@Z| ; CSDIOControllerBase::CommandCompleteHandler_FastPath
	EXPORT	|??_C@_1HM@NNOCEJMH@?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@NCEHOCGE@?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@BHFJKGGJ@?$AAS?$AAD?$AAH?$AAC?$AAD?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@| [ DATA ] ; `string'
	EXPORT	|?SDHCBusRequestHandlerImpl_FastPath@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z| ; CSDIOControllerBase::SDHCBusRequestHandlerImpl_FastPath

  00170			 AREA	 |.pdata|, PDATA
|$T45921| DCD	|$LN20@SDHCBusReq|
	DCD	0x4000fe04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@NNOCEJMH@?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, "B", 0x0, "u", 0x0, "s"
	DCB	0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o"
	DCB	0x0, "u", 0x0, "t", 0x0, " ", 0x0, "w", 0x0, "a", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "f"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "M", 0x0, "M", 0x0, "C"
	DCB	0x0, "H", 0x0, "S", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A"
	DCB	0x0, "T", 0x0, "_", 0x0, "C", 0x0, "C", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@NCEHOCGE@?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, "B", 0x0, "u", 0x0, "s"
	DCB	0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "M", 0x0, "M", 0x0, "C", 0x0, "H", 0x0, "S"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "_"
	DCB	0x0, "C", 0x0, "T", 0x0, "O", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@BHFJKGGJ@?$AAS?$AAD?$AAH?$AAC?$AAD?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, "D", 0x0, "B", 0x0, "u"
	DCB	0x0, "s", 0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "(", 0x0, ")", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "n", 0x0, "d"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, ":"
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  05750			 AREA	 |.text|, CODE, ARM

  05750		 |?SDHCBusRequestHandlerImpl_FastPath@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z| PROC ; CSDIOControllerBase::SDHCBusRequestHandlerImpl_FastPath

; 2558 : {

  05750		 |$LN20@SDHCBusReq|
  05750	e1a0c00d	 mov         r12, sp
  05754	e92d0003	 stmdb       sp!, {r0, r1}
  05758	e92d5000	 stmdb       sp!, {r12, lr}
  0575c	e24dd02c	 sub         sp, sp, #0x2C
  05760		 |$M45918|

; 2559 :     DEBUGCHK(pRequest);

  05760	e59d3038	 ldr         r3, [sp, #0x38]
  05764	e3530000	 cmp         r3, #0
  05768	0a000002	 beq         |$LN10@SDHCBusReq|
  0576c	e3a03001	 mov         r3, #1
  05770	e58d3010	 str         r3, [sp, #0x10]
  05774	ea000008	 b           |$LN11@SDHCBusReq|
  05778		 |$LN10@SDHCBusReq|
  05778	e3a03c09	 mov         r3, #9, 24
  0577c	e38330ff	 orr         r3, r3, #0xFF
  05780	e59f23bc	 ldr         r2, [pc, #0x3BC]
  05784	e59f13a8	 ldr         r1, [pc, #0x3A8]
  05788	e59f03b0	 ldr         r0, [pc, #0x3B0]
  0578c	eb000000	 bl          NKDbgPrintfW
  05790	e6000010	 __debugbreak_ce
  05794	e3a03000	 mov         r3, #0
  05798	e58d3010	 str         r3, [sp, #0x10]
  0579c		 |$LN11@SDHCBusReq|

; 2560 : 
; 2561 :     SD_API_STATUS   status = SD_API_STATUS_FAST_PATH_SUCCESS;

  0579c	e3a03002	 mov         r3, #2
  057a0	e58d3004	 str         r3, [sp, #4]

; 2562 :     WORD            wIe;
; 2563 :     m_fastPathReq = 1;

  057a4	e59d3034	 ldr         r3, [sp, #0x34]
  057a8	e2832f62	 add         r2, r3, #0x62, 30
  057ac	e3a03001	 mov         r3, #1
  057b0	e5823000	 str         r3, [r2]

; 2564 : 
; 2565 :     // turn the clock on
; 2566 :     UpdateSystemClock(TRUE);

  057b4	e3a01001	 mov         r1, #1
  057b8	e59d0034	 ldr         r0, [sp, #0x34]
  057bc	eb000000	 bl          |?UpdateSystemClock@CSDIOControllerBase@@QAAHH@Z|

; 2567 : 
; 2568 :     // acquire the device lock to protect from device removal
; 2569 :     SDHCDAcquireHCLock(m_pHCContext);

  057c0	e59d3034	 ldr         r3, [sp, #0x34]
  057c4	e28330a8	 add         r3, r3, #0xA8
  057c8	e5933000	 ldr         r3, [r3]
  057cc	e2830024	 add         r0, r3, #0x24
  057d0	eb000000	 bl          EnterCriticalSection

; 2570 :     //m_fastPathSDMEM = 1;
; 2571 : 
; 2572 :     // ??? check register handling, seems odd
; 2573 :     // Disable SDIO interrupt for Fast path
; 2574 :     wIe = (WORD)INREG32(&(m_pbRegisters->MMCHS_IE));

  057d4	e59d3034	 ldr         r3, [sp, #0x34]
  057d8	e2833f57	 add         r3, r3, #0x57, 30
  057dc	e5933000	 ldr         r3, [r3]
  057e0	e2833f4d	 add         r3, r3, #0x4D, 30
  057e4	e5933000	 ldr         r3, [r3]
  057e8	e1a03803	 mov         r3, r3, lsl #16
  057ec	e1a03823	 mov         r3, r3, lsr #16
  057f0	e1cd30b0	 strh        r3, [sp]

; 2575 :     EnterCriticalSection( &m_critSec );

  057f4	e59d3034	 ldr         r3, [sp, #0x34]
  057f8	e28300b0	 add         r0, r3, #0xB0
  057fc	eb000000	 bl          EnterCriticalSection

; 2576 :     SETREG32(&m_pbRegisters->MMCHS_CON, MMCHS_CON_CTPL);

  05800	e59d3034	 ldr         r3, [sp, #0x34]
  05804	e2833f57	 add         r3, r3, #0x57, 30
  05808	e5933000	 ldr         r3, [r3]
  0580c	e283302c	 add         r3, r3, #0x2C
  05810	e5933000	 ldr         r3, [r3]
  05814	e3832b02	 orr         r2, r3, #2, 22
  05818	e59d3034	 ldr         r3, [sp, #0x34]
  0581c	e2833f57	 add         r3, r3, #0x57, 30
  05820	e5933000	 ldr         r3, [r3]
  05824	e283302c	 add         r3, r3, #0x2C
  05828	e5832000	 str         r2, [r3]

; 2577 : 
; 2578 :     SETREG32(&(m_pbRegisters->MMCHS_IE) , (/* MMCHS_IE_CIRQ | */ MMCHS_IE_CC | MMCHS_IE_TC));

  0582c	e59d3034	 ldr         r3, [sp, #0x34]
  05830	e2833f57	 add         r3, r3, #0x57, 30
  05834	e5933000	 ldr         r3, [r3]
  05838	e2833f4d	 add         r3, r3, #0x4D, 30
  0583c	e5933000	 ldr         r3, [r3]
  05840	e3832003	 orr         r2, r3, #3
  05844	e59d3034	 ldr         r3, [sp, #0x34]
  05848	e2833f57	 add         r3, r3, #0x57, 30
  0584c	e5933000	 ldr         r3, [r3]
  05850	e2833f4d	 add         r3, r3, #0x4D, 30
  05854	e5832000	 str         r2, [r3]

; 2579 :     CLRREG32(&(m_pbRegisters->MMCHS_ISE) , (/*MMCHS_ISE_CIRQ |*/ MMCHS_ISE_CC | MMCHS_ISE_TC));

  05858	e59d3034	 ldr         r3, [sp, #0x34]
  0585c	e2833f57	 add         r3, r3, #0x57, 30
  05860	e5933000	 ldr         r3, [r3]
  05864	e2833f4e	 add         r3, r3, #0x4E, 30
  05868	e5932000	 ldr         r2, [r3]
  0586c	e3e03003	 mvn         r3, #3
  05870	e0022003	 and         r2, r2, r3
  05874	e59d3034	 ldr         r3, [sp, #0x34]
  05878	e2833f57	 add         r3, r3, #0x57, 30
  0587c	e5933000	 ldr         r3, [r3]
  05880	e2833f4e	 add         r3, r3, #0x4E, 30
  05884	e5832000	 str         r2, [r3]

; 2580 :     OUTREG32(&m_pbRegisters->MMCHS_STAT, 0xFFFFFFFF);

  05888	e59d3034	 ldr         r3, [sp, #0x34]
  0588c	e2833f57	 add         r3, r3, #0x57, 30
  05890	e5933000	 ldr         r3, [r3]
  05894	e2832e13	 add         r2, r3, #0x13, 28
  05898	e3e03000	 mvn         r3, #0
  0589c	e5823000	 str         r3, [r2]

; 2581 :     LeaveCriticalSection( &m_critSec );

  058a0	e59d3034	 ldr         r3, [sp, #0x34]
  058a4	e28300b0	 add         r0, r3, #0xB0
  058a8	eb000000	 bl          LeaveCriticalSection

; 2582 : 
; 2583 :     status = SendCommand(pRequest);

  058ac	e59d1038	 ldr         r1, [sp, #0x38]
  058b0	e59d0034	 ldr         r0, [sp, #0x34]
  058b4	eb000000	 bl          |?SendCommand@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z|
  058b8	e58d0014	 str         r0, [sp, #0x14]
  058bc	e59d3014	 ldr         r3, [sp, #0x14]
  058c0	e58d3004	 str         r3, [sp, #4]

; 2584 :     if (!SD_API_SUCCESS(status))

  058c4	e59d3004	 ldr         r3, [sp, #4]
  058c8	e3530000	 cmp         r3, #0
  058cc	aa000015	 bge         |$LN7@SDHCBusReq|

; 2585 :     {
; 2586 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDHCDBusRequestHandler() - Error sending command:0x%02x\r\n"), pRequest->CommandCode));

  058d0	e59f325c	 ldr         r3, [pc, #0x25C]
  058d4	e5933440	 ldr         r3, [r3, #0x440]
  058d8	e3130902	 tst         r3, #2, 18
  058dc	0a000008	 beq         |$LN12@SDHCBusReq|
  058e0	e59d3038	 ldr         r3, [sp, #0x38]
  058e4	e2833014	 add         r3, r3, #0x14
  058e8	e5d33000	 ldrb        r3, [r3]
  058ec	e1a01003	 mov         r1, r3
  058f0	e59f0244	 ldr         r0, [pc, #0x244]
  058f4	eb000000	 bl          NKDbgPrintfW
  058f8	e3a03001	 mov         r3, #1
  058fc	e58d3018	 str         r3, [sp, #0x18]
  05900	ea000001	 b           |$LN13@SDHCBusReq|
  05904		 |$LN12@SDHCBusReq|
  05904	e3a03000	 mov         r3, #0
  05908	e58d3018	 str         r3, [sp, #0x18]
  0590c		 |$LN13@SDHCBusReq|

; 2587 :         SDHCDReleaseHCLock(m_pHCContext);

  0590c	e59d3034	 ldr         r3, [sp, #0x34]
  05910	e28330a8	 add         r3, r3, #0xA8
  05914	e5933000	 ldr         r3, [r3]
  05918	e2830024	 add         r0, r3, #0x24
  0591c	eb000000	 bl          LeaveCriticalSection
  05920	ea000079	 b           |$LN6@SDHCBusReq|

; 2588 :         goto cleanUp;      

  05924	ea000078	 b           |$cleanUp$43365|
  05928		 |$LN7@SDHCBusReq|

; 2589 :     }
; 2590 : 
; 2591 :     {
; 2592 :        DWORD retries = 0;

  05928	e3a03000	 mov         r3, #0
  0592c	e58d3008	 str         r3, [sp, #8]

; 2593 :        status = SD_API_STATUS_DEVICE_RESPONSE_ERROR;

  05930	e3a0315b	 mov         r3, #0x5B, 2
  05934	e58d3004	 str         r3, [sp, #4]
  05938		 |$LN5@SDHCBusReq|

; 2594 :  
; 2595 :        // polling end-of-command
; 2596 :        while (!(Read_MMC_STAT() & MMCHS_STAT_CC)) {

  05938	e59d0034	 ldr         r0, [sp, #0x34]
  0593c	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  05940	e58d001c	 str         r0, [sp, #0x1C]
  05944	e59d301c	 ldr         r3, [sp, #0x1C]
  05948	e3130001	 tst         r3, #1
  0594c	1a00002b	 bne         |$LN4@SDHCBusReq|

; 2597 :            if (retries > SDIO_MAX_LOOP) {

  05950	e59d3008	 ldr         r3, [sp, #8]
  05954	e3530702	 cmp         r3, #2, 14
  05958	9a000024	 bls         |$LN3@SDHCBusReq|

; 2598 :                 SDHCDReleaseHCLock(m_pHCContext);

  0595c	e59d3034	 ldr         r3, [sp, #0x34]
  05960	e28330a8	 add         r3, r3, #0xA8
  05964	e5933000	 ldr         r3, [r3]
  05968	e2830024	 add         r0, r3, #0x24
  0596c	eb000000	 bl          LeaveCriticalSection

; 2599 :                 if(Read_MMC_STAT() & MMCHS_STAT_CTO)

  05970	e59d0034	 ldr         r0, [sp, #0x34]
  05974	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  05978	e58d0020	 str         r0, [sp, #0x20]
  0597c	e59d3020	 ldr         r3, [sp, #0x20]
  05980	e3130801	 tst         r3, #1, 16
  05984	0a00000c	 beq         |$LN2@SDHCBusReq|

; 2600 :                 {
; 2601 :                     status = SD_API_STATUS_RESPONSE_TIMEOUT;

  05988	e3a03153	 mov         r3, #0x53, 2
  0598c	e58d3004	 str         r3, [sp, #4]

; 2602 :                     DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDHCBusRequestHandler() - MMCHS_STAT_CTO\r\n")));

  05990	e59f319c	 ldr         r3, [pc, #0x19C]
  05994	e5933440	 ldr         r3, [r3, #0x440]
  05998	e3130902	 tst         r3, #2, 18
  0599c	0a000004	 beq         |$LN14@SDHCBusReq|
  059a0	e59f0190	 ldr         r0, [pc, #0x190]
  059a4	eb000000	 bl          NKDbgPrintfW
  059a8	e3a03001	 mov         r3, #1
  059ac	e58d3024	 str         r3, [sp, #0x24]
  059b0	ea000001	 b           |$LN15@SDHCBusReq|
  059b4		 |$LN14@SDHCBusReq|
  059b4	e3a03000	 mov         r3, #0
  059b8	e58d3024	 str         r3, [sp, #0x24]
  059bc		 |$LN15@SDHCBusReq|
  059bc		 |$LN2@SDHCBusReq|

; 2603 :                 }
; 2604 :                 DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDHCBusRequestHandler() - Timeout waiting for MMCHS_STAT_CC\r\n")));

  059bc	e59f3170	 ldr         r3, [pc, #0x170]
  059c0	e5933440	 ldr         r3, [r3, #0x440]
  059c4	e3130902	 tst         r3, #2, 18
  059c8	0a000004	 beq         |$LN16@SDHCBusReq|
  059cc	e59f015c	 ldr         r0, [pc, #0x15C]
  059d0	eb000000	 bl          NKDbgPrintfW
  059d4	e3a03001	 mov         r3, #1
  059d8	e58d3028	 str         r3, [sp, #0x28]
  059dc	ea000001	 b           |$LN17@SDHCBusReq|
  059e0		 |$LN16@SDHCBusReq|
  059e0	e3a03000	 mov         r3, #0
  059e4	e58d3028	 str         r3, [sp, #0x28]
  059e8		 |$LN17@SDHCBusReq|

; 2605 :                 goto cleanUp;      

  059e8	ea000047	 b           |$LN1@SDHCBusReq|
  059ec	ea000046	 b           |$cleanUp$43365|
  059f0		 |$LN3@SDHCBusReq|

; 2606 :            }
; 2607 :            retries++;

  059f0	e59d3008	 ldr         r3, [sp, #8]
  059f4	e2833001	 add         r3, r3, #1
  059f8	e58d3008	 str         r3, [sp, #8]

; 2608 :        }

  059fc	eaffffcd	 b           |$LN5@SDHCBusReq|
  05a00		 |$LN4@SDHCBusReq|

; 2609 : 
; 2610 :        CommandCompleteHandler_FastPath(pRequest);

  05a00	e59d1038	 ldr         r1, [sp, #0x38]
  05a04	e59d0034	 ldr         r0, [sp, #0x34]
  05a08	eb000000	 bl          |?CommandCompleteHandler_FastPath@CSDIOControllerBase@@QAAHPAU_SD_BUS_REQUEST@@@Z|

; 2611 : 
; 2612 :        SDHCDReleaseHCLock(m_pHCContext);

  05a0c	e59d3034	 ldr         r3, [sp, #0x34]
  05a10	e28330a8	 add         r3, r3, #0xA8
  05a14	e5933000	 ldr         r3, [r3]
  05a18	e2830024	 add         r0, r3, #0x24
  05a1c	eb000000	 bl          LeaveCriticalSection

; 2613 : 
; 2614 :        status = SD_API_STATUS_FAST_PATH_SUCCESS;

  05a20	e3a03002	 mov         r3, #2
  05a24	e58d3004	 str         r3, [sp, #4]

; 2615 :             }
; 2616 : 
; 2617 :     // Restore SDIO interrupts
; 2618 :     EnterCriticalSection( &m_critSec );

  05a28	e59d3034	 ldr         r3, [sp, #0x34]
  05a2c	e28300b0	 add         r0, r3, #0xB0
  05a30	eb000000	 bl          EnterCriticalSection

; 2619 :     // ??? check register handling, seems odd...
; 2620 :     CLRREG32(&(m_pbRegisters->MMCHS_IE) , (MMCHS_IE_CIRQ | MMCHS_IE_CC | MMCHS_IE_TC));

  05a34	e59d3034	 ldr         r3, [sp, #0x34]
  05a38	e2833f57	 add         r3, r3, #0x57, 30
  05a3c	e5933000	 ldr         r3, [r3]
  05a40	e2833f4d	 add         r3, r3, #0x4D, 30
  05a44	e5932000	 ldr         r2, [r3]
  05a48	e3e03c01	 mvn         r3, #1, 24
  05a4c	e2233003	 eor         r3, r3, #3
  05a50	e0022003	 and         r2, r2, r3
  05a54	e59d3034	 ldr         r3, [sp, #0x34]
  05a58	e2833f57	 add         r3, r3, #0x57, 30
  05a5c	e5933000	 ldr         r3, [r3]
  05a60	e2833f4d	 add         r3, r3, #0x4D, 30
  05a64	e5832000	 str         r2, [r3]

; 2621 :     SETREG32(&(m_pbRegisters->MMCHS_IE), (wIe & (MMCHS_IE_CIRQ | MMCHS_IE_CC | MMCHS_IE_TC)));

  05a68	e59d3034	 ldr         r3, [sp, #0x34]
  05a6c	e2833f57	 add         r3, r3, #0x57, 30
  05a70	e5933000	 ldr         r3, [r3]
  05a74	e2831f4d	 add         r1, r3, #0x4D, 30
  05a78	e1dd30b0	 ldrh        r3, [sp]
  05a7c	e1a02003	 mov         r2, r3
  05a80	e3a03c01	 mov         r3, #1, 24
  05a84	e3833003	 orr         r3, r3, #3
  05a88	e0022003	 and         r2, r2, r3
  05a8c	e5913000	 ldr         r3, [r1]
  05a90	e1832002	 orr         r2, r3, r2
  05a94	e59d3034	 ldr         r3, [sp, #0x34]
  05a98	e2833f57	 add         r3, r3, #0x57, 30
  05a9c	e5933000	 ldr         r3, [r3]
  05aa0	e2833f4d	 add         r3, r3, #0x4D, 30
  05aa4	e5832000	 str         r2, [r3]

; 2622 :     SETREG32(&(m_pbRegisters->MMCHS_ISE), (wIe & (MMCHS_ISE_CIRQ | MMCHS_ISE_CC | MMCHS_ISE_TC)));

  05aa8	e59d3034	 ldr         r3, [sp, #0x34]
  05aac	e2833f57	 add         r3, r3, #0x57, 30
  05ab0	e5933000	 ldr         r3, [r3]
  05ab4	e2831f4e	 add         r1, r3, #0x4E, 30
  05ab8	e1dd30b0	 ldrh        r3, [sp]
  05abc	e1a02003	 mov         r2, r3
  05ac0	e3a03c01	 mov         r3, #1, 24
  05ac4	e3833003	 orr         r3, r3, #3
  05ac8	e0022003	 and         r2, r2, r3
  05acc	e5913000	 ldr         r3, [r1]
  05ad0	e1832002	 orr         r2, r3, r2
  05ad4	e59d3034	 ldr         r3, [sp, #0x34]
  05ad8	e2833f57	 add         r3, r3, #0x57, 30
  05adc	e5933000	 ldr         r3, [r3]
  05ae0	e2833f4e	 add         r3, r3, #0x4E, 30
  05ae4	e5832000	 str         r2, [r3]

; 2623 :     OUTREG32(&m_pbRegisters->MMCHS_STAT, 0xFFFFFFFF);

  05ae8	e59d3034	 ldr         r3, [sp, #0x34]
  05aec	e2833f57	 add         r3, r3, #0x57, 30
  05af0	e5933000	 ldr         r3, [r3]
  05af4	e2832e13	 add         r2, r3, #0x13, 28
  05af8	e3e03000	 mvn         r3, #0
  05afc	e5823000	 str         r3, [r2]

; 2624 :     LeaveCriticalSection( &m_critSec );

  05b00	e59d3034	 ldr         r3, [sp, #0x34]
  05b04	e28300b0	 add         r0, r3, #0xB0
  05b08	eb000000	 bl          LeaveCriticalSection
  05b0c		 |$LN1@SDHCBusReq|
  05b0c		 |$LN6@SDHCBusReq|
  05b0c		 |$cleanUp$43365|

; 2625 : 
; 2626 : cleanUp:
; 2627 : 
; 2628 :     UpdateSystemClock(FALSE);

  05b0c	e3a01000	 mov         r1, #0
  05b10	e59d0034	 ldr         r0, [sp, #0x34]
  05b14	eb000000	 bl          |?UpdateSystemClock@CSDIOControllerBase@@QAAHH@Z|

; 2629 : 
; 2630 :     return status;

  05b18	e59d3004	 ldr         r3, [sp, #4]
  05b1c	e58d300c	 str         r3, [sp, #0xC]

; 2631 : 
; 2632 :                 }

  05b20	e59d000c	 ldr         r0, [sp, #0xC]
  05b24	e28dd02c	 add         sp, sp, #0x2C
  05b28	e89d6000	 ldmia       sp, {sp, lr}
  05b2c	e12fff1e	 bx          lr
  05b30		 |$LN21@SDHCBusReq|
  05b30		 |$LN22@SDHCBusReq|
  05b30	00000000	 DCD         |??_C@_1HM@NNOCEJMH@?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu@|
  05b34		 |$LN23@SDHCBusReq|
  05b34	00000000	 DCD         |dpCurSettings|
  05b38		 |$LN24@SDHCBusReq|
  05b38	00000000	 DCD         |??_C@_1FG@NCEHOCGE@?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_@|
  05b3c		 |$LN25@SDHCBusReq|
  05b3c	00000000	 DCD         |??_C@_1HE@BHFJKGGJ@?$AAS?$AAD?$AAH?$AAC?$AAD?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@|
  05b40		 |$LN26@SDHCBusReq|
  05b40	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  05b44		 |$LN27@SDHCBusReq|
  05b44	00000000	 DCD         |??_C@_1KA@CLLCPJCJ@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  05b48		 |$M45919|

			 ENDP  ; |?SDHCBusRequestHandlerImpl_FastPath@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z|, CSDIOControllerBase::SDHCBusRequestHandlerImpl_FastPath

	EXPORT	|?SDHCBusRequestHandlerImpl_NormalPath@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z| ; CSDIOControllerBase::SDHCBusRequestHandlerImpl_NormalPath

  00178			 AREA	 |.pdata|, PDATA
|$T45940| DCD	|$LN15@SDHCBusReq@2|
	DCD	0x40006f04
; Function compile flags: /Odtp

  05b48			 AREA	 |.text|, CODE, ARM

  05b48		 |?SDHCBusRequestHandlerImpl_NormalPath@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z| PROC ; CSDIOControllerBase::SDHCBusRequestHandlerImpl_NormalPath

; 2636 :             {

  05b48		 |$LN15@SDHCBusReq@2|
  05b48	e1a0c00d	 mov         r12, sp
  05b4c	e92d0003	 stmdb       sp!, {r0, r1}
  05b50	e92d5000	 stmdb       sp!, {r12, lr}
  05b54	e24dd018	 sub         sp, sp, #0x18
  05b58		 |$M45937|

; 2637 :     DEBUGCHK(pRequest);

  05b58	e59d3024	 ldr         r3, [sp, #0x24]
  05b5c	e3530000	 cmp         r3, #0
  05b60	0a000002	 beq         |$LN7@SDHCBusReq@2|
  05b64	e3a03001	 mov         r3, #1
  05b68	e58d3008	 str         r3, [sp, #8]
  05b6c	ea000008	 b           |$LN8@SDHCBusReq@2|
  05b70		 |$LN7@SDHCBusReq@2|
  05b70	e3a03c0a	 mov         r3, #0xA, 24
  05b74	e383304d	 orr         r3, r3, #0x4D
  05b78	e59f2180	 ldr         r2, [pc, #0x180]
  05b7c	e59f1174	 ldr         r1, [pc, #0x174]
  05b80	e59f0174	 ldr         r0, [pc, #0x174]
  05b84	eb000000	 bl          NKDbgPrintfW
  05b88	e6000010	 __debugbreak_ce
  05b8c	e3a03000	 mov         r3, #0
  05b90	e58d3008	 str         r3, [sp, #8]
  05b94		 |$LN8@SDHCBusReq@2|

; 2638 : 
; 2639 :     SD_API_STATUS   status = SD_API_STATUS_FAST_PATH_SUCCESS;

  05b94	e3a03002	 mov         r3, #2
  05b98	e58d3000	 str         r3, [sp]

; 2640 :     DEBUGCHK(pRequest);

  05b9c	e59d3024	 ldr         r3, [sp, #0x24]
  05ba0	e3530000	 cmp         r3, #0
  05ba4	0a000002	 beq         |$LN9@SDHCBusReq@2|
  05ba8	e3a03001	 mov         r3, #1
  05bac	e58d300c	 str         r3, [sp, #0xC]
  05bb0	ea000007	 b           |$LN10@SDHCBusReq@2|
  05bb4		 |$LN9@SDHCBusReq@2|
  05bb4	e3a03ea5	 mov         r3, #0xA5, 28
  05bb8	e59f2140	 ldr         r2, [pc, #0x140]
  05bbc	e59f1134	 ldr         r1, [pc, #0x134]
  05bc0	e59f0134	 ldr         r0, [pc, #0x134]
  05bc4	eb000000	 bl          NKDbgPrintfW
  05bc8	e6000010	 __debugbreak_ce
  05bcc	e3a03000	 mov         r3, #0
  05bd0	e58d300c	 str         r3, [sp, #0xC]
  05bd4		 |$LN10@SDHCBusReq@2|

; 2641 : 
; 2642 :     if (m_fCardPresent == FALSE)

  05bd4	e59d3020	 ldr         r3, [sp, #0x20]
  05bd8	e28330f0	 add         r3, r3, #0xF0
  05bdc	e5933000	 ldr         r3, [r3]
  05be0	e3530000	 cmp         r3, #0
  05be4	1a000004	 bne         |$LN4@SDHCBusReq@2|

; 2643 :             {
; 2644 :              status = SD_API_STATUS_DEVICE_REMOVED;

  05be8	e3a03147	 mov         r3, #0x47, 2
  05bec	e58d3000	 str         r3, [sp]

; 2645 :              return status;

  05bf0	e59d3000	 ldr         r3, [sp]
  05bf4	e58d3004	 str         r3, [sp, #4]
  05bf8	ea000039	 b           |$LN5@SDHCBusReq@2|
  05bfc		 |$LN4@SDHCBusReq@2|

; 2646 :             }
; 2647 : 
; 2648 :     UpdateSystemClock(TRUE);

  05bfc	e3a01001	 mov         r1, #1
  05c00	e59d0020	 ldr         r0, [sp, #0x20]
  05c04	eb000000	 bl          |?UpdateSystemClock@CSDIOControllerBase@@QAAHH@Z|

; 2649 : 
; 2650 :     SDHCDAcquireHCLock(m_pHCContext);

  05c08	e59d3020	 ldr         r3, [sp, #0x20]
  05c0c	e28330a8	 add         r3, r3, #0xA8
  05c10	e5933000	 ldr         r3, [r3]
  05c14	e2830024	 add         r0, r3, #0x24
  05c18	eb000000	 bl          EnterCriticalSection

; 2651 : 
; 2652 :     status = SendCommand(pRequest);

  05c1c	e59d1024	 ldr         r1, [sp, #0x24]
  05c20	e59d0020	 ldr         r0, [sp, #0x20]
  05c24	eb000000	 bl          |?SendCommand@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z|
  05c28	e58d0010	 str         r0, [sp, #0x10]
  05c2c	e59d3010	 ldr         r3, [sp, #0x10]
  05c30	e58d3000	 str         r3, [sp]

; 2653 :     m_bCommandPending = TRUE;

  05c34	e59d3020	 ldr         r3, [sp, #0x20]
  05c38	e2832f7e	 add         r2, r3, #0x7E, 30
  05c3c	e3a03001	 mov         r3, #1
  05c40	e5823000	 str         r3, [r2]

; 2654 : 
; 2655 :     if(!SD_API_SUCCESS(status))

  05c44	e59d3000	 ldr         r3, [sp]
  05c48	e3530000	 cmp         r3, #0
  05c4c	aa000015	 bge         |$LN3@SDHCBusReq@2|

; 2656 :     {
; 2657 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDHCDBusRequestHandler() - Error sending command:0x%02x\r\n"), pRequest->CommandCode));

  05c50	e59f30a0	 ldr         r3, [pc, #0xA0]
  05c54	e5933440	 ldr         r3, [r3, #0x440]
  05c58	e3130902	 tst         r3, #2, 18
  05c5c	0a000008	 beq         |$LN11@SDHCBusReq@2|
  05c60	e59d3024	 ldr         r3, [sp, #0x24]
  05c64	e2833014	 add         r3, r3, #0x14
  05c68	e5d33000	 ldrb        r3, [r3]
  05c6c	e1a01003	 mov         r1, r3
  05c70	e59f007c	 ldr         r0, [pc, #0x7C]
  05c74	eb000000	 bl          NKDbgPrintfW
  05c78	e3a03001	 mov         r3, #1
  05c7c	e58d3014	 str         r3, [sp, #0x14]
  05c80	ea000001	 b           |$LN12@SDHCBusReq@2|
  05c84		 |$LN11@SDHCBusReq@2|
  05c84	e3a03000	 mov         r3, #0
  05c88	e58d3014	 str         r3, [sp, #0x14]
  05c8c		 |$LN12@SDHCBusReq@2|

; 2658 :         SDHCDReleaseHCLock(m_pHCContext);

  05c8c	e59d3020	 ldr         r3, [sp, #0x20]
  05c90	e28330a8	 add         r3, r3, #0xA8
  05c94	e5933000	 ldr         r3, [r3]
  05c98	e2830024	 add         r0, r3, #0x24
  05c9c	eb000000	 bl          LeaveCriticalSection
  05ca0	ea000007	 b           |$LN2@SDHCBusReq@2|

; 2659 :         goto cleanUp;      

  05ca4	ea000006	 b           |$cleanUp$43407|
  05ca8		 |$LN3@SDHCBusReq@2|

; 2660 :         }
; 2661 :     // we will handle the command response interrupt on another thread
; 2662 :     status = SD_API_STATUS_PENDING;

  05ca8	e3a03001	 mov         r3, #1
  05cac	e58d3000	 str         r3, [sp]

; 2663 :     SDHCDReleaseHCLock(m_pHCContext);   // really needed?

  05cb0	e59d3020	 ldr         r3, [sp, #0x20]
  05cb4	e28330a8	 add         r3, r3, #0xA8
  05cb8	e5933000	 ldr         r3, [r3]
  05cbc	e2830024	 add         r0, r3, #0x24
  05cc0	eb000000	 bl          LeaveCriticalSection
  05cc4		 |$LN2@SDHCBusReq@2|
  05cc4		 |$cleanUp$43407|

; 2664 : 
; 2665 : cleanUp:
; 2666 : 
; 2667 :     // No, we don't call UpdateSystemClock(FALSE) here because we don't want to cause
; 2668 :     // the timer thread to timeout while the SDHC controller is processing command,
; 2669 :     // or transferring data. The Controller IST will call the UpdateSystemClock(FALSE) 
; 2670 :     // when the process is is completed or the data transfer is complete.
; 2671 :     if (status != SD_API_STATUS_PENDING)

  05cc4	e59d3000	 ldr         r3, [sp]
  05cc8	e3530001	 cmp         r3, #1
  05ccc	0a000002	 beq         |$LN1@SDHCBusReq@2|

; 2672 :         {
; 2673 :         UpdateSystemClock(FALSE);

  05cd0	e3a01000	 mov         r1, #0
  05cd4	e59d0020	 ldr         r0, [sp, #0x20]
  05cd8	eb000000	 bl          |?UpdateSystemClock@CSDIOControllerBase@@QAAHH@Z|
  05cdc		 |$LN1@SDHCBusReq@2|

; 2674 :         }
; 2675 : 
; 2676 :     return status;

  05cdc	e59d3000	 ldr         r3, [sp]
  05ce0	e58d3004	 str         r3, [sp, #4]
  05ce4		 |$LN5@SDHCBusReq@2|

; 2677 :     }

  05ce4	e59d0004	 ldr         r0, [sp, #4]
  05ce8	e28dd018	 add         sp, sp, #0x18
  05cec	e89d6000	 ldmia       sp, {sp, lr}
  05cf0	e12fff1e	 bx          lr
  05cf4		 |$LN16@SDHCBusReq@2|
  05cf4		 |$LN17@SDHCBusReq@2|
  05cf4	00000000	 DCD         |??_C@_1HE@BHFJKGGJ@?$AAS?$AAD?$AAH?$AAC?$AAD?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@|
  05cf8		 |$LN18@SDHCBusReq@2|
  05cf8	00000000	 DCD         |dpCurSettings|
  05cfc		 |$LN19@SDHCBusReq@2|
  05cfc	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  05d00		 |$LN20@SDHCBusReq@2|
  05d00	00000000	 DCD         |??_C@_1KA@CLLCPJCJ@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  05d04		 |$M45938|

			 ENDP  ; |?SDHCBusRequestHandlerImpl_NormalPath@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z|, CSDIOControllerBase::SDHCBusRequestHandlerImpl_NormalPath

	EXPORT	|??_C@_1CHO@EKKACLAH@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu@| [ DATA ] ; `string'
	EXPORT	|?SDHCBusRequestHandlerImpl@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z| ; CSDIOControllerBase::SDHCBusRequestHandlerImpl

  00180			 AREA	 |.pdata|, PDATA
|$T45966| DCD	|$LN15@SDHCBusReq@3|
	DCD	0x40009b04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CHO@EKKACLAH@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "D", 0x0, "H", 0x0, "C"
	DCB	0x0, "B", 0x0, "u", 0x0, "s", 0x0, "R", 0x0, "e", 0x0, "q"
	DCB	0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, "H", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, "I"
	DCB	0x0, "m", 0x0, "p", 0x0, "l", 0x0, "-", 0x0, "h", 0x0, "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "="
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, ",", 0x0, " ", 0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "m", 0x0, "F", 0x0, "l", 0x0, "a", 0x0, "g"
	DCB	0x0, "s", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "C", 0x0, "l", 0x0, "a", 0x0, "s", 0x0, "s", 0x0, "="
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, ",", 0x0, " ", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "d"
	DCB	0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "C", 0x0, "o"
	DCB	0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "A"
	DCB	0x0, "r", 0x0, "g", 0x0, "u", 0x0, "m", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, "e"
	DCB	0x0, "T", 0x0, "y", 0x0, "p", 0x0, "e", 0x0, "=", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ","
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, "P", 0x0, "a", 0x0, "r", 0x0, "a"
	DCB	0x0, "m", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, "=", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ","
	DCB	0x0, " ", 0x0, "N", 0x0, "u", 0x0, "m", 0x0, "B", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "k", 0x0, "s", 0x0, "=", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ","
	DCB	0x0, " ", 0x0, "B", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k"
	DCB	0x0, "S", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, "=", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ","
	DCB	0x0, " ", 0x0, "H", 0x0, "C", 0x0, "P", 0x0, "a", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "p"
	DCB	0x0, "B", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "B"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "="
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, ",", 0x0, " ", 0x0, "D", 0x0, "a", 0x0, "t", 0x0, "a"
	DCB	0x0, "A", 0x0, "c", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "s"
	DCB	0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, ",", 0x0, " ", 0x0, "F", 0x0, "l", 0x0, "a"
	DCB	0x0, "g", 0x0, "s", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  05d04			 AREA	 |.text|, CODE, ARM

  05d04		 |?SDHCBusRequestHandlerImpl@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z| PROC ; CSDIOControllerBase::SDHCBusRequestHandlerImpl

; 2691 : {

  05d04		 |$LN15@SDHCBusReq@3|
  05d04	e1a0c00d	 mov         r12, sp
  05d08	e92d0003	 stmdb       sp!, {r0, r1}
  05d0c	e92d5000	 stmdb       sp!, {r12, lr}
  05d10	e24dd070	 sub         sp, sp, #0x70
  05d14		 |$M45963|

; 2692 :     DEBUGCHK(pRequest);

  05d14	e59d307c	 ldr         r3, [sp, #0x7C]
  05d18	e3530000	 cmp         r3, #0
  05d1c	0a000002	 beq         |$LN9@SDHCBusReq@3|
  05d20	e3a03001	 mov         r3, #1
  05d24	e58d3060	 str         r3, [sp, #0x60]
  05d28	ea000008	 b           |$LN10@SDHCBusReq@3|
  05d2c		 |$LN9@SDHCBusReq@3|
  05d2c	e3a03c0a	 mov         r3, #0xA, 24
  05d30	e3833084	 orr         r3, r3, #0x84
  05d34	e59f2230	 ldr         r2, [pc, #0x230]
  05d38	e59f1224	 ldr         r1, [pc, #0x224]
  05d3c	e59f0224	 ldr         r0, [pc, #0x224]
  05d40	eb000000	 bl          NKDbgPrintfW
  05d44	e6000010	 __debugbreak_ce
  05d48	e3a03000	 mov         r3, #0
  05d4c	e58d3060	 str         r3, [sp, #0x60]
  05d50		 |$LN10@SDHCBusReq@3|

; 2693 :     
; 2694 :     DEBUGMSG(SDCARD_ZONE_FUNC, 
; 2695 :         (L"CSDIOControllerBase::SDHCBusRequestHandlerImpl-"
; 2696 :          L"hDevice=0x%08X, SystemFlags=0x%08X, TransferClass=0x%08X, CommandCode=0x%08X, "
; 2697 :          L"CommandArgument=0x%08X, ResponseType=0x%08X, RequestParam=0x%08X, Status=0x%08X, "
; 2698 :          L"NumBlocks=0x%08X, BlockSize=0x%08X, HCParam=0x%08X, pBlockBuffer=0x%08X, "
; 2699 :          L"DataAccessClocks=0x%08X, Flags=0x%08X\r\n",
; 2700 :          pRequest->hDevice,
; 2701 :          pRequest->SystemFlags,
; 2702 :          pRequest->TransferClass,
; 2703 :          pRequest->CommandCode,
; 2704 :          pRequest->CommandArgument,
; 2705 :          pRequest->CommandResponse.ResponseType,
; 2706 :          pRequest->RequestParam,
; 2707 :          pRequest->Status,
; 2708 :          pRequest->NumBlocks,
; 2709 :          pRequest->BlockSize,
; 2710 :          pRequest->HCParam,
; 2711 :          pRequest->pBlockBuffer,
; 2712 :          pRequest->DataAccessClocks,
; 2713 :          pRequest->Flags)
; 2714 :          );

  05d50	e59f320c	 ldr         r3, [pc, #0x20C]
  05d54	e5933440	 ldr         r3, [r3, #0x440]
  05d58	e3130b02	 tst         r3, #2, 22
  05d5c	0a000039	 beq         |$LN11@SDHCBusReq@3|
  05d60	e59d307c	 ldr         r3, [sp, #0x7C]
  05d64	e2833054	 add         r3, r3, #0x54
  05d68	e5933000	 ldr         r3, [r3]
  05d6c	e58d3028	 str         r3, [sp, #0x28]
  05d70	e59d307c	 ldr         r3, [sp, #0x7C]
  05d74	e2833050	 add         r3, r3, #0x50
  05d78	e5933000	 ldr         r3, [r3]
  05d7c	e58d3024	 str         r3, [sp, #0x24]
  05d80	e59d307c	 ldr         r3, [sp, #0x7C]
  05d84	e2833048	 add         r3, r3, #0x48
  05d88	e5933000	 ldr         r3, [r3]
  05d8c	e58d3020	 str         r3, [sp, #0x20]
  05d90	e59d307c	 ldr         r3, [sp, #0x7C]
  05d94	e2833044	 add         r3, r3, #0x44
  05d98	e5933000	 ldr         r3, [r3]
  05d9c	e58d301c	 str         r3, [sp, #0x1C]
  05da0	e59d307c	 ldr         r3, [sp, #0x7C]
  05da4	e2833040	 add         r3, r3, #0x40
  05da8	e5933000	 ldr         r3, [r3]
  05dac	e58d3018	 str         r3, [sp, #0x18]
  05db0	e59d307c	 ldr         r3, [sp, #0x7C]
  05db4	e283303c	 add         r3, r3, #0x3C
  05db8	e5933000	 ldr         r3, [r3]
  05dbc	e58d3014	 str         r3, [sp, #0x14]
  05dc0	e59d307c	 ldr         r3, [sp, #0x7C]
  05dc4	e2833038	 add         r3, r3, #0x38
  05dc8	e5933000	 ldr         r3, [r3]
  05dcc	e58d3010	 str         r3, [sp, #0x10]
  05dd0	e59d307c	 ldr         r3, [sp, #0x7C]
  05dd4	e2833034	 add         r3, r3, #0x34
  05dd8	e5933000	 ldr         r3, [r3]
  05ddc	e58d300c	 str         r3, [sp, #0xC]
  05de0	e59d307c	 ldr         r3, [sp, #0x7C]
  05de4	e283301c	 add         r3, r3, #0x1C
  05de8	e5933000	 ldr         r3, [r3]
  05dec	e58d3008	 str         r3, [sp, #8]
  05df0	e59d307c	 ldr         r3, [sp, #0x7C]
  05df4	e2833018	 add         r3, r3, #0x18
  05df8	e5933000	 ldr         r3, [r3]
  05dfc	e58d3004	 str         r3, [sp, #4]
  05e00	e59d307c	 ldr         r3, [sp, #0x7C]
  05e04	e2833014	 add         r3, r3, #0x14
  05e08	e5d33000	 ldrb        r3, [r3]
  05e0c	e58d3000	 str         r3, [sp]
  05e10	e59d307c	 ldr         r3, [sp, #0x7C]
  05e14	e2833010	 add         r3, r3, #0x10
  05e18	e5933000	 ldr         r3, [r3]
  05e1c	e59d207c	 ldr         r2, [sp, #0x7C]
  05e20	e282200c	 add         r2, r2, #0xC
  05e24	e5922000	 ldr         r2, [r2]
  05e28	e59d107c	 ldr         r1, [sp, #0x7C]
  05e2c	e2811008	 add         r1, r1, #8
  05e30	e5911000	 ldr         r1, [r1]
  05e34	e59f0124	 ldr         r0, [pc, #0x124]
  05e38	eb000000	 bl          NKDbgPrintfW
  05e3c	e3a03001	 mov         r3, #1
  05e40	e58d3064	 str         r3, [sp, #0x64]
  05e44	ea000001	 b           |$LN12@SDHCBusReq@3|
  05e48		 |$LN11@SDHCBusReq@3|
  05e48	e3a03000	 mov         r3, #0
  05e4c	e58d3064	 str         r3, [sp, #0x64]
  05e50		 |$LN12@SDHCBusReq@3|

; 2715 : 
; 2716 :     SD_API_STATUS   status = SD_API_STATUS_FAST_PATH_SUCCESS;

  05e50	e3a03002	 mov         r3, #2
  05e54	e58d302c	 str         r3, [sp, #0x2C]

; 2717 : 
; 2718 :     if(pRequest->SystemFlags & SD_FAST_PATH_AVAILABLE)

  05e58	e59d307c	 ldr         r3, [sp, #0x7C]
  05e5c	e283300c	 add         r3, r3, #0xC
  05e60	e5933000	 ldr         r3, [r3]
  05e64	e3130102	 tst         r3, #2, 2
  05e68	0a000003	 beq         |$LN6@SDHCBusReq@3|

; 2719 :        m_fastPathReq = 1;

  05e6c	e59d3078	 ldr         r3, [sp, #0x78]
  05e70	e2832f62	 add         r2, r3, #0x62, 30
  05e74	e3a03001	 mov         r3, #1
  05e78	e5823000	 str         r3, [r2]
  05e7c		 |$LN6@SDHCBusReq@3|

; 2720 : 
; 2721 :     /* Choose fastpath or not based on registry settings for SDIO and SD memory cards */
; 2722 :     if ((pRequest->SystemFlags & SD_FAST_PATH_AVAILABLE) && 
; 2723 :         ((!m_fastPathSDIO && m_dwSDIOCard) || (!m_fastPathSDMEM && !m_dwSDIOCard)))

  05e7c	e59d307c	 ldr         r3, [sp, #0x7C]
  05e80	e283300c	 add         r3, r3, #0xC
  05e84	e5933000	 ldr         r3, [r3]
  05e88	e3130102	 tst         r3, #2, 2
  05e8c	0a00001b	 beq         |$LN5@SDHCBusReq@3|
  05e90	e59d3078	 ldr         r3, [sp, #0x78]
  05e94	e2833d06	 add         r3, r3, #6, 26
  05e98	e5933000	 ldr         r3, [r3]
  05e9c	e3530000	 cmp         r3, #0
  05ea0	1a000004	 bne         |$LN3@SDHCBusReq@3|
  05ea4	e59d3078	 ldr         r3, [sp, #0x78]
  05ea8	e2833f5e	 add         r3, r3, #0x5E, 30
  05eac	e5933000	 ldr         r3, [r3]
  05eb0	e3530000	 cmp         r3, #0
  05eb4	1a000009	 bne         |$LN4@SDHCBusReq@3|
  05eb8		 |$LN3@SDHCBusReq@3|
  05eb8	e59d3078	 ldr         r3, [sp, #0x78]
  05ebc	e2833f61	 add         r3, r3, #0x61, 30
  05ec0	e5933000	 ldr         r3, [r3]
  05ec4	e3530000	 cmp         r3, #0
  05ec8	1a00000c	 bne         |$LN5@SDHCBusReq@3|
  05ecc	e59d3078	 ldr         r3, [sp, #0x78]
  05ed0	e2833f5e	 add         r3, r3, #0x5E, 30
  05ed4	e5933000	 ldr         r3, [r3]
  05ed8	e3530000	 cmp         r3, #0
  05edc	1a000007	 bne         |$LN5@SDHCBusReq@3|
  05ee0		 |$LN4@SDHCBusReq@3|

; 2724 :     {
; 2725 :        pRequest->SystemFlags &= ~SD_FAST_PATH_AVAILABLE;

  05ee0	e59d307c	 ldr         r3, [sp, #0x7C]
  05ee4	e283300c	 add         r3, r3, #0xC
  05ee8	e5932000	 ldr         r2, [r3]
  05eec	e3e03102	 mvn         r3, #2, 2
  05ef0	e0022003	 and         r2, r2, r3
  05ef4	e59d307c	 ldr         r3, [sp, #0x7C]
  05ef8	e283300c	 add         r3, r3, #0xC
  05efc	e5832000	 str         r2, [r3]
  05f00		 |$LN5@SDHCBusReq@3|

; 2726 :     }
; 2727 : 
; 2728 :     if(pRequest->SystemFlags & SD_FAST_PATH_AVAILABLE)

  05f00	e59d307c	 ldr         r3, [sp, #0x7C]
  05f04	e283300c	 add         r3, r3, #0xC
  05f08	e5933000	 ldr         r3, [r3]
  05f0c	e3130102	 tst         r3, #2, 2
  05f10	0a000006	 beq         |$LN2@SDHCBusReq@3|

; 2729 :        status = SDHCBusRequestHandlerImpl_FastPath(pRequest);

  05f14	e59d107c	 ldr         r1, [sp, #0x7C]
  05f18	e59d0078	 ldr         r0, [sp, #0x78]
  05f1c	eb000000	 bl          |?SDHCBusRequestHandlerImpl_FastPath@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z|
  05f20	e58d0068	 str         r0, [sp, #0x68]
  05f24	e59d3068	 ldr         r3, [sp, #0x68]
  05f28	e58d302c	 str         r3, [sp, #0x2C]

; 2730 :     else

  05f2c	ea000005	 b           |$LN1@SDHCBusReq@3|
  05f30		 |$LN2@SDHCBusReq@3|

; 2731 :        status = SDHCBusRequestHandlerImpl_NormalPath(pRequest);

  05f30	e59d107c	 ldr         r1, [sp, #0x7C]
  05f34	e59d0078	 ldr         r0, [sp, #0x78]
  05f38	eb000000	 bl          |?SDHCBusRequestHandlerImpl_NormalPath@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z|
  05f3c	e58d006c	 str         r0, [sp, #0x6C]
  05f40	e59d306c	 ldr         r3, [sp, #0x6C]
  05f44	e58d302c	 str         r3, [sp, #0x2C]
  05f48		 |$LN1@SDHCBusReq@3|

; 2732 : 
; 2733 :     return status;

  05f48	e59d302c	 ldr         r3, [sp, #0x2C]
  05f4c	e58d305c	 str         r3, [sp, #0x5C]

; 2734 : }

  05f50	e59d005c	 ldr         r0, [sp, #0x5C]
  05f54	e28dd070	 add         sp, sp, #0x70
  05f58	e89d6000	 ldmia       sp, {sp, lr}
  05f5c	e12fff1e	 bx          lr
  05f60		 |$LN16@SDHCBusReq@3|
  05f60		 |$LN17@SDHCBusReq@3|
  05f60	00000000	 DCD         |??_C@_1CHO@EKKACLAH@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu@|
  05f64		 |$LN18@SDHCBusReq@3|
  05f64	00000000	 DCD         |dpCurSettings|
  05f68		 |$LN19@SDHCBusReq@3|
  05f68	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  05f6c		 |$LN20@SDHCBusReq@3|
  05f6c	00000000	 DCD         |??_C@_1KA@CLLCPJCJ@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  05f70		 |$M45964|

			 ENDP  ; |?SDHCBusRequestHandlerImpl@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z|, CSDIOControllerBase::SDHCBusRequestHandlerImpl

	EXPORT	|??_C@_1FG@NEHMPIAK@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?3?$AA?5?$AAC?$AAa?$AAr?$AAd?$AA?5?$AAi?$AAs?$AA?5?$AAr?$AAe?$AAc?$AAo?$AAg?$AAn?$AAi?$AAz?$AAe?$AAd?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IO@CPCPGHBI@?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AAS?$AAw?$AAi?$AAt?$AAc?$AAh?$AAe?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@JFAKCFAP@?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AAS?$AAw?$AAi?$AAt?$AAc?$AAh?$AAe?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KO@MPBOKACG@?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAs?$AAe?$AAn?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KK@CCLJDBFA@?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAs?$AAe?$AAn?$AAd?$AA?5?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@KAHOIMCL@?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LE@DLKFMMBP@?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@FGMBJCIP@?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@BOENNIAA@?$AAC?$AAa?$AAr?$AAd?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAe?$AAd?$AA?5?$AAb?$AAu?$AAs?$AAy?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@HDMFHOJL@?$AAS?$AAD?$AAH?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAI?$AAs?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAa?$AAr?$AAd?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@DJKLHFBG@?$AAS?$AAD?$AAH?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAI?$AAs?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAa?$AAr?$AAd?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@IHOKKCJA@?$AAC?$AAa?$AAr?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAb?$AAu?$AAs?$AAy?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAa?$AAf?$AAt?$AAe?$AAr?$AA?5?$AAc?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CIK@OGJHDHNJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| [ DATA ] ; `string'
	IMPORT	|__rt_sdiv|

  00188			 AREA	 |.pdata|, PDATA
|$T46049| DCD	|$LN119@CommandCom|
	DCD	0xc0035605
|$T46051| DCD	|$LN108@CommandCom|
	DCD	0x40000c03
|$T46053| DCD	|$LN101@CommandCom|
	DCD	0x40001f03

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@NEHMPIAK@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?3?$AA?5?$AAC?$AAa?$AAr?$AAd?$AA?5?$AAi?$AAs?$AA?5?$AAr?$AAe?$AAc?$AAo?$AAg?$AAn?$AAi?$AAz?$AAe?$AAd?$AA?5@| DCB "S"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, ":", 0x0, " "
	DCB	0x0, "C", 0x0, "a", 0x0, "r", 0x0, "d", 0x0, " ", 0x0, "i"
	DCB	0x0, "s", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "c", 0x0, "o"
	DCB	0x0, "g", 0x0, "n", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "a", 0x0, "s", 0x0, " ", 0x0, "a", 0x0, " "
	DCB	0x0, "M", 0x0, "M", 0x0, "C", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IO@CPCPGHBI@?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AAS?$AAw?$AAi?$AAt?$AAc?$AAh?$AAe?$AAd@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, "B", 0x0, "u", 0x0, "s"
	DCB	0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "S"
	DCB	0x0, "w", 0x0, "i", 0x0, "t", 0x0, "c", 0x0, "h", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "A"
	DCB	0x0, "p", 0x0, "p", 0x0, "l", 0x0, "i", 0x0, "c", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "S"
	DCB	0x0, "p", 0x0, "e", 0x0, "c", 0x0, "i", 0x0, "f", 0x0, "i"
	DCB	0x0, "c", 0x0, " ", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, " ", 0x0, "M", 0x0, "o"
	DCB	0x0, "d", 0x0, "e", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@JFAKCFAP@?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AAS?$AAw?$AAi?$AAt?$AAc?$AAh?$AAe?$AAd@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, "B", 0x0, "u", 0x0, "s"
	DCB	0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "S"
	DCB	0x0, "w", 0x0, "i", 0x0, "t", 0x0, "c", 0x0, "h", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "a", 0x0, "r"
	DCB	0x0, "d", 0x0, " ", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, " ", 0x0, "M", 0x0, "o"
	DCB	0x0, "d", 0x0, "e", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KO@MPBOKACG@?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAs?$AAe?$AAn?$AAt@| DCB "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, " ", 0x0, "s", 0x0, "u", 0x0, "c"
	DCB	0x0, "c", 0x0, "e", 0x0, "s", 0x0, "f", 0x0, "u", 0x0, "l"
	DCB	0x0, "l", 0x0, "y", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "b"
	DCB	0x0, "y", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, "{", 0x0, "%", 0x0, "S", 0x0, "}", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KK@CCLJDBFA@?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAs?$AAe?$AAn?$AAd?$AA?5?$AA?$CF@| DCB "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "s", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t"
	DCB	0x0, "e", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "{"
	DCB	0x0, "%", 0x0, "S", 0x0, "}", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@KAHOIMCL@?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, "B", 0x0, "u", 0x0, "s"
	DCB	0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P", 0x0, "o"
	DCB	0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m", 0x0, "i"
	DCB	0x0, "t", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LE@DLKFMMBP@?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi@| DCB "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "R", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v"
	DCB	0x0, "e", 0x0, " ", 0x0, "s", 0x0, "u", 0x0, "c", 0x0, "c"
	DCB	0x0, "e", 0x0, "s", 0x0, "f", 0x0, "u", 0x0, "l", 0x0, "l"
	DCB	0x0, "y", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "c", 0x0, "e"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, "{", 0x0, "%"
	DCB	0x0, "S", 0x0, "}", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@FGMBJCIP@?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, "B", 0x0, "u", 0x0, "s"
	DCB	0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "S", 0x0, "D", 0x0, "I", 0x0, "P", 0x0, "o"
	DCB	0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "(", 0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@BOENNIAA@?$AAC?$AAa?$AAr?$AAd?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAe?$AAd?$AA?5?$AAb?$AAu?$AAs?$AAy?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "a", 0x0, "r", 0x0, "d", 0x0, " ", 0x0, "e", 0x0, "x"
	DCB	0x0, "i", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "s", 0x0, "y", 0x0, " ", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@HDMFHOJL@?$AAS?$AAD?$AAH?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAI?$AAs?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAa?$AAr?$AAd?$AA?5@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, "I", 0x0, "s", 0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, "(", 0x0, ")", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "C", 0x0, "a", 0x0, "r", 0x0, "d"
	DCB	0x0, " ", 0x0, "B", 0x0, "U", 0x0, "S", 0x0, "Y", 0x0, " "
	DCB	0x0, "t", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u"
	DCB	0x0, "t", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@DJKLHFBG@?$AAS?$AAD?$AAH?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAI?$AAs?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAa?$AAr?$AAd?$AA?5@| DCB "S"
	DCB	0x0, "D", 0x0, "H", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, "I", 0x0, "s", 0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, "(", 0x0, ")", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "C", 0x0, "a", 0x0, "r", 0x0, "d"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "m", 0x0, "o", 0x0, "v"
	DCB	0x0, "e", 0x0, "d", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@IHOKKCJA@?$AAC?$AAa?$AAr?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAb?$AAu?$AAs?$AAy?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAa?$AAf?$AAt?$AAe?$AAr?$AA?5?$AAc?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@| DCB "C"
	DCB	0x0, "a", 0x0, "r", 0x0, "d", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, " ", 0x0, "b", 0x0, "u", 0x0, "s", 0x0, "y", 0x0, " "
	DCB	0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "a", 0x0, "f", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "c", 0x0, "o", 0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, "!", 0x0, " ", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "l", 0x0, "a", 0x0, "y", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, ".", 0x0, ".", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CIK@OGJHDHNJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, "_", 0x0, "F", 0x0, "a", 0x0, "s", 0x0, "t", 0x0, "P"
	DCB	0x0, "a", 0x0, "t", 0x0, "h", 0x0, "-", 0x0, "h", 0x0, "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "="
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, ",", 0x0, " ", 0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "m", 0x0, "F", 0x0, "l", 0x0, "a", 0x0, "g"
	DCB	0x0, "s", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "C", 0x0, "l", 0x0, "a", 0x0, "s", 0x0, "s", 0x0, "="
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, ",", 0x0, " ", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "d"
	DCB	0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "C", 0x0, "o"
	DCB	0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "A"
	DCB	0x0, "r", 0x0, "g", 0x0, "u", 0x0, "m", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, "e"
	DCB	0x0, "T", 0x0, "y", 0x0, "p", 0x0, "e", 0x0, "=", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ","
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, "P", 0x0, "a", 0x0, "r", 0x0, "a"
	DCB	0x0, "m", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, "=", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ","
	DCB	0x0, " ", 0x0, "N", 0x0, "u", 0x0, "m", 0x0, "B", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "k", 0x0, "s", 0x0, "=", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ","
	DCB	0x0, " ", 0x0, "B", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k"
	DCB	0x0, "S", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, "=", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ","
	DCB	0x0, " ", 0x0, "H", 0x0, "C", 0x0, "P", 0x0, "a", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "p"
	DCB	0x0, "B", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "B"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "="
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, ",", 0x0, " ", 0x0, "D", 0x0, "a", 0x0, "t", 0x0, "a"
	DCB	0x0, "A", 0x0, "c", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "s"
	DCB	0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, ",", 0x0, " ", 0x0, "F", 0x0, "l", 0x0, "a"
	DCB	0x0, "g", 0x0, "s", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00028			 AREA	 |.xdata|, DATA
|$T46047| DCD	0x2
	DCD	|$LN112@CommandCom|
	DCD	|$LN113@CommandCom|
	DCD	|$LN108@CommandCom|
	DCD	|$LN109@CommandCom|
	DCD	|$LN105@CommandCom|
	DCD	|$LN106@CommandCom|
	DCD	|$LN101@CommandCom|
	DCD	|$LN102@CommandCom|
; Function compile flags: /Odtp

  05f70			 AREA	 |.text|, CODE, ARM

  05f70	00000000	 DCD         |__C_specific_handler|
  05f74	00000000	 DCD         |$T46047|

  05f78		 |?CommandCompleteHandler_FastPath@CSDIOControllerBase@@QAAHPAU_SD_BUS_REQUEST@@@Z| PROC ; CSDIOControllerBase::CommandCompleteHandler_FastPath

; 2742 : {

  05f78		 |$LN119@CommandCom|
  05f78	e1a0c00d	 mov         r12, sp
  05f7c	e92d0003	 stmdb       sp!, {r0, r1}
  05f80	e92d5800	 stmdb       sp!, {r11, r12, lr}
  05f84	e28db00c	 add         r11, sp, #0xC
  05f88	e24ddf46	 sub         sp, sp, #0x46, 30
  05f8c		 |$LN117@CommandCom|

; 2743 :     DWORD               dwCountStart;
; 2744 : //    PSD_BUS_REQUEST     pRequest = NULL;       // the request to complete
; 2745 :     SD_API_STATUS       status = SD_API_STATUS_PENDING;

  05f8c	e3a03001	 mov         r3, #1
  05f90	e50b30ec	 str         r3, [r11, #-0xEC]

; 2746 :     DWORD MMC_STAT_OVERWRITE = 0;

  05f94	e3a03000	 mov         r3, #0
  05f98	e50b30f0	 str         r3, [r11, #-0xF0]

; 2747 : 
; 2748 :     DEBUGMSG(SDCARD_ZONE_FUNC, 
; 2749 :         (L"CSDIOControllerBase::CommandCompleteHandler_FastPath-"
; 2750 :          L"hDevice=0x%08X, SystemFlags=0x%08X, TransferClass=0x%08X, CommandCode=0x%08X, "
; 2751 :          L"CommandArgument=0x%08X, ResponseType=0x%08X, RequestParam=0x%08X, Status=0x%08X, "
; 2752 :          L"NumBlocks=0x%08X, BlockSize=0x%08X, HCParam=0x%08X, pBlockBuffer=0x%08X, "
; 2753 :          L"DataAccessClocks=0x%08X, Flags=0x%08X\r\n",
; 2754 :          pRequest->hDevice,
; 2755 :          pRequest->SystemFlags,
; 2756 :          pRequest->TransferClass,
; 2757 :          pRequest->CommandCode,
; 2758 :          pRequest->CommandArgument,
; 2759 :          pRequest->CommandResponse.ResponseType,
; 2760 :          pRequest->RequestParam,
; 2761 :          pRequest->Status,
; 2762 :          pRequest->NumBlocks,
; 2763 :          pRequest->BlockSize,
; 2764 :          pRequest->HCParam,
; 2765 :          pRequest->pBlockBuffer,
; 2766 :          pRequest->DataAccessClocks,
; 2767 :          pRequest->Flags)
; 2768 :          );

  05f9c	e59f3d90	 ldr         r3, [pc, #0xD90]
  05fa0	e5933440	 ldr         r3, [r3, #0x440]
  05fa4	e3130b02	 tst         r3, #2, 22
  05fa8	0a000039	 beq         |$LN60@CommandCom|
  05fac	e59b3004	 ldr         r3, [r11, #4]
  05fb0	e2833054	 add         r3, r3, #0x54
  05fb4	e5933000	 ldr         r3, [r3]
  05fb8	e58d3028	 str         r3, [sp, #0x28]
  05fbc	e59b3004	 ldr         r3, [r11, #4]
  05fc0	e2833050	 add         r3, r3, #0x50
  05fc4	e5933000	 ldr         r3, [r3]
  05fc8	e58d3024	 str         r3, [sp, #0x24]
  05fcc	e59b3004	 ldr         r3, [r11, #4]
  05fd0	e2833048	 add         r3, r3, #0x48
  05fd4	e5933000	 ldr         r3, [r3]
  05fd8	e58d3020	 str         r3, [sp, #0x20]
  05fdc	e59b3004	 ldr         r3, [r11, #4]
  05fe0	e2833044	 add         r3, r3, #0x44
  05fe4	e5933000	 ldr         r3, [r3]
  05fe8	e58d301c	 str         r3, [sp, #0x1C]
  05fec	e59b3004	 ldr         r3, [r11, #4]
  05ff0	e2833040	 add         r3, r3, #0x40
  05ff4	e5933000	 ldr         r3, [r3]
  05ff8	e58d3018	 str         r3, [sp, #0x18]
  05ffc	e59b3004	 ldr         r3, [r11, #4]
  06000	e283303c	 add         r3, r3, #0x3C
  06004	e5933000	 ldr         r3, [r3]
  06008	e58d3014	 str         r3, [sp, #0x14]
  0600c	e59b3004	 ldr         r3, [r11, #4]
  06010	e2833038	 add         r3, r3, #0x38
  06014	e5933000	 ldr         r3, [r3]
  06018	e58d3010	 str         r3, [sp, #0x10]
  0601c	e59b3004	 ldr         r3, [r11, #4]
  06020	e2833034	 add         r3, r3, #0x34
  06024	e5933000	 ldr         r3, [r3]
  06028	e58d300c	 str         r3, [sp, #0xC]
  0602c	e59b3004	 ldr         r3, [r11, #4]
  06030	e283301c	 add         r3, r3, #0x1C
  06034	e5933000	 ldr         r3, [r3]
  06038	e58d3008	 str         r3, [sp, #8]
  0603c	e59b3004	 ldr         r3, [r11, #4]
  06040	e2833018	 add         r3, r3, #0x18
  06044	e5933000	 ldr         r3, [r3]
  06048	e58d3004	 str         r3, [sp, #4]
  0604c	e59b3004	 ldr         r3, [r11, #4]
  06050	e2833014	 add         r3, r3, #0x14
  06054	e5d33000	 ldrb        r3, [r3]
  06058	e58d3000	 str         r3, [sp]
  0605c	e59b3004	 ldr         r3, [r11, #4]
  06060	e2833010	 add         r3, r3, #0x10
  06064	e5933000	 ldr         r3, [r3]
  06068	e59b2004	 ldr         r2, [r11, #4]
  0606c	e282200c	 add         r2, r2, #0xC
  06070	e5922000	 ldr         r2, [r2]
  06074	e59b1004	 ldr         r1, [r11, #4]
  06078	e2811008	 add         r1, r1, #8
  0607c	e5911000	 ldr         r1, [r1]
  06080	e59f0cf0	 ldr         r0, [pc, #0xCF0]
  06084	eb000000	 bl          NKDbgPrintfW
  06088	e3a03001	 mov         r3, #1
  0608c	e50b3098	 str         r3, [r11, #-0x98]
  06090	ea000001	 b           |$LN61@CommandCom|
  06094		 |$LN60@CommandCom|
  06094	e3a03000	 mov         r3, #0
  06098	e50b3098	 str         r3, [r11, #-0x98]
  0609c		 |$LN61@CommandCom|

; 2769 : 
; 2770 :     DWORD MMC_STAT = Read_MMC_STAT();

  0609c	e59b0000	 ldr         r0, [r11]
  060a0	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  060a4	e50b0094	 str         r0, [r11, #-0x94]
  060a8	e51b3094	 ldr         r3, [r11, #-0x94]
  060ac	e50b30f8	 str         r3, [r11, #-0xF8]

; 2771 :     DWORD MMC_PSTAT = INREG32(&m_pbRegisters->MMCHS_PSTATE);

  060b0	e59b3000	 ldr         r3, [r11]
  060b4	e2833f57	 add         r3, r3, #0x57, 30
  060b8	e5933000	 ldr         r3, [r3]
  060bc	e2833f49	 add         r3, r3, #0x49, 30
  060c0	e5933000	 ldr         r3, [r3]
  060c4	e50b30e8	 str         r3, [r11, #-0xE8]

; 2772 : 
; 2773 :     if( MMC_PSTAT & MMCHS_PSTAT_DATI )

  060c8	e51b30e8	 ldr         r3, [r11, #-0xE8]
  060cc	e3130002	 tst         r3, #2
  060d0	0a000060	 beq         |$LN57@CommandCom|

; 2774 :     {
; 2775 :         if( pRequest->CommandResponse.ResponseType == ResponseR1b )

  060d4	e59b3004	 ldr         r3, [r11, #4]
  060d8	e283301c	 add         r3, r3, #0x1C
  060dc	e5933000	 ldr         r3, [r3]
  060e0	e3530002	 cmp         r3, #2
  060e4	1a00005b	 bne         |$LN56@CommandCom|

; 2776 :         {
; 2777 :             DEBUGMSG(SHC_BUSY_STATE_ZONE, (TEXT("Card in busy state after command!  Delaying...\r\n")));

  060e8	e59f3c44	 ldr         r3, [pc, #0xC44]
  060ec	e5933440	 ldr         r3, [r3, #0x440]
  060f0	e3130080	 tst         r3, #0x80
  060f4	0a000004	 beq         |$LN62@CommandCom|
  060f8	e59f0c74	 ldr         r0, [pc, #0xC74]
  060fc	eb000000	 bl          NKDbgPrintfW
  06100	e3a03001	 mov         r3, #1
  06104	e50b3090	 str         r3, [r11, #-0x90]
  06108	ea000001	 b           |$LN63@CommandCom|
  0610c		 |$LN62@CommandCom|
  0610c	e3a03000	 mov         r3, #0
  06110	e50b3090	 str         r3, [r11, #-0x90]
  06114		 |$LN63@CommandCom|

; 2778 :             // get starting tick count for timeout
; 2779 :             dwCountStart = GetTickCount();

  06114	eb000000	 bl          GetTickCount
  06118	e50b008c	 str         r0, [r11, #-0x8C]
  0611c	e51b308c	 ldr         r3, [r11, #-0x8C]
  06120	e50b30f4	 str         r3, [r11, #-0xF4]
  06124		 |$LN55@CommandCom|

; 2780 : 
; 2781 :             do 
; 2782 :             {
; 2783 :                 MMC_STAT = Read_MMC_STAT();

  06124	e59b0000	 ldr         r0, [r11]
  06128	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  0612c	e50b0088	 str         r0, [r11, #-0x88]
  06130	e51b3088	 ldr         r3, [r11, #-0x88]
  06134	e50b30f8	 str         r3, [r11, #-0xF8]

; 2784 :                 MMC_PSTAT = INREG32(&m_pbRegisters->MMCHS_PSTATE);

  06138	e59b3000	 ldr         r3, [r11]
  0613c	e2833f57	 add         r3, r3, #0x57, 30
  06140	e5933000	 ldr         r3, [r3]
  06144	e2833f49	 add         r3, r3, #0x49, 30
  06148	e5933000	 ldr         r3, [r3]
  0614c	e50b30e8	 str         r3, [r11, #-0xE8]

; 2785 : 
; 2786 :                 // check for card ejection
; 2787 :                 if( !SDCardDetect() )

  06150	e59b3000	 ldr         r3, [r11]
  06154	e5933000	 ldr         r3, [r3]
  06158	e283300c	 add         r3, r3, #0xC
  0615c	e59b0000	 ldr         r0, [r11]
  06160	e5933000	 ldr         r3, [r3]
  06164	e1a0e00f	 mov         lr, pc
  06168	e12fff13	 bx          r3
  0616c	e50b0084	 str         r0, [r11, #-0x84]
  06170	e51b3084	 ldr         r3, [r11, #-0x84]
  06174	e3530000	 cmp         r3, #0
  06178	1a00000d	 bne         |$LN52@CommandCom|

; 2788 :                 {
; 2789 :                     DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDHControllerIstThread() - Card removed!\r\n")));

  0617c	e59f3bb0	 ldr         r3, [pc, #0xBB0]
  06180	e5933440	 ldr         r3, [r3, #0x440]
  06184	e3130902	 tst         r3, #2, 18
  06188	0a000004	 beq         |$LN64@CommandCom|
  0618c	e59f0bdc	 ldr         r0, [pc, #0xBDC]
  06190	eb000000	 bl          NKDbgPrintfW
  06194	e3a03001	 mov         r3, #1
  06198	e50b3080	 str         r3, [r11, #-0x80]
  0619c	ea000001	 b           |$LN65@CommandCom|
  061a0		 |$LN64@CommandCom|
  061a0	e3a03000	 mov         r3, #0
  061a4	e50b3080	 str         r3, [r11, #-0x80]
  061a8		 |$LN65@CommandCom|

; 2790 :                     status = SD_API_STATUS_DEVICE_REMOVED;

  061a8	e3a03147	 mov         r3, #0x47, 2
  061ac	e50b30ec	 str         r3, [r11, #-0xEC]

; 2791 :                     goto TRANSFER_DONE;

  061b0	ea000256	 b           |$TRANSFER_DONE$43453|
  061b4		 |$LN52@CommandCom|

; 2792 :                 }
; 2793 : 
; 2794 :                 // check for timeout
; 2795 :                 if (GetTickCount() - dwCountStart > m_dwMaxTimeout)

  061b4	eb000000	 bl          GetTickCount
  061b8	e50b007c	 str         r0, [r11, #-0x7C]
  061bc	e51b207c	 ldr         r2, [r11, #-0x7C]
  061c0	e51b30f4	 ldr         r3, [r11, #-0xF4]
  061c4	e0422003	 sub         r2, r2, r3
  061c8	e59b3000	 ldr         r3, [r11]
  061cc	e2833e15	 add         r3, r3, #0x15, 28
  061d0	e5933000	 ldr         r3, [r3]
  061d4	e1520003	 cmp         r2, r3
  061d8	9a00000d	 bls         |$LN50@CommandCom|

; 2796 :                 {
; 2797 :                     DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDHControllerIstThread() - Card BUSY timeout!\r\n")));

  061dc	e59f3b50	 ldr         r3, [pc, #0xB50]
  061e0	e5933440	 ldr         r3, [r3, #0x440]
  061e4	e3130902	 tst         r3, #2, 18
  061e8	0a000004	 beq         |$LN66@CommandCom|
  061ec	e59f0b78	 ldr         r0, [pc, #0xB78]
  061f0	eb000000	 bl          NKDbgPrintfW
  061f4	e3a03001	 mov         r3, #1
  061f8	e50b3078	 str         r3, [r11, #-0x78]
  061fc	ea000001	 b           |$LN67@CommandCom|
  06200		 |$LN66@CommandCom|
  06200	e3a03000	 mov         r3, #0
  06204	e50b3078	 str         r3, [r11, #-0x78]
  06208		 |$LN67@CommandCom|

; 2798 :                     status = SD_API_STATUS_RESPONSE_TIMEOUT;

  06208	e3a03153	 mov         r3, #0x53, 2
  0620c	e50b30ec	 str         r3, [r11, #-0xEC]

; 2799 :                     goto TRANSFER_DONE;

  06210	ea00023e	 b           |$TRANSFER_DONE$43453|
  06214		 |$LN50@CommandCom|

; 2800 :                 }
; 2801 :             } while( (MMC_PSTAT & MMCHS_PSTAT_DATI) && !( MMC_STAT & ( MMCHS_STAT_CCRC | MMCHS_STAT_CTO | MMCHS_STAT_DCRC | MMCHS_STAT_DTO )) );

  06214	e51b30e8	 ldr         r3, [r11, #-0xE8]
  06218	e3130002	 tst         r3, #2
  0621c	0a000002	 beq         |$LN48@CommandCom|
  06220	e51b30f8	 ldr         r3, [r11, #-0xF8]
  06224	e3130833	 tst         r3, #0x33, 16
  06228	0affffbd	 beq         |$LN55@CommandCom|
  0622c		 |$LN48@CommandCom|

; 2802 : 
; 2803 :             DEBUGMSG(SHC_BUSY_STATE_ZONE, (TEXT("Card exited busy state.\r\n")));

  0622c	e59f3b00	 ldr         r3, [pc, #0xB00]
  06230	e5933440	 ldr         r3, [r3, #0x440]
  06234	e3130080	 tst         r3, #0x80
  06238	0a000004	 beq         |$LN68@CommandCom|
  0623c	e59f0b24	 ldr         r0, [pc, #0xB24]
  06240	eb000000	 bl          NKDbgPrintfW
  06244	e3a03001	 mov         r3, #1
  06248	e50b3074	 str         r3, [r11, #-0x74]
  0624c	ea000001	 b           |$LN69@CommandCom|
  06250		 |$LN68@CommandCom|
  06250	e3a03000	 mov         r3, #0
  06254	e50b3074	 str         r3, [r11, #-0x74]
  06258		 |$LN69@CommandCom|
  06258		 |$LN56@CommandCom|
  06258		 |$LN57@CommandCom|

; 2804 :         }
; 2805 :     }
; 2806 :     //    }
; 2807 : 
; 2808 :     if( MMC_STAT & MMCHS_STAT_CCRC ) // command CRC error

  06258	e51b30f8	 ldr         r3, [r11, #-0xF8]
  0625c	e3130802	 tst         r3, #2, 16
  06260	0a00000f	 beq         |$LN47@CommandCom|

; 2809 :     {
; 2810 :         status = SD_API_STATUS_CRC_ERROR;

  06264	e3a03137	 mov         r3, #0x37, 2
  06268	e50b30ec	 str         r3, [r11, #-0xEC]

; 2811 :         MMC_STAT_OVERWRITE |= MMCHS_STAT_CCRC;

  0626c	e51b30f0	 ldr         r3, [r11, #-0xF0]
  06270	e3833802	 orr         r3, r3, #2, 16
  06274	e50b30f0	 str         r3, [r11, #-0xF0]

; 2812 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDHControllerIstThread() - Got command CRC error!\r\n")));

  06278	e59f3ab4	 ldr         r3, [pc, #0xAB4]
  0627c	e5933440	 ldr         r3, [r3, #0x440]
  06280	e3130902	 tst         r3, #2, 18
  06284	0a000004	 beq         |$LN70@CommandCom|
  06288	e59f0ad4	 ldr         r0, [pc, #0xAD4]
  0628c	eb000000	 bl          NKDbgPrintfW
  06290	e3a03001	 mov         r3, #1
  06294	e50b3070	 str         r3, [r11, #-0x70]
  06298	ea000001	 b           |$LN71@CommandCom|
  0629c		 |$LN70@CommandCom|
  0629c	e3a03000	 mov         r3, #0
  062a0	e50b3070	 str         r3, [r11, #-0x70]
  062a4		 |$LN71@CommandCom|
  062a4		 |$LN47@CommandCom|

; 2813 :     }
; 2814 :     
; 2815 :     if( MMC_STAT & MMCHS_STAT_CTO ) // command response timeout

  062a4	e51b30f8	 ldr         r3, [r11, #-0xF8]
  062a8	e3130801	 tst         r3, #1, 16
  062ac	0a00000f	 beq         |$LN46@CommandCom|

; 2816 :     {
; 2817 :         status = SD_API_STATUS_RESPONSE_TIMEOUT;

  062b0	e3a03153	 mov         r3, #0x53, 2
  062b4	e50b30ec	 str         r3, [r11, #-0xEC]

; 2818 :         MMC_STAT_OVERWRITE |= MMCHS_STAT_CTO;

  062b8	e51b30f0	 ldr         r3, [r11, #-0xF0]
  062bc	e3833801	 orr         r3, r3, #1, 16
  062c0	e50b30f0	 str         r3, [r11, #-0xF0]

; 2819 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDHControllerIstThread() - Got command response timeout!\r\n")));

  062c4	e59f3a68	 ldr         r3, [pc, #0xA68]
  062c8	e5933440	 ldr         r3, [r3, #0x440]
  062cc	e3130902	 tst         r3, #2, 18
  062d0	0a000004	 beq         |$LN72@CommandCom|
  062d4	e59f0a84	 ldr         r0, [pc, #0xA84]
  062d8	eb000000	 bl          NKDbgPrintfW
  062dc	e3a03001	 mov         r3, #1
  062e0	e50b306c	 str         r3, [r11, #-0x6C]
  062e4	ea000001	 b           |$LN73@CommandCom|
  062e8		 |$LN72@CommandCom|
  062e8	e3a03000	 mov         r3, #0
  062ec	e50b306c	 str         r3, [r11, #-0x6C]
  062f0		 |$LN73@CommandCom|
  062f0		 |$LN46@CommandCom|

; 2820 :         #ifdef ENABLE_RETAIL_OUTPUT
; 2821 :             RETAILMSG(1, (L"CSDIOControllerBase::CommandCompleteHandler(MMCHS_STAT_CTO)\r\n"));
; 2822 :         #endif        
; 2823 :     }
; 2824 :     
; 2825 :     if( MMC_STAT & MMCHS_STAT_DTO ) // data timeout

  062f0	e51b30f8	 ldr         r3, [r11, #-0xF8]
  062f4	e3130601	 tst         r3, #1, 12
  062f8	0a00000f	 beq         |$LN45@CommandCom|

; 2826 :     {
; 2827 :         status = SD_API_STATUS_RESPONSE_TIMEOUT;

  062fc	e3a03153	 mov         r3, #0x53, 2
  06300	e50b30ec	 str         r3, [r11, #-0xEC]

; 2828 :         MMC_STAT_OVERWRITE |= MMCHS_STAT_DTO;

  06304	e51b30f0	 ldr         r3, [r11, #-0xF0]
  06308	e3833601	 orr         r3, r3, #1, 12
  0630c	e50b30f0	 str         r3, [r11, #-0xF0]

; 2829 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDHControllerIstThread() - Got command response timeout!\r\n")));

  06310	e59f3a1c	 ldr         r3, [pc, #0xA1C]
  06314	e5933440	 ldr         r3, [r3, #0x440]
  06318	e3130902	 tst         r3, #2, 18
  0631c	0a000004	 beq         |$LN74@CommandCom|
  06320	e59f0a38	 ldr         r0, [pc, #0xA38]
  06324	eb000000	 bl          NKDbgPrintfW
  06328	e3a03001	 mov         r3, #1
  0632c	e50b3068	 str         r3, [r11, #-0x68]
  06330	ea000001	 b           |$LN75@CommandCom|
  06334		 |$LN74@CommandCom|
  06334	e3a03000	 mov         r3, #0
  06338	e50b3068	 str         r3, [r11, #-0x68]
  0633c		 |$LN75@CommandCom|
  0633c		 |$LN45@CommandCom|

; 2830 : #ifdef ENABLE_RETAIL_OUTPUT
; 2831 :         RETAILMSG(1, (L"CSDIOControllerBase::CommandCompleteHandler(MMCHS_STAT_DTO)\r\n"));
; 2832 : #endif        
; 2833 :     }
; 2834 :     
; 2835 :     if( MMC_STAT & MMCHS_STAT_DCRC ) // data CRC error

  0633c	e51b30f8	 ldr         r3, [r11, #-0xF8]
  06340	e3130602	 tst         r3, #2, 12
  06344	0a00000f	 beq         |$LN44@CommandCom|

; 2836 :     {
; 2837 :         status = SD_API_STATUS_RESPONSE_TIMEOUT;

  06348	e3a03153	 mov         r3, #0x53, 2
  0634c	e50b30ec	 str         r3, [r11, #-0xEC]

; 2838 :         MMC_STAT_OVERWRITE |= MMCHS_STAT_DCRC;

  06350	e51b30f0	 ldr         r3, [r11, #-0xF0]
  06354	e3833602	 orr         r3, r3, #2, 12
  06358	e50b30f0	 str         r3, [r11, #-0xF0]

; 2839 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDHControllerIstThread() - Got command response timeout!\r\n")));

  0635c	e59f39d0	 ldr         r3, [pc, #0x9D0]
  06360	e5933440	 ldr         r3, [r3, #0x440]
  06364	e3130902	 tst         r3, #2, 18
  06368	0a000004	 beq         |$LN76@CommandCom|
  0636c	e59f09ec	 ldr         r0, [pc, #0x9EC]
  06370	eb000000	 bl          NKDbgPrintfW
  06374	e3a03001	 mov         r3, #1
  06378	e50b3064	 str         r3, [r11, #-0x64]
  0637c	ea000001	 b           |$LN77@CommandCom|
  06380		 |$LN76@CommandCom|
  06380	e3a03000	 mov         r3, #0
  06384	e50b3064	 str         r3, [r11, #-0x64]
  06388		 |$LN77@CommandCom|
  06388		 |$LN44@CommandCom|

; 2840 : #ifdef ENABLE_RETAIL_OUTPUT
; 2841 :         RETAILMSG(1, (L"CSDIOControllerBase::CommandCompleteHandler(MMCHS_STAT_DCRC)\r\n"));
; 2842 : #endif        
; 2843 :     }
; 2844 :     
; 2845 :     if( MMC_STAT_OVERWRITE ) // clear the status error bits

  06388	e51b30f0	 ldr         r3, [r11, #-0xF0]
  0638c	e3530000	 cmp         r3, #0
  06390	0a000003	 beq         |$LN43@CommandCom|

; 2846 :     {
; 2847 : #ifdef ENABLE_RETAIL_OUTPUT
; 2848 :         RETAILMSG(1, (L"CSDIOControllerBase::CommandCompleteHandler(MMC_STAT_OVERWRITE)\r\n"));
; 2849 : #endif        
; 2850 :         Write_MMC_STAT(MMC_STAT_OVERWRITE);

  06394	e51b10f0	 ldr         r1, [r11, #-0xF0]
  06398	e59b0000	 ldr         r0, [r11]
  0639c	eb000000	 bl          |?Write_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|

; 2851 :         goto TRANSFER_DONE;

  063a0	ea0001da	 b           |$TRANSFER_DONE$43453|
  063a4		 |$LN43@CommandCom|

; 2852 :     }
; 2853 : 
; 2854 :     // get the response information
; 2855 :     if(pRequest->CommandResponse.ResponseType == NoResponse)

  063a4	e59b3004	 ldr         r3, [r11, #4]
  063a8	e283301c	 add         r3, r3, #0x1C
  063ac	e5933000	 ldr         r3, [r3]
  063b0	e3530000	 cmp         r3, #0
  063b4	1a00000c	 bne         |$LN41@CommandCom|

; 2856 :     {
; 2857 :         DEBUGMSG (SHC_SDBUS_INTERACT_ZONE,(TEXT("GetCmdResponse returned no response (no response expected)\r\n")));

  063b8	e59f3974	 ldr         r3, [pc, #0x974]
  063bc	e5933440	 ldr         r3, [r3, #0x440]
  063c0	e3130040	 tst         r3, #0x40
  063c4	0a000004	 beq         |$LN78@CommandCom|
  063c8	e59f098c	 ldr         r0, [pc, #0x98C]
  063cc	eb000000	 bl          NKDbgPrintfW
  063d0	e3a03001	 mov         r3, #1
  063d4	e50b3060	 str         r3, [r11, #-0x60]
  063d8	ea000001	 b           |$LN79@CommandCom|
  063dc		 |$LN78@CommandCom|
  063dc	e3a03000	 mov         r3, #0
  063e0	e50b3060	 str         r3, [r11, #-0x60]
  063e4		 |$LN79@CommandCom|

; 2858 :         goto TRANSFER_DONE;

  063e4	ea0001c9	 b           |$TRANSFER_DONE$43453|

; 2859 :     }
; 2860 :     else

  063e8	ea000018	 b           |$LN39@CommandCom|
  063ec		 |$LN41@CommandCom|

; 2861 :     {
; 2862 :         status =  GetCommandResponse(pRequest);

  063ec	e59b1004	 ldr         r1, [r11, #4]
  063f0	e59b0000	 ldr         r0, [r11]
  063f4	eb000000	 bl          |?GetCommandResponse@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z|
  063f8	e50b005c	 str         r0, [r11, #-0x5C]
  063fc	e51b305c	 ldr         r3, [r11, #-0x5C]
  06400	e50b30ec	 str         r3, [r11, #-0xEC]

; 2863 :         if(!SD_API_SUCCESS(status))

  06404	e51b30ec	 ldr         r3, [r11, #-0xEC]
  06408	e3530000	 cmp         r3, #0
  0640c	aa00000f	 bge         |$LN38@CommandCom|

; 2864 :         {
; 2865 :             DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDHCDBusRequestHandler() - Error getting response for command:0x%02x\r\n"), pRequest->CommandCode));

  06410	e59f391c	 ldr         r3, [pc, #0x91C]
  06414	e5933440	 ldr         r3, [r3, #0x440]
  06418	e3130902	 tst         r3, #2, 18
  0641c	0a000008	 beq         |$LN80@CommandCom|
  06420	e59b3004	 ldr         r3, [r11, #4]
  06424	e2833014	 add         r3, r3, #0x14
  06428	e5d33000	 ldrb        r3, [r3]
  0642c	e1a01003	 mov         r1, r3
  06430	e59f0920	 ldr         r0, [pc, #0x920]
  06434	eb000000	 bl          NKDbgPrintfW
  06438	e3a03001	 mov         r3, #1
  0643c	e50b3058	 str         r3, [r11, #-0x58]
  06440	ea000001	 b           |$LN81@CommandCom|
  06444		 |$LN80@CommandCom|
  06444	e3a03000	 mov         r3, #0
  06448	e50b3058	 str         r3, [r11, #-0x58]
  0644c		 |$LN81@CommandCom|

; 2866 :             goto TRANSFER_DONE;     

  0644c	ea0001af	 b           |$TRANSFER_DONE$43453|
  06450		 |$LN38@CommandCom|
  06450		 |$LN39@CommandCom|

; 2867 :         }
; 2868 :     }
; 2869 : 
; 2870 :     if (SD_COMMAND != pRequest->TransferClass) // data transfer

  06450	e59b3004	 ldr         r3, [r11, #4]
  06454	e2833010	 add         r3, r3, #0x10
  06458	e5933000	 ldr         r3, [r3]
  0645c	e3530002	 cmp         r3, #2
  06460	0a0001aa	 beq         |$LN36@CommandCom|

; 2871 :     {
; 2872 :         DWORD cbTransfer = TRANSFER_SIZE(pRequest);

  06464	e59b3004	 ldr         r3, [r11, #4]
  06468	e2832040	 add         r2, r3, #0x40
  0646c	e59b3004	 ldr         r3, [r11, #4]
  06470	e283303c	 add         r3, r3, #0x3C
  06474	e5922000	 ldr         r2, [r2]
  06478	e5933000	 ldr         r3, [r3]
  0647c	e0030392	 mul         r3, r2, r3
  06480	e50b30e4	 str         r3, [r11, #-0xE4]

; 2873 :         BOOL     fRet;
; 2874 :         BOOL     FastPathMode = FALSE;

  06484	e3a03000	 mov         r3, #0
  06488	e50b30e0	 str         r3, [r11, #-0xE0]

; 2875 : 
; 2876 :         FastPathMode = (pRequest->SystemFlags & SD_FAST_PATH_AVAILABLE) ? TRUE : FALSE; 

  0648c	e59b3004	 ldr         r3, [r11, #4]
  06490	e283300c	 add         r3, r3, #0xC
  06494	e5933000	 ldr         r3, [r3]
  06498	e3130102	 tst         r3, #2, 2
  0649c	0a000002	 beq         |$LN82@CommandCom|
  064a0	e3a03001	 mov         r3, #1
  064a4	e50b3054	 str         r3, [r11, #-0x54]
  064a8	ea000001	 b           |$LN83@CommandCom|
  064ac		 |$LN82@CommandCom|
  064ac	e3a03000	 mov         r3, #0
  064b0	e50b3054	 str         r3, [r11, #-0x54]
  064b4		 |$LN83@CommandCom|
  064b4	e51b3054	 ldr         r3, [r11, #-0x54]
  064b8	e50b30e0	 str         r3, [r11, #-0xE0]

; 2877 : 
; 2878 :         switch(pRequest->TransferClass)

  064bc	e59b3004	 ldr         r3, [r11, #4]
  064c0	e2833010	 add         r3, r3, #0x10
  064c4	e5933000	 ldr         r3, [r3]
  064c8	e50b3050	 str         r3, [r11, #-0x50]
  064cc	e51b3050	 ldr         r3, [r11, #-0x50]
  064d0	e3530000	 cmp         r3, #0
  064d4	0a000003	 beq         |$LN33@CommandCom|
  064d8	e51b3050	 ldr         r3, [r11, #-0x50]
  064dc	e3530001	 cmp         r3, #1
  064e0	0a0000ba	 beq         |$LN22@CommandCom|
  064e4	ea00017f	 b           |$LN34@CommandCom|
  064e8		 |$LN33@CommandCom|
  064e8		 |$LN105@CommandCom|

; 2879 :         {
; 2880 :         case SD_READ:
; 2881 :                 __try {
; 2882 :                        fRet = SDIReceive(pRequest->pBlockBuffer, cbTransfer, FastPathMode);

  064e8	e51b30e0	 ldr         r3, [r11, #-0xE0]
  064ec	e51b20e4	 ldr         r2, [r11, #-0xE4]
  064f0	e59b1004	 ldr         r1, [r11, #4]
  064f4	e2811048	 add         r1, r1, #0x48
  064f8	e5911000	 ldr         r1, [r1]
  064fc	e59b0000	 ldr         r0, [r11]
  06500	eb000000	 bl          |?SDIReceive@CSDIOControllerBase@@QAAHPAEKH@Z|
  06504	e50b004c	 str         r0, [r11, #-0x4C]
  06508	e51b304c	 ldr         r3, [r11, #-0x4C]
  0650c	e50b30dc	 str         r3, [r11, #-0xDC]
  06510		 |$LN106@CommandCom|

; 2883 :                     }

  06510	ea000002	 b           |$LN107@CommandCom|
  06514		 |$LN102@CommandCom|

; 2885 :                     fRet = FALSE;

  06514	e3a03000	 mov         r3, #0
  06518	e50b30dc	 str         r3, [r11, #-0xDC]
  0651c	eaffffff	 b           |$LN107@CommandCom|
  06520		 |$LN107@CommandCom|

; 2886 :                 }
; 2887 :             if(!fRet)

  06520	e51b30dc	 ldr         r3, [r11, #-0xDC]
  06524	e3530000	 cmp         r3, #0
  06528	1a00000e	 bne         |$LN31@CommandCom|

; 2888 :             {
; 2889 :                 DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDHCBusRequestHandler() - SDIPollingReceive() failed\r\n")));

  0652c	e59f3800	 ldr         r3, [pc, #0x800]
  06530	e5933440	 ldr         r3, [r3, #0x440]
  06534	e3130902	 tst         r3, #2, 18
  06538	0a000004	 beq         |$LN84@CommandCom|
  0653c	e59f0810	 ldr         r0, [pc, #0x810]
  06540	eb000000	 bl          NKDbgPrintfW
  06544	e3a03001	 mov         r3, #1
  06548	e50b3040	 str         r3, [r11, #-0x40]
  0654c	ea000001	 b           |$LN85@CommandCom|
  06550		 |$LN84@CommandCom|
  06550	e3a03000	 mov         r3, #0
  06554	e50b3040	 str         r3, [r11, #-0x40]
  06558		 |$LN85@CommandCom|

; 2890 :                 status = SD_API_STATUS_DATA_ERROR;

  06558	e3a03133	 mov         r3, #0x33, 2
  0655c	e50b30ec	 str         r3, [r11, #-0xEC]

; 2891 :                 goto TRANSFER_DONE;

  06560	ea00016a	 b           |$TRANSFER_DONE$43453|

; 2892 :             }
; 2893 :             else

  06564	ea000098	 b           |$LN29@CommandCom|
  06568		 |$LN31@CommandCom|

; 2894 :             {
; 2895 : #ifdef DEBUG
; 2896 :                 DWORD dwTemp = 0;

  06568	e3a03000	 mov         r3, #0
  0656c	e50b30d8	 str         r3, [r11, #-0xD8]
  06570		 |$LN28@CommandCom|

; 2897 :                 while( dwTemp < cbTransfer && (dwTemp < (HEXBUFSIZE / 2 - 1) ) )

  06570	e51b20d8	 ldr         r2, [r11, #-0xD8]
  06574	e51b30e4	 ldr         r3, [r11, #-0xE4]
  06578	e1520003	 cmp         r2, r3
  0657c	2a00007e	 bcs         |$LN27@CommandCom|
  06580	e51b20d8	 ldr         r2, [r11, #-0xD8]
  06584	e3a03c01	 mov         r3, #1, 24
  06588	e38330ff	 orr         r3, r3, #0xFF
  0658c	e1520003	 cmp         r2, r3
  06590	2a000079	 bcs         |$LN27@CommandCom|

; 2898 :                 {
; 2899 :                     szHexBuf[dwTemp*2] = pRequest->pBlockBuffer[dwTemp] / 16;

  06594	e59b3004	 ldr         r3, [r11, #4]
  06598	e2833048	 add         r3, r3, #0x48
  0659c	e5932000	 ldr         r2, [r3]
  065a0	e51b30d8	 ldr         r3, [r11, #-0xD8]
  065a4	e0823003	 add         r3, r2, r3
  065a8	e5d33000	 ldrb        r3, [r3]
  065ac	e1a01003	 mov         r1, r3
  065b0	e3a00010	 mov         r0, #0x10
  065b4	eb000000	 bl          __rt_sdiv
  065b8	e1a00c00	 mov         r0, r0, lsl #24
  065bc	e1a00c40	 mov         r0, r0, asr #24
  065c0	e51b10d8	 ldr         r1, [r11, #-0xD8]
  065c4	e3a03002	 mov         r3, #2
  065c8	e0020391	 mul         r2, r1, r3
  065cc	e59f3770	 ldr         r3, [pc, #0x770]
  065d0	e0833002	 add         r3, r3, r2
  065d4	e5c30000	 strb        r0, [r3]

; 2900 :                     szHexBuf[dwTemp*2+1] = pRequest->pBlockBuffer[dwTemp] % 16;

  065d8	e59b3004	 ldr         r3, [r11, #4]
  065dc	e2833048	 add         r3, r3, #0x48
  065e0	e5932000	 ldr         r2, [r3]
  065e4	e51b30d8	 ldr         r3, [r11, #-0xD8]
  065e8	e0823003	 add         r3, r2, r3
  065ec	e5d33000	 ldrb        r3, [r3]
  065f0	e1a01003	 mov         r1, r3
  065f4	e3a00010	 mov         r0, #0x10
  065f8	eb000000	 bl          __rt_sdiv
  065fc	e1a01c01	 mov         r1, r1, lsl #24
  06600	e1a01c41	 mov         r1, r1, asr #24
  06604	e51b20d8	 ldr         r2, [r11, #-0xD8]
  06608	e3a03002	 mov         r3, #2
  0660c	e0030392	 mul         r3, r2, r3
  06610	e2832001	 add         r2, r3, #1
  06614	e59f3728	 ldr         r3, [pc, #0x728]
  06618	e0833002	 add         r3, r3, r2
  0661c	e5c31000	 strb        r1, [r3]

; 2901 : 
; 2902 :                     if( szHexBuf[dwTemp*2] < 10 )

  06620	e51b10d8	 ldr         r1, [r11, #-0xD8]
  06624	e3a03002	 mov         r3, #2
  06628	e0020391	 mul         r2, r1, r3
  0662c	e59f3710	 ldr         r3, [pc, #0x710]
  06630	e0833002	 add         r3, r3, r2
  06634	e1d330d0	 ldrsb       r3, [r3]
  06638	e353000a	 cmp         r3, #0xA
  0663c	aa00000f	 bge         |$LN26@CommandCom|

; 2903 :                         szHexBuf[dwTemp*2] += '0';

  06640	e51b10d8	 ldr         r1, [r11, #-0xD8]
  06644	e3a03002	 mov         r3, #2
  06648	e0020391	 mul         r2, r1, r3
  0664c	e59f36f0	 ldr         r3, [pc, #0x6F0]
  06650	e0833002	 add         r3, r3, r2
  06654	e1d330d0	 ldrsb       r3, [r3]
  06658	e2830030	 add         r0, r3, #0x30
  0665c	e51b10d8	 ldr         r1, [r11, #-0xD8]
  06660	e3a03002	 mov         r3, #2
  06664	e0020391	 mul         r2, r1, r3
  06668	e59f36d4	 ldr         r3, [pc, #0x6D4]
  0666c	e0832002	 add         r2, r3, r2
  06670	e1a03c00	 mov         r3, r0, lsl #24
  06674	e1a03c43	 mov         r3, r3, asr #24
  06678	e5c23000	 strb        r3, [r2]

; 2904 :                     else

  0667c	ea00000e	 b           |$LN25@CommandCom|
  06680		 |$LN26@CommandCom|

; 2905 :                         szHexBuf[dwTemp*2] += 'a' - 10;

  06680	e51b10d8	 ldr         r1, [r11, #-0xD8]
  06684	e3a03002	 mov         r3, #2
  06688	e0020391	 mul         r2, r1, r3
  0668c	e59f36b0	 ldr         r3, [pc, #0x6B0]
  06690	e0833002	 add         r3, r3, r2
  06694	e1d330d0	 ldrsb       r3, [r3]
  06698	e2830057	 add         r0, r3, #0x57
  0669c	e51b10d8	 ldr         r1, [r11, #-0xD8]
  066a0	e3a03002	 mov         r3, #2
  066a4	e0020391	 mul         r2, r1, r3
  066a8	e59f3694	 ldr         r3, [pc, #0x694]
  066ac	e0832002	 add         r2, r3, r2
  066b0	e1a03c00	 mov         r3, r0, lsl #24
  066b4	e1a03c43	 mov         r3, r3, asr #24
  066b8	e5c23000	 strb        r3, [r2]
  066bc		 |$LN25@CommandCom|

; 2906 : 
; 2907 :                     if( szHexBuf[dwTemp*2+1] < 10 )

  066bc	e51b20d8	 ldr         r2, [r11, #-0xD8]
  066c0	e3a03002	 mov         r3, #2
  066c4	e0030392	 mul         r3, r2, r3
  066c8	e2832001	 add         r2, r3, #1
  066cc	e59f3670	 ldr         r3, [pc, #0x670]
  066d0	e0833002	 add         r3, r3, r2
  066d4	e1d330d0	 ldrsb       r3, [r3]
  066d8	e353000a	 cmp         r3, #0xA
  066dc	aa000011	 bge         |$LN24@CommandCom|

; 2908 :                         szHexBuf[dwTemp*2+1] += '0';

  066e0	e51b20d8	 ldr         r2, [r11, #-0xD8]
  066e4	e3a03002	 mov         r3, #2
  066e8	e0030392	 mul         r3, r2, r3
  066ec	e2832001	 add         r2, r3, #1
  066f0	e59f364c	 ldr         r3, [pc, #0x64C]
  066f4	e0833002	 add         r3, r3, r2
  066f8	e1d330d0	 ldrsb       r3, [r3]
  066fc	e2831030	 add         r1, r3, #0x30
  06700	e51b20d8	 ldr         r2, [r11, #-0xD8]
  06704	e3a03002	 mov         r3, #2
  06708	e0030392	 mul         r3, r2, r3
  0670c	e2832001	 add         r2, r3, #1
  06710	e59f362c	 ldr         r3, [pc, #0x62C]
  06714	e0832002	 add         r2, r3, r2
  06718	e1a03c01	 mov         r3, r1, lsl #24
  0671c	e1a03c43	 mov         r3, r3, asr #24
  06720	e5c23000	 strb        r3, [r2]

; 2909 :                     else

  06724	ea000010	 b           |$LN23@CommandCom|
  06728		 |$LN24@CommandCom|

; 2910 :                         szHexBuf[dwTemp*2+1] += 'a' - 10;

  06728	e51b20d8	 ldr         r2, [r11, #-0xD8]
  0672c	e3a03002	 mov         r3, #2
  06730	e0030392	 mul         r3, r2, r3
  06734	e2832001	 add         r2, r3, #1
  06738	e59f3604	 ldr         r3, [pc, #0x604]
  0673c	e0833002	 add         r3, r3, r2
  06740	e1d330d0	 ldrsb       r3, [r3]
  06744	e2831057	 add         r1, r3, #0x57
  06748	e51b20d8	 ldr         r2, [r11, #-0xD8]
  0674c	e3a03002	 mov         r3, #2
  06750	e0030392	 mul         r3, r2, r3
  06754	e2832001	 add         r2, r3, #1
  06758	e59f35e4	 ldr         r3, [pc, #0x5E4]
  0675c	e0832002	 add         r2, r3, r2
  06760	e1a03c01	 mov         r3, r1, lsl #24
  06764	e1a03c43	 mov         r3, r3, asr #24
  06768	e5c23000	 strb        r3, [r2]
  0676c		 |$LN23@CommandCom|

; 2911 : 
; 2912 :                     dwTemp++;

  0676c	e51b30d8	 ldr         r3, [r11, #-0xD8]
  06770	e2833001	 add         r3, r3, #1
  06774	e50b30d8	 str         r3, [r11, #-0xD8]

; 2913 :                 }

  06778	eaffff7c	 b           |$LN28@CommandCom|
  0677c		 |$LN27@CommandCom|

; 2914 :                 szHexBuf[dwTemp*2] = 0;

  0677c	e51b10d8	 ldr         r1, [r11, #-0xD8]
  06780	e3a03002	 mov         r3, #2
  06784	e0020391	 mul         r2, r1, r3
  06788	e59f35b4	 ldr         r3, [pc, #0x5B4]
  0678c	e0832002	 add         r2, r3, r2
  06790	e3a03000	 mov         r3, #0
  06794	e5c23000	 strb        r3, [r2]

; 2915 :                 DEBUGMSG (SHC_SDBUS_INTERACT_ZONE,(TEXT("PollingReceive succesfully received %d bytes\r\n                                     {%S}\r\n"),
; 2916 :                     cbTransfer, szHexBuf ));

  06798	e59f3594	 ldr         r3, [pc, #0x594]
  0679c	e5933440	 ldr         r3, [r3, #0x440]
  067a0	e3130040	 tst         r3, #0x40
  067a4	0a000006	 beq         |$LN86@CommandCom|
  067a8	e59f2594	 ldr         r2, [pc, #0x594]
  067ac	e51b10e4	 ldr         r1, [r11, #-0xE4]
  067b0	e59f0598	 ldr         r0, [pc, #0x598]
  067b4	eb000000	 bl          NKDbgPrintfW
  067b8	e3a03001	 mov         r3, #1
  067bc	e50b303c	 str         r3, [r11, #-0x3C]
  067c0	ea000001	 b           |$LN87@CommandCom|
  067c4		 |$LN86@CommandCom|
  067c4	e3a03000	 mov         r3, #0
  067c8	e50b303c	 str         r3, [r11, #-0x3C]
  067cc		 |$LN87@CommandCom|
  067cc		 |$LN29@CommandCom|

; 2917 : #ifdef ENABLE_RETAIL_OUTPUT
; 2918 :                 RETAILMSG (1,(TEXT("PollingReceive succesfully received %d bytes\r\n                                     {%S}\r\n"),
; 2919 :                     cbTransfer, szHexBuf ));
; 2920 : #endif
; 2921 : #endif
; 2922 :             }
; 2923 :             break;

  067cc	ea0000c5	 b           |$LN34@CommandCom|
  067d0		 |$LN22@CommandCom|

; 2924 : 
; 2925 :         case SD_WRITE:
; 2926 :             {
; 2927 : #ifdef DEBUG
; 2928 :                 DWORD dwTemp = 0;

  067d0	e3a03000	 mov         r3, #0
  067d4	e50b30d4	 str         r3, [r11, #-0xD4]
  067d8		 |$LN21@CommandCom|

; 2929 :                 while( dwTemp < cbTransfer && (dwTemp < (HEXBUFSIZE / 2 - 1) ) )

  067d8	e51b20d4	 ldr         r2, [r11, #-0xD4]
  067dc	e51b30e4	 ldr         r3, [r11, #-0xE4]
  067e0	e1520003	 cmp         r2, r3
  067e4	2a00007e	 bcs         |$LN20@CommandCom|
  067e8	e51b20d4	 ldr         r2, [r11, #-0xD4]
  067ec	e3a03c01	 mov         r3, #1, 24
  067f0	e38330ff	 orr         r3, r3, #0xFF
  067f4	e1520003	 cmp         r2, r3
  067f8	2a000079	 bcs         |$LN20@CommandCom|

; 2930 :                 {
; 2931 :                     szHexBuf[dwTemp*2] = pRequest->pBlockBuffer[dwTemp] / 16;

  067fc	e59b3004	 ldr         r3, [r11, #4]
  06800	e2833048	 add         r3, r3, #0x48
  06804	e5932000	 ldr         r2, [r3]
  06808	e51b30d4	 ldr         r3, [r11, #-0xD4]
  0680c	e0823003	 add         r3, r2, r3
  06810	e5d33000	 ldrb        r3, [r3]
  06814	e1a01003	 mov         r1, r3
  06818	e3a00010	 mov         r0, #0x10
  0681c	eb000000	 bl          __rt_sdiv
  06820	e1a00c00	 mov         r0, r0, lsl #24
  06824	e1a00c40	 mov         r0, r0, asr #24
  06828	e51b10d4	 ldr         r1, [r11, #-0xD4]
  0682c	e3a03002	 mov         r3, #2
  06830	e0020391	 mul         r2, r1, r3
  06834	e59f3508	 ldr         r3, [pc, #0x508]
  06838	e0833002	 add         r3, r3, r2
  0683c	e5c30000	 strb        r0, [r3]

; 2932 :                     szHexBuf[dwTemp*2+1] = pRequest->pBlockBuffer[dwTemp] % 16;

  06840	e59b3004	 ldr         r3, [r11, #4]
  06844	e2833048	 add         r3, r3, #0x48
  06848	e5932000	 ldr         r2, [r3]
  0684c	e51b30d4	 ldr         r3, [r11, #-0xD4]
  06850	e0823003	 add         r3, r2, r3
  06854	e5d33000	 ldrb        r3, [r3]
  06858	e1a01003	 mov         r1, r3
  0685c	e3a00010	 mov         r0, #0x10
  06860	eb000000	 bl          __rt_sdiv
  06864	e1a01c01	 mov         r1, r1, lsl #24
  06868	e1a01c41	 mov         r1, r1, asr #24
  0686c	e51b20d4	 ldr         r2, [r11, #-0xD4]
  06870	e3a03002	 mov         r3, #2
  06874	e0030392	 mul         r3, r2, r3
  06878	e2832001	 add         r2, r3, #1
  0687c	e59f34c0	 ldr         r3, [pc, #0x4C0]
  06880	e0833002	 add         r3, r3, r2
  06884	e5c31000	 strb        r1, [r3]

; 2933 : 
; 2934 :                     if( szHexBuf[dwTemp*2] < 10 )

  06888	e51b10d4	 ldr         r1, [r11, #-0xD4]
  0688c	e3a03002	 mov         r3, #2
  06890	e0020391	 mul         r2, r1, r3
  06894	e59f34a8	 ldr         r3, [pc, #0x4A8]
  06898	e0833002	 add         r3, r3, r2
  0689c	e1d330d0	 ldrsb       r3, [r3]
  068a0	e353000a	 cmp         r3, #0xA
  068a4	aa00000f	 bge         |$LN19@CommandCom|

; 2935 :                         szHexBuf[dwTemp*2] += '0';

  068a8	e51b10d4	 ldr         r1, [r11, #-0xD4]
  068ac	e3a03002	 mov         r3, #2
  068b0	e0020391	 mul         r2, r1, r3
  068b4	e59f3488	 ldr         r3, [pc, #0x488]
  068b8	e0833002	 add         r3, r3, r2
  068bc	e1d330d0	 ldrsb       r3, [r3]
  068c0	e2830030	 add         r0, r3, #0x30
  068c4	e51b10d4	 ldr         r1, [r11, #-0xD4]
  068c8	e3a03002	 mov         r3, #2
  068cc	e0020391	 mul         r2, r1, r3
  068d0	e59f346c	 ldr         r3, [pc, #0x46C]
  068d4	e0832002	 add         r2, r3, r2
  068d8	e1a03c00	 mov         r3, r0, lsl #24
  068dc	e1a03c43	 mov         r3, r3, asr #24
  068e0	e5c23000	 strb        r3, [r2]

; 2936 :                     else

  068e4	ea00000e	 b           |$LN18@CommandCom|
  068e8		 |$LN19@CommandCom|

; 2937 :                         szHexBuf[dwTemp*2] += 'a' - 10;

  068e8	e51b10d4	 ldr         r1, [r11, #-0xD4]
  068ec	e3a03002	 mov         r3, #2
  068f0	e0020391	 mul         r2, r1, r3
  068f4	e59f3448	 ldr         r3, [pc, #0x448]
  068f8	e0833002	 add         r3, r3, r2
  068fc	e1d330d0	 ldrsb       r3, [r3]
  06900	e2830057	 add         r0, r3, #0x57
  06904	e51b10d4	 ldr         r1, [r11, #-0xD4]
  06908	e3a03002	 mov         r3, #2
  0690c	e0020391	 mul         r2, r1, r3
  06910	e59f342c	 ldr         r3, [pc, #0x42C]
  06914	e0832002	 add         r2, r3, r2
  06918	e1a03c00	 mov         r3, r0, lsl #24
  0691c	e1a03c43	 mov         r3, r3, asr #24
  06920	e5c23000	 strb        r3, [r2]
  06924		 |$LN18@CommandCom|

; 2938 : 
; 2939 :                     if( szHexBuf[dwTemp*2+1] < 10 )

  06924	e51b20d4	 ldr         r2, [r11, #-0xD4]
  06928	e3a03002	 mov         r3, #2
  0692c	e0030392	 mul         r3, r2, r3
  06930	e2832001	 add         r2, r3, #1
  06934	e59f3408	 ldr         r3, [pc, #0x408]
  06938	e0833002	 add         r3, r3, r2
  0693c	e1d330d0	 ldrsb       r3, [r3]
  06940	e353000a	 cmp         r3, #0xA
  06944	aa000011	 bge         |$LN17@CommandCom|

; 2940 :                         szHexBuf[dwTemp*2+1] += '0';

  06948	e51b20d4	 ldr         r2, [r11, #-0xD4]
  0694c	e3a03002	 mov         r3, #2
  06950	e0030392	 mul         r3, r2, r3
  06954	e2832001	 add         r2, r3, #1
  06958	e59f33e4	 ldr         r3, [pc, #0x3E4]
  0695c	e0833002	 add         r3, r3, r2
  06960	e1d330d0	 ldrsb       r3, [r3]
  06964	e2831030	 add         r1, r3, #0x30
  06968	e51b20d4	 ldr         r2, [r11, #-0xD4]
  0696c	e3a03002	 mov         r3, #2
  06970	e0030392	 mul         r3, r2, r3
  06974	e2832001	 add         r2, r3, #1
  06978	e59f33c4	 ldr         r3, [pc, #0x3C4]
  0697c	e0832002	 add         r2, r3, r2
  06980	e1a03c01	 mov         r3, r1, lsl #24
  06984	e1a03c43	 mov         r3, r3, asr #24
  06988	e5c23000	 strb        r3, [r2]

; 2941 :                     else

  0698c	ea000010	 b           |$LN16@CommandCom|
  06990		 |$LN17@CommandCom|

; 2942 :                         szHexBuf[dwTemp*2+1] += 'a' - 10;

  06990	e51b20d4	 ldr         r2, [r11, #-0xD4]
  06994	e3a03002	 mov         r3, #2
  06998	e0030392	 mul         r3, r2, r3
  0699c	e2832001	 add         r2, r3, #1
  069a0	e59f339c	 ldr         r3, [pc, #0x39C]
  069a4	e0833002	 add         r3, r3, r2
  069a8	e1d330d0	 ldrsb       r3, [r3]
  069ac	e2831057	 add         r1, r3, #0x57
  069b0	e51b20d4	 ldr         r2, [r11, #-0xD4]
  069b4	e3a03002	 mov         r3, #2
  069b8	e0030392	 mul         r3, r2, r3
  069bc	e2832001	 add         r2, r3, #1
  069c0	e59f337c	 ldr         r3, [pc, #0x37C]
  069c4	e0832002	 add         r2, r3, r2
  069c8	e1a03c01	 mov         r3, r1, lsl #24
  069cc	e1a03c43	 mov         r3, r3, asr #24
  069d0	e5c23000	 strb        r3, [r2]
  069d4		 |$LN16@CommandCom|

; 2943 : 
; 2944 :                     dwTemp++;

  069d4	e51b30d4	 ldr         r3, [r11, #-0xD4]
  069d8	e2833001	 add         r3, r3, #1
  069dc	e50b30d4	 str         r3, [r11, #-0xD4]

; 2945 :                 }

  069e0	eaffff7c	 b           |$LN21@CommandCom|
  069e4		 |$LN20@CommandCom|

; 2946 :                 szHexBuf[dwTemp*2] = 0;

  069e4	e51b10d4	 ldr         r1, [r11, #-0xD4]
  069e8	e3a03002	 mov         r3, #2
  069ec	e0020391	 mul         r2, r1, r3
  069f0	e59f334c	 ldr         r3, [pc, #0x34C]
  069f4	e0832002	 add         r2, r3, r2
  069f8	e3a03000	 mov         r3, #0
  069fc	e5c23000	 strb        r3, [r2]
  06a00		 |$LN112@CommandCom|

; 2947 : #endif
; 2948 :             }
; 2949 : 
; 2950 :                 __try {
; 2951 :                        fRet = SDITransmit(pRequest->pBlockBuffer, cbTransfer, FastPathMode);

  06a00	e51b30e0	 ldr         r3, [r11, #-0xE0]
  06a04	e51b20e4	 ldr         r2, [r11, #-0xE4]
  06a08	e59b1004	 ldr         r1, [r11, #4]
  06a0c	e2811048	 add         r1, r1, #0x48
  06a10	e5911000	 ldr         r1, [r1]
  06a14	e59b0000	 ldr         r0, [r11]
  06a18	eb000000	 bl          |?SDITransmit@CSDIOControllerBase@@QAAHPAEKH@Z|
  06a1c	e50b0038	 str         r0, [r11, #-0x38]
  06a20	e51b3038	 ldr         r3, [r11, #-0x38]
  06a24	e50b30dc	 str         r3, [r11, #-0xDC]
  06a28		 |$LN113@CommandCom|

; 2952 :                     }

  06a28	ea000002	 b           |$LN114@CommandCom|
  06a2c		 |$LN109@CommandCom|

; 2954 :                     fRet = FALSE;

  06a2c	e3a03000	 mov         r3, #0
  06a30	e50b30dc	 str         r3, [r11, #-0xDC]
  06a34	eaffffff	 b           |$LN114@CommandCom|
  06a38		 |$LN114@CommandCom|

; 2955 :                 }
; 2956 : 
; 2957 :             if( !fRet )

  06a38	e51b30dc	 ldr         r3, [r11, #-0xDC]
  06a3c	e3530000	 cmp         r3, #0
  06a40	1a00001b	 bne         |$LN14@CommandCom|

; 2958 :             {
; 2959 :                 DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDHCBusRequestHandler() - SDIPollingTransmit() failed\r\n")));

  06a44	e59f32e8	 ldr         r3, [pc, #0x2E8]
  06a48	e5933440	 ldr         r3, [r3, #0x440]
  06a4c	e3130902	 tst         r3, #2, 18
  06a50	0a000004	 beq         |$LN88@CommandCom|
  06a54	e59f02f0	 ldr         r0, [pc, #0x2F0]
  06a58	eb000000	 bl          NKDbgPrintfW
  06a5c	e3a03001	 mov         r3, #1
  06a60	e50b302c	 str         r3, [r11, #-0x2C]
  06a64	ea000001	 b           |$LN89@CommandCom|
  06a68		 |$LN88@CommandCom|
  06a68	e3a03000	 mov         r3, #0
  06a6c	e50b302c	 str         r3, [r11, #-0x2C]
  06a70		 |$LN89@CommandCom|

; 2960 :                 DEBUGMSG (SHC_SDBUS_INTERACT_ZONE,(TEXT("PollingTransmit failed to send %d bytes\r\n                                     {%S}\r\n"),
; 2961 :                     cbTransfer, szHexBuf ));

  06a70	e59f32bc	 ldr         r3, [pc, #0x2BC]
  06a74	e5933440	 ldr         r3, [r3, #0x440]
  06a78	e3130040	 tst         r3, #0x40
  06a7c	0a000006	 beq         |$LN90@CommandCom|
  06a80	e59f22bc	 ldr         r2, [pc, #0x2BC]
  06a84	e51b10e4	 ldr         r1, [r11, #-0xE4]
  06a88	e59f02b8	 ldr         r0, [pc, #0x2B8]
  06a8c	eb000000	 bl          NKDbgPrintfW
  06a90	e3a03001	 mov         r3, #1
  06a94	e50b3028	 str         r3, [r11, #-0x28]
  06a98	ea000001	 b           |$LN91@CommandCom|
  06a9c		 |$LN90@CommandCom|
  06a9c	e3a03000	 mov         r3, #0
  06aa0	e50b3028	 str         r3, [r11, #-0x28]
  06aa4		 |$LN91@CommandCom|

; 2962 : #ifdef ENABLE_RETAIL_OUTPUT
; 2963 :                 RETAILMSG (1,(TEXT("PollingTransmit failed to send %d bytes\r\n                                     {%S}\r\n"),
; 2964 :                     cbTransfer, szHexBuf ));
; 2965 : #endif
; 2966 :                 status = SD_API_STATUS_DATA_ERROR;

  06aa4	e3a03133	 mov         r3, #0x33, 2
  06aa8	e50b30ec	 str         r3, [r11, #-0xEC]

; 2967 :                 goto TRANSFER_DONE;

  06aac	ea000017	 b           |$TRANSFER_DONE$43453|

; 2968 :             }
; 2969 :             else

  06ab0	ea00000c	 b           |$LN12@CommandCom|
  06ab4		 |$LN14@CommandCom|

; 2970 :             {
; 2971 :                 DEBUGMSG (SHC_SDBUS_INTERACT_ZONE,(TEXT("PollingTransmit succesfully sent %d bytes\r\n                                     {%S}\r\n"),
; 2972 :                     cbTransfer, szHexBuf ));

  06ab4	e59f3278	 ldr         r3, [pc, #0x278]
  06ab8	e5933440	 ldr         r3, [r3, #0x440]
  06abc	e3130040	 tst         r3, #0x40
  06ac0	0a000006	 beq         |$LN92@CommandCom|
  06ac4	e59f2278	 ldr         r2, [pc, #0x278]
  06ac8	e51b10e4	 ldr         r1, [r11, #-0xE4]
  06acc	e59f026c	 ldr         r0, [pc, #0x26C]
  06ad0	eb000000	 bl          NKDbgPrintfW
  06ad4	e3a03001	 mov         r3, #1
  06ad8	e50b3024	 str         r3, [r11, #-0x24]
  06adc	ea000001	 b           |$LN93@CommandCom|
  06ae0		 |$LN92@CommandCom|
  06ae0	e3a03000	 mov         r3, #0
  06ae4	e50b3024	 str         r3, [r11, #-0x24]
  06ae8		 |$LN93@CommandCom|
  06ae8		 |$LN12@CommandCom|
  06ae8		 |$LN34@CommandCom|

; 2973 : #ifdef ENABLE_RETAIL_OUTPUT
; 2974 :                 RETAILMSG (1,(TEXT("PollingTransmit succesfully sent %d bytes\r\n                                     {%S}\r\n"),
; 2975 :                     cbTransfer, szHexBuf ));
; 2976 : #endif
; 2977 :             }
; 2978 : 
; 2979 :             break;
; 2980 :         }
; 2981 :         if(!m_fCardPresent)

  06ae8	e59b3000	 ldr         r3, [r11]
  06aec	e28330f0	 add         r3, r3, #0xF0
  06af0	e5933000	 ldr         r3, [r3]
  06af4	e3530000	 cmp         r3, #0
  06af8	1a000002	 bne         |$LN11@CommandCom|

; 2982 :             status = SD_API_STATUS_DEVICE_REMOVED;

  06afc	e3a03147	 mov         r3, #0x47, 2
  06b00	e50b30ec	 str         r3, [r11, #-0xEC]

; 2983 :         else

  06b04	ea000001	 b           |$LN10@CommandCom|
  06b08		 |$LN11@CommandCom|

; 2984 :             status = SD_API_STATUS_SUCCESS;

  06b08	e3a03000	 mov         r3, #0
  06b0c	e50b30ec	 str         r3, [r11, #-0xEC]
  06b10		 |$LN10@CommandCom|
  06b10		 |$LN36@CommandCom|
  06b10		 |$TRANSFER_DONE$43453|

; 2985 :     }
; 2986 : 
; 2987 : TRANSFER_DONE:
; 2988 : 
; 2989 :     if( status == SD_API_STATUS_SUCCESS )

  06b10	e51b30ec	 ldr         r3, [r11, #-0xEC]
  06b14	e3530000	 cmp         r3, #0
  06b18	1a00003f	 bne         |$LN9@CommandCom|

; 2990 :     {
; 2991 :         if( m_fAppCmdMode )

  06b1c	e59b3000	 ldr         r3, [r11]
  06b20	e2833f45	 add         r3, r3, #0x45, 30
  06b24	e5933000	 ldr         r3, [r3]
  06b28	e3530000	 cmp         r3, #0
  06b2c	0a00000f	 beq         |$LN8@CommandCom|

; 2992 :         {
; 2993 :             m_fAppCmdMode = FALSE;

  06b30	e59b3000	 ldr         r3, [r11]
  06b34	e2832f45	 add         r2, r3, #0x45, 30
  06b38	e3a03000	 mov         r3, #0
  06b3c	e5823000	 str         r3, [r2]

; 2994 :             DEBUGMSG(SHC_SEND_ZONE, (TEXT("SDHCBusRequestHandler - Switched to Standard Command Mode\n")));

  06b40	e59f31ec	 ldr         r3, [pc, #0x1EC]
  06b44	e5933440	 ldr         r3, [r3, #0x440]
  06b48	e3130002	 tst         r3, #2
  06b4c	0a000004	 beq         |$LN94@CommandCom|
  06b50	e59f01e4	 ldr         r0, [pc, #0x1E4]
  06b54	eb000000	 bl          NKDbgPrintfW
  06b58	e3a03001	 mov         r3, #1
  06b5c	e50b3020	 str         r3, [r11, #-0x20]
  06b60	ea000001	 b           |$LN95@CommandCom|
  06b64		 |$LN94@CommandCom|
  06b64	e3a03000	 mov         r3, #0
  06b68	e50b3020	 str         r3, [r11, #-0x20]
  06b6c		 |$LN95@CommandCom|

; 2995 :         }
; 2996 :         else if( pRequest && pRequest->CommandCode == 55 )

  06b6c	ea000016	 b           |$LN7@CommandCom|
  06b70		 |$LN8@CommandCom|
  06b70	e59b3004	 ldr         r3, [r11, #4]
  06b74	e3530000	 cmp         r3, #0
  06b78	0a000013	 beq         |$LN6@CommandCom|
  06b7c	e59b3004	 ldr         r3, [r11, #4]
  06b80	e2833014	 add         r3, r3, #0x14
  06b84	e5d33000	 ldrb        r3, [r3]
  06b88	e3530037	 cmp         r3, #0x37
  06b8c	1a00000e	 bne         |$LN6@CommandCom|

; 2997 :         {
; 2998 :             m_fAppCmdMode = TRUE;

  06b90	e59b3000	 ldr         r3, [r11]
  06b94	e2832f45	 add         r2, r3, #0x45, 30
  06b98	e3a03001	 mov         r3, #1
  06b9c	e5823000	 str         r3, [r2]

; 2999 :             DEBUGMSG(SHC_SEND_ZONE, (TEXT("SDHCBusRequestHandler - Switched to Application Specific Command Mode\n")));

  06ba0	e59f318c	 ldr         r3, [pc, #0x18C]
  06ba4	e5933440	 ldr         r3, [r3, #0x440]
  06ba8	e3130002	 tst         r3, #2
  06bac	0a000004	 beq         |$LN96@CommandCom|
  06bb0	e59f0180	 ldr         r0, [pc, #0x180]
  06bb4	eb000000	 bl          NKDbgPrintfW
  06bb8	e3a03001	 mov         r3, #1
  06bbc	e50b301c	 str         r3, [r11, #-0x1C]
  06bc0	ea000001	 b           |$LN97@CommandCom|
  06bc4		 |$LN96@CommandCom|
  06bc4	e3a03000	 mov         r3, #0
  06bc8	e50b301c	 str         r3, [r11, #-0x1C]
  06bcc		 |$LN97@CommandCom|
  06bcc		 |$LN6@CommandCom|
  06bcc		 |$LN7@CommandCom|

; 3000 :         }
; 3001 : 
; 3002 :         if( pRequest->CommandCode == SD_CMD_MMC_SEND_OPCOND )

  06bcc	e59b3004	 ldr         r3, [r11, #4]
  06bd0	e2833014	 add         r3, r3, #0x14
  06bd4	e5d33000	 ldrb        r3, [r3]
  06bd8	e3530001	 cmp         r3, #1
  06bdc	1a00000e	 bne         |$LN5@CommandCom|

; 3003 :         {
; 3004 :             DEBUGMSG(SHC_SDBUS_INTERACT_ZONE, (TEXT("SendCommand: Card is recognized as a MMC\r\n") ) );

  06be0	e59f314c	 ldr         r3, [pc, #0x14C]
  06be4	e5933440	 ldr         r3, [r3, #0x440]
  06be8	e3130040	 tst         r3, #0x40
  06bec	0a000004	 beq         |$LN98@CommandCom|
  06bf0	e59f0138	 ldr         r0, [pc, #0x138]
  06bf4	eb000000	 bl          NKDbgPrintfW
  06bf8	e3a03001	 mov         r3, #1
  06bfc	e50b3018	 str         r3, [r11, #-0x18]
  06c00	ea000001	 b           |$LN99@CommandCom|
  06c04		 |$LN98@CommandCom|
  06c04	e3a03000	 mov         r3, #0
  06c08	e50b3018	 str         r3, [r11, #-0x18]
  06c0c		 |$LN99@CommandCom|

; 3005 :             m_fMMCMode = TRUE;

  06c0c	e59b3000	 ldr         r3, [r11]
  06c10	e28320f8	 add         r2, r3, #0xF8
  06c14	e3a03001	 mov         r3, #1
  06c18	e5823000	 str         r3, [r2]
  06c1c		 |$LN5@CommandCom|
  06c1c		 |$LN9@CommandCom|

; 3006 :         }
; 3007 :     }
; 3008 : 
; 3009 :     // Clear the MMC_STAT register
; 3010 :     MMC_STAT = Read_MMC_STAT();

  06c1c	e59b0000	 ldr         r0, [r11]
  06c20	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  06c24	e50b0014	 str         r0, [r11, #-0x14]
  06c28	e51b3014	 ldr         r3, [r11, #-0x14]
  06c2c	e50b30f8	 str         r3, [r11, #-0xF8]

; 3011 :     Write_MMC_STAT(MMC_STAT); 

  06c30	e51b10f8	 ldr         r1, [r11, #-0xF8]
  06c34	e59b0000	 ldr         r0, [r11]
  06c38	eb000000	 bl          |?Write_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|

; 3012 : 
; 3013 :     if( pRequest != NULL )

  06c3c	e59b3004	 ldr         r3, [r11, #4]
  06c40	e3530000	 cmp         r3, #0
  06c44	0a00001b	 beq         |$LN4@CommandCom|

; 3014 :     {
; 3015 :         if( MMC_STAT_OVERWRITE ) // clear the status error bits

  06c48	e51b30f0	 ldr         r3, [r11, #-0xF0]
  06c4c	e3530000	 cmp         r3, #0
  06c50	0a000018	 beq         |$LN3@CommandCom|

; 3016 :       {
; 3017 :         if( !SDCardDetect() )

  06c54	e59b3000	 ldr         r3, [r11]
  06c58	e5933000	 ldr         r3, [r3]
  06c5c	e283300c	 add         r3, r3, #0xC
  06c60	e59b0000	 ldr         r0, [r11]
  06c64	e5933000	 ldr         r3, [r3]
  06c68	e1a0e00f	 mov         lr, pc
  06c6c	e12fff13	 bx          r3
  06c70	e50b0010	 str         r0, [r11, #-0x10]
  06c74	e51b3010	 ldr         r3, [r11, #-0x10]
  06c78	e3530000	 cmp         r3, #0
  06c7c	1a00000d	 bne         |$LN2@CommandCom|

; 3018 :         {
; 3019 :           SetEvent( m_hCardDetectEvent );

  06c80	e59b3000	 ldr         r3, [r11]
  06c84	e2833e12	 add         r3, r3, #0x12, 28
  06c88	e5930000	 ldr         r0, [r3]
  06c8c	eb000000	 bl          SetEvent

; 3020 : #ifdef ENABLE_RETAIL_OUTPUT
; 3021 :           RETAILMSG(1, (L"CSDIOControllerBase::SDHCDIndicateBusRequestComplete(%x)\r\n", status));
; 3022 : #endif          
; 3023 :           // Update status according to the request type
; 3024 :                 if((status == SD_API_STATUS_SUCCESS) && (pRequest->SystemFlags & SD_FAST_PATH_AVAILABLE)) 

  06c90	e51b30ec	 ldr         r3, [r11, #-0xEC]
  06c94	e3530000	 cmp         r3, #0
  06c98	1a000006	 bne         |$LN1@CommandCom|
  06c9c	e59b3004	 ldr         r3, [r11, #4]
  06ca0	e283300c	 add         r3, r3, #0xC
  06ca4	e5933000	 ldr         r3, [r3]
  06ca8	e3130102	 tst         r3, #2, 2
  06cac	0a000001	 beq         |$LN1@CommandCom|

; 3025 :                 {
; 3026 :               status = SD_API_STATUS_FAST_PATH_SUCCESS;

  06cb0	e3a03002	 mov         r3, #2
  06cb4	e50b30ec	 str         r3, [r11, #-0xEC]
  06cb8		 |$LN1@CommandCom|
  06cb8		 |$LN2@CommandCom|
  06cb8		 |$LN3@CommandCom|
  06cb8		 |$LN4@CommandCom|

; 3027 :           }
; 3028 :         }
; 3029 :       }
; 3030 :         //SDHCDIndicateBusRequestComplete(m_pHCContext, pRequest, status);
; 3031 :     }
; 3032 : 
; 3033 :     return TRUE;

  06cb8	e3a03001	 mov         r3, #1
  06cbc	e50b309c	 str         r3, [r11, #-0x9C]
  06cc0		 |$LN100@CommandCom|

; 3034 : }

  06cc0	e51b009c	 ldr         r0, [r11, #-0x9C]
  06cc4	e24bd00c	 sub         sp, r11, #0xC
  06cc8	e89d6800	 ldmia       sp, {r11, sp, lr}
  06ccc	e12fff1e	 bx          lr

			 ENDP  ; |?CommandCompleteHandler_FastPath@CSDIOControllerBase@@QAAHPAU_SD_BUS_REQUEST@@@Z|, CSDIOControllerBase::CommandCompleteHandler_FastPath

  06cd0		 |$LN108@CommandCom|
  06cd0		 |$LN118@CommandCom|

; 2953 :                 __except(SDProcessException(GetExceptionInformation())) {

  06cd0	e52de004	 str         lr, [sp, #-4]!
  06cd4	e24bb008	 sub         r11, r11, #8
  06cd8	e24dd02c	 sub         sp, sp, #0x2C
  06cdc		 |$LN111@CommandCom|
  06cdc		 |$LN122@CommandCom|
  06cdc	e50b00cc	 str         r0, [r11, #-0xCC]
  06ce0	e51b30cc	 ldr         r3, [r11, #-0xCC]
  06ce4	e50b3034	 str         r3, [r11, #-0x34]
  06ce8	e51b0034	 ldr         r0, [r11, #-0x34]
  06cec	eb000000	 bl          SDProcessException
  06cf0	e50b0030	 str         r0, [r11, #-0x30]
  06cf4	e51b0030	 ldr         r0, [r11, #-0x30]
  06cf8		 |$LN110@CommandCom|
  06cf8	e28dd02c	 add         sp, sp, #0x2C
  06cfc	e49df004	 ldr         pc, [sp], #4
  06d00		 |$LN123@CommandCom|
  06d00		 |$LN101@CommandCom|
  06d00		 |$LN120@CommandCom|

; 2884 :                 __except(SDProcessException(GetExceptionInformation())) {

  06d00	e52de004	 str         lr, [sp, #-4]!
  06d04	e24bb008	 sub         r11, r11, #8
  06d08	e24dd02c	 sub         sp, sp, #0x2C
  06d0c		 |$LN104@CommandCom|
  06d0c		 |$LN124@CommandCom|
  06d0c	e50b00d0	 str         r0, [r11, #-0xD0]
  06d10	e51b30d0	 ldr         r3, [r11, #-0xD0]
  06d14	e50b3048	 str         r3, [r11, #-0x48]
  06d18	e51b0048	 ldr         r0, [r11, #-0x48]
  06d1c	eb000000	 bl          SDProcessException
  06d20	e50b0044	 str         r0, [r11, #-0x44]
  06d24	e51b0044	 ldr         r0, [r11, #-0x44]
  06d28		 |$LN103@CommandCom|
  06d28	e28dd02c	 add         sp, sp, #0x2C
  06d2c	e49df004	 ldr         pc, [sp], #4
  06d30		 |$LN126@CommandCom|
  06d30		 |$LN127@CommandCom|
  06d30	00000000	 DCD         |??_C@_1FG@NEHMPIAK@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AA?3?$AA?5?$AAC?$AAa?$AAr?$AAd?$AA?5?$AAi?$AAs?$AA?5?$AAr?$AAe?$AAc?$AAo?$AAg?$AAn?$AAi?$AAz?$AAe?$AAd?$AA?5@|
  06d34		 |$LN128@CommandCom|
  06d34	00000000	 DCD         |dpCurSettings|
  06d38		 |$LN129@CommandCom|
  06d38	00000000	 DCD         |??_C@_1IO@CPCPGHBI@?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AAS?$AAw?$AAi?$AAt?$AAc?$AAh?$AAe?$AAd@|
  06d3c		 |$LN130@CommandCom|
  06d3c	00000000	 DCD         |??_C@_1HG@JFAKCFAP@?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AAS?$AAw?$AAi?$AAt?$AAc?$AAh?$AAe?$AAd@|
  06d40		 |$LN131@CommandCom|
  06d40	00000000	 DCD         |??_C@_1KO@MPBOKACG@?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAs?$AAe?$AAn?$AAt@|
  06d44		 |$LN132@CommandCom|
  06d44	00000000	 DCD         |?szHexBuf@@3PADA|
  06d48		 |$LN133@CommandCom|
  06d48	00000000	 DCD         |??_C@_1KK@CCLJDBFA@?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAs?$AAe?$AAn?$AAd?$AA?5?$AA?$CF@|
  06d4c		 |$LN134@CommandCom|
  06d4c	00000000	 DCD         |??_C@_1HA@KAHOIMCL@?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl@|
  06d50		 |$LN135@CommandCom|
  06d50	00000000	 DCD         |??_C@_1LE@DLKFMMBP@?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi@|
  06d54		 |$LN136@CommandCom|
  06d54	00000000	 DCD         |??_C@_1GO@FGMBJCIP@?$AAS?$AAD?$AAH?$AAC?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl@|
  06d58		 |$LN137@CommandCom|
  06d58	00000000	 DCD         |??_C@_1IO@NDIJHNLB@?$AAS?$AAD?$AAH?$AAC?$AAD?$AAB?$AAu?$AAs?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr@|
  06d5c		 |$LN138@CommandCom|
  06d5c	00000000	 DCD         |??_C@_1HK@FCAFMKID@?$AAG?$AAe?$AAt?$AAC?$AAm?$AAd?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AAn?$AAo?$AA?5?$AAr?$AAe?$AAs?$AAp?$AAo@|
  06d60		 |$LN139@CommandCom|
  06d60	00000000	 DCD         |??_C@_1HG@KEDPGBBM@?$AAS?$AAD?$AAH?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAI?$AAs?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAG?$AAo?$AAt?$AA?5?$AAc@|
  06d64		 |$LN140@CommandCom|
  06d64	00000000	 DCD         |??_C@_1GI@BPLEJHBA@?$AAS?$AAD?$AAH?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAI?$AAs?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAG?$AAo?$AAt?$AA?5?$AAc@|
  06d68		 |$LN141@CommandCom|
  06d68	00000000	 DCD         |??_C@_1DE@BOENNIAA@?$AAC?$AAa?$AAr?$AAd?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAe?$AAd?$AA?5?$AAb?$AAu?$AAs?$AAy?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  06d6c		 |$LN142@CommandCom|
  06d6c	00000000	 DCD         |??_C@_1GA@HDMFHOJL@?$AAS?$AAD?$AAH?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAI?$AAs?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAa?$AAr?$AAd?$AA?5@|
  06d70		 |$LN143@CommandCom|
  06d70	00000000	 DCD         |??_C@_1FG@DJKLHFBG@?$AAS?$AAD?$AAH?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAI?$AAs?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAC?$AAa?$AAr?$AAd?$AA?5@|
  06d74		 |$LN144@CommandCom|
  06d74	00000000	 DCD         |??_C@_1GC@IHOKKCJA@?$AAC?$AAa?$AAr?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAb?$AAu?$AAs?$AAy?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAa?$AAf?$AAt?$AAe?$AAr?$AA?5?$AAc?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd@|
  06d78		 |$LN145@CommandCom|
  06d78	00000000	 DCD         |??_C@_1CIK@OGJHDHNJ@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?3?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAC?$AAo?$AAm?$AAp@|
  06d7c		 |$LN125@CommandCom|
  06d7c		 |$LN121@CommandCom|
	EXPORT	|?SetSlotPowerState@CSDIOControllerBase@@QAAXW4_CEDEVICE_POWER_STATE@@@Z| ; CSDIOControllerBase::SetSlotPowerState

  001a0			 AREA	 |.pdata|, PDATA
|$T46082| DCD	|$LN5@SetSlotPow|
	DCD	0x40000503
; Function compile flags: /Odtp

  06d7c			 AREA	 |.text|, CODE, ARM

  06d7c		 |?SetSlotPowerState@CSDIOControllerBase@@QAAXW4_CEDEVICE_POWER_STATE@@@Z| PROC ; CSDIOControllerBase::SetSlotPowerState

; 3039 : {

  06d7c		 |$LN5@SetSlotPow|
  06d7c	e1a0c00d	 mov         r12, sp
  06d80	e92d0003	 stmdb       sp!, {r0, r1}
  06d84	e92d5000	 stmdb       sp!, {r12, lr}
  06d88		 |$M46079|

; 3040 :     UNREFERENCED_PARAMETER(state);
; 3041 : }

  06d88	e89d6000	 ldmia       sp, {sp, lr}
  06d8c	e12fff1e	 bx          lr
  06d90		 |$M46080|

			 ENDP  ; |?SetSlotPowerState@CSDIOControllerBase@@QAAXW4_CEDEVICE_POWER_STATE@@@Z|, CSDIOControllerBase::SetSlotPowerState

	EXPORT	|?GetSlotPowerState@CSDIOControllerBase@@QAA?AW4_CEDEVICE_POWER_STATE@@XZ| ; CSDIOControllerBase::GetSlotPowerState

  001a8			 AREA	 |.pdata|, PDATA
|$T46088| DCD	|$LN5@GetSlotPow|
	DCD	0x40000a04
; Function compile flags: /Odtp

  06d90			 AREA	 |.text|, CODE, ARM

  06d90		 |?GetSlotPowerState@CSDIOControllerBase@@QAA?AW4_CEDEVICE_POWER_STATE@@XZ| PROC ; CSDIOControllerBase::GetSlotPowerState

; 3045 : {

  06d90		 |$LN5@GetSlotPow|
  06d90	e1a0c00d	 mov         r12, sp
  06d94	e92d0001	 stmdb       sp!, {r0}
  06d98	e92d5000	 stmdb       sp!, {r12, lr}
  06d9c	e24dd004	 sub         sp, sp, #4
  06da0		 |$M46085|

; 3046 :     return D3;

  06da0	e3a03003	 mov         r3, #3
  06da4	e58d3000	 str         r3, [sp]

; 3047 : }

  06da8	e59d0000	 ldr         r0, [sp]
  06dac	e28dd004	 add         sp, sp, #4
  06db0	e89d6000	 ldmia       sp, {sp, lr}
  06db4	e12fff1e	 bx          lr
  06db8		 |$M46086|

			 ENDP  ; |?GetSlotPowerState@CSDIOControllerBase@@QAA?AW4_CEDEVICE_POWER_STATE@@XZ|, CSDIOControllerBase::GetSlotPowerState

	EXPORT	|??_C@_1BEI@DADEBDNJ@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAG?$AAe?$AAt?$AAS@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@HGPPMKHE@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAG?$AAe?$AAt?$AAS@| [ DATA ] ; `string'
	EXPORT	|??_C@_1PE@GPLMNIKI@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAQ?$AAu?$AAe?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JG@MBGIOPGM@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAG?$AAe?$AAt?$AAW@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HK@FJOKOHJP@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAD?$AAi?$AAs?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HI@IPIOENME@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAE?$AAn?$AAa?$AAb@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@POGIMGHL@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAA?$AAc?$AAk?$AAS@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JG@KDBCLCAC@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAW?$AAa?$AAk?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JG@MFJCBOIL@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAG?$AAe?$AAt?$AAS@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JG@HLBJPBEH@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAS?$AAe?$AAt?$AAS@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IE@IPDCIIAP@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAS?$AAe?$AAt?$AAS@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BAM@FLHNGGHB@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAS?$AAe?$AAt?$AAS@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BAC@OJANHBPA@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAS?$AAe?$AAt?$AAS@| [ DATA ] ; `string'
	EXPORT	|??_C@_1NM@IKAFDIIO@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAS?$AAe?$AAt?$AAS@| [ DATA ] ; `string'
	EXPORT	|??_C@_1NC@KBEJEOGO@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAS?$AAe?$AAt?$AAS@| [ DATA ] ; `string'
	EXPORT	|?SDHCSlotOptionHandlerImpl@CSDIOControllerBase@@QAAJEW4_SD_SLOT_OPTION_CODE@@PAXK@Z| ; CSDIOControllerBase::SDHCSlotOptionHandlerImpl
	IMPORT	|memset|

  001b0			 AREA	 |.pdata|, PDATA
|$T46164| DCD	|$LN92@SDHCSlotOp|
	DCD	0x4002a104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BEI@DADEBDNJ@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAG?$AAe?$AAt?$AAS@| DCB "S"
	DCB	0x0, "H", 0x0, "C", 0x0, "S", 0x0, "D", 0x0, "S", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "-", 0x0, "S", 0x0, "D"
	DCB	0x0, "H", 0x0, "C", 0x0, "D", 0x0, "G", 0x0, "e", 0x0, "t"
	DCB	0x0, "S", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "I", 0x0, "n"
	DCB	0x0, "f", 0x0, "o", 0x0, "[", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, "]", 0x0, "(", 0x0, "s", 0x0, "l", 0x0, "o", 0x0, "t"
	DCB	0x0, "=", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "C"
	DCB	0x0, "a", 0x0, "p", 0x0, "a", 0x0, "b", 0x0, "i", 0x0, "l"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "e", 0x0, "s", 0x0, "="
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "V", 0x0, "o"
	DCB	0x0, "l", 0x0, "t", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "W"
	DCB	0x0, "i", 0x0, "n", 0x0, "d", 0x0, "o", 0x0, "w", 0x0, "M"
	DCB	0x0, "a", 0x0, "s", 0x0, "k", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " "
	DCB	0x0, "D", 0x0, "e", 0x0, "s", 0x0, "i", 0x0, "r", 0x0, "e"
	DCB	0x0, "d", 0x0, "V", 0x0, "o", 0x0, "l", 0x0, "t", 0x0, "a"
	DCB	0x0, "g", 0x0, "e", 0x0, "M", 0x0, "a", 0x0, "s", 0x0, "k"
	DCB	0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, ",", 0x0, " ", 0x0, "M", 0x0, "a", 0x0, "x"
	DCB	0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "R"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " "
	DCB	0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "U"
	DCB	0x0, "p", 0x0, "D", 0x0, "e", 0x0, "l", 0x0, "a", 0x0, "y"
	DCB	0x0, "=", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@HGPPMKHE@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAG?$AAe?$AAt?$AAS@| DCB "S"
	DCB	0x0, "H", 0x0, "C", 0x0, "S", 0x0, "D", 0x0, "S", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "-", 0x0, "S", 0x0, "D"
	DCB	0x0, "H", 0x0, "C", 0x0, "D", 0x0, "G", 0x0, "e", 0x0, "t"
	DCB	0x0, "S", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "I", 0x0, "n"
	DCB	0x0, "f", 0x0, "o", 0x0, "(", 0x0, "s", 0x0, "l", 0x0, "o"
	DCB	0x0, "t", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1PE@GPLMNIKI@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAQ?$AAu?$AAe?$AAr@| DCB "S"
	DCB	0x0, "H", 0x0, "C", 0x0, "S", 0x0, "D", 0x0, "S", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "-", 0x0, "S", 0x0, "D"
	DCB	0x0, "H", 0x0, "C", 0x0, "D", 0x0, "Q", 0x0, "u", 0x0, "e"
	DCB	0x0, "r", 0x0, "y", 0x0, "B", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, "C", 0x0, "a", 0x0, "p", 0x0, "a", 0x0, "b"
	DCB	0x0, "i", 0x0, "l", 0x0, "i", 0x0, "t", 0x0, "y", 0x0, "("
	DCB	0x0, "s", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "=", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "l", 0x0, "e", 0x0, "n", 0x0, "g", 0x0, "t"
	DCB	0x0, "h", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "b", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "k", 0x0, "s", 0x0, "=", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "w", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "e", 0x0, "l", 0x0, "e", 0x0, "n", 0x0, "g"
	DCB	0x0, "t", 0x0, "h", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "w", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e"
	DCB	0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "s"
	DCB	0x0, "=", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JG@MBGIOPGM@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAG?$AAe?$AAt?$AAW@| DCB "S"
	DCB	0x0, "H", 0x0, "C", 0x0, "S", 0x0, "D", 0x0, "S", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "-", 0x0, "S", 0x0, "D"
	DCB	0x0, "H", 0x0, "C", 0x0, "D", 0x0, "G", 0x0, "e", 0x0, "t"
	DCB	0x0, "W", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e", 0x0, "P"
	DCB	0x0, "r", 0x0, "o", 0x0, "t", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s"
	DCB	0x0, "(", 0x0, "s", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "="
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "p", 0x0, "r"
	DCB	0x0, "o", 0x0, "t", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@FJOKOHJP@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAD?$AAi?$AAs?$AAa@| DCB "S"
	DCB	0x0, "H", 0x0, "C", 0x0, "S", 0x0, "D", 0x0, "S", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "-", 0x0, "S", 0x0, "D"
	DCB	0x0, "H", 0x0, "C", 0x0, "D", 0x0, "D", 0x0, "i", 0x0, "s"
	DCB	0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, "S", 0x0, "D"
	DCB	0x0, "I", 0x0, "O", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "s"
	DCB	0x0, "(", 0x0, "s", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "="
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@IPIOENME@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAE?$AAn?$AAa?$AAb@| DCB "S"
	DCB	0x0, "H", 0x0, "C", 0x0, "S", 0x0, "D", 0x0, "S", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "-", 0x0, "S", 0x0, "D"
	DCB	0x0, "H", 0x0, "C", 0x0, "D", 0x0, "E", 0x0, "n", 0x0, "a"
	DCB	0x0, "b", 0x0, "l", 0x0, "e", 0x0, "S", 0x0, "D", 0x0, "I"
	DCB	0x0, "O", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "s", 0x0, "("
	DCB	0x0, "s", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "=", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@POGIMGHL@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAA?$AAc?$AAk?$AAS@| DCB "S"
	DCB	0x0, "H", 0x0, "C", 0x0, "S", 0x0, "D", 0x0, "S", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "-", 0x0, "S", 0x0, "D"
	DCB	0x0, "H", 0x0, "C", 0x0, "D", 0x0, "A", 0x0, "c", 0x0, "k"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p"
	DCB	0x0, "t", 0x0, "(", 0x0, "s", 0x0, "l", 0x0, "o", 0x0, "t"
	DCB	0x0, "=", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JG@KDBCLCAC@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAW?$AAa?$AAk?$AAe@| DCB "S"
	DCB	0x0, "H", 0x0, "C", 0x0, "S", 0x0, "D", 0x0, "S", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "-", 0x0, "S", 0x0, "D"
	DCB	0x0, "H", 0x0, "C", 0x0, "D", 0x0, "W", 0x0, "a", 0x0, "k"
	DCB	0x0, "e", 0x0, "O", 0x0, "n", 0x0, "S", 0x0, "D", 0x0, "I"
	DCB	0x0, "O", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "s", 0x0, "("
	DCB	0x0, "s", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "=", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "e", 0x0, "n", 0x0, "a"
	DCB	0x0, "b", 0x0, "l", 0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JG@MFJCBOIL@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAG?$AAe?$AAt?$AAS@| DCB "S"
	DCB	0x0, "H", 0x0, "C", 0x0, "S", 0x0, "D", 0x0, "S", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "-", 0x0, "S", 0x0, "D"
	DCB	0x0, "H", 0x0, "C", 0x0, "D", 0x0, "G", 0x0, "e", 0x0, "t"
	DCB	0x0, "S", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, "(", 0x0, "s", 0x0, "l", 0x0, "o"
	DCB	0x0, "t", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "p", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JG@HLBJPBEH@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAS?$AAe?$AAt?$AAS@| DCB "S"
	DCB	0x0, "H", 0x0, "C", 0x0, "S", 0x0, "D", 0x0, "S", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "-", 0x0, "S", 0x0, "D"
	DCB	0x0, "H", 0x0, "C", 0x0, "D", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "S", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, "(", 0x0, "s", 0x0, "l", 0x0, "o"
	DCB	0x0, "t", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "p", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@IPDCIIAP@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAS?$AAe?$AAt?$AAS@| DCB "S"
	DCB	0x0, "H", 0x0, "C", 0x0, "S", 0x0, "D", 0x0, "S", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "-", 0x0, "S", 0x0, "D"
	DCB	0x0, "H", 0x0, "C", 0x0, "D", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "S", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, "(", 0x0, "s", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "p", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r"
	DCB	0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BAM@FLHNGGHB@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAS?$AAe?$AAt?$AAS@| DCB "S"
	DCB	0x0, "H", 0x0, "C", 0x0, "S", 0x0, "D", 0x0, "S", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "-", 0x0, "S", 0x0, "D"
	DCB	0x0, "H", 0x0, "C", 0x0, "D", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "S", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "f", 0x0, "a", 0x0, "c"
	DCB	0x0, "e", 0x0, "E", 0x0, "x", 0x0, "(", 0x0, "o", 0x0, "u"
	DCB	0x0, "t", 0x0, ")", 0x0, "(", 0x0, "s", 0x0, "l", 0x0, "o"
	DCB	0x0, "t", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "c", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "r"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "=", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "4", 0x0, "b", 0x0, "i", 0x0, "t"
	DCB	0x0, "=", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "h"
	DCB	0x0, "i", 0x0, "g", 0x0, "h", 0x0, "s", 0x0, "p", 0x0, "e"
	DCB	0x0, "e", 0x0, "d", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "w", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e"
	DCB	0x0, "p", 0x0, "r", 0x0, "o", 0x0, "t", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "h", 0x0, "i", 0x0, "g", 0x0, "h", 0x0, "c", 0x0, "a"
	DCB	0x0, "p", 0x0, "a", 0x0, "c", 0x0, "i", 0x0, "t", 0x0, "y"
	DCB	0x0, "=", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BAC@OJANHBPA@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAS?$AAe?$AAt?$AAS@| DCB "S"
	DCB	0x0, "H", 0x0, "C", 0x0, "S", 0x0, "D", 0x0, "S", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "-", 0x0, "S", 0x0, "D"
	DCB	0x0, "H", 0x0, "C", 0x0, "D", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "S", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "f", 0x0, "a", 0x0, "c"
	DCB	0x0, "e", 0x0, "E", 0x0, "x", 0x0, "(", 0x0, "s", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "c", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k"
	DCB	0x0, "r", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "=", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "4", 0x0, "b", 0x0, "i"
	DCB	0x0, "t", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "h", 0x0, "i", 0x0, "g", 0x0, "h", 0x0, "s", 0x0, "p"
	DCB	0x0, "e", 0x0, "e", 0x0, "d", 0x0, "=", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "w", 0x0, "r", 0x0, "i", 0x0, "t"
	DCB	0x0, "e", 0x0, "p", 0x0, "r", 0x0, "o", 0x0, "t", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "h", 0x0, "i", 0x0, "g", 0x0, "h", 0x0, "c"
	DCB	0x0, "a", 0x0, "p", 0x0, "a", 0x0, "c", 0x0, "i", 0x0, "t"
	DCB	0x0, "y", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1NM@IKAFDIIO@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAS?$AAe?$AAt?$AAS@| DCB "S"
	DCB	0x0, "H", 0x0, "C", 0x0, "S", 0x0, "D", 0x0, "S", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "-", 0x0, "S", 0x0, "D"
	DCB	0x0, "H", 0x0, "C", 0x0, "D", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "S", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "f", 0x0, "a", 0x0, "c"
	DCB	0x0, "e", 0x0, "(", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, ")"
	DCB	0x0, "(", 0x0, "s", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "="
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "f", 0x0, "a", 0x0, "c"
	DCB	0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "c", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "k", 0x0, "r", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "w", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e", 0x0, "p"
	DCB	0x0, "r", 0x0, "o", 0x0, "t", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, "=", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1NC@KBEJEOGO@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAS?$AAe?$AAt?$AAS@| DCB "S"
	DCB	0x0, "H", 0x0, "C", 0x0, "S", 0x0, "D", 0x0, "S", 0x0, "l"
	DCB	0x0, "o", 0x0, "t", 0x0, "O", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "r", 0x0, "-", 0x0, "S", 0x0, "D"
	DCB	0x0, "H", 0x0, "C", 0x0, "D", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "S", 0x0, "l", 0x0, "o", 0x0, "t", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "f", 0x0, "a", 0x0, "c"
	DCB	0x0, "e", 0x0, "(", 0x0, "s", 0x0, "l", 0x0, "o", 0x0, "t"
	DCB	0x0, "=", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "f", 0x0, "a"
	DCB	0x0, "c", 0x0, "e", 0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "c"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "r", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "w", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e"
	DCB	0x0, "p", 0x0, "r", 0x0, "o", 0x0, "t", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  06db8			 AREA	 |.text|, CODE, ARM

  06db8		 |?SDHCSlotOptionHandlerImpl@CSDIOControllerBase@@QAAJEW4_SD_SLOT_OPTION_CODE@@PAXK@Z| PROC ; CSDIOControllerBase::SDHCSlotOptionHandlerImpl

; 3063 : {

  06db8		 |$LN92@SDHCSlotOp|
  06db8	e1a0c00d	 mov         r12, sp
  06dbc	e92d000f	 stmdb       sp!, {r0 - r3}
  06dc0	e92d5000	 stmdb       sp!, {r12, lr}
  06dc4	e24ddf41	 sub         sp, sp, #0x41, 30
  06dc8		 |$M46161|

; 3064 :     SD_API_STATUS status = SD_API_STATUS_SUCCESS;   // status

  06dc8	e3a03000	 mov         r3, #0
  06dcc	e58d300c	 str         r3, [sp, #0xC]

; 3065 : 
; 3066 :     UNREFERENCED_PARAMETER(SlotNumber);
; 3067 : 
; 3068 :     SDHCDAcquireHCLock(m_pHCContext);

  06dd0	e59d310c	 ldr         r3, [sp, #0x10C]
  06dd4	e28330a8	 add         r3, r3, #0xA8
  06dd8	e5933000	 ldr         r3, [r3]
  06ddc	e2830024	 add         r0, r3, #0x24
  06de0	eb000000	 bl          EnterCriticalSection

; 3069 : 
; 3070 :     switch (Option)

  06de4	e59d3114	 ldr         r3, [sp, #0x114]
  06de8	e58d30a0	 str         r3, [sp, #0xA0]
  06dec	e59d30a0	 ldr         r3, [sp, #0xA0]
  06df0	e353000c	 cmp         r3, #0xC
  06df4	8a000271	 bhi         |$LN1@SDHCSlotOp|
  06df8	e59d20a0	 ldr         r2, [sp, #0xA0]
  06dfc	e1a03102	 mov         r3, r2, lsl #2
  06e00	e083300f	 add         r3, r3, pc
  06e04	e5933004	 ldr         r3, [r3, #4]
  06e08	e08ff003	 add         pc, pc, r3
  06e0c		 |$LN76@SDHCSlotOp|
  06e0c		 |$LN75@SDHCSlotOp|
  06e0c		 |$LN77@SDHCSlotOp|
  06e0c	0000031c	 DCD         0x31c
  06e10		 |$LN78@SDHCSlotOp|
  06e10	00000030	 DCD         0x30
  06e14		 |$LN79@SDHCSlotOp|
  06e14	000005cc	 DCD         0x5cc
  06e18		 |$LN80@SDHCSlotOp|
  06e18	0000060c	 DCD         0x60c
  06e1c		 |$LN81@SDHCSlotOp|
  06e1c	0000058c	 DCD         0x58c
  06e20		 |$LN82@SDHCSlotOp|
  06e20	00000644	 DCD         0x644
  06e24		 |$LN83@SDHCSlotOp|
  06e24	000006d8	 DCD         0x6d8
  06e28		 |$LN84@SDHCSlotOp|
  06e28	000009b0	 DCD         0x9b0
  06e2c		 |$LN85@SDHCSlotOp|
  06e2c	0000035c	 DCD         0x35c
  06e30		 |$LN86@SDHCSlotOp|
  06e30	000003d8	 DCD         0x3d8
  06e34		 |$LN87@SDHCSlotOp|
  06e34	00000464	 DCD         0x464
  06e38		 |$LN88@SDHCSlotOp|
  06e38	000007f8	 DCD         0x7f8
  06e3c		 |$LN89@SDHCSlotOp|
  06e3c	00000204	 DCD         0x204
  06e40		 |$LN32@SDHCSlotOp|

; 3071 :     {
; 3072 :       case SDHCDSetSlotInterface:
; 3073 :         {
; 3074 :             PSD_CARD_INTERFACE pInterface = (PSD_CARD_INTERFACE) pData;

  06e40	e59d3118	 ldr         r3, [sp, #0x118]
  06e44	e58d3030	 str         r3, [sp, #0x30]

; 3075 : 
; 3076 :             DEBUGMSG(SDCARD_ZONE_INFO, 
; 3077 :                 (L"SHCSDSlotOptionHandler-SDHCDSetSlotInterface(slot=%d, "
; 3078 :                  L"interface=0x%08X, clockrate=%d, writeprotect=%d)\r\n",
; 3079 :                  SlotNumber, pInterface->InterfaceMode, 
; 3080 :                  pInterface->ClockRate, pInterface->WriteProtected)
; 3081 :                 );

  06e48	e59f39a8	 ldr         r3, [pc, #0x9A8]
  06e4c	e5933440	 ldr         r3, [r3, #0x440]
  06e50	e3130a01	 tst         r3, #1, 20
  06e54	0a00000e	 beq         |$LN37@SDHCSlotOp|
  06e58	e59d3030	 ldr         r3, [sp, #0x30]
  06e5c	e2833008	 add         r3, r3, #8
  06e60	e5933000	 ldr         r3, [r3]
  06e64	e58d3000	 str         r3, [sp]
  06e68	e59d3030	 ldr         r3, [sp, #0x30]
  06e6c	e2833004	 add         r3, r3, #4
  06e70	e5933000	 ldr         r3, [r3]
  06e74	e59d2030	 ldr         r2, [sp, #0x30]
  06e78	e5922000	 ldr         r2, [r2]
  06e7c	e5dd1110	 ldrb        r1, [sp, #0x110]
  06e80	e59f09b0	 ldr         r0, [pc, #0x9B0]
  06e84	eb000000	 bl          NKDbgPrintfW
  06e88	e3a03001	 mov         r3, #1
  06e8c	e58d30a4	 str         r3, [sp, #0xA4]
  06e90	ea000001	 b           |$LN38@SDHCSlotOp|
  06e94		 |$LN37@SDHCSlotOp|
  06e94	e3a03000	 mov         r3, #0
  06e98	e58d30a4	 str         r3, [sp, #0xA4]
  06e9c		 |$LN38@SDHCSlotOp|

; 3082 :             
; 3083 :             // set/get internal capabilities
; 3084 :             SD_CARD_INTERFACE_EX sdCardInterfaceEx;
; 3085 :             memset(&sdCardInterfaceEx,0, sizeof(sdCardInterfaceEx));

  06e9c	e3a02020	 mov         r2, #0x20
  06ea0	e3a01000	 mov         r1, #0
  06ea4	e28d0010	 add         r0, sp, #0x10
  06ea8	eb000000	 bl          memset

; 3086 :             sdCardInterfaceEx.InterfaceModeEx.bit.sd4Bit = (pInterface->InterfaceMode == SD_INTERFACE_SD_4BIT? 1: 0);

  06eac	e59d3030	 ldr         r3, [sp, #0x30]
  06eb0	e5933000	 ldr         r3, [r3]
  06eb4	e3530001	 cmp         r3, #1
  06eb8	1a000002	 bne         |$LN39@SDHCSlotOp|
  06ebc	e3a03001	 mov         r3, #1
  06ec0	e58d30a8	 str         r3, [sp, #0xA8]
  06ec4	ea000001	 b           |$LN40@SDHCSlotOp|
  06ec8		 |$LN39@SDHCSlotOp|
  06ec8	e3a03000	 mov         r3, #0
  06ecc	e58d30a8	 str         r3, [sp, #0xA8]
  06ed0		 |$LN40@SDHCSlotOp|
  06ed0	e59d10a8	 ldr         r1, [sp, #0xA8]
  06ed4	e59d2010	 ldr         r2, [sp, #0x10]
  06ed8	e3e03001	 mvn         r3, #1
  06edc	e0022003	 and         r2, r2, r3
  06ee0	e2013001	 and         r3, r1, #1
  06ee4	e1823003	 orr         r3, r2, r3
  06ee8	e58d3010	 str         r3, [sp, #0x10]

; 3087 :             sdCardInterfaceEx.ClockRate = pInterface->ClockRate;

  06eec	e59d3030	 ldr         r3, [sp, #0x30]
  06ef0	e2833004	 add         r3, r3, #4
  06ef4	e5933000	 ldr         r3, [r3]
  06ef8	e58d3014	 str         r3, [sp, #0x14]

; 3088 :             sdCardInterfaceEx.InterfaceModeEx.bit.sdWriteProtected = (pInterface->WriteProtected?1:0);

  06efc	e59d3030	 ldr         r3, [sp, #0x30]
  06f00	e2833008	 add         r3, r3, #8
  06f04	e5933000	 ldr         r3, [r3]
  06f08	e3530000	 cmp         r3, #0
  06f0c	0a000002	 beq         |$LN41@SDHCSlotOp|
  06f10	e3a03001	 mov         r3, #1
  06f14	e58d30ac	 str         r3, [sp, #0xAC]
  06f18	ea000001	 b           |$LN42@SDHCSlotOp|
  06f1c		 |$LN41@SDHCSlotOp|
  06f1c	e3a03000	 mov         r3, #0
  06f20	e58d30ac	 str         r3, [sp, #0xAC]
  06f24		 |$LN42@SDHCSlotOp|
  06f24	e59d10ac	 ldr         r1, [sp, #0xAC]
  06f28	e59d2010	 ldr         r2, [sp, #0x10]
  06f2c	e3e03101	 mvn         r3, #1, 2
  06f30	e0022003	 and         r2, r2, r3
  06f34	e2013001	 and         r3, r1, #1
  06f38	e1a03f03	 mov         r3, r3, lsl #30
  06f3c	e1823003	 orr         r3, r2, r3
  06f40	e58d3010	 str         r3, [sp, #0x10]

; 3089 :             SetInterface(&sdCardInterfaceEx);

  06f44	e28d1010	 add         r1, sp, #0x10
  06f48	e59d010c	 ldr         r0, [sp, #0x10C]
  06f4c	eb000000	 bl          |?SetInterface@CSDIOControllerBase@@QAAXPAU_SD_CARD_INTERFACE_EX@@@Z|

; 3090 : 
; 3091 :             // return internal capabilities
; 3092 :             pInterface->InterfaceMode = (sdCardInterfaceEx.InterfaceModeEx.bit.sd4Bit!=0?SD_INTERFACE_SD_4BIT:SD_INTERFACE_SD_MMC_1BIT);

  06f50	e59d3010	 ldr         r3, [sp, #0x10]
  06f54	e3130001	 tst         r3, #1
  06f58	0a000002	 beq         |$LN43@SDHCSlotOp|
  06f5c	e3a03001	 mov         r3, #1
  06f60	e58d30b0	 str         r3, [sp, #0xB0]
  06f64	ea000001	 b           |$LN44@SDHCSlotOp|
  06f68		 |$LN43@SDHCSlotOp|
  06f68	e3a03000	 mov         r3, #0
  06f6c	e58d30b0	 str         r3, [sp, #0xB0]
  06f70		 |$LN44@SDHCSlotOp|
  06f70	e59d20b0	 ldr         r2, [sp, #0xB0]
  06f74	e59d3030	 ldr         r3, [sp, #0x30]
  06f78	e5832000	 str         r2, [r3]

; 3093 :             pInterface->ClockRate =  sdCardInterfaceEx.ClockRate;

  06f7c	e59d3030	 ldr         r3, [sp, #0x30]
  06f80	e2832004	 add         r2, r3, #4
  06f84	e59d3014	 ldr         r3, [sp, #0x14]
  06f88	e5823000	 str         r3, [r2]

; 3094 :             pInterface->WriteProtected = (sdCardInterfaceEx.InterfaceModeEx.bit.sdWriteProtected!=0?TRUE:FALSE);

  06f8c	e59d3010	 ldr         r3, [sp, #0x10]
  06f90	e3130101	 tst         r3, #1, 2
  06f94	0a000002	 beq         |$LN45@SDHCSlotOp|
  06f98	e3a03001	 mov         r3, #1
  06f9c	e58d30b4	 str         r3, [sp, #0xB4]
  06fa0	ea000001	 b           |$LN46@SDHCSlotOp|
  06fa4		 |$LN45@SDHCSlotOp|
  06fa4	e3a03000	 mov         r3, #0
  06fa8	e58d30b4	 str         r3, [sp, #0xB4]
  06fac		 |$LN46@SDHCSlotOp|
  06fac	e59d3030	 ldr         r3, [sp, #0x30]
  06fb0	e2832008	 add         r2, r3, #8
  06fb4	e59d30b4	 ldr         r3, [sp, #0xB4]
  06fb8	e5823000	 str         r3, [r2]

; 3095 : 
; 3096 :             DEBUGMSG(SDCARD_ZONE_INFO, 
; 3097 :                 (L"SHCSDSlotOptionHandler-SDHCDSetSlotInterface(out)(slot=%d, "
; 3098 :                  L"interface=0x%08X, clockrate=%d, writeprotect=%d)\r\n",
; 3099 :                  SlotNumber, pInterface->InterfaceMode, 
; 3100 :                  pInterface->ClockRate, pInterface->WriteProtected)
; 3101 :                 );

  06fbc	e59f3834	 ldr         r3, [pc, #0x834]
  06fc0	e5933440	 ldr         r3, [r3, #0x440]
  06fc4	e3130a01	 tst         r3, #1, 20
  06fc8	0a00000e	 beq         |$LN47@SDHCSlotOp|
  06fcc	e59d3030	 ldr         r3, [sp, #0x30]
  06fd0	e2833008	 add         r3, r3, #8
  06fd4	e5933000	 ldr         r3, [r3]
  06fd8	e58d3000	 str         r3, [sp]
  06fdc	e59d3030	 ldr         r3, [sp, #0x30]
  06fe0	e2833004	 add         r3, r3, #4
  06fe4	e5933000	 ldr         r3, [r3]
  06fe8	e59d2030	 ldr         r2, [sp, #0x30]
  06fec	e5922000	 ldr         r2, [r2]
  06ff0	e5dd1110	 ldrb        r1, [sp, #0x110]
  06ff4	e59f0838	 ldr         r0, [pc, #0x838]
  06ff8	eb000000	 bl          NKDbgPrintfW
  06ffc	e3a03001	 mov         r3, #1
  07000	e58d30b8	 str         r3, [sp, #0xB8]
  07004	ea000001	 b           |$LN48@SDHCSlotOp|
  07008		 |$LN47@SDHCSlotOp|
  07008	e3a03000	 mov         r3, #0
  0700c	e58d30b8	 str         r3, [sp, #0xB8]
  07010		 |$LN48@SDHCSlotOp|

; 3102 :         }
; 3103 :         break;

  07010	ea0001ec	 b           |$LN33@SDHCSlotOp|
  07014		 |$LN31@SDHCSlotOp|

; 3104 : 
; 3105 :         case SDHCDSetSlotInterfaceEx: 
; 3106 :             {
; 3107 :             PSD_CARD_INTERFACE_EX pInterface = (PSD_CARD_INTERFACE_EX) pData;

  07014	e59d3118	 ldr         r3, [sp, #0x118]
  07018	e58d3034	 str         r3, [sp, #0x34]

; 3108 : 
; 3109 :             DEBUGMSG(SDCARD_ZONE_INFO,
; 3110 :                 (L"SHCSDSlotOptionHandler-SDHCDSetSlotInterfaceEx(slot=%d, "
; 3111 :                  L"clockrate=%d, 4bit=%d, highspeed=%d, writeprotect=%d, "
; 3112 :                  L"highcapacity=%d)\r\n",
; 3113 :                  SlotNumber, pInterface->ClockRate, 
; 3114 :                  pInterface->InterfaceModeEx.bit.sd4Bit,
; 3115 :                  pInterface->InterfaceModeEx.bit.sdHighSpeed,
; 3116 :                  pInterface->InterfaceModeEx.bit.sdWriteProtected,
; 3117 :                  pInterface->InterfaceModeEx.bit.sdHighCapacity)
; 3118 :                 );

  0701c	e59f37d4	 ldr         r3, [pc, #0x7D4]
  07020	e5933440	 ldr         r3, [r3, #0x440]
  07024	e3130a01	 tst         r3, #1, 20
  07028	0a000019	 beq         |$LN49@SDHCSlotOp|
  0702c	e59d3034	 ldr         r3, [sp, #0x34]
  07030	e5933000	 ldr         r3, [r3]
  07034	e1a03fa3	 mov         r3, r3, lsr #31
  07038	e58d3008	 str         r3, [sp, #8]
  0703c	e59d3034	 ldr         r3, [sp, #0x34]
  07040	e5933000	 ldr         r3, [r3]
  07044	e1a03083	 mov         r3, r3, lsl #1
  07048	e1a03fa3	 mov         r3, r3, lsr #31
  0704c	e58d3004	 str         r3, [sp, #4]
  07050	e59d3034	 ldr         r3, [sp, #0x34]
  07054	e5933000	 ldr         r3, [r3]
  07058	e1a03f03	 mov         r3, r3, lsl #30
  0705c	e1a03fa3	 mov         r3, r3, lsr #31
  07060	e58d3000	 str         r3, [sp]
  07064	e59d3034	 ldr         r3, [sp, #0x34]
  07068	e5933000	 ldr         r3, [r3]
  0706c	e2033001	 and         r3, r3, #1
  07070	e59d2034	 ldr         r2, [sp, #0x34]
  07074	e2822004	 add         r2, r2, #4
  07078	e5922000	 ldr         r2, [r2]
  0707c	e5dd1110	 ldrb        r1, [sp, #0x110]
  07080	e59f07a8	 ldr         r0, [pc, #0x7A8]
  07084	eb000000	 bl          NKDbgPrintfW
  07088	e3a03001	 mov         r3, #1
  0708c	e58d30bc	 str         r3, [sp, #0xBC]
  07090	ea000001	 b           |$LN50@SDHCSlotOp|
  07094		 |$LN49@SDHCSlotOp|
  07094	e3a03000	 mov         r3, #0
  07098	e58d30bc	 str         r3, [sp, #0xBC]
  0709c		 |$LN50@SDHCSlotOp|

; 3119 : 
; 3120 :             // set/get internal capabilities
; 3121 :             SetInterface((PSD_CARD_INTERFACE_EX)pInterface);

  0709c	e59d1034	 ldr         r1, [sp, #0x34]
  070a0	e59d010c	 ldr         r0, [sp, #0x10C]
  070a4	eb000000	 bl          |?SetInterface@CSDIOControllerBase@@QAAXPAU_SD_CARD_INTERFACE_EX@@@Z|

; 3122 : 
; 3123 :             DEBUGMSG(SDCARD_ZONE_INFO, 
; 3124 :                 (L"SHCSDSlotOptionHandler-SDHCDSetSlotInterfaceEx(out)(slot=%d, "
; 3125 :                  L"clockrate=%d, 4bit=%d, highspeed=%d, writeprotect=%d, "
; 3126 :                  L"highcapacity=%d)\r\n",
; 3127 :                  SlotNumber, pInterface->ClockRate, 
; 3128 :                  pInterface->InterfaceModeEx.bit.sd4Bit,
; 3129 :                  pInterface->InterfaceModeEx.bit.sdHighSpeed,
; 3130 :                  pInterface->InterfaceModeEx.bit.sdWriteProtected,
; 3131 :                  pInterface->InterfaceModeEx.bit.sdHighCapacity)
; 3132 :                 );

  070a8	e59f3748	 ldr         r3, [pc, #0x748]
  070ac	e5933440	 ldr         r3, [r3, #0x440]
  070b0	e3130a01	 tst         r3, #1, 20
  070b4	0a000019	 beq         |$LN51@SDHCSlotOp|
  070b8	e59d3034	 ldr         r3, [sp, #0x34]
  070bc	e5933000	 ldr         r3, [r3]
  070c0	e1a03fa3	 mov         r3, r3, lsr #31
  070c4	e58d3008	 str         r3, [sp, #8]
  070c8	e59d3034	 ldr         r3, [sp, #0x34]
  070cc	e5933000	 ldr         r3, [r3]
  070d0	e1a03083	 mov         r3, r3, lsl #1
  070d4	e1a03fa3	 mov         r3, r3, lsr #31
  070d8	e58d3004	 str         r3, [sp, #4]
  070dc	e59d3034	 ldr         r3, [sp, #0x34]
  070e0	e5933000	 ldr         r3, [r3]
  070e4	e1a03f03	 mov         r3, r3, lsl #30
  070e8	e1a03fa3	 mov         r3, r3, lsr #31
  070ec	e58d3000	 str         r3, [sp]
  070f0	e59d3034	 ldr         r3, [sp, #0x34]
  070f4	e5933000	 ldr         r3, [r3]
  070f8	e2033001	 and         r3, r3, #1
  070fc	e59d2034	 ldr         r2, [sp, #0x34]
  07100	e2822004	 add         r2, r2, #4
  07104	e5922000	 ldr         r2, [r2]
  07108	e5dd1110	 ldrb        r1, [sp, #0x110]
  0710c	e59f0718	 ldr         r0, [pc, #0x718]
  07110	eb000000	 bl          NKDbgPrintfW
  07114	e3a03001	 mov         r3, #1
  07118	e58d30c0	 str         r3, [sp, #0xC0]
  0711c	ea000001	 b           |$LN52@SDHCSlotOp|
  07120		 |$LN51@SDHCSlotOp|
  07120	e3a03000	 mov         r3, #0
  07124	e58d30c0	 str         r3, [sp, #0xC0]
  07128		 |$LN52@SDHCSlotOp|

; 3133 :         }
; 3134 :         break;

  07128	ea0001a6	 b           |$LN33@SDHCSlotOp|
  0712c		 |$LN30@SDHCSlotOp|

; 3135 : 
; 3136 :         case SDHCDSetSlotPower:
; 3137 :             {            
; 3138 :             DEBUGMSG(SDCARD_ZONE_INFO, 
; 3139 :                 (L"SHCSDSlotOptionHandler-SDHCDSetSlotPower(slot=%d, power=0x%08X)\r\n",
; 3140 :                 SlotNumber, *(DWORD*)pData)
; 3141 :                 );

  0712c	e59f36c4	 ldr         r3, [pc, #0x6C4]
  07130	e5933440	 ldr         r3, [r3, #0x440]
  07134	e3130a01	 tst         r3, #1, 20
  07138	0a000008	 beq         |$LN53@SDHCSlotOp|
  0713c	e59d3118	 ldr         r3, [sp, #0x118]
  07140	e5932000	 ldr         r2, [r3]
  07144	e5dd3110	 ldrb        r3, [sp, #0x110]
  07148	e1a01003	 mov         r1, r3
  0714c	e59f06d4	 ldr         r0, [pc, #0x6D4]
  07150	eb000000	 bl          NKDbgPrintfW
  07154	e3a03001	 mov         r3, #1
  07158	e58d30c4	 str         r3, [sp, #0xC4]
  0715c	ea000001	 b           |$LN54@SDHCSlotOp|
  07160		 |$LN53@SDHCSlotOp|
  07160	e3a03000	 mov         r3, #0
  07164	e58d30c4	 str         r3, [sp, #0xC4]
  07168		 |$LN54@SDHCSlotOp|

; 3142 : 
; 3143 :             // this platform has 3.2V tied directly to the slot
; 3144 :             // UNDONE:
; 3145 :             //  We should save this value and propogate to subclass.
; 3146 :             }
; 3147 :         break;

  07168	ea000196	 b           |$LN33@SDHCSlotOp|
  0716c		 |$LN29@SDHCSlotOp|

; 3148 : 
; 3149 :       case SDHCDSetSlotPowerState:
; 3150 :             {
; 3151 :             // validate parameters
; 3152 :             PCEDEVICE_POWER_STATE pcps = (PCEDEVICE_POWER_STATE) pData;

  0716c	e59d3118	 ldr         r3, [sp, #0x118]
  07170	e58d3038	 str         r3, [sp, #0x38]

; 3153 :         if( pData == NULL || OptionSize != sizeof(CEDEVICE_POWER_STATE) )

  07174	e59d3118	 ldr         r3, [sp, #0x118]
  07178	e3530000	 cmp         r3, #0
  0717c	0a000002	 beq         |$LN27@SDHCSlotOp|
  07180	e59d311c	 ldr         r3, [sp, #0x11C]
  07184	e3530004	 cmp         r3, #4
  07188	0a000002	 beq         |$LN28@SDHCSlotOp|
  0718c		 |$LN27@SDHCSlotOp|

; 3154 :         {
; 3155 :           status = SD_API_STATUS_INVALID_PARAMETER;

  0718c	e3a0311f	 mov         r3, #0x1F, 2
  07190	e58d300c	 str         r3, [sp, #0xC]

; 3156 :                 break;

  07194	ea00018b	 b           |$LN33@SDHCSlotOp|
  07198		 |$LN28@SDHCSlotOp|

; 3157 :         }
; 3158 :             
; 3159 :             DEBUGMSG(SDCARD_ZONE_INFO, 
; 3160 :                 (L"SHCSDSlotOptionHandler-SDHCDSetSlotPowerState(slot=%d, powestate=0x%08X)\r\n",
; 3161 :                 SlotNumber, *pcps)
; 3162 :                 );

  07198	e59f3658	 ldr         r3, [pc, #0x658]
  0719c	e5933440	 ldr         r3, [r3, #0x440]
  071a0	e3130a01	 tst         r3, #1, 20
  071a4	0a000008	 beq         |$LN55@SDHCSlotOp|
  071a8	e59d3038	 ldr         r3, [sp, #0x38]
  071ac	e5932000	 ldr         r2, [r3]
  071b0	e5dd3110	 ldrb        r3, [sp, #0x110]
  071b4	e1a01003	 mov         r1, r3
  071b8	e59f0664	 ldr         r0, [pc, #0x664]
  071bc	eb000000	 bl          NKDbgPrintfW
  071c0	e3a03001	 mov         r3, #1
  071c4	e58d30c8	 str         r3, [sp, #0xC8]
  071c8	ea000001	 b           |$LN56@SDHCSlotOp|
  071cc		 |$LN55@SDHCSlotOp|
  071cc	e3a03000	 mov         r3, #0
  071d0	e58d30c8	 str         r3, [sp, #0xC8]
  071d4		 |$LN56@SDHCSlotOp|

; 3163 :             
; 3164 :           SetSlotPowerState( *pcps );

  071d4	e59d3038	 ldr         r3, [sp, #0x38]
  071d8	e5931000	 ldr         r1, [r3]
  071dc	e59d010c	 ldr         r0, [sp, #0x10C]
  071e0	eb000000	 bl          |?SetSlotPowerState@CSDIOControllerBase@@QAAXW4_CEDEVICE_POWER_STATE@@@Z|

; 3165 :         }
; 3166 :         break;

  071e4	ea000177	 b           |$LN33@SDHCSlotOp|
  071e8		 |$LN26@SDHCSlotOp|

; 3167 : 
; 3168 :       case SDHCDGetSlotPowerState:
; 3169 :             {
; 3170 :             // validate parameters
; 3171 :             PCEDEVICE_POWER_STATE pcps = (PCEDEVICE_POWER_STATE) pData;

  071e8	e59d3118	 ldr         r3, [sp, #0x118]
  071ec	e58d303c	 str         r3, [sp, #0x3C]

; 3172 :         if( pData == NULL || OptionSize != sizeof(CEDEVICE_POWER_STATE) )

  071f0	e59d3118	 ldr         r3, [sp, #0x118]
  071f4	e3530000	 cmp         r3, #0
  071f8	0a000002	 beq         |$LN24@SDHCSlotOp|
  071fc	e59d311c	 ldr         r3, [sp, #0x11C]
  07200	e3530004	 cmp         r3, #4
  07204	0a000002	 beq         |$LN25@SDHCSlotOp|
  07208		 |$LN24@SDHCSlotOp|

; 3173 :         {
; 3174 :           status = SD_API_STATUS_INVALID_PARAMETER;

  07208	e3a0311f	 mov         r3, #0x1F, 2
  0720c	e58d300c	 str         r3, [sp, #0xC]

; 3175 :                 break;

  07210	ea00016c	 b           |$LN33@SDHCSlotOp|
  07214		 |$LN25@SDHCSlotOp|

; 3176 :         }
; 3177 :             
; 3178 :             DEBUGMSG(SDCARD_ZONE_INFO, 
; 3179 :                 (L"SHCSDSlotOptionHandler-SDHCDGetSlotPowerState(slot=%d, powestate=0x%08X)\r\n",
; 3180 :                 SlotNumber, GetSlotPowerState())
; 3181 :                 );

  07214	e59f35dc	 ldr         r3, [pc, #0x5DC]
  07218	e5933440	 ldr         r3, [r3, #0x440]
  0721c	e3130a01	 tst         r3, #1, 20
  07220	0a00000a	 beq         |$LN57@SDHCSlotOp|
  07224	e59d010c	 ldr         r0, [sp, #0x10C]
  07228	eb000000	 bl          |?GetSlotPowerState@CSDIOControllerBase@@QAA?AW4_CEDEVICE_POWER_STATE@@XZ|
  0722c	e58d00cc	 str         r0, [sp, #0xCC]
  07230	e59d20cc	 ldr         r2, [sp, #0xCC]
  07234	e5dd3110	 ldrb        r3, [sp, #0x110]
  07238	e1a01003	 mov         r1, r3
  0723c	e59f05dc	 ldr         r0, [pc, #0x5DC]
  07240	eb000000	 bl          NKDbgPrintfW
  07244	e3a03001	 mov         r3, #1
  07248	e58d30d0	 str         r3, [sp, #0xD0]
  0724c	ea000001	 b           |$LN58@SDHCSlotOp|
  07250		 |$LN57@SDHCSlotOp|
  07250	e3a03000	 mov         r3, #0
  07254	e58d30d0	 str         r3, [sp, #0xD0]
  07258		 |$LN58@SDHCSlotOp|

; 3182 :             
; 3183 :           *pcps = GetSlotPowerState();

  07258	e59d010c	 ldr         r0, [sp, #0x10C]
  0725c	eb000000	 bl          |?GetSlotPowerState@CSDIOControllerBase@@QAA?AW4_CEDEVICE_POWER_STATE@@XZ|
  07260	e58d00d4	 str         r0, [sp, #0xD4]
  07264	e59d20d4	 ldr         r2, [sp, #0xD4]
  07268	e59d303c	 ldr         r3, [sp, #0x3C]
  0726c	e5832000	 str         r2, [r3]

; 3184 :         }
; 3185 :         break;

  07270	ea000154	 b           |$LN33@SDHCSlotOp|
  07274		 |$LN23@SDHCSlotOp|

; 3186 : 
; 3187 :       case SDHCDWakeOnSDIOInterrupts:
; 3188 :         {
; 3189 :             DEBUGMSG(SDCARD_ZONE_INFO, 
; 3190 :                 (L"SHCSDSlotOptionHandler-SDHCDWakeOnSDIOInterrupts(slot=%d, enable=0x%08X)\r\n",
; 3191 :                 SlotNumber, *(BOOL*)pData)
; 3192 :                 );

  07274	e59f357c	 ldr         r3, [pc, #0x57C]
  07278	e5933440	 ldr         r3, [r3, #0x440]
  0727c	e3130a01	 tst         r3, #1, 20
  07280	0a000008	 beq         |$LN59@SDHCSlotOp|
  07284	e59d3118	 ldr         r3, [sp, #0x118]
  07288	e5932000	 ldr         r2, [r3]
  0728c	e5dd3110	 ldrb        r3, [sp, #0x110]
  07290	e1a01003	 mov         r1, r3
  07294	e59f0580	 ldr         r0, [pc, #0x580]
  07298	eb000000	 bl          NKDbgPrintfW
  0729c	e3a03001	 mov         r3, #1
  072a0	e58d30d8	 str         r3, [sp, #0xD8]
  072a4	ea000001	 b           |$LN60@SDHCSlotOp|
  072a8		 |$LN59@SDHCSlotOp|
  072a8	e3a03000	 mov         r3, #0
  072ac	e58d30d8	 str         r3, [sp, #0xD8]
  072b0		 |$LN60@SDHCSlotOp|

; 3193 : 
; 3194 :             // only enable SDIO wake interrupt if controller is able to
; 3195 :             BOOL bEnable = *(BOOL*)pData;

  072b0	e59d3118	 ldr         r3, [sp, #0x118]
  072b4	e5933000	 ldr         r3, [r3]
  072b8	e58d3040	 str         r3, [sp, #0x40]

; 3196 :           if ( m_dwWakeupSources & WAKEUP_SDIO )

  072bc	e59d310c	 ldr         r3, [sp, #0x10C]
  072c0	e28330e8	 add         r3, r3, #0xE8
  072c4	e5933000	 ldr         r3, [r3]
  072c8	e3130001	 tst         r3, #1
  072cc	0a00002f	 beq         |$LN22@SDHCSlotOp|

; 3197 :           {
; 3198 :                 DWORD dwCurrentWakeupSources = m_dwWakeupSources & ~WAKEUP_SDIO;

  072d0	e59d310c	 ldr         r3, [sp, #0x10C]
  072d4	e28330e8	 add         r3, r3, #0xE8
  072d8	e5932000	 ldr         r2, [r3]
  072dc	e3e03001	 mvn         r3, #1
  072e0	e0023003	 and         r3, r2, r3
  072e4	e58d3044	 str         r3, [sp, #0x44]

; 3199 :                 if (bEnable) 

  072e8	e59d3040	 ldr         r3, [sp, #0x40]
  072ec	e3530000	 cmp         r3, #0
  072f0	0a000006	 beq         |$LN21@SDHCSlotOp|

; 3200 :                     {
; 3201 :               m_dwCurrentWakeupSources |= WAKEUP_SDIO;

  072f4	e59d310c	 ldr         r3, [sp, #0x10C]
  072f8	e28330ec	 add         r3, r3, #0xEC
  072fc	e5933000	 ldr         r3, [r3]
  07300	e3832001	 orr         r2, r3, #1
  07304	e59d310c	 ldr         r3, [sp, #0x10C]
  07308	e28330ec	 add         r3, r3, #0xEC
  0730c	e5832000	 str         r2, [r3]
  07310		 |$LN21@SDHCSlotOp|

; 3202 :             }
; 3203 : 
; 3204 :             if( m_dwCurrentWakeupSources != dwCurrentWakeupSources )

  07310	e59d310c	 ldr         r3, [sp, #0x10C]
  07314	e28330ec	 add         r3, r3, #0xEC
  07318	e5932000	 ldr         r2, [r3]
  0731c	e59d3044	 ldr         r3, [sp, #0x44]
  07320	e1520003	 cmp         r2, r3
  07324	0a00000a	 beq         |$LN20@SDHCSlotOp|

; 3205 :             {
; 3206 :                 KernelIoControl( IOCTL_HAL_ENABLE_WAKE,
; 3207 :                     &m_dwControllerSysIntr,
; 3208 :                     sizeof( m_dwControllerSysIntr ),
; 3209 :                     NULL,
; 3210 :                     0,
; 3211 :                     NULL );

  07328	e3a03000	 mov         r3, #0
  0732c	e58d3004	 str         r3, [sp, #4]
  07330	e3a03000	 mov         r3, #0
  07334	e58d3000	 str         r3, [sp]
  07338	e3a03000	 mov         r3, #0
  0733c	e3a02004	 mov         r2, #4
  07340	e59d110c	 ldr         r1, [sp, #0x10C]
  07344	e2811f4d	 add         r1, r1, #0x4D, 30
  07348	e59f04c8	 ldr         r0, [pc, #0x4C8]
  0734c	eb000000	 bl          KernelIoControl

; 3212 :             }
; 3213 :             else

  07350	ea000009	 b           |$LN19@SDHCSlotOp|
  07354		 |$LN20@SDHCSlotOp|

; 3214 :             {
; 3215 :                 KernelIoControl( IOCTL_HAL_DISABLE_WAKE,
; 3216 :                     &m_dwControllerSysIntr,
; 3217 :                     sizeof( m_dwControllerSysIntr ),
; 3218 :                     NULL,
; 3219 :                     0,
; 3220 :                     NULL );

  07354	e3a03000	 mov         r3, #0
  07358	e58d3004	 str         r3, [sp, #4]
  0735c	e3a03000	 mov         r3, #0
  07360	e58d3000	 str         r3, [sp]
  07364	e3a03000	 mov         r3, #0
  07368	e3a02004	 mov         r2, #4
  0736c	e59d110c	 ldr         r1, [sp, #0x10C]
  07370	e2811f4d	 add         r1, r1, #0x4D, 30
  07374	e59f0498	 ldr         r0, [pc, #0x498]
  07378	eb000000	 bl          KernelIoControl
  0737c		 |$LN19@SDHCSlotOp|

; 3221 :             }
; 3222 : 
; 3223 :             m_dwCurrentWakeupSources = dwCurrentWakeupSources;

  0737c	e59d310c	 ldr         r3, [sp, #0x10C]
  07380	e28320ec	 add         r2, r3, #0xEC
  07384	e59d3044	 ldr         r3, [sp, #0x44]
  07388	e5823000	 str         r3, [r2]

; 3224 :           }
; 3225 :           else

  0738c	ea000001	 b           |$LN18@SDHCSlotOp|
  07390		 |$LN22@SDHCSlotOp|

; 3226 :           {
; 3227 :             status = SD_API_STATUS_UNSUCCESSFUL;

  07390	e3a0310f	 mov         r3, #0xF, 2
  07394	e58d300c	 str         r3, [sp, #0xC]
  07398		 |$LN18@SDHCSlotOp|

; 3228 :           }
; 3229 :         }
; 3230 :         break;

  07398	ea00010a	 b           |$LN33@SDHCSlotOp|
  0739c		 |$LN17@SDHCSlotOp|

; 3231 : 
; 3232 :       case SDHCDAckSDIOInterrupt:
; 3233 :             {
; 3234 :             DEBUGMSG(SDCARD_ZONE_INFO, 
; 3235 :                     (L"SHCSDSlotOptionHandler-SDHCDAckSDIOInterrupt(slot=%d)\r\n",
; 3236 :                     SlotNumber)
; 3237 :                     );

  0739c	e59f3454	 ldr         r3, [pc, #0x454]
  073a0	e5933440	 ldr         r3, [r3, #0x440]
  073a4	e3130a01	 tst         r3, #1, 20
  073a8	0a000006	 beq         |$LN61@SDHCSlotOp|
  073ac	e5dd3110	 ldrb        r3, [sp, #0x110]
  073b0	e1a01003	 mov         r1, r3
  073b4	e59f0454	 ldr         r0, [pc, #0x454]
  073b8	eb000000	 bl          NKDbgPrintfW
  073bc	e3a03001	 mov         r3, #1
  073c0	e58d30dc	 str         r3, [sp, #0xDC]
  073c4	ea000001	 b           |$LN62@SDHCSlotOp|
  073c8		 |$LN61@SDHCSlotOp|
  073c8	e3a03000	 mov         r3, #0
  073cc	e58d30dc	 str         r3, [sp, #0xDC]
  073d0		 |$LN62@SDHCSlotOp|

; 3238 :             
; 3239 :         AckSDIOInterrupt();

  073d0	e59d010c	 ldr         r0, [sp, #0x10C]
  073d4	eb000000	 bl          |?AckSDIOInterrupt@CSDIOControllerBase@@QAAXXZ|

; 3240 :             }
; 3241 :             break;

  073d8	ea0000fa	 b           |$LN33@SDHCSlotOp|
  073dc		 |$LN16@SDHCSlotOp|

; 3242 : 
; 3243 :         case SDHCDEnableSDIOInterrupts:
; 3244 :             {
; 3245 :             // this platform has 3.2V tied directly to the slot
; 3246 :             DEBUGMSG(SDCARD_ZONE_INFO, 
; 3247 :                 (L"SHCSDSlotOptionHandler-SDHCDEnableSDIOInterrupts(slot=%d)\r\n",
; 3248 :                 SlotNumber)
; 3249 :                 );

  073dc	e59f3414	 ldr         r3, [pc, #0x414]
  073e0	e5933440	 ldr         r3, [r3, #0x440]
  073e4	e3130a01	 tst         r3, #1, 20
  073e8	0a000006	 beq         |$LN63@SDHCSlotOp|
  073ec	e5dd3110	 ldrb        r3, [sp, #0x110]
  073f0	e1a01003	 mov         r1, r3
  073f4	e59f0410	 ldr         r0, [pc, #0x410]
  073f8	eb000000	 bl          NKDbgPrintfW
  073fc	e3a03001	 mov         r3, #1
  07400	e58d30e0	 str         r3, [sp, #0xE0]
  07404	ea000001	 b           |$LN64@SDHCSlotOp|
  07408		 |$LN63@SDHCSlotOp|
  07408	e3a03000	 mov         r3, #0
  0740c	e58d30e0	 str         r3, [sp, #0xE0]
  07410		 |$LN64@SDHCSlotOp|

; 3250 :             
; 3251 :             EnableSDIOInterrupts();

  07410	e59d010c	 ldr         r0, [sp, #0x10C]
  07414	eb000000	 bl          |?EnableSDIOInterrupts@CSDIOControllerBase@@QAAXXZ|

; 3252 :             }
; 3253 :         break;

  07418	ea0000ea	 b           |$LN33@SDHCSlotOp|
  0741c		 |$LN15@SDHCSlotOp|

; 3254 : 
; 3255 :       case SDHCDDisableSDIOInterrupts:
; 3256 :             {
; 3257 :             DEBUGMSG(SDCARD_ZONE_INFO, 
; 3258 :                 (L"SHCSDSlotOptionHandler-SDHCDDisableSDIOInterrupts(slot=%d)\r\n",
; 3259 :                 SlotNumber)
; 3260 :                 );

  0741c	e59f33d4	 ldr         r3, [pc, #0x3D4]
  07420	e5933440	 ldr         r3, [r3, #0x440]
  07424	e3130a01	 tst         r3, #1, 20
  07428	0a000006	 beq         |$LN65@SDHCSlotOp|
  0742c	e5dd3110	 ldrb        r3, [sp, #0x110]
  07430	e1a01003	 mov         r1, r3
  07434	e59f03cc	 ldr         r0, [pc, #0x3CC]
  07438	eb000000	 bl          NKDbgPrintfW
  0743c	e3a03001	 mov         r3, #1
  07440	e58d30e4	 str         r3, [sp, #0xE4]
  07444	ea000001	 b           |$LN66@SDHCSlotOp|
  07448		 |$LN65@SDHCSlotOp|
  07448	e3a03000	 mov         r3, #0
  0744c	e58d30e4	 str         r3, [sp, #0xE4]
  07450		 |$LN66@SDHCSlotOp|

; 3261 : 
; 3262 :             // UNDONE: should we disable SDIO interrupts???
; 3263 :             }
; 3264 :         break;

  07450	ea0000dc	 b           |$LN33@SDHCSlotOp|
  07454		 |$LN14@SDHCSlotOp|

; 3265 : 
; 3266 :       case SDHCDGetWriteProtectStatus:
; 3267 :         {
; 3268 :           PSD_CARD_INTERFACE pInterface = (PSD_CARD_INTERFACE) pData;

  07454	e59d3118	 ldr         r3, [sp, #0x118]
  07458	e58d3048	 str         r3, [sp, #0x48]

; 3269 :                 
; 3270 :             DEBUGMSG(SDCARD_ZONE_INFO, 
; 3271 :                 (L"SHCSDSlotOptionHandler-SDHCDGetWriteProtectStatus(slot=%d, protected=%d)\r\n",
; 3272 :                 SlotNumber, IsWriteProtected())
; 3273 :                 );

  0745c	e59f3394	 ldr         r3, [pc, #0x394]
  07460	e5933440	 ldr         r3, [r3, #0x440]
  07464	e3130a01	 tst         r3, #1, 20
  07468	0a00000f	 beq         |$LN67@SDHCSlotOp|
  0746c	e59d310c	 ldr         r3, [sp, #0x10C]
  07470	e5933000	 ldr         r3, [r3]
  07474	e2833008	 add         r3, r3, #8
  07478	e59d010c	 ldr         r0, [sp, #0x10C]
  0747c	e5933000	 ldr         r3, [r3]
  07480	e1a0e00f	 mov         lr, pc
  07484	e12fff13	 bx          r3
  07488	e58d00e8	 str         r0, [sp, #0xE8]
  0748c	e59d20e8	 ldr         r2, [sp, #0xE8]
  07490	e5dd3110	 ldrb        r3, [sp, #0x110]
  07494	e1a01003	 mov         r1, r3
  07498	e59f0364	 ldr         r0, [pc, #0x364]
  0749c	eb000000	 bl          NKDbgPrintfW
  074a0	e3a03001	 mov         r3, #1
  074a4	e58d30ec	 str         r3, [sp, #0xEC]
  074a8	ea000001	 b           |$LN68@SDHCSlotOp|
  074ac		 |$LN67@SDHCSlotOp|
  074ac	e3a03000	 mov         r3, #0
  074b0	e58d30ec	 str         r3, [sp, #0xEC]
  074b4		 |$LN68@SDHCSlotOp|

; 3274 :             
; 3275 :           pInterface->WriteProtected = IsWriteProtected();

  074b4	e59d310c	 ldr         r3, [sp, #0x10C]
  074b8	e5933000	 ldr         r3, [r3]
  074bc	e2833008	 add         r3, r3, #8
  074c0	e59d010c	 ldr         r0, [sp, #0x10C]
  074c4	e5933000	 ldr         r3, [r3]
  074c8	e1a0e00f	 mov         lr, pc
  074cc	e12fff13	 bx          r3
  074d0	e58d00f0	 str         r0, [sp, #0xF0]
  074d4	e59d3048	 ldr         r3, [sp, #0x48]
  074d8	e2832008	 add         r2, r3, #8
  074dc	e59d30f0	 ldr         r3, [sp, #0xF0]
  074e0	e5823000	 str         r3, [r2]

; 3276 :         }
; 3277 :         break;

  074e4	ea0000b7	 b           |$LN33@SDHCSlotOp|
  074e8		 |$LN13@SDHCSlotOp|

; 3278 : 
; 3279 :       case SDHCDQueryBlockCapability:
; 3280 :         {
; 3281 :             PSD_HOST_BLOCK_CAPABILITY pBlockCaps = (PSD_HOST_BLOCK_CAPABILITY)pData;

  074e8	e59d3118	 ldr         r3, [sp, #0x118]
  074ec	e58d304c	 str         r3, [sp, #0x4C]

; 3282 : 
; 3283 :           DEBUGMSG(SDCARD_ZONE_INFO,
; 3284 :                 (L"SHCSDSlotOptionHandler-SDHCDQueryBlockCapability(slot=%d, "
; 3285 :                  L"readlength=%d, readblocks=%d, writelength=%d, writeblocks=%d)\r\n",
; 3286 :                  SlotNumber, 
; 3287 :             pBlockCaps->ReadBlockSize,
; 3288 :                  pBlockCaps->ReadBlocks,
; 3289 :             pBlockCaps->WriteBlockSize,
; 3290 :                  pBlockCaps->WriteBlocks)
; 3291 :                 );            

  074f0	e59f3300	 ldr         r3, [pc, #0x300]
  074f4	e5933440	 ldr         r3, [r3, #0x440]
  074f8	e3130a01	 tst         r3, #1, 20
  074fc	0a000012	 beq         |$LN69@SDHCSlotOp|
  07500	e59d304c	 ldr         r3, [sp, #0x4C]
  07504	e2833006	 add         r3, r3, #6
  07508	e1d330b0	 ldrh        r3, [r3]
  0750c	e58d3004	 str         r3, [sp, #4]
  07510	e59d304c	 ldr         r3, [sp, #0x4C]
  07514	e2833002	 add         r3, r3, #2
  07518	e1d330b0	 ldrh        r3, [r3]
  0751c	e58d3000	 str         r3, [sp]
  07520	e59d304c	 ldr         r3, [sp, #0x4C]
  07524	e2833004	 add         r3, r3, #4
  07528	e1d330b0	 ldrh        r3, [r3]
  0752c	e59d204c	 ldr         r2, [sp, #0x4C]
  07530	e1d220b0	 ldrh        r2, [r2]
  07534	e5dd1110	 ldrb        r1, [sp, #0x110]
  07538	e59f02c0	 ldr         r0, [pc, #0x2C0]
  0753c	eb000000	 bl          NKDbgPrintfW
  07540	e3a03001	 mov         r3, #1
  07544	e58d30f4	 str         r3, [sp, #0xF4]
  07548	ea000001	 b           |$LN70@SDHCSlotOp|
  0754c		 |$LN69@SDHCSlotOp|
  0754c	e3a03000	 mov         r3, #0
  07550	e58d30f4	 str         r3, [sp, #0xF4]
  07554		 |$LN70@SDHCSlotOp|

; 3292 : 
; 3293 :             if (pBlockCaps->ReadBlockSize < STD_HC_MIN_BLOCK_LENGTH) 

  07554	e59d304c	 ldr         r3, [sp, #0x4C]
  07558	e1d330b0	 ldrh        r3, [r3]
  0755c	e3530001	 cmp         r3, #1
  07560	aa000002	 bge         |$LN12@SDHCSlotOp|

; 3294 :                 {
; 3295 :             pBlockCaps->ReadBlockSize = STD_HC_MIN_BLOCK_LENGTH;

  07564	e59d204c	 ldr         r2, [sp, #0x4C]
  07568	e3a03001	 mov         r3, #1
  0756c	e1c230b0	 strh        r3, [r2]
  07570		 |$LN12@SDHCSlotOp|

; 3296 :           }
; 3297 : 
; 3298 :             if (pBlockCaps->ReadBlockSize > m_usMaxBlockLen) 

  07570	e59d304c	 ldr         r3, [sp, #0x4C]
  07574	e1d330b0	 ldrh        r3, [r3]
  07578	e1a02003	 mov         r2, r3
  0757c	e59d310c	 ldr         r3, [sp, #0x10C]
  07580	e2833f53	 add         r3, r3, #0x53, 30
  07584	e1d330b0	 ldrh        r3, [r3]
  07588	e1520003	 cmp         r2, r3
  0758c	da000004	 ble         |$LN11@SDHCSlotOp|

; 3299 :                 {
; 3300 :             pBlockCaps->ReadBlockSize = m_usMaxBlockLen;

  07590	e59d310c	 ldr         r3, [sp, #0x10C]
  07594	e2833f53	 add         r3, r3, #0x53, 30
  07598	e1d320b0	 ldrh        r2, [r3]
  0759c	e59d304c	 ldr         r3, [sp, #0x4C]
  075a0	e1c320b0	 strh        r2, [r3]
  075a4		 |$LN11@SDHCSlotOp|

; 3301 :           }
; 3302 : 
; 3303 :             if (pBlockCaps->WriteBlockSize < STD_HC_MIN_BLOCK_LENGTH) 

  075a4	e59d304c	 ldr         r3, [sp, #0x4C]
  075a8	e2833002	 add         r3, r3, #2
  075ac	e1d330b0	 ldrh        r3, [r3]
  075b0	e3530001	 cmp         r3, #1
  075b4	aa000003	 bge         |$LN10@SDHCSlotOp|

; 3304 :                 {
; 3305 :             pBlockCaps->WriteBlockSize = STD_HC_MIN_BLOCK_LENGTH;

  075b8	e59d304c	 ldr         r3, [sp, #0x4C]
  075bc	e2832002	 add         r2, r3, #2
  075c0	e3a03001	 mov         r3, #1
  075c4	e1c230b0	 strh        r3, [r2]
  075c8		 |$LN10@SDHCSlotOp|

; 3306 :           }
; 3307 : 
; 3308 :             if (pBlockCaps->WriteBlockSize > m_usMaxBlockLen) 

  075c8	e59d304c	 ldr         r3, [sp, #0x4C]
  075cc	e2833002	 add         r3, r3, #2
  075d0	e1d330b0	 ldrh        r3, [r3]
  075d4	e1a02003	 mov         r2, r3
  075d8	e59d310c	 ldr         r3, [sp, #0x10C]
  075dc	e2833f53	 add         r3, r3, #0x53, 30
  075e0	e1d330b0	 ldrh        r3, [r3]
  075e4	e1520003	 cmp         r2, r3
  075e8	da000005	 ble         |$LN9@SDHCSlotOp|

; 3309 :                 {
; 3310 :             pBlockCaps->WriteBlockSize = m_usMaxBlockLen;

  075ec	e59d310c	 ldr         r3, [sp, #0x10C]
  075f0	e2831f53	 add         r1, r3, #0x53, 30
  075f4	e59d304c	 ldr         r3, [sp, #0x4C]
  075f8	e2832002	 add         r2, r3, #2
  075fc	e1d130b0	 ldrh        r3, [r1]
  07600	e1c230b0	 strh        r3, [r2]
  07604		 |$LN9@SDHCSlotOp|

; 3311 :           }
; 3312 :         }
; 3313 :         break;

  07604	ea00006f	 b           |$LN33@SDHCSlotOp|
  07608		 |$LN8@SDHCSlotOp|

; 3314 : 
; 3315 :       case SDHCDGetSlotInfo:
; 3316 :             {
; 3317 :             DWORD dwSlotCapabilities = SD_SLOT_SD_1BIT_CAPABLE | SD_SLOT_SDIO_CAPABLE;

  07608	e3a03024	 mov         r3, #0x24
  0760c	e58d3054	 str         r3, [sp, #0x54]

; 3318 :             PSDCARD_HC_SLOT_INFO pSlotInfo = (PSDCARD_HC_SLOT_INFO)pData;

  07610	e59d3118	 ldr         r3, [sp, #0x118]
  07614	e58d3050	 str         r3, [sp, #0x50]

; 3319 : 
; 3320 :             // validate parameters
; 3321 :         if( OptionSize != sizeof(SDCARD_HC_SLOT_INFO) || pData == NULL )

  07618	e59d311c	 ldr         r3, [sp, #0x11C]
  0761c	e3530014	 cmp         r3, #0x14
  07620	1a000002	 bne         |$LN6@SDHCSlotOp|
  07624	e59d3118	 ldr         r3, [sp, #0x118]
  07628	e3530000	 cmp         r3, #0
  0762c	1a000002	 bne         |$LN7@SDHCSlotOp|
  07630		 |$LN6@SDHCSlotOp|

; 3322 :         {
; 3323 :           status = SD_API_STATUS_INVALID_PARAMETER;

  07630	e3a0311f	 mov         r3, #0x1F, 2
  07634	e58d300c	 str         r3, [sp, #0xC]

; 3324 :                 break;                  

  07638	ea000062	 b           |$LN33@SDHCSlotOp|
  0763c		 |$LN7@SDHCSlotOp|

; 3325 :         }
; 3326 : 
; 3327 :             DEBUGMSG(SDCARD_ZONE_INFO, 
; 3328 :                 (L"SHCSDSlotOptionHandler-SDHCDGetSlotInfo(slot=%d)\r\n",
; 3329 :                  SlotNumber)
; 3330 :                 ); 

  0763c	e59f31b4	 ldr         r3, [pc, #0x1B4]
  07640	e5933440	 ldr         r3, [r3, #0x440]
  07644	e3130a01	 tst         r3, #1, 20
  07648	0a000006	 beq         |$LN71@SDHCSlotOp|
  0764c	e5dd3110	 ldrb        r3, [sp, #0x110]
  07650	e1a01003	 mov         r1, r3
  07654	e59f01a0	 ldr         r0, [pc, #0x1A0]
  07658	eb000000	 bl          NKDbgPrintfW
  0765c	e3a03001	 mov         r3, #1
  07660	e58d30f8	 str         r3, [sp, #0xF8]
  07664	ea000001	 b           |$LN72@SDHCSlotOp|
  07668		 |$LN71@SDHCSlotOp|
  07668	e3a03000	 mov         r3, #0
  0766c	e58d30f8	 str         r3, [sp, #0xF8]
  07670		 |$LN72@SDHCSlotOp|

; 3331 : 
; 3332 :             // SDIO 1 bit or 4 bit.
; 3333 :           if (!m_Sdio4BitDisable)

  07670	e59d310c	 ldr         r3, [sp, #0x10C]
  07674	e2833e19	 add         r3, r3, #0x19, 28
  07678	e5933000	 ldr         r3, [r3]
  0767c	e3530000	 cmp         r3, #0
  07680	1a000002	 bne         |$LN5@SDHCSlotOp|

; 3334 :               dwSlotCapabilities |= SD_SLOT_SD_4BIT_CAPABLE;

  07684	e59d3054	 ldr         r3, [sp, #0x54]
  07688	e3833008	 orr         r3, r3, #8
  0768c	e58d3054	 str         r3, [sp, #0x54]
  07690		 |$LN5@SDHCSlotOp|

; 3335 : 
; 3336 :           if (!m_SdMem4BitDisable)

  07690	e59d310c	 ldr         r3, [sp, #0x10C]
  07694	e2833f65	 add         r3, r3, #0x65, 30
  07698	e5933000	 ldr         r3, [r3]
  0769c	e3530000	 cmp         r3, #0
  076a0	1a000002	 bne         |$LN4@SDHCSlotOp|

; 3337 :               dwSlotCapabilities |= SD_SLOT_SDMEM_4BIT_CAPABLE;

  076a4	e59d3054	 ldr         r3, [sp, #0x54]
  076a8	e3833040	 orr         r3, r3, #0x40
  076ac	e58d3054	 str         r3, [sp, #0x54]
  076b0		 |$LN4@SDHCSlotOp|

; 3338 : 
; 3339 :           if (m_dwSDHighSpeedSupport)

  076b0	e59d310c	 ldr         r3, [sp, #0x10C]
  076b4	e2833f66	 add         r3, r3, #0x66, 30
  076b8	e5933000	 ldr         r3, [r3]
  076bc	e3530000	 cmp         r3, #0
  076c0	0a000002	 beq         |$LN3@SDHCSlotOp|

; 3340 :                 dwSlotCapabilities |= SD_SLOT_HIGH_SPEED_CAPABLE;

  076c4	e59d3054	 ldr         r3, [sp, #0x54]
  076c8	e3833010	 orr         r3, r3, #0x10
  076cc	e58d3054	 str         r3, [sp, #0x54]
  076d0		 |$LN3@SDHCSlotOp|

; 3341 : 
; 3342 :           if (!IsMultipleBlockReadSupported())

  076d0	e59d010c	 ldr         r0, [sp, #0x10C]
  076d4	eb000000	 bl          |?IsMultipleBlockReadSupported@CSDIOControllerBase@@IAAHXZ|
  076d8	e58d00fc	 str         r0, [sp, #0xFC]
  076dc	e59d30fc	 ldr         r3, [sp, #0xFC]
  076e0	e3530000	 cmp         r3, #0
  076e4	1a000002	 bne         |$LN2@SDHCSlotOp|

; 3343 :               dwSlotCapabilities |= SD_SLOT_USE_SOFT_BLOCK_CMD53_READ;

  076e8	e59d3054	 ldr         r3, [sp, #0x54]
  076ec	e3833b02	 orr         r3, r3, #2, 22
  076f0	e58d3054	 str         r3, [sp, #0x54]
  076f4		 |$LN2@SDHCSlotOp|

; 3344 : 
; 3345 :           SDHCDSetSlotCapabilities( pSlotInfo,dwSlotCapabilities);

  076f4	e59d2054	 ldr         r2, [sp, #0x54]
  076f8	e59d3050	 ldr         r3, [sp, #0x50]
  076fc	e5832000	 str         r2, [r3]

; 3346 : 
; 3347 :           SDHCDSetVoltageWindowMask(pSlotInfo,(SD_VDD_WINDOW_3_1_TO_3_2 |
; 3348 :                                                SD_VDD_WINDOW_3_2_TO_3_3 |
; 3349 :                                                SD_VDD_WINDOW_3_3_TO_3_4 |
; 3350 :                                                SD_VDD_WINDOW_3_4_TO_3_5 |
; 3351 :                                                SD_VDD_WINDOW_3_5_TO_3_6));

  07700	e59d3050	 ldr         r3, [sp, #0x50]
  07704	e2832004	 add         r2, r3, #4
  07708	e3a0373e	 mov         r3, #0x3E, 14
  0770c	e5823000	 str         r3, [r2]

; 3352 :           // Set optimal voltage
; 3353 :           SDHCDSetDesiredSlotVoltage(pSlotInfo, SD_VDD_WINDOW_2_9_TO_3_0);

  07710	e59d3050	 ldr         r3, [sp, #0x50]
  07714	e2832008	 add         r2, r3, #8
  07718	e3a03802	 mov         r3, #2, 16
  0771c	e5823000	 str         r3, [r2]

; 3354 : 
; 3355 :           // Set maximum supported clock rate
; 3356 :           SDHCDSetMaxClockRate(pSlotInfo, m_dwMaxClockRate);

  07720	e59d310c	 ldr         r3, [sp, #0x10C]
  07724	e2831f52	 add         r1, r3, #0x52, 30
  07728	e59d3050	 ldr         r3, [sp, #0x50]
  0772c	e283200c	 add         r2, r3, #0xC
  07730	e5913000	 ldr         r3, [r1]
  07734	e5823000	 str         r3, [r2]

; 3357 : 
; 3358 :           // set power up delay
; 3359 :           SDHCDSetPowerUpDelay(pSlotInfo, 100);

  07738	e59d3050	 ldr         r3, [sp, #0x50]
  0773c	e2832010	 add         r2, r3, #0x10
  07740	e3a03064	 mov         r3, #0x64
  07744	e5823000	 str         r3, [r2]

; 3360 :    
; 3361 :             DEBUGMSG(SDCARD_ZONE_INFO, 
; 3362 :                 (L"SHCSDSlotOptionHandler-SDHCDGetSlotInfo[out](slot=%d, "
; 3363 :                  L"Capabilities=%d, VoltageWindowMask=0x%08X, "
; 3364 :                  L"DesiredVoltageMask=0x%08X, MaxClockRate=0x%08X, "
; 3365 :                  L"PowerUpDelay=%d)\r\n",
; 3366 :                  SlotNumber, 
; 3367 :                  pSlotInfo->Capabilities,
; 3368 :                  pSlotInfo->VoltageWindowMask,
; 3369 :                  pSlotInfo->DesiredVoltageMask,
; 3370 :                  pSlotInfo->MaxClockRate,
; 3371 :                  pSlotInfo->PowerUpDelay)
; 3372 :                 ); 

  07748	e59f30a8	 ldr         r3, [pc, #0xA8]
  0774c	e5933440	 ldr         r3, [r3, #0x440]
  07750	e3130a01	 tst         r3, #1, 20
  07754	0a000016	 beq         |$LN73@SDHCSlotOp|
  07758	e59d3050	 ldr         r3, [sp, #0x50]
  0775c	e2833010	 add         r3, r3, #0x10
  07760	e5933000	 ldr         r3, [r3]
  07764	e58d3008	 str         r3, [sp, #8]
  07768	e59d3050	 ldr         r3, [sp, #0x50]
  0776c	e283300c	 add         r3, r3, #0xC
  07770	e5933000	 ldr         r3, [r3]
  07774	e58d3004	 str         r3, [sp, #4]
  07778	e59d3050	 ldr         r3, [sp, #0x50]
  0777c	e2833008	 add         r3, r3, #8
  07780	e5933000	 ldr         r3, [r3]
  07784	e58d3000	 str         r3, [sp]
  07788	e59d3050	 ldr         r3, [sp, #0x50]
  0778c	e2833004	 add         r3, r3, #4
  07790	e5933000	 ldr         r3, [r3]
  07794	e59d2050	 ldr         r2, [sp, #0x50]
  07798	e5922000	 ldr         r2, [r2]
  0779c	e5dd1110	 ldrb        r1, [sp, #0x110]
  077a0	e59f004c	 ldr         r0, [pc, #0x4C]
  077a4	eb000000	 bl          NKDbgPrintfW
  077a8	e3a03001	 mov         r3, #1
  077ac	e58d3100	 str         r3, [sp, #0x100]
  077b0	ea000001	 b           |$LN74@SDHCSlotOp|
  077b4		 |$LN73@SDHCSlotOp|
  077b4	e3a03000	 mov         r3, #0
  077b8	e58d3100	 str         r3, [sp, #0x100]
  077bc		 |$LN74@SDHCSlotOp|

; 3373 :         }
; 3374 :         break;

  077bc	ea000001	 b           |$LN33@SDHCSlotOp|
  077c0		 |$LN1@SDHCSlotOp|

; 3375 : 
; 3376 :       default:
; 3377 :         status = SD_API_STATUS_INVALID_PARAMETER;

  077c0	e3a0311f	 mov         r3, #0x1F, 2
  077c4	e58d300c	 str         r3, [sp, #0xC]
  077c8		 |$LN33@SDHCSlotOp|

; 3378 :         break;
; 3379 :     }
; 3380 : 
; 3381 :     SDHCDReleaseHCLock(m_pHCContext);

  077c8	e59d310c	 ldr         r3, [sp, #0x10C]
  077cc	e28330a8	 add         r3, r3, #0xA8
  077d0	e5933000	 ldr         r3, [r3]
  077d4	e2830024	 add         r0, r3, #0x24
  077d8	eb000000	 bl          LeaveCriticalSection

; 3382 :     return status;

  077dc	e59d300c	 ldr         r3, [sp, #0xC]
  077e0	e58d309c	 str         r3, [sp, #0x9C]

; 3383 : }

  077e4	e59d009c	 ldr         r0, [sp, #0x9C]
  077e8	e28ddf41	 add         sp, sp, #0x41, 30
  077ec	e89d6000	 ldmia       sp, {sp, lr}
  077f0	e12fff1e	 bx          lr
  077f4		 |$LN93@SDHCSlotOp|
  077f4		 |$LN94@SDHCSlotOp|
  077f4	00000000	 DCD         |??_C@_1BEI@DADEBDNJ@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAG?$AAe?$AAt?$AAS@|
  077f8		 |$LN95@SDHCSlotOp|
  077f8	00000000	 DCD         |dpCurSettings|
  077fc		 |$LN96@SDHCSlotOp|
  077fc	00000000	 DCD         |??_C@_1GG@HGPPMKHE@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAG?$AAe?$AAt?$AAS@|
  07800		 |$LN97@SDHCSlotOp|
  07800	00000000	 DCD         |??_C@_1PE@GPLMNIKI@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAQ?$AAu?$AAe?$AAr@|
  07804		 |$LN98@SDHCSlotOp|
  07804	00000000	 DCD         |??_C@_1JG@MBGIOPGM@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAG?$AAe?$AAt?$AAW@|
  07808		 |$LN99@SDHCSlotOp|
  07808	00000000	 DCD         |??_C@_1HK@FJOKOHJP@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAD?$AAi?$AAs?$AAa@|
  0780c		 |$LN100@SDHCSlotOp|
  0780c	00000000	 DCD         |??_C@_1HI@IPIOENME@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAE?$AAn?$AAa?$AAb@|
  07810		 |$LN101@SDHCSlotOp|
  07810	00000000	 DCD         |??_C@_1HA@POGIMGHL@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAA?$AAc?$AAk?$AAS@|
  07814		 |$LN102@SDHCSlotOp|
  07814	010100a4	 DCD         0x10100a4
  07818		 |$LN103@SDHCSlotOp|
  07818	010100a0	 DCD         0x10100a0
  0781c		 |$LN104@SDHCSlotOp|
  0781c	00000000	 DCD         |??_C@_1JG@KDBCLCAC@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAW?$AAa?$AAk?$AAe@|
  07820		 |$LN105@SDHCSlotOp|
  07820	00000000	 DCD         |??_C@_1JG@MFJCBOIL@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAG?$AAe?$AAt?$AAS@|
  07824		 |$LN106@SDHCSlotOp|
  07824	00000000	 DCD         |??_C@_1JG@HLBJPBEH@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAS?$AAe?$AAt?$AAS@|
  07828		 |$LN107@SDHCSlotOp|
  07828	00000000	 DCD         |??_C@_1IE@IPDCIIAP@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAS?$AAe?$AAt?$AAS@|
  0782c		 |$LN108@SDHCSlotOp|
  0782c	00000000	 DCD         |??_C@_1BAM@FLHNGGHB@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAS?$AAe?$AAt?$AAS@|
  07830		 |$LN109@SDHCSlotOp|
  07830	00000000	 DCD         |??_C@_1BAC@OJANHBPA@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAS?$AAe?$AAt?$AAS@|
  07834		 |$LN110@SDHCSlotOp|
  07834	00000000	 DCD         |??_C@_1NM@IKAFDIIO@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAS?$AAe?$AAt?$AAS@|
  07838		 |$LN111@SDHCSlotOp|
  07838	00000000	 DCD         |??_C@_1NC@KBEJEOGO@?$AAS?$AAH?$AAC?$AAS?$AAD?$AAS?$AAl?$AAo?$AAt?$AAO?$AAp?$AAt?$AAi?$AAo?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?9?$AAS?$AAD?$AAH?$AAC?$AAD?$AAS?$AAe?$AAt?$AAS@|
  0783c		 |$M46162|

			 ENDP  ; |?SDHCSlotOptionHandlerImpl@CSDIOControllerBase@@QAAJEW4_SD_SLOT_OPTION_CODE@@PAXK@Z|, CSDIOControllerBase::SDHCSlotOptionHandlerImpl


  001b8			 AREA	 |.pdata|, PDATA
|$T46189| DCD	|$LN5@SDHCCancel@2|
	DCD	0x40001404
; Function compile flags: /Odtp

  0783c			 AREA	 |.text|, CODE, ARM

  0783c		 |?SDHCCancelIoHandler@CSDIOControllerBase@@SAEPAU_SDCARD_HC_CONTEXT@@KPAU_SD_BUS_REQUEST@@@Z| PROC ; CSDIOControllerBase::SDHCCancelIoHandler

; 3390 : {

  0783c		 |$LN5@SDHCCancel@2|
  0783c	e1a0c00d	 mov         r12, sp
  07840	e92d0007	 stmdb       sp!, {r0 - r2}
  07844	e92d5000	 stmdb       sp!, {r12, lr}
  07848	e24dd00c	 sub         sp, sp, #0xC
  0784c		 |$M46186|

; 3391 :     // get our extension
; 3392 :     CSDIOControllerBase *pController = GET_PCONTROLLER_FROM_HCD(pHCContext);

  0784c	e59d3014	 ldr         r3, [sp, #0x14]
  07850	e283304c	 add         r3, r3, #0x4C
  07854	e5933000	 ldr         r3, [r3]
  07858	e58d3000	 str         r3, [sp]

; 3393 :     return pController->SDHCCancelIoHandlerImpl((UCHAR)Slot, pRequest);

  0785c	e59d201c	 ldr         r2, [sp, #0x1C]
  07860	e59d3018	 ldr         r3, [sp, #0x18]
  07864	e20310ff	 and         r1, r3, #0xFF
  07868	e59d0000	 ldr         r0, [sp]
  0786c	eb000000	 bl          |?SDHCCancelIoHandlerImpl@CSDIOControllerBase@@QAAEEPAU_SD_BUS_REQUEST@@@Z|
  07870	e5cd0008	 strb        r0, [sp, #8]
  07874	e5dd3008	 ldrb        r3, [sp, #8]
  07878	e5cd3004	 strb        r3, [sp, #4]

; 3394 : }

  0787c	e5dd0004	 ldrb        r0, [sp, #4]
  07880	e28dd00c	 add         sp, sp, #0xC
  07884	e89d6000	 ldmia       sp, {sp, lr}
  07888	e12fff1e	 bx          lr
  0788c		 |$M46187|

			 ENDP  ; |?SDHCCancelIoHandler@CSDIOControllerBase@@SAEPAU_SDCARD_HC_CONTEXT@@KPAU_SD_BUS_REQUEST@@@Z|, CSDIOControllerBase::SDHCCancelIoHandler


  001c0			 AREA	 |.pdata|, PDATA
|$T46195| DCD	|$LN5@SDHCBusReq@4|
	DCD	0x40001204
; Function compile flags: /Odtp

  0788c			 AREA	 |.text|, CODE, ARM

  0788c		 |?SDHCBusRequestHandler@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@KPAU_SD_BUS_REQUEST@@@Z| PROC ; CSDIOControllerBase::SDHCBusRequestHandler

; 3401 : {

  0788c		 |$LN5@SDHCBusReq@4|
  0788c	e1a0c00d	 mov         r12, sp
  07890	e92d0007	 stmdb       sp!, {r0 - r2}
  07894	e92d5000	 stmdb       sp!, {r12, lr}
  07898	e24dd00c	 sub         sp, sp, #0xC
  0789c		 |$M46192|

; 3402 :     UNREFERENCED_PARAMETER(Slot);
; 3403 : 
; 3404 :     // get our extension
; 3405 :     CSDIOControllerBase *pController = GET_PCONTROLLER_FROM_HCD(pHCContext);

  0789c	e59d3014	 ldr         r3, [sp, #0x14]
  078a0	e283304c	 add         r3, r3, #0x4C
  078a4	e5933000	 ldr         r3, [r3]
  078a8	e58d3000	 str         r3, [sp]

; 3406 :     return pController->SDHCBusRequestHandlerImpl(pRequest);

  078ac	e59d101c	 ldr         r1, [sp, #0x1C]
  078b0	e59d0000	 ldr         r0, [sp]
  078b4	eb000000	 bl          |?SDHCBusRequestHandlerImpl@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z|
  078b8	e58d0008	 str         r0, [sp, #8]
  078bc	e59d3008	 ldr         r3, [sp, #8]
  078c0	e58d3004	 str         r3, [sp, #4]

; 3407 : }

  078c4	e59d0004	 ldr         r0, [sp, #4]
  078c8	e28dd00c	 add         sp, sp, #0xC
  078cc	e89d6000	 ldmia       sp, {sp, lr}
  078d0	e12fff1e	 bx          lr
  078d4		 |$M46193|

			 ENDP  ; |?SDHCBusRequestHandler@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@KPAU_SD_BUS_REQUEST@@@Z|, CSDIOControllerBase::SDHCBusRequestHandler


  001c8			 AREA	 |.pdata|, PDATA
|$T46202| DCD	|$LN5@SDHCSlotOp@2|
	DCD	0x40001704
; Function compile flags: /Odtp

  078d4			 AREA	 |.text|, CODE, ARM

  078d4		 |?SDHCSlotOptionHandler@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@KW4_SD_SLOT_OPTION_CODE@@PAXK@Z| PROC ; CSDIOControllerBase::SDHCSlotOptionHandler

; 3416 : {

  078d4		 |$LN5@SDHCSlotOp@2|
  078d4	e1a0c00d	 mov         r12, sp
  078d8	e92d000f	 stmdb       sp!, {r0 - r3}
  078dc	e92d5000	 stmdb       sp!, {r12, lr}
  078e0	e24dd014	 sub         sp, sp, #0x14
  078e4		 |$M46199|

; 3417 :     // get our extension
; 3418 :     CSDIOControllerBase *pController = GET_PCONTROLLER_FROM_HCD(pHCContext);

  078e4	e59d301c	 ldr         r3, [sp, #0x1C]
  078e8	e283304c	 add         r3, r3, #0x4C
  078ec	e5933000	 ldr         r3, [r3]
  078f0	e58d3004	 str         r3, [sp, #4]

; 3419 :     return pController->SDHCSlotOptionHandlerImpl((UCHAR)SlotNumber,
; 3420 :         Option,
; 3421 :         pData,
; 3422 :         OptionSize );

  078f4	e59d302c	 ldr         r3, [sp, #0x2C]
  078f8	e58d3000	 str         r3, [sp]
  078fc	e59d3028	 ldr         r3, [sp, #0x28]
  07900	e59d2024	 ldr         r2, [sp, #0x24]
  07904	e59d1020	 ldr         r1, [sp, #0x20]
  07908	e20110ff	 and         r1, r1, #0xFF
  0790c	e59d0004	 ldr         r0, [sp, #4]
  07910	eb000000	 bl          |?SDHCSlotOptionHandlerImpl@CSDIOControllerBase@@QAAJEW4_SD_SLOT_OPTION_CODE@@PAXK@Z|
  07914	e58d0010	 str         r0, [sp, #0x10]
  07918	e59d3010	 ldr         r3, [sp, #0x10]
  0791c	e58d300c	 str         r3, [sp, #0xC]

; 3423 : }

  07920	e59d000c	 ldr         r0, [sp, #0xC]
  07924	e28dd014	 add         sp, sp, #0x14
  07928	e89d6000	 ldmia       sp, {sp, lr}
  0792c	e12fff1e	 bx          lr
  07930		 |$M46200|

			 ENDP  ; |?SDHCSlotOptionHandler@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@KW4_SD_SLOT_OPTION_CODE@@PAXK@Z|, CSDIOControllerBase::SDHCSlotOptionHandler


  001d0			 AREA	 |.pdata|, PDATA
|$T46208| DCD	|$LN5@SDHCDeinit@2|
	DCD	0x40001104
; Function compile flags: /Odtp

  07930			 AREA	 |.text|, CODE, ARM

  07930		 |?SDHCDeinitialize@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@@Z| PROC ; CSDIOControllerBase::SDHCDeinitialize

; 3428 : {

  07930		 |$LN5@SDHCDeinit@2|
  07930	e1a0c00d	 mov         r12, sp
  07934	e92d0001	 stmdb       sp!, {r0}
  07938	e92d5000	 stmdb       sp!, {r12, lr}
  0793c	e24dd00c	 sub         sp, sp, #0xC
  07940		 |$M46205|

; 3429 :     // get our extension
; 3430 :     CSDIOControllerBase *pController = GET_PCONTROLLER_FROM_HCD(pHCContext);

  07940	e59d3014	 ldr         r3, [sp, #0x14]
  07944	e283304c	 add         r3, r3, #0x4C
  07948	e5933000	 ldr         r3, [r3]
  0794c	e58d3000	 str         r3, [sp]

; 3431 :     return pController->SDHCDeinitializeImpl();

  07950	e59d0000	 ldr         r0, [sp]
  07954	eb000000	 bl          |?SDHCDeinitializeImpl@CSDIOControllerBase@@QAAJXZ|
  07958	e58d0008	 str         r0, [sp, #8]
  0795c	e59d3008	 ldr         r3, [sp, #8]
  07960	e58d3004	 str         r3, [sp, #4]

; 3432 : }

  07964	e59d0004	 ldr         r0, [sp, #4]
  07968	e28dd00c	 add         sp, sp, #0xC
  0796c	e89d6000	 ldmia       sp, {sp, lr}
  07970	e12fff1e	 bx          lr
  07974		 |$M46206|

			 ENDP  ; |?SDHCDeinitialize@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@@Z|, CSDIOControllerBase::SDHCDeinitialize


  001d8			 AREA	 |.pdata|, PDATA
|$T46214| DCD	|$LN5@SDHCInitia@2|
	DCD	0x40001104
; Function compile flags: /Odtp

  07974			 AREA	 |.text|, CODE, ARM

  07974		 |?SDHCInitialize@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@@Z| PROC ; CSDIOControllerBase::SDHCInitialize

; 3437 : {

  07974		 |$LN5@SDHCInitia@2|
  07974	e1a0c00d	 mov         r12, sp
  07978	e92d0001	 stmdb       sp!, {r0}
  0797c	e92d5000	 stmdb       sp!, {r12, lr}
  07980	e24dd00c	 sub         sp, sp, #0xC
  07984		 |$M46211|

; 3438 :     // get our extension
; 3439 :     CSDIOControllerBase *pController = GET_PCONTROLLER_FROM_HCD(pHCContext);

  07984	e59d3014	 ldr         r3, [sp, #0x14]
  07988	e283304c	 add         r3, r3, #0x4C
  0798c	e5933000	 ldr         r3, [r3]
  07990	e58d3000	 str         r3, [sp]

; 3440 :     return pController->SDHCInitializeImpl();

  07994	e59d0000	 ldr         r0, [sp]
  07998	eb000000	 bl          |?SDHCInitializeImpl@CSDIOControllerBase@@QAAJXZ|
  0799c	e58d0008	 str         r0, [sp, #8]
  079a0	e59d3008	 ldr         r3, [sp, #8]
  079a4	e58d3004	 str         r3, [sp, #4]

; 3441 : }

  079a8	e59d0004	 ldr         r0, [sp, #4]
  079ac	e28dd00c	 add         sp, sp, #0xC
  079b0	e89d6000	 ldmia       sp, {sp, lr}
  079b4	e12fff1e	 bx          lr
  079b8		 |$M46212|

			 ENDP  ; |?SDHCInitialize@CSDIOControllerBase@@SAJPAU_SDCARD_HC_CONTEXT@@@Z|, CSDIOControllerBase::SDHCInitialize

	EXPORT	|?SetPower@CSDIOControllerBase@@QAAHW4_CEDEVICE_POWER_STATE@@@Z| ; CSDIOControllerBase::SetPower
	IMPORT	|SDHCDPowerUpDown|
	IMPORT	|EnableDeviceClocks|

  001e0			 AREA	 |.pdata|, PDATA
|$T46220| DCD	|$LN11@SetPower|
	DCD	0x40004704
; Function compile flags: /Odtp

  079b8			 AREA	 |.text|, CODE, ARM

  079b8		 |?SetPower@CSDIOControllerBase@@QAAHW4_CEDEVICE_POWER_STATE@@@Z| PROC ; CSDIOControllerBase::SetPower

; 3445 : {

  079b8		 |$LN11@SetPower|
  079b8	e1a0c00d	 mov         r12, sp
  079bc	e92d0003	 stmdb       sp!, {r0, r1}
  079c0	e92d5000	 stmdb       sp!, {r12, lr}
  079c4	e24dd00c	 sub         sp, sp, #0xC
  079c8		 |$M46217|

; 3446 :     BOOL rc = FALSE;

  079c8	e3a03000	 mov         r3, #0
  079cc	e58d3000	 str         r3, [sp]

; 3447 : 
; 3448 :     EnterCriticalSection(&m_powerCS);

  079d0	e59d3014	 ldr         r3, [sp, #0x14]
  079d4	e28300c4	 add         r0, r3, #0xC4
  079d8	eb000000	 bl          EnterCriticalSection

; 3449 :     if(m_ActualPowerState != dx)

  079dc	e59d3014	 ldr         r3, [sp, #0x14]
  079e0	e28330e0	 add         r3, r3, #0xE0
  079e4	e5932000	 ldr         r2, [r3]
  079e8	e59d3018	 ldr         r3, [sp, #0x18]
  079ec	e1520003	 cmp         r2, r3
  079f0	0a00002e	 beq         |$LN6@SetPower|

; 3450 : 	{ 
; 3451 : 	    switch(dx)

  079f4	e59d3018	 ldr         r3, [sp, #0x18]
  079f8	e58d3008	 str         r3, [sp, #8]
  079fc	e59d3008	 ldr         r3, [sp, #8]
  07a00	e3530000	 cmp         r3, #0
  07a04	0a000003	 beq         |$LN3@SetPower|
  07a08	e59d3008	 ldr         r3, [sp, #8]
  07a0c	e3530004	 cmp         r3, #4
  07a10	0a000018	 beq         |$LN1@SetPower|
  07a14	ea000025	 b           |$LN4@SetPower|
  07a18		 |$LN3@SetPower|

; 3452 :     {
; 3453 :       case D0:
; 3454 : 		EnableDeviceClocks(m_dwDeviceID, TRUE);

  07a18	e3a01001	 mov         r1, #1
  07a1c	e59d3014	 ldr         r3, [sp, #0x14]
  07a20	e2833f5d	 add         r3, r3, #0x5D, 30
  07a24	e5930000	 ldr         r0, [r3]
  07a28	eb000000	 bl          EnableDeviceClocks

; 3455 : 		// Notify the SD Bus driver of the PowerUp event
; 3456 :         SDHCDPowerUpDown(m_pHCContext, TRUE, FALSE, 0);

  07a2c	e3a03000	 mov         r3, #0
  07a30	e3a02000	 mov         r2, #0
  07a34	e3a01001	 mov         r1, #1
  07a38	e59d0014	 ldr         r0, [sp, #0x14]
  07a3c	e28000a8	 add         r0, r0, #0xA8
  07a40	e5900000	 ldr         r0, [r0]
  07a44	eb000000	 bl          SDHCDPowerUpDown

; 3457 :         if(!m_fCardPresent)

  07a48	e59d3014	 ldr         r3, [sp, #0x14]
  07a4c	e28330f0	 add         r3, r3, #0xF0
  07a50	e5933000	 ldr         r3, [r3]
  07a54	e3530000	 cmp         r3, #0
  07a58	1a000003	 bne         |$LN2@SetPower|

; 3458 :             SetEvent(m_hCardDetectEvent);

  07a5c	e59d3014	 ldr         r3, [sp, #0x14]
  07a60	e2833e12	 add         r3, r3, #0x12, 28
  07a64	e5930000	 ldr         r0, [r3]
  07a68	eb000000	 bl          SetEvent
  07a6c		 |$LN2@SetPower|

; 3459 : 
; 3460 :         rc = TRUE;

  07a6c	e3a03001	 mov         r3, #1
  07a70	e58d3000	 str         r3, [sp]

; 3461 :         break;

  07a74	ea00000d	 b           |$LN4@SetPower|
  07a78		 |$LN1@SetPower|

; 3462 : 
; 3463 :       case D4:
; 3464 :         // Notify the SD Bus driver of the PowerDown event
; 3465 :         SDHCDPowerUpDown(m_pHCContext, FALSE, FALSE, 0);

  07a78	e3a03000	 mov         r3, #0
  07a7c	e3a02000	 mov         r2, #0
  07a80	e3a01000	 mov         r1, #0
  07a84	e59d0014	 ldr         r0, [sp, #0x14]
  07a88	e28000a8	 add         r0, r0, #0xA8
  07a8c	e5900000	 ldr         r0, [r0]
  07a90	eb000000	 bl          SDHCDPowerUpDown

; 3466 : 		EnableDeviceClocks(m_dwDeviceID, FALSE);

  07a94	e3a01000	 mov         r1, #0
  07a98	e59d3014	 ldr         r3, [sp, #0x14]
  07a9c	e2833f5d	 add         r3, r3, #0x5D, 30
  07aa0	e5930000	 ldr         r0, [r3]
  07aa4	eb000000	 bl          EnableDeviceClocks

; 3467 : 
; 3468 :         rc = TRUE;

  07aa8	e3a03001	 mov         r3, #1
  07aac	e58d3000	 str         r3, [sp]
  07ab0		 |$LN4@SetPower|
  07ab0		 |$LN6@SetPower|

; 3469 :         break;
; 3470 :     }
; 3471 :     }
; 3472 :     LeaveCriticalSection(&m_powerCS);

  07ab0	e59d3014	 ldr         r3, [sp, #0x14]
  07ab4	e28300c4	 add         r0, r3, #0xC4
  07ab8	eb000000	 bl          LeaveCriticalSection

; 3473 :     return rc;

  07abc	e59d3000	 ldr         r3, [sp]
  07ac0	e58d3004	 str         r3, [sp, #4]

; 3474 : }

  07ac4	e59d0004	 ldr         r0, [sp, #4]
  07ac8	e28dd00c	 add         sp, sp, #0xC
  07acc	e89d6000	 ldmia       sp, {sp, lr}
  07ad0	e12fff1e	 bx          lr
  07ad4		 |$M46218|

			 ENDP  ; |?SetPower@CSDIOControllerBase@@QAAHW4_CEDEVICE_POWER_STATE@@@Z|, CSDIOControllerBase::SetPower

	EXPORT	|??_C@_1HI@HOEKBCBK@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?5?$AA?9?$AA?5?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AAr?$AAe@| [ DATA ] ; `string'
	EXPORT	|?PowerDown@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::PowerDown

  001e8			 AREA	 |.pdata|, PDATA
|$T46227| DCD	|$LN9@PowerDown|
	DCD	0x40005a04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@HOEKBCBK@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?5?$AA?9?$AA?5?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AAr?$AAe@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "D", 0x0, "o"
	DCB	0x0, "w", 0x0, "n", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "C"
	DCB	0x0, "a", 0x0, "n", 0x0, "c", 0x0, "e", 0x0, "l", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "c", 0x0, "u", 0x0, "r"
	DCB	0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, ",", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, ":"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  07ad4			 AREA	 |.text|, CODE, ARM

  07ad4		 |?PowerDown@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::PowerDown

; 3478 : {

  07ad4		 |$LN9@PowerDown|
  07ad4	e1a0c00d	 mov         r12, sp
  07ad8	e92d0001	 stmdb       sp!, {r0}
  07adc	e92d5000	 stmdb       sp!, {r12, lr}
  07ae0	e24dd00c	 sub         sp, sp, #0xC
  07ae4		 |$M46224|

; 3479 :     // Notify bus driver
; 3480 :     IndicateSlotStateChange(DeviceEjected);

  07ae4	e3a02001	 mov         r2, #1
  07ae8	e3a01000	 mov         r1, #0
  07aec	e59d3014	 ldr         r3, [sp, #0x14]
  07af0	e28330a8	 add         r3, r3, #0xA8
  07af4	e5930000	 ldr         r0, [r3]
  07af8	eb000000	 bl          SDHCDIndicateSlotStateChange

; 3481 : 
; 3482 :     SystemClockOn(TRUE);

  07afc	e3a01001	 mov         r1, #1
  07b00	e59d0014	 ldr         r0, [sp, #0x14]
  07b04	eb000000	 bl          |?SystemClockOn@CSDIOControllerBase@@QAAXH@Z|

; 3483 : 
; 3484 :     // Simulate Device removal for Suspend/Resume
; 3485 :     m_fCardPresent = FALSE;

  07b08	e59d3014	 ldr         r3, [sp, #0x14]
  07b0c	e28320f0	 add         r2, r3, #0xF0
  07b10	e3a03000	 mov         r3, #0
  07b14	e5823000	 str         r3, [r2]

; 3486 :     // get the current request
; 3487 :     PSD_BUS_REQUEST pRequest = GetAndLockCurrentRequest();

  07b18	e3a01000	 mov         r1, #0
  07b1c	e59d3014	 ldr         r3, [sp, #0x14]
  07b20	e28330a8	 add         r3, r3, #0xA8
  07b24	e5930000	 ldr         r0, [r3]
  07b28	eb000000	 bl          SDHCDGetAndLockCurrentRequest
  07b2c	e58d0004	 str         r0, [sp, #4]
  07b30	e59d3004	 ldr         r3, [sp, #4]
  07b34	e58d3000	 str         r3, [sp]

; 3488 : 
; 3489 :     if (pRequest != NULL)

  07b38	e59d3000	 ldr         r3, [sp]
  07b3c	e3530000	 cmp         r3, #0
  07b40	0a000017	 beq         |$LN2@PowerDown|

; 3490 :     {
; 3491 :         DEBUGMSG(SDCARD_ZONE_WARN,
; 3492 :             (TEXT("PowerDown - Canceling current request: 0x%08X, command: %d\n"),
; 3493 :              pRequest, pRequest->CommandCode));

  07b44	e59f30ec	 ldr         r3, [pc, #0xEC]
  07b48	e5933440	 ldr         r3, [r3, #0x440]
  07b4c	e3130901	 tst         r3, #1, 18
  07b50	0a000009	 beq         |$LN5@PowerDown|
  07b54	e59d3000	 ldr         r3, [sp]
  07b58	e2833014	 add         r3, r3, #0x14
  07b5c	e5d33000	 ldrb        r3, [r3]
  07b60	e1a02003	 mov         r2, r3
  07b64	e59d1000	 ldr         r1, [sp]
  07b68	e59f00c4	 ldr         r0, [pc, #0xC4]
  07b6c	eb000000	 bl          NKDbgPrintfW
  07b70	e3a03001	 mov         r3, #1
  07b74	e58d3008	 str         r3, [sp, #8]
  07b78	ea000001	 b           |$LN6@PowerDown|
  07b7c		 |$LN5@PowerDown|
  07b7c	e3a03000	 mov         r3, #0
  07b80	e58d3008	 str         r3, [sp, #8]
  07b84		 |$LN6@PowerDown|

; 3494 :         DumpRequest(pRequest);

  07b84	e59d0000	 ldr         r0, [sp]
  07b88	eb000000	 bl          |?DumpRequest@@YAXPAU_SD_BUS_REQUEST@@@Z|

; 3495 :         IndicateBusRequestComplete(pRequest, SD_API_STATUS_DEVICE_REMOVED);

  07b8c	e3a02147	 mov         r2, #0x47, 2
  07b90	e59d1000	 ldr         r1, [sp]
  07b94	e59d3014	 ldr         r3, [sp, #0x14]
  07b98	e28330a8	 add         r3, r3, #0xA8
  07b9c	e5930000	 ldr         r0, [r3]
  07ba0	eb000000	 bl          SDHCDIndicateBusRequestComplete
  07ba4		 |$LN2@PowerDown|

; 3496 :     }
; 3497 : 
; 3498 :     if (m_dwSDClockMode)

  07ba4	e59d3014	 ldr         r3, [sp, #0x14]
  07ba8	e2833f67	 add         r3, r3, #0x67, 30
  07bac	e5933000	 ldr         r3, [r3]
  07bb0	e3530000	 cmp         r3, #0
  07bb4	0a000005	 beq         |$LN1@PowerDown|

; 3499 :     {
; 3500 :         // turn clock off and remove power from the slot
; 3501 :         OUTREG32(&m_pbRegisters->MMCHS_SYSCONFIG, MMCHS_SYSCONFIG_AUTOIDLE | MMCHS_SYSCONFIG_SIDLEMODE(SIDLE_FORCE));

  07bb8	e59d3014	 ldr         r3, [sp, #0x14]
  07bbc	e2833f57	 add         r3, r3, #0x57, 30
  07bc0	e5933000	 ldr         r3, [r3]
  07bc4	e2832010	 add         r2, r3, #0x10
  07bc8	e3a03001	 mov         r3, #1
  07bcc	e5823000	 str         r3, [r2]
  07bd0		 |$LN1@PowerDown|

; 3502 :     }
; 3503 : 
; 3504 :     SetPower(D4);

  07bd0	e3a01004	 mov         r1, #4
  07bd4	e59d0014	 ldr         r0, [sp, #0x14]
  07bd8	eb000000	 bl          |?SetPower@CSDIOControllerBase@@QAAHW4_CEDEVICE_POWER_STATE@@@Z|

; 3505 : 
; 3506 :     // go to D4 right away
; 3507 :     ResetEvent(m_hTimerEvent);

  07bdc	e59d3014	 ldr         r3, [sp, #0x14]
  07be0	e2833f6a	 add         r3, r3, #0x6A, 30
  07be4	e5930000	 ldr         r0, [r3]
  07be8	eb000000	 bl          ResetEvent

; 3508 :     m_dwClockCnt = 0;

  07bec	e59d3014	 ldr         r3, [sp, #0x14]
  07bf0	e2832e1a	 add         r2, r3, #0x1A, 28
  07bf4	e3a03000	 mov         r3, #0
  07bf8	e5823000	 str         r3, [r2]

; 3509 :     m_bDisablePower = TRUE;

  07bfc	e59d3014	 ldr         r3, [sp, #0x14]
  07c00	e2832f73	 add         r2, r3, #0x73, 30
  07c04	e3a03001	 mov         r3, #1
  07c08	e5823000	 str         r3, [r2]

; 3510 :     m_InternPowerState = D4;

  07c0c	e59d3014	 ldr         r3, [sp, #0x14]
  07c10	e28320dc	 add         r2, r3, #0xDC
  07c14	e3a03004	 mov         r3, #4
  07c18	e5823000	 str         r3, [r2]

; 3511 :     UpdateDevicePowerState(TRUE);

  07c1c	e3a01001	 mov         r1, #1
  07c20	e59d0014	 ldr         r0, [sp, #0x14]
  07c24	eb000000	 bl          |?UpdateDevicePowerState@CSDIOControllerBase@@QAAXH@Z|

; 3512 : }

  07c28	e28dd00c	 add         sp, sp, #0xC
  07c2c	e89d6000	 ldmia       sp, {sp, lr}
  07c30	e12fff1e	 bx          lr
  07c34		 |$LN10@PowerDown|
  07c34		 |$LN11@PowerDown|
  07c34	00000000	 DCD         |??_C@_1HI@HOEKBCBK@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?5?$AA?9?$AA?5?$AAC?$AAa?$AAn?$AAc?$AAe?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AAr?$AAe@|
  07c38		 |$LN12@PowerDown|
  07c38	00000000	 DCD         |dpCurSettings|
  07c3c		 |$M46225|

			 ENDP  ; |?PowerDown@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::PowerDown

	EXPORT	|?PowerUp@CSDIOControllerBase@@QAAXXZ|	; CSDIOControllerBase::PowerUp

  001f0			 AREA	 |.pdata|, PDATA
|$T46235| DCD	|$LN5@PowerUp|
	DCD	0x40000503
; Function compile flags: /Odtp

  07c3c			 AREA	 |.text|, CODE, ARM

  07c3c		 |?PowerUp@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::PowerUp

; 3516 : {

  07c3c		 |$LN5@PowerUp|
  07c3c	e1a0c00d	 mov         r12, sp
  07c40	e92d0001	 stmdb       sp!, {r0}
  07c44	e92d5000	 stmdb       sp!, {r12, lr}
  07c48		 |$M46232|

; 3517 : }

  07c48	e89d6000	 ldmia       sp, {sp, lr}
  07c4c	e12fff1e	 bx          lr
  07c50		 |$M46233|

			 ENDP  ; |?PowerUp@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::PowerUp

	EXPORT	|??_C@_1EM@GEDBDKPO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?9?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAR?$AAe?$AAs?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HK@CPFPCLOF@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@KNPBMNAC@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?$CL?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAR?$AAe?$AAs?$AAt@| [ DATA ] ; `string'
	EXPORT	|?ContextRestore@CSDIOControllerBase@@QAAHXZ| ; CSDIOControllerBase::ContextRestore
	IMPORT	|StallExecution|

  001f8			 AREA	 |.pdata|, PDATA
|$T46247| DCD	|$LN18@ContextRes|
	DCD	0x40008304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@GEDBDKPO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?9?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAR?$AAe?$AAs?$AAt@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, "-", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, "R", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, "o", 0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@CPFPCLOF@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc@| DCB "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, "H", 0x0, "a", 0x0, "r"
	DCB	0x0, "d", 0x0, "w", 0x0, "a", 0x0, "r", 0x0, "e", 0x0, ":"
	DCB	0x0, ":", 0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "C", 0x0, "D", 0x0, "/", 0x0, "R", 0x0, "W"
	DCB	0x0, " ", 0x0, "G", 0x0, "P", 0x0, "I", 0x0, "O", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@KNPBMNAC@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?$CL?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAR?$AAe?$AAs?$AAt@| DCB "C"
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "r", 0x0, "B", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, ":", 0x0, "+", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "x", 0x0, "t", 0x0, "R", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, "o", 0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  07c50			 AREA	 |.text|, CODE, ARM

  07c50		 |?ContextRestore@CSDIOControllerBase@@QAAHXZ| PROC ; CSDIOControllerBase::ContextRestore

; 3527 : {

  07c50		 |$LN18@ContextRes|
  07c50	e1a0c00d	 mov         r12, sp
  07c54	e92d0001	 stmdb       sp!, {r0}
  07c58	e92d5000	 stmdb       sp!, {r12, lr}
  07c5c	e24dd02c	 sub         sp, sp, #0x2C
  07c60		 |$M46244|

; 3528 :     SD_API_STATUS      status;              // SD status
; 3529 :     BOOL               fRegisteredWithBusDriver = FALSE;

  07c60	e3a03000	 mov         r3, #0
  07c64	e58d3004	 str         r3, [sp, #4]

; 3530 :     BOOL               fHardwareInitialized = FALSE;

  07c68	e3a03000	 mov         r3, #0
  07c6c	e58d300c	 str         r3, [sp, #0xC]

; 3531 :     BOOL               bRet = FALSE;

  07c70	e3a03000	 mov         r3, #0
  07c74	e58d3008	 str         r3, [sp, #8]

; 3532 :     DWORD              dwClockRate;
; 3533 : 
; 3534 :     DEBUGMSG(SHC_RESPONSE_ZONE, (L"CSDIOControllerBase:+ContextRestore\r\n"));

  07c78	e59f31d0	 ldr         r3, [pc, #0x1D0]
  07c7c	e5933440	 ldr         r3, [r3, #0x440]
  07c80	e3130004	 tst         r3, #4
  07c84	0a000004	 beq         |$LN10@ContextRes|
  07c88	e59f01c8	 ldr         r0, [pc, #0x1C8]
  07c8c	eb000000	 bl          NKDbgPrintfW
  07c90	e3a03001	 mov         r3, #1
  07c94	e58d3018	 str         r3, [sp, #0x18]
  07c98	ea000001	 b           |$LN11@ContextRes|
  07c9c		 |$LN10@ContextRes|
  07c9c	e3a03000	 mov         r3, #0
  07ca0	e58d3018	 str         r3, [sp, #0x18]
  07ca4		 |$LN11@ContextRes|

; 3535 : 	
; 3536 : 	if( !InitializeHardware() )

  07ca4	e59d3034	 ldr         r3, [sp, #0x34]
  07ca8	e5933000	 ldr         r3, [r3]
  07cac	e59d0034	 ldr         r0, [sp, #0x34]
  07cb0	e5933000	 ldr         r3, [r3]
  07cb4	e1a0e00f	 mov         lr, pc
  07cb8	e12fff13	 bx          r3
  07cbc	e58d001c	 str         r0, [sp, #0x1C]
  07cc0	e59d301c	 ldr         r3, [sp, #0x1C]
  07cc4	e3530000	 cmp         r3, #0
  07cc8	1a00000e	 bne         |$LN7@ContextRes|

; 3537 :     {
; 3538 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("InitializeHardware:: Error allocating CD/RW GPIO registers\r\n")));

  07ccc	e59f317c	 ldr         r3, [pc, #0x17C]
  07cd0	e5933440	 ldr         r3, [r3, #0x440]
  07cd4	e3130902	 tst         r3, #2, 18
  07cd8	0a000004	 beq         |$LN12@ContextRes|
  07cdc	e59f0170	 ldr         r0, [pc, #0x170]
  07ce0	eb000000	 bl          NKDbgPrintfW
  07ce4	e3a03001	 mov         r3, #1
  07ce8	e58d3020	 str         r3, [sp, #0x20]
  07cec	ea000001	 b           |$LN13@ContextRes|
  07cf0		 |$LN12@ContextRes|
  07cf0	e3a03000	 mov         r3, #0
  07cf4	e58d3020	 str         r3, [sp, #0x20]
  07cf8		 |$LN13@ContextRes|

; 3539 :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;

  07cf8	e3a0313b	 mov         r3, #0x3B, 2
  07cfc	e58d3010	 str         r3, [sp, #0x10]
  07d00	ea000034	 b           |$LN6@ContextRes|

; 3540 :         goto cleanUp;

  07d04	ea000033	 b           |$cleanUp$43745|
  07d08		 |$LN7@ContextRes|

; 3541 :     }
; 3542 : 
; 3543 : 	// Perform SOC-specific configuration
; 3544 : 	SocSdhcDevconf(m_dwSlot);

  07d08	e59d3034	 ldr         r3, [sp, #0x34]
  07d0c	e2833e17	 add         r3, r3, #0x17, 28
  07d10	e5930000	 ldr         r0, [r3]
  07d14	eb000000	 bl          SocSdhcDevconf

; 3545 : 
; 3546 :     fHardwareInitialized = TRUE;

  07d18	e3a03001	 mov         r3, #1
  07d1c	e58d300c	 str         r3, [sp, #0xC]

; 3547 : 
; 3548 :     // Initialize the slot
; 3549 :     SoftwareReset(SOFT_RESET_ALL);

  07d20	e3a01401	 mov         r1, #1, 8
  07d24	e59d0034	 ldr         r0, [sp, #0x34]
  07d28	eb000000	 bl          |?SoftwareReset@CSDIOControllerBase@@QAAXK@Z|

; 3550 : 
; 3551 : 	// Allow time for card to power down after a device reset
; 3552 :     StallExecution(10000);

  07d2c	e3a00c27	 mov         r0, #0x27, 24
  07d30	e3800010	 orr         r0, r0, #0x10
  07d34	eb000000	 bl          StallExecution

; 3553 : 
; 3554 :     dwClockRate = m_sContext.dwClockRate;

  07d38	e59d3034	 ldr         r3, [sp, #0x34]
  07d3c	e2833c02	 add         r3, r3, #2, 24
  07d40	e5933000	 ldr         r3, [r3]
  07d44	e58d3000	 str         r3, [sp]

; 3555 : 
; 3556 :     OUTREG32(&m_pbRegisters->MMCHS_CON, 0x01 << 7); // CDP

  07d48	e59d3034	 ldr         r3, [sp, #0x34]
  07d4c	e2833f57	 add         r3, r3, #0x57, 30
  07d50	e5933000	 ldr         r3, [r3]
  07d54	e283202c	 add         r2, r3, #0x2C
  07d58	e3a03080	 mov         r3, #0x80
  07d5c	e5823000	 str         r3, [r2]

; 3557 :     SetSDVSVoltage();

  07d60	e59d0034	 ldr         r0, [sp, #0x34]
  07d64	eb000000	 bl          |?SetSDVSVoltage@CSDIOControllerBase@@QAAXXZ|

; 3558 :     SetSDInterfaceMode(m_sContext.eInterfaceMode);

  07d68	e59d3034	 ldr         r3, [sp, #0x34]
  07d6c	e2833f82	 add         r3, r3, #0x82, 30
  07d70	e5931000	 ldr         r1, [r3]
  07d74	e59d0034	 ldr         r0, [sp, #0x34]
  07d78	eb000000	 bl          |?SetSDInterfaceMode@CSDIOControllerBase@@IAAXW4SD_INTERFACE_MODE@@@Z|

; 3559 :     SetClockRate(&dwClockRate);

  07d7c	e28d1000	 add         r1, sp, #0
  07d80	e59d0034	 ldr         r0, [sp, #0x34]
  07d84	eb000000	 bl          |?SetClockRate@CSDIOControllerBase@@QAAXPAK@Z|

; 3560 : 
; 3561 :     switch (m_sContext.eSDHCIntr)

  07d88	e59d3034	 ldr         r3, [sp, #0x34]
  07d8c	e2833f81	 add         r3, r3, #0x81, 30
  07d90	e5933000	 ldr         r3, [r3]
  07d94	e58d3024	 str         r3, [sp, #0x24]
  07d98	e59d3024	 ldr         r3, [sp, #0x24]
  07d9c	e3530001	 cmp         r3, #1
  07da0	0a000003	 beq         |$LN3@ContextRes|
  07da4	e59d3024	 ldr         r3, [sp, #0x24]
  07da8	e3530002	 cmp         r3, #2
  07dac	0a000003	 beq         |$LN2@ContextRes|
  07db0	ea000004	 b           |$LN4@ContextRes|
  07db4		 |$LN3@ContextRes|

; 3562 :         {
; 3563 :         case SDHC_MMC_INTR_ENABLED:
; 3564 :             EnableSDHCInterrupts();

  07db4	e59d0034	 ldr         r0, [sp, #0x34]
  07db8	eb000000	 bl          |?EnableSDHCInterrupts@CSDIOControllerBase@@QAAXXZ|

; 3565 :             break;

  07dbc	ea000001	 b           |$LN4@ContextRes|
  07dc0		 |$LN2@ContextRes|

; 3566 : 
; 3567 :         case SDHC_SDIO_INTR_ENABLED:
; 3568 :             EnableSDIOInterrupts();

  07dc0	e59d0034	 ldr         r0, [sp, #0x34]
  07dc4	eb000000	 bl          |?EnableSDIOInterrupts@CSDIOControllerBase@@QAAXXZ|
  07dc8		 |$LN4@ContextRes|

; 3569 :             break;
; 3570 :         }
; 3571 : 
; 3572 :     fRegisteredWithBusDriver = TRUE;

  07dc8	e3a03001	 mov         r3, #1
  07dcc	e58d3004	 str         r3, [sp, #4]

; 3573 : 
; 3574 :     bRet = TRUE;

  07dd0	e3a03001	 mov         r3, #1
  07dd4	e58d3008	 str         r3, [sp, #8]
  07dd8		 |$LN6@ContextRes|
  07dd8		 |$cleanUp$43745|

; 3575 : 
; 3576 : cleanUp:
; 3577 :     if ( (bRet == FALSE) && (m_pHCContext) )

  07dd8	e59d3008	 ldr         r3, [sp, #8]
  07ddc	e3530000	 cmp         r3, #0
  07de0	1a000008	 bne         |$LN1@ContextRes|
  07de4	e59d3034	 ldr         r3, [sp, #0x34]
  07de8	e28330a8	 add         r3, r3, #0xA8
  07dec	e5933000	 ldr         r3, [r3]
  07df0	e3530000	 cmp         r3, #0
  07df4	0a000003	 beq         |$LN1@ContextRes|

; 3578 :     {
; 3579 :         FreeHostContext( fRegisteredWithBusDriver, fHardwareInitialized );

  07df8	e59d200c	 ldr         r2, [sp, #0xC]
  07dfc	e59d1004	 ldr         r1, [sp, #4]
  07e00	e59d0034	 ldr         r0, [sp, #0x34]
  07e04	eb000000	 bl          |?FreeHostContext@CSDIOControllerBase@@QAAXHH@Z|
  07e08		 |$LN1@ContextRes|

; 3580 :     }
; 3581 :     DEBUGMSG(SHC_RESPONSE_ZONE, (L"CSDIOControllerBase:-ContextRestore\r\n"));

  07e08	e59f3040	 ldr         r3, [pc, #0x40]
  07e0c	e5933440	 ldr         r3, [r3, #0x440]
  07e10	e3130004	 tst         r3, #4
  07e14	0a000004	 beq         |$LN14@ContextRes|
  07e18	e59f002c	 ldr         r0, [pc, #0x2C]
  07e1c	eb000000	 bl          NKDbgPrintfW
  07e20	e3a03001	 mov         r3, #1
  07e24	e58d3028	 str         r3, [sp, #0x28]
  07e28	ea000001	 b           |$LN15@ContextRes|
  07e2c		 |$LN14@ContextRes|
  07e2c	e3a03000	 mov         r3, #0
  07e30	e58d3028	 str         r3, [sp, #0x28]
  07e34		 |$LN15@ContextRes|

; 3582 : 
; 3583 :     return bRet;

  07e34	e59d3008	 ldr         r3, [sp, #8]
  07e38	e58d3014	 str         r3, [sp, #0x14]

; 3584 : }

  07e3c	e59d0014	 ldr         r0, [sp, #0x14]
  07e40	e28dd02c	 add         sp, sp, #0x2C
  07e44	e89d6000	 ldmia       sp, {sp, lr}
  07e48	e12fff1e	 bx          lr
  07e4c		 |$LN19@ContextRes|
  07e4c		 |$LN20@ContextRes|
  07e4c	00000000	 DCD         |??_C@_1EM@GEDBDKPO@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?9?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAR?$AAe?$AAs?$AAt@|
  07e50		 |$LN21@ContextRes|
  07e50	00000000	 DCD         |dpCurSettings|
  07e54		 |$LN22@ContextRes|
  07e54	00000000	 DCD         |??_C@_1HK@CPFPCLOF@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?3?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc@|
  07e58		 |$LN23@ContextRes|
  07e58	00000000	 DCD         |??_C@_1EM@KNPBMNAC@?$AAC?$AAS?$AAD?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AAB?$AAa?$AAs?$AAe?$AA?3?$AA?$CL?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAR?$AAe?$AAs?$AAt@|
  07e5c		 |$M46245|

			 ENDP  ; |?ContextRestore@CSDIOControllerBase@@QAAHXZ|, CSDIOControllerBase::ContextRestore

	EXPORT	|??_C@_1GK@EBPKPBPE@?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAU?$AAn?$AAr?$AAe?$AAc?$AAo?$AAg?$AAn?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1MA@JCIHJGJJ@?$AAG?$AAe?$AAt?$AAC?$AAm?$AAd?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?$FL?$AA?$CF?$AA0?$AA2?$AAx?$AA?$CF?$AA0?$AA2@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@PGNALOFJ@?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAR?$AA5?$AA?5?$AAR?$AA6?$AA?5?$AA?3?$AA?5?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@KBDGJBCC@?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AAR?$AA5?$AA?5?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AAR?$AA6?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@GKFBNMGP@?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AAR?$AA3?$AA?5?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AAR?$AA4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@LCGNLPP@?$AAG?$AAe?$AAt?$AAC?$AAm?$AAd?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?$FL?$AA?$CF?$AA0?$AA2?$AAx?$AA?$CF?$AA0?$AA2@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IC@EEIPHINM@?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAR?$AA1?$AA?5?$AAR?$AA1?$AAb?$AA?5?$AA?3?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@EACLDLBO@?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAM?$AAM?$AAC?$AA_?$AAS?$AAT?$AAA?$AAT?$AA?5@| [ DATA ] ; `string'

  00200			 AREA	 |.pdata|, PDATA
|$T46317| DCD	|$LN45@GetCommand|
	DCD	0x40023304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@EBPKPBPE@?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAU?$AAn?$AAr?$AAe?$AAc?$AAo?$AAg?$AAn?$AAi@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "R", 0x0, "e", 0x0, "s"
	DCB	0x0, "p", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, "e", 0x0, "("
	DCB	0x0, ")", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "U", 0x0, "n"
	DCB	0x0, "r", 0x0, "e", 0x0, "c", 0x0, "o", 0x0, "g", 0x0, "n"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n", 0x0, "s"
	DCB	0x0, "e", 0x0, " ", 0x0, "t", 0x0, "y", 0x0, "p", 0x0, "e"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1MA@JCIHJGJJ@?$AAG?$AAe?$AAt?$AAC?$AAm?$AAd?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?$FL?$AA?$CF?$AA0?$AA2?$AAx?$AA?$CF?$AA0?$AA2@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "C", 0x0, "m", 0x0, "d", 0x0, "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n", 0x0, "s"
	DCB	0x0, "e", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u"
	DCB	0x0, "r", 0x0, "n", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "["
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "x", 0x0, " ", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, " ", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "x", 0x0, "]", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@PGNALOFJ@?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAR?$AA5?$AA?5?$AAR?$AA6?$AA?5?$AA?3?$AA?5?$AA0@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "R", 0x0, "e", 0x0, "s"
	DCB	0x0, "p", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, "e", 0x0, "("
	DCB	0x0, ")", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "R", 0x0, "5"
	DCB	0x0, " ", 0x0, "R", 0x0, "6", 0x0, " ", 0x0, ":", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@KBDGJBCC@?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AAR?$AA5?$AA?5?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AAR?$AA6?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n", 0x0, "s"
	DCB	0x0, "e", 0x0, "R", 0x0, "5", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, "e"
	DCB	0x0, "R", 0x0, "6", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@GKFBNMGP@?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AAR?$AA3?$AA?5?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AAR?$AA4?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n", 0x0, "s"
	DCB	0x0, "e", 0x0, "R", 0x0, "3", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, "e"
	DCB	0x0, "R", 0x0, "4", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@LCGNLPP@?$AAG?$AAe?$AAt?$AAC?$AAm?$AAd?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?$FL?$AA?$CF?$AA0?$AA2?$AAx?$AA?$CF?$AA0?$AA2@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "C", 0x0, "m", 0x0, "d", 0x0, "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "p", 0x0, "o", 0x0, "n", 0x0, "s"
	DCB	0x0, "e", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u"
	DCB	0x0, "r", 0x0, "n", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "["
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, "]", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@EEIPHINM@?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAR?$AA1?$AA?5?$AAR?$AA1?$AAb?$AA?5?$AA?3?$AA?5@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "R", 0x0, "e", 0x0, "s"
	DCB	0x0, "p", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, "e", 0x0, "("
	DCB	0x0, ")", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "R", 0x0, "1"
	DCB	0x0, " ", 0x0, "R", 0x0, "1", 0x0, "b", 0x0, " ", 0x0, ":"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@EACLDLBO@?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAM?$AAM?$AAC?$AA_?$AAS?$AAT?$AAA?$AAT?$AA?5@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "R", 0x0, "e", 0x0, "s"
	DCB	0x0, "p", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, "e", 0x0, "("
	DCB	0x0, ")", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "M", 0x0, "M"
	DCB	0x0, "C", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  07e5c			 AREA	 |.text|, CODE, ARM

  07e5c		 |?GetCommandResponse@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z| PROC ; CSDIOControllerBase::GetCommandResponse

; 3593 : {

  07e5c		 |$LN45@GetCommand|
  07e5c	e1a0c00d	 mov         r12, sp
  07e60	e92d0003	 stmdb       sp!, {r0, r1}
  07e64	e92d5000	 stmdb       sp!, {r12, lr}
  07e68	e24dd0e4	 sub         sp, sp, #0xE4
  07e6c		 |$M46314|

; 3594 :     DWORD  dwRegVal;
; 3595 :     PUCHAR  respBuff;       // response buffer
; 3596 :     DWORD dwRSP;
; 3597 : 
; 3598 :     dwRegVal = Read_MMC_STAT();

  07e6c	e59d00ec	 ldr         r0, [sp, #0xEC]
  07e70	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  07e74	e58d00b4	 str         r0, [sp, #0xB4]
  07e78	e59d30b4	 ldr         r3, [sp, #0xB4]
  07e7c	e58d3038	 str         r3, [sp, #0x38]

; 3599 : 
; 3600 :     DEBUGMSG(SHC_RESPONSE_ZONE, (TEXT("GetCommandResponse() - MMC_STAT = 0x%08X.\r\n"), dwRegVal));

  07e80	e59f3880	 ldr         r3, [pc, #0x880]
  07e84	e5933440	 ldr         r3, [r3, #0x440]
  07e88	e3130004	 tst         r3, #4
  07e8c	0a000005	 beq         |$LN12@GetCommand|
  07e90	e59d1038	 ldr         r1, [sp, #0x38]
  07e94	e59f0888	 ldr         r0, [pc, #0x888]
  07e98	eb000000	 bl          NKDbgPrintfW
  07e9c	e3a03001	 mov         r3, #1
  07ea0	e58d30b8	 str         r3, [sp, #0xB8]
  07ea4	ea000001	 b           |$LN13@GetCommand|
  07ea8		 |$LN12@GetCommand|
  07ea8	e3a03000	 mov         r3, #0
  07eac	e58d30b8	 str         r3, [sp, #0xB8]
  07eb0		 |$LN13@GetCommand|

; 3601 : 
; 3602 : 
; 3603 :     if ( dwRegVal & (MMCHS_STAT_CC | MMCHS_STAT_CERR | MMCHS_STAT_CCRC))

  07eb0	e59d2038	 ldr         r2, [sp, #0x38]
  07eb4	e3a03211	 mov         r3, #0x11, 4
  07eb8	e3833802	 orr         r3, r3, #2, 16
  07ebc	e1120003	 tst         r2, r3
  07ec0	0a000209	 beq         |$LN9@GetCommand|

; 3604 :     {
; 3605 :         respBuff = pRequest->CommandResponse.ResponseBuffer;

  07ec4	e59d30f0	 ldr         r3, [sp, #0xF0]
  07ec8	e2833020	 add         r3, r3, #0x20
  07ecc	e58d303c	 str         r3, [sp, #0x3C]

; 3606 : 
; 3607 :         switch(pRequest->CommandResponse.ResponseType)

  07ed0	e59d30f0	 ldr         r3, [sp, #0xF0]
  07ed4	e283301c	 add         r3, r3, #0x1C
  07ed8	e5933000	 ldr         r3, [r3]
  07edc	e58d30bc	 str         r3, [sp, #0xBC]
  07ee0	e59d30bc	 ldr         r3, [sp, #0xBC]
  07ee4	e3530008	 cmp         r3, #8
  07ee8	8a0001f4	 bhi         |$LN1@GetCommand|
  07eec	e59d20bc	 ldr         r2, [sp, #0xBC]
  07ef0	e1a03102	 mov         r3, r2, lsl #2
  07ef4	e083300f	 add         r3, r3, pc
  07ef8	e5933004	 ldr         r3, [r3, #4]
  07efc	e08ff003	 add         pc, pc, r3
  07f00		 |$LN33@GetCommand|
  07f00		 |$LN32@GetCommand|
  07f00		 |$LN34@GetCommand|
  07f00	00000020	 DCD         0x20
  07f04		 |$LN35@GetCommand|
  07f04	00000024	 DCD         0x24
  07f08		 |$LN36@GetCommand|
  07f08	00000024	 DCD         0x24
  07f0c		 |$LN37@GetCommand|
  07f0c	000004c0	 DCD         0x4c0
  07f10		 |$LN38@GetCommand|
  07f10	000001bc	 DCD         0x1bc
  07f14		 |$LN39@GetCommand|
  07f14	000001bc	 DCD         0x1bc
  07f18		 |$LN40@GetCommand|
  07f18	000002fc	 DCD         0x2fc
  07f1c		 |$LN41@GetCommand|
  07f1c	000002fc	 DCD         0x2fc
  07f20		 |$LN42@GetCommand|
  07f20	000001bc	 DCD         0x1bc
  07f24		 |$LN6@GetCommand|

; 3608 :         {
; 3609 :         case NoResponse:
; 3610 :             break;

  07f24	ea0001f0	 b           |$LN7@GetCommand|
  07f28		 |$LN5@GetCommand|

; 3611 : 
; 3612 :         case ResponseR1:
; 3613 :         case ResponseR1b:
; 3614 :             //--- SHORT RESPONSE (48 bits total)---
; 3615 :             // Format: { START_BIT(1) | TRANSMISSION_BIT(1) | COMMAND_INDEX(6) | CARD_STATUS(32) | CRC7(7) | END_BIT(1) }
; 3616 :             // NOTE: START_BIT and TRANSMISSION_BIT = 0, END_BIT = 1
; 3617 :             //
; 3618 :             // Dummy byte needed by calling function.
; 3619 :             *respBuff = (BYTE)(START_BIT | TRANSMISSION_BIT | pRequest->CommandCode);

  07f28	e59d30f0	 ldr         r3, [sp, #0xF0]
  07f2c	e2833014	 add         r3, r3, #0x14
  07f30	e5d32000	 ldrb        r2, [r3]
  07f34	e59d303c	 ldr         r3, [sp, #0x3C]
  07f38	e5c32000	 strb        r2, [r3]

; 3620 : 
; 3621 :             dwRSP = INREG32(&m_pbRegisters->MMCHS_RSP10);

  07f3c	e59d30ec	 ldr         r3, [sp, #0xEC]
  07f40	e2833f57	 add         r3, r3, #0x57, 30
  07f44	e5933000	 ldr         r3, [r3]
  07f48	e2833e11	 add         r3, r3, #0x11, 28
  07f4c	e5933000	 ldr         r3, [r3]
  07f50	e58d3034	 str         r3, [sp, #0x34]

; 3622 : 
; 3623 :             *(respBuff + 1) = (BYTE)(dwRSP & 0xFF);

  07f54	e59d3034	 ldr         r3, [sp, #0x34]
  07f58	e20330ff	 and         r3, r3, #0xFF
  07f5c	e20320ff	 and         r2, r3, #0xFF
  07f60	e59d303c	 ldr         r3, [sp, #0x3C]
  07f64	e2833001	 add         r3, r3, #1
  07f68	e5c32000	 strb        r2, [r3]

; 3624 :             *(respBuff + 2) = (BYTE)(dwRSP >> 8);

  07f6c	e59d3034	 ldr         r3, [sp, #0x34]
  07f70	e1a03423	 mov         r3, r3, lsr #8
  07f74	e20320ff	 and         r2, r3, #0xFF
  07f78	e59d303c	 ldr         r3, [sp, #0x3C]
  07f7c	e2833002	 add         r3, r3, #2
  07f80	e5c32000	 strb        r2, [r3]

; 3625 :             *(respBuff + 3) = (BYTE)(dwRSP >> 16);

  07f84	e59d3034	 ldr         r3, [sp, #0x34]
  07f88	e1a03823	 mov         r3, r3, lsr #16
  07f8c	e20320ff	 and         r2, r3, #0xFF
  07f90	e59d303c	 ldr         r3, [sp, #0x3C]
  07f94	e2833003	 add         r3, r3, #3
  07f98	e5c32000	 strb        r2, [r3]

; 3626 :             *(respBuff + 4) = (BYTE)(dwRSP >> 24);

  07f9c	e59d3034	 ldr         r3, [sp, #0x34]
  07fa0	e1a03c23	 mov         r3, r3, lsr #24
  07fa4	e20320ff	 and         r2, r3, #0xFF
  07fa8	e59d303c	 ldr         r3, [sp, #0x3C]
  07fac	e2833004	 add         r3, r3, #4
  07fb0	e5c32000	 strb        r2, [r3]

; 3627 : 
; 3628 : 
; 3629 :             *(respBuff + 5) = (BYTE)(END_RESERVED | END_BIT);

  07fb4	e59d303c	 ldr         r3, [sp, #0x3C]
  07fb8	e2832005	 add         r2, r3, #5
  07fbc	e3a030ff	 mov         r3, #0xFF
  07fc0	e5c23000	 strb        r3, [r2]

; 3630 : 
; 3631 :             DEBUGMSG(SHC_RESPONSE_ZONE, (TEXT("GetCommandResponse() - R1 R1b : 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x \r\n"), *(respBuff + 0),
; 3632 :                 *(respBuff + 1), *(respBuff + 2), *(respBuff + 3), *(respBuff + 4), *(respBuff + 5)));

  07fc4	e59f373c	 ldr         r3, [pc, #0x73C]
  07fc8	e5933440	 ldr         r3, [r3, #0x440]
  07fcc	e3130004	 tst         r3, #4
  07fd0	0a000018	 beq         |$LN14@GetCommand|
  07fd4	e59d303c	 ldr         r3, [sp, #0x3C]
  07fd8	e2833005	 add         r3, r3, #5
  07fdc	e5d33000	 ldrb        r3, [r3]
  07fe0	e58d3008	 str         r3, [sp, #8]
  07fe4	e59d303c	 ldr         r3, [sp, #0x3C]
  07fe8	e2833004	 add         r3, r3, #4
  07fec	e5d33000	 ldrb        r3, [r3]
  07ff0	e58d3004	 str         r3, [sp, #4]
  07ff4	e59d303c	 ldr         r3, [sp, #0x3C]
  07ff8	e2833003	 add         r3, r3, #3
  07ffc	e5d33000	 ldrb        r3, [r3]
  08000	e58d3000	 str         r3, [sp]
  08004	e59d303c	 ldr         r3, [sp, #0x3C]
  08008	e2833002	 add         r3, r3, #2
  0800c	e5d33000	 ldrb        r3, [r3]
  08010	e59d203c	 ldr         r2, [sp, #0x3C]
  08014	e2822001	 add         r2, r2, #1
  08018	e5d22000	 ldrb        r2, [r2]
  0801c	e59d103c	 ldr         r1, [sp, #0x3C]
  08020	e5d11000	 ldrb        r1, [r1]
  08024	e59f06f4	 ldr         r0, [pc, #0x6F4]
  08028	eb000000	 bl          NKDbgPrintfW
  0802c	e3a03001	 mov         r3, #1
  08030	e58d30c0	 str         r3, [sp, #0xC0]
  08034	ea000001	 b           |$LN15@GetCommand|
  08038		 |$LN14@GetCommand|
  08038	e3a03000	 mov         r3, #0
  0803c	e58d30c0	 str         r3, [sp, #0xC0]
  08040		 |$LN15@GetCommand|

; 3633 :             DEBUGMSG (SHC_SDBUS_INTERACT_ZONE,(TEXT("GetCmdResponse returned [%02x%02x%02x%02x%02x]\r\n"),
; 3634 :                 respBuff[0], respBuff[1], respBuff[2], respBuff[3], respBuff[4], respBuff[5] ));

  08040	e59f36c0	 ldr         r3, [pc, #0x6C0]
  08044	e5933440	 ldr         r3, [r3, #0x440]
  08048	e3130040	 tst         r3, #0x40
  0804c	0a000018	 beq         |$LN16@GetCommand|
  08050	e59d303c	 ldr         r3, [sp, #0x3C]
  08054	e2833005	 add         r3, r3, #5
  08058	e5d33000	 ldrb        r3, [r3]
  0805c	e58d3008	 str         r3, [sp, #8]
  08060	e59d303c	 ldr         r3, [sp, #0x3C]
  08064	e2833004	 add         r3, r3, #4
  08068	e5d33000	 ldrb        r3, [r3]
  0806c	e58d3004	 str         r3, [sp, #4]
  08070	e59d303c	 ldr         r3, [sp, #0x3C]
  08074	e2833003	 add         r3, r3, #3
  08078	e5d33000	 ldrb        r3, [r3]
  0807c	e58d3000	 str         r3, [sp]
  08080	e59d303c	 ldr         r3, [sp, #0x3C]
  08084	e2833002	 add         r3, r3, #2
  08088	e5d33000	 ldrb        r3, [r3]
  0808c	e59d203c	 ldr         r2, [sp, #0x3C]
  08090	e2822001	 add         r2, r2, #1
  08094	e5d22000	 ldrb        r2, [r2]
  08098	e59d103c	 ldr         r1, [sp, #0x3C]
  0809c	e5d11000	 ldrb        r1, [r1]
  080a0	e59f0668	 ldr         r0, [pc, #0x668]
  080a4	eb000000	 bl          NKDbgPrintfW
  080a8	e3a03001	 mov         r3, #1
  080ac	e58d30c4	 str         r3, [sp, #0xC4]
  080b0	ea000001	 b           |$LN17@GetCommand|
  080b4		 |$LN16@GetCommand|
  080b4	e3a03000	 mov         r3, #0
  080b8	e58d30c4	 str         r3, [sp, #0xC4]
  080bc		 |$LN17@GetCommand|

; 3635 : #ifdef ENABLE_RETAIL_OUTPUT
; 3636 :             RETAILMSG (1,(TEXT("GetCmdResponse returned [%02x%02x%02x%02x%02x]\r\n"),
; 3637 :                 respBuff[0], respBuff[1], respBuff[2], respBuff[3], respBuff[4], respBuff[5] ));
; 3638 : #endif
; 3639 :             break;

  080bc	ea00018a	 b           |$LN7@GetCommand|
  080c0		 |$LN4@GetCommand|

; 3640 : 
; 3641 :         case ResponseR3:
; 3642 :         case ResponseR4:
; 3643 :         case ResponseR7:
; 3644 :             DEBUGMSG(SHC_RESPONSE_ZONE, (TEXT("ResponseR3 ResponseR4\r\n")));

  080c0	e59f3640	 ldr         r3, [pc, #0x640]
  080c4	e5933440	 ldr         r3, [r3, #0x440]
  080c8	e3130004	 tst         r3, #4
  080cc	0a000004	 beq         |$LN18@GetCommand|
  080d0	e59f0644	 ldr         r0, [pc, #0x644]
  080d4	eb000000	 bl          NKDbgPrintfW
  080d8	e3a03001	 mov         r3, #1
  080dc	e58d30c8	 str         r3, [sp, #0xC8]
  080e0	ea000001	 b           |$LN19@GetCommand|
  080e4		 |$LN18@GetCommand|
  080e4	e3a03000	 mov         r3, #0
  080e8	e58d30c8	 str         r3, [sp, #0xC8]
  080ec		 |$LN19@GetCommand|

; 3645 :             //--- SHORT RESPONSE (48 bits total)---
; 3646 :             // Format: { START_BIT(1) | TRANSMISSION_BIT(1) | RESERVED(6) | CARD_STATUS(32) | RESERVED(7) | END_BIT(1) }
; 3647 :             //
; 3648 :             *respBuff = (BYTE)(START_BIT | TRANSMISSION_BIT | START_RESERVED);

  080ec	e59d203c	 ldr         r2, [sp, #0x3C]
  080f0	e3a0303f	 mov         r3, #0x3F
  080f4	e5c23000	 strb        r3, [r2]

; 3649 : 
; 3650 :             dwRSP = INREG32(&m_pbRegisters->MMCHS_RSP10);

  080f8	e59d30ec	 ldr         r3, [sp, #0xEC]
  080fc	e2833f57	 add         r3, r3, #0x57, 30
  08100	e5933000	 ldr         r3, [r3]
  08104	e2833e11	 add         r3, r3, #0x11, 28
  08108	e5933000	 ldr         r3, [r3]
  0810c	e58d3034	 str         r3, [sp, #0x34]

; 3651 : 
; 3652 :             *(respBuff + 1) = (BYTE)(dwRSP & 0xFF);

  08110	e59d3034	 ldr         r3, [sp, #0x34]
  08114	e20330ff	 and         r3, r3, #0xFF
  08118	e20320ff	 and         r2, r3, #0xFF
  0811c	e59d303c	 ldr         r3, [sp, #0x3C]
  08120	e2833001	 add         r3, r3, #1
  08124	e5c32000	 strb        r2, [r3]

; 3653 :             *(respBuff + 2) = (BYTE)(dwRSP >> 8);

  08128	e59d3034	 ldr         r3, [sp, #0x34]
  0812c	e1a03423	 mov         r3, r3, lsr #8
  08130	e20320ff	 and         r2, r3, #0xFF
  08134	e59d303c	 ldr         r3, [sp, #0x3C]
  08138	e2833002	 add         r3, r3, #2
  0813c	e5c32000	 strb        r2, [r3]

; 3654 :             *(respBuff + 3) = (BYTE)(dwRSP >> 16);

  08140	e59d3034	 ldr         r3, [sp, #0x34]
  08144	e1a03823	 mov         r3, r3, lsr #16
  08148	e20320ff	 and         r2, r3, #0xFF
  0814c	e59d303c	 ldr         r3, [sp, #0x3C]
  08150	e2833003	 add         r3, r3, #3
  08154	e5c32000	 strb        r2, [r3]

; 3655 :             *(respBuff + 4) = (BYTE)(dwRSP >> 24);

  08158	e59d3034	 ldr         r3, [sp, #0x34]
  0815c	e1a03c23	 mov         r3, r3, lsr #24
  08160	e20320ff	 and         r2, r3, #0xFF
  08164	e59d303c	 ldr         r3, [sp, #0x3C]
  08168	e2833004	 add         r3, r3, #4
  0816c	e5c32000	 strb        r2, [r3]

; 3656 : 
; 3657 :             *(respBuff + 5) = (BYTE)(END_RESERVED | END_BIT);

  08170	e59d303c	 ldr         r3, [sp, #0x3C]
  08174	e2832005	 add         r2, r3, #5
  08178	e3a030ff	 mov         r3, #0xFF
  0817c	e5c23000	 strb        r3, [r2]

; 3658 : 
; 3659 :             DEBUGMSG (SHC_SDBUS_INTERACT_ZONE,(TEXT("GetCmdResponse returned [%02x%02x%02x%02x%02x]\r\n"),
; 3660 :                 respBuff[0], respBuff[1], respBuff[2], respBuff[3], respBuff[4], respBuff[5] ));

  08180	e59f3580	 ldr         r3, [pc, #0x580]
  08184	e5933440	 ldr         r3, [r3, #0x440]
  08188	e3130040	 tst         r3, #0x40
  0818c	0a000018	 beq         |$LN20@GetCommand|
  08190	e59d303c	 ldr         r3, [sp, #0x3C]
  08194	e2833005	 add         r3, r3, #5
  08198	e5d33000	 ldrb        r3, [r3]
  0819c	e58d3008	 str         r3, [sp, #8]
  081a0	e59d303c	 ldr         r3, [sp, #0x3C]
  081a4	e2833004	 add         r3, r3, #4
  081a8	e5d33000	 ldrb        r3, [r3]
  081ac	e58d3004	 str         r3, [sp, #4]
  081b0	e59d303c	 ldr         r3, [sp, #0x3C]
  081b4	e2833003	 add         r3, r3, #3
  081b8	e5d33000	 ldrb        r3, [r3]
  081bc	e58d3000	 str         r3, [sp]
  081c0	e59d303c	 ldr         r3, [sp, #0x3C]
  081c4	e2833002	 add         r3, r3, #2
  081c8	e5d33000	 ldrb        r3, [r3]
  081cc	e59d203c	 ldr         r2, [sp, #0x3C]
  081d0	e2822001	 add         r2, r2, #1
  081d4	e5d22000	 ldrb        r2, [r2]
  081d8	e59d103c	 ldr         r1, [sp, #0x3C]
  081dc	e5d11000	 ldrb        r1, [r1]
  081e0	e59f0528	 ldr         r0, [pc, #0x528]
  081e4	eb000000	 bl          NKDbgPrintfW
  081e8	e3a03001	 mov         r3, #1
  081ec	e58d30cc	 str         r3, [sp, #0xCC]
  081f0	ea000001	 b           |$LN21@GetCommand|
  081f4		 |$LN20@GetCommand|
  081f4	e3a03000	 mov         r3, #0
  081f8	e58d30cc	 str         r3, [sp, #0xCC]
  081fc		 |$LN21@GetCommand|

; 3661 : #ifdef ENABLE_RETAIL_OUTPUT
; 3662 :             RETAILMSG (1,(TEXT("GetCmdResponse returned [%02x%02x%02x%02x%02x]\r\n"),
; 3663 :                 respBuff[0], respBuff[1], respBuff[2], respBuff[3], respBuff[4], respBuff[5] ));
; 3664 : #endif
; 3665 :             break;

  081fc	ea00013a	 b           |$LN7@GetCommand|
  08200		 |$LN3@GetCommand|

; 3666 : 
; 3667 :         case ResponseR5:
; 3668 :         case ResponseR6:
; 3669 :             DEBUGMSG(SHC_RESPONSE_ZONE, (TEXT("ResponseR5 ResponseR6\r\n")));

  08200	e59f3500	 ldr         r3, [pc, #0x500]
  08204	e5933440	 ldr         r3, [r3, #0x440]
  08208	e3130004	 tst         r3, #4
  0820c	0a000004	 beq         |$LN22@GetCommand|
  08210	e59f0500	 ldr         r0, [pc, #0x500]
  08214	eb000000	 bl          NKDbgPrintfW
  08218	e3a03001	 mov         r3, #1
  0821c	e58d30d0	 str         r3, [sp, #0xD0]
  08220	ea000001	 b           |$LN23@GetCommand|
  08224		 |$LN22@GetCommand|
  08224	e3a03000	 mov         r3, #0
  08228	e58d30d0	 str         r3, [sp, #0xD0]
  0822c		 |$LN23@GetCommand|

; 3670 :             //--- SHORT RESPONSE (48 bits total)---
; 3671 :             // Format: { START_BIT(1) | TRANSMISSION_BIT(1) | COMMAND_INDEX(6) | RCA(16) | CARD_STATUS(16) | CRC7(7) | END_BIT(1) }
; 3672 :             //
; 3673 :             *respBuff = (BYTE)(START_BIT | TRANSMISSION_BIT | pRequest->CommandCode);

  0822c	e59d30f0	 ldr         r3, [sp, #0xF0]
  08230	e2833014	 add         r3, r3, #0x14
  08234	e5d32000	 ldrb        r2, [r3]
  08238	e59d303c	 ldr         r3, [sp, #0x3C]
  0823c	e5c32000	 strb        r2, [r3]

; 3674 : 
; 3675 :             dwRSP = INREG32(&m_pbRegisters->MMCHS_RSP10);

  08240	e59d30ec	 ldr         r3, [sp, #0xEC]
  08244	e2833f57	 add         r3, r3, #0x57, 30
  08248	e5933000	 ldr         r3, [r3]
  0824c	e2833e11	 add         r3, r3, #0x11, 28
  08250	e5933000	 ldr         r3, [r3]
  08254	e58d3034	 str         r3, [sp, #0x34]

; 3676 : 
; 3677 :             *(respBuff + 1) = (BYTE)(dwRSP & 0xFF);

  08258	e59d3034	 ldr         r3, [sp, #0x34]
  0825c	e20330ff	 and         r3, r3, #0xFF
  08260	e20320ff	 and         r2, r3, #0xFF
  08264	e59d303c	 ldr         r3, [sp, #0x3C]
  08268	e2833001	 add         r3, r3, #1
  0826c	e5c32000	 strb        r2, [r3]

; 3678 :             *(respBuff + 2) = (BYTE)(dwRSP >> 8);

  08270	e59d3034	 ldr         r3, [sp, #0x34]
  08274	e1a03423	 mov         r3, r3, lsr #8
  08278	e20320ff	 and         r2, r3, #0xFF
  0827c	e59d303c	 ldr         r3, [sp, #0x3C]
  08280	e2833002	 add         r3, r3, #2
  08284	e5c32000	 strb        r2, [r3]

; 3679 :             *(respBuff + 3) = (BYTE)(dwRSP >> 16);

  08288	e59d3034	 ldr         r3, [sp, #0x34]
  0828c	e1a03823	 mov         r3, r3, lsr #16
  08290	e20320ff	 and         r2, r3, #0xFF
  08294	e59d303c	 ldr         r3, [sp, #0x3C]
  08298	e2833003	 add         r3, r3, #3
  0829c	e5c32000	 strb        r2, [r3]

; 3680 :             *(respBuff + 4) = (BYTE)(dwRSP >> 24);

  082a0	e59d3034	 ldr         r3, [sp, #0x34]
  082a4	e1a03c23	 mov         r3, r3, lsr #24
  082a8	e20320ff	 and         r2, r3, #0xFF
  082ac	e59d303c	 ldr         r3, [sp, #0x3C]
  082b0	e2833004	 add         r3, r3, #4
  082b4	e5c32000	 strb        r2, [r3]

; 3681 : 
; 3682 :             *(respBuff + 5) = (BYTE)(END_BIT);

  082b8	e59d303c	 ldr         r3, [sp, #0x3C]
  082bc	e2832005	 add         r2, r3, #5
  082c0	e3a03001	 mov         r3, #1
  082c4	e5c23000	 strb        r3, [r2]

; 3683 : 
; 3684 :             DEBUGMSG(SHC_RESPONSE_ZONE, (TEXT("GetCommandResponse() - R5 R6 : 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n"), *(respBuff + 0),
; 3685 :                 *(respBuff + 1), *(respBuff + 2), *(respBuff + 3), *(respBuff + 4), *(respBuff + 5)));

  082c8	e59f3438	 ldr         r3, [pc, #0x438]
  082cc	e5933440	 ldr         r3, [r3, #0x440]
  082d0	e3130004	 tst         r3, #4
  082d4	0a000018	 beq         |$LN24@GetCommand|
  082d8	e59d303c	 ldr         r3, [sp, #0x3C]
  082dc	e2833005	 add         r3, r3, #5
  082e0	e5d33000	 ldrb        r3, [r3]
  082e4	e58d3008	 str         r3, [sp, #8]
  082e8	e59d303c	 ldr         r3, [sp, #0x3C]
  082ec	e2833004	 add         r3, r3, #4
  082f0	e5d33000	 ldrb        r3, [r3]
  082f4	e58d3004	 str         r3, [sp, #4]
  082f8	e59d303c	 ldr         r3, [sp, #0x3C]
  082fc	e2833003	 add         r3, r3, #3
  08300	e5d33000	 ldrb        r3, [r3]
  08304	e58d3000	 str         r3, [sp]
  08308	e59d303c	 ldr         r3, [sp, #0x3C]
  0830c	e2833002	 add         r3, r3, #2
  08310	e5d33000	 ldrb        r3, [r3]
  08314	e59d203c	 ldr         r2, [sp, #0x3C]
  08318	e2822001	 add         r2, r2, #1
  0831c	e5d22000	 ldrb        r2, [r2]
  08320	e59d103c	 ldr         r1, [sp, #0x3C]
  08324	e5d11000	 ldrb        r1, [r1]
  08328	e59f03e4	 ldr         r0, [pc, #0x3E4]
  0832c	eb000000	 bl          NKDbgPrintfW
  08330	e3a03001	 mov         r3, #1
  08334	e58d30d4	 str         r3, [sp, #0xD4]
  08338	ea000001	 b           |$LN25@GetCommand|
  0833c		 |$LN24@GetCommand|
  0833c	e3a03000	 mov         r3, #0
  08340	e58d30d4	 str         r3, [sp, #0xD4]
  08344		 |$LN25@GetCommand|

; 3686 : 
; 3687 :             DEBUGMSG (SHC_SDBUS_INTERACT_ZONE,(TEXT("GetCmdResponse returned [%02x%02x%02x%02x%02x]\r\n"),
; 3688 :                 respBuff[0], respBuff[1], respBuff[2], respBuff[3], respBuff[4], respBuff[5] ));

  08344	e59f33bc	 ldr         r3, [pc, #0x3BC]
  08348	e5933440	 ldr         r3, [r3, #0x440]
  0834c	e3130040	 tst         r3, #0x40
  08350	0a000018	 beq         |$LN26@GetCommand|
  08354	e59d303c	 ldr         r3, [sp, #0x3C]
  08358	e2833005	 add         r3, r3, #5
  0835c	e5d33000	 ldrb        r3, [r3]
  08360	e58d3008	 str         r3, [sp, #8]
  08364	e59d303c	 ldr         r3, [sp, #0x3C]
  08368	e2833004	 add         r3, r3, #4
  0836c	e5d33000	 ldrb        r3, [r3]
  08370	e58d3004	 str         r3, [sp, #4]
  08374	e59d303c	 ldr         r3, [sp, #0x3C]
  08378	e2833003	 add         r3, r3, #3
  0837c	e5d33000	 ldrb        r3, [r3]
  08380	e58d3000	 str         r3, [sp]
  08384	e59d303c	 ldr         r3, [sp, #0x3C]
  08388	e2833002	 add         r3, r3, #2
  0838c	e5d33000	 ldrb        r3, [r3]
  08390	e59d203c	 ldr         r2, [sp, #0x3C]
  08394	e2822001	 add         r2, r2, #1
  08398	e5d22000	 ldrb        r2, [r2]
  0839c	e59d103c	 ldr         r1, [sp, #0x3C]
  083a0	e5d11000	 ldrb        r1, [r1]
  083a4	e59f0364	 ldr         r0, [pc, #0x364]
  083a8	eb000000	 bl          NKDbgPrintfW
  083ac	e3a03001	 mov         r3, #1
  083b0	e58d30d8	 str         r3, [sp, #0xD8]
  083b4	ea000001	 b           |$LN27@GetCommand|
  083b8		 |$LN26@GetCommand|
  083b8	e3a03000	 mov         r3, #0
  083bc	e58d30d8	 str         r3, [sp, #0xD8]
  083c0		 |$LN27@GetCommand|

; 3689 : #ifdef ENABLE_RETAIL_OUTPUT
; 3690 :             RETAILMSG (1,(TEXT("GetCmdResponse returned [%02x%02x%02x%02x%02x]\r\n"),
; 3691 :                 respBuff[0], respBuff[1], respBuff[2], respBuff[3], respBuff[4], respBuff[5] ));
; 3692 : #endif
; 3693 :             break;

  083c0	ea0000c9	 b           |$LN7@GetCommand|
  083c4		 |$LN2@GetCommand|

; 3694 : 
; 3695 :         case ResponseR2:
; 3696 : 
; 3697 :             dwRSP = INREG32(&m_pbRegisters->MMCHS_RSP10);

  083c4	e59d30ec	 ldr         r3, [sp, #0xEC]
  083c8	e2833f57	 add         r3, r3, #0x57, 30
  083cc	e5933000	 ldr         r3, [r3]
  083d0	e2833e11	 add         r3, r3, #0x11, 28
  083d4	e5933000	 ldr         r3, [r3]
  083d8	e58d3034	 str         r3, [sp, #0x34]

; 3698 : 
; 3699 :             *(respBuff + 0) = (BYTE)(dwRSP & 0xFF);

  083dc	e59d3034	 ldr         r3, [sp, #0x34]
  083e0	e20330ff	 and         r3, r3, #0xFF
  083e4	e20320ff	 and         r2, r3, #0xFF
  083e8	e59d303c	 ldr         r3, [sp, #0x3C]
  083ec	e5c32000	 strb        r2, [r3]

; 3700 :             *(respBuff + 1) = (BYTE)(dwRSP >> 8);

  083f0	e59d3034	 ldr         r3, [sp, #0x34]
  083f4	e1a03423	 mov         r3, r3, lsr #8
  083f8	e20320ff	 and         r2, r3, #0xFF
  083fc	e59d303c	 ldr         r3, [sp, #0x3C]
  08400	e2833001	 add         r3, r3, #1
  08404	e5c32000	 strb        r2, [r3]

; 3701 :             *(respBuff + 2) = (BYTE)(dwRSP >> 16);

  08408	e59d3034	 ldr         r3, [sp, #0x34]
  0840c	e1a03823	 mov         r3, r3, lsr #16
  08410	e20320ff	 and         r2, r3, #0xFF
  08414	e59d303c	 ldr         r3, [sp, #0x3C]
  08418	e2833002	 add         r3, r3, #2
  0841c	e5c32000	 strb        r2, [r3]

; 3702 :             *(respBuff + 3) = (BYTE)(dwRSP >> 24);

  08420	e59d3034	 ldr         r3, [sp, #0x34]
  08424	e1a03c23	 mov         r3, r3, lsr #24
  08428	e20320ff	 and         r2, r3, #0xFF
  0842c	e59d303c	 ldr         r3, [sp, #0x3C]
  08430	e2833003	 add         r3, r3, #3
  08434	e5c32000	 strb        r2, [r3]

; 3703 : 
; 3704 :             dwRSP = INREG32(&m_pbRegisters->MMCHS_RSP32);

  08438	e59d30ec	 ldr         r3, [sp, #0xEC]
  0843c	e2833f57	 add         r3, r3, #0x57, 30
  08440	e5933000	 ldr         r3, [r3]
  08444	e2833f45	 add         r3, r3, #0x45, 30
  08448	e5933000	 ldr         r3, [r3]
  0844c	e58d3034	 str         r3, [sp, #0x34]

; 3705 : 
; 3706 :             *(respBuff + 4) = (BYTE)(dwRSP & 0xFF);

  08450	e59d3034	 ldr         r3, [sp, #0x34]
  08454	e20330ff	 and         r3, r3, #0xFF
  08458	e20320ff	 and         r2, r3, #0xFF
  0845c	e59d303c	 ldr         r3, [sp, #0x3C]
  08460	e2833004	 add         r3, r3, #4
  08464	e5c32000	 strb        r2, [r3]

; 3707 :             *(respBuff + 5) = (BYTE)(dwRSP >> 8);

  08468	e59d3034	 ldr         r3, [sp, #0x34]
  0846c	e1a03423	 mov         r3, r3, lsr #8
  08470	e20320ff	 and         r2, r3, #0xFF
  08474	e59d303c	 ldr         r3, [sp, #0x3C]
  08478	e2833005	 add         r3, r3, #5
  0847c	e5c32000	 strb        r2, [r3]

; 3708 :             *(respBuff + 6) = (BYTE)(dwRSP >> 16);

  08480	e59d3034	 ldr         r3, [sp, #0x34]
  08484	e1a03823	 mov         r3, r3, lsr #16
  08488	e20320ff	 and         r2, r3, #0xFF
  0848c	e59d303c	 ldr         r3, [sp, #0x3C]
  08490	e2833006	 add         r3, r3, #6
  08494	e5c32000	 strb        r2, [r3]

; 3709 :             *(respBuff + 7) = (BYTE)(dwRSP >> 24);

  08498	e59d3034	 ldr         r3, [sp, #0x34]
  0849c	e1a03c23	 mov         r3, r3, lsr #24
  084a0	e20320ff	 and         r2, r3, #0xFF
  084a4	e59d303c	 ldr         r3, [sp, #0x3C]
  084a8	e2833007	 add         r3, r3, #7
  084ac	e5c32000	 strb        r2, [r3]

; 3710 : 
; 3711 :             dwRSP = INREG32(&m_pbRegisters->MMCHS_RSP54);

  084b0	e59d30ec	 ldr         r3, [sp, #0xEC]
  084b4	e2833f57	 add         r3, r3, #0x57, 30
  084b8	e5933000	 ldr         r3, [r3]
  084bc	e2833f46	 add         r3, r3, #0x46, 30
  084c0	e5933000	 ldr         r3, [r3]
  084c4	e58d3034	 str         r3, [sp, #0x34]

; 3712 : 
; 3713 :             *(respBuff + 8) = (BYTE)(dwRSP & 0xFF);

  084c8	e59d3034	 ldr         r3, [sp, #0x34]
  084cc	e20330ff	 and         r3, r3, #0xFF
  084d0	e20320ff	 and         r2, r3, #0xFF
  084d4	e59d303c	 ldr         r3, [sp, #0x3C]
  084d8	e2833008	 add         r3, r3, #8
  084dc	e5c32000	 strb        r2, [r3]

; 3714 :             *(respBuff + 9) = (BYTE)(dwRSP >> 8);

  084e0	e59d3034	 ldr         r3, [sp, #0x34]
  084e4	e1a03423	 mov         r3, r3, lsr #8
  084e8	e20320ff	 and         r2, r3, #0xFF
  084ec	e59d303c	 ldr         r3, [sp, #0x3C]
  084f0	e2833009	 add         r3, r3, #9
  084f4	e5c32000	 strb        r2, [r3]

; 3715 :             *(respBuff + 10) = (BYTE)(dwRSP >> 16);

  084f8	e59d3034	 ldr         r3, [sp, #0x34]
  084fc	e1a03823	 mov         r3, r3, lsr #16
  08500	e20320ff	 and         r2, r3, #0xFF
  08504	e59d303c	 ldr         r3, [sp, #0x3C]
  08508	e283300a	 add         r3, r3, #0xA
  0850c	e5c32000	 strb        r2, [r3]

; 3716 :             *(respBuff + 11) = (BYTE)(dwRSP >> 24);

  08510	e59d3034	 ldr         r3, [sp, #0x34]
  08514	e1a03c23	 mov         r3, r3, lsr #24
  08518	e20320ff	 and         r2, r3, #0xFF
  0851c	e59d303c	 ldr         r3, [sp, #0x3C]
  08520	e283300b	 add         r3, r3, #0xB
  08524	e5c32000	 strb        r2, [r3]

; 3717 : 
; 3718 : 
; 3719 :             dwRSP = INREG32(&m_pbRegisters->MMCHS_RSP76);

  08528	e59d30ec	 ldr         r3, [sp, #0xEC]
  0852c	e2833f57	 add         r3, r3, #0x57, 30
  08530	e5933000	 ldr         r3, [r3]
  08534	e2833f47	 add         r3, r3, #0x47, 30
  08538	e5933000	 ldr         r3, [r3]
  0853c	e58d3034	 str         r3, [sp, #0x34]

; 3720 : 
; 3721 :             *(respBuff + 12) = (BYTE)(dwRSP & 0xFF);

  08540	e59d3034	 ldr         r3, [sp, #0x34]
  08544	e20330ff	 and         r3, r3, #0xFF
  08548	e20320ff	 and         r2, r3, #0xFF
  0854c	e59d303c	 ldr         r3, [sp, #0x3C]
  08550	e283300c	 add         r3, r3, #0xC
  08554	e5c32000	 strb        r2, [r3]

; 3722 :             *(respBuff + 13) = (BYTE)(dwRSP >> 8);

  08558	e59d3034	 ldr         r3, [sp, #0x34]
  0855c	e1a03423	 mov         r3, r3, lsr #8
  08560	e20320ff	 and         r2, r3, #0xFF
  08564	e59d303c	 ldr         r3, [sp, #0x3C]
  08568	e283300d	 add         r3, r3, #0xD
  0856c	e5c32000	 strb        r2, [r3]

; 3723 :             *(respBuff + 14) = (BYTE)(dwRSP >> 16);

  08570	e59d3034	 ldr         r3, [sp, #0x34]
  08574	e1a03823	 mov         r3, r3, lsr #16
  08578	e20320ff	 and         r2, r3, #0xFF
  0857c	e59d303c	 ldr         r3, [sp, #0x3C]
  08580	e283300e	 add         r3, r3, #0xE
  08584	e5c32000	 strb        r2, [r3]

; 3724 :             *(respBuff + 15) = (BYTE)(dwRSP >> 24);

  08588	e59d3034	 ldr         r3, [sp, #0x34]
  0858c	e1a03c23	 mov         r3, r3, lsr #24
  08590	e20320ff	 and         r2, r3, #0xFF
  08594	e59d303c	 ldr         r3, [sp, #0x3C]
  08598	e283300f	 add         r3, r3, #0xF
  0859c	e5c32000	 strb        r2, [r3]

; 3725 : 
; 3726 :             DEBUGMSG (SHC_SDBUS_INTERACT_ZONE,(TEXT("GetCmdResponse returned [%02x%02x%02x%02x %02x%02x%02x%02x %02x%02x%02x%02x %02x%02x%02x%02x]\r\n"),
; 3727 :                 respBuff[0], respBuff[1], respBuff[2], respBuff[3], respBuff[4], respBuff[5], respBuff[6], respBuff[7],
; 3728 :                 respBuff[8], respBuff[9], respBuff[10], respBuff[11], respBuff[12], respBuff[13], respBuff[14], respBuff[15]));

  085a0	e59f3160	 ldr         r3, [pc, #0x160]
  085a4	e5933440	 ldr         r3, [r3, #0x440]
  085a8	e3130040	 tst         r3, #0x40
  085ac	0a000040	 beq         |$LN28@GetCommand|
  085b0	e59d303c	 ldr         r3, [sp, #0x3C]
  085b4	e283300f	 add         r3, r3, #0xF
  085b8	e5d33000	 ldrb        r3, [r3]
  085bc	e58d3030	 str         r3, [sp, #0x30]
  085c0	e59d303c	 ldr         r3, [sp, #0x3C]
  085c4	e283300e	 add         r3, r3, #0xE
  085c8	e5d33000	 ldrb        r3, [r3]
  085cc	e58d302c	 str         r3, [sp, #0x2C]
  085d0	e59d303c	 ldr         r3, [sp, #0x3C]
  085d4	e283300d	 add         r3, r3, #0xD
  085d8	e5d33000	 ldrb        r3, [r3]
  085dc	e58d3028	 str         r3, [sp, #0x28]
  085e0	e59d303c	 ldr         r3, [sp, #0x3C]
  085e4	e283300c	 add         r3, r3, #0xC
  085e8	e5d33000	 ldrb        r3, [r3]
  085ec	e58d3024	 str         r3, [sp, #0x24]
  085f0	e59d303c	 ldr         r3, [sp, #0x3C]
  085f4	e283300b	 add         r3, r3, #0xB
  085f8	e5d33000	 ldrb        r3, [r3]
  085fc	e58d3020	 str         r3, [sp, #0x20]
  08600	e59d303c	 ldr         r3, [sp, #0x3C]
  08604	e283300a	 add         r3, r3, #0xA
  08608	e5d33000	 ldrb        r3, [r3]
  0860c	e58d301c	 str         r3, [sp, #0x1C]
  08610	e59d303c	 ldr         r3, [sp, #0x3C]
  08614	e2833009	 add         r3, r3, #9
  08618	e5d33000	 ldrb        r3, [r3]
  0861c	e58d3018	 str         r3, [sp, #0x18]
  08620	e59d303c	 ldr         r3, [sp, #0x3C]
  08624	e2833008	 add         r3, r3, #8
  08628	e5d33000	 ldrb        r3, [r3]
  0862c	e58d3014	 str         r3, [sp, #0x14]
  08630	e59d303c	 ldr         r3, [sp, #0x3C]
  08634	e2833007	 add         r3, r3, #7
  08638	e5d33000	 ldrb        r3, [r3]
  0863c	e58d3010	 str         r3, [sp, #0x10]
  08640	e59d303c	 ldr         r3, [sp, #0x3C]
  08644	e2833006	 add         r3, r3, #6
  08648	e5d33000	 ldrb        r3, [r3]
  0864c	e58d300c	 str         r3, [sp, #0xC]
  08650	e59d303c	 ldr         r3, [sp, #0x3C]
  08654	e2833005	 add         r3, r3, #5
  08658	e5d33000	 ldrb        r3, [r3]
  0865c	e58d3008	 str         r3, [sp, #8]
  08660	e59d303c	 ldr         r3, [sp, #0x3C]
  08664	e2833004	 add         r3, r3, #4
  08668	e5d33000	 ldrb        r3, [r3]
  0866c	e58d3004	 str         r3, [sp, #4]
  08670	e59d303c	 ldr         r3, [sp, #0x3C]
  08674	e2833003	 add         r3, r3, #3
  08678	e5d33000	 ldrb        r3, [r3]
  0867c	e58d3000	 str         r3, [sp]
  08680	e59d303c	 ldr         r3, [sp, #0x3C]
  08684	e2833002	 add         r3, r3, #2
  08688	e5d33000	 ldrb        r3, [r3]
  0868c	e59d203c	 ldr         r2, [sp, #0x3C]
  08690	e2822001	 add         r2, r2, #1
  08694	e5d22000	 ldrb        r2, [r2]
  08698	e59d103c	 ldr         r1, [sp, #0x3C]
  0869c	e5d11000	 ldrb        r1, [r1]
  086a0	e59f0064	 ldr         r0, [pc, #0x64]
  086a4	eb000000	 bl          NKDbgPrintfW
  086a8	e3a03001	 mov         r3, #1
  086ac	e58d30dc	 str         r3, [sp, #0xDC]
  086b0	ea000001	 b           |$LN29@GetCommand|
  086b4		 |$LN28@GetCommand|
  086b4	e3a03000	 mov         r3, #0
  086b8	e58d30dc	 str         r3, [sp, #0xDC]
  086bc		 |$LN29@GetCommand|

; 3729 : 
; 3730 : #ifdef ENABLE_RETAIL_OUTPUT
; 3731 :             RETAILMSG (1, (TEXT("GetCmdResponse returned [%02x%02x%02x%02x %02x%02x%02x%02x %02x%02x%02x%02x %02x%02x%02x%02x]\r\n"),
; 3732 :                 respBuff[0], respBuff[1], respBuff[2], respBuff[3], respBuff[4], respBuff[5], respBuff[6], respBuff[7],
; 3733 :                 respBuff[8], respBuff[9], respBuff[10], respBuff[11], respBuff[12], respBuff[13], respBuff[14], respBuff[15]));
; 3734 : #endif
; 3735 :             break;

  086bc	ea00000a	 b           |$LN7@GetCommand|
  086c0		 |$LN1@GetCommand|

; 3736 : 
; 3737 :         default:
; 3738 :             DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("GetCommandResponse() - Unrecognized response type!\r\n")));

  086c0	e59f3040	 ldr         r3, [pc, #0x40]
  086c4	e5933440	 ldr         r3, [r3, #0x440]
  086c8	e3130902	 tst         r3, #2, 18
  086cc	0a000004	 beq         |$LN30@GetCommand|
  086d0	e59f002c	 ldr         r0, [pc, #0x2C]
  086d4	eb000000	 bl          NKDbgPrintfW
  086d8	e3a03001	 mov         r3, #1
  086dc	e58d30e0	 str         r3, [sp, #0xE0]
  086e0	ea000001	 b           |$LN31@GetCommand|
  086e4		 |$LN30@GetCommand|
  086e4	e3a03000	 mov         r3, #0
  086e8	e58d30e0	 str         r3, [sp, #0xE0]
  086ec		 |$LN31@GetCommand|
  086ec		 |$LN7@GetCommand|
  086ec		 |$LN9@GetCommand|

; 3739 :             break;
; 3740 :         }
; 3741 :     }
; 3742 :     return SD_API_STATUS_SUCCESS;

  086ec	e3a03000	 mov         r3, #0
  086f0	e58d30b0	 str         r3, [sp, #0xB0]

; 3743 : }

  086f4	e59d00b0	 ldr         r0, [sp, #0xB0]
  086f8	e28dd0e4	 add         sp, sp, #0xE4
  086fc	e89d6000	 ldmia       sp, {sp, lr}
  08700	e12fff1e	 bx          lr
  08704		 |$LN46@GetCommand|
  08704		 |$LN47@GetCommand|
  08704	00000000	 DCD         |??_C@_1GK@EBPKPBPE@?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAU?$AAn?$AAr?$AAe?$AAc?$AAo?$AAg?$AAn?$AAi@|
  08708		 |$LN48@GetCommand|
  08708	00000000	 DCD         |dpCurSettings|
  0870c		 |$LN49@GetCommand|
  0870c	00000000	 DCD         |??_C@_1MA@JCIHJGJJ@?$AAG?$AAe?$AAt?$AAC?$AAm?$AAd?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?$FL?$AA?$CF?$AA0?$AA2?$AAx?$AA?$CF?$AA0?$AA2@|
  08710		 |$LN50@GetCommand|
  08710	00000000	 DCD         |??_C@_1GC@LCGNLPP@?$AAG?$AAe?$AAt?$AAC?$AAm?$AAd?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?$FL?$AA?$CF?$AA0?$AA2?$AAx?$AA?$CF?$AA0?$AA2@|
  08714		 |$LN51@GetCommand|
  08714	00000000	 DCD         |??_C@_1HO@PGNALOFJ@?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAR?$AA5?$AA?5?$AAR?$AA6?$AA?5?$AA?3?$AA?5?$AA0@|
  08718		 |$LN52@GetCommand|
  08718	00000000	 DCD         |??_C@_1DA@KBDGJBCC@?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AAR?$AA5?$AA?5?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AAR?$AA6?$AA?$AN?$AA?6?$AA?$AA@|
  0871c		 |$LN53@GetCommand|
  0871c	00000000	 DCD         |??_C@_1DA@GKFBNMGP@?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AAR?$AA3?$AA?5?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AAR?$AA4?$AA?$AN?$AA?6?$AA?$AA@|
  08720		 |$LN54@GetCommand|
  08720	00000000	 DCD         |??_C@_1IC@EEIPHINM@?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAR?$AA1?$AA?5?$AAR?$AA1?$AAb?$AA?5?$AA?3?$AA?5@|
  08724		 |$LN55@GetCommand|
  08724	00000000	 DCD         |??_C@_1FI@EACLDLBO@?$AAG?$AAe?$AAt?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAR?$AAe?$AAs?$AAp?$AAo?$AAn?$AAs?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAM?$AAM?$AAC?$AA_?$AAS?$AAT?$AAA?$AAT?$AA?5@|
  08728		 |$M46315|

			 ENDP  ; |?GetCommandResponse@CSDIOControllerBase@@QAAJPAU_SD_BUS_REQUEST@@@Z|, CSDIOControllerBase::GetCommandResponse

	EXPORT	|?SDIDMAReceive@CSDIOControllerBase@@QAAHPAEKH@Z| ; CSDIOControllerBase::SDIDMAReceive

  00208			 AREA	 |.pdata|, PDATA
|$T46333| DCD	|$LN7@SDIReceive|
	DCD	0x40001e04
; Function compile flags: /Odtp

  08728			 AREA	 |.text|, CODE, ARM

  08728		 |?SDIReceive@CSDIOControllerBase@@QAAHPAEKH@Z| PROC ; CSDIOControllerBase::SDIReceive

; 3747 : {

  08728		 |$LN7@SDIReceive|
  08728	e1a0c00d	 mov         r12, sp
  0872c	e92d000f	 stmdb       sp!, {r0 - r3}
  08730	e92d5000	 stmdb       sp!, {r12, lr}
  08734	e24dd00c	 sub         sp, sp, #0xC
  08738		 |$M46330|

; 3748 : #ifdef SDIO_DMA_ENABLED
; 3749 :     if( m_fDMATransfer )

  08738	e59d3014	 ldr         r3, [sp, #0x14]
  0873c	e2833e11	 add         r3, r3, #0x11, 28
  08740	e5933000	 ldr         r3, [r3]
  08744	e3530000	 cmp         r3, #0
  08748	0a000009	 beq         |$LN2@SDIReceive|

; 3750 :     {
; 3751 :         return SDIDMAReceive( pBuff, dwLen, FastPathMode );

  0874c	e59d3020	 ldr         r3, [sp, #0x20]
  08750	e59d201c	 ldr         r2, [sp, #0x1C]
  08754	e59d1018	 ldr         r1, [sp, #0x18]
  08758	e59d0014	 ldr         r0, [sp, #0x14]
  0875c	eb000000	 bl          |?SDIDMAReceive@CSDIOControllerBase@@QAAHPAEKH@Z|
  08760	e58d0004	 str         r0, [sp, #4]
  08764	e59d3004	 ldr         r3, [sp, #4]
  08768	e58d3000	 str         r3, [sp]
  0876c	ea000007	 b           |$LN3@SDIReceive|

; 3752 :     }
; 3753 :     else

  08770	ea000006	 b           |$LN1@SDIReceive|
  08774		 |$LN2@SDIReceive|

; 3754 : #endif        
; 3755 :     {
; 3756 :         return SDIPollingReceive( pBuff, dwLen );

  08774	e59d201c	 ldr         r2, [sp, #0x1C]
  08778	e59d1018	 ldr         r1, [sp, #0x18]
  0877c	e59d0014	 ldr         r0, [sp, #0x14]
  08780	eb000000	 bl          |?SDIPollingReceive@CSDIOControllerBase@@QAAHPAEK@Z|
  08784	e58d0008	 str         r0, [sp, #8]
  08788	e59d3008	 ldr         r3, [sp, #8]
  0878c	e58d3000	 str         r3, [sp]
  08790		 |$LN1@SDIReceive|
  08790		 |$LN3@SDIReceive|

; 3757 :     }
; 3758 : }

  08790	e59d0000	 ldr         r0, [sp]
  08794	e28dd00c	 add         sp, sp, #0xC
  08798	e89d6000	 ldmia       sp, {sp, lr}
  0879c	e12fff1e	 bx          lr
  087a0		 |$M46331|

			 ENDP  ; |?SDIReceive@CSDIOControllerBase@@QAAHPAEKH@Z|, CSDIOControllerBase::SDIReceive

	EXPORT	|?SDIDMATransmit@CSDIOControllerBase@@QAAHPAEKH@Z| ; CSDIOControllerBase::SDIDMATransmit

  00210			 AREA	 |.pdata|, PDATA
|$T46339| DCD	|$LN7@SDITransmi|
	DCD	0x40001e04
; Function compile flags: /Odtp

  087a0			 AREA	 |.text|, CODE, ARM

  087a0		 |?SDITransmit@CSDIOControllerBase@@QAAHPAEKH@Z| PROC ; CSDIOControllerBase::SDITransmit

; 3763 : {

  087a0		 |$LN7@SDITransmi|
  087a0	e1a0c00d	 mov         r12, sp
  087a4	e92d000f	 stmdb       sp!, {r0 - r3}
  087a8	e92d5000	 stmdb       sp!, {r12, lr}
  087ac	e24dd00c	 sub         sp, sp, #0xC
  087b0		 |$M46336|

; 3764 : #ifdef SDIO_DMA_ENABLED
; 3765 :     if( m_fDMATransfer )

  087b0	e59d3014	 ldr         r3, [sp, #0x14]
  087b4	e2833e11	 add         r3, r3, #0x11, 28
  087b8	e5933000	 ldr         r3, [r3]
  087bc	e3530000	 cmp         r3, #0
  087c0	0a000009	 beq         |$LN2@SDITransmi|

; 3766 :     {
; 3767 :         return SDIDMATransmit( pBuff, dwLen, FastPathMode );

  087c4	e59d3020	 ldr         r3, [sp, #0x20]
  087c8	e59d201c	 ldr         r2, [sp, #0x1C]
  087cc	e59d1018	 ldr         r1, [sp, #0x18]
  087d0	e59d0014	 ldr         r0, [sp, #0x14]
  087d4	eb000000	 bl          |?SDIDMATransmit@CSDIOControllerBase@@QAAHPAEKH@Z|
  087d8	e58d0004	 str         r0, [sp, #4]
  087dc	e59d3004	 ldr         r3, [sp, #4]
  087e0	e58d3000	 str         r3, [sp]
  087e4	ea000007	 b           |$LN3@SDITransmi|

; 3768 :     }
; 3769 :     else

  087e8	ea000006	 b           |$LN1@SDITransmi|
  087ec		 |$LN2@SDITransmi|

; 3770 : #endif      
; 3771 :     {
; 3772 :         return SDIPollingTransmit( pBuff, dwLen );

  087ec	e59d201c	 ldr         r2, [sp, #0x1C]
  087f0	e59d1018	 ldr         r1, [sp, #0x18]
  087f4	e59d0014	 ldr         r0, [sp, #0x14]
  087f8	eb000000	 bl          |?SDIPollingTransmit@CSDIOControllerBase@@QAAHPAEK@Z|
  087fc	e58d0008	 str         r0, [sp, #8]
  08800	e59d3008	 ldr         r3, [sp, #8]
  08804	e58d3000	 str         r3, [sp]
  08808		 |$LN1@SDITransmi|
  08808		 |$LN3@SDITransmi|

; 3773 :     }
; 3774 : }

  08808	e59d0000	 ldr         r0, [sp]
  0880c	e28dd00c	 add         sp, sp, #0xC
  08810	e89d6000	 ldmia       sp, {sp, lr}
  08814	e12fff1e	 bx          lr
  08818		 |$M46337|

			 ENDP  ; |?SDITransmit@CSDIOControllerBase@@QAAHPAEKH@Z|, CSDIOControllerBase::SDITransmit

	EXPORT	|??_C@_1IM@NLHINFOC@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe?$AAg@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@EMGJJJMP@?$AAA?$AA?4?$AAS?$AA?4?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAw?$AAh?$AAi?$AAl?$AAe?$AA?5?$AAp?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAR@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@MBKNAHKK@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAT?$AAI?$AAM?$AAE?$AAO?$AAU?$AAT?$AA?4@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JG@OGMOENGM@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe?$AAg@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IK@ELALMMML@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe?$AAg@| [ DATA ] ; `string'

  00218			 AREA	 |.pdata|, PDATA
|$T46357| DCD	|$LN37@SDIDMARece|
	DCD	0x4000e304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IM@NLHINFOC@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe?$AAg@| DCB "S"
	DCB	0x0, "D", 0x0, "I", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "e"
	DCB	0x0, "x", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "S"
	DCB	0x0, "T", 0x0, "A", 0x0, "T", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "d", 0x0, "i", 0x0, "c"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, " ", 0x0, "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A"
	DCB	0x0, "T", 0x0, "_", 0x0, "D", 0x0, "C", 0x0, "R", 0x0, "C"
	DCB	0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r"
	DCB	0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@EMGJJJMP@?$AAA?$AA?4?$AAS?$AA?4?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAw?$AAh?$AAi?$AAl?$AAe?$AA?5?$AAp?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAR@| DCB "A"
	DCB	0x0, ".", 0x0, "S", 0x0, ".", 0x0, " ", 0x0, "T", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, " "
	DCB	0x0, "w", 0x0, "h", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, " "
	DCB	0x0, "p", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " "
	DCB	0x0, "R", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v"
	DCB	0x0, "e", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "p"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, ".", 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@MBKNAHKK@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAT?$AAI?$AAM?$AAE?$AAO?$AAU?$AAT?$AA?4@| DCB "S"
	DCB	0x0, "D", 0x0, "I", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "e"
	DCB	0x0, "x", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "T"
	DCB	0x0, "I", 0x0, "M", 0x0, "E", 0x0, "O", 0x0, "U", 0x0, "T"
	DCB	0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JG@OGMOENGM@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe?$AAg@| DCB "S"
	DCB	0x0, "D", 0x0, "I", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "e"
	DCB	0x0, "x", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "S"
	DCB	0x0, "T", 0x0, "A", 0x0, "T", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "d", 0x0, "i", 0x0, "c"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, " ", 0x0, "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "C", 0x0, "R", 0x0, "C"
	DCB	0x0, "_", 0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R"
	DCB	0x0, "_", 0x0, "R", 0x0, "C", 0x0, "V", 0x0, "D", 0x0, " "
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, "."
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@ELALMMML@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe?$AAg@| DCB "S"
	DCB	0x0, "D", 0x0, "I", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "e"
	DCB	0x0, "x", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "S"
	DCB	0x0, "T", 0x0, "A", 0x0, "T", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "d", 0x0, "i", 0x0, "c"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, " ", 0x0, "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A"
	DCB	0x0, "T", 0x0, "_", 0x0, "D", 0x0, "T", 0x0, "O", 0x0, " "
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, "."
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  08818			 AREA	 |.text|, CODE, ARM

  08818		 |?SDIDMAReceive@CSDIOControllerBase@@QAAHPAEKH@Z| PROC ; CSDIOControllerBase::SDIDMAReceive

; 3779 : {

  08818		 |$LN37@SDIDMARece|
  08818	e1a0c00d	 mov         r12, sp
  0881c	e92d000f	 stmdb       sp!, {r0 - r3}
  08820	e92d5000	 stmdb       sp!, {r12, lr}
  08824	e24dd048	 sub         sp, sp, #0x48
  08828		 |$M46354|

; 3780 :     DWORD dwCountStart;
; 3781 :     DWORD __unaligned *pbuf2 = (DWORD *) pBuff;

  08828	e59d3054	 ldr         r3, [sp, #0x54]
  0882c	e58d3008	 str         r3, [sp, #8]

; 3782 : 
; 3783 :     DWORD MMC_STAT = Read_MMC_STAT(); 

  08830	e59d0050	 ldr         r0, [sp, #0x50]
  08834	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  08838	e58d0014	 str         r0, [sp, #0x14]
  0883c	e59d3014	 ldr         r3, [sp, #0x14]
  08840	e58d3000	 str         r3, [sp]

; 3784 : 
; 3785 :     UNREFERENCED_PARAMETER(FastPathMode);
; 3786 : 
; 3787 :     if( MMC_STAT & MMCHS_STAT_DTO )

  08844	e59d3000	 ldr         r3, [sp]
  08848	e3130601	 tst         r3, #1, 12
  0884c	0a00000c	 beq         |$LN20@SDIDMARece|

; 3788 :     {
; 3789 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDIDMAReceive() - exit: STAT register indicates MMC_STAT_DTO error.\n")));

  08850	e59f3338	 ldr         r3, [pc, #0x338]
  08854	e5933440	 ldr         r3, [r3, #0x440]
  08858	e3130902	 tst         r3, #2, 18
  0885c	0a000004	 beq         |$LN23@SDIDMARece|
  08860	e59f032c	 ldr         r0, [pc, #0x32C]
  08864	eb000000	 bl          NKDbgPrintfW
  08868	e3a03001	 mov         r3, #1
  0886c	e58d3018	 str         r3, [sp, #0x18]
  08870	ea000001	 b           |$LN24@SDIDMARece|
  08874		 |$LN23@SDIDMARece|
  08874	e3a03000	 mov         r3, #0
  08878	e58d3018	 str         r3, [sp, #0x18]
  0887c		 |$LN24@SDIDMARece|

; 3790 :         goto cleanUp;

  0887c	ea0000bc	 b           |$LN19@SDIDMARece|
  08880	ea0000bb	 b           |$cleanUp$43865|
  08884		 |$LN20@SDIDMARece|

; 3791 :     }
; 3792 :     if( MMC_STAT & MMCHS_STAT_DCRC ) // DATA CRC Error

  08884	e59d3000	 ldr         r3, [sp]
  08888	e3130602	 tst         r3, #2, 12
  0888c	0a00000c	 beq         |$LN18@SDIDMARece|

; 3793 :     {
; 3794 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDIDMAReceive() - exit: STAT register indicates MMC_CRC_ERROR_RCVD error.\n")));

  08890	e59f32f8	 ldr         r3, [pc, #0x2F8]
  08894	e5933440	 ldr         r3, [r3, #0x440]
  08898	e3130902	 tst         r3, #2, 18
  0889c	0a000004	 beq         |$LN25@SDIDMARece|
  088a0	e59f02f8	 ldr         r0, [pc, #0x2F8]
  088a4	eb000000	 bl          NKDbgPrintfW
  088a8	e3a03001	 mov         r3, #1
  088ac	e58d301c	 str         r3, [sp, #0x1C]
  088b0	ea000001	 b           |$LN26@SDIDMARece|
  088b4		 |$LN25@SDIDMARece|
  088b4	e3a03000	 mov         r3, #0
  088b8	e58d301c	 str         r3, [sp, #0x1C]
  088bc		 |$LN26@SDIDMARece|

; 3795 :         goto cleanUp;

  088bc	ea0000ac	 b           |$LN17@SDIDMARece|
  088c0	ea0000ab	 b           |$cleanUp$43865|
  088c4		 |$LN18@SDIDMARece|

; 3796 :     }
; 3797 : 
; 3798 :     // Clear interrupt status
; 3799 :         EnterCriticalSection( &m_critSec );

  088c4	e59d3050	 ldr         r3, [sp, #0x50]
  088c8	e28300b0	 add         r0, r3, #0xB0
  088cc	eb000000	 bl          EnterCriticalSection

; 3800 :         SETREG32(&m_pbRegisters->MMCHS_IE, MMCHS_IE_TC);

  088d0	e59d3050	 ldr         r3, [sp, #0x50]
  088d4	e2833f57	 add         r3, r3, #0x57, 30
  088d8	e5933000	 ldr         r3, [r3]
  088dc	e2833f4d	 add         r3, r3, #0x4D, 30
  088e0	e5933000	 ldr         r3, [r3]
  088e4	e3832002	 orr         r2, r3, #2
  088e8	e59d3050	 ldr         r3, [sp, #0x50]
  088ec	e2833f57	 add         r3, r3, #0x57, 30
  088f0	e5933000	 ldr         r3, [r3]
  088f4	e2833f4d	 add         r3, r3, #0x4D, 30
  088f8	e5832000	 str         r2, [r3]

; 3801 :         CLRREG32(&m_pbRegisters->MMCHS_ISE, MMCHS_ISE_TC);

  088fc	e59d3050	 ldr         r3, [sp, #0x50]
  08900	e2833f57	 add         r3, r3, #0x57, 30
  08904	e5933000	 ldr         r3, [r3]
  08908	e2833f4e	 add         r3, r3, #0x4E, 30
  0890c	e5932000	 ldr         r2, [r3]
  08910	e3e03002	 mvn         r3, #2
  08914	e0022003	 and         r2, r2, r3
  08918	e59d3050	 ldr         r3, [sp, #0x50]
  0891c	e2833f57	 add         r3, r3, #0x57, 30
  08920	e5933000	 ldr         r3, [r3]
  08924	e2833f4e	 add         r3, r3, #0x4E, 30
  08928	e5832000	 str         r2, [r3]

; 3802 :         OUTREG32(&m_pbRegisters->MMCHS_STAT, 0xFFFFFFFF);

  0892c	e59d3050	 ldr         r3, [sp, #0x50]
  08930	e2833f57	 add         r3, r3, #0x57, 30
  08934	e5933000	 ldr         r3, [r3]
  08938	e2832e13	 add         r2, r3, #0x13, 28
  0893c	e3e03000	 mvn         r3, #0
  08940	e5823000	 str         r3, [r2]

; 3803 :         LeaveCriticalSection( &m_critSec );

  08944	e59d3050	 ldr         r3, [sp, #0x50]
  08948	e28300b0	 add         r0, r3, #0xB0
  0894c	eb000000	 bl          LeaveCriticalSection

; 3804 : 
; 3805 :     SDIO_StartInputDMA();

  08950	e59d0050	 ldr         r0, [sp, #0x50]
  08954	eb000000	 bl          |?SDIO_StartInputDMA@CSDIOControllerBase@@QAAXXZ|

; 3806 : 
; 3807 :     StallExecution(1);

  08958	e3a00001	 mov         r0, #1
  0895c	eb000000	 bl          StallExecution

; 3808 : 
; 3809 :     // calculate timeout conditions
; 3810 :     dwCountStart = GetTickCount();

  08960	eb000000	 bl          GetTickCount
  08964	e58d0020	 str         r0, [sp, #0x20]
  08968	e59d3020	 ldr         r3, [sp, #0x20]
  0896c	e58d3004	 str         r3, [sp, #4]
  08970		 |$LN16@SDIDMARece|

; 3811 : 
; 3812 :     // wait for the SDIO/controller interrupt
; 3813 :     for(;;)
; 3814 :     {
; 3815 :         // check for a timeout
; 3816 :         if (GetTickCount() - dwCountStart > m_dwMaxTimeout)

  08970	eb000000	 bl          GetTickCount
  08974	e58d0024	 str         r0, [sp, #0x24]
  08978	e59d2024	 ldr         r2, [sp, #0x24]
  0897c	e59d3004	 ldr         r3, [sp, #4]
  08980	e0422003	 sub         r2, r2, r3
  08984	e59d3050	 ldr         r3, [sp, #0x50]
  08988	e2833e15	 add         r3, r3, #0x15, 28
  0898c	e5933000	 ldr         r3, [r3]
  08990	e1520003	 cmp         r2, r3
  08994	9a00000e	 bls         |$LN14@SDIDMARece|

; 3817 :         {
; 3818 :             DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDIDMAReceive() - exit: TIMEOUT.\n")));

  08998	e59f31f0	 ldr         r3, [pc, #0x1F0]
  0899c	e5933440	 ldr         r3, [r3, #0x440]
  089a0	e3130902	 tst         r3, #2, 18
  089a4	0a000004	 beq         |$LN27@SDIDMARece|
  089a8	e59f01ec	 ldr         r0, [pc, #0x1EC]
  089ac	eb000000	 bl          NKDbgPrintfW
  089b0	e3a03001	 mov         r3, #1
  089b4	e58d3028	 str         r3, [sp, #0x28]
  089b8	ea000001	 b           |$LN28@SDIDMARece|
  089bc		 |$LN27@SDIDMARece|
  089bc	e3a03000	 mov         r3, #0
  089c0	e58d3028	 str         r3, [sp, #0x28]
  089c4		 |$LN28@SDIDMARece|

; 3819 :             // stop DMA
; 3820 :             SDIO_StopInputDMA();

  089c4	e59d0050	 ldr         r0, [sp, #0x50]
  089c8	eb000000	 bl          |?SDIO_StopInputDMA@CSDIOControllerBase@@QAAXXZ|
  089cc	ea000068	 b           |$LN13@SDIDMARece|

; 3821 :             goto cleanUp;

  089d0	ea000067	 b           |$cleanUp$43865|
  089d4		 |$LN14@SDIDMARece|

; 3822 :         }
; 3823 : 
; 3824 :            DWORD retries = 0;

  089d4	e3a03000	 mov         r3, #0
  089d8	e58d300c	 str         r3, [sp, #0xC]
  089dc		 |$LN12@SDIDMARece|

; 3825 :            // polling end-of-command
; 3826 :            while (!(Read_MMC_STAT() & MMCHS_STAT_TC)) {

  089dc	e59d0050	 ldr         r0, [sp, #0x50]
  089e0	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  089e4	e58d002c	 str         r0, [sp, #0x2C]
  089e8	e59d302c	 ldr         r3, [sp, #0x2C]
  089ec	e3130002	 tst         r3, #2
  089f0	1a00000e	 bne         |$LN11@SDIDMARece|

; 3827 :                if (retries > SDIO_MAX_LOOP) {

  089f4	e59d300c	 ldr         r3, [sp, #0xC]
  089f8	e3530702	 cmp         r3, #2, 14
  089fc	9a000007	 bls         |$LN10@SDIDMARece|

; 3828 :                    RETAILMSG(1, (TEXT("A.S. Timeout while polling DMA Receive complete.\n")));

  08a00	e59f0190	 ldr         r0, [pc, #0x190]
  08a04	eb000000	 bl          NKDbgPrintfW
  08a08	e3a03001	 mov         r3, #1
  08a0c	e58d3030	 str         r3, [sp, #0x30]
  08a10	ea000001	 b           |$LN30@SDIDMARece|
  08a14	e3a03000	 mov         r3, #0
  08a18	e58d3030	 str         r3, [sp, #0x30]
  08a1c		 |$LN30@SDIDMARece|

; 3829 :                    break;      

  08a1c	ea000003	 b           |$LN11@SDIDMARece|
  08a20		 |$LN10@SDIDMARece|

; 3830 :                }
; 3831 :                retries++;

  08a20	e59d300c	 ldr         r3, [sp, #0xC]
  08a24	e2833001	 add         r3, r3, #1
  08a28	e58d300c	 str         r3, [sp, #0xC]

; 3832 :            }

  08a2c	eaffffea	 b           |$LN12@SDIDMARece|
  08a30		 |$LN11@SDIDMARece|

; 3833 : 
; 3834 :         if(!m_fCardPresent)

  08a30	e59d3050	 ldr         r3, [sp, #0x50]
  08a34	e28330f0	 add         r3, r3, #0xF0
  08a38	e5933000	 ldr         r3, [r3]
  08a3c	e3530000	 cmp         r3, #0
  08a40	1a000000	 bne         |$LN9@SDIDMARece|

; 3835 :         {
; 3836 : #ifdef ENABLE_RETAIL_OUTPUT
; 3837 :            RETAILMSG(1, (L"Card has been Removed stopping Input DMA\r\n"));
; 3838 : #endif
; 3839 :            break;

  08a44	ea000031	 b           |$LN15@SDIDMARece|
  08a48		 |$LN9@SDIDMARece|

; 3840 :         }
; 3841 : 
; 3842 :         MMC_STAT = Read_MMC_STAT(); 

  08a48	e59d0050	 ldr         r0, [sp, #0x50]
  08a4c	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  08a50	e58d0034	 str         r0, [sp, #0x34]
  08a54	e59d3034	 ldr         r3, [sp, #0x34]
  08a58	e58d3000	 str         r3, [sp]

; 3843 :         if(MMC_STAT & MMCHS_STAT_BRR)

  08a5c	e59d3000	 ldr         r3, [sp]
  08a60	e3130020	 tst         r3, #0x20
  08a64	0a000000	 beq         |$LN8@SDIDMARece|

; 3844 :         {
; 3845 :             break;

  08a68	ea000028	 b           |$LN15@SDIDMARece|
  08a6c		 |$LN8@SDIDMARece|

; 3846 :         }
; 3847 :         if(MMC_STAT & MMCHS_STAT_TC)

  08a6c	e59d3000	 ldr         r3, [sp]
  08a70	e3130002	 tst         r3, #2
  08a74	0a000000	 beq         |$LN7@SDIDMARece|

; 3848 :         {
; 3849 :             break;

  08a78	ea000024	 b           |$LN15@SDIDMARece|
  08a7c		 |$LN7@SDIDMARece|

; 3850 :         }
; 3851 :         if( MMC_STAT & MMCHS_STAT_DTO )

  08a7c	e59d3000	 ldr         r3, [sp]
  08a80	e3130601	 tst         r3, #1, 12
  08a84	0a00000e	 beq         |$LN6@SDIDMARece|

; 3852 :         {
; 3853 :             DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDIDMAReceive() - exit: STAT register indicates MMC_STAT_DTO error.\n")));

  08a88	e59f3100	 ldr         r3, [pc, #0x100]
  08a8c	e5933440	 ldr         r3, [r3, #0x440]
  08a90	e3130902	 tst         r3, #2, 18
  08a94	0a000004	 beq         |$LN31@SDIDMARece|
  08a98	e59f00f4	 ldr         r0, [pc, #0xF4]
  08a9c	eb000000	 bl          NKDbgPrintfW
  08aa0	e3a03001	 mov         r3, #1
  08aa4	e58d3038	 str         r3, [sp, #0x38]
  08aa8	ea000001	 b           |$LN32@SDIDMARece|
  08aac		 |$LN31@SDIDMARece|
  08aac	e3a03000	 mov         r3, #0
  08ab0	e58d3038	 str         r3, [sp, #0x38]
  08ab4		 |$LN32@SDIDMARece|

; 3854 :             // stop DMA
; 3855 :             SDIO_StopInputDMA();

  08ab4	e59d0050	 ldr         r0, [sp, #0x50]
  08ab8	eb000000	 bl          |?SDIO_StopInputDMA@CSDIOControllerBase@@QAAXXZ|
  08abc	ea00002c	 b           |$LN5@SDIDMARece|

; 3856 :             goto cleanUp;

  08ac0	ea00002b	 b           |$cleanUp$43865|
  08ac4		 |$LN6@SDIDMARece|

; 3857 :         }
; 3858 :         if( MMC_STAT & MMCHS_STAT_DCRC ) // DATA CRC Error

  08ac4	e59d3000	 ldr         r3, [sp]
  08ac8	e3130602	 tst         r3, #2, 12
  08acc	0a00000e	 beq         |$LN4@SDIDMARece|

; 3859 :         {
; 3860 :             DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDIDMAReceive() - exit: STAT register indicates MMC_STAT_DCRC error.\n")));

  08ad0	e59f30b8	 ldr         r3, [pc, #0xB8]
  08ad4	e5933440	 ldr         r3, [r3, #0x440]
  08ad8	e3130902	 tst         r3, #2, 18
  08adc	0a000004	 beq         |$LN33@SDIDMARece|
  08ae0	e59f00a4	 ldr         r0, [pc, #0xA4]
  08ae4	eb000000	 bl          NKDbgPrintfW
  08ae8	e3a03001	 mov         r3, #1
  08aec	e58d303c	 str         r3, [sp, #0x3C]
  08af0	ea000001	 b           |$LN34@SDIDMARece|
  08af4		 |$LN33@SDIDMARece|
  08af4	e3a03000	 mov         r3, #0
  08af8	e58d303c	 str         r3, [sp, #0x3C]
  08afc		 |$LN34@SDIDMARece|

; 3861 :             // stop DMA
; 3862 :             SDIO_StopInputDMA();

  08afc	e59d0050	 ldr         r0, [sp, #0x50]
  08b00	eb000000	 bl          |?SDIO_StopInputDMA@CSDIOControllerBase@@QAAXXZ|
  08b04	ea00001a	 b           |$LN3@SDIDMARece|

; 3863 :             goto cleanUp;

  08b08	ea000019	 b           |$cleanUp$43865|
  08b0c		 |$LN4@SDIDMARece|

; 3864 :         }
; 3865 : 
; 3866 :     }

  08b0c	eaffff97	 b           |$LN16@SDIDMARece|
  08b10		 |$LN15@SDIDMARece|

; 3867 : 
; 3868 :     MMC_STAT = Read_MMC_STAT(); 

  08b10	e59d0050	 ldr         r0, [sp, #0x50]
  08b14	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  08b18	e58d0040	 str         r0, [sp, #0x40]
  08b1c	e59d3040	 ldr         r3, [sp, #0x40]
  08b20	e58d3000	 str         r3, [sp]

; 3869 : 
; 3870 :     // stop DMA
; 3871 :     SDIO_StopInputDMA();

  08b24	e59d0050	 ldr         r0, [sp, #0x50]
  08b28	eb000000	 bl          |?SDIO_StopInputDMA@CSDIOControllerBase@@QAAXXZ|

; 3872 : 
; 3873 :     Set_MMC_STAT(MMCHS_STAT_TC);

  08b2c	e3a01002	 mov         r1, #2
  08b30	e59d0050	 ldr         r0, [sp, #0x50]
  08b34	eb000000	 bl          |?Set_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|

; 3874 : 
; 3875 :     // finally, copy the data from DMA buffer to the user buffer, which maybe SG buffer, 
; 3876 :     if( !SDPerformSafeCopy( pbuf2, m_pDmaBuffer, dwLen ) )

  08b38	e59d2058	 ldr         r2, [sp, #0x58]
  08b3c	e59d3050	 ldr         r3, [sp, #0x50]
  08b40	e28330fc	 add         r3, r3, #0xFC
  08b44	e5931000	 ldr         r1, [r3]
  08b48	e59d0008	 ldr         r0, [sp, #8]
  08b4c	eb000000	 bl          SDPerformSafeCopy
  08b50	e5cd0044	 strb        r0, [sp, #0x44]
  08b54	e5dd3044	 ldrb        r3, [sp, #0x44]
  08b58	e3530000	 cmp         r3, #0
  08b5c	1a000001	 bne         |$LN2@SDIDMARece|
  08b60	ea000003	 b           |$LN1@SDIDMARece|

; 3877 :     {
; 3878 :         goto cleanUp;

  08b64	ea000002	 b           |$cleanUp$43865|
  08b68		 |$LN2@SDIDMARece|

; 3879 :     }
; 3880 : 
; 3881 : #ifdef ENABLE_RETAIL_OUTPUT
; 3882 :     RETAILMSG(1, (L"SDIDMAReceive(dwLen 0x%x,%08x,%08x,%08x,%08x,%08x,%08x,%08x,%08x)+\r\n", 
; 3883 :       dwLen, pbuf2[0], pbuf2[1], pbuf2[2], pbuf2[3], pbuf2[4], pbuf2[5], pbuf2[6], pbuf2[7])); 
; 3884 : #endif      
; 3885 :     return TRUE;  

  08b68	e3a03001	 mov         r3, #1
  08b6c	e58d3010	 str         r3, [sp, #0x10]
  08b70	ea000001	 b           |$LN21@SDIDMARece|
  08b74		 |$LN1@SDIDMARece|
  08b74		 |$LN3@SDIDMARece|
  08b74		 |$LN5@SDIDMARece|
  08b74		 |$LN13@SDIDMARece|
  08b74		 |$LN17@SDIDMARece|
  08b74		 |$LN19@SDIDMARece|
  08b74		 |$cleanUp$43865|

; 3886 : 
; 3887 : cleanUp:
; 3888 : #ifdef ENABLE_RETAIL_OUTPUT
; 3889 :     RETAILMSG(1, (L"SDIDMAReceive(%08X, %08X, %08X)-\r\n", INREG32(&m_pbRegisters->MMCHS_STAT), INREG32(&m_pbRegisters->MMCHS_PSTATE), INREG32(&m_pbRegisters->MMCHS_DATA)));
; 3890 : #endif
; 3891 :     return FALSE;

  08b74	e3a03000	 mov         r3, #0
  08b78	e58d3010	 str         r3, [sp, #0x10]
  08b7c		 |$LN21@SDIDMARece|

; 3892 : }

  08b7c	e59d0010	 ldr         r0, [sp, #0x10]
  08b80	e28dd048	 add         sp, sp, #0x48
  08b84	e89d6000	 ldmia       sp, {sp, lr}
  08b88	e12fff1e	 bx          lr
  08b8c		 |$LN38@SDIDMARece|
  08b8c		 |$LN39@SDIDMARece|
  08b8c	00000000	 DCD         |??_C@_1IM@NLHINFOC@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe?$AAg@|
  08b90		 |$LN40@SDIDMARece|
  08b90	00000000	 DCD         |dpCurSettings|
  08b94		 |$LN41@SDIDMARece|
  08b94	00000000	 DCD         |??_C@_1IK@ELALMMML@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe?$AAg@|
  08b98		 |$LN42@SDIDMARece|
  08b98	00000000	 DCD         |??_C@_1GE@EMGJJJMP@?$AAA?$AA?4?$AAS?$AA?4?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAw?$AAh?$AAi?$AAl?$AAe?$AA?5?$AAp?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAR@|
  08b9c		 |$LN43@SDIDMARece|
  08b9c	00000000	 DCD         |??_C@_1EE@MBKNAHKK@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAT?$AAI?$AAM?$AAE?$AAO?$AAU?$AAT?$AA?4@|
  08ba0		 |$LN44@SDIDMARece|
  08ba0	00000000	 DCD         |??_C@_1JG@OGMOENGM@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe?$AAg@|
  08ba4		 |$M46355|

			 ENDP  ; |?SDIDMAReceive@CSDIOControllerBase@@QAAHPAEKH@Z|, CSDIOControllerBase::SDIDMAReceive

	EXPORT	|??_C@_1JI@DCJPJIP@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@GOJDNFHN@?$AAA?$AA?4?$AAS?$AA?4?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAw?$AAh?$AAi?$AAl?$AAe?$AA?5?$AAp?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@DADBLINE@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAT?$AAI?$AAM?$AAE?$AAO?$AAU?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IO@MBIOKFGG@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IM@DGGMFDHF@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe@| [ DATA ] ; `string'

  00220			 AREA	 |.pdata|, PDATA
|$T46382| DCD	|$LN36@SDIDMATran|
	DCD	0x4000d904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JI@DCJPJIP@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe@| DCB "S"
	DCB	0x0, "D", 0x0, "I", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m", 0x0, "i"
	DCB	0x0, "t", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "e", 0x0, "x", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "d", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, " "
	DCB	0x0, "M", 0x0, "M", 0x0, "C", 0x0, "_", 0x0, "C", 0x0, "R"
	DCB	0x0, "C", 0x0, "_", 0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O"
	DCB	0x0, "R", 0x0, "_", 0x0, "R", 0x0, "C", 0x0, "V", 0x0, "D"
	DCB	0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r"
	DCB	0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@GOJDNFHN@?$AAA?$AA?4?$AAS?$AA?4?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAw?$AAh?$AAi?$AAl?$AAe?$AA?5?$AAp?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAT@| DCB "A"
	DCB	0x0, ".", 0x0, "S", 0x0, ".", 0x0, " ", 0x0, "T", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, " "
	DCB	0x0, "w", 0x0, "h", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, " "
	DCB	0x0, "p", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " "
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "."
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@DADBLINE@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAT?$AAI?$AAM?$AAE?$AAO?$AAU?$AAT@| DCB "S"
	DCB	0x0, "D", 0x0, "I", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m", 0x0, "i"
	DCB	0x0, "t", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "e", 0x0, "x", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "T", 0x0, "I", 0x0, "M", 0x0, "E", 0x0, "O", 0x0, "U"
	DCB	0x0, "T", 0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IO@MBIOKFGG@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe@| DCB "S"
	DCB	0x0, "D", 0x0, "I", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m", 0x0, "i"
	DCB	0x0, "t", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "e", 0x0, "x", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "d", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, " "
	DCB	0x0, "M", 0x0, "M", 0x0, "C", 0x0, "_", 0x0, "S", 0x0, "T"
	DCB	0x0, "A", 0x0, "T", 0x0, "_", 0x0, "D", 0x0, "C", 0x0, "R"
	DCB	0x0, "C", 0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IM@DGGMFDHF@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe@| DCB "S"
	DCB	0x0, "D", 0x0, "I", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m", 0x0, "i"
	DCB	0x0, "t", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "e", 0x0, "x", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "d", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, " "
	DCB	0x0, "M", 0x0, "M", 0x0, "C", 0x0, "_", 0x0, "S", 0x0, "T"
	DCB	0x0, "A", 0x0, "T", 0x0, "_", 0x0, "D", 0x0, "T", 0x0, "O"
	DCB	0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r"
	DCB	0x0, ".", 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  08ba4			 AREA	 |.text|, CODE, ARM

  08ba4		 |?SDIDMATransmit@CSDIOControllerBase@@QAAHPAEKH@Z| PROC ; CSDIOControllerBase::SDIDMATransmit

; 3896 : {

  08ba4		 |$LN36@SDIDMATran|
  08ba4	e1a0c00d	 mov         r12, sp
  08ba8	e92d000f	 stmdb       sp!, {r0 - r3}
  08bac	e92d5000	 stmdb       sp!, {r12, lr}
  08bb0	e24dd048	 sub         sp, sp, #0x48
  08bb4		 |$M46379|

; 3897 :     DWORD dwCountStart;
; 3898 :     DWORD __unaligned *pbuf2 = (DWORD *) pBuff;

  08bb4	e59d3054	 ldr         r3, [sp, #0x54]
  08bb8	e58d3008	 str         r3, [sp, #8]

; 3899 : 
; 3900 :     UNREFERENCED_PARAMETER(FastPathMode);
; 3901 : 
; 3902 :     // first copy the data to the DMA buffer, then to the user buffer, which maybe SG buffer,
; 3903 :     if( !SDPerformSafeCopy( m_pDmaBuffer, pbuf2, dwLen ) )

  08bbc	e59d2058	 ldr         r2, [sp, #0x58]
  08bc0	e59d1008	 ldr         r1, [sp, #8]
  08bc4	e59d3050	 ldr         r3, [sp, #0x50]
  08bc8	e28330fc	 add         r3, r3, #0xFC
  08bcc	e5930000	 ldr         r0, [r3]
  08bd0	eb000000	 bl          SDPerformSafeCopy
  08bd4	e5cd0014	 strb        r0, [sp, #0x14]
  08bd8	e5dd3014	 ldrb        r3, [sp, #0x14]
  08bdc	e3530000	 cmp         r3, #0
  08be0	1a000001	 bne         |$LN19@SDIDMATran|
  08be4	ea0000bb	 b           |$LN18@SDIDMATran|

; 3904 :     {
; 3905 :         goto cleanUp;

  08be8	ea0000ba	 b           |$cleanUp$43914|
  08bec		 |$LN19@SDIDMATran|

; 3906 :     }
; 3907 : 
; 3908 :     DWORD MMC_STAT = Read_MMC_STAT(); 

  08bec	e59d0050	 ldr         r0, [sp, #0x50]
  08bf0	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  08bf4	e58d0018	 str         r0, [sp, #0x18]
  08bf8	e59d3018	 ldr         r3, [sp, #0x18]
  08bfc	e58d3000	 str         r3, [sp]

; 3909 : #ifdef ENABLE_RETAIL_OUTPUT
; 3910 :     RETAILMSG(1, (L"SDIDMATransmit(dwLen 0x%x,%08x,%08x,%08x,%08x,%08x,%08x,%08x,%08x)+\r\n", 
; 3911 :       dwLen, pbuf2[0], pbuf2[1], pbuf2[2], pbuf2[3], pbuf2[4], pbuf2[5], pbuf2[6], pbuf2[7])); 
; 3912 : #endif      
; 3913 :     if( MMC_STAT & MMCHS_STAT_DTO )

  08c00	e59d3000	 ldr         r3, [sp]
  08c04	e3130601	 tst         r3, #1, 12
  08c08	0a00000c	 beq         |$LN17@SDIDMATran|

; 3914 :     {
; 3915 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDIDMATransmit() - exit: STAT register indicates MMC_STAT_DTO error.\n")));

  08c0c	e59f32e0	 ldr         r3, [pc, #0x2E0]
  08c10	e5933440	 ldr         r3, [r3, #0x440]
  08c14	e3130902	 tst         r3, #2, 18
  08c18	0a000004	 beq         |$LN22@SDIDMATran|
  08c1c	e59f02d4	 ldr         r0, [pc, #0x2D4]
  08c20	eb000000	 bl          NKDbgPrintfW
  08c24	e3a03001	 mov         r3, #1
  08c28	e58d301c	 str         r3, [sp, #0x1C]
  08c2c	ea000001	 b           |$LN23@SDIDMATran|
  08c30		 |$LN22@SDIDMATran|
  08c30	e3a03000	 mov         r3, #0
  08c34	e58d301c	 str         r3, [sp, #0x1C]
  08c38		 |$LN23@SDIDMATran|

; 3916 :         goto cleanUp;

  08c38	ea0000a6	 b           |$LN16@SDIDMATran|
  08c3c	ea0000a5	 b           |$cleanUp$43914|
  08c40		 |$LN17@SDIDMATran|

; 3917 :     }
; 3918 :     if( MMC_STAT & MMCHS_STAT_DCRC ) // DATA CRC Error

  08c40	e59d3000	 ldr         r3, [sp]
  08c44	e3130602	 tst         r3, #2, 12
  08c48	0a00000c	 beq         |$LN15@SDIDMATran|

; 3919 :     {
; 3920 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDIDMATransmit() - exit: STAT register indicates MMC_STAT_DCRC error.\n")));

  08c4c	e59f32a0	 ldr         r3, [pc, #0x2A0]
  08c50	e5933440	 ldr         r3, [r3, #0x440]
  08c54	e3130902	 tst         r3, #2, 18
  08c58	0a000004	 beq         |$LN24@SDIDMATran|
  08c5c	e59f02a0	 ldr         r0, [pc, #0x2A0]
  08c60	eb000000	 bl          NKDbgPrintfW
  08c64	e3a03001	 mov         r3, #1
  08c68	e58d3020	 str         r3, [sp, #0x20]
  08c6c	ea000001	 b           |$LN25@SDIDMATran|
  08c70		 |$LN24@SDIDMATran|
  08c70	e3a03000	 mov         r3, #0
  08c74	e58d3020	 str         r3, [sp, #0x20]
  08c78		 |$LN25@SDIDMATran|

; 3921 :         goto cleanUp;

  08c78	ea000096	 b           |$LN14@SDIDMATran|
  08c7c	ea000095	 b           |$cleanUp$43914|
  08c80		 |$LN15@SDIDMATran|

; 3922 :     }
; 3923 : 
; 3924 :     // Clear interrupt status
; 3925 :         EnterCriticalSection( &m_critSec );

  08c80	e59d3050	 ldr         r3, [sp, #0x50]
  08c84	e28300b0	 add         r0, r3, #0xB0
  08c88	eb000000	 bl          EnterCriticalSection

; 3926 :         SETREG32(&m_pbRegisters->MMCHS_IE, MMCHS_IE_TC);

  08c8c	e59d3050	 ldr         r3, [sp, #0x50]
  08c90	e2833f57	 add         r3, r3, #0x57, 30
  08c94	e5933000	 ldr         r3, [r3]
  08c98	e2833f4d	 add         r3, r3, #0x4D, 30
  08c9c	e5933000	 ldr         r3, [r3]
  08ca0	e3832002	 orr         r2, r3, #2
  08ca4	e59d3050	 ldr         r3, [sp, #0x50]
  08ca8	e2833f57	 add         r3, r3, #0x57, 30
  08cac	e5933000	 ldr         r3, [r3]
  08cb0	e2833f4d	 add         r3, r3, #0x4D, 30
  08cb4	e5832000	 str         r2, [r3]

; 3927 :         CLRREG32(&m_pbRegisters->MMCHS_ISE, MMCHS_ISE_TC);

  08cb8	e59d3050	 ldr         r3, [sp, #0x50]
  08cbc	e2833f57	 add         r3, r3, #0x57, 30
  08cc0	e5933000	 ldr         r3, [r3]
  08cc4	e2833f4e	 add         r3, r3, #0x4E, 30
  08cc8	e5932000	 ldr         r2, [r3]
  08ccc	e3e03002	 mvn         r3, #2
  08cd0	e0022003	 and         r2, r2, r3
  08cd4	e59d3050	 ldr         r3, [sp, #0x50]
  08cd8	e2833f57	 add         r3, r3, #0x57, 30
  08cdc	e5933000	 ldr         r3, [r3]
  08ce0	e2833f4e	 add         r3, r3, #0x4E, 30
  08ce4	e5832000	 str         r2, [r3]

; 3928 :         OUTREG32(&m_pbRegisters->MMCHS_STAT, 0xFFFFFFFF);

  08ce8	e59d3050	 ldr         r3, [sp, #0x50]
  08cec	e2833f57	 add         r3, r3, #0x57, 30
  08cf0	e5933000	 ldr         r3, [r3]
  08cf4	e2832e13	 add         r2, r3, #0x13, 28
  08cf8	e3e03000	 mvn         r3, #0
  08cfc	e5823000	 str         r3, [r2]

; 3929 :         LeaveCriticalSection( &m_critSec );

  08d00	e59d3050	 ldr         r3, [sp, #0x50]
  08d04	e28300b0	 add         r0, r3, #0xB0
  08d08	eb000000	 bl          LeaveCriticalSection

; 3930 : 
; 3931 :     SDIO_StartOutputDMA();

  08d0c	e59d0050	 ldr         r0, [sp, #0x50]
  08d10	eb000000	 bl          |?SDIO_StartOutputDMA@CSDIOControllerBase@@QAAXXZ|

; 3932 : 
; 3933 :     StallExecution(1);

  08d14	e3a00001	 mov         r0, #1
  08d18	eb000000	 bl          StallExecution

; 3934 : 
; 3935 :     // calculate timeout conditions
; 3936 :     dwCountStart = GetTickCount();

  08d1c	eb000000	 bl          GetTickCount
  08d20	e58d0024	 str         r0, [sp, #0x24]
  08d24	e59d3024	 ldr         r3, [sp, #0x24]
  08d28	e58d3004	 str         r3, [sp, #4]
  08d2c		 |$LN13@SDIDMATran|

; 3937 : 
; 3938 :     // wait for the SDIO/controller interrupt
; 3939 :     for(;;)
; 3940 :     {
; 3941 :         // check for a timeout
; 3942 :         if (GetTickCount() - dwCountStart > m_dwMaxTimeout)

  08d2c	eb000000	 bl          GetTickCount
  08d30	e58d0028	 str         r0, [sp, #0x28]
  08d34	e59d2028	 ldr         r2, [sp, #0x28]
  08d38	e59d3004	 ldr         r3, [sp, #4]
  08d3c	e0422003	 sub         r2, r2, r3
  08d40	e59d3050	 ldr         r3, [sp, #0x50]
  08d44	e2833e15	 add         r3, r3, #0x15, 28
  08d48	e5933000	 ldr         r3, [r3]
  08d4c	e1520003	 cmp         r2, r3
  08d50	9a000008	 bls         |$LN11@SDIDMATran|

; 3943 :         {
; 3944 :             DEBUGMSG(ZONE_ENABLE_ERROR, (TEXT("SDIDMATransmit() - exit: TIMEOUT.\n")));

  08d54	e59f01a4	 ldr         r0, [pc, #0x1A4]
  08d58	eb000000	 bl          NKDbgPrintfW
  08d5c	e3a03001	 mov         r3, #1
  08d60	e58d302c	 str         r3, [sp, #0x2C]
  08d64	ea000001	 b           |$LN27@SDIDMATran|
  08d68	e3a03000	 mov         r3, #0
  08d6c	e58d302c	 str         r3, [sp, #0x2C]
  08d70		 |$LN27@SDIDMATran|

; 3945 : #ifdef ENABLE_RETAIL_OUTPUT
; 3946 :             RETAILMSG(1, (TEXT("SDIDMATransmit() - exit: TIMEOUT.\n")));
; 3947 : #endif            
; 3948 :             goto cleanUp;

  08d70	ea000058	 b           |$LN10@SDIDMATran|
  08d74	ea000057	 b           |$cleanUp$43914|
  08d78		 |$LN11@SDIDMATran|

; 3949 :         }
; 3950 : 
; 3951 :             DWORD retries = 0;

  08d78	e3a03000	 mov         r3, #0
  08d7c	e58d300c	 str         r3, [sp, #0xC]
  08d80		 |$LN9@SDIDMATran|

; 3952 :             // polling end-of-command
; 3953 :             while (!(Read_MMC_STAT() & MMCHS_STAT_TC)) {

  08d80	e59d0050	 ldr         r0, [sp, #0x50]
  08d84	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  08d88	e58d0030	 str         r0, [sp, #0x30]
  08d8c	e59d3030	 ldr         r3, [sp, #0x30]
  08d90	e3130002	 tst         r3, #2
  08d94	1a00000e	 bne         |$LN8@SDIDMATran|

; 3954 :                 if (retries > SDIO_MAX_LOOP) {

  08d98	e59d300c	 ldr         r3, [sp, #0xC]
  08d9c	e3530702	 cmp         r3, #2, 14
  08da0	9a000007	 bls         |$LN7@SDIDMATran|

; 3955 :                     RETAILMSG(1, (TEXT("A.S. Timeout while polling DMA Transmit complete.\n")));

  08da4	e59f0150	 ldr         r0, [pc, #0x150]
  08da8	eb000000	 bl          NKDbgPrintfW
  08dac	e3a03001	 mov         r3, #1
  08db0	e58d3034	 str         r3, [sp, #0x34]
  08db4	ea000001	 b           |$LN29@SDIDMATran|
  08db8	e3a03000	 mov         r3, #0
  08dbc	e58d3034	 str         r3, [sp, #0x34]
  08dc0		 |$LN29@SDIDMATran|

; 3956 :                     break;      

  08dc0	ea000003	 b           |$LN8@SDIDMATran|
  08dc4		 |$LN7@SDIDMATran|

; 3957 :                 }
; 3958 :                 retries++;

  08dc4	e59d300c	 ldr         r3, [sp, #0xC]
  08dc8	e2833001	 add         r3, r3, #1
  08dcc	e58d300c	 str         r3, [sp, #0xC]

; 3959 :             }

  08dd0	eaffffea	 b           |$LN9@SDIDMATran|
  08dd4		 |$LN8@SDIDMATran|

; 3960 : 
; 3961 : 
; 3962 :         if(!m_fCardPresent)

  08dd4	e59d3050	 ldr         r3, [sp, #0x50]
  08dd8	e28330f0	 add         r3, r3, #0xF0
  08ddc	e5933000	 ldr         r3, [r3]
  08de0	e3530000	 cmp         r3, #0
  08de4	1a000000	 bne         |$LN6@SDIDMATran|

; 3963 :         {
; 3964 : #ifdef ENABLE_RETAIL_OUTPUT
; 3965 :            RETAILMSG(1, (L"Card has been Removed stopping Output DMA\r\n"));
; 3966 : #endif
; 3967 :            break;

  08de8	ea00002d	 b           |$LN12@SDIDMATran|
  08dec		 |$LN6@SDIDMATran|

; 3968 :         }
; 3969 : 
; 3970 :         MMC_STAT = Read_MMC_STAT(); 

  08dec	e59d0050	 ldr         r0, [sp, #0x50]
  08df0	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  08df4	e58d0038	 str         r0, [sp, #0x38]
  08df8	e59d3038	 ldr         r3, [sp, #0x38]
  08dfc	e58d3000	 str         r3, [sp]

; 3971 :         if(MMC_STAT & MMCHS_STAT_TC)

  08e00	e59d3000	 ldr         r3, [sp]
  08e04	e3130002	 tst         r3, #2
  08e08	0a000000	 beq         |$LN5@SDIDMATran|

; 3972 :         {
; 3973 :             break;

  08e0c	ea000024	 b           |$LN12@SDIDMATran|
  08e10		 |$LN5@SDIDMATran|

; 3974 :         }
; 3975 :         if( MMC_STAT & MMCHS_STAT_DTO )

  08e10	e59d3000	 ldr         r3, [sp]
  08e14	e3130601	 tst         r3, #1, 12
  08e18	0a00000e	 beq         |$LN4@SDIDMATran|

; 3976 :         {
; 3977 :             DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDIDMATransmit() - exit: STAT register indicates MMC_STAT_DTO error.\n")));

  08e1c	e59f30d0	 ldr         r3, [pc, #0xD0]
  08e20	e5933440	 ldr         r3, [r3, #0x440]
  08e24	e3130902	 tst         r3, #2, 18
  08e28	0a000004	 beq         |$LN30@SDIDMATran|
  08e2c	e59f00c4	 ldr         r0, [pc, #0xC4]
  08e30	eb000000	 bl          NKDbgPrintfW
  08e34	e3a03001	 mov         r3, #1
  08e38	e58d303c	 str         r3, [sp, #0x3C]
  08e3c	ea000001	 b           |$LN31@SDIDMATran|
  08e40		 |$LN30@SDIDMATran|
  08e40	e3a03000	 mov         r3, #0
  08e44	e58d303c	 str         r3, [sp, #0x3C]
  08e48		 |$LN31@SDIDMATran|

; 3978 : #ifdef ENABLE_RETAIL_OUTPUT
; 3979 :             RETAILMSG(1, (TEXT("SDIDMATransmit() - exit: STAT register indicates MMC_STAT_DTO error.\n")));
; 3980 : #endif            
; 3981 :             // stop DMA
; 3982 :             SDIO_StopInputDMA();

  08e48	e59d0050	 ldr         r0, [sp, #0x50]
  08e4c	eb000000	 bl          |?SDIO_StopInputDMA@CSDIOControllerBase@@QAAXXZ|
  08e50	ea000020	 b           |$LN3@SDIDMATran|

; 3983 :             goto cleanUp;

  08e54	ea00001f	 b           |$cleanUp$43914|
  08e58		 |$LN4@SDIDMATran|

; 3984 :         }
; 3985 :         if( MMC_STAT & MMCHS_STAT_DCRC ) // DATA CRC Error

  08e58	e59d3000	 ldr         r3, [sp]
  08e5c	e3130602	 tst         r3, #2, 12
  08e60	0a00000e	 beq         |$LN2@SDIDMATran|

; 3986 :         {
; 3987 :             DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDIDMATransmit() - exit: STAT register indicates MMC_CRC_ERROR_RCVD error.\n")));

  08e64	e59f3088	 ldr         r3, [pc, #0x88]
  08e68	e5933440	 ldr         r3, [r3, #0x440]
  08e6c	e3130902	 tst         r3, #2, 18
  08e70	0a000004	 beq         |$LN32@SDIDMATran|
  08e74	e59f0074	 ldr         r0, [pc, #0x74]
  08e78	eb000000	 bl          NKDbgPrintfW
  08e7c	e3a03001	 mov         r3, #1
  08e80	e58d3040	 str         r3, [sp, #0x40]
  08e84	ea000001	 b           |$LN33@SDIDMATran|
  08e88		 |$LN32@SDIDMATran|
  08e88	e3a03000	 mov         r3, #0
  08e8c	e58d3040	 str         r3, [sp, #0x40]
  08e90		 |$LN33@SDIDMATran|

; 3988 : #ifdef ENABLE_RETAIL_OUTPUT
; 3989 :             RETAILMSG(1, (TEXT("SDIDMATransmit() - exit: STAT register indicates MMC_CRC_ERROR_RCVD error.\n")));
; 3990 : #endif
; 3991 :             // stop DMA
; 3992 :             SDIO_StopInputDMA();

  08e90	e59d0050	 ldr         r0, [sp, #0x50]
  08e94	eb000000	 bl          |?SDIO_StopInputDMA@CSDIOControllerBase@@QAAXXZ|
  08e98	ea00000e	 b           |$LN1@SDIDMATran|

; 3993 :             goto cleanUp;

  08e9c	ea00000d	 b           |$cleanUp$43914|
  08ea0		 |$LN2@SDIDMATran|

; 3994 :         }
; 3995 :     }

  08ea0	eaffffa1	 b           |$LN13@SDIDMATran|
  08ea4		 |$LN12@SDIDMATran|

; 3996 :     MMC_STAT = Read_MMC_STAT();

  08ea4	e59d0050	 ldr         r0, [sp, #0x50]
  08ea8	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  08eac	e58d0044	 str         r0, [sp, #0x44]
  08eb0	e59d3044	 ldr         r3, [sp, #0x44]
  08eb4	e58d3000	 str         r3, [sp]

; 3997 : 
; 3998 :     // stop DMA
; 3999 :     SDIO_StopOutputDMA();

  08eb8	e59d0050	 ldr         r0, [sp, #0x50]
  08ebc	eb000000	 bl          |?SDIO_StopOutputDMA@CSDIOControllerBase@@QAAXXZ|

; 4000 :     Set_MMC_STAT(MMCHS_STAT_TC);

  08ec0	e3a01002	 mov         r1, #2
  08ec4	e59d0050	 ldr         r0, [sp, #0x50]
  08ec8	eb000000	 bl          |?Set_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|

; 4001 : 
; 4002 :     return TRUE;

  08ecc	e3a03001	 mov         r3, #1
  08ed0	e58d3010	 str         r3, [sp, #0x10]
  08ed4	ea000001	 b           |$LN20@SDIDMATran|
  08ed8		 |$LN1@SDIDMATran|
  08ed8		 |$LN3@SDIDMATran|
  08ed8		 |$LN10@SDIDMATran|
  08ed8		 |$LN14@SDIDMATran|
  08ed8		 |$LN16@SDIDMATran|
  08ed8		 |$LN18@SDIDMATran|
  08ed8		 |$cleanUp$43914|

; 4003 : 
; 4004 : cleanUp:
; 4005 : #ifdef ENABLE_RETAIL_OUTPUT
; 4006 :     RETAILMSG(1, (L"CSDIOControllerBase::SDIDMATransmit(%08X, %08X)-\r\n", INREG32(&m_pbRegisters->MMCHS_STAT), INREG32(&m_pbRegisters->MMCHS_PSTATE)));
; 4007 : #endif
; 4008 :     return FALSE;

  08ed8	e3a03000	 mov         r3, #0
  08edc	e58d3010	 str         r3, [sp, #0x10]
  08ee0		 |$LN20@SDIDMATran|

; 4009 : }

  08ee0	e59d0010	 ldr         r0, [sp, #0x10]
  08ee4	e28dd048	 add         sp, sp, #0x48
  08ee8	e89d6000	 ldmia       sp, {sp, lr}
  08eec	e12fff1e	 bx          lr
  08ef0		 |$LN37@SDIDMATran|
  08ef0		 |$LN38@SDIDMATran|
  08ef0	00000000	 DCD         |??_C@_1JI@DCJPJIP@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe@|
  08ef4		 |$LN39@SDIDMATran|
  08ef4	00000000	 DCD         |dpCurSettings|
  08ef8		 |$LN40@SDIDMATran|
  08ef8	00000000	 DCD         |??_C@_1IM@DGGMFDHF@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe@|
  08efc		 |$LN41@SDIDMATran|
  08efc	00000000	 DCD         |??_C@_1GG@GOJDNFHN@?$AAA?$AA?4?$AAS?$AA?4?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAw?$AAh?$AAi?$AAl?$AAe?$AA?5?$AAp?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAT@|
  08f00		 |$LN42@SDIDMATran|
  08f00	00000000	 DCD         |??_C@_1EG@DADBLINE@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAT?$AAI?$AAM?$AAE?$AAO?$AAU?$AAT@|
  08f04		 |$LN43@SDIDMATran|
  08f04	00000000	 DCD         |??_C@_1IO@MBIOKFGG@?$AAS?$AAD?$AAI?$AAD?$AAM?$AAA?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAS?$AAT?$AAA?$AAT?$AA?5?$AAr?$AAe@|
  08f08		 |$M46380|

			 ENDP  ; |?SDIDMATransmit@CSDIOControllerBase@@QAAHPAEKH@Z|, CSDIOControllerBase::SDIDMATransmit

	EXPORT	|??_C@_1EM@JJKEMLLK@?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAT?$AAI?$AAM?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BC@HNHNNGOO@?$AAR?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00228			 AREA	 |.pdata|, PDATA
|$T46403| DCD	|$LN40@SDIPolling|
	DCD	0x40010a04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@JJKEMLLK@?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAT?$AAI?$AAM?$AAE@| DCB "S"
	DCB	0x0, "D", 0x0, "I", 0x0, "P", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, "R", 0x0, "e", 0x0, "c"
	DCB	0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "i"
	DCB	0x0, "t", 0x0, ":", 0x0, " ", 0x0, "T", 0x0, "I", 0x0, "M"
	DCB	0x0, "E", 0x0, "O", 0x0, "U", 0x0, "T", 0x0, ".", 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@HNHNNGOO@?$AAR?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")"
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  08f08			 AREA	 |.text|, CODE, ARM

  08f08		 |?SDIPollingReceive@CSDIOControllerBase@@QAAHPAEK@Z| PROC ; CSDIOControllerBase::SDIPollingReceive

; 4020 : {

  08f08		 |$LN40@SDIPolling|
  08f08	e1a0c00d	 mov         r12, sp
  08f0c	e92d0007	 stmdb       sp!, {r0 - r2}
  08f10	e92d5000	 stmdb       sp!, {r12, lr}
  08f14	e24dd068	 sub         sp, sp, #0x68
  08f18		 |$M46400|

; 4021 :     DWORD fifoSizeW, blockLengthW; // Almost Full level and block length
; 4022 :     DWORD dwCount1, dwCount2;
; 4023 : 
; 4024 :     DWORD *pbuf = (DWORD *) pBuff;

  08f18	e59d3074	 ldr         r3, [sp, #0x74]
  08f1c	e58d3008	 str         r3, [sp, #8]

; 4025 :     DWORD __unaligned *pbuf2 = (DWORD *) pBuff;

  08f20	e59d3074	 ldr         r3, [sp, #0x74]
  08f24	e58d3018	 str         r3, [sp, #0x18]

; 4026 : #ifdef ENABLE_RETAIL_OUTPUT
; 4027 :     UINT16 __unaligned *pbuf3 = (UINT16 *) pBuff;
; 4028 : #endif
; 4029 :     DWORD dwCountStart;
; 4030 : 
; 4031 :     DEBUGMSG(SHC_RECEIVE_ZONE, (TEXT("R(0x%x)\n"), dwLen));

  08f28	e59f33fc	 ldr         r3, [pc, #0x3FC]
  08f2c	e5933440	 ldr         r3, [r3, #0x440]
  08f30	e3130008	 tst         r3, #8
  08f34	0a000005	 beq         |$LN30@SDIPolling|
  08f38	e59d1078	 ldr         r1, [sp, #0x78]
  08f3c	e59f03e4	 ldr         r0, [pc, #0x3E4]
  08f40	eb000000	 bl          NKDbgPrintfW
  08f44	e3a03001	 mov         r3, #1
  08f48	e58d3024	 str         r3, [sp, #0x24]
  08f4c	ea000001	 b           |$LN31@SDIPolling|
  08f50		 |$LN30@SDIPolling|
  08f50	e3a03000	 mov         r3, #0
  08f54	e58d3024	 str         r3, [sp, #0x24]
  08f58		 |$LN31@SDIPolling|

; 4032 :     //check the parameters
; 4033 : 
; 4034 :     DWORD MMC_STAT = Read_MMC_STAT();

  08f58	e59d0070	 ldr         r0, [sp, #0x70]
  08f5c	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  08f60	e58d0028	 str         r0, [sp, #0x28]
  08f64	e59d3028	 ldr         r3, [sp, #0x28]
  08f68	e58d3010	 str         r3, [sp, #0x10]

; 4035 :     INREG32(&m_pbRegisters->MMCHS_PSTATE);

  08f6c	e59d3070	 ldr         r3, [sp, #0x70]
  08f70	e2833f57	 add         r3, r3, #0x57, 30
  08f74	e5933000	 ldr         r3, [r3]
  08f78	e2833f49	 add         r3, r3, #0x49, 30
  08f7c	e5933000	 ldr         r3, [r3]
  08f80	e58d302c	 str         r3, [sp, #0x2C]

; 4036 : 
; 4037 :     // calculate timeout conditions
; 4038 :     dwCountStart = GetTickCount();

  08f84	eb000000	 bl          GetTickCount
  08f88	e58d0030	 str         r0, [sp, #0x30]
  08f8c	e59d3030	 ldr         r3, [sp, #0x30]
  08f90	e58d3014	 str         r3, [sp, #0x14]

; 4039 : 
; 4040 : 
; 4041 :     if(dwLen % MMC_BLOCK_SIZE || m_dwSDIOCard)

  08f94	e59d1078	 ldr         r1, [sp, #0x78]
  08f98	e3a00c02	 mov         r0, #2, 24
  08f9c	eb000000	 bl          __rt_udiv
  08fa0	e3510000	 cmp         r1, #0
  08fa4	1a000004	 bne         |$LN26@SDIPolling|
  08fa8	e59d3070	 ldr         r3, [sp, #0x70]
  08fac	e2833f5e	 add         r3, r3, #0x5E, 30
  08fb0	e5933000	 ldr         r3, [r3]
  08fb4	e3530000	 cmp         r3, #0
  08fb8	0a000047	 beq         |$LN27@SDIPolling|
  08fbc		 |$LN26@SDIPolling|
  08fbc		 |$LN25@SDIPolling|

; 4042 :         {
; 4043 :           while ((Read_MMC_STAT() & MMCHS_STAT_BRR) != MMCHS_STAT_BRR)

  08fbc	e59d0070	 ldr         r0, [sp, #0x70]
  08fc0	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  08fc4	e58d0034	 str         r0, [sp, #0x34]
  08fc8	e59d3034	 ldr         r3, [sp, #0x34]
  08fcc	e2033020	 and         r3, r3, #0x20
  08fd0	e3530020	 cmp         r3, #0x20
  08fd4	0a000013	 beq         |$LN24@SDIPolling|

; 4044 :           {
; 4045 :            // check for a timeout
; 4046 :             if (GetTickCount() - dwCountStart > m_dwMaxTimeout)

  08fd8	eb000000	 bl          GetTickCount
  08fdc	e58d0038	 str         r0, [sp, #0x38]
  08fe0	e59d2038	 ldr         r2, [sp, #0x38]
  08fe4	e59d3014	 ldr         r3, [sp, #0x14]
  08fe8	e0422003	 sub         r2, r2, r3
  08fec	e59d3070	 ldr         r3, [sp, #0x70]
  08ff0	e2833e15	 add         r3, r3, #0x15, 28
  08ff4	e5933000	 ldr         r3, [r3]
  08ff8	e1520003	 cmp         r2, r3
  08ffc	9a000008	 bls         |$LN23@SDIPolling|

; 4047 :             {
; 4048 :               DEBUGMSG(ZONE_ENABLE_ERROR, (TEXT("SDIPollingReceive() - exit: TIMEOUT.\n")));

  09000	e59f031c	 ldr         r0, [pc, #0x31C]
  09004	eb000000	 bl          NKDbgPrintfW
  09008	e3a03001	 mov         r3, #1
  0900c	e58d303c	 str         r3, [sp, #0x3C]
  09010	ea000001	 b           |$LN33@SDIPolling|
  09014	e3a03000	 mov         r3, #0
  09018	e58d303c	 str         r3, [sp, #0x3C]
  0901c		 |$LN33@SDIPolling|

; 4049 :               goto READ_ERROR;

  0901c	ea0000ba	 b           |$LN22@SDIPolling|
  09020	ea0000b9	 b           |$READ_ERROR$43981|
  09024		 |$LN23@SDIPolling|

; 4050 :             }
; 4051 :           }

  09024	eaffffe4	 b           |$LN25@SDIPolling|
  09028		 |$LN24@SDIPolling|

; 4052 : 
; 4053 :            Set_MMC_STAT(MMCHS_STAT_BRR);

  09028	e3a01020	 mov         r1, #0x20
  0902c	e59d0070	 ldr         r0, [sp, #0x70]
  09030	eb000000	 bl          |?Set_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|

; 4054 :         fifoSizeW = dwLen / sizeof(DWORD);

  09034	e59d1078	 ldr         r1, [sp, #0x78]
  09038	e3a00004	 mov         r0, #4
  0903c	eb000000	 bl          __rt_udiv
  09040	e58d0000	 str         r0, [sp]

; 4055 :         if(dwLen % sizeof(DWORD)) fifoSizeW++;

  09044	e59d1078	 ldr         r1, [sp, #0x78]
  09048	e3a00004	 mov         r0, #4
  0904c	eb000000	 bl          __rt_udiv
  09050	e3510000	 cmp         r1, #0
  09054	0a000002	 beq         |$LN21@SDIPolling|
  09058	e59d3000	 ldr         r3, [sp]
  0905c	e2833001	 add         r3, r3, #1
  09060	e58d3000	 str         r3, [sp]
  09064		 |$LN21@SDIPolling|

; 4056 :            for (dwCount2 = 0; dwCount2 < fifoSizeW; dwCount2++)

  09064	e3a03000	 mov         r3, #0
  09068	e58d3004	 str         r3, [sp, #4]
  0906c	ea000002	 b           |$LN20@SDIPolling|
  09070		 |$LN19@SDIPolling|
  09070	e59d3004	 ldr         r3, [sp, #4]
  09074	e2833001	 add         r3, r3, #1
  09078	e58d3004	 str         r3, [sp, #4]
  0907c		 |$LN20@SDIPolling|
  0907c	e59d2004	 ldr         r2, [sp, #4]
  09080	e59d3000	 ldr         r3, [sp]
  09084	e1520003	 cmp         r2, r3
  09088	2a000012	 bcs         |$LN18@SDIPolling|

; 4057 :            {
; 4058 :                *pbuf2 = INREG32(&m_pbRegisters->MMCHS_DATA) ;

  0908c	e59d3070	 ldr         r3, [sp, #0x70]
  09090	e2833f57	 add         r3, r3, #0x57, 30
  09094	e5933000	 ldr         r3, [r3]
  09098	e2833e12	 add         r3, r3, #0x12, 28
  0909c	e5933000	 ldr         r3, [r3]
  090a0	e59d1018	 ldr         r1, [sp, #0x18]
  090a4	e5c13000	 strb        r3, [r1]
  090a8	e1a02423	 mov         r2, r3, lsr #8
  090ac	e1a03002	 mov         r3, r2
  090b0	e5c13001	 strb        r3, [r1, #1]
  090b4	e1a02422	 mov         r2, r2, lsr #8
  090b8	e1a03002	 mov         r3, r2
  090bc	e5c13002	 strb        r3, [r1, #2]
  090c0	e1a03422	 mov         r3, r2, lsr #8
  090c4	e5c13003	 strb        r3, [r1, #3]

; 4059 :                pbuf2++;

  090c8	e59d3018	 ldr         r3, [sp, #0x18]
  090cc	e2833004	 add         r3, r3, #4
  090d0	e58d3018	 str         r3, [sp, #0x18]
  090d4	eaffffe5	 b           |$LN19@SDIPolling|
  090d8		 |$LN18@SDIPolling|

; 4060 :            }

  090d8	ea00004c	 b           |$LN17@SDIPolling|
  090dc		 |$LN27@SDIPolling|

; 4061 :     } else
; 4062 :     {
; 4063 :       fifoSizeW = INREG32(&m_pbRegisters->MMCHS_BLK) & 0xFFFF;

  090dc	e59d3070	 ldr         r3, [sp, #0x70]
  090e0	e2833f57	 add         r3, r3, #0x57, 30
  090e4	e5933000	 ldr         r3, [r3]
  090e8	e2833f41	 add         r3, r3, #0x41, 30
  090ec	e5932000	 ldr         r2, [r3]
  090f0	e3a03cff	 mov         r3, #0xFF, 24
  090f4	e38330ff	 orr         r3, r3, #0xFF
  090f8	e0023003	 and         r3, r2, r3
  090fc	e58d3000	 str         r3, [sp]

; 4064 :       blockLengthW = dwLen / fifoSizeW;

  09100	e59d1078	 ldr         r1, [sp, #0x78]
  09104	e59d0000	 ldr         r0, [sp]
  09108	eb000000	 bl          __rt_udiv
  0910c	e58d000c	 str         r0, [sp, #0xC]

; 4065 :       for (dwCount1 = 0; dwCount1 < blockLengthW; dwCount1++)

  09110	e3a03000	 mov         r3, #0
  09114	e58d301c	 str         r3, [sp, #0x1C]
  09118	ea000002	 b           |$LN16@SDIPolling|
  0911c		 |$LN15@SDIPolling|
  0911c	e59d301c	 ldr         r3, [sp, #0x1C]
  09120	e2833001	 add         r3, r3, #1
  09124	e58d301c	 str         r3, [sp, #0x1C]
  09128		 |$LN16@SDIPolling|
  09128	e59d201c	 ldr         r2, [sp, #0x1C]
  0912c	e59d300c	 ldr         r3, [sp, #0xC]
  09130	e1520003	 cmp         r2, r3
  09134	2a000035	 bcs         |$LN14@SDIPolling|
  09138		 |$LN13@SDIPolling|

; 4066 :       {
; 4067 :         // Wait for Block ready for read
; 4068 :         while((Read_MMC_STAT() & MMCHS_STAT_BRR) != MMCHS_STAT_BRR)

  09138	e59d0070	 ldr         r0, [sp, #0x70]
  0913c	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  09140	e58d0040	 str         r0, [sp, #0x40]
  09144	e59d3040	 ldr         r3, [sp, #0x40]
  09148	e2033020	 and         r3, r3, #0x20
  0914c	e3530020	 cmp         r3, #0x20
  09150	0a000013	 beq         |$LN12@SDIPolling|

; 4069 :         {
; 4070 :           // check for a timeout
; 4071 :           if (GetTickCount() - dwCountStart > m_dwMaxTimeout)

  09154	eb000000	 bl          GetTickCount
  09158	e58d0044	 str         r0, [sp, #0x44]
  0915c	e59d2044	 ldr         r2, [sp, #0x44]
  09160	e59d3014	 ldr         r3, [sp, #0x14]
  09164	e0422003	 sub         r2, r2, r3
  09168	e59d3070	 ldr         r3, [sp, #0x70]
  0916c	e2833e15	 add         r3, r3, #0x15, 28
  09170	e5933000	 ldr         r3, [r3]
  09174	e1520003	 cmp         r2, r3
  09178	9a000008	 bls         |$LN11@SDIPolling|

; 4072 :           {
; 4073 :             DEBUGMSG(ZONE_ENABLE_ERROR, (TEXT("SDIPollingReceive() - exit: TIMEOUT.\n")));

  0917c	e59f01a0	 ldr         r0, [pc, #0x1A0]
  09180	eb000000	 bl          NKDbgPrintfW
  09184	e3a03001	 mov         r3, #1
  09188	e58d3048	 str         r3, [sp, #0x48]
  0918c	ea000001	 b           |$LN35@SDIPolling|
  09190	e3a03000	 mov         r3, #0
  09194	e58d3048	 str         r3, [sp, #0x48]
  09198		 |$LN35@SDIPolling|

; 4074 :             goto READ_ERROR;

  09198	ea00005b	 b           |$LN10@SDIPolling|
  0919c	ea00005a	 b           |$READ_ERROR$43981|
  091a0		 |$LN11@SDIPolling|

; 4075 :           }
; 4076 :         }

  091a0	eaffffe4	 b           |$LN13@SDIPolling|
  091a4		 |$LN12@SDIPolling|

; 4077 :         Set_MMC_STAT(MMCHS_STAT_BRR);

  091a4	e3a01020	 mov         r1, #0x20
  091a8	e59d0070	 ldr         r0, [sp, #0x70]
  091ac	eb000000	 bl          |?Set_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|

; 4078 : 
; 4079 :         // Get all data from DATA register and write in user buffer
; 4080 :         for (dwCount2 = 0; dwCount2 < (fifoSizeW / sizeof(DWORD)); dwCount2++)

  091b0	e3a03000	 mov         r3, #0
  091b4	e58d3004	 str         r3, [sp, #4]
  091b8	ea000002	 b           |$LN9@SDIPolling|
  091bc		 |$LN8@SDIPolling|
  091bc	e59d3004	 ldr         r3, [sp, #4]
  091c0	e2833001	 add         r3, r3, #1
  091c4	e58d3004	 str         r3, [sp, #4]
  091c8		 |$LN9@SDIPolling|
  091c8	e59d1000	 ldr         r1, [sp]
  091cc	e3a00004	 mov         r0, #4
  091d0	eb000000	 bl          __rt_udiv
  091d4	e59d3004	 ldr         r3, [sp, #4]
  091d8	e1530000	 cmp         r3, r0
  091dc	2a00000a	 bcs         |$LN7@SDIPolling|

; 4081 :         {
; 4082 :             *pbuf = INREG32(&m_pbRegisters->MMCHS_DATA) ;

  091e0	e59d3070	 ldr         r3, [sp, #0x70]
  091e4	e2833f57	 add         r3, r3, #0x57, 30
  091e8	e5933000	 ldr         r3, [r3]
  091ec	e2833e12	 add         r3, r3, #0x12, 28
  091f0	e5932000	 ldr         r2, [r3]
  091f4	e59d3008	 ldr         r3, [sp, #8]
  091f8	e5832000	 str         r2, [r3]

; 4083 :             pbuf++;

  091fc	e59d3008	 ldr         r3, [sp, #8]
  09200	e2833004	 add         r3, r3, #4
  09204	e58d3008	 str         r3, [sp, #8]

; 4084 :         }

  09208	eaffffeb	 b           |$LN8@SDIPolling|
  0920c		 |$LN7@SDIPolling|

; 4085 :       }

  0920c	eaffffc2	 b           |$LN15@SDIPolling|
  09210		 |$LN14@SDIPolling|
  09210		 |$LN17@SDIPolling|

; 4086 :     }
; 4087 :     // recalculate timeout conditions
; 4088 :     dwCountStart = GetTickCount();

  09210	eb000000	 bl          GetTickCount
  09214	e58d004c	 str         r0, [sp, #0x4C]
  09218	e59d304c	 ldr         r3, [sp, #0x4C]
  0921c	e58d3014	 str         r3, [sp, #0x14]
  09220		 |$LN6@SDIPolling|

; 4089 : 
; 4090 :     while (((Read_MMC_STAT()&MMCHS_STAT_TC) != MMCHS_STAT_TC))

  09220	e59d0070	 ldr         r0, [sp, #0x70]
  09224	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  09228	e58d0050	 str         r0, [sp, #0x50]
  0922c	e59d3050	 ldr         r3, [sp, #0x50]
  09230	e2033002	 and         r3, r3, #2
  09234	e3530002	 cmp         r3, #2
  09238	0a000013	 beq         |$LN5@SDIPolling|

; 4091 :     {
; 4092 :         // check for a timeout
; 4093 :         if (GetTickCount() - dwCountStart > m_dwMaxTimeout)

  0923c	eb000000	 bl          GetTickCount
  09240	e58d0054	 str         r0, [sp, #0x54]
  09244	e59d2054	 ldr         r2, [sp, #0x54]
  09248	e59d3014	 ldr         r3, [sp, #0x14]
  0924c	e0422003	 sub         r2, r2, r3
  09250	e59d3070	 ldr         r3, [sp, #0x70]
  09254	e2833e15	 add         r3, r3, #0x15, 28
  09258	e5933000	 ldr         r3, [r3]
  0925c	e1520003	 cmp         r2, r3
  09260	9a000008	 bls         |$LN4@SDIPolling|

; 4094 :         {
; 4095 :             DEBUGMSG(ZONE_ENABLE_ERROR, (TEXT("SDIPollingReceive() - exit: TIMEOUT.\n")));

  09264	e59f00b8	 ldr         r0, [pc, #0xB8]
  09268	eb000000	 bl          NKDbgPrintfW
  0926c	e3a03001	 mov         r3, #1
  09270	e58d3058	 str         r3, [sp, #0x58]
  09274	ea000001	 b           |$LN37@SDIPolling|
  09278	e3a03000	 mov         r3, #0
  0927c	e58d3058	 str         r3, [sp, #0x58]
  09280		 |$LN37@SDIPolling|

; 4096 :             goto READ_ERROR;

  09280	ea000021	 b           |$LN3@SDIPolling|
  09284	ea000020	 b           |$READ_ERROR$43981|
  09288		 |$LN4@SDIPolling|

; 4097 :         }
; 4098 :     }

  09288	eaffffe4	 b           |$LN6@SDIPolling|
  0928c		 |$LN5@SDIPolling|

; 4099 : 
; 4100 :     Set_MMC_STAT(MMCHS_STAT_TC);

  0928c	e3a01002	 mov         r1, #2
  09290	e59d0070	 ldr         r0, [sp, #0x70]
  09294	eb000000	 bl          |?Set_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|

; 4101 :     // Check if there is no CRC error
; 4102 :     if (!(Read_MMC_STAT() & MMCHS_STAT_DCRC))

  09298	e59d0070	 ldr         r0, [sp, #0x70]
  0929c	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  092a0	e58d005c	 str         r0, [sp, #0x5C]
  092a4	e59d305c	 ldr         r3, [sp, #0x5C]
  092a8	e3130602	 tst         r3, #2, 12
  092ac	1a00000b	 bne         |$LN2@SDIPolling|

; 4103 :     {
; 4104 :         MMC_STAT = Read_MMC_STAT();

  092b0	e59d0070	 ldr         r0, [sp, #0x70]
  092b4	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  092b8	e58d0060	 str         r0, [sp, #0x60]
  092bc	e59d3060	 ldr         r3, [sp, #0x60]
  092c0	e58d3010	 str         r3, [sp, #0x10]

; 4105 :         Write_MMC_STAT(MMC_STAT);

  092c4	e59d1010	 ldr         r1, [sp, #0x10]
  092c8	e59d0070	 ldr         r0, [sp, #0x70]
  092cc	eb000000	 bl          |?Write_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|

; 4106 :         return TRUE;

  092d0	e3a03001	 mov         r3, #1
  092d4	e58d3020	 str         r3, [sp, #0x20]
  092d8	ea00000d	 b           |$LN28@SDIPolling|

; 4107 :     }
; 4108 :     else

  092dc	ea00000a	 b           |$LN1@SDIPolling|
  092e0		 |$LN2@SDIPolling|

; 4109 :     {
; 4110 : #ifdef ENABLE_RETAIL_OUTPUT
; 4111 :         RETAILMSG(1, (L"CSDIOControllerBase::SDIPollingReceive(ERROR:%08X)\r\n", INREG32(&m_pbRegisters->MMCHS_STAT)));
; 4112 : #endif
; 4113 :         MMC_STAT = Read_MMC_STAT();

  092e0	e59d0070	 ldr         r0, [sp, #0x70]
  092e4	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  092e8	e58d0064	 str         r0, [sp, #0x64]
  092ec	e59d3064	 ldr         r3, [sp, #0x64]
  092f0	e58d3010	 str         r3, [sp, #0x10]

; 4114 :         Write_MMC_STAT(MMC_STAT);

  092f4	e59d1010	 ldr         r1, [sp, #0x10]
  092f8	e59d0070	 ldr         r0, [sp, #0x70]
  092fc	eb000000	 bl          |?Write_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|

; 4115 :         return FALSE;

  09300	e3a03000	 mov         r3, #0
  09304	e58d3020	 str         r3, [sp, #0x20]
  09308	ea000001	 b           |$LN28@SDIPolling|
  0930c		 |$LN1@SDIPolling|
  0930c		 |$LN3@SDIPolling|
  0930c		 |$LN10@SDIPolling|
  0930c		 |$LN22@SDIPolling|
  0930c		 |$READ_ERROR$43981|

; 4116 :     }
; 4117 : #ifdef ENABLE_RETAIL_OUTPUT
; 4118 :     if (dwLen == 2)
; 4119 :       RETAILMSG(1, (TEXT("SDIPollingReceive([%d: %04x])\n"), dwLen, pbuf3[0]));
; 4120 :     else
; 4121 :       RETAILMSG(1, (TEXT("SDIPollingReceive([%d: %08x,%08x])\n"), dwLen, pbuf2[0], pbuf2[1]));
; 4122 : #endif
; 4123 : 
; 4124 : READ_ERROR:
; 4125 : 
; 4126 : #ifdef ENABLE_RETAIL_OUTPUT
; 4127 :     RETAILMSG(1, (L"CSDIOControllerBase::SDIPollingReceive(BUSY:%08X)\r\n", INREG32(&m_pbRegisters->MMCHS_STAT)));
; 4128 : #endif
; 4129 :     return FALSE;

  0930c	e3a03000	 mov         r3, #0
  09310	e58d3020	 str         r3, [sp, #0x20]
  09314		 |$LN28@SDIPolling|

; 4130 : }

  09314	e59d0020	 ldr         r0, [sp, #0x20]
  09318	e28dd068	 add         sp, sp, #0x68
  0931c	e89d6000	 ldmia       sp, {sp, lr}
  09320	e12fff1e	 bx          lr
  09324		 |$LN41@SDIPolling|
  09324		 |$LN42@SDIPolling|
  09324	00000000	 DCD         |??_C@_1EM@JJKEMLLK@?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAT?$AAI?$AAM?$AAE@|
  09328		 |$LN43@SDIPolling|
  09328	00000000	 DCD         |??_C@_1BC@HNHNNGOO@?$AAR?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?6?$AA?$AA@|
  0932c		 |$LN44@SDIPolling|
  0932c	00000000	 DCD         |dpCurSettings|
  09330		 |$M46401|

			 ENDP  ; |?SDIPollingReceive@CSDIOControllerBase@@QAAHPAEK@Z|, CSDIOControllerBase::SDIPollingReceive

	EXPORT	|??_C@_1EO@OICBHMBH@?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAT?$AAI?$AAM@| [ DATA ] ; `string'

  00230			 AREA	 |.pdata|, PDATA
|$T46419| DCD	|$LN38@SDIPolling@2|
	DCD	0x4000df04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@OICBHMBH@?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAT?$AAI?$AAM@| DCB "S"
	DCB	0x0, "D", 0x0, "I", 0x0, "P", 0x0, "o", 0x0, "l", 0x0, "l"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "m", 0x0, "i", 0x0, "t", 0x0, "("
	DCB	0x0, ")", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "e", 0x0, "x"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "T", 0x0, "I"
	DCB	0x0, "M", 0x0, "E", 0x0, "O", 0x0, "U", 0x0, "T", 0x0, "."
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  09330			 AREA	 |.text|, CODE, ARM

  09330		 |?SDIPollingTransmit@CSDIOControllerBase@@QAAHPAEK@Z| PROC ; CSDIOControllerBase::SDIPollingTransmit

; 4134 : {

  09330		 |$LN38@SDIPolling@2|
  09330	e1a0c00d	 mov         r12, sp
  09334	e92d0007	 stmdb       sp!, {r0 - r2}
  09338	e92d5000	 stmdb       sp!, {r12, lr}
  0933c	e24dd050	 sub         sp, sp, #0x50
  09340		 |$M46416|

; 4135 :     DWORD fifoSizeW, blockLengthW; // Almost Full level and block length
; 4136 :     DWORD dwCount1, dwCount2;
; 4137 :     DWORD *pbuf = (DWORD *) pBuff; // short* of buffer

  09340	e59d305c	 ldr         r3, [sp, #0x5C]
  09344	e58d3008	 str         r3, [sp, #8]

; 4138 :     DWORD __unaligned *pbuf2 = (DWORD *) pBuff;

  09348	e59d305c	 ldr         r3, [sp, #0x5C]
  0934c	e58d3014	 str         r3, [sp, #0x14]

; 4139 : #ifdef ENABLE_RETAIL_OUTPUT
; 4140 :     UINT16 __unaligned *pbuf3 = (UINT16 *) pBuff;
; 4141 : #endif
; 4142 :     DWORD dwCountStart;
; 4143 : 
; 4144 : #ifdef ENABLE_RETAIL_OUTPUT
; 4145 :     if (dwLen == 2)
; 4146 :       RETAILMSG(1, (TEXT("SDIPollingTransmit([%d: %04x])\n"), dwLen, pbuf3[0]));
; 4147 :     else
; 4148 :       RETAILMSG(1, (TEXT("SDIPollingTransmit([%d: %08x,%08x])\n"), dwLen, pbuf2[0], pbuf2[1]));
; 4149 : #endif
; 4150 : 
; 4151 :     // calculate timeout conditions
; 4152 :     dwCountStart = GetTickCount();

  09350	eb000000	 bl          GetTickCount
  09354	e58d0020	 str         r0, [sp, #0x20]
  09358	e59d3020	 ldr         r3, [sp, #0x20]
  0935c	e58d3010	 str         r3, [sp, #0x10]

; 4153 : 
; 4154 :     if(dwLen % MMC_BLOCK_SIZE || m_dwSDIOCard)

  09360	e59d1060	 ldr         r1, [sp, #0x60]
  09364	e3a00c02	 mov         r0, #2, 24
  09368	eb000000	 bl          __rt_udiv
  0936c	e3510000	 cmp         r1, #0
  09370	1a000004	 bne         |$LN26@SDIPolling@2|
  09374	e59d3058	 ldr         r3, [sp, #0x58]
  09378	e2833f5e	 add         r3, r3, #0x5E, 30
  0937c	e5933000	 ldr         r3, [r3]
  09380	e3530000	 cmp         r3, #0
  09384	0a000048	 beq         |$LN27@SDIPolling@2|
  09388		 |$LN26@SDIPolling@2|
  09388		 |$LN25@SDIPolling@2|

; 4155 :         {
; 4156 :           while((Read_MMC_STAT() & MMCHS_STAT_BWR) != MMCHS_STAT_BWR)

  09388	e59d0058	 ldr         r0, [sp, #0x58]
  0938c	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  09390	e58d0024	 str         r0, [sp, #0x24]
  09394	e59d3024	 ldr         r3, [sp, #0x24]
  09398	e2033010	 and         r3, r3, #0x10
  0939c	e3530010	 cmp         r3, #0x10
  093a0	0a000013	 beq         |$LN24@SDIPolling@2|

; 4157 :           {
; 4158 :             if (GetTickCount() - dwCountStart > m_dwMaxTimeout)

  093a4	eb000000	 bl          GetTickCount
  093a8	e58d0028	 str         r0, [sp, #0x28]
  093ac	e59d2028	 ldr         r2, [sp, #0x28]
  093b0	e59d3010	 ldr         r3, [sp, #0x10]
  093b4	e0422003	 sub         r2, r2, r3
  093b8	e59d3058	 ldr         r3, [sp, #0x58]
  093bc	e2833e15	 add         r3, r3, #0x15, 28
  093c0	e5933000	 ldr         r3, [r3]
  093c4	e1520003	 cmp         r2, r3
  093c8	9a000008	 bls         |$LN23@SDIPolling@2|

; 4159 :             {
; 4160 :             DEBUGMSG(ZONE_ENABLE_ERROR, (TEXT("SDIPollingTransmit() - exit: TIMEOUT.\n")));

  093cc	e59f02d4	 ldr         r0, [pc, #0x2D4]
  093d0	eb000000	 bl          NKDbgPrintfW
  093d4	e3a03001	 mov         r3, #1
  093d8	e58d302c	 str         r3, [sp, #0x2C]
  093dc	ea000001	 b           |$LN31@SDIPolling@2|
  093e0	e3a03000	 mov         r3, #0
  093e4	e58d302c	 str         r3, [sp, #0x2C]
  093e8		 |$LN31@SDIPolling@2|

; 4161 :               goto WRITE_ERROR;

  093e8	ea0000a8	 b           |$LN22@SDIPolling@2|
  093ec	ea0000a7	 b           |$WRITE_ERROR$44036|
  093f0		 |$LN23@SDIPolling@2|

; 4162 :             }
; 4163 :           }

  093f0	eaffffe4	 b           |$LN25@SDIPolling@2|
  093f4		 |$LN24@SDIPolling@2|

; 4164 :           Set_MMC_STAT(MMCHS_STAT_BWR);

  093f4	e3a01010	 mov         r1, #0x10
  093f8	e59d0058	 ldr         r0, [sp, #0x58]
  093fc	eb000000	 bl          |?Set_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|

; 4165 : 
; 4166 :         fifoSizeW = dwLen / sizeof(DWORD);

  09400	e59d1060	 ldr         r1, [sp, #0x60]
  09404	e3a00004	 mov         r0, #4
  09408	eb000000	 bl          __rt_udiv
  0940c	e58d0000	 str         r0, [sp]

; 4167 :         if(dwLen % sizeof(DWORD)) fifoSizeW++;

  09410	e59d1060	 ldr         r1, [sp, #0x60]
  09414	e3a00004	 mov         r0, #4
  09418	eb000000	 bl          __rt_udiv
  0941c	e3510000	 cmp         r1, #0
  09420	0a000002	 beq         |$LN21@SDIPolling@2|
  09424	e59d3000	 ldr         r3, [sp]
  09428	e2833001	 add         r3, r3, #1
  0942c	e58d3000	 str         r3, [sp]
  09430		 |$LN21@SDIPolling@2|

; 4168 :           for (dwCount1 = 0; dwCount1 < fifoSizeW; dwCount1++)

  09430	e3a03000	 mov         r3, #0
  09434	e58d3018	 str         r3, [sp, #0x18]
  09438	ea000002	 b           |$LN20@SDIPolling@2|
  0943c		 |$LN19@SDIPolling@2|
  0943c	e59d3018	 ldr         r3, [sp, #0x18]
  09440	e2833001	 add         r3, r3, #1
  09444	e58d3018	 str         r3, [sp, #0x18]
  09448		 |$LN20@SDIPolling@2|
  09448	e59d2018	 ldr         r2, [sp, #0x18]
  0944c	e59d3000	 ldr         r3, [sp]
  09450	e1520003	 cmp         r2, r3
  09454	2a000013	 bcs         |$LN18@SDIPolling@2|

; 4169 :           {
; 4170 :               OUTREG32(&m_pbRegisters->MMCHS_DATA, *pbuf2++) ;

  09458	e59d3058	 ldr         r3, [sp, #0x58]
  0945c	e2833f57	 add         r3, r3, #0x57, 30
  09460	e5933000	 ldr         r3, [r3]
  09464	e2830e12	 add         r0, r3, #0x12, 28
  09468	e59d1014	 ldr         r1, [sp, #0x14]
  0946c	e5d13003	 ldrb        r3, [r1, #3]
  09470	e1a02403	 mov         r2, r3, lsl #8
  09474	e5d13002	 ldrb        r3, [r1, #2]
  09478	e1833002	 orr         r3, r3, r2
  0947c	e1a02403	 mov         r2, r3, lsl #8
  09480	e5d13001	 ldrb        r3, [r1, #1]
  09484	e1833002	 orr         r3, r3, r2
  09488	e1a02403	 mov         r2, r3, lsl #8
  0948c	e5d13000	 ldrb        r3, [r1]
  09490	e1833002	 orr         r3, r3, r2
  09494	e5803000	 str         r3, [r0]
  09498	e59d3014	 ldr         r3, [sp, #0x14]
  0949c	e2833004	 add         r3, r3, #4
  094a0	e58d3014	 str         r3, [sp, #0x14]
  094a4	eaffffe4	 b           |$LN19@SDIPolling@2|
  094a8		 |$LN18@SDIPolling@2|

; 4171 :           }

  094a8	ea00004c	 b           |$LN17@SDIPolling@2|
  094ac		 |$LN27@SDIPolling@2|

; 4172 :     } else
; 4173 :     {
; 4174 :       fifoSizeW = INREG32(&m_pbRegisters->MMCHS_BLK) & 0xFFFF;

  094ac	e59d3058	 ldr         r3, [sp, #0x58]
  094b0	e2833f57	 add         r3, r3, #0x57, 30
  094b4	e5933000	 ldr         r3, [r3]
  094b8	e2833f41	 add         r3, r3, #0x41, 30
  094bc	e5932000	 ldr         r2, [r3]
  094c0	e3a03cff	 mov         r3, #0xFF, 24
  094c4	e38330ff	 orr         r3, r3, #0xFF
  094c8	e0023003	 and         r3, r2, r3
  094cc	e58d3000	 str         r3, [sp]

; 4175 :       blockLengthW = dwLen / fifoSizeW;

  094d0	e59d1060	 ldr         r1, [sp, #0x60]
  094d4	e59d0000	 ldr         r0, [sp]
  094d8	eb000000	 bl          __rt_udiv
  094dc	e58d000c	 str         r0, [sp, #0xC]

; 4176 :       for (dwCount1 = 0; dwCount1 < blockLengthW; dwCount1++)

  094e0	e3a03000	 mov         r3, #0
  094e4	e58d3018	 str         r3, [sp, #0x18]
  094e8	ea000002	 b           |$LN16@SDIPolling@2|
  094ec		 |$LN15@SDIPolling@2|
  094ec	e59d3018	 ldr         r3, [sp, #0x18]
  094f0	e2833001	 add         r3, r3, #1
  094f4	e58d3018	 str         r3, [sp, #0x18]
  094f8		 |$LN16@SDIPolling@2|
  094f8	e59d2018	 ldr         r2, [sp, #0x18]
  094fc	e59d300c	 ldr         r3, [sp, #0xC]
  09500	e1520003	 cmp         r2, r3
  09504	2a000035	 bcs         |$LN14@SDIPolling@2|
  09508		 |$LN13@SDIPolling@2|

; 4177 :       {
; 4178 :         // poll on write ready here
; 4179 :         while((Read_MMC_STAT() & MMCHS_STAT_BWR) != MMCHS_STAT_BWR)

  09508	e59d0058	 ldr         r0, [sp, #0x58]
  0950c	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  09510	e58d0030	 str         r0, [sp, #0x30]
  09514	e59d3030	 ldr         r3, [sp, #0x30]
  09518	e2033010	 and         r3, r3, #0x10
  0951c	e3530010	 cmp         r3, #0x10
  09520	0a000013	 beq         |$LN12@SDIPolling@2|

; 4180 :         {
; 4181 :           if (GetTickCount() - dwCountStart > m_dwMaxTimeout)

  09524	eb000000	 bl          GetTickCount
  09528	e58d0034	 str         r0, [sp, #0x34]
  0952c	e59d2034	 ldr         r2, [sp, #0x34]
  09530	e59d3010	 ldr         r3, [sp, #0x10]
  09534	e0422003	 sub         r2, r2, r3
  09538	e59d3058	 ldr         r3, [sp, #0x58]
  0953c	e2833e15	 add         r3, r3, #0x15, 28
  09540	e5933000	 ldr         r3, [r3]
  09544	e1520003	 cmp         r2, r3
  09548	9a000008	 bls         |$LN11@SDIPolling@2|

; 4182 :           {
; 4183 :             DEBUGMSG(ZONE_ENABLE_ERROR, (TEXT("SDIPollingTransmit() - exit: TIMEOUT.\n")));

  0954c	e59f0154	 ldr         r0, [pc, #0x154]
  09550	eb000000	 bl          NKDbgPrintfW
  09554	e3a03001	 mov         r3, #1
  09558	e58d3038	 str         r3, [sp, #0x38]
  0955c	ea000001	 b           |$LN33@SDIPolling@2|
  09560	e3a03000	 mov         r3, #0
  09564	e58d3038	 str         r3, [sp, #0x38]
  09568		 |$LN33@SDIPolling@2|

; 4184 :             goto WRITE_ERROR;

  09568	ea000048	 b           |$LN10@SDIPolling@2|
  0956c	ea000047	 b           |$WRITE_ERROR$44036|
  09570		 |$LN11@SDIPolling@2|

; 4185 :           }
; 4186 :         }

  09570	eaffffe4	 b           |$LN13@SDIPolling@2|
  09574		 |$LN12@SDIPolling@2|

; 4187 :         Set_MMC_STAT(MMCHS_STAT_BWR);

  09574	e3a01010	 mov         r1, #0x10
  09578	e59d0058	 ldr         r0, [sp, #0x58]
  0957c	eb000000	 bl          |?Set_MMC_STAT@CSDIOControllerBase@@QAAXK@Z|

; 4188 : 
; 4189 :         for (dwCount2 = 0; dwCount2 < (fifoSizeW /sizeof(DWORD)); dwCount2++) // write data to DATA buffer

  09580	e3a03000	 mov         r3, #0
  09584	e58d3004	 str         r3, [sp, #4]
  09588	ea000002	 b           |$LN9@SDIPolling@2|
  0958c		 |$LN8@SDIPolling@2|
  0958c	e59d3004	 ldr         r3, [sp, #4]
  09590	e2833001	 add         r3, r3, #1
  09594	e58d3004	 str         r3, [sp, #4]
  09598		 |$LN9@SDIPolling@2|
  09598	e59d1000	 ldr         r1, [sp]
  0959c	e3a00004	 mov         r0, #4
  095a0	eb000000	 bl          __rt_udiv
  095a4	e59d3004	 ldr         r3, [sp, #4]
  095a8	e1530000	 cmp         r3, r0
  095ac	2a00000a	 bcs         |$LN7@SDIPolling@2|

; 4190 :         {
; 4191 :           OUTREG32(&m_pbRegisters->MMCHS_DATA, *pbuf++);

  095b0	e59d3058	 ldr         r3, [sp, #0x58]
  095b4	e2833f57	 add         r3, r3, #0x57, 30
  095b8	e5933000	 ldr         r3, [r3]
  095bc	e2832e12	 add         r2, r3, #0x12, 28
  095c0	e59d3008	 ldr         r3, [sp, #8]
  095c4	e5933000	 ldr         r3, [r3]
  095c8	e5823000	 str         r3, [r2]
  095cc	e59d3008	 ldr         r3, [sp, #8]
  095d0	e2833004	 add         r3, r3, #4
  095d4	e58d3008	 str         r3, [sp, #8]

; 4192 :         }

  095d8	eaffffeb	 b           |$LN8@SDIPolling@2|
  095dc		 |$LN7@SDIPolling@2|

; 4193 :       }

  095dc	eaffffc2	 b           |$LN15@SDIPolling@2|
  095e0		 |$LN14@SDIPolling@2|
  095e0		 |$LN17@SDIPolling@2|

; 4194 :     }
; 4195 : 
; 4196 :     // recalculate timeout conditions
; 4197 :     dwCountStart = GetTickCount();

  095e0	eb000000	 bl          GetTickCount
  095e4	e58d003c	 str         r0, [sp, #0x3C]
  095e8	e59d303c	 ldr         r3, [sp, #0x3C]
  095ec	e58d3010	 str         r3, [sp, #0x10]
  095f0		 |$LN6@SDIPolling@2|

; 4198 : 
; 4199 :     while (((Read_MMC_STAT()&MMCHS_STAT_TC) != MMCHS_STAT_TC))

  095f0	e59d0058	 ldr         r0, [sp, #0x58]
  095f4	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  095f8	e58d0040	 str         r0, [sp, #0x40]
  095fc	e59d3040	 ldr         r3, [sp, #0x40]
  09600	e2033002	 and         r3, r3, #2
  09604	e3530002	 cmp         r3, #2
  09608	0a000013	 beq         |$LN5@SDIPolling@2|

; 4200 :     {
; 4201 :         // check for a timeout
; 4202 :         if (GetTickCount() - dwCountStart > m_dwMaxTimeout)

  0960c	eb000000	 bl          GetTickCount
  09610	e58d0044	 str         r0, [sp, #0x44]
  09614	e59d2044	 ldr         r2, [sp, #0x44]
  09618	e59d3010	 ldr         r3, [sp, #0x10]
  0961c	e0422003	 sub         r2, r2, r3
  09620	e59d3058	 ldr         r3, [sp, #0x58]
  09624	e2833e15	 add         r3, r3, #0x15, 28
  09628	e5933000	 ldr         r3, [r3]
  0962c	e1520003	 cmp         r2, r3
  09630	9a000008	 bls         |$LN4@SDIPolling@2|

; 4203 :         {
; 4204 :             DEBUGMSG(ZONE_ENABLE_ERROR, (TEXT("SDIPollingTransmit() - exit: TIMEOUT.\n")));

  09634	e59f006c	 ldr         r0, [pc, #0x6C]
  09638	eb000000	 bl          NKDbgPrintfW
  0963c	e3a03001	 mov         r3, #1
  09640	e58d3048	 str         r3, [sp, #0x48]
  09644	ea000001	 b           |$LN35@SDIPolling@2|
  09648	e3a03000	 mov         r3, #0
  0964c	e58d3048	 str         r3, [sp, #0x48]
  09650		 |$LN35@SDIPolling@2|

; 4205 :             goto WRITE_ERROR;

  09650	ea00000e	 b           |$LN3@SDIPolling@2|
  09654	ea00000d	 b           |$WRITE_ERROR$44036|
  09658		 |$LN4@SDIPolling@2|

; 4206 :         }
; 4207 :     }

  09658	eaffffe4	 b           |$LN6@SDIPolling@2|
  0965c		 |$LN5@SDIPolling@2|

; 4208 : 
; 4209 :     // Check if there is no CRC error
; 4210 :     if (!(Read_MMC_STAT() & MMCHS_STAT_DCRC))

  0965c	e59d0058	 ldr         r0, [sp, #0x58]
  09660	eb000000	 bl          |?Read_MMC_STAT@CSDIOControllerBase@@QAAKXZ|
  09664	e58d004c	 str         r0, [sp, #0x4C]
  09668	e59d304c	 ldr         r3, [sp, #0x4C]
  0966c	e3130602	 tst         r3, #2, 12
  09670	1a000003	 bne         |$LN2@SDIPolling@2|

; 4211 :     {
; 4212 :         return TRUE;

  09674	e3a03001	 mov         r3, #1
  09678	e58d301c	 str         r3, [sp, #0x1C]
  0967c	ea000005	 b           |$LN28@SDIPolling@2|

; 4213 :     }
; 4214 :     else

  09680	ea000002	 b           |$LN1@SDIPolling@2|
  09684		 |$LN2@SDIPolling@2|

; 4215 :     {
; 4216 : #ifdef ENABLE_RETAIL_OUTPUT
; 4217 :         RETAILMSG(1, (L"CSDIOControllerBase::SDIPollingTransmit(ERROR:%08X)\r\n", INREG32(&m_pbRegisters->MMCHS_STAT)));
; 4218 : #endif
; 4219 :         return FALSE;

  09684	e3a03000	 mov         r3, #0
  09688	e58d301c	 str         r3, [sp, #0x1C]
  0968c	ea000001	 b           |$LN28@SDIPolling@2|
  09690		 |$LN1@SDIPolling@2|
  09690		 |$LN3@SDIPolling@2|
  09690		 |$LN10@SDIPolling@2|
  09690		 |$LN22@SDIPolling@2|
  09690		 |$WRITE_ERROR$44036|

; 4220 :     }
; 4221 : 
; 4222 : WRITE_ERROR:
; 4223 : #ifdef ENABLE_RETAIL_OUTPUT
; 4224 :     RETAILMSG(1, (L"CSDIOControllerBase::SDIPollingTransmit(BUSY:%08X)\r\n", INREG32(&m_pbRegisters->MMCHS_STAT)));
; 4225 : #endif
; 4226 :     return FALSE;

  09690	e3a03000	 mov         r3, #0
  09694	e58d301c	 str         r3, [sp, #0x1C]
  09698		 |$LN28@SDIPolling@2|

; 4227 : }

  09698	e59d001c	 ldr         r0, [sp, #0x1C]
  0969c	e28dd050	 add         sp, sp, #0x50
  096a0	e89d6000	 ldmia       sp, {sp, lr}
  096a4	e12fff1e	 bx          lr
  096a8		 |$LN39@SDIPolling@2|
  096a8		 |$LN40@SDIPolling@2|
  096a8	00000000	 DCD         |??_C@_1EO@OICBHMBH@?$AAS?$AAD?$AAI?$AAP?$AAo?$AAl?$AAl?$AAi?$AAn?$AAg?$AAT?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAe?$AAx?$AAi?$AAt?$AA?3?$AA?5?$AAT?$AAI?$AAM@|
  096ac		 |$M46417|

			 ENDP  ; |?SDIPollingTransmit@CSDIOControllerBase@@QAAHPAEK@Z|, CSDIOControllerBase::SDIPollingTransmit

	EXPORT	|??_C@_1FE@HLDPOBBF@?$AA?9?$AAD?$AAu?$AAm?$AAp?$AAS?$AAt?$AAd?$AAH?$AAC?$AAR?$AAe?$AAg?$AAs?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@FFIBNPDD@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAC?$AAU?$AAR?$AA_?$AAC?$AAA?$AAP?$AAA?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@CPLAGIKP@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAC?$AAA?$AAP?$AAA?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@IOPOIJOC@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@FFHFADBD@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAS?$AAY?$AAS?$AAC?$AAT?$AAL?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@EALGPIJE@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAH?$AAC?$AAT?$AAL?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@ILPMKHGM@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAR?$AAS?$AAP?$AA7?$AA6?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@EHINCAAM@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAR?$AAS?$AAP?$AA5?$AA4?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@MIGOKPON@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAR?$AAS?$AAP?$AA3?$AA2?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@EBPCIIN@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAR?$AAS?$AAP?$AA1?$AA0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@LLDBFBCO@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAR?$AAE?$AAV?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@FHBPLDCO@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAB?$AAL?$AAK?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@BNOGDPON@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAI?$AAS?$AAE?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@CNMLNCJN@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAI?$AAE?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@GEDMDJD@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAP?$AAS?$AAT?$AAA?$AAT?$AAE?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@JJGGPFLO@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAS?$AAT?$AAA?$AAT?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@ILIIKIIP@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAP?$AAW?$AAC?$AAN?$AAT?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@LOCJEEJE@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAC?$AAO?$AAN?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@COGPLNJN@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAA?$AAR?$AAG?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@FCKCODGN@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAC?$AAM?$AAD?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@HMEHCFPG@?$AA?$CL?$AAD?$AAu?$AAm?$AAp?$AAS?$AAt?$AAd?$AAH?$AAC?$AAR?$AAe?$AAg?$AAs?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@| [ DATA ] ; `string'
	EXPORT	|?DumpRegisters@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::DumpRegisters

  00238			 AREA	 |.pdata|, PDATA
|$T46468| DCD	|$LN47@DumpRegist|
	DCD	0x40016904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@HLDPOBBF@?$AA?9?$AAD?$AAu?$AAm?$AAp?$AAS?$AAt?$AAd?$AAH?$AAC?$AAR?$AAe?$AAg?$AAs?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@| DCB "-"
	DCB	0x0, "D", 0x0, "u", 0x0, "m", 0x0, "p", 0x0, "S", 0x0, "t"
	DCB	0x0, "d", 0x0, "H", 0x0, "C", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "s", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@FFIBNPDD@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAC?$AAU?$AAR?$AA_?$AAC?$AAA?$AAP?$AAA?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "H", 0x0, "S", 0x0, "_", 0x0, "C"
	DCB	0x0, "U", 0x0, "R", 0x0, "_", 0x0, "C", 0x0, "A", 0x0, "P"
	DCB	0x0, "A", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@CPLAGIKP@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAC?$AAA?$AAP?$AAA?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "H", 0x0, "S", 0x0, "_", 0x0, "C"
	DCB	0x0, "A", 0x0, "P", 0x0, "A", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@IOPOIJOC@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "H", 0x0, "S", 0x0, "_", 0x0, "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F"
	DCB	0x0, "I", 0x0, "G", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@FFHFADBD@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAS?$AAY?$AAS?$AAC?$AAT?$AAL?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "H", 0x0, "S", 0x0, "_", 0x0, "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@EALGPIJE@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAH?$AAC?$AAT?$AAL?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "H", 0x0, "S", 0x0, "_", 0x0, "H"
	DCB	0x0, "C", 0x0, "T", 0x0, "L", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@ILPMKHGM@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAR?$AAS?$AAP?$AA7?$AA6?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "H", 0x0, "S", 0x0, "_", 0x0, "R"
	DCB	0x0, "S", 0x0, "P", 0x0, "7", 0x0, "6", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, " "
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@EHINCAAM@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAR?$AAS?$AAP?$AA5?$AA4?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "H", 0x0, "S", 0x0, "_", 0x0, "R"
	DCB	0x0, "S", 0x0, "P", 0x0, "5", 0x0, "4", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, " "
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@MIGOKPON@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAR?$AAS?$AAP?$AA3?$AA2?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "H", 0x0, "S", 0x0, "_", 0x0, "R"
	DCB	0x0, "S", 0x0, "P", 0x0, "3", 0x0, "2", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, " "
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@EBPCIIN@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAR?$AAS?$AAP?$AA1?$AA0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "H", 0x0, "S", 0x0, "_", 0x0, "R"
	DCB	0x0, "S", 0x0, "P", 0x0, "1", 0x0, "0", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, " "
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@LLDBFBCO@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAR?$AAE?$AAV?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "H", 0x0, "S", 0x0, "_", 0x0, "R"
	DCB	0x0, "E", 0x0, "V", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@FHBPLDCO@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAB?$AAL?$AAK?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "H", 0x0, "S", 0x0, "_", 0x0, "B"
	DCB	0x0, "L", 0x0, "K", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@BNOGDPON@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAI?$AAS?$AAE?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "H", 0x0, "S", 0x0, "_", 0x0, "I"
	DCB	0x0, "S", 0x0, "E", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@CNMLNCJN@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAI?$AAE?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "H", 0x0, "S", 0x0, "_", 0x0, "I"
	DCB	0x0, "E", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@GEDMDJD@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAP?$AAS?$AAT?$AAA?$AAT?$AAE?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "H", 0x0, "S", 0x0, "_", 0x0, "P"
	DCB	0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "E", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@JJGGPFLO@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAS?$AAT?$AAA?$AAT?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "H", 0x0, "S", 0x0, "_", 0x0, "S"
	DCB	0x0, "T", 0x0, "A", 0x0, "T", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@ILIIKIIP@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAP?$AAW?$AAC?$AAN?$AAT?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "H", 0x0, "S", 0x0, "_", 0x0, "P"
	DCB	0x0, "W", 0x0, "C", 0x0, "N", 0x0, "T", 0x0, " ", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@LOCJEEJE@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAC?$AAO?$AAN?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "H", 0x0, "S", 0x0, "_", 0x0, "C"
	DCB	0x0, "O", 0x0, "N", 0x0, " ", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@COGPLNJN@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAA?$AAR?$AAG?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "H", 0x0, "S", 0x0, "_", 0x0, "A"
	DCB	0x0, "R", 0x0, "G", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@FCKCODGN@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAC?$AAM?$AAD?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "M"
	DCB	0x0, "M", 0x0, "C", 0x0, "H", 0x0, "S", 0x0, "_", 0x0, "C"
	DCB	0x0, "M", 0x0, "D", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "X", 0x0, " ", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@HMEHCFPG@?$AA?$CL?$AAD?$AAu?$AAm?$AAp?$AAS?$AAt?$AAd?$AAH?$AAC?$AAR?$AAe?$AAg?$AAs?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@| DCB "+"
	DCB	0x0, "D", 0x0, "u", 0x0, "m", 0x0, "p", 0x0, "S", 0x0, "t"
	DCB	0x0, "d", 0x0, "H", 0x0, "C", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "s", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  096ac			 AREA	 |.text|, CODE, ARM

  096ac		 |?DumpRegisters@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::DumpRegisters

; 4290 : {

  096ac		 |$LN47@DumpRegist|
  096ac	e1a0c00d	 mov         r12, sp
  096b0	e92d0001	 stmdb       sp!, {r0}
  096b4	e92d5000	 stmdb       sp!, {r12, lr}
  096b8	e24dd054	 sub         sp, sp, #0x54
  096bc		 |$M46465|

; 4291 :     EnterCriticalSection( &m_critSec );

  096bc	e59d305c	 ldr         r3, [sp, #0x5C]
  096c0	e28300b0	 add         r0, r3, #0xB0
  096c4	eb000000	 bl          EnterCriticalSection

; 4292 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("+DumpStdHCRegs-------------------------\r\n")));

  096c8	e59f352c	 ldr         r3, [pc, #0x52C]
  096cc	e5933440	 ldr         r3, [r3, #0x440]
  096d0	e3130a02	 tst         r3, #2, 20
  096d4	0a000004	 beq         |$LN3@DumpRegist|
  096d8	e59f056c	 ldr         r0, [pc, #0x56C]
  096dc	eb000000	 bl          NKDbgPrintfW
  096e0	e3a03001	 mov         r3, #1
  096e4	e58d3000	 str         r3, [sp]
  096e8	ea000001	 b           |$LN4@DumpRegist|
  096ec		 |$LN3@DumpRegist|
  096ec	e3a03000	 mov         r3, #0
  096f0	e58d3000	 str         r3, [sp]
  096f4		 |$LN4@DumpRegist|

; 4293 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("MMCHS_CMD 0x%08X \r\n"), INREG32(&m_pbRegisters->MMCHS_CMD)    ));

  096f4	e59f3500	 ldr         r3, [pc, #0x500]
  096f8	e5933440	 ldr         r3, [r3, #0x440]
  096fc	e3130a02	 tst         r3, #2, 20
  09700	0a000009	 beq         |$LN5@DumpRegist|
  09704	e59d305c	 ldr         r3, [sp, #0x5C]
  09708	e2833f57	 add         r3, r3, #0x57, 30
  0970c	e5933000	 ldr         r3, [r3]
  09710	e2833f43	 add         r3, r3, #0x43, 30
  09714	e5931000	 ldr         r1, [r3]
  09718	e59f0528	 ldr         r0, [pc, #0x528]
  0971c	eb000000	 bl          NKDbgPrintfW
  09720	e3a03001	 mov         r3, #1
  09724	e58d3004	 str         r3, [sp, #4]
  09728	ea000001	 b           |$LN6@DumpRegist|
  0972c		 |$LN5@DumpRegist|
  0972c	e3a03000	 mov         r3, #0
  09730	e58d3004	 str         r3, [sp, #4]
  09734		 |$LN6@DumpRegist|

; 4294 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("MMCHS_ARG 0x%08X \r\n"), INREG32(&m_pbRegisters->MMCHS_ARG)  ));

  09734	e59f34c0	 ldr         r3, [pc, #0x4C0]
  09738	e5933440	 ldr         r3, [r3, #0x440]
  0973c	e3130a02	 tst         r3, #2, 20
  09740	0a000009	 beq         |$LN7@DumpRegist|
  09744	e59d305c	 ldr         r3, [sp, #0x5C]
  09748	e2833f57	 add         r3, r3, #0x57, 30
  0974c	e5933000	 ldr         r3, [r3]
  09750	e2833f42	 add         r3, r3, #0x42, 30
  09754	e5931000	 ldr         r1, [r3]
  09758	e59f04e4	 ldr         r0, [pc, #0x4E4]
  0975c	eb000000	 bl          NKDbgPrintfW
  09760	e3a03001	 mov         r3, #1
  09764	e58d3008	 str         r3, [sp, #8]
  09768	ea000001	 b           |$LN8@DumpRegist|
  0976c		 |$LN7@DumpRegist|
  0976c	e3a03000	 mov         r3, #0
  09770	e58d3008	 str         r3, [sp, #8]
  09774		 |$LN8@DumpRegist|

; 4295 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("MMCHS_CON  0x%08X \r\n"), INREG32(&m_pbRegisters->MMCHS_CON)   ));

  09774	e59f3480	 ldr         r3, [pc, #0x480]
  09778	e5933440	 ldr         r3, [r3, #0x440]
  0977c	e3130a02	 tst         r3, #2, 20
  09780	0a000009	 beq         |$LN9@DumpRegist|
  09784	e59d305c	 ldr         r3, [sp, #0x5C]
  09788	e2833f57	 add         r3, r3, #0x57, 30
  0978c	e5933000	 ldr         r3, [r3]
  09790	e283302c	 add         r3, r3, #0x2C
  09794	e5931000	 ldr         r1, [r3]
  09798	e59f04a0	 ldr         r0, [pc, #0x4A0]
  0979c	eb000000	 bl          NKDbgPrintfW
  097a0	e3a03001	 mov         r3, #1
  097a4	e58d300c	 str         r3, [sp, #0xC]
  097a8	ea000001	 b           |$LN10@DumpRegist|
  097ac		 |$LN9@DumpRegist|
  097ac	e3a03000	 mov         r3, #0
  097b0	e58d300c	 str         r3, [sp, #0xC]
  097b4		 |$LN10@DumpRegist|

; 4296 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("MMCHS_PWCNT  0x%08X \r\n"), INREG32(&m_pbRegisters->MMCHS_PWCNT)   ));

  097b4	e59f3440	 ldr         r3, [pc, #0x440]
  097b8	e5933440	 ldr         r3, [r3, #0x440]
  097bc	e3130a02	 tst         r3, #2, 20
  097c0	0a000009	 beq         |$LN11@DumpRegist|
  097c4	e59d305c	 ldr         r3, [sp, #0x5C]
  097c8	e2833f57	 add         r3, r3, #0x57, 30
  097cc	e5933000	 ldr         r3, [r3]
  097d0	e2833030	 add         r3, r3, #0x30
  097d4	e5931000	 ldr         r1, [r3]
  097d8	e59f045c	 ldr         r0, [pc, #0x45C]
  097dc	eb000000	 bl          NKDbgPrintfW
  097e0	e3a03001	 mov         r3, #1
  097e4	e58d3010	 str         r3, [sp, #0x10]
  097e8	ea000001	 b           |$LN12@DumpRegist|
  097ec		 |$LN11@DumpRegist|
  097ec	e3a03000	 mov         r3, #0
  097f0	e58d3010	 str         r3, [sp, #0x10]
  097f4		 |$LN12@DumpRegist|

; 4297 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("MMCHS_STAT 0x%08X \r\n"), INREG32(&m_pbRegisters->MMCHS_STAT)  ));

  097f4	e59f3400	 ldr         r3, [pc, #0x400]
  097f8	e5933440	 ldr         r3, [r3, #0x440]
  097fc	e3130a02	 tst         r3, #2, 20
  09800	0a000009	 beq         |$LN13@DumpRegist|
  09804	e59d305c	 ldr         r3, [sp, #0x5C]
  09808	e2833f57	 add         r3, r3, #0x57, 30
  0980c	e5933000	 ldr         r3, [r3]
  09810	e2833e13	 add         r3, r3, #0x13, 28
  09814	e5931000	 ldr         r1, [r3]
  09818	e59f0418	 ldr         r0, [pc, #0x418]
  0981c	eb000000	 bl          NKDbgPrintfW
  09820	e3a03001	 mov         r3, #1
  09824	e58d3014	 str         r3, [sp, #0x14]
  09828	ea000001	 b           |$LN14@DumpRegist|
  0982c		 |$LN13@DumpRegist|
  0982c	e3a03000	 mov         r3, #0
  09830	e58d3014	 str         r3, [sp, #0x14]
  09834		 |$LN14@DumpRegist|

; 4298 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("MMCHS_PSTATE 0x%08X \r\n"), INREG32(&m_pbRegisters->MMCHS_PSTATE)  ));

  09834	e59f33c0	 ldr         r3, [pc, #0x3C0]
  09838	e5933440	 ldr         r3, [r3, #0x440]
  0983c	e3130a02	 tst         r3, #2, 20
  09840	0a000009	 beq         |$LN15@DumpRegist|
  09844	e59d305c	 ldr         r3, [sp, #0x5C]
  09848	e2833f57	 add         r3, r3, #0x57, 30
  0984c	e5933000	 ldr         r3, [r3]
  09850	e2833f49	 add         r3, r3, #0x49, 30
  09854	e5931000	 ldr         r1, [r3]
  09858	e59f03d4	 ldr         r0, [pc, #0x3D4]
  0985c	eb000000	 bl          NKDbgPrintfW
  09860	e3a03001	 mov         r3, #1
  09864	e58d3018	 str         r3, [sp, #0x18]
  09868	ea000001	 b           |$LN16@DumpRegist|
  0986c		 |$LN15@DumpRegist|
  0986c	e3a03000	 mov         r3, #0
  09870	e58d3018	 str         r3, [sp, #0x18]
  09874		 |$LN16@DumpRegist|

; 4299 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("MMCHS_IE 0x%08X \r\n"), INREG32(&m_pbRegisters->MMCHS_IE)  ));

  09874	e59f3380	 ldr         r3, [pc, #0x380]
  09878	e5933440	 ldr         r3, [r3, #0x440]
  0987c	e3130a02	 tst         r3, #2, 20
  09880	0a000009	 beq         |$LN17@DumpRegist|
  09884	e59d305c	 ldr         r3, [sp, #0x5C]
  09888	e2833f57	 add         r3, r3, #0x57, 30
  0988c	e5933000	 ldr         r3, [r3]
  09890	e2833f4d	 add         r3, r3, #0x4D, 30
  09894	e5931000	 ldr         r1, [r3]
  09898	e59f0390	 ldr         r0, [pc, #0x390]
  0989c	eb000000	 bl          NKDbgPrintfW
  098a0	e3a03001	 mov         r3, #1
  098a4	e58d301c	 str         r3, [sp, #0x1C]
  098a8	ea000001	 b           |$LN18@DumpRegist|
  098ac		 |$LN17@DumpRegist|
  098ac	e3a03000	 mov         r3, #0
  098b0	e58d301c	 str         r3, [sp, #0x1C]
  098b4		 |$LN18@DumpRegist|

; 4300 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("MMCHS_ISE 0x%08X \r\n"), INREG32(&m_pbRegisters->MMCHS_ISE)  ));

  098b4	e59f3340	 ldr         r3, [pc, #0x340]
  098b8	e5933440	 ldr         r3, [r3, #0x440]
  098bc	e3130a02	 tst         r3, #2, 20
  098c0	0a000009	 beq         |$LN19@DumpRegist|
  098c4	e59d305c	 ldr         r3, [sp, #0x5C]
  098c8	e2833f57	 add         r3, r3, #0x57, 30
  098cc	e5933000	 ldr         r3, [r3]
  098d0	e2833f4e	 add         r3, r3, #0x4E, 30
  098d4	e5931000	 ldr         r1, [r3]
  098d8	e59f034c	 ldr         r0, [pc, #0x34C]
  098dc	eb000000	 bl          NKDbgPrintfW
  098e0	e3a03001	 mov         r3, #1
  098e4	e58d3020	 str         r3, [sp, #0x20]
  098e8	ea000001	 b           |$LN20@DumpRegist|
  098ec		 |$LN19@DumpRegist|
  098ec	e3a03000	 mov         r3, #0
  098f0	e58d3020	 str         r3, [sp, #0x20]
  098f4		 |$LN20@DumpRegist|

; 4301 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("MMCHS_BLK 0x%08X \r\n"), INREG32(&m_pbRegisters->MMCHS_BLK)  ));

  098f4	e59f3300	 ldr         r3, [pc, #0x300]
  098f8	e5933440	 ldr         r3, [r3, #0x440]
  098fc	e3130a02	 tst         r3, #2, 20
  09900	0a000009	 beq         |$LN21@DumpRegist|
  09904	e59d305c	 ldr         r3, [sp, #0x5C]
  09908	e2833f57	 add         r3, r3, #0x57, 30
  0990c	e5933000	 ldr         r3, [r3]
  09910	e2833f41	 add         r3, r3, #0x41, 30
  09914	e5931000	 ldr         r1, [r3]
  09918	e59f0308	 ldr         r0, [pc, #0x308]
  0991c	eb000000	 bl          NKDbgPrintfW
  09920	e3a03001	 mov         r3, #1
  09924	e58d3024	 str         r3, [sp, #0x24]
  09928	ea000001	 b           |$LN22@DumpRegist|
  0992c		 |$LN21@DumpRegist|
  0992c	e3a03000	 mov         r3, #0
  09930	e58d3024	 str         r3, [sp, #0x24]
  09934		 |$LN22@DumpRegist|

; 4302 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("MMCHS_REV 0x%08X \r\n"), INREG32(&m_pbRegisters->MMCHS_REV)    ));

  09934	e59f32c0	 ldr         r3, [pc, #0x2C0]
  09938	e5933440	 ldr         r3, [r3, #0x440]
  0993c	e3130a02	 tst         r3, #2, 20
  09940	0a000009	 beq         |$LN23@DumpRegist|
  09944	e59d305c	 ldr         r3, [sp, #0x5C]
  09948	e2833f57	 add         r3, r3, #0x57, 30
  0994c	e5933000	 ldr         r3, [r3]
  09950	e2833f7f	 add         r3, r3, #0x7F, 30
  09954	e5931000	 ldr         r1, [r3]
  09958	e59f02c4	 ldr         r0, [pc, #0x2C4]
  0995c	eb000000	 bl          NKDbgPrintfW
  09960	e3a03001	 mov         r3, #1
  09964	e58d3028	 str         r3, [sp, #0x28]
  09968	ea000001	 b           |$LN24@DumpRegist|
  0996c		 |$LN23@DumpRegist|
  0996c	e3a03000	 mov         r3, #0
  09970	e58d3028	 str         r3, [sp, #0x28]
  09974		 |$LN24@DumpRegist|

; 4303 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("MMCHS_RSP10 0x%08X \r\n"), INREG32(&m_pbRegisters->MMCHS_RSP10)  ));

  09974	e59f3280	 ldr         r3, [pc, #0x280]
  09978	e5933440	 ldr         r3, [r3, #0x440]
  0997c	e3130a02	 tst         r3, #2, 20
  09980	0a000009	 beq         |$LN25@DumpRegist|
  09984	e59d305c	 ldr         r3, [sp, #0x5C]
  09988	e2833f57	 add         r3, r3, #0x57, 30
  0998c	e5933000	 ldr         r3, [r3]
  09990	e2833e11	 add         r3, r3, #0x11, 28
  09994	e5931000	 ldr         r1, [r3]
  09998	e59f0280	 ldr         r0, [pc, #0x280]
  0999c	eb000000	 bl          NKDbgPrintfW
  099a0	e3a03001	 mov         r3, #1
  099a4	e58d302c	 str         r3, [sp, #0x2C]
  099a8	ea000001	 b           |$LN26@DumpRegist|
  099ac		 |$LN25@DumpRegist|
  099ac	e3a03000	 mov         r3, #0
  099b0	e58d302c	 str         r3, [sp, #0x2C]
  099b4		 |$LN26@DumpRegist|

; 4304 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("MMCHS_RSP32 0x%08X \r\n"), INREG32(&m_pbRegisters->MMCHS_RSP32)  ));

  099b4	e59f3240	 ldr         r3, [pc, #0x240]
  099b8	e5933440	 ldr         r3, [r3, #0x440]
  099bc	e3130a02	 tst         r3, #2, 20
  099c0	0a000009	 beq         |$LN27@DumpRegist|
  099c4	e59d305c	 ldr         r3, [sp, #0x5C]
  099c8	e2833f57	 add         r3, r3, #0x57, 30
  099cc	e5933000	 ldr         r3, [r3]
  099d0	e2833f45	 add         r3, r3, #0x45, 30
  099d4	e5931000	 ldr         r1, [r3]
  099d8	e59f023c	 ldr         r0, [pc, #0x23C]
  099dc	eb000000	 bl          NKDbgPrintfW
  099e0	e3a03001	 mov         r3, #1
  099e4	e58d3030	 str         r3, [sp, #0x30]
  099e8	ea000001	 b           |$LN28@DumpRegist|
  099ec		 |$LN27@DumpRegist|
  099ec	e3a03000	 mov         r3, #0
  099f0	e58d3030	 str         r3, [sp, #0x30]
  099f4		 |$LN28@DumpRegist|

; 4305 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("MMCHS_RSP54 0x%08X \r\n"), INREG32(&m_pbRegisters->MMCHS_RSP54)  ));

  099f4	e59f3200	 ldr         r3, [pc, #0x200]
  099f8	e5933440	 ldr         r3, [r3, #0x440]
  099fc	e3130a02	 tst         r3, #2, 20
  09a00	0a000009	 beq         |$LN29@DumpRegist|
  09a04	e59d305c	 ldr         r3, [sp, #0x5C]
  09a08	e2833f57	 add         r3, r3, #0x57, 30
  09a0c	e5933000	 ldr         r3, [r3]
  09a10	e2833f46	 add         r3, r3, #0x46, 30
  09a14	e5931000	 ldr         r1, [r3]
  09a18	e59f01f8	 ldr         r0, [pc, #0x1F8]
  09a1c	eb000000	 bl          NKDbgPrintfW
  09a20	e3a03001	 mov         r3, #1
  09a24	e58d3034	 str         r3, [sp, #0x34]
  09a28	ea000001	 b           |$LN30@DumpRegist|
  09a2c		 |$LN29@DumpRegist|
  09a2c	e3a03000	 mov         r3, #0
  09a30	e58d3034	 str         r3, [sp, #0x34]
  09a34		 |$LN30@DumpRegist|

; 4306 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("MMCHS_RSP76 0x%08X \r\n"), INREG32(&m_pbRegisters->MMCHS_RSP76)  ));

  09a34	e59f31c0	 ldr         r3, [pc, #0x1C0]
  09a38	e5933440	 ldr         r3, [r3, #0x440]
  09a3c	e3130a02	 tst         r3, #2, 20
  09a40	0a000009	 beq         |$LN31@DumpRegist|
  09a44	e59d305c	 ldr         r3, [sp, #0x5C]
  09a48	e2833f57	 add         r3, r3, #0x57, 30
  09a4c	e5933000	 ldr         r3, [r3]
  09a50	e2833f47	 add         r3, r3, #0x47, 30
  09a54	e5931000	 ldr         r1, [r3]
  09a58	e59f01b4	 ldr         r0, [pc, #0x1B4]
  09a5c	eb000000	 bl          NKDbgPrintfW
  09a60	e3a03001	 mov         r3, #1
  09a64	e58d3038	 str         r3, [sp, #0x38]
  09a68	ea000001	 b           |$LN32@DumpRegist|
  09a6c		 |$LN31@DumpRegist|
  09a6c	e3a03000	 mov         r3, #0
  09a70	e58d3038	 str         r3, [sp, #0x38]
  09a74		 |$LN32@DumpRegist|

; 4307 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("MMCHS_HCTL 0x%08X \r\n"), INREG32(&m_pbRegisters->MMCHS_HCTL)  ));

  09a74	e59f3180	 ldr         r3, [pc, #0x180]
  09a78	e5933440	 ldr         r3, [r3, #0x440]
  09a7c	e3130a02	 tst         r3, #2, 20
  09a80	0a000009	 beq         |$LN33@DumpRegist|
  09a84	e59d305c	 ldr         r3, [sp, #0x5C]
  09a88	e2833f57	 add         r3, r3, #0x57, 30
  09a8c	e5933000	 ldr         r3, [r3]
  09a90	e2833f4a	 add         r3, r3, #0x4A, 30
  09a94	e5931000	 ldr         r1, [r3]
  09a98	e59f0170	 ldr         r0, [pc, #0x170]
  09a9c	eb000000	 bl          NKDbgPrintfW
  09aa0	e3a03001	 mov         r3, #1
  09aa4	e58d303c	 str         r3, [sp, #0x3C]
  09aa8	ea000001	 b           |$LN34@DumpRegist|
  09aac		 |$LN33@DumpRegist|
  09aac	e3a03000	 mov         r3, #0
  09ab0	e58d303c	 str         r3, [sp, #0x3C]
  09ab4		 |$LN34@DumpRegist|

; 4308 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("MMCHS_SYSCTL 0x%08X \r\n"), INREG32(&m_pbRegisters->MMCHS_SYSCTL)  ));

  09ab4	e59f3140	 ldr         r3, [pc, #0x140]
  09ab8	e5933440	 ldr         r3, [r3, #0x440]
  09abc	e3130a02	 tst         r3, #2, 20
  09ac0	0a000009	 beq         |$LN35@DumpRegist|
  09ac4	e59d305c	 ldr         r3, [sp, #0x5C]
  09ac8	e2833f57	 add         r3, r3, #0x57, 30
  09acc	e5933000	 ldr         r3, [r3]
  09ad0	e2833f4b	 add         r3, r3, #0x4B, 30
  09ad4	e5931000	 ldr         r1, [r3]
  09ad8	e59f012c	 ldr         r0, [pc, #0x12C]
  09adc	eb000000	 bl          NKDbgPrintfW
  09ae0	e3a03001	 mov         r3, #1
  09ae4	e58d3040	 str         r3, [sp, #0x40]
  09ae8	ea000001	 b           |$LN36@DumpRegist|
  09aec		 |$LN35@DumpRegist|
  09aec	e3a03000	 mov         r3, #0
  09af0	e58d3040	 str         r3, [sp, #0x40]
  09af4		 |$LN36@DumpRegist|

; 4309 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("MMCHS_SYSCONFIG 0x%08X \r\n"), INREG32(&m_pbRegisters->MMCHS_SYSCONFIG) ));

  09af4	e59f3100	 ldr         r3, [pc, #0x100]
  09af8	e5933440	 ldr         r3, [r3, #0x440]
  09afc	e3130a02	 tst         r3, #2, 20
  09b00	0a000009	 beq         |$LN37@DumpRegist|
  09b04	e59d305c	 ldr         r3, [sp, #0x5C]
  09b08	e2833f57	 add         r3, r3, #0x57, 30
  09b0c	e5933000	 ldr         r3, [r3]
  09b10	e2833010	 add         r3, r3, #0x10
  09b14	e5931000	 ldr         r1, [r3]
  09b18	e59f00e8	 ldr         r0, [pc, #0xE8]
  09b1c	eb000000	 bl          NKDbgPrintfW
  09b20	e3a03001	 mov         r3, #1
  09b24	e58d3044	 str         r3, [sp, #0x44]
  09b28	ea000001	 b           |$LN38@DumpRegist|
  09b2c		 |$LN37@DumpRegist|
  09b2c	e3a03000	 mov         r3, #0
  09b30	e58d3044	 str         r3, [sp, #0x44]
  09b34		 |$LN38@DumpRegist|

; 4310 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("MMCHS_CAPA 0x%08X \r\n"), INREG32(&m_pbRegisters->MMCHS_CAPA) ));

  09b34	e59f30c0	 ldr         r3, [pc, #0xC0]
  09b38	e5933440	 ldr         r3, [r3, #0x440]
  09b3c	e3130a02	 tst         r3, #2, 20
  09b40	0a000009	 beq         |$LN39@DumpRegist|
  09b44	e59d305c	 ldr         r3, [sp, #0x5C]
  09b48	e2833f57	 add         r3, r3, #0x57, 30
  09b4c	e5933000	 ldr         r3, [r3]
  09b50	e2833d05	 add         r3, r3, #5, 26
  09b54	e5931000	 ldr         r1, [r3]
  09b58	e59f00a4	 ldr         r0, [pc, #0xA4]
  09b5c	eb000000	 bl          NKDbgPrintfW
  09b60	e3a03001	 mov         r3, #1
  09b64	e58d3048	 str         r3, [sp, #0x48]
  09b68	ea000001	 b           |$LN40@DumpRegist|
  09b6c		 |$LN39@DumpRegist|
  09b6c	e3a03000	 mov         r3, #0
  09b70	e58d3048	 str         r3, [sp, #0x48]
  09b74		 |$LN40@DumpRegist|

; 4311 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("MMCHS_CUR_CAPA 0x%08X \r\n"), INREG32(&m_pbRegisters->MMCHS_CUR_CAPA) ));

  09b74	e59f3080	 ldr         r3, [pc, #0x80]
  09b78	e5933440	 ldr         r3, [r3, #0x440]
  09b7c	e3130a02	 tst         r3, #2, 20
  09b80	0a000009	 beq         |$LN41@DumpRegist|
  09b84	e59d305c	 ldr         r3, [sp, #0x5C]
  09b88	e2833f57	 add         r3, r3, #0x57, 30
  09b8c	e5933000	 ldr         r3, [r3]
  09b90	e2833f52	 add         r3, r3, #0x52, 30
  09b94	e5931000	 ldr         r1, [r3]
  09b98	e59f0060	 ldr         r0, [pc, #0x60]
  09b9c	eb000000	 bl          NKDbgPrintfW
  09ba0	e3a03001	 mov         r3, #1
  09ba4	e58d304c	 str         r3, [sp, #0x4C]
  09ba8	ea000001	 b           |$LN42@DumpRegist|
  09bac		 |$LN41@DumpRegist|
  09bac	e3a03000	 mov         r3, #0
  09bb0	e58d304c	 str         r3, [sp, #0x4C]
  09bb4		 |$LN42@DumpRegist|

; 4312 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("-DumpStdHCRegs-------------------------\r\n")));

  09bb4	e59f3040	 ldr         r3, [pc, #0x40]
  09bb8	e5933440	 ldr         r3, [r3, #0x440]
  09bbc	e3130a02	 tst         r3, #2, 20
  09bc0	0a000004	 beq         |$LN43@DumpRegist|
  09bc4	e59f002c	 ldr         r0, [pc, #0x2C]
  09bc8	eb000000	 bl          NKDbgPrintfW
  09bcc	e3a03001	 mov         r3, #1
  09bd0	e58d3050	 str         r3, [sp, #0x50]
  09bd4	ea000001	 b           |$LN44@DumpRegist|
  09bd8		 |$LN43@DumpRegist|
  09bd8	e3a03000	 mov         r3, #0
  09bdc	e58d3050	 str         r3, [sp, #0x50]
  09be0		 |$LN44@DumpRegist|

; 4313 :     LeaveCriticalSection( &m_critSec );

  09be0	e59d305c	 ldr         r3, [sp, #0x5C]
  09be4	e28300b0	 add         r0, r3, #0xB0
  09be8	eb000000	 bl          LeaveCriticalSection

; 4314 : }

  09bec	e28dd054	 add         sp, sp, #0x54
  09bf0	e89d6000	 ldmia       sp, {sp, lr}
  09bf4	e12fff1e	 bx          lr
  09bf8		 |$LN48@DumpRegist|
  09bf8		 |$LN49@DumpRegist|
  09bf8	00000000	 DCD         |??_C@_1FE@HLDPOBBF@?$AA?9?$AAD?$AAu?$AAm?$AAp?$AAS?$AAt?$AAd?$AAH?$AAC?$AAR?$AAe?$AAg?$AAs?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@|
  09bfc		 |$LN50@DumpRegist|
  09bfc	00000000	 DCD         |dpCurSettings|
  09c00		 |$LN51@DumpRegist|
  09c00	00000000	 DCD         |??_C@_1DC@FFIBNPDD@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAC?$AAU?$AAR?$AA_?$AAC?$AAA?$AAP?$AAA?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  09c04		 |$LN52@DumpRegist|
  09c04	00000000	 DCD         |??_C@_1CK@CPLAGIKP@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAC?$AAA?$AAP?$AAA?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  09c08		 |$LN53@DumpRegist|
  09c08	00000000	 DCD         |??_C@_1DE@IOPOIJOC@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  09c0c		 |$LN54@DumpRegist|
  09c0c	00000000	 DCD         |??_C@_1CO@FFHFADBD@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAS?$AAY?$AAS?$AAC?$AAT?$AAL?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  09c10		 |$LN55@DumpRegist|
  09c10	00000000	 DCD         |??_C@_1CK@EALGPIJE@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAH?$AAC?$AAT?$AAL?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  09c14		 |$LN56@DumpRegist|
  09c14	00000000	 DCD         |??_C@_1CM@ILPMKHGM@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAR?$AAS?$AAP?$AA7?$AA6?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  09c18		 |$LN57@DumpRegist|
  09c18	00000000	 DCD         |??_C@_1CM@EHINCAAM@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAR?$AAS?$AAP?$AA5?$AA4?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  09c1c		 |$LN58@DumpRegist|
  09c1c	00000000	 DCD         |??_C@_1CM@MIGOKPON@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAR?$AAS?$AAP?$AA3?$AA2?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  09c20		 |$LN59@DumpRegist|
  09c20	00000000	 DCD         |??_C@_1CM@EBPCIIN@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAR?$AAS?$AAP?$AA1?$AA0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  09c24		 |$LN60@DumpRegist|
  09c24	00000000	 DCD         |??_C@_1CI@LLDBFBCO@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAR?$AAE?$AAV?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  09c28		 |$LN61@DumpRegist|
  09c28	00000000	 DCD         |??_C@_1CI@FHBPLDCO@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAB?$AAL?$AAK?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  09c2c		 |$LN62@DumpRegist|
  09c2c	00000000	 DCD         |??_C@_1CI@BNOGDPON@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAI?$AAS?$AAE?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  09c30		 |$LN63@DumpRegist|
  09c30	00000000	 DCD         |??_C@_1CG@CNMLNCJN@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAI?$AAE?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  09c34		 |$LN64@DumpRegist|
  09c34	00000000	 DCD         |??_C@_1CO@GEDMDJD@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAP?$AAS?$AAT?$AAA?$AAT?$AAE?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  09c38		 |$LN65@DumpRegist|
  09c38	00000000	 DCD         |??_C@_1CK@JJGGPFLO@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAS?$AAT?$AAA?$AAT?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  09c3c		 |$LN66@DumpRegist|
  09c3c	00000000	 DCD         |??_C@_1CO@ILIIKIIP@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAP?$AAW?$AAC?$AAN?$AAT?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  09c40		 |$LN67@DumpRegist|
  09c40	00000000	 DCD         |??_C@_1CK@LOCJEEJE@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAC?$AAO?$AAN?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  09c44		 |$LN68@DumpRegist|
  09c44	00000000	 DCD         |??_C@_1CI@COGPLNJN@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAA?$AAR?$AAG?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  09c48		 |$LN69@DumpRegist|
  09c48	00000000	 DCD         |??_C@_1CI@FCKCODGN@?$AAM?$AAM?$AAC?$AAH?$AAS?$AA_?$AAC?$AAM?$AAD?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAX?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  09c4c		 |$LN70@DumpRegist|
  09c4c	00000000	 DCD         |??_C@_1FE@HMEHCFPG@?$AA?$CL?$AAD?$AAu?$AAm?$AAp?$AAS?$AAt?$AAd?$AAH?$AAC?$AAR?$AAe?$AAg?$AAs?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@|
  09c50		 |$M46466|

			 ENDP  ; |?DumpRegisters@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::DumpRegisters

	END
