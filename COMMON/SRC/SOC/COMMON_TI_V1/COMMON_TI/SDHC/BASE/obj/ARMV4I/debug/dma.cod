; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\SDHC\BASE\dma.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?m_cmdArrSize@CSDIOControllerBase@@2KB| [ DATA ] ; CSDIOControllerBase::m_cmdArrSize
	EXPORT	|?TxDmaSettings@@3UDmaConfigInfo_t@@A| [ DATA ] ; TxDmaSettings
	EXPORT	|?RxDmaSettings@@3UDmaConfigInfo_t@@A| [ DATA ] ; RxDmaSettings

  00000			 AREA	 |.data|, DATA
|?TxDmaSettings@@3UDmaConfigInfo_t@@A| DCD 0x2		; TxDmaSettings
	DCD	0x0
	DCD	0x0
	DCD	0x1000
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x4000040
	DCD	0x0
	DCD	0x20
	DCD	0x0
	%	4
|?RxDmaSettings@@3UDmaConfigInfo_t@@A| DCD 0x2		; RxDmaSettings
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x4000
	DCD	0x4000040
	DCD	0x1000000
	DCD	0x20
	DCD	0x0
	%	4

  00000			 AREA	 |.rdata|, DATA, READONLY
|?m_cmdArrSize@CSDIOControllerBase@@2KB| DCD 0x20	; CSDIOControllerBase::m_cmdArrSize
	EXPORT	|??_C@_1GC@FBNBOCIE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAD?$AAI?$AAO?$AA_?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AA?3?$AA?5?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAa?$AAl?$AAl?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@PHDKMNLH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAD?$AAI?$AAO?$AA_?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@FMMPJCMD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAD?$AAI?$AAO?$AA_?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AA?3?$AA?5?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAa?$AAl?$AAl?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@MBHFCHGF@?$AAS?$AAD?$AAI?$AAO?$AA_?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AA?5?$AA?3?$AA?5?$AAR?$AAX?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAe?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?SDIO_InitDMA@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::SDIO_InitDMA
	IMPORT	|DmaEnableInterrupts|
	IMPORT	|dpCurSettings|
	IMPORT	|LocalAlloc|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|DmaAllocateChannel|

  00000			 AREA	 |.pdata|, PDATA
|$T42269| DCD	|$LN25@SDIO_InitD|
	DCD	0x4000a004
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\sdhc\base\dma.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@FBNBOCIE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAD?$AAI?$AAO?$AA_?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AA?3?$AA?5?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAa?$AAl?$AAl?$AAo@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "_", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "D", 0x0, "M", 0x0, "A"
	DCB	0x0, ":", 0x0, " ", 0x0, "C", 0x0, "a", 0x0, "n", 0x0, "n"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "D", 0x0, "M", 0x0, "A", 0x0, " ", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "T", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@PHDKMNLH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAD?$AAI?$AAO?$AA_?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAd@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "_", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "D", 0x0, "M", 0x0, "A"
	DCB	0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "d", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " "
	DCB	0x0, "T", 0x0, "X", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@FMMPJCMD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAD?$AAI?$AAO?$AA_?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AA?3?$AA?5?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAa?$AAl?$AAl?$AAo@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "S", 0x0, "D", 0x0, "I", 0x0, "O", 0x0, "_", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "D", 0x0, "M", 0x0, "A"
	DCB	0x0, ":", 0x0, " ", 0x0, "C", 0x0, "a", 0x0, "n", 0x0, "n"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "D", 0x0, "M", 0x0, "A", 0x0, " ", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "R", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@MBHFCHGF@?$AAS?$AAD?$AAI?$AAO?$AA_?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AA?5?$AA?3?$AA?5?$AAR?$AAX?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAe?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "D", 0x0, "I", 0x0, "O", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " "
	DCB	0x0, ":", 0x0, " ", 0x0, "R", 0x0, "X", 0x0, " ", 0x0, "D"
	DCB	0x0, "M", 0x0, "A", 0x0, " ", 0x0, "e", 0x0, "n", 0x0, "a"
	DCB	0x0, "b", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SDIO_InitDMA@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::SDIO_InitDMA

; 216  : {

  00000		 |$LN25@SDIO_InitD|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd02c	 sub         sp, sp, #0x2C
  00010		 |$M42266|

; 217  :     // allocate dma channel
; 218  :     m_hRxDmaChannel = DmaAllocateChannel(DMA_TYPE_SYSTEM);

  00010	e3a00000	 mov         r0, #0
  00014	eb000000	 bl          DmaAllocateChannel
  00018	e58d0000	 str         r0, [sp]
  0001c	e59d3034	 ldr         r3, [sp, #0x34]
  00020	e28320a4	 add         r2, r3, #0xA4
  00024	e59d3000	 ldr         r3, [sp]
  00028	e5823000	 str         r3, [r2]

; 219  :     if (m_hRxDmaChannel != NULL)

  0002c	e59d3034	 ldr         r3, [sp, #0x34]
  00030	e28330a4	 add         r3, r3, #0xA4
  00034	e5933000	 ldr         r3, [r3]
  00038	e3530000	 cmp         r3, #0
  0003c	0a000036	 beq         |$LN10@SDIO_InitD|

; 220  :     {
; 221  : 	  DEBUGMSG(ZONE_INIT, (L"SDIO_InitDMA : RX DMA enabled\n"));

  00040	e59f0234	 ldr         r0, [pc, #0x234]
  00044	eb000000	 bl          NKDbgPrintfW
  00048	e3a03001	 mov         r3, #1
  0004c	e58d3004	 str         r3, [sp, #4]
  00050	ea000001	 b           |$LN14@SDIO_InitD|
  00054	e3a03000	 mov         r3, #0
  00058	e58d3004	 str         r3, [sp, #4]
  0005c		 |$LN14@SDIO_InitD|

; 222  :       
; 223  :       m_RxDmaInfo = (DmaDataInfo_t *)LocalAlloc(LMEM_ZEROINIT,sizeof(DmaDataInfo_t));

  0005c	e3a01018	 mov         r1, #0x18
  00060	e3a00040	 mov         r0, #0x40
  00064	eb000000	 bl          LocalAlloc
  00068	e58d0008	 str         r0, [sp, #8]
  0006c	e59d3034	 ldr         r3, [sp, #0x34]
  00070	e28320a0	 add         r2, r3, #0xA0
  00074	e59d3008	 ldr         r3, [sp, #8]
  00078	e5823000	 str         r3, [r2]

; 224  :       if(!m_RxDmaInfo)

  0007c	e59d3034	 ldr         r3, [sp, #0x34]
  00080	e28330a0	 add         r3, r3, #0xA0
  00084	e5933000	 ldr         r3, [r3]
  00088	e3530000	 cmp         r3, #0
  0008c	1a00000c	 bne         |$LN9@SDIO_InitD|

; 225  :       {
; 226  :         DEBUGMSG(SDCARD_ZONE_ERROR, (L"ERROR: SDIO_InitDMA: "
; 227  :                 L"Cannot allocate DMA on RX\r\n"
; 228  :                 ));

  00090	e59f31d8	 ldr         r3, [pc, #0x1D8]
  00094	e5933440	 ldr         r3, [r3, #0x440]
  00098	e3130902	 tst         r3, #2, 18
  0009c	0a000004	 beq         |$LN15@SDIO_InitD|
  000a0	e59f01d0	 ldr         r0, [pc, #0x1D0]
  000a4	eb000000	 bl          NKDbgPrintfW
  000a8	e3a03001	 mov         r3, #1
  000ac	e58d300c	 str         r3, [sp, #0xC]
  000b0	ea000001	 b           |$LN16@SDIO_InitD|
  000b4		 |$LN15@SDIO_InitD|
  000b4	e3a03000	 mov         r3, #0
  000b8	e58d300c	 str         r3, [sp, #0xC]
  000bc		 |$LN16@SDIO_InitD|

; 229  :         goto cleanUp;

  000bc	ea000067	 b           |$LN8@SDIO_InitD|
  000c0	ea000066	 b           |$cleanUp$41435|
  000c4		 |$LN9@SDIO_InitD|

; 230  :       }
; 231  : 
; 232  :       // Disable DMA interrupts for Transmit by passing in NULL for the event parameter
; 233  :       if (DmaEnableInterrupts(m_hRxDmaChannel, NULL) == FALSE)

  000c4	e3a01000	 mov         r1, #0
  000c8	e59d3034	 ldr         r3, [sp, #0x34]
  000cc	e28330a4	 add         r3, r3, #0xA4
  000d0	e5930000	 ldr         r0, [r3]
  000d4	eb000000	 bl          DmaEnableInterrupts
  000d8	e58d0010	 str         r0, [sp, #0x10]
  000dc	e59d3010	 ldr         r3, [sp, #0x10]
  000e0	e3530000	 cmp         r3, #0
  000e4	1a00000c	 bne         |$LN7@SDIO_InitD|

; 234  :       {
; 235  :         DEBUGMSG(SDCARD_ZONE_ERROR, (L"ERROR: SDIO_InitDMA: "
; 236  :           L"Failed to disable DMA TX interrupt\r\n"
; 237  :                ));

  000e8	e59f3180	 ldr         r3, [pc, #0x180]
  000ec	e5933440	 ldr         r3, [r3, #0x440]
  000f0	e3130902	 tst         r3, #2, 18
  000f4	0a000004	 beq         |$LN17@SDIO_InitD|
  000f8	e59f016c	 ldr         r0, [pc, #0x16C]
  000fc	eb000000	 bl          NKDbgPrintfW
  00100	e3a03001	 mov         r3, #1
  00104	e58d3014	 str         r3, [sp, #0x14]
  00108	ea000001	 b           |$LN18@SDIO_InitD|
  0010c		 |$LN17@SDIO_InitD|
  0010c	e3a03000	 mov         r3, #0
  00110	e58d3014	 str         r3, [sp, #0x14]
  00114		 |$LN18@SDIO_InitD|

; 238  :         goto cleanUp;

  00114	ea000051	 b           |$LN6@SDIO_InitD|
  00118	ea000050	 b           |$cleanUp$41435|
  0011c		 |$LN7@SDIO_InitD|
  0011c		 |$LN10@SDIO_InitD|

; 239  :       }
; 240  :     }
; 241  :     
; 242  :     // allocate dma channel
; 243  :     m_hTxDmaChannel = DmaAllocateChannel(DMA_TYPE_SYSTEM);

  0011c	e3a00000	 mov         r0, #0
  00120	eb000000	 bl          DmaAllocateChannel
  00124	e58d0018	 str         r0, [sp, #0x18]
  00128	e59d3034	 ldr         r3, [sp, #0x34]
  0012c	e283209c	 add         r2, r3, #0x9C
  00130	e59d3018	 ldr         r3, [sp, #0x18]
  00134	e5823000	 str         r3, [r2]

; 244  :     if (m_hTxDmaChannel != NULL)

  00138	e59d3034	 ldr         r3, [sp, #0x34]
  0013c	e283309c	 add         r3, r3, #0x9C
  00140	e5933000	 ldr         r3, [r3]
  00144	e3530000	 cmp         r3, #0
  00148	0a000044	 beq         |$LN5@SDIO_InitD|

; 245  :     {
; 246  :       m_TxDmaInfo = (DmaDataInfo_t *)LocalAlloc(LMEM_ZEROINIT,sizeof(DmaDataInfo_t));

  0014c	e3a01018	 mov         r1, #0x18
  00150	e3a00040	 mov         r0, #0x40
  00154	eb000000	 bl          LocalAlloc
  00158	e58d001c	 str         r0, [sp, #0x1C]
  0015c	e59d3034	 ldr         r3, [sp, #0x34]
  00160	e2832098	 add         r2, r3, #0x98
  00164	e59d301c	 ldr         r3, [sp, #0x1C]
  00168	e5823000	 str         r3, [r2]

; 247  :       if(!m_TxDmaInfo)

  0016c	e59d3034	 ldr         r3, [sp, #0x34]
  00170	e2833098	 add         r3, r3, #0x98
  00174	e5933000	 ldr         r3, [r3]
  00178	e3530000	 cmp         r3, #0
  0017c	1a00000c	 bne         |$LN4@SDIO_InitD|

; 248  :       {
; 249  :         DEBUGMSG(SDCARD_ZONE_ERROR, (L"ERROR: SDIO_InitDMA: "
; 250  :                 L"Cannot allocate DMA on TX\r\n"
; 251  :                 ));

  00180	e59f30e8	 ldr         r3, [pc, #0xE8]
  00184	e5933440	 ldr         r3, [r3, #0x440]
  00188	e3130902	 tst         r3, #2, 18
  0018c	0a000004	 beq         |$LN19@SDIO_InitD|
  00190	e59f00dc	 ldr         r0, [pc, #0xDC]
  00194	eb000000	 bl          NKDbgPrintfW
  00198	e3a03001	 mov         r3, #1
  0019c	e58d3020	 str         r3, [sp, #0x20]
  001a0	ea000001	 b           |$LN20@SDIO_InitD|
  001a4		 |$LN19@SDIO_InitD|
  001a4	e3a03000	 mov         r3, #0
  001a8	e58d3020	 str         r3, [sp, #0x20]
  001ac		 |$LN20@SDIO_InitD|

; 252  :         goto cleanUp;

  001ac	ea00002b	 b           |$LN3@SDIO_InitD|
  001b0	ea00002a	 b           |$cleanUp$41435|
  001b4		 |$LN4@SDIO_InitD|

; 253  :       }
; 254  : 
; 255  :       m_TxDmaInfo->pSrcBuffer = NULL;

  001b4	e59d3034	 ldr         r3, [sp, #0x34]
  001b8	e2833098	 add         r3, r3, #0x98
  001bc	e5932000	 ldr         r2, [r3]
  001c0	e3a03000	 mov         r3, #0
  001c4	e5823000	 str         r3, [r2]

; 256  :       m_TxDmaInfo->pDstBuffer = NULL;

  001c8	e59d3034	 ldr         r3, [sp, #0x34]
  001cc	e2833098	 add         r3, r3, #0x98
  001d0	e5933000	 ldr         r3, [r3]
  001d4	e2832004	 add         r2, r3, #4
  001d8	e3a03000	 mov         r3, #0
  001dc	e5823000	 str         r3, [r2]

; 257  :       m_TxDmaInfo->PhysAddrSrcBuffer = 0;

  001e0	e59d3034	 ldr         r3, [sp, #0x34]
  001e4	e2833098	 add         r3, r3, #0x98
  001e8	e5933000	 ldr         r3, [r3]
  001ec	e2832008	 add         r2, r3, #8
  001f0	e3a03000	 mov         r3, #0
  001f4	e5823000	 str         r3, [r2]

; 258  :       m_TxDmaInfo->PhysAddrDstBuffer = 0;

  001f8	e59d3034	 ldr         r3, [sp, #0x34]
  001fc	e2833098	 add         r3, r3, #0x98
  00200	e5933000	 ldr         r3, [r3]
  00204	e283200c	 add         r2, r3, #0xC
  00208	e3a03000	 mov         r3, #0
  0020c	e5823000	 str         r3, [r2]

; 259  :     
; 260  :       // Disable DMA interrupts for Transmit by passing in NULL for the event parameter
; 261  :       if (DmaEnableInterrupts(m_hTxDmaChannel, NULL) == FALSE)

  00210	e3a01000	 mov         r1, #0
  00214	e59d3034	 ldr         r3, [sp, #0x34]
  00218	e283309c	 add         r3, r3, #0x9C
  0021c	e5930000	 ldr         r0, [r3]
  00220	eb000000	 bl          DmaEnableInterrupts
  00224	e58d0024	 str         r0, [sp, #0x24]
  00228	e59d3024	 ldr         r3, [sp, #0x24]
  0022c	e3530000	 cmp         r3, #0
  00230	1a00000a	 bne         |$LN2@SDIO_InitD|

; 262  :       {
; 263  :         DEBUGMSG(SDCARD_ZONE_ERROR, (L"ERROR: SDIO_InitDMA: "
; 264  :           L"Failed to disable DMA TX interrupt\r\n"
; 265  :                ));

  00234	e59f3034	 ldr         r3, [pc, #0x34]
  00238	e5933440	 ldr         r3, [r3, #0x440]
  0023c	e3130902	 tst         r3, #2, 18
  00240	0a000004	 beq         |$LN21@SDIO_InitD|
  00244	e59f0020	 ldr         r0, [pc, #0x20]
  00248	eb000000	 bl          NKDbgPrintfW
  0024c	e3a03001	 mov         r3, #1
  00250	e58d3028	 str         r3, [sp, #0x28]
  00254	ea000001	 b           |$LN22@SDIO_InitD|
  00258		 |$LN21@SDIO_InitD|
  00258	e3a03000	 mov         r3, #0
  0025c	e58d3028	 str         r3, [sp, #0x28]
  00260		 |$LN22@SDIO_InitD|
  00260		 |$LN2@SDIO_InitD|
  00260		 |$LN5@SDIO_InitD|
  00260		 |$LN3@SDIO_InitD|
  00260		 |$LN6@SDIO_InitD|
  00260		 |$LN8@SDIO_InitD|
  00260		 |$cleanUp$41435|

; 266  :         goto cleanUp;
; 267  :       }
; 268  :     }
; 269  : 
; 270  : cleanUp: ;        
; 271  : }

  00260	e28dd02c	 add         sp, sp, #0x2C
  00264	e89d6000	 ldmia       sp, {sp, lr}
  00268	e12fff1e	 bx          lr
  0026c		 |$LN26@SDIO_InitD|
  0026c		 |$LN27@SDIO_InitD|
  0026c	00000000	 DCD         |??_C@_1HE@PHDKMNLH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAD?$AAI?$AAO?$AA_?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAd@|
  00270		 |$LN28@SDIO_InitD|
  00270	00000000	 DCD         |dpCurSettings|
  00274		 |$LN29@SDIO_InitD|
  00274	00000000	 DCD         |??_C@_1GC@FBNBOCIE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAD?$AAI?$AAO?$AA_?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AA?3?$AA?5?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAa?$AAl?$AAl?$AAo@|
  00278		 |$LN30@SDIO_InitD|
  00278	00000000	 DCD         |??_C@_1GC@FMMPJCMD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAD?$AAI?$AAO?$AA_?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AA?3?$AA?5?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAa?$AAl?$AAl?$AAo@|
  0027c		 |$LN31@SDIO_InitD|
  0027c	00000000	 DCD         |??_C@_1DO@MBHFCHGF@?$AAS?$AAD?$AAI?$AAO?$AA_?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AA?5?$AA?3?$AA?5?$AAR?$AAX?$AA?5?$AAD?$AAM?$AAA?$AA?5?$AAe?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?6?$AA?$AA@|
  00280		 |$M42267|

			 ENDP  ; |?SDIO_InitDMA@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::SDIO_InitDMA

	EXPORT	|DmaStop|
	EXPORT	|?SDIO_DeinitDMA@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::SDIO_DeinitDMA
	IMPORT	|DmaFreeChannel|
	IMPORT	|LocalFree|

  00008			 AREA	 |.pdata|, PDATA
|$T42280| DCD	|$LN9@SDIO_Deini|
	DCD	0x40003903
; Function compile flags: /Odtp

  00280			 AREA	 |.text|, CODE, ARM

  00280		 |?SDIO_DeinitDMA@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::SDIO_DeinitDMA

; 274  : {

  00280		 |$LN9@SDIO_Deini|
  00280	e1a0c00d	 mov         r12, sp
  00284	e92d0001	 stmdb       sp!, {r0}
  00288	e92d5000	 stmdb       sp!, {r12, lr}
  0028c		 |$M42277|

; 275  :     if (m_TxDmaInfo)

  0028c	e59d3008	 ldr         r3, [sp, #8]
  00290	e2833098	 add         r3, r3, #0x98
  00294	e5933000	 ldr         r3, [r3]
  00298	e3530000	 cmp         r3, #0
  0029c	0a00000b	 beq         |$LN4@SDIO_Deini|

; 276  :     {
; 277  :       DmaStop(m_TxDmaInfo);

  002a0	e59d3008	 ldr         r3, [sp, #8]
  002a4	e2833098	 add         r3, r3, #0x98
  002a8	e5930000	 ldr         r0, [r3]
  002ac	eb000000	 bl          DmaStop

; 278  :       LocalFree(m_TxDmaInfo);

  002b0	e59d3008	 ldr         r3, [sp, #8]
  002b4	e2833098	 add         r3, r3, #0x98
  002b8	e5930000	 ldr         r0, [r3]
  002bc	eb000000	 bl          LocalFree

; 279  :       m_TxDmaInfo = NULL;

  002c0	e59d3008	 ldr         r3, [sp, #8]
  002c4	e2832098	 add         r2, r3, #0x98
  002c8	e3a03000	 mov         r3, #0
  002cc	e5823000	 str         r3, [r2]
  002d0		 |$LN4@SDIO_Deini|

; 280  :     }
; 281  :     
; 282  :     if (m_RxDmaInfo)

  002d0	e59d3008	 ldr         r3, [sp, #8]
  002d4	e28330a0	 add         r3, r3, #0xA0
  002d8	e5933000	 ldr         r3, [r3]
  002dc	e3530000	 cmp         r3, #0
  002e0	0a00000b	 beq         |$LN3@SDIO_Deini|

; 283  :     {
; 284  :       DmaStop(m_RxDmaInfo);

  002e4	e59d3008	 ldr         r3, [sp, #8]
  002e8	e28330a0	 add         r3, r3, #0xA0
  002ec	e5930000	 ldr         r0, [r3]
  002f0	eb000000	 bl          DmaStop

; 285  :       LocalFree(m_RxDmaInfo);

  002f4	e59d3008	 ldr         r3, [sp, #8]
  002f8	e28330a0	 add         r3, r3, #0xA0
  002fc	e5930000	 ldr         r0, [r3]
  00300	eb000000	 bl          LocalFree

; 286  :       m_RxDmaInfo = NULL;

  00304	e59d3008	 ldr         r3, [sp, #8]
  00308	e28320a0	 add         r2, r3, #0xA0
  0030c	e3a03000	 mov         r3, #0
  00310	e5823000	 str         r3, [r2]
  00314		 |$LN3@SDIO_Deini|

; 287  :     }
; 288  : 
; 289  :     // Free TX DMA channel
; 290  :     if (m_hTxDmaChannel != NULL) DmaFreeChannel(m_hTxDmaChannel);

  00314	e59d3008	 ldr         r3, [sp, #8]
  00318	e283309c	 add         r3, r3, #0x9C
  0031c	e5933000	 ldr         r3, [r3]
  00320	e3530000	 cmp         r3, #0
  00324	0a000003	 beq         |$LN2@SDIO_Deini|
  00328	e59d3008	 ldr         r3, [sp, #8]
  0032c	e283309c	 add         r3, r3, #0x9C
  00330	e5930000	 ldr         r0, [r3]
  00334	eb000000	 bl          DmaFreeChannel
  00338		 |$LN2@SDIO_Deini|

; 291  : 
; 292  :     // Free RX DMA channel
; 293  :     if (m_hRxDmaChannel != NULL) DmaFreeChannel(m_hRxDmaChannel);

  00338	e59d3008	 ldr         r3, [sp, #8]
  0033c	e28330a4	 add         r3, r3, #0xA4
  00340	e5933000	 ldr         r3, [r3]
  00344	e3530000	 cmp         r3, #0
  00348	0a000003	 beq         |$LN1@SDIO_Deini|
  0034c	e59d3008	 ldr         r3, [sp, #8]
  00350	e28330a4	 add         r3, r3, #0xA4
  00354	e5930000	 ldr         r0, [r3]
  00358	eb000000	 bl          DmaFreeChannel
  0035c		 |$LN1@SDIO_Deini|

; 294  : }

  0035c	e89d6000	 ldmia       sp, {sp, lr}
  00360	e12fff1e	 bx          lr
  00364		 |$M42278|

			 ENDP  ; |?SDIO_DeinitDMA@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::SDIO_DeinitDMA

; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\inc\omap_sdma_utility.h

  00000			 AREA	 |.pdata|, PDATA
|$T42286| DCD	|$LN11@DmaStop|
	DCD	0x40002604
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DmaStop| PROC

; 449  : {

  00000		 |$LN11@DmaStop|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M42283|

; 450  :     volatile ULONG ulCCR;
; 451  :     BOOL breakLoop = FALSE;

  00010	e3a03000	 mov         r3, #0
  00014	e58d3000	 str         r3, [sp]

; 452  : 
; 453  :     // disable standby in dma controller
; 454  :     //
; 455  :     CLRREG32(&pDataInfo->pDmaLcReg->CCR , DMA_CCR_ENABLE);

  00018	e59d3010	 ldr         r3, [sp, #0x10]
  0001c	e2833014	 add         r3, r3, #0x14
  00020	e5933000	 ldr         r3, [r3]
  00024	e5932000	 ldr         r2, [r3]
  00028	e3e03080	 mvn         r3, #0x80
  0002c	e0022003	 and         r2, r2, r3
  00030	e59d3010	 ldr         r3, [sp, #0x10]
  00034	e2833014	 add         r3, r3, #0x14
  00038	e5933000	 ldr         r3, [r3]
  0003c	e5832000	 str         r2, [r3]
  00040		 |$LN8@DmaStop|
  00040		 |$LN5@DmaStop|

; 456  : 
; 457  :     // ensure DMA transfer is completed by polling the active bits
; 458  :     //
; 459  :     while (breakLoop == FALSE)

  00040	e59d3000	 ldr         r3, [sp]
  00044	e3530000	 cmp         r3, #0
  00048	1a00000f	 bne         |$LN4@DmaStop|

; 460  :         {
; 461  :         ulCCR = INREG32(&pDataInfo->pDmaLcReg->CCR);

  0004c	e59d3010	 ldr         r3, [sp, #0x10]
  00050	e2833014	 add         r3, r3, #0x14
  00054	e5933000	 ldr         r3, [r3]
  00058	e5933000	 ldr         r3, [r3]
  0005c	e58d3004	 str         r3, [sp, #4]

; 462  :         if ((ulCCR & DMA_CCR_WR_ACTIVE) || (ulCCR & DMA_CCR_RD_ACTIVE))

  00060	e59d3004	 ldr         r3, [sp, #4]
  00064	e3130b01	 tst         r3, #1, 22
  00068	1a000002	 bne         |$LN2@DmaStop|
  0006c	e59d3004	 ldr         r3, [sp, #4]
  00070	e3130c02	 tst         r3, #2, 24
  00074	0a000001	 beq         |$LN3@DmaStop|
  00078		 |$LN2@DmaStop|

; 463  :             {
; 464  :             // fix this infinite loop
; 465  :             //
; 466  :             continue;

  00078	eafffff0	 b           |$LN5@DmaStop|

; 467  :             }
; 468  :         else

  0007c	ea000001	 b           |$LN1@DmaStop|
  00080		 |$LN3@DmaStop|

; 469  :             {
; 470  :             breakLoop = TRUE;

  00080	e3a03001	 mov         r3, #1
  00084	e58d3000	 str         r3, [sp]
  00088		 |$LN1@DmaStop|

; 471  :             }
; 472  :         }

  00088	eaffffec	 b           |$LN8@DmaStop|
  0008c		 |$LN4@DmaStop|

; 473  : 
; 474  : }

  0008c	e28dd008	 add         sp, sp, #8
  00090	e89d6000	 ldmia       sp, {sp, lr}
  00094	e12fff1e	 bx          lr
  00098		 |$M42284|

			 ENDP  ; |DmaStop|

	EXPORT	|DmaSetSrcBuffer|
	EXPORT	|DmaSetDstBuffer|
	EXPORT	|DmaSetElementAndFrameCount|
	EXPORT	|DmaConfigure|
	EXPORT	|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JO@EOIOPEJA@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|?SDIO_InitInputDMA@CSDIOControllerBase@@QAAXKK@Z| ; CSDIOControllerBase::SDIO_InitInputDMA
	IMPORT	|GetAddressByDevice|
	IMPORT	|SOCGetSDHCDeviceBySlot|
	IMPORT	|__rt_udiv|

  00010			 AREA	 |.pdata|, PDATA
|$T42296| DCD	|$LN11@SDIO_InitI|
	DCD	0x40006404
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\sdhc\base\dma.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "E", 0x0, "B"
	DCB	0x0, "U", 0x0, "G", 0x0, "C", 0x0, "H", 0x0, "K", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, "t", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| DCB "U", 0x0
	DCB	"n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JO@EOIOPEJA@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "C"
	DCB	0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N", 0x0, "_"
	DCB	0x0, "T", 0x0, "I", 0x0, "_", 0x0, "V", 0x0, "1", 0x0, "\\"
	DCB	0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N"
	DCB	0x0, "_", 0x0, "T", 0x0, "I", 0x0, "\\", 0x0, "S", 0x0, "D"
	DCB	0x0, "H", 0x0, "C", 0x0, "\\", 0x0, "B", 0x0, "A", 0x0, "S"
	DCB	0x0, "E", 0x0, "\\", 0x0, ".", 0x0, "\\", 0x0, "d", 0x0, "m"
	DCB	0x0, "a", 0x0, ".", 0x0, "c", 0x0, "p", 0x0, "p", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  00364			 AREA	 |.text|, CODE, ARM

  00364		 |?SDIO_InitInputDMA@CSDIOControllerBase@@QAAXKK@Z| PROC ; CSDIOControllerBase::SDIO_InitInputDMA

; 304  : {

  00364		 |$LN11@SDIO_InitI|
  00364	e1a0c00d	 mov         r12, sp
  00368	e92d0007	 stmdb       sp!, {r0 - r2}
  0036c	e92d5010	 stmdb       sp!, {r4, r12, lr}
  00370	e24dd01c	 sub         sp, sp, #0x1C
  00374		 |$M42293|

; 305  :     DWORD dwChannel, dwAddr;
; 306  :     if ( m_dwSlot == MMCSLOT_1 ) 

  00374	e59d3028	 ldr         r3, [sp, #0x28]
  00378	e2833e17	 add         r3, r3, #0x17, 28
  0037c	e5933000	 ldr         r3, [r3]
  00380	e3530001	 cmp         r3, #1
  00384	1a00000b	 bne         |$LN4@SDIO_InitI|

; 307  :     {
; 308  :       dwChannel = SDMA_REQ_MMC1_RX;

  00388	e3a0303e	 mov         r3, #0x3E
  0038c	e58d3004	 str         r3, [sp, #4]

; 309  :       dwAddr = SDIO_INPUT_DMA_SOURCE1;

  00390	e3a00001	 mov         r0, #1
  00394	eb000000	 bl          SOCGetSDHCDeviceBySlot
  00398	e58d0008	 str         r0, [sp, #8]
  0039c	e59d0008	 ldr         r0, [sp, #8]
  003a0	eb000000	 bl          GetAddressByDevice
  003a4	e58d000c	 str         r0, [sp, #0xC]
  003a8	e59d300c	 ldr         r3, [sp, #0xC]
  003ac	e2833e12	 add         r3, r3, #0x12, 28
  003b0	e58d3000	 str         r3, [sp]
  003b4	ea00001e	 b           |$LN3@SDIO_InitI|
  003b8		 |$LN4@SDIO_InitI|

; 310  :     }
; 311  :     else if ( m_dwSlot == MMCSLOT_2 ) 

  003b8	e59d3028	 ldr         r3, [sp, #0x28]
  003bc	e2833e17	 add         r3, r3, #0x17, 28
  003c0	e5933000	 ldr         r3, [r3]
  003c4	e3530002	 cmp         r3, #2
  003c8	1a00000b	 bne         |$LN2@SDIO_InitI|

; 312  :     {
; 313  :       dwChannel = SDMA_REQ_MMC2_RX;

  003cc	e3a03030	 mov         r3, #0x30
  003d0	e58d3004	 str         r3, [sp, #4]

; 314  :       dwAddr = SDIO_INPUT_DMA_SOURCE2;

  003d4	e3a00002	 mov         r0, #2
  003d8	eb000000	 bl          SOCGetSDHCDeviceBySlot
  003dc	e58d0010	 str         r0, [sp, #0x10]
  003e0	e59d0010	 ldr         r0, [sp, #0x10]
  003e4	eb000000	 bl          GetAddressByDevice
  003e8	e58d0014	 str         r0, [sp, #0x14]
  003ec	e59d3014	 ldr         r3, [sp, #0x14]
  003f0	e2833e12	 add         r3, r3, #0x12, 28
  003f4	e58d3000	 str         r3, [sp]

; 315  :     }
; 316  :     else

  003f8	ea00000d	 b           |$LN1@SDIO_InitI|
  003fc		 |$LN2@SDIO_InitI|

; 317  :     {
; 318  :         ASSERT(0);

  003fc	ea000002	 b           |$LN7@SDIO_InitI|
  00400	e3a03001	 mov         r3, #1
  00404	e58d3018	 str         r3, [sp, #0x18]
  00408	ea000008	 b           |$LN8@SDIO_InitI|
  0040c		 |$LN7@SDIO_InitI|
  0040c	e3a03c01	 mov         r3, #1, 24
  00410	e383303e	 orr         r3, r3, #0x3E
  00414	e59f20d4	 ldr         r2, [pc, #0xD4]
  00418	e59f10cc	 ldr         r1, [pc, #0xCC]
  0041c	e59f00c4	 ldr         r0, [pc, #0xC4]
  00420	eb000000	 bl          NKDbgPrintfW
  00424	e6000010	 __debugbreak_ce
  00428	e3a03000	 mov         r3, #0
  0042c	e58d3018	 str         r3, [sp, #0x18]
  00430		 |$LN8@SDIO_InitI|

; 319  :         return;

  00430	ea000028	 b           |$LN5@SDIO_InitI|
  00434		 |$LN1@SDIO_InitI|
  00434		 |$LN3@SDIO_InitI|

; 320  :     }
; 321  :     
; 322  :     DmaConfigure (m_hRxDmaChannel,
; 323  :             &RxDmaSettings, dwChannel, m_RxDmaInfo);

  00434	e59d3028	 ldr         r3, [sp, #0x28]
  00438	e28330a0	 add         r3, r3, #0xA0
  0043c	e5933000	 ldr         r3, [r3]
  00440	e59d2004	 ldr         r2, [sp, #4]
  00444	e59f1098	 ldr         r1, [pc, #0x98]
  00448	e59d0028	 ldr         r0, [sp, #0x28]
  0044c	e28000a4	 add         r0, r0, #0xA4
  00450	e5900000	 ldr         r0, [r0]
  00454	eb000000	 bl          DmaConfigure

; 324  : 
; 325  :     // set up for Rx buffer as 4 frames
; 326  :     DmaSetElementAndFrameCount (m_RxDmaInfo,
; 327  :              (UINT16)(dwBlkSize/4), 
; 328  :              (UINT16)(dwBlkCnt));

  00458	e59d302c	 ldr         r3, [sp, #0x2C]
  0045c	e1a04803	 mov         r4, r3, lsl #16
  00460	e1a04824	 mov         r4, r4, lsr #16
  00464	e59d1030	 ldr         r1, [sp, #0x30]
  00468	e3a00004	 mov         r0, #4
  0046c	eb000000	 bl          __rt_udiv
  00470	e1a01800	 mov         r1, r0, lsl #16
  00474	e1a01821	 mov         r1, r1, lsr #16
  00478	e59d3028	 ldr         r3, [sp, #0x28]
  0047c	e28330a0	 add         r3, r3, #0xA0
  00480	e5930000	 ldr         r0, [r3]
  00484	e1a02004	 mov         r2, r4
  00488	eb000000	 bl          DmaSetElementAndFrameCount

; 329  :     DmaSetDstBuffer (m_RxDmaInfo,
; 330  :              m_pDmaBuffer,
; 331  :              m_pDmaBufferPhys.LowPart);

  0048c	e59d3028	 ldr         r3, [sp, #0x28]
  00490	e2833f42	 add         r3, r3, #0x42, 30
  00494	e5932000	 ldr         r2, [r3]
  00498	e59d3028	 ldr         r3, [sp, #0x28]
  0049c	e28330fc	 add         r3, r3, #0xFC
  004a0	e5931000	 ldr         r1, [r3]
  004a4	e59d3028	 ldr         r3, [sp, #0x28]
  004a8	e28330a0	 add         r3, r3, #0xA0
  004ac	e5930000	 ldr         r0, [r3]
  004b0	eb000000	 bl          DmaSetDstBuffer

; 332  :     DmaSetSrcBuffer(m_RxDmaInfo,
; 333  :              (UINT8 *)&m_pbRegisters->MMCHS_DATA,
; 334  :              dwAddr);

  004b4	e59d2000	 ldr         r2, [sp]
  004b8	e59d3028	 ldr         r3, [sp, #0x28]
  004bc	e2833f57	 add         r3, r3, #0x57, 30
  004c0	e5933000	 ldr         r3, [r3]
  004c4	e2831e12	 add         r1, r3, #0x12, 28
  004c8	e59d3028	 ldr         r3, [sp, #0x28]
  004cc	e28330a0	 add         r3, r3, #0xA0
  004d0	e5930000	 ldr         r0, [r3]
  004d4	eb000000	 bl          DmaSetSrcBuffer
  004d8		 |$LN5@SDIO_InitI|

; 335  : 
; 336  : }

  004d8	e28dd01c	 add         sp, sp, #0x1C
  004dc	e89d6010	 ldmia       sp, {r4, sp, lr}
  004e0	e12fff1e	 bx          lr
  004e4		 |$LN12@SDIO_InitI|
  004e4		 |$LN13@SDIO_InitI|
  004e4	00000000	 DCD         |?RxDmaSettings@@3UDmaConfigInfo_t@@A|
  004e8		 |$LN14@SDIO_InitI|
  004e8	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  004ec		 |$LN15@SDIO_InitI|
  004ec	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  004f0		 |$LN16@SDIO_InitI|
  004f0	00000000	 DCD         |??_C@_1JO@EOIOPEJA@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  004f4		 |$M42294|

			 ENDP  ; |?SDIO_InitInputDMA@CSDIOControllerBase@@QAAXKK@Z|, CSDIOControllerBase::SDIO_InitInputDMA

	IMPORT	|memset|
	IMPORT	|DmaGetLogicalChannel|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\inc\omap_sdma_utility.h

  00000			 AREA	 |.pdata|, PDATA
|$T42307| DCD	|$LN9@DmaConfigu|
	DCD	0x40007e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DmaConfigure| PROC

; 166  : {

  00000		 |$LN9@DmaConfigu|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd010	 sub         sp, sp, #0x10
  00010		 |$M42304|

; 167  :     BOOL rc = FALSE;

  00010	e3a03000	 mov         r3, #0
  00014	e58d3004	 str         r3, [sp, #4]

; 168  :     OMAP_DMA_LC_REGS *pDmaLcReg = (OMAP_DMA_LC_REGS*)DmaGetLogicalChannel(hDmaChannel);

  00018	e59d0018	 ldr         r0, [sp, #0x18]
  0001c	eb000000	 bl          DmaGetLogicalChannel
  00020	e58d000c	 str         r0, [sp, #0xC]
  00024	e59d300c	 ldr         r3, [sp, #0xC]
  00028	e58d3000	 str         r3, [sp]

; 169  :     if (pDmaLcReg == NULL || pConfigInfo == NULL)

  0002c	e59d3000	 ldr         r3, [sp]
  00030	e3530000	 cmp         r3, #0
  00034	0a000002	 beq         |$LN3@DmaConfigu|
  00038	e59d301c	 ldr         r3, [sp, #0x1C]
  0003c	e3530000	 cmp         r3, #0
  00040	1a000001	 bne         |$LN4@DmaConfigu|
  00044		 |$LN3@DmaConfigu|

; 170  :         {
; 171  :         goto cleanUp;

  00044	ea000065	 b           |$LN2@DmaConfigu|
  00048	ea000064	 b           |$cleanUp$39724|
  0004c		 |$LN4@DmaConfigu|

; 172  :         }
; 173  : 
; 174  :     // initialize dma DataInfo if necessary
; 175  :     if (pDataInfo != NULL)

  0004c	e59d3024	 ldr         r3, [sp, #0x24]
  00050	e3530000	 cmp         r3, #0
  00054	0a00000b	 beq         |$LN1@DmaConfigu|

; 176  :         {
; 177  :         memset(pDataInfo, 0, sizeof(DmaDataInfo_t));

  00058	e3a02018	 mov         r2, #0x18
  0005c	e3a01000	 mov         r1, #0
  00060	e59d0024	 ldr         r0, [sp, #0x24]
  00064	eb000000	 bl          memset

; 178  :         pDataInfo->hDmaChannel = hDmaChannel;

  00068	e59d3024	 ldr         r3, [sp, #0x24]
  0006c	e2832010	 add         r2, r3, #0x10
  00070	e59d3018	 ldr         r3, [sp, #0x18]
  00074	e5823000	 str         r3, [r2]

; 179  :         pDataInfo->pDmaLcReg = pDmaLcReg;

  00078	e59d3024	 ldr         r3, [sp, #0x24]
  0007c	e2832014	 add         r2, r3, #0x14
  00080	e59d3000	 ldr         r3, [sp]
  00084	e5823000	 str         r3, [r2]
  00088		 |$LN1@DmaConfigu|

; 180  :         }
; 181  : 
; 182  :     // Disable the DMA in case it is running
; 183  :     CLRREG32(&pDmaLcReg->CCR, DMA_CCR_ENABLE);

  00088	e59d3000	 ldr         r3, [sp]
  0008c	e5932000	 ldr         r2, [r3]
  00090	e3e03080	 mvn         r3, #0x80
  00094	e0022003	 and         r2, r2, r3
  00098	e59d3000	 ldr         r3, [sp]
  0009c	e5832000	 str         r2, [r3]

; 184  : 
; 185  :     // update syncmap
; 186  :     pConfigInfo->syncMap = syncMap;

  000a0	e59d301c	 ldr         r3, [sp, #0x1C]
  000a4	e283202c	 add         r2, r3, #0x2C
  000a8	e59d3020	 ldr         r3, [sp, #0x20]
  000ac	e5823000	 str         r3, [r2]

; 187  : 
; 188  :     // Initialize logical channel registers
; 189  :     //
; 190  :     OUTREG32(&pDmaLcReg->CCR, 0);

  000b0	e59d2000	 ldr         r2, [sp]
  000b4	e3a03000	 mov         r3, #0
  000b8	e5823000	 str         r3, [r2]

; 191  :     OUTREG32(&pDmaLcReg->CLNK_CTRL, 0);

  000bc	e59d3000	 ldr         r3, [sp]
  000c0	e2832004	 add         r2, r3, #4
  000c4	e3a03000	 mov         r3, #0
  000c8	e5823000	 str         r3, [r2]

; 192  :     OUTREG32(&pDmaLcReg->COLOR, 0);

  000cc	e59d3000	 ldr         r3, [sp]
  000d0	e2832044	 add         r2, r3, #0x44
  000d4	e3a03000	 mov         r3, #0
  000d8	e5823000	 str         r3, [r2]

; 193  : 
; 194  :     // update CSDP
; 195  :     //  DATA_TYPE
; 196  :     //  DST
; 197  :     //  SRC
; 198  :     OUTREG32(&pDmaLcReg->CSDP, pConfigInfo->elemSize);

  000dc	e59d3000	 ldr         r3, [sp]
  000e0	e2832010	 add         r2, r3, #0x10
  000e4	e59d301c	 ldr         r3, [sp, #0x1C]
  000e8	e5933000	 ldr         r3, [r3]
  000ec	e5823000	 str         r3, [r2]

; 199  : 
; 200  :     // update CCR
; 201  :     //  DST_MODE
; 202  :     //  SRC_MODE
; 203  :     //  PRIO
; 204  :     //  SYNC
; 205  :     //
; 206  :     OUTREG32(&pDmaLcReg->CCR, pConfigInfo->srcAddrMode |
; 207  :         pConfigInfo->dstAddrMode | pConfigInfo->dmaPrio |
; 208  :         DMA_CCR_SYNC(syncMap) | pConfigInfo->synchTrigger |
; 209  :         pConfigInfo->synchMode
; 210  :         );

  000f0	e59d301c	 ldr         r3, [sp, #0x1C]
  000f4	e283200c	 add         r2, r3, #0xC
  000f8	e59d301c	 ldr         r3, [sp, #0x1C]
  000fc	e2833018	 add         r3, r3, #0x18
  00100	e5922000	 ldr         r2, [r2]
  00104	e5933000	 ldr         r3, [r3]
  00108	e1822003	 orr         r2, r2, r3
  0010c	e59d301c	 ldr         r3, [sp, #0x1C]
  00110	e283301c	 add         r3, r3, #0x1C
  00114	e5933000	 ldr         r3, [r3]
  00118	e1821003	 orr         r1, r2, r3
  0011c	e59d3020	 ldr         r3, [sp, #0x20]
  00120	e203201f	 and         r2, r3, #0x1F
  00124	e59d3020	 ldr         r3, [sp, #0x20]
  00128	e2033060	 and         r3, r3, #0x60
  0012c	e1a03703	 mov         r3, r3, lsl #14
  00130	e1823003	 orr         r3, r2, r3
  00134	e1812003	 orr         r2, r1, r3
  00138	e59d301c	 ldr         r3, [sp, #0x1C]
  0013c	e2833020	 add         r3, r3, #0x20
  00140	e5933000	 ldr         r3, [r3]
  00144	e1822003	 orr         r2, r2, r3
  00148	e59d301c	 ldr         r3, [sp, #0x1C]
  0014c	e2833024	 add         r3, r3, #0x24
  00150	e5933000	 ldr         r3, [r3]
  00154	e1822003	 orr         r2, r2, r3
  00158	e59d3000	 ldr         r3, [sp]
  0015c	e5832000	 str         r2, [r3]

; 211  : 
; 212  :     // update CSEI
; 213  :     //
; 214  :     OUTREG32(&pDmaLcReg->CSEI, pConfigInfo->srcElemIndex);

  00160	e59d301c	 ldr         r3, [sp, #0x1C]
  00164	e2831004	 add         r1, r3, #4
  00168	e59d3000	 ldr         r3, [sp]
  0016c	e2832024	 add         r2, r3, #0x24
  00170	e5913000	 ldr         r3, [r1]
  00174	e5823000	 str         r3, [r2]

; 215  : 
; 216  :     // update CDEI
; 217  :     //
; 218  :     OUTREG32(&pDmaLcReg->CDEI, pConfigInfo->dstElemIndex);

  00178	e59d301c	 ldr         r3, [sp, #0x1C]
  0017c	e2831010	 add         r1, r3, #0x10
  00180	e59d3000	 ldr         r3, [sp]
  00184	e283202c	 add         r2, r3, #0x2C
  00188	e5913000	 ldr         r3, [r1]
  0018c	e5823000	 str         r3, [r2]

; 219  : 
; 220  :     // update CSFI
; 221  :     //
; 222  :     OUTREG32(&pDmaLcReg->CSFI, pConfigInfo->srcFrameIndex);

  00190	e59d301c	 ldr         r3, [sp, #0x1C]
  00194	e2831008	 add         r1, r3, #8
  00198	e59d3000	 ldr         r3, [sp]
  0019c	e2832028	 add         r2, r3, #0x28
  001a0	e5913000	 ldr         r3, [r1]
  001a4	e5823000	 str         r3, [r2]

; 223  : 
; 224  :     // update CDFI
; 225  :     //
; 226  :     OUTREG32(&pDmaLcReg->CDFI, pConfigInfo->dstFrameIndex);

  001a8	e59d301c	 ldr         r3, [sp, #0x1C]
  001ac	e2831014	 add         r1, r3, #0x14
  001b0	e59d3000	 ldr         r3, [sp]
  001b4	e2832030	 add         r2, r3, #0x30
  001b8	e5913000	 ldr         r3, [r1]
  001bc	e5823000	 str         r3, [r2]

; 227  : 
; 228  :     // update CICR
; 229  :     //
; 230  :     OUTREG32(&pDmaLcReg->CICR , pConfigInfo->interrupts);

  001c0	e59d301c	 ldr         r3, [sp, #0x1C]
  001c4	e2831028	 add         r1, r3, #0x28
  001c8	e59d3000	 ldr         r3, [sp]
  001cc	e2832008	 add         r2, r3, #8
  001d0	e5913000	 ldr         r3, [r1]
  001d4	e5823000	 str         r3, [r2]

; 231  :     
; 232  :     rc = TRUE;

  001d8	e3a03001	 mov         r3, #1
  001dc	e58d3004	 str         r3, [sp, #4]
  001e0		 |$LN2@DmaConfigu|
  001e0		 |$cleanUp$39724|

; 233  : 
; 234  : cleanUp:
; 235  :     return rc;

  001e0	e59d3004	 ldr         r3, [sp, #4]
  001e4	e58d3008	 str         r3, [sp, #8]

; 236  : }

  001e8	e59d0008	 ldr         r0, [sp, #8]
  001ec	e28dd010	 add         sp, sp, #0x10
  001f0	e89d6000	 ldmia       sp, {sp, lr}
  001f4	e12fff1e	 bx          lr
  001f8		 |$M42305|

			 ENDP  ; |DmaConfigure|


  00000			 AREA	 |.pdata|, PDATA
|$T42314| DCD	|$LN6@DmaSetDstB|
	DCD	0x40001e03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DmaSetDstBuffer| PROC

; 330  : {

  00000		 |$LN6@DmaSetDstB|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42311|

; 331  :     // save values
; 332  :     //
; 333  :     pDataInfo->pDstBuffer = pBuffer;

  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2832004	 add         r2, r3, #4
  00014	e59d300c	 ldr         r3, [sp, #0xC]
  00018	e5823000	 str         r3, [r2]

; 334  :     pDataInfo->PhysAddrDstBuffer = PhysAddr;

  0001c	e59d3008	 ldr         r3, [sp, #8]
  00020	e283200c	 add         r2, r3, #0xC
  00024	e59d3010	 ldr         r3, [sp, #0x10]
  00028	e5823000	 str         r3, [r2]

; 335  : 
; 336  :     // set destination address
; 337  :     //
; 338  :     if (pDataInfo->pDmaLcReg != NULL)

  0002c	e59d3008	 ldr         r3, [sp, #8]
  00030	e2833014	 add         r3, r3, #0x14
  00034	e5933000	 ldr         r3, [r3]
  00038	e3530000	 cmp         r3, #0
  0003c	0a00000b	 beq         |$LN1@DmaSetDstB|

; 339  :         {
; 340  :         OUTREG32(&pDataInfo->pDmaLcReg->CDSA, PhysAddr);

  00040	e59d3008	 ldr         r3, [sp, #8]
  00044	e2833014	 add         r3, r3, #0x14
  00048	e5933000	 ldr         r3, [r3]
  0004c	e2832020	 add         r2, r3, #0x20
  00050	e59d3010	 ldr         r3, [sp, #0x10]
  00054	e5823000	 str         r3, [r2]

; 341  :         OUTREG32(&pDataInfo->pDmaLcReg->CDAC, PhysAddr);

  00058	e59d3008	 ldr         r3, [sp, #8]
  0005c	e2833014	 add         r3, r3, #0x14
  00060	e5933000	 ldr         r3, [r3]
  00064	e2832038	 add         r2, r3, #0x38
  00068	e59d3010	 ldr         r3, [sp, #0x10]
  0006c	e5823000	 str         r3, [r2]
  00070		 |$LN1@DmaSetDstB|

; 342  :         }
; 343  : }

  00070	e89d6000	 ldmia       sp, {sp, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$M42312|

			 ENDP  ; |DmaSetDstBuffer|


  00000			 AREA	 |.pdata|, PDATA
|$T42321| DCD	|$LN6@DmaSetSrcB|
	DCD	0x40001d03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DmaSetSrcBuffer| PROC

; 358  : {

  00000		 |$LN6@DmaSetSrcB|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42318|

; 359  :     // save values
; 360  :     //
; 361  :     pDataInfo->pSrcBuffer = pBuffer;

  0000c	e59d200c	 ldr         r2, [sp, #0xC]
  00010	e59d3008	 ldr         r3, [sp, #8]
  00014	e5832000	 str         r2, [r3]

; 362  :     pDataInfo->PhysAddrSrcBuffer = PhysAddr;

  00018	e59d3008	 ldr         r3, [sp, #8]
  0001c	e2832008	 add         r2, r3, #8
  00020	e59d3010	 ldr         r3, [sp, #0x10]
  00024	e5823000	 str         r3, [r2]

; 363  : 
; 364  :     // set source address
; 365  :     //
; 366  :     if (pDataInfo->pDmaLcReg != NULL)

  00028	e59d3008	 ldr         r3, [sp, #8]
  0002c	e2833014	 add         r3, r3, #0x14
  00030	e5933000	 ldr         r3, [r3]
  00034	e3530000	 cmp         r3, #0
  00038	0a00000b	 beq         |$LN1@DmaSetSrcB|

; 367  :         {
; 368  :         OUTREG32(&pDataInfo->pDmaLcReg->CSSA, PhysAddr);

  0003c	e59d3008	 ldr         r3, [sp, #8]
  00040	e2833014	 add         r3, r3, #0x14
  00044	e5933000	 ldr         r3, [r3]
  00048	e283201c	 add         r2, r3, #0x1C
  0004c	e59d3010	 ldr         r3, [sp, #0x10]
  00050	e5823000	 str         r3, [r2]

; 369  :         OUTREG32(&pDataInfo->pDmaLcReg->CSAC, PhysAddr);

  00054	e59d3008	 ldr         r3, [sp, #8]
  00058	e2833014	 add         r3, r3, #0x14
  0005c	e5933000	 ldr         r3, [r3]
  00060	e2832034	 add         r2, r3, #0x34
  00064	e59d3010	 ldr         r3, [sp, #0x10]
  00068	e5823000	 str         r3, [r2]
  0006c		 |$LN1@DmaSetSrcB|

; 370  :         }
; 371  : }

  0006c	e89d6000	 ldmia       sp, {sp, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$M42319|

			 ENDP  ; |DmaSetSrcBuffer|


  00000			 AREA	 |.pdata|, PDATA
|$T42328| DCD	|$LN5@DmaSetElem|
	DCD	0x40001103
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DmaSetElementAndFrameCount| PROC

; 386  : {

  00000		 |$LN5@DmaSetElem|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42325|

; 387  :     // setup frame and element count for destination side
; 388  :     //
; 389  :     OUTREG32(&pDataInfo->pDmaLcReg->CEN , countElements);

  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2833014	 add         r3, r3, #0x14
  00014	e5933000	 ldr         r3, [r3]
  00018	e2832014	 add         r2, r3, #0x14
  0001c	e59d300c	 ldr         r3, [sp, #0xC]
  00020	e5823000	 str         r3, [r2]

; 390  :     OUTREG32(&pDataInfo->pDmaLcReg->CFN , countFrames);

  00024	e1dd21b0	 ldrh        r2, [sp, #0x10]
  00028	e59d3008	 ldr         r3, [sp, #8]
  0002c	e2833014	 add         r3, r3, #0x14
  00030	e5933000	 ldr         r3, [r3]
  00034	e2833018	 add         r3, r3, #0x18
  00038	e5832000	 str         r2, [r3]

; 391  : }

  0003c	e89d6000	 ldmia       sp, {sp, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M42326|

			 ENDP  ; |DmaSetElementAndFrameCount|

	EXPORT	|DmaStart|
	EXPORT	|?SDIO_StartInputDMA@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::SDIO_StartInputDMA

  00018			 AREA	 |.pdata|, PDATA
|$T42335| DCD	|$LN5@SDIO_Start|
	DCD	0x40000903
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\sdhc\base\dma.cpp

  004f4			 AREA	 |.text|, CODE, ARM

  004f4		 |?SDIO_StartInputDMA@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::SDIO_StartInputDMA

; 346  : {

  004f4		 |$LN5@SDIO_Start|
  004f4	e1a0c00d	 mov         r12, sp
  004f8	e92d0001	 stmdb       sp!, {r0}
  004fc	e92d5000	 stmdb       sp!, {r12, lr}
  00500		 |$M42332|

; 347  :     DmaStart(m_RxDmaInfo);

  00500	e59d3008	 ldr         r3, [sp, #8]
  00504	e28330a0	 add         r3, r3, #0xA0
  00508	e5930000	 ldr         r0, [r3]
  0050c	eb000000	 bl          DmaStart

; 348  : }

  00510	e89d6000	 ldmia       sp, {sp, lr}
  00514	e12fff1e	 bx          lr
  00518		 |$M42333|

			 ENDP  ; |?SDIO_StartInputDMA@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::SDIO_StartInputDMA

; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\inc\omap_sdma_utility.h

  00000			 AREA	 |.pdata|, PDATA
|$T42340| DCD	|$LN5@DmaStart|
	DCD	0x40000e03
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DmaStart| PROC

; 487  : {

  00000		 |$LN5@DmaStart|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M42337|

; 488  :     // enable the dma channel
; 489  :     //
; 490  :     SETREG32(&pDataInfo->pDmaLcReg->CCR , DMA_CCR_ENABLE);

  0000c	e59d3008	 ldr         r3, [sp, #8]
  00010	e2833014	 add         r3, r3, #0x14
  00014	e5933000	 ldr         r3, [r3]
  00018	e5933000	 ldr         r3, [r3]
  0001c	e3832080	 orr         r2, r3, #0x80
  00020	e59d3008	 ldr         r3, [sp, #8]
  00024	e2833014	 add         r3, r3, #0x14
  00028	e5933000	 ldr         r3, [r3]
  0002c	e5832000	 str         r2, [r3]

; 491  : }

  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M42338|

			 ENDP  ; |DmaStart|

	EXPORT	|?SDIO_StopInputDMA@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::SDIO_StopInputDMA

  00020			 AREA	 |.pdata|, PDATA
|$T42347| DCD	|$LN6@SDIO_StopI|
	DCD	0x40000e03
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\sdhc\base\dma.cpp

  00518			 AREA	 |.text|, CODE, ARM

  00518		 |?SDIO_StopInputDMA@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::SDIO_StopInputDMA

; 359  : {

  00518		 |$LN6@SDIO_StopI|
  00518	e1a0c00d	 mov         r12, sp
  0051c	e92d0001	 stmdb       sp!, {r0}
  00520	e92d5000	 stmdb       sp!, {r12, lr}
  00524		 |$M42344|

; 360  :     if (m_RxDmaInfo)

  00524	e59d3008	 ldr         r3, [sp, #8]
  00528	e28330a0	 add         r3, r3, #0xA0
  0052c	e5933000	 ldr         r3, [r3]
  00530	e3530000	 cmp         r3, #0
  00534	0a000003	 beq         |$LN1@SDIO_StopI|

; 361  :     {
; 362  :       DmaStop(m_RxDmaInfo);

  00538	e59d3008	 ldr         r3, [sp, #8]
  0053c	e28330a0	 add         r3, r3, #0xA0
  00540	e5930000	 ldr         r0, [r3]
  00544	eb000000	 bl          DmaStop
  00548		 |$LN1@SDIO_StopI|

; 363  :     }
; 364  : }

  00548	e89d6000	 ldmia       sp, {sp, lr}
  0054c	e12fff1e	 bx          lr
  00550		 |$M42345|

			 ENDP  ; |?SDIO_StopInputDMA@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::SDIO_StopInputDMA

	EXPORT	|?SDIO_InitOutputDMA@CSDIOControllerBase@@QAAXKK@Z| ; CSDIOControllerBase::SDIO_InitOutputDMA

  00028			 AREA	 |.pdata|, PDATA
|$T42352| DCD	|$LN9@SDIO_InitO|
	DCD	0x40005404
; Function compile flags: /Odtp

  00550			 AREA	 |.text|, CODE, ARM

  00550		 |?SDIO_InitOutputDMA@CSDIOControllerBase@@QAAXKK@Z| PROC ; CSDIOControllerBase::SDIO_InitOutputDMA

; 374  : {

  00550		 |$LN9@SDIO_InitO|
  00550	e1a0c00d	 mov         r12, sp
  00554	e92d0007	 stmdb       sp!, {r0 - r2}
  00558	e92d5010	 stmdb       sp!, {r4, r12, lr}
  0055c	e24dd018	 sub         sp, sp, #0x18
  00560		 |$M42349|

; 375  :     DWORD dwChannel, dwAddr;
; 376  :     if ( m_dwSlot == MMCSLOT_1 ) 

  00560	e59d3024	 ldr         r3, [sp, #0x24]
  00564	e2833e17	 add         r3, r3, #0x17, 28
  00568	e5933000	 ldr         r3, [r3]
  0056c	e3530001	 cmp         r3, #1
  00570	1a00000b	 bne         |$LN4@SDIO_InitO|

; 377  :     {
; 378  :       dwChannel = SDMA_REQ_MMC1_TX;

  00574	e3a0303d	 mov         r3, #0x3D
  00578	e58d3004	 str         r3, [sp, #4]

; 379  :       dwAddr = SDIO_OUTPUT_DMA_DEST1;

  0057c	e3a00001	 mov         r0, #1
  00580	eb000000	 bl          SOCGetSDHCDeviceBySlot
  00584	e58d0008	 str         r0, [sp, #8]
  00588	e59d0008	 ldr         r0, [sp, #8]
  0058c	eb000000	 bl          GetAddressByDevice
  00590	e58d000c	 str         r0, [sp, #0xC]
  00594	e59d300c	 ldr         r3, [sp, #0xC]
  00598	e2833e12	 add         r3, r3, #0x12, 28
  0059c	e58d3000	 str         r3, [sp]
  005a0	ea000011	 b           |$LN3@SDIO_InitO|
  005a4		 |$LN4@SDIO_InitO|

; 380  :     }
; 381  :     else if ( m_dwSlot == MMCSLOT_2 ) 

  005a4	e59d3024	 ldr         r3, [sp, #0x24]
  005a8	e2833e17	 add         r3, r3, #0x17, 28
  005ac	e5933000	 ldr         r3, [r3]
  005b0	e3530002	 cmp         r3, #2
  005b4	1a00000b	 bne         |$LN2@SDIO_InitO|

; 382  :     {
; 383  :       dwChannel = SDMA_REQ_MMC2_TX;

  005b8	e3a0302f	 mov         r3, #0x2F
  005bc	e58d3004	 str         r3, [sp, #4]

; 384  :       dwAddr = SDIO_OUTPUT_DMA_DEST2;

  005c0	e3a00002	 mov         r0, #2
  005c4	eb000000	 bl          SOCGetSDHCDeviceBySlot
  005c8	e58d0010	 str         r0, [sp, #0x10]
  005cc	e59d0010	 ldr         r0, [sp, #0x10]
  005d0	eb000000	 bl          GetAddressByDevice
  005d4	e58d0014	 str         r0, [sp, #0x14]
  005d8	e59d3014	 ldr         r3, [sp, #0x14]
  005dc	e2833e12	 add         r3, r3, #0x12, 28
  005e0	e58d3000	 str         r3, [sp]
  005e4	ea000000	 b           |$LN1@SDIO_InitO|
  005e8		 |$LN2@SDIO_InitO|

; 385  :     }
; 386  :     else return;

  005e8	ea000028	 b           |$LN5@SDIO_InitO|
  005ec		 |$LN1@SDIO_InitO|
  005ec		 |$LN3@SDIO_InitO|

; 387  :     
; 388  :     DmaConfigure (m_hTxDmaChannel,
; 389  :             &TxDmaSettings, dwChannel, m_TxDmaInfo);

  005ec	e59d3024	 ldr         r3, [sp, #0x24]
  005f0	e2833098	 add         r3, r3, #0x98
  005f4	e5933000	 ldr         r3, [r3]
  005f8	e59d2004	 ldr         r2, [sp, #4]
  005fc	e59f1098	 ldr         r1, [pc, #0x98]
  00600	e59d0024	 ldr         r0, [sp, #0x24]
  00604	e280009c	 add         r0, r0, #0x9C
  00608	e5900000	 ldr         r0, [r0]
  0060c	eb000000	 bl          DmaConfigure

; 390  :     
; 391  :     DmaSetElementAndFrameCount (m_TxDmaInfo,
; 392  :              (UINT16)(dwBlkSize/4), 
; 393  :              (UINT16)(dwBlkCnt));

  00610	e59d3028	 ldr         r3, [sp, #0x28]
  00614	e1a04803	 mov         r4, r3, lsl #16
  00618	e1a04824	 mov         r4, r4, lsr #16
  0061c	e59d102c	 ldr         r1, [sp, #0x2C]
  00620	e3a00004	 mov         r0, #4
  00624	eb000000	 bl          __rt_udiv
  00628	e1a01800	 mov         r1, r0, lsl #16
  0062c	e1a01821	 mov         r1, r1, lsr #16
  00630	e59d3024	 ldr         r3, [sp, #0x24]
  00634	e2833098	 add         r3, r3, #0x98
  00638	e5930000	 ldr         r0, [r3]
  0063c	e1a02004	 mov         r2, r4
  00640	eb000000	 bl          DmaSetElementAndFrameCount

; 394  :     DmaSetSrcBuffer (m_TxDmaInfo,
; 395  :               m_pDmaBuffer,
; 396  :               m_pDmaBufferPhys.LowPart);

  00644	e59d3024	 ldr         r3, [sp, #0x24]
  00648	e2833f42	 add         r3, r3, #0x42, 30
  0064c	e5932000	 ldr         r2, [r3]
  00650	e59d3024	 ldr         r3, [sp, #0x24]
  00654	e28330fc	 add         r3, r3, #0xFC
  00658	e5931000	 ldr         r1, [r3]
  0065c	e59d3024	 ldr         r3, [sp, #0x24]
  00660	e2833098	 add         r3, r3, #0x98
  00664	e5930000	 ldr         r0, [r3]
  00668	eb000000	 bl          DmaSetSrcBuffer

; 397  :     DmaSetDstBuffer(m_TxDmaInfo,
; 398  :               (UINT8 *)&m_pbRegisters->MMCHS_DATA,
; 399  :               dwAddr);

  0066c	e59d2000	 ldr         r2, [sp]
  00670	e59d3024	 ldr         r3, [sp, #0x24]
  00674	e2833f57	 add         r3, r3, #0x57, 30
  00678	e5933000	 ldr         r3, [r3]
  0067c	e2831e12	 add         r1, r3, #0x12, 28
  00680	e59d3024	 ldr         r3, [sp, #0x24]
  00684	e2833098	 add         r3, r3, #0x98
  00688	e5930000	 ldr         r0, [r3]
  0068c	eb000000	 bl          DmaSetDstBuffer
  00690		 |$LN5@SDIO_InitO|

; 400  : }

  00690	e28dd018	 add         sp, sp, #0x18
  00694	e89d6010	 ldmia       sp, {r4, sp, lr}
  00698	e12fff1e	 bx          lr
  0069c		 |$LN10@SDIO_InitO|
  0069c		 |$LN11@SDIO_InitO|
  0069c	00000000	 DCD         |?TxDmaSettings@@3UDmaConfigInfo_t@@A|
  006a0		 |$M42350|

			 ENDP  ; |?SDIO_InitOutputDMA@CSDIOControllerBase@@QAAXKK@Z|, CSDIOControllerBase::SDIO_InitOutputDMA

	EXPORT	|?SDIO_StartOutputDMA@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::SDIO_StartOutputDMA

  00030			 AREA	 |.pdata|, PDATA
|$T42359| DCD	|$LN5@SDIO_Start@2|
	DCD	0x40000903
; Function compile flags: /Odtp

  006a0			 AREA	 |.text|, CODE, ARM

  006a0		 |?SDIO_StartOutputDMA@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::SDIO_StartOutputDMA

; 410  : {

  006a0		 |$LN5@SDIO_Start@2|
  006a0	e1a0c00d	 mov         r12, sp
  006a4	e92d0001	 stmdb       sp!, {r0}
  006a8	e92d5000	 stmdb       sp!, {r12, lr}
  006ac		 |$M42356|

; 411  :     DmaStart(m_TxDmaInfo);

  006ac	e59d3008	 ldr         r3, [sp, #8]
  006b0	e2833098	 add         r3, r3, #0x98
  006b4	e5930000	 ldr         r0, [r3]
  006b8	eb000000	 bl          DmaStart

; 412  : }

  006bc	e89d6000	 ldmia       sp, {sp, lr}
  006c0	e12fff1e	 bx          lr
  006c4		 |$M42357|

			 ENDP  ; |?SDIO_StartOutputDMA@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::SDIO_StartOutputDMA

	EXPORT	|?SDIO_StopOutputDMA@CSDIOControllerBase@@QAAXXZ| ; CSDIOControllerBase::SDIO_StopOutputDMA

  00038			 AREA	 |.pdata|, PDATA
|$T42364| DCD	|$LN6@SDIO_StopO|
	DCD	0x40000e03
; Function compile flags: /Odtp

  006c4			 AREA	 |.text|, CODE, ARM

  006c4		 |?SDIO_StopOutputDMA@CSDIOControllerBase@@QAAXXZ| PROC ; CSDIOControllerBase::SDIO_StopOutputDMA

; 423  : {

  006c4		 |$LN6@SDIO_StopO|
  006c4	e1a0c00d	 mov         r12, sp
  006c8	e92d0001	 stmdb       sp!, {r0}
  006cc	e92d5000	 stmdb       sp!, {r12, lr}
  006d0		 |$M42361|

; 424  :     if (m_TxDmaInfo)

  006d0	e59d3008	 ldr         r3, [sp, #8]
  006d4	e2833098	 add         r3, r3, #0x98
  006d8	e5933000	 ldr         r3, [r3]
  006dc	e3530000	 cmp         r3, #0
  006e0	0a000003	 beq         |$LN1@SDIO_StopO|

; 425  :     {
; 426  :       DmaStop(m_TxDmaInfo);

  006e4	e59d3008	 ldr         r3, [sp, #8]
  006e8	e2833098	 add         r3, r3, #0x98
  006ec	e5930000	 ldr         r0, [r3]
  006f0	eb000000	 bl          DmaStop
  006f4		 |$LN1@SDIO_StopO|

; 427  :     }
; 428  : }

  006f4	e89d6000	 ldmia       sp, {sp, lr}
  006f8	e12fff1e	 bx          lr
  006fc		 |$M42362|

			 ENDP  ; |?SDIO_StopOutputDMA@CSDIOControllerBase@@QAAXXZ|, CSDIOControllerBase::SDIO_StopOutputDMA

	EXPORT	|?DumpDMARegs@CSDIOControllerBase@@QAAXH@Z| ; CSDIOControllerBase::DumpDMARegs

  00040			 AREA	 |.pdata|, PDATA
|$T42369| DCD	|$LN5@DumpDMAReg|
	DCD	0x40000503
; Function compile flags: /Odtp

  006fc			 AREA	 |.text|, CODE, ARM

  006fc		 |?DumpDMARegs@CSDIOControllerBase@@QAAXH@Z| PROC ; CSDIOControllerBase::DumpDMARegs

; 431  : {

  006fc		 |$LN5@DumpDMAReg|
  006fc	e1a0c00d	 mov         r12, sp
  00700	e92d0003	 stmdb       sp!, {r0, r1}
  00704	e92d5000	 stmdb       sp!, {r12, lr}
  00708		 |$M42366|

; 432  : 	UNREFERENCED_PARAMETER(inCh);
; 433  : }

  00708	e89d6000	 ldmia       sp, {sp, lr}
  0070c	e12fff1e	 bx          lr
  00710		 |$M42367|

			 ENDP  ; |?DumpDMARegs@CSDIOControllerBase@@QAAXH@Z|, CSDIOControllerBase::DumpDMARegs

	END
