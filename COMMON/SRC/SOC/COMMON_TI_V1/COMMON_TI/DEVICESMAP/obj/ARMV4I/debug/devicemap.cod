; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\DEVICESMAP\devicemap.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|GetAddressByDevice|
	IMPORT	|s_DeviceAddressMap|

  00000			 AREA	 |.pdata|, PDATA
|$T43095| DCD	|$LN8@GetAddress|
	DCD	0x40002e04
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\devicesmap\devicemap.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetAddressByDevice| PROC

; 24   : {

  00000		 |$LN8@GetAddress|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M43092|

; 25   :     UINT32 Addr = 0;

  00010	e3a03000	 mov         r3, #0
  00014	e58d3004	 str         r3, [sp, #4]

; 26   :     DWORD i=0;

  00018	e3a03000	 mov         r3, #0
  0001c	e58d3000	 str         r3, [sp]
  00020		 |$LN3@GetAddress|

; 27   :     while (s_DeviceAddressMap[i].device != OMAP_DEVICE_NONE)

  00020	e59d1000	 ldr         r1, [sp]
  00024	e3a03008	 mov         r3, #8
  00028	e0020391	 mul         r2, r1, r3
  0002c	e59f3080	 ldr         r3, [pc, #0x80]
  00030	e0833002	 add         r3, r3, r2
  00034	e2833004	 add         r3, r3, #4
  00038	e5933000	 ldr         r3, [r3]
  0003c	e3730001	 cmn         r3, #1
  00040	0a000015	 beq         |$LN2@GetAddress|

; 28   :     {   
; 29   :         if (s_DeviceAddressMap[i].device == dev)

  00044	e59d1000	 ldr         r1, [sp]
  00048	e3a03008	 mov         r3, #8
  0004c	e0020391	 mul         r2, r1, r3
  00050	e59f305c	 ldr         r3, [pc, #0x5C]
  00054	e0833002	 add         r3, r3, r2
  00058	e2833004	 add         r3, r3, #4
  0005c	e5932000	 ldr         r2, [r3]
  00060	e59d3014	 ldr         r3, [sp, #0x14]
  00064	e1520003	 cmp         r2, r3
  00068	1a000007	 bne         |$LN1@GetAddress|

; 30   :         {
; 31   :             Addr = s_DeviceAddressMap[i].deviceAddress;

  0006c	e59d1000	 ldr         r1, [sp]
  00070	e3a03008	 mov         r3, #8
  00074	e0020391	 mul         r2, r1, r3
  00078	e59f3034	 ldr         r3, [pc, #0x34]
  0007c	e0833002	 add         r3, r3, r2
  00080	e5933000	 ldr         r3, [r3]
  00084	e58d3004	 str         r3, [sp, #4]

; 32   :             break;

  00088	ea000003	 b           |$LN2@GetAddress|
  0008c		 |$LN1@GetAddress|

; 33   :         }
; 34   :         i++;

  0008c	e59d3000	 ldr         r3, [sp]
  00090	e2833001	 add         r3, r3, #1
  00094	e58d3000	 str         r3, [sp]

; 35   :     }

  00098	eaffffe0	 b           |$LN3@GetAddress|
  0009c		 |$LN2@GetAddress|

; 36   :     return Addr;

  0009c	e59d3004	 ldr         r3, [sp, #4]
  000a0	e58d3008	 str         r3, [sp, #8]

; 37   : }

  000a4	e59d0008	 ldr         r0, [sp, #8]
  000a8	e28dd00c	 add         sp, sp, #0xC
  000ac	e89d6000	 ldmia       sp, {sp, lr}
  000b0	e12fff1e	 bx          lr
  000b4		 |$LN9@GetAddress|
  000b4		 |$LN10@GetAddress|
  000b4	00000000	 DCD         |s_DeviceAddressMap|
  000b8		 |$M43093|

			 ENDP  ; |GetAddressByDevice|

	EXPORT	|GetDeviceByAddress|

  00008			 AREA	 |.pdata|, PDATA
|$T43103| DCD	|$LN8@GetDeviceB|
	DCD	0x40002e04
; Function compile flags: /Odtp

  000b8			 AREA	 |.text|, CODE, ARM

  000b8		 |GetDeviceByAddress| PROC

; 40   : {

  000b8		 |$LN8@GetDeviceB|
  000b8	e1a0c00d	 mov         r12, sp
  000bc	e92d0001	 stmdb       sp!, {r0}
  000c0	e92d5000	 stmdb       sp!, {r12, lr}
  000c4	e24dd00c	 sub         sp, sp, #0xC
  000c8		 |$M43100|

; 41   :     OMAP_DEVICE dev = 0;

  000c8	e3a03000	 mov         r3, #0
  000cc	e58d3004	 str         r3, [sp, #4]

; 42   :     DWORD i=0;

  000d0	e3a03000	 mov         r3, #0
  000d4	e58d3000	 str         r3, [sp]
  000d8		 |$LN3@GetDeviceB|

; 43   :     while (s_DeviceAddressMap[i].device != OMAP_DEVICE_NONE)

  000d8	e59d1000	 ldr         r1, [sp]
  000dc	e3a03008	 mov         r3, #8
  000e0	e0020391	 mul         r2, r1, r3
  000e4	e59f3080	 ldr         r3, [pc, #0x80]
  000e8	e0833002	 add         r3, r3, r2
  000ec	e2833004	 add         r3, r3, #4
  000f0	e5933000	 ldr         r3, [r3]
  000f4	e3730001	 cmn         r3, #1
  000f8	0a000015	 beq         |$LN2@GetDeviceB|

; 44   :     {   
; 45   :         if (s_DeviceAddressMap[i].deviceAddress == addr)

  000fc	e59d1000	 ldr         r1, [sp]
  00100	e3a03008	 mov         r3, #8
  00104	e0020391	 mul         r2, r1, r3
  00108	e59f305c	 ldr         r3, [pc, #0x5C]
  0010c	e0833002	 add         r3, r3, r2
  00110	e5932000	 ldr         r2, [r3]
  00114	e59d3014	 ldr         r3, [sp, #0x14]
  00118	e1520003	 cmp         r2, r3
  0011c	1a000008	 bne         |$LN1@GetDeviceB|

; 46   :         {
; 47   :             dev = s_DeviceAddressMap[i].device;

  00120	e59d1000	 ldr         r1, [sp]
  00124	e3a03008	 mov         r3, #8
  00128	e0020391	 mul         r2, r1, r3
  0012c	e59f3038	 ldr         r3, [pc, #0x38]
  00130	e0833002	 add         r3, r3, r2
  00134	e2833004	 add         r3, r3, #4
  00138	e5933000	 ldr         r3, [r3]
  0013c	e58d3004	 str         r3, [sp, #4]

; 48   :             break;

  00140	ea000003	 b           |$LN2@GetDeviceB|
  00144		 |$LN1@GetDeviceB|

; 49   :         }
; 50   :         i++;

  00144	e59d3000	 ldr         r3, [sp]
  00148	e2833001	 add         r3, r3, #1
  0014c	e58d3000	 str         r3, [sp]

; 51   :     }

  00150	eaffffe0	 b           |$LN3@GetDeviceB|
  00154		 |$LN2@GetDeviceB|

; 52   :     return dev;

  00154	e59d3004	 ldr         r3, [sp, #4]
  00158	e58d3008	 str         r3, [sp, #8]

; 53   : }

  0015c	e59d0008	 ldr         r0, [sp, #8]
  00160	e28dd00c	 add         sp, sp, #0xC
  00164	e89d6000	 ldmia       sp, {sp, lr}
  00168	e12fff1e	 bx          lr
  0016c		 |$LN9@GetDeviceB|
  0016c		 |$LN10@GetDeviceB|
  0016c	00000000	 DCD         |s_DeviceAddressMap|
  00170		 |$M43101|

			 ENDP  ; |GetDeviceByAddress|

	EXPORT	|GetIrqByDevice|
	IMPORT	|wcscmp|
	IMPORT	|s_DeviceIrqMap|

  00010			 AREA	 |.pdata|, PDATA
|$T43111| DCD	|$LN12@GetIrqByDe|
	DCD	0x40004e04
; Function compile flags: /Odtp

  00170			 AREA	 |.text|, CODE, ARM

  00170		 |GetIrqByDevice| PROC

; 57   : {

  00170		 |$LN12@GetIrqByDe|
  00170	e1a0c00d	 mov         r12, sp
  00174	e92d0003	 stmdb       sp!, {r0, r1}
  00178	e92d5000	 stmdb       sp!, {r12, lr}
  0017c	e24dd014	 sub         sp, sp, #0x14
  00180		 |$M43108|

; 58   :     UINT32 irq = (UINT32) -1;

  00180	e3e03000	 mvn         r3, #0
  00184	e58d3004	 str         r3, [sp, #4]

; 59   :     DWORD i=0;

  00188	e3a03000	 mov         r3, #0
  0018c	e58d3000	 str         r3, [sp]
  00190		 |$LN7@GetIrqByDe|

; 60   :     while (s_DeviceIrqMap[i].device != OMAP_DEVICE_NONE)

  00190	e59d1000	 ldr         r1, [sp]
  00194	e3a0300c	 mov         r3, #0xC
  00198	e0020391	 mul         r2, r1, r3
  0019c	e59f3100	 ldr         r3, [pc, #0x100]
  001a0	e0833002	 add         r3, r3, r2
  001a4	e2833004	 add         r3, r3, #4
  001a8	e5933000	 ldr         r3, [r3]
  001ac	e3730001	 cmn         r3, #1
  001b0	0a000035	 beq         |$LN6@GetIrqByDe|

; 61   :     {   
; 62   :         if (s_DeviceIrqMap[i].device == dev)

  001b4	e59d1000	 ldr         r1, [sp]
  001b8	e3a0300c	 mov         r3, #0xC
  001bc	e0020391	 mul         r2, r1, r3
  001c0	e59f30dc	 ldr         r3, [pc, #0xDC]
  001c4	e0833002	 add         r3, r3, r2
  001c8	e2833004	 add         r3, r3, #4
  001cc	e5932000	 ldr         r2, [r3]
  001d0	e59d301c	 ldr         r3, [sp, #0x1C]
  001d4	e1520003	 cmp         r2, r3
  001d8	1a000027	 bne         |$LN5@GetIrqByDe|

; 63   :         {
; 64   :             BOOL bFound = TRUE;

  001dc	e3a03001	 mov         r3, #1
  001e0	e58d3008	 str         r3, [sp, #8]

; 65   : 
; 66   :             //If we extra information, then we will check that the extra information match
; 67   :             if (s_DeviceIrqMap[i].extra)                 

  001e4	e59d1000	 ldr         r1, [sp]
  001e8	e3a0300c	 mov         r3, #0xC
  001ec	e0020391	 mul         r2, r1, r3
  001f0	e59f30ac	 ldr         r3, [pc, #0xAC]
  001f4	e0833002	 add         r3, r3, r2
  001f8	e2833008	 add         r3, r3, #8
  001fc	e5933000	 ldr         r3, [r3]
  00200	e3530000	 cmp         r3, #0
  00204	0a000011	 beq         |$LN4@GetIrqByDe|

; 68   :             {
; 69   :                 if ((extra==NULL) || wcscmp(extra,s_DeviceIrqMap[i].extra))

  00208	e59d3020	 ldr         r3, [sp, #0x20]
  0020c	e3530000	 cmp         r3, #0
  00210	0a00000c	 beq         |$LN2@GetIrqByDe|
  00214	e59d1000	 ldr         r1, [sp]
  00218	e3a0300c	 mov         r3, #0xC
  0021c	e0020391	 mul         r2, r1, r3
  00220	e59f307c	 ldr         r3, [pc, #0x7C]
  00224	e0833002	 add         r3, r3, r2
  00228	e2833008	 add         r3, r3, #8
  0022c	e5931000	 ldr         r1, [r3]
  00230	e59d0020	 ldr         r0, [sp, #0x20]
  00234	eb000000	 bl          wcscmp
  00238	e58d0010	 str         r0, [sp, #0x10]
  0023c	e59d3010	 ldr         r3, [sp, #0x10]
  00240	e3530000	 cmp         r3, #0
  00244	0a000001	 beq         |$LN3@GetIrqByDe|
  00248		 |$LN2@GetIrqByDe|

; 70   :                 {
; 71   :                     bFound = FALSE;

  00248	e3a03000	 mov         r3, #0
  0024c	e58d3008	 str         r3, [sp, #8]
  00250		 |$LN3@GetIrqByDe|
  00250		 |$LN4@GetIrqByDe|

; 72   :                 }
; 73   :             }
; 74   : 
; 75   :             if (bFound)

  00250	e59d3008	 ldr         r3, [sp, #8]
  00254	e3530000	 cmp         r3, #0
  00258	0a000007	 beq         |$LN1@GetIrqByDe|

; 76   :             {
; 77   :                 irq = s_DeviceIrqMap[i].irq;

  0025c	e59d1000	 ldr         r1, [sp]
  00260	e3a0300c	 mov         r3, #0xC
  00264	e0020391	 mul         r2, r1, r3
  00268	e59f3034	 ldr         r3, [pc, #0x34]
  0026c	e0833002	 add         r3, r3, r2
  00270	e5933000	 ldr         r3, [r3]
  00274	e58d3004	 str         r3, [sp, #4]

; 78   :                 break;

  00278	ea000003	 b           |$LN6@GetIrqByDe|
  0027c		 |$LN1@GetIrqByDe|
  0027c		 |$LN5@GetIrqByDe|

; 79   :             }
; 80   :             
; 81   :         }
; 82   :         i++;

  0027c	e59d3000	 ldr         r3, [sp]
  00280	e2833001	 add         r3, r3, #1
  00284	e58d3000	 str         r3, [sp]

; 83   :     }

  00288	eaffffc0	 b           |$LN7@GetIrqByDe|
  0028c		 |$LN6@GetIrqByDe|

; 84   :     return irq;

  0028c	e59d3004	 ldr         r3, [sp, #4]
  00290	e58d300c	 str         r3, [sp, #0xC]

; 85   : }

  00294	e59d000c	 ldr         r0, [sp, #0xC]
  00298	e28dd014	 add         sp, sp, #0x14
  0029c	e89d6000	 ldmia       sp, {sp, lr}
  002a0	e12fff1e	 bx          lr
  002a4		 |$LN13@GetIrqByDe|
  002a4		 |$LN14@GetIrqByDe|
  002a4	00000000	 DCD         |s_DeviceIrqMap|
  002a8		 |$M43109|

			 ENDP  ; |GetIrqByDevice|

	EXPORT	|GetDeviceByIrq|

  00018			 AREA	 |.pdata|, PDATA
|$T43119| DCD	|$LN8@GetDeviceB@2|
	DCD	0x40002c04
; Function compile flags: /Odtp

  002a8			 AREA	 |.text|, CODE, ARM

  002a8		 |GetDeviceByIrq| PROC

; 88   : {

  002a8		 |$LN8@GetDeviceB@2|
  002a8	e1a0c00d	 mov         r12, sp
  002ac	e92d0001	 stmdb       sp!, {r0}
  002b0	e92d5000	 stmdb       sp!, {r12, lr}
  002b4	e24dd00c	 sub         sp, sp, #0xC
  002b8		 |$M43116|

; 89   : 	DWORD devID = OMAP_DEVICE_NONE;

  002b8	e3e03000	 mvn         r3, #0
  002bc	e58d3004	 str         r3, [sp, #4]

; 90   :     DWORD i=0;

  002c0	e3a03000	 mov         r3, #0
  002c4	e58d3000	 str         r3, [sp]
  002c8		 |$LN3@GetDeviceB@2|

; 91   : 
; 92   : 	while (s_DeviceIrqMap[i].irq != 0)

  002c8	e59d1000	 ldr         r1, [sp]
  002cc	e3a0300c	 mov         r3, #0xC
  002d0	e0020391	 mul         r2, r1, r3
  002d4	e59f3078	 ldr         r3, [pc, #0x78]
  002d8	e0833002	 add         r3, r3, r2
  002dc	e5933000	 ldr         r3, [r3]
  002e0	e3530000	 cmp         r3, #0
  002e4	0a000014	 beq         |$LN2@GetDeviceB@2|

; 93   :     {   
; 94   :         if (s_DeviceIrqMap[i].irq == irq)

  002e8	e59d1000	 ldr         r1, [sp]
  002ec	e3a0300c	 mov         r3, #0xC
  002f0	e0020391	 mul         r2, r1, r3
  002f4	e59f3058	 ldr         r3, [pc, #0x58]
  002f8	e0833002	 add         r3, r3, r2
  002fc	e5932000	 ldr         r2, [r3]
  00300	e59d3014	 ldr         r3, [sp, #0x14]
  00304	e1520003	 cmp         r2, r3
  00308	1a000007	 bne         |$LN1@GetDeviceB@2|

; 95   :         {
; 96   : 			devID = s_DeviceIrqMap[i].device;

  0030c	e59d1000	 ldr         r1, [sp]
  00310	e3a0300c	 mov         r3, #0xC
  00314	e0020391	 mul         r2, r1, r3
  00318	e59f3034	 ldr         r3, [pc, #0x34]
  0031c	e0833002	 add         r3, r3, r2
  00320	e2833004	 add         r3, r3, #4
  00324	e5933000	 ldr         r3, [r3]
  00328	e58d3004	 str         r3, [sp, #4]
  0032c		 |$LN1@GetDeviceB@2|

; 97   :         }
; 98   :         i++;

  0032c	e59d3000	 ldr         r3, [sp]
  00330	e2833001	 add         r3, r3, #1
  00334	e58d3000	 str         r3, [sp]

; 99   :     }

  00338	eaffffe2	 b           |$LN3@GetDeviceB@2|
  0033c		 |$LN2@GetDeviceB@2|

; 100  : 
; 101  :     return devID;

  0033c	e59d3004	 ldr         r3, [sp, #4]
  00340	e58d3008	 str         r3, [sp, #8]

; 102  : }

  00344	e59d0008	 ldr         r0, [sp, #8]
  00348	e28dd00c	 add         sp, sp, #0xC
  0034c	e89d6000	 ldmia       sp, {sp, lr}
  00350	e12fff1e	 bx          lr
  00354		 |$LN9@GetDeviceB@2|
  00354		 |$LN10@GetDeviceB@2|
  00354	00000000	 DCD         |s_DeviceIrqMap|
  00358		 |$M43117|

			 ENDP  ; |GetDeviceByIrq|

	END
