; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\BACKLIGHT\bkldrvmain.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|dpCurSettings| [ DATA ]

  00000			 AREA	 |.rdata|, DATA, READONLY
|DeviceStateMasks| DCB 0x1
	DCB	0x2
	DCB	0x4
	DCB	0x8
	DCB	0x10

  00000			 AREA	 |.data|, DATA
|dpCurSettings| DCB "b", 0x0, "a", 0x0, "c", 0x0, "k", 0x0, "l", 0x0, "i", 0x0
	DCB	"g", 0x0, "h", 0x0, "t", 0x0, 0x0, 0x0
	%	44
	DCB	"B", 0x0, "a", 0x0, "c", 0x0, "k", 0x0, "l", 0x0, "i", 0x0
	DCB	"g", 0x0, "h", 0x0, "t", 0x0, 0x0, 0x0
	%	44
	DCB	"F", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i", 0x0
	DCB	"o", 0x0, "n", 0x0, 0x0, 0x0
	%	46
	DCB	"M", 0x0, "i", 0x0, "s", 0x0, "c", 0x0, 0x0, 0x0
	%	54
	DCB	0x0, 0x0
	%	62
	DCB	0x0, 0x0
	%	62
	DCB	0x0, 0x0
	%	62
	DCB	0x0, 0x0
	%	62
	DCB	0x0, 0x0
	%	62
	DCB	0x0, 0x0
	%	62
	DCB	0x0, 0x0
	%	62
	DCB	0x0, 0x0
	%	62
	DCB	0x0, 0x0
	%	62
	DCB	0x0, 0x0
	%	62
	DCB	0x0, 0x0
	%	62
	DCB	"W", 0x0, "a", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0
	DCB	"g", 0x0, 0x0, 0x0
	%	48
	DCB	"E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, 0x0, 0x0
	%	52
	DCD	0xc003
	EXPORT	|??_C@_1EG@KLIEIOJB@?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAc?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAt?$AAo?$AAg?$AAu?$AAi?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KM@OLDBFOML@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@LBPPMOKF@?$AA?$HL?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AA?9?$AA?$CF?$AA0?$AA4?$AAX?$AA?9?$AA?$CF?$AA0?$AA4?$AAX?$AA?9?$AA?$CF?$AA0?$AA2?$AAX?$AA?$CF?$AA0?$AA2?$AAX?$AA?9?$AA?$CF?$AA0?$AA2?$AAX?$AA?$CF?$AA0@| [ DATA ] ; `string'
	EXPORT	|?ConvertStringToGuid@@YAHPBGPAU_GUID@@@Z| ; ConvertStringToGuid
	IMPORT	|swscanf|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|__C_specific_handler|

  00000			 AREA	 |.pdata|, PDATA
|$T32607| DCD	|$LN23@ConvertStr|
	DCD	0xc0006905
|$T32609| DCD	|$LN13@ConvertStr|
	DCD	0x40000a02
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\backlight\bkldrvmain.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@KLIEIOJB@?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAc?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAt?$AAo?$AAg?$AAu?$AAi?$AAd@| DCB "e"
	DCB	0x0, "x", 0x0, "c", 0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, " "
	DCB	0x0, "c", 0x0, "o", 0x0, "n", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, "t", 0x0, "s", 0x0, "t", 0x0, "r", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, "t", 0x0, "o", 0x0, "g", 0x0, "u", 0x0, "i"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "E", 0x0, "B"
	DCB	0x0, "U", 0x0, "G", 0x0, "C", 0x0, "H", 0x0, "K", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, "t", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KM@OLDBFOML@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "C"
	DCB	0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N", 0x0, "_"
	DCB	0x0, "T", 0x0, "I", 0x0, "_", 0x0, "V", 0x0, "1", 0x0, "\\"
	DCB	0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N"
	DCB	0x0, "_", 0x0, "T", 0x0, "I", 0x0, "\\", 0x0, "B", 0x0, "A"
	DCB	0x0, "C", 0x0, "K", 0x0, "L", 0x0, "I", 0x0, "G", 0x0, "H"
	DCB	0x0, "T", 0x0, "\\", 0x0, ".", 0x0, "\\", 0x0, "b", 0x0, "k"
	DCB	0x0, "l", 0x0, "d", 0x0, "r", 0x0, "v", 0x0, "m", 0x0, "a"
	DCB	0x0, "i", 0x0, "n", 0x0, ".", 0x0, "c", 0x0, "p", 0x0, "p"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@LBPPMOKF@?$AA?$HL?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AA?9?$AA?$CF?$AA0?$AA4?$AAX?$AA?9?$AA?$CF?$AA0?$AA4?$AAX?$AA?9?$AA?$CF?$AA0?$AA2?$AAX?$AA?$CF?$AA0?$AA2?$AAX?$AA?9?$AA?$CF?$AA0?$AA2?$AAX?$AA?$CF?$AA0@| DCB "{"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "l", 0x0, "X", 0x0, "-"
	DCB	0x0, "%", 0x0, "0", 0x0, "4", 0x0, "X", 0x0, "-", 0x0, "%"
	DCB	0x0, "0", 0x0, "4", 0x0, "X", 0x0, "-", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "X", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "X"
	DCB	0x0, "-", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "X", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "X", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "X", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "X", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "X", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "X", 0x0, "}", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.xdata|, DATA
|$T32605| DCD	0x1
	DCD	|$LN17@ConvertStr|
	DCD	|$LN18@ConvertStr|
	DCD	|$LN13@ConvertStr|
	DCD	|$LN14@ConvertStr|
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T32605|

  00008		 |?ConvertStringToGuid@@YAHPBGPAU_GUID@@@Z| PROC ; ConvertStringToGuid

; 69   : {

  00008		 |$LN23@ConvertStr|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d0003	 stmdb       sp!, {r0, r1}
  00010	e92d5800	 stmdb       sp!, {r11, r12, lr}
  00014	e28db00c	 add         r11, sp, #0xC
  00018	e24dd084	 sub         sp, sp, #0x84
  0001c		 |$LN21@ConvertStr|

; 70   :     // ConvertStringToGuid
; 71   :     // this routine converts a string into a GUID and returns TRUE if the
; 72   :     // conversion was successful.
; 73   : 
; 74   :     // Local variables.
; 75   :     UINT Data4[8];
; 76   :     int  Count;
; 77   :     BOOL Ok = FALSE;

  0001c	e3a03000	 mov         r3, #0
  00020	e50b3044	 str         r3, [r11, #-0x44]

; 78   :     LPWSTR GuidFormat = L"{%08lX-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}";

  00024	e59f31a4	 ldr         r3, [pc, #0x1A4]
  00028	e50b3048	 str         r3, [r11, #-0x48]

; 79   : 
; 80   :     DEBUGCHK(Guid != NULL && GuidString != NULL);

  0002c	e59b3004	 ldr         r3, [r11, #4]
  00030	e3530000	 cmp         r3, #0
  00034	0a000005	 beq         |$LN8@ConvertStr|
  00038	e59b3000	 ldr         r3, [r11]
  0003c	e3530000	 cmp         r3, #0
  00040	0a000002	 beq         |$LN8@ConvertStr|
  00044	e3a03001	 mov         r3, #1
  00048	e50b3018	 str         r3, [r11, #-0x18]
  0004c	ea000007	 b           |$LN9@ConvertStr|
  00050		 |$LN8@ConvertStr|
  00050	e3a03050	 mov         r3, #0x50
  00054	e59f2170	 ldr         r2, [pc, #0x170]
  00058	e59f1164	 ldr         r1, [pc, #0x164]
  0005c	e59f0164	 ldr         r0, [pc, #0x164]
  00060	eb000000	 bl          NKDbgPrintfW
  00064	e6000010	 __debugbreak_ce
  00068	e3a03000	 mov         r3, #0
  0006c	e50b3018	 str         r3, [r11, #-0x18]
  00070		 |$LN9@ConvertStr|
  00070		 |$LN17@ConvertStr|

; 81   : 
; 82   :     __try 
; 83   :     {
; 84   : 
; 85   :       if (_stscanf(GuidString, GuidFormat, &Guid->Data1, 
; 86   :         &Guid->Data2, &Guid->Data3, &Data4[0], &Data4[1], &Data4[2], &Data4[3], 
; 87   :         &Data4[4], &Data4[5], &Data4[6], &Data4[7]) == 11) 

  00070	e24b306c	 sub         r3, r11, #0x6C
  00074	e283301c	 add         r3, r3, #0x1C
  00078	e58d3020	 str         r3, [sp, #0x20]
  0007c	e24b306c	 sub         r3, r11, #0x6C
  00080	e2833018	 add         r3, r3, #0x18
  00084	e58d301c	 str         r3, [sp, #0x1C]
  00088	e24b306c	 sub         r3, r11, #0x6C
  0008c	e2833014	 add         r3, r3, #0x14
  00090	e58d3018	 str         r3, [sp, #0x18]
  00094	e24b306c	 sub         r3, r11, #0x6C
  00098	e2833010	 add         r3, r3, #0x10
  0009c	e58d3014	 str         r3, [sp, #0x14]
  000a0	e24b306c	 sub         r3, r11, #0x6C
  000a4	e283300c	 add         r3, r3, #0xC
  000a8	e58d3010	 str         r3, [sp, #0x10]
  000ac	e24b306c	 sub         r3, r11, #0x6C
  000b0	e2833008	 add         r3, r3, #8
  000b4	e58d300c	 str         r3, [sp, #0xC]
  000b8	e24b306c	 sub         r3, r11, #0x6C
  000bc	e2833004	 add         r3, r3, #4
  000c0	e58d3008	 str         r3, [sp, #8]
  000c4	e24b306c	 sub         r3, r11, #0x6C
  000c8	e58d3004	 str         r3, [sp, #4]
  000cc	e59b3004	 ldr         r3, [r11, #4]
  000d0	e2833006	 add         r3, r3, #6
  000d4	e58d3000	 str         r3, [sp]
  000d8	e59b3004	 ldr         r3, [r11, #4]
  000dc	e2833004	 add         r3, r3, #4
  000e0	e59b2004	 ldr         r2, [r11, #4]
  000e4	e51b1048	 ldr         r1, [r11, #-0x48]
  000e8	e59b0000	 ldr         r0, [r11]
  000ec	eb000000	 bl          swscanf
  000f0	e50b0014	 str         r0, [r11, #-0x14]
  000f4	e51b3014	 ldr         r3, [r11, #-0x14]
  000f8	e353000b	 cmp         r3, #0xB
  000fc	1a000015	 bne         |$LN4@ConvertStr|

; 88   :       {
; 89   : 
; 90   :           for (Count = 0; Count < (sizeof(Data4) / sizeof(Data4[0])); Count++) 

  00100	e3a03000	 mov         r3, #0
  00104	e50b304c	 str         r3, [r11, #-0x4C]
  00108	ea000002	 b           |$LN3@ConvertStr|
  0010c		 |$LN2@ConvertStr|
  0010c	e51b304c	 ldr         r3, [r11, #-0x4C]
  00110	e2833001	 add         r3, r3, #1
  00114	e50b304c	 str         r3, [r11, #-0x4C]
  00118		 |$LN3@ConvertStr|
  00118	e51b304c	 ldr         r3, [r11, #-0x4C]
  0011c	e3530008	 cmp         r3, #8
  00120	2a00000c	 bcs         |$LN1@ConvertStr|

; 91   :           {
; 92   :               Guid->Data4[Count] = (UCHAR) Data4[Count];

  00124	e51b104c	 ldr         r1, [r11, #-0x4C]
  00128	e3a03004	 mov         r3, #4
  0012c	e0020391	 mul         r2, r1, r3
  00130	e24b306c	 sub         r3, r11, #0x6C
  00134	e0833002	 add         r3, r3, r2
  00138	e5933000	 ldr         r3, [r3]
  0013c	e20310ff	 and         r1, r3, #0xFF
  00140	e59b3004	 ldr         r3, [r11, #4]
  00144	e2832008	 add         r2, r3, #8
  00148	e51b304c	 ldr         r3, [r11, #-0x4C]
  0014c	e0823003	 add         r3, r2, r3
  00150	e5c31000	 strb        r1, [r3]

; 93   :           }

  00154	eaffffec	 b           |$LN2@ConvertStr|
  00158		 |$LN1@ConvertStr|
  00158		 |$LN4@ConvertStr|

; 94   :       }
; 95   : 
; 96   :       Ok = TRUE;

  00158	e3a03001	 mov         r3, #1
  0015c	e50b3044	 str         r3, [r11, #-0x44]
  00160		 |$LN18@ConvertStr|

; 97   :     }

  00160	ea00000b	 b           |$LN19@ConvertStr|
  00164		 |$LN14@ConvertStr|

; 99   :     {
; 100  :         DEBUGMSG(ZONE_ERROR, (TEXT("exception in convertstringtoguid\r\n")));

  00164	e59f3058	 ldr         r3, [pc, #0x58]
  00168	e5933440	 ldr         r3, [r3, #0x440]
  0016c	e3130001	 tst         r3, #1
  00170	0a000004	 beq         |$LN10@ConvertStr|
  00174	e59f0044	 ldr         r0, [pc, #0x44]
  00178	eb000000	 bl          NKDbgPrintfW
  0017c	e3a03001	 mov         r3, #1
  00180	e50b3010	 str         r3, [r11, #-0x10]
  00184	ea000001	 b           |$LN11@ConvertStr|
  00188		 |$LN10@ConvertStr|
  00188	e3a03000	 mov         r3, #0
  0018c	e50b3010	 str         r3, [r11, #-0x10]
  00190		 |$LN11@ConvertStr|
  00190	eaffffff	 b           |$LN19@ConvertStr|
  00194		 |$LN19@ConvertStr|

; 101  :     }
; 102  : 
; 103  :     return Ok;

  00194	e51b3044	 ldr         r3, [r11, #-0x44]
  00198	e50b301c	 str         r3, [r11, #-0x1C]
  0019c		 |$LN12@ConvertStr|

; 104  : }

  0019c	e51b001c	 ldr         r0, [r11, #-0x1C]
  001a0	e24bd00c	 sub         sp, r11, #0xC
  001a4	e89d6800	 ldmia       sp, {r11, sp, lr}
  001a8	e12fff1e	 bx          lr

			 ENDP  ; |?ConvertStringToGuid@@YAHPBGPAU_GUID@@@Z|, ConvertStringToGuid

  001ac		 |$LN13@ConvertStr|
  001ac		 |$LN22@ConvertStr|

; 98   :     __except(EXCEPTION_EXECUTE_HANDLER) 

  001ac	e52de004	 str         lr, [sp, #-4]!
  001b0	e24dd024	 sub         sp, sp, #0x24
  001b4		 |$LN16@ConvertStr|
  001b4		 |$LN25@ConvertStr|
  001b4	e3a00001	 mov         r0, #1
  001b8		 |$LN15@ConvertStr|
  001b8	e28dd024	 add         sp, sp, #0x24
  001bc	e49df004	 ldr         pc, [sp], #4
  001c0		 |$LN27@ConvertStr|
  001c0		 |$LN28@ConvertStr|
  001c0	00000000	 DCD         |??_C@_1EG@KLIEIOJB@?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAc?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAt?$AAo?$AAg?$AAu?$AAi?$AAd@|
  001c4		 |$LN29@ConvertStr|
  001c4	00000000	 DCD         |dpCurSettings|
  001c8		 |$LN30@ConvertStr|
  001c8	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  001cc		 |$LN31@ConvertStr|
  001cc	00000000	 DCD         |??_C@_1KM@OLDBFOML@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  001d0		 |$LN32@ConvertStr|
  001d0	00000000	 DCD         |??_C@_1GI@LBPPMOKF@?$AA?$HL?$AA?$CF?$AA0?$AA8?$AAl?$AAX?$AA?9?$AA?$CF?$AA0?$AA4?$AAX?$AA?9?$AA?$CF?$AA0?$AA4?$AAX?$AA?9?$AA?$CF?$AA0?$AA2?$AAX?$AA?$CF?$AA0?$AA2?$AAX?$AA?9?$AA?$CF?$AA0?$AA2?$AAX?$AA?$CF?$AA0@|
  001d4		 |$LN26@ConvertStr|
  001d4		 |$LN24@ConvertStr|
	EXPORT	|??_C@_1GE@BPOEEKDA@?$AAG?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAs?$AAt?$AAu?$AAs?$AAE?$AAx?$AA2?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAw@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@GIAHMGCK@?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAA?$AAP?$AAI?$AAR?$AAe?$AAa?$AAd@| [ DATA ] ; `string'
	EXPORT	|?UpdateACStatus@@YAXPAUBKL_MDD_INFO@@@Z| ; UpdateACStatus
	IMPORT	|GetLastError|
	IMPORT	|WaitForAPIReady|

  00010			 AREA	 |.pdata|, PDATA
|$T32626| DCD	|$LN16@UpdateACSt|
	DCD	0x40004e04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@BPOEEKDA@?$AAG?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAs?$AAt?$AAu?$AAs?$AAE?$AAx?$AA2?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAw@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "m", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, "S", 0x0, "t", 0x0, "s", 0x0, "t", 0x0, "u"
	DCB	0x0, "s", 0x0, "E", 0x0, "x", 0x0, "2", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "w", 0x0, "i", 0x0, "t", 0x0, "h", 0x0, " ", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@GIAHMGCK@?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAA?$AAP?$AAI?$AAR?$AAe?$AAa?$AAd@| DCB "B"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "l", 0x0, "i", 0x0, "g"
	DCB	0x0, "h", 0x0, "t", 0x0, " ", 0x0, "d", 0x0, "r", 0x0, "i"
	DCB	0x0, "v", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "W"
	DCB	0x0, "a", 0x0, "i", 0x0, "t", 0x0, "F", 0x0, "o", 0x0, "r"
	DCB	0x0, "A", 0x0, "P", 0x0, "I", 0x0, "R", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "y", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  001d4			 AREA	 |.text|, CODE, ARM

  001d4		 |?UpdateACStatus@@YAXPAUBKL_MDD_INFO@@@Z| PROC ; UpdateACStatus

; 110  : {

  001d4		 |$LN16@UpdateACSt|
  001d4	e1a0c00d	 mov         r12, sp
  001d8	e92d0001	 stmdb       sp!, {r0}
  001dc	e92d5000	 stmdb       sp!, {r12, lr}
  001e0	e24dd04c	 sub         sp, sp, #0x4C
  001e4		 |$M32623|

; 111  :     SYSTEM_POWER_STATUS_EX2 SysPower;
; 112  : 
; 113  :     static fFirstTime = TRUE;
; 114  : 
; 115  :     // make sure that GWES APIs ready before calling: 
; 116  :     if (WAIT_OBJECT_0 != WaitForAPIReady(SH_GDI, INFINITE))

  001e4	e3e01000	 mvn         r1, #0
  001e8	e3a00050	 mov         r0, #0x50
  001ec	eb000000	 bl          WaitForAPIReady
  001f0	e58d0038	 str         r0, [sp, #0x38]
  001f4	e59d3038	 ldr         r3, [sp, #0x38]
  001f8	e3530000	 cmp         r3, #0
  001fc	0a00000b	 beq         |$LN7@UpdateACSt|

; 117  :     {
; 118  :         RETAILMSG(ZONE_ERROR, (TEXT("Backlight driver: WaitForAPIReady failed.\r\n")));

  00200	e59f30fc	 ldr         r3, [pc, #0xFC]
  00204	e5933440	 ldr         r3, [r3, #0x440]
  00208	e3130001	 tst         r3, #1
  0020c	0a000004	 beq         |$LN10@UpdateACSt|
  00210	e59f00f0	 ldr         r0, [pc, #0xF0]
  00214	eb000000	 bl          NKDbgPrintfW
  00218	e3a03001	 mov         r3, #1
  0021c	e58d303c	 str         r3, [sp, #0x3C]
  00220	ea000001	 b           |$LN11@UpdateACSt|
  00224		 |$LN10@UpdateACSt|
  00224	e3a03000	 mov         r3, #0
  00228	e58d303c	 str         r3, [sp, #0x3C]
  0022c		 |$LN11@UpdateACSt|

; 119  :         return;

  0022c	ea000030	 b           |$LN8@UpdateACSt|
  00230		 |$LN7@UpdateACSt|

; 120  :     }
; 121  : 
; 122  :     if (pBKLinfo->pfnGetSystemPowerStatusEx2) 

  00230	e59d3054	 ldr         r3, [sp, #0x54]
  00234	e2833f8b	 add         r3, r3, #0x8B, 30
  00238	e5933000	 ldr         r3, [r3]
  0023c	e3530000	 cmp         r3, #0
  00240	0a000027	 beq         |$LN6@UpdateACSt|

; 123  :     {
; 124  :         if ((*pBKLinfo->pfnGetSystemPowerStatusEx2)(&SysPower, sizeof(SysPower), FALSE))

  00244	e3a02000	 mov         r2, #0
  00248	e3a01038	 mov         r1, #0x38
  0024c	e28d0000	 add         r0, sp, #0
  00250	e59d3054	 ldr         r3, [sp, #0x54]
  00254	e2833f8b	 add         r3, r3, #0x8B, 30
  00258	e5933000	 ldr         r3, [r3]
  0025c	e1a0e00f	 mov         lr, pc
  00260	e12fff13	 bx          r3
  00264	e58d0040	 str         r0, [sp, #0x40]
  00268	e59d3040	 ldr         r3, [sp, #0x40]
  0026c	e3530000	 cmp         r3, #0
  00270	0a00000c	 beq         |$LN5@UpdateACSt|

; 125  :         {
; 126  :             if (SysPower.ACLineStatus & AC_LINE_ONLINE)

  00274	e5dd3000	 ldrb        r3, [sp]
  00278	e3130001	 tst         r3, #1
  0027c	0a000004	 beq         |$LN4@UpdateACSt|

; 127  :             {
; 128  :                 pBKLinfo->fOnAC = TRUE;

  00280	e59d3054	 ldr         r3, [sp, #0x54]
  00284	e2832e21	 add         r2, r3, #0x21, 28
  00288	e3a03001	 mov         r3, #1
  0028c	e5823000	 str         r3, [r2]

; 129  :             }
; 130  :             else

  00290	ea000003	 b           |$LN3@UpdateACSt|
  00294		 |$LN4@UpdateACSt|

; 131  :             {
; 132  :                 pBKLinfo->fOnAC = FALSE;

  00294	e59d3054	 ldr         r3, [sp, #0x54]
  00298	e2832e21	 add         r2, r3, #0x21, 28
  0029c	e3a03000	 mov         r3, #0
  002a0	e5823000	 str         r3, [r2]
  002a4		 |$LN3@UpdateACSt|

; 133  :             }
; 134  :         }
; 135  :         else

  002a4	ea00000d	 b           |$LN2@UpdateACSt|
  002a8		 |$LN5@UpdateACSt|

; 136  :         {
; 137  :             DEBUGMSG(ZONE_BACKLIGHT, (TEXT("GetSystemPowerStstusEx2 failed with error 0x%x.\r\n"), GetLastError()));

  002a8	e59f3054	 ldr         r3, [pc, #0x54]
  002ac	e5933440	 ldr         r3, [r3, #0x440]
  002b0	e3130001	 tst         r3, #1
  002b4	0a000007	 beq         |$LN12@UpdateACSt|
  002b8	eb000000	 bl          GetLastError
  002bc	e58d0044	 str         r0, [sp, #0x44]
  002c0	e59d1044	 ldr         r1, [sp, #0x44]
  002c4	e59f0034	 ldr         r0, [pc, #0x34]
  002c8	eb000000	 bl          NKDbgPrintfW
  002cc	e3a03001	 mov         r3, #1
  002d0	e58d3048	 str         r3, [sp, #0x48]
  002d4	ea000001	 b           |$LN13@UpdateACSt|
  002d8		 |$LN12@UpdateACSt|
  002d8	e3a03000	 mov         r3, #0
  002dc	e58d3048	 str         r3, [sp, #0x48]
  002e0		 |$LN13@UpdateACSt|
  002e0		 |$LN2@UpdateACSt|

; 138  :             
; 139  :         }
; 140  :     }
; 141  :     else 

  002e0	ea000003	 b           |$LN1@UpdateACSt|
  002e4		 |$LN6@UpdateACSt|

; 142  :     {
; 143  :         // There are no battery APIs so assume that we are always on AC power.
; 144  :         pBKLinfo->fOnAC = TRUE;

  002e4	e59d3054	 ldr         r3, [sp, #0x54]
  002e8	e2832e21	 add         r2, r3, #0x21, 28
  002ec	e3a03001	 mov         r3, #1
  002f0	e5823000	 str         r3, [r2]
  002f4		 |$LN1@UpdateACSt|
  002f4		 |$LN8@UpdateACSt|

; 145  :     }
; 146  :     
; 147  :     return;    
; 148  :     
; 149  : }

  002f4	e28dd04c	 add         sp, sp, #0x4C
  002f8	e89d6000	 ldmia       sp, {sp, lr}
  002fc	e12fff1e	 bx          lr
  00300		 |$LN17@UpdateACSt|
  00300		 |$LN18@UpdateACSt|
  00300	00000000	 DCD         |??_C@_1GE@BPOEEKDA@?$AAG?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAs?$AAt?$AAu?$AAs?$AAE?$AAx?$AA2?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAw@|
  00304		 |$LN19@UpdateACSt|
  00304	00000000	 DCD         |dpCurSettings|
  00308		 |$LN20@UpdateACSt|
  00308	00000000	 DCD         |??_C@_1FI@GIAHMGCK@?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAA?$AAP?$AAI?$AAR?$AAe?$AAa?$AAd@|
  0030c		 |$M32624|

			 ENDP  ; |?UpdateACStatus@@YAXPAUBKL_MDD_INFO@@@Z|, UpdateACStatus

	EXPORT	|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?GetBestSupportedState@@YAHPAUBKL_MDD_INFO@@W4_CEDEVICE_POWER_STATE@@PAW42@@Z| ; GetBestSupportedState

  00018			 AREA	 |.pdata|, PDATA
|$T32645| DCD	|$LN42@GetBestSup|
	DCD	0x4000b304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| DCB "U", 0x0
	DCB	"n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n", 0x0
	DCB	0x0, 0x0				; `string'
; Function compile flags: /Odtp

  0030c			 AREA	 |.text|, CODE, ARM

  0030c		 |?GetBestSupportedState@@YAHPAUBKL_MDD_INFO@@W4_CEDEVICE_POWER_STATE@@PAW42@@Z| PROC ; GetBestSupportedState

; 166  : {

  0030c		 |$LN42@GetBestSup|
  0030c	e1a0c00d	 mov         r12, sp
  00310	e92d0007	 stmdb       sp!, {r0 - r2}
  00314	e92d5000	 stmdb       sp!, {r12, lr}
  00318	e24dd010	 sub         sp, sp, #0x10
  0031c		 |$M32642|

; 167  :     BOOL fRet = TRUE;   // assume there's a suitable state we can go to

  0031c	e3a03001	 mov         r3, #1
  00320	e58d3000	 str         r3, [sp]

; 168  :     
; 169  :     switch(ReqDx)

  00324	e59d301c	 ldr         r3, [sp, #0x1C]
  00328	e58d3008	 str         r3, [sp, #8]
  0032c	e59d3008	 ldr         r3, [sp, #8]
  00330	e3530004	 cmp         r3, #4
  00334	8a000091	 bhi         |$LN1@GetBestSup|
  00338	e59d2008	 ldr         r2, [sp, #8]
  0033c	e1a03102	 mov         r3, r2, lsl #2
  00340	e083300f	 add         r3, r3, pc
  00344	e5933004	 ldr         r3, [r3, #4]
  00348	e08ff003	 add         pc, pc, r3
  0034c		 |$LN34@GetBestSup|
  0034c		 |$LN33@GetBestSup|
  0034c		 |$LN35@GetBestSup|
  0034c	00000010	 DCD         0x10
  00350		 |$LN36@GetBestSup|
  00350	00000020	 DCD         0x20
  00354		 |$LN37@GetBestSup|
  00354	000000ec	 DCD         0xec
  00358		 |$LN38@GetBestSup|
  00358	00000188	 DCD         0x188
  0035c		 |$LN39@GetBestSup|
  0035c	000001f4	 DCD         0x1f4
  00360		 |$LN26@GetBestSup|

; 170  :     {
; 171  :         case D0:
; 172  :             *SetDx = D0;

  00360	e59d2020	 ldr         r2, [sp, #0x20]
  00364	e3a03000	 mov         r3, #0
  00368	e5823000	 str         r3, [r2]

; 173  :             break;

  0036c	ea00008f	 b           |$LN27@GetBestSup|
  00370		 |$LN25@GetBestSup|

; 174  :         case D1:
; 175  :             if(pBKLinfo->ucSupportedStatesMask & DeviceStateMasks[D1])

  00370	e59d3018	 ldr         r3, [sp, #0x18]
  00374	e2833f86	 add         r3, r3, #0x86, 30
  00378	e5d33000	 ldrb        r3, [r3]
  0037c	e1a02003	 mov         r2, r3
  00380	e59f324c	 ldr         r3, [pc, #0x24C]
  00384	e5d33001	 ldrb        r3, [r3, #1]
  00388	e1120003	 tst         r2, r3
  0038c	0a000003	 beq         |$LN24@GetBestSup|

; 176  :             {
; 177  :                 *SetDx = D1;

  00390	e59d2020	 ldr         r2, [sp, #0x20]
  00394	e3a03001	 mov         r3, #1
  00398	e5823000	 str         r3, [r2]
  0039c	ea000025	 b           |$LN23@GetBestSup|
  003a0		 |$LN24@GetBestSup|

; 178  :             }            
; 179  :             else if(pBKLinfo->ucSupportedStatesMask & DeviceStateMasks[D2])

  003a0	e59d3018	 ldr         r3, [sp, #0x18]
  003a4	e2833f86	 add         r3, r3, #0x86, 30
  003a8	e5d33000	 ldrb        r3, [r3]
  003ac	e1a02003	 mov         r2, r3
  003b0	e59f321c	 ldr         r3, [pc, #0x21C]
  003b4	e5d33002	 ldrb        r3, [r3, #2]
  003b8	e1120003	 tst         r2, r3
  003bc	0a000003	 beq         |$LN22@GetBestSup|

; 180  :             {
; 181  :                 *SetDx = D2;

  003c0	e59d2020	 ldr         r2, [sp, #0x20]
  003c4	e3a03002	 mov         r3, #2
  003c8	e5823000	 str         r3, [r2]
  003cc	ea000019	 b           |$LN21@GetBestSup|
  003d0		 |$LN22@GetBestSup|

; 182  :             }
; 183  :             else if(pBKLinfo->ucSupportedStatesMask & DeviceStateMasks[D3])

  003d0	e59d3018	 ldr         r3, [sp, #0x18]
  003d4	e2833f86	 add         r3, r3, #0x86, 30
  003d8	e5d33000	 ldrb        r3, [r3]
  003dc	e1a02003	 mov         r2, r3
  003e0	e59f31ec	 ldr         r3, [pc, #0x1EC]
  003e4	e5d33003	 ldrb        r3, [r3, #3]
  003e8	e1120003	 tst         r2, r3
  003ec	0a000003	 beq         |$LN20@GetBestSup|

; 184  :             {
; 185  :                 *SetDx = D3;

  003f0	e59d2020	 ldr         r2, [sp, #0x20]
  003f4	e3a03003	 mov         r3, #3
  003f8	e5823000	 str         r3, [r2]
  003fc	ea00000d	 b           |$LN19@GetBestSup|
  00400		 |$LN20@GetBestSup|

; 186  :             }
; 187  :             else if(pBKLinfo->ucSupportedStatesMask & DeviceStateMasks[D4])

  00400	e59d3018	 ldr         r3, [sp, #0x18]
  00404	e2833f86	 add         r3, r3, #0x86, 30
  00408	e5d33000	 ldrb        r3, [r3]
  0040c	e1a02003	 mov         r2, r3
  00410	e59f31bc	 ldr         r3, [pc, #0x1BC]
  00414	e5d33004	 ldrb        r3, [r3, #4]
  00418	e1120003	 tst         r2, r3
  0041c	0a000003	 beq         |$LN18@GetBestSup|

; 188  :             {
; 189  :                 *SetDx = D4;

  00420	e59d2020	 ldr         r2, [sp, #0x20]
  00424	e3a03004	 mov         r3, #4
  00428	e5823000	 str         r3, [r2]

; 190  :             }
; 191  :             else

  0042c	ea000001	 b           |$LN17@GetBestSup|
  00430		 |$LN18@GetBestSup|

; 192  :             {
; 193  :                 fRet = FALSE;

  00430	e3a03000	 mov         r3, #0
  00434	e58d3000	 str         r3, [sp]
  00438		 |$LN17@GetBestSup|
  00438		 |$LN19@GetBestSup|
  00438		 |$LN21@GetBestSup|
  00438		 |$LN23@GetBestSup|

; 194  :             }
; 195  :             break;

  00438	ea00005c	 b           |$LN27@GetBestSup|
  0043c		 |$LN16@GetBestSup|

; 196  :         
; 197  :         case D2:
; 198  :             if(pBKLinfo->ucSupportedStatesMask & DeviceStateMasks[D2])

  0043c	e59d3018	 ldr         r3, [sp, #0x18]
  00440	e2833f86	 add         r3, r3, #0x86, 30
  00444	e5d33000	 ldrb        r3, [r3]
  00448	e1a02003	 mov         r2, r3
  0044c	e59f3180	 ldr         r3, [pc, #0x180]
  00450	e5d33002	 ldrb        r3, [r3, #2]
  00454	e1120003	 tst         r2, r3
  00458	0a000003	 beq         |$LN15@GetBestSup|

; 199  :             {
; 200  :                 *SetDx = D2;

  0045c	e59d2020	 ldr         r2, [sp, #0x20]
  00460	e3a03002	 mov         r3, #2
  00464	e5823000	 str         r3, [r2]
  00468	ea000019	 b           |$LN14@GetBestSup|
  0046c		 |$LN15@GetBestSup|

; 201  :             }
; 202  :             else if(pBKLinfo->ucSupportedStatesMask & DeviceStateMasks[D3])

  0046c	e59d3018	 ldr         r3, [sp, #0x18]
  00470	e2833f86	 add         r3, r3, #0x86, 30
  00474	e5d33000	 ldrb        r3, [r3]
  00478	e1a02003	 mov         r2, r3
  0047c	e59f3150	 ldr         r3, [pc, #0x150]
  00480	e5d33003	 ldrb        r3, [r3, #3]
  00484	e1120003	 tst         r2, r3
  00488	0a000003	 beq         |$LN13@GetBestSup|

; 203  :             {
; 204  :                 *SetDx = D3;

  0048c	e59d2020	 ldr         r2, [sp, #0x20]
  00490	e3a03003	 mov         r3, #3
  00494	e5823000	 str         r3, [r2]
  00498	ea00000d	 b           |$LN12@GetBestSup|
  0049c		 |$LN13@GetBestSup|

; 205  :             }
; 206  :             else if(pBKLinfo->ucSupportedStatesMask & DeviceStateMasks[D4])

  0049c	e59d3018	 ldr         r3, [sp, #0x18]
  004a0	e2833f86	 add         r3, r3, #0x86, 30
  004a4	e5d33000	 ldrb        r3, [r3]
  004a8	e1a02003	 mov         r2, r3
  004ac	e59f3120	 ldr         r3, [pc, #0x120]
  004b0	e5d33004	 ldrb        r3, [r3, #4]
  004b4	e1120003	 tst         r2, r3
  004b8	0a000003	 beq         |$LN11@GetBestSup|

; 207  :             {
; 208  :                 *SetDx = D4;

  004bc	e59d2020	 ldr         r2, [sp, #0x20]
  004c0	e3a03004	 mov         r3, #4
  004c4	e5823000	 str         r3, [r2]

; 209  :             }                       
; 210  :             else

  004c8	ea000001	 b           |$LN10@GetBestSup|
  004cc		 |$LN11@GetBestSup|

; 211  :             {
; 212  :                 fRet = FALSE;

  004cc	e3a03000	 mov         r3, #0
  004d0	e58d3000	 str         r3, [sp]
  004d4		 |$LN10@GetBestSup|
  004d4		 |$LN12@GetBestSup|
  004d4		 |$LN14@GetBestSup|

; 213  :             }
; 214  :             break;

  004d4	ea000035	 b           |$LN27@GetBestSup|
  004d8		 |$LN9@GetBestSup|

; 215  : 
; 216  :         case D3:
; 217  :             if(pBKLinfo->ucSupportedStatesMask & DeviceStateMasks[D3])

  004d8	e59d3018	 ldr         r3, [sp, #0x18]
  004dc	e2833f86	 add         r3, r3, #0x86, 30
  004e0	e5d33000	 ldrb        r3, [r3]
  004e4	e1a02003	 mov         r2, r3
  004e8	e59f30e4	 ldr         r3, [pc, #0xE4]
  004ec	e5d33003	 ldrb        r3, [r3, #3]
  004f0	e1120003	 tst         r2, r3
  004f4	0a000003	 beq         |$LN8@GetBestSup|

; 218  :             {
; 219  :                 *SetDx = D3;

  004f8	e59d2020	 ldr         r2, [sp, #0x20]
  004fc	e3a03003	 mov         r3, #3
  00500	e5823000	 str         r3, [r2]
  00504	ea00000d	 b           |$LN7@GetBestSup|
  00508		 |$LN8@GetBestSup|

; 220  :             }
; 221  :             else if(pBKLinfo->ucSupportedStatesMask & DeviceStateMasks[D4])

  00508	e59d3018	 ldr         r3, [sp, #0x18]
  0050c	e2833f86	 add         r3, r3, #0x86, 30
  00510	e5d33000	 ldrb        r3, [r3]
  00514	e1a02003	 mov         r2, r3
  00518	e59f30b4	 ldr         r3, [pc, #0xB4]
  0051c	e5d33004	 ldrb        r3, [r3, #4]
  00520	e1120003	 tst         r2, r3
  00524	0a000003	 beq         |$LN6@GetBestSup|

; 222  :             {
; 223  :                 *SetDx = D4;

  00528	e59d2020	 ldr         r2, [sp, #0x20]
  0052c	e3a03004	 mov         r3, #4
  00530	e5823000	 str         r3, [r2]

; 224  :             }
; 225  :             else

  00534	ea000001	 b           |$LN5@GetBestSup|
  00538		 |$LN6@GetBestSup|

; 226  :             {
; 227  :                 fRet = FALSE;

  00538	e3a03000	 mov         r3, #0
  0053c	e58d3000	 str         r3, [sp]
  00540		 |$LN5@GetBestSup|
  00540		 |$LN7@GetBestSup|

; 228  :             }
; 229  :             break;

  00540	ea00001a	 b           |$LN27@GetBestSup|
  00544		 |$LN4@GetBestSup|

; 230  :         case D4:
; 231  :             if(pBKLinfo->ucSupportedStatesMask & DeviceStateMasks[D4])

  00544	e59d3018	 ldr         r3, [sp, #0x18]
  00548	e2833f86	 add         r3, r3, #0x86, 30
  0054c	e5d33000	 ldrb        r3, [r3]
  00550	e1a02003	 mov         r2, r3
  00554	e59f3078	 ldr         r3, [pc, #0x78]
  00558	e5d33004	 ldrb        r3, [r3, #4]
  0055c	e1120003	 tst         r2, r3
  00560	0a000003	 beq         |$LN3@GetBestSup|

; 232  :             {
; 233  :                 *SetDx = D4;

  00564	e59d2020	 ldr         r2, [sp, #0x20]
  00568	e3a03004	 mov         r3, #4
  0056c	e5823000	 str         r3, [r2]

; 234  :             }
; 235  :             else

  00570	ea000001	 b           |$LN2@GetBestSup|
  00574		 |$LN3@GetBestSup|

; 236  :             {
; 237  :                 fRet = FALSE;

  00574	e3a03000	 mov         r3, #0
  00578	e58d3000	 str         r3, [sp]
  0057c		 |$LN2@GetBestSup|

; 238  :             }
; 239  :             break;  

  0057c	ea00000b	 b           |$LN27@GetBestSup|
  00580		 |$LN1@GetBestSup|

; 240  :         default:
; 241  :             ASSERT(FALSE);

  00580	ea000002	 b           |$LN31@GetBestSup|
  00584	e3a03001	 mov         r3, #1
  00588	e58d300c	 str         r3, [sp, #0xC]
  0058c	ea000007	 b           |$LN32@GetBestSup|
  00590		 |$LN31@GetBestSup|
  00590	e3a030f1	 mov         r3, #0xF1
  00594	e59f2034	 ldr         r2, [pc, #0x34]
  00598	e59f102c	 ldr         r1, [pc, #0x2C]
  0059c	e59f0024	 ldr         r0, [pc, #0x24]
  005a0	eb000000	 bl          NKDbgPrintfW
  005a4	e6000010	 __debugbreak_ce
  005a8	e3a03000	 mov         r3, #0
  005ac	e58d300c	 str         r3, [sp, #0xC]
  005b0		 |$LN32@GetBestSup|
  005b0		 |$LN27@GetBestSup|

; 242  :             break;
; 243  :             
; 244  :     }   
; 245  : 
; 246  :     return fRet;

  005b0	e59d3000	 ldr         r3, [sp]
  005b4	e58d3004	 str         r3, [sp, #4]

; 247  : }

  005b8	e59d0004	 ldr         r0, [sp, #4]
  005bc	e28dd010	 add         sp, sp, #0x10
  005c0	e89d6000	 ldmia       sp, {sp, lr}
  005c4	e12fff1e	 bx          lr
  005c8		 |$LN43@GetBestSup|
  005c8		 |$LN44@GetBestSup|
  005c8	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  005cc		 |$LN45@GetBestSup|
  005cc	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  005d0		 |$LN46@GetBestSup|
  005d0	00000000	 DCD         |??_C@_1KM@OLDBFOML@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  005d4		 |$LN47@GetBestSup|
  005d4	00000000	 DCD         |DeviceStateMasks|
  005d8		 |$M32643|

			 ENDP  ; |?GetBestSupportedState@@YAHPAUBKL_MDD_INFO@@W4_CEDEVICE_POWER_STATE@@PAW42@@Z|, GetBestSupportedState

	EXPORT	|?IsTapOn@@YAHPAUBKL_MDD_INFO@@@Z|	; IsTapOn

  00020			 AREA	 |.pdata|, PDATA
|$T32660| DCD	|$LN11@IsTapOn|
	DCD	0x40002704
; Function compile flags: /Odtp

  005d8			 AREA	 |.text|, CODE, ARM

  005d8		 |?IsTapOn@@YAHPAUBKL_MDD_INFO@@@Z| PROC ; IsTapOn

; 253  : {

  005d8		 |$LN11@IsTapOn|
  005d8	e1a0c00d	 mov         r12, sp
  005dc	e92d0001	 stmdb       sp!, {r0}
  005e0	e92d5000	 stmdb       sp!, {r12, lr}
  005e4	e24dd00c	 sub         sp, sp, #0xC
  005e8		 |$M32657|

; 254  :     if(pBKLinfo->fOnAC)

  005e8	e59d3014	 ldr         r3, [sp, #0x14]
  005ec	e2833e21	 add         r3, r3, #0x21, 28
  005f0	e5933000	 ldr         r3, [r3]
  005f4	e3530000	 cmp         r3, #0
  005f8	0a00000d	 beq         |$LN2@IsTapOn|

; 255  :     {
; 256  :         return (pBKLinfo->fExternalTapOn? TRUE : FALSE);

  005fc	e59d3014	 ldr         r3, [sp, #0x14]
  00600	e2833f81	 add         r3, r3, #0x81, 30
  00604	e5933000	 ldr         r3, [r3]
  00608	e3530000	 cmp         r3, #0
  0060c	0a000002	 beq         |$LN5@IsTapOn|
  00610	e3a03001	 mov         r3, #1
  00614	e58d3004	 str         r3, [sp, #4]
  00618	ea000001	 b           |$LN6@IsTapOn|
  0061c		 |$LN5@IsTapOn|
  0061c	e3a03000	 mov         r3, #0
  00620	e58d3004	 str         r3, [sp, #4]
  00624		 |$LN6@IsTapOn|
  00624	e59d3004	 ldr         r3, [sp, #4]
  00628	e58d3000	 str         r3, [sp]
  0062c	ea00000c	 b           |$LN3@IsTapOn|

; 257  :     }
; 258  :     else

  00630	ea00000b	 b           |$LN1@IsTapOn|
  00634		 |$LN2@IsTapOn|

; 259  :     {
; 260  :         return (pBKLinfo->fBatteryTapOn? TRUE : FALSE);

  00634	e59d3014	 ldr         r3, [sp, #0x14]
  00638	e2833c02	 add         r3, r3, #2, 24
  0063c	e5933000	 ldr         r3, [r3]
  00640	e3530000	 cmp         r3, #0
  00644	0a000002	 beq         |$LN7@IsTapOn|
  00648	e3a03001	 mov         r3, #1
  0064c	e58d3008	 str         r3, [sp, #8]
  00650	ea000001	 b           |$LN8@IsTapOn|
  00654		 |$LN7@IsTapOn|
  00654	e3a03000	 mov         r3, #0
  00658	e58d3008	 str         r3, [sp, #8]
  0065c		 |$LN8@IsTapOn|
  0065c	e59d3008	 ldr         r3, [sp, #8]
  00660	e58d3000	 str         r3, [sp]
  00664		 |$LN1@IsTapOn|
  00664		 |$LN3@IsTapOn|

; 261  :     }
; 262  :     
; 263  : }

  00664	e59d0000	 ldr         r0, [sp]
  00668	e28dd00c	 add         sp, sp, #0xC
  0066c	e89d6000	 ldmia       sp, {sp, lr}
  00670	e12fff1e	 bx          lr
  00674		 |$M32658|

			 ENDP  ; |?IsTapOn@@YAHPAUBKL_MDD_INFO@@@Z|, IsTapOn

	EXPORT	|?GetTimeout@@YAKPAUBKL_MDD_INFO@@@Z|	; GetTimeout

  00028			 AREA	 |.pdata|, PDATA
|$T32666| DCD	|$LN7@GetTimeout|
	DCD	0x40001704
; Function compile flags: /Odtp

  00674			 AREA	 |.text|, CODE, ARM

  00674		 |?GetTimeout@@YAKPAUBKL_MDD_INFO@@@Z| PROC ; GetTimeout

; 266  : {

  00674		 |$LN7@GetTimeout|
  00674	e1a0c00d	 mov         r12, sp
  00678	e92d0001	 stmdb       sp!, {r0}
  0067c	e92d5000	 stmdb       sp!, {r12, lr}
  00680	e24dd004	 sub         sp, sp, #4
  00684		 |$M32663|

; 267  :     if(pBKLinfo->fOnAC)

  00684	e59d300c	 ldr         r3, [sp, #0xC]
  00688	e2833e21	 add         r3, r3, #0x21, 28
  0068c	e5933000	 ldr         r3, [r3]
  00690	e3530000	 cmp         r3, #0
  00694	0a000005	 beq         |$LN2@GetTimeout|

; 268  :     {
; 269  :         return pBKLinfo->dwACTimeout;        

  00698	e59d300c	 ldr         r3, [sp, #0xC]
  0069c	e2833f83	 add         r3, r3, #0x83, 30
  006a0	e5933000	 ldr         r3, [r3]
  006a4	e58d3000	 str         r3, [sp]
  006a8	ea000004	 b           |$LN3@GetTimeout|

; 270  :     }
; 271  :     else

  006ac	ea000003	 b           |$LN1@GetTimeout|
  006b0		 |$LN2@GetTimeout|

; 272  :     {
; 273  :         return pBKLinfo->dwBattTimeout;        

  006b0	e59d300c	 ldr         r3, [sp, #0xC]
  006b4	e2833f82	 add         r3, r3, #0x82, 30
  006b8	e5933000	 ldr         r3, [r3]
  006bc	e58d3000	 str         r3, [sp]
  006c0		 |$LN1@GetTimeout|
  006c0		 |$LN3@GetTimeout|

; 274  :     }
; 275  : 
; 276  : }

  006c0	e59d0000	 ldr         r0, [sp]
  006c4	e28dd004	 add         sp, sp, #4
  006c8	e89d6000	 ldmia       sp, {sp, lr}
  006cc	e12fff1e	 bx          lr
  006d0		 |$M32664|

			 ENDP  ; |?GetTimeout@@YAKPAUBKL_MDD_INFO@@@Z|, GetTimeout

	EXPORT	|??_C@_1CO@OBGOCLFP@?$AA?9?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAR?$AAe?$AAa?$AAd?$AAM?$AAD?$AAD?$AAR?$AAe?$AAg?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@PJBHBNNG@?$AAA?$AAC?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@PELGLPFE@?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@FKEHPNLB@?$AAA?$AAC?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAO?$AAn?$AAT?$AAa?$AAp?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@BFBCCLIP@?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAO?$AAn?$AAT?$AAa?$AAp?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@MGKPHPG@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?2?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@DKKKHEHE@?$AA?$CL?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAR?$AAe?$AAa?$AAd?$AAM?$AAD?$AAD?$AAR?$AAe?$AAg?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|?BacklightUpdateMDDRegSettings@@YAXPAUBKL_MDD_INFO@@@Z| ; BacklightUpdateMDDRegSettings
	IMPORT	|RegCloseKey|
	IMPORT	|RegQueryValueExW|
	IMPORT	|RegOpenKeyExW|
	IMPORT	|__security_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_check_cookie|

  00030			 AREA	 |.pdata|, PDATA
|$T32689| DCD	|$LN16@BacklightU|
	DCD	0xc000a004

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@OBGOCLFP@?$AA?9?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAR?$AAe?$AAa?$AAd?$AAM?$AAD?$AAD?$AAR?$AAe?$AAg?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "B", 0x0, "a", 0x0, "c", 0x0, "k", 0x0, "l", 0x0, "i"
	DCB	0x0, "g", 0x0, "h", 0x0, "t", 0x0, "R", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "M", 0x0, "D", 0x0, "D", 0x0, "R", 0x0, "e"
	DCB	0x0, "g", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@PJBHBNNG@?$AAA?$AAC?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o"
	DCB	0x0, "u", 0x0, "t", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@PELGLPFE@?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "t", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "y"
	DCB	0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u"
	DCB	0x0, "t", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@FKEHPNLB@?$AAA?$AAC?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAO?$AAn?$AAT?$AAa?$AAp?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, "B", 0x0, "a", 0x0, "c", 0x0, "k", 0x0, "l"
	DCB	0x0, "i", 0x0, "g", 0x0, "h", 0x0, "t", 0x0, "O", 0x0, "n"
	DCB	0x0, "T", 0x0, "a", 0x0, "p", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@BFBCCLIP@?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAO?$AAn?$AAT?$AAa?$AAp?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "l", 0x0, "i", 0x0, "g"
	DCB	0x0, "h", 0x0, "t", 0x0, "O", 0x0, "n", 0x0, "T", 0x0, "a"
	DCB	0x0, "p", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@MGKPHPG@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?2?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?$AA@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "P", 0x0, "a", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, "\\"
	DCB	0x0, "B", 0x0, "a", 0x0, "c", 0x0, "k", 0x0, "l", 0x0, "i"
	DCB	0x0, "g", 0x0, "h", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@DKKKHEHE@?$AA?$CL?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAR?$AAe?$AAa?$AAd?$AAM?$AAD?$AAD?$AAR?$AAe?$AAg?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "B", 0x0, "a", 0x0, "c", 0x0, "k", 0x0, "l", 0x0, "i"
	DCB	0x0, "g", 0x0, "h", 0x0, "t", 0x0, "R", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "M", 0x0, "D", 0x0, "D", 0x0, "R", 0x0, "e"
	DCB	0x0, "g", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00014			 AREA	 |.xdata|, DATA
|$T32685| DCD	0xffffffb0
; Function compile flags: /Odtp

  006d0			 AREA	 |.text|, CODE, ARM

  006d0	00000000	 DCD         |__GSHandlerCheck|
  006d4	00000000	 DCD         |$T32685|

  006d8		 |?BacklightUpdateMDDRegSettings@@YAXPAUBKL_MDD_INFO@@@Z| PROC ; BacklightUpdateMDDRegSettings

; 282  : {

  006d8		 |$LN16@BacklightU|
  006d8	e1a0c00d	 mov         r12, sp
  006dc	e92d0001	 stmdb       sp!, {r0}
  006e0	e92d5000	 stmdb       sp!, {r12, lr}
  006e4	e24ddf59	 sub         sp, sp, #0x59, 30
  006e8		 |$M32686|
  006e8	e59f3264	 ldr         r3, [pc, #0x264]
  006ec	e5933000	 ldr         r3, [r3]
  006f0	e58d3120	 str         r3, [sp, #0x120]

; 283  :     DWORD   retCode;
; 284  :     BYTE    ValueData[MAX_PATH];
; 285  :     DWORD    dwType;
; 286  :     void    *bData = ValueData;

  006f4	e28d3018	 add         r3, sp, #0x18
  006f8	e58d3010	 str         r3, [sp, #0x10]

; 287  :     DWORD   cbData;
; 288  :     HKEY    hKey;
; 289  : 
; 290  :     DEBUGMSG(ZONE_BACKLIGHT,(TEXT("+BacklightReadMDDReg\r\n")));

  006fc	e59f3234	 ldr         r3, [pc, #0x234]
  00700	e5933440	 ldr         r3, [r3, #0x440]
  00704	e3130001	 tst         r3, #1
  00708	0a000004	 beq         |$LN10@BacklightU|
  0070c	e59f023c	 ldr         r0, [pc, #0x23C]
  00710	eb000000	 bl          NKDbgPrintfW
  00714	e3a03001	 mov         r3, #1
  00718	e58d3148	 str         r3, [sp, #0x148]
  0071c	ea000001	 b           |$LN11@BacklightU|
  00720		 |$LN10@BacklightU|
  00720	e3a03000	 mov         r3, #0
  00724	e58d3148	 str         r3, [sp, #0x148]
  00728		 |$LN11@BacklightU|

; 291  :     retCode = RegOpenKeyEx (HKEY_CURRENT_USER, BACKLIGHT_REGKEY, 0, KEY_ALL_ACCESS, &hKey);

  00728	e28d300c	 add         r3, sp, #0xC
  0072c	e58d3000	 str         r3, [sp]
  00730	e3a0380f	 mov         r3, #0xF, 16
  00734	e383303f	 orr         r3, r3, #0x3F
  00738	e3a02000	 mov         r2, #0
  0073c	e59f1208	 ldr         r1, [pc, #0x208]
  00740	e3a00106	 mov         r0, #6, 2
  00744	eb000000	 bl          RegOpenKeyExW
  00748	e58d014c	 str         r0, [sp, #0x14C]
  0074c	e59d314c	 ldr         r3, [sp, #0x14C]
  00750	e58d3014	 str         r3, [sp, #0x14]

; 292  :     if (retCode == ERROR_SUCCESS)

  00754	e59d3014	 ldr         r3, [sp, #0x14]
  00758	e3530000	 cmp         r3, #0
  0075c	1a00005f	 bne         |$LN7@BacklightU|

; 293  :     {
; 294  :         //Battery Tap
; 295  :         dwType=REG_DWORD;

  00760	e3a03004	 mov         r3, #4
  00764	e58d3008	 str         r3, [sp, #8]

; 296  :         cbData = MAX_PATH;

  00768	e3a03f41	 mov         r3, #0x41, 30
  0076c	e58d311c	 str         r3, [sp, #0x11C]

; 297  :         retCode = RegQueryValueEx(hKey, TEXT("BacklightOnTap"), NULL, &dwType, (LPBYTE) bData, (LPDWORD)&cbData);

  00770	e28d3f47	 add         r3, sp, #0x47, 30
  00774	e58d3004	 str         r3, [sp, #4]
  00778	e59d3010	 ldr         r3, [sp, #0x10]
  0077c	e58d3000	 str         r3, [sp]
  00780	e28d3008	 add         r3, sp, #8
  00784	e3a02000	 mov         r2, #0
  00788	e59f11b8	 ldr         r1, [pc, #0x1B8]
  0078c	e59d000c	 ldr         r0, [sp, #0xC]
  00790	eb000000	 bl          RegQueryValueExW
  00794	e58d0150	 str         r0, [sp, #0x150]
  00798	e59d3150	 ldr         r3, [sp, #0x150]
  0079c	e58d3014	 str         r3, [sp, #0x14]

; 298  :         if (retCode == ERROR_SUCCESS)

  007a0	e59d3014	 ldr         r3, [sp, #0x14]
  007a4	e3530000	 cmp         r3, #0
  007a8	1a000004	 bne         |$LN6@BacklightU|

; 299  :         {
; 300  :             pBKLinfo->fBatteryTapOn = (*(DWORD *)bData );

  007ac	e59d316c	 ldr         r3, [sp, #0x16C]
  007b0	e2832c02	 add         r2, r3, #2, 24
  007b4	e59d3010	 ldr         r3, [sp, #0x10]
  007b8	e5933000	 ldr         r3, [r3]
  007bc	e5823000	 str         r3, [r2]
  007c0		 |$LN6@BacklightU|

; 301  :         }
; 302  :         //External Tap
; 303  :         dwType=REG_DWORD;

  007c0	e3a03004	 mov         r3, #4
  007c4	e58d3008	 str         r3, [sp, #8]

; 304  :         cbData = MAX_PATH;

  007c8	e3a03f41	 mov         r3, #0x41, 30
  007cc	e58d311c	 str         r3, [sp, #0x11C]

; 305  :         retCode = RegQueryValueEx(hKey, TEXT("ACBacklightOnTap"), NULL, &dwType, (LPBYTE) bData, (LPDWORD)&cbData);

  007d0	e28d3f47	 add         r3, sp, #0x47, 30
  007d4	e58d3004	 str         r3, [sp, #4]
  007d8	e59d3010	 ldr         r3, [sp, #0x10]
  007dc	e58d3000	 str         r3, [sp]
  007e0	e28d3008	 add         r3, sp, #8
  007e4	e3a02000	 mov         r2, #0
  007e8	e59f1154	 ldr         r1, [pc, #0x154]
  007ec	e59d000c	 ldr         r0, [sp, #0xC]
  007f0	eb000000	 bl          RegQueryValueExW
  007f4	e58d0154	 str         r0, [sp, #0x154]
  007f8	e59d3154	 ldr         r3, [sp, #0x154]
  007fc	e58d3014	 str         r3, [sp, #0x14]

; 306  :         if (retCode == ERROR_SUCCESS)

  00800	e59d3014	 ldr         r3, [sp, #0x14]
  00804	e3530000	 cmp         r3, #0
  00808	1a000004	 bne         |$LN5@BacklightU|

; 307  :         {
; 308  :             pBKLinfo->fExternalTapOn = (*(DWORD *)bData );

  0080c	e59d316c	 ldr         r3, [sp, #0x16C]
  00810	e2832f81	 add         r2, r3, #0x81, 30
  00814	e59d3010	 ldr         r3, [sp, #0x10]
  00818	e5933000	 ldr         r3, [r3]
  0081c	e5823000	 str         r3, [r2]
  00820		 |$LN5@BacklightU|

; 309  :         }
; 310  :         //Backlight on battery timeout (we may need to turn the backlight off)
; 311  :         dwType=REG_DWORD;

  00820	e3a03004	 mov         r3, #4
  00824	e58d3008	 str         r3, [sp, #8]

; 312  :         cbData = MAX_PATH;

  00828	e3a03f41	 mov         r3, #0x41, 30
  0082c	e58d311c	 str         r3, [sp, #0x11C]

; 313  :         retCode = RegQueryValueEx(hKey, TEXT("BatteryTimeout"), NULL, &dwType, (LPBYTE) bData, (LPDWORD)&cbData);

  00830	e28d3f47	 add         r3, sp, #0x47, 30
  00834	e58d3004	 str         r3, [sp, #4]
  00838	e59d3010	 ldr         r3, [sp, #0x10]
  0083c	e58d3000	 str         r3, [sp]
  00840	e28d3008	 add         r3, sp, #8
  00844	e3a02000	 mov         r2, #0
  00848	e59f10f0	 ldr         r1, [pc, #0xF0]
  0084c	e59d000c	 ldr         r0, [sp, #0xC]
  00850	eb000000	 bl          RegQueryValueExW
  00854	e58d0158	 str         r0, [sp, #0x158]
  00858	e59d3158	 ldr         r3, [sp, #0x158]
  0085c	e58d3014	 str         r3, [sp, #0x14]

; 314  :         if (retCode == ERROR_SUCCESS)

  00860	e59d3014	 ldr         r3, [sp, #0x14]
  00864	e3530000	 cmp         r3, #0
  00868	1a000004	 bne         |$LN4@BacklightU|

; 315  :         {
; 316  :             pBKLinfo->dwBattTimeout = (*(DWORD *)bData );

  0086c	e59d316c	 ldr         r3, [sp, #0x16C]
  00870	e2832f82	 add         r2, r3, #0x82, 30
  00874	e59d3010	 ldr         r3, [sp, #0x10]
  00878	e5933000	 ldr         r3, [r3]
  0087c	e5823000	 str         r3, [r2]
  00880		 |$LN4@BacklightU|

; 317  :         }
; 318  :         //Backlight on AC timeout
; 319  :         dwType=REG_DWORD;

  00880	e3a03004	 mov         r3, #4
  00884	e58d3008	 str         r3, [sp, #8]

; 320  :         cbData = MAX_PATH;        

  00888	e3a03f41	 mov         r3, #0x41, 30
  0088c	e58d311c	 str         r3, [sp, #0x11C]

; 321  :         retCode = RegQueryValueEx(hKey, TEXT("ACTimeout"), NULL, &dwType, (LPBYTE) bData, (LPDWORD)&cbData);

  00890	e28d3f47	 add         r3, sp, #0x47, 30
  00894	e58d3004	 str         r3, [sp, #4]
  00898	e59d3010	 ldr         r3, [sp, #0x10]
  0089c	e58d3000	 str         r3, [sp]
  008a0	e28d3008	 add         r3, sp, #8
  008a4	e3a02000	 mov         r2, #0
  008a8	e59f108c	 ldr         r1, [pc, #0x8C]
  008ac	e59d000c	 ldr         r0, [sp, #0xC]
  008b0	eb000000	 bl          RegQueryValueExW
  008b4	e58d015c	 str         r0, [sp, #0x15C]
  008b8	e59d315c	 ldr         r3, [sp, #0x15C]
  008bc	e58d3014	 str         r3, [sp, #0x14]

; 322  :         if (retCode == ERROR_SUCCESS)

  008c0	e59d3014	 ldr         r3, [sp, #0x14]
  008c4	e3530000	 cmp         r3, #0
  008c8	1a000004	 bne         |$LN3@BacklightU|

; 323  :         {
; 324  :             pBKLinfo->dwACTimeout = (*(DWORD *)bData );

  008cc	e59d316c	 ldr         r3, [sp, #0x16C]
  008d0	e2832f83	 add         r2, r3, #0x83, 30
  008d4	e59d3010	 ldr         r3, [sp, #0x10]
  008d8	e5933000	 ldr         r3, [r3]
  008dc	e5823000	 str         r3, [r2]
  008e0		 |$LN3@BacklightU|
  008e0		 |$LN7@BacklightU|
  008e0		 |$exit$32378|

; 325  :         }
; 326  :         
; 327  :     }
; 328  : 
; 329  :     goto exit;
; 330  :     
; 331  : exit:
; 332  :     if(hKey)

  008e0	e59d300c	 ldr         r3, [sp, #0xC]
  008e4	e3530000	 cmp         r3, #0
  008e8	0a000001	 beq         |$LN1@BacklightU|

; 333  :     {
; 334  :         RegCloseKey(hKey);

  008ec	e59d000c	 ldr         r0, [sp, #0xC]
  008f0	eb000000	 bl          RegCloseKey
  008f4		 |$LN1@BacklightU|

; 335  :     }
; 336  : 
; 337  :     DEBUGMSG(ZONE_BACKLIGHT,(TEXT("-BacklightReadMDDReg\r\n")));

  008f4	e59f303c	 ldr         r3, [pc, #0x3C]
  008f8	e5933440	 ldr         r3, [r3, #0x440]
  008fc	e3130001	 tst         r3, #1
  00900	0a000004	 beq         |$LN12@BacklightU|
  00904	e59f0028	 ldr         r0, [pc, #0x28]
  00908	eb000000	 bl          NKDbgPrintfW
  0090c	e3a03001	 mov         r3, #1
  00910	e58d3160	 str         r3, [sp, #0x160]
  00914	ea000001	 b           |$LN13@BacklightU|
  00918		 |$LN12@BacklightU|
  00918	e3a03000	 mov         r3, #0
  0091c	e58d3160	 str         r3, [sp, #0x160]
  00920		 |$LN13@BacklightU|

; 282  : {

  00920	e59d0120	 ldr         r0, [sp, #0x120]
  00924	eb000000	 bl          __security_check_cookie

; 338  :     
; 339  : }

  00928	e28ddf59	 add         sp, sp, #0x59, 30
  0092c	e89d6000	 ldmia       sp, {sp, lr}
  00930	e12fff1e	 bx          lr
  00934		 |$LN17@BacklightU|
  00934		 |$LN18@BacklightU|
  00934	00000000	 DCD         |??_C@_1CO@OBGOCLFP@?$AA?9?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAR?$AAe?$AAa?$AAd?$AAM?$AAD?$AAD?$AAR?$AAe?$AAg?$AA?$AN?$AA?6?$AA?$AA@|
  00938		 |$LN19@BacklightU|
  00938	00000000	 DCD         |dpCurSettings|
  0093c		 |$LN20@BacklightU|
  0093c	00000000	 DCD         |??_C@_1BE@PJBHBNNG@?$AAA?$AAC?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00940		 |$LN21@BacklightU|
  00940	00000000	 DCD         |??_C@_1BO@PELGLPFE@?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00944		 |$LN22@BacklightU|
  00944	00000000	 DCD         |??_C@_1CC@FKEHPNLB@?$AAA?$AAC?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAO?$AAn?$AAT?$AAa?$AAp?$AA?$AA@|
  00948		 |$LN23@BacklightU|
  00948	00000000	 DCD         |??_C@_1BO@BFBCCLIP@?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAO?$AAn?$AAT?$AAa?$AAp?$AA?$AA@|
  0094c		 |$LN24@BacklightU|
  0094c	00000000	 DCD         |??_C@_1CO@MGKPHPG@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?2?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?$AA@|
  00950		 |$LN25@BacklightU|
  00950	00000000	 DCD         |??_C@_1CO@DKKKHEHE@?$AA?$CL?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAR?$AAe?$AAa?$AAd?$AAM?$AAD?$AAD?$AAR?$AAe?$AAg?$AA?$AN?$AA?6?$AA?$AA@|
  00954		 |$LN26@BacklightU|
  00954	00000000	 DCD         |__security_cookie|
  00958		 |$M32687|

			 ENDP  ; |?BacklightUpdateMDDRegSettings@@YAXPAUBKL_MDD_INFO@@@Z|, BacklightUpdateMDDRegSettings

	EXPORT	|?BKL_SetDevicePower@@YAXPAUBKL_MDD_INFO@@W4_CEDEVICE_POWER_STATE@@@Z| ; BKL_SetDevicePower
	IMPORT	|SetDevicePower|

  00038			 AREA	 |.pdata|, PDATA
|$T32704| DCD	|$LN5@BKL_SetDev|
	DCD	0x40000903
; Function compile flags: /Odtp

  00958			 AREA	 |.text|, CODE, ARM

  00958		 |?BKL_SetDevicePower@@YAXPAUBKL_MDD_INFO@@W4_CEDEVICE_POWER_STATE@@@Z| PROC ; BKL_SetDevicePower

; 347  : {

  00958		 |$LN5@BKL_SetDev|
  00958	e1a0c00d	 mov         r12, sp
  0095c	e92d0003	 stmdb       sp!, {r0, r1}
  00960	e92d5000	 stmdb       sp!, {r12, lr}
  00964		 |$M32701|

; 348  :     SetDevicePower(pBKLinfo->szName, POWER_NAME, bklPowerState);

  00964	e59d200c	 ldr         r2, [sp, #0xC]
  00968	e3a01001	 mov         r1, #1
  0096c	e59d0008	 ldr         r0, [sp, #8]
  00970	eb000000	 bl          SetDevicePower

; 349  :     
; 350  :     return;
; 351  : }

  00974	e89d6000	 ldmia       sp, {sp, lr}
  00978	e12fff1e	 bx          lr
  0097c		 |$M32702|

			 ENDP  ; |?BKL_SetDevicePower@@YAXPAUBKL_MDD_INFO@@W4_CEDEVICE_POWER_STATE@@@Z|, BKL_SetDevicePower

	EXPORT	|?UpdateBacklight@@YAXPAUBKL_MDD_INFO@@K@Z| ; UpdateBacklight

  00040			 AREA	 |.pdata|, PDATA
|$T32717| DCD	|$LN20@UpdateBack|
	DCD	0x40006004
; Function compile flags: /Odtp

  0097c			 AREA	 |.text|, CODE, ARM

  0097c		 |?UpdateBacklight@@YAXPAUBKL_MDD_INFO@@K@Z| PROC ; UpdateBacklight

; 358  : {

  0097c		 |$LN20@UpdateBack|
  0097c	e1a0c00d	 mov         r12, sp
  00980	e92d0003	 stmdb       sp!, {r0, r1}
  00984	e92d5000	 stmdb       sp!, {r12, lr}
  00988	e24dd034	 sub         sp, sp, #0x34
  0098c		 |$M32714|

; 359  :     BOOL    fTapOnPrev, fTapOnNew;
; 360  :     DWORD   dwTimeoutPrev, dwTimeoutNew;
; 361  :     BOOL    fSetPowerOff = FALSE;

  0098c	e3a03000	 mov         r3, #0
  00990	e58d3000	 str         r3, [sp]

; 362  :     BOOL    fReleasePwrOff = FALSE;

  00994	e3a03000	 mov         r3, #0
  00998	e58d3014	 str         r3, [sp, #0x14]

; 363  :     
; 364  :     fTapOnPrev = IsTapOn(pBKLinfo);

  0099c	e59d003c	 ldr         r0, [sp, #0x3C]
  009a0	eb000000	 bl          |?IsTapOn@@YAHPAUBKL_MDD_INFO@@@Z|
  009a4	e58d0018	 str         r0, [sp, #0x18]
  009a8	e59d3018	 ldr         r3, [sp, #0x18]
  009ac	e58d3004	 str         r3, [sp, #4]

; 365  :     dwTimeoutPrev = GetTimeout(pBKLinfo);

  009b0	e59d003c	 ldr         r0, [sp, #0x3C]
  009b4	eb000000	 bl          |?GetTimeout@@YAKPAUBKL_MDD_INFO@@@Z|
  009b8	e58d001c	 str         r0, [sp, #0x1C]
  009bc	e59d301c	 ldr         r3, [sp, #0x1C]
  009c0	e58d3010	 str         r3, [sp, #0x10]

; 366  : 
; 367  :     switch(dwReason)

  009c4	e59d3040	 ldr         r3, [sp, #0x40]
  009c8	e58d3020	 str         r3, [sp, #0x20]
  009cc	e59d3020	 ldr         r3, [sp, #0x20]
  009d0	e3530000	 cmp         r3, #0
  009d4	0a000003	 beq         |$LN5@UpdateBack|
  009d8	e59d3020	 ldr         r3, [sp, #0x20]
  009dc	e3530001	 cmp         r3, #1
  009e0	0a000003	 beq         |$LN4@UpdateBack|
  009e4	ea000004	 b           |$LN6@UpdateBack|
  009e8		 |$LN5@UpdateBack|

; 368  :     {
; 369  :         case BKL_EVENT_REG:
; 370  :             // Have registry keys changed?
; 371  :             BacklightUpdateMDDRegSettings(pBKLinfo);  

  009e8	e59d003c	 ldr         r0, [sp, #0x3C]
  009ec	eb000000	 bl          |?BacklightUpdateMDDRegSettings@@YAXPAUBKL_MDD_INFO@@@Z|

; 372  :             break;

  009f0	ea000001	 b           |$LN6@UpdateBack|
  009f4		 |$LN4@UpdateBack|

; 373  : 
; 374  :         case BKL_EVENT_POWER_MSG:
; 375  :             // AC Status changed?
; 376  :             UpdateACStatus(pBKLinfo);

  009f4	e59d003c	 ldr         r0, [sp, #0x3C]
  009f8	eb000000	 bl          |?UpdateACStatus@@YAXPAUBKL_MDD_INFO@@@Z|
  009fc		 |$LN6@UpdateBack|

; 377  :             break;
; 378  :     };
; 379  :     
; 380  :     dwTimeoutNew = GetTimeout(pBKLinfo);

  009fc	e59d003c	 ldr         r0, [sp, #0x3C]
  00a00	eb000000	 bl          |?GetTimeout@@YAKPAUBKL_MDD_INFO@@@Z|
  00a04	e58d0024	 str         r0, [sp, #0x24]
  00a08	e59d3024	 ldr         r3, [sp, #0x24]
  00a0c	e58d300c	 str         r3, [sp, #0xC]

; 381  :     fTapOnNew = IsTapOn(pBKLinfo);

  00a10	e59d003c	 ldr         r0, [sp, #0x3C]
  00a14	eb000000	 bl          |?IsTapOn@@YAHPAUBKL_MDD_INFO@@@Z|
  00a18	e58d0028	 str         r0, [sp, #0x28]
  00a1c	e59d3028	 ldr         r3, [sp, #0x28]
  00a20	e58d3008	 str         r3, [sp, #8]

; 382  :     
; 383  :     // 'Tap On' settings just unchecked or 'Turn off backlight' timer option just selected:
; 384  :     fSetPowerOff = ( ((dwTimeoutPrev != TURNOFFIMMEDIATELY) && (dwTimeoutNew == TURNOFFIMMEDIATELY)) \
; 385  :                     || ((fTapOnPrev && !fTapOnNew)));

  00a24	e59d3010	 ldr         r3, [sp, #0x10]
  00a28	e3730001	 cmn         r3, #1
  00a2c	0a000002	 beq         |$LN10@UpdateBack|
  00a30	e59d300c	 ldr         r3, [sp, #0xC]
  00a34	e3730001	 cmn         r3, #1
  00a38	0a000008	 beq         |$LN12@UpdateBack|
  00a3c		 |$LN10@UpdateBack|
  00a3c	e59d3004	 ldr         r3, [sp, #4]
  00a40	e3530000	 cmp         r3, #0
  00a44	0a000002	 beq         |$LN11@UpdateBack|
  00a48	e59d3008	 ldr         r3, [sp, #8]
  00a4c	e3530000	 cmp         r3, #0
  00a50	0a000002	 beq         |$LN12@UpdateBack|
  00a54		 |$LN11@UpdateBack|
  00a54	e3a03000	 mov         r3, #0
  00a58	e58d302c	 str         r3, [sp, #0x2C]
  00a5c	ea000001	 b           |$LN13@UpdateBack|
  00a60		 |$LN12@UpdateBack|
  00a60	e3a03001	 mov         r3, #1
  00a64	e58d302c	 str         r3, [sp, #0x2C]
  00a68		 |$LN13@UpdateBack|
  00a68	e59d302c	 ldr         r3, [sp, #0x2C]
  00a6c	e58d3000	 str         r3, [sp]

; 386  :     // 'Tap On' setting just checked or 'Turn off backlight' timer option just deselected:
; 387  :     fReleasePwrOff = (((dwTimeoutPrev == TURNOFFIMMEDIATELY) && (dwTimeoutNew != TURNOFFIMMEDIATELY) ) \
; 388  :                     || (!fTapOnPrev && fTapOnNew));

  00a70	e59d3010	 ldr         r3, [sp, #0x10]
  00a74	e3730001	 cmn         r3, #1
  00a78	1a000002	 bne         |$LN14@UpdateBack|
  00a7c	e59d300c	 ldr         r3, [sp, #0xC]
  00a80	e3730001	 cmn         r3, #1
  00a84	1a000008	 bne         |$LN16@UpdateBack|
  00a88		 |$LN14@UpdateBack|
  00a88	e59d3004	 ldr         r3, [sp, #4]
  00a8c	e3530000	 cmp         r3, #0
  00a90	1a000002	 bne         |$LN15@UpdateBack|
  00a94	e59d3008	 ldr         r3, [sp, #8]
  00a98	e3530000	 cmp         r3, #0
  00a9c	1a000002	 bne         |$LN16@UpdateBack|
  00aa0		 |$LN15@UpdateBack|
  00aa0	e3a03000	 mov         r3, #0
  00aa4	e58d3030	 str         r3, [sp, #0x30]
  00aa8	ea000001	 b           |$LN17@UpdateBack|
  00aac		 |$LN16@UpdateBack|
  00aac	e3a03001	 mov         r3, #1
  00ab0	e58d3030	 str         r3, [sp, #0x30]
  00ab4		 |$LN17@UpdateBack|
  00ab4	e59d3030	 ldr         r3, [sp, #0x30]
  00ab8	e58d3014	 str         r3, [sp, #0x14]

; 389  :     
; 390  :     if(fSetPowerOff)   

  00abc	e59d3000	 ldr         r3, [sp]
  00ac0	e3530000	 cmp         r3, #0
  00ac4	0a000003	 beq         |$LN3@UpdateBack|

; 391  :     {
; 392  :         BKL_SetDevicePower(pBKLinfo, D4);

  00ac8	e3a01004	 mov         r1, #4
  00acc	e59d003c	 ldr         r0, [sp, #0x3C]
  00ad0	eb000000	 bl          |?BKL_SetDevicePower@@YAXPAUBKL_MDD_INFO@@W4_CEDEVICE_POWER_STATE@@@Z|
  00ad4	ea000005	 b           |$LN2@UpdateBack|
  00ad8		 |$LN3@UpdateBack|

; 393  :     }
; 394  :     else if (fReleasePwrOff) 

  00ad8	e59d3014	 ldr         r3, [sp, #0x14]
  00adc	e3530000	 cmp         r3, #0
  00ae0	0a000002	 beq         |$LN1@UpdateBack|

; 395  :     {
; 396  :         BKL_SetDevicePower(pBKLinfo, PwrDeviceUnspecified);

  00ae4	e3e01000	 mvn         r1, #0
  00ae8	e59d003c	 ldr         r0, [sp, #0x3C]
  00aec	eb000000	 bl          |?BKL_SetDevicePower@@YAXPAUBKL_MDD_INFO@@W4_CEDEVICE_POWER_STATE@@@Z|
  00af0		 |$LN1@UpdateBack|
  00af0		 |$LN2@UpdateBack|

; 397  :     }
; 398  :     
; 399  : 
; 400  : }

  00af0	e28dd034	 add         sp, sp, #0x34
  00af4	e89d6000	 ldmia       sp, {sp, lr}
  00af8	e12fff1e	 bx          lr
  00afc		 |$M32715|

			 ENDP  ; |?UpdateBacklight@@YAXPAUBKL_MDD_INFO@@K@Z|, UpdateBacklight

	EXPORT	|??_C@_1DA@CKFCKDMJ@?$AA?9?$AAf?$AAn?$AAB?$AAa?$AAc?$AAk?$AAL?$AAi?$AAg?$AAh?$AAt?$AAR?$AAe?$AAg?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@OIDDBANN@?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@HCPFCFLF@?$AAi?$AAn?$AAs?$AAu?$AAf?$AAf?$AAi?$AAc?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAm@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@OGOCCJBK@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAb?$AAN?$AAa?$AAm?$AAe?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@EOAKILLC@?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@CMJAPHJD@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@CIILKELH@?$AAt?$AAo?$AA?5?$AAB?$AAa?$AAt?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@DHFJJAKK@?$AAt?$AAo?$AA?5?$AAA?$AAC?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@GDMLEGHK@?$AAR?$AAe?$AAa?$AAd?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@MGINNJGG@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5?$AAt?$AAo?$AA?1?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAA?$AAC?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@EMEKIGIE@?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?5?$AAm?$AAd?$AAd?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@JDOEDDAC@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAC?$AAe?$AAF?$AAi?$AAn?$AAd?$AAF?$AAi?$AAr?$AAs?$AAt?$AAR?$AAe?$AAg?$AAC?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@KAELLKGO@?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@GJDAPONO@?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AA?5?$AAP?$AAM?$AAC?$AAL?$AAA?$AAS?$AAS?$AA_?$AAD?$AAI?$AAS?$AAP?$AAL?$AAA?$AAY?$AA?5?$AAs?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@BHDHHEGO@?$AA?$HL?$AAE?$AAB?$AA9?$AA1?$AAC?$AA7?$AAC?$AA9?$AA?9?$AA8?$AAB?$AAF?$AA6?$AA?9?$AA4?$AAa?$AA2?$AAd?$AA?9?$AA9?$AAA?$AAB?$AA8?$AA?9?$AA6?$AA9?$AA7?$AA2?$AA4?$AAE?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@PLLMHJCJ@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@ICCAJICH@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?5?$AAq?$AAu?$AAe?$AAu?$AAe?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@KPCFIBGF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@KHPGMJAB@?$AA?$CL?$AAf?$AAn?$AAB?$AAa?$AAc?$AAk?$AAL?$AAi?$AAg?$AAh?$AAt?$AAR?$AAe?$AAg?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|?fnBackLightThread@@YAKPAX@Z|		; fnBackLightThread
	IMPORT	|CeFindCloseRegChange|
	IMPORT	|StopDeviceNotifications|
	IMPORT	|CloseMsgQueue|
	IMPORT	|StopPowerNotifications|
	IMPORT	|memcpy|
	IMPORT	|?g_pBacklight@@3PAVCBacklightRoot@@A|	; g_pBacklight
	IMPORT	|ReadMsgQueue|
	IMPORT	|CeFindNextRegChange|
	IMPORT	|WaitForMultipleObjects|
	IMPORT	|CeFindFirstRegChange|
	IMPORT	|RequestDeviceNotifications|
	IMPORT	|RequestPowerNotifications|
	IMPORT	|CreateMsgQueue|
	IMPORT	|memset|

  00048			 AREA	 |.pdata|, PDATA
|$T32780| DCD	|$LN94@fnBackLigh|
	DCD	0xc0024e04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@CKFCKDMJ@?$AA?9?$AAf?$AAn?$AAB?$AAa?$AAc?$AAk?$AAL?$AAi?$AAg?$AAh?$AAt?$AAR?$AAe?$AAg?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "f", 0x0, "n", 0x0, "B", 0x0, "a", 0x0, "c", 0x0, "k"
	DCB	0x0, "L", 0x0, "i", 0x0, "g", 0x0, "h", 0x0, "t", 0x0, "R"
	DCB	0x0, "e", 0x0, "g", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@OIDDBANN@?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "l", 0x0, "i", 0x0, "g"
	DCB	0x0, "h", 0x0, "t", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@HCPFCFLF@?$AAi?$AAn?$AAs?$AAu?$AAf?$AAf?$AAi?$AAc?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAm@| DCB "i"
	DCB	0x0, "n", 0x0, "s", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "i"
	DCB	0x0, "c", 0x0, "i", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "d"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "m", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, "a", 0x0, "g"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@OGOCCJBK@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAb?$AAN?$AAa?$AAm?$AAe?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "c", 0x0, "b", 0x0, "N", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, " ", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "u"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@EOAKILLC@?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc@| DCB "D"
	DCB	0x0, "i", 0x0, "s", 0x0, "p", 0x0, "l", 0x0, "a", 0x0, "y"
	DCB	0x0, " ", 0x0, "d", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "f", 0x0, "a", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "n", 0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@CMJAPHJD@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, " "
	DCB	0x0, "c", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "g", 0x0, "e"
	DCB	0x0, " ", 0x0, "%", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@CIILKELH@?$AAt?$AAo?$AA?5?$AAB?$AAa?$AAt?$AAt?$AA?$AA@| DCB "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "B", 0x0, "a", 0x0, "t", 0x0, "t"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@DHFJJAKK@?$AAt?$AAo?$AA?5?$AAA?$AAC?$AA?$AA@| DCB "t", 0x0, "o", 0x0
	DCB	" ", 0x0, "A", 0x0, "C", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@GDMLEGHK@?$AAR?$AAe?$AAa?$AAd?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, "M", 0x0, "s", 0x0, "g"
	DCB	0x0, "Q", 0x0, "u", 0x0, "e", 0x0, "u", 0x0, "e", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@MGINNJGG@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5?$AAt?$AAo?$AA?1?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAA?$AAC?$AA?$AN?$AA?6@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, " "
	DCB	0x0, "c", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "g", 0x0, "e"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, "/", 0x0, "f", 0x0, "r"
	DCB	0x0, "o", 0x0, "m", 0x0, " ", 0x0, "A", 0x0, "C", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@EMEKIGIE@?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?5?$AAm?$AAd?$AAd?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "l", 0x0, "i", 0x0, "g"
	DCB	0x0, "h", 0x0, "t", 0x0, " ", 0x0, "m", 0x0, "d", 0x0, "d"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "c", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "g", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@JDOEDDAC@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAC?$AAe?$AAF?$AAi?$AAn?$AAd?$AAF?$AAi?$AAr?$AAs?$AAt?$AAR?$AAe?$AAg?$AAC?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd@| DCB "B"
	DCB	0x0, "K", 0x0, "L", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "e"
	DCB	0x0, "F", 0x0, "i", 0x0, "n", 0x0, "d", 0x0, "F", 0x0, "i"
	DCB	0x0, "r", 0x0, "s", 0x0, "t", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "C", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "g", 0x0, "e"
	DCB	0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@KAELLKGO@?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe@| DCB "R"
	DCB	0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "N", 0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, "s", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@GJDAPONO@?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AA?5?$AAP?$AAM?$AAC?$AAL?$AAA?$AAS?$AAS?$AA_?$AAD?$AAI?$AAS?$AAP?$AAL?$AAA?$AAY?$AA?5?$AAs?$AAt@| DCB "c"
	DCB	0x0, "a", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "n", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, "t"
	DCB	0x0, " ", 0x0, "P", 0x0, "M", 0x0, "C", 0x0, "L", 0x0, "A"
	DCB	0x0, "S", 0x0, "S", 0x0, "_", 0x0, "D", 0x0, "I", 0x0, "S"
	DCB	0x0, "P", 0x0, "L", 0x0, "A", 0x0, "Y", 0x0, " ", 0x0, "s"
	DCB	0x0, "t", 0x0, "r", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "G", 0x0, "U", 0x0, "I"
	DCB	0x0, "D", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@BHDHHEGO@?$AA?$HL?$AAE?$AAB?$AA9?$AA1?$AAC?$AA7?$AAC?$AA9?$AA?9?$AA8?$AAB?$AAF?$AA6?$AA?9?$AA4?$AAa?$AA2?$AAd?$AA?9?$AA9?$AAA?$AAB?$AA8?$AA?9?$AA6?$AA9?$AA7?$AA2?$AA4?$AAE?$AAE@| DCB "{"
	DCB	0x0, "E", 0x0, "B", 0x0, "9", 0x0, "1", 0x0, "C", 0x0, "7"
	DCB	0x0, "C", 0x0, "9", 0x0, "-", 0x0, "8", 0x0, "B", 0x0, "F"
	DCB	0x0, "6", 0x0, "-", 0x0, "4", 0x0, "a", 0x0, "2", 0x0, "d"
	DCB	0x0, "-", 0x0, "9", 0x0, "A", 0x0, "B", 0x0, "8", 0x0, "-"
	DCB	0x0, "6", 0x0, "9", 0x0, "7", 0x0, "2", 0x0, "4", 0x0, "E"
	DCB	0x0, "E", 0x0, "D", 0x0, "9", 0x0, "7", 0x0, "D", 0x0, "1"
	DCB	0x0, "}", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@PLLMHJCJ@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn@| DCB "B"
	DCB	0x0, "K", 0x0, "L", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "p", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f"
	DCB	0x0, "i", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@ICCAJICH@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?5?$AAq?$AAu?$AAe?$AAu?$AAe?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd@| DCB "B"
	DCB	0x0, "K", 0x0, "L", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "m"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "a", 0x0, "g", 0x0, "e"
	DCB	0x0, " ", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "u", 0x0, "e"
	DCB	0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@KPCFIBGF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "a", 0x0, "c", 0x0, "k", 0x0, "l", 0x0, "i"
	DCB	0x0, "g", 0x0, "h", 0x0, "t", 0x0, "T", 0x0, "h", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "p"
	DCB	0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "r"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@KHPGMJAB@?$AA?$CL?$AAf?$AAn?$AAB?$AAa?$AAc?$AAk?$AAL?$AAi?$AAg?$AAh?$AAt?$AAR?$AAe?$AAg?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "f", 0x0, "n", 0x0, "B", 0x0, "a", 0x0, "c", 0x0, "k"
	DCB	0x0, "L", 0x0, "i", 0x0, "g", 0x0, "h", 0x0, "t", 0x0, "R"
	DCB	0x0, "e", 0x0, "g", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00018			 AREA	 |.xdata|, DATA
|$T32776| DCD	0xffffff54
; Function compile flags: /Odtp

  00afc			 AREA	 |.text|, CODE, ARM

  00afc	00000000	 DCD         |__GSHandlerCheck|
  00b00	00000000	 DCD         |$T32776|

  00b04		 |?fnBackLightThread@@YAKPAX@Z| PROC	; fnBackLightThread

; 408  : { 

  00b04		 |$LN94@fnBackLigh|
  00b04	e1a0c00d	 mov         r12, sp
  00b08	e92d0001	 stmdb       sp!, {r0}
  00b0c	e92d5000	 stmdb       sp!, {r12, lr}
  00b10	e24ddf8e	 sub         sp, sp, #0x8E, 30
  00b14		 |$M32777|
  00b14	e59f391c	 ldr         r3, [pc, #0x91C]
  00b18	e5933000	 ldr         r3, [r3]
  00b1c	e58d3198	 str         r3, [sp, #0x198]

; 409  :     DWORD    dwResult;
; 410  :     MSGQUEUEOPTIONS msgopts;
; 411  :     HANDLE  hPwrNotification = NULL;

  00b20	e3a03000	 mov         r3, #0
  00b24	e58d3060	 str         r3, [sp, #0x60]

; 412  :     HANDLE  hPowerNotificationMsgs = NULL;    

  00b28	e3a03000	 mov         r3, #0
  00b2c	e58d304c	 str         r3, [sp, #0x4C]

; 413  :     HKEY    hKey = NULL;

  00b30	e3a03000	 mov         r3, #0
  00b34	e58d301c	 str         r3, [sp, #0x1C]

; 414  :     HANDLE  WaitEvents[BKL_NUM_EVENTS];    
; 415  :     HANDLE  hEventRegistryChange = NULL;

  00b38	e3a03000	 mov         r3, #0
  00b3c	e58d305c	 str         r3, [sp, #0x5C]

; 416  :     DWORD   dwSize;    
; 417  :     DWORD   dwFlags;
; 418  :     HANDLE  hDisplayNotifications = NULL;

  00b40	e3a03000	 mov         r3, #0
  00b44	e58d3048	 str         r3, [sp, #0x48]

; 419  :     HANDLE  hDisplayNotificationMsgs = NULL;

  00b48	e3a03000	 mov         r3, #0
  00b4c	e58d3050	 str         r3, [sp, #0x50]

; 420  :     GUID    idInterface;
; 421  :     BKL_MDD_INFO *pBKLinfo = NULL;

  00b50	e3a03000	 mov         r3, #0
  00b54	e58d3044	 str         r3, [sp, #0x44]

; 422  :     
; 423  :     DEBUGMSG(ZONE_BACKLIGHT,(TEXT("+fnBackLightRegThread\r\n")));

  00b58	e59f3878	 ldr         r3, [pc, #0x878]
  00b5c	e5933440	 ldr         r3, [r3, #0x440]
  00b60	e3130001	 tst         r3, #1
  00b64	0a000004	 beq         |$LN42@fnBackLigh|
  00b68	e59f08c4	 ldr         r0, [pc, #0x8C4]
  00b6c	eb000000	 bl          NKDbgPrintfW
  00b70	e3a03001	 mov         r3, #1
  00b74	e58d31b4	 str         r3, [sp, #0x1B4]
  00b78	ea000001	 b           |$LN43@fnBackLigh|
  00b7c		 |$LN42@fnBackLigh|
  00b7c	e3a03000	 mov         r3, #0
  00b80	e58d31b4	 str         r3, [sp, #0x1B4]
  00b84		 |$LN43@fnBackLigh|

; 424  : 
; 425  :     // Verify context
; 426  :     if(! pvArgument)

  00b84	e59d3240	 ldr         r3, [sp, #0x240]
  00b88	e3530000	 cmp         r3, #0
  00b8c	1a00000f	 bne         |$LN39@fnBackLigh|

; 427  :     {
; 428  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: BacklightThread: "
; 429  :             L"Incorrect context paramer\r\n" ));

  00b90	e59f3840	 ldr         r3, [pc, #0x840]
  00b94	e5933440	 ldr         r3, [r3, #0x440]
  00b98	e3130001	 tst         r3, #1
  00b9c	0a000004	 beq         |$LN44@fnBackLigh|
  00ba0	e59f0888	 ldr         r0, [pc, #0x888]
  00ba4	eb000000	 bl          NKDbgPrintfW
  00ba8	e3a03001	 mov         r3, #1
  00bac	e58d31b8	 str         r3, [sp, #0x1B8]
  00bb0	ea000001	 b           |$LN45@fnBackLigh|
  00bb4		 |$LN44@fnBackLigh|
  00bb4	e3a03000	 mov         r3, #0
  00bb8	e58d31b8	 str         r3, [sp, #0x1B8]
  00bbc		 |$LN45@fnBackLigh|

; 430  : 
; 431  :         return FALSE;

  00bbc	e59d0198	 ldr         r0, [sp, #0x198]
  00bc0	eb000000	 bl          __security_check_cookie
  00bc4	e3a03000	 mov         r3, #0
  00bc8	e58d319c	 str         r3, [sp, #0x19C]
  00bcc	ea0001fc	 b           |$LN40@fnBackLigh|
  00bd0		 |$LN39@fnBackLigh|

; 432  :     }
; 433  : 
; 434  :     pBKLinfo = (BKL_MDD_INFO*) pvArgument;

  00bd0	e59d3240	 ldr         r3, [sp, #0x240]
  00bd4	e58d3044	 str         r3, [sp, #0x44]

; 435  : 
; 436  : 
; 437  :     // create msg queue for power status change notification (AC->Battery and vice versa)
; 438  :     memset(&msgopts, 0, sizeof(msgopts));

  00bd8	e3a02014	 mov         r2, #0x14
  00bdc	e3a01000	 mov         r1, #0
  00be0	e28d0020	 add         r0, sp, #0x20
  00be4	eb000000	 bl          memset

; 439  :     msgopts.dwSize = sizeof(msgopts);

  00be8	e3a03014	 mov         r3, #0x14
  00bec	e58d3020	 str         r3, [sp, #0x20]

; 440  :     msgopts.dwFlags = 0;

  00bf0	e3a03000	 mov         r3, #0
  00bf4	e58d3024	 str         r3, [sp, #0x24]

; 441  :     msgopts.dwMaxMessages = 0;                  // no max number of messages

  00bf8	e3a03000	 mov         r3, #0
  00bfc	e58d3028	 str         r3, [sp, #0x28]

; 442  :     msgopts.cbMaxMessage = sizeof(POWER_BROADCAST);   // max size of each msg

  00c00	e3a03010	 mov         r3, #0x10
  00c04	e58d302c	 str         r3, [sp, #0x2C]

; 443  :     msgopts.bReadAccess = TRUE;

  00c08	e3a03001	 mov         r3, #1
  00c0c	e58d3030	 str         r3, [sp, #0x30]

; 444  :     hPowerNotificationMsgs = CreateMsgQueue(NULL, &msgopts);

  00c10	e28d1020	 add         r1, sp, #0x20
  00c14	e3a00000	 mov         r0, #0
  00c18	eb000000	 bl          CreateMsgQueue
  00c1c	e58d01bc	 str         r0, [sp, #0x1BC]
  00c20	e59d31bc	 ldr         r3, [sp, #0x1BC]
  00c24	e58d304c	 str         r3, [sp, #0x4C]

; 445  : 
; 446  :     if (!hPowerNotificationMsgs) 

  00c28	e59d304c	 ldr         r3, [sp, #0x4C]
  00c2c	e3530000	 cmp         r3, #0
  00c30	1a00000c	 bne         |$LN38@fnBackLigh|

; 447  :     {
; 448  :         DEBUGMSG(ZONE_ERROR, (TEXT("BKL: Create message queue failed\r\n")));

  00c34	e59f379c	 ldr         r3, [pc, #0x79C]
  00c38	e5933440	 ldr         r3, [r3, #0x440]
  00c3c	e3130001	 tst         r3, #1
  00c40	0a000004	 beq         |$LN46@fnBackLigh|
  00c44	e59f07dc	 ldr         r0, [pc, #0x7DC]
  00c48	eb000000	 bl          NKDbgPrintfW
  00c4c	e3a03001	 mov         r3, #1
  00c50	e58d31c0	 str         r3, [sp, #0x1C0]
  00c54	ea000001	 b           |$LN47@fnBackLigh|
  00c58		 |$LN46@fnBackLigh|
  00c58	e3a03000	 mov         r3, #0
  00c5c	e58d31c0	 str         r3, [sp, #0x1C0]
  00c60		 |$LN47@fnBackLigh|

; 449  :         goto exit;

  00c60	ea0001aa	 b           |$LN37@fnBackLigh|
  00c64	ea0001a9	 b           |$exit$32433|
  00c68		 |$LN38@fnBackLigh|

; 450  :     }
; 451  :     // request notification of power status changes:
; 452  :     hPwrNotification = RequestPowerNotifications(hPowerNotificationMsgs, PBT_POWERSTATUSCHANGE);

  00c68	e3a01004	 mov         r1, #4
  00c6c	e59d004c	 ldr         r0, [sp, #0x4C]
  00c70	eb000000	 bl          RequestPowerNotifications
  00c74	e58d01c4	 str         r0, [sp, #0x1C4]
  00c78	e59d31c4	 ldr         r3, [sp, #0x1C4]
  00c7c	e58d3060	 str         r3, [sp, #0x60]

; 453  :     if (!hPwrNotification) 

  00c80	e59d3060	 ldr         r3, [sp, #0x60]
  00c84	e3530000	 cmp         r3, #0
  00c88	1a00000c	 bne         |$LN36@fnBackLigh|

; 454  :     {
; 455  :         DEBUGMSG(ZONE_ERROR, (TEXT("BKL: register power notification failed\r\n")));

  00c8c	e59f3744	 ldr         r3, [pc, #0x744]
  00c90	e5933440	 ldr         r3, [r3, #0x440]
  00c94	e3130001	 tst         r3, #1
  00c98	0a000004	 beq         |$LN48@fnBackLigh|
  00c9c	e59f0788	 ldr         r0, [pc, #0x788]
  00ca0	eb000000	 bl          NKDbgPrintfW
  00ca4	e3a03001	 mov         r3, #1
  00ca8	e58d31c8	 str         r3, [sp, #0x1C8]
  00cac	ea000001	 b           |$LN49@fnBackLigh|
  00cb0		 |$LN48@fnBackLigh|
  00cb0	e3a03000	 mov         r3, #0
  00cb4	e58d31c8	 str         r3, [sp, #0x1C8]
  00cb8		 |$LN49@fnBackLigh|

; 456  :         goto exit;

  00cb8	ea000194	 b           |$LN35@fnBackLigh|
  00cbc	ea000193	 b           |$exit$32433|
  00cc0		 |$LN36@fnBackLigh|

; 457  :     }
; 458  : 
; 459  :     // create msg queue for display device interface notifications:
; 460  :     msgopts.cbMaxMessage = PNP_QUEUE_SIZE;

  00cc0	e3a03e12	 mov         r3, #0x12, 28
  00cc4	e58d302c	 str         r3, [sp, #0x2C]

; 461  :     hDisplayNotificationMsgs = CreateMsgQueue(NULL, &msgopts);

  00cc8	e28d1020	 add         r1, sp, #0x20
  00ccc	e3a00000	 mov         r0, #0
  00cd0	eb000000	 bl          CreateMsgQueue
  00cd4	e58d01cc	 str         r0, [sp, #0x1CC]
  00cd8	e59d31cc	 ldr         r3, [sp, #0x1CC]
  00cdc	e58d3050	 str         r3, [sp, #0x50]

; 462  :     if (!hDisplayNotificationMsgs) 

  00ce0	e59d3050	 ldr         r3, [sp, #0x50]
  00ce4	e3530000	 cmp         r3, #0
  00ce8	1a00000c	 bne         |$LN34@fnBackLigh|

; 463  :     {
; 464  :         DEBUGMSG(ZONE_ERROR, (TEXT("BKL: Create message queue failed\r\n")));

  00cec	e59f36e4	 ldr         r3, [pc, #0x6E4]
  00cf0	e5933440	 ldr         r3, [r3, #0x440]
  00cf4	e3130001	 tst         r3, #1
  00cf8	0a000004	 beq         |$LN50@fnBackLigh|
  00cfc	e59f0724	 ldr         r0, [pc, #0x724]
  00d00	eb000000	 bl          NKDbgPrintfW
  00d04	e3a03001	 mov         r3, #1
  00d08	e58d31d0	 str         r3, [sp, #0x1D0]
  00d0c	ea000001	 b           |$LN51@fnBackLigh|
  00d10		 |$LN50@fnBackLigh|
  00d10	e3a03000	 mov         r3, #0
  00d14	e58d31d0	 str         r3, [sp, #0x1D0]
  00d18		 |$LN51@fnBackLigh|

; 465  :         goto exit;

  00d18	ea00017c	 b           |$LN33@fnBackLigh|
  00d1c	ea00017b	 b           |$exit$32433|
  00d20		 |$LN34@fnBackLigh|

; 466  :     }
; 467  : 
; 468  :     if(!ConvertStringToGuid(PMCLASS_DISPLAY, &idInterface)) 

  00d20	e28d100c	 add         r1, sp, #0xC
  00d24	e59f06f8	 ldr         r0, [pc, #0x6F8]
  00d28	eb000000	 bl          |?ConvertStringToGuid@@YAHPBGPAU_GUID@@@Z|
  00d2c	e58d01d4	 str         r0, [sp, #0x1D4]
  00d30	e59d31d4	 ldr         r3, [sp, #0x1D4]
  00d34	e3530000	 cmp         r3, #0
  00d38	1a00000c	 bne         |$LN32@fnBackLigh|

; 469  :     {
; 470  :         DEBUGMSG(ZONE_ERROR, (TEXT("can't convert PMCLASS_DISPLAY string to GUID\r\n")));  

  00d3c	e59f3694	 ldr         r3, [pc, #0x694]
  00d40	e5933440	 ldr         r3, [r3, #0x440]
  00d44	e3130001	 tst         r3, #1
  00d48	0a000004	 beq         |$LN52@fnBackLigh|
  00d4c	e59f06cc	 ldr         r0, [pc, #0x6CC]
  00d50	eb000000	 bl          NKDbgPrintfW
  00d54	e3a03001	 mov         r3, #1
  00d58	e58d31d8	 str         r3, [sp, #0x1D8]
  00d5c	ea000001	 b           |$LN53@fnBackLigh|
  00d60		 |$LN52@fnBackLigh|
  00d60	e3a03000	 mov         r3, #0
  00d64	e58d31d8	 str         r3, [sp, #0x1D8]
  00d68		 |$LN53@fnBackLigh|

; 471  :         goto exit;

  00d68	ea000168	 b           |$LN31@fnBackLigh|
  00d6c	ea000167	 b           |$exit$32433|
  00d70		 |$LN32@fnBackLigh|

; 472  :     }
; 473  : 
; 474  :     hDisplayNotifications = RequestDeviceNotifications(&idInterface, hDisplayNotificationMsgs, TRUE);

  00d70	e3a02001	 mov         r2, #1
  00d74	e59d1050	 ldr         r1, [sp, #0x50]
  00d78	e28d000c	 add         r0, sp, #0xC
  00d7c	eb000000	 bl          RequestDeviceNotifications
  00d80	e58d01dc	 str         r0, [sp, #0x1DC]
  00d84	e59d31dc	 ldr         r3, [sp, #0x1DC]
  00d88	e58d3048	 str         r3, [sp, #0x48]

; 475  :     // get display driver name (required to keep display driver on with SetPowerRequirement):
; 476  :     if(!hDisplayNotifications)

  00d8c	e59d3048	 ldr         r3, [sp, #0x48]
  00d90	e3530000	 cmp         r3, #0
  00d94	1a00000c	 bne         |$LN30@fnBackLigh|

; 477  :     {
; 478  :         DEBUGMSG(ZONE_ERROR, (TEXT("RequestDeviceNotifications failed\r\n")));

  00d98	e59f3638	 ldr         r3, [pc, #0x638]
  00d9c	e5933440	 ldr         r3, [r3, #0x440]
  00da0	e3130001	 tst         r3, #1
  00da4	0a000004	 beq         |$LN54@fnBackLigh|
  00da8	e59f066c	 ldr         r0, [pc, #0x66C]
  00dac	eb000000	 bl          NKDbgPrintfW
  00db0	e3a03001	 mov         r3, #1
  00db4	e58d31e0	 str         r3, [sp, #0x1E0]
  00db8	ea000001	 b           |$LN55@fnBackLigh|
  00dbc		 |$LN54@fnBackLigh|
  00dbc	e3a03000	 mov         r3, #0
  00dc0	e58d31e0	 str         r3, [sp, #0x1E0]
  00dc4		 |$LN55@fnBackLigh|

; 479  :         goto exit;

  00dc4	ea000151	 b           |$LN29@fnBackLigh|
  00dc8	ea000150	 b           |$exit$32433|
  00dcc		 |$LN30@fnBackLigh|

; 480  :     }    
; 481  :     
; 482  :     dwResult = RegOpenKeyEx(HKEY_CURRENT_USER, BACKLIGHT_REGKEY, 0, KEY_NOTIFY, &hKey);

  00dcc	e28d301c	 add         r3, sp, #0x1C
  00dd0	e58d3000	 str         r3, [sp]
  00dd4	e3a03010	 mov         r3, #0x10
  00dd8	e3a02000	 mov         r2, #0
  00ddc	e59f1634	 ldr         r1, [pc, #0x634]
  00de0	e3a00106	 mov         r0, #6, 2
  00de4	eb000000	 bl          RegOpenKeyExW
  00de8	e58d01e4	 str         r0, [sp, #0x1E4]
  00dec	e59d31e4	 ldr         r3, [sp, #0x1E4]
  00df0	e58d3058	 str         r3, [sp, #0x58]

; 483  :     if(ERROR_SUCCESS  != dwResult)

  00df4	e59d3058	 ldr         r3, [sp, #0x58]
  00df8	e3530000	 cmp         r3, #0
  00dfc	0a000001	 beq         |$LN28@fnBackLigh|
  00e00	ea000142	 b           |$LN27@fnBackLigh|

; 484  :     {
; 485  :         goto exit;

  00e04	ea000141	 b           |$exit$32433|
  00e08		 |$LN28@fnBackLigh|

; 486  :     }
; 487  :     // Request notification of backlight registry changes:
; 488  :     hEventRegistryChange = CeFindFirstRegChange(hKey, FALSE, REG_NOTIFY_CHANGE_LAST_SET);

  00e08	e3a02004	 mov         r2, #4
  00e0c	e3a01000	 mov         r1, #0
  00e10	e59d001c	 ldr         r0, [sp, #0x1C]
  00e14	eb000000	 bl          CeFindFirstRegChange
  00e18	e58d01e8	 str         r0, [sp, #0x1E8]
  00e1c	e59d31e8	 ldr         r3, [sp, #0x1E8]
  00e20	e58d305c	 str         r3, [sp, #0x5C]

; 489  :     if(INVALID_HANDLE_VALUE == hEventRegistryChange)

  00e24	e59d305c	 ldr         r3, [sp, #0x5C]
  00e28	e3730001	 cmn         r3, #1
  00e2c	1a00000c	 bne         |$LN26@fnBackLigh|

; 490  :     {   
; 491  :         DEBUGMSG(ZONE_ERROR, (TEXT("BKL: CeFindFirstRegChange failed\r\n")));        

  00e30	e59f35a0	 ldr         r3, [pc, #0x5A0]
  00e34	e5933440	 ldr         r3, [r3, #0x440]
  00e38	e3130001	 tst         r3, #1
  00e3c	0a000004	 beq         |$LN56@fnBackLigh|
  00e40	e59f05cc	 ldr         r0, [pc, #0x5CC]
  00e44	eb000000	 bl          NKDbgPrintfW
  00e48	e3a03001	 mov         r3, #1
  00e4c	e58d31ec	 str         r3, [sp, #0x1EC]
  00e50	ea000001	 b           |$LN57@fnBackLigh|
  00e54		 |$LN56@fnBackLigh|
  00e54	e3a03000	 mov         r3, #0
  00e58	e58d31ec	 str         r3, [sp, #0x1EC]
  00e5c		 |$LN57@fnBackLigh|

; 492  :         goto exit;

  00e5c	ea00012b	 b           |$LN25@fnBackLigh|
  00e60	ea00012a	 b           |$exit$32433|
  00e64		 |$LN26@fnBackLigh|

; 493  :     }
; 494  :     RegCloseKey(hKey);

  00e64	e59d001c	 ldr         r0, [sp, #0x1C]
  00e68	eb000000	 bl          RegCloseKey

; 495  :     hKey = NULL;

  00e6c	e3a03000	 mov         r3, #0
  00e70	e58d301c	 str         r3, [sp, #0x1C]

; 496  : 
; 497  :     BacklightUpdateMDDRegSettings(pBKLinfo);

  00e74	e59d0044	 ldr         r0, [sp, #0x44]
  00e78	eb000000	 bl          |?BacklightUpdateMDDRegSettings@@YAXPAUBKL_MDD_INFO@@@Z|

; 498  :     UpdateACStatus(pBKLinfo);

  00e7c	e59d0044	 ldr         r0, [sp, #0x44]
  00e80	eb000000	 bl          |?UpdateACStatus@@YAXPAUBKL_MDD_INFO@@@Z|

; 499  : 
; 500  :     WaitEvents[BKL_EVENT_REG] = hEventRegistryChange;

  00e84	e59d305c	 ldr         r3, [sp, #0x5C]
  00e88	e58d3034	 str         r3, [sp, #0x34]

; 501  :     WaitEvents[BKL_EVENT_POWER_MSG] = hPowerNotificationMsgs;

  00e8c	e59d304c	 ldr         r3, [sp, #0x4C]
  00e90	e58d3038	 str         r3, [sp, #0x38]

; 502  :     WaitEvents[BKL_EVENT_EXIT] = pBKLinfo->hExitEvent;

  00e94	e59d3044	 ldr         r3, [sp, #0x44]
  00e98	e2833f87	 add         r3, r3, #0x87, 30
  00e9c	e5933000	 ldr         r3, [r3]
  00ea0	e58d303c	 str         r3, [sp, #0x3C]

; 503  :     WaitEvents[BKL_EVENT_DISPLAY_MSG] = hDisplayNotificationMsgs;

  00ea4	e59d3050	 ldr         r3, [sp, #0x50]
  00ea8	e58d3040	 str         r3, [sp, #0x40]

; 504  : 
; 505  :     pBKLinfo->fExit = FALSE;

  00eac	e59d3044	 ldr         r3, [sp, #0x44]
  00eb0	e2832f8a	 add         r2, r3, #0x8A, 30
  00eb4	e3a03000	 mov         r3, #0
  00eb8	e5823000	 str         r3, [r2]
  00ebc		 |$LN24@fnBackLigh|

; 506  :     
; 507  :     while(!pBKLinfo->fExit)

  00ebc	e59d3044	 ldr         r3, [sp, #0x44]
  00ec0	e2833f8a	 add         r3, r3, #0x8A, 30
  00ec4	e5933000	 ldr         r3, [r3]
  00ec8	e3530000	 cmp         r3, #0
  00ecc	1a00010f	 bne         |$LN23@fnBackLigh|

; 508  :     {
; 509  :         dwResult = WaitForMultipleObjects(BKL_NUM_EVENTS, &WaitEvents[0], FALSE, INFINITE);

  00ed0	e3e03000	 mvn         r3, #0
  00ed4	e3a02000	 mov         r2, #0
  00ed8	e28d1034	 add         r1, sp, #0x34
  00edc	e3a00004	 mov         r0, #4
  00ee0	eb000000	 bl          WaitForMultipleObjects
  00ee4	e58d01f0	 str         r0, [sp, #0x1F0]
  00ee8	e59d31f0	 ldr         r3, [sp, #0x1F0]
  00eec	e58d3058	 str         r3, [sp, #0x58]

; 510  :         switch(dwResult)

  00ef0	e59d3058	 ldr         r3, [sp, #0x58]
  00ef4	e58d31f4	 str         r3, [sp, #0x1F4]
  00ef8	e59d31f4	 ldr         r3, [sp, #0x1F4]
  00efc	e3530003	 cmp         r3, #3
  00f00	8a0000f4	 bhi         |$LN7@fnBackLigh|
  00f04	e59d21f4	 ldr         r2, [sp, #0x1F4]
  00f08	e1a03102	 mov         r3, r2, lsl #2
  00f0c	e083300f	 add         r3, r3, pc
  00f10	e5933004	 ldr         r3, [r3, #4]
  00f14	e08ff003	 add         pc, pc, r3
  00f18		 |$LN87@fnBackLigh|
  00f18		 |$LN86@fnBackLigh|
  00f18		 |$LN88@fnBackLigh|
  00f18	0000000c	 DCD         0xc
  00f1c		 |$LN89@fnBackLigh|
  00f1c	00000050	 DCD         0x50
  00f20		 |$LN90@fnBackLigh|
  00f20	0000038c	 DCD         0x38c
  00f24		 |$LN91@fnBackLigh|
  00f24	000001bc	 DCD         0x1bc
  00f28		 |$LN20@fnBackLigh|

; 511  :         {
; 512  :             case(WAIT_OBJECT_0 + BKL_EVENT_REG):
; 513  :             {
; 514  :                 DEBUGMSG(ZONE_BACKLIGHT,(TEXT("Backlight mdd registry change\r\n")));

  00f28	e59f34a8	 ldr         r3, [pc, #0x4A8]
  00f2c	e5933440	 ldr         r3, [r3, #0x440]
  00f30	e3130001	 tst         r3, #1
  00f34	0a000004	 beq         |$LN58@fnBackLigh|
  00f38	e59f04d0	 ldr         r0, [pc, #0x4D0]
  00f3c	eb000000	 bl          NKDbgPrintfW
  00f40	e3a03001	 mov         r3, #1
  00f44	e58d31f8	 str         r3, [sp, #0x1F8]
  00f48	ea000001	 b           |$LN59@fnBackLigh|
  00f4c		 |$LN58@fnBackLigh|
  00f4c	e3a03000	 mov         r3, #0
  00f50	e58d31f8	 str         r3, [sp, #0x1F8]
  00f54		 |$LN59@fnBackLigh|

; 515  : 
; 516  :                 UpdateBacklight(pBKLinfo, BKL_EVENT_REG);

  00f54	e3a01000	 mov         r1, #0
  00f58	e59d0044	 ldr         r0, [sp, #0x44]
  00f5c	eb000000	 bl          |?UpdateBacklight@@YAXPAUBKL_MDD_INFO@@K@Z|

; 517  : 
; 518  :                 CeFindNextRegChange(hEventRegistryChange);      

  00f60	e59d005c	 ldr         r0, [sp, #0x5C]
  00f64	eb000000	 bl          CeFindNextRegChange

; 519  : 
; 520  :                 // Tell PDD that the backlight reg settings changed:
; 521  : //MYS                 BacklightRegChanged( pBKLinfo->dwPddContext );
; 522  :             }
; 523  :             break;

  00f68	ea0000e7	 b           |$LN21@fnBackLigh|
  00f6c		 |$LN19@fnBackLigh|

; 524  :             
; 525  :             case (WAIT_OBJECT_0 + BKL_EVENT_POWER_MSG):
; 526  :             {
; 527  :                 POWER_BROADCAST PwrMsgBuf;
; 528  :                 
; 529  :                 DEBUGMSG(ZONE_BACKLIGHT,(TEXT("Power status change to/from AC\r\n")));

  00f6c	e59f3464	 ldr         r3, [pc, #0x464]
  00f70	e5933440	 ldr         r3, [r3, #0x440]
  00f74	e3130001	 tst         r3, #1
  00f78	0a000004	 beq         |$LN60@fnBackLigh|
  00f7c	e59f0488	 ldr         r0, [pc, #0x488]
  00f80	eb000000	 bl          NKDbgPrintfW
  00f84	e3a03001	 mov         r3, #1
  00f88	e58d31fc	 str         r3, [sp, #0x1FC]
  00f8c	ea000001	 b           |$LN61@fnBackLigh|
  00f90		 |$LN60@fnBackLigh|
  00f90	e3a03000	 mov         r3, #0
  00f94	e58d31fc	 str         r3, [sp, #0x1FC]
  00f98		 |$LN61@fnBackLigh|

; 530  :                 if (!ReadMsgQueue(hPowerNotificationMsgs, &PwrMsgBuf, sizeof(PwrMsgBuf), &dwSize, 0, &dwFlags)) 

  00f98	e28d3054	 add         r3, sp, #0x54
  00f9c	e58d3004	 str         r3, [sp, #4]
  00fa0	e3a03000	 mov         r3, #0
  00fa4	e58d3000	 str         r3, [sp]
  00fa8	e28d3008	 add         r3, sp, #8
  00fac	e3a02010	 mov         r2, #0x10
  00fb0	e28d1064	 add         r1, sp, #0x64
  00fb4	e59d004c	 ldr         r0, [sp, #0x4C]
  00fb8	eb000000	 bl          ReadMsgQueue
  00fbc	e58d0200	 str         r0, [sp, #0x200]
  00fc0	e59d3200	 ldr         r3, [sp, #0x200]
  00fc4	e3530000	 cmp         r3, #0
  00fc8	1a000017	 bne         |$LN18@fnBackLigh|

; 531  :                 {
; 532  :                     DEBUGMSG(ZONE_BACKLIGHT,(TEXT("ReadMsgQueue failed\r\n")));  

  00fcc	e59f3404	 ldr         r3, [pc, #0x404]
  00fd0	e5933440	 ldr         r3, [r3, #0x440]
  00fd4	e3130001	 tst         r3, #1
  00fd8	0a000004	 beq         |$LN62@fnBackLigh|
  00fdc	e59f0410	 ldr         r0, [pc, #0x410]
  00fe0	eb000000	 bl          NKDbgPrintfW
  00fe4	e3a03001	 mov         r3, #1
  00fe8	e58d3204	 str         r3, [sp, #0x204]
  00fec	ea000001	 b           |$LN63@fnBackLigh|
  00ff0		 |$LN62@fnBackLigh|
  00ff0	e3a03000	 mov         r3, #0
  00ff4	e58d3204	 str         r3, [sp, #0x204]
  00ff8		 |$LN63@fnBackLigh|

; 533  :                     ASSERT(FALSE);

  00ff8	ea000002	 b           |$LN64@fnBackLigh|
  00ffc	e3a03001	 mov         r3, #1
  01000	e58d3208	 str         r3, [sp, #0x208]
  01004	ea000008	 b           |$LN65@fnBackLigh|
  01008		 |$LN64@fnBackLigh|
  01008	e3a03c02	 mov         r3, #2, 24
  0100c	e3833015	 orr         r3, r3, #0x15
  01010	e59f23cc	 ldr         r2, [pc, #0x3CC]
  01014	e59f13c4	 ldr         r1, [pc, #0x3C4]
  01018	e59f03bc	 ldr         r0, [pc, #0x3BC]
  0101c	eb000000	 bl          NKDbgPrintfW
  01020	e6000010	 __debugbreak_ce
  01024	e3a03000	 mov         r3, #0
  01028	e58d3208	 str         r3, [sp, #0x208]
  0102c		 |$LN65@fnBackLigh|
  0102c		 |$LN18@fnBackLigh|

; 534  :                 }
; 535  : 
; 536  :                 UpdateBacklight(pBKLinfo, BKL_EVENT_POWER_MSG);

  0102c	e3a01001	 mov         r1, #1
  01030	e59d0044	 ldr         r0, [sp, #0x44]
  01034	eb000000	 bl          |?UpdateBacklight@@YAXPAUBKL_MDD_INFO@@K@Z|

; 537  :                 if (pBKLinfo->fOnAC)

  01038	e59d3044	 ldr         r3, [sp, #0x44]
  0103c	e2833e21	 add         r3, r3, #0x21, 28
  01040	e5933000	 ldr         r3, [r3]
  01044	e3530000	 cmp         r3, #0
  01048	0a000015	 beq         |$LN17@fnBackLigh|

; 538  : DEBUGMSG(ZONE_BACKLIGHT,(TEXT("Power status change %s\r\n"),pBKLinfo->fOnAC ? L"to AC" :L"to Batt"));

  0104c	e59f3384	 ldr         r3, [pc, #0x384]
  01050	e5933440	 ldr         r3, [r3, #0x440]
  01054	e3130001	 tst         r3, #1
  01058	0a00000f	 beq         |$LN68@fnBackLigh|
  0105c	e59d3044	 ldr         r3, [sp, #0x44]
  01060	e2833e21	 add         r3, r3, #0x21, 28
  01064	e5933000	 ldr         r3, [r3]
  01068	e3530000	 cmp         r3, #0
  0106c	0a000002	 beq         |$LN66@fnBackLigh|
  01070	e59f3390	 ldr         r3, [pc, #0x390]
  01074	e58d320c	 str         r3, [sp, #0x20C]
  01078	ea000001	 b           |$LN67@fnBackLigh|
  0107c		 |$LN66@fnBackLigh|
  0107c	e59f3380	 ldr         r3, [pc, #0x380]
  01080	e58d320c	 str         r3, [sp, #0x20C]
  01084		 |$LN67@fnBackLigh|
  01084	e59d120c	 ldr         r1, [sp, #0x20C]
  01088	e59f0370	 ldr         r0, [pc, #0x370]
  0108c	eb000000	 bl          NKDbgPrintfW
  01090	e3a03001	 mov         r3, #1
  01094	e58d3210	 str         r3, [sp, #0x210]
  01098	ea000001	 b           |$LN69@fnBackLigh|
  0109c		 |$LN68@fnBackLigh|
  0109c	e3a03000	 mov         r3, #0
  010a0	e58d3210	 str         r3, [sp, #0x210]
  010a4		 |$LN69@fnBackLigh|
  010a4		 |$LN17@fnBackLigh|

; 539  : 
; 540  :                 // tell PDD that power source changed:
; 541  : //MYS                BacklightPwrSrcChanged(pBKLinfo->fOnAC, pBKLinfo->dwPddContext );
; 542  :                g_pBacklight->SetPowerState(pBKLinfo->dwCurState);

  010a4	e59d3044	 ldr         r3, [sp, #0x44]
  010a8	e2833f85	 add         r3, r3, #0x85, 30
  010ac	e5931000	 ldr         r1, [r3]
  010b0	e59f3344	 ldr         r3, [pc, #0x344]
  010b4	e5933000	 ldr         r3, [r3]
  010b8	e5933000	 ldr         r3, [r3]
  010bc	e2832008	 add         r2, r3, #8
  010c0	e59f3334	 ldr         r3, [pc, #0x334]
  010c4	e5930000	 ldr         r0, [r3]
  010c8	e5923000	 ldr         r3, [r2]
  010cc	e1a0e00f	 mov         lr, pc
  010d0	e12fff13	 bx          r3

; 543  : 
; 544  :                 
; 545  :             }
; 546  :             break;

  010d4	ea00008c	 b           |$LN21@fnBackLigh|
  010d8		 |$LN16@fnBackLigh|

; 547  : 
; 548  :             case (WAIT_OBJECT_0 + BKL_EVENT_DISPLAY_MSG):
; 549  :             {
; 550  :                 union 
; 551  :                 {
; 552  :                     UCHAR deviceBuf[PNP_QUEUE_SIZE];
; 553  :                     DEVDETAIL devDetail;
; 554  :                 } u;
; 555  :                 
; 556  :                 DEBUGMSG(ZONE_BACKLIGHT,(TEXT("Display driver interface notification\r\n")));

  010d8	e59f32f8	 ldr         r3, [pc, #0x2F8]
  010dc	e5933440	 ldr         r3, [r3, #0x440]
  010e0	e3130001	 tst         r3, #1
  010e4	0a000004	 beq         |$LN70@fnBackLigh|
  010e8	e59f0308	 ldr         r0, [pc, #0x308]
  010ec	eb000000	 bl          NKDbgPrintfW
  010f0	e3a03001	 mov         r3, #1
  010f4	e58d3214	 str         r3, [sp, #0x214]
  010f8	ea000001	 b           |$LN71@fnBackLigh|
  010fc		 |$LN70@fnBackLigh|
  010fc	e3a03000	 mov         r3, #0
  01100	e58d3214	 str         r3, [sp, #0x214]
  01104		 |$LN71@fnBackLigh|

; 557  :                 if (!ReadMsgQueue(hDisplayNotificationMsgs, u.deviceBuf, PNP_QUEUE_SIZE, &dwSize, 0, &dwFlags)) 

  01104	e28d3054	 add         r3, sp, #0x54
  01108	e58d3004	 str         r3, [sp, #4]
  0110c	e3a03000	 mov         r3, #0
  01110	e58d3000	 str         r3, [sp]
  01114	e28d3008	 add         r3, sp, #8
  01118	e3a02e12	 mov         r2, #0x12, 28
  0111c	e28d1074	 add         r1, sp, #0x74
  01120	e59d0050	 ldr         r0, [sp, #0x50]
  01124	eb000000	 bl          ReadMsgQueue
  01128	e58d0218	 str         r0, [sp, #0x218]
  0112c	e59d3218	 ldr         r3, [sp, #0x218]
  01130	e3530000	 cmp         r3, #0
  01134	1a000017	 bne         |$LN15@fnBackLigh|

; 558  :                 {
; 559  :                     DEBUGMSG(ZONE_BACKLIGHT,(TEXT("ReadMsgQueue failed\r\n")));  

  01138	e59f3298	 ldr         r3, [pc, #0x298]
  0113c	e5933440	 ldr         r3, [r3, #0x440]
  01140	e3130001	 tst         r3, #1
  01144	0a000004	 beq         |$LN72@fnBackLigh|
  01148	e59f02a4	 ldr         r0, [pc, #0x2A4]
  0114c	eb000000	 bl          NKDbgPrintfW
  01150	e3a03001	 mov         r3, #1
  01154	e58d321c	 str         r3, [sp, #0x21C]
  01158	ea000001	 b           |$LN73@fnBackLigh|
  0115c		 |$LN72@fnBackLigh|
  0115c	e3a03000	 mov         r3, #0
  01160	e58d321c	 str         r3, [sp, #0x21C]
  01164		 |$LN73@fnBackLigh|

; 560  :                     ASSERT(FALSE);

  01164	ea000002	 b           |$LN74@fnBackLigh|
  01168	e3a03001	 mov         r3, #1
  0116c	e58d3220	 str         r3, [sp, #0x220]
  01170	ea000007	 b           |$LN75@fnBackLigh|
  01174		 |$LN74@fnBackLigh|
  01174	e3a03e23	 mov         r3, #0x23, 28
  01178	e59f2264	 ldr         r2, [pc, #0x264]
  0117c	e59f125c	 ldr         r1, [pc, #0x25C]
  01180	e59f0254	 ldr         r0, [pc, #0x254]
  01184	eb000000	 bl          NKDbgPrintfW
  01188	e6000010	 __debugbreak_ce
  0118c	e3a03000	 mov         r3, #0
  01190	e58d3220	 str         r3, [sp, #0x220]
  01194		 |$LN75@fnBackLigh|

; 561  :                 }
; 562  :                 else if(dwSize >= sizeof(DEVDETAIL)) 

  01194	ea000042	 b           |$LN14@fnBackLigh|
  01198		 |$LN15@fnBackLigh|
  01198	e59d3008	 ldr         r3, [sp, #8]
  0119c	e3530020	 cmp         r3, #0x20
  011a0	3a000034	 bcc         |$LN13@fnBackLigh|

; 563  :                 {
; 564  :                     PDEVDETAIL pDevDetail = &u.devDetail;

  011a4	e28d3074	 add         r3, sp, #0x74
  011a8	e58d3194	 str         r3, [sp, #0x194]

; 565  : 
; 566  :                     if (pDevDetail->cbName < 0)

  011ac	e59d3194	 ldr         r3, [sp, #0x194]
  011b0	e2833018	 add         r3, r3, #0x18
  011b4	e5933000	 ldr         r3, [r3]
  011b8	e3530000	 cmp         r3, #0
  011bc	aa00000b	 bge         |$LN12@fnBackLigh|

; 567  :                     {
; 568  :                         DEBUGMSG(ZONE_ERROR,(TEXT("Invalid cbName value\r\n")));                        

  011c0	e59f3210	 ldr         r3, [pc, #0x210]
  011c4	e5933440	 ldr         r3, [r3, #0x440]
  011c8	e3130001	 tst         r3, #1
  011cc	0a000004	 beq         |$LN76@fnBackLigh|
  011d0	e59f0218	 ldr         r0, [pc, #0x218]
  011d4	eb000000	 bl          NKDbgPrintfW
  011d8	e3a03001	 mov         r3, #1
  011dc	e58d3224	 str         r3, [sp, #0x224]
  011e0	ea000001	 b           |$LN77@fnBackLigh|
  011e4		 |$LN76@fnBackLigh|
  011e4	e3a03000	 mov         r3, #0
  011e8	e58d3224	 str         r3, [sp, #0x224]
  011ec		 |$LN77@fnBackLigh|

; 569  :                     }
; 570  :                     else if(( (pDevDetail->cbName + sizeof(TCHAR) < sizeof(pBKLinfo->szDisplayInterface) ) 

  011ec	ea000020	 b           |$LN11@fnBackLigh|
  011f0		 |$LN12@fnBackLigh|

; 571  :                         && ( (int)(pDevDetail->cbName + sizeof(TCHAR)) > pDevDetail->cbName) ))

  011f0	e59d3194	 ldr         r3, [sp, #0x194]
  011f4	e2833018	 add         r3, r3, #0x18
  011f8	e5933000	 ldr         r3, [r3]
  011fc	e2833002	 add         r3, r3, #2
  01200	e3530c01	 cmp         r3, #1, 24
  01204	2a00001a	 bcs         |$LN10@fnBackLigh|
  01208	e59d3194	 ldr         r3, [sp, #0x194]
  0120c	e2833018	 add         r3, r3, #0x18
  01210	e5933000	 ldr         r3, [r3]
  01214	e2832002	 add         r2, r3, #2
  01218	e59d3194	 ldr         r3, [sp, #0x194]
  0121c	e2833018	 add         r3, r3, #0x18
  01220	e5933000	 ldr         r3, [r3]
  01224	e1520003	 cmp         r2, r3
  01228	da000011	 ble         |$LN10@fnBackLigh|

; 572  :                     {
; 573  :                         memcpy(pBKLinfo->szDisplayInterface, pDevDetail->szName, pDevDetail->cbName);

  0122c	e59d3194	 ldr         r3, [sp, #0x194]
  01230	e2833018	 add         r3, r3, #0x18
  01234	e5932000	 ldr         r2, [r3]
  01238	e59d3194	 ldr         r3, [sp, #0x194]
  0123c	e283101c	 add         r1, r3, #0x1C
  01240	e59d3044	 ldr         r3, [sp, #0x44]
  01244	e2830c01	 add         r0, r3, #1, 24
  01248	eb000000	 bl          memcpy

; 574  :                         // make sure it's null terminated:
; 575  :                         pBKLinfo->szDisplayInterface[pDevDetail->cbName] = '\0';

  0124c	e59d3044	 ldr         r3, [sp, #0x44]
  01250	e2831c01	 add         r1, r3, #1, 24
  01254	e59d3194	 ldr         r3, [sp, #0x194]
  01258	e2833018	 add         r3, r3, #0x18
  0125c	e5932000	 ldr         r2, [r3]
  01260	e3a03002	 mov         r3, #2
  01264	e0030392	 mul         r3, r2, r3
  01268	e0812003	 add         r2, r1, r3
  0126c	e3a03000	 mov         r3, #0
  01270	e1c230b0	 strh        r3, [r2]
  01274		 |$LN10@fnBackLigh|
  01274		 |$LN11@fnBackLigh|

; 576  :                     } 
; 577  :                 }
; 578  :                 else

  01274	ea00000a	 b           |$LN9@fnBackLigh|
  01278		 |$LN13@fnBackLigh|

; 579  :                 {
; 580  :                     DEBUGMSG(ZONE_BACKLIGHT,(TEXT("insufficient buffer for device message\r\n")));  

  01278	e59f3158	 ldr         r3, [pc, #0x158]
  0127c	e5933440	 ldr         r3, [r3, #0x440]
  01280	e3130001	 tst         r3, #1
  01284	0a000004	 beq         |$LN78@fnBackLigh|
  01288	e59f015c	 ldr         r0, [pc, #0x15C]
  0128c	eb000000	 bl          NKDbgPrintfW
  01290	e3a03001	 mov         r3, #1
  01294	e58d3228	 str         r3, [sp, #0x228]
  01298	ea000001	 b           |$LN79@fnBackLigh|
  0129c		 |$LN78@fnBackLigh|
  0129c	e3a03000	 mov         r3, #0
  012a0	e58d3228	 str         r3, [sp, #0x228]
  012a4		 |$LN79@fnBackLigh|
  012a4		 |$LN9@fnBackLigh|
  012a4		 |$LN14@fnBackLigh|

; 581  :                 }
; 582  :             }
; 583  :             break;

  012a4	ea000018	 b           |$LN21@fnBackLigh|
  012a8		 |$LN8@fnBackLigh|

; 584  : 
; 585  :             case(WAIT_OBJECT_0 + BKL_EVENT_EXIT):
; 586  :             {
; 587  :                 DEBUGMSG(ZONE_BACKLIGHT,(TEXT("Backlight exiting\r\n")));                

  012a8	e59f3128	 ldr         r3, [pc, #0x128]
  012ac	e5933440	 ldr         r3, [r3, #0x440]
  012b0	e3130001	 tst         r3, #1
  012b4	0a000004	 beq         |$LN80@fnBackLigh|
  012b8	e59f0128	 ldr         r0, [pc, #0x128]
  012bc	eb000000	 bl          NKDbgPrintfW
  012c0	e3a03001	 mov         r3, #1
  012c4	e58d322c	 str         r3, [sp, #0x22C]
  012c8	ea000001	 b           |$LN81@fnBackLigh|
  012cc		 |$LN80@fnBackLigh|
  012cc	e3a03000	 mov         r3, #0
  012d0	e58d322c	 str         r3, [sp, #0x22C]
  012d4		 |$LN81@fnBackLigh|

; 588  :             }
; 589  :             break;

  012d4	ea00000c	 b           |$LN21@fnBackLigh|
  012d8		 |$LN7@fnBackLigh|

; 590  :             
; 591  :             default:
; 592  :             {
; 593  :                 ASSERT(FALSE);

  012d8	ea000002	 b           |$LN82@fnBackLigh|
  012dc	e3a03001	 mov         r3, #1
  012e0	e58d3230	 str         r3, [sp, #0x230]
  012e4	ea000008	 b           |$LN83@fnBackLigh|
  012e8		 |$LN82@fnBackLigh|
  012e8	e3a03c02	 mov         r3, #2, 24
  012ec	e3833051	 orr         r3, r3, #0x51
  012f0	e59f20ec	 ldr         r2, [pc, #0xEC]
  012f4	e59f10e4	 ldr         r1, [pc, #0xE4]
  012f8	e59f00dc	 ldr         r0, [pc, #0xDC]
  012fc	eb000000	 bl          NKDbgPrintfW
  01300	e6000010	 __debugbreak_ce
  01304	e3a03000	 mov         r3, #0
  01308	e58d3230	 str         r3, [sp, #0x230]
  0130c		 |$LN83@fnBackLigh|
  0130c		 |$LN21@fnBackLigh|

; 594  :             }
; 595  :             
; 596  :         }
; 597  :         
; 598  :     }

  0130c	eafffeea	 b           |$LN24@fnBackLigh|
  01310		 |$LN23@fnBackLigh|
  01310		 |$LN25@fnBackLigh|
  01310		 |$LN27@fnBackLigh|
  01310		 |$LN29@fnBackLigh|
  01310		 |$LN31@fnBackLigh|
  01310		 |$LN33@fnBackLigh|
  01310		 |$LN35@fnBackLigh|
  01310		 |$LN37@fnBackLigh|
  01310		 |$exit$32433|

; 599  : 
; 600  :     exit:
; 601  :         
; 602  :     if (hPwrNotification)

  01310	e59d3060	 ldr         r3, [sp, #0x60]
  01314	e3530000	 cmp         r3, #0
  01318	0a000001	 beq         |$LN6@fnBackLigh|

; 603  :     {
; 604  :         StopPowerNotifications(hPwrNotification);

  0131c	e59d0060	 ldr         r0, [sp, #0x60]
  01320	eb000000	 bl          StopPowerNotifications
  01324		 |$LN6@fnBackLigh|

; 605  :     }
; 606  :     if (hPowerNotificationMsgs)

  01324	e59d304c	 ldr         r3, [sp, #0x4C]
  01328	e3530000	 cmp         r3, #0
  0132c	0a000001	 beq         |$LN5@fnBackLigh|

; 607  :     {
; 608  :         CloseMsgQueue(hPowerNotificationMsgs);

  01330	e59d004c	 ldr         r0, [sp, #0x4C]
  01334	eb000000	 bl          CloseMsgQueue
  01338		 |$LN5@fnBackLigh|

; 609  :     }
; 610  :     if (hDisplayNotifications)

  01338	e59d3048	 ldr         r3, [sp, #0x48]
  0133c	e3530000	 cmp         r3, #0
  01340	0a000001	 beq         |$LN4@fnBackLigh|

; 611  :     {
; 612  :         StopDeviceNotifications(hDisplayNotifications);

  01344	e59d0048	 ldr         r0, [sp, #0x48]
  01348	eb000000	 bl          StopDeviceNotifications
  0134c		 |$LN4@fnBackLigh|

; 613  :     }    
; 614  :     if (hDisplayNotificationMsgs)

  0134c	e59d3050	 ldr         r3, [sp, #0x50]
  01350	e3530000	 cmp         r3, #0
  01354	0a000001	 beq         |$LN3@fnBackLigh|

; 615  :     {
; 616  :         CloseMsgQueue(hDisplayNotificationMsgs);

  01358	e59d0050	 ldr         r0, [sp, #0x50]
  0135c	eb000000	 bl          CloseMsgQueue
  01360		 |$LN3@fnBackLigh|

; 617  :     }
; 618  :     if(hEventRegistryChange)

  01360	e59d305c	 ldr         r3, [sp, #0x5C]
  01364	e3530000	 cmp         r3, #0
  01368	0a000001	 beq         |$LN2@fnBackLigh|

; 619  :     {
; 620  :         CeFindCloseRegChange(hEventRegistryChange);

  0136c	e59d005c	 ldr         r0, [sp, #0x5C]
  01370	eb000000	 bl          CeFindCloseRegChange
  01374		 |$LN2@fnBackLigh|

; 621  :     }
; 622  :     if(hKey)

  01374	e59d301c	 ldr         r3, [sp, #0x1C]
  01378	e3530000	 cmp         r3, #0
  0137c	0a000001	 beq         |$LN1@fnBackLigh|

; 623  :     {
; 624  :         RegCloseKey(hKey);

  01380	e59d001c	 ldr         r0, [sp, #0x1C]
  01384	eb000000	 bl          RegCloseKey
  01388		 |$LN1@fnBackLigh|

; 625  :     }
; 626  :     
; 627  :     DEBUGMSG(ZONE_BACKLIGHT,(TEXT("-fnBackLightRegThread\r\n")));

  01388	e59f3048	 ldr         r3, [pc, #0x48]
  0138c	e5933440	 ldr         r3, [r3, #0x440]
  01390	e3130001	 tst         r3, #1
  01394	0a000004	 beq         |$LN84@fnBackLigh|
  01398	e59f0034	 ldr         r0, [pc, #0x34]
  0139c	eb000000	 bl          NKDbgPrintfW
  013a0	e3a03001	 mov         r3, #1
  013a4	e58d3234	 str         r3, [sp, #0x234]
  013a8	ea000001	 b           |$LN85@fnBackLigh|
  013ac		 |$LN84@fnBackLigh|
  013ac	e3a03000	 mov         r3, #0
  013b0	e58d3234	 str         r3, [sp, #0x234]
  013b4		 |$LN85@fnBackLigh|

; 628  : 
; 629  :     return 0;

  013b4	e59d0198	 ldr         r0, [sp, #0x198]
  013b8	eb000000	 bl          __security_check_cookie
  013bc	e3a03000	 mov         r3, #0
  013c0	e58d319c	 str         r3, [sp, #0x19C]
  013c4		 |$LN40@fnBackLigh|

; 630  : }

  013c4	e59d019c	 ldr         r0, [sp, #0x19C]
  013c8	e28ddf8e	 add         sp, sp, #0x8E, 30
  013cc	e89d6000	 ldmia       sp, {sp, lr}
  013d0	e12fff1e	 bx          lr
  013d4		 |$LN95@fnBackLigh|
  013d4		 |$LN96@fnBackLigh|
  013d4	00000000	 DCD         |??_C@_1DA@CKFCKDMJ@?$AA?9?$AAf?$AAn?$AAB?$AAa?$AAc?$AAk?$AAL?$AAi?$AAg?$AAh?$AAt?$AAR?$AAe?$AAg?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  013d8		 |$LN97@fnBackLigh|
  013d8	00000000	 DCD         |dpCurSettings|
  013dc		 |$LN98@fnBackLigh|
  013dc	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  013e0		 |$LN99@fnBackLigh|
  013e0	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  013e4		 |$LN100@fnBackLigh|
  013e4	00000000	 DCD         |??_C@_1KM@OLDBFOML@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  013e8		 |$LN101@fnBackLigh|
  013e8	00000000	 DCD         |??_C@_1CI@OIDDBANN@?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@|
  013ec		 |$LN102@fnBackLigh|
  013ec	00000000	 DCD         |??_C@_1FC@HCPFCFLF@?$AAi?$AAn?$AAs?$AAu?$AAf?$AAf?$AAi?$AAc?$AAi?$AAe?$AAn?$AAt?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAm@|
  013f0		 |$LN103@fnBackLigh|
  013f0	00000000	 DCD         |??_C@_1CO@OGOCCJBK@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAb?$AAN?$AAa?$AAm?$AAe?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  013f4		 |$LN104@fnBackLigh|
  013f4	00000000	 DCD         |??_C@_1CM@GDMLEGHK@?$AAR?$AAe?$AAa?$AAd?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  013f8		 |$LN105@fnBackLigh|
  013f8	00000000	 DCD         |??_C@_1FA@EOAKILLC@?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc@|
  013fc		 |$LN106@fnBackLigh|
  013fc	00000000	 DCD         |?g_pBacklight@@3PAVCBacklightRoot@@A|
  01400		 |$LN107@fnBackLigh|
  01400	00000000	 DCD         |??_C@_1DC@CMJAPHJD@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  01404		 |$LN108@fnBackLigh|
  01404	00000000	 DCD         |??_C@_1BA@CIILKELH@?$AAt?$AAo?$AA?5?$AAB?$AAa?$AAt?$AAt?$AA?$AA@|
  01408		 |$LN109@fnBackLigh|
  01408	00000000	 DCD         |??_C@_1M@DHFJJAKK@?$AAt?$AAo?$AA?5?$AAA?$AAC?$AA?$AA@|
  0140c		 |$LN110@fnBackLigh|
  0140c	00000000	 DCD         |??_C@_1EC@MGINNJGG@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5?$AAt?$AAo?$AA?1?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAA?$AAC?$AA?$AN?$AA?6@|
  01410		 |$LN111@fnBackLigh|
  01410	00000000	 DCD         |??_C@_1EA@EMEKIGIE@?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?5?$AAm?$AAd?$AAd?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  01414		 |$LN112@fnBackLigh|
  01414	00000000	 DCD         |??_C@_1EG@JDOEDDAC@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAC?$AAe?$AAF?$AAi?$AAn?$AAd?$AAF?$AAi?$AAr?$AAs?$AAt?$AAR?$AAe?$AAg?$AAC?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd@|
  01418		 |$LN113@fnBackLigh|
  01418	00000000	 DCD         |??_C@_1CO@MGKPHPG@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?2?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?$AA@|
  0141c		 |$LN114@fnBackLigh|
  0141c	00000000	 DCD         |??_C@_1EI@KAELLKGO@?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe@|
  01420		 |$LN115@fnBackLigh|
  01420	00000000	 DCD         |??_C@_1FO@GJDAPONO@?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AA?5?$AAP?$AAM?$AAC?$AAL?$AAA?$AAS?$AAS?$AA_?$AAD?$AAI?$AAS?$AAP?$AAL?$AAA?$AAY?$AA?5?$AAs?$AAt@|
  01424		 |$LN116@fnBackLigh|
  01424	00000000	 DCD         |??_C@_1EO@BHDHHEGO@?$AA?$HL?$AAE?$AAB?$AA9?$AA1?$AAC?$AA7?$AAC?$AA9?$AA?9?$AA8?$AAB?$AAF?$AA6?$AA?9?$AA4?$AAa?$AA2?$AAd?$AA?9?$AA9?$AAA?$AAB?$AA8?$AA?9?$AA6?$AA9?$AA7?$AA2?$AA4?$AAE?$AAE@|
  01428		 |$LN117@fnBackLigh|
  01428	00000000	 DCD         |??_C@_1EG@ICCAJICH@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?5?$AAq?$AAu?$AAe?$AAu?$AAe?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd@|
  0142c		 |$LN118@fnBackLigh|
  0142c	00000000	 DCD         |??_C@_1FE@PLLMHJCJ@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn@|
  01430		 |$LN119@fnBackLigh|
  01430	00000000	 DCD         |??_C@_1GI@KPCFIBGF@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc@|
  01434		 |$LN120@fnBackLigh|
  01434	00000000	 DCD         |??_C@_1DA@KHPGMJAB@?$AA?$CL?$AAf?$AAn?$AAB?$AAa?$AAc?$AAk?$AAL?$AAi?$AAg?$AAh?$AAt?$AAR?$AAe?$AAg?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  01438		 |$LN121@fnBackLigh|
  01438	00000000	 DCD         |__security_cookie|
  0143c		 |$M32778|

			 ENDP  ; |?fnBackLightThread@@YAKPAX@Z|, fnBackLightThread

	END
