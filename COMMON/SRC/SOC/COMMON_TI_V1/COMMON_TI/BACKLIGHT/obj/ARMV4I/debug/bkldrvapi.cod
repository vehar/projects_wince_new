; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\BACKLIGHT\bkldrvapi.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?g_pBacklight@@3PAVCBacklightRoot@@A| [ DATA ] ; g_pBacklight

  00000			 AREA	 |.bss|, NOINIT
|?g_pBacklight@@3PAVCBacklightRoot@@A| % 0x4		; g_pBacklight
	EXPORT	|??_C@_1BO@HCADNFBG@?$AA?9?$AAB?$AAK?$AAL?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@NELCCABD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAK?$AAL?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KE@LIHKCIOC@?$AAG?$AAe?$AAt?$AAP?$AAr?$AAo?$AAc?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAG?$AAe?$AAt?$AAS?$AAy?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@PCOFNLNE@?$AAG?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAE?$AAx?$AA2?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@CJKPFBEK@?$AAc?$AAo?$AAr?$AAe?$AAd?$AAl?$AAl?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@BBABBPBD@?$AAB?$AAL?$AAK?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAa?$AAl?$AAu?$AAe?$AAE?$AAx?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_19DINFBLAK@?$AAN?$AAa?$AAm?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@CDLEKDEK@?$AAB?$AAL?$AAK?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAO?$AAp?$AAe?$AAn?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAK?$AAe?$AAy?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAw@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IC@CJKPFLDL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAK?$AAL?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@PAIOFN@?$AA?$CL?$AAB?$AAK?$AAL?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?5?$AA?$CF?$AAs?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|BKL_Init|
	IMPORT	|CreateThread|
	IMPORT	|?fnBackLightThread@@YAKPAX@Z|		; fnBackLightThread
	IMPORT	|GetProcAddressW|
	IMPORT	|LoadLibraryW|
	IMPORT	|CreateEventW|
	IMPORT	|RegCloseKey|
	IMPORT	|RegQueryValueExW|
	IMPORT	|RegOpenKeyExW|
	IMPORT	|LocalAlloc|
	IMPORT	|?GetBacklightObject@@YAPAVCBacklightRoot@@XZ| ; GetBacklightObject
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
	IMPORT	|IsDVIMode|

  00000			 AREA	 |.pdata|, PDATA
|$T32755| DCD	|$LN41@BKL_Init|
	DCD	0x40014104
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\backlight\bkldrvapi.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@HCADNFBG@?$AA?9?$AAB?$AAK?$AAL?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "B", 0x0, "K", 0x0, "L", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@NELCCABD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAK?$AAL?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "K", 0x0, "L", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, " ", 0x0, "b", 0x0, "a", 0x0, "c", 0x0, "k", 0x0, "l"
	DCB	0x0, "i", 0x0, "g", 0x0, "h", 0x0, "t", 0x0, " ", 0x0, "o"
	DCB	0x0, "b", 0x0, "j", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KE@LIHKCIOC@?$AAG?$AAe?$AAt?$AAP?$AAr?$AAo?$AAc?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAG?$AAe?$AAt?$AAS?$AAy?$AAs@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c"
	DCB	0x0, "A", 0x0, "d", 0x0, "d", 0x0, "r", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "S", 0x0, "y"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "u", 0x0, "s", 0x0, "E", 0x0, "x", 0x0, "2"
	DCB	0x0, ".", 0x0, " ", 0x0, "A", 0x0, "s", 0x0, "s", 0x0, "u"
	DCB	0x0, "m", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "a"
	DCB	0x0, "l", 0x0, "w", 0x0, "a", 0x0, "y", 0x0, "s", 0x0, " "
	DCB	0x0, "o", 0x0, "n", 0x0, " ", 0x0, "A", 0x0, "C", 0x0, " "
	DCB	0x0, "p", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@PCOFNLNE@?$AAG?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAE?$AAx?$AA2?$AA?$AA@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "m", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "s", 0x0, "E", 0x0, "x", 0x0, "2", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@CJKPFBEK@?$AAc?$AAo?$AAr?$AAe?$AAd?$AAl?$AAl?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@| DCB "c"
	DCB	0x0, "o", 0x0, "r", 0x0, "e", 0x0, "d", 0x0, "l", 0x0, "l"
	DCB	0x0, ".", 0x0, "d", 0x0, "l", 0x0, "l", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@BBABBPBD@?$AAB?$AAL?$AAK?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAa?$AAl?$AAu?$AAe?$AAE?$AAx?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd@| DCB "B"
	DCB	0x0, "L", 0x0, "K", 0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "Q", 0x0, "u", 0x0, "e", 0x0, "r", 0x0, "y", 0x0, "V"
	DCB	0x0, "a", 0x0, "l", 0x0, "u", 0x0, "e", 0x0, "E", 0x0, "x"
	DCB	0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "w", 0x0, "i", 0x0, "t", 0x0, "h"
	DCB	0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_19DINFBLAK@?$AAN?$AAa?$AAm?$AAe?$AA?$AA@| DCB "N", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@CDLEKDEK@?$AAB?$AAL?$AAK?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAO?$AAp?$AAe?$AAn?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAK?$AAe?$AAy?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAw@| DCB "B"
	DCB	0x0, "L", 0x0, "K", 0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, ":", 0x0, " ", 0x0, "O", 0x0, "p", 0x0, "e"
	DCB	0x0, "n", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c"
	DCB	0x0, "e", 0x0, "K", 0x0, "e", 0x0, "y", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "w", 0x0, "i", 0x0, "t", 0x0, "h", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@CJKPFLDL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAK?$AAL?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "K", 0x0, "L", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, " ", 0x0, "B", 0x0, "K", 0x0, "L", 0x0, "_"
	DCB	0x0, "M", 0x0, "D", 0x0, "D", 0x0, "_", 0x0, "I", 0x0, "N"
	DCB	0x0, "F", 0x0, "O", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "s", 0x0, "t"
	DCB	0x0, "r", 0x0, "u", 0x0, "c", 0x0, "t", 0x0, "u", 0x0, "r"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@PAIOFN@?$AA?$CL?$AAB?$AAK?$AAL?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?5?$AA?$CF?$AAs?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "B", 0x0, "K", 0x0, "L", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, " ", 0x0, "%", 0x0, "s", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BKL_Init| PROC

; 75   : {   

  00000		 |$LN41@BKL_Init|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd080	 sub         sp, sp, #0x80
  00010		 |$M32752|

; 76   :     DWORD dwStatus, dwSize, dwType;
; 77   :     HKEY hkDevice = NULL;

  00010	e3a03000	 mov         r3, #0
  00014	e58d3014	 str         r3, [sp, #0x14]

; 78   :     BKL_MDD_INFO *pBKLinfo = NULL;

  00018	e3a03000	 mov         r3, #0
  0001c	e58d3010	 str         r3, [sp, #0x10]

; 79   : 
; 80   :     UNREFERENCED_PARAMETER(lpvBusContext);
; 81   :    
; 82   :     if (IsDVIMode())

  00020	eb000000	 bl          IsDVIMode
  00024	e58d0034	 str         r0, [sp, #0x34]
  00028	e59d3034	 ldr         r3, [sp, #0x34]
  0002c	e3530000	 cmp         r3, #0
  00030	0a000002	 beq         |$LN18@BKL_Init|

; 83   :         return 0;

  00034	e3a03000	 mov         r3, #0
  00038	e58d301c	 str         r3, [sp, #0x1C]
  0003c	ea00011f	 b           |$LN19@BKL_Init|
  00040		 |$LN18@BKL_Init|

; 84   :     
; 85   :     DEBUGMSG(ZONE_BACKLIGHT, (TEXT("+BKL_Init() context %s.\r\n"), pContext));

  00040	e59f348c	 ldr         r3, [pc, #0x48C]
  00044	e5933440	 ldr         r3, [r3, #0x440]
  00048	e3130001	 tst         r3, #1
  0004c	0a000005	 beq         |$LN21@BKL_Init|
  00050	e59d1088	 ldr         r1, [sp, #0x88]
  00054	e59f04a4	 ldr         r0, [pc, #0x4A4]
  00058	eb000000	 bl          NKDbgPrintfW
  0005c	e3a03001	 mov         r3, #1
  00060	e58d3038	 str         r3, [sp, #0x38]
  00064	ea000001	 b           |$LN22@BKL_Init|
  00068		 |$LN21@BKL_Init|
  00068	e3a03000	 mov         r3, #0
  0006c	e58d3038	 str         r3, [sp, #0x38]
  00070		 |$LN22@BKL_Init|

; 86   : 
; 87   : 
; 88   :     g_pBacklight = GetBacklightObject();

  00070	eb000000	 bl          |?GetBacklightObject@@YAPAVCBacklightRoot@@XZ|
  00074	e58d003c	 str         r0, [sp, #0x3C]
  00078	e59d203c	 ldr         r2, [sp, #0x3C]
  0007c	e59f345c	 ldr         r3, [pc, #0x45C]
  00080	e5832000	 str         r2, [r3]

; 89   :     if (g_pBacklight == NULL)

  00084	e59f3454	 ldr         r3, [pc, #0x454]
  00088	e5933000	 ldr         r3, [r3]
  0008c	e3530000	 cmp         r3, #0
  00090	1a000001	 bne         |$LN17@BKL_Init|
  00094	ea000100	 b           |$LN16@BKL_Init|

; 90   :     {
; 91   :         goto error;

  00098	ea0000ff	 b           |$error$32491|
  0009c		 |$LN17@BKL_Init|

; 92   :     }
; 93   : 
; 94   :     // Allocate enough storage for this instance of our backlight
; 95   :     pBKLinfo = (BKL_MDD_INFO *)LocalAlloc(LPTR, sizeof(BKL_MDD_INFO));

  0009c	e3a01f8d	 mov         r1, #0x8D, 30
  000a0	e3a00040	 mov         r0, #0x40
  000a4	eb000000	 bl          LocalAlloc
  000a8	e58d0040	 str         r0, [sp, #0x40]
  000ac	e59d3040	 ldr         r3, [sp, #0x40]
  000b0	e58d3010	 str         r3, [sp, #0x10]

; 96   :     if (pBKLinfo == NULL)

  000b4	e59d3010	 ldr         r3, [sp, #0x10]
  000b8	e3530000	 cmp         r3, #0
  000bc	1a00000c	 bne         |$LN15@BKL_Init|

; 97   :     {
; 98   :         DEBUGMSG(ZONE_ERROR, (L"ERROR: BKL_Init: "
; 99   :             L"Failed allocate BKL_MDD_INFO device structure\r\n" ));

  000c0	e59f340c	 ldr         r3, [pc, #0x40C]
  000c4	e5933440	 ldr         r3, [r3, #0x440]
  000c8	e3130001	 tst         r3, #1
  000cc	0a000004	 beq         |$LN23@BKL_Init|
  000d0	e59f0424	 ldr         r0, [pc, #0x424]
  000d4	eb000000	 bl          NKDbgPrintfW
  000d8	e3a03001	 mov         r3, #1
  000dc	e58d3044	 str         r3, [sp, #0x44]
  000e0	ea000001	 b           |$LN24@BKL_Init|
  000e4		 |$LN23@BKL_Init|
  000e4	e3a03000	 mov         r3, #0
  000e8	e58d3044	 str         r3, [sp, #0x44]
  000ec		 |$LN24@BKL_Init|

; 100  :         goto error;

  000ec	ea0000ea	 b           |$LN14@BKL_Init|
  000f0	ea0000e9	 b           |$error$32491|
  000f4		 |$LN15@BKL_Init|

; 101  :     }
; 102  : 
; 103  :     // get device name from registry
; 104  :     dwStatus = RegOpenKeyEx(HKEY_LOCAL_MACHINE, pContext, 0, 0, &hkDevice);

  000f4	e28d3014	 add         r3, sp, #0x14
  000f8	e58d3000	 str         r3, [sp]
  000fc	e3a03000	 mov         r3, #0
  00100	e3a02000	 mov         r2, #0
  00104	e59d1088	 ldr         r1, [sp, #0x88]
  00108	e3a0010a	 mov         r0, #0xA, 2
  0010c	eb000000	 bl          RegOpenKeyExW
  00110	e58d0048	 str         r0, [sp, #0x48]
  00114	e59d3048	 ldr         r3, [sp, #0x48]
  00118	e58d3018	 str         r3, [sp, #0x18]

; 105  :     if(dwStatus != ERROR_SUCCESS) 

  0011c	e59d3018	 ldr         r3, [sp, #0x18]
  00120	e3530000	 cmp         r3, #0
  00124	0a00000d	 beq         |$LN13@BKL_Init|

; 106  :     {
; 107  :         DEBUGMSG(ZONE_ERROR, (TEXT("BLK_Init: OpenDeviceKey failed with %u\r\n"), dwStatus));

  00128	e59f33a4	 ldr         r3, [pc, #0x3A4]
  0012c	e5933440	 ldr         r3, [r3, #0x440]
  00130	e3130001	 tst         r3, #1
  00134	0a000005	 beq         |$LN25@BKL_Init|
  00138	e59d1018	 ldr         r1, [sp, #0x18]
  0013c	e59f0394	 ldr         r0, [pc, #0x394]
  00140	eb000000	 bl          NKDbgPrintfW
  00144	e3a03001	 mov         r3, #1
  00148	e58d304c	 str         r3, [sp, #0x4C]
  0014c	ea000001	 b           |$LN26@BKL_Init|
  00150		 |$LN25@BKL_Init|
  00150	e3a03000	 mov         r3, #0
  00154	e58d304c	 str         r3, [sp, #0x4C]
  00158		 |$LN26@BKL_Init|

; 108  :         goto error;

  00158	ea0000cf	 b           |$LN12@BKL_Init|
  0015c	ea0000ce	 b           |$error$32491|
  00160		 |$LN13@BKL_Init|

; 109  :     }
; 110  :     dwSize = sizeof(pBKLinfo->szName);

  00160	e3a03c01	 mov         r3, #1, 24
  00164	e58d300c	 str         r3, [sp, #0xC]

; 111  :     dwStatus = RegQueryValueEx(hkDevice, DEVLOAD_DEVNAME_VALNAME, NULL, &dwType, (LPBYTE)pBKLinfo->szName, &dwSize);

  00168	e28d300c	 add         r3, sp, #0xC
  0016c	e58d3004	 str         r3, [sp, #4]
  00170	e59d3010	 ldr         r3, [sp, #0x10]
  00174	e58d3000	 str         r3, [sp]
  00178	e28d3008	 add         r3, sp, #8
  0017c	e3a02000	 mov         r2, #0
  00180	e59f1370	 ldr         r1, [pc, #0x370]
  00184	e59d0014	 ldr         r0, [sp, #0x14]
  00188	eb000000	 bl          RegQueryValueExW
  0018c	e58d0050	 str         r0, [sp, #0x50]
  00190	e59d3050	 ldr         r3, [sp, #0x50]
  00194	e58d3018	 str         r3, [sp, #0x18]

; 112  :     if(dwStatus != ERROR_SUCCESS)

  00198	e59d3018	 ldr         r3, [sp, #0x18]
  0019c	e3530000	 cmp         r3, #0
  001a0	0a00000d	 beq         |$LN11@BKL_Init|

; 113  :     {
; 114  :         DEBUGMSG(ZONE_ERROR, (TEXT("BLK_Init: RegQueryValueEx failed with %u\r\n"), dwStatus));

  001a4	e59f3328	 ldr         r3, [pc, #0x328]
  001a8	e5933440	 ldr         r3, [r3, #0x440]
  001ac	e3130001	 tst         r3, #1
  001b0	0a000005	 beq         |$LN27@BKL_Init|
  001b4	e59d1018	 ldr         r1, [sp, #0x18]
  001b8	e59f0334	 ldr         r0, [pc, #0x334]
  001bc	eb000000	 bl          NKDbgPrintfW
  001c0	e3a03001	 mov         r3, #1
  001c4	e58d3054	 str         r3, [sp, #0x54]
  001c8	ea000001	 b           |$LN28@BKL_Init|
  001cc		 |$LN27@BKL_Init|
  001cc	e3a03000	 mov         r3, #0
  001d0	e58d3054	 str         r3, [sp, #0x54]
  001d4		 |$LN28@BKL_Init|

; 115  :         goto error;

  001d4	ea0000b0	 b           |$LN10@BKL_Init|
  001d8	ea0000af	 b           |$error$32491|
  001dc		 |$LN11@BKL_Init|

; 116  : 
; 117  :     }
; 118  :     RegCloseKey(hkDevice);

  001dc	e59d0014	 ldr         r0, [sp, #0x14]
  001e0	eb000000	 bl          RegCloseKey

; 119  :     hkDevice = NULL;

  001e4	e3a03000	 mov         r3, #0
  001e8	e58d3014	 str         r3, [sp, #0x14]

; 120  : 
; 121  :     // create exit event to be set by deinit:
; 122  :     pBKLinfo->hExitEvent = CreateEvent(NULL, FALSE, FALSE, NULL);

  001ec	e3a03000	 mov         r3, #0
  001f0	e3a02000	 mov         r2, #0
  001f4	e3a01000	 mov         r1, #0
  001f8	e3a00000	 mov         r0, #0
  001fc	eb000000	 bl          CreateEventW
  00200	e58d0058	 str         r0, [sp, #0x58]
  00204	e59d3010	 ldr         r3, [sp, #0x10]
  00208	e2832f87	 add         r2, r3, #0x87, 30
  0020c	e59d3058	 ldr         r3, [sp, #0x58]
  00210	e5823000	 str         r3, [r2]

; 123  :     if(NULL == pBKLinfo->hExitEvent)

  00214	e59d3010	 ldr         r3, [sp, #0x10]
  00218	e2833f87	 add         r3, r3, #0x87, 30
  0021c	e5933000	 ldr         r3, [r3]
  00220	e3530000	 cmp         r3, #0
  00224	1a00000d	 bne         |$LN9@BKL_Init|

; 124  :     {
; 125  :         DEBUGMSG(ZONE_ERROR, (TEXT("BLK_Init: OpenDeviceKey failed with %u\r\n"), dwStatus));

  00228	e59f32a4	 ldr         r3, [pc, #0x2A4]
  0022c	e5933440	 ldr         r3, [r3, #0x440]
  00230	e3130001	 tst         r3, #1
  00234	0a000005	 beq         |$LN29@BKL_Init|
  00238	e59d1018	 ldr         r1, [sp, #0x18]
  0023c	e59f0294	 ldr         r0, [pc, #0x294]
  00240	eb000000	 bl          NKDbgPrintfW
  00244	e3a03001	 mov         r3, #1
  00248	e58d305c	 str         r3, [sp, #0x5C]
  0024c	ea000001	 b           |$LN30@BKL_Init|
  00250		 |$LN29@BKL_Init|
  00250	e3a03000	 mov         r3, #0
  00254	e58d305c	 str         r3, [sp, #0x5C]
  00258		 |$LN30@BKL_Init|

; 126  :         goto error;

  00258	ea00008f	 b           |$LN8@BKL_Init|
  0025c	ea00008e	 b           |$error$32491|
  00260		 |$LN9@BKL_Init|

; 127  :     }
; 128  : 
; 129  :     pBKLinfo->hCoreDll = LoadLibrary(TEXT("coredll.dll"));

  00260	e59f0288	 ldr         r0, [pc, #0x288]
  00264	eb000000	 bl          LoadLibraryW
  00268	e58d0060	 str         r0, [sp, #0x60]
  0026c	e59d3010	 ldr         r3, [sp, #0x10]
  00270	e2832e23	 add         r2, r3, #0x23, 28
  00274	e59d3060	 ldr         r3, [sp, #0x60]
  00278	e5823000	 str         r3, [r2]

; 130  :     if (NULL != pBKLinfo->hCoreDll) 

  0027c	e59d3010	 ldr         r3, [sp, #0x10]
  00280	e2833e23	 add         r3, r3, #0x23, 28
  00284	e5933000	 ldr         r3, [r3]
  00288	e3530000	 cmp         r3, #0
  0028c	0a000019	 beq         |$LN7@BKL_Init|

; 131  :     {
; 132  :         pBKLinfo->pfnGetSystemPowerStatusEx2 = (PFN_GetSystemPowerStatusEx2)
; 133  :             GetProcAddress(pBKLinfo->hCoreDll, TEXT("GetSystemPowerStatusEx2"));

  00290	e59f1254	 ldr         r1, [pc, #0x254]
  00294	e59d3010	 ldr         r3, [sp, #0x10]
  00298	e2833e23	 add         r3, r3, #0x23, 28
  0029c	e5930000	 ldr         r0, [r3]
  002a0	eb000000	 bl          GetProcAddressW
  002a4	e58d0064	 str         r0, [sp, #0x64]
  002a8	e59d3010	 ldr         r3, [sp, #0x10]
  002ac	e2832f8b	 add         r2, r3, #0x8B, 30
  002b0	e59d3064	 ldr         r3, [sp, #0x64]
  002b4	e5823000	 str         r3, [r2]

; 134  :         if (!pBKLinfo->pfnGetSystemPowerStatusEx2) 

  002b8	e59d3010	 ldr         r3, [sp, #0x10]
  002bc	e2833f8b	 add         r3, r3, #0x8B, 30
  002c0	e5933000	 ldr         r3, [r3]
  002c4	e3530000	 cmp         r3, #0
  002c8	1a00000a	 bne         |$LN6@BKL_Init|

; 135  :         {
; 136  :             DEBUGMSG(ZONE_WARN,  (TEXT("GetProcAddress failed for GetSystemPowerStatusEx2. Assuming always on AC power.\r\n")));

  002cc	e59f3200	 ldr         r3, [pc, #0x200]
  002d0	e5933440	 ldr         r3, [r3, #0x440]
  002d4	e3130002	 tst         r3, #2
  002d8	0a000004	 beq         |$LN31@BKL_Init|
  002dc	e59f0204	 ldr         r0, [pc, #0x204]
  002e0	eb000000	 bl          NKDbgPrintfW
  002e4	e3a03001	 mov         r3, #1
  002e8	e58d3068	 str         r3, [sp, #0x68]
  002ec	ea000001	 b           |$LN32@BKL_Init|
  002f0		 |$LN31@BKL_Init|
  002f0	e3a03000	 mov         r3, #0
  002f4	e58d3068	 str         r3, [sp, #0x68]
  002f8		 |$LN32@BKL_Init|
  002f8		 |$LN6@BKL_Init|
  002f8		 |$LN7@BKL_Init|

; 137  :         }
; 138  :     }
; 139  : 
; 140  : //MYS     pBKLinfo->dwPddContext = BacklightInit(pContext, lpvBusContext, &(pBKLinfo->dwCurState));
; 141  :     if (g_pBacklight->Initialize(pContext) == FALSE)

  002f8	e59d1088	 ldr         r1, [sp, #0x88]
  002fc	e59f31dc	 ldr         r3, [pc, #0x1DC]
  00300	e5933000	 ldr         r3, [r3]
  00304	e5932000	 ldr         r2, [r3]
  00308	e59f31d0	 ldr         r3, [pc, #0x1D0]
  0030c	e5930000	 ldr         r0, [r3]
  00310	e5923000	 ldr         r3, [r2]
  00314	e1a0e00f	 mov         lr, pc
  00318	e12fff13	 bx          r3
  0031c	e58d006c	 str         r0, [sp, #0x6C]
  00320	e59d306c	 ldr         r3, [sp, #0x6C]
  00324	e3530000	 cmp         r3, #0
  00328	1a00000c	 bne         |$LN5@BKL_Init|

; 142  :         {
; 143  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: BKL_Init: "
; 144  :             L"Failed to initialize backlight object\r\n"
; 145  :             ));

  0032c	e59f31a0	 ldr         r3, [pc, #0x1A0]
  00330	e5933440	 ldr         r3, [r3, #0x440]
  00334	e3130001	 tst         r3, #1
  00338	0a000004	 beq         |$LN33@BKL_Init|
  0033c	e59f01a0	 ldr         r0, [pc, #0x1A0]
  00340	eb000000	 bl          NKDbgPrintfW
  00344	e3a03001	 mov         r3, #1
  00348	e58d3070	 str         r3, [sp, #0x70]
  0034c	ea000001	 b           |$LN34@BKL_Init|
  00350		 |$LN33@BKL_Init|
  00350	e3a03000	 mov         r3, #0
  00354	e58d3070	 str         r3, [sp, #0x70]
  00358		 |$LN34@BKL_Init|

; 146  :         goto error;

  00358	ea00004f	 b           |$LN4@BKL_Init|
  0035c	ea00004e	 b           |$error$32491|
  00360		 |$LN5@BKL_Init|

; 147  :         }
; 148  :     
; 149  :     // if there are no user settings for this, we act as if they are selected:
; 150  :     pBKLinfo->fBatteryTapOn = TRUE;

  00360	e59d3010	 ldr         r3, [sp, #0x10]
  00364	e2832c02	 add         r2, r3, #2, 24
  00368	e3a03001	 mov         r3, #1
  0036c	e5823000	 str         r3, [r2]

; 151  :     pBKLinfo->fExternalTapOn = TRUE;

  00370	e59d3010	 ldr         r3, [sp, #0x10]
  00374	e2832f81	 add         r2, r3, #0x81, 30
  00378	e3a03001	 mov         r3, #1
  0037c	e5823000	 str         r3, [r2]

; 152  : 
; 153  :     // in case there is no setting for this:
; 154  :     pBKLinfo->dwBattTimeout = 0;

  00380	e59d3010	 ldr         r3, [sp, #0x10]
  00384	e2832f82	 add         r2, r3, #0x82, 30
  00388	e3a03000	 mov         r3, #0
  0038c	e5823000	 str         r3, [r2]

; 155  :     pBKLinfo->dwACTimeout = 0;

  00390	e59d3010	 ldr         r3, [sp, #0x10]
  00394	e2832f83	 add         r2, r3, #0x83, 30
  00398	e3a03000	 mov         r3, #0
  0039c	e5823000	 str         r3, [r2]

; 156  : 
; 157  :     pBKLinfo->dwCurState = D0;

  003a0	e59d3010	 ldr         r3, [sp, #0x10]
  003a4	e2832f85	 add         r2, r3, #0x85, 30
  003a8	e3a03000	 mov         r3, #0
  003ac	e5823000	 str         r3, [r2]

; 158  :     g_pBacklight->SetPowerState(pBKLinfo->dwCurState);

  003b0	e59d3010	 ldr         r3, [sp, #0x10]
  003b4	e2833f85	 add         r3, r3, #0x85, 30
  003b8	e5931000	 ldr         r1, [r3]
  003bc	e59f311c	 ldr         r3, [pc, #0x11C]
  003c0	e5933000	 ldr         r3, [r3]
  003c4	e5933000	 ldr         r3, [r3]
  003c8	e2832008	 add         r2, r3, #8
  003cc	e59f310c	 ldr         r3, [pc, #0x10C]
  003d0	e5930000	 ldr         r0, [r3]
  003d4	e5923000	 ldr         r3, [r2]
  003d8	e1a0e00f	 mov         lr, pc
  003dc	e12fff13	 bx          r3

; 159  :  
; 160  :     //create thread to wait for reg / power source changes:
; 161  :     pBKLinfo->hBklThread = CreateThread(0, 0, (LPTHREAD_START_ROUTINE)fnBackLightThread, pBKLinfo, 0, NULL);

  003e0	e3a03000	 mov         r3, #0
  003e4	e58d3004	 str         r3, [sp, #4]
  003e8	e3a03000	 mov         r3, #0
  003ec	e58d3000	 str         r3, [sp]
  003f0	e59d3010	 ldr         r3, [sp, #0x10]
  003f4	e59f20e0	 ldr         r2, [pc, #0xE0]
  003f8	e3a01000	 mov         r1, #0
  003fc	e3a00000	 mov         r0, #0
  00400	eb000000	 bl          CreateThread
  00404	e58d0074	 str         r0, [sp, #0x74]
  00408	e59d3010	 ldr         r3, [sp, #0x10]
  0040c	e2832e22	 add         r2, r3, #0x22, 28
  00410	e59d3074	 ldr         r3, [sp, #0x74]
  00414	e5823000	 str         r3, [r2]

; 162  :     if(NULL == pBKLinfo->hBklThread)

  00418	e59d3010	 ldr         r3, [sp, #0x10]
  0041c	e2833e22	 add         r3, r3, #0x22, 28
  00420	e5933000	 ldr         r3, [r3]
  00424	e3530000	 cmp         r3, #0
  00428	1a00000d	 bne         |$LN3@BKL_Init|

; 163  :     {
; 164  :         DEBUGMSG(ZONE_ERROR, (TEXT("BLK_Init: OpenDeviceKey failed with %u\r\n"), dwStatus));

  0042c	e59f30a0	 ldr         r3, [pc, #0xA0]
  00430	e5933440	 ldr         r3, [r3, #0x440]
  00434	e3130001	 tst         r3, #1
  00438	0a000005	 beq         |$LN35@BKL_Init|
  0043c	e59d1018	 ldr         r1, [sp, #0x18]
  00440	e59f0090	 ldr         r0, [pc, #0x90]
  00444	eb000000	 bl          NKDbgPrintfW
  00448	e3a03001	 mov         r3, #1
  0044c	e58d3078	 str         r3, [sp, #0x78]
  00450	ea000001	 b           |$LN36@BKL_Init|
  00454		 |$LN35@BKL_Init|
  00454	e3a03000	 mov         r3, #0
  00458	e58d3078	 str         r3, [sp, #0x78]
  0045c		 |$LN36@BKL_Init|

; 165  :         goto error;

  0045c	ea00000e	 b           |$LN2@BKL_Init|
  00460	ea00000d	 b           |$error$32491|
  00464		 |$LN3@BKL_Init|

; 166  :     }
; 167  : 
; 168  :     DEBUGMSG(ZONE_BACKLIGHT, (TEXT("-BKL_Init().\r\n")));

  00464	e59f3068	 ldr         r3, [pc, #0x68]
  00468	e5933440	 ldr         r3, [r3, #0x440]
  0046c	e3130001	 tst         r3, #1
  00470	0a000004	 beq         |$LN37@BKL_Init|
  00474	e59f0054	 ldr         r0, [pc, #0x54]
  00478	eb000000	 bl          NKDbgPrintfW
  0047c	e3a03001	 mov         r3, #1
  00480	e58d307c	 str         r3, [sp, #0x7C]
  00484	ea000001	 b           |$LN38@BKL_Init|
  00488		 |$LN37@BKL_Init|
  00488	e3a03000	 mov         r3, #0
  0048c	e58d307c	 str         r3, [sp, #0x7C]
  00490		 |$LN38@BKL_Init|

; 169  : 
; 170  :     return (DWORD) pBKLinfo;

  00490	e59d3010	 ldr         r3, [sp, #0x10]
  00494	e58d301c	 str         r3, [sp, #0x1C]
  00498	ea000008	 b           |$LN19@BKL_Init|
  0049c		 |$LN2@BKL_Init|
  0049c		 |$LN4@BKL_Init|
  0049c		 |$LN8@BKL_Init|
  0049c		 |$LN10@BKL_Init|
  0049c		 |$LN12@BKL_Init|
  0049c		 |$LN14@BKL_Init|
  0049c		 |$LN16@BKL_Init|
  0049c		 |$error$32491|

; 171  : 
; 172  : error:
; 173  :     if(hkDevice)

  0049c	e59d3014	 ldr         r3, [sp, #0x14]
  004a0	e3530000	 cmp         r3, #0
  004a4	0a000001	 beq         |$LN1@BKL_Init|

; 174  :     {
; 175  :         RegCloseKey(hkDevice);

  004a8	e59d0014	 ldr         r0, [sp, #0x14]
  004ac	eb000000	 bl          RegCloseKey
  004b0		 |$LN1@BKL_Init|

; 176  :     }
; 177  : 
; 178  :     FreeContext(pBKLinfo);    

  004b0	e59d0010	 ldr         r0, [sp, #0x10]
  004b4	eb000000	 bl          |?FreeContext@@YAXPAUBKL_MDD_INFO@@@Z|

; 179  : 
; 180  :     return 0;

  004b8	e3a03000	 mov         r3, #0
  004bc	e58d301c	 str         r3, [sp, #0x1C]
  004c0		 |$LN19@BKL_Init|

; 181  : 
; 182  : }

  004c0	e59d001c	 ldr         r0, [sp, #0x1C]
  004c4	e28dd080	 add         sp, sp, #0x80
  004c8	e89d6000	 ldmia       sp, {sp, lr}
  004cc	e12fff1e	 bx          lr
  004d0		 |$LN42@BKL_Init|
  004d0		 |$LN43@BKL_Init|
  004d0	00000000	 DCD         |??_C@_1BO@HCADNFBG@?$AA?9?$AAB?$AAK?$AAL?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  004d4		 |$LN44@BKL_Init|
  004d4	00000000	 DCD         |dpCurSettings|
  004d8		 |$LN45@BKL_Init|
  004d8	00000000	 DCD         |??_C@_1FC@CDLEKDEK@?$AAB?$AAL?$AAK?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAO?$AAp?$AAe?$AAn?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAK?$AAe?$AAy?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAw@|
  004dc		 |$LN46@BKL_Init|
  004dc	00000000	 DCD         |?fnBackLightThread@@YAKPAX@Z|
  004e0		 |$LN47@BKL_Init|
  004e0	00000000	 DCD         |?g_pBacklight@@3PAVCBacklightRoot@@A|
  004e4		 |$LN48@BKL_Init|
  004e4	00000000	 DCD         |??_C@_1HC@NELCCABD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAK?$AAL?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi@|
  004e8		 |$LN49@BKL_Init|
  004e8	00000000	 DCD         |??_C@_1KE@LIHKCIOC@?$AAG?$AAe?$AAt?$AAP?$AAr?$AAo?$AAc?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAG?$AAe?$AAt?$AAS?$AAy?$AAs@|
  004ec		 |$LN50@BKL_Init|
  004ec	00000000	 DCD         |??_C@_1DA@PCOFNLNE@?$AAG?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAE?$AAx?$AA2?$AA?$AA@|
  004f0		 |$LN51@BKL_Init|
  004f0	00000000	 DCD         |??_C@_1BI@CJKPFBEK@?$AAc?$AAo?$AAr?$AAe?$AAd?$AAl?$AAl?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@|
  004f4		 |$LN52@BKL_Init|
  004f4	00000000	 DCD         |??_C@_1FG@BBABBPBD@?$AAB?$AAL?$AAK?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAa?$AAl?$AAu?$AAe?$AAE?$AAx?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd@|
  004f8		 |$LN53@BKL_Init|
  004f8	00000000	 DCD         |??_C@_19DINFBLAK@?$AAN?$AAa?$AAm?$AAe?$AA?$AA@|
  004fc		 |$LN54@BKL_Init|
  004fc	00000000	 DCD         |??_C@_1IC@CJKPFLDL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAK?$AAL?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe@|
  00500		 |$LN55@BKL_Init|
  00500	00000000	 DCD         |??_C@_1DE@PAIOFN@?$AA?$CL?$AAB?$AAK?$AAL?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?5?$AA?$CF?$AAs?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  00504		 |$M32753|

			 ENDP  ; |BKL_Init|

	EXPORT	|SetEvent|
	IMPORT	|LocalFree|
	IMPORT	|FreeLibrary|
	IMPORT	|CloseHandle|
	IMPORT	|WaitForSingleObject|

  00008			 AREA	 |.pdata|, PDATA
|$T32774| DCD	|$LN9@FreeContex|
	DCD	0x40003c03
; Function compile flags: /Odtp

  00504			 AREA	 |.text|, CODE, ARM

  00504		 |?FreeContext@@YAXPAUBKL_MDD_INFO@@@Z| PROC ; FreeContext

; 34   : {

  00504		 |$LN9@FreeContex|
  00504	e1a0c00d	 mov         r12, sp
  00508	e92d0001	 stmdb       sp!, {r0}
  0050c	e92d5000	 stmdb       sp!, {r12, lr}
  00510		 |$M32771|

; 35   :     if(pBKLinfo)

  00510	e59d3008	 ldr         r3, [sp, #8]
  00514	e3530000	 cmp         r3, #0
  00518	0a000032	 beq         |$LN4@FreeContex|

; 36   :     {
; 37   :         if(pBKLinfo->hBklThread)

  0051c	e59d3008	 ldr         r3, [sp, #8]
  00520	e2833e22	 add         r3, r3, #0x22, 28
  00524	e5933000	 ldr         r3, [r3]
  00528	e3530000	 cmp         r3, #0
  0052c	0a000010	 beq         |$LN3@FreeContex|

; 38   :         {
; 39   :             // Thread has begun - wait for it to finish
; 40   :             pBKLinfo->fExit = TRUE;

  00530	e59d3008	 ldr         r3, [sp, #8]
  00534	e2832f8a	 add         r2, r3, #0x8A, 30
  00538	e3a03001	 mov         r3, #1
  0053c	e5823000	 str         r3, [r2]

; 41   :             SetEvent(pBKLinfo->hExitEvent);

  00540	e59d3008	 ldr         r3, [sp, #8]
  00544	e2833f87	 add         r3, r3, #0x87, 30
  00548	e5930000	 ldr         r0, [r3]
  0054c	eb000000	 bl          SetEvent

; 42   :             WaitForSingleObject(pBKLinfo->hBklThread, INFINITE);

  00550	e3e01000	 mvn         r1, #0
  00554	e59d3008	 ldr         r3, [sp, #8]
  00558	e2833e22	 add         r3, r3, #0x22, 28
  0055c	e5930000	 ldr         r0, [r3]
  00560	eb000000	 bl          WaitForSingleObject

; 43   :             CloseHandle(pBKLinfo->hBklThread);

  00564	e59d3008	 ldr         r3, [sp, #8]
  00568	e2833e22	 add         r3, r3, #0x22, 28
  0056c	e5930000	 ldr         r0, [r3]
  00570	eb000000	 bl          CloseHandle
  00574		 |$LN3@FreeContex|

; 44   :         }
; 45   :         
; 46   :         if(pBKLinfo->hExitEvent)

  00574	e59d3008	 ldr         r3, [sp, #8]
  00578	e2833f87	 add         r3, r3, #0x87, 30
  0057c	e5933000	 ldr         r3, [r3]
  00580	e3530000	 cmp         r3, #0
  00584	0a000003	 beq         |$LN2@FreeContex|

; 47   :         {
; 48   :             CloseHandle(pBKLinfo->hExitEvent);

  00588	e59d3008	 ldr         r3, [sp, #8]
  0058c	e2833f87	 add         r3, r3, #0x87, 30
  00590	e5930000	 ldr         r0, [r3]
  00594	eb000000	 bl          CloseHandle
  00598		 |$LN2@FreeContex|

; 49   :         }
; 50   :         
; 51   :          g_pBacklight->Uninitialize();

  00598	e59f3050	 ldr         r3, [pc, #0x50]
  0059c	e5933000	 ldr         r3, [r3]
  005a0	e5933000	 ldr         r3, [r3]
  005a4	e2832004	 add         r2, r3, #4
  005a8	e59f3040	 ldr         r3, [pc, #0x40]
  005ac	e5930000	 ldr         r0, [r3]
  005b0	e5923000	 ldr         r3, [r2]
  005b4	e1a0e00f	 mov         lr, pc
  005b8	e12fff13	 bx          r3

; 52   : 
; 53   :         if (pBKLinfo->hCoreDll) 

  005bc	e59d3008	 ldr         r3, [sp, #8]
  005c0	e2833e23	 add         r3, r3, #0x23, 28
  005c4	e5933000	 ldr         r3, [r3]
  005c8	e3530000	 cmp         r3, #0
  005cc	0a000003	 beq         |$LN1@FreeContex|

; 54   :         {
; 55   :             FreeLibrary(pBKLinfo->hCoreDll);

  005d0	e59d3008	 ldr         r3, [sp, #8]
  005d4	e2833e23	 add         r3, r3, #0x23, 28
  005d8	e5930000	 ldr         r0, [r3]
  005dc	eb000000	 bl          FreeLibrary
  005e0		 |$LN1@FreeContex|

; 56   :         }
; 57   :             
; 58   : 
; 59   :         LocalFree(pBKLinfo);

  005e0	e59d0008	 ldr         r0, [sp, #8]
  005e4	eb000000	 bl          LocalFree
  005e8		 |$LN4@FreeContex|

; 60   :     }
; 61   : }

  005e8	e89d6000	 ldmia       sp, {sp, lr}
  005ec	e12fff1e	 bx          lr
  005f0		 |$LN10@FreeContex|
  005f0		 |$LN11@FreeContex|
  005f0	00000000	 DCD         |?g_pBacklight@@3PAVCBacklightRoot@@A|
  005f4		 |$M32772|

			 ENDP  ; |?FreeContext@@YAXPAUBKL_MDD_INFO@@@Z|, FreeContext

	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T32782| DCD	|$LN5@SetEvent|
	DCD	0x40000e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M32779|

; 236  : 	return EventModify(h,EVENT_SET);

  00010	e3a01003	 mov         r1, #3
  00014	e59d0010	 ldr         r0, [sp, #0x10]
  00018	eb000000	 bl          EventModify
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 237  : }

  00028	e59d0000	 ldr         r0, [sp]
  0002c	e28dd008	 add         sp, sp, #8
  00030	e89d6000	 ldmia       sp, {sp, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M32780|

			 ENDP  ; |SetEvent|

	EXPORT	|??_C@_1FO@NOEPHHN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAK?$AAL?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@KAKJLMHF@?$AAB?$AAK?$AAL?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|BKL_Deinit|
	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00010			 AREA	 |.pdata|, PDATA
|$T32795| DCD	|$LN11@BKL_Deinit|
	DCD	0x40003904
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\backlight\bkldrvapi.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@NOEPHHN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAK?$AAL?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "K", 0x0, "L", 0x0, "_", 0x0, "D", 0x0, "e"
	DCB	0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, " "
	DCB	0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@KAKJLMHF@?$AAB?$AAK?$AAL?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "K", 0x0, "L", 0x0, "_", 0x0, "D", 0x0, "e", 0x0, "i"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  005f4			 AREA	 |.text|, CODE, ARM

  005f4		 |BKL_Deinit| PROC

; 187  : {

  005f4		 |$LN11@BKL_Deinit|
  005f4	e1a0c00d	 mov         r12, sp
  005f8	e92d0001	 stmdb       sp!, {r0}
  005fc	e92d5000	 stmdb       sp!, {r12, lr}
  00600	e24dd014	 sub         sp, sp, #0x14
  00604		 |$M32792|

; 188  :     BKL_MDD_INFO *pBKLinfo = NULL;

  00604	e3a03000	 mov         r3, #0
  00608	e58d3000	 str         r3, [sp]

; 189  :     DEBUGMSG(ZONE_BACKLIGHT, (TEXT("BKL_Deinit().\r\n")));

  0060c	e59f30bc	 ldr         r3, [pc, #0xBC]
  00610	e5933440	 ldr         r3, [r3, #0x440]
  00614	e3130001	 tst         r3, #1
  00618	0a000004	 beq         |$LN5@BKL_Deinit|
  0061c	e59f00b0	 ldr         r0, [pc, #0xB0]
  00620	eb000000	 bl          NKDbgPrintfW
  00624	e3a03001	 mov         r3, #1
  00628	e58d300c	 str         r3, [sp, #0xC]
  0062c	ea000001	 b           |$LN6@BKL_Deinit|
  00630		 |$LN5@BKL_Deinit|
  00630	e3a03000	 mov         r3, #0
  00634	e58d300c	 str         r3, [sp, #0xC]
  00638		 |$LN6@BKL_Deinit|

; 190  : 
; 191  :     // Verify our context
; 192  :     if(! dwContext)

  00638	e59d301c	 ldr         r3, [sp, #0x1C]
  0063c	e3530000	 cmp         r3, #0
  00640	1a00000d	 bne         |$LN2@BKL_Deinit|

; 193  :     {
; 194  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: BKL_Deinit: "
; 195  :             L"Incorrect context paramer\r\n" ));

  00644	e59f3084	 ldr         r3, [pc, #0x84]
  00648	e5933440	 ldr         r3, [r3, #0x440]
  0064c	e3130001	 tst         r3, #1
  00650	0a000004	 beq         |$LN7@BKL_Deinit|
  00654	e59f0070	 ldr         r0, [pc, #0x70]
  00658	eb000000	 bl          NKDbgPrintfW
  0065c	e3a03001	 mov         r3, #1
  00660	e58d3010	 str         r3, [sp, #0x10]
  00664	ea000001	 b           |$LN8@BKL_Deinit|
  00668		 |$LN7@BKL_Deinit|
  00668	e3a03000	 mov         r3, #0
  0066c	e58d3010	 str         r3, [sp, #0x10]
  00670		 |$LN8@BKL_Deinit|

; 196  : 
; 197  :         return FALSE;

  00670	e3a03000	 mov         r3, #0
  00674	e58d3008	 str         r3, [sp, #8]
  00678	ea00000e	 b           |$LN3@BKL_Deinit|
  0067c		 |$LN2@BKL_Deinit|

; 198  :     }
; 199  : 
; 200  :     pBKLinfo = (BKL_MDD_INFO *) dwContext;

  0067c	e59d301c	 ldr         r3, [sp, #0x1C]
  00680	e58d3000	 str         r3, [sp]

; 201  : 
; 202  :     FreeContext(pBKLinfo);

  00684	e59d0000	 ldr         r0, [sp]
  00688	eb000000	 bl          |?FreeContext@@YAXPAUBKL_MDD_INFO@@@Z|

; 203  : 
; 204  :     if (g_pBacklight)

  0068c	e59f3034	 ldr         r3, [pc, #0x34]
  00690	e5933000	 ldr         r3, [r3]
  00694	e3530000	 cmp         r3, #0
  00698	0a000004	 beq         |$LN1@BKL_Deinit|

; 205  :     {
; 206  :         delete g_pBacklight;

  0069c	e59f3024	 ldr         r3, [pc, #0x24]
  006a0	e5933000	 ldr         r3, [r3]
  006a4	e58d3004	 str         r3, [sp, #4]
  006a8	e59d0004	 ldr         r0, [sp, #4]
  006ac	eb000000	 bl          |??3@YAXPAX@Z|
  006b0		 |$LN1@BKL_Deinit|

; 207  :     }
; 208  :     
; 209  :     return TRUE;

  006b0	e3a03001	 mov         r3, #1
  006b4	e58d3008	 str         r3, [sp, #8]
  006b8		 |$LN3@BKL_Deinit|

; 210  : }

  006b8	e59d0008	 ldr         r0, [sp, #8]
  006bc	e28dd014	 add         sp, sp, #0x14
  006c0	e89d6000	 ldmia       sp, {sp, lr}
  006c4	e12fff1e	 bx          lr
  006c8		 |$LN12@BKL_Deinit|
  006c8		 |$LN13@BKL_Deinit|
  006c8	00000000	 DCD         |?g_pBacklight@@3PAVCBacklightRoot@@A|
  006cc		 |$LN14@BKL_Deinit|
  006cc	00000000	 DCD         |??_C@_1FO@NOEPHHN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAK?$AAL?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn@|
  006d0		 |$LN15@BKL_Deinit|
  006d0	00000000	 DCD         |dpCurSettings|
  006d4		 |$LN16@BKL_Deinit|
  006d4	00000000	 DCD         |??_C@_1CA@KAKJLMHF@?$AAB?$AAK?$AAL?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  006d8		 |$M32793|

			 ENDP  ; |BKL_Deinit|

	EXPORT	|??_C@_1BM@EGDAHDBM@?$AAB?$AAK?$AAL?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AA?$CJ?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|BKL_Open|

  00018			 AREA	 |.pdata|, PDATA
|$T32808| DCD	|$LN7@BKL_Open|
	DCD	0x40001704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@EGDAHDBM@?$AAB?$AAK?$AAL?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AA?$CJ?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "K", 0x0, "L", 0x0, "_", 0x0, "O", 0x0, "p", 0x0, "e"
	DCB	0x0, "n", 0x0, "(", 0x0, ")", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  006d8			 AREA	 |.text|, CODE, ARM

  006d8		 |BKL_Open| PROC

; 215  : {

  006d8		 |$LN7@BKL_Open|
  006d8	e1a0c00d	 mov         r12, sp
  006dc	e92d0007	 stmdb       sp!, {r0 - r2}
  006e0	e92d5000	 stmdb       sp!, {r12, lr}
  006e4	e24dd008	 sub         sp, sp, #8
  006e8		 |$M32805|

; 216  :     UNREFERENCED_PARAMETER(dwAccess);
; 217  :     UNREFERENCED_PARAMETER(dwShareMode);
; 218  :     DEBUGMSG(ZONE_BACKLIGHT, (TEXT("BKL_Open().\r\n")));

  006e8	e59f3040	 ldr         r3, [pc, #0x40]
  006ec	e5933440	 ldr         r3, [r3, #0x440]
  006f0	e3130001	 tst         r3, #1
  006f4	0a000004	 beq         |$LN3@BKL_Open|
  006f8	e59f002c	 ldr         r0, [pc, #0x2C]
  006fc	eb000000	 bl          NKDbgPrintfW
  00700	e3a03001	 mov         r3, #1
  00704	e58d3004	 str         r3, [sp, #4]
  00708	ea000001	 b           |$LN4@BKL_Open|
  0070c		 |$LN3@BKL_Open|
  0070c	e3a03000	 mov         r3, #0
  00710	e58d3004	 str         r3, [sp, #4]
  00714		 |$LN4@BKL_Open|

; 219  :     return dwClientContext;

  00714	e59d3010	 ldr         r3, [sp, #0x10]
  00718	e58d3000	 str         r3, [sp]

; 220  : }

  0071c	e59d0000	 ldr         r0, [sp]
  00720	e28dd008	 add         sp, sp, #8
  00724	e89d6000	 ldmia       sp, {sp, lr}
  00728	e12fff1e	 bx          lr
  0072c		 |$LN8@BKL_Open|
  0072c		 |$LN9@BKL_Open|
  0072c	00000000	 DCD         |??_C@_1BM@EGDAHDBM@?$AAB?$AAK?$AAL?$AA_?$AAO?$AAp?$AAe?$AAn?$AA?$CI?$AA?$CJ?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  00730		 |$LN10@BKL_Open|
  00730	00000000	 DCD         |dpCurSettings|
  00734		 |$M32806|

			 ENDP  ; |BKL_Open|

	EXPORT	|??_C@_1BO@IOPKMELI@?$AAB?$AAK?$AAL?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?$CI?$AA?$CJ?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|BKL_Close|

  00020			 AREA	 |.pdata|, PDATA
|$T32821| DCD	|$LN9@BKL_Close|
	DCD	0x40001f04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@IOPKMELI@?$AAB?$AAK?$AAL?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?$CI?$AA?$CJ?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "K", 0x0, "L", 0x0, "_", 0x0, "C", 0x0, "l", 0x0, "o"
	DCB	0x0, "s", 0x0, "e", 0x0, "(", 0x0, ")", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  00734			 AREA	 |.text|, CODE, ARM

  00734		 |BKL_Close| PROC

; 225  : {

  00734		 |$LN9@BKL_Close|
  00734	e1a0c00d	 mov         r12, sp
  00738	e92d0001	 stmdb       sp!, {r0}
  0073c	e92d5000	 stmdb       sp!, {r12, lr}
  00740	e24dd00c	 sub         sp, sp, #0xC
  00744		 |$M32818|

; 226  :     DEBUGMSG(ZONE_BACKLIGHT, (TEXT("BKL_Close().\r\n")));

  00744	e59f3060	 ldr         r3, [pc, #0x60]
  00748	e5933440	 ldr         r3, [r3, #0x440]
  0074c	e3130001	 tst         r3, #1
  00750	0a000004	 beq         |$LN3@BKL_Close|
  00754	e59f004c	 ldr         r0, [pc, #0x4C]
  00758	eb000000	 bl          NKDbgPrintfW
  0075c	e3a03001	 mov         r3, #1
  00760	e58d3004	 str         r3, [sp, #4]
  00764	ea000001	 b           |$LN4@BKL_Close|
  00768		 |$LN3@BKL_Close|
  00768	e3a03000	 mov         r3, #0
  0076c	e58d3004	 str         r3, [sp, #4]
  00770		 |$LN4@BKL_Close|

; 227  :     return (dwOpenContext != 0);

  00770	e59d3014	 ldr         r3, [sp, #0x14]
  00774	e3530000	 cmp         r3, #0
  00778	0a000002	 beq         |$LN5@BKL_Close|
  0077c	e3a03001	 mov         r3, #1
  00780	e58d3008	 str         r3, [sp, #8]
  00784	ea000001	 b           |$LN6@BKL_Close|
  00788		 |$LN5@BKL_Close|
  00788	e3a03000	 mov         r3, #0
  0078c	e58d3008	 str         r3, [sp, #8]
  00790		 |$LN6@BKL_Close|
  00790	e59d3008	 ldr         r3, [sp, #8]
  00794	e58d3000	 str         r3, [sp]

; 228  : }

  00798	e59d0000	 ldr         r0, [sp]
  0079c	e28dd00c	 add         sp, sp, #0xC
  007a0	e89d6000	 ldmia       sp, {sp, lr}
  007a4	e12fff1e	 bx          lr
  007a8		 |$LN10@BKL_Close|
  007a8		 |$LN11@BKL_Close|
  007a8	00000000	 DCD         |??_C@_1BO@IOPKMELI@?$AAB?$AAK?$AAL?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?$CI?$AA?$CJ?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  007ac		 |$LN12@BKL_Close|
  007ac	00000000	 DCD         |dpCurSettings|
  007b0		 |$M32819|

			 ENDP  ; |BKL_Close|

	EXPORT	|??_C@_1EG@OGJLJFEK@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?3?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAb?$AAa?$AAc?$AAk?$AA?5?$AA?$CF?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@NBFEDNME@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@NAFKEEIM@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAD?$AA?$CF?$AAu?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@ELBMACOD@?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAD?$AA?$CF?$AAu?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@MLACPIHD@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF?$AAu?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_13FPGAJAPJ@?$AA?2?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@BHDHHEGO@?$AA?$HL?$AAE?$AAB?$AA9?$AA1?$AAC?$AA7?$AAC?$AA9?$AA?9?$AA8?$AAB?$AAF?$AA6?$AA?9?$AA4?$AAa?$AA2?$AAd?$AA?9?$AA9?$AAA?$AAB?$AA8?$AA?9?$AA6?$AA9?$AA7?$AA2?$AA4?$AAE?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@LOPENEM@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF?$AAu?$AA?5?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@NOEKOLEH@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@OBPLBNBH@?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAi?$AAo?$AAc?$AAt?$AAl?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@DIJBIAPM@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAQ?$AAU?$AAE?$AAR?$AAY?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@KPGHAGDD@?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@GCAFJAHI@?$AAs?$AAu?$AAc?$AAc?$AAe?$AAe?$AAd?$AAe?$AAd?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@POLDGFFP@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAQ?$AAU?$AAE?$AAR?$AAY?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@MHJHMPML@?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAi?$AAo?$AAc?$AAt?$AAl?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KK@HDCMPCL@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@GIBMNGPI@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAC?$AAA?$AAP?$AAA?$AAB?$AAI?$AAL?$AAI?$AAT?$AAI?$AAE?$AAS?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@KKNHEDMA@?$AAB?$AAK?$AAL?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA?5?$AAc?$AAo?$AAd?$AAe?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|BKL_IOControl|
	IMPORT	|SetLastError|
	IMPORT	|ReleasePowerRequirement|
	IMPORT	|SetPowerRequirement|
	IMPORT	|StringCbCatW|
	IMPORT	|StringCbCopyW|
	IMPORT	|?GetBestSupportedState@@YAHPAUBKL_MDD_INFO@@W4_CEDEVICE_POWER_STATE@@PAW42@@Z| ; GetBestSupportedState
	IMPORT	|memset|
	IMPORT	|__C_specific_handler|

  00028			 AREA	 |.pdata|, PDATA
|$T32904| DCD	|$LN106@BKL_IOCont|
	DCD	0xc001dd05
|$T32906| DCD	|$LN93@BKL_IOCont|
	DCD	0x40000502
|$T32908| DCD	|$LN86@BKL_IOCont|
	DCD	0x40000502
|$T32910| DCD	|$LN79@BKL_IOCont|
	DCD	0x40000502
|$T32912| DCD	|$LN72@BKL_IOCont|
	DCD	0x40001c02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@OGJLJFEK@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?3?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAb?$AAa?$AAc?$AAk?$AA?5?$AA?$CF?$AAu@| DCB "I"
	DCB	0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "P"
	DCB	0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R", 0x0, "_", 0x0, "G"
	DCB	0x0, "E", 0x0, "T", 0x0, ":", 0x0, " ", 0x0, "p", 0x0, "a"
	DCB	0x0, "s", 0x0, "s", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "b", 0x0, "a", 0x0, "c", 0x0, "k", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@NBFEDNME@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "K", 0x0, "L", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@NAFKEEIM@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAD?$AA?$CF?$AAu?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, " ", 0x0, "D", 0x0, "%", 0x0, "u"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@ELBMACOD@?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAD?$AA?$CF?$AAu?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "n", 0x0, "s", 0x0, "u", 0x0, "p", 0x0, "p", 0x0, "o"
	DCB	0x0, "r", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t"
	DCB	0x0, " ", 0x0, "D", 0x0, "%", 0x0, "u", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@MLACPIHD@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF?$AAu?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "P"
	DCB	0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R", 0x0, "_", 0x0, "S"
	DCB	0x0, "E", 0x0, "T", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "D", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_13FPGAJAPJ@?$AA?2?$AA?$AA@| DCB "\\", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@BHDHHEGO@?$AA?$HL?$AAE?$AAB?$AA9?$AA1?$AAC?$AA7?$AAC?$AA9?$AA?9?$AA8?$AAB?$AAF?$AA6?$AA?9?$AA4?$AAa?$AA2?$AAd?$AA?9?$AA9?$AAA?$AAB?$AA8?$AA?9?$AA6?$AA9?$AA7?$AA2?$AA4?$AAE?$AAE@| DCB "{"
	DCB	0x0, "E", 0x0, "B", 0x0, "9", 0x0, "1", 0x0, "C", 0x0, "7"
	DCB	0x0, "C", 0x0, "9", 0x0, "-", 0x0, "8", 0x0, "B", 0x0, "F"
	DCB	0x0, "6", 0x0, "-", 0x0, "4", 0x0, "a", 0x0, "2", 0x0, "d"
	DCB	0x0, "-", 0x0, "9", 0x0, "A", 0x0, "B", 0x0, "8", 0x0, "-"
	DCB	0x0, "6", 0x0, "9", 0x0, "7", 0x0, "2", 0x0, "4", 0x0, "E"
	DCB	0x0, "E", 0x0, "D", 0x0, "9", 0x0, "7", 0x0, "D", 0x0, "1"
	DCB	0x0, "}", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@LOPENEM@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF?$AAu?$AA?5?$AA?$AN@| DCB "I"
	DCB	0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "P"
	DCB	0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R", 0x0, "_", 0x0, "S"
	DCB	0x0, "E", 0x0, "T", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "q"
	DCB	0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "D", 0x0, "%", 0x0, "u", 0x0, " "
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@NOEKOLEH@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "K", 0x0, "L", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R"
	DCB	0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@OBPLBNBH@?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAi?$AAo?$AAc?$AAt?$AAl?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "x", 0x0, "c", 0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, " "
	DCB	0x0, "i", 0x0, "o", 0x0, "c", 0x0, "t", 0x0, "l", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@DIJBIAPM@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAQ?$AAU?$AAE?$AAR?$AAY?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "K", 0x0, "L", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "O"
	DCB	0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "P", 0x0, "O"
	DCB	0x0, "W", 0x0, "E", 0x0, "R", 0x0, "_", 0x0, "Q", 0x0, "U"
	DCB	0x0, "E", 0x0, "R", 0x0, "Y", 0x0, " ", 0x0, "%", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@KPGHAGDD@?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AA@| DCB "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@GCAFJAHI@?$AAs?$AAu?$AAc?$AAc?$AAe?$AAe?$AAd?$AAe?$AAd?$AA?$AA@| DCB "s"
	DCB	0x0, "u", 0x0, "c", 0x0, "c", 0x0, "e", 0x0, "e", 0x0, "d"
	DCB	0x0, "e", 0x0, "d", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@POLDGFFP@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAQ?$AAU?$AAE?$AAR?$AAY?$AA?$AN@| DCB "B"
	DCB	0x0, "K", 0x0, "L", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R"
	DCB	0x0, "_", 0x0, "Q", 0x0, "U", 0x0, "E", 0x0, "R", 0x0, "Y"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@MHJHMPML@?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAi?$AAo?$AAc?$AAt?$AAl?$AA?$AN?$AA?6?$AA?$AA@| DCB "e"
	DCB	0x0, "x", 0x0, "c", 0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, " "
	DCB	0x0, "i", 0x0, "o", 0x0, "c", 0x0, "t", 0x0, "l", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "E", 0x0, "B"
	DCB	0x0, "U", 0x0, "G", 0x0, "C", 0x0, "H", 0x0, "K", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, "t", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| DCB "U", 0x0
	DCB	"n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KK@HDCMPCL@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "C"
	DCB	0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N", 0x0, "_"
	DCB	0x0, "T", 0x0, "I", 0x0, "_", 0x0, "V", 0x0, "1", 0x0, "\\"
	DCB	0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N"
	DCB	0x0, "_", 0x0, "T", 0x0, "I", 0x0, "\\", 0x0, "B", 0x0, "A"
	DCB	0x0, "C", 0x0, "K", 0x0, "L", 0x0, "I", 0x0, "G", 0x0, "H"
	DCB	0x0, "T", 0x0, "\\", 0x0, ".", 0x0, "\\", 0x0, "b", 0x0, "k"
	DCB	0x0, "l", 0x0, "d", 0x0, "r", 0x0, "v", 0x0, "a", 0x0, "p"
	DCB	0x0, "i", 0x0, ".", 0x0, "c", 0x0, "p", 0x0, "p", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@GIBMNGPI@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAC?$AAA?$AAP?$AAA?$AAB?$AAI?$AAL?$AAI?$AAT?$AAI?$AAE?$AAS?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "K", 0x0, "L", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "O"
	DCB	0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "P", 0x0, "O"
	DCB	0x0, "W", 0x0, "E", 0x0, "R", 0x0, "_", 0x0, "C", 0x0, "A"
	DCB	0x0, "P", 0x0, "A", 0x0, "B", 0x0, "I", 0x0, "L", 0x0, "I"
	DCB	0x0, "T", 0x0, "I", 0x0, "E", 0x0, "S", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@KKNHEDMA@?$AAB?$AAK?$AAL?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA?5?$AAc?$AAo?$AAd?$AAe?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "K", 0x0, "L", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.xdata|, DATA
|$T32902| DCD	0x4
	DCD	|$LN97@BKL_IOCont|
	DCD	|$LN98@BKL_IOCont|
	DCD	|$LN93@BKL_IOCont|
	DCD	|$LN94@BKL_IOCont|
	DCD	|$LN90@BKL_IOCont|
	DCD	|$LN91@BKL_IOCont|
	DCD	|$LN86@BKL_IOCont|
	DCD	|$LN87@BKL_IOCont|
	DCD	|$LN83@BKL_IOCont|
	DCD	|$LN84@BKL_IOCont|
	DCD	|$LN79@BKL_IOCont|
	DCD	|$LN80@BKL_IOCont|
	DCD	|$LN76@BKL_IOCont|
	DCD	|$LN77@BKL_IOCont|
	DCD	|$LN72@BKL_IOCont|
	DCD	|$LN73@BKL_IOCont|
; Function compile flags: /Odtp

  007b0			 AREA	 |.text|, CODE, ARM

  007b0	00000000	 DCD         |__C_specific_handler|
  007b4	00000000	 DCD         |$T32902|

  007b8		 |BKL_IOControl| PROC

; 235  : {

  007b8		 |$LN106@BKL_IOCont|
  007b8	e1a0c00d	 mov         r12, sp
  007bc	e92d000f	 stmdb       sp!, {r0 - r3}
  007c0	e92d5800	 stmdb       sp!, {r11, r12, lr}
  007c4	e28db00c	 add         r11, sp, #0xC
  007c8	e24dd09c	 sub         sp, sp, #0x9C
  007cc		 |$LN104@BKL_IOCont|

; 236  :     DWORD dwErr = ERROR_INVALID_PARAMETER;

  007cc	e3a03057	 mov         r3, #0x57
  007d0	e50b30a0	 str         r3, [r11, #-0xA0]

; 237  :     BKL_MDD_INFO *pBKLinfo = NULL;

  007d4	e3a03000	 mov         r3, #0
  007d8	e50b30a4	 str         r3, [r11, #-0xA4]

; 238  : 
; 239  :     UNREFERENCED_PARAMETER(nInBufSize);
; 240  :     UNREFERENCED_PARAMETER(lpInBuf);
; 241  : 
; 242  :     DEBUGMSG(ZONE_BACKLIGHT,(TEXT("BKL_IOControl IOCTL code = %d\r\n"), dwIoControlCode));

  007dc	e59f379c	 ldr         r3, [pc, #0x79C]
  007e0	e5933440	 ldr         r3, [r3, #0x440]
  007e4	e3130001	 tst         r3, #1
  007e8	0a000005	 beq         |$LN33@BKL_IOCont|
  007ec	e59b1004	 ldr         r1, [r11, #4]
  007f0	e59f07dc	 ldr         r0, [pc, #0x7DC]
  007f4	eb000000	 bl          NKDbgPrintfW
  007f8	e3a03001	 mov         r3, #1
  007fc	e50b3078	 str         r3, [r11, #-0x78]
  00800	ea000001	 b           |$LN34@BKL_IOCont|
  00804		 |$LN33@BKL_IOCont|
  00804	e3a03000	 mov         r3, #0
  00808	e50b3078	 str         r3, [r11, #-0x78]
  0080c		 |$LN34@BKL_IOCont|

; 243  : 
; 244  :     // Verify context
; 245  :     if( !dwOpenContext )

  0080c	e59b3000	 ldr         r3, [r11]
  00810	e3530000	 cmp         r3, #0
  00814	1a00000d	 bne         |$LN30@BKL_IOCont|

; 246  :     {
; 247  :         DEBUGMSG(ZONE_ERROR, (
; 248  :             L"ERROR: BKL_Deinit: "
; 249  :             L"Incorrect context paramer\r\n" 
; 250  :         ));

  00818	e59f3760	 ldr         r3, [pc, #0x760]
  0081c	e5933440	 ldr         r3, [r3, #0x440]
  00820	e3130001	 tst         r3, #1
  00824	0a000004	 beq         |$LN35@BKL_IOCont|
  00828	e59f07a0	 ldr         r0, [pc, #0x7A0]
  0082c	eb000000	 bl          NKDbgPrintfW
  00830	e3a03001	 mov         r3, #1
  00834	e50b3074	 str         r3, [r11, #-0x74]
  00838	ea000001	 b           |$LN36@BKL_IOCont|
  0083c		 |$LN35@BKL_IOCont|
  0083c	e3a03000	 mov         r3, #0
  00840	e50b3074	 str         r3, [r11, #-0x74]
  00844		 |$LN36@BKL_IOCont|

; 251  : 
; 252  :         return FALSE;

  00844	e3a03000	 mov         r3, #0
  00848	e50b3080	 str         r3, [r11, #-0x80]
  0084c	ea0001b2	 b           |$LN31@BKL_IOCont|
  00850		 |$LN30@BKL_IOCont|

; 253  :     }
; 254  : 
; 255  :     pBKLinfo = (BKL_MDD_INFO *) dwOpenContext;

  00850	e59b3000	 ldr         r3, [r11]
  00854	e50b30a4	 str         r3, [r11, #-0xA4]

; 256  : 
; 257  :     switch (dwIoControlCode) 

  00858	e59b3004	 ldr         r3, [r11, #4]
  0085c	e50b3070	 str         r3, [r11, #-0x70]
  00860	e51b2070	 ldr         r2, [r11, #-0x70]
  00864	e3a03832	 mov         r3, #0x32, 16
  00868	e3833a01	 orr         r3, r3, #1, 20
  0086c	e0423003	 sub         r3, r2, r3
  00870	e50b3070	 str         r3, [r11, #-0x70]
  00874	e51b3070	 ldr         r3, [r11, #-0x70]
  00878	e353000c	 cmp         r3, #0xC
  0087c	8a00019b	 bhi         |$LN3@BKL_IOCont|
  00880	e51b2070	 ldr         r2, [r11, #-0x70]
  00884	e1a03102	 mov         r3, r2, lsl #2
  00888	e083300f	 add         r3, r3, pc
  0088c	e5933004	 ldr         r3, [r3, #4]
  00890	e08ff003	 add         pc, pc, r3
  00894		 |$LN112@BKL_IOCont|
  00894		 |$LN111@BKL_IOCont|
  00894		 |$LN113@BKL_IOCont|
  00894	00000030	 DCD         0x30
  00898		 |$LN114@BKL_IOCont|
  00898	00000658	 DCD         0x658
  0089c		 |$LN115@BKL_IOCont|
  0089c	00000658	 DCD         0x658
  008a0		 |$LN116@BKL_IOCont|
  008a0	00000658	 DCD         0x658
  008a4		 |$LN117@BKL_IOCont|
  008a4	0000058c	 DCD         0x58c
  008a8		 |$LN118@BKL_IOCont|
  008a8	00000658	 DCD         0x658
  008ac		 |$LN119@BKL_IOCont|
  008ac	00000658	 DCD         0x658
  008b0		 |$LN120@BKL_IOCont|
  008b0	00000658	 DCD         0x658
  008b4		 |$LN121@BKL_IOCont|
  008b4	0000026c	 DCD         0x26c
  008b8		 |$LN122@BKL_IOCont|
  008b8	00000658	 DCD         0x658
  008bc		 |$LN123@BKL_IOCont|
  008bc	00000658	 DCD         0x658
  008c0		 |$LN124@BKL_IOCont|
  008c0	00000658	 DCD         0x658
  008c4		 |$LN125@BKL_IOCont|
  008c4	00000170	 DCD         0x170
  008c8		 |$LN27@BKL_IOCont|

; 258  :     {
; 259  :         case IOCTL_POWER_CAPABILITIES:  
; 260  :             DEBUGMSG(ZONE_BACKLIGHT, (TEXT("BKL: IOCTL_POWER_CAPABILITIES\r\n")));

  008c8	e59f36b0	 ldr         r3, [pc, #0x6B0]
  008cc	e5933440	 ldr         r3, [r3, #0x440]
  008d0	e3130001	 tst         r3, #1
  008d4	0a000004	 beq         |$LN37@BKL_IOCont|
  008d8	e59f06ec	 ldr         r0, [pc, #0x6EC]
  008dc	eb000000	 bl          NKDbgPrintfW
  008e0	e3a03001	 mov         r3, #1
  008e4	e50b306c	 str         r3, [r11, #-0x6C]
  008e8	ea000001	 b           |$LN38@BKL_IOCont|
  008ec		 |$LN37@BKL_IOCont|
  008ec	e3a03000	 mov         r3, #0
  008f0	e50b306c	 str         r3, [r11, #-0x6C]
  008f4		 |$LN38@BKL_IOCont|

; 261  :             if (lpOutBuf && nOutBufSize >= sizeof (POWER_CAPABILITIES) && lpBytesReturned) 

  008f4	e59b3010	 ldr         r3, [r11, #0x10]
  008f8	e3530000	 cmp         r3, #0
  008fc	0a000040	 beq         |$LN26@BKL_IOCont|
  00900	e59b3014	 ldr         r3, [r11, #0x14]
  00904	e3530030	 cmp         r3, #0x30
  00908	3a00003d	 bcc         |$LN26@BKL_IOCont|
  0090c	e59b3018	 ldr         r3, [r11, #0x18]
  00910	e3530000	 cmp         r3, #0
  00914	0a00003a	 beq         |$LN26@BKL_IOCont|
  00918		 |$LN76@BKL_IOCont|

; 262  :             {
; 263  :                 __try 
; 264  :                 {
; 265  :                     PPOWER_CAPABILITIES PowerCaps = (PPOWER_CAPABILITIES)lpOutBuf;

  00918	e59b3010	 ldr         r3, [r11, #0x10]
  0091c	e50b309c	 str         r3, [r11, #-0x9C]

; 266  : 
; 267  :                     memset(PowerCaps, 0, sizeof(*PowerCaps));

  00920	e3a02030	 mov         r2, #0x30
  00924	e3a01000	 mov         r1, #0
  00928	e51b009c	 ldr         r0, [r11, #-0x9C]
  0092c	eb000000	 bl          memset

; 268  :                     PowerCaps->DeviceDx = g_pBacklight->BacklightGetSupportedStates();

  00930	e59f3674	 ldr         r3, [pc, #0x674]
  00934	e5933000	 ldr         r3, [r3]
  00938	e5933000	 ldr         r3, [r3]
  0093c	e283200c	 add         r2, r3, #0xC
  00940	e59f3664	 ldr         r3, [pc, #0x664]
  00944	e5930000	 ldr         r0, [r3]
  00948	e5923000	 ldr         r3, [r2]
  0094c	e1a0e00f	 mov         lr, pc
  00950	e12fff13	 bx          r3
  00954	e54b0068	 strb        r0, [r11, #-0x68]
  00958	e55b2068	 ldrb        r2, [r11, #-0x68]
  0095c	e51b309c	 ldr         r3, [r11, #-0x9C]
  00960	e5c32000	 strb        r2, [r3]

; 269  : 
; 270  :                      *lpBytesReturned = sizeof(*PowerCaps);

  00964	e59b2018	 ldr         r2, [r11, #0x18]
  00968	e3a03030	 mov         r3, #0x30
  0096c	e5823000	 str         r3, [r2]

; 271  : 
; 272  :                     pBKLinfo->ucSupportedStatesMask = PowerCaps->DeviceDx;

  00970	e51b30a4	 ldr         r3, [r11, #-0xA4]
  00974	e2832f86	 add         r2, r3, #0x86, 30
  00978	e51b309c	 ldr         r3, [r11, #-0x9C]
  0097c	e5d33000	 ldrb        r3, [r3]
  00980	e5c23000	 strb        r3, [r2]

; 273  : 
; 274  :                     ASSERT(pBKLinfo->ucSupportedStatesMask < 0x20);

  00984	e51b30a4	 ldr         r3, [r11, #-0xA4]
  00988	e2833f86	 add         r3, r3, #0x86, 30
  0098c	e5d33000	 ldrb        r3, [r3]
  00990	e3530020	 cmp         r3, #0x20
  00994	aa000002	 bge         |$LN39@BKL_IOCont|
  00998	e3a03001	 mov         r3, #1
  0099c	e50b3064	 str         r3, [r11, #-0x64]
  009a0	ea000008	 b           |$LN40@BKL_IOCont|
  009a4		 |$LN39@BKL_IOCont|
  009a4	e3a03c01	 mov         r3, #1, 24
  009a8	e3833012	 orr         r3, r3, #0x12
  009ac	e59f25f0	 ldr         r2, [pc, #0x5F0]
  009b0	e59f15e8	 ldr         r1, [pc, #0x5E8]
  009b4	e59f05e0	 ldr         r0, [pc, #0x5E0]
  009b8	eb000000	 bl          NKDbgPrintfW
  009bc	e6000010	 __debugbreak_ce
  009c0	e3a03000	 mov         r3, #0
  009c4	e50b3064	 str         r3, [r11, #-0x64]
  009c8		 |$LN40@BKL_IOCont|

; 275  :                     
; 276  :                     dwErr = ERROR_SUCCESS;

  009c8	e3a03000	 mov         r3, #0
  009cc	e50b30a0	 str         r3, [r11, #-0xA0]
  009d0		 |$LN77@BKL_IOCont|

; 277  :                 }

  009d0	ea00000b	 b           |$LN78@BKL_IOCont|
  009d4		 |$LN73@BKL_IOCont|

; 279  :                 {
; 280  :                     DEBUGMSG(ZONE_BACKLIGHT, (TEXT("exception in ioctl\r\n")));

  009d4	e59f35a4	 ldr         r3, [pc, #0x5A4]
  009d8	e5933440	 ldr         r3, [r3, #0x440]
  009dc	e3130001	 tst         r3, #1
  009e0	0a000004	 beq         |$LN41@BKL_IOCont|
  009e4	e59f05dc	 ldr         r0, [pc, #0x5DC]
  009e8	eb000000	 bl          NKDbgPrintfW
  009ec	e3a03001	 mov         r3, #1
  009f0	e50b3060	 str         r3, [r11, #-0x60]
  009f4	ea000001	 b           |$LN42@BKL_IOCont|
  009f8		 |$LN41@BKL_IOCont|
  009f8	e3a03000	 mov         r3, #0
  009fc	e50b3060	 str         r3, [r11, #-0x60]
  00a00		 |$LN42@BKL_IOCont|
  00a00	eaffffff	 b           |$LN78@BKL_IOCont|
  00a04		 |$LN78@BKL_IOCont|
  00a04		 |$LN26@BKL_IOCont|

; 281  :                 }
; 282  :             }
; 283  : 
; 284  :             break;

  00a04	ea000139	 b           |$LN28@BKL_IOCont|
  00a08		 |$LN24@BKL_IOCont|

; 285  : 
; 286  :         case IOCTL_POWER_QUERY: // determines whether changing power state is feasible
; 287  :                 DEBUGMSG(ZONE_BACKLIGHT,(TEXT("BKL: Received IOCTL_POWER_QUERY\r\n")));

  00a08	e59f3570	 ldr         r3, [pc, #0x570]
  00a0c	e5933440	 ldr         r3, [r3, #0x440]
  00a10	e3130001	 tst         r3, #1
  00a14	0a000004	 beq         |$LN43@BKL_IOCont|
  00a18	e59f05a4	 ldr         r0, [pc, #0x5A4]
  00a1c	eb000000	 bl          NKDbgPrintfW
  00a20	e3a03001	 mov         r3, #1
  00a24	e50b305c	 str         r3, [r11, #-0x5C]
  00a28	ea000001	 b           |$LN44@BKL_IOCont|
  00a2c		 |$LN43@BKL_IOCont|
  00a2c	e3a03000	 mov         r3, #0
  00a30	e50b305c	 str         r3, [r11, #-0x5C]
  00a34		 |$LN44@BKL_IOCont|

; 288  :                 if (lpOutBuf && nOutBufSize >= sizeof(CEDEVICE_POWER_STATE)) 

  00a34	e59b3010	 ldr         r3, [r11, #0x10]
  00a38	e3530000	 cmp         r3, #0
  00a3c	0a00002e	 beq         |$LN23@BKL_IOCont|
  00a40	e59b3014	 ldr         r3, [r11, #0x14]
  00a44	e3530004	 cmp         r3, #4
  00a48	3a00002b	 bcc         |$LN23@BKL_IOCont|
  00a4c		 |$LN83@BKL_IOCont|

; 289  :                 {
; 290  :                     // Return a good status on any valid query, since we are always ready to
; 291  :                     // change power states (if asked for state we don't support, we move to next highest, eg D3->D4).
; 292  :                     __try 
; 293  :                     {
; 294  :                         CEDEVICE_POWER_STATE ReqDx = *(PCEDEVICE_POWER_STATE)lpOutBuf;

  00a4c	e59b3010	 ldr         r3, [r11, #0x10]
  00a50	e5933000	 ldr         r3, [r3]
  00a54	e50b3098	 str         r3, [r11, #-0x98]

; 295  : 
; 296  :                         if (VALID_DX(ReqDx)) 

  00a58	e51b3098	 ldr         r3, [r11, #-0x98]
  00a5c	e3730001	 cmn         r3, #1
  00a60	da000004	 ble         |$LN21@BKL_IOCont|
  00a64	e51b3098	 ldr         r3, [r11, #-0x98]
  00a68	e3530005	 cmp         r3, #5
  00a6c	aa000001	 bge         |$LN21@BKL_IOCont|

; 297  :                         {
; 298  :                             // This is a valid Dx state so return a good status.
; 299  :                             dwErr = ERROR_SUCCESS;

  00a70	e3a03000	 mov         r3, #0
  00a74	e50b30a0	 str         r3, [r11, #-0xA0]
  00a78		 |$LN21@BKL_IOCont|

; 300  :                         }
; 301  : 
; 302  :                         DEBUGMSG(ZONE_BACKLIGHT, (TEXT("BKL: IOCTL_POWER_QUERY %s\r\n"), dwErr == ERROR_SUCCESS ? (TEXT("succeeded")) : (TEXT("failed")) ));

  00a78	e59f3500	 ldr         r3, [pc, #0x500]
  00a7c	e5933440	 ldr         r3, [r3, #0x440]
  00a80	e3130001	 tst         r3, #1
  00a84	0a00000d	 beq         |$LN47@BKL_IOCont|
  00a88	e51b30a0	 ldr         r3, [r11, #-0xA0]
  00a8c	e3530000	 cmp         r3, #0
  00a90	1a000002	 bne         |$LN45@BKL_IOCont|
  00a94	e59f3524	 ldr         r3, [pc, #0x524]
  00a98	e50b3058	 str         r3, [r11, #-0x58]
  00a9c	ea000001	 b           |$LN46@BKL_IOCont|
  00aa0		 |$LN45@BKL_IOCont|
  00aa0	e59f3514	 ldr         r3, [pc, #0x514]
  00aa4	e50b3058	 str         r3, [r11, #-0x58]
  00aa8		 |$LN46@BKL_IOCont|
  00aa8	e51b1058	 ldr         r1, [r11, #-0x58]
  00aac	e59f0504	 ldr         r0, [pc, #0x504]
  00ab0	eb000000	 bl          NKDbgPrintfW
  00ab4	e3a03001	 mov         r3, #1
  00ab8	e50b3054	 str         r3, [r11, #-0x54]
  00abc	ea000001	 b           |$LN48@BKL_IOCont|
  00ac0		 |$LN47@BKL_IOCont|
  00ac0	e3a03000	 mov         r3, #0
  00ac4	e50b3054	 str         r3, [r11, #-0x54]
  00ac8		 |$LN48@BKL_IOCont|
  00ac8		 |$LN84@BKL_IOCont|

; 303  :                     }

  00ac8	ea00000b	 b           |$LN85@BKL_IOCont|
  00acc		 |$LN80@BKL_IOCont|

; 305  :                     {
; 306  :                         DEBUGMSG(ZONE_BACKLIGHT, (TEXT("Exception in ioctl\r\n")));

  00acc	e59f34ac	 ldr         r3, [pc, #0x4AC]
  00ad0	e5933440	 ldr         r3, [r3, #0x440]
  00ad4	e3130001	 tst         r3, #1
  00ad8	0a000004	 beq         |$LN49@BKL_IOCont|
  00adc	e59f0498	 ldr         r0, [pc, #0x498]
  00ae0	eb000000	 bl          NKDbgPrintfW
  00ae4	e3a03001	 mov         r3, #1
  00ae8	e50b3050	 str         r3, [r11, #-0x50]
  00aec	ea000001	 b           |$LN50@BKL_IOCont|
  00af0		 |$LN49@BKL_IOCont|
  00af0	e3a03000	 mov         r3, #0
  00af4	e50b3050	 str         r3, [r11, #-0x50]
  00af8		 |$LN50@BKL_IOCont|
  00af8	eaffffff	 b           |$LN85@BKL_IOCont|
  00afc		 |$LN85@BKL_IOCont|
  00afc		 |$LN23@BKL_IOCont|

; 307  :                     }
; 308  :                 }
; 309  :                 break;

  00afc	ea0000fb	 b           |$LN28@BKL_IOCont|

; 310  : 
; 311  :             break;

  00b00	ea0000fa	 b           |$LN28@BKL_IOCont|
  00b04		 |$LN20@BKL_IOCont|

; 312  : 
; 313  :         case IOCTL_POWER_SET: // requests a change from one device power state to another
; 314  :                 DEBUGMSG(ZONE_BACKLIGHT,(TEXT("BKL: Received IOCTL_POWER_SET\r\n")));

  00b04	e59f3474	 ldr         r3, [pc, #0x474]
  00b08	e5933440	 ldr         r3, [r3, #0x440]
  00b0c	e3130001	 tst         r3, #1
  00b10	0a000004	 beq         |$LN51@BKL_IOCont|
  00b14	e59f0498	 ldr         r0, [pc, #0x498]
  00b18	eb000000	 bl          NKDbgPrintfW
  00b1c	e3a03001	 mov         r3, #1
  00b20	e50b304c	 str         r3, [r11, #-0x4C]
  00b24	ea000001	 b           |$LN52@BKL_IOCont|
  00b28		 |$LN51@BKL_IOCont|
  00b28	e3a03000	 mov         r3, #0
  00b2c	e50b304c	 str         r3, [r11, #-0x4C]
  00b30		 |$LN52@BKL_IOCont|

; 315  :                 if (lpOutBuf && nOutBufSize >= sizeof(CEDEVICE_POWER_STATE)) 

  00b30	e59b3010	 ldr         r3, [r11, #0x10]
  00b34	e3530000	 cmp         r3, #0
  00b38	0a0000b8	 beq         |$LN19@BKL_IOCont|
  00b3c	e59b3014	 ldr         r3, [r11, #0x14]
  00b40	e3530004	 cmp         r3, #4
  00b44	3a0000b5	 bcc         |$LN19@BKL_IOCont|
  00b48		 |$LN90@BKL_IOCont|

; 316  :                 {
; 317  :                     __try 
; 318  :                     {
; 319  :                         CEDEVICE_POWER_STATE ReqDx = *(PCEDEVICE_POWER_STATE)lpOutBuf;

  00b48	e59b3010	 ldr         r3, [r11, #0x10]
  00b4c	e5933000	 ldr         r3, [r3]
  00b50	e50b3094	 str         r3, [r11, #-0x94]

; 320  : 
; 321  :                         DEBUGMSG(ZONE_BACKLIGHT, (TEXT("IOCTL_POWER_SET request to D%u \r\n"), ReqDx));

  00b54	e59f3424	 ldr         r3, [pc, #0x424]
  00b58	e5933440	 ldr         r3, [r3, #0x440]
  00b5c	e3130001	 tst         r3, #1
  00b60	0a000005	 beq         |$LN53@BKL_IOCont|
  00b64	e51b1094	 ldr         r1, [r11, #-0x94]
  00b68	e59f0440	 ldr         r0, [pc, #0x440]
  00b6c	eb000000	 bl          NKDbgPrintfW
  00b70	e3a03001	 mov         r3, #1
  00b74	e50b3048	 str         r3, [r11, #-0x48]
  00b78	ea000001	 b           |$LN54@BKL_IOCont|
  00b7c		 |$LN53@BKL_IOCont|
  00b7c	e3a03000	 mov         r3, #0
  00b80	e50b3048	 str         r3, [r11, #-0x48]
  00b84		 |$LN54@BKL_IOCont|

; 322  :                         if (VALID_DX(ReqDx)) 

  00b84	e51b3094	 ldr         r3, [r11, #-0x94]
  00b88	e3730001	 cmn         r3, #1
  00b8c	da00008a	 ble         |$LN17@BKL_IOCont|
  00b90	e51b3094	 ldr         r3, [r11, #-0x94]
  00b94	e3530005	 cmp         r3, #5
  00b98	aa000087	 bge         |$LN17@BKL_IOCont|

; 323  :                         {
; 324  :                             CEDEVICE_POWER_STATE SupportedDx = ReqDx;

  00b9c	e51b3094	 ldr         r3, [r11, #-0x94]
  00ba0	e50b3090	 str         r3, [r11, #-0x90]

; 325  :                             
; 326  :                             // figure out which state to ask driver to go to:
; 327  :                             if(GetBestSupportedState(pBKLinfo, ReqDx, &SupportedDx))

  00ba4	e24b2090	 sub         r2, r11, #0x90
  00ba8	e51b1094	 ldr         r1, [r11, #-0x94]
  00bac	e51b00a4	 ldr         r0, [r11, #-0xA4]
  00bb0	eb000000	 bl          |?GetBestSupportedState@@YAHPAUBKL_MDD_INFO@@W4_CEDEVICE_POWER_STATE@@PAW42@@Z|
  00bb4	e50b0044	 str         r0, [r11, #-0x44]
  00bb8	e51b3044	 ldr         r3, [r11, #-0x44]
  00bbc	e3530000	 cmp         r3, #0
  00bc0	0a000070	 beq         |$LN16@BKL_IOCont|

; 328  :                             {       
; 329  :                                  pBKLinfo->dwCurState = SupportedDx;

  00bc4	e51b30a4	 ldr         r3, [r11, #-0xA4]
  00bc8	e2832f85	 add         r2, r3, #0x85, 30
  00bcc	e51b3090	 ldr         r3, [r11, #-0x90]
  00bd0	e5823000	 str         r3, [r2]

; 330  :                                  g_pBacklight->SetPowerState(pBKLinfo->dwCurState);

  00bd4	e51b30a4	 ldr         r3, [r11, #-0xA4]
  00bd8	e2833f85	 add         r3, r3, #0x85, 30
  00bdc	e5931000	 ldr         r1, [r3]
  00be0	e59f33c4	 ldr         r3, [pc, #0x3C4]
  00be4	e5933000	 ldr         r3, [r3]
  00be8	e5933000	 ldr         r3, [r3]
  00bec	e2832008	 add         r2, r3, #8
  00bf0	e59f33b4	 ldr         r3, [pc, #0x3B4]
  00bf4	e5930000	 ldr         r0, [r3]
  00bf8	e5923000	 ldr         r3, [r2]
  00bfc	e1a0e00f	 mov         lr, pc
  00c00	e12fff13	 bx          r3

; 331  : 
; 332  :                                 // keep display driver on while backlight is on:
; 333  :                                 if(D0 == SupportedDx)

  00c04	e51b3090	 ldr         r3, [r11, #-0x90]
  00c08	e3530000	 cmp         r3, #0
  00c0c	1a000044	 bne         |$LN15@BKL_IOCont|

; 334  :                                 {   
; 335  :                                     PTCHAR pszDevice;       // to hold device name (GUID + interface name)                                    
; 336  :                                     UINT uMaxDeviceBytes;   // memory allocated to hold device name
; 337  : 
; 338  :                                     // allow space for null terminator + separating '\':
; 339  :                                     uMaxDeviceBytes = (sizeof(PMCLASS_DISPLAY) + sizeof(pBKLinfo->szDisplayInterface) + 2*sizeof(TCHAR));

  00c10	e3a03c01	 mov         r3, #1, 24
  00c14	e3833052	 orr         r3, r3, #0x52
  00c18	e50b308c	 str         r3, [r11, #-0x8C]

; 340  :                                     pszDevice = (PTCHAR)LocalAlloc(0, uMaxDeviceBytes);

  00c1c	e51b108c	 ldr         r1, [r11, #-0x8C]
  00c20	e3a00000	 mov         r0, #0
  00c24	eb000000	 bl          LocalAlloc
  00c28	e50b0040	 str         r0, [r11, #-0x40]
  00c2c	e51b3040	 ldr         r3, [r11, #-0x40]
  00c30	e50b3088	 str         r3, [r11, #-0x88]

; 341  :                                     if(pszDevice != NULL)

  00c34	e51b3088	 ldr         r3, [r11, #-0x88]
  00c38	e3530000	 cmp         r3, #0
  00c3c	0a000037	 beq         |$LN14@BKL_IOCont|

; 342  :                                     {
; 343  :                                         // copy null-terminated GUID string
; 344  :                                         ASSERT(SUCCEEDED(StringCbCopy(pszDevice, uMaxDeviceBytes, PMCLASS_DISPLAY)));

  00c40	e59f2360	 ldr         r2, [pc, #0x360]
  00c44	e51b108c	 ldr         r1, [r11, #-0x8C]
  00c48	e51b0088	 ldr         r0, [r11, #-0x88]
  00c4c	eb000000	 bl          StringCbCopyW
  00c50	e50b003c	 str         r0, [r11, #-0x3C]
  00c54	e51b303c	 ldr         r3, [r11, #-0x3C]
  00c58	e3530000	 cmp         r3, #0
  00c5c	ba000002	 blt         |$LN55@BKL_IOCont|
  00c60	e3a03001	 mov         r3, #1
  00c64	e50b3038	 str         r3, [r11, #-0x38]
  00c68	ea000007	 b           |$LN56@BKL_IOCont|
  00c6c		 |$LN55@BKL_IOCont|
  00c6c	e3a03f56	 mov         r3, #0x56, 30
  00c70	e59f232c	 ldr         r2, [pc, #0x32C]
  00c74	e59f1324	 ldr         r1, [pc, #0x324]
  00c78	e59f031c	 ldr         r0, [pc, #0x31C]
  00c7c	eb000000	 bl          NKDbgPrintfW
  00c80	e6000010	 __debugbreak_ce
  00c84	e3a03000	 mov         r3, #0
  00c88	e50b3038	 str         r3, [r11, #-0x38]
  00c8c		 |$LN56@BKL_IOCont|

; 345  :                                         
; 346  :                                         // concatenate '\' separator + display interface name:
; 347  :                                         if (FAILED(StringCbCat(pszDevice, uMaxDeviceBytes, TEXT("\\")))) 

  00c8c	e59f2304	 ldr         r2, [pc, #0x304]
  00c90	e51b108c	 ldr         r1, [r11, #-0x8C]
  00c94	e51b0088	 ldr         r0, [r11, #-0x88]
  00c98	eb000000	 bl          StringCbCatW
  00c9c	e50b0034	 str         r0, [r11, #-0x34]
  00ca0	e51b3034	 ldr         r3, [r11, #-0x34]
  00ca4	e3530000	 cmp         r3, #0
  00ca8	aa000002	 bge         |$LN13@BKL_IOCont|

; 348  :                                         {
; 349  :                                             dwErr = ERROR_INSUFFICIENT_BUFFER;

  00cac	e3a0307a	 mov         r3, #0x7A
  00cb0	e50b30a0	 str         r3, [r11, #-0xA0]
  00cb4	ea000017	 b           |$LN12@BKL_IOCont|
  00cb8		 |$LN13@BKL_IOCont|

; 350  :                                         }                                        
; 351  :                                         else if (FAILED(StringCbCat(pszDevice, uMaxDeviceBytes, pBKLinfo->szDisplayInterface))) 

  00cb8	e51b30a4	 ldr         r3, [r11, #-0xA4]
  00cbc	e2832c01	 add         r2, r3, #1, 24
  00cc0	e51b108c	 ldr         r1, [r11, #-0x8C]
  00cc4	e51b0088	 ldr         r0, [r11, #-0x88]
  00cc8	eb000000	 bl          StringCbCatW
  00ccc	e50b0030	 str         r0, [r11, #-0x30]
  00cd0	e51b3030	 ldr         r3, [r11, #-0x30]
  00cd4	e3530000	 cmp         r3, #0
  00cd8	aa000002	 bge         |$LN11@BKL_IOCont|

; 352  :                                         {
; 353  :                                             dwErr = ERROR_INSUFFICIENT_BUFFER;

  00cdc	e3a0307a	 mov         r3, #0x7A
  00ce0	e50b30a0	 str         r3, [r11, #-0xA0]

; 354  :                                         }      
; 355  :                                         else

  00ce4	ea00000b	 b           |$LN10@BKL_IOCont|
  00ce8		 |$LN11@BKL_IOCont|

; 356  :                                         {
; 357  :                                             pBKLinfo->hDDIPowerReq = SetPowerRequirement(pszDevice, D0, POWER_NAME, NULL, 0);

  00ce8	e3a03000	 mov         r3, #0
  00cec	e58d3000	 str         r3, [sp]
  00cf0	e3a03000	 mov         r3, #0
  00cf4	e3a02001	 mov         r2, #1
  00cf8	e3a01000	 mov         r1, #0
  00cfc	e51b0088	 ldr         r0, [r11, #-0x88]
  00d00	eb000000	 bl          SetPowerRequirement
  00d04	e50b002c	 str         r0, [r11, #-0x2C]
  00d08	e51b30a4	 ldr         r3, [r11, #-0xA4]
  00d0c	e2832f89	 add         r2, r3, #0x89, 30
  00d10	e51b302c	 ldr         r3, [r11, #-0x2C]
  00d14	e5823000	 str         r3, [r2]
  00d18		 |$LN10@BKL_IOCont|
  00d18		 |$LN12@BKL_IOCont|

; 358  :                                         }
; 359  :                                         LocalFree(pszDevice);

  00d18	e51b0088	 ldr         r0, [r11, #-0x88]
  00d1c	eb000000	 bl          LocalFree
  00d20		 |$LN14@BKL_IOCont|

; 360  :                                     }
; 361  :                                 }
; 362  :                                 else

  00d20	ea000003	 b           |$LN9@BKL_IOCont|
  00d24		 |$LN15@BKL_IOCont|

; 363  :                                 {
; 364  :                                     ReleasePowerRequirement(pBKLinfo->hDDIPowerReq);

  00d24	e51b30a4	 ldr         r3, [r11, #-0xA4]
  00d28	e2833f89	 add         r3, r3, #0x89, 30
  00d2c	e5930000	 ldr         r0, [r3]
  00d30	eb000000	 bl          ReleasePowerRequirement
  00d34		 |$LN9@BKL_IOCont|

; 365  :                                 }
; 366  : //MYS                                pBKLinfo->dwCurState=SupportedDx;
; 367  :                                 
; 368  :                                 // tell pm which state we went to:
; 369  :                                 *(PCEDEVICE_POWER_STATE) lpOutBuf = SupportedDx;

  00d34	e51b2090	 ldr         r2, [r11, #-0x90]
  00d38	e59b3010	 ldr         r3, [r11, #0x10]
  00d3c	e5832000	 str         r2, [r3]

; 370  :                                 *lpBytesReturned = sizeof(CEDEVICE_POWER_STATE);

  00d40	e59b2018	 ldr         r2, [r11, #0x18]
  00d44	e3a03004	 mov         r3, #4
  00d48	e5823000	 str         r3, [r2]

; 371  : 
; 372  :                                 dwErr = ERROR_SUCCESS;

  00d4c	e3a03000	 mov         r3, #0
  00d50	e50b30a0	 str         r3, [r11, #-0xA0]

; 373  :                                 DEBUGMSG(ZONE_BACKLIGHT, (TEXT("IOCTL_POWER_SET to D%u \r\n"), ReqDx));

  00d54	e59f3224	 ldr         r3, [pc, #0x224]
  00d58	e5933440	 ldr         r3, [r3, #0x440]
  00d5c	e3130001	 tst         r3, #1
  00d60	0a000005	 beq         |$LN57@BKL_IOCont|
  00d64	e51b1094	 ldr         r1, [r11, #-0x94]
  00d68	e59f0224	 ldr         r0, [pc, #0x224]
  00d6c	eb000000	 bl          NKDbgPrintfW
  00d70	e3a03001	 mov         r3, #1
  00d74	e50b3028	 str         r3, [r11, #-0x28]
  00d78	ea000001	 b           |$LN58@BKL_IOCont|
  00d7c		 |$LN57@BKL_IOCont|
  00d7c	e3a03000	 mov         r3, #0
  00d80	e50b3028	 str         r3, [r11, #-0x28]
  00d84		 |$LN58@BKL_IOCont|

; 374  :                                 
; 375  :                             }
; 376  :                             else

  00d84	ea00000b	 b           |$LN8@BKL_IOCont|
  00d88		 |$LN16@BKL_IOCont|

; 377  :                             {
; 378  :                                 DEBUGMSG(ZONE_BACKLIGHT, (TEXT("Unsupported state request D%u\r\n"), ReqDx));

  00d88	e59f31f0	 ldr         r3, [pc, #0x1F0]
  00d8c	e5933440	 ldr         r3, [r3, #0x440]
  00d90	e3130001	 tst         r3, #1
  00d94	0a000005	 beq         |$LN59@BKL_IOCont|
  00d98	e51b1094	 ldr         r1, [r11, #-0x94]
  00d9c	e59f01ec	 ldr         r0, [pc, #0x1EC]
  00da0	eb000000	 bl          NKDbgPrintfW
  00da4	e3a03001	 mov         r3, #1
  00da8	e50b3024	 str         r3, [r11, #-0x24]
  00dac	ea000001	 b           |$LN60@BKL_IOCont|
  00db0		 |$LN59@BKL_IOCont|
  00db0	e3a03000	 mov         r3, #0
  00db4	e50b3024	 str         r3, [r11, #-0x24]
  00db8		 |$LN60@BKL_IOCont|
  00db8		 |$LN8@BKL_IOCont|

; 379  :                             }
; 380  :                         }
; 381  :                         else 

  00db8	ea00000b	 b           |$LN7@BKL_IOCont|
  00dbc		 |$LN17@BKL_IOCont|

; 382  :                         {
; 383  :                             DEBUGMSG(ZONE_BACKLIGHT, (TEXT("Invalid state request D%u\r\n"), ReqDx));

  00dbc	e59f31bc	 ldr         r3, [pc, #0x1BC]
  00dc0	e5933440	 ldr         r3, [r3, #0x440]
  00dc4	e3130001	 tst         r3, #1
  00dc8	0a000005	 beq         |$LN61@BKL_IOCont|
  00dcc	e51b1094	 ldr         r1, [r11, #-0x94]
  00dd0	e59f01b4	 ldr         r0, [pc, #0x1B4]
  00dd4	eb000000	 bl          NKDbgPrintfW
  00dd8	e3a03001	 mov         r3, #1
  00ddc	e50b3020	 str         r3, [r11, #-0x20]
  00de0	ea000001	 b           |$LN62@BKL_IOCont|
  00de4		 |$LN61@BKL_IOCont|
  00de4	e3a03000	 mov         r3, #0
  00de8	e50b3020	 str         r3, [r11, #-0x20]
  00dec		 |$LN62@BKL_IOCont|
  00dec		 |$LN7@BKL_IOCont|
  00dec		 |$LN91@BKL_IOCont|

; 384  :                         }
; 385  :                     }

  00dec	ea00000b	 b           |$LN92@BKL_IOCont|
  00df0		 |$LN87@BKL_IOCont|

; 387  :                     {
; 388  :                         DEBUGMSG(ZONE_BACKLIGHT, (TEXT("Exception in ioctl\r\n")));

  00df0	e59f3188	 ldr         r3, [pc, #0x188]
  00df4	e5933440	 ldr         r3, [r3, #0x440]
  00df8	e3130001	 tst         r3, #1
  00dfc	0a000004	 beq         |$LN63@BKL_IOCont|
  00e00	e59f0174	 ldr         r0, [pc, #0x174]
  00e04	eb000000	 bl          NKDbgPrintfW
  00e08	e3a03001	 mov         r3, #1
  00e0c	e50b301c	 str         r3, [r11, #-0x1C]
  00e10	ea000001	 b           |$LN64@BKL_IOCont|
  00e14		 |$LN63@BKL_IOCont|
  00e14	e3a03000	 mov         r3, #0
  00e18	e50b301c	 str         r3, [r11, #-0x1C]
  00e1c		 |$LN64@BKL_IOCont|
  00e1c	eaffffff	 b           |$LN92@BKL_IOCont|
  00e20		 |$LN92@BKL_IOCont|
  00e20		 |$LN19@BKL_IOCont|

; 389  :                     }
; 390  :                 }
; 391  :                 break;

  00e20	ea000032	 b           |$LN28@BKL_IOCont|
  00e24		 |$LN6@BKL_IOCont|

; 392  : 
; 393  :         case IOCTL_POWER_GET: // gets the current device power state
; 394  :                DEBUGMSG(ZONE_BACKLIGHT,(TEXT("BKL: Received IOCTL_POWER_GET\r\n")));

  00e24	e59f3154	 ldr         r3, [pc, #0x154]
  00e28	e5933440	 ldr         r3, [r3, #0x440]
  00e2c	e3130001	 tst         r3, #1
  00e30	0a000004	 beq         |$LN65@BKL_IOCont|
  00e34	e59f014c	 ldr         r0, [pc, #0x14C]
  00e38	eb000000	 bl          NKDbgPrintfW
  00e3c	e3a03001	 mov         r3, #1
  00e40	e50b3018	 str         r3, [r11, #-0x18]
  00e44	ea000001	 b           |$LN66@BKL_IOCont|
  00e48		 |$LN65@BKL_IOCont|
  00e48	e3a03000	 mov         r3, #0
  00e4c	e50b3018	 str         r3, [r11, #-0x18]
  00e50		 |$LN66@BKL_IOCont|

; 395  :                 if (lpOutBuf != NULL && nOutBufSize >= sizeof(CEDEVICE_POWER_STATE)) 

  00e50	e59b3010	 ldr         r3, [r11, #0x10]
  00e54	e3530000	 cmp         r3, #0
  00e58	0a000024	 beq         |$LN5@BKL_IOCont|
  00e5c	e59b3014	 ldr         r3, [r11, #0x14]
  00e60	e3530004	 cmp         r3, #4
  00e64	3a000021	 bcc         |$LN5@BKL_IOCont|
  00e68		 |$LN97@BKL_IOCont|

; 396  :                 {
; 397  :                     __try 
; 398  :                     {
; 399  :                         CEDEVICE_POWER_STATE   CurrentDx;   
; 400  : 
; 401  :                         CurrentDx = pBKLinfo->dwCurState; 

  00e68	e51b30a4	 ldr         r3, [r11, #-0xA4]
  00e6c	e2833f85	 add         r3, r3, #0x85, 30
  00e70	e5933000	 ldr         r3, [r3]
  00e74	e50b3084	 str         r3, [r11, #-0x84]

; 402  :                         *(PCEDEVICE_POWER_STATE)lpOutBuf = CurrentDx;  

  00e78	e51b2084	 ldr         r2, [r11, #-0x84]
  00e7c	e59b3010	 ldr         r3, [r11, #0x10]
  00e80	e5832000	 str         r2, [r3]

; 403  : 
; 404  :                         dwErr = ERROR_SUCCESS;

  00e84	e3a03000	 mov         r3, #0
  00e88	e50b30a0	 str         r3, [r11, #-0xA0]

; 405  : 
; 406  :                         DEBUGMSG(ZONE_BACKLIGHT, (TEXT("IOCTL_POWER_GET: passing back %u\r\n"), CurrentDx));  

  00e8c	e59f30ec	 ldr         r3, [pc, #0xEC]
  00e90	e5933440	 ldr         r3, [r3, #0x440]
  00e94	e3130001	 tst         r3, #1
  00e98	0a000005	 beq         |$LN67@BKL_IOCont|
  00e9c	e51b1084	 ldr         r1, [r11, #-0x84]
  00ea0	e59f00dc	 ldr         r0, [pc, #0xDC]
  00ea4	eb000000	 bl          NKDbgPrintfW
  00ea8	e3a03001	 mov         r3, #1
  00eac	e50b3014	 str         r3, [r11, #-0x14]
  00eb0	ea000001	 b           |$LN68@BKL_IOCont|
  00eb4		 |$LN67@BKL_IOCont|
  00eb4	e3a03000	 mov         r3, #0
  00eb8	e50b3014	 str         r3, [r11, #-0x14]
  00ebc		 |$LN68@BKL_IOCont|
  00ebc		 |$LN98@BKL_IOCont|

; 407  :                     }

  00ebc	ea00000b	 b           |$LN99@BKL_IOCont|
  00ec0		 |$LN94@BKL_IOCont|

; 409  :                     {
; 410  :                         DEBUGMSG(ZONE_BACKLIGHT, (TEXT("Exception in ioctl\r\n")));

  00ec0	e59f30b8	 ldr         r3, [pc, #0xB8]
  00ec4	e5933440	 ldr         r3, [r3, #0x440]
  00ec8	e3130001	 tst         r3, #1
  00ecc	0a000004	 beq         |$LN69@BKL_IOCont|
  00ed0	e59f00a4	 ldr         r0, [pc, #0xA4]
  00ed4	eb000000	 bl          NKDbgPrintfW
  00ed8	e3a03001	 mov         r3, #1
  00edc	e50b3010	 str         r3, [r11, #-0x10]
  00ee0	ea000001	 b           |$LN70@BKL_IOCont|
  00ee4		 |$LN69@BKL_IOCont|
  00ee4	e3a03000	 mov         r3, #0
  00ee8	e50b3010	 str         r3, [r11, #-0x10]
  00eec		 |$LN70@BKL_IOCont|
  00eec	eaffffff	 b           |$LN99@BKL_IOCont|
  00ef0		 |$LN99@BKL_IOCont|
  00ef0		 |$LN5@BKL_IOCont|
  00ef0		 |$LN3@BKL_IOCont|
  00ef0		 |$LN28@BKL_IOCont|

; 411  :                     }
; 412  :                 }
; 413  : 
; 414  :             break;
; 415  :         
; 416  :         default:     
; 417  :             break;
; 418  :     }
; 419  : 
; 420  :     SetLastError(dwErr);

  00ef0	e51b00a0	 ldr         r0, [r11, #-0xA0]
  00ef4	eb000000	 bl          SetLastError

; 421  :     if(dwErr != ERROR_SUCCESS) 

  00ef8	e51b30a0	 ldr         r3, [r11, #-0xA0]
  00efc	e3530000	 cmp         r3, #0
  00f00	0a000003	 beq         |$LN2@BKL_IOCont|

; 422  :     {
; 423  :         return FALSE;

  00f04	e3a03000	 mov         r3, #0
  00f08	e50b3080	 str         r3, [r11, #-0x80]
  00f0c	ea000002	 b           |$LN31@BKL_IOCont|

; 424  :     } 
; 425  :     else 

  00f10	ea000001	 b           |$LN1@BKL_IOCont|
  00f14		 |$LN2@BKL_IOCont|

; 426  :     {
; 427  :        return TRUE;

  00f14	e3a03001	 mov         r3, #1
  00f18	e50b3080	 str         r3, [r11, #-0x80]
  00f1c		 |$LN1@BKL_IOCont|
  00f1c		 |$LN31@BKL_IOCont|
  00f1c		 |$LN71@BKL_IOCont|

; 428  :     }
; 429  : 
; 430  : }

  00f1c	e51b0080	 ldr         r0, [r11, #-0x80]
  00f20	e24bd00c	 sub         sp, r11, #0xC
  00f24	e89d6800	 ldmia       sp, {r11, sp, lr}
  00f28	e12fff1e	 bx          lr

			 ENDP  ; |BKL_IOControl|

  00f2c		 |$LN93@BKL_IOCont|
  00f2c		 |$LN105@BKL_IOCont|

; 408  :                     __except(EXCEPTION_EXECUTE_HANDLER) 

  00f2c	e52de004	 str         lr, [sp, #-4]!
  00f30	e24dd004	 sub         sp, sp, #4
  00f34		 |$LN96@BKL_IOCont|
  00f34		 |$LN126@BKL_IOCont|
  00f34	e3a00001	 mov         r0, #1
  00f38		 |$LN95@BKL_IOCont|
  00f38	e28dd004	 add         sp, sp, #4
  00f3c	e49df004	 ldr         pc, [sp], #4
  00f40		 |$LN127@BKL_IOCont|
  00f40		 |$LN86@BKL_IOCont|
  00f40		 |$LN107@BKL_IOCont|

; 386  :                     __except(EXCEPTION_EXECUTE_HANDLER) 

  00f40	e52de004	 str         lr, [sp, #-4]!
  00f44	e24dd004	 sub         sp, sp, #4
  00f48		 |$LN89@BKL_IOCont|
  00f48		 |$LN128@BKL_IOCont|
  00f48	e3a00001	 mov         r0, #1
  00f4c		 |$LN88@BKL_IOCont|
  00f4c	e28dd004	 add         sp, sp, #4
  00f50	e49df004	 ldr         pc, [sp], #4
  00f54		 |$LN129@BKL_IOCont|
  00f54		 |$LN79@BKL_IOCont|
  00f54		 |$LN108@BKL_IOCont|

; 304  :                     __except(EXCEPTION_EXECUTE_HANDLER) 

  00f54	e52de004	 str         lr, [sp, #-4]!
  00f58	e24dd004	 sub         sp, sp, #4
  00f5c		 |$LN82@BKL_IOCont|
  00f5c		 |$LN130@BKL_IOCont|
  00f5c	e3a00001	 mov         r0, #1
  00f60		 |$LN81@BKL_IOCont|
  00f60	e28dd004	 add         sp, sp, #4
  00f64	e49df004	 ldr         pc, [sp], #4
  00f68		 |$LN131@BKL_IOCont|
  00f68		 |$LN72@BKL_IOCont|
  00f68		 |$LN109@BKL_IOCont|

; 278  :                 __except(EXCEPTION_EXECUTE_HANDLER) 

  00f68	e52de004	 str         lr, [sp, #-4]!
  00f6c	e24dd004	 sub         sp, sp, #4
  00f70		 |$LN75@BKL_IOCont|
  00f70		 |$LN132@BKL_IOCont|
  00f70	e3a00001	 mov         r0, #1
  00f74		 |$LN74@BKL_IOCont|
  00f74	e28dd004	 add         sp, sp, #4
  00f78	e49df004	 ldr         pc, [sp], #4
  00f7c		 |$LN134@BKL_IOCont|
  00f7c		 |$LN135@BKL_IOCont|
  00f7c	00000000	 DCD         |??_C@_1CK@OBPLBNBH@?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAi?$AAo?$AAc?$AAt?$AAl?$AA?$AN?$AA?6?$AA?$AA@|
  00f80		 |$LN136@BKL_IOCont|
  00f80	00000000	 DCD         |dpCurSettings|
  00f84		 |$LN137@BKL_IOCont|
  00f84	00000000	 DCD         |??_C@_1EG@OGJLJFEK@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?3?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAb?$AAa?$AAc?$AAk?$AA?5?$AA?$CF?$AAu@|
  00f88		 |$LN138@BKL_IOCont|
  00f88	00000000	 DCD         |??_C@_1EA@NBFEDNME@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@|
  00f8c		 |$LN139@BKL_IOCont|
  00f8c	00000000	 DCD         |??_C@_1DI@NAFKEEIM@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAD?$AA?$CF?$AAu?$AA?$AN?$AA?6?$AA?$AA@|
  00f90		 |$LN140@BKL_IOCont|
  00f90	00000000	 DCD         |??_C@_1EA@ELBMACOD@?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAD?$AA?$CF?$AAu?$AA?$AN?$AA?6?$AA?$AA@|
  00f94		 |$LN141@BKL_IOCont|
  00f94	00000000	 DCD         |??_C@_1DE@MLACPIHD@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF?$AAu?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  00f98		 |$LN142@BKL_IOCont|
  00f98	00000000	 DCD         |??_C@_13FPGAJAPJ@?$AA?2?$AA?$AA@|
  00f9c		 |$LN143@BKL_IOCont|
  00f9c	00000000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  00fa0		 |$LN144@BKL_IOCont|
  00fa0	00000000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  00fa4		 |$LN145@BKL_IOCont|
  00fa4	00000000	 DCD         |??_C@_1KK@HDCMPCL@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  00fa8		 |$LN146@BKL_IOCont|
  00fa8	00000000	 DCD         |??_C@_1EO@BHDHHEGO@?$AA?$HL?$AAE?$AAB?$AA9?$AA1?$AAC?$AA7?$AAC?$AA9?$AA?9?$AA8?$AAB?$AAF?$AA6?$AA?9?$AA4?$AAa?$AA2?$AAd?$AA?9?$AA9?$AAA?$AAB?$AA8?$AA?9?$AA6?$AA9?$AA7?$AA2?$AA4?$AAE?$AAE@|
  00fac		 |$LN147@BKL_IOCont|
  00fac	00000000	 DCD         |?g_pBacklight@@3PAVCBacklightRoot@@A|
  00fb0		 |$LN148@BKL_IOCont|
  00fb0	00000000	 DCD         |??_C@_1EE@LOPENEM@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF?$AAu?$AA?5?$AA?$AN@|
  00fb4		 |$LN149@BKL_IOCont|
  00fb4	00000000	 DCD         |??_C@_1EA@NOEKOLEH@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@|
  00fb8		 |$LN150@BKL_IOCont|
  00fb8	00000000	 DCD         |??_C@_1DI@DIJBIAPM@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAQ?$AAU?$AAE?$AAR?$AAY?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00fbc		 |$LN151@BKL_IOCont|
  00fbc	00000000	 DCD         |??_C@_1O@KPGHAGDD@?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AA@|
  00fc0		 |$LN152@BKL_IOCont|
  00fc0	00000000	 DCD         |??_C@_1BE@GCAFJAHI@?$AAs?$AAu?$AAc?$AAc?$AAe?$AAe?$AAd?$AAe?$AAd?$AA?$AA@|
  00fc4		 |$LN153@BKL_IOCont|
  00fc4	00000000	 DCD         |??_C@_1EE@POLDGFFP@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAQ?$AAU?$AAE?$AAR?$AAY?$AA?$AN@|
  00fc8		 |$LN154@BKL_IOCont|
  00fc8	00000000	 DCD         |??_C@_1CK@MHJHMPML@?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAi?$AAo?$AAc?$AAt?$AAl?$AA?$AN?$AA?6?$AA?$AA@|
  00fcc		 |$LN155@BKL_IOCont|
  00fcc	00000000	 DCD         |??_C@_1EA@GIBMNGPI@?$AAB?$AAK?$AAL?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAC?$AAA?$AAP?$AAA?$AAB?$AAI?$AAL?$AAI?$AAT?$AAI?$AAE?$AAS?$AA?$AN?$AA?6?$AA?$AA@|
  00fd0		 |$LN156@BKL_IOCont|
  00fd0	00000000	 DCD         |??_C@_1FO@NOEPHHN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAK?$AAL?$AA_?$AAD?$AAe?$AAi?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAc?$AAo?$AAn@|
  00fd4		 |$LN157@BKL_IOCont|
  00fd4	00000000	 DCD         |??_C@_1EA@KKNHEDMA@?$AAB?$AAK?$AAL?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA?5?$AAc?$AAo?$AAd?$AAe?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00fd8		 |$LN133@BKL_IOCont|
  00fd8		 |$LN110@BKL_IOCont|
	EXPORT	|??_C@_1DC@LPOPGDGG@?$AAD?$AAl?$AAl?$AAM?$AAa?$AAi?$AAn?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAd?$AAl?$AAl?$AA?5?$AAd?$AAe?$AAt?$AAa?$AAc?$AAh?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@FFJEFJIA@?$AAD?$AAl?$AAl?$AAM?$AAa?$AAi?$AAn?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAd?$AAl?$AAl?$AA?5?$AAa?$AAt?$AAt?$AAa?$AAc?$AAh?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|DllMain|
	IMPORT	|RegisterDbgZones|

  00050			 AREA	 |.pdata|, PDATA
|$T32969| DCD	|$LN13@DllMain|
	DCD	0x40003004

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@LPOPGDGG@?$AAD?$AAl?$AAl?$AAM?$AAa?$AAi?$AAn?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAd?$AAl?$AAl?$AA?5?$AAd?$AAe?$AAt?$AAa?$AAc?$AAh?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "l", 0x0, "l", 0x0, "M", 0x0, "a", 0x0, "i", 0x0, "n"
	DCB	0x0, "(", 0x0, ")", 0x0, ":", 0x0, " ", 0x0, "d", 0x0, "l"
	DCB	0x0, "l", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "t", 0x0, "a"
	DCB	0x0, "c", 0x0, "h", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@FFJEFJIA@?$AAD?$AAl?$AAl?$AAM?$AAa?$AAi?$AAn?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAd?$AAl?$AAl?$AA?5?$AAa?$AAt?$AAt?$AAa?$AAc?$AAh?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "l", 0x0, "l", 0x0, "M", 0x0, "a", 0x0, "i", 0x0, "n"
	DCB	0x0, "(", 0x0, ")", 0x0, ":", 0x0, " ", 0x0, "d", 0x0, "l"
	DCB	0x0, "l", 0x0, " ", 0x0, "a", 0x0, "t", 0x0, "t", 0x0, "a"
	DCB	0x0, "c", 0x0, "h", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  00fd8			 AREA	 |.text|, CODE, ARM

  00fd8		 |DllMain| PROC

; 436  : {

  00fd8		 |$LN13@DllMain|
  00fd8	e1a0c00d	 mov         r12, sp
  00fdc	e92d0007	 stmdb       sp!, {r0 - r2}
  00fe0	e92d5000	 stmdb       sp!, {r12, lr}
  00fe4	e24dd010	 sub         sp, sp, #0x10
  00fe8		 |$M32966|

; 437  :     UNREFERENCED_PARAMETER(hinstDll);
; 438  :     UNREFERENCED_PARAMETER(Reserved);
; 439  :     
; 440  :     switch(Reason) {

  00fe8	e59d301c	 ldr         r3, [sp, #0x1C]
  00fec	e58d3004	 str         r3, [sp, #4]
  00ff0	e59d3004	 ldr         r3, [sp, #4]
  00ff4	e3530000	 cmp         r3, #0
  00ff8	0a000012	 beq         |$LN1@DllMain|
  00ffc	e59d3004	 ldr         r3, [sp, #4]
  01000	e3530001	 cmp         r3, #1
  01004	0a000000	 beq         |$LN2@DllMain|
  01008	ea000019	 b           |$LN3@DllMain|
  0100c		 |$LN2@DllMain|

; 441  :     case DLL_PROCESS_ATTACH:
; 442  :         DEBUGREGISTER((HMODULE)hinstDll);

  0100c	e59f107c	 ldr         r1, [pc, #0x7C]
  01010	e59d0018	 ldr         r0, [sp, #0x18]
  01014	eb000000	 bl          RegisterDbgZones

; 443  :         DEBUGMSG(ZONE_BACKLIGHT, (TEXT("DllMain(): dll attach.\r\n")));

  01018	e59f3070	 ldr         r3, [pc, #0x70]
  0101c	e5933440	 ldr         r3, [r3, #0x440]
  01020	e3130001	 tst         r3, #1
  01024	0a000004	 beq         |$LN7@DllMain|
  01028	e59f0064	 ldr         r0, [pc, #0x64]
  0102c	eb000000	 bl          NKDbgPrintfW
  01030	e3a03001	 mov         r3, #1
  01034	e58d3008	 str         r3, [sp, #8]
  01038	ea000001	 b           |$LN8@DllMain|
  0103c		 |$LN7@DllMain|
  0103c	e3a03000	 mov         r3, #0
  01040	e58d3008	 str         r3, [sp, #8]
  01044		 |$LN8@DllMain|

; 444  :         break;

  01044	ea00000a	 b           |$LN3@DllMain|
  01048		 |$LN1@DllMain|

; 445  :         
; 446  :     case DLL_PROCESS_DETACH:
; 447  :         DEBUGMSG(ZONE_BACKLIGHT, (TEXT("DllMain(): dll detach.\r\n")));

  01048	e59f3040	 ldr         r3, [pc, #0x40]
  0104c	e5933440	 ldr         r3, [r3, #0x440]
  01050	e3130001	 tst         r3, #1
  01054	0a000004	 beq         |$LN9@DllMain|
  01058	e59f002c	 ldr         r0, [pc, #0x2C]
  0105c	eb000000	 bl          NKDbgPrintfW
  01060	e3a03001	 mov         r3, #1
  01064	e58d300c	 str         r3, [sp, #0xC]
  01068	ea000001	 b           |$LN10@DllMain|
  0106c		 |$LN9@DllMain|
  0106c	e3a03000	 mov         r3, #0
  01070	e58d300c	 str         r3, [sp, #0xC]
  01074		 |$LN10@DllMain|
  01074		 |$LN3@DllMain|

; 448  :         break;
; 449  :     }
; 450  :     return TRUE;

  01074	e3a03001	 mov         r3, #1
  01078	e58d3000	 str         r3, [sp]

; 451  : }

  0107c	e59d0000	 ldr         r0, [sp]
  01080	e28dd010	 add         sp, sp, #0x10
  01084	e89d6000	 ldmia       sp, {sp, lr}
  01088	e12fff1e	 bx          lr
  0108c		 |$LN14@DllMain|
  0108c		 |$LN15@DllMain|
  0108c	00000000	 DCD         |??_C@_1DC@LPOPGDGG@?$AAD?$AAl?$AAl?$AAM?$AAa?$AAi?$AAn?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAd?$AAl?$AAl?$AA?5?$AAd?$AAe?$AAt?$AAa?$AAc?$AAh?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  01090		 |$LN16@DllMain|
  01090	00000000	 DCD         |dpCurSettings|
  01094		 |$LN17@DllMain|
  01094	00000000	 DCD         |??_C@_1DC@FFJEFJIA@?$AAD?$AAl?$AAl?$AAM?$AAa?$AAi?$AAn?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAd?$AAl?$AAl?$AA?5?$AAa?$AAt?$AAt?$AAa?$AAc?$AAh?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  01098		 |$M32967|

			 ENDP  ; |DllMain|

	END
