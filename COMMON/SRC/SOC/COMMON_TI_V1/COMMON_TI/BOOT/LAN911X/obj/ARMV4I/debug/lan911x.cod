; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\BOOT\LAN911X\lan911x.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.bss|, NOINIT
|g_pLAN911X| %	0x4
|g_dwChipId| %	0x4

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|??_C@_1IE@KFEKGLKJ@?$AA?9?$AAL?$AAA?$AAN?$AA9?$AA1?$AA1?$AAX?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAm?$AAa?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AA0?$AA2?$AAx?$AA?3?$AA?$CF?$AA0?$AA2?$AAx?$AA?3?$AA?$CF?$AA0?$AA2@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@ECEBOIGE@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?$CB?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@DKKJNAHG@?$AA1?$AA0?$AA0?$AAM?$AAb?$AAp?$AAs?$AA?0?$AA?5?$AAF?$AAu?$AAl?$AAl?$AA?5?$AAD?$AAu?$AAp?$AAl?$AAe?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@CFGPBEPG@?$AA1?$AA0?$AA0?$AAM?$AAb?$AAp?$AAs?$AA?0?$AA?5?$AAH?$AAa?$AAl?$AAf?$AA?5?$AAD?$AAu?$AAp?$AAl?$AAe?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@IHIEPLGN@?$AA1?$AA0?$AAM?$AAb?$AAp?$AAs?$AA?0?$AA?5?$AAF?$AAu?$AAl?$AAl?$AA?5?$AAD?$AAu?$AAp?$AAl?$AAe?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@JIECDPON@?$AA1?$AA0?$AAM?$AAb?$AAp?$AAs?$AA?0?$AA?5?$AAH?$AAa?$AAl?$AAf?$AA?5?$AAD?$AAu?$AAp?$AAl?$AAe?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@EEDCFFGI@?$AAL?$AAi?$AAn?$AAk?$AA?5?$AAE?$AAs?$AAt?$AAa?$AAb?$AAl?$AAi?$AAs?$AAh?$AAe?$AAd?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@FBJAOFLG@?$AAL?$AAi?$AAn?$AAk?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$CB?$AA?$CB?$AA?5?$AA?5?$AAA?$AAb?$AAo?$AAr?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@GMMPMIJN@?$AAM?$AAA?$AAC?$AA?5?$AAA?$AAD?$AAD?$AAR?$AA?5?$AAi?$AAn?$AA?5?$AAE?$AAE?$AAP?$AAR?$AAO?$AAM?$AA?3?$AA?5?$AA?$CF?$AAx?$AA?3?$AA?$CF?$AAx?$AA?3?$AA?$CF?$AAx?$AA?3?$AA?$CF?$AAx?$AA?3@| [ DATA ] ; `string'
	EXPORT	|LAN911XGetMacAddress|
	EXPORT	|??_C@_1JK@NKCKLILE@?$AAM?$AAA?$AAC?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAf?$AAo?$AAu?$AAn?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAE?$AAE?$AAP?$AAR?$AAO?$AAM?$AA?$CB@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@FCBDMEID@?$AAS?$AAo?$AAf?$AAt?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAt?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$CB?$AA?$CB?$AA?5?$AA?$CI?$AAH?$AAW?$AA_?$AAC?$AAF?$AAG?$AA?5?$AA?$DN?$AA?5?$AA0@| [ DATA ] ; `string'
	EXPORT	|LAN911XFindController|
	EXPORT	|??_C@_1EO@ELGKCHGO@?$AA?$CL?$AAL?$AAA?$AAN?$AA9?$AA1?$AA1?$AAX?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|LAN911XInit|
	IMPORT	|OEMKitlGetSecs|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|OALStall|
	IMPORT	|OALPAtoVA|
	IMPORT	|OALLogSerial|
	IMPORT	|dpCurSettings|

  00000			 AREA	 |.pdata|, PDATA
|$T43556| DCD	|$LN65@LAN911XIni|
	DCD	0x4001c304
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\boot\lan911x\lan911x.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@KFEKGLKJ@?$AA?9?$AAL?$AAA?$AAN?$AA9?$AA1?$AA1?$AAX?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAm?$AAa?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AA0?$AA2?$AAx?$AA?3?$AA?$CF?$AA0?$AA2?$AAx?$AA?3?$AA?$CF?$AA0?$AA2@| DCB "-"
	DCB	0x0, "L", 0x0, "A", 0x0, "N", 0x0, "9", 0x0, "1", 0x0, "1"
	DCB	0x0, "X", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "("
	DCB	0x0, "m", 0x0, "a", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, ":", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "x", 0x0, ":", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, ":", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "x", 0x0, ":", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, ":", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, ","
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "t", 0x0, "C", 0x0, "o"
	DCB	0x0, "d", 0x0, "e", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@ECEBOIGE@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?$CB?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "m", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, " "
	DCB	0x0, "s", 0x0, "e", 0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, "!", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@DKKJNAHG@?$AA1?$AA0?$AA0?$AAM?$AAb?$AAp?$AAs?$AA?0?$AA?5?$AAF?$AAu?$AAl?$AAl?$AA?5?$AAD?$AAu?$AAp?$AAl?$AAe?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "1"
	DCB	0x0, "0", 0x0, "0", 0x0, "M", 0x0, "b", 0x0, "p", 0x0, "s"
	DCB	0x0, ",", 0x0, " ", 0x0, "F", 0x0, "u", 0x0, "l", 0x0, "l"
	DCB	0x0, " ", 0x0, "D", 0x0, "u", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@CFGPBEPG@?$AA1?$AA0?$AA0?$AAM?$AAb?$AAp?$AAs?$AA?0?$AA?5?$AAH?$AAa?$AAl?$AAf?$AA?5?$AAD?$AAu?$AAp?$AAl?$AAe?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "1"
	DCB	0x0, "0", 0x0, "0", 0x0, "M", 0x0, "b", 0x0, "p", 0x0, "s"
	DCB	0x0, ",", 0x0, " ", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "f"
	DCB	0x0, " ", 0x0, "D", 0x0, "u", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@IHIEPLGN@?$AA1?$AA0?$AAM?$AAb?$AAp?$AAs?$AA?0?$AA?5?$AAF?$AAu?$AAl?$AAl?$AA?5?$AAD?$AAu?$AAp?$AAl?$AAe?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "1"
	DCB	0x0, "0", 0x0, "M", 0x0, "b", 0x0, "p", 0x0, "s", 0x0, ","
	DCB	0x0, " ", 0x0, "F", 0x0, "u", 0x0, "l", 0x0, "l", 0x0, " "
	DCB	0x0, "D", 0x0, "u", 0x0, "p", 0x0, "l", 0x0, "e", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@JIECDPON@?$AA1?$AA0?$AAM?$AAb?$AAp?$AAs?$AA?0?$AA?5?$AAH?$AAa?$AAl?$AAf?$AA?5?$AAD?$AAu?$AAp?$AAl?$AAe?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "1"
	DCB	0x0, "0", 0x0, "M", 0x0, "b", 0x0, "p", 0x0, "s", 0x0, ","
	DCB	0x0, " ", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "f", 0x0, " "
	DCB	0x0, "D", 0x0, "u", 0x0, "p", 0x0, "l", 0x0, "e", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@EEDCFFGI@?$AAL?$AAi?$AAn?$AAk?$AA?5?$AAE?$AAs?$AAt?$AAa?$AAb?$AAl?$AAi?$AAs?$AAh?$AAe?$AAd?$AA?3?$AA?5?$AA?$AA@| DCB "L"
	DCB	0x0, "i", 0x0, "n", 0x0, "k", 0x0, " ", 0x0, "E", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "i", 0x0, "s"
	DCB	0x0, "h", 0x0, "e", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@FBJAOFLG@?$AAL?$AAi?$AAn?$AAk?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$CB?$AA?$CB?$AA?5?$AA?5?$AAA?$AAb?$AAo?$AAr?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@| DCB "L"
	DCB	0x0, "i", 0x0, "n", 0x0, "k", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "t", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, "!", 0x0, "!"
	DCB	0x0, " ", 0x0, " ", 0x0, "A", 0x0, "b", 0x0, "o", 0x0, "r"
	DCB	0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@GMMPMIJN@?$AAM?$AAA?$AAC?$AA?5?$AAA?$AAD?$AAD?$AAR?$AA?5?$AAi?$AAn?$AA?5?$AAE?$AAE?$AAP?$AAR?$AAO?$AAM?$AA?3?$AA?5?$AA?$CF?$AAx?$AA?3?$AA?$CF?$AAx?$AA?3?$AA?$CF?$AAx?$AA?3?$AA?$CF?$AAx?$AA?3@| DCB "M"
	DCB	0x0, "A", 0x0, "C", 0x0, " ", 0x0, "A", 0x0, "D", 0x0, "D"
	DCB	0x0, "R", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "E"
	DCB	0x0, "E", 0x0, "P", 0x0, "R", 0x0, "O", 0x0, "M", 0x0, ":"
	DCB	0x0, " ", 0x0, "%", 0x0, "x", 0x0, ":", 0x0, "%", 0x0, "x"
	DCB	0x0, ":", 0x0, "%", 0x0, "x", 0x0, ":", 0x0, "%", 0x0, "x"
	DCB	0x0, ":", 0x0, "%", 0x0, "x", 0x0, ":", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JK@NKCKLILE@?$AAM?$AAA?$AAC?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAf?$AAo?$AAu?$AAn?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAE?$AAE?$AAP?$AAR?$AAO?$AAM?$AA?$CB@| DCB "M"
	DCB	0x0, "A", 0x0, "C", 0x0, " ", 0x0, "a", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "u"
	DCB	0x0, "n", 0x0, "d", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, " "
	DCB	0x0, "E", 0x0, "E", 0x0, "P", 0x0, "R", 0x0, "O", 0x0, "M"
	DCB	0x0, "!", 0x0, "!", 0x0, " ", 0x0, " ", 0x0, "u", 0x0, "s"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "e", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "c", 0x0, " "
	DCB	0x0, "a", 0x0, "d", 0x0, "d", 0x0, "r", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, " ", 0x0, "f", 0x0, "r", 0x0, "o", 0x0, "m"
	DCB	0x0, " ", 0x0, "t", 0x0, "h", 0x0, "e", 0x0, " ", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@FCBDMEID@?$AAS?$AAo?$AAf?$AAt?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAt?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$CB?$AA?$CB?$AA?5?$AA?$CI?$AAH?$AAW?$AA_?$AAC?$AAF?$AAG?$AA?5?$AA?$DN?$AA?5?$AA0@| DCB "S"
	DCB	0x0, "o", 0x0, "f", 0x0, "t", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "t", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, "!"
	DCB	0x0, "!", 0x0, " ", 0x0, "(", 0x0, "H", 0x0, "W", 0x0, "_"
	DCB	0x0, "C", 0x0, "F", 0x0, "G", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, " "
	DCB	0x0, "A", 0x0, "b", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, ".", 0x0, ".", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@ELGKCHGO@?$AA?$CL?$AAL?$AAA?$AAN?$AA9?$AA1?$AA1?$AAX?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF@| DCB "+"
	DCB	0x0, "L", 0x0, "A", 0x0, "N", 0x0, "9", 0x0, "1", 0x0, "1"
	DCB	0x0, "X", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |LAN911XInit| PROC

; 240  : {

  00000		 |$LN65@LAN911XIni|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd08c	 sub         sp, sp, #0x8C
  00010		 |$M43553|

; 241  :     BOOL RetCode = FALSE;

  00010	e3a03000	 mov         r3, #0
  00014	e58d3014	 str         r3, [sp, #0x14]

; 242  :     DWORD dwTemp;
; 243  :     UINT32 StartTime;
; 244  : 
; 245  : 	UNREFERENCED_PARAMETER(offset);
; 246  : 
; 247  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (
; 248  :         L"+LAN911XInit(0x%08x, 0x%08x, 0x%08x)\r\n", pAddress, offset, mac
; 249  :         ));

  00018	e59f36b4	 ldr         r3, [pc, #0x6B4]
  0001c	e5933440	 ldr         r3, [r3, #0x440]
  00020	e3130a02	 tst         r3, #2, 20
  00024	0a00000b	 beq         |$LN29@LAN911XIni|
  00028	e59f36a4	 ldr         r3, [pc, #0x6A4]
  0002c	e5933440	 ldr         r3, [r3, #0x440]
  00030	e3130004	 tst         r3, #4
  00034	0a000007	 beq         |$LN29@LAN911XIni|
  00038	e59d309c	 ldr         r3, [sp, #0x9C]
  0003c	e59d2098	 ldr         r2, [sp, #0x98]
  00040	e59d1094	 ldr         r1, [sp, #0x94]
  00044	e59f06bc	 ldr         r0, [pc, #0x6BC]
  00048	eb000000	 bl          OALLogSerial
  0004c	e3a03001	 mov         r3, #1
  00050	e58d303c	 str         r3, [sp, #0x3C]
  00054	ea000001	 b           |$LN30@LAN911XIni|
  00058		 |$LN29@LAN911XIni|
  00058	e3a03000	 mov         r3, #0
  0005c	e58d303c	 str         r3, [sp, #0x3C]
  00060		 |$LN30@LAN911XIni|

; 250  :     // Save address
; 251  :     if ((DWORD) pAddress > 0x80000000)

  00060	e59d3094	 ldr         r3, [sp, #0x94]
  00064	e3530102	 cmp         r3, #2, 2
  00068	9a000003	 bls         |$LN26@LAN911XIni|

; 252  :     {
; 253  :         g_pLAN911X = (LAN911X_REGS*)pAddress;

  0006c	e59d2094	 ldr         r2, [sp, #0x94]
  00070	e59f3660	 ldr         r3, [pc, #0x660]
  00074	e5832000	 str         r2, [r3]

; 254  :     }
; 255  :     else

  00078	ea000006	 b           |$LN25@LAN911XIni|
  0007c		 |$LN26@LAN911XIni|

; 256  :     {
; 257  :         g_pLAN911X = (LAN911X_REGS*)OALPAtoUA((DWORD) pAddress);

  0007c	e3a01000	 mov         r1, #0
  00080	e59d0094	 ldr         r0, [sp, #0x94]
  00084	eb000000	 bl          OALPAtoVA
  00088	e58d0040	 str         r0, [sp, #0x40]
  0008c	e59d2040	 ldr         r2, [sp, #0x40]
  00090	e59f3640	 ldr         r3, [pc, #0x640]
  00094	e5832000	 str         r2, [r3]
  00098		 |$LN25@LAN911XIni|

; 258  :     }
; 259  : 
; 260  :     // wake chip, check for valid ID, wait for ready
; 261  :     if (!LAN911XFindController(g_pLAN911X,&dwTemp))

  00098	e28d1010	 add         r1, sp, #0x10
  0009c	e59f3634	 ldr         r3, [pc, #0x634]
  000a0	e5930000	 ldr         r0, [r3]
  000a4	eb000000	 bl          LAN911XFindController
  000a8	e58d0044	 str         r0, [sp, #0x44]
  000ac	e59d3044	 ldr         r3, [sp, #0x44]
  000b0	e3530000	 cmp         r3, #0
  000b4	1a000000	 bne         |$LN24@LAN911XIni|

; 262  :         goto ErrorReturn;

  000b8	ea000154	 b           |$ErrorReturn$43158|
  000bc		 |$LN24@LAN911XIni|

; 263  :      
; 264  :     // Issue soft reset, wait for soft reset to finish or timeout
; 265  :     WRITE_REGISTER_ULONG((PULONG)&g_pLAN911X->hw_cfg, HW_CFG_SRST | HW_CFG_SF | (5<<16));

  000bc	e59f3614	 ldr         r3, [pc, #0x614]
  000c0	e5933000	 ldr         r3, [r3]
  000c4	e2832074	 add         r2, r3, #0x74
  000c8	e3a03815	 mov         r3, #0x15, 16
  000cc	e3833001	 orr         r3, r3, #1
  000d0	e5823000	 str         r3, [r2]
  000d4		 |$LN23@LAN911XIni|

; 266  :     do 
; 267  :     {
; 268  :         dwTemp = READ_REGISTER_ULONG((PULONG)&g_pLAN911X->hw_cfg);

  000d4	e59f35fc	 ldr         r3, [pc, #0x5FC]
  000d8	e5933000	 ldr         r3, [r3]
  000dc	e2833074	 add         r3, r3, #0x74
  000e0	e5933000	 ldr         r3, [r3]
  000e4	e58d3010	 str         r3, [sp, #0x10]

; 269  :     }
; 270  :     while ((dwTemp & HW_CFG_SRST) && !(dwTemp & HW_CFG_SRST_TIMEOUT));

  000e8	e59d3010	 ldr         r3, [sp, #0x10]
  000ec	e3130001	 tst         r3, #1
  000f0	0a000002	 beq         |$LN20@LAN911XIni|
  000f4	e59d3010	 ldr         r3, [sp, #0x10]
  000f8	e3130002	 tst         r3, #2
  000fc	0afffff4	 beq         |$LN23@LAN911XIni|
  00100		 |$LN20@LAN911XIni|

; 271  :     if (dwTemp & HW_CFG_SRST_TIMEOUT)

  00100	e59d3010	 ldr         r3, [sp, #0x10]
  00104	e3130002	 tst         r3, #2
  00108	0a00000c	 beq         |$LN19@LAN911XIni|

; 272  :     {
; 273  :         OALMSGS(OAL_ERROR, (L"Soft reset timeout!! (HW_CFG = 0x%x) Aborting...\r\n", dwTemp));

  0010c	e59f35c0	 ldr         r3, [pc, #0x5C0]
  00110	e5933440	 ldr         r3, [r3, #0x440]
  00114	e3130001	 tst         r3, #1
  00118	0a000005	 beq         |$LN31@LAN911XIni|
  0011c	e59d1010	 ldr         r1, [sp, #0x10]
  00120	e59f05dc	 ldr         r0, [pc, #0x5DC]
  00124	eb000000	 bl          OALLogSerial
  00128	e3a03001	 mov         r3, #1
  0012c	e58d3048	 str         r3, [sp, #0x48]
  00130	ea000001	 b           |$LN32@LAN911XIni|
  00134		 |$LN31@LAN911XIni|
  00134	e3a03000	 mov         r3, #0
  00138	e58d3048	 str         r3, [sp, #0x48]
  0013c		 |$LN32@LAN911XIni|

; 274  :         goto ErrorReturn;

  0013c	ea000133	 b           |$ErrorReturn$43158|
  00140		 |$LN19@LAN911XIni|
  00140		 |$LN18@LAN911XIni|

; 275  :     }
; 276  :     // wait for chip ready
; 277  :     while ( !(PMT_CTL_READY & READ_REGISTER_ULONG((PULONG)&g_pLAN911X->pmt_ctrl)));    

  00140	e59f3590	 ldr         r3, [pc, #0x590]
  00144	e5933000	 ldr         r3, [r3]
  00148	e2833084	 add         r3, r3, #0x84
  0014c	e5933000	 ldr         r3, [r3]
  00150	e3130001	 tst         r3, #1
  00154	1a000000	 bne         |$LN17@LAN911XIni|
  00158	eafffff8	 b           |$LN18@LAN911XIni|
  0015c		 |$LN17@LAN911XIni|

; 278  : 
; 279  :     
; 280  :     // reset the PHY, wait for reset done
; 281  :     WRITE_REGISTER_ULONG((PULONG)&g_pLAN911X->pmt_ctrl, PMT_CTL_PHY_RESET | READ_REGISTER_ULONG((PULONG)&g_pLAN911X->pmt_ctrl));

  0015c	e59f3574	 ldr         r3, [pc, #0x574]
  00160	e5933000	 ldr         r3, [r3]
  00164	e2833084	 add         r3, r3, #0x84
  00168	e5933000	 ldr         r3, [r3]
  0016c	e3832b01	 orr         r2, r3, #1, 22
  00170	e59f3560	 ldr         r3, [pc, #0x560]
  00174	e5933000	 ldr         r3, [r3]
  00178	e2833084	 add         r3, r3, #0x84
  0017c	e5832000	 str         r2, [r3]
  00180		 |$LN16@LAN911XIni|

; 282  :     while ( (PMT_CTL_PHY_RESET & READ_REGISTER_ULONG((PULONG)&g_pLAN911X->pmt_ctrl)));

  00180	e59f3550	 ldr         r3, [pc, #0x550]
  00184	e5933000	 ldr         r3, [r3]
  00188	e2833084	 add         r3, r3, #0x84
  0018c	e5933000	 ldr         r3, [r3]
  00190	e3130b01	 tst         r3, #1, 22
  00194	0a000000	 beq         |$LN15@LAN911XIni|
  00198	eafffff8	 b           |$LN16@LAN911XIni|
  0019c		 |$LN15@LAN911XIni|

; 283  : 
; 284  :     // extra delay to allow PHY to enter operational state (finish reset and start RX_CLK/TX_CLK)
; 285  :     OALStall(1000);

  0019c	e3a00ffa	 mov         r0, #0xFA, 30
  001a0	eb000000	 bl          OALStall

; 286  :    
; 287  :     
; 288  : 
; 289  :     // Default FIFO allocation (5K TX, 11K RX)
; 290  :     // Set Store and Forward
; 291  :     WRITE_REGISTER_ULONG((PULONG)&g_pLAN911X->hw_cfg, HW_CFG_SF | (5<<16));

  001a4	e59f352c	 ldr         r3, [pc, #0x52C]
  001a8	e5933000	 ldr         r3, [r3]
  001ac	e2832074	 add         r2, r3, #0x74
  001b0	e3a03815	 mov         r3, #0x15, 16
  001b4	e5823000	 str         r3, [r2]

; 292  : 
; 293  :     // set flow control high to 7KB, low to 3.5KB, backpressure duration 50us/500us (10/100)
; 294  :     WRITE_REGISTER_ULONG((PULONG)&g_pLAN911X->afc_cfg, 0x006e3740);

  001b8	e59f3518	 ldr         r3, [pc, #0x518]
  001bc	e5933000	 ldr         r3, [r3]
  001c0	e28320ac	 add         r2, r3, #0xAC
  001c4	e3a0386e	 mov         r3, #0x6E, 16
  001c8	e3833ddd	 orr         r3, r3, #0xDD, 26
  001cc	e5823000	 str         r3, [r2]

; 295  : 
; 296  :     if (!(E2P_CMD_MAC_LOADED & READ_EEPROM_CMD(g_pLAN911X)))

  001d0	e59f3528	 ldr         r3, [pc, #0x528]
  001d4	e5932000	 ldr         r2, [r3]
  001d8	e3a03493	 mov         r3, #0x93, 8
  001dc	e3833811	 orr         r3, r3, #0x11, 16
  001e0	e1520003	 cmp         r2, r3
  001e4	1a000002	 bne         |$LN33@LAN911XIni|
  001e8	e3a03801	 mov         r3, #1, 16
  001ec	e58d304c	 str         r3, [sp, #0x4C]
  001f0	ea000001	 b           |$LN34@LAN911XIni|
  001f4		 |$LN33@LAN911XIni|
  001f4	e3a03c01	 mov         r3, #1, 24
  001f8	e58d304c	 str         r3, [sp, #0x4C]
  001fc		 |$LN34@LAN911XIni|
  001fc	e59f34fc	 ldr         r3, [pc, #0x4FC]
  00200	e5932000	 ldr         r2, [r3]
  00204	e3a03493	 mov         r3, #0x93, 8
  00208	e3833811	 orr         r3, r3, #0x11, 16
  0020c	e1520003	 cmp         r2, r3
  00210	1a000004	 bne         |$LN35@LAN911XIni|
  00214	e59f34bc	 ldr         r3, [pc, #0x4BC]
  00218	e5933000	 ldr         r3, [r3]
  0021c	e2833f6d	 add         r3, r3, #0x6D, 30
  00220	e58d3050	 str         r3, [sp, #0x50]
  00224	ea000003	 b           |$LN36@LAN911XIni|
  00228		 |$LN35@LAN911XIni|
  00228	e59f34a8	 ldr         r3, [pc, #0x4A8]
  0022c	e5933000	 ldr         r3, [r3]
  00230	e28330b0	 add         r3, r3, #0xB0
  00234	e58d3050	 str         r3, [sp, #0x50]
  00238		 |$LN36@LAN911XIni|
  00238	e59d3050	 ldr         r3, [sp, #0x50]
  0023c	e5932000	 ldr         r2, [r3]
  00240	e59d304c	 ldr         r3, [sp, #0x4C]
  00244	e1130002	 tst         r3, r2
  00248	1a000019	 bne         |$LN14@LAN911XIni|

; 297  :     {
; 298  : #if defined(SIMULATED_MAC_ADDRESS0) && defined(SIMULATED_MAC_ADDRESS1) && defined(SIMULATED_MAC_ADDRESS2)
; 299  :         OALMSGS(OAL_ERROR, (L"MAC address not found in EEPROM, using simulated MAC address\r\n"));
; 300  :         mac[0] = SIMULATED_MAC_ADDRESS0;
; 301  :         mac[1] = SIMULATED_MAC_ADDRESS1;
; 302  :         mac[2] = SIMULATED_MAC_ADDRESS2;
; 303  : #else
; 304  :         OALMSGS(OAL_ERROR, (L"MAC address not found in EEPROM!!  using the mac address from the settings\r\n"));

  0024c	e59f3480	 ldr         r3, [pc, #0x480]
  00250	e5933440	 ldr         r3, [r3, #0x440]
  00254	e3130001	 tst         r3, #1
  00258	0a000004	 beq         |$LN37@LAN911XIni|
  0025c	e59f0498	 ldr         r0, [pc, #0x498]
  00260	eb000000	 bl          OALLogSerial
  00264	e3a03001	 mov         r3, #1
  00268	e58d3054	 str         r3, [sp, #0x54]
  0026c	ea000001	 b           |$LN38@LAN911XIni|
  00270		 |$LN37@LAN911XIni|
  00270	e3a03000	 mov         r3, #0
  00274	e58d3054	 str         r3, [sp, #0x54]
  00278		 |$LN38@LAN911XIni|

; 305  : #endif           
; 306  :         WriteMacCSR(MAC_ADDRL_INDEX, ((DWORD) mac[1]) << 16 | mac[0]);

  00278	e59d309c	 ldr         r3, [sp, #0x9C]
  0027c	e2833002	 add         r3, r3, #2
  00280	e1d330b0	 ldrh        r3, [r3]
  00284	e1a02803	 mov         r2, r3, lsl #16
  00288	e59d309c	 ldr         r3, [sp, #0x9C]
  0028c	e1d330b0	 ldrh        r3, [r3]
  00290	e1821003	 orr         r1, r2, r3
  00294	e3a00003	 mov         r0, #3
  00298	eb000000	 bl          WriteMacCSR

; 307  :         WriteMacCSR(MAC_ADDRH_INDEX, (DWORD) mac[2]);

  0029c	e59d309c	 ldr         r3, [sp, #0x9C]
  002a0	e2833004	 add         r3, r3, #4
  002a4	e1d310b0	 ldrh        r1, [r3]
  002a8	e3a00002	 mov         r0, #2
  002ac	eb000000	 bl          WriteMacCSR

; 308  : 
; 309  :     }
; 310  :     else

  002b0	ea000021	 b           |$LN13@LAN911XIni|
  002b4		 |$LN14@LAN911XIni|

; 311  :     {        
; 312  :         LAN911XGetMacAddress(g_pLAN911X,mac);

  002b4	e59d109c	 ldr         r1, [sp, #0x9C]
  002b8	e59f3418	 ldr         r3, [pc, #0x418]
  002bc	e5930000	 ldr         r0, [r3]
  002c0	eb000000	 bl          LAN911XGetMacAddress

; 313  :         DEBUGMSG(1,(TEXT("MAC ADDR in EEPROM: %x:%x:%x:%x:%x:%x\r\n"),mac[0] & 0xFF,(mac[0]>>8) & 0xFF,
; 314  :             mac[1] & 0xFF,(mac[1]>>8) & 0xFF,
; 315  :             mac[2] & 0xFF,(mac[2]>>8) & 0xFF));

  002c4	e59d309c	 ldr         r3, [sp, #0x9C]
  002c8	e2833004	 add         r3, r3, #4
  002cc	e1d330b0	 ldrh        r3, [r3]
  002d0	e1a03443	 mov         r3, r3, asr #8
  002d4	e20330ff	 and         r3, r3, #0xFF
  002d8	e58d3008	 str         r3, [sp, #8]
  002dc	e59d309c	 ldr         r3, [sp, #0x9C]
  002e0	e2833004	 add         r3, r3, #4
  002e4	e1d330b0	 ldrh        r3, [r3]
  002e8	e20330ff	 and         r3, r3, #0xFF
  002ec	e58d3004	 str         r3, [sp, #4]
  002f0	e59d309c	 ldr         r3, [sp, #0x9C]
  002f4	e2833002	 add         r3, r3, #2
  002f8	e1d330b0	 ldrh        r3, [r3]
  002fc	e1a03443	 mov         r3, r3, asr #8
  00300	e20330ff	 and         r3, r3, #0xFF
  00304	e58d3000	 str         r3, [sp]
  00308	e59d309c	 ldr         r3, [sp, #0x9C]
  0030c	e2833002	 add         r3, r3, #2
  00310	e1d330b0	 ldrh        r3, [r3]
  00314	e20330ff	 and         r3, r3, #0xFF
  00318	e59d209c	 ldr         r2, [sp, #0x9C]
  0031c	e1d220b0	 ldrh        r2, [r2]
  00320	e1a02442	 mov         r2, r2, asr #8
  00324	e20220ff	 and         r2, r2, #0xFF
  00328	e59d109c	 ldr         r1, [sp, #0x9C]
  0032c	e1d110b0	 ldrh        r1, [r1]
  00330	e20110ff	 and         r1, r1, #0xFF
  00334	e59f03bc	 ldr         r0, [pc, #0x3BC]
  00338	eb000000	 bl          NKDbgPrintfW
  0033c		 |$LN13@LAN911XIni|

; 316  :     }
; 317  : 
; 318  :     // Setup GPIO pins for link status
; 319  :     WRITE_REGISTER_ULONG((PULONG)&g_pLAN911X->gpio_cfg, (0x70000000));

  0033c	e59f3394	 ldr         r3, [pc, #0x394]
  00340	e5933000	 ldr         r3, [r3]
  00344	e2832088	 add         r2, r3, #0x88
  00348	e3a03207	 mov         r3, #7, 4
  0034c	e5823000	 str         r3, [r2]

; 320  :     // Configure interrupt to fire on a single received packet, initially disabled
; 321  :     WRITE_REGISTER_ULONG(&g_pLAN911X->fifo_int, 1);

  00350	e59f3380	 ldr         r3, [pc, #0x380]
  00354	e5933000	 ldr         r3, [r3]
  00358	e2832068	 add         r2, r3, #0x68
  0035c	e3a03001	 mov         r3, #1
  00360	e5823000	 str         r3, [r2]

; 322  :     // Mask all int sources level interrupt
; 323  :     WRITE_REGISTER_ULONG(&g_pLAN911X->int_en, 0);

  00364	e59f336c	 ldr         r3, [pc, #0x36C]
  00368	e5933000	 ldr         r3, [r3]
  0036c	e283205c	 add         r2, r3, #0x5C
  00370	e3a03000	 mov         r3, #0
  00374	e5823000	 str         r3, [r2]

; 324  :     // Clear any potential interrupt (shouldn't be any)
; 325  :     WRITE_REGISTER_ULONG(&g_pLAN911X->int_sts, 0xFFFFFFFF);

  00378	e59f3358	 ldr         r3, [pc, #0x358]
  0037c	e5933000	 ldr         r3, [r3]
  00380	e2832058	 add         r2, r3, #0x58
  00384	e3e03000	 mvn         r3, #0
  00388	e5823000	 str         r3, [r2]

; 326  : 
; 327  :     // Configure IRQ pin
; 328  :     WRITE_REGISTER_ULONG(&g_pLAN911X->irq_cfg, IRQ_CONFIGURATION_VALUE);

  0038c	e59f3344	 ldr         r3, [pc, #0x344]
  00390	e5933000	 ldr         r3, [r3]
  00394	e2832054	 add         r2, r3, #0x54
  00398	e3a03c01	 mov         r3, #1, 24
  0039c	e3833001	 orr         r3, r3, #1
  003a0	e5823000	 str         r3, [r2]

; 329  : 
; 330  :     // Depend on SPEED_SEL configuration for link parameters.  
; 331  :     // SPEED_SEL high, autonegotiation is enabled by default at 100Mbps
; 332  :     // SPEED_SEL low, autonogation is disabled and default is 10Mbps/half duplex
; 333  : 
; 334  : #if 0
; 335  :     // DR - This code is failing on some hubs/switches.
; 336  :     // Disable for now as it's not critical, debug and re-enable later if needed
; 337  :     // Override hardware strapping, advertise all capability
; 338  :     // Enable and start autonegotiation
; 339  :     WritePhy(PHY_AUTO_ADVERTISE_INDEX, 0x1E0);
; 340  :     WritePhy(PHY_CONTROL_INDEX, 0x1200);
; 341  : #endif
; 342  : 
; 343  :     // Wait for PHY link status to be complete
; 344  :     StartTime = OEMEthGetSecs();

  003a4	eb000000	 bl          OEMKitlGetSecs
  003a8	e58d0058	 str         r0, [sp, #0x58]
  003ac	e59d3058	 ldr         r3, [sp, #0x58]
  003b0	e58d3018	 str         r3, [sp, #0x18]
  003b4		 |$LN12@LAN911XIni|

; 345  :     do
; 346  :     {
; 347  :         dwTemp = ReadPhy(PHY_STATUS_INDEX);

  003b4	e3a00001	 mov         r0, #1
  003b8	eb000000	 bl          ReadPhy
  003bc	e1a03800	 mov         r3, r0, lsl #16
  003c0	e1a03823	 mov         r3, r3, lsr #16
  003c4	e1cd35bc	 strh        r3, [sp, #0x5C]
  003c8	e1dd35bc	 ldrh        r3, [sp, #0x5C]
  003cc	e58d3010	 str         r3, [sp, #0x10]

; 348  :         if (PHY_STATUS_LINKUP & dwTemp)

  003d0	e59d3010	 ldr         r3, [sp, #0x10]
  003d4	e3130004	 tst         r3, #4
  003d8	0a000000	 beq         |$LN9@LAN911XIni|

; 349  :             break;

  003dc	ea000006	 b           |$LN10@LAN911XIni|
  003e0		 |$LN9@LAN911XIni|

; 350  :     }
; 351  :     while (OEMEthGetSecs() < (StartTime + LINK_TIMEOUT_SECS));

  003e0	eb000000	 bl          OEMKitlGetSecs
  003e4	e58d0060	 str         r0, [sp, #0x60]
  003e8	e59d3018	 ldr         r3, [sp, #0x18]
  003ec	e2832003	 add         r2, r3, #3
  003f0	e59d3060	 ldr         r3, [sp, #0x60]
  003f4	e1530002	 cmp         r3, r2
  003f8	3affffed	 bcc         |$LN12@LAN911XIni|
  003fc		 |$LN10@LAN911XIni|

; 352  : 
; 353  :     if (!(dwTemp & PHY_STATUS_LINKUP))

  003fc	e59d3010	 ldr         r3, [sp, #0x10]
  00400	e3130004	 tst         r3, #4
  00404	1a00000b	 bne         |$LN8@LAN911XIni|

; 354  :     {
; 355  :         OALMSGS(OAL_ERROR, (L"Link not detected!!  Aborting\r\n"));

  00408	e59f32c4	 ldr         r3, [pc, #0x2C4]
  0040c	e5933440	 ldr         r3, [r3, #0x440]
  00410	e3130001	 tst         r3, #1
  00414	0a000004	 beq         |$LN39@LAN911XIni|
  00418	e59f02d4	 ldr         r0, [pc, #0x2D4]
  0041c	eb000000	 bl          OALLogSerial
  00420	e3a03001	 mov         r3, #1
  00424	e58d3064	 str         r3, [sp, #0x64]
  00428	ea000001	 b           |$LN40@LAN911XIni|
  0042c		 |$LN39@LAN911XIni|
  0042c	e3a03000	 mov         r3, #0
  00430	e58d3064	 str         r3, [sp, #0x64]
  00434		 |$LN40@LAN911XIni|

; 356  :         goto ErrorReturn;

  00434	ea000075	 b           |$ErrorReturn$43158|
  00438		 |$LN8@LAN911XIni|

; 357  :     }
; 358  : 
; 359  :     // Document link parameters, set MAC CR register accordingly
; 360  :     OALMSGS(OAL_ETHER, (L"Link Established: "));

  00438	e59f3294	 ldr         r3, [pc, #0x294]
  0043c	e5933440	 ldr         r3, [r3, #0x440]
  00440	e3130a02	 tst         r3, #2, 20
  00444	0a000004	 beq         |$LN41@LAN911XIni|
  00448	e59f02a0	 ldr         r0, [pc, #0x2A0]
  0044c	eb000000	 bl          OALLogSerial
  00450	e3a03001	 mov         r3, #1
  00454	e58d3068	 str         r3, [sp, #0x68]
  00458	ea000001	 b           |$LN42@LAN911XIni|
  0045c		 |$LN41@LAN911XIni|
  0045c	e3a03000	 mov         r3, #0
  00460	e58d3068	 str         r3, [sp, #0x68]
  00464		 |$LN42@LAN911XIni|

; 361  :     switch((0x001C & ReadPhy(PHY_SPECIAL_CTL_STS_INDEX)) >> 2)

  00464	e3a0001f	 mov         r0, #0x1F
  00468	eb000000	 bl          ReadPhy
  0046c	e1a03800	 mov         r3, r0, lsl #16
  00470	e1a03823	 mov         r3, r3, lsr #16
  00474	e1cd36bc	 strh        r3, [sp, #0x6C]
  00478	e1dd36bc	 ldrh        r3, [sp, #0x6C]
  0047c	e203301c	 and         r3, r3, #0x1C
  00480	e1a03143	 mov         r3, r3, asr #2
  00484	e58d3070	 str         r3, [sp, #0x70]
  00488	e59d3070	 ldr         r3, [sp, #0x70]
  0048c	e2433001	 sub         r3, r3, #1
  00490	e58d3070	 str         r3, [sp, #0x70]
  00494	e59d3070	 ldr         r3, [sp, #0x70]
  00498	e3530005	 cmp         r3, #5
  0049c	8a000048	 bhi         |$LN1@LAN911XIni|
  004a0	e59d2070	 ldr         r2, [sp, #0x70]
  004a4	e1a03102	 mov         r3, r2, lsl #2
  004a8	e083300f	 add         r3, r3, pc
  004ac	e5933004	 ldr         r3, [r3, #4]
  004b0	e08ff003	 add         pc, pc, r3
  004b4		 |$LN56@LAN911XIni|
  004b4		 |$LN55@LAN911XIni|
  004b4		 |$LN57@LAN911XIni|
  004b4	00000014	 DCD         0x14
  004b8		 |$LN58@LAN911XIni|
  004b8	00000090	 DCD         0x90
  004bc		 |$LN59@LAN911XIni|
  004bc	0000010c	 DCD         0x10c
  004c0		 |$LN60@LAN911XIni|
  004c0	0000010c	 DCD         0x10c
  004c4		 |$LN61@LAN911XIni|
  004c4	00000050	 DCD         0x50
  004c8		 |$LN62@LAN911XIni|
  004c8	000000cc	 DCD         0xcc
  004cc		 |$LN5@LAN911XIni|

; 362  :     {
; 363  :     case 1:
; 364  :         OALMSGS(OAL_ETHER, (L"10Mbps, Half Duplex\r\n"));

  004cc	e59f3200	 ldr         r3, [pc, #0x200]
  004d0	e5933440	 ldr         r3, [r3, #0x440]
  004d4	e3130a02	 tst         r3, #2, 20
  004d8	0a000004	 beq         |$LN43@LAN911XIni|
  004dc	e59f0208	 ldr         r0, [pc, #0x208]
  004e0	eb000000	 bl          OALLogSerial
  004e4	e3a03001	 mov         r3, #1
  004e8	e58d3074	 str         r3, [sp, #0x74]
  004ec	ea000001	 b           |$LN44@LAN911XIni|
  004f0		 |$LN43@LAN911XIni|
  004f0	e3a03000	 mov         r3, #0
  004f4	e58d3074	 str         r3, [sp, #0x74]
  004f8		 |$LN44@LAN911XIni|

; 365  :         WriteMacCSR(MAC_MAC_CR_INDEX, MAC_CR_TXEN|MAC_CR_RXEN);

  004f8	e3a0100c	 mov         r1, #0xC
  004fc	e3a00001	 mov         r0, #1
  00500	eb000000	 bl          WriteMacCSR

; 366  :         break;

  00504	ea00003a	 b           |$LN6@LAN911XIni|
  00508		 |$LN4@LAN911XIni|

; 367  :     case 5:
; 368  :         OALMSGS(OAL_ETHER, (L"10Mbps, Full Duplex\r\n"));

  00508	e59f31c4	 ldr         r3, [pc, #0x1C4]
  0050c	e5933440	 ldr         r3, [r3, #0x440]
  00510	e3130a02	 tst         r3, #2, 20
  00514	0a000004	 beq         |$LN45@LAN911XIni|
  00518	e59f01c8	 ldr         r0, [pc, #0x1C8]
  0051c	eb000000	 bl          OALLogSerial
  00520	e3a03001	 mov         r3, #1
  00524	e58d3078	 str         r3, [sp, #0x78]
  00528	ea000001	 b           |$LN46@LAN911XIni|
  0052c		 |$LN45@LAN911XIni|
  0052c	e3a03000	 mov         r3, #0
  00530	e58d3078	 str         r3, [sp, #0x78]
  00534		 |$LN46@LAN911XIni|

; 369  :         WriteMacCSR(MAC_MAC_CR_INDEX, MAC_CR_FDPX|MAC_CR_TXEN|MAC_CR_RXEN);

  00534	e3a01601	 mov         r1, #1, 12
  00538	e381100c	 orr         r1, r1, #0xC
  0053c	e3a00001	 mov         r0, #1
  00540	eb000000	 bl          WriteMacCSR

; 370  :         break;

  00544	ea00002a	 b           |$LN6@LAN911XIni|
  00548		 |$LN3@LAN911XIni|

; 371  :     case 2:
; 372  :         OALMSGS(OAL_ETHER, (L"100Mbps, Half Duplex\r\n"));

  00548	e59f3184	 ldr         r3, [pc, #0x184]
  0054c	e5933440	 ldr         r3, [r3, #0x440]
  00550	e3130a02	 tst         r3, #2, 20
  00554	0a000004	 beq         |$LN47@LAN911XIni|
  00558	e59f0184	 ldr         r0, [pc, #0x184]
  0055c	eb000000	 bl          OALLogSerial
  00560	e3a03001	 mov         r3, #1
  00564	e58d307c	 str         r3, [sp, #0x7C]
  00568	ea000001	 b           |$LN48@LAN911XIni|
  0056c		 |$LN47@LAN911XIni|
  0056c	e3a03000	 mov         r3, #0
  00570	e58d307c	 str         r3, [sp, #0x7C]
  00574		 |$LN48@LAN911XIni|

; 373  :         WriteMacCSR(MAC_MAC_CR_INDEX, MAC_CR_TXEN|MAC_CR_RXEN);

  00574	e3a0100c	 mov         r1, #0xC
  00578	e3a00001	 mov         r0, #1
  0057c	eb000000	 bl          WriteMacCSR

; 374  :         break;

  00580	ea00001b	 b           |$LN6@LAN911XIni|
  00584		 |$LN2@LAN911XIni|

; 375  :     case 6:
; 376  :         OALMSGS(OAL_ETHER, (L"100Mbps, Full Duplex\r\n"));

  00584	e59f3148	 ldr         r3, [pc, #0x148]
  00588	e5933440	 ldr         r3, [r3, #0x440]
  0058c	e3130a02	 tst         r3, #2, 20
  00590	0a000004	 beq         |$LN49@LAN911XIni|
  00594	e59f0144	 ldr         r0, [pc, #0x144]
  00598	eb000000	 bl          OALLogSerial
  0059c	e3a03001	 mov         r3, #1
  005a0	e58d3080	 str         r3, [sp, #0x80]
  005a4	ea000001	 b           |$LN50@LAN911XIni|
  005a8		 |$LN49@LAN911XIni|
  005a8	e3a03000	 mov         r3, #0
  005ac	e58d3080	 str         r3, [sp, #0x80]
  005b0		 |$LN50@LAN911XIni|

; 377  :         WriteMacCSR(MAC_MAC_CR_INDEX, MAC_CR_FDPX|MAC_CR_TXEN|MAC_CR_RXEN);

  005b0	e3a01601	 mov         r1, #1, 12
  005b4	e381100c	 orr         r1, r1, #0xC
  005b8	e3a00001	 mov         r0, #1
  005bc	eb000000	 bl          WriteMacCSR

; 378  :         break;

  005c0	ea00000b	 b           |$LN6@LAN911XIni|
  005c4		 |$LN1@LAN911XIni|

; 379  :     default:
; 380  :         OALMSGS(OAL_ETHER, (L"Invalid mode setting!!\r\n"));

  005c4	e59f3108	 ldr         r3, [pc, #0x108]
  005c8	e5933440	 ldr         r3, [r3, #0x440]
  005cc	e3130a02	 tst         r3, #2, 20
  005d0	0a000004	 beq         |$LN51@LAN911XIni|
  005d4	e59f0100	 ldr         r0, [pc, #0x100]
  005d8	eb000000	 bl          OALLogSerial
  005dc	e3a03001	 mov         r3, #1
  005e0	e58d3084	 str         r3, [sp, #0x84]
  005e4	ea000001	 b           |$LN52@LAN911XIni|
  005e8		 |$LN51@LAN911XIni|
  005e8	e3a03000	 mov         r3, #0
  005ec	e58d3084	 str         r3, [sp, #0x84]
  005f0		 |$LN52@LAN911XIni|

; 381  :         goto ErrorReturn;

  005f0	ea000006	 b           |$ErrorReturn$43158|
  005f4		 |$LN6@LAN911XIni|

; 382  :     }
; 383  : 
; 384  :     // Enable transmitter
; 385  :     WRITE_REGISTER_ULONG(&g_pLAN911X->tx_cfg, TX_CFG_TX_ON);

  005f4	e59f30dc	 ldr         r3, [pc, #0xDC]
  005f8	e5933000	 ldr         r3, [r3]
  005fc	e2832070	 add         r2, r3, #0x70
  00600	e3a03002	 mov         r3, #2
  00604	e5823000	 str         r3, [r2]

; 386  : 
; 387  :     RetCode = TRUE;

  00608	e3a03001	 mov         r3, #1
  0060c	e58d3014	 str         r3, [sp, #0x14]
  00610		 |$ErrorReturn$43158|

; 388  : 
; 389  : ErrorReturn:
; 390  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (
; 391  :         L"-LAN911XInit(mac = %02x:%02x:%02x:%02x:%02x:%02x, RetCode = %d)\r\n",
; 392  :         mac[0]&0xFF, mac[0]>>8, mac[1]&0xFF, mac[1]>>8, mac[2]&0xFF, mac[2]>>8,
; 393  :         RetCode
; 394  :         ));

  00610	e59f30bc	 ldr         r3, [pc, #0xBC]
  00614	e5933440	 ldr         r3, [r3, #0x440]
  00618	e3130a02	 tst         r3, #2, 20
  0061c	0a000023	 beq         |$LN53@LAN911XIni|
  00620	e59f30ac	 ldr         r3, [pc, #0xAC]
  00624	e5933440	 ldr         r3, [r3, #0x440]
  00628	e3130004	 tst         r3, #4
  0062c	0a00001f	 beq         |$LN53@LAN911XIni|
  00630	e59d3014	 ldr         r3, [sp, #0x14]
  00634	e58d300c	 str         r3, [sp, #0xC]
  00638	e59d309c	 ldr         r3, [sp, #0x9C]
  0063c	e2833004	 add         r3, r3, #4
  00640	e1d330b0	 ldrh        r3, [r3]
  00644	e1a03443	 mov         r3, r3, asr #8
  00648	e58d3008	 str         r3, [sp, #8]
  0064c	e59d309c	 ldr         r3, [sp, #0x9C]
  00650	e2833004	 add         r3, r3, #4
  00654	e1d330b0	 ldrh        r3, [r3]
  00658	e20330ff	 and         r3, r3, #0xFF
  0065c	e58d3004	 str         r3, [sp, #4]
  00660	e59d309c	 ldr         r3, [sp, #0x9C]
  00664	e2833002	 add         r3, r3, #2
  00668	e1d330b0	 ldrh        r3, [r3]
  0066c	e1a03443	 mov         r3, r3, asr #8
  00670	e58d3000	 str         r3, [sp]
  00674	e59d309c	 ldr         r3, [sp, #0x9C]
  00678	e2833002	 add         r3, r3, #2
  0067c	e1d330b0	 ldrh        r3, [r3]
  00680	e20330ff	 and         r3, r3, #0xFF
  00684	e59d209c	 ldr         r2, [sp, #0x9C]
  00688	e1d220b0	 ldrh        r2, [r2]
  0068c	e1a02442	 mov         r2, r2, asr #8
  00690	e59d109c	 ldr         r1, [sp, #0x9C]
  00694	e1d110b0	 ldrh        r1, [r1]
  00698	e20110ff	 and         r1, r1, #0xFF
  0069c	e59f002c	 ldr         r0, [pc, #0x2C]
  006a0	eb000000	 bl          OALLogSerial
  006a4	e3a03001	 mov         r3, #1
  006a8	e58d3088	 str         r3, [sp, #0x88]
  006ac	ea000001	 b           |$LN54@LAN911XIni|
  006b0		 |$LN53@LAN911XIni|
  006b0	e3a03000	 mov         r3, #0
  006b4	e58d3088	 str         r3, [sp, #0x88]
  006b8		 |$LN54@LAN911XIni|

; 395  : 
; 396  : 
; 397  :     return RetCode;

  006b8	e59d3014	 ldr         r3, [sp, #0x14]
  006bc	e58d3038	 str         r3, [sp, #0x38]

; 398  : }

  006c0	e59d0038	 ldr         r0, [sp, #0x38]
  006c4	e28dd08c	 add         sp, sp, #0x8C
  006c8	e89d6000	 ldmia       sp, {sp, lr}
  006cc	e12fff1e	 bx          lr
  006d0		 |$LN66@LAN911XIni|
  006d0		 |$LN67@LAN911XIni|
  006d0	00000000	 DCD         |??_C@_1IE@KFEKGLKJ@?$AA?9?$AAL?$AAA?$AAN?$AA9?$AA1?$AA1?$AAX?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAm?$AAa?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AA0?$AA2?$AAx?$AA?3?$AA?$CF?$AA0?$AA2?$AAx?$AA?3?$AA?$CF?$AA0?$AA2@|
  006d4		 |$LN68@LAN911XIni|
  006d4	00000000	 DCD         |dpCurSettings|
  006d8		 |$LN69@LAN911XIni|
  006d8	00000000	 DCD         |g_pLAN911X|
  006dc		 |$LN70@LAN911XIni|
  006dc	00000000	 DCD         |??_C@_1DC@ECEBOIGE@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAm?$AAo?$AAd?$AAe?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?$CB?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@|
  006e0		 |$LN71@LAN911XIni|
  006e0	00000000	 DCD         |??_C@_1CO@DKKJNAHG@?$AA1?$AA0?$AA0?$AAM?$AAb?$AAp?$AAs?$AA?0?$AA?5?$AAF?$AAu?$AAl?$AAl?$AA?5?$AAD?$AAu?$AAp?$AAl?$AAe?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  006e4		 |$LN72@LAN911XIni|
  006e4	00000000	 DCD         |??_C@_1CO@CFGPBEPG@?$AA1?$AA0?$AA0?$AAM?$AAb?$AAp?$AAs?$AA?0?$AA?5?$AAH?$AAa?$AAl?$AAf?$AA?5?$AAD?$AAu?$AAp?$AAl?$AAe?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  006e8		 |$LN73@LAN911XIni|
  006e8	00000000	 DCD         |??_C@_1CM@IHIEPLGN@?$AA1?$AA0?$AAM?$AAb?$AAp?$AAs?$AA?0?$AA?5?$AAF?$AAu?$AAl?$AAl?$AA?5?$AAD?$AAu?$AAp?$AAl?$AAe?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  006ec		 |$LN74@LAN911XIni|
  006ec	00000000	 DCD         |??_C@_1CM@JIECDPON@?$AA1?$AA0?$AAM?$AAb?$AAp?$AAs?$AA?0?$AA?5?$AAH?$AAa?$AAl?$AAf?$AA?5?$AAD?$AAu?$AAp?$AAl?$AAe?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  006f0		 |$LN75@LAN911XIni|
  006f0	00000000	 DCD         |??_C@_1CG@EEDCFFGI@?$AAL?$AAi?$AAn?$AAk?$AA?5?$AAE?$AAs?$AAt?$AAa?$AAb?$AAl?$AAi?$AAs?$AAh?$AAe?$AAd?$AA?3?$AA?5?$AA?$AA@|
  006f4		 |$LN76@LAN911XIni|
  006f4	00000000	 DCD         |??_C@_1EA@FBJAOFLG@?$AAL?$AAi?$AAn?$AAk?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$CB?$AA?$CB?$AA?5?$AA?5?$AAA?$AAb?$AAo?$AAr?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@|
  006f8		 |$LN77@LAN911XIni|
  006f8	00000000	 DCD         |??_C@_1FA@GMMPMIJN@?$AAM?$AAA?$AAC?$AA?5?$AAA?$AAD?$AAD?$AAR?$AA?5?$AAi?$AAn?$AA?5?$AAE?$AAE?$AAP?$AAR?$AAO?$AAM?$AA?3?$AA?5?$AA?$CF?$AAx?$AA?3?$AA?$CF?$AAx?$AA?3?$AA?$CF?$AAx?$AA?3?$AA?$CF?$AAx?$AA?3@|
  006fc		 |$LN78@LAN911XIni|
  006fc	00000000	 DCD         |??_C@_1JK@NKCKLILE@?$AAM?$AAA?$AAC?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAf?$AAo?$AAu?$AAn?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAE?$AAE?$AAP?$AAR?$AAO?$AAM?$AA?$CB@|
  00700		 |$LN79@LAN911XIni|
  00700	00000000	 DCD         |g_dwChipId|
  00704		 |$LN80@LAN911XIni|
  00704	00000000	 DCD         |??_C@_1GG@FCBDMEID@?$AAS?$AAo?$AAf?$AAt?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAt?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$CB?$AA?$CB?$AA?5?$AA?$CI?$AAH?$AAW?$AA_?$AAC?$AAF?$AAG?$AA?5?$AA?$DN?$AA?5?$AA0@|
  00708		 |$LN81@LAN911XIni|
  00708	00000000	 DCD         |??_C@_1EO@ELGKCHGO@?$AA?$CL?$AAL?$AAA?$AAN?$AA9?$AA1?$AA1?$AAX?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF@|
  0070c		 |$M43554|

			 ENDP  ; |LAN911XInit|


  00008			 AREA	 |.pdata|, PDATA
|$T43577| DCD	|$LN9@WriteMacCS|
	DCD	0x40001f03
; Function compile flags: /Odtp

  0070c			 AREA	 |.text|, CODE, ARM

  0070c		 |WriteMacCSR| PROC

; 216  : {

  0070c		 |$LN9@WriteMacCS|
  0070c	e1a0c00d	 mov         r12, sp
  00710	e92d0003	 stmdb       sp!, {r0, r1}
  00714	e92d5000	 stmdb       sp!, {r12, lr}
  00718		 |$M43574|
  00718		 |$LN4@WriteMacCS|

; 217  :     while ( (MAC_CSR_CMD_BUSY & READ_REGISTER_ULONG(&g_pLAN911X->mac_csr_cmd)));

  00718	e59f3064	 ldr         r3, [pc, #0x64]
  0071c	e5933000	 ldr         r3, [r3]
  00720	e28330a4	 add         r3, r3, #0xA4
  00724	e5933000	 ldr         r3, [r3]
  00728	e3130102	 tst         r3, #2, 2
  0072c	0a000000	 beq         |$LN3@WriteMacCS|
  00730	eafffff8	 b           |$LN4@WriteMacCS|
  00734		 |$LN3@WriteMacCS|

; 218  :     WRITE_REGISTER_ULONG(&g_pLAN911X->mac_csr_data, Data);

  00734	e59f3048	 ldr         r3, [pc, #0x48]
  00738	e5933000	 ldr         r3, [r3]
  0073c	e28320a8	 add         r2, r3, #0xA8
  00740	e59d300c	 ldr         r3, [sp, #0xC]
  00744	e5823000	 str         r3, [r2]

; 219  :     WRITE_REGISTER_ULONG((PULONG)&g_pLAN911X->mac_csr_cmd, MAC_CSR_CMD_BUSY | Register);

  00748	e59d3008	 ldr         r3, [sp, #8]
  0074c	e3832102	 orr         r2, r3, #2, 2
  00750	e59f302c	 ldr         r3, [pc, #0x2C]
  00754	e5933000	 ldr         r3, [r3]
  00758	e28330a4	 add         r3, r3, #0xA4
  0075c	e5832000	 str         r2, [r3]
  00760		 |$LN2@WriteMacCS|

; 220  :     while ( (MAC_CSR_CMD_BUSY & READ_REGISTER_ULONG(&g_pLAN911X->mac_csr_cmd)));

  00760	e59f301c	 ldr         r3, [pc, #0x1C]
  00764	e5933000	 ldr         r3, [r3]
  00768	e28330a4	 add         r3, r3, #0xA4
  0076c	e5933000	 ldr         r3, [r3]
  00770	e3130102	 tst         r3, #2, 2
  00774	0a000000	 beq         |$LN1@WriteMacCS|
  00778	eafffff8	 b           |$LN2@WriteMacCS|
  0077c		 |$LN1@WriteMacCS|

; 221  : }

  0077c	e89d6000	 ldmia       sp, {sp, lr}
  00780	e12fff1e	 bx          lr
  00784		 |$LN10@WriteMacCS|
  00784		 |$LN11@WriteMacCS|
  00784	00000000	 DCD         |g_pLAN911X|
  00788		 |$M43575|

			 ENDP  ; |WriteMacCSR|


  00010			 AREA	 |.pdata|, PDATA
|$T43585| DCD	|$LN9@ReadPhy|
	DCD	0x40002404
; Function compile flags: /Odtp

  00788			 AREA	 |.text|, CODE, ARM

  00788		 |ReadPhy| PROC

; 224  : {

  00788		 |$LN9@ReadPhy|
  00788	e1a0c00d	 mov         r12, sp
  0078c	e92d0001	 stmdb       sp!, {r0}
  00790	e92d5000	 stmdb       sp!, {r12, lr}
  00794	e24dd010	 sub         sp, sp, #0x10
  00798		 |$M43582|
  00798		 |$LN4@ReadPhy|

; 225  :     while (MII_ACC_MIIBZY & ReadMacCSR(MAC_MII_ACC_INDEX));

  00798	e3a00006	 mov         r0, #6
  0079c	eb000000	 bl          ReadMacCSR
  007a0	e58d0004	 str         r0, [sp, #4]
  007a4	e59d3004	 ldr         r3, [sp, #4]
  007a8	e3130001	 tst         r3, #1
  007ac	0a000000	 beq         |$LN3@ReadPhy|
  007b0	eafffff8	 b           |$LN4@ReadPhy|
  007b4		 |$LN3@ReadPhy|

; 226  :     WriteMacCSR(MAC_MII_ACC_INDEX, 0x801 | (Register << 6));

  007b4	e59d3018	 ldr         r3, [sp, #0x18]
  007b8	e1a02303	 mov         r2, r3, lsl #6
  007bc	e3a03b02	 mov         r3, #2, 22
  007c0	e3833001	 orr         r3, r3, #1
  007c4	e1821003	 orr         r1, r2, r3
  007c8	e3a00006	 mov         r0, #6
  007cc	eb000000	 bl          WriteMacCSR
  007d0		 |$LN2@ReadPhy|

; 227  :     while (MII_ACC_MIIBZY & ReadMacCSR(MAC_MII_ACC_INDEX));

  007d0	e3a00006	 mov         r0, #6
  007d4	eb000000	 bl          ReadMacCSR
  007d8	e58d0008	 str         r0, [sp, #8]
  007dc	e59d3008	 ldr         r3, [sp, #8]
  007e0	e3130001	 tst         r3, #1
  007e4	0a000000	 beq         |$LN1@ReadPhy|
  007e8	eafffff8	 b           |$LN2@ReadPhy|
  007ec		 |$LN1@ReadPhy|

; 228  :     return (UINT16) ReadMacCSR(MAC_MII_DATA_INDEX);

  007ec	e3a00007	 mov         r0, #7
  007f0	eb000000	 bl          ReadMacCSR
  007f4	e58d000c	 str         r0, [sp, #0xC]
  007f8	e59d300c	 ldr         r3, [sp, #0xC]
  007fc	e1a03803	 mov         r3, r3, lsl #16
  00800	e1a03823	 mov         r3, r3, lsr #16
  00804	e1cd30b0	 strh        r3, [sp]

; 229  : }

  00808	e1dd00b0	 ldrh        r0, [sp]
  0080c	e28dd010	 add         sp, sp, #0x10
  00810	e89d6000	 ldmia       sp, {sp, lr}
  00814	e12fff1e	 bx          lr
  00818		 |$M43583|

			 ENDP  ; |ReadPhy|


  00018			 AREA	 |.pdata|, PDATA
|$T43591| DCD	|$LN9@ReadMacCSR|
	DCD	0x40002204
; Function compile flags: /Odtp

  00818			 AREA	 |.text|, CODE, ARM

  00818		 |ReadMacCSR| PROC

; 208  : {

  00818		 |$LN9@ReadMacCSR|
  00818	e1a0c00d	 mov         r12, sp
  0081c	e92d0001	 stmdb       sp!, {r0}
  00820	e92d5000	 stmdb       sp!, {r12, lr}
  00824	e24dd004	 sub         sp, sp, #4
  00828		 |$M43588|
  00828		 |$LN4@ReadMacCSR|

; 209  :     while ( (MAC_CSR_CMD_BUSY & READ_REGISTER_ULONG(&g_pLAN911X->mac_csr_cmd)));

  00828	e59f306c	 ldr         r3, [pc, #0x6C]
  0082c	e5933000	 ldr         r3, [r3]
  00830	e28330a4	 add         r3, r3, #0xA4
  00834	e5933000	 ldr         r3, [r3]
  00838	e3130102	 tst         r3, #2, 2
  0083c	0a000000	 beq         |$LN3@ReadMacCSR|
  00840	eafffff8	 b           |$LN4@ReadMacCSR|
  00844		 |$LN3@ReadMacCSR|

; 210  :     WRITE_REGISTER_ULONG((PULONG)&g_pLAN911X->mac_csr_cmd, MAC_CSR_CMD_BUSY | MAC_CSR_CMD_READ | Register); 

  00844	e59d300c	 ldr         r3, [sp, #0xC]
  00848	e3832103	 orr         r2, r3, #3, 2
  0084c	e59f3048	 ldr         r3, [pc, #0x48]
  00850	e5933000	 ldr         r3, [r3]
  00854	e28330a4	 add         r3, r3, #0xA4
  00858	e5832000	 str         r2, [r3]
  0085c		 |$LN2@ReadMacCSR|

; 211  :     while ( (MAC_CSR_CMD_BUSY & READ_REGISTER_ULONG(&g_pLAN911X->mac_csr_cmd)));

  0085c	e59f3038	 ldr         r3, [pc, #0x38]
  00860	e5933000	 ldr         r3, [r3]
  00864	e28330a4	 add         r3, r3, #0xA4
  00868	e5933000	 ldr         r3, [r3]
  0086c	e3130102	 tst         r3, #2, 2
  00870	0a000000	 beq         |$LN1@ReadMacCSR|
  00874	eafffff8	 b           |$LN2@ReadMacCSR|
  00878		 |$LN1@ReadMacCSR|

; 212  :     return READ_REGISTER_ULONG(&g_pLAN911X->mac_csr_data);

  00878	e59f301c	 ldr         r3, [pc, #0x1C]
  0087c	e5933000	 ldr         r3, [r3]
  00880	e28330a8	 add         r3, r3, #0xA8
  00884	e5933000	 ldr         r3, [r3]
  00888	e58d3000	 str         r3, [sp]

; 213  : }

  0088c	e59d0000	 ldr         r0, [sp]
  00890	e28dd004	 add         sp, sp, #4
  00894	e89d6000	 ldmia       sp, {sp, lr}
  00898	e12fff1e	 bx          lr
  0089c		 |$LN10@ReadMacCSR|
  0089c		 |$LN11@ReadMacCSR|
  0089c	00000000	 DCD         |g_pLAN911X|
  008a0		 |$M43589|

			 ENDP  ; |ReadMacCSR|

	EXPORT	|??_C@_1EG@GCJBAFHN@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CB?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AAx@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@CALKBHOJ@?$AAN?$AAo?$AAt?$AA?5?$AAe?$AAn?$AAo?$AAu?$AAg?$AAh?$AA?5?$AAr?$AAo?$AAo?$AAm?$AA?5?$AAi?$AAn?$AA?5?$AAT?$AAX?$AA?5?$AAF?$AAI?$AAF?$AAO?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|LAN911XSendFrame|

  00020			 AREA	 |.pdata|, PDATA
|$T43603| DCD	|$LN17@LAN911XSen|
	DCD	0x40008a04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@GCJBAFHN@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CB?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AAx@| DCB "E"
	DCB	0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "t"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m", 0x0, "i"
	DCB	0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "!", 0x0, " ", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@CALKBHOJ@?$AAN?$AAo?$AAt?$AA?5?$AAe?$AAn?$AAo?$AAu?$AAg?$AAh?$AA?5?$AAr?$AAo?$AAo?$AAm?$AA?5?$AAi?$AAn?$AA?5?$AAT?$AAX?$AA?5?$AAF?$AAI?$AAF?$AAO?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| DCB "N"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "e", 0x0, "n", 0x0, "o"
	DCB	0x0, "u", 0x0, "g", 0x0, "h", 0x0, " ", 0x0, "r", 0x0, "o"
	DCB	0x0, "o", 0x0, "m", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, " "
	DCB	0x0, "T", 0x0, "X", 0x0, " ", 0x0, "F", 0x0, "I", 0x0, "F"
	DCB	0x0, "O", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  008a0			 AREA	 |.text|, CODE, ARM

  008a0		 |LAN911XSendFrame| PROC

; 409  : {

  008a0		 |$LN17@LAN911XSen|
  008a0	e1a0c00d	 mov         r12, sp
  008a4	e92d0003	 stmdb       sp!, {r0, r1}
  008a8	e92d5000	 stmdb       sp!, {r12, lr}
  008ac	e24dd01c	 sub         sp, sp, #0x1C
  008b0		 |$M43600|

; 410  :     UINT16 RetCode = 1;

  008b0	e3a03001	 mov         r3, #1
  008b4	e1cd30bc	 strh        r3, [sp, #0xC]

; 411  :     UINT32 dwTemp;
; 412  :     UINT32 dwAlignedAddr;
; 413  :     UINT32 dwOffset;
; 414  :     // Send complete packet in one frame
; 415  :     // Note that this controller allows/requires DWORD writes to FIFO,
; 416  :     // and is configured to strip off extra data at the beginning and 
; 417  :     // end of the packet.
; 418  : 
; 419  :     // Verify space in TX fifo (should always be available)
; 420  :     if (length > (6 + (READ_REGISTER_ULONG(&g_pLAN911X->tx_fifo_inf) & TX_FIFO_INF_TDFREE)))

  008b8	e59f3200	 ldr         r3, [pc, #0x200]
  008bc	e5933000	 ldr         r3, [r3]
  008c0	e2833080	 add         r3, r3, #0x80
  008c4	e5932000	 ldr         r2, [r3]
  008c8	e3a03cff	 mov         r3, #0xFF, 24
  008cc	e38330ff	 orr         r3, r3, #0xFF
  008d0	e0023003	 and         r3, r2, r3
  008d4	e2832006	 add         r2, r3, #6
  008d8	e59d3028	 ldr         r3, [sp, #0x28]
  008dc	e1530002	 cmp         r3, r2
  008e0	9a00000b	 bls         |$LN8@LAN911XSen|

; 421  :     {
; 422  :         OALMSGS(OAL_ETHER, (L"Not enough room in TX FIFO!\r\n"));

  008e4	e59f31d0	 ldr         r3, [pc, #0x1D0]
  008e8	e5933440	 ldr         r3, [r3, #0x440]
  008ec	e3130a02	 tst         r3, #2, 20
  008f0	0a000004	 beq         |$LN11@LAN911XSen|
  008f4	e59f01c8	 ldr         r0, [pc, #0x1C8]
  008f8	eb000000	 bl          OALLogSerial
  008fc	e3a03001	 mov         r3, #1
  00900	e58d3014	 str         r3, [sp, #0x14]
  00904	ea000001	 b           |$LN12@LAN911XSen|
  00908		 |$LN11@LAN911XSen|
  00908	e3a03000	 mov         r3, #0
  0090c	e58d3014	 str         r3, [sp, #0x14]
  00910		 |$LN12@LAN911XSen|

; 423  :         goto ErrorReturn;

  00910	ea000062	 b           |$ErrorReturn$43248|
  00914		 |$LN8@LAN911XSen|

; 424  :     }
; 425  : 
; 426  :     // TX_CMD_A
; 427  :     dwOffset = (UINT32)pBuffer & 0x3;

  00914	e59d3024	 ldr         r3, [sp, #0x24]
  00918	e2033003	 and         r3, r3, #3
  0091c	e58d3008	 str         r3, [sp, #8]

; 428  :     dwTemp = dwOffset << TX_CMD_DATA_OFFSET;

  00920	e59d3008	 ldr         r3, [sp, #8]
  00924	e1a03803	 mov         r3, r3, lsl #16
  00928	e58d3000	 str         r3, [sp]

; 429  :     dwTemp |= TX_CMD_FIRST_SEG | TX_CMD_LAST_SEG;

  0092c	e59d3000	 ldr         r3, [sp]
  00930	e3833a03	 orr         r3, r3, #3, 20
  00934	e58d3000	 str         r3, [sp]

; 430  :     dwTemp |= length;

  00938	e59d2000	 ldr         r2, [sp]
  0093c	e59d3028	 ldr         r3, [sp, #0x28]
  00940	e1823003	 orr         r3, r2, r3
  00944	e58d3000	 str         r3, [sp]

; 431  :     WRITE_REGISTER_ULONG(&g_pLAN911X->tx_fifo, dwTemp);

  00948	e59f3170	 ldr         r3, [pc, #0x170]
  0094c	e5933000	 ldr         r3, [r3]
  00950	e2832020	 add         r2, r3, #0x20
  00954	e59d3000	 ldr         r3, [sp]
  00958	e5823000	 str         r3, [r2]

; 432  : 
; 433  :     // TX_CMD_B
; 434  :     WRITE_REGISTER_ULONG(&g_pLAN911X->tx_fifo, length);

  0095c	e59f315c	 ldr         r3, [pc, #0x15C]
  00960	e5933000	 ldr         r3, [r3]
  00964	e2832020	 add         r2, r3, #0x20
  00968	e59d3028	 ldr         r3, [sp, #0x28]
  0096c	e5823000	 str         r3, [r2]

; 435  : 
; 436  :     dwAlignedAddr = (UINT32)pBuffer & 0xFFFFFFFC;

  00970	e59d2024	 ldr         r2, [sp, #0x24]
  00974	e3e03003	 mvn         r3, #3
  00978	e0023003	 and         r3, r2, r3
  0097c	e58d3004	 str         r3, [sp, #4]

; 437  : 
; 438  :     // Copy data in DWORD quantities
; 439  : 
; 440  :     // Copy unaligned data at the beginning of the buffer
; 441  :     if (dwOffset)

  00980	e59d3008	 ldr         r3, [sp, #8]
  00984	e3530000	 cmp         r3, #0
  00988	0a00000d	 beq         |$LN7@LAN911XSen|

; 442  :     {
; 443  :         WRITE_REGISTER_ULONG(&g_pLAN911X->tx_fifo, *(UINT32 *)dwAlignedAddr);

  0098c	e59f312c	 ldr         r3, [pc, #0x12C]
  00990	e5933000	 ldr         r3, [r3]
  00994	e2832020	 add         r2, r3, #0x20
  00998	e59d3004	 ldr         r3, [sp, #4]
  0099c	e5933000	 ldr         r3, [r3]
  009a0	e5823000	 str         r3, [r2]

; 444  :         dwAlignedAddr += 4;

  009a4	e59d3004	 ldr         r3, [sp, #4]
  009a8	e2833004	 add         r3, r3, #4
  009ac	e58d3004	 str         r3, [sp, #4]

; 445  :         length = length - (4 - dwOffset);

  009b0	e59d3008	 ldr         r3, [sp, #8]
  009b4	e2632004	 rsb         r2, r3, #4
  009b8	e59d3028	 ldr         r3, [sp, #0x28]
  009bc	e0433002	 sub         r3, r3, r2
  009c0	e58d3028	 str         r3, [sp, #0x28]
  009c4		 |$LN7@LAN911XSen|
  009c4		 |$LN6@LAN911XSen|

; 446  :     }
; 447  : 
; 448  :     // Source buffer is now aligned, copy complete DWORDs
; 449  :     while (length >= 4)

  009c4	e59d3028	 ldr         r3, [sp, #0x28]
  009c8	e3530004	 cmp         r3, #4
  009cc	3a00000c	 bcc         |$LN5@LAN911XSen|

; 450  :     {
; 451  :         WRITE_REGISTER_ULONG(&g_pLAN911X->tx_fifo, *(UINT32 *)(dwAlignedAddr));

  009d0	e59f30e8	 ldr         r3, [pc, #0xE8]
  009d4	e5933000	 ldr         r3, [r3]
  009d8	e2832020	 add         r2, r3, #0x20
  009dc	e59d3004	 ldr         r3, [sp, #4]
  009e0	e5933000	 ldr         r3, [r3]
  009e4	e5823000	 str         r3, [r2]

; 452  :         length = length - 4;

  009e8	e59d3028	 ldr         r3, [sp, #0x28]
  009ec	e2433004	 sub         r3, r3, #4
  009f0	e58d3028	 str         r3, [sp, #0x28]

; 453  :         dwAlignedAddr += 4;

  009f4	e59d3004	 ldr         r3, [sp, #4]
  009f8	e2833004	 add         r3, r3, #4
  009fc	e58d3004	 str         r3, [sp, #4]

; 454  :     }

  00a00	eaffffef	 b           |$LN6@LAN911XSen|
  00a04		 |$LN5@LAN911XSen|

; 455  : 
; 456  :     // Copy any remaining bytes
; 457  :     if (length > 0)

  00a04	e59d3028	 ldr         r3, [sp, #0x28]
  00a08	e3530000	 cmp         r3, #0
  00a0c	9a000005	 bls         |$LN4@LAN911XSen|

; 458  :         WRITE_REGISTER_ULONG(&g_pLAN911X->tx_fifo, *(UINT32 *)(dwAlignedAddr));

  00a10	e59f30a8	 ldr         r3, [pc, #0xA8]
  00a14	e5933000	 ldr         r3, [r3]
  00a18	e2832020	 add         r2, r3, #0x20
  00a1c	e59d3004	 ldr         r3, [sp, #4]
  00a20	e5933000	 ldr         r3, [r3]
  00a24	e5823000	 str         r3, [r2]
  00a28		 |$LN4@LAN911XSen|
  00a28		 |$LN3@LAN911XSen|

; 459  : 
; 460  :     // Wait for TX complete
; 461  :     while (!(TX_FIFO_INF_TXSUSED & READ_REGISTER_ULONG(&g_pLAN911X->tx_fifo_inf)));

  00a28	e59f3090	 ldr         r3, [pc, #0x90]
  00a2c	e5933000	 ldr         r3, [r3]
  00a30	e2833080	 add         r3, r3, #0x80
  00a34	e5933000	 ldr         r3, [r3]
  00a38	e31308ff	 tst         r3, #0xFF, 16
  00a3c	1a000000	 bne         |$LN2@LAN911XSen|
  00a40	eafffff8	 b           |$LN3@LAN911XSen|
  00a44		 |$LN2@LAN911XSen|

; 462  : 
; 463  :     // Read status, popped from tx status fifo
; 464  :     dwTemp = READ_REGISTER_ULONG(&g_pLAN911X->tx_status_fifo);

  00a44	e59f3074	 ldr         r3, [pc, #0x74]
  00a48	e5933000	 ldr         r3, [r3]
  00a4c	e2833048	 add         r3, r3, #0x48
  00a50	e5933000	 ldr         r3, [r3]
  00a54	e58d3000	 str         r3, [sp]

; 465  :     if (TX_STATUS_FIFO_ES & dwTemp)

  00a58	e59d3000	 ldr         r3, [sp]
  00a5c	e3130902	 tst         r3, #2, 18
  00a60	0a00000c	 beq         |$LN1@LAN911XSen|

; 466  :     {
; 467  :         OALMSGS(OAL_ETHER, (L"Error transmitting buffer!  0x%x\r\n", dwTemp));

  00a64	e59f3050	 ldr         r3, [pc, #0x50]
  00a68	e5933440	 ldr         r3, [r3, #0x440]
  00a6c	e3130a02	 tst         r3, #2, 20
  00a70	0a000005	 beq         |$LN13@LAN911XSen|
  00a74	e59d1000	 ldr         r1, [sp]
  00a78	e59f0038	 ldr         r0, [pc, #0x38]
  00a7c	eb000000	 bl          OALLogSerial
  00a80	e3a03001	 mov         r3, #1
  00a84	e58d3018	 str         r3, [sp, #0x18]
  00a88	ea000001	 b           |$LN14@LAN911XSen|
  00a8c		 |$LN13@LAN911XSen|
  00a8c	e3a03000	 mov         r3, #0
  00a90	e58d3018	 str         r3, [sp, #0x18]
  00a94		 |$LN14@LAN911XSen|

; 468  :         goto ErrorReturn;

  00a94	ea000001	 b           |$ErrorReturn$43248|
  00a98		 |$LN1@LAN911XSen|

; 469  :     }
; 470  : 
; 471  :     RetCode = 0;

  00a98	e3a03000	 mov         r3, #0
  00a9c	e1cd30bc	 strh        r3, [sp, #0xC]
  00aa0		 |$ErrorReturn$43248|

; 472  : 
; 473  : ErrorReturn:
; 474  :     return RetCode;

  00aa0	e1dd30bc	 ldrh        r3, [sp, #0xC]
  00aa4	e1cd31b0	 strh        r3, [sp, #0x10]

; 475  : }

  00aa8	e1dd01b0	 ldrh        r0, [sp, #0x10]
  00aac	e28dd01c	 add         sp, sp, #0x1C
  00ab0	e89d6000	 ldmia       sp, {sp, lr}
  00ab4	e12fff1e	 bx          lr
  00ab8		 |$LN18@LAN911XSen|
  00ab8		 |$LN19@LAN911XSen|
  00ab8	00000000	 DCD         |??_C@_1EG@GCJBAFHN@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CB?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AAx@|
  00abc		 |$LN20@LAN911XSen|
  00abc	00000000	 DCD         |dpCurSettings|
  00ac0		 |$LN21@LAN911XSen|
  00ac0	00000000	 DCD         |g_pLAN911X|
  00ac4		 |$LN22@LAN911XSen|
  00ac4	00000000	 DCD         |??_C@_1DM@CALKBHOJ@?$AAN?$AAo?$AAt?$AA?5?$AAe?$AAn?$AAo?$AAu?$AAg?$AAh?$AA?5?$AAr?$AAo?$AAo?$AAm?$AA?5?$AAi?$AAn?$AA?5?$AAT?$AAX?$AA?5?$AAF?$AAI?$AAF?$AAO?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@|
  00ac8		 |$M43601|

			 ENDP  ; |LAN911XSendFrame|

	EXPORT	|??_C@_1EC@CDIADGHO@?$AAR?$AAX?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAD?$AAW?$AAO?$AAR?$AAD?$AA?5?$AAa?$AAl?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@NFIEPIMK@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAt?$AAo?$AAo?$AA?5?$AAs?$AAm?$AAa?$AAl?$AAl?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@DJPMDJBC@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAi?$AAn?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAp?$AAa?$AAc?$AAk?$AAe?$AAt?$AA?$CB?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|LAN911XGetFrame|
	IMPORT	|memcpy|

  00028			 AREA	 |.pdata|, PDATA
|$T43622| DCD	|$LN32@LAN911XGet|
	DCD	0x4000eb04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@CDIADGHO@?$AAR?$AAX?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAD?$AAW?$AAO?$AAR?$AAD?$AA?5?$AAa?$AAl?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6@| DCB "R"
	DCB	0x0, "X", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t"
	DCB	0x0, " ", 0x0, "D", 0x0, "W", 0x0, "O", 0x0, "R", 0x0, "D"
	DCB	0x0, " ", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "g", 0x0, "n"
	DCB	0x0, "e", 0x0, "d", 0x0, ".", 0x0, ".", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@NFIEPIMK@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAt?$AAo?$AAo?$AA?5?$AAs?$AAm?$AAa?$AAl?$AAl?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "p", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, "o", 0x0, " ", 0x0, "s", 0x0, "m"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@DJPMDJBC@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAi?$AAn?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAp?$AAa?$AAc?$AAk?$AAe?$AAt?$AA?$CB?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN@| DCB "E"
	DCB	0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "c", 0x0, "e"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "p"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "e", 0x0, "t", 0x0, "!"
	DCB	0x0, " ", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00ac8			 AREA	 |.text|, CODE, ARM

  00ac8		 |LAN911XGetFrame| PROC

; 480  : {

  00ac8		 |$LN32@LAN911XGet|
  00ac8	e1a0c00d	 mov         r12, sp
  00acc	e92d0003	 stmdb       sp!, {r0, r1}
  00ad0	e92d5000	 stmdb       sp!, {r12, lr}
  00ad4	e24dd024	 sub         sp, sp, #0x24
  00ad8		 |$M43619|

; 481  :     UINT32 cbLength;
; 482  :     UINT32 dwTemp;
; 483  :     UINT32 dwOffset;
; 484  : 
; 485  :     // Sanity check
; 486  :     if (!pBuffer || !pLength)

  00ad8	e59d302c	 ldr         r3, [sp, #0x2C]
  00adc	e3530000	 cmp         r3, #0
  00ae0	0a000002	 beq         |$LN18@LAN911XGet|
  00ae4	e59d3030	 ldr         r3, [sp, #0x30]
  00ae8	e3530000	 cmp         r3, #0
  00aec	1a000002	 bne         |$LN19@LAN911XGet|
  00af0		 |$LN18@LAN911XGet|

; 487  :         return 0;

  00af0	e3a03000	 mov         r3, #0
  00af4	e1cd30bc	 strh        r3, [sp, #0xC]
  00af8	ea0000d4	 b           |$LN20@LAN911XGet|
  00afc		 |$LN19@LAN911XGet|

; 488  : 
; 489  :     // Check to see if data is available
; 490  :     if (!(RX_FIFO_INF_RXSUSED & READ_REGISTER_ULONG(&g_pLAN911X->rx_fifo_inf)))

  00afc	e59f335c	 ldr         r3, [pc, #0x35C]
  00b00	e5933000	 ldr         r3, [r3]
  00b04	e283307c	 add         r3, r3, #0x7C
  00b08	e5933000	 ldr         r3, [r3]
  00b0c	e31308ff	 tst         r3, #0xFF, 16
  00b10	1a000006	 bne         |$LN17@LAN911XGet|

; 491  :     {
; 492  :         // No packet available
; 493  :         *pLength = 0;

  00b14	e59d2030	 ldr         r2, [sp, #0x30]
  00b18	e3a03000	 mov         r3, #0
  00b1c	e1c230b0	 strh        r3, [r2]

; 494  :         return  *pLength;

  00b20	e59d3030	 ldr         r3, [sp, #0x30]
  00b24	e1d330b0	 ldrh        r3, [r3]
  00b28	e1cd30bc	 strh        r3, [sp, #0xC]
  00b2c	ea0000c7	 b           |$LN20@LAN911XGet|
  00b30		 |$LN17@LAN911XGet|

; 495  :     }
; 496  : 
; 497  :     // At least one packet is available, get status
; 498  :     dwTemp = READ_REGISTER_ULONG(&g_pLAN911X->rx_status_fifo);

  00b30	e59f3328	 ldr         r3, [pc, #0x328]
  00b34	e5933000	 ldr         r3, [r3]
  00b38	e2833040	 add         r3, r3, #0x40
  00b3c	e5933000	 ldr         r3, [r3]
  00b40	e58d3000	 str         r3, [sp]

; 499  :     cbLength = (dwTemp & RX_STATUS_FIFO_LENGTH_MASK) >> RX_STATUS_FIFO_LENGTH_OFFSET;

  00b44	e59d2000	 ldr         r2, [sp]
  00b48	e3a035ff	 mov         r3, #0xFF, 10
  00b4c	e383383f	 orr         r3, r3, #0x3F, 16
  00b50	e0023003	 and         r3, r2, r3
  00b54	e1a03823	 mov         r3, r3, lsr #16
  00b58	e58d3008	 str         r3, [sp, #8]

; 500  :     if (RX_STATUS_FIFO_ES & dwTemp)

  00b5c	e59d3000	 ldr         r3, [sp]
  00b60	e3130902	 tst         r3, #2, 18
  00b64	0a000031	 beq         |$LN16@LAN911XGet|

; 501  :     {
; 502  :         OALMSGS(OAL_ETHER, (L"Error in received packet!  0x%x\r\n", dwTemp));

  00b68	e59f32f8	 ldr         r3, [pc, #0x2F8]
  00b6c	e5933440	 ldr         r3, [r3, #0x440]
  00b70	e3130a02	 tst         r3, #2, 20
  00b74	0a000005	 beq         |$LN22@LAN911XGet|
  00b78	e59d1000	 ldr         r1, [sp]
  00b7c	e59f02ec	 ldr         r0, [pc, #0x2EC]
  00b80	eb000000	 bl          OALLogSerial
  00b84	e3a03001	 mov         r3, #1
  00b88	e58d3010	 str         r3, [sp, #0x10]
  00b8c	ea000001	 b           |$LN23@LAN911XGet|
  00b90		 |$LN22@LAN911XGet|
  00b90	e3a03000	 mov         r3, #0
  00b94	e58d3010	 str         r3, [sp, #0x10]
  00b98		 |$LN23@LAN911XGet|

; 503  :         // Purge packet
; 504  :         if (cbLength < 32)

  00b98	e59d3008	 ldr         r3, [sp, #8]
  00b9c	e3530020	 cmp         r3, #0x20
  00ba0	2a000012	 bcs         |$LN15@LAN911XGet|

; 505  :         {
; 506  :             // Should never occur, since we don't pass bad packets
; 507  :             // Read appropriate number of DWORDs to clear packet
; 508  :             cbLength += 3;

  00ba4	e59d3008	 ldr         r3, [sp, #8]
  00ba8	e2833003	 add         r3, r3, #3
  00bac	e58d3008	 str         r3, [sp, #8]

; 509  :             cbLength >>= 2;

  00bb0	e59d3008	 ldr         r3, [sp, #8]
  00bb4	e1a03123	 mov         r3, r3, lsr #2
  00bb8	e58d3008	 str         r3, [sp, #8]
  00bbc	ea000002	 b           |$LN14@LAN911XGet|
  00bc0		 |$LN13@LAN911XGet|

; 510  :             for (; cbLength != 0; cbLength--)

  00bc0	e59d3008	 ldr         r3, [sp, #8]
  00bc4	e2433001	 sub         r3, r3, #1
  00bc8	e58d3008	 str         r3, [sp, #8]
  00bcc		 |$LN14@LAN911XGet|
  00bcc	e59d3008	 ldr         r3, [sp, #8]
  00bd0	e3530000	 cmp         r3, #0
  00bd4	0a000004	 beq         |$LN12@LAN911XGet|

; 511  :                 READ_REGISTER_ULONG(&g_pLAN911X->rx_fifo);

  00bd8	e59f3280	 ldr         r3, [pc, #0x280]
  00bdc	e5933000	 ldr         r3, [r3]
  00be0	e5933000	 ldr         r3, [r3]
  00be4	e58d3014	 str         r3, [sp, #0x14]
  00be8	eafffff4	 b           |$LN13@LAN911XGet|
  00bec		 |$LN12@LAN911XGet|

; 512  :         }
; 513  :         else

  00bec	ea00000b	 b           |$LN11@LAN911XGet|
  00bf0		 |$LN15@LAN911XGet|

; 514  :         {
; 515  :             WRITE_REGISTER_ULONG(&g_pLAN911X->rx_dp_ctrl, (DWORD) RX_DP_CTRL_FFWD);

  00bf0	e59f3268	 ldr         r3, [pc, #0x268]
  00bf4	e5933000	 ldr         r3, [r3]
  00bf8	e2832078	 add         r2, r3, #0x78
  00bfc	e3a03102	 mov         r3, #2, 2
  00c00	e5823000	 str         r3, [r2]
  00c04		 |$LN10@LAN911XGet|

; 516  :             while (RX_DP_CTRL_FFWD & READ_REGISTER_ULONG(&g_pLAN911X->rx_dp_ctrl));

  00c04	e59f3254	 ldr         r3, [pc, #0x254]
  00c08	e5933000	 ldr         r3, [r3]
  00c0c	e2833078	 add         r3, r3, #0x78
  00c10	e5933000	 ldr         r3, [r3]
  00c14	e3130102	 tst         r3, #2, 2
  00c18	0a000000	 beq         |$LN9@LAN911XGet|
  00c1c	eafffff8	 b           |$LN10@LAN911XGet|
  00c20		 |$LN9@LAN911XGet|
  00c20		 |$LN11@LAN911XGet|

; 517  :         }
; 518  : 
; 519  :         *pLength = 0;

  00c20	e59d2030	 ldr         r2, [sp, #0x30]
  00c24	e3a03000	 mov         r3, #0
  00c28	e1c230b0	 strh        r3, [r2]

; 520  :         goto ErrorReturn;

  00c2c	ea00007f	 b           |$ErrorReturn$43301|
  00c30		 |$LN16@LAN911XGet|

; 521  :     }
; 522  : 
; 523  :     //length returned is Total frame length minus FCS length so
; 524  :     //reduce cbLength by 4 bytes
; 525  :     cbLength = (cbLength > FCS_LENGTH)? (cbLength - FCS_LENGTH) : 0;

  00c30	e59d3008	 ldr         r3, [sp, #8]
  00c34	e3530004	 cmp         r3, #4
  00c38	9a000003	 bls         |$LN24@LAN911XGet|
  00c3c	e59d3008	 ldr         r3, [sp, #8]
  00c40	e2433004	 sub         r3, r3, #4
  00c44	e58d3018	 str         r3, [sp, #0x18]
  00c48	ea000001	 b           |$LN25@LAN911XGet|
  00c4c		 |$LN24@LAN911XGet|
  00c4c	e3a03000	 mov         r3, #0
  00c50	e58d3018	 str         r3, [sp, #0x18]
  00c54		 |$LN25@LAN911XGet|
  00c54	e59d3018	 ldr         r3, [sp, #0x18]
  00c58	e58d3008	 str         r3, [sp, #8]

; 526  :     
; 527  :     // Check input buffer size
; 528  :     if (*pLength < cbLength)

  00c5c	e59d3030	 ldr         r3, [sp, #0x30]
  00c60	e1d320b0	 ldrh        r2, [r3]
  00c64	e59d3008	 ldr         r3, [sp, #8]
  00c68	e1520003	 cmp         r2, r3
  00c6c	2a00001a	 bcs         |$LN8@LAN911XGet|

; 529  :     {
; 530  :         // Shouldn't ever occur
; 531  :         OALMSGS(OAL_ETHER, (L"Input buffer too small!\r\n"));

  00c70	e59f31f0	 ldr         r3, [pc, #0x1F0]
  00c74	e5933440	 ldr         r3, [r3, #0x440]
  00c78	e3130a02	 tst         r3, #2, 20
  00c7c	0a000004	 beq         |$LN26@LAN911XGet|
  00c80	e59f01e4	 ldr         r0, [pc, #0x1E4]
  00c84	eb000000	 bl          OALLogSerial
  00c88	e3a03001	 mov         r3, #1
  00c8c	e58d301c	 str         r3, [sp, #0x1C]
  00c90	ea000001	 b           |$LN27@LAN911XGet|
  00c94		 |$LN26@LAN911XGet|
  00c94	e3a03000	 mov         r3, #0
  00c98	e58d301c	 str         r3, [sp, #0x1C]
  00c9c		 |$LN27@LAN911XGet|

; 532  :         // Dump packet 
; 533  :         WRITE_REGISTER_ULONG(&g_pLAN911X->rx_dp_ctrl, (DWORD) RX_DP_CTRL_FFWD);

  00c9c	e59f31bc	 ldr         r3, [pc, #0x1BC]
  00ca0	e5933000	 ldr         r3, [r3]
  00ca4	e2832078	 add         r2, r3, #0x78
  00ca8	e3a03102	 mov         r3, #2, 2
  00cac	e5823000	 str         r3, [r2]
  00cb0		 |$LN7@LAN911XGet|

; 534  :         while (RX_DP_CTRL_FFWD & READ_REGISTER_ULONG(&g_pLAN911X->rx_dp_ctrl));

  00cb0	e59f31a8	 ldr         r3, [pc, #0x1A8]
  00cb4	e5933000	 ldr         r3, [r3]
  00cb8	e2833078	 add         r3, r3, #0x78
  00cbc	e5933000	 ldr         r3, [r3]
  00cc0	e3130102	 tst         r3, #2, 2
  00cc4	0a000000	 beq         |$LN6@LAN911XGet|
  00cc8	eafffff8	 b           |$LN7@LAN911XGet|
  00ccc		 |$LN6@LAN911XGet|

; 535  :         *pLength = 0;

  00ccc	e59d2030	 ldr         r2, [sp, #0x30]
  00cd0	e3a03000	 mov         r3, #0
  00cd4	e1c230b0	 strh        r3, [r2]

; 536  :         goto ErrorReturn;

  00cd8	ea000054	 b           |$ErrorReturn$43301|
  00cdc		 |$LN8@LAN911XGet|

; 537  :     }
; 538  : 
; 539  :     // return length in provided parameter
; 540  :     *pLength = (UINT16) cbLength;

  00cdc	e59d3008	 ldr         r3, [sp, #8]
  00ce0	e1a02803	 mov         r2, r3, lsl #16
  00ce4	e1a02822	 mov         r2, r2, lsr #16
  00ce8	e59d3030	 ldr         r3, [sp, #0x30]
  00cec	e1c320b0	 strh        r2, [r3]

; 541  : 
; 542  :     // Check to ensure pBuffer is aligned on a DWORD boundary.
; 543  :     // If not, configure controller for additional pad bytes,
; 544  :     // and read initial DWORD
; 545  :     dwOffset = (UINT32)pBuffer & 0x3;

  00cf0	e59d302c	 ldr         r3, [sp, #0x2C]
  00cf4	e2033003	 and         r3, r3, #3
  00cf8	e58d3004	 str         r3, [sp, #4]

; 546  :     if (dwOffset)

  00cfc	e59d3004	 ldr         r3, [sp, #4]
  00d00	e3530000	 cmp         r3, #0
  00d04	0a000026	 beq         |$LN5@LAN911XGet|

; 547  :     {
; 548  :         // This should never happen
; 549  :         OALMSGS(OAL_ETHER, (L"RX buffer not DWORD aligned...\r\n"));

  00d08	e59f3158	 ldr         r3, [pc, #0x158]
  00d0c	e5933440	 ldr         r3, [r3, #0x440]
  00d10	e3130a02	 tst         r3, #2, 20
  00d14	0a000004	 beq         |$LN28@LAN911XGet|
  00d18	e59f0144	 ldr         r0, [pc, #0x144]
  00d1c	eb000000	 bl          OALLogSerial
  00d20	e3a03001	 mov         r3, #1
  00d24	e58d3020	 str         r3, [sp, #0x20]
  00d28	ea000001	 b           |$LN29@LAN911XGet|
  00d2c		 |$LN28@LAN911XGet|
  00d2c	e3a03000	 mov         r3, #0
  00d30	e58d3020	 str         r3, [sp, #0x20]
  00d34		 |$LN29@LAN911XGet|

; 550  : 
; 551  :         // Configure to add padding prior real bytes in first dword read
; 552  :         // NOTE - there is a discrepancy in the docs on changing this parameter.  One
; 553  :         // place indicates this can only be changed on RX is off and data purged, another
; 554  :         // just says you can't change it while reading a packet.  We don't expect to ever
; 555  :         // be in this condition, but code is here anyway...
; 556  :         WRITE_REGISTER_ULONG(&g_pLAN911X->rx_cfg, dwOffset << RX_CFG_RXDOFF_OFFSET);

  00d34	e59d3004	 ldr         r3, [sp, #4]
  00d38	e1a02403	 mov         r2, r3, lsl #8
  00d3c	e59f311c	 ldr         r3, [pc, #0x11C]
  00d40	e5933000	 ldr         r3, [r3]
  00d44	e283306c	 add         r3, r3, #0x6C
  00d48	e5832000	 str         r2, [r3]

; 557  : 
; 558  :         // Read first dword, copy real bytes into user buffer 
; 559  :         dwTemp = READ_REGISTER_ULONG(&g_pLAN911X->rx_fifo);

  00d4c	e59f310c	 ldr         r3, [pc, #0x10C]
  00d50	e5933000	 ldr         r3, [r3]
  00d54	e5933000	 ldr         r3, [r3]
  00d58	e58d3000	 str         r3, [sp]

; 560  :         memcpy(pBuffer, (UINT8 *)((UINT8 *)&dwTemp + dwOffset), 4-dwOffset);

  00d5c	e59d3004	 ldr         r3, [sp, #4]
  00d60	e2632004	 rsb         r2, r3, #4
  00d64	e28d1000	 add         r1, sp, #0
  00d68	e59d3004	 ldr         r3, [sp, #4]
  00d6c	e0811003	 add         r1, r1, r3
  00d70	e59d002c	 ldr         r0, [sp, #0x2C]
  00d74	eb000000	 bl          memcpy

; 561  :         pBuffer = pBuffer + 4-dwOffset;

  00d78	e59d302c	 ldr         r3, [sp, #0x2C]
  00d7c	e2832004	 add         r2, r3, #4
  00d80	e59d3004	 ldr         r3, [sp, #4]
  00d84	e0423003	 sub         r3, r2, r3
  00d88	e58d302c	 str         r3, [sp, #0x2C]

; 562  :         cbLength = cbLength - (4 - dwOffset);

  00d8c	e59d3004	 ldr         r3, [sp, #4]
  00d90	e2632004	 rsb         r2, r3, #4
  00d94	e59d3008	 ldr         r3, [sp, #8]
  00d98	e0433002	 sub         r3, r3, r2
  00d9c	e58d3008	 str         r3, [sp, #8]

; 563  :         // user buffer should now be DWORD aligned
; 564  :     }
; 565  :     else

  00da0	ea000004	 b           |$LN4@LAN911XGet|
  00da4		 |$LN5@LAN911XGet|

; 566  :         WRITE_REGISTER_ULONG(&g_pLAN911X->rx_cfg, 0);

  00da4	e59f30b4	 ldr         r3, [pc, #0xB4]
  00da8	e5933000	 ldr         r3, [r3]
  00dac	e283206c	 add         r2, r3, #0x6C
  00db0	e3a03000	 mov         r3, #0
  00db4	e5823000	 str         r3, [r2]
  00db8		 |$LN4@LAN911XGet|
  00db8		 |$LN3@LAN911XGet|

; 567  : 
; 568  : 
; 569  :     // Read complete DWORDs into provided buffer
; 570  :     while (cbLength >= 4)

  00db8	e59d3008	 ldr         r3, [sp, #8]
  00dbc	e3530004	 cmp         r3, #4
  00dc0	3a00000b	 bcc         |$LN2@LAN911XGet|

; 571  :     {
; 572  :         *(ULONG *)pBuffer = READ_REGISTER_ULONG(&g_pLAN911X->rx_fifo);

  00dc4	e59f3094	 ldr         r3, [pc, #0x94]
  00dc8	e5933000	 ldr         r3, [r3]
  00dcc	e5932000	 ldr         r2, [r3]
  00dd0	e59d302c	 ldr         r3, [sp, #0x2C]
  00dd4	e5832000	 str         r2, [r3]

; 573  :         cbLength = cbLength - 4;

  00dd8	e59d3008	 ldr         r3, [sp, #8]
  00ddc	e2433004	 sub         r3, r3, #4
  00de0	e58d3008	 str         r3, [sp, #8]

; 574  :         pBuffer = pBuffer + 4;

  00de4	e59d302c	 ldr         r3, [sp, #0x2C]
  00de8	e2833004	 add         r3, r3, #4
  00dec	e58d302c	 str         r3, [sp, #0x2C]

; 575  :     }

  00df0	eafffff0	 b           |$LN3@LAN911XGet|
  00df4		 |$LN2@LAN911XGet|

; 576  : 
; 577  :     // Read any remaining bytes into buffer
; 578  :     if (cbLength)

  00df4	e59d3008	 ldr         r3, [sp, #8]
  00df8	e3530000	 cmp         r3, #0
  00dfc	0a000007	 beq         |$LN1@LAN911XGet|

; 579  :     {
; 580  :         dwTemp = READ_REGISTER_ULONG(&g_pLAN911X->rx_fifo);

  00e00	e59f3058	 ldr         r3, [pc, #0x58]
  00e04	e5933000	 ldr         r3, [r3]
  00e08	e5933000	 ldr         r3, [r3]
  00e0c	e58d3000	 str         r3, [sp]

; 581  :         memcpy(pBuffer, &dwTemp, cbLength);

  00e10	e59d2008	 ldr         r2, [sp, #8]
  00e14	e28d1000	 add         r1, sp, #0
  00e18	e59d002c	 ldr         r0, [sp, #0x2C]
  00e1c	eb000000	 bl          memcpy
  00e20		 |$LN1@LAN911XGet|

; 582  : 
; 583  :     }
; 584  : 
; 585  :     //read the four byte FCS from FIFO and discard it
; 586  :     dwTemp = READ_REGISTER_ULONG(&g_pLAN911X->rx_fifo);

  00e20	e59f3038	 ldr         r3, [pc, #0x38]
  00e24	e5933000	 ldr         r3, [r3]
  00e28	e5933000	 ldr         r3, [r3]
  00e2c	e58d3000	 str         r3, [sp]
  00e30		 |$ErrorReturn$43301|

; 587  :     
; 588  : ErrorReturn:
; 589  :     // Acknowledge RX interrupt
; 590  :     WRITE_REGISTER_ULONG(&g_pLAN911X->int_sts, INT_STS_RSFL);

  00e30	e59f3028	 ldr         r3, [pc, #0x28]
  00e34	e5933000	 ldr         r3, [r3]
  00e38	e2832058	 add         r2, r3, #0x58
  00e3c	e3a03008	 mov         r3, #8
  00e40	e5823000	 str         r3, [r2]

; 591  :     return  *pLength;

  00e44	e59d3030	 ldr         r3, [sp, #0x30]
  00e48	e1d330b0	 ldrh        r3, [r3]
  00e4c	e1cd30bc	 strh        r3, [sp, #0xC]
  00e50		 |$LN20@LAN911XGet|

; 592  : }

  00e50	e1dd00bc	 ldrh        r0, [sp, #0xC]
  00e54	e28dd024	 add         sp, sp, #0x24
  00e58	e89d6000	 ldmia       sp, {sp, lr}
  00e5c	e12fff1e	 bx          lr
  00e60		 |$LN33@LAN911XGet|
  00e60		 |$LN34@LAN911XGet|
  00e60	00000000	 DCD         |g_pLAN911X|
  00e64		 |$LN35@LAN911XGet|
  00e64	00000000	 DCD         |??_C@_1EC@CDIADGHO@?$AAR?$AAX?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAD?$AAW?$AAO?$AAR?$AAD?$AA?5?$AAa?$AAl?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6@|
  00e68		 |$LN36@LAN911XGet|
  00e68	00000000	 DCD         |dpCurSettings|
  00e6c		 |$LN37@LAN911XGet|
  00e6c	00000000	 DCD         |??_C@_1DE@NFIEPIMK@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAt?$AAo?$AAo?$AA?5?$AAs?$AAm?$AAa?$AAl?$AAl?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@|
  00e70		 |$LN38@LAN911XGet|
  00e70	00000000	 DCD         |??_C@_1EE@DJPMDJBC@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAi?$AAn?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAp?$AAa?$AAc?$AAk?$AAe?$AAt?$AA?$CB?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN@|
  00e74		 |$M43620|

			 ENDP  ; |LAN911XGetFrame|

	EXPORT	|LAN911XEnableInts|

  00030			 AREA	 |.pdata|, PDATA
|$T43633| DCD	|$LN5@LAN911XEna|
	DCD	0x40000700
; Function compile flags: /Odtp

  00e74			 AREA	 |.text|, CODE, ARM

  00e74		 |LAN911XEnableInts| PROC

; 597  : {

  00e74		 |$LN5@LAN911XEna|
  00e74		 |$M43630|

; 598  :     // Unmask RS status fifo interrupt
; 599  :     // Global interrupt is already enabled
; 600  :     WRITE_REGISTER_ULONG(&g_pLAN911X->int_en, INT_EN_RSFL);

  00e74	e59f3010	 ldr         r3, [pc, #0x10]
  00e78	e5933000	 ldr         r3, [r3]
  00e7c	e283205c	 add         r2, r3, #0x5C
  00e80	e3a03008	 mov         r3, #8
  00e84	e5823000	 str         r3, [r2]

; 601  : }

  00e88	e12fff1e	 bx          lr
  00e8c		 |$LN6@LAN911XEna|
  00e8c		 |$LN7@LAN911XEna|
  00e8c	00000000	 DCD         |g_pLAN911X|
  00e90		 |$M43631|

			 ENDP  ; |LAN911XEnableInts|

	EXPORT	|LAN911XDisableInts|

  00038			 AREA	 |.pdata|, PDATA
|$T43640| DCD	|$LN5@LAN911XDis|
	DCD	0x40000700
; Function compile flags: /Odtp

  00e90			 AREA	 |.text|, CODE, ARM

  00e90		 |LAN911XDisableInts| PROC

; 606  : {

  00e90		 |$LN5@LAN911XDis|
  00e90		 |$M43637|

; 607  :     WRITE_REGISTER_ULONG(&g_pLAN911X->int_en, 0);

  00e90	e59f3010	 ldr         r3, [pc, #0x10]
  00e94	e5933000	 ldr         r3, [r3]
  00e98	e283205c	 add         r2, r3, #0x5C
  00e9c	e3a03000	 mov         r3, #0
  00ea0	e5823000	 str         r3, [r2]

; 608  : }

  00ea4	e12fff1e	 bx          lr
  00ea8		 |$LN6@LAN911XDis|
  00ea8		 |$LN7@LAN911XDis|
  00ea8	00000000	 DCD         |g_pLAN911X|
  00eac		 |$M43638|

			 ENDP  ; |LAN911XDisableInts|

	EXPORT	|LAN911XCurrentPacketFilter|

  00040			 AREA	 |.pdata|, PDATA
|$T43647| DCD	|$LN5@LAN911XCur|
	DCD	0x40000503
; Function compile flags: /Odtp

  00eac			 AREA	 |.text|, CODE, ARM

  00eac		 |LAN911XCurrentPacketFilter| PROC

; 613  : {

  00eac		 |$LN5@LAN911XCur|
  00eac	e1a0c00d	 mov         r12, sp
  00eb0	e92d0001	 stmdb       sp!, {r0}
  00eb4	e92d5000	 stmdb       sp!, {r12, lr}
  00eb8		 |$M43644|

; 614  :     // Not supported
; 615  :     // Must exist though because it's called through a 
; 616  :     // function pointer that isn't checked 
; 617  :     UNREFERENCED_PARAMETER(filter);
; 618  : 
; 619  : }

  00eb8	e89d6000	 ldmia       sp, {sp, lr}
  00ebc	e12fff1e	 bx          lr
  00ec0		 |$M43645|

			 ENDP  ; |LAN911XCurrentPacketFilter|

	EXPORT	|LAN911XMulticastList|

  00048			 AREA	 |.pdata|, PDATA
|$T43653| DCD	|$LN5@LAN911XMul|
	DCD	0x40000a04
; Function compile flags: /Odtp

  00ec0			 AREA	 |.text|, CODE, ARM

  00ec0		 |LAN911XMulticastList| PROC

; 624  : {

  00ec0		 |$LN5@LAN911XMul|
  00ec0	e1a0c00d	 mov         r12, sp
  00ec4	e92d0003	 stmdb       sp!, {r0, r1}
  00ec8	e92d5000	 stmdb       sp!, {r12, lr}
  00ecc	e24dd004	 sub         sp, sp, #4
  00ed0		 |$M43650|

; 625  :     // Not supported
; 626  :     UNREFERENCED_PARAMETER(pAddresses);
; 627  :     UNREFERENCED_PARAMETER(count);
; 628  :     return FALSE;

  00ed0	e3a03000	 mov         r3, #0
  00ed4	e58d3000	 str         r3, [sp]

; 629  : }

  00ed8	e59d0000	 ldr         r0, [sp]
  00edc	e28dd004	 add         sp, sp, #4
  00ee0	e89d6000	 ldmia       sp, {sp, lr}
  00ee4	e12fff1e	 bx          lr
  00ee8		 |$M43651|

			 ENDP  ; |LAN911XMulticastList|

	EXPORT	|??_C@_1EG@KGEACGLH@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAE?$AAt?$AAh?$AAe?$AAr?$AAn?$AAe?$AAt?$AA?5?$AAc?$AAh?$AAi?$AAp?$AA?5?$AAI?$AAD?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?$CB@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KI@DMEFCEJ@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'

  00050			 AREA	 |.pdata|, PDATA
|$T43660| DCD	|$LN11@LAN911XFin|
	DCD	0x40005604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@KGEACGLH@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAE?$AAt?$AAh?$AAe?$AAr?$AAn?$AAe?$AAt?$AA?5?$AAc?$AAh?$AAi?$AAp?$AA?5?$AAI?$AAD?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?$CB@| DCB "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "E", 0x0, "t", 0x0, "h", 0x0, "e", 0x0, "r"
	DCB	0x0, "n", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "h"
	DCB	0x0, "i", 0x0, "p", 0x0, " ", 0x0, "I", 0x0, "D", 0x0, " "
	DCB	0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ":", 0x0, " "
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KI@DMEFCEJ@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "C"
	DCB	0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N", 0x0, "_"
	DCB	0x0, "T", 0x0, "I", 0x0, "_", 0x0, "V", 0x0, "1", 0x0, "\\"
	DCB	0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N"
	DCB	0x0, "_", 0x0, "T", 0x0, "I", 0x0, "\\", 0x0, "B", 0x0, "O"
	DCB	0x0, "O", 0x0, "T", 0x0, "\\", 0x0, "L", 0x0, "A", 0x0, "N"
	DCB	0x0, "9", 0x0, "1", 0x0, "1", 0x0, "X", 0x0, "\\", 0x0, "."
	DCB	0x0, "\\", 0x0, "l", 0x0, "a", 0x0, "n", 0x0, "9", 0x0, "1"
	DCB	0x0, "1", 0x0, "x", 0x0, ".", 0x0, "c", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00ee8			 AREA	 |.text|, CODE, ARM

  00ee8		 |LAN911XFindController| PROC

; 635  : {

  00ee8		 |$LN11@LAN911XFin|
  00ee8	e1a0c00d	 mov         r12, sp
  00eec	e92d0003	 stmdb       sp!, {r0, r1}
  00ef0	e92d5000	 stmdb       sp!, {r12, lr}
  00ef4	e24dd014	 sub         sp, sp, #0x14
  00ef8		 |$M43657|

; 636  :     BOOL RetCode = FALSE;

  00ef8	e3a03000	 mov         r3, #0
  00efc	e58d3004	 str         r3, [sp, #4]

; 637  :     DWORD dwTemp;
; 638  :     LAN911X_REGS* pCtrl;
; 639  :     pCtrl = (LAN911X_REGS*) pAddr;

  00f00	e59d301c	 ldr         r3, [sp, #0x1C]
  00f04	e58d3008	 str         r3, [sp, #8]

; 640  :     // Verify chip exists
; 641  :     dwTemp = READ_REGISTER_ULONG(&pCtrl->id_rev);

  00f08	e59d3008	 ldr         r3, [sp, #8]
  00f0c	e2833050	 add         r3, r3, #0x50
  00f10	e5933000	 ldr         r3, [r3]
  00f14	e58d3000	 str         r3, [sp]

; 642  :     // dummy read
; 643  :     dwTemp = READ_REGISTER_ULONG(&pCtrl->id_rev);

  00f18	e59d3008	 ldr         r3, [sp, #8]
  00f1c	e2833050	 add         r3, r3, #0x50
  00f20	e5933000	 ldr         r3, [r3]
  00f24	e58d3000	 str         r3, [sp]

; 644  : 
; 645  :     g_dwChipId = dwTemp & 0xFFFF0000; 

  00f28	e59d2000	 ldr         r2, [sp]
  00f2c	e3e03cff	 mvn         r3, #0xFF, 24
  00f30	e22330ff	 eor         r3, r3, #0xFF
  00f34	e0022003	 and         r2, r2, r3
  00f38	e59f30fc	 ldr         r3, [pc, #0xFC]
  00f3c	e5832000	 str         r2, [r3]

; 646  :     
; 647  :     switch(g_dwChipId)

  00f40	e59f30f4	 ldr         r3, [pc, #0xF4]
  00f44	e5933000	 ldr         r3, [r3]
  00f48	e58d3010	 str         r3, [sp, #0x10]
  00f4c	e59d3010	 ldr         r3, [sp, #0x10]
  00f50	e3530746	 cmp         r3, #0x46, 14
  00f54	8a000012	 bhi         |$LN8@LAN911XFin|
  00f58	e59d3010	 ldr         r3, [sp, #0x10]
  00f5c	e3530746	 cmp         r3, #0x46, 14
  00f60	0a00001a	 beq         |$LN3@LAN911XFin|
  00f64	e59d2010	 ldr         r2, [sp, #0x10]
  00f68	e3a03745	 mov         r3, #0x45, 14
  00f6c	e3833801	 orr         r3, r3, #1, 16
  00f70	e1520003	 cmp         r2, r3
  00f74	0a000015	 beq         |$LN3@LAN911XFin|
  00f78	e59d2010	 ldr         r2, [sp, #0x10]
  00f7c	e3a03745	 mov         r3, #0x45, 14
  00f80	e3833802	 orr         r3, r3, #2, 16
  00f84	e1520003	 cmp         r2, r3
  00f88	0a000010	 beq         |$LN3@LAN911XFin|
  00f8c	e59d2010	 ldr         r2, [sp, #0x10]
  00f90	e3a03745	 mov         r3, #0x45, 14
  00f94	e3833803	 orr         r3, r3, #3, 16
  00f98	e1520003	 cmp         r2, r3
  00f9c	0a00000b	 beq         |$LN3@LAN911XFin|
  00fa0	ea00000b	 b           |$LN2@LAN911XFin|
  00fa4		 |$LN8@LAN911XFin|
  00fa4	e59d2010	 ldr         r2, [sp, #0x10]
  00fa8	e3a03492	 mov         r3, #0x92, 8
  00fac	e3833602	 orr         r3, r3, #2, 12
  00fb0	e1520003	 cmp         r2, r3
  00fb4	0a000005	 beq         |$LN3@LAN911XFin|
  00fb8	e59d2010	 ldr         r2, [sp, #0x10]
  00fbc	e3a03493	 mov         r3, #0x93, 8
  00fc0	e3833811	 orr         r3, r3, #0x11, 16
  00fc4	e1520003	 cmp         r2, r3
  00fc8	0a000000	 beq         |$LN3@LAN911XFin|
  00fcc	ea000000	 b           |$LN2@LAN911XFin|
  00fd0		 |$LN3@LAN911XFin|

; 648  :     {
; 649  :         case 0x93110000:
; 650  :         case 0x92200000:
; 651  :         case 0x01180000:
; 652  :         case 0x01170000:
; 653  :         case 0x01160000:
; 654  :         case 0x01150000:
; 655  :         break;

  00fd0	ea000008	 b           |$LN4@LAN911XFin|
  00fd4		 |$LN2@LAN911XFin|

; 656  :     default:
; 657  :         ERRORMSG(1, (L"Invalid Ethernet chip ID (0x%x)!\r\n", dwTemp));

  00fd4	e3a02c02	 mov         r2, #2, 24
  00fd8	e3822091	 orr         r2, r2, #0x91
  00fdc	e59f1054	 ldr         r1, [pc, #0x54]
  00fe0	e59f004c	 ldr         r0, [pc, #0x4C]
  00fe4	eb000000	 bl          NKDbgPrintfW
  00fe8	e59d1000	 ldr         r1, [sp]
  00fec	e59f003c	 ldr         r0, [pc, #0x3C]
  00ff0	eb000000	 bl          NKDbgPrintfW

; 658  :         goto ErrorReturn;

  00ff4	ea000007	 b           |$ErrorReturn$43367|
  00ff8		 |$LN4@LAN911XFin|

; 659  :     }
; 660  :     //// Wake chip from sleep state - write any value to the byte register, poll PMT ready bit
; 661  :     //WRITE_REGISTER_ULONG((PULONG)&pCtrl->byte_test, 0);
; 662  :     //while ( !(PMT_CTL_READY & READ_REGISTER_ULONG((PULONG)&pCtrl->pmt_ctrl)));
; 663  : 
; 664  :     if (pdwID)    

  00ff8	e59d3020	 ldr         r3, [sp, #0x20]
  00ffc	e3530000	 cmp         r3, #0
  01000	0a000002	 beq         |$LN1@LAN911XFin|

; 665  :         *pdwID = dwTemp;

  01004	e59d2000	 ldr         r2, [sp]
  01008	e59d3020	 ldr         r3, [sp, #0x20]
  0100c	e5832000	 str         r2, [r3]
  01010		 |$LN1@LAN911XFin|

; 666  : 
; 667  :     RetCode = TRUE;

  01010	e3a03001	 mov         r3, #1
  01014	e58d3004	 str         r3, [sp, #4]
  01018		 |$ErrorReturn$43367|

; 668  : 
; 669  : ErrorReturn:
; 670  :     return RetCode;

  01018	e59d3004	 ldr         r3, [sp, #4]
  0101c	e58d300c	 str         r3, [sp, #0xC]

; 671  : }

  01020	e59d000c	 ldr         r0, [sp, #0xC]
  01024	e28dd014	 add         sp, sp, #0x14
  01028	e89d6000	 ldmia       sp, {sp, lr}
  0102c	e12fff1e	 bx          lr
  01030		 |$LN12@LAN911XFin|
  01030		 |$LN13@LAN911XFin|
  01030	00000000	 DCD         |??_C@_1EG@KGEACGLH@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAE?$AAt?$AAh?$AAe?$AAr?$AAn?$AAe?$AAt?$AA?5?$AAc?$AAh?$AAi?$AAp?$AA?5?$AAI?$AAD?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?$CB@|
  01034		 |$LN14@LAN911XFin|
  01034	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  01038		 |$LN15@LAN911XFin|
  01038	00000000	 DCD         |??_C@_1KI@DMEFCEJ@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  0103c		 |$LN16@LAN911XFin|
  0103c	00000000	 DCD         |g_dwChipId|
  01040		 |$M43658|

			 ENDP  ; |LAN911XFindController|


  00058			 AREA	 |.pdata|, PDATA
|$T43687| DCD	|$LN32@LAN911XGet@2|
	DCD	0x4000cc04
; Function compile flags: /Odtp

  01040			 AREA	 |.text|, CODE, ARM

  01040		 |LAN911XGetMacAddress| PROC

; 736  : {

  01040		 |$LN32@LAN911XGet@2|
  01040	e1a0c00d	 mov         r12, sp
  01044	e92d0003	 stmdb       sp!, {r0, r1}
  01048	e92d5000	 stmdb       sp!, {r12, lr}
  0104c	e24dd044	 sub         sp, sp, #0x44
  01050		 |$M43684|

; 737  :     BOOL RetCode = FALSE;

  01050	e3a03000	 mov         r3, #0
  01054	e58d3004	 str         r3, [sp, #4]

; 738  :     DWORD dwTemp;
; 739  :     LAN911X_REGS* pCtrl;
; 740  : 
; 741  :     if (!LAN911XFindController(pAddr,&dwTemp))

  01058	e28d1000	 add         r1, sp, #0
  0105c	e59d004c	 ldr         r0, [sp, #0x4C]
  01060	eb000000	 bl          LAN911XFindController
  01064	e58d0018	 str         r0, [sp, #0x18]
  01068	e59d3018	 ldr         r3, [sp, #0x18]
  0106c	e3530000	 cmp         r3, #0
  01070	1a000002	 bne         |$LN11@LAN911XGet@2|

; 742  :     {     
; 743  :         return FALSE;

  01074	e3a03000	 mov         r3, #0
  01078	e58d3014	 str         r3, [sp, #0x14]
  0107c	ea0000b5	 b           |$LN12@LAN911XGet@2|
  01080		 |$LN11@LAN911XGet@2|

; 744  :     }
; 745  : 
; 746  :     g_pLAN911X = pCtrl = (LAN911X_REGS*) pAddr;

  01080	e59d304c	 ldr         r3, [sp, #0x4C]
  01084	e58d3008	 str         r3, [sp, #8]
  01088	e59d2008	 ldr         r2, [sp, #8]
  0108c	e59f32d8	 ldr         r3, [pc, #0x2D8]
  01090	e5832000	 str         r2, [r3]

; 747  :     
; 748  : 	// Force update from eeprom    
; 749  :     WRITE_EEPROM_CMD(pCtrl, (ULONG) (E2P_CMD_RELOAD | E2P_CMD_TIMEOUT | E2P_CMD_BUSY ));

  01094	e59f32cc	 ldr         r3, [pc, #0x2CC]
  01098	e5932000	 ldr         r2, [r3]
  0109c	e3a03493	 mov         r3, #0x93, 8
  010a0	e3833811	 orr         r3, r3, #0x11, 16
  010a4	e1520003	 cmp         r2, r3
  010a8	1a000003	 bne         |$LN14@LAN911XGet@2|
  010ac	e59d3008	 ldr         r3, [sp, #8]
  010b0	e2833f6d	 add         r3, r3, #0x6D, 30
  010b4	e58d301c	 str         r3, [sp, #0x1C]
  010b8	ea000002	 b           |$LN15@LAN911XGet@2|
  010bc		 |$LN14@LAN911XGet@2|
  010bc	e59d3008	 ldr         r3, [sp, #8]
  010c0	e28330b0	 add         r3, r3, #0xB0
  010c4	e58d301c	 str         r3, [sp, #0x1C]
  010c8		 |$LN15@LAN911XGet@2|
  010c8	e59d301c	 ldr         r3, [sp, #0x1C]
  010cc	e58d300c	 str         r3, [sp, #0xC]
  010d0	e59f3290	 ldr         r3, [pc, #0x290]
  010d4	e5932000	 ldr         r2, [r3]
  010d8	e3a03493	 mov         r3, #0x93, 8
  010dc	e3833811	 orr         r3, r3, #0x11, 16
  010e0	e1520003	 cmp         r2, r3
  010e4	1a000002	 bne         |$LN16@LAN911XGet@2|
  010e8	e3a03802	 mov         r3, #2, 16
  010ec	e58d3020	 str         r3, [sp, #0x20]
  010f0	ea000001	 b           |$LN17@LAN911XGet@2|
  010f4		 |$LN16@LAN911XGet@2|
  010f4	e3a03c02	 mov         r3, #2, 24
  010f8	e58d3020	 str         r3, [sp, #0x20]
  010fc		 |$LN17@LAN911XGet@2|
  010fc	e59d3020	 ldr         r3, [sp, #0x20]
  01100	e3833207	 orr         r3, r3, #7, 4
  01104	e3832102	 orr         r2, r3, #2, 2
  01108	e59d300c	 ldr         r3, [sp, #0xC]
  0110c	e5832000	 str         r2, [r3]
  01110		 |$LN10@LAN911XGet@2|

; 750  :     // Check for MAC load from EEPROM done
; 751  :     while ( (E2P_CMD_BUSY & READ_EEPROM_CMD(pCtrl)));

  01110	e59f3250	 ldr         r3, [pc, #0x250]
  01114	e5932000	 ldr         r2, [r3]
  01118	e3a03493	 mov         r3, #0x93, 8
  0111c	e3833811	 orr         r3, r3, #0x11, 16
  01120	e1520003	 cmp         r2, r3
  01124	1a000003	 bne         |$LN18@LAN911XGet@2|
  01128	e59d3008	 ldr         r3, [sp, #8]
  0112c	e2833f6d	 add         r3, r3, #0x6D, 30
  01130	e58d3024	 str         r3, [sp, #0x24]
  01134	ea000002	 b           |$LN19@LAN911XGet@2|
  01138		 |$LN18@LAN911XGet@2|
  01138	e59d3008	 ldr         r3, [sp, #8]
  0113c	e28330b0	 add         r3, r3, #0xB0
  01140	e58d3024	 str         r3, [sp, #0x24]
  01144		 |$LN19@LAN911XGet@2|
  01144	e59d3024	 ldr         r3, [sp, #0x24]
  01148	e5933000	 ldr         r3, [r3]
  0114c	e3130102	 tst         r3, #2, 2
  01150	0a000000	 beq         |$LN9@LAN911XGet@2|
  01154	eaffffed	 b           |$LN10@LAN911XGet@2|
  01158		 |$LN9@LAN911XGet@2|
  01158		 |$LN8@LAN911XGet@2|

; 752  :     while ( !(PMT_CTL_READY & READ_REGISTER_ULONG((PULONG)&pCtrl->pmt_ctrl)));

  01158	e59d3008	 ldr         r3, [sp, #8]
  0115c	e2833084	 add         r3, r3, #0x84
  01160	e5933000	 ldr         r3, [r3]
  01164	e3130001	 tst         r3, #1
  01168	1a000000	 bne         |$LN7@LAN911XGet@2|
  0116c	eafffff9	 b           |$LN8@LAN911XGet@2|
  01170		 |$LN7@LAN911XGet@2|

; 753  :     
; 754  :     // do it TWICE because sometimes it doesn't wor properly with only one RELOAD
; 755  :     WRITE_EEPROM_CMD(pCtrl, (ULONG) (E2P_CMD_RELOAD | E2P_CMD_TIMEOUT | E2P_CMD_BUSY ));

  01170	e59f31f0	 ldr         r3, [pc, #0x1F0]
  01174	e5932000	 ldr         r2, [r3]
  01178	e3a03493	 mov         r3, #0x93, 8
  0117c	e3833811	 orr         r3, r3, #0x11, 16
  01180	e1520003	 cmp         r2, r3
  01184	1a000003	 bne         |$LN20@LAN911XGet@2|
  01188	e59d3008	 ldr         r3, [sp, #8]
  0118c	e2833f6d	 add         r3, r3, #0x6D, 30
  01190	e58d3028	 str         r3, [sp, #0x28]
  01194	ea000002	 b           |$LN21@LAN911XGet@2|
  01198		 |$LN20@LAN911XGet@2|
  01198	e59d3008	 ldr         r3, [sp, #8]
  0119c	e28330b0	 add         r3, r3, #0xB0
  011a0	e58d3028	 str         r3, [sp, #0x28]
  011a4		 |$LN21@LAN911XGet@2|
  011a4	e59d3028	 ldr         r3, [sp, #0x28]
  011a8	e58d3010	 str         r3, [sp, #0x10]
  011ac	e59f31b4	 ldr         r3, [pc, #0x1B4]
  011b0	e5932000	 ldr         r2, [r3]
  011b4	e3a03493	 mov         r3, #0x93, 8
  011b8	e3833811	 orr         r3, r3, #0x11, 16
  011bc	e1520003	 cmp         r2, r3
  011c0	1a000002	 bne         |$LN22@LAN911XGet@2|
  011c4	e3a03802	 mov         r3, #2, 16
  011c8	e58d302c	 str         r3, [sp, #0x2C]
  011cc	ea000001	 b           |$LN23@LAN911XGet@2|
  011d0		 |$LN22@LAN911XGet@2|
  011d0	e3a03c02	 mov         r3, #2, 24
  011d4	e58d302c	 str         r3, [sp, #0x2C]
  011d8		 |$LN23@LAN911XGet@2|
  011d8	e59d302c	 ldr         r3, [sp, #0x2C]
  011dc	e3833207	 orr         r3, r3, #7, 4
  011e0	e3832102	 orr         r2, r3, #2, 2
  011e4	e59d3010	 ldr         r3, [sp, #0x10]
  011e8	e5832000	 str         r2, [r3]
  011ec		 |$LN6@LAN911XGet@2|

; 756  :     while ( (E2P_CMD_BUSY & READ_EEPROM_CMD(pCtrl)));

  011ec	e59f3174	 ldr         r3, [pc, #0x174]
  011f0	e5932000	 ldr         r2, [r3]
  011f4	e3a03493	 mov         r3, #0x93, 8
  011f8	e3833811	 orr         r3, r3, #0x11, 16
  011fc	e1520003	 cmp         r2, r3
  01200	1a000003	 bne         |$LN24@LAN911XGet@2|
  01204	e59d3008	 ldr         r3, [sp, #8]
  01208	e2833f6d	 add         r3, r3, #0x6D, 30
  0120c	e58d3030	 str         r3, [sp, #0x30]
  01210	ea000002	 b           |$LN25@LAN911XGet@2|
  01214		 |$LN24@LAN911XGet@2|
  01214	e59d3008	 ldr         r3, [sp, #8]
  01218	e28330b0	 add         r3, r3, #0xB0
  0121c	e58d3030	 str         r3, [sp, #0x30]
  01220		 |$LN25@LAN911XGet@2|
  01220	e59d3030	 ldr         r3, [sp, #0x30]
  01224	e5933000	 ldr         r3, [r3]
  01228	e3130102	 tst         r3, #2, 2
  0122c	0a000000	 beq         |$LN5@LAN911XGet@2|
  01230	eaffffed	 b           |$LN6@LAN911XGet@2|
  01234		 |$LN5@LAN911XGet@2|
  01234		 |$LN4@LAN911XGet@2|

; 757  :     while ( !(PMT_CTL_READY & READ_REGISTER_ULONG((PULONG)&pCtrl->pmt_ctrl)));

  01234	e59d3008	 ldr         r3, [sp, #8]
  01238	e2833084	 add         r3, r3, #0x84
  0123c	e5933000	 ldr         r3, [r3]
  01240	e3130001	 tst         r3, #1
  01244	1a000000	 bne         |$LN3@LAN911XGet@2|
  01248	eafffff9	 b           |$LN4@LAN911XGet@2|
  0124c		 |$LN3@LAN911XGet@2|

; 758  :     
; 759  : 
; 760  : 
; 761  :     if (!(E2P_CMD_MAC_LOADED & READ_EEPROM_CMD(pCtrl)))

  0124c	e59f3114	 ldr         r3, [pc, #0x114]
  01250	e5932000	 ldr         r2, [r3]
  01254	e3a03493	 mov         r3, #0x93, 8
  01258	e3833811	 orr         r3, r3, #0x11, 16
  0125c	e1520003	 cmp         r2, r3
  01260	1a000002	 bne         |$LN26@LAN911XGet@2|
  01264	e3a03801	 mov         r3, #1, 16
  01268	e58d3034	 str         r3, [sp, #0x34]
  0126c	ea000001	 b           |$LN27@LAN911XGet@2|
  01270		 |$LN26@LAN911XGet@2|
  01270	e3a03c01	 mov         r3, #1, 24
  01274	e58d3034	 str         r3, [sp, #0x34]
  01278		 |$LN27@LAN911XGet@2|
  01278	e59f30e8	 ldr         r3, [pc, #0xE8]
  0127c	e5932000	 ldr         r2, [r3]
  01280	e3a03493	 mov         r3, #0x93, 8
  01284	e3833811	 orr         r3, r3, #0x11, 16
  01288	e1520003	 cmp         r2, r3
  0128c	1a000003	 bne         |$LN28@LAN911XGet@2|
  01290	e59d3008	 ldr         r3, [sp, #8]
  01294	e2833f6d	 add         r3, r3, #0x6D, 30
  01298	e58d3038	 str         r3, [sp, #0x38]
  0129c	ea000002	 b           |$LN29@LAN911XGet@2|
  012a0		 |$LN28@LAN911XGet@2|
  012a0	e59d3008	 ldr         r3, [sp, #8]
  012a4	e28330b0	 add         r3, r3, #0xB0
  012a8	e58d3038	 str         r3, [sp, #0x38]
  012ac		 |$LN29@LAN911XGet@2|
  012ac	e59d3038	 ldr         r3, [sp, #0x38]
  012b0	e5932000	 ldr         r2, [r3]
  012b4	e59d3034	 ldr         r3, [sp, #0x34]
  012b8	e1130002	 tst         r3, r2
  012bc	1a000001	 bne         |$LN2@LAN911XGet@2|

; 762  :     {
; 763  : #if defined(SIMULATED_MAC_ADDRESS0) && defined(SIMULATED_MAC_ADDRESS1) && defined(SIMULATED_MAC_ADDRESS2)
; 764  :         mac[0] = SIMULATED_MAC_ADDRESS0;
; 765  :         mac[1] = SIMULATED_MAC_ADDRESS1;
; 766  :         mac[2] = SIMULATED_MAC_ADDRESS2;
; 767  :         WriteMacCSR(MAC_ADDRL_INDEX, ((DWORD) mac[1]) << 16 | mac[0]);
; 768  :         WriteMacCSR(MAC_ADDRH_INDEX, (DWORD) mac[2]);
; 769  :         RetCode = TRUE;
; 770  : #else
; 771  :         goto ErrorReturn;

  012c0	ea000022	 b           |$ErrorReturn$43456|

; 772  : #endif
; 773  :     }
; 774  :     else

  012c4	ea000021	 b           |$LN1@LAN911XGet@2|
  012c8		 |$LN2@LAN911XGet@2|

; 775  :     {
; 776  :         dwTemp = ReadMacCSR(MAC_ADDRL_INDEX);

  012c8	e3a00003	 mov         r0, #3
  012cc	eb000000	 bl          ReadMacCSR
  012d0	e58d003c	 str         r0, [sp, #0x3C]
  012d4	e59d303c	 ldr         r3, [sp, #0x3C]
  012d8	e58d3000	 str         r3, [sp]

; 777  :         mac[0] = (UINT16)(dwTemp & 0xFFFF);

  012dc	e59d2000	 ldr         r2, [sp]
  012e0	e3a03cff	 mov         r3, #0xFF, 24
  012e4	e38330ff	 orr         r3, r3, #0xFF
  012e8	e0023003	 and         r3, r2, r3
  012ec	e1a02803	 mov         r2, r3, lsl #16
  012f0	e1a02822	 mov         r2, r2, lsr #16
  012f4	e59d3050	 ldr         r3, [sp, #0x50]
  012f8	e1c320b0	 strh        r2, [r3]

; 778  :         mac[1] = (UINT16)(dwTemp >> 16);

  012fc	e59d3000	 ldr         r3, [sp]
  01300	e1a03823	 mov         r3, r3, lsr #16
  01304	e1a02803	 mov         r2, r3, lsl #16
  01308	e1a02822	 mov         r2, r2, lsr #16
  0130c	e59d3050	 ldr         r3, [sp, #0x50]
  01310	e2833002	 add         r3, r3, #2
  01314	e1c320b0	 strh        r2, [r3]

; 779  :         mac[2] = (UINT16)(ReadMacCSR(MAC_ADDRH_INDEX) & 0xFFFF);

  01318	e3a00002	 mov         r0, #2
  0131c	eb000000	 bl          ReadMacCSR
  01320	e58d0040	 str         r0, [sp, #0x40]
  01324	e59d2040	 ldr         r2, [sp, #0x40]
  01328	e3a03cff	 mov         r3, #0xFF, 24
  0132c	e38330ff	 orr         r3, r3, #0xFF
  01330	e0023003	 and         r3, r2, r3
  01334	e1a02803	 mov         r2, r3, lsl #16
  01338	e1a02822	 mov         r2, r2, lsr #16
  0133c	e59d3050	 ldr         r3, [sp, #0x50]
  01340	e2833004	 add         r3, r3, #4
  01344	e1c320b0	 strh        r2, [r3]

; 780  :         RetCode = TRUE;

  01348	e3a03001	 mov         r3, #1
  0134c	e58d3004	 str         r3, [sp, #4]
  01350		 |$LN1@LAN911XGet@2|
  01350		 |$ErrorReturn$43456|

; 781  :     }
; 782  : 
; 783  : #if !defined(SIMULATED_MAC_ADDRESS0) || !defined(SIMULATED_MAC_ADDRESS1) || !defined(SIMULATED_MAC_ADDRESS2)
; 784  : ErrorReturn:
; 785  : #endif
; 786  :     return RetCode;

  01350	e59d3004	 ldr         r3, [sp, #4]
  01354	e58d3014	 str         r3, [sp, #0x14]
  01358		 |$LN12@LAN911XGet@2|

; 787  : }

  01358	e59d0014	 ldr         r0, [sp, #0x14]
  0135c	e28dd044	 add         sp, sp, #0x44
  01360	e89d6000	 ldmia       sp, {sp, lr}
  01364	e12fff1e	 bx          lr
  01368		 |$LN33@LAN911XGet@2|
  01368		 |$LN34@LAN911XGet@2|
  01368	00000000	 DCD         |g_dwChipId|
  0136c		 |$LN35@LAN911XGet@2|
  0136c	00000000	 DCD         |g_pLAN911X|
  01370		 |$M43685|

			 ENDP  ; |LAN911XGetMacAddress|

	EXPORT	|LAN911XSetMacAddress|

  00060			 AREA	 |.pdata|, PDATA
|$T43702| DCD	|$LN15@LAN911XSet|
	DCD	0x40005604
; Function compile flags: /Odtp

  01370			 AREA	 |.text|, CODE, ARM

  01370		 |LAN911XSetMacAddress| PROC

; 790  : {

  01370		 |$LN15@LAN911XSet|
  01370	e1a0c00d	 mov         r12, sp
  01374	e92d0003	 stmdb       sp!, {r0, r1}
  01378	e92d5000	 stmdb       sp!, {r12, lr}
  0137c	e24dd028	 sub         sp, sp, #0x28
  01380		 |$M43699|

; 791  :     BOOL RetCode = FALSE;

  01380	e3a03000	 mov         r3, #0
  01384	e58d3004	 str         r3, [sp, #4]

; 792  :     UINT8 temp;    
; 793  :     LAN911X_REGS* pCtrl;
; 794  : 
; 795  :     pCtrl = (LAN911X_REGS*) pAddr;

  01388	e59d3030	 ldr         r3, [sp, #0x30]
  0138c	e58d3008	 str         r3, [sp, #8]

; 796  :  
; 797  :     // Write leading 0xa5
; 798  :     temp = 0xA5;

  01390	e3a030a5	 mov         r3, #0xA5
  01394	e5cd3000	 strb        r3, [sp]

; 799  :     if (!LAN911XEepromWrite(&temp, 1, 0))

  01398	e3a02000	 mov         r2, #0
  0139c	e3a01001	 mov         r1, #1
  013a0	e28d0000	 add         r0, sp, #0
  013a4	eb000000	 bl          LAN911XEepromWrite
  013a8	e58d0014	 str         r0, [sp, #0x14]
  013ac	e59d3014	 ldr         r3, [sp, #0x14]
  013b0	e3530000	 cmp         r3, #0
  013b4	1a000000	 bne         |$LN4@LAN911XSet|

; 800  :     {
; 801  :         goto ErrorReturn;

  013b8	ea00003b	 b           |$ErrorReturn$43472|
  013bc		 |$LN4@LAN911XSet|

; 802  :     }
; 803  : 
; 804  :     // Write MAC address
; 805  :     if (!LAN911XEepromWrite((UINT8 *)mac, 6, 1))

  013bc	e3a02001	 mov         r2, #1
  013c0	e3a01006	 mov         r1, #6
  013c4	e59d0034	 ldr         r0, [sp, #0x34]
  013c8	eb000000	 bl          LAN911XEepromWrite
  013cc	e58d0018	 str         r0, [sp, #0x18]
  013d0	e59d3018	 ldr         r3, [sp, #0x18]
  013d4	e3530000	 cmp         r3, #0
  013d8	1a000000	 bne         |$LN3@LAN911XSet|

; 806  :     {
; 807  :         goto ErrorReturn;

  013dc	ea000032	 b           |$ErrorReturn$43472|
  013e0		 |$LN3@LAN911XSet|

; 808  :     }
; 809  :     
; 810  :     // Force reload of MAC
; 811  :     WRITE_EEPROM_CMD(pCtrl, (ULONG) (E2P_CMD_RELOAD | E2P_CMD_TIMEOUT | E2P_CMD_BUSY ));

  013e0	e59f30dc	 ldr         r3, [pc, #0xDC]
  013e4	e5932000	 ldr         r2, [r3]
  013e8	e3a03493	 mov         r3, #0x93, 8
  013ec	e3833811	 orr         r3, r3, #0x11, 16
  013f0	e1520003	 cmp         r2, r3
  013f4	1a000003	 bne         |$LN7@LAN911XSet|
  013f8	e59d3008	 ldr         r3, [sp, #8]
  013fc	e2833f6d	 add         r3, r3, #0x6D, 30
  01400	e58d301c	 str         r3, [sp, #0x1C]
  01404	ea000002	 b           |$LN8@LAN911XSet|
  01408		 |$LN7@LAN911XSet|
  01408	e59d3008	 ldr         r3, [sp, #8]
  0140c	e28330b0	 add         r3, r3, #0xB0
  01410	e58d301c	 str         r3, [sp, #0x1C]
  01414		 |$LN8@LAN911XSet|
  01414	e59d301c	 ldr         r3, [sp, #0x1C]
  01418	e58d300c	 str         r3, [sp, #0xC]
  0141c	e59f30a0	 ldr         r3, [pc, #0xA0]
  01420	e5932000	 ldr         r2, [r3]
  01424	e3a03493	 mov         r3, #0x93, 8
  01428	e3833811	 orr         r3, r3, #0x11, 16
  0142c	e1520003	 cmp         r2, r3
  01430	1a000002	 bne         |$LN9@LAN911XSet|
  01434	e3a03802	 mov         r3, #2, 16
  01438	e58d3020	 str         r3, [sp, #0x20]
  0143c	ea000001	 b           |$LN10@LAN911XSet|
  01440		 |$LN9@LAN911XSet|
  01440	e3a03c02	 mov         r3, #2, 24
  01444	e58d3020	 str         r3, [sp, #0x20]
  01448		 |$LN10@LAN911XSet|
  01448	e59d3020	 ldr         r3, [sp, #0x20]
  0144c	e3833207	 orr         r3, r3, #7, 4
  01450	e3832102	 orr         r2, r3, #2, 2
  01454	e59d300c	 ldr         r3, [sp, #0xC]
  01458	e5832000	 str         r2, [r3]
  0145c		 |$LN2@LAN911XSet|

; 812  :     // Wait for command to complete
; 813  :     while ( (E2P_CMD_BUSY & READ_EEPROM_CMD(pCtrl)));

  0145c	e59f3060	 ldr         r3, [pc, #0x60]
  01460	e5932000	 ldr         r2, [r3]
  01464	e3a03493	 mov         r3, #0x93, 8
  01468	e3833811	 orr         r3, r3, #0x11, 16
  0146c	e1520003	 cmp         r2, r3
  01470	1a000003	 bne         |$LN11@LAN911XSet|
  01474	e59d3008	 ldr         r3, [sp, #8]
  01478	e2833f6d	 add         r3, r3, #0x6D, 30
  0147c	e58d3024	 str         r3, [sp, #0x24]
  01480	ea000002	 b           |$LN12@LAN911XSet|
  01484		 |$LN11@LAN911XSet|
  01484	e59d3008	 ldr         r3, [sp, #8]
  01488	e28330b0	 add         r3, r3, #0xB0
  0148c	e58d3024	 str         r3, [sp, #0x24]
  01490		 |$LN12@LAN911XSet|
  01490	e59d3024	 ldr         r3, [sp, #0x24]
  01494	e5933000	 ldr         r3, [r3]
  01498	e3130102	 tst         r3, #2, 2
  0149c	0a000000	 beq         |$LN1@LAN911XSet|
  014a0	eaffffed	 b           |$LN2@LAN911XSet|
  014a4		 |$LN1@LAN911XSet|

; 814  : 
; 815  :     RetCode = TRUE;

  014a4	e3a03001	 mov         r3, #1
  014a8	e58d3004	 str         r3, [sp, #4]
  014ac		 |$ErrorReturn$43472|

; 816  : 
; 817  : ErrorReturn:
; 818  :     return RetCode;

  014ac	e59d3004	 ldr         r3, [sp, #4]
  014b0	e58d3010	 str         r3, [sp, #0x10]

; 819  : }

  014b4	e59d0010	 ldr         r0, [sp, #0x10]
  014b8	e28dd028	 add         sp, sp, #0x28
  014bc	e89d6000	 ldmia       sp, {sp, lr}
  014c0	e12fff1e	 bx          lr
  014c4		 |$LN16@LAN911XSet|
  014c4		 |$LN17@LAN911XSet|
  014c4	00000000	 DCD         |g_dwChipId|
  014c8		 |$M43700|

			 ENDP  ; |LAN911XSetMacAddress|


  00068			 AREA	 |.pdata|, PDATA
|$T43750| DCD	|$LN61@LAN911XEep|
	DCD	0x40018304
; Function compile flags: /Odtp

  014c8			 AREA	 |.text|, CODE, ARM

  014c8		 |LAN911XEepromWrite| PROC

; 676  : {

  014c8		 |$LN61@LAN911XEep|
  014c8	e1a0c00d	 mov         r12, sp
  014cc	e92d0007	 stmdb       sp!, {r0 - r2}
  014d0	e92d5000	 stmdb       sp!, {r12, lr}
  014d4	e24dd06c	 sub         sp, sp, #0x6C
  014d8		 |$M43747|

; 677  :     UINT8 index;
; 678  :     BOOL RetCode = FALSE;

  014d8	e3a03000	 mov         r3, #0
  014dc	e58d3004	 str         r3, [sp, #4]
  014e0		 |$LN16@LAN911XEep|

; 679  : 
; 680  :     // Unlock eeprom
; 681  :     while ( (E2P_CMD_BUSY & READ_EEPROM_CMD(g_pLAN911X)));

  014e0	e59f35e8	 ldr         r3, [pc, #0x5E8]
  014e4	e5932000	 ldr         r2, [r3]
  014e8	e3a03493	 mov         r3, #0x93, 8
  014ec	e3833811	 orr         r3, r3, #0x11, 16
  014f0	e1520003	 cmp         r2, r3
  014f4	1a000004	 bne         |$LN19@LAN911XEep|
  014f8	e59f35cc	 ldr         r3, [pc, #0x5CC]
  014fc	e5933000	 ldr         r3, [r3]
  01500	e2833f6d	 add         r3, r3, #0x6D, 30
  01504	e58d301c	 str         r3, [sp, #0x1C]
  01508	ea000003	 b           |$LN20@LAN911XEep|
  0150c		 |$LN19@LAN911XEep|
  0150c	e59f35b8	 ldr         r3, [pc, #0x5B8]
  01510	e5933000	 ldr         r3, [r3]
  01514	e28330b0	 add         r3, r3, #0xB0
  01518	e58d301c	 str         r3, [sp, #0x1C]
  0151c		 |$LN20@LAN911XEep|
  0151c	e59d301c	 ldr         r3, [sp, #0x1C]
  01520	e5933000	 ldr         r3, [r3]
  01524	e3130102	 tst         r3, #2, 2
  01528	0a000000	 beq         |$LN15@LAN911XEep|
  0152c	eaffffeb	 b           |$LN16@LAN911XEep|
  01530		 |$LN15@LAN911XEep|

; 682  :     // Issue erase/write enable
; 683  :     WRITE_EEPROM_CMD(g_pLAN911X, (ULONG) (E2P_CMD_EWEN | E2P_CMD_TIMEOUT | E2P_CMD_BUSY ));

  01530	e59f3598	 ldr         r3, [pc, #0x598]
  01534	e5932000	 ldr         r2, [r3]
  01538	e3a03493	 mov         r3, #0x93, 8
  0153c	e3833811	 orr         r3, r3, #0x11, 16
  01540	e1520003	 cmp         r2, r3
  01544	1a000004	 bne         |$LN21@LAN911XEep|
  01548	e59f357c	 ldr         r3, [pc, #0x57C]
  0154c	e5933000	 ldr         r3, [r3]
  01550	e2833f6d	 add         r3, r3, #0x6D, 30
  01554	e58d3020	 str         r3, [sp, #0x20]
  01558	ea000003	 b           |$LN22@LAN911XEep|
  0155c		 |$LN21@LAN911XEep|
  0155c	e59f3568	 ldr         r3, [pc, #0x568]
  01560	e5933000	 ldr         r3, [r3]
  01564	e28330b0	 add         r3, r3, #0xB0
  01568	e58d3020	 str         r3, [sp, #0x20]
  0156c		 |$LN22@LAN911XEep|
  0156c	e59d3020	 ldr         r3, [sp, #0x20]
  01570	e58d3008	 str         r3, [sp, #8]
  01574	e59f3554	 ldr         r3, [pc, #0x554]
  01578	e5932000	 ldr         r2, [r3]
  0157c	e3a03493	 mov         r3, #0x93, 8
  01580	e3833811	 orr         r3, r3, #0x11, 16
  01584	e1520003	 cmp         r2, r3
  01588	1a000002	 bne         |$LN23@LAN911XEep|
  0158c	e3a03802	 mov         r3, #2, 16
  01590	e58d3024	 str         r3, [sp, #0x24]
  01594	ea000001	 b           |$LN24@LAN911XEep|
  01598		 |$LN23@LAN911XEep|
  01598	e3a03c02	 mov         r3, #2, 24
  0159c	e58d3024	 str         r3, [sp, #0x24]
  015a0		 |$LN24@LAN911XEep|
  015a0	e59d3024	 ldr         r3, [sp, #0x24]
  015a4	e3833202	 orr         r3, r3, #2, 4
  015a8	e3832102	 orr         r2, r3, #2, 2
  015ac	e59d3008	 ldr         r3, [sp, #8]
  015b0	e5832000	 str         r2, [r3]
  015b4		 |$LN14@LAN911XEep|

; 684  :     // Wait for command to complete
; 685  :     while ( (E2P_CMD_BUSY & READ_EEPROM_CMD(g_pLAN911X)));

  015b4	e59f3514	 ldr         r3, [pc, #0x514]
  015b8	e5932000	 ldr         r2, [r3]
  015bc	e3a03493	 mov         r3, #0x93, 8
  015c0	e3833811	 orr         r3, r3, #0x11, 16
  015c4	e1520003	 cmp         r2, r3
  015c8	1a000004	 bne         |$LN25@LAN911XEep|
  015cc	e59f34f8	 ldr         r3, [pc, #0x4F8]
  015d0	e5933000	 ldr         r3, [r3]
  015d4	e2833f6d	 add         r3, r3, #0x6D, 30
  015d8	e58d3028	 str         r3, [sp, #0x28]
  015dc	ea000003	 b           |$LN26@LAN911XEep|
  015e0		 |$LN25@LAN911XEep|
  015e0	e59f34e4	 ldr         r3, [pc, #0x4E4]
  015e4	e5933000	 ldr         r3, [r3]
  015e8	e28330b0	 add         r3, r3, #0xB0
  015ec	e58d3028	 str         r3, [sp, #0x28]
  015f0		 |$LN26@LAN911XEep|
  015f0	e59d3028	 ldr         r3, [sp, #0x28]
  015f4	e5933000	 ldr         r3, [r3]
  015f8	e3130102	 tst         r3, #2, 2
  015fc	0a000000	 beq         |$LN13@LAN911XEep|
  01600	eaffffeb	 b           |$LN14@LAN911XEep|
  01604		 |$LN13@LAN911XEep|

; 686  :     // Check for timeout
; 687  :     if (E2P_CMD_TIMEOUT & READ_EEPROM_CMD(g_pLAN911X))

  01604	e59f34c4	 ldr         r3, [pc, #0x4C4]
  01608	e5932000	 ldr         r2, [r3]
  0160c	e3a03493	 mov         r3, #0x93, 8
  01610	e3833811	 orr         r3, r3, #0x11, 16
  01614	e1520003	 cmp         r2, r3
  01618	1a000002	 bne         |$LN27@LAN911XEep|
  0161c	e3a03802	 mov         r3, #2, 16
  01620	e58d302c	 str         r3, [sp, #0x2C]
  01624	ea000001	 b           |$LN28@LAN911XEep|
  01628		 |$LN27@LAN911XEep|
  01628	e3a03c02	 mov         r3, #2, 24
  0162c	e58d302c	 str         r3, [sp, #0x2C]
  01630		 |$LN28@LAN911XEep|
  01630	e59f3498	 ldr         r3, [pc, #0x498]
  01634	e5932000	 ldr         r2, [r3]
  01638	e3a03493	 mov         r3, #0x93, 8
  0163c	e3833811	 orr         r3, r3, #0x11, 16
  01640	e1520003	 cmp         r2, r3
  01644	1a000004	 bne         |$LN29@LAN911XEep|
  01648	e59f347c	 ldr         r3, [pc, #0x47C]
  0164c	e5933000	 ldr         r3, [r3]
  01650	e2833f6d	 add         r3, r3, #0x6D, 30
  01654	e58d3030	 str         r3, [sp, #0x30]
  01658	ea000003	 b           |$LN30@LAN911XEep|
  0165c		 |$LN29@LAN911XEep|
  0165c	e59f3468	 ldr         r3, [pc, #0x468]
  01660	e5933000	 ldr         r3, [r3]
  01664	e28330b0	 add         r3, r3, #0xB0
  01668	e58d3030	 str         r3, [sp, #0x30]
  0166c		 |$LN30@LAN911XEep|
  0166c	e59d3030	 ldr         r3, [sp, #0x30]
  01670	e5932000	 ldr         r2, [r3]
  01674	e59d302c	 ldr         r3, [sp, #0x2C]
  01678	e1130002	 tst         r3, r2
  0167c	0a000000	 beq         |$LN12@LAN911XEep|

; 688  :     {
; 689  :         goto ErrorReturn;

  01680	ea0000d6	 b           |$ErrorReturn$43392|
  01684		 |$LN12@LAN911XEep|

; 690  :     }
; 691  :     index = 0;

  01684	e3a03000	 mov         r3, #0
  01688	e5cd3000	 strb        r3, [sp]
  0168c		 |$LN11@LAN911XEep|

; 692  :     
; 693  : 
; 694  :     do 
; 695  :     {
; 696  :         // Erase location
; 697  :         WRITE_EEPROM_CMD(g_pLAN911X, (Offset + index) | E2P_CMD_ERASE | E2P_CMD_TIMEOUT | E2P_CMD_BUSY );

  0168c	e59f343c	 ldr         r3, [pc, #0x43C]
  01690	e5932000	 ldr         r2, [r3]
  01694	e3a03493	 mov         r3, #0x93, 8
  01698	e3833811	 orr         r3, r3, #0x11, 16
  0169c	e1520003	 cmp         r2, r3
  016a0	1a000004	 bne         |$LN31@LAN911XEep|
  016a4	e59f3420	 ldr         r3, [pc, #0x420]
  016a8	e5933000	 ldr         r3, [r3]
  016ac	e2833f6d	 add         r3, r3, #0x6D, 30
  016b0	e58d3034	 str         r3, [sp, #0x34]
  016b4	ea000003	 b           |$LN32@LAN911XEep|
  016b8		 |$LN31@LAN911XEep|
  016b8	e59f340c	 ldr         r3, [pc, #0x40C]
  016bc	e5933000	 ldr         r3, [r3]
  016c0	e28330b0	 add         r3, r3, #0xB0
  016c4	e58d3034	 str         r3, [sp, #0x34]
  016c8		 |$LN32@LAN911XEep|
  016c8	e59d3034	 ldr         r3, [sp, #0x34]
  016cc	e58d300c	 str         r3, [sp, #0xC]
  016d0	e59f33f8	 ldr         r3, [pc, #0x3F8]
  016d4	e5932000	 ldr         r2, [r3]
  016d8	e3a03493	 mov         r3, #0x93, 8
  016dc	e3833811	 orr         r3, r3, #0x11, 16
  016e0	e1520003	 cmp         r2, r3
  016e4	1a000002	 bne         |$LN33@LAN911XEep|
  016e8	e3a03802	 mov         r3, #2, 16
  016ec	e58d3038	 str         r3, [sp, #0x38]
  016f0	ea000001	 b           |$LN34@LAN911XEep|
  016f4		 |$LN33@LAN911XEep|
  016f4	e3a03c02	 mov         r3, #2, 24
  016f8	e58d3038	 str         r3, [sp, #0x38]
  016fc		 |$LN34@LAN911XEep|
  016fc	e5dd307c	 ldrb        r3, [sp, #0x7C]
  01700	e1a02003	 mov         r2, r3
  01704	e5dd3000	 ldrb        r3, [sp]
  01708	e0823003	 add         r3, r2, r3
  0170c	e3832205	 orr         r2, r3, #5, 4
  01710	e59d3038	 ldr         r3, [sp, #0x38]
  01714	e1823003	 orr         r3, r2, r3
  01718	e3832102	 orr         r2, r3, #2, 2
  0171c	e59d300c	 ldr         r3, [sp, #0xC]
  01720	e5832000	 str         r2, [r3]
  01724		 |$LN8@LAN911XEep|

; 698  :         // Wait for command to complete
; 699  :         while ( (E2P_CMD_BUSY & READ_EEPROM_CMD(g_pLAN911X)));

  01724	e59f33a4	 ldr         r3, [pc, #0x3A4]
  01728	e5932000	 ldr         r2, [r3]
  0172c	e3a03493	 mov         r3, #0x93, 8
  01730	e3833811	 orr         r3, r3, #0x11, 16
  01734	e1520003	 cmp         r2, r3
  01738	1a000004	 bne         |$LN35@LAN911XEep|
  0173c	e59f3388	 ldr         r3, [pc, #0x388]
  01740	e5933000	 ldr         r3, [r3]
  01744	e2833f6d	 add         r3, r3, #0x6D, 30
  01748	e58d303c	 str         r3, [sp, #0x3C]
  0174c	ea000003	 b           |$LN36@LAN911XEep|
  01750		 |$LN35@LAN911XEep|
  01750	e59f3374	 ldr         r3, [pc, #0x374]
  01754	e5933000	 ldr         r3, [r3]
  01758	e28330b0	 add         r3, r3, #0xB0
  0175c	e58d303c	 str         r3, [sp, #0x3C]
  01760		 |$LN36@LAN911XEep|
  01760	e59d303c	 ldr         r3, [sp, #0x3C]
  01764	e5933000	 ldr         r3, [r3]
  01768	e3130102	 tst         r3, #2, 2
  0176c	0a000000	 beq         |$LN7@LAN911XEep|
  01770	eaffffeb	 b           |$LN8@LAN911XEep|
  01774		 |$LN7@LAN911XEep|

; 700  : 
; 701  :         // Check for timeout
; 702  :         if (E2P_CMD_TIMEOUT & READ_EEPROM_CMD(g_pLAN911X))

  01774	e59f3354	 ldr         r3, [pc, #0x354]
  01778	e5932000	 ldr         r2, [r3]
  0177c	e3a03493	 mov         r3, #0x93, 8
  01780	e3833811	 orr         r3, r3, #0x11, 16
  01784	e1520003	 cmp         r2, r3
  01788	1a000002	 bne         |$LN37@LAN911XEep|
  0178c	e3a03802	 mov         r3, #2, 16
  01790	e58d3040	 str         r3, [sp, #0x40]
  01794	ea000001	 b           |$LN38@LAN911XEep|
  01798		 |$LN37@LAN911XEep|
  01798	e3a03c02	 mov         r3, #2, 24
  0179c	e58d3040	 str         r3, [sp, #0x40]
  017a0		 |$LN38@LAN911XEep|
  017a0	e59f3328	 ldr         r3, [pc, #0x328]
  017a4	e5932000	 ldr         r2, [r3]
  017a8	e3a03493	 mov         r3, #0x93, 8
  017ac	e3833811	 orr         r3, r3, #0x11, 16
  017b0	e1520003	 cmp         r2, r3
  017b4	1a000004	 bne         |$LN39@LAN911XEep|
  017b8	e59f330c	 ldr         r3, [pc, #0x30C]
  017bc	e5933000	 ldr         r3, [r3]
  017c0	e2833f6d	 add         r3, r3, #0x6D, 30
  017c4	e58d3044	 str         r3, [sp, #0x44]
  017c8	ea000003	 b           |$LN40@LAN911XEep|
  017cc		 |$LN39@LAN911XEep|
  017cc	e59f32f8	 ldr         r3, [pc, #0x2F8]
  017d0	e5933000	 ldr         r3, [r3]
  017d4	e28330b0	 add         r3, r3, #0xB0
  017d8	e58d3044	 str         r3, [sp, #0x44]
  017dc		 |$LN40@LAN911XEep|
  017dc	e59d3044	 ldr         r3, [sp, #0x44]
  017e0	e5932000	 ldr         r2, [r3]
  017e4	e59d3040	 ldr         r3, [sp, #0x40]
  017e8	e1130002	 tst         r3, r2
  017ec	0a000000	 beq         |$LN6@LAN911XEep|

; 703  :         {            
; 704  :             goto ErrorReturn;

  017f0	ea00007a	 b           |$ErrorReturn$43392|
  017f4		 |$LN6@LAN911XEep|

; 705  :         }
; 706  :         
; 707  :         WRITE_EEPROM_DATA(g_pLAN911X, *pValue);

  017f4	e59f32d4	 ldr         r3, [pc, #0x2D4]
  017f8	e5932000	 ldr         r2, [r3]
  017fc	e3a03493	 mov         r3, #0x93, 8
  01800	e3833811	 orr         r3, r3, #0x11, 16
  01804	e1520003	 cmp         r2, r3
  01808	1a000004	 bne         |$LN41@LAN911XEep|
  0180c	e59f32b8	 ldr         r3, [pc, #0x2B8]
  01810	e5933000	 ldr         r3, [r3]
  01814	e2833f6e	 add         r3, r3, #0x6E, 30
  01818	e58d3048	 str         r3, [sp, #0x48]
  0181c	ea000003	 b           |$LN42@LAN911XEep|
  01820		 |$LN41@LAN911XEep|
  01820	e59f32a4	 ldr         r3, [pc, #0x2A4]
  01824	e5933000	 ldr         r3, [r3]
  01828	e28330b4	 add         r3, r3, #0xB4
  0182c	e58d3048	 str         r3, [sp, #0x48]
  01830		 |$LN42@LAN911XEep|
  01830	e59d3074	 ldr         r3, [sp, #0x74]
  01834	e5d32000	 ldrb        r2, [r3]
  01838	e59d3048	 ldr         r3, [sp, #0x48]
  0183c	e5832000	 str         r2, [r3]

; 708  :         WRITE_EEPROM_CMD(g_pLAN911X, (Offset + index) | E2P_CMD_WRITE | E2P_CMD_TIMEOUT | E2P_CMD_BUSY );

  01840	e59f3288	 ldr         r3, [pc, #0x288]
  01844	e5932000	 ldr         r2, [r3]
  01848	e3a03493	 mov         r3, #0x93, 8
  0184c	e3833811	 orr         r3, r3, #0x11, 16
  01850	e1520003	 cmp         r2, r3
  01854	1a000004	 bne         |$LN43@LAN911XEep|
  01858	e59f326c	 ldr         r3, [pc, #0x26C]
  0185c	e5933000	 ldr         r3, [r3]
  01860	e2833f6d	 add         r3, r3, #0x6D, 30
  01864	e58d304c	 str         r3, [sp, #0x4C]
  01868	ea000003	 b           |$LN44@LAN911XEep|
  0186c		 |$LN43@LAN911XEep|
  0186c	e59f3258	 ldr         r3, [pc, #0x258]
  01870	e5933000	 ldr         r3, [r3]
  01874	e28330b0	 add         r3, r3, #0xB0
  01878	e58d304c	 str         r3, [sp, #0x4C]
  0187c		 |$LN44@LAN911XEep|
  0187c	e59d304c	 ldr         r3, [sp, #0x4C]
  01880	e58d3010	 str         r3, [sp, #0x10]
  01884	e59f3244	 ldr         r3, [pc, #0x244]
  01888	e5932000	 ldr         r2, [r3]
  0188c	e3a03493	 mov         r3, #0x93, 8
  01890	e3833811	 orr         r3, r3, #0x11, 16
  01894	e1520003	 cmp         r2, r3
  01898	1a000002	 bne         |$LN45@LAN911XEep|
  0189c	e3a03802	 mov         r3, #2, 16
  018a0	e58d3050	 str         r3, [sp, #0x50]
  018a4	ea000001	 b           |$LN46@LAN911XEep|
  018a8		 |$LN45@LAN911XEep|
  018a8	e3a03c02	 mov         r3, #2, 24
  018ac	e58d3050	 str         r3, [sp, #0x50]
  018b0		 |$LN46@LAN911XEep|
  018b0	e5dd307c	 ldrb        r3, [sp, #0x7C]
  018b4	e1a02003	 mov         r2, r3
  018b8	e5dd3000	 ldrb        r3, [sp]
  018bc	e0823003	 add         r3, r2, r3
  018c0	e3832203	 orr         r2, r3, #3, 4
  018c4	e59d3050	 ldr         r3, [sp, #0x50]
  018c8	e1823003	 orr         r3, r2, r3
  018cc	e3832102	 orr         r2, r3, #2, 2
  018d0	e59d3010	 ldr         r3, [sp, #0x10]
  018d4	e5832000	 str         r2, [r3]
  018d8		 |$LN5@LAN911XEep|

; 709  :         // Wait for command to complete
; 710  :         while ( (E2P_CMD_BUSY & READ_EEPROM_CMD(g_pLAN911X)));

  018d8	e59f31f0	 ldr         r3, [pc, #0x1F0]
  018dc	e5932000	 ldr         r2, [r3]
  018e0	e3a03493	 mov         r3, #0x93, 8
  018e4	e3833811	 orr         r3, r3, #0x11, 16
  018e8	e1520003	 cmp         r2, r3
  018ec	1a000004	 bne         |$LN47@LAN911XEep|
  018f0	e59f31d4	 ldr         r3, [pc, #0x1D4]
  018f4	e5933000	 ldr         r3, [r3]
  018f8	e2833f6d	 add         r3, r3, #0x6D, 30
  018fc	e58d3054	 str         r3, [sp, #0x54]
  01900	ea000003	 b           |$LN48@LAN911XEep|
  01904		 |$LN47@LAN911XEep|
  01904	e59f31c0	 ldr         r3, [pc, #0x1C0]
  01908	e5933000	 ldr         r3, [r3]
  0190c	e28330b0	 add         r3, r3, #0xB0
  01910	e58d3054	 str         r3, [sp, #0x54]
  01914		 |$LN48@LAN911XEep|
  01914	e59d3054	 ldr         r3, [sp, #0x54]
  01918	e5933000	 ldr         r3, [r3]
  0191c	e3130102	 tst         r3, #2, 2
  01920	0a000000	 beq         |$LN4@LAN911XEep|
  01924	eaffffeb	 b           |$LN5@LAN911XEep|
  01928		 |$LN4@LAN911XEep|

; 711  :         // Check for timeout
; 712  :         if (E2P_CMD_TIMEOUT & READ_EEPROM_CMD(g_pLAN911X))

  01928	e59f31a0	 ldr         r3, [pc, #0x1A0]
  0192c	e5932000	 ldr         r2, [r3]
  01930	e3a03493	 mov         r3, #0x93, 8
  01934	e3833811	 orr         r3, r3, #0x11, 16
  01938	e1520003	 cmp         r2, r3
  0193c	1a000002	 bne         |$LN49@LAN911XEep|
  01940	e3a03802	 mov         r3, #2, 16
  01944	e58d3058	 str         r3, [sp, #0x58]
  01948	ea000001	 b           |$LN50@LAN911XEep|
  0194c		 |$LN49@LAN911XEep|
  0194c	e3a03c02	 mov         r3, #2, 24
  01950	e58d3058	 str         r3, [sp, #0x58]
  01954		 |$LN50@LAN911XEep|
  01954	e59f3174	 ldr         r3, [pc, #0x174]
  01958	e5932000	 ldr         r2, [r3]
  0195c	e3a03493	 mov         r3, #0x93, 8
  01960	e3833811	 orr         r3, r3, #0x11, 16
  01964	e1520003	 cmp         r2, r3
  01968	1a000004	 bne         |$LN51@LAN911XEep|
  0196c	e59f3158	 ldr         r3, [pc, #0x158]
  01970	e5933000	 ldr         r3, [r3]
  01974	e2833f6d	 add         r3, r3, #0x6D, 30
  01978	e58d305c	 str         r3, [sp, #0x5C]
  0197c	ea000003	 b           |$LN52@LAN911XEep|
  01980		 |$LN51@LAN911XEep|
  01980	e59f3144	 ldr         r3, [pc, #0x144]
  01984	e5933000	 ldr         r3, [r3]
  01988	e28330b0	 add         r3, r3, #0xB0
  0198c	e58d305c	 str         r3, [sp, #0x5C]
  01990		 |$LN52@LAN911XEep|
  01990	e59d305c	 ldr         r3, [sp, #0x5C]
  01994	e5932000	 ldr         r2, [r3]
  01998	e59d3058	 ldr         r3, [sp, #0x58]
  0199c	e1130002	 tst         r3, r2
  019a0	0a000000	 beq         |$LN3@LAN911XEep|

; 713  :         {
; 714  :             goto ErrorReturn;

  019a4	ea00000d	 b           |$ErrorReturn$43392|
  019a8		 |$LN3@LAN911XEep|

; 715  :         }
; 716  : 
; 717  :         pValue++;

  019a8	e59d3074	 ldr         r3, [sp, #0x74]
  019ac	e2833001	 add         r3, r3, #1
  019b0	e58d3074	 str         r3, [sp, #0x74]

; 718  :         index++;

  019b4	e5dd3000	 ldrb        r3, [sp]
  019b8	e2833001	 add         r3, r3, #1
  019bc	e20330ff	 and         r3, r3, #0xFF
  019c0	e5cd3000	 strb        r3, [sp]

; 719  :     }
; 720  :     while (index < Length);

  019c4	e5dd3000	 ldrb        r3, [sp]
  019c8	e1a02003	 mov         r2, r3
  019cc	e5dd3078	 ldrb        r3, [sp, #0x78]
  019d0	e1520003	 cmp         r2, r3
  019d4	baffff2c	 blt         |$LN11@LAN911XEep|

; 721  : 
; 722  :     RetCode = TRUE;

  019d8	e3a03001	 mov         r3, #1
  019dc	e58d3004	 str         r3, [sp, #4]
  019e0		 |$ErrorReturn$43392|

; 723  : 
; 724  : ErrorReturn:
; 725  : 
; 726  :     // Issue erase/write disable
; 727  :     WRITE_EEPROM_CMD(g_pLAN911X,(ULONG)( E2P_CMD_EWDS | E2P_CMD_TIMEOUT | E2P_CMD_BUSY ));

  019e0	e59f30e8	 ldr         r3, [pc, #0xE8]
  019e4	e5932000	 ldr         r2, [r3]
  019e8	e3a03493	 mov         r3, #0x93, 8
  019ec	e3833811	 orr         r3, r3, #0x11, 16
  019f0	e1520003	 cmp         r2, r3
  019f4	1a000004	 bne         |$LN53@LAN911XEep|
  019f8	e59f30cc	 ldr         r3, [pc, #0xCC]
  019fc	e5933000	 ldr         r3, [r3]
  01a00	e2833f6d	 add         r3, r3, #0x6D, 30
  01a04	e58d3060	 str         r3, [sp, #0x60]
  01a08	ea000003	 b           |$LN54@LAN911XEep|
  01a0c		 |$LN53@LAN911XEep|
  01a0c	e59f30b8	 ldr         r3, [pc, #0xB8]
  01a10	e5933000	 ldr         r3, [r3]
  01a14	e28330b0	 add         r3, r3, #0xB0
  01a18	e58d3060	 str         r3, [sp, #0x60]
  01a1c		 |$LN54@LAN911XEep|
  01a1c	e59d3060	 ldr         r3, [sp, #0x60]
  01a20	e58d3014	 str         r3, [sp, #0x14]
  01a24	e59f30a4	 ldr         r3, [pc, #0xA4]
  01a28	e5932000	 ldr         r2, [r3]
  01a2c	e3a03493	 mov         r3, #0x93, 8
  01a30	e3833811	 orr         r3, r3, #0x11, 16
  01a34	e1520003	 cmp         r2, r3
  01a38	1a000002	 bne         |$LN55@LAN911XEep|
  01a3c	e3a03802	 mov         r3, #2, 16
  01a40	e58d3064	 str         r3, [sp, #0x64]
  01a44	ea000001	 b           |$LN56@LAN911XEep|
  01a48		 |$LN55@LAN911XEep|
  01a48	e3a03c02	 mov         r3, #2, 24
  01a4c	e58d3064	 str         r3, [sp, #0x64]
  01a50		 |$LN56@LAN911XEep|
  01a50	e59d3064	 ldr         r3, [sp, #0x64]
  01a54	e3833201	 orr         r3, r3, #1, 4
  01a58	e3832102	 orr         r2, r3, #2, 2
  01a5c	e59d3014	 ldr         r3, [sp, #0x14]
  01a60	e5832000	 str         r2, [r3]
  01a64		 |$LN2@LAN911XEep|

; 728  :     // Wait for command to complete
; 729  :     while ( (E2P_CMD_BUSY & READ_EEPROM_CMD(g_pLAN911X)));

  01a64	e59f3064	 ldr         r3, [pc, #0x64]
  01a68	e5932000	 ldr         r2, [r3]
  01a6c	e3a03493	 mov         r3, #0x93, 8
  01a70	e3833811	 orr         r3, r3, #0x11, 16
  01a74	e1520003	 cmp         r2, r3
  01a78	1a000004	 bne         |$LN57@LAN911XEep|
  01a7c	e59f3048	 ldr         r3, [pc, #0x48]
  01a80	e5933000	 ldr         r3, [r3]
  01a84	e2833f6d	 add         r3, r3, #0x6D, 30
  01a88	e58d3068	 str         r3, [sp, #0x68]
  01a8c	ea000003	 b           |$LN58@LAN911XEep|
  01a90		 |$LN57@LAN911XEep|
  01a90	e59f3034	 ldr         r3, [pc, #0x34]
  01a94	e5933000	 ldr         r3, [r3]
  01a98	e28330b0	 add         r3, r3, #0xB0
  01a9c	e58d3068	 str         r3, [sp, #0x68]
  01aa0		 |$LN58@LAN911XEep|
  01aa0	e59d3068	 ldr         r3, [sp, #0x68]
  01aa4	e5933000	 ldr         r3, [r3]
  01aa8	e3130102	 tst         r3, #2, 2
  01aac	0a000000	 beq         |$LN1@LAN911XEep|
  01ab0	eaffffeb	 b           |$LN2@LAN911XEep|
  01ab4		 |$LN1@LAN911XEep|

; 730  : 
; 731  :     return RetCode;

  01ab4	e59d3004	 ldr         r3, [sp, #4]
  01ab8	e58d3018	 str         r3, [sp, #0x18]

; 732  : }

  01abc	e59d0018	 ldr         r0, [sp, #0x18]
  01ac0	e28dd06c	 add         sp, sp, #0x6C
  01ac4	e89d6000	 ldmia       sp, {sp, lr}
  01ac8	e12fff1e	 bx          lr
  01acc		 |$LN62@LAN911XEep|
  01acc		 |$LN63@LAN911XEep|
  01acc	00000000	 DCD         |g_pLAN911X|
  01ad0		 |$LN64@LAN911XEep|
  01ad0	00000000	 DCD         |g_dwChipId|
  01ad4		 |$M43748|

			 ENDP  ; |LAN911XEepromWrite|

	END
